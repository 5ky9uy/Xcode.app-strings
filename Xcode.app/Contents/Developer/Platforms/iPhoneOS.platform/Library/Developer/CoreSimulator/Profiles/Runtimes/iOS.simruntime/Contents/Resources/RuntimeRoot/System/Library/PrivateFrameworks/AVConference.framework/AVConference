@(#)PROGRAM:AVConference  PROJECT:AVConference-
?333333
MbP?
333333
?333333
$@ffffff
?ffffff
p=bP@
A333333
^`?UUUUUU
MbP?
A333333
?333333
?UUUUUU
Mb`?
?UUUUUU
mcpl)
Mb@?a
A333333
@mcpl)
fffff6m@
ffffff
Time
ClientID
streamGroupID
?______
Anonymous
user
0@(knN
?333333
333333
?ffffff
?UUUUUU
?333333
MbP?
?#mtstpni
spatbolg
glpobolg
kcajtpni
SFrameEncryptionKey
SFrameSaltKey
SFrameAuthenticationKey
Apple Inc.1&0$
Apple Certification Authority1
Apple Root CA0
060425214036Z
350209214036Z0b1
Apple Inc.1&0$
Apple Certification Authority1
Apple Root CA0
, op
https://www.apple.com/appleca/0
Reliance on this certificate by any party assumes acceptance of the then applicable standard terms and conditions of use, certificate policy and certification practice statements.0
=&g 
Sj[d
Apple Inc.1&0$
Apple Certification Authority1
Apple Root CA0
070412174328Z
220412174328Z0y1
Apple Inc.1&0$
Apple Certification Authority1-0+
$Apple iPhone Certification Authority0
!p(E`\
)XI
c{>c
4*."
/0-0+
%http://www.apple.com/appleca/root.crl0
kK>{
1+kT
>%(%
JAlXV
Apple Inc.1&0$
Apple Certification Authority1-0+
$Apple iPhone Certification Authority0
070416225446Z
140416225446Z0Z1
Apple Inc.1
Apple iPhone1
Apple iPhone Device CA0
MMNT
wE/g\
4*."
|508
10/0-
'http://www.apple.com/appleca/iphone.crl0
gzLV+
yR:L=y[
?UUUUUU
walu&
histogram
@uouaoipvlppa
21ARPLReceiveSetElement
25ARPLAssociationSetElement
14ARPLSetElement
21ARPLSendingSetElement
?333333
@333333
?[YO?
Pd?KMD?'
Cw>(
l~?8
Mb`?
@ffffff
MbP?
zt?{
RTCPGetSummaryReportBlock
_RTCPGetSummaryReportBlock
v8@?0
-[VCMediaNegotiatorV2 negotiationData]
mediaNegotiatorV2CompressionEnabled
Created invite media blob (verson 2)
+[VCMediaNegotiatorV2 newCompressedBlob:]
+[VCMediaNegotiatorV2 newDecompressedBlob:]
+[VCMediaNegotiatorV2 newUnserializedMediaBlob:]
-[VCMediaNegotiatorV2 processRemoteNegotiationData:]
Received invite media blob (version 2)
+[VCMediaNegotiatorV2 initializeLocalConfiguration:negotiationData:deviceRole:preferredAudioPayload:]
-[VCMediaNegotiatorV2 remoteMaxBandwidthForOperatingMode:connectionType:]
-[VCMediaNegotiatorV2 appendGeneralInfoToMediaBlob:]
-[VCMediaNegotiatorV2 appendBandwidthSettingsToMediaBlob:]
-[VCMediaNegotiatorV2 appendCodecFeaturesToMediaBlob:]
-[VCMediaNegotiatorV2 appendMicrophoneOneToOneSettingsToMediaBlob:]
-[VCMediaNegotiatorV2 appendCameraOneToOneSettingsToMediaBlob:]
-[VCMediaNegotiatorV2 appendMomentsSettingsToMediaBlob:]
-[VCMediaNegotiatorV2 appendStreamGroupsToMediaBlob:]
+[VCMediaNegotiatorV2 dumpRemoteNegotiationData:forceFileDump:]
%010u
mediablob_invite_remote
.blob
com.apple.VideoConference.MediaBlob
-[VCMediaNegotiatorV2 setupNegotiatedResultsWithRemoteMediaBlob:]
-[VCMediaNegotiatorV2 newNegotiatedSystemAudioResultsWithRemoteMediaBlob:]
-[VCMediaNegotiatorV2 selectBestDecodeVideoRuleForTransport:payload:localVideoRuleCollection:remoteVideoRuleCollection:]
-[VCMediaNegotiatorV2 setupNegotiatedVideoSettingsWithRemoteMediaBlob:]
-[VCMediaNegotiatorV2 setupNegotiatedMomentsResultsWithRemoteMediaBlob:]
-[VCMediaNegotiatorV2 negotiateStreamGroupConfig:remoteInviteBlob:]
-[VCMediaNegotiatorV2 setupStreamGroupsWithRemoteMediaBlob:]
-[VCMediaNegotiatorV2 negotiateU1SettingsForStreamGroup:]
+[VCMediaNegotiatorV2 streamGroupIDsWithMediaBlob:]
+[VCMediaNegotiatorV2 updateStreamGroupU1Config:forGroupId:withNegotiationBlob:localSupportedVideoPayloads:]
+[VCMediaNegotiatorV2 updateCameraU1Config:forNegotiationBlob:localSupportedVideoPayloads:]
+[VCMediaNegotiatorV2 updateScreenU1ConfigWithStreamGroupConfig:forNegotiationBlob:localSupportedVideoPayloads:]
%@ %@
ssrc
maxNetworkBitrate
payload
streamID
metadata
qualityIndex
supportedVideoFormats
frameRate
keyFrameInterval
maxMediaBitrate
maxPacketsPerSecond
repairedStreamID
repairedMaxNetworkBitrate
NOT SET
IDLE
STARTED
RUNNING
INTERRUPTED
-[VCAudioManager getPreferredFormat:blockSize:vpOperatingMode:forOperatingMode:deviceRole:suggestedFormat:]
controllerType=%s 
VoiceChat
System
%s (speaker)
%s (mic)
-[VCAudioManager initWithAudioSessionMode:]
com.apple.AVConference.audiomanagerqueue
{ %@ controllerType=%s }
-[VCAudioManager setMicrophoneMuted:]_block_invoke
-[VCAudioManager setMixingVoiceWithMediaEnabled:]
-[VCAudioManager setMixingVoiceWithMediaEnabled:]_block_invoke
-[VCAudioManager setMute:forClient:]_block_invoke
-[VCAudioManager applyAudioSessionMute]
%s: Iterations=%d
-[VCAudioManager flushEventQueue:]
-[VCAudioManager addClient:]
skipAudioManagerIdleWait
-[VCAudioManager waitIdleForClient:]
-[VCAudioManager _cleanupDeadClients]
-[VCAudioManager vpOperationModeForConferenceOperatingMode:deviceRole:]
-[VCAudioManager newAudioUnitPropertiesWithPreferredClient:]
-[VCAudioManager newAudioUnitPropertiesForSystemAudioWithPreferredClient:]
-[VCAudioManager updateCurrentInputDevice:]_block_invoke
-[VCAudioManager setCurrentInputDevice:]_block_invoke
-[VCAudioManager setCurrentOutputDevice:]_block_invoke
-[VCAudioManager updateCurrentOutputDevice:]_block_invoke
-[VCAudioManager startAUIOWithProperties:]
startAudioIO
-[VCAudioManager shouldResetAudioUnitWithProperties:]
-[VCAudioManager shouldResetAudioSessionWithProperties:]
-[VCAudioManager resetAudioLimiterWithProperties:]
-[VCAudioManager stopAUIO]
-[VCAudioManager registerClientIO:controllerIO:]
-[VCAudioManager unregisterClientIO:controllerIO:]
-[VCAudioManager completeStartForAllStartingClients]
-[VCAudioManager registerForMutedTalkerNotificationWithAUIO:]_block_invoke
v12@?0I8
-[VCAudioManager registerForMutedTalkerNotificationWithAUIO:]
-[VCAudioManager unregisterForMutedTalkerNotificationWithAUIO:]
-[VCAudioManager registerForMutedTalkerNotification:]
-[VCAudioManager registerForMutedTalkerNotification:]_block_invoke
-[VCAudioManager unregisterFromMutedTalkerNotification]_block_invoke
-[VCAudioManager registerAudioSessionId:maxChannelCountMic:maxChannelCountSpeaker:spatialMetadata:]
-[VCAudioManager registerAudioSessionId:maxChannelCountMic:maxChannelCountSpeaker:spatialMetadata:]_block_invoke
-[VCAudioManager unregisterAudioSessionId:]
-[VCAudioManager unregisterAudioSessionId:]_block_invoke
-[VCAudioManager setSpatialMetadata:audioSessionId:completionHandler:]_block_invoke
-[VCAudioManager applySessionContextToAudioUnitProperties:preferredClient:]
-[VCAudioManager applySpatialMetadata:]
-[VCAudioManager enterStateStarted]
forceMixingVoiceWithMediaEnabled
-[VCAudioManager stateSessionStartedWithAudioUnitProperties:sessionProperties:client:newState:]
-[VCAudioManager stateRunningWithAudioUnitProperties:sessionProperties:client:newState:]
-[VCAudioManager stateInterruptedWithAudioUnitProperties:sessionProperties:client:newState:]
-[VCAudioManager updateStateWithAudioIOClient:]
-[VCAudioManager startClient:]
Controller doesn't support client role: %d
-[VCAudioManager startClient:]_block_invoke
Controller request denied: client (%p) is alread started
Client (%p) failed to start
-[VCAudioManager stopClient:]
Controller request denied: client (%p) is not running
-[VCAudioManager stopClient:]_block_invoke
Client (%p) failed to stop
-[VCAudioManager updateClient:direction:]_block_invoke
-[VCAudioManager resetAudioSessionWithProperties:interruptSuccessful:]
-[VCAudioManager setupInterruptThread]
-[VCAudioManager startInterruptThread]
-[VCAudioManager stopInterruptThread]
-[VCAudioManager didSessionStop]_block_invoke
-[VCAudioManager didSessionEnd]_block_invoke
-[VCAudioManager didUpdateBasebandCodec:]
_VCAudioManager_ProcessEventQueue
_LogProfileTimeLimitHelper
_VCAudioManager_RegisterClientIO
_VCAudioManager_UnregisterClientIO
AVConference
UseNWConnectionNotificationForRateController
UseBTNotification
AVCRC
-[AVCRateController initWithDelegate:params:]
enabled
disabled
-[AVCRateController dealloc]
-[AVCRateController configure:]
-[AVCRateController start]
v176@?0{tagVCStatisticsMessage=iidBBBB(?={?=IIIIIIddddd[64c]i}{?=IIIIIIIIIIIIddIIdIB{?=iIIIdddII}{?=SBBI}}{?=dddIIIIIQI}{?=IBBBIIdIB{?=iIIIdddII}}{?=CIIIIIIIIIddddIIII}{?=IIId}{?=iIIIdddII}{?=IIII}{?=IIIIIIBI}{?=IIIIfBBddIIIQ}{?=CCCQQQIIIQiI(?={?=CCSSCCCCCCCfBS[6I]}{?=CsscCCCCSSC})}{tagVCStatisticsVideoLossFeedback=ISCC})}8
-[AVCRateController stop]
-[AVCRateController registerPeriodicTask]
v24@?0^v8^v16
ULPLR
RTTUL
ULTBR
ULSBR
ULWMBR
ULWNBR
ULBWE
ULTBSNT
ULTPRC
ULTPST
ULLBA
DLTPRC
DLPLR
RTTDL
DLTBR
DLRBR
DLBWE
DLTBRCVD
DLLBA
ULBPL
NWAPD
MAWFPD
NWATH
NWNaC
VPLR
TTxR
WRRTT
WRBPL
OVSBR
UNSBR
OVBWE
UNBWE
SBWD
RDMBL
%5.1f
BbTx
InTxR
APRR
VPRR
-[AVCRateController setTargetBitrateCap:]
-[AVCRateController setEstimatedBandwidthCap:]
disableBasebandAdaptation
enableRampDownSuppression
enableBlockRampUpInBluetoothCoex
enableRampDownToActualSendBitrate
enableRampDownUsingPLRThreshold
-[AVCRateController setBtNotificationMonitor]_block_invoke
v16@?0^{?=*Q}8
%@:%@
-[AVCRateController initialBitrateTierFromLearntBitrateWithLocalTechnology:remoteTech:defaultTier:]
forcedSoftMaxTierLowIndex
forcedSoftMaxTierMediumIndex
noRampUp-networkSaturation
RTTtoMinRTTRatio
OWRDtoMinRTTRatio
saturationPersistFeedbackNum
RTTDecreasingThreshold
-[AVCRateController applyServerBagNoRampUpGroupConfig:]
noRampUp-source
rateLimitedPercentage
blockedTimeout
noRampUp-network
networkUnstableCoolDownTime
RTTThreshold
PLRThreshold
noRampUp-delay
OWRD
NOWRD
noRampUp-bw
overGuardTierCalmDuration
guardTierDiff
rampDown-delay
NOWRDAcc
aggNOWRD
aggNOWRDAcc
constantOWRDDuration
suppressionEnabled
suppressionMinRTT
suppressionFactor
-[AVCRateController applyServerBagRampDownGroupConfig:]
rampDown-loss
lowestTier
lossEvent
lossEventNOWRD
rampDown-bw
keepOvershootDuration
nextTierPercentage
noRampUp-notification
BBDelay
NBDCD
highNBDCDCoolDuration
-[AVCRateController applyServerBagNotificationGroupConfig:]
rampDown-notification
highBBDelay
mediumBBDelay
normalizedBBDelay
aggNBDCD
profile
profileNumber
-[AVCRateController applyServerBagProfileConfig:]
fastRampUp
networkStableDuration
minTierGap
RTTRatio
-[AVCRateController applyServerBagFastRampUpConfig:]
oscillationAvoidance
tiersHit
tierChange
durationRatio
aggDurationRatio
-[AVCRateController applyServerBagOscillationAvoidanceConfig:]
emergencyTier
coolDownTimeWiFi
minNonEmergTierWiFi
-[AVCRateController applyServerBagEmergencyTierConfig:]
pauseResume
offChannelHighRatio
offChannelLowRatio
autoResumeTime
-[AVCRateController applyServerBagPauseResumeConfig:]
lossBasedAdaptation
packetLossRateThresholdInitial
packetLossRateThresholdMin
packetLossRateThresholdMax
packetLossRateThresholdTarget
-[AVCRateController applyServerBagLossBasedAdaptationConfig:]
mainControl
rampDown-loss-ratio
-[AVCRateController applyServerBagMainControlConfig:]
RCEV
RCEG
-[AVCRateController reportRateControlExperiment]
<nil>
maxBitrate
burstyTrafficUplink
burstyTrafficDownlink
-[AVCRateController multiwayMaxTierFromServerBag]
-[AVCRateController applyCachedAlgorithmConfig:]
maxTargetBitrate
forcedInitialBitrate
-[AVCRateController updateInitialBitrateFromDefaultWithAlgorithmConfig:]
-[AVCRateController pushNoServerStatsToNwActivity:]
VCSErrorDetected
-[AVCRateController doRateControlWithNWConnectionStatistics:]
-[AVCRateController reportInitialRampUpDeltas]
-[AVCRateController reportTargetBitrateChange:rateChangeCounter:]
-[AVCRateController loadDefaultSettings]
VCRateControl
.bwedump
com.apple.VideoConference.VCRClog
VCRC-UL
VCRC-DL
.afrcdump
STime
dTime/ETxTS
OWRD
NOWRD
NOWRDS
NOWRDA
PLR/FEC
BR/TR
MQIn: A/V
MQOut: A/V
ABRL
TxAT
MODE
TxSTATE
LBAWall
WallConf
BadTrend
.fbdump
com.apple.VideoConference.VCRClogFB
MyTxTS
QDelay
RemoteBWE
BurstLoss
AudioRecvPkt
VideoRecvPkt
RemoteTxTS
OWRD
TxTS
RxTS
LinkID
TxPkt
RxPkt
TxByte
RxByte
OWRD
MyTxTS
QDelay
RemoteBWE
BurstLoss
SentPkt
RecvPkt
RemoteTxTS
OWRD
.bbdump
com.apple.VideoConference.VCRClogBB
STime
V-R-A-F-T
XmitB
LTxTS
IBR_OLD
ABRS
ABRL
BDCD
NBDCD
.nwdump
com.apple.VideoConference.VCRClogNW
STime
aTime
TxTS
Version
Direction
Tech
ByteCount
QSize1
QSize2
Delay
Throughput
TxRate
RateTrend
FrequentScans
%8.3f
EndOfFile
%04X
%04X
%04X
%04X
%.2f
%.3f
-[AVCRateController printFeedbackMessage:]
%s %4u
%.4f
%.4f
%4u %d %c(%1d,%1d) FC:%d
%.1f
%llu
%llu
%llu
%llu
%2.4f
-[AVCRateController printRateControllerHealthPrint]
APLR=
Downlink PLR=
Uplink PLR=
VPLR=
VCRC
-[VCNWConnectionCongestionDetector processNWConnectionNotification:]
NWConnection notification has a bad version: %d
NWConnection notifications have identical timestamps or out of order [current timestamp:%llu, previous timestamp:%llu]
-[VCNWConnectionCongestionDetector processNWConnectionPacketEvent:eventType:]
NWConnection packet event has a bad version: %d, type: %d
NWConnection packet NACK event [type:%d, timestamp:%u, identifier:%u, seq:%u, dropCountPerFrame:%d, dropCount:%d, congestionEvent:%d]
MetaDataMessageArrivalTime
MetaDataTestSimulationTime
-[AVCRateControlFeedbackController getRateControlFeedbackMessage:type:metaData:error:]
_AVCRateControlFeedbackController_DetectOutOfOrderFeedbackMessage
GKSRelaySelfNatType
GKSRelaySelfBlob
GKSRelaySelfAddrPointer
GKSRelaySelfExternalAddr
GKSRelayPeerID
GKSRelayPeerNatType
GKSRelayPeerBlob
GKSRelayPeerAddrPointer
GKSRelayPeerExternalAddr
GKSRelayRemotePrimaryIdentifier
GKSRelayType
GKSRelayConnectionID
GKRelayTransactionID
GKRelayToken
GKSRelayPeerRelayIP
GKSRelayPeerRelayPort
GKSRelaySelfRelayIP
GKSRelaySelfRelayPort
GKSRelaySelfRelayNatIP
GKSRelaySelfRelayNatPort
GKSRelayPeerRelayNatIP
GKSRelayPeerRelayNatPort
ClientData
notificationEvent
didStart
callID
connType
localUseCellular
remoteUseCellular
error
NSErrorUserInfoDetailedError
NSErrorUserInfoReturnCode
InitiateInvitePush
InitiateRejectPush
InitiateAcceptPush
InitiateCancelPush
ReceivedInvitePush
ReceivedRejectPush
ReceivedAcceptPush
ReceivedCancelPush
LocalFrameRate
RemoteFrameRate
LocalBitRate
RemoteBitRate
AudioTierNetworkBitrate
AudioTierAudioBitrate
AudioTierPacketsPerBundle
AudioTierRedNumPayloads
AudioTierPayload
LocalFrameWidth
LocalFrameHeight
RemoteFrameWidth
RemoteFrameHeight
LocalPacketLossRate
RemotePacketLossRate
RoundTripTime
AVConferenceConnectionType
P2PUpgrade
Relay
FrontCaptureTime
BackCaptureTime
SessionBitRate
SessionSentBytes
SessionReceivedBytes
LocalUsesCell
RemoteUsesCell
SessionDataNonce
InviteDataCallInfoBlob
InviteDataConnectionBlob
InviteDataSKEBlob
InviteDataMediaBlob
AVConferenceBlockServiceCallID
AVConferenceBlockServiceConference
AVConferenceBlockServiceConnectionBlob
com.apple.VideoConference
-[AVConference initWithClientUUID:transportType:]
shouldDisplayNetworkQualityGraph
AVConferenceAPI
com.apple.avconference.avconference.callback.queue
conferenceDidServerDie
SERVERDIED
-[AVConference initWithClientUUID:transportType:]_block_invoke
v24@?0@"NSDictionary"8@"NSError"16
conferenceClientUUID
conferenceTransportType
conferenceInitialize
conferenceInitialized
AVConference server init failed
conferenceInputAudioPowerSpectrumToken
conferenceOutputAudioPowerSpectrumToken
-[AVConference initializeNewCallWithDeviceRole:reportingHierarchyToken:]
-[AVConference warmupForCall]
-[AVConference dealloc]
conferenceTerminate
-[AVConference sendARPLData:toCallID:]
-[AVConference sendData:forCallID:encrypted:]
-[AVConference setPeerReportingIdentifier:sessionIdentifier:forCallID:]
-[AVConference startConnectionWithCallID:oldCallID:usingInviteData:isCaller:relayResponseDict:didOriginateRelayRequest:capabilities:idsSocket:destination:error:]
None
-[AVConference startConnectionWithCallID:oldCallID:usingInviteData:isCaller:relayResponseDict:didOriginateRelayRequest:capabilities:idsSocket:error:]
-[AVConference startConnectionWithCallID:inviteData:isCaller:capabilities:destination:error:]
-[AVConference startConnectionWithCallID:usingInviteData:isCaller:relayResponseDict:didOriginateRelayRequest:capabilities:idsSocket:error:]
-[AVConference startConnectionWithCallID:oldCallID:usingInviteData:isCaller:relayResponseDict:didOriginateRelayRequest:capabilities:error:]
-[AVConference startConnectionWithCallID:usingInviteData:isCaller:relayResponseDict:didOriginateRelayRequest:capabilities:error:]
-[AVConference stopCallID:]
-[AVConference cancelCallID:]
-[AVConference remoteCancelledCallID:]
/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/AVConference.m
network-quality
float
-[AVConference remoteVideoLayer]
-[AVConference remoteVideoBackLayer]
-[AVConference setRemoteVideoLayer:]
-[AVConference setRemoteVideoBackLayer:]
-[AVConference statsForCallID:]
-[AVConference natType]
-[AVConference setSendingAudio:callID:error:]
-[AVConference setPauseAudio:callID:error:]
-[AVConference setPauseVideo:callID:error:]
-[AVConference updateCapabilities:forCallID:]
-[AVConference setServerInfo:]
Calling -conference:didStartSession:withCallID:error:
-[AVConference videoConference:didStartSession:withCallID:withUserInfo:error:]
-[AVConference videoConference:didStopWithCallID:error:]
Calling conference:withCallID:isSendingAudio:error:
Calling conference:withCallID:didPauseAudio:error:
Calling %s
-[AVConference videoConference:didStopWithCallID:error:callMetadata:]
-[AVConference videoConference:localIPChange:withCallID:]
Calling -conference:localIPChange:withCallID:
-[AVConference videoConference:remoteMediaStalled:callID:]
Calling -conference:withCallID:remoteMediaStalled:
-[AVConference videoConference:didReceiveFirstRemoteFrameForCallID:]
Calling -conference:remoteAudioPaused:callID:
Calling -conference:remoteVideoPaused:callID:
Calling -conference:didReceiveData:forCallID:
-[AVConference processRelayRequestResponse:responseDict:didOriginateRequest:]
-[AVConference processRelayUpdate:updateDict:didOriginateRequest:]
-[AVConference setConferenceState:forCallID:]
-[AVConference(Private) registerBlocksForVCNotifications]_block_invoke
conferenceCallID
conferenceConnectionStarted
conferenceError
conferenceErrorDomain
conferenceErrorCode
conferenceErrorUserInfo
conferenceUserInfo
conferenceDidStartConnection
conferenceCallMetadata
conferenceDidStopConnection
conferenceAudioSending
conferenceIsSendingAudio
conferenceAudioPause
conferenceDidPauseAudio
conferenceVideoPause
conferenceDidPauseVideo
firstRemoteFrame
conferenceDidReceiveRemoteFrame
conferenceDidRemoteAudioPause
conferenceDidRemoteVideoPause
conferenceCallNewBlob
conferenceLocalIPChange
conferenceIsRemoteMediaStalled
conferenceRemoteMediaStalled
conferenceRelayRequest
conferenceInitiateRelayRequest
conferenceSendRelayUpdate
-[AVConference(Private) registerBlocksForVCNotifications]_block_invoke_8
conferenceCancelRelayRequest
conferenceRemoteVideoAttributes
conferenceDidRemoteAttributesChange
conferenceRemoteScreenAttributes
conferenceDidRemoteScreenAttributesChange
conferenceInputFreqMetering
conferenceUpdateInputFrequencyMetering
conferenceOutputFreqMetering
conferenceUpdateOutputFrequencyMetering
conferenceInputMetering
conferenceUpdateInputMetering
conferenceOutputMetering
conferenceUpdateOutputMetering
conferenceAudioBelowThreshold
conferenceRemoteAudioBelowThreshold
conferenceIsRemote
conferenceIsVideoDegraded
conferenceVideoDegraded
conferenceNetworkHint
conferenceARPLData
conferenceReceivedARPL
conferenceData
conferenceReceivedData
-[AVConference(Private) registerBlocksForVCNotifications]_block_invoke_2
conferenceDidChangeLocalVariables
conferenceAudioEnabled
conferenceRemoteAudioEnabled
conferenceLocalAudioEnabled
conferenceCallingMode
conferenceRemoteCallingModeChanged
conferenceReinitializeCall
conferenceCloseConnection
-[AVConference(Private) serverReconnected]_block_invoke
-[AVConference(Private) serverDied]
videoPayload
parameterSet
encodeFormats
decodeFormats
-[VCMediaNegotiatorBase initWithLocalSettings:]
%s must be overridden in a subclass/category
-[VCMediaNegotiatorBase negotiationData]
-[VCMediaNegotiatorBase processRemoteNegotiationData:]
+[VCMediaNegotiatorBase initializeLocalConfiguration:negotiationData:deviceRole:preferredAudioPayload:]
+[VCMediaNegotiatorBase streamGroupIDsWithMediaBlob:]
-[VCMediaNegotiatorBase remoteMaxBandwidthForOperatingMode:connectionType:]
-[VCMediaNegotiatorBase negotiatedStreamGroupConfigForGroupID:negotiatedStreamGroupConfigs:]
-[VCMediaNegotiatorBase negotiatedResultsForGroupID:localU1Config:remoteU1Config:]
+[VCMediaNegotiatorBase getPreferredVideoPayloadList:localSupportedPayloads:]
+[VCMediaNegotiatorBase selectBestVideoRuleForTransport:payload:encodingType:videoSettings:localVideoRuleCollection:remoteVideoRuleCollection:]
-[VCHardwareSettingsMac init]
hw.model
^([^0-9]+)([0-9]+),([0-9]+)$
v32@?0@"NSTextCheckingResult"8Q16^B24
hw.cpufamily
-[VCHardwareSettingsMac _getCPUFamilyType]
Intel-K65
Intel
/System/Library/PrivateFrameworks/AppleGVA.framework/Versions/Current/AppleGVA
AVFQTXENC_GetEncodeAvailability
-[VCHardwareSettingsMac isGVAEncoderAvailable]
MacBookAir
MacBookPro8
MacPro
iMacPro
MacBookPro7,1
MacBookPro6,2
iMac10,1
iMac11,1
VCHardwareSettingsMac_CompareCPUFamilies
MacBookPro
iMac
Macmini
MacBook8
MacBook9
MacBook10
MacBookAir4,1
MacBookAir5,1
MacBookPro10,2
MacBookPro13,3
MacBookPro14,3
-[VCHardwareSettingsMac maxActiveScreenEncoders]
MacBookPro18
IOService
IOPlatformExpertDevice
board-id
-[VCHardwareSettingsMac supportsDedicatedSystemAudioStream]
-[VCAudioPowerSpectrum initWithBinCount:streamToken:sinkContext:sinkCallback:]
%@: [%f;%f] : 
 channel[%d] bins:
[%f;%f;%f]
VCAudioPowerSpectrum_LogHealth
VCAudioPowerSpectrum_PushAudioSamples
_VCAudioPowerSpectrum_SetupAudioPowerSpectrumWithBinCount
_VCAudioPowerSpectrum_SetupOctave2IndexTableWithBinCount
_VCAudioPowerSpectrum_SetupBinInterpolationWithBinCount
_VCAudioPowerSpectrum_SetupChannel
_VCAudioPowerSpectrum_SetupOctave2IndexTableForChannel
_VCAudioPowerSpectrum_SetupFFTForChannel
_VCAudioPowerSpectrum_SetupBinsForChannel
-[AVCStatisticsCollector dealloc]
-[AVCStatisticsCollector start]
-[AVCStatisticsCollector stop]
newStatistics=%s
-[AVCStatisticsCollector setStatistics:]
keys=%s
-[AVCStatisticsCollector getStatistics:]
AVCStatisticsCollector_SetVCStatistics
_AVCStatisticsCollector_GetVCStatisticsWithType
_AVCStatisticsCollector_AddEntriesFromStatistics
_AVCStatisticsCollector_UpdateMaxLocalBurstyLoss
_AVCStatisticsCollector_UpdatePacketReceivedCount
videoStreamRampUpFrozenDuration
videoStreamRampUpNoLossEventDurationRatio
videoStreamRampDownLossEventCountThreshold
videoStreamRampDownLossEventBitrateThreshold
videoStreamRampUpStatusRateLimitedThreshold
videoStreamRampDownOWRDThreshold
videoStreamRampDownLossRateThreshold
%@ state:%d OWRD:%.3f RTT:%.3f packetLossRate:%f
%8.3f/%04X:
%.4f
%.4f
%.4f
%.4f %c
RTT:%-4u
PLR:%4.2f@%.1f
RRx:0
MBL:0
%3u/%3u
 0:0/0  0:0/0 CS: 0 0 0 BB: %u
 UAT S _
-[VCVideoStreamOWRDLossEventRateControl stateChange:]
-[VCVideoStreamOWRDLossEventRateControl calculateOWRDWithTimestamp:sampleRate:time:]
CommTest
CommReport
socket() failed (%d)
getsockname() failed (%d)
supportedPayloads
nonCarrier
checkTCPSSL
favorNonCar
carrierType
addInRange
addCarrier
ignoreCache
ignoreCarrierBundle
summaryType
nonCarrierType
ifDictionary
interfaceType
commnatFlags
commnatCached
tcpCached
sslCached
gk_ci_
natTypeCache
/cache.plist
GKNATObserverDynamicStoreCallback
com.apple.gamekitservices.GKNATObserver.%p.natCheckQueue
com.apple.gamekitservices.GKNATObserver.%p.reportNATQueue
-[GKNATObserverInternal initWithOptions:]
-[GKNATObserverInternal dealloc]
-[GKNATObserverInternal setFlags:forInterface:isCached:isCachedKey:mask:]
-[GKNATObserverInternal currentNATType]
-[GKNATObserverInternal shouldTryNATCheck]
-[GKNATObserverInternal reportNATType]_block_invoke
0.0.0.0
/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/GKNATObserver.m
-[GKNATObserverInternal callCommNATTestFromIPPort:ipv6Prefix:]
CommNATMainIP
CommNATMainPort0
CommNATMainPort1
CommNATCohortIP
CommNATCohortPort0
-[GKNATObserverInternal callHTTPTestFromIPPort:ipv6Prefix:ToServer:isSSL:]
%@:%u
HTTPS
HTTP
-[GKNATObserverInternal ensureNatCachePathExists]
com.apple.conference
com.apple.gamed
natFlags
-[GKNATObserverInternal lookupCachedNATFlagsForNetwork:]
-[GKNATObserverInternal cacheNATFlags:forNetwork:]
natFlagsLastUpdated
-[GKNATObserverInternal NATCheckWithIPPort:ipv6Prefix:useCache:]
gk_ci_cache
-[GKNATObserverInternal HTTPCheckWithIPPort:ipv6Prefix:useCache:]
-[GKNATObserverInternal HTTPSCheckWithIPPort:ipv6Prefix:useCache:]
NAT64ResolverCallBack
-[GKNATObserverInternal tryNATCheckWithDelay:]
-[GKNATObserverInternal tryNATCheckWithDelay:]_block_invoke
-[GKNATObserverInternal tryNATCheckWithDelay:]_block_invoke_3
-[GKNATObserverInternal tryNATCheckWithDelay:]_block_invoke_2
State:/Network/Service/[^/]+/IPv4
State:/Network/Interface/[^/]+/IPv6
-[GKNATObserverInternal nameForNetworkWithIPPort:interfaceName:]
InterfaceName
NetworkSignature
%u.%u.%u.%u%%%@
com.apple.gamekitservices.GKNATObserver.%p
-[GKNATObserverInternal registerForNetworkChanges]
State:/Network/Interface/[^/]+/Link
Host
createTCPSocket
gk_ci_%s
-[VCAudioStreamReceiveGroup initWithConfig:]
-[VCAudioStreamReceiveGroup collectAndLogChannelMetrics:]
-[VCAudioStreamReceiveGroup didStart]
-[VCAudioStreamReceiveGroup addSyncDestination:]_block_invoke
-[VCAudioStreamReceiveGroup removeSyncDestination:]_block_invoke
-[VCAudioStreamReceiveGroup vcMediaStream:remoteMediaStalled:duration:]_block_invoke
v16@?0@"<VCMediaStreamGroupDelegate>"8
VCSPUUID
VCMSStreamGroup
VCAudioStreamReceiveGroup_UpdateAudioPriority
VCAudioStreamReceiveGroup_DebounceAudioPriority
-[VCAudioRelay setIOBufferDuration:withError:]
Cannot set VCAudioRelay property
VCAudioRelay is running
Can't start: relay IO is nil
Invalid IO
-[VCAudioRelay startRelayIO:otherRelayIO:]
-[VCAudioRelay internalStopRelayThread]
-[VCAudioRelay stopRelayIO:otherRelayIO:]
-[VCAudioRelay startClientIO]
-[VCAudioRelay startRemoteIO]
-[VCAudioRelay stopClientIO]
-[VCAudioRelay stopRemoteIO]
-[VCAudioRelay setNetworkClockID:withError:]
createRelayThreadWithError failed
pthread_cond_init failed
pthread_mutex_init failed
com.apple.avconference.audiorelay
pthread_create failed
-[VCAudioRelay newAudioConverterWithInputFormat:outputFormat:withError:]
newAudioConverterFromFormat failed
AudioConverter new failed
-[VCAudioRelay printStreamFormats]
-[VCAudioRelay startPeriodicHealthPrint]
-[VCAudioRelay startPeriodicHealthPrint]_block_invoke
com.apple.VideoConference.VCAudioRelay
-[VCAudioRelay relayCallback]
vcaudiorelay.client
client_relay_io
vcaudiorelay.remote
remote_relay_io
-[VCSessionConfiguration setSessionMode:]
-[VCSessionConfiguration updateWithClientDictionary:]
-[VCSessionConfiguration applyConfigurationUsingClientDict:]
-[VCVideoRuleCollectionsRemoteCameraEmbedded initWithHardwareSettings:]
+[AVCRTCPPacket newPacketWithRTCPPacket:packetLength:]
-[AVCRTCPPacket initWithRTCPPacket:]
packetType:%u, SSRC:%u
%@, NTPMostSignificantWord:%u, NTPLeastSignificantWord:%u, RTPTimestamp:%u, packetsSent:%u, octetsSent:%u, receiverReport:%@
%@, reportedSourceSSRC:%u, fractionLost:%u, cumulativePacketsLost:%u, extendedHighestSequenceNumber:%u, interarrivalJitter:%u, lastSRTimestamp:%u, delaySinceLastSR:%u
%@, type:%u, text:%@
Copy
Discard
SkipSpeech
JitterBuffer
jitterBufferHistoryUseShortTermWindowForTargetExpansion
jitterBufferHistoryShortTermWindowSize
jitterBufferHistoryLongTermWindowSize
State = STATE_NEWSTREAM, iSampleRate = %d
State = SETTLE
State = FILL
State = RUN
jitterBufferMinQueueSize
-[VCAudioPowerSpectrumSource initWithStreamToken:delegate:]
-[VCAudioPowerSpectrumSource dealloc]
-[VCAudioPowerSpectrumSource invalidate]
VCAudioPowerSpectrumSource_RegisterAudioPowerSpectrumSink
VCAudioPowerSpectrumSource_UnregisterAudioPowerSpectrumSink
_VCAudioPowerSpectrumSource_ProcessEventQueue
_VCAudioPowerSpectrumSource_ProcessAddEvent
gk-cdx
gk-commnat-main0
gk-commnat-main1
gk-commnat-cohort
gk-commnat-main0-name
gk-commnat-main1-name
gk-commnat-cohort-name
gk-p2p-tcp-check-url
gk-p2p-ssl-check-url
gk-p2p-video-degraded-threshold
gk-p2p-video-near-degraded-threshold
gk-p2p-media-degraded-threshold
gk-p2p-ice-timeout
gk-p2p-nat-type-timeout
gk-p2p-blob-size-max
gk-p2p-relay-bitrate-max
gk-p2p-tcp-relay-bitrate-max
gk-p2p-pre-relay-timeout
gk-p2p-video-throttling-timeout
gk-p2p-startup-timeout
gk-p2p-local-gaming-discovery-timeout
gk-p2p-local-gaming-discovery-heartbeat
gk-p2p-remote-packets-timeout
gk-p2p-network-conditions-timeout
staticnattypefromcarrierbundle
keepalivetimeoutfromcarrierbundle
gk-p2p-bitrate-max-2g
gk-p2p-bitrate-max-3g
gk-p2p-bitrate-max-lte
gk-p2p-bitrate-max-lte-v2
gk-p2p-bitrate-max-5g
gk-min-jitter-queue-size-5g
gk-p2p-bitrate-max-wifi
rtc-ss-bitrate-max-2g
rtc-ss-bitrate-max-3g
rtc-ss-bitrate-max-lte
rtc-ac-bitrate-max-2g
rtc-ac-bitrate-max-3g
rtc-ac-bitrate-max-lte
rtc-ac-relay-bitrate-max
rtc-ac-tcp-relay-bitrate-max
vc-max-bitrate-2g-uplink
vc-max-bitrate-3g-uplink
vc-max-bitrate-lte-uplink
vc-max-bitrate-nonexpensive-uplink
vc-max-bitrate-wifi-uplink
vc-max-bitrate-2g-downlink
vc-max-bitrate-3g-downlink
vc-max-bitrate-lte-downlink
vc-max-bitrate-nonexpensive-downlink
vc-max-bitrate-wifi-downlink
vc-enable-evs-audio-codec
vc-enable-red-audio
vc-red-state-value-A
vc-enable-irat-recommendation
vc-rate-controller-type
vc-viewpoint-correction-enabled
vc-facetime-photos-use-best-videorule
vc-facetime-jb-high-start
vc-facetime-jitter-buffer-mode
vc-facetime-30-fps-support
vc-primary-conn-health-allowed-delay
vc-send-feedback-controller-report
vc-server-video-packet-retransmission-enabled
vc-captions-enabled
vc-nack-generator-seq-num-aging-time
vc-nack-generator-storebag-config-version
vc-nack-generator-nack-throttling-plr-buckets
vc-nack-generator-nack-throttling-factor-buckets
vc-nack-generator-nack-bit-rate-limiting-max-ratio
vc-nack-generator-population-percentage-with-additional-delay-budget
vc-adaptive-learning-enabled
vc-short-term-history-length
vc-long-term-history-length
vc-adaptive-learning-A
vc-adjustment-factor-A
vc-short-term-value-weight-A
vc-long-term-value-weight-A
vc-adaptive-learning-B
vc-adjustment-factor-B
vc-short-term-value-weight-B
vc-long-term-value-weight-B
vc-adjustment-factor-C
vc-short-term-value-weight-C
vc-long-term-value-weight-C
vc-prefer-relay-over-p2p-threshold
vc-always-on-audio-redundancy-enable-threshold
vc-high-fec-enable-threshold
vc-low-fps-video-enable-threshold
vc-vplr-fec-enable-threshold
vc-video-redundancy-percentage-max
vc-ab-testing-use-video-jitter-for-video-playout
vc-fast-media-duplication-enable-threshold
vc-iRAT-rtp-enable-threshold
vc-pre-warm-cell-enable-threshold
vc-duplicate-important-pkts-enable-threshold
vc-allow-bursty-loss-ramp-down-enable-threshold
vc-hevc-wifi-tiers-enable-threshold
vc-viewpoint-correction-enable-threshold
vc-heif-hevc-live-photos-enable-threshold
vc-wifi-low-tier-redundancy-enable-threshold
vc-cellular-low-tier-redundancy-enable-threshold
vc-iRAT-metrics-enable-threshold
vc-fec-header-v1-enable-threshold
vc-updated-AFRC-header-enable-threshold
vc-secure-messaging-enable-threshold
vc-disable-SIP-enable-threshold
vc-wifi-assist-duplication-enable-threshold
vc-wifi-assist-budget-status-enable-threshold
vc-wifi-assist-status-bar-enable-threshold
vc-low-network-mode-enable-threshold
vc-duplication-enhancement-enable-threshold
vc-video-jb-enable-threshold-v2
vc-iRAT-duplication-enable-threshold
vc-wrm-rssi-threshold-enable-threshold
vc-wrm-rssi-threshold-distribution
vc-media-driven-duplication-enable-threshold
vc-ab-test-master-local-switches
vc-ab-test-audio-enhancement-feature-combinations
vc-ab-test-video-enhancement-feature-combinations
vc-ab-test-network-enhancement-feature-combinations
vc-ab-test-rate-control-enhancement-feature-combinations
vc-ab-test-media-duplication-enhancement-feature-combinations
vc-ab-testing-state
vc-ab-testing-use-rtt-for-fir-throttling
vc-link-probing-capability-version
vc-link-probing-feature-threshold
vc-link-probing-interval
vc-link-probing-timeout
vc-link-probing-query-results-interval
vc-link-probing-exponential-moving-mean-factor
vc-link-probing-envelope-attack-factor
vc-link-probing-envelope-decay-factor
vc-link-probing-connection-lockdown-period
vc-link-probing-plr-buckets
vc-nw-connection-monitor-enabled
vc-video-jitter-buffer-for-video-playout
vc-video-player-enable-loose-sync-for-facetime
vc-video-player-enable-reference-frame-for-facetime
vc-video-enable-late-frame-recovery
vc-duplication-media-driven-duplication-enabled
vc-ids-link-suggestion-enabled
vc-link-probing-duplication-wait-timeout
vc-link-probing-identical-query-result-max
vc-link-probing-lockdown-period
vc-video-transmitter-minimum-key-frame-generation-interval-for-facetime
vc-video-receiver-deferred-assembly-offset
vc-core-motion-detection-enabled
vc-decryption-timeout-interval
vc-decryption-mkm-recovery-interval
vc-new-session-joining-interval
GKSConnSettingsUpdate
vc-remote-media-stall-timeout
vc-no-remote-duplication-threshold-fast
vc-wrm-pending-bitrate-cap-delta
vc-fec-vectorization-enabled
vc-fec-generator-enabled
vc-fec-feedback-version
vc-fec-feedback-analyzer-level-match-percentile
vc-fec-feedback-analyzer-buffer-max-length
vc-fec-feedback-analyzer-report-min-period
vc-fec-feedback-analyzer-vplr-window-size
vc-fec-feedback-analyzer-interpolation-threshold
vc-video-priority-enabled
vc-low-quality-audio-stream-on-demand
vc-low-quality-video-stream-on-demand
vc-audio-issue-detector-enabled
vc-rtcp-psfb-for-loss-feedback
vc-rtcp-psfb-for-ltr-ack
+[GKSConnectivitySettings setAddress:forService:]
+[GKSConnectivitySettings setServerAddresses:]
specialAllocForHeapInspection
+[GKSConnectivitySettings setClientOptions:]
+[GKSConnectivitySettings getCachedIPPort]
+[GKSConnectivitySettings getIPPortForService:]
+[GKSConnectivitySettings clearAllSettingsWithRefreshIntervalInSeconds:]
+[GKSConnectivitySettings supportsEVSCodec]
+[GKSConnectivitySettings supportsRedAudio]
+[GKSConnectivitySettings supportiRATRecommendation]
NOT 
+[GKSConnectivitySettings getRateControllerType]
+[GKSConnectivitySettings getDecryptionTimeoutInterval]
+[GKSConnectivitySettings getDecryptionMKMRecoveryInterval]
+[GKSConnectivitySettings getNewSessionJoiningInterval]
useAdaptiveLearningForFaceTime
+[GKSConnectivitySettings getAdaptiveLearningState]
+[GKSConnectivitySettings getShortTermHistoryLength]
+[GKSConnectivitySettings getLongTermHistoryLength]
+[GKSConnectivitySettings getAdaptiveLearningA]
+[GKSConnectivitySettings getAdjustmentFactorA]
+[GKSConnectivitySettings getShortTermValueWeightA]
+[GKSConnectivitySettings getLongTermValueWeightA]
+[GKSConnectivitySettings getAdaptiveLearningB]
+[GKSConnectivitySettings getAdjustmentFactorB]
+[GKSConnectivitySettings getShortTermValueWeightB]
+[GKSConnectivitySettings getLongTermValueWeightB]
+[GKSConnectivitySettings getAdjustmentFactorC]
+[GKSConnectivitySettings getShortTermValueWeightC]
+[GKSConnectivitySettings getLongTermValueWeightC]
+[GKSConnectivitySettings getWRMRSSIThresholdValue:]
-80,-80,-80,-80,-80,-80,-80,-83,-85,-87
preferRelayOverP2PThreshold
alwaysOnAudioRedundancyEnableThreshold
highFecEnableThreshold
lowFpsVideoEnableThreshold
vplrFecEnableThreshold
fastMediaDuplicationEnableThreshold
iRATRtpEnableThreshold
preWarmCellEnableThreshold
duplicateImportantPktsEnableThreshold
allowBurstyLossRampDownEnableThreshold
hevcWifiTiersEnableThreshold
viewpointCorrectionEnableThreshold
heifHevcLivePhotosEnableThreshold
wifiLowTierRedundancyEnableThreshold
cellularLowTierRedundancyEnableThreshold
iRATMetricsEnableThreshold
fecHeaderV1EnableThreshold
updatedAFRCHeaderEnableThreshold
secureMessagingEnableThreshold
disableSIPEnableThreshold
wifiAssistDuplicationEnableThreshold
wifiAssistBudgetStatusEnableThreshold
wifiAssistStatusBarEnableThreshold
lowNetworkModeEnableThreshold
duplicationEnhancementEnableThreshold
videoJBEnableThreshold
iRATDuplicationEnableThreshold
wrmRSSIThresholdEnableThreshold
mediaDrivenDuplicationEnableThreshold
UseVideoJitterForVideoPlayoutForFaceTime
useRTTForFIRThrottling
+[GKSConnectivitySettings getThresholdForSwitch:]
+[GKSConnectivitySettings getAbTestMasterLocalSwitches]
+[GKSConnectivitySettings getAbTestingState]
abTestingState
0,1,2,3
0,1,2,4,8,15
+[GKSConnectivitySettings getTestGroupPermutations:]
+[GKSConnectivitySettings getRemoteMediaStallTimeout]
+[GKSConnectivitySettings getNoRemoteDuplicationThresholdFast]
+[GKSConnectivitySettings getVCRCSeverBagConfigWithKey:]
+[GKSConnectivitySettings getStorebagValueForStorebagKey:userDefaultKey:defaultValue:isDoubleType:]
+[GKSConnectivitySettings getFeatureFlagForStorebagKey:userDefaultKey:featureFlagDomain:featureFlagName:]
+[GKSConnectivitySettings getStorebagValueStorebagKey:defaultValue:]
-[VCRedundancyControlAlgorithmVideo initWithRedundancyControllerMode:maxAllowedRedundancyPercentage:mediaControlInfoFECFeedbackVersion:]
-[VCRedundancyControlAlgorithmVideo setupFeedbackAnalyzerConfig]
-[VCRedundancyControlAlgorithmVideo stateRunning:]
-[VCRedundancyControlAlgorithmVideo stateFrozen:]
-[VCRedundancyControlAlgorithmVideo reset]
-[VCRedundancyControlAlgorithmVideo processNWConnectionStatistics:]
-[VCRedundancyControlAlgorithmVideo processRCNetworkStatistics:]
-[VCRedundancyControlAlgorithmVideo computeRedundancyWithLossPercentage]
GKVoiceChatServiceErrorDomain
videoStreamRampDownNOWRDThreshold
videoStreamRampUpNOWRDThreshold
videoStreamRampDownNOWRDAccThreshold
videoStreamRampUpNOWRDAccThreshold
%@ state:%d OWRD:%.3f NOWRD:%.3f NOWRDACC:%.3f RTT:%.3f packetLossRate:%f rampingStatus:0x%04X
%8.3f/%04X:
%.4f
%.4f
%.4f
%.4f %c
RTT:%-4u
PLR:%4.2f@%.1f
RRx:%3u
MBL:0
%3u/%3u
 0:0/0  0:0/0 CS: 0 0 0 BB: %u
%04X
 UAT S _
-[VCVideoStreamNOWRDLossEventRateControl stateChange:]
-[VCVideoStreamNOWRDLossEventRateControl calculateOWRDWithTimestamp:sampleRate:time:]
-[VCTransportSessionNW initWithRTPNWConnectionID:RTCPNWConnectionID:handlerQueue:context:notificationHandler:eventHandler:]
-[VCTransportSessionNW handleStateChanges:error:semaphore:operationResult:]
-[VCTransportSessionNW setStateChangeHandlerForConnection:result:semaphore:]
-[VCTransportSessionNW setStateChangeHandlerForConnection:result:semaphore:]_block_invoke
v20@?0i8@"NSObject<OS_nw_error>"12
-[VCTransportSessionNW setupNWConnection:]
-[VCTransportSessionNW createVFD:forStreamType:]
-[VCTransportSessionNW start]
Start VCTransportSessionNW failed
Failed to schedule receives for nw_connection
-[VCTransportSessionNW dupRTPNWConnectionBackingSocketForNWConnection:]
llw0
-[VCTransportSessionNW initializeInterfaceType]_block_invoke
B16@?0@"NSObject<OS_nw_interface>"8
-[VCTransportSessionNW initializeNetworkMTU]
-[VCTransportSessionNW initializeIsIPv6]
-[VCAudioStreamGroupCommon initWithConfig:audioCallback:context:audioDirection:]
streamGroupID=%s participantUUID=%@ 
{ %@ %s }
Send Group
Receive Group
-[VCAudioStreamGroupCommon configurePowerSpectrumSource]
-[VCAudioStreamGroupCommon setupStreamsWithStreamInfos:]
-[VCAudioStreamGroupCommon configureAudioIOWithDeviceRole:operatingMode:]
-[VCAudioStreamGroupCommon reconfigureAudioIOIfNeededWithDeviceRole:operatingMode:]
-[VCAudioStreamGroupCommon startCapture]
-[VCAudioStreamGroupCommon stopCapture]
-[VCAudioStreamGroupCommon configureStreams:withRateControlConfig:]
-[VCAudioStreamGroupCommon collectAndLogChannelMetrics:averagePower:]
Send
Receive
-[VCAudioStreamGroupCommon enqueueSyncDestinationChangeEvent:eventType:]
-[VCAudioStreamGroupCommon didSuspendAudioIO:]
-[VCAudioStreamGroupCommon didResumeAudioIO:]
VCSPAPSReg
-[VCAudioStreamGroupCommon didUpdateBasebandCodec:]
_VCAudioStreamGroup_AddSyncDestination
_VCAudioStreamGroup_RemoveSyncDestination
DynamicStoreCallbackForWifiChanges
State:/Network/Interface/
State:/Network/Interface/pdp_ip
/IPv4
/IPv6
-[GKInterfaceListener hasConnectionWithWifi:cell:]
GKInterfaceListener%d
State:/Network/Interface/[^/]+/IPv4
State:/Network/Interface/[^/]+/LinkIssues
-[GKInterfaceListener startChangeListener]
-[GKInterfaceListener startRoutingChangeListener]_block_invoke
v12@?0i8
-[GKInterfaceListener startRoutingChangeListener]
LinkIssues
checkForLinkIssues
TimeStamp
ModuleID
Info
-[VCRedundancyControlAlgorithmVideoIpadCompanion updateRedundancyStrategyWithNetworkStatistics:]
configuration
maxBandwidth
configurationExtension
mode_Invalid
mode_Default_Wifi
mode_Default_LTE
mode_FaceTime_Wifi
mode_FaceTime_LTE
mode_Screen_Wifi
mode_Screen_LTE
mode_FaceTime_3G
mode_Screen_3G
mode_Default_3G
mode_FaceTime_2G
mode_Screen_2G
mode_Default_2G
mode_iPadCompanion_AWDL
mode_iPadCompanion_USB
mode_FaceTime_5G
mode_RemoteCamera_AWDL
mode_RemoteCamera_USB
mode_SUPPORTED
(unknown: %i)
+[VCRateControlUtil calculateNOWRDWithDuration:owrdList:historySize:minHistorySize:initalRampUpReadyDuration:isInitialRampUp:]
VideoWidth
VideoHeight
FrameRate
ForceMirrorMode
EnableClearScreen
ResolutionScaling
ScreenDisplayID
ScreenCaptureIsWindowed
ScreenCaptureMachPort
ScreenCaptureUUID
PixelFormat
EnableIdleFrameAdjustments
ScreenWatcherExempt
ShouldSupressDRMContent
ShouldAllowReconfigureForLocalDisplay
ShouldOptimizeForLowLatency
BiomeEventType
-[ICEResultWaitQueue copyResultForCallID:]
com.apple.AVConferenceVCMomentsHistory.moments
enableLocalVideoRecording
VCMomentsHistoryFrameAllocator
-[VCMomentsHistory addLocalAudioSample:timestamp:]
-[VCMomentsHistory addRemoteAudioSample:timestamp:]
-[VCMomentsHistory updateRemoteScreenAttributes:]_block_invoke
VCMomentsHistory_UpdateResizeFlag
-[VCMomentsHistory getPhotoWithTransactionID:timestamp:completionHandler:]
-[VCMomentsHistory getPhotoWithTransactionID:timestamp:completionHandler:]_block_invoke
VCMomentsHistory
-[VCMomentsHistory endRecording:timestamp:completionHandler:]
-[VCMomentsHistory endRecording:timestamp:completionHandler:]_block_invoke
-[VCMomentsHistory historyBuffer:didDequeueSample:timestamp:]
_getActiveWriters
v24@?0@"NSURL"8@"NSError"16
-[VCMomentsHistory cleanupActiveRequests]
-[VCMomentsHistory cleanupActiveRequests]_block_invoke
-[VCMomentsHistory cleanupActiveRequests]_block_invoke_2
-[VCMomentsHistory cancelRequestWithTransactionID:]
-[VCMomentsHistory cancelRequestWithTransactionID:]_block_invoke
-[VCMomentsHistory setImageType:]_block_invoke
-[VCMomentsHistory setVideoCodec:]_block_invoke
bCameraStatusBits
-[VCMomentsHistory setupStillImageWithTimestamp:transactionID:visibleRect:cameraStatusBit:imageType:]
AVConference:MomentsResize
-[VCMomentsHistory setupResizingSessionsWithVisibleRect:cameraStatusBit:]
-[VCMomentsHistory rewriteMovieMetadataWithURL:transactionID:]
-[VCMomentsHistory handleSinglePendingRequestWithTransactionID:sourceURL:]
-[VCMomentsHistory updateAudioBuffer:WithSample:timestamp:]
localAudioBuffer
remoteAudioBuffer
-[VCMomentsHistory updateVideoBuffer:withPresentationTime:sampleBufferCopy:cameraStatusBits:timestamp:]
FixedBandwidth
GaussianBandwidth
AQMBandwidth
-[VCEmulatedNetworkAlgorithmQueueBandwidth updateSettingsAtTime:impairments:]
-[VCEmulatedNetworkAlgorithmQueueBandwidth process:]
time
value
VCEmulatedNetworkAlgorithm_UpdateIndexWithIntervalArray
mean
stdDev
capabilities
supportedVideoCodecs
supportedImageTypes
multiwayCapabilities
-[VCRateControlAlgorithmSparseNOWRD configure:restartRequired:]
Configure with targetBitrate=%d, minBitrate=%d, maxBitrate=%d, burstyTraffic=%d
-[VCRateControlAlgorithmSparseNOWRD doRateControlWithStatistics:]
-[VCRateControlAlgorithmSparseNOWRD doRateControlWithVCRCStatistics:]
-[VCRateControlAlgorithmSparseNOWRD doRateControlWithBasebandStatistics:]
Disable baseband adaptation due to FR2 RATType
[%u] Ramp up bitrate to %u
[%u] Congestion!!! New bitrate down to %u
[%u] Congestion due to baseband!!! New bitrate down to %u
-[VCRateControlAlgorithmSparseNOWRD printRateControlInfoToLogDump]
%8.3f/%04X:
%.4f
%.4f
%.4f
%.4f %c
RTT:%-4u
PLR:%4.2f@%.1f
RRx:%u
MBL:%d %u
%4u/%4u
 %4u:%4u/%4u  %4u:%4u/%4u  CS: %04X %04X %u BB: %3u
%s UAT %s
VCTextStream
-[VCTextStream init]
-[VCTextStream dealloc]
-[VCTextStream sendCharacter:]
-[VCTextStream sendText:]
-[VCTextStream didReceiveCharacter:]
Failed to allocate the text receiver
%s:%d
/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCTextStream.m
Invalid Parameter
Called with an invalid parameter
-[VCTextStream onConfigureStreamWithConfiguration:error:]
Failed to create transport
Create transport failed
127.0.0.1
com.apple.AVConference.LoopbackSocketTunnel.ReceiveProc
-[LoopbackSocketTunnel initWithPort:delegate:error:]
LoopbackSocketTunnel init failed
FigThreadCreate failed
-[LoopbackSocketTunnel setVTPIP:]
LoopbackTunnelReceiveProc
rtpSSRC
audioUnitModel
supportFlags
payloadFlags
secondaryFlags
useSBR
com.apple.AVConference.vcRateControllerManager.delegateQueue
-[VCRateControllerManager registerRateSharingClient:forInterfaceType:]
-[VCRateControllerManager deregisterRateSharingClient:]
IDR Scheduler Item: Budget=%d (frames) weightFactor:%d framePosition:%@ streams:%@
-[VCRedundancyControllerVideo initWithDelegate:mode:parameters:]
isRSUOptimizationEnabled
UseNWConnectionNotificationForVideoRedundancyController
-[VCRedundancyControllerVideo updateRedundancyStrategyWithNetworkStatistics:]
-[VCRedundancyControllerVideo reportRedundancyPercentage:redundancyInterval:]
-[VCRedundancyControllerVideo resetRedundancyStrategy:]
-[VCMediaKeyIndex initWithBytes:bufferSize:]
unmapped
%@(%d):%@
-[VCMediaKeyIndex setMapping:]
-[VCMediaKeyIndex isEqual:]
-[VCMediaKeyIndex isStartingWithPrefix:]
VCMediaKeyIndex_MappedKeyBytes
initialBitrateTierFromLearntBitrateWithCellTech
AFRCCreateHandle
AFRCCreateHandle_block_invoke
BTPw
RxPC
RxSC
TxPC
TxSC
v16@?0^v8
AFRCUpdateOperatingMode
AFRCCloseHandle
AFRCSetTxCap
UpdateRxEstimate
AFRCCalcRxEstimate
AFRCSetAudioBitRate
New audio rate [%ukbps], fraction [%.2f], FEC [%.2f], RED[%u %u]
AFRCSetAudioPayload
AFRCGetAudioTxInfo
AFRCGetTxInfo
AFRCRecordMaxBurstyLoss
AFRCRecordMaxAudioConsecutiveLoss
AFRCUpdateVideoSendingBitrate
AFRCUpdateAudioSendingBitrate
AFRCSetFeedbackControlInfo
AFRCGetPeerArrivalTime
AFRCProcessVideoReceiveMetric
AFRCProcessFeedbackPacket
AFRCGetStat
AFRCProcessBasebandNotification
AFRCSetReceiveQueueSize
Video %s...
AFRCSetAudioPaused
AFRCSetAudioSilent
AFRCSetPLCalc
AFRCUpdateCellTech
AFRCUpdateRateTier
AFRCProcessWCMSetCallConfig
AFRCProcessWCMGetCallConfig
AFRCMarkNetworkChange
network state changed.
AFRCAddBBDump
AFRCMarkResetCS
reset connection stats.
AFRCSetConnectionNumber
connection #: (%d->%d).
BWEstResetRecvrBWState
BWEUpdateFilterType
BWEUpdateSenderRecvrEnabledStates
AFRCSetBWEstMode
AFRCGetSendersLogState
AFRCGetSenderRecvrModes
AFRCSetBWECap
AFRCSetStatisticsCollector
AFRCLog_OpenLogs
AFRC
com.apple.VideoConference.AFRClog
STime
dTime/ETxTS
OWRD
NOWRD
NOWRDS
NOWRDA
PLR/FEC
BR/TR
MQIn: A/V
MQOut: A/V
ABRL
TxAT
MODE
TxSTATE
Audio:PL/Rate
connection #: %d.
com.apple.VideoConference.AFRClogFB
MyTxTS
Delay
RecvKb
BLoss
AudioRecvPkt
VideoRecvPkt
YrTxTS
OWRD
AFRC-DashBoard.dump
========== Start logging from File %d ==========
AFRCCalcRxEstimate_New
NEW AFRCCalcRxEstimate [%d]: [%f] //////
/////tp: %d  ts/arr: %d/%f 
 seq: %d sz: %d 
 Probe: %d/%d 
 path: %d (%d)  BWD: %f/%f  Est: %f
///// 
 TS: %d  
 arrival: %f/%f 
 total: %d/%d (%.1f ms) ref_size: %d
NEW AFRCCalcRxEstimate: [%d]  (%d %d)  //////
NEW AFRCCalcRxEstimate: [%d]  //////
///// 
 LOSS [%d/%d] @ %d: //////
%ums(%u)%c 
UpdateBigFrameReporter
UpdateBBAction
%s%sAudio[%u %.2f %.2f %u %u], Action[%02X->%02X(%u)]%s.
HWM is hit! 
AWM is hit! 
Detected AS, restore state. 
Missed AS. 
, ignore samples
Stopped
Resumed
RampDownTxRate
Congestion!!! TxRate v %u, Baseband.
Rate change [%u] (Ramp Down to %u, Baseband).
Initial Rampup done!
Initial Rampup done!
DoRateControl
Congestion!!! TxRate v %u
Rate change [%u] (Ramp Down to %u, AFRC).
Congestion!!! Pause video.
Congestion!!! Pause video.
AFRC: Congestion!!! Pause video.
Initial Rampup Done!
TxRate ^ %u
Rate change [%u] (Ramp Up to %u).
Initial Rampup Done!
DetectCongestion
[%u] Rate was limited
Rate is limited(%ukbps).
[%u] Stabilized (TxTS %u >= %u FB). now collecting samples...
Rate(%ukbps) stabilized.
[%u] Collected %d samples (TxTS %u)
AFRC collected %d samples.
OWRD has been 0 for %f seconds, reset NOWRDAcc
AFRCLog_PrintCongestionInfo
%8.3f
%8.3f/%04X:
%.4f(%d)
RTT:%-4u
PLR:%4.1f@%.1f
RRx:%u
MBL:%u
%3u/%3u
 %3u:%3u/%3u  %3u:%3u/%3u
BB: %u
%s%s
 UAT
 LAT
AFRCLog_PrintCongestionFullInfo
%8.3f/%04X:
%.4f
%.4f
%.4f
%.4f %c
RTT:%-4u
PLR:%4.1f@%.1f
RRx:%u
MBL:%d %u
%3u/%3u
 %3u:%3u/%3u  %3u:%3u/%3u CS: %1d %3u %3u BB: %u
%s%s%s
%d/%d
%04X 
AFRCUpdateBBNote
Rate change done, [%.6f %u>=%d %u%s], taking new samples.
Still trying to flush baseband with flush counter: %d. Stop ramp-up and possibly decrease audio fraction based on BBAvgTxRate: %d
Flush counter: %d stuck for more than %d seconds. And baseband shows TxRate:%d, TxDelay:%d. Reset the flush counter.
Congestion!!! TxRate v %u, BaseBand.
%2u%2u%2u%2u%2u %6u
%u %4u
%.4f
%.4f
%4u %.2f %c(%1d,%1d) %1d %4d
%2u%2u%2u%2u%2u %6u
%u [Bogus notification, discard]
Get Out of Antenna Imbalance Mode!
Get Into of Antenna Imbalance Mode!
%s TID[%04X] Drop ACK for PT %u: %2u packets dropped [%s]%s
, taking new samples.
%s TID[%04X] Drop ACK, no packet dropped%s
%s TID[%04X] Drop ACK reported a failure%s
%s Request video refresh for PT (%u).
com.apple.VideoConference.AFRClogBB
STime
ATime
V-R-A-F-T
XmitB
LTxTS
ABRS
ABRL
BDCD
NBDCD
forcedTxCap
forcedTxRate
forcedPLRForAudioFEC100
forcedPLRForAudioFEC150
forcedPLRForAudioFEC200
ConfigureAFRCDefaults
rateControlAllowVideoStop
rateControlAllowBurstyLossRampDown
BWEstInit
BWEstEnableNewEstSenderSide
BWEstEnableNewEstRecvrSide
BWEstProbeInterval
BWEstLogType
BWEstLogLevel
BWEstDemoLogInterval
HackUploadBW
V1BWE
BWEstConfigureDefaults
BWEstUninit
BWEstCheckIfLargeFrameNeeded
setCapOnLF
BWE_FILTER__NONE
BWE_FILTER__WIFI
BWE_FILTER__CELLULAR_2G_3G
BWE_FILTER__CELLULAR_LTE
UNEXPECTED
MediaQueue_CreateHandle
MediaQueue_CloseHandle
MediaQueue_Start
com.apple.avconference.mediaqueue.sendproc
MediaQueue_Stop
MediaQueue_Malloc
MediaQueue_FreePacket
MediaQueue_AddPacket
MediaQueue_SetRedundantAudio
MediaQueue_SetAudioFraction
MediaQueue_SetAudioFECLevel
MediaQueue_GetTimeRateChanged
MediaQueue_UpdateAudioOnlyRateChange
MediaQueue_RecordNewPacketWithSize
MediaQueue_FindPacketInTxHistory
MediaQueue_CleanupTxHistory
MediaQueue_SetPLCalc
MediaQueue_SetActiveProbingLog
MediaQueue_SetAFRCSendMode
MediaQueue_SetRTPHandle
ActiveProbing_ProcessIncomingPacket
ActiveProbing_FlushPendingPackets
MediaQueue_SetThrottlingAudioInterval
MediaQueue_SetThrottlingIsIPv6
MediaQueue_RetrieveAudioVideoRates
MediaQueue_SetFECFeedbackVersion
MediaQueueSendProc
MediaQueue_SendPacket
MediaQueue - Last sent audio delayed. lastSentAudioPacketTime=%f currentTime=%f delta=%f
MediaQueue_UpdateSeqNumber
_MediaQueue_CheckActiveProbingQueueLength
ActiveProbing_Uninit
ActiveProbing_UpdateRTPProbeSeqId
-[VCControlChannelMultiWay(Encryption) updateEncryptionWithEncryptionMaterial:]
-[VCControlChannelMultiWay(Encryption) updateEncryptionWithKeyMaterial:]
-[VCControlChannelMultiWay(Encryption) setCurrentSendMKIWithKeyMaterial:]
-[VCControlChannelMultiWay(Encryption) updateEncryption:derivedSSRC:]
-[VCControlChannelMultiWay(Encryption) encryptData:size:sequenceNumber:]
-[VCControlChannelMultiWay(Encryption) decryptWithMKI:data:size:sequenceNumber:]
-[VCEmulatedNetwork initWithPolicies:]
RSUtil_SetOptimizationModeForFECUnit
_RSU_DecodeByteBuffer
RSU_Decode
_RSU_PrepareErasureLocationsInfo
_RSU_DecodeByteBufferSimd
_RSU_ScatterRecoveryDataToSimdOneSymbol
_RSU_GatherDecodedDataOneSymbol
_RSU_ScatterRecoveryDataToSimdTwoSymbols
_RSU_GatherDecodedDataTwoSymbols
_RSU_GatherDecodedDataFourSymbols
-[VCVideoStreamTransmitter initWithConfig:]
com.apple.VideoConference.VCVideoStreamTransmitter
com.apple.VideoConference.VCVideoTransmitter.Encoder
-[VCVideoStreamTransmitter startVideo]
VCVideoStreamTransmitter_EnqueueVideoFrame
cameraStatusBits
-[VCVideoStreamTransmitter generateKeyFrameWithFIRType:]
-[VCVideoStreamTransmitter setTemporaryMaximumBitrate:]_block_invoke
VCVideoStreamTransmitter_SetFECRatio
-[VCVideoStreamTransmitter setFECRedundancyVector:]
-[VCVideoStreamTransmitter setMediaSuggestion:]
-[VCVideoStreamTransmitter setEncodingMode:]
-[VCVideoStreamTransmitter handleThermalLevelChange:]
-[VCVideoStreamTransmitter updateWindowState:isLocal:windowRect:]
-[VCVideoStreamTransmitter encodeVideoFrame:]
-[VCVideoStreamTransmitter prependSPSPPS:dataPointer:sampleBuffer:]
-[VCVideoStreamTransmitter transmitEncodedVideoFrame:cameraStatusBits:]
-[VCVideoStreamTransmitter transmitEncodedVideoFrame:size:timestamp:hostTime:cameraStatusBits:]
-[VCVideoStreamTransmitter transmitFrameInGroups:numOfPackets:timestamp:hostTime:cameraStatusBits:]
-[VCVideoStreamTransmitter gatherRealtimeStats:]
VCVSTxMaxFrameDuration
VCVSTxAvgBitrate
VCVSTxMaxBitrate
VCVSTxMinBitrate
%5.2f
VCVSTxAvgFramerate
VCVSTxMaxFramerate
VCVSTxMinFramerate
VCVSTxKeyFramesSent
VCVSKeyFrameSize
-[VCVideoStreamTransmitter handleActiveConnectionChange:]
VCVideoStreamEncoderProc
encoderFrameCallback
com.apple.AVConference.VCCaptionsManager.XPCCommandQueue
-[VCCaptionsManager registerCaptionsSource:streamToken:]_block_invoke
vcCaptionsEnabled
vcCaptionsError
vcCaptionsDidEnableCaptions
vcCaptionsDisabled
vcCaptionsDidDisableCaptions
vcCaptionsStartReason
vcCaptionsDidCaptionsStart
vcCaptionsStopReason
vcCaptionsDidCaptionsEnd
vcCaptionsTranscription
vcCaptionsDidUpdateCaptions
JitterQueue_Insert
JitterQueue_Reset
JitterQueue_DiscardExcess
VCNWConnectionMonitor_Create
VCNWConnectionMonitor_CreateWithInterfaceName
VCNWConnectionMonitor_Destroy
VCNWConnectionMonitor_SetNotificationHandler
VCNWConnectionMonitor_SetPacketEventHandler
_VCNWConnectionMonitor_AddNotification
%llu
%llu
%llu
%llu
0x%x
%2.4f
_VCNWConnectionMonitor_ComputeMetrics
_VCNWConnectionMonitor_ProcessNotification
VCNWConnectionMonitor_SetStatisticsHandler
_VCNWConnectionMonitor_DispatchedCreate
_VCNWConnectionMonitor_DispatchedCreateWithInterfaceName
%p-%s
VCNWConnectionMonitor
.nwmonitordump
STime
Timestamp
Version
Direction
ByteCount
QSize1
QSize2
Delay
Throughput
TxRate
RateTrend
FrequencyBand
IntermittentState
IntermittentPeriod
SingleOutagePeriod
BtCoex
RadioCoex
ScoreDelayTx
ScoreDelayRx
ScoreLossTx
ScoreLossRx
ScoreChannel
OffChannelRatio
WlanDutyCycle
WifiObservedTxBitrate(BE)
WifiObservedTxBitrate(BK)
WifiObservedTxBitrate(VI)
WifiObservedTxBitrate(VO)
WifiObservedTxBitrate(LLW0)
WifiObservedTxBitrate(LLW1)
1234::1234
1234
120.0.0.1
_VCNWConnectionMonitor_DispatchedCreateWithInterfaceName_block_invoke
v20@?0i8^{nw_error=}12
_VCNWConnectionMonitor_CheckAndReleaseNWMonitor
_VCNWConnectionMonitor_DispatchedDestroy
_VCNWConnectionMonitor_DispatchedSetNotificationHandler_block_invoke
v28@?0*8Q16i24
_VCNWConnectionMonitor_DispatchedSetPacketEventHandler_block_invoke
v32@?0i8^[16C]12Q20i28
_VCNWConnectionMonitor_DispatchedSetStatisticsHandler_block_invoke
-[AVCEffects initWithDelegate:]
com.apple.avconference.effects
vcEffectsInitialize
ERROR
-[AVCEffects dealloc]
vcEffectsTerminate
-[AVCEffects setDelegate:]
-[AVCEffects setupRemoteReceiverQueueWithSenderQueue:]
vcEffectsServerDidDisconnect
vcEffectsServerTimeOut
vcEffectsFrameTime
vcEffectsClientReleasedVideoFrame
-[AVCEffects setMode:]
-[AVCEffects setEffectType:]
-[AVCEffects encodeProcessedVideoFrame:]
-[VCSessionUplinkVideoStreamController initWithVideoStreams:streamInfos:reportingAgent:delegate:]
-[VCSessionUplinkVideoStreamController setStreamIDsCell:]
-[VCSessionUplinkVideoStreamController setStreamIDsWifi:]
-[VCSessionUplinkVideoStreamController setPendingVideoStreams:]
-[VCSessionUplinkVideoStreamController printPendingKeyFrameWarningOnThresholdTimeElapsedWithCurrentFrameTime:]
-[VCSessionUplinkVideoStreamController setCurrentFrameTime:]
-[VCSessionUplinkVideoStreamController setIsLocalOnCellular:cappedVideoStreamIDs:]
-[VCSessionUplinkVideoStreamController setStreamsUseRTCPWithStreamInfos:]
-[VCSessionUplinkVideoStreamController anchorStreamIDWithCappedVideoStreamIDs:]
(%p) %s
-[VCSessionUplinkVideoStreamController initilizeStreamInfoMapWithStreamInfos:]
_streamInfoMap:
-[VCSessionUplinkVideoStreamController resumeStreams]
-[VCSessionUplinkVideoStreamController shouldGenerateIDRWithStreamSchedule:]
-[VCSessionUplinkVideoStreamController pauseStreams]
-[VCSessionUplinkVideoStreamController videoStreamPendingKeyFrameGenerationWithStreamID:shouldRemoveFromPendingArray:]
-[VCSessionUplinkVideoStreamController handleStreamsResetIDR]
-[VCSessionUplinkVideoStreamController restart]
v32@?0@"NSNumber"8@"VCVideoStream"16^B24
-[AVCPacketFilter isMatchedPacket:size:]
-[AVCPacketFilterRTP initWithIncomingSSRC:acceptPacketType:]
ACDTXEncoderFactory
ACDTXDecoderFactory
ACOpusEncoderFactory
ACOpusDecoderFactory
ACAMREncoderFactory
ACAMRDecoderFactory
ACEVSEncoderFactory
ACEVSDecoderFactory
ACSpeexEncoderFactory
ACSpeexDecoderFactory
RegisterExternalAudioCodecs
/System/Library/Frameworks/AudioToolbox.framework/AudioCodecs
VCMediaQueueUtil_FindPacketInTxHistory
+[VCAudioRuleCollection getForcedPayload]
+[VCPayloadUtils audioCodecTypeForPayload:]
+[VCPayloadUtils codecSamplesPerFrameForPayload:blockSize:]
+[VCPayloadUtils allowedBitratesForPayload:supportedBitrates:supportedBandwidths:]
+[VCPayloadUtils codecRateModeForDesiredANBR:payload:supportedBitrates:supportedBandwidths:]
+[VCPayloadUtils codecTypeForPayload:]
+[VCPayloadUtils payloadForCodecType:]
useStandardsBasedOpusCodec
+[VCPayloadUtils bitrateForAMRCodecMode:]
+[VCPayloadUtils bitrateForAMRWBCodecMode:]
VCPayloadUtils_AudioCodecRateModeForBitrate
_VCPayloadUtils_AudioCodecRateModeForAMRBitrate
_VCPayloadUtils_AudioCodecRateModeForAMRWBBitrate
com.apple.AVConference
com.apple.AVConferenceVCAudioPowerSpectrumManager.XPCCommandQueue
-[VCAudioPowerSpectrumManager init]
-[VCAudioPowerSpectrumManager registerAudioPowerMeterSource:]_block_invoke
-[VCAudioPowerSpectrumManager newPowerSpectrumMeterWithBinCount:refreshRate:delegate:error:]
-[VCAudioPowerSpectrumManager registerListenerWithStreamToken:powerSpectrumKey:powerSpectrumMeter:error:]
-[VCAudioPowerSpectrumManager unregisterListenerWithStreamToken:powerSpectrumMeter:error:]
-[VCAudioPowerSpectrumManager registerStreamTokenForCellularTapType:clientProcessId:error:]
-[VCAudioPowerSpectrumManager powerSpectrumMetersForCellularTapType:]
-[VCAudioPowerSpectrumManager cleanupPowerSpectrumSetForCellularTapType:]
-[VCAudioPowerSpectrumManager registerListenerWithCellularTapType:clientProcessId:powerSpectrumMeter:powerSpectrumMeterKey:error:]
-[VCAudioPowerSpectrumManager registerListenerWithCellularTapType:clientProcessId:powerSpectrumMeter:powerSpectrumMeterKey:error:]_block_invoke
-[VCAudioPowerSpectrumManager unregisterListenerWithCellularTapType:powerSpectrumMeter:error:]
vcAudioPowerSpectrumBinCount
-[VCAudioPowerSpectrumManager serviceHandlerPowerMeterInitializeWithArguments:error:]
vcAudioPowerSpectrumRefreshRate
CONTEXT
-[VCAudioPowerSpectrumManager serviceHandlerRegisterListenerWithArguments:error:]
vcAudioPowerSpectrumStreamToken
-[VCAudioPowerSpectrumManager serviceHandlerUnregisterListenerWithArguments:error:]
-[VCAudioPowerSpectrumManager serviceHandlerRegisterCellularTapWithArguments:error:]
CLIENTPID
vcAudioPowerSpectrumCellularTapType
vcAudioPowerSpectrumMeterKeyType
-[VCAudioPowerSpectrumManager serviceHandlerUnregisterCellularTagWithArguments:error:]
CLIENTDIED
@"NSDictionary"24@?0@"NSDictionary"8^@16
vcAudioPowerSpectrumInitializeRemoteVideoForStreamToken
vcAudioPowerSpectrumRegisterListener
vcAudioPowerSpectrumUnregisterListener
vcAudioPowerSpectrumRegisterCellularTap
vcAudioPowerSpectrumUnregisterCellularTap
vcAudioPowerSpectrumTerminateMeter
-[VCAudioPowerSpectrumManager audioPowerSpectrumMeter:didUpdateAudioPowerSpectrums:]
vcAudioPowerSpectrumRemoteSpectrum
vcAudioPowerSpectrumServerDidReceiveSpectrum
vcAudioPowerSpectrumServerSpectrumInterrupted
RTCPReducedSizePackets
RTCPSetHopByHopEncryptionEnabled
RTPGetRTCPHasPendingPLI
RTPGetRecvStats
RTCPSetSendPLI
RTCPSetSendTMMBR
RTPCheckRTCPSendIntervalElapsed
RTPSendControlPacket
RTPSendRateControlPacket
RTCPGetVoIPMetricsReportBlock
RTPSendRTCP
_RTCPTransport_ParsePacket
enableLTRPLogging
_RTCPPacketCallback
RTCPRegisterPacketCallback
v28@?0i8^v12^{_VTPPacket=d{sockaddr_storage=CC[6c]q[112c]}I{tagIPPORT=i[16c](?=I[16C])S}{tagVPKTFLAG=iIIBBBBii{tagVCSourceDestinationInfo=i(?={?={tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{?=BS}}{?=ii{tagIPPORT=i[16c](?=I[16C])S}i}{?=^{nw_connection}})I^{tagVCSourceDestinationInfo}^v}CiiiiiBBB{tagVCIDSChannelDataFormat=[12S]CBSCBBQBBBS{?=SSSSS}BBBQBSBBB}{tagPKT_TAG=[4Q]}I[16C]BB}{VCBlockBuffer_t=^{OpaqueCMBlockBuffer}Q*}}20
RTCPUnregisterPacketCallback
RTPRecvRTCP
RTPGetLatestRTCPTimestamp
RTCPInitializeReceptionReportBlock
_RTPTransportStreamRTCPCallback
_RTCPInitializeReceptionReportBlock
_RTCPAddSenderReportHeader
_RTCPAddXRPacket
_RTCPAddPSFBAlfbPacketTypes
_RTCPAddPSFBAlfbPacket
RTCPAddFIR
RTCPAddPLI
RTCPAddTST
TSTN
TSTR
RTCPAddTMMB
TMMBN
TMMBR
_RTCPSendWithSocket
_RTCPInitializePacketList
_RTCPProcessSenderReportPacket
_RTCPProcessReceiverReportPacket
_RTCPProcessAPPPacket
_RTCPProcessPSFBAlfbPacket
_RTCPParseVCPacket
_RTCPIsValidPacket
_RTCPSendWithTransportStream
-[VCDatagramChannelManager addDatagramChannelWithDescriptor:eventHandler:writeCompletionHandler:error:]
-[VCDatagramChannelManager addDatagramChannelWithDestination:eventHandler:writeCompletionHandler:dataPath:error:]
loopback:
emulatedNetworkConfigPath
-[VCDatagramChannelManager setupEmulatedDatagramChannelWithDestination:datagramChannel:]
-[VCDatagramChannelManager setupDatagramChannel:eventHandler:writeCompletionHandler:error:]
v46@?0r^v8I16{?=cSCSC}20^{?=IQSCc[12S]CS{?=SSSSS}dQBQ[16C]BB}30@"NSError"38
-[VCDatagramChannelManager removeDatagramChannel:]
VCFBOUtils_IsKindOfClass
streamGroupID
streamGroupMediaType
streamInputID
streamConfigurations
streamGroupSyncGroupID
streamInputs
streamGroups
ignore
type
subtype
maxWidth
maxHeight
maxFramerate
streams
width
height
framesPerSecond
onDemand
maxScreenPixels
isVideoResolutionCustom
isTemporalStream
codecs
codecType
codecPreferredMode
encoderUsage
redPayload
bitrateInfo
mediaBitrate
redFactors
packetsPerSecond
rtpTimestampRate
rtcpEnabled
rtpPayload
pTime
bundlingScheme
profileLevel
rtcpSendInterval
rtcpTimeOutEnabled
rtcpPSFBFIREnabled
sframeCipherSuite
audioChannelCount
isOpusInBandFecEnabled
fallbackStream
session_config_presence
session_config_GFT
+[VCSessionMediaStreamPresenceConfigurationProvider sessionConfigurationForType:]
-[VCSessionMediaStreamPresenceConfigurationProvider initWithConfigurationType:supportedAudioRules:streamIDGenerator:]
CompressedMoCap
FTXT_P3
%FRAMES_PER_SECOND_SCREENSHARE_BASE_TIER%
%BDAT_OLD_GROUP_DISABLED%
%FTXT_OLD_GROUP_DISABLED%
%FTXT_GROUP_DISABLED%
%BDAT_GROUP_DISABLED%
%FDAT_GROUP_DISABLED%
sessionConfigPlist
+[VCSessionMediaStreamPresenceConfigurationProvider loadSessionConfigurationWithResourceName:]
plist
+[VCSessionMediaStreamPresenceConfigurationProvider publicSessionConfigurationForType:]
forceFixedSSRCsForWebRTCStreams
+[VCSessionMediaStreamPresenceConfigurationProvider streamSSRCForStreamGroupID:streamIndex:]
+[VCSessionMediaStreamPresenceConfigurationProvider readUint32WithPList:key:defaultValue:]
-[VCSessionMediaStreamPresenceConfigurationProvider newStreamInputConfigurations]
-[VCSessionMediaStreamPresenceConfigurationProvider newVideoStreamInputConfigurationWithPList:]
-[VCSessionMediaStreamPresenceConfigurationProvider newDataStreamInputConfigurationWithPList:]
-[VCSessionMediaStreamPresenceConfigurationProvider newVideoMultiwayConfigWithPList:codecType:streamIDGenerator:ssrc:]
forceVideoOnDemand
-[VCSessionMediaStreamPresenceConfigurationProvider updateStreamConfig:forPayload:networkPayload:groupID:]
-[VCSessionMediaStreamPresenceConfigurationProvider checkEncoderSupportForConfig:]
-[VCSessionMediaStreamPresenceConfigurationProvider checkEncoderSupportForCodecType:]
-[VCSessionMediaStreamPresenceConfigurationProvider getVideoCodecConfigFromStreamConfigPList:]
-[VCSessionMediaStreamPresenceConfigurationProvider getVideoCodecFromStreamCodecPList:]
-[VCSessionMediaStreamPresenceConfigurationProvider newVideoStreamGroupStreamConfigWithPList:streamIDGenerator:ssrc:groupID:shouldSkip:]
-[VCSessionMediaStreamPresenceConfigurationProvider setupVideoStreamGroupStreams:streamGroupConfig:streamIDGenerator:]
-[VCSessionMediaStreamPresenceConfigurationProvider newAudioMultiwayConfigWithPList:audioRules:maxIDSStreamIDCount:streamIDGenerator:ssrc:]
forceAudioOnDemand
-[VCSessionMediaStreamPresenceConfigurationProvider setupRedFactorsWithPList:audioStreamConfig:]
-[VCSessionMediaStreamPresenceConfigurationProvider setupAudioRedWithPlist:audioStreamConfig:supportedAudioRules:]
-[VCSessionMediaStreamPresenceConfigurationProvider setupAudioRulesWithPList:audioStreamConfig:supportedAudioRules:]
-[VCSessionMediaStreamPresenceConfigurationProvider newAudioStreamGroupStreamConfigWithPList:supportedAudioRules:maxIDSStreamIDCount:streamIDGenerator:ssrc:groupID:]
-[VCSessionMediaStreamPresenceConfigurationProvider setupAudioStreamGroupStreams:streamGroupConfig:supportedAudioRules:streamIDGenerator:]
-[VCSessionMediaStreamPresenceConfigurationProvider newStreamGroupConfigurationWithPList:supportedAudioRules:streamIDGenerator:]
-[VCSessionMediaStreamPresenceConfigurationProvider newStreamGroupConfigurationsWithSupportedAudioRules:streamIDGenerator:]
-[VCDispatchTimer initWithIntervalMilliseconds:callbackBlock:clientQueue:]
-[VCDispatchTimer initWithIntervalMilliseconds:callbackBlock:clientQueue:]_block_invoke
-[VCDispatchTimer dealloc]
-[VCDispatchTimer start]
-[VCDispatchTimer stop]
VCAudioStream
-[VCAudioStream computePacketTimestampWithInputTimestamp:numSamples:hostTime:]
-[VCAudioStream generateRTCPXRSummaryReports:reportCount:]
-[VCAudioStream generateRTCPXRVoIPMetricsReports:reportCount:]
-[VCAudioStream startAudioWithCompletionHandler:]
-[VCAudioStream stopAudioWithCompletionHandler:]
-[VCAudioStream getSupportedPayloads]
-[VCAudioStream setupPayloads]
-[VCAudioStream getCodecConfigForPayload:block:]
v24@?0@"VCAudioStreamConfig"8@"VCAudioStreamCodecConfig"16
+[VCAudioStream audioIOTypeForMode:]
EVSSIDDuration
dtmfTonePlaybackEnabled
-[VCAudioStream setReceiverPayloads]
+[VCAudioStream operatingModeForAudioStreamMode:]
-[VCAudioStream setDeviceRoleForAudioStreamMode:direction:]
-[VCAudioStream setupAudioStreamWithClientPid:enableAudioPowerSpectrum:]
-[VCAudioStream dealloc]
audioTimescaleAlgorithm
audioJitterBufferQueueManagementAlgo
audioJitterBufferDisableSpikeManagement
enableEVSWidebandDecodeForAMRWideband
^\d{1,10}$
-[VCAudioStream createAudioReceiver]
useErasureSensitiveMode
audioIssueDetectorEnabled
UseAudioIssueDetectors
audioDumpEnabled
-[VCAudioStream createAudioTransmitter:streamIDs:]
-[VCAudioStream setVolume:]
-[VCAudioStream validateAudioStreamConfigurations:]
-[VCAudioStream setupSourceTransport:]
-[VCAudioStream createTransportWithStreamConfig:]
-[VCAudioStream cleanupBeforeReconfigure:]
simulateWebRTCOnlyClient
audioStreamPreferredMediaBitrate
/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCAudioStream.m
-[VCAudioStream onConfigureStreamWithConfiguration:error:]
Failed to create VCAudioIO
Invalid config caused VCAudioIO init to fail
_VCAudioStream_NWConnectionNotificationHandler
-[VCAudioStream onStartWithCompletionHandler:]_block_invoke_2
v20@?0B8@"NSError"12
v16@?0^{__CFDictionary=}8
-[VCAudioStream onPauseWithCompletionHandler:]_block_invoke
-[VCAudioStream onPauseWithCompletionHandler:]
-[VCAudioStream onResumeWithCompletionHandler:]_block_invoke
-[VCAudioStream onResumeWithCompletionHandler:]
-[VCAudioStream setTargetStreamID:]
-[VCAudioStream setupReportingAgent:]_block_invoke
v16@?0^{__CFArray=}8
VCVSStreamToken
VCMSDirection
CallID
VCSUUID
VCASStreamIDs
-[VCAudioStream updateCodecPayloadAndBitrateForStartEvent:bitrate:]
VCASMaxNetworkBitRate
VCVSRemoteDeviceModel
VCVSRemoteOSBuildVersion
VCASCurrentPayload
VCASCodecBitRate
VCASRedundancyLevel
VCASRedundancyDelay
-[VCAudioStream getConnectionTypeForStreamMode:]
VCAudioStream_PushAudioSamples
VCAudioStream_PushRemainingSamples
-[VCAudioStream queryAnbrBitrate:forDirection:]_block_invoke
v16@?0@"NSError"8
-[VCAudioStream handleCodecModeChangeEvent:]
-[VCAudioStream handleANBR:forDirection:]
-[VCAudioStream collectRxChannelMetrics:]
-[VCAudioStream didUpdateBasebandCodec:]
-[VCAudioStream telephonyInterface:anbrRecommendation:forDirection:]
-[VCAudioStream rateAdaptation:targetBitrateDidChange:rateChangeCounter:]
Audio
_VCAudioStream_UpdateRemoteMediaStallState
_VCAudioStream_CheckAbnormalOWRDAndResetLagReference
VCASHostTimeJumpSize
_VCAudioStream_ComputePacketTimestampWithInputTimestamp
_VCAudioStream_UpdateSourceNTPToRTPTimeMappingCallback
_VCAudioStream_ActiveStreamChangeCallback
_VCAudioStream_StreamSwitchCallback
generalInfo
bandwidthSettings
codecSupport
microphoneU1
cameraU1
momentsSettings
VCAudioDucker_Allocate
VCAudioDucker_Start
VCAudioDucker_Stop
VCAudioDucker_Process
AUDynamicDuckerFactory
Apple: DynamicDucker
_VCAudioDucker_SetProperties
_VCAudioDucker_SetTuningParameters
audioTimescalingHysteresisEnabled
VCTimescale_InitializeTimescaleAlgo
WSOLA
PSOLA
Empty
_VCTimescale_TimescaleEnablement
_VCTimescale_SetupAlgoInterfaces
RTPSendH264Packet
_RTPProcessSTAPPacket
_RTPProcessFUPacket
_RTPProcessSingleNALPacket
VERSION = %s, DTX Support
CALLID = %s
LogDump_OpenLog
Enabled
Disabled
enableTFRCDump
com.apple.VideoConference.Jitterlog
streamInputID=%ld
VCStreamIOAudioController
-[VCStreamIOAudioController initWithStreamInputID:streamToken:networkClockID:]
com.apple.AVConference.streamIOAudioController_%ld
-[VCStreamIOAudioController dealloc]
-[VCStreamIOAudioController _packetThreadStartWithClientFormat:]
v28@?0^v8*16I24
-[VCStreamIOAudioController startClient:]
AudioStreamBasicDescription is nil for client or stream. Client asbd=%s Stream asbd=%p for client (%p)
Client (%p) format=%s does not match stream input format=%s for StreamInputID=%ld
Client (%p) sinkIO is nil for StreamInputID=%ld
Unable to start the packet thread for Client=%p for StreamInputID=%ld
-[VCStreamIOAudioController startInputForClient:error:]
Client (%p) sourceIO is nil for StreamToken=%ld
Client (%p) Failed to create the outputClientThread
-[VCStreamIOAudioController startOutputForClient:error:]
-[VCStreamIOAudioController setupAndStartOutputClientThread]
-[VCStreamIOAudioController stopClient:]
Client (%p) cannot stop stream IO Audio when not running
Client (%p) does not match running client=%p. Cannot stop stream IO Audio
-[VCStreamIOAudioController stopClient:]_block_invoke
Client (%p) cannot start stream IO Audio when already running
Client (%p) direction is invalid
Client (%p) Starting output for client failed
Client (%p) Stop the output for client
-[VCStreamIOAudioController dispatchedStartClient:error:]
-[VCStreamIOAudioController updateClient:direction:]_block_invoke
-[VCStreamIOAudioController didUpdateBasebandCodec:]
_VCStreamIOAudioController_SampleBufferCallback
_VCStreamIOAudioController_GetSampleBufferTimestamp
_VCStreamIOAudioController_EnqueueSampleBuffer
networkTimestamp
RTPMapAddMappingForPayload
RTPMapResetMapping
RTPMapPrintMapping
RTPMapGetInternalPayload
RTPMapGetExternalPayload
avcKeyDaemonProcessInfoError
avcKeyDaemonProcessInfoUniquePID
vcGetDaemonProcessInfo
RTPCreateHandle
RTCPPacketAllocator
RTCPBlockBufferHeaderAllocator
RTPGetTimestampBase
RTPCloseHandle
RTPGetJitter
RTPGetPacketSent
RTPSetAudioReceiver
RTPSetWRMInfo
RTPGetPacketLossMetrics
RTPResetHandle
RTPResetDecryptionStatus
RTPSetDestinationWithToken
RTPSetDestination
RTPSetRTCPFB
RTPSetTxPayloadList
RTPSetRxPayloadList
RTPAddMappingForPayload
RTPResetPayloadMapping
RTPGetInternalPayload
RTPGetExternalPayload
RTPSetSourceRate
RTPGetPacketMultiplexMode
RTPSetPacketMultiplexMode
RTPSetThrottlingAudioInterval
RTPSetRTCPEnabled
RTPSetRTCPXREnabled
RTPSetRTCPSendInterval
RTPGetSequenceNumber
RTPGetSendROCWithSequenceNumber
RTCPGetReportNTPTimeMiddle32
RTPGetExtendedSequenceNumber
RTPSendRTP
SendRTP
Failed to add data into RTP packet
_RTPSendTimestampWithMediaSampleTime
_RTPMediaSampleTimeWithReceiveTimestamp
RTPProcessDecryptionStatusChange
RTPReleaseRTPPacket
RTPRecvRTP
_RTPTransport_ParseMediaPacket
_RTPRecvWithSocket
_RTPSocketRTPAndBBNoteCallback
RTPGetReceiveStatus
RTPGetLocalSSRC
RTPSetRemoteSSRC
RTPSetCellularUniqueTag
RTPSetStreamDirection
_RTPConfigureVirtualSockets
RTPSetSockets
RTPSetNWConnections
RTPCreateSocketsForIDSInternal
RTPCreateSocketsForIDS
RTPCreateSocketsRetryBind
RTPSetCName
RTPCreateSockets
RTPSetMediaQueue
RTPSetVCMediaQueue
RTPSetStatisticsCollector
RTPSetBasebandCongestionDetector
RTPSetAFRCHandle
RTPGetAFRCTxInfo
RTPSetRedundantAudio
RTPGetOWRD
RTPSetOWRD
RTPGetAFRCStat
RTPSetAFRCRecvMode
RTPUpdateAudioOnlyRateChange
RTPResetConnectionStats
RTPUpdateIsIPv6
RTPGetIsIPv6
RTPGetAFRCProbeSeqId
RTPInsertAFRCProbeSeqId
RTPSetWRMMetricConfig
RTPSetWRMMetricsCallback
RTPSetWRMCallId
RTPUpdateWRMInfo
RTPSetSendTimestampRate
RTPProcessMediaControlInfo
RTPRegisterPacketCallback
RTPUnregisterPacketCallback
RTPSetTimestampRateScale
RTPCopyPreferredSendQueue
RTPSetTransportStreams
v16@?0^{VCPacket=^{OpaqueCMBlockBuffer}{?=BB[12S]CCBQB[4Q]{?=iiBQ}(?={?=II[16C]BB}{?=dCB})}{?=^{VCPacket}}}8
RTPClearTransportStreams
_RTPEnsureTransportStreamsActivated
RTPGetReceiveStatusWithRunLoop
RTPSetConnectionManager
RTPSetVCSecurityKeyHolder
RTPReset
_RTPSendWithTransportStream
_RTPProcessDecryptionStatusChange
_RTPTransport_PrepareRTPHeader
_RTPTransport_ReinitializeStream
_RTPTransport_DetectPacketLoss
_RTPTransport_PacketExtensionLength
_RTPTransport_ExtractPacketExtension
_RTPTransport_ExtractPacketData
RTPUninitialize
_RTPTransport_ParseBasebandNotification
RTPMapPacketMultiplexModeToVTPMode
user
hostname
%s%08X@%s%s%s
RTPSetDefaultCNAME
CreateSocket
_RTPEnsureTransportStreamsDeactivated
_RTPSetIsIPv6WithTransportStream
_RTPClearTransportStreamsInternal
_RTPSetPayloadListOnPacketFilter
_RTPSetRemoteSSRCOnPacketFilters
_RTPSetCellularUniqueTagOnPacketFilters
_RTPTransportStreamRTPAndBBNoteCallback
_RTPSetReceiveStatusFlags
_RTPWaitForReceiveFromTransportStreams
BitrateToQuality
FileUtil_PrintBasicDesc
useZeroSignaling
SoundDec_Create
in  format:
out format:
DecodeNilPacket
SoundDec_Decode
 (AVC Out of Data error)
_SoundDec_HandleCodecModeRequest
SoundDec_Encode
SoundDec_SetDTXPrimerSamples
SoundDec_SetDTX
SoundDec_SetEVSSIDPeriod
SoundDec_SetEVSInitialBitrate
_SoundDec_SetEVSRFParams
SoundDec_SetEVSChannelAwareOffset
SoundDec_SetEVSFormatHandling
SoundDec_SetEVSDecodeRF
SoundDec_SetAMRPayloadFormat
SoundDec_SetAACELDPacketLossConcealmentAlgorithm
SoundDec_SetBitrate
SoundDec_GetMagicCookie
SoundDec_GetSpeechCodecBundleData
SoundDec_SetMagicCookie
SoundDec_SetOpusInBandFecEnabled
SoundDec_SetPacketLossPercentage
SoundDec_GetOpusDecodeFECStatus
SoundDec_SetCMR
TranslateASBDToPayloadFormat
_SoundDec_SetBitrateInternal
_SoundDec_SetEVSAudioCodecBandwidthInternal
_SoundDec_SetEVSCMRInternal
_SoundDec_SetAMRCMRInternal
com.apple.AVConference.vcCoreMotion.serialQueue
com.apple.AVConference.vcCoreMotion.delegateQueue
com.apple.private.alloy.avconference.icloud
-[VCDatagramChannelIDS datagramChannelWithDestination:error:]
loopback:Conference
-[VCDatagramChannelIDS start]
Signalled error at %s: Failed to create VTP socket
-[VCDatagramChannelIDS setupVTPSocketWithFileDescriptor:]
VCVideoPlayer
_VCVideoPlayer_GetDisplayTimestamp
_VCVideoPlayer_LogPlayoutTimeChange
_VCVideoPlayer_PreventBackwardPresentationTime
_VCVideoPlayer_GetPresentationTime
_VCVideoPlayer_ShouldProcessAlarmForDisplayLinkImmediateDecode
_VCVideoPlayer_ShouldProcessAlarmForDisplayLinkWithDisplayAlarms
_VCVideoPlayer_ProcessAlarmForDecode
_VCVideoPlayer_ProcessAlarmForDisplay
_VCVideoPlayer_CheckAndProcessAlarm
_VCVideoPlayer_CheckAndProcessDisplayAlarms
_VCVideoPlayer_QueueAlarm
Player
Decode
VCVideoPlayer_CallAlarms
com.apple.avconference.VCVideoPlayer.alarmproc
VCVideoPlayer_Create
videoPlayerProcessDisplayFramesOnlyOnDisplayLinkThread
avSyncAudioEarlyThreshold
avSyncAudioLateThreshold
avSyncAudioTimestampJumpDetectionThreshold
avSyncMaxAudioJitterBufferLevelThreshold
VCVideoPlayer_Destroy
_VCVideoPlayer_ShouldProcessAVSyncOffset
_VCVideoPlayer_DumpAVSyncState
_VCVideoPlayer_HealthPrint
VCVideoPlaybackAlarmThread
videoPlayerAverageDecodeTime
CStrToFourcc
{ %u, %s, %x, %d, %d, %d, %d, %d }
nope
<NULL>
SummerCreateHandle
SummerCloseHandle
SummerAdd
SummerLengthPred
SummerSumPred
hw.optional.altivec
hw.optional.mmx
hw.optional.sse
hw.optional.sse2
hw.optional.sse3
hw.physicalcpu
Gossamer
Power Macintosh G3 Beige Revision A or B
PowerMac-G3
Power Macintosh G3 Beige Revision C
PowerMac1,1
Power Macintosh G3 (Blue and White)
PowerMac1,2
Power Macintosh G4 (PCI Graphics)
iMac (Rev a-d)
PowerMac2,1
iMac (Slot Loading)
PowerMac2,2
iMac (Summer 2000)
PowerMac3,1
Power Macintosh G4 (AGP Graphics - Sawtooth)
PowerMac3,2
PowerMac3,3
Power Macintosh G4 (Gigabit Ethernet)
PowerMac3,4
Power Macintosh G4 (Digital Audio)
PowerMac3,5
Power Macintosh G4 (QuickSilver)
PowerMac3,6
Power Macintosh G4 (Mirrored Drive Doors)
PowerMac4,1
iMac (Summer 2001) or iMac (Early 2001)
PowerMac4,2
iMac (Flat Panel)
PowerMac4,4
eMac
PowerMac8,1
iMac (G5)
PowerMac8,2
PowerMac12,1
PowerMac5,1
Power Macintosh G4 Cube
PowerMac5,2
PowerMac7,2
Power Macintosh G5
PowerMac7,3
RackMac1,1
Xserv
PowerBook1,1
PowerBook G3 Series (Bronze Keyboard/Lombard)
PowerBook1998
PowerBook G3 Series (Mainstreet/Wallstreet)
PowerBook4,4
iBook (Unknown Type)
PowerBook4,3
PowerBook4,2
iBook (Dual USB) with 14" Screen Option
PowerBook4,1
iBook (Dual USB)
PowerBook2,2
iBook (FireWire)
PowerBook2,1
iBook
PowerBook6,1
PowerBook G4 12in
PowerBook6,3
PowerBook5,2
PowerBook G4 17in
PowerBook5,1
PowerBook3,5
PowerBook G4 (1 GHz)
PowerBook3,4
PowerBook G4 (DVI)
PowerBook3,3
PowerBook G4 (Gigabit Ethernet)
PowerBook3,2
PowerBook G4 (Titanium)
PowerBook3,1
PowerBook G3 (FireWire)
powerbook1,
powerbook2,
powerbook3,
powerbook4,
powerbook5,
powerbook6,
powermac7,
powermac8,
powermac12,
book
ReadFirstMBAndSliceType
hwrandom
hwrandom16
ReadFrameSliceHeader
Width
Height
FirstMB
SliceType
SimplifyRatio
 %u,
isGenerateStackshotEnabled
VCUtil_GenerateStackshot
TranslateVCPSliceTypeToGKS
-[VCStatsRecorder updateSessionStats:connection:totalPacketSent:totalPacketReceived:]
-[VCStatsRecorder getLocalStats:localSessionStats:]
-[VCStatsRecorder serverStatsSizeInByteForUplink:connection:]
supportedCodecs
DoubleQueueImpairments
QueueAImpairments
QueueBImpairments
-[VCEmulatedNetworkDoubleQueue initWithPolicies:]
-[VCEmulatedNetworkDoubleQueue push:]
-[VCRateControlOWRDEstimator relativeSendTimeWithTimestamp:timestampRate:]
-[VCRateControlOWRDEstimator relativeReceiveTimeWithTimestamp:timestampRate:]
-[VCRateControlOWRDEstimator calculateOWRDWithSendTime:receiveTime:roundTripTime:]
-[VCRateControlOWRDEstimator detectAbnormalOWRDWithRoundTripTime:]
-[VCRateControlOWRDEstimator detectOutOfOrderAndSpikeWithSendTimestamp:]
-[VCRateControlOWRDEstimator detectOutOfOrderAndSpikeWithReceiveTimestamp:]
-[VCRateControlOWRDEstimator resetOWRDEstimation]
-[NSData(VCControlChannelMessageProtocol) VCCCGetBytes:size:]
-[NSString(VCControlChannelMessageProtocol) VCCCGetBytes:size:]
FECUtil_GetRealNumParity
FECUtil_ConvertNumberOfSymbolsToPackets
FECUtil_UnpackFrameLoss
-[VCAudioStreamSendGroupConfig init]
{?=iB@}
-[VCEmulatedNetworkElement initWithPolicies:]
-[VCEmulatedNetworkElement write:]
-[VCEmulatedNetworkElement connectTo:]
v16@?0@"VCEmulatedPacket"8
-[VCEmulatedNetworkElement connectFrom:]
paused
Unknown (%d)
-[VCMomentsHistoryBuffer initWithDelegate:bufferLength:dispatchQueue:]
-[VCMomentsHistoryBuffer updateBufferWithSample:timestamp:]
-[VCMomentsHistoryBuffer getClosestSampleForTimestamp:]
-[VCMomentsHistoryBuffer dequeueOneFrame]
-[VCMomentsHistoryBuffer enqueueWithSample:timestamp:]
-[VCCellularAudioTapIO initWithStreamToken:powerSpectrumSource:]
vcKeyVideoStreamDownlinkOptimalBitrate
vcKeyVideoStreamDownlinkOperatingBitrate
vcKeyVideoStreamDownlinkIsOperatingAtMaxBitrate
vcKeyVideoStreamDownlinkIsOperatingAtMinBitrate
vcKeyVideoStreamUplinkOperatingBitrate
ERROR_DOMAIN
ERROR_CODE
ERROR_USERINFO
vcMediaStreamError
com.apple.AVConference.VCStreamManagerXPCQueue
-[VCMediaStreamManager pauseStreams:]
v16@?0Q8
-[VCMediaStreamManager vcMediaStreamServerDidDie:]
vcMediaStreamDidServerDie
vcMediaStreamDidInterruptionBegin
vcMediaStreamDidInterruptionEnd
vcMediaStreamDTMFDigitReceived
vcMediaStreamTTYCharacterReceived
vcMediaStreamTextReceived
vcMediaStreamRTPPacketTimeout
vcMediaStreamRTCPPacketTimeout
vcMediaStreamRTCPPackets
vcMediaStreamRTCPPacketsReceived
vcMediaStreamInputFreqMetering
vcMediaStreamUpdateInputFrequencyMetering
vcMediaStreamOutputFreqMetering
vcMediaStreamUpdateOutputFrequencyMetering
vcMediaStreamDownlinkQualityInfo
vcMediaStreamDownlinkQualityDidChange
vcMediaStreamUplinkQualityInfo
vcMediaStreamUplinkQualityDidChange
vcMediaStreamUpdatedVideoConfiguration
-[VCMediaStreamManager vcMediaStream:didUpdateVideoConfiguration:error:dictionary:]
vcMediaStreamDidUpdateVideoConfiguration
-[VCMediaStreamManager addSyncSourceToVideoStreamConfig:sourceStreamToken:error:]
/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCMediaStreamManager.m
Invalid synchronization source token
Failed to set synchronization source
vcMediaStreamDidStopConnection
vcMediaStreamDictionary
-[VCMediaStreamManager registerBlocksForService]_block_invoke
USERXPCARGUMENTS
vcMediaStreamToken
vcMediaStreamStreamCapabilities
vcMediaStreamInitializeAudio
vcVirtualTTYDeviceInitialize
vcVirtualRTTDeviceInitialize
vcVirtualTTYDeviceSendCharacter
vcVirtualTTYDeviceSendText
vcVirtualTTYDeviceTerminate
-[VCMediaStreamManager registerBlocksForService]_block_invoke_4
vcMediaStreamTerminateAudio
vcMediaStreamTXCodecType
vcMediaStreamRXCodecType
vcMediaStreamSyncStreamToken
Unexpected stream type
setStreamConfig called on an unsupported object
Stream config allocation failure
Failed to allocate the stream configuration
vcMediaStreamSetSessionConfig
vcMediaStreamSendDTMFEvent
vcMediaStreamStopSendDTMFEvent
vcMediaStreamVolume
-[VCMediaStreamManager registerBlocksForService]_block_invoke_3
vcMediaStreamSetVolume
vcMediaStreamConnectionStarted
vcMediaStreamDidStartConnection
vcMediaStreamStartConference
-[VCMediaStreamManager registerBlocksForService]_block_invoke_2
vcMediaStreamStopConference
vcMediaStreamSynchronizationStarted
vcMediaStreamDidStartSynchronization
vcMediaStreamStartSynchronization
vcMediaStreamPauseState
vcMediaStreamPaused
vcMediaStreamResumed
vcMediaStreamDidPause
vcMediaStreamDidResume
vcMediaStreamSetPause
vcMediaStreamUpdateVideoConfig
vcMediaStreamDirection
vcMediaStreamSetStreamDirection
vcMediaStreamRTCPEnabled
vcMediaStreamSetRTCPEnabled
vcMediaStreamRTPTimeoutEnabled
vcMediaStreamSetRTPTimeoutEnabled
vcMediaStreamRTCPTimeoutEnabled
vcMediaStreamSetRTCPTimeoutEnabled
vcMediaStreamRTPTimeoutInterval
vcMediaStreamSetRTPTimeoutInterval
vcMediaStreamRTCPTimeoutInterval
vcMediaStreamSetRTCPTimeoutInterval
vcMediaStreamRTCPSendInterval
vcMediaStreamSetRTCPSendInterval
vcMediaStreamInputFreqMeterEnabled
vcMediaStreamGetInputFrequencyMeteringEnabled
vcMediaStreamSetInputFrequencyMeteringEnabled
vcMediaStreamOutputFreqMeterEnabled
vcMediaStreamGetOutputFrequencyMeteringEnabled
vcMediaStreamSetOutputFrequencyMeteringEnabled
vcMediaStreamInitializeVideo
vcMediaStreamTerminateVideo
vcMediaStreamRequestLastDecodedFrame
vcMediaStreamInitializeText
vcMediaStreamTerminateText
RTPUnpackGenericDataPacket
-[VCMediaNegotiatorStreamGroupStreamConfiguration applyCipherSuiteOnMediaStreamConfig:codecConfigs:]
com.apple.AVConference.VCDaemonProcessInfoManagerXPCQueue
VCDaemonProcessInfo
streamGroup
payloads
settingsU1
Video rule width %d height %d frame rate %.1f pref %.2f payload: %d
videoStreamRampUpPacketLossRate
videoStreamRampDownPacketLossRate
videoStreamRampDownRoundTripTime
%@ state:%d RTT:%.3f packetLossRate:%f
%8.3f/%04X:
%.4f
%.4f
%.4f
%.4f %c
RTT:%-4u
PLR:%4.2f@%.1f
RRx:0
MBL:0
%3u/%3u
 0:0/0  0:0/0 CS: 0 0 0 BB: 0
 UAT S _
-[VCVideoStreamRTTPLRRateControl stateChange:]
-[VCEmulatedPacket initWithPacketID:datagram:datagramSize:]
.vpbdump
VideoPacketBuffer
VideoPacketBuffer_Create
VideoPacketBufferBlockBufferAllocator
VPBSampleBufferAllocator
VideoPacketBufferSliceHeaderAllocator
VideoPacketBuffer_Destroy
VideoPacketBuffer_ResetBurstLossStatistics
_VideoPacketBuffer_ProcessFrameStats
VideoPacketBuffer_UpdateMaxFrameBurstLossStatistics
VideoPacketBuffer_UpdateMaxGroupBurstLossStatistics
VideoPacketBuffer_AddPacket
VideoPacketBuffer_ScheduleFutureFrame
_VideoPacketBuffer_SchedulePastIncompleteFrame_InternalLoop
VideoPacketBuffer_SchedulePastIncompleteFrame
VideoPacketBuffer_GetNextFrame
_VideoPacketBuffer_FreeAllFrames
Invalid
Unknown
Bad Slice size
Need image description
Slices don't match without new image description
Needed a refresh frame, but this is not one
Preceding loss but not refresh frame
Failed to allocate frame buffer
RTPProcessH264Packet failed
First packet is not start of GOB
Loss in middle of frame
Failed to append packet
Frame did not end with end_of_frame packet
No IDR received and this frame is not an intra frame
Non-zero macroblock number on first slice
Too many slices
Bad Buffer
Decoder requested
Asynchronous decoder requested in callback
Compressed frame creation failed
Expected decoding order is invalid
Frame decoding order is out of order
Failed to enqueue in video queue
Full subframe was lost
Resetting non target stream
Set target stream
Frames in decode queue were flushed, high watermark reached
Decoder requested refresh frame
VideoPacketBuffer_Reset
_VideoPacketBuffer_LogNewPacket
%s, AddPacket: seq:%d, TS:%u, frameSeq: IsOOO:%d
_VideoPacketBuffer_CorrectFrameStats
_VideoPacketBuffer_StartTrackingEvictedFrameStats
_VideoPacketBuffer_UpdatePreviousFrameSequenceNumber
_VideoPacketBuffer_UpdateFrameDecodingOrder
_VideoPacketBuffer_ShouldInsertNonParityPacketBeforePacket
_VideoPacketBuffer_ShouldInsertParityPacketBeforePacket
_VideoPacketBuffer_IsFrameComplete
_VideoPacketBuffer_ScheduleSingleFrame
_VideoPacketBuffer_ShouldSkipTemporalFrameScheduling
RecoverOneFECGroup
parity
data
VideoPacketBuffer_CreateBlockBufferForPacket
_VideoPacketBuffer_IsIncompleteFramesTooOld
_VCVideoPacketBuffer_AssembleFrame
NONE
%s TS:%X %dB reason = %s
_VCVideoPacketBuffer_ProcessRTPPackets
%s, %u -> %u: %s%d, %d-%d-%d (%dB)
FEC recovered %d parity %d
missing 
_VCVideoPacketBuffer_DetectMissingPackets
_VCVideoPacketBuffer_StripFakeLargeFramePadding
_VCVideoPacketBuffer_ParseCompletedPacket
%d: MB %u ST %u
%d: FirstMB!=0 Stop!
%d: iSlices >= MAX_SLICES  Stop!
SPS/PPS received
ImgDesc: %dx%d
_VideoReceiver_HandlePrecedingLossOnBaseLayerOfTemporalStream
_VideoPacketBuffer_ConfirmFrameAssembledAndCalculateStats
%s (%i)
_VideoPacketBuffer_PrintMissingSequenceNumbers
_VideoPacketBuffer_CheckForMissingBaseLayerAssemblyOfTemporalStream
_VideoPacketBuffer_MoveEvictedFrameToIncompleteFrameBuffer
VCAudioDecoderList_GetDecoderSettings
VCAudioDecoderList_Cleanup
VCAudioDecoderList_SetMagicCookieForPayload
VCAudioDecoderList_GetEVSHeaderFormat
VCAudioDecoderList_Setup
VCAudioDecoderList_GetSpeechCodecBundleData
VCAudioDecoderList_IsDTXFrame
-[VCConnectionLegacy initWithConnectionResult:type:]
-[VCConnectionLegacy isLocalIPPort:]
-[VCConnectionLegacy isRemoteIPPort:]
-[VCConnectionLegacy isOnSameIPPortWithConnection:]
-[VCConnectionLegacy isOnSameInterfacesWithConnection:]
[%s %@(%s)<>%@<===>%@<>%@(%s)]
RELAY
NOT RELAY
WiFi
Cell
-[VCConnectionLegacy downlinkBitrateCap]
-[VCConnectionLegacy uplinkBitrateCap]
-[VCConnectionLegacy setDownlinkBitrateCap:]
-[VCConnectionLegacy setUplinkBitrateCap:]
-[VCConnectionLegacy uplinkAudioBitrateCapOneToOne]
-[VCConnectionLegacy setUplinkAudioBitrateCapOneToOne:]
-[VCConnectionLegacy uplinkBitrateCapOneToOne]
-[VCConnectionLegacy setUplinkBitrateCapOneToOne:]
-[VCMediaNegotiationBlobV2StreamGroupStream(Utils) initWithStreamConfig:payloadConfigs:streamGroupID:defaultConfig:]
-[VCMediaNegotiationBlobV2StreamGroupStream(Utils) initWithStreamConfig:payloadConfigs:streamGroupID:]
-[VCMediaNegotiationBlobV2StreamGroupStream(Utils) initSSRC:]
-[VCMediaNegotiationBlobV2StreamGroupStream(Utils) streamConfigWithPayloadConfigs:payloadConfigSampleRates:streamGroupID:]
[%lu] %@
Stream: QualityIndex=%4d
 SSRC=%08x StreamID=%5d NetworkBitrate=%6d
 Repair[ID=%5d NetworkBitrate=%6d]
 RTPSampleRate=%d
 channels=%u
+[VCMediaNegotiationBlobV2StreamGroupStream(Utils) printWithLogFile:prefix:streamConfig:]
+[VCMediaNegotiationBlobV2StreamGroupStream(Utils) defaultsForStreamGroupID:streamIndex:]
+[VCMediaNegotiationBlobV2StreamGroupStream(Utils) payloadsWithStreamConfig:payloadBitmap:]
+[VCMediaNegotiationBlobV2StreamGroupStream(Utils) payloadSpecWithStreamConfig:payloadConfigs:payloadSpecs:]
+[VCMediaNegotiationBlobV2StreamGroupStream(Utils) payloadsWithPayloadBit:]
-[VCMediaNegotiationBlobV2StreamGroupStream(Utils) updatePayloadSpecsForConfig:defaultConfig:]
-[VCMediaNegotiationBlobV2StreamGroupStream(Utils) updatePayloadSpecsForConfig:defaultConfig:payloadConfigs:]
 metadata=[
 payloads=[
 payloadSpecs=[
%@%@
-[VCMediaNegotiationBlobV2StreamGroupStream(Utils) optionalPackedPayloaWithDefaultConfig:]
-[VCMediaNegotiationBlobV2StreamGroupStream(Utils) requiredPayloadCompressWithConfig:]
-[VCMediaNegotiationBlobV2StreamGroupStream(Utils) optionalPayloadCompressWithConfig:]
SubStream
TemporalStream
UsePayloadSpec
SupportedMask
H264
HEVC
Data
OPUS
AACELD_24000
EVS_32000
AACELD_48000
MOCAP
MMJI
VCAudioIssueDetectorUtil_Create
VCAudioIssueDetectorUtil_Configure
VCAudioIssueDetectorUtil_UpdateConnectionType
VCAudioIssueDetectorUtil_Start
VCAudioIssueDetectorUtil_Stop
VCAudioIssueDetectorUtil_ProcessFrame
VCAudioIssueDetectorUtil_FlushLogEvents
_VCAudioIssueDetectorUtil_StateMachine
_VCAudioIssueDetectorUtil_HandleInitStateEvents
_VCAudioIssueDetectorUtilDeInit
_VCAudioIssueDetectorUtil_HandleIdleStateEvents
_VCAudioIssueDetectorUtil_EnqueueDistortion
_VCAudioIssueDetectorUtil_ReportAggregatedAudioStats
AudioTotalFrameCount
AudioSpeechFrameCount
AudioSilenceFrameCount
AudioSpeechBadFrameCount
AudioSpeechLostFrameCount
AudioNoDataFrameCount
AudioStatDirection
RATType
CodecSampleRate
UplinkCodecBitRate
DownlinkCodecBitRate
CodecPayload
_VCAudioIssueDetectorUtil_ReportAggregatedDistortionStats
AudioDistortionContinuousSpeechLoss
AudioDistortionAverageSpeechLoss
AudioDistortionRxLinkBroken
AudioDistortionRxSilence
AudioDistortionTxSilence
AudioDistortionZerosTx
AudioDistortionZerosRx
AudioDistortionLowEnergyTx
AudioDistortionLowEnergyRx
AudioDistortionHighNoiseTx
AudioDistortionHighNoiseRx
%sCount
%sDuration
_VCAudioIssueDetectorUtil_HandleSilenceStateEvents
_VCAudioIssueDetectorUtil_HandleSpeechStateEvents
_VCAudioIssueDetectorUtil_HandleLogEvents
_groupID=%s, _mediaType=%s, _syncGroupID=%s, _cipherSuite=%d streamConfigs=%@
-[VCImageRotationConverter initWithRotationAngle:width:height:formatType:]
v20@?0^{__CFString=}8I16
-[VCVideoSourceTokenManager init]
com.apple.avconference.VCVideoSourceTokenManager
-[VCVideoSourceTokenManager createtokenForDeviceName:sourceType:]
-[VCSystemAudioCaptureController initWithConfig:]
-[VCSystemAudioCaptureController dealloc]
+[VCSystemAudioCaptureController isValidConfiguration:]
PID=%d 
SessionType(pre-spatial)=%d 
CaptureContext=%@ 
com.apple.AVConference.systemAudioCaptureController
.pid_%d
.session_type_%d
.scene_id%@
-[VCSystemAudioCaptureController startClient:]
Client (%p) can not start system audio capture when already running
Client (%p) failed to start system audio capture
-[VCSystemAudioCaptureController startClient:]_block_invoke
-[VCSystemAudioCaptureController stopClient:]
Client (%p) can not stop system audio capture when not running
Client (%p) error stopping system audio capture
-[VCSystemAudioCaptureController stopClient:]_block_invoke
-[VCSystemAudioCaptureController updateClient:direction:]
-[VCSystemAudioCaptureController didUpdateBasebandCodec:]
com.apple.AVConferenceVCMoments.Notification
-[VCMoments validateIncomingRequest:isRemote:]
vcMomentsTransactionID
vcMomentsRequestMode
vcMomentsRequestState
vcMomentsRequestTimestamp
vcMomentsMediaType
vcMomentsInitiatorID
vcMomentsRequesteeID
vcMomentsRequesterID
vcMomentsFileSize
vcMomentsRequestDidSucceed
-[VCMoments processRequest:isRemote:]
-[VCMoments setCapabilities:]
-[VCMoments processClientRequest:error:]
-[VCMoments registerClient]
-[VCMoments deregisterClient]
-[VCMoments updateActiveStatus]
-[VCMoments processRemoteRequest:withMediaType:]_block_invoke_2
v32@?0@"NSURL"8@"NSURL"16@"NSError"24
-[VCMoments processRemoteLivePhotoRequest:]
-[VCMoments processRemoteLivePhotoRequest:]_block_invoke_2
-[VCMoments processRemotePhotoRequest:]
-[VCMoments notifyFinishWithRequest:didSucceed:fileSize:]
VCMomentsError
+[VCMoments typeForRequest:]
VCAudioRedBuilder
%s: primaryPayload:%s redPayloads:%s
-[VCAudioRedBuilder buildRedPayloadWithPrimaryPayload:redPayloads:]
Max RED payload size overflow. outputPayloadBufferLength=%ld, lastRedPayloadBufferLength=%d, maxPayloadLength=%zu, remainingLength=%d
-[VCAudioRedBuilder isPayloadTimestampWithinThreshold:forTimestamp:]
%s: redTimestamp:%d current:%s previous:%s
-[VCAudioRedBuilder nearestRedPayloadForTimestamp:]
%s: primary:%s numPayloads:%d maxDelay:%d strideInBlocks:%f
-[VCAudioRedBuilder selectRedPayloadsForPrimaryPayload:]
%s: primary:%s numPayloads:%d maxDelay:%d count:%d
{ VCAudioRedPayload payloadType=%d bufferLen:%d timestamp=%u isRedAudio=%d redCount=%d sequenceOffset=%d }
VCAudioRedPayload NULL
count:%d history:%s 
VCAudioRedBuilder_UpdatePayloadHistory
count=%d history=%s
-[VCAudioRedBuilder resetPayloadHistory]
-[VCAudioRedBuilder initWithRedPayloadType:sampleRate:samplesPerFrame:numPayloads:maxDelay:includeSequenceOffset:]
-[VCAudioRedBuilder setMaxDelay:]
-[VCAudioRedBuilder setNumPayloads:]
VCAudioRedBuilder_UpdateAudioPacketWithRedPayload
_VCAudioRedBuilder_SplitRedPacketIntoArray
VTU_ReallocPktsInfo
VCVideoTransmitterPacketAllocator
VTU_HandleMTUOverride
VTU_SplitVideoIntoPackets
_VTU_GenerateNewMaxPacketCount
_VTU_ReallocateBuffer
_VTU_AllocateVPList
VTU_PrepareH264FrameData
AddOneVPList
PrepareLastH264Fragment
audio
video
screen
rtpmap:123 H264/90000
fmtp:123 imagesize 0 rules 15:320:240:320:240:15
rtpmap:126 X-H264/90000
fmtp:126 imagesize 0 rules 15:320:240:320:240:15
%@=%@ %@ %@ %@%@
%VRTP-PORT%
RTP/AVP
AS:%@:%@
AS:%@
%@=0
%@=%@ 0 0 IN %@ %@
%RTP-IP-AF%
%RTP-IP%
%@=%@
%@=IN %@ %@
%@=0 0
DMBR
%@=%@:%@:%u
BBCODEC
%@=%@:%d %@
X_FLS
v32@?0@8@16^B24
%@=audio %@ %@ %@
%ARTP-PORT%
%@=rtcp:%@
%ARTCP-PORT%
%@=fmtp:AAC SamplesPerBlock %@
%@=allowrecording
%@=rtpID:%@
%@=au:%@
%@=fmtp:%@ %@
-[SDPMini(SDPParsing) parseMediaLine:]
-[SDPMini(SDPParsing) parseSessionAttributes:]
fmtp:AAC SamplesPerBlock
rtpID
rtcp:
fmtp:
allowrecording
fmtp:%d
block %u
block 
rtcp-fb:*%s%s
 rpsi
 nack
VCAudioLimiter_Allocate
VCAudioLimiter_Start
VCAudioLimiter_Stop
VCAudioLimiter_Process
AUControlFreakFactory
Apple: ControlFreak
-[VCMediaNegotiatorLocalConfiguration init]
-[VCMediaNegotiatorLocalConfiguration setupBandwidthConfigurationsWithArbiter:]
-[VCMediaNegotiatorLocalConfiguration setupBandwidthExtensionConfiguration:]
-[VCMediaNegotiatorLocalConfiguration isEqualFeatureStrings:]
-[VCRateControlMediaController initWithMediaQueue:delegate:]
probingSequence
aggModeEnabled
minAggProbingSpacing
-[VCRateControlMediaController setServerBag:]
-[VCRateControlMediaController getMediaQueueInVideoBitrate:outVideoBitrate:inAudioBitrate:outAudioBitrate:]
-[VCRateControlMediaController getMediaQueueRateChangeCounter:rateChangeTime:]
-[VCRateControlMediaController computePacketLossWithRemoteInfo:]
-[VCRateControlMediaController updateBasebandSuggestionWithStatistics:]
 flush audio
 flush video
 stop video
Baseband queue HWM is hit, [delay:%.3f, queueDepth:%u, BBRate:%u, minRate:%u, audioRate:%u, audioFraction:%d, mediaSuggestion:%s%s%s]
Baseband queue LWM is hit, [delay:%.3f, queueDepth:%u, BBRate:%u, audioRate:%d, audioFraction:%d, resume video]
VCRateControl turn audio stall ON!
VCRateControl turn audio stall OFF!
-[VCRateControlMediaController pauseVideoByUser:]
pause
resume
Video %s by user, [rate:%u, BBRate:%u, audioFraction:%d, videoStopped:%d]
-[VCRateControlMediaController stopVideoByVCRateControl]
-[VCRateControlMediaController resumeVideoByVCRateControl]
Decrease basebandFlushCount %d -> %d.
-[VCRateControlMediaController decreaseFlushCount:]
-[VCRateControlMediaController setAudioSendingBitrate:]
Change audio fraction tier from %d -> %d.
%s frame (%08X) is generated PT (%u), %d packets.
KeyFrame
RefreshFrame
Increase basebandFlushCount %d -> %d due to video refresh [TID:%0X].
Increase basebandFlushCount %d -> %d internally with suggestion.
A LARGE FRAME of %d size %s (actual:%d, req:%d), rate:%f, [waste:%d wastBitrate:%d, avgWastBitrate:%d], txRate:%d, remoteBW:%d, throttling:%d, timestamp:%u
ARRIVED
OBSERVED
-[VCRateControlMediaController isProbingLargeFrameRequiredAtTime:]
-[VCRateControlMediaController updateProbingLargeFrameSizeCap]
FixedDelay
GaussianDelay
-[VCEmulatedNetworkAlgorithmQueueDelay updateSettingsAtTime:impairments:]
-[VCConnection setLinkFlags:]
-[VCConnection setRemoteLinkFlags:]
-[VCConnection compare:isPrimary:selectionPolicy:]
connectionPrimary
connectionSecondary
interfacePriority
interfaceWiFi
interfaceCellular
preferRelay
preferP2P
connectionTypePriority
connectionTypeRelay
connectionTypeP2P
preferIPv6
preferIPv4
networkTypePriority
IPv6
IPv4
DLCreateHandle
DLCloseHandle
DLUpdate
DLUnlock
DLSetConfIndex
DLGetData
DLSetState
DLGetState
DLGetCallID
DLSetAck
DLGetAck
DLPutMsg
DLGetMsg
DLIncreaseLocalSeq
DLSetMediaType
DLGetConfIndex
DLGetSIPPing
MatchSipMsgAndLock
+[VCMediaNegotiatorStreamGroupU1Configuration updateCameraU1Config:localConfig:]
+[VCMediaNegotiatorStreamGroupU1Configuration updateScreenU1Config:localConfig:]
-[VCMediaNegotiatorStreamGroupU1Configuration initStreamGroupU1ConfigForGroupId:withLocalConfig:]
+[VCMediaNegotiatorStreamGroupU1Configuration negotiatedSystemAudioSettingsBetweenLocalU1Config:remoteU1Config:]
+[VCMediaNegotiatorStreamGroupU1Configuration negotiatedMicrophoneSettingsBetweenLocalU1Config:remoteU1Config:]
+[VCMediaNegotiatorStreamGroupU1Configuration negotiatedCameraSettingsBetweenLocalU1Config:remoteU1Config:]
+[VCMediaNegotiatorStreamGroupU1Configuration negotiatedScreenSettingsBetweenLocalU1Config:remoteU1Config:]
v32@?0@"NSNumber"8Q16^B24
+[VCMediaNegotiatorStreamGroupU1Configuration updateCommonNegotiatedVideoSettings:localU1Config:remoteU1Config:]
segmentText
segmentConfidence
segmentLength
segmentLocation
-[VCCaptionsTranscriptionSegment initWithCoder:]
%@<%p> confidence=%u range=%@
-[VCIDRScheduler initWithStreams:captureFramerate:]
-[VCIDRScheduler computeBasePeriod]
-[VCIDRScheduler computeCaptureFramerate]
-[VCIDRScheduler computeGroupList]
-[VCIDRScheduler computeSchedulerItemList]
-[VCIDRScheduler computeSchedulerItemsBudget]
-[VCIDRScheduler placeRemainingItems:placedItems:leftItem:rightItem:]
-[VCIDRScheduler computeSchedulerItemsPosition]
IDR Scheduler: framerate:%d, basePeriod:%dms framesPerBasePeriod:%d groups:%@
utteranceNumber
updateNumber
isLocal
isFinal
segments
-[VCConnectionManagerLegacy shouldNominateCandidatePairInternal:interfaceMask:nominated:demote:connectionPriority:replaceOnly:]
OPTIMAL
PRIMARY
SECONDARY
-[VCConnectionManagerLegacy addConnection:]
-[VCConnectionManagerLegacy removeConnection:]
-[VCConnectionManagerLegacy removeConnectionWithIPPortInternal:isLocalInterface:]
LOCAL
REMOTE
-[VCConnectionManagerLegacy reportConnection:isInitialConnection:]
connectionResultCallback %s/%s (rtt: %f cell: %d/%d v6/rel: %d/%d)  RTT=%d/%d
relay
VPCEnabled
ConnectionType
LocalCandidate
RemoteCandidate
LocalInterfaceType
RemoteInterfaceType
relayServer
relayType
IDSToken
VPCENABLED
EndToEnd
-[VCConnectionManagerLegacy sourceDestinationInfo:isSourceOnCellular:isSourceIPv6:]
MQCreateHandle
MQCloseHandle
MQPut
MQGet
MQDeleteAt
-[VCRateControlAlgorithmLowLatencyNOWRD configure:restartRequired:]
Configure with targetBitrate=%d, minBitrate=%d, maxBitrate=%d
-[VCRateControlAlgorithmLowLatencyNOWRD doRateControlWithStatistics:]
-[VCRateControlAlgorithmLowLatencyNOWRD doRateControlWithVCRCStatistics:]
-[VCRateControlAlgorithmLowLatencyNOWRD doRateControlWithNWConnectionStatistics:]
Re-enter Initial Rampup!
OWRD has been 0 for %f seconds, reset NOWRDAcc
Stop ramping down due to nw connection NACK [loss:%u]
[%u] Congestion due to nw connection!!! New bitrate down to %u
-[VCRateControlAlgorithmLowLatencyNOWRD printRateControlInfoToLogDump]
%8.3f/%04X:
%.4f
%.4f
%.4f
%.4f %c
RTT:%-4u
PLR:%4.2f@%.1f
RRx:%u
MBL:%d %u
%4u/%4u
 %4u:%4u/%4u  %4u:%4u/%4u  CS: %04X %04X %u BB: %3u
 UAT %s %s
-[VCImageConverterBase setUpBufferPoolForOutputWidth:outputHeight:]
-[AVCVideoFrame setDepthPixelBuffer:]
-[AVCVideoFrame setPixelBuffer:]
-[AVCVideoFrame dealloc]
-[VCConnectionSelector updateConnectionForDuplicationForDuplicationReason:duplicationEnhancementEnabled:preferredLocalInterfaceForDuplication:preferredRemoteInterfaceForDuplication:connectionArray:]
-[VCConnectionSelector selectPrimaryAndSecondaryWithConnection:isEndToEnd:]
-[VCConnectionSelector updateConnectionSelectionPolicyWithPreferRelayOverP2P:preferNonVPN:preferE2E:]
-[VCConnectionSelector updateSelectedConnectionsForGroupType:connectionAdded:]
-[VCConnectionSelector updateSelectedConnectionsForGroupType:connectionRemoved:connectionArray:]
com.apple.VideoConference.VCControlChannelDialog.handshakeOperationQueue
-[VCControlChannelDialog initWithSessionID:participantID:participantUUID:participantConfig:transactionDelegate:]
-[VCControlChannelDialog dealloc]
-[VCControlChannelDialog removeTransactionForTransactionID:]
-[VCControlChannelDialog processMessageData:participantID:topic:transactionID:messageStatus:isInternalMessage:]
-[VCControlChannelDialog doHandshakeWithMessage:topic:afterDelay:withOptions:]_block_invoke
-[VCControlChannelDialog sendAllCachedMessagesAndDisableHandshakeWhenDone]
CachedTopic
CachedMessage
CachedOptions
Temeout
-[VCControlChannelDialog startHandshakeWithMessage:topic:withOptions:]
-[VCControlChannelDialog cacheOutgoingMessage:topic:timeout:withOptions:]
-[VCControlChannelDialog sendReliableMessage:withTopic:timeout:withOptions:]
-[VCControlChannelDialog sendReliableMessageInternal:withTopic:timeout:useFastRetries:withOptions:]
-[VCControlChannelDialog sendUnreliableMessage:withTopic:sessionID:participantID:transactionDelegate:]
-[VCControlChannelDialog newDataFromMessage:topic:transactionID:isReliable:transactionDelegate:]
-[VCControlChannelDialog confirmTransaction:]
%@ (size=%lu):
Media Blob (v2) - %s
-[VCMediaNegotiationBlobV2(Utils) printWithTitle:logFile:]
%s  
Media Blob (v2) - 
vcSessionError
com.apple.AVConference.VCSessionManager.xpcCommandQueue
com.apple.AVConference.VCSessionManager.sessionQueue
-[VCSessionManager setSharingEnabled:]_block_invoke
vcSessionStarted
vcSessionDidStart
vcSessionDidStopMetadata
vcSessionDidStop
vcSessionParameterRateAdaptationInfo
vcSessionUplinkRateAdaptationInfoDidChange
vcSessionDownlinkRateAdaptationInfoDidChange
vcSessionSucceeded
vcSessionParticipantID
vcSessionParameterStreamTokens
vcSessionSpatialSourceIDs
vcSessionAddParticipantDidSuceed
vcSessionRemoveParticipantDidSucceed
vcSessionConfiguration
vcSessionDidUpdateConfiguration
vcSessionOneOnOneModeEnabled
vcSessionSetOneToOneEnabledDidChange
vcServiceType
vcSessionParameterAudioEnabled
vcSessionAudioEnabledDidSucceed
vcSessionParameterVideoEnabled
vcSessionVideoEnabledDidSucceed
vcSessionParameterScreenEnabled
vcSessionScreenEnabledDidSucceed
vcSessionRemoteAudioEnabledDidChange
vcSessionRemoteVideoEnabledDidChange
vcSessionRemoteScreenEnabledDidChange
vcSessionParameterAudioPaused
vcSessionAudioPausedDidSucceed
vcSessionParameterVideoPaused
vcSessionVideoPausedDidSucceed
vcSessionRemoteAudioPausedDidChange
vcSessionRemoteVideoPausedDidChange
vcSessionParameterMediaType
vcSessionParameterMediaState
vcSessionMediaStateDidChange
vcSessionRemoteMediaStateDidChange
vcSessionShouldReconnect
vcSessionParameterParticipantMediaPriority
vcSessionParameterParticipantMediaPriorityString
vcSessionMediaPrioritiesDidChange
vcSessionDidDetectError
vcSessionIDSDestination
vcSessionParticipantData
-[VCSessionManager registerBlocksForService]_block_invoke
vcSessionUUID
vcSessionToken
vcSessionCapabilities
vcSessionInitialize
vcSessionTerminate
vcSessionParticipantIDs
vcSessionRemoveParticipants
vcSessionLocalParticipantConfig
vcSessionStart
vcSessionStop
vcSessionUpdateConfiguration
vcSessionParticipantConfigs
-[VCSessionManager registerBlocksForService]_block_invoke_5
vcSessionAddParticipants
vcSessionParameterMute
vcSessionSetMute
vcSessionParameterVolume
/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCSessionManager.m
vcSessionSetVolume
vcSessionParameterAudioPosition
vcSessionSetAudioPosition
-[VCSessionManager registerBlocksForService]_block_invoke_4
vcSessionSetAudioEnabled
vcSessionSetVideoEnabled
vcSessionSetScreenEnabled
vcSessionSetAudioPaused
vcSessionSetVideoPaused
-[VCSessionManager registerBlocksForService]_block_invoke_3
vcSessionSetMediaState
vcSessionSetOneToOneEnabled
vcSessionParameterParticipantConfiguration
vcSessionParameterVideoQuality
vcSessionParameterVisibilityIndex
vcSessionParameterProminenceIndex
vcSessionPositionalInfo
-[VCSessionManager registerBlocksForService]_block_invoke_2
vcSessionPresentationInfo
vcSessionUpdateParticipantConfiguration
vcSessionIDSParticipantID
vcSessionParameterMediaStates
-[VCSessionUplinkBandwidthAllocatorMultiway init]
-[VCSessionUplinkBandwidthAllocatorMultiway mediaBitratesForStreamToken:targetNetworkBitrate:]
-[VCSessionMediaNegotiator initWithLocalConfiguration:]
v32@?0@"NSNumber"8@"<VCMediaNegotiatorProtocol>"16^B24
-[VCSessionMediaNegotiator processRemoteNegotiationData:]
v32@?0@"NSNumber"8@"NSData"16^B24
+[VCSessionMediaNegotiator streamGroupIDsWithMediaBlob:]
+[VCSessionMediaNegotiator initializeLocalConfiguration:negotiationData:deviceRole:preferredAudioPayload:]
-[VCDatagramChannelIDSEmulated initWithIDSDatagramChannel:mode:]
-[VCDatagramChannelIDSEmulated dealloc]
-[VCDatagramChannelIDSEmulated writeDatagram:datagramSize:datagramInfo:options:completionHandler:]
-[VCDatagramChannelIDSEmulated writeToEmulatedNetworkWithDatagram:datagramSize:datagramInfo:options:]
-[VCDatagramChannelIDSEmulated writeDatagrams:datagramsSize:datagramsInfo:datagramsCount:options:completionHandler:]
-[VCDatagramChannelIDSEmulated setupEmulatedNetwork]
-[VCDatagramChannelIDSEmulated setupEmulatedNetwork]_block_invoke
-[VCMediaControlInfoGenerator newControlInfoWithBuffer:length:optionalControlInfo:]
-[VCAudioPowerSpectrumMeter initWithBinCount:refreshRate:delegate:]
-[VCAudioPowerSpectrumMeter dealloc]
-[VCAudioPowerSpectrumMeter registerNewAudioPowerSpectrumForStreamToken:powerSpectrumKey:spectrumSource:]
-[VCAudioPowerSpectrumMeter releaseAudioPowerSpectrumForStreamToken:]
-[VCAudioPowerSpectrumMeter unregisterAllStreams]
_VCAudioPowerSpectrumMeter_ProcessEventQueue
_VCAudioPowerSpectrumMeter_AddStream
_VCAudioPowerSpectrumMeter_RemoveAllStream
-[VCMediaStreamReceiveGroup initWithConfig:]
-[VCMediaStreamReceiveGroup setActiveStreamIDs:]
-[VCMediaStreamReceiveGroup setActualBitrateForOptedInStreamWithActiveStreamID:]
-[VCMediaStreamReceiveGroup vcMediaStreamDidRTPTimeOut:]
-[VCMediaStreamReceiveGroup vcMediaStreamDidRTCPTimeOut:]
-[VCMediaStreamReceiveGroup vcMediaStreamDidDecryptionTimeOut:]
-[VCMediaStreamReceiveGroup vcMediaStreamDidDecryptionTimeOutForMKMRecovery:]
-[VCMediaStreamReceiveGroup notifyChangeInActiveMediaBitrateTo:from:]
VCTimescaleInterface_InitializeWSOLA
VCTimescaleInterface_InitializePSOLA
com.apple.AVConferenceVCQoSMonitorManager.XPCCommandQueue
-[VCQoSMonitorManager registerQoSReportingSourceForToken:]_block_invoke
-[VCQoSMonitorManager unregisterQoSReportingSourceForToken:]_block_invoke
vcQoSReportDictionary
vcQoSReportToken
-[VCQoSMonitorManager updateQoSReport:toClientsWithToken:]_block_invoke
vcQoSMonitorCallbackDidReceiveReport
vcQoSReportingInterval
-[VCQoSMonitorManager registerBlocksForService]_block_invoke
vcQosMonitorInitializForStreamToken
vcQosMonitorTerminate
vcQosMonitorRegisterStreamToken
com.apple.AVConference.VCMomentssManager.XPCCommandQueue
-[VCMomentsManager registerMomentsMessenger:withStreamToken:]_block_invoke
-[VCMomentsManager unregisterMomentsMessengerWithStreamToken:]_block_invoke
vcMomentsStreamToken
VCMomentsManager
vcMomentsCapabilities
-[VCMomentsManager registerBlocksForService]_block_invoke
vcMomentsInitialize
vcMomentsUninitialize
vcMomentsStartRequest
vcMomentsEndRequest
vcMomentsRejectRequest
-[VCMomentsManager notifyClientsWithStreamToken:service:arguments:]_block_invoke
streamToken=%u, service=%s, arguments=%s
vcMomentsError
vcMomentsDidStartProcessingRequest
vcMomentsStillImageURL
vcMomentsStillImageURLSandboxExtensionToken
-[VCMomentsManager streamToken:didEndProcessingRequest:stillImageURL:movieURL:error:]
vcMomentsMovieURL
vcMomentsMovieURLSandboxExtensionToken
vcMomentsDidEndProcessingRequest
FaceTimePhotosSaveImagesForDebug
debug
-[VCMomentsManager saveImage:movie:]
vcMomentsDidFinishRequest
vcMomentsCapabilitiesDidChange
-[VCMomentsManager streamTokenDidCleanupAllRequests:]_block_invoke
*Invalid*
INVITE
OPTIONS
CANCEL
REGISTER
MESSAGE
REFER
SUBSCRIBE
NOTIFY
INFO
ParseMessage
ParseStatusLine
SIP/2.0
ParseRequestLine
kern.osversion
iProd
-[VCMomentsCollector dealloc]
-[VCWRMHandler shouldForceWRMRecommendationUsingUserDefaults]
-[VCWRMHandler shouldRequestWRMNotificationWithDuplicationReason:isDuplicationEnabled:isLocalUsingCellular:atTime:]
-[VCWRMHandler processLocalWRMNotification:isAudioOnly:]
Cellular
-[VCWRMHandler processRemoteWRMSuggestion:isRemoteDuplicating:]
with
without
_VCJBTargetEstimatorSynchronizer_Configure
_VCJBTargetEstimatorSynchronizer_StoreCurrentSize
VCJBTargetEstimatorSynchronizer_Create
VCJBTargetEstimatorSynchronizer_RegisterClient
VCJBTargetEstimatorSynchronizer_GetSyncTarget
VCJBTargetEstimatorSynchronizerClass
_VCJBTargetEstimatorSynchronizer_Finalize
_VCJBTargetEstimatorSynchronizer_ApplyPolicy
_VCJBTargetEstimatorSynchronizer_ApplyPolicy_MinMax
%s%d
%s%c
%s%.4f
%010u-%s
avconference
.jbsyncdump
_VCJBTargetEstimatorSynchronizer_CheckIfDumpIsInitialized
%sClient%i
%sSyncTarget
-[VCVideoStreamReceiver initWithConfig:]
com.apple.VideoConference.VCVideoStreamReceiver
v16@?0I8B12
com.apple.AVConference.videoreceiver.networkreceiveproc
-[VCVideoStreamReceiver startNetworkReceiveThread]_block_invoke
-[VCVideoStreamReceiver updateSequenceNumber:]
-[VCVideoStreamReceiver scheduleDecodeForTimestamp:]
video-stream-receiver
enableLateVideoFrameRecovery
-[VCVideoStreamReceiver processVideoRTP]
-[VCVideoStreamReceiver processReceptionReportBlock:blockCount:arrivalNTPTime:]
-[VCVideoStreamReceiver processVideoRTCP]
-[VCVideoStreamReceiver scheduleDecodeForFrameWithBuffer:timestamp:hostTime:showFrame:]
-[VCVideoStreamReceiver decodeFrame:showFrame:]
-[VCVideoStreamReceiver canDequeue:forTimestamp:]
-[VCVideoStreamReceiver dequeueAndDecodeForTimestamp:]
-[VCVideoStreamReceiver gatherRealtimeStats:]
VCVSTMMB
VCVSRxOperatingBitrate
%.5f
VCVSRxPacketLossPercentage
VCVSRxRoundTripTime
VCVSRxMaxOWRD
VCVSRxNOWRD
VCVSRxNOWRDSHORT
VCVSRxNOWRDACC
VCVSRxVideoStallDuration
VCVSRxMaxFrameDuration
VCVSRxAvgBitrate
VCVSRxMaxBitrate
VCVSRxMinBitrate
VCVSRxAvgFramerate
VCVSRxMaxFramerate
VCVSRxMinFramerate
VCVSRxVideoWidth
VCVSRxVideoHeight
VCVSRxVideoOrientation
-[VCVideoStreamReceiver handleActiveConnectionChange:]
_VCVideoStreamReceiver_CreateVideoFormatDescription
decoderFrameCallback
native
webrtc
UseVideoJitterForVideoPlayout
VCSessionParticipantRemote
-[VCSessionParticipantRemote initWithConfig:delegate:]
participantID:%@ 
-[VCSessionParticipantRemote initializeParticipantType]
-[VCSessionParticipantRemote setupSpatialAudioWithMetadata:spatialMetadataEntryMap:]
-[VCSessionParticipantRemote spatialMetadataEntryForMediaType:]
-[VCSessionParticipantRemote storeSpatialAudioMetadataEntry:forMediaType:]
-[VCSessionParticipantRemote participantSpatialAudioSourceIDs]
-[VCSessionParticipantRemote setAudioPaused:]_block_invoke
v16@?0@"<VCSessionParticipantDelegate>"8
-[VCSessionParticipantRemote dispatchedSetRemoteAudioPaused:]
-[VCSessionParticipantRemote dispatchedSetRemoteAudioEnabled:]
-[VCSessionParticipantRemote dispatchedSetRemoteVideoEnabled:]
-[VCSessionParticipantRemote dispatchedSetRemoteScreenEnabled:]
-[VCSessionParticipantRemote dispatchedSetRemoteSystemAudioPaused:]_block_invoke
-[VCSessionParticipantRemote setTransitionToEnabled:]
-[VCSessionParticipantRemote setTransitionToPaused:]
-[VCSessionParticipantRemote setTransitionToDisabled:]
-[VCSessionParticipantRemote updateMediaState:forStreamGroup:]
-[VCSessionParticipantRemote setRemoteMediaState:forMediaType:]_block_invoke
-[VCSessionParticipantRemote dispatchedSetRemoteVideoPaused:]
-[VCSessionParticipantRemote applyVideoEnabledSetting:]
forceVisibilityIndex
forceProminenceIndex
-[VCSessionParticipantRemote updatePositionalInfo:shouldReapply:]
-[VCSessionParticipantRemote processParticipantInfo]
uuid:%@ (remote)
-[VCSessionParticipantRemote getMajorVersionNumber]
-[VCSessionParticipantRemote supportsNegotiatedCoordinateSystem]
-[VCSessionParticipantRemote supportsGFTSwitchToOneToOne]
-[VCSessionParticipantRemote isParticipantPeace:]
-[VCSessionParticipantRemote setupAudioStreamConfiguration:withStreamGroupConfig:streamGroupStreamConfig:]
-[VCSessionParticipantRemote setupBandwidthAllocationTableForMediaStreamConfigs:streamGroupID:entryType:]
-[VCSessionParticipantRemote entryForStreamID:]
-[VCSessionParticipantRemote appendOptedInStreamID:toOptInStreamsIDs:targetBandwidthEntry:forceSeamlessTransition:]
-[VCSessionParticipantRemote recommendedStreamIDsForSelectedMediaEntries:forceSeamlessTransition:]_block_invoke
-[VCSessionParticipantRemote negotiateAudioRules:]_block_invoke
-[VCSessionParticipantRemote configureWithOneToOneParticipantConfig:operatingMode:]_block_invoke
-[VCSessionParticipantRemote setVideoStreamDelegate:]
-[VCSessionParticipantRemote redundancyController:redundancyPercentageDidChange:]_block_invoke
-[VCSessionParticipantRemote redundancyController:redundancyPercentageDidChange:]_block_invoke_2
-[VCSessionParticipantRemote pushEventToNwActivity:started:]
-[VCSessionParticipantRemote setVideoDegraded:]
-[VCSessionParticipantRemote setRemoteMediaStalled:]
+[VCSessionParticipantRemote maxCameraNetworkBitrateForVideoQuality:isLocalOnWiFi:isRedundancyRequested:isSharingEnabled:]
-[VCSessionParticipantRemote cappedVideoQualityWithShouldLimitCameraQualityForPIP:]
-[VCSessionParticipantRemote appendStreamGroupsMediaEntries:]
-[VCSessionParticipantRemote validateMediaEntries:]
Missing audio entries
-[VCSessionParticipantRemote mediaEntries]
-[VCSessionParticipantRemote isVideoExpected]
-[VCSessionParticipantRemote newMultiwayConfigWithStreamGroupStreamConfig:maxIDSStreamIDCount:groupID:]
-[VCSessionParticipantRemote setupVideoStreamConfiguration:withStreamGroupStreamConfig:codecConfigs:multiwayConfig:groupID:]
-[VCSessionParticipantRemote newMediaStreamConfigWithStreamGroupConfig:streamConfig:rateControlConfig:multiwayConfig:]
-[VCSessionParticipantRemote setupStreamConfigWithCodecs:streamConfig:codecConfigs:featureStringsDict:]
-[VCSessionParticipantRemote newMediaStreamConfigWithStreamConfig:streamGroupConfig:maxIDSStreamIDCount:]
-[VCSessionParticipantRemote newMediaStreamInfoWithNegotiationConfig:streamToken:]
participantID:%@ streamToken:%d
-[VCSessionParticipantRemote spatialChannelIndex:spatialAudioSourceID:forMediaType:]
-[VCSessionParticipantRemote setupSpatialInfoForStreamGroupConfig:]
-[VCSessionParticipantRemote newStreamGroupConfigWithNegotiationConfig:]
-[VCSessionParticipantRemote addOneToOneStreamConfigToMediaStreamInfo:negotiatorStreamGroupConfig:]
-[VCSessionParticipantRemote setupStreamGroupWithConfig:]
-[VCSessionParticipantRemote newVideoStreamGroupWithStreamGroupConfig:]
RepresentationsAsMediaTypes
-[VCSessionParticipantRemote shouldSetupStreamGroupWithID:]
session_%s-participant_%s-groupid_%s
-[VCSessionParticipantRemote createJitterBufferTargetEstimatorSynchronizer:syncGroupID:]
-[VCSessionParticipantRemote setupJBTargetSynchronizers]
-[VCSessionParticipantRemote setupStreamGroups]
-[VCSessionParticipantRemote updateShouldEnableFaceZoom]
forceDisableMLEnhance
-[VCSessionParticipantRemote updateShouldEnableMLEnhance]
-[VCSessionParticipantRemote createAndResumeFetchTimer]
-[VCSessionParticipantRemote createAndResumeFetchTimer]_block_invoke_2
-[VCSessionParticipantRemote createAndResumeFetchTimer]_block_invoke
-[VCSessionParticipantRemote cancelAndReleaseFetchTimer]
-[VCSessionParticipantRemote updateAndHandleVideoMediaStall:isOneToOneStream:]
_VCSessionParticipantRemote_AddMetaDataToSpatialAudioSourceID
idsLinkSuggestionEnabled
UseIDSLinkSuggestion
-[VCTransportSessionIDS initWithCallID:requireEncryptionInfo:reportingAgent:notificationQueue:dataPath:]
-[VCTransportSessionIDS dispatchedProcessDatagramChannelEventInfo:]
Received IDS data channel event[%d] with payload=%s
idsLinkSuggestionKey
idsLinkIPPreferenceKey
lipp
-[VCTransportSessionIDS remoteDeviceVersionIDS]
-[VCTransportSessionIDS start]_block_invoke
Start VCTransportSessionIDS failed
Destination/socket not set
v16@?0@"NSDictionary"8
v24@?0@"NSError"8{?=q}16
preference-remote-device-version-key
Could not start transport session
datagramChannel start failed
onStart failed
-[VCTransportSessionIDS startMKMRecoveryForParticipantIDs:]
-[VCTransportSessionIDS setConnectionSetupPiggybackBlob:]_block_invoke
-[VCTransportSessionIDS setPiggybackBlobPreference]
-[VCTransportSessionIDS handleLinkConnectedWithInfo:]
-[VCTransportSessionIDS handleLinkDisconnectedWithInfo:]
-[VCTransportSessionIDS handleDefaultLinkUpdatedWithInfo:]
-[VCTransportSessionIDS handleRATChanged:]
-[VCTransportSessionIDS handleIDSEncryptionInfoEvent:]
-[VCTransportSessionIDS handleIDSMembershipChangeInfoEvent:]
-[VCTransportSessionIDS handleProbingResponse:]
-[VCTransportSessionIDS handleChannelInfoReport:]
-[VCTransportSessionIDS handleReportingBlob:]
IDSCB
_VCTransportSessionIDS_writeCompletionHandler
success
iPhone9,1
1280x720
iPhone12,1
1920x1080
iPhone11,8
iPhone10,1
iPhone12,8
iPhone13,4
iPhone8,1
iPad13,8
1920x1440
iPad13,4
iPad11,2
1024x768
iPad11,1
iPad11,6
iPad8,12
iPad7,11
iPad7,12
iPad7,5
iPad7,6
720x720
iPad11,3
MacBookPro16,1
iMac18,3
iMac18,2
-[VCVideoReceiverBase setEnableCVO:cvoExtensionID:]
-[VCVideoReceiverBase setEnableRateAdaptation:maxBitrate:minBitrate:adaptationInterval:]
-[VCVideoReceiverBase startVideo]
-[VCVideoReceiverBase stopVideo]
-[VCVideoReceiverBase pauseVideo]
-[VCVideoReceiverBase rtcpSendIntervalElapsed]
-[VCVideoReceiverBase startSynchronization:]
-[VCVideoReceiverBase updateSourcePlayoutTimestamp:]
-[VCVideoReceiverBase collectChannelMetrics:interval:]
-[VCVideoReceiverBase setTargetStreamID:]
-[VCVideoReceiverBase lastDisplayedFrameRTPTimestamp]
-[VCVideoReceiverBase handleActiveConnectionChange:]
-[VCMediaStreamGroupConfig addMediaStreamInfo:]
-[VCMediaStreamGroupConfig setupStreams]
VCAllocatorMultiQueue_Create
_VCAllocatorMultiQueueCallback_Alloc
_VCAllocatorMultiQueue_FindBufferQueue
_VCAllocatorMultiQueueCallback_Realloc
_VCAllocatorMultiQueue_AllocateInfo
_VCAllocatorMultiQueue_InitializeInfo
_VCAllocatorMultiQueue_InitializeQueues
_VCAllocatorMultiQueue_FinalizeInfo
_VCAllocatorMultiQueue_CleanupQueue
SIPSetMessageDelegateForCallID
SIPMessageReceivedHandler
SIPSetCellConditionChangeHandler
SIPCreateHandle
SIPCloseHandle
SIPSetPacketMultiplexMode
SIPStartListen
SIPStopListen
SIPConnectIPPort
10.0.0.1
10.0.0.2
SIPCancel
Remote Hang Up
SIPHangupWithTimeout
SIPCloseCall
SIPSendMessage
VCHandoverCandidateChange:VCHandoverNewCandidateBlob
SIPSendMessageAll
PING
SIPGetRemoteInfo
SIPSetDoKeyExchange
SIPSetEnableCompression
SIPSetAllowSameSourceDestination
com.apple.AVConference.SIP.tuMessageCallbackProc
TUMsgCallback
com.apple.avconference.sip.newcallproc
SIPNewCallProc
Timeout
Transport Error(%08X)
Cancelled
Internal Error(%08X)
SendTAStatus
SendTAStatusGeneric
com.apple.avconference.sip.cancelproc
SIPCancelProc
com.apple.avconference.sip.hangupproc
SIPHangupProc
com.apple.avconference.sip.messageproc
SIPMessageProc
SendTPStatus
SIPMapPacketMultiplexModeToTransportMode
SIPListenOnVirtualInterface
SIPStopListenOnInterface
virtual
physical
SIPListenOnPhysicalInterface
DLIsFinishedCallback
TUGenericLogCallback
allowRTCPFB
videoPayloadCollections
customVideoWidth
customVideoHeight
tilesPerFrame
ltrpEnabled
pixelFormats
hdrModesSupported
-[VCStreamInputVideo initWithStreamInputID:format:delegate:delegateQueue:remoteQueue:]
videoStreamAverageBitrateWindowDuration
-[VCVideoStreamRateAdaptation runVideoStreamRateAdaptation]
-[VCVideoStreamRateAdaptation receivedTMMBN:]
-[VCVideoStreamRateAdaptation scheduleTMMBR:]
VCVSRxOWRD
-[VCVideoRuleCollectionsScreenAirplayMac initWithHardwareSettings:]
-[VCVideoRuleCollectionsScreenAirplayMac setupH264Rules]
videoRulesForFormatList
client format: 
relay format:  
-[VCAudioRelayIO pushAudioSamples:]
-[VCAudioRelayIO createPacketThreadWithIOBufferDuration:name:error:]
createPacketThreadWithIOBufferDuration failed
PacketThread_Create failed
-[VCAudioRelayIO didUpdateBasebandCodec:]
-[VCDisplayLink initWithHandler:]
-[VCDisplayLink initWithHandler:threadPriority:threadOptions:threadIdentifier:]
-[VCDisplayLink ensureDisplayIsReady]
refreshRate
-[VCDisplayLink activate]
-[VCDisplayLink handleWaitToRunTimeout]
-[VCDisplayLink dealloc]
-[VCDisplayLink runDisplayLinkThreadWithStopRequested:]
-[VCDisplayLink observeValueForKeyPath:ofObject:change:context:]
_VCDisplayLinkRunLoopObserverCallBack
vcStreamOutputInProcessDelegate
vcStreamOutputInProcessDelegateQueue
-[VCStreamOutput initWithStreamToken:clientProcessID:synchronizationDelegate:delegate:delegateQueue:]
out of
-[VCStreamOutput createRemoteQueue]
-[VCStreamOutput enqueueAttributes:]
VCStreamOutput_EnqueueSampleBuffer
com.apple.VCStreamOutput.XPCCommandQueue
-[VCStreamOutput initXPCCommandQueue]
_VCStreamOutput_SendSampleBufferToXPCClient
streamOutputDidReceiveFrame
_VCStreamOutput_dispatchToDelegate
-[VCMediaNegotiationBlobV2BandwidthSettings(Utils) initWithBandwidthConfigurations:]
-[VCMediaNegotiationBlobV2BandwidthSettings(Utils) bandwidthConfigurations]
BandwidthSettings: 2G=%u 3G=%u LTE=%u 5G=%u Wifi=%u
-[VCMediaNegotiationBlobV2BandwidthSettings(Utils) printWithLogFile:prefix:]
Accept
Accept-Encoding
Accept-Language
Alert-Info
Allow
Allow-Events
Authentication-Info
Authorization
Call-ID
Call-Info
Contact
Content-Disposition
Content-Encoding
Content-Language
Content-Length
Content-Type
CSeq
Date
Error-Info
Event
Expires
From
In-Reply-To
Max-Forwards
MIME-Version
Min-Expires
Organization
Priority
Proxy-Authenticate
Proxy-Authorization
Proxy-Require
Record-Route
Refer-To
Reply-To
Require
Retry-After
Route
Server
Subject
Subscription-State
Supported
Timestamp
Unsupported
User-Agent
Warning
WWW-Authenticate
SKESeq
X-Call-ID
Reason
active
pending
terminated
deactivated
probation
rejected
timeout
giveup
noresource
conference
refer
ParseHeader
%s: %s
, %s
%s: 
%c: 
%c: %s
isfocus
ismultiway
%c: %s%s%s
%CLENGTH%
%c: %d
%s: %lu %s
%c: %s;%s
%s: %d
;%s%s
tag=
%c: %s<%s>%s
%s: %s; cause=%d
%s: %s<%s>
;%s%d
expires=
%s: %s%s
reason=
retry-after=
%s: %s%s%s
%c: %s%s
%s: %s
%c: %s/%s %s%s%s
%c: %s/%s [%s]%s%s
branch=
received=
%s: %lu;%d
CreateAcceptHdr
application/sdp
message/sipfrag
application/conference-info+xml
CreateAllowHdr
CreateAllowEventsHdr
CreateCallIDHdr
CreateContactHdr
CreateContentEncodingHdr
CreateContentLengthHdr
CreateContentTypeHdr
CreateCSeqHdr
CreateExpiresHdr
CreateFromHdr
CreateMaxForwardsHdr
CreateMinExpiresHdr
CreateToHdr
CreateUserAgentHdr
CreateViaHdr
CreateReasonHdr
CopySipHeader
ParseUnsupported
ParseAcceptHdr
ParseAllowHdr
ParseAllowEventsHdr
ParseCallIDHdr
ParseContactHdr
ParseContentEncodingHdr
ParseContentLengthHdr
ParseContentTypeHdr
ParseCSeqHdr
ParseEventHdr
ParseExpiresHdr
ParseFromHdr
ParseMaxForwardsHdr
ParseReasonHdr
cause=
text=
ParseMinExpiresHdr
ParseReferToHdr
ParseSubscriptionStateHdr
ParseToHdr
ParseUserAgentHdr
ParseViaHdr
ParseSKESeqHdr
ParseXCallIDHdr
ReplaceKeyword
CreateInvite
"%s"
Viceroy 1.7.0/GK
CreateAck
CreateCancel
CreateBye
application/ske
CreateBinaryMessageInDialog
text/plain
CreateGenericStatus
%s %s %s
%s %d %s
ConstructSipMsg
AssignHeader
CreateGenericSIPMsg
SIPCompressCallback
%08x-%04x-%04x-%04x-%08x%04x
z9hG4bK%08x%08x
ParseSipUri
transport=
method=
%s:%s%s%s%s%s%s
%s:%s%s[%s]%s%s%s
-[VCCaptionsTranscription initWithCoder:]
%@<%p> utteranceNumber=%u updateNumber=%u isLocal=%d isFinal=%d streamToken=%ld segments=%@
-[VCMediaStreamStats init]
Add participant failed
Remote participant already exist in session
Remote participant data is nil
Trying to remove an unknown participant
Invalid participant
Bad API usage
Start called on a stopping session
Stop called on a starting session
Start called while session is already in progress
Stop called on an already stopped session
Session start failed
One or more participants failed to start
Local source collision detected
Remote source collision detected
Update configuration failed
Failed to update session configuration
Media decryption failed
Remote media decryption failed
Fractured media detected
Remote participant subscribed to unknown stream ID
No remote packets for %ld seconds
Remote network outage?
Init remote participant failed
Unable to init remote participant
Add OneToOne Participant failed
Unable to add OneToOne participant
Configure remote participant failed
Unable to configure remote participant
Configure OneToOne Local participant failed
Unable to configure OneToOne Local participant
Session failed to switch from Multiway to OneToOne
Unable to send control message
Session failed to switch from OneToOne to Multiway
Uplink key material failed to roll
No uplink key material update event
Call terminated gracefully
Remote participant hung up
Call failed
Media server terminated
Failed to set the volume
Invalid input
Failed to set audio position
Audio position value is out of range
Participant start error
Start called on stopping participant
Participant stop error
Stop called on a starting participant
Start called on an already started participant
Stop called on an already stopped participant
Participant enabling/disabling audio/video in progress
Enable/disable audio or video called when it is already in progress
Participant stop in progress
Enable/disable audio or video called on a stopping participant
Participant start in progress
Enable/disable audio or video called on a starting participant
Participant in invalid
API called when not in the right state
Memory allocation failed
Participant media state change error
Setting the state of this media type is unsupported
Participant media state inconsistency
Cannot set different states on stream groups that belong to the same media type
Participant captions audio IO failure
Failed to configure audio IO. Will not start captions.
Participant argument error
The argument is invalid.
Media representation error
The provided representation is unsupported.
Speech Recognizer Error
The Speech Framework is unavailable
Captions State Transition Failed
Captions not supported
Invalid captions state transition
Unsupported transition
Recognizer is unavailable
Captions Initalization Error
Recognizer Request/Task or Converter Failed
Invalid Status
Trying
Ringing
Call Is Being Forwarded
Queued
Session Progress
Accepted
Multiple Choices
Moved Permanently
Moved Temporarily
Use Proxy
Alternative Service
Bad Request
Unauthorized
Payment Required
Forbidden
Not Found
Method Not Allowed
Not Acceptable
Proxy Authentication Required
Request Timeout
Gone
Request Entity Too Large
Request-URI Too Large
Unsupported Media Type
Unsupported URI Scheme
Bad Extension
Extension Required
Interval Too Brief
Temporarily not available
Call Leg/Transaction Does Not Exist
Loop Detected
Too Many Hops
Address Incomplete
Ambiguous
Busy Here
Request Terminated
Not Acceptable Here
Bad Event
Request Pending
Undecipherable
Internal Server Error
Not Implemented
Bad Gateway
Service Unavailable
Server Time-out
SIP Version not supported
Message Too Large
Busy Everywhere
Decline
Does not exist anywhere
ntpTime
cname
abSwitches
screenRes
TACreateHandle
TACloseHandle
TASend
TACancel
RTTAdjustedTimeOut(%d): %d -> %d (RTT: %d)
RTTAdjustedTimeOut
TAStart
TASetRTT
com.apple.avconference.transaction.inviteclientproc
TAInviteClientProc
TAMsgCallback
com.apple.avconference.transaction.noninviteclientproc
TANonInviteClientProc
com.apple.avconference.transaction.inviteserverproc
TAInviteServerProc
com.apple.avconference.transaction.noninviteserverproc
TANonInviteServerProc
-[VCVideoReceiverDefault initWithConfig:delegate:reportingAgent:statisticsCollector:transmitterHandle:]
-[VCVideoReceiverDefault setMode:]
-[VCVideoReceiverDefault oneToOneStreamIndex]
-[VCVideoReceiverDefault setUpRemoteAspectRatiosFromFreatureListString:]
-[VCVideoReceiverDefault dealloc]
v16@?0^{?=ddd}8
com.apple.VCVideoReceiverDefault.VCDisplayLink
-[VCVideoReceiverDefault initializeDisplayLink]
-[VCVideoReceiverDefault handleRemoteFrame:timestamp:cameraStatusBits:]
-[VCVideoReceiverDefault handleRequestingKeyFrameGenerationWithStreamID:firType:]
%@.%@.connection_queue
-[VCStreamInputManager init]
%@.%@.stream_input_queue
-[VCStreamInputManager newStreamInputID]
VCStreamInputID
-[VCStreamInputManager initializeStreamInputWithXPCArguments:result:error:]
VCStreamInputRemoteQueue
VCStreamInputManager
enableFigRemoteQueueForAVCStreamInputOutput
-[VCStreamInputManager getServerPidWithXPCArguments:result:error:]
VCStreamInputServerPID
-[VCStreamInputManager terminateStreamInputWithXPCArguments:result:error:]
-[VCStreamInputManager clientProcessDiedWithXPCArguments:result:error:]
-[VCStreamInputManager pushSampleBufferWithXPCArguments:result:error:]
VCStreamInputDidClientDie
VCStreamInputInitialize
B40@?0@"VCStreamInputManager"8@"NSDictionary"16^@24^@32
VCStreamInputGetServerPid
VCStreamInputTerminate
VCStreamInputPushSampleBuffer
VCStreamInputDidStart
VCStreamInputDidStop
VCStreamInputDidSuspend
VCStreamInputDidResume
EncoderVTCreateHandle
EncoderVTCloseHandle
EncoderVTSetThermalLevel
EncoderVTSetBitRate
EncoderVTEncodeFrame
EncoderVTGenerateKeyFrame
EncoderVTSendImgDesc
EncoderVTPixelBufferFromPool
EncoderVTSetEncodingMode
com.apple.VideoConference.VCConnectionManagerDelegateQueue
com.apple.VideoConference.VCConnectionManagerCallbackQueue
com.apple.VideoConference.VCConnectionManagerReportingQueue
com.apple.VideoConference.VCNWConnectionMonitorQueue
useNWConnectionMonitorForVCCM
UseNWConnectionMonitorForVCCM
duplicationReductionEnabled
UseMediaDrivenDuplication
-[VCConnectionManager init]
wrmPendingBitrateCapDelta
videoNearDegradedThreshold
coreMotionDetectionEnabled
UseCoreMotionDetection
-[VCConnectionManager dealloc]
-[VCConnectionManager registerStatisticsHandlers]_block_invoke
-[VCConnectionManager registerStatisticsHandlers]
-[VCConnectionManager setupConnectionHealthMonitorMultiway]
no-remote
remote-no-remote
-[VCConnectionManager setupConnectionHealthMonitor]
-[VCConnectionManager setPreferRelayOverP2PEnabled:]
-[VCConnectionManager setPreferRelayOverP2P:reason:]
-[VCConnectionManager setIsOneToOneModeEnabled:]
-[VCConnectionManager setIsOneToOneScreenEnabled:]
-[VCConnectionManager setStartConnectionHealthMonitoring:]
-[VCConnectionManager resetConnectionStatTimers]
mediaDegradedThreshold
NWOffChannel
NWBtCoex
NWFreqBand
NWQualityDelayRx
NWQualityDelayTx
NWQualityLossRx
NWQualityLossTx
NWQualityChannel
-[VCConnectionManager periodicTask:]
-[VCConnectionManager setConnectionSelectionVersionWithLocalFrameworkVersion:remoteFrameworkVersion:]
-[VCConnectionManager setConnectionPause:isLocalConnection:]
LCTCH
LXPNSV
RCTCH
RXPNSV
IPVER
ConnFmly
DuplicationType
SLTS
-[VCConnectionManager setDuplicationEnabledInternal:]
Start
Stop
No duplication
Local media degraded
Remote duplication
Both local media degraded and remote duplication
Local no packet received
Remote no packet received
Local media unrecoverable
Both local media unrecoverable and remote duplication
-[VCConnectionManager setPreWarmState:]
WRMLocAlrtUpdate
-[VCConnectionManager setRemotePreWarmStateEnabled:]
WRMRemAlrtUpdate
-[VCConnectionManager setIsRemoteMediaQualityDegraded:]
-[VCConnectionManager checkForCachedWRMNotification]
-[VCConnectionManager setWRMNotification:]
-[VCConnectionManager reportWRMSuggestion:]
WRMCoexIsLocal
WRMLinkType
WRMReasonCode
-[VCConnectionManager getSentBytes:receivedBytes:]
-[VCConnectionManager updatePacketCountAndByteCountWithIndex:packetSize:numOfStreamId:isPriorityIncluded:isOutgoing:]
-[VCConnectionManager synchronizeParticipantGenerationCounter:]
-[VCConnectionManager getPacketCountWithIndex:isOutgoing:]
-[VCConnectionManager getByteCountWithIndex:isOutgoing:]
-[VCConnectionManager updateSessionStats:]
-[VCConnectionManager addMediaHealthStatsHistoryEntryForParticipantID:]
-[VCConnectionManager removeMediaHealthStatsHistoryEntryForParticipantID:]
-[VCConnectionManager checkMediaQualityDegradedForParticipantID:]
-[VCConnectionManager updateMediaHealthStats:idsParticipantID:]
-[VCConnectionManager isDuplicationAllowedForParticipantID:bucketsToSum:threshold:]
-[VCConnectionManager updateMediaDegradedHistoryWithCurrentVideoStallDuration:idsParticipantID:]
allowed
not allowed
-[VCConnectionManager updateMediaDegradedHistoryWithCurrentAudioErasure:idsParticipantID:]
%d:%d:%d:%d
%c:%c
_VCConnectionManagerNWConnectionStatisticsCallback
-[VCConnectionManager checkpointPrimaryConnection:]
primary
secondary
cellular
wifi
IPV6
IPV4
-[VCConnectionManager primaryConnectionChanged:oldPrimaryConnection:]
-[VCConnectionManager disableRemotePreferredInterfaceInference:]
1476
1651
1885
-[VCConnectionManager isOptimalConnection:asPrimary:interfaceMask:]
is not
-[VCConnectionManager connectionForQualityInternal:]
-[VCConnectionManager createSourceDestinationInfoListWithConfig:]
localWRMAlert
-[VCConnectionManager checklocalRATTypeOverrideDefaultValue:]
ACAS
linkProbingFeatureThreshold
linkProbingCapabilityVersion
-[VCConnectionManager setDefaultLinkProbingCapabilityVersionForDeviceRole:]
lnkPrbVers
remLnkPrbVers
-[VCConnectionManager setRemoteLinkProbingCapabilityVersion:]
-[VCConnectionManager addConnection:]
-[VCConnectionManager removeConnection:]
-[VCConnectionManager updateCellularMTU:]
-[VCConnectionManager updateCellularTech:forLocalInterface:]
-[VCConnectionManager updateOneToOneBitrateCapsForConnection:]
-[VCConnectionManager updateAllBitrateCapsForConnection:]
-[VCConnectionManager sourceDestinationInfo:isSourceOnCellular:isSourceIPv6:]
-[VCConnectionManager copyConnectionWithSourceDestinationInfo:isPrimary:]
-[VCConnectionManager shouldAcceptDataFromSourceDestinationInfo:]
-[VCConnectionManager updateConnectionForDuplication]
-[VCConnectionManager reportLinkProbingStatsWithDuplicationJustStarted:]
-[VCConnectionManager updateNegotiatedSettingsOnetoOne:]
-[VCConnectionManager useCellPrimayInterface:]
-[VCConnectionManager updateConnectionStatsWithIndicatorNoPacket:]
-[VCConnectionManager updateConnectionStatsWithIndicatorOnlyPrimaryNoPacket:]
local
remote
MAXNRPT
MAXRNRPT
-[VCConnectionManager updateConnectionStatsWithIndicatorPrimaryImproved:]
-[VCConnectionManager updateConnectionHealthWithVCStatisticsMessage:]
-[VCConnectionManager updateLinkPreferSuggestion:]
-[VCConnectionManager applyLinkRecommendation]
LnkSug
LnkScr
LnkDec
LnkIp
-[VCConnectionManager applyLinkFlags:isCellular:]
-[VCConnectionManager applyRemoteLinkFlags:isCellular:]
-[VCConnectionManager startActiveProbingWithOptions:]
-[VCConnectionManager stopActiveProbingWithOptions:]
-[VCConnectionManager queryProbingResultsWithOptions:]
-[VCConnectionManager flushLinkProbingStatusWithOptions:]
-[VCConnectionManager updateConnectionSelectionPolicyWithPreferE2E:]
-[VCConnectionManager didChangeWifiAssistAvailable:reason:]
WAStateChangeReason
VCConnectionManager_UpdatePacketSendStatus
+[VCVTPWrapper startVTP]
+[VCVTPWrapper stopVTP]
-[VCNetworkFeedbackController initializeWRMInfo]
-[VCNetworkFeedbackController startWithMetricsConfig:]
-[VCNetworkFeedbackController stop]
-[VCNetworkFeedbackController requestWRMNotification]
-[VCNetworkFeedbackController setWRMNotification:]
-[VCNetworkFeedbackController setWRMCoexMetrics:]
-[VCNetworkFeedbackController wcmSetCallConfig:interferenceLevel:]
-[VCNetworkFeedbackController wcmGetCallConfig:targetBitrate:]
-[VCNetworkFeedbackController setupWRMClientWithMetricsConfig:]
-[VCNetworkFeedbackController cleanupWRMClient]
-[VCNetworkFeedbackController setDownlinkTargetCellBitrateCap:]
psolaMaxContiguousCompressions
psolaAdaptationGap
psolaMaxContiguousExpansion
_VCTimescalePSOLA_ActiveSpeechExpand
_VCTimescalePSOLA_ActiveSpeechCompress
VCTimescalePSOLA_UpdateHistoryBuffer
-[VCAudioClient startWithError:]
Session parameters have not been set
Timeout while starting the client
-[VCAudioClient stopWithError:]_block_invoke
-[VCAudioClient stopWithError:]
Timeout while stopping the client
-[VCAudioStreamSendGroup initWithConfig:]
-[VCAudioStreamSendGroup setDeviceRole:operatingMode:]_block_invoke
-[VCAudioStreamSendGroup configureAudioStreams:deviceRole:operatingMode:]
-[VCAudioStreamSendGroup updateActiveVoiceOnly:]
-[VCAudioStreamSendGroup dispatchedUpdateActiveMediaStreamIDs:withTargetBitrate:mediaBitrates:rateChangeCounter:]
v32@?0^{tagVCAudioStreamGroupStream=^{tagVCAudioStreamGroupStream}BB^v^?S@II}8B16^S20C28
-[VCAudioStreamSendGroup addSyncDestination:]_block_invoke
-[VCAudioStreamSendGroup removeSyncDestination:]_block_invoke
-[VCAudioStreamSendGroup redundancyController:redundancyPercentageDidChange:]_block_invoke
-[VCAudioStreamSendGroup createIOEventQueues]
-[VCAudioStreamSendGroup startDynamicDucker]
Tried to create redundancy controller for mode which VCMediaStreamSendGroupConfig is nil
Need statistics collector to create redundancy controller
Failed to create audio redundancy controller
-[VCAudioStreamSendGroup setupRedundancyControllerForMode:]
-[VCAudioStreamSendGroup checkStreamsForAdditionalOptIn:]
-[VCAudioStreamSendGroup didReceiveReportPacket:arrivalNTPTime:]
-[VCAudioStreamSendGroup didReceiveCustomReportPacket:arrivalNTPTime:]
VCAudioStreamSendGroup_PushAudioSamples
VCAudioStreamSendGroup_ProcessAudioStreamUpdateEvent
%02x
MVRA
RVRA1
RVRA2
[%.2fx%.2f@(%.2f,%.2f)]
VideoUtil_CreateSampleFromBuffer
VideoUtil_CreateAndAppendBuffer
+[VideoUtil convertPixelBuffer:toImageType:withAssetIdentifier:cameraStatusBits:allowTimeMetaData:]
+[VideoUtil sizeForVideoResolution:]
+[VideoUtil adjustFaceBounds:fromOriginalBufferSize:toCroppedBufferSize:]
public.jpeg
public.heic
+[VideoUtil typeIdentifierForImageType:]
+[VideoUtil videoCodecForPayload:]
+[VideoUtil computeResolutionForMainDisplayWithMaxScreenPixelCount:]
TPSendUDPPacketARPL
TPSendUDPDataPacket
TPCreateHandle
com.apple.VideoConference.ICEConnectivityCallbackQueue
TPCloseHandle
TPSetPacketMultiplexMode
TPSetupOpenFaceTimeSecurity
TPGetLoopbackIP
TPListenVirtualInterface
TPListenOnPhysicalInterface
TPStopListen
TPSend
TPAddTransaction
TPRemoveTransaction
TPGetType
TPStopHeartbeat
TPGetInterfaceStillExists
TPGetConnectionData
TPStartConnectionCheck
TPDiscardConnectionResult
TPDiscardRelayBinding
TPDiscardRelayBindingWithChannelNumber
TPRemovePreservedPortBindForCallID
TPSetCellConditionChangeHandler
TPUpdateInterfaceList
TPStopConnectivityCheck
TPGetNextBestCandidate
TPGetRemoteCIDForDstIPPort
TPSetSKEState
TPSetForceRelay
TPSetForceIPv6
TPSetReportingAgent
TPSetICETimeout
TPSetARPLHandler
TPCleanupARPLHandler
TPUpdateICERole
TPUpdateQoS
TPGetConnErrorCode
TPSetDataPacketReceivedCallback
TPProcessRemoteInterfaceChangeMessage
TPGetRemoteICEVersion
TPSetAllowSameSourceDestination
SendUDPPacket
SendUDPPacketForCList
dtls
ListenIDS
CreateSocketForIDS
TPEnsureRecvProcStarted
com.apple.avconference.transport.recvproc
TPRecvProc
RecvMessageUDP
SIP/
PassMessage
CallSIPMessageCallback
ListenUDP
SendUDP
%VRTCP-PORT%
CompressMsg
AppendBinaryBody
TPAddIPPortToCLIST
RemoveCListForCallID
CreateSocketAndBind
TransportMapPacketMultiplexModeToVTPMode
needUpdateRemoteCandidateList
TPSendUDPPacket
TPRecvUDPPacketWithTimeout
TPConnectedCallback
TPConnectedCallback_block_invoke
TPCancelRecvUDP
TPProcessICENomination
TPNewCandidatesCallback
TPNewCandidatesCallback_block_invoke
TPShouldNominateICECandidatePair
TPRemoveIPPort
TPRemoveIPPort_block_invoke
basebandUseAverageQueueDepthForDelay
basebandBitrateAverageWindow
%2u%2u%2u%2u%2u %6u
Baseband target bitrate changed and not stable.
New bitrate stabilized for baseband, collected %d BDCD samples and start normalizing BDCD.
Unstable bitrate for baseband, start re-collecting BDCD list...
-[AVCBasebandCongestionDetector dealloc]
[Baseband notification too close to the previous one, discard]
Start re-collecting BDCD samples [flushCount %d, BBAvgTxRate %d].
[Bogus baseband notification, discard]
TID[%04X] Baseband Drop ACK no packet dropped
TID[%04X] Baseband Drop ACK reported failure
TID[%04X] Baseband Drop ACK for PT %u: %2u packets dropped [%s]
{ %@: %@ streamGroupID=%s type=%d minNetworkBitrate=%u maxNetworkBitrate=%u qualityIndex=%u videoQuality=%u visibilityIndex=%u prominenceIndex=%u streamID=%u repairStreamID=%u repairNetworkBitrate=%u actualNetworkBitrate=%u isLowestQuality=%d }
+[VCSessionBandwidthAllocationTableEntry entryTypeForMediaType:]
-[VCSessionBandwidthAllocationTableEntry compare:]
+[VCSessionBandwidthAllocationTableEntry compareAudioEntry:audioEntry:]
+[VCSessionBandwidthAllocationTableEntry compareVideoEntry:videoEntry:]
+[VCSessionBandwidthAllocationTableEntry compareAudioEntry:videoEntry:]
VCTransportStreamRunLoopVTPCreate
_VCTransportStreamRunLoopVTPAddTransportStream
_VCTransportStreamRunLoopVTPUpdateFDSet
i28@?0^{?=^{__CFArray}{os_unfair_lock_s=I}i{fd_set=[32i]}i}8^{OpaqueVCTransportStream=}16i24
_VCTransportStreamRunLoopVTPIterateTransportStreams
_VCTransportStreamRunLoopVTPRemoveTransportStream
_VCTransportStreamRunLoopVTPWaitForReceive
_VCTransportStreamRunLoopVTPPerformReceive_block_invoke
_VCTransportStreamRunLoopVTPCancelWait
-[VCSessionUplinkBandwidthAllocatorOneToOne init]
-[VCSessionUplinkBandwidthAllocatorOneToOne getCurrentEnabledTierTables:qualityIndices:qualityIndexToStreamToken:]
q24@?0@8@16
-[VCSessionUplinkBandwidthAllocatorOneToOne mediaBitratesForStreamToken:targetNetworkBitrate:]
-[VCSessionUplinkBandwidthAllocatorOneToOne streamIDsIfStreamTokenIsEnabled:]
setTransformPolicyFromCipherSuite
SRTPGetROC
SRTPCleanUpEncryption
SRTPInitCrypt
SRTPPrepareEncryption
SRTPUseEncryption
enableEncryptionDebug
SRTPUpdateKeyMaterialForRTPInfo
SRTPUpdateKeyMaterial
SRTPUpdateEncryptionInfo
SRTPDeriveMediaKeyInfo
SRTPEncryptData
SRTPEncrypt
SRTCPEncrypt
SRTCPDecrypt
SRTPAddAuthenticationTag
SRTCPAddAuthenticationTag
SRTCPVerifyAuthenticationTag
SRTPCancelEncryption
SRTPWaitUseEncryption
_SRTPUpdateEncryption
SRTPGetKeyDerivationCryptoSet
_SRTPCancelEncryption
MakeCounter
SRTPIsAuthenticationEnabled
transactionID
topic
VCPacketFilter
[VCPacketFilter %p]
/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/TCPTunnelClient.m
-[TCPTunnelClient destroyDispatchTimer]
-[TCPTunnelClient createDispatchTimer:withDetailedError:]_block_invoke
cannot establish TCP TURN channel
TURN request is timed out
-[TCPTunnelClient createDispatchTimer:withDetailedError:]
TCP TURN channel closed
Socket closed while accepting packets
-[TCPTunnelClient processSocketRead]
-[TCPTunnelClient sendTCPData:bufSize:]
Socket closed while writing
-[TCPTunnelClient processSocketWrite:]
-[TCPTunnelClient vcArg:sendControlData:isTypeSSL:withTimeout:withDetail:]_block_invoke
-[TCPTunnelClient receivedControlData:]
Error parsing TURN message (%08X)
Allocation Failed: %u
ChannelBind Failed: %u
Refresh Failed: %u
-[TCPTunnelClient processSocketReadSSL]
TCP/SSL TURN channel closed
-[TCPTunnelClient receivedSSLConnectionData:recordType:]
-[TCPTunnelClient initWithRelayRequestDictionary:withCallID:relayType:errorCode:]
Dummy
com.apple.viceroy.TCPTunnel
-[TCPTunnelClient initWithRelayRequestDictionary:withCallID:relayType:errorCode:]_block_invoke
can't create write source.
can't connect socket.
can't create read source.
-[TCPTunnelClient dealloc]
-[TCPTunnelClient sendAllocateMsg:]
Sending TCPTunnel Allocate Request failed.
Make request error: %x.
Encode request error: %x.
-[TCPTunnelClient sendAllocateMsg:]_block_invoke
-[TCPTunnelClient sendChannelBindingMsgWithDict:error:]
Sending TCPTunnel ChannelBinding Request failed.
-[TCPTunnelClient sendChannelBindingMsgWithDict:error:]_block_invoke
-[TCPTunnelClient sendRefreshMsg:error:]
Sending TCPTunnel Refresh Request failed.
-[TCPTunnelClient unbindChannel]_block_invoke
-[TCPTunnelClient closeTunnelSocket]
-[TCPTunnelClient closeTunnelSocket]_block_invoke
-[TCPBufferPool getBufferFromPool:]
-[TCPBufferPool returnBufferToPool:]
Pool(%d):
 %4d
-[TCPBufferPool monitorBufferPool]
<VCCallSession localCallID = %d, remoteCallID = %d, state = %d, sentDidStartAsYES = %d>
VCCallSession
-[VCCallSession initWithDeviceRole:transportType:isGKVoiceChat:reportingHierarchyToken:]
com.apple.VideoConference.VCCallSession.connectionChangeQueue
com.apple.VideoConference.VCCallSession.videoQueue
com.apple.VideoConference.VCCallSession.videoAsyncQueue
com.apple.VideoConference.VCCallSession.qualityQueue
com.apple.VideoConference.VCCallSession.audioQueue
com.apple.VideoConference.VCCallSession.delegateNotificationQueue
com.apple.avconference.vccallsession.celltech
CallSettings
.calldump
com.apple.VideoConference.CallSettingsLog
v24@?0^v8^{__CFArray=}16
-[VCCallSession initWithDeviceRole:transportType:isGKVoiceChat:reportingHierarchyToken:]_block_invoke
com.apple.avconference.vccallsession.timestamp
-[VCCallSession gatherRealtimeStats:]
packetLossRate
bandwidthUpstream
packetLateAndMissingRatio
-[VCCallSession setOperatingMode:]_block_invoke
-[VCCallSession updateVideoQualityStatusWithTime:isRemote:]_block_invoke
enableBBNote
-[VCCallSession evaluateEnableRRx:]
enableRRx
-[VCCallSession updateMaxPktLength]
captureRule
NoRule
encodeRule
-[VCCallSession handleCellTechChange:]
-[VCCallSession handleCellTechChange:]_block_invoke_2
VCCellTechKey
VCMaxBitrateKey
VCCellTechChangeTopic
-[VCCallSession handleCellTechChange:]_block_invoke
CellTech
-[VCCallSession remoteCellTechStateUpdate:maxRemoteBitrate:]_block_invoke
matchedFeatureListString
-[VCCallSession getFeatureListStringForPayload:]
localFeatureListString
remoteFeatureListString
-[VCCallSession applyFeatureListStringForPayload:]
%d/%d,%d/%d
useFakeLF
-[VCCallSession chooseVideoPayloadForInterface:]
/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCCallSession.m
Could not find a compatible codec. Participant may switched wireless interface.
FaceTimePhotosUseBestVideoRule
-[VCCallSession schedulePrimaryConnectionChange:oldConnection:]_block_invoke
-[VCCallSession handlePendingPrimaryConnectionChange]_block_invoke
-[VCCallSession updateRemoteMediaStallState:]
-[VCCallSession updateRemoteMediaStallStateReporting:]
-[VCCallSession updateLastReceivedPacketWithTimestamp:packetType:]
SymptomReporterOptionalKeySessionID
SymptomReporterOptionalKeyPeerID
-[VCCallSession updateLastReceivedPacketWithTimestamp:packetType:]_block_invoke
Disconnecting due to no remote packets.
-[VCCallSession updateLastReceivedPacketWithTimestamp:packetType:]_block_invoke_2
Network conditions became unusable for %d seconds
Bad network conditions
-[VCCallSession dealloc]
fecFeedbackVersion
The connection timed out without getting started
Client disconnected session before completely initializing it
-[VCCallSession cancelConnectionTimeoutTimer]
-[VCCallSession setupConnectionTimeoutTimerWithErrorCode:detailedCode:description:reason:]_block_invoke
treatLTEAs4G
-[VCCallSession startConnectionWithParticipantID:callID:usingInviteData:isCaller:capabilities:idsSocket:destination:error:]
Failed to process response media blob
Media blob error
00000000-0000-0000-0000-000000000000
-[VCCallSession startConnectionWithParticipantID:callID:usingInviteData:isCaller:capabilities:idsSocket:destination:error:]_block_invoke
v16@?0@8
-[VCCallSession startConnectionWithParticipantID:callID:usingInviteData:isCaller:capabilities:idsSocket:destination:error:]_block_invoke_2
v20@?0I8@12
-[VCCallSession handleReceivedPiggybackBlobIDS:]
Signalled error at %s: Piggyback SKE blob is nil
Signalled error at %s: skeState is NULL
Signalled error at %s: SKEState_SetBlob(1) failed
Signalled error at %s: SKEState_CopySecretKeySync failed
Media insecure
Key exchange failed
A/B testing: %s
-[VCCallSession setupABTesting]
-[VCCallSession setupWRMClient]
-[VCCallSession cleanupWRMClient]
-[VCCallSession setWRMNotification:]
-[VCCallSession setWRMCoexMetrics:]
VCWRMCoexMetricsMessage
VCWRMAlertStateEnabled
VCWRMAlertStateDisabled
VCWRMAlertStateUpdateMessageTopic
-[VCCallSession sendWRMStatusUpdate:]
-[VCCallSession requestWRMNotification]
-[VCCallSession newMediaNegotiatorAudioConfigurationWithAllowAudioSwitching:useSBR:aacBlockSize:]
-[VCCallSession newMediaBlobWithRemoteMediaBlob:localCallID:isLowBitrateCodecPreferred:]
-[VCCallSession reportOperatingMode]
Mode
Watch
-[VCCallSession inviteDataForParticipantID:callID:remoteInviteData:nonCellularCandidateTimeout:error:]
Failed to generate the media blob
1935.21.1.3
-[VCCallSession addLocalCallInfoToInviteDictionary:]
-[VCCallSession setRemoteCallInfoFromInviteDictionary:]
VCAudioPaused
AudioPauseStateMessageTopic
VCAudioUnpaused
-[VCCallSession setPauseAudio:force:error:]
-[VCCallSession setPauseAudio:force:error:]_block_invoke
-[VCCallSession setSuspendVideo]
VCVideoPaused
VideoPauseStateMessageTopic
-[VCCallSession setResumeVideo]
VCVideoUnpaused
-[VCCallSession setPauseVideo:force:error:]_block_invoke_2
-[VCCallSession processRelayRequestResponseDict:didOriginateRequest:]
-[VCCallSession processRelayUpdateDict:didOriginateRequest:]
-[VCCallSession processCancelRelayRequest:didOriginateRequest:]
-[VCCallSession sendARPLData:toCallID:]
-[VCCallSession sendData:messageType:encrypted:]
SUCCESS
FAILURE
-[VCCallSession negotiatedReceivingFramerate]
-[VCCallSession setSessionConferenceState:callID:]
VCWindowState
VCWindowStateChange
-[VCCallSession setSessionConferenceVisualRectangle:callID:]
VCWindowOriginX
VCWindowOriginY
VCWindowWidth
VCWindowHeight
-[VCCallSession setPeerProtocolVersion:]
RLY-
P2P-
-[VCCallSession handleNewConnectionSetup:isInitialConnection:]
-[VCCallSession handleFirstConnectionSetup:]
cannedReplay
Carrier
Unavailable
CannedRelay
missing
Interface
Upgrade
RedState
WAState
REMBUILD
unknown
localBitrateCap
remoteBitrateCap
-[VCCallSession setupSecureDataChannel]
-[VCCallSession(WCMClientDelegate) wcmSetCallConfig:interferenceLevel:]
-[VCCallSession(WCMClientDelegate) wcmGetCallConfig:targetBitrate:]
-[VCCallSession(Callbacks) sipCallback:callID:msgIn:msgOut:optional:confIndex:]
DTLS-SRTP
Video Insecure
Encryption key setup did not complete successfully
Audio Insecure
Identif
UserMessage
MediaCallback
-[VCCallSession(PrivateMethods) setupIDSConnectionForCallID:destination:socket:error:]
Cannot setup IDS connection
No destination/socket
-[VCCallSession(PrivateMethods) setSKEBlobOnTransportSession]
-[VCCallSession(PrivateMethods) configureLegacyTransportWithInviteInfo:error:]
Cannot setup legacy connection
No remote connection blob
SKECheckRemoteCert
v32@?0^{SKEStateOpaque=}8^{__SecCertificate=}16^i24
-[VCCallSession(PrivateMethods) newSKEBlobWithRemoteSKEBlob:]
-[VCCallSession(PrivateMethods) setupEncryptionWithKey:confIndex:]
-[VCCallSession(PrivateMethods) initWithRelevantStorebagEntries]
-[VCCallSession(PrivateMethods) logDetailedNetworkInformation]
forceDTLS
-[VCCallSession(PrivateMethods) setupDTLSDefaults]
-[VCCallSession(PrivateMethods) setupPeerInfo:usingInviteData:isCaller:capabilities:]
Connection to remote participant timed out
Connection took too long
-[VCCallSession(PrivateMethods) notifyDelegateAndEndCall:didRemoteCancel:error:]
-[VCCallSession(PrivateMethods) reportDashboardEndResult:]
Media cleanup
Ping!
VCPingTopic
-[VCCallSession(PrivateMethods) stopPausedHeartbeat]
-[VCCallSession(PrivateMethods) logPerfTimings]
-[VCCallSession(PrivateMethods) processSIPMessage:msgOut:optional:confIndex:]
SKEComplete
SKEReportError
skeDetailCode
filePath
description
reason
-[VCCallSession(PrivateMethods) resetState]
-[VCCallSession(PrivateMethods) setupCalleeSIPStartTimeout:]_block_invoke
GKVoiceChatService
-[VCCallSession(PrivateMethods) createSDP:audioPayloadCount:secondaryPayloadTypes:secondaryPayloadCount:videoPayloadTypes:videoPayloadCount:localFeatureList:answerBandwidth:maxBandwidth:imageSizesSend:imageSendCount:imageSizesRecv:imageRecvCount:sdp:numSDPBytes:error:]
Could not create session description
-[VCCallSession(PrivateMethods) negotiateMediaMaxBandwidth]
-[VCCallSession(PrivateMethods) applyNegotiatedSettings]
+[VCCallSession(PrivateMethods) setRxPayloadList:withPayloadTypes:isRedEnabled:]
-[VCCallSession(PrivateMethods) applyNegotiatedAudioSettings:]
Failed to apply audio settings
Error: %x.
-[VCCallSession(PrivateMethods) applyNegotiatedVideoSettings:]
Failed to apply video settings
-[VCCallSession(PrivateMethods) startMediaWithPreNegotiatedSettings:]
Failed to start media
-[VCCallSession(PrivateMethods) handleIncomingWithCallID:msgIn:msgOut:optional:confIndex:error:]
-[VCCallSession(PrivateMethods) getAllPayloadsForVideo:count:]
v32@?0@8Q16^B24
no longer attempting to connect
State != GKVoiceChatServiceStateCallerAttemptingToConnect
-[VCCallSession(PrivateMethods) createInviteSDPWithError:]
Failed to create the offer SDP
Error status: 0x%08x
Unable to establish session with the remote participant.
SIPConnectIPPort failed
-[VCCallSession(PrivateMethods) sendSIPInviteWithError:]
-[VCCallSession(PrivateMethods) createAudioTransmitter:]
Could not setup RTP
Failed to allocate audio transmitter
useHighStartMode
Error creating handle
Failed to initialize audio receiver
Error setting VTP mode
Error setting connectionManager
Error creating video handle
Could not setup video RTP
Failed to associate audio/video handles
-[VCCallSession(PrivateMethods) createRTPHandles:]
Could not prepare SRTP for audio RTP handle
Error calling SRTPPrepareEncryption
-[VCCallSession(PrivateMethods) prepareSRTPWithError:]
Could not prepare SRTP for video RTP handle
-[VCCallSession(PrivateMethods) createMediaQueueHandle:]
Could not setup media queue
-[VCCallSession(PrivateMethods) negotiateFeaturesString:forPayload:]
-[VCCallSession(PrivateMethods) negotiatePayloads:withError:]
Unable to parse session description. The remote participant may be using an incompatible version.
Bad SDP.
No matching codec
Could not find a compatible codec.  The remote participant may be using an incompatible version.
SetBWEstMode critical failure
SetBWEstMode critical failure.
-[VCCallSession(PrivateMethods) negotiateMaxBandwidth:]
-[VCCallSession(PrivateMethods) chooseVideoPayload:operatingMode:isLocalOnCellular:isRemoteOnCellular:]
cellRules
wifiRules
send
recv
-[VCCallSession(PrivateMethods) getAllCompatibleVideoPayloads:forMediaType:]
-[VCCallSession(PrivateMethods) getCompatibleLocalFeatureListForPayloads:count:]
-[VCCallSession(PrivateMethods) setRTPPayloads:withError:]
Error
Could not set RTP payload
-[VCCallSession(PrivateMethods) setMediaQueueStreamSettings]
-[VCCallSession(PrivateMethods) setupCallerRTPChannelWithError:]
-[VCCallSession(PrivateMethods) sipConnectWithError:]
Could not stop audio.
Audio is not running
disableAudio
-[VCCallSession(PrivateMethods) startAudioWithCompletionHandler:]_block_invoke
Could not start audio.
Call already completed
Couldn't setup encoder.
Bad cookie?
-[VCCallSession(PrivateMethods) startAudioIOWithCompletionHandler:]
Audio started after call ended.
-[VCCallSession(PrivateMethods) startAudioIOWithCompletionHandler:]_block_invoke
-[VCCallSession(PrivateMethods) updateDeviceRole:]
updateDeviceRole failed
Invalid transition from role %d to %d
-[VCCallSession(PrivateMethods) updateDeviceRole:]_block_invoke
Stop Audio Timed out
Start Audio Timed out
VCVideoMode
VCAudioMode
VCDataMode
CallingModeTopic
-[VCCallSession(PrivateMethods) sendCallingModeMessage]
-[VCCallSession(PrivateMethods) setupAudioCookies]
-[VCCallSession(PrivateMethods) vcrcServerBagProfileNumber]
enableTFRCLog
-[VCCallSession(PrivateMethods) startAFRC:]
Could not setup AFRC
could not create handle
-[VCCallSession(PrivateMethods) startVCRC:]
-[VCCallSession(PrivateMethods) startRateControl:]
-[VCCallSession(PrivateMethods) newConfigForPayloadType:]
-[VCCallSession(PrivateMethods) choosePayload:]
SIP failed with internal fatal error
Remote participant cancelled request.
Remote participant cancelled session.
Remote participant hangup.
-[VCCallSession(PrivateMethods) audioRTPID]
-[VCCallSession(PrivateMethods) videoRTPID]
-[VCCallSession(PrivateMethods) disconnectWithNoRemotePackets:timeoutUsed:]_block_invoke
No remote packets for %d seconds
Normal Call Termination
-[VCCallSession(PrivateMethods) doSipEndAction:callID:error:]
-[VCCallSession(PrivateMethods) setLocalIdentityForKeyExchange]
We could not establish end-to-end security for this call.
No local identity could be retrieved.
-[VCCallSession(PrivateMethods) logIdentity:]
-[VCCallSession(PrivateMethods) pickFeaturesStringForPayload:featureListDict:remote:]
-[VCCallSession(PrivateMethods) setMatchedFeaturesString:localFeaturesString:remoteFeaturesString:]
CABAC
-[VCCallSession(PrivateMethods) maxBitrateForConnectionType]
CFBundleName
AppName
-[VCCallSession(PrivateMethods) enableSessionHealthMonitor]_block_invoke
-[VCCallSession(PrivateMethods) sendBasebandCodecMessage]
VCBasebandCodecType
VCBasebandCodecSampleRate
VCBasebandCodecChange
VCSymptomReporterSymptom
VCSymptomReporterGroupID
VCSymptomReporterMessage
-[VCCallSession(PrivateMethods) mapPacketMultiplexModeToRTPMode:]
-[VCCallSession(PrivateMethods) mapPacketMultiplexModeToSIPMode:]
-[VCCallSession(PrivateMethods) disconnectInternal:disconnectError:didRemoteCancel:]_block_invoke
VCDisconnectMessage
SUCCESSFULLY
UNSUCCESSFULLY
v12@?0B8
-[VCCallSession(PrivateMethods) disconnectInternal:disconnectError:didRemoteCancel:]
Ending the Call even though we haven't finished notifying the client that we have started
-[VCCallSession(Messages) setupAudioPauseMessages]_block_invoke
v32@?0@"NSString"8@"NSError"16@"NSNumber"24
-[VCCallSession(Messages) setupVideoPauseMessages]_block_invoke
-[VCCallSession(Messages) setupAudioPausedHBMessages]_block_invoke
AudioOnOffStateMessageTopic
VCAudioEnabled
VCAudioDisbaled
-[VCCallSession(Messages) setupAudioOnOffStateMessages]_block_invoke
-[VCCallSession(Messages) setupCallingModeMessages]_block_invoke
-[VCCallSession(Messages) setupBasebandCodecInfoMessages]_block_invoke
-[VCCallSession(Messages) setupDisconnectMessage]_block_invoke
VCHandoverCandidateChange
VCHandoverNewCandidateBlob
-[VCCallSession(Messages) setupHandoverCandidateChangeMessage]_block_invoke
-[VCCallSession(Messages) setupPiPStateChangeMessage]_block_invoke
-[VCCallSession(Messages) setupCellTechChangeMessages]_block_invoke
VCMomentsStateMessageTopic
-[VCCallSession(Messages) setupMomentsMessages]_block_invoke
VCPreferredInterfaceMessageTopic
-[VCCallSession(Messages) setupPreferredInterfaceMessage]_block_invoke
VCPreferredInterfaceKey
VCPreferredInterfaceDuplicatingKey
-[VCCallSession(Messages) processSymptomFromMessage:participantID:isLocalInitiated:isLocalSideOnly:]
SymptomReporterOptionalKeyGroupID
SymptomReporterOptionalIsLocalSideOnly
-[VCCallSession(Messages) setupSymptomEnabledMessage]_block_invoke
v28@?0@"NSString"8B16@"NSNumber"20
-[VCCallSession(Messages) setupWRMAlertStateUpdateMessage]_block_invoke
-[VCCallSession(Messages) setupWRMCoexMetricsMessage]_block_invoke
-[VCCallSession(Messages) controlChannel:receivedData:transactionID:fromParticipant:]
-[VCCallSession(VCTransportSessionLegacyDelegate) transportSession:connectionSetupDataDidChange:]
-[VCCallSession(AVCRateControllerDelegate) rateController:targetBitrateDidChange:rateChangeCounter:]
-[VCCallSession(VCRateControlMediaControllerDelegate) mediaController:mediaSuggestionDidChange:]
flush audio
flush video
refresh video
stop video
start video
stall audio
unstall audio
imageAttrForAnswer
remove16x9Resolutions
SymptomReporterCallbackKeySymptomID
SymptomReporterCallbackKeyGroupID
reportingStatusCodeForConnectionType
{VCCapabilities: isAudioEnabled = %d, isAudioPausedToStart = %d, isVideoEnabled = %d, isVideoPausedToStart = %d, isVideoSourceScreen = %d, isDuplexAudioOnly = %d, isDuplexVideoOnly = %d, isHalfDuplexAudio = %d, isKeyExchangeEnabled = %d, isRelayEnabled = %d, isRelayForced = %d, requiresWifi = %d, isDTLSEnabled = %d, preferredAudioCodec = %u, actualAudioCodec = %u, preferredVideoCodec = %u, actualVideoCodec = %u, deviceRole = %d}
audioEnabled
videoEnabled
videoSourceScreen
duplexAudioOnly
duplexVideoOnly
halfDuplexAudio
keyExchangeEnabled
startAudioPaused
startVideoPaused
preferredAudioCodec
actualAudioCodec
preferredVideoCodec
actualVideoCodec
deviceRole
relayEnabled
relayForced
requiresWifi
DTLSEnabled
VideoConference
-[VideoConference initWithClientPid:]
disableFacetimeTimeout
com.apple.VideoConference.Notification
-[VideoConference dealloc]
newSession
-[VideoConference newSessionWithDeviceRole:reportingHierarchyToken:]
-[VideoConference sendARPLData:toCallID:]
-[VideoConference warmupForCall]
-[VideoConference setupNATObserver]_block_invoke
natType
-[VideoConference natType]
-[VideoConference inviteDataForParticipantID:callID:remoteInviteData:nonCellularCandidateTimeout:error:]
connectionBlobForParticipantID
-[VideoConference natTypeForCallSessions:]
requiresNoWifi
/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VideoConference.m
No CallID
Called without a callID we know about
-[VideoConference setPauseAudio:callID:error:]
-[VideoConference setPeerCN:callID:]
-[VideoConference setSessionID:callID:]
-[VideoConference setPeerReportingID:sessionID:callID:]
-[VideoConference updateCapabilities:forSession:]
-[VideoConference updateCapabilities:forCallID:]
-[VideoConference setUpAudioIO:callID:]
-[VideoConference setupSpatialAudioWithCallID:]
-[VideoConference startConnectionWithParticipantID:callID:usingInviteData:isCaller:capabilities:idsSocket:destination:error:]
-[VideoConference setCurrentFocus:]
-[VideoConference stopAllCalls:]
-[VideoConference stopCallID:]
-[VideoConference cancelCallID:]
-[VideoConference remoteCancelledCallID:]
Report
-[VideoConference setPacketsPerBundle:]
-[VideoConference processRelayRequestResponse:responseDict:didOriginateRequest:]
-[VideoConference processRelayUpdate:updateDict:didOriginateRequest:]
-[VideoConference pushAudioSamples:]
-[VideoConference pullAudioSamples:]
-[VideoConference(AudioProcessing) updateSpeaking:timeStamp:]
-[VideoConference(AudioProcessing) updateAudioTimestampsForSession:withNewSampleTime:hostTime:numSamples:]
-[VideoConference(AudioProcessing) pullDecodedMeshMode:]
-[VideoConference(SIPDispatch) sipCallbackNotification:callID:msgIn:msgOut:optional:confIndex:]
-[VideoConference(SessionInfo) conferenceMatchesSourceDestinationInfo:]
-[VideoConference(SessionInfo) sessionForSourceDestinationInfo:]
-[VideoConference(SessionInfo) sessionForIncomingParticipantID:]
-[VideoConference(PrivateMethods) stopCallID:didRemoteCancel:error:]
-[VideoConference(PrivateMethods) cancelCallID:error:]
session
date
-[VideoConference(PrivateMethods) defaultCleanupSession:]
-[VideoConference(PrivateMethods) threadSafeCleanupSession:]
-[VideoConference(PrivateMethods) cleanupSession:didRemoteCancel:]
-[VideoConference(PrivateMethods) setPauseAudio:]_block_invoke_2
-[VideoConference(PrivateMethods) setPauseAudio:]_block_invoke
-[VideoConference(SessionDelegate) session:didStart:connectionType:localInterfaceType:remoteInterfaceType:error:]
-[VideoConference(SessionDelegate) session:cleanUpWithDelay:error:]
-[VideoConference(SessionDelegate) session:didStopWithError:]_block_invoke
-[VideoConference(SessionDelegate) session:didReceiveARPLData:fromCallID:]
-[VideoConference(SessionDelegate) session:didReceiveData:messageType:withCallID:]
-[VideoConference(SessionDelegate) session:initiateRelayRequest:]
-[VideoConference(SessionDelegate) session:sendRelayResponse:]
Audio is already running
Stopping audio session but session wasn't started
-[VideoConference(NATDelegate) triggerInterfaceChange]
-[VideoConference(NATDelegate) NATTypeDictionaryUpdated:]
NATTypeDictionaryUpdated
-[VideoConference(NATDelegate) NATTypeDictionaryUpdated:]_block_invoke
-[VCRateControlAlgorithmBase checkPaused]
Pause rate control algorithm
Resume rate control algorithm
-[VCRateControlAlgorithmBase configure:restartRequired:]
-[VCRateControlAlgorithmBase doRateControlWithStatistics:]
LossEventRampDown update bandwidth limit=%u, confidence=%u, diff=%d
LossEventRampUp is blocked due to continuousTargetBitrate=%u, currentTargetBitrate=%u, nextTargetBitrate=%u, bandwidthLimit=%u, confidence=%u
LossEventRampDown no use and tried ramped down with badTrendCount=%d, nullify lossEventRampDown RTT=%f, avgPLR=%f, previous avgPLR=%f, PLRThreshold=%f
LossEventRampDown start ramping down with RTT=%f, avgPLR=%f, PLRThreshold=%f, ratio=%f
LossEventRampDown doesn't seem to stabilized yet with RTT=%f, avgPLR=%f, previousAvgPLR=%f, PLRThreshold=%f, badTrendCount=%d, PLR trend is going %s, %s improvement
Down
LossEventRampDown ramping down may be too aggressive with RTT=%f, avgPLR=%f, PLRThreshold=%f
confidence
hasSpaceAfter
text
transportSessionLegacyOptionNonCellularCandidateTimeout
enableRelay
-[VCTransportSessionLegacy start]_block_invoke
/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCTransportSessionLegacy.m
Could not connect
connection check returned error
-[VCTransportSessionLegacy startConnectionWithBlob:useRelay:isInitialRelay:error:]
-[VCTransportSessionLegacy setForceRelay]
-[VCTransportSessionLegacy processRelayRequestResponse:didOriginateRequest:]
-[VCTransportSessionLegacy processRelayRequestResponse:didOriginateRequest:]_block_invoke
v24@?0@"NSData"8@"NSError"16
-[VCTransportSessionLegacy processRelayUpdate:didOriginateRequest:]
-[VCTransportSessionLegacy processRelayUpdate:didOriginateRequest:]_block_invoke
-[VCTransportSessionLegacy createSecondaryRelayDispatchTimer:callID:callerRequired:]_block_invoke_2
-[VCTransportSessionLegacy destroySecondaryRelayDispatchTimer]
-[VCTransportSessionLegacy setupPendingSecondaryRelayWithNewPrimary:]_block_invoke
-[VCTransportSessionLegacy notifyDelegateToCancelRelay]
-[VCTransportSessionLegacy setupSecondaryRelayForCall:callerRequired:]
-[VCTransportSessionLegacy setupInitialSecondaryRelayWithCallbackRelayFlag:callID:connectionId:]_block_invoke
-[VCTransportSessionLegacy initiateRelayRequest]
-[VCTransportSessionLegacy initiateRelayRequest]_block_invoke
-[VCTransportSessionLegacy isHandoverSupported]
-[VCTransportSessionLegacy networkStateDidChange]_block_invoke
-[VCTransportSessionLegacy handleNewCandidates:version:]
-[VCTransportSessionLegacy processRemoteIPChange:]
-[VCTransportSessionLegacy connectionResultCallback:didReceiveICEPacket:didUseRelay:secretKey:skeResult:]
-[VCTransportSessionLegacy handleExchangedKey:result:]
Media Insecure
Optimized SKE failed
-[VCTransportSessionLegacy connectionCallback:isInitialConnection:]
Creating TCPTunnel Client failed.
Error was encountered
-[VCTransportSessionLegacy createTCPTunnelForParticipantID:relayDictionary:didOriginateRequest:relayType:error:]_block_invoke_2
v16@?0@"NSMutableDictionary"8
v24@?0@"NSData"8@"NSString"16
-[VCTransportSessionLegacy resetLoopback]
-[VCTransportSessionLegacy setupLoopbackWithConnectionType:]
-[VCTransportSessionLegacy createInitiateRelayDictionaryForCall:primaryConnection:]
-[VCTransportSessionLegacy createRelayUpdateDictionary:]
-[VCTransportSessionLegacy connectionData:connectionDataSizeInBytes:shouldUseRelay:]
NATType
-[VCTransportSessionLegacy connectionDataUsingRelay:isInitialRelay:nonCellularCandidateTimeout:error:]
No local connection data
Check network settings.
-[VCTransportSessionLegacy generateConnectionData:forCallID:connectionDataSize:nonCellularCandidateTimeout:]
v36@?0^{tagCONNRESULT=IiiIiiSS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}IiiiiSiii^{tagCONNRESULT}i}8B16B20^{__CFData=}24i32
v20@?0@"NSData"8S16
v52@?0^{tagCANDIDATEPAIR={tagCANDIDATE=iiI[8C]SS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}I}{tagCANDIDATE=iiI[8C]SS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}I}iSS[8C]{tagIPPORT=i[16c](?=I[16C])S}Iiiiiiiii^{tagCANDIDATEPARIR}}8i16^i20^i28^i36^i44
v20@?0^{tagIPPORT=i[16c](?=I[16C])S}8B16
-[VCTransportSessionLegacy resetICETimeoutToLongTimeout]
-[VCTransportSessionLegacy isConnectedAndAllowAdditionalConnection]
AUIO
BBIO
RemoteIO
GenericOutput
%@ type=%s(%d) micFormat=%s, %u speakerFormat=%s, %u operatingRole=%d deviceRole=%d vpOperatingMode=%d vpEnableSpatialChat=%d audioRecording=%d enableDNNVAD=%d
VCMediaQueuePacketBundler_Create
VCMediaQueuePacketBundler_AddPacket
VCMediaQueuePacketBundler_SetMTU
VCMediaQueuePacketBundler_SetOneToOne
VCMediaQueuePacketBundler_BundlePackets
_VCMediaQueuePacketBundler_ReturnProcessedPackets
_VCMediaQueuePacketBundler_GetSizeOfHeaderWithBundledPackets
VCMediaQueuePacketBundlerClass
VCTextReceiver
-[VCTextReceiver initWithConfiguration:]
com.apple.avconference.textreceiver.rtprecvproc
-[VCTextReceiver dealloc]
-[VCTextReceiver start]
-[VCTextReceiver stop]
-[VCTextReceiver retrieveRTPPacket:]
-[VCTextReceiver receiverThreadCallback:]
-[VCTextReceiver processRTCPPacket]
-[VCTextReceiver isSupportedPayload:]
-[VCTextReceiver validateAndEnqueuePackets:]
-[VCTextReceiver parsePacket:]
-[VCTextReceiver didReceiveFrame:]
com.apple.AVConference.VideoConferenceManager.xpcCommandQueue
conferenceNoRemotePacketsTime
-[VideoConferenceManager videoConference:didReceiveARPLData:fromCallID:]
-[VideoConferenceManager createSIPWithPacketMultiplexMode:]
-[VideoConferenceManager startSIPWithPacketMultiplexMode:transportType:]
-[VideoConferenceManager isSIPHandleValid:]
-[VideoConferenceManager cleanupVTP]_block_invoke
-[VideoConferenceManager stopSIPWithTransportType:]
Closing SIP Handle
-[VideoConferenceManager stopSIPWithTransportType:]_block_invoke
-[VideoConferenceManager addVideoConference:]
-[VideoConferenceManager removeVideoConference:]
-[VideoConferenceManager pauseVideoConferences:]
-[VideoConferenceManager pauseVideoConferences:]_block_invoke_2
SIPCallback
CellConditionChangeCallback
VTPCallback
-[VCControlChannelTransaction initWithTransportSessionID:participantID:transactionID:transactionDelegate:]
-[VCControlChannelTransaction dealloc]
-[VCControlChannelTransaction flushTransaction]
-[VCControlChannelTransaction confirmedTransactionByParticipantID:sessionID:]
-[VCControlChannelTransaction sendReliableMessage:sessionID:participantID:timeout:useFastRetries:withOptions:]
+[VCControlChannelTransaction sendUnreliableMessage:sessionID:participantID:transactionID:transactionDelegate:withOptions:]
VTP_Initialize
forceDSCPTagging
com.apple.avconference.vtransport.recvproc
DisableWMM
fttc
VTP_Cleanup
VTP_SetCallback
VTP_SetSessionID
VTP_SetDTLS
VTP Transport Context
VTP Receive Proc
VTP_CopyPreferredSendQueue
VTP_SocketWithNWConnection
v24@?0^{tagVTRANSPORT=qqSSii^{OpaqueFigThread}B{_opaque_pthread_mutex_t=q[56c]}^?^v[1024i]{_opaque_pthread_mutex_t=q[56c]}{_opaque_pthread_mutex_t=q[56c]}[1024B]{_opaque_pthread_rwlock_t=q[192c]}^{tagVFDLIST}{_opaque_pthread_rwlock_t=q[192c]}^{tagVFDSETLIST}{_opaque_pthread_mutex_t=q[56c]}^{tagIFMAP}i^{tagVCMemoryPool}^{tagVFDRESULT}^{tagHANDLE}BB[924B][924^{__CFString}][924^{tagHANDLE}]BBiIC{_opaque_pthread_rwlock_t=q[192c]}^{__CFDictionary}^{tagVPKTLIST}IId{VTransportHealthStats=[2{_VTransportConnectionHealthStats=IIII}]{_VTransportDemuxPacketHealthStats=IIIII}{_VTransportTrafficClassHealthStats=III}dd}Iddi^{__CFAllocator}^{__CFAllocator}^{tagVCMemoryPool}}8^{tagVFDLIST=iiiiiiCCCBi^iiIIII{tagIPPORT=i[16c](?=I[16C])S}^{tagVPKTLIST}{_opaque_pthread_mutex_t=q[56c]}{_opaque_pthread_cond_t=q[40c]}ii[4C]{_opaque_pthread_mutex_t=q[56c]}{_opaque_pthread_cond_t=q[40c]}^{tagVFDLIST}^{tagHANDLE}B{?=i[12C]}{tagVCSourceDestinationInfo=i(?={?={tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{?=BS}}{?=ii{tagIPPORT=i[16c](?=I[16C])S}i}{?=I{?=cSCSC}B}{?=@})I^{tagVCSourceDestinationInfo}^v}}16
VTP_DuplicateVFD
VTP_SocketWithRealSocket
VTP_SocketForIDSWithFileDescriptor
VTP_SetPayloadList
%s %i,
VTP_SetSocketMode
VTP_SetPktType
VTP_AddPktType
VTP_RemovePktType
VTP_Getsockname
_VTP_SetSSRC
VTP_SetTransportSessionID
VTP_GetTransportSessionID
VTP_Setsockopt
VTP_SetSourceDestinationWithToken
VTP_SetSourceDestinationWithIPPort
VTP_Close
VTP_Bind
VTP_BindNew
VTP_Sendto
VTP_Send
ssize_t VTP_Send(int, const void *, size_t, int, VPKTFLAG *)
VTP_SendCompoundPacket
VTP_ReleasePacket
VTP_Recvfrom
VTP_SetAFRCRecvMode
VTP_SetAFRC
VTP_SetAFRCConnectionNumber
int VTP_SetAFRCConnectionNumber(int)
VTP_NotifyAFRCRxEstimate
VTP_RegisterPacketCallback
VTP_UnregisterPacketCallback
VTP_Select
VTP_GetSendRecvStats
VTP_SetCellularUniqueTag
VTP_SetPktTag
VTP_SetRTPSrc
VTP_SetNetworkLogLevel
VTP_NotifyRemoteNoRemotePacket
VTP_NotifySendFailed
VTP_SetClientRelayVFD
VTP_DetectNAT64Prefix
VTP_RegisterConnectionManagerWithCallID
int VTP_RegisterConnectionManagerWithCallID(VCConnectionManager *, uint32_t)
VTP_DeregisterConnectionManagerWithCallID
int VTP_DeregisterConnectionManagerWithCallID(uint32_t)
VTP_SendWithSourceDestinationInfo
Packet data is too big. length=%zu, trafficFlags=%d, mode=%d, expectedMaxLength=%d
VTP_IncrementTotalBytesSent
VTP_ScheduleReceiveForNWConnection_block_invoke
v24@?0^@8I16i20
VTP_GetPktType
VTPBlockBufferDataAllocator
_VTP_InitializeAllocators
VTPBlockBufferHeaderAllocator
_VTP_ReleasePacket
VTP_GetVFD
_VTP_SocketWithRealSocketFromFVDList
VTP_ReleaseVFD
VTP_CloseOneVFDList
_VTP_ReleaseSocket
FindConnectionResultByKey
SendOnePacketOnVFDList
PrepareOFTMAC
PrepareOFTCRC32
_VTP_HealthPrint
VTP_CreateSourceDestinationInfoListWithVFD
VCSourceDestinationInfo *VTP_CreateSourceDestinationInfoListWithVFD(int)
VTPRecvProc
_VTP_LogOSChannelInfoWithInterval
_VTP_LogOSChannelInfoToIDSDatagramChannel
reset:%d
,%d->%d
_VTP_LogOSChannelInfoWhenSelectTimeout
VTP_RecvAndProcessOnePacketFromSocket
recvfrom
VTP_RecvFromSocket
_VTP_AllocatePacketWithBufferFreeCallback
VTP_IFIndexToName
_VTP_ShrinkPacket
VTP_ProcessPacketType
ProcessOFTData
IsValidOFTMAC
_VTP_SetRTCPFBMediaSenderSSRC
VTP_UpdateReceivedBytes
void VTP_UpdateReceivedBytes(uint32_t, int, _Bool, _Bool, VCSourceDestinationInfo *, _Bool, int, _Bool)
VTP_RecvAndProcessPacketsFromDatagramChannel
VTP_DemuxPacketsToVFDList
VTP_PassHsk
VTP_PassPkt
VTP_BandwidthEstimationWithMediaPacket
AddOneVFDSETList
SetVFDSASrc
FindVFDByLocalIPPort
VTP_NAT64PrefixResolvedCallback
VTP_ReportTransmittedBytes
void VTP_ReportTransmittedBytes(UInt32, VCSourceDestinationInfo *, int, _Bool)
_VTP_SendOnePacketWithDatagramChannel
_VTP_UpdateIDSDatagramOptionWithChannelDataFormat
_VTP_SendCompoundPacketWithDatagramChannel
AVConferenceNWContext
_VTP_SendOnePacketWithNWConnection_block_invoke
v16@?0@"NSObject<OS_nw_error>"8
_VTP_HandleReceiveForNWConnection_block_invoke
B40@?0@"NSObject<OS_dispatch_data>"8Q16r^v24Q32
VTP_SendOnePacketWithSocket
ssize_t VTP_SendOnePacketWithSocket(int, int, IPPORT *, BOOL, const void *, size_t, int, VPKTFLAG *, int)
VTP_SendOnePacketWithIPPort
ssize_t VTP_SendOnePacketWithIPPort(IPPORT *, IPPORT *, IPBasedRelayInfo *, const void *, size_t, int, VPKTFLAG *)
v54@?0@"VCDatagramChannelIDS"8r^v16I24{?=cSCSC}28^{?=IQSCc[12S]CS{?=SSSSS}dQBQ[16C]BB}38@"NSError"46
VTP_SetIDSReadHandler_block_invoke
_VTP_ProcessDatagramOptions
VTP_SynchronizeParticipantGenerationCounter
void VTP_SynchronizeParticipantGenerationCounter(uint32_t, uint8_t)
_VTP_ProcessPacketForDirectIDSDataPath
_VTP_ProcessPacketForSharedIDSDataPath
-[VCBTNotificationMonitor registerBTNotificationHandler:]
-[VCBTNotificationMonitor unregisterBTNotificationHandler:]
com.apple.notifyd.matching
XPCEventName
_State
-[VCBTNotificationMonitor setupBTEventHandler]_block_invoke
com.apple.bluetooth.pairing
com.apple.bluetooth.outgoing-classic-connection-state
com.apple.bluetooth.settings.app-state
com.apple.bluetooth.outgoing-le-fast-scan-level
5GHz WLAN
2.4GHz WLAN
v16@?0@"NSObject<OS_xpc_object>"8
Notification
-[VCBTNotificationMonitor registerDarwinNotification:]
-[VCBTNotificationMonitor unregisterDarwinNotification:]
allowDynamicMaxBitrate
allowsContentsChangeWithAspectPreservation
audioSettings
videoSettings
screenSettings
userAgent
basebandCodec
basebandCodecSampleRate
captionsSettings
multiwayAudioStreams
blobVersion
multiwayVideoStream
mediaControlInfoVersion
faceTimeSettings
accessNetworkType
-[VCMediaNegotiationBlobV2VideoPayload(Utils) initWithPayload:encodeVideoRules:decodeVideoRules:videoParameterSupport:]
-[VCMediaNegotiationBlobV2VideoPayload(Utils) videoRulesWithBitmap:]
Payload=%@ Encode=[
%@%dx%d@%.0f
] Decode=[
 paramSet=[
-[VCMediaNegotiationBlobV2VideoPayload(Utils) printWithLogFile:prefix:]
+[VCMediaNegotiationBlobV2VideoPayload(Utils) payloadWithRTPPayload:]
+[VCMediaNegotiationBlobV2VideoPayload(Utils) rtpPayloadWithPayload:]
-[VCMediaNegotiationBlobV2VideoPayload(Utils) setupEncode:videoRules:]
ImageDescription
-[VCRateControlAlgorithmTelephony configure:restartRequired:]
-[VCRateControlAlgorithmTelephony doRateControlWithStatistics:]
-[VCRateControlAlgorithmTelephony doRateControlWithNWConnectionStatistics:]
-[VCRateControlAlgorithmTelephony runRateControlStateTransition]
-[VCRateControlAlgorithmTelephony printRateControlInfoToLogDump]
%8.3f/%04X:
%.4f
%.4f
%.4f
%.4f %c
RTT:%-4u
PLR:%4.2f@%.1f
RRx:%u
MBL:%d %u
%4u/%4u
 %4u:%4u/%4u  %4u:%4u/%4u  CS: %04X %04X %u BB: %3u
 UAT 
-[VCVideoTransmitterDefault initWithConfig:]
-[VCVideoTransmitterDefault setUpAspectRatios:]
-[VCVideoTransmitterDefault setUpAspectRatiosFromFeatureListString:]
minimumKeyFrameGenerationIntervalFaceTime
minKeyFrameGenerationInterval
-[VCRedundancyControlAlgorithmVideoMultiway updateRedundancyStrategyWithNetworkStatistics:]
-[VCRedundancyControlAlgorithmVideoMultiway updateRedundancyPercentage]
imageattr:%d
 [x=%d,
 [x=[%d:%d:%d],
y=%d,
y=[%d:%d:%d],
fps=%d
,i=1
,q=%.2f]
-[SDPMediaLine getVideoSendImages:]
-[SDPMediaLine getVideoRecvImages:]
priority
fps=
+[SDPMediaLine fillImageStruct:imageStruct:]
ftdisplayattr:resolution
-[SDPMediaLine videoDisplayAttribute:withHeight:]
rtcp-fb
rtcp
imageattr
%@=%@:%u%@
%@=%@:%@%@
%@=%@%@
VCSession
-[VCSession initWithIDSDestination:configurationDict:negotiationData:delegate:processId:isGKVoiceChat:]
com.apple.AVConference.vcSessionQueue
com.apple.AVConference.vcSessionNotificationQueue
EnableGFTDowngradeToOneToOne
Session init %s
%s(%p) Session init %s
controlChannelV2ForceFixedEncryptionLabel
Session dealloc %s
-[VCSession dealloc]
%s(%p) Session dealloc %s
-[VCSession setReportingConfig:]
useAggregatorMultiwayforU1
-[VCSession startDeallocTimer]
-[VCSession capabilities]
UseIDSOutOfDataPath
datagramChannelIDSDataPath
-[VCSession selectDataPath]
-[VCSession setupTransportSessionWithDestination:]
shared
direct
-[VCSession setState:]
Starting
Start Failed
Running
Stopping
idsDestination[%@] state[%s] localParticipantID[%@] remoteParticipants[%@]
stoppingParticipants[%@] startingParticipants[%@] initializingParticipants[%@]
-[VCSession mediaStateChangedForParticipant:]
twoway
-[VCSession generateKeyFrameWithReceivedMessage:forParticipant:]_block_invoke
VCSessionMessageStreamID
VCSessionMessageFIRType
VCSessionMesageStreamGroupID
-[VCSession dispatchedSetSharingEnabled:]
VCSPExpanseEnabled
-[VCSession setTransportSessionEventHandler]_block_invoke
VCSessionMessageTopicLinkConstrainesChanged
-[VCSession handlePrimaryConnectionChanged:]
-[VCSession dispatchedHandleActiveConnectionChange:]
VCPreferredInterfaceMediaUnrecoverableSignalKey
-[VCSession calculateExpectedTotalNetworkBitrateDownlink]
-[VCSession calculateExpectedTotalNetworkBitrateUplink]
-[VCSession vcSessionParticipant:audioEnabled:didSucceed:error:]_block_invoke
VCSessionMessageAudioEnabled
VCSessionMessageAudioDisabled
VCSessionMessageTopicAudioEnabledState
-[VCSession vcSessionParticipant:videoEnabled:didSucceed:error:]_block_invoke
VCSessionMessageVideoEnabled
VCSessionMessageVideoDisabled
VCSessionMessageTopicVideoEnabledStateb
-[VCSession vcSessionParticipant:screenEnabled:didSucceed:error:]_block_invoke
VCSessionMessageTopicFetchStreamGroupsState
-[VCSession vcSessionParticipant:audioPaused:didSucceed:error:]_block_invoke
VCSessionMessageAudioPaused
VCSessionMessageAudioUnpaused
VCSessionMessageTopicAudioPausedState
-[VCSession vcSessionParticipant:videoPaused:didSucceed:error:]_block_invoke
VCSessionMessageVideoPaused
VCSessionMessageVideoUnpaused
VCSessionMessageTopicVideoPausedState
-[VCSession vcSessionParticipant:didChangeMediaPriority:description:]_block_invoke
-[VCSession vcSessionParticipant:requestKeyFrameGenerationWithStreamID:streamGroupID:firType:]
VCSessionMessageTopicGenerateKeyFrame
VCSessionMessageVideoRedundancyRequested
VCSessionMessageVideoRedundancyDismissed
VCSessionMessageTopicVideoRedundancyState
-[VCSession vcSessionParticipantDidMediaDecryptionTimeOut:]_block_invoke
/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCSession.m
-[VCSession vcSessionParticipantDidMediaDecryptionTimeOutForMKMRecovery:]_block_invoke
SymptomReporterOptionalKeyParticipantID
-[VCSession vcSessionParticipantDidRemoteMediaStallTimeout:duration:]_block_invoke
-[VCSession vcSessionParticipant:oneToOneModeDidChange:]
-[VCSession vcSessionParticipant:mediaStateDidChange:forMediaType:didSucceed:error:]_block_invoke
-[VCSession rateController:targetBitrateDidChange:rateChangeCounter:]_block_invoke
-[VCSession updatePresentationInfo:]_block_invoke
-[VCSession applySpatialMetadata]
-[VCSession applySpatialMetadata]_block_invoke
VCSessionMessageTopicRateControlConfig
-[VCSession updateParticipantConfigurations:]_block_invoke
-[VCSession distributeBitrateAndOptInToStreamIDsWithSeamlessTransition:]
VCSPTargetBitrate
VCSPUUIDList
VCSPDownlinkBitrates
VCSPActiveStreamIDTuples
VCSCallEndReason
VCSCallEndDetailedReason
VCSErrorDomain
-[VCSession setSessionInfoSynchronizerErrorResponseCallback]_block_invoke
-[VCSession setSessionInfoSynchronizerPeerSubscribedStreamsCallback]_block_invoke
v16@?0@"NSArray"8
session_%@
-[VCSession setupSpatialAudio]
-[VCSession reserveAudioChannelForMediaType:spatialAudioSourceID:]
-[VCSession createMediaQueue]
v32@?0^v8d16I24i28
-[VCSession handleMediaQueueSizeExceedThresholdWithQueueSize:mediaQueueStreamId:type:]
-[VCSession setMediaQueuePeakBitrateWithTargetBitrate:]
maxParticipantCountSend30Fps
allowScreenToLimitCameraFrameRate
-[VCSession updateLocalVideoCaptureFrameRate]
v16@?0@"VCDatagramChannelIDS"8
-[VCSession detectSSRCCollisionWithRemoteMediaStream:remoteBlobCreationTime:resetNeeded:]
maxSN
-[VCSession handleEncryptionInfoEvent:]
-[VCSession handleMembershipChangeInfoEvent:]
-[VCSession messageMediaInitialStateToParticipant:]
-[VCSession broadcastInitialMediaState]
VCControlChannelV2
-[VCSession newEncryptionLabelWithLocalUUID:remoteUUID:]
-[VCSession composeControlChannelParticipantConfig:withRemoteParticipant:]
-[VCSession registerRemoteParticipantToSession:]
-[VCSession unregisterRemoteParticipantFromSession:]
VCSessionMessageSymptom
VCSessionMessageGroupID
-[VCSession sendSymptomsToRemoteParticipants:symptom:groupID:]_block_invoke
VCSessionMessageTopicSymptom
-[VCSession setupMultiwayABTesting]
-[VCSession handleEncryptionInfoChange:]_block_invoke
ConversationBaseDate
-[VCSession reportingSessionParticipantEvent:withParticipant:keyChangeReason:newMKI:withStreamID:]
LocSw
VCSOneToOneModeEnabled
VCSMode
VCSPAudioEnabled
VCSPVideoEnabled
VCSPScreenEnabled
VCSPIDSID
VCSPIsWebUser
VCSKeyChangeReason
VCSNewMKI
VCSPIsLocalParticipant
VCSPAudioPaused
VCSPVideoPaused
VCSPConnectionType
-[VCSession reportingSessionRemoteParticipantEvent:withParticipant:value:]
-[VCSession dispatchedAddParticipantWithConfig:]
-[VCSession configureRemoteParticipant:withConfig:]
-[VCSession dispatchedRemoveParticipant:]
Start called. oneToOneModeEnabled=%d sessionMode=%ld remoteParticipants=%s
-[VCSession dispatchedStart]
%s(%p) Start called. oneToOneModeEnabled=%d sessionMode=%ld remoteParticipants=%s
Stop called. error=%s, remoteParticipants=%s
-[VCSession dispatchedStopWithError:didRemoteCancel:]
%s(%p) Stop called. error=%s, remoteParticipants=%s
-[VCSession tearDown]
-[VCSession dispatchedUpdateConfiguration:]
-[VCSession dispatchedParticipant:didStart:error:]
-[VCSession remoteScreenAttributesDidChange:]_block_invoke
-[VCSession dispatchedParticipant:didStopWithError:]
VCSActiveStreamsList
 videoTxFrameRate=%3.1f,
[hostTime:%f/%f sampleTime:%u/%u (Audio/Video)]
-[VCSession generateReportDictionary:]
VCSVTxBR
VCSATxBR
VCSCTxBR
VCSTxBR
VCSInCanvasCounter
VCSVRxBR
VCSARxBR
VCSCRxBR
VCSRxBR
VCSVRxBRs
VCSARxBRs
VCSCRxBRs
CTxDb
CRxDb
CDupTxDb
CDupRxDb
CBudgTxDb
CBudgRxDb
WTxDb
WRxDb
PSSCTR
PSFCTR
iWiFi5GHz
-[VCSession registerReportingTask]_block_invoke
VCMediaQualityDegraded
VCMediaQualityRecovered
VCMediaQualityDegradedMessageTopic
serverPacketRetransmissionEnabledForVideo
EnableServerPacketRetransmissionForVideo
-[VCSession moments:shouldProcessRequest:recipientID:]_block_invoke
VCSessionMomentsStateMessageTopic
-[VCSession updateMomentsCapabillities:imageType:videoCodec:]_block_invoke
gonzo
_VCSession_ReportingConfigurationCallback
+[AVCScreenCapture capabilities]
-[AVCScreenCapture initWithDelegate:withConfig:]
com.apple.AVConference.screenCapture
vcScreenCaptureHeight
vcScreenCaptureWidth
vcScreenCaptureFramerate
vcScreenCaptureScreenDisplayID
vcScreenCaptureScreenIsWindowed
vcScreenCaptureScreenMachPort
vcScreenCaptureScreenUUID
vcScreenCaptureInitialize
-[AVCScreenCapture dealloc]
vcScreenCaptureTerminate
vcScreenCaptureStopReturn
vcScreenCaptureStartReturn
vcScreenCaptureServerDidDisconnect
-[AVCScreenCapture startCapture]
-[AVCScreenCapture stopCapture]
com.apple.AVConference.AudioIORelayControllerQueue
{ %@ relayType=%s(%u) relayIOType=%s(%u) }
-[VCAudioRelayIOController _cleanupDeadClients]
-[VCAudioRelayIOController registerClientIO:controllerIO:]
-[VCAudioRelayIOController unregisterClientIO:controllerIO:]
-[VCAudioRelayIOController handleTransitionPrepareToStarting]
-[VCAudioRelayIOController stateStartingWithControllerSettings:client:newState:]
-[VCAudioRelayIOController updateStateWithClient:]
-[VCAudioRelayIOController processEventQueue:clientList:]
-[VCAudioRelayIOController flushEventQueue:]
_VCAudioRelayIOController_ProcessEventQueue
PREPARE
STARTING
FaceTime
Safeview
ClientFacing
RemoteFacing
_VCAudioRelayIOController_RegisterClientIO
_VCAudioRelayIOController_UnregisterClientIO
-[VCSystemAudioCaptureSession initWithConfiguration:]
-[VCSystemAudioCaptureSession dealloc]
-[VCSystemAudioCaptureSession start]
-[VCSystemAudioCaptureSession stop]
-[VCSystemAudioCaptureSession createAudioBufferPool]
-[VCSystemAudioCaptureSession resetAudioBufferPool]
VCSystemAudioCaptureSession_pullAudioSamples
_VCSystemAudioCaptureSession_audioSink
VCAudioIOControllerIOState_GetControllerTimestamp
frameRate: %u, _keyFrameInterval: %u, payload: %d
status
Token (%d) Link (%d): %s <-> %s (%s, %s), priority %d, uplink bitrate cap (%u), downlink bitrate cap (%u), uplink audio only bitrate cap = (%u), uplink OneToOne bitrate cap = (%u), isLocalConstrained (%d), isRemoteConstrained (%d), isLocalExpensive (%d) isRemoteExpensive (%d) isLocalDelegated (%d) isRemoteDelegated (%d) isVirtualRelayLink (%d)
-[VCConnectionIDS isWifiToWifi]
-[VCConnectionIDS updateMaxConnectionMTU:]
-[VCConnectionIDS isOnSameInterfacesWithConnection:]
-[VCConnectionIDS isOnSameQRSessionWithConnection:]
-[VCConnectionIDS isOnSameInterfacesAndQRSessionWithConnection:]
VCConnectionIDSCellTechForRATType
VCConnectionIDSIsKnownRATType
UMTS
C2K1x
HSPA+
UTRAN
Wired
[ratio:%.2fx%.2f orientation:%s camera:%s switching:%s contentsRect:%.3fx%.3f@(%.3f,%.3f) videoSourceScreen:%s videoMirrored:%s framePresentationTime:%f scaleFactor:%f]
Portrait
PortraitUpsideDown
LandscapeLeft
LandscapeRight
Front
Back
ratio
orientation
camera
cameraSwitching
contentsRect
isVideoSourceScreen
videoMirrored
framePresentationTimeValue
framePresentationTimeTimeScale
scaleFactor
aspectRatio
-[VCRateControlAlgorithmStabilizedNOWRD configure:restartRequired:]
-[VCRateControlAlgorithmStabilizedNOWRD doRateControlWithStatistics:]
-[VCRateControlAlgorithmStabilizedNOWRD doRateControlWithVCRCStatistics:]
-[VCRateControlAlgorithmStabilizedNOWRD doRateControlWithNWStatistics:]
-[VCRateControlAlgorithmStabilizedNOWRD doRateControlWithBasebandStatistics:]
Disabling baseband adaptation due to FR2 RATType
Disable baseband adaptation due to cross traffic. Average baseband throughput %d is much larger than our actual bitrate %d
-[VCRateControlAlgorithmStabilizedNOWRD runRateControlStateTransition]
-[VCRateControlAlgorithmStabilizedNOWRD updateInternalStatistics:]
Ramp Up!!! Resume video first!
Ramp Up!!! Ramp up audio fraction first. Video is still stopped!
Congestion!!! Stop video!
[%u] Congestion due to baseband!!! New bitrate down to %u [slow:%f]
[%u] Congestion due to baseband!!! New audio fraction tier down to %u. Video stopped.
Possible network saturation detected with RTT:%f, minRTT:%f, PLR:%f, owrd:%f
BurstyLossRampDown RTT=%f, avgPLR=%f, PLRThreshold=%f, threshold=%d
Possible ramp down suppression with RTT:%.3f, minRTT:%.3f, bitrateThreshold:%u, suppressionFactor:%.3f, NOWRDAcc:%.3f
Still trying to flush baseband with flush counter %d. No further ramp up/down but possibly decrease audio fraction.
Flush counter: %d stuck for more than %d seconds. And baseband shows TxRate:%d, TxDelay:%f. Reset the flush counter!
Try to ramp down audio fraction with [flushCount:%d, BBAvgRate:%d]
Still trying to flush baseband with flush counter: %d. Stop ramp-up!
Hit the abnormal bad network condition. Start the abnormal bad network adaptation with softMaxTier=%u. RTT=%f, owrd=%f
The abnormal bad network condition is gone. Remove the softMaxTier and current maxTier=%u. RTT=%f, owrd=%f
[%u] Sending rate was limited for a long time, stabilizing the bitrate
[%u] VCRC rate stabilized since no mediaController. Collecting VCRC samples...
[%u] VCRC rate stabilized (TxTS %u >= %u FB). Collecting VCRC samples...
[%u] Collected %d VCRC samples (TxTS %u)
-[VCRateControlAlgorithmStabilizedNOWRD printRateControlInfoToLogDump]
%8.3f/%04X:
%.4f
%.4f
%.4f
%.4f %c
RTT:%-4u
PLR:%4.2f@%.1f
RRx:%u
MBL:%d %u
%4u/%4u
 %4u:%4u/%4u  %4u:%4u/%4u  CS: %04X %04X %u BB: %3u
%s UAT %u
%@: payload=%u secondary=%s sbr=%s samplesPerBlock=%u
com.apple.AVConference.VCTextTransmitter
VCTextTransmitter
-[VCTextTransmitter start]
-[VCTextTransmitter stop]
-[VCTextTransmitter sendText:]
-[VCTextTransmitter sendTextFrameWithRedundancy:marker:]
-[VCTextTransmitter updatePayloadHistory:timestamp:payloadType:payload:payloadLength:]
-[VCTextTransmitter startHeartbeat]
ReorderProbability
ReorderCorrelation
ReorderGap
-[VCEmulatedNetworkDoubleQueueReorder initWithPolicies:]
Invalid state %d!
-[VCEmulatedNetworkDoubleQueueReorder push:]
TransportLayer
tileIndex
streamGroupMode
streamGroupRedundancyMode
streamGroupRedundancyPercent
enableVideoPriority
-[VCSessionParticipantLocal initWithConfig:delegate:]
uuid:%@ (local)
-[VCSessionParticipantLocal createUplinkBandwidthAllocators]
-[VCSessionParticipantLocal processCachedParticipantData:]
uuid:%@ 
-[VCSessionParticipantLocal setupAudioStreamGroupWithStreamConfigs:negotiatorConfig:streamGroupConfiguration:]
-[VCSessionParticipantLocal setupCameraStreamGroupWithStreamConfigs:negotiatorConfig:streamGroupConfiguration:]
-[VCSessionParticipantLocal captureSourceIDFromStreamGroupConfig:]
-[VCSessionParticipantLocal setupStreamGroupWithStreamGroupConfig:negotiatorConfig:]
-[VCSessionParticipantLocal setupStreamGroupsWithConfig:negotiatorConfig:]
-[VCSessionParticipantLocal start]
-[VCSessionParticipantLocal dispatchedStartOneToOneStreams]
-[VCSessionParticipantLocal maxCaptureCameraFrameRate]
-[VCSessionParticipantLocal setUplinkBitrateCapCell:]
-[VCSessionParticipantLocal setUplinkBitrateCapWifi:]
-[VCSessionParticipantLocal reconfigureOneToOneAudioStream:error:]
%@. Unable to reconfigure _audioIO=%p in _state=%d
-[VCSessionParticipantLocal reconfigureAudioIOForVideoEnabled:error:]
-[VCSessionParticipantLocal applyVideoEnabledSetting:]
-[VCSessionParticipantLocal applyScreenEnabledSetting:]
-[VCSessionParticipantLocal updateVideoPaused:]
-[VCSessionParticipantLocal setCurrentVideoCaptureFrameRate:]_block_invoke
-[VCSessionParticipantLocal suspendStreamsOnOneToOneModeSwitch]_block_invoke
-[VCSessionParticipantLocal setRemoteParticipants:]_block_invoke
-[VCSessionParticipantLocal startMultiwayStreams]
/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCSessionParticipantLocal.m
v16@?0@"<VCSessionParticipantStreamDelegate>"8
-[VCSessionParticipantLocal setOneToOneModeEnabled:]_block_invoke
-[VCSessionParticipantLocal startSystemAudioCapture]
-[VCSessionParticipantLocal stopSystemAudioCapture]
-[VCSessionParticipantLocal updateMediaSettingsWithConfig:]_block_invoke
-[VCSessionParticipantLocal applyCachedMediaStreamsWithStreamConfigurations:mediaNegotiatorConfig:]
-[VCSessionParticipantLocal setupAudioStreamsWithStreamConfigurations:mediaNegotiatorConfig:streamGroupConfiguration:]
-[VCSessionParticipantLocal newAudioSendGroupConfigWithStreamGroupID:streamGroupConfiguration:]
-[VCSessionParticipantLocal setupVideoStreamsWithStreamConfiguration:streamGroupConfiguration:]
-[VCSessionParticipantLocal setupVideoMediaStreamsWithStreamGroupConfiguration:streamGroupConfig:streamGroupID:mediaType:]
-[VCSessionParticipantLocal setupAudioStreamsWithStreamConfiguration:streamGroupConfiguration:]
-[VCSessionParticipantLocal newStreamInfoWithVideoStreamWithConfiguration:streamGroupID:]
-[VCSessionParticipantLocal newStreamInfoWithAudioStreamWithConfiguration:streamToken:isMultiway:streamGroupID:]
-[VCSessionParticipantLocal newMediaNegotiatorAudioConfigurationForMediaType:]
+[VCSessionParticipantLocal negotiatorCipherSuite:fromMediaStreamConfig:]
-[VCSessionParticipantLocal newStreamGroupNegotiationConfigForStreamGroup:]
-[VCSessionParticipantLocal initializeStreamGroupsForLocalConfig:]
-[VCSessionParticipantLocal initializeOneToOneStreamGroup:forLocalConfig:]
-[VCSessionParticipantLocal initializeMediaNegotiator]
-[VCSessionParticipantLocal oneToOneVideoStreamRedundancyPercentage]
videoRedundancyPercentageMax
-[VCSessionParticipantLocal oneToOneVideoStreamRedundancyMode]
-[VCSessionParticipantLocal negotiateOneToOne:]
-[VCSessionParticipantLocal logRemoteParticipantInfo:]
-[VCSessionParticipantLocal overrideVideoStreamConfigWithDefaults:streamGroupID:]
-[VCSessionParticipantLocal setupOneToOneVideoStreamWithConfig:streamGroupID:]
-[VCSessionParticipantLocal setupOneToOneAudioStreamWithConfig:streamGroupID:]
-[VCSessionParticipantLocal configureMultiwayStreamGroups]
-[VCSessionParticipantLocal configureWithOneToOneParticipantConfig:shouldConfigureGFTStreams:]_block_invoke
-[VCSessionParticipantLocal configureOneToOneVideoStreamsWithDeviceRole:]
-[VCSessionParticipantLocal configureOneToOneAudioStreamsWithDeviceRole:]
-[VCSessionParticipantLocal setupOneToOneEncryptionInfoWithConfiguration:]
-[VCSessionParticipantLocal newAudioStreamOneToOneConfigurationWithStreamGroupId:]
-[VCSessionParticipantLocal newVideoStreamOneToOneConfigurationWithStreamGroupId:]
-[VCSessionParticipantLocal updateWindowState:isLocal:windowRect:]
-[VCSessionParticipantLocal audioRuleCollectionWithAudioStreamConfig:]
-[VCSessionParticipantLocal addCallInfoBlobToParticipantInfo:]
-[VCSessionParticipantLocal createParticipantInfo]
-[VCSessionParticipantLocal newStreamInfoWithVideoStreamWithConfiguration:idsDestination:groupID:]
participantID:%@ streamGroupId=%s
-[VCSessionParticipantLocal newStreamInfoWithAudioStreamWithConfiguration:idsDestination:isMultiway:streamGroupID:]
-[VCSessionParticipantLocal setupEncodingModeWithVideoStreamConfig:]
simulateStreamFracture
-[VCSessionParticipantLocal checkSubscribedStreamsConsistency:]
-[VCSessionParticipantLocal setPeerSubscribedStreams:]_block_invoke
peerSubscribedStreams=
%s(%p) %s
localPublishedStreams=
+[VCSessionParticipantLocal updateBandwidthAllocator:activeStream:peerSubscribedStreams:streamGroup:]
subscribed to
unsubscribed from
-[VCSessionParticipantLocal enableRedundancy:]
-[VCSessionParticipantLocal updateUplinkTargetBitrate:rateChangeCounter:]_block_invoke
-[VCSessionParticipantLocal updateUplinkTargetBitrateForStreamGroups]_block_invoke
-[VCSessionParticipantLocal updateTargetBitrateOneToOne:rateChangeCounter:]_block_invoke
VCSessionPartipantLocal_OnVideoFrame
-[VCSessionParticipantLocal sourceFrameRateDidChange:]
B48@?0^{opaqueCMSampleBuffer=}8{?=qiIq}16r^{?=BBiBBiC}40
-[VCSessionParticipantLocal avConferencePreviewError:]
-[VCSessionParticipantLocal thermalLevelDidChange:]
-[VCSessionParticipantLocal cameraAvailabilityDidChange:]
VCSPFR
VCSPTLC
VCSPPLC
VIDSTATE
VIDDRTN
-[VCSessionParticipantLocal pushAudioSamples:]
spatialAudioDisabled
-[VCSessionParticipantLocal handleActiveConnectionChange:]_block_invoke
-[VCSessionParticipantLocal didReceiveReportPacket:arrivalNTPTime:]
-[VCSessionParticipantLocal didReceiveCustomReportPacket:arrivalNTPTime:]
-[VCSessionParticipantLocal streamGroup:didSuspendStreams:]
-[VCSessionBitrateArbiter rangeCheck:]
-[VCSessionBitrateArbiter bitrateForStoreBagKey:connectionType:currentBitrate:isExpensive:]
-[VCTransportSessionSocket initWithSocketDictionary:notificationHandler:eventHandler:handlerQueue:context:]
-[VCTransportSessionSocket initWithRTPSocket:RTCPSocket:notificationHandler:eventHandler:handlerQueue:context:]
-[VCTransportSessionSocket createVFD:realSocket:sockAddr:length:isUsable:]
-[VCTransportSessionSocket updateTransportStream:]
-[VCTransportSessionSocket connectSocket:remoteAddress:storage:]
-[VCTransportSessionSocket setRemoteAddress:remoteRTCPPort:]
-[VCTransportSessionSocket configureParamatersForStreamType:socket:packetType:remoteIP:remoteIPLength:]
-[VCTransportSessionSocket createAndConfigureVFDForSocket:packetType:remoteIP:remoteIPLength:vfd:]
-[VCTransportSessionSocket createVFD:forStreamType:]
-[VCTransportSessionSocket start]
-[VCTransportSessionSocket initializeInterfaceTypeWithSocket:]
-[VCTransportSessionSocket initializeNetworkInfoWithSocket:]
VCPerfTimingUtilsLog
RTCPRemoteSSRC
RTCPLocalSSRC
_VCPacketFilterRTCPFinalize
_VCPacketFilterRTCPCopyProperty
_VCPacketFilterRTCPSetProperty
VCAudioIO
+[VCAudioIO defaultControllerForAudioType:forDirection:forOperatingMode:]
+[VCAudioIO controllerForDeviceRole:audioType:direction:operatingMode:streamInputID:streamToken:networkClockID:]
-[VCAudioIO initWithConfiguration:]
-[VCAudioIO reconfigureWithOperatingMode:deviceRole:direction:streamInputID:streamToken:allowAudioRecording:networkClockID:channelIndex:]
-[VCAudioIO forceCleanup]
-[VCAudioIO setFarEndVersionInfo:]
-[VCAudioIO setMuted:]
-[VCAudioIO setDirection:]
-[VCAudioIO setSpatialAudioDisabled:]
-[VCAudioIO createConverterForSource:error:]
source
sink
-[VCAudioIO didStart:error:]
-[VCAudioIO didStop:error:]
-[VCAudioIO didStop:error:]_block_invoke
-[VCAudioIO controllerFormatChanged:]
-[VCAudioIO didSuspend]
-[VCAudioIO didResume]
-[VCAudioIO didServerDie]
-[VCAudioIO startWithCompletionHandler:]
state
-[VCAudioIO start]_block_invoke
-[VCAudioIO start]
start timeout
-[VCAudioIO stopWithCompletionHandlerInternal:]
-[VCAudioIO stopWithCompletionHandler:]
-[VCAudioIO stop]_block_invoke
-[VCAudioIO stop]
_VCAudioIO_ConvertSourceSamples
-[VCStatisticsCollectorQueue dealloc]
-[VCStatisticsCollectorQueue start]
com.apple.AVConference.VCRateControlStatisticsProc
-[VCStatisticsCollectorQueue stop]
VCStatisticsCollectorQueue_AddStatisticsMessage
VCStatisticsCollectorQueue_DrainAndProcessAllStatistics
VCStatisticsCollectorQueue_FlushAllStatistics
_VCStatisticsCollectorQueue_Enqueue
_VCStatisticsCollectorQueue_ShouldFlushOldMessages
_VCStatisticsCollectorQueue_Dequeue
VCTimescalePSOLA_Accelerate
_VCTimescalePSOLA_CheckQualityAndAccelerate
-[VCAudioCaptionsBufferInfo initWithStreamToken:format:bufferLength:]
%@<%p> streamToken=%ld priority=%d
-[VCAudioCaptionsBufferInfoCollection initWithBufferLength:]
com.apple.VCAudioCaptionsBufferInfoCollection.stateQueue
%@<%p> bufferInfos=%@
v32@?0@"VCAudioCaptionsBufferInfo"8Q16^B24
-[VCPixelTransferSession init]
options
poolSize
AVCStreamInput
-[AVCStreamInput initWithDelegate:delegateQueue:format:options:error:]
AVCInputStream
mediaType=%s subtype=%s
 dimensions=%dx%d
 audioStreamBasicDescription=%s
-[AVCStreamInput processOptions:]
-[AVCStreamInput processFormat:]
-[AVCStreamInput setupDelegate:delegateQueue:]
%s.%@.delegate_queue
%s.%@.connection_queue
-[AVCStreamInput setupXPCQueue]
-[AVCStreamInput newRemoteQueueWithServerPid:]
-[AVCStreamInput setupXPCConnection]
-[AVCStreamInput dealloc]
-[AVCStreamInput createAndAddRemoteQueueToXPCDictionary:]
-[AVCStreamInput initializeServerSideInputStream]
-[AVCStreamInput didServerDie]
-[AVCStreamInput didServerDie]_block_invoke
-[AVCStreamInput didStart]_block_invoke
-[AVCStreamInput didStop]_block_invoke
-[AVCStreamInput didSuspend]_block_invoke
-[AVCStreamInput didResume]_block_invoke
VCStreamInputDidServerDie
v32@?0@"AVCStreamInput"8@"NSDictionary"16@"NSError"24
-[AVCStreamInput sendSampleBufferOverXPC:error:]_block_invoke_2
-[AVCStreamInput sendSampleBufferOverXPC:error:]_block_invoke
-[AVCStreamInput pushSampleBuffer:error:]
%@(%p) streamInputID=%ld
_AVCStreamInput_PrintSampleBufferDetails
avcKeyRTPSocket
avcKeyRTCPSocket
avcKeySharedSocket
avcKeySourcePort
avcKeySupportedCodecs
avcKeySupportedAudioCodecs
avcKeySupportedVideoEncodingCodecs
avcKeySupportedVideoDecodingCodecs
avcKeySupportedVideoEncodingResolutions
avcKeySupportedVideoDecodingResolutions
avcKeyAudioPowerSpectrumTokenInput
avcKeyAudioPowerSpectrumTokenOutput
avcKeyRTPLocalSSRC
avcKeyVideoStreamDownlinkOptimalBitrate
avcKeyVideoStreamDownlinkOperatingBitrate
avcKeyVideoStreamDownlinkIsOperatingAtMaxBitrate
avcKeyVideoStreamDownlinkIsOperatingAtMinBitrate
avcKeyVideoStreamUplinkOperatingBitrate
avcKeySupportedMaxVideoDecodes
avcKeySessionSentBytes
avcKeySessionReceivedBytes
avcMediaStreamOptionCallID
avcMediaStreamOptionRemoteEndpointInfo
avcMediaStreamOptionRunInProcess
avcMediaStreamOptionClientPID
avcMediaStreamOptionIsOriginator
-[VCVideoStreamRateAdaptationFeedbackOnly initWithRTPHandle:reportingAgent:receiverStats:dumpID:reportingParentID:statisticsCollector:lowTimestampPrecision:]
-[VCVideoStreamRateAdaptationFeedbackOnly dealloc]
-[VCVideoStreamRateAdaptationFeedbackOnly startFeedbackSource]
-[VCVideoStreamRateAdaptationFeedbackOnly stopFeedbackSource]
-[VCVideoStreamRateAdaptationFeedbackOnly sendRateControlFeedback]
-[VCVideoStreamRateAdaptationFeedbackOnly updateRateControlInfoWithStatisticsMessage:]
-[VCEmulatedNetworkQueue initWithPolicies:]
-[VCEmulatedNetworkQueue write:]
-[VCEmulatedNetworkQueue enqueuePacket:]
-[VCEmulatedNetworkQueue runUntilTime:]
-[VCEmulatedNetworkQueue dequeuePacket:time:]
-[AVCCaptionsClient initWithDelegate:streamToken:]
-[AVCCaptionsClient connect]
vcCaptionsStreamToken
vcCaptionsClientInitialize
-[AVCCaptionsClient disconnect]
vcCaptionsClientUninitialize
vcCaptionsGetCaptionsEnabled
vcCaptionsGetCaptionsSupported
vcCaptionsSupported
vcCaptionsEnable
vcCaptionsSetCaptionsEnabled
vcCaptionsLocale
vcCaptionsSetCaptionsConfiguration
com.apple.avconference.VCScreenCaptureManager.xpc.commands
-[VCScreenCaptureManager init]
+[VCScreenCaptureManager sharedManager]
Screen Capture unknown error
vcScreenCaptureDidStartSuccess
vcScreenCaptureDidStartError
vcScreenCaptureDidStopSuccess
vcScreenCaptureDidStopError
-[VCStreamInput initWithStreamInputID:format:delegate:delegateQueue:remoteQueue:]
streamInputID=%@
%@.%@.%p
-[VCStreamInput dealloc]
MediaCaptureJitter
MediaCaptureBufferRate
-[VCStreamInput createRemoteReceiveQueue:]
v20@?0i8^{FigRemoteOperation=iiQ^{__CFString}(?={?=^{__CFDictionary}^{__CFDictionary}}{?=^v^{__IOSurface}^{__IOSurface}}{?=^{opaqueCMSampleBuffer}Q}{?=^{opaqueCMFormatDescription}}{?=q^{opaqueCMFormatDescription}})}12
_VCStreamInput_RemoteQueueOperationHandler
{ %@ clientFormat=%s operatingMode=%d deviceRole=%d audioRecording=%d, isPrewarmingClient=%d, sinkIO=%p, sourceIO=%p }
-[AVAudioDevice initWithDeviceID:]
%@: [%p] deviceName[%@] deviceID[%@] UID[%@] isPreferred[%d] _isLineIn[%d] inputAvailable[%d] outputAvailable[%d]
VPAUAggregateAudioDevice
-[AVAudioDevice copyStreamIDArray:length:]
-[AVAudioDevice deviceHasNonTapStreamsInStreamList:length:]
com.apple.audio.CoreAudio
-[AVAudioDevice isAggregableDevice]
-[AVAudioDevice isSomethingConnectedToJack]
-[AVInternalDeviceList dataSourceControlID]
Calling changeListener %s
-[AVInternalDeviceList notifyDeviceListChanged]_block_invoke_2
self=%s devices=%s
-[AVAudioDeviceList devices]
AVAudioDeviceList-devices
B32@?0@8Q16^B24
-[AVAudioDeviceList inputDevices]_block_invoke
self=%s inputDevices=%s
-[AVAudioDeviceList inputDevices]
AVAudioDeviceList-inputDevices
-[AVAudioDeviceList outputDevices]_block_invoke
self=%s outputDevices=%s
-[AVAudioDeviceList outputDevices]
AVAudioDeviceList-outputDevices
FixedPLR
LossPattern
QueueSize
-[VCEmulatedNetworkAlgorithmQueueLoss updateSettingsAtTime:impairments:]
-[VCEmulatedNetworkAlgorithmQueueLoss process:]
-[VCRedundancyControlAlgorithmAudioMultiWay processNWConnectionStatistics:]
-[VCRedundancyControlAlgorithmAudioMultiWay processRCNetworkStatistics:]
-[VCRedundancyControlAlgorithmAudioMultiWay updateRedundancyPercentageWithPLRThresholds:]
MediaTypeAudio
MediaTypeVideo
-[AVCSessionParticipant initWithParticipantID:data:delegate:queue:]
forceLoopback
vcSessionParticipantKeyUUID
%@[%p] idsParticipantID[%llu] _participantID[%@] _hasPendingChanges[%d] audioEnabled[%d] videoEnabled[%d] videoQuality[%d] visibilityIndex[%d] promienceIndex[%d] participantData[%@]
-[AVCSessionParticipant setMediaState:forMediaType:]
-[AVCSessionParticipant setMediaState:forMediaType:]_block_invoke
-[AVCSessionParticipant setAudioMuted:]_block_invoke
Invalid transition
-[AVCSessionParticipant setVolume:]_block_invoke
-[AVCSessionParticipant setVideoQuality:]_block_invoke
vcSessionSetVideoQuality
-[AVCSessionParticipant setVisibilityIndex:]_block_invoke
vcSessionSetVisibilityIndex
-[AVCSessionParticipant setProminenceIndex:]_block_invoke
vcSessionSetProminenceIndex
-[AVCSessionParticipant setVideoPositionalInfo:]
-[AVCSessionParticipant setVideoPositionalInfo:]_block_invoke
Screen doesn't support pause/resume
Unsupported media type pause/resume
v24@?0B8B12@"NSError"16
-[AVCSessionParticipant completeSetMediaState:forMediaType:didSucceed:error:]_block_invoke
%@[%@] 
v32@?0@"NSNumber"8@"NSNumber"16^B24
-[AVCSessionParticipant printMediaStates]
-[AVCSessionParticipant storeMediaState:forMediaType:]
-[AVCSessionParticipant setMediaType:enabled:mediaString:xpcMessageKey:xpcOperationKey:completionBlock:]
-[AVCSessionParticipant setMediaType:enabled:mediaString:xpcMessageKey:xpcOperationKey:completionBlock:]_block_invoke
-[AVCSessionParticipant setMediaType:paused:mediaString:xpcMessageKey:xpcOperationKey:completionBlock:]
/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/AVCSessionParticipant.m
-[AVCSessionParticipant setMediaType:paused:mediaString:xpcMessageKey:xpcOperationKey:completionBlock:]_block_invoke
-[AVCSessionParticipant spatialAudioSourceIDForMediaType:]
-[AVCSessionParticipant registerBlocksForNotifications]_block_invoke
-[AVCSessionParticipant registerBlocksForNotifications]_block_invoke_2
-[AVCSessionParticipant registerBlocksForNotifications]_block_invoke_3
com.apple.AVConference.AVCSessionParticipant.notificationQueue
-[AVCSessionParticipant setupMediaStates]
-[AVCSessionParticipant appendConfigurationToXPCConfiguration:]
+[AVCSessionParticipant archiveMediaStates:]
+[AVCSessionParticipant unarchiveMediaStatesWithData:]
AVCStreamOutput
-[AVCStreamOutput initWithStreamToken:delegate:queue:error:]
-[AVCStreamOutput dealloc]
com.apple.avconference.StreamOutput.internalReceiverQueue
-[AVCStreamOutput createReceiverQueue]
-[AVCStreamOutput setupXPCConnection]
streamOutputInitialize
streamOutputCachedNotifications
-[AVCStreamOutput remoteQueueOperationHandlerWithError:operation:]
-[AVCStreamOutput setupRemoteQueueWithSenderQueue:]
streamOutputSyncTimeOffset
streamOutputSetSyncTimeOffset
-[AVCStreamOutput didPause:]
-[AVCStreamOutput didStall:]
-[AVCStreamOutput didDegrade:]
-[AVCStreamOutput didSuspend:]
-[AVCStreamOutput didInvalidate]
-[AVCStreamOutput didReceiveSampleBuffer:]
-[AVCStreamOutput serviceHandlerDidDieWithArguments:error:]
conferenceIsVideoSuspended
-[AVCStreamOutput serviceHandlerDidReceiveFrameWithArguments:error:]
-[AVCStreamOutput registerBlocksForNotification]_block_invoke
streamOutputDidRemoteVideoPause
streamOutputDidRemoteMediaStall
streamOutputDidVideoDegrade
streamOutputDidVideoSuspend
streamOutputDidReleaseRemoteVideoQueue
streamOutputTerminate
_AVCStreamOutput_PrintSampleBufferDetails
_AVCStreamOutput_DisplayHealthInfo
VCAllocatorFirstCome_Create
_VCAllocatorFirstComeCallback_Alloc
Terminating due to high allocation count
_VCAllocatorFirstCome_AllocateInfo
-[AVCMediaStreamNegotiatorSettings operatingMode]
+[AVCMediaStreamNegotiatorSettings negotiatorSettingsForMode:deviceRole:options:errorString:]
Failed to init AVCMediaStreamNegotiatorSettings for mode=%ld
audioRules init failed
_audioConfiguration init failed
no _videoRuleCollections is created
Hardware does not support offerer device role
no _screenRuleCollections is created
no _hdrModesSupported ivar is created
-[AVCMediaStreamNegotiatorSettingsiPadCompanion initWithOptions:deviceRole:error:]
cannot get accessNetworkType from Init options
transportSessionEventInfoNewLink
transportSessionEventInfoIsFirstLink
transportSessionEventInfoDisconnectedLink
transportSessionEventInfoNewPrimary
transportSessionEventInfoOldPrimary
transportSessionEventInfoIsDuplicationEnabled
transportSessionEventInfoIsMediaUnrecoverableSignal
transportSessionEventInfoActiveConnection
transportSessionEventInfoPreferredInterfaceForDuplication
transportSessionEventInfoNotifyPeer
transportSessionEventPayloadKey_IsCellular
transportSessionEventInfoIsMediaQualityDegraded
com.apple.VideoConference.VCTransportSession.stateQueue
com.apple.VideoConference.VCTransportSession.notificationQueue
-[VCTransportSession start]
-[VCTransportSession stop]_block_invoke
-[VCTransportSession callEventHandlerWithEvent:info:]_block_invoke
-[VCTransportSession createTransportStream:withType:options:]
-[VCTransportSession createVFD:forStreamType:]
-[VCTransportSession deregisterNotificationForTransportStream:]
-[VCTransportSession setConnectionSelectionVersionWithLocalFrameworkVersion:remoteFrameworkVersion:]
+[VCTransportSession trafficClassForStreamType:]
+[VCTransportSession vtpPacketTypeForStreamType:]
-[VCTransportSession networkInterfaceType]
-[VCTransportSession networkMTU]
-[VCTransportSession isIPv6]
-[VCTransportSession createNWMonitor]
-[VCVideoTransmitterConfig init]
{ %s: videoResolution:%ld codecType:%ld framerate:%lu txMaxBitrate:%lu txMinBitrate:%lu keyFrameInterval:%lu recommendedMTU:%lu cvoExtensionID:%lu enableCVO:%d customWidth %lu, customHeight %lu, pixelFormat: %s}
VFExCnt
VIQDCnt
VSTSM
ChannelSequence
VIQMinHEL
VIQMaxHEL
VIQAHEL
-[AVCQoSMonitor initWithStreamToken:queue:error:]
-[AVCQoSMonitor dealloc]
-[AVCQoSMonitor setDelegate:]
-[AVCQoSMonitor requestQoSReport]
-[AVCQoSMonitor registerStreamToken:]
-[AVCQoSMonitor reportingIntervalForStreamToken:]
-[AVCQoSMonitor terminateConnection]
-[AVCQoSMonitor registerBlocksForNotifications]_block_invoke
/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/AVCQoSMonitor.m
Could not register QoS Monitor
Invalid Stream Token
+[VCVisualAlert start]
+[VCVisualAlert stop]
hasReceivedFirstFrame=%d isVideoPaused=%d isMediaStalled=%d isVideoDegraded=%d isVideoSuspended=%d localInterfaceType=%@ remoteInterfaceType=%@
com.apple.AVConference.VCRemoteVideoManager.XPCCommandQueue
-[VCRemoteVideoManager releaseQueueForStreamToken:]_block_invoke
-[VCRemoteVideoManager dispatchedDidReceiveFirstRemoteFrameForStreamToken:]
-[VCRemoteVideoManager dispatchedRemoteScreenAttributesDidChange:streamToken:]
-[VCRemoteVideoManager dispatchedRemoteVideoAttributesDidChange:streamToken:]
-[VCRemoteVideoManager dispatchedRemoteVideoDidPause:streamToken:]
-[VCRemoteVideoManager dispatchedRemoteMediaDidStall:streamToken:]
-[VCRemoteVideoManager dispatchedRemoteVideoDidDegrade:streamToken:]
-[VCRemoteVideoManager dispatchedRemoteVideoDidSuspend:streamToken:]
conferenceVisualRectangle
-[VCRemoteVideoManager contextIdForStreamTokenWithArguments:error:]
vcRemoteVideoSlotsForModes
VCRemoteVideoManager
-[VCRemoteVideoManager setLayerBoundsForStreamTokenWithArguments:error:]
-[VCRemoteVideoManager dispatchedNotifyCachedStateForStreamToken:]
-[VCRemoteVideoManager registerBlocksForService]_block_invoke
vcRemoteVideoInitializeRemoteVideoForStreamToken
vcRemoteVideoGetContextIdForStreamToken
vcRemoteVideoSetLayerBoundsForStreamToken
-[VCRemoteVideoManager registerBlocksForService]_block_invoke_3
vcRemoteVideoTerminate
vcRemoteVideoGetCachedNotifications
VCCellularAudioTap
-[VCCellularAudioTap initWithProcessId:delegate:delegateQueue:]
com.apple.VideoConference.VCCellularAudioTap.delegateQueue
com.apple.VideoConference.VCCellularAudioTap.stateQueue
-[VCCellularAudioTap addAudioTapForStreamToken:tapType:error:]_block_invoke
-[VCCellularAudioTap removeAudioTapForStreamToken:error:]_block_invoke
-[VCCellularAudioTap registerAudioTapForStreamToken:tapType:]
bins
SingleQueueImpairments
-[VCNetworkSimulator createDefaultPolicies]
-[VCNetworkSimulator loadPoliciesFromJsonFile]
-[VCNetworkSimulator setupNetwork]
com.apple.avconference.networkSimulator.networkproc
-[VCNetworkSimulator start]
SUCCEEDED
FAILED
-[VCNetworkSimulator stop]
networkProc
VCAudioStructs_PrintFrameFormat
DisableReplayProtection
VCCryptor_GetCipherSuite
VCCryptor_ComposeSFrameHeaderWithCounterAndMKI
VCCryptor_ParseSFrameHeader
_VCCryptor_ValidateAuthenticationTag
VCCryptor_Create
VCCryptor_Encrypt
VCCryptor_Decrypt
VCCryptorClass
_VCCryptor_ValidateCryptographyInputParameters
_VCCryptor_EnsureCryptorIsReady
_VCCryptor_EnsureCryptorIsReady_block_invoke
_VCCryptor_SetupCryptor
_VCCryptor_DeriveIV
canDisplayCaptions
senderLanguages
VCMediaStream
-[VCMediaStream defaultTransport]
-[VCMediaStream defaultStreamConfig]
-[VCMediaStream oneToOneStreamConfig]
-[VCMediaStream decryptionStatusChanged:]
UseTransportStreamsForSockets
-[VCMediaStream setupRTPWithSocketDictionary:error:]
-[VCMediaStream initializeTransportSetupInfoWithTransportSession:]
/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCMediaStream.m
Transport session creation failed
Invalid parameter
-[VCMediaStream handleTransportSessionEvent:info:]
-[VCMediaStream initializeTransportSetupInfoWithRTPSocket:RTCPSocket:]
-[VCMediaStream initializeTransportSessionWithRTPNWConnectionID:rtcpNWConnectionID:error:]
vcMediaStreamConnectionClientID
vcMediaStreamRTCPConnectionClientID
connectionID should not be nil
UseTransportStreamsForNW
-[VCMediaStream setupRTPWithNWConnection:error:]
Unable to retrieve NWConnection for clientID '%@'
No NWConnection matching clientID found
-[VCMediaStream dupNWConnectionBackingSocket:]
-[VCMediaStream setupNWConnectionWithID:]
-[VCMediaStream setupNWConnectionWithID:]_block_invoke
-[VCMediaStream setupCallbacksWithNWConnectionMonitor:]
vcMediaStreamDestID
vcMediaStreamSourceIP
No IDS destination or IP Address specified
UseTransportStreamsForProxy
-[VCMediaStream setupRTPForIDS]
No IDS destination
UseTransportStreamsForIDS
-[VCMediaStream setupRTPWithIDSDestination:error:]
-[VCMediaStream initializeTransportSetupInfoWithIDSDestination:error:]_block_invoke
-[VCMediaStream initializeTransportSetupInfoWithIDSDestination:error:]
Could not start setup RTP
No IP Address specified
vcMediaStreamSourceInterfaceName
TransportType
Unique5GhzChannelCount
Unique2pt4GhzChannelCount
UniqueDFSChannelCount
InactiveSlotCount
-[VCMediaStream collectChannelSequenceMetrics:]
-[VCMediaStream setupMediaStream]
com.apple.AVConference.VCMediaStream.Notification
UseNWConnectionNotificationForMediaStream
-[VCMediaStream dealloc]
kVCMediaStreamStateStopped
kVCMediaStreamStateStarting
kVCMediaStreamStateRunning
kVCMediaStreamStateStopping
kVCMediaStreamStatePaused
-[VCMediaStream createRTPHandleWithStreamConfig:payloadType:localSSRC:]
-[VCMediaStream createTransportWithStreamConfig:ssrc:]
-[VCMediaStream registerMediaControlInfoGeneratorWithConfigs:]
-[VCMediaStream createLocalMediaControlInfoGeneratorWithType:version:]
-[VCMediaStream registerCallbacksForMediaControlInfoGenerator:forDirection:options:]
-[VCMediaStream unregisterMediaControlInfoGenerator]
VCMediaStreamFillMediaControlInfoCallback
VCMediaStreamProcessMediaControlInfoCallback
-[VCMediaStream handleEncryptionInfoChange:]
-[VCMediaStream resetDecryptionTimeout]
-[VCMediaStream updateRemoteAddressWithConfig:error:]
Stream configuration failed
Could not set remote address on transport session
-[VCMediaStream setStreamConfig:withError:]
setStreamConfig called while media stream is running
-[VCMediaStream start]_block_invoke
-[VCMediaStream start]
Time out
Media stream start time out
-[VCMediaStream startWithCompletionHandler:]
Start called while media stream is running or starting
-[VCMediaStream startWithCompletionHandler:]_block_invoke
-[VCMediaStream setState:]
-[VCMediaStream handleStartDidSucceed:withError:]
Unable to start media stream transport
Internal error
-[VCMediaStream stop]_block_invoke
-[VCMediaStream stop]
Media stream stop time out
-[VCMediaStream stopInternalWithHandler:]
-[VCMediaStream stopInternalWithHandler:]_block_invoke
-[VCMediaStream setPause:]_block_invoke
-[VCMediaStream setPause:]
Media stream pause time out
-[VCMediaStream getInvalidParamErrorForSetPause:didSucceed:]
Trying to set pause=%d while the media stream is in state=%d
-[VCMediaStream setPause:withCompletionHandler:]
-[VCMediaStream setPause:withCompletionHandler:]_block_invoke
-[VCMediaStream setPause:withCompletionHandler:]_block_invoke_2
vcMediaStreamCallID
vcMediaStreamClientPID
vcMediaStreamRemoteEndpointInfo
-[VCMediaStream setLocalParticipantInfo:networkSockets:withError:]
-[VCMediaStream setStreamDirection:]
-[VCMediaStream streamDirection]
-[VCMediaStream setRtcpEnabled:]
-[VCMediaStream setRtpTimeOutEnabled:]
-[VCMediaStream setRtcpTimeOutEnabled:]
-[VCMediaStream setDecryptionTimeOutEnabled:]
-[VCMediaStream setRtpTimeOutInterval:]
-[VCMediaStream setRtcpTimeOutInterval:]
-[VCMediaStream setDecryptionTimeOutInterval:]
-[VCMediaStream setRtcpSendInterval:]
-[VCMediaStream generateReceptionReportList:reportCount:]
-[VCMediaStream rtcpSendHeartbeat]
-[VCMediaStream startRTCPSendHeartbeat]
-[VCMediaStream stopRTCPSendHeartbeat]
-[VCMediaStream setStreamIDs:repairStreamIDs:]
-[VCMediaStream resetTimeoutHeartbeatWithRTPTimeout:rtcpTimeout:decryptionTimeout:currentTime:]
-[VCMediaStream checkRTPPacketTimeoutAgainstTime:lastReceivedPacketTime:]
-[VCMediaStream checkRTCPPacketTimeoutAgainstTime:lastReceivedPacketTime:]
-[VCMediaStream checkDecryptionTimeoutAgainstTime:decryptionErrorStartTime:]
-[VCMediaStream checkDecryptionTimeoutForMKMRecoveryAgainstTime:decryptionErrorStartTime:]
-[VCMediaStream timeoutHeartbeat]
-[VCMediaStream startTimeoutHeartbeat]
-[VCMediaStream stopTimeoutHeartbeat]
-[VCMediaStream onCallIDChanged]
-[VCMediaStream supportedPayloads]
-[VCMediaStream onConfigureStreamWithConfiguration:error:]
-[VCMediaStream onStartWithCompletionHandler:]
-[VCMediaStream onStopWithCompletionHandler:]
-[VCMediaStream onPauseWithCompletionHandler:]
-[VCMediaStream onResumeWithCompletionHandler:]
-[VCMediaStream onSendRTCPPacket]
-[VCMediaStream onRTPTimeout]
-[VCMediaStream onRTCPTimeout]
-[VCMediaStream lastReceivedRTPPacketTime]
-[VCMediaStream lastReceivedRTCPPacketTime]
-[VCMediaStream rtcpHeartbeatLeeway]
-[VCMediaStream collectRxChannelMetrics:interval:]
-[VCMediaStream collectRxChannelMetrics:]
-[VCMediaStream collectTxChannelMetrics:]
-[VCMediaStream handleActiveConnectionChange:]
-[VCMediaStream handleMediaCallbackNotification:inData:outData:]_block_invoke
-[VCMediaStream handleMediaCallbackNotification:inData:outData:]_block_invoke_2
-[VCMediaStream handleMediaCallbackNotification:inData:outData:]
Throttling_MediaQueue_AddPacket_ScheduleAndActiveProbing
Throttling_MediaQueue_SetAudioInterval
Throttling_MediaQueue_SetIsIPv6
Throttling_VideoTransmitterUtil_ForceFirstProbePktSize
Throttling
Throttling_AFRC_GetDefaults
HardCodeBWEstRate
HardCodeTxRate
ThrottlingSendLog
ThrottlingRecvLog
ThrottlingProbeSeqLog
RealTimeStats_Init
ProcessThrottledPktsWithNewAudioPkt
ProcessThrottledPktsWithTime
TagMPWithOpportunisticBWEProbeSeq
ScheduleReleasedPkts
CheckIfBoostNeeded
CalcBoostIncrease
AccelerateThrottlingQueue
SchedulePkt
-[VCVideoRuleCollectionsMoments init]
-[VCVideoRuleCollectionsMomentsEmbeded isSupportedDeviceClass]
-[VCVideoRuleCollectionsMomentsEmbeded isSupportedChipID]
dtlsHandshakeTimeout
DTLS_Create
DTLS_Cleanup
DTLS_Handshake
DTLS
No datagram context available
DTLS_UpdateHandshake
DTLS_IsConnected
DTLS_Read
DTLS_Write
-[WRMClient init]
com.apple.AVConference.WRMClientQueue
-[WRMClient initWithDelegate:]
-[WRMClient dealloc]
VCCreateVFDForIDS
VCBasebandNotificationParser_ParseNotification
-[VCVideoRuleCollectionsScreenSecondaryMac initWithHardwareSettings:]
-[VCVideoRuleCollectionsScreenSecondaryMac setupH264Rules]
appendSamples
AVCCaptions
-[AVCCaptionsToken initWithText:confidence:range:]
%@: confidence[%f] range[%@]
-[AVCCaptionsResult initWithCapacity:utteranceComplete:utteranceNumber:updateNumber:]
%@: tokens:[%@] utteranceCompleted[%d]
%@: locale[%@]
CellularUniqueTag
_VCPacketFilterBBNotificationFinalize
_VCPacketFilterBBNotificationCopyProperty
_VCPacketFilterBBNotificationSetProperty
-[VCImageResizingConverter initWithOutputWidth:outputHeight:formatType:]
forceScreenDimensionWidth
-[VCHardwareSettingsEmbedded _initializeScreenDimension]
forceScreenDimensionHeight
facetime_camera_sifr
-[VCHardwareSettingsEmbedded isCaptureSIFRPreferred]
forceDeviceClass
+[VCHardwareSettingsEmbedded deviceClass]
supportsMultiway720pStream
MaxMultiwayFramerate
-[VCHardwareSettingsEmbedded isRemoteCameraSenderSupported]
-[VCHardwareSettingsEmbedded isSecondDisplaySupportEnabled]
-[VCHardwareSettingsEmbedded isHEVC444DecodeSupported]
enableDiscreteSwitchSettingsForTesting
-[VCSwitchManager initializeLocalSwitches]
-[VCSwitchManager setupLocalAudioTestGroupSwitches]
-[VCSwitchManager setupLocalVideoTestGroupSwitches]
-[VCSwitchManager setupLocalNetworkTestGroupSwitches]
-[VCSwitchManager setupLocalRateControlTestGroupSwitches]
-[VCSwitchManager setupLocalDuplicationTestGroupSwitches]
-[VCSwitchManager updateDuplicationEnhancementSwitches]
%@[%p] LocalSwitches[%08X] RemoteSwitches[%08X] NegotiatedSwitches[%08X] preferRelayOverP2P[%d] alwaysOnAudioRedundancy[%d] highFec[%d] lowFpsVideo[%d] vplrFec[%d] fastMediaDuplication[%d] iRATRtp[%d] preWarmCell[%d] duplicateImportantPkts[%d] allowBurstyLossRampDown[%d] hevcWifiTiers[%d] viewpointCorrection[%d] heifHevcLivePhotos[%d] wifiLowTierRedundancy[%d] cellularLowTierRedundancy[%d] iRATMetrics[%d] fecHeaderV1[%d] updatedAFRCHeader[%d] secureMessaging[%d] disableSIP[%d] wifiAssistDuplication[%d] wifiAssistBudgetStatus[%d] wifiAssistStatusBar[%d] lowNetworkMode[%d] duplicationEnhancement[%d] videoJB[%d] iRATDuplication[%d], wrmRSSIThreshold[%d] mediaDrivenDuplication[%d] UseVideoJitterForVideoPlayoutEnabled[%d] UseRTTForFIRThrottlingEnabled[%d]
VCSecurityKeyHolder_CopyKeyManager
VCSecurityKeyHolder_Create
VCSecurityKeyHolder_CopyKeyMaterialForKeyIndex
VCSecurityKeyHolder_RegisterForKeyMaterialChangeNotification
VCSecurityKeyHolder_AssociateKeyIndex
VCSecurityKeyHolderClass
_VCSecurityKeyHolder_Finalize
_VCSecurityKeyHolder_KeyMaterialCallback
-[VCMediaNegotiationBlobV2StreamGroup(Utils) initWithStreamGroupConfig:defaultConfig:]
-[VCMediaNegotiationBlobV2StreamGroup(Utils) initWithStreamGroupConfig:]
-[VCMediaNegotiationBlobV2StreamGroup(Utils) getStreamGroupConfig:]
-[VCMediaNegotiationBlobV2StreamGroup(Utils) appendStreamsToStreamGroupConfig:streamGroupID:rtpSampleRates:]
[%lu] %@Stream Group: 
groupID='%s' mediaType='%s' subtype='%s'
 syncGroupID='%s'
Skipping (result=%x)
-[VCMediaNegotiationBlobV2StreamGroup(Utils) printWithLogFile:prefix:]
%@  
+[VCMediaNegotiationBlobV2StreamGroup(Utils) defaultsForStreamGroupCustom:]
-[VCMediaNegotiationBlobV2StreamGroup(Utils) setupStreamsWithGroupConfig:]
-[VCMediaNegotiationBlobV2StreamGroup(Utils) setupPayloadsWithGroupConfig:]
-[VCMediaNegotiationBlobV2StreamGroup(Utils) updatePayloadConfigsWithStreamGroupConfig:rtpSampleRates:]
SFRAME 80
SFRAME 32
RCCM3
VCDTMFToneGenerator_Reinit
VCDTMFToneGenerator_GenerateSamples
-[VCVideoRuleCollectionsRemoteCamera setupHEVCRules]
-[VCConnectionManagerIDS oneToOneBitrateCapForConnectionWithType:]
-[VCConnectionManagerIDS addConnection:]
-[VCConnectionManagerIDS reselectPrimaryConnection]
-[VCConnectionManagerIDS handleSecondaryConnectionRemoved]
-[VCConnectionManagerIDS removeConnection:]
-[VCConnectionManagerIDS optOutAllStreamsForNonPrimaryConnections]
-[VCConnectionManagerIDS setPreferredLocalInterfaceForDuplication:]
-[VCConnectionManagerIDS setPreferredRemoteInterfaceForDuplication:]
-[VCConnectionManagerIDS updateSessionStats:]
-[VCConnectionManagerIDS updateConnectionForDuplication]
lnkPrbRTTMeanDelta
lnkPrbPLRTierDelta
-[VCConnectionManagerIDS shouldReplaceConnection:withConnection:]
-[VCConnectionManagerIDS addConnectionToConnectionArray:]
-[VCConnectionManagerIDS sourceDestinationInfo:isSourceOnCellular:isSourceIPv6:]
-[VCConnectionManagerIDS reportConnection:isInitialConnection:]
QRSAK
QRSAP
QRSUN
-[VCConnectionManagerIDS didUpdateLinkPreferenceOrder:]
Stream: KeyInterval=%d, framerate=%d, weightFactor:%d
 => FramesPerPeriod:%d FramePosition:%d
mediaType=%@ 
-[VCSessionMediaTypeSettings initWithMediaType:]
mediaType=%@ mediaState=%@
streamGroupIDs
-[VCMediaStreamSendGroup initWithConfig:]
-[VCMediaStreamSendGroup setStreamGroupMode:]_block_invoke
-[VCMediaStreamSendGroup setupStreamGroupWithConfig:]
-[VCMediaStreamSendGroup updateConfig:forMode:]_block_invoke
streamId=%hu quality=%u
-[VCMediaStreamSendGroup setActiveConnection:uplinkBitrateCap:activeMediaStreamIDs:mediaBitrates:rateChangeCounter:]_block_invoke
-[VCMediaStreamSendGroup activeStreamKeys]
-[VCMediaStreamSendGroup updateActiveStreamsCount:]
VCSignalErrorAt
VCAudioIssueDetector_Create
VCAudioIssueDetector_Finalize
VCAudioIssueDetector_Configure
VCAudioIssueDetector_UpdateConnectionType
VCAudioIssueDetector_Start
VCAudioIssueDetector_Stop
VCAudioIssueDetector_ProcessFrame
VCAudioIssueDetector_ReportRTPTraffic
VCAudioIssueDetector_ReportRTCPTraffic
VCAudioIssueDetector_GetReportingStats
landscapeAspectRatioX
landscapeAspectRatioY
portraitAspectRatioX
portraitAspectRatioY
mismatchedDisplayAspectRatioX
mismatchedDisplayAspectRatioY
videoRuleCollections
featureString
AVConferenceXPCClient
-[AVConferenceXPCClient init]
AVConferenceXPCClientReplyQueue
AVConferenceXPCClientConnectionQueue
-[AVConferenceXPCClient dealloc]
RESULTS
Failed to create XPC dictionary
k_%d
v_%d
TIMEOUT
-[AVConferenceXPCClient closeConnectionToServer]_block_invoke
com.apple.avconference.xpc
com.apple.videoconference.camera
-[AVConferenceXPCClient createConnectionToServer]_block_invoke
XPCARGUMENTS
service is nil
USERPERSISTENT
-[AVConferenceXPCClient sendMessageAsync:arguments:xpcArguments:reply:queue:replyLogLevel:]
-[AVConferenceXPCClient sendMessageAsync:arguments:xpcArguments:reply:queue:replyLogLevel:]_block_invoke
EXPECTSREPLY
-[AVConferenceXPCClient sendMessageSync:arguments:xpcArguments:]
-[AVConferenceXPCClient registerBlockForService:block:queue:eventLogLevel:]
-[AVConferenceXPCClient deregisterFromService:]
-[VCVideoRuleCollectionsCameraMac initWithHardwareSettings:]
-[VCVideoRuleCollectionsCameraMac computeEncodingScore]
-[VCVideoRuleCollectionsCameraMac setupH264WifiRules]
-[VCVideoRuleCollectionsCameraMac setUp1080pRules:]
-[VCVideoRuleCollectionsCameraMac setupRules]
-[VCVideoRuleCollectionsCameraMac _resetJ92EncodingRulesForCameraIsHD:isWVGA:is1080:]
-[VCVideoRuleCollectionsCameraMac resetEncodingRulesForCameraIsHD:isWVGA:is1080:]
com.apple.AVConference.VCStreamOutputManager.XPCCommandQueue
-[VCStreamOutputManager init]
com.apple.AVConference.VCStreamOutputManager.XPCNotificationQueue
-[VCStreamOutputManager dispatchedRegisterStreamOutputSource:forStreamToken:]
-[VCStreamOutputManager dispatchedDeregisterStreamOutputSourceForStreamToken:]
-[VCStreamOutputManager serviceHandlerStreamOutputInitializeWithArguments:error:]
VCStreamOutputManager
-[VCStreamOutputManager serviceHandlerStreamOutputNotifyCacheWithArguments:error:]
-[VCStreamOutputManager serviceHandlerStreamOutputTerminateWithArguments:error:]
-[VCStreamOutputManager serviceHandlerStreamOutputSetTimeSyncOffsetWithArguments:error:]
SecurityKey
SecuritySalt
SecurityKeyIndex
SecurityKeySetTime
SecurityLocallyGenerated
SecurityMaxSequenceNumber
VCSecurityKeyManagerNotification_SendKeyMaterialChanged
VCSecurityKeyManagerNotification_ReceiveKeyMaterialChanged
com.apple.AVConference.VCSecurityKeyManagerQueue
forceRemoteMKMMissing
keyMaterialNotUsedTimeout
-[VCSecurityKeyManager initWithDelegate:]
-[VCSecurityKeyManager dealloc]
instance=%p
-[VCSecurityKeyManager start]_block_invoke
started
failed to start
-[VCSecurityKeyManager stop]_block_invoke
-[VCSecurityKeyManager startTimers]
-[VCSecurityKeyManager startTimers]_block_invoke_2
-[VCSecurityKeyManager startTimers]_block_invoke
-[VCSecurityKeyManager stopTimers]
-[VCSecurityKeyManager addSecurityKeyMaterial:]
-[VCSecurityKeyManager addSecurityKeyMaterial:]_block_invoke
-[VCSecurityKeyManager getSendKeyMaterialWithIndex:]_block_invoke
-[VCSecurityKeyManager getRecvKeyMaterialWithIndex:]_block_invoke
-[VCSecurityKeyManager getLatestSendKeyMaterial]_block_invoke
-[VCSecurityKeyManager getLatestRecvKeyMaterial]_block_invoke
-[VCSecurityKeyManager pruneSendKeyMaterialWithDelay:]_block_invoke
-[VCSecurityKeyManager pruneRecvKeyMaterialWithDelay:]_block_invoke
-[VCSecurityKeyManager pruneAllExpiredKeys]
-[VCSecurityKeyManager schedulePruneTimer:]
-[VCSecurityKeyManager handlePruneTimerEventAndReschedule]
-[VCSecurityKeyManager scheduleEncryptionRollTimerWithDelay:]
-[VCSecurityKeyManager associateMKI:withClientID:]
-[VCSecurityKeyManager associateMKI:withClientID:]_block_invoke
cap2G
cap3G
capLTE
cap5G
capWifi
-[VCMediaNegotiator initWithLocalSettings:]
-[VCMediaNegotiator isCellular16x9EncodeCapable]
-[VCMediaNegotiator negotiationData]
Created invite media blob
mediablob_invite
-[VCMediaNegotiator processRemoteNegotiationData:]
mediablob_remote_invite_err
Received invite media blob
+[VCMediaNegotiator negotiationBlobFromData:]
mediablob_local_err
+[VCMediaNegotiator localConfigurationWithData:deviceRole:preferredAudioPayload:]
+[VCMediaNegotiator initializeLocalConfiguration:negotiationData:deviceRole:preferredAudioPayload:]
Cached invite media blob
-[VCMediaNegotiator newResponseBlob]
Created response media blob
mediablob_response
mediablob_response_remote
-[VCMediaNegotiator processResponseBlob:]
mediablob_remote_response_err
Received response media blob
+[VCMediaNegotiator negotiatedFeaturesStringWithLocalFeaturesString:remoteFeaturesString:]
+[VCMediaNegotiator validateMultiwayVideoStreamConfigurations:]
+[VCMediaNegotiator validateMultiwayAudioStreamConfigurations:]
+[VCMediaNegotiator dumpBlob:prefix:force:]
-[VCMediaNegotiator addBandwidthSettingsForMediaBlob:operatingMode:connectionType:maxBitrate:]
+[VCMediaNegotiator newDecompressedBlob:]
+[VCMediaNegotiator newCompressedBlob:]
-[VCMediaNegotiator negotiateAudioDTXPayload:]
-[VCMediaNegotiator negotiateAudioREDPayload:]
-[VCMediaNegotiator negotiateAudioSettings:]
-[VCMediaNegotiator setupAudioWithNegotiatedSettings:]
-[VCMediaNegotiator selectVideoFeatureString:selectedPayload:]
-[VCMediaNegotiator selectBestVideoRuleForTransport:payload:encodingType:localVideoRuleCollection:remoteVideoSettings:negotiatedVideoSettings:isScreen:]
-[VCMediaNegotiator processParameterSets:videoResults:]
-[VCMediaNegotiator negotiateVideoSettings:]
-[VCMediaNegotiator setupVideoWithNegotiatedSettings:]
-[VCMediaNegotiator negotiateScreenSettings:]
-[VCMediaNegotiator setupScreenWithNegotiatedSettings:]
-[VCMediaNegotiator negotiateFaceTimeSettings:]
-[VCMediaNegotiator setupMomentsForMediaBlob:]
-[VCMediaNegotiator negotiateMomentsWithMomentsSettings:]
-[VCMediaNegotiator negotiateMultiwayAudioStreams:]
-[VCMediaNegotiator negotiateMultiwayVideoStreams:]
-[VCMediaNegotiator newStreamGroupCodecConfigForPayload:]
-[VCMediaNegotiator newStreamConfigFromMultiwayAudioStream:]
-[VCMediaNegotiator newStreamConfigFromMultiwayVideoStream:]
zh-CN
en_US
zh_CN
-[VCMediaNegotiator negotiateCaptionsWithCaptionsSettings:]
+[VCMediaNegotiator streamGroupIDsWithMediaBlob:]
-[VCVideoCaptureConverter initWithConvertedFrameHandler:context:]
-[VCVideoCaptureConverter setSourceFramerate:]
-[VCVideoCaptureConverter setDestinationFramerate:]
-[VCVideoCaptureConverter updateThrottleRate]
-[VCVideoCaptureConverter avConferencePreviewError:]
+[VCStringUtils convertString:toFourcc:]
com.apple.VCConnectionHealthMonitor.delegateQueue
primaryConnHealthAllowedDelay
-[VCConnectionHealthMonitor init]
-[VCConnectionHealthMonitor processPeerStatsBlob:]
-[VCConnectionHealthMonitor updateStatsHistory]
VCConnectionHealthMonitor_ReceivePacket
VCConnectionHealthMonitor_ReceiveServerStats
-[VCSessionMediaStreamConfigurationProvider initWithStreamIDGenerator:sessionMode:supportedAudioRules:]
-[VCSessionMediaStreamConfigurationProvider initializeVideoStreams]
-[VCSessionMediaStreamConfigurationProvider initializeVideoStreamWithConfig:streamIndex:]
-[VCSessionMediaStreamConfigurationProvider initializeVideoStreamWithDefaults]
-[VCSessionMediaStreamConfigurationProvider initializeAudioStreamsWithSupportedRules:]
lowQualityAudioOnDemand
lowQualityVideoOnDemand
-[VCSessionMediaStreamConfigurationProvider initializeAudioStreamWithConfig:maxIDSStreamIDCount:supportedAudioRules:isLowestQualityAudio:]
-[VCSessionMediaStreamConfigurationProvider audioRuleCollectionWithAudioConfig:supportedAudioRules:]
%dx%d (VRA: %dx%d)
%.01f (%.01favg) FPS
_VCPixelBufferOverlay_renderText
SF Mono
-[VCVideoRuleCollectionsRemoteCameraMac initWithHardwareSettings:]
-[VCVideoRuleCollectionsRemoteCameraMac initSupportedPayloads]
VCFFTMeter_Create
FFTMeterLERPFilterAllocator
Microphone
Camera
Screen
SystemAudio
Siri
Captions
com.apple.VideoConference.VCVirtualTextDevice
-[VCVirtualTextDevice initWithSendDelegate:clientPid:delegate:delegateQueue:]
-[VCVirtualTextDevice start]
Invalid state
-[VCVirtualTextDevice stop]
-[VCVirtualTextDevice pause]
-[VCVirtualTextDevice resume]
-[VCVirtualTextDevice sendCharacter:]
-[VCVirtualTextDevice sendText:]
-[VCMediaStreamTransport updateLastGeneratedKeyMaterial]
-[VCMediaStreamTransport configureWithStreamConfig:setupInfo:reducedSizeRTCPPackets:hopByHopEncryptRTCPPackets:statisticsCollector:basebandCongestionDetector:error:]
/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCMediaStreamTransport.m
Call with empty remoteIP address
rtcpXrEnabled
Failed to setup SRTP encryption
setupSRTP failed with error %d
Invalid SecurityKeyHolder
VCCryptor_Create failed
Create SFrame cryptor failed
-[VCMediaStreamTransport setupSframeCryptorsWithError:]
-[VCMediaStreamTransport getCryptoSet:withMediaKey:]
-[VCMediaStreamTransport setupSRTP]
RTPSetSockets failed
-[VCMediaStreamTransport setupRTPWithTransportStreams]
RTPSetNWConnections failed
RTP set multiplex mode failed
RTP set IDS descriptor
RTPCreateSocketsRetryBind failed
Setup type not set
Invalid setup type
-[VCMediaStreamTransport lastReceivedRTCPPacketTime]
-[VCMediaStreamTransport handleEncryptionInfoChange:]
-[VCMediaStreamTransport generateReceptionReport:reportCount:]
-[VCMediaStreamTransport generateRTCPXRSummaryReport:reportCount:]
-[VCMediaStreamTransport generateRTCPXRVoIPMetricsReport:reportCount:]
-[VCMediaStreamTransport getRTCPReportNTPTimeMiddle32ForReportId:]
-[VCMediaStreamTransport getExtendedSequenceNumberForSequenceNumber:]
RTPRemoteSSRC
RTPPayloadList
_VCPacketFilterRTPFinalize
_VCPacketFilterRTPCopyProperty
_VCPacketFilterRTPSetProperty
timeoutQueueLabel-%d
AVConferenceXPCServer
-[VCXPCConnection createTimeoutTimer]
-[VCXPCConnection destroyTimeoutTimer]
+[VCXPCConnection selfTerminateDueToTimeout:]
AVConference %d %s
-[VCXPCConnection setPid:]
<VCXPCConnection connection: %p client pid: %d, context: %@>
-[VCXPCConnection setConnection:]
AVConferenceXPCServerIncomingQueue
AVConferenceXPCServerOutgoingQueue
AVConferenceXPCServerClientConnectionsQueue
pingServer
-[AVConferenceXPCServer init]_block_invoke
Ping
-[AVConferenceXPCServer sendMessageAsync:arguments:]
-[AVConferenceXPCServer sendMessageAsync:arguments:xpcArguments:context:]
-[AVConferenceXPCServer sendMessageAsync:arguments:context:]
-[AVConferenceXPCServer sendMessageAsync:arguments:toAllClientsWithContext:]
-[AVConferenceXPCServer sendMessageAsync:arguments:toAllClientsWithContext:]_block_invoke
-[AVConferenceXPCServer registerBlockForService:block:queue:eventLogLevel:]
-[AVConferenceXPCServer deregisterFromService:]
v32@?0@"NSObject"8@"NSObject"16^B24
-[AVConferenceXPCServer _xpc_start_listening_for_connections]
-[AVConferenceXPCServer(XPCManagement) _xpc_handle_incoming_request:]
com.apple.videoconference.allow-conferencing
CACHEAUTHTOKEN
-[AVConferenceXPCServer(XPCManagement) _xpc_handle_incoming_request:]_block_invoke
-[AVConferenceXPCServer(XPCManagement) _xpc_handle_incoming_request:]_block_invoke_2
-[AVConferenceXPCServer(XPCManagement) _xpc_add_connection_to_list:]_block_invoke
-[AVConferenceXPCServer(XPCManagement) _xpc_remove_connection_from_list:]_block_invoke
-[AVConferenceXPCServer(XPCManagement) _xpc_remove_connections_from_list]
_VCXPCConnection_timeoutHandlerFunc
-[VCVideoRuleCollectionsCamera setupH264CellularRules]
-[VCVideoRuleCollectionsCamera bestVideoRuleForEncodingType:aspectRatio:payload:]
-[VCVideoRuleCollectionsCamera getBestFrameWidth:frameHeight:frameRate:]
%s[%p] %s
-[VCVideoStreamConfig initWithClientDictionary:]
vcMediaStreamFramerate
vcMediaStreamTilesPerFrame
vcMediaStreamEnableCVO
vcMediaStreamCVOExtensionID
vcMediaStreamPixelFormat
vcMediaStreamHDRMode
+[VCVideoStreamConfig validateClientDictionary:]
+[VCVideoStreamConfig profileLevelIdForString:]
+[VCVideoStreamConfig profileLevelStringForId:]
tilesPerVideoFrame
vcMediaStreamRxPayloadType
vcMediaStreamTxPayloadType
vcMediaStreamTXMinBitrate
vcMediaStreamTXMaxBitrate
vcMediaStreamRXMinBitrate
vcMediaStreamRXMaxBitrate
vcMediaStreamKeyFrameInterval
vcMediaStreamRemoteVideoInitialOrientation
vcMediaStreamIsVideoProtected
vcMediaStreamVideoResolution
vcMediaStreamVideoStreamMode
vcMediaStreamDisplayID
vcMediaStreamIsltrpEnabled
vcMediaStreamCustomWidth
vcMediaStreamCustomHeight
vcRemoteDeviceName
vcMediaStreamRxCodecFeatureListString
vcMediaStreamTxCodecFeatureListString
vcMediaStreamProfileLevel
vcMediaStreamTransportProtocolType
vcMediaStreamAccessNetworkType
codecType=%ld, rtpPayload=%d, cipherSuite=%d
, pTime=%ld
, useInBandFEC
GNACK
, rtcp=[%@]
, encoderUsage=%u
VCSpatialAudioMetadata_Create
VCSpatialAudioMetadataAllocator
VCSpatialAudioMetadata_CreateEntry
VCSpatialAudioMetadata_ChannelIndex
VCSpatialAudioMetadata_SpatialAudioSourceID
VCSpatialAudioMetadata_UpdateGlobalInfo
VCSpatialAudioMetadata_UpdateOrientation
VCSpatialAudioMetadata_UpdatePositionalInfo
VCSpatialAudioMetadata_Serialize
VCSpatialAudioMetadata_SetNeedsRefresh
/System/Library/Frameworks/AudioToolbox.framework/libAudioDSP.dylib
gSpatialMetadataSPI
_VCSpatialAudioMetadata_SetEntryPropertyUInt32
_VCSpatialAudioMetadata_SetPropertyUInt32
_VCSpatialAudioMetadata_SetPropertyFloat32
_VCSpatialAudioMetadata_SetEntryPropertyFloat32
VCSpatialAudioMetadata
_VCSpatialAudioMetadata_Finalize
VCSpatialAudioMetadataEntry
_VCSpatialAudioMetadataEntry_Finalize
-[VCXPCClientShared init]
com.apple.AVConference.AVCSessionXPCClient.stateQueue
-[VCXPCClientShared registerBlockWithUUID:service:block:]_block_invoke
-[VCXPCClientShared registerBlockWithUUID:service:block:]_block_invoke_2
VCTimescalePSOLA_CheckforSignalCorrelation
Expand
Compress
_VCTimescalePSOLA_DownSampledCoarseCorrelation
_VCTimescalePSOLA_VadCheckForScaling
-[VCEffects setEffectsMode:]
-[AVCTestMonitor initWithDelegate:queue:]
-[AVCTestMonitor dealloc]
SessionStatsReportToken
-[AVCTestMonitor registerBlocksForNotifications]_block_invoke
InitialMemoryUsageInfo
MemoryUsageInfo
NetworkAgentRefCount
vcTestMonitorDidReportSessionStats
com.apple.AVConference.AVCTestMonitor.notificationQueue
vcTestMonitorRequestSessionStatsReport
-[AVCTestMonitor updateAudioInjectConfig:]
vcTestMonitorInjectAudioToneSwitch
vcTestMonitorInjectAudio
-[AVCTestMonitor forceNetworkCellular:]
vcTestMonitorForceNetworkCellSwitch
vcTestMonitorForceNetworkCell
-[AVCTestMonitor setEnableLoopbackInterface:]
vcTestMonitorSetEnableLoopbackValue
vcTestMonitorSetEnableLoopback
-[AVCTestMonitor setEmulatedRxPLR:]
vcTestMonitorSetEmulatedRxPLR
vcTestMonitorSetForcedTargetBitrate
vcTestMonitorSetForcedCapBitrate
vcTestMonitorEmulatedNetworkConfigPath
-[AVCTestMonitor setEnableAudioPowerSpectrumReport:]
vcTestMonitorSetEnableAudioPowerSpectrumReport
VCRemoteImageQueue_CreateSenderQueueWithPoolSize
VCRemoteImageQueue_CreateReceiverQueue
VCRemoteImageQueue_EnqueueFrame
VCRemoteImageQueue_EnqueueAttributes
VCRemoteImageQueue_ReleaseIOSurfaces
VCRemoteImageQueue_CreateQueueXPCObject
_VCRemoteImageQueue_Enqueue_block_invoke
C24@?0i8i12^{FigRemoteQueueMessage=^v^{__IOSurface}i}16
_VCRemoteImageQueue_Enqueue
_VCAudioDumpFileWrapper_Create
_VCAudioDumpFileWrapper_UpdateSamples
_VCAudioDumpFileWrapper_Update
VCAudioDump_Create
.caf
.rtpdump
VCAudioDump_Finalize
AVC-enc_in
AVC-enc_out
AVC-jbm_in
AVC-dec_in
AVC-dec_out
none
amr_nb_oa
amr_nb_be
amr_wb_oa
amr_wb_be
evs_nb_ch
evs_nb_hf
evs_wb_ch
evs_wb_hf
evs_swb_ch
evs_swb_hf
-[VCAudioTierPicker reconfigureTierPicker:]
{ VCAudioTierPickerConfig: mode=%d headerSize=%lu usingCellular=%d isUseCaseWatchContinuity=%d defaultMaxCap=%lu alwaysOnAudioRedundancyEnabled=%d cellularAllowRedLowBitratesEnabled=%d wifiAllowRedLowBitratesEnabled=%d supportedAudioPayloadConfigs=(%@) supportedPacketsPerBundle=(%@) supportedRedNumPayloads=(%@) }
-[VCAudioTierPicker logTierPickerConfig:]
-[VCAudioTierPicker setupTierPickerForConfig:]
-[VCAudioTierPicker setupAlwaysOnRedTiersForSupportedRed:usingCellular:]
+[VCAudioTierPicker selectHighestQualityAudioTiers:forBitrateLimits:isHardLimit:]
 new
-[VCAudioTierPicker printCreatedAudioTiers:]
Video
-[VCAudioTierPicker tierForNetworkBitrate:withLegacyDuplication:]
-[VCAudioTierPicker tierForAudioBitrate:withRedNumPayloads:]
rateControlAllowRedLowBitrate
VCAudioPlayerDTMF_Initialize
VCAudioPlayerDTMF_ShouldProcessDTMF
VCAudioPlayerDTMF_ProcessDTMF
VCAudioPlayerDTMFStateStopped
VCAudioPlayerDTMFStateStarting
VCAudioPlayerDTMFStatePlayingTone
VCAudioPlayerDTMFStatePlayingGap
_VCAudioPlayerDTMF_ShouldPurgeJitterQueue
_VCAudioPlayerDTMF_ProcessDTMFStatePlayingTone
_VCAudioPlayerDTMF_GetNextDTMFFrame
_VCAudioPlayerDTMF_ProcessNextDTMFFrameForCurrentEvent
_VCAudioPlayerDTMF_ParseDTMFEventPacket
_VCAudioPlayerDTMF_GenerateSamples
_VCAudioPlayerDTMF_ProcessDTMFStatePlayingGap
-[VCVideoRuleCollectionsCameraEmbedded initWithHardwareSettings:]
%@: screenSize[%dx%d] deviceClass[%ld] VCHardwareVideoEncoderType[%ld] useSoftFramerateSwitching[%d]
-[VCVideoRuleCollectionsCameraEmbedded hardwareConfigurationForPayload:transportType:]
-[VCVideoRuleCollectionsCameraEmbedded setupVideoRulesForPayload:transportType:encodingType:formatList:formatListCount:preferredFormat:supportsHighDef:]
-[VCVideoRuleCollectionsCameraEmbedded setupH264Rules]
-[VCVideoRuleCollectionsCameraEmbedded bitrateConfiguration]
-[VCVideoRuleCollectionsCameraEmbedded setupRules]
SymptomReporterOptionalKeyTerminationSource
Terminating %s (PID=%d) terminateSource=%@ reason=%@
VCTerminateProcess
-[VCControlChannelDialogV2 initWithSessionID:participantID:participantUUID:participantConfig:transactionDelegate:]
-[VCControlChannelDialogV2 allocEncryptedPayloadFromPayloadData:]
-[VCControlChannelDialogV2 copyDecryptedDataFromEncryptedPayload:]
-[VCControlChannelDialogV2 newDataFromMessage:topic:transactionID:isReliable:transactionDelegate:]
-[VCControlChannelDialogV2 processMessageData:participantID:topic:transactionID:messageStatus:isInternalMessage:]
-[VCControlChannelDialogV2 sendConfirmationToParticipantID:transactionID:sessionID:transactionDelegate:]
-[VCImageAttributeRules addRuleForVideoPayload:withDirection:width:height:frameRate:priority:interface:]
-[VCImageAttributeRules extractDimensionsForInterface:direction:]
-[VCVideoStreamRateController initWithDumpID:]
com.apple.VideoConference.VCVideoStreamRateController
-[VCVideoStreamRateController doRateControlWithTime:roundTripTime:packetLossRate:operatingBitrate:averageReceivedBitrate:]_block_invoke
-[VCVideoStreamRateController minTierIndex:]
-[VCVideoStreamRateController maxTierIndex:]
-[VCVideoStreamRateController setOperatingTierIndexWithBitrate:]
VCVideoRC
com.apple.VideoConference.AFRClog.VideoStream
STime
dTime/ETxTS
OWRD
NOWRD
NOWRDS
NOWRDA
PLR/FEC
BR/TR
MQIn: A/V
MQOut: A/V
ABRL
TxAT
MODE
TxSTATE
-[VCMediaNegotiationBlobV2SettingsU1(Utils) initWithU1Config:]
-[VCControlChannelMultiWay initWithTransportSessionID:reportingAgent:mode:]
com.apple.VideoConference.VCControlChannel.keyMaterialQueue
-[VCControlChannelMultiWay dealloc]
-[VCControlChannelMultiWay start]_block_invoke
-[VCControlChannelMultiWay stop]_block_invoke
+[VCControlChannelMultiWay allocPayoadDataFromVTPPacket:vpktFlags:channelDataFormat:]
-[VCControlChannelMultiWay remoteParticipantIDFromChannelDataFormat:]
-[VCControlChannelMultiWay messageReceived:participantInfo:]
-[VCControlChannelMultiWay copyDialogForParticipantID:]
-[VCControlChannelMultiWay sendReliableMessageAndWait:withTopic:participantID:timeout:withOptions:]
-[VCControlChannelMultiWay sendReliableMessage:withTopic:participantID:timeout:withOptions:completion:]
-[VCControlChannelMultiWay sendReliableMessage:withTopic:participantID:]
-[VCControlChannelMultiWay sendUnreliableMessage:withTopic:participantID:]
-[VCControlChannelMultiWay sendUnreliableMessage:withTopic:participantID:]_block_invoke
-[VCControlChannelMultiWay addActiveParticipant:participantUUID:withConfiguration:]
-[VCControlChannelMultiWay removeActiveParticipant:]
-[VCControlChannelMultiWay removeAllActiveParticipants]
-[VCControlChannelMultiWay updateTransactionIDWithKeyMaterial:]
-[VCControlChannelMultiWay lastUsedMKIBytes]
CCMinBytesSent
CCMaxBytesSent
CCRawBytesSent
CCMinBytesReceived
CCMaxBytesReceived
CCRawBytesReceived
receiveProc
com.apple.vccontrolchannel.receiveproc
-[VCMediaNegotiationBlobV2CameraSettingsU1(Utils) initWithSSRC:videoRuleCollections:screenSize:aspectRatioPortrait:aspectRatioLandscape:orientationMismatchAspectRatioLandscape:]
-[VCMediaNegotiationBlobV2CameraSettingsU1(Utils) addVideoRules:encodingType:payload:videoRuleCollections:]
-[VCMediaNegotiationBlobV2CameraSettingsU1(Utils) videoRuleCollections]
Camera settings (U+1): src=%08x AR=%fx%f,%fx%f XR=%fx%f,%fx%f
-[VCMediaNegotiationBlobV2CameraSettingsU1(Utils) printWithLogFile:prefix:screenSize:]
-[VCMediaNegotiationBlobV2CameraSettingsU1(Utils) setupVideoRuleCollection:]
TrafficClass
IsReceiveExternallyScheduled
PreferredSendQueue
IsIPv6
ReceiveHopLimitEnabled
TransportStreamDeactivated
VCTransportStream
VCTransportStreamCommonCopyProperty
VCTransportStreamCommonSetSendFailedHandler
VCTransportStreamCommonSetReceivedHandler
[VCTransportStream %p]
VCBlockBuffer_Copy
+[SnapshotTimer takeSnapshotForTask:]
-[SnapshotTimer checkinWithTimeout:forTask:]_block_invoke
tileX
tileY
tileZ
tileW
tileH
inCanvas
prom
visible
inCanvas=%u size=[%f;%f] center=[%.0f;%.0f;%.02f] prominanceIndex=%d
-[VCPositionalInfo serialize]
-[VCPositionalInfo unserialize:]
-[VCPositionalInfo setAvcPositionalInfo:]
-[VCTextJitterBuffer initWithConfiguration:]
-[VCTextJitterBuffer dealloc]
-[VCTextJitterBuffer start]
-[VCTextJitterBuffer stop]
-[VCTextJitterBuffer startHeartbeat]
-[VCTextJitterBuffer heartbeat]
-[VCVideoStreamReceiveGroup initWithConfig:]
-[VCVideoStreamReceiveGroup dealloc]
Failed to create video redundancy controller
-[VCVideoStreamReceiveGroup setupRedundancyController]
-[VCVideoStreamReceiveGroup isVideoExpected]
-[VCVideoStreamReceiveGroup updateShouldEnableFaceZoom]
-[VCVideoStreamReceiveGroup setSyncSource:]_block_invoke
-[VCVideoStreamReceiveGroup setActiveStreamIDs:]_block_invoke
-[VCVideoStreamReceiveGroup setVideoDegraded:]
VCSPVideoDegraded
-[VCVideoStreamReceiveGroup lastDisplayedFrameRTPTimestamp]_block_invoke
-[VCVideoStreamReceiveGroup setShouldEnableMLEnhance:]_block_invoke
-[VCVideoStreamReceiveGroup redundancyController:redundancyPercentageDidChange:]_block_invoke
Requesting
Dismissing
-[VCVideoStreamReceiveGroup vcMediaStream:didSwitchFromStreamID:toStreamID:]_block_invoke
-[VCVideoStreamReceiveGroup updateVideoExpected]
-[VCVideoStreamReceiveGroup setIsRemoteMediaStalled:]
-[VCVideoStreamReceiveGroup vcMediaStream:requestKeyFrameGenerationWithStreamID:firType:]
-[VCVideoStreamReceiveGroup checkForExtendedPoorConnection]
-[VCVideoStreamReceiveGroup collectAndLogChannelMetrics:]
-[VCPacketBundler initWithOperatingMode:bundlingScheme:packetHandler:packetHandlerContext:]
-[VCPacketBundler bundleAudioRFC3640:numInputBytes:payloadType:timestamp:]
VCPacketBundler_BundleAudio
-[VCPacketBundler _copyInputBytes:numInputBytes:payloadType:timestamp:]
-[VCPacketBundler bundleAudioLegacy:numInputBytes:payloadType:timestamp:]
VCAudioPacketBundler_UpdatePriority
VCPacketBundler_FlushPackets
VCPacketBundler_StoreAndEnqueueCdrxInfo
_VCPacketBundler_PrepareCdrxInfo
_VCPacketBundler_CleanupCDRXInfo
_VCPacketBundler_BundleAudioCDRX
_VCPacketBundler_UpdatePacketsPerBundle
videoDegradedThreshold
videoImprovedThreshold
videoMinFrameRate
shouldUseExitHysteresis
-[VCVideoQualityInfo init]
-[VCVideoQualityInfo updateWithCurrentFramerate:bitrate:time:]
-[VCVideoQualityInfo setVideoIsExpected:]
-[VCMediaNegotiatorAudioConfiguration addAudioPayload:isSecondary:]
AVCAudioStream
-[AVCAudioStream initWithLocalAddress:error:]
-[AVCAudioStream initWithLocalAddress:callID:error:]
-[AVCAudioStream initWithLocalAddress:isOriginator:error:]
-[AVCAudioStream initWithLocalAddress:isOriginator:callID:error:]
-[AVCAudioStream initWithNetworkSockets:isOriginator:error:]
-[AVCAudioStream initWithNetworkSockets:isOriginator:callID:error:]
-[AVCAudioStream initWithIDSDestination:isOriginator:error:]
-[AVCAudioStream initWithIDSDestination:isOriginator:callID:error:]
-[AVCAudioStream initWithRTPNWConnectionClientID:rtcpNWConnectionClientID:options:error:]
rtpClientID cannot not be nil
-[AVCAudioStream initWithLocalAddress:networkSockets:IDSDestination:rtpConnectionClientID:rtcpConnectionClientID:callID:options:error:]
com.apple.avconference.avcaudiostream.callback.queue
-[AVCAudioStream shouldRunInProcessWithOptions:]
-[AVCAudioStream validateInitializeConnectionResult:]
Missing result dictionary
Server died
IPC Timeout
Missing capabilities dictionary
Missing stream token
-[AVCAudioStream dealloc]
configuration=%s, error=%s
-[AVCAudioStream configure:error:]
/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/AVCAudioStream.m
-[AVCAudioStream start]
AVCAudioStream hasn't been configured
-[AVCAudioStream stop]
-[AVCAudioStream pause]
-[AVCAudioStream resume]
-[AVCAudioStream sendDTMFDigitString:withVolume:duration:interval:]
event
volume
duration
interval
-[AVCAudioStream startContinuousDTMFWithDigit:volume:]
-[AVCAudioStream startSynchronizeWithStream:]
-[AVCAudioStream setDirection:]
-[AVCAudioStream setRtcpEnabled:]
-[AVCAudioStream setRtpTimeOutEnabled:]
-[AVCAudioStream setRtcpTimeOutEnabled:]
-[AVCAudioStream setRtpTimeOutIntervalSec:]
-[AVCAudioStream setRtcpTimeOutIntervalSec:]
-[AVCAudioStream setRtcpSendIntervalSec:]
-[AVCAudioStream setVolume:]
-[AVCAudioStream setInputFrequencyMeteringEnabled:]
-[AVCAudioStream setOutputFrequencyMeteringEnabled:]
-[AVCAudioStream didInterruptionBeginHandler]
-[AVCAudioStream didInterruptionEndHandler]
-[AVCAudioStream registerBlocksForDelegateNotifications]_block_invoke
Failed to create VCAudioStream
-[AVCAudioStream setupAudioStreamInProcessWithClientArgs:networkSockets:error:]
Failed to create VCAudioStreamConfig from config dictionary.
-[AVCAudioStream configureInProcess:error:]
-[AVCAudioStream vcMediaStream:didStartStream:error:]
-[AVCAudioStream vcMediaStreamDidStop:]
-[AVCAudioStream vcMediaStream:didPauseStream:error:]
-[AVCAudioStream vcMediaStreamDidRTPTimeOut:]
-[AVCAudioStream vcMediaStreamDidRTCPTimeOut:]
-[AVCAudioStream vcMediaStream:didReceiveDTMFEventWithDigit:]
stream=%s, rtcpPackets=%s
-[AVCAudioStream vcMediaStream:didReceiveRTCPPackets:]
-[AVCAudioStream vcMediaStream:updateInputFrequencyLevel:]
-[AVCAudioStream vcMediaStream:updateOutputFrequencyLevel:]
-[AVCAudioStream vcMediaStreamServerDidDie:]
-[VCNWConnectionCongestionDetectorBaseband processNWConnectionNotification:]
NWConnection notification has a bad version=%d
-[VCEmulatedNetworkSingleQueue initWithPolicies:]
-[VCEmulatedNetworkSingleQueue push:]
com.apple.AVConference.vcSessionDownlinkBandwidthAllocatorClientQueue
VCSessionDownlinkBandwidthAllocator
-[VCSessionDownlinkBandwidthAllocator sortMediaEntries]
-[VCSessionDownlinkBandwidthAllocator distributeBitrate:]
-[VCSessionDownlinkBandwidthAllocator distributeBitrate:]_block_invoke
-[VCSessionDownlinkBandwidthAllocator updateSelectedMediaEntriesForClientWithUUID:]
VCSPActualBitrate
VCSPOptedInBitrate
VCSPActiveStreamID
VCSPOptedInStreamID
-[VCMockIDSDataChannelLinkContext init]
-[VCMockIDSDatagramChannel setupMockIDSDatagramChannelRequiresOptions:]
MOCKDatagramChannelPacketAllocator
enableMockDatagramChannelDoNotDropNack
mockDatagramChannelAddSourceParticipantIDOnFanOutPackets
mockDatagramChannelAddWrongParticipantIDOnFanOutPackets
-[VCMockIDSDatagramChannel initCreateSocketRequiresOptions:dataPath:]
com.apple.AVConference.VCMockIDSDatagramChannelQueue
com.apple.AVConference.VCMockIDSDatagramChannelRTXQueue
-[VCMockIDSDatagramChannel flushDatagramPacketsList]
-[VCMockIDSDatagramChannel signalUnderlyingFileDescriptor]
Trying to enqueue to invalidated VCMockIDSDatagramChannel
-[VCMockIDSDatagramChannel enqueueDatagramPacket:datagramSize:options:error:]
Failed to allocate packet
-[VCMockIDSDatagramChannel shouldReadPacket:]
-[VCMockIDSDatagramChannel isNACKPacket:length:]
-[VCMockIDSDatagramChannel readDatagramWithCompletionHandler:]
-[VCMockIDSDatagramChannel readDatagramsWithCompletionHandler:]
Trying to process datagrams using invalidated VCMockIDSDatagramChannel
-[VCMockIDSDatagramChannel processDatagramForDirectIDSDataPath:datagramSize:datagramOptions:error:]_block_invoke_2
-[VCMockIDSDatagramChannel processDatagramForDirectIDSDataPath:datagramSize:datagramOptions:error:]_block_invoke
v28@?0^v8I16^{?=IQSCc[12S]CS{?=SSSSS}dQBQ[16C]BB}20
-[VCMockIDSDatagramChannel invalidate]
-[VCMockIDSDatagramChannel start]
-[VCMockIDSDatagramChannel setChannelPreferences:]
Could not serialize provided metadata.
-[VCMockIDSDatagramChannel requestSessionInfoWithOptions:]
-[VCMockIDSDatagramChannel reportFirstPacketTimeForMKI:]
-[VCMockIDSDatagramChannel createSocket]
-[VCMockIDSDatagramChannel underlyingFileDescriptor]
-[VCMockIDSDatagramChannel drainUnderlyingFileDescriptor]
-[VCMockIDSDatagramChannel printDroppedPacketInfo:]
-[VCMockIDSDatagramChannel addMediaPacketToBuffer:length:datagramOptions:]
-[VCMockIDSDatagramChannel retrieveAndProcesOnePacket:seq:count:index:]
-[VCMockIDSDatagramChannel retrieveAndProcesOnePacket:seq:count:index:]_block_invoke_2
-[VCMockIDSDatagramChannel setUPlusOneMode:isInitiator:]
mockDatagramChannelIPPorts
vcDefaultMockDatagramChannelIPPortsKeyLocalIP
vcDefaultMockDatagramChannelIPPortsKeyLocalPort
vcDefaultMockDatagramChannelIPPortsKeyRemoteIP
vcDefaultMockDatagramChannelIPPortsKeyRemotePort
-[VCMockIDSDatagramChannelSocket initRequiresOptions:localIP:localPort:remoteIP:remotePort:]
-[VCMockIDSDatagramChannelSocket writeDatagram:datagramSize:]
-[VCMockIDSDatagramChannelSocket readyToRead]
VCMQSchBytes
VCMQSchHeaderBytes
VCMQSchPkts
VCMQSentBytes
VCMQSentHeaderBytes
VCMQSentPkts
VCMQUnsentPkts
VCMQSavedBytes
VCMQSavedPkts
VCMediaQueue
_VCMediaQueue_ReportingRegisterPeriodicTask_block_invoke
VCMQFlushPerStream
VCMQQSizePerStream
VCMQMaxQSizePerStream
VCMQPeakBR
VCMQMTU
VCMQStreamID
_VCMediaQueue_FreeMediaPacket
_VCMediaQueue_RegisterStream
_VCMediaQueue_SchedulePackets
_VCMediaQueue_SchedulePacketsWithLimitedBudget
_VCMediaQueue_ScheduleDirectSendQueuesAndReduceRemainingBudget
_VCMediaQueue_ScheduleThrottlingQueuesAndReduceRemainingBudget
_VCMediaQueue_SendAndFreePackets
_VCMediaQueue_PreAllocVCMediaPacketsInFreePool
_VCMediaQueue_CreateInternalQueue
_VCMediaQueue_DestroyInternalQueuePool
_VCMediaQueue_DestroyInternalQueues
%s: done destroying numberOfInternalQueues=%d
_VCMediaQueue_ResetStatistics
Stream registration with index=%d, mediaQueueStreamId=%u
%4.3f
%u/%u/%u/%u
%08X
%08X
%.3f
%u/%u
%u/%u
%u/%u
[InternalQueue]
%u/%u
.mqdump
com.apple.VideoConference.VCMediaQueuelog
STime
SchedulePolicy
ExpInterval
BudgetTuple
IDRBitmap
SendBitmap
PktLeft
WQSize
BundlePolicy
PktCount
NetworkOverhead
TotalSize
[InternalQueue]
Index
Type
StreamId
QSizeTuple
OldTS
PktSch
LastSchTS
ProbingSeq
VCMediaQueue_Create
disableMQPacketBundling
com.apple.AVConference.VCMediaQueueSendProc
VCMediaQueue_Start
VCMediaQueue_Stop
VCMediaQueue_AllocMediaPacket
VCMediaQueue_AddPacket
VCMediaQueue_FlushPacketsInStream
VCMediaQueue_SetPeakBitrate
VCMediaQueue_SetMTUBytes
VCMediaQueue_RetrieveAudioVideoRates
VCMediaQueue_SetOneToOne
VCMediaQueue_SetMediaQueueSizeThresholdExceededBlock
VCMediaQueue_ComputeOneToOneStatsWithPacketInfo
_VCMediaQueueFinalize
_VCMediaQueue_ResetLastIDRTimestamp
_VCMediaQueue_SerializeMediaControlInfoInOneToOneMediaPacket
_VCMediaQueue_UpdateStabilizationCounters
VCMediaQueueSendProc_block_invoke
i28@?0^{tagVCMediaPacket=iS^{OpaqueCMBlockBuffer}{tagVCIDSChannelDataFormat=[12S]CBSCBBQBBBS{?=SSSSS}BBBQBSBBB}i^vddBBBBIIIIISIIIiddBBBBBB^{tagVCMediaPacket}}8S16S20s24
_VCMediaQueue_FlushInternalQueueBeforeTimestamp
_VCMediaQueue_CheckQueueThresholdExceededForInternalQueue
_VCMediaQueue_RateStats_Init
_VCMediaQueue_RateStats_TrackMediaPacket
WiFiManager
CallInProgress
AVConferencePreview
-[AVConferencePreview setDelegate:]
responds
does NOT respond
-[AVConferencePreview didStartPreview]_block_invoke
didStartPreview
-[AVConferencePreview didPausePreview]_block_invoke
-[AVConferencePreview didStopPreview]_block_invoke
didStopPreview
-[AVConferencePreview didReceiveFirstPreviewFrameFromCameraUniqueID:]_block_invoke
-[AVConferencePreview didChangeLocalCameraUID:]_block_invoke
-[AVConferencePreview didChangeLocalVideoAttributes:]_block_invoke
-[AVConferencePreview didChangeLocalScreenAttributes:]_block_invoke
-[AVConferencePreview didReceiveErrorFromCameraUniqueID:error:]_block_invoke
-[AVConferencePreview didGetSnapshot:]_block_invoke
-[AVConferencePreview cameraDidBecomeAvailableForUniqueID:]_block_invoke
-[AVConferencePreview cameraDidBecomeInterruptedForForUniqueID:reason:]_block_invoke
-[AVConferencePreview cameraZoomAvailabilityDidChange:currentZoomFactor:maxZoomFactor:]_block_invoke
-[AVConferencePreview cameraCFramingAvailabilityDidChange:]_block_invoke
-[AVConferencePreview connectLayer:withSlot:]
-[AVConferencePreview registerBlocksForDelegateNotifications]_block_invoke
previewInitialize
localCameraUIDString
previewDidReceiveFirstFrame
previewCameraUIDChanged
previewDidStart
previewDidPause
previewDidStop
snapShotFrame
previewDidGetSnapShot
localVideoAttributes
previewDidLocalVideoAttributesChange
previewDidLocalScreenAttributesChange
previewDidReceiveCameraError
videoSlotNumber
videoSlotFacing
-[AVConferencePreview registerBlocksForDelegateNotifications]_block_invoke_5
previewDidLocalVideoSlotChange
previewCameraDidBecomeAvailable
previewInterruptionReason
previewCameraDidBecomeInterrupted
previewCameraZoomAvailabilty
previewCameraZoomMaxFactor
previewCameraZoomAvailablilty
previewCameraCinematicFraming
previewCameraCinematicFramingAvailablilty
previewState
updatePreviewState
-[AVConferencePreview dealloc]
-[AVConferencePreview startPreviewUnpausing:]
-[AVConferencePreview isPreviewRunning]
-[AVConferencePreview isCameraZoomAvailable]
-[AVConferencePreview currentZoomFactor]
-[AVConferencePreview maxZoomFactor]
-[AVConferencePreview setLocalCamera:]
-[AVConferencePreview setLocalCameraWithUID:]
-[AVConferencePreview setFollowSystemCameraEnabled:]
-[AVConferencePreview localCamera]
com.apple.avconference.DTMFEventHandler.queue
startTimestamp
endTimestamp
pauseCompleteTimestamp
-[DTMFEventHandler sendDTMFEvent:atTimestamp:withSampleRate:]_block_invoke
-[DTMFEventHandler sendingDTMFEventWithTimeStamp:interval:RTPHandle:]_block_invoke
channel
WiFiCopyCurrentNetworkInfoEx
/System/Library/PrivateFrameworks/CoreUtils.framework/CoreUtils
### Failed to Soft Link: /System/Library/PrivateFrameworks/CoreUtils.framework/CoreUtils
-[VCMediaNegotiationBlobV2GeneralInfo(Utils) initWithCreationTime:screenResolution:abSwitches:]
General Info: ntpTime=%f screenResolution=%d/%d ABSwitches=0x%08x
-[VCMediaNegotiationBlobV2GeneralInfo(Utils) printWithLogFile:prefix:]
-[VCMediaNegotiationBlobV2StreamGroupPayload(Utils) initWithPayloadConfig:rtpSampleRate:]
-[VCMediaNegotiationBlobV2StreamGroupPayload(Utils) initWithPayloadConfig:index:rtpSampleRate:streamGroupID:]
-[VCMediaNegotiationBlobV2StreamGroupPayload(Utils) newCompactPayloadWithPayloadConfig:rtpSampleRate:]
Payload config:
 CodecType=%@
 RTPPayload=%u
 pTime=%lu
 rtcpFlags=[%@]
 useInBandFEC=1
 profileLevelID=%lx
 cipherSuite=%@
 encoderUsage=%u
 <failed to decode>
+[VCMediaNegotiationBlobV2StreamGroupPayload(Utils) printWithLogFile:prefix:payloadConfig:]
PSFB_PLI
PSFB_FIR
OPUS16K
OPUS24K
AACELD48K
AACELD24K
EVSSWB
CipherNoneAuthNone
CipherSFRAME_AESCM128AuthSHA256_80
CipherSFRAME_AESCM128AuthSHA256_32
CipherSRTP_AESCM128AuthNoneRCCM3
%@[%p] idsParticipantID[%llu] participantUUID[%@] audioEnabled[%d] videoEnabled[%d] screenEnabled[%d] videoPaused[%d] videoQuality[%d] visibilityIndex[%d] prominenceIndex[%d] positionalInfo[%p] mediaStates[%p]
forceDisableDuplication
-[VCDuplicationHandler enableDuplication]
-[VCDuplicationHandler disableDuplication]
-[VCDuplicationHandler updateDuplicationStateForLocalWRMSuggestingCellularEvent:updateResult:]
-[VCDuplicationHandler updateDuplicationStateForLocalWRMSuggestingWiFiEvent:updateResult:]
-[VCDuplicationHandler updateDuplicationStateForRemoteWRMSuggestingWiFiEvent:updateResult:]
-[VCDuplicationHandler stopRemoteDuplicationAndUpdateResult:updateAlertState:]
-[VCDuplicationHandler updateDuplicationStateForTurnOffDuplicationForHandoverEvent:updateResult:]
-[VCDuplicationHandler updateDuplicationStateForTurnOnDuplicationForHandoverEvent:updateResult:]
-[VCDuplicationHandler updateDuplicationStateWithAlertInfo:]
-[VCDuplicationHandler updateDuplicationStateForMediaHealthUnrecoverable:updateResult:]
-[VCDuplicationHandler updateDuplicationStateForMediaHealthRecovered:updateResult:]
-[VCDuplicationHandler updateDuplicationStateForRemoteDuplicationChanged:updateResult:updateAlertState:]
-[VCDuplicationHandler shareLocalInterfacePreferenceWithPeerDuringActiveDuplicationForEvent:updateResult:]
-[VCSecureDataChannel initWithLocalCallID:remoteCallID:isCaller:sharedSecret:error:]_block_invoke
v24@?0@"NSData"8B16i20
-[VCSecureDataChannel initWithLocalCallID:remoteCallID:isCaller:sharedSecret:error:]
-[VCSecureDataChannel setupWithSharedSecret:isCaller:error:]
Could not setup secure data channel
-[VCSecureDataChannel sendData:messageType:encrypted:]
-[VCSecureDataChannel convertEncryptedData:toData:encrypted:]
-[VCSecureDataChannel convertData:toEncryptedData:encrypted:]
getOFTTypeForSecureDataMessageType
Signalled error at %s: Invalid message type %d
secureDataMessageTypeForOFTType
-[VCIDSSessionInfoSynchronizer setVCIDSSessionInfoSubscribedStreamIDs:]
-[VCIDSSessionInfoSynchronizer setVCIDSSessionInfoSubscribedStreamIDs:]_block_invoke
streamIDsDictionary=
-[VCIDSSessionInfoSynchronizer retryVCIDSSessionInfoSubscribedStreamIDs]
-[VCIDSSessionInfoSynchronizer retryVCIDSSessionInfoSubscribedStreamIDs]_block_invoke
-[VCIDSSessionInfoSynchronizer sendVCIDSSessionInfoSubscribedStreamIDs:]
-[VCIDSSessionInfoSynchronizer setVCIDSSessionInfoPublishedStreamIDs:]_block_invoke
com.apple.AVConference.VCIDSSessionInfoSynchronizer
-[VCIDSSessionInfoSynchronizer(PrivateMethods) setPrimaryLinkID:]
-[VCIDSSessionInfoSynchronizer(PrivateMethods) setDuplicationLinkID:]
-[VCIDSSessionInfoSynchronizer(PrivateMethods) resetParticipantGenerationCounter]
-[VCIDSSessionInfoSynchronizer(PrivateMethods) checkVCIDSSessionInfoNeedUpdate:]
-[VCIDSSessionInfoSynchronizer(PrivateMethods) updateVCIDSSessionInfoResponse:]
-[VCIDSSessionInfoSynchronizer(PrivateMethods) optInStreamIDsForConnection:]
-[VCIDSSessionInfoSynchronizer(PrivateMethods) optInStreamIDsForConnection:]_block_invoke
-[VCIDSSessionInfoSynchronizer(PrivateMethods) optOutStreamIDsForNonPrimaryConnection:sentOnConnection:]
SIMinBytesSent
SIMaxBytesSent
SIRawBytesSent
SIMinBytesReceived
SIMaxBytesReceived
SIRawBytesReceived
-[VCSessionStatsController initWithDelegate:connectionManager:uplinkStatsCollector:downlinkStatsCollector:reportingAgent:transportSessionID:streamID:mediaQueue:]
-[VCSessionStatsController dealloc]
-[VCSessionStatsController reset]
com.apple.AVConference.vcsessionStatsController.receiveproc
-[VCSessionStatsController startLocalSessionStatsReceive]
v24@?0^v8^{?=Cd[1472C]ii{tagVCIDSChannelDataFormat=[12S]CBSCBBQBBBS{?=SSSSS}BBBQBSBBB}}16
-[VCSessionStatsController startLocalSessionStatsSend]
-[VCSessionStatsController stopLocalSessionStatsUpdate]_block_invoke
-[VCSessionStatsController updateRemoteSessionStats:]
-[VCSessionStatsController isRemoteSessionStatsTooLateWithStatsId:]
-[VCSessionStatsController triggerRateControlWithLocalSessionStats:time:forUplink:forDownlink:fromVCRCExternalThread:]
-[VCSessionStatsController statsReceiveStatsPayload]
-[VCSessionStatsController handleRemoteSessionStats:]
-[VCSessionStatsController healthPrintForServerStats]
SSMinBytesSent
SSMaxBytesSent
SSRawBytesSent
SSMinBytesReceived
SSMaxBytesReceived
SSRawBytesReceived
statsReceiveProc
%s signalled err=%d (%s) (%s) at %s:%d
ENOMEM
emulation3Byte malloc
RemoveEmulation3Byte
H264Bridge.c
err = kFigBridgeInvalidSerializedSampleDescriptionErr
{PullParamSetSPS} ERROR: Wrong forbidden_bit in SPS NAL unit, will bail ...
PullParamSetSPS
{PullParamSetSPS} ERROR: Wrong nal_ref_idc in SPS NAL unit, will bail ...
{PullParamSetSPS} ERROR: Wrong nal_unit_type in SPS NAL unit, will bail ...
PullParamSetSPS: chroma_format_idc too large for high profile
PullParamSetSPS: bit_depth_luma_minus8 too large for high profile
PullParamSetSPS: bit_depth_chroma_minus8 too large for high profile
PullParamSetSPS: qpprime_y_zero_transform_bypass_flag too large for high profile
{PullParamSetSPS} Overflowing NALU size, will bail ...
PullParamSetSPS: thiss->seq_parameter_set_id too large
PullParamSetSPS: wrong SeqParamSet.num_ref_frames_in_pic_order_cnt_cycle number
kFigBridgeInvalidSerializedSampleDescriptionErr
h264bridge_u_pull
Buffer overflow!
UE_PULL should :numZeros<=12
h264bridge_ue_pull
h264bridge_se_pull
Overran SPS
PullVUIParamSet
thiss->cpb_cnt_minus1 too big
h264bridge_u_pulllong
h264bridge_ue_pulllong
UE_PULLlong: data too large for UINT
/System/Library/Components/AudioDSP.component/Contents/MacOS/AudioDSP
VCAudioUnit_RegisterDynamicAudioUnit
VCAudioUnit_NewInstance
-[AVCPacketRelaySocketConnection initWithSocket:remoteAddress:packetFilter:]
-[AVCPacketRelaySocketConnection start]
-[AVCPacketRelaySocketConnection stop]
-[AVCPacketRelaySocketConnection receiveDataOnSocket:]
-[AVCPacketRelaySocketConnection sendData:size:error:]
AVCPacketRelayErrorDomain
socket connection with remote IPPort %s, socket %d (connected %d)
-[AVCPacketRelaySocketConnection dealloc]
com.apple.private.alloy.willow.stream
-[AVCPacketRelayIDSConnection initWithIDSSocketDescriptor:]
-[AVCPacketRelayIDSConnection initWithIDSDestination:]
-[AVCPacketRelayIDSConnection start]
-[AVCPacketRelayIDSConnection start]_block_invoke
v38@?0r^v8I16{?=cSCSC}20@"NSError"30
-[AVCPacketRelayIDSConnection stop]
-[AVCPacketRelayIDSConnection sendData:size:error:]
-[AVCPacketRelayIDSConnection sendData:size:error:]_block_invoke
-[AVCPacketRelayIDSConnection dealloc]
-[AVCPacketRelay initWithConnections:multiplexedConnection:error:]
com.apple.avconference.AVCPacketRelayQueue
-[AVCPacketRelay initWithConnections:multiplexedConnection:error:]_block_invoke
v32@?0r^v8I16B20@"NSError"24
-[AVCPacketRelay start]_block_invoke
-[AVCPacketRelay stop]_block_invoke
-[AVCPacketRelay dealloc]
-[AVCPacketRelay startAllConnections]
-[AVCPacketRelay stopAllConnections]
-[AVCPacketRelay healthPrint:isSend:]
avcMediaStreamNegotiatorMediaBlob
avcMediaStreamNegotiatorMode
AVCMediaStreamNegotiatorVideoWidth
AVCMediaStreamNegotiatorVideoHeight
AVCMediaStreamNegotiatorVideoResolution
AVCMediaStreamNegotiatorHDRMode
AVCMediaStreamNegotiatorTransportType
AVCMediaStreamNegotiatorTransportProtocolType
AVCMediaStreamNegotiatorAccessNetworkType
+[AVCMediaStreamNegotiator(utils) AVConferenceOperatingModeWithAVCMediaStreamMode:]
+[AVCMediaStreamNegotiator(utils) AVCVideoStreamModeWithAVCMediaStreamMode:]
+[AVCMediaStreamNegotiator(utils) audioStreamModeWithMediaStreamMode:]
+[AVCMediaStreamNegotiator(utils) clientAccessNetworkType:]
+[AVCMediaStreamNegotiator(utils) defaultAccessNetworkType:]
-[AVCMediaStreamNegotiator(utils) VCVideoFeatureListStringTypeWithAVCMediaStreamMode:]
Failed to create local feature string for media negotiator
Failed to create bitRateArbiter
Failed to create local config object
Failed to obtain pixelFormat set
Failed to create VCMediaNegotiator
-[AVCMediaStreamNegotiator initWithMode:options:error:]
Failed to create the offerer media blob
Failed to create offerer dictionary with media blob
-[AVCMediaStreamNegotiator initWithMode:error:]
-[AVCMediaStreamNegotiator createOffer]
Failed to deserialize media blob on answerer
Failed to extract incoming media blob on answerer
cannot get video width from Init options
cannot get video height from Init options
cannot get DPI scaling facfor from Init options
-[AVCMediaStreamNegotiator initWithOffer:error:]
offer=%s, options=%s, error=%s
-[AVCMediaStreamNegotiator initWithOffer:options:error:]
Failed to process incoming blob on answerer
Failed to create the response media blob on answerer
Failed to create answer dictionary on answerer
-[AVCMediaStreamNegotiator createAnswer]
Failed to extract negotiated media blob on offerer
-[AVCMediaStreamNegotiator setAnswer:withError:]
Can't set answer blob on answerer
Empty answer blob cannot be set on offerer
-[AVCMediaStreamNegotiator setupAudioStreamConfiguration:errorReason:]
connectionType = %d AND mode = %d
Settings not found in negotiated settings
-[AVCMediaStreamNegotiator setupVideoStreamConfiguration:errorReason:]
RuleCollection not correct in negotiated settings
No valid payload found in the negotiated settings
No valid video rules found found in the negotiated screen settings
No valid pixel format found in the negotiated screen settings
-[AVCMediaStreamNegotiator generateMediaStreamConfigurationWithError:]
Failed to process the response blob on the offerer
-[AVCMediaStreamNegotiator addLocalCallInfoBlobToOutgoingDictionary:]
-[AVCMediaStreamNegotiator generateMediaStreamInitOptionsWithError:]
failed to create mediastream init options dictionary
-[AVCMediaStreamNegotiator pickBestPixelFormatFromSet:preferenceList:count:acceptDefault:]
-[AVCMediaStreamNegotiator pickBestHDRMode:]
VCMediaStreamSynchronizer
-[VCMediaStreamSynchronizer initWithSourceSampleRate:destinationSampleRate:]
com.apple.VideoConference.VCMediaStreamSynchronizer
VCMediaStreamSynchronizer_updateDestinationNTPTime
VCMediaStreamSynchronizer_scheduleDestinationPlaybackWithRTPTimestamp
VCMediaStreamSynchronizer_resetDestinationState
VCMediaStreamSynchronizer_setDestinationAlarmHandler
VCMediaStreamSynchronizer_scheduleTimeForDestinationRTPTimestamp_block_invoke
_VCMediaStreamSynchronizer_differenceBetweenRtpTimestamp
VCMediaStreamSyncSourceDelegate_updateSourceState_block_invoke
VCMediaStreamSyncSourceDelegate_resetSourceState_block_invoke
VCMediaStreamSyncSourceDelegate_updateSourcePlayoutSampleRTPTimestamp
VCMediaStreamSyncSourceDelegate_updateSourceNTPTimeWithRTPTimeStamp
_VCMediaStreamSynchronizer_sourceRTPTimestampFromDestinationRTPTimestampInternal
AVCTextStream
-[AVCTextStream initWithNetworkSockets:callID:error:]
com.apple.avconference.avctextstream.callback.queue
-[AVCTextStream dealloc]
-[AVCTextStream configure:error:]
AVCTextStream configuration is invalid
-[AVCTextStream start]
AVCTextStream hasn't been configured
-[AVCTextStream stop]
-[AVCTextStream pause]
-[AVCTextStream resume]
-[AVCTextStream setDelegate:]
-[AVCTextStream setDirection:]
-[AVCTextStream setRtcpEnabled:]
-[AVCTextStream setRtpTimeOutEnabled:]
-[AVCTextStream setRtcpTimeOutEnabled:]
-[AVCTextStream setRtpTimeOutIntervalSec:]
-[AVCTextStream setRtcpTimeOutIntervalSec:]
-[AVCTextStream setRtcpSendIntervalSec:]
VCRealTimeThread_Initialize
VCRealTimeThread_Finalize
VCRealTimeThread_Start
VCRealTimeThread_Stop
VCRealTimeThread_ChangeState
VCRealTimeThread_InternalStart
VCRealTimeThread_ThreadProc
VCRealTimeThread_CreateStopSocket
message
acknowledgement
content
PBUNSET
VCStreamInputUtil_EncodeFormatDescription
VCStreamInputMediaType
VCStreamInputUtil_DecodeFormatDescription
VCStreamInputUtil_DecodeSampleBuffer
_VCStreamInputUtil_AddFormatDescription
VCStreamInputMediaSubtype
_VCStreamInputUtil_AddUint32Value
VCStreamInputPixelBufferWidth
_VCStreamInputUtil_AddFormatDescriptionVideo
VCStreamInputPixelBufferHeight
VCStreamInputFormatExtensions
_VCStreamInputUtil_AddFormatDescriptionAudio
VCStreamInputFormatASBD
_VCStreamInputUtil_EncodeSampleBufferAttachments
VCStreamInputSampleBufferAttachments
_VCStreamInputUtil_EncodeAudioSampleBuffer
VCStreamInputFormatSampleCount
_VCStreamInputUtil_ReadUint32Value
_VCStreamInputUtil_DecodeVideoFormat
_VCStreamInputUtil_DecodeMetaDataFormat
_VCStreamInputUtil_DecodeAudioFormat
_VCStreamInputUtil_DecodeVideoSampleBuffer
VCStreamInputPresentationTime
_VCStreamInputUtil_DecodeTime
_VCStreamInputUtil_DecodeSampleBufferAttachments
_VCStreamInputUtil_DecodeAudioSampleBuffer
_VCStreamInputUtil_DecodeDataSampleBuffer
VCStreamInputBufferData
_VCStreamInputUtil_DecodeBlockBuffer
bwEstimation
minProbingSequenceSize
suddenBWDPercentage
minFastBWDSampleCount
-[VCRateControlBandwidthEstimator setServerBag:]
VCRateControlBandwidthEstimator_CalculateBandwidthEstimation
Bandwidth Estimation: ArrivalTime:%.4f, timestamp:%u, BWD:%.2f, state:%d, divergeCount:%d, prob_seq:[duration:%.4f, size:%d, count:%d], EstimatedBandwidth:%.2f
VCRateControlBandwidthEstimator_CalculateBandwidthEstimationForBandwidthSample
-[VCRateControlBandwidthEstimator updateQualificationParameters]
VCRateControlBandwidthEstimatorMap_BandwidthEstimator
VCRateControlBandwidthEstimatorMap_DeregisterBandwidthEstimator
VCRateControlBandwidthEstimatorMap_EstimatedBandwidthWithArrivalTime
v32@?0@"NSNumber"8@"VCRateControlBandwidthEstimator"16^B24
VCRateControlBandwidthEstimatorMap_EstimatedBandwidthUncappedWithArrivalTime
rtcpFlags
mediaFlags
profileLevelId
rtpSampleRate
cipherSuite
packedPayload
vcrc
faceTime
groupFaceTime
allowRampUpPLR
highNBDCD
ABTesting
bitMap
testPercentage
experiment
experimentConfig
+[VCRateControlServerBag keysWithMode:]
%@-%@-%@
+[VCRateControlServerBag groupKeysWithMode:primaryKey:]
+[VCRateControlServerBag prefixForMode:]
-[VCRateControlServerBag initWithMode:serverBagDict:]
-[VCRateControlServerBag valueForType:value:]
-[VCRateControlServerBag valueForSecondaryKeyWithPrimaryKey:secondaryKey:type:]
-[VCRateControlServerBag experimentGroupIndex]
minFrequency
maxFrequency
powerLevel
com.apple.AVConference.VCAudioClientManager.XPCCommandQueue
vcSecureMicNotification
VCTimescalePSOLA_PreEmptiveExpand
_VCFECFeedbackAnalyzer_Configure
VCFECFeedbackAnalyzer_Create
isFECFeedbackAnalyzerDumpEnabled
com.apple.VideoConference.VCFECFeedbackAnalyzer
.fecdump
Time
TimeMicro
FrameSizeInPackets
lostPackets
VCFECFeedbackAnalyzer_ProcessFeedback
VCFECFeedbackAnalyzer_GetFECLevelVector
VCFECFeedbackAnalyzer_GetVPLR
VCFECFeedbackAnalyzer_CleanHistory
VCFECFeedbackAnalyzerClass
_VCFECFeedbackAnalyzer_RegisterFeedback
{"histogram":
{"size": %2d,
"bins":{
%s%s
"%d":%2.3f
%s}}}
%5.6f
_VCFECFeedbackAnalyzer_PopulateHistogram
{"measuredLoss"
%s%s"%d":%2d
%s}}
{"vector"
{"vectorPLR"
-[VCTransportSessionProxy initWithTransportSessionID:]
-[VCTransportSessionProxy createVFD:forStreamType:]
-[VCVideoTransmitterBase initWithConfig:]
-[VCVideoTransmitterBase startVideo]
-[VCVideoTransmitterBase stopVideo]
-[VCVideoTransmitterBase generateKeyFrameWithFIRType:]
-[VCVideoTransmitterBase setTemporaryMaximumBitrate:]
-[VCVideoTransmitterBase setKeyFrameOnlyStreamID:]
-[VCVideoTransmitterBase setStreamIDs:numOfStreamIDs:repairedStreamIDs:numOfRepairedStreamIDs:]
-[VCVideoTransmitterBase collectChannelMetrics:interval:]
-[VCVideoTransmitterBase setFECRatio:]
-[VCVideoTransmitterBase setFECRedundancyVector:]
-[VCVideoTransmitterBase setMediaSuggestion:]
-[VCVideoTransmitterBase setEncodingMode:]
-[VCVideoTransmitterBase handleThermalLevelChange:]
-[VCVideoTransmitterBase updateWindowState:isLocal:windowRect:]
-[VCVideoTransmitterBase setTemporalBitrateArray:]
-[VCVideoTransmitterBase setHighestActiveQualityIndex:]
-[VCVideoTransmitterBase handleActiveConnectionChange:]
-[VCClientRelay setupVTPSocket]
-[VCClientRelay startRelay]
com.apple.videoconference.VCClientRelayVTPReceiveProc
com.apple.videoconference.vcclientrelay.idsreadqueue
-[VCClientRelay stopRelay]
-[VCClientRelay relayIDSPacket]
-[VCClientRelay relayVTPPacket]
VCClientRelayVTPReceiveProc
vcEffectsXPCCMTime
VCAudioBufferList_Allocate
VCAudioBufferList_Destroy
VCAudioBufferList_ZeroMemory
VCAudioBufferList_InvalidateStats
VCAudioBufferList_ApplyGain
VCAudioBufferList_Mix
VCAudioBufferList_MixToMono
VCAudioBufferList_Append
VCAudioBufferList_ReplaceSamples
VCAudioBufferList_Shift
VCAudioBufferList_Convert
VCAudioBufferList_GetSampleFormat
VCAudioBufferList_GetAudioBufferList
VCAudioBufferList_GetBufferAtIndex
VCAudioBufferList_Reset
VCAudioBufferList_ResetDataPointers
VCAudioBufferList_ResampleAppend
VCAudioBufferList_InvalidateAveragePower
VCAudioBufferList_GetTimestamp
VCAudioBufferList_GetAudioTimestamp
VCAudioBufferList_GetHostTimeJumpSize
VCAudioBufferList_GetHostTime
VCAudioBufferList_GetVoiceActivity
VCAudioBufferList_SetVoiceActivity
VCAudioBufferList_GetSampleCount
VCAudioBufferList_GetSampleCapacity
VCAudioBufferList_GetChannelCount
VCAudioBufferList_GetAveragePower
VCAudioBufferList_SetAveragePower
VCAudioBufferList_GetSerializedSize
VCAudioBufferListSampleBufferAllocator
VCAudioBufferList_CreateSampleBufferWithFormatWithAllocator
VCAudioBufferList_CreateSampleBufferAllocateWithAllocator
VCAudioBufferList_GetPriority
VCAudioBufferList_SetPriority
VCAudioBufferList_InvalidateNetworkTimestamp
VCAudioBufferList_SetNetworkTimestamp
VCAudioBufferList_GetNetworkTimestamp
VCAudioBufferList_SetVoiceProbability
VCAudioBufferListConverterCallback
 %@(%@)=%u,
Bandwidth Settings:
-[VCMediaNegotiationBlob(Utils) printBandwidthSettingsWithLogFile:]
Media Blob - %s
-[VCMediaNegotiationBlob(Utils) printCaptionsSettingsWithLogFile:]
Media Blob - Captions Settings: canDisplayCaptions=%d
Sender languages:
 %@,
Media Blob -     %s
Moments Settings:
-[VCMediaNegotiationBlob(Utils) printMomentsSettingsWithLogFile:]
-[VCMediaNegotiationBlob(Utils) printMultiwayAudioStreamsWithLogFile:]
Media Blob - Multiway Audio: count=%d
-[VCMediaNegotiationBlob(Utils) printMultiwayVideoStreamsWithLogFile:]
Media Blob - Multiway Video: count=%d
%@ (size=%u): UserAgent=%s
, basebandCodec=%@, basebandCodecSampleRate=%u
, allowDynamicMaxBitrate=%d
, allowsContentsChangeWithAspectPreservation=%d
-[VCMediaNegotiationBlob(Utils) printWithTitle:blobSize:logFile:]
-[VCMediaNegotiationBlobVideoSettings(VideoRules) initWithSSRC:allowRTCPFB:videoRuleCollections:featureStrings:isCellular16x9Capable:tilesPerFrame:ltrpEnabled:]
-[VCMediaNegotiationBlobVideoSettings(VideoRules) initWithScreenSSRC:allowRTCPFB:videoRuleCollections:featureStrings:isCellular16x9Capable:customVideoWidth:customVideoHeight:tilesPerFrame:ltrpEnabled:pixelFormats:hdrModesSupported:]
-[VCMediaNegotiationBlobVideoSettings(VideoRules) setVideoRuleCollections:featureStrings:isScreen:isCellular16x9Capable:]
-[VCMediaNegotiationBlobVideoSettings(VideoRules) checkAndInsertRuleWithWidth:height:framerate:payload:priority:negotiationBitfield:negotiationBit:rules:isCellular16x9Capable:]
-[VCMediaNegotiationBlobVideoSettings(VideoRules) newVideoRuleCollectionsForScreen:isCellular16x9Capable:isLocalConfig:]
, %@
 %@@%@fps%s
 (preferred)
-[VCMediaNegotiationBlobVideoSettings(VideoRules) printVideoWithLogFile:]
Media Blob - Video Settings: SSRC=%x allowRTCPFB=%u
Media Blob -     Payload=%u Format string=%s
Media Blob -     Payload=%u Parameter set: %s
Payload=%u %s %s
encode
decode
-[VCMediaNegotiationBlobVideoSettings(VideoRules) printScreenWithLogFile:]
Media Blob - Screen Settings: SSRC=%x allowRTCPFB=%u
Media Blob -     Format string=%s
Media Blob -     Payload=%u parameter set: %s
 %@@%@fps
Audio Settings: SSRC=%x sbr=%d audioSwitching=%d audioRecording=%d
 model=%u
-[VCMediaNegotiationBlobAudioSettings(AudioRules) printWithLogFile:]
Primary payloads:
Secondary payloads:
+[VCMediaNegotiationBlobBandwidthSettings(BandwidthSettings) bandwidthConfigurationWithOperatingMode:connectionType:]
Multiway Audio Stream Settings: SSRC=%x maxNetworkBitrate=%d maxMediaBitrate=%d maxPacketsPerSecond=%f supportedPayloads=0x%08x streamID=%d qualityIndex=%d hasRepaired:%u repairedMaxNetworkBitrate=%d repairedStreamID=%d
-[VCMediaNegotiationBlobMultiwayAudioStream(MultiwayAudioStream) printWithLogFile:]
Multiway Video Stream Settings: SSRC=%x maxNetworkBitrate=%d maxMediaBitrate=%d maxPacketsPerSecond=%d payload=%d streamID=%d qualityIndex=%d supportedvideoFormats=%d frameRate=%d keyFrameInterval=%u metadata=%u hasRepaired:%u repairedMaxNetworkBitrate=%d repairedStreamID=%d
-[VCMediaNegotiationBlobMultiwayVideoStream(MultiwayVideoStream) printWithLogFile:]
en_us
zh_cn
supported
no_history
history_image
history_video
SUPPORTED
JPEG
HEIF
video_320x240_15
video_320x240_30
video_480x368_15
video_480x368_30
video_640x480_15
video_640x480_30
video_848x480_15
video_848x480_30
video_1024x768_15
video_1024x768_30
video_1280x720_15
video_1280x720_30
video_1024x768_60
video_1280x720_60
video_480x272_15
video_480x272_30
video_1280x720_15_dec
video_1280x720_30_dec
video_1280x720_60_dec
video_192x112_15
video_192x192_15
video_240x240_15
video_320x320_30
video_480x480_30
video_640x640_30
video_720x720_30
video_1024x576_30
video_1920x1080_30
video_1440x1080_30
video_896_672_30
video_1920x1080_60
video_SUPPORTED
video_896x672_60
video_1664x1248_30
video_1664x1248_60
video_1024x576_15
video_896x672_15
video_1920x1440_60
screen_1024x768_30
screen_1024x768_60
screen_1136x640_30
screen_1136x640_60
screen_1334x750_30
screen_1334x750_60
screen_1664x1248_30
screen_1664x1248_60
screen_1920x1080_30
screen_1920x1080_60
screen_2208x1242_30
screen_2208x1242_60
screen_2048x1536_30
screen_2048x1536_60
screen_1280x720_30
screen_1280x720_60
screen_1920x896_30
screen_1920x896_60
screen_2732x2048_60
screen_2388x1668_60
screen_2224x1668_60
screen_3616x1552_60
screen_4400x1888_60
screen_SUPPORTED
G722
AACELD_16000
AACELD_22050
SPEEX_8K
SPEEX_16K
AMR_8000
AMR_16000
INVALID
VirtualTTYDevice
VCVirtualTTYDevice
-[VCVirtualTTYDevice initWithMode:clientPid:]
-[VCVirtualTTYDevice start]
-[VCVirtualTTYDevice sendCharacter:]
-[VCVirtualTTYDevice sendText:]
-[VCVirtualTTYDevice setPause:]
-[VCVirtualTTYDevice pushAudioSamples:]
-[VCVirtualTTYDevice didUpdateBasebandCodec:]
-[VCMediaNegotiationBlobV2MicrophoneSettingsU1(Utils) initWithSSRC:audioPayloads:]
Mic settings (U+1): 
ssrc=%08x 
payloads=0x%x [
-[VCMediaNegotiationBlobV2MicrophoneSettingsU1(Utils) printWithLogFile:prefix:]
-[AVCMoments initWithStreamToken:requesterID:delegate:dispatchQueue:]
com.apple.AVConference.AVCMoments.delegateQueue
%@: streamToken[%ld] capabilities[%X] requesterID[%@]
-[AVCMoments connect]
-[AVCMoments connect]_block_invoke
-[AVCMoments disconnect]
-[AVCMoments registerBlocksForNotifications]_block_invoke
vcMomentsServerDidDisconnect
result=%s
-[AVCMoments didStartProcessingRequestHelperWithResult:]
-[AVCMoments didEndProcessingRequestHelperWithResult:]
-[AVCMoments didFinishRequestHelperWithResult:]
AVCMoments
-[AVCMoments newRequestWithMediaType:mode:requesteeID:]
-[AVCMoments avcMomentsRequestDidStartRequest:withError:]
-[AVCMoments avcMomentsRequestDidEndRequest:withError:]
-[AVCMoments avcMomentsRequestDidRejectRequest:withError:]
-[VCNetworkAgentCell addCellularAssertion]
-[VCNetworkAgentCell removeCellularAssertion]
transport
operation
formats
preferredFormat
formatsExt1
preferredFormatExt1
NEGOTIATION_TRANSPORT_TYPE_WIFI
NEGOTIATION_TRANSPORT_TYPE_CELLULAR
NEGOTIATION_OPERATION_TYPE_ENCODE
NEGOTIATION_OPERATION_TYPE_DECODE
-[VCVideoRuleCollectionsScreenAirplayEmbedded initWithHardwareSettings:]
-[VCVideoRuleCollectionsScreenAirplayEmbedded selectPreferredRule:screenSize:]
-[VCVideoRuleCollectionsScreenAirplayEmbedded setupH264Rules]
audioCannedReplay
audioCannedReplayLoopLength
audioCannedReplayStartTime
AUIOCreateHandle
AUIOCloseHandle
AUIOSuspend
AUIOResume
AUIOSetupFormats
AUIOReceiverIsReady
_AUIOHealthPrintCallback
AUIOStart
AUIOStop
AUIOSetInputMeterEnabled
AUIOSetOutputMeterEnabled
AUIOSetMute
AUIOSetVoiceMixingMedia
AUIOSetMediaPlaybackOnExternalDevice
AUIOSetRemoteCodecInfo
AUIOSetSpatialMetadata
AUIOSetDynamicDuckerVolume
_AUIOComponentSubTypeForConfiguration
_AUIOMicProc
IOProc: shenanigans mic proc
_AUIOProcessMetaData
AUIO last mic sample delayed. currentTime=%f previousTime=%f delta=%f
_AUIOMicProcDetectDelayedSamples
_AUIOLogAbnormalTimestamps
_AUIOBufferMicSamples
_AUIOSpkrProc
IOProc: shenanigans spkr proc
_AUIOSpkrProcGKS
_AUIOSetPropertiesAndInitialize
forceMute
AUIOSetupMic
MicOutFmt:
_AUIOReallocBufferedMicSamples
AUIOSetupSpeaker
SpkrIn:
_AUIOPostinitialization
_AUIOStartPacketThread
com.apple.AVConference.auio
_AUIOSetRemoteCodecProperties
-[VCVideoRuleCollectionsScreen initWithHardwareSettings:]
-[VCVideoRuleCollectionsScreen initForMacDecodingOnly]
-[VCVideoRuleCollectionsScreen setupH264Rules]
v16@?0@"NSObject<OS_nw_connection>"8
Unexpected connection callback
cannot create socket
bind failed
connect failed
rtp socket creation failed
rtcp socket creation failed
00110011
11100010
00110010
11100011
-[VCVideoCapture addSink:]
-[VCVideoCapture removeSink:]
v24@?0^{_VCSingleLinkedListEntry=^{_VCSingleLinkedListEntry}}8^B16
-[VCTransportSessionIDSMultiLink handleLinkConnectedWithInfo:]
-[VCTransportSessionIDSMultiLink handleLinkDisconnectedWithInfo:]
-[VCTransportSessionIDSMultiLink handleProbingResponse:]
-[VCTransportSessionIDSMultiLink setWiFiAssist:]
-[VCTransportSessionIDSMultiLink setWiFiAssist:]_block_invoke
-[VCTransportSessionIDSMultiLink setDefaultLink:]_block_invoke
-[VCTransportSessionIDSMultiLink primaryConnectionChanged:oldPrimaryConnection:activeConnection:]
-[VCTransportSessionIDSMultiLink discardConnection:]
-[VCTransportSessionIDSMultiLink discardConnection:]_block_invoke
-[VCTransportSessionIDSMultiLink didEnableDuplication:activeConnection:]
-[VCTransportSessionIDSMultiLink setOneToOneModeEnabled:isInitiator:]
-[VCTransportSessionIDSMultiLink startActiveProbingWithOptions:]_block_invoke
-[VCTransportSessionIDSMultiLink stopActiveProbingWithOptions:]_block_invoke
-[VCTransportSessionIDSMultiLink queryProbingResultsWithOptions:]_block_invoke
-[VCTransportSessionIDSMultiLink flushLinkProbingStatusWithOptions:]_block_invoke
-[VCTransportSessionIDSMultiLink setRemoteDeviceVersionIDS]_block_invoke
-[VCTransportSessionIDSMultiLink VCIDSSessionInfoSynchronizer:sendVCIDSSessionInfoRequest:]
RateMonitorUpdateDataSamples
com.apple.avconference.writerqueue
-[VCMovieWriter setupContectRect:withCaptureHeight:]
AVConference:MovieWriter
-[VCMovieWriter appendAudioSampleBuffer:mediaType:]
-[VCMovieWriter shouldFinishWritingSampleBuffer:RTPtimeStamp:mediaType:]
-[VCMovieWriter setStillImageTime:]
-[VCMovieWriter finishWritingWithHandler:]
VCMovieWriter
-[VCMovieWriter setupAssetWriterWithWidth:height:transactionID:]
com.apple.quicktime.content.identifier
mdta
-[VCMovieWriter setupInput:queue:dispatchGroup:lastPresentationTime:]_block_invoke
-[VCMovieWriter processSampleQueue:input:lastPresentationTime:]
com.apple.quicktime.still-image-time
-[VCMovieWriter appendMetaData]
-[VCMovieWriter startWritingAtTime:]
VCCVOExtensionUtils_CameraStatusBitsFromCVOExtension
-[VCAudioStreamTransport initWithHandle:callId:localSSRC:enableNetworkMonitor:]
-[VCSystemAudioCapture initWithConfiguration:]
-[VCSystemAudioCapture dealloc]
+[VCSystemAudioCapture isValidConfiguration:]
-[VCSystemAudioCapture start]
-[VCSystemAudioCapture stop]
+[VCSystemAudioCapture newAudioTapWithProcessID:audioFormat:]
+[VCSystemAudioCapture newAudioTapWithSessionType:audioFormat:]
+[VCSystemAudioCapture newAudioTapWithCaptureContext:audioFormat:]
-[VCSystemAudioCapture newAudioTapWithAudioStreamBasicDescription:]
systemAudioUseSineWave
_VCSystemAudioCapture_handleInputBuffer
_VCSystemAudioCapture_logInfoForFirstAudioBufferReceived
_VCSystemAudioCapture_processInputBuffer
_VCSystemAudioCapture_appendInputBuffer
_VCSystemAudioCapture_CopyOutputBufferNonInterFormat
_VCSystemAudioCapture_CopyOutputBufferInterFormat
_VCSystemAudioCapture_UpdateAppendBuffer
_VCSystemAudioCapture_isRunningListenerCallback
_VCSystemAudioCapture_AudioQueueRemovePropertyListener
_VCSystemAudioCapture_allocateAudioQueueBuffers
_VCSystemAudioCapture_destroyAudioQueueBuffers
-[VCAudioPayload initWithConfig:]
-[VCAudioPayload createEncoderWithInputFormat:]
-[VCAudioPayload encodeAudio:numInputSamples:outputBytes:numOutputBytes:]
-[VCAudioPayload setCodecModeRequest:]
{ VCAudioPayload config=%@ currentBitrate=%d }
v32@?0@"NSNumber"8@"NSString"16^B24
VCVideoStream
-[VCVideoStream newVideoTransmitterConfigWithVideoStreamConfig:]
isFECGeneratorEnabled
-[VCVideoStream isFECGeneratorEnabled]
-[VCVideoStream initVideoTransmitter]
-[VCVideoStream destroyVideoTransmitter]
videoJBUseErasureSensitiveMode
videoReceiverDeferredAssemblyOffset
-[VCVideoStream videoReceiverConfigWithVideoStreamConfig:]
enableVideoJitterBufferInReceiver
looseAVSyncEnabled
forceVideoStreamLowLatency
delayBudgetForServerPacketRetransmissionForVideo
0.005, 0.01, 0.025, 1.0
1.0, 0.8, 0.5, 0.3
-[VCVideoStream readServerPacketRetransmissionsForVideoStoreBagConfig:]
-[VCVideoStream setupVideoReceiver:withTransmitterHandle:]
-[VCVideoStream updateVideoReceiver:]
-[VCVideoStream destroyVideoReceiver]
-[VCVideoStream destroyVideoModules]
-[VCVideoStream setupCompoundStreamIDsWithStreamIDs:]
compoundStreamIDs=
forceHDR10ColorInfo
-[VCVideoStream setupColorInfo]
com.apple.AVConference.VCVideoStream.lastDecodedFrame
-[VCVideoStream dealloc]
/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCVideoStream.m
updateVideoConfig Called while video stream is not running
-[VCVideoStream updateVideoConfig:]
-[VCVideoStream submitStatisticsCollectorVideoStallUpdateWithTime:]
-[VCVideoStream submitStatisticsCollectorVideoStallUpdateWithType:currentTime:stallDuration:idsParticipantID:]
-[VCVideoStream resetRemoteMediaStalled]
-[VCVideoStream updateSourcePlayoutTimestamp:]
-[VCVideoStream generateKeyFrameWithFIRType:]
-[VCVideoStream sendLastRemoteVideoFrame:]
-[VCVideoStream cleanupBeforeReconfigure:]
-[VCVideoStream setTargetStreamID:]
-[VCVideoStream setShouldEnableFaceZoom:]
-[VCVideoStream setShouldEnableMLEnhance:]
-[VCVideoStream lastDisplayedFrameRTPTimestamp]
Invalid configuration
Feature string is nil
-[VCVideoStream validateStreamConfiguration:error:]
-[VCVideoStream setEncodingMode:]
-[VCVideoStream enableRateControlFeebackInConfig:]
-[VCVideoStream maxFramerateFromStreamConfigs:]
-[VCVideoStream configureNetworkSampleRateScaleForStream:transport:]
-[VCVideoStream onConfigureStreamWithConfiguration:error:]
Can not register capture source streamInput, streamInputID could be wrong
SymptomReporterOptionalKeyCaptureSource
SymptomReporterOptionalKeyCaptureWidth
SymptomReporterOptionalKeyCaptureHeight
SymptomReporterOptionalKeyCaptureFrameRate
-[VCVideoStream registerForCameraCaptureWithConfig:]
-[VCVideoStream setupReportingAgent]_block_invoke
-[VCVideoStream networkMTU]
-[VCVideoStream isTransportIPv6]
-[VCVideoStream setupInternalRedundancyControllerWithStreamConfig:]
-[VCVideoStream onStartWithCompletionHandler:]
Screen capture failed
Screen capture is busy or not permitted
-[VCVideoStream onStopWithCompletionHandler:]
-[VCVideoStream onPauseWithCompletionHandler:]
-[VCVideoStream onResumeWithCompletionHandler:]
-[VCVideoStream getMaxTemporalBitrateForStreamIDs:]
-[VCVideoStream setTransmitterStreamIDs:repairStreamIDs:]
-[VCVideoStream setStreamIDs:repairStreamIDs:]
streamIDs=
repairStreamIDs=
-[VCVideoStream setPeerSubscribedStreamIDs:]
-[VCVideoStream handleVTPSendFailedWithData:]
VCMediaStreamType
VCVSStreamIDs
VCVSConfigTxMaxBitrate
VCVSConfigTxMinBitrate
VCVSConfigRxMaxBitrate
VCVSConfigRxMinBitrate
VCVSKeyFrameInterval
VCVSRemoteVInitialOrientation
VCVSConfigTxCodecType
VCVSConfigRxCodecType
VCVSConfigTxFramerate
VCVSConfigTxResolution
VCVSConfigWidth
VCVSConfigHeight
VCVSConfigTransportProtocol
VCVSConfigAccessNetworkType
-[VCVideoStream collectVideoStreamStartMetrics:]
Time
VCVSUUID
%@:%d
VCVSLocalIPPort
VCVSRemoteIPPort
VCVSIDSDestination
VCVSRateAdaptationEnabled
VCVSRtcpSendInterval
VCVSRepairIDs
VCVSSubStreamIDs
VCVSRemoteFrameworkVersion
VCVSConfigHDRMode
VCVSActiveStreamID
-[VCVideoStream vcVideoReceiver:didReceiveSampleBuffer:isFirstFrame:]
-[VCVideoStream vcVideoReceiver:requestKeyFrameGenerationWithStreamID:firType:]
-[VCVideoStream vcVideoReceiverRequestKeyFrame:rtcpPSFBType:]
-[VCVideoStream avConferencePreviewError:]
-[VCVideoStream avConferenceScreenCaptureError:]
-[VCVideoStream thermalLevelDidChange:]
-[VCVideoStream cameraAvailabilityDidChange:]
VCVideoStream_ProcessConvertedFrame
-[VCVideoStream rateController:targetBitrateDidChange:rateChangeCounter:]
-[VCVideoStream redundancyController:redundancyVectorDidChange:]
_VCVideoStreamNWConnectionNotificationCallback
_VCVideoStreamNWConnectionPacketEventCallback
_VCVideoStreamVTPNotificationCallback
audioFeatures
videoFeatures
-[VCMediaStreamGroup initWithConfig:]
%@.streamGroup.stateQueue.%s.%u
%p streamGroupID=%s state=%d participantUUID=%@
-[VCMediaStreamGroup configureStreams]
-[VCMediaStreamGroup callDelegateWithBlock:]
-[VCMediaStreamGroup setParticipantJoinedToFirstMKITimer]
-[VCMediaStreamGroup startMediaStreams]
-[VCMediaStreamGroup stopMediaStreams]
-[VCMediaStreamGroup pauseMediaStreams]
Invalid state=%d
%@. Failed to pause streamToken=%u
/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCMediaStreamGroup.m
-[VCMediaStreamGroup resumeMediaStreams]
%@. Failed to resume streamToken=%u
-[VCMediaStreamGroup start]
%@. Failed already running streamToken=%u
-[VCMediaStreamGroup stop]
%@. Failed already stopped streamToken=%u
-[VCMediaStreamGroup pause]
-[VCMediaStreamGroup resume]
-[VCMediaStreamGroup mediaStream:didReceiveRTPGapForMediaKeyIndex:]_block_invoke
Codec Featues: allowAudioRecording=%d videoFeatures=%@
-[VCMediaNegotiationBlobV2CodecFeatures(Utils) printWithLogFile:prefix:]
{ VCAudioTier: payload=%d bundle=%d%s audioCodecBitrate=%d redNumPayloads=%d redMaxDelay20ms=%d networkBitrate=%d packetSize=%d payloadSize=%d headerSize=%d }
bundle
audioCodecBitrate
redNumPayloads
redMaxDelay
networkBitrate
-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke
conferenceWarmUpForCall
conferenceDeviceRole
conferenceReportingHierarchyToken
-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_2
conferenceInitializeNewCall
conferenceUsingBlobFormat
conferenceGetIsUsingBlobFormat
conferenceSetIsUsingBlobFormat
conferencePeerReportingIdentifier
conferenceSessionID
conferenceSetReportingIdentifier
conferenceSetSessionID
conferenceCallEvent
conferenceAddGKSCallEvent
conferenceParticipantID
conferenceConnectionBlob
conferenceGetConnectionBlob
conferenceInviteData
conferenceNonCellularCandidateTimeout
conferenceGetInviteData
conferenceGetCallMetadata
conferencePeerCN
conferenceSetPeerCN
conferenceNetworkQuality
conferenceNetworkQualityForCall
conferenceRequiresWifi
conferenceGetRequiresWifi
conferenceSetRequiresWifi
conferenceOldCallID
conferenceIsCaller
conferenceCapabilities
conferenceDestination
FILEDESCRIPTOR
conferenceStartConnectionUsingInviteData
conferenceStopCallID
conferenceCancelCallID
conferenceRemoteCancelledCallID
conferenceCallReport
conferenceCallReportProtobuf
conferenceCallReportProtobufID
conferenceSetCallReport
conferenceActive
conferenceSetActive
conferenceRemoteIPChange
conferenceGetIsOutputMeteringEnabled
conferenceSetIsOutputMeteringEnabled
conferenceGetIsInputMeteringEnabled
conferenceSetIsInputMeteringEnabled
conferenceGetIsInputFrequencyMeteringEnabled
conferenceSetIsInputFrequencyMeteringEnabled
conferenceGetIsOutputFrequencyMeteringEnabled
conferenceSetIsOutputFrequencyMeteringEnabled
conferenceGetOutputMeterLevel
conferenceGetInputMeterLevel
conferenceMicrophoneMute
conferenceGetIsMicrophoneMuted
conferenceSetIsMicrophoneMuted
conferenceLocalFrameRate
conferenceGetLocalFrameRate
conferenceLocalBitRate
conferenceGetLocalBitRate
conferenceRemoteFrameRate
conferenceGetRemoteFrameRate
conferenceRemoteBitRate
conferenceGetRemoteBitRate
conferenceRemotePacketLossRate
conferenceGetLocalPacketLossRate
conferenceGetRemotePacketLossRate
conferenceRoundTripTime
conferenceGetRoundTripTime
conferenceCallStats
conferenceGetStatsForCallID
conferenceSpeakerEnabled
conferenceSetIsSpeakerEnabled
conferenceGetIsSpeakerEnabled
conferenceNATType
conferenceGetNATType
conferenceSetAudioSending
conferenceSetPauseAudio
conferenceSetPauseVideo
conferenceServerInfo
conferenceSetServerInfo
conferenceLocalFrameWidth
conferenceGetLocalFrameWidth
conferenceLocalFrameHeight
conferenceGetLocalFrameHeight
conferenceRemoteFrameWidth
conferenceGetRemoteFrameWidth
conferenceRemoteFrameHeight
conferenceGetRemoteFrameHeight
conferenceProcessRelayRequestResponse
conferenceProcessRelayRequestUpdate
-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_53
conferenceSendARPL
conferenceEncryptData
conferenceSendData
conferenceGetLastActiveCallID
conferenceSetLastActiveCallID
conferenceUpdateCapabilities
conferenceShouldSendBlackFrameState
conferenceShouldSendBlackFrame
conferenceState
conferenceSetState
conferenceSetVisualRectangle
conferenceProtocolVersion
conferenceSetPeerProtocolVersion
VCNACKGenerator_AddPacketInfo
VCNACKGenerator_UpdatePlayoutRTPTimestamp
_VCNACKGenerator_GetBitrate
_VCNACKGenerator_UpdateSSRCContext
%5.3f
%5.3f
NackGenerator
.nackdump
Timestamp
RequestTime
Type
SSRC
HighestSeqNum
Bitmask
ResponseTime
_VCNACKGenerator_CheckBitrateLimits
_VCNACKGenerator_AttemptToRequestNACK
_VCNACKGenerator_ShouldGenerateNACK
_VCNACKGenerator_CalculateAndUpdateNACKGenerationThrottlingFactor
%5.3f
0x%x
NACK
-[VCSessionMessaging dealloc]
v28@?0@"NSData"8B16@"NSNumber"20
-[VCSessionMessaging sendMessage:withTopic:]
-[VCSessionMessaging sendMessage:withTopic:participantID:]
-[VCSessionMessaging sendMessageDictionary:withTopic:participantID:]
-[VCSessionMessaging sendReliableMessage:withTopic:participantID:withOptions:completion:]
%@=%@:
%@%@=%@:
%@=%@?
-[VCSessionMessaging newPackedMessageFromDictionaryV2:]
-[VCSessionMessaging newDictionaryFromUnpackedMessageV2:]
-[VCSessionMessaging searchMatchingTopic:payload:transactionID:fromParticipant:]
-[VCSessionMessaging controlChannel:topic:payload:transactionID:fromParticipant:]
-[VCSessionMessaging controlChannel:sendReliableMessage:didSucceed:toParticipant:]
-[VCSessionMessaging controlChannel:clearTransactionCacheForParticipant:]
%@ %@:%d
-[VCNetworkAddress getSockaddrStorage:size:]
%@ (%p)
vcMediaStreamDestIp
vcMediaStreamDestPort
vcMediaStreamDestIsIPv6
vcMediaStreamRemoteSSRC
vcMediaStreamSourcePort
vcMediaStreamSourceIsIPv6
vcMediaStreamLocalSSRC
vcMediaStreamCName
vcMediaStreamRecommendedMTU
vcMediaStreamRateAdaptationEnabled
vcMediaStreamDecryptionTimeoutEnabled
vcMediaStreamDecryptionTimeoutInterval
vcMediaStreamSRTPCipherSuite
vcMediaStreamRTCPXREnabled
vcMediaStreamRTCPRemotePort
vcMediaStreamSRTCPCipherSuite
vcMediaStreamSRTPSendMediaKey
vcMediaStreamSRTPReceiveMediaKey
vcMediaStreamCaptureSource
vcMediaStreamStreamInputID
vcMediaStreamNetworkClockID
vcMediaStreamJitterBufferMode
vcMediaStreamFixedJitterBufferSize
-[AVCVideoDataOutput initWithStreamToken:delegate:queue:error:]
AVCVideoDataOutput
-[AVCVideoDataOutput streamOutputServerDidDie:]
-[AVCVideoDataOutput streamOutput:didPause:]
-[AVCVideoDataOutput streamOutput:didStall:]
-[AVCVideoDataOutput streamOutput:didDegrade:]
%@[%p][CUMULATIVE] reorderedPacketsCount[%d] sentRequestCount[%d] receivedResponseCount[%d] ExpMovMeanRTT[%@] plrEnvelopeValue[%@] plrTier[%@]
%s:%d/%d,%d/%d;%s:%d/%d,%d/%d;
+[VCVideoFeatureListStringHelper deriveAspectRatioFLSWithPortraitRatio:landscapeRatio:expectedPortraitRatio:expectedLandscapeRatio:]
FLS;
+[VCVideoFeatureListStringHelper extractAspectRatios:prefix:landscapeX:landscapeY:portraitX:portraitY:]
+[VCVideoFeatureListStringHelper defaultPayload:]
+[VCVideoFeatureListStringHelper featureListString:maxSize:payload:featureListStrings:]
FLS;VRAE:0;SW:1;
FLS;SW:1;
-[VCSession(OneToOne) setupOneToOne]
ForceVCMediaQueueForOneToOne
-[VCSession(OneToOne) setupOneToOneMediaQueue]
-[VCSession(OneToOne) newNegotiatorForOneToOneWithRemoteParticipant:]
-[VCSession(OneToOne) setOneToOneConfigOnRemoteParticipant:]
-[VCSession(OneToOne) setupRateControllerOneToOne]
session_%@_1:1
-[VCSession(OneToOne) configureLocalParticipantWithOneToOneRemoteParticipant:isInitialConfiguration:]
-[VCSession(OneToOne) setupOneToOneMediaControlInfoGeneratorsWithVersion:oneToOneConfig:videoEnabled:]
-[VCSession(OneToOne) newParticipantOneToOneConfigWithIDSParticipantID:isLocal:mediaControlInfoVersion:videoEnabled:screenEnabled:remoteParticipant:]
-[VCSession(OneToOne) configureRemoteParticipantForOneToOne:]
VCGFTSWTT
VCSOTOST
-[VCSession(OneToOne) reportCompletedSwitchingToOneToOne:]
-[VCSession(OneToOne) switchFromOneToOneToMultiway]
-[VCSession(OneToOne) multiwayToOneToOneSwitchConfigure]
-[VCSession(OneToOne) switchFromMultiwayToOneToOne]
-[VCSession(OneToOne) startReportingForOneToOneEnabled:]
-[VCSession(OneToOne) negotiateOneToOneWithRemoteParticipant:]
-[VCSession(OneToOne) configureOneToOneRateController:isUsingCamera:isUsingScreen:]
-[VCSession(OneToOne) vcrcServerBagProfileNumber]
/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCSession+OneToOne.m
-[VCSession(OneToOne) addOneToOneParticipant:]
-[VCSession(OneToOne) completeTransitionToOneToOneEnabled:]
Successfully completed
Failed
-[VCSession(OneToOne) completionHandlerOneToOneEnabled:didSucceed:]_block_invoke
-[VCSession(OneToOne) dispatchedSetOneToOneModeEnabled:isLocal:]
VCSessionMessageOneToOneEnabled
VCSessionMessageOneToOneDisabled
VCSessionMessageTopicOneToOneEnabledState
-[VCSession(OneToOne) setupOneToOneABTesting]
-[VCSession(OneToOne) startOneToOne]
-[VCSession(OneToOne) setIsOneToOneRemoteMediaStalling:]_block_invoke
-[VCSession(OneToOne) reportActiveConnectionOneToOne]
-[VCSession(OneToOne) handleActiveConnectionChangeForOneToOne:]
-[SIPClientDataDictionary dealloc]
-[VCSessionMessageTopic dealloc]
-[VCSessionMessageTopic sendReliableMessage:participantID:withOptions:completion:]
com.apple.VideoConference.VCSessionMessageTopic.out
-[VCSessionMessageTopic sendMessage:participantID:withSequence:numRetries:]
-[VCSessionMessageTopic sendMessage:participantID:withSequence:numRetries:]_block_invoke
replayThreshold
-[VCSessionMessageTopic isDuplicateMessageID:messageHistory:participantID:]
messageHistory
messageID
expireTime
-[VCSessionMessageTopic purgeExpiredEntries:messageHistory:participantID:]
-[VCSessionMessageTopic passMessage:sequence:fromParticipant:]
com.apple.VideoConference.VCSessionMessageTopic.in
-[VCSessionMessageTopic clearTransactionCacheForParticipant:]
VCMemoryPool_Alloc
VCMemoryPool_Free
-[VCRedundancyControlAlgorithmAudioLegacy updateRedundancyStrategyWithNetworkStatistics:]
-[VCRedundancyControlAlgorithmAudioLegacy computeRedundancyInfo]
channels
-[AVCAudioPowerSpectrum(VCPrivateAccess) applyChannelBins:binCount:channelID:]
com.apple.AVConference.vcLinkProbing.delegateQueue
com.apple.AVConference.vcLinkProbing.serialQueue
-[VCLinkProbingHandler startActiveProbingOnLinks:]
-[VCLinkProbingHandler stopActiveProbingOnLinks:resetStats:]
-[VCLinkProbingHandler stopActiveProbingOnLinks:resetStats:]_block_invoke
-[VCLinkProbingHandler dispatchedUpdateProbingResults:]
LinkProbing: Updated probing results for linkID: %d -> %s
linkProbingInterval
linkProbingTimeout
linkProbingQueryResultsInterval
linkProbingConnectionLockdownPeriod
linkProbingExponentialMovingMeanFactor
linkProbingEnvelopeAttackFactor
linkProbingEnvelopeDecayFactor
0.25,2.5,10,20,30,100
linkProbingDuplicationWaitTimeout
linkProbingIdenticalQueryResultMax
linkProbingLockdownPeriod
-[VCLinkProbingHandler loadStorebagValues]
-[VCLinkProbingHandler queryProbingResults]
-[VCLinkProbingHandler queryProbingResults]_block_invoke
q24@?0@"VCLinkProbingResult"8@"VCLinkProbingResult"16
-[VCLinkProbingHandler updateLinkPreferenceOrder]
-[VCLinkProbingHandler probingLockdownEnded]
-[VCCallInfo init]
-[VCCallInfo updateWithLastDecodedFrameTime:time:]
Viceroy 1.4.0
Viceroy 1.4.1
Viceroy 1.4.2
Viceroy 1.4
Viceroy 1.5
Viceroy 1.6
Viceroy 1.7
-[AVCAudioPowerSpectrumMeter initWithConfig:delegate:queue:]
-[AVCAudioPowerSpectrumMeter dealloc]
-[AVCAudioPowerSpectrumMeter registerPowerSpectrumForStreamToken:]
-[AVCAudioPowerSpectrumMeter unregisterPowerSpectrumForStreamToken:]
-[AVCAudioPowerSpectrumMeter registerPowerSpectrumForCellularTapType:error:]
Platform doesn't support callular tapping
-[AVCAudioPowerSpectrumMeter unregisterPowerSpectrumForCellularTapType:error:]
-[AVCAudioPowerSpectrumMeter setupXPCConnection]
-[AVCAudioPowerSpectrumMeter storeDelegate:delegateQueue:]
com.apple.AVConference.AVCAudioPowerSpectrumMeter.notificationQueue
-[AVCAudioPowerSpectrumMeter setupPowerSpectrumMeter]
-[AVCAudioPowerSpectrumMeter registerBlocksForNotifications]_block_invoke
vcAudioPowerSpectrumServerDidDisconnect
-[VCMediaStreamRateAdaptation initWithDelegate:params:]
-[VCMediaStreamRateAdaptation configureRateControllerWithConfig:]
-[VCMediaStreamRateAdaptation start]
-[VCServerBag waitForBagLoad]
-[VCServerBag waitForBagLoad]_block_invoke_2
v16@?0@"NSNotification"8
com.apple.facetime
+[VCServerBag checkKeysAgainstHardcodedPrefs:]
+[VCServerBag verifyRequiredKeys:withError:]
No store bag is present so we failed the call.
Missing required store bag keys.
-[VCRedundancyControlAlgorithmAudio processNWConnectionStatistics:]
-[VCRedundancyControlAlgorithmAudio processRCNetworkStatistics:]
-[VCRedundancyControlAlgorithmAudio updateRedundancyPercentageWithPLRThresholds:]
-[VCIDRSchedulerPeriodGroup computeStreamsIDRPosition]
IDR Period Group: BasePeriodCount=%d frames:%d streams:%@
-[VCSession(Messaging) setupAudioEnabledMessages]_block_invoke
-[VCSession(Messaging) setupVideoEnabledMessages]_block_invoke
-[VCSession(Messaging) setupStreamGroupStateFetchMessage]_block_invoke
v32@?0@"NSDictionary"8@"NSError"16@"NSNumber"24
-[VCSession(Messaging) setupAudioPausedMessages]_block_invoke
-[VCSession(Messaging) setupOneToOneEnabledMessages]_block_invoke
-[VCSession(Messaging) setupVideoPausedMessages]_block_invoke
-[VCSession(Messaging) processSymptomFromMessage:participantID:isLocalInitiated:isLocalSideOnly:]
-[VCSession(Messaging) setupSymptomEnabledMessages]_block_invoke
v28@?0@"NSDictionary"8B16@"NSNumber"20
-[VCSession(Messaging) setupWRMAlertUpdateMessage]_block_invoke
-[VCSession(Messaging) setupMomentsMessages]_block_invoke
-[VCSession(Messaging) setupVideoRedundancyMessages]_block_invoke
-[VCSession(Messaging) setupPreferredInterfaceMessage]_block_invoke
-[VCSession(Messaging) setupPiPStateChangeMessage]_block_invoke
-[VCSession(Messaging) setupDisconnectMessage]_block_invoke
/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCSession+Messaging.m
-[VCSession(Messaging) setupMediaQualityDegradedMessage]_block_invoke
-[VCSession(Messaging) handleControlConfigMessage:forParticipantId:]
Received State Update:
-[VCSession(Messaging) remoteCellTechStateUpdate:maxRemoteBitrate:]
-[VCSession(Messaging) setupCellTechChangeMessages]_block_invoke
-[VCSession(Messaging) stateMessageDictionary]
-[VCSession(Messaging) broadcastMediaStateUpdateMessage]
Sending State Update:
VCSessionMessageTopicStreamGroupsState
-[VCSession(Messaging) processStreamGroupStateMessageKey:value:mediaTypeStates:]
-[VCSession(Messaging) processMediaTypeStatesWithMessage:mediaTypeStates:]
-[VCSession(Messaging) processMediaStateMessage:remoteParticipantID:]
{ %s: audioPayloads:%@ chosenAudioPayload:%@ chosenDTXPayload:%@ chosenRedPayloadType:%d             
 packetsPerBundle:%d useRateControl:%d bundlingScheme:%d allowAudioSwitching:%d supportsAdaptation:%d operatingMode:%d isRedEnabled:%d transmitROC:%d ignoreSilence:%d useWifiTiers:%d}
-[AVCMomentsRequest startWithError:]
-[AVCMomentsRequest endWithError:]
-[AVCMomentsRequest rejectWithError:]
-[AVCMomentsRequest initWithMediaType:requesterID:requesteeID:transactionID:]
-[AVCMomentsRequest dealloc]
%@: transactionID[%@] mediaType[%hhu] requesterID[%@] requesteeID[%@]
transactionID is nil
media type is invalid
mode is invalid
AVCMomentsRequest
-[AVCMomentsRequest validateWithError:]
-[VCAudioStreamConfig initWithClientDictionary:]
vcMediaStreamAudioStreamMode
vcMediaStreamEnableMaxBitrateOnNoChangeCMR
vcMediaStreamdtmfTonePlaybackEnabled
vcMediaStreamDTMFTsRate
vcMediaStreamTelephonyServiceSubscriptionSlot
vcMediaStreamAnbrEnabled
vcMediaStreamPreferredMediaBitRate
vcMediaStreamCodecType
-[VCAudioStreamConfig setupCodecWithClientDictionary:]
vcMediaStreamEVSChannelAwareOffset
vcMediaStreamEVSHeaderFullOnly
vcMediaStreamAMRIsOctetAligned
vcMediaStreamAMRDTXEnabled
vcMediaStreamPtime
vcMediaStreamCodecRateModePreferred
vcMediaStreamCodecRateModeMask
vcMediaStreamCodecBandwidthMask
vcMediaStreamNumRedundantPayloads
vcMediaStreamTxRedPayloadType
vcMediaStreamRxRedPayloadType
vcMediaStreamCNEnabled
-[VCAudioStreamConfig setupCNCodecWithClientDictionary:]
vcMediaStreamCNPayloadType
-[VCAudioStreamConfig setupDTMFCodecWithClientDictionary:]
vcMediaStreamDTMFPayloadType
-[VCVideoStreamSendGroup initWithConfig:]
-[VCVideoStreamSendGroup setupRedundancySettings]
Tried to create redundancy controller for mode but VCMediaStreamSendGroupConfig is nil
-[VCVideoStreamSendGroup setupRedundancyControllerForMode:]
-[VCVideoStreamSendGroup uplinkVideoStreamControllerForMode:]
-[VCVideoStreamSendGroup generateKeyFrameWithStreamID:firType:]
-[VCVideoStreamSendGroup updateEnabledState]
-[VCVideoStreamSendGroup setupVideoPriority]
-[VCVideoStreamSendGroup dispatchedUpdateActiveMediaStreamIDs:withTargetBitrate:mediaBitrates:rateChangeCounter:]
VCVSTxTemporalTier
-[VCVideoStreamSendGroup updateUplinkStreamsForPeerSubscribedStreams:]
streamId=%hu quality=%u, %dx%d.
-[VCVideoStreamSendGroup shouldSubscribeToStreamID:peerSubscribedStreams:]
-[VCVideoStreamSendGroup enableRedundancy:]
-[VCVideoStreamSendGroup setCaptureFrameRate:]_block_invoke
-[VCVideoStreamSendGroup startCapture]
VCVideoStreamGroup
-[VCVideoStreamSendGroup stopCapture]
-[VCVideoStreamSendGroup controller:didChangeActiveVideoStreams:]
-[VCVideoStreamSendGroup controller:didChangeActiveVideoStreams:]_block_invoke
v36@?0@"VCMediaStream"8@"NSArray"16@"NSArray"24B32
-[VCVideoStreamSendGroup sourceFrameRateDidChange:]
VCVideoStreamSendGroup_OnVideoFrame
-[VCVideoStreamSendGroup avConferencePreviewError:]
-[VCVideoStreamSendGroup thermalLevelDidChange:]
-[VCVideoStreamSendGroup cameraAvailabilityDidChange:]
-[VCVideoStreamSendGroup redundancyController:redundancyPercentageDidChange:]_block_invoke
-[VCVideoStreamSendGroup redundancyController:redundancyVectorDidChange:]_block_invoke
-[VCVideoStreamSendGroup vcMediaStreamDidRTPTimeOut:]
-[VCVideoStreamSendGroup vcMediaStreamDidRTCPTimeOut:]
-[VCVideoStreamSendGroup vcMediaStreamDidDecryptionTimeOut:]
-[VCVideoStreamSendGroup computeMaxScreenCaptureSize]
-[VCVideoStreamSendGroup maxStreamFrameRate]
-[VCVideoStreamSendGroup collectAndLogChannelMetrics:]
VCNAT64ResolverCleanup
VCNAT64ResolverRegisterForPrefixUpdate
VCNAT64ResolverDeregisterAll
VCNAT64ResolverGetPrefix
VCNAT64ResolverGetSharedInstance
com.apple.VTP.DNSCallbackQueue
com.apple.VTP.DNSRetryQueue
VCNAT64ResolveNAT64Prefix
VCNAT64ResolveNAT64Prefix_block_invoke
VCNAT64ResolveNAT64Prefix_block_invoke_2
v20@?0i8^{?=i[12C]}12
VCNAT64ResolverDeregisterFromInterface
VCSDInfoConstructWithSocket
VCSDInfoIsPacketFromKnownRemote
VCSourceDestinationInfo IPPort mode with IP port: %s-%s isRelay %d, relayChannelNumber %d
VCSourceDestinationInfo BoundSocket mode with socket: %d destination: %s
VCSourceDestinationInfo ConnectedSocket mode with socket: %d
VCSourceDestinationInfo IDSLink mode with datagramChannel:%p datagramToken: %d linkID: %d
VCSourceDestinationInfo NW mode with conn: %p
Unrecogized VCSourceDestinationInfoMode %d
VCSDInfoIsSrcDstInfoMatchedWithIP
VCSDInfoIsSrcDstInfoMatchedWithChannelToken
VCSDInfoIsSrcDstInfoMatchedWithNWConnection
com.apple.AVConference.VCTestMonitorManager.xpcCommandQueue
com.apple.AVConference.VCTestMonitorManager.xpcNotificationQueue
-[VCTestMonitorManager reportSessionMediaDaemonStats:]
-[VCTestMonitorManager registerBlocksForService]_block_invoke
-[VCCaptionsReceiver processCaptionsData:]
-[VCRedundancyControllerAudio initWithDelegate:statisticsCollector:mode:]
UseNWConnectionNotificationForAudioRedundancyController
forceAudioRedundancyPercentage
forceAudioRedundancyInterval
-[VCRedundancyControllerAudio reportRedundancyPercentage:redundancyInterval:]
-[VCControlChannelDialogV1 processMessageFromParticipant:transactionID:messageType:transactionDelegate:]
+[VCControlChannelDialogV1 encryptMessage:buffer:size:sequenceNumber:transactionDelegate:]
-[VCControlChannelDialogV1 newDataFromMessage:topic:transactionID:isReliable:transactionDelegate:]
%@%@%@
+[VCControlChannelDialogV1 newEncryptedMessageFromMessage:sequenceNumber:transactionDelegate:]
+[VCControlChannelDialogV1 sendConfirmationToParticipantID:transactionID:sessionID:transactionDelegate:]
+[VCControlChannelDialogV1 processMessageFromParticipant:transactionID:messageType:sessionID:transactionDelegate:]
-[VCControlChannelDialogV1 decryptMessageWithMKI:message:buffer:size:sequenceNumber:]
-[VCControlChannelDialogV1 processEncryptedPayload:isData:topic:sequenceNumber:MKIData:participantID:]
-[VCControlChannelDialogV1 processMessageData:participantID:topic:transactionID:messageStatus:isInternalMessage:]
Will not
Will
-[VCCALayerHost layoutSublayers]
-[AVCRemoteVideoClient initWithStreamToken:delegate:]
com.apple.avconference.remotevideo
-[AVCRemoteVideoClient dealloc]
-[AVCRemoteVideoClient setVideoLayer:forMode:]
-[AVCRemoteVideoClient slotForMode:]
-[AVCRemoteVideoClient setLayerHostBounds:]
-[AVCRemoteVideoClient createCALayerHostForRootLayer:withContextId:]
AVCRemoteVideoCALayerHost%p
RemoteParticipantVideoLayerScreen
-[AVCRemoteVideoClient setRemoteVideoLayerBounds:]
-[AVCRemoteVideoClient setVideoLayerHost:forMode:]
-[AVCRemoteVideoClient remoteScreenAttributesDidChange:streamToken:]
-[AVCRemoteVideoClient remoteVideoAttributesDidChange:streamToken:]
-[AVCRemoteVideoClient remoteVideoDidPause:streamToken:]
-[AVCRemoteVideoClient remoteMediaDidStall:streamToken:]
-[AVCRemoteVideoClient remoteVideoDidDegrade:streamToken:]
-[AVCRemoteVideoClient remoteVideoDidSuspend:streamToken:]
AVCRemoteVideoSubLayer%p(%d)
-[AVCRemoteVideoClient subLayerRefForMode:]
bounds
-[AVCRemoteVideoClient observeValueForKeyPath:ofObject:change:context:]
-[AVCRemoteVideoClient adjustInfoSubLayerBounds:forSuperLayer:]
AVCRemoteVideoInfoLayer%p(%d)
L:%@ -- R:%@
-[AVCRemoteVideoClient updateConnectionInfoWithLocalInterfaceType:remoteInterfaceType:]
-[AVCRemoteVideoClient drawText:inSubLayer:]
AVCRemoteVideoInfoLayer
Bitrate rule bitrate %u connection type %d limit %@
-[VCBitrateArbiter initWithDeviceRole:callLogFile:]
-[VCBitrateArbiter readStoreBagValues:]
%s: overriding TCP Relay bitrate with storebag value of %d
-[VCBitrateArbiter maxAllowedBitrateForConnectionType:]
-[VCBitrateArbiter maxAllowedBitrateForVCConnection:forLocalInterface:encodeRule:]
Local
Remote
-[VCBitrateArbiter maxAllowedScreenShareBitrateForConnection:]
-[VCBitrateArbiter maxAllowedAudioOnlyBitrateForConnection:]
-[VCBitrateArbiter maxAllowedBitrateRuleForConnection:]
-[VCBitrateArbiter updateNegotiatedSettings:]
-[AVCPacketRelayDriver startMonitoringFileDescriptor:forConnection:]
-[AVCPacketRelayDriver stopMonitoringFileDescriptor:]
-[AVCPacketRelayDriver init]
-[AVCPacketRelayDriver dealloc]
VCCaptionsDecoder_Decode
switches
oneToOneModeSupported
mediaControlInfoSubVersion
1.2.11
ZLibAndGZipCompress
ZLibAndGZipDecompress
VCStatisticsHistory_AddStatsHistory
-[VCStatisticsHistory getPacketLossRateAtTime:inMostRecentDuration:]
-[VCStatisticsHistory getSendingBitrateAtTime:inMostRecentDuration:]
-[VCStatisticsHistory getReceivingBitrateAtTime:inMostRecentDuration:]
-[VCStatisticsHistory getServerStatsBitrateAtTime:inMostRecentDuration:]
-[VCStatisticsHistory getBurstyLossAtTime:inMostRecentDuration:withPercentile:]
VCStatisticsHistory_AddAndPruneSendHistory
VCStatisticsHistory_GetSendHistoryElement
-[VCStatisticsHistory getStatsHistoryElementIndex:time:inMostRecentDuration:]
_VCStatisticsHistory_HandleWrappedAroundByteCountForStats
_VCStatisticsHistory_ResetHistory
-[VCMediaNegotiationBlobV2MomentsSettings(Utils) initWithVideoCodecs:imageTypes:capabilitiesOneToOne:capabilitiesMultiway:]
Moments settings: 
imageTypes
videoCodecs
-[VCMediaNegotiationBlobV2MomentsSettings(Utils) printWithLogFile:prefix:]
%@=[
createDirectory
openLogDump
VRLogfileAlloc
VRLogfileZip
enableZipDump
%s%c%s
Library/Caches/com.apple.VideoConference
/logs/
/var/tmp/AudioCapture/AVC/
+[LogDumpUtility logFilename:dumpID:logNameType:prefix:suffix:]
%04d%02d%02d-%02d%02d%02d-%@-%@%@
%@-%@%@
+[LogDumpUtility createFileListSortedByTimestamp:]
+[LogDumpUtility removeFilesInDirectory:olderThan:]
(.*)(\d{10})(-.*)$
%02d%02d%02d.%06d
_VRLogfileZipToFile
appX
appY
appW
appH
dispID
uiState
uiLayout
displayRect=[%.0f, %.0f, %.0f, %.0f] layout=%u state=%u
-[VCSessionPresentationInfo serialize]
-[VCSessionPresentationInfo unserialize:]
-[VCSessionPresentationInfo setAvcSessionPresentationInfo:]
-[AVCSessionConfiguration setSessionMode:]
vcSessionType
vcSessionParentHierarchyToken
vcSessionConversationID
vcSessionConversationTimeBase
vcSessionConversationTimeBaseTruncated
vcSessionServiceName
vcSessionParentNWActivity
-[VCVideoFrameBufferPool addFrame:time:]
-[VCVideoFrameBufferPool releaseFrameWithTime:]
VCTransportStreamRunLoop
VCTransportStreamRunLoopCreateWithTransportStreams
[VCTransportStreamRunLoop %p]
_VCTransportStreamRunLoopCreateIfNeeded
payloadSpecOrPayloads
streamIndex
requiredPackedPayload
optionalPackedPayload
coordinateSystem
VCAudioReceiver
VCAudioReceiver_CreateReceiver
forceUseInternalRTPThreading
com.apple.avconference.audioreceiver.rtprecvproc
session_%s-participant_%s
VCAudioReceiver_Finalize
_VCAudioReceiver_StartIssueDetector
VCAudioReceiver_Start
VCAudioReceiver_Stop
VCAudioReceiver_GetLatestAudioTimestamp
VCAudioReceiver_SetupDecoders
VCAudioReceiver_RegisterCodecRateModeRequestCallback
VCAudioReceiver_RegisterActiveAudioStreamRequestCallback
VCAudioReceiver_ResetLagReference
VCAudioReceiver_UpdateCellTech
VCAudioReceiver_GetActiveStreamId
VCAudioReceiver_GetPercentPacketsLateAndMissing
VCAudioReceiver_PullAudioSamples
VCAudioReceiver_CollectChannelMetrics
VCAudioReceiver_UpdateStallMetrics
VCAudioReceiver_DiscardQueueExcess
_VCAudioReceiver_SetActiveStream
VCAudioReceiver_CalculateBurstLoss
_VCAudioReceiver_SplitRedPacket
VCAudioReceiver_ReportAWDMetrics
VCAudioReceiver_UpdateWrmMetrics
VCAudioReceiver_GetJitterBufferMetrics
VCAudioReceiver_SendStartCallReport
VCAudioReceiver_SendEndCallReport
VCAudioReceiver_SetMagicCookieForPayload
VCAudioReceiver_SetTargetStreamID
VCAudioReceiver_ProcessCellularNetworkNotification
VCAudioReceiver_ProcessConnectionType
_VCAudioReceiver_Lock
_VCAudioIssueDetectorStopAndFinalize
_VCAudioReceiver_Cleanup
_VCAudioReceiver_RegisterStatistics
_VCAudioReceiver_ProcessWiFiNetworkNotification
_VCAudioReceiver_RegisterTransportCallbacks
v24@?0^v8^{_RTPPacket=i(?={_RTPMediaPacket=iiiSIISBdBBBQ[12S]CC{?=iiBQ}Q{VCBlockBuffer_t=^{OpaqueCMBlockBuffer}Q*}{VCBlockBuffer_t=^{OpaqueCMBlockBuffer}Q*}{VCBlockBuffer_t=^{OpaqueCMBlockBuffer}Q*}BBB}{?=iSd(?={?=SCSCcIIII}{?=SSS[6{?=CS[500S]}]}{?=SS})}){?=^{_RTPPacket}}}16
v24@?0^v8^{_RTCPPacketList=(tagNTP=Q{?=II})C[10^{tagRTCPPACKET}]^{OpaqueCMBlockBuffer}*QI[1472C][12S]CBQ{?=^{_RTCPPacketList}}}16
_VCAudioReceiver_HandleRTPPacket
_VCAudioReceiver_HandleRTPMediaPacket
_VCAudioReceiver_ShouldProcessAudioPacket
_VCAudioReceiver_CompleteStreamSwitch
VCASActiveStreamID
_VCAudioReceiver_SwitchStreamConfigs
_VCAudioReceiver_DecryptAndFillAudioPacket
_VCAudioReceiver_Decrypt
_VCAudioReceiver_ValidateAndEnqueuePackets
_VCAudioReceiver_EnqueuePacket
_VCAudioReceiver_ProcessCMR
_VCAudioReceiver_ParsePacket
_VCAudioReceiver_UpdatePacketHistory
_VCAudioReceiver_HandleRTPBasebandNotificationPacket
_VCAudioReceiver_ProcessAudioRTCPInternal
_VCAudioReceiver_ProcessAudioRTCPSRPacketInternal
_VCAudioReceiver_UnregisterStatistics
_VCAudioReceiver_UnregisterReportingTask
_VCAudioReceiver_RegisterReportingTask_block_invoke
AJQS
XJoW
FrameErasureRate
FrameSpeechErasureRate
JitterErasureRate
WindowedFrameErasureRate
RedErasureCompensationRate
RedRxPlayedCount
RedRxPlayedBytes
FramesPlayedCount
FrameErasureCount
MaxConsecutiveAudioErasures
TimescaleRate
SpeechTimescaleRate
SilenceTimescaleRate
TotalTimescaleCount
TotalExpandTimescaleCount
TotalCompressTimescaleCount
TotalSpeechTimescaleCount
TotalSilenceTimescaleCount
UJBL
RedRxCount
RedRxBytes
RedRxDiscardCount
RedRxDiscardBytes
JitterBufferTargetChanges
ARxR
APktRx
MSTC
MSTT
MMST
forceNOLOG
_VCAudioReceiver_CalculateRTPMetrics
_VCAudioReceiver_GetRTPMetricsFromStreams
_VCAudioReceiver_ComputeExtendedTimestamp
_VCAudioReceiver_ReceiveProc
_VCAudioReceiver_ProcessRTPPacket
_VCAudioReceiver_ProcessRTCPPacket
RTPPacketLossRate
JitterBufferUnderflowRate
Payload
_VCAudioReceiver_CollectAWDMetrics
JitterBufferResidencyTime
JitterPreloadQueue_AudioFrameAlloc
JitterPreloadQueue_AudioPacketAlloc
JitterPreloadQueue_Create
JitterPreloadQueue_Destroy
JitterPreloadQueue_Enqueue
shouldApplyRedAsBoolean
-[VCAudioTransmitter initWithConfig:]
-[VCAudioTransmitter shouldUpdateCodecBitrate:]
-[VCAudioTransmitter shouldUpdateCodecBandwidth:]
-[VCAudioTransmitter handleCodecModeChangeEvent:didUpdateBandwidth:didUpdateBitrate:]
-[VCAudioTransmitter sendCodecModeChangeEvent:]
/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCAudioTransmitter.m
Couldn't setup audio selector
Bad audio payload?
Bad remote payload?
Couldn't allocate memory for audio
Malloc?
Couldn't allocate encode buffer for audio
-[VCAudioTransmitter gatherRealtimeStats:]
ATxR
AFEC
ATxRPrimary
-[VCAudioTransmitter reportRedundancyConfigChange]
DtxFramesTotal
DtxFrameSilent
DtxCompRatio
TxBytesActual
TxBytesEstimate
-[VCAudioTransmitter allocateLastInputSampleBuffer:]
VCAudioTransmitter_PushAudioSamples
-[VCAudioTransmitter chooseAudioNetworkBitrate]
-[VCAudioTransmitter setupAudioTierPicker]
-[VCAudioTransmitter updateAudioTxBitrate]
-[VCAudioTransmitter useAudioPayload:withBitrate:]
rtpsend
-[VCAudioTransmitter start]
-[VCAudioTransmitter stop]
-[VCAudioTransmitter setRedNumPayloads:withMaxDelay:shouldResetHistory:]
-[VCAudioTransmitter redundancyController:redundancyPercentageDidChange:]
-[VCAudioTransmitter processNWConnectionNotification:]
-[VCAudioTransmitter audioIssueDetectorCreateAndConfigure]
-[VCAudioTransmitter audioIssueDetectorStopAndFinalize]
VCAudioTransmitter_ReportAWDMetrics
VCAudioTransmitter_ProcessConnectionType
VCAudioTransmitter_UpdateWrmMetrics
_VCAudioTransmitter_SendAudioBundle
_VCAudioTransmitter_SendAudioPacketWithPayloadLength
_VCAudioTransmitter_SendSframeEncryptedAudioPacket
_VCAudioTransmitter_BundleAndSendSamples
voicedFrameCount
silenceFrameCount
_VCAudioTransmitter_GenerateControlInfo
buffer
ARPLSessionCreate
ARPLSend_internal
reliable
non-reliable
ARPL_Sendto
ARPLSessionRelease
checkSendingSet
com.apple.AVConference.SIP.arplMonitorProc
clientVersion
deviceType
frameworkVersion
osVersion
-[VCEmulatedOutputQueue runUntilTime:]
-[VCEmulatedOutputQueue connectFrom:]
UplinkRateAdaptation
RateIncreaseMonitorPeriod
RateDecreaseMonitorPeriod
RateIncreaseUplinkBLERThreshold
RateDecreaseUplinkBLERThreshold
-[VCTelephonyInterface validateCarrierBundleConfigParameters:forKey:defaultValue:minValue:maxValue:]
-[VCTelephonyInterface setupVCMediaStreamRateAdaptationConfig:]
AVCVirtualTTYDevice
-[AVCVirtualTTYDevice initWithMode:error:streamToken:]
-[AVCVirtualTTYDevice dealloc]
-[AVCVirtualTTYDevice setDelegate:]
-[AVCVirtualTTYDevice start]
-[AVCVirtualTTYDevice stop]
-[AVCVirtualTTYDevice sendCharacter:]
-[AVCVirtualTTYDevice sendText:]
-[AVCVirtualTTYDevice registerBlocksForDelegateNotifications]_block_invoke
vcAudioPayloadConfigKeyPayloadType
vcAudioPayloadConfigKeyInputSampleRate
vcAudioPayloadConfigKeyBlockSize
vcPayloadConfigKeyInternalBundleFactor
vcPayloadConfigKeyDTXEnabled
vcPayloadConfigKeyOctetAligned
vcPayloadConfigKeyUseSBR
vcPayloadConfigKeySampleRate
vcPayloadConfigKeyEVSSIDPeriod
vcPayloadConfigKeyEVSChannelAwareOffset
vcPayloadConfigKeyEVSHeaderFullOnly
vcPayloadConfigKeyCodecBitrates
vcPayloadConfigKeyPreferredBitrate
vcAudioPayloadConfigKeyPayloadTypeOverride
vcAudioPayloadConfigKeyOPUSInBandFecEnabled
vcAudioPayloadConfigKeySupportedBandwidths
-[VCAudioPayloadConfig configure:]
forceAACELDBitrate
-[VCAudioPayloadConfig aacBitrate]
%@ payload=%d blockSize=%d codecSampleRate=%d codecSamplesPerFrame=%d inputSampleRate=%d inputSamplesPerFrame=%d isDTXEnabled=%d octedAligned=%d useSBR=%d, internalBundleFactor=%d initialBitrate=%d
JLagProcessor_Initialize
JLagProcessor_NewStream
JLagProcessor_Process
JLagProcessor_ComputeLag
Moved reference to Secondary 
JLagProcessor_CalculatePacketLag
JLagProcessor_RecordOWRD
JLagProcessor_DetectSpike
JLagProcessor_IsSpikeTimeout
_JTargetJBEstimator_AddLagToHistory
Leaving SPIKE, SpikeSize = %f 
Entering %s SPIKE, earliest Lag = %f
SLOPE
JUMP
_JTargetJBEstimator_GetNewMinLag
_JTargetJBEstimator_DiscardExcessFromHistory
_JTargetJBEstimator_AddLagToCdf
_JTargetJBEstimator_GetJBTargetFromEstimatedTarget
transportStreamStreamTypeKey
-[VCTransportStreamGFT initWithTransportSessionID:options:]
-[VCTransportStreamGFT dealloc]
-[VCTransportStreamGFT VCTransportStreamSendPacket:]
-[VCTransportStreamGFT receivePacket:]
-[VCTransportStreamGFT registerPacketCallbackContext:callback:]
v28@?0i8^v12^{_VTPPacket=d{sockaddr_storage=CC[6c]q[112c]}I{tagIPPORT=i[16c](?=I[16C])S}{tagVPKTFLAG=iIIBBBBii{tagVCSourceDestinationInfo=i(?={?={tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{?=BS}}{?=ii{tagIPPORT=i[16c](?=I[16C])S}i}{?=I{?=cSCSC}B}{?=@})I^{tagVCSourceDestinationInfo}^v}CiiiiiBBB{tagVCIDSChannelDataFormat=[12S]CBSCBBQBBBS{?=SSSSS}BBBQBSBBB}{tagPKT_TAG=[4Q]}I[16C]BB}{VCBlockBuffer_t=^{OpaqueCMBlockBuffer}Q*}}20
-[VCTransportStreamGFT unregisterPacketCallback]
q24@?0@"VCSessionBandwidthAllocationTableEntry"8@"VCSessionBandwidthAllocationTableEntry"16
v32@?0@"NSNumber"8@"VCSessionBandwidthAllocationTableStreamInfo"16^B24
-[VCSessionBandwidthAllocationTable newAggregatedBandwidthTableWithRedundancy:redundancyEnabledFor720Stream:enableMap:]
-[VCSessionBandwidthAllocationTable shouldAppendEntry:screenEncoderGroups:]
-[VCSessionBandwidthAllocationTable printTable:]
-[VCSessionBandwidthAllocationTable printTable:]_block_invoke
v32@?0@"NSNumber"8@"VCSessionBandwidthAllocationTableEntry"16^B24
com.apple.avconference.VCEffectsManager.xpc.commands
-[VCEffectsManager updateThermalLevel:]_block_invoke
-[VCEffectsManager flushRemoteQueue]_block_invoke
vcEffectsFlushRemoteQueue
-[VCEffectsManager capturedPixelBuffer:depthDataPixelBuffer:time:imageData:]
-[VCEffectsManager checkEffectsHealth]
WarpSpeech
SkipSilence
DupSpeech
DupSilence
DupDTX
DiscardSpike
Normal
Suspend
VCAudioPlayer
_VCAudioPlayer_SetPlaybackFormat
_VCAudioPlayer_InitializeBuffers
VCAudioPlayer_Initialize
VCAudioPlayer_NewStream
VCAudioPlayer_Finalize
printMissingAudioPackets
VCAudioPlayer_UpdateLosses
_VCAudioPlayer_PerformQueueGrowth
_VCAudioPlayer_DetectLateFrame
_VCAudioPlayer_HandleHoleDetection
VCAudioPlayer_SetTargetBoostMode
VCAudioPlayer_GetSilenceSamples
_VCAudioPlayerDTMF_GetDTMFSamples
audioQueueManagementMode
_VCAudioPlayer_InitializeQueueSteeringAlgo
audioPlayerQueueTrendingUpThreshold
audioPlayerQueueTrendingDownThreshold
audioPlayerSpeechOnsetOffsetProtectionTime
audioPlayerQueueSteeringMultiplier
enableAudioPlayerDump
.csv
STime,FrameSeqNum,FrameTimestamp,SampleRate,FrameSPF,FrameDtx,InSilence (low energy),FrameCodec,QueuedSamples,LeftOverSamples,AvgQSize,DesiredQSize,SpeechOnsetProtected,SpeechOffsetProtected,SamplesToAdjust,SamplesAdjusted,SamplesRequested,LeftOverSamplesOutput,SamplesNeed,PlayerMode,QueueGrowthMode,DecodeType,SamplesDecoded,DecSkip:Adjust,DecSkip:SamplesOut,SamplesIn,SamplesOut,InputBufferSampleCount,OutputBufferSampleCount,InputBufferTS,OutputBufferTS,IsNilDecode,NilDecodeCount,IsErasure,ErasuresCount,PacketLifeTime,PacketLifetimeCDFBin,PacketLifeTime5Perc,PacketLifeTime10Perc,PacketLifeTimeAvg,PacketLifeTime90Perc,InterArrivalTime,PacketLifetimeIsTrendingUp,PacketLifetimeIsTrendingDown,PacketLifetimeZeroCount,NumberOfPacketsWithHighInterarrival,AvgQSizeInSec,DesiredQSizeInSec,Underflow,ErasuresCountShortWindow,ErasuresCountLongWindow,QueueSteeringOffset,ShouldGrowQueue,ShouldShrinkQueue,ShouldProactivelyShrinkQueue,CurrentIndex,packetLifetimeIsLow,SpikeNeedsProtection,MinimumQueueSizeProtected,QueueSteeringIsPositive,NewSpikeDetected,ExitedSpike,queueGrewDueToSpike,SpikeDetected,SteeringNegativeWithErasures,LowQueueSize,HighQueueSize,ErasuresLongTermIsZero,ErasuresShortTermIsZero,ErasureReduced,TenPercentileHigherThanMin,FivePercentileHigherThanMin,NinetyPercentileHigherThanTarget,PacketLifetimeAvgHigherThanTarget,NegativeQueueSteeringWithErasures,SomePacketsHadZeroPacketLifetime,HasHighInterarrivalFrames,FirstSpeechPacketLifetime,IsNormalPacketFlow,JitterIsLow,MinQueueSizeBuildThreshold,IsMinQueueRebuilt,QueueSizeThresholdMet,PacketLifetimeThresholdMet,ShouldExitQueueGrowth,Channel1Rms,Channel2Rms,Channel1RmsAvg,Channel2RmsAvg,EnergyDecayFactor,Rms,RmsAvg,
_VCAudioPlayer_ShouldPerformQueueGrowth
_VCAudioPlayer_FillSilenceBuffer
Warning: Jitter Queue underflow detected. UnderflowCount=%d  lastDecodedTimestamp=%u
%s, %u, %u, %d, %d, %d, %u, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %s, %s, %s, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %f, %d, %f, %f, %f, %f, %f, %d, %d, %d, %d, %f, %f, %d, %d, %d, %f, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %f, %f, %f, %f, %f, %f, %f 
NilDecode
FrameDecode
SpkrProc: GetSamples
_VCAudioPlayer_GetAudioSamples
Warning: Timestamp did not increment! prevTimestamp=%d
_VCAudioPlayer_CalcAdjustment
_VCAudioPlayer_ProtectMinimumQueue
_VCAudioPlayer_RunQueueSteeringAlgo
_VCAudioPlayer_HandleQueueSteeringReset
_VCAudioPlayer_SteerQueueCommand
_VCAudioPlayer_ExecuteQueueSteering
Proactively 
_VCAudioPlayer_DiscardSamples
Warning: JQ too high, discarding. CurrentJQSize:%f currentTime:%f lastSpkrCallback:%f
Critical: Average JB queue size is negative!
_VCAudioPlayer_DecodeSamples
Warning: Timeout in decoder loop. Updating samplesToDecode to %d
Critical: Invalid samplesToDecode=%d samplesNeed=%d, inputBuffer.playbackBuffer=%p, inputBuffer.samples=%d, decoded=%d
Invalid samplesToDecode
Warning: Late packet %s. %.01fms (%u - %u %u %d %u) (Jitter Size = %f) DTX %d Seq num %d
dropped
played out
_VCAudioPlayer_DecodeSpeech
SpkrProc: SoundDec_Decode
Warning: Sound decoding failed. Timestamp=%d SeqNumber=%d DTX=%d
_VCAudioPlayer_HandleComfortNoiseTransition
_VCAudioPlayer_UpdateOpusDecodeFECStatus
_VCAudioPlayer_AddFrameToHistory
_VCAudioPlayer_CalculateQueueSteeringKPIs
_VCAudioPlayer_CalcPacketLifeTimeCDFs
_VCAudioPlayer_UpdateBurstInfo
_VCAudioPlayer_DecodeSilence
Warning: Nil decoding failed
_VCAudioPlayer_GetSilenceBufferSampleCount
_VCAudioPlayer_UpdateSilenceDecodeMetrics
_VCAudioPlayer_PerformPostDecodeActions
_VCAudioPlayer_UpdateMultiChannelRMS
_VCAudioPlayer_UpdateMultiChannelAverageEnergy
Warning: Active Speech Timescaling did not complete! Result=%d
SpkrProc: Skip Silence
SpkrProc: Dup
SpkrProc: Copy
_VCAudioPlayer_DecodeSkipSilence
_VCAudioPlayer_DecodeDup
Critical: Average JB queue size is negative!. Current size: %f new size: %f samplesDelta: %d needed samples: %d audioPlayer mode: %d silent: %d
_VCAudioPlayer_UpdateAvgQueueSize
Critical: Number of samples in the input buffer would have become negative! samples=%d samplesIn=%d
_VCAudioPlayer_UpdateInputBuffer
_VCAudioPlayer_UpdateOutputBuffer
Critical: Number of samples in the output buffer would have become negative! samples=%d sampleCount=%d
_VCAudioPlayer_FinalizeOutputBuffer
Critical: Number of samples in the output buffer became negative! samples=%d sampleCount=%d
PacketThread_Create
com.apple.avconference.packetThread.%s
_PacketThread_StorePacket
PacketThread_SendPacket
PacketThread_Destroy
PacketThread_AllocatePacketBuffer
SendPacketsProc
_PacketThread_PullPacket
forceScreenHWI
-[VCDefaults forceScreenHWI]
forceDisableThermal
ARCaptureEnabled
forceMirroredCapture
forceEnablePearlCamera
forceDisableVideoRuleWiFi1080
forceDisableVideoRuleCell720
forceThermalLevelFramerate
enableBitstreamCapture
enableRxDecodeYUVDump
-[VCDefaults enableRxDecodeYUVDump]
enableVPBLogging
enableRecvBitstreamDump
enableTxSourceYuvDump
-[VCDefaults enableTxSourceYuvDump]
enableTxBitstreamDump
enablePacketLogging
extraPL
enableTxTimestampAlignmentLogs
encodingScore
canDecodeHD
disableVAD
bundleAudio
-[VCDefaults bundleAudio]
AllowAudioRecording
-[VCDefaults audioRecordingEnabled]
forceAudioPayload
forceAudioBitrate
forceAudioPacketsPerBundle
forceHWAudioSampleRate
audioPowerThreshold
audioPowerTimeInterval
forceUseFloat
disableAudioPowerSpectrumRegister
disableRed
forceRedNumPayloads
forceRedMaxDelay
forceAACELDFrames
forceVideoStreamResolution
forceVideoStreamTxMaxBitrate
forceVideoStreamTxMinBitrate
forceVideoStreamFramerate
forceVideoStreamKeyFrameInterval
forceVideoStreamRxMaxBitrate
forceVideoStreamRxMinBitrate
forceVideoStreamDisableBitrateCap
forceVideoStreamPayload
enableHEIFAndHEVCForMoments
videoStreamRateControlDumpEnabled
videoStreamRateControlAlgorithm
forceDisableMediaQueue
enableMediaQueueDump
rateControllerType
rateControlStatisticsQueueWaitTime
enableBWEDump
forcedRxCap
forcedRxRate
basebandSlowDownFactor
forcePacketExpirationTime
forceVideoRedundancyPercentage
max2GRate
forceIPv6
enableiRATSuggestion
localWRMLinkType
localRATTypeOverride
enableGFTStatsReporting
enableGFTStatsReceiveThread
pauseHeartbeatInterval
shouldDisplayVideoInfoLayer
forceWiFiAssist
kVCDefaultForceWiFiAssistOutOfBudget
FaceTimePhotosEnabled
dumpMediaBlob
CameraVideoStabilization
ForceOneToOneMode
SupportsOneToOneMode
TelephonyUtilities
conversationOneToOneModeEnabled
-[VCDefaults supportsOneToOneMode]
MaxActiveVideoEncoders
MaxActiveVideoDecoders
ForceEVSWideBand
forceMuteAtStart
minParticipantCountSendVoiceActiveOnly
forceFECRepairStream
enableAudioDumpParticipantRemote
enableAudioDumpParticipantLocal
forceDisableMediaPriority
audioPriorityDecaySlow
audioPriorityDecayFast
audioPriorityRampUp
audioVoiceDetectionSensitivity
silenceLevelMovingAveragePeriod
forceAudioPriorityValue
-[VCDefaults forceAudioPriorityValue]
forceAudioPriorityEnabled
multiwayAudioNetworkBitrateCapWifi
multiwayAudioNetworkBitrateCapCellular
multiwayVideoNetworkBitrateCapWifi
multiwayVideoNetworkBitrateCapCellular
forceDisableFaceZoom
forceDynamicEffectsFrameRate
depthFrameRateMultiplier
forceDisableEffectsHealthCheck
forceDisableVideoDegraded
forceDisableMediaStalled
effectsFrameRate
-[VCDefaults shouldOverrideEffectsFramerate:]
forceDisableMediaEncryption
forceDisableMessageEncryption
forceDisableReporting
disableProcessSpecificRequirements
forceDisableSSRCCollisionDetection
prominenceActiveProbabilityThreshold
-[VCDefaults prominenceActiveProbabilityThreshold]
prominenceActiveAccumulationThreshold
prominenceInactiveProbabilityThreshold
prominenceInactiveAccumulationThreshold
remoteMediaStallTimeout
VCDefaults_GetDoubleValueForKey
_VCDefaults_GetBoolValueForKey
VCDefaults_GetIntValueForKey
VCDefaults_CopyValueForKey
Message
EncryptedMessage
EncryptedData
Status
TransactionID
VCExternalClientDataTopic
com.apple.VideoConference.VCControlChannel.AsyncProcessingQueue
flushActiveMessages:
Not supported method %@
Class VCControlChannel should not be instantiated directly. Use VCControlChannelFaceTime or VCControlChannelMultiWay instead.
sendReliableMessageAndWait:
sendReliableMessage:
sendReliableMessageAndWait:participantID:
sendReliableMessage:participantID:
sendReliableMessage:withTopic:participantID:timeout:completion:
sendUnreliableMessage:participantID:
setEncryptionWithEncryptionMaterial:
UnderlyingVFD
VCTransportStreamVTPCreate
_VCTransportStreamVTPFinalize
_VCTransportStreamVTPCopyProperty
_VCTransportStreamVTPCopyIsIPv6
_VCTransportStreamVTPCopyReceiveHopLimitEnabled
_VCTransportStreamVTPSetProperty
_VCTransportStreamVTPSetReceiveHopLimitEnabled
_VCTransportStreamVTPSetSendFailedHandler
_VCTransportStreamVTPSend
_VCTransportStreamVTPSendOnePacket
_VCTransportStreamVTPSetPacketFilter
_VCTransportStreamVTPSetRemoteSSRCOnVFD
_VCTransportStreamVTPSetPayloadListOnVFD
_VCTransportStreamVTPSetLocalSSRCOnVFD
_VCTransportStreamVTPSetCellularUniqueTagOnVFD
_VCTransportStreamVTPCopyPacketFilter
_VCTransportStreamVTPSetReceivedHandler
_VCTransportStreamVTPPerformReceive
_VCTransportStreamVTPHandlePacketReceived
_VCTransportStreamVTPActivate
_VCTransportStreamVTPRegisterPacketCallback
_VCTransportStreamVTPDeactivate
-[VCMediaControlInfo configureWithBuffer:length:optionalControlInfo:]
-[VCMediaControlInfo setInfo:size:type:]
-[VCMediaControlInfo hasInfoType:]
-[VCMediaControlInfo getInfo:bufferLength:infoSize:type:]
HRESULT VCMediaControlInfo_SerializeBuffer(VCMediaControlInfo *, uint8_t *, size_t, size_t *)
VCMediaControlInfo_SerializedSize
VCMediaControlInfoIPCamera_SerializedSize
VCMediaControlInfoIPCamera_SerializeBuffer
VCMediaControlInfoSerializeWithData
VCMediaControlInfoUnserializeWithData
VCMediaControlInfoFaceTimeAudio_SerializedSize
_version = %u, _bitmap 0x%x. :
Feedback parameters: 
     %25s = %10d
timeStamp
receiveQueueTarget
audioReceviedPkts
audioBurstLoss
totalReceviedKbits
videoReceviedPkts
videoBurstLoss
bandwithEstimation
Media Queue parameters: 
owrd
queuingDelay
sendTimestamp
     %25s = 0x%8x
connectionStatsBuffer
-[VCMediaControlInfoFaceTimeAudio configureWithBuffer:length:optionalControlInfo:]
-[VCMediaControlInfoFaceTimeAudio getInfoUnserialized:type:]
-[VCMediaControlInfoFaceTimeAudio setInfo:size:type:]
-[VCMediaControlInfoFaceTimeAudio setInfoUnserialized:type:]
-[VCMediaControlInfoFaceTimeAudio getInfo:bufferLength:infoSize:type:]
VCMediaControlInfoFaceTimeAudio_SerializeBuffer
VCMediaControlInfoFaceTimeVideo_SerializedSize
camera status %08X size %ld, 
LTR bits %08X size %ld, 
LTR timestamp %08X size %ld, 
Frame Support Information 
Total # Packets Per Frame
Frame Sequence Number
FEC size %ld, 
probe %08X, size %ld, 
-[VCMediaControlInfoFaceTimeVideo configureWithBuffer:length:optionalControlInfo:]
VCMediaControlInfoFaceTimeVideo_SerializeBuffer
VCMediaControlInfoMultiwayAudio_SerializedSize
ROC %08X size %ld, 
MKI %08X size %ld, 
-[VCMediaControlInfoMultiwayAudio configureWithBuffer:length:optionalControlInfo:]
VCMediaControlInfoMultiwayAudio_SerializeBuffer
-[VCVideoRuleCollectionsScreenSecondaryEmbedded initWithHardwareSettings:]
-[VCVideoRuleCollectionsScreenSecondaryEmbedded selectPreferredRule:screenSize:]
-[VCVideoRuleCollectionsScreenSecondaryEmbedded setupH264Rules]
iPadWiFiScreenEncodingRules
iPadWiFiScreenDecodingRules
-[VCCallSession(VideoConferencing) processBlackFrame:]
ComputeVisibleAspectRatioWithRemoteScreenAspectRatio
Targetbitrate
BandwidthEstimation
-[AVCSession dealloc]
%@: transportToken[%@] configuration[%@]
-[AVCSession setAudioMuted:]
-[AVCSession setVolume:]
-[AVCSession setOneToOneEnabled:]
-[AVCSession setOneToOneEnabled:]_block_invoke
-[AVCSession setAudioEnabled:]
-[AVCSession setVideoEnabled:]
-[AVCSession setScreenEnabled:]
-[AVCSession setAudioPaused:]
-[AVCSession setVideoPaused:]
forceMediaNegotiatorVersion
+[AVCSession mediaNegotiatorVersionWithNegotiationProtocolVersion:]
-[AVCSession negotiationDataForProtocolVersion:]
-[AVCSession setPresentationInfo:]
-[AVCSession setPresentationInfo:]_block_invoke
-[AVCSession initPrivateWithTransportToken:configuration:negotiationData:delegate:queue:]
%@%u
com.apple.AVConference.AVCSession.stateQueue
-[AVCSession setMediaState:forMediaType:]
-[AVCSession addParticipant:]
-[AVCSession addParticipants:]_block_invoke
/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/AVCSession.m
-[AVCSession removeParticipants:]_block_invoke
-[AVCSession start]_block_invoke
-[AVCSession stopWithError:]_block_invoke
-[AVCSession updateConfiguration:]_block_invoke
-[AVCSession beginParticipantConfiguration]_block_invoke
-[AVCSession endParticipantConfiguration]_block_invoke
-[AVCSession validateParticipantConfiguration]
-[AVCSession didAddParticipantHandlerWithResult:]
ParticipantID is nil
Participant is nil
streamTokens is nil
Spatial source ID map is nil
-[AVCSession didAddParticipantHandlerWithResult:]_block_invoke
-[AVCSession registerBlocksForNotifications]_block_invoke
vcSessionServerDidDisconnect
-[AVCSession registerBlocksForNotifications]_block_invoke_2
com.apple.AVConference.AVCSession.notificationQueue
-[AVCSession participant:audioEnabled:didSucceed:error:]
-[AVCSession participant:videoEnabled:didSucceed:error:]
-[AVCSession participant:screenEnabled:didSucceed:error:]
-[AVCSession participant:audioPaused:didSucceed:error:]
-[AVCSession participant:videoPaused:didSucceed:error:]
-[AVCSession participant:mediaStateDidChange:forMediaType:didSucceed:error:]
-[AVCSession participant:mediaPrioritiesDidChange:]
framerate
formatDescription
-[VCStreamInputCaptureSource initWithCaptureSourceID:configuration:]
+[VCStreamInputCaptureSource readIntegerFromConfig:key:value:]
+[VCStreamInputCaptureSource readUint32FromConfig:key:value:]
-[VCStreamInputCaptureSource setupFormatWithConfiguration:]
-[VCStreamInputCaptureSource setupVideoFormatWithConfiguration:]
-[VCStreamInputCaptureSource setupDataFormatWithConfiguration:]
-[VCStreamInputCaptureSource setDelegate:]
AVCVideoStream
socketsDictionary=%s, callID=%s, error=%s
-[AVCVideoStream initWithNetworkSockets:callID:error:]
socketsDictionary=%s, options=%s, error=%s
-[AVCVideoStream initWithNetworkSockets:options:error:]
clientID=%s, options=%s, error=%s
-[AVCVideoStream initWithNWConnectionClientID:options:error:]
clientID may not be nil
-[AVCVideoStream initWithIDSDestination:callID:error:]
-[AVCVideoStream initWithLocalAddress:networkSockets:IDSDestination:connectionClientID:callID:options:error:]
com.apple.avconference.avcvideostream.callback.queue
-[AVCVideoStream dealloc]
-[AVCVideoStream configure:error:]
/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/AVCVideoStream.m
-[AVCVideoStream start]
AVCVideoStream hasn't been configured
-[AVCVideoStream stop]
-[AVCVideoStream pause]
-[AVCVideoStream resume]
-[AVCVideoStream updateVideoConfiguration:]
videoConfig=%s
-[AVCVideoStream requestLastDecodedFrame]
-[AVCVideoStream setDirection:]
-[AVCVideoStream setRtcpEnabled:]
-[AVCVideoStream setRtpTimeOutEnabled:]
-[AVCVideoStream setRtcpTimeOutEnabled:]
-[AVCVideoStream setRtpTimeOutIntervalSec:]
-[AVCVideoStream setRtcpTimeOutIntervalSec:]
-[AVCVideoStream setRtcpSendIntervalSec:]
-[AVCVideoStream registerBlocksForDelegateNotifications]_block_invoke
Calling -stream:didStart:error:
vcMediaStreamLastDecodedFrame
vcMediaStreamDidGetLastDecodedFrame
-[AVCVideoStream vcMediaStream:didStartStream:error:]
-[AVCVideoStream vcMediaStreamDidStop:]
Calling -streamDidStop:
-[AVCVideoStream vcMediaStream:didPauseStream:error:]
-[AVCVideoStream vcMediaStream:didResumeStream:error:]
-[AVCVideoStream vcMediaStreamDidRTPTimeOut:]
-[AVCVideoStream vcMediaStreamDidRTCPTimeOut:]
-[AVCVideoStream vcMediaStream:didReceiveRTCPPackets:]
-[AVCVideoStream vcMediaStream:downlinkQualityDidChange:]
-[AVCVideoStream vcMediaStream:uplinkQualityDidChange:]
stream=%s, didUpdateVideoConfiguration=%d, error=%s, configDict=%s
-[AVCVideoStream vcMediaStream:didUpdateVideoConfiguration:error:dictionary:]
-[AVCVideoStream vcMediaStreamServerDidDie:]
-[VCAudioStreamReceiveGroupConfig init]
-[VCTextStreamConfig initWithClientDictionary:]
vcMediaStreamTextCodecType
vcMediaStreamTextNumRedundantPayloads
vcMediaStreamTextTxRedPayloadType
vcMediaStreamTextRxRedPayloadType
vcMediaStreamTextTxIntervalMin
skipTerminationTimer
%@(%p) Timeout=%d
-[VCObject startTerminationTimer:terminationType:]
-[VCObject startTerminationTimer:terminationType:]_block_invoke
Termination Timeout - %@ type=%d
-[VCObject stopTerminationTimer]
+[VCObject terminateProcess:terminateSource:agent:]
-[VCHardwareOperatingModeSettings numTilesPerVideoFrameForHDRMode:]
-[VCHardwareSettings init]
-[VCHardwareSettings storeHardwareSettingsForAllOperatingModes]
maxCameraFrameRateWhenScreenIsEnabled
enableSpatialAudio
+[VCHardwareSettings isSpatialAudioSupported]
ftvSpatialAudioEnabled
+[VCHardwareSettings isCaptureSIFRPreferred]
SiriAudio
+[VCHardwareSettings isSiriVoiceTapSupported]
+[VCHardwareSettings isSiriVoicePlayoutSupported]
Payload:%d %@ %@ rules
encoding
decoding
-[VCVideoRuleCollections init]
-[VCVideoRuleCollections filterRules:byBitrateRule:]
VCVideoRuleCollections description: count = %lu.
  encodingType = %d, payload = %d, transportType = %d, rules = 
%dx%d@%u 
v32@?0@"VCVideoRuleCollectionKey"8@"NSArray"16^B24
-[VCVideoRuleCollections limitVideoRulesToMaxWidth:maxHeight:transportType:]
vcSessionParticipantKeyMediaBlob
vcSessionParticipantKeyMediaNegotiationData
vcSessionParticipantKeyCallInfoBlob
-[VCSessionParticipant callDelegateWithBlock:]
-[VCSessionParticipant logAllStreamTokens]
-[VCSessionParticipant startOneToOneStreams]_block_invoke
-[VCSessionParticipant dispatchedStartOneToOneStreams]
-[VCSessionParticipant startMultiwayStreams]
-[VCSessionParticipant dispatchedStart]
/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCSessionParticipant.m
-[VCSessionParticipant dispatchedStop]
-[VCSessionParticipant dispatchedSetAudioEnabled:]
-[VCSessionParticipant dispatchedSetVideoEnabled:]
-[VCSessionParticipant dispatchedSetScreenEnabled:]
-[VCSessionParticipant dispatchedSetAudioPaused:]
-[VCSessionParticipant dispatchedSetVideoPaused:]
-[VCSessionParticipant dispatchedSetMediaState:forMediaType:]
+[VCSessionParticipant participantDataWithMediaNegotiatorVersion:participantData:]
+[VCSessionParticipant participantDataWithParticipantData:isReinit:]
+[VCSessionParticipant streamGroupIDsFromParticipantData:]
%@[%p] idsDestination[%@] idsParticipantID[%llu] participantUUID[%@] state[%s]
-[VCSessionParticipant stopInternal]
-[VCSessionParticipant startAudioIO]
-[VCSessionParticipant stopAudioIO]
-[VCSessionParticipant updateStreamGroups:]
-[VCSessionParticipant isActiveMediaType:]
-[VCSessionParticipant isStreamGroupActive:]
-[VCSessionParticipant updateActiveStateForStreamGroup:]
-[VCSessionParticipant startStreamGroups]
-[VCSessionParticipant startScreenGroup]
-[VCSessionParticipant stopScreenGroup]
-[VCSessionParticipant stopAudioStreams]
-[VCSessionParticipant setupAudioStreamConfiguration:audioRules:]
-[VCSessionParticipant newOneToOneVideoStreamMultiwayConfiguration:streamGroupId:videoSettings:streamDirection:]
-[VCSessionParticipant newOneToOneAudioStreamConfigWithAudioSettings:streamDirection:streamGroupId:streamSsrc:]
rtcpPSBFForLossFeedbackEnabled
rtcpPSBFForLTRAckEnabled
-[VCSessionParticipant newOneToOneVideoStreamConfigWithStreamDirection:streamGroupId:streamSsrc:encodingType:videoSettings:]
-[VCSessionParticipant setupSecurityKeyHolderForStreamConfig:]
-[VCSessionParticipant completeStreamSetup:]
-[VCSessionParticipant configureAudioIOWithDeviceRole:operatingMode:]
-[VCSessionParticipant updateConfigurationWithDeviceRole:]_block_invoke
-[VCSessionParticipant configureOneToOneAudioStreamsWithDeviceRole:streamInfoArray:]
-[VCSessionParticipant newVideoRateControlConfigWithMediaControlInfoVersion:enableMediaControlInfoGenerator:enableFeedbackController:isOneToOne:]
-[VCSessionParticipant configureOneToOneVideoStreamsWithDeviceRole:streamInfoArray:]
-[VCSessionParticipant configureOneToOneWithConfig:]
-[VCSessionParticipant configureWithDeviceRole:negotiatedVideoEnabled:negotiatedScreenEnabled:operatingMode:]_block_invoke
-[VCSessionParticipant dispatchedConfigureWithDeviceRole:negotiatedVideoEnabled:negotiatedScreenEnabled:operatingMode:]
-[VCSessionParticipant configureStreamInfosForMultiway:streamGroupID:]
-[VCSessionParticipant configureMultiwayStreamGroups]
-[VCSessionParticipant initWithConfig:delegate:]
com.apple.AVConference.vcSessionParticipantQueue
-[VCSessionParticipant dealloc]
-[VCSessionParticipant updateMediaStatesWithConfig:]
-[VCSessionParticipant setupMediaTypeSettingsWithConfig:]
forceAudioBlockSize
forceAudioSampleRate
-[VCSessionParticipant setState:]
-[VCSessionParticipant applyVideoEnabledSetting:]
-[VCSessionParticipant applyScreenEnabledSetting:]
-[VCSessionParticipant streamGroupsForMediaType:]
-[VCSessionParticipant streamGroupsForIDs:]
-[VCSessionParticipant applyMediaState:forMediaType:]
-[VCSessionParticipant updateMediaState:forStreamGroups:]
-[VCSessionParticipant updateVideoPaused:]
+[VCSessionParticipant mediaStreamGroupStateToVCStreamGroupState:]
-[VCSessionParticipant setBasebandCongestionDetector:]
-[VCSessionParticipant createRedundancyControllers]
-[VCSessionParticipant collectVideoChannelMetrics:]
-[VCSessionParticipant collectAudioChannelMetrics:]
-[VCSessionParticipant setupMediaSyncForStreamGroup:]
-[VCSessionParticipant swapScreenStreamGroupSyncSourceWithState:]
-[VCSessionParticipant vcMediaStream:requestKeyFrameGenerationWithStreamID:firType:]
-[VCSessionParticipant resetDecryptionTimeout]
-[VCSessionParticipant pullAudioSamples:]
-[VCSessionParticipant pushAudioSamples:]
-[VCSessionParticipant redundancyController:redundancyIntervalDidChange:]
-[VCSessionParticipant redundancyController:redundancyPercentageDidChange:]
-[VCSessionParticipant didUpdateBasebandCodec:]
-[VCSessionParticipant handleRemoteOneToOneSwitchWithStreamGroup:fromStreamID:toStreamID:]
-[VCSessionParticipant streamGroup:didChangeMediaPriority:]
-[VCSessionParticipant didChangeSendingStreamsForStreamGroup:]
-[VCSessionParticipant didMediaDecryptionTimeOutForStreamGroup:]
-[VCSessionParticipant streamGroup:didRemoteEnableChange:]
-[VCSessionParticipant streamGroup:didRemotePauseChange:]
-[VCSessionParticipant streamGroup:didSwitchFromStreamID:toStreamID:]
-[VCSessionParticipant didChangeReceivingStreamsForStreamGroup:]
-[VCSessionParticipant didChangeActualNetworkBitrateForStreamGroup:]
-[VCSessionParticipant streamGroup:didRequestRedundancy:]
-[VCSessionParticipant streamGroup:requestKeyFrameGenerationWithStreamID:firType:]
-[VCSessionParticipant didDecryptionTimeOutForMKMRecoveryForStreamGroup:]
-[VCSessionParticipant streamGroup:didSuspendStreams:]
-[VCSessionParticipant streamGroup:remoteMediaStalled:duration:]
AVCPacketRelayDriverThreadStart
com.apple.avconference.AVCPacketRelayDriverProc
AVCPacketRelayDriverThreadStop
int AVCPacketRelayDriverThreadStop(void)
AVCPacketRelayDriverThreadAddFileDescriptorWithConnection
int AVCPacketRelayDriverThreadAddFileDescriptorWithConnection(int, id<AVCPacketRelayConnectionProtocol>)
AVCPacketRelayDriverThreadRemoveFileDescriptor
int AVCPacketRelayDriverThreadRemoveFileDescriptor(int)
AVCPacketRelayDriverProc
-[VCAudioSessionMediaProperties isEqual:]
%@: sampleRate=%f blockSize=%f, operatingMode=%d, VP=%d, sampleRateIn=%f, inputFormat=%s, sampleRateOut=%f, outputFormat=%s, processId=%d, active=%d
-[VCTransportSessionIDSSingleLink handleLinkConnectedWithInfo:]
-[VCTransportSessionIDSSingleLink handleLinkDisconnectedWithInfo:]
-[VCTransportSessionIDSSingleLink onStart]
-[VCTransportSessionIDSSingleLink createVFD:forStreamType:]
-[VCTransportSessionIDSSingleLink updateTransportStream:]
isTimeoutExpired
_VCTimescaleWSOLA_SearchMinimumCostPosition
_VCTimescaleWSOLA_PerformAdaptation
VCTimescaleWSOLA_Initialize
VCTimescaleWSOLA_Adapt
VCTimescaleWSOLA_CheckCompression
SpkrProc: Warping
wsolaStartCompressionThreshold
wsolaCompressionHysteresis
wsolaStopCompressionThreshold
_VCTimescale_InitializeWsolaWarpConverter
_VCTimescale_DecodeWarpWsola
_VCTimescaleWSOLA_TailSize
SpkrProc: WsolaTail
+[AVCAudioStreamConfig streamModeWithClientStreamMode:]
vcMediaStreamMaxPtime
vcMediaStreamLatencySensitiveMode
force444
-[AVCVideoStreamConfig dictionary]
force444-10bit
force420
+[AVCVideoStreamConfig isPixelFormatValid:hdrMode:]
+[AVCTextStreamConfig codecTypeWithClientCodecType:]
VCWCMClientQueue
-[SDPParser parseMediaLineHeader:mediaType:supportedPayloads:rtpPort:]
com.apple.VideoConference.vctransport
com.apple.VideoConference.vctransport.dataReceivedHandlerQueue
NewConnection
NewCandidates
NewNomination
RemoveIPPort
-[VCTransport iceShouldNominateNewCandidate:forCallID:interfaceMask:nominated:demote:connectionPriority:replaceOnly:]_block_invoke
-[VCTransport iceRemoveIPPort:forCallID:isLocalInterface:]_block_invoke
static
_VCJitterBuffer_GetJBTargetFromEstimatedTarget
_VCJitterBuffer_GetMinMaxQueueSizeFromConfig
VCJitterBuffer_Create
.jbdump
STime
Timestamp
Bundling
NetworkType
FirstTimestamp
Wraps
IsRed
AvgLag
MaxLag
MinLag
JumpThresh
SlopeThresh
Flat
ClippedLag
MinLagAdjustment
MinClipThreshold
JBMin
JBMax
TargetJ
RedOverheadInTargetJ
TargetJQSize
JQSize
AvgJQSize
ERASURE
MODE
Payload Type
Seq Number
INTS
OUTTS
LeftOverSamples
Prominence
StreamID
TargetSizeIndependent
AVSyncOffset
IntermittentState
SingleOutagePeriod
EstimatedIntermittentPeriod
TargetBoostMode
audioJitterBufferWeightedAvgQSizeFactor
VCJitterBuffer_Finalize
VCJitterBuffer_QueueSteeringCallback
VCJitterBuffer_InitializePlayback
VCJitterBuffer_Reset
VCJitterBuffer_DiscardQueueExcess
VCJitterBuffer_SetRedAudioDelayInSamples
VCJitterBuffer_Flush
VCJitterBuffer_ResetPlaybackReportingMetrics
VCJitterBuffer_ResetJitterQueueUnderflowRate
VCJitterBuffer_EnqueuePacket
State = RESET
forceJitterBufferSize
VCJitterBuffer_PlaybackGetSamples
VCJitterBuffer_GetAWDReportingMetrics
VCJitterBuffer_GetWRMReportingMetrics
VCJitterBuffer_GetPlaybackReportingMetrics
VCJitterBuffer_GetReportingMetrics
Red Rx Stats, redAudioFramesReceived = %d , redAudioBytesReceived = %d , redAudioFramesDiscarded = %d , redAudioBytesDiscarded = %d 
VCJitterBuffer_SetMode
VCJitterBuffer_SetNetworkType
VCJitterBuffer_ProcessWiFiNetworkNotification
VCJitterBuffer_ProcessCellularNetworkNotification
VCJitterBuffer_SetSkipDecodeOnSilence
VCJitterBuffer_AudioPacketAlloc
VCJitterBuffer_AudioFrameAlloc
VCJitterBuffer_AudioPacketFree
VCJitterBuffer_GetMinJitterBufferQueueSize5G
kVCDefaultJitterBufferMinQueueSize5G
_VCJitterBuffer_UpdateDiscardAlgoParams
%02.6f
%02.6f
%02.6f
%02.6f
%02.4f
%02.4f
%02.6f
%02.6f
%02.6f
%02.4f
%02.4f
%02.4f
%02.4f
%02.4f
%02.6f
%02.4f
%2.6f
%2.6f
_VCJitterBuffer_DequeuePacketsFromPreloadQueue
SpkrProc: PreloadQueue_Dequeue and AddPacket
SpkrProc: PreloadQueueDequeue
SpkrProc: PreloadQueueDequeue Loop, Iterations = %d
_VCJitterBuffer_UpdateRedAudioArrivalTime
SpkrProc: _VCJitterBuffer_UpdateAudioQSize
_VCJitterBuffer_ApplyQueueManagementPolicy
_VCJitterBuffer_ShouldAdjustAudioQueuSizeForRed
_VCJitterBuffer_UpdateAvgQSize
SpkrProc: UpdateAvgQSize
kAUVoiceIOProperty_MediaPlaybackOnExternalDevice
com.apple.AVConference.AVAudioClient.AudioSessionQueue
AVCAudioClient
-[AVAudioClient initSharedInstance]
-[AVAudioClient init]
-[AVAudioClient dealloc]
-[AVAudioClient resetAudioSessionOutputPortOverride]
-[AVAudioClient setMixingVoiceWithMediaEnabled:]
-[AVAudioClient setMixingVoiceWithMediaEnabled:]_block_invoke
-[AVAudioClient setInputDevice:]
-[AVAudioClient setOutputDevice:]
-[AVAudioClient registerForMutedTalkerNotifications:]
-[AVAudioClient registerForMutedTalkerNotifications:]_block_invoke
Failed to register the notification
-[AVAudioClient unregisterFromMutedTalkerNotifications]_block_invoke
Failed to unregister the notification
mutedTalkerNotificationType
-[AVAudioClient handleMutedTalkerNotificationWithXPCArguments:]
+[AVAudioClient startAudioSessionWithCompletionHandler:]
+[AVAudioClient startAudioSession]
+[AVAudioClient setAudioSessionProperties:]
+[AVAudioClient stopAudioSession]
+[AVAudioClient resetAudioSessionOutputPortOverride]
+[AVAudioClient setMicrophoneMuted:]
+[AVAudioClient isMicrophoneMuted]
+[AVAudioClient setMixingVoiceWithMediaEnabled:]
+[AVAudioClient isMixingVoiceWithMediaEnabled]
+[AVAudioClient currentInputDevice]
+[AVAudioClient currentOutputDevice]
+[AVAudioClient setInputDevice:]
+[AVAudioClient setOutputDevice:]
+[AVAudioClient setFollowSystemInputEnabled:]
+[AVAudioClient setFollowSystemOutputEnabled:]
+[AVAudioClient registerForMutedTalkerNotifications:]
+[AVAudioClient unregisterFromMutedTalkerNotifications]
+[AVAudioClient registerSecureMicrophoneEngagedHandler:]
-[AVAudioClient setChangeListener:]
-[AVAudioClient devices]
AVAudioClient-devices
-[AVAudioClient inputDevices]
AVAudioClient-inputDevices
-[AVAudioClient outputDevices]
AVAudioClient-outputDevices
 [%s] %s:%d RTCP XR is not enabled
 [%s] %s:%d Haven't received any RTP packet yet
 [%s] %s:%d RTCP XR Summary report Start sequence=%d End sequence=%d minJitter=%d maxJitter=%d meanJitter=%d stdevJitter=%d meanHopLimt=%d devHopLimit=%d minHopLimt=%d maxHopLimit=%d lostPackets=%d duplicatePackets=%d dwPacketsRecv=%d
 [%s] %s:%d Failed to allocate media blob (v2)
 [%s] %s:%d Failed to compress the media blob
 [%s] %s:%d Failed to allocate memory for v2 blob
 [%s] %s:%d Media blob v2 size=%d -> %d bytes with ratio %f
 [%s] %s:%d Media blob size=%d -> %d bytes
 [%s] %s:%d Compressed media blob is nil
 [%s] %s:%d Failed to decompress the media blob v2
 [%s] %s:%d Exception occurred while parsing remote invite blob: %@
 [%s] %s:%d Remote invite blob is nil
 [%s] %s:%d Failed to deserialize the remote invite blob
 [%s] %s:%d Failed to generated negotiated results
 [%s] %s:%d Failed to generated negotiated moments results
 [%s] %s:%d Failed to generated negotiated stream groups
 [%s] %s:%d Failed to parse the negotiation data
 [%s] %s:%d Failed to retrieve stream group. status=%x
 [%s] %s:%d Failed to allocate system audio configuration
 [%s] %s:%d Max bandwidth not found for operatingMode=%d connectionType=%d
 [%s] %s:%d Failed to allocate media blob (v2) general info
 [%s] %s:%d Failed to allocate media blob (v2) banwidth settings
 [%s] %s:%d Failed to allocate media blob (v2) codec features
 [%s] %s:%d Failed to allocate media blob (v2) microphone U+1 settings
 [%s] %s:%d No supported payloads for the device
 [%s] %s:%d Failed to allocate media blob (v2) camera U+1 settings
 [%s] %s:%d Moments user preference not enabled.
 [%s] %s:%d Failed to allocate media blob (v2) moments settings
 [%s] %s:%d Failed to allocate media blob (v2) stream group
 [%s] %s:%d Media blob dump enabled !!
 [%s] %s:%d Failed to retrive the bandwdith settings
 [%s] %s:%d Failed to allocate negotiation system audio results
 [%s] %s:%d Stream group found for system audio.
 [%s] %s:%d Stream group has no U1 settings for system audio. Check for standalone system audio support.
 [%s] %s:%d Stream group has no U1 settings for system audio and does not support standalone system audio
 [%s] %s:%d No local video rules for payload=%d transport=%d encoding=%d
 [%s] %s:%d No remote video rules for payload=%d transport=%d encoding=%d
 [%s] %s:%d Skipping negotiating video settings, as this device does not support video
 [%s] %s:%d Skipping negotiating video settings, as the remote device does not support video
 [%s] %s:%d Video features not successfully negotiated
 [%s] %s:%d No available payloads
 [%s] %s:%d Failed to find video rule for transportType=%d encodingType=%d
 [%s] %s:%d Moments not supported
 [%s] %s:%d Moments user preference Not Enabled.
 [%s] %s:%d No supported moments payload. videoCodecs=%@
 [%s] %s:%d No supported moments image types. imageTypes=%@
 [%s] %s:%d Unsupported media type (%s). Ignoring streamGroup groupID=%s
 [%s] %s:%d %@(%p) Unsupported media type (%s). Ignoring streamGroup groupID=%s
 [%s] %s:%d Skipping negotiating streamGroup=%s, as this device is audio only
 [%s] %s:%d Missing codecs or payloads for mediaType=%s mediaSubtype=%s
 [%s] %s:%d %@(%p) Missing codecs or payloads for mediaType=%s mediaSubtype=%s
 [%s] %s:%d HEVC codec not supported, removing all higher quality streams from streamGroup=%s
 [%s] %s:%d %@(%p) HEVC codec not supported, removing all higher quality streams from streamGroup=%s
 [%s] %s:%d Invalid payload in streamconfig
 [%s] %s:%d HEVC payload not supported, removing all higher quality streams from streamGroup=%s
 [%s] %s:%d %@(%p) HEVC payload not supported, removing all higher quality streams from streamGroup=%s
 [%s] %s:%d Skipping unknown stream group
 [%s] %s:%d Failed to retrieve stream group. result=%x
 [%s] %s:%d Failed to negotiate stream groups
 [%s] %s:%d Setup U1 config for stream group for groupID=%s
 [%s] %s:%d Negotiate for audio settings using microphoneU1
 [%s] %s:%d Negotiate for video settings using cameraU1
 [%s] %s:%d Failed to generated negotiated video results
 [%s] %s:%d Failed to negotiate stream group config for groupID=%s
 [%s] %s:%d Not going to negotiate stream group config for groupID=%s
 [%s] %s:%d Failed to allocate stream group set
 [%s] %s:%d Failed to unserialize the blob
 [%s] %s:%d Update stream group U1 config for groupID=%s
 [%s] %s:%d Failed to allocate videoPayloads array
 [%s] %s:%d Failed to allocate videoParameterSet array
 [%s] %s:%d Screen U1 settings failed to calculate resolution
 [%s] %s:%d Skipping negotiating screen settings, as the local device does not support screen
 [%s] %s:%d Screen features not successfully negotiated
 [%s] %s:%d using audio channelCount[%d]
 [%s] %s:%d %@(%p) using audio channelCount[%d]
 [%s] %s:%d Failed to allocate stateStrings array
 [%s] %s:%d %@(%p) Failed to allocate stateStrings array
 [%s] %s:%d Failed to allocate the dispatch queue
 [%s] %s:%d %@(%p) Failed to allocate the dispatch queue
 [%s] %s:%d Failed to allocate client array
 [%s] %s:%d %@(%p) Failed to allocate client array
 [%s] %s:%d Failed to allocate starting IO client array
 [%s] %s:%d %@(%p) Failed to allocate starting IO client array
 [%s] %s:%d Failed to allocate source event queue
 [%s] %s:%d %@(%p) Failed to allocate source event queue
 [%s] %s:%d Failed to allocate sink event queue
 [%s] %s:%d %@(%p) Failed to allocate sink event queue
 [%s] %s:%d Failed to initialize source data link list
 [%s] %s:%d %@(%p) Failed to initialize source data link list
 [%s] %s:%d Failed to initialize sink data link list
 [%s] %s:%d %@(%p) Failed to initialize sink data link list
 [%s] %s:%d Failed to create allocate the spatial context dictionary
 [%s] %s:%d %@(%p) Failed to create allocate the spatial context dictionary
 [%s] %s:%d Failed to create allocate the audio session muted dictionary
 [%s] %s:%d %@(%p) Failed to create allocate the audio session muted dictionary
 [%s] %s:%d Failed to create the interrupt thread
 [%s] %s:%d setMicrophoneMuted:%d
 [%s] %s:%d %@(%p) setMicrophoneMuted:%d
 [%s] %s:%d ignore
 [%s] %s:%d %@(%p) ignore
 [%s] %s:%d setMixingVoiceWithMediaEnabled:%d
 [%s] %s:%d %@(%p) setMixingVoiceWithMediaEnabled:%d
 [%s] %s:%d client=%p mute=%d
 [%s] %s:%d %@(%p) client=%p mute=%d
 [%s] %s:%d Applying mute property for audioSessionId=%d, isMuted=%d
 [%s] %s:%d %@(%p) Applying mute property for audioSessionId=%d, isMuted=%d
 [%s] %s:%d Adding client[%p] with sinkIO[%p], sourceIO[%p] in current manager state=%d clientCount (before add)=%d
 [%s] %s:%d %@(%p) Adding client[%p] with sinkIO[%p], sourceIO[%p] in current manager state=%d clientCount (before add)=%d
 [%s] %s:%d %@ set. Skipping idle wait
 [%s] %s:%d %@(%p) %@ set. Skipping idle wait
 [%s] %s:%d Sink run lock semaphore was not signaled! client=%p sinkIO=%p
 [%s] %s:%d %@(%p) Sink run lock semaphore was not signaled! client=%p sinkIO=%p
 [%s] %s:%d Source run lock semaphore was not signaled! client=%p sourceIO=%p
 [%s] %s:%d %@(%p) Source run lock semaphore was not signaled! client=%p sourceIO=%p
 [%s] %s:%d Removing dead client (%p)!
 [%s] %s:%d %@(%p) Removing dead client (%p)!
 [%s] %s:%d conferenceMode=%d, deviceRole=%d, vpOperatingMode=%d
 [%s] %s:%d Last client is prewarming, ignore its settings. _currentAudioUnitProperties=%@
 [%s] %s:%d %@(%p) Last client is prewarming, ignore its settings. _currentAudioUnitProperties=%@
 [%s] %s:%d Selected audio unit properties: UnitType=%d, micFormat=%s speakerFormat=%s audioSessionId=%u samplesPerFrame=%d VPOperatingMode=%d
 [%s] %s:%d %@(%p) Selected audio unit properties: UnitType=%d, micFormat=%s speakerFormat=%s audioSessionId=%u samplesPerFrame=%d VPOperatingMode=%d
 [%s] %s:%d System audio unit properties: UnitType=%d, speakerFormat=%s samplesPerFrame=%d
 [%s] %s:%d %@(%p) System audio unit properties: UnitType=%d, speakerFormat=%s samplesPerFrame=%d
 [%s] %s:%d Input device changed via default change listener. current input device=%s deviceID=%u new input device=%s deviceID=%u
 [%s] %s:%d %@(%p) Input device changed via default change listener. current input device=%s deviceID=%u new input device=%s deviceID=%u
 [%s] %s:%d Ignoring attempt to set newInputDevice=%u since _followSystemInput=%d. Current inputDevice=%s deviceID=%u
 [%s] %s:%d %@(%p) Ignoring attempt to set newInputDevice=%u since _followSystemInput=%d. Current inputDevice=%s deviceID=%u
 [%s] %s:%d Setting input device=%@, previous input device=%@
 [%s] %s:%d %@(%p) Setting input device=%@, previous input device=%@
 [%s] %s:%d Input device change completed. New device=%s deviceID=%u
 [%s] %s:%d %@(%p) Input device change completed. New device=%s deviceID=%u
 [%s] %s:%d Ignoring attempt to set newOutputDevice=%u since _followSystemOutput=%d. Current outputDevice=%s deviceID=%u
 [%s] %s:%d %@(%p) Ignoring attempt to set newOutputDevice=%u since _followSystemOutput=%d. Current outputDevice=%s deviceID=%u
 [%s] %s:%d Setting output deviceID=%u, previous output deviceID=%u
 [%s] %s:%d %@(%p) Setting output deviceID=%u, previous output deviceID=%u
 [%s] %s:%d Output device change completed. New device=%s deviceID=%u
 [%s] %s:%d %@(%p) Output device change completed. New device=%s deviceID=%u
 [%s] %s:%d Output device changed via default change listener. current output device=%s deviceID=%u new output device=%s deviceID=%u
 [%s] %s:%d %@(%p) Output device changed via default change listener. current output device=%s deviceID=%u new output device=%s deviceID=%u
 [%s] %s:%d AUIO already exists
 [%s] %s:%d %@(%p) AUIO already exists
 [%s] %s:%d CMSession:[%u] Starting AUIO operatingMode[%d] deviceRole[%d] remoteCodecType[%s] remoteCodecRate[%f] isMicrophoneMuted[%d]
 [%s] %s:%d %@(%p) CMSession:[%u] Starting AUIO operatingMode[%d] deviceRole[%d] remoteCodecType[%s] remoteCodecRate[%f] isMicrophoneMuted[%d]
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCAudioManager.m:%d: Failed to create the audio limiter
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCAudioManager.m:%d: Failed to start the audio limiter
 [%s] %s:%d New active audioSessionId=%u previousAudioSessionID=%u
 [%s] %s:%d %@(%p) New active audioSessionId=%u previousAudioSessionID=%u
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCAudioManager.m:%d: CMSession:[%u] AUIOCreateHandle failed(%X)
 [%s] %s:%d AUIOSetupFormats() failed. hResult=0x%08X
 [%s] %s:%d %@(%p) AUIOSetupFormats() failed. hResult=0x%08X
 [%s] %s:%d Failed to register muted talker notification callback hResult=0x%08X
 [%s] %s:%d %@(%p) Failed to register muted talker notification callback hResult=0x%08X
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCAudioManager.m:%d: [CMSession]:%u AUIOStart failed(%08lX)
 [%s] %s:%d startAudioIO is completed
 [%s] %s:%d %@(%p) startAudioIO is completed
 [%s] %s:%d Recording changed: %d->%d
 [%s] %s:%d %@(%p) Recording changed: %d->%d
 [%s] %s:%d Mic sample rate changed: %d->%d
 [%s] %s:%d %@(%p) Mic sample rate changed: %d->%d
 [%s] %s:%d Mic samples per frame changed: %d->%d
 [%s] %s:%d %@(%p) Mic samples per frame changed: %d->%d
 [%s] %s:%d Mic channels per frame changed: %d->%d
 [%s] %s:%d %@(%p) Mic channels per frame changed: %d->%d
 [%s] %s:%d Speaker sample rate changed: %d->%d
 [%s] %s:%d %@(%p) Speaker sample rate changed: %d->%d
 [%s] %s:%d Speaker samples per frame changed: %d->%d
 [%s] %s:%d %@(%p) Speaker samples per frame changed: %d->%d
 [%s] %s:%d Speaker channels per frame changed: %d->%d
 [%s] %s:%d %@(%p) Speaker channels per frame changed: %d->%d
 [%s] %s:%d VP operating mode changed: %d->%d
 [%s] %s:%d %@(%p) VP operating mode changed: %d->%d
 [%s] %s:%d VP spatial chat flag changed: %d->%d
 [%s] %s:%d %@(%p) VP spatial chat flag changed: %d->%d
 [%s] %s:%d Current settings: %@
 [%s] %s:%d %@(%p) Current settings: %@
 [%s] %s:%d New settings: %@
 [%s] %s:%d %@(%p) New settings: %@
 [%s] %s:%d [CMSession]:%u Session properties changed!
 [%s] %s:%d %@(%p) [CMSession]:%u Session properties changed!
 [%s] %s:%d reset audio limiter: %d
 [%s] %s:%d %@(%p) reset audio limiter: %d
 [%s] %s:%d AUIO doesn't exists
 [%s] %s:%d %@(%p) AUIO doesn't exists
 [%s] %s:%d Registering clientIO[%p] controllerIO[%p] in current manager state=%d
 [%s] %s:%d %@(%p) Registering clientIO[%p] controllerIO[%p] in current manager state=%d
 [%s] %s:%d Wait on run lock semaphore timed out! clientIO=%p
 [%s] %s:%d %@(%p) Wait on run lock semaphore timed out! clientIO=%p
 [%s] %s:%d CMSimpleQueueEnqueue Full
 [%s] %s:%d %@(%p) CMSimpleQueueEnqueue Full
 [%s] %s:%d Unregistering clientIO[%p] controllerIO[%p] in current manager state=%d
 [%s] %s:%d %@(%p) Unregistering clientIO[%p] controllerIO[%p] in current manager state=%d
 [%s] %s:%d controller did start client (audioIO=%p)
 [%s] %s:%d %@(%p) controller did start client (audioIO=%p)
 [%s] %s:%d Handle mutedTalkerNotification type=%d
 [%s] %s:%d %@(%p) Handle mutedTalkerNotification type=%d
 [%s] %s:%d Registered for mutedTalker notification. result=0x%08x
 [%s] %s:%d %@(%p) Registered for mutedTalker notification. result=0x%08x
 [%s] %s:%d Unregistered from muted talker notification. result=0x%08x
 [%s] %s:%d %@(%p) Unregistered from muted talker notification. result=0x%08x
 [%s] %s:%d Muted talker notification handler is nil
 [%s] %s:%d %@(%p) Muted talker notification handler is nil
 [%s] %s:%d Muted talker notification handler already registered
 [%s] %s:%d %@(%p) Muted talker notification handler already registered
 [%s] %s:%d Muted talker notification handler not registered
 [%s] %s:%d %@(%p) Muted talker notification handler not registered
 [%s] %s:%d Register session context for audioSessionId=%u
 [%s] %s:%d %@(%p) Register session context for audioSessionId=%u
 [%s] %s:%d Failed to allocate audio session context for audioSessionId=%u
 [%s] %s:%d %@(%p) Failed to allocate audio session context for audioSessionId=%u
 [%s] %s:%d Session context for audioSessionId=%u is already registered
 [%s] %s:%d %@(%p) Session context for audioSessionId=%u is already registered
 [%s] %s:%d Unregister session context for audioSessionId=%u
 [%s] %s:%d %@(%p) Unregister session context for audioSessionId=%u
 [%s] %s:%d Session context for audioSessionId=%u is not registered
 [%s] %s:%d %@(%p) Session context for audioSessionId=%u is not registered
 [%s] %s:%d Spatial context for audioSessionId=%u is not registered
 [%s] %s:%d %@(%p) Spatial context for audioSessionId=%u is not registered
 [%s] %s:%d skip spatial context _spatialAudioDisabled=%d
 [%s] %s:%d %@(%p) skip spatial context _spatialAudioDisabled=%d
 [%s] %s:%d Failed to retrieve the metadata buffer. osStatus=%d
 [%s] %s:%d %@(%p) Failed to retrieve the metadata buffer. osStatus=%d
 [%s] %s:%d Failed to apply the metadata buffer. spatialMetadata=%p, dataBufferLength=%zu, status=%08x
 [%s] %s:%d %@(%p) Failed to apply the metadata buffer. spatialMetadata=%p, dataBufferLength=%zu, status=%08x
 [%s] %s:%d [%p] Flushing eventQueue of source controllerIO[%p] in current manager state=%d
 [%s] %s:%d %@(%p) [%p] Flushing eventQueue of source controllerIO[%p] in current manager state=%d
 [%s] %s:%d [%p] Flushing eventQueue of sink controllerIO[%p] in current manager state=%d
 [%s] %s:%d %@(%p) [%p] Flushing eventQueue of sink controllerIO[%p] in current manager state=%d
 [%s] %s:%d Setting Voice Mixing Enabled=%d
 [%s] %s:%d [CMSession]:%u reset audio unit: %d
 [%s] %s:%d %@(%p) [CMSession]:%u reset audio unit: %d
 [%s] %s:%d reset audio unit: %d
 [%s] %s:%d %@(%p) reset audio unit: %d
 [%s] %s:%d new client: %@
 [%s] %s:%d %@(%p) new client: %@
 [%s] %s:%d (%p) audioIO=%p clientCount:%d AUIO=%d/%d AudioSession=%d
 [%s] %s:%d %@(%p) (%p) audioIO=%p clientCount:%d AUIO=%d/%d AudioSession=%d
 [%s] %s:%d (%p) audioIO=%p clientCount:%d AUIO=-/- AudioSession=-
 [%s] %s:%d %@(%p) (%p) audioIO=%p clientCount:%d AUIO=-/- AudioSession=-
 [%s] %s:%d Process state: %@ (%d)
 [%s] %s:%d %@(%p) Process state: %@ (%d)
 [%s] %s:%d State change: %@ (%d) -> %@ (%d)
 [%s] %s:%d %@(%p) State change: %@ (%d) -> %@ (%d)
 [%s] %s:%d Client is nil!
 [%s] %s:%d %@(%p) Client is nil!
 [%s] %s:%d Invalid device role: %d!
 [%s] %s:%d %@(%p) Invalid device role: %d!
 [%s] %s:%d Client already registered!
 [%s] %s:%d %@(%p) Client already registered!
 [%s] %s:%d controller start client (audioIO=%p)
 [%s] %s:%d %@(%p) controller start client (audioIO=%p)
 [%s] %s:%d controller start client FAILED (audioIO=%p)
 [%s] %s:%d %@(%p) controller start client FAILED (audioIO=%p)
 [%s] %s:%d controller stop client (audioIO=%p)
 [%s] %s:%d %@(%p) controller stop client (audioIO=%p)
 [%s] %s:%d controller did stop client (audioIO=%p)
 [%s] %s:%d %@(%p) controller did stop client (audioIO=%p)
 [%s] %s:%d controller stop client FAILED (audioIO=%p)
 [%s] %s:%d %@(%p) controller stop client FAILED (audioIO=%p)
 [%s] %s:%d Update client[%p]. Current manager state=%d
 [%s] %s:%d %@(%p) Update client[%p]. Current manager state=%d
 [%s] %s:%d client not found: %@
 [%s] %s:%d %@(%p) client not found: %@
 [%s] %s:%d controller update FAILED (audioIO=%p)
 [%s] %s:%d %@(%p) controller update FAILED (audioIO=%p)
 [%s] %s:%d controller updated _spatialAudioDisabled=%d
 [%s] %s:%d %@(%p) controller updated _spatialAudioDisabled=%d
 [%s] %s:%d sampleRate=%d
 [%s] %s:%d %@(%p) sampleRate=%d
 [%s] %s:%d Failed to allocate interrupt thread
 [%s] %s:%d %@(%p) Failed to allocate interrupt thread
 [%s] %s:%d Failed to allocate interrupt thread client
 [%s] %s:%d %@(%p) Failed to allocate interrupt thread client
 [%s] %s:%d Start the interrupt thread. format=%s
 [%s] %s:%d %@(%p) Start the interrupt thread. format=%s
 [%s] %s:%d Failed to start the interrupt thread
 [%s] %s:%d %@(%p) Failed to start the interrupt thread
 [%s] %s:%d Failed to set the client IO
 [%s] %s:%d %@(%p) Failed to set the client IO
 [%s] %s:%d Stop the interrupt thread
 [%s] %s:%d %@(%p) Stop the interrupt thread
 [%s] %s:%d CMSession interrupt begin
 [%s] %s:%d %@(%p) CMSession interrupt begin
 [%s] %s:%d CMSession interrupt begin, audio manager is now paused
 [%s] %s:%d %@(%p) CMSession interrupt begin, audio manager is now paused
 [%s] %s:%d CMSession interrupt end
 [%s] %s:%d %@(%p) CMSession interrupt end
 [%s] %s:%d CMSession interrupt end, audio manager resume completed
 [%s] %s:%d %@(%p) CMSession interrupt end, audio manager resume completed
 [%s] %s:%d Unexpected SPI call
 [%s] %s:%d %@(%p) Unexpected SPI call
 [%s] %s:%d %sProcess event: controllerIO=%p clientIO=%p type=%d
 [%s] %s:%d %s: Took a long time %fs
 [%s] %s:%d %sRegistering clientIO[%p]
 [%s] %s:%d %sUnregistering clientIO[%p]
AVCRC [%s] %s:%d AVCRateController (%p) init with VCRateControl dumpFile %s, VCRateControl logging %s, BWE dumpFile %s.
AVCRC [%s] %s:%d (%p)
AVCRC [%s] %s:%d AVCRateController (%p) configuration with mode=%d, LocalRAT=%d, RemoteRAT=%d, minBitrate=%d, maxBitrate=%d, isTrafficBursty=%d, featureFlags=%X, statisticsCollector=%p
AVCRC [%s] %s:%d (%p) rate controller has been started
AVCRC [%s] %s:%d (%p) Cannot load and retain rateControllerDelegate successfully!
AVCRC [%s] %s:%d (%p) Cannot load and retain reportingAgent successfully!
AVCRC [%s] %s:%d (%p) rate controller has been stopped
AVCRC [%s] %s:%d (%p) Cannot register periodic task before rate controller start!
AVCRC [%s] %s:%d (%p) AVCRateController target bitrate cap %d -> %d
AVCRC [%s] %s:%d (%p) AVCRateController bandwidth estimation cap %d -> %d
AVCRC [%s] %s:%d [%p] Pause rate controller for 5 seconds, BT device %s state=%d while WLAN's on 2.4GHz
AVCRC [%s] %s:%d AdaptiveLearning(AVCRateController): Setting up initial bitrate for segment %@ - learnt target bitrate %d, selected tier %d, default bitrate %d
AVCRC [%s] %s:%d AdaptiveLearning(AVCRateController): Initial bitrate defaulted to %d
AVCRC [%s] %s:%d [%p] config for key=%s config serverBagContainsGroup=%d blockRampUpInSaturatedNetworkEnabled=%d networkSaturatedRTTToMinRTTRatio=%f networkSaturatedOWRDToMinRTTRatio=%f networkSaturatedPersistFeedbackNumber=%d networkSaturatedRTTDecreasingThreshold=%f
AVCRC [%s] %s:%d [%p] config for key=%s config serverBagContainsGroup=%d rateLimitedPercentage=%f blockedTimeout=%f
AVCRC [%s] %s:%d [%p] config for key=%s config serverBagContainsGroup=%d networkUnstableCoolDownTime=%f RTTThreshold=%f PLRThreshold=%f
AVCRC [%s] %s:%d [%p] config for key=%s serverBagContainsGroup=%d rampUpOWRDThreshold=%f rampUpNOWRDThreshold=%f
AVCRC [%s] %s:%d [%p] config for key=%s serverBagContainsGroup=%d rampUpOverBandwidthCalmDuration=%f rampUpOverBandwidthTierNumber=%d
AVCRC [%s] %s:%d [%p] config for key=%s serverBagContainsGroup=%d rampDownNOWRDThreshold=%f rampDownNOWRDAccThreshold=%f rampDownAggressiveNOWRDThreshold=%f rampDownAggressiveNOWRDAccThreshold=%f rampDownConstantOWRDDuration=%f
AVCRC [%s] %s:%d [%p] config for key=%s serverBagContainsGroup=%d rampDownBurstyLossThreshold=%d lowestTierForBurstyLossRampDown=%d rampDownLossEventThreshold=%d rampDownLossEventNOWRDThreshold=%f
AVCRC [%s] %s:%d [%p] config for key=%s serverBagContainsGroup=%d rampDownOvershootDuration=%f rampDownOvershootNextTierRatio=%f
AVCRC [%s] %s:%d [%p] config for key=%s serverBagContainsGroup=%d rampUpQueuingDelayThreshold=%f rampUpNBDCDThreshold=%f rampUpNBDCDCoolDownTime=%f
AVCRC [%s] %s:%d [%p] config for key=%s serverBagContainsGroup=%d rampDownHighQueuingDelayThreshold=%f rampDownMediumQueuingDelayThreshold=%f rampDownNormalizedQueuingDelayThreshold=%f rampDownNBDCDThreshold=%f rampDownAggressiveNBDCDThreshold=%f
AVCRC [%s] %s:%d [%p] config for key=%s serverBagContainsGroup=%d serverBagProfileNumber=%d
AVCRC [%s] %s:%d [%p] config for key=%s serverBagContainsGroup=%d fastRampUpEnabled=%d fastRampUpNetworkStableDuration=%f fastRampUpTierGap=%d fastRampUpRTTRatio=%F
AVCRC [%s] %s:%d [%p] config for key=%s serverBagContainsGroup=%d oscillationAvoidanceEnabled=%d oscillationAvoidanceTiersHitThreshold=%d oscillationAvoidanceTierChangeThreshold=%d oscillationAvoidanceDurationRatio=%f oscillationAvoidanceDurationRatioAggressive=%f
AVCRC [%s] %s:%d [%p] config for key=%s serverBagContainsGroup=%d wifiEmergencyTierEnabled=%d rampDownWiFiEmergencyTierCoolDownTime=%f lowestNonEmergencyTierIndexWiFi=%d
AVCRC [%s] %s:%d [%p] config for key=%s serverBagContainsGroup=%d offChannelHighRatio=%f offChannelLowRatio=%f autoResumeTime=%f
AVCRC [%s] %s:%d [%p] config for key=%s serverBagContainsGroup=%d packetLossRateThresholdInitial=%f packetLossRateThresholdMin=%f packetLossRateThresholdMax=%f packetLossRateThresholdTarget=%f
AVCRC [%s] %s:%d [%p] config for key=%s serverBagContainsGroup=%d rampDownLossEventThresholdRatio=%f
AVCRC [%s] %s:%d VCRateControl experiment report=%s
AVCRC [%s] %s:%d %@(%p) VCRateControl experiment report=%s
AVCRC [%s] %s:%d [%p] config for key=%s serverBagContainsGroup=%d burstyTrafficUplink=%d burstyTrafficDownlink=%d
AVCRC [%s] %s:%d Apply algorithm config rampUpUplinkBLERThreshold=%u, rampDownUplinkBLERThreshold=%u, rampUpUplinkBLERDuration=%f, rampDownUplinkBLERDuration=%f
AVCRC [%s] %s:%d %@(%p) Apply algorithm config rampUpUplinkBLERThreshold=%u, rampDownUplinkBLERThreshold=%u, rampUpUplinkBLERDuration=%f, rampDownUplinkBLERDuration=%f
AVCRC [%s] %s:%d Not allowed to force algorithm config for mode=%d yet!
AVCRC [%s] %s:%d %@(%p) Not allowed to force algorithm config for mode=%d yet!
AVCRC [%s] %s:%d Forced the initialBitrate=%u, initialTierIndex=%d
AVCRC [%s] %s:%d %@(%p) Forced the initialBitrate=%u, initialTierIndex=%d
AVCRC [%s] %s:%d Failed to create nwActivity
AVCRC [%s] %s:%d %@(%p) Failed to create nwActivity
AVCRC [%s] %s:%d Not using nwConnectionNotification
AVCRC [%s] %s:%d %@(%p) Not using nwConnectionNotification
AVCRC [%s] %s:%d Wrong statistics type=%d
AVCRC [%s] %s:%d %@(%p) Wrong statistics type=%d
AVCRC [%s] %s:%d (%p) Report initial ramp up done with bitrateDelta:%d, timeDelta:%f, initialBitrate:%d
AVCRC [%s] %s:%d (%p) rateControllerDelegate is nil
AVCRC [%s] %s:%d (%p) Reporting target bitrate change for mode=%d old targetBitrate=%u newTargetBitrate=%u old rateChangeCounter=%u newRateChangeCounter=%u
AVCRC [%s] %s:%d (%p) Forcing VCRateControl TxCap to %u from defaults
AVCRC [%s] %s:%d (%p) Forcing VCRateControl TxRate to %u from defaults
AVCRC [%s] %s:%d (%p) Configuration mode %d not supported
AVCRC [%s] %s:%d @=@ Health: VCRC (%p) mode=%d, targetBitrate=%u kbps, bitrateCap=%u kbps, actualBitrate=%u kbps, RemoteBWE=%u kbps, LocalBWE=%u kbps, RTT=%u ms, OWRD=%u ms, %s%.2f%%, %s%.2f%%
VCRC [%s] %s:%d NWConnection notification is nil
VCRC [%s] %s:%d NWConnection packet event is nil
VCRC [%s] %s:%d Cannot get rate control feedback message!
VCRC [%s] %s:%d Out of order feedback message detected with timestamp=%u, controller mediaTimestamp=%u
AVConferenceAPI [%s] %s:%d Network quality graph is enabled.
AVConferenceAPI [%s] %s:%d useServer=%d
AVConferenceAPI [%s] %s:%d %@(%p) useServer=%d
AVConferenceAPI [%s] %s:%d AVConference: server died, but AVConference has already deallocated, NO-OP
AVConferenceAPI [%s] %s:%d AVConference: Server initialization failed
@:@ AVConference-init
AVConferenceAPI [%s] %s:%d @:@ AVConference-init (%p) clientUUID=%@
AVConferenceAPI [%s] %s:%d initializeNewCallWithDeviceRole:%d callID=%d (not using XPC)
@:@ AVConference-newCall
AVConferenceAPI [%s] %s:%d @:@ AVConference-newCall (%p) callID=%d, deviceRole=%d
AVConferenceAPI [%s] %s:%d 
AVConferenceAPI [%s] %s:%d %@(%p) 
@:@ AVConference-dealloc
AVConferenceAPI [%s] %s:%d @:@ AVConference-dealloc (%p)
AVConferenceAPI [%s] %s:%d >>>>> Sending ARPL data to VideoConference via XPC (in AVConference) <<<<<
AVConferenceAPI [%s] %s:%d >>>>> mediaservd not supported - cannot send ARPL data <<<<<
AVConferenceAPI [%s] %s:%d AVConference: report session ID: %s
AVConferenceAPI [%s] %s:%d AVConference: Server - Calling startConnectionWithParticipantIDUsingInviteData caps = %s] 
AVConferenceAPI [%s] %s:%d AVConference startConnectionWithCallID: IDS Socket %d duped to %d
AVConferenceAPI [%s] %s:%d AVConference: Server - Finished calling startConnectionWithParticipantIDUsingInviteData]
@:@ AVConference-start
AVConferenceAPI [%s] %s:%d @:@ AVConference-start (%p) callID=%d, audioEnabled=%d, audioPaused=%d, videoEnabled=%d, videoPaused=%d, relayEnabled=%d, didSucceed=%d, error=%@
@:@ AVConference-stop
AVConferenceAPI [%s] %s:%d @:@ AVConference-stop (%p) callID=%d
@:@ AVConference-cancel
AVConferenceAPI [%s] %s:%d @:@ AVConference-cancel (%p) callID=%d
AVConferenceAPI [%s] %s:%d this function is deprecated
AVConferenceAPI [%s] %s:%d statsForCallID: %s, %d
AVConferenceAPI [%s] %s:%d AVConference: My nat type is = %d
AVConferenceAPI [%s] %s:%d updateCapabilities: isAudioEnabled needs to be YES when isVideoEnabled is set
@:@ AVConference-updateCapabilities
AVConferenceAPI [%s] %s:%d @:@ AVConference-updateCapabilities (%p) callID=%d, audioEnabled=%d, audioPaused=%d, videoEnabled=%d, videoPaused=%d, relayEnabled=%d, deviceRole=%d
AVConferenceAPI [%s] %s:%d callID %ld newCapabilities %s
AVConferenceAPI [%s] %s:%d AVConference: setServerInfo completed with %s
@:@ AVConference-didStart
AVConferenceAPI [%s] %s:%d @:@ AVConference-didStart (%p) callID=%u, didSucceed=%d, error=%@
@:@ AVConference-didStop
AVConferenceAPI [%s] %s:%d @:@ AVConference-didStop (%p) callID=%u, error=%@
AVConferenceAPI [%s] %s:%d AVConference: Notify client %d, ipChange %s
AVConferenceAPI [%s] %s:%d AVConference: notifying client %p of remoteMediaStalled %d for callID %d
@:@ AVConference-didReceiveFirstFrame
AVConferenceAPI [%s] %s:%d @:@ AVConference-didReceiveFirstFrame (%p) callID=%u
AVConferenceAPI [%s] %s:%d callID=%d, responseDict=%s
AVConferenceAPI [%s] %s:%d %@(%p) callID=%d, responseDict=%s
@:@ AVConference-setConferenceState
AVConferenceAPI [%s] %s:%d @:@ AVConference-setConferenceState state=%d, callID=%d
AVConferenceAPI [%s] %s:%d didStartConnectionBlock: error = %p, result = %s
AVConferenceAPI [%s] %s:%d didStartConnectionBlock:strongAVConference == NULL
AVConferenceAPI [%s] %s:%d didStartConnectionBlock:strongAVConference (%d)
AVConferenceAPI [%s] %s:%d AVConference: notified client %p of didStartCallID %d
AVConferenceAPI [%s] %s:%d AVConference: notified client %p of didStopCallID %d, callMetadataDict = %s
AVConferenceAPI [%s] %s:%d AVConference: notified client %p of callID %d isSendingAudio %d
AVConferenceAPI [%s] %s:%d AVConference: notified client %p of callID %d didPauseAudio %d
AVConferenceAPI [%s] %s:%d AVConference: notified client %p of callID %d didPauseVideo %d
AVConferenceAPI [%s] %s:%d relayCancelBlock called (callID %d) with...%s
AVConferenceAPI [%s] %s:%d relayCancelBlock called (callID %d)
AVConferenceAPI [%s] %s:%d AVConference: notified client %p (%d) of video degraded %d isRemote = %d
AVConferenceAPI [%s] %s:%d AVConference: notified client %p (%d) of network connection hint %d
AVConferenceAPI [%s] %s:%d AVConference: >>>>> Relaying incoming ARPL data from VideoConferenceManager via XPC connection to AVConference delegate (in AVConference) <<<<<
AVConferenceAPI [%s] %s:%d AVConference: notified client of outdated cache for call ID %d
AVConferenceAPI [%s] %s:%d serverDied
AVConferenceAPI [%s] %s:%d AVConference: mediaserverd died, notifying client
@:@ AVConference-serverDied
AVConferenceAPI [%s] %s:%d @:@ AVConference-serverDied (%p)
 [%s] %s:%d Local preferredAudioCodec:%d, allowAudioSwitching:%d
 [%s] %s:%d Failed to allocate negotiation results
 [%s] %s:%d Failed to allocate negotiation audio results
 [%s] %s:%d Failed to allocate negotiation video results
 [%s] %s:%d Failed to allocate negotiation screen results
 [%s] %s:%d Failed to allocate negotiation moments results
 [%s] %s:%d Failed to allocate FaceTime settings results
 [%s] %s:%d Failed to allocate the negotiated stream groups array
 [%s] %s:%d Found one to one stream group for groupID=%s
 [%s] %s:%d Failed to find one to one stream group for groupID=%s
 [%s] %s:%d Get negotiated results for stream group groupID=%s
 [%s] %s:%d Failed to get negotiated results for stream group groupID=%s
 [%s] %s:%d Video payload OVERRIDE is PL_INVALID! Ignoring ...
 [%s] %s:%d Remote client doesn't support video OVERRIDE payload (%d). Ignoring ...
 [%s] %s:%d Local client doesn't support video OVERRIDE payload (%d). Ignoring ...
 [%s] %s:%d Video payload OVERRIDE to %d
 [%s] %s:%d Failed to allocate updatedRules array
 [%s] %s:%d No matching remote rules for payload=%d transport=%d encoding=%d
 [%s] %s:%d { 0, 0, %d, @"%@", 0x%x, @"%@", 0x%08x, %d, %d, %d, %d }
 [%s] %s:%d VCHardwareSettingsMac: Your machine arch is 0x%x
 [%s] %s:%d VCHardwareSettingsMac: Your machine arch is CPUFAMILY_UNKNOWN, 0x%x
 [%s] %s:%d VCHardwareSettingsMac: HW encoder is available on this platform.
 [%s] %s:%d VCHardwareSettingsMac: HW encoder is NOT available on this platform.
 [%s] %s:%d Comparing %d (0x%x) and %d (0x%x), result=%d
 [%s] %s:%d Forcing max screen encoders=%d
 [%s] %s:%d Forcing mixed in system audio
 [%s] %s:%d Power spectrum initialzed with incorrect arguments: binCount[%d] sinkContext[%p] sinkCallback[%p]!
 [%s] %s:%d @=@ Health: VCAudioPowerSpectrum Power spectrum for streamToken=%u averageLevel=%.02f
 [%s] %s:%d Power spectrum is not correctly configured: context[%p] sincCallback[%p] sinkContext[%p]
 [%s] %s:%d error setting up VCAudioPowerSpectrum
 [%s] %s:%d binCount:%d
 [%s] %s:%d Unsupported format id: %d
 [%s] %s:%d Unsupported format flags: %x
 [%s] %s:%d Failed to allocate sample buffer
 [%s] %s:%d Failed to create octave to index table
 [%s] %s:%d Failed to create bin interpolation indexes
 [%s] %s:%d Failed to create hanning window
 [%s] %s:%d Failed to create channel settings: channelCount=%d
 [%s] %s:%d Failed to setup the channel settings[%d]
 [%s] %s:%d Failed to allocate _octave2IndexTable6 [count=%d]
 [%s] %s:%d Output bin count is 0
 [%s] %s:%d lerp[%d] : %f
 [%s] %s:%d Failed to create FFT
 [%s] %s:%d Failed to create bins
 [%s] %s:%d Failed to allocate octaveDbOld [count=%d]
 [%s] %s:%d Failed to allocate octaveDb [count=%d]
 [%s] %s:%d Failed to allocate octaveDbFilt [count=%d]
 [%s] %s:%d Failed to allocate octaveDbFiltInterpolated [count=%d]
 [%s] %s:%d Failed to history buffer
 [%s] %s:%d Failed to allocate fftBuffer
 [%s] %s:%d Output bin count is 0!
 [%s] %s:%d Current bin count is %d. Setup run a second time ?
VCRC [%s] %s:%d dealloc called %p
VCRC [%s] %s:%d statisticsCollector[%p] is already started
VCRC [%s] %s:%d start
VCRC [%s] %s:%d statisticsCollector[%p] is already stopped
VCRC [%s] %s:%d stop
VCRC [%s] %s:%d %s %s
VCRC [%s] %s:%d setStatistics:newStatsistics is deprecated
VCRC [%s] %s:%d getStatistics:keys is deprecated
VCRC [%s] %s:%d Invalid parameter. statisticsCollector=%p message=%p
VCRC [%s] %s:%d Mode %d does not support reading the statistics collection
VCRC [%s] %s:%d Unknown type of packet received statistics
VCRC [%s] %s:%d update audio loss: %d
VCRC [%s] %s:%d update video loss: %d
VCRC [%s] %s:%d Reset remotePAcketReceivedAudio from current=%d to feedback=%d
VCRC [%s] %s:%d Feedback out of order count=%d with packet receive count video:[current=%d, feedback=%d], audio:[current=%d, feedback=%d]
 [%s] %s:%d %s:%d Exiting state:%d Entering state:%d
 [%s] %s:%d Time counter wrapped around
 [%s] %s:%d calculateOWRDWithTimestamp: Lag (%fs) looks spurios (short %fs: long %fs : threshold %fs), discarding
 [%s] %s:%d calculateOWRDWithTimestamp: timestamp: %u, now: %f, Lag %fs short %fs: long %fs : owrd %fs
 [%s] %s:%d CommTest: select() failed (%d)
 [%s] %s:%d CommTest: recvfrom() failed (%d)
 [%s] %s:%d CommTest: recvfrom() returns 0
 [%s] %s:%d CommTest: bad seq# %08X.
 [%s] %s:%d GKNATObserver_SCContext: GKNATObserverDynamicStoreCallback(): changedKeys = %s
 [%s] %s:%d GKNATObserver_SCContext: GKNATObserverDynamicStoreCallback(): self.observer = %s
 [%s] %s:%d GKNATObserver: no NAT cache available, running NAT check
 [%s] %s:%d GKNATObserverInternal(%p) -init
 [%s] %s:%d GKNATObserverInternal(%p) -dealloc
 [%s] %s:%d GKNATObserver setting flags[%08X] mask[%08X] old[%08X]=>result[%08X] (cached:%d)
 [%s] %s:%d GKNATObserver _commNATFlagDictionary = %s
 [%s] %s:%d GKNATObserver: running NAT check from startConnection
 [%s] %s:%d GKNATObserver: updating cache with new NAT dict
 [%s] %s:%d GKNATObserver: using cached NAT dict
 [%s] %s:%d GKNATObserver reporting NAT Type dictionary [%s]
 [%s] %s:%d GKNATObserver not reporting NAT Type dictionary [%s] - no change
 [%s] %s:%d GKNATObserver reporting NAT Type %d
 [%s] %s:%d GKNATObserver cannot report NAT Type %d (%d/%d), delegate does not respond to callbacks!
 [%s] %s:%d GKNATObserver cannot report NAT Type %d (%d/%d), delegate is nil!
 [%s] %s:%d natchecktimeout using default: %lf
 [%s] %s:%d natchecktimeout set to %lf from bag
 [%s] %s:%d commnat_test: [%08X] after %0.6lfs (%s)
 [%s] %s:%d callHTTPTestFromIPPort: [%s], IP: %u.%u.%u.%u:%u
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/GKNATObserver.m:%d: connectTCPSocket: connect failed (%d)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/GKNATObserver.m:%d: callHTTPTestFromIPPort: select failed for connect (%d)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/GKNATObserver.m:%d: callHTTPTestFromIPPort: connect timed out %d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/GKNATObserver.m:%d: callHTTPTestFromIPPort: connect refused (%d)
 [%s] %s:%d callHTTPTestFromIPPort: TCP socket connected!
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/GKNATObserver.m:%d: callHTTPTestFromIPPort: write failed
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/GKNATObserver.m:%d: callHTTPTestFromIPPort: read failed
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/GKNATObserver.m:%d: callHTTPTestFromIPPort: server terminated
 [%s] %s:%d callHTTPTestFromIPPort: for %s result %d
 [%s] %s:%d GKNATObserver:ensureNatCachePathExists : %d
 [%s] %s:%d GKNATObserver: NAT Cache = %s
 [%s] %s:%d GKNATObserver: Caching NAT flags [%s] for network "%s"...
 [%s] %s:%d GKNATObserver: Pruning network "%s" from NAT flags cache. (GKNATObserverMaxCachedNetworks=%d)
 [%s] %s:%d GKNATObserver: NATCheckWithIPPort starting for %s
 [%s] %s:%d GKNATObserver: nameForNetworkWithIPPort took %0.lf seconds
 [%s] %s:%d GKNATObserver: cache lookup took %0.lf seconds
 [%s] %s:%d GKNATObserver: Cached NAT flags for network "%s": [%08lX]
 [%s] %s:%d GKNATObserver: Network on interface "%s" [%s] did not change, skipping...
 [%s] %s:%d GKNATObserver: cache lookup semaphore took %0.lf seconds
 [%s] %s:%d GKNATObserver: updating NAT flags dictionary took %0.lf seconds
 [%s] %s:%d GKNATObserver: caching took %0.lf seconds
 [%s] %s:%d No tcp server... aborting
 [%s] %s:%d No https server... aborting
 [%s] %s:%d NAT64ResolverCallBack: got prefix for %s
 [%s] %s:%d GKNATObserver: %s
 [%s] %s:%d GKNATObserver: start setting up NAT checks (delay: %lf)
 [%s] %s:%d Trigger interface change directly from non-carrier check
 [%s] %s:%d GKNATObserver: queued non-carrier NAT check %d@%d, %s
 [%s] %s:%d GKNATObserver: carrier static NAT type: %08X
 [%s] %s:%d Trigger interface change directly from carrier check
 [%s] %s:%d GKNATObserver: queued carrier NAT check on %s
 [%s] %s:%d GKNATObserver: empty carrier NAT type set
 [%s] %s:%d GKNATObserver: No usable carrier interfaces found.
 [%s] %s:%d GKNATObserver: _nonCarrierInterfacesOnly set, skipping carrier interfaces test
 [%s] %s:%d GKNATObserver: Removing interfaces from consideration: %s
 [%s] %s:%d GKNATObserver: no usable interfaces (retry #%d in %0.3lfs)
 [%s] %s:%d GKNATObserver: no usable interfaces (already retried %d times)
 [%s] %s:%d GKNATObserver: done waiting for NAT check group
 [%s] %s:%d Dynamic store is nil
 [%s] %s:%d GKNATObserver: SCDS dictionary: %s
 [%s] %s:%d GKNATObserver: SCDynamicStoreSetNotificationKeys failed, we will miss network change notifications!
 [%s] %s:%d GKNATObserver: SCDynamicStoreSetDispatchQueue failed, we will miss network change notifications!
 [%s] %s:%d GKNATObserver: SCDynamicStoreCreate failed, we will miss network change notifications!
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/GKNATObserver.m:%d: createTCPSocket: socket() failed (%d)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/GKNATObserver.m:%d: createTCPSocket: bind() failed (%d)
 [%s] %s:%d Failed to create VCAudioStreamGroupCommon
 [%s] %s:%d @=@ Health: VCAudioStreamReceiveGroup %@ speakerProcsCalled=%ld, averageOutputPower=%f, syncTargetCalled=%ld
 [%s] %s:%d System audio start capture failed on receive stream group with error=%@
 [%s] %s:%d Unexpected type of syncDestination
 [%s] %s:%d Adding syncDestination=%s, common=%p
 [%s] %s:%d %@(%p) Adding syncDestination=%s, common=%p
 [%s] %s:%d Failed to add sync destination. streamGroup=%s syncDestination=%s
 [%s] %s:%d Failed to set sync source on sync destination
 [%s] %s:%d Removing syncDestination=%s, common=%p
 [%s] %s:%d %@(%p) Removing syncDestination=%s, common=%p
 [%s] %s:%d Failed removing remove syncDestination=%s from streamGroup=%s
 [%s] %s:%d Audio is stalling with duration %f
 [%s] %s:%d Audio has stopped stalling
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCAudioStreamReceiveGroup.m:%d: Updating audio priority %d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCAudioStreamReceiveGroup.m:%d: ActiveCount:%d audioPriority:%d audioActive:%d
 [%s] %s:%d Trying to set the IO duration while relay is running
 [%s] %s:%d Relay IO is already started
 [%s] %s:%d Failed to restart the other IO
 [%s] %s:%d Failed to create packet thread: %@
 [%s] %s:%d Failed to start the relay thread: %@
 [%s] %s:%d VCAudioRelay stopped
 [%s] %s:%d Can't stop: relay IO is nil
 [%s] %s:%d Can't stop: invalid IO
 [%s] %s:%d Relay IO is not started
 [%s] %s:%d Starting client relay IO
 [%s] %s:%d Failed to start client IO
 [%s] %s:%d Starting remote relay IO
 [%s] %s:%d Failed to start remote IO
 [%s] %s:%d Stopping client relay IO
 [%s] %s:%d VCAudioRelay client stopped
 [%s] %s:%d Stopping remote relay IO
 [%s] %s:%d VCAudioRelay remote stopped
 [%s] %s:%d Trying to set network clock while relay is running
 [%s] %s:%d newAudioConverterFromFormat failed with error %d
 [%s] %s:%d AudioConverterSetProperty(kAudioConverterPrimeMethod) failed with error %d
 [%s] %s:%d Remote relay IO:
 [%s] %s:%d Client relay IO:
 [%s] %s:%d Periodic health print already initialized
 [%s] %s:%d @=@ Health: VCAudioRelay blocksRelayedCount=%d, clientUplinkPowerMovingAverage=%f, clientDownlinkPowerMovingAverage=%f
 [%s] %s:%d setRealTimeConstraints() failed with error %d
 [%s] %s:%d VCAudioRelayThread stopped
 [%s] %s:%d Invalid value for sessionMode=%d
 [%s] %s:%d Invalid client dictionary!
 [%s] %s:%d %@(%p) Invalid client dictionary!
 [%s] %s:%d Does not support oneToOne mode, but session configuration supports oneToOne Mode
 [%s] %s:%d Failed to create camera rules!
 [%s] %s:%d Invalid packet type: %d
 [%s] %s:%d %@(%p) Invalid packet type: %d
 [%s] %s:%d RTPC Packet is nil
 [%s] %s:%d %@(%p) RTPC Packet is nil
 [%s] %s:%d streamToken=%ld delegate=%p
 [%s] %s:%d %@(%p) streamToken=%ld delegate=%p
 [%s] %s:%d %@(%p) 
 [%s] %s:%d Invalid client registration. RealtimeContext[%p] clientContext[%p] callback[%p] sinkObject[%p]
 [%s] %s:%d Failed to enqueue cient=%p realtimeContext=%p clientContext=%p queue=%p status=%d
 [%s] %s:%d Invalid client unregistration: RealtimeContext[%p] clientContext[%p]
 [%s] %s:%d Failed to enqueue client=%p realtimeContext=%p clientContext=%p queue=%p status=%d
 [%s] %s:%d Invalid operation: %d
 [%s] %s:%d error powerSpectrum[%p] already registered
 [%s] %s:%d GKSConnSettings: %@ => %@
 [%s] %s:%d GKSConnSettings: set server: %@
 [%s] %s:%d  **** GKSConnectivitySettings:setServerAddresses: "Special Allocation For Heap Inspection" has been enabled.
 [%s] %s:%d GKSConnSettings: set client: %@
 [%s] %s:%d GKSConnSettings: prepare to enter getIPPortForService
 [%s] %s:%d GKSConnSettings getCachedIPPort: %08X:%u
 [%s] %s:%d GKSConnSettings getCachedIPPort failed
 [%s] %s:%d GKSConnSettings getIPPortForService: %s == 00
 [%s] %s:%d GKSConnSettings getIPPortForService: %s == nil
 [%s] %s:%d GKSConnSettings getIPPortForService: GKS setting for get SNATMAP IP: %s
 [%s] %s:%d GKSConnSettings getIPPortForService: %s failed to resolve
 [%s] %s:%d GKSConnSettings getIPPortForService: cached %08X:%u
 [%s] %s:%d GKSConnSettings getIPPortForService: %s == %08X:%u
 [%s] %s:%d Clear the locally cached serverbag settings with interval %d seconds [cacheClearTime: %f, now %f]
 [%s] %s:%d Not yet to clear the locally cached serverbag settings. Still %d seconds left [cacheClearTime: %f, now %f]
 [%s] %s:%d value %s
 [%s] %s:%d %s is not present!
 [%s] %s:%d storebag shows we do %s support iRAT recommendation
 [%s] %s:%d storebag does not have %s, enable iRAT recommendation support by default
 [%s] %s:%d storebag shows we should use rate controller type %d
 [%s] %s:%d storebag does not have %s, select both rate controller type by default
 [%s] %s:%d storebag value for '%@' is '%d'
 [%s] %s:%d storebag does not have '%@', default value '%d' selected
 [%s] %s:%d storebag does not have %@, default value '%d' selected
 [%s] %s:%d %s: Read key 'useAdaptiveLearningForFaceTime' from user defaults: %d
 [%s] %s:%d %s: No key 'useAdaptiveLearningForFaceTime' in user defaults. Trying to find it in the storebag
 [%s] %s:%d %s: found storebag value '%@'=%d
 [%s] %s:%d %s: storebag does not have %@, using defaul value %D
 [%s] %s:%d %s: storebag does not have %@, using defaul value %d
 [%s] %s:%d %s: found storebag value '%@'=%f
 [%s] %s:%d %s: storebag does not have %@, using defaul value %f
 [%s] %s:%d Found storebag value '%@'=%@, using threshold value %d
 [%s] %s:%d Storebag does not have %@, using threshold value %d from default distribution %@
 [%s] %s:%d Found storebag value '%@'=%f, using %f
 [%s] %s:%d Storebag does not have %@, using default value %f
 [%s] %s:%d Found storebag value '%@'=%@
 [%s] %s:%d Storebag does not have %@, using default value %d
 [%s] %s:%d Storebag does not have %@, using default value %@
 [%s] %s:%d storebag value for '%@' is '%@'
 [%s] %s:%d storebag does not have '%@', default value '%@' selected
 [%s] %s:%d storebag map value for '%@' is '%@'
 [%s] %s:%d storebag does not have '%@'
 [%s] %s:%d Found storebag value '%@'=%@, using %@
 [%s] %s:%d Storebag does not have %@, using %@
 [%s] %s:%d Storebag does not have %@, using feature flag domain=%s name=%s value=%d
 [%s] %s:%d Setting maxAllowedRedundancyPercentage = %d
 [%s] %s:%d Unexpected reportMinPeriod storebag value %f, falling back to default %f
 [%s] %s:%d Redundancy frozen reason=%d isNetworkCongested=%d _offChannelTimeRatio=%2.3f bluetoohResetFlag=%d
 [%s] %s:%d Redundancy unfrozen reason=%d isNetworkCongested=%d _offChannelTimeRatio=%2.3f
 [%s] %s:%d Redundancy reset
 [%s] %s:%d wrong type of statistics message is processed by VCRedundancyControl type=%d
 [%s] %s:%d wrong type of statistics message is processed by VCRedundancyControl
 [%s] %s:%d Frame Losss Stats size=%d loss=%d
 [%s] %s:%d Redundancy level changed from %d to %d _redundancyMode=%d redundancyPercentageBasedOnPLR=%d redundancyPercentageBasedOnBurstyLoss=%d _plrEnvelope=%3.3f _packetLossPercentage=%3.3f _packetLossPercentageVideo=%3.3f _mediaControlInfoFECFeedbackVersion=%d
 [%s] %s:%d Redundancy level _packetLossPercentage=%2.2f _packetLossPercentageVideo=%2.2f _plrEnvelope=%2.2f currentPLR=%2.2f GetFECVPLR=%2.2f
 [%s] %s:%d Parameter 'connectionID' may not be NULL
 [%s] %s:%d Failed to create nw_connection for RTP
 [%s] %s:%d Failed to setup NWConnection for RTP transport session
 [%s] %s:%d Failed to create nw_connection for RTCP
 [%s] %s:%d Failed to setup NWConnection for RTCP transport session
 [%s] %s:%d Get error %@ from nw connection with state: %d!
 [%s] %s:%d Parameter 'operationResult' must be non-nil
 [%s] %s:%d Parameter 'semaphore' must be non-nil
 [%s] %s:%d Get nw connection state %d
 [%s] %s:%d Failed to set handlers for NWConnection '%@'
 [%s] %s:%d nw_connection ready timeout
 [%s] %s:%d nw_connection start failed
 [%s] %s:%d NULL vfd
 [%s] %s:%d Invalid Stream Type
 [%s] %s:%d VTP socket creation failed for RTP
 [%s] %s:%d VTP socket creation failed for RTCP
 [%s] %s:%d VTP_SetSocketMode failed %x
 [%s] %s:%d VTP_SetPktType failed %x
 [%s] %s:%d VTP_ScheduleReceiveForNWConnection failed for RTP
 [%s] %s:%d VTP_ScheduleReceiveForNWConnection failed for RTCP
 [%s] %s:%d nw_connection %p is backed by socket %d duped to %d
 [%s] %s:%d nw_connection %p is backed by socket %d. Failed to dup
 [%s] %s:%d Not setting unexpected wifi nw_interface_subtype_t %d
 [%s] %s:%d Not setting unexpected nw_interface_type_t %d
 [%s] %s:%d nw_connection_copy_current_path failed
 [%s] %s:%d nw_connection_copy_endpoint failed
 [%s] %s:%d nw_endpoint_get_address failed
 [%s] %s:%d Invalid direction %d
 [%s] %s:%d Failed to create sync destination change event queue
 [%s] %s:%d %@(%p) Failed to create sync destination change event queue
 [%s] %s:%d Failed to create sync destination change event pool
 [%s] %s:%d Failed to create audio power spectrum
 [%s] %s:%d Streams are already setup
 [%s] %s:%d %@(%p) Streams are already setup
 [%s] %s:%d updated _maxChannelCount to channel count: %d
 [%s] %s:%d %@(%p) updated _maxChannelCount to channel count: %d
 [%s] %s:%d Failed to create audioIO. operatingMode=%d deviceRole=%d direction=%d
 [%s] %s:%d %@(%p) Failed to create audioIO. operatingMode=%d deviceRole=%d direction=%d
 [%s] %s:%d Failed to reconfigure: audioIO=%p operatingMode=%d deviceRole=%d direction=%d
 [%s] %s:%d %@(%p) Failed to reconfigure: audioIO=%p operatingMode=%d deviceRole=%d direction=%d
 [%s] %s:%d configured audioIO=%p operatingMode=%d deviceRole=%d direction=%d isMuted=%d audioType=%d maxChannelCount=%d
 [%s] %s:%d %@(%p) configured audioIO=%p operatingMode=%d deviceRole=%d direction=%d isMuted=%d audioType=%d maxChannelCount=%d
 [%s] %s:%d Failed to create sample buffer
 [%s] %s:%d %@(%p) Failed to create sample buffer
 [%s] %s:%d stop audio IO failed
 [%s] %s:%d %@(%p) stop audio IO failed
 [%s] %s:%d configure audio IO failed
 [%s] %s:%d %@(%p) configure audio IO failed
 [%s] %s:%d start audio IO failed
 [%s] %s:%d %@(%p) start audio IO failed
 [%s] %s:%d (%p) starting audioIO=%p
 [%s] %s:%d %@(%p) (%p) starting audioIO=%p
 [%s] %s:%d Stopping audioIO=%p
 [%s] %s:%d %@(%p) Stopping audioIO=%p
 [%s] %s:%d audioIO already stopped
 [%s] %s:%d %@(%p) audioIO already stopped
 [%s] %s:%d Failed to configure the power spectrum source
 [%s] %s:%d %@(%p) Failed to configure the power spectrum source
 [%s] %s:%d Health Monitor for Audio Stream %s Group streamID=%u audio=%ukbps VCAudioIO=%p procsCount=%u averagePower=%f state=%d noVoiceActivityPacketCount=%u
 [%s] %s:%d %@(%p) Health Monitor for Audio Stream %s Group streamID=%u audio=%ukbps VCAudioIO=%p procsCount=%u averagePower=%f state=%d noVoiceActivityPacketCount=%u
 [%s] %s:%d Unexpected event type
 [%s] %s:%d Error adding sync destination change event to the queue. error=%d
 [%s] %s:%d %@(%p) Error adding sync destination change event to the queue. error=%d
 [%s] %s:%d audioIO=%p
 [%s] %s:%d %@(%p) audioIO=%p
 [%s] %s:%d syncDestination[%p] is already in the list for streamGroup[%p]
 [%s] %s:%d Failed allocating memory for listEntry
 [%s] %s:%d Added syncDestination[%p] from list, on streamGroup[%p]
 [%s] %s:%d Removed syncDestination[%p] from list, on streamGroup[%p]
 [%s] %s:%d GKInterfaceListener Dynamic store instance NULL, discontinuing Wifi detection.
 [%s] %s:%d DynamicStoreCallbackForWifiChanges: key[%d]=%s
 [%s] %s:%d GKInterfaceListener network %d %s
 [%s] %s:%d GKInterfaceListener no active interface found.
 [%s] %s:%d GKInterfaceListener SCDynamicStoreSetNotificationKeys failed
 [%s] %s:%d GKInterfaceListener: network information changed.
 [%s] %s:%d GKInterfaceListener: not setting up correctly
 [%s] %s:%d Link issues with interface %s 
 %s=%s 
 %s=%s 
 %s=%s
 [%s] %s:%d calculateNOWRDWithDuration exceeded max possible iterations iterationCount=%d first=%d frontIndex=%d rearIndex=%d time@first=%f time@rearIndex=%f  duration=%f
 [%s] %s:%d Didn't return a connection result in the ICE result wait queue.  This shouldn't happen
 [%s] %s:%d figFormat is NULL for audioBufferList=%p
 [%s] %s:%d sampleBuffer is NULL for audioBufferList=%p
 [%s] %s:%d Adding remote audio sample failed because we are in local recording mode.
 [%s] %s:%d sampleBuffer is NULL %p
 [%s] %s:%d remoteScreenAttributes is %f, %f
 [%s] %s:%d Should resize frames for moments:%d
 [%s] %s:%d VCMomentsHistory %s
 [%s] %s:%d VCMomentsHistory %s photo writing to file success(%d)
 [%s] %s:%d VCMomentsHistory %s timestamp %d
 [%s] %s:%d current writer doesn't exist
 [%s] %s:%d sample is NULL
 [%s] %s:%d %s %s
 [%s] %s:%d Ignoring Cleanup Active Request, because localVideoRecording is enabled.
 [%s] %s:%d completion handler count is %lu
 [%s] %s:%d currentWriter=%@
 [%s] %s:%d , %@
 [%s] %s:%d Setting image type from %d to %d
 [%s] %s:%d Setting video codec from %d to %d
 [%s] %s:%d write to file %d stillImageURL:%@
 [%s] %s:%d can not find such frame for timestamp %d in buffer
 [%s] %s:%d , VCMomentsUtil_SetupBufferPool for resizing failed
 [%s] %s:%d VCMomentsHistory visible Width is %f, height %f rect (%f,%f) (%fx%f)
 [%s] %s:%d for %@
 [%s] %s:%d copying live photo for %@
 [%s] %s:%d copying file failed %@
 [%s] %s:%d copying file from  %@ to %@ error %d
 [%s] %s:%d handler for %@ not found
 [%s] %s:%d , failed to create sample buffer for %s, timestamp %d
 [%s] %s:%d Updating video buffer for timestamp %d
 [%s] %s:%d Current emulated network serviceRate=%d, serviceRateMean=%d, serviceRateStdDev=%d, AQMRate=%d
 [%s] %s:%d packetID:%d, isLost:%d, packet size:%d, serviceRate:%d, serviceTime:%f, arrivalTime:%f, departureTime:%f
 [%s] %s:%d Cannot update index when updating network settings
VCRC [%s] %s:%d Configuring VCRateControl algorithm with targetBitrate=%d, minBitrate=%d, maxBitrate=%d, burstyTraffic=%d
VCRC [%s] %s:%d This algorithm does not support statistics type:%d to do rate control
VCRC [%s] %s:%d wrong type of statistics message is processed by VCRateControl
VCRC [%s] %s:%d Duplicated feedback or out-of-order feedback messages! timestamp:0x%04X, previousTimestamp:0x%04X
VCRC [%s] %s:%d Rate controller is paused
VCRC [%s] %s:%d Unknown VCRateControl state %d
VCRC [%s] %s:%d wrong type of statistics message is processed by VCRateControl baseband
VCRC [%s] %s:%d %8.3f/%04X:
%.4f
%.4f
%.4f
%.4f %c
RTT:%-4u
PLR:%4.2f@%.1f
RRx:%4u
MBL:%d
%4u/%4u
  CS:%04X %04X %u BB: %3u
 UAT %s _
VCTextStream [%s] %s:%d VCTextStream[%p] %s
VCTextStream [%s] %s:%d 
VCTextStream [%s] %s:%d %@(%p) 
VCTextStream [%s] %s:%d Sending text:'%C'
VCTextStream [%s] %s:%d %@(%p) Sending text:'%C'
VCTextStream [%s] %s:%d Sending text:%@
VCTextStream [%s] %s:%d %@(%p) Sending text:%@
VCTextStream [%s] %s:%d Error: -didReceiveText: should be called instead of this method.
VCTextStream [%s] %s:%d %@(%p) Error: -didReceiveText: should be called instead of this method.
VCTextStream [%s] %s:%d error[%s]
VCTextStream [%s] %s:%d %@(%p) error[%s]
VCTextStream [%s] %s:%d Failed to create transport
VCTextStream [%s] %s:%d %@(%p) Failed to create transport
 [%s] %s:%d FigThreadCreate(LoopbackTunnelReceiveProc) failed %d
 [%s] %s:%d vtpIP = %s
 [%s] %s:%d LoopbackTunnelReceiveProc stopped
 [%s] %s:%d Registering with an invalid interface type=%u
 [%s] %s:%d %@(%p) Registering with an invalid interface type=%u
 [%s] %s:%d Registered rateSharingClient=%p for interface type=%u
 [%s] %s:%d De-registered rateSharingClient=%p for interface type=%u
 [%s] %s:%d De-registering an unregistered rateSharingClient=%p
 [%s] %s:%d %@(%p) De-registering an unregistered rateSharingClient=%p
 [%s] %s:%d Failed to create internal statistics collector for redundancy controller
 [%s] %s:%d Video redundancy is disabled.
 [%s] %s:%d In-appropriate mode %d for VCRedundancyControllerVideo
 [%s] %s:%d Filter out statistics not belong to this redundancyController with id:%llu, statisticsID:%llu
 [%s] %s:%d Video redundancy percentage changed from %d to %d with mode %d
 [%s] %s:%d Video redundancy interval %f, which should be 0 since we don't support cross-frame FEC yet
 [%s] %s:%d Reset redundancy strategy, BT device %s state=%d while WLAN's on 2.4GHz
 [%s] %s:%d %@(%p) Reset redundancy strategy, BT device %s state=%d while WLAN's on 2.4GHz
 [%s] %s:%d Invalid parameters 'buffer' passed to the method
 [%s] %s:%d Invalid size of input data %d
 [%s] %s:%d Attempt to set mapping for already mapped key '%@'. Suggested map '%d' will be ignored
 [%s] %s:%d Mapping set for '%@'
 [%s] %s:%d keyToCompare is not of VCMediaKeyIndex class
 [%s] %s:%d prefix is not of VCMediaKeyIndex class
 [%s] %s:%d Invalid parameters passed to the method
 [%s] %s:%d Size of input buffer is too small (bufferSize=%d < copySize=%d)
VCRC [%s] %s:%d AdaptiveLearning(AFRC): Setting up initial bitrate for segment %@ - learnt target bitrate %d, selected tier %d, default bitrate %d
VCRC [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/MediaQueue/AFRC.c:%d: calloc(%d) failed
VCRC [%s] %s:%d AFRCCreateHandle: RTCReportingAgent is nil
VCRC [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/MediaQueue/AFRC.c:%d: AFRCCreateHandle failed
VCRC [%s] %s:%d AFRCCreateHandle (CellTech local[%s:%d] remote[%s:%d]).
VCRC [%s] %s:%d Invalid parameter dwTxCap %u
VCRC [%s] %s:%d AFRC: Forcing AFRC TxCap to %u from defaults
VCRC [%s] %s:%d ### AFRCSetTxCap: (%u->%u)
VCRC [%s] %s:%d *!*!*!* UpdateRxEstimate: too short Seq; ------ dBWD: 0 (%d/%f/%d) 
VCRC [%s] %s:%d AFRCCalcRxEstimate [%d]: //////
/////tp: %d  ts/arr: %d/%f 
 seq: %d sz: %d 
 path: %d (%d)  BWD: %f/%f  Est: %f
VCRC [%s] %s:%d AFRCCalcRxEstimate [%d]: //////
VCRC [%s] %s:%d AFRCCalcRxEstimate [%d]: //////
VCRC [%s] %s:%d AFRCCalcRxEstimate [%d]: //////
/////tp: %d  ts/arr: %d/%f 
 seq: %d sz: %d 
 path: %d (%d)  BWD: %f/%f  Est: %f
VCRC [%s] %s:%d 
 AFRCCalcRxEstimate [%d]: //////
VCRC [%s] %s:%d Bandwidth estimation new: %d, afrc:%d
VCRC [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/MediaQueue/AFRC.c:%d: Bad ACK, #dropped SN doesn't match(%d != %u).
VCRC [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/MediaQueue/AFRC.c:%d: Bad ACK, #dropped SN exceeds limit(%d > %d).
VCRC [%s] %s:%d Baseband dropped %u packet(s) for PT %u.
VCRC [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/MediaQueue/AFRC.c:%d: Got PTs more than MAX_PAYLOADTYPES(%d) in a DropACK
VCRC [%s] %s:%d AFRCSetAudioPaused: local? %d, audio paused? %d
VCRC [%s] %s:%d AFRCUpdateCellTech: iLocalCellTech: %s -> %s  iRemoteCellTech: %s -> %s  fEnableRRx: %d  didHandover: %d
VCRC [%s] %s:%d ProcessWCMSetCallConfig: (%u->%u), interference: (%u), clientTxCap: %u
VCRC [%s] %s:%d ProcessWCMGetCallConfig: (TxCap %u, TxRate %u).
VCRC [%s] %s:%d ### Add BB dump for AFRC
VCRC [%s] %s:%d AFRCSetConnectionNumber (%d->%d)
VCRC [%s] %s:%d BWEstResetRecvrBWState
VCRC [%s] %s:%d BWEst FilterType: %d/%s <-- ImOnCellular: %d/%s  RemoteOnCellular: %d/%s  PeerIsOnIOS: %d 
VCRC [%s] %s:%d ////^^^^ BWEUpdateSenderRecvrEnabledStates: Sender/Recvr %d/%d iLocalCellTech: %s  iRemoteCellTech: %s
VCRC [%s] %s:%d ////^^^^ AFRCSetBWEstMode: Sender/Recvr (master) %d/%d 
VCRC [%s] %s:%d ////^^^^ AFRCSetBWEstMode: FALLING TO BW-EST BACKWARD COMPATIBLITY MODE
VCRC [%s] %s:%d AFRCSetBWECap newBitrateCap: %d -> dwFakeBitrateCap: %d  
VCRC [%s] %s:%d ### AFRC log %s
VCRC [%s] %s:%d ### AFRC dump %s
VCRC [%s] %s:%d ArrivalTime:%.4f, BWD:%.2f, state:%d, divergeCount:%d prob_seq:[duration:%.4f, size:%d, count:%d], EstimatedBandwidth:%.2f
VCRC [%s] %s:%d 
BIG FRAME report at %.3f, %d/%d frames: %s
VCRC [%s] %s:%d Audio fraction change [%.2f->%.2f].
VCRC [%s] %s:%d %s is hit, [audio:%u, factor:%.2f, FEC:%.2f, RED:%u, %u, %02X->%02X]
VCRC [%s] %s:%d AFRC: Video %s...
VCRC [%s] %s:%d AFRC: Congestion!!! TxRate v %u, Baseband.
VCRC [%s] %s:%d AFRC: %s
VCRC [%s] %s:%d AFRC: Congestion!!! TxRate v %u
VCRC [%s] %s:%d AFRC: TxRate ^ %u
VCRC [%s] %s:%d AFRC: [%u] Rate was limited
VCRC [%s] %s:%d AFRC: [%u] Stabilized (TxTS %u >= %u FB). now collecting samples...
VCRC [%s] %s:%d AFRC: [%u] Collected %d samples (TxTS %u)
VCRC [%s] %s:%d AFRC: %8.3f %.3f/%04X %.4f(%d) %u %.4f %.4f %u %u %u %u%s
VCRC [%s] %s:%d AFRC: %8.3f/%04X: %.4f %.4f %.4f %.4f %c RTT:%u PLR:%4.1f@%.1f %u %u RRx:%u MBL:%d %3u/%3u%s
BB: %u
%s%s
VCRC [%s] %s:%d Forcing Audio FEC Level 100,150,200 at PLR:(%.2f, %.2f, %.2f) from defaults
VCRC [%s] %s:%d Forcing AFRC TxCap to %u from defaults
VCRC [%s] %s:%d Forcing AFRC TxRate to %u from defaults
VCRC [%s] %s:%d ////^^^^ Initial BWEstEnableNewst_Recvr/_Sender %d/%d  
 BWEstProbeInterval: %f  BWEstDemoLogInterval: %d  BWEstLogType: %d  BWEstLogLevel: %x 
VCRC [%s] %s:%d ///////////////////////AFRCCreateHandle startAFRC//////////////////////// %p
VCRC [%s] %s:%d HackUploadBW: %d  V1BWE: %d 
VCRC [%s] %s:%d ////////////////// Loss event reports //////////////////////////
///// Video: %d/%d
last seq#: %d 
 Audio: %d/%d last seq#: %d
///// Avg. BW: %f  
  with %d reports
///////////////////////////////////////////////////////
VCRC [%s] %s:%d //////
////// In %.1f seconds: Video: %f KB/%d = %d B  avg. %.1f kbits/s  %.1f pkts/s 
//////                  Audio: %f KB/%d = %d B  avg. %.1f kbits/s  %.1f pkts/s 
VCRC [%s] %s:%d 
///// Avg. BW (ORG Scheme): %f  
  with %d reports
////// In %.1f seconds: Video: %f KB/%d = %d B  avg. %.1f kbits/s  %.1f pkts/s 
//////                  Audio: %f KB/%d = %d B  avg. %.1f kbits/s  %.1f pkts/s 
///////////////////////////////////////////////////////
VCRC [%s] %s:%d Enabling LF
VCRC [%s] %s:%d ^ %.3f since last LF; CRITICAL: letting it go; size is %d 
VCRC [%s] %s:%d ^^^^^ LARGE frame req'd of %d 
VCRC [%s] %s:%d ^^^^^ LARGE frame req'd of %d (%d, %d, R %d)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/MediaQueue/MediaQueue.c:%d: calloc(%d) failed
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/MediaQueue/MediaQueue.c:%d: CreateHandle failed
 [%s] %s:%d MediaQueueSendProc Thread already started
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/MediaQueue/MediaQueue.c:%d: pthread_create(MediaQueueSendProc) failed (%08X)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/MediaQueue/MediaQueue.c:%d: Request buffer size(%d) too big!
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/MediaQueue/MediaQueue.c:%d: Media queue closing, free packet!
 [%s] %s:%d MediaQueue_SetRedundantAudio fRedundantAudio (%d->%d)
 [%s] %s:%d MediaQueue_SetRedundantAudio isRedEnabled (%d->%d)
 [%s] %s:%d MediaQueue_SetdAudioFraction (%.2f->%.2f)
 [%s] %s:%d MediaQueue_SetAudioFECLevel (%.3f->%.3f)
 [%s] %s:%d AddPacket: ^^^^^^
 incoming %d %d/%d/%d 
 [%s] %s:%d AddPacket: ^^^^^^
 ProbeSeq %d/%d bNewProbeSeq %d bVideoPacketPartOfActiveProbeSeq %d 
 [%s] %s:%d AddPacket: ^^^^^^
 MP belonging to an active Probe. Going to the main list
 [%s] %s:%d AddPacket: ^^^^^^
 Audio %d CAME. KICKING ProbeSeq (%d) from %d/%d/%d to %d/%d/%d 
 [%s] %s:%d AddPacket: ^^^^^^
 Regular frame %d is blocked in the waiting list...
 [%s] %s:%d AddPacket: ^^^^^^
 ProbeSeq/Regular frame %d (%d) waiting for the next Audio
 [%s] %s:%d 
 *** ActiveProbing_FlushPendingPackets: flushed %d pkts; ProbeSeqId: %d->%d, VideoFrameTS: %d->%d 
 [%s] %s:%d 
 *** ActiveProbing_FlushPendingPackets: Unexpected: flushed %d pkts vs. %d queue length 
 [%s] %s:%d 
 *** ActiveProbing_FlushPendingPackets: flushed 0 pkts; alraedy empty
 [%s] %s:%d MediaQueueSendProc Thread start...
 [%s] %s:%d SENDPROC: ^^^^^^ @%.3f
MP %d  %d/%d/%d  QLen: %d/%d  Probe: %d
 [%s] %s:%d MediaQueueSendProc Thread end...
 [%s] %s:%d Refresh frame counter[%d], time[%.4f].
 [%s] %s:%d Adding extension failed with result %08X
 [%s] %s:%d RTP(%08X): seq number wc %d
 [%s] %s:%d Media queue overflow! maxLength=%d, currentLength=%d
 [%s] %s:%d ^^^^^^ 
ActiveProbing_Uninit  V/A packets sent: %d/%d
 [%s] %s:%d ^^^^ SeqId for VMP TS/seq %d/%d to %d
 [%s] %s:%d CMBlockBufferCreateWithMemoryBlock failed
 [%s] %s:%d CMBlockBufferGetDataPointer failed
 [%s] %s:%d VCCryptor_Encrypt failed with error %d
 [%s] %s:%d input buffer should not be NULL
 [%s] %s:%d output buffer should not be NULL
 [%s] %s:%d inputBuffer contains incorrect data size '%zu'
 [%s] %s:%d Could not update encryption cryptors for messaging, result:%X
 [%s] %s:%d Can not set currentSendMKI '%@': can not find corresponding cryptor for key
 [%s] %s:%d MKI '%@' has already been configured for this session. Ignoring duplicate
 [%s] %s:%d Could not create crypto set for messaging, result:%X
 [%s] %s:%d Can not set currentSendMKI with keyMaterial '%@': can not find corresponding cryptor
 [%s] %s:%d Can not set currentSendMKI with keyMaterial '%@': absent MKI
 [%s] %s:%d MKI=%@ has already been configured. Ignoring duplicate
 [%s] %s:%d updateEncryption: media key/salt derivation failed
 [%s] %s:%d SRTPUpdateEncryptionInfo: failed to update encryption info
 [%s] %s:%d Cryptor for keyIndex:%@ is updated
 [%s] %s:%d Failed to create cryptoInfo with keyIndex:%@
 [%s] %s:%d encryptData: with currentSendMKI='%@', sequenceNumber=%d
 [%s] %s:%d encryptData: _currentSendMKI (%@) failed to match any cryptors
 [%s] %s:%d decryptWithMKI: currentReceiveMKI='%@', sequenceNumber=%d
 [%s] %s:%d decryptWithMKI: MKI (%@) failed to match any cryptors
 [%s] %s:%d Cannot create output queue successfully!
 [%s] %s:%d Selected FEC Optimization: unit %d, finalFECMode: %d, RSOptimization: %d, interleaved SIMD load/store instr available: %d
 [%s] %s:%d Invalid input argument recoveryPacketBuffers[%p] recoveryPacketSizes[%p]
 [%s] %s:%d Invalid Buffer Size
 [%s] %s:%d DecodeByteBuffe failed!
 [%s] %s:%d Invalid number of symbols per packet (%d)
 [%s] %s:%d Got unsupported SIMD fetch type %d for packetOffset=%d
 [%s] %s:%d Cannot gather all parity from packet. Size=%d, offset=%d, codewordIdx=%d
 [%s] %s:%d Configuration pointer is nil
 [%s] %s:%d encode = %dx%d
 [%s] %s:%d Failed to create buffer queue
 [%s] %s:%d Failed to create video packet allocator: %d
 [%s] %s:%d Failed to create thread "%s"
 [%s] %s:%d VCVideoStreamTransmitter startVideo
 [%s] %s:%d Drop a pending frame (encoder). Already has a frame for encoder
 [%s] %s:%d key frame requested for next pixel buffer, FIRType %d.
 [%s] %s:%d key frame was already requested, FIRType: %d
 [%s] %s:%d Failed to allocate bitRate array
 [%s] %s:%d Failed to create bitRate value
 [%s] %s:%d Not implemented!
 [%s] %s:%d Failed to get image buffer
 [%s] %s:%d sendFrame: Error while allocating %d bytes
 [%s] %s:%d sendFrame: Error: Error getting data buffer
 [%s] %s:%d sendFrame: Error while getting image buffer data
 [%s] %s:%d Failed To Prepend SPS/PPS
 [%s] %s:%d sendFrame: transmitEncodedVideoFrame returned error %d (0x%08x). isKeyFrame=%d
 [%s] %s:%d successfully sent key frame
 [%s] %s:%d RTPGetIsIPv6 failed %d
 [%s] %s:%d VTU_SplitVideoIntoPackets returned 0
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCVideoStreamTransmitter.m:%d: VideoTransmitter transmitGroup failed (%08lX) for group (%d) #packet (%d)
 [%s] %s:%d VideoStreamStats - Tx - framerate:%f, bitrate:%dkbps
 [%s] %s:%d Tx RTCReporting:%s
 [%s] %s:%d Handling active connection change is not implemented for VCVST
 [%s] %s:%d Encoder thread "%s" terminated
 [%s] %s:%d Failed to dequeue sample buffer
 [%s] %s:%d frame encode error %d
 [%s] %s:%d VCCaptionsManager: Context already exists for stream token: %u
 [%s] %s:%d Discarding an old primary frame, payloadType=%d, timestamp=%u, lastDecoded=%u
 [%s] %s:%d Discarding an old redundant frame, timestamp %u, last Decoded %u sequence number %d
 [%s] %s:%d Discarding duplicate audio frame isRedAudio:%d timestamp:%u
 [%s] %s:%d Jitter Queue Max maxPacketTimeDelta Size is not set
 [%s] %s:%d Jitter Queue was reset
 [%s] %s:%d Discard excess performed. New size=%d
 [%s] %s:%d Failed to create monitor because nwConnection is null!
 [%s] %s:%d Monitor cannot be created with an invalid interfaceName
 [%s] %s:%d Destroying monitor=%p
 [%s] %s:%d monitor is null!
 [%s] %s:%d Monitor, handler or context cannot be NULL, monitor=%p, handler=%p, context=%p, monitor->nwMonitor=%p
 [%s] %s:%d monitor, handler or context cannot be NULL, monitor=%p, handler=%p, context=%p monitor->nwMonitor=%p
 [%s] %s:%d Can't add a null monitor!
 [%s] %s:%d Off Channel Metrics currentTimeDelta=%llu accumulatedOffChannelTime=%llu statistics->offChannelTimeRatio=%4.4f offChannelSwitchCount=%u statistics->detectedFrequentOffChannelActivity=%d
 [%s] %s:%d NWConnection notification is nil
 [%s] %s:%d  timestamp%llu
 [%s] %s:%d NWConnection notification submitted with incompatible version=%d, discarding
 [%s] %s:%d monitor=%p
 [%s] %s:%d Failed to create monitor->nwMonitor for monitor=%p!
 [%s] %s:%d Failed to allocate memory for monitor
 [%s] %s:%d Creating monitor=%p with interfaceName=%s
 [%s] %s:%d NWConnection state ready and setting status monitor! monitor=%p
 [%s] %s:%d NWConnection state ready but monitor=%p is already destroyed!
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCNWConnectionMonitor.c:%d: Failed to create status monitor after state ready! monitor=%p
 [%s] %s:%d NWConnection state failed, monitor=%p, state=%d
 [%s] %s:%d NWConnection state cancelled! monitor=%p and monitor->NWConnection=%p is released.
 [%s] %s:%d Starting NWConnection for monitor=%p with interfaceName=%s
 [%s] %s:%d monitor=%p is released
 [%s] %s:%d Monitor is already destroyed!
 [%s] %s:%d monitor->nwMonitor=%p is released, monitor=%p
 [%s] %s:%d NWConnection notification returns error %d, monitor=%p
 [%s] %s:%d monitor is already destroyed! monitor=%p
 [%s] %s:%d NWConnection notification size mismatch. (expected size: %u, actual size: %u) status_data: %p
 [%s] %s:%d Failed to allocate memory for notification!
 [%s] %s:%d NWConnection packet event returns error %d
 [%s] %s:%d Failed to allocate memory for packetEvent!
 [%s] %s:%d Receive other unknown event type %d
 [%s] %s:%d inDelegate=%@
 [%s] %s:%d Results from initializtion: %@
 [%s] %s:%d Error initializing Effects. Deallocing. error=%@
 [%s] %s:%d Begin
 [%s] %s:%d Results from termination: %@
 [%s] %s:%d End
 [%s] %s:%d delegate=%@
 [%s] %s:%d xpcSenderQueue was null, cannot make the remote queue
 [%s] %s:%d mode=%d
 [%s] %s:%d effectType=%d
 [%s] %s:%d Effect type is already set to %d
 [%s] %s:%d videoFrame=%@
 [%s] %s:%d NULL newInstance
 [%s] %s:%d allocate failed
 [%s] %s:%d NULL object
 [%s] %s:%d Failed to initialize VCSessionUplinkVideoStreamController. Invalid RTCP config.
 [%s] %s:%d %@(%p) Failed to initialize VCSessionUplinkVideoStreamController. Invalid RTCP config.
 [%s] %s:%d streamIDsCell is nil
 [%s] %s:%d %@(%p) streamIDsCell is nil
 [%s] %s:%d Cell stream %@ position %d, framesPerIdrPeriod %d
 [%s] %s:%d %@(%p) Cell stream %@ position %d, framesPerIdrPeriod %d
 [%s] %s:%d StreamScheduleCell (active) is %@
 [%s] %s:%d %@(%p) StreamScheduleCell (active) is %@
 [%s] %s:%d StreamScheduleCell is %@
 [%s] %s:%d %@(%p) StreamScheduleCell is %@
 [%s] %s:%d streamIDsWifi is nil
 [%s] %s:%d %@(%p) streamIDsWifi is nil
 [%s] %s:%d Wifi stream %@, position %d, framesPerIdrPeriod %d
 [%s] %s:%d %@(%p) Wifi stream %@, position %d, framesPerIdrPeriod %d
 [%s] %s:%d StreamScheduleWifi (active) is %@
 [%s] %s:%d %@(%p) StreamScheduleWifi (active) is %@
 [%s] %s:%d StreamScheduleWifi is %@
 [%s] %s:%d %@(%p) StreamScheduleWifi is %@
 [%s] %s:%d Setting pending streams %@
 [%s] %s:%d %@(%p) Setting pending streams %@
 [%s] %s:%d _streamsPendingKeyFrameGeneration array has been non zero for %5.2f seconds, streams=%@
 [%s] %s:%d %@(%p) _streamsPendingKeyFrameGeneration array has been non zero for %5.2f seconds, streams=%@
 [%s] %s:%d FrameTime is %f
 [%s] %s:%d %@(%p) FrameTime is %f
 [%s] %s:%d Current interface isLocalOnCellular %d %@
 [%s] %s:%d %@(%p) Current interface isLocalOnCellular %d %@
 [%s] %s:%d anchor stream doesn't exist
 [%s] %s:%d %@(%p) anchor stream doesn't exist
 [%s] %s:%d schedule for anchor stream %@ on Wifi not found
 [%s] %s:%d %@(%p) schedule for anchor stream %@ on Wifi not found
 [%s] %s:%d schedule for anchor stream %@ on cell not found
 [%s] %s:%d %@(%p) schedule for anchor stream %@ on cell not found
 [%s] %s:%d StreamInfo array is nil, empty, or its streamConfigs array is nil or empty.
 [%s] %s:%d %@(%p) StreamInfo array is nil, empty, or its streamConfigs array is nil or empty.
 [%s] %s:%d Invalid RTCP config. firstStreamRTCPEnabled=%d but stream=%p has a different value. All streams must have matching isRTCPEnabled values.
 [%s] %s:%d %@(%p) Invalid RTCP config. firstStreamRTCPEnabled=%d but stream=%p has a different value. All streams must have matching isRTCPEnabled values.
 [%s] %s:%d no streams available
 [%s] %s:%d %@(%p) no streams available
 [%s] %s:%d Non temporal stream's schedule is nil for streamID %@
 [%s] %s:%d %@(%p) Non temporal stream's schedule is nil for streamID %@
 [%s] %s:%d streamResumed %d activeVideoStreams %@
 [%s] %s:%d %@(%p) streamResumed %d activeVideoStreams %@
 [%s] %s:%d Calculated value is not a number expectedTimePercentage=%f. IDR scheduler may not have initialized framesPerIdrPeriod=%d
 [%s] %s:%d %@(%p) Calculated value is not a number expectedTimePercentage=%f. IDR scheduler may not have initialized framesPerIdrPeriod=%d
 [%s] %s:%d reminderTimePercentage=%3.2f, expectedTimePercentage=%3.2f, _currentFrameTime=%5.2f, _startTime=%5.2f.
 [%s] %s:%d %@(%p) reminderTimePercentage=%3.2f, expectedTimePercentage=%3.2f, _currentFrameTime=%5.2f, _startTime=%5.2f.
 [%s] %s:%d streamPaused %d activeVideoStreams %@
 [%s] %s:%d %@(%p) streamPaused %d activeVideoStreams %@
 [%s] %s:%d Requesting a streamID %@ that is not in any of the compound streamIDs
 [%s] %s:%d %@(%p) Requesting a streamID %@ that is not in any of the compound streamIDs
 [%s] %s:%d  Stream is nil for streamID %@, sendingStreamID %@ activeVideoStreams %@
 [%s] %s:%d %@(%p)  Stream is nil for streamID %@, sendingStreamID %@ activeVideoStreams %@
 [%s] %s:%d Non temporal stream's schedule is nil for streamID %@, sendingStreamID %@
 [%s] %s:%d %@(%p) Non temporal stream's schedule is nil for streamID %@, sendingStreamID %@
 [%s] %s:%d Stream is nil
 [%s] %s:%d %@(%p) Stream is nil
 [%s] %s:%d Non temporal stream's schedule stream is nil
 [%s] %s:%d %@(%p) Non temporal stream's schedule stream is nil
 [%s] %s:%d Could not allocate memory for pendingVideoStreams dictionary
 [%s] %s:%d %@(%p) Could not allocate memory for pendingVideoStreams dictionary
 [%s] %s:%d SSRC=%u, type=%hhu
 [%s] %s:%d AVCPacketFilterRTP: init filter with SSRC %08X, type %d
 [%s] %s:%d Do not have a valid packetParam
 [%s] %s:%d Forcing audio payload: %d
 [%s] %s:%d Invalid payload (%d) for forceAudioPayload. Forcing PureVoice.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCPayloadUtils.m:%d: Unsupported payload type: %d
 [%s] %s:%d Failed to allocate standardsBitrateSet
 [%s] %s:%d Failed to allocate filteredAndSortedBitrates
 [%s] %s:%d Failed to allocate primaryBitrates
 [%s] %s:%d Unsupported payload %d
 [%s] %s:%d Unsupported codec type %d
 [%s] %s:%d Unsupported mode %d
 [%s] %s:%d Unsupported bitrate %d
 [%s] %s:%d Failed to allocate the cellular tap type to stream token map
 [%s] %s:%d %@(%p) Failed to allocate the cellular tap type to stream token map
 [%s] %s:%d Failed to allocate the power spectrum meter dictionary
 [%s] %s:%d %@(%p) Failed to allocate the power spectrum meter dictionary
 [%s] %s:%d source.streamToken=%ld
 [%s] %s:%d %@(%p) source.streamToken=%ld
 [%s] %s:%d source[streamToken=%ld] already existed
 [%s] %s:%d %@(%p) source[streamToken=%ld] already existed
 [%s] %s:%d VCPowerSpectrumMeter failed to allocate
 [%s] %s:%d %@(%p) VCPowerSpectrumMeter failed to allocate
 [%s] %s:%d VCPowerSpectrumMeter[%p] created
 [%s] %s:%d %@(%p) VCPowerSpectrumMeter[%p] created
 [%s] %s:%d audioSpectrumRegisterListener: error no powerSpectrumSource for streamToken=%@
 [%s] %s:%d %@(%p) audioSpectrumRegisterListener: error no powerSpectrumSource for streamToken=%@
 [%s] %s:%d powerSpectrumMeter=%@ registered listener for streamToken=%@
 [%s] %s:%d %@(%p) powerSpectrumMeter=%@ registered listener for streamToken=%@
 [%s] %s:%d Invalid tapType=%@
 [%s] %s:%d %@(%p) Invalid tapType=%@
 [%s] %s:%d Failed to allocate the audio tap for tapType=%@
 [%s] %s:%d %@(%p) Failed to allocate the audio tap for tapType=%@
 [%s] %s:%d Failed to create an app tap for tapType=%@ with streamToken=%u
 [%s] %s:%d %@(%p) Failed to create an app tap for tapType=%@ with streamToken=%u
 [%s] %s:%d Failed allocate the client set for tapType=%@
 [%s] %s:%d %@(%p) Failed allocate the client set for tapType=%@
 [%s] %s:%d Stream token not found for tapType=%@
 [%s] %s:%d %@(%p) Stream token not found for tapType=%@
 [%s] %s:%d Missing tapType
 [%s] %s:%d %@(%p) Missing tapType
 [%s] %s:%d Process id is missing tapType=%@
 [%s] %s:%d %@(%p) Process id is missing tapType=%@
 [%s] %s:%d Missing power spectrum meter for tapType=%@
 [%s] %s:%d %@(%p) Missing power spectrum meter for tapType=%@
 [%s] %s:%d Missing power spectrum meter key for tapType=%@
 [%s] %s:%d %@(%p) Missing power spectrum meter key for tapType=%@
 [%s] %s:%d power spectrum meter set not found for tapType=%@
 [%s] %s:%d %@(%p) power spectrum meter set not found for tapType=%@
 [%s] %s:%d power spectrum meter is already registered for tapType=%@
 [%s] %s:%d %@(%p) power spectrum meter is already registered for tapType=%@
 [%s] %s:%d Failed to retrieve the stream token for tapType=%@
 [%s] %s:%d %@(%p) Failed to retrieve the stream token for tapType=%@
 [%s] %s:%d powerSpectrumMeter=%@ registered listener for tapType=%@ with streamToken=%@
 [%s] %s:%d %@(%p) powerSpectrumMeter=%@ registered listener for tapType=%@ with streamToken=%@
 [%s] %s:%d client set not found for tapType=%@
 [%s] %s:%d %@(%p) client set not found for tapType=%@
 [%s] %s:%d No registered power spectrum meters found for tapType=%@
 [%s] %s:%d %@(%p) No registered power spectrum meters found for tapType=%@
 [%s] %s:%d Power spectrum not registered for tapType=%@
 [%s] %s:%d %@(%p) Power spectrum not registered for tapType=%@
 [%s] %s:%d Failed to unregister listener for tapType=%@ streamToken=%@
 [%s] %s:%d %@(%p) Failed to unregister listener for tapType=%@ streamToken=%@
 [%s] %s:%d Bin count is invalid
 [%s] %s:%d %@(%p) Bin count is invalid
 [%s] %s:%d Refresh rate is invalid
 [%s] %s:%d %@(%p) Refresh rate is invalid
 [%s] %s:%d Force disableAudioPowerSpectrumRegister is YES: inhibiting call to API_VCAUDIOPOWERSPECTURM_REGISTER_LISTENER_KEY
 [%s] %s:%d %@(%p) Force disableAudioPowerSpectrumRegister is YES: inhibiting call to API_VCAUDIOPOWERSPECTURM_REGISTER_LISTENER_KEY
 [%s] %s:%d Invalid context. Power spectrum meter is nil
 [%s] %s:%d %@(%p) Invalid context. Power spectrum meter is nil
 [%s] %s:%d audioSpectrumRegisterListener: error no stream token specified
 [%s] %s:%d %@(%p) audioSpectrumRegisterListener: error no stream token specified
 [%s] %s:%d Failed to register the listener
 [%s] %s:%d %@(%p) Failed to register the listener
 [%s] %s:%d audioSpectrumUnregisterListener: error no stream token specified
 [%s] %s:%d %@(%p) audioSpectrumUnregisterListener: error no stream token specified
 [%s] %s:%d Failed to register the listener. error=%@
 [%s] %s:%d %@(%p) Failed to register the listener. error=%@
 [%s] %s:%d Failed to unregister the listener. error=%@
 [%s] %s:%d %@(%p) Failed to unregister the listener. error=%@
 [%s] %s:%d meter[%p] spectrums[%@]
 [%s] %s:%d %@(%p) meter[%p] spectrums[%@]
 [%s] %s:%d PSFB PLI will be sent in the next RTCP interval
 [%s] %s:%d PSFB PLI is already scheduled to be sent in the next RTCP interval
 [%s] %s:%d RTPFB TMMBR bitrate:%d, will be sent in the next RTCP interval
 [%s] %s:%d RTPFB TMMBR is already scheduled to be sent in the next RTCP interval
 [%s] %s:%d i=%d awSizeAndFirstMBs=%d paramSizeAndFirstMBs=%d
 [%s] %s:%d Invalid Slice! i=%d awSizeAndFirstMBs=%d paramSizeAndFirstMBs=%d
 [%s] %s:%d Unable to add RTCL packet (%X)
 [%s] %s:%d Unable to add custom SR/RR packet (%X)
 [%s] %s:%d Unable to add SR/RR packet (%X)
 [%s] %s:%d RTCP buffer too small. Unable to add SDES: %d + %d > %d
 [%s] %s:%d Failed to write RTCP XR. result=%X
 [%s] %s:%d Failed to write PSFB ALFB packet, result=%X
 [%s] %s:%d Unable to add custom APP packet (%X))
 [%s] %s:%d RTCP buffer too small. Unable to add FIR: %d + %d > %d
 [%s] %s:%d RTCP buffer too small. Unable to add NACK: %d + %d > %d
 [%s] %s:%d Failed to write FIR: (%X)
 [%s] %s:%d Failed to write PLI: (%X)
 [%s] %s:%d Failed to write TSTR: (%X)
 [%s] %s:%d Failed to write TSTN: (%X)
 [%s] %s:%d Failed to write TMMBR: (%X)
 [%s] %s:%d Failed to write TMMBN: (%X)
 [%s] %s:%d RTCP buffer too small. Unable to add BYE: %d + %d > %d
 [%s] %s:%d SRTCP encryption failed (%X)
 [%s] %s:%d SRTCP add authentication tag failed (%X)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTCPTransport.c:%d: Invalid RTCP SDES message
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTCPTransport.c:%d: Invalid RTCP BYE message
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTCPTransport.c:%d: Invalid RTCP FIR message
 [%s] %s:%d j=%d awSizeAndFirstMBs=%d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTCPTransport.c:%d: Invalid RTCP NACK message
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTCPTransport.c:%d: Invalid RTCP PSFB message
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTCPTransport.c:%d: Invalid RTCP RTPFB message
 [%s] %s:%d Failed to allocate RTCP packet list
 [%s] %s:%d RTP error[%x]
 [%s] %s:%d Invalid parameter rtpHandle[%p] callbackContext[%p]!
 [%s] %s:%d Failed to checking rtpHandle[%p]
 [%s] %s:%d RTPHandle[%p] Packet callback already registered
 [%s] %s:%d RTCPHandle[%p] Failed store the callback
 [%s] %s:%d RTPHandle[%p], Socket[%d] is invalid
 [%s] %s:%d RTPHandle[%p] RTCP packet callback was not registered
 [%s] %s:%d RTCP receive failed! hResult:(%08X)
 [%s] %s:%d NULL packetList
 [%s] %s:%d Invalid RTP Handle
 [%s] %s:%d Failed to allocate RTCP packet
 [%s] %s:%d RTCP error[%x]
 [%s] %s:%d Invalid parameters
 [%s] %s:%d localSSRC:%X remoteSSRC:%X dwPacketExp = %u lPacketLost = %ld, dwPacketExpInt = %d, lPacketLostInt = %ld, fraction = %d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTCPTransport.c:%d: Sending RTCP SR packet PayloadType=%d NTP Seconds=%u RTPTimestamp=%u
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTCPTransport.c:%d: Failed to add RTCP header
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTCPTransport.c:%d: Not enough space for the RTCP XR packet
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTCPTransport.c:%d: Failed to add the Statistics Summary Report Block. status=%X
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTCPTransport.c:%d: Failed to add the VoIP Metrics Report Block. status=%X
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTCPTransport.c:%d: Failed to finalize the XR packet. status=%X
 [%s] %s:%d Failed to add a PSFB ALFB Loss Feedback packet, error=%X
 [%s] %s:%d Unsupported application name=%u
 [%s] %s:%d Unable to add FIR, buffer too small: %d > %d
 [%s] %s:%d Unable to add PLI, buffer too small: %d > %d
 [%s] %s:%d Unable to add %s, buffer too small: %d > %d
 [%s] %s:%d VTP_Send failed %d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTCPTransport.c:%d: Invalid RTCP header
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTCPTransport.c:%d: Invalid RTCP version
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTCPTransport.c:%d: Bad RTCP packet
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTCPTransport.c:%d: Invalid RTCP SR packet
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTCPTransport.c:%d: Received RTCP SR packet PayloadType=%d NTP Seconds=%u RTPTimestamp=%u
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTCPTransport.c:%d: Invalid RTCP RR packet
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTCPTransport.c:%d: Bad RTCP APP packet
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTCPTransport.c:%d: Unsupported PSFB ALFB app type=%u
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTCPTransport.c:%d: Bad RTCP PSFB ALFB packet
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTCPTransport.c:%d: Drop RTCP packet from a unknown connection.
 [%s] %s:%d Unable to retrieve data pointer %d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTCPTransport.c:%d: RTCP packet failed Version, padding bit, packet type check
 [%s] %s:%d SRTCP verification failed (%X)
 [%s] %s:%d RTCP header doesn't fit in packet. Packet length=%d
 [%s] %s:%d SRTCP decryption failed (%X)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTCPTransport.c:%d: Invalid RTCP Packet(packetType=%d, version=%d, count=%d, padding=%d) useReducedSizePackets=%d
 [%s] %s:%d NULL sendParameters
 [%s] %s:%d streamIDCount=%d is greater than max=%u
 [%s] %s:%d eventHandler must not be nil
 [%s] %s:%d DatagramChannel creation failed with error %s
 [%s] %s:%d DatagramChannel setup failed
 [%s] %s:%d destination must not be nil
 [%s] %s:%d Setup EmulatedDatagramChannel failed
 [%s] %s:%d VCDatagramChannelManager: found existing datagram channel with token %d for destination %s
 [%s] %s:%d isEmulatedDatagramChannelEnabled=%d, emulatedNetworkConfigPath=%@
 [%s] %s:%d Do not load emulated network
 [%s] %s:%d VCDatagramChannelManager: added datagram channel with token %d
 [%s] %s:%d VCDatagramChannelManager: removed datagram channel with token %d
 [%s] %s:%d VCDatagramChannelManager: removed destination %s
 [%s] %s:%d NULL filter
 [%s] %s:%d No resource defined for configuration type=%u
 [%s] %s:%d Failed to load configuration resource=%@
 [%s] %s:%d Failed to load configuration
 [%s] %s:%d Failed to load the stream input configurations
 [%s] %s:%d Failed to load the stream group configurations
 [%s] %s:%d Configuration plist specified but the path is invalid: path=%@
 [%s] %s:%d Configuration plist specified but the file could not be loaded: path=%@
 [%s] %s:%d Successfully loaded configuration plist: path=%@
 [%s] %s:%d Failed to allocate new plist configuration
 [%s] %s:%d Failed to allocated stream input array
 [%s] %s:%d Configuration is nil for type=%d
 [%s] %s:%d Failed to allocated stream input dictionary
 [%s] %s:%d Unknown stream group ID %u. Using random SSRC
 [%s] %s:%d '%@' is missing in config
 [%s] %s:%d Invalid type for field=%@
 [%s] %s:%d Unable read stream input configuration type
 [%s] %s:%d Unsupported media type=%@
 [%s] %s:%d Framerate is 0!
 [%s] %s:%d Failed to load stream input configuration
 [%s] %s:%d Failed to allocate the video stream input config
 [%s] %s:%d streamInputID is not valid
 [%s] %s:%d Subtype is not valid
 [%s] %s:%d Width is 0!
 [%s] %s:%d Height is 0!
 [%s] %s:%d Failed to allocate the data stream input config
 [%s] %s:%d Failed to create video multiway config
 [%s] %s:%d Max network bitrate is invalid
 [%s] %s:%d Max media bitrate is invalid
 [%s] %s:%d '%@' is invalid
 [%s] %s:%d Frame rate field should be of numeber type
 [%s] %s:%d Invalid framerate
 [%s] %s:%d Video width is invalid
 [%s] %s:%d Height width is invalid
 [%s] %s:%d Invalid resolution: width=%u height=%u
 [%s] %s:%d Using reserved SSRC with un-available repaired stream id
 [%s] %s:%d Failed to create featureStrings
 [%s] %s:%d %@(%p) Failed to create featureStrings
 [%s] %s:%d Found unsupported codec type=%ld
 [%s] %s:%d %@(%p) Found unsupported codec type=%ld
 [%s] %s:%d Invalid codecs array
 [%s] %s:%d %@(%p) Invalid codecs array
 [%s] %s:%d Invalid codec config
 [%s] %s:%d %@(%p) Invalid codec config
 [%s] %s:%d Invalid codec type class
 [%s] %s:%d %@(%p) Invalid codec type class
 [%s] %s:%d '%@'=%d incorrect codecType in config
 [%s] %s:%d Failed to create video stream config
 [%s] %s:%d Failed to parse codec config
 [%s] %s:%d 'Invalid codec type
 [%s] %s:%d No fallback stream is provided for an unsupported codec type
 [%s] %s:%d Falling back to stream config with codecType=%ld
 [%s] %s:%d Invalid encoderUsage class
 [%s] %s:%d %@(%p) Invalid encoderUsage class
 [%s] %s:%d Invalid rtp payload
 [%s] %s:%d %@(%p) Invalid rtp payload
 [%s] %s:%d Invalid profile level
 [%s] %s:%d %@(%p) Invalid profile level
 [%s] %s:%d Invalid RTP timestamp rate
 [%s] %s:%d %@(%p) Invalid RTP timestamp rate
 [%s] %s:%d Invalid RTCP enabled
 [%s] %s:%d %@(%p) Invalid RTCP enabled
 [%s] %s:%d Invalid RTCP send interval
 [%s] %s:%d %@(%p) Invalid RTCP send interval
 [%s] %s:%d Invalid RTCP timeout enabled
 [%s] %s:%d %@(%p) Invalid RTCP timeout enabled
 [%s] %s:%d Failed to create rate control config
 [%s] %s:%d %@(%p) Invalid %@ class
 [%s] %s:%d Invalid %@ class
 [%s] %s:%d streamConfig cannot be generated when encoder resolution is zero
 [%s] %s:%d Invalid payloads, payloadSize: %lu
 [%s] %s:%d %@(%p) Invalid payloads, payloadSize: %lu
 [%s] %s:%d Failed to allocate the video stream configuration array!
 [%s] %s:%d Failed to initialize the video stream config
 [%s] %s:%d Invalid max network bitrate
 [%s] %s:%d Invalid max packets per second
 [%s] %s:%d Invalid quality index
 [%s] %s:%d Invalid media bitrate
 [%s] %s:%d Invalid red factir class
 [%s] %s:%d %@(%p) Invalid red factir class
 [%s] %s:%d Invalid red payload class
 [%s] %s:%d %@(%p) Invalid red payload class
 [%s] %s:%d Invalid red payload
 [%s] %s:%d %@(%p) Invalid red payload
 [%s] %s:%d %@(%p) Failed to add payload
 [%s] %s:%d Invalid red factors class
 [%s] %s:%d %@(%p) Invalid red factors class
 [%s] %s:%d Failed to setup red factors
 [%s] %s:%d %@(%p) Failed to setup red factors
 [%s] %s:%d No payloads listed in config
 [%s] %s:%d %@(%p) No payloads listed in config
 [%s] %s:%d Invalid codec class
 [%s] %s:%d %@(%p) Invalid codec class
 [%s] %s:%d Invalid codec
 [%s] %s:%d %@(%p) Invalid codec
 [%s] %s:%d Invalid perferred codec mode class
 [%s] %s:%d %@(%p) Invalid perferred codec mode class
 [%s] %s:%d Invalid preferred mode
 [%s] %s:%d %@(%p) Invalid preferred mode
 [%s] %s:%d Invalid pTime
 [%s] %s:%d %@(%p) Invalid pTime
 [%s] %s:%d Invalid isOpusInBandFecEnabled
 [%s] %s:%d %@(%p) Invalid isOpusInBandFecEnabled
 [%s] %s:%d Failed retrieve payload for codec type=%d
 [%s] %s:%d %@(%p) Failed retrieve payload for codec type=%d
 [%s] %s:%d Failed to allocate codec config for type=%d
 [%s] %s:%d %@(%p) Failed to allocate codec config for type=%d
 [%s] %s:%d Failed to add payload
 [%s] %s:%d Failed to create audio stream config
 [%s] %s:%d %@(%p) Failed to create rate control config
 [%s] %s:%d Failed to create audio rules collection
 [%s] %s:%d %@(%p) Failed to create audio rules collection
 [%s] %s:%d Failed to create audio rules
 [%s] %s:%d Failed to create audio multiway config
 [%s] %s:%d Invalid RTP send interval
 [%s] %s:%d %@(%p) Invalid RTP send interval
 [%s] %s:%d Invalid bundling scheme
 [%s] %s:%d %@(%p) Invalid bundling scheme
 [%s] %s:%d Invalid number of audio channels
 [%s] %s:%d %@(%p) Invalid number of audio channels
 [%s] %s:%d Failed to allocate the audio stream configuration array!
 [%s] %s:%d Failed to initialize the audio stream config
 [%s] %s:%d Failed to allocate the stream group config dictionary
 [%s] %s:%d Failed to retrieve the stream group ID
 [%s] %s:%d Failed to retrieve the stream group stream input ID
 [%s] %s:%d Failed to retrieve the stream group media type
 [%s] %s:%d Failed to retrieve syncGroupID for stream group
 [%s] %s:%d No streams specified!
 [%s] %s:%d Invalid media type class
 [%s] %s:%d Unsupported media type=%s
 [%s] %s:%d Failed to setup streams
 [%s] %s:%d mediaType=%u
 [%s] %s:%d Failed to create dispatch timer
 [%s] %s:%d timer is not running. ignoring timeout.
 [%s] %s:%d %@(%p) timer is not running. ignoring timeout.
 [%s] %s:%d timer=%p has been cancelled
 [%s] %s:%d %@(%p) timer=%p has been cancelled
 [%s] %s:%d timer=%p is waiting to be test cancelled
 [%s] %s:%d %@(%p) timer=%p is waiting to be test cancelled
 [%s] %s:%d timer=%p has been test cancelled
 [%s] %s:%d %@(%p) timer=%p has been test cancelled
 [%s] %s:%d started a timer=%p that was already running
 [%s] %s:%d %@(%p) started a timer=%p that was already running
 [%s] %s:%d stopped a timer=%p that was already stop
 [%s] %s:%d %@(%p) stopped a timer=%p that was already stop
VCAudioStream [%s] %s:%d %s Timestamp jumped: %u (%u to %u), host time: %f (%d samples) (%f to %f). Adjustment: %d
VCAudioStream [%s] %s:%d Failed to generate the RTCP XR statistics summary report.
VCAudioStream [%s] %s:%d audio receiver is not ready
VCAudioStream [%s] %s:%d Failed to generate the RTCP XR VoIP metrics report.
VCAudioStream [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCAudioStream.m:%d: Benign Error (possibly not): We started audio before we negotiated our codec.
VCAudioStream [%s] %s:%d alreadyStarted = %d
VCAudioStream [%s] %s:%d (%p) starting audioIO=%p
VCAudioStream [%s] %s:%d (%p) stopping audioIO=%p
VCAudioStream [%s] %s:%d Skip DTMF from supported payloads for AudioStream
VCAudioStream [%s] %s:%d No Audio Payloads, returning false
VCAudioStream [%s] %s:%d Failed to retrieve codec config.
VCAudioStream [%s] %s:%d %@(%p) Failed to retrieve codec config.
VCAudioStream [%s] %s:%d Invalid audioStreamMode=%d defaulting to VCAudioIOAudioType=%d
VCAudioStream [%s] %s:%d Multiple network payloads=%d, %d for internal payload=%d. Creating decoders for both
VCAudioStream [%s] %s:%d Failed to setup receiver decoders.
VCAudioStream [%s] %s:%d %@(%p) Failed to setup receiver decoders.
VCAudioStream [%s] %s:%d Invalid mode=%ld
VCAudioStream [%s] %s:%d Failed to allocate audio payloads
VCAudioStream [%s] %s:%d %@(%p) Failed to allocate audio payloads
VCAudioStream [%s] %s:%d Failed to allocate the DTMF event handler
VCAudioStream [%s] %s:%d %@(%p) Failed to allocate the DTMF event handler
VCAudioStream [%s] %s:%d 
VCAudioStream [%s] %s:%d %@(%p) 
VCAudioStream [%s] %s:%d NetworkFeedbackController is nil in AudioStream
VCAudioStream [%s] %s:%d Creating Audio Receiver with jbTargetEstimatorSynchronizer=%p
VCAudioStream [%s] %s:%d audioReceiver=%p
VCAudioStream [%s] %s:%d %@(%p) audioReceiver=%p
VCAudioStream [%s] %s:%d VCAudioStream[%p] Failed to set audio receiver payloads
VCAudioStream [%s] %s:%d VCAudioStream[%p] Failed to create the audio transmitter
VCAudioStream [%s] %s:%d audioTransmitter=%p
VCAudioStream [%s] %s:%d %@(%p) audioTransmitter=%p
VCAudioStream [%s] %s:%d Setting volume from %f to %f
VCAudioStream [%s] %s:%d The VCMediaStreamConfig array is empty!
VCAudioStream [%s] %s:%d streamConfigArray.count=%u, but firstAudioStreamConfig.direction=%ld
VCAudioStream [%s] %s:%d Failure at index i=%u of streamConfigArray.count=%u audioStreamConfig.audioStreamMode=%ld firstAudioStreamConfig.audioStreamMode=%ld audioStreamConfig.jitterBufferMode=%u firstAudioStreamConfig.jitterBufferMode=%u audioStreamConfig.direction=%ld firstAudioStreamConfig.direction=%ld
VCAudioStream [%s] %s:%d Failed to allocate source transport
VCAudioStream [%s] %s:%d Failed to insert source transport
VCAudioStream [%s] %s:%d Failed to create RTP handle
VCAudioStream [%s] %s:%d %@(%p) Failed to create RTP handle
VCAudioStream [%s] %s:%d Failed to create RTP extension
VCAudioStream [%s] %s:%d %@(%p) Failed to create RTP extension
VCAudioStream [%s] %s:%d Failed to setup the transport
VCAudioStream [%s] %s:%d %@(%p) Failed to setup the transport
VCAudioStream [%s] %s:%d Reconfiguring VCAudioStream with a different number of transports.
VCAudioStream [%s] %s:%d %@(%p) Reconfiguring VCAudioStream with a different number of transports.
VCAudioStream [%s] %s:%d error[%s]
VCAudioStream [%s] %s:%d %@(%p) error[%s]
VCAudioStream [%s] %s:%d Failed to create transport
VCAudioStream [%s] %s:%d %@(%p) Failed to create transport
VCAudioStream [%s] %s:%d Failed to configure transport
VCAudioStream [%s] %s:%d %@(%p) Failed to configure transport
VCAudioStream [%s] %s:%d Telephony calling isLocalCellular=%d
VCAudioStream [%s] %s:%d %@(%p) Telephony calling isLocalCellular=%d
VCAudioStream [%s] %s:%d (%p) created audioIO=%p operatingMode:%d deviceRole:%d direction:%d
VCAudioStream [%s] %s:%d (%p) reconfigured audioIO=%p operatingMode:%d deviceRole:%d direction:%d
VCAudioStream [%s] %s:%d Callback executed with context being nil
VCAudioStream [%s] %s:%d nwConnectionNotification is invalid
VCAudioStream [%s] %s:%d Received Skywalk notification with unsupported version=%d
VCAudioStream [%s] %s:%d Received Skywalk notification for unsupported interface type=%d
VCAudioStream [%s] %s:%d Cellular Network Notification: timestamp=%llu radioAccessTechnology=%u referenceSignalLevel=%d signalLevel=%d signalQuality=%d uplinkBler=%u bandwidthLimitationIndication=%u cdrxCycleLength=%u cdrxState=%u downlinkBLER=%u
VCAudioStream [%s] %s:%d VCTelephonyInterface returned error=%@
VCAudioStream [%s] %s:%d VCAudioStream[%p] setPauseAudio: error pausing audio
VCAudioStream [%s] %s:%d (%p) pausing audioIO=%p
VCAudioStream [%s] %s:%d VCAudioStream[%p] setPauseAudio: error unpausing audio
VCAudioStream [%s] %s:%d (%p) resume audioIO=%p
VCAudioStream [%s] %s:%d TargetStreamID didn't change %@
VCAudioStream [%s] %s:%d Setting target stream id: %@
VCAudioStream [%s] %s:%d %@(%p) Setting target stream id: %@
VCAudioStream [%s] %s:%d Reporting not available (no backends)
VCAudioStream [%s] %s:%d %@(%p) Reporting not available (no backends)
VCAudioStream [%s] %s:%d Payload is null
VCAudioStream [%s] %s:%d %@(%p) Payload is null
VCAudioStream [%s] %s:%d Bitrate is null
VCAudioStream [%s] %s:%d %@(%p) Bitrate is null
VCAudioStream [%s] %s:%d Unexpected mode VCAudioStreamModeInvalid
VCAudioStream [%s] %s:%d VCAudioStream[%p] IOProc:  Missing grabbing lock onCaptureSound at %u
VCAudioStream [%s] %s:%d VCAudioStream[%p] IOProc: Missing grabbing lock onCaptureSound
VCAudioStream [%s] %s:%d Failed querying Telephony Interface for ANBR bitrate recommendation, bitrate=%u, direction=%ld, error=%@
VCAudioStream [%s] %s:%d %@(%p) Failed querying Telephony Interface for ANBR bitrate recommendation, bitrate=%u, direction=%ld, error=%@
VCAudioStream [%s] %s:%d codecRateMode is invalid for payload=%d, codecRateMode=%ld
VCAudioStream [%s] %s:%d Requested bitrate is not in the configurred bitrates: payload=%d, supportedBitrates=%@, bitrate=%d
VCAudioStream [%s] %s:%d Disabling uplink rate adaptation due to EVS AMRWB-IO bitrate=%u
VCAudioStream [%s] %s:%d Updated uplink rate adaptation max allowed bitrate=%d
VCAudioStream [%s] %s:%d codecType is invalid for payload=%d, codecType=%ld
VCAudioStream [%s] %s:%d codecRateMode is invalid for payload=%d, codecRateMode=%u
VCAudioStream [%s] %s:%d codecBitrate is invalid for payload=%d, codecBitrate=%u
VCAudioStream [%s] %s:%d Codec Rate Mode and Codec Bandwidth selected are not supported for payload=%d, codecBitrate=%u, codecRateMode=%u, codecBandwidth=%u
VCAudioStream [%s] %s:%d VCAudioStream[%p] PullAudioSamples count:%u, state:%d, participantID:[%@], audioReceiver[%p]
VCAudioStream [%s] %s:%d Unexpected SPI call
VCAudioStream [%s] %s:%d Received a bitrate recommendation when ANBR is not enabled. anbrEnabled=%d, anbrActive=%d, bitrate=%u, direction=%ld
VCAudioStream [%s] %s:%d Received unexpected bitrate change _rateAdaptation=%@, anbrEnabled=%d
VCAudioStream [%s] %s:%d %@(%p) Received unexpected bitrate change _rateAdaptation=%@, anbrEnabled=%d
VCAudioStream [%s] %s:%d Bitrate adaptation not supported payload=%d
VCAudioStream [%s] %s:%d %@(%p) Bitrate adaptation not supported payload=%d
VCAudioStream [%s] %s:%d Target bitrate change not supported targetBitrate=%d
VCAudioStream [%s] %s:%d %@(%p) Target bitrate change not supported targetBitrate=%d
VCAudioStream [%s] %s:%d Current and target bitrates are same uplinkTargetBitrate=%d maxAllowedBitrate=%d
VCAudioStream [%s] %s:%d %@(%p) Current and target bitrates are same uplinkTargetBitrate=%d maxAllowedBitrate=%d
VCAudioStream [%s] %s:%d Applying uplink rate adaptation recommendation currentBitrate=%u maxAllowedBitrate=%d uplinkTargetBitrate=%d
VCAudioStream [%s] %s:%d %@(%p) Applying uplink rate adaptation recommendation currentBitrate=%u maxAllowedBitrate=%d uplinkTargetBitrate=%d
VCAudioStream [%s] %s:%d Stalling lastReceivedPacketTime %f currentTime %f
VCAudioStream [%s] %s:%d Unstalling lastReceivedPacketTime %f currentTime %f packetCount %d
VCAudioStream [%s] %s:%d audioStream is invalid
VCAudioStream [%s] %s:%d Statistics collector is not valid
VCAudioStream [%s] %s:%d RTT=%.3f, TxBW=%ub/sec, PLR=%.2f%%, PLaMR=%.2f%%
VCAudioStream [%s] %s:%d OWRD is not valid, skipping
VCAudioStream [%s] %s:%d Abnormal OWRD Verification: rtt=%f, owrd=%f, _abnormalOWRDCount=%d
VCAudioStream [%s] %s:%d Abnormal OWRD detected: rtt=%f, owrd=%f, _abnormalOWRDCount=%d
VCAudioStream [%s] %s:%d OWRD in abnormal levels for %d seconds, triggering lag reference reset
VCAudioStream [%s] %s:%d %s Timestamp jumped=%u (%u to %u), host time=%f (samples=%d) (%f to %f). Adjustment=%d
VCAudioStream [%s] %s:%d audioStream (%p) updating syncSourceDelegate (%p) with ntpTime=%.6f and rtpTimestamp=%u
VCAudioStream [%s] %s:%d audioStream=%p resetting SourceState for syncSourceDelegate=%p
VCAudioStream [%s] %s:%d audioStream=%p switched from streamID=%u to streamID=%u
 [%s] %s:%d Failed to allocate audio ducker
 [%s] %s:%d audioDucker is nil
 [%s] %s:%d Failed to start due to failing to get new instance
 [%s] %s:%d Set properties failed
 [%s] %s:%d Set tuning parameters failed
 [%s] %s:%d AudioUnitInitialize err=%d
 [%s] %s:%d invalid parameter, audioDucker=%p sampleBuffer=%p sysaSampleBuffer=%p
 [%s] %s:%d processing err=%d
 [%s] %s:%d AudioUnitSetProperty kAudioUnitProperty_MaximumFramesPerSlice err=%d
 [%s] %s:%d AudioUnitSetProperty kAudioUnitProperty_StreamFormat for kAudioUnitScope_Input err=%d inputNum=%d
 [%s] %s:%d AudioUnitSetProperty kAudioUnitProperty_StreamFormat for kAudioUnitScope_Output err=%d outputNum=%d
 [%s] %s:%d Failed to set kVCAudioDuckerParameterIDOtherAudioDuckingLevel err=%d
 [%s] %s:%d Failed to set kVCAudioDuckerParameterIDPrimaryDuckingThreshold err=%d
 [%s] %s:%d Failed to set kVCAudioDuckerParameterIDPrimaryDuckingMinLevel err=%d
 [%s] %s:%d Failed to set kVCAudioDuckerParameterIDOtherAudioDuckingMinLevel err=%d
 [%s] %s:%d Failed to set kVCAudioDuckerParameterIDOtherAudioRMSLimit err=%d
 [%s] %s:%d Failed to set kVCAudioDuckerParameterIDDuckingRampTime err=%d
 [%s] %s:%d Failed to set kVCAudioDuckerParameterIDHistoryAccumulationTime err=%d
 [%s] %s:%d Failed to set kVCAudioDuckerParameterIDUnDuckingRampTime err=%d
 [%s] %s:%d Failed to set kVCAudioDuckerParameterIDReleaseHoldTime err=%d
 [%s] %s:%d %s Timescale successfully initialized 
 [%s] %s:%d Timescale Disabled channelCount[%d]
 [%s] %s:%d Disable WSOLA Timescale selected for channelCount=%d
 [%s] %s:%d Timescale algorithm selected is %d
 [%s] %s:%d Failed to allocate timescale Interface
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTPH264.c:%d: data size too big (%d)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTPH264.c:%d: Invalid fragmentation unit length (%d)
 [%s] %s:%d FU-B Decoding order is %hu
 [%s] %s:%d STAP-B Decoding order is %hu
 [%s] %s:%d Invalid data size of length %zu
 [%s] %s:%d Invalid data length for decoding order %zu
 [%s] %s:%d Invalid data length %zu
 [%s] %s:%d Invalid aggregation unit length (%d) for H264NALU_STAP packet, discarded.
 [%s] %s:%d Failed to allocate the H264NALU_STAP_A header bytes
 [%s] %s:%d Failed to append the H264NALU_STAP header buffer
 [%s] %s:%d Failed to append the H264NALU_STAP data
 [%s] %s:%d Failed to allocate the H264NALU_FU header bytes
 [%s] %s:%d Failed to append the H264NALU_FU header buffer
 [%s] %s:%d Failed to append the H264NALU_FU data
 [%s] %s:%d Failed to allocate the default header bytes
 [%s] %s:%d Failed to append the default header buffer
 [%s] %s:%d Failed to append the default data
 [%s] %s:%d Log Dump is %s
VCStreamIOAudioController [%s] %s:%d 
VCStreamIOAudioController [%s] %s:%d %@(%p) 
VCStreamIOAudioController [%s] %s:%d Invalid streamToken
VCStreamIOAudioController [%s] %s:%d %@(%p) Invalid streamToken
VCStreamIOAudioController [%s] %s:%d Failed to allocate the dipatch queue
VCStreamIOAudioController [%s] %s:%d %@(%p) Failed to allocate the dipatch queue
VCStreamIOAudioController [%s] %s:%d StreamInputID not found in VCStreamInputManager
VCStreamIOAudioController [%s] %s:%d %@(%p) StreamInputID not found in VCStreamInputManager
VCStreamIOAudioController [%s] %s:%d Failed to create the sample buffer allocator
VCStreamIOAudioController [%s] %s:%d %@(%p) Failed to create the sample buffer allocator
VCStreamIOAudioController [%s] %s:%d Packet thread is already running
VCStreamIOAudioController [%s] %s:%d %@(%p) Packet thread is already running
VCStreamIOAudioController [%s] %s:%d Error allocating buffer list for stream IO
VCStreamIOAudioController [%s] %s:%d %@(%p) Error allocating buffer list for stream IO
VCStreamIOAudioController [%s] %s:%d Failed to create the packet thread
VCStreamIOAudioController [%s] %s:%d %@(%p) Failed to create the packet thread
VCStreamIOAudioController [%s] %s:%d nil client
VCStreamIOAudioController [%s] %s:%d %@(%p) nil client
VCStreamIOAudioController [%s] %s:%d error=%@
VCStreamIOAudioController [%s] %s:%d %@(%p) error=%@
VCStreamIOAudioController [%s] %s:%d Failed to allocate output thread
VCStreamIOAudioController [%s] %s:%d %@(%p) Failed to allocate output thread
VCStreamIOAudioController [%s] %s:%d Failed to allocate output thread client
VCStreamIOAudioController [%s] %s:%d %@(%p) Failed to allocate output thread client
VCStreamIOAudioController [%s] %s:%d Failed to set client error=%@
VCStreamIOAudioController [%s] %s:%d %@(%p) Failed to set client error=%@
VCStreamIOAudioController [%s] %s:%d Failed to start streamOutput thread
VCStreamIOAudioController [%s] %s:%d %@(%p) Failed to start streamOutput thread
VCStreamIOAudioController [%s] %s:%d client is nil
VCStreamIOAudioController [%s] %s:%d %@(%p) client is nil
VCStreamIOAudioController [%s] %s:%d client=%p != runningClient=%p
VCStreamIOAudioController [%s] %s:%d %@(%p) client=%p != runningClient=%p
VCStreamIOAudioController [%s] %s:%d Could not update the direction for client=%p
VCStreamIOAudioController [%s] %s:%d %@(%p) Could not update the direction for client=%p
VCStreamIOAudioController [%s] %s:%d not handled
VCStreamIOAudioController [%s] %s:%d %@(%p) not handled
VCStreamIOAudioController [%s] %s:%d context not included.  Cannot process the sampleBuffer.
VCStreamIOAudioController [%s] %s:%d Frame size=%ld changed unexpectedly and sample buffer size=%u is not big enough for streamInputID=%ld.
VCStreamIOAudioController [%s] %s:%d CMSampleBufferCopyPCMDataIntoAudioBufferList failed with err=%d for controller=%p streamInputID=%ld
VCStreamIOAudioController [%s] %s:%d controller=%p Real time miss. host time jumped: %f (%u samples) (%f to %f) for streamInputID=%ld. lastSampleCount=%lu -> nextExpectedSampleTime=%u
VCStreamIOAudioController [%s] %s:%d Failed to allocate RTP timestamp attachment
VCStreamIOAudioController [%s] %s:%d Enqueue failed
 [%s] %s:%d internalPayload is invalid.
 [%s] %s:%d Internal payload(%d)'s mapping is overwriten
 [%s] %s:%d External payloads send(%d), recv(%d) are used twice by existing internal payload %d and new internal payload %d. Treated as no-op
 [%s] %s:%d RTPMap is NULL!
 [%s] %s:%d *** RTPPrintRTPMapping *** external payload receive %d -> internal payload %d -> external payload send %d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTPTransport.c:%d: Unknown Payload Type(%d)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTPTransport.c:%d: calloc failed(%d)
 [%s] %s:%d %p Starting SeqNum for PayloadType %d = %d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTPTransport.c:%d: Failed to allocate the rtpPacket allocator
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTPTransport.c:%d: Failed to create the rtcpPacket allocator (error:%d)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTPTransport.c:%d: Failed to allocate the block buffer allocator
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTPTransport.c:%d: CreateHandle failed(%08X)
 [%s] %s:%d Releasing the statisticsCollector:%p
 [%s] %s:%d Releasing the basebandCongestionDetector:%p
 [%s] %s:%d Releasing the mediaQueue:%p
 [%s] %s:%d Negative packetsLostForInterval detected. receivedForInterval=%d expectedForInterval=%d. Reset to 0
 [%s] %s:%d RTP/RTCP Destination for PT%d = [IDS datagram channel token %u]
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTPTransport.c:%d: getaddrinfo(%s,%s) failed(%08X)
 [%s] %s:%d RTP/RTCP Destination for PT%d(%d) = [%s:%u/%u]
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTPTransport.c:%d: calloc(%zu) failed
 [%s] %s:%d Invalid RTP handle
 [%s] %s:%d payloadType=%d, sourceRate=%u
 [%s] %s:%d Header size is negative: %d
 [%s] %s:%d Data size is negative: %d
 [%s] %s:%d RTP SendRTP direction[%d] dropping packet
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTPTransport.c:%d: Failed to allocate send buffer
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTPTransport.c:%d: Bad RTP extension length (%ld)
 [%s] %s:%d Failed to add RTP header extension
 [%s] %s:%d Failed to copy header to the RTP buffer
 [%s] %s:%d Failed to copy data to the RTP buffer
 [%s] %s:%d Failed to copy padding bytes to the RTP buffer
 [%s] %s:%d SRTP encryption failed (%X)
 [%s] %s:%d SRTP add authentication tag failed (%X)
 [%s] %s:%d IDS channel data is not setup correctly!
 [%s] %s:%d Failed to enqueue packet in media queue. Error=%x
 [%s] %s:%d Unknown packet passing to the VCMediaQueue!
 [%s] %s:%d Cannot alloc media packet from VCMediaQueue!
 [%s] %s:%d Failed to send packet due to oversize dataSizeByte %d
 [%s] %s:%d Failed to copy data bytes. Error=%d!
 [%s] %s:%d Cannot add media packet to VCMediaQueue!
 [%s] %s:%d Sent RTP packet with marker: %u, payload type: %u, sequence number: %u, timestamp: %u, ssrc: %u
 [%s] %s:%d Unexpected sendTimestampMode=%d
 [%s] %s:%d Send Scaling sendTimestampMode=%d is not supported
 [%s] %s:%d Unexpected recvTimestampMode=%d
 [%s] %s:%d Receive Scaling recvTimestampMode=%d is not supported
 [%s] %s:%d Failed to parse RTP packet: %d
 [%s] %s:%d RTP relay flag (%d->%d).
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTPTransport.c:%d: Drop RTP packet from a unknown source
 [%s] %s:%d Failed to parse RTP header: %d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTPTransport.c:%d: Wrong connection index: %d.
 [%s] %s:%d Failed to retrieve extension size: %d
 [%s] %s:%d Invalid packet! length:%d iRet:%d iOffset:%d padding:%d, 
 [%s] %s:%d Failed to allocate RTP packet
 [%s] %s:%d RTP packet parsing failed: %d
 [%s] %s:%d callback is NULL
 [%s] %s:%d RTPSetRemoteSSRC [%d/%d]: SSRC = 0x%X(%u)
 [%s] %s:%d RTPSetRemoteSSRC: SSRC = 0x%X(%u)
 [%s] %s:%d RTPSetCellularUniqueTag vfd = %d tag = 0x%X(%u)
 [%s] %s:%d RTPSetStreamDirection [%p] [%d/%d]: Direction[%d]
 [%s] %s:%d Getsockname for RTP socket failed(%08X)
 [%s] %s:%d Start listening RTP on sock %d
 [%s] %s:%d Getsockname for RTCP socket failed(%08X)
 [%s] %s:%d Start listening RTCP on sock %d
 [%s] %s:%d RTP  vfd (%d) accepts pkt (%04X)
 [%s] %s:%d RTCP vfd (%d) accepts pkt (%04X)
 [%s] %s:%d RTP/RTCP sockets for PayloadType %d are %d and %d
 [%s] %s:%d Configure RTP sockets: iSocRTP %d, dwRemoteSSRC %08X, cellularUniqueTag %d
 [%s] %s:%d RTPSetSockets: Invalid sockets passed: rtp(%d) rtcp(%d)
 [%s] %s:%d Creation of RTP socket from real socket failed(%08X)
 [%s] %s:%d Creation of RTCP socket from real socket failed(%08X)
 [%s] %s:%d RTPSetSockets: Invalid nwConnection passed
 [%s] %s:%d Creation of RTP socket from NWConnection failed(%08X)
 [%s] %s:%d Creation of RTCP socket from NWConnection failed(%08X)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTPTransport.c:%d: VTP_SocketWithIDSDescriptor for RTP failed(%08X)
 [%s] %s:%d Start listening RTP on virtual socket %d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTPTransport.c:%d: VTP_SocketWithIDSDescriptor for RTCP failed(%08X)
 [%s] %s:%d Start listening RTCP on virtual socket %d
 [%s] %s:%d RTPCreateSocketsForIDS iSocRTP %d, iSocRTCP %d, dwRemoteSSRC %08X, cellularUniqueTag %d
 [%s] %s:%d RTPCreateSocketsRetryBind: RTP port(%d) must be even
 [%s] %s:%d RTPCreateSocketsRetryBind failed to create RTCP socket: hResult(%x) port(%d)
 [%s] %s:%d RTPCreateSocketsRetryBind failed to create RTP socket: hResult(%x) port(%d)
 [%s] %s:%d RTPCreateSockets hRTP %p, iSocRTP %d, dwRemoteSSRC %08X cellularUniqueTag %d
 [%s] %s:%d CNAME for RTP Handle(%d) is [%s]
 [%s] %s:%d RTPCreateSockets hRTP %p, iSocRTP %d, dwRemoteSSRC %08X cellularUniquetag %d
 [%s] %s:%d RTPCreateSocket:VTP_SetAFRC failed with %d for hRTP/iSocRTP: %p/%d hAFRC %p 
 [%s] %s:%d RTPSetAFRCHandle:VTP_SetAFRC failed with %d for hRTP/iSockRTP: %p/%d  hAFRC %p 
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTPTransport.c:%d: RTP Handle invalid
 [%s] %s:%d NULL isIPv6
 [%s] %s:%d Invalid RTP handle %d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTPTransport.c:%d: Bad version(%u) of RTP header extension!
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTPTransport.c:%d: RTP extension length(%u) invalid.
 [%s] %s:%d 
 RTPGetAFRCProbeSeqId for VP %d/%d: net %x   id %d 
 [%s] %s:%d INSERT: ^^^^^^ MP %d/%d/%d P: %d  PROBE_id: %d
 [%s] %s:%d INSERT: ^^^^^^ MP %d/%d/%d P: %d  PROBE_id: %d 
 [%s] %s:%d WRM: Set metric reportInterval=%d
 [%s] %s:%d Skip AFRCProcessFeedbackPacket, due to isFeedbackOOO = %d, receivedBytes = %d,
 [%s] %s:%d RTPHandle[%p] Failed store the callback
 [%s] %s:%d RTPHandle:%p Packet callback was not registered
 [%s] %s:%d [%p] Updating the network sample rate shift factors. send[%d] receive[%d]
 [%s] %s:%d Getting kVCTransportStreamProperty_PreferredSendQueue failed - %x
 [%s] %s:%d VTP_GetPreferredSendQueue failed - %x
 [%s] %s:%d NULL rtpTransportStream
 [%s] %s:%d NULL rtcpTransportStream
 [%s] %s:%d Invalid handle
 [%s] %s:%d Trying to set new transport streams while existing ones are already activated
 [%s] %s:%d NULL rtpHandleList
 [%s] %s:%d NULL flagList
 [%s] %s:%d rtpHandleCount is %d
 [%s] %s:%d NULL runLoop
 [%s] %s:%d NULL connectionManager
 [%s] %s:%d SSRC:%X
 [%s] %s:%d NULL transportStream
 [%s] %s:%d data length <= 0
 [%s] %s:%d MEDIANOTIFICATION_DECRYPTION_STATUS callback failed. (%08lX)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTPTransport.c:%d: First RTP packet had sequence number 0. Dropping
 [%s] %s:%d RTP(%d): recv started(%X,%X, %d) SeqNum = %u, TimeStamp = %u
 [%s] %s:%d %d packets lost
 [%s] %s:%d Big jump in sequence Number! LastSeq:%d CurrentSeq:%d
 [%s] %s:%d Extension length pointer is NULL
 [%s] %s:%d Extension offset is larger than the packet size
 [%s] %s:%d Overflow while reading packet extension header
 [%s] %s:%d Overflow while reading packet extension data
 [%s] %s:%d Failed to extract packet extension:%d
 [%s] %s:%d Failed to extract packet payload:%d
 [%s] %s:%d Uninitializing RTP with error %X
 [%s] %s:%d Error Parsing Baseband Notification
 [%s] %s:%d Received baseband notification with type %d
 [%s] %s:%d Received codec rate mode change request with suggested bitrate %d
 [%s] %s:%d Error processing AFRC Baseband notification %d
 [%s] %s:%d Invalid RTP packet multiplex mode
 [%s] %s:%d CNAME for RTP(%p) is [%s]
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTPTransport.c:%d: socket failed(%08X)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTPTransport.c:%d: bind on %s failed(%08X)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTPTransport.c:%d: set sockopt IP_BOUND_IF failed
 [%s] %s:%d VCTransportStreamCopyProperty %@ failed %d
 [%s] %s:%d _RTPEnsureTransportStreamsDeactivated failed %d
 [%s] %s:%d NULL payloadList
 [%s] %s:%d payloadCount <= 0
 [%s] %s:%d Remote SSRC is 0
 [%s] %s:%d NULL rtpInfo
 [%s] %s:%d cellularUniqueTag is 0
 [%s] %s:%d NULL rtpInfoList
 [%s] %s:%d NULL updatedFlagsList
 [%s] %s:%d Failed to allocate addedTransportStreams
 [%s] %s:%d Unexpected Codec Family: %d, asking for variable bitrate change using quality setting
 [%s] %s:%d %s mSampleRate : mFormatID : mFormatFlags : mBytesPerPacket : mFramesPerPacket : mBytesPerFrame : mChannelsPerFrame : mBitsPerChannel :
 [%s] %s:%d %s %8.0f    : %7s   :  0x%08x  : %8u        : %9u        : %8u       : %9u         : %9u       :
 [%s] %s:%d SoundDec_Create(%08x --> %08x)
 [%s] %s:%d Failed to register: %X
 [%s] %s:%d AudioConverterNew returned %d '%s'
 [%s] %s:%d AudioConverterSetProperty failed to set kAudioCodecPrivatePropertyEnableSAD with error %d
 [%s] %s:%d AudioConverterSetProperty failed to set kAudioConverterSampleRateConverterQuality with error %d
 [%s] %s:%d AudioConverterSetProperty failed to set kAudioCodecPropertySpeexEncodeQuality with error %d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/SoundDec.c:%d: AudioConverterSetProperty failed to set property kAudioCodecPropertyBitRateControlMode with error %08x
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/SoundDec.c:%d: AudioConverterSetProperty failed to set property kAudioConverterPrimeMethod with error %08x
 [%s] %s:%d Leaving SoundDec_Create
 [%s] %s:%d AudioConverterFillComplexBuffer on lost packet returned %d
 [%s] %s:%d AudioConverter (%s/%d -> %s/%d) returned error %d%s during FillComplexBuffer.
 [%s] %s:%d Error filling a gap? packets[%d] < full_packets[%d]
 [%s] %s:%d Failed to set pending EVS CMRData
 [%s] %s:%d Failed to set pending AMR CMR
 [%s] %s:%d Failed to stop AMR CMR
 [%s] %s:%d %s AudioConverter (%s/%d -> %s/%d) returned error %d%s during FillComplexBuffer inBytes[%d] packets[%d].
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/SoundDec.c:%d: Failed to set DTX encoder primer sample buffer[%p] bytes[%d] err[%d]
 [%s] %s:%d AudioConverterSetProperty succeeded with dtx encoder primer sample buffer=%p bytes=%u
 [%s] %s:%d AudioConverterSetProperty failed to set property kAudioCodecPrivatePropertyEnableSAD with error %08x
 [%s] %s:%d AudioConverterSetProperty succeeded to set property kAudioCodecPrivatePropertyEnableSAD dtxEnabled=%u
 [%s] %s:%d AudioConverterSetProperty failed to set property kAudioCodecPrivatePropertyEVSSIDPeriod %d with error %08x
 [%s] %s:%d AudioConverterSetProperty succeeded to set property kAudioCodecPrivatePropertyEVSSIDPeriod evsSIDPeriod=%u 
 [%s] %s:%d AudioConverterSetProperty failed to set property kAudioCodecPropertyCurrentTargetBitRate for bitrate=%u with error %08x
 [%s] %s:%d AudioConverterSetProperty succeeded to set property kAudioCodecPropertyCurrentTargetBitRate bitrate=%u
 [%s] %s:%d AudioConverterSetProperty failed to set property kAudioCodecPrivatePropertyEVSRFParams %d with error %08x
 [%s] %s:%d AudioConverterSetProperty succeeded to set property kAudioCodecPrivatePropertyEVSRFParams offset=%d indicator=%d
 [%s] %s:%d SoundDec_SetEVSChannelAwareOffset Requested EVSRFParams offset=%d indicator=%d
 [%s] %s:%d AudioConverterSetProperty failed to set property kAudioCodecPrivatePropertyEVSFormatHandling %d with error %08x
 [%s] %s:%d AudioConverterSetProperty succeeded to set property kAudioCodecPrivatePropertyEVSFormatHandling evsFormatHandling=%u
 [%s] %s:%d AudioConverterSetProperty failed to set property kAudioCodecPrivatePropertyEVSDecodeRF %d with error %08x
 [%s] %s:%d AudioConverterSetProperty succeeded to set property kAudioCodecPrivatePropertyEVSDecodeRF frameType=%u
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/SoundDec.c:%d: AudioConverterSetProperty failed to set property kAudioCodecPrivatePropertyAMRPayloadFormat %d with error %08x
 [%s] %s:%d AudioConverterSetProperty succeeded to set property kAudioCodecPrivatePropertyAMRPayloadFormat isOctetAligned=%u
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/SoundDec.c:%d: AudioConverterSetProperty failed to set property kAudioCodecPropertyConcealmentMode %d with error %08x
 [%s] %s:%d AudioConverterSetProperty succeeded to set property kAudioCodecPropertyConcealmentMode plcMode=%u
 [%s] %s:%d SoundDec_SetBitrate Requested bitrate: %d
 [%s] %s:%d SoundDec_GetMagicCookie Failed to retrieve cookie [%p, %u] %d
 [%s] %s:%d SoundDec_GetSpeechCodecBundleData Failed to get bundle data [%p, %u] %d
 [%s] %s:%d SoundDec_SetMagicCookie Failed to set cookie [%p, %u] %d
 [%s] %s:%d SoundDec_SetMagicCookie succeeded %d
 [%s] %s:%d AudioConverterSetProperty failed to set property kAudioCodecPrivatePropertyEnableFEC %d with error %08x
 [%s] %s:%d AudioConverterSetProperty succeeded to set property kAudioCodecPrivatePropertyEnableFEC opusInBandFecEnabled=%u
 [%s] %s:%d AudioConverterSetProperty failed to set property kAudioCodecPrivatePropertyPacketLossPercentage %d with error %08x
 [%s] %s:%d AudioConverterSetProperty succeeded to set property kAudioCodecPrivatePropertyPacketLossPercentage packetLossPercentage=%u
 [%s] %s:%d AudioConverterGetProperty(kAudioCodecPrivatePropertyFECStatus) failed error=%d
 [%s] %s:%d SoundDec_SetCMR mode=%u bandwidth=%u
 [%s] %s:%d SoundDec didn't understand the asbd sent to it
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/SoundDec.c:%d: Failed to set max packet size[%d] for bitrate[%d] with err[%d]
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/SoundDec.c:%d: Failed to set bitrate[%d]: %d
 [%s] %s:%d NEW AUDIO BITRATE (vbr)=%d fvbrcodec=%d
 [%s] %s:%d AudioConverterSetProperty(kAudioCodecPrivatePropertyBandwidth) failed error=%d
 [%s] %s:%d AudioConverterSetProperty succeeded to set property kAudioCodecPrivatePropertyBandwidth codecBandwidth=%u
 [%s] %s:%d AudioConverterSetProperty failed to set kAudioCodecPrivatePropertyCMR for EVS with error=%d
 [%s] %s:%d AudioConverterSetProperty succeeded to set property kAudioCodecPrivatePropertyCMR mode=%u bandwidth=%u offset=%u indicator=%u
 [%s] %s:%d AudioConverterSetProperty failed to set kAudioCodecPrivatePropertyCMR for AMR with error=%d
 [%s] %s:%d AudioConverterSetProperty succeeded to set property kAudioCodecPrivatePropertyCMR mode=%u
 [%s] %s:%d Unit Test: Using VCMockIDSDatagramChannel instead of IDSDatagramChannel
 [%s] %s:%d Can not start VCDatagramChannel due to invalid dataPath value=%d
VCVideoPlayer [%s] %s:%d VCVideoPlayer[%p] displayLink is not running yet using currentTime:%f for display
VCVideoPlayer [%s] %s:%d VCVideoPlayer[%p] playbackClient=%p reference changed lastFrame.presentationTime=%f lastFrame.rtpTimestamp=%u adjustedPresentationTime=%f current RTPTimeStamp=%u lastFrame.presentationTime changed by %f seconds preventBackward=%d delayOffsetInSeconds=%f
VCVideoPlayer [%s] %s:%d VCVideoPlayer[%p] playbackClient=%p keeping presentationTime=%f the same to prevent it from going backward rtpTimestamp=%u durationSinceLastAdjustment=%f
VCVideoPlayer [%s] %s:%d VCVideoPlayer[%p] playbackClient=%p finished keeping presentationTime=%f the same rtpTimeStamp=%u lastFrame.presentationTime=%f durationSinceLastAdjustment=%f
VCVideoPlayer [%s] %s:%d Adjusting presentationTime=%f rtpTimestamp=%u adjustedPresentationTime=%f adjustedVideoFrameTimeInSeconds=%f durationInSeconds=%f
VCVideoPlayer [%s] %s:%d presentationTime=%f rtpTimestamp=%u delayOffsetInSeconds=%f lastFrame.presentationTime=%f durationInSeconds=%f videoFrameTimeInSeconds=%f lastFrame.videoFrameTimeInSeconds=%f alarmType=%d
VCVideoPlayer [%s] %s:%d VCVideoPlayer[%p] high leeway:%f, decoding anyways!
VCVideoPlayer [%s] %s:%d VCVideoPlayer[%p] leeway=%f waiting for next tick. presentationTime=%f displayTimestamp=%f
VCVideoPlayer [%s] %s:%d VCVideoPlayer[%p] rtpTimestamp=%u alarmsSentForDecodeButNotDisplayedCount=%u lastFrameSequenceNumberSentForDecode=%u lastFrameSequenceNumberSentForDisplay=%u
VCVideoPlayer [%s] %s:%d VCVideoPlayer[%p] alarmsSentForDecodeButNotDisplayedCount=%u is excessively high, at or above the threshold of %u. rtpTimestamp=%u lastFrameSequenceNumberSentForDecode=%u lastFrameSequenceNumberSentForDisplay=%u
VCVideoPlayer [%s] %s:%d VCVideoPlayer[%p] trying to process display alarm when it's not allowed!
VCVideoPlayer [%s] %s:%d VCVideoPlayer[%p] Processing alarmType=%d, presentationTime=%f displayTime=%f rtpTimeStamp=%u alarmsSentForDecodeButNotDisplayedCount=%d
VCVideoPlayer [%s] %s:%d VCVideoPlayer[%p] NOT Processing alarmType=%d, presentationTime=%f displayTime=%f rtpTimeStamp=%u alarmsSentForDecodeButNotDisplayedCount=%d
VCVideoPlayer [%s] %s:%d VCVideoPlayer[%p] Not processing display alarm, wait until next leeway=%f
VCVideoPlayer [%s] %s:%d VCVideoPlayer[%p] Ignoring QueueAlarmForDisplay.
VCVideoPlayer [%s] %s:%d VCVideoPlayer[%p] alarmType=%d videoFrameTimeInSeconds=%f rtpTimestamp=%u frameSequenceNumber=%u didAssembleFail=%d
VCVideoPlayer [%s] %s:%d VCVideoPlayer[%p] Processing on %s Thread. rtpTimeStamp=%u alarmsSentForDecodeButNotDisplayedCount=%u
VCVideoPlayer [%s] %s:%d VCVideoPlayer[%p] NOT processing on %s Thread. rtpTimeStamp=%u alarmsSentForDecodeButNotDisplayedCount=%u
VCVideoPlayer [%s] %s:%d VCVideoPlayer[%p] PlayerHandle=%p nextPlayoutTimeInSeconds=%.6f hostTimeForPlayout=%.6f
VCVideoPlayer [%s] %s:%d VCVideoPlayer[%p] Defaults: avSyncAudioEarlyThreshold=%f, avSyncAudioLateThreshold=%f avSyncAudioTimestampJumpThreshold=%f avSyncAudioMaxJBThreshold=%f videoPlayerHandlePtr=%p
VCVideoPlayer [%s] %s:%d Created VCVideoPlayer[%p] successfully with enableAVLooseSync=%d
VCVideoPlayer [%s] %s:%d Destroying VCVideoPlayer[%p]
VCVideoPlayer [%s] %s:%d videoPlayer[%p] playbackClient[%p] Skipping avsync offset calculation. alarmType=%d rtpTimestamp=%u firstFramePresented=%d preventBackwardPresentationTime=%d shouldResetReferenceRTPTimestamp=%d shouldUseAdjustedReference=%d shouldResetPlaybackOffset=%d, isAudioTimestampJumpDetected=%d isAudioStalled=%d isDelayOffsetLagerThanAVSyncMaxJBThreshold=%d | videoFrameRTPTimestamp=%u playoutRTPTimestamp=%u timestampWraps=%u |videoFrameTimeInSeconds=%f lastFrame.presentationTime=%f ExternalSrcPlayoutTimeInSeconds=%f displayLinkTimestamp=%f lastPlayoutRTPTimestampInSeconds=%f | videoAlarmToAudioLeeway=%f | delayOffsetInSeconds=%f avSyncOffset=%f 
VCVideoPlayer [%s] %s:%d videoPlayer[%p] playbackClient[%p] displayAlarm[%p] frameSequenceNumber=%u ExternalSrcPlayoutTimeInSeconds=%f currentTime=%f HostTimeOffset=%f playbackOffsetInSeconds=%f | Math: lastFrame.rtpTimestamp=%u externalSourcePlayoutTimestamp=%u avSyncDeltaInSamples=%d, videoTimeInSeconds=%f, audioTimeInSeconds=%f playoutOffset=%f avPlayoutOffsetAverage=%f avSyncOffset=%f avSyncOffsetQuantized=%f | Validation: avSyncOffsetValidation=%f isNewPresentationTimeInLineWithAVSyncOffset=%d | isVideoEarly=%d
VCVideoPlayer [%s] %s:%d @=@ Health: VCVideoPlayer [%p] Health displayLinkTickCount=%d numAlarmsEnqueuedForDecode=%d numAlarmsProcessedForDecode=%d numAlarmsEnqueuedForDisplay=%d numAlarmsProcessedForDisplay=%d numAlarmsDropped=%d alarmsSentForDecodeButNotDisplayedCount=%d tickInterval=%f displayLinkTimestamp=%f lastPresentationTime=%f lastRTPTimestamp=%u lastFrameTimeInSeconds=%f targetJitterBufferInSeconds=%f playbackOffsetInSeconds=%f avSyncOffset=%f
VCVideoPlayer [%s] %s:%d @=@ Health: VCVideoPlayer [%p] Health displayLinkTickCount=%d numAlarmsEnqueuedForDecode=%d numAlarmsProcessedForDecode=%d tickInterval=%f displayLinkTimestamp=%f lastPresentationTime=%f lastRTPTimestamp=%u lastFrameTimeInSeconds=%f externalSourcePlayoutTimeInSeconds=%f lastFrameTimeInSeconds-externalSourcePlayoutTimeInSeconds=%f
VCVideoPlayer [%s] %s:%d VCVideoPlayer[%p] Not processing decode alarm, wait until next leeway=%f
 [%s] %s:%d CStrToFourcc: input %s, output %s(%X)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/Util.c:%d: calloc failed(%d)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/Util.c:%d: CreateHandle failed(%08X)
 [%s] %s:%d Failed to parse header, bufferSize=%d is smaller than the header size=%ld
 [%s] %s:%d Failed to parse header, bufferSize=%d is smaller than 12 bytes
 [%s] %s:%d SecRandomCopyBytes failure result:%d
 [%s] %s:%d %dx%d
 [%s] %s:%d FirstMB=%d sliceType=%d
 [%s] %s:%d ReadFrameSliceHeader: UNEXPECTED payload %d
 [%s] %s:%d Resetting the ratio from %d:%d to 3:4
 [%s] %s:%d ##### Generating stackshot for reason=%s
 [%s] %s:%d TranslateVCPSliceType unexpected type: %d
 [%s] %s:%d Connection is NIL
 [%s] %s:%d localSessionStats is invalid
 [%s] %s:%d Cannot create network queue(s) successfully!
 [%s] %s:%d Failed to write to network queue %c
VCRC [%s] %s:%d Time counter wrapped around
VCRC [%s] %s:%d Repeated or out of order timestamp detected when calculating OWRD, sendTime=%f, receiveTime=%f
VCRC [%s] %s:%d Lag=%f with receiveDiff=%f and sendDiff=%f looks spurios (shortLag=%f, longLag=%f, threshold=%f), discarding
VCRC [%s] %s:%d Abnormal OWRD %f detected while RTT stays low at %f for too long. Reference could be bad. Reset OWRD
VCRC [%s] %s:%d Abnormal OWRD %f detected while RTT stays low at %f. abnormalOWRDSampleCount:%u
VCRC [%s] %s:%d Detected out of order at send timestamp %X, previousTS:%X, timestampDiff:%d, current owrd:%f
VCRC [%s] %s:%d Detected spike at send timestamp %X, previousTS:%X, timestampDiff:%d, average send interval:%f, current owrd:%f
VCRC [%s] %s:%d Detected spike before send timestamp %X, previousTS:%X, timestampDiff:%d, average send interval:%f, current owrd:%f
VCRC [%s] %s:%d Detected out of order at receive timestamp %X, previousTS:%X, timestampDiff:%d, current owrd:%f
VCRC [%s] %s:%d Detected spike at receive timestamp %X, previousTS:%X, timestampDiff:%d, average send interval:%f, current owrd:%f
VCRC [%s] %s:%d Detected spike before receive timestamp %X, previousTS:%X, timestampDiff:%d, average send interval:%f, current owrd:%f
VCRC [%s] %s:%d Reset OWRD from %f to 0
 [%s] %s:%d message '%@' is too long for given buffer (%d > %d)
 [%s] %s:%d %@(%p) message '%@' is too long for given buffer (%d > %d)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/FECUtil.c:%d: WRONG, cannot have %d packets per group
 [%s] %s:%d Number of symbols per packet must be non-zero.
 [%s] %s:%d Number of symbols is larger than supported. numberOfSymbols=%d symbolsPerPacket=%d
 [%s] %s:%d Invalid parameters. Size and loss cannot be null.
 [%s] %s:%d FECv2 loss signal unpack=%d size=%d loss=%d
 [%s] %s:%d Failed to allocate _audioStreamGroupConfig
 [%s] %s:%d Cannot create network element queue successfully!
 [%s] %s:%d Failed to enqueue! status: %d
 [%s] %s:%d A network element cannot connect to itself!
 [%s] %s:%d VCMomentsHistoryBuffer Delegate parameter is nil
 [%s] %s:%d VCMomentsHistoryBuffer timestampQueue length %d != sampleMap length %d, sizes are inconsistent
 [%s] %s:%d Image not found in the buffer for timestamp=%u, retrieving the latest one for currentTS=%u, _sampleMap contains %lu
 [%s] %s:%d Can't find last object in timestamp queue, get last object in the image buffer
 [%s] %s:%d VCMomentsHistoryBuffer %s the old frame does not in buffer, something is wrong
 [%s] %s:%d timestamp %d exists already, enqueue failed
 [%s] %s:%d Invalid stream token
 [%s] %s:%d %@(%p) Invalid stream token
 [%s] %s:%d The power spectrum is nil
 [%s] %s:%d %@(%p) The power spectrum is nil
 [%s] %s:%d isPause[%d] begin
 [%s] %s:%d mediaserverd died reported by stream=%p
 [%s] %s:%d VCMediaStream didUpdateVideoConfiguration configDict is nil
 [%s] %s:%d Failed configure stream synchronization
 [%s] %s:%d %@(%p) Failed configure stream synchronization
 [%s] %s:%d VCMediaStream allocated new VCAudioStream %p
 [%s] %s:%d VCMediaStream allocated new virtual TTY device %p with mode %ld
 [%s] %s:%d Text device for stream token %ld
 [%s] %s:%d Couldn't find text stream for stream token %ld
 [%s] %s:%d VCMediaStream releasing old VCAudioStream[%p]
 [%s] %s:%d Forcing video payload to %d
 [%s] %s:%d Unexpected stream type [%s]
 [%s] %s:%d %@(%p) Unexpected stream type [%s]
 [%s] %s:%d Failed to allocate stream config
 [%s] %s:%d %@(%p) Failed to allocate stream config
 [%s] %s:%d VCMediaStream failed to set volume nil xpcDict
 [%s] %s:%d Unable to retrieve video stream for audio sync token=%ld
 [%s] %s:%d removed stream=%s as sync source for stream=%s delegates
 [%s] %s:%d VCMediaStream setMomentsCollectorDelegate for audioStream=%p: videostream=%p, delegate=%p
 [%s] %s:%d %s startSynchronization succeeded
 [%s] %s:%d %s startSynchronization failed
 [%s] %s:%d VCMediaStream failed to set PAUSE state, nil xpcDict
 [%s] %s:%d VCMediaStream failed to set stream direction nil xpcDict
 [%s] %s:%d VCMediaStream failed to set rtcpEnabled nil xpcDict
 [%s] %s:%d VCMediaStream failed to set rtpTimeOutEnabled nil xpcDict
 [%s] %s:%d VCMediaStream failed to set rtcpTimeOutEnabled nil xpcDict
 [%s] %s:%d VCMediaStream failed to set rtpTimeOutInterval nil xpcDict
 [%s] %s:%d VCMediaStream failed to set rtcpTimeOutInterval nil xpcDict
 [%s] %s:%d VCMediaStream failed to set rtcpSendInterval nil xpcDict
 [%s] %s:%d VCMediaStream failed to set 'input frequency meter enabled' nil xpcDict
 [%s] %s:%d VCMediaStream failed to set 'output frequency meter enabled' nil xpcDict
 [%s] %s:%d VCMediaStream allocated new VCVideoStream %p
 [%s] %s:%d VCMediaStream created momentsCollector for video stream %ld. vcMomentsCollectorDictionary=%@
 [%s] %s:%d VCMediaStream releasing old VCVideoStream %p. Removed momentsCollector for video stream %ld, vcMomentsCollectorDictionary=%@
 [%s] %s:%d Allocated new %s(%p)
 [%s] %s:%d %@(%p) Allocated new %s(%p)
 [%s] %s:%d Releasing old %s(%p) stream:%ld 
 [%s] %s:%d %@(%p) Releasing old %s(%p) stream:%ld 
 [%s] %s:%d Data header size (%d) is larger than the received packet size (%zu)
 [%s] %s:%d Invalid data length. inDataLength:%zu, payloadLength:%hu totalLength=%zu
 [%s] %s:%d Failed to append the uncompressed video data
 [%s] %s:%d Failed to convert negotiatorStreamGroupConfig cipherSuite(%ld) to mediaStreamConfig cipherSuite
 [%s] %s:%d Cannot create VCEmualtedPacket with datagram: %p, datagramSize: %d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Failed to allocate memory pool
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Failed to allocate memory pool allocator
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Failed to allocate block buffer header allocator
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Failed to allocate sample buffer allocator
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Failed to allocate slice header allocator
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer pointer is null
VideoPacketBuffer [%s] %s:%d Invalid arguments for resetting max burst loss stats.
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] FEC Feedback computed maxLossFrameIndex=%d frameSequenceNumber=%d playoutRTPTimestamp=%u rtpTimestamp=%u frameSize=%u VideoPacketsLostPerFrame=%u lossRatio=%2.2f arrivalTime=%2.3f
VideoPacketBuffer [%s] %s:%d Invalid videoPacketBuffer for updating max frame burst loss.
VideoPacketBuffer [%s] %s:%d Invalid frameStats for updating max frame burst loss for VideoPacketBuffer=%p
VideoPacketBuffer [%s] %s:%d Invalid frameIndex for updating max frame burst loss for VideoPacketBuffer=%p, frameIndex=%d
VideoPacketBuffer [%s] %s:%d Received more video packets than expected.
VideoPacketBuffer [%s] %s:%d Received more parity packets than expected.
VideoPacketBuffer [%s] %s:%d frameSequenceNumber=%d size=%d maxVideoPacketsLostPerFrame=%d, maxParityPacketsLostPerFrame=%d, videoPacketsLost=%d, parityPacketsLost=%d, videoPacketsExpected=%d, parityPacketsExpected=%d, videoPacketsReceived=%d, parityPacketsReceived=%d
VideoPacketBuffer [%s] %s:%d Invalid arguments for updating max group burst loss.
VideoPacketBuffer [%s] %s:%d Lost more video symbols than expected.
VideoPacketBuffer [%s] %s:%d groupID=%d videoPacketsLost=%d parityPacketsLostPerGroup=%d numberOfSymbolsPerPacket=%d numberOfDataPackets=%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] pFECHeader is NULL
VideoPacketBuffer [%s] %s:%d [Media Priority] Received video priority=%u
VideoPacketBuffer [%s] %s:%d Invalid Stream Id Count %d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Discarding packet fecProtected=%d TS=%d lastTS=%d seq=%d that arrived late [%f]s frameSequenceNumber=%d isTemporalStreamEnabled=%d isBaseLayerStream=%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] $ Discarding packet %d, frame %lu.  Packet.payload disagree, first %d, then %d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] $ Discarding packet %d, frame %lu.  Packet.srcfmt disagree, first %d, then %d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] $ Discarding packet %d, frame %lu.  Packet.pctype disagree, first %d, then %d
VideoPacketBuffer [%s] %s:%d Retransmitted packet arrived ssrc=%u seqNum=%u packetLen=%d isRetransmitted=%d frameSequenceNumber=%d
VideoPacketBuffer [%s] %s:%d invalidating fecHeader for frame with frameSequenceNumber:%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] schedule pointer is null
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] seq:%u playoutRTPTimestamp:%u frameTimestamp:%u diff:%d frameSequenceNumber=%d previousFrameSequenceNumber=%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] frameDecodingOrder:%hu, expectedDecodingOrder:%hu
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] FEC Protected Frame begin recovery
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Scheduling FEC Protected Frame after successful recovery (when next frame come)
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] scheduling incomplete frame! fecProtected:%d seq:%u playoutRTPTimestamp:%u frameTimestamp:%u diff:%d decodingOrder:%u isDecodingOrderValid:%d expectdDecodingOrder:%d isExpectedDecodingOrderValid:%d fecStatus=%d frameSequenceNumber=%d previousFrameSequenceNumber=%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Late frame scheduled lateFramesScheduledCount=%d playoutRTPTimestamp=%u frameSequenceNumber=%u previousFrameSequenceNumber=%u
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] pointer is null scheduledFrameTimestamps=%p
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Frame assembly failed frameTS:%u for timestamp:%u seq=%u frameSequenceNumber=%u isFrameSequenceNumberValid=%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Assembled incomplete frame with timestamp=%u, frameSequenceNumber=%d. Merging buffers!
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Freed all frames
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] wFirstSeqNumber:%d, dwFirstTimestamp=%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Add Packet frameSequenceNumber=%d fParityPacket=%d fecProtected=%d seq=%d startPosition=%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Received a packet out of order. lastAssembledTimestamp=%d packetTimestamp=%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Correct loss frameSequenceNumber=%d isParity=%d frameIndex=%d maxVideoPacketsLostPerFrame=%d maxParityPacketsLostPerFrame=%d
VideoPacketBuffer [%s] %s:%d Received NULL frame
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Starting to track late frame[%p] at t=%.4f
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Already tracking frame=%p with t=%.4f
VideoPacketBuffer [%s] %s:%d isNewFrameOufOfOrder=%d, newFrame->seq=%d, newFrame->prevSeq=%d, newFrame->nextSeq=%d, newFrame->next->prevSeq=%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Decoding order is different within a frame. Previous:%d New:%d
VideoPacketBuffer [%s] %s:%d Out of order non-parity packet. Incoming packet with sequenceNumber=%d, isParity=%d, groupID=%d, startPosition=%d
VideoPacketBuffer [%s] %s:%d Duplicate non-partity packet! Incoming packet with sequenceNumber=%d, isParity=%d, groupID=%d, startPosition=%d
VideoPacketBuffer [%s] %s:%d Duplicate parity packet! Incoming packet with sequenceNumber=%d, isParity=%d, groupID=%d, startPosition=%d
VideoPacketBuffer [%s] %s:%d Out of order parity packet! Incoming packet with sequenceNumber=%d, isParity=%d, groupID=%d, startPosition=%d
VideoPacketBuffer [%s] %s:%d BEGIN
VideoPacketBuffer [%s] %s:%d Error! Missing inital frames, seq:%d
VideoPacketBuffer [%s] %s:%d Packet seq:%d
VideoPacketBuffer [%s] %s:%d END
VideoPacketBuffer [%s] %s:%d Error! Missing middle frames, beforeSeq:%d afterSeq:%d
VideoPacketBuffer [%s] %s:%d Error! Missing end of frame
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Frame already scheduled! expectedSeq=%u seq=%u frameTimestamp=%u frameSequenceNumber=%u playoutRTPTimestamp=%u
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Invalid parameter scheduledFrameTimestamp!
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Out of order. expectedSeq:%u seq:%u frameTimestamp:%u frameSequenceNumber=%u playoutRTPTimestamp:%u
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Scheduling FEC Protected Frame after successful recovery
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] FEC Protected Frame unsuccessful recovery
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Scheduling Regular Frame seq:%u frameTimestamp:%u playoutRTPTimestamp:%u, isTemporalScaledStream=%d, isBaseLayerStream=%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Frame is not yet ready seq:%u frameTimestamp:%u playoutRTPTimestamp:%u, isTemporalScaledStream=%d, isBaseLayerStream=%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Previous frame is unknown. frameTimestamp=%u frameSequenceNumber=%d lastAssembledFrameSequenceNumber=%u baseLayerFrameAssemblyFailed=%d playoutRTPTimestamp=%u
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Trying to assemble a frame while previous frame assembly is pending. frameTimestamp=%u frameSequenceNumber=%d previousFrameSequenceNumber=%d lastAssembledFrameSequenceNumber=%u baseLayerFrameAssemblyFailed=%d playoutRTPTimestamp=%u
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Temporal base layer frame out of order. expectedSeq=%u seq=%u frameTimestamp=%d baseLayerFrameSequenceNumber=%d playoutRTPTimestamp=%u
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] group_id mismatch, expected (%d)
VideoPacketBuffer [%s] %s:%d Received %s packet FEC Header version %d with numberOfDataPackets: %d, numberOfParityPackets:%d
VideoPacketBuffer [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/VideoPacketBuffer.c:%d: VideoPacketBuffer[%p] packet size (%d) is too big
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Unexpected index index=%d startPosition=%d dataPacketOffset=%d numberOfSymbolsPerPacket=%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Unexpected duplicate packet found! GroupID=%d packet=%p parity=%d position=%d
VideoPacketBuffer [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/VideoPacketBuffer.c:%d: VideoPacketBuffer[%p] malloc failed
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Block buffer init failed
VideoPacketBuffer [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/VideoPacketBuffer.c:%d: VideoPacketBuffer[%p] RSU_Decode failed (%d)
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] recovered frame (%08X) group (%d:%d)
VideoPacketBuffer [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/VideoPacketBuffer.c:%d: VideoPacketBuffer[%p] payload size (%d) is too big
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Failed to create block buffer with error %d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Failed to get data pointer with error %d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Flushing incomplete frame bufer timestamp=%u playoutRTPTimestamp=%u frameSequenceNumberAtHead=%hu frameSequenceNumberAtTail=%hu diffTime=%5.5f
VideoPacketBuffer [%s] %s:%d This frame has unrecoverable loss, consider checking why the FEC Feedback Analyzer did not provide enough protection frameSequenceNumber=%d videoPacketsExpected=%d missingMediaPacketsCount=%d mediaCount=%d parityCount=%d  extraParityPacketsNeededCount=%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Error while processing packets
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Error while detecting missing packets missingMediaPacketsCount=%d mediaCount=%d parityCount=%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Error appending packets, buffer size %zu
VideoPacketBuffer [%s] %s:%d Frame assembly failed because of no end of frame videoPacketsExpected=%d mediaCount=%d parityCount=%d missingMediaPacketsCount=%d
VideoPacketBuffer [%s] %s:%d Frame assembly failed because of lost packets videoPacketsExpected=%d mediaCount=%d parityCount=%d missingMediaPacketsCount=%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] failed to create data frame. Status=%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Failed to decrypt the frame with frameDecryptionCallback result=%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Failed to get valid decrypted buffer length=%zu
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Failed to parse reconstructed packet result=%d videoPacketsExpected=%d, mediaCount=%d parityCount=%d missingMediaPacketsCount=%d error.reason=%s
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Assembled after gap in Frame Sequence Number without Refresh Frame timestamp=%u isLTRPFrame=%u isIntraFrame=%u frameSequenceNumber=%u lastAssembledFrameSequenceNumber=%u gapFrameSequenceNumber=%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Refresh frame has arrived and we can resume enqueueing late frames isIntraFrame=%d isLTRPFrame=%d frameSequenceNumber=%u
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] seq:%d Needs Refresh badFrame reason:%s 
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] frame recovered with retransmitted packets frameSequenceNumber=%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] frame with retransmitted packets failed to assemble frameSequenceNumber=%d
VideoPacketBuffer [%s] %s:%d packet[%p] bufferData.data is NULL
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Failed to create block buffer for packet. Status:%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] PacketSeq:%d LastSeq:%d missingCount:%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Failed to retrieve magic number and length
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Found corrupted buffer. Offset:%d BufferLen:%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Failed to truncate the buffer
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Failed to get length pointer, bufferLength is %zu, i is %d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Failed to get the slice length
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] jump=%d i=%d frameBufferLength=%u
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Failed to get data pointer
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] CMBlockBufferAccessDataBytes failed with status=%d dataPointerLength=%lu
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] FRAMEHEADER_SLICEINFO bad dictHeaderInfo
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] *** BAD FRAME -- %d: iSlices >= MAX_SLICES  Stop!
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Failed to create contiguous SPS buffer. Status:%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] FRAMEHEADER_SPSPPS bad dictHeaderInfo. err=%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] RECEIVED SPS/PPS TS: %08X, isTemporalScaledStream=%d, isBaseLayerStream=%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] IMGDESC is in multiple chuncks, copy needed
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Failed to create contiguous IMGDESC buffer. Status:%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] FRAMEHEADER_IMGDESC bad dictHeaderInfo
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] RECEIVED IMGDESC(%dx%d) TS:%08X, isTemporalScaledStream=%d, isBaseLayerStream=%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] SPS is in multiple chuncks, copy needed
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Failed to create contiguous PPS buffer. Status:%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Unknown InfoType: %d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] RECEIVED NO IMGDESC YET TS:%08X, isTemporalScaledStream=%d, isBaseLayerStream=%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] RECEIVED A FRAME WITH NO MATCHING SLICES(%d -> %d), isTemporalScaledStream=%d, isBaseLayerStream=%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] RECEIVED REFRESH FRAME seq:%d TS:%08X BITS:%04X SLICES:%d, isTemporalScaledStream=%d, isBaseLayerStream=%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] RECEIVED INTRA FRAME TS:%08X BITS:%04X SLICES:%d, isTemporalScaledStream=%d, isBaseLayerStream=%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Late frame was discarded in parse stage timestamp=%u frameSequenceNumber=%u
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Successfully assembled previously incomplete late frame timestamp=%u frameSequenceNumber=%u isRefreshFrame=%d hasRetransmittedPackets=%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] late frame assembled with retransmitted packets frameSequenceNumber=%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Received refresh frame for streamID=%d, frameSeqNumber=%d, isTemporalScalingStream=%d, isBaseLayerStream=%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Exiting base layer preceding loss state. isRefreshFrame=%d isBaseLayerStream=%d timestamp=%u frameSequenceNumber=%u
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] VPB is still in preceding loss state, dropping this frame. isRefreshFrame=%d isBaseLayerStream=%d timestamp=%u frameSequenceNumber=%u
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] FrameTimestamp=%d, evictedFramesTrackedCount=%d, evictedFramesRecoveredCount=%d, percOfEvictedFramesRecovered=%f, averageLatePacketDelayForEvictedFrames=%f,
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Error in assembly missingMediaPacketsCount=%d mediaCount=%d parityCount=%d frameSequenceNumber=%d ssrc=%u missingPackets=%s reason=%s
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Assembly of base layer frame of temporal stream failed, refresh frame is needed. frameSequenceNumber=%d timestamp=%u baseLayerFrameAssemblyFailedSequenceNumber=%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Moving Evicted frame with frameSequenceNumber=%u to incomplete buffer
 [%s] %s:%d Audio decoder (%p) received a packet with unknown payload=%d networkPayload=%d
 [%s] %s:%d Found existing audio receiver (%p) decoder (%p) at index %u. Release decoder.
 [%s] %s:%d AudioDecoder is NULL
 [%s] %s:%d Invalid decoder format
 [%s] %s:%d Failed to allocate payload structure for audio receiver (%p).
 [%s] %s:%d Skip creating decoder for DTMF
 [%s] %s:%d Overriding AMR payload with EVS Decoder
 [%s] %s:%d SoundDec_Create failed(%08X) for audio receiver (%p).
 [%s] %s:%d InternalBlockSize=%d useRTC=%d amrOctetAligned=%d payload=%d selectedPayload=%d networkPayload=%d flags=%d blockSize=%d forceEVSWideBandforAMR=%d headerFormat=%d
 [%s] %s:%d Updated DTMF sampleRate=%d isOctedAligned=%d convertedSamples=%d
 [%s] %s:%d Update audio receiver (%p) decoders: count=%u
 [%s] %s:%d Asking SpeechCodecBundleData for a invalid bundle data for payload type: %d
 [%s] %s:%d unable to read bundle data[%d]
 [%s] %s:%d Invalid parameter bitRate=%p
 [%s] %s:%d No packets in the bundle data [%p, %u]
 [%s] %s:%d VCConnection: initWithConnectionResult: %s
 [%s] %s:%d VCConnection: isLocalIPPort: NO
 [%s] %s:%d VCConnection: isLocalIPPort: %s
 [%s] %s:%d VCConnection: isRemoteIPPort: NO
 [%s] %s:%d VCConnection: isRemoteIPPort: %s
 [%s] %s:%d VCConnection: isOnSameIPPortWithConnection: %s vs. %s
 [%s] %s:%d VCConnection: isOnSameIPPortWithConnection: YES
 [%s] %s:%d VCConnection: isOnSameIPPortWithConnection: NO
 [%s] %s:%d VCConnection: isOnSameInterfacesWithConnection: NO
 [%s] %s:%d VCConnection: isOnSameInterfacesWithConnection: %s vs. %s
 [%s] %s:%d VCConnection: isOnSameInterfacesWithConnection: %s
 [%s] %s:%d Downlink bitrate cap is not implemented for legacy VCConnection
 [%s] %s:%d Uplink bitrate cap is not implemented for legacy VCConnection
 [%s] %s:%d Setting downlink bitrate cap is not implemented for legacy VCConnection
 [%s] %s:%d Setting uplink bitrate cap is not implemented for legacy VCConnection
 [%s] %s:%d Failed to generate the payload specs field!
 [%s] %s:%d Failed to generate the payload field!
 [%s] %s:%d Failed to generate the default payload field!
 [%s] %s:%d Failed to generate the coordinateSystem field!
 [%s] %s:%d Stream config is nil
 [%s] %s:%d groupID='%s' qualityIndex=%u Unable to encode both payload and payload specs. payloads=%@ codecs=%@
 [%s] %s:%d Default stream config doesn't exist
 [%s] %s:%d Failed to generate the payloads field!
 [%s] %s:%d repairedStreamID=%u does not match lower 16 bits of SSRC + 1 (%u)
 [%s] %s:%d Invalid input parameter (payloadConfigs and payloadConfigSampleRates have different sizes)
 [%s] %s:%d Missing quality index and stream type. streamGroupID=%s
 [%s] %s:%d Unable to determine the quality index. streamGroupID=%s streamIndex=%d
 [%s] %s:%d Unsupported metadata flag (0x%x)
 [%s] %s:%d Invalid payload config Sample Rates
 [%s] %s:%d Invalid payload specs
 [%s] %s:%d Failed to allocate config for known stream type. streamGroupID=%s streamIndex=%d!
 [%s] %s:%d Invalid payload bitmap
 [%s] %s:%d Unable to encode payload=%@
 [%s] %s:%d Invalid index=%u in payload configs (%lul)
 [%s] %s:%d Invalid payload: 0x%x
 [%s] %s:%d Unrecognized payload (0x%x)!
 [%s] %s:%d Unrecognized payload specs (0x%x)!
 [%s] %s:%d Invalid codec index (%d)!
 [%s] %s:%d The metadata field doesn't fit in a uint16. metadata=%x
 [%s] %s:%d The maxNetworkBitrate field doesn't fit in a uint16. maxNetworkBitrate=%x
 [%s] %s:%d The audioChannelCount field doesn't fit in a uint8. audioChannelCount=%x
 [%s] %s:%d Failed to copy the stream config for required fields compression
 [%s] %s:%d Failed to copy the stream config for optional fields compression
 [%s] %s:%d Failed to allocate audio issue detector handle
 [%s] %s:%d Failed to allocate audio issue detector queue
 [%s] %s:%d Audio issue detector created for direction=%d
 [%s] %s:%d Invalid parameter issueDetectorUtil=%p config=%p
 [%s] %s:%d Audio issue detector configured for direction=%d with samples per frame=%d, sample rate=%d
 [%s] %s:%d Invalid parameter issueDetectorUtil=%p
 [%s] %s:%d Audio issue detector link type updated to %d for direction=%d
 [%s] %s:%d Audio issue detector is NULL
 [%s] %s:%d Audio issue detector for direction=%d is NULL
 [%s] %s:%d Audio issue detector [%p] state is invalid
 [%s] %s:%d Unexpected event in init state for direction=%d
 [%s] %s:%d Invalid parameter issueDetectorUtil=%p eventQueue=%p
 [%s] %s:%d Unexpected event in idle state for direction=%d
 [%s] %s:%d Event logging enqueue failed for event=%d
 [%s] %s:%d Failed to allocate reporting dictionary
 [%s] %s:%d Unexpected event in silence state for direction=%d
 [%s] %s:%d Unexpected event in speech state in direction=%d
 [%s] %s:%d Audio issue detector: DistortionEvent: Continuous speech loss: direction=%d, disortionTimeMs=%d, distortionDurationMs=%d
 [%s] %s:%d Audio issue detector: DistortionEvent: Average speech loss: direction=%d, disortionTimeMs=%d, distortionDurationMs=%d
 [%s] %s:%d Audio issue detector: DistortionEvent: Downlink link broken: direction=%d, disortionTimeMs=%d, distortionDurationMs=%d
 [%s] %s:%d Audio issue detector: DistortionEvent: Downlink silence > 5s: direction=%d, disortionTimeMs=%d, distortionDurationMs=%d
 [%s] %s:%d Audio issue detector: DistortionEvent: Uplink silence > 5s: direction=%d, disortionTimeMs=%d, distortionDurationMs=%d
 [%s] %s:%d Audio issue detector: DistortionEvent: Continuous zero pcm samples > 5s in uplink: direction=%d, disortionTimeMs=%d, distortionDurationMs=%d
 [%s] %s:%d Audio issue detector: DistortionEvent: Continuous zero pcm samples > 5s in downlink: direction=%d, disortionTimeMs=%d, distortionDurationMs=%d
 [%s] %s:%d Audio issue detector: DistortionEvent: Low energy in uplink: direction=%d, disortionTimeMs=%d, distortionDurationMs=%d
 [%s] %s:%d Audio issue detector: DistortionEvent: Low energy in downlink: direction=%d, disortionTimeMs=%d, distortionDurationMs=%d
 [%s] %s:%d Audio issue detector: DistortionEvent: High noise floor in uplink: direction=%d, disortionTimeMs=%d, distortionDurationMs=%d, segmentRmsMeanDb=%d
 [%s] %s:%d Audio issue detector: DistortionEvent: High noise floor in downlink: direction=%d, disortionTimeMs=%d, distortionDurationMs=%d, segmentRmsMeanDb=%d
 [%s] %s:%d Audio issue detector: CallEndEvent: Speech state rms stats: direction=%d, disortionTimeMs=%d, distortionDurationMs=%d, rmsMeanDb=%d, rmsMinDb=%d, rmsMaxDb=%d, rmsSegmentMeanDb=%d, rmsSegmentMinDb=%d, rmsSegmentMaxDb=%d
 [%s] %s:%d Audio issue detector: CallEndEvent: Silence state rms stats: direction=%d, disortionTimeMs=%d, distortionDurationMs=%d, rmsMeanDb=%d, rmsMinDb=%d, rmsMaxDb=%d, rmsSegmentMeanDb=%d, rmsSegmentMinDb=%d, rmsSegmentMaxDb=%d
 [%s] %s:%d Audio issue detector: CallEndEvent: Call end stats: direction=%d, disortionTimeMs=%d, distortionDurationMs=%d, payloadType=%d, sampleRate=%d, bitRateInBps=%d, ratType=%d, totalFrameCount=%d, speechFrameCount=%d, speechBadFrameCount=%d, speechLostFrameCount=%d, silenceFrameCount=%d, noDataFrameCount=%d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCAudioIssueDetectorUtil.c:%d: Unexpected log event
 [%s] %s:%d Rotation angle %d is not supported (Only 90 and 270 are valid).
 [%s] %s:%d 
 [%s] %s:%d kVCVideoSourceTokenInvalid. type=%d, deviceName=%@
 [%s] %s:%d sourceToken was created before. type=%d, deviceName=%@
 [%s] %s:%d Reached VCVIDEOSOURCETOKEN_MAX_IDENTIFIER=0x%x, reset _identifierSeeds %d to %d
 [%s] %s:%d sourceToken(0x%x) deviceName (%@) was in look up table _sourceNames. Either token is colliding ,or VCVideoSourceType is not correct
 [%s] %s:%d Created sourceToken=0x%x, type=%d, deviceName=%@
 [%s] %s:%d Invalid configuration
 [%s] %s:%d Failed to generate dispatch queue name
 [%s] %s:%d %@(%p) Failed to generate dispatch queue name
 [%s] %s:%d Failed to generate dispatch queue. queueName=%@
 [%s] %s:%d %@(%p) Failed to generate dispatch queue. queueName=%@
 [%s] %s:%d null configuration
 [%s] %s:%d Invalid tapType=%d
 [%s] %s:%d Invalid sessionType=%d
 [%s] %s:%d capture context is NULL
 [%s] %s:%d nil client
 [%s] %s:%d %@(%p) nil client
 [%s] %s:%d %@(%p) %s
 [%s] %s:%d not handled
 [%s] %s:%d %@(%p) not handled
 [%s] %s:%d Invalid request!
 [%s] %s:%d Invalid count!
 [%s] %s:%d TransactionID is nil!
 [%s] %s:%d RequestMode is nil!
 [%s] %s:%d RequestState is nil!
 [%s] %s:%d RequestTimestamp is nil!
 [%s] %s:%d MediaType is nil!
 [%s] %s:%d Local Video recording is enabled, we do not support type=%d remote=%d requests
 [%s] %s:%d Received local video request with local video recording disabled
 [%s] %s:%d InitiatorID is nil!
 [%s] %s:%d RequesteeID is nil!
 [%s] %s:%d RequesterID is nil!
 [%s] %s:%d FileSize is nil!
 [%s] %s:%d Request did succeed is nil!
 [%s] %s:%d VCMoments request %@ has unexpected contents!
 [%s] %s:%d VCMoments request %@ invalid transactionID!
 [%s] %s:%d VCMoments request %@ is processed, ignoring the duplicate
 [%s] %s:%d VCMoments set capabilities %d
 [%s] %s:%d mode=%d, timestamp=%d, request %@
 [%s] %s:%d update _isActive to %s
 [%s] %s:%d We do not support local audio recording
 [%s] %s:%d AVCMomentsRequestMode invalid
 [%s] %s:%d getLivePhotoWithTransactionID failed! stillImageURL:%@ movieURL:%@ error:%@
 [%s] %s:%d The number of requests exceeds the max %d
 [%s] %s:%d mode=%d, didSucceed=%d, fileSize=%ld
 [%s] %s:%d AVCMomentsRequestModeInvalid
 [%s] %s:%d Missing state in moments request %@
VCAudioRedBuilder [%s] %s:%d %s %s
VCAudioRedBuilder [%s] %s:%d Discarding Red payload that is too big :%d
VCAudioRedBuilder [%s] %s:%d Discarding Red payload with too old sequence offset :%d
VCAudioRedBuilder [%s] %s:%d Discarding Red payload with too old timestamp offset :%d
VCAudioRedBuilder [%s] %s:%d Buffer size not enough remainingLength %d
VCAudioRedBuilder [%s] %s:%d Buffer size not enough requiredLength %d remainingLength %d
VCAudioRedBuilder [%s] %s:%d timestampOffsetThreshold:%d highThreshold:%d lowThreshold:%d payloadTimestamp:%d
VCAudioRedBuilder [%s] %s:%d blockOffset:%d timestampOffset:%d redTimestamp:%d redPayload:%s
VCAudioRedBuilder [%s] %s:%d timestampOffset:%d redPayload:%s
VCAudioRedBuilder [%s] %s:%d Failed to allocate red payload buffer history
VCAudioRedBuilder [%s] %s:%d Cap exceeded for maxDelay:%d using %d instead
VCAudioRedBuilder [%s] %s:%d Cap exceeded for number of red payloads:%d using %d instead
VCAudioRedBuilder [%s] %s:%d Bad packet large redPayload bufferLength:%d
VCAudioRedBuilder [%s] %s:%d RED payload invalid. Buffer is too small
VCAudioRedBuilder [%s] %s:%d Invalid RED header. Abort and drop this packet.
VCAudioRedBuilder [%s] %s:%d Invalid RED header
VCAudioRedBuilder [%s] %s:%d redundant payloads count:%d
 [%s] %s:%d VTU_ReallocPktsInfo failed; iNewMaxPacketCount==0 BUT *ppiPacketSizes=%p *ppiPacketFlags=%p
 [%s] %s:%d Failed to compute the new max packet count
 [%s] %s:%d VTU_ReallocPktsInfo requested %d. Already have larger %d pkts.
 [%s] %s:%d Failed to reallocate packet sizes array
 [%s] %s:%d Failed to reallocate packet flags array
 [%s] %s:%d Failed to reallocate line sizes array
 [%s] %s:%d Failed to reallocate line offsets array
 [%s] %s:%d VTU_ReallocPktsInfo succeeded for %d elements.
 [%s] %s:%d VTU_SplitVideoIntoPackets: bEnableInitialMTUOverrideFor2G    MTU: %d %d->%d  Tx: %d
 [%s] %s:%d CU_SplitVideoIntoPackets failed sanity check!: iProbeSeqPacketSize = %d iProbeSeqFirstPacketSize = %d iProbeSeqPacketCount = %d len = %d lenWithFEC = %d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/VideoTransmitterUtils.c:%d: Max number of GOBs reached (%d), discarded.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/VideoTransmitterUtils.c:%d: Invalid slice length (%d), discarded.
 [%s] %s:%d VTU_SplitVideoIntoPackets: FRAMEHEADER_IMGDESC/SPS bad RetrieveMBSlice
 [%s] %s:%d Too many slices in packet
 [%s] %s:%d VTU_SplitVideoIntoPackets: FRAMEHEADER_SLICEINFO bad RetrieveMBSlice
 [%s] %s:%d Exceeded max GOB count (%d > %d)!
 [%s] %s:%d Failed to allocate buffer!
 [%s] %s:%d "parts" is zero while trying to calculate "each = (bytes / parts) + 1"
 [%s] %s:%d _VTU_GenerateNewPacketCount requested %d exceeds the MAX pkts %d. 
 [%s] %s:%d _VTU_ReallocateBuffer failed to re-allocate %zu bytes
 [%s] %s:%d _VTU_ReallocateBuffer.....Reallocing buffer of size %zu to %zu from [%p, %p)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/VideoTransmitterUtils.c:%d: Failed to allocate entry
 [%s] %s:%d Unexpected frame with zero data length!
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/VideoTransmitterUtils.c:%d: calloc %d bytes failed
 [%s] %s:%d Skip the frame since we failed to prepare the last fragement
 [%s] %s:%d Skip the frame since we failed to prepare the middle fragement
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/VideoTransmitterUtils.c:%d: malloc %d bytes failed
 [%s] %s:%d Failed at VTU_ReallocPktsInfo!
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/VideoTransmitterUtils.c:%d: Invalid size iGobs = %d, iHeads = %d, buffer size = %u, dataLen = %d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/VideoTransmitterUtils.c:%d: Failed to allocate new entry
 [%s] %s:%d Found out-of-bound data length %d
 [%s] %s:%d Failed to initialize media line
 [%s] %s:%d Invalid media line type
 [%s] %s:%d Can't parse attribute: %s
 [%s] %s:%d Failed to allocate audio limiter
 [%s] %s:%d voiceLimiterUnit=%p VCAudioUnit_NewInstance kAudioUnitSubType_ControlFreak
 [%s] %s:%d Error AudioUnitSetProperty voiceLimiterUnit, kAudioUnitProperty_MaximumFramesPerSlice %d
 [%s] %s:%d voiceLimiterUnit=%p kAudioUnitProperty_MaximumFramesPerSlice kAudioUnitScope_Global
 [%s] %s:%d Error AudioUnitSetProperty voiceLimiterUnit, kAudioUnitProperty_StreamFormat, kAudioUnitScope_Input %d
 [%s] %s:%d voiceLimiterUnit=%p kAudioUnitProperty_StreamFormat kAudioUnitScope_Input
 [%s] %s:%d Error AudioUnitSetProperty voiceLimiterUnit, kAudioUnitProperty_StreamFormat, kAudioUnitScope_Output %d
 [%s] %s:%d voiceLimiterUnit=%p kAudioUnitProperty_StreamFormat kAudioUnitScope_Output
 [%s] %s:%d Failed to set the voiceLimiterUnit threshold db %d
 [%s] %s:%d voiceLimiterUnit=%p kVCAudioLimiterParameterInputThresholddB kAudioUnitScope_Global
 [%s] %s:%d Failed to set the voiceLimiterUnit min fast gain %d
 [%s] %s:%d voiceLimiterUnit=%p kVCAudioLimiterParameterMinFastGain kAudioUnitScope_Global
 [%s] %s:%d Failed to set the voiceLimiterUnit fast gain release time %d
 [%s] %s:%d voiceLimiterUnit=%p kVCAudioLimiterParameterFastGainReleaseTime kAudioUnitScope_Global
 [%s] %s:%d Failed to set the voiceLimiterUnit lookahead %d
 [%s] %s:%d voiceLimiterUnit=%p kVCAudioLimiterParameterLookahead kAudioUnitScope_Global
 [%s] %s:%d Failed to set the voiceLimiterUnit input gain %d
 [%s] %s:%d voiceLimiterUnit=%p kVCAudioLimiterParameterInputGain kAudioUnitScope_Global
 [%s] %s:%d Error AudioUnitInitialize voiceLimiterUnit %d
 [%s] %s:%d voiceLimiterUnit=%p AudioUnitInitialize
 [%s] %s:%d voiceLimiterUnit=%p status=%{BOOL}d
 [%s] %s:%d Stopping audioLimiter=%p
 [%s] %s:%d Stopped audioLimiter=%p
 [%s] %s:%d Error AudioUnitProcess voiceLimiterUnit %d
 [%s] %s:%d Failed to allocate multiway audio stream set
 [%s] %s:%d Failed to allocate multiway video stream set
 [%s] %s:%d Failed to allocate bandwidth configuration set
 [%s] %s:%d Failed to allocate pixel format set
 [%s] %s:%d Failed to allocate for hdr modes supported
 [%s] %s:%d Failed to allocate the stream group config array
 [%s] %s:%d Failed to allocate bandwidth configuration for mode:%d connectionType:%d
 [%s] %s:%d Failed to allocate default bandwidth configuration for connectionType:%d
 [%s] %s:%d Failed to allocate bandwidth extension configuration
 [%s] %s:%d Failed to allocate payload set
 [%s] %s:%d Payload cound is not identical
 [%s] %s:%d Missing payload: %d
 [%s] %s:%d Feature string not found for payload: %d
 [%s] %s:%d Compare feature string not found for payload: %d
 [%s] %s:%d Feature strings not identical for payload: %d
VCRC [%s] %s:%d VCRateControlMediaController init
VCRC [%s] %s:%d [%p] config for key=%s serverBagContainsGroup=%d _enableAggressiveProbingSequence=%d _minProbingSpacingAggressive=%f
VCRC [%s] %s:%d MediaQueue and VCMediaQueue passed are nil for VCRC MediaController=%p
VCRC [%s] %s:%d wrong type of statistics message is processed by media controller
VCRC [%s] %s:%d Baseband queue HWM is hit, [mediaSuggestion:%s%s%s]
VCRC [%s] %s:%d Baseband queue LWM is hit
VCRC [%s] %s:%d Baseband queue LWM is hit, [resume video]
VCRC [%s] %s:%d Video %s by user [rate:%u, videoStopped:%d]
VCRC [%s] %s:%d Suggest to stop video from rate controller due to congestion [pause:%d,stopByBB:%d,stopByRC:%d]
VCRC [%s] %s:%d Suggest to resume video from rate controller due to no congestion [pause:%d,stopByBB:%d,stopByRC:%d]
VCRC [%s] %s:%d Stop resuming video since user already pause the video
VCRC [%s] %s:%d Negative flush count: %d. Bad flush count maintainance!
VCRC [%s] %s:%d Audio sending bitrate %u is set much higher than the target bitrate %u
VCRC [%s] %s:%d A fake large frame is %s required [time:%.2f, expected:%.2f, actual:%.2f, timeDiffExpect:%.2f, timeDiffActual:%.2f]
VCRC [%s] %s:%d Audio sending bitrate used up all available uplink bandwidth, do minimum probing by setting large frame size cap to 0
 [%s] %s:%d Current emulated network delay: [%d, %d, %d]
 [%s] %s:%d Set link flags='%08x'
 [%s] %s:%d Set remote link flags='%08x'
 [%s] %s:%d HandoverReport: connections %@, and %@ are identical for primary, choosing %s
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Dialog.c:%d: Invalid Request message(%p)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Dialog.c:%d: calloc(%d) failed
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Dialog.c:%d: MQCreateHandle failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Dialog.c:%d: CreateHandle failed
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Dialog.c:%d: Invalid Response message(%p,%d,%d)
SIP [%s] %s:%d MatchSipMsgAndLock: got a closing handle.
SIP [%s] %s:%d Dialog(CREATED) Match(STATUS) [%s]=[%s], [%s]=[%s]
SIP [%s] %s:%d Dialog(CREATED) Match(REQUEST) [%s]=[%s], [%s]=[%s]
SIP [%s] %s:%d Dialog Match(STATUS): [%s]=[%s], [%s]=[%s], [%s]=[%s]
SIP [%s] %s:%d Dialog Match(REQUEST): [%s]=[%s], [%s]=[%s], [%s]=[%s]
 [%s] %s:%d Local screen rule collection initialization failed
 [%s] %s:%d Screen features not successfully generated
 [%s] %s:%d Initialize stream group U1 config for groupID=%s
 [%s] %s:%d One to one config not supported for groupID=%s
 [%s] %s:%d Failed to init U1 config for groupID=%s
 [%s] %s:%d Failed to initialize negotiated audio settings
 [%s] %s:%d Stream group has no remote U1 config for system audio. Check for standalone system audio support.
 [%s] %s:%d Failed to negotiate microphone settings as either local u1Config isNil=%{BOOL}d or remote u1Config isNil=%{BOOL}d
 [%s] %s:%d Failed to initialize negotiated video settings
 [%s] %s:%d Failed to negotiate video settings as either local u1Config isNil=%@ or remote u1Config isNil=%@
 [%s] %s:%d Failed to initialize negotiated screen settings
 [%s] %s:%d Failed to negotiate screen settings as either local u1Config isNil=%@ or remote u1Config isNil=%@
 [%s] %s:%d Failed to decode update number
 [%s] %s:%d Failed to decode is local
 [%s] %s:%d Failed to decode segment text
 [%s] %s:%d Failed to compute a valid capture framerate
 [%s] %s:%d Computed base period: %d frames
 [%s] %s:%d Computed capture frame rate is not a valid _captureFramerate=%d
 [%s] %s:%d Configured max capture frame _captureFramerate=%d is incompatible with streamInfo.framerate=%d
 [%s] %s:%d Computed capture frame rate: %d
 [%s] %s:%d Computed group list: %@
 [%s] %s:%d Computed scheduler item list: %@
 [%s] %s:%d Total budget: time:%dms weight:%d frames:%d
 [%s] %s:%d Bugdet computed for item: %@
 [%s] %s:%d Position next item (start position=%d leftDist=%d rightDist=%d): %@
 [%s] %s:%d Left item: %@
 [%s] %s:%d Right item: %@
 [%s] %s:%d Remaining items: %@
 [%s] %s:%d Place item in the right bucket (position=%d leftDist=%d rightDist=%d): %@ 
 [%s] %s:%d Place item in the left bucket (position=%d leftDist=%d rightDist=%d): %@ 
 [%s] %s:%d Placing first item: %@
 [%s] %s:%d HandoverReport: DID nominate connection %s as %s %s connection. Demote current: %d, replace current: %d
 [%s] %s:%d HandoverReport: DID NOT nominate connection %s
 [%s] %s:%d HandoverReport: Finished nominating a candidate pair. Primary %s; Secondary: %s; Pending primary: %s; Pending secondary %s
 [%s] %s:%d HandoverReport: %s received a nil VCConnection!
 [%s] %s:%d HandoverReport: set a PRIMARY connection %s
 [%s] %s:%d HandoverReport: new connection %s is not the pending primary %s
 [%s] %s:%d HandoverReport: Secondary nomination response comes back first. Use connection %s as a temporary primary
 [%s] %s:%d HandoverReport: set a SECONDARY connection %s
 [%s] %s:%d HandoverReport: new connection %s is not the pending secondary %s
 [%s] %s:%d HandoverReport: Add result %s %s connection %s. Primary %s; Secondary: %s; Pending primary: %s; Pending secondary: %s
 [%s] %s:%d HandoverReport: removed SECONDARY connection %s due to %s IPPort %s change
 [%s] %s:%d HandoverReport: removed PRIMARY connection %s due to %s IPPort %s change
 [%s] %s:%d HandoverReport: replace primary connection %s with new primary %s due to removed IPPort %s
 [%s] %s:%d HandoverReport: no available connection after interface change
 [%s] %s:%d reportConnection: reportingAgent is nil, can not report connections
 [%s] %s:%d reportConnection: %s
 [%s] %s:%d invalid parameters
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/MsgQue.c:%d: calloc(%d) failed
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/MsgQue.c:%d: CreateHandle failed
SIP [%s] %s:%d Message Queue is full
SIP [%s] %s:%d MQIgnore: out of memory
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/MsgQue.c:%d: ppSipMsg is NULL
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/MsgQue.c:%d: Message Queue Closed during MQGet
SIP [%s] %s:%d Trying to remove an invalid element from a message queue. pMsgQue=%p iAvail=%d nth=%d
VCRC [%s] %s:%d Configuring VCRateControl algorithm with targetBitrate=%d, minBitrate=%d, maxBitrate=%d
VCRC [%s] %s:%d Duplicated feedback or out-of-order feedback messages! timestamp:0x%04X
VCRC [%s] %s:%d VCRateControl is paused
VCRC [%s] %s:%d Wrong statistics type %d
VCRC [%s] %s:%d %8.3f/%04X:
%.4f
%.4f
%.4f
%.4f %c
RTT:%-4u
PLR:%4.2f@%.1f
RRx:%4u
MBL:%d
%4u/%4u
  CS:%04X %04X %u BB: %3u
 UAT %s %s
 [%s] %s:%d %p, Releasing _bufferPool to create a new one
 [%s] %s:%d Frame Transform, %p, create %ux%u _bufferPool
 [%s] %s:%d %p, CVPixelBufferPoolCreate failed
 [%s] %s:%d depthPixelBuffer=%@
 [%s] %s:%d pixelBuffer=%@
 [%s] %s:%d HandoverReport: updateConnectionForDuplication isLocalPreferWiFi %d isRemotePreferWiFi: %d duplicationEnhancementEnabled: %d duplicationReason: %d useLinkPriorityForSelection: %d secondary connection %s
 [%s] %s:%d HandoverReport: Duplication active due to missing packets - updateConnectionForDuplication forces to use secondary connection %s
 [%s] %s:%d HandoverReport: Duplication active due to missing packets - updateConnectionForDuplication forces to use secondary connection interface preferences - isLocalPreferWiFi(updated): %d isRemotePreferWiFi(updated): %d
 [%s] %s:%d HandoverReport: updateConnectionForDuplication check connection %s
 [%s] %s:%d HandoverReport: updateConnectionForDuplication picks connection %s
 [%s] %s:%d HandoverReport: updateConnectionForDuplication picks connection %s selectedConnectionPriority: %d
 [%s] %s:%d HandoverReport: Get the same connection for multiway. Keep using the old connection
 [%s] %s:%d HandoverReport: a new connection is added with the same interface combo as the primary connection. Prevent selecting it as secondary connection.
 [%s] %s:%d ConnectionSelectionPolicy updated: preferRelayOverP2P[%d] preferIPv6OverIPv4[%d] preferNonVPN[%d] e2eCriteriaEnabled[%d] preferE2E[%d]
 [%s] %s:%d HandoverReport: Updated primary connection to: %s for group: %d
 [%s] %s:%d HandoverReport: Updated secondary connection to: %s for group: %d
 [%s] %s:%d Created VCControlChannelDialog object with remoteParticipantID='%@'
 [%s] %s:%d %@(%p) Created VCControlChannelDialog object with remoteParticipantID='%@'
 [%s] %s:%d Dealloc VCControlChannelDialog object with remoteParticipantID='%@'
 [%s] %s:%d %@(%p) Dealloc VCControlChannelDialog object with remoteParticipantID='%@'
 [%s] %s:%d removeTransactionForTransactionID: transactionID='%d' removed from list of transactions
 [%s] %s:%d %@(%p) removeTransactionForTransactionID: transactionID='%d' removed from list of transactions
 [%s] %s:%d Participant '%@' removed from the session '%d'. Cancelling handshake...
 [%s] %s:%d %@(%p) Participant '%@' removed from the session '%d'. Cancelling handshake...
 [%s] %s:%d Dialog was flushed. Cancelling handshake...
 [%s] %s:%d %@(%p) Dialog was flushed. Cancelling handshake...
 [%s] %s:%d Handshake acknowledged from '%@'
 [%s] %s:%d %@(%p) Handshake acknowledged from '%@'
 [%s] %s:%d sendAllCachedMessagesAndDisableHandshakeWhenDone: Handshake turned off for _sessionID='%d', _participantID='%@'
 [%s] %s:%d %@(%p) sendAllCachedMessagesAndDisableHandshakeWhenDone: Handshake turned off for _sessionID='%d', _participantID='%@'
 [%s] %s:%d sendAllCachedMessagesAndDisableHandshakeWhenDone: Sent cached message for _sessionID='%d', _participantID='%@', topic='%@', reliable message='%@' 
 [%s] %s:%d %@(%p) sendAllCachedMessagesAndDisableHandshakeWhenDone: Sent cached message for _sessionID='%d', _participantID='%@', topic='%@', reliable message='%@' 
 [%s] %s:%d Started handshake for session '%d' with participant '%@' using topic '%@', message '%@'
 [%s] %s:%d %@(%p) Started handshake for session '%d' with participant '%@' using topic '%@', message '%@'
 [%s] %s:%d cacheOutgoingMessage: Cached a new message for sessionID='%d', _participantID='%@', topic='%@', reliable message='%@' 
 [%s] %s:%d %@(%p) cacheOutgoingMessage: Cached a new message for sessionID='%d', _participantID='%@', topic='%@', reliable message='%@' 
 [%s] %s:%d topic must not be nil
 [%s] %s:%d %@(%p) topic must not be nil
 [%s] %s:%d message must not be nil
 [%s] %s:%d %@(%p) message must not be nil
 [%s] %s:%d messageData should not be nil
 [%s] %s:%d %@(%p) messageData should not be nil
 [%s] %s:%d sendReliableMessageInternal: attempt to send duplicate transaction detected for _sessionID='%d', _participantID='%@', transactionID='%llu'. Aborted send...
 [%s] %s:%d %@(%p) sendReliableMessageInternal: attempt to send duplicate transaction detected for _sessionID='%d', _participantID='%@', transactionID='%llu'. Aborted send...
 [%s] %s:%d sendReliableMessageInternal: creating a new transaction for _sessionID='%d', _participantID='%@', transactionID='%llu', data='%@'
 [%s] %s:%d %@(%p) sendReliableMessageInternal: creating a new transaction for _sessionID='%d', _participantID='%@', transactionID='%llu', data='%@'
 [%s] %s:%d failed to create transaction
 [%s] %s:%d %@(%p) failed to create transaction
 [%s] %s:%d sendReliableMessageInternal: Remove transaction for _sessionID='%d', _participantID='%@', transactionID='%llu', data='%@'
 [%s] %s:%d %@(%p) sendReliableMessageInternal: Remove transaction for _sessionID='%d', _participantID='%@', transactionID='%llu', data='%@'
 [%s] %s:%d Dialog send unreliable message for sessionID='%d', participantID='%@', transactionID='%llu', message='%@'
 [%s] %s:%d %@(%p) Dialog send unreliable message for sessionID='%d', participantID='%@', transactionID='%llu', message='%@'
 [%s] %s:%d confirmTransaction: Found matching transaction for _sessionID='%d', participantID='%@', transactionID='%@'
 [%s] %s:%d %@(%p) confirmTransaction: Found matching transaction for _sessionID='%d', participantID='%@', transactionID='%@'
 [%s] %s:%d confirmTransaction: Could not find matching transaction for _sessionID='%d', participantID='%@', transactionID='%@'
 [%s] %s:%d %@(%p) confirmTransaction: Could not find matching transaction for _sessionID='%d', participantID='%@', transactionID='%@'
 [%s] %s:%d Media Blob (v2) - %s
 [%s] %s:%d changing _isSharingEnabled to %d
 [%s] %s:%d %@(%p) changing _isSharingEnabled to %d
 [%s] %s:%d _isSharingEnabled already set to %d
 [%s] %s:%d %@(%p) _isSharingEnabled already set to %d
 [%s] %s:%d sessionInitializeBlock allocated new VCSession[%p]
 [%s] %s:%d sessionTerminateBlock releasing old VCSession[%p]
 [%s] %s:%d adding new VCSessionParticipant(s) with config(s):%s to VCSession[%p]
 [%s] %s:%d changing VCSessionParticipant[%p] audioEnabled to %d
 [%s] %s:%d changing VCSessionParticipant[%p] videoEnabled to %d
 [%s] %s:%d changing VCSessionParticipant[%p] screenEnabled to %d
 [%s] %s:%d changing VCSessionParticipant=%p mediaType=%d to state=%d
 [%s] %s:%d participantUUID[%@] videoQuality[%d] visibilityIndex[%d] prominenceIndex[%d]
 [%s] %s:%d Failed to allocate the uplink bandwidth allocation table
 [%s] %s:%d Failed to allocate stream token to enable map
 [%s] %s:%d Last entry=%@ will use remaining available networkBitrate=%d mediaBitrate=%d
 [%s] %s:%d Failed to allocate the negotiator map
 [%s] %s:%d Failed to allocate the negotiator for version 1 of the media blob
 [%s] %s:%d Failed to allocate the negotiator for version 2 of the media blob
 [%s] %s:%d Active negotiator found, negotiation already performed. ActiveNegotiator=%@
 [%s] %s:%d Failed to extract the media blob from the negotiation data
 [%s] %s:%d No negotiator found for media blob version=%@
 [%s] %s:%d Failed to negotiate the media blob with version=%@
 [%s] %s:%d Unknown blob version=%d
 [%s] %s:%d Failed to unserialize the negotiation data
 [%s] %s:%d Failed to retrieve the negotiation data for version=%d
 [%s] %s:%d Failed to initialize the local configuration for version=%u
 [%s] %s:%d VCDatagramChannelIDSEmulated %p created
 [%s] %s:%d VCDatagramChannelIDSEmulated %p dealloc called: _idsChannel %p, _network %p
 [%s] %s:%d Not supported yet for mode %d
 [%s] %s:%d unknown mode %d
 [%s] %s:%d datagram size too large %d
 [%s] %s:%d Cannot create VCEmulatedPacket!
 [%s] %s:%d The datagramChannel is not started!
 [%s] %s:%d Failed to obtain emulated network
 [%s] %s:%d Failed to write to ids datagram channel with error %s
 [%s] %s:%d Invalid VCMediaControlInfoGeneratorType: %d
 [%s] %s:%d Failed to create _streamTokenEventQueue
 [%s] %s:%d streamToken=%@, powerSpectrumSource=%@
 [%s] %s:%d Failed to enqueue stream=%p streamToken=%@ powerSpectrumSource=%@ queue=%p status=%d
 [%s] %s:%d Failed to enqueue stream=%p streamToken=%@ queue=%p status=%d
 [%s] %s:%d Failed to enqueue stream=%p queue=%p status=%d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCAudioPowerSpectrumMeter.m:%d: streamToken %d is registered to source %p with spectrum %p
 [%s] %s:%d error VCAudioPowerSpectrum already exists for streamToken[%d]
 [%s] %s:%d VCAudioPowerSpectrumMeter=%p
 [%s] %s:%d Failed to allocate max bitrate map
 [%s] %s:%d %@(%p) Failed to allocate max bitrate map
 [%s] %s:%d Failed to allocate actual bitrate map
 [%s] %s:%d %@(%p) Failed to allocate actual bitrate map
 [%s] %s:%d Switching from stream %@ to new stream %@, with opted-in stream %@
 [%s] %s:%d %@(%p) Switching from stream %@ to new stream %@, with opted-in stream %@
 [%s] %s:%d stream=%p
 [%s] %s:%d %@(%p) stream=%p
 [%s] %s:%d stream:%p
 [%s] %s:%d %@(%p) stream:%p
 [%s] %s:%d Actual Network Bitrate optedInStreamID=%@ has been updated from %d bps, to %d bps
 [%s] %s:%d %@(%p) Actual Network Bitrate optedInStreamID=%@ has been updated from %d bps, to %d bps
 [%s] %s:%d WSOLA is enabled, Sample Rate = %d, Warp Frame Size = %d, Extended Buffer Size = %d
 [%s] %s:%d WSOLA initialization failed
 [%s] %s:%d PSOLA is enabled, Sample Rate = %d, 
 [%s] %s:%d registered source[streamToken=%ld]
 [%s] %s:%d source[streamToken=%ld] already registered
 [%s] %s:%d unregistered source[streamToken=%ld]
 [%s] %s:%d source[streamToken=%ld] already unregistered
 [%s] %s:%d updateQoSReport qosReport=%@
 [%s] %s:%d source for streamToken=%ld not registered
 [%s] %s:%d VCRemoteVideoManager: new client initialized for streamToken=%u
 [%s] %s:%d VCQoSMonitorManager: ERROR QoS source does not exist for streamToken=%u
 [%s] %s:%d VCQoSMonitorManager: Terminate remoteVideo connection for streamToken=%u
 [%s] %s:%d VCMomentsMessenger: Context already exists for stream token: %u
 [%s] %s:%d VCMomentsMessenger: Context doesn't exists for stream token: %u
 [%s] %s:%d VCMomentsManager: New moments client. Context=0x%p
 [%s] %s:%d VCMomentsManager: Unregister moments client. Context=0x%p
 [%s] %s:%d AVCMomentsManager: clientStartRequest %s
 [%s] %s:%d AVCMomentsManager: clientEndRequest %s
 [%s] %s:%d AVCMomentsManager: clientRejctRequest %s
 [%s] %s:%d notifyClientsWithStreamToken streamClientList is nil
 [%s] %s:%d Failed to issue stillImage sandbox extension for moments URL: %@
 [%s] %s:%d Failed to issue movie sandbox extension for moments URL: %@
 [%s] %s:%d Created for debugging: %@
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipParse.c:%d: calloc(%d) failed
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipParse.c:%d: No Topline found in the message[%s]
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipParse.c:%d: No SIP Version found in Status-Line[%s]
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipParse.c:%d: Invalid SIP version in Status-Line[%s]
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipParse.c:%d: No status code found in Status-Line[%s]
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipParse.c:%d: Invalid status code(%d[%s])
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipParse.c:%d: No Method found in Request-Line[%s]
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipParse.c:%d: Extension Method is not supported[%s]
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipParse.c:%d: No RequestURI found in Request-Line[%s]
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipParse.c:%d: ParseSipUri failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipParse.c:%d: Invalid SIP version in Request-Line[%s]
 [%s] %s:%d VCMomentsCollector: dealloc for streamToken=%u
 [%s] %s:%d HandoverReport: Defaults settings force local iRATSuggestion to be %d
 [%s] %s:%d HandoverReport: dupe state: %d and enableDuplication %d.
 [%s] %s:%d HandoverReport: actively request for the latest iRAT recommendation from WRM.
 [%s] %s:%d HandoverReport: Receive and cache local iRAT suggestion to %s.
 [%s] %s:%d HandoverReport: Receive and cache remote iRAT suggestion to %s %s duplication
 [%s] %s:%d policy = %d out of valid range
 [%s] %s:%d Invalid clientID clientID=%d currentClientID=%d
 [%s] %s:%d NULL config
 [%s] %s:%d targetSynchronizer[%p] config.policy=%d dumpNamePrefix=%s
 [%s] %s:%d Previously registered client for streamGroupID=%s with currentClientID=%d
 [%s] %s:%d targetSynchronizer[%p] currentClientID=%d streamGroupID=%s
 [%s] %s:%d Succesfully registered Client ID currentClientID=%d streamGroupID=%s
 [%s] %s:%d Error in storing current size
 [%s] %s:%d Error while applying policy
 [%s] %s:%d targetSynchronizer[%p] clientID=%d currentTargetSize=%4.4f arrivalTime=%4.4f syncTargetSize=%4.4f
 [%s] %s:%d targetSynchronizer[%p] dumpNamePrefix=%s
 [%s] %s:%d Invalid Policy policy=%d
 [%s] %s:%d Ignoring old jitter values i=%d timeDiff=%4.2f
 [%s] %s:%d synchronizer[%p] _logDump=%p dumpIDString=%s
 [%s] %s:%d no config specified!
 [%s] %s:%d no delegate specified!
 [%s] %s:%d VCTransportStreamRunLoopVTPCreate failed %d
 [%s] %s:%d Network receive thread create failed (%d)
 [%s] %s:%d Out of order packets[%d,%d]
 [%s] %s:%d Sending RTCP PSFB FIR(%d)
 [%s] %s:%d Failed to read RTP packet
 [%s] %s:%d bCameraStatusBits = %x
 [%s] %s:%d Invalid header extension profile or CVO Extension ID
 [%s] %s:%d processVideoRTP called RTPRecvRTP packet (%d bytes)
 [%s] %s:%d Received payload of unknown type %d
 [%s] %s:%d Received zero length packet (seq:%d, ts:%d, payload:%d)
 [%s] %s:%d Could not get the local SSRC
 [%s] %s:%d %@(%p) Could not get the local SSRC
 [%s] %s:%d Received RTCP SR
 [%s] %s:%d VideoStreamReceiver (%p) updating MediaStreamSynchronizer (%p) with ntpTime=%.6f and rtpTimeStamp=%u
 [%s] %s:%d Received RTCP RR
 [%s] %s:%d Received RTCP SDES
 [%s] %s:%d Received RTCP PSFB:%d
 [%s] %s:%d currentTime=%.3f, lastFIRArrivalTime=%.3f, dRTT=%.3f
 [%s] %s:%d Ignoring too many FIR
 [%s] %s:%d Received TMMBR:%d, mantissa:%d, exponent:%d, overhead:%d adjusted TMMBN bitrate:%d
 [%s] %s:%d Received TMMBN:%d, mantissa:%d, exponent:%d, overhead:%d
 [%s] %s:%d Received unknown RTCP RTPFB:%d
 [%s] %s:%d Received RTCP FIR RFC 2032
 [%s] %s:%d Received RTCP NACK RFC 2032
 [%s] %s:%d Received RTCP APP
 [%s] %s:%d Received unknown RTCP packet type:%d
 [%s] %s:%d Failed to read format from sampleBuffer
 [%s] %s:%d CMSampleBufferCreate failed
 [%s] %s:%d CMBufferQueueEnqueue failed %d
 [%s] %s:%d Resetting VTDecompressionSession due to format change
 [%s] %s:%d timestamp:%08X count:%ld
 [%s] %s:%d CMSampleBufferGetDecodeTimeStamp is invalid timestamp:%u
 [%s] %s:%d CMBufferQueueDequeueAndRetain returned null!
 [%s] %s:%d CMSampleBufferCreateCopyWithNewTiming failed %d
 [%s] %s:%d @=@ Health: VideoStreamReceiver videoRxFrameRate=%f, videoRxBitrate=%d kbps
 [%s] %s:%d Rx RTCReporting:%s
 [%s] %s:%d Handling active connection change is not implemented for VCVSR
 [%s] %s:%d CMVideoFormatDescriptionCreateFromH264ParameterSets failed (%d)
 [%s] %s:%d frame decode error %d
VCSessionParticipantRemote [%s] %s:%d Failed jitter target synchronizer  dictionary!
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed jitter target synchronizer  dictionary!
VCSessionParticipantRemote [%s] %s:%d Failed to allocate positional info!
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to allocate positional info!
VCSessionParticipantRemote [%s] %s:%d Failed to copy local configuration!
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to copy local configuration!
VCSessionParticipantRemote [%s] %s:%d Nil remote participant data!
VCSessionParticipantRemote [%s] %s:%d %@(%p) Nil remote participant data!
VCSessionParticipantRemote [%s] %s:%d Failed to deserialize remote participant data!
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to deserialize remote participant data!
VCSessionParticipantRemote [%s] %s:%d Failed to process participant info!
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to process participant info!
VCSessionParticipantRemote [%s] %s:%d Failed to setup spatial audio! result=%08x
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to setup spatial audio! result=%08x
VCSessionParticipantRemote [%s] %s:%d Failed to setup stream groups
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to setup stream groups
VCSessionParticipantRemote [%s] %s:%d _isRedundancyRequested set to YES by forceFECRepairStream
VCSessionParticipantRemote [%s] %s:%d %@(%p) _isRedundancyRequested set to YES by forceFECRepairStream
VCSessionParticipantRemote [%s] %s:%d Participant init %@
VCSessionParticipantRemote [%s] %s:%d %@(%p) Participant init %@
VCSessionParticipantRemote [%s] %s:%d remoteParticipantType=%@
VCSessionParticipantRemote [%s] %s:%d %@(%p) remoteParticipantType=%@
VCSessionParticipantRemote [%s] %s:%d Failed to allocate channel index map
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to allocate channel index map
VCSessionParticipantRemote [%s] %s:%d spatialMetadata is NULL
VCSessionParticipantRemote [%s] %s:%d %@(%p) spatialMetadata is NULL
VCSessionParticipantRemote [%s] %s:%d Failed to allocate spatial metadata entry. status=%08x
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to allocate spatial metadata entry. status=%08x
VCSessionParticipantRemote [%s] %s:%d Failed to retrieve the channel index. status=%08x
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to retrieve the channel index. status=%08x
VCSessionParticipantRemote [%s] %s:%d created entry=%p with channelIndex=%u
VCSessionParticipantRemote [%s] %s:%d %@(%p) created entry=%p with channelIndex=%u
VCSessionParticipantRemote [%s] %s:%d Failed to store metadata entry for VCSessionMediaTypeMicrophone. status=%08x
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to store metadata entry for VCSessionMediaTypeMicrophone. status=%08x
VCSessionParticipantRemote [%s] %s:%d Failed to allocate media type key
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to allocate media type key
VCSessionParticipantRemote [%s] %s:%d Failed to get spatial audio source IDs
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to get spatial audio source IDs
VCSessionParticipantRemote [%s] %s:%d setAudioPaused=%d
VCSessionParticipantRemote [%s] %s:%d %@(%p) setAudioPaused=%d
VCSessionParticipantRemote [%s] %s:%d setRemoteAudioPaused=%d
VCSessionParticipantRemote [%s] %s:%d %@(%p) setRemoteAudioPaused=%d
VCSessionParticipantRemote [%s] %s:%d Ignoring setRemoteAudioPaused=%d
VCSessionParticipantRemote [%s] %s:%d %@(%p) Ignoring setRemoteAudioPaused=%d
VCSessionParticipantRemote [%s] %s:%d setRemoteAudioEnabled=%d
VCSessionParticipantRemote [%s] %s:%d %@(%p) setRemoteAudioEnabled=%d
VCSessionParticipantRemote [%s] %s:%d Ignoring setRemoteAudioEnabled:%d
VCSessionParticipantRemote [%s] %s:%d %@(%p) Ignoring setRemoteAudioEnabled:%d
VCSessionParticipantRemote [%s] %s:%d setRemoteVideoEnabled:%d
VCSessionParticipantRemote [%s] %s:%d %@(%p) setRemoteVideoEnabled:%d
VCSessionParticipantRemote [%s] %s:%d Ignoring setRemoteVideoEnabled:%d
VCSessionParticipantRemote [%s] %s:%d %@(%p) Ignoring setRemoteVideoEnabled:%d
VCSessionParticipantRemote [%s] %s:%d setRemoteScreenEnabled:%d
VCSessionParticipantRemote [%s] %s:%d %@(%p) setRemoteScreenEnabled:%d
VCSessionParticipantRemote [%s] %s:%d Screen state=%d changed, remoteSystemAudioPaused:%d
VCSessionParticipantRemote [%s] %s:%d %@(%p) Screen state=%d changed, remoteSystemAudioPaused:%d
VCSessionParticipantRemote [%s] %s:%d Ignoring setRemoteScreenEnabled:%d
VCSessionParticipantRemote [%s] %s:%d %@(%p) Ignoring setRemoteScreenEnabled:%d
VCSessionParticipantRemote [%s] %s:%d setRemoteSystemAudioPaused:%d
VCSessionParticipantRemote [%s] %s:%d %@(%p) setRemoteSystemAudioPaused:%d
VCSessionParticipantRemote [%s] %s:%d Ignoring setRemoteSystemAudioPaused:%d
VCSessionParticipantRemote [%s] %s:%d %@(%p) Ignoring setRemoteSystemAudioPaused:%d
VCSessionParticipantRemote [%s] %s:%d Failed to update mediaState=enabled for mediaType=%@
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to update mediaState=enabled for mediaType=%@
VCSessionParticipantRemote [%s] %s:%d Screen pause state is not supported
VCSessionParticipantRemote [%s] %s:%d Failed to update mediaState=paused for mediaType=%@
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to update mediaState=paused for mediaType=%@
VCSessionParticipantRemote [%s] %s:%d Failed to update mediaState=disabled for mediaType=%@
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to update mediaState=disabled for mediaType=%@
VCSessionParticipantRemote [%s] %s:%d mediaType=%@ not supported. Ignore set remote mediaState=%@
VCSessionParticipantRemote [%s] %s:%d %@(%p) mediaType=%@ not supported. Ignore set remote mediaState=%@
VCSessionParticipantRemote [%s] %s:%d Setting remote mediaState=%@ for mediaType=%@ _remoteMediaStates=%@
VCSessionParticipantRemote [%s] %s:%d %@(%p) Setting remote mediaState=%@ for mediaType=%@ _remoteMediaStates=%@
VCSessionParticipantRemote [%s] %s:%d Ignoring setRemoteState=%@ forMediaType=%@
VCSessionParticipantRemote [%s] %s:%d %@(%p) Ignoring setRemoteState=%@ forMediaType=%@
VCSessionParticipantRemote [%s] %s:%d setRemoteVideoPaused=%d
VCSessionParticipantRemote [%s] %s:%d %@(%p) setRemoteVideoPaused=%d
VCSessionParticipantRemote [%s] %s:%d Ignoring setRemoteVideoPaused=%d
VCSessionParticipantRemote [%s] %s:%d %@(%p) Ignoring setRemoteVideoPaused=%d
VCSessionParticipantRemote [%s] %s:%d Changing participant videoEnabled to %d
VCSessionParticipantRemote [%s] %s:%d %@(%p) Changing participant videoEnabled to %d
VCSessionParticipantRemote [%s] %s:%d Failed to update stream group with videoEnabled=%d
VCSessionParticipantRemote [%s] %s:%d [AVC SPATIAL AUDIO] Positional info not available: positionalInfo=%p _positionalInfo=%p
VCSessionParticipantRemote [%s] %s:%d Missing participant UUID
VCSessionParticipantRemote [%s] %s:%d %@(%p) Missing participant UUID
VCSessionParticipantRemote [%s] %s:%d Missing callInfo blob
VCSessionParticipantRemote [%s] %s:%d %@(%p) Missing callInfo blob
VCSessionParticipantRemote [%s] %s:%d Failed to retrieve the negotiation data
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to retrieve the negotiation data
VCSessionParticipantRemote [%s] %s:%d Media negotiation failed
VCSessionParticipantRemote [%s] %s:%d %@(%p) Media negotiation failed
VCSessionParticipantRemote [%s] %s:%d Failed to allocate callInfo blob
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to allocate callInfo blob
@:@ VCSessionParticipantRemote-info
VCSessionParticipantRemote [%s] %s:%d @:@ VCSessionParticipantRemote-info (%p) uuid=%@, %@
VCSessionParticipantRemote [%s] %s:%d Failed to get substring
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to get substring
VCSessionParticipantRemote [%s] %s:%d Failed to allocate formatter
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to allocate formatter
VCSessionParticipantRemote [%s] %s:%d Failed to get number from string
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to get number from string
VCSessionParticipantRemote [%s] %s:%d supportsNonZeroRegionOfInterestOrigin=%d remoteFrameworkVersion=%s
VCSessionParticipantRemote [%s] %s:%d %@(%p) supportsNonZeroRegionOfInterestOrigin=%d remoteFrameworkVersion=%s
VCSessionParticipantRemote [%s] %s:%d Web participants do not support switching from GFT to OneToOne
VCSessionParticipantRemote [%s] %s:%d %@(%p) Web participants do not support switching from GFT to OneToOne
VCSessionParticipantRemote [%s] %s:%d supportsGFTSwitchToOneToOne:[%d] remoteFrameworkVersion:[%s] 
VCSessionParticipantRemote [%s] %s:%d %@(%p) supportsGFTSwitchToOneToOne:[%d] remoteFrameworkVersion:[%s] 
VCSessionParticipantRemote [%s] %s:%d isParticipantPeace:[%d] numMatchesVersion:[%lu]
VCSessionParticipantRemote [%s] %s:%d %@(%p) isParticipantPeace:[%d] numMatchesVersion:[%lu]
VCSessionParticipantRemote [%s] %s:%d codecIndex=%@ out of bounds, codecConfigCount=%d
VCSessionParticipantRemote [%s] %s:%d No codec configurations for stream configuration!
VCSessionParticipantRemote [%s] %s:%d StreamGroupID=%s Lowest qualityIndex=%d streamID=%d
VCSessionParticipantRemote [%s] %s:%d %@(%p) StreamGroupID=%s Lowest qualityIndex=%d streamID=%d
VCSessionParticipantRemote [%s] %s:%d Failed to allocate allocator entry!
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to allocate allocator entry!
VCSessionParticipantRemote [%s] %s:%d No media entry found for stream ID: %@
VCSessionParticipantRemote [%s] %s:%d %@(%p) No media entry found for stream ID: %@
VCSessionParticipantRemote [%s] %s:%d Adding currently optedInVideoStreamID:%@ to allow seamless video stream transition. Force=%d, Bitrate %d -> %d
VCSessionParticipantRemote [%s] %s:%d %@(%p) Adding currently optedInVideoStreamID:%@ to allow seamless video stream transition. Force=%d, Bitrate %d -> %d
VCSessionParticipantRemote [%s] %s:%d Stream group '%s' (%d) doesn't exist!
VCSessionParticipantRemote [%s] %s:%d %@
VCSessionParticipantRemote [%s] %s:%d %@(%p) %@
VCSessionParticipantRemote [%s] %s:%d No compatible stream configuration! localAudioRules=%@ supportedAudioRules=%@
VCSessionParticipantRemote [%s] %s:%d %@(%p) No compatible stream configuration! localAudioRules=%@ supportedAudioRules=%@
VCSessionParticipantRemote [%s] %s:%d Fail configure participant
VCSessionParticipantRemote [%s] %s:%d %@(%p) Fail configure participant
VCSessionParticipantRemote [%s] %s:%d stream=%p, videoStreamDelegate=%p
VCSessionParticipantRemote [%s] %s:%d %@(%p) stream=%p, videoStreamDelegate=%p
VCSessionParticipantRemote [%s] %s:%d New redundancy percentage %d
VCSessionParticipantRemote [%s] %s:%d %@(%p) New redundancy percentage %d
VCSessionParticipantRemote [%s] %s:%d Dismissing video redundancy
VCSessionParticipantRemote [%s] %s:%d %@(%p) Dismissing video redundancy
VCSessionParticipantRemote [%s] %s:%d Requesting video redundancy
VCSessionParticipantRemote [%s] %s:%d %@(%p) Requesting video redundancy
VCSessionParticipantRemote [%s] %s:%d Invalid NW activity label:%d
VCSessionParticipantRemote [%s] %s:%d %@(%p) Invalid NW activity label:%d
VCSessionParticipantRemote [%s] %s:%d Failed to create event nwActivity
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to create event nwActivity
VCSessionParticipantRemote [%s] %s:%d Ignoring setVideoDegraded=%d with same value
VCSessionParticipantRemote [%s] %s:%d %@(%p) Ignoring setVideoDegraded=%d with same value
VCSessionParticipantRemote [%s] %s:%d videoDegraded=%d
VCSessionParticipantRemote [%s] %s:%d %@(%p) videoDegraded=%d
VCSessionParticipantRemote [%s] %s:%d Ignoring setRemoteMediaStalled=%d with same value
VCSessionParticipantRemote [%s] %s:%d %@(%p) Ignoring setRemoteMediaStalled=%d with same value
VCSessionParticipantRemote [%s] %s:%d useForcedNetworkBitrate=%d videoQuality=%d isRedundancyRequested=%d isLocalOnWiFi=%d isDeviceLargeScreen=%d isSharingEnabled=%d, shouldLimitCameraQualityForSharing=%d, maxNetworkBitrate=%d
VCSessionParticipantRemote [%s] %s:%d %@(%p) useForcedNetworkBitrate=%d videoQuality=%d isRedundancyRequested=%d isLocalOnWiFi=%d isDeviceLargeScreen=%d isSharingEnabled=%d, shouldLimitCameraQualityForSharing=%d, maxNetworkBitrate=%d
VCSessionParticipantRemote [%s] %s:%d cappedVideoQuality=%d self.videoQuality=%d
VCSessionParticipantRemote [%s] %s:%d %@(%p) cappedVideoQuality=%d self.videoQuality=%d
VCSessionParticipantRemote [%s] %s:%d _sharingEnabled=%d, self.isLocalOnWiFi=%d, shouldUseWifiQuality=%d, shouldLimitCameraQualityForPIP=%d
VCSessionParticipantRemote [%s] %s:%d appendStreamGroupsMediaEntries, count of streamGroups are cameraStreamGroupCount=%d, micrStreamGroupCount=%d, screenStreamGroupCount=%d, systemAudioStreamGroupCount=%d, captionsStreamGroupCount=%d 
VCSessionParticipantRemote [%s] %s:%d %@(%p) appendStreamGroupsMediaEntries, count of streamGroups are cameraStreamGroupCount=%d, micrStreamGroupCount=%d, screenStreamGroupCount=%d, systemAudioStreamGroupCount=%d, captionsStreamGroupCount=%d 
VCSessionParticipantRemote [%s] %s:%d No audio entry was added. addedMediaEntries=%@ micEntries=%@ micwEntries=%@
VCSessionParticipantRemote [%s] %s:%d %@(%p) No audio entry was added. addedMediaEntries=%@ micEntries=%@ micwEntries=%@
VCSessionParticipantRemote [%s] %s:%d mediaEntries %@: %@
VCSessionParticipantRemote [%s] %s:%d %@(%p) mediaEntries %@: %@
VCSessionParticipantRemote [%s] %s:%d videoEnabled:%d remoteVideoEnabled:%d videoPaused:%d remoteVideoPaused:%d isVisible:%d
VCSessionParticipantRemote [%s] %s:%d %@(%p) videoEnabled:%d remoteVideoEnabled:%d videoPaused:%d remoteVideoPaused:%d isVisible:%d
VCSessionParticipantRemote [%s] %s:%d Unable to allocate multiway config
VCSessionParticipantRemote [%s] %s:%d Failed to create featureStringsDict
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to create featureStringsDict
VCSessionParticipantRemote [%s] %s:%d setupStreamConfigWithCodecs failed
VCSessionParticipantRemote [%s] %s:%d %@(%p) setupStreamConfigWithCodecs failed
VCSessionParticipantRemote [%s] %s:%d Failed to setup the audio stream config
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to setup the audio stream config
VCSessionParticipantRemote [%s] %s:%d Failed to allocate stream configuration!
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to allocate stream configuration!
VCSessionParticipantRemote [%s] %s:%d Failed to setup the video stream config
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to setup the video stream config
VCSessionParticipantRemote [%s] %s:%d cipher suite setup failed
VCSessionParticipantRemote [%s] %s:%d Stream setup failed
VCSessionParticipantRemote [%s] %s:%d Could not retrieve a valid profileLevel string from profileLevelId=%lu with codecIndex=%@ codecConfigCount=%d
VCSessionParticipantRemote [%s] %s:%d Unable to allocate rate control config
VCSessionParticipantRemote [%s] %s:%d Failed to create media stream info
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to create media stream info
VCSessionParticipantRemote [%s] %s:%d Failed to create media stream config
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to create media stream config
VCSessionParticipantRemote [%s] %s:%d Failed to add one to one groupID=%s stream configuration to media stream info
VCSessionParticipantRemote [%s] %s:%d Failed to create media stream
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to create media stream
VCSessionParticipantRemote [%s] %s:%d invalid capabilies dictionary for media stream!
VCSessionParticipantRemote [%s] %s:%d %@(%p) invalid capabilies dictionary for media stream!
VCSessionParticipantRemote [%s] %s:%d Failed to retrieve channel index for mediaType=%d. status=%08x
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to retrieve channel index for mediaType=%d. status=%08x
VCSessionParticipantRemote [%s] %s:%d Failed to retrieve spatial audio source ID for mediaType=%d. status=%08x
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to retrieve spatial audio source ID for mediaType=%d. status=%08x
VCSessionParticipantRemote [%s] %s:%d Unexpected number of media types. Count=%lu. status=%08x
VCSessionParticipantRemote [%s] %s:%d %@(%p) Unexpected number of media types. Count=%lu. status=%08x
VCSessionParticipantRemote [%s] %s:%d Failed to retrieve spatial information for mediaType=%d. status=%08x
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to retrieve spatial information for mediaType=%d. status=%08x
VCSessionParticipantRemote [%s] %s:%d Failed to create stream group config
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to create stream group config
VCSessionParticipantRemote [%s] %s:%d Failed configure stream group config spatial info. status=%08x
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed configure stream group config spatial info. status=%08x
VCSessionParticipantRemote [%s] %s:%d Add one to one stream config to media stream info for groupID=%s
VCSessionParticipantRemote [%s] %s:%d No one to one streams to setup oneToOneModeSupported=%d
VCSessionParticipantRemote [%s] %s:%d One to one video streams not supported for groupID=%s
VCSessionParticipantRemote [%s] %s:%d One to one audio streams not supported for groupID=%s
VCSessionParticipantRemote [%s] %s:%d Added one to one stream config to %s streamGroup
VCSessionParticipantRemote [%s] %s:%d One to one groupID=%s stream configuration not available
VCSessionParticipantRemote [%s] %s:%d Failed to create receive media group
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to create receive media group
VCSessionParticipantRemote [%s] %s:%d Failed to setup bandwidth allocation table for video!
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to setup bandwidth allocation table for video!
VCSessionParticipantRemote [%s] %s:%d Failed to create video receive stream group
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to create video receive stream group
VCSessionParticipantRemote [%s] %s:%d Skipping streamGroupID=%s
VCSessionParticipantRemote [%s] %s:%d Failed to create Jitter Buffer Target Synchronizer remoteParticipant=%p
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to create Jitter Buffer Target Synchronizer remoteParticipant=%p
VCSessionParticipantRemote [%s] %s:%d New Target Synchronizer syncGroupID=%@ jbTargetEstimatorSynchronizer=%p
VCSessionParticipantRemote [%s] %s:%d %@(%p) New Target Synchronizer syncGroupID=%@ jbTargetEstimatorSynchronizer=%p
VCSessionParticipantRemote [%s] %s:%d There are no negotiated stream groups
VCSessionParticipantRemote [%s] %s:%d Siri config was negotiated, but device does not support playout
VCSessionParticipantRemote [%s] %s:%d Failed to setup stream group=%s
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to setup stream group=%s
VCSessionParticipantRemote [%s] %s:%d FaceZoom is disabled.
VCSessionParticipantRemote [%s] %s:%d %@(%p) FaceZoom is disabled.
VCSessionParticipantRemote [%s] %s:%d ML Enhance is disabled.
VCSessionParticipantRemote [%s] %s:%d %@(%p) ML Enhance is disabled.
VCSessionParticipantRemote [%s] %s:%d Start stream group state update timer
VCSessionParticipantRemote [%s] %s:%d %@(%p) Start stream group state update timer
VCSessionParticipantRemote [%s] %s:%d Failed to allocate fetch timer dispatch source!
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to allocate fetch timer dispatch source!
VCSessionParticipantRemote [%s] %s:%d Fetching stream group state update
VCSessionParticipantRemote [%s] %s:%d %@(%p) Fetching stream group state update
VCSessionParticipantRemote [%s] %s:%d Cancel stream group state update timer
VCSessionParticipantRemote [%s] %s:%d %@(%p) Cancel stream group state update timer
VCSessionParticipantRemote [%s] %s:%d We are experiencing a video stall too soon after we switch video on. Ignoring... currentTime=%f lastVideoExpectationSwitch=%f diff=%f
VCSessionParticipantRemote [%s] %s:%d dictionary is NULL
VCSessionParticipantRemote [%s] %s:%d mediaType is NULL
VCSessionParticipantRemote [%s] %s:%d metadataEntry is NULL
VCSessionParticipantRemote [%s] %s:%d Failed to retrieve spatial audio source ID. status=%08x
VCSessionParticipantRemote [%s] %s:%d Failed to retrieve the media type
 [%s] %s:%d useIDSLinkSuggestionFeatureFlag=%d
 [%s] %s:%d IDS eventHandler called without event type
 [%s] %s:%d Forcing link suggestion using defaults. IDSLinkSuggestionKey=%d IDSLinkScoreKey=%d IDSLinkIPPreferenceKey=%d
 [%s] %s:%d %s, IDSDataChannelEventUsageError
 [%s] %s:%d Received unknown IDSDatagramChannelEvent %d
 [%s] %s:%d Remote device framework version IDS selected '%d'
 [%s] %s:%d Remote device framework version IDS is unknown
 [%s] %s:%d IDS destination not set
 [%s] %s:%d DatagramChannel start failed with error %x
 [%s] %s:%d onStart failed with error %x
 [%s] %s:%d Start MKM recovery for pariticipantIDs %@
 [%s] %s:%d Caching piggyback blob %p
 [%s] %s:%d Set piggyback blob %p on datagram channel %d
 [%s] %s:%d HandoverReport: default link updated to %d
 [%s] %s:%d Got 5G iRAT notification
 [%s] %s:%d [(VCTransportSession*)%p %s]:%d IDS channel encryption info
 [%s] %s:%d [(VCTransportSession*)%p %s]:%d IDS channel membership change info
 [%s] %s:%d Callee's accept delay %d milliseconds
 [%s] %s:%d IDS reporting blob must be a dictionary
 [%s] %s:%d Received IDS reportingBlob=%@
 [%s] %s:%d VCTransportSessionIDS: failed to send data with error=%@
 [%s] %s:%d connectionManager should not be nil
 [%s] %s:%d Finished sending %zd bytes with error=%@
 [%s] %s:%d Setting syncSourceDelegate (%p) for VideoReceiver (%p) for syncSource (%p)
 [%s] %s:%d media stream is nil
 [%s] %s:%d Failed to create the stream array for streamToken=%u
 [%s] %s:%d %@(%p) Failed to create the stream array for streamToken=%u
 [%s] %s:%d Failed to create the stream map for streamToken=%u
 [%s] %s:%d %@(%p) Failed to create the stream map for streamToken=%u
 [%s] %s:%d Queue configuration count is 0
 [%s] %s:%d Configuration queues pointer is NULL
 [%s] %s:%d Allocator out pointer is NULL
 [%s] %s:%d Allocator[%s] Failed to create allocator info: %s
 [%s] %s:%d Allocator[%s] was unable to find a relevant buffer queue. Requested size:%d
 [%s] %s:%d Allocator[%s] Failed to allocate memory. Size:%d
 [%s] %s:%d Unable to allocate buffer!
 [%s] %s:%d Allocator[%s] Memory reallocation failed. Size:%d
 [%s] %s:%d Failed to allocate allocator info
 [%s] %s:%d Failed to allocate allocator context
 [%s] %s:%d Settings entries not ordered by buffer size
 [%s] %s:%d Allocator=%s. %d buffer leak(s) not associated with a queue
 [%s] %s:%d Allocator=%s. %d buffer leak(s) detected queue with size[%zu]
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: SIPSetMessageDelegateForCallID: Invalid SIP Handle
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: SIPSetCellConditionChangeHandler: Invalid SIP Handle
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: fpAppCallback is NULL
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: Bad Transport Protocol(%d)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: calloc(%d) failed
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: CreateHandle failed
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: TPCreateHandle failed(%08X)
SIP [%s] %s:%d SIPListenOnPhysicalInterface failed with error %08X
SIP [%s] %s:%d SIPListenOnVirtualInterface failed with error %08X
SIP [%s] %s:%d invalid SIP transport type %d
SIP [%s] %s:%d SIPStopListenOnInterface(Physical) failed with error %08X
SIP [%s] %s:%d SIPStopListenOnInterface(Virtual) failed with error %08X
SIP [%s] %s:%d SIPConnect start...
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: Call SIPStartListen first.
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: DLCountActiveDialogs(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: CreateInvite failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: DLCreateHandle failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: TACreateHandle failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: TAStart failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: DLGetMsg failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: CreateCancel failed(%08X)
SIP [%s] %s:%d Call request cancelled before receiving any response
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: CreateAck failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: TPSend failed(%08X)
SIP [%s] %s:%d SIPConnect stop(%X)...
SIP [%s] %s:%d SIPCancel start...
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: Cannot find call ID(%d)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: DLPutMsg failed(%08X)
SIP [%s] %s:%d SIPCancel stop(%X)...
SIP [%s] %s:%d SIPHangup start with detailed code (%u), Reason:(%s)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: Call(%d) is in state %d
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: CreateBye failed(%08X)
SIP [%s] %s:%d SIPHangup stop(%X)...
SIP [%s] %s:%d SIPCloseCall start...
SIP [%s] %s:%d SIPCloseCall stop(%X)...
SIP [%s] %s:%d SIPSendMessage start...
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: CreateMessageInDialog failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: CallID(%d) is invalid
SIP [%s] %s:%d SIPSendMessage status(%d)...
SIP [%s] %s:%d HandoverReport: got %s back for candidateChangeMessage, status: %d
SIP [%s] %s:%d SIPSendMessage stop(%X)...
SIP [%s] %s:%d SIPSendMessageAll start...
SIP [%s] %s:%d SIPSendMessageAll stop(%X)...
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: pthread_create failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: Found no-match: Discard message(%08X)
SIP [%s] %s:%d SIPNewCallProc Thread start...
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: Invalid SIP Handle
SIP [%s] %s:%d SIPNewCallProc: SIPGETCALLEECALLID result == DENIED: Declining SIP INVITE
SIP [%s] %s:%d Found an existing dialog with Call ID %d. Closing.
SIP [%s] %s:%d Incoming call for Call ID %d
SIP [%s] %s:%d Primary connection is not ready, ignore the SIP INVITE for Call ID: %u
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: SendTAStatus failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: SendTAStatus cancelled
SIP [%s] %s:%d SIPNewCallProc Thread end(%d)...
SIP [%s] %s:%d |        |        |        |    --- iBodyLen %d
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: CreateGenericStatus failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: DLUpdate failed(%08X)
SIP [%s] %s:%d SIPCancelProc Thread start...
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: Cannot find a dialog to cancel, sending 481
SIP [%s] %s:%d SIPCancelProc Thread end(%d)...
SIP [%s] %s:%d SIPHangupProc Thread start...
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: Cannot find a dialog to hangup, sending 481
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: DLUnlock: failed to unlock.
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: DLUnlock: failed to unlock also.
SIP [%s] %s:%d SIPHangupProc Thread end(%d)...
SIP [%s] %s:%d SIPMessageProc Thread start...
SIP [%s] %s:%d SIP MESSAGE is missing a body - length = %d, body = %p
SIP [%s] %s:%d SIPMessageProc Thread end(%d)...
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: CreateStatus failed(%08X)
SIP [%s] %s:%d Invalid SIP packet multiplex mode
SIP [%s] %s:%d TPListenVirtualInterface failed(%08X)
SIP [%s] %s:%d SIPListenOnVirtualInterface succeeded
SIP [%s] %s:%d TPStopListen failed(%08X)
SIP [%s] %s:%d SIPStopListenOnInterface %s succeeded
SIP [%s] %s:%d TPListenOnPhysicalInterface failed(%08X)
SIP [%s] %s:%d TPListenOnPhysicalInterface on port %d
 [%s] %s:%d Failed to allocate the VCVideoCapture
 [%s] %s:%d %@(%p) Failed to allocate the VCVideoCapture
 [%s] %s:%d packetsExpectedForInterval:%u packetsLostForInterval:%u
 [%s] %s:%d %s:%d - Failed to receive TMMBN!
 [%s] %s:%d %s:%d received TMMBN:%u RTT:%.3f requested TMMBR:%u, operatingTierBitrate:%u
 [%s] %s:%d %s:%d TMMBR scheduled - new bitrate:%u
 [%s] %s:%d Failed to create Airplay screen rules!
 [%s] %s:%d Airplay Screen rules: No suitable H264 encode rules for this mac
 [%s] %s:%d Airplay Screen rules: No suitable H264 decode rules for this mac
 [%s] %s:%d Failed to create video rule for Airplay screen!
 [%s] %s:%d forwardSamplesFromIO: PacketThread_SendSampleBuffer failed
 [%s] %s:%d createPacketThreadWithIOBufferDuration: PacketThread_Create failed
 [%s] %s:%d Callback function not registered. CodecType[%s] SampleRate[%f]
 [%s] %s:%d initializing VCDisplayLink[%p]
 [%s] %s:%d nil displayLinkTickHandler
 [%s] %s:%d Failed to create CADisplayLink
 [%s] %s:%d dispatch_semaphore_create failed
 [%s] %s:%d VCRealTimeThread_Initialize failed
 [%s] %s:%d RefreshRate = %f
 [%s] %s:%d Display is not ready, waiting
 [%s] %s:%d Timed out waiting for display refresh rate update
 [%s] %s:%d Unexpected state %lu
 [%s] %s:%d VCRealTimeThread_Start failed
 [%s] %s:%d Timed out waiting for runLoop to run
 [%s] %s:%d dealloc VCDisplayLink[%p]
 [%s] %s:%d Not activated
 [%s] %s:%d CFRunLoopObserverCreate failed
 [%s] %s:%d Stopping VCDisplayLink thread
 [%s] %s:%d Refresh rate still 0, continue to wait
 [%s] %s:%d Unexpected acitivity %lu
 [%s] %s:%d Incorrect input for clientInProcess: Client delegate=%p, delegateQueue=%p
 [%s] %s:%d Incorrect input for clientOutOfProcess, delegate=%p, delegateQueue=%p
 [%s] %s:%d Failed to create queue
 [%s] %s:%d Will run %s process
 [%s] %s:%d %@(%p) Will run %s process
 [%s] %s:%d Could not get the shared pool allocator for the remoteQueue
 [%s] %s:%d Failed to enqueue attributes
 [%s] %s:%d Client Terminated remote queue connection destroying remote queue
 [%s] %s:%d Failed to create xpcCommandQueue
 [%s] %s:%d Could not create XPC dictionary from sample buffer
 [%s] %s:%d Client run out of process, should not do delegate callback
 [%s] %s:%d Nil bandwidth configurations!
 [%s] %s:%d Nil filtered bandwidth configurations!
 [%s] %s:%d Failed to initialize bandwidth configurations
 [%s] %s:%d Failed to allocate the bandwidth configuration for 2G
 [%s] %s:%d Failed to allocate the bandwidth configuration for 3G
 [%s] %s:%d Failed to allocate the bandwidth configuration for LTE
 [%s] %s:%d Failed to allocate the bandwidth configuration for 5G
 [%s] %s:%d Failed to allocate the bandwidth configuration for Wifi
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipHdr.c:%d: No '%c' in the header[%s]
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipHdr.c:%d: No header field name[%s]
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipHdr.c:%d: CreateReasonHdr: calloc(%d) failed
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipHdr.c:%d: malloc(%d) failed
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipHdr.c:%d: Unsupported header[%s]
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipHdr.c:%d: calloc(%d) failed
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipHdr.c:%d: No '>' in SIP URI[%s]
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipHdr.c:%d: Multiple Event packages in Event header[%s]
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipHdr.c:%d: ParseReasonHdr calloc(%d) failed
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipHdr.c:%d: Invalid protocol version[%s] in Via
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipHdr.c:%d: No ']' after '[' for an IPv6 address[%s]
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipHdr.c:%d: More Via than the maximum %d
SIP [%s] %s:%d Destination buffer size '%d' is too small to handle replacement '%s'->'%s'
SIP [%s] %s:%d Error Replacing Keyword - MaxSize:(%d) < (p - pszStr):(%ld)
SIP [%s] %s:%d Relay external addr [%s] type %u channel %x
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipMsg.c:%d: CreateCallIDHdr failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipMsg.c:%d: CreateContactHdr failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipMsg.c:%d: CreateContentLengthHdr failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipMsg.c:%d: CreateContentTypeHdr failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipMsg.c:%d: CreateCSeqHdr failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipMsg.c:%d: CreateFromHdr failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipMsg.c:%d: CreateMaxForwardsHdr failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipMsg.c:%d: CreateToHdr failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipMsg.c:%d: CreateViaHdr failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipMsg.c:%d: CreateUserAgentHdr failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipMsg.c:%d: malloc(%d) failed
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipMsg.c:%d: CopySipHeader failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipMsg.c:%d: DLGetData failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipMsg.c:%d: CreateReasonHdr failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipMsg.c:%d: CreateAcceptHdr failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipMsg.c:%d: CreateAllowHdr failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipMsg.c:%d: CreateAllowEventsHdr failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipMsg.c:%d: CreateExpiresHdr failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipMsg.c:%d: CreateMinExpires failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipMsg.c:%d: Invalid SIP Message(%d)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipMsg.c:%d: # of Via exceeded the maximum %d < %d+%d
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipMsg.c:%d: calloc(%d) failed
SIP [%s] %s:%d SIPCompressCallback: already compressed.
SIP [%s] %s:%d SIPCompressCallback: too small to compress %d
SIP [%s] %s:%d SIPCompressCallback: Not worth compressing %d --> %d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipUri.c:%d: No colon after sip scheme[%s]
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipUri.c:%d: No ']' after '[' for an IPv6 address[%s]
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipUri.c:%d: Unknown URI parameter[%s]
 [%s] %s:%d Failed to decode utterance number
 [%s] %s:%d Failed to decode is final
 [%s] %s:%d Failed to decode segments
 [%s] %s:%d failed to create Summer handle!
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transaction.c:%d: calloc(%d) failed
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transaction.c:%d: MQPut failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transaction.c:%d: CreateCancel failed(%08X)
SIP [%s] %s:%d TAInviteClientProc:%s
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transaction.c:%d: pthread_create failed(%08X)
SIP [%s] %s:%d TASetRTT: %d ms
SIP [%s] %s:%d TAInviteClientProc Thread start...
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transaction.c:%d: Invalid Transaction Handle
SIP [%s] %s:%d Save this ToTag: %s
SIP [%s] %s:%d TAInviteClientProc Thread end(%X)...
SIP [%s] %s:%d TANonInviteClientProc Thread start...
SIP [%s] %s:%d TANonInviteClientProc Thread end(%X)...
SIP [%s] %s:%d TAInviteServerProc Thread start...
SIP [%s] %s:%d TAInviteServerProc Thread end(%X)...
SIP [%s] %s:%d TANonInviteServerProc Thread start...
SIP [%s] %s:%d TANonInviteServerProc Thread end(%X)...
 [%s] %s:%d mode=%d, _notifyDelegateVideoAttributeChanges=%d _videoReceiverHandle=0x%x videoReceiver=%p
 [%s] %s:%d %@(%p) mode=%d, _notifyDelegateVideoAttributeChanges=%d _videoReceiverHandle=0x%x videoReceiver=%p
 [%s] %s:%d init video receiver 0x%x with an invalid rtp handle
 [%s] %s:%d init video receiver 0x%x and rateAdaptation %p with rtp handle 0x%x
 [%s] %s:%d New mode=%d
 [%s] %s:%d %@(%p) New mode=%d
 [%s] %s:%d mode=%d, streamCount=%d, streamIndex=%d
 [%s] %s:%d %@(%p) mode=%d, streamCount=%d, streamIndex=%d
 [%s] %s:%d containsAspectRatios=%d, _remoteSupportsExpectedAspectRatio=%d
 [%s] %s:%d %@(%p) containsAspectRatios=%d, _remoteSupportsExpectedAspectRatio=%d
 [%s] %s:%d featureListString=%s, AR=%d/%d, XR=%d/%d
 [%s] %s:%d %@(%p) featureListString=%s, AR=%d/%d, XR=%d/%d
 [%s] %s:%d dealloc called
 [%s] %s:%d %@(%p) dealloc called
 [%s] %s:%d Failed to create VCDisplayLink
 [%s] %s:%d Failed to activate VCDisplayLink
 [%s] %s:%d participantUUID=%@ remoteVideoAttributes=%@ visibleRect=%s
 [%s] %s:%d frameTime=%f
 [%s] %s:%d %@(%p) frameTime=%f
 [%s] %s:%d Ignoring key frame request key frame too soon for the same streamID:%d
 [%s] %s:%d %@(%p) Ignoring key frame request key frame too soon for the same streamID:%d
 [%s] %s:%d Requesting Key Frame with streamID:%d FIRType:%d
 [%s] %s:%d %@(%p) Requesting Key Frame with streamID:%d FIRType:%d
 [%s] %s:%d Failed to create the XPC queue[%@]
 [%s] %s:%d Failed to create the StreamInput queue[%@]
 [%s] %s:%d Failed to allocate stream inputs dictionary
 [%s] %s:%d streamInputID=%@
 [%s] %s:%d Failed to create format description from XPC arguments
 [%s] %s:%d Stream input ID %@ already exists!
 [%s] %s:%d streamInputID=%@ mediaType=%s
 [%s] %s:%d Failed to create the video stream input for streamInputID=%@
 [%s] %s:%d Failed to create the audio stream input for streamInputID=%@
 [%s] %s:%d Unsupported streamInputID=%@ mediaType=%s
 [%s] %s:%d Failed to allocate the return dictionary for streamInputID=%@ mediaType=%s
 [%s] %s:%d kVCDefaultEnableFigRemoteQueueForAVCStreamInputOutput disabled
 [%s] %s:%d Failed to allocate the result dictionary
 [%s] %s:%d Failed to allocate NSNumber for pid
 [%s] %s:%d Terminate request received with nil context
 [%s] %s:%d Terminate streamInputID=%@
 [%s] %s:%d Terminate request received with invalid context
 [%s] %s:%d Client process ID argument is missing
 [%s] %s:%d Client process with pid=%@ died. Cleaning up streamInputID=%@
 [%s] %s:%d nil VCInputStream
 [%s] %s:%d received NULL CMSampleBuffer
 [%s] %s:%d Invalid resolution %dx%d
 [%s] %s:%d VTCompressionSessionCreate failed (%d)
 [%s] %s:%d Failed to set profile level property to %@ with error status=%d
 [%s] %s:%d not implemented!
 [%s] %s:%d pEnc is NULL
 [%s] %s:%d bitrateBps:%d, dataSizeBytes:%d, duration:%f
 [%s] %s:%d VTCompressionSession set average bitrate property failed with %d
 [%s] %s:%d VTCompressionSession set data rate limits property failed with %d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCVideoEncoder_VT.c:%d: Encoder callback is NULL
 [%s] %s:%d VTCompressionSessionEncodeFrame error: %d, the system may run into a low memory state
 [%s] %s:%d VTCompressionSessionEncodeFrame error: %d
 [%s] %s:%d VTCompressionSession is not initialized
 [%s] %s:%d useMediaDrivenDuplication from feature-flag setting=%d
 [%s] %s:%d Received video stall update videoStallTimeTotal=%.2f
 [%s] %s:%d Registered MediaHealthStatisticsHandlerIndex=%d
 [%s] %s:%d HandoverReport: VCConnectionHealthMonitor stopped
 [%s] %s:%d HandoverReport: stop dupe by %s.
 [%s] %s:%d HandoverReport: VCConnectionHealthMonitor is running
 [%s] %s:%d HandoverReport: _preferRelayOverP2PEnabled=%d preferRelayOverP2PEnabled=%d _dropLinkRecommendation=%d
 [%s] %s:%d HandoverReport: _preferRelayOverP2PEnabled=%d _preferRelayOverP2PReason=%d _dropLinkRecommendation=%d
 [%s] %s:%d oneToOneMode=%s
 [%s] %s:%d oneToOneScreenEnabled=%s
 [%s] %s:%d HandoverReport: startConnectionHealthMonitoring=%d
 [%s] %s:%d Re-setting connection stat timers to now=%f
 [%s] %s:%d @=@ Health: VCConnectionManager [%p] interfaceName=%@ offChannelRatio=%2.3f btCoex=%d frequencyBand=%d qualityScoreDelayRx=%d qualityScoreDelayTx=%d qualityScoreLossRx=%d qualityScoreLossTx=%d qualityScoreChannel=%d
 [%s] %s:%d HandoverReport: setting connection selection version %d
 [%s] %s:%d local? %d, audio paused? %d
 [%s] %s:%d HandoverReport: Reset _duplicationPending state if we stop duplication.
 [%s] %s:%d HandoverReport: enable duplication (%d) already applied.
 [%s] %s:%d HandoverReport: can't enable duplication when there is no secondary connection.
 [%s] %s:%d HandoverReport: %s duplication and active probing on links
 [%s] %s:%d HandoverReport: set _isPreWarmStateEnabled state to %d. Do %s duplicate the RTCP packets. %s active probing on links
 [%s] %s:%d HandoverReport: set remote pre-warm state to %d. %s active probing on links
 [%s] %s:%d HandoverReport: Set isRemoteMediaQualityDegraded=%d
 [%s] %s:%d Checking for cached WRM notification _isWRMNotificationPending=%d isDuplicationAllowed=%d
 [%s] %s:%d HandoverReport: Processing iRAT notification (cached) WRM suggestion=%d isDuplicationAllowedForMediaDegraded=%d isRemoteMediaQualityDegraded=%d currentTargetBitrate=%d cellBitrateCap=%d bitrateCapDelta=%d
 [%s] %s:%d wrmNotification cannot be nil
 [%s] %s:%d %@(%p) wrmNotification cannot be nil
 [%s] %s:%d HandoverReport: Ignoring iRAT notification because the reason for recommendation is WiFi link going down
 [%s] %s:%d HandoverReport: Pending iRAT notification isDuplicationAllowedForMediaDegraded=%d isRemoteMediaQualityDegraded=%d currentTargetBitrate=%d cellBitrateCap=%d bitrateCapDelta=%d
 [%s] %s:%d HandoverReport: Processing iRAT notification isDuplicationAllowedForMediaDegraded=%d isRemoteMediaQualityDegraded=%d currentTargetBitrate=%d cellBitrateCap=%d bitrateCapDelta=%d
 [%s] %s:%d idsParticipantID %@ is already part of mediaDegradedHistories!
 [%s] %s:%d idsParticipantID %@ is not yet added to mediaDegradedHistories!
 [%s] %s:%d Aggregated stall time duration=%.2f Media degraded threshold=%.2f
 [%s] %s:%d idsParticipantID %@ is not part of mediaDegradedHistories!
 [%s] %s:%d HandoverReport: Ignoring media health stats update
 [%s] %s:%d Invalid bucketsToSum %d, defaulting to %d
 [%s] %s:%d HandoverReport: Per media criteria, duplication is %s!
 [%s] %s:%d Callback executed with context being nil
 [%s] %s:%d VCNWConnectionNofitication timestamp=%llu
@:@ VCConnectionManager-primaryConnectionChanged
 [%s] %s:%d @:@ VCConnectionManager-primaryConnectionChanged type=%s, localInterface=%s, remoteInterface=%s, uplinkBitrateCap=%u, downlinkBitrateCap=%u, callID=%u, connectionType=%s, addressType=%s
 [%s] %s:%d VCConnectionManager: Delegate didn't implement primaryConnectionChanged
 [%s] %s:%d HandoverReport: force to disable remote preferred interface inference
 [%s] %s:%d HandoverReport: connection %s %s optimal primary connection
 [%s] %s:%d HandoverReport: connection %s %s optimal secondary connection
 [%s] %s:%d VCConnectionManager: unrecognized connection quality: %d
 [%s] %s:%d Primary connection should not be nil
 [%s] %s:%d p2p link cannot be used as primary
 [%s] %s:%d %@(%p) p2p link cannot be used as primary
 [%s] %s:%d p2p link cannot be used for duplication
 [%s] %s:%d %@(%p) p2p link cannot be used for duplication
 [%s] %s:%d HandoverReport: Defaults settings force local cell tech enabled to be %s
 [%s] %s:%d HandoverReport: Defaults settings force local cell tech disabled
 [%s] %s:%d Link probing capability version on local: %d
 [%s] %s:%d Link probing capability version on remote: %d
 [%s] %s:%d Prevent displaying cell as primary interface as directed by storebag settings
 [%s] %s:%d %@(%p) Prevent displaying cell as primary interface as directed by storebag settings
 [%s] %s:%d callID = %u, network status bar request, useCellPrimayInterface = %d
 [%s] %s:%d LastReceivedPacketTime has not been set isLocalConnection=%d
 [%s] %s:%d Using noPacketThreshold=%.2f noPacketInterval:%.2f noRemoteDuplicationThresholdFast:%.2f
 [%s] %s:%d Receive and cache internal suggestion to duplication, %s packets for %.6f seconds.
 [%s] %s:%d HandoverReport: start dupe by %s.
 [%s] %s:%d HandoverReport: Drop and re-select the next candidate as primary connection, since no packet flowing for %f seconds
 [%s] %s:%d LastReceivedPacketOnPrimaryTime has not been set isLocalConnection=%d
 [%s] %s:%d HandoverReport: %s primary connection has no packet (could already have been received over secondary). Max interval: %f
 [%s] %s:%d Wrong type of statistics message received by VCConnectionManager
 [%s] %s:%d IDS Link recommendation ignored
 [%s] %s:%d HandoverReport: reportLinkPreferSuggestion=%d linkPreferSuggestion=%d linkConfidenceScore=%d linkIPPreference=%d
 [%s] %s:%d HandoverReport: Check if primary connection needs to be updated - isCurrentPrimaryUsingRelay=%d isPreferRelayOverP2PEnabled=%d
 [%s] %s:%d Applying link flags='%08x' for %@
 [%s] %s:%d Applying remote link flags='%08x' for %@
 [%s] %s:%d Update WifiAssist Available = %s
 [%s] %s:%d connectionManager must not be NULL
 [%s] %s:%d VTP refCount=%d
 [%s] %s:%d Failed to allocate memory for WRM info
 [%s] %s:%d Failed to allocate memory for WRM context
 [%s] %s:%d VCNetworkFeedbackController already started
 [%s] %s:%d VCNetworkFeedbackController already stopped
 [%s] %s:%d Request for the latest iRAT notification by resubscribing again
 [%s] %s:%d Get iRAT notification for %u, %u, 0x%llx, %s, (%llu, %llu)
 [%s] %s:%d WRM: Get iRAT Coex Metrics %s
 [%s] %s:%d wcmSetCallConfig callback.
 [%s] %s:%d wcmGetCallConfig callback.
 [%s] %s:%d WRMClient setup start.
 [%s] %s:%d WRMClient cleanup start.
 [%s] %s:%d HandoverReport: Update cellBitrateCap for pending iRAT notification purpose: %d
 [%s] %s:%d PSOLA Expansion samplesToDecode %d Samples Added %d
 [%s] %s:%d PSOLA Compress samplesToDecode %d samples removed %d
 [%s] %s:%d Not enough samples to update PSOLA history buffer availableSamples=%d
 [%s] %s:%d Audio client is trying to start but session parameters have not been set! (client PID=%d)
 [%s] %s:%d Timeout occured while waiting for audio IO start!
 [%s] %s:%d %@(%p) Timeout occured while waiting for audio IO start!
 [%s] %s:%d VCAudioClient=%p
 [%s] %s:%d Timeout occured while waiting for audio IO stop!
 [%s] %s:%d %@(%p) Timeout occured while waiting for audio IO stop!
 [%s] %s:%d Failed to create IO event queues
 [%s] %s:%d Failed to setDeviceRole
 [%s] %s:%d %@(%p) Failed to setDeviceRole
 [%s] %s:%d Failed to configureAudioStreams
 [%s] %s:%d %@(%p) Failed to configureAudioStreams
 [%s] %s:%d stop audio stream failed
 [%s] %s:%d %@(%p) stop audio stream failed
 [%s] %s:%d configuring audio stream failed error=%@
 [%s] %s:%d %@(%p) configuring audio stream failed error=%@
 [%s] %s:%d start audio stream failed
 [%s] %s:%d %@(%p) start audio stream failed
 [%s] %s:%d Send active voice only set to %d for stream=%@
 [%s] %s:%d %@(%p) Send active voice only set to %d for stream=%@
 [%s] %s:%d StreamGroup=%s streamIDs=%@ mediaBitrates=%@ for targetBitrate=%d
 [%s] %s:%d %@(%p) StreamGroup=%s streamIDs=%@ mediaBitrates=%@ for targetBitrate=%d
 [%s] %s:%d CMSimpleQueueEnqueue Full! Dropping audio stream update event with %d active streams
 [%s] %s:%d %@(%p) CMSimpleQueueEnqueue Full! Dropping audio stream update event with %d active streams
 [%s] %s:%d Failed to add sync destination
 [%s] %s:%d Failed to remove sync destination
 [%s] %s:%d Redundancy controller callback for inactive redundancy controller was ignored. Redundancy controller=%@ Current controller=%@
 [%s] %s:%d %@(%p) Redundancy controller callback for inactive redundancy controller was ignored. Redundancy controller=%@ Current controller=%@
 [%s] %s:%d Enqueue new audio redundancyPercentage=%d
 [%s] %s:%d %@(%p) Enqueue new audio redundancyPercentage=%d
 [%s] %s:%d CMSimpleQueueEnqueue Full, audioIO.state=%d
 [%s] %s:%d %@(%p) CMSimpleQueueEnqueue Full, audioIO.state=%d
 [%s] %s:%d Failed to create audio event queue
 [%s] %s:%d %@(%p) Failed to create audio event queue
 [%s] %s:%d Failed to create audio stream update event pool
 [%s] %s:%d Failed to create audioRedundancyChangeQueue
 [%s] %s:%d %@(%p) Failed to create audioRedundancyChangeQueue
 [%s] %s:%d Failed to create audio redundancy event pool
 [%s] %s:%d Failed to create the dynamic ducker
 [%s] %s:%d Failed to start the dynamic ducker
 [%s] %s:%d Redundancy controller is created
 [%s] %s:%d %@(%p) Redundancy controller is created
 [%s] %s:%d %@(%p) %@
 [%s] %s:%d Remote side is on Peace [%d]. Adding subscription to low Quality audio %@
 [%s] %s:%d RTCP report not found!!
 [%s] %s:%d %@(%p) RTCP report not found!!
 [%s] %s:%d RTCP report found!!
 [%s] %s:%d %@(%p) RTCP report found!!
 [%s] %s:%d Received custom report (%d) from %x with %d reception reports
 [%s] %s:%d %@(%p) Received custom report (%d) from %x with %d reception reports
 [%s] %s:%d audio no-op no MKM
 [%s] %s:%d CMSampleBufferCreate failed %d
 [%s] %s:%d Failed to allocate the block buffer. Status:%d
 [%s] %s:%d Failed to append the block buffer. Status:%d
 [%s] %s:%d CVPixelBufferCreate failed %d
 [%s] %s:%d VTPixelTransferSessionCreate failed %d
 [%s] %s:%d VTPixelTransferSessionTransferImage failed %d
 [%s] %s:%d Failed to create color space
 [%s] %s:%d CGDataProviderCreateWithData failed %d
 [%s] %s:%d source image is NULL
 [%s] %s:%d Created image type:%d data with (%zux%zu) %@
 [%s] %s:%d Invalid resolution: %d
 [%s] %s:%d Original %fx%f [x=%3f,y=%3f,w=%3f,h=%3f], Cropped %fx%f [x=%3f,y=%3f,w=%3f,h=%3f]
 [%s] %s:%d Invalid image type %d
 [%s] %s:%d Unsupported video payload type %d
 [%s] %s:%d Failed to get device width
 [%s] %s:%d Failed to get device height
 [%s] %s:%d Failed to get native pixel count
 [%s] %s:%d Failed to get device maxScreenEncodingSizeSupported
 [%s] %s:%d Computed max screen pixel count cannot be zero
SIP [%s] %s:%d >>>>>  ARPL packet is UNENCRYPTED in TPSendUDPPacketARPL (in Transport) <<<<<
SIP [%s] %s:%d >>>>>  ARPL packet pbMsg is NULL in TPSendUDPPacketARPL(in Transport) <<<<<
SIP [%s] %s:%d >>>>>  ARPL packet iLen==0 in TPSendUDPPacketARPL(in Transport) <<<<<
SIP [%s] %s:%d ((((( In TPCreateHandle with g_iHandleRefCount = %d and g_hActualTPHandle = %p )))))
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: calloc(%d) failed
SIP [%s] %s:%d ((((( In TPCreateHandle [A] phTP = %p and *phTP = %ld )))))
SIP [%s] %s:%d ((((( In TPCreateHandle [B] phTP = %p and *phTP = %ld )))))
SIP [%s] %s:%d ((((( In TPCreateHandle [C] phTP = %p and *phTP = %ld )))))
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: ICECreateHandle failed(%08X)
SIP [%s] %s:%d ((((( In TPCreateHandle AREA 1 with g_iHandleRefCount = %d and g_hActualTPHandle = %p )))))
SIP [%s] %s:%d ((((( Leaving TPCreateHandle successfully with g_iHandleRefCount = %d and g_hActualTPHandle = %p )))))
SIP [%s] %s:%d ((((( In TPCloseHandle with g_iHandleRefCount = %d and g_hActualTPHandle = %p )))))
SIP [%s] %s:%d Unmatched call to TPCreateHandle, TPCloseHandle called with non-positive ref count
SIP [%s] %s:%d TPGetLoopbackIP:: found loopbackIP = %s
SIP [%s] %s:%d TPGetLoopbackIP:: error loopbackIP = %s
SIP [%s] %s:%d Stop listening on IDS interface vfd %d
SIP [%s] %s:%d Stop listening on %s(%s) vfd %d
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: SipMsg doesn't have a Via header
SIP [%s] %s:%d Stop heartbeat to %s
SIP [%s] %s:%d Setting ice timeout to iceTimeout = %f
SIP [%s] %s:%d Keep listening on %s
SIP [%s] %s:%d Adding [%s] to list
SIP [%s] %s:%d ICEAddOneInterface failed %08x
SIP [%s] %s:%d Keep listening on virtual interface (vfd %d)
SIP [%s] %s:%d Interface '%s' is not in the routing table but still valid. Keeping it
SIP [%s] %s:%d Stop listening on %s
SIP [%s] %s:%d TPUpdateInterfaceList: %u
SIP [%s] %s:%d TPUpdateInterfaceList:%d valid interfaces found.
SIP [%s] %s:%d Setting ice timeout to %f
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: Remote candidate data is invalid (data:%p len:%d).
SIP [%s] %s:%d HandoverReport: TPProcessRemoteInterfaceChangeMessage, remote candidate list already updated
SIP [%s] %s:%d >>>>>  ARPL packet is UNENCRYPTED in sendudppacket(in Transport) <<<<<
SIP [%s] %s:%d >>>>>  ARPL packet pbMsg is NULL in sendudppacket(in Transport) <<<<<
SIP [%s] %s:%d >>>>>  ARPL packet iLen==0 in sendudppacket(in Transport) <<<<<
SIP [%s] %s:%d Retry SIP packet using default result key.
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: Retry SIP packet using default result key failed (%08lX).
SIP [%s] %s:%d >>>>>  ARPL packet is UNENCRYPTED in SendUDPPacketForCList(in Transport) <<<<<
SIP [%s] %s:%d SendUDPPacketForCList: SENDING PACKET FROM %s:%d
SIP [%s] %s:%d SendUDPPacketForCList: SENDING PACKET TO %s:%d
SIP [%s] %s:%d SendUDPPacketForCList: skip mismatched interface: IPv4
SIP [%s] %s:%d DTLS: entering (dwCallID == %08X)...
SIP [%s] %s:%d DTLS:: (dwCallID == %08X) found clist local IP == %s
SIP [%s] %s:%d DTLS:: (dwRemoteCallID == %08X) dtls to remote == %s
SIP [%s] %s:%d DTLS: initialize and perform handshake...
SIP [%s] %s:%d DTLS_Create failed with %d
SIP [%s] %s:%d dtls: ARPLSessionCreate(p2pID == %08X) ...
SIP [%s] %s:%d dtls: ARPLSessionCreate failed with %d
SIP [%s] %s:%d DTLS: handshake result == %08X ...
SIP [%s] %s:%d DTLS: error description [%s]
SIP [%s] %s:%d DTLS: exiting (hResult == %08X)...
SIP [%s] %s:%d Create socket for IDS interface failed with error %08X
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: socket failed(%08X)
SIP [%s] %s:%d Start listening on IDS interface vfd %d
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: pthread_create(TPRecvProc) failed(%08X)
SIP [%s] %s:%d TPRecvProc(%p) started
SIP [%s] %s:%d TPRecvProc already started
SIP [%s] %s:%d Transport(UDP) Thread start...
SIP [%s] %s:%d TPRecvProc: UNEXPECTED! Breaking the loop due to invalid pTP->sReset
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: select failed(%08X)
SIP [%s] %s:%d Transport(UDP) Thread end(%08X)...
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: recvfrom(%d) returned 0: empty message
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: recvfrom(%d) failed(%08X)
SIP [%s] %s:%d >>>> SKIPPING INCOMING ARPL PACKET! <!bEncrypted>  (in Transport) <<<<<
SIP [%s] %s:%d >>>> SKIPPING INCOMING ARPL PACKET! <!DTLS_IsConnected(pCList->hDTLS)>  (in Transport) <<<<<
SIP [%s] %s:%d RecvMessageUDP: ignore unrecognized OFT packet for callID %08X
SIP [%s] %s:%d RecvMessageUDP: localCallID == %08X remoteCallID == %08X
SIP [%s] %s:%d RecvMessageUDP: pass message SIP
SIP [%s] %s:%d Updating heartbeat from %s to %s
SIP [%s] %s:%d >>>>> Received incoming ARPL data with szMessage=[%s] and length=[%d] <NEED TO DO SOMETHING HERE> (in Transport) <<<<<
SIP [%s] %s:%d calloc(%d) failed(%08X)
SIP [%s] %s:%d [[%s
%s]] from %s
SIP [%s] %s:%d [[%s
<binary>]] from %s
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: ParseMessage failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: INVITE doesn't have Contact header.
SIP [%s] %s:%d doesn't have valid source destination info
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: CONTENT-LENGTH less than 0 (%d).
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: CONTENT-LENGTH incorrect (%d/%d).
SIP [%s] %s:%d Use relay external addr [%s], relay %u, channel %x
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: Via header missing or no field value
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: CSeq header missing
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: CONTENT-TYPE null when body not empty.
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: Decompress failed: %d, %d, (%08X)
SIP [%s] %s:%d Uncompressed SDP(%d): [%s] from size %d
SIP [%s] %s:%d Uncompress binary body from %d to %d
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: malloc(%d) failed
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: CallSIPMessageCallback failed(%08X)
SIP [%s] %s:%d SIPMessage callback no via/cseq failed, result = %x
SIP [%s] %s:%d SIPMessage transaction callback request failed, result = %x
SIP [%s] %s:%d SIPMessage transaction callback response failed, result = %x
SIP [%s] %s:%d SIPMessage callback failed, result = %x
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: No network interface found.
SIP [%s] %s:%d %d interfaces found.
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: ICESetEnableLoopbackInterface failed(%08X)
SIP [%s] %s:%d %d valid interfaces found. (pTP->pCList == NULL) = %d
SIP [%s] %s:%d Same Local and Destination IP:Port(%s)
SIP [%s] %s:%d ( )( )( )( )( ) SIP BODY IS BINARY? (%d)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: Compress Binary SDP failed(%08X)
SIP [%s] %s:%d RTP using %s and %s as hints
SIP [%s] %s:%d Overriding Video RTCP port from %u to %u
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: Compress INVITE/200 SDP failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: Compress other SIP SDP failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: ConstructSipMsg failed(%08X)
SIP [%s] %s:%d Send to %s [%s]
SIP [%s] %s:%d Compress binary body from %d to %d
SIP [%s] %s:%d Compress SDP(%d): [%s] to size %d
SIP [%s] %s:%d ( )( )( )( )( ) TP BINARY BODY (%d + %d)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: CreateSocketAndBind failed in TPAddIPPortToCLIST = (%08x)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: ICEAddOneInterface failed in TPAddIPPortToCLIST = (%08x)
SIP [%s] %s:%d RemoveCListForCallID for a callid [%d == %d]
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: getaddrinfo failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: getaddrinfo returned NULL
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: bind on %d failed(%d)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: getsockname failed(%08X)
SIP [%s] %s:%d Start listening on %s(%s) sock %d
SIP [%s] %s:%d CreateSocketAndBind: Unable to set delegatedUUID(%s) for socket %s with error %d)
SIP [%s] %s:%d CreateSocketAndBind: Set delegatedUUID(%s) for socket %s)
SIP [%s] %s:%d Invalid transport packet multiplex mode
SIP [%s] %s:%d HandoverReport: needUpdateRemoteCandidateList didn't find matched callID
SIP [%s] %s:%d TPConnectedCallback: pCCResult == %08X, fUseRelay = %d ...
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: TPConnectedCallback: CheckInHandle failed in the dispatched block
SIP [%s] %s:%d TPConnectedCallback: theCCResult == %08X, ifDidRecvPacket = %d fUseRelay = %d ...
SIP [%s] %s:%d TPConnectedCallback:: result#%d
SIP [%s] %s:%d TPConnectedCallback:: local = %s
SIP [%s] %s:%d TPConnectedCallback:: remote = %s
SIP [%s] %s:%d TPConnectedCallback:: src = %s
SIP [%s] %s:%d TPConnectedCallback:: dst = %s
SIP [%s] %s:%d TPConnectedCallback:: remoteSrc = %s
SIP [%s] %s:%d TPConnectedCallback:: relay ext = %s
SIP [%s] %s:%d TPConnectedCallback:: bIfRelay = %d wRelayServType = %d wChannelNumber = %04x
SIP [%s] %s:%d TPConnectedCallback:: cell_tech (local:%d, remote:%d)
SIP [%s] %s:%d TPConnectedCallback:: dwCallID = %08X iRemoteCallID = %08X
SIP [%s] %s:%d TPConnectedCallback:: upgrade = %d primary = %d, replace = %d
SIP [%s] %s:%d TPProcessICENomination Callback: callID[%08X] local[%s] dst[%s].
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: TPNewCandidatesCallback: CheckInHandle failed in the dispatched block
SIP [%s] %s:%d TPNewCandidatesCallback: blob size: %d
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: TPRemoveIPPort: CheckInHandle failed in the dispatched block
AVCRC [%s] %s:%d Releasing baseband congestion detector:%p
 [%s] %s:%d Unsupported media type:%s
 [%s] %s:%d compare method returning NSOrderedSame -- sort result will be indeterministic
 [%s] %s:%d result=%d (%@ vs. %@)
 [%s] %s:%d CMDerivedObjectCreate failed %x
 [%s] %s:%d Failed to create transport stream array
 [%s] %s:%d [%p]
 [%s] %s:%d Invalid transportStream type
 [%s] %s:%d transportStream %p was already added to run loop
 [%s] %s:%d NULL storage
 [%s] %s:%d Failed to create reset socket %d
 [%s] %s:%d Could not get VFD %d from tranportStream %p
 [%s] %s:%d VFD returned by tranportStream %p is NULL
 [%s] %s:%d transportStream %p being removed was not added to run loop
 [%s] %s:%d Negative timeout
 [%s] %s:%d RunLoop %p wait for receive was cancelled
 [%s] %s:%d RunLoop %p wait for receive timed out
 [%s] %s:%d Select failed %d
 [%s] %s:%d Perform receive failed for tranportStream %p
 [%s] %s:%d Reset socket not set up
 [%s] %s:%d %@(%p) Failed to allocate stream token to enable map
 [%s] %s:%d Failed to allocate stream token to table entry map
 [%s] %s:%d %@(%p) Failed to allocate stream token to table entry map
 [%s] %s:%d Failed to allocate bandwith allocation map
 [%s] %s:%d Quality Index collision for index=%u existing streamGroupID=%s other streamGroupID=%s
 [%s] %s:%d Failed to allocate media bitrate array
 [%s] %s:%d %@(%p) Failed to allocate media bitrate array
 [%s] %s:%d StreamToken=%ld is disabled
 [%s] %s:%d %@(%p) StreamToken=%ld is disabled
 [%s] %s:%d Calculate bitrate for streamGroup=%s
 [%s] %s:%d %@(%p) Calculate bitrate for streamGroup=%s
 [%s] %s:%d Unknown cipherSuite=%d, defaulting to %d 
 [%s] %s:%d PreCalc: dwROC=%u (wSeq=%u)
 [%s] %s:%d Tried to decrement ROC to -1, prevented this from happening
 [%s] %s:%d PreCalc: use dwROC=%u (wSeq=%u)
 [%s] %s:%d failed with error %d
 [%s] %s:%d SRTPInfo not initialized properly. Call SRTPPrepareEncryption first
 [%s] %s:%d invalid SRTP exchange info provided
 [%s] %s:%d create crypto set failed
 [%s] %s:%d Configuring Crypto Set
 [%s] %s:%d update encryption failed
 [%s] %s:%d SRTPUpdateEncryptionInfo: attempt to set an invalid media key index
 [%s] %s:%d SRTPDeriveMediaKeyInfo: media key/salt derivation failed
 [%s] %s:%d SRTPEncryptData: In=[%s]
 [%s] %s:%d SRTPEncData: MKI=%s, ROC==%08lX, SEQ==%u):
 [%s] %s:%d CCCryptorReset failed with error %d
 [%s] %s:%d CCCryptorUpdate failed with error %d
 [%s] %s:%d SRTPEncryptData: Out=[%s]
 [%s] %s:%d SRTPEnc: MKI=%s, SSRC==%08lX, SEQ==%u):
 [%s] %s:%d Max number of SRTP packets reached
 [%s] %s:%d Max number of SRTCP packets reached
 [%s] %s:%d SRTP header doesn't fit in packet. Packet length=%d
 [%s] %s:%d SRTP authentication tag does not fix in packet. dataLength=%d, MKIActualSize=%d, sessionAuthenticationTagLength=%d, maxBufferLength=%d
 [%s] %s:%d Invalid MediaKeyIndex. Stop sending the packet
 [%s] %s:%d Authentication tag doesn't match. Authentication failed
 [%s] %s:%d No extra buffer space to add authentication tag
 [%s] %s:%d SRTCP packet too short
 [%s] %s:%d Oversize member key length (limit=%d, given=%d)
 [%s] %s:%d Oversize member salt length (limit=%d, given=%d)
 [%s] %s:%d Canceld SRTP encryption
 [%s] %s:%d Invalid operating mode %d, falling back to kSRTPOperatingModeRFCCompliant
 [%s] %s:%d   counters: [%s], ROC=%d
 [%s] %s:%d Authentication is enabled but the tag size is invalid. Size=%d
 [%s] %s:%d TCPTUNNEL: timer is deleted.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/TCPTunnelClient.m:%d: TCPTUNNEL: Request timed out after %5.2f sec.
 [%s] %s:%d TCPTUNNEL: timer is set.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/TCPTunnelClient.m:%d: Unknown types: %d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/TCPTunnelClient.m:%d: TCPTUNNEL: socket error, tear down the connection.
 [%s] %s:%d TCPTUNNEL: wcb resume
 [%s] %s:%d TCPTUNNEL: put %d on write buffer.
 [%s] %s:%d TCPTUNNEL: shift %d, put %d on write buffer.
 [%s] %s:%d TCPTUNNEL: wcb: %d
 [%s] %s:%d TCPTUNNEL: socket is successfully connected %d.
 [%s] %s:%d TCPTUNNEL: We got a TCP connection!
 [%s] %s:%d TCPTUNNEL: Start SSL handshake
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/TCPTunnelClient.m:%d: TCPTUNNEL: Socket error, tear down the connection.
 [%s] %s:%d TCPTUNNEL: reset write buffer
 [%s] %s:%d TCPTUNNEL: wcb suspend
 [%s] %s:%d Data length is too large: %lu
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/TCPTunnelClient.m:%d: TCPTUNNEL: Error parsing TURN message (%08X)
 [%s] %s:%d TCPTUNNEL: %d, Received TURN message: %x, %x
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/TCPTunnelClient.m:%d: TCPTUNNEL: ProcessAllocateResponse failed
 [%s] %s:%d TCPTUNNEL: send saved ChannelBinding request now.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/TCPTunnelClient.m:%d: TCPTUNNEL: Got error response for Allocate request.
 [%s] %s:%d TCPTUNNEL: refreshing now.
 [%s] %s:%d TCPTUNNEL: refreshing after %5.2f seconds
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/TCPTunnelClient.m:%d: TCPTUNNEL: Got error response for ChannelBinding request.
 [%s] %s:%d TCPTUNNEL: Got TURN terminating response.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/TCPTunnelClient.m:%d: TCPTUNNEL: Got error response for Refresh request.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/TCPTunnelClient.m:%d: TCPTUNNEL: throw away TURN Message(%x).
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/TCPTunnelClient.m:%d: TCPTUNNEL: TCP/SSL socket is closed while accepting packets
 [%s] %s:%d TCPTUNNEL: SSL enabled channel has set up.
 [%s] %s:%d TCPTUNNEL: send Allocate request in queue now.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/TCPTunnelClient.m:%d: TCPTUNNEL: handshake error: %d, %d
 [%s] %s:%d TCPTUNNEL: STARTING! %s
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/TCPTunnelClient.m:%d: TCPTUNNEL: Only Carrier interface available.
 [%s] %s:%d TCPTUNNEL: interface %s is behind NAT64 with prefix %s
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/TCPTunnelClient.m:%d: TCPTUNNEL: can't create socket
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/TCPTunnelClient.m:%d: TCPTUNNEL: no port to bind to.
 [%s] %s:%d TCPTUNNEL: local IP %s, local port: %d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/TCPTunnelClient.m:%d: TCPTUNNEL: can't reserver buffer pool
 [%s] %s:%d TCPTUNNEL: attempt a TCP connection to %s
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/TCPTunnelClient.m:%d: TCPTUNNEL: can't create write source.
 [%s] %s:%d TCPTUNNEL: connect is done immediately %d.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/TCPTunnelClient.m:%d: TCPTUNNEL: We can't connect: %d, %d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/TCPTunnelClient.m:%d: TCPTUNNEL: can't create read source.
 [%s] %s:%d TCPTUNNEL: TCP tunnel released.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/TCPTunnelClient.m:%d: sendAllocateMsg: MakeAllocateRequest error: %x
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/TCPTunnelClient.m:%d: sendAllocateMsg: STUNEncodeMessage error: %x
 [%s] %s:%d sendAllocateMsg: save the message for set-up in progress.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/TCPTunnelClient.m:%d: sendChannelBindingMsg: MakeChannelBindRequest error: %x
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/TCPTunnelClient.m:%d: sendChannelBindingMsg: STUNEncodeMessage error: %x
 [%s] %s:%d sendChannelBindingMsgWithDict: save message for set-up in progress.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/TCPTunnelClient.m:%d: sendRefreshMsg: STUNEncodeMessage error: %x
 [%s] %s:%d TCPTUNNEL: TCP channel is unbound.
 [%s] %s:%d TCPTUNNEL: closeTunnelSocket %d
 [%s] %s:%d TCPTUNNEL: Canceling the writeSource.
 [%s] %s:%d TCPTUNNEL: Canceling the readSource.
 [%s] %s:%d TCPTUNNEL: buffer pool limit reached.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/TCPTunnelClient.m:%d: TCPTUNNEL: malloc error for a new node
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/TCPTunnelClient.m:%d: TCPTUNNEL: malloc error for buffer %d
 [%s] %s:%d TCPTUNNEL: add new buffer to the pool %d
 [%s] %s:%d TCPTUNNEL: replace %d with %d.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/TCPTunnelClient.m:%d: TCPTUNNEL: not found in buffer pool %p
 [%s] %s:%d TCPTUNNEL: %s
VCCallSession [%s] %s:%d deviceRole = %d, transportType = %d, isGKVoiceChat = %d
VCCallSession [%s] %s:%d %@(%p) deviceRole = %d, transportType = %d, isGKVoiceChat = %d
VCCallSession [%s] %s:%d Using the following path - traditional 1:1
VCCallSession [%s] %s:%d RTCReporting: can't configure the reporting agent.
VCCallSession [%s] %s:%d Load switch wifiAssistStatusBarEnabled %d
VCCallSession [%s] %s:%d RTCReporting: reporting dictionary %s
VCCallSession [%s] %s:%d setOperatingMode - startVideo failed with error %s
VCCallSession [%s] %s:%d setOperatingMode - stop failed with error %s
VCCallSession [%s] %s:%d updateWithLastDecodedFrameTime returned YES. lastDecodedFrametime=%f isVideoQualityDegraded=%d
VCCallSession [%s] %s:%d Found enableBBNote NO. Disable baseband notification
VCCallSession [%s] %s:%d Found enableRRx %d for AFRC.
VCCallSession [%s] %s:%d 
 VCCallSession:UpdateMTU remote is %s. Lowering local MTU: %d -> %d 
VCCallSession [%s] %s:%d VCCallSession:UpdateMTU MTU: %d -> %d Cellular: %d/%d 
VCCallSession [%s] %s:%d VCCallSession: handleCellTechChange (%s to %s) 
VCCallSession [%s] %s:%d VCCallSession: received unsupported cell tech change to %d
VCCallSession [%s] %s:%d Remote is legacy device: setting local bandwidth estimation cap: %d 
VCCallSession [%s] %s:%d VCCallSession: Local CellTech has changed %s, max bitrate %u, max remote bitrate %u
VCCallSession [%s] %s:%d VCCallSession: Local cell tech change ignored, current connection type %d
VCCallSession [%s] %s:%d VCCallSession: Remote CellTech has changed %s, max bitrate %u, max remote bitrate %u
VCCallSession [%s] %s:%d HandoverReport: transmitter updated feature list string to %s, for payload: %ld
VCCallSession [%s] %s:%d NO matched feature list string for selected payload %d
VCCallSession [%s] %s:%d Setting remote screen aspect ratio numbers %d/%d,%d/%d (%sPR), remote expects to receive %d/%d,%d/%d
VCCallSession [%s] %s:%d Could not find matching video codec for interface %d
VCCallSession [%s] %s:%d HandoverReport: schedule a pending primary connection change, old primary connection: %s
VCCallSession [%s] %s:%d invalid connection change state %ld
VCCallSession [%s] %s:%d HandoverReport: handle a pending primary connection change
VCCallSession [%s] %s:%d HandoverReport: audio/video setup done. Update connection change state to ready
VCCallSession [%s] %s:%d VCCallSession: Stalling lastReceivedPacketTime %f currentTime %f
VCCallSession [%s] %s:%d VCCallSession: Unstalling lastReceivedPacketTime %f currentTime %f packetCount %d
VCCallSession [%s] %s:%d Entering short media stall lastReceivedPacketTime=%f, currentTime=%f
VCCallSession [%s] %s:%d Leaving short media stall lastReceivedPacketTime=%f, currentTime=%f, packetCount=%d
VCCallSession [%s] %s:%d Falling back to lastReceivedPacketTimestamp=%f for packetType=%d
VCCallSession [%s] %s:%d Falling back to currentTime=%f for packetType=%d
VCCallSession [%s] %s:%d Disconnecting due to no remote packet currentTime=%f lastPacketTime=%f lastReceivedPacketTimestamp=%f noRemotePacketsTimeout=%f packetType=%d
VCCallSession [%s] %s:%d roundTripTime = %f, packetLossRate = %f
VCCallSession [%s] %s:%d PLR too high:Disconnecting
VCCallSession [%s] %s:%d RTT too high:Disconnecting
VCCallSession [%s] %s:%d perfTimers=%s, callID = %u
VCCallSession [%s] %s:%d %@(%p) perfTimers=%s, callID = %u
VCCallSession [%s] %s:%d Cancelling Timeout Source
VCCallSession [%s] %s:%d Connection timeout occurred, disconnecting
VCCallSession [%s] %s:%d startConnectionWithParticipantID: callID = %d, isCaller = %d, self.deviceRole = %d, caps = %s, inviteData = %s
VCCallSession [%s] %s:%d Failed to process response media blob
VCCallSession [%s] %s:%d Starting secure control channel
VCCallSession [%s] %s:%d Failed to add participant to Control Channel list of active participants
VCCallSession [%s] %s:%d Starting SIP control channel
VCCallSession [%s] %s:%d Media control info FEC feedback version is '%d'
VCCallSession [%s] %s:%d SKEState_SetBlob(0) failed with error %d
VCCallSession [%s] %s:%d Reporting not available (no backends)
VCCallSession [%s] %s:%d Received transportSession event %d while call is not ongoing. Skipping
VCCallSession [%s] %s:%d Received invalid transportSession event(%d)
VCCallSession [%s] %s:%d Received piggyback blob %p
VCCallSession [%s] %s:%d %s %s
VCCallSession [%s] %s:%d Load switch preferRelayOverP2P %d
VCCallSession [%s] %s:%d Load switch fastMediaDuplicationEnabled %d
VCCallSession [%s] %s:%d Load switch duplicateImportantPktsEnabled %d
VCCallSession [%s] %s:%d Load switch lowNetworkModeEnabled %d
VCCallSession [%s] %s:%d Load switch duplicationEnhancementEnabled %d
VCCallSession [%s] %s:%d Load switch iRATDuplicationEnabled %d
VCCallSession [%s] %s:%d WRM: vcWRMClient setup start.
VCCallSession [%s] %s:%d Load switch iRATMetricsEnabled %d
VCCallSession [%s] %s:%d Load switch iRATRtpEnabled %d
VCCallSession [%s] %s:%d Load switch preWarmCellEnabled %d
VCCallSession [%s] %s:%d Load switch wrmRSSIThresholdEnabled %d
VCCallSession [%s] %s:%d WRM: vcWRMClient cleanup start.
VCCallSession [%s] %s:%d HandoverReport: Ignoring iRAT notification because the reason for recommendation is WiFi link going down
VCCallSession [%s] %s:%d HandoverReport: Pending iRAT notification until video quality degrade
VCCallSession [%s] %s:%d WRM: Get iRAT notification for %u, %u, 0x%llx, %s, (%llu, %llu)
VCCallSession [%s] %s:%d WRM: Get iRAT Coex Metrics %s
VCCallSession [%s] %s:%d WRM: Send iRAT status update for %u, %u
VCCallSession [%s] %s:%d WRM: Request for the latest iRAT notification by resubscribing again
VCCallSession [%s] %s:%d Failed to create audio rules for media negotiator
VCCallSession [%s] %s:%d Failed to create audio configuration for media negotiator
VCCallSession [%s] %s:%d Failed to create local audio configuration for media negotiator
VCCallSession [%s] %s:%d Failed to create local feature string for media negotiator
VCCallSession [%s] %s:%d Failed to create local configuration for the media negotiator
VCCallSession [%s] %s:%d Load switch before negotiation secureMessagingRequired %d
VCCallSession [%s] %s:%d Load switch before negotiation disableSIPEnabled %d
VCCallSession [%s] %s:%d Failed to create media negotiator
VCCallSession [%s] %s:%d Failed to create the invite media blob
VCCallSession [%s] %s:%d Remote caller doesn't use media pre-negotiation
VCCallSession [%s] %s:%d Failed to process media blob
VCCallSession [%s] %s:%d Failed to create the response media blob
VCCallSession [%s] %s:%d Operating mode is INVALID
VCCallSession [%s] %s:%d Failed to generate the media blob
VCCallSession [%s] %s:%d falls back to SDP. remoteInviteData = %@, remoteMediaBlob = %@
VCCallSession [%s] %s:%d Local callInfoBlob = %s
VCCallSession [%s] %s:%d Both connectionBlob and callInfoBlob are nil. No callID and client version
VCCallSession [%s] %s:%d Remote callInfoBlob = %s localCallID = %d
VCCallSession [%s] %s:%d setPauseAudio (was %d is %d state is %d)
VCCallSession [%s] %s:%d setPauseAudio early return due to state == %d
VCCallSession [%s] %s:%d Baseband codec not set propertly
VCCallSession [%s] %s:%d isVideoEnabled=%d
VCCallSession [%s] %s:%d failed to start video with error %@
VCCallSession [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCCallSession.m:%d: processRelayRequestResponseDict bailing because (![self isCallOngoing] == %d)
VCCallSession [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCCallSession.m:%d: processRelayUpdateDict bailing because (![self isCallOngoing] == %d)
VCCallSession [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCCallSession.m:%d: processRelayUpdateDict: remoteCallInfo is nil.
VCCallSession [%s] %s:%d STUB:processCancelRelayRequest:%s, %d
VCCallSession [%s] %s:%d >>>>> Sending ARPL data <%s> with callID %d (in VCCallSession) <<<<<
VCCallSession [%s] %s:%d Attempt to send data with zero size. Ignoring...
VCCallSession [%s] %s:%d sendReliableMessageAndWait result was %s, participantID=%d, data=%@
VCCallSession [%s] %s:%d framerate is not set.
VCCallSession [%s] %s:%d setSessionConferenceState, %d
VCCallSession [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCCallSession.m:%d: setSessionConferenceState: invalid state
VCCallSession [%s] %s:%d setSessionConferenceVisualRectangle: (%g, %g), %gx%g
VCCallSession [%s] %s:%d PeerProtocolVersion set to %d
VCCallSession [%s] %s:%d connectionEstablishedCallback: initialize remote cell bitrate cap to %u, cell tech %d, operation mode %d
VCCallSession [%s] %s:%d VCCallSession: sipConnectThreadProc
VCCallSession [%s] %s:%d VCSecureDataChannel already exists. Releasing it and creating a new one. 
VCCallSession [%s] %s:%d Setting up secureDataChannel with dataChannelSharedSecret %@
VCCallSession [%s] %s:%d VCSecureDataChannel init failed with error %s
VCCallSession [%s] %s:%d WCM: wcmSetCallConfig callback.
VCCallSession [%s] %s:%d WCM: wcmGetCallConfig callback.
VCCallSession [%s] %s:%d SIPINCOMINGCONFERENCE state == GKVoiceChatServiceStateCalleeAttemptingToConnect = %d, %d
VCCallSession [%s] %s:%d SIPINCOMING: WE ARE BUSY BUSY (state = %d)
VCCallSession [%s] %s:%d SIPCONNECTEDCONFERENCE
VCCallSession [%s] %s:%d SIPCONNECTEDCONFERENCE: use DTLS-SRTP is enabled...
VCCallSession [%s] %s:%d SIPCONNECTEDCONFERENCE: GKVoiceChatServiceSRTPEncryptionSetupError... (dtls-srtp)
VCCallSession [%s] %s:%d SIPCONNECTEDCONFERENCE: DTLS-SRTP is not enabled...
VCCallSession [%s] %s:%d SIPCONNECTEDCONFERENCE: Need to wait for SRTP to init... (video)
VCCallSession [%s] %s:%d SIPCONNECTEDCONFERENCE: GKVoiceChatServiceSRTPEncryptionSetupError... (video)
VCCallSession [%s] %s:%d SIPCONNECTEDCONFERENCE: Need to wait for SRTP to init... (audio)
VCCallSession [%s] %s:%d SIPCONNECTEDCONFERENCE: end wait SRTP @ %.3f seconds (%08X)
VCCallSession [%s] %s:%d SIPCONNECTEDCONFERENCE: GKVoiceChatServiceSRTPEncryptionSetupError... (audio)
VCCallSession [%s] %s:%d sipCallback(SIPGENERICREPORTLOG):%s
VCCallSession [%s] %s:%d sipCallback: message %d requires no action.
VCCallSession [%s] %s:%d MediaCallback: call (%08X) is not using relay for connection %d
VCCallSession [%s] %s:%d MediaCallback: call (%08X) is upgraded from relay to P2P, relay will be torn down in handlePrimaryConnChange.
VCCallSession [%s] %s:%d MediaCallback: call (%08X) started with relay for connection %d
VCCallSession [%s] %s:%d MediaCallback: srtp key update is not supported for call (%08X).
VCCallSession [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCCallSession.m:%d: MediaCallback: notificaiton %d unknown, no action.
VCCallSession [%s] %s:%d startConnectionWithParticipantID: idsSocket and destination are invalid
VCCallSession [%s] %s:%d SKEState_CopyBlobSync(1) failed with error %d
VCCallSession [%s] %s:%d configureLegacyTransportWithInviteInfo failed: remote blob %s
VCCallSession [%s] %s:%d SKEState_Create failed with error %d
VCCallSession [%s] %s:%d SKEState_CopyBlobSync(0) failed with error %d
VCCallSession [%s] %s:%d setupEncryption
VCCallSession [%s] %s:%d noRemotePacketsTimeout = %f
VCCallSession [%s] %s:%d networkConditionsTimeoutInSeconds = %f
VCCallSession [%s] %s:%d NQ = %.3f, RTT = %.3f, TxBW = %ub/sec, PLR = %.2f%%, PLaMR = %.2f%%, signal = [%d %d %d]
VCCallSession [%s] %s:%d DTLS force set to (%d) for call (%d): 
VCCallSession [%s] %s:%d NO DTLS force set for call (%d).  We are ignoring the capabilities passed.
VCCallSession [%s] %s:%d setupPeerInfo isAudioPausedToStart = %d, isVideoPausedToStart = %d
VCCallSession [%s] %s:%d VCCallSession: notifying delegate didStop %d:%d (%d, %d)
VCCallSession [%s] %s:%d Reporting excessive cellular data usage: signalingExcessiveCellularRxBytes %llu, signalingExcessiveCellularTxBytes %llu, mediaExcessiveCellularRxBytes %llu, mediaExcessiveCellularTxBytes %llu budgetConsumingCellularTxBytes:%llu budgetConsumingCellularRxBytes:%llu
VCCallSession [%s] %s:%d We are tearing down our heartbeat!
VCCallSession [%s] %s:%d sendTimings:Key = %d, value = %d
VCCallSession [%s] %s:%d SipCallbackNotification SIPMESSAGE...%s
VCCallSession [%s] %s:%d SipCallbackNotification SKEComplete...
VCCallSession [%s] %s:%d SipCallbackNotification SKECheckRemoteCert...
VCCallSession [%s] %s:%d SKECheckRemoteCert: peerCN = '%s'
VCCallSession [%s] %s:%d Common names: %s
VCCallSession [%s] %s:%d SKECheckRemoteCert: specified peer common name not found...
VCCallSession [%s] %s:%d SipCallbackNotification SKECheckRemoteCert valid == %d...
VCCallSession [%s] %s:%d SipCallbackNotification SKEReportError...
VCCallSession [%s] %s:%d The call failed.
VCCallSession [%s] %s:%d inviteeICEResultTimer:ready to go, %d
VCCallSession [%s] %s:%d createSDP failed
VCCallSession [%s] %s:%d localMaxBandwidth: %u remoteMaxBandwidth: %u answerBandwidth: %u
VCCallSession [%s] %s:%d Baseband codec information form negotiated settings: basebandCodecType:%s, sampleRate:%u
VCCallSession [%s] %s:%d mediaControlInfoVersion = %d
VCCallSession [%s] %s:%d Failed to allocate payload list
VCCallSession [%s] %s:%d Silence Suppression using DTX payload[%d] enabled
VCCallSession [%s] %s:%d Forcing Red to be disabled
VCCallSession [%s] %s:%d Apply negotiated redPayload settings. RedPayloadType:%d, isRedEnabled:%d
VCCallSession [%s] %s:%d Failed to set audio remote RTP id
VCCallSession [%s] %s:%d Failed to apply audio settings!!! error = (%s)
VCCallSession [%s] %s:%d Video settings not found in pre-negotiated settings
VCCallSession [%s] %s:%d No valid video rules found for the current connection settings
VCCallSession [%s] %s:%d Failed to apply video settings!!! error = (%s)
VCCallSession [%s] %s:%d 
VCCallSession [%s] %s:%d failed: Couldn't create the rtp handles!!! error = (%s)
VCCallSession [%s] %s:%d failed: Couldn't prepare SRTP for the rtp handles!!! error = (%s)
VCCallSession [%s] %s:%d failed: Couldn't create the media queue handle! error = (%s)
VCCallSession [%s] %s:%d Callee: setMediaQueueStreamSettings returned NO
VCCallSession [%s] %s:%d HandoverReport: handover is %ssupported.
VCCallSession [%s] %s:%d Failed to start rate controller
VCCallSession [%s] %s:%d HandoverReport: iRAT recommendation is enabled.
VCCallSession [%s] %s:%d failed: Couldn't create the audio rtp handles!!! error = (%s)
VCCallSession [%s] %s:%d Failed to start media queue
VCCallSession [%s] %s:%d Failed to start video
VCCallSession [%s] %s:%d Failed to start media!!! error = (%s)
VCCallSession [%s] %s:%d input SDP was NULL
VCCallSession [%s] %s:%d Couldn't create the rtp handles!!! error = (%s)
VCCallSession [%s] %s:%d Couldn't prepare SRTP for the rtp handles!!! error = (%s)
VCCallSession [%s] %s:%d Couldn't create the media queue handle! error = (%s)
VCCallSession [%s] %s:%d Callee: negotiatePayloadWithError returned NO with error %s
VCCallSession [%s] %s:%d Callee: setRTPPayloadWithError returned NO with error %s
VCCallSession [%s] %s:%d imageAttrForAnswer returned an error
VCCallSession [%s] %s:%d Callee: createSDP failed with error %s
VCCallSession [%s] %s:%d Couldn't create the audio transmitter!!! error = (%s)
VCCallSession [%s] %s:%d Video payload OVERRIDE to %d
VCCallSession [%s] %s:%d Override unrecognized payload
VCCallSession [%s] %s:%d Video receive payload OVERRIDE to %d
VCCallSession [%s] %s:%d Failed to allocate image attributes memory for image send
VCCallSession [%s] %s:%d Failed to allocate image attributes memory for image receive
VCCallSession [%s] %s:%d Failed to allocate image attributes memory for image send count
VCCallSession [%s] %s:%d Failed to allocate image attributes memory for image receive count
VCCallSession [%s] %s:%d sendSIPInviteWithError: createSDP failed with error %s
VCCallSession [%s] %s:%d sendSIPInviteWithError failed state: no longer attempting to connect! error = (%s)
VCCallSession [%s] %s:%d sendSIPInviteWithError failed: Couldn't create the rtp handles!!! error = (%s)
VCCallSession [%s] %s:%d sendSIPInviteWithError failed: Couldn't prepare SRTP for the rtp handles!!! error = (%s)
VCCallSession [%s] %s:%d sendSIPInviteWithError failed: Couldn't create the media queue handle! error = (%s)
VCCallSession [%s] %s:%d sendSIPInviteWithError failed: SDP string is empty! error = (%s)
VCCallSession [%s] %s:%d sendSIPInviteWithError failed: couldn't establish connection with SDP! error = (%s)
VCCallSession [%s] %s:%d Load switch alwaysOnAudioRedundancyEnabled %d
VCCallSession [%s] %s:%d Load switch cellularLowTierRedundancyEnabled %d
VCCallSession [%s] %s:%d Load switch wifiLowTierRedundancyEnabled %d
VCCallSession [%s] %s:%d %s: %s
VCCallSession [%s] %s:%d VCCallSession: FAILED TO PREPARE ENCRYPTION FOR AUDIO...
VCCallSession [%s] %s:%d VCCallSession: FAILED TO PREPARE ENCRYPTION FOR VIDEO...
VCCallSession [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCCallSession.m:%d: MediaQueue_CreateHandle failed (%08X)
VCCallSession [%s] %s:%d matched FeaturesString = [%s], for payload %d
VCCallSession [%s] %s:%d setMatchedFeaturesString returned NO for payload %d
VCCallSession [%s] %s:%d parseSDP failed
VCCallSession [%s] %s:%d SDP has basebandCodecType:%s, sampleRate:%d
VCCallSession [%s] %s:%d AllowAudioRecording: %d (local: %d remote: %d)
VCCallSession [%s] %s:%d isRTCPFBEnabled = %d
VCCallSession [%s] %s:%d Could not find matching codec
VCCallSession [%s] %s:%d Not using secondary audio, no codecs found
VCCallSession [%s] %s:%d Could not find matching video codec
VCCallSession [%s] %s:%d SetBWEstMode critical failure.
VCCallSession [%s] %s:%d ===== Actual Video Payload (%d) =====
VCCallSession [%s] %s:%d localMaxBandwidth: %d remoteMaxBandwidth: %d answerBandwidth: %d
VCCallSession [%s] %s:%d filterFeatureListForPayloads: Unexpected for %s count: %d
VCCallSession [%s] %s:%d failed: result=%x
VCCallSession [%s] %s:%d RTPSetThrottlingAudioInterval returned %d
VCCallSession [%s] %s:%d negotiatePayloadWithError returned NO with error %s
VCCallSession [%s] %s:%d setRTPPayloadWithError returned NO with error %s
VCCallSession [%s] %s:%d setMediaQueueStreamSettings returned NO
VCCallSession [%s] %s:%d VCAudioReceiver_Start returned NO
VCCallSession [%s] %s:%d (state == GKVoiceChatServiceStateCallerAttemptingToConnect = %d, sipState = %d
VCCallSession [%s] %s:%d createAudioTransmitter returned NO with error %s
VCCallSession [%s] %s:%d sendSIPInvite returned NO error = %s
VCCallSession [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCCallSession.m:%d: Benign Error (possibly not): We started audio before we negotiated our codec.
VCCallSession [%s] %s:%d disableAudio is set to True, not starting audio!
VCCallSession [%s] %s:%d alreadyStarted = %d, isEnabled = %d
VCCallSession [%s] %s:%d SAME device role %d set, No-Op
VCCallSession [%s] %s:%d Invalid transition from role %d to %d
VCCallSession [%s] %s:%d Updating from role %d to %d. shouldRestartAudio %d
VCCallSession [%s] %s:%d %@(%p) Updating from role %d to %d. shouldRestartAudio %d
VCCallSession [%s] %s:%d Finished starting audio didStart[%d]
VCCallSession [%s] %s:%d Finished stopping audio didStop[%d]
VCCallSession [%s] %s:%d stopping audio
VCCallSession [%s] %s:%d stop audio timed out
VCCallSession [%s] %s:%d starting audio
VCCallSession [%s] %s:%d updateDeviceRole: start audio timed out
VCCallSession [%s] %s:%d Finished update to role %d
VCCallSession [%s] %s:%d Sending VCCallingModeTopic %s
VCCallSession [%s] %s:%d Getting cookie for payload type %d
VCCallSession [%s] %s:%d Could not find server bag config for %@. Using default value %d
VCCallSession [%s] %s:%d Found enableTFRCLog YES. Enable rate control log
VCCallSession [%s] %s:%d Local device uses cellular:[%s], remote device uses cellular:[%s]
VCCallSession [%s] %s:%d Current connection number %d, enableBBDump %d
VCCallSession [%s] %s:%d Load switch allowBurstyLossRampDownEnabled %d
VCCallSession [%s] %s:%d Load switch lowFpsVideoEnabled %d
VCCallSession [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCCallSession.m:%d: AFRCCreateHandle failed (%08X)
VCCallSession [%s] %s:%d Starting AFRC
VCCallSession [%s] %s:%d Starting VCRateController (%p) and VCMediaController (%p)
VCCallSession [%s] %s:%d Failed to start AFRC
VCCallSession [%s] %s:%d Failed to start VCRC
VCCallSession [%s] %s:%d AMR packetsPerBundle[%d] octetAligned[%d] dtxEnabled[%d]
VCCallSession [%s] %s:%d EVS dtxEnabled[%d] evsSIDPeriod[%d]
VCCallSession [%s] %s:%d Selecting PL_AAC_ELD/24000!
VCCallSession [%s] %s:%d Selecting PL_AAC_ELD/22050!
VCCallSession [%s] %s:%d Selecting PL_AAC_ELD/16000!
VCCallSession [%s] %s:%d Selecting PL_G722!
VCCallSession [%s] %s:%d Selecting PL_OPUS
VCCallSession [%s] %s:%d Selecting PL_CN
VCCallSession [%s] %s:%d Selecting PL_SPEEX_8K
VCCallSession [%s] %s:%d Selecting PL_SPEEX_16K
VCCallSession [%s] %s:%d Selecting MULAW!
VCCallSession [%s] %s:%d Selecting PL_AMR_16000!
VCCallSession [%s] %s:%d Selecting PL_AMR_8000!
VCCallSession [%s] %s:%d Selecting PL_EVS_32000!
VCCallSession [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCCallSession.m:%d: RTPGetLocalSSRC for audio failed (%08X) handle = %p
VCCallSession [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCCallSession.m:%d: RTPGetLocalSSRC for video failed (%08X)
VCCallSession [%s] %s:%d Failing due to no remote packets.  local callid: %x
VCCallSession [%s] %s:%d Finished sip end action %d
VCCallSession [%s] %s:%d SIPSetDoKeyExchange = %d, ident = %s, peerCN =%s, caps = %s
VCCallSession [%s] %s:%d Failed retreiving the localIdentity from APS
VCCallSession [%s] %s:%d setLocalIdentityForKeyExchange: SecIdentityCopyCertificate error
VCCallSession [%s] %s:%d setLocalIdentityForKeyExchange: display common name(s) from local cert...
VCCallSession [%s] %s:%d %s
VCCallSession [%s] %s:%d setLocalIdentityForKeyExchange: no common name(s) found in local cert...
VCCallSession [%s] %s:%d setLocalIdentityForKeyExchange: done displaying common name(s) from local cert...
VCCallSession [%s] %s:%d setLocalIdentityForKeyExchange: no local cert found...
VCCallSession [%s] %s:%d pickFeaturesStringForPayload: DID NOT FIND payload %d.
VCCallSession [%s] %s:%d pickFeaturesStringForPayload for %d (%s) from %s: %s
VCCallSession [%s] %s:%d setMatchedFeaturesString: local=[%s] remote=[%s]
VCCallSession [%s] %s:%d NO matched featuresString
VCCallSession [%s] %s:%d TCP maxBitrateForConnectionType is %d
VCCallSession [%s] %s:%d Use general RelayBitRate for TCP: %d
VCCallSession [%s] %s:%d UDP maxBitrateForConnectionType is %d
VCCallSession [%s] %s:%d @=@ Health: VCCallSession-AudioOnly audioTxBitrate=%5.3f kbps, audioRxBitrate=%5.3f kbps, callID=%d
VCCallSession [%s] %s:%d Not sending message. codecType = %s, codecRate = %s
VCCallSession [%s] %s:%d %@(%p) Not sending message. codecType = %s, codecRate = %s
VCCallSession [%s] %s:%d Invalid VCCallSession packet multiplex mode
VCCallSession [%s] %s:%d Stop audio failed with error: %s
VCCallSession [%s] %s:%d disconnect: callID = %d state = %d, stateIsCallee = %d, didRemoteCancel = %d, didSend200OK = %d, error = %@
VCCallSession [%s] %s:%d Disconnect message was sent %@
VCCallSession [%s] %s:%d Failed to send disconnect message
VCCallSession [%s] %s:%d Ending the Call even though we haven't finished notifying the client that we have started
VCCallSession [%s] %s:%d VCCallSession callID[%u] receives message :%s
VCCallSession [%s] %s:%d VCCallSession callID[%u] received message about BasebandCodecChange type :%s, sampleRate %u
VCCallSession [%s] %s:%d VCCallSession callID[%u] received 'disconnect' message from remote participant '%@'
VCCallSession [%s] %s:%d HandoverReport: VCCallSession callID[%d] received message about remote candidate change:%s
VCCallSession [%s] %s:%d VCCallSession callID[%d] received message about PIP State change:%@
VCCallSession [%s] %s:%d VCCallSession received message about CellTech change :%d, remote bitrate %u
VCCallSession [%s] %s:%d moment message %s
VCCallSession [%s] %s:%d setupMomentsMessages message is nil
VCCallSession [%s] %s:%d Preferred interface message %s
VCCallSession [%s] %s:%d setupPreferredInterfaceMessage message is nil
VCCallSession [%s] %s:%d SymptomReporter: isLocalInitiated:%d isLocalSideOnly:%d message:%s, symptomID = %d, groupID = %@
VCCallSession [%s] %s:%d groupID is nil, return
VCCallSession [%s] %s:%d SymptomReporter: Failed to send symptom message %s to participantID %@, requesting only the local side
VCCallSession [%s] %s:%d WRM Alert state update message: %s
VCCallSession [%s] %s:%d setupWRMAlertStateUpdateMessage message is invalid
VCCallSession [%s] %s:%d setupWRMAlertStateUpdateMessage message is nil
VCCallSession [%s] %s:%d WRM: Get remote iRAT Coex Metrics %s
VCCallSession [%s] %s:%d VCCallSession callID[%u] received data='%@' from remote participant '%@'
VCCallSession [%s] %s:%d HandoverReport: sending SIP message to inform ipChange %s
VCCallSession [%s] %s:%d VCRC targetBitrateDidChange:%d, rateChangeCounter:%d callID %d
VCCallSession [%s] %s:%d VCRC mediaSuggestion:[%s,%s,%s,%s,%s,%s,%s]
VCCallSession [%s] %s:%d *pSendCount is zero (payload=%d)
VCCallSession [%s] %s:%d *pReceiveCount is zero (payload=%d)
VCCallSession [%s] %s:%d Removing resolution %dx%d %f for SDP
VCCallSession [%s] %s:%d Invalid connection type %d
VideoConference [%s] %s:%d 
VideoConference [%s] %s:%d %@(%p) 
VideoConference [%s] %s:%d Tearing down the natObserver.
VideoConference [%s] %s:%d session.requiresWifi = %d
VideoConference [%s] %s:%d New session array = %s
VideoConference [%s] %s:%d >>>>> ERROR: VCCallSession is nil (in VideoConference) <<<<<
VideoConference [%s] %s:%d >>>>> Relaying outgoing ARPL data from VideoConferenceManager to VCCallsession with callID=%d (in VideoConference) <<<<<
VideoConference [%s] %s:%d warmupForCall: Setting up the natObserver. (requiresWifi: %d)
VideoConference [%s] %s:%d Something is wrong with getting the snatmapserver
VideoConference [%s] %s:%d Getting natType: %d [requiresWifi: %d]
VideoConference [%s] %s:%d inviteDataForParticipantID skipReachingServers:%d
VideoConference [%s] %s:%d Error to verify loaded Server Bags %@
VideoConference [%s] %s:%d inviteDataForParticipantID:callID %d
VideoConference [%s] %s:%d inviteDataForParticipantID: session.requiresWifi = %d
VideoConference [%s] %s:%d inviteDataForParticipantID: Setting natType %d for callID %d
VideoConference [%s] %s:%d VideoConference: CALLID MISMATCH %p client callID %ld internal callID %u
VideoConference [%s] %s:%d Returning invite data: %s
VideoConference [%s] %s:%d connection-data-returned
VideoConference [%s] %s:%d natTypeForCallSessions(%s): natTypeDictionary %s. natType is %d.
VideoConference [%s] %s:%d setPauseAudio called...session = %s, callID = %d
VideoConference [%s] %s:%d setPeerCN: called...session = %s, peerCN = %s callID = %d
VideoConference [%s] %s:%d setSessionID: called...session = %s, sessionID = %s callID = %d
VideoConference [%s] %s:%d setPeerReportingID: called...peerReportingID = %s, session = %s, sessionID = %s callID = %d
VideoConference [%s] %s:%d audio for the session should not be running
VideoConference [%s] %s:%d deregisterForVideoFramesWithDeviceRole failed; self = %p
VideoConference [%s] %s:%d registerForVideoFramesWithDeviceRole failed; self = %p
VideoConference [%s] %s:%d self = %p, callID = %d, capabilities = %@, _deviceRole = %d
VideoConference [%s] %s:%d _startedSessions is not empty
VideoConference [%s] %s:%d (%p) reconfigured audioIO=%p operatingMode:%d deviceRole:%d direction:%d
VideoConference [%s] %s:%d Failed to create the spatial metadata. status=%08x
VideoConference [%s] %s:%d Failed to allocate spatial metadata entry. status=%08x
VideoConference [%s] %s:%d Failed to retrieve the channel index. status=%08x
VideoConference [%s] %s:%d Failed to register the spatial metadata. status=%08x
VideoConference [%s] %s:%d startConnectionWithParticipantID called...session = %s, callID = %d
VideoConference [%s] %s:%d startConnectionWithParticipantID-completed
VideoConference [%s] %s:%d setCurrentFocus: updateLastReceivedPacket at focus for session: %p
VideoConference [%s] %s:%d setCurrentFocus: updateLastReceivedPacket at client for session: %p
VideoConference [%s] %s:%d stopAllCalls-completed
VideoConference [%s] %s:%d stopCallID-completed
VideoConference [%s] %s:%d cancelCallID-completed
VideoConference [%s] %s:%d remoteCancelledCallID-completed
VideoConference [%s] %s:%d VideoConference setPacketsPerBundle %d -> %d
VideoConference [%s] %s:%d processRelayRequestResponse:session %s
VideoConference [%s] %s:%d processRelayUpdate:session %s
VideoConference [%s] %s:%d IOProc:  Missing grabbing lock onCaptureSound at %u
VideoConference [%s] %s:%d VideoConference[%p] IOProc:  Missing grabbing lock onPlaySound at %u
VideoConference [%s] %s:%d START TALKING at %u
VideoConference [%s] %s:%d STOP TALKING at %u
VideoConference [%s] %s:%d Timestamp jumped by %d, %d to %d at %f. host time jump %f (%d)
VideoConference [%s] %s:%d Detected large timestamp jump by %d, from %d to %d. host time jump %f (%d)
VideoConference [%s] %s:%d pullAudioSamples() took a long time = %f
VideoConference [%s] %s:%d sipCallbackNotification:%d
VideoConference [%s] %s:%d shouldPrioritizeParticipantIDForSIPInvite %d
VideoConference [%s] %s:%d sipCallbackNotification:session = %s
VideoConference [%s] %s:%d %s matches session %s for %s
VideoConference [%s] %s:%d returns %s out of %s
VideoConference [%s] %s:%d sessionForIncomingParticipantID returned: %s
VideoConference [%s] %s:%d stopCallID: %d, didRemoteCancel = %d, session = %s
VideoConference [%s] %s:%d cancelCallID: %d, session = %s
VideoConference [%s] %s:%d defaultCleanupSession!
VideoConference [%s] %s:%d threadSafeCleanupSession!
VideoConference [%s] %s:%d threadSafeCleanupSession end!
VideoConference [%s] %s:%d cleanupSession: session = %s, session.state == GKVoiceChatServiceStateRunning = %d
VideoConference [%s] %s:%d InterruptMe:%s Begin Pausing audio session %s
VideoConference [%s] %s:%d InterruptMe:%s End Pausing audio session  done%s
VideoConference [%s] %s:%d VideoConference: didStart when call is not running? session %s
VideoConference [%s] %s:%d didStart:session %s, didStart = %d, connType = %u, InterfaceType = %s, %s, error = %s, claimed Session = %s
@:@ VideoConference-didStart
VideoConference [%s] %s:%d @:@ VideoConference-didStart (%p) operatingMode=%d
VideoConference [%s] %s:%d VideoConference: clean up session (call ID %d) with delay %ld, error %s
VideoConference [%s] %s:%d VideoConference: notifying delegate of didStop for call ID %d
VideoConference [%s] %s:%d VCCallSession callID[%d] call end audio metrics: %s
VideoConference [%s] %s:%d >>>>> Relaying incoming ARPL data from VCCallSession to VideoConferenceManager with callID=%d (in VideoConference) <<<<<
VideoConference [%s] %s:%d >>>>> DATA ERROR (in VideoConference) <<<<<
VideoConference [%s] %s:%d Unsupported data received from callId=%d with messageType=%u
VideoConference [%s] %s:%d session=%s
VideoConference [%s] %s:%d %@(%p) session=%s
VideoConference [%s] %s:%d Forced interface change
VideoConference [%s] %s:%d NATTypeDictionaryUpdated: requiresWifi: %d  natTypeDictionary %s
VideoConference [%s] %s:%d Setting natType %d for callID %d
VCRC [%s] %s:%d Pause VCRateControl algorithm
VCRC [%s] %s:%d Resume VCRateControl algorithm
 [%s] %s:%d startConnectionWithBlob for P2P failed with error %s
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCTransportSessionLegacy.m:%d: VCCallSession: StartConnectionCheck failed(%X)
 [%s] %s:%d Force Relay is set for call (%d)
 [%s] %s:%d Relay: processRelayRequestResponseDict:%s, %d, %d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCTransportSessionLegacy.m:%d: processRelayRequestResponseDict bailing because relay is not allowed.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCTransportSessionLegacy.m:%d: processRelayRequestResponseDict bailing because relayState is %d
 [%s] %s:%d processRelayRequestResponseDict: %s relay.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCTransportSessionLegacy.m:%d: processRelayRequestResponseDict: can't find relay type info in the dictionary
 [%s] %s:%d Unable to create TCPTunnel: %s
 [%s] %s:%d %@(%p) Unable to create TCPTunnel: %s
 [%s] %s:%d Unabled to create UDP relay blob: %s
 [%s] %s:%d %@(%p) Unabled to create UDP relay blob: %s
 [%s] %s:%d Relay: processRelayUpdateDict:%s, %d, %d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCTransportSessionLegacy.m:%d: processRelayUpdateDict bailing because relay is not allowed.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCTransportSessionLegacy.m:%d: processRelayUpdateDict: wait until allocation is finished %d
 [%s] %s:%d processRelayUpdateDict: %s relay, %d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCTransportSessionLegacy.m:%d: processRelayUpdateDict: can't find relay type info in the dictionary
 [%s] %s:%d TCPTUNNEL: relayUpdateDict %s
 [%s] %s:%d HandoverReport: secondary relay dispatch timed out after %5.2f sec. Start relay setup
 [%s] %s:%d HandoverReport: secondary relay dispatch timer is deleted.
 [%s] %s:%d HandoverReport: handlePrimaryConnChange, setup initial secondary relay
 [%s] %s:%d notifyDelegateToCancelRelay: No need, relay state %d.
 [%s] %s:%d notifyDelegateToCancelRelay: Resetting relay state from %d.
 [%s] %s:%d HandoverReport: setupSecondaryRelayForCall
 [%s] %s:%d HandoverReport: setupSecondaryRelay fail, relayState %d
 [%s] %s:%d MediaCallback: link doesnot match(%d, %d)
 [%s] %s:%d MediaCallback: call (%08X) has optimal P2P primary: cancel preemptive relay
 [%s] %s:%d MediaCallback: call (%08X) has optimal P2P primary: setup initial secondary relay
 [%s] %s:%d MediaCallback: not initial secondary relay, return, let ProcessRemoteIPChange setup secondary relay
 [%s] %s:%d MediaCallback: call (%08X) has optimal relay primary: setup secondary relay
 [%s] %s:%d MediaCallback: add a pending relay count = 1 relayFlag: %d, let handlePrimaryConnChange start initial secondary relay
 [%s] %s:%d initiateRelayRequest: caller start relay in %f seconds
 [%s] %s:%d initiateRelayRequest bailing because already connected
 [%s] %s:%d initiateRelayRequest bailing because relay has already started %d
 [%s] %s:%d initiateRelayRequest bailing because transportSession has been stopped
 [%s] %s:%d Remote ICE Version:%u, handover is %ssupported.
 [%s] %s:%d networkStateDidChange: Failed updating interface list %x
 [%s] %s:%d networkStateDidChange: checking for %s.
 [%s] %s:%d networkStateDidChange: no need to collect blob: %d, %d, %d.
 [%s] %s:%d networkStateDidChange: Error %x getting connection data!
 [%s] %s:%d HandoverReport: Relay state: %d, local blob is updated %s
 [%s] %s:%d HandoverReport: processRemoteIPChange: callID:%u length:%d
 [%s] %s:%d HandoverReport: Bad blob version number: %d
 [%s] %s:%d connectionResultCallback: pConnResult = %p, didReceiveICEPacket = %d resultCount = %d, secretKey = %p, skeResult = %d
 [%s] %s:%d Key exchange failed with error: %d
 [%s] %s:%d HandoverReport: P2P established, no need for TCP relay.
 [%s] %s:%d TCPTUNNEL: continue with ChannelBinding, %s.
 [%s] %s:%d TCP Channel is set up, time out ICE right away.
 [%s] %s:%d HandoverReport: Remove loopback connection %s
 [%s] %s:%d call [transport getLoopbackIP]...
 [%s] %s:%d done [transport getLoopbackIP]...
 [%s] %s:%d call tunnel setVTPIP...
 [%s] %s:%d done tunnel setVTPIP...
 [%s] %s:%d HandoverReport: Add loopback connection %s
 [%s] %s:%d Didn't find valid remote candidate ID, cannot create relay dictionary
 [%s] %s:%d VCCallSession: preparing for secondary connection, %x, %x
 [%s] %s:%d createInitiateRelayDictionaryForCall: No new candidate for secondary connection
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCTransportSessionLegacy.m:%d: createRelayUpdateDictionary: requestResponse is %s
 [%s] %s:%d createRelayUpdateDictionary: dict %s
 [%s] %s:%d Relayconnectiondata = %s
 [%s] %s:%d The max blob size allowed = %d
 [%s] %s:%d Error %x getting sip connection data!
 [%s] %s:%d ICE_E_NOTFOUND was received, using default connection data
 [%s] %s:%d connectDataSizeInBytes = %d, connectionData = %p, transport = %p
 [%s] %s:%d SIPGetConnectionData failed, retrying
 [%s] %s:%d VCCallSession generateConnectionData: timed out
 [%s] %s:%d [transport setICETimeout] timeout failed with %08x
 [%s] %s:%d number of connection is %d
 [%s] %s:%d NULL bundlerOut
 [%s] %s:%d CMSimpleQueueCreate failed (%d)
 [%s] %s:%d NULL bundler
 [%s] %s:%d NULL mediaPacket
 [%s] %s:%d mediaPacket->next is not NULL
 [%s] %s:%d mediaPacket->dataSizeByte(%u) is bigger than bundler->currentMTUBytes(%u)
 [%s] %s:%d Failed to add media packet to bundler (%d)
 [%s] %s:%d NULL outputBlockHandler
 [%s] %s:%d Output Block failed (%d)
 [%s] %s:%d Reach of number of max packets
VCTextReceiver [%s] %s:%d Failed to create the jitter buffer
VCTextReceiver [%s] %s:%d Failed to initalize the text receiver thread
VCTextReceiver [%s] %s:%d VCTransportStreamRunLoopVTPCreate failed %d
VCTextReceiver [%s] %s:%d VCTextReceiver cleanup DONE!
VCTextReceiver [%s] %s:%d 
VCTextReceiver [%s] %s:%d %@(%p) 
VCTextReceiver [%s] %s:%d Failed to start jitter buffer
VCTextReceiver [%s] %s:%d received packet time[%f]
VCTextReceiver [%s] %s:%d RTPReceiveRTP returned[%x] sleeping 15000usecs??
VCTextReceiver [%s] %s:%d Received an error %x
VCTextReceiver [%s] %s:%d Receiving RTP packet
VCTextReceiver [%s] %s:%d %@(%p) Receiving RTP packet
VCTextReceiver [%s] %s:%d Failed to retrieve RTCP packet. Error:%x
VCTextReceiver [%s] %s:%d Received a packet with unknown payload: %d
VCTextReceiver [%s] %s:%d Payload not supported:%d
VCTextReceiver [%s] %s:%d Failed to enqueue packet
VCTextReceiver [%s] %s:%d Unrecognized payload type: %d
VCTextReceiver [%s] %s:%d Unable to fit audio data into the audioFrame buffer. Data size: %d, padding len: %u
VCTextReceiver [%s] %s:%d Failed to create frame. Data size: %d, padding len: %u
VCTextReceiver [%s] %s:%d Unexpected payload type: %u
VCTextReceiver [%s] %s:%d Discarding empty text frame
VCTextReceiver [%s] %s:%d Received text:%@ length:%lu
VCTextReceiver [%s] %s:%d %@(%p) Received text:%@ length:%lu
 [%s] %s:%d >>>>> Relaying incoming ARPL data from VideoConference to AVConference via XPC (in VideoConferenceManager) <<<<<
 [%s] %s:%d >>>>> DATA ERROR (in VideoConferenceManager) <<<<<
 [%s] %s:%d NetworkAgent is being asserted by SIP
 [%s] %s:%d SOMETHING WENT WRONG MAKING THE SIP HANDLE!%08x
 [%s] %s:%d SIP Handle created:0x%x
 [%s] %s:%d VideoConferenceManager:  starting sip with refCount = %d
 [%s] %s:%d SOMETHING WENT WRONG IN SIP LISTEN! %08x
 [%s] %s:%d SIPCallback tried to use stale/invalid handle %d. actual is %d
 [%s] %s:%d Entering cleanupVTP...with isVTPInitialized = %d and sip is invalid = %d
 [%s] %s:%d Finished cleanupVTP...
 [%s] %s:%d VideoConferenceManager:  stopping sip with refCount = %d
 [%s] %s:%d NetworkAgent is being un-asserted by SIP
 [%s] %s:%d SIP Handle closed:0x%x
 [%s] %s:%d NetworkAgent is being asserted by addVideoConference '%@'
 [%s] %s:%d NetworkAgent is being un-asserted by removeVideoConference '%@'
 [%s] %s:%d InterruptMe: (%d) pauseVideoConferences begin
 [%s] %s:%d InterruptMe: (%d) Pausing audio and video for conference %s
 [%s] %s:%d SIPCallback: %p, dwCallID = %d (%d)
 [%s] %s:%d SIPCallback: VCManager %p matched VC %s to get callee callID
 [%s] %s:%d VideoConferenceManager: CellConditionChangeCallback
 [%s] %s:%d VCM:VTPCallback: context (%p) notification (%d) data (%p) optional (%p).
 [%s] %s:%d VCM: Receive remote-no-remote-packet notification, %f. callID %d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VideoConferenceManager.m:%d: VTPCallback error: unknown notificaiton %d.
 [%s] %s:%d Created VCControlChannelTransaction object for sessionID='%d', participantID='%@'
 [%s] %s:%d %@(%p) Created VCControlChannelTransaction object for sessionID='%d', participantID='%@'
 [%s] %s:%d Dealloc VCControlChannelTransaction object for sessionID='%d', participantID='%@'
 [%s] %s:%d %@(%p) Dealloc VCControlChannelTransaction object for sessionID='%d', participantID='%@'
 [%s] %s:%d flushTransaction: transaction has been flushed for sessionID='%d', participantID='%@'
 [%s] %s:%d %@(%p) flushTransaction: transaction has been flushed for sessionID='%d', participantID='%@'
 [%s] %s:%d transactionConfirmedByParticipantID: message has been ACKed for sessionID='%d', participantID='%@'
 [%s] %s:%d %@(%p) transactionConfirmedByParticipantID: message has been ACKed for sessionID='%d', participantID='%@'
 [%s] %s:%d transactionConfirmedByParticipantID: confirmation mismatch: sessionID '%d'!='%d', participantID '%@'!='%@'
 [%s] %s:%d %@(%p) transactionConfirmedByParticipantID: confirmation mismatch: sessionID '%d'!='%d', participantID '%@'!='%@'
 [%s] %s:%d Stop sending message to remote participant '%@' which is not part of session '%d'
 [%s] %s:%d %@(%p) Stop sending message to remote participant '%@' which is not part of session '%d'
 [%s] %s:%d Transaction flushed. Not sending message on attempt '%d', sessionID='%d', participantID='%@'
 [%s] %s:%d %@(%p) Transaction flushed. Not sending message on attempt '%d', sessionID='%d', participantID='%@'
 [%s] %s:%d Network failed to send message on attempt '%d', sessionID='%d', participantID='%@'
 [%s] %s:%d %@(%p) Network failed to send message on attempt '%d', sessionID='%d', participantID='%@'
 [%s] %s:%d User-specified timeout '%@' has expired. Aborting confirmation wait
 [%s] %s:%d %@(%p) User-specified timeout '%@' has expired. Aborting confirmation wait
 [%s] %s:%d Attempt '%d' timed out. Aggregated wait is '%f', useFastRetries=%d
 [%s] %s:%d %@(%p) Attempt '%d' timed out. Aggregated wait is '%f', useFastRetries=%d
 [%s] %s:%d Message has been confirmed for sessionID='%d' by remote participant participantID='%@'
 [%s] %s:%d %@(%p) Message has been confirmed for sessionID='%d' by remote participant participantID='%@'
 [%s] %s:%d Finished sending message to participantID='%@' for sessionID='%d', result='%s', attempt='%d', aggregated wait='%f'
 [%s] %s:%d %@(%p) Finished sending message to participantID='%@' for sessionID='%d', result='%s', attempt='%d', aggregated wait='%f'
 [%s] %s:%d sendUnreliableMessage: attempt to send message to remote participant '%@' which is not part of session '%d'
 [%s] %s:%d %@(%p) sendUnreliableMessage: attempt to send message to remote participant '%@' which is not part of session '%d'
 [%s] %s:%d Message length is too large (header[%d] data[%d]) to be sent. session[%d] particiapnt[%@] 
 [%s] %s:%d %@(%p) Message length is too large (header[%d] data[%d]) to be sent. session[%d] particiapnt[%@] 
 [%s] %s:%d sendUnreliableMessage: send message to remote participant '%@' which is part of session '%d'
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: Failed to create VTP memory allocators
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: CreateHandle failed (%d)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: VTPRecvProc thread failed (%d)
 [%s] %s:%d WMM is %s.
 [%s] %s:%d Override DisableWMM due to FT traffic class is set.
 [%s] %s:%d Force FaceTime traffic class to (%d).
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: Invalid FaceTime traffic class value (%d), ignore.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: VTPRecvProc thread(%p) started. [g_hVTP: %p]
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: VTP_Cleanup failed due to invalid handle. [g_hVTP: %p]
 [%s] %s:%d VTPRecvProc thread(%p) end...
 [%s] %s:%d removed all vfd from the list
 [%s] %s:%d preferredSendQueue is NULL
 [%s] %s:%d Failed due to invalid handle
 [%s] %s:%d NWConnection should not be nil
 [%s] %s:%d Non-UDP protocol '%d' is not supported
 [%s] %s:%d calloc(%d) failed
 [%s] %s:%d VTP_GetVFD returned invalid handle.
 [%s] %s:%d new vfd(%d)->fd(%d), and add to list
 [%s] %s:%d VTP_DuplicateVFD failed due to invalid handle
 [%s] %s:%d VTP_DuplicateVFD failed
 [%s] %s:%d Invalid VTP handle.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: VTP_Socket failed due to invalid handle.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: fd(%d) > FD_SETSIZE
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: VTP_GetVFD returned invalid handle.
 [%s] %s:%d VTP set shouldLogFDsAtTimeout: %d with vfd:%d, fileDescriptor:%d
 [%s] %s:%d VTP create VFDList failed with errno %d
 [%s] %s:%d VTP_SetPayloadList failed due to invalid handle.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: VTP_SetPayloadList failed to alloc.
 [%s] %s:%d VTP_SetPayloadList for vfd[%d]: %i payloads:%s
 [%s] %s:%d VTP_SetSocketMode failed due to invalid input mode.
 [%s] %s:%d VTP_SetSocketMode failed due to invalid handle.
 [%s] %s:%d VTP_SetPktType failed due to invalid handle.
 [%s] %s:%d VTP_AddPktType failed due to invalid handle.
 [%s] %s:%d VTP_RemovePktType failed due to invalid handle
 [%s] %s:%d VTP_Getsockname failed due to invalid handle.
 [%s] %s:%d VTP_SetRTPSSRC failed due to invalid handle.
 [%s] %s:%d Invalid transport session ID
 [%s] %s:%d VTP_SetTransportSessionID failed due to invalid handle.
 [%s] %s:%d VTP_Setsockopt failed due to invalid handle.
 [%s] %s:%d VTP handle is invalid
 [%s] %s:%d VTP_Close failed due to invalid handle.
 [%s] %s:%d removed vfd (%d) from the list
 [%s] %s:%d VTP_Bind failed due to invalid handle.
 [%s] %s:%d All binding tries failed. Trying a random port...
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: bind failed(%d)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: VTP_Sendto failed due to invalid parameter.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: VTP_Sendto failed due to invalid packet type (%d).
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: VTP_Sendto failed due to invalid handle.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: DTLS_Write failed %08X.
 [%s] %s:%d VTP_Sendto: isICEPacket = 1  mbLocal = %s, mbLocalIsCellular = %d, mbDst = %s, matchedType = %d, shouldCountBytes = %d, length = %lu, numResult = %d, isSecondaryCellular = %d
 [%s] %s:%d HandoverReport: matching localIP: %s
 [%s] %s:%d HandoverReport: matching vfd, %s
 [%s] %s:%d got a NULL VPKTFlag
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: %s: failed due to invalid handle.
 [%s] %s:%d got a NULL datagramsVPKTFlag
 [%s] %s:%d got a NULL datagramsLength
 [%s] %s:%d got a NULL datagramsBuffer
 [%s] %s:%d got a bad datagramsCount %d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: Failed due to invalid handle
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: callID should not be 0 when sending IDS compound packet
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: index=%d, statsID = %d
 [%s] %s:%d Failed to retrieve VTP handle.
 [%s] %s:%d VTP_Recvfrom failed due to invalid handle.
 [%s] %s:%d VTP_Recvfrom failed due to no real socket found for vfd
 [%s] %s:%d VTP_Recvfrom failed due to socket already closed
 [%s] %s:%d VTP_Recvfrom failed to allocate packet info
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: VTP_SetAFRCRecvMode failed due to invalid handle.
 [%s] %s:%d VTP_SetAFRC failed due to invalid handle.
 [%s] %s:%d VTP_NotifyAFRCRxEstimate INVALID_HANDLE
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: VTP_NotifyAFRCRxEstimate
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: Failed due to invalid parameter.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: Failed VTP check-in
 [%s] %s:%d Successfully added new vfd set with id: %d
 [%s] %s:%d Failed to add new vfd set.
 [%s] %s:%d Failed to copy readFDs.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: Failed VTP check-in.
 [%s] %s:%d Successfully removed vfd set with id: %d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: VTP_Select failed due to invalid parameter.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: VTP_GetSendRecvStats failed due to invalid handle.
 [%s] %s:%d VTP_GetSendRecvStats %lld/%lld
 [%s] %s:%d VTP_SetCellularUniqueTag failed due to invalid handle.
 [%s] %s:%d VTP_SetPktTag: invalid tag index requested '%d'. Ignoring
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: VTP_SetRTPSrc failed due to invalid handle.
 [%s] %s:%d VTP_SetRTPSrc for callID(%08X) local[%s] dst[%s].
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: RealSocketForConnectionResult returned invalid socket
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: ioctl(SIOCSIFLOG) for interface %s failed with error %d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: VTPCallback failed due to undefined pointer.
 [%s] %s:%d VTPCallback failed due to invalid VTP handle [g_hVTP:%p]
 [%s] %s:%d VTP_DetectNAT64Prefix failed due to invalid handle.
 [%s] %s:%d Interface %s (VFD %d) IS behind NAT
 [%s] %s:%d Interface %s (VFD %d) ISNOT behind NAT (result %d, local is IPv6 %d, isNoneZero %d)
 [%s] %s:%d VTP registered connectionManager %p with callID %d
 [%s] %s:%d VTP de-registered connectionManager with callID %d, remaining items number %ld
 [%s] %s:%d Failed due to null VCSourceDestinationInfo
 [%s] %s:%d Packet data too big length=%zu trafficFlags=%d mode=%d
 [%s] %s:%d RealTransport: source destination info with mode %d is not supported
 [%s] %s:%d VTP_IncrementTotalBytesSent failed due to invalid handle
 [%s] %s:%d NWConnection failed to receive data with error %d
 [%s] %s:%d Could not find VFDList for gived fvd '%d'
 [%s] %s:%d Failed to create data allocator
 [%s] %s:%d Failed to create the vtp packet allocator
 [%s] %s:%d VCMemPool_Create(%d) failed
 [%s] %s:%d Releasing NULL packet reference
 [%s] %s:%d ***VTP_GetVFD: UNEXPECTED; ran out of vfd's with i=%d. There must be some socket LEAK!
 [%s] %s:%d sourceVFD should not be NULL
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: socket failed (%d)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: socket(%d) > FD_SETSIZE(%d)
 [%s] %s:%d fd[%d] increase. RefCount[%d]
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: realSocket(%d) > FD_SETSIZE(%d)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: vfd (%d) is out-of-range.
 [%s] %s:%d vfd(%d) [%s] closed.
 [%s] %s:%d fd[%d] decrease. RefCount[%d]
 [%s] %s:%d fd[%d] over released. RefCount[%d]
 [%s] %s:%d fd[%d] closed.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: No VFD result found.
 [%s] %s:%d VTP default result key uses vfd(%d) for send.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: No VFD found for default result key.
 [%s] %s:%d HandoverReport: packet destination matched connection result %d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: Invalid relay server type(%d).
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: SessionID is NULL, cannot generate MAC, reset flag.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: SessionID length 0, cannot generate MAC, reset flag.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: No key available to generate MAC, reset flag.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: PrepareOFTCRC32 failed due to invalid parameter.
 [%s] %s:%d Cannot print health for invalid connectionIndex=%d.
 [%s] %s:%d @=@ Health: VTransport Health Monitor for VTP Send packet count:[%d %d], byte count:[%d %d], interval:%.3fs, rate:[%.3f %.3fkbps], VO=%u, VI=%u, BE=%u
 [%s] %s:%d @=@ Health: VTransport Health Monitor for VTP Recv packet count:[%d %d], byte count:[%d %d], interval:%.3fs, rate:[%.3f %.3f]kbps, demuxPackets:[%u, %u, %u, %u, %u], maxQueueLength:%d, maxQueueDelay:%.2fms statsCount:%d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: %s failed due to invalid handle.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: %s failed due to VFDList not found.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: VTPRecvProc failed due to invalid handle.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: socket failed. We may run out of file descriptors
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: select failed (%08X)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: Select timeout, VTP has received a total of %d packets
 [%s] %s:%d Triggering osChannelInfoLog [IDS readyToReadCount: %d]
 [%s] %s:%d nil VCDatagramChannelIDS, cannot log os channel info!
 [%s] %s:%d Select timeout with fds:[%s]
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: %s(%d) returned 0: empty message
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: %s(%d) failed (%08X)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: %s(%d) error. Empty buffer returned!
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: calloc(%d) failed
 [%s] %s:%d Failed to allocate VTP packet
 [%s] %s:%d Failed to allocate VTP data packet buffer
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: if_indextoname failed for index %d (%d)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: realloc (%d) failed
 [%s] %s:%d VTP_IFIndexToName mapping [if_index:%d if_name:%s]
 [%s] %s:%d Failed to retrieve blockBuffer pointer and size
 [%s] %s:%d ++++++++++++++++ ARPL packet detected in VTP_RecvPkt(...) ++++++++++++++++
 [%s] %s:%d >>>>> ARPL packetin VTP_RecvPkt(...) is encrypted <<<<<
 [%s] %s:%d >>>>> ARPL packetin VTP_RecvPkt(...) is UNENCRYPTED <<<<<
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: out-of-bound OFT type.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: unrecognized openfacetime type: %d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: VTP_RecvPkt recv bad message (%04X)
 [%s] %s:%d received packet with type %d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: Invalid OFT RTP header version, discard.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: Invalid OFT header, discard.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: Invalid OFT MAC, discard.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: OFT packet (%d) missing OFT MAC, discard.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: Invalid OFT RTP header version with bad CRC, discard.
 [%s] %s:%d Skip OFT MAC validation for packet(%d), sessionID not ready.
 [%s] %s:%d RTCP packet too small. bufferSize=%zu
 [%s] %s:%d RTCP packet too small. bufferSize=%zu rtcpPacketLength=%zu
 [%s] %s:%d Packet is not Hop-by-hop encrypted
 [%s] %s:%d rtcpPacketLength=%zu not equal to sizeof(RTCP_PSFB_PLI)
 [%s] %s:%d rtcpPacketLength=%zu not equal to sizeof(RTCP_PSFB_FIR)
 [%s] %s:%d rtcpPacketLength=%zuBytes not equal to sizeof(RTCP_PSFB_LOSSFB)=%zuBytes
 [%s] %s:%d rtcpPacketLength=%zuBytes not equal to sizeof(RTCP_PSFB_LTRACK)=%zuBytes
 [%s] %s:%d nil dataChannel, cannot receive packet!
 [%s] %s:%d VTP recv bad message (%04X), ssrc=%X, vfd=%d
 [%s] %s:%d VTP_PassHsk bad packet. encrypted? %d type_check %d
 [%s] %s:%d ###### VTP_PassPkt packet list is growing and not draining!!! count:%d (len=%d type=%04X) streamIDs:%s, vfd:%d ######
 [%s] %s:%d receiving packet on a closed handle! id[%d], ignoring....
 [%s] %s:%d notify AFRC failed (%08X): VFD %d AFRC handle %p  packet type %d/%d packet length: %d
 [%s] %s:%d VTP added VFDSASrc successfully.
 [%s] %s:%d VTP found duplicate VFDSASrc entry.
 [%s] %s:%d Connection result with localIPPort %s uses vfd(%d) for send.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: No VFD found for connection result with localIPPort %s
 [%s] %s:%d Interface %s (VFD %d) IS behind NAT 64 with prefix: %s
 [%s] %s:%d provided a all zeroed prefix (%d), local is IPv6 (%d)
 [%s] %s:%d nil idsDatagramChannel
 [%s] %s:%d Option cannot be NULL
 [%s] %s:%d Datagram count %d is larger than VTP max compound packet datagram count %d
 [%s] %s:%d Cannot not handle open facetime with IDS compound packet
 [%s] %s:%d nil datagramChannel passed
 [%s] %s:%d nw_connection_send(%llx, %llx, %llx) failed with error:%s, expiration time %d ms
 [%s] %s:%d Ignore packets with offset
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: VTP packet allocation failed. Datagram size[%lu]
 [%s] %s:%d failed due to NULL destination IPPort
 [%s] %s:%d failed to match a VFDList
 [%s] %s:%d Datagram channel %p failed to read with error %s
 [%s] %s:%d Datagram channel %p returned empty datagram
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: VCDatagramChannelReadHandler failed due to invalid handle.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: VTP packet allocation failed. Datagram size[%d]
 [%s] %s:%d _VTP_ProcessDatagramOptions failed with error %08X
 [%s] %s:%d Process packet type failed with error %08X
 [%s] %s:%d Invalid data path value=%d. Ignoring the packet
 [%s] %s:%d datagram readHandler received packet from participantID=%llu
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: VTP packet allocation failed: %d
 [%s] %s:%d datagram readHandler received packet with numOfStreamIDs:%d and streamID[0]:%u
 [%s] %s:%d Parameter VTP must not be NULL
 [%s] %s:%d Parameter packet must not be NULL
 [%s] %s:%d Registered handler[%p] with index=%d
 [%s] %s:%d Unregistered handler with index=%d
 [%s] %s:%d Received notifyd.matching event %s state %llu isPairing %d
 [%s] %s:%d VCWiFiUtils getInfraChannelNumber() failed!
 [%s] %s:%d BT event received while device is on band=%@
 [%s] %s:%d Register for Darwin %@
 [%s] %s:%d Unregister for Darwin %@
 [%s] %s:%d Failed to encode the encode rules for payload (%d)
 [%s] %s:%d Failed to encode the decode rules for payload (%d)
 [%s] %s:%d Failed to allocate video rules
 [%s] %s:%d Unknown video payload (%d)
 [%s] %s:%d Failed to allocate the video rule for %dx%d %dfps
 [%s] %s:%d Unknown video payload (payload=%d)
 [%s] %s:%d Failed to add video format to negotiation blob: %dx%d %f
VCRC [%s] %s:%d This algorithm does not support statistics type=%d to do rate control
VCRC [%s] %s:%d Wrong statistics type=%d!
VCRC [%s] %s:%d Wrong statistics interfaceType=%d!
VCRC [%s] %s:%d Unknown VCRateControl state=%d
VCRC [%s] %s:%d %8.3f/%04X:
%.4f
%.4f
%.4f
%.4f %c
RTT:%-4u
PLR:%4.2f@%.1f
RRx:%4u
MBL:%d
%4u/%4u
  CS:%04X %04X %u BB: %3u
 UAT 
 [%s] %s:%d Failed to initialize the transmitter.
 [%s] %s:%d The provided config is nil
 [%s] %s:%d %@(%p) The provided config is nil
 [%s] %s:%d portraitFrameRotated=%d
 [%s] %s:%d %@(%p) portraitFrameRotated=%d
 [%s] %s:%d Setting remote screen aspect ratio numbers %d/%d,%d/%d (%sPR), remote expects to receive %d/%d,%d/%d
 [%s] %s:%d %@(%p) Setting remote screen aspect ratio numbers %d/%d,%d/%d (%sPR), remote expects to receive %d/%d,%d/%d
 [%s] %s:%d Redundancy level _packetLossPercentage=%2.2f _plrEnvelope=%2.2f 
 [%s] %s:%d Redundancy level changed from _redundancyPercentage=%d to newRedundancyPercentage=%d _packetLossPercentage=%3.3f _plrEnvelope=%3.3f
 [%s] %s:%d multiple send markers found!
 [%s] %s:%d multiple recv markers found!
 [%s] %s:%d Parameter %s is not supported
VCSession [%s] %s:%d Unable to initialize the session. Destination=%s
VCSession [%s] %s:%d %@(%p) Unable to initialize the session. Destination=%s
VCSession [%s] %s:%d Using the following path - oneToOneModeEnabled=%d sessionMode=%ld serviceName=%@
VCSession [%s] %s:%d Unable to initialize the session's local participant!
VCSession [%s] %s:%d %@(%p) Unable to initialize the session's local participant!
VCSession [%s] %s:%d Reporting agent is disabled through default.
VCSession [%s] %s:%d Unable to configure local participant streams for the session. Destination=%s localParticipant=%p
VCSession [%s] %s:%d %@(%p) Unable to configure local participant streams for the session. Destination=%s localParticipant=%p
VCSession [%s] %s:%d %s %s
VCSession [%s] %s:%d reportingConfig must not be nil
VCSession [%s] %s:%d %@(%p) reportingConfig must not be nil
VCSession [%s] %s:%d Dealloc timer starting without stop completing
VCSession [%s] %s:%d %@(%p) Dealloc timer starting without stop completing
VCSession [%s] %s:%d maxActiveVideoDecodes=%d
VCSession [%s] %s:%d Wrong value=%d read from user default [%@]. Resetting it to default value=%d
VCSession [%s] %s:%d Session will use [%@] data path
VCSession [%s] %s:%d Exiting state session %s. Entering state session %s.
VCSession [%s] %s:%d %@(%p) Exiting state session %s. Entering state session %s.
VCSession [%s] %s:%d uuid:%@
VCSession [%s] %s:%d VCSession[%@] transportSessionID[%u] idsParticipantID[%@] participantUUID[%@] receives message[%@]
VCSession [%s] %s:%d messageTuples is nil, can't proceed
VCSession [%s] %s:%d changing _sharingEnabled to %d
VCSession [%s] %s:%d %@(%p) changing _sharingEnabled to %d
VCSession [%s] %s:%d _sharingEnabled already %d
VCSession [%s] %s:%d %@(%p) _sharingEnabled already %d
VCSession [%s] %s:%d Received transportSession event %d while call is not ongoing. Skipping
VCSession [%s] %s:%d Established initial connection '%@'
VCSession [%s] %s:%d Removing current active connection '%@'
VCSession [%s] %s:%d Duplication state changed to %d, active connection is '%@'
VCSession [%s] %s:%d Link constrains changed: '%@'
VCSession [%s] %s:%d Received invalid transportSession event(%d)
VCSession [%s] %s:%d Primary connection changed to '%@'
VCSession [%s] %s:%d Connection changed to '%@'
VCSession [%s] %s:%d New downlink expected bitrate:%u
VCSession [%s] %s:%d New uplink expected bitrate:%u
VCSession [%s] %s:%d Broadcasting audioEnabled state
VCSession [%s] %s:%d %@(%p) Broadcasting audioEnabled state
VCSession [%s] %s:%d Broadcasting videoEnabled state
VCSession [%s] %s:%d %@(%p) Broadcasting videoEnabled state
VCSession [%s] %s:%d Broadcasting screenEnabled state
VCSession [%s] %s:%d %@(%p) Broadcasting screenEnabled state
VCSession [%s] %s:%d Broadcasting audioPaused state
VCSession [%s] %s:%d %@(%p) Broadcasting audioPaused state
VCSession [%s] %s:%d Broadcasting videoPaused state
VCSession [%s] %s:%d %@(%p) Broadcasting videoPaused state
VCSession [%s] %s:%d Participant=%@ didChangeMediaPriority=%d, description=%@
VCSession [%s] %s:%d Participant:%@ requestKeyFrameGenerationWithStreamID:%d FIRType:%d
VCSession [%s] %s:%d Session State:%d, Participant:%@, sessionStartTime:%f
VCSession [%s] %s:%d %@(%p) Session State:%d, Participant:%@, sessionStartTime:%f
VCSession [%s] %s:%d Call is stalling for %f seconds trying to reconnect
VCSession [%s] %s:%d Call is no longer stalling
VCSession [%s] %s:%d Received signal from the remote side to switch oneToOneMode
VCSession [%s] %s:%d Error updating media state=%d for media type=%d, error=%@
VCSession [%s] %s:%d %@(%p) Error updating media state=%d for media type=%d, error=%@
VCSession [%s] %s:%d Downlink TargetBitrate changed from %u to %u
VCSession [%s] %s:%d %@(%p) Downlink TargetBitrate changed from %u to %u
VCSession [%s] %s:%d [AVC SPATIAL AUDIO] Presentation info is nil
VCSession [%s] %s:%d [AVC SPATIAL AUDIO] Serialization failed. result=%08x
VCSession [%s] %s:%d %@(%p) [AVC SPATIAL AUDIO] Serialization failed. result=%08x
VCSession [%s] %s:%d [AVC SPATIAL AUDIO] Serialization complete. result=%08x
VCSession [%s] %s:%d %@(%p) [AVC SPATIAL AUDIO] Serialization complete. result=%08x
VCSession [%s] %s:%d [AVC SPATIAL AUDIO] Failed to apply the spatial metadata. result=%08x
VCSession [%s] %s:%d %@(%p) [AVC SPATIAL AUDIO] Failed to apply the spatial metadata. result=%08x
VCSession [%s] %s:%d %@
VCSession [%s] %s:%d %@(%p) %@
VCSession [%s] %s:%d forceSeamLess:%d
VCSession [%s] %s:%d %@(%p) forceSeamLess:%d
VCSession [%s] %s:%d New opt-in dictionary for new downlink target bitrate:[%u]
VCSession [%s] %s:%d %@(%p) New opt-in dictionary for new downlink target bitrate:[%u]
VCSession [%s] %s:%d strongSelf is nil, return
VCSession [%s] %s:%d transportSessionIDS is invalid
VCSession [%s] %s:%d Opt in dictionary is invalid
VCSession [%s] %s:%d Failed to create the spatial metadata. status=%08x
VCSession [%s] %s:%d Failed to register the spatial metadata. status=%08x
VCSession [%s] %s:%d Failed to reserve channel for siri. status=%08x
VCSession [%s] %s:%d Failed to allocate spatial metadata entry. status=%08x
VCSession [%s] %s:%d Failed to retrieve the channel index. status=%08x
VCSession [%s] %s:%d Failed to allocate media type key
VCSession [%s] %s:%d Failed to create media queue with error 0x%X
VCSession [%s] %s:%d VCMediaQueue size threshold exceeded for mediaQueueStreamId=%u queueSizeInSecond=%f - FLUSHING!
VCSession [%s] %s:%d %@(%p) VCMediaQueue size threshold exceeded for mediaQueueStreamId=%u queueSizeInSecond=%f - FLUSHING!
VCSession [%s] %s:%d Should not handle media queue threshold exceeded with type=%d for mediaQueueStreamId=%u queueSize=%f!
VCSession [%s] %s:%d %@(%p) Should not handle media queue threshold exceeded with type=%d for mediaQueueStreamId=%u queueSize=%f!
VCSession [%s] %s:%d No VCMediaQueue created!
VCSession [%s] %s:%d Screen is enabled, constraining the local camera framerate=%d fps
VCSession [%s] %s:%d %@(%p) Screen is enabled, constraining the local camera framerate=%d fps
VCSession [%s] %s:%d Too many remote Participants %lu, constraining the local capture to %d fps
VCSession [%s] %s:%d %@(%p) Too many remote Participants %lu, constraining the local capture to %d fps
VCSession [%s] %s:%d Removing or adding a remote participant %lu, changing max video capture framerate to %d fps
VCSession [%s] %s:%d %@(%p) Removing or adding a remote participant %lu, changing max video capture framerate to %d fps
VCSession [%s] %s:%d Restoring camera capture framerate to %d fps
VCSession [%s] %s:%d %@(%p) Restoring camera capture framerate to %d fps
VCSession [%s] %s:%d SSRC collision detected! SSRC=%u
VCSession [%s] %s:%d Security key material with key index '%@' added
VCSession [%s] %s:%d Start pruning keys in the security key manager due to membershipChangeReason: %@
VCSession [%s] %s:%d Send initial state to participant=%@. audioEnabled=%d videoEnabled=%d screenEnabled=%d
VCSession [%s] %s:%d Broadcasting initial state. audioEnabled=%d videoEnabled=%d screenEnabled=%d
VCSession [%s] %s:%d Fixed label '%s' is being used due to default
VCSession [%s] %s:%d config must not be nil
VCSession [%s] %s:%d remoteParticipant must not be nil
VCSession [%s] %s:%d Failed to create uplink encryption label holder
VCSession [%s] %s:%d Failed to create downlink encryption label holder
VCSession [%s] %s:%d Failed to create uplink security key holder
VCSession [%s] %s:%d Failed to create downlink security key holder
VCSession [%s] %s:%d Failed to compose control channel configuration for participant '%llu'
VCSession [%s] %s:%d Failed to add participant '%llu' to Control Channel list of active participants
VCSession [%s] %s:%d Participant count:%d
VCSession [%s] %s:%d remoteParticipantIDs = %p
VCSession [%s] %s:%d Load switch useMediaDrivenDuplication %d
VCSession [%s] %s:%d Received encryption info from IDS with destination[%@]
VCSession [%s] %s:%d %@(%p) Received encryption info from IDS with destination[%@]
VCSession [%s] %s:%d Reporting agent is not properly configured
VCSession [%s] %s:%d %@(%p) Reporting agent is not properly configured
VCSession [%s] %s:%d Session Event failed - EventType:%d needs a participant but it is nil
VCSession [%s] %s:%d %@(%p) Session Event failed - EventType:%d needs a participant but it is nil
VCSession [%s] %s:%d EventType:%d is not relevant for Session Remote Participant Event logging
VCSession [%s] %s:%d %@(%p) EventType:%d is not relevant for Session Remote Participant Event logging
VCSession [%s] %s:%d Adding participant[%s]
VCSession [%s] %s:%d %@(%p) Adding participant[%s]
VCSession [%s] %s:%d Another participant with same idsParticipantID=%llu already exists!
VCSession [%s] %s:%d %@(%p) Another participant with same idsParticipantID=%llu already exists!
VCSession [%s] %s:%d Attempting to add a remote participant that is using same uuid as local participant's uuid=%@!
VCSession [%s] %s:%d %@(%p) Attempting to add a remote participant that is using same uuid as local participant's uuid=%@!
VCSession [%s] %s:%d Failed to configure Remote Participant
VCSession [%s] %s:%d Failed to add and start Remote Participant for One to One
VCSession [%s] %s:%d OneToOne config was unable to be setup for remoteParticipant=%p participantID=%llu
VCSession [%s] %s:%d Removing participant[%@]
VCSession [%s] %s:%d %@(%p) Removing participant[%@]
VCSession [%s] %s:%d Session stop in progress
VCSession [%s] %s:%d %@(%p) Session stop in progress
VCSession [%s] %s:%d Session is already started/starting
VCSession [%s] %s:%d %@(%p) Session is already started/starting
VCSession [%s] %s:%d Local source marked as invalid. Can't start.
VCSession [%s] %s:%d %@(%p) Local source marked as invalid. Can't start.
VCSession [%s] %s:%d Session already stopped. stopError=%p
VCSession [%s] %s:%d %@(%p) Session already stopped. stopError=%p
VCSession [%s] %s:%d Session stop when start in progress, transitioning to stopping
VCSession [%s] %s:%d Tearing down session
VCSession [%s] %s:%d VCSession:[%p] configurationDict:[%@]
VCSession [%s] %s:%d %@(%p) VCSession:[%p] configurationDict:[%@]
VCSession [%s] %s:%d VCSession:[%p] Failed to update the session configuration
VCSession [%s] %s:%d VCSession:[%p] Failed to update the local participant configuration
VCSession [%s] %s:%d VCSession:[%p] Failed to update the remote participant:[%@] configuration
VCSession [%s] %s:%d Participant didStart:%d error:[%@] participantID[%@] %@
VCSession [%s] %s:%d %@(%p) Participant didStart:%d error:[%@] participantID[%@] %@
VCSession [%s] %s:%d Session failed to start.
VCSession [%s] %s:%d %@(%p) Session failed to start.
@:@ VCSession-didStart
VCSession [%s] %s:%d @:@ VCSession-didStart (%p)
VCSession [%s] %s:%d Resetting Participant shouldStart to false as session state=%d failed to move to start, participantID[%@] %@
VCSession [%s] %s:%d %@(%p) Resetting Participant shouldStart to false as session state=%d failed to move to start, participantID[%@] %@
VCSession [%s] %s:%d remoteScreenAttributes=%@
VCSession [%s] %s:%d Participant didStopWithError:[%@] participantID[%@] %@
VCSession [%s] %s:%d %@(%p) Participant didStopWithError:[%@] participantID[%@] %@
VCSession [%s] %s:%d @=@ Health: VCSession-local localParticipant=%@, videoTxBitrate=%u kbps,%@ audioTxBitrate=%u kbps [%@] avTxTimestamps=%@
VCSession [%s] %s:%d @=@ Health: VCSession-remote remoteParticipant=%@, videoStreamID=%@, audioStreamID=%@, videoRxBitrate=%u kbps, videoRxFrameRate=%3.1f, audioRxBitrate=%u kbps videoRxResolution=%@
VCSession [%s] %s:%d [VCSession]: reporting periodic task: strongSelf == nil
VCSession [%s] %s:%d VCMoments requestee %@, RTP timestamp %@
VCSession [%s] %s:%d capabilities=0x%02x, imageType=%d, videoCodec=%d
VCSession [%s] %s:%d Reporting is disabled.
VCSession [%s] %s:%d Reporting backends=%@
 [%s] %s:%d screen capture capability: %ld
 [%s] %s:%d inDelegate=%@ config=%@
 [%s] %s:%d Failed to create XPC connection
 [%s] %s:%d Failed to create process queue
 [%s] %s:%d Error initializing Screen Capture. Deallocing
 [%s] %s:%d start capture
 [%s] %s:%d stop capture
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCAudioRelayIOController.m:%d: Failed to allocate secondary buffer
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCAudioRelayIOController.m:%d: Failed to create the audio limiter
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCAudioRelayIOController.m:%d: Failed to start the audio limiter
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCAudioRelayIOController.m:%d: Failed to create the relay IO
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCAudioRelayIOController.m:%d: Failed to start the relay IO
 [%s] %s:%d Client facing:%d relay stopped
 [%s] %s:%d %d:%d: State change: %@ (%d) -> %@ (%d)
 [%s] %s:%d Registering clientIO[%p]
 [%s] %s:%d Unregistering clientIO[%p]
 [%s] %s:%d Failed to configure the audio IO
 [%s] %s:%d could not create queue
 [%s] %s:%d could not audio buffers
 [%s] %s:%d could not create audio buffer list
 [%s] %s:%d could not enque audio buffer
 [%s] %s:%d %p Error returning output to audio buffer pool
 [%s] %s:%d %p pool queue full with count %d
 [%s] %s:%d %p output queue empty with count %d
 [%s] %s:%d %p audio sink buffer received
 [%s] %s:%d %p output queue full with count %d
 [%s] %s:%d %p pool queue empty with count %d
 [%s] %s:%d %s Audio callback called too quickly. Delta:%f
 [%s] %s:%d %s Unexpected timestamp received: %u, expected:%u hostTimeDelta=%f lastTimestamp=%llu -> timestamp=%llu
 [%s] %s:%d %s Real time miss. Timestamp jumped: delta=%u (%u to %u), host time: delta=%f (sampleCount=%d) (%f to %f). lastTimestamp=%llu -> timestamp=%llu
 [%s] %s:%d [Local] Expensive %d, constraint %d, 5G %d. [Remote] Expensive %d, constraint %d, 5G %d
 [%s] %s:%d UpdateMTU MTU: %d -> %d Cellular: %d/%d
 [%s] %s:%d VCConnection: connection to check is nil
 [%s] %s:%d VCConnection: isOnSameInterfacesAndQRSessionWithConnection: %s vs. %s
 [%s] %s:%d VCConnection: isOnSameInterfacesAndQRSessionWithConnection: %s
 [%s] %s:%d Unknown IDSDataChannelRATType %lu
VCRC [%s] %s:%d wrong type of statistics message is processed by VCRateControl WiFi
VCRC [%s] %s:%d media controller is required for VCRateControl
VCTextTransmitter [%s] %s:%d 
VCTextTransmitter [%s] %s:%d %@(%p) 
VCTextTransmitter [%s] %s:%d Trying to send when the transmitter is stopped!
VCTextTransmitter [%s] %s:%d %@(%p) Trying to send when the transmitter is stopped!
VCTextTransmitter [%s] %s:%d Sending text:%@
VCTextTransmitter [%s] %s:%d %@(%p) Sending text:%@
VCTextTransmitter [%s] %s:%d failed to send RTP
VCTextTransmitter [%s] %s:%d %@(%p) failed to send RTP
VCTextTransmitter [%s] %s:%d Invalid payload!
VCTextTransmitter [%s] %s:%d Invalid red payload!
VCTextTransmitter [%s] %s:%d Starting sending heartbeat (interval=%f)
VCTextTransmitter [%s] %s:%d %@(%p) Starting sending heartbeat (interval=%f)
VCTextTransmitter [%s] %s:%d Failed to create polling
VCTextTransmitter [%s] %s:%d %@(%p) Failed to create polling
 [%s] %s:%d Reorder profile probability: %2.2f correlation: %2.2f gap: %d
 [%s] %s:%d _videoPriorityEnabled=%d
 [%s] %s:%d AVCDashboard DisplayURL: https://avc-gft-dashboard.apple.com/multiway/conference/%@
 [%s] %s:%d Failed to allocate generated stream ID set
 [%s] %s:%d %@(%p) Failed to allocate generated stream ID set
 [%s] %s:%d Failed to allocate generated SSRC set
 [%s] %s:%d %@(%p) Failed to allocate generated SSRC set
 [%s] %s:%d Failed to allocate power spectrum source
 [%s] %s:%d %@(%p) Failed to allocate power spectrum source
 [%s] %s:%d Failed to allocate oneToOne streamInfo dictionary
 [%s] %s:%d %@(%p) Failed to allocate oneToOne streamInfo dictionary
 [%s] %s:%d Failed to create uplinkBandwidthAllocators
 [%s] %s:%d %@(%p) Failed to create uplinkBandwidthAllocators
 [%s] %s:%d Failed to allocate config provider
 [%s] %s:%d Failed to setup the stream inputs
 [%s] %s:%d Failed to setup the stream groups
 [%s] %s:%d %@(%p) Failed to allocate config provider
 [%s] %s:%d Failed to setup audio streams
 [%s] %s:%d %@(%p) Failed to setup audio streams
 [%s] %s:%d Failed to setup video stream
 [%s] %s:%d %@(%p) Failed to setup video stream
 [%s] %s:%d %@(%p) Failed to setup the stream inputs
 [%s] %s:%d %@(%p) Failed to setup the stream groups
 [%s] %s:%d video payload types: %@, audio payload types: %@
 [%s] %s:%d Failed to initialize media negotiator
 [%s] %s:%d %@(%p) Failed to initialize media negotiator
 [%s] %s:%d Failed to create participant info
 [%s] %s:%d %@(%p) Failed to create participant info
 [%s] %s:%d Participant init %@
 [%s] %s:%d %@(%p) Participant init %@
 [%s] %s:%d Failed to create bandwith allocator array
 [%s] %s:%d %@(%p) Failed to create bandwith allocator array
 [%s] %s:%d Failed to create VCSessionUplinkBandwidthAllocatorMultiway
 [%s] %s:%d %@(%p) Failed to create VCSessionUplinkBandwidthAllocatorMultiway
 [%s] %s:%d Failed to create VCSessionUplinkBandwidthAllocatorOneToOne
 [%s] %s:%d %@(%p) Failed to create VCSessionUplinkBandwidthAllocatorOneToOne
 [%s] %s:%d Failed to unserialize the participant info
 [%s] %s:%d Media blob not found in participant info
 [%s] %s:%d Failed to allocate the negotiation local configuration
 [%s] %s:%d Failed to initialize the negotiation local configuration
 [%s] %s:%d No video streams to set up
 [%s] %s:%d %@(%p) No video streams to set up
 [%s] %s:%d Stream group ID missing in stream group config
 [%s] %s:%d Stream input ID missing in stream group config
 [%s] %s:%d Unknown stream input ID=%@
 [%s] %s:%d Stream token already assigned for captureSourceID=%d
 [%s] %s:%d %@(%p) Stream token already assigned for captureSourceID=%d
 [%s] %s:%d Failed to setup stream
 [%s] %s:%d %@(%p) Failed to setup stream
 [%s] %s:%d Failed to register stream group for capture source ID=%d
 [%s] %s:%d setupStreamGroupMediaSync failed
 [%s] %s:%d _enableRedundancy set to YES by forceFECRepairStream
 [%s] %s:%d %@(%p) _enableRedundancy set to YES by forceFECRepairStream
 [%s] %s:%d Starting stream groups with oneToOneModeEnabled=%d
 [%s] %s:%d %@(%p) Starting stream groups with oneToOneModeEnabled=%d
 [%s] %s:%d no oneToOneSettings video config found, use default maxFrameRate=%d
 [%s] %s:%d %@(%p) no oneToOneSettings video config found, use default maxFrameRate=%d
 [%s] %s:%d maxFrameRate=%d
 [%s] %s:%d %@(%p) maxFrameRate=%d
 [%s] %s:%d Setting uplink bit rate cap cell is %d
 [%s] %s:%d %@(%p) Setting uplink bit rate cap cell is %d
 [%s] %s:%d Setting uplink bit rate cap wifi is %d
 [%s] %s:%d %@(%p) Setting uplink bit rate cap wifi is %d
 [%s] %s:%d Updating videoEnabled on the oneToOne audio stream
 [%s] %s:%d %@(%p) Updating videoEnabled on the oneToOne audio stream
 [%s] %s:%d OneToOne Audio Stream is already configured in mode %d for videoEnabled %d
 [%s] %s:%d %@(%p) OneToOne Audio Stream is already configured in mode %d for videoEnabled %d
 [%s] %s:%d OneToOne Audio Stream was unable to be reconfigured
 [%s] %s:%d %@(%p) OneToOne Audio Stream was unable to be reconfigured
 [%s] %s:%d Updating videoEnabled on the local participant audioIO
 [%s] %s:%d %@(%p) Updating videoEnabled on the local participant audioIO
 [%s] %s:%d Failed to update videoEnabled=%d on the audio stream - stopping call
 [%s] %s:%d %@(%p) Failed to update videoEnabled=%d on the audio stream - stopping call
 [%s] %s:%d Failed to update camera stream group with videoEnabled=%d
 [%s] %s:%d %@ videoEnabled[%d]
 [%s] %s:%d %@(%p) %@ videoEnabled[%d]
 [%s] %s:%d %@ screenEnabled[%d]
 [%s] %s:%d %@(%p) %@ screenEnabled[%d]
 [%s] %s:%d Changing participant videoPaused to %d
 [%s] %s:%d %@(%p) Changing participant videoPaused to %d
 [%s] %s:%d Ignoring the change of video captureFrameRate. currentVideoCaptureFrameRate %d maxSupportedMultiwayFrameRate %d framerate %d
 [%s] %s:%d Setting local capture rate, currentVideoCaptureFrameRate=%d fps, maxSupportedMultiwayCameraFrameRate=%d fps state=%d
 [%s] %s:%d Failed to stop Multiway streams. error=%@
 [%s] %s:%d updateStreamGroups failed with error=%@
 [%s] %s:%d Failed to set mode=%d for stream groups
 [%s] %s:%d %@(%p) Failed to set mode=%d for stream groups
 [%s] %s:%d We are already in the correct OneToOne mode
 [%s] %s:%d Switching into oneToOne mode
 [%s] %s:%d Switching out of oneToOne mode
 [%s] %s:%d stopping
 [%s] %s:%d %@(%p) stopping
 [%s] %s:%d Updating local media settings with config :%@
 [%s] %s:%d Unable to apply the cached configuration
 [%s] %s:%d streamConfigurations cannot be nil!
 [%s] %s:%d Failed to allocate stream group
 [%s] %s:%d Unable to retrieve the format for captureSource=%d streamGroupID=%s
 [%s] %s:%d Failed to initalize video stream group
 [%s] %s:%d %@(%p) Failed to initalize video stream group
 [%s] %s:%d Failed to set up video stream %d
 [%s] %s:%d %@(%p) Failed to set up video stream %d
 [%s] %s:%d Base temporal layer hasn't been configured for streamID=%d
 [%s] %s:%d %@(%p) Base temporal layer hasn't been configured for streamID=%d
 [%s] %s:%d Stream setup failed
 [%s] %s:%d temporalStream configured streamGroupID=%s baseStreamId=%d repairStreamId=%d maxNetworkBitrate=%d temporalID=%d maxNetworkBitrate=%d
 [%s] %s:%d %@(%p) temporalStream configured streamGroupID=%s baseStreamId=%d repairStreamId=%d maxNetworkBitrate=%d temporalID=%d maxNetworkBitrate=%d
 [%s] %s:%d Failed to allocate audio stream group config
 [%s] %s:%d Failed to set up audio stream %d
 [%s] %s:%d %@(%p) Failed to set up audio stream %d
 [%s] %s:%d Failed to initalize audio stream group
 [%s] %s:%d %@(%p) Failed to initalize audio stream group
 [%s] %s:%d Stream setup failed for streamGroupId=%s
 [%s] %s:%d Failed to setup video stream for streamGroupId=%s
 [%s] %s:%d %@(%p) Failed to setup video stream for streamGroupId=%s
 [%s] %s:%d Failed to setup audio stream
 [%s] %s:%d %@(%p) Failed to setup audio stream
 [%s] %s:%d Audio configuration for media negotiator not supported for mediaType=%@
 [%s] %s:%d Failed to create audio configuration for media negotiator for mediaType=%@
 [%s] %s:%d Failed to convert mediaStreamConfig cipherSuite(%ld) to negotiatorStreamGroupConfig cipherSuite
 [%s] %s:%d Failed to allocate media blob stream group config
 [%s] %s:%d Failed to allocate media blob stream group stream config
 [%s] %s:%d Failed to retrieve the cipher suite for stream. streamGroupID=%s
 [%s] %s:%d Skipping stream = %d
 [%s] %s:%d Failed to allocate media blob stream group codec config
 [%s] %s:%d Invalid payload for video, payload size: %lu
 [%s] %s:%d Invalid rtpPayload for video, rtpPayload size: %lu
 [%s] %s:%d Failed to create U1 stream group negotiation config for groupID=%s
 [%s] %s:%d Failed to create new stream group negotiation config
 [%s] %s:%d Successfully created stream group U1 config for groupID=%s
 [%s] %s:%d Failed to create stream group U1 config for groupID=%s
 [%s] %s:%d Failed to initialize stream groups for local configuration
 [%s] %s:%d %@(%p) Failed to initialize stream groups for local configuration
 [%s] %s:%d Load switch highFecEnabled %d
 [%s] %s:%d currentRedundancyPercentage before abTestSwitch %d
 [%s] %s:%d maxAllowedRedundancyPercentage after abTestSwitch %d
 [%s] %s:%d Load switch vplrFecEnabled %d
 [%s] %s:%d Failed to copy the local configuration
 [%s] %s:%d %@(%p) Failed to copy the local configuration
 [%s] %s:%d Failed to reinitialize the 1:1 media negotiator
 [%s] %s:%d %@(%p) Failed to reinitialize the 1:1 media negotiator
 [%s] %s:%d Failed to extract media blob from remote participant info
 [%s] %s:%d %@(%p) Failed to extract media blob from remote participant info
 [%s] %s:%d Failed to negotiate one to one settings with remote media blob
 [%s] %s:%d %@(%p) Failed to negotiate one to one settings with remote media blob
 [%s] %s:%d Failed to negotiate with devices that does not support one to one
 [%s] %s:%d %@(%p) Failed to negotiate with devices that does not support one to one
 [%s] %s:%d Remote callInfoBlob = %s
 [%s] %s:%d forcing oneToOneVideoConfig settings width=%lu, height=%lu, framerate=%lufps
 [%s] %s:%d Error setting up the config for one-to-one mode for streamGroupId=%s
 [%s] %s:%d %@(%p) Error setting up the config for one-to-one mode for streamGroupId=%s
 [%s] %s:%d Failed to set up video stream for streamGroupId=%s
 [%s] %s:%d %@(%p) Failed to set up video stream for streamGroupId=%s
 [%s] %s:%d Failed to update config for stream group=%@ configuration=%@
 [%s] %s:%d Error setting up the audio config for one-to-one mode for streamGroupId=%s
 [%s] %s:%d %@(%p) Error setting up the audio config for one-to-one mode for streamGroupId=%s
 [%s] %s:%d Error setting up the audio stream for one-to-one mode for streamGroupId=%s
 [%s] %s:%d %@(%p) Error setting up the audio stream for one-to-one mode for streamGroupId=%s
 [%s] %s:%d Failed to allocate audio stream group config for streamGroupId=%s
 [%s] %s:%d Error configuring stream infos for streamGroupID=%s
 [%s] %s:%d Error configuring streamGroupID=%s
 [%s] %s:%d Setting one-to-one remote participant data
 [%s] %s:%d Configuring U+1 screen and system audio streams
 [%s] %s:%d %@(%p) Configuring U+1 screen and system audio streams
 [%s] %s:%d Calling configureWithDeviceRole with AVC operatingMode=%d shouldConfigureGFTStreams=%d
 [%s] %s:%d %@(%p) Calling configureWithDeviceRole with AVC operatingMode=%d shouldConfigureGFTStreams=%d
 [%s] %s:%d Fail configure participant
 [%s] %s:%d %@(%p) Fail configure participant
 [%s] %s:%d U+1 config for StreamGroupID=%s not set
 [%s] %s:%d Failed to configure one to one video streams StreamGroupID=%s
 [%s] %s:%d Failed to update config for StreamGroupID=%s
 [%s] %s:%d Failed to configure one to one audio streams StreamGroupID=%u
 [%s] %s:%d Failed to update config for StreamGroupID=%u
 [%s] %s:%d Already received Key material, updating oneToOne streams with the cached key material
 [%s] %s:%d Failed to create one to one audio stream config for streamGroupId=%s
 [%s] %s:%d %@(%p) Failed to create one to one audio stream config for streamGroupId=%s
 [%s] %s:%d Failed to create one to one video stream config
 [%s] %s:%d %@(%p) Failed to create one to one video stream config
 [%s] %s:%d Recalculating bandwidth allocation _isRemotePresentationLarge=%u width=%f height=%f, presentationState=%u
 [%s] %s:%d %@(%p) Recalculating bandwidth allocation _isRemotePresentationLarge=%u width=%f height=%f, presentationState=%u
 [%s] %s:%d Missing payload:%d (codecType:%d). Supported rules:%@ secondary:%@
 [%s] %s:%d %@(%p) Missing payload:%d (codecType:%d). Supported rules:%@ secondary:%@
 [%s] %s:%d Local Participant callInfoBlob = %@
 [%s] %s:%d %@(%p) Local Participant callInfoBlob = %@
 [%s] %s:%d Failed to allocate participant info
 [%s] %s:%d %@(%p) Failed to allocate participant info
 [%s] %s:%d Failed to create new invite blob
 [%s] %s:%d %@(%p) Failed to create new invite blob
 [%s] %s:%d Video stream config is missing for streamGroupID=%s!
 [%s] %s:%d %@(%p) Video stream config is missing for streamGroupID=%s!
 [%s] %s:%d Failed to allocate video stream!
 [%s] %s:%d %@(%p) Failed to allocate video stream!
 [%s] %s:%d video stream successfully created: %p! streamGroupID=%s streamId=%d repairStreamId=%d
 [%s] %s:%d %@(%p) video stream successfully created: %p! streamGroupID=%s streamId=%d repairStreamId=%d
 [%s] %s:%d invalid capabilies dictionary for streamGroupID=%s!
 [%s] %s:%d %@(%p) invalid capabilies dictionary for streamGroupID=%s!
 [%s] %s:%d Failed to allocate participant video stream info for streamGroupID=%s
 [%s] %s:%d %@(%p) Failed to allocate participant video stream info for streamGroupID=%s
 [%s] %s:%d Audio stream config is missing!
 [%s] %s:%d %@(%p) Audio stream config is missing!
 [%s] %s:%d Failed to allocate audio stream!
 [%s] %s:%d %@(%p) Failed to allocate audio stream!
 [%s] %s:%d audio stream successfully created: %p! streamGroupID=%s streamId=%d repairStreamId=%d
 [%s] %s:%d %@(%p) audio stream successfully created: %p! streamGroupID=%s streamId=%d repairStreamId=%d
 [%s] %s:%d invalid capabilies dictionary!
 [%s] %s:%d %@(%p) invalid capabilies dictionary!
 [%s] %s:%d Failed to allocate participant audio stream info
 [%s] %s:%d %@(%p) Failed to allocate participant audio stream info
 [%s] %s:%d Failed to initialize audio rule collection!
 [%s] %s:%d %@(%p) Failed to initialize audio rule collection!
 [%s] %s:%d _videoPriorityEnabled=%d, maxMediaBitrate=%u, encodingMode=%d
 [%s] %s:%d MEDIA FRACTURE SITUATION! peer asking for unknown stream:%@
 [%s] %s:%d %@(%p) MEDIA FRACTURE SITUATION! peer asking for unknown stream:%@
 [%s] %s:%d Remote %s %@
 [%s] %s:%d %@(%p) Remote %s %@
 [%s] %s:%d Sender side redundancy changed to[%d]
 [%s] %s:%d Uplink TargetBitrate changed from %u to %u
 [%s] %s:%d %@(%p) Uplink TargetBitrate changed from %u to %u
 [%s] %s:%d Uplink TargetBitrate set to %u
 [%s] %s:%d %@(%p) Uplink TargetBitrate set to %u
 [%s] %s:%d OneToOne TargetBitrate changed from %u to %u (state=%u, rateChangeCounter=%u)
 [%s] %s:%d %@(%p) OneToOne TargetBitrate changed from %u to %u (state=%u, rateChangeCounter=%u)
 [%s] %s:%d video no-op no MKM
 [%s] %s:%d %@(%p) video no-op no MKM
 [%s] %s:%d frameRate=%u
 [%s] %s:%d %@(%p) frameRate=%u
 [%s] %s:%d avConferencePreviewError %@
 [%s] %s:%d %@(%p) avConferencePreviewError %@
 [%s] %s:%d thermalLevelDidChange %u
 [%s] %s:%d %@(%p) thermalLevelDidChange %u
 [%s] %s:%d cameraAvailabilityDidChange=%d ignored
 [%s] %s:%d %@(%p) cameraAvailabilityDidChange=%d ignored
 [%s] %s:%d %@(%p) audio no-op no MKM
 [%s] %s:%d Active connection changed with new connection uplinkBitrateCap %d
 [%s] %s:%d %@(%p) Active connection changed with new connection uplinkBitrateCap %d
 [%s] %s:%d Active connection changed with new connection oneToOneUplinkBitrateCap %d
 [%s] %s:%d %@(%p) Active connection changed with new connection oneToOneUplinkBitrateCap %d
 [%s] %s:%d This should no longer get called, VCSessionParticipantLocal is no longer managing U+1 streams
 [%s] %s:%d streamGroup=%@ didSuspendStreams=%d isMixingSystemAudio=%d
 [%s] %s:%d Participant is not running, ignoring delegate callback.
 [%s] %s:%d Unexpected number of mediaTypes for streamGroup=%@ didSuspendStreams=%d isMixingSystemAudio=%d
 [%s] %s:%d VCSessionBitrateArbiter: value %d failed bitrate range check, ignored
 [%s] %s:%d Overriding %@ for connection type %d isExpensive %d with storebag value of %d
 [%s] %s:%d Hardware does not support connection type %d isExpensive %d, ignored %@ storebag value of %d
 [%s] %s:%d Parameter 'socketDictionary' may not be NULL
 [%s] %s:%d 'rtcpSocket' may not be kVCInvalidSocket for regular mode
 [%s] %s:%d 'rtpSocket' may not be kVCInvalidSocket
 [%s] %s:%d initWithRTPSocket:%d RTCPSocket:%d failed
 [%s] %s:%d Invalid RTP socket
 [%s] %s:%d _rtpVFD creation failed with error '%d'
 [%s] %s:%d _rtcpVFD creation failed with error '%d'
 [%s] %s:%d initializeNetworkMTUWithSocket failed with error '%d'
 [%s] %s:%d vfd creation failed
 [%s] %s:%d VTP_SetSourceDestinationWithIPPort failed with error '%d'
 [%s] %s:%d Could not get property '%@' for transport stream '%@'
 [%s] %s:%d VTP_GetPktType failed
 [%s] %s:%d VTP_SetSourceDestinationWithIPPort failed
 [%s] %s:%d Parameter 'address' must not be NULL
 [%s] %s:%d getSockaddrStorage:size: failed with error '%d'
 [%s] %s:%d connect failed with error '%d'
 [%s] %s:%d New configuration matches current one '%@'. Ignoring...
 [%s] %s:%d Failed to set up remoteAddress on rtpSocket
 [%s] %s:%d RTCP port is set to '%d'
 [%s] %s:%d Failed to set up remoteAddress on rtcpSocket
 [%s] %s:%d Failed to set up remoteAddress on transport stream '%@'
 [%s] %s:%d Invalid stream type '%d'
 [%s] %s:%d sourceDestinationInfo has not been set. streamType=%d
 [%s] %s:%d VTP socket creation failed
 [%s] %s:%d VTP_SetSocketMode failed
 [%s] %s:%d VTP_SetPktType failed
 [%s] %s:%d Failed to configure transport stream parameters for socket '%d'
 [%s] %s:%d Failed to set vfd parameters for socket '%d'
 [%s] %s:%d Creating NW Connection based on network interface=%s
 [%s] %s:%d Not setting unexpected transport type %d
 [%s] %s:%d getsockname(%d) failed
 [%s] %s:%d sendTimings:Key = %d, value = %d
 [%s] %s:%d Parameter 'filter' should not be NULL
 [%s] %s:%d Object '%@' is not a valid VCPacketFilterRTCP
 [%s] %s:%d Property name '%@' and property value out '%@' must not be NULL
 [%s] %s:%d kVCPacketFilterRTCPProperty_RemoteSSRC not set
 [%s] %s:%d kVCPacketFilterRTCPProperty_LocalSSRC not set
 [%s] %s:%d Unsupported property '%@' requested
 [%s] %s:%d Unsupported audioType=%d
 [%s] %s:%d %@(%p) Unsupported audioType=%d
 [%s] %s:%d No controller found for device role:%d
 [%s] %s:%d %@(%p) No controller found for device role:%d
 [%s] %s:%d Failed to create controller for deviceRole=%d audioType=%d direction=%d
 [%s] %s:%d %@(%p) Failed to create controller for deviceRole=%d audioType=%d direction=%d
 [%s] %s:%d Controller not found for device role:%d
 [%s] %s:%d %@(%p) Controller not found for device role:%d
 [%s] %s:%d Operation not allowed while the audio IO is running
 [%s] %s:%d %@(%p) Operation not allowed while the audio IO is running
 [%s] %s:%d VCAudioIO is being released but it is not in the right state: %d
 [%s] %s:%d %@(%p) VCAudioIO is being released but it is not in the right state: %d
 [%s] %s:%d VCAudioIO now in the right state to be released: %d
 [%s] %s:%d %@(%p) VCAudioIO now in the right state to be released: %d
 [%s] %s:%d isMuted=%d
 [%s] %s:%d %@(%p) isMuted=%d
 [%s] %s:%d Set direction from %d to %d. Current state:%d
 [%s] %s:%d %@(%p) Set direction from %d to %d. Current state:%d
 [%s] %s:%d Set spatialAudioDisabled from %d to %d. Current state:%d
 [%s] %s:%d %@(%p) Set spatialAudioDisabled from %d to %d. Current state:%d
 [%s] %s:%d The controller audio format is invalid!
 [%s] %s:%d %@(%p) The controller audio format is invalid!
 [%s] %s:%d Failed to create %s converter for audioIO:%p! Err:%d
 [%s] %s:%d %@(%p) Failed to create %s converter for audioIO:%p! Err:%d
 [%s] %s:%d Unexpected audioIO state:%d. Stop may have been called before the didStart callback
 [%s] %s:%d %@(%p) Unexpected audioIO state:%d. Stop may have been called before the didStart callback
 [%s] %s:%d Stream successfully started
 [%s] %s:%d %@(%p) Stream successfully started
 [%s] %s:%d Failed to start!!
 [%s] %s:%d %@(%p) Failed to start!!
 [%s] %s:%d completionHandler:%p
 [%s] %s:%d %@(%p) completionHandler:%p
 [%s] %s:%d Unexpected audioIO state:%d. Start may have been called before the didStop callback
 [%s] %s:%d %@(%p) Unexpected audioIO state:%d. Start may have been called before the didStop callback
 [%s] %s:%d Stream successfully stopped
 [%s] %s:%d %@(%p) Stream successfully stopped
 [%s] %s:%d Failed to stop!!
 [%s] %s:%d %@(%p) Failed to stop!!
 [%s] %s:%d Controller format: {%f, %7s, 0x%08x, %u, %u, %u, %u, %u} samplesPerFrame=%u
 [%s] %s:%d %@(%p) Controller format: {%f, %7s, 0x%08x, %u, %u, %u, %u, %u} samplesPerFrame=%u
 [%s] %s:%d Client format: {%f, %7s, 0x%08x, %u, %u, %u, %u, %u} samplesPerFrame=%u
 [%s] %s:%d %@(%p) Client format: {%f, %7s, 0x%08x, %u, %u, %u, %u, %u} samplesPerFrame=%u
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCAudioIO.m:%d: 
 [%s] %s:%d Starting... audioController=%@, controllerClient=%@, delegate=%@
 [%s] %s:%d %@(%p) Starting... audioController=%@, controllerClient=%@, delegate=%@
 [%s] %s:%d Start failed. error:%@
 [%s] %s:%d %@(%p) Start failed. error:%@
 [%s] %s:%d Executing start completion handler, succeeded=%d error=%@
 [%s] %s:%d %@(%p) Executing start completion handler, succeeded=%d error=%@
 [%s] %s:%d start timed out
 [%s] %s:%d %@(%p) start timed out
 [%s] %s:%d Stopping... audioController=%@, controllerClient=%@, delegate=%@
 [%s] %s:%d %@(%p) Stopping... audioController=%@, controllerClient=%@, delegate=%@
 [%s] %s:%d Stop failed. error:%@
 [%s] %s:%d %@(%p) Stop failed. error:%@
 [%s] %s:%d Executing stop completion handler, succeeded=%d error=%@
 [%s] %s:%d %@(%p) Executing stop completion handler, succeeded=%d error=%@
 [%s] %s:%d stop timed out
 [%s] %s:%d %@(%p) stop timed out
 [%s] %s:%d Failed to convert buffer. result=%08x
VCRC [%s] %s:%d dealloc called
VCRC [%s] %s:%d Start VCStatisticsCollectorQueue without VCRateControlStatisticsProc thread
VCRC [%s] %s:%d VCRateControlStatisticsProc thread create failed (%d)
VCRC [%s] %s:%d VCRateControlStatisticsProc thread started
VCRC [%s] %s:%d Stop VCStatisticsCollectorQueue without VCRateControlStatisticsProc thread
VCRC [%s] %s:%d VCRateControlStatisticsProc thread ended
VCRC [%s] %s:%d Invalid parameter. Collector=%p message=%p
VCRC [%s] %s:%d Collector is nil
VCRC [%s] %s:%d This should be called only with _shouldProcessMessageOnExternalThread is true
VCRC [%s] %s:%d Message queue [%p] full with queueSize=%d, queueFullCount=%u, statistic message ignored!
VCRC [%s] %s:%d Message queue [%p] is still full with queueSize=%d, queueFullCount=%u after flushing the low priority messages. High priroity statistic message will be ignored!
VCRC [%s] %s:%d Message queue [%p] with queueSize=%d, queueFullCount=%u should be flushed
VCRC [%s] %s:%d Message queue [%p] with queueSize=%d, queueFullCount=%u after low priority messages flushed
VCRC [%s] %s:%d Invalid parameter. queue=%p message=%p
 [%s] %s:%d Accelerate buffer  inputBufferLength=%d
 [%s] %s:%d Signal Correlation check failed
 [%s] %s:%d REJECTED accelerate (bestIndex %d > psolaMax %d)
 [%s] %s:%d Failed to allocate buffer for buffer info.
 [%s] %s:%d %@(%p) Failed to allocate buffer for buffer info.
 [%s] %s:%d Failed to create buffer infos array.
 [%s] %s:%d %@(%p) Failed to create buffer infos array.
 [%s] %s:%d VTPixelTransferSessionCreate failed %d (%p)
AVCStreamInput [%s] %s:%d @:@ AVCInputStream-init (%p) streamInputID=%@
@:@ AVCInputStream-init
AVCStreamInput [%s] %s:%d @:@ AVCInputStream-init (%p) streamInputID=%@ mediaType=%s didSucceed=%@ errorCode=%x %@
AVCStreamInput [%s] %s:%d Invalid ID
AVCStreamInput [%s] %s:%d Invalid sample buffer pool size
AVCStreamInput [%s] %s:%d Provided format is NULL
AVCStreamInput [%s] %s:%d Provided format is invalid
AVCStreamInput [%s] %s:%d No delegate specified
AVCStreamInput [%s] %s:%d Delegate queue is NULL
AVCStreamInput [%s] %s:%d Failed to create the XPC connection queue
AVCStreamInput [%s] %s:%d RemoteImageQueue could not be made on StreamInput client
AVCStreamInput [%s] %s:%d Could not get the shared pool allocator for the _senderQueue
AVCStreamInput [%s] %s:%d RemoteImageQueue failed to create sender xpc object
AVCStreamInput [%s] %s:%d Failed to allocate the XPC connection
@:@ %@-dealloc
AVCStreamInput [%s] %s:%d @:@ %@-dealloc (%p)
AVCStreamInput [%s] %s:%d Message=%s returned with an error=%@
AVCStreamInput [%s] %s:%d Failed to create remote queue
AVCStreamInput [%s] %s:%d useFigRemoteQueue=%d
AVCStreamInput [%s] %s:%d %@(%p) useFigRemoteQueue=%d
AVCStreamInput [%s] %s:%d Failed to encode the format description
AVCStreamInput [%s] %s:%d RemoteQueue creation and adding to XPC dictionary failed
AVCStreamInput [%s] %s:%d %s sendMessageSync failed
AVCStreamInput [%s] %s:%d %s returned with an error=%@
AVCStreamInput [%s] %s:%d No stream input ID provided. nsRet=%@
AVCStreamInput [%s] %s:%d streamInput=%@ server died while initializing the XPC connection. Don't try to reconnect since this instance will dealloc
@:@ %@-reset
AVCStreamInput [%s] %s:%d @:@ %@-reset (%p) streamInput=%s Successfully recovered
AVCStreamInput [%s] %s:%d streamInput=%s server died, notifying client
@:@ %@-didStart
AVCStreamInput [%s] %s:%d @:@ %@-didStart (%p)
@:@ %@-didStop
AVCStreamInput [%s] %s:%d @:@ %@-didStop (%p)
@:@ %@-didSuspend
AVCStreamInput [%s] %s:%d @:@ %@-didSuspend (%p)
@:@ %@-didResume
AVCStreamInput [%s] %s:%d @:@ %@-didResume (%p)
AVCStreamInput [%s] %s:%d Failed to submit frame. error=%@
AVCStreamInput [%s] %s:%d could not create XPC dictionary for AVCStreamInput
AVCStreamInput [%s] %s:%d streamInput=%p streamInputID=%s sampleBuffer is NULL
AVCStreamInput [%s] %s:%d streamInput=%p streamInputID=%s missing tile index
AVCStreamInput [%s] %s:%d streamInput=%p streamInputID=%s length=%zu data=%s sampleBuffer=%@
AVCStreamInput [%s] %s:%d streamInput=%p streamInputID=%s sampleBuffer=%@
 [%s] %s:%d init
 [%s] %s:%d %@(%p) init
 [%s] %s:%d RTPGetPreferredSendQueue failed %x
 [%s] %s:%d No preferred send queue. Falling back to default queue
 [%s] %s:%d Start VCRC rate control feedback
 [%s] %s:%d %@(%p) Start VCRC rate control feedback
 [%s] %s:%d Stop VCRC rate control feedback
 [%s] %s:%d %@(%p) Stop VCRC rate control feedback
 [%s] %s:%d Sending VCRC rate control info with owrd:%f, BWE:%d, burstyLoss:%d
 [%s] %s:%d Failed to VCMediaControlInfoSerializeWithData %X
 [%s] %s:%d Failed to send VCRC rate control feedback %X
 [%s] %s:%d Update VCRC information when _statisticsCollector is nil!
 [%s] %s:%d Network queue policies: %@
 [%s] %s:%d networkElementQueue %p and packet %p cannot not be nil!
 [%s] %s:%d Failed to dequeue the packet ID %u at time: %f!
 [%s] %s:%d _processCompleteHandler is nil. Network element is not connected correctly!
 [%s] %s:%d PacketCountInQueue is bad, size:%d
 [%s] %s:%d In-process captions handling is not supported.
 [%s] %s:%d AVCCaptionsClient: connect for streamToken:%u
 [%s] %s:%d AVCCaptionsClient: Failed connection for streamToken=%u Error=%s
 [%s] %s:%d AVCCaptionsClient: disconnect for streamToken:%u
 [%s] %s:%d Failed to create xpc command queue
 [%s] %s:%d Failed to create client to vcscreenshare array
 [%s] %s:%d Failed to create VCScreenCaptureManager
 [%s] %s:%d Stream input ID is nil
 [%s] %s:%d Provided format is NULL
 [%s] %s:%d %@(%p) Provided format is NULL
 [%s] %s:%d Provided delegate is NULL
 [%s] %s:%d %@(%p) Provided delegate is NULL
 [%s] %s:%d Provided delegate queue is NULL
 [%s] %s:%d %@(%p) Provided delegate queue is NULL
 [%s] %s:%d Failed to create the dispatch queue with queueName=%@
 [%s] %s:%d %@(%p) Failed to create the dispatch queue with queueName=%@
 [%s] %s:%d Failed to copy the stream input ID
 [%s] %s:%d %@(%p) Failed to copy the stream input ID
 [%s] %s:%d Invalidate was not called!
 [%s] %s:%d %@(%p) Invalidate was not called!
 [%s] %s:%d xpcClientQueue was null, cannot make the remote queue
 [%s] %s:%d Error making the receiver queue
 [%s] %s:%d Error received from the remote Queue=%d
 [%s] %s:%d Received unexpected operation=%d
 [%s] %s:%d Received nil sampleBuffer
@:@ AVAudioDevice-initWithDeviceID
 [%s] %s:%d @:@ AVAudioDevice-initWithDeviceID self=%@ initDeviceID=%@
 [%s] %s:%d Unable to get size for stream vector - deviceID=%lu, streamListDataSizeBytes=%u, status=%d
 [%s] %s:%d AudioObjectGetPropertyDataSize for kAudioDevicePropertyStreams returned streamListDataSizeBytes=%u for deviceID=%lu with status=%d
 [%s] %s:%d streamList calloc failed
 [%s] %s:%d Unable to get stream vector - streamList=%p, status=%d, expectedStreamListDataSizeBytes=%u, actualStreamListDataSizeBytes=%u
 [%s] %s:%d Returning streamList=%p with streamListDataSizeBytes=%u, streamListLength=%u, and status=%d
 [%s] %s:%d Unable to get kAudioStreamPropertyIsTapStream data from streamID=%u on _deviceID=%@, status=%d - array value i=%u out of total=%u
 [%s] %s:%d deviceHasOnlyTapStreamInputs=%{BOOL}d, _deviceId=%@, _deviceName [%@], isTapStream=%u
 [%s] %s:%d Input device created by CoreAudio result=%{BOOL}d
 [%s] %s:%d AudioDeviceGetProperty failed for JackIsConnected error=%s [%d] deviceId=%@
 [%s] %s:%d AudioDeviceGetProperty kAudioDevicePropertyJackIsConnected returned nValue=%u
 [%s] %s:%d Built-in audio device[%@]'s data source control ID[%u]
 [%s] %s:%d audioDevice=%p isInputAvailable=%{BOOL}d isValidInputDevice=%{BOOL}d
 [%s] %s:%d audioDevice=%p outputAvailable=%{BOOL}d
 [%s] %s:%d Current emulated network packet loss: [%f, %X], queue size: %d
 [%s] %s:%d network queue is full with packet count: %u, limit: %u
 [%s] %s:%d Filter out statistics not belong to this redundancyController with statisticsID:%llu
 [%s] %s:%d Audio redundancy percentage change due to packet loss: %2.3f, new threshold: %2.3f [%d to %d] plrEnvelope=%2.3f
 [%s] %s:%d Participant Data is nil
 [%s] %s:%d %@(%p) Participant Data is nil
 [%s] %s:%d Failed to allocate the positional info
 [%s] %s:%d %@(%p) Failed to allocate the positional info
 [%s] %s:%d Failed to allocate the media states dictionary
 [%s] %s:%d %@(%p) Failed to allocate the media states dictionary
 [%s] %s:%d The participant ID is nil
 [%s] %s:%d %@(%p) The participant ID is nil
 [%s] %s:%d The participant data is nil
 [%s] %s:%d %@(%p) The participant data is nil
 [%s] %s:%d Failed to initialize the media states
 [%s] %s:%d %@(%p) Failed to initialize the media states
 [%s] %s:%d ParticipantID=%@ mediaType=%@ mediaState=%@
 [%s] %s:%d %@(%p) ParticipantID=%@ mediaType=%@ mediaState=%@
 [%s] %s:%d ParticipantID=%@ mediaType=%@ is already in mediaState=%@
 [%s] %s:%d %@(%p) ParticipantID=%@ mediaType=%@ is already in mediaState=%@
 [%s] %s:%d Participant audio is already muted [%d]
 [%s] %s:%d %@(%p) Participant audio is already muted [%d]
 [%s] %s:%d audioMuted[%d]
 [%s] %s:%d %@(%p) audioMuted[%d]
 [%s] %s:%d Participant volume is already [%f]
 [%s] %s:%d %@(%p) Participant volume is already [%f]
 [%s] %s:%d volume[%f]
 [%s] %s:%d %@(%p) volume[%f]
 [%s] %s:%d videoQuality[%d]
 [%s] %s:%d %@(%p) videoQuality[%d]
 [%s] %s:%d videoQuality is already at %d
 [%s] %s:%d %@(%p) videoQuality is already at %d
 [%s] %s:%d videoQuality[%d] is cached until endParticipantConfiguration is called.
 [%s] %s:%d %@(%p) videoQuality[%d] is cached until endParticipantConfiguration is called.
 [%s] %s:%d visibilityIndex[%d]
 [%s] %s:%d %@(%p) visibilityIndex[%d]
 [%s] %s:%d visibilityIndex is already at %d
 [%s] %s:%d %@(%p) visibilityIndex is already at %d
 [%s] %s:%d visibilityIndex[%d] is cached until endParticipantConfiguration is called.
 [%s] %s:%d %@(%p) visibilityIndex[%d] is cached until endParticipantConfiguration is called.
 [%s] %s:%d prominenceIndex[%d]
 [%s] %s:%d %@(%p) prominenceIndex[%d]
 [%s] %s:%d prominenceIndex is already at %d
 [%s] %s:%d %@(%p) prominenceIndex is already at %d
 [%s] %s:%d prominenceIndex[%d] is cached until endParticipantConfiguration is called.
 [%s] %s:%d %@(%p) prominenceIndex[%d] is cached until endParticipantConfiguration is called.
 [%s] %s:%d [AVC SPATIAL AUDIO] Invalid flags=%08x
 [%s] %s:%d %@(%p) [AVC SPATIAL AUDIO] Invalid flags=%08x
 [%s] %s:%d [AVC SPATIAL AUDIO] Video position info will not be applied until endParticipantConfiguration is called.
 [%s] %s:%d %@(%p) [AVC SPATIAL AUDIO] Video position info will not be applied until endParticipantConfiguration is called.
 [%s] %s:%d ParticipantID=%@ mediaType=%@ mediaState=%@ did succeed[%d]
 [%s] %s:%d %@(%p) ParticipantID=%@ mediaType=%@ mediaState=%@ did succeed[%d]
 [%s] %s:%d Media state update: %@
 [%s] %s:%d %@(%p) Media state update: %@
 [%s] %s:%d Failed to retrieve media state for mediaType=%@
 [%s] %s:%d %@(%p) Failed to retrieve media state for mediaType=%@
 [%s] %s:%d Error encoding media type settings dictionary
 [%s] %s:%d %@(%p) Error encoding media type settings dictionary
 [%s] %s:%d %sEnabled[%d]
 [%s] %s:%d %@(%p) %sEnabled[%d]
 [%s] %s:%d Participant %s is already enabled[%d]
 [%s] %s:%d %@(%p) Participant %s is already enabled[%d]
 [%s] %s:%d %sPaused[%d]
 [%s] %s:%d %@(%p) %sPaused[%d]
 [%s] %s:%d Participant %s is already paused[%d]
 [%s] %s:%d %@(%p) Participant %s is already paused[%d]
 [%s] %s:%d Invalid mediaType=%d
 [%s] %s:%d %@(%p) Invalid mediaType=%d
 [%s] %s:%d Source ID not found for mediaType=%d
 [%s] %s:%d %@(%p) Source ID not found for mediaType=%d
 [%s] %s:%d Participant[%@] received callback for video enabled[%d] did succeed[%d]
 [%s] %s:%d %@(%p) Participant[%@] received callback for video enabled[%d] did succeed[%d]
 [%s] %s:%d Participant[%@] received callback for screen enabled[%d] did succeed[%d]
 [%s] %s:%d %@(%p) Participant[%@] received callback for screen enabled[%d] did succeed[%d]
 [%s] %s:%d Participant[%@] received callback for audio enabled[%d] did succeed[%d]
 [%s] %s:%d %@(%p) Participant[%@] received callback for audio enabled[%d] did succeed[%d]
 [%s] %s:%d Participant[%@] received callback for remote audio enabled[%d] did change
 [%s] %s:%d %@(%p) Participant[%@] received callback for remote audio enabled[%d] did change
 [%s] %s:%d Participant[%@] received callback for remote video enabled[%d] did change
 [%s] %s:%d %@(%p) Participant[%@] received callback for remote video enabled[%d] did change
 [%s] %s:%d Participant[%@] received callback for remote screen video enabled[%d] did change
 [%s] %s:%d %@(%p) Participant[%@] received callback for remote screen video enabled[%d] did change
 [%s] %s:%d Participant=%@ received callback for remote mediaType=%@ change to mediaState=%@
 [%s] %s:%d %@(%p) Participant=%@ received callback for remote mediaType=%@ change to mediaState=%@
 [%s] %s:%d Participant[%@] received callback for audio paused[%d] did succeed[%d]
 [%s] %s:%d %@(%p) Participant[%@] received callback for audio paused[%d] did succeed[%d]
 [%s] %s:%d Participant[%@] received callback for video paused[%d] did succeed[%d]
 [%s] %s:%d %@(%p) Participant[%@] received callback for video paused[%d] did succeed[%d]
 [%s] %s:%d Participant[%@] received callback for remote audio paused[%d] did change
 [%s] %s:%d %@(%p) Participant[%@] received callback for remote audio paused[%d] did change
 [%s] %s:%d Participant[%@] received callback for remote video paused[%d] did change
 [%s] %s:%d %@(%p) Participant[%@] received callback for remote video paused[%d] did change
 [%s] %s:%d Participant[%@] received callback for media priority change:[%@] (%@)
 [%s] %s:%d %@(%p) Participant[%@] received callback for media priority change:[%@] (%@)
 [%s] %s:%d [Media Priority] Participant[%@] calling mediaPrioritiesDidChange:%@
 [%s] %s:%d %@(%p) [Media Priority] Participant[%@] calling mediaPrioritiesDidChange:%@
 [%s] %s:%d No stream groups found
 [%s] %s:%d %@(%p) No stream groups found
 [%s] %s:%d Unknown streamGroupID=%s
 [%s] %s:%d %@(%p) Unknown streamGroupID=%s
 [%s] %s:%d Failed to add streamGroupID=%s for mediaType=%@
 [%s] %s:%d %@(%p) Failed to add streamGroupID=%s for mediaType=%@
 [%s] %s:%d (%d) uuid=%@ videoQuality=%d visibilityIndex=%d prominenceIndex=%d
 [%s] %s:%d %@(%p) (%d) uuid=%@ videoQuality=%d visibilityIndex=%d prominenceIndex=%d
 [%s] %s:%d Failed to archive mediaStates=%@. error=%@
 [%s] %s:%d %@(%p) Failed to archive mediaStates=%@. error=%@
 [%s] %s:%d Failed to decode the media state dictionary. error=%@
 [%s] %s:%d %@(%p) Failed to decode the media state dictionary. error=%@
@:@ AVCStreamOutput-init
AVCStreamOutput [%s] %s:%d @:@ AVCStreamOutput-init (%p) streamToken=%ld, delegate=%@, queue=%@, error=%@
AVCStreamOutput [%s] %s:%d Failed to allocate receiver queue
AVCStreamOutput [%s] %s:%d Failed to allocate the VCStreamOutput for streamToken=%u
AVCStreamOutput [%s] %s:%d Failed to setup the XPC connection
@:@ AVCStreamOutput-dealloc
AVCStreamOutput [%s] %s:%d @:@ AVCStreamOutput-dealloc (%p)
AVCStreamOutput [%s] %s:%d Error creating internal Queue
AVCStreamOutput [%s] %s:%d Failed to allocate the XPC connection
AVCStreamOutput [%s] %s:%d Failed to connect to stream with streamToken=%ld
AVCStreamOutput [%s] %s:%d Error retrieving the server side remoteQueue
AVCStreamOutput [%s] %s:%d Failed to setup the remote queue
AVCStreamOutput [%s] %s:%d Error received from the remote Queue %d
AVCStreamOutput [%s] %s:%d Error making the receiver queue
AVCStreamOutput [%s] %s:%d AVCStreamOutput callback: didPause=%d for streamToken=%u
AVCStreamOutput [%s] %s:%d AVCStreamOutput callback: didStall=%d for streamToken=%u
AVCStreamOutput [%s] %s:%d AVCStreamOutput callback: didDegrade=%d for streamToken=%u
AVCStreamOutput [%s] %s:%d AVCStreamOutput callback: didSuspend=%d for streamToken=%u
AVCStreamOutput [%s] %s:%d AVCStreamOutput callback: didInvalidate for streamToken=%u.
AVCStreamOutput [%s] %s:%d streamOutput=%p streamToken=%u Received NULL sample buffer
AVCStreamOutput [%s] %s:%d AVCStreamOutput: serverd died, notifying client
AVCStreamOutput [%s] %s:%d XPC connection error=%@
AVCStreamOutput [%s] %s:%d Could not decode SampleBuffer
AVCStreamOutput [%s] %s:%d AVCStreamOutput: server died
AVCStreamOutput [%s] %s:%d AVCStreamOutput: strongSelf == nil
AVCStreamOutput [%s] %s:%d streamOutput=%p streamToken=%u length=%zu data=%s sampleBuffer=%@
AVCStreamOutput [%s] %s:%d streamOutput=%p streamToken=%u sampleBuffer=%@
AVCStreamOutput [%s] %s:%d @=@ Health: AVCStreamOutput StreamToken=%u mediaType=%s estimatedDataRate=%0.2fkbps sampleBufferCount=%d
AVCStreamOutput [%s] %s:%d @=@ Health: AVCStreamOutput StreamToken=%u mediaType=%s sampleBufferCount=%d
 [%s] %s:%d Failed to create allocator info: %s
 [%s] %s:%d First come allocator callback received allocation size request that does not match expectations. bufferSize=%d, size=%zu
 [%s] %s:%d High allocation count for %s allocator. New allocation size:%d count:%d
 [%s] %s:%d AVCMediaStreamNegotiatorSettings for AVCMediStreaMode=%ld not supported yet
 [%s] %s:%d HDR10Reference mode enabled on answerer
 [%s] %s:%d stopping transport session
 [%s] %s:%d Could not dispatch transportSessionEvent %d as eventHandler is nil
 [%s] %s:%d Failed to add notification listener %d
 [%s] %s:%d Remove listener failed %d
 [%s] %s:%d VCTransportStreamNotificationBarrier failed %x
 [%s] %s:%d VCTransportSession: Setting connection selection version: local='%@', remote='%@'
 [%s] %s:%d Invalid stream type %d
 [%s] %s:%d streamToken=%ld, queue=%@, error=%@
 [%s] %s:%d streamToken[%u]
 [%s] %s:%d %@(%p) streamToken[%u]
 [%s] %s:%d ERROR In process mode not currently supported
 [%s] %s:%d NOT YET IMPLEMENTED
 [%s] %s:%d streamToken=%ld
 [%s] %s:%d AVCQoSMonitor: serverd died, notifying client
 [%s] %s:%d AVCQoSMonitor: server died
 [%s] %s:%d AVCQoSMonitor: strongSelf == nil
 [%s] %s:%d AVCQoSMonitor callback: qosMonitor:didReceiveReport for streamToken=%u
 [%s] %s:%d AVCQoSMonitor callback: qosMonitor:didReceiveReport Error[%@] 
 [%s] %s:%d VCVisualAlert disabled
 [%s] %s:%d queue doesn't exist for streamToken=%u
 [%s] %s:%d will release queues for streamToken=%u, [queuesForVideoMode count]=%lu
 [%s] %s:%d did release for streamToken=%u, [queueDict count]=%lu
 [%s] %s:%d streamToken[%ld]
 [%s] %s:%d streamToken[%ld] screenAttributes[%s]
 [%s] %s:%d streamToken[%ld] videoAttributes[%s]
 [%s] %s:%d streamToken[%u] didPause[%d]
 [%s] %s:%d streamToken[%u] didStall[%d]
 [%s] %s:%d streamToken[%u] isDegraded[%d]
 [%s] %s:%d streamToken[%u] isSuspended[%d]
 [%s] %s:%d Invalid streamToken and frameRect arguments
 [%s] %s:%d VCRemoteVideoManager: video queue does not exist for streamToken=%u
 [%s] %s:%d VCRemoteVideoManager: video queue does not exist for streamToken=%ld
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCRemoteVideoManager.m:%d: token[%ld] state[%s]
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCRemoteVideoManager.m:%d: %s Error no VCRemoteVideoState for this stream token
 [%s] %s:%d VCRemoteVideoManager: new client initialized for streamToken=%ld
 [%s] %s:%d VCRemoteVideoManager: ERROR video queue does not exist for streamToken=%u
 [%s] %s:%d VCRemoteVideoManager: Terminate connection for streamToken=%u
 [%s] %s:%d Failed to allocate the audio tap I/O map
 [%s] %s:%d %@(%p) Failed to allocate the audio tap I/O map
 [%s] %s:%d Failed to allocate the delegate queue
 [%s] %s:%d %@(%p) Failed to allocate the delegate queue
 [%s] %s:%d Failed to allocate the state queue
 [%s] %s:%d %@(%p) Failed to allocate the state queue
 [%s] %s:%d Audio tap already registered for streamToken=%u
 [%s] %s:%d %@(%p) Audio tap already registered for streamToken=%u
 [%s] %s:%d Failed to register audio tap for streamToken=%u result=0x%x
 [%s] %s:%d %@(%p) Failed to register audio tap for streamToken=%u result=0x%x
 [%s] %s:%d Failed to register start the audioIO for streamToken=%u. error=%@
 [%s] %s:%d %@(%p) Failed to register start the audioIO for streamToken=%u. error=%@
 [%s] %s:%d Audio tap not found. streamToken=%u
 [%s] %s:%d %@(%p) Audio tap not found. streamToken=%u
 [%s] %s:%d Failed to stop the audioIO for streamToken=%u. error=%@
 [%s] %s:%d %@(%p) Failed to stop the audioIO for streamToken=%u. error=%@
 [%s] %s:%d Unsupported tapType=%d
 [%s] %s:%d Failed to allocate power spectrum source for tapType=%d
 [%s] %s:%d Failed to allocate the audio tap settings for tapType=%d
 [%s] %s:%d Failed to allocate the audio IO for tapType=%d
 [%s] %s:%d Using default json policies.
 [%s] %s:%d Error loading json config path.
 [%s] %s:%d Error loading json policies from path=%@ error=%@
 [%s] %s:%d Error serializing json policies.
 [%s] %s:%d Failed to create VCEmulatedNetwork
 [%s] %s:%d VCRealTimeThread_Start for network simulator %s
 [%s] %s:%d VCRealTimeThread_Initialize for network simulator thread FAILED
 [%s] %s:%d VCRealTimeThread_Stop for network simulator
 [%s] %s:%d simulator is NULL!
 [%s] %s:%d %s mSampleRate : mFormatID : mFormatFlags : mBytesPerPacket : mFramesPerPacket : mBytesPerFrame : mChannelsPerFrame : mBitsPerChannel : samplesPerFrame 
 [%s] %s:%d %s %8.0f    : %7s   :  0x%08x  : %8u        : %9u        : %8u       : %9u         : %9u       : %9u       
 [%s] %s:%d cryptor should not be NULL
 [%s] %s:%d buffer must not be NULL
 [%s] %s:%d bufferSize must not be NULL
 [%s] %s:%d buffer is too small
 [%s] %s:%d keyMaterialIndex must not be NULL
 [%s] %s:%d Wrong size of input SFrame header: expected=%d, received=%zu
 [%s] %s:%d frameMKI must not be NULL
 [%s] %s:%d activeCounter must not be NULL
 [%s] %s:%d headerSize must not be NULL
 [%s] %s:%d SFrame signatureFlag must not be set
 [%s] %s:%d SFrame kidExtentionFlag must be set
 [%s] %s:%d SFrame header is bigger than output buffer size
 [%s] %s:%d Could not create SFrame MKI
 [%s] %s:%d encryptedDataSize is too small
 [%s] %s:%d keyHolder should not be NULL
 [%s] %s:%d cipherSuitepe parameter has wrong value
 [%s] %s:%d encryptionLabel should not be NULL
 [%s] %s:%d Create instance failed
 [%s] %s:%d [%p] isReplayProtectionEnabled=%d
 [%s] %s:%d Failed due to invalid input parameter
 [%s] %s:%d Failed due to encryption material not being ready
 [%s] %s:%d _VCCryptor_DeriveIV failed
 [%s] %s:%d CMBlockBuffer is not contiguous
 [%s] %s:%d VCCryptor_ComposeSFrameHeaderWithCounterAndMKI failed
 [%s] %s:%d CCCryptorReset failed to reset cryptor
 [%s] %s:%d CCCryptorUpdate failed to encryp data
 [%s] %s:%d Encryptor should have encryped at least '%zu' bytes bu only encryped '%zu' bytes
 [%s] %s:%d VCCryptor_Decrypt failed due to invalid input parameter
 [%s] %s:%d VCCryptor_Decrypt failed due to invalid SFrame
 [%s] %s:%d Size of encrypted SFrame is less than its required overhead. Minimum required size '%zu', actual size '%zu'
 [%s] %s:%d VCCryptor_Decrypt failed authenticate incoming frame
 [%s] %s:%d [%p] VCCryptor_CheckReplayWindow detected replay. counter=%llu, maxReceivedCounter=%llu
 [%s] %s:%d Decrypor should have produced at least '%zu' bytes but only produced '%zu' bytes
 [%s] %s:%d VCSecurityKeyHolder_AssociateKeyIndex failed
 [%s] %s:%d inputBuffer contains incorrect data size '%zu'. Expected at least '%zu' bytes of input data
 [%s] %s:%d Cryptor is valid, nothing to do here
 [%s] %s:%d Invalid key material passed in callback
 [%s] %s:%d VCSecurityKeyHolder_RegisterForKeyMaterialChangeNotification failed
 [%s] %s:%d VCSecurityKeyHolder_CopyKeyMaterialForKeyIndex failed, MKI=%s
 [%s] %s:%d Key material with MKI=%s is not ready yet
 [%s] %s:%d _VCCryptor_SetupCryptor failed to find key material from '%@' with disableMKI array '%@'
 [%s] %s:%d _VCCryptor_SetupCryptor failed for key material '%@'
 [%s] %s:%d Invalid key material received '%@'
 [%s] %s:%d Failed to derive secret key with key material '%@'
 [%s] %s:%d Failed to derive encryption key with key material '%@'
 [%s] %s:%d Failed to derive salt key with key material '%@'
 [%s] %s:%d Failed to derive authentication key with key material '%@'
 [%s] %s:%d CCCryptorCreateWithMode failed to creae cryptor
 [%s] %s:%d iv should not be NULL
VCMediaStream [%s] %s:%d _transportArray is empty, and we are trying to get the default transport, which does not exist.
VCMediaStream [%s] %s:%d _transportArray is empty, and we are trying to get the default stream config, which does not exist.
VCMediaStream [%s] %s:%d _transportArray does not have a oneToOne stream configuration.
VCMediaStream [%s] %s:%d %s[%p] %s canDecrypt[%d]
VCMediaStream [%s] %s:%d UseTransportStreamsForSockets feature flag set
VCMediaStream [%s] %s:%d VCTransportSession init failed
VCMediaStream [%s] %s:%d Connection Setup Failed error = %@
VCMediaStream [%s] %s:%d Attempting to connect link=%@
VCMediaStream [%s] %s:%d %@(%p) Attempting to connect link=%@
VCMediaStream [%s] %s:%d isShared:%d sockets rtp(%d) rtcp(%d)
VCMediaStream [%s] %s:%d Failed to create VCTransportSessionSocket with backingRTPSocket=%d, backingRTCPSocket=%d
VCMediaStream [%s] %s:%d UseTransportStreamsForNW feature flag set
VCMediaStream [%s] %s:%d nw_connection %p is backed by socket %d duped to %d
VCMediaStream [%s] %s:%d nw_connection %p is backed by socket %d. Failed to dup
VCMediaStream [%s] %s:%d Failed to create connectionClientID with %@
VCMediaStream [%s] %s:%d Failed to create nw_connection
VCMediaStream [%s] %s:%d Get nw connection state %d
VCMediaStream [%s] %s:%d Get error %@ from nw connection with state: %d!
VCMediaStream [%s] %s:%d nw_connection ready timeout
VCMediaStream [%s] %s:%d nw_connection start failed
VCMediaStream [%s] %s:%d VTP_ScheduleReceiveForNWConnection failed
VCMediaStream [%s] %s:%d Setting callbacks for monitor that is nil
VCMediaStream [%s] %s:%d UseTransportStreamsForProxy feature flag set
VCMediaStream [%s] %s:%d Failed with error %@
VCMediaStream [%s] %s:%d UseTransportStreamsForIDS feature flag set
VCMediaStream [%s] %s:%d IDS eventHandler called without event type
VCMediaStream [%s] %s:%d IDS channel connected
VCMediaStream [%s] %s:%d IDS channel disconnected
VCMediaStream [%s] %s:%d %s[%p]: Create datagram channel failed with error %s
VCMediaStream [%s] %s:%d DatagramChannel start failed with error %x
VCMediaStream [%s] %s:%d Channel sequence has inactive slots %s
VCMediaStream [%s] %s:%d (%p) Generated _streamToken=%u
VCMediaStream [%s] %s:%d NetworkAgent is being asserted by setupMediaStream
VCMediaStream [%s] %s:%d NetworkAgent is being un-asserted by VCMediaStream's dealloc
VCMediaStream [%s] %s:%d Failed to create RTP extension. Error=%d
VCMediaStream [%s] %s:%d %@(%p) Failed to create RTP extension. Error=%d
VCMediaStream [%s] %s:%d Failed to set rtp timestamp rate. Error=%d
VCMediaStream [%s] %s:%d %@(%p) Failed to set rtp timestamp rate. Error=%d
VCMediaStream [%s] %s:%d Failed to create RTP handle
VCMediaStream [%s] %s:%d %@(%p) Failed to create RTP handle
VCMediaStream [%s] %s:%d Failed to create media stream transport
VCMediaStream [%s] %s:%d %@(%p) Failed to create media stream transport
VCMediaStream [%s] %s:%d %s[%p] Using Media Control Info Generator from multiway config
VCMediaStream [%s] %s:%d %s[%p] Using Feedback Controller from multiway config
VCMediaStream [%s] %s:%d Registered callbacks for MediaControlInfoGenerator[%p], type=%d, direction=%ld
VCMediaStream [%s] %s:%d %@(%p) Registered callbacks for MediaControlInfoGenerator[%p], type=%d, direction=%ld
VCMediaStream [%s] %s:%d Registered callbacks for oneToOne MediaControlInfoGenerator[%p], type=%d, direction=%ld
VCMediaStream [%s] %s:%d %@(%p) Registered callbacks for oneToOne MediaControlInfoGenerator[%p], type=%d, direction=%ld
VCMediaStream [%s] %s:%d %s[%p] Api usage error. Overriding generator from multiway config with a locally created generator
VCMediaStream [%s] %s:%d %s[%p] Registering Media Control Info Generator Callbacks for direction %ld
VCMediaStream [%s] %s:%d Deregistering callbacks for MediaControlInfoGenerator[%p]
VCMediaStream [%s] %s:%d %@(%p) Deregistering callbacks for MediaControlInfoGenerator[%p]
VCMediaStream [%s] %s:%d Deregistering callbacks for oneToOne MediaControlInfoGenerator[%p]
VCMediaStream [%s] %s:%d %@(%p) Deregistering callbacks for oneToOne MediaControlInfoGenerator[%p]
VCMediaStream [%s] %s:%d %s[%p] Failed to fill the media control info
VCMediaStream [%s] %s:%d %s[%p] Failed to process feedback control info
VCMediaStream [%s] %s:%d %s[%p] Failed to process the probing control info
VCMediaStream [%s] %s:%d %s[%p] Failed to process transport media control info
VCMediaStream [%s] %s:%d Propagating MKM to transport=%p streamID=%d
VCMediaStream [%s] %s:%d %@(%p) Propagating MKM to transport=%p streamID=%d
VCMediaStream [%s] %s:%d MKM not updated on media stream transports. shouldHandle=%d isTransportArrayCount=%u
VCMediaStream [%s] %s:%d %@(%p) MKM not updated on media stream transports. shouldHandle=%d isTransportArrayCount=%u
VCMediaStream [%s] %s:%d Resetting decryption status
VCMediaStream [%s] %s:%d %s[%p] Failed to setRemoteAddress on transportSession %d
VCMediaStream [%s] %s:%d %s[%p] %s
VCMediaStream [%s] %s:%d %s[%p] error[%s]
VCMediaStream [%s] %s:%d Setting stream config with networkFeedbackController=%p type=%@
VCMediaStream [%s] %s:%d %s[%p] %s error configuring stream
VCMediaStream [%s] %s:%d start timed out
VCMediaStream [%s] %s:%d Start called while media stream is running (state=%d)
VCMediaStream [%s] %s:%d %@(%p) Start called while media stream is running (state=%d)
VCMediaStream [%s] %s:%d Failed to start media stream transports
VCMediaStream [%s] %s:%d %@(%p) Failed to start media stream transports
VCMediaStream [%s] %s:%d Failed to start media
VCMediaStream [%s] %s:%d %@(%p) Failed to start media
@:@ VCMediaStream-onStart
VCMediaStream [%s] %s:%d @:@ VCMediaStream-onStart %@ (%p) streamToken=%d, operatingMode=%d
VCMediaStream [%s] %s:%d Exiting state:%s Entering state:%s
VCMediaStream [%s] %s:%d %@(%p) Exiting state:%s Entering state:%s
VCMediaStream [%s] %s:%d Ignoring Link connected event on stream with _state=%lu self=%@
VCMediaStream [%s] %s:%d %@(%p) Ignoring Link connected event on stream with _state=%lu self=%@
VCMediaStream [%s] %s:%d %s[%p] Executing stop completion handler, succeeded=%d error=%@
VCMediaStream [%s] %s:%d %@(%p) %s[%p] Executing stop completion handler, succeeded=%d error=%@
VCMediaStream [%s] %s:%d stop timed out
VCMediaStream [%s] %s:%d Stop called while media stream is already stopped (state=%d)
VCMediaStream [%s] %s:%d %@(%p) Stop called while media stream is already stopped (state=%d)
VCMediaStream [%s] %s:%d %s[%p] Executing stop completion handler, stop succeeded[%d]
VCMediaStream [%s] %s:%d %@(%p) %s[%p] Executing stop completion handler, stop succeeded[%d]
VCMediaStream [%s] %s:%d %s[%p] Stopping stream transports
VCMediaStream [%s] %s:%d %@(%p) %s[%p] Stopping stream transports
VCMediaStream [%s] %s:%d Failed to stop media
VCMediaStream [%s] %s:%d %@(%p) Failed to stop media
VCMediaStream [%s] %s:%d %s[%p] setPause=%d completed success=%d error=%@
VCMediaStream [%s] %s:%d pause timed out
VCMediaStream [%s] %s:%d setPause=%d called while in same state=%d already
VCMediaStream [%s] %s:%d %@(%p) setPause=%d called while in same state=%d already
VCMediaStream [%s] %s:%d error=%s
VCMediaStream [%s] %s:%d %@(%p) error=%s
VCMediaStream [%s] %s:%d %s[%p] setPause (was %d is %d)
VCMediaStream [%s] %s:%d Error pausing media
VCMediaStream [%s] %s:%d %@(%p) Error pausing media
VCMediaStream [%s] %s:%d Error resuming media
VCMediaStream [%s] %s:%d %@(%p) Error resuming media
VCMediaStream [%s] %s:%d %s[%p] infoDict = %s networkSockets = %s callID = %s
VCMediaStream [%s] %s:%d %s[%p] %s was[%d] now[%d]
VCMediaStream [%s] %s:%d %s[%p] %s streamDirection[%ld]
VCMediaStream [%s] %s:%d %s[%p] %s rtcpEnabled[%d]
VCMediaStream [%s] %s:%d %s[%p] %s rtpTimeOutEnabled[%d]
VCMediaStream [%s] %s:%d %s[%p] %s rtcpTimeOutEnabled[%d]
VCMediaStream [%s] %s:%d %s[%p] %s decryptionTimeOutEnabled[%d]
VCMediaStream [%s] %s:%d %s[%p] %s rtpTimeOutInterval[%f]
VCMediaStream [%s] %s:%d %s[%p] %s rtcpTimeOutInterval[%f]
VCMediaStream [%s] %s:%d %s[%p] %s decryptionTimeOutInterval[%f]
VCMediaStream [%s] %s:%d %s[%p] %s rtcpSendInterval[%f]
VCMediaStream [%s] %s:%d Failed to generate reception report.
VCMediaStream [%s] %s:%d %@(%p) Failed to generate reception report.
VCMediaStream [%s] %s:%d RTCP send heartbeat called while the stream has already stopped.
VCMediaStream [%s] %s:%d %@(%p) RTCP send heartbeat called while the stream has already stopped.
VCMediaStream [%s] %s:%d RTCP HeartBeat intervalElapsed:%d remainingInterval:%.5f
VCMediaStream [%s] %s:%d Error already started
VCMediaStream [%s] %s:%d %@(%p) Error already started
VCMediaStream [%s] %s:%d RTCP not properly configured. Do not start heart beat. Enabled=%d, interval=%f
VCMediaStream [%s] %s:%d %@(%p) RTCP not properly configured. Do not start heart beat. Enabled=%d, interval=%f
VCMediaStream [%s] %s:%d Starting RTCP send heartbeat (interval=%f)
VCMediaStream [%s] %s:%d %@(%p) Starting RTCP send heartbeat (interval=%f)
VCMediaStream [%s] %s:%d Failed to create RTCP send heartbeat
VCMediaStream [%s] %s:%d %@(%p) Failed to create RTCP send heartbeat
VCMediaStream [%s] %s:%d Tearing down rtcp heartbeat!
VCMediaStream [%s] %s:%d %@(%p) Tearing down rtcp heartbeat!
VCMediaStream [%s] %s:%d Schedule next timeout @ %f currentTime:%f
VCMediaStream [%s] %s:%d %@(%p) Schedule next timeout @ %f currentTime:%f
VCMediaStream [%s] %s:%d Last RTP packet receive time:%f now:%f rtpTimeoutEnabledTime=%f
VCMediaStream [%s] %s:%d Last RTCP packet receive time:%f now:%f
VCMediaStream [%s] %s:%d DecryptionErrorStartTime:%f now:%f. Triggering decryption timeout
VCMediaStream [%s] %s:%d DecryptionErrorStartTime:%f lastDecryptionMKMRecoveryTime:%f now:%f. Triggering MKM recovery
VCMediaStream [%s] %s:%d RTP/RTCP/Decryption timeouts not configured. RTP Enabled=%d, interval=%f, RTCP Enabled=%d, interval=%f Decryption Enabled=%d, interval=%f
VCMediaStream [%s] %s:%d %@(%p) RTP/RTCP/Decryption timeouts not configured. RTP Enabled=%d, interval=%f, RTCP Enabled=%d, interval=%f Decryption Enabled=%d, interval=%f
VCMediaStream [%s] %s:%d already started
VCMediaStream [%s] %s:%d %@(%p) already started
VCMediaStream [%s] %s:%d Starting timeout heartbeat (interval=%f)
VCMediaStream [%s] %s:%d %@(%p) Starting timeout heartbeat (interval=%f)
VCMediaStream [%s] %s:%d Failed to create timeout heartbeat
VCMediaStream [%s] %s:%d %@(%p) Failed to create timeout heartbeat
VCMediaStream [%s] %s:%d heartbeat is not active
VCMediaStream [%s] %s:%d %@(%p) heartbeat is not active
VCMediaStream [%s] %s:%d Tearing down timeout heartbeat!
VCMediaStream [%s] %s:%d %@(%p) Tearing down timeout heartbeat!
VCMediaStream [%s] %s:%d MediaCallback: SRTP key needs update
VCMediaStream [%s] %s:%d MediaCallback: Gap in RTP sequence number detected
VCMediaStream [%s] %s:%d MediaCallback: call back is not supported for notification %d.
VCMediaStream [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCMediaStream.m:%d: MediaCallback: notificaiton %d unknown, no action.
 [%s] %s:%d AddPacket: ^^^^^^ @%.3f MP %d  %d/%d/%d P: %d  pTWL: %p %d
 [%s] %s:%d  *#*#*#*#*#*#*#*# BAD AUD. pkt INTERVAL: %f (avg: %f) 
 [%s] %s:%d  AUD. pkt INTERVAL: %f (avg: %f) 
 [%s] %s:%d Packet with a shouldScheduleQueuedPackets set. Empty throttling queue! iPktsAddedToPktListCount=%d
 [%s] %s:%d Packet with a shouldScheduleQueuedPackets set. Empty waiting queue! iPktsCount=%d
 [%s] %s:%d ActiveProbing_ProcessIncomingPacket: %d  ScheduleReleasedPkts: %d 
 [%s] %s:%d MediaQueue_Throttling_SetAudioInterval: %f
 [%s] %s:%d MediaQueue_Throttling_SetIsIPv6: %d 
 [%s] %s:%d 
 FORCE_MIN_PKT org: %d new: %d gob: %d 
 [%s] %s:%d 
 FORCE_MIN_PKT did NOT take effect: iGobBytes: %d  iPktBytes: %d 
 [%s] %s:%d Throttling: %d 
 [%s] %s:%d dwHardCodeBWEstRate: %d 
 dwHardCodeTxRate: %d 
 [%s] %s:%d g_bThrottlingSendLog: %d  g_bThrottlingRecvLog: %d  g_bThrottlingProbeSeqLog: %d 
 [%s] %s:%d  ------ MQ IN/OUT RealTime stats are ENABLED
 [%s] %s:%d ProcessThrottledPktsWithNewAudioPkt: Pkts: %d  now: %f   interval: %f  next_audio: %f 
 [%s] %s:%d ProcessThrottledPktsWithTime: ^^^^^^ MP %d  %d/%d/%d P: %d  pTWL: %p %d  sched: %.3f now: %.3f
 [%s] %s:%d OpportunisticBWEProbeSeqTagging: ^^^^^^ MP %d  %d/%d/%d P: %d  pTWL: %p %d  sched: %.3f now: %.3f PROBE_id: %d 
 [%s] %s:%d OpportunisticBWEProbeSeqTagging FAILED for pkt %d/%d/%d and audio pkt %d/%d/%d 
 [%s] %s:%d ScheduleReleasedPkts: Updating last pkt's in pThrottledPktsWaitingList == NULL
 [%s] %s:%d  VIDEO GAP: %f  last: %f  now: %.3f new: %f 
 [%s] %s:%d  TOO FAST: now: %.3f last: %f factor: %.3f 
 [%s] %s:%d  TOO FAST: now: %.3f last: %f --> updated: %f   factor: %.3f 
 [%s] %s:%d  TOO MUCH ACCEL!!!!!!!!!!!!!!!!!!
 [%s] %s:%d  PROBESEQ comp: %f -> new: %f 
 [%s] %s:%d  dSinceLastPktIssue %f  dNow %f    dBaseTime %f = dFirstPktScheduleTime %f - dDeliveryEstimate %f (%d %d)
 [%s] %s:%d UNEXPECTED!!! CalcBoostIncrease:  SCHEME2: %f  SCHEME1: %f  last: %f base: %f, %f %d %d %f %f %d %f 
 [%s] %s:%d  SCHEME %d:   %f   %f    (INC %f)
 [%s] %s:%d  Accelerating: ^^^^^^ MP %d  %d/%d/%d P: %d  by %.3fs (%.5f %d) to %.3f b: %d 
 [%s] %s:%d AccelerateThrottlingQueue: %.3f from %.3f to %.3f (%d pkts) 
 [%s] %s:%d 
 THROTTLING: disabled->enabled   dLastThrottledVideoPktTime init: %f 
 [%s] %s:%d 
 THROTTLING: enabled->disabled  EMPTY THROT QUEUE -> DISABLED
 [%s] %s:%d 
 THROTTLING: enabled->disabled  EDGE ... signalling the caller to FLUSH pending pkts in queue
 [%s] %s:%d 
 SCHEDULING: len/rate: %d/%d  take: %f  me: %f  next: %f 
 [%s] %s:%d  SchedulePkt: %d  %d/%d/%d rate: %d  sched: %f now: %f aud: %f  b: %d mode: %c 
 [%s] %s:%d Load switch heifHevcLivePhotosEnabled %d
 [%s] %s:%d Initializing moments rule collections with HEIF and HEVC enabled:%d and the storebag settings value was: %d
 [%s] %s:%d No moments supported for device class %d
 [%s] %s:%d Unknown chipID 0x%x
 [%s] %s:%d DTLS timeout: set via preferences to %d seconds for call (%d)
 [%s] %s:%d DTLS_Cleanup done on handle %d
 [%s] %s:%d SECURETRANSPORT SETUP %s...
 [%s] %s:%d SECURETRANSPORT FAILED...
 [%s] %s:%d DTLS_UpdateHandshake:: process late incoming handshake packet...
 [%s] %s:%d DTLS_UpdateHandshake invalid incoming handshake packet
 [%s] %s:%d Failed to retrieve input data pointer
 [%s] %s:%d Failed to allocate the output data pointer with status:%d
 [%s] %s:%d Failed to retrieve output data pointer with status:%d
 [%s] %s:%d SSLRead failed with status:%d
 [%s] %s:%d DTLS_Read failed with %d
 [%s] %s:%d DTLS_Write failed with %d
 [%s] %s:%d WRMClient[%p] init
 [%s] %s:%d WRMClient[%p] dealloc
 [%s] %s:%d VTP_SocketForIDS failed %x
 [%s] %s:%d Corrupted baseband notification. Length[%d] < needed[%d]
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCBasebandNotificationParser.c:%d: Bad ACK, #dropped SN doesn't match(%d != %u).
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCBasebandNotificationParser.c:%d: Bad ACK, #dropped SN exceeds limit(%d > %d).
 [%s] %s:%d Baseband dropped %u packet(s) for PT %u.
 [%s] %s:%d Corrupted baseband notification ACK packet. Length[%d] < needed[%d]
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCBasebandNotificationParser.c:%d: Got PTs more than VC_BBNOTE_MAX_PAYLOAD_TYPES (%d) in a DropACK
 [%s] %s:%d Corrupted baseband notification packet (cookie). Length[%d] < needed[%d]
 [%s] %s:%d Corrupted baseband notification codec rate change packet. Length[%d] < needed[%d]
 [%s] %s:%d Corrupted baseband notification report packet. Length[%d] < needed[%d]
 [%s] %s:%d Failed to create screen secondary rules!
 [%s] %s:%d Screen rules: No suitable rules for this device
 [%s] %s:%d Screen rules: No suitable decode rules for this device
 [%s] %s:%d Failed to create video rule for secondary screen !
 [%s] %s:%d VCTimescaleWSOLAClass is increasing size of extendedBuffer by 8x.
AVCCaptions [%s] %s:%d Invalid closed captions token received
AVCCaptions [%s] %s:%d Failed to allocate closed captions token array
 [%s] %s:%d Object '%@' is not a valid VCPacketFilterBasebandNotification
 [%s] %s:%d Parameter '%@' is currently not set for packet filter
 [%s] %s:%d Frame Transform resize, %p outputSize %zux%zu
 [%s] %s:%d Forcing 'width' portion of screen dimensions to %@ as specified by the '%@' preference
 [%s] %s:%d Forcing 'height' portion of screen dimensions to %@ as specified by the '%@' preference
 [%s] %s:%d screenWidth=%d, screenHeight=%d
 [%s] %s:%d featureFlagEnabled = %d, hardwareSupport = %d
 [%s] %s:%d Forcing device class to %@ as specified by the '%@' preference
 [%s] %s:%d Unknown chipID 0x%llx
 [%s] %s:%d SwitchManager: Setting individual local switches for the purpose of QA testing
 [%s] %s:%d SwitchManager: Non-seed build - using master local switch: %08X
 [%s] %s:%d SwitchManager: selectedAudioTestGroupPermutation: %08X
 [%s] %s:%d SwitchManager: selectedVideoTestGroupPermutation: %08X
 [%s] %s:%d SwitchManager: selectedNetworkTestGroupPermutation: %08X
 [%s] %s:%d SwitchManager: selectedRateControlTestGroupPermutation: %08X
 [%s] %s:%d SwitchManager: selectedDuplicationTestGroupPermutation: %08X
 [%s] %s:%d SwitchManager: updateDuplicationEnhancementSwitches updates local switches to: %08X
 [%s] %s:%d keyManager should not be NULL
 [%s] %s:%d usage has invalid value '%d'
 [%s] %s:%d clientID should not be NULL
 [%s] %s:%d keyHolder instance '%p' created
 [%s] %s:%d MKMList should not be NULL
 [%s] %s:%d Immutable instance does not have key manager
 [%s] %s:%d Can not set key material change notification handler for immutable instance of VCSecurityKeyholder
 [%s] %s:%d keyIndex should not be NULL
 [%s] %s:%d keyHolder instance '%p' finalized
 [%s] %s:%d Received Uplink notification for keyHolder instance '%p' with key material '%@'
 [%s] %s:%d Wrong notification received from VCSecurityKeyManager : '%@'
 [%s] %s:%d Notification from wrong VCSecurityKeyManager instance received: Expected instance '%llu' but got '%llu'
 [%s] %s:%d Invalid combination of groupID='%s' mediaType='%s' mediaSubtype='%s' syncGroupID='%s'
 [%s] %s:%d Failed to create the U1 config for groupID='%s'
 [%s] %s:%d Failed to setup payloads for groupID='%s'
 [%s] %s:%d Failed to setup streams for groupID='%s'
 [%s] %s:%d Invalid argument. streamGroupConfig is nil
 [%s] %s:%d Failed to retrieve defaultConfig for streamGroup=%u
 [%s] %s:%d Failed to read the payload configurations for streamGroupID=%s
 [%s] %s:%d Failed to add streams to stream group (streamGroupID=%s)
 [%s] %s:%d Failed to process the stream config (streamIndex=%d) for streamGroupID=%s. Skipping remaining streams
 [%s] %s:%d Unknown cipherSuite=%d (streamIndex=%d) for streamGroupID=%s. Skipping remaining streams
 [%s] %s:%d Stream group (streamGroupID=%s) has no valid streams
 [%s] %s:%d Unexpected streamGroup value=%u ('%s')
 [%s] %s:%d Failed to allocate the stream config
 [%s] %s:%d Found payload config that isn't used for any stream! payloadConfig=%@
 [%s] %s:%d Failed to allocate the payload config
 [%s] %s:%d Failed to create the payload spec
 [%s] %s:%d VCDTMFToneGenerator[%p] Initialize event=%d, powerLevel=%d, sampleRate=%d
 [%s] %s:%d Received Invalid DTMF eventType=%d
 [%s] %s:%d Received Invalid powerLevel=%d
 [%s] %s:%d Received Invalid sampleRate=%d
 [%s] %s:%d VCDTMFToneGenerator[%p] not initialized
 [%s] %s:%d VCDTMFToneGenerator[%p] Generate DTMF tone samples, sampleCount=%d
 [%s] %s:%d NO HEVC payloades
 [%s] %s:%d Failed to allocate videoRules
 [%s] %s:%d Failed to allocate rule for (width=%u, height=%u, frameRate=%u)
 [%s] %s:%d TCP connectionLimitedBitrate=%u
 [%s] %s:%d Use general wifi relay connectionLimitedBitrate=%u for TCP
 [%s] %s:%d HandoverReport: add result backup IDS connection %s
 [%s] %s:%d HandoverReport: add result %s IDS connection %s. Primary: %s, secondary: %s
 [%s] %s:%d HandoverReport: connection array %s has %lu connections
 [%s] %s:%d HandoverReport: no connection available after link is removed!
 [%s] %s:%d HandoverReport: selected new primary %s due to interface change (current secondary %s)
 [%s] %s:%d HandoverReport: no secondary connection available after link is removed!
 [%s] %s:%d HandoverReport: selected new secondary %s due to interface change
 [%s] %s:%d Opting out all streams for non primary connections!
 [%s] %s:%d HandoverReport: updated preferred local interface for duplication to %s
 [%s] %s:%d HandoverReport: updated preferred remote interface for duplication to %s
 [%s] %s:%d HandoverReport: selected connection %s for duplication
 [%s] %s:%d HandoverReport: Should not call this to choose one of the connections!
 [%s] %s:%d HandoverReport: new connection %s is not added, stop keep alive
 [%s] %s:%d HandoverReport: connection %s is replaced, stop keep alive
 [%s] %s:%d HandoverReport: Updated link preference order: %@
 [%s] %s:%d Failed to allocate the streamGroupID set
 [%s] %s:%d %@(%p) Failed to allocate the streamGroupID set
 [%s] %s:%d Failed to allocate peer subscribed streams
 [%s] %s:%d The dictionary for stream send group config for stream mode is nil
 [%s] %s:%d %@(%p) The dictionary for stream send group config for stream mode is nil
 [%s] %s:%d Stream group mode cannot be changed. Current state=%u, configForMode=%@
 [%s] %s:%d %@(%p) Stream group mode cannot be changed. Current state=%u, configForMode=%@
 [%s] %s:%d Successfully set Stream Send GroupID=%s to mode=%u
 [%s] %s:%d %@(%p) Successfully set Stream Send GroupID=%s to mode=%u
 [%s] %s:%d Failed to set stream group mode. Current mode=%u new mode=%u
 [%s] %s:%d %@(%p) Failed to set stream group mode. Current mode=%u new mode=%u
 [%s] %s:%d Failed to reset stream group back to original mode. Current mode=%u
 [%s] %s:%d %@(%p) Failed to reset stream group back to original mode. Current mode=%u
 [%s] %s:%d Failed to setup streams with configuration
 [%s] %s:%d %@(%p) Failed to setup streams with configuration
 [%s] %s:%d Failed to configure streams
 [%s] %s:%d %@(%p) Failed to configure streams
 [%s] %s:%d Stream group config cannot be changed. Current state=%u
 [%s] %s:%d %@(%p) Stream group config cannot be changed. Current state=%u
 [%s] %s:%d Updating streamGroupConfig for mode=%d
 [%s] %s:%d %@(%p) Updating streamGroupConfig for mode=%d
 [%s] %s:%d Updating active streams for active connection change %d.
 [%s] %s:%d %@(%p) Updating active streams for active connection change %d.
 [%s] %s:%d Active stream count %d, streams currently suspended: %d
 [%s] %s:%d %@(%p) Active stream count %d, streams currently suspended: %d
 [%s] %s:%d Active stream count has dropped to zero. Will signal delegate that streams have suspended.
 [%s] %s:%d %@(%p) Active stream count has dropped to zero. Will signal delegate that streams have suspended.
 [%s] %s:%d Active stream count is no longer zero. Will signal delegate that streams will be resumed.
 [%s] %s:%d %@(%p) Active stream count is no longer zero. Will signal delegate that streams will be resumed.
 [%s] %s:%d Failed to create formattedArguments
 [%s] %s:%d %s
 [%s] %s:%d Unknown issue detector type
 [%s] %s:%d Failed to allocate the audio issue detector
 [%s] %s:%d Failed to allocate the utils for receiver issue detector
 [%s] %s:%d VCAudioIssueDetector=%p of type=%d created
 [%s] %s:%d VCAudioIssueDetector creation failed
 [%s] %s:%d Audio issue detector ref is NULL
 [%s] %s:%d VCAudioIssueDetector=%p finalized
 [%s] %s:%d VCAudioIssueDetector=%p configured
 [%s] %s:%d VCAudioIssueDetector=%p link type updated
 [%s] %s:%d VCAudioIssueDetector=%p started
 [%s] %s:%d VCAudioIssueDetector=%p stopped
 [%s] %s:%d Invalid parameter issueDetector=%p frameInfo=%p
 [%s] %s:%d Invalid parameter issueDetector=%p reportingStats=%p
 [%s] %s:%d Rtp inactivity detected in audio issue detector=%p, direction=%d
 [%s] %s:%d Rtcp inactivity detected in audio issue detector=%p, direction=%d
AVConferenceXPCClient [%s] %s:%d 
AVConferenceXPCClient [%s] %s:%d %@(%p) 
AVConferenceXPCClient [%s] %s:%d XPC Client: disposing off connection to server
AVConferenceXPCClient [%s] %s:%d XPC Client: creating new connection to server
AVConferenceXPCClient [%s] %s:%d name=%s, connection=%p
AVConferenceXPCClient [%s] %s:%d XPC Client: Cannot talk to server because server died or parent deallocated, %s
AVConferenceXPCClient [%s] %s:%d XPC Client: processing registered reply for service %@
AVConferenceXPCClient [%s] %s:%d XPC Client: no registered block found for service %@
AVConferenceXPCClient [%s] %s:%d XPC Client: Sending message to server for service: %s
AVConferenceXPCClient [%s] %s:%d XPC Client: received error from server while processing reply, %s
AVConferenceXPCClient [%s] %s:%d XPC Client: executing reply block for service %s
AVConferenceXPCClient [%s] %s:%d XPC Client: Sending sync message to server for service: %s
AVConferenceXPCClient [%s] %s:%d XPC Client: Adding registered block for service %s
AVConferenceXPCClient [%s] %s:%d XPC Client: Removing registered block for service %s
 [%s] %s:%d encode score = %d, encodingHighDef = %d decoding score = %d, decodeHighDef = %d
 [%s] %s:%d Found default encode score setting, setting encode score to %d
 [%s] %s:%d Setting encode score to %d, _encodeHighDef=%d
 [%s] %s:%d H264 Wifi rules: failed to allocate QVGA15 rule
 [%s] %s:%d H264 Wifi rules: failed to allocate QVGA30 rule
 [%s] %s:%d H264 Wifi rules: failed to allocate HVGA15 rule
 [%s] %s:%d H264 Wifi rules: failed to allocate HVGA30 rule
 [%s] %s:%d H264 Wifi rules: failed to allocate VGA15 rule
 [%s] %s:%d H264 Wifi rules: failed to allocate VGA30 rule
 [%s] %s:%d H264 Wifi rules: failed to allocate WVGA15 rule
 [%s] %s:%d H264 Wifi rules: failed to allocate WVGA30 rule
 [%s] %s:%d H264 Wifi rules: failed to allocate XVGA15 rule
 [%s] %s:%d H264 Wifi rules: failed to allocate XVGA30 rule
 [%s] %s:%d H264 Wifi rules: failed to allocate 720p15 rule
 [%s] %s:%d H264 Wifi rules: failed to allocate 720p30 rule
 [%s] %s:%d H264 Wifi rules: failed to allocate video rules array for encoding
 [%s] %s:%d H264 Wifi rules: failed to allocate video rules array for decoding
 [%s] %s:%d Failed to allocate videoRulesWiFiEncoding for HEVC
 [%s] %s:%d Failed to allocate videoRulesWiFiDecoding for HEVC
 [%s] %s:%d H264 Wi-Fi rules: failed to allocate 1920x1080 30 FPS rule
 [%s] %s:%d H264 Wi-Fi rules: failed to allocate 1664x1248 30 FPS rule
 [%s] %s:%d sVCDefaults forceDisableVideoRuleWiFi1080 is set
 [%s] %s:%d sVCDefaults forceDisableVideoRuleCell720 is set
 [%s] %s:%d built in J92 camera. removing rules greater than VGA. adding WVGA encoding rules
 [%s] %s:%d 720p camera. removing rules greater than 720p
 [%s] %s:%d isHD = %d, isWVGA = %d, is1080 = %d
 [%s] %s:%d Failed to Setup Rules
 [%s] %s:%d resetting encoding rules for J92
 [%s] %s:%d camera does not support 720p. removing rules greater than VGA
 [%s] %s:%d camera does not support 1080p. removing rules greater than 720p
 [%s] %s:%d Failed to allocate _dispatchQueue
 [%s] %s:%d Failed to allocate _streamOutputSourceForStreamToken dictionary
 [%s] %s:%d Failed to allocate _streamOutputs dictionary
 [%s] %s:%d Failed to allocate _xpcCallbackQueue
 [%s] %s:%d This streamOutputSource has already been registered with streamToken=%u
 [%s] %s:%d Source=%p registered for streamToken=%u
 [%s] %s:%d %@(%p) Source=%p registered for streamToken=%u
 [%s] %s:%d StreamToken was not registered:%u
 [%s] %s:%d Source=%p unregistered for streamToken=%u
 [%s] %s:%d %@(%p) Source=%p unregistered for streamToken=%u
 [%s] %s:%d Call ID argument is missing
 [%s] %s:%d Failed to create output stream for streamToken=%@
 [%s] %s:%d Unable to allocate memory for dictionary. streamToken=%@
 [%s] %s:%d Invalid sender queue for streamToken=%@
 [%s] %s:%d Failed to get context
 [%s] %s:%d Invalid context
 [%s] %s:%d Missing argument: %@
 [%s] %s:%d Invalid argument: %@
 [%s] %s:%d security delegate %p
 [%s] %s:%d %@(%p) security delegate %p
 [%s] %s:%d deallocating
 [%s] %s:%d %@(%p) deallocating
 [%s] %s:%d Security key manager start result=[%@]
 [%s] %s:%d Security key manager is already started
 [%s] %s:%d Security key manager stopped
 [%s] %s:%d MW control channel already stopped
 [%s] %s:%d Failed to create pruneTimer
 [%s] %s:%d %@(%p) Failed to create pruneTimer
 [%s] %s:%d pruneTimer cancelled
 [%s] %s:%d Failed to create encryptionKeyRollTimer
 [%s] %s:%d %@(%p) Failed to create encryptionKeyRollTimer
 [%s] %s:%d Encryption key material has failed to roll at boundary=%d seconds, calling didEncryptionKeyRollTimeout
 [%s] %s:%d Encryption roll timer cancelled
 [%s] %s:%d Cancelling pruneTimer
 [%s] %s:%d Cancelling encryption key roll timer
 [%s] %s:%d kVCSecurityKeyIndex is missing in key material dictionary '%@'
 [%s] %s:%d Found duplicate key index '%@': sendKeys (%@), receiveKeys (%@) passed down from IDS. Updating key material
 [%s] %s:%d %@(%p) Found duplicate key index '%@': sendKeys (%@), receiveKeys (%@) passed down from IDS. Updating key material
 [%s] %s:%d Will not add remote MKM per default override.
 [%s] %s:%d Received keyIndex '%@', calling scheduleEncryptionRollTimer
 [%s] %s:%d %@(%p) Received keyIndex '%@', calling scheduleEncryptionRollTimer
 [%s] %s:%d Received keyIndex '%@', calling resetDecryptionTimeout
 [%s] %s:%d %@(%p) Received keyIndex '%@', calling resetDecryptionTimeout
 [%s] %s:%d Found keyIndex '%@' in send keys in key manager
 [%s] %s:%d %@(%p) Found keyIndex '%@' in send keys in key manager
 [%s] %s:%d Cannot find keyIndex '%@' in send keys array of %d elements
 [%s] %s:%d %@(%p) Cannot find keyIndex '%@' in send keys array of %d elements
 [%s] %s:%d %p Found keyIndex '%@' in receive keys array of %d elements
 [%s] %s:%d %@(%p) %p Found keyIndex '%@' in receive keys array of %d elements
 [%s] %s:%d Cannot find keyIndex '%@' in receive keys array of %d elements
 [%s] %s:%d %@(%p) Cannot find keyIndex '%@' in receive keys array of %d elements
 [%s] %s:%d Found _latestSendKeyIndex '%@' in send keys array of %d elements
 [%s] %s:%d %@(%p) Found _latestSendKeyIndex '%@' in send keys array of %d elements
 [%s] %s:%d Cannot find _latestSendKeyIndex '%@' in receive keys array of %d elements. Invalidating it...
 [%s] %s:%d %@(%p) Cannot find _latestSendKeyIndex '%@' in receive keys array of %d elements. Invalidating it...
 [%s] %s:%d Found keyIndex '%@' in receive keys array of %d elements
 [%s] %s:%d %@(%p) Found keyIndex '%@' in receive keys array of %d elements
 [%s] %s:%d Cannot find _latestReceiveKeyIndex '%@' in receive keys array of %d elements. Invalidating it...
 [%s] %s:%d %@(%p) Cannot find _latestReceiveKeyIndex '%@' in receive keys array of %d elements. Invalidating it...
 [%s] %s:%d Pruning obsolete send keys (%@)
 [%s] %s:%d %@(%p) Pruning obsolete send keys (%@)
 [%s] %s:%d Pruned keyIndex '%@'
 [%s] %s:%d %@(%p) Pruned keyIndex '%@'
 [%s] %s:%d Updating the security key material with _latestSendKeyIndex '%@' for send %f seconds after key pruning
 [%s] %s:%d %@(%p) Updating the security key material with _latestSendKeyIndex '%@' for send %f seconds after key pruning
 [%s] %s:%d Pruned last uplink MKM from sendKeys. calling scheduleEncryptionRollTimer
 [%s] %s:%d %@(%p) Pruned last uplink MKM from sendKeys. calling scheduleEncryptionRollTimer
 [%s] %s:%d Pruning obsolete receive keys (%@)
 [%s] %s:%d %@(%p) Pruning obsolete receive keys (%@)
 [%s] %s:%d Pruned _latestReceiveKeyIndex '%@
 from receiveKeys (%@). Nullifying it
 [%s] %s:%d %@(%p) Pruned _latestReceiveKeyIndex '%@
 from receiveKeys (%@). Nullifying it
 [%s] %s:%d Attempt to schedulePrineTimer when VCSecurityManager is stopped
 [%s] %s:%d schedulePruneTimer: currentTime=%f, firstExpirationTime=%f
 [%s] %s:%d %@(%p) schedulePruneTimer: currentTime=%f, firstExpirationTime=%f
 [%s] %s:%d pruneTimerEvent fired
 [%s] %s:%d %@(%p) pruneTimerEvent fired
 [%s] %s:%d Security key manager has not been started, yet
 [%s] %s:%d Scheduled encryption roll timeout delta=%f seconds
 [%s] %s:%d keyIndex must not be nil
 [%s] %s:%d %@(%p) keyIndex must not be nil
 [%s] %s:%d clientID must not be nil
 [%s] %s:%d %@(%p) clientID must not be nil
 [%s] %s:%d Reset pruning timeout for keyIndex '%@' to default value '%d'
 [%s] %s:%d %@(%p) Reset pruning timeout for keyIndex '%@' to default value '%d'
 [%s] %s:%d Invalid local configuration
 [%s] %s:%d Failed to allocate negotiation captions results
 [%s] %s:%d Capable of streaming 16x9 cellular!
 [%s] %s:%d Not capable of streaming 16x9 cellular!
 [%s] %s:%d Invalid media negotiator state: The callee tried to create the invite blob
 [%s] %s:%d Failed to create the invite blob
 [%s] %s:%d Failed to create bandwidth settings for media blob
 [%s] %s:%d Failed to allocate invite blob audio settings
 [%s] %s:%d Failed to allocate invite blob video settings
 [%s] %s:%d Invalid media negotiator state: The caller tried to process the invite blob
 [%s] %s:%d Failed to decompress the media blob
 [%s] %s:%d Failed to decode the media blob
 [%s] %s:%d Load switch after negotiation updatedAFRCHeaderEnabled %d
 [%s] %s:%d Failed to negotiate FaceTime settings
 [%s] %s:%d Failed to negotiate audio settings
 [%s] %s:%d Failed to negotiate video settings
 [%s] %s:%d Failed to negotiate screen settings
 [%s] %s:%d Failed to negotiate captions settings
 [%s] %s:%d Failed to negotiate moments settings
 [%s] %s:%d Failed to negotiate multiway audio streams
 [%s] %s:%d Failed to negotiate multiway video streams
 [%s] %s:%d Exception occurred while blob from data. exception=%@
 [%s] %s:%d Failed to allocate the local configuration
 [%s] %s:%d Failed to inialize the local configuration
 [%s] %s:%d Failed to extract negotiation data
 [%s] %s:%d Invalid media negotiator state: The caller tried to create the response blob
 [%s] %s:%d Failed to create the response blob
 [%s] %s:%d Failed to create the response blob audio rules
 [%s] %s:%d Failed to create the reponse blob audio settings
 [%s] %s:%d Failed to create the reponse blob video settings
 [%s] %s:%d Failed to create the reponse blob screen settings
 [%s] %s:%d Invalid media negotiator state: The callee tried to process the response blob
 [%s] %s:%d Exception occurred while parsing remote response blob: %@
 [%s] %s:%d Failed to parse audio rules from response blob
 [%s] %s:%d Failed to parse video rules from response blob
 [%s] %s:%d Failed to parse screen rules from response blob
 [%s] %s:%d Failed to negotiation captions settings
 [%s] %s:%d Failed to negotiation moments settings
 [%s] %s:%d Failed to negotiation FaceTime settings
 [%s] %s:%d Unable to allocate dictionary for local feature string
 [%s] %s:%d Unable to allocate dictionary for remote feature string
 [%s] %s:%d Found substream with ssrc[%x] not associated with a parent stream
 [%s] %s:%d Substream ssrc[%x] doesn't match its corresponding parent stream[%x]
 [%s] %s:%d Unsupported audio substream !!
 [%s] %s:%d Failed to create bandwidth setting: connection type=%d, operating mode=%d 
 [%s] %s:%d Media blob size %s: %d -> %d bytes
 [%s] %s:%d Media blob size %s: %d -> %d bytes with ratio %f
 [%s] %s:%d DTX payload not available!
 [%s] %s:%d RED payload not available!
 [%s] %s:%d Unable to extract audio rules from media negotiation blob
 [%s] %s:%d Failed to negotiation primary audio payload
 [%s] %s:%d Unable to extract audio configuration from media response blob
 [%s] %s:%d Failed to find local video feature list %d
 [%s] %s:%d Failed to extract the remote video rules for payload=%d transport=%d encoding=%d
 [%s] %s:%d Failed to select feature string for payload=%d
 [%s] %s:%d Parameter set is not valid for payload %u
 [%s] %s:%d Unable to extract video rules from media negotiation blob
 [%s] %s:%d Failed to set video parameter set
 [%s] %s:%d Unable to find a video rule for transport=%d encoding=%d
 [%s] %s:%d forceHWI enabled! No match found when select video rules for transport=%d, encoding=%d
 [%s] %s:%d Failed to extract the video rule collection from response
 [%s] %s:%d Skipping negotiating screen video settings, as this device does not have a screen.
 [%s] %s:%d Unable to extract screen rules from media negotiation blob
 [%s] %s:%d Skipping negotiating screen video settings, as the remote device does not have a screen.
 [%s] %s:%d Failed to set screen parameter set
 [%s] %s:%d Failed to negotiate and set pixel format set
 [%s] %s:%d Failed to negotiate HDR modes correctly
 [%s] %s:%d Failed to extract the screen rule collection from response
 [%s] %s:%d Failed to retrieve negotiated pixel formats
 [%s] %s:%d Load switch after negotiation disableSIPEnabled %d
 [%s] %s:%d Load switch after negotiation secureMessagingEnabled %d
 [%s] %s:%d Load switch after negotiation mediaControlInfoFECFeedbackVersion '%d'
 [%s] %s:%d Failed to allocate moments settings.
 [%s] %s:%d multiwayAudioStreams=%@
 [%s] %s:%d %@(%p) multiwayAudioStreams=%@
 [%s] %s:%d No codec configs in stream group
 [%s] %s:%d negotiated audio streamGroupConfig=%@
 [%s] %s:%d %@(%p) negotiated audio streamGroupConfig=%@
 [%s] %s:%d multiwayVideoStreams=%@
 [%s] %s:%d %@(%p) multiwayVideoStreams=%@
 [%s] %s:%d Skipping negotiating video streams, as this device is audio only
 [%s] %s:%d Error substreams not supported with stream groups
 [%s] %s:%d No streamConfigs in the stream group
 [%s] %s:%d negotiated video streamGroupConfig=%@
 [%s] %s:%d %@(%p) negotiated video streamGroupConfig=%@
 [%s] %s:%d Failed to allocate a codec configuration
 [%s] %s:%d Failed to allocate a StreamGroup Stream configuration
 [%s] %s:%d Video stream sub-streams metadata=%d not supported in groups
 [%s] %s:%d %@(%p) Video stream sub-streams metadata=%d not supported in groups
 [%s] %s:%d Unknown metadata flags. metadata=%d not supported in groups
 [%s] %s:%d %@(%p) Unknown metadata flags. metadata=%d not supported in groups
 [%s] %s:%d Video stream payload=%d is not supported
 [%s] %s:%d %@(%p) Video stream payload=%d is not supported
 [%s] %s:%d Video stream has an invalid video resolution. supportedVideoFormats %d
 [%s] %s:%d %@(%p) Video stream has an invalid video resolution. supportedVideoFormats %d
 [%s] %s:%d Failed to allcoate remote languages.
 [%s] %s:%d Failed to decompress the blob
 [%s] %s:%d Exception occurred while blob from data: %@
 [%s] %s:%d Failed to allocate the stream group IDs
 [%s] %s:%d Provided handler is NULL
 [%s] %s:%d %@(%p) Provided handler is NULL
 [%s] %s:%d Provided context is NULL
 [%s] %s:%d %@(%p) Provided context is NULL
 [%s] %s:%d [%p], convertedFrameHandlerContext=%p
 [%s] %s:%d [%p], Source frame rate is already at %u
 [%s] %s:%d [%p], Source frame rate set to %u
 [%s] %s:%d [%p], setting destination frame rate to %d
 [%s] %s:%d [%p], _sourceFramerate=%u, _destinationFramerate=%u, _throttleRate=%f, _isThrottling=%d
 [%s] %s:%d received an error %s
 [%s] %s:%d fourcc pointer is NULL
 [%s] %s:%d fourccString is nil
 [%s] %s:%d Invalid fourcc string class
 [%s] %s:%d Invalid fourcc string=%@ length=%lu
 [%s] %s:%d HandoverReport: Primary connection health allowed delay = %.2f
 [%s] %s:%d HandoverReport: receive - last packet with feedback index %d, %u, bucket [%u %u %u] ratios [%u %u]
 [%s] %s:%d HandoverReport: send - last received packet with index %d, %u, bucket [%u %u %u] ratios [%u %u]
 [%s] %s:%d First packet received
 [%s] %s:%d Invalid stream ID generator provided
 [%s] %s:%d %@(%p) Invalid stream ID generator provided
 [%s] %s:%d Failed to allocate audio stream array
 [%s] %s:%d %@(%p) Failed to allocate audio stream array
 [%s] %s:%d Failed to allocate video stream array
 [%s] %s:%d %@(%p) Failed to allocate video stream array
 [%s] %s:%d Failed to initialize streams
 [%s] %s:%d %@(%p) Failed to initialize streams
 [%s] %s:%d Failed to initialize video multiway stream
 [%s] %s:%d %@(%p) Failed to initialize video multiway stream
 [%s] %s:%d %@(%p) Failed to create video multiway config
 [%s] %s:%d %@(%p) Failed to create video stream config
 [%s] %s:%d videoResolution is %d, not encoding squares
 [%s] %s:%d force encode size width is %d, height is %d
 [%s] %s:%d video reolution is %d
 [%s] %s:%d Failed to forceHWI initialize video multiway stream
 [%s] %s:%d %@(%p) Failed to forceHWI initialize video multiway stream
 [%s] %s:%d Created video stream config with forceHWI to initialize video a multiway stream. Stream[Codec=%d,W=%d,H=%d,fps=%d,%xkbps, %dIDR/sec]
 [%s] %s:%d %@(%p) Created video stream config with forceHWI to initialize video a multiway stream. Stream[Codec=%d,W=%d,H=%d,fps=%d,%xkbps, %dIDR/sec]
 [%s] %s:%d Failed to load supported audio rule collection
 [%s] %s:%d %@(%p) Failed to load supported audio rule collection
 [%s] %s:%d %@(%p) Failed to create audio stream config
 [%s] %s:%d Failed to create audio rules multiway config
 [%s] %s:%d %@(%p) Failed to create audio rules multiway config
 [%s] %s:%d Failed to allocate EVS codec config!
 [%s] %s:%d %@(%p) Failed to allocate EVS codec config!
 [%s] %s:%d CVPixelBufferGetBaseAddressOfPlane was NULL
 [%s] %s:%d CGColorSpaceCreateDeviceGray was NULL
 [%s] %s:%d CGBitmatContextCreate was NULL
 [%s] %s:%d CreateStringAttributes was NULL
 [%s] %s:%d CFAttributedStringCreate was NULL
 [%s] %s:%d CTFramesetterCreateWithAttributedString was NULL
 [%s] %s:%d CGPathCreateMutable was NULL
 [%s] %s:%d CTFramesetterCreateFrame was NULL
 [%s] %s:%d No supportedPayloads for this hardware
 [%s] %s:%d Failed to allocate the FFT meter
 [%s] %s:%d Failed to allocate the first come allocator
 [%s] %s:%d Failed to allocate the FFT
 [%s] %s:%d Security Key Holder not configured
 [%s] %s:%d Key material is not yet available
 [%s] %s:%d Setup error[%s]
 [%s] %s:%d %@(%p) Setup error[%s]
 [%s] %s:%d error[%s]
 [%s] %s:%d %@(%p) error[%s]
 [%s] %s:%d SRTP setup error[%s]
 [%s] %s:%d %@(%p) SRTP setup error[%s]
 [%s] %s:%d SFrame cryptors setup error[%@]
 [%s] %s:%d %@(%p) SFrame cryptors setup error[%@]
 [%s] %s:%d Failed to create SFrame receiver cryptor
 [%s] %s:%d Failed to create SFrame transmitter cryptor
 [%s] %s:%d unexpected media key/salt length (expected[%d], given[%d])
 [%s] %s:%d %@(%p) unexpected media key/salt length (expected[%d], given[%d])
 [%s] %s:%d SRTPPrepareEncryption failed
 [%s] %s:%d %@(%p) SRTPPrepareEncryption failed
 [%s] %s:%d Disabling rtp and rtcp encryption
 [%s] %s:%d %@(%p) Disabling rtp and rtcp encryption
 [%s] %s:%d create send crypto set failed
 [%s] %s:%d %@(%p) create send crypto set failed
 [%s] %s:%d create receive crypto set failed
 [%s] %s:%d %@(%p) create receive crypto set failed
 [%s] %s:%d SRTPUseEncryption failed
 [%s] %s:%d %@(%p) SRTPUseEncryption failed
 [%s] %s:%d SRTPUseEncryption completed
 [%s] %s:%d %@(%p) SRTPUseEncryption completed
 [%s] %s:%d NULL creationCallback
 [%s] %s:%d Failed to retrieve last RTCP timesamp. error=%d
 [%s] %s:%d %@(%p) Failed to retrieve last RTCP timesamp. error=%d
 [%s] %s:%d SRTP should be initialized first before we can update security key material
 [%s] %s:%d %@(%p) SRTP should be initialized first before we can update security key material
 [%s] %s:%d %s[%p] %s failed to generate the reception report: status=%d
 [%s] %s:%d No slot available for RTCP XR Statistics Summary Report Block
 [%s] %s:%d Failed to generate the RTCP XR Statistics Summary Report: status=%d
 [%s] %s:%d No slot available for RTCP XR VoIP Metrics Report Block
 [%s] %s:%d Failed to generate the RTCP XR VoIP Metrics Report: status=%d
 [%s] %s:%d %s[%p] %s failed to retrieve the report[%d] time: status=%d
 [%s] %s:%d %s[%p] %s failed to retrieve extended sequence number: status=%d
 [%s] %s:%d Object '%@' is not a valid VCPacketFilterRTP
AVConferenceXPCServer [%s] %s:%d Failed to create timeoutQueueLabel for PID %d
AVConferenceXPCServer [%s] %s:%d [%p] timer is waiting to be test cancelled
AVConferenceXPCServer [%s] %s:%d [%p] timer has been cancelled
AVConferenceXPCServer [%s] %s:%d ##### TERMINATING %s [%d] due to timeout (client %s [%d]) (API NAME: %@)
AVConferenceXPCServer [%s] %s:%d ##### TERMINATING %s [%d] now
AVConferenceXPCServer [%s] %s:%d Failed to create description for PID %d
AVConferenceXPCServer [%s] %s:%d setting connection again with same value
AVConferenceXPCServer [%s] %s:%d VCXPCServer: Ping saw client death, ignored by ping
AVConferenceXPCServer [%s] %s:%d VCXPCServer: Server was pinged successfully
AVConferenceXPCServer [%s] %s:%d VCXPCServer: preparing to send message to clients for service %s
AVConferenceXPCServer [%s] %s:%d VCXPCServer: sending notification to client for service %s
AVConferenceXPCServer [%s] %s:%d VCXPCServer: sending notification to all clients for service %s
AVConferenceXPCServer [%s] %s:%d VCXPCServer: XPC connectionsToUse count =%lu
AVConferenceXPCServer [%s] %s:%d VCXPCServer: Adding registered block for service %s
AVConferenceXPCServer [%s] %s:%d VCXPCServer: Removing registered block for service %s
AVConferenceXPCServer [%s] %s:%d name=%s, listener=%p
AVConferenceXPCServer [%s] %s:%d VCXPCServer: AVConferenceXPCServer _xpc_handle_connection incoming request
AVConferenceXPCServer [%s] %s:%d Process %s (PID=%d) is missing entitlement %s, ignoring connection
AVConferenceXPCServer [%s] %s:%d VCXPCServer: caching audit token from PID %d
AVConferenceXPCServer [%s] %s:%d VCXPCServer: dispatching registered block for service %@, block %p, queue %p
AVConferenceXPCServer [%s] %s:%d VCXPCServer: executing registered block for service %@, block %p, queue %p
AVConferenceXPCServer [%s] %s:%d VCXPCServer: invalid service requested or no block registered for service %@, ignoring
AVConferenceXPCServer [%s] %s:%d VCXPCServer: client connection fully disconnected or error from unrecognized client
AVConferenceXPCServer [%s] %s:%d VCXPCServer: XPC Error, %s
AVConferenceXPCServer [%s] %s:%d VCXPCServer: XPC Error, IGNORING INCOMING REQUEST
AVConferenceXPCServer [%s] %s:%d VCXPCServer: _xpc_add_connection_to_list PID %d
AVConferenceXPCServer [%s] %s:%d VCXPCServer: _xpc_remove_connection_from_list PID %d
AVConferenceXPCServer [%s] %s:%d 
AVConferenceXPCServer [%s] %s:%d ##### XPC Call timeout event
 [%s] %s:%d Failed to allocate video H264 encoding rules array for cellular
 [%s] %s:%d Failed to allocate video H264 decoding rules array for cellular
 [%s] %s:%d Failed to allocate QVGA15 rule for H264 cellular
 [%s] %s:%d Failed to allocate HVGA15 rule for H264 cellular
 [%s] %s:%d Failed to allocate 1024x576 rule for H264 cellular
 [%s] %s:%d Failed to allocate 896x672 rule for H264 cellular
 [%s] %s:%d not able to find for aspect ratio=%g payload=%d
 [%s] %s:%d Best video settings %s for aspect ratio=%g payload=%d
 [%s] %s:%d frameWidth=%d, frameHeight=%d, aspectRatio=%f
 [%s] %s:%d %dx%d@%dfps, aspectRatio=%f
 [%s] %s:%d Invalid HDR mode in video configuration: hdrMode=%d
 [%s] %s:%d HDR mode set for non-HDR pixel format in video configuration
 [%s] %s:%d 444-10 bit can only be used for HDR10Reference mode
 [%s] %s:%d Unexpected pixel format in video configuration. pixelFormat=%s
 [%s] %s:%d Unsupported profile level string
 [%s] %s:%d Unsupported profile level id
 [%s] %s:%d Metadata address is NULL
 [%s] %s:%d Max channel count is 0
 [%s] %s:%d SPI pointer is NULL
 [%s] %s:%d Failed to allocate the metadata
 [%s] %s:%d Failed to allocate the metadata entries
 [%s] %s:%d Failed to create the CoreAudio spatial metadata. error=%u
 [%s] %s:%d Core audio metadata is NULL
 [%s] %s:%d Failed to retrieve spatial metadata serialized size. error=%u
 [%s] %s:%d Metadata serialized size is 0
 [%s] %s:%d Failed to create serialized buffer allocator
 [%s] %s:%d Failed to create serialized buffer header allocator
 [%s] %s:%d Metadata entry address is NULL
 [%s] %s:%d Metadata is NULL
 [%s] %s:%d Reached max number of entries
 [%s] %s:%d No more available metadata entries
 [%s] %s:%d Entry is NULL
 [%s] %s:%d Positional info is NULL
 [%s] %s:%d spatialAudioSourceID is NULL
 [%s] %s:%d Invalid global info
 [%s] %s:%d Invalid display width
 [%s] %s:%d Invalid display height
 [%s] %s:%d Invalid window width
 [%s] %s:%d Invalid window height
 [%s] %s:%d Invalid uiState=%u
 [%s] %s:%d Invalid uiLayout=%u
 [%s] %s:%d Invalid orientation=%u
 [%s] %s:%d serializedBuffer is NULL
 [%s] %s:%d Failed to serialize the metadata
 [%s] %s:%d Failed to set the buffer size
 [%s] %s:%d Failed to set property %d to %u. error=%s
 [%s] %s:%d Failed to set property %d to %f. error=%s
 [%s] %s:%d The metadata still has an active channel. Unable to release the metadata
 [%s] %s:%d Metadata entry is NULL
 [%s] %s:%d Channel is NULL
 [%s] %s:%d Registered service %s with key %@, particiantID: %@
 [%s] %s:%d Received callback for service %@ with particiantID: %@
 [%s] %s:%d %@(%p) Received callback for service %@ with particiantID: %@
 [%s] %s:%d Cannot find block for serviceType %@, particiantID: %@
 [%s] %s:%d Not Enough samples to Timescale input bufferLength=%d
 [%s] %s:%d Down sample coarse correlation failed
 [%s] %s:%d mode=%s: pitch period=%d
 [%s] %s:%d PSOLA Adapt : pitch period=%d channel=%d
 [%s] %s:%d mode=%s bestCorrelation=%d VAD=0 energy_Q14=%d
 [%s] %s:%d mode=%s: bestCorrelation=%d VAD=1 energy_Q14=%d
 [%s] %s:%d Setting effects to disabled, re-initialize the buffer
 [%s] %s:%d inDelegate=%@, queue=%@
 [%s] %s:%d received callback for stats report
 [%s] %s:%d %@(%p) received callback for stats report
 [%s] %s:%d injectAudioConfig=%@
 [%s] %s:%d forceCellular=%d
 [%s] %s:%d enableLoopbackInterface=%d
 [%s] %s:%d emulatedRxPLR=%f
 [%s] %s:%d enableAudioPowerSpectrumReport=%d
 [%s] %s:%d Passed in NULL for remoteImageQueue
 [%s] %s:%d Failed to allocate remoteImageQueue
 [%s] %s:%d Could not create the shared memory pool for the new VCRemoteImageQueue sender returning NULL
 [%s] %s:%d Unable to create FigRemoteQueueSender err=%d
 [%s] %s:%d Could not set maximum buffer age=%d err=%d
 [%s] %s:%d Passed in NULL sender queue or NULL remoteImageQueue to the Receiver create.
 [%s] %s:%d Could not allocate space for the new VCRemoteImageQueue receiver, returning NULL
 [%s] %s:%d Unable to create FigRemoteQueueReceiver
 [%s] %s:%d Unable to create FigRemoteQueueReceiverHandler
 [%s] %s:%d Cannot Enqueue on an invalid remoteImageQueue %p
 [%s] %s:%d Pixel Buffer was NULL could not enqueue
 [%s] %s:%d Error occurred when sending the video frame. err=%d
 [%s] %s:%d Attributes are NULL could not enqueue
 [%s] %s:%d Error occurred when sending the video attributes. err=%d
 [%s] %s:%d Invalid remoteImageQueue=%p
 [%s] %s:%d Cannot get the XPC object on an invalid remoteImageQueue %p
 [%s] %s:%d remoteImageQueue=%p msgType=%d Queue is full. Resetting....
 [%s] %s:%d remoteImageQueue=%p err=%d opType=%d Client terminated the queue
 [%s] %s:%d remoteImageQueue=%p err=%d opType=%d Queue is full!
 [%s] %s:%d remoteImageQueue=%p err=%d opType=%d Error occurred when enqueuing data
 [%s] %s:%d AudioFileCreateWithURL failed with error=%d
 [%s] %s:%d ExtAudioFileWrapAudioFileID failed with error=%d
 [%s] %s:%d ExtAudioFileWriteAsync failed with error=%d
 [%s] %s:%d Parameter passed is NULL
 [%s] %s:%d Failed to allocate memory for audio dump
 [%s] %s:%d Failed to allocate memory for audio dump packet
 [%s] %s:%d Audio dump file=[%p] created successfully for tap point=%d, payloadType=%d, bandwidth=%d, rtpPayloadFormat=%d
 [%s] %s:%d Audio dump finalized for tap point=%d
 [%s] %s:%d Reconfiguring audio tier picker (%u -> %u)
 [%s] %s:%d { VCAudioTierPickerConfig: mode=%d headerSize=%lu usingCellular=%d isUseCaseWatchContinuity=%d defaultMaxCap=%lu alwaysOnAudioRedundancyEnabled=%d cellularAllowRedLowBitratesEnabled=%d wifiAllowRedLowBitratesEnabled=%d supportedPacketsPerBundle=(%@) supportedRedNumPayloads=(%@) }
 [%s] %s:%d  { VCAudioTierPickerConfig: supportedAudioPayloadConfig=(%@)}
 [%s] %s:%d Cannot setup audio tier picker, invalid mode
 [%s] %s:%d Setting up Audio Tier Picker with config %@
 [%s] %s:%d Error allocating _tierTabledForRedNumPayloads
 [%s] %s:%d Error allocating _bitrateLimits
 [%s] %s:%d VCAudioTierPicker failed to generate tiers
 [%s] %s:%d Unabled to setup always on red tiers, as supportedRedNumPayloads is nil
 [%s] %s:%d AudioTierSelection %d: %s quality[%f] diff=%d+%d=%d)%s
 [%s] %s:%d (%s) %d: %s
 [%s] %s:%d Multiway doesn't use legacy duplication. Tier not found!
 [%s] %s:%d No corresponding tier found for AudioBitRate, using fallback: %@
 [%s] %s:%d (%s) Using tier: %d
 [%s] %s:%d Tier for bitrate %d not found!
 [%s] %s:%d Tier for bitrate %d -> %@
 [%s] %s:%d Cap exceeded for number of red payloads:%d using %d instead
 [%s] %s:%d RED value of %d is not supported. Next RED value: %d
 [%s] %s:%d No corresponding tier found for AudioBitRate, using fallback
 [%s] %s:%d (%s) Using tier:%d %s
 [%s] %s:%d Failed to create the float converter
 [%s] %s:%d Failed to create the tone generator
 [%s] %s:%d VCAudioPlayerDTMF[%p] Successfully initialized DTMF: dtmfSampleRate=%d, audioSampleRate=%f maxTonePlaybackExtensionDuration=%d minTonePlaybackDuration=%d toneGapDuration=%d
 [%s] %s:%d VCAudioPlayerDTMF[%p] Transitioning DTMF State currentState=%s ==> newState=%s
 [%s] %s:%d VCAudioPlayerDTMF[%p] Transitioning DTMF State currentState=%s ==> newState=%s shouldContinue=%s
 [%s] %s:%d VCAudioPlayerDTMF[%p] Should Purge re-transmitted end events, eventTimeStamp=%d, result=%d
 [%s] %s:%d VCAudioPlayerDTMF[%p] Should Purge DTMF frame for old event, frameTimeStamp=%d eventTimeStamp=%d, result=%d
 [%s] %s:%d VCAudioPlayerDTMF[%p] Should Purge audioFrames, payloadType=%d frameTimeStamp=%d lastEventMaxTimeStamp=%d audioFrameCase=%d result=%d
 [%s] %s:%d VCAudioPlayerDTMF[%p] _VCAudioPlayerDTMF_ProcessDTMFStatePlayingTone Skipped
 [%s] %s:%d Failed to generate DTMF samples for event=%d
 [%s] %s:%d VCAudioPlayerDTMF[%p] Continue with last event duration, lastEventDurationCount=%d lastEventInfo.duration=%d
 [%s] %s:%d VCAudioPlayerDTMF[%p] Exiting from Tone extension window
 [%s] %s:%d VCAudioPlayerDTMF[%p] Discard the long event
 [%s] %s:%d Failed to parse DTMF payload
 [%s] %s:%d VCAudioPlayerDTMF Updated DTMF duration=%d
 [%s] %s:%d VCAudioPlayerDTMF[%p] Reset evenDuration for endFrame oldValue=%d newValue=%d
 [%s] %s:%d Failed to initialize DTMFToneGenerator, event=%d result=%d
 [%s] %s:%d Invalid DTMF payloadSize=%d
 [%s] %s:%d Parsed DTMF EventInfo: eventType=%d isEnd=%d volume=%d duration=%d, RTP Header Info: isMarker=%d seqNumber=%d rtpTimeStamp=%d
 [%s] %s:%d VCAudioPlayerDTMF[%p] Failed to generate tone samples, event=%d result=%d
 [%s] %s:%d VCAudioPlayerDTMF[%p] Playing Gap samplesCount=%d maxToneGapDuration=%d toneGapDurationCount=%d 
 [%s] %s:%d Load switch hevcWifiTiersEnabled %d
 [%s] %s:%d formatList size is zero for payload=%d, transfportType=%d
 [%s] %s:%d Failed setupVideoRulesForPayload for unrecognized payload %d!
 [%s] %s:%d Failed to allocate preferred H264 wifi rule
 [%s] %s:%d Failed to setup Wifi encoding rules for H264
 [%s] %s:%d Failed to setup Wifi decoding rules for H264
 [%s] %s:%d Failed to allocate preferred H264 cell rule
 [%s] %s:%d Failed to setup cell encoding rules for H264
 [%s] %s:%d Failed to setup cell decoding rules for H264
 [%s] %s:%d Couldn't find configuration for _hardwareSettings.deviceClass = %d
 [%s] %s:%d ##### %@
 [%s] %s:%d participantConfig may not be nil
 [%s] %s:%d %@(%p) participantConfig may not be nil
 [%s] %s:%d Failed to create uplink cryptor for dialog
 [%s] %s:%d %@(%p) Failed to create uplink cryptor for dialog
 [%s] %s:%d Failed to create downlink cryptor for dialog
 [%s] %s:%d %@(%p) Failed to create downlink cryptor for dialog
 [%s] %s:%d CMBlockBufferCreateWithMemoryBlock failed with error '%d'
 [%s] %s:%d VCCryptor_Encrypt failed with error '%d'
 [%s] %s:%d VCCryptor_Encrypt produced non-contiguous buffer
 [%s] %s:%d VCCryptor_Decrypt failed with error '%d'
 [%s] %s:%d VCCryptor_Decrypt produced non-contiguous buffer
 [%s] %s:%d Failed to allocate outgoing message for '%@:%@'
 [%s] %s:%d Failed to allocate message wrapper for '%@:%@'
 [%s] %s:%d Could not encrypt outgoing message '%@:%@'
 [%s] %s:%d messageData length must not be 0
 [%s] %s:%d %@(%p) messageData length must not be 0
 [%s] %s:%d transactionID must not be nil
 [%s] %s:%d %@(%p) transactionID must not be nil
 [%s] %s:%d messageStatus must not be nil
 [%s] %s:%d %@(%p) messageStatus must not be nil
 [%s] %s:%d isInternalMessage must not be nil
 [%s] %s:%d %@(%p) isInternalMessage must not be nil
 [%s] %s:%d Could not decrypt incoming payload for _sessionID='%d', participantID='%@', transactionID='%@'
 [%s] %s:%d messageData does have neither message nor acknowledgment. Ignoring malformed messageData
 [%s] %s:%d %@(%p) messageData does have neither message nor acknowledgment. Ignoring malformed messageData
 [%s] %s:%d Sent confirmation for _sessionID='%d', participantID='%@', transactionID='%@'
 [%s] %s:%d %@(%p) Sent confirmation for _sessionID='%d', participantID='%@', transactionID='%@'
 [%s] %s:%d Reliable message has been ACKed for _sessionID='%d', participantID='%@', transactionID='%@', messageStatus='%d'
 [%s] %s:%d %@(%p) Reliable message has been ACKed for _sessionID='%d', participantID='%@', transactionID='%@', messageStatus='%d'
 [%s] %s:%d Failed to allocate outgoing acknowledgment message for sessionID='%d', transactionID='%@'
 [%s] %s:%d Failed to allocate message wrapper for sessionID='%d', transactionID='%@'
 [%s] %s:%d Can not send confirmation: messageData is nil
 [%s] %s:%d %@(%p) Can not send confirmation: messageData is nil
 [%s] %s:%d Could not encrypt confirmation for sessionID='%d', participantID='%@', transactionID='%@'
 [%s] %s:%d Dialog send confirmation for sessionID='%d', participantID='%@', transactionID='%@'
 [%s] %s:%d %@(%p) Dialog send confirmation for sessionID='%d', participantID='%@', transactionID='%@'
 [%s] %s:%d VCImageAttrbuteRules: %s received invalid arguments 
 [%s] %s:%d VCImageAttrbuteRules: %s received unknown wireless interface
 [%s] %s:%d VCImageAttributeRules: extract dimensions for interface %d direction %d: %s, from %s
 [%s] %s:%d Creating a VCVideoStreamRateController with unknown algorithm.
 [%s] %s:%d %s doRateControlWithTime - %s maxTierBitrate:%u minTierBitrate:%u operatingTierBitrate:%u targetBitrate:%u rxBitrate:%u
 [%s] %s:%d %s:%d bitrate is greater than the maximum possible tier!
 [%s] %s:%d %s:%d bitrate is less than the minimum possible tier!
 [%s] %s:%d %s: operating bitrate is greater than the configured max bitrate: %u!
 [%s] %s:%d %s: operating bitrate is less than the configured min bitrate: %u!
 [%s] %s:%d U1 config is nil
 [%s] %s:%d Could not create VTP socket for MW control channel (%08X) for sessionID '%d'
 [%s] %s:%d %@(%p) Could not create VTP socket for MW control channel (%08X) for sessionID '%d'
 [%s] %s:%d Created VCControlChannelMultiWay object for sessionID '%d'
 [%s] %s:%d %@(%p) Created VCControlChannelMultiWay object for sessionID '%d'
 [%s] %s:%d Dealloccing VCControlChannelMultiWay object with sessionID='%d'
 [%s] %s:%d %@(%p) Dealloccing VCControlChannelMultiWay object with sessionID='%d'
 [%s] %s:%d VCControlChannelMultiWay object has been dealloced while its thread is still running. [VCControlChannelMultiWay stop] should have been invoked for sessionID='%d'!
 [%s] %s:%d %@(%p) VCControlChannelMultiWay object has been dealloced while its thread is still running. [VCControlChannelMultiWay stop] should have been invoked for sessionID='%d'!
 [%s] %s:%d VCControlChannelMultiWay object has been dealloced with sessionID='%d'
 [%s] %s:%d %@(%p) VCControlChannelMultiWay object has been dealloced with sessionID='%d'
 [%s] %s:%d Failed to create receiveProc for MW control channel for sessionID='%d'
 [%s] %s:%d %@(%p) Failed to create receiveProc for MW control channel for sessionID='%d'
 [%s] %s:%d MW control channel already stopped for sessionID='%d'
 [%s] %s:%d %@(%p) MW control channel already stopped for sessionID='%d'
 [%s] %s:%d Started MW control channel for sessionID='%d'
 [%s] %s:%d %@(%p) Started MW control channel for sessionID='%d'
 [%s] %s:%d Stopped MW control channel for sessionID='%d'
 [%s] %s:%d %@(%p) Stopped MW control channel for sessionID='%d'
 [%s] %s:%d inData must not be NULL
 [%s] %s:%d vpktFlags must not be NULL
 [%s] %s:%d channelDataFormat must not be NULL
 [%s] %s:%d Raw data header must not be NULL
 [%s] %s:%d VCControlChannelMultiWay: receiveProc unrecognized packet type '%d' received
 [%s] %s:%d VCControlChannelMultiWay: receiveProc unrecognized version of control channel messaging protocol '%d'. Ignoring the message...
 [%s] %s:%d Could not create payloadData
 [%s] %s:%d Zero-valued participantID updated to: %@, when there is only one remote participant
 [%s] %s:%d Could not create dialog for unknown participantID='%@'
 [%s] %s:%d %@(%p) Could not create dialog for unknown participantID='%@'
 [%s] %s:%d messageReceived finished for sessionID='%d': topic='%@', message='%@', participantID='%@', sequenceNumber='%@', status='%d'
 [%s] %s:%d %@(%p) messageReceived finished for sessionID='%d': topic='%@', message='%@', participantID='%@', sequenceNumber='%@', status='%d'
 [%s] %s:%d sendMessage: found existing dialog for participantID='%@'
 [%s] %s:%d %@(%p) sendMessage: found existing dialog for participantID='%@'
 [%s] %s:%d sendMessage: could not find existing dialog for participantID='%@'
 [%s] %s:%d %@(%p) sendMessage: could not find existing dialog for participantID='%@'
 [%s] %s:%d VCControlChannelMultiWay: sendReliableMessageAndWait: message '%@' for sessionID '%d', participantID '%llu', timeout '%@'
 [%s] %s:%d %@(%p) VCControlChannelMultiWay: sendReliableMessageAndWait: message '%@' for sessionID '%d', participantID '%llu', timeout '%@'
 [%s] %s:%d Could not create dialog for unknown participantID='%llu'
 [%s] %s:%d %@(%p) Could not create dialog for unknown participantID='%llu'
 [%s] %s:%d completion should not be nil
 [%s] %s:%d %@(%p) completion should not be nil
 [%s] %s:%d VCControlChannelMultiWay: sendReliableMessage: message '%@' for sessionID '%d', participantID '%llu's
 [%s] %s:%d %@(%p) VCControlChannelMultiWay: sendReliableMessage: message '%@' for sessionID '%d', participantID '%llu's
 [%s] %s:%d VCControlChannelMultiWay: sendUnreliableMessage: message '%@' for sessionID '%d', participantID '%llu'
 [%s] %s:%d %@(%p) VCControlChannelMultiWay: sendUnreliableMessage: message '%@' for sessionID '%d', participantID '%llu'
 [%s] %s:%d participantConfig must not be nil
 [%s] %s:%d %@(%p) participantConfig must not be nil
 [%s] %s:%d API misuse! Participant '%llu' has alrady been added to the list of active participants! Ignoring...
 [%s] %s:%d %@(%p) API misuse! Participant '%llu' has alrady been added to the list of active participants! Ignoring...
 [%s] %s:%d Wrong version of protocol supplied '%u'. Ignoring...
 [%s] %s:%d %@(%p) Wrong version of protocol supplied '%u'. Ignoring...
 [%s] %s:%d addActiveParticipant:'%llu' for sessionID '%d'
 [%s] %s:%d %@(%p) addActiveParticipant:'%llu' for sessionID '%d'
 [%s] %s:%d removeActiveParticipant:Removed participant '%llu' for sessionID '%d'
 [%s] %s:%d %@(%p) removeActiveParticipant:Removed participant '%llu' for sessionID '%d'
 [%s] %s:%d Removed participant '%@' for sessionID '%d'
 [%s] %s:%d %@(%p) Removed participant '%@' for sessionID '%d'
 [%s] %s:%d Initialized transactionID=%llu
 [%s] %s:%d %@(%p) Initialized transactionID=%llu
 [%s] %s:%d Reset transactionID=%llu
 [%s] %s:%d %@(%p) Reset transactionID=%llu
 [%s] %s:%d currentSendMKI is nil
 [%s] %s:%d %@(%p) currentSendMKI is nil
 [%s] %s:%d control channel starts listening for sessionID='%d'
 [%s] %s:%d receiveProc: vfdMessage='%d', exiting receiveProc for sessionID='%d'
 [%s] %s:%d receiveProc: vfdCancel='%d', exiting receiveProc for sessionID='%d'
 [%s] %s:%d select failed(%08X) for sessionID='%d'
 [%s] %s:%d from sessionID='%d'
 [%s] %s:%d VTP_Recvfrom(%d) failed(%08X) for sessionID='%d'
 [%s] %s:%d VTP_Recvfrom(%d) returned 0: empty message for sessionID='%d'
 [%s] %s:%d Could not parse raw input data
 [%s] %s:%d VCControlChannelMultiWay: receiveProc for MW control channel parsed message for sessionID='%d', status='%d
 [%s] %s:%d control channel receiveProc ended for sessionID='%d'
 [%s] %s:%d setupVideoRuleCollection failed
 [%s] %s:%d Failed to allocate the video rules
 [%s] %s:%d Failed to allocate the video rules collection
 [%s] %s:%d Failed to allocate the temporary set of payloads
 [%s] %s:%d Failed to add encoding rules
 [%s] %s:%d Failed to allocate video payload
 [%s] %s:%d NULL sendFailedHandler
 [%s] %s:%d sendFailedHandler can only be set in created state
 [%s] %s:%d NULL receivedHandler
 [%s] %s:%d receivedHandler can only be set in created state
 [%s] %s:%d Attempt to copy a block buffer to an NULL poiner
 [%s] %s:%d MarcoPerformSnapshot no longer in use
 [%s] %s:%d SnapshotTimer: %s complete before deadline, ignored
 [%s] %s:%d Failed to serialize. error=%@
 [%s] %s:%d [AVC SPATIAL AUDIO] Failed to serialize. error=%@
 [%s] %s:%d [AVC SPATIAL AUDIO] unserialize done. %@
 [%s] %s:%d [AVC SPATIAL AUDIO] %@
 [%s] %s:%d Invalid Config (nil)
 [%s] %s:%d Failed to create pre-load queue
 [%s] %s:%d Failed to create jitter queue
 [%s] %s:%d Jitter Buffer Created Successfully
 [%s] %s:%d Cleaning up JitterBuffer
 [%s] %s:%d %@(%p) Cleaning up JitterBuffer
 [%s] %s:%d Starting heartbeat (interval=%f)
 [%s] %s:%d %@(%p) Starting heartbeat (interval=%f)
 [%s] %s:%d Failed to create polling
 [%s] %s:%d %@(%p) Failed to create polling
 [%s] %s:%d Reset the queue
 [%s] %s:%d %@(%p) Reset the queue
 [%s] %s:%d Frame received seqNumber:%d length:%d isRed:%d
 [%s] %s:%d %@(%p) Frame received seqNumber:%d length:%d isRed:%d
 [%s] %s:%d _isRedundancyRequested set to YES by forceFECRepairStream
 [%s] %s:%d %@(%p) _isRedundancyRequested set to YES by forceFECRepairStream
 [%s] %s:%d state:%d remoteVideoPaused:%d isVisible:%d
 [%s] %s:%d %@(%p) state:%d remoteVideoPaused:%d isVisible:%d
 [%s] %s:%d FaceZoom is disabled.
 [%s] %s:%d %@(%p) FaceZoom is disabled.
 [%s] %s:%d Stream group must be stopped when setting sync source. state=%d
 [%s] %s:%d %@(%p) Stream group must be stopped when setting sync source. state=%d
 [%s] %s:%d Opted out of all video streams!!!
 [%s] %s:%d %@(%p) Opted out of all video streams!!!
 [%s] %s:%d Opted out and back in to the same video streamID %@, large sequence number gaps may occur
 [%s] %s:%d %@(%p) Opted out and back in to the same video streamID %@, large sequence number gaps may occur
 [%s] %s:%d Starting seamless video switch with target stream id: %@
 [%s] %s:%d %@(%p) Starting seamless video switch with target stream id: %@
 [%s] %s:%d Non-seamless video switch with target stream id: %@
 [%s] %s:%d %@(%p) Non-seamless video switch with target stream id: %@
 [%s] %s:%d Ending seamless video switch with target stream id: %@
 [%s] %s:%d %@(%p) Ending seamless video switch with target stream id: %@
 [%s] %s:%d Trying to opt into more than %d video streams! Streams:%@
 [%s] %s:%d %@(%p) Trying to opt into more than %d video streams! Streams:%@
 [%s] %s:%d Ignoring setVideoDegraded=%d with same value
 [%s] %s:%d %@(%p) Ignoring setVideoDegraded=%d with same value
 [%s] %s:%d videoDegraded=%d
 [%s] %s:%d %@(%p) videoDegraded=%d
 [%s] %s:%d Can not find VCMediaStream from _activeDownlinkStreamID=%@
 [%s] %s:%d %@(%p) Can not find VCMediaStream from _activeDownlinkStreamID=%@
 [%s] %s:%d Setting shouldEnableMLEnhance on Stream to %d
 [%s] %s:%d %@(%p) Setting shouldEnableMLEnhance on Stream to %d
 [%s] %s:%d shouldEnableMLEnhance is Already %s
 [%s] %s:%d New redundancy percentage %d
 [%s] %s:%d %@(%p) New redundancy percentage %d
 [%s] %s:%d %s video redundancy
 [%s] %s:%d %@(%p) %s video redundancy
 [%s] %s:%d Completed transition to streamId:%d (previous:%@). Opt out of old stream id if needed.
 [%s] %s:%d %@(%p) Completed transition to streamId:%d (previous:%@). Opt out of old stream id if needed.
 [%s] %s:%d networkFeedbackController is nil in VCVideoStreamReceiveGroup
 [%s] %s:%d We are experiencing a video stall too soon after we switch video on. Ignoring... currentTime=%f lastVideoExpectationSwitch=%f diff=%f
 [%s] %s:%d %@(%p) We are experiencing a video stall too soon after we switch video on. Ignoring... currentTime=%f lastVideoExpectationSwitch=%f diff=%f
 [%s] %s:%d Requesting streamID to generate a key frame %hu
 [%s] %s:%d %@(%p) Requesting streamID to generate a key frame %hu
 [%s] %s:%d ExtendedPoorConnection detected for idsParticipantID=%llu duration=%f now=%f  isVideoDegradedStartTime=%f
 [%s] %s:%d Health Monitor for Video Stream Receive GroupID=%s StreamID[main:%u repair:%u] Video[%ukbps %4.1ffps] VideoResolution=%@ syncUpdateCalled=%ld
 [%s] %s:%d %@(%p) Health Monitor for Video Stream Receive GroupID=%s StreamID[main:%u repair:%u] Video[%ukbps %4.1ffps] VideoResolution=%@ syncUpdateCalled=%ld
 [%s] %s:%d packetHandler=[%p]
 [%s] %s:%d Bundler init failed
 [%s] %s:%d RFC3640 bundling encountered an error: inputBytes=%u bufferSize=%u accessUnitDataSectionSize=%u bundledCount=%u
 [%s] %s:%d Bundling encountered an error: inputBytes=%u bufferSize=%u accessUnitDataSectionSize=%u bundledCount=%u
 [%s] %s:%d NULL access: bundler=[%p], audioBundleInfo=[%p]
 [%s] %s:%d : bundler buffer is full=%d
 [%s] %s:%d : bundler can't mix payload types
 [%s] %s:%d : Large packet bundling encountered an error: inputBytes=%u bufferSize=%u encodedBufferSize=%u bundledCount=%u
 [%s] %s:%d Small packet bundling encountered an error: inputBytes=%u bufferSize=%u encodedBufferSize=%u bundledCount=%u
 [%s] %s:%d NULL access: packetBundler=[%p]
 [%s] %s:%d NULL access: packetBundler=[%p], packetBundler->_cdrxBundleInfoRef=[%p]
 [%s] %s:%d Cdrx event enqueued: cdrx state=%d, cdrx cycle=%d, enqueued event count=%d
 [%s] %s:%d Cdrx event queue is Full. Reset Queue and enqueue
 [%s] %s:%d Cdrx event queue enqueue failed with error=%d
 [%s] %s:%d Failed to allocate CDRX container
 [%s] %s:%d Cdrx event queue creation failed with error=%d
 [%s] %s:%d cdrxInfo=[%p]
 [%s] %s:%d NULL access: bundler->_cdrxBundleInfoRef=[%p], inputBytes=[%p]
 [%s] %s:%d Bundling encountered an error: inputBytes=%u bufferSize=%u encodedBufferSize=%u bundledCount=%u
 [%s] %s:%d After processing CDRX event, packets per bundle=%d
 [%s] %s:%d videoDegradedThreshold = %f videoImprovedThreshold = %f videoMinFrameRate = %f shouldUseExitHysteresis = %d
 [%s] %s:%d isVideoQualityDegraded:%d
 [%s] %s:%d %@(%p) isVideoQualityDegraded:%d
 [%s] %s:%d videoIsExpected=%d
 [%s] %s:%d %@(%p) videoIsExpected=%d
 [%s] %s:%d Payload cannot be negotiated: %d
AVCAudioStream [%s] %s:%d localAddress=%@, error=%@
AVCAudioStream [%s] %s:%d localAddress=%@, callID=%@, error=%@
AVCAudioStream [%s] %s:%d localAddress=%@, isOriginator=%d, error=%@
AVCAudioStream [%s] %s:%d localAddress=%@, isOriginator=%d, callID=%@, error=%@
AVCAudioStream [%s] %s:%d socketsDictionary=%@, isOriginator=%d, error=%@
AVCAudioStream [%s] %s:%d socketsDictionary=%@, isOriginator=%d, callID=%@, error=%@
AVCAudioStream [%s] %s:%d destination=%@, isOriginator=%d, error=%@
AVCAudioStream [%s] %s:%d destination=%@, isOriginator=%d, callID=%@, error=%@
AVCAudioStream [%s] %s:%d rtpClientID=%@, rtcpClientID=%@, isOriginator=%d, callID=%@, options=%s, error=%s
AVCAudioStream [%s] %s:%d localAddress=%@, socketsDictionary=%@, destination=%@, rtpConnectionClientID=%@, rtcpConnectionClientID=%@, callID=%@, options=%s, error=%@
AVCAudioStream [%s] %s:%d @:@ AVCAudioStream-init (%p) PID=%d, callID=%@, streamToken=%d, error=%@
@:@ AVCAudioStream-init
AVCAudioStream [%s] %s:%d @:@ AVCAudioStream-init (%p)
AVCAudioStream [%s] %s:%d AVCAudioStream will run %s process
AVCAudioStream [%s] %s:%d %@(%p) AVCAudioStream will run %s process
AVCAudioStream [%s] %s:%d Missing result dictionary
AVCAudioStream [%s] %s:%d Server died
AVCAudioStream [%s] %s:%d error=%@, result=%@
AVCAudioStream [%s] %s:%d IPC Timeout: result=%@
AVCAudioStream [%s] %s:%d Missing capabilities dictionary: result=%@
AVCAudioStream [%s] %s:%d Missing stream token
AVCAudioStream [%s] %s:%d 
AVCAudioStream [%s] %s:%d %@(%p) 
@:@ AVCAudioStream-dealloc
AVCAudioStream [%s] %s:%d @:@ AVCAudioStream-dealloc (%p)
AVCAudioStream [%s] %s:%d %s %s
AVCAudioStream [%s] %s:%d Invalid audio configuration: error[%s]
AVCAudioStream [%s] %s:%d %@(%p) Invalid audio configuration: error[%s]
@:@ AVCAudioStream-configure
AVCAudioStream [%s] %s:%d @:@ AVCAudioStream-configure (%p) didSucceed=%d, error=%@
AVCAudioStream [%s] %s:%d AVCAudioStream API_VCMEDIASTREAM_STARTCONFERENCE (client side)
AVCAudioStream [%s] %s:%d AVCAudioStream start (not using XPC)
@:@ AVCAudioStream-start
AVCAudioStream [%s] %s:%d @:@ AVCAudioStream-start (%p)
@:@ AVCAudioStream-stop
AVCAudioStream [%s] %s:%d @:@ AVCAudioStream-stop (%p)
@:@ AVCAudioStream-pause
AVCAudioStream [%s] %s:%d @:@ AVCAudioStream-pause (%p)
@:@ AVCAudioStream-resume
AVCAudioStream [%s] %s:%d @:@ AVCAudioStream-resume (%p)
AVCAudioStream [%s] %s:%d digits=%@, volume=%hhu, duration=%hu, interval=%hu
AVCAudioStream [%s] %s:%d digit=%c, volume=%u
AVCAudioStream [%s] %s:%d syncStreamToken=%ld
AVCAudioStream [%s] %s:%d AVCAudioStream: synchronizeWithStream %u
AVCAudioStream [%s] %s:%d direction=%ld
AVCAudioStream [%s] %s:%d rtcpEnabled=%d
AVCAudioStream [%s] %s:%d rtpTimeOutEnabled=%d
AVCAudioStream [%s] %s:%d rtcpTimeOutEnabled=%d
AVCAudioStream [%s] %s:%d rtpTimeOutIntervalSec=%f
AVCAudioStream [%s] %s:%d rtcpTimeOutIntervalSec=%f
AVCAudioStream [%s] %s:%d rtcpSendIntervalSec=%f
AVCAudioStream [%s] %s:%d volume=%f
AVCAudioStream [%s] %s:%d Volume out of range:%f expected [0.0 - 1.0]
AVCAudioStream [%s] %s:%d isEnabled=%d
AVCAudioStream [%s] %s:%d AVCAudioStream: notified client %p interruption begin
AVCAudioStream [%s] %s:%d AVCAudioStream: notified client %p interruption end
AVCAudioStream [%s] %s:%d AVCAudioStream: AVC server died, notifying client
AVCAudioStream [%s] %s:%d AVCAudioStream: Media server died, notifying client
@:@ AVCAudioStream-didServerDie
AVCAudioStream [%s] %s:%d @:@ AVCAudioStream-didServerDie (%p)
AVCAudioStream [%s] %s:%d AVCAudioStream: Server died, but AVCAudioStream has already deallocated, NO-OP
AVCAudioStream [%s] %s:%d didStartConnectionBlock: error = %p, result = %s
AVCAudioStream [%s] %s:%d AVCAudioStream: didStartConnectionBlock: strongSelf == nil
AVCAudioStream [%s] %s:%d AVCAudioStream: didStartConnectionBlock strongSelf started(%d)
@:@ AVCAudioStream-didStart
AVCAudioStream [%s] %s:%d @:@ AVCAudioStream-didStart (%p) didSucceed=%d, error=%@
AVCAudioStream [%s] %s:%d AVCAudioStream: notified client %p of didStart started[%d]
@:@ AVCAudioStream-didStop
AVCAudioStream [%s] %s:%d @:@ AVCAudioStream-didStop (%p)
AVCAudioStream [%s] %s:%d AVCAudioStream: notified client %p of didStop
@:@ AVCAudioStream-didPause
AVCAudioStream [%s] %s:%d @:@ AVCAudioStream-didPause (%p) didSucceed=%d, error=%@
AVCAudioStream [%s] %s:%d AVCAudioStream: notified client %p of didPause [%d]
@:@ AVCAudioStream-didResume
AVCAudioStream [%s] %s:%d @:@ AVCAudioStream-didResume (%p) didSucceed=%d, error=%@
AVCAudioStream [%s] %s:%d AVCAudioStream: notified client %p of didResume [%d]
AVCAudioStream [%s] %s:%d AVCAudioStream: notified client %p of didStartSynchronizer [%d]
AVCAudioStream [%s] %s:%d AVCAudioStream: notified client %p RTP packet timeout
AVCAudioStream [%s] %s:%d AVCAudioStream: notified client %p RTCP packet timeout
AVCAudioStream [%s] %s:%d AVCAudioStream: notified client %p received RTCP packets
AVCAudioStream [%s] %s:%d AVCAudioStream: notified client %p received input frequency metering packets
AVCAudioStream [%s] %s:%d error=%@
AVCAudioStream [%s] %s:%d stream=%@, didStartStream=%d, error=%@
AVCAudioStream [%s] %s:%d stream=%@
AVCAudioStream [%s] %s:%d stream=%@, didPauseStream=%d, error=%@
AVCAudioStream [%s] %s:%d stream=%@, digit=%c
AVCAudioStream [%s] %s:%d stream=%@, inputFreq=%@
AVCAudioStream [%s] %s:%d stream=%@, outputFreq=%@
AVCAudioStream [%s] %s:%d stream=%@, serverDidDie
VCRC [%s] %s:%d NWConnection notification has a bad version=%d
 [%s] %s:%d Cannot create network queue successfully!
 [%s] %s:%d Failed to write to network queue
VCSessionDownlinkBandwidthAllocator [%s] %s:%d No audio entry for client=%@ mediaEntries=%@
VCSessionDownlinkBandwidthAllocator [%s] %s:%d %@(%p) No audio entry for client=%@ mediaEntries=%@
VCSessionDownlinkBandwidthAllocator [%s] %s:%d Missing audio entries in sortedMediaEntries=%@
VCSessionDownlinkBandwidthAllocator [%s] %s:%d %@(%p) Missing audio entries in sortedMediaEntries=%@
VCSessionDownlinkBandwidthAllocator [%s] %s:%d bitrate=%d
VCSessionDownlinkBandwidthAllocator [%s] %s:%d %@(%p) bitrate=%d
VCSessionDownlinkBandwidthAllocator [%s] %s:%d Sorted media entries:
VCSessionDownlinkBandwidthAllocator [%s] %s:%d %@(%p) Sorted media entries:
VCSessionDownlinkBandwidthAllocator [%s] %s:%d %@
VCSessionDownlinkBandwidthAllocator [%s] %s:%d %@(%p) %@
VCSessionDownlinkBandwidthAllocator [%s] %s:%d Reached max number of decoder streams (%d). Unable to display video for client:%@
VCSessionDownlinkBandwidthAllocator [%s] %s:%d %@(%p) Reached max number of decoder streams (%d). Unable to display video for client:%@
VCSessionDownlinkBandwidthAllocator [%s] %s:%d Always opt into Video Stream with Quality Index:%d availableBitrate %d requiredBitrate %d
VCSessionDownlinkBandwidthAllocator [%s] %s:%d We do not have available bandwidth to support the lowest quality video stream, but we are forcing it on anyways.
VCSessionDownlinkBandwidthAllocator [%s] %s:%d Opt in [%d] to client[%@] to upgrade to stream %@ remaining %d
VCSessionDownlinkBandwidthAllocator [%s] %s:%d %@(%p) Opt in [%d] to client[%@] to upgrade to stream %@ remaining %d
VCSessionDownlinkBandwidthAllocator [%s] %s:%d Bitrate distribution completed; remaining %d (candidate: %@ %@)
VCSessionDownlinkBandwidthAllocator [%s] %s:%d %@(%p) Bitrate distribution completed; remaining %d (candidate: %@ %@)
VCSessionDownlinkBandwidthAllocator [%s] %s:%d Allocated media entries for clients:
VCSessionDownlinkBandwidthAllocator [%s] %s:%d %@(%p) Allocated media entries for clients:
VCSessionDownlinkBandwidthAllocator [%s] %s:%d %@: %@
VCSessionDownlinkBandwidthAllocator [%s] %s:%d %@(%p) %@: %@
VCSessionDownlinkBandwidthAllocator [%s] %s:%d Selected media entries for clients:%@
VCSessionDownlinkBandwidthAllocator [%s] %s:%d %@(%p) Selected media entries for clients:%@
VCSessionDownlinkBandwidthAllocator [%s] %s:%d No audio entry for client=%@
VCSessionDownlinkBandwidthAllocator [%s] %s:%d %@(%p) No audio entry for client=%@
 [%s] %s:%d Mock IDS channel network type as cellular
 [%s] %s:%d Failed to allocate link context
 [%s] %s:%d Failed to allocate _blockSettingLock
 [%s] %s:%d Failed to allocate _writeDirectPathIDSLock
 [%s] %s:%d Failed to allocate _flushDatagramPacketsLock
 [%s] %s:%d Failed to create allocator
 [%s] %s:%d Failed to setup mock IDS datagram channel
 [%s] %s:%d Failed to create underlying file descriptor
 [%s] %s:%d Failed to create VCMockIDSDatagram Channel read queue
 [%s] %s:%d Failed to create VCMockIDSDatagram Channel write queue
 [%s] %s:%d Datagram packet queue has remaining elements
 [%s] %s:%d Send failed %d errno %d
 [%s] %s:%d failing to enqueue NACK seq=%d
 [%s] %s:%d failing to enqueue Media ssrc=%u ssrc_hex=%x seq=%d seq_hex=%x
 [%s] %s:%d Trying to filter packet when there is either no stream subscription or packet's streamID isnt set
 [%s] %s:%d Generic NACK packet received, ssrc=%u ssrc_hex=%x source_ssrc=%u source_ssrc_hex=%x highestSeqNum=%d highestSeqNum_hex=%x bitMask=%x length passed=%zu length in pkt=%zu
 [%s] %s:%d Unit Test: readDatagramWithCompletionHandler NOT SUPPORTED
 [%s] %s:%d Unit Test: call to readDatagramsWithCompletionHandler NOT SUPPORTED
 [%s] %s:%d Empyting _datagramPacketsDirectIDSPath for next set of packets
 [%s] %s:%d Packet=%@ did not get enqueued in direct IDS Path
 [%s] %s:%d Unit Test: Invalidating VCMockIDSDatagramChannel
 [%s] %s:%d Unit Test: Invalidated VCMockIDSDatagramChannel
 [%s] %s:%d Unit Test: call to start NOT SUPPORTED
 [%s] %s:%d Unit Test: call to setChannelPreferences
 [%s] %s:%d Unit Test: call to requestSessionInfoWithOptions only supported for stream subscription updates
 [%s] %s:%d Unit Test: call to reportFirstPacketTimeForMKI NOT SUPPORTED
 [%s] %s:%d Create socket failed %d
 [%s] %s:%d Returning underlyingFD %d
 [%s] %s:%d recv failed %d errno %d
 [%s] %s:%d Unit Test: emulating loss by dropping packet GGeneric NACK packet received, ssrc=%u ssrc_hex=%x source_ssrc=%u source_ssrc_hex=%x highestSeqNum=%d highestSeqNum_hex=%x bitMask=%x length passed=%zu length in pkt=%zu
 [%s] %s:%d Unit Test: emulating loss by dropping packet _emulatedRxPLR=%f ssrc=%u seqNum=%hu retransmittedPacket=%d dataLength=%d
 [%s] %s:%d Unit Test: emulating loss by dropping packet
 [%s] %s:%d IGNORING! Add media packet to the buffer at index=%llu for ssrc=%u and seqNum=%u length=%zu
 [%s] %s:%d RTX/NACK: Retrieve media packet from buffer at index=%llu for ssrc=%u ssrc_hex=%x and seq=%u seq_hex=%x nCount=%u cached_ssrc2=%u cached_ssrc_hex=%x cached_seqNum2=%u cached_seqNum2=%x packetLen=%u packetBufferIndex=%d index=%d
 [%s] %s:%d RTX/NACK: INVALID PACKET LEN cached packet does not match with NACK ssrc and seq num index=%llu for ssrc=%u ssrc_hex=%x and seq_hex=%u seq_hex=%x nCount=%u ssrc2=%u ssrc2_hex=%x seqNum2=%u seqNum2_hex=%x packetLen=%u packetBufferIndex=%d index=%d
 [%s] %s:%d RTX/NACK: INVALID PACKET NACK packet does not match with cached ssrc and seqnum index=%llu for ssrc=%u ssrc_hex=%x and seq=%u seq_hex=%x nCount=%u cached_ssrc2=%u cached_ssrc2_hex=%x cached_seqNum2=%u cached_seqNum2_hex=%x packetLen=%u packetBufferIndex=%d index=%d
 [%s] %s:%d RTX/NACK: successfully retrieved packet num index=%llu for ssrc=%u ssrc_hex=%x and seq=%u seq_hex=%x nCount=%u cached_ssrc2=%u cached_ssrc2_hex=%x cached_seqNum2=%u cached_seqNum2=%x packetLen=%u packetBufferIndex=%d index=%d
 [%s] %s:%d RTX/NACK: DATAGRAM WRITE FAILED index=%llu for ssrc=%u ssrc_hex=%x and seq_hex=%u seq_hex=%x nCount=%u ssrc2=%u ssrc2_hex=%x seqNum2=%u seqNum2_hex=%x packetLen=%u packetBufferIndex=%d index=%d error=%@
 [%s] %s:%d RTX/NACK Retrieval failed because _packetBuffer[packetBufferIndex=%llu = nil for ssrc=%u and highest=%u index=%d
 [%s] %s:%d setUPlusOneMode: isUPlusOneEnabled=%d isInitiator=%d
 [%s] %s:%d nil localIP
 [%s] %s:%d nil remoteIP
 [%s] %s:%d 0 localPort
 [%s] %s:%d 0 remotePort
 [%s] %s:%d Setup socket %@:%d to %@:%d
 [%s] %s:%d Ignoring datagram with size %d
 [%s] %s:%d Send failed %d
 [%s] %s:%d recv failed %d
VCMediaQueue [%s] %s:%d Failed to allocate dictionaries in reporting flushCountDict=%p queueSizeDict=%p
VCMediaQueue [%s] %s:%d Cannot get internal queue index for packet type=%d, mediaQueueStreamId=%u
VCMediaQueue [%s] %s:%d Media packets are drained from the busy pool of mediaQueueStreamId=%u out of order!
VCMediaQueue [%s] %s:%d Internal queue has error %d when free media packet for packet type=%d, mediaQueueStreamId=%u
VCMediaQueue [%s] %s:%d VCMediaQueue register mediaQueueStreamId=%u with internal queue index=%d
VCMediaQueue [%s] %s:%d Unknown schedule policy %d
VCMediaQueue [%s] %s:%d Starting budget in this interval: %d
VCMediaQueue [%s] %s:%d Total byte count scheduled in this interval: %d, remaining budget: %d
VCMediaQueue [%s] %s:%d Failed to enqueue! status: %d
VCMediaQueue [%s] %s:%d Schedule policy %d should not reach here!
VCMediaQueue [%s] %s:%d CMBlock error %d when send/free media packet for mediaQueueStreamId=%u
VCMediaQueue [%s] %s:%d Datagram count %d is larger than VTP max compound packet datagram count %d
VCMediaQueue [%s] %s:%d Not sending the malformatted packet out from VCMediaQueue!
VCMediaQueue [%s] %s:%d Sending out probingGroupID=%d, mediaQueueStreamId=%u, size=%d
VCMediaQueue [%s] %s:%d One to one should not have compound packets
VCMediaQueue [%s] %s:%d Out of memory when creating CMBlockBuffer!
VCMediaQueue [%s] %s:%d Error from _VCMediaQueue_PreAllocVCMediaPacketsInFreePool, result %x
VCMediaQueue [%s] %s:%d Out of memory when creating internal queues!
VCMediaQueue [%s] %s:%d count=%d in pool=%p
VCMediaQueue [%s] %s:%d numberOfInternalQueues=%d mediaQueue->config.useExternalDataBuffer=%d
VCMediaQueue [%s] %s:%d mediaQueue cannot be NULL
VCMediaQueue [%s] %s:%d Internal queue with index %d is NULL
VCMediaQueue [%s] %s:%d Number of internal queues are set too large
VCMediaQueue [%s] %s:%d Not enough memory to create run time instance
VCMediaQueue [%s] %s:%d Not enough memory to create main queue
VCMediaQueue [%s] %s:%d Not enough memory to create internal queues
VCMediaQueue [%s] %s:%d VCMediaQueue: Force Disabling Packet Bundling
VCMediaQueue [%s] %s:%d Failed to create packet bundler
VCMediaQueue [%s] %s:%d Failed to create internal thread
VCMediaQueue [%s] %s:%d VCMediaQueue created successfully with 1 main queue, %d internal queues
VCMediaQueue [%s] %s:%d VCMediaQueueSendProc thread started
VCMediaQueue [%s] %s:%d VCMediaQueueSendProc thread ended
VCMediaQueue [%s] %s:%d Cannot get internal queue index for mediaQueueStreamId=%u
VCMediaQueue [%s] %s:%d Cannot get media packet from its pool for mediaQueueStreamId=%d
VCMediaQueue [%s] %s:%d Add media packet for an unknown packet type %d
VCMediaQueue [%s] %s:%d Set internalQueue timestampRateHz=%u for packetType=%d, mediaQueueStreamId=%u
VCMediaQueue [%s] %s:%d Internal queue has error %d when adding media packet for packet type=%d, mediaQueueStreamId=%u
VCMediaQueue [%s] %s:%d VCMediaQueue set with peak bitrate = %u
VCMediaQueue [%s] %s:%d VCMediaQueue set with MTU bytes = %u
VCMediaQueue [%s] %s:%d mediaQueue or its rateStats cannot be NULL mediaQueue=%p mediaQueue->rateStats=%p
VCMediaQueue [%s] %s:%d VCMediaQueue set oneToOne=%u
VCMediaQueue [%s] %s:%d Callback is NULL
VCMediaQueue [%s] %s:%d VCMediaQueue is not in the oneToOne mode yet
VCMediaQueue [%s] %s:%d Finalize the media queue:%p
VCMediaQueue [%s] %s:%d IDR frame sent out. Reset lastIDRTimestamp for mediaQueueStreamId=%u, frameSizeInPackets=%u
VCMediaQueue [%s] %s:%d Adding extension failed with result=%08X for packet sequenceNum=%u controlInfo=%p
VCMediaQueue [%s] %s:%d Refresh frame counter=%d, time=%.4f
VCMediaQueue [%s] %s:%d Unable to enqueue onto the media queue. Dropping the packet. status=%d
VCMediaQueue [%s] %s:%d Internal queue has error %d when free media packet for mediaQueueStreamId=%u
VCMediaQueue [%s] %s:%d Media packets are drained from the busy pool of stream=%u out of order!
VCMediaQueue [%s] %s:%d VCMediaQueue internal queue flushed with %u packets, %d remaining
VCMediaQueue [%s] %s:%d VCMediaQueue size over high water mark for mediaQueueStreamId=%u queueSizeInSecond=%f
VCMediaQueue [%s] %s:%d VCMediaQueue size under low water mark for mediaQueueStreamId=%u queueSizeInSecond=%f
VCMediaQueue [%s] %s:%d VCMediaQueue IN/OUT RealTime stats cannot be malloced
VCMediaQueue [%s] %s:%d VCMediaQueue IN/OUT RealTime stats are ENABLED
VCMediaQueue [%s] %s:%d mediaPacket or rateStats cannot be NULL
AVConferencePreview [%s] %s:%d self=%p (%@), delegate=%p (%@)
AVConferencePreview [%s] %s:%d Protocol AVConferencePreviewClientDelegate contains %u optional methods.
AVConferencePreview [%s] %s:%d %u: Delegate %s to "%@"
@:@ AVConferencePreview-didStartPreview
AVConferencePreview [%s] %s:%d @:@ AVConferencePreview-didStartPreview (%p)
@:@ AVConferencePreview-didPausePreview
AVConferencePreview [%s] %s:%d @:@ AVConferencePreview-didPausePreview (%p)
@:@ AVConferencePreview-didStopPreview
AVConferencePreview [%s] %s:%d @:@ AVConferencePreview-didStopPreview (%p)
@:@ AVConferencePreview-didReceiveFirstPreviewFrameFromCamera
AVConferencePreview [%s] %s:%d @:@ AVConferencePreview-didReceiveFirstPreviewFrameFromCamera (%p) cameraUID=%@
@:@ AVConferencePreview-didReceiveFirstPreviewFrameFromCameraUniqueID
AVConferencePreview [%s] %s:%d @:@ AVConferencePreview-didReceiveFirstPreviewFrameFromCameraUniqueID (%p) cameraUID=%@
AVConferencePreview [%s] %s:%d self=[%p] cameraUID=%@
AVConferencePreview [%s] %s:%d (%p) videoAttributes=%@
AVConferencePreview [%s] %s:%d (%p) screenAttributes=%@
AVConferencePreview [%s] %s:%d cameraUID=%s, error=%@
@:@ AVConferencePreview-didReceiveErrorFromCamera
AVConferencePreview [%s] %s:%d @:@ AVConferencePreview-didReceiveErrorFromCamera (%p) cameraUID=%@, error=%@
AVConferencePreview [%s] %s:%d size=%lu
AVConferencePreview [%s] %s:%d Delegate does not respond to didGetSnapshot:
AVConferencePreview [%s] %s:%d cameraUniqueID=%s
AVConferencePreview [%s] %s:%d Delegate does not respond to cameraDidBecomeAvailableForUniqueID:
AVConferencePreview [%s] %s:%d cameraUID=%s, reason=%d
AVConferencePreview [%s] %s:%d Delegate does not respond to cameraDidBecomeInterruptedForForUniqueID:reason:
AVConferencePreview [%s] %s:%d zoomAvailabilty=%d
AVConferencePreview [%s] %s:%d Delegate does not respond to cameraZoomAvailabilityDidChange:
AVConferencePreview [%s] %s:%d availability=%d
AVConferencePreview [%s] %s:%d Delegate does not respond to cameraCinematicFramingAvailabilityDidChange:
AVConferencePreview [%s] %s:%d Invalid layer or slot: layer=%p, slot=%u
AVConferencePreview [%s] %s:%d Connected slot %u to layer %p named "%@"
AVConferencePreview [%s] %s:%d previewDidReceiveFirstFrame: Retrying connection to server in %g seconds, connection attempts %u
AVConferencePreview [%s] %s:%d previewDidReceiveFirstFrame: Sending re-connect message to server
AVConferencePreview [%s] %s:%d previewDidReceiveFirstFrame: Connected to server
AVConferencePreview [%s] %s:%d previewCameraUIDChanged: cameraUID = %@
AVConferencePreview [%s] %s:%d previewCameraUIDChanged: cameraUID is nil
AVConferencePreview [%s] %s:%d previewDidStart: _isPreviewRunning=%d
AVConferencePreview [%s] %s:%d previewDidPause: _isPreviewRunning=%d
AVConferencePreview [%s] %s:%d previewDidStop: _isPreviewRunning=%d
AVConferencePreview [%s] %s:%d previewDidLocalVideoSlotChange: Received slot %u for layer %p facing %d
AVConferencePreview [%s] %s:%d updatePreviewState: _isPreviewRunning=%d
@:@ AVConferencePreview-dealloc
AVConferencePreview [%s] %s:%d @:@ AVConferencePreview-dealloc (%p)
AVConferencePreview [%s] %s:%d !!Deprecating!! Client is recommanded to use startPreview instead. AVConferencePreview startPreviewUnpausing, self %p, unpause=%d.
AVConferencePreview [%s] %s:%d _isPreviewRunning=%d
AVConferencePreview [%s] %s:%d returning %d
AVConferencePreview [%s] %s:%d returning %f
AVConferencePreview [%s] %s:%d ---- STOP! ---- setLocalCamera is deprecated! Use setLocalCameraWithUID instead! AVConferencePreview setLocalCamera %u
AVConferencePreview [%s] %s:%d requestedCameraUniqueID = %@
AVConferencePreview [%s] %s:%d enabled=%d
AVConferencePreview [%s] %s:%d localCamera=%u
 [%s] %s:%d DTMF: error, unsupported event %u
 [%s] %s:%d DTMF: error, not a start block
 [%s] %s:%d Timestamp delta between the current packet timestamp and the timestamp when the DTMF event was originated from IPT=%d, current event=%d, timestamp=%d, currentStartTimestamp=%d
 [%s] %s:%d DTMF: error, not a stop block
 [%s] %s:%d Screen size error: %dx%d
 [%s] %s:%d Invalid payload config
 [%s] %s:%d Failed to encode the codec=%d
 [%s] %s:%d Failed to encode the cipherSuite=%d
 [%s] %s:%d Unsupported H264PacketizationMode=%d
 [%s] %s:%d Unsupported H264LevelAsymmetryAllowed=%d
 [%s] %s:%d Unsupported cipher suite (%u)
 [%s] %s:%d codecType=%u is too large for packed format
 [%s] %s:%d rtpPayload=%u is too large for packed format
 [%s] %s:%d rtcpFlags=%u is too large for packed format
 [%s] %s:%d rtpSampleRate=%u is too large for packed format
 [%s] %s:%d Unknown rtpSampleRate=%u
 [%s] %s:%d negotiationCipherSuite=%u is too large for packed format
 [%s] %s:%d mediaFlags=%u is too large for packed format
 [%s] %s:%d pTime=%lu is too large for packed format or is not
 [%s] %s:%d Failed to allocate VCMediaNegotiationBlobV2StreamGroupPayload (extension)
 [%s] %s:%d HandoverReport: Duplication is forcibly disabled using user defaults
 [%s] %s:%d HandoverReport: Duplication cannot be enabled due to WiFi off-channel activity
 [%s] %s:%d HandoverReport: Duplication state changed to PENDING
 [%s] %s:%d HandoverReport: Duplication state changed to ON
 [%s] %s:%d HandoverReport: Duplication state changed to OFF
 [%s] %s:%d HandoverReport: Ignoring iRAT suggestion as directed by storebag settings
 [%s] %s:%d HandoverReport: start dupe by local media degraded.
 [%s] %s:%d HandoverReport: start dupe by both local media degraded and remote duplication.
 [%s] %s:%d HandoverReport: stop dupe by local media degraded.
 [%s] %s:%d HandoverReport: stop dupe by local media degraded but remain dupe by remote duplication.
 [%s] %s:%d HandoverReport: remote duplication suggests %s during other type of duplication.
 [%s] %s:%d HandoverReport: stop dupe by remote duplication.
 [%s] %s:%d HandoverReport: stop dupe by remote duplication but remain dupe by local media degraded.
 [%s] %s:%d HandoverReport: stop dupe by remote duplication but remain dupe by local media health unrecoverable.
 [%s] %s:%d HandoverReport: stop dupe by local media degraded in handover.
 [%s] %s:%d HandoverReport: stop dupe by both local media degraded and remote duplication in handover.
 [%s] %s:%d HandoverReport: stop dupe by remote media degraded in handover.
 [%s] %s:%d HandoverReport: start dupe by local media degraded in handover.
 [%s] %s:%d HandoverReport: start dupe by remote media degraded in handover.
 [%s] %s:%d HandoverReport: Make duplication pending due to interface alert update
 [%s] %s:%d HandoverReport: Enable duplication if it is pending, due to interface alert update
 [%s] %s:%d HandoverReport: updateDuplicationStateWithAlertInfo - isOnLocal: %d isAlertEnabled: %d connectionWiFiCount: %d connectionCellCount: %d isDuplicationDisabledDueToAlert: %d
 [%s] %s:%d HandoverReport: start dupe by media health unrecoverable.
 [%s] %s:%d HandoverReport: start dupe by both local media health unrecoverable and remote duplication.
 [%s] %s:%d HandoverReport: stop dupe by media health recovered.
 [%s] %s:%d HandoverReport: stop dupe by media health recovered but remain dupe by remote duplication.
 [%s] %s:%d HandoverReport: start dupe by remote duplication.
 [%s] %s:%d HandoverReport: start dupe by both remote and local media degraded.
 [%s] %s:%d HandoverReport: local media degraded suggests %s during other type of duplication.
 [%s] %s:%d Packet handler called after secure data channel was released!
 [%s] %s:%d Failed to decrypt the data. (%X)
 [%s] %s:%d maxEncryptedDataSize = %ld
 [%s] %s:%d %@(%p) maxEncryptedDataSize = %ld
 [%s] %s:%d maxUnencryptedDataSize = %ld
 [%s] %s:%d %@(%p) maxUnencryptedDataSize = %ld
 [%s] %s:%d sharedSecret (%p) invalid: requiredSize = %d, passedSize = %d
 [%s] %s:%d tls_record_init_pending_ciphers failed with error 0x%X
 [%s] %s:%d tls_record_advance_read_cipher failed with error 0x%X
 [%s] %s:%d tls_record_advance_write_cipher failed with error 0x%X
 [%s] %s:%d Data is too large (%d)
 [%s] %s:%d Failed to encrypt the client data (%X)
 [%s] %s:%d Failed with status: %X
 [%s] %s:%d Invalid encrypted data passed to %s.
 [%s] %s:%d need sharedSecret for encrypted data
 [%s] %s:%d tls_record_decrypt failed with error 0x%X
 [%s] %s:%d tls_record_decrypt returned contentType = %d != tls_record_type_AppData
 [%s] %s:%d Invalid secure data passed to %s.
 [%s] %s:%d Invalid OFT Type %d
 [%s] %s:%d streamIDsDictionary is nil
 [%s] %s:%d subscribedStreamIDs is the same. Don't subscribe again
 [%s] %s:%d retry %d times subscribedStreamIDs equal: %@
 [%s] %s:%d Hit the retry limit=%d for subscribedStreamIDs
 [%s] %s:%d primary connection is nil
 [%s] %s:%d Primary connection is end-to-end when subscribing to streams.
 [%s] %s:%d Secondary connection is end-to-end when subscribing to streams.
 [%s] %s:%d set publishedStreamIDs: %@
 [%s] %s:%d publishedStreamIDs equal: %@
 [%s] %s:%d Primary connection is end-to-end when publishing streams.
 [%s] %s:%d set primaryLinkID: %@
 [%s] %s:%d set duplicationLinkID: %@
 [%s] %s:%d Reset participant generation counter from %d to 0
 [%s] %s:%d participantGenerationCounterLSByte = %d, %d
 [%s] %s:%d eventInfo=%@
 [%s] %s:%d eventInfo has IDSDataChannelError, ERROR = %@
 [%s] %s:%d No IDSSessionInfoResponse in the eventInfo!
 [%s] %s:%d Getting duplicated participantGenerationCounter=%u
 [%s] %s:%d %@(%p) Getting duplicated participantGenerationCounter=%u
 [%s] %s:%d peerSubscribedStreamCallback is not set up
 [%s] %s:%d %@(%p) peerSubscribedStreamCallback is not set up
 [%s] %s:%d Ignoring identical peerSubscribedStreams=%@
 [%s] %s:%d %@(%p) Ignoring identical peerSubscribedStreams=%@
 [%s] %s:%d peerPublishedStreamCallback is not set up
 [%s] %s:%d %@(%p) peerPublishedStreamCallback is not set up
 [%s] %s:%d Ignoring identical peerPublishedStreams=%@
 [%s] %s:%d %@(%p) Ignoring identical peerPublishedStreams=%@
 [%s] %s:%d Primary connection is nil
 [%s] %s:%d Opt in for connection, request = %@
 [%s] %s:%d Connection is nil
 [%s] %s:%d Opt out for non primary connection, request = %@
 [%s] %s:%d stats controller [%p] init with transportStream [%p] and transportSessionId: %u
 [%s] %s:%d dealloc [%p] with statsCount:[%u, %u, %u, %u]
 [%s] %s:%d session stats controller reset
 [%s] %s:%d VCRealTimeThread_Start for session stats controller %s
 [%s] %s:%d VCRealTimeThread_Initialize for session stats controller thread FAILED
 [%s] %s:%d start local session stats update
 [%s] %s:%d stop local session stats update completely
 [%s] %s:%d Round trip time is greater than 10 seconds [RTT:%dms]
 [%s] %s:%d Local VTP queue time is greater than 1 seconds [qTime:%dms]
 [%s] %s:%d index = %d, sessionStatsLocal: uplinkID = %d, request time = %f, totalLocalMediaPacketSent = %d, totalServerStatsByteUsed = %d
 [%s] %s:%d Dropping late server stats with Id: %u [current Id:%u, diff:%u]
 [%s] %s:%d Trigger rate control without serverStats response with uplinkSendTimestamp:0x%04X, downlinkSendTimestamp:0x%04X [uplink:%s, downlink:%s]
 [%s] %s:%d Receive packet from transport stream fails!
 [%s] %s:%d Invalid remoteSessionStats
 [%s] %s:%d Do not update session stats since linkID does not match %d, %d
 [%s] %s:%d statsID is same as the previous one %u
 [%s] %s:%d @=@ Health: VCSessionStatsController Health Monitor for serverStats: total stats request count:%u, total response count:%u, total callback count:%u, avgInterCallbackDuration:%.3f [this interval processed:%u, dropped:%u,%u,%u, triggered:%u,%u, average queue time:%.2fms, max queue time:%.2fms]
 [%s] %s:%d statsController is NULL!
 [%s] %s:%d Failed to register
 [%s] %s:%d Failed to open path to audio units
 [%s] %s:%d Dynamic ducker component not found.
 [%s] %s:%d Failed to create a dynamic ducker instance err=%d
 [%s] %s:%d AVCPacketRelaySocketConnection: getpeername failed on connected socket %d with errno %d
 [%s] %s:%d AVCPacketRelaySocketConnection: invalid remote IPPort
 [%s] %s:%d AVCPacketRelaySocketConnection: socket %d is connected. Expected an unconnected socket
 [%s] %s:%d Created AVCPacketRelaySocketConnection %s successfully
 [%s] %s:%d AVCPacketRelaySocketConnection: init error %08X
 [%s] %s:%d AVCPacketRelaySocketConnection: starting...
 [%s] %s:%d AVCPacketRelaySocketConnection: cannot start without setting read handler
 [%s] %s:%d AVCPacketRelaySocketConnection: stopping...
 [%s] %s:%d AVCPacketRelaySocketConnection: received from %s
 [%s] %s:%d AVCPacketRelaySocketConnection: receive failed with error %d on socket %d
 [%s] %s:%d AVCPacketRelaySocketConnection: received %d bytes of data
 [%s] %s:%d AVCPacketRelaySocketConnection: send failed with error %d on socket %d
 [%s] %s:%d AVCPacketRelaySocketConnection: send failed with broken pipe (socket %d), error %d
 [%s] %s:%d AVCPacketRelaySocketConnection: sent %zu bytes < %u total bytes
 [%s] %s:%d AVCPacketRelaySocketConnection: sent %zu bytes
 [%s] %s:%d AVCPacketRelaySocketConnection: dealloc
 [%s] %s:%d Created AVCPacketRelayIDSConnection %s successfully
 [%s] %s:%d AVCPacketRelayIDSConnection: init error %08X
 [%s] %s:%d AVCPacketRelayIDSConnection: already started
 [%s] %s:%d AVCPacketRelayIDSConnection: cannot start without setting read handler
 [%s] %s:%d AVCPacketRelayIDSConnection: starting...
 [%s] %s:%d AVCPacketRelayIDSConnection: Datagram channel link %d failed to read with error %s
 [%s] %s:%d AVCPacketRelayConnection has been dealloced
 [%s] %s:%d AVCPacketRelayIDSConnection: Datagram channel link %d returned empty datagram
 [%s] %s:%d AVCPacketRelayIDSConnection: reading %u bytes
 [%s] %s:%d AVCPacketRelayIDSConnection: IDS eventHandler called without event type
 [%s] %s:%d AVCPacketRelayIDSConnection: IDS channel connected
 [%s] %s:%d AVCPacketRelayIDSConnection: IDS channel disconnected
 [%s] %s:%d AVCPacketRelayIDSConnection: stopping...
 [%s] %s:%d AVCPacketRelayIDSConnection: resume the connection and wait to be connected before sending data
 [%s] %s:%d AVCPacketRelayIDSConnection: write %u bytes failed with error %s
 [%s] %s:%d AVCPacketRelayIDSConnection: write %u bytes successfully
 [%s] %s:%d AVCPacketRelayIDSConnection: dealloc
 [%s] %s:%d AVCPacketRelay: init connection is nil
 [%s] %s:%d AVCPacketRelay: init connection has wrong type
 [%s] %s:%d AVCPacketRelay: failed to create AVCPacketRelayQueue
 [%s] %s:%d AVCPacketRelay: readHandler failed with error %s
 [%s] %s:%d AVCPacketRelay has been dealloced
 [%s] %s:%d AVCPacketRelay: doesn't know how to forward packet
 [%s] %s:%d AVCPacketRelay: forwarding packet failed with error %s
 [%s] %s:%d Created AVCPacketRelay %s successfully
 [%s] %s:%d AVCPacketRelay: init failed with error %s
 [%s] %s:%d AVCPacketRelay: starting...
 [%s] %s:%d AVCPacketRelay: stopping...
 [%s] %s:%d AVCPacketRelay: dealloc
 [%s] %s:%d AVCPacketRelay: start failed with result %08X
 [%s] %s:%d AVCPacketRelay: stop connection failed with result %08X
 [%s] %s:%d AVCPacketRelay: stop multiplexed connection failed with result %08X
 [%s] %s:%d AVCPacketRelay: stop failed with result %08X
 [%s] %s:%d @=@ Health: AVCPacketRelay Health Monitor for AVCPacketRelay Send packet count=%d, byte count=%d, interval=%.3fs, rate=%.3fkbps
 [%s] %s:%d @=@ Health: AVCPacketRelay Health Monitor for AVCPacketRelay Recv packet count=%d, byte count=%d, interval=%.3fs, rate:%.3fkbps, demuxPackets:[rtpAndRTCPPacketCount=%u, rtpPacketCount=%u, rtcpPacketCount=%u, droppedPacketCount=%u]
 [%s] %s:%d Invalid mediaStreamMode=%d
 [%s] %s:%d Invalid connection type=%d
 [%s] %s:%d Invalid mode=%d
 [%s] %s:%d mode=%ld, error=%@
 [%s] %s:%d %s.
 [%s] %s:%d Failed to allocate offer info
 [%s] %s:%d %@(%p) Failed to allocate offer info
 [%s] %s:%d uuid generation failed
 [%s] %s:%d %@(%p) uuid generation failed
 [%s] %s:%d could not generate dataSessionID
 [%s] %s:%d %@(%p) could not generate dataSessionID
 [%s] %s:%d could not generate callInfoBlob on offerer
 [%s] %s:%d %@(%p) could not generate callInfoBlob on offerer
 [%s] %s:%d offer=%@, error=%@
 [%s] %s:%d Failed to allocate answer info dictionary
 [%s] %s:%d Failed to add VCCallInfo dictionary on answerer
 [%s] %s:%d answer=%@, error=%@
 [%s] %s:%d Negotiated accessNetworkType cannot be kAVCMediaStreamAccessNetworkTypeTypeUnspecified
 [%s] %s:%d Negotiated values: mediaStreamMode=%u, audioStreamMode=%u, codecType=%u, payloadType=%u pTime=%u
 [%s] %s:%d Negotiated values: tilesPerFrame=%lu, ltrpEnabled=%i, videoWidth=%lu, videoHeight=%lu, payloadType=%lu, videoHDRMode = %lu, frameRate=%lu, maxTxBitRate=%lu, FLS=%s, transportProtocolType=%u
 [%s] %s:%d error=%@
 [%s] %s:%d Failed to allocate media stream config object
 [%s] %s:%d Failed to allocate callInfo blob object
 [%s] %s:%d Failed to create deviceType string for VCCallInfo blob
 [%s] %s:%d Failed to osVersion string for VCCallInfo blob
 [%s] %s:%d Failed to frameworkVersionString string for VCCallInfo blob
 [%s] %s:%d Local callInfoBlob = %s
 [%s] %s:%d Negotiated pixelFormat=%s for mediaStreamMode=%lu in videoHDRMode=%lu
 [%s] %s:%d Negotiation of hdr modes is incorrect
VCMediaStreamSynchronizer [%s] %s:%d VCMediaStreamSynchronizer[%p] failed! sourceSampleRate:%u destinationSampleRate:%u
VCMediaStreamSynchronizer [%s] %s:%d VCMediaStreamSynchronizer[%p]: sourceSampleRate:%ld destinationSampleRate:%ld
VCMediaStreamSynchronizer [%s] %s:%d synchronizer=nil
VCMediaStreamSynchronizer [%s] %s:%d VCMediaStreamSynchronizer[%p]: source info not ready
VCMediaStreamSynchronizer [%s] %s:%d VCMediaStreamSynchronizer[%p]: destination info not ready
VCMediaStreamSynchronizer [%s] %s:%d VCMediaStreamSynchronizer[%p] Received dest (video) ntpTime=%.6f rtpTimeStamp=%u
VCMediaStreamSynchronizer [%s] %s:%d VCMediaStreamSynchronizer[%p]: Scheduled playout for dest (video) RTPTimestamp=%u scheduleTime=%.6f
VCMediaStreamSynchronizer [%s] %s:%d VCMediaStreamSynchronizer[%p]: wrapCount=%d sourceTime=%.9f
VCMediaStreamSynchronizer [%s] %s:%d VCMediaStreamSynchronizer: wrap around playoutSampleRTP(%lld)-destRTPOfNTP(%lld)=%lld
VCMediaStreamSynchronizer [%s] %s:%d VCMediaStreamSynchronizer[%p]: isSourceActive:%d
VCMediaStreamSynchronizer [%s] %s:%d VCMediaStreamSynchronizer[%p]: resetting source state
VCMediaStreamSynchronizer [%s] %s:%d VCMediaStreamSynchronizer[%p]: Received source (audio) frame. systemTime=%.6f playoutSampleRTPTimestamp=%u
VCMediaStreamSynchronizer [%s] %s:%d VCMediaStreamSynchronizer[%p] Received source (audio) ntpTime=%.6f rtpTimeStamp=%u
VCMediaStreamSynchronizer [%s] %s:%d VCMediaStreamSynchronizer[%p]: lastSrcRTP=%u srcSRRTP=%u srcSRNPT=%.9f srcRate=%d dstRTP=%u dstSrRTP=%u dstSRNTP=%.9f dstRate=%d
VCMediaStreamSynchronizer [%s] %s:%d VCMediaStreamSynchronizer[%p]: DToS: %u->%u
AVCTextStream [%s] %s:%d socketsDictionary=%@, callID=%@, error=%@
AVCTextStream [%s] %s:%d Failed to allocate callback queue
AVCTextStream [%s] %s:%d %@(%p) Failed to allocate callback queue
AVCTextStream [%s] %s:%d Failed to allocate text stream
AVCTextStream [%s] %s:%d %@(%p) Failed to allocate text stream
AVCTextStream [%s] %s:%d Failed to get capabilities dictionary
AVCTextStream [%s] %s:%d %@(%p) Failed to get capabilities dictionary
AVCTextStream [%s] %s:%d @:@ AVCTextStream-init (%p) PID=%d, callID=%@, streamToken=%d, error=%@
@:@ AVCTextStream-init
AVCTextStream [%s] %s:%d @:@ AVCTextStream-init (%p)
@:@ AVCTextStream-dealloc
AVCTextStream [%s] %s:%d @:@ AVCTextStream-dealloc (%p)
AVCTextStream [%s] %s:%d Invalid text configuration: error[%s]
AVCTextStream [%s] %s:%d %@(%p) Invalid text configuration: error[%s]
AVCTextStream [%s] %s:%d 
AVCTextStream [%s] %s:%d start (not using XPC)
AVCTextStream [%s] %s:%d %@(%p) start (not using XPC)
@:@ AVCTextStream-start
AVCTextStream [%s] %s:%d @:@ AVCTextStream-start (%p)
@:@ AVCTextStream-stop
AVCTextStream [%s] %s:%d @:@ AVCTextStream-stop (%p)
@:@ AVCTextStream-pause
AVCTextStream [%s] %s:%d @:@ AVCTextStream-pause (%p)
@:@ AVCTextStream-resume
AVCTextStream [%s] %s:%d @:@ AVCTextStream-resume (%p)
AVCTextStream [%s] %s:%d delegate=%p
AVCTextStream [%s] %s:%d direction=%d
AVCTextStream [%s] %s:%d direction is already set to %d
AVCTextStream [%s] %s:%d rtcpEnabled=%d
AVCTextStream [%s] %s:%d rtcpEnabled is already set to %d
AVCTextStream [%s] %s:%d rtpTimeOutEnabled=%d
AVCTextStream [%s] %s:%d rtpTimeOutEnabled is already set to %d
AVCTextStream [%s] %s:%d rtcpTimeOutEnabled=%d
AVCTextStream [%s] %s:%d rtcpTimeOutEnabled is already set to %d
AVCTextStream [%s] %s:%d rtpTimeOutIntervalSec=%f
AVCTextStream [%s] %s:%d rtpTimeOutInterval is already set to %f
AVCTextStream [%s] %s:%d rtcpTimeOutIntervalSec=%f
AVCTextStream [%s] %s:%d rtcpTimeOutIntervalSec is already set to %f
AVCTextStream [%s] %s:%d rtcpSendIntervalSec=%f
AVCTextStream [%s] %s:%d rtcpSendIntervalSec is already set to %f
 [%s] %s:%d called with invalid parameter: routine=%p context=%p identifier=%p
 [%s] %s:%d Failed to allocate real time thread
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCRealTimeThread.c:%d: Failed to start the thread
 [%s] %s:%d called with NULL context!
 [%s] %s:%d ### VCRealTimeThread_Start(%s) called!
 [%s] %s:%d ### VCRealTimeThread_Stop(%s) called!
 [%s] %s:%d Successful thread state transition: %d -> %d
 [%s] %s:%d Thread state transition failed: %d -> %d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCRealTimeThread.c:%d: Thread creation failed (%d)
 [%s] %s:%d ### VCRealTimeThread_ThreadProc(%s) start!
 [%s] %s:%d ### VCRealTimeThread_ThreadProc(%s) running!
 [%s] %s:%d ### VCRealTimeThread_ThreadProc(%s) pausing!
 [%s] %s:%d ### VCRealTimeThread_ThreadProc(%s) stop!
 [%s] %s:%d Socket creation error - %u
 [%s] %s:%d dictXPCObj returned NULL
 [%s] %s:%d Failed to add the format description
 [%s] %s:%d Failed to read the media type
 [%s] %s:%d Incompatible media type
 [%s] %s:%d Failed to create XPC object for mediaType=%s
 [%s] %s:%d Unsupported mediaType=%s
 [%s] %s:%d Failed to allocate value ref for %s
 [%s] %s:%d Failed to create XPC object for media type
 [%s] %s:%d Failed to create XPC object for width
 [%s] %s:%d Failed to create XPC object for height
 [%s] %s:%d Failed to create XPC object for the format extensions
 [%s] %s:%d Unable to extract audio stream basic description from formatDescription
 [%s] %s:%d dataXPCObj is NULL
 [%s] %s:%d Could not encode CMSampleBuffer attachments
 [%s] %s:%d Failed to encode audio sample buffer for XPC
 [%s] %s:%d XPC object not found for %s
 [%s] %s:%d Failed to create number ref for %s
 [%s] %s:%d Failed to read the pixel format
 [%s] %s:%d Failed to read the width
 [%s] %s:%d Failed to read the height
 [%s] %s:%d Failed to read extensions
 [%s] %s:%d Failed to create format description. status=%d
 [%s] %s:%d xpc_data_get_bytes returned an unexpected size=%d for the audio format
 [%s] %s:%d Failed to create format description from XPC dictionary. status=%d
 [%s] %s:%d Failed to retrieve the pixel buffer
 [%s] %s:%d Could not retrieve the time information
 [%s] %s:%d Failed to decode samplebuffer attachments
 [%s] %s:%d Failed to read the audio sample count
 [%s] %s:%d Failed to decode audio sample buffer
 [%s] %s:%d Failed to decode the block buffer
 [%s] %s:%d Failed to decode the format description
 [%s] %s:%d Failed to decode the time
 [%s] %s:%d Could not recreate sample buffer from xpcDictionary: %d
 [%s] %s:%d Data is missing in XPC dictionary
 [%s] %s:%d Failed to retrieve data buffer from XPC dictionary
 [%s] %s:%d Unexpected data length=%d
 [%s] %s:%d Failed to allocate temporary buffer
 [%s] %s:%d Error creating CMBlockBufferRef from CFData. status=%d
VCRC [%s] %s:%d [%p] config for key=%s serverBagContainsGroup=%d fastSuddenBandwidthDetectionEnabled=%d minProbingSequenceSize=%d suddenBWDPercentage=%f minFastBWDSampleCount=%d
VCRC [%s] %s:%d Invalid parameter. estimator=%p
VCRC [%s] %s:%d Probing sequence head is late, early probing sequence packet number: %d, bytes:%d
VCRC [%s] %s:%d Bandwidth Estimation(BWD:%.2f): ArrivalTime:%.4f, state:%d, divergeCount:%d, EstimatedBandwidth:%.2f
VCRC [%s] %s:%d Bandwidth Estimation: Update bandwidth estimator qualification parameters with RAT=%d, mode=%d. [maxBW:%f, minWin:%f, maxOverRange:%d, minPacketCount:%d]
VCRC [%s] %s:%d Invalid parameter. estimatorMap=%p
VCRC [%s] %s:%d Create bandwidth estimator for estimator id: %d
VCRC [%s] %s:%d Remove bandwidth estimator for estimator id: %d
AVCRC [%s] %s:%d Unsupported operating mode %d
AVCRC [%s] %s:%d Adding key:%s for mode %d
AVCRC [%s] %s:%d Server bag dictionary is empty.
AVCRC [%s] %s:%d operatingMode:%d keys:%s
AVCRC [%s] %s:%d Invalid type=%d
AVCRC [%s] %s:%d Could not find key %s in VCRC Server Bag!
AVCRC [%s] %s:%d VCRC Experiment groupIndex=%d populationDistribution=%@ randomValue=%f
 [%s] %s:%d Expand: WARN TOO MANY PLAYED OUT DATA %d > 15 ms %d
 [%s] %s:%d levelMatchPercentile = %2.3f out of valid range
 [%s] %s:%d buffer size out of valid range bufferMaxSize = %d
 [%s] %s:%d history buffer allocate failed
 [%s] %s:%d NULL outputVector
 [%s] %s:%d output not ready
 [%s] %s:%d NULL fecAnalyzer
 [%s] %s:%d New feedback arrived fecFeedback.sizeInPackets=%d fecFeedback.lostPackets=%d time=%f timeDelta=%f bufferIndex=%d
 [%s] %s:%d Histogram has been populated countItems=%d currentTimeDelta=%f _lastComputedVPLR=%2.2f
 [%s] %s:%d Invalid transportSessionID
 [%s] %s:%d VTP_SetTransportSessionID failed %x
 [%s] %s:%d capture = %dx%d, encode = %dx%d
 [%s] %s:%d %@(%p) capture = %dx%d, encode = %dx%d
 [%s] %s:%d setupVTPSocket called before connectionResult was set
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCClientRelay.m:%d: socket failed(%08X)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCClientRelay.m:%d: bind on %s failed(%08X)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCClientRelay.m:%d: getaddrinfo(%s,%s) failed(%08X)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCClientRelay.m:%d: setupVTPSocket failed(%x)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCClientRelay.m:%d: VTPRecvProcVCCR thread create failed(%d)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCClientRelay.m:%d: startRelay: _idsReadQueue creation failed
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCClientRelay.m:%d: startRelay: _idsReadSource creation failed
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCClientRelay.m:%d: startRelay VTP_SetClientRelayMode(%d) failed(%d)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCClientRelay.m:%d: relayIDSPacket: recv failed(%d)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCClientRelay.m:%d: relayIDSPacket: VTP_Sendto: sentBytes = %d, errno = %d
 [%s] %s:%d recv(%d) = %d, sent(%d) = (%d)
 [%s] %s:%d %@(%p) recv(%d) = %d, sent(%d) = (%d)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCClientRelay.m:%d: VCClientRelayVTPReceiveProc: VTP_Select failed(%d)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCClientRelay.m:%d: VCClientRelayVTPReceiveProc: VTP_Recvfrom failed(%d)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCClientRelay.m:%d: VCClientRelayVTPReceiveProc send: sentBytes = %d, errno = %d
 [%s] %s:%d VCCR - VCClientRelayVTPReceiveProc stop!
 [%s] %s:%d invalid input parameter
 [%s] %s:%d Failed to allocate buffer list
 [%s] %s:%d Nothing to do. The audio buffer list is already NULL
 [%s] %s:%d No support for interleaved audio channels
 [%s] %s:%d Formats don't match
 [%s] %s:%d Sample count mismatch: source=%u dest=%u don't match
 [%s] %s:%d No support for non Float formats
 [%s] %s:%d Sample count sourceMultiChannelBufferList=%u and destMonoBufferList=%u don't match
 [%s] %s:%d Invalid number of source buffers, mNumberBuffers=%u
 [%s] %s:%d Formats don't match: source=%f dest=%f
 [%s] %s:%d Unable to append all the source samples!
 [%s] %s:%d failed with %d
 [%s] %s:%d invalid input parameter. Index=%u
 [%s] %s:%d Invalid input parameter
 [%s] %s:%d Number of buffers is incorrect. mNumberBuffers=%u mChannelsPerFrame=%u.
 [%s] %s:%d Invalid input parameter. inSampleBuffer=%p outSampleBuffer=%p converter=%p
 [%s] %s:%d Unable to resample. Needed capacity=%d capacity=%d
 [%s] %s:%d Invalid channel count. inSampleBuffer=%d outSampleBuffer=%d
 [%s] %s:%d converter failed
 [%s] %s:%d Failed to create the CMSampleBuffer description: %d
 [%s] %s:%d Failed to create the CMSampleBuffer: %d
 [%s] %s:%d Failed to create format description for audio buffer
 [%s] %s:%d One of the pointers passed to AudioConverterInput callback is NULL
 [%s] %s:%d Number of buffers in sample buffer and io data do not match. inAudioBuffer=%d, ioData=%d.
 [%s] %s:%d Insufficent input samples: needed = %d, available = %lu
 [%s] %s:%d Media Blob - %s
 [%s] %s:%d Media Blob - Captions Settings: canDisplayCaptions=%d
 [%s] %s:%d Media Blob -     %s
 [%s] %s:%d Media Blob - Multiway Audio: count=%d
 [%s] %s:%d Media Blob - Multiway Video: count=%d
 [%s] %s:%d Failed to create video rules media blob entries
 [%s] %s:%d Failed to create screen sharing media blob entries
 [%s] %s:%d No pixel format set to negotiate
 [%s] %s:%d No HDR modes to negotiate
 [%s] %s:%d Found duplicated rule for %dx%d (%d) payload=%d 0x%x
 [%s] %s:%d Failed to allocate video rule collection (screen=%d)
 [%s] %s:%d Failed to allocate video rules array (screen=%d)
 [%s] %s:%d Detected an unknown formats (bitfield=0x%08x, bitfieldExt1=0x%08x - screen=%d). Ignoring ...
 [%s] %s:%d Media Blob - Video Settings: SSRC=%x allowRTCPFB=%u
 [%s] %s:%d Media Blob -     Payload=%u Format string=%s
 [%s] %s:%d Media Blob -     Payload=%u Parameter set: %s
 [%s] %s:%d Media Blob - Screen Settings: SSRC=%x allowRTCPFB=%u
 [%s] %s:%d Media Blob -     Format string=%s
 [%s] %s:%d Media Blob -     Payload=%u parameter set: %s
 [%s] %s:%d Invalid bandwidth configuration: connection type=%d, operating mode=%d 
 [%s] %s:%d Media Blob -     %s
VCVirtualTTYDevice [%s] %s:%d Virtual TTY Device mode(%ld) not supported
VCVirtualTTYDevice [%s] %s:%d VCVirtualTTYDevice[%p] %s
VCVirtualTTYDevice [%s] %s:%d 
VCVirtualTTYDevice [%s] %s:%d Unable to start because of unexpected state:%d 
VCVirtualTTYDevice [%s] %s:%d %@(%p) Unable to start because of unexpected state:%d 
VCVirtualTTYDevice [%s] %s:%d CMSimpleQueueEnqueue Full
VCVirtualTTYDevice [%s] %s:%d %@(%p) CMSimpleQueueEnqueue Full
VCVirtualTTYDevice [%s] %s:%d Sending character:'%C'
VCVirtualTTYDevice [%s] %s:%d Not supported
VCVirtualTTYDevice [%s] %s:%d Received character:%c
VCVirtualTTYDevice [%s] %s:%d Unexpected SPI call
 [%s] %s:%d The payload set is empty
 [%s] %s:%d No payloads to negotiate. Audio payloads=%@
 [%s] %s:%d streamToken=%ld, requesterID=%@, delegate=%@, queue=%@v
 [%s] %s:%d Delegate parameter is nil
 [%s] %s:%d Failed to allocate moments XPC connection for streamToken:%u
 [%s] %s:%d Failed to allocate moments _delegateQueue
 [%s] %s:%d Failed to connect to moments server with streamToken:%u
 [%s] %s:%d AVCMoments: connect for streamToken:%u
 [%s] %s:%d AVCMomentsClient: Failed connection for streamToken=%u Error=%s
 [%s] %s:%d AVCMoments: capabilities is %d
 [%s] %s:%d AVCMoments: disconnect for streamToken:%u
 [%s] %s:%d AVCMoments: did start processing request from AVCMomentsManager %s
 [%s] %s:%d AVCMoments: did end processing request from AVCMomentsManager %s
 [%s] %s:%d AVCMoments: did finish request from AVCMomentsManager %s
 [%s] %s:%d Attempting to update capabilities with nil argument
 [%s] %s:%d received callback for serverDidDisconnect
 [%s] %s:%d %@(%p) received callback for serverDidDisconnect
 [%s] %s:%d AVCMoments current requests %@
 [%s] %s:%d Did not find still Image sandbox extension token to consume
 [%s] %s:%d Did not find movie sandbox extension token to consume
 [%s] %s:%d Failed to remove stillImage at URL %@: %@
 [%s] %s:%d Failed to remove movie at URL %@: %@
 [%s] %s:%d Notify client with new caps %d, currentActiveRequestsCount %d
 [%s] %s:%d mediaType=%ld, mode=%d, requesteeID=%@
 [%s] %s:%d Current active request count has reached max. Can't process anymore
 [%s] %s:%d Notify client reached max request capabilities %d
 [%s] %s:%d AVCMoments: avcMomentsRequestDidStartRequest %s
 [%s] %s:%d failed validation with error %s
 [%s] %s:%d AVCMoments: avcMomentsRequestDidEndRequest %s
 [%s] %s:%d failed validation
 [%s] %s:%d NO cell watcher support on this build
 [%s] %s:%d Failed to create H264/HEVC rules for Airplay screen!
 [%s] %s:%d Screen rules: Could not find a preferred video rule
 [%s] %s:%d Screen rules: no H264 support
 [%s] %s:%d Screen rules: Could not retrieve main screen width
 [%s] %s:%d Screen rules: Could not retrieve main screen height
 [%s] %s:%d Screen rules: Could not retrieve hardware encoder type
 [%s] %s:%d Device has no Airplay Screen rules
 [%s] %s:%d Failed to create video rule for Airplay screen !
AUIO [%s] %s:%d AUIO=%p finding next audio component with subtype=%u
AUIO [%s] %s:%d Found component=%p
AUIO [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/AUIO/AUIO.mm:%d: AudioComponentCopyName() returned error %d
AUIO [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/AUIO/AUIO.mm:%d: AudioComponentCopyName() gave a NULL name!
AUIO [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/AUIO/AUIO.mm:%d: CFStringGetCString() failed!
AUIO [%s] %s:%d Creating "%s" Component Instance
AUIO [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/AUIO/AUIO.mm:%d: AudioComponentInstanceNew failed(%X)
AUIO [%s] %s:%d AUIO=%p AudioComponentInstanceNew succeeded, unit=%p
AUIO [%s] %s:%d AUIO=%p Failed to find component
AUIO [%s] %s:%d AUIO=%p kAudioOutputUnitProperty_EnableIO kAudioUnitScope_Input succeeded
AUIO [%s] %s:%d AUIO=%p kAudioOutputUnitProperty_EnableIO kAudioUnitScope_Output succeeded
AUIO [%s] %s:%d AUIO=%p kAudioOutputUnitProperty_SetInputCallback kAudioUnitScope_Global succeeded
AUIO [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/AUIO/AUIO.mm:%d: AudioUnitSetProperty failed(%X)
AUIO [%s] %s:%d AUIO=%p kAudioUnitProperty_SetRenderCallback kAudioUnitScope_Global succeeded
AUIO [%s] %s:%d Successfully created the AUIO
AUIO [%s] %s:%d Destroying AUIO=%p
AUIO [%s] %s:%d Disposed AUIO=%p unit=%p
AUIO [%s] %s:%d AUIO Closed Handle.
AUIO [%s] %s:%d AUIO=%p Stopping the audio unit.
AUIO [%s] %s:%d AUIO Unit is not found during reinitialization
AUIO [%s] %s:%d AudioOutputUnitStop failed(%d)
AUIO [%s] %s:%d AUIO=%p unit=%p stopped
AUIO [%s] %s:%d AudioUnitUninitialize failed(%d)
AUIO [%s] %s:%d AUIO=%p unit=%p uninitialized
AUIO [%s] %s:%d AUIO=%p AUIO resume pAUIO->audioUnitIsStarted=%d
AUIO [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/AUIO/AUIO.mm:%d: Failed to restart the packet thread result=%x
AUIO [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/AUIO/AUIO.mm:%d: AudioOutputUnitStart returned %d
AUIO [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/AUIO/AUIO.mm:%d: AudioOutputUnitStart completed
AUIO [%s] %s:%d IO Proc health monitor called with invalid HANDLE
AUIO [%s] %s:%d @=@ Health: AudioIO (%p) micProcsCalled=%ld, ready=%d, micProcsReturned=%ld, packetsSent=%ld, voiceActivityCount=%ld, speakerProcsCalled=%ld, speakerProcsReturned=%ld, averageInputPower=%f, inputPowerMovingAverage=%f, averageOutputPower=%f, latestMicTimeStamp=%u, latestMicHostTime=%f, micShenanigans=%d, speakerShenanigans=%d, swapCount=%d packetsStored=%ld packetsDropped=[%ld, %ld, %ld, %ld] internalThreading=%d
AUIO [%s] %s:%d AUIO=%p AUIO Starting...
AUIO [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/AUIO/AUIO.mm:%d: AUIO=%p Failed to start the packet thread result=%x
AUIO [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/AUIO/AUIO.mm:%d: AUIO=%p ERROR AudioOutputUnitStart returned %d
AUIO [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/AUIO/AUIO.mm:%d: AUIO=%p AudioOutputUnitStart() completed
AUIO [%s] %s:%d AUIO=%p Stopped the audio unit.
AUIO [%s] %s:%d AUIO Stop!
AUIO [%s] %s:%d AudioUnitSetProperty failed to set property kAUVoiceIOProperty_MuteOutput to %u with error %08x %d
AUIO [%s] %s:%d Changed mute to %u
AUIO [%s] %s:%d AudioUnitSetProperty failed to set property kAUVoiceIOProperty_EnableMediaChat to %u with error %08x %d
AUIO [%s] %s:%d Changed kAUVoiceIOProperty_EnableMediaChat to %u
AUIO [%s] %s:%d Changed kAUVoiceIOProperty_MediaPlaybackOnExternalDevice to value=%u
AUIO [%s] %s:%d AudioUnitSetProperty failed to set property kAUVoiceIOProperty_MediaPlaybackOnExternalDevice to value=%u with error=%08x (fourcc=%s)
AUIO [%s] %s:%d AudioUnitSetProperty(kAUVoiceIOProperty_SpatialMetadata) failed(%d)
AUIO [%s] %s:%d AudioUnitSetParameter(kHALOutputParam_Volume) failed(%d)
AUIO [%s] %s:%d using kAudioUnitSubType_RemoteIO w/o AEC
AUIO [%s] %s:%d getting called with no inRefCon!
AUIO [%s] %s:%d Frame size changed and sample buffer size is not big enough
AUIO [%s] %s:%d AudioUnitComplexRender: error %d
AUIO [%s] %s:%d STACK OVERFLOW: Please file a radar. MetaData buffer is too small (%d). Required:%d
AUIO [%s] %s:%d AUIO=%p Modifying timestamp delta to timeStampDelta=%d because mic also jumped latestMicTimeStamp=%d to latestMicTimeStamp=%d, hostTime jumped latestMicHostTime=%f to inHostTime=%f
AUIO [%s] %s:%d Corrupted metadata!
AUIO [%s] %s:%d %s: Took a long time %fs
AUIO [%s] %s:%d AUIO=%p received first non-silence audio frame
AUIO [%s] %s:%d inSampleTime - pAUIO->numBufferedMicSamples = %d, inTimeStamp = %f, converted %lld, inSampleTime %u, HostTime %lld %f
AUIO [%s] %s:%d AUIO=%p sampleBuffer=%p buffer=%p bufferedMicSamples=%p
AUIO [%s] %s:%d AUIO=%p bufferedMicSamples=%p is too full, dropping older samples to fit this. maxSampleSize=%d maxByteSize=%u curSampleCount=%u appendSampleCount=%u appendBytes=%u sizeNeeded=%u
AUIO [%s] %s:%d speaker sample buffer is too small (%d). Expected=%d frames=%d bytesPerFrame=%d channels=%d! BufferCount=%d size=%d
AUIO [%s] %s:%d Setting timestamp delta to %d: speaker %d - mic %d
AUIO [%s] %s:%d [AUIO=%p] Observing hostTime Jump previousHostTime=%f currentHostTime=%f inNumberFrames=%d format->mSampleRate=%f allowedHostTimeJump=%f
AUIO [%s] %s:%d AUIO=%p setting up AudioInput but not using BasebandIO
AUIO [%s] %s:%d AudioUnitSetProperty(RequestMetadata) failed(%d)
AUIO [%s] %s:%d AUIO=%p kAUVoiceIOProperty_RequestMetadata kAudioUnitScope_Global succeeded
AUIO [%s] %s:%d AudioUnitSetProperty failed to set property kAUVoiceIOProperty_OperationMode %d %d %.4s
AUIO [%s] %s:%d AUIO=%p kAUVoiceIOProperty_OperationMode kAudioUnitScope_Global succeeded
AUIO [%s] %s:%d AudioUnitSetProperty failed to set property kAUVoiceIOProperty_EnableSpatialChat %d %d %.4s
AUIO [%s] %s:%d AUIO=%p kAUVoiceIOProperty_EnableSpatialChat kAudioUnitScope_Global succeeded
AUIO [%s] %s:%d AudioUnitSetProperty failed to set property kAUVoiceIOProperty_MuteOutput with error %08x %d
AUIO [%s] %s:%d AUIO=%p kAUVoiceIOProperty_MuteOutput kAudioUnitScope_Global succeeded
AUIO [%s] %s:%d AUIO=%p setting up AudioInput and using BasebandIO
AUIO [%s] %s:%d AudioUnitSetProperty failed to set property kAudioOutputUnitProperty_IOBufferDuration with error %08x %d
AUIO [%s] %s:%d AUIO=%p kAudioOutputUnitProperty_IOBufferDuration kAudioUnitScope_Global succeeded
AUIO [%s] %s:%d AudioUnitSetProperty failed to set property kAUVoiceIOProperty_EnableRecording with error %08x %d
AUIO [%s] %s:%d allowAudioRecording and kAUVoiceIOProperty_EnableRecording set to YES
AUIO [%s] %s:%d AUIO=%p Trying to setup AUIO
AUIO [%s] %s:%d AudioUnitInitialize failed. err=%d (%s) attempt %d
AUIO [%s] %s:%d AudioUnitInitialize failed. err=%d (%s)
AUIO [%s] %s:%d AudioUnitInitialize succeeded
AUIO [%s] %s:%d AUIO=%p VoiceIO Remote OS Version = %s
AUIO [%s] %s:%d AUIO=%p VoiceIO Remote HW Model = %s
AUIO [%s] %s:%d AUIO=%p VoiceIO Remote AU Version = %u
AUIO [%s] %s:%d AudioUnitSetProperty failed to set property FarEndVersionInfo with error %08x %d
AUIO [%s] %s:%d AUIO=%p kAUVoiceIOProperty_FarEndVersionInfo kAudioUnitScope_Global succeeded
AUIO [%s] %s:%d succeeded AUIO=%p
AUIO [%s] %s:%d AUIO=%p Setting up mic reinitialize=%d
AUIO [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/AUIO/AUIO.mm:%d: AUIO=%p AudioUnitGetProperty(MicOut) failed(%d)
AUIO [%s] %s:%d AUIO=%p kAudioUnitProperty_StreamFormat kAudioUnitScope_Output get succeeded
AUIO [%s] %s:%d AUIO=%p AudioUnitSetProperty(MicOut) Failed to allcoate the mic audio buffer list
AUIO [%s] %s:%d AUIO=%p AudioUnitSetProperty(MicOut) StreamFormat failed(%d)
AUIO [%s] %s:%d AUIO=%p kAudioUnitProperty_StreamFormat kAudioUnitScope_Output set succeeded
AUIO [%s] %s:%d AUIO=%p Reallocated the buffered mic sample buffer. prevMaxSampleSize=%d maxSampleSize=%d prevMaxByteSize=%u maxByteSize=%u prevBufferedMicSamples=%p bufferedMicSamples=%p sampleCount=%d
AUIO [%s] %s:%d AUIO=%p Failed to allocate the mic sample buffer
AUIO [%s] %s:%d AUIO=%p Setting up speaker reinitialize=%d
AUIO [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/AUIO/AUIO.mm:%d: AudioUnitGetProperty(SpkrIn) failed(%d)
AUIO [%s] %s:%d AUIO=%p kAudioUnitProperty_StreamFormat kAudioUnitScope_Input get succeeded
AUIO [%s] %s:%d AUIO=%p AudioUnitSetProperty(MicOut) Failed to allcoate the speaker audio buffer list
AUIO [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/AUIO/AUIO.mm:%d: AudioUnitSetProperty(SpkrIn) failed(%d)
AUIO [%s] %s:%d AUIO=%p kAudioUnitProperty_StreamFormat kAudioUnitScope_Input set succeeded
AUIO [%s] %s:%d AudioUnitGetProperty(MaximumMetadataByteSize) failed(%d)
AUIO [%s] %s:%d AUIO=%p kAUVoiceIOProperty_MaximumMetadataByteSize kAudioUnitScope_Output get succeeded
AUIO [%s] %s:%d Packet thread is already running. auio=%p
AUIO [%s] %s:%d Failed to create the packet thread. auio=%p
AUIO [%s] %s:%d kAUVoiceIOProperty_PrimaryCodecType failed(%d) codecType(%d)
AUIO [%s] %s:%d kAUVoiceIOProperty_PrimaryCodecType succeeded codecType(%d)
AUIO [%s] %s:%d kAUVoiceIOProperty_PrimaryCodecSampleRate failed(%d) sampleRate(%d)
AUIO [%s] %s:%d kAUVoiceIOProperty_PrimaryCodecSampleRate succeded: sampleRate(%d)
 [%s] %s:%d Screen sharing rules: Failed to create H264 rules
 [%s] %s:%d Screen sharing rules: Failed to create Mac Decoding only rules
 [%s] %s:%d Screen sharing rules: no H264 support
 [%s] %s:%d Screen sharing rules: Could not retrieve main screen width
 [%s] %s:%d Screen sharing rules: Could not retrieve main screen height
 [%s] %s:%d Screen sharing rules: Could not retrieve hardware encoder type
 [%s] %s:%d Device has no screen sharing rules
 [%s] %s:%d Screen sharing rules: No suitable rules for this device
 [%s] %s:%d Invalid sink provided
 [%s] %s:%d %@(%p) Invalid sink provided
 [%s] %s:%d Failed to allocate the list entry for sink=%p
 [%s] %s:%d %@(%p) Failed to allocate the list entry for sink=%p
 [%s] %s:%d VCVideoSink %p was in the array, return directly
 [%s] %s:%d %@(%p) VCVideoSink %p was in the array, return directly
 [%s] %s:%d Add VCVideoSink %p, new array count = %lu
 [%s] %s:%d %@(%p) Add VCVideoSink %p, new array count = %lu
 [%s] %s:%d Remove VCVideoSink %p, new array count = %lu
 [%s] %s:%d %@(%p) Remove VCVideoSink %p, new array count = %lu
 [%s] %s:%d VCVideoSink %p was not in the array, nothing to remove
 [%s] %s:%d %@(%p) VCVideoSink %p was not in the array, nothing to remove
 [%s] %s:%d Discarding link with unknown RAT local %d remote %d
 [%s] %s:%d HandoverReport: new link established with link context %s
 [%s] %s:%d HandoverReport: link %s disconnected
 [%s] %s:%d Probing response received is invalid
 [%s] %s:%d try to setWiFiAssist = %d
 [%s] %s:%d _isWiFiAssistActive = %d
 [%s] %s:%d HandoverReport: set default link %d on datagram channel %d
 [%s] %s:%d Force wifi assist active always on cellular channel, _datagramChannel %p
 [%s] %s:%d setWiFiAssist = %d, _datagramChannel %p
 [%s] %s:%d Primary connection changed to an end-to-end connection in GFT
 [%s] %s:%d got a nil connection, return
 [%s] %s:%d HandoverReport: discard link %d on datagram channel %d
 [%s] %s:%d _datagramChannel. isDuplicationEnabled = %d, activeConnection: isLocalOnCellular = %d, isRemoteOnCellular = %d
 [%s] %s:%d Active connection is end-to-end when updating duplication state
 [%s] %s:%d HandoverReport: oneToOneMode %s for isInitiator: %d
 [%s] %s:%d HandoverReport: Start active probing on datagram channel %d on connections with link IDs: %@ with interval: %@ and timeout: %@
 [%s] %s:%d HandoverReport: Stop active probing on datagram channel %d on connections with link IDs: %@
 [%s] %s:%d HandoverReport: Query probing results on datagram channel %d on connections with link IDs: %@
 [%s] %s:%d HandoverReport: Flush link probing results on datagram channel %d on connections with link IDs: %@
 [%s] %s:%d Setting the remote device version=%d
 [%s] %s:%d synchronizer = %p, request = %p
 [%s] %s:%d Rate Monitor: head index %d, tail index %d, dataSample1 %f, dataSample2 %f, tierTolerance %f, isAbnormalData %d, _abnormalCounter %d, isExceedingThreshold %d
 [%s] %s:%d transferSession or Bufferpool is not NULL
 [%s] %s:%d audioQueue is NULL
 [%s] %s:%d CMBufferQueueContainsEndOfData(audioQueue) returned true
 [%s] %s:%d appending audio error is %d
 [%s] %s:%d finishWritingWithHandler was executed, return NO
 [%s] %s:%d %@(%p) finishWritingWithHandler was executed, return NO
 [%s] %s:%d PresentationTime=%f, startTime=%f
 [%s] %s:%d %@(%p) PresentationTime=%f, startTime=%f
 [%s] %s:%d _stillImageTime=%f
 [%s] %s:%d _assetWriter.status=%ld
 [%s] %s:%d %@(%p) _assetWriter.status=%ld
 [%s] %s:%d Invalid assetWriter status=%ld, error=%@
 [%s] %s:%d %@(%p) Invalid assetWriter status=%ld, error=%@
 [%s] %s:%d width=%d, height=%d, transactionID=%@
 [%s] %s:%d Cannot set up asset writer with zero dimensions
 [%s] %s:%d _assetWriter init failed
 [%s] %s:%d AVAssetWriterInputMetadataAdaptor initWithAssetWriterInput: failed, transactionID=%@
 [%s] %s:%d assetWriter startWriting failed, transactionID=%@, status=%ld, error=%@
 [%s] %s:%d VCMovieWriter, finished writing
 [%s] %s:%d VCMovieWriter, append success(%d) error(%@) for sampleTime(%f)
 [%s] %s:%d current time older than last frame
 [%s] %s:%d chapterStart=%f being changed to _startTime=%f
 [%s] %s:%d Writing metadata for VCMovieWriter %@ with URL %@
 [%s] %s:%d appendTimeMetadataGroup failed %s
 [%s] %s:%d VCMovieWriter, started writing at %f
 [%s] %s:%d Invalid header extension profile 0x%x (should be 0x%x)
 [%s] %s:%d CVO extension ID not found %d
 [%s] %s:%d Failed to set the WRM info. Error=%d
 [%s] %s:%d %@(%p) Failed to set the WRM info. Error=%d
 [%s] %s:%d Invalid config
 [%s] %s:%d could not allocate audio queue recorder
 [%s] %s:%d System Audio Capture Format is Non-Interleaved, updating AudioQueue Format
 [%s] %s:%d could not allocate audio buffer list
 [%s] %s:%d null sinkProc
 [%s] %s:%d NULL captureContext
 [%s] %s:%d %p
 [%s] %s:%d start called but already started
 [%s] %s:%d allocate tapDesc error
 [%s] %s:%d allocate tap error
 [%s] %s:%d allocate buffer error
 [%s] %s:%d AudioQueueStart kAudioQueueErr_CannotStartYet, may need to add a retry here
 [%s] %s:%d start error: %i
 [%s] %s:%d Successfully started
 [%s] %s:%d stop called but not never start
 [%s] %s:%d Audio queue stopped
 [%s] %s:%d stop error: %i
 [%s] %s:%d Failed to create audio tap
 [%s] %s:%d Failed to create audio tap for sessionType=%d
 [%s] %s:%d Failed to create audio tap for captureContext=%@
 [%s] %s:%d allocate audioFormat error
 [%s] %s:%d input sample count = %d
 [%s] %s:%d input timestamp %d
 [%s] %s:%d input hostTime %f
 [%s] %s:%d input audio bytes %d
 [%s] %s:%d nil context
 [%s] %s:%d inputSamples=%d for host time jump from time=%f to time=%f seconds
 [%s] %s:%d discarding inputSamples=%d between time=%f and time=%f seconds
 [%s] %s:%d Could not enqueue audio buffer
 [%s] %s:%d Audio Queue config: %.1f mSampleRate
 [%s] %s:%d Audio Queue config: %d mFormatID
 [%s] %s:%d Audio Queue config: 0x%x mFormatFlags
 [%s] %s:%d Audio Queue config: %d mBytesPerPacket
 [%s] %s:%d Audio Queue config: %d mFramesPerPacket
 [%s] %s:%d Audio Queue config: %d mBytesPerFrame
 [%s] %s:%d Audio Queue config: %d mChannelsPerFrame
 [%s] %s:%d Audio Queue config: %d mBitsPerChannel
 [%s] %s:%d Audio Queue config: 0x%x mReserved
 [%s] %s:%d Audio Queue config: %.1f sample rate
 [%s] %s:%d append timestamp %d
 [%s] %s:%d output timestamp %d
 [%s] %s:%d append sample count %d
 [%s] %s:%d can not copy %d audio samples
 [%s] %s:%d context is NULL
 [%s] %s:%d AudioQueue listener property %d not added
 [%s] %s:%d error reading AudioQueue property %d
 [%s] %s:%d isRunningListenerCallback with isRunning %d
 [%s] %s:%d running %d
 [%s] %s:%d AudioQueue error removing listener %d
 [%s] %s:%d allocate error: %i
 [%s] %s:%d enqueue error: %i
 [%s] %s:%d AudioQueueFreeBuffer error: %i
 [%s] %s:%d Configuration is nil!
 [%s] %s:%d SoundDec_Create failed!
 [%s] %s:%d %s: SoundDec_Encode failed (%x). reset=%d inSamples=%d outBytes=%d %s
 [%s] %s:%d Payload=%d on codec mode change event does not match configuration with payload=%d
VCVideoStream [%s] %s:%d Configured for Screen Sharing (isOneToOne=%s)
VCVideoStream [%s] %s:%d %@(%p) Configured for Screen Sharing (isOneToOne=%s)
VCVideoStream [%s] %s:%d Enabling FECGenerator for FECFeedbackVersion %d
VCVideoStream [%s] %s:%d VCVideoStream[%p]
VCVideoStream [%s] %s:%d videoTransmitter=%p
VCVideoStream [%s] %s:%d %@(%p) videoTransmitter=%p
VCVideoStream [%s] %s:%d NetworkFeedbackController is nil in VideoStream
VCVideoStream [%s] %s:%d Unexpected size for plrBuckets(size=%lu) or factorBuckets(size=%lu) storebag
VCVideoStream [%s] %s:%d Loaded storebag values for VCNackGenerator: nackGeneratorStorebagConfigVersion=%u nackSeqNumAgingDuration=%f isExtraDelayForPacketRetransmissionsEnabled=%d nackThrottlingBitRateLimitingMaxRatio=%f nackThrottlingPlrBuckets[%@] nackThrottlingFactorBuckets[%@]
VCVideoStream [%s] %s:%d Skipping video receiver for target stream[%@]
VCVideoStream [%s] %s:%d videoReceiver=%p
VCVideoStream [%s] %s:%d %@(%p) videoReceiver=%p
VCVideoStream [%s] %s:%d %s %s
VCVideoStream [%s] %s:%d sendingStreamID=%@
VCVideoStream [%s] %s:%d %@(%p) sendingStreamID=%@
VCVideoStream [%s] %s:%d ITU_R_2020 color settings will be used to configure capture and encoder
VCVideoStream [%s] %s:%d %@(%p) ITU_R_2020 color settings will be used to configure capture and encoder
VCVideoStream [%s] %s:%d P3D65 color settings will be used to configure capture and encoder
VCVideoStream [%s] %s:%d %@(%p) P3D65 color settings will be used to configure capture and encoder
VCVideoStream [%s] %s:%d Memory allocation for HDR color settings failed
VCVideoStream [%s] %s:%d %@(%p) Memory allocation for HDR color settings failed
VCVideoStream [%s] %s:%d VCVideoStream[%p] remoteVideo release queue for streamToken=%u
VCVideoStream [%s] %s:%d error[%s]
VCVideoStream [%s] %s:%d %@(%p) error[%s]
VCVideoStream [%s] %s:%d VCVideoStream[%p] %s
VCVideoStream [%s] %s:%d VCVideoStream[%p] error[%s]
VCVideoStream [%s] %s:%d VideoStallTimeTotal=%.2f
VCVideoStream [%s] %s:%d Statistics collector is nil
VCVideoStream [%s] %s:%d 
VCVideoStream [%s] %s:%d %@(%p) 
VCVideoStream [%s] %s:%d This should not be called for IP camera or display
VCVideoStream [%s] %s:%d %@(%p) This should not be called for IP camera or display
VCVideoStream [%s] %s:%d remote media stall  %f currentTime %f
VCVideoStream [%s] %s:%d Returning, No need to request a key frame generation with periodic IDR
VCVideoStream [%s] %s:%d %@(%p) Returning, No need to request a key frame generation with periodic IDR
VCVideoStream [%s] %s:%d Refresh frame requested when LTRP is disabled, requesting an IDR
VCVideoStream [%s] %s:%d %@(%p) Refresh frame requested when LTRP is disabled, requesting an IDR
VCVideoStream [%s] %s:%d Sending stream ID is %@, compound stream ID is %@
VCVideoStream [%s] %s:%d %@(%p) Sending stream ID is %@, compound stream ID is %@
VCVideoStream [%s] %s:%d not implemented
VCVideoStream [%s] %s:%d Reconfiguring VCVideoStream with a different number of transports.
VCVideoStream [%s] %s:%d %@(%p) Reconfiguring VCVideoStream with a different number of transports.
VCVideoStream [%s] %s:%d TargetStreamID didn't change %@
VCVideoStream [%s] %s:%d %@(%p) TargetStreamID didn't change %@
VCVideoStream [%s] %s:%d Setting target stream id: %@
VCVideoStream [%s] %s:%d %@(%p) Setting target stream id: %@
VCVideoStream [%s] %s:%d Setting shouldEnableFaceZoom in receiver to %d
VCVideoStream [%s] %s:%d %@(%p) Setting shouldEnableFaceZoom in receiver to %d
VCVideoStream [%s] %s:%d Setting shouldEnableMLEnhance in receiver to %d
VCVideoStream [%s] %s:%d %@(%p) Setting shouldEnableMLEnhance in receiver to %d
VCVideoStream [%s] %s:%d From VCVideoStream[%p], _videoReceiver[%p], RTPTimestamp[%u]
VCVideoStream [%s] %s:%d VCVideoStream[%p]: encodingMode=%d
VCVideoStream [%s] %s:%d Could not allocate memory for creating VCMediaStreamRateControlConfig object
VCVideoStream [%s] %s:%d Updating maxFramerate from %u to  %lu
VCVideoStream [%s] %s:%d %@(%p) Updating maxFramerate from %u to  %lu
VCVideoStream [%s] %s:%d Configuring OneToOne videoStream's transport with NetworkSampleRate=kRtpNetworkSampleRateHalf. streamID=%d, streamGroupID=%s, rtpHandle=%p, direction=%ld
VCVideoStream [%s] %s:%d %@(%p) Configuring OneToOne videoStream's transport with NetworkSampleRate=kRtpNetworkSampleRateHalf. streamID=%d, streamGroupID=%s, rtpHandle=%p, direction=%ld
VCVideoStream [%s] %s:%d Error setting socket receive buffer size to %d
VCVideoStream [%s] %s:%d Set socket receive buffer size to %d
VCVideoStream [%s] %s:%d Failed to create transport
VCVideoStream [%s] %s:%d %@(%p) Failed to create transport
VCVideoStream [%s] %s:%d Failed to update stream config for VCVideoStreamType=%d
VCVideoStream [%s] %s:%d %@(%p) Failed to update stream config for VCVideoStreamType=%d
VCVideoStream [%s] %s:%d Failed to configure transport
VCVideoStream [%s] %s:%d %@(%p) Failed to configure transport
VCVideoStream [%s] %s:%d capture = %dx%d, encode = %dx%d
VCVideoStream [%s] %s:%d %@(%p) capture = %dx%d, encode = %dx%d
VCVideoStream [%s] %s:%d RTCReporting: can't configure the reporting agent.
VCVideoStream [%s] %s:%d %@(%p) RTCReporting: can't configure the reporting agent.
VCVideoStream [%s] %s:%d Cannot determine MTU. Returning minMTU %d as a fallback
VCVideoStream [%s] %s:%d Cannot determine isIPv6. Returning YES as a fallback
VCVideoStream [%s] %s:%d Failed to create video redundancy controller
VCVideoStream [%s] %s:%d Set up and using internal redundancy controller=%@
VCVideoStream [%s] %s:%d Start VCRC in VideoStream with type:%d and maxBitrate:%d, minBitrate:%d, initialBitrate:%d
VCVideoStream [%s] %s:%d %@(%p) Start VCRC in VideoStream with type:%d and maxBitrate:%d, minBitrate:%d, initialBitrate:%d
VCVideoStream [%s] %s:%d VCVideoStream[%p]: Starting synchronization using syncSource=%p
VCVideoStream [%s] %s:%d VCVideoStream[%p]: Stopping synchronization using syncSource=%p
VCVideoStream [%s] %s:%d Max temporal bitrate=%d
VCVideoStream [%s] %s:%d %@(%p) Max temporal bitrate=%d
VCVideoStream [%s] %s:%d Replacing temporal streamID=%d->%d
VCVideoStream [%s] %s:%d %@(%p) Replacing temporal streamID=%d->%d
VCVideoStream [%s] %s:%d Bitrate array size (%lu) does not match transport array size (%lu)
VCVideoStream [%s] %s:%d %@(%p) Bitrate array size (%lu) does not match transport array size (%lu)
VCVideoStream [%s] %s:%d Setting temporal stream bitrate array to %@
VCVideoStream [%s] %s:%d %@(%p) Setting temporal stream bitrate array to %@
VCVideoStream [%s] %s:%d VTP send failed with no data!
VCVideoStream [%s] %s:%d No callID provided for stream!
VCVideoStream [%s] %s:%d %@(%p) No callID provided for stream!
VCVideoStream [%s] %s:%d VCVideoStream[%p] received first remote frame
VCVideoStream [%s] %s:%d Requesting streamID:%hu to generate a key frame for FIRType:%d
VCVideoStream [%s] %s:%d %@(%p) Requesting streamID:%hu to generate a key frame for FIRType:%d
VCVideoStream [%s] %s:%d VCVideoStream[%p] requesting Key frame for unknown RTCP FB:%d
VCVideoStream [%s] %s:%d VCVideoStream[%p] Requesting to generate key frame. RTT:%.3f timeDelta:%.3f timeToNextKeyFrame:%.3f
VCVideoStream [%s] %s:%d VCVideoStream[%p] Ignoring request to generate key frame. RTT:%.3f timeDelta:%.3f timeToNextKeyFrame:%.3f
VCVideoStream [%s] %s:%d VCVideoStream[%p] Unable to request key frame
VCVideoStream [%s] %s:%d received an error %s
VCVideoStream [%s] %s:%d %@(%p) received an error %s
VCVideoStream [%s] %s:%d received a capture error %s
VCVideoStream [%s] %s:%d %@(%p) received a capture error %s
VCVideoStream [%s] %s:%d thermalLevelDidChange %u
VCVideoStream [%s] %s:%d %@(%p) thermalLevelDidChange %u
VCVideoStream [%s] %s:%d Handling of camera availability did change not implemented yet
VCVideoStream [%s] %s:%d Can't enqueue, VideoStream is not running yet
VCVideoStream [%s] %s:%d %@(%p) Can't enqueue, VideoStream is not running yet
VCVideoStream [%s] %s:%d VCRC rate controller[%p] gives targetBitrate: %d, rateChangeCounter: %d
VCVideoStream [%s] %s:%d %@(%p) VCRC rate controller[%p] gives targetBitrate: %d, rateChangeCounter: %d
VCVideoStream [%s] %s:%d VCVideoStream received redundancyController update redundancyControler=%@ redundancyArrayCount=%u
VCVideoStream [%s] %s:%d %@(%p) VCVideoStream received redundancyController update redundancyControler=%@ redundancyArrayCount=%u
VCVideoStream [%s] %s:%d Callback executed with context being nil
VCVideoStream [%s] %s:%d VTP callback error: unknown notificaiton %d.
 [%s] %s:%d Configuration is nil
 [%s] %s:%d Delegate is nil
 [%s] %s:%d %@(%p) Delegate is nil
 [%s] %s:%d Delegate queue is nil
 [%s] %s:%d %@(%p) Delegate queue is nil
 [%s] %s:%d Failed to create the state queue for streamToken=%u
 [%s] %s:%d %@(%p) Failed to create the state queue for streamToken=%u
 [%s] %s:%d Create Stream Group with TargetEstimatorSynchronizer=%p syncGroupID=%s
 [%s] %s:%d %@(%p) Create Stream Group with TargetEstimatorSynchronizer=%p syncGroupID=%s
 [%s] %s:%d Failed to setup the streams for streamToken=%u
 [%s] %s:%d %@(%p) Failed to setup the streams for streamToken=%u
 [%s] %s:%d Error configuring media stream [%@]
 [%s] %s:%d %@(%p) Error configuring media stream [%@]
 [%s] %s:%d block is nil
 [%s] %s:%d %@(%p) block is nil
 [%s] %s:%d delegate could not be loaded
 [%s] %s:%d %@(%p) delegate could not be loaded
 [%s] %s:%d First media key index must not be nil
 [%s] %s:%d Could not find mediaKeyIndex=%@. PerfTimer will not be set for participant joined to first MKI
 [%s] %s:%d Starting stream group that isn't stopped
 [%s] %s:%d %@(%p) Starting stream group that isn't stopped
 [%s] %s:%d Starting group. groupEntries=%@
 [%s] %s:%d %@(%p) Starting group. groupEntries=%@
 [%s] %s:%d Stopping stream group that is already stopped
 [%s] %s:%d %@(%p) Stopping stream group that is already stopped
 [%s] %s:%d Stopping group. groupEntries=%@
 [%s] %s:%d %@(%p) Stopping group. groupEntries=%@
 [%s] %s:%d Pausing stream group that isn't running=%@
 [%s] %s:%d %@(%p) Pausing stream group that isn't running=%@
 [%s] %s:%d Pausing group. groupEntries=%@
 [%s] %s:%d %@(%p) Pausing group. groupEntries=%@
 [%s] %s:%d Resuming stream group that isn't paused=%@
 [%s] %s:%d %@(%p) Resuming stream group that isn't paused=%@
 [%s] %s:%d Resuming group. groupEntries=%@
 [%s] %s:%d %@(%p) Resuming group. groupEntries=%@
@:@ StreamGroup-Start
 [%s] %s:%d @:@ StreamGroup-Start (%p) %@ streamToken=%u
@:@ StreamGroup-Stop
 [%s] %s:%d @:@ StreamGroup-Stop (%p) %@ streamToken=%u
@:@ StreamGroup-Pause
 [%s] %s:%d @:@ StreamGroup-Pause (%p) %@ streamToken=%u
@:@ StreamGroup-Resume
 [%s] %s:%d @:@ StreamGroup-Resume (%p) %@ streamToken=%u
 [%s] %s:%d RTP sequence number gap detected for stream=%p
 [%s] %s:%d allocated new VideoConference object %p, with transportType %d
 [%s] %s:%d released old VideoConference object %p
 [%s] %s:%d initializeNewCallWithDeviceRole:%d (server side) callID=%d
 [%s] %s:%d >>>>> ERROR: Incoming arguments are nil (in VideoConferenceManagerCategories) <<<<<
 [%s] %s:%d >>>>> ERROR: Call ID is nil (in VideoConferenceManagerCategories) <<<<<
 [%s] %s:%d >>>>> ERROR: VideoConference context is nil (in VideoConferenceManagerCategories) <<<<<
 [%s] %s:%d >>>>> Relaying outgoing ARPL data from AVConference via XPC to VideoConference with callID=%d (in VideoConferenceManagerCategories) <<<<<
 [%s] %s:%d >>>>> [incomingArgs objectForKey:CLIENT_DIED_KEY] != nil (in VideoConferenceManagerCategories) <<<<<
 [%s] %s:%d Failed to check bit rate limits for NACK
 [%s] %s:%d Failed to compute summer bitrate for retransmitted media bytes
 [%s] %s:%d Failed to compute summer bitrate for media frames bytes
 [%s] %s:%d Packet Information does not match ssrc=%u ssrc=0x%x and seqNum=%u seqNum=0x%x arrivalTime=%f timeOfRequest=%f timeOfFirstRequest=%f diff=%f isSameSeqNum=%d seqNumRequested=%u
 [%s] %s:%d VCNACKGenerator[%p] Failed to add media packet length to media bit rate summer, err=%d
 [%s] %s:%d VCNACKGenerator[%p] Failed to add media packet length to retransmitted media bit rate summer, err=%d
 [%s] %s:%d Use cached canSendNACK, timeSinceLastCheck=%f
 [%s] %s:%d Failed to get bit rate
 [%s] %s:%d VCNACKGenerator[%p] Failed to get media packet count, err=%d
 [%s] %s:%d VCNACKGenerator[%p] Based on bitrate limits, canSendNack changed from mostRecentCanSendNackStatus=%d to canSendNack=%d, mediaBitrate=%3.3f, retransmittedBitrate=%3.3f, overhead=%3.3f nackGenerator->nackBudget=%d
 [%s] %s:%d Sending NACK for ssrc=%u ssrc=0x%x and lowestSeqNum=%u lowestSeqNum=0x%x, requestBitMask=0x%0000x rtt=%2.3fs plr=%1.3f%%
 [%s] %s:%d Not sending NACK because [nackGenerated=%d throttleNackGeneration=%d missingPacketIsTooOld=%d] ssrc=%u ssrc=0x%x and seqNum=%u seqNum=0x%x arrivalTime=%f timeOfRequest=%f diff=%f timeOfFirstRequest=%f diff=%f rtt=%2.3fs plr=%3.2f%% nackGenerationThrottlingFactor=%f isSameSeqNum=%d seqNumRequested=%u seqNumHash=%d
 [%s] %s:%d nackGenerationThrottlingFactor changed from old=%f => new=[%f] at PLR=%f
 [%s] %s:%d VCSessionMessaging dealloc
 [%s] %s:%d VCSessionMessaging: sendMessage:%@, %@, %@
 [%s] %s:%d VCSessionMessaging: sendMessage:%@ for participantID:%llu, %@, %@
 [%s] %s:%d VCSessionMessaging: sendMessageDictionary=%@ for participantID=%llu, topicKey=%@, topic=%@
 [%s] %s:%d VCSessionMessaging: sendMessage=%@ for participantID=%llu, topicKey=%@, topic=%@
 [%s] %s:%d newPackedMessageFromDictionaryV2 tuples must not be nil
 [%s] %s:%d newPackedMessageFromDictionaryV2 can't save as binary dictionary=%@
 [%s] %s:%d newPackedMessageFromDictionaryV2 failed to create binary plist for dictionary=%@ with error=%@
 [%s] %s:%d newDictionaryFromUnpackedMessageV2 message must not be nil
 [%s] %s:%d newDictionaryFromUnpackedMessageV2 failed to create property list from message=%@ with error=%@
 [%s] %s:%d newDictionaryFromUnpackedMessageV2 unexpected format=%lu received from message=%@
 [%s] %s:%d VCControlChannelDelegate receivedMessage callback with message '%@%@'
 [%s] %s:%d Is topic '%@' assisiated with incoming message '%@%@' block...
 [%s] %s:%d Topic and payload can not be both nil
 [%s] %s:%d VCControlChannelDelegate sendReliableMessage callback...
 [%s] %s:%d VCControlChannelDelegate clearParticipantTransactionCacheForParticipant callback...
 [%s] %s:%d Parameter 'storage'  must not be NULL
 [%s] %s:%d Parameter 'size' must not be NULL
 [%s] %s:%d getaddrinfo failed with error '%d'
 [%s] %s:%d getaddrinfo failed to return valid data
 [%s] %s:%d streamToken=%ld, delegate=%@, queue=%@, error=%@
 [%s] %s:%d AVCVideoDataOutput: serverd died, notifying client
 [%s] %s:%d AVCVideoDataOutput callback: didPause=%d for streamToken=%u
 [%s] %s:%d AVCVideoDataOutput callback: mediaDidStall=%d for streamToken=%u
 [%s] %s:%d AVCVideoDataOutput callback: videoDidDegrade=%d for streamToken=%u
 [%s] %s:%d Aspect ratio string: %@
 [%s] %s:%d Invalid parameter(s): featureListStrings=%s, prefix=%s
 [%s] %s:%d featureListStrings is empty
 [%s] %s:%d Failed to retrieve fist payload from featureListStrings
 [%s] %s:%d Invalid parameter(s): featureListStrings=%p, featureListString=%s
 [%s] %s:%d Selected %s
 [%s] %s:%d Failed to create the media queue. error=%x
 [%s] %s:%d %@(%p) Failed to create the media queue. error=%x
 [%s] %s:%d Failed to create rate controller. error=%x
 [%s] %s:%d %@(%p) Failed to create rate controller. error=%x
 [%s] %s:%d Using VCMediaQueue2.0
 [%s] %s:%d %@(%p) Using VCMediaQueue2.0
 [%s] %s:%d Unable to negotiate oneToOne data with participant=%p
 [%s] %s:%d %@(%p) Unable to negotiate oneToOne data with participant=%p
 [%s] %s:%d OneToOne config was nil
 [%s] %s:%d %@(%p) OneToOne config was nil
 [%s] %s:%d 1:1 rate controller already configured
 [%s] %s:%d %@(%p) 1:1 rate controller already configured
 [%s] %s:%d 1:1 media controller already configured
 [%s] %s:%d %@(%p) 1:1 media controller already configured
 [%s] %s:%d Media queue was not setup for 1:1
 [%s] %s:%d %@(%p) Media queue was not setup for 1:1
 [%s] %s:%d Failed to allocate 1:1 rate controller
 [%s] %s:%d %@(%p) Failed to allocate 1:1 rate controller
 [%s] %s:%d Failed to allocate 1:1 media controller
 [%s] %s:%d %@(%p) Failed to allocate 1:1 media controller
 [%s] %s:%d Failed to get pre-warming client's operating mode from VCAudioManager! Defaulting to operatingMode=%d (due to isUsingVideo=%d)
 [%s] %s:%d %@(%p) Failed to get pre-warming client's operating mode from VCAudioManager! Defaulting to operatingMode=%d (due to isUsingVideo=%d)
 [%s] %s:%d Failed to allocate local 1:1 config!
 [%s] %s:%d %@(%p) Failed to allocate local 1:1 config!
 [%s] %s:%d Failed to configure local participant for 1:1!
 [%s] %s:%d %@(%p) Failed to configure local participant for 1:1!
 [%s] %s:%d Failed to allocate 1:1 audio media control info generator
 [%s] %s:%d %@(%p) Failed to allocate 1:1 audio media control info generator
 [%s] %s:%d Failed to allocate 1:1 video media control info generator
 [%s] %s:%d %@(%p) Failed to allocate 1:1 video media control info generator
 [%s] %s:%d Failed to allocate one to one participant configuration
 [%s] %s:%d %@(%p) Failed to allocate one to one participant configuration
 [%s] %s:%d Failed to setup the OneToOne MCIG
 [%s] %s:%d %@(%p) Failed to setup the OneToOne MCIG
 [%s] %s:%d Failed to configure remote participant for 1:1!
 [%s] %s:%d %@(%p) Failed to configure remote participant for 1:1!
 [%s] %s:%d SwitchTime=%f switchingToOneToOne=%d
 [%s] %s:%d %@(%p) SwitchTime=%f switchingToOneToOne=%d
 [%s] %s:%d Already switched to GFT, ignoring.
 [%s] %s:%d %@(%p) Already switched to GFT, ignoring.
 [%s] %s:%d Failed to negotiate with devices that do not support one to one mode
 [%s] %s:%d %@(%p) Failed to negotiate with devices that do not support one to one mode
 [%s] %s:%d Failed to reconfigure local participant failed to switch
 [%s] %s:%d %@(%p) Failed to reconfigure local participant failed to switch
 [%s] %s:%d Already switched to OneToOne, ignoring.
 [%s] %s:%d %@(%p) Already switched to OneToOne, ignoring.
 [%s] %s:%d Failed to reconfigure session for switch to OneToOne
 [%s] %s:%d %@(%p) Failed to reconfigure session for switch to OneToOne
 [%s] %s:%d RTCReporting: Switching to one-to-one mode reporting
 [%s] %s:%d %@(%p) RTCReporting: Switching to one-to-one mode reporting
 [%s] %s:%d RTCReporting: Switching to one-to-many mode reporting
 [%s] %s:%d %@(%p) RTCReporting: Switching to one-to-many mode reporting
 [%s] %s:%d Failed to negotiate one to one settings!
 [%s] %s:%d %@(%p) Failed to negotiate one to one settings!
 [%s] %s:%d Negotiated 1:1 camera rules: %@
 [%s] %s:%d %@(%p) Negotiated 1:1 camera rules: %@
 [%s] %s:%d Negotiated 1:1 camera not supported
 [%s] %s:%d %@(%p) Negotiated 1:1 camera not supported
 [%s] %s:%d Negotiated 1:1 screen rules: %@
 [%s] %s:%d %@(%p) Negotiated 1:1 screen rules: %@
 [%s] %s:%d Negotiated 1:1 screen not supported
 [%s] %s:%d %@(%p) Negotiated 1:1 screen not supported
 [%s] %s:%d We cannot configure the OneToOne RateController as there is not an active connection yet
 [%s] %s:%d %@(%p) We cannot configure the OneToOne RateController as there is not an active connection yet
 [%s] %s:%d Could not find server bag config for key=%@. Using default value=%d
 [%s] %s:%d %@(%p) Could not find server bag config for key=%@. Using default value=%d
 [%s] %s:%d Trying to add a oneToOne participant even though we do not support OneToOne mode
 [%s] %s:%d %@(%p) Trying to add a oneToOne participant even though we do not support OneToOne mode
 [%s] %s:%d Attempting to add another participant while in 1:1 mode!
 [%s] %s:%d %@(%p) Attempting to add another participant while in 1:1 mode!
 [%s] %s:%d Failed to negotiate with the remoteParticipant
 [%s] %s:%d %@(%p) Failed to negotiate with the remoteParticipant
 [%s] %s:%d Failed to configure the remoteParticipant for OneToOne
 [%s] %s:%d %@(%p) Failed to configure the remoteParticipant for OneToOne
 [%s] %s:%d Failed to setup the remote participant in OneToOneMode
 [%s] %s:%d %@(%p) Failed to setup the remote participant in OneToOneMode
 [%s] %s:%d %s transition to oneToOneModeEnabled=%d
 [%s] %s:%d %@(%p) %s transition to oneToOneModeEnabled=%d
 [%s] %s:%d Failed to send oneToOneModeEnabled=%d message
 [%s] %s:%d %@(%p) Failed to send oneToOneModeEnabled=%d message
 [%s] %s:%d Failed to complete transition to oneToOneModeEnabled=%d
 [%s] %s:%d %@(%p) Failed to complete transition to oneToOneModeEnabled=%d
 [%s] %s:%d Switching from multiway to OneToOne enabled is not supported. switchFromGFTToOneToOneEnabled=%d remoteSupportsGFTSwitchToOneToOne=%d 
 [%s] %s:%d %@(%p) Switching from multiway to OneToOne enabled is not supported. switchFromGFTToOneToOneEnabled=%d remoteSupportsGFTSwitchToOneToOne=%d 
 [%s] %s:%d Switch to U+1 requested at improper time - canSwitch=%{BOOL}d, oneToOneModeEnabled=%{BOOL}d, remoteParticipantCount=%lu
 [%s] %s:%d %@(%p) Switch to U+1 requested at improper time - canSwitch=%{BOOL}d, oneToOneModeEnabled=%{BOOL}d, remoteParticipantCount=%lu
 [%s] %s:%d Starting Switch _oneToOneModeEnabled=%d to oneToOneEnabled=%d isLocal=%d
 [%s] %s:%d %@(%p) Starting Switch _oneToOneModeEnabled=%d to oneToOneEnabled=%d isLocal=%d
 [%s] %s:%d Failed to send the oneToOneEnabledState message oneToOneEnabled=%d isLocal=%d
 [%s] %s:%d %@(%p) Failed to send the oneToOneEnabledState message oneToOneEnabled=%d isLocal=%d
 [%s] %s:%d Failed to complete the switch to oneToOneEnabled=%d isLocal=%d
 [%s] %s:%d %@(%p) Failed to complete the switch to oneToOneEnabled=%d isLocal=%d
 [%s] %s:%d Load switch iRATMetricsEnabled %d
 [%s] %s:%d %@(%p) Load switch iRATMetricsEnabled %d
 [%s] %s:%d Load switch iRATRtpEnabled %d
 [%s] %s:%d %@(%p) Load switch iRATRtpEnabled %d
 [%s] %s:%d Load switch preWarmCellEnabled %d
 [%s] %s:%d %@(%p) Load switch preWarmCellEnabled %d
 [%s] %s:%d Load switch wrmRSSIThresholdEnabled %d
 [%s] %s:%d %@(%p) Load switch wrmRSSIThresholdEnabled %d
 [%s] %s:%d Load switch preferRelayOverP2P %d
 [%s] %s:%d %@(%p) Load switch preferRelayOverP2P %d
 [%s] %s:%d Load switch fastMediaDuplicationEnabled %d
 [%s] %s:%d %@(%p) Load switch fastMediaDuplicationEnabled %d
 [%s] %s:%d Load switch duplicateImportantPktsEnabled %d
 [%s] %s:%d %@(%p) Load switch duplicateImportantPktsEnabled %d
 [%s] %s:%d Load switch lowNetworkModeEnabled %d
 [%s] %s:%d %@(%p) Load switch lowNetworkModeEnabled %d
 [%s] %s:%d Load switch duplicationEnhancementEnabled %d
 [%s] %s:%d %@(%p) Load switch duplicationEnhancementEnabled %d
 [%s] %s:%d Load switch iRATDuplicationEnabled %d
 [%s] %s:%d %@(%p) Load switch iRATDuplicationEnabled %d
 [%s] %s:%d Load switch useMediaDrivenDuplication %d
 [%s] %s:%d %@(%p) Load switch useMediaDrivenDuplication %d
 [%s] %s:%d We cannot start oneToOne if we haven't yet received an active connection
 [%s] %s:%d %@(%p) We cannot start oneToOne if we haven't yet received an active connection
 [%s] %s:%d We cannot start oneToOne if we haven't yet started the remote participant
 [%s] %s:%d %@(%p) We cannot start oneToOne if we haven't yet started the remote participant
 [%s] %s:%d We cannot start oneToOne if we have already started oneToOne
 [%s] %s:%d %@(%p) We cannot start oneToOne if we have already started oneToOne
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCSession+OneToOne.m:%d: [%p] OneToOne session should reconnect (ids reinit)
 [%s] %s:%d We haven't yet received an active connection
 [%s] %s:%d We have received the first active connection, we can now start OneToOne
 [%s] %s:%d SIPClientDataDictionary dealloc
 [%s] %s:%d VCSessionMessageTopic with topic %s dealloc
 [%s] %s:%d sendReliableMessage topic=%@
 [%s] %s:%d sendMessage topic=%@ reliable=%d, concurent=%d, outgoingIndex=%d, lastOutgoingIndex=%d, retries=%d
 [%s] %s:%d sendReliableMessageAndWait result was %s, participantID=%llu, index=%ld, retry=%ld, payload=%@
 [%s] %s:%d sendReliableMessageAndWait result was %s
 [%s] %s:%d ParticipantID=%@: Message too old: transactionID=%@, replayProtectionThreshold=%@
 [%s] %s:%d ParticipantID=%@: Found duplicate message with transactionID=%@ and expiration time=%@
 [%s] %s:%d ParticipantID=%@: Purging message with transactionID=%llu and expiration time=%f. Current time=%f, replayProtectionThreshold=%llu
 [%s] %s:%d passMessage: Participant '%@': Added message ID '%@' to message history '%@', expireTime '%@'
 [%s] %s:%d passMessage: ParticipantID '%@': Passing message '%@' with transactionID '%@' for topic '%@'
 [%s] %s:%d passMessage: ParticipantID '%@': Ignoring duplicate message '%@' with transactionID '%@' for topic '%@'
 [%s] %s:%d clearTransactionCacheForParticipant:%@
 [%s] %s:%d parameter memory pool is NULL!
 [%s] %s:%d invalid memory pool %p or pointer %p!
 [%s] %s:%d Redundancy percentage: %d is out of bound in legacy duplication
 [%s] %s:%d Number of channels is incorrect (%d >= %lu)
 [%s] %s:%d %@(%p) Number of channels is incorrect (%d >= %lu)
 [%s] %s:%d LinkProbing: startActiveProbing failed: Link probing not enabled
 [%s] %s:%d LinkProbing: startActiveProbing failed: Invalid linkID list
 [%s] %s:%d LinkProbing: stopActiveProbing failed: Link probing not enabled
 [%s] %s:%d LinkProbing: stopActiveProbing failed: Link probing not in progress
 [%s] %s:%d LinkProbing: stopActiveProbing failed: Invalid linkID list
 [%s] %s:%d LinkProbing: updateProbingResults failed: Link probing not in progress
 [%s] %s:%d LinkProbing: Loaded storebag values linkProbingInterval: %d linkProbingTimeout: %d linkProbingQueryResultsInterval: %d exponentialMovingMeanFactor: %f plrEnvelopeAttackFactor: %f plrEnvelopeDecayFactor: %f plrBuckets: %@ minSentRequestCountThreshold: %d _linkProbingDuplicationWaitTimeout: %d _consecutiveIdenticalQueryResultMax: %d _linkProbingLockdownPeriod: %f
 [%s] %s:%d LinkProbing: Stop active probing because duplication did not start in %f seconds after starting probing.
 [%s] %s:%d LinkProbing: queryProbingResults failed: Link probing not in progress
 [%s] %s:%d LinkProbing: queryProbingResults failed: No links are currently being probed
 [%s] %s:%d LinkProbing: Stop active probing because the same connection chosen for duplication after %d consecutive queries
 [%s] %s:%d LinkProbing: Start active probing because connection for duplication was last updated using probing results %f seconds ago, and duplication is still active.
 [%s] %s:%d videoDegradedThreshold = %f
 [%s] %s:%d microTime=%f lastDecodedFrameTime=%f currentFrameTimeDiff=%f videoIsPaused=%d
 [%s] %s:%d Failed to setup delegate queue
 [%s] %s:%d %@(%p) Failed to setup delegate queue
 [%s] %s:%d Failed to setup XPC
 [%s] %s:%d %@(%p) Failed to setup XPC
 [%s] %s:%d Failed to initialize the power spectrum meter
 [%s] %s:%d %@(%p) Failed to initialize the power spectrum meter
 [%s] %s:%d deallocating AVCAudioPowerSpectrumMeter
 [%s] %s:%d %@(%p) deallocating AVCAudioPowerSpectrumMeter
 [%s] %s:%d %@(%p) streamToken=%ld
@:@ AVCAudioPowerSpectrumMeter-registerPowerSpectrumForCellularTapType
 [%s] %s:%d @:@ AVCAudioPowerSpectrumMeter-registerPowerSpectrumForCellularTapType (%p) type=%u
 [%s] %s:%d Failed to register the power spectrum for tap type=%@. error=%@
 [%s] %s:%d %@(%p) Failed to register the power spectrum for tap type=%@. error=%@
@:@ AVCAudioPowerSpectrumMeter-unregisterPowerSpectrumForCellularTapType
 [%s] %s:%d @:@ AVCAudioPowerSpectrumMeter-unregisterPowerSpectrumForCellularTapType (%p) type=%u
 [%s] %s:%d Failed to unregister the power spectrum for tap type=%@. error=%@
 [%s] %s:%d %@(%p) Failed to unregister the power spectrum for tap type=%@. error=%@
 [%s] %s:%d Failed to allocate XPC connection
 [%s] %s:%d %@(%p) Failed to allocate XPC connection
 [%s] %s:%d Failed to allocate XPC object allow list
 [%s] %s:%d %@(%p) Failed to allocate XPC object allow list
 [%s] %s:%d The delegate is nil
 [%s] %s:%d %@(%p) The delegate is nil
 [%s] %s:%d Failed to create the delegate queue
 [%s] %s:%d %@(%p) Failed to create the delegate queue
 [%s] %s:%d Failed to allocate power spectrum error=%@
 [%s] %s:%d %@(%p) Failed to allocate power spectrum error=%@
 [%s] %s:%d Decoding: error %@.
 [%s] %s:%d received callback for serverSpectrumInterrupted
 [%s] %s:%d %@(%p) received callback for serverSpectrumInterrupted
 [%s] %s:%d Cannot create rate controller!
 [%s] %s:%d mode=%d is not supported yet
 [%s] %s:%d Cannot load and retain delegate successfully!
 [%s] %s:%d Waiting for bag load.
 [%s] %s:%d Bag Load Notification came in %s
 [%s] %s:%d This is what we are reading in %s = %s
 [%s] %s:%d We don't have the required keys %s.  Please file.
 [%s] %s:%d verifyRequiredKeys finished.
 [%s] %s:%d Audio redundancy percentage change due to packet loss: %lf, new threshold: %lf [%d to %d]
 [%s] %s:%d Assign IDR slot for streams in item: %@
 [%s] %s:%d Setting position and period: %@
 [%s] %s:%d VCSession[%@] transportSessionID[%u] participantId:[%@] participantUUID[%@] receives message:%s
 [%s] %s:%d streamGroupStatesMessage is nil
 [%s] %s:%d Participant is nil
 [%s] %s:%d Session is nil
 [%s] %s:%d VCSession[%@] transportSessionID=%u participantId[%@] participantUUID[%@] message=%@
 [%s] %s:%d SymptomReporter: VCSession[%@] transportSessionID[%u] participantId:[%@] participantUUID:[%@] isLocalInitiated:%d isLocalSideOnly:%d message:%@, symptomID: %d, groupID: %@
 [%s] %s:%d groupID is nil, return
 [%s] %s:%d SymptomReporter: Failed to send symptom message %@ to participantID %@, requesting only the local side
 [%s] %s:%d setupWRMAlertUpdateMessage message is invalid
 [%s] %s:%d setupWRMAlertUpdateMessage message is nil
 [%s] %s:%d moment message %@ from participantId:[%@] participantUUID:[%@]
 [%s] %s:%d setupMomentsMessages message is nil
 [%s] %s:%d VCSession[%@] transportSessionID[%u] idsParticipantID[%@] participantUUID[%@] receives message[%@]
 [%s] %s:%d setupPreferredInterfaceMessage message is nil
 [%s] %s:%d VCSession received message about PIP State change:%@
 [%s] %s:%d VCSession callID[%u] received 'disconnect' message from remote participant '%@'
 [%s] %s:%d VCSession=%@ transportSessionID=%u participantId=%@ participantUUID=%@ receives message=%s
 [%s] %s:%d setupMediaQualityDegradedMessage message is invalid
 [%s] %s:%d setupMediaQualityDegradedMessage message is nil
 [%s] %s:%d rateControlConfigMessage is nil
 [%s] %s:%d Unexpected remoteCellTech=%d
 [%s] %s:%d VCSession: Remote CellTech has changed %s, max bitrate %u, max remote bitrate %u
 [%s] %s:%d VCSession received message about CellTech change :%d, remote bitrate %u
 [%s] %s:%d Sending State Update: Failed to add message entry for mediaType=%@ mediaState=%@. Value is nil.
 [%s] %s:%d %@(%p) Sending State Update: Failed to add message entry for mediaType=%@ mediaState=%@. Value is nil.
 [%s] %s:%d Sending State Update: Failed to add message entry for mediaType=%@ mediaState=%@. Key is nil.
 [%s] %s:%d %@(%p) Sending State Update: Failed to add message entry for mediaType=%@ mediaState=%@. Key is nil.
 [%s] %s:%d Sending State Update: mediaType=%@ mediaState=%@
 [%s] %s:%d %@(%p) Sending State Update: mediaType=%@ mediaState=%@
 [%s] %s:%d Found unsupported key=%@
 [%s] %s:%d %@(%p) Found unsupported key=%@
 [%s] %s:%d Media states for mediaType=%@ are mismatched state=%@ != state=%@
 [%s] %s:%d %@(%p) Media states for mediaType=%@ are mismatched state=%@ != state=%@
 [%s] %s:%d Receive State Update: Failed to find message entry key for mediaType=%@
 [%s] %s:%d %@(%p) Receive State Update: Failed to find message entry key for mediaType=%@
 [%s] %s:%d Received State Update: mediaType=%@ mediaState=%@
 [%s] %s:%d %@(%p) Received State Update: mediaType=%@ mediaState=%@
 [%s] %s:%d mediaStateMessage is nil
 [%s] %s:%d %@(%p) mediaStateMessage is nil
 [%s] %s:%d %@(%p) Participant is nil
 [%s] %s:%d Received State Update: transportSessionID=%u participantId=%@ participantUUID=%@ mediaType=%@ mediaState=%@
 [%s] %s:%d %@(%p) Received State Update: transportSessionID=%u participantId=%@ participantUUID=%@ mediaType=%@ mediaState=%@
 [%s] %s:%d type=%hhu, requesterID=%@, requesteeID=%@, transactionID=%@
 [%s] %s:%d %p failed validation: %s
 [%s] %s:%d Failed to allocate config for type: %d
 [%s] %s:%d %@(%p) Failed to allocate config for type: %d
 [%s] %s:%d Failed to allocate payload types set
 [%s] %s:%d Failed to setup redundancy settings
 [%s] %s:%d Failed to allocate pending uplink streams dictionary
 [%s] %s:%d Failed to setup the stream controller
 [%s] %s:%d Failed to allocate temporal streamIDs
 [%s] %s:%d Failed to allocate video redundancy pool
 [%s] %s:%d Failed to create videoRedundancyChangeQueue
 [%s] %s:%d %@(%p) Failed to create videoRedundancyChangeQueue
 [%s] %s:%d Tried to create uplink video stream controller for mode but VCMediaStreamSendGroupConfig is nil
 [%s] %s:%d %@(%p) Tried to create uplink video stream controller for mode but VCMediaStreamSendGroupConfig is nil
 [%s] %s:%d _videoPriorityEnabled=%d, uplinkVideoStreamController.dynamicVideoPriorityEnabled=%d uplinkVideoStreamController.captureFrameRate=%d
 [%s] %s:%d %@(%p) _videoPriorityEnabled=%d, uplinkVideoStreamController.dynamicVideoPriorityEnabled=%d uplinkVideoStreamController.captureFrameRate=%d
 [%s] %s:%d streamID=%@ does not exist
 [%s] %s:%d %@(%p) streamID=%@ does not exist
 [%s] %s:%d captureEnabled=%d isRunning=%d _hasPeerSubscribedStreams=%d _allowSuspendProvisionedStreams=%d
 [%s] %s:%d %@(%p) captureEnabled=%d isRunning=%d _hasPeerSubscribedStreams=%d _allowSuspendProvisionedStreams=%d
 [%s] %s:%d %@(%p) _videoPriorityEnabled=%d
 [%s] %s:%d StreamGroup:%s VideoStreamIDs:%@ videoMediaBitrates:%@ for targetBitrate:%d
 [%s] %s:%d %@(%p) StreamGroup:%s VideoStreamIDs:%@ videoMediaBitrates:%@ for targetBitrate:%d
 [%s] %s:%d not found video stream with stream ID %@
 [%s] %s:%d %@(%p) not found video stream with stream ID %@
 [%s] %s:%d New remote subscriptions. Enable capture.
 [%s] %s:%d %@(%p) New remote subscriptions. Enable capture.
 [%s] %s:%d No remote subscriptions. Disable capture.
 [%s] %s:%d %@(%p) No remote subscriptions. Disable capture.
 [%s] %s:%d streamID=%d is the highest temporal tier within max=%d
 [%s] %s:%d not subscribing to streamID=%d either a higher temporal tier is subscribed (%d) or max active tiers=%d
 [%s] %s:%d Cannot set capture framerate for captureSource=%d
 [%s] %s:%d %@(%p) Cannot set capture framerate for captureSource=%d
 [%s] %s:%d Ignoring the change of captureFrameRate. currentCaptureFrameRate=%d maxSupportedMultiwayFrameRate=%d framerate=%d
 [%s] %s:%d %@(%p) Ignoring the change of captureFrameRate. currentCaptureFrameRate=%d maxSupportedMultiwayFrameRate=%d framerate=%d
 [%s] %s:%d Set capture rate to %d fps
 [%s] %s:%d %@(%p) Set capture rate to %d fps
 [%s] %s:%d Registering for video capture of type: %d
 [%s] %s:%d %@(%p) Registering for video capture of type: %d
 [%s] %s:%d Registering for screen capture of type: %d
 [%s] %s:%d %@(%p) Registering for screen capture of type: %d
 [%s] %s:%d Unregistering from video capture of type: %d
 [%s] %s:%d %@(%p) Unregistering from video capture of type: %d
 [%s] %s:%d activeVideoStreams:%@
 [%s] %s:%d %@(%p) activeVideoStreams:%@
 [%s] %s:%d compound streamID increased for stream %hu, generating key frame
 [%s] %s:%d %@(%p) compound streamID increased for stream %hu, generating key frame
 [%s] %s:%d Currently sending streamIDs %@
 [%s] %s:%d %@(%p) Currently sending streamIDs %@
 [%s] %s:%d Sync source timestamp information is not yet available. Dropping video frame.
 [%s] %s:%d %@(%p) Sync source timestamp information is not yet available. Dropping video frame.
 [%s] %s:%d Enqueue new redundancyPercentage=%d
 [%s] %s:%d %@(%p) Enqueue new redundancyPercentage=%d
 [%s] %s:%d Ignoring redundancy controller callback for controller=%@, current controller=%@, streamGroupMode=%u
 [%s] %s:%d %@(%p) Ignoring redundancy controller callback for controller=%@, current controller=%@, streamGroupMode=%u
 [%s] %s:%d Max Screen capture size: width = %f, height = %f
 [%s] %s:%d %@(%p) Max Screen capture size: width = %f, height = %f
 [%s] %s:%d Max Screen capture frame rate: = %d
 [%s] %s:%d %@(%p) Max Screen capture frame rate: = %d
 [%s] %s:%d Health Monitor for Video Stream Send GroupID=%s StreamID[main:%u repair:%u] Video[%ukbps %4.1ffps] Frames Received=%u Processed=%u
 [%s] %s:%d %@(%p) Health Monitor for Video Stream Send GroupID=%s StreamID[main:%u repair:%u] Video[%ukbps %4.1ffps] Frames Received=%u Processed=%u
 [%s] %s:%d VCNAT64ResolverCleanup: no more registered callbackContexts left. Destroying NAT64Resolver
 [%s] %s:%d VCNAT64ResolverRegisterForPrefixUpdate: begin registration of context %08X on interface %s
 [%s] %s:%d VCNAT64ResolverRegisterForPrefixUpdate: could not create a shared instance of NAT64Resolver
 [%s] %s:%d VCNAT64ResolverRegisterForPrefixUpdate: failed on creating VCNAT64ListenerContext
 [%s] %s:%d VCNAT64ResolverRegisterForPrefixUpdate: failed on creating NAT64CallBackContext
 [%s] %s:%d VCNAT64ResolverRegisterForPrefixUpdate: failed on creating interfaceName
 [%s] %s:%d VCNAT64ResolverRegisterForPrefixUpdate: failed on creating listeners array
 [%s] %s:%d VCNAT64ResolverRegisterForPrefixUpdate: context %08X has already been registered for interface %s
 [%s] %s:%d VCNAT64ResolverRegisterForPrefixUpdate: succesfully registered context %08X on interface %s
 [%s] %s:%d VCNAT64ResolverDeregisterAll: nothing to deregister
 [%s] %s:%d VCNAT64ResolverGetPrefix: could not create a shared instance of NAT64Resolver
 [%s] %s:%d VCNAT64ResolverGetPrefix: can not fetch NAT64 prefix as '%s' has not been registered on NAT64Resolver
 [%s] %s:%d VCNAT64ResolverGetSharedInstance: shared instance of NAT64Resolver does not exist. Creating it...
 [%s] %s:%d VCNAT64ResolverGetSharedInstance: failed to create VCNAT64Resolver
 [%s] %s:%d VCNAT64ResolverGetSharedInstance: failed to create interface dictionary for shared instance
 [%s] %s:%d VCNAT64ResolverGetSharedInstance: failed to create dispatch queue for shared instance
 [%s] %s:%d VCNAT64ResolverGetSharedInstance: failed to create retry queue for shared instance
 [%s] %s:%d VCNAT64ResolveNAT64Prefix: callbackContext should not be NULL
 [%s] %s:%d VCNAT64ResolveNAT64Prefix: DNS callback context has already been released for nterface %s
 [%s] %s:%d VCNAT64ResolveNAT64Prefix: Interface %s IS NOT behind NAT 64
 [%s] %s:%d VCNAT64ResolveNAT64Prefix: Re-trying in 1 second for Interface %s, attempt %d out of %d
 [%s] %s:%d VCNAT64ResolveNAT64Prefix: NAT64 prefix resolution failed with error %d
 [%s] %s:%d VCNAT64ResolveNAT64Prefix: Interface %s IS behind NAT 64
 [%s] %s:%d VCNAT64ResolverDeregisterFromInterface: removing context %08x from interface %s at index %d
 [%s] %s:%d VCNAT64ResolverDeregisterFromInterface: removing interface %s as it has no listeners
 [%s] %s:%d destinationIPPort is NULL for socket %d with getpeername errno %d
 [%s] %s:%d Get ipv6 tclass socket option for DSCP value=%d
 [%s] %s:%d Invalid parameters! cachedSrcDstInfo isValid:%d, packetSrcDstInfo isValid:%d!
 [%s] %s:%d invalid packet srcDstInfo mode %d
 [%s] %s:%d Invalid parameters! cachedSrcDstInfo isValid:%d, IPPort isValid:%d!
 [%s] %s:%d IPPort mismatch! expected %s actual %s
 [%s] %s:%d ChannelToken mismatch! expected %d actual %d
 [%s] %s:%d Invalid VCSourceDestinationInfoMode:%d!
 [%s] %s:%d matching NW %p to srcDstInfo mode %d
 [%s] %s:%d matching NW %p to srcDstInfo conn %p
 [%s] %s:%d NW Connection mismatch!
 [%s] %s:%d Report initial memory usage %d
 [%s] %s:%d Report memory usage %d
 [%s] %s:%d toneInjectionEnabled = %d
 [%s] %s:%d %@(%p) toneInjectionEnabled = %d
 [%s] %s:%d forceNetworkCellular = %d
 [%s] %s:%d %@(%p) forceNetworkCellular = %d
 [%s] %s:%d setEnableLoopbackInterfaceBlock=%d
 [%s] %s:%d %@(%p) setEnableLoopbackInterfaceBlock=%d
 [%s] %s:%d setEmulatedRxPLRBlock=%2.3f
 [%s] %s:%d %@(%p) setEmulatedRxPLRBlock=%2.3f
 [%s] %s:%d forcedTargetBitrate=%d
 [%s] %s:%d %@(%p) forcedTargetBitrate=%d
 [%s] %s:%d forcedCapBitrate=%d
 [%s] %s:%d %@(%p) forcedCapBitrate=%d
 [%s] %s:%d emulatedNetworkConfigPath=%s
 [%s] %s:%d %@(%p) emulatedNetworkConfigPath=%s
 [%s] %s:%d setEnableAudioPowerSpectrumReport=%d
 [%s] %s:%d %@(%p) setEnableAudioPowerSpectrumReport=%d
 [%s] %s:%d Failed to decode captions blob. Error=%d
 [%s] %s:%d Audio redundancy is disabled.
 [%s] %s:%d In-appropriate mode %d for VCRedundancyController
 [%s] %s:%d Audio redundancy percentage changed from %d to %d with mode %d, 0x%p
 [%s] %s:%d Audio redundancy interval changed from %f to %f with mode %d, 0x%p
 [%s] %s:%d processMessage: sequenceNumber may not be nil!!! Aborting processing message for _sessionID='%d', participantID='%@'
 [%s] %s:%d %@(%p) processMessage: sequenceNumber may not be nil!!! Aborting processing message for _sessionID='%d', participantID='%@'
 [%s] %s:%d Reliable message has been ACKed for _sessionID='%d', participantID='%@', transactionID='%@', messageType='%d'
 [%s] %s:%d %@(%p) Reliable message has been ACKed for _sessionID='%d', participantID='%@', transactionID='%@', messageType='%d'
 [%s] %s:%d processMessage: Sent confirmation for _sessionID='%d', participantID='%@', transactionID='%@'
 [%s] %s:%d %@(%p) processMessage: Sent confirmation for _sessionID='%d', participantID='%@', transactionID='%@'
 [%s] %s:%d processMessageFromParticipant: isInternalMessage='%d'
 [%s] %s:%d %@(%p) processMessageFromParticipant: isInternalMessage='%d'
 [%s] %s:%d encryptMessage: message '%@' is too long (%d > %d)
 [%s] %s:%d %@(%p) encryptMessage: message '%@' is too long (%d > %d)
 [%s] %s:%d newDataFromMessage: encryption failed. Dropping the message...
 [%s] %s:%d %@(%p) newDataFromMessage: encryption failed. Dropping the message...
 [%s] %s:%d newEncryptedMessageFromMessage: encryption failed. Dropping the message...
 [%s] %s:%d %@(%p) newEncryptedMessageFromMessage: encryption failed. Dropping the message...
 [%s] %s:%d +processMessage: Sent confirmation for _sessionID='%d', participantID='%@', transactionID='%@'
 [%s] %s:%d %@(%p) +processMessage: Sent confirmation for _sessionID='%d', participantID='%@', transactionID='%@'
 [%s] %s:%d +processMessageFromParticipant: shouldNotifyClient='%d'
 [%s] %s:%d %@(%p) +processMessageFromParticipant: shouldNotifyClient='%d'
 [%s] %s:%d decryptMessageWithMKI='%@' message='%@', sequenceNumber='%d'
 [%s] %s:%d %@(%p) decryptMessageWithMKI='%@' message='%@', sequenceNumber='%d'
 [%s] %s:%d decryptMessageWithMKI: message='%@' is too long (%d > %d)
 [%s] %s:%d %@(%p) decryptMessageWithMKI: message='%@' is too long (%d > %d)
 [%s] %s:%d processEncryptedMessage: message received but MKI is not included in the packet from participantID='%@'. Dropping message...
 [%s] %s:%d %@(%p) processEncryptedMessage: message received but MKI is not included in the packet from participantID='%@'. Dropping message...
 [%s] %s:%d processEncryptedMessage: message received from participantID='%@' but could not decrypt it. Dropping message...
 [%s] %s:%d %@(%p) processEncryptedMessage: message received from participantID='%@' but could not decrypt it. Dropping message...
 [%s] %s:%d Failed to unarchive message. error='%@'
 [%s] %s:%d %@(%p) Failed to unarchive message. error='%@'
 [%s] %s:%d Payload and topic may not be both nil
 [%s] %s:%d %@(%p) Payload and topic may not be both nil
 [%s] %s:%d processEncryptedMessage: message encryption is enabled but remote participant '%@' sends un-encrypted messages. Dropping un-encrypted message. FIX ENCRYPTION INCONSYSTENCY!!!)
 [%s] %s:%d %@(%p) processEncryptedMessage: message encryption is enabled but remote participant '%@' sends un-encrypted messages. Dropping un-encrypted message. FIX ENCRYPTION INCONSYSTENCY!!!)
 [%s] %s:%d processEncryptedMessage: message encryption is enabled but message payload is empty for participant '%@'
 [%s] %s:%d %@(%p) processEncryptedMessage: message encryption is enabled but message payload is empty for participant '%@'
 [%s] %s:%d messageReceived: message encryption is disabled locally via user defaults but remote participant '%@' sends encrypted messages. Dropping encrypted message. FIX ENCRYPTION INCONSYSTENCY!!!)
 [%s] %s:%d %@(%p) messageReceived: message encryption is disabled locally via user defaults but remote participant '%@' sends encrypted messages. Dropping encrypted message. FIX ENCRYPTION INCONSYSTENCY!!!)
 [%s] %s:%d messageReceived: found existing dialog for participantID='%@'
 [%s] %s:%d %@(%p) messageReceived: found existing dialog for participantID='%@'
 [%s] %s:%d messageReceived: no participantID provided. Processing without dialog
 [%s] %s:%d %@(%p) messageReceived: no participantID provided. Processing without dialog
 [%s] %s:%d messageReceived: %@ notify client for sessionID '%d'
 [%s] %s:%d %@(%p) messageReceived: %@ notify client for sessionID '%d'
 [%s] %s:%d superlayer bounds=%@
 [%s] %s:%d %@(%p) superlayer bounds=%@
 [%s] %s:%d Invalid AVCRemoteVideoClient instance for the host layer
 [%s] %s:%d %@(%p) Invalid AVCRemoteVideoClient instance for the host layer
@:@ AVCRemoteVideoClient-init
 [%s] %s:%d @:@ AVCRemoteVideoClient-init (%p) streamToken=%ld
 [%s] %s:%d Video info layer is enabled.
 [%s] %s:%d ERROR queue for streamToken=%u doesn't exist.
 [%s] %s:%d ERROR OSX only support one client %u.
@:@ AVCRemoteVideoClient-dealloc
 [%s] %s:%d @:@ AVCRemoteVideoClient-dealloc (%p) streamToken=%u layerHostMode=%d activeVideoMode=%d
 [%s] %s:%d videoLayer=%@, mode=%d
 [%s] %s:%d AVCRemoteVideoClient: setVideoLayer %s for mode %d
 [%s] %s:%d AVCRemoteVideoClient: slotForMode %d
 [%s] %s:%d ERROR no valid slot for mode=%d
 [%s] %s:%d Invalid CALayerHost instance
 [%s] %s:%d %@(%p) Invalid CALayerHost instance
 [%s] %s:%d Invalid rootLayer or contextId
 [%s] %s:%d %@(%p) Invalid rootLayer or contextId
 [%s] %s:%d Failed to allocate layer host name
 [%s] %s:%d %@(%p) Failed to allocate layer host name
 [%s] %s:%d Failed to allocate CALayerHost
 [%s] %s:%d %@(%p) Failed to allocate CALayerHost
 [%s] %s:%d AVCRemoteVideoClient: connect layer=%p with  <--> contextId=%u
 [%s] %s:%d %@(%p) AVCRemoteVideoClient: connect layer=%p with  <--> contextId=%u
 [%s] %s:%d bounds=%@
 [%s] %s:%d %@(%p) bounds=%@
 [%s] %s:%d Failed due to invalid root layer bounds=%@
 [%s] %s:%d %@(%p) Failed due to invalid root layer bounds=%@
 [%s] %s:%d CALayerHost invalid
 [%s] %s:%d %@(%p) CALayerHost invalid
 [%s] %s:%d Feature not using daemon
 [%s] %s:%d %@(%p) Feature not using daemon
 [%s] %s:%d rootLayer=%@ bounds=%@
 [%s] %s:%d %@(%p) rootLayer=%@ bounds=%@
 [%s] %s:%d Invalid rootLayer parameter
 [%s] %s:%d %@(%p) Invalid rootLayer parameter
 [%s] %s:%d CALayerHost exist already, reconfigure not supported currently
 [%s] %s:%d %@(%p) CALayerHost exist already, reconfigure not supported currently
 [%s] %s:%d screenAttributes=%@, streamToken=%ld
 [%s] %s:%d videoAttributes=%@, streamToken=%ld
 [%s] %s:%d didPause=%d, streamToken=%u
 [%s] %s:%d didStall=%d, streamToken=%u
 [%s] %s:%d isDegraded=%d, streamToken=%u
 [%s] %s:%d isSuspended=%d, streamToken=%u
 [%s] %s:%d Invalid video mode:%d
 [%s] %s:%d Object is not a CA Layer
 [%s] %s:%d Bounds are NULL
 [%s] %s:%d Setting bounds %f x %f
 [%s] %s:%d HandoverReport: connection changed to: %s
 [%s] %s:%d Setting textLayer
 [%s] %s:%d VCBitrateArbiter: Bitrate rules %s
 [%s] %s:%d %s: overriding TCP Relay bitrate with storebag value of %d
 [%s] %s:%d VCBitrateArbiter: received connectionType %d
 [%s] %s:%d Bitrate = %d. received connection for %s, connectionType = %d, constraint %d, expensive %d, videoFullHD %d
 [%s] %s:%d Received connection type %d
 [%s] %s:%d _maxAllowedBitrate2G = %d,  _maxAllowedBitrate3G = %d, _maxAllowedBitrateLTE = %d, _maxAllowedBitrateHighRat = %d, _maxAllowedBitrateWifi = %d
 [%s] %s:%d fileDescriptor=%d, connection=%@
 [%s] %s:%d AVCPacketRelayDriver: invalid file descriptor to drive
 [%s] %s:%d fileDescriptor=%d
 [%s] %s:%d AVCPacketRelayDriver: invalid file descriptor to stop
 [%s] %s:%d AVCPacketRelayDriver init failed: unable to start driver thread with errno %d
 [%s] %s:%d AVCPacketRelayDriver init %p
 [%s] %s:%d AVCPacketRelayDriver dealloc
 [%s] %s:%d Expired frame received. Error=%d
 [%s] %s:%d Unable to parse segment header. Error=%d
 [%s] %s:%d Failed to decode payload. Error=%d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/CompressionUtils.c:%d: Error initializing deflate.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/CompressionUtils.c:%d: Error ending deflate.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/CompressionUtils.c:%d: Error initializing inflate.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/CompressionUtils.c:%d: Error ending inflate.
AVCRC [%s] %s:%d Invalid parameter. statisticsHistory=%p statsElement=%p
AVCRC [%s] %s:%d Statistics has reverse history! packet count is not incremental, sendDiff:%d, receiveDiff:%d, time:%f, index:%d [%d,%d]
AVCRC [%s] %s:%d Received more packets than sent, sendDiff:%d, receiveDiff:%d, time:%f, index:%d [%d,%d]
AVCRC [%s] %s:%d Statistics has reverse history! byte count is not incremental, sendDiff:%d, currentCount:%llu, previousCount:%llu, time:%f, index:%d
AVCRC [%s] %s:%d Statistics has reverse history! byte count is not incremental, receiveDiff:%d, currentCount:%llu, previousCount:%llu, time:%f, index:%d
AVCRC [%s] %s:%d Statistics has reverse history! byte count is not incremental, serverStatsDiff:%d, currentCount:%llu, previousCount:%llu, time:%f, index:%d
AVCRC [%s] %s:%d Statistics history does not have enough history for the stats within the most recent %f seconds
AVCRC [%s] %s:%d Invalid parameter. statisticsHistory=%p
AVCRC [%s] %s:%d Adding sendStats with packetId:%u [len:%d, pruned:%d]
AVCRC [%s] %s:%d Cannot find sendStatsElement in history with packetId %d [earliest packetId: %d, len:%d]
AVCRC [%s] %s:%d Statistics history cannot match, because elementIndex is NULL!
AVCRC [%s] %s:%d Statistics history does not have enough history for the stats within the most recent %f seconds. History size: %f seconds
AVCRC [%s] %s:%d Statistics history receives out of order statistics for totalByteSent! [current:%llu, previous:%llu]
AVCRC [%s] %s:%d Statistics history receives out of order statistics for totalByteReceived!
AVCRC [%s] %s:%d Reset VCRC statistics history
 [%s] %s:%d Failed to negotiate image types and video codecs. imageTypes=%@ videoCodecExpected=%@
 [%s] %s:%d %s ret: %d (%s)
 [%s] %s:%d failed to create %@
 [%s] %s:%d file exists at %@
 [%s] %s:%d failed to open %@ with error %d
 [%s] %s:%d successfully created %@
 [%s] %s:%d Failed to allocate context
 [%s] %s:%d Failed to create log file
 [%s] %s:%d Failed to create log queue
 [%s] %s:%d open original %@ failed with %d
 [%s] %s:%d open new zip %@ failed with %d
 [%s] %s:%d failed to create %@: %d
 [%s] %s:%d compressed to %@
 [%s] %s:%d removed origFileName=%@, error=%@
 [%s] %s:%d removed zipFileName=%@, error=%@
 [%s] %s:%d Error in creating directory path=%s error=%s 
 [%s] %s:%d failed to read directory %@ (%@)
 [%s] %s:%d directory=%@, fileList.count=%lu
 [%s] %s:%d Total size: %llu
 [%s] %s:%d file no longer exists at %@
 [%s] %s:%d removed %@ (%@, %llu bytes, dumpID %u) - %llu bytes remaining
 [%s] %s:%d failed to remove %@ (%@)
 [%s] %s:%d Skipping filename=%@, date=%@
 [%s] %s:%d Completed: Total size: %llu
 [%s] %s:%d failed to read from source: %d
 [%s] %s:%d failed to compress buffer: %d
 [%s] %s:%d failed to write to destination: %d
 [%s] %s:%d [AVC SPATIAL AUDIO] Updated presentation info: %@
 [%s] %s:%d Dropping the frame, Client fell behind. Buffer is full.
 [%s] %s:%d Can't release frame with time %lld, doesn't exist
 [%s] %s:%d NULL transportStreams
 [%s] %s:%d Empty transportStreams array
 [%s] %s:%d Unknown transport stream type
VCAudioReceiver [%s] %s:%d Failed to allocate the audio receiver
VCAudioReceiver [%s] %s:%d Failed to initialize the receiver thread
VCAudioReceiver [%s] %s:%d Creating Audio Receiver with jbTargetEstimatorSynchronizer=%p
VCAudioReceiver [%s] %s:%d Failed to create VCJitterBuffer
VCAudioReceiver [%s] %s:%d Failed to set audio receiver for RTP (%d)
VCAudioReceiver [%s] %s:%d Audio issue detector=%p is created in audio receiver=%p
VCAudioReceiver [%s] %s:%d Initialized AudioReceiver[%p] with JitterBuffer[%p]
VCAudioReceiver [%s] %s:%d Invalid audio receiver (nil)
VCAudioReceiver [%s] %s:%d Cleaning up audioReceiver (0x%p)
VCAudioReceiver [%s] %s:%d Audio issue detector=%p is configured in audio receiver=%p with samples per frame=%d, sample rate=%d
VCAudioReceiver [%s] %s:%d Playback was not initialized before start
VCAudioReceiver [%s] %s:%d Audio issue detector=%p is stopped in audio receiver=%p
VCAudioReceiver [%s] %s:%d AudioReceiver is NULL
VCAudioReceiver [%s] %s:%d Failed to initialize audio receiver (%p) playback.
VCAudioReceiver [%s] %s:%d Done updating audio receiver (%p) decoders. Status=%X
VCAudioReceiver [%s] %s:%d Force to reset audio jitter buffer lag reference
VCAudioReceiver [%s] %s:%d JB: Updated CellTech isCellular[%d] LocalCellTech:%d, RemoteCellTech=%d
VCAudioReceiver [%s] %s:%d ActiveReceiver Stream is NULL
VCAudioReceiver [%s] %s:%d error bad handle
VCAudioReceiver [%s] %s:%d VCAudioReceiver_PullAudioSamples: Failed to grab the lock
VCAudioReceiver [%s] %s:%d Audio is asking for invalid number of samples %d 
VCAudioReceiver [%s] %s:%d AudioReceiver[%p] PullAudioSamples count:%u
VCAudioReceiver [%s] %s:%d Entering short media stall lastReceivedPacketTime=%f, currentTime=%f
VCAudioReceiver [%s] %s:%d Leaving short media stall lastReceivedPacketTime=%f, currentTime=%f, packetCount=%d
VCAudioReceiver [%s] %s:%d AudioReceiver[%p] resetting non target stream %d
VCAudioReceiver [%s] %s:%d Calculated maxBurstLoss in samples: %u, in 20ms blocks: %u, sampleRate: %f
VCAudioReceiver [%s] %s:%d Ignoring audio packet carrying bad red payload!
VCAudioReceiver [%s] %s:%d CollectAWDMetrics:audioReceiver is nil
VCAudioReceiver [%s] %s:%d VCAudioReceiver_CollectAWDMetrics: Failed to grab the lock
VCAudioReceiver [%s] %s:%d WRMInfo is NULL
VCAudioReceiver [%s] %s:%d wrmMetrics is NULL
VCAudioReceiver [%s] %s:%d Receiver is being torn down
VCAudioReceiver [%s] %s:%d Audio issue detector=%p destroyed in audio receiver=%p
VCAudioReceiver [%s] %s:%d VCAudioReceiver cleanup DONE (0x%p)
VCAudioReceiver [%s] %s:%d AudioReceiver[%p] Registered statisticsCollector[%p] with index=%d
VCAudioReceiver [%s] %s:%d Wrong type of statistics message is processed by VCAudioStream type=%d
VCAudioReceiver [%s] %s:%d audioReceiver=%p Transport callbacks already registered
VCAudioReceiver [%s] %s:%d Unsupported packet type:%d
VCAudioReceiver [%s] %s:%d Ignoring invalid incoming RTP media packet.
VCAudioReceiver [%s] %s:%d Bad buffer length bufferLength:%zu
VCAudioReceiver [%s] %s:%d Bad padding length paddingLength:%zu
VCAudioReceiver [%s] %s:%d Could not allocate memory for Audio Packet
VCAudioReceiver [%s] %s:%d received packet time[%f]
VCAudioReceiver [%s] %s:%d RTPMediaPacketToAudioPacket failed
VCAudioReceiver [%s] %s:%d First audio packet received. AudioReceiver[%p] jb[%p] time[%f] timestamp[%d]
VCAudioReceiver [%s] %s:%d AudioReceiver[%p] Unexpected idsParticipantID=%llu, expected=%llu
VCAudioReceiver [%s] %s:%d AudioReceiver[%p] UNEXPECTED: IDS stream ID is not valid
VCAudioReceiver [%s] %s:%d AudioReceiver[%p] Switching audio stream: %d -> %d
VCAudioReceiver [%s] %s:%d Switching Audio Stream configs isOneToOne:%d
VCAudioReceiver [%s] %s:%d CMBlockBufferCreateEmpty failed with error %d
VCAudioReceiver [%s] %s:%d _VCAudioReceiver_Decrypt failed %d
VCAudioReceiver [%s] %s:%d CMBlockBufferGetDataPointer failed
VCAudioReceiver [%s] %s:%d Decrypted payload is smaller than original one: expected at least '%zu', available size '%zu' got '%zu'
VCAudioReceiver [%s] %s:%d VCCryptor_Decrypt failed. result=%x
VCAudioReceiver [%s] %s:%d ERROR unknown payloadType[%d]
VCAudioReceiver [%s] %s:%d [%p]
VCAudioReceiver [%s] %s:%d VCAudioReceiver[%p] Codec rate mode change requested: mode=%u bitrate=%d bandwidth=%d payload=%u rtpTimestamp=%u seqNum=%u evs_ch_rf offset=%d indicator=%d
VCAudioReceiver [%s] %s:%d Audio buffer corrupted. Access unit length=%d, packet length=%d
VCAudioReceiver [%s] %s:%d GSM Audio buffer corrupted. Packet too short (%d < %d)
VCAudioReceiver [%s] %s:%d Audio buffer corrupted. Packet too short (%d < %d), payload=%d
VCAudioReceiver [%s] %s:%d Too many frames in audio packet, possible corruption
VCAudioReceiver [%s] %s:%d Unable to fit audio data into the audioFrame buffer. Data size: %d, padding len: %u
VCAudioReceiver [%s] %s:%d New burst loss entry: SQ: %u, timestamp: %u, isDTX: %d, duration: %u, isValid: %d, AR highest received SQ: %u, AR packet entry count: %u
VCAudioReceiver [%s] %s:%d received VTP_PKT_BBNOTE
VCAudioReceiver [%s] %s:%d Received local codec rate mode change request
VCAudioReceiver [%s] %s:%d Received RTCP SR
VCAudioReceiver [%s] %s:%d Received RTCP Custom SR
VCAudioReceiver [%s] %s:%d Received RTCP RR
VCAudioReceiver [%s] %s:%d Received unknown RTCP packetType=%u
VCAudioReceiver [%s] %s:%d Could not get the local SSRC
VCAudioReceiver [%s] %s:%d AudioReceiver[%p] Unregistered statisticsCollector[%p] with index=%d
VCAudioReceiver [%s] %s:%d Failed to unregister the reporting task: (0x%p)
VCAudioReceiver [%s] %s:%d [%p] participantID=%s Total(Received=%u expected=%u lost=%u) Reporting interval(Received=%u expected=%u lost=%u)
VCAudioReceiver [%s] %s:%d [%p] participantID=%s Expected packet count decreased, resetting counts. Received=%u expected=%u lost=%u
VCAudioReceiver [%s] %s:%d @=@ Health: VCAudioReceiver ParticipantID=%s erasure percentage=%.2f%% PLR percentage=%.2f%% current percentage:%.2f%% (rec:%u exp:%u, loss:%u)
VCAudioReceiver [%s] %s:%d [%p] participantID=%s idsStreamID=%u Total(Received=%u expected=%u lost=%u)
VCAudioReceiver [%s] %s:%d AudioReceiver[%p] Detected timestamp rollover
VCAudioReceiver [%s] %s:%d AudioReceiver[%p] Detected misordered packet during timestamp rollover
VCAudioReceiver [%s] %s:%d Tearing down audio receiver thread
VCAudioReceiver [%s] %s:%d ERROR bad handle
VCAudioReceiver [%s] %s:%d Audio receiver %p RTPRecvRTP returned[%x] sleeping 15000usecs??
VCAudioReceiver [%s] %s:%d Audio receiver %p received an error %x
VCAudioReceiver [%s] %s:%d Failed to retrieve RTCP packet. Error:%x
VCAudioReceiver [%s] %s:%d High audio erasure rate: %f
VCAudioReceiver [%s] %s:%d Collected AWD metric samples (rtpPacketLossRate=%f, jitterBufferUnderflowRate=%f, frameErasureRate=%f, speechErasureRate=%f, jitterBufferResidencyTime=%f, payloadType=%d, sampleRate=%d, bitRate=%d, ratType=%d)
 [%s] %s:%d JitterPreloadQueue: Allocation failed as the Queue is not valid
 [%s] %s:%d JitterPreloadQueue: Create Failed
 [%s] %s:%d JitterPreloadQueue: Failed to created Audio Packet Pool
 [%s] %s:%d JitterPreloadQueue: Failed to created Audio Frame Pool
 [%s] %s:%d JitterPreloadQueue: Too many frames seen in audio packet, possible corruption
 [%s] %s:%d Queue=%p is full
 [%s] %s:%d VCAudioTransmitter[%p] Codec rate mode change request had incorrect bitrate: mode=%u, bitrate=%u
 [%s] %s:%d VCAudioTransmitter[%p] Payload in codec mode change event does not match current payload: payload=%d, currentPayload=%d
 [%s] %s:%d VCAudioTransmitter[%p] Attempting to update to an unsupported codec bitrate: payload=%d, supportedBitrates=%@, bitrate=%d
 [%s] %s:%d VCAudioTransmitter[%p] Payload in codec mode change event does not match current payload: payload=%d currentPayload=%d
 [%s] %s:%d VCAudioTransmitter[%p] Attempting to update to an unsupported codec bandwidth: payload=%d, supportedBandwidths=%@, bitrate=%d
 [%s] %s:%d Coded rate mode and bandwidth combination is not supported for payload=%u. mode=%u bandwidth=%u
 [%s] %s:%d VCAudioTransmitter[%p] EVSCodec rfparams change requested offset=%u indicator=%u 
 [%s] %s:%d VCAudioTransmitter[%p] Codec bandwidth change requested for payload=%u: mode=%u bandwidth=%u
 [%s] %s:%d VCAudioTransmitter[%p] Codec rate mode change requested for payload=%u: mode=%u bitrate=%u
 [%s] %s:%d VCAudioTransmitter[%p] Requested codec rate mode change: mode=%u bandwidth=%u
 [%s] %s:%d VCAudioTransmitter[%p] Failed requesting codec rate mode change: mode=%u bandwidth=%u
 [%s] %s:%d [%p] Failed to compute audio Tx bit rate because timePeriod=%fs < (AUDIO_TRANSMITTER_MIN_BITRATE_REPORT_PERIOD=%fs)
 [%s] %s:%d @=@ Health: AudioTransmitter [%p] audioTxBitrate=%ukbps, audioFecTx=%f, primaryAudioTxRate=%ukbps, audioStreamRedundancyLevel=%u, _qualityIndex=%u
 [%s] %s:%d %@(%p) Failed to allocate reporting dictionary
 [%s] %s:%d Failed to allocate current payload value
 [%s] %s:%d %@(%p) Failed to allocate current payload value
 [%s] %s:%d Failed to allocate codec bitrate value
 [%s] %s:%d %@(%p) Failed to allocate codec bitrate value
 [%s] %s:%d Failed to allocate redundancy level value
 [%s] %s:%d %@(%p) Failed to allocate redundancy level value
 [%s] %s:%d Failed to allocate redundancy delay value
 [%s] %s:%d %@(%p) Failed to allocate redundancy delay value
 [%s] %s:%d error zero sampleBufferSize requested
 [%s] %s:%d encoderSamplePerFrame:%d bufferedSamples:%d totalSamples:%d timestamp:%d
 [%s] %s:%d Switching audio bitrates without changing tier %d -> %d
 [%s] %s:%d Time Hysteresis preventing tier upgrade from %d to %d, last upgrade at %6.3f
 [%s] %s:%d Switching audio bitrate tier payload %d -> %d for total tx %d: netBitrate %d -> %d, bundle %d -> %d
 [%s] %s:%d Overriding suggested red value %d with red value %u
 [%s] %s:%d Tier Table for Operating Mode %d
 [%s] %s:%d Setting audioTxBitrate to %d, %d audio + %d ((%d/%d+%d)*%d/%d) header
 [%s] %s:%d Switching payloads -> %d %d samplesPerFrame
 [%s] %s:%d Audio issue detector=%p is started in audio transmitter=%p
 [%s] %s:%d %@(%p) Audio issue detector=%p is started in audio transmitter=%p
 [%s] %s:%d Audio issue detector=%p is stopped in audio transmitter=%p
 [%s] %s:%d %@(%p) Audio issue detector=%p is stopped in audio transmitter=%p
 [%s] %s:%d numPayloads:%d maxDelay(in20ms):%d shouldResetHistory=%d
 [%s] %s:%d redundancyPercentage=%d
 [%s] %s:%d %@(%p) redundancyPercentage=%d
 [%s] %s:%d Notification is null
 [%s] %s:%d VCAudioTransmitter[%p] Cellular Network Notification: timestamp=%llu radioAccessTechnology=%u referenceSignalLevel=%d signalLevel=%d signalQuality=%d uplinkBler=%u bandwidthLimitationIndication=%u cdrxCycleLength=%u
 [%s] %s:%d Audio issue detector=%p is configured in audio transmitter=%p with samples per frame=%d, sample rate=%d
 [%s] %s:%d %@(%p) Audio issue detector=%p is configured in audio transmitter=%p with samples per frame=%d, sample rate=%d
 [%s] %s:%d Audio issue detector=%p is stopped and destroyed in audio transmitter=%p
 [%s] %s:%d %@(%p) Audio issue detector=%p is stopped and destroyed in audio transmitter=%p
 [%s] %s:%d Failed to allocate the codec bitrate value
 [%s] %s:%d Transmitter object is nil
 [%s] %s:%d wrmMetrics is NULL
 [%s] %s:%d NULL access: context=[%p], rtpPacketInfo=[%p]
 [%s] %s:%d Invalid red payload!
 [%s] %s:%d Invalid payload!
 [%s] %s:%d packet payload contains incorrect data size '%d'
 [%s] %s:%d CMBlockBufferIsRangeContinuous failed
 [%s] %s:%d Unable to add samples to the bundle!
 [%s] %s:%d VCAT bundleAndSendSamples: frame#[%d] payload[%d] numBytes[%d] %s[%d]
 [%s] %s:%d transmitter=%p Current ROC=%d
 [%s] %s:%d buffer: CAN'T BUFFER (%08X:%02d:%02d)...
 [%s] %s:%d buffer: FAILED TO BUFFER A RELIABLE PACKET SERIALNUMBER (%08X:%02d:%02d)...
 [%s] %s:%d ARPLSessionCreate: new session (%08X)...
 [%s] %s:%d ARPL_Sendto(%d): send %ld bytes %s ...
 [%s] %s:%d ARPL %p send: BUFFERED A NEW RELIABLE PACKET SERIALNUMBER (%08X:%02d:%02d) to (%08X)...
 [%s] %s:%d ARPL %p send: FAILED TO BUFFER A RELIABLE PACKET ..
 [%s] %s:%d ARPLSessionRelease: enter...
 [%s] %s:%d ARPLSessionRelease: old session (%08X)...
 [%s] %s:%d ARPLSessionRelease: delete...
 [%s] %s:%d ARPLSessionRelease: done...
 [%s] %s:%d ERROR: CAN'T RESEND (BAD TIMESTAMP) !!!!!!!!!!!!
 [%s] %s:%d %p check: RESEND serial number %08X to destination %08X INDEX %d
 [%s] %s:%d ERROR: CAN'T RESEND (BAD ADDRESS) !!!!!!!!!!!!
 [%s] %s:%d No processing should be run for the output queue!
 [%s] %s:%d Cannot not call connect from for the output queue!
 [%s] %s:%d Key=%@ present in carrier bundle, value=%d
 [%s] %s:%d Key=%@ either not present in carrier bundle or out of range, value=%d default value=%d
 [%s] %s:%d UplinkRateAdaptation config=%@
 [%s] %s:%d %@(%p) UplinkRateAdaptation config=%@
AVCVirtualTTYDevice [%s] %s:%d mode=%d, streamToken=%u error=%@
@:@ AVCVirtualTTYDevice-init
AVCVirtualTTYDevice [%s] %s:%d @:@ AVCVirtualTTYDevice-init (%p) mode=%d, streamToken=%d, error=%@
AVCVirtualTTYDevice [%s] %s:%d 
@:@ AVCVirtualTTYDevice-dealloc
AVCVirtualTTYDevice [%s] %s:%d @:@ AVCVirtualTTYDevice-dealloc (%p)
AVCVirtualTTYDevice [%s] %s:%d delegate=%@
@:@ AVCVirtualTTYDevice-start
AVCVirtualTTYDevice [%s] %s:%d @:@ AVCVirtualTTYDevice-start (%p)
@:@ AVCVirtualTTYDevice-stop
AVCVirtualTTYDevice [%s] %s:%d @:@ AVCVirtualTTYDevice-stop (%p)
AVCVirtualTTYDevice [%s] %s:%d Sending text:0x%04x '%C'
@:@ AVCVirtualTTYDevice-sendCharacter
AVCVirtualTTYDevice [%s] %s:%d @:@ AVCVirtualTTYDevice-sendCharacter (%p) error=%@
AVCVirtualTTYDevice [%s] %s:%d Sending text:%@
AVCVirtualTTYDevice [%s] %s:%d %d/%d: 0x%04x '%C'
AVCVirtualTTYDevice [%s] %s:%d %@ has not started.
@:@ AVCVirtualTTYDevice-sendText
AVCVirtualTTYDevice [%s] %s:%d @:@ AVCVirtualTTYDevice-sendText (%p) Not started
AVCVirtualTTYDevice [%s] %s:%d @:@ AVCVirtualTTYDevice-sendText (%p)
AVCVirtualTTYDevice [%s] %s:%d didStartConnectionBlock: error = %p, result = %s
AVCVirtualTTYDevice [%s] %s:%d AVCVirtualTTYDevice: didStartConnectionBlock: strongSelf == nil
AVCVirtualTTYDevice [%s] %s:%d AVCVirtualTTYDevice: didStartConnectionBlock strongSelf started(%d)
@:@ AVCVirtualTTYDevice-didStart
AVCVirtualTTYDevice [%s] %s:%d @:@ AVCVirtualTTYDevice-didStart (%p) didSucceed=%d
AVCVirtualTTYDevice [%s] %s:%d AVCVirtualTTYDevice: notified client %p of didStart started[%d]
@:@ AVCVirtualTTYDevice-didStop
AVCVirtualTTYDevice [%s] %s:%d @:@ AVCVirtualTTYDevice-didStop (%p)
AVCVirtualTTYDevice [%s] %s:%d AVCVirtualTTYDevice: notified client %p of didStop
AVCVirtualTTYDevice [%s] %s:%d Received text:0x%04x '%C'
@:@ AVCVirtualTTYDevice-didReceiveCharacter
AVCVirtualTTYDevice [%s] %s:%d @:@ AVCVirtualTTYDevice-didReceiveCharacter (%p)
AVCVirtualTTYDevice [%s] %s:%d Delegate %@ does not respond to -device:didReceiveCharacter:
AVCVirtualTTYDevice [%s] %s:%d Received an empty string
AVCVirtualTTYDevice [%s] %s:%d Received text:%@
@:@ AVCVirtualTTYDevice-didReceiveText
AVCVirtualTTYDevice [%s] %s:%d @:@ AVCVirtualTTYDevice-didReceiveText (%p)
AVCVirtualTTYDevice [%s] %s:%d Delegate %@ does not respond to -device:didReceiveText:
 [%s] %s:%d Missing payloadType
 [%s] %s:%d payload:%d Invalid Codec SampleRate
 [%s] %s:%d payload:%d Invalid internal bundle factor
 [%s] %s:%d payload:%d Invalid block size
 [%s] %s:%d payload:%d Invalid payload configuration, isOpusInBandFecEnabled:%d
 [%s] %s:%d forceAACELDBitRate to %d
 [%s] %s:%d Lag processor initialized with invalid pointer
 [%s] %s:%d Invalid parameter passed to lag processor new stream. LagProcessor=%p, lagPacket=%p, TSRate=%u, samplesPerFrame=%u
 [%s] %s:%d Invalid parameter passed to lag processor. LagProcessor=%p lagPacket=%p samplesPerFrame=%d videoQSize=%d, state=%d
 [%s] %s:%d Skip lag computation
 [%s] %s:%d Spurious lag noted (Pkt: SN:0X%4X TS:0X%8X) (Ref: SN:0X%4X TS:0X%8X)
 [%s] %s:%d Moving reference to secondary (Was: SN:0X%4X TS:0X%8X) (Now: SN:0X%4X TS:0X%8X), reset:%d
 [%s] %s:%d Reference changed. Reset OWRD
 [%s] %s:%d Spike detected! Discarding lag sample %f
 [%s] %s:%d Lag (%fs) looks spurious (short %fs: long %fs : threshold %fs), discarding
 [%s] %s:%d Just picked a new reference. OWRD should have been reset. OWRD = %f
 [%s] %s:%d Samples per frame looks incorrect %d
 [%s] %s:%d Entering OWRD SPIKE %.4f - %.4f > %.4f
 [%s] %s:%d Leaving OWRD SPIKE due to recovery
 [%s] %s:%d Leaving OWRD SPIKE due to flatness
 [%s] %s:%d Leaving OWRD SPIKE due to timeout %d
 [%s] %s:%d Bundling looks incorrect %d
 [%s] %s:%d Large Jump seen in sequence number %u startSeq=%u
 [%s] %s:%d Noted jump in AddLagToHistory %f
 [%s] %s:%d Lag is not statistically relevant. LastMinTimestamp=%d, stdev=%f, mean=%f, stdevMult=%f, skew=%f, kurtosis=%f, threshold=%f, candMinLag=%f, finalMinLag=%f
 [%s] %s:%d Incorrect bundling, it should never be zero
 [%s] %s:%d Attempting to add lag value to cdf with an index out of range
 [%s] %s:%d Failed to update the target size estimated prior to synchronization
 [%s] %s:%d Could not create VTP socket for VCTransportStream for sessionID=%d
 [%s] %s:%d Created VCTransportStream object [%p] for sessionID %d, with vfd:%d, vfdCancel:%d
 [%s] %s:%d dealloc [%p]
 [%s] %s:%d invalid packet
 [%s] %s:%d Failed to allocate media packet. (%X)
 [%s] %s:%d Failed to add media packet. (%X)
 [%s] %s:%d Invalid socket, return
 [%s] %s:%d VTP_Recvfrom(%d) failed(%08X) for sessionID=%d
 [%s] %s:%d transportStream[%p] callback %p or callback context %p is invalid
 [%s] %s:%d transportStream[%p] socket[%d] is invalid
 [%s] %s:%d transportStream[%p] already registered a vtpCallbackId [%d]
 [%s] %s:%d transportStream[%p] cannot unregister an invalid vtpCallbackId [%d]
 [%s] %s:%d Recomputed tier table. isRedundancyEnabled=%d
 [%s] %s:%d %@(%p) Recomputed tier table. isRedundancyEnabled=%d
 [%s] %s:%d Reached max screen encoders=%d
 [%s] %s:%d %@(%p) Reached max screen encoders=%d
 [%s] %s:%d Printing Table ########### 
 [%s] %s:%d %@(%p) Printing Table ########### 
 [%s] %s:%d Bandwidth %@, streamToken:%@, %@
 [%s] %s:%d %@(%p) Bandwidth %@, streamToken:%@, %@
 [%s] %s:%d Turning effects back on is not supported
 [%s] %s:%d Turning off effect: %@
 [%s] %s:%d Notifying effects[%@] client to flush remote queue
 [%s] %s:%d Sending video frame to extension to process
 [%s] %s:%d Sending video frame to AVC to process
 [%s] %s:%d Sending video frame to client to be processed
 [%s] %s:%d Dropping video frame due to effects being disabled
 [%s] %s:%d @=@ Health: VCEffectsManager Frames Sent: %d (%f FPS) Frames Received: %d (%f FPS) Frames Dropped: %d Frames Failed: %d
 [%s] %s:%d Cannot send frames to AVCEffects. Consecutive Dropped frames: %d
 [%s] %s:%d Have not received frames from AVCEffects. Sent Frames: %d Received Frames: %d
VCAudioPlayer [%s] %s:%d holeDetectionThreshold=%f
VCAudioPlayer [%s] %s:%d Failed to allocate Input playback buffer
VCAudioPlayer [%s] %s:%d Failed to allocate Output playback buffer
VCAudioPlayer [%s] %s:%d Failed to allocate last Decoded playback buffer
VCAudioPlayer [%s] %s:%d VCAudioPlayer pointer is NULL
VCAudioPlayer [%s] %s:%d Invalid number of channels[%d]
VCAudioPlayer [%s] %s:%d Player: Failed allocating in/out buffers
VCAudioPlayer [%s] %s:%d Player: Failed initializing Crossfade
VCAudioPlayer [%s] %s:%d Player: Failed initializing Timescaler
VCAudioPlayer [%s] %s:%d AudioPlayer[%p] Failed initializing DTMF
VCAudioPlayer [%s] %s:%d Audio Player initialized with sampleRate=%d, bufferQueueManagementMode=%d, timescaleAlgorithm=%d, channelsPerFrame=%d dtmfTonePlaybackEnabled=%d minJitterBufferQueueSize=%d
VCAudioPlayer [%s] %s:%d New Stream
VCAudioPlayer [%s] %s:%d Finalizing Audio Player
VCAudioPlayer [%s] %s:%d Fraction of missing packets during 5 seconds = %f, missing = %d, total = %d, average = %f [max interarrival = %f, average jitter size = %f, average interarrival = %f]
VCAudioPlayer [%s] %s:%d Suspend queue growth audio frame %d queueSize %d AvgQsize %f
VCAudioPlayer [%s] %s:%d %7.03f: backtrack: %.01fms (%u - %u,%u,%d,%u) (Jitter Size = %f) DTX %d Seq num %d
VCAudioPlayer [%s] %s:%d %7.03f: silence: %.01fms
VCAudioPlayer [%s] %s:%d %7.03f: jump: %.01fms
VCAudioPlayer [%s] %s:%d Target Boost targetBoostType=%d, currentActiveTargetSize=%lf
VCAudioPlayer [%s] %s:%d Timestamp did not increment: %d
VCAudioPlayer [%s] %s:%d DTMFGenerator: Timestamp did not increment, timestamp=%d
VCAudioPlayer [%s] %s:%d Queue steering callbacks configured
VCAudioPlayer [%s] %s:%d Queue growth suspended as silence period=%f is low
VCAudioPlayer [%s] %s:%d [%p] Detected a time gap of %0.6f seconds (larger than %0.6f threshold). Incrementing by sampleCount=%d instead of by oldSampleCount=%d.
VCAudioPlayer [%s] %s:%d Adjust[%f] AvgQSize[%f] DesiredQsize[%f] QueuedSamples[%d]
VCAudioPlayer [%s] %s:%d Warning: Protecting minimum queue. packetLifetimeIsLow=%d, packetLifeTime5Perc=%f threshold=%f
VCAudioPlayer [%s] %s:%d Queue Steering: Algorithm provided ambiguous output, skipping this instance
VCAudioPlayer [%s] %s:%d Queue Steering: Resetting queue growth state
VCAudioPlayer [%s] %s:%d Queue Steering: Failed to steer queue in direction %d
VCAudioPlayer [%s] %s:%d Queue Steering: Growing queue to protect against low packet lifetime and erasures
VCAudioPlayer [%s] %s:%d Queue Steering: %s shrinking queue
VCAudioPlayer [%s] %s:%d JQ too high, discarding. CurrentJQSize:%f currentTime:%f lastSpkrCallback:%f
VCAudioPlayer [%s] %s:%d Please file a radar on AVConference Media | All. Average JB queue size is negative! Current size: %f, new size: %f, jitter samples: %f
VCAudioPlayer [%s] %s:%d NewJQSize:%f
VCAudioPlayer [%s] %s:%d  sampleCount<=0 breaking loop %d
VCAudioPlayer [%s] %s:%d Timeout in audio player decoder loop, breaking. Updating samplesToDecode to %d
VCAudioPlayer [%s] %s:%d Invalid samplesToDecode=%d, samplesNeed=%d, inputBuffer.playbackBuffer=%p, inputBuffer.samples=%d, decoded=%d
VCAudioPlayer [%s] %s:%d Decode : RequiredTimeStamp[%d] SelectedTimeStamp[%d] DTX[%d] seq[%d]
VCAudioPlayer [%s] %s:%d SoundDec_Decode failed (%x). Previous payload=%d, payload=%d, dtx=%d lastSeq=%x seq=%x reset=%d firstFrameDecoded=%d
VCAudioPlayer [%s] %s:%d nil decode for crossfade failed (%x). Previous payload=%d, payload=%d, history=%x lastSeq=%x seq=%d reset=%d
VCAudioPlayer [%s] %s:%d SoundDec_GetOpusDecodeFECStatus soundDec=%p fecStatus=%u
VCAudioPlayer [%s] %s:%d Late packets played=%d currentTimestamp=%u currentSeqNum=%d
VCAudioPlayer [%s] %s:%d QueueSteering: Adding frame to history. Index=%d, packetLifeTime=%f, erasureCount=%d
VCAudioPlayer [%s] %s:%d QueueSteering: packetLifeTimeAvg=%f, frameErasurecount=%u 
VCAudioPlayer [%s] %s:%d QueueSteering: Packet Lifetime 5 percentile %f
VCAudioPlayer [%s] %s:%d QueueSteering: Packet Lifetime 10 percentile %f
VCAudioPlayer [%s] %s:%d QueueSteering: Packet Lifetime 90 percentile %f
VCAudioPlayer [%s] %s:%d Unexpected burstInfo->state=%d
VCAudioPlayer [%s] %s:%d nil decode failed (%x). Previous payload=%d, history=%x, dtx=%d lastSeq=%x reset=%d sampleCount=%d
VCAudioPlayer [%s] %s:%d  Decode Buffer Overflow, adding %d = >
VCAudioPlayer [%s] %s:%d  clipped to %d
VCAudioPlayer [%s] %s:%d Missing a packet %f [expected seq = %x] DTX[%d]
VCAudioPlayer [%s] %s:%d bytesPerFrame is zero while calculating input samples
VCAudioPlayer [%s] %s:%d Audio Frame seq[%d] rms[%f] rmsAvg[%f] channel[%d]
VCAudioPlayer [%s] %s:%d Audio Frame seq[%d] energyInfo.rms[%f] energyInfo.RMSAvg[%f]
VCAudioPlayer [%s] %s:%d Audio Frame seq[%d] energy[%f] energyInfo.energyAvg[%f] channel[%d]
VCAudioPlayer [%s] %s:%d Audio Frame seq[%d] energyInfo.energy[%f] energyInfo.energyAvg[%f]
VCAudioPlayer [%s] %s:%d %7.03f: %-4i  skip %i -> %i adjust %d
VCAudioPlayer [%s] %s:%d %7.03f: %-4i  dup  %i -> %i
VCAudioPlayer [%s] %s:%d Please file a radar on AVConference Media | All. Average JB queue size is negative! Current size: %f, new size: %f, samplesDelta: %d, needed samples: %d, audioPlayer mode: %d, silent: %d
VCAudioPlayer [%s] %s:%d Number of samples in the input buffer would have become negative! samples=%d samplesIn=%d
VCAudioPlayer [%s] %s:%d Number of samples in the output buffer would have become negative! samples=%d sampleCount=%d
VCAudioPlayer [%s] %s:%d Channel count mismatch! sampleBufferChannelCount=%hhu audioPlayerChannelCount=%d
VCAudioPlayer [%s] %s:%d %s: Took a long time %fs
 [%s] %s:%d Send callback is null
 [%s] %s:%d Failed to allocate packetThread struct
 [%s] %s:%d packetThread=%p Failed to create dispatch_semaphore
 [%s] %s:%d packetThread=%p Failed to allocate packetPool of %u packets
 [%s] %s:%d packetThread=%p Failed to allocate buffers of %u
 [%s] %s:%d packetThread=%p Failed to create packet thread %d
 [%s] %s:%d packetThread=%p PacketThread_Create completed for %s
 [%s] %s:%d IOProc: packetThread=%p _PacketThread_StorePacket failed to store a buffer
 [%s] %s:%d packetThread=%p PacketThread_SendPacket called with too many bytes %d
 [%s] %s:%d packetThread=%p PacketThread_Destroy complete.
 [%s] %s:%d packetThread=%p SendPacketsProc starting
 [%s] %s:%d packetThread=%p SendPacketsProc ending. dispatch_semaphore_wait returned %ld
 [%s] %s:%d packetThread=%p SendPacketsProc got lapped! sent %d stored %d, dropping packets.
 [%s] %s:%d packetThread=%p SendPacketsProc failed to fetch a packet
 [%s] %s:%d VideoConferenceDefaults: Forced screen capture settings: %dx%d@%dfps
 [%s] %s:%d VideoConferenceDefaults: Found enableRxDecodeYUVDump set to %d
 [%s] %s:%d VideoConferenceDefaults: Found enableRxDecodeYUVDump but the value[%d] is invalid (should be 1 or 2)
 [%s] %s:%d VideoConferenceDefaults: Found enableTxSourceYuvDump set to %d
 [%s] %s:%d VideoConferenceDefaults: Found enableTxSourceYuvDump but the value[%d] is invalid (should be 1 or 2)
 [%s] %s:%d VideoConferenceDefaults: Found bundleAudio. Bundling %d audio packets
 [%s] %s:%d VideoConferenceDefaults: Found bundleAudio but the value[%d] is invalid (should be 1-10)
 [%s] %s:%d allowAudioRecording: %d keyExists: %d
 [%s] %s:%d %@(%p) allowAudioRecording: %d keyExists: %d
 [%s] %s:%d OneToOne mode supported %d
 [%s] %s:%d VideoConferenceDefaults: %@=%d
 [%s] %s:%d VideoConferenceDefaults: %@=%u
 [%s] %s:%d key=%s Value=%.3f
 [%s] %s:%d %@=%d
 [%s] %s:%d Key %s: Value %d
 [%s] %s:%d %@=%@
 [%s] %s:%d Invalid VFD
 [%s] %s:%d transportSessionID=%u
 [%s] %s:%d Invalid traffic class %d
 [%s] %s:%d [%p] vfd = %d, options = %@
 [%s] %s:%d Parameter 'stream' should not be NULL
 [%s] %s:%d VTP_GetPreferredSendQueue failed - %d
 [%s] %s:%d VTP_Getsockname failed - %d
 [%s] %s:%d NULL receiveHopLimit
 [%s] %s:%d Parameter 'transportStream' should not be NULL
 [%s] %s:%d propertyKey=%@ and propertyValue=%@ must not be NULL
 [%s] %s:%d Unsupported propertyKey=%@ requested
 [%s] %s:%d _VCTransportStreamVTPCopyIsIPv6 failed, result=0x%08x
 [%s] %s:%d set sockopt IPV6_RECVHOPLIMIT/IP_RECVTTL failed , result=0x%08x
 [%s] %s:%d Send on non-activated stream
 [%s] %s:%d NULL packet data
 [%s] %s:%d streamIDCount=%u is greater than max=%u
 [%s] %s:%d Packet data too big %ld
 [%s] %s:%d CMBlockBufferAccessDataBytes failed %x
 [%s] %s:%d VTP_Send failed with errno=%d vfd=%d localCallID=%d, dataLength=%zu
 [%s] %s:%d NULL packetFilter
 [%s] %s:%d setPacketFilter only allowed in created state
 [%s] %s:%d VTP_SetPktType failed %d
 [%s] %s:%d Unsupported packet filter type %@
 [%s] %s:%d NULL packet filter
 [%s] %s:%d NULL remoteSSRCProperty
 [%s] %s:%d Remote SSRC not set on filter
 [%s] %s:%d Invalid vfd
 [%s] %s:%d Payload list not set on filter
 [%s] %s:%d Empty payloadList
 [%s] %s:%d Failed to allocate payloadListValue
 [%s] %s:%d VTP_SetPayloadList failed %d
 [%s] %s:%d Local SSRC not set on filter
 [%s] %s:%d VTP_SetRemoteSSRC failed %d
 [%s] %s:%d Cellular Unique Tag not set on filter
 [%s] %s:%d VTP_SetCellularUniqueTag failed %d
 [%s] %s:%d NULL packetFilter pointer
 [%s] %s:%d receivedHandler not set
 [%s] %s:%d Cannot perform receive. Not in activated state
 [%s] %s:%d Trying to perform receive on a transportStream that is not externally scheduled
 [%s] %s:%d Transport stream deactivated
 [%s] %s:%d VTP_Recvfrom failed %x
 [%s] %s:%d Dropping packet. Not in activated state
 [%s] %s:%d Activation only allowed in created state
 [%s] %s:%d regiterPacketCallback only allowed in created state
 [%s] %s:%d Cannot deactivate a non-activated stream
 [%s] %s:%d MediaControlInfo is nil
 [%s] %s:%d Invalid mediaControlInfo.
 [%s] %s:%d Invalid buffer for serialization.
 [%s] %s:%d Not enough buffer for media control info
 [%s] %s:%d Missing CVO info
 [%s] %s:%d NULL input paramter
 [%s] %s:%d Missing feedback info
 [%s] %s:%d Wrong MediaControlInfoVersion %d
 [%s] %s:%d Missing media queue info
 [%s] %s:%d bufferFilledSize(%zu) does not match totalLength(%zu)
 [%s] %s:%d Bad buffer length(%zu) for FaceTime audio media control info, expecting %u
 [%s] %s:%d Bad version(%u) for FaceTime audio media control info, expecting %u
 [%s] %s:%d The remote caller is likely in an incompatible AVConference build, please update to AVConference build latest OR after <rdar://problem/49225282> Fix AFRC feedback FaceTimeMediaControlInfoHeaderAudioV2 in LITTLE_ENDIAN case
 [%s] %s:%d Bad data length for FaceTime audio media control info
 [%s] %s:%d Not enough buffer for connection stats
 [%s] %s:%d Bad data buffer length for FaceTime audio media control info
 [%s] %s:%d VCMediaControlInfoUnserializeWithData failed with error %08X for FaceTime audio
 [%s] %s:%d Handle optional control info failed with error %08X for FaceTime audio
 [%s] %s:%d Does not support type %d
 [%s] %s:%d Bad buffer length(%zu) for FaceTime video media control info, expecting %zu
 [%s] %s:%d Bad version(%u) for FaceTime video media control info, expecting %u
 [%s] %s:%d Bad data length(%zu) for FaceTime video media control info, expecting %lu
 [%s] %s:%d Not enough buffer for LTR Timestamp
 [%s] %s:%d Not enough buffer for Frame Support Information
 [%s] %s:%d Not enough buffer for probe
 [%s] %s:%d Not enough buffer for FEC
 [%s] %s:%d FEC oversized
 [%s] %s:%d Bad data buffer length for FaceTime video media control info
 [%s] %s:%d Handle optional control info failed with error %08X for FaceTime video
 [%s] %s:%d Not enough buffer(%zu) for media control info, need %zu
 [%s] %s:%d Bad buffer length(%zu) for Multiway audio media control info, expecting %u
 [%s] %s:%d Missing ROC info
 [%s] %s:%d Missing MKI info
 [%s] %s:%d Failed to create rules for secondary screen!
 [%s] %s:%d Secondary Screen rules: Could not find a preferred video rule
 [%s] %s:%d Secondary Screen rules: no H264 support
 [%s] %s:%d Secondary Screen rules: Could not retrieve main screen width
 [%s] %s:%d Secondary Screen rules: Could not retrieve main screen height
 [%s] %s:%d Secondary Screen rules: Could not retrieve hardware encoder type
 [%s] %s:%d Device has no Secondary Screen rules
 [%s] %s:%d Resolution(%f x %f)  not supported. Defaulting to 2048x1536
VCCallSession [%s] %s:%d Failed to get image buffer
VCCallSession [%s] %s:%d remoteScreenAspectRatio %.0f:%.0f (%f), remoteExpectedAspectRatio %.0f:%.0f (%f), encode %.0f:%.0f (%f) --> visibleAspectRatio %.0f:%.0f (%f)
 [%s] %s:%d %@
@:@ AVCSession-dealloc
 [%s] %s:%d @:@ AVCSession-dealloc (%p)
 [%s] %s:%d Session change to muted[%d]
 [%s] %s:%d %@(%p) Session change to muted[%d]
 [%s] %s:%d Session change to volume[%f]
 [%s] %s:%d %@(%p) Session change to volume[%f]
 [%s] %s:%d Session change to oneToOneEnabled[%d]
 [%s] %s:%d %@(%p) Session change to oneToOneEnabled[%d]
 [%s] %s:%d Session is already configure with oneToOneMode Enabled[%d]
 [%s] %s:%d %@(%p) Session is already configure with oneToOneMode Enabled[%d]
 [%s] %s:%d oneToOneModeEnabled[%d]
 [%s] %s:%d %@(%p) oneToOneModeEnabled[%d]
 [%s] %s:%d Session change to audio enabled[%d]
 [%s] %s:%d %@(%p) Session change to audio enabled[%d]
 [%s] %s:%d Session change to video enabled[%d]
 [%s] %s:%d %@(%p) Session change to video enabled[%d]
 [%s] %s:%d Session change to screen enabled[%d]
 [%s] %s:%d %@(%p) Session change to screen enabled[%d]
 [%s] %s:%d Session change to audio paused[%d]
 [%s] %s:%d %@(%p) Session change to audio paused[%d]
 [%s] %s:%d Session change to video paused[%d]
 [%s] %s:%d %@(%p) Session change to video paused[%d]
 [%s] %s:%d Forcing mediaNegotiatorVersion=%d
 [%s] %s:%d Unknown protocol version=%d
 [%s] %s:%d Negotiation blob requested with protocol version=%d
 [%s] %s:%d [AVC SPATIAL AUDIO] Receivieng presentation info: rect=[%f, %f, %f, %f] didplayID=%u layout=%d state=%u
 [%s] %s:%d Invalid layout=%u
 [%s] %s:%d %@(%p) Invalid layout=%u
 [%s] %s:%d Invalid display width=%f
 [%s] %s:%d %@(%p) Invalid display width=%f
 [%s] %s:%d Invalid display height=%f
 [%s] %s:%d %@(%p) Invalid display height=%f
 [%s] %s:%d Invalid state=%u
 [%s] %s:%d %@(%p) Invalid state=%u
 [%s] %s:%d [AVC SPATIAL AUDIO] Presentation info updated: %@
 [%s] %s:%d transportToken[%@]
 [%s] %s:%d %@(%p) transportToken[%@]
 [%s] %s:%d Transport token is nil
 [%s] %s:%d %@(%p) Transport token is nil
 [%s] %s:%d Non-nil parentNWActivity is unactivated!
 [%s] %s:%d %@(%p) Non-nil parentNWActivity is unactivated!
 [%s] %s:%d localParticipant [%p] has been created and stateQueue [%p] and shared xpc connection [%p] have been set
 [%s] %s:%d %@(%p) localParticipant [%p] has been created and stateQueue [%p] and shared xpc connection [%p] have been set
 [%s] %s:%d failed transportToken[%@]
 [%s] %s:%d %@(%p) failed transportToken[%@]
@:@ AVCSession-init
 [%s] %s:%d @:@ AVCSession-init (%p)
 [%s] %s:%d @:@ AVCSession-init (%p) localParticipantID=%@, transportToken=%@
 [%s] %s:%d Session change to media type=%d state=%d
 [%s] %s:%d %@(%p) Session change to media type=%d state=%d
 [%s] %s:%d Unable to add nil participant
 [%s] %s:%d %@(%p) Unable to add nil participant
 [%s] %s:%d participants[%@]
 [%s] %s:%d %@(%p) participants[%@]
@:@ AVCSession-addParticipants
 [%s] %s:%d @:@ AVCSession-addParticipants (%p) %@
 [%s] %s:%d participantIDs[%@]
 [%s] %s:%d %@(%p) participantIDs[%@]
@:@ AVCSession-removeParticipants
 [%s] %s:%d @:@ AVCSession-removeParticipants (%p) %@
@:@ AVCSession-start
 [%s] %s:%d @:@ AVCSession-start (%p) audioEnabled=%d, audioPaused=%d, audioMuted=%d, videoEnabled=%d, videoPaused=%d, screenEnabled=%d
 [%s] %s:%d stopError:%@
 [%s] %s:%d %@(%p) stopError:%@
@:@ AVCSession-stop
 [%s] %s:%d @:@ AVCSession-stop (%p) error=%@
 [%s] %s:%d _activeConfigurationCount=%d
 [%s] %s:%d %@(%p) _activeConfigurationCount=%d
 [%s] %s:%d Multiple participants are configured with the same prominence indices
 [%s] %s:%d received callback for addParticipantDidSucceed %d, participantID %@
 [%s] %s:%d %@(%p) received callback for addParticipantDidSucceed %d, participantID %@
 [%s] %s:%d Failed to add the participant
@:@ AVCSession-didAddParticipant
 [%s] %s:%d @:@ AVCSession-didAddParticipant (%p) uuid=%@, didSucceed=%d, error=%@
 [%s] %s:%d received callback for didStart
 [%s] %s:%d %@(%p) received callback for didStart
@:@ AVCSession-didStart
 [%s] %s:%d @:@ AVCSession-didStart (%p) didSucceed=%d, error=%@
 [%s] %s:%d received callback for didStop
 [%s] %s:%d %@(%p) received callback for didStop
@:@ AVCSession-didStop
 [%s] %s:%d @:@ AVCSession-didStop (%p) error=%@
@:@ AVCSession-serverDidDisconnect
 [%s] %s:%d @:@ AVCSession-serverDidDisconnect (%p)
 [%s] %s:%d received callback for removeParticipantDidSucceed
 [%s] %s:%d %@(%p) received callback for removeParticipantDidSucceed
@:@ AVCSession-didRemoveParticipant
 [%s] %s:%d @:@ AVCSession-didRemoveParticipant (%p) uuid=%@, didSucceed=%d, error=%@
 [%s] %s:%d received callback for didUpdateConfig
 [%s] %s:%d %@(%p) received callback for didUpdateConfig
 [%s] %s:%d received callback for didDetectError:%@
 [%s] %s:%d %@(%p) received callback for didDetectError:%@
 [%s] %s:%d received callback for didChangeUplinkRateAdaptationInfo:%@
 [%s] %s:%d %@(%p) received callback for didChangeUplinkRateAdaptationInfo:%@
 [%s] %s:%d received callback for didChangeDownlinkRateAdaptationInfo:%@
 [%s] %s:%d %@(%p) received callback for didChangeDownlinkRateAdaptationInfo:%@
 [%s] %s:%d received callback for shouldReconnect
 [%s] %s:%d %@(%p) received callback for shouldReconnect
 [%s] %s:%d Calling sessionShouldReconnect on the delegate
 [%s] %s:%d %@(%p) Calling sessionShouldReconnect on the delegate
 [%s] %s:%d Session[%@] received callback for oneToOneModeEnabled[%d] did succeed[%d]
 [%s] %s:%d %@(%p) Session[%@] received callback for oneToOneModeEnabled[%d] did succeed[%d]
 [%s] %s:%d AVCSession[%@] received callback for audio enabled[%d] did succeed[%d]
 [%s] %s:%d %@(%p) AVCSession[%@] received callback for audio enabled[%d] did succeed[%d]
 [%s] %s:%d AVCSession[%@] received callback for video enabled[%d] did succeed[%d]
 [%s] %s:%d %@(%p) AVCSession[%@] received callback for video enabled[%d] did succeed[%d]
 [%s] %s:%d AVCSession[%@] received callback for screen enabled[%d] did succeed[%d]
 [%s] %s:%d %@(%p) AVCSession[%@] received callback for screen enabled[%d] did succeed[%d]
 [%s] %s:%d AVCSession[%@] received callback for audio paused[%d] did succeed[%d]
 [%s] %s:%d %@(%p) AVCSession[%@] received callback for audio paused[%d] did succeed[%d]
 [%s] %s:%d AVCSession[%@] received callback for video paused[%d] did succeed[%d]
 [%s] %s:%d %@(%p) AVCSession[%@] received callback for video paused[%d] did succeed[%d]
 [%s] %s:%d AVCSession=%@ received mediaStateDidChange callback for mediaType=%d mediaState=%d did succeed[%d]
 [%s] %s:%d %@(%p) AVCSession=%@ received mediaStateDidChange callback for mediaType=%d mediaState=%d did succeed[%d]
 [%s] %s:%d AVCSession[%@] received callback.
 [%s] %s:%d %@(%p) AVCSession[%@] received callback.
 [%s] %s:%d Invalid captureSourceID=%d
 [%s] %s:%d Failed to allocate the video sink state dictionary
 [%s] %s:%d Failed to read key=%@
 [%s] %s:%d Failed to create the format description
 [%s] %s:%d Invalid parameter
 [%s] %s:%d Missing key=%@ in config
 [%s] %s:%d Unexpected class for key=%@
 [%s] %s:%d Invalid framerate=%u
 [%s] %s:%d Incorrect format type typeId=%lu
 [%s] %s:%d Registering the same delegate twice!
AVCVideoStream [%s] %s:%d %s %s
AVCVideoStream [%s] %s:%d destination=%@, callID=%@, error=%@
AVCVideoStream [%s] %s:%d Will run %s process
AVCVideoStream [%s] %s:%d %@(%p) Will run %s process
AVCVideoStream [%s] %s:%d AVCVideoStream: error initializing error[%s] resultDict[%s]
AVCVideoStream [%s] %s:%d AVCVideoStream: error initializing no capabilities dict result[%s]
AVCVideoStream [%s] %s:%d AVCVideoStream: error initializing... return stream token failed
AVCVideoStream [%s] %s:%d AVCVideoStream: error initializing... no results dict
AVCVideoStream [%s] %s:%d @:@ AVCVideoStream-init (%p) callID=%@, streamToken=%d, error=%@
@:@ AVCVideoStream-init
AVCVideoStream [%s] %s:%d @:@ AVCVideoStream-init (%p)
AVCVideoStream [%s] %s:%d 
AVCVideoStream [%s] %s:%d %@(%p) 
@:@ AVCVideoStream-dealloc
AVCVideoStream [%s] %s:%d @:@ AVCVideoStream-dealloc (%p)
AVCVideoStream [%s] %s:%d Invalid video configuration: error[%s]
AVCVideoStream [%s] %s:%d %@(%p) Invalid video configuration: error[%s]
AVCVideoStream [%s] %s:%d AVCVideoStream API_VCMEDIASTREAM_STARTCONFERENCE (client side)
AVCVideoStream [%s] %s:%d AVCVideoStream start (not using XPC)
@:@ AVCVideoStream-start
AVCVideoStream [%s] %s:%d @:@ AVCVideoStream-start (%p)
@:@ AVCVideoStream-stop
AVCVideoStream [%s] %s:%d @:@ AVCVideoStream-stop (%p)
@:@ AVCVideoStream-pause
AVCVideoStream [%s] %s:%d @:@ AVCVideoStream-pause (%p)
@:@ AVCVideoStream-resume
AVCVideoStream [%s] %s:%d @:@ AVCVideoStream-resume (%p)
AVCVideoStream [%s] %s:%d AVCVideoStream[%p] %s error[%s]
AVCVideoStream [%s] %s:%d %s only supported in the daemon
AVCVideoStream [%s] %s:%d direction=%ld
AVCVideoStream [%s] %s:%d rtcpEnabled=%d
AVCVideoStream [%s] %s:%d rtpTimeOutEnabled=%d
AVCVideoStream [%s] %s:%d rtcpTimeOutEnabled=%d
AVCVideoStream [%s] %s:%d rtpTimeOutIntervalSec=%f
AVCVideoStream [%s] %s:%d rtcpTimeOutIntervalSec=%f
AVCVideoStream [%s] %s:%d rtcpSendIntervalSec=%f
AVCVideoStream [%s] %s:%d AVCVideoStream: AVC server died, notifying client
AVCVideoStream [%s] %s:%d AVCVideoStream: Media server died, notifying client
@:@ AVCVideoStream-didServerDie
AVCVideoStream [%s] %s:%d @:@ AVCVideoStream-didServerDie (%p)
AVCVideoStream [%s] %s:%d AVCVideoStream: Server died, but AVCVideoStream has already deallocated, NO-OP
AVCVideoStream [%s] %s:%d didStartConnectionBlock: error = %p, result = %s
AVCVideoStream [%s] %s:%d AVCVideoStream: didStartConnectionBlock: strongSelf == nil
AVCVideoStream [%s] %s:%d AVCVideoStream: didStartConnectionBlock strongSelf started(%d)
@:@ AVCVideoStream-didStart
AVCVideoStream [%s] %s:%d @:@ AVCVideoStream-didStart (%p) didSucceed=%d, error=%@
AVCVideoStream [%s] %s:%d AVCVideoStream: notified client %p of didStart started[%d]
AVCVideoStream [%s] %s:%d AVCVideoStream: notified client %p of didStop
@:@ AVCVideoStream-didStop
AVCVideoStream [%s] %s:%d @:@ AVCVideoStream-didStop (%p)
@:@ AVCVideoStream-didPause
AVCVideoStream [%s] %s:%d @:@ AVCVideoStream-didPause (%p) didSucceed=%d, error=%@
AVCVideoStream [%s] %s:%d AVCVideoStream: notified client %p of didPause [%d]
@:@ AVCVideoStream-didResume
AVCVideoStream [%s] %s:%d @:@ AVCVideoStream-didResume (%p) didSucceed=%d, error=%@
AVCVideoStream [%s] %s:%d AVCVideoStream: notified client %p of didResume [%d]
AVCVideoStream [%s] %s:%d AVCVideoStream: notified client %p RTP packet timeout
AVCVideoStream [%s] %s:%d AVCVideoStream: notified client %p RTCP packet timeout
AVCVideoStream [%s] %s:%d AVCVideoStream: notified client %p received RTCP packets
AVCVideoStream [%s] %s:%d %s: notified client %p didGetLastDecodedFrame
AVCVideoStream [%s] %s:%d AVCVideoStream: notified client %p of downlinkQualityDidChange [%s]
AVCVideoStream [%s] %s:%d AVCVideoStream: notified client %p of uplinkQualityDidChange [%s]
AVCVideoStream [%s] %s:%d AVCVideoStream: notified client %p of didUpdateVideoConfiguration [%d]
AVCVideoStream [%s] %s:%d stream=%@, didStartStream=%d, error=%@
AVCVideoStream [%s] %s:%d stream=%@
AVCVideoStream [%s] %s:%d stream=%@, didPauseStream=%d, error=%@
AVCVideoStream [%s] %s:%d stream=%@, didResumeStream=%d, error=%@
AVCVideoStream [%s] %s:%d conf=%@, rtcpPackets=%@
AVCVideoStream [%s] %s:%d stream=%@, downlinkQualityInfo=%@
AVCVideoStream [%s] %s:%d stream=%@, uplinkQualityInfo=%@
AVCVideoStream [%s] %s:%d stream=%@, serverDidDie
 [%s] %s:%d %@. Starting timer
 [%s] %s:%d %@. VCDispatchTimer is already active
 [%s] %s:%d %@. Timeout triggered. Terminating process ...
 [%s] %s:%d %@(%p). Stopping timer
 [%s] %s:%d VCHardwareSettings: tilesPerFrame=%d for avcOperatingmode=%d
 [%s] %s:%d VCHardwareSettings: Failed to allocate memory for pixel format storage
 [%s] %s:%d VCHardwareSettings: Failed to allocate array for hardware Settings
 [%s] %s:%d Spatial audio feature force enabled
 [%s] %s:%d Spatial audio feature disabled
 [%s] %s:%d Spatial audio feature enabled. deviceSupportsSpatialAudio=%d
 [%s] %s:%d Siri audio feature disabled
 [%s] %s:%d VCVideoRules: Failed to create rules array
 [%s] %s:%d VCVideoRules: Failed to create supported payload array
 [%s] %s:%d VCVideoRuleCollections: invalid bitrate rule
 [%s] %s:%d VCVideoRuleCollections: Returning filtered video rules %s
 [%s] %s:%d maxWidth=%d, maxHeight=%d, transportType=%s
 [%s] %s:%d (%p) streamToken=%u
 [%s] %s:%d starting oneToOne streams
 [%s] %s:%d %@(%p) starting oneToOne streams
 [%s] %s:%d Failed to start the VCAudioIO. error=%@
 [%s] %s:%d Starting the Multiway Streams
 [%s] %s:%d %@(%p) Starting the Multiway Streams
 [%s] %s:%d Failed to start the stream groups. error=%@
 [%s] %s:%d Participant already started
 [%s] %s:%d %@(%p) Participant already started
 [%s] %s:%d screenStreams[%@]
 [%s] %s:%d %@(%p) screenStreams[%@]
 [%s] %s:%d Participant already stopped
 [%s] %s:%d %@(%p) Participant already stopped
 [%s] %s:%d Participant audio already set to enabled[%d]
 [%s] %s:%d Participant video already set to enabled[%d]
 [%s] %s:%d screenStream[%@] state=%d
 [%s] %s:%d %@(%p) screenStream[%@] state=%d
 [%s] %s:%d Participant screen video already set to enabled[%d]
 [%s] %s:%d Can't set pause when participant audio is not enabled
 [%s] %s:%d Participant audio already set to paused[%d]
 [%s] %s:%d startAudioStreamGroups failed with error=%@
 [%s] %s:%d Shouldn't come here when setting audio paused
 [%s] %s:%d setAudioStreamGroupsPaused=%d failed with error=%@
 [%s] %s:%d pauseAudioStreams=%d failed with error=%@
 [%s] %s:%d Can't set pause when participant video is not enabled
 [%s] %s:%d Participant video already set to paused[%d]
 [%s] %s:%d Failed to startVideo for videoPausedToStart paused=%d error=%@ 
 [%s] %s:%d Shouldn't come here when setting video paused
 [%s] %s:%d paused=%d error=%@ 
 [%s] %s:%d mediaTypeSettings is missing for mediaType=%@ mediaState=%@
 [%s] %s:%d %@(%p) mediaTypeSettings is missing for mediaType=%@ mediaState=%@
 [%s] %s:%d mediaType=%@ already set to mediaState=%@
 [%s] %s:%d %@(%p) mediaType=%@ already set to mediaState=%@
 [%s] %s:%d Failed to set the mediaState=%@ for mediaType=%@. error=%@
 [%s] %s:%d %@(%p) Failed to set the mediaState=%@ for mediaType=%@. error=%@
 [%s] %s:%d The participant info data is nil
 [%s] %s:%d Media blob missing in the participant info
 [%s] %s:%d Negotiation data not available for version=%d
 [%s] %s:%d Failed to allocate output dictionary
 [%s] %s:%d Unexpected participant data in participant info dictionary
 [%s] %s:%d Negotiation v1 blob not present in particiant info
 [%s] %s:%d Negotiation v2 blob not present in particiant info
 [%s] %s:%d Missing media blob entry in particiant info. ParticipantInfo=%@
 [%s] %s:%d Failed to generate the negotation data entry
 [%s] %s:%d Media blob is nil
 [%s] %s:%d Tearing down participant
 [%s] %s:%d %@(%p) Tearing down participant
 [%s] %s:%d Failed to stop the VCAudioIO. error=%@
 [%s] %s:%d Failed to update streamgroup=%s, Error=%@
 [%s] %s:%d %@(%p) Failed to update streamgroup=%s, Error=%@
 [%s] %s:%d Ignore start/stop for stream group=%@ isStreamGroupActive=%d isStreamGroupStarted=%d
 [%s] %s:%d Failed to update stream group=%@ with error=%@
 [%s] %s:%d Failed to allocate temporary stream group array
 [%s] %s:%d streamGroupID=%s, streamToken=%u is inactive
 [%s] %s:%d %@(%p) streamGroupID=%s, streamToken=%u is inactive
 [%s] %s:%d Starting stream group. streamGroupID=%s, streamToken=%u
 [%s] %s:%d %@(%p) Starting stream group. streamGroupID=%s, streamToken=%u
 [%s] %s:%d Failed to start stream group. streamGroupID=%s streamToken=%u error=%@
 [%s] %s:%d %@(%p) Failed to start stream group. streamGroupID=%s streamToken=%u error=%@
 [%s] %s:%d screenStreamGroup=%@, sysaStreamGroup=%@, supportsDedicatedSystemAudioStream=%d
 [%s] %s:%d %@(%p) screenStreamGroup=%@, sysaStreamGroup=%@, supportsDedicatedSystemAudioStream=%d
 [%s] %s:%d Failed to start screen group. Error=%@
 [%s] %s:%d streamGroup: %@, streamGroup: %@
 [%s] %s:%d %@(%p) streamGroup: %@, streamGroup: %@
 [%s] %s:%d Failed to allocate codec config for payload=%d!
 [%s] %s:%d %@(%p) Failed to allocate codec config for payload=%d!
 [%s] %s:%d No audio rules for stream configuration!
 [%s] %s:%d No codec configurations for stream configuration!
 [%s] %s:%d Unable to allocate multiway video config
 [%s] %s:%d Failed to allocate stream configuration!
 [%s] %s:%d %@(%p) Failed to allocate stream configuration!
 [%s] %s:%d Unable to allocate multiway audio config
 [%s] %s:%d Unable to allocate rate controller audio config
 [%s] %s:%d Failed to setup the audio stream config
 [%s] %s:%d %@(%p) Failed to setup the audio stream config
 [%s] %s:%d Failed to allocate one to one video stream configuration!
 [%s] %s:%d %@(%p) Failed to allocate one to one video stream configuration!
 [%s] %s:%d Unable to allocate rate controller config
 [%s] %s:%d Invalid VCSecurityKeyManager
 [%s] %s:%d VCSecurityKeyHolder_Create failed
 [%s] %s:%d Disabling SRTP encryption. isEncryptionDisabled=%d, sframeCipherSuite=%d
 [%s] %s:%d setupSecurityKeyHolderForStreamConfig failed
 [%s] %s:%d Disabling SFrame encryption. isEncryptionDisabled=YES
 [%s] %s:%d Failed created audioIO=%p operatingMode:%d deviceRole:%d direction:%d
 [%s] %s:%d %@(%p) Failed created audioIO=%p operatingMode:%d deviceRole:%d direction:%d
 [%s] %s:%d configured audioIO=%p operatingMode=%d deviceRole=%d direction=%d isMuted=%d
 [%s] %s:%d %@(%p) configured audioIO=%p operatingMode=%d deviceRole=%d direction=%d isMuted=%d
 [%s] %s:%d Failed to setDevice role on captionsStreamGroup=%@
 [%s] %s:%d Error configuring audioIO
 [%s] %s:%d %@(%p) Error configuring audioIO
 [%s] %s:%d There are no audio streams to configure, bypassing configuration
 [%s] %s:%d Error configuring audio stream [%@]
 [%s] %s:%d Unable to allocate video rate control config
 [%s] %s:%d There are no video streams to configure, bypassing configuration
 [%s] %s:%d Failed to allocate one to one rate config
 [%s] %s:%d Error configuring stream [%@]
 [%s] %s:%d deviceRole=%d, negotiatedVideoEnabled=%d, negotiatedScreenEnabled=%d, operatingMode=%d
 [%s] %s:%d %@(%p) deviceRole=%d, negotiatedVideoEnabled=%d, negotiatedScreenEnabled=%d, operatingMode=%d
 [%s] %s:%d Error configuring audio stream
 [%s] %s:%d Error configuring video stream
 [%s] %s:%d Unable to create the oneToOneConfig
 [%s] %s:%d Error configuring streams
 [%s] %s:%d Error setting device role on stream group
 [%s] %s:%d %@(%p) Error setting device role on stream group
 [%s] %s:%d Unable to initialize participant. Destination=%s 
 [%s] %s:%d %@(%p) Unable to initialize participant. Destination=%s 
 [%s] %s:%d Failed to create the list of supported audio rules
 [%s] %s:%d %@(%p) Failed to create the list of supported audio rules
 [%s] %s:%d Failed to create the participant stream token dictionary
 [%s] %s:%d %@(%p) Failed to create the participant stream token dictionary
 [%s] %s:%d (%p) Generated video stream token=%@
 [%s] %s:%d (%p) Generated audio stream token=%@
 [%s] %s:%d Participant dealloc %@
 [%s] %s:%d %@(%p) Participant dealloc %@
 [%s] %s:%d Media state data dictionary is nil
 [%s] %s:%d %@(%p) Media state data dictionary is nil
 [%s] %s:%d Failed to allocate the media type settings for mediaType=%@
 [%s] %s:%d %@(%p) Failed to allocate the media type settings for mediaType=%@
 [%s] %s:%d _mediaTypeSettingsDict=%@
 [%s] %s:%d %@(%p) _mediaTypeSettingsDict=%@
 [%s] %s:%d Adding streamGroupID=%s for mediaType=%@ mediaState=%@
 [%s] %s:%d Exiting state participant %s. Entering state participant %s.
 [%s] %s:%d %@(%p) Exiting state participant %s. Entering state participant %s.
 [%s] %s:%d Changing participant screenEnabled to %d
 [%s] %s:%d %@(%p) Changing participant screenEnabled to %d
 [%s] %s:%d Stream token not found for streamGroupID=%@
 [%s] %s:%d %@(%p) Stream token not found for streamGroupID=%@
 [%s] %s:%d mediaTypeSettings is missing for mediaType=%@
 [%s] %s:%d %@(%p) mediaTypeSettings is missing for mediaType=%@
 [%s] %s:%d Failed to activate stream groups. mediaType=%@ mediaState=%@ error=%@
 [%s] %s:%d %@(%p) Failed to activate stream groups. mediaType=%@ mediaState=%@ error=%@
 [%s] %s:%d Failed to deactivate stream groups. mediaState=%@ error=%@
 [%s] %s:%d %@(%p) Failed to deactivate stream groups. mediaState=%@ error=%@
 [%s] %s:%d Stream groups not found. error=%@
 [%s] %s:%d %@(%p) Stream groups not found. error=%@
 [%s] %s:%d Ignore mediaState=%@ for streamGroup=%@ isStreamGroupActive=%d isStreamGroupStarted=%d
 [%s] %s:%d %@(%p) Ignore mediaState=%@ for streamGroup=%@ isStreamGroupActive=%d isStreamGroupStarted=%d
 [%s] %s:%d Unknown media stream group state: %d
 [%s] %s:%d Set VCRateControl baseband congestion detector to all audio streams
 [%s] %s:%d Redundancy controllers are created
 [%s] %s:%d Sync group=%s not found for group=%s
 [%s] %s:%d Failed to add %s as sync destination to %s
 [%s] %s:%d System Audio Stream Group has paused, swapping sync sources
 [%s] %s:%d %@(%p) System Audio Stream Group has paused, swapping sync sources
 [%s] %s:%d System Audio Stream Group has resumed, swapping sync sources
 [%s] %s:%d %@(%p) System Audio Stream Group has resumed, swapping sync sources
 [%s] %s:%d requestKeyFrameGenerationWithStreamID:%d FIRType:%d
 [%s] %s:%d Resetting decryption status
 [%s] %s:%d %@(%p) Resetting decryption status
 [%s] %s:%d Detected remote switch of oneToOne mode %d
 [%s] %s:%d priority %hhu
 [%s] %s:%d streamGroup %@
 [%s] %s:%d enabled %s
 [%s] %s:%d paused %s
 [%s] %s:%d fromStreamID & toStreamID are equal, no switch needed
 [%s] %s:%d switched streamID %hu -> %hu
 [%s] %s:%d requestRedundancy %s
 [%s] %s:%d streamID %d
 [%s] %s:%d streamGroup=%@
 [%s] %s:%d %@(%p) streamGroup=%@
 [%s] %s:%d streamGroup %@ didSuspendStreams:%d
 [%s] %s:%d streamGroup=%@ remoteMediaStalled=%d duration=%f
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/AVCPacketRelayDriverThread.m:%d: AVCPacketRelayDriverThread: calloc(%d) failed
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/AVCPacketRelayDriverThread.m:%d: AVCPacketRelayDriverThread: CreateHandle failed (%d)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/AVCPacketRelayDriverThread.m:%d: AVCPacketRelayDriverThread: AVCPacketRelayDriverProc start failed (%d)
 [%s] %s:%d AVCPacketRelayDriverThread: AVCPacketRelayDriverProc thread(%p) started...
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/AVCPacketRelayDriverThread.m:%d: %s: failed due to invalid handle.
 [%s] %s:%d AVCPacketRelayDriverThread: AVCPacketRelayDriverProc thread(%p) end...
 [%s] %s:%d AVCPacketRelayDriverThread: allocate new connection failed
 [%s] %s:%d AVCPacketRelayDriverThread: now driving file descriptor %d
 [%s] %s:%d AVCPacketRelayDriverThread: stop driving file descriptor %d
 [%s] %s:%d AVCPacketRelayDriverThread: didn't find file descriptor %d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/AVCPacketRelayDriverThread.m:%d: AVCPacketRelayDriverProc failed due to invalid handle.
 [%s] %s:%d AVCPacketRelayDriverProc: select failed with errno %d
 [%s] %s:%d VCAudioSessionMediaProperties property changed: object=%@ is nil or not of class=%@
 [%s] %s:%d %@(%p) VCAudioSessionMediaProperties property changed: object=%@ is nil or not of class=%@
 [%s] %s:%d VCAudioSessionMediaProperties property changed: preferredSampleRate=%f became preferredSampleRate=%f
 [%s] %s:%d %@(%p) VCAudioSessionMediaProperties property changed: preferredSampleRate=%f became preferredSampleRate=%f
 [%s] %s:%d VCAudioSessionMediaProperties property changed: preferredBlockSize=%f became preferredBlockSize=%f
 [%s] %s:%d %@(%p) VCAudioSessionMediaProperties property changed: preferredBlockSize=%f became preferredBlockSize=%f
 [%s] %s:%d VCAudioSessionMediaProperties property changed: vpOperatingMode=%u became vpOperatingMode=%u
 [%s] %s:%d %@(%p) VCAudioSessionMediaProperties property changed: vpOperatingMode=%u became vpOperatingMode=%u
 [%s] %s:%d VCAudioSessionMediaProperties property changed: inputFormat=%s became inputFormat=%s
 [%s] %s:%d %@(%p) VCAudioSessionMediaProperties property changed: inputFormat=%s became inputFormat=%s
 [%s] %s:%d VCAudioSessionMediaProperties property changed: outputFormat=%s became outputFormat=%s
 [%s] %s:%d %@(%p) VCAudioSessionMediaProperties property changed: outputFormat=%s became outputFormat=%s
 [%s] %s:%d IDS channel connected
 [%s] %s:%d IDS channel disconnected
 [%s] %s:%d Failed to update transport stream '%@'
 [%s] %s:%d VTP_SetSourceDestinationWithToken failed %x
 [%s] %s:%d Wsola Timeout: %lld > %lld!!!!!!!!
 [%s] %s:%d %.3f 
 [%s] %s:%d <%.3f Search Stop[%d]
 [%s] %s:%d Found match at position=%d star=%d candidate=%d
 [%s] %s:%d Candidate length=%d
 [%s] %s:%d Nin:%d < %d or %d
 [%s] %s:%d offset:%d Nwin:%d searchCenter:%d delta:%d
 [%s] %s:%d Nin:%d
 [%s] %s:%d ------- Wsola Search:%d ---------
 [%s] %s:%d Reference window centered at %d  [%d %d]
 [%s] %s:%d Searching around %d [%d %d]
 [%s] %s:%d Wrote output [%d %d]
 [%s] %s:%d lastIdx:%d refIdx:%d Nin:%d
 [%s] %s:%d Wsola search stopped:%d off:%d offNext:%d inStep:%d Nwrit:%d
 [%s] %s:%d Wsola output size: %d =========
 [%s] %s:%d Unsupported warp frame size
 [%s] %s:%d Failed to initialize the warp converters
 [%s] %s:%d Output buffer size %d is insufficient to hold data
 [%s] %s:%d Copied Output: %d
 [%s] %s:%d Forcing WSOLA, time since silence: %f, Adjust = %f, time since low adjust: %f
 [%s] %s:%d Failed to initialize the float converter
 [%s] %s:%d Failed to initialize the int converter
 [%s] %s:%d WSOLA WARP, scale = %f, in size = %u, out size = %u
 [%s] %s:%d Extracted WSOLA tail, size=%u
 [%s] %s:%d Invalid clientStreamMode=%d
 [%s] %s:%d %@ set. Setting _pixelFormat to 444f
 [%s] %s:%d [%@] set. Setting _pixelFormat to 444f 10-bit
 [%s] %s:%d %@ set. Setting _pixelFormat to 420f
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/AVCMediaStreamConfig.m:%d: Unexpected pixel format type: %d
 [%s] %s:%d Unexpected codec type: %d
 [%s] %s:%d %@(%p) Unexpected codec type: %d
 [%s] %s:%d Invalid parameters passed to parseMediaLineHeader
 [%s] %s:%d Corrupted media line header
 [%s] %s:%d Failed to match the media line type
 [%s] %s:%d iceNewNominationBlock didn't exist
 [%s] %s:%d iceRemoveIPPortBlock didn't exist
 [%s] %s:%d Invalid parameters in callback
 [%s] %s:%d Invalid minQSize=%p or maxQSize=%p
 [%s] %s:%d Failed to allocate the JitterBuffer memory
 [%s] %s:%d Failed to initialize the lag processor
 [%s] %s:%d VCJitterBuffer[%p] Jitter buffer configured with minQSize=%f maxQSize=%f highStartQSize=%f highStartMode=%d targetPercentileToCover=%f shortTermWindowSize=%f longTermWindowSize=%f filterDRXBundleEnabled=%d minQSize5G=%f targetSynchronizer=%p spikeManagement=%d, skipDecodeOnSilence=%d
 [%s] %s:%d Failed to initialize the target estimator
 [%s] %s:%d Failed to allocate the JitterBuffer
 [%s] %s:%d Invalid JitterBuffer handle (nil)
 [%s] %s:%d Cleaning up JitterBuffer (0x%p)
 [%s] %s:%d Could not retrieve VCJitterBuffer
 [%s] %s:%d [%p] redAudioDelayInSamples:%d
 [%s] %s:%d [%p] state Reset dropping packet
 [%s] %s:%d [%p] Setting state Reset, jqRequested[%d] packetNewStream[%d]
 [%s] %s:%d [%p] JBState NEWSTREAM -> SETTLE
 [%s] %s:%d [%p] JBState[%d] payloadType[%d] bytes[%d] SeqNumber[%d]
 [%s] %s:%d [%p] Playback get samples
 [%s] %s:%d [%p] JBState[%d] sampleCount[%d] timestamp[%d] isSilence[%d] consecutiveSilenceCount[%d]
 [%s] %s:%d [%p] AWD Metrics: underflowRate[%f] frameErasureRate[%f] totalQueueSizeSamples[%d]
 [%s] %s:%d [%p] WRM Metrics: playbackCount[%d] playbackCountSpeech[%d] erasureCount[%d] erasureSilence[%d] nominalJitterBufferDelay[%llu] targetJitterQueueSize(Audio)[%llu]
 [%s] %s:%d [%p] VRDB Playback Metrics: avgLossRate[%f] lastAvgMissPercent[%f] averageJitter[%f] maxJitterForWindow[%f]
 [%s] %s:%d [%p] VRDB RED Playback Metrics: totalFrameErasureRate[%f] redErasureCompensationRate[%f] redAudioFramesPlayed[%d] redAudioBytesPlayed[%d] totalFramesPlayed[%d] totalSpeechErasureRate[%f] totalWindowedErasureRate[%f] maxConsecutiveAudioErasures[%d], totalErasureCount[%u]
 [%s] %s:%d [%p] VRDB Timescale Metrics: totalTimescaleCount=%d silenceTimescaleCount=%d speechTimescaleCount=%d expandTimescaleCount=%d compressTimescaleCount=%d totaltimescaleRate=%f silenceTimescaleRate=%f speechTimescaleRate=%f
 [%s] %s:%d isCellular[%d] localCellTech[%d] remoteCellTech[%d]
 [%s] %s:%d VCJitterBuffer[%p] Network Notification timestamp=%llu intermittentState=%u estimatedIntermittentPeriod=%u singleOutagePeriod=%u NWNotificationTarget=%f targetJBSize=%f
 [%s] %s:%d VCJitterBuffer[%p] Cellular Network Notification: timestamp=%llu radioAccessTechnology=%u outageState=%u estimatedOutagePeriod=%u signalQuality=%d dlBLER=%u cdrxCycleLength=%u targetJBSize=%f
 [%s] %s:%d VCJitterBuffer[%p] skipDecodeOnSilence=%d
 [%s] %s:%d JB Min Queue Size for 5G is overriden with server bag value %f
 [%s] %s:%d Configuring queue discard threshold=%f
 [%s] %s:%d [%p] Dequeue packet, is audio packet null:%d, state %d
 [%s] %s:%d [%p] JBState[%d] packetDequeue[%d]
 [%s] %s:%d Red frame inserted, updating time red frame was used. lastRedAudioArrivalTime=%f
 [%s] %s:%d Applying queue steering correction. jitterQueueOffset=%f
 [%s] %s:%d Overriding Desired QueueSize based on network notification
 [%s] %s:%d Red overhead is enabled. elapsedTimeSinceLastUsedRedFrame=%f, sharedRedAudioDelayInSamples=%d
 [%s] %s:%d Red overhead is disabled. elapsedTimeSinceLastUsedRedFrame=%f, sharedRedAudioDelayInSamples=%d
 [%s] %s:%d Please file a radar on AVConference Media | All. Average JB queue size is negative! Current size: %f, new size: %f, jitter samples: %d, total samples: %f
AVCAudioClient [%s] %s:%d Failed to initialize the session queue. processId=%d
@:@ AVAudioClient-initializeAudioSessionQ
AVCAudioClient [%s] %s:%d @:@ AVAudioClient-initializeAudioSessionQ (%p)
@:@ AVAudioClient-initSharedInstance
AVCAudioClient [%s] %s:%d @:@ AVAudioClient-initSharedInstance (%p)
@:@ AVAudioClient-init
AVCAudioClient [%s] %s:%d @:@ AVAudioClient-init (%p)
@:@ AVAudioClient-dealloc
AVCAudioClient [%s] %s:%d @:@ AVAudioClient-dealloc (%p)
AVCAudioClient [%s] %s:%d Not supported. processId=%d
AVCAudioClient [%s] %s:%d processId=%d
AVCAudioClient [%s] %s:%d ignoring, isMixingVoiceWithMediaEnabled already set to %d
AVCAudioClient [%s] %s:%d Invalid input device. inputDevice=%@ UID=%@
AVCAudioClient [%s] %s:%d Invalid output device. outputDevice=%@ UID=%@
AVCAudioClient [%s] %s:%d Invalid handler
AVCAudioClient [%s] %s:%d Muted talker handler is already registered. processId=%d
AVCAudioClient [%s] %s:%d Failed to register the muted talker notification block. processId=%d error=%@
AVCAudioClient [%s] %s:%d Muted talker handler is not registered. processId=%d
AVCAudioClient [%s] %s:%d Failed to unregister the muted talker notification block. processId=%d error=%@
AVCAudioClient [%s] %s:%d Notification received but handler is not registered processId=%d notificationType=%@
AVCAudioClient [%s] %s:%d MutedTalkerNotificationHandler Begin
AVCAudioClient [%s] %s:%d MutedTalkerNotificationHandler End
AVCAudioClient [%s] %s:%d Unknown notification type. processId=%d notificationType=%@
@:@ AVAudioClient-start
AVCAudioClient [%s] %s:%d @:@ AVAudioClient-start (%p)
@:@ AVAudioClient-startAudioSession
AVCAudioClient [%s] %s:%d @:@ AVAudioClient-startAudioSession (%p)
@:@ AVAudioClient-setAudioSessionProperties
AVCAudioClient [%s] %s:%d @:@ AVAudioClient-setAudioSessionProperties (%p) audioParams=%@
@:@ AVAudioClient-stop
AVCAudioClient [%s] %s:%d @:@ AVAudioClient-stop (%p)
@:@ AVAudioClient-resetAudioSessionOutputPortOverride
AVCAudioClient [%s] %s:%d @:@ AVAudioClient-resetAudioSessionOutputPortOverride (%p)
@:@ AVAudioClient-setMicrophoneMuted
AVCAudioClient [%s] %s:%d @:@ AVAudioClient-setMicrophoneMuted (%p) isMuted=%d
@:@ AVAudioClient-isMicrophoneMuted
AVCAudioClient [%s] %s:%d @:@ AVAudioClient-isMicrophoneMuted (%p)
@:@ AVAudioClient-setMixingVoiceWithMediaEnabled
AVCAudioClient [%s] %s:%d @:@ AVAudioClient-setMixingVoiceWithMediaEnabled (%p) isMixingVoiceWithMediaEnabled=%d
@:@ AVAudioClient-isMixingVoiceWithMediaEnabled
AVCAudioClient [%s] %s:%d @:@ AVAudioClient-isMixingVoiceWithMediaEnabled (%p)
@:@ AVAudioClient-currentInputDevice
AVCAudioClient [%s] %s:%d @:@ AVAudioClient-currentInputDevice (%p)
@:@ AVAudioClient-currentOutputDevice
AVCAudioClient [%s] %s:%d @:@ AVAudioClient-currentOutputDevice (%p)
@:@ AVAudioClient-setInputDevice
AVCAudioClient [%s] %s:%d @:@ AVAudioClient-setInputDevice (%p) inputDevice=%@
@:@ AVAudioClient-setOutputDevice
AVCAudioClient [%s] %s:%d @:@ AVAudioClient-setOutputDevice (%p) outputDevice=%@
@:@ AVAudioClient-setFollowSystemInputEnabled
AVCAudioClient [%s] %s:%d @:@ AVAudioClient-setFollowSystemInputEnabled (%p) enabled=%d
@:@ AVAudioClient-setFollowSystemOutputEnabled
AVCAudioClient [%s] %s:%d @:@ AVAudioClient-setFollowSystemOutputEnabled (%p) enabled=%d
@:@ AVAudioClient-registerForMutedTalkerNotifications
AVCAudioClient [%s] %s:%d @:@ AVAudioClient-registerForMutedTalkerNotifications (%p)
@:@ AVAudioClient-unregisterFromMutedTalkerNotifications
AVCAudioClient [%s] %s:%d @:@ AVAudioClient-unregisterFromMutedTalkerNotifications (%p)
@:@ AVAudioClient-registerSecureMicrophoneEngagedHandler
AVCAudioClient [%s] %s:%d @:@ AVAudioClient-registerSecureMicrophoneEngagedHandler (%p)
@:@ AVAudioClient-setChangeListener
AVCAudioClient [%s] %s:%d @:@ AVAudioClient-setChangeListener (%p)
AVCAudioClient [%s] %s:%d %s %s
VCMediaNegotiatorV2
VCMediaNegotiationBlobMultiwayVideoStream
NSCopying
VCAudioManager
VCAudioIOControllerControl
VCBasebandCodecNotifications
NSObject
VCAudioSessionDelegate
VCServerDelegate
AVCRateController
VCRateSharingClient
VCNWConnectionCongestionDetector
AVCRateControlFeedbackController
VCMediaNegotiatorBandwidthConfiguration
AVConferenceCallState
AVConference
Private
VCMediaNegotiationBlobV2VideoPayload
VCMediaNegotiatorBase
VCMediaNegotiatorProtocol
VCHardwareSettingsMac
VCHardwareSettingsMacProtocol
VCHardwareSettingsProtocol
VCAudioPowerSpectrum
VCAudioPowerSpectrumProtocol
AVCStatisticsCollector
VCVideoStreamOWRDLossEventRateControl
VCVideoStreamRateControlProtocol
VCMediaNegotiationBlobMultiwayAudioStream
GK_NSDictionaryDeepMutableCopy
GKNATObserver_SCContext
GKNATObserver
GKNATObserverInternal
VCAudioStreamReceiveGroup
VCAudioStreamGroup
VCAudioRelay
VCSessionConfiguration
VCVideoRuleCollectionsRemoteCameraEmbedded
VCAudioStreamCodecConfig
AVCRTCPPacket
AVCRTCPSenderReport
AVCRTCPReceiverReport
AVCRTCPSourceDescription
VCAudioPowerSpectrumSource
VCAudioIOSink
GKRingBuffer
NSDictionaryCopy_AVConference
IPPortWrapper
IPv6PrefixWrapper
GKSConnectivitySettings
VCRedundancyControlAlgorithmVideo
VCRedundancyControlAlgorithm
VCMediaNegotiatorMultiwayMediaStream
GKVoiceChatError
VCVideoStreamNOWRDLossEventRateControl
VCTransportSessionNW
VCAudioStreamGroupCommon
VCMediaCaptureController
VCAudioPowerSpectrumSourceDelegate
VCAudioIODelegate
GKInterfaceListener
VCRedundancyControlAlgorithmVideoIpadCompanion
VCMediaNegotiationBlobBandwidthSettings
VCRateControlUtil
ICEResultQuery
ICEResultWaitQueue
VCMomentsHistory
VCMomentsHistoryBufferDelegate
VCEmulatedNetworkAlgorithmQueueBandwidth
VCEmulatedNetworkAlgorithm
VCMediaNegotiatorResultsFaceTimeSettings
VCMediaNegotiationBlobMomentsSettings
VCRateControlAlgorithmSparseNOWRD
VCTextStream
VCTextSender
VCTextReceiverDelegate
LoopbackSocketTunnel
VCMediaNegotiationBlobAudioSettings
VCRateControlShareProfile
VCRateControllerManager
VCIDRSchedulerItem
VCRedundancyControllerVideo
VCRedundancyControllerProtocol
VCMediaKeyIndex
VCCryptoInfo
Encryption
VCEmulatedNetwork
VCVideoStreamTransmitter
VCCaptionsClientContext
VCCaptionsManagerStreamTokenClientList
VCCaptionsManager
VCCaptionsSourceDelegate
AVCEffects
VCSessionUplinkVideoStreamController
AVCPacketFilter
AVCPacketFilterRTP
VCAudioRuleCollection
VCPayloadUtils
VCAudioPowerSpectrumManager
VCAudioPowerSpectrumMeterDelegate
VCSessionParticipantAudioStreamConfig
VCDatagramChannelManager
VCSessionMediaStreamPresenceConfigurationProvider
VCDispatchTimer
VCAudioStream
VCMediaStreamSyncSource
VCTelephonyInterfaceDelegate
VCMediaStreamRateAdaptationDelegate
VCMediaNegotiationBlobV2
VCStreamIOAudioController
VCStreamOutputSource
AVCDaemonProcessInfo
VCCoreMotionManager
VCDatagramChannelIDS
VCStatsRecorder
VCMediaNegotiationBlobV2MomentsSettings
VCEmulatedNetworkDoubleQueue
VCRateControlOWRDEstimator
VCControlChannelMessageProtocol
VCAudioStreamSendGroupConfig
VCAudioStreamGroupConfig
VCDispatchQueue
VCEmulatedNetworkElement
VCMomentsHistoryBuffer
VCCellularAudioTapIO
VCMediaStreamSyncDestination
VCMediaStreamManager
VCMediaStreamDelegate
VCMediaNegotiatorStreamGroupStreamConfiguration
VCDaemonProcessInfoManager
VCMediaNegotiationBlobV2StreamGroup
VCVideoRule
VCVideoStreamRTTPLRRateControl
VCEmulatedPacket
VCConnectionLegacy
VCConnectionProtocol
Utils
VCMediaNegotiatorStreamGroupConfiguration
VCAudioUnitSpatialContext
VCImageRotationConverter
VCVideoStreamSendGroupConfig
VCControlChannelFaceTime
VCMediaNegotiatorResultsMoments
VCVideoSourceTokenManager
VCSystemAudioCaptureController
VCWifiAssistManager
VCMoments
VCMomentsMessenger
VCAudioRedBuilder
helper
SDPMini
SDPComposing
SDPParsing
mediaParameters
VCMediaNegotiatorLocalConfiguration
SenderLargeFrameInfo
VCRateControlMediaController
VCEmulatedNetworkAlgorithmQueueDelay
VCConnection
VCMediaNegotiatorStreamGroupU1Configuration
VCCaptionsTranscriptionSegment
NSCoding
NSSecureCoding
VCIDRScheduler
VCCaptionsTranscriptionBlob
VCConnectionManagerLegacy
VCRateControlAlgorithmLowLatencyNOWRD
VCImageConverterBase
AVCVideoFrame
VCConnectionSelector
VCControlChannelDialog
VCSessionManager
VCSessionDelegate
VCRateAdaptationDelegate
VCSessionUplinkBandwidthAllocatorMultiway
VCSessionUplinkBandwidthAllocator
VCSessionMediaNegotiator
VCDatagramChannelIDSEmulated
VCMediaControlInfoGenerator
VCMediaControlInfoDelegate
VCAudioPowerSpectrumMeter
VCMediaStreamReceiveGroup
VCQoSReportSource
VCQoSMonitorManager
VCMomentsClientContext
VCMomentsManagerStreamTokenClientList
VCMomentsManager
VCMomentsMessengerDelegate
VCMomentsCollector
VCMomentsCollectorDelegate
VCWRMHandler
AVCScreenCaptureConfiguration
VCAudioPowerLevelMonitor
VCVideoStreamReceiver
VCSessionParticipantRemote
VCSessionDownlinkBandwidthAllocatorClient
VCTransportSessionIDS
AVCCameraTestUtils
VCVideoReceiverBase
VCConnectionChangedHandler
VCMediaStreamGroupConfig
VCMovieWriterUtil
VCMediaNegotiationBlobVideoSettings
VCKeyedArchiverExtensions
VCStreamInputVideo
VCVideoStreamRateAdaptation
VCVideoRuleCollectionsScreenAirplayMac
VCAudioRelayIO
VCAudioIOSource
VCDisplayLink
VCStreamOutput
VCStreamSychronizationDelegate
VCRemoteVideoManagerStreamOutputDelegate
VCCaptionsTranscription
VCMediaStreamStats
VCSessionErrorUtils
AVCScreenCaptureTestDelegate
AVCScreenCaptureDelegate
VCImageMirroringConverter
VCMediaNegotiationBlobV2GeneralInfo
VCVideoReceiverDefault
VCStreamInputManager
VCStreamInputDelegate
VCConnectionManager
VCConnectionHealthMonitorDelegate
VCWifiAssistManagerDelegate
VCLinkProbingHandlerDelegate
VCCoreMotionManagerDelegate
VCVTPWrapper
VCRecommendedNetworkSettings
VCNetworkFeedbackController
WCMClientDelegate
WRMClientDelegate
VCAudioClient
VCAudioStreamSendGroup
VCRedundancyControllerDelegate
VCMediaNegotiatorResultsAudio
VideoUtil
VCVideoRuleCollectionsScreenSecondary
VCBasebandMetrics
AVCBasebandCongestionDetector
VCSessionBandwidthAllocationTableEntry
VCSessionUplinkBandwidthAllocatorOneToOne
VCCCMessage
TCPTunnelClient
VideoConferenceRealTimeChannel
TCPBufferPool
VCCallSession
VCSecureDataChannelDelegate
VCCaptionsReceiverDelegate
Callbacks
PrivateMethods
Messages
VCTransportSessionLegacyDelegate
AVCRateControllerDelegate
VCRateControlMediaControllerDelegate
VCCallLinkCongestionDetector
SessionDelegate
VCCapabilities
HandleWrapper
VideoConference
VCAudioPowerLevelMonitorDelegate
VCMomentTransportDelegate
AudioProcessing
SIPDispatch
SessionInfo
VCCallSessionDelegate
VideoProcessing
VCVideoSink
VCVideoCaptureClient
NATDelegate
GKNATObserverDelegate
VCRateControlAlgorithmBase
VCRateControlAlgorithm
VCCaptionsSegmentBlob
VCTransportSessionLegacy
LoopbackSocketTunnelDelegate
InterfaceListenerDelegate
VCConnectionManagerDelegate
VCAudioUnitProperties
VCTextReceiver
VCTextFrameReceiver
VideoConferenceManager
VideoConferenceDelegate
VCControlChannelMessageOptions
VCControlChannelTransaction
VCBTNotificationMonitor
VCMediaNegotiationBlob
VCRateControlAlgorithmTelephony
VCVideoTransmitterDefault
VCVideoReceiverFeedbackDelegate
VCRedundancyControlAlgorithmVideoMultiway
SDPMediaLine
VCSession
VCSessionParticipantStreamDelegate
RTCPReportProvider
VCSecurityEventHandler
VCSessionParticipantDelegate
VCNetworkFeedbackControllerDelegate
VCSessionStatsControllerDelegate
VCSessionParticipantLocalVideoStreamDelegate
AVCScreenCapture
VCAudioRelayIOControllerSettings
VCAudioRelayIOController
VCSystemAudioCaptureSession
VCMediaNegotiatorMultiwayVideoStream
VCCCMessageAcknowledgment
VCConnectionIDS
VideoAttributes
VCSessionParticipantVideoStreamConfig
VCAudioStreamGroupCommonConfig
VCRateControlAlgorithmStabilizedNOWRD
VCAudioRule
VCTextTransmitter
VCMediaNegotiatorMultiwayAudioStream
VCEmulatedNetworkDoubleQueueReorder
VCMediaNegotiationBlobV2SettingsU1
VCSessionParticipantLocal
VCIDSStreamIDGenerator
VCSessionUplinkBandwidthAllocatorClient
VCSessionBitrateArbiter
VCTransportSessionSocket
AVConferenceError
VCAudioIO
VCAudioIOControllerDelegate
VCStatisticsCollectorQueue
VCAudioCaptionsBufferInfo
VCAudioCaptionsBufferInfoCollection
VCPixelTransferSession
AVCStreamInput
VCVideoStreamRateAdaptationFeedbackOnly
VCEmulatedNetworkQueue
AVCCaptionsClient
VCScreenCaptureManager
VCStreamInput
VCStreamInputCaptureSourceDelegate
VCAudioIOControllerClient
AVAudioDevice
AVInternalDeviceList
AVAudioDeviceList
VCEmulatedNetworkAlgorithmQueueLoss
VCSessionParticipantOneToOneConfig
VCRedundancyControlAlgorithmAudioMultiWay
AVCSessionParticipant
AVCSessionParticipantControlProtocol
AVCStreamOutput
AVCMediaStreamNegotiatorSettings
AVCMediaStreamNegotiatorSettingsRemoteMic
AVCMediaStreamNegotiatorSettingsRemoteCamera
AVCMediaStreamNegotiatorSettingsiPadCompanion
AVCMediaStreamNegotiatorSettingsAirplayMirroring
AVCMediaStreamNegotiatorSettingsCoreDeviceSystemAudio
VCTransportSession
VCVideoTransmitterConfig
AVCQoSMonitor
VCVisualAlert
VCRemoteVideoState
VCRemoteVideoManager
VCRemoteVideoManagerDelegate
VCCellularAudioTap
AVCAudioPowerSpectrumChannel
VCPrivateAccess
VCNetworkSimulator
VCCaptionsUtilities
VCMediaNegotiationBlobCaptionsSettings
VCMediaStream
VCMediaStreamProtocol
VCVideoStreamReceiveGroupConfig
VCVideoRuleCollectionsMoments
VCVideoRuleCollectionsMomentsMac
VCVideoRuleCollectionsMomentsEmbeded
WRMClient
VCVideoRuleCollectionsScreenSecondaryMac
AVCCaptionsToken
AVCCaptionsResult
AVCCaptionsConfig
VCImageResizingConverter
VCHardwareSettingsEmbedded
VCHardwareSettingsEmbeddedProtocol
VCSwitchManager
VCVideoRuleCollectionsRemoteCamera
VCConnectionManagerIDS
VCIDRSchedulerStream
VCSessionMediaTypeSettings
VCMediaStreamSendGroupConfig
VCMediaStreamSendGroup
VCMediaNegotiationBlobV2CameraSettingsU1
VCMediaNegotiationBlobVideoPayloadSettings
XPCClientUser
AVConferenceXPCClient
VCVideoRuleCollectionsCameraMac
VCStreamOutputManager
VCSecurityKeyManager
VCMediaNegotiationBlobV2BandwidthSettings
VCMediaNegotiator
VCVideoCaptureConverter
VCStringUtils
VCConnectionHealthMonitor
VCSessionMediaStreamConfigurationProvider
VCPixelBufferOverlay
VCVideoRuleCollectionsRemoteCameraMac
VCVirtualTextDevice
VCMediaStreamTransport
VCXPCConnection
VCXPCServerUser
AVConferenceXPCServer
XPCManagement
VCMediaNegotiatorResultsCaptions
VCVideoRuleCollectionsCamera
VCMediaStreamMultiwayConfigVideo
VCVideoStreamConfig
VCMediaNegotiatorStreamGroupCodecConfiguration
VCXPCClientShared
VCEffects
AVCMediaStreamNegotiatorSettingsCoreDeviceScreenSharing
AVCTestMonitorReport
AVCTestMonitorInjectAudioConfig
AVCTestMonitor
BitrateLimits
VCAudioTierPicker
VCMediaNegotiatorResults
VCStreamInputAudio
VCVideoRuleCollectionsCameraEmbedded
VCMediaNegotiatorResultsVideo
VCControlChannelDialogV2
VCImageAttributeRules
VCVideoStreamRateController
VCControlChannelMultiWay
VCControlChannelTransactionDelegate
SnapshotTimer
VCPositionalInfo
VCTextJitterBuffer
VCVideoStreamReceiveGroup
VCPacketBundler
VCVideoQualityInfo
VCMediaNegotiatorAudioConfiguration
AVCAudioStream
VCNWConnectionCongestionDetectorBaseband
VCEmulatedNetworkSingleQueue
VCSessionDownlinkBandwidthAllocator
VCMockIDSDataChannelLinkContext
VCMockIDSDatagramChannel
VCMockIDSDatagramChannelController
VCMockIDSDatagramChannelSocket
VCNetworkAgent
AVConferencePreviewClientDelegate
AVConferencePreview
DTMFEventHandler
VCWiFiUtils
VCSessionParticipantConfig
VCDuplicationHandler
VCSecureDataChannel
VCIDSSessionInfoSynchronizer
VCSessionStatsController
AVCPacketRelaySocketConnection
AVCPacketRelayConnectionProtocol
AVCPacketRelayIDSConnection
AVCPacketRelayConnection
AVCPacketRelay
utils
AVCMediaStreamNegotiator
VCMediaStreamSynchronizer
VCMediaStreamSyncSourceDelegate
AVCTextStream
VCCCMessageWrapper
SuddenChangeParameters
VCRateControlBandwidthEstimator
VCRateControlBandwidthEstimatorMap
VCMediaNegotiationBlobV2StreamGroupPayload
VCRateControlServerBag
AVCAudioPowerSpectrumBin
VCMediaNegotiationBlobV2MicrophoneSettingsU1
VCAudioClientManager
VCTransportSessionProxy
VCVideoTransmitterBase
VCClientRelay
VCVideoFrameUtil
VideoRules
AudioRules
BandwidthSettings
MultiwayAudioStream
MultiwayVideoStream
MomentsSettings
FaceTimeSettings
VCVirtualTTYDevice
AVCMoments
VCNetworkAgentCell
VCMediaNegotiationBlobVideoRuleCollection
VCVideoRuleCollectionsScreenAirplayEmbedded
VCVideoRuleCollectionsScreen
NetworkUtils
VCVideoCapture
VCTransportSessionIDSMultiLink
VCIDSSessionInfoSynchronizerDelegate
VCMovieWriter
VCMovieWriterProtocol
WRMReporting
VCAudioStreamTransport
VCAudioPowerSpectrumBin
VCSystemAudioCapture
VCAudioPayload
VCVideoStream
VCVideoReceiverDelegate
VCMediaNegotiationBlobV2CodecFeatures
VCMediaStreamGroup
VCMediaStreamNotification
StateTransitions
VCAudioTier
VCSessionMessaging
VCControlChannelDelegate
VCNetworkAddress
VCMediaStreamMultiwayConfig
VCMediaStreamRateControlConfig
VCMediaStreamConfig
AVCVideoDataOutput
AVCStreamOutputDelegate
VCLinkProbingResult
VCVideoFeatureListStringHelper
OneToOne
SIPClientDataDictionary
VCSessionMessageTopic
VCRedundancyControlAlgorithmAudioLegacy
AVCAudioPowerSpectrum
VCLinkProbingHandler
VideoScaler
VCSessionParticipantMediaStreamInfo
VCCallInfo
VCCameraPreview
AVCAudioPowerSpectrumMeter
VCMediaStreamRateAdaptation
VCServerBag
VCRedundancyControlAlgorithmAudio
VCIDRSchedulerPeriodGroup
Messaging
VCAudioTransmitterConfig
AVCMomentsRequest
VCMediaStreamMultiwayConfigAudio
VCAudioStreamConfig
VCVideoStreamSendGroup
VCSessionUplinkVideoStreamControllerDelegate
VCMediaStreamSendSyncSourceDelegate
VCTestMonitorManager
VCCaptionsReceiver
VCImageRotationConverterBase
VCRedundancyControllerAudio
VCControlChannelDialogV1
VCCALayerHost
AVCRemoteVideoClient
VCBitrateRule
VCBitrateArbiter
AVCPacketRelayDriver
VCScreenShare
VCMediaNegotiationFaceTimeSettings
VCStatisticsHistory
LogDumpUtility
VCSessionPresentationInfo
AVCSessionConfiguration
VCVideoFrameBufferPool
Checkpoint
VCMediaNegotiationBlobV2StreamGroupStream
VCAudioTransmitter
VCCallInfoBlob
VCEmulatedOutputQueue
VCTelephonyInterface
AVCVirtualTTYDevice
VCAudioPayloadConfig
VCTransportStreamGFT
VCSessionBandwidthAllocationTableStreamInfo
VCSessionBandwidthAllocationTable
VCEffectsManager
VCDefaults
VCControlChannel
VCMediaControlInfo
VCMediaControlInfoIPCamera
VCMediaControlInfoFaceTimeAudio
VCMediaControlInfoFaceTimeVideo
VCMediaControlInfoMultiwayAudio
VCVideoRuleCollectionsScreenSecondaryEmbedded
VideoConferencing
AVCSession
AVCSessionParticipantDelegate
VCStreamInputCaptureSource
VCVideoCaptureServer
AVCVideoStream
VCAudioStreamReceiveGroupConfig
VCTextStreamConfig
VCObject
VCHardwareOperatingModeSettings
VCHardwareSettings
VCVideoRuleCollectionKey
VCVideoRuleCollections
VCSessionParticipant
VCMediaStreamGroupDelegate
VCAudioSessionMediaProperties
VCTransportSessionIDSSingleLink
AVCNetworkAddress
AVCMediaStreamConfig
AVCAudioStreamConfig
AVCVideoStreamConfig
AVCTextStreamConfig
VCWCMClient
SDPParser
VCTransport
VCVideoRuleCollectionsScreenAirplay
AVAudioClient
AVConferenceOperatingModeWithAVCMediaStreamMode:
RATType
AVConferenceServiceError:detailCode:description:
StringAsConfigurationExtension:
AVConferenceServiceError:detailedCode:returnCode:filePath:description:reason:
T@"<InterfaceListenerDelegate>"
AVConferenceXPCServerSingleton
T@"<VCRedundancyControllerProtocol>",&,N,V_redundancyController
CMTimeFromXPCDictionary:
T@"IDSDataChannelLinkContext",R
DataOnlyVCCapabilities
T@"NSArray",C,N,V_streamIDsCell
H264PacketizationMode
T@"NSArray",R,N
HTTPSCheckWithIPPort:ipv6Prefix:useCache:
T@"NSArray",R,N,V_streamConfigs
IPPortForNWConnection:
T@"NSMutableArray",R,N,V_meters
JSONObjectWithData:options:error:
T@"NSObject<OS_dispatch_queue>",R,N,V_delegateNotificationQueue
NATTypeDictionaryUpdated:
T@"NSObject<VideoConferenceSpeakingDelegate>",VspeakingDelegate
NTPLeastSignificantWord
T@"NSString",&,N,V_profileLevel
OSVersion
T@"NSString",C,N,VparticipantID
QRSessionID
T@"VCAudioTier",R,V_defaultTier
SDPUsername
T@"VCMediaNegotiationBlobMomentsSettings",&,N,V_momentsSettings
SIPHandle
T@"VCMediaNegotiatorResultsVideo",R,N,V_negotiatedVideoSettings
SRTPCipherSuiteForVCMediaStreamCipherSuite:
T@"VCSystemAudioCaptureSession",&,N,V_systemAudioCaptureSession
StringAsConfiguration:
T@?,C,N
StringAsOperation:
T@?,C,V_handler
T#,R
TB,N,GisDTXEnabled,V_dtxEnabled
T(tagNTP=Q{?=II}),N,V_remoteBlobCreationTime
TB,N,GisRedEnabled,V_redEnabled
T(tagNTP=Q{?=II}),R,N,V_creationTime
TB,N,SsetPreferRelayOverP2PEnabled:,V_preferRelayOverP2PEnabled
T@"<AVCAudioPowerSpectrumMeterDelegate>",R,N,V_delegate
TB,N,V_includeRedSequenceOffset
T@"<AVCCaptionsClientDelegate>",R
TB,N,V_isPaused
T@"<AVCMomentsDelegate>",R,N,V_delegate
TB,N,V_remoteCanDisplayCaptions
T@"<AVCPacketRelayDelegate>",N,V_delegate
TB,N,V_targetBitrateIsAudioOnly
T@"<AVCScreenCaptureDelegate>",R,N,V_delegate
TB,N,VsupportsDynamicMaxBitrate
T@"<AVCSessionParticipantDelegate>",N
TB,R,N,V_isFull
T@"<AVCTextStreamDelegate>",N,V_delegate
TB,R,N,V_isRemoteCodecInfoValid
T@"<AVCVideoStreamDelegate>",N,V_delegate
TB,R,N,V_vcpSupportsHEVCEncoder
T@"<RTCPReportProvider>",N
TC,N,Vu8Version
T@"<VCAudioTransmitterDelegate>"
TI,N,V_localBandwidthEstimation
T@"<VCCaptionsReceiverDelegate>",R,V_delegate
TI,N,V_metadata
T@"<VCConnectionHealthMonitorDelegate>",V_delegate
TI,N,V_redundancyControllerMode
T@"<VCConnectionProtocol>",&,N,V_connectionForDuplication
TI,N,V_switches
T@"<VCConnectionProtocol>",&,N,V_currentActiveConnection
TI,R,N,V_basebandAverageBitrate
T@"<VCConnectionProtocol>",&,N,V_pendingPrimaryConnection
TI,R,N,V_screenCaptureDisplayID
T@"<VCConnectionProtocol>",&,N,V_primaryConnection
TI,R,V_streamID
T@"<VCConnectionProtocol>",&,N,V_secondaryConnection
TS,N,V_streamID
T@"<VCLinkProbingHandlerDelegate>"
T@"<VCMediaCaptureController>",N
T^v,R,N
T@"<VCMediaStreamDelegate>",N
T^{__CVBuffer=},N,V_pixelBuffer
T@"<VCMediaStreamNotification>",N
T^{tagHANDLE=i},R,N,V_rtpHandle
T@"<VCMomentsCollectorDelegate>",N,V_momentsCollectorDelegate
Td,N,VstartTime
T@"<VCMomentsMessengerDelegate>",N,V_delegate
Tf,N,V_priority
T@"<VCRemoteVideoManagerStreamOutputDelegate>",N,V_streamOutputDelegate
Tf,R,N,V_volume
T@"<VCServerDelegate>",N,V_delegate
Ti,R,N,V_height
T@"<VCSessionDownlinkBandwidthAllocatorClient>",R,V_client
Ti,V_deviceRole
T@"<VCSessionParticipantLocalVideoStreamDelegate>",N,V_videoStreamDelegate
T{VoiceIOFarEndVersionInfo=[64C][64C]I},R,N,V_farEndVersionInfo
T@"<VCSessionUplinkBandwidthAllocatorClient>",R,V_uplinkClient
_activeStreamID
T@"<VCTelephonyInterfaceDelegate>"
_addCarrierFlag
T@"<VCTransportSessionLegacyDelegate>"
_allPayloadsLocalFeaturesString
T@"<VCVideoReceiverFeedbackDelegate>",N,GgetVideoReceiverFeedbackDelegate
_allowRequestForWRMNotification
T@"<WRMClientDelegate>"
_allowSwitching
T@"AVAudioDevice",&,V_inputDevice
_alwaysOnAudioRedundancyEnabled
T@"AVAudioDevice",R,N
_audioMediaControlInfoGenerator
T@"AVCAudioStreamConfig",&,N,V_audio
_audioSessionId
T@"AVCMediaStreamConfig",&,N,V_configuration
_audioUnitModel
T@"AVCNetworkAddress",&,N,V_remoteAddress
_avConferenceScreenCaptureQueue
T@"AVCPacketFilter",&,V_packetFilter
_basebandNormalizedQueuingDelay
T@"AVCRateControlFeedbackController",&,N,V_feedbackController
_bitrateArbiter
T@"AVCSessionConfiguration",&,N,V_configuration
_budgetConsumingCellularRxBytes
T@"AVCStatisticsCollector",&,N,V_statisticsCollector
_buffer
T@"AVCTextStreamConfig",&,N,V_text
_bundlingScheme
T@"CALayer",&,VnetworkQualityGraphLayer_
_callID
T@"GKRingBuffer",&,N,VringBuf
_capLTE
T@"NSArray",&,N,V_payloadPreference
_checkTCPAndSSL
T@"NSArray",&,N,V_supportedBandwidths
_client
T@"NSArray",&,N,V_supportedNumRedundantPayload
_codecs
T@"NSArray",&,N,V_videoParameterSet
_config
T@"NSArray",&,V_connections
_controlChannel
T@"NSArray",C,N,V_peerSubscribedStreams
_controlInfoFEC
T@"NSArray",C,V_compoundStreamIDs
_controlInfoMKI
T@"NSArray",R,N,V_attributes
_conversationID
T@"NSArray",R,N,V_bins
_currentMsgType
T@"NSArray",R,N,V_clientContextList
_currentScreenEncoderGroupCount
T@"NSArray",R,N,V_fecLevelPerFrameSizeVector
_currentlyReadingDataGoalLength
T@"NSArray",R,N,V_mediaStreams
_destroyHandler
T@"NSArray",R,N,V_payloads
_dtmfSampleRate
T@"NSArray",R,N,V_rules
_effectsApplied
T@"NSArray",R,N,V_segments
_encoderGroupID
T@"NSArray",R,N,V_subStreamConfigs
_featureStrings
T@"NSArray",R,N,V_supportedBitrates
_forceFramerate
T@"NSArray",R,N,V_transportArray
_format
T@"NSArray",R,N,Vlimits
_frameFormatMic
T@"NSData",&,N
_generatedSSRCs
T@"NSData",&,N,V_packedPayload
_headerFullOnly
T@"NSData",&,N,V_payload
_highFecEnabled
T@"NSData",&,N,V_remoteRelayConnectionData
_idsDestination
T@"NSData",&,N,V_sendMediaKey
_inVideoBitrate
T@"NSData",&,N,VtokenData
_inputAvailable
T@"NSData",&,V_imageData
T@"NSData",&,V_localRelayConnectionData
_isAudioSending
T@"NSData",&,VsrtpKeyBytes
_isChannelBound
T@"NSData",R,N
_isFull
T@"NSData",R,N,V_frequencyLevels
_isIdle
T@"NSData",R,N,V_opaqueData
_isInterrupting
T@"NSDate",C,N,V_conversationTimeBase
_isMachineNewerThanSandybridge:
T@"NSDictionary",&,N,V_capabilities
_isOWRDConstant
T@"NSDictionary",&,N,V_localRelayUpdate
_isRelayRunning
T@"NSDictionary",&,N,V_parameterSets
_isSourceTimestampInfoAvailable
T@"NSDictionary",&,N,V_videoFeatureStrings
_isVideoStarted
T@"NSDictionary",&,N,VfeatureListDict
_lastDroppedFromImageQueueCount
T@"NSDictionary",N,V_colorInfo
_lastNoVoiceActivityPacketCount
T@"NSDictionary",R,N
_lastRampUpTime
T@"NSDictionary",R,N,V_audioVideoBitrateToStreamIDsTable
_lastReportingCallbackTimeShort
T@"NSDictionary",R,N,V_customFeatureListStrings
_lastUpdateTime
T@"NSDictionary",R,N,V_participantStreamTokens
_localAlertInfo
T@"NSDictionary",R,N,V_rxPayloadMap
_localLanguages
T@"NSDictionary",R,N,V_txCodecFeatureListStrings
_locale
T@"NSDictionary",R,N,V_videoOnlyBitrateToStreamIDsTable
_mapKey
T@"NSDictionary",R,V_rules
_maxAllowedRedundancyPercentage
T@"NSLocale",&,N,V_locale
_maxAllowedScreenShareBitrate3G
T@"NSMutableArray",&,N,V_bandwidthSettings
_maxBitrateNonExpensiveDownlink
T@"NSMutableArray",&,N,V_multiwayVideoStreams
_maxPacketCount
T@"NSMutableArray",&,N,V_segments
_memoryPoolSize
T@"NSMutableArray",&,N,V_streams
_meters
T@"NSMutableArray",&,N,V_videoRuleCollections
_mismatchedLandscapeAspectRatio
T@"NSMutableArray",R,N,V_moitors
_moreThanOneConnectionAvailable
T@"NSMutableArray",R,N,VsecondaryAudioPayloads
_mutedTalkerNotificationHandler
T@"NSMutableArray",R,VvcList
_networkPayload
T@"NSMutableDictionary",&,N,V_remoteParticipantsMapByServerID
_nextWakeUpTime
T@"NSMutableDictionary",&,N,V_sessionDict
_nwConnectionCongestionDetector
T@"NSMutableDictionary",&,V_optInDictionary
_oneToOneConfig
T@"NSMutableDictionary",R,N,V_participantsToAdd
_outputAudioPowerSpectrumSource
T@"NSMutableDictionary",R,N,V_registeredUUIDServiceBlocks
_packetLossRate
T@"NSMutableDictionary",R,N,V_sessions
_parentStreamID
T@"NSMutableDictionary",R,VregisteredBlocks
_paused
T@"NSMutableOrderedSet",&,N,V_multiwayVideoStreams
_pidReceiveProc
T@"NSNumber",&,N,V_activeStreamID
_primaryPayload
T@"NSNumber",&,N,V_targetStreamID
_rampDownStatus
T@"NSNumber",&,N,VanswerBandwidth
_rateAdaptation
T@"NSNumber",&,N,VaudioRTPPort
_receiverReport
T@"NSNumber",&,N,VbasebandCodecSampleRate
_recommendedMTU
T@"NSNumber",R,&
_redPayloadType
T@"NSNumber",R,N,V_deviceID
_redundancyMode
T@"NSNumber",R,N,V_sendingStreamID
_remoteSwitches
T@"NSNumber",R,V_expMovMeanRTT
_reportNATQueue
T@"NSNumber",R,V_plrTier
_reportingDefaultRealtimePeriod
T@"NSObject",&,N,V_connectionSetupPiggybackBlob
_resetRemoteAudioPacketReceived
T@"NSObject<AVCMomentsRequestDelegate>",N,V_delegate
_resize
T@"NSObject<AVConferencePreviewClientDelegate>",&,N,Vdelegate
_rtcpRemotePort
T@"NSObject<NSCopying>",&,N,V_reportingHierarchyToken
_schedulerItems
T@"NSObject<OS_dispatch_queue>",&,N
_screenSubLayer
T@"NSObject<OS_dispatch_queue>",&,N,V_internalReceiverQueue
_selectedMediaEntriesForClients
T@"NSObject<OS_dispatch_queue>",N
_sendSuccessCountSinceLastCheck
T@"NSObject<OS_dispatch_queue>",R,N,V_handlerQueue
_sentFrameCount
T@"NSObject<OS_dispatch_queue>",R,V_xpcQueue
_serializedSize
T@"NSObject<OS_dispatch_source>",R,V_periodicHealthPrintDispatchSource
_sharingEnabled
T@"NSObject<OS_nw_activity>",N,SsetParentNWActivity:,V_parentNWActivity
_sinkArrayMutex
T@"NSObject<OS_xpc_object>",R,Vconnection
_socket
T@"NSObject<VCAudioPowerLevelMonitorDelegate>",N,Vdelegate
_sourceDelegate
T@"NSObject<VCMediaStreamDelegate>",N
_speakerContext
T@"NSObject<VCMediaStreamSyncSourceDelegate>",N,VsyncSourceDelegate
_statsCollector
T@"NSObject<VCVideoCaptureServer>",R
_stillImageTime
T@"NSObject<VideoConferenceDelegate>",N
_stream
T@"NSOrderedSet",R,N,V_streamConfigs
_streamGroupIDs
T@"NSSet",&,N,V_bandwidthConfigurations
_streamToResume
T@"NSSet",&,N,V_captionsSenderLanguages
_strongDelegate
T@"NSSet",&,N,V_localLanguages
_sumWorstRecentRTTInMillisecond
T@"NSSet",&,N,V_momentsVideoCodecs
_switchFromGFTToOneToOneEnabled
T@"NSSet",&,N,V_supportedAudioPayloads
_targetStreamID
T@"NSSet",R,N,V_audioPayloadTypes
_timestampQueue
T@"NSSet",R,N,V_bandwidthConfigurations
_totalBandwidth
T@"NSSet",R,N,V_payloads
_transportArray
T@"NSSet",R,N,V_pixelFormats
_tunnel
T@"NSSet",R,N,V_streamGroupConfigurations
_useRateControl
T@"NSSet",R,N,V_videoPayloadTypes
_vcStreamOutput
T@"NSString",&,N,V_basebandCodec
_videoMediaControlInfoGenerator
T@"NSString",&,N,V_deviceType
_videoStreamConfigurationsCount
T@"NSString",&,N,V_featureString
_volume
T@"NSString",&,N,V_idsDestination
_vtpDestination
T@"NSString",&,N,V_logPrefix
_writer
T@"NSString",&,N,V_participantId
_wrmRequestNotificationCallback
T@"NSString",&,N,V_remoteBasebandCodec
addCodecConfig:
T@"NSString",&,N,V_remoteUserAgent
addParticipant:
T@"NSString",&,N,V_selectiveScreenUUID
addToSentStats:
T@"NSString",&,N,V_sessionUUID
allKeys
T@"NSString",&,N,V_topic
allowConcurrent
T@"NSString",&,N,V_userAgent
appendCodecFeaturesToMediaBlob:
T@"NSString",&,N,Vorigin
applyControllerFormatToClients:
T@"NSString",&,N,VsessionIP
applyNegotiatedFaceTimeSettings
T@"NSString",C,N,V_connectionTypeString
arrayHasObject:withPayloadType:
T@"NSString",C,N,V_deviceType
assign:
T@"NSString",C,N,V_interfaceName
audioIO
T@"NSString",C,N,V_localInterfaceType
audioStreamMode
T@"NSString",C,N,V_relayConnectionID
audioUnitNumber
T@"NSString",C,N,V_selectiveScreenUUID
awdTime
T@"NSString",C,N,VbasebandCodecType
basePeriodCount
T@"NSString",C,N,Vip
builtinMicCount
T@"NSString",C,N,VpeerReportingID
cString
T@"NSString",C,V_localParticipantID
cameraSwitching
T@"NSString",C,V_remoteParticipantID
cancel:
T@"NSString",N,V_audioFileName
capWifi
T@"NSString",R,C
captionsEnabled
T@"NSString",R,N,V_UID
captureSourceID
T@"NSString",R,N,V_featureListStringH264
checkAndUpdatePrimaryConnection
T@"NSString",R,N,V_fieldName
checkStreamsForAdditionalOptIn:
T@"NSString",R,N,V_idsDestination
cleanUpVideoRTP
T@"NSString",R,N,V_requesteeID
cleanupDelegate
T@"NSString",R,N,V_text
cleanupSession:didRemoteCancel:
T@"NSString",R,N,V_uuid
clientStreamModeWithStreamMode:
T@"NSString",R,V_destination
codecSampleRate
T@"NSURL",&,N
collectVideoStreamStartMetrics:
T@"NSUUID",R
configToString:
T@"TimingCollection",&,N,V_perfTimings
connect
T@"VCAudioIO",&,N,V_audioIO
connectionQueue
T@"VCAudioIO",R,V_audioIO
containsString:
T@"VCAudioPayload",&,N,V_chosenAudioPayload
context
T@"VCAudioPayloadConfig",R,N
copyProcessInfo
T@"VCAudioPayloadConfig",R,VpayloadConfig
createAudioConvertersWithError:
T@"VCAudioRelayIO",C,N,V_clientIO
createNWMonitor
T@"VCAudioRuleCollection",&,N,V_audioRules
createUplinkBandwidthAllocators
T@"VCAudioRuleCollection",R,N,V_supportedAudioRules
currentCalendar
T@"VCAudioStreamGroupCommon",R,V_common
datagramChannel
T@"VCAudioStreamGroupCommonConfig",&,V_audioStreamGroupConfig
dealloc
T@"VCAudioTierPicker",&,N,V_audioTierPicker
deleteTCPTunnel
T@"VCAudioUnitProperties",&,N,V_currentAudioUnitProperties
deregisterCallbacksWithContext:
T@"VCCCMessage",&,N,V_message
dialogs
T@"VCCallInfoBlob",R,V_callInfoBlob
didGetSnapshot:
T@"VCCapabilities",&,N,V_capabilities
didReceiveText:
T@"VCConnectionHealthMonitor",&,N,V_connectionHealthMonitor
didSessionPause
T@"VCConnectionManager",&,VconnectionManager
didStartPreview
T@"VCDatagramChannelIDS",R,V_datagramChannel
didStopStreamInputCaptureSource
T@"VCIDSSessionInfoSynchronizer",R,N,V_sessionInfoSynchronizer
dispatchedSetRemoteVideoPaused:
T@"VCImageAttributeRules",&,N,VimageAttributeRules
dispatchedUpdateProbingResults:
T@"VCMediaNegotiationBlobCaptionsSettings",&,N,V_captionsSettings
displayLinkWithTarget:selector:
T@"VCMediaNegotiationBlobV2CameraSettingsU1",&,N,V_cameraU1
dtmfPayloadType
T@"VCMediaNegotiationBlobV2GeneralInfo",&,N,V_generalInfo
effectsMetadata
T@"VCMediaNegotiationBlobV2MomentsSettings",&,N,V_momentsSettings
enableCaptions:
T@"VCMediaNegotiationBlobVideoSettings",&,N,V_screenSettings
endRTPTimeStamp
T@"VCMediaNegotiationFaceTimeSettings",&,N,V_faceTimeSettings
expectedBitrate
T@"VCMediaNegotiatorAudioConfiguration",&,N,V_systemAudioConfiguration
fecMode
T@"VCMediaNegotiatorLocalConfiguration",R,N
forceWifiAssist
T@"VCMediaNegotiatorResults",R,N
formats
T@"VCMediaNegotiatorResultsAudio",R,N
frequencyLevels
T@"VCMediaNegotiatorResultsFaceTimeSettings",R,N
getCachedIPPort
T@"VCMediaNegotiatorResultsMoments",R,N
getConnectionTypeForStreamMode:
T@"VCMediaNegotiatorResultsVideo",R,N
getIsSendingAudio:callID:error:
T@"VCMediaNegotiatorStreamGroupU1Configuration",&,N,V_u1Config
handleCodecModeChangeEvent:didUpdateBandwidth:didUpdateBitrate:
T@"VCMediaStreamConfig",R,N
handleLinkDisconnectedWithInfo:
T@"VCMediaStreamMultiwayConfig",&,N,V_multiwayConfig
handlePrimaryConnectionChanged:
T@"VCMediaStreamTransport",R,N
hasCapabilities
T@"VCMoments",R,N,V_vcMoments
hasEncoderUsage
T@"VCNetworkAddress",&,N,V_localAddress
hasLinkProbingCapabilityVersion
T@"VCPacketBundler",R,N,V_audioBundler
hasParameterSet
T@"VCRateControlMediaController",&,N
hasQualityIndex
T@"VCRateControlServerBag",&,N,V_serverBag
hasVideoPayload
T@"VCSessionMediaNegotiator",&,N,V_mediaNegotiator
iHeight
T@"VCSessionMessaging",&,N,V_sessionMessaging
idsUPlusOneMode
T@"VCSessionParticipantMediaStreamInfo",R,N
initWithCallID:
T@"VCSessionParticipantRemote",R,N
initWithConfig:
T@"VCSessionUplinkVideoStreamController",&,N,V_uplinkVideoStreamController
initWithDouble:
T@"VCStreamOutput",&
initWithFormat:
T@"VCTransportSession",R,N,V_transportSession
initWithMode:error:streamToken:
T@"VCVideoRule",R,N,VconferenceCaptureRule
initWithObject:
T@"VCVideoRuleCollections",&,N,V_screenRuleCollections
initWithRelevantStorebagEntries
T@"VCVideoRuleCollections",R,N
initWithString:
T@"VCVideoRuleCollections",R,N,V_videoRuleCollections
initializeServerSideInputStream
T@"VCXPCClientShared",&,N
inputSampleRate
T@"VideoAttributes",&,N,V_remoteScreenAttributes
internalSampleRateForCodecType:
T@"VideoAttributes",&,N,VremoteVideoAttributes
ipportToString:
T@"VideoAttributes",&,V_remoteVideoAttributes
isBuiltInDevice
T@"VideoConference"
isEqualBandwidthConfigurations:
T@,N
isFinal
T@,R
isHistoryImproved:currentIndex:
T@?,C
isInputFrequencyMeteringEnabled
T@?,C,N,V_eventHandler
isLocal
T@?,C,N,V_peerSubscribedStreamCallback
isLowestQuality
T@?,C,N,V_processCompleteHandler
isOctectAligned
T@?,C,V_allocationResponseHandler
isQueryAnswered
T@?,C,V_destroyHandler
isRTCPXREnabled
T@?,C,V_readHandler
isRelay
T@?,C,V_terminationHandler
isRemoteOnPeace
T@?,R,N,V_callbackBlock
isScreenConfig:
TB,GisPersistent
isSendingMedia:
TB,GisSubscribedTo,V_subscribedTo
isStartOnDemand
TB,N
isTransportIPv6
TB,N,GisAudioEnabled,V_audioEnabled
isValidContext:
TB,N,GisAudioPaused
isVideoExpected
TB,N,GisAudioPaused,V_audioPaused
lastSRTimestamp
TB,N,GisCNEnabled,V_cnEnabled
layoutSublayers
TB,N,GisDTMF,V_dtmf
localFrameWidth
TB,N,GisDecryptionTimeoutEnabled
lookupCachedNATFlagsForNetwork:
TB,N,GisFollowSystemOutputEnabled,V_followSystemOutput
manager
TB,N,GisInputFrequencyMeteringEnabled
maxMediaBitrate
TB,N,GisInputMeteringEnabled,V_isInputMeteringEnabled
maxPacketLength
TB,N,GisLatencySensitiveMode,V_latencySensitiveMode
mediaNegotiator
TB,N,GisLocalOnWiFi,V_localOnWiFi
microphoneGroup
TB,N,GisMicrophoneMuted,V_isMicrophoneMuted
minSamplesCount
TB,N,GisMixingVoiceWithMediaEnabled
moments
TB,N,GisMixingVoiceWithMediaEnabled,V_mixingVoiceWithMediaEnabled
momentsDelegate
TB,N,GisOctectAligned,V_octetAligned
multiwayToOneToOneSwitchSuspend
TB,N,GisOneToOneEnabled
natType
TB,N,GisOneToOneModeEnabled,V_oneToOneModeEnabled
negotiatedVideoSettingsForGroupID:localU1Config:remoteU1Config:
TB,N,GisOutputFrequencyMeteringEnabled
negotiationData
TB,N,GisPaused
network
TB,N,GisRTCPEnabled
newImageTypeSet
TB,N,GisRTCPTimeOutEnabled
newPackedMessageFromDictionary:
TB,N,GisRTCPTimeoutEnabled
notifyCodecModeChangeEvent:didUpdateBandwidth:didUpdateBitrate:
TB,N,GisRTPTimeOutEnabled
ntpTime
TB,N,GisRTPTimeoutEnabled
numberWithChar:
TB,N,GisRedundancyEnabled
onCallIDChanged
TB,N,GisRemoteAudioEnabled,V_remoteAudioEnabled
oneToOneEnabled
TB,N,GisRemoteMuted
optInDictionary
TB,N,GisRemoteScreenEnabled,V_remoteScreenEnabled
optedInStreamID
TB,N,GisRemoteVideoPaused,V_remoteVideoPaused
outMessageQueue
TB,N,GisScreenEnabled,V_screenEnabled
packetDropCount
TB,N,GisSpeakerPhoneEnabled,V_isSpeakerPhoneEnabled
parseBandwidth:
TB,N,GisVideoEnabled
participantData
TB,N,GisVideoPaused
payload
TB,N,GisVideoPaused,V_videoPaused
peerReportingID
TB,N,SsetCurrentDTXEnabled:,V_isCurrentDTXEnabled
plrTier
TB,N,SsetMuted:,V_isMuted
preferredDevice
TB,N,SsetiRATDuplicationEnabled:,V_iRATDuplicationEnabled
primaryConnectionChanged:oldPrimaryConnection:activeConnection:
TB,N,V_H264PacketizationMode
processOptions:
TB,N,V_allowAudioRecording
processVideoRTP
TB,N,V_allowDynamicMaxBitrate
qualityDelegate
TB,N,V_allowRTCPFB
queryProbingResultsWithOptions:
TB,N,V_allowSwitching
readUint32FromConfig:key:value:
TB,N,V_allowsContentsChangeWithAspectPreservation
receiveDelegate
TB,N,V_alwaysOnAudioRedundancyEnabled
redMaxDelay20ms
TB,N,V_audioDumpEnabled
relaySessionKey
TB,N,V_audioIssueDetectorEnabled
release
TB,N,V_audioPaused
releaseSession:
TB,N,V_cellularAllowRedLowBitratesEnabled
remoteCodecType
TB,N,V_didMBLRampDown
remoteLanguages
TB,N,V_didReceiveVideo
remoteParticipantsMapByServerID
TB,N,V_duplicateImportantPktsEnabled
remoteUserAgent
TB,N,V_effectsApplied
removeDelegate:
TB,N,V_enableAudioPowerSpectrumReport
reportImmediateWRMMetric:value:
TB,N,V_enableDNNVAD
reportingAlgosAudioStreamEvent:
TB,N,V_enableMaxBitrateOnNoChangeCMR
requireReliable
TB,N,V_enableVADFiltering
reservedBitrate
TB,N,V_evsHeaderFullOnly
resetPerfTimers
TB,N,V_fastMediaDuplicationEnabled
restart
TB,N,V_fecHeaderV1Enabled
rtcpPSFBForLTRAckStoreBagConfig
TB,N,V_forceFullBandwidth
rtpPort
TB,N,V_hasPendingChanges
rtpSampleRateWithStreamGroupID:
TB,N,V_hasReceivedLastFrame
samplesPerBlock
TB,N,V_hasSpaceAfter
TB,N,V_iRATRtpEnabled
screenDisplayID
TB,N,V_ignoreSilence
selectPreferredRule:screenSize:
TB,N,V_isAudioOnly
sendReliableMessage:withTopic:participantID:timeout:completion:
TB,N,V_isDefaultMode
sendingStreamID
TB,N,V_isDroppedByAQM
serviceHandlerStreamOutputSetTimeSyncOffsetWithArguments:error:
TB,N,V_isEndToEndBasedBandwidthProbingEnabled
session:withCallID:networkHint:
TB,N,V_isFecGeneratorEnabled
sessionInfoSynchronizerDelegate
TB,N,V_isFinal
setARPLHandler:
TB,N,V_isGKVoiceChat
setAllowsRelay:
TB,N,V_isInCanvas
setArrivalTime:
TB,N,V_isLocal
setBlobVersion:
TB,N,V_isLost
setCellularMTU:
TB,N,V_isLowLatencyAudio
setConnections:
TB,N,V_isMuted
setCustomWidth:
TB,N,V_isOneToOne
setDefaultLink:
TB,N,V_isOneToOneRemoteMediaStalling
setDynamicVideoPriorityEnabled:
TB,N,V_isOpusInBandFecEnabled
setEffectsMode:
TB,N,V_isRTCPForLossFeedbackEnabled
setFormatsExt1:
TB,N,V_isRateLimitedMaxTimeExceeded
setHMediaQueue:
TB,N,V_isRemoteAudioPaused
setHasPayloads:
TB,N,V_isRemoteMediaStalled
setHasSwitches:
TB,N,V_isSenderProbingEnabled
setInputDevice:
TB,N,V_isServerPacketRetransmissionEnabled
setIsAudioOnly:
TB,N,V_isStalled
setIsPreLionOS:
TB,N,V_isSubstream
setIsSubstream:
TB,N,V_isSuspended
setIsSuspended:
TB,N,V_isTemporalStream
setLatencySensitiveModeEnabled:
TB,N,V_isVariableSliceModeEnabled
setLocalOnWiFi:
TB,N,V_isVideoPaused
setMediaStates:
TB,N,V_isVideoQualityNearDegraded
setMicPowerRMS:
TB,N,V_isVisible
setNeedsDisplay
TB,N,V_lowFpsVideoEnabled
setNumberStyle:
TB,N,V_needsPacketThread
setOrientation:
TB,N,V_negotiatedVideoEnabled
setPause:withCompletionHandler:
TB,N,V_oneToOneModeSupported
setPendingVideoStreamsInternal:
TB,N,V_rampDownBWDropEnabled
setPid:
TB,N,V_remoteFaceTimeSwitchesAvailable
setPixelFormat:
TB,N,V_remoteScreenEnabled
setReadHandler:
TB,N,V_resetSendRTPTimestampOnStop
setRemoteMuted:
TB,N,V_rtcpPSFB_LTRAckEnabled
setRtcpEnabled:
TB,N,V_rtcpRTPFB_GNACKEnabled
setSIPDisabled:
TB,N,V_screenEnabled
setScreenToken:
TB,N,V_sendActiveVoiceOnly
setServiceName:
TB,N,V_shouldApplyRedAsBoolean
setSessionMode:
TB,N,V_shouldCreateRedundancyController
setShouldDisplayVideoInfoLayer:
TB,N,V_shouldDisplayVideoInfoLayer
setStreamCount:
TB,N,V_shouldEnableMLEnhance
setStreamIndex:
TB,N,V_shouldRegisterMediaControlInfoGeneratorCallbacks
setSuspendAudio
TB,N,V_shouldSkipIDRScheduler
setSyncGroupID:
TB,N,V_shouldUpdateRemoteScreenAttributes
setTransmitROC:
TB,N,V_startConnectionHealthMonitoring
setTxCodecType:
TB,N,V_supportsAdaptation
setUseCompressedConnectionData:
TB,N,V_supportsDynamicMaxBitrate
setVideoSource:
TB,N,V_transmitROC
setupAndStartOutputClientThread
TB,N,V_useCompressedConnectionData
setupCallerRTPChannelWithError:
TB,N,V_useInBandFec
setupDatagramChannel:eventHandler:writeCompletionHandler:error:
TB,N,V_useRateControl
setupRTPForIDS:
TB,N,V_useVideoJitterForVideoPlayout
setupRxPayloads:featureStrings:
TB,N,V_useWifiTiers
setupTxPayloads:featureStrings:
TB,N,V_videoIsExpected
sharedDigestKey
TB,N,V_vpEnableSpatialChat
shouldOverrideEffectsFramerate:
TB,N,V_wifiAllowRedLowBitratesEnabled
shouldSendAudio
TB,N,VallowRTCPFB
silenceLevelMovingAveragePeriod
TB,N,VallowsDynamicMaxBitrate
sipLock
TB,N,VinitialSecondaryRelaySetupDone
sourceFramerate
TB,N,VisGKVoiceChat
spatialMetadata
TB,N,VisLargeFrameRequestDisabled
speakerPowerRMS
TB,N,VisLinkCongested
startPrivacyAccountingInternval
TB,N,VisRTCPFBEnabled
started
TB,N,VisValid
statsForCallID:
TB,N,VrequiresWifi
stopConnectivityCheckForCallID:
TB,N,VshouldSendAudio
stopRelayThread
TB,N,VtaskIsComplete
stopVTP
TB,N,VuseRateControl
streamDirection
TB,N,VvideoIsPaused
streamModeWithClientStreamMode:
TB,N,VvideoSourceScreen
streamsAtIndex:
TB,R,GisStartOnDemand,V_startOnDemand
supportImage:width:height:rate:
TB,R,N,GisPreferredDevice,V_preferredDevice
targetFramerate
TB,R,N,GisRTCPXREnabled
treatAsCellular
TB,R,N,V_allowRTCPFB
uiState
TB,R,N,V_didReceiveServerStatsResponse
updateConnectionInfoWithLocalInterfaceType:remoteInterfaceType:
TB,R,N,V_forcingBitrate
updateLinkStatsWithArrivingNewValueMeanRTT:arrivingNewValuePLR:
TB,R,N,V_hasRepairedStreams
updateMaxAllowedBitrate:key:type:isAudio:carrierBundleBitrates:
TB,R,N,V_inputAvailable
updateVCIDSSessionInfoResponse:
TB,R,N,V_isCellular16x9Capable
updateWRMDuplicationForHandover
TB,R,N,V_isCongested
usePacketThread
TB,R,N,V_isEncodingSqaures
utteranceNumber
TB,R,N,V_isFirstInitialRampUpDone
vcrcServerBagWithOperatingMode:
TB,R,N,V_isNewRateSentOut
videoAsyncQueue
TB,R,N,V_isOperatingAtMinBitrate
videoCodecsWithSupportedCodecs:
TB,R,N,V_isRedEnabled
videoPayloadCollectionsAtIndex:
TB,R,N,V_isRunning
videoResolutionForWidth:height:
TB,R,N,V_isSendBitrateLimited
videoStreamRateControlAlgorithm
TB,R,N,V_isTemporalScalingEnabled
vpOperatingMode
TB,R,N,V_isWindowed
wifiAssistState
TB,R,N,V_outputAvailable
AVCVideoStreamModeWithAVCMediaStreamMode:
NATType
AVConferencePreviewSingleton
SRTPCipherSuite
AVConferenceServiceError:detailedCode:filePath:description:reason:
T@"<AVCQoSMonitorDelegate>",W,N
AVConferenceXPCClientSingleton
T@"<VCMediaStreamSyncSource>",R
AudioOnlyVCCapabilities
T@"AVCRateControlFeedbackController",R,&,N,V_feedbackController
Conference_SetBWEstMode:bFakeLargeFrameMode:
T@"NSArray",&,N,V_videoPayloads
H264LevelAsymmetryAllowed
T@"NSArray",C,N,V_streamIDsWifi
HTTPCheckWithIPPort:ipv6Prefix:useCache:
T@"NSArray",R,N,V_sortedEntries
IOBufferDuration
T@"NSData",&,N,V_positionalInfo
IPPortForPrimaryConnectionOnLocalInterface:
T@"NSNumber",&,N,VaudioRTCPPort
NATCheckWithIPPort:ipv6Prefix:useCache:
T@"NSObject<OS_xpc_object>",&,N
NATTypeDidChange:
T@"NSSet",&,N,V_remoteLanguages
NTPMostSignificantWord
T@"NSString",C,N,VinterfaceName
OWRDList
T@"NSUUID",C,N,V_conversationID
RTPTimestamp
T@"VCCallInfo",R,VlocalCallInfo
SIPDisabled
T@"VCMediaNegotiatorResultsAudio",R,N,V_negotiatedAudioSettings
SRTCPCipherSuite
T@"VCNetworkFeedbackController",&,N,V_networkFeedbackController
SSRC
T@,&,N,Vcontext
StringAsContent:
T@?,C,N,V_pushCompletionHandler
StringAsTransport:
TB,N,GisAudioMuted,V_audioMuted
T(tagNTP=Q{?=II}),N,V_creationTime
TB,N,GisRTCPReceiveCallbackEnabled,V_rtcpReceiveCallbackEnabled
T(tagNTP=Q{?=II}),R,N
TB,N,SsetMuted:
T*,R,N
TB,N,V_frequencyMeteringEnabled
T@"<AVCAudioStreamDelegate>",N,V_delegate
TB,N,V_isCaller
T@"<AVCEffectsDelegate>",N,V_delegate
TB,N,V_isUseCaseWatchContinuity
T@"<AVCPacketRelayConnectionProtocol>",&,V_multiplexedConnection
TB,N,V_shouldScheduleMediaQueue
T@"<AVCRemoteVideoClientDelegate>",R,N,V_delegate
TB,N,VisStarted
T@"<AVCSessionDelegate>",N
TB,R,N,V_encryptionInfoReceived
T@"<AVCStreamOutputDelegate>",N,V_delegate
TB,R,N,V_isOpusInBandFecEnabled
T@"<AVCVideoDataOutputDelegate>",N,V_delegate
TB,R,N,V_isVideoQualityDegraded
T@"<AVCVirtualTTYDeviceDelegate>",N
TB,VallowsRelay
T@"<VCAudioIOControllerDelegate>",R,N
TC,V_inputMeter
T@"<VCBasebandCodecNotifications>"
TI,N,V_maxDelay
T@"<VCCaptionsSource>",R,N,V_captionsSource
TI,N,V_payloads
T@"<VCConnectionManagerDelegate>"
TI,N,V_streamID
T@"<VCConnectionProtocol>",&,N,V_connectionForDuplicationNonProbingVersion
TI,N,VprobingSequencePacketSize
T@"<VCConnectionProtocol>",&,N,V_lastPrimaryConnectionInUse
TI,R,N,V_height
T@"<VCConnectionProtocol>",&,N,V_pendingSecondaryConnection
TI,R,V_maxAllowedBitrateHighRat
T@"<VCConnectionProtocol>",&,N,V_registeredConnection
TQ,N,V_maxPtime
T@"<VCEffectsManagerDelegate>",N,V_delegate
T@"<VCMediaCaptureController>",&,N,V_captureController
T^v,N,V_context
T@"<VCMediaControlInfoDelegate>",V_delegate
T^{_VCAudioPowerSpectrumSourceRealtimeContext={_VCSingleLinkedList=^{_VCSingleLinkedListEntry}B^?Q}^{opaqueCMSimpleQueue}@},R,N
T@"<VCMediaStreamGroupDelegate>",&,N,V_delegate
T^{tagHANDLE=i},N,V_hMediaQueue
T@"<VCMediaStreamSyncSource>",N,V_syncSource
Td,N,VdurationThresholdDownward
T@"<VCMomentsMessenger>",R,N,V_messenger
Td,R,N,V_expectedProcessEndTime
T@"<VCRemoteVideoManagerDelegate>",N,V_delegate
Tf,N,VpacketLateAndMissingRatio
T@"<VCSecureDataChannelDelegate>",N
Ti,R,N,V_format
T@"<VCSessionDelegate>",R,N
Ti,R,V_dataPath
T@"<VCSessionParticipantDelegate>",R,N
Tq,N,V_powerSpectrumStreamToken
T@"<VCSessionParticipantStreamDelegate>",N
T@"<VCStreamSychronizationDelegate>",N
_adaptationTime
T@"<VCTextReceiverDelegate>",N
_addInRangeFlag
T@"<VCVideoReceiverDelegate>",N,V_delegate
_allowRecording
T@"<WCMClientDelegate>",&,N,VwcmClientDelegate
_allowSuspendProvisionedStreams
T@"AVAudioDevice",&,N
_allowVideoStop
T@"AVAudioDevice",&,V_outputDevice
_answer
T@"AVAudioDeviceList",&,N,VdeviceList
_audioSessionID
T@"AVCBasebandCongestionDetector",&,N,V_basebandCongestionDetector
_audioTxBitrate
T@"AVCNetworkAddress",&,N,V_localAddress
_audioVoiceDetectionSensitivity
T@"AVCPacketFilter",&
_averageBitrate
T@"AVCRTCPReceiverReport",&,N,V_receiverReport
_bitmap
T@"AVCRateController",R,N,V_downlinkRateController
_blockBufferMemoryPoolAllocator
T@"AVCSessionParticipant",R,N,V_localParticipant
_budgetConsumingCellularTxBytes
T@"AVCStatisticsCollector",R,N,V_statisticsCollector
_bundledPackets
T@"AVCVideoStreamConfig",&,N,V_video
_cachedMessages
T@"GKNATObserverInternal",N,Vobserver_
_canUseP2PLinks
T@"ICEResultWaitQueue",R,VresultQueue
_captionsSource
T@"NSArray",&,N,V_streamIDs
_chipId
T@"NSArray",&,N,V_supportedModes
_clientUplinkPowerMovingAverage
T@"NSArray",&,N,V_supportedPayloads
_common
T@"NSArray",&,N,VmutedPeers
_connectionType
T@"NSArray",C,N,V_linkPreferenceOrder
_controlInfoCVO
T@"NSArray",C,N,V_remoteParticipants
_controlInfoIsReceivedOnPrimary
T@"NSArray",R
_controlInfoROC
T@"NSArray",R,N,V_audioStreamConfigurations
_currentDetails
T@"NSArray",R,N,V_channels
_currentPadding
T@"NSArray",R,N,V_codecs
_currentSendMKI
T@"NSArray",R,N,V_mediaStreamInfoArray
_cvoExtensionID
T@"NSArray",R,N,V_negotiatedStreamGroups
_didMBLRampDown
T@"NSArray",R,N,V_registeredStreamTokens
_dumpID
T@"NSArray",R,N,V_secondaryPayloads
_enableAudioPowerSpectrumReport
T@"NSArray",R,N,V_streams
_encodingHeight
T@"NSArray",R,N,V_supportedBandwidths
_forceDisableEffectsHealthCheck
T@"NSArray",R,N,V_tokens
_forcingBitrate
T@"NSArray",R,N,V_videoStreamConfigurations
_frameAllocator
T@"NSArray",R,V_supportedPayloads
_frequencyRange
T@"NSData",&,N,V_optionalPackedPayload
_handlerContext
T@"NSData",&,N,V_participantData
_height
T@"NSData",&,N,V_receiveMediaKey
_iRATRtpEnabled
T@"NSData",&,N,V_requiredPackedPayload
_inAudioBitrate
T@"NSData",&,N,V_videoFeatures
_initialBitrate
T@"NSData",&,V_effectsMetadata
_instantBitrate
T@"NSData",&,V_localConnectionData
_ipport
T@"NSData",&,V_remoteConnectionData
_isAudioStalled
T@"NSData",R
_isDroppedByAQM
T@"NSData",R,N,V_answer
_isIPv6
T@"NSData",R,N,V_offer
_isInitialConnectionEstablished
T@"NSData",R,N,V_participantData
_isLost
T@"NSDate",C,N,V_conversationTimeBaseTruncated
_isMediaStalled
T@"NSDictionary",&,N,V_featureStrings
_isRTTBasedFIRThrottlingEnabled
T@"NSDictionary",&,N,V_mediaStates
_isSharedSocket
T@"NSDictionary",&,N,V_remoteRelayUpdate
_isVideoJitterForPlayoutEnabled
T@"NSDictionary",&,N,V_vpOperatingModeToAudioSessionMediaFormatMapping
_lastBufferTime
T@"NSDictionary",C,N,V_pendingVideoStreams
_lastLocalAudioPresentationTime
T@"NSDictionary",R
_lastParticipantMKMRecoveryTime
T@"NSDictionary",R,N,V_audioOnlyBitrateToStreamIDsTable
_lastReceivedVideoRTPPacketTime
T@"NSDictionary",R,N,V_codecConfigurations
_lastTierSwitch
T@"NSDictionary",R,N,V_groupEntries
_lineEnumerator
T@"NSDictionary",R,N,V_rxCodecFeatureListStrings
_localCameraUID
T@"NSDictionary",R,N,V_streamIDToMediaStreamMap
_localU8Version
T@"NSDictionary",R,N,V_txPayloadMap
_longAverageLag
T@"NSDictionary",R,N,V_videoStreamIdToRepairStreamIdMap
_maxAllowedAudioOnlyBitrateWifi
T@"NSDictionary",R,V_transactions
_maxAllowedScreenShareBitrate2G
T@"NSMutableArray",&,N,V_audioPayloads
_maxBitrateKbps
T@"NSMutableArray",&,N,V_multiwayAudioStreams
_maxBufferCount
T@"NSMutableArray",&,N,V_payloads
_maxScreenEncodingSizeSupported
T@"NSMutableArray",&,N,V_streamGroups
_messageHandler
T@"NSMutableArray",&,N,V_videoPayloadCollections
_minBitrateKbps
T@"NSMutableArray",&,V_effectsArray
_momentsHistory
T@"NSMutableArray",R,N,VaudioPayloads
_multiwayConfig
T@"NSMutableArray",R,V_requestTimestampAndRTTList
_networkClockID
T@"NSMutableDictionary",&,N,V_imageAttributeRules
_newCarrierType
T@"NSMutableDictionary",&,N,V_remoteRelayRequestResponse
_normalizedBDCD
T@"NSMutableDictionary",&,V_localRelayRequestResponse
_nwConnectionPacketLossPerFrame
T@"NSMutableDictionary",R,N,V_dialogs
_optionalTopics
T@"NSMutableDictionary",R,N,V_qualityIndexToTableEntry
_outputFFTMeter
T@"NSMutableDictionary",R,N,V_remoteParticipants
_packetLossRateAvgLongAtLBAExit
T@"NSMutableDictionary",R,N,V_sources
_pauseStartTime
T@"NSMutableOrderedSet",&,N,V_multiwayAudioStreams
_payloadHistory
T@"NSNumber",&,N
_positionalInfo
T@"NSNumber",&,N,V_clientPID
_profileLevelId
T@"NSNumber",&,N,VaacBlockSize
_rampUpNoLossEventDurationRatio
T@"NSNumber",&,N,VaudioRTPID
_rateController
T@"NSNumber",&,N,VaudioUnitModel
_receiverThread
T@"NSNumber",&,N,VmaxBandwidth
_redNumPayloads
T@"NSNumber",R,N
_redundancyControllerFECVersion
T@"NSNumber",R,N,V_optedInStreamID
_remoteCellTech
T@"NSNumber",R,N,V_streamInputID
_repairStreamID
T@"NSNumber",R,V_plrEnvelopeValue
_reportingAgent
T@"NSNumber",R,V_streamToken
_reportingQueue
T@"NSObject",VoptionalArg
_resetRequested
T@"NSObject<AVConferenceDelegate>",N
_rtcpConnection
T@"NSObject<GKNATObserverDelegate>"
_rtpVFD
T@"NSObject<NSCopying>",C,N,V_reportingHierarchyToken
_screenSettings
T@"NSObject<OS_dispatch_queue>",&,N,V_delegateQueue
_secondaryFlags
T@"NSObject<OS_dispatch_queue>",&,N,Vqueue
_sendFailureCountSinceLastCheck
T@"NSObject<OS_dispatch_queue>",R,N,V_delegateQueue
_sentAudioBytes
T@"NSObject<OS_dispatch_queue>",R,N,V_registeredBlocksQueue
_sequenceNumber
T@"NSObject<OS_dispatch_queue>",R,VconnectionQueue
_sharedRemoteEstimatedBandwidth
T@"NSObject<OS_nw_activity>",&,N,V_nwActivity
_shouldConsiderVideoInLossEvent
T@"NSObject<OS_nw_activity>",N,V_nwActivity
_sinkIO
T@"NSObject<OS_xpc_object>",R,Vlistener
_source
T@"NSObject<VCCallSessionDelegate>",&,Vdelegate
_spatialContext
T@"NSObject<VCMediaStreamDelegate>",N,Vdelegate
_speechDetected
T@"NSObject<VCRedundancyControllerProtocol>",&,N,V_redundancyController
_status
T@"NSObject<VideoConferenceChannelQualityDelegate>"
_stillImageURLs
T@"NSOrderedSet",R,N,V_codecConfigs
_streamDelegate
T@"NSSet",&,N,V_audioPayloads
_streamResetIDR
T@"NSSet",&,N,V_captionsReceiverLanguages
_streamsUseRTCP
T@"NSSet",&,N,V_hdrModesSupported
_sumPLR
T@"NSSet",&,N,V_momentsImageTypes
_supportedModes
T@"NSSet",&,N,V_pixelFormats
_syncDestinationChangeEventPool
T@"NSSet",R,N
_thread
T@"NSSet",R,N,V_audioPayloads
_tokens
T@"NSSet",R,N,V_hdrModesNegotiated
_totalBytesSent
T@"NSSet",R,N,V_pixelFormatCollections
_transportToken
T@"NSSet",R,N,V_streamGroupConfigs
_useMarkovModel
T@"NSSet",R,N,V_streamInputConfigurations
_useSBR
T@"NSSet",R,V_activelyProbingLinkIDs
_videoCodecType
T@"NSString",&,N,V_cname
_videoSinkState
T@"NSString",&,N,V_emulatedNetworkConfigPath
_videoStreamRateControllerQueue
T@"NSString",&,N,V_frameworkVersion
_vplrFecEnabled
T@"NSString",&,N,V_lastCalledApiName
_wifiAllowRedLowBitratesEnabled
T@"NSString",&,N,V_osVersion
_writingStarted
T@"NSString",&,N,V_participantUUID
acknowledgement
T@"NSString",&,N,V_remoteDeviceName
addConnectionToConnectionArray:
T@"NSString",&,N,V_rxCodecFeatureListString
addRemoteAudioSample:timestamp:
T@"NSString",&,N,V_sessionId
algorithmConfig
T@"NSString",&,N,V_text
allocTextPacket
T@"NSString",&,N,V_txCodecFeatureListString
answerBandwidth
T@"NSString",&,N,V_uuid
appendStreamGroupsMediaEntries:
T@"NSString",&,N,VsdpString
applyNegotiatedCaptionsSettings
T@"NSString",C,N,V_cName
applyServerBagFastRampUpConfig:
T@"NSString",C,N,V_destination
arrayWithArray:
T@"NSString",C,N,V_frameworkVersion
attachMetadata:toCVPixelBuffer:
T@"NSString",C,N,V_ip
audioStreamConfigs:configCount:
T@"NSString",C,N,V_osVersion
audioTierPicker
T@"NSString",C,N,V_remoteInterfaceType
avConferenceScreenCaptureError:
T@"NSString",C,N,V_serviceName
bBWEstFakeLargeFrameModeEnabled
T@"NSString",C,N,VcurrentFocus
bitrate
T@"NSString",C,N,VpeerCN
bundleForClass:
T@"NSString",C,N,VsessionID
callEventHandlerWithEvent:info:
T@"NSString",C,V_participantID
canProcessAudio
T@"NSString",C,V_sessionID
cancelRequestWithTransactionID:
T@"NSString",R
capabilitiesWithMomentSettings:
T@"NSString",R,N
captureAsFocus:
T@"NSString",R,N,V_deviceName
captureSourcePositionDidChange:
T@"NSString",R,N,V_featureListStringHEVC
checkKeysAgainstHardcodedPrefs:
T@"NSString",R,N,V_fieldValue
chooseVideoPayloadForInterface:
T@"NSString",R,N,V_participantID
cleanup
T@"NSString",R,N,V_requesterID
cleanupOneToOne
T@"NSString",R,N,V_transactionID
clearAudioRules
T@"NSString",R,N,VtopicKey
closeRecordings
T@"NSTimer",&,VnetworkQualityUpdateTimer_
collectChannelMetrics:interval:
T@"NSURL",&,N,V_outputURL
computeRedundancyWithBurstyLoss
T@"SDPMini",&,N,Vsdp
configurationExtensionAsString:
T@"VCAudioCaptionsCoordinator",&,N,V_captionsCoordinator
connectionCount
T@"VCAudioIO",&,V_audioIO
containsObject:
T@"VCAudioIOControllerClient",&,V_runningClient
content
T@"VCAudioPayload",&,N,V_chosenDTXPayload
copyNatTypeCache_OSXGamedScheme
T@"VCAudioPayloadConfig",R,N,V_config
copyTo:
T@"VCAudioPowerSpectrumSource",R,N,V_powerSpectrumSource
createConverterForSource:error:
T@"VCAudioRelayIO",C,N,V_remoteIO
createSupportedBitratesForAMR8k
T@"VCAudioRuleCollection",&,N,V_audioRulesNegotiated
currentAudioCap
T@"VCAudioSessionMediaProperties",&,N,V_currentAudioSessionMediaProperties
currentPayloadUsed:payloadUsed:
T@"VCAudioStreamGroupCommonConfig",&
datagramChannelRequiresOptions:
T@"VCAudioTier",R,N,V_currentAudioTier
defaultPayload:
T@"VCAudioTransmitter",&,V_audioTransmitter
dequeueOneFrame
T@"VCAudioUnitSpatialContext",&,N,V_spatialContext
devices
T@"VCCCMessageAcknowledgment",&,N,V_acknowledgement
didChangeLocalScreenAttributes:
T@"VCCapabilities",&
didPausePreview
T@"VCCaptionsTranscription",&,N,V_currentTranscription
didReceiveVideo
T@"VCConnectionHealthMonitor",R,N,V_connectionHealthMonitor
didStart:error:
T@"VCConnectionManager",R,N,V_connectionManager
didStop
T@"VCEmulatedNetwork",R,N,V_network
dispatchedSetRemoteAudioPaused:
T@"VCImageAttributeRules",&,N,V_imageAttributeRules
dispatchedStart
T@"VCMediaNegotiationBlobAudioSettings",&,N,V_audioSettings
display
T@"VCMediaNegotiationBlobV2BandwidthSettings",&,N,V_bandwidthSettings
dispose
T@"VCMediaNegotiationBlobV2CodecFeatures",&,N,V_codecSupport
dupRTPNWConnectionBackingSocket
T@"VCMediaNegotiationBlobV2MicrophoneSettingsU1",&,N,V_microphoneU1
enableAggressiveProbingSequence
T@"VCMediaNegotiationBlobV2SettingsU1",&,N,V_settingsU1
encoderBitrateAveragingInterval
T@"VCMediaNegotiationBlobVideoSettings",&,N,V_videoSettings
endTime
T@"VCMediaNegotiatorAudioConfiguration",&,N,V_audioConfiguration
featureListDict
T@"VCMediaNegotiatorAudioConfiguration",R,N,V_audioConfiguration
forceWiFiAssist
T@"VCMediaNegotiatorLocalConfiguration",R,N,V_localSettings
forceZeroRegionOfInterestOrigin
T@"VCMediaNegotiatorResults",R,N,V_negotiatedSettings
formattedTextWithTranscription:
T@"VCMediaNegotiatorResultsCaptions",R,N,V_negotiatedCaptionsSettings
getBytes:range:
T@"VCMediaNegotiatorResultsFaceTimeSettings",R,N,V_negotiatedFaceTimeSettings
getCodecConfigForPayload:block:
T@"VCMediaNegotiatorResultsMoments",R,N,V_negotiatedMomentsSettings
getFeatureListStringForPayload:
T@"VCMediaNegotiatorResultsVideo",R,N,V_negotiatedScreenSettings
groupID
T@"VCMediaStream",&,N,V_stream
handleIncomingWithCallID:msgIn:msgOut:optional:confIndex:error:
T@"VCMediaStreamConfig",R,N,V_streamConfig
handleNWConnectionNotification:
T@"VCMediaStreamRateControlConfig",&,N,V_rateControlConfig
handleReceivedPiggybackBlobIDS:
T@"VCMoments",&,N,V_moments
hasCodecSupport
T@"VCNWConnectionCongestionDetector",&,N,V_nwConnectionCongestionDetector
hasKey:
T@"VCNetworkAddress",&,N,V_remoteAddress
hasMicrophoneU1
T@"VCPositionalInfo",R,N,V_positionalInfo
hasPixelFormats
T@"VCRateControlMediaController",&,N,V_mediaController
hasText
T@"VCSecurityKeyManager",&,N,V_securityKeyManager
hdrMode
T@"VCSessionMediaNegotiator",R,N,V_mediaNegotiator
iRemoteRTCPPort
T@"VCSessionParticipant",R,N,V_localParticipant
initAudioValues
T@"VCSessionParticipantOneToOneConfig",&,N,V_oneToOneConfig
initWithCapacity:bytesPerFrame:
T@"VCSessionStatsController",R,N,V_sessionStatsController
initWithDeviceRole:callLogFile:
T@"VCStatsRecorder",R,N,V_statsRecorder
initWithDumpID:
T@"VCTransportSession",&,N,V_transportSession
initWithLength:
T@"VCVideoReceiverBase",R,V_videoReceiver
initWithNSUUID:
T@"VCVideoRule",R,N,VlimitingRule
initWithPrefix:
T@"VCVideoRuleCollections",&,N,V_videoRuleCollections
initWithResult:
T@"VCVideoRuleCollections",R,N,V_screenRuleCollections
initializeFormatContextPointers
T@"VCVideoTransmitterBase",R,V_videoTransmitter
inputMeterLevel
T@"VCXPCClientShared",R,N,V_connection
internalBundleFactorForPayload:
T@"VideoAttributes",&,N,V_remoteVideoAttributes
ipPortStillExists:requiresWifi:
T@"VideoAttributes",&,V_remoteScreenAttributes
isAudioExpected
T@"VideoAttributes",&,VremoteVideoAttributes
isDuplicationDueToWRMSuggestion
T@"VideoConference",VactiveConference
isEqualToArray:
T@,N,V_messageReceivedDelegate
isFocus
T@,R,V_reportingAgent
isHistoryValid:
T@?,C,N,V_errorReponseCallback
isLinkCongested
T@?,C,N,V_peerPublishedStreamCallback
isLocalCellular
T@?,C,N,V_popCompletionHandler
isMuted
T@?,C,N,Vblock
isProxy
T@?,C,V_bindingResponseHandler
isRTCPFBEnabled
T@?,C,V_messageHandler
isRedundancyEnabledFor720Stream
T@?,C,V_startCompletionHandler
isRemoteIPPort:
T@?,N
isRemotePreAzul
isScreenEnabled
TB,GisSpeakerPhoneEnabled
isSessionActive
TB,GisUsingViceroyBlobFormat
isThreadRunning
TB,N,GisAudioEnabled
isValid
TB,N,GisAudioMuted
isVideoDegraded
TB,N,GisAudioPaused,V_audioIsPaused
lastReceivedVideoRTCPPacketTime
TB,N,GisAudioSending,V_isAudioSending
lastVoiceActive
TB,N,GisCurrentDTXEnabled,V_currentDTXEnable
localDataSoMask
TB,N,GisDecryptionTimeOutEnabled,V_decryptionTimeOutEnabled
localScreenLandscapeAspectRatio
TB,N,GisFollowSystemInputEnabled,V_followSystemInput
lowercaseString
TB,N,GisHeaderFullOnly,V_headerFullOnly
markPacketLoss:
TB,N,GisInputMeteringEnabled
maxOWRD
TB,N,GisLTRPEnabled,V_ltrpEnabled
mediaController
TB,N,GisLatencySensitiveModeEnabled,V_latencySensitiveModeEnabled
message
TB,N,GisMicrophoneMuted
microphoneMuted
TB,N,GisMicrophoneMuted,V_microphoneMuted
moitors
TB,N,GisMixingVoiceWithMediaEnabled,V_isMixingVoiceWithMediaEnabled
moments:didFinishRequest:error:
TB,N,GisMuted,V_isMuted
momentsSettings
TB,N,GisOctetAligned,V_octetAligned
multiwayVideoStreamNegotiatorConfigForStreamConfig:isSubstream:
TB,N,GisOneToOneEnabled,V_oneToOneEnabled
negotiatedAudioSettingsForGroupID:localU1Config:remoteU1Config:
TB,N,GisOuputMeteringEnabled,V_isOutputMeteringEnabled
negotiationCipherSuiteAsString:
TB,N,GisOutputMeteringEnabled
negotiationMode
TB,N,GisPaused,V_paused
newCorrectedVideoRules:payload:
TB,N,GisRTCPEnabled,V_rtcpEnabled
newLocalFeaturesStringWithType:
TB,N,GisRTCPTimeOutEnabled,V_rtcpTimeOutEnabled
newResponseBlob
TB,N,GisRTCPXREnabled,V_rtcpXREnabled
notifyCodecModeChangeEventToCT:
TB,N,GisRTPTimeOutEnabled,V_rtpTimeOutEnabled
numberWithBool:
TB,N,GisRateAdaptationEnabled,V_rateAdaptationEnabled
numberWithLong:
TB,N,GisRedundancyEnabledFor720Stream
onStart
TB,N,GisRemoteAudioPaused,V_remoteAudioPaused
oneToOneToMultiwaySwitchSuspend
TB,N,GisRemoteScreenEnabled
optInStreamIDs:
TB,N,GisRemoteVideoEnabled,V_remoteVideoEnabled
orientationMismatchDisplayRatio
TB,N,GisScreenEnabled
outputAvailable
TB,N,GisSessionActive,V_sessionActive
parseAttribute:
TB,N,GisStarted,V_isStarted
parseMediaLine:
TB,N,GisVideoEnabled,V_videoEnabled
participantUUID
TB,N,GisVideoPaused,V_isVideoPaused
payloadBitmapWithAudioPayloads:
TB,N,SsetCallActive:
TB,N,SsetIsSendingEnabled:,VisSendingEnabled
pointerAtIndex:
TB,N,SsetVADFilteringEnabled:,V_isVADFilteringEnabled
preferredFormat
TB,N,V_H264LevelAsymmetryAllowed
probingInterval
TB,N,V_SIPDisabled
processRTCPTimeoutSettingChange
TB,N,V_allowAudioSwitching
prominenceIndex
TB,N,V_allowLargePackets
qualityTierTableForStreamToken:
TB,N,V_allowRecording
ratType
TB,N,V_allowVideoStop
realtimeContext
TB,N,V_alwaysOnAudRedEnabled
receiveMediaKey
TB,N,V_anbrEnabled
registerService:weakSelf:block:
TB,N,V_audioEnabled
relaySetupTimer
TB,N,V_audioMuted
releasePTPClock
TB,N,V_canDisplayCaptions
remoteCodecInfo
TB,N,V_configurationInProgress
remoteFaceTimeSwitchesAvailable
TB,N,V_didReceiveFirstFrame
remoteLinkFlags
TB,N,V_dtmfTonePlaybackEnabled
remoteScreenPortraitAspectRatio
TB,N,V_dynamicVideoPriorityEnabled
removeAssertion
TB,N,V_enableAggressiveProbingSequence
removeObserver:
TB,N,V_enableCVO
reportNetworkConditionsDegraded
TB,N,V_enableLoopbackInterface
reportingAlgosVideoStreamEvent:
TB,N,V_enableOneToOneMode
resCond
TB,N,V_encryptionInfoReceived
resetConnection
TB,N,V_faceMeshTrackingEnabled
resetStatsForPeriodicTaskReport
TB,N,V_fastSuddenBandwidthDetectionEnabled
ringBuf
TB,N,V_forceEVSWideBand
rtcpSendEnabled
TB,N,V_forceZeroRegionOfInterestOrigin
rtpSSRC
TB,N,V_hasReceivedFirstFrame
rulesFramerate:
TB,N,V_hasRepairedStreamID
samplesPerFrame
TB,N,V_highFecEnabled
schedulerStreamWithVideoStream:
TB,N,V_idsUPlusOneMode
TB,N,V_initUsingWifiTiers
sendData:messageType:encrypted:
TB,N,V_isAudioStalled
senderLanguages
TB,N,V_isDegraded
seperateString:
TB,N,V_isDuplicationAllowed
session:cleanUpWithDelay:error:
TB,N,V_isExtraDelayForPacketRetransmissionsEnabled
sessionForUUID:
TB,N,V_isFeedbackReceived
TB,N,V_isFirstTimestampArrived
setAllowRTCPFB:
TB,N,V_isIPv6
setAnbrEnabled:
TB,N,V_isInDaemon
setAudioPaused:
TB,N,V_isLocalCellular
setCallLogFile:
TB,N,V_isLowLatency
setCipherSuite:
TB,N,V_isMediaStalled
setCurrentOutputDeviceInternal:
TB,N,V_isMutedTalkerNotificationRegistered
setDay:
TB,N,V_isOneToOneModeEnabled
setDestination:
TB,N,V_isOneToOneScreenEnabled
setEVSRFParams:
TB,N,V_isRTCPFBEnabled
setFastMediaDuplicationEnabled:
TB,N,V_isRTPFlushBasebandFromVCRateControl
setGeneralInfo:
TB,N,V_isRedundancyControlEnabled
setHasMetadata:
TB,N,V_isRemoteMediaQualityDegraded
setHasStreamID:
TB,N,V_isRemoteOnPeace
setIdsStreamID:
TB,N,V_isServerBasedBandwidthProbingEnabled
setInputFormat:
TB,N,V_isServerRTxEnabled
setIsLargeFrameRequestDisabled:
TB,N,V_isSubStream
setIsSubStream:
TB,N,V_isSupported
setIsSupported:
TB,N,V_isTargetBitrateStabilized
setKey:
TB,N,V_isValid
setLocalCamera:
TB,N,V_isVideoDegraded
setLtrpEnabled:
TB,N,V_isVideoProtected
setMicCallback:
TB,N,V_isVideoSuspended
setMixingVoiceWithMediaEnabled:
TB,N,V_isWindowed
setNumPayloads:
TB,N,V_ltrpEnabled
setOptionalArg:
TB,N,V_negotiatedScreenEnabled
setPacketsSent:
TB,N,V_oneToOneModeEnabled
setPeerPublishedStreamCallback:
TB,N,V_preWarmCellEnabled
setPerfTimings:
TB,N,V_reinitEncoderOnFrameSizeChangeEnabled
setPixelBuffer:
TB,N,V_remotePreWarmStateEnabled
setPreferredModeWithClientMode:
TB,N,V_requiresWiFi
setRealRATType:
TB,N,V_rtcpPSFB_FIREnabled
setResetSendRTPTimestampOnStop:
TB,N,V_rtcpPSFB_PLIEnabled
setRxCodecType:
TB,N,V_rtcpSREnabled
setScaleFactor:
TB,N,V_secureMessagingRequired
setSdp:
TB,N,V_sharingEnabled
setSessionDict:
TB,N,V_shouldCreateMediaControlInfoGenerator
setSessionUUID:
TB,N,V_shouldDisableLargeFrameRequestsWhenInitialRampUp
setSourceToken:
TB,N,V_shouldEnableFaceZoom
setStreamGroup:
TB,N,V_shouldIgnoreRTPHeaderExtensions
setStreamToken:
TB,N,V_shouldSetupNWMonitor
setSuspendVideo
TB,N,V_shouldSynchronizeWithSourceRTPTimestamps
setToVideoRule:
TB,N,V_spatialAudioDisabled
setTransportSessionEventHandler
TB,N,V_startOnDemand
setUplinkVideoStreamController:
TB,N,V_supportsCodecBandwidthUpdate
setVideoPaused:
TB,N,V_temporalScalingEnabled
setWithObjects:
TB,N,V_useChannelDataFormat
setupAudioRulesWithPList:audioStreamConfig:supportedAudioRules:
TB,N,V_useInBandFEC
setupCodecWithClientDictionary:
TB,N,V_useMediaDrivenDuplication
setupKeyFrameGenerationMessages
TB,N,V_useSBR
setupRTPWithNWConnection:error:
TB,N,V_useWiFiTiers
setupStreamRTP:
TB,N,V_videoEnabled
setupWRMAlertStateUpdateMessage
TB,N,V_videoPaused
shouldIgnoreRTPHeaderExtensions
TB,N,V_vplrFecEnabled
shouldRampDownDueToNWConnection
TB,N,VallowAudioRecording
shouldUnblockRampUpAfterTimeOut
TB,N,VallowsContentsChangeWithAspectPreservation
sipCallbackNotification:callID:msgIn:msgOut:optional:confIndex:
TB,N,VcameraSwitching
sleepUntilDate:
TB,N,VisFocus
sources
TB,N,VisIPv6
speakerCallback
TB,N,VisLastFrameProbingSequence
startConnectionHealthMonitoring
TB,N,VisPreLionOS
startWithError:
TB,N,VisUsingSuppression
stateForCallID:
TB,N,VisVideoQualityDegraded
stopAudioWithCompletionHandler:
TB,N,VshouldPrioritizeParticipantIDForSIPInvite
stopMediaQueue:
TB,N,VsupportsSKEOptimization
stopScreenGroup
TB,N,VuseCompressedConnectionData
stopWRM
TB,N,VuseViceroyBlobFormat
streamGroupMode
TB,N,VvideoMirrored
streams
TB,R
stringByAppendingPathComponent:
TB,R,N
supportedCodecs
TB,R,N,GisRTCPSendEnabled
targetTimestamp
TB,R,N,GisRedEnabled,V_redEnabled
typeForRequest:
TB,R,N,V_basebandAdaptationEnabled
unregisterListenerWithCellularTapType:powerSpectrumMeter:error:
TB,R,N,V_evsHeaderFullOnly
updateDuplicationStateForMediaHealthUnrecoverable:updateResult:
TB,R,N,V_hasPendingChanges
updateLossEvent
TB,R,N,V_ignoreSilence
updateOneToOneBandwidthAllocationTable:mediaType:streamGroupID:
TB,R,N,V_isActive
updateVideoQualityNotification:
TB,R,N,V_isCompoundStreamIDsIncreased
useAFRC
TB,R,N,V_isDTXEnabled
useVCRC
TB,R,N,V_isFarEndVersionInfoValid
vcSession:participantID:remoteMediaStateDidChange:forMediaType:
TB,R,N,V_isInThrottlingMode
version
TB,R,N,V_isOperatingAtMaxBitrate
videoAttributes
TB,R,N,V_isPrewarmingClient
videoIsExpected
TB,R,N,V_isRemoteVersionInfoValid
videoResolution
TB,R,N,V_isSecondary
videoStreamMode
TB,R,N,V_isStarted
visibilityIndex
TB,R,N,V_isVideoStoppedByVCRateControl
wcmGetCallConfig:targetBitrate:
TB,R,N,V_muted
wrmInfo
TB,R,N,V_parsingDone
TB,R,N,V_payloadOctetAligned
TB,R,N,V_running
TB,R,N,V_sbr
TB,R,N,V_supportVCPDecoderHEVC
TB,R,N,V_supportVCPEncoderHEVC
TB,R,N,V_useExternalIO
TB,R,N,V_usePreNegotiation
TB,R,N,V_utteranceComplete
TB,R,N,V_vcpInitializedForHEVC
TB,R,N,VisIOS
TB,R,N,VsupportsSpecialAACBundle
TB,R,N,VuseNewPLCalc
TB,R,N,VusesInitialFECImplementation
TB,R,V_cellularAssertionActive
TB,R,V_forceWiFiAssist
TB,R,V_forceWiFiAssistOutOfBudget
TB,R,V_hasRepairStreamID
TB,R,V_isClientInProcess
TB,R,V_isEncryptionEnabled
TB,R,V_isFECVersion2Enabled
TB,R,V_isLocalDelegated
TB,R,V_isPreWarmStateEnabled
TB,R,V_isRTPFilter
TB,R,V_isRelayRunning
TB,R,V_isRemoteDelegated
TB,R,V_isRemoteDuplicating
TB,R,V_isRunning
TB,R,V_isThreadRunning
TB,R,V_isVirtualRelayLink
TB,R,V_stopVTPReceiveThread
TB,R,VaudioIsPaused
TB,R,VisAudioRunning
TB,R,VisLocalConstrained
TB,R,VisLocalDelegated
TB,R,VisLocalExpensive
TB,R,VisLocalOn5G
TB,R,VisRemoteConstrained
TB,R,VisRemoteDelegated
TB,R,VisRemoteExpensive
TB,R,VisRemoteMediaStalled
TB,R,VisRemoteOn5G
TB,R,VisVirtualRelayLink
TB,SsetPowerSpectrumEnabled:
TB,V_allowDuplication
TB,V_canUseP2PLinks
TB,V_cellPrimaryInterfaceChangeEnabled
TB,V_duplicateImportantPktsEnabled
TB,V_duplicateMessageOnServerLink
TB,V_duplicationEnhancementEnabled
TB,V_fastMediaDuplicationEnabled
TB,V_forceNetworkCellular
TB,V_hasReceivedFirstFrame
TB,V_iRATDuplicationEnabled
TB,V_isAudioOnly
TB,V_isCaller
TB,V_isCellUp
TB,V_isDemuxNeeded
TB,V_isDuplicationEnabled
TB,V_isLowestQuality
TB,V_isMediaStalled
TB,V_isRemotePreAzul
TB,V_isResumed
TB,V_isVideoDegraded
TB,V_isVideoPaused
TB,V_isVideoSuspended
TB,V_isWifiUp
TB,V_lowNetworkModeEnabled
TB,V_optIntoExistingSubscribedStreams
TB,V_periodicReportingEnabled
TB,V_shouldSendFeedbackControllerReport
TB,V_supportDuplication
TB,V_toneInjectionEnabled
TB,V_usePacketThread
TB,V_usingServerBasedLinks
TB,V_videoEnabled
TB,V_waitToBeNominated
TB,VconnectionPersists
TB,VdidSend200OK
TB,VdisableVAD
TB,VisAudioEnabled
TB,VisAudioPausedToStart
TB,VisDTLSEnabled
TB,VisDuplexAudioOnly
TB,VisDuplexVideoOnly
TB,VisHalfDuplexAudio
TB,VisKeyExchangeEnabled
TB,VisQueryAnswered
TB,VisRelayEnabled
TB,VisRelayForced
TB,VisValid
TB,VisVideoEnabled
TB,VisVideoPausedToStart
TB,VisVideoSourceScreen
TB,VisWaitingForICEResult
TB,VreceivedSIPInvite
TB,VrequiresWifi
TB,VshouldDisplayNetworkQualityGraph_
TB,VshouldTimeoutPackets
TB,VuseControlByte
TB,VuseUEP
TC,N
TC,N,V_direction
TC,N,V_fractionLost
TC,N,V_linkProbingCapabilityVersion
TC,N,V_mediaControlInfoFECFeedbackVersion
TC,N,V_mediaControlInfoVersion
TC,N,V_mode
TC,N,V_numRedundantPayloads
TC,N,V_packetType
TC,N,V_packetsPerBundle
TC,N,V_presentationState
TC,N,V_redundancyControllerFECVersion
TC,N,V_remoteLinkProbingCapabilityVersion
TC,N,V_streamIndex
TC,N,V_type
TC,N,V_videoQuality
TC,R
TC,R,N
TC,R,N,V_encodingType
TC,R,N,V_fieldType
TC,R,N,V_mediaType
TC,R,N,V_priority
TC,R,N,V_transportType
TC,R,N,V_uiState
TC,R,V_duplicationReason
TC,R,V_linkProbingCapabilityVersion
TC,R,V_type
TC,R,V_version
TC,R,V_wifiAssistState
TC,R,V_writerMode
TC,V_fecFeedbackVersion
TC,V_linkProbingCapabilityVersion
TC,V_preferredLocalInterfaceForDuplication
TC,V_preferredRemoteInterfaceForDuplication
TC,V_version
TI,N
TI,N,V_NTPLeastSignificantWord
TI,N,V_NTPMostSignificantWord
TI,N,V_RTPTimestamp
TI,N,V_SSRC
TI,N,V_abSwitches
TI,N,V_accessNetworkType
TI,N,V_afrcRemoteEstimatedBandwidth
TI,N,V_audioChannelCount
TI,N,V_audioChannelIndex
TI,N,V_audioFeatures
TI,N,V_audioIOSampleRate
TI,N,V_audioSendingBitrate
TI,N,V_audioSessionID
TI,N,V_audioSessionId
TI,N,V_audioUnitModel
TI,N,V_audioUnitNumber
TI,N,V_audioUnitType
TI,N,V_basebandCodecSampleRate
TI,N,V_blobVersion
TI,N,V_budgetInCaptureFrames
TI,N,V_callID
TI,N,V_cap2G
TI,N,V_cap3G
TI,N,V_cap5G
TI,N,V_capLTE
TI,N,V_capWifi
TI,N,V_capabilities
TI,N,V_cellularUniqueTag
TI,N,V_channelCount
TI,N,V_channelIndex
TI,N,V_cipherSuite
TI,N,V_clientVersion
TI,N,V_codecBandwidthMask
TI,N,V_codecRateModeMask
TI,N,V_codecType
TI,N,V_confidence
TI,N,V_coordinateSystem
TI,N,V_cumulativePacketsLost
TI,N,V_currentUplinkTargetBitrate
TI,N,V_currentUplinkTotalBitrate
TI,N,V_customHeight
TI,N,V_customVideoHeight
TI,N,V_customVideoWidth
TI,N,V_customWidth
TI,N,V_decodeFormats
TI,N,V_delaySinceLastSR
TI,N,V_destinationFramerate
TI,N,V_downlinkTargetBitrate
TI,N,V_downlinkTargetCellBitrateCap
TI,N,V_dtmfSampleRate
TI,N,V_encodeFormats
TI,N,V_encoderBitrateAveragingInterval
TI,N,V_encoderUsage
TI,N,V_estimatedBandwidthCap
TI,N,V_expectedBitrate
TI,N,V_extendedHighestSequenceNumber
TI,N,V_faceTimeSwitches
TI,N,V_formats
TI,N,V_formatsExt1
TI,N,V_framePosition
TI,N,V_frameRate
TI,N,V_framerate
TI,N,V_framesPerIdrPeriod
TI,N,V_groupID
TI,N,V_hdrModesSupported
TI,N,V_height
TI,N,V_interarrivalJitter
TI,N,V_jitterBufferMode
TI,N,V_keyFrameInterval
TI,N,V_landscapeAspectRatioX
TI,N,V_landscapeAspectRatioY
TI,N,V_lastNoVoiceActivityPacketCount
TI,N,V_lastSRTimestamp
TI,N,V_linkProbingCapabilityVersion
TI,N,V_localSSRC
TI,N,V_maxBandwidth
TI,N,V_maxBitrateKbps
TI,N,V_maxChannelCountMic
TI,N,V_maxChannelCountSpeaker
TI,N,V_maxIDSStreamIdCount
TI,N,V_maxMediaBitrate
TI,N,V_maxNetworkBitrate
TI,N,V_maxPacketsPerSecond
TI,N,V_maxRedundancyPercentage
TI,N,V_maxSupportedTemporalLayers
TI,N,V_mediaControlInfoGeneratorOptions
TI,N,V_mediaControlInfoGeneratorType
TI,N,V_mediaControlInfoSubVersion
TI,N,V_mediaControlInfoVersion
TI,N,V_mediaFlags
TI,N,V_mediaState
TI,N,V_mediaSubtype
TI,N,V_mediaType
TI,N,V_minBitrateKbps
TI,N,V_minTargetBitrate
TI,N,V_mismatchedDisplayAspectRatioX
TI,N,V_mismatchedDisplayAspectRatioY
TI,N,V_mode
TI,N,V_multiwayCapabilities
TI,N,V_nackGeneratorStorebagConfigVersion
TI,N,V_negotiationProtocolMask
TI,N,V_networkPayload
TI,N,V_numPayloads
TI,N,V_octetsSent
TI,N,V_pTime
TI,N,V_packetExpirationTime
TI,N,V_packetsSent
TI,N,V_parameterSet
TI,N,V_parameterSets
TI,N,V_payload
TI,N,V_payloadFlags
TI,N,V_payloadSpecOrPayloads
TI,N,V_pixelFormat
TI,N,V_pixelFormats
TI,N,V_portraitAspectRatioX
TI,N,V_portraitAspectRatioY
TI,N,V_preferredFormat
TI,N,V_preferredFormatExt1
TI,N,V_preferredIOSampleRate
TI,N,V_preferredIOSamplesPerFrame
TI,N,V_preferredMediaBitRate
TI,N,V_preferredMediaBitrate
TI,N,V_profileLevelId
TI,N,V_prominenceIndex
TI,N,V_qualityIndex
TI,N,V_radioAccessTechnology
TI,N,V_rateChangeCounter
TI,N,V_rateSharingCount
TI,N,V_redMaxDelay20ms
TI,N,V_redNumPayloads
TI,N,V_redundancyMode
TI,N,V_redundancyPercentage
TI,N,V_remoteBasebandCodecSampleRate
TI,N,V_remoteBlobVersion
TI,N,V_remoteCodecType
TI,N,V_remoteMediaState
TI,N,V_remoteSSRC
TI,N,V_repairedMaxNetworkBitrate
TI,N,V_repairedStreamID
TI,N,V_reportedSourceSSRC
TI,N,V_reservedBitrate
TI,N,V_rtcpFlags
TI,N,V_rtpId
TI,N,V_rtpPayload
TI,N,V_rtpSSRC
TI,N,V_rtpSampleRate
TI,N,V_rtpTimestampRate
TI,N,V_screenCaptureDisplayID
TI,N,V_screenDisplayID
TI,N,V_screenPixelCount
TI,N,V_screenRes
TI,N,V_screenSSRC
TI,N,V_secondaryFlags
TI,N,V_selectiveSharingPort
TI,N,V_senderLanguages
TI,N,V_sequenceNumber
TI,N,V_size
TI,N,V_sourceFramerate
TI,N,V_ssrc
TI,N,V_status
TI,N,V_streamGroup
TI,N,V_streamGroupID
TI,N,V_streamGroupMode
TI,N,V_streamIndex
TI,N,V_supportFlags
TI,N,V_supportedCodecs
TI,N,V_supportedImageTypes
TI,N,V_supportedPayloads
TI,N,V_supportedVideoCodecs
TI,N,V_supportedVideoFormats
TI,N,V_syncGroupID
TI,N,V_targetBitrate
TI,N,V_targetBitrateCap
TI,N,V_targetBitrateChangeCounter
TI,N,V_tierNetworkBitrate
TI,N,V_tilesPerFrame
TI,N,V_tilesPerVideoFrame
TI,N,V_timestamp
TI,N,V_transportSessionID
TI,N,V_transportType
TI,N,V_updateNumber
TI,N,V_uplinkBitrateCapCell
TI,N,V_uplinkBitrateCapWifi
TI,N,V_utteranceNumber
TI,N,V_videoPayload
TI,N,V_videoSSRC
TI,N,V_videoSendingBitrate
TI,N,V_visibilityIndex
TI,N,V_vpOperatingMode
TI,N,V_weightFactor
TI,N,V_width
TI,N,VauNumber
TI,N,VcellBandwidth
TI,N,VlargeFrameSizeAtCurrentBandwidth
TI,N,VlargeFrameSizeRequested
TI,N,VmaxBandwidth
TI,N,VpreferredCodec
TI,N,VprobingSequencePacketCount
TI,N,VvisibleRectCropping
TI,R
TI,R,N
TI,R,N,V_actualBitrate
TI,R,N,V_audioSessionId
TI,R,N,V_basePeriodCount
TI,R,N,V_basePeriodMs
TI,R,N,V_basebandNotificationRegistrationToken
TI,R,N,V_basebandQueueDepth
TI,R,N,V_basebandTxBitrate
TI,R,N,V_bitrate
TI,R,N,V_blockSize
TI,R,N,V_bundleHeaderBytes
TI,R,N,V_bundledPackets
TI,R,N,V_capabilities
TI,R,N,V_captureFramerate
TI,R,N,V_codecSampleRate
TI,R,N,V_confidence
TI,R,N,V_countOfLowPrioritySamples
TI,R,N,V_evsSIDPeriod
TI,R,N,V_frameRate
TI,R,N,V_inputSampleRate
TI,R,N,V_inputSamplesPerFrame
TI,R,N,V_internalBundleFactor
TI,R,N,V_lastSentAudioSampleTime
TI,R,N,V_localSSRC
TI,R,N,V_maxBitrate
TI,R,N,V_maxTargetBitrate
TI,R,N,V_mediaControlInfoGeneratorType
TI,R,N,V_mediaType
TI,R,N,V_minBitrate
TI,R,N,V_minTargetBitrate
TI,R,N,V_mostBurstLoss
TI,R,N,V_numberOfPacketsInOutputQueue
TI,R,N,V_numberOfPacketsWaitingInOutputQueue
TI,R,N,V_nwNotificationProcessed
TI,R,N,V_operatingBitrate
TI,R,N,V_packetID
TI,R,N,V_probingLargeFrameSize
TI,R,N,V_probingSequencePacketCount
TI,R,N,V_probingSequencePacketSize
TI,R,N,V_rateChangeCounter
TI,R,N,V_redundancyPercentage
TI,R,N,V_reliableMessageResendInterval
TI,R,N,V_remoteBandwidthEstimation
TI,R,N,V_remoteCodecType
TI,R,N,V_rtpTimestampRate
TI,R,N,V_samplesPerBlock
TI,R,N,V_selectiveSharingPort
TI,R,N,V_sendTmmbrBitrate
TI,R,N,V_sessionToken
TI,R,N,V_sharedEstimatedBandwidth
TI,R,N,V_sharedEstimatedBandwidthUncapped
TI,R,N,V_sharedRemoteEstimatedBandwidth
TI,R,N,V_state
TI,R,N,V_streamGroupID
TI,R,N,V_targetBitrate
TI,R,N,V_tilesPerVideoFrame
TI,R,N,V_totalPacketReceived
TI,R,N,V_transportSessionID
TI,R,N,V_updateNumber
TI,R,N,V_usageMode
TI,R,N,V_utteranceNumber
TI,R,N,V_width
TI,R,N,V_worstRecentBurstLoss
TI,R,V_averagePacketDelayMs
TI,R,V_averageThroughputBps
TI,R,V_blocksRelayedCount
TI,R,V_datagramChannelToken
TI,R,V_encoderGroupID
TI,R,V_encodingHeight
TI,R,V_encodingWidth
TI,R,V_maxAllowedBitrate
TI,R,V_maxAllowedBitrate2G
TI,R,V_maxAllowedBitrate3G
TI,R,V_maxAllowedBitrateLTE
TI,R,V_maxAllowedBitrateP2P
TI,R,V_maxAllowedBitrateTCPRelay
TI,R,V_maxAllowedBitrateUSB
TI,R,V_maxAllowedBitrateWifi
TI,R,V_maxBitrate2GDownlink
TI,R,V_maxBitrate2GUplink
TI,R,V_maxBitrate3GDownlink
TI,R,V_maxBitrate3GUplink
TI,R,V_maxBitrateExpensiveDownlink
TI,R,V_maxBitrateExpensiveUplink
TI,R,V_maxBitrateNonExpensiveDownlink
TI,R,V_maxBitrateNonExpensiveUplink
TI,R,V_maxBitrateWiFiDownlink
TI,R,V_maxBitrateWiFiUplink
TI,R,V_maxMediaBitrate
TI,R,V_maxNetworkBitrate
TI,R,V_minNetworkBitrate
TI,R,V_packetDropCount
TI,R,V_qualityIndex
TI,R,V_receivedResponseCount
TI,R,V_reorderedPacketsCount
TI,R,V_repairMaxNetworkBitrate
TI,R,V_repairStreamID
TI,R,V_sentRequestCount
TI,R,V_streamGroupID
TI,R,V_targetBitrateCap
TI,R,V_targetFramerate
TI,R,V_token
TI,R,V_type
TI,R,VaudioCodecBitrate
TI,R,VconferenceID
TI,R,VnetworkBitrate
TI,R,VpacketsPerBundle
TI,R,VredMaxDelay20ms
TI,R,VredNumPayloads
TI,V_actualNetworkBitrate
TI,V_audioChannelIndex
TI,V_bitrate
TI,V_callID
TI,V_captureFrameRate
TI,V_clientTargetBitrate
TI,V_clientTargetBitrateCap
TI,V_downlinkBitrateCap
TI,V_endRTPTimeStamp
TI,V_lastSentAudioSampleTime
TI,V_localSwitches
TI,V_maxAveragePacketDelayMs
TI,V_micTimestamp
TI,V_negotiatedSwitches
TI,V_packetCountInNetworkQueue
TI,V_realRATType
TI,V_remoteCallID
TI,V_remoteSwitches
TI,V_speakerTimestamp
TI,V_startRTPTimeStamp
TI,V_timestamp
TI,V_uplinkAudioBitrateCapOneToOne
TI,V_uplinkBitrateCap
TI,V_uplinkBitrateCapOneToOne
TI,VactualAudioCodec
TI,VactualVideoCodec
TI,VcallID
TI,VlastActiveCall
TI,VlastReceived
TI,VpreferredAudioCodec
TI,VpreferredVideoCodec
TI,VremoteFrameHeight
TI,VremoteFrameWidth
TI,VtalkingPeersLimit
TQ,N,V_channelAwareOffset
TQ,N,V_cnPayloadType
TQ,N,V_customHeight
TQ,N,V_customWidth
TQ,N,V_cvoExtensionID
TQ,N,V_dtmfPayloadType
TQ,N,V_dtmfTimestampRate
TQ,N,V_fixedJitterBufferSize
TQ,N,V_framerate
TQ,N,V_hdrMode
TQ,N,V_idsParticipantID
TQ,N,V_initialMemoryUsageMB
TQ,N,V_keyFrameInterval
TQ,N,V_maxEncoderPixels
TQ,N,V_maxUDPPayloadSize
TQ,N,V_memoryUsageMB
TQ,N,V_networkAgentRefCount
TQ,N,V_networkClockID
TQ,N,V_ntpTime
TQ,N,V_numRedundantPayloads
TQ,N,V_pTime
TQ,N,V_preferredMediaBitRate
TQ,N,V_profileLevelId
TQ,N,V_ptime
TQ,N,V_recommendedMTU
TQ,N,V_remoteIDSParticipantID
TQ,N,V_rxMaxBitrate
TQ,N,V_rxMinBitrate
TQ,N,V_rxPayloadType
TQ,N,V_rxRedPayloadType
TQ,N,V_screenDisplayID
TQ,N,V_serializedSize
TQ,N,V_sourceFramerate
TQ,N,V_spatialAudioSourceID
TQ,N,V_statisticsID
TQ,N,V_tilesPerFrame
TQ,N,V_transactionID
TQ,N,V_txInitialBitrate
TQ,N,V_txMaxBitrate
TQ,N,V_txMinBitrate
TQ,N,V_txPayloadType
TQ,N,V_txRedPayloadType
TQ,R
TQ,R,N
TQ,R,N,V_idsParticipantID
TQ,R,N,V_spatialToken
TQ,R,V_budgetConsumingCellularRxBytes
TQ,R,V_budgetConsumingCellularTxBytes
TQ,R,V_mediaCellularRxBytes
TQ,R,V_mediaCellularTxBytes
TQ,R,V_mediaExcessiveCellularRxBytes
TQ,R,V_mediaExcessiveCellularTxBytes
TQ,R,V_mediaWifiRxBytes
TQ,R,V_mediaWifiTxBytes
TQ,R,V_serializedSize
TQ,R,V_signalingExcessiveCellularRxBytes
TQ,R,V_signalingExcessiveCellularTxBytes
TS,N,V_evsChannelAwareOffset
TS,N,V_idsStreamID
TS,N,V_ipVersion
TS,N,V_maxFrameDurationMillis
TS,N,V_parentStreamID
TS,N,V_port
TS,N,V_repairedStreamID
TS,N,V_rtcpRemotePort
TS,N,Vport
TS,R
TS,R,N
TS,R,N,V_connectionStatsStreamID
TS,R,N,V_evsChannelAwareIndicator
TS,R,N,V_evsChannelAwareOffset
TS,VmaxPacketLength
T^?,N,V_callback
T^?,N,V_didProcessSamplesCallback
T^?,V_updateRemoteCodecInfoCallback
T^AC,N,V_videoPriorityPointer
T^v,N
T^v,N,V_audioMediaControlInfoGenerator
T^v,N,V_callLogFile
T^v,N,V_controlInfoGenerator
T^v,N,V_didProcessSamplesCallbackContext
T^v,N,V_mediaControlInfoGenerator
T^v,N,V_metaData
T^v,N,V_videoMediaControlInfoGenerator
T^v,R,N,V_mediaControlInfoGenerator
T^v,V_updateRemoteCodecInfoContext
T^{?=^v^?^?},R,V_wrmContext
T^{OpaqueAudioConverter=},R,V_clientToRemoteConverter
T^{OpaqueAudioConverter=},R,V_remoteToClientConverter
T^{OpaqueCMBlockBuffer=},N
T^{PacketThread_s=},R,V_packetThread
T^{_VCAudioIOControllerClientIO=^v^?@III^{opaqueVCAudioBufferList}},R,N
T^{_VCAudioIOControllerIOState=BdIIdQ{_VCSingleLinkedList=^{_VCSingleLinkedListEntry}B^?Q}^{opaqueCMSimpleQueue}^{opaqueVCAudioLimiter}^{opaqueVCAudioBufferList}^{opaqueVCAudioBufferList}IQQ[40c]},R,N
T^{__CFDictionary=},N
T^{__CFString=},R,N
T^{__CVBuffer=},N,V_depthPixelBuffer
T^{opaqueRTCReporting=},N
T^{opaqueRTCReporting=},N,V_reportingAgent
T^{opaqueRTCReporting=},R,N
T^{opaqueVCAudioBufferList=},R,N,V_micBuffer
T^{opaqueVCAudioBufferList=},R,N,V_speakerBuffer
T^{opaqueVCRemoteImageQueue=},R,N,V_senderQueue
T^{tagCONNRESULT=IiiIiiSS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}IiiiiSiii^{tagCONNRESULT}i}
T^{tagCONNRESULT=IiiIiiSS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}IiiiiSiii^{tagCONNRESULT}i},R,V_connectionResult
T^{tagHANDLE=i},N,V_afrcHandle
T^{tagHANDLE=i},N,V_mediaQueue
T^{tagHANDLE=i},N,V_rtpHandle
T^{tagHANDLE=i},N,V_rtpVideo
T^{tagHANDLE=i},R,V_videoTransmitterHandle
T^{tagHANDLE=i},VhAFRC
T^{tagHANDLE=i},VhMediaQueue
T^{tagHANDLE=i},Vhandle
T^{tagHANDLE=i},VrtpHandle
T^{tagIPPORT=i[16c](?=I[16C])S},V_ipport
T^{tagSRTPINFO=ii{_opaque_pthread_mutex_t=q[56c]}{_opaque_pthread_cond_t=q[40c]}IISSIIQii[32C][14C][32C][14C][20C]{_opaque_pthread_mutex_t=q[56c]}^v^vII{os_unfair_lock_s=I}{tagSRTPCryptContext=^{_CCCryptor}}{tagSRTPTransformPolicy=iiiiiii}IB},R
T^{tagVCAudioFrameFormat={AudioStreamBasicDescription=dIIIIIIII}I},R,N
T^{tagVCAudioReceiver={tagVCAudioReceiverConfig=I[4{tagVCAudioReceiverStream=^{tagHANDLE}SBB^{tagVCCryptor}iB^{tagVCAudioReceiver}^v^v}]^vIiIiiB^{opaqueRTCReporting}iB^{__CFString}^{__CFString}SBBBBBiB^v^?^?^?^{tagVCJBTargetEstimatorSynchronizer}^v^vIBIiBBQB}^v^{opaqueVCJitterBuffer}B{tagVCAudioFrameFormat={AudioStreamBasicDescription=dIIIIIIII}I}d{?=qiIq}^{tagVCRealTimeThread}{tagVCAudioReceiverReportingTask=^{opaqueRTCReporting}i^{tagHANDLE}}BB{_opaque_pthread_mutex_t=q[56c]}{_opaque_pthread_mutex_t=q[56c]}{tagVCAudioDecoderList=^{tagDecoderSettings}I}I{tagVCAudioReceiverStatistics=AIIIIf}^{tagWRMMetricsInfo}^?{tagVCAudioReceiverCallbackContext=^v^?^?}^?{tagVCAudioReceiverCallbackContext=^v^?^?}I[2{_RTCPPacketList=(tagNTP=Q{?=II})C[10^{tagRTCPPACKET}]^{OpaqueCMBlockBuffer}*QI[1472C][12S]CBQ{?=^{_RTCPPacketList}}}]dI[300{tagPacketHistoryInfo=ISIBB}]SS{_opaque_pthread_mutex_t=q[56c]}^{tagVCAudioReceiverStream}SSdBSS{_VCAudioCodecModeChangeEvent=iiiI{EVSRFParams=II}}BSSSIBBQB^v^?^?^?^{tagVCJBTargetEstimatorSynchronizer}{tagVCJitterBufferWRMReportingMetrics=IIIIQQII}^vBdiddId^{tagVCAudioIssueDetector}iiIi^{tagVCAudioDump}{tagVCAudioDumpPayloadInfo=BiBB^{AudioStreamBasicDescription}}},R,VaudioReceiver
T^{tagVCAudioStreamGroupStream=^{tagVCAudioStreamGroupStream}BB^v^?S@II},R
T^{tagVCCellularAudioTapIORealtimeContext=q^{_VCAudioPowerSpectrumSourceRealtimeContext}},R,N
T^{tagVCCryptor=},N,V_sframeCryptor
T^{tagVCCryptor=},R,N,V_receiverSframeCryptor
T^{tagVCCryptor=},R,N,V_transmitterSframeCryptor
T^{tagVCJBTargetEstimatorSynchronizer=},N
T^{tagVCMediaQueue=},N,V_mediaQueue
T^{tagVCMediaQueue=},N,V_vcMediaQueue
T^{tagVCNWConnectionMonitor=},R,N,V_monitor
T^{tagVCSecurityKeyHolder=},N,V_securityKeyHolder
T^{tagVCVideoTransmitterStreamConfig=^{tagHANDLE}SiI^{tagVCCryptor}},R,N,V_streamConfigs
T^{tagWRMMetricsInfo=B^{tagHANDLE}IIIIIIIIIIIIQQQi^?{?=^v^?^?}{_opaque_pthread_mutex_t=q[56c]}IIIIIIIIIQIIIIII},R,V_wrmInfo
Td,N
Td,N,V_amplitude
Td,N,V_arrivalTime
Td,N,V_decryptionMKMRecoveryInterval
Td,N,V_decryptionTimeOutInterval
Td,N,V_departureTime
Td,N,V_emulatedRxPLR
Td,N,V_estimatedBandwidth
Td,N,V_estimatedBandwidthUncapped
Td,N,V_lastBasebandFlushCountChangeTime
Td,N,V_lastReceivedRTCPPacketTime
Td,N,V_lastReceivedRTPPacketTime
Td,N,V_loopLength
Td,N,V_maxFramerate
Td,N,V_maxOWRD
Td,N,V_mediaQueueThrottlingInterval
Td,N,V_minFramerate
Td,N,V_networkServiceTime
Td,N,V_preferredBlockSize
Td,N,V_preferredSampleRate
Td,N,V_rateControlInterval
Td,N,V_remoteCodecSampleRate
Td,N,V_rtcpSendInterval
Td,N,V_rtcpTimeOutInterval
Td,N,V_rtpTimeOutInterval
Td,N,V_startHostTime
Td,N,V_statsReportingInterval
Td,N,VdurationThresholdUpward
Td,N,VlastProbingSequenceTimeActual
Td,N,VlastProbingSequenceTimeExpect
Td,N,VnetworkConditionsTimeoutInSeconds
Td,N,VpacketLossRate
Td,N,VpacketLossRate5Secs
Td,N,Vpercentage
Td,N,VroundTripTime
Td,R
Td,R,N
Td,R,N,V_basebandExpectedQueuingDelay
Td,R,N,V_confidence
Td,R,N,V_lastVideoKeyFrameTime
Td,R,N,V_lastVideoRefreshFrameTime
Td,R,N,V_nowrd
Td,R,N,V_nowrdAcc
Td,R,N,V_nowrdShort
Td,R,N,V_owrd
Td,R,N,V_packetLossPercentage
Td,R,N,V_packetLossRate
Td,R,N,V_packetLossRateAudio
Td,R,N,V_packetLossRateVideo
Td,R,N,V_redundancyInterval
Td,R,N,V_referencePacketArrivalTime
Td,R,N,V_remoteCodecSampleRate
Td,R,N,V_roundTripTime
Td,R,N,V_tmmbRTT
Td,R,N,V_worstRecentRoundTripTime
Td,R,V_IOBufferDuration
Td,R,V_lastReceivedVideoRTCPPacketTime
Td,R,V_lastReceivedVideoRTPPacketTime
Td,R,V_noRemotePacketInterval
Td,R,V_remoteNoRemotePacketInterval
Td,V_lastDecodedFrameTime
Td,V_lastKeyFrameSentTime
Td,V_lastSentAudioHostTime
Td,V_localLinkTypeSuggestionChangeTime
Td,V_noRemoteDuplicationThresholdFast
Td,V_primaryConnHealthAllowedDelay
Td,V_roundTripTime
Tf,N
Tf,N,V_audioPosition
Tf,N,V_currentFrameTime
Tf,N,V_maxPacketsPerSecond
Tf,N,V_powerLevel
Tf,N,V_synchronizationTimeOffset
Tf,N,V_txIntervalMin
Tf,N,V_volume
Tf,N,VscaleFactor
Tf,R
Tf,R,N
Tf,R,N,V_audioPosition
Tf,R,N,V_frameRate
Tf,R,N,V_maxFrequency
Tf,R,N,V_minFrequency
Tf,R,N,V_powerLevel
Tf,R,V_clientDownlinkPowerMovingAverage
Tf,R,V_clientUplinkPowerMovingAverage
Tf,R,V_lastLastVideoStallDuration
Tf,V_micPowerRMS
Tf,V_renderProcessTime
Tf,V_speakerPowerRMS
Ti,N
Ti,N,V_aacBlockSize
Ti,N,V_accessNetworkType
Ti,N,V_audioFractionTier
Ti,N,V_basebandFlushCount
Ti,N,V_bundlingScheme
Ti,N,V_captureFrameRate
Ti,N,V_captureSource
Ti,N,V_captureSourceID
Ti,N,V_chosenRedPayloadType
Ti,N,V_configuration
Ti,N,V_configurationExtension
Ti,N,V_connectionType
Ti,N,V_content
Ti,N,V_controlChannelVersion
Ti,N,V_deviceRole
Ti,N,V_dtxPayload
Ti,N,V_effectType
Ti,N,V_effectsMode
Ti,N,V_encoderUsage
Ti,N,V_encodingMode
Ti,N,V_eventLogLevel
Ti,N,V_forcedCapBitrate
Ti,N,V_forcedTargetBitrate
Ti,N,V_hdrMode
Ti,N,V_imageType
Ti,N,V_injectAudioConfigType
Ti,N,V_jitterBufferMode
Ti,N,V_ltrAckFeedbackType
Ti,N,V_mode
Ti,N,V_oneToOneOperatingMode
Ti,N,V_operatingMode
Ti,N,V_operation
Ti,N,V_payload
Ti,N,V_preferredAudioCodec
Ti,N,V_preferredMode
Ti,N,V_primaryPayload
Ti,N,V_processID
Ti,N,V_processId
Ti,N,V_qualityIndicator
Ti,N,V_ratType
Ti,N,V_redPayload
Ti,N,V_remoteVideoInitialOrientation
Ti,N,V_reportingClientType
Ti,N,V_reportingParentID
Ti,N,V_sframeCipherSuite
Ti,N,V_signalStrengthBars
Ti,N,V_signalStrengthDisplayBars
Ti,N,V_signalStrengthMaxDisplayBars
Ti,N,V_socket
Ti,N,V_streamCount
Ti,N,V_tilesPerFrame
Ti,N,V_transport
Ti,N,V_transportProtocolType
Ti,N,V_vfdCancel
Ti,N,V_vfdMessage
Ti,N,V_videoCodec
Ti,N,V_videoPayload
Ti,N,V_videoSource
Ti,N,Vcamera
Ti,N,VchatMode
Ti,N,VdeviceRole
Ti,N,Vmargin
Ti,N,VminMarginRequired
Ti,N,VminSamplesCount
Ti,N,VminSamplesCountFastBandwidthEstimation
Ti,N,VnatType
Ti,N,VoperatingMode
Ti,N,Vorientation
Ti,N,VpacketsPerBundle
Ti,N,VpendingRelayCount
Ti,N,VprobingSequenceCount
Ti,N,VtotalLargeFrameWaste
Ti,R
Ti,R,N
Ti,R,N,V_actualAudioSendingBitrate
Ti,R,N,V_audioTxBitrate
Ti,R,N,V_bandwidth
Ti,R,N,V_bandwidthEstimationState
Ti,R,N,V_basebandFlushedAudioCount
Ti,R,N,V_basebandFlushedVideoCount
Ti,R,N,V_clientPid
Ti,R,N,V_currentActiveRequestsCount
Ti,R,N,V_currentPendingRequestsCount
Ti,R,N,V_deviceRole
Ti,R,N,V_payload
Ti,R,N,V_processId
Ti,R,N,V_redPayloadType
Ti,R,N,V_reportingClientType
Ti,R,N,V_reportingModuleID
Ti,R,N,V_rtcpPort
Ti,R,N,V_rtpPort
Ti,R,N,V_state
Ti,R,N,V_width
Ti,R,V_deviceRole
Ti,R,V_localWRMLinkTypeSuggestion
Ti,R,V_remoteWRMLinkTypeSuggestion
Ti,R,VlocalFrameHeight
Ti,R,VlocalFrameWidth
Ti,V_NATType
Ti,V_connectionType
Ti,V_maxConnectionMTU
Ti,V_mediaControlInfoVersion
Ti,V_operatingMode
Ti,V_priority
Ti,V_relayServerProvider
Ti,V_remoteVideoOrientation
Ti,VbandwidthDownstream
Ti,VbandwidthUpstream
Ti,VdeviceRole
Ti,VdownstreamBandwidth
Ti,VmaxConnectionMTU
Ti,VpreferredAudioCodec
Ti,VupstreamBandwidth
Tq,N
Tq,N,V_SRTCPCipherSuite
Tq,N,V_SRTPCipherSuite
Tq,N,V_accessNetworkType
Tq,N,V_audioStreamMode
Tq,N,V_captureSource
Tq,N,V_codecType
Tq,N,V_direction
Tq,N,V_preferredCodecRateMode
Tq,N,V_resolution
Tq,N,V_rxCodecType
Tq,N,V_screenToken
Tq,N,V_sessionMode
Tq,N,V_sourceToken
Tq,N,V_streamInputID
Tq,N,V_streamToken
Tq,N,V_subscriptionSlot
Tq,N,V_synchronizationSourceStreamToken
Tq,N,V_transportProtocolType
Tq,N,V_txCodecType
Tq,N,V_type
Tq,N,V_videoResolution
Tq,N,V_videoStreamMode
Tq,N,V_videoToken
Tq,R,N
Tq,R,N,V_accessNetworkType
Tq,R,N,V_codecType
Tq,R,N,V_highestEncodingResolution
Tq,R,N,V_inputAudioPowerSpectrumToken
Tq,R,N,V_negotiationMode
Tq,R,N,V_outputAudioPowerSpectrumToken
Tq,R,N,V_sessionToken
Tq,R,N,V_sourceType
Tq,R,N,V_streamInputID
Tq,R,N,V_streamToken
Tq,R,N,V_token
Tq,R,V_inputAudioPowerSpectrumToken
Tq,R,V_outputAudioPowerSpectrumToken
Tq,R,V_streamToken
Tq,V_sipState
Tq,VconnectionChangeState
Tq,VsampleRate
Tq,Vstate
Tq,VvideoPayload
Tr^{?=i[12C]},R,V_ipv6Prefix
Tr^{_VCRemoteCodecInfo=Id},N
Tr^{_VCRemoteCodecInfo=Id},R,N
Tr^{__CFAllocator=},R,N,V_sampleBufferAllocator
Tr^{__CFAllocator=},R,V_backingBufferAllocator
Tr^{opaqueCMFormatDescription=},R,N,V_formatDescription
Tr^{tagVCAudioFrameFormat={AudioStreamBasicDescription=dIIIIIIII}I},N
Tr^{tagVCAudioFrameFormat={AudioStreamBasicDescription=dIIIIIIII}I},R
Tr^{tagVCAudioFrameFormat={AudioStreamBasicDescription=dIIIIIIII}I},R,N
Tr^{tagVCAudioRelayIOContext=^{tagVCAudioFrameFormat}^{tagVCAudioFrameFormat}^?^v^{opaqueVCAudioBufferList}f{tagVCAudioClientControllerTimeInfo=IIBBdIIQ}},R
Tr^{tagVCSpatialAudioMetadataGlobalInfo=IffffffII},R,N
Tr^{tagVCSpatialAudioMetadataPositionalInfo=fffIII},R,N
T{?=@@},R,V_serverLinks
T{?=@},N,V_videoAttributes
T{?=I[5I]Id{CGSize=dd}dIdII},N,V_currentChannelMetrics
T{?=i^{__CFArray}^{__CFArray}^{__CFArray}IBBIBBB},V_config
T{?=qiIq},N,VframePresentationTime
T{?=qiIq},V_latestSampleBufferTimestamp
T{?=qiIq},V_time
T{AVCRateControlConfig=IIIIIIB^{tagVCRateControlAlgorithmConfig}I},R,N,V_configuration
T{AudioStreamBasicDescription=dIIIIIIII},N,V_inputFormat
T{AudioStreamBasicDescription=dIIIIIIII},N,V_outputFormat
T{AudioStreamBasicDescription=dIIIIIIII},R,N,V_format
T{CGRect={CGPoint=dd}{CGSize=dd}},N,VcontentsRect
T{CGSize=dd},N,V_resolution
T{CGSize=dd},N,V_size
T{CGSize=dd},N,Vratio
T{CGSize=dd},R,N
T{CGSize=dd},R,N,V_aspectRatioLandscape
T{CGSize=dd},R,N,V_aspectRatioPortrait
T{CGSize=dd},R,N,V_orientationMismatchAspectRatioLandscape
T{CGSize=dd},R,N,V_screenSize
T{VCInfoDetails=Bff{CGSize=dd}^{__CFDictionary}q@{VCOverlayAudioInfo=iiii}{VCOverlayVideoInfo=iiiiii}},V_currentDetails
T{VoiceIOFarEndVersionInfo=[64C][64C]I},N
T{_NSRange=QQ},R,N
T{_NSRange=QQ},R,N,V_range
T{_VCRange=ff},N,V_frequencyRange
T{_VCRange=ff},R,N
T{_VCSessionParticipantCapabilities=BIiB},N,V_capabilities
T{_VCSessionParticipantLocalOneToOneSettings=@@@@IIB},R,N,V_oneToOneSettings
T{tagAVCPositionalInfo=I{CGSize=dd}ddd},N
T{tagAVCRateControlExperimentConfig=ii},R,N
T{tagAVCSessionPresentationInfo={CGRect={CGPoint=dd}{CGSize=dd}}IIC},N
T{tagVCAudioFrameFormat={AudioStreamBasicDescription=dIIIIIIII}I},N,V_inputFormat
T{tagVCRateControlAlgorithmConfig=I^Iiii[2i]iiiiiiiiiiiddddddddddddddiiidddddddddddIIIIIBBBBBBBBBBBiBddididddidiiddidddddddddddddddddBdiiBiddddddIIdd},R,N
T{tagVCRateControlAlgorithmConfig=I^Iiii[2i]iiiiiiiiiiiddddddddddddddiiidddddddddddIIIIIBBBBBBBBBBBiBddididddidiiddidddddddddddddddddBdiiBiddddddIIdd},R,N,V_config
T{tagVCVideoReceiverConfig=I[9{tagVCVideoReceiverStreamConfig={tagVCVideoReceiverStreamIDInfo=SSSI[9S][9S]}^{tagHANDLE}^{__CFDictionary}BSCBB^{tagVCCryptor}^v^viBBBi}]iiqiiiIiiiiiiBBBBd^v^?^?^?^?^?^?^?QBSB^{tagWRMMetricsInfo}IBBBBBBBBBBBBB^vBBIBBS^{tagVCJBTargetEstimatorSynchronizer}^{__CFString}^{__CFString}IBBBiBB{tagVCNACKGeneratorStoreBagsConfig=CffB[4f][4f]}B},V_videoReceiverConfig
URLByAppendingPathExtension:
UTF8String
UUID
UUIDString
VCCCData
VCCCGetBytes:size:
VCCCLength
VCCCPayloadKey
VCCCString
VCIDSSessionInfoSynchronizer:sendVCIDSSessionInfoRequest:
VCSessionCaptionsErrorEvent:errorPath:returnCode:
VCSessionErrorEvent:errorPath:returnCode:
VCSessionParticipantErrorEvent:errorPath:
VCTransportStreamSendPacket:
VCTransportStreamUnblock
VCVideoFeatureListStringTypeWithAVCMediaStreamMode:
VTPConnectionContext
VideoOnlyVCCapabilities
_CFAvailable
_H264LevelAsymmetryAllowed
_H264PacketizationMode
_IOBufferDuration
_MKI
_NATCheckRetryCount
_NATCheckRetryDelay
_NATType
_NTPLeastSignificantWord
_NTPMostSignificantWord
_RTPTimestamp
_SIPDisabled
_SIPHandle
_SRTCPCipherSuite
_SRTPCipherSuite
_SRTPInfo
_SSRC
_UID
_WCMClient
_WRMClient
_WRMNotificationRequestTime
__imHexString
_aacBlockSize
_abSwitches
_abnormalNetworkDetected
_abnormalOWRDCount
_abnormalOWRDSampleCount
_accessNetworkType
_accessUnitDataSectionSize
_accessUnitHeaderInfo
_accumulatedTargetDataSize
_acknowledgement
_activeConfigurationCount
_activeNegotiator
_activeParticipants
_activeSize
_activeTemporalTierBitmap
_activeVideoMode
_activeVideoStreams
_activelyProbingLinkIDs
_actualAudioSendingBitrate
_actualBitrate
_actualNetworkBitrate
_actualSendBitrate
_adapter
_addWVGAEncodingRules
_adjustTimestamp
_afrc
_afrcHandle
_afrcRemoteEstimatedBandwidth
_aggregateStallTimeDuration
_aggregatedProbingResults
_algorithm
_algorithmConfigCache
_allClients
_allocateReq
_allocatedMediaEntriesForClients
_allocatedStreamIDs
_allocationResponseHandler
_allocationTimestamp
_allowAudioRecording
_allowAudioSwitching
_allowDuplication
_allowDynamicMaxBitrate
_allowLargePackets
_allowListedXPCObjects
_allowRTCPFB
_allowsContentsChangeWithAspectPreservation
_almostFullQueueSize
_alwaysOnAudRedEnabled
_amplitude
_anbrActive
_anbrEnabled
_appWindowRect
_areStatisticsRegistered
_areStreamsSuspended
_arrivalTime
_aspectRatioLandscape
_aspectRatioPortrait
_assertionRefCount
_assetWriter
_asyncProcessingQueue
_attachments
_attributes
_audio
_audioBasicDescription
_audioBasicDescriptionAudioCapture
_audioBasicDescriptionAudioQueue
_audioBufferAppendList
_audioBufferOutputList
_audioBundlePool
_audioBundler
_audioChannelCount
_audioChannelIndex
_audioConfiguration
_audioDucker
_audioDumpEnabled
_audioEnabled
_audioFeatures
_audioFileName
_audioFormat
_audioFractionTier
_audioFrameCounter
_audioHeaderSize
_audioIO
_audioIOController
_audioIOSampleRate
_audioInterval
_audioIsPaused
_audioIssueDetector
_audioIssueDetectorEnabled
_audioManager
_audioMuted
_audioOnlyBitrateToStreamIDsTable
_audioParameters
_audioPaused
_audioPausedToStart
_audioPayloadTypes
_audioPayloads
_audioPosition
_audioPowerSpectrumSource
_audioPriorityDecayFast
_audioPriorityDecaySlow
_audioPriorityRampUp
_audioRecorderQueue
_audioRedundancyChangeEventQueue
_audioRedundancyEventPool
_audioRules
_audioRulesNegotiated
_audioSampleBufferAllocator
_audioSendingBitrate
_audioSession
_audioSessionSinkMuted
_audioSettings
_audioSilencePowerAverageMultiplier
_audioSpectrumBinCount
_audioSpectrumRefreshRate
_audioStallBitrate
_audioStreamConfigurations
_audioStreamGroupConfig
_audioStreamMode
_audioStreamUpdateEventQueue
_audioStreamUpdatePool
_audioStreams
_audioTapIOMap
_audioTierChangeRequestCount
_audioTierHysteresis
_audioTierPicker
_audioTimestampRWLock
_audioTimestampRate
_audioTransmitter
_audioType
_audioUnitNumber
_audioUnitType
_audioVideoBitrateToStreamIDsTable
_avConferenceEffectsQueue
_avcOperatingMode
_avcRemoteVideoQueue
_averageBitrateLong
_averageBitrateMovingAverageFactor
_averageBitrateShort
_averageBitrateWindowDuration
_averageInputPower
_averageInterCallbackDuration
_averageOutputPower
_averagePacketDelayMs
_averageQueueDepth
_averageReceiveInterval
_averageReceivedBitrate
_averageRoundTripTime
_averageSendInterval
_averageSilenceAudioPower
_averageTargetBitrate
_averageThroughputBps
_awdTimeTransmitter
_backingBufferAllocator
_bandwidth
_bandwidthConfigurations
_bandwidthDivergeCount
_bandwidthEstimationState
_bandwidthEstimatorMap
_bandwidthSettings
_bandwithAllocationTable
_basePeriodCount
_basePeriodMs
_baseQualityIndex
_basebandAdaptationEnabled
_basebandAdditionalTiersForRampUp
_basebandAverageBitrate
_basebandAverageBitrateShort
_basebandCodec
_basebandCodecSampleRate
_basebandCongestionDetector
_basebandExpectedQueuingDelay
_basebandFlushCount
_basebandFlushTransactionID
_basebandFlushableQueueDepth
_basebandFlushedAudioCount
_basebandFlushedVideoCount
_basebandLTEOrGreaterRATSwitchTime
_basebandMetrics
_basebandNBDCD
_basebandNormalizedBDCD
_basebandNotificationArrivalTime
_basebandNotificationRegistrationToken
_basebandQueueDepth
_basebandRadioTechnology
_basebandTotalQueueDepth
_basebandTxBitrate
_bdcd
_bdcdList
_belowNoRampUpBandwidth
_bindingResponseHandler
_bins
_bitmapContext
_bitrate
_bitrateLimits
_blobVersion
_blockBufferMemoryPool
_blockSeconds
_blockSettingLock
_blockSize
_blocksRelayedCount
_boardId
_btNotificationHandlerIndex
_btNotificationHandlerLock
_budgentBufferIndex
_budgetBufferPktSize
_budgetBufferPktTime
_budgetBufferSize
_budgetInCaptureFrames
_bufferInfos
_bufferLength
_bufferPool
_bufferPoolDictionary
_bufferPoolResolution
_bufferQueue
_bufferQueueSemaphore
_bufferSize
_bundleHeaderBytes
_bundlingAppliedByCodec
_burstLossPacketCount
_burstPacketLoss
_burstyLoss
_burstyLossArrayIndex
_burstyLossArraySize
_bytesReceived
_bytesReceivedToReport
_bytesSent
_bytesSentToReport
_cName
_caDisplayLink
_caLayerHost
_cachedActiveVideoStreams
_cachedError
_cachedNegotiationData
_cachedRemoteVideoFrame
_callInfoBlob
_callLogFile
_callback
_callbackBlock
_callbackContext
_callbackDictLock
_callbackQueue
_callbacksDict
_cameraU1
_canDisplayCaptions
_canLocalResizePIP
_canRemoteResizePIP
_canSendPacket
_cannedVideoCapture
_cannedVideoHeight
_cannedVideoWidth
_cap2G
_cap3G
_cap5G
_capWifi
_capabilities
_captionsCoordinator
_captionsDecoder
_captionsDelegate
_captionsLastUpdateNumber
_captionsLastUtteranceNumber
_captionsReceiver
_captionsReceiverLanguages
_captionsSenderLanguages
_captionsSettings
_captureController
_captureConverter
_captureFrameRate
_captureFramerate
_captureHeight
_captureServer
_captureSource
_captureSourceID
_captureVideoRule
_captureWidth
_cdrxBundleInfoRef
_cellPrimaryInterfaceChangeEnabled
_cellularAllowRedLowBitratesEnabled
_cellularAssertionActive
_cellularAudioTap
_cellularTapTypeToStreamTokenMap
_cellularUniqueTag
_channelAwareOffset
_channelBReq
_channelCount
_channelIndex
_channelNumber
_channelSequenceCountWithInactiveSlots
_channels
_charQueue
_characterPool
_chosenAudioPayload
_chosenDTXPayload
_chosenRedPayloadType
_cipherSuite
_cleanupDeadClients
_cleanupDone
_clientAudioSessionQueue
_clientCaptureController
_clientContextList
_clientDirection
_clientDownlinkPowerMovingAverage
_clientFormat
_clientIO
_clientIOInfo
_clientList
_clientPID
_clientPid
_clientProcessID
_clientQueue
_clientTargetBitrate
_clientTargetBitrateCap
_clientToRemoteConverter
_clientUUID
_clientVersion
_clients
_cnEnabled
_cnPayloadType
_cname
_codec
_codecBandwidthMask
_codecConfigs
_codecConfigurations
_codecRateModeMask
_codecSampleRate
_codecSamplesPerFrame
_codecSupport
_codecType
_colorInfo
_completionHandler
_completionHandlers
_compoundStreamIDs
_computeInternalFormatForStreamConfigurations:
_confidence
_configuration
_configurationExtension
_configurationInProgress
_connectState
_connectedFD
_connection
_connectionArray
_connectionAttempts
_connectionDataTimeoutCondVar
_connectionForDuplication
_connectionForDuplicationNonProbingVersion
_connectionHealthMonitor
_connectionMTU
_connectionManager
_connectionQueue
_connectionResult
_connectionSelectionPolicy
_connectionSelectionPriorities
_connectionSelectionVersion
_connectionSelector
_connectionSetupPiggybackBlob
_connectionSetupRTTEstimate
_connectionStatsStreamID
_connectionTypeString
_connections
_consecutiveDroppedFrameCount
_consecutiveIdenticalQueryResultCount
_consecutiveIdenticalQueryResultMax
_consecutiveRampDown
_contectRect
_content
_context
_controlChannelVersion
_controlFeedbackParameter
_controlInfoArrivalTime
_controlInfoAudioPacketSize
_controlInfoAudioTimestamp
_controlInfoCameraStatus
_controlInfoFECLength
_controlInfoFrameExtensionData
_controlInfoGenerator
_controlInfoIsDuplicatePacket
_controlInfoLTRBits
_controlInfoLTRTimestamp
_controlInfoPool
_controlInfoPoolLock
_controlInfoProbe
_controlInfoReceivedKbits
_controlInfoReceivedPackets
_controlInfoSequenceNumber
_controlInfoVideoArrivalTime
_controlInfoVideoPacketSize
_controlInfoVideoTimestamp
_controllerClient
_controllerFormat
_conversationTimeBase
_conversationTimeBaseTruncated
_conversionRatio
_convertedFrameHandler
_convertedFrameHandlerContext
_coordinateSystem
_copyInputBytes:numInputBytes:payloadType:timestamp:
_copyPool
_copyTransferSession
_coreMotionManager
_coreMotionManagerDelegate
_correlation
_countOfLowPrioritySamples
_countPeriodicTaskUpdate
_cpuFamily
_cpuType
_creationTime
_cryptors
_cumulativePacketsLost
_currentActiveConnection
_currentActiveEstimatorID
_currentActiveRequestsCount
_currentActiveScreenShare
_currentAudioCap
_currentAudioPayload
_currentAudioSessionMediaProperties
_currentAudioTier
_currentAudioUnitProperties
_currentBundleVoiceActivity
_currentChannelMetrics
_currentConnectionType
_currentDTXEnable
_currentDTXPayload
_currentDuplication
_currentEncodeRule
_currentEventState
_currentFrameTime
_currentHistoryIndex
_currentHistorySize
_currentIndexForAQMRate
_currentIndexForDelay
_currentIndexForDelayDistribution
_currentIndexForLossPattern
_currentIndexForLossRate
_currentIndexForQueueSize
_currentIndexForServiceRate
_currentIndexForServiceRateDistribution
_currentLinkID
_currentLocalStatsIndex
_currentLossPatternShift
_currentMediaTimestamp
_currentNetworkNames
_currentParticipantGenerationCounter
_currentPauseCompleteTimestamp
_currentPayloadType
_currentPendingRequestsCount
_currentRSRP
_currentRateChangeCounter
_currentReceiveMKI
_currentReceivingStats
_currentRedPayloadType
_currentRedundancyInterval
_currentRedundancyPercentage
_currentSettings
_currentSpatialContext
_currentStatsHistoryIndex
_currentStreamID
_currentStreamSchedule
_currentTable
_currentTargetBitrate
_currentTierIndex
_currentTime
_currentTimestamp
_currentTranscription
_currentUplinkBLER
_currentUplinkTargetBitrate
_currentUplinkTotalBitrate
_currentVideoCaptureFrameRate
_currentZoomFactor
_currentlyReadingMessage
_customFeatureListStrings
_customHeight
_customVideoHeight
_customVideoWidth
_customWidth
_dataPath
_dataReceivedDelegate
_dataSessionID
_datagram
_datagramChannel
_datagramChannelToken
_datagramChannels
_datagramMetaDataPool
_datagramOptionsCached
_datagramPacketAllocator
_datagramPacketNextSequenceNumber
_datagramPackets
_datagramPacketsDirectIDSPath
_decodeFormats
_decodeHighDef
_decodeScore
_decoder
_decompressionSession
_decompressionSessionMutex
_decryptionErrorStartTime
_decryptionMKMRecoveryInterval
_decryptionTimeOutEnabled
_decryptionTimeOutInterval
_decryptionTimeoutEnabledTime
_defaultEstimator
_defaultTier
_delaySinceLastSR
_delegate
_delegateNotificationQueue
_delegateQueue
_delegateWeak
_departureTime
_depthPixelBuffer
_description
_destination
_destinationFramerate
_destinationHandler
_destinations
_deviationChangeCount
_deviceClass
_deviceID
_deviceName
_deviceRole
_deviceType
_dialogs
_didCacheAlgorithmConfig
_didConfigured
_didInitializeSuccessfully
_didProcessSamplesCallback
_didProcessSamplesCallbackContext
_didPullSamplesCallback
_didPullSamplesCallbackContext
_didReceiveFirstFrame
_didReceivePiggybackBlob
_didReceiveServerStatsResponse
_didReceiveVideo
_didRegisterPacketReceivedHandler
_didReportExtendedPoorConnection
_didScheduleReceive
_didSendCongestionEvent
_didServerDie
_didSubmitCCReliableDataNotReceivedSymptom
_didVideoStall
_directPathRTXQueue
_directPathReadQueue
_direction
_disableRemoteInterfaceInference
_dispatchQueue
_displayID
_displayLink
_displaySize
_doNotDropNackOrRetransmitted
_doRateControlCounter
_downlinkBandwidthAllocator
_downlinkBitrateCap
_downlinkCryptor
_downlinkMostRecentSendTimestamp
_downlinkQualityDidChange
_downlinkRateController
_downlinkServerStatsByteUsed
_downlinkStatisticsCollector
_downlinkTargetBitrate
_downlinkTargetCellBitrateCap
_dpiFactor
_dropLinkRecommendation
_droppedFrameCount
_dtmf
_dtmfPayloadType
_dtmfTimestampRate
_dtmfTonePlaybackEnabled
_dtxEnabled
_dtxPayload
_duplicateImportantPktsEnabled
_duplicateMessageOnServerLink
_duplicationCallback
_duplicationContext
_duplicationEnhancementEnabled
_duplicationHandler
_duplicationLinkID
_duplicationPending
_duplicationReason
_duplicationState
_dwRefreshFrameCounter
_dynamicStore
_dynamicVideoPriorityEnabled
_earlyBytesInProbingSequence
_earlyPacketsInProbingSequence
_earlyProbingPacketArrivalTime
_echoedTimestamp
_effectType
_effectsArray
_effectsMetadata
_effectsMode
_effectsRegistered
_emptyFramesToBeSent
_emulatedNetworkConfigPath
_emulatedRxPLR
_enableAggressiveProbingSequence
_enableAudioPowerSpectrum
_enableCVO
_enableCoreMotionDetection
_enableDNNVAD
_enableDuplication
_enableLocalVideoRecording
_enableLoopbackInterface
_enableMaxBitrateOnNoChangeCMR
_enableOneToOneMode
_enableReceiveBitstreamDump
_enableRedundancy
_enableStatsReceiveThread
_enableStatsReporting
_enableVADFiltering
_encodeBuffer
_encodeFormats
_encodeHighDef
_encodeScore
_encodedBufferSize
_encodedBytes
_encoder
_encoderBitrateAveragingInterval
_encoderInAudioDump
_encoderOutAudioDump
_encoderThread
_encoderUsage
_encodingArgPool
_encodingMode
_encodingType
_encodingWidth
_encryptionInfoReceived
_encryptionKeyRollTimer
_endRTPTimeStamp
_endToEndConnectionStatisticsHandlerIndex
_endToEndLinks
_errorDetailCode
_errorReponseCallback
_estimateTxAudioBytes
_estimatedBandwidth
_estimatedBandwidthCap
_estimatedBandwidthUncapped
_estimatedDataRate
_estimatedJitter
_estimatorMap
_eventHandler
_eventLogLevel
_evsChannelAwareIndicator
_evsChannelAwareOffset
_evsHeaderFullOnly
_evsSIDPeriod
_expMovMeanFactor
_expMovMeanRTT
_expectedBitrate
_expectedProcessEndTime
_expectedQueuingDelay
_expectedQueuingDelayLong
_experimentEnabled
_experimentGroupIndex
_extendedHighestSequenceNumber
_extendedRampUpFrozenExitTime
_externalIOFormat
_fNATCheckInProgress
_fNATCheckQueued
_fTimeout
_faceMeshTrackingEnabled
_faceTimeSettings
_faceTimeSwitches
_failedFrameCount
_fallbackTier
_farEndVersionInfo
_fastMediaDuplicationEnabled
_fastRampDownBitrateRange
_fastSuddenBandwidthDetectionEnabled
_favorNonCarrier
_featureListStringH264
_featureListStringHEVC
_featureString
_fecFeedbackVersion
_fecHeaderV1Enabled
_fecLevelPerFrameSizeVector
_fecRatio
_feedbackAnalyzer
_feedbackController
_feedbackMessageCount
_feedbackOutOfOrderTotalCount
_fieldName
_fieldNameMap
_fieldType
_fieldValue
_firSequenceNumber
_firstAudioBufferReceived
_firstBelowNoRampUpBandwidthTime
_firstDegradedMeasure
_firstDivergeTime
_firstFrameReceived
_firstLossEventRampDownTime
_firstMediaFrameGapDetected
_firstMediaKeyIndex
_firstMediaKeyIndexTime
_firstMediaPacketTime
_firstMessageIndex
_firstOWRDFrozenTime
_firstPacketReceived
_firstReceiveTime
_firstReceiveTimestamp
_firstSendTime
_firstSendTimestamp
_fixedJitterBufferSize
_flushDatagramPacketsLock
_followSystemInput
_followSystemOutput
_forceBitrate
_forceCaptureHeight
_forceCaptureWidth
_forceDisableBitrateCap
_forceDisableDuplication
_forceDisableMediaPriority
_forceEVSWideBand
_forceEncodeFramerate
_forceEncodeHeight
_forceEncodeWidth
_forceFixedEncryptionLabel
_forceFullBandwidth
_forceHandoverToCell
_forceKeyFrameInterval
_forceMinBitrate
_forceNetworkCellular
_forceQueueWaitTimeMs
_forceRecvVideoPayload
_forceRedundancyPercentage
_forceRemoteMKMMissing
_forceVideoPayload
_forceWiFiAssist
_forceWiFiAssistOutOfBudget
_forceZeroRegionOfInterestOrigin
_forcedAudioPriorityEnabled
_forcedAudioPriorityLastUpdateTime
_forcedAudioPriorityValue
_forcedCapBitrate
_forcedMaxBitrate
_forcedMaxBitrateFromTestMonitor
_forcedTargetBitrate
_forcedTargetBitrateFromTestMonitor
_formatDescription
_formatType
_formats
_formatsExt1
_formattedText
_fractionLost
_frameBuffer
_frameFormatSpeaker
_framePosition
_frameRate
_framerate
_framesPerBasePeriod
_framesPerIdrPeriod
_frameworkVersion
_freezeReason
_frequencyLevels
_frequencyMeteringEnabled
_gap
_generalInfo
_generateRequest:requestState:transactionID:timestamp:
_generatedStreamIDs
_getActiveWriters
_getCPUFamilyType
_getCPUTypeStringForMachineType:
_groupEntries
_groupID
_hAUIO
_hMediaQueue
_hRTP
_handler
_handlerArray
_handlerQueue
_handshakeEnabled
_handshakeOperationQueue
_handshakeStartTime
_hardwareScore
_hardwareSettings
_hardwareUsageModeSettings
_has
_hasAppleNeuralEngine
_hasAssertedCell
_hasBaseband
_hasBasebandInitialized
_hasNATCheckEnded
_hasNATCheckStarted
_hasPeerSubscribedStreams
_hasPendingChanges
_hasReceivedFirstFrame
_hasReceivedLastFrame
_hasRepairStreamID
_hasRepairedStreamID
_hasRepairedStreams
_hasSpaceAfter
_hash
_haveReportedPerfTimers
_hdrColorInfo
_hdrMode
_hdrModePixelFormats
_hdrModesNegotiated
_hdrModesSupported
_head
_headerSize
_healthStats
_heartbeat
_hiDefEncoding
_highestEncodingResolution
_history
_hostTime
_iRATDuplicationEnabled
_iRATNotificationRequestTime
_iSMBCount
_identifierSeeds
_identity
_idleDuration
_idsChannel
_idsChannelDataFormat
_idsParticipantID
_idsReadQueue
_idsReadSource
_idsSocket
_idsStreamID
_idsUPlusOneMode
_ignoreCarrierBundle
_ignoreNWConnectionMonitorNotification
_ignoreNatTypeCache
_ignoreSilence
_imageAttributeRules
_imageData
_imageType
_includeRedSequenceOffset
_includeSequenceOffset
_infoList
_initTime
_initUsingWifiTiers
_initialMemoryUsage
_initialMemoryUsageMB
_initialRampUpDeltaReported
_initialRampUpStartTime
_initialReceivedBytes
_initialSentBytes
_initialTargetBitrate
_initializeScreenDimension
_initializingParticipants
_injectAudioConfigType
_inputAudioPowerSpectrumSource
_inputAudioPowerSpectrumToken
_inputDevice
_inputDeviceMutex
_inputFFTMeter
_inputFormat
_inputMeter
_inputSampleRate
_inputSamples
_inputSamplesPerFrame
_interarrivalJitter
_interfaceInfoDictionary
_interfaceListener
_interfaceListenerDelegate
_interfaceName
_internalAudioPacketsPerSecond
_internalBundleFactor
_internalList
_internalReceiverQueue
_interruptThread
_interruptThreadClient
_interruptThreadState
_interruptingMutex
_intervalMilliseconds
_inviteDataRequested
_ipVersion
_ipv6Prefix
_isActive
_isAudioOnly
_isAudioStall
_isBDCDListReady
_isBWEDumpFileEnabled
_isBasebandEnabled
_isBasebandFlushing
_isBasebandQueuingDelayHigh
_isBluetoothDevice
_isCallActive
_isCaller
_isCellUp
_isCellular16x9Capable
_isClientInProcess
_isClientRegistered
_isCompoundStreamIDsIncreased
_isConfirmed
_isCongested
_isConnectedOnIPv6_LowestConnectionQuality
_isConnectedSocket
_isConnectionResultSet
_isControllerAudioFormatValid
_isControllerReset
_isCurrentDTXEnabled
_isDTXEnabled
_isDefaultMode
_isDegraded
_isDemuxNeeded
_isDuplicationAllowed
_isDuplicationAllowedForMediaDegraded
_isDuplicationEnabled
_isEffectsApplied
_isEncodingSqaures
_isEncryptionEnabled
_isEndRTPTimestampSet
_isEndToEndBasedBandwidthProbingEnabled
_isExtraDelayForPacketRetransmissionsEnabled
_isFECVersion2Enabled
_isFaceMeshTrackingEnabled
_isFarEndVersionInfoValid
_isFecGeneratorEnabled
_isFeedbackReceived
_isFinal
_isFirstBWEstimationReleased
_isFirstFrame
_isFirstInitialRampUpDone
_isFirstTimestampArrived
_isFlushed
_isForSimulation
_isG5
_isGKVoiceChat
_isGVAEncoderAvailable
_isGVAEncoderAvailableInitialized
_isHEIFAndHEVCFormatEnabled
_isHandshakeCommenced
_isHandshakeMode
_isInCanvas
_isInDaemon
_isInProcess
_isInThrottlingMode
_isInitialized
_isInputMeteringEnabled
_isLineIn
_isLocal
_isLocalCellular
_isLocalCellular_LowestConnectionQuality
_isLocalDelegated
_isLowLatency
_isLowLatencyAudio
_isLowestQuality
_isMapped
_isMediaPlaybackOnExternalDevice
_isMediaSuspended
_isMicrophoneMuted
_isMixingSystemAudio
_isMixingVoiceWithMediaEnabled
_isModel:
_isMultiwaySession
_isMuted
_isMutedTalkerNotificationRegistered
_isNWConnectionEnabled
_isNWConnectionMonitorEnabled
_isNWMonitorSignalEnabled
_isNackEnabled
_isNetworkCongested
_isNewRateSentOut
_isNoServerStatsIdleActivityReported
_isOWRDListReady
_isOffChannelActivityHigh
_isOnHold
_isOneToOne
_isOneToOneInitiator
_isOneToOneModeEnabled
_isOneToOneRemoteMediaStalling
_isOneToOneScreenEnabled
_isOperatingAtMaxBitrate
_isOperatingAtMinBitrate
_isOpusInBandFecEnabled
_isOutputMeteringEnabled
_isOvershoot
_isPacketLossIncreasing
_isPaused
_isPeriodicLoggingEnabled
_isPersistent
_isPowerSpectrumEnabled
_isPreWarmStateEnabled
_isPreviewRunning
_isPrewarmingClient
_isPrimaryLinkUsable
_isPrimaryLocalUsingCell
_isProbingLockedOut
_isProcessingVideoOptIn
_isQueueEmpty
_isRTCPFBEnabled
_isRTCPForLossFeedbackEnabled
_isRTCPUsable
_isRTPFilter
_isRTPFlushBasebandFromVCRateControl
_isRTPUsable
_isRampUpSettling
_isRateControlDumpFileEnabled
_isRateLimitedMaxTimeExceeded
_isReceiveKeysCleanUpPending
_isReconnectPending
_isRedEnabled
_isRedundancyControlEnabled
_isRedundancyEnabled
_isRedundancyRequested
_isRedundancyStrategyResetPending
_isRegisteredForRateSharing
_isRemoteAudioPaused
_isRemoteBandwidthEstimationStable
_isRemoteCellular_LowestConnectionQuality
_isRemoteCodecInfoValid
_isRemoteDelegated
_isRemoteDuplicating
_isRemoteMediaQualityDegraded
_isRemoteMediaStalled
_isRemoteMediaStalledShort
_isRemoteOSPreLion
_isRemoteOnPeace
_isRemotePreAzul
_isRemotePresentationLarge
_isRemoteVersionInfoValid
_isReportingAgentOwner
_isResumed
_isRunning
_isSRTPInitialized
_isSSRCCollisionDetectionEnabled
_isSecondary
_isSendBitrateLimited
_isSendKeysCleanUpPending
_isSenderProbingEnabled
_isServerBasedBandwidthProbingEnabled
_isServerPacketRetransmissionEnabled
_isServerPacketRetransmissionForVideoEnabled
_isServerRTxEnabled
_isServerStatsCached
_isSharedConnection
_isSiriVoicePlayoutSupported
_isSiriVoiceTapSupported
_isSourceParticipantIDOnFanOutPacketsEnabled
_isSpeakerPhoneEnabled
_isStable
_isStalled
_isStarted
_isStatisticChangeHandlerDictionaryModified
_isStreamInputCaptureSource
_isSubStream
_isSubstream
_isSupported
_isSuspended
_isTargetBitrateOscillating
_isTargetBitrateStabilized
_isTelephony
_isTemporalScalingEnabled
_isTemporalStream
_isThreadRunning
_isThrottling
_isUplink
_isUplinkRecentlyCongested
_isUseCaseWatchContinuity
_isUsingFrontCamera
_isUsingInternalStatisticsCollector
_isVADFilteringEnabled
_isVCMediaQueueScheduledForServerBasedStreams
_isValid
_isVariableSliceModeEnabled
_isVideoCaptureRegistered
_isVideoDegraded
_isVideoDegradedStartTime
_isVideoExpected
_isVideoPaused
_isVideoPausedByUser
_isVideoProtected
_isVideoQualityDegraded
_isVideoQualityNearDegraded
_isVideoStoppedByBaseband
_isVideoStoppedByVCRateControl
_isVideoSuspended
_isVirtualRelayLink
_isVisible
_isWRMNotificationPending
_isWRMinitialized
_isWaitingForBasebandRampDown
_isWarmedUp
_isWiFiAssistActive
_isWifiUp
_isWindowed
_isWrongParticipantIDOnFanOutPacketsEnabled
_jbSynchronizerPerSyncGroupID
_jbTargetEstimatorSynchronizer
_jitterBuffer
_jitterBufferMode
_jitterBufferModeSet
_jitterQueue
_keyFrameInterval
_keyFrameIntervalDuration
_keyIndexNotReceived
_keyManagerQueue
_keyMaterialNotUsedTimeout
_landscapeAspectRatioX
_landscapeAspectRatioY
_lastAbnormalOWRDVerificationTime
_lastActivePrimaryConnection
_lastAllowRampUpTime
_lastAudioEnoughRateTime
_lastAudioFractionChangeTime
_lastAudioPriority
_lastAudioSessionStart
_lastAudioStallFlushTime
_lastAveragedTime
_lastBadVideoQualityTime
_lastBasebandFlushAudioTime
_lastBasebandFlushCountChangeTime
_lastBasebandFlushVideoTime
_lastBasebandHighNBDCDTime
_lastBasebandNotification
_lastBasebandRampDownTime
_lastBundleVoiceActivity
_lastCalledApiName
_lastCameraStatusBits
_lastCongestionTime
_lastConnectionUnstableTime
_lastDecodedFrameQueue
_lastDecodedFrameTime
_lastDecodedVideoFrameTime
_lastDecryptionMKMRecoveryTime
_lastDecryptionTimeoutReportTime
_lastDefaultCheckTime
_lastDefaultSettingLoadingTime
_lastDefaultsReadTime
_lastDestinationFrameCount
_lastDisplayTime
_lastDisplayedFromImageQueueCount
_lastEmergencyBasebandRampDownTime
_lastEnqueuedStreamUpdateEventWasEmpty
_lastFIRArrivalTime
_lastFrameTime
_lastGoodVideoQualityTime
_lastHealthPrintTime
_lastHighNBDCDTime
_lastHistoryNotEnoughLogTime
_lastHostTime
_lastInputSampleBuffer
_lastInputSampleBufferSize
_lastIsTalking
_lastKeyFrameRequestStreamID
_lastKeyFrameRequestTime
_lastKeyFrameSampleBufferSize
_lastKeyFrameSentTime
_lastKeyIndexNotReceived
_lastLastVideoStallDuration
_lastLinkPreferenceUpdateNotificationTime
_lastLocalPortrait
_lastLossEventRampDownTime
_lastLossEventTime
_lastMediaPriority
_lastMediaStallReportTime
_lastMediaStallStartTime
_lastNWConnectionNotification
_lastNWStatistics
_lastNetworkHealthPrintTime
_lastNetworkQueueAQMRateLoadTime
_lastNetworkQueueDelayDistributionLoadTime
_lastNetworkQueueDelayLoadTime
_lastNetworkQueueLossPatternLoadTime
_lastNetworkQueueLossRateLoadTime
_lastNetworkQueueServiceRateDistributionLoadTime
_lastNetworkQueueServiceRateLoadTime
_lastNetworkQueueSizeLoadTime
_lastNetworkUnstableTime
_lastNoOvershootBWEstimationTime
_lastOWRDChangeTime
_lastPacketInProbingSequenceArrivalTime
_lastPacketReceiveCallbackTime
_lastPercentageChange
_lastPolicyLoadingTime
_lastPositiveOWRDTime
_lastPrimaryConnectionInUse
_lastPrintTimestamp
_lastProbingSequenceReferenceTimestamp
_lastProbingSequenceTimestamp
_lastProcessedBytesReceived
_lastProcessedBytesSent
_lastRTCPTimeoutReportTime
_lastRTPTimeoutReportTime
_lastRampDownTime
_lastRampDownTimeDueToBaseband
_lastRampDownTimeDueToFeedback
_lastRateChangeCounter
_lastReceivedDepthBuffer
_lastReceivedMKI
_lastReceivedPixelBuffer
_lastReceivedRTCPPacketTime
_lastReceivedRTPPacketTime
_lastReceivedTimestamp
_lastReceivedVideoRTCPPacketTime
_lastRecordedTargetBitrate
_lastRecordingTime
_lastRemoteAudioPresentationTime
_lastRemotePortrait
_lastReportFlushedAudioPacketCount
_lastReportFlushedVideoPacketCount
_lastReportedBandwidthEstimation
_lastReportedCarrierNATType
_lastReportedIndex
_lastReportedNATType
_lastReportedNonCarrierNATType
_lastReportingCallbackTime
_lastRequest
_lastSRTimestamp
_lastSampleBufferTime
_lastSampleCount
_lastSendDataTime
_lastSentAudioHostTime
_lastSentAudioSampleTime
_lastSentFrameHostTimeBeforeStop
_lastSentFrameRTPTimestampBeforeStop
_lastSentSourceHostTime
_lastSentSourceSampleTime
_lastSentTimestamp
_lastSentVideoHostTime
_lastSequenceNumber
_lastStatisticsCollectorVideoStallTotalUpdateTime
_lastStats
_lastStatsReportTime
_lastTimeBLERAboveRampUpThreshold
_lastTimeBLERBelowRampDownThreshold
_lastTimeDetectNoOscillation
_lastTimeReceiveStatsFailed
_lastTimeServerStatsActivityRecorded
_lastTimeStartRampingDown
_lastTimeSustainedHighDownlinkPacketLossReported
_lastTimeSustainedHighUplinkPacketLossReported
_lastTimeTargetBitrateOvershootRecorded
_lastTimeUnexpectedLowTargetBitrateRecorded
_lastTimeUnexpectedRampUpFrozenRecorded
_lastTimestamp
_lastTimestampForRemoteSendingFromNonPrimary
_lastTimestampPreferredRemoteInterfaceUpdated
_lastTimestampReceiveTime
_lastTimestampWithPacketDrop
_lastTransitTime
_lastTransitionToFECTime
_lastTriggerRateControlTime
_lastUpdateQualityIndicator
_lastUpdateTimestamp
_lastVideoEnabledChangedTime
_lastVideoExpectationSwitch
_lastVideoKeyFrameTime
_lastVideoPresentationTime
_lastVideoPriority
_lastVideoQualityDegradedSwitchTime
_lastVideoRefreshFrameTime
_lastVideoTimestamp
_lastiRATCheckTime
_latencySensitiveMode
_latencySensitiveModeEnabled
_latestPrimaryPayload
_latestReceiveKeyIndex
_latestSampleBufferTimestamp
_latestSendKeyIndex
_layerHostMode
_lines
_linkConfidenceScore
_linkContext
_linkFlags
_linkIPPreference
_linkPreferDecision
_linkPreferSuggestion
_linkPreferSuggestionFromDefaults
_linkPreferenceOrder
_linkProbingCapabilityVersion
_linkProbingConnectionLockdownPeriod
_linkProbingDuplicationWaitTimeout
_linkProbingHandler
_linkProbingHandlerDelegate
_linkProbingInterval
_linkProbingLockdownPeriod
_linkProbingQueryResultsInterval
_linkProbingResultConfig
_linkProbingState
_linkProbingTimeout
_localAddress
_localAudioBuffer
_localAudioInput
_localAudioQueue
_localBandwidthEstimation
_localCallID
_localCellTech
_localConnectionData
_localConnectionStats
_localFormat
_localFrameworkVersion
_localInterfaceType
_localLinkTypeSuggestionChangeTime
_localOnWiFi
_localParticipant
_localParticipantID
_localPublishedStreams
_localRATTypeOverride
_localRelayConnectionData
_localRelayRequestResponse
_localRelayUpdate
_localSSRC
_localSessionStatsTimemoutSource
_localSettings
_localSourceNeedsReset
_localStats
_localSwitches
_localVideoAttributes
_localWRMAlertFromDefaults
_localWRMLinkTypeFromDefaults
_localWRMLinkTypeSuggestion
_lock
_logBWEDump
_logBasebandDump
_logDump
_logFeedbackDump
_logNWDump
_logPrefix
_loggingLock
_loopLength
_loopbackConnection
_lossEventBandwidthConfidence
_lossEventBandwidthLimit
_lossEventBuffer
_lossEventBufferIndex
_lowFpsVideoEnabled
_lowNetworkModeEnabled
_ltrAckFeedbackType
_ltrpEnabled
_machineName
_machineType
_marketingName
_masterTransactionID
_maxActiveScreenEncoders
_maxAllowedAudioOnlyBitrate2G
_maxAllowedAudioOnlyBitrate3G
_maxAllowedAudioOnlyBitrateLTE
_maxAllowedBitrate
_maxAllowedBitrate2G
_maxAllowedBitrate3G
_maxAllowedBitrateHighRat
_maxAllowedBitrateIPadCompanionUSB
_maxAllowedBitrateLTE
_maxAllowedBitrateP2P
_maxAllowedBitrateTCPRelay
_maxAllowedBitrateUSB
_maxAllowedBitrateWifi
_maxAllowedScreenShareBitrateLTE
_maxAllowedScreenShareBitrateWifi
_maxAudioLocalBurstyLoss
_maxAveragePacketDelayMs
_maxBandwidth
_maxBitrate
_maxBitrate2GDownlink
_maxBitrate2GUplink
_maxBitrate3GDownlink
_maxBitrate3GUplink
_maxBitrateExpensiveDownlink
_maxBitrateExpensiveUplink
_maxBitrateNonExpensiveUplink
_maxBitrateWiFiDownlink
_maxBitrateWiFiUplink
_maxBurstyLoss
_maxChannelCount
_maxChannelCountMic
_maxChannelCountSpeaker
_maxConcurrentVideoClients
_maxConnectionMTU
_maxDelay
_maxDetectableBandwidth
_maxEncoderPixels
_maxFrameDurationMillis
_maxFramerate
_maxFrequency
_maxIDSStreamIdCount
_maxMediaBitrate
_maxMediaStallTime
_maxNetworkBitrate
_maxOWRD
_maxOverRangePacketsCount
_maxPacketSize
_maxPacketsPerSecond
_maxPtime
_maxQueueSize
_maxReceivedRate
_maxRedundancyPercentage
_maxScreenCaptureSize
_maxSentRate
_maxStatsTransportStreamQueueTime
_maxSupportedCaptureFrameRate
_maxSupportedMultiwayCameraFrameRate
_maxSupportedMultiwayVideoResolution
_maxSupportedTemporalLayers
_maxTargetBitrate
_maxTierIndex
_maxUDPPayloadSize
_maxVideoLocalBurstyLoss
_maxZoomFactor
_maxiBitrateIPadCompanionP2P
_mediaBlobCompressed
_mediaBlobNegotiated
_mediaCellularRxBytes
_mediaCellularTxBytes
_mediaControlInfoCallbacksRegistered
_mediaControlInfoFECFeedbackVersion
_mediaControlInfoGenerator
_mediaControlInfoGeneratorOptions
_mediaControlInfoGeneratorType
_mediaControlInfoSubVersion
_mediaControlInfoVersion
_mediaController
_mediaControllerDelegate
_mediaDegradedHistories
_mediaDegradedHistoryIndices
_mediaDegradedThreshold
_mediaExcessiveCellularRxBytes
_mediaExcessiveCellularTxBytes
_mediaFlags
_mediaHealthStatisticsHandlerIndex
_mediaLines
_mediaNegotiator
_mediaNegotiatorMap
_mediaPriorityInfo
_mediaQueue
_mediaQueueThrottlingInterval
_mediaStallCount
_mediaStallTotalTime
_mediaState
_mediaStateMutex
_mediaStates
_mediaStreamAccessNetworkType
_mediaStreamDelegate
_mediaStreamDelegateQueue
_mediaStreamInfoArray
_mediaStreamMode
_mediaStreamSynchronizer
_mediaStreamSynchronizerQueue
_mediaStreamTransportProtocolType
_mediaStreamTransportType
_mediaStreams
_mediaSubtype
_mediaTable
_mediaType
_mediaTypeForBuffer:
_mediaTypeSettingsDict
_mediaTypeToSpatialAudioMetadataEntryMap
_mediaTypeToSpatialMetadataEntryMap
_mediaTypeToSpatialSourceIDMap
_mediaWifiRxBytes
_mediaWifiTxBytes
_memoryUsageMB
_message
_messageQueue
_messageReceivedDelegate
_messenger
_metaData
_metadata
_metadataGlobalInfo
_metadataInput
_metadataPositionalInfo
_metricsConfig
_mhrtz
_micBuffer
_micContext
_micPowerRMS
_micStreamGroups
_micTimestamp
_microphoneMuted
_microphoneU1
_minBitrate
_minEstimationWindowDuration
_minFramerate
_minFrequency
_minNetworkBitrate
_minPacketsCount
_minProbingSequenceSize
_minProbingSpacingAggressive
_minReceivedRate
_minSentRate
_minSentRequestCountThreshold
_minTargetBitrate
_minTierIndex
_mismatchedDisplayAspectRatioX
_mismatchedDisplayAspectRatioY
_mixingVoiceWithMediaEnabled
_mode
_modelName
_modelRevision
_modelVersion
_moitors
_moments
_momentsCollectorDelegate
_momentsImageTypes
_momentsQueue
_momentsSettings
_momentsVideoCodecs
_monitor
_monitoringAvailable
_monitors
_mostBurstLoss
_mostRecentTimestamp
_multiplexedConnection
_multiwayAudioStreams
_multiwayBitrateArbiter
_multiwayCapabilities
_multiwayVideoStreams
_muted
_mutex
_nackGeneratorStorebagConfigVersion
_natCheckGroup
_natCheckNetNameSema
_natCheckQueue
_needsPacketThread
_negotiatedAudioSettings
_negotiatedCaptionsSettings
_negotiatedFaceTimeSettings
_negotiatedMomentsSettings
_negotiatedScreenEnabled
_negotiatedScreenSettings
_negotiatedSettings
_negotiatedStreamGroups
_negotiatedSwitches
_negotiatedSystemAudioResults
_negotiatedVideoEnabled
_negotiatedVideoSettings
_negotiationDone
_negotiationMode
_negotiationProtocolMask
_negotiatorSettings
_network
_networkAgent
_networkAgentRefCount
_networkElementQueue
_networkFeedbackController
_networkInterfaceName
_networkInterfaceType
_networkMTU
_networkQueue
_networkQueueA
_networkQueueAQMRate
_networkQueueB
_networkQueueDelay
_networkQueueDelayMean
_networkQueueDelayStdDev
_networkQueueLossPattern
_networkQueueLossRate
_networkQueueMaxSize
_networkQueueServiceRate
_networkQueueServiceRateMean
_networkQueueServiceRateStdDev
_networkReceiveThread
_networkServiceTime
_networkStatisticsType
_newOWRDSampleCollected
_nextExpectedSampleTime
_nextMessageIndex
_nextToken
_nextWakeUpHostMachTime
_nextWakeUpInterval
_noRemoteDuplicationThresholdFast
_noRemotePacketInterval
_noServerStatsDownlinkNwActivity
_noServerStatsUplinkNwActivity
_nonCarrierInterfacesOnly
_normalizedDelay
_notificationArrivalTime
_notificationDelegate
_notificationHandler
_notificationMutex
_notificationQueue
_notifyDelegateVideoAttributeChanges
_notifyToken
_nowrd
_nowrdAcc
_nowrdAccRampDownThreshold
_nowrdAccRampUpThreshold
_nowrdRampDownThreshold
_nowrdRampUpThreshold
_nowrdShort
_ntpTime
_numBufferedSamples
_numPayloads
_numProcessors
_numRedundantPayloads
_numStatsDroppedDueToLinkID
_numStatsDroppedDueToStatsID
_numStatsDroppedDueToTooLate
_numStatsProcessed
_numStatsTriggeredForDownlink
_numStatsTriggeredForUplink
_numberOfPacketsInOutputQueue
_numberOfPacketsWaitingInOutputQueue
_nwActivity
_nwActivityActiveSession
_nwConnectionAvgDelay
_nwConnectionAvgThroughput
_nwConnectionMaxThroughput
_nwConnectionMonitorQueue
_nwConnectionOverDelayThresholdCount
_nwConnectionRateTrendSuggestion
_nwMonitor
_nwMonitorHandlerIndex
_nwMonitorInterfaceName
_nwMonitorLock
_nwNotificationProcessed
_octetAligned
_octetsSent
_offChannelTimeRatio
_offer
_onDemand
_oneToOneBitrateArbiter
_oneToOneControlInfoGenerator
_oneToOneEnabled
_oneToOneFeedbackController
_oneToOneModeEnabled
_oneToOneModeSupported
_oneToOneOperatingMode
_oneToOneSettings
_oneToOneSwitchStartTime
_oneToOneVideoEnabled
_opaqueData
_opaqueStream
_operatingBitrate
_operatingMode
_operatingTierIndex
_operation
_optInDictionary
_optIntoExistingSubscribedStreams
_optedInStreamID
_optionBitmap
_optionalPackedPayload
_orientationMismatchAspectRatioLandscape
_osVersion
_outAudioBitrate
_outOfOrderCount
_outVideoBitrate
_outputAudioPowerSpectrumToken
_outputAvailable
_outputDevice
_outputDeviceMutex
_outputFormat
_outputHeight
_outputQueue
_outputThread
_outputThreadClient
_outputURL
_outputWidth
_overRangePacketsCount
_owrd
_owrdEstimator
_owrdList
_pTime
_packedPayload
_packetBuffer
_packetBufferDataSize
_packetBurstLoss
_packetCount
_packetCountInNetworkQueue
_packetDatagramOptions
_packetDriver
_packetDropCount
_packetDropCountPerFrame
_packetEventHandler
_packetExpirationTime
_packetExpirationTimeInMillisecond
_packetFilter
_packetFlags
_packetHandler
_packetHandlerContext
_packetID
_packetLossPercentage
_packetLossPercentageAudio
_packetLossPercentageDecreaseThresholds
_packetLossPercentageIncreaseThresholds
_packetLossPercentageThreshold
_packetLossPercentageVideo
_packetLossRate5Secs
_packetLossRateAccum
_packetLossRateAudio
_packetLossRateAvgLong
_packetLossRateAvgLongAtLBAStart
_packetLossRateAvgLongPrevious
_packetLossRateBadTrendCount
_packetLossRateCount
_packetLossRateThreshold
_packetLossRateVideo
_packetPushedCondition
_packetReceivedOWRD
_packetReceivedVideo
_packetRelayService
_packetSizes
_packetThread
_packetThreadStartWithClientFormat:
_packetThreadStop
_packetType
_packetTypeForNetworkQueueLossPattern
_packetsPerBundle
_packetsSent
_parameterSet
_parameterSets
_parentNWActivity
_parsingDone
_participantConfig
_participantData
_participantGenerationCounter
_participantID
_participantId
_participantInfo
_participantMKMRecoveryTimeout
_participantMediaStallNwActivity
_participantPoorConnectionNwActivity
_participantQueue
_participantStreamTokens
_participantUUID
_participantsToAdd
_payload
_payloadBufferHistory
_payloadBufferHistoryIndex
_payloadFlags
_payloadHistoryCount
_payloadInfo
_payloadOctetAligned
_payloadPreference
_payloadSize
_payloadSpecOrPayloads
_payloadType
_payloadUsed
_payloads
_peerProtocolVersion
_peerPublishedStreamCallback
_peerPublishedStreams
_peerStateRWLock
_peerStatsHistory
_peerSubscribedStreamCallback
_peerSubscribedStreams
_pendingActiveUplinkStreams
_pendingKeyFrameGenerationStartTime
_pendingPrimaryConnection
_pendingRequests
_pendingSecondaryConnection
_pendingStreamsUpdated
_pendingVideoAttributesUpdateOnModeChange
_pendingVideoStreams
_perfTimers
_perfTimings
_periodicHealthPrintDispatchSource
_periodicReportingEnabled
_pid
_pixelBuffer
_pixelFormat
_pixelFormatCollections
_pixelFormats
_pixelTransferSession
_playbackMode
_plrBuckets
_plrEnvelope
_plrEnvelopeAttackFactor
_plrEnvelopeDecayFactor
_plrEnvelopeValue
_plrTier
_policies
_poolQueue
_popCompletionHandler
_port
_portraitAspectRatioX
_portraitAspectRatioY
_powerLevel
_powerSpectrumMeter
_powerSpectrumMetersForCellularTapType
_powerSpectrumSource
_powerSpectrumStreamToken
_preWarmCellEnabled
_preferRelayOverP2PEnabled
_preferRelayOverP2PReason
_preferredAudioCodec
_preferredAudioPayload
_preferredBlockSize
_preferredCodecRateMode
_preferredDevice
_preferredFormat
_preferredFormatExt1
_preferredIOSampleRate
_preferredIOSamplesPerFrame
_preferredLocalInterfaceForDuplication
_preferredMediaBitRate
_preferredMediaBitrate
_preferredMode
_preferredRemoteInterfaceForDuplication
_preferredSampleRate
_preloadQueue
_presentationInfo
_presentationState
_prevOperatingTierIndex
_previousAverageBitrate
_previousNOWRD
_previousNoRemoteInProgress
_previousOptedInStreamID
_previousPacketLossRate
_previousProcessTime
_previousRTPTimestamp
_previousReceiveTimestamp
_previousReceiveTimestampDiff
_previousRoundTripTime
_previousSendTimestamp
_previousSendTimestampDiff
_previousStatistics
_previousStatisticsArrivalTime
_previousTierIndex
_previousTimestamp
_previousTimestampDiff
_previousTotalPacketReceived
_previousTotalPacketSent
_primaryCameraLayer
_primaryCameraSubLayer
_primaryConnHealthAllowedDelay
_primaryConnection
_primaryLinkID
_printSampleBufferDetailsEnabled
_priority
_probability
_probingLargeFrameSize
_probingLargeFrameSizeCap
_probingLockdownTimer
_probingLockoutStartTime
_probingSequencePacketCount
_probingSequencePacketSize
_probingStartTime
_processCompleteHandler
_processID
_processId
_processedFramesCount
_productType
_profileLevel
_prominenceIndex
_prunePendingReceiveKeys
_pruneTimer
_ptime
_ptpWakeUpTime
_publishedStreams
_pullAudioSamplesCount
_pushCompletionHandler
_qualityIndex
_qualityIndexToTableEntry
_qualityIndicator
_queryProbingResultsTimer
_queue
_queueBandwidthAlgorithm
_queueDelayAlgorithm
_queueEmptyCondition
_queueFullCounter
_queueLossAlgorithm
_queueMutex
_queueNotEmptyCondition
_queueNotFullCondition
_queueProcessWaitTimeMs
_queuesForStreamTokenDict
_queuingDelayTimestamp
_radioAccessTechnology
_rampDownBWDropEnabled
_rampDownLossEventBitrateThreshold
_rampDownLossEventCountThreshold
_rampDownLossRateThreshold
_rampDownOWRDThreshold
_rampDownPacketLossRate
_rampDownRoundTripTime
_rampDownSuppressionBitrateThreshold
_rampUpFrozenDuration
_rampUpFrozenTime
_rampUpPacketLossRate
_rampUpSettleDuration
_rampUpStatus
_rampUpStatusRateLimitedThreshold
_range
_ratType
_rateAdaptationEnabled
_rateChangeCounter
_rateChangeSystemTime
_rateControl
_rateControlAlgorithm
_rateControlConfig
_rateControlCounter
_rateControlFeedbackSource
_rateControlInterval
_rateControlTime
_rateControllerDelegate
_rateControllerDelegateWeak
_rateSharingClientMap
_rateSharingCount
_readFDsForCallback
_readHandler
_readHandlerWithOptions
_readSource
_readyToReadBlock
_realRATType
_realtimeContext
_realtimeSPI
_receiveDelegate
_receiveKeys
_receiveMediaKey
_receiveTimestamp
_receiveTimestampSpikeDetected
_receiveTimestampWrappedAround
_receivedByteCount
_receivedBytes
_receivedFirstFrame
_receivedFirstPacket
_receivedFirstRemoteFrame
_receivedFrameCount
_receivedPacketCount
_receivedResponseCount
_receivedTmmbnBitrate
_receiverQueue
_receiverSframeCryptor
_receivingEndToEndStream
_recentAverageTier
_recentTierWindow
_recentTierWindowIndex
_recentTierWindowSize
_recommendedSettings
_recomputeCurrentTable
_redBuilder
_redEnabled
_redMaxDelay20ms
_redPayload
_redPayloadBufferToSend
_redPayloadToSend
_redundancyController
_redundancyControllerDelegate
_redundancyControllerMaxDelay20ms
_redundancyControllerMode
_redundancyControllerNumPayloads
_redundancyEnabled
_redundancyEnabledFor720Stream
_redundancyInterval
_redundancyPercentage
_referencePacketArrivalTime
_referencePacketDataSize
_registeredBlocksQueue
_registeredConnection
_registeredStreamTokens
_registeredUUIDServiceBlocks
_registrationLock
_reinitEncoderOnFrameSizeChangeEnabled
_relay
_relayConnectionID
_relayFormat
_relayIOType
_relayLock
_relayServerProvider
_relayThread
_relayType
_relayUpdateDict
_reliableMessageResendInterval
_remoteAddress
_remoteAlertInfo
_remoteAudioBuffer
_remoteAudioEnabled
_remoteAudioInput
_remoteAudioPaused
_remoteAudioPowerLevelMonitor
_remoteAudioQueue
_remoteBandwidthEstimation
_remoteBasebandCodec
_remoteBasebandCodecSampleRate
_remoteBlobCreationTime
_remoteBlobVersion
_remoteCallID
_remoteCallInfoBlob
_remoteCanDisplayCaptions
_remoteCodecInfo
_remoteCodecSampleRate
_remoteCodecType
_remoteConnectionData
_remoteConnectionStats
_remoteDeviceName
_remoteEndpointInfo
_remoteExpectedLandscapeAspectRatio
_remoteExpectedPortraitAspectRatio
_remoteFaceTimeSwitchesAvailable
_remoteFormat
_remoteFrameworkVersion
_remoteIDSParticipantID
_remoteIO
_remoteIOInfo
_remoteIPPort
_remoteIPPortLength
_remoteInterfaceType
_remoteLanguages
_remoteLinkFlags
_remoteLinkProbingCapabilityVersion
_remoteMediaStallDisconnectTimeout
_remoteMediaStallReconnectTimeout
_remoteMediaStallTimeout
_remoteMediaState
_remoteMediaStates
_remoteNoRemotePacketInterval
_remotePacketReceivedAudio
_remotePacketReceivedVideo
_remoteParticipantID
_remoteParticipants
_remoteParticipantsMapByServerID
_remoteParticipantsMapByUUID
_remotePreWarmStateEnabled
_remotePresentationState
_remoteQueue
_remoteRelayConnectionData
_remoteRelayRequestResponse
_remoteRelayUpdate
_remoteSSRC
_remoteScreenAttributes
_remoteScreenEnabled
_remoteScreenEnabledStateChanged
_remoteScreenLandscapeAspectRatio
_remoteScreenPortraitAspectRatio
_remoteStats
_remoteStreamGroupStateUpdateTimer
_remoteSupportsExpectedAspectRatio
_remoteSystemAudioPaused
_remoteToClientConverter
_remoteUserAgent
_remoteVideoAttributes
_remoteVideoCamera
_remoteVideoEnabled
_remoteVideoInitialOrientation
_remoteVideoMirrored
_remoteVideoOrientation
_remoteVideoPaused
_remoteWRMLinkTypeSuggestion
_removeRulesGreaterThan720p
_removeRulesGreaterThanVGA
_renderProcessTime
_reorderGap
_reorderedPacketsCount
_repairMaxNetworkBitrate
_repairMediaTable
_repairedMaxNetworkBitrate
_repairedStreamID
_reportLinkPreferSuggestion
_reportReportFrequency
_reportToken
_reportUpdateInterval
_reportedSourceSSRC
_reportingAgentStrong
_reportingAgentWeak
_reportingClientType
_reportingHierarchyToken
_reportingInterval
_reportingIntervalStartTime
_reportingIntervals
_reportingLastUpdateTime
_reportingModuleID
_reportingParentID
_reportingSSRCCount
_reportingSSRCList
_reqRespDict
_requestTimestampAndRTTList
_requestedAudioTier
_requestedSettings
_requesteeID
_requesterID
_requests
_requireEncryptionInfo
_requireTileIndexAttachment
_requiredPackedPayload
_requiresWiFi
_reservedBitrate
_resetAverageBitrateLong
_resetJ92EncodingRulesForCameraIsHD:isWVGA:is1080:
_resetMediaHealthStats
_resetSendRTPTimestampOnStop
_resolution
_retainPixelBufferEnabled
_rootQueues
_rotationAngle
_rotationSession
_roundTripTime
_roundTripTimeMilliseconds
_roundTripTimeMinEnvelope
_roundTripTimeTick
_rssiThreshold
_rtcpConnectionID
_rtcpContext
_rtcpEnabled
_rtcpEnabledBeforeInterrupt
_rtcpFlags
_rtcpHeartbeatCancelled
_rtcpIPPort
_rtcpIPPortLength
_rtcpPSFB_FIREnabled
_rtcpPSFB_LTRAckEnabled
_rtcpPSFB_PLIEnabled
_rtcpPacketsCallback
_rtcpPort
_rtcpRTPFB_GNACKEnabled
_rtcpReceiveCallbackEnabled
_rtcpReportProvider
_rtcpSREnabled
_rtcpSendHeartbeat
_rtcpSendInterval
_rtcpTimeOutEnabled
_rtcpTimeOutInterval
_rtcpTimeoutEnabledTime
_rtcpVFD
_rtcpXREnabled
_rtpConnection
_rtpConnectionID
_rtpEnabledBeforeInterrupt
_rtpEventDuration
_rtpHandle
_rtpIPPort
_rtpIPPortLength
_rtpId
_rtpPayload
_rtpPort
_rtpSSRC
_rtpSampleRate
_rtpTimeOutEnabled
_rtpTimeOutInterval
_rtpTimeoutEnabledTime
_rtpTimestampBase
_rtpTimestampRate
_rtpVideo
_rttMonitorHandlerIndex
_rules
_runLoop
_runNetworkReceiveThread
_running
_runningClient
_rxCodecFeatureListString
_rxCodecFeatureListStrings
_rxCodecType
_rxMaxBitrate
_rxMinBitrate
_rxPayloadMap
_rxPayloadType
_rxRedPayloadType
_sRecvReset
_sampleBuffer
_sampleBufferAllocator
_sampleBufferCount
_sampleBufferDelegateCallback
_sampleBufferDelegateCallbackContext
_sampleBufferDelegateCallbackLock
_sampleBufferHandler
_sampleMap
_sampleRate
_samplesPerBlock
_samplesPerFrame
_savedWRMNotification
_sbr
_sccontext
_schedulerCell
_schedulerGroups
_schedulerWifi
_screenCaptureClients
_screenCaptureDisplayID
_screenDisplayID
_screenEnabled
_screenHeight
_screenLayer
_screenPixelCount
_screenRes
_screenRuleCollections
_screenSSRC
_screenSize
_screenToken
_screenWidth
_sdpUsername
_secondaryCameraLayer
_secondaryCameraSubLayer
_secondaryConnReceivedSequenceNumberStats
_secondaryConnection
_secondaryPayloads
_secureMessagingRequired
_securityKeyHolder
_securityKeyManager
_segments
_selectedRedPayloads
_selectedSettings
_selectiveScreenUUID
_selectiveSharingPort
_sendActiveVoiceOnly
_sendBitrateLimitedStartTime
_sendBitrateStartTime
_sendDelegate
_sendGroupConfigForMode
_sendHistory
_sendKeys
_sendMediaKey
_sendTimestampSpikeDetected
_sendTimestampWrappedAround
_sendTmmbrBitrate
_senderLanguages
_senderLargeFrameInfo
_senderQueue
_sendingStreamID
_sentAudioBytesShort
_sentByteCount
_sentBytes
_sentPacketCount
_sentRequestCount
_sequenceNumberOutOfOrder
_sequentialKeyMaterialQueue
_serialQueue
_serializationQueue
_serverBag
_serverBagDict
_serverBasedConnectionStatisticsHandlerIndex
_serverIPPort
_serverLinks
_serviceName
_sessionActive
_sessionArray
_sessionDict
_sessionID
_sessionId
_sessionInfoRequestBytesUsed
_sessionInfoResponseBytesUsed
_sessionInfoSynchronizer
_sessionMessaging
_sessionMode
_sessionQueue
_sessionStartTime
_sessionStatsController
_sessionToken
_sessionUUID
_sessions
_settingsU1
_sframeCipherSuite
_sframeCryptor
_shareProfileDictionary
_sharedEstimatedBandwidth
_sharedEstimatedBandwidthUncapped
_sharedWriteCompletionHandler
_shortAverageLag
_shouldApplyRedAsBoolean
_shouldBlockRampUpForNWConnection
_shouldBlockWhenFull
_shouldConvertSourceRTPTimestamp
_shouldCreateMediaControlInfoGenerator
_shouldCreateRedundancyController
_shouldDisableLargeFrameRequestsWhenInitialRampUp
_shouldDisplayVideoInfoLayer
_shouldEnableFaceZoom
_shouldEnableMLEnhance
_shouldFinishHandshake
_shouldGenerateKeyFrame
_shouldIgnoreRTPHeaderExtensions
_shouldProcessMessageImmediately
_shouldProcessMessageOnExternalThread
_shouldRegisterMediaControlInfoGeneratorCallbacks
_shouldReportWRMMetrics
_shouldReset
_shouldResize
_shouldScheduleMediaQueue
_shouldScreenCapEncoderCount
_shouldSendFeedbackControllerReport
_shouldSendPacket
_shouldSetupNWMonitor
_shouldSetupStreams
_shouldSkipIDRScheduler
_shouldSuppressRampDown
_shouldSynchronizeWithSourceRTPTimestamps
_shouldUpdateRemoteScreenAttributes
_shouldUseExitHysteresis
_shouldUseRedAsBoolean
_shouldUseXPC
_signalStrengthBars
_signalStrengthDisplayBars
_signalStrengthMaxDisplayBars
_signalingExcessiveCellularRxBytes
_signalingExcessiveCellularTxBytes
_silenceFrameCounter
_sinkBuffer
_sinkBufferMix
_sinkContext
_sinkCount
_sinkData
_sinkDelegate
_sinkList
_sinkMutex
_sinkProc
_sinkStarted
_sipState
_siriSpatialAudioSourceID
_size
_slotsForModes
_sortedEntries
_sortedEntriesForStreamToken
_sortedMediaEntries
_sourceBuffer
_sourceContext
_sourceData
_sourceFrameCount
_sourceFramerate
_sourceIO
_sourceNames
_sourcePlayoutHandler
_sourcePlayoutHandlerLock
_sourcePlayoutSampleRTPTimestamp
_sourcePlayoutSampleSystemTime
_sourceRTPTimestampWraps
_sourceSampleRate
_sourceStarted
_sourceState
_sourceTimestampRWLock
_sourceToken
_sourceType
_sourceUID
_sources
_spatialAudioDisabled
_spatialAudioDisabledLastUpdateTime
_spatialAudioRegistered
_spatialAudioSourceID
_spatialContexts
_spatialMetadata
_spatialMetadataEntry
_spatialMetadataEntryMap
_spatialStreamDescriptions
_spatialToken
_speakerBuffer
_speakerPowerRMS
_speakerProcsCalled
_speakerTimestamp
_ssrc
_stabilizationTime
_startCompletionBlock
_startCompletionHandler
_startConnectionHealthMonitoring
_startHostTime
_startOnDemand
_startRTPTimeStamp
_startTime
_startedSessions
_startingIOClients
_startingParticipants
_state
_stateCacheForCallID
_stateCacheForStreamTokenDict
_stateLock
_stateMutex
_stateQueue
_stateRWLock
_stateRWlock
_stateStrings
_statisticChangeHandlerDictionary
_statisticChangeHandlerDictionaryCache
_statisticRegistrationIndexNWConnection
_statisticRegistrationIndexNetwork
_statistics
_statisticsArrivalTime
_statisticsCollection
_statisticsCollectionLock
_statisticsCollector
_statisticsHandler
_statisticsID
_stats
_statsArrayIndex
_statsHistory
_statsHistorySize
_statsNoResponseCounter
_statsReceiveThread
_statsRecorder
_statsReportingInterval
_statsRequestCounter
_statsResponseCounter
_stopCompletedSemaphore
_stopCompletionBlock
_stopError
_stopVTPReceiveThread
_stoppingParticipants
_streamConfig
_streamConfigs
_streamCount
_streamGroup
_streamGroupConfigs
_streamGroupConfigurations
_streamGroupID
_streamGroupIDToStreamTokenMap
_streamGroupMode
_streamGroups
_streamID
_streamIDGenerator
_streamIDToEntryTable
_streamIDToMediaStreamMap
_streamIDs
_streamIDsCell
_streamIDsWifi
_streamIndex
_streamInfoMap
_streamInput
_streamInputCaptureSource
_streamInputConfigurations
_streamInputID
_streamInputIDString
_streamInputIDToCaptureSourceIDMap
_streamInputQueue
_streamInputs
_streamLock
_streamOutput
_streamOutputDelegate
_streamOutputLock
_streamOutputSourceForStreamToken
_streamOutputs
_streamScheduleCell
_streamScheduleWifi
_streamSubscriptionLock
_streamToActualNetworkBitrate
_streamToMaxNetworkBitrate
_streamToPause
_streamToken
_streamTokenEntries
_streamTokenList
_streamTokenToEnableMap
_streamTokenToTableEntryMap
_streams
_streamsPendingKeyFrameGeneration
_strictlyUnarchivedObjectOfClasses:fromData:error:
_subStreamConfigs
_subscribedStreams
_subscribedStreamsByParticipantID
_subscribedStreamsRetryCount
_subscribedTo
_subscriptionSlot
_suddenChangeBandwidthBuffer
_suddenChangeBandwidthBufferIndex
_suddenChangeParameters
_sumOverShootSendBitrate
_sumOverUtilizedBandwidth
_sumPLRVideo
_sumUnderShootSendBitrate
_sumUnderUtilizedBandwidth
_sumWorstRecentBurstLoss
_summerHandle
_supportDuplication
_supportFlags
_supportVCPDecoderHEVC
_supportVCPEncoder
_supportVCPEncoderHEVC
_supportVCPEncoderInitialized
_supportedAudioPayloads
_supportedAudioRules
_supportedBandwidths
_supportedBitrates
_supportedCodecs
_supportedImageTypes
_supportedNumRedundantPayload
_supportedPayloads
_supportedVideoCodecs
_supportedVideoFormats
_supportsAdaptation
_supportsCodecBandwidthUpdate
_supportsDynamicMaxBitrate
_switchManager
_switches
_syncDestinationChangeEventQueue
_syncDestinationList
_syncGroupID
_syncSource
_syncTargetCalled
_syncUpdateCalled
_synchronizationDelegate
_synchronizationSourceStreamToken
_synchronizationTimeOffset
_systemAudioCaptureSession
_systemAudioConfiguration
_table
_tail
_tapSettings
_targetBitrate
_targetBitrateCap
_targetBitrateChangeCounter
_targetBitrateContinuous
_targetBitrateIsAudioOnly
_targetFramerate
_tcpTunnelClient
_telephonyInterface
_tempReceivingStats
_temporalScalingBaseLayerStreamID
_temporalScalingEnabled
_temporalStreamsIDs
_temporaryMaximumBitrate
_terminateEncoderThread
_terminationHandler
_text
_textFramesSendQueue
_textFramesSendQueueLock
_textReceiver
_textStream
_textTransmitter
_thermalPressureLevel
_throttleRate
_tierNetworkBitrate
_tierTablesForRedNumPayloads
_tilesPerFrame
_tilesPerVideoFrame
_time
_timeLastPLR5Secs
_timeoutHeartbeat
_timeoutMutex
_timeoutTimer
_timeoutTimerContext
_timeoutTimerQueue
_timeoutTimerStarted
_timer
_timestamp
_timestampInitialized
_timestampWrapAroundCounter
_tmmbRTT
_tmmbnReceiveTime
_tmmbrSendTime
_token
_tokenManager
_tokenManagerQueue
_toneInjectionEnabled
_topic
_totalActualBitrate
_totalBytesInProbingSequence
_totalBytesReceived
_totalKeyFramesSent
_totalMBLRampDownCount
_totalNumFramesProcessed
_totalNumFramesReceived
_totalPacketReceived
_totalPacketSent
_totalPacketsInProbingSequence
_totalPacketsReceived
_totalPacketsSent
_totalStatsTransportStreamQueueTime
_totalSuddenBandwidthDropCount
_totalTierNumbersInWindow
_totalTime
_totalTxAudioBytes
_transaction
_transactionDone
_transactionID
_transactionLock
_transactions
_transferSession
_transmitROC
_transmitterMode
_transmitterQueue
_transmitterSframeCryptor
_transport
_transportDelegate
_transportProtocolType
_transportSession
_transportSessionID
_transportSetupInfo
_transportStream
_transportStreamInfo
_transportType
_txBitrate
_txCodecFeatureListString
_txCodecFeatureListStrings
_txCodecType
_txInitialBitrate
_txIntervalMin
_txMaxBitrate
_txMinBitrate
_txPayloadMap
_txPayloadType
_txRedPayloadType
_type
_u1Config
_uiLayout
_uiState
_unixSocket
_unknownKeyIndexList
_updateNumber
_updateRemoteCodecInfoCallback
_updateRemoteCodecInfoContext
_upgradeQualityTiers
_uplinkAudioBitrateCapOneToOne
_uplinkBandwidthAllocator
_uplinkBandwidthAllocators
_uplinkBitrateCap
_uplinkBitrateCapCell
_uplinkBitrateCapOneToOne
_uplinkBitrateCapWifi
_uplinkClient
_uplinkCryptor
_uplinkCryptorLock
_uplinkMediaController
_uplinkMostRecentSendTimestamp
_uplinkOperatingBitrate
_uplinkRateAdaptationMaxAllowedBitrate
_uplinkRateController
_uplinkServerStatsByteUsed
_uplinkStatisticsCollector
_uplinkTargetBitrate
_uplinkVideoStreamController
_usageMode
_use96Tier
_useAverageQueueDepthForDelay
_useBTNotificationMonitor
_useChannelDataFormat
_useCompressedConnectionData
_useExternalIO
_useExternalThread
_useFigRemoteQueue
_useIDSLinkSuggestionFeatureFlag
_useInBandFEC
_useInBandFec
_useLoopback
_useLowPrecisionEchoTimeStamp
_useMediaDrivenDuplication
_useMediaDrivenDuplicationFeatureFlag
_useNWConnectionNotification
_usePacketThread
_usePreNegotiation
_useRandomTS
_useReducedSizeRTCP
_useScreenCaptureKitForAudio
_useSineWave
_useUINT16
_useVideoJitterForVideoPlayout
_useWiFiTiers
_useWifiTiers
_userAgent
_usingOptions
_usingServerBasedLinks
_utteranceComplete
_utteranceNumber
_uuid
_vadSegmentCounter
_vcMediaCallback
_vcMediaQueue
_vcMoments
_vcMomentsCollectorDictionary
_vcWifiAssist
_vcpInitializedForHEVC
_vcpSupportsHEVCEncoder
_vcrcRateController
_version
_vfdCancel
_vfdMessage
_video
_videoAttributes
_videoCapture
_videoCaptureSource
_videoCodec
_videoDegradedThreshold
_videoEnabled
_videoEncoderType
_videoFeatureStrings
_videoFeatures
_videoFlushTransactionID
_videoFrozenDuration
_videoHDRMode
_videoHeight
_videoImprovedThreshold
_videoInput
_videoIsExpected
_videoMinFrameRate
_videoNearDegradedThreshold
_videoOnlyBitrateToStreamIDsTable
_videoPacketAllocator
_videoPacketBuffer
_videoParameterSet
_videoPaused
_videoPausedToStart
_videoPayload
_videoPayloadCollections
_videoPayloadType
_videoPayloadTypes
_videoPayloads
_videoPlayerHandle
_videoPositionalInfo
_videoPriority
_videoPriorityEnabled
_videoPriorityPointer
_videoQuality
_videoQueue
_videoRTP
_videoReceiver
_videoReceiverConfig
_videoReceiverHandle
_videoRedundancyChangeEventQueue
_videoRedundancyController
_videoRedundancyPool
_videoRefreshFramePacketCount
_videoRefreshFrameTimestamp
_videoResolution
_videoRule
_videoRuleCollections
_videoSSRC
_videoSendingBitrate
_videoSettings
_videoSinkDelegate
_videoSource
_videoSourceTokens
_videoStallDurationMillis
_videoStallStartTime
_videoStreamConfigurations
_videoStreamDelegate
_videoStreamGroups
_videoStreamIdToRepairStreamIdMap
_videoStreamMode
_videoStreamReceiverQueue
_videoStreams
_videoTimestampWrapCount
_videoToken
_videoTransmitter
_videoTransmitterHandle
_videoWidth
_visibilityIndex
_visibleHeight
_visibleWidth
_voiceDetector
_vpEnableSpatialChat
_vpOperatingMode
_vpOperatingModeToAudioSessionMediaFormatMapping
_vpioFormat
_vtableC
_vtpCallbackId
_vtpCancelSocket
_vtpDestinationLength
_vtpReceiveSocket
_vtpReceiveTID
_vtpSocket
_vtpWrapper
_waitCondition
_waitMutex
_waitToBeNominated
_waitToRunSemaphore
_wakeUpCondition
_wakeUpMutex
_weakDelegate
_weakSelf
_weakStream
_weakTransactionDelegate
_weightFactor
_width
_wifiAssistState
_wifiNonAVCTxMediaBitrate
_wifiTxMediaBitrate
_withBTCoex
_worstRecentBurstLoss
_worstRecentRoundTripTime
_writeBuf
_writeDatagramBlock
_writeDatagramsBlock
_writeDirectPathIDSLock
_writeSource
_writeSourceSuspended
_writerMode
_writers
_wrmCallbacksContext
_wrmClient
_wrmClientDelegate
_wrmContext
_wrmHandler
_wrmInfo
_wrmPendingBitrateCapDelta
_wrmReportingInterval
_wrmStatusUpdateCallback
_xMBs
_xNATCheck
_xpcCallbackQueue
_xpcCommandQueue
_xpcConnection
_xpcQueue
_xpc_add_connection_to_list:
_xpc_get_connection_from_list_for_connection:
_xpc_get_connection_from_list_for_context:
_xpc_get_connections_from_list_for_context:
_xpc_handle_incoming_request:
_xpc_remove_connection_from_list:
_xpc_remove_connections_from_list
_xpc_start_listening_for_connections
_zoomAvailable
aacBitrate
aacBlockSize
abSwitches
abnormalOWRDCount
accessNetworkType
accessUnitDataSectionHead
accessUnitHeaderSectionSize
accessUnitHeaderSectionSizeMaximum
accumulateStatsForPeriodicTaskUpdate
activate
activateBackground:
activateSpatialContext:shouldApplySpatialMetadata:
activateStartingClient:applyControllerFormat:
activeConference
activeConnectionRegistry
activeControlChannel
activeDownlinkStreamIDForStreamGroupID:
activeRequestCount
activeSize
activeStreamID
activeStreamKeys
activeVideoStreams
activelyProbingLinkIDs
actualAudioChannelCountWithDefaultConfig:
actualAudioCodec
actualAudioSendingBitrate
actualBitrate
actualMaxNetworkBitrateWithDefaultConfig:
actualMaxRepairedNetworkBitrateWithDefaultConfig:
actualMetadataWithDefaultConfig:
actualNetworkBitrate
actualNetworkBitrateForStreamGroup:
actualNetworkBitrateWithAudioBitrates:
actualQualityIndexWithDefaultConfig:
actualStreamIndex
actualVideoCodec
addActiveParticipant:participantUUID:withConfiguration:
addAssertion
addAttribute:
addAudioPayload:
addAudioPayload:isSecondary:
addAudioPayload:isSecondary:sbr:
addAudioRule:
addAudioRules:
addAudioTapForStreamToken:tapType:error:
addBDCDListWithNotificationArrivalTime:bdcd:queuingDelay:
addBandwidthAllocationTableEntry:
addBandwidthAllocationTableEntry:updateNow:
addBandwidthConfiguration:
addBandwidthConfigurations:
addBandwidthSettings:
addBandwidthSettingsForMediaBlob:operatingMode:connectionType:maxBitrate:
addCallInfoBlobToParticipantInfo:
addCellularAssertion
addClient:
addCodec:
addCodecConfiguration:
addCodecModesForPayload:toCodecConfig:
addConnection:
addCustomFeatureListString:payload:
addDatagramChannelWithDescriptor:eventHandler:error:
addDatagramChannelWithDescriptor:eventHandler:writeCompletionHandler:error:
addDatagramChannelWithDestination:eventHandler:dataPath:error:
addDatagramChannelWithDestination:eventHandler:error:
addDatagramChannelWithDestination:eventHandler:writeCompletionHandler:dataPath:error:
addDelegate:
addDuplicationConnectionUpdateTelemetryWithSuggestedLinkTypeCombo:payload:
addDuplicationSelectionLogicTelemetryForConnection:suggestedLinkTypeCombo:payload:
addEntriesFromDictionary:
addFeatureString:payload:
addFrame:time:
addGKSCallEvent:sessionID:
addHDRModeSpecificSettings:
addImageAttributeRules:transportType:payload:direction:attributeString:
addInfoListWithNotification:
addInput:
addLinkProbingTelemetry:
addLocalAudioSample:timestamp:
addLocalCallInfoBlobToOutgoingDictionary:
addLocalCallInfoToInviteDictionary:
addLocalVideoSampleBuffer:cameraStatusBits:timestamp:
addMediaControlInfoOption:
addMediaHealthStatsHistoryEntryForParticipantID:
addMediaInformationAssertion:
addMediaLine:mediaType:
addMediaPacketToBuffer:length:datagramOptions:
addMediaStreamInfo:
addMultiwayAudioStream:
addMultiwayAudioStreams:
addMultiwayVideoStream:
addNSError:toConferenceXPCArgumentDictionary:
addNSError:toXPCArgumentDictionary:
addNegotiatedHDRMode:
addNewKeyMaterial:
addNewRTT:packetLossRate:timestamp:
addObject:
addObjectsFromArray:
addObserver:forKeyPath:options:context:
addObserver:selector:name:object:
addObserverForName:object:queue:usingBlock:
addOneToOneParticipant:
addOneToOneStreamConfigToMediaStreamInfo:negotiatorStreamGroupConfig:
addOptionalTopic:
addPacketToBudgetBuffer:
addParameterSet:payload:
addParticipant:controlChannelProtocolVersion:
addParticipantConfigurations:
addParticipants:
addPayload:
addPayload:audioStreamConfig:supportedAudioRules:
addPayload:rtpMap:formatParameters:
addPayloads:
addPixelFormat
addPixelFormatSet:
addPointer:
addResult:forCallID:
addRuleForBitrate:connectionType:limitingRule:
addRuleForVideoPayload:withDirection:width:height:frameRate:priority:interface:
addRxCodecFeatureListString:codecType:
addRxPayloadType:
addRxPayloadType:networkPayload:
addScreenConfigToSDP:
addSecondaryPayload:
addSecurityKeyMaterial:
addSegment:
addSegments:
addSink:
addStartingClient:controllerSettings:
addStickerWithURL:isFaceSticker:atPosition:identifier:
addStream:
addStreamConfig:
addStreamGroupConfig:
addStreamGroupID:
addStreamGroups:
addStreams:
addSubStreamConfig:
addSublayer:
addSupportedNumRedundantPayload:
addSupportedPayload:
addSyncDestination:
addSyncDestination:shouldSchedule:
addSyncSourceToVideoStreamConfig:sourceStreamToken:error:
addTableEntry:
addTelemetryForConnection:dictionary:
addTimer:forMode:
addToReceivedStats:
addToRunLoop:forMode:
addTokenWithString:confidence:range:
addTopic:associatedStrings:allowConcurrent:receiveHandler:
addTopic:associatedStrings:allowConcurrent:requireReliable:sendMessageDictionaryCompletionHandler:receiveMessageDictionaryHandler:
addTopic:associatedStrings:allowConcurrent:sendCompletionHandler:receiveHandler:
addTopic:associatedStrings:allowConcurrent:sendMessageDictionaryCompletionHandler:receiveMessageDictionaryHandler:
addTxCodecFeatureListString:codecType:
addTxPayloadType:
addTxPayloadType:networkPayload:
addUUIDToMutableData:fromUUIDString:
addVideoConference:
addVideoImageAttr:ForPayload:
addVideoPayloadCollections:
addVideoRuleCollections:
addVideoRules:encodingType:payload:videoRuleCollections:
addVideoRules:transportType:payload:encodingType:
addWifiRules:cellularRules:payload:direction:
additionalFlushCountToOneToOneRateController:
addressPointerFromBlob:
adjustBitrateForConnectionType
adjustFaceBounds:fromOriginalBufferSize:toCroppedBufferSize:
adjustFaceMetadataForPixelBuffer:originalWidth:originalHeight:
adjustInfoSubLayerBounds:forSuperLayer:
afrcHandle
afrcRemoteEstimatedBandwidth
agentDomain
agentFromData:
agentType
aggregateStallTimeDuration:idsParticipantID:
alertStateUpdated:isLocal:
allAudioTiers
allCalls
allKeysForObject:
allObjects
allParticipantStreamInfo
allPayloadsLocalFeaturesString
allPossibleCombinations:supportedPacketsPerBundle:redNumPayloads:headerSize:tierPickerMode:usingCellular:useCaseWatchContinuity:
allSinksSuspended
allValues
allocDeviceControlListAndSize:
allocDispatchedStreamOutputWithStreamToken:clientPid:options:errorCode:
allocEncryptedPayloadFromPayloadData:
allocFrameWithPacket:data:dataLength:timestamp:
allocMessageFromPayload:forTopic:participantID:
allocPayoadDataFromVTPPacket:vpktFlags:channelDataFormat:
allocStreamOutputWithStreamToken:clientPid:options:errorCode:
allocTextFrame
allocWithZone:
allocateBundleBuffer:
allocateLastInputSampleBuffer:
allocationResponseHandler
allowAudioRecording
allowAudioSwitching
allowDuplication
allowDynamicMaxBitrate
allowLargePackets
allowRTCPFB
allowRampUpWithContinuousTargetBitrate
allowRecording
allowSwitching
allowVideoStop
allowedBitratesForPayload:supportedBitrates:supportedBandwidths:
allowsContentsChangeWithAspectPreservation
allowsDynamicMaxBitrate
allowsRelay
alwaysOnAudRedEnabled
alwaysOnAudioRedundancyEnabled
amplitude
anbrEnabled
anchorStreamIDWithCappedVideoStreamIDs:
answer
anyObject
appendAudioSampleBuffer:mediaType:
appendBandwidthSettingsToMediaBlob:
appendBytes:length:
appendCameraOneToOneSettingsToMediaBlob:
appendConfigurationToXPCArguments:
appendConfigurationToXPCConfiguration:
appendContextToDictionary:forConnection:
appendData:
appendEntry:streamTokenEntries:currentNetworkBitrate:shouldUseRepairBitrate:screenEncoderGroups:
appendFieldName:codecs:outString:
appendFormat:
appendGeneralInfoToMediaBlob:
appendMetaData
appendMetadata:toString:
appendMicrophoneOneToOneSettingsToMediaBlob:
appendMomentsSettingsToMediaBlob:
appendOptedInStreamID:toOptInStreamsIDs:targetBandwidthEntry:forceSeamlessTransition:
appendPIDToDictionary:pid:
appendPayload:dimensions:direction:attributeString:
appendPayloadsSpecsToString:streamConfig:
appendPayloadsToString:streamConfig:
appendSampleBuffer:
appendSampleWithWriter:buffer:sample:
appendStreamGroup:maxBitrate:mediaEntries:
appendStreamGroupsToMediaBlob:
appendStreamsToStreamGroupConfig:streamGroupID:rtpSampleRates:
appendString:
appendTimedMetadataGroup:
appendVideoRules:transportType:payload:encodingType:
appendVideoSampleBuffer:cameraStatus:mediaType:
applyAudioSessionMute
applyCachedAlgorithmConfig:
applyCachedMediaStreams:toMultiwayConfig:
applyCachedMediaStreamsWithStreamConfigurations:mediaNegotiatorConfig:
applyCachedStreamGroupMediaStreams:toMultiwayConfig:
applyCellularPreferredRule:
applyChannelBins:binCount:
applyChannelBins:binCount:channelID:
applyCipherSuiteOnMediaStreamConfig:codecConfigs:
applyConfigurationUsingClientDict:
applyFeatureListStringForPayload:
applyLinkConstrains:
applyLinkFlags:isCellular:
applyLinkRecommendation
applyMediaState:forMediaType:
applyMediaStreamClientDictionary:
applyNegotiatedAudioSettings:
applyNegotiatedMomentsSettings
applyNegotiatedOneToOneFaceTimeSettings
applyNegotiatedSettings
applyNegotiatedVideoSettings:
applyNegotiationRulesUsingLocalSwitches:negotiatedSwitches:
applyRemoteLinkConstrains:
applyRemoteLinkFlags:isCellular:
applyScreenEnabledSetting:
applyServerBagEmergencyTierConfig:
applyServerBagGroupConfig:
applyServerBagLossBasedAdaptationConfig:
applyServerBagMainControlConfig:
applyServerBagNoRampUpGroupConfig:
applyServerBagNotificationGroupConfig:
applyServerBagOscillationAvoidanceConfig:
applyServerBagPauseResumeConfig:
applyServerBagProfileConfig:
applyServerBagRampDownGroupConfig:
applySessionContextToAudioUnitProperties:preferredClient:
applySpatialMetadata
applySpatialMetadata:
applyVideoEnabledSetting:
applyVideoNegotiatedSettings:toStreamConfiguration:withFeatureStringDictionary:
applyVideoStreamClientDictionary:
archiveMediaStates:
archivedDataWithRootObject:requiringSecureCoding:error:
areAllLinkProbingTriggersInactive
areCodecsEqualTo:
array
arrayByAddingObject:
arrayWithCapacity:
arrayWithObject:
arrayWithObjects:
arrayWithObjects:count:
arrivalTime
aspectRatioLandscape
aspectRatioPortrait
aspectRatioPortrait:aspectRatioLandscape:orientationMismatchAspectRatioLandscape:orientationMismatchAspectRatioPortrait:screenSize:
aspectRatioPortrait:landscape:isMismatchedOrientation:
assetWriterInput
associateMKI:withClientID:
associatedStrings
attributes
attributesOfFileSystemForPath:error:
attributesOfItemAtPath:error:
auNumber
audio
audioBundler
audioChannelCount
audioChannelCountForMode:
audioChannelIndex
audioCodecBandwidthForVCAudioCodecBandwidth:
audioCodecBitrate
audioCodecTypeForPayload:
audioConfig:supportsDeviceClass:
audioConfiguration
audioDumpEnabled
audioEnabled
audioFeatures
audioFileName
audioFormat
audioFractionTier
audioGroup
audioIOConfigWithAudioType:realtimeContext:
audioIODirectionWithMediaStreamDirection:
audioIOFormat
audioIOSampleRate
audioIOTypeForMode:
audioIOTypeFromTapType:
audioIsPaused
audioIssueDetectorCreateAndConfigure
audioIssueDetectorEnabled
audioIssueDetectorStopAndFinalize
audioLowPowerTimeInterval
audioMediaControlInfoGenerator
audioMuted
audioOnlyBitrateToStreamIDsTable
audioPacketLossConcealmentAlgorithmAACELD
audioPaused
audioPayloadTypes
audioPayloads
audioPosition
audioPowerMovingAverageCoefficient
audioPowerSpectrumMeter:didUpdateAudioPowerSpectrums:
audioPowerSpectrumSinkDidRegister
audioPowerSpectrumSinkDidUnregister
audioPowerThreshold
audioPriorityDecayFast
audioPriorityDecaySlow
audioPriorityRampUpSpeed
audioQueue
audioRTCPPort
audioRTPID
audioRTPPort
audioReceiver
audioReceivingBitrateKbps
audioRecordingEnabled
audioRuleCollectionWithAudioConfig:supportedAudioRules:
audioRuleCollectionWithAudioStreamConfig:
audioRules
audioRulesNegotiated
audioSendingBitrate
audioSessionID
audioSessionId
audioSettings
audioStreamConfigurations
audioStreamGroupConfig
audioStreamModeWithMediaStreamMode:
audioStreams
audioTapSessionTypeForInternalSessionType:
audioTierAudioCodecBitrate
audioTierNetworkBitrate
audioTierPacketsPerBundle
audioTierPayload
audioTierRedNumPayloads
audioTransmitter
audioTransmittingBitrateKbps
audioTxBitrate
audioTypeForCaptureSource:
audioUnitModel
audioUnitType
audioVersionInfo:
audioVideoBitrateToStreamIDsTable
audioVoiceDetectionSensitivity
authorizedTokenData
autorelease
avConferencePreviewError:
avConferencePreviewNotificationQueue
avConferencePreviewQueue
avail
avcLayoutWithLayout:
avcMomentsCapabilitiesForMultiwayMomentsCapabilities:
avcMomentsRequestDidEndRequest:withError:
avcMomentsRequestDidRejectRequest:withError:
avcMomentsRequestDidStartRequest:withError:
avcPositionalInfo
avcSessionPresentationInfo
avcUIStateWithUIState:
avcVideoFrameDidRelease:
averagePacketDelayMs
averageReceivedBitrate
averageThroughputBps
awdCallNonce
bBWEstActiveProbingSenderLog
bBWEstNewBWEstModeEnabled
bBWEstOperatingModeInitialized
backingBufferAllocator
bandwidth
bandwidthConfigurationWithOperatingMode:connectionType:
bandwidthConfigurations
bandwidthDownstream
bandwidthEstimationDumpEnabled
bandwidthEstimationState
bandwidthSettings
bandwidthSettingsAtIndex:
bandwidthSettingsCount
bandwidthSettingsType
bandwidthUpstream
base64EncodedDataWithOptions:
baseNetworkBitrateSplitForTargetBitrate:baseNetworkBitrate:
basePeriodMs
basebandAdaptationEnabled
basebandAdditionalTiersForRampUp
basebandAverageBitrate
basebandCodec
basebandCodecSampleRate
basebandCodecType
basebandCongestionDetector
basebandExpectedQueuingDelay
basebandFlushCount
basebandFlushedAudioCount
basebandFlushedVideoCount
basebandNotificationRegistrationToken
basebandQueueDepth
basebandTxBitrate
bdatGroupDisabled
bdatOldGroupDisabled
begin
beginPIPToPreviewAnimation
beginParticipantConfiguration
beginPreviewToPIPAnimation
bestCameraCaptureFrameRate
bestVideoRuleForEncodingType:aspectRatio:
bestVideoRuleForEncodingType:aspectRatio:payload:
bindingResponseHandler
bins
bitrateConfiguration
bitrateForAMRCodecMode:
bitrateForAMRWBCodecMode:
bitrateForCodecType:mode:
bitrateForEVSCodecMode:
bitrateForStoreBagKey:connectionType:currentBitrate:isExpensive:
bitrateIsAudioOnly
bitrateKbps
blobCapabilitiesWithOneToOneCapabilities:multiwayCapabilities:
blobVersion
block
blockSize
blocksRelayedCount
boolValue
booleanValueForKey:
booleanValueForKey:defaultValue:
bounds
broadcastCellTechChange:cellularMaxPktLen:
broadcastInitialMediaState
broadcastMediaStateUpdateMessage
broadcastMessage:withTopic:
broadcastMessageDictionary:withTopic:
broadcastMessageDictionary:withTopic:toVersion:
broadcastSingleStateMessage:withTopic:
budgetConsumingCellularRxBytes
budgetConsumingCellularTxBytes
budgetInCaptureFrames
buildRedPayloadWithPrimaryPayload:redPayloads:
bundleAudio
bundleAudioLegacy:numInputBytes:payloadType:timestamp:
bundleAudioRFC3640:numInputBytes:payloadType:timestamp:
bundleBufferSizeWidthMaxPacketSize:maxPacketCount:
bundleHeaderBytes
bundledPackets
bundlingAppliedByCodecForPayload:mode:
bundlingScheme
bundlingSchemeForAudioStreamMode:payloadType:
bweOperatingModeInitialized
bytes
bytesPerFrame
cName
cStringUsingEncoding:
caLayerBack
caLayerFront
cacheNATFlags:forNetwork:
cacheOutgoingMessage:topic:timeout:withOptions:
cacheRemoteVideoFrame:
calculateBitratesAndDelaysWithTotalQueueDepth:
calculateCongestionMetricsFromOWRD:time:
calculateCongestionMetricsFromOWRDList:owrd:time:config:isInitialRampUp:
calculateExpectedTotalNetworkBitrateDownlink
calculateExpectedTotalNetworkBitrateUplink
calculateInterCallbackDurationWithTime:
calculateMixingArrays:talkingMask:
calculateNOWRD:time:
calculateNOWRDAccWithOWRDList:config:
calculateNOWRDShortWithOWRDList:config:isInitialRampUp:
calculateNOWRDWithDuration:owrdList:historySize:minHistorySize:initalRampUpReadyDuration:isInitialRampUp:
calculateNOWRDWithOWRDList:config:isInitialRampUp:
calculateOWRDWithSendTime:receiveTime:roundTripTime:
calculateOWRDWithTimestamp:sampleRate:time:
calculatePacketLossWithReceivedPacketCount:receivedPacketCountVideo:packetBurstLoss:packetLossSample:
calculateRoundTripTimeWithSample:
calculateSIPEndAction:currentState:error:
calculateSummmaryNATType:andCarrierNATType:andNonCarrierNATType:copyInterfaceInfoDictionary:
calculateTalkingMaskAtTimeStamp:
calculateUplinkTotalBitrateForMediaStreams:
calculateVisibleAreaWithVisibleRect:cameraStatusBit:
calculateWiFiNonAVCTxBitrateWithStatistics:
callAlarmsWithRTPTimeStamp:
callCommNATTestFromIPPort:ipv6Prefix:
callDelegateWithBlock:
callHTTPTestFromIPPort:ipv6Prefix:ToServer:isSSL:
callID
callIDForOpenSessionWithParticipantID:
callInfoBlob
callLogFile
callMetadata
callMetadataForCallID:
callSessionBitrate
callSessionBitrateArbiter
callStateForCallID:
callStreamDelegateWithBlock:
callback
callbackBlock
callerPreEmptiveTimeoutInSecs
camera
cameraAvailabilityDidChange:
cameraCFramingAvailabilityDidChange:
cameraCinematicFramingAvailabilityDidChange:
cameraDidBecomeAvailableForUniqueID:
cameraDidBecomeInterruptedForForUniqueID:reason:
cameraGroups
cameraStreamInfo
cameraU1
cameraUIDForVideoAttributeCamera:
cameraVideoStablization
cameraZoomAvailabilityDidChange:
cameraZoomAvailabilityDidChange:currentZoomFactor:maxZoomFactor:
canBundleExternallyForPayload:forBundlingScheme:operatingMode:
canDecodeHD
canDequeue:forTimestamp:
canDisplayCaptions
canDo1080p
canDoHEVC
canDoHiDefDecoding
canDoHiDefEncoding
canLocalResizePIP
canNegotiateVideoPayload:supportedPayloads:isLocalOnCellular:isRemoteOnCellular:
canOptOutAllStreamsForConnection:
canRemoteResizePIP
canSendSIPInviteWithError:
canSetBitrateForPayload:
canSetDirection:
canSetPropertyWithError:
canUseP2PLinks
cancelAndReleaseFetchTimer
cancelCallID:
cancelCallID:error:
cancelConnectionTimeoutTimer
cancelFirstRemoteFrameTimer
cap2G
cap3G
cap5G
capDefaultValues:
capLTE
capabilities
capabilitiesBitmapWithCapabilities:
capabilitiesForCallID:
capabilitiesMultiway
capabilitiesOneToOne
capabilitiesWithBlobCapabilities:
capacity
cappedVideoQualityWithShouldLimitCameraQualityForPIP:
caps
captionsCoordinator
captionsGroup
captionsReceiverLanguages
captionsSenderLanguages
captionsSettings
captionsSource
captionsSourceFromClientContext:
captionsSupported
captureAsFocusClient:
captureCapabilities
captureConfigForScreenShare
captureController
captureEncodingSize
captureFrameRate
captureFramerate
captureMeshMode:
captureServer
captureServerConfigForAudioConfig:forClient:
captureSource
captureSourceCenterStageEnabledDidChange:
captureSourceForSystemAudioCaptureControllerConfig:
captureSourceForTypePreSpatialSessionType:
captureSourceForTypeProcessID:
captureSourceIDFromStreamGroupConfig:
captureSourceIDFromStreamGroupID:
captureSourcePortraitBlurEnabledDidChange:
capturedPixelBuffer:depthBuffer:time:imageData:toClient:
capturedPixelBuffer:depthDataPixelBuffer:time:imageData:
carrierBitrateCap
caseInsensitiveCompare:
cellBandwidth
cellPrimaryInterfaceChangeEnabled
cellTechChangeSource
cellTechForSoMask:fallbackTo:
cellTechQueue
cellularAllowRedLowBitratesEnabled
cellularAssertionActive
cellularMTU
cellularTapTypeWithClientCellularTapType:
cellularUniqueTag
centerStageEnabledDidChange:
changeListener
channelAwareOffset
channelCount
channelIndex
channels
channelsPerFrame
characterAtIndex:
characterSetWithCharactersInString:
chatMode
checkAbnormalNetworkCondition
checkAbnormalOWRDAndResetLagReference
checkActivelyRequestWRMRecommendation:isLocalUsingCellular:
checkActualBitrates
checkAndInsertRuleWithWidth:height:framerate:payload:priority:negotiationBitfield:negotiationBit:rules:isCellular16x9Capable:
checkAndReportAbnormalSymptoms
checkBandwidthOvershootWithRemoteBandwidthEstimation:
checkCongestionStatus
checkDecryptionTimeoutAgainstTime:decryptionErrorStartTime:
checkDecryptionTimeoutForMKMRecoveryAgainstTime:decryptionErrorStartTime:
checkEffectsHealth
checkEncoderSupportForCodecType:
checkEncoderSupportForConfig:
checkForCachedWRMNotification
checkForDecryptionTimeout
checkForExtendedPoorConnection
checkForRedundancyFreeze:
checkForSignificantHandshakeDelayWithDelegate:
checkMediaQualityDegradedForParticipantID:
checkMediaQueueBitrates
checkNetworkSaturationWithRoundTripTime:minRoundTripTime:packetLossRate:owrd:
checkNumChannels:
checkOffChannelActivityWithStatistics:
checkPaused
checkRTCPPacketTimeoutAgainstTime:lastReceivedPacketTime:
checkRTPPacketTimeoutAgainstTime:lastReceivedPacketTime:
checkRampUpSettlingStatus
checkStabilizationWithEchoedTimestamp:queuingDelay:
checkSubscribedStreamsConsistency:
checkSubstreams:forLowerQualityIndex:
checkTargetBitrateOscillation
checkVCIDSSessionInfoNeedUpdate:
checkWRMSuggestionDefaultValue
checkinWithTimeout:forTask:
checklocalRATTypeOverrideDefaultValue:
checkout
checkpointPrimaryConnection:
chipId
chooseAudioNetworkBitrate
chooseDTXPayloads:
chooseMultiwayAudioTierForRedPayload:
choosePayload:
chooseSecondaryPayloads:
chooseVideoPayload:operatingMode:isLocalOnCellular:isRemoteOnCellular:
chosenAudioPayload
chosenDTXPayload
chosenRedPayloadType
cipherSuite
cipherSuiteWithClientCipherSuite:
cipherSuiteWithNegotiationCipherSuite:
class
className
cleanUpDisplayLink
cleanUpOneToOneVideoStreamDelegate
cleanUpVideoReceiver
cleanUpVideoTransmitter
cleanupActiveRequests
cleanupAudio
cleanupAudioPowerSpectrumSinks
cleanupBeforeReconfigure:
cleanupControlChannelParticipantConfig:
cleanupDatagramChannel
cleanupDictionaries
cleanupIOEventQueues
cleanupInterruptThread
cleanupLayerHost
cleanupManager
cleanupMedia
cleanupMutedTalkerNotificationHandler
cleanupNWConnection:
cleanupNwActivity
cleanupOneToOneDelegates
cleanupOneToOneMediaQueue
cleanupOneToOneVideoReceiverDelegate
cleanupOutputThread
cleanupPowerSpectrumMeter
cleanupPowerSpectrumSetForCellularTapType:
cleanupPowerSpectrumSource
cleanupProc:
cleanupQueue:
cleanupQueues
cleanupRateControllerOneToOne
cleanupRedundancySettings
cleanupSecureMicrophoneEngagedHandler
cleanupSession:withDelay:
cleanupSinkEntry:
cleanupSpatialAudio
cleanupSpatialAudioForCallID:
cleanupStreamInputs
cleanupStreamOutput
cleanupStreamOutput:
cleanupStreamTokenEntries:currentNetworkBitrate:isRedundancyEnabled:screenEncoderGroups:
cleanupStreams
cleanupSubLayerForMode:
cleanupSyncDestinations
cleanupTransferSession
cleanupVCRC
cleanupVTP
cleanupVideoLayerForAllModes
cleanupWCMClient
cleanupWRMClient
cleanupWRMData
cleanupXPCConnection
clearAllSettingsWithRefreshIntervalInSeconds:
clearAllStickers:
clearBagWithRefreshIntervalInSeconds:
clearBandwidthSettings
clearHistoryBuffer
clearMediaInformationAssertion
clearMultiwayAudioStreams
clearMultiwayVideoStreams
clearOneofValuesForContent
clearPayloads
clearRetries
clearSegments
clearSendHistory
clearStreamGroups
clearStreams
clearTransactionCacheForParticipant:
clearVideoPayloadCollections
clearVideoRuleCollections
cleaunpReceiverConfig:
client
client:didActualNetworkBitrateChangeForStreamGroupID:
clientAccessNetworkType:
clientCaptureRule
clientCipherSuiteWithCipherSuite:
clientCodecBandwidthMaskForCodecBandwidth:
clientCodecRateMaskForCodecRateMode:
clientCodecRateModeForCodecRateMode:
clientCodecTypeWithCodecType:
clientConnections
clientConnectionsQueue
clientContextList
clientDownlinkPowerMovingAverage
clientFormat
clientIO
clientPID
clientPid
clientProcessDiedWithXPCArguments:result:error:
clientSessionModeWithSessionMode:
clientStreamDirectionWithDirection:
clientTargetBitrate
clientTargetBitrateCap
clientToRemoteConverter
clientUplinkPowerMovingAverage
clientVersion
clientVideoCaptureSourceFromCaptureSource:
clientVideoResolutionFromResolution:
clientVideoStreamModeFromVideoStreamType:
clientWantsPreview
closeConnectionToServer
closeTunnelSocket
cnEnabled
cnPayloadType
cname
code
codecBandwidthForPayload:
codecBandwidthMask
codecBandwidthMaskForClientCodecBandwidth:
codecBitmapForPayloads:
codecConfigs
codecConfigurations
codecModesForAMR16kHz
codecModesForAMR8kHz
codecModesForEVS16kHz
codecModesForEVS32kHz
codecModesForEVS8kHz
codecRateMaskForClientCodecRateMode:
codecRateModeForClientCodecRateMode:
codecRateModeForDesiredANBR:payload:supportedBitrates:supportedBandwidths:
codecRateModeMask
codecSamplesPerFrameForPayload:blockSize:
codecSupport
codecType
codecTypeForPayload:
codecTypeWithClientCodecType:
codecTypeWithNegotiationCodecType:
codecs
collectAndLogChannelMetrics:
collectAndLogChannelMetrics:averagePower:
collectAudioChannelMetrics:
collectChannelSequenceMetrics:
collectImageQueuePerformanceMetrics:
collectRxChannelMetrics:
collectRxChannelMetrics:interval:
collectSessionEventKeyFields:eventType:withParticipant:keyChangeReason:newMKI:withStreamID:
collectTxChannelMetrics:
collectVideoChannelMetrics:
collectVideoConfigMetrics:
colorInfo
commit
common
compare:
compare:isPrimary:selectionPolicy:
compare:options:
compare:options:range:
compareAudioEntry:audioEntry:
compareAudioEntry:videoEntry:
compareBudget:
compareByPref:
compareConnectionTypePriority:selectionPolicy:
compareE2EPriority:selectionPolicy:
compareInterfacePriority:isPrimary:
compareIpVersionPriority:selectionPolicy:
compareVideoAspectRatioSizeA:toSizeB:
compareVideoEntry:videoEntry:
compareVpnPriority:selectionPolicy:
compareWeightFactor:
completeAndReleaseNwActivity:withReason:
completeAudioEnabled:didSucceed:error:
completeAudioPaused:didSucceed:error:
completeScreenEnabled:didSucceed:error:
completeSetMediaState:forMediaType:didSucceed:error:
completeStartForAllStartingClients
completeStreamSetup:
completeTransitionToOneToOneEnabled:
completeVideoEnabled:didSucceed:error:
completeVideoPaused:didSucceed:error:
completionHandlerOneToOneEnabled:didSucceed:
componentsJoinedByString:
componentsSeparatedByString:
composeAudioFMTPForPayload:
composeAudioString
composeBandwidthString
composeControlChannelParticipantConfig:withRemoteParticipant:
composeFLSString
composeSessionString
compoundStreamIDs
compressWithConfig:
computeAllowAudioRecordingWithPreferredClient:
computeBasePeriod
computeCaptureFramerate
computeConversationTimeBaseTruncated
computeDecodingScore
computeEncodingScore
computeFormatDescription:withPreferredClient:
computeGcdForX:y:
computeGroupList
computeHardwarePreferences
computeMaxNetworkBitrate:maxMediaBitrate:maxPacketsPerSecond:audioStreamIndex:internalPacketsPerSecond:
computeMaxNetworkBitrate:maxMediaBitrate:maxPacketsPerSecond:maxIDSStreamIDCount:internalPacketsPerSecond:audioConfig:
computeMaxScreenCaptureSize
computeNWConnectionDelayThresholdForRampDown:
computeNetworkDelay
computeNetworkServiceRate
computeNextTimoutWithEnabledTime:timeoutInterval:lastReceivedPacketTime:currentTime:lastTimeoutReportTime:
computePacketLossWithRemoteInfo:
computePacketTimestampWithInputTimestamp:numSamples:hostTime:
computeRedundancyInfo
computeRedundancyWithLossPercentage
computeResolutionForMainDisplayWithMaxScreenPixelCount:
computeSamplePerFrameWithControllerSampleRate:
computeSamplePerFrameWithPreferredClient:sampleRate:
computeScheduleItemList
computeSchedulerItemList
computeSchedulerItemsBudget
computeSchedulerItemsPosition
computeStreamsIDRPosition
computeVisibleAspectRatioWithRemoteScreenAspectRatio:remoteExpectedAspectRatio:encodeWidth:encodeHeight:
conference:cancelRelayRequest:requestDict:
conference:closeConnectionForCallID:
conference:didChangeLocalVariablesForCallID:
conference:didReceiveARPLData:withCallID:
conference:didReceiveData:forCallID:
conference:didStartSession:withCallID:error:
conference:didStartSession:withUserInfo:
conference:didStopWithCallID:error:
conference:didStopWithCallID:error:callMetadata:
conference:inititiateRelayRequest:requestDict:
conference:isRemoteAudioBelowThreshold:
conference:localAudioEnabled:forCallID:error:
conference:localIPChange:withCallID:
conference:receivedFirstRemoteFrameForCallID:
conference:reinitializeCallForCallID:
conference:remoteAudioEnabled:forCallID:
conference:remoteAudioPaused:callID:
conference:remoteCallingModeChanged:forCallID:
conference:remoteScreenAttributesChanged:callID:
conference:remoteVideoAttributesChanged:callID:
conference:remoteVideoPaused:callID:
conference:sendRelayUpdate:updateDict:
conference:updateInputFrequencyLevel:
conference:updateInputMeterLevel:
conference:updateOutputFrequencyLevel:
conference:updateOutputMeterLevel:
conference:videoQualityNotificationForCallID:isDegraded:isRemote:
conference:withCallID:didPauseAudio:error:
conference:withCallID:didPauseVideo:error:
conference:withCallID:isSendingAudio:error:
conference:withCallID:networkHint:
conference:withCallID:remoteMediaStalled:
conferenceCaptureRule
conferenceForCallID:
conferenceForParticipantID:
conferenceForSourceDestinationInfo:
conferenceID
conferenceMatchesSourceDestinationInfo:
conferenceOperatingMode
conferenceVolume
conferenceWithMic
confidence
config
configForPayloadType:
configWithQualityIndex:nwBitrate:mediaBitrate:maxPacketsPerSecond:repairedNwBitrate:keyFrameInterval:framerate:rtpSampleRate:isTemporal:isSubStream:metadata:payloads:codecs:width:height:audioChannelCount:streamIndex:coordinateSystem:
configuration
configurationAsString:
configurationExtension
configurationInProgress
configurationSpecificReportingServiceName
configurationWithSessionMode:
configure:
configure:error:
configure:restartRequired:
configureAlgorithmWithRestart:
configureAudioIOWithDeviceRole:operatingMode:
configureAudioJBAlgos:
configureAudioStreams:deviceRole:operatingMode:
configureCaptions:
configureInProcess:error:
configureInternal:
configureLegacyTransportWithInviteInfo:error:
configureLocalParticipantWithOneToOneRemoteParticipant:isInitialConfiguration:
configureMultiwayStreamGroups
configureNWConnectionMonitor:
configureNetworkSampleRateScaleForStream:transport:
configureOneToOneAudioStreamsWithDeviceRole:
configureOneToOneAudioStreamsWithDeviceRole:streamInfoArray:
configureOneToOneRateController:isUsingCamera:isUsingScreen:
configureOneToOneReportingOnVideoEnabled
configureOneToOneVideoStreamsWithDeviceRole:
configureOneToOneVideoStreamsWithDeviceRole:streamInfoArray:
configureOneToOneWithConfig:
configureOutOfProcess:error:
configureParamatersForStreamType:socket:packetType:remoteIP:remoteIPLength:
configurePowerSpectrumSource
configureRateController
configureRateControllerWithConfig:
configureRemoteParticipant:withConfig:
configureRemoteParticipantForOneToOne:
configureStreamInfosForMultiway:streamGroupID:
configureStreamInputCaptureSourceWithStreamInputID:frameRate:
configureStreams
configureStreams:withRateControlConfig:
configureVCRateControlAlgorithmWithConfiguration:
configureWithBuffer:length:optionalControlInfo:
configureWithDeviceRole:negotiatedVideoEnabled:negotiatedScreenEnabled:operatingMode:
configureWithOneToOneParticipantConfig:operatingMode:
configureWithOneToOneParticipantConfig:shouldConfigureGFTStreams:
configureWithOperatingMode:isLocalCellular:localCellTech:isRemoteCellular:remoteCellTech:bitrateCapKbps:isTrafficBursty:featureFlags:
configureWithStreamConfig:setupInfo:reducedSizeRTCPPackets:hopByHopEncryptRTCPPackets:statisticsCollector:basebandCongestionDetector:error:
confirmTransaction:
confirmedTransactionByParticipantID:sessionID:
conformsToProtocol:
congestionDetector
connectFrom:
connectLayer:withSlot:
connectSocket:remoteAddress:storage:
connectTo:
connectedLinks
connectedPeers
connectedSocketWithIPAddress:srcPort:error:
connection
connectionAttempts
connectionBlobForParticipantID:callID:block:queue:caller:
connectionBlobForParticipantID:callID:error:
connectionCallback:isInitialConnection:
connectionChangeQueue
connectionChangeState
connectionContext
connectionData:connectionDataSizeInBytes:shouldUseRelay:
connectionDataUsingRelay:isInitialRelay:nonCellularCandidateTimeout:error:
connectionDidChangeWithLocalInterfaceType:remoteInterfaceType:streamToken:
connectionForDuplication
connectionForDuplicationNonProbingVersion
connectionForQualityInternal:
connectionHealthDidUpdate:isLocalConnection:
connectionHealthMonitor
connectionId
connectionMTU
connectionManager
connectionPersists
connectionQRSessionID
connectionResult
connectionResultCallback:didReceiveICEPacket:didUseRelay:secretKey:skeResult:
connectionSetupPiggybackBlob
connectionSetupRTTEstimate
connectionStatsStreamID
connectionTimeoutSource
connectionType
connectionTypeForConnectionResult:
connectionTypeString
connectionUUID
connectionWithIDSDestination:
connectionWithIDSSocketDescriptor:
connectionWithSocket:
connectionWithSocket:remoteAddress:
connectionWithSocket:remoteAddress:packetFilter:
connections
constructDTMFEventPacketWithEvent:volume:durationCounter:dataBuffer:isEnd:
constructPacket:datagram:datagramSize:datagramOptions:
containsAllSecondaryKeysWithPrimaryKey:
containsObject:matchingComparison:
containsStreamWithIDSStreamID:
containsStreamWithSSRC:
containsValueForKey:
contentAsString:
contentsOfDirectoryAtPath:error:
contentsRect
contextIdForStreamTokenWithArguments:error:
controlChannel
controlChannel:clearTransactionCacheForParticipant:
controlChannel:receivedData:transactionID:fromParticipant:
controlChannel:receivedMessage:transactionID:fromParticipant:
controlChannel:sendReliableData:didSucceed:toParticipant:
controlChannel:sendReliableMessage:didSucceed:toParticipant:
controlChannel:topic:payload:transactionID:fromParticipant:
controlChannelVersion
controlChannelWeak
controlInfoGenerator
controller:didChangeActiveVideoStreams:
controllerForDeviceRole:audioType:direction:operatingMode:streamInputID:streamToken:networkClockID:
controllerFormat
controllerFormatChanged:
conversationID
conversationTimeBase
conversationTimeBaseTruncated
convertAndScalePixelBuffer:toWidth:toHeight:withPixelFormat:usingPixelBufferPool:andStoreTo:
convertBlobtoNewBlob:
convertBlobtoOldBlob:
convertData:toEncryptedData:encrypted:
convertEncryptedData:toData:encrypted:
convertPixelBuffer:toImageType:withAssetIdentifier:cameraStatusBits:allowTimeMetaData:
convertString:toFourcc:
convertVideoFormat:width:height:
coordinateSystem
copy
copyAWDLChannelSequence:twoPtFourGhzChannelCount:fiveGhzChannelCount:dfsChannelCount:inactiveSlotCount:
copyAgentData
copyConnection
copyConnectionForQuality:
copyConnectionWithSourceDestinationInfo:isPrimary:
copyDecryptedDataFromEncryptedPayload:
copyDelegate
copyDialogForParticipantID:
copyEncodedDictionary
copyGKSDeep
copyGKSDeepMutable
copyItemAtURL:toURL:error:
copyMKMWithPrefix:
copyNatTypeCache
copyNatTypeCachePlistScheme
copyObjectForKey:p2pID:
copyOnVideoFrameBlock
copyPacketFromPop
copyResultForCallID:
copyStreamIDArray:length:
copyStringValueForKey:
copyWithZone:
copyXpcSenderQueue
coreMotionManagerDelegate
count
countByEnumeratingWithState:objects:count:
countDeviationChangeInTierWindow
countForRequestType:
countOfLowPrioritySamples
countRateControllersForInterfaceType:
createAllocators
createAndAddRemoteQueueToXPCDictionary:
createAndConfigureVFDForSocket:packetType:remoteIP:remoteIPLength:vfd:
createAndResumeFetchTimer
createAndStartListener:withParameters:
createAnswer
createAudioBufferPool
createAudioBuffers
createAudioReceiver
createAudioTransmitter:
createAudioTransmitter:streamIDs:
createBWEDumpFile:
createBasebandLogDumpFile
createBuffersForIOContext:
createCALayerHostForRootLayer:withContextId:
createConnectionToServer
createDecodeSession:
createDefaultPolicies
createDirectory:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
createDispatchTimer:withDetailedError:
createEncoderWithInputFormat:
createFileListSortedByTimestamp:
createIOEventQueues
createInitiateRelayDictionary
createInitiateRelayDictionaryForCall:primaryConnection:
createInviteSDPWithError:
createJitterBufferTargetEstimatorSynchronizer:syncGroupID:
createLocalMediaControlInfoGeneratorWithType:version:
createLogDumpFile:
createLogDumpFiles:
createMediaQueue
createMediaQueueHandle:
createNWConnection:forConnectionID:
createNWConnectionLogDumpFile
createNWPathEvaluator:withIPAddress:localPort:remotePort:shouldRunInProcess:useBackingSocket:
createName
createNameForScope:
createOffer
createOpaqueData
createPacketThreadWithIOBufferDuration:name:error:
createParticipantInfo
createRTPHandleWithStreamConfig:payloadType:localSSRC:
createRTPHandles:
createReceiverQueue
createRecordingsWithName:
createRedundancyControllers
createRelayUpdateDictionary:
createRemoteQueue
createRemoteReceiveQueue:
createReportSSRCListWithStreamConfigs:
createSDP:audioPayloadCount:secondaryPayloadTypes:secondaryPayloadCount:videoPayloadTypes:videoPayloadCount:localFeatureList:answerBandwidth:maxBandwidth:imageSizesSend:imageSendCount:imageSizesRecv:imageRecvCount:sdp:numSDPBytes:error:
createSIPWithPacketMultiplexMode:
createSecondaryRelayDispatchTimer:callID:callerRequired:
createSessionMessaging
createSframeCryptorWithStreamConfig:ssrc:error:
createSocket
createSourceDestinationInfoListWithConfig:
createSupportedBitrateRuleSets
createSupportedBitrates
createSupportedBitratesForAACELD
createSupportedBitratesForAACELD48
createSupportedBitratesForAMR16k
createSupportedBitratesForEVS
createSupportedBitratesForOpus
createTCPTunnelForParticipantID:relayDictionary:didOriginateRequest:relayType:error:
createTimeoutTimer
createTransportStream:withType:options:
createTransportWithStreamConfig:
createTransportWithStreamConfig:ssrc:
createUID
createVCRateControlAlgorithmWithConfiguration:
createVFD:forStreamType:
createVFD:realSocket:sockAddr:length:isUsable:
createVideoImageAttr:direction:dimensions:count:
createtokenForDeviceName:sourceType:
creationTime
cumulativePacketsLost
currentActiveConnection
currentAudioAverage
currentAudioInputDevice
currentAudioOutputDevice
currentAudioPayload
currentAudioPayloadConfig
currentAudioSessionMediaProperties
currentAudioTier
currentAudioUnitProperties
currentChannelMetrics
currentDTXEnable
currentDTXPayload
currentDetails
currentDurationCounter
currentEndTimestamp
currentEvent
currentEventNeedsEndBlock
currentEventRetransmitFinalPacketCount
currentFocus
currentFocusSession
currentFrameTime
currentInputDevice
currentMode
currentNATType
currentOutputDevice
currentRunLoop
currentStartTimestamp
currentTranscription
currentUplinkTargetBitrate
currentUplinkTotalBitrate
currentVideoCaptureFrameRate
currentVolume
currentZoomFactor
customFeatureListStrings
customHeight
customPayloadConfigStateWithStreamGroupConfig:
customVideoHeight
customVideoWidth
customWidth
cvoExtensionID
dAudioHostTime
data
dataBuffer
dataFromPropertyList:format:errorDescription:
dataPath
dataReceivedDelegate
dataReceivedHandlerQueue
dataReceivedHandlers
dataRequiredPacketPayload
dataSourceControlID
dataUsingEncoding:
dataWithBytes:length:
dataWithBytesNoCopy:length:freeWhenDone:
dataWithCapacity:
dataWithContentsOfFile:options:error:
dataWithPropertyList:format:options:error:
datagramChannelForSessionDestination:error:
datagramChannelForSessionDestination:options:error:
datagramChannelForSocketDescriptor:error:
datagramChannelOptions
datagramChannelRequiresOptions:dataPath:
datagramChannelToken
datagramChannelWithChannelToken:
datagramChannelWithDestination:error:
date
dateByAddingComponents:toDate:options:
dateWithTimeIntervalSinceNow:
dateWithTimeIntervalSinceReferenceDate:
deactivate
debugDescription
decodeBoolForKey:
decodeFloatForKey:
decodeFormats
decodeFrame:showFrame:
decodeFromNSDictionary:
decodeInt32ForKey:
decodeInt64ForKey:
decodeIntForKey:
decodeObjectForKey:
decodeRectForKey:
decodeSizeForKey:
decodeVideoRules
decreaseFlushCount:
decryptMessageWithMKI:message:buffer:size:sequenceNumber:
decryptWithMKI:data:size:sequenceNumber:
decryptionMKMRecoveryInterval
decryptionStatusChanged:
decryptionTimeOutEnabled
decryptionTimeOutInterval
decryptionTimeoutEnabled
decryptionTimeoutInterval
defaultAccessNetworkType:
defaultCenter
defaultCleanupSession:
defaultControllerForAudioType:forDirection:forOperatingMode:
defaultDataCodecConfig
defaultDeviceOfType:
defaultFTXTCodecConfig
defaultInputDevice
defaultLink
defaultMMJIConfig
defaultManager
defaultMediaControlInfoFECFeedbackVersion
defaultMoCapConfig
defaultOneToOneTierTable:
defaultOutputDevice
defaultPayloadConfigurationsForStreamGroupID:
defaultRTPSampleRateForStreamGroupID:
defaultRemainingBitrateSplit:
defaultStateForMediaType:isLocal:
defaultStreamConfig
defaultTier
defaultTransport
defaultValue
defaultValue2G
defaultValueCellular
defaultValueForNetwork:
defaultVideoConferenceManager
defaultsForStreamGroup:
defaultsForStreamGroupCustom:
defaultsForStreamGroupID:streamIndex:
delaySinceLastSR
delegate
delegateNotificationQueue
delegateQueue
departureTime
depthFrameRateMultiplier
depthPixelBuffer
dequeueAndDecodeForTimestamp:
dequeueDatagramPacket:
dequeuePacket:time:
deregisterBlocksForDelegateNotifications
deregisterBlocksForNotifications
deregisterBlocksForService
deregisterBlocksForVCNotifications
deregisterClient
deregisterClientForScreenShare
deregisterCurrentStreamInputCaptureSource
deregisterForBandwidthAllocationWithClient:
deregisterForRateSharing
deregisterForScreenCapture
deregisterForVideoCapture
deregisterForVideoFramesWithDeviceRole:
deregisterFromNotifications
deregisterFromService:
deregisterNotificationForTransportStream:
deregisterPeriodicTask
deregisterRateSharingClient:
deregisterStreamOutputSourceForStreamToken:
deregisterWithUUID:service:
deriveAspectRatioFLS
deriveAspectRatioFLSWithPortraitRatio:landscapeRatio:expectedPortraitRatio:expectedLandscapeRatio:
description
deserializeNwActivity:
destination
destinationFramerate
destroyAudioConverters
destroyBuffers
destroyDispatchTimer
destroyHandler
destroyNWMonitor
destroyNWMonitorInternal
destroyPacketThread
destroySecondaryRelayDispatchTimer
destroySessionMessaging
destroyTimeoutTimer
destroyVideoModules
destroyVideoReceiver
destroyVideoTransmitter
detachNewThreadSelector:toTarget:withObject:
detailedErrorCode
detailedErrorCodeForConnectionWithCallID:
detectAbnormalOWRDWithRoundTripTime:
detectOutOfOrderAndSpikeWithReceiveTimestamp:
detectOutOfOrderAndSpikeWithSendTimestamp:
detectRemoteAveragePowerLevel:timestamp:
detectSSRCCollision:resetNeeded:
detectSSRCCollisionWithRemoteMediaStream:remoteBlobCreationTime:resetNeeded:
device:didReceiveCharacter:
device:didReceiveText:
device:didStart:error:
deviceClass
deviceDidStop:
deviceForDeviceID:
deviceForUID:
deviceFreeDiskSpace
deviceHasNonTapStreamsInStreamList:length:
deviceHasSufficientFreeSpace
deviceID
deviceList
deviceName
deviceNameForToken:
deviceRole
deviceRoleForSessionMode:
deviceType
dictionary
dictionaryForCommonStreamConfig:
dictionaryRepresentation
dictionaryWithCapacity:
dictionaryWithContentsOfFile:
dictionaryWithDictionary:
dictionaryWithObjects:forKeys:count:
dictionaryWithObjectsAndKeys:
didAddParticipantHandlerWithResult:
didAttemptSIPInvite
didChangeActualNetworkBitrateForStreamGroup:
didChangeLocalCameraUID:
didChangeLocalVariablesForSession:
didChangeLocalVideoAttributes:
didChangeReceivingStreamsForStreamGroup:
didChangeSendingStreamsForStreamGroup:
didChangeWifiAssistAvailable:reason:
didDecryptionTimeOutForMKMRecoveryForStreamGroup:
didDegrade:
didDetectMissingFrame
didEnableDuplication:activeConnection:
didEncryptionKeyRollTimeout
didEndProcessingRequestHelperWithResult:
didEnterState:oldState:
didFinishRequestHelperWithResult:
didInterruptionBeginHandler
didInterruptionEndHandler
didInvalidate
didLinkProbingLockdownEnd
didMBLRampDown
didMediaDecryptionTimeOutForStreamGroup:
didMediaGetFlushedWithPayloadType:transactionID:packetDropped:sequenceNumberArray:
didMediaQualityDegrade:
didNegotiateStreamGroupWithID:
didPause:
didPrepareSRTP
didProcessSamplesCallback
didProcessSamplesCallbackContext
didReceiveCaptions:
didReceiveCharacter:
didReceiveCommError
didReceiveCustomReportPacket:arrivalNTPTime:
didReceiveErrorFromCameraUniqueID:error:
didReceiveFirstFrame
didReceiveFirstFrameForStreamGroup:
didReceiveFirstPreviewFrameFromCamera:
didReceiveFirstPreviewFrameFromCameraUniqueID:
didReceiveFirstRemoteFrameForStreamToken:
didReceiveFrame:
didReceiveMomentsRequest:
didReceiveRTCPPackets:
didReceiveReport:
didReceiveReportPacket:arrivalNTPTime:
didReceiveSampleBuffer:
didReceiveServerStatsResponse
didReceivedSessionStatsAtTime:
didRemoveSpatialMetadataEntry
didReportAudioStall
didReportLongConnectionTime
didReportNoRemotePackets
didResume
didResumeAudioIO:
didResumeStreamInput:
didResumeStreamInputCaptureSource
didResumeVideoSink:
didSend200OK
didServerDie
didSessionBeginQuietTime
didSessionEnd
didSessionEndQuietTime
didSessionResume
didSessionSampleRateChange
didSessionStop
didStall:
didStart
didStartProcessingRequestHelperWithResult:
didStartSpeaking:
didStartStreamInput:
didStartStreamInputCaptureSource
didStop:error:
didStopPreview
didStopSpeaking:
didStopStreamInput:
didSuspend
didSuspend:
didSuspendAudioIO:
didSuspendStreamInput:
didSuspendStreamInputCaptureSource
didSuspendVideoSink:
didSwitchFromStreamID:toStreamID:
didUpdateAttachments:
didUpdateBasebandCodec:
didUpdateLinkPreferenceOrder:
didUpdatePreferredInterfaceForDuplication:notifyPeer:enableDuplication:isMediaUnrecoverableSignal:
direction
directorySize:
disableDuplication
disableMLScalarDuringSharing
disableRed
disableRemotePreferredInterfaceInference:
disableSessionHealthMonitor
disableVAD
disableViewPointCorrectionForSharing
discardConnection:
discardRelayBindingForCallID:
discardRelayBindingForCallID:withChannelNumber:
disconnect
disconnect:didRemoteCancel:
disconnectInternal:disconnectError:didRemoteCancel:
disconnectWithNoRemotePackets:
disconnectWithNoRemotePackets:timeoutUsed:
dispatchQueueNameWithConfig:
dispatchedAddParticipantConfigurations:
dispatchedAddParticipantWithConfig:
dispatchedCleanupStreamOutput:
dispatchedCompleteAudioEnabled:didSucceed:error:
dispatchedCompleteAudioPaused:didSucceed:error:
dispatchedCompleteScreenEnabled:didSucceed:error:
dispatchedCompleteVideoEnabled:didSucceed:error:
dispatchedCompleteVideoPaused:didSucceed:error:
dispatchedConfigureWithDeviceRole:negotiatedVideoEnabled:negotiatedScreenEnabled:operatingMode:
dispatchedConnectionDidChangeWithLocalInterfaceType:remoteInterfaceType:streamToken:
dispatchedDeregisterStreamOutputSourceForStreamToken:
dispatchedDidReceiveFirstRemoteFrameForStreamToken:
dispatchedHandleActiveConnectionChange:
dispatchedHandleActiveConnectionChangeForStreamGroups:
dispatchedLegacySetMediaState:forMediaType:
dispatchedMediaStateForMediaType:
dispatchedNotifyCachedStateForStreamToken:
dispatchedParticipant:didStart:error:
dispatchedParticipant:didStopWithError:
dispatchedProcessDatagramChannelEventInfo:
dispatchedRegisterStreamOutputSource:forStreamToken:
dispatchedRemoteMediaDidStall:streamToken:
dispatchedRemoteScreenAttributesDidChange:streamToken:
dispatchedRemoteVideoAttributesDidChange:streamToken:
dispatchedRemoteVideoDidDegrade:streamToken:
dispatchedRemoteVideoDidPause:streamToken:
dispatchedRemoteVideoDidSuspend:streamToken:
dispatchedRemoveParticipant:
dispatchedSetAudioEnabled:
dispatchedSetAudioPaused:
dispatchedSetMediaState:forMediaType:
dispatchedSetOneToOneModeEnabled:isLocal:
dispatchedSetRemoteAudioEnabled:
dispatchedSetRemoteScreenEnabled:
dispatchedSetRemoteSystemAudioPaused:
dispatchedSetRemoteVideoEnabled:
dispatchedSetScreenEnabled:
dispatchedSetSharingEnabled:
dispatchedSetVideoEnabled:
dispatchedSetVideoPaused:
dispatchedSetVideoReceiverFeedbackDelegate:
dispatchedStartClient:error:
dispatchedStartOneToOneStreams
dispatchedStop
dispatchedStopClient
dispatchedStopWithError:
dispatchedStopWithError:didRemoteCancel:
dispatchedTransportStop
dispatchedUpdateActiveMediaStreamIDs:withTargetBitrate:mediaBitrates:rateChangeCounter:
dispatchedUpdateConfiguration:
dispatchedUpdateUplinkTargetBitrate:rateChangeCounter:
displayLinkTick:
disposeControlInfo:
distributeBitrate:
distributeBitrateAndOptInToStreamIDsWithSeamlessTransition:
doBlockingConnectionCheck
doBlockingConnectionCheck:
doHandshakeWithMessage:topic:afterDelay:withOptions:
doRateControlWithBasebandStatistics:
doRateControlWithNWConnectionStatistics:
doRateControlWithNWStatistics:
doRateControlWithStatistics:
doRateControlWithTime:roundTripTime:packetLossRate:operatingBitrate:averageReceivedBitrate:
doRateControlWithTime:roundTripTime:packetLossRate:operatingTierIndex:averageReceivedBitrate:
doRateControlWithVCRCStatistics:
doSipEndAction:callID:error:
doSipEndProc:
doesNotRecognizeSelector:
doesQoSSourceExistForStreamToken:
doesQueueExistForStreamToken:
doesVideoPayloadMatchRemoteImageAttributeRules:
domain
doubleValue
downlinkBitrateCap
downlinkBitrateCapForConnection:
downlinkRateController
downlinkTargetBitrate
downlinkTargetCellBitrateCap
downstreamBandwidth
drain
drainAndReleasePackets
drainUnderlyingFileDescriptor
drawOverlayMessage:onPixelBuffer:attributes:
drawText:inSubLayer:
dtmf
dtmfEventHandler
dtmfEventQueue
dtmfQueue
dtmfSampleRate
dtmfTimestampRate
dtmfTonePlaybackEnabled
dtxEnabled
dtxMetrics
dtxPayload
dumpBlob:prefix:force:
dumpMediaBlob
dumpRemoteNegotiationData:forceFileDump:
dumpReport:
dupNWConnectionBackingSocket:
dupRTCPNWConnectionBackingSocket
dupRTPNWConnectionBackingSocketForNWConnection:
duplicateImportantPktsEnabled
duplicateMessageOnServerLink
duplicationEnhancementEnabled
duplicationLinkID
duplicationReason
duplicationStateUpdateWithEvent:
duration
durationThresholdDownward
durationThresholdUpward
dwAudioTS
dwRTT_ice
dynamicVideoPriorityEnabled
earlierDate:
effectType
effectsApplied
effectsArray
effectsMode
effectsRegistered:
emulatedNetworkConfigPath
emulatedRxPLR
enableAudio:
enableAudioDumpParticipantLocal:
enableAudioDumpParticipantRemote:
enableAudioPowerSpectrumReport
enableBWELogDump:
enableBasebandDump:
enableBasebandLogDump:
enableBitstreamCapture
enableCVO
enableDNNVAD
enableDuplication
enableGFTStatsReceiveThread
enableGFTStatsReporting
enableHEIFAndHEVCForMoments
enableLogDump:enablePeriodicLogging:
enableLoopbackInterface
enableMaxBitrateOnNoChangeCMR
enableNWLogDump:
enableOneToOneMode
enablePacketLogging
enableRateControlDump
enableRateControlFeebackInConfig:
enableRecvBitstreamDump
enableRedundancy:
enableRxDecodeYUVDump
enableSessionHealthMonitor
enableSpeakerPhone
enableTxBitstreamDump
enableTxSourceYuvDump
enableTxTimestampAlignmentLogs
enableVADFiltering
enableVPBLogging
enableiRATSuggestion
encodeAudio:numInputSamples:outputBytes:numOutputBytes:
encodeBool:forKey:
encodeFloat:forKey:
encodeFormats
encodeInt32:forKey:
encodeInt64:forKey:
encodeInt:forKey:
encodeObject:forKey:
encodeProcessedPixelBuffer:time:imageData:processTime:
encodeProcessedVideoFrame:
encodeRect:forKey:
encodeSize:forKey:
encodeVideoFrame:
encodeVideoRules
encodeWithCoder:
encodedBuffer
encodedBufferForRFC3640
encodedBufferSize
encodedBufferSizeForRFC3640
encodedBytes
encoderGroupID
encoderUsage
encoderUsageTypeWithOperatingMode:
encodingHeight
encodingMode
encodingScore
encodingType
encodingWidth
encryptData:size:sequenceNumber:
encryptMessage:buffer:size:sequenceNumber:transactionDelegate:
encryptionInfoForKey:
encryptionInfoReceived
endPIPToPreviewAnimation
endParticipantConfiguration
endPreviewToPIPAnimation
endPrivacyAccountingInterval
endRecording:timestamp:completionHandler:
endWithError:
enqueueAttributes:
enqueueDatagramPacket:datagramSize:options:error:
enqueuePacket:
enqueueSampleBuffer:time:
enqueueSyncDestinationChangeEvent:eventType:
enqueueWithSample:timestamp:
ensureBufferPoolSupportsOutputWidth:outputHeight:
ensureDisplayIsReady
ensureNatCachePathExists
enterStateStarted
entryForQualityIndex:
entryForStreamID:
entryTypeForMediaType:
enumerateKeysAndObjectsUsingBlock:
enumerateMatchesInString:options:range:usingBlock:
enumerateObjectsUsingBlock:
error
errorReponseCallback
errorWithDomain:code:userInfo:
establishSIPDialogWithSDP:error:
estimatedBandwidth
estimatedBandwidthCap
estimatedBandwidthUncapped
evaluateEnableRRx:
eventHandler
eventLogLevel
evsChannelAwareIndicator
evsChannelAwareOffset
evsHeaderFullOnly
evsSIDPeriod
exceptionWithName:reason:userInfo:
executeBlockForIDSDestination:blockToExecute:
expMovMeanRTT
expectedDecodeSize
expectedGFTResolutionForDevice:ratio:
expectedMessageType
expectedPreviewResolutionForDevice:width:height:
expectedProcessEndTime
experimentGroupIndex
experimentVersion
extendedHighestSequenceNumber
externalAddressForSelfConnectionBlob:
externalIOFormat
extraPayloads
extractAspectRatios:landscapeX:landscapeY:portraitX:portraitY:
extractAspectRatios:prefix:landscapeX:landscapeY:portraitX:portraitY:
extractClientDownlinkQualityInfoDictionary:
extractClientUplinkQualityInfoDictionary:
extractDimensionsForInterface:direction:
extractExpectedAspectRatios:expectedLandscapeX:expectedLandscapeY:expectedPortraitX:expectedPortraitY:
extractRTPData:ssrc:sequenceNumber:
fPref
fRate
faceMeshTrackingEnabled
faceTimeSettings
faceTimeSwitches
farEndVersionInfo
fastMediaDuplicationEnabled
fastSuddenBandwidthDetectionEnabled
fdatGroupDisabled
featureListString
featureListString:maxSize:payload:featureListStrings:
featureListString:removingPayload:andPayload:
featureListStringDict
featureListStringForH264:
featureListStringForHEVC:
featureListStringH264
featureListStringHEVC
featureString
featureStrings
fecFeedbackVersion
fecHeaderV1Enabled
fecLevelPerFrameSizeVector
fecRatio
feedbackController
feedbackSize
fetch:numSamples:timestamp:
fieldName
fieldType
fieldValue
fileExistsAtPath:
fileExistsAtPath:isDirectory:
fileSize
fileSize:
fileSystemRepresentation
fileURLWithPath:
fillImageArray:imageArray:
fillImageStruct:imageStruct:
fillImageStructWithDictionary:forInterface:imageStruct:
fillMediaControlInfo:
filterPendingTemporalStreams
filterRules:byBitrateRule:
filteredSetForOperatingMode:bandwidthConfigurations:
filteredSetUsingPredicate:
finalizeEncryption
finalizePerfTimersForFirstMediaFrameWithTime:
findAndSplitExtraBitrateFromCappedStreams:remainderBitrate:currentStreamGroupBitrate:streamToken:totalRemainderBitrateWeight:
findBitrateSplitForStreamToken:targetBitrate:
findConnectionToForwardData:size:
findExpectedFramerate:forDevice:
findFeatureString:value:valueLength:withPrefix:
findInfoSubLayerFromLayer:
finishEncoding
finishWritingWithCompletionHandler:
finishWritingWithHandler:
firstDegradedMeasure
firstExpirationTime
firstObject
firstRemoteFrameTimemoutSource
fixAudioStreamConfigurations
fixInvalidAspectRatioPortrait:landscape:
fixedJitterBufferSize
flagFromPayload:
flags
floatValue
flush
flushActiveMessages
flushActiveTransactions
flushAudioEventQueue
flushAudioRedundancyEventQueue
flushBasebandQueueWithPayloads:flushCount:
flushBasebandWithPayloads:
flushBuffer
flushDatagramPacketsList
flushDatagramPacketsListDIrectIDSPath
flushEventQueue:
flushHistoryBuffers
flushLinkProbingStatusWithOptions:
flushProbingResults:
flushRealTimeReportingStats
flushRemoteQueue
flushReportingStats
flushSyncDestinationUpdatesEventQueue
flushTransaction
flushVideoRedundancyEventQueue
followSystemCamera
followSystemInput
followSystemOutput
forceARCapture
forceAudioBitrate
forceAudioChannelCount
forceAudioHardwareSampleRate
forceAudioPacketsPerBundle
forceAudioPayload
forceAudioPowerThreshold
forceAudioPowerTimeInterval
forceAudioPriorityEnabled
forceAudioPriorityValue
forceBitrate
forceCaptureHeight
forceCaptureWidth
forceCleanup
forceDisableAudioPowerSpectrumRegister
forceDisableEffectsHealthCheck
forceDisableFaceZoom
forceDisableMediaEncryption
forceDisableMediaPriority
forceDisableMediaQueue
forceDisableMediaStalled
forceDisableMessageEncryption
forceDisableProcessSpecificRequirements
forceDisableReporting
forceDisableSSRCCollisionDetection
forceDisableThermal
forceDisableVideoDegraded
forceDisableVideoRuleCell720
forceDisableVideoRuleWiFi1080
forceDynamicEffectsFramerate
forceEVSWideBand
forceEnablePearlCamera
forceEncodeFramerate
forceEncodeHeight
forceEncodeWidth
forceFECRepairStream
forceFramerate
forceFullBandwidth
forceHWI
forceIPv6
forceKeyFrameInterval
forceKeyFrameProperties
forceMirroredCapture
forceMultiwayHWI
forceMuteAtStart
forceNetworkCellular
forceNetworkCellular:
forceNoICE
forceNoICE:
forceOneToOneMode
forceRecvVideoPayload
forceRedMaxDelay
forceRedNumPayloads
forceScreenHWI
forceThermalLevelFramerate:
forceUseFloat
forceUseInternalRTPThreadingWithDefaultValue:
forceVideoPayload
forceVideoStreamDisableBitrateCap
forceVideoStreamFramerate
forceVideoStreamKeyFrameInterval
forceVideoStreamLowLatency
forceVideoStreamPayload
forceVideoStreamResolution
forceVideoStreamRxMaxBitrate
forceVideoStreamRxMinBitrate
forceVideoStreamTxMaxBitrate
forceVideoStreamTxMinBitrate
forceVisibilityIndex
forceWiFiAssistOutOfBudget
forceWifiAssistOutOfBudget
forcedCapBitrate
forcedTargetBitrate
forcingBitrate
foregroundCameraOneToOneTierTable:
foregroundCameraRemainingBitrateSplit:
format
formatBandwidthConfig:maxBanxwidth:bandwidthString:
formatDescription
formatDescriptionString
formatsExt1
formattedText
forwardSamplesFromIO:toIO:withConverter:withHostTime:
foundVTPIP
fractionLost
frame
frameFormatMic
frameFormatSpeaker
framePosition
framePresentationTime
frameRate
frameRateIsBeingThrottled:thermalLevelDidChange:powerLevelDidChange:
framerate
framesPerIdrPeriod
frameworkVersion
frequencyMeteringEnabled
frequencyRange
frontCameraOffsetFromDisplayCenter
ftxtGroupDisabled
ftxtOldGroupDisabled
fullKeyBytes:
gatherRealtimeStats:
generalInfo
generateBandwidthAllocationTableWithTierTables:qualityIndices:qualityIndexToStreamToken:
generateConnectionData:forCallID:connectionDataSize:nonCellularCandidateTimeout:
generateEncryptionKey
generateIDSStreamID
generateInvalidStreamTokenWithError:
generateKeyFrameWithFIRType:
generateKeyFrameWithReceivedMessage:forParticipant:
generateKeyFrameWithStreamID:firType:
generateKeyFrameWithStreamID:streamGroupID:firType:
generateMediaStateEntryForMediaType:
generateMediaStreamConfigurationWithError:
generateMediaStreamInitOptionsWithError:
generateRTCPXRSummaryReport:reportCount:
generateRTCPXRSummaryReports:reportCount:
generateRTCPXRVoIPMetricsReport:reportCount:
generateRTCPXRVoIPMetricsReports:reportCount:
generateReceptionReport:reportCount:
generateReceptionReportList:reportCount:
generateReportDictionary:
generateSSRC
generateSSRC:streamID:repairStreamID:
generateStatsBlob
getAbTestMasterLocalSwitches
getAbTestingState
getAdaptiveLearningA
getAdaptiveLearningB
getAdaptiveLearningState
getAddressForService:
getAdjustmentFactorA
getAdjustmentFactorB
getAdjustmentFactorC
getAllCompatibleVideoPayloads:forMediaType:
getAllPayloadsForAudio:count:secondaryPayloads:secondaryCount:
getAllPayloadsForScreen:count:
getAllPayloadsForVideo:count:
getAllSettings
getAnbrActivationStateWithCompletionHandler:
getAudioDumpName
getAudioFormatDescriptionForStreamGroupID:
getAudioTxBitrate
getBasebandCodecType:sampleRate:
getBasebandMetricsWithNotification:
getBestCaptureSizeForEncodingSize:
getBestFrameWidth:frameHeight:frameRate:
getBitrateKbpsSinceTime:
getBitrateToStreamTable
getBufferFromPool:
getBurstyLossAtTime:inMostRecentDuration:withPercentile:
getByteCountWithIndex:isOutgoing:
getBytes:length:
getCFRunLoop
getCString:maxLength:encoding:
getCachesDirectoryPath
getCaptionsFormatDescription
getCaptureEncodingSize
getCaptureFrameRateForSource:
getCarrierBundleValue:forKey:
getCellularMTUForActiveConnectionWithQuality:
getCellularTechForActiveConnectionWithQuality:forLocalInterface:
getCharTimestampForSystemTime:
getClientOption:
getClientSpecificUserInfo
getClientSpecificUserInfo:
getClientUUID:
getClosestSampleForTimestamp:
getCompatibleLocalFeatureListForPayloads:count:
getConnectionDataForCallID:version:useCompressedData:pConnectionData:connectDataSizeInBytes:relayDictionary:interfaceUpdate:nonCellularCandidateTimeout:
getConnectionDataUsingRelay:isInitialRelay:nonCellularCandidateTimeout:queue:completionHandler:
getConnectionSelectionPolicy
getConnectionSelectionPriorities
getConnectionSelectionVersionFromFrameworkVersion:
getConnectionSetupData:withOptions:error:
getConnectionStatsBlob
getConnectionTypeForActiveConnectionWithQuality:forLocalInterface:
getCount
getCryptoSet:withMediaKey:
getCurrentAudioDeviceWithType:
getCurrentEnabledTierTables:qualityIndices:qualityIndexToStreamToken:
getCustomRootQueueWithPriority:isFixedPriority:
getDaemonProcessInfo
getDataSourceControlID
getDecodePayloadTypes:secondaryPayloadTypes:
getDecryptionMKMRecoveryInterval
getDecryptionTimeoutInterval
getDefaultLogDumpPath
getDoubleTimeFromTimestamp:timestampTick:wrapAroundCounter:
getDoubleValueForKey:defaultValue:
getErrorDictionaryFromError:
getExperimentConfig:defaultValue:
getExperimentValueForKey:
getExtendedSequenceNumberForSequenceNumber:
getFeatureFlagForStorebagKey:userDefaultKey:featureFlagDomain:featureFlagName:
getFecLevelPerFrameSizeVector
getFeedbackMessage:type:metaData:error:
getFilePathWithTransactionID:type:
getForcedPayload
getFramerateSinceTime:
getIPPort:
getIPPortForService:
getInfo:bufferLength:infoSize:type:
getInfoUnserialized:type:
getInfraChannelNumber:is5Ghz:
getInitialRemoteScreenAttributes:
getInvalidParamErrorForSetPause:didSucceed:
getIsAudioPaused:callID:error:
getIsVideoPaused:callID:error:
getKeepAliveTimeoutFromCarrierBundle
getKeyDerivationCryptoSet:withKeyMaterial:derivedSSRC:
getLatestRecvKeyMaterial
getLatestSendKeyMaterial
getLivePhotoWithTransactionID:timestamp:completionHandler:
getLocalStats:localSessionStats:
getLongTermHistoryLength
getLongTermValueWeightA
getLongTermValueWeightB
getLongTermValueWeightC
getLoopbackIP:
getMagicCookie:withLength:
getMajorVersionNumber
getMaxTemporalBitrateForStreamIDs:
getMediaLineForType:
getMediaQueueInVideoBitrate:outVideoBitrate:inAudioBitrate:outAudioBitrate:
getMediaQueueRateChangeCounter:rateChangeTime:
getMediaStreamConfigForControlInfoGenerator:
getMetaDataArrayWithIndentifier:
getMomentsCapabilities
getMomentsImageTypes
getMomentsVideoCodecs
getMostRecentLocalStats
getMultiwayConfigForStreamID:
getNATTypeFromCarrierBundle
getNSError:code:detailedCode:filePath:description:reason:
getNSError:code:detailedCode:returnCode:filePath:description:reason:
getNegotiatedResolutionForPayload:forInterface:withRule:direction:result:remoteSupportsHD:screenSharing:
getNetworkAgentRefCount
getNewSessionJoiningInterval
getNextBestCandidate:callID:isLocal:IPPortToExclude:
getNoRemoteDuplicationThresholdFast
getNotUsedTimeout
getNumberOfConnectionsInternal
getPLRTierFromPLREnvelope:
getPacketCountWithIndex:isOutgoing:
getPacketLossRateAtTime:inMostRecentDuration:
getPacketsPerBundleForStreamConfig:
getPayloadSettingsForPayload:
getPhotoWithTransactionID:timestamp:completionHandler:
getPixelFormat
getPreferredFormat:blockSize:vpOperatingMode:forOperatingMode:deviceRole:suggestedFormat:
getPreferredScreenPayloadList
getPreferredVideoPayloadList:localSupportedPayloads:
getPrimaryConnectionToBeCompared
getProbingResultsForLinkID:
getQueueForStreamToken:videoMode:
getRTCPReportNTPTimeMiddle32ForReportId:
getRampDownSuppressionBitrateThresholdWithRTT
getRampUpFrozenDuration
getRampUpSettleDuration
getRateControlFeedbackMessage:type:metaData:error:
getRateControllerType
getRealTimeStats:
getRealTimeStatsForServerBasedRxOnly:
getRealTimeStatsForServerBasedTxOnly:
getRealTimeStatsForiPadCompanion:
getReceiveStatsCollectorWithStreamConfig:
getReceivingBitrateAtTime:inMostRecentDuration:
getRecvKeyMaterialWithIndex:
getRemainingAQMBudgetWithPacket:
getRemoteCIDForDstIPPort:callID:
getRemoteICEVersion:remoteICEVersion:
getRemoteMediaStallTimeout
getReportingClientName
getReportingClientType
getReportingServiceID
getRoundTripTimeWithPacketId:time:
getSRTPMediaKeyLength:
getSecondaryConnectionToBeCompared
getSendKeyMaterialWithIndex:
getSendingBitrateAtTime:inMostRecentDuration:
getSentBytes:receivedBytes:
getServerPidWithXPCArguments:result:error:
getServerStatsBitrateAtTime:inMostRecentDuration:
getShortTermHistoryLength
getShortTermValueWeightA
getShortTermValueWeightB
getShortTermValueWeightC
getSnapshot
getSockaddrStorage:size:
getSourceDestinationInfo:
getStatistics:
getStats
getStatsHistoryElementIndex:time:inMostRecentDuration:
getStorebagValueForStorebagKey:userDefaultKey:defaultValue:isDoubleType:
getStorebagValueStorebagKey:defaultValue:
getStreamGroupConfig:
getStreamGroupPayload:
getSupportedPayloads
getSyncSourceSampleRate
getTestGroupPermutations:
getThresholdForSwitch:
getTimestampFromMicroTime:
getTopic:message:fromPayload:
getTransmitMediaControllerWithStreamConfig:
getTransmitStatsCollectorWithStreamConfig:
getUUIDBytes:
getUpdatedTimestampWithTimestamp:
getUseSbr:blockSize:forAACFormat:
getVCCurrentVersion
getVCRCSeverBagConfigWithKey:
getVCStatisticsFeedbackMessage:time:
getVCStatisticsWithType:time:
getVTPIPPort:
getValue:
getVideoCodecConfigFromStreamConfigPList:
getVideoCodecFromStreamCodecPList:
getVideoReceiverFeedbackDelegate
getVideoRecvImages:
getVideoRuleForVideoMode:interface:sessionBitrate:
getVideoRulesForTransport:payload:encodingType:
getVideoSendImages:
getVideoSettings:forInterface:payload:width:height:framerate:bitRate:
getWRMRSSIThresholdValue:
getWRMSubscribeVersion
groupEntries
groupKeysWithMode:primaryKey:
hAFRC
hMediaQueue
hSIP
hVideoReceiver
hVideoTransmitter
handle
handleANBR:forDirection:
handleAbnormalRateAdaptationSymptomReport:
handleActiveConnectionChange:
handleActiveConnectionChangeForMultiway:
handleActiveConnectionChangeForOneToOne:
handleAlarmForTimeStamp:
handleCaptureEvent:
handleCaptureEvent:subType:
handleCaptureSourcePositionDidChange:
handleCellTechChange:
handleCellTechChange:cellularMaxPktLen:
handleCellTechChange:connection:
handleCellularMTUChanged:
handleCellularMTUChanged:connection:
handleCellularSoMaskChanged:
handleChannelInfoReport:
handleCodecModeChangeEvent:
handleConnectionSetupDataChangeMessageDelivered
handleControlConfigMessage:forParticipantId:
handleDefaultLinkUpdatedWithInfo:
handleDownlinkANBR:
handleDuplicationEnabled:activeConnection:
handleDuplicationStateUpdateEvent:
handleEncryptionInfoChange:
handleEncryptionInfoEvent:
handleExchangedKey:result:
handleFirstConnectionSetup:
handleGKSConnectivitySettingsUpdate:
handleIDSEncryptionInfoEvent:
handleIDSMembershipChangeInfoEvent:
handleInsufficientFreeSpaceWithRequest:delegate:
handleKeyExchangeCompleted
handleKeyFrameRequestWithSizeAndFistMBs:count:didReceiveRTCPFB:didReceiveFIR:
handleLegacyTransitionsForMediaType:mediaState:previousState:didSucceed:error:
handleLinkConnectedWithInfo:
handleLinkConstrainsChanged:
handleLinkPreferSuggestion:
handleMediaCallbackNotification:inData:outData:
handleMediaQueueSizeExceedThresholdWithQueueSize:mediaQueueStreamId:type:
handleMediaReceivedOverPeerToPeerLinkWithConnectionId:
handleMediaReceivedOverRelayLinkWithConnectionId:
handleMembershipChangeInfoEvent:
handleMutedTalkerNotification:
handleMutedTalkerNotificationWithXPCArguments:
handleNWConnectionPacketEvent:eventType:
handleNewCandidates:version:
handleNewConnectionSetup:isInitialConnection:
handleNoServerStatsSymptomReport:
handleOptionalControlInfo:
handlePacket:packetHandler:shouldDropThisPacket:
handlePendingPrimaryConnectionChange
handlePendingRequestSuccessWithSourceURL:
handlePendingRequestWithError:
handlePendingRequestsWithSourceURL:error:
handlePreConnectionDataReceived:
handlePreferredInterfaceForDuplicationUpdate:notifyPeer:enableDuplication:isMediaUnrecoverableSignal:
handlePrimaryConnectionChanged:oldPrimaryConnection:
handlePrimaryConnectionRemoved
handleProbingResponse:
handlePruneTimerEventAndReschedule
handleRATChanged:
handleReceivedPiggybackBlobLegacy:
handleRemoteFrame:timestamp:cameraStatusBits:
handleRemoteOneToOneSwitchWithStreamGroup:fromStreamID:toStreamID:
handleRemoteSessionStats:
handleRemoteVideoAttributesChange:
handleReportingBlob:
handleRequestingKeyFrameGenerationWithStreamID:firType:
handleSampleBuffer:
handleSecondaryConnectionRemoved
handleSendMessageDidSucceed:message:participantID:
handleSessionInfoResponse:
handleSignificantPacketLossSymptomReport:
handleSinglePendingRequestWithTransactionID:sourceURL:
handleStartDidSucceed:withError:
handleStateChanges:error:semaphore:operationResult:
handleStreamGroupsActiveConnectionChange:
handleStreamsPendingKeyFrameGeneration
handleStreamsResetIDR
handleSymptomReportForDecryptionError
handleTelephonyNotification:withInfo:
handleThermalLevelChange:
handleTransitionPrepareToStarting
handleTransportSessionEvent:info:
handleTransportStreamDeactivated:
handleUplinkANBR:
handleVTPSendFailedWithData:
handleVocoderNotificationWithInfo:
handleWaitToRunTimeout
hardwareConfigurationForPayload:transportType:
hardwareScore
hasAbSwitches
hasAccessNetworkType
hasAcknowledgement
hasActiveAudioSession
hasAllowDynamicMaxBitrate
hasAllowsContentsChangeWithAspectPreservation
hasAppleNeuralEngine
hasAudioChannelCount
hasAudioFeatures
hasAudioSettings
hasAudioUnitModel
hasBandwidthSettings
hasBaseband
hasBasebandCodec
hasBasebandCodecSampleRate
hasBlobVersion
hasCameraU1
hasCanDisplayCaptions
hasCap2G
hasCap3G
hasCap5G
hasCapLTE
hasCapWifi
hasCaptionsSettings
hasCipherSuite
hasCname
hasCodecType
hasConfidence
hasConfigurationExtension
hasConnectionWithWifi:cell:
hasContent
hasCoordinateSystem
hasCustomVideoHeight
hasCustomVideoWidth
hasDecodeFormats
hasEncodeFormats
hasFaceTimeSettings
hasFormatsExt1
hasGeneralInfo
hasHasSpaceAfter
hasHdrModesSupported
hasIdsStreamID
hasInfoType:
hasIsFinal
hasIsLocal
hasLandscapeAspectRatioX
hasLandscapeAspectRatioY
hasLtrpEnabled
hasMaxIDSStreamIdCount
hasMaxMediaBitrate
hasMaxNetworkBitrate
hasMaxPacketsPerSecond
hasMediaControlInfoSubVersion
hasMediaControlInfoVersion
hasMediaFlags
hasMessage
hasMetadata
hasMic
hasMismatchedDisplayAspectRatioX
hasMismatchedDisplayAspectRatioY
hasMomentsSettings
hasMultiwayCapabilities
hasNtpTime
hasOneToOneModeSupported
hasOptionalPackedPayload
hasPTime
hasPackedPayload
hasPayload
hasPayloadSpecOrPayloads
hasPayloads
hasPendingChanges
hasPortraitAspectRatioX
hasPortraitAspectRatioY
hasPreferredFormat
hasPreferredFormatExt1
hasPrefix:
hasProfileLevelId
hasRealInputStream
hasReceivedFirstFrame
hasReceivedLastFrame
hasRepairStreamID
hasRepairedMaxNetworkBitrate
hasRepairedStreamID
hasRepairedStreams
hasRequiredPackedPayload
hasRtcpFlags
hasRtpPayload
hasRtpSSRC
hasRtpSampleRate
hasScreenRes
hasScreenSettings
hasSenderLanguages
hasSessionWaitingForSIPInvite
hasSettingsU1
hasSpaceAfter
hasStatus
hasStreamGroup
hasStreamID
hasStreamIndex
hasSuffix:
hasSupportedCodecs
hasSupportedImageTypes
hasSupportedPayloads
hasSupportedVideoCodecs
hasSwitches
hasTilesPerFrame
hasUserAgent
hasVideoConference:
hasVideoFeatures
hasVideoSettings
hash
hdBufferPool
hdTransferSession
hdrModePixelFormats
hdrModeWithOptions:
hdrModesBitmapWithSupportedModes:
hdrModesNegotiated
hdrModesSupported
head
headerFullOnly
healthPrint:isSend:
healthPrintForServerStats
heartbeat
height
highFecEnabled
highestEncodingResolution
historyBuffer:didDequeueSample:timestamp:
hwEncoderEnterBitrate
hwEncoderExitBitrate
iPayload
iRATDuplicationEnabled
iRATRtpEnabled
iRATSuggestionEnabled
iRemoteRTPPort
iWidth
iceBlocks
iceConnectedForCallID:result:didReceivePacket:useRelay:secretKey:skeResult:
iceNewCandidatesForCallID:blob:size:newCandidateVersion:
iceRemoveIPPort:forCallID:isLocalInterface:
iceShouldNominateNewCandidate:forCallID:interfaceMask:nominated:demote:connectionPriority:replaceOnly:
iceTimeoutInSeconds:
idsDestination
idsParticipantID
idsStreamID
idsStreamId
ignoreSilence
imageAttributeRules
imageData
imageType
imageTypes
imageTypesWithSupportedCodecs:
inMessageQueue
includeRedSequenceOffset
incomingMessageQueue
increaseBasebandFlushCountInternallyWithSuggestion:
increaseCapacity:
increaseFlushCountForVideoRefresh:transactionID:
indexOfCodecConfig:
indexOfObject:
indexOfObject:inSortedRange:options:usingComparator:
indexesOfObjectsPassingTest:
indicatorFromRadioTech:
infoDictionary
init
initCreateSocketRequiresOptions:dataPath:
initForMacDecodingOnly
initForSimulation:useExternalThread:
initForWritingWithMutableData:
initLock
initNegotiatorLocalConfiguration:options:
initPreSpatialSceneIdentifierTapWithFormat:sceneIdentifier:
initPreSpatialSessionTypeTapWithFormat:sessionType:
initPrimaryPayload:dtxPayload:redPayload:secondaryPayloads:allowAudioSwitching:sbr:aacBlockSize:
initPrivateWithTransportToken:configuration:negotiationData:delegate:queue:
initProcessTapWithFormat:PID:
initRequiresOptions:
initRequiresOptions:localIP:localPort:remoteIP:remotePort:
initSSRC:
initSharedInstance
initStreamGroupU1ConfigForGroupId:withLocalConfig:
initSupportedPayloads
initSystemTapWithFormat:
initSystemTapWithFormat:excludePIDs:
initUsingWifiTiers
initVideoCompressionWithWidth:height:bitrate:keyFrameIntervalDuration:
initVideoTransmitter
initWithAllowAudioRecording:videoFeatures:
initWithAllowAudioSwitching:allowAudioRecording:useSBR:ssrc:audioUnitNumber:
initWithAllowAudioSwitching:allowAudioRecording:useSBR:ssrc:audioUnitNumber:audioRuleCollection:
initWithArray:
initWithAssetWriterInput:
initWithAudioConfiguration:
initWithAudioFormat:remoteCodecInfo:
initWithAudioSessionId:maxChannelCountMic:maxChannelCountSpeaker:spatialMetadata:
initWithAudioSessionMode:
initWithBandwidthConfigurations:
initWithBase64EncodedString:options:
initWithBinCount:refreshRate:delegate:
initWithBinCount:streamToken:sinkContext:sinkCallback:
initWithBitrate:connectionType:limitingRule:
initWithBitrateArbiter:
initWithBool:
initWithBuffer:length:optionalControlInfo:version:
initWithBufferLength:
initWithBytes:bufferSize:
initWithBytes:length:
initWithBytes:length:encoding:
initWithCString:encoding:
initWithCallID:reportingAgent:
initWithCallID:requireEncryptionInfo:reportingAgent:notificationQueue:
initWithCallID:requireEncryptionInfo:reportingAgent:notificationQueue:dataPath:
initWithCallID:requireEncryptionInfo:reportingAgent:notificationQueue:isMultiwaySession:
initWithCallID:requireEncryptionInfo:reportingAgent:notificationQueue:isMultiwaySession:dataPath:
initWithCameraStatusBits:aspectRatio:contentsRect:scaleFactor:
initWithCandidatePair:
initWithCapacity:
initWithCapacity:utteranceComplete:utteranceNumber:updateNumber:
initWithCaptureServer:
initWithCaptureSourceID:configuration:
initWithClient:type:streamToken:minNetworkBitrate:maxNetworkBitrate:mediaBitrate:qualityIndex:streamID:hasRepairStreamID:repairStreamID:repairMaxNetworkBitrate:subscribedTo:startOnDemand:streamGroupID:encoderGroupID:
initWithClient:type:streamToken:networkBitrate:mediaBitrate:qualityIndex:streamID:streamGroupID:
initWithClient:type:streamToken:streamID:streamGroupID:
initWithClientDictionary:
initWithClientPid:
initWithClientPid:ssrc:
initWithClientPid:ssrc:transportSessionID:
initWithClientUUID:
initWithClientUUID:transportType:
initWithCodecType:
initWithCoder:
initWithConfidence:text:range:
initWithConfig:audioCallback:context:audioDirection:
initWithConfig:delegate:
initWithConfig:delegate:queue:
initWithConfig:delegate:reportingAgent:statisticsCollector:transmitterHandle:
initWithConfig:pid:
initWithConfigDict:
initWithConfiguration:
initWithConfigurationType:supportedAudioRules:streamIDGenerator:
initWithConnection:connection:error:
initWithConnectionResult:type:
initWithConnectionType:maxBandwidth:
initWithConnections:multiplexedConnection:error:
initWithContentsOfFile:
initWithControlChannel:remoteVersion:
initWithConvertedFrameHandler:context:
initWithCreationTime:screenResolution:abSwitches:
initWithData:
initWithData:encoding:
initWithDelegate:
initWithDelegate:audioSessionId:channelIndex:sourceContext:sourceProcess:sinkContext:sinkProcess:clientPid:isPrewarmingClient:spatialToken:
initWithDelegate:bufferLength:dispatchQueue:
initWithDelegate:connectionManager:
initWithDelegate:connectionManager:reportingAgent:
initWithDelegate:connectionManager:uplinkStatsCollector:downlinkStatsCollector:reportingAgent:transportSessionID:streamID:mediaQueue:
initWithDelegate:delegateQueue:format:options:error:
initWithDelegate:dumpID:isUplink:reportingAgent:
initWithDelegate:mode:parameters:
initWithDelegate:params:
initWithDelegate:queue:
initWithDelegate:statisticsCollector:mode:
initWithDelegate:streamToken:
initWithDelegate:withConfig:
initWithDestination:token:dataPath:error:
initWithDeviceID:
initWithDeviceRole:transportType:isGKVoiceChat:reportingHierarchyToken:
initWithDictionary:
initWithDomain:code:userInfo:
initWithDummyInformation
initWithEncodedDictionary:
initWithFloat:
initWithFormatType:
initWithFrameWidth:frameHeight:frameRate:
initWithFrameWidth:frameHeight:frameRate:payload:
initWithFrameWidth:frameHeight:frameRate:payload:priority:
initWithFrequencyRange:
initWithGroupID:mediaType:subtype:syncGroupID:
initWithGroupID:mediaType:subtype:syncGroupID:cipherSuite:
initWithHandle:callId:localSSRC:
initWithHandle:callId:localSSRC:enableNetworkMonitor:
initWithHandle:localSSRC:
initWithHandler:
initWithHandler:threadPriority:threadOptions:threadIdentifier:
initWithHardwareSettings:
initWithHeight:width:framerate:screenCaptureDisplayID:
initWithIDSDatagramChannel:mode:
initWithIDSDestination:
initWithIDSDestination:callID:error:
initWithIDSDestination:configurationDict:negotiationData:delegate:processId:isGKVoiceChat:
initWithIDSDestination:isOriginator:callID:error:
initWithIDSDestination:isOriginator:error:
initWithIDSSocket:
initWithIDSSocketDescriptor:
initWithIncomingSSRC:acceptPacketType:
initWithInt:
initWithInteger:
initWithIntervalMilliseconds:callbackBlock:
initWithIntervalMilliseconds:callbackBlock:clientQueue:
initWithIntervalSeconds:callbackBlock:
initWithIntervalSeconds:callbackBlock:clientQueue:
initWithItems:timeRange:
initWithKeyFrameInterval:framerate:weightFactor:
initWithLinkContext:dataChannelToken:
initWithLocalAddress:callID:error:
initWithLocalAddress:error:
initWithLocalAddress:isOriginator:callID:error:
initWithLocalAddress:isOriginator:error:
initWithLocalAddress:networkSockets:IDSDestination:connectionClientID:callID:options:error:
initWithLocalAddress:networkSockets:IDSDestination:rtpConnectionClientID:rtcpConnectionClientID:callID:options:error:
initWithLocalCallID:remoteCallID:isCaller:sharedSecret:error:
initWithLocalConfiguration:
initWithLocalSettings:
initWithMediaQueue:delegate:
initWithMediaType:
initWithMediaType:outputSettings:
initWithMediaType:outputSettings:sourceFormatHint:
initWithMediaType:requesterID:requesteeID:
initWithMediaType:requesterID:requesteeID:transactionID:
initWithMicContext:speakerContext:
initWithMode:
initWithMode:clientPid:
initWithMode:connectionType:maxBandwidth:
initWithMode:error:
initWithMode:localSettings:
initWithMode:options:error:
initWithMode:serverBagDict:
initWithMultiwayEnabled:
initWithNWConnectionClientID:options:error:
initWithNetworkBitrate:bundlingAppliedByCodec:audioCodecBitrate:packetsPerBundle:redNumPayloads:payloadSize:headerSize:payloadConfig:
initWithNetworkSockets:callID:error:
initWithNetworkSockets:isOriginator:callID:error:
initWithNetworkSockets:isOriginator:error:
initWithNetworkSockets:options:error:
initWithNotificationQueue:reportingAgent:
initWithNotificationQueue:reportingAgent:notificationHandler:eventHandler:handlerQueue:context:
initWithObjects:
initWithObjectsAndKeys:
initWithOffer:error:
initWithOffer:options:error:
initWithOperatingMode:bundlingScheme:packetHandler:packetHandlerContext:
initWithOperatingMode:withBitrateCap:useCaseWatchContinuity:
initWithOptions:
initWithOptions:deviceRole:error:
initWithOutputURL:transactionID:videoCodec:
initWithOutputWidth:outputHeight:formatType:
initWithPacketID:
initWithPacketID:datagram:datagramSize:
initWithParser:rtpPort:payloads:
initWithParticipantID:data:delegate:queue:
initWithPattern:options:error:
initWithPayload:encodeVideoRules:decodeVideoRules:videoParameterSupport:
initWithPayload:isSecondary:sbr:samplesPerBlock:
initWithPayload:transportType:encodingType:
initWithPayloadConfig:index:rtpSampleRate:streamGroupID:
initWithPayloadConfig:rtpSampleRate:
initWithPeriodCount:framesPerBasePeriod:
initWithPhoneContinuity:allowAudioSwitching:sbr:aacBlockSize:
initWithPhoneContinuity:allowAudioSwitching:sbr:aacBlockSize:isLowLatencyAudio:
initWithPixelBuffer:depthPixelBuffer:time:imageData:delegate:
initWithPixelBuffer:time:imageData:
initWithPolicies:
initWithPort:delegate:error:
initWithProbingResults:linkProbingResultConfig:
initWithProcessId:
initWithProcessId:delegate:delegateQueue:
initWithQueueSize:shouldBlockWhenFull:queueWaitTimeMs:useExternalThread:
initWithRTCPPacket:
initWithRTPHandle:reportingAgent:receiverStats:dumpID:reportingParentID:
initWithRTPHandle:reportingAgent:receiverStats:dumpID:reportingParentID:statisticsCollector:lowTimestampPrecision:
initWithRTPNWConnectionClientID:rtcpNWConnectionClientID:options:error:
initWithRTPNWConnectionID:RTCPNWConnectionID:handlerQueue:context:notificationHandler:eventHandler:
initWithRTPSocket:RTCPSocket:
initWithRTPSocket:RTCPSocket:notificationHandler:eventHandler:handlerQueue:context:
initWithRTTThreshold:lossRateThreshold:
initWithRedPayloadType:sampleRate:samplesPerFrame:numPayloads:maxDelay:includeSequenceOffset:
initWithRedundancyControllerMode:maxAllowedRedundancyPercentage:mediaControlInfoFECFeedbackVersion:
initWithRelayRequestDictionary:withCallID:relayType:errorCode:
initWithRelayType:relayIOType:
initWithRemoteVideoClient:
initWithReportingAgent:
initWithRotationAngle:formatType:
initWithRotationAngle:width:height:formatType:
initWithSFTranscription:utteranceNumber:updateNumber:isLocal:isFinal:streamToken:
initWithSRTPInfo:
initWithSSRC:
initWithSSRC:allowRTCPFB:videoRuleCollections:featureStrings:isCellular16x9Capable:tilesPerFrame:ltrpEnabled:
initWithSSRC:audioPayloads:
initWithSSRC:videoRuleCollections:screenSize:aspectRatioPortrait:aspectRatioLandscape:orientationMismatchAspectRatioLandscape:
initWithScreenSSRC:allowRTCPFB:videoRuleCollections:featureStrings:isCellular16x9Capable:customVideoWidth:customVideoHeight:tilesPerFrame:ltrpEnabled:pixelFormats:hdrModesSupported:
initWithSendDelegate:clientPid:delegate:delegateQueue:
initWithService:
initWithSessionID:participantID:participantUUID:optionalTopics:participantConfig:transactionDelegate:
initWithSessionID:participantID:participantUUID:participantConfig:transactionDelegate:
initWithSharedSocket:
initWithSocket:remoteAddress:packetFilter:
initWithSocketDescriptor:
initWithSocketDescriptor:token:error:
initWithSocketDictionary:notificationHandler:eventHandler:handlerQueue:context:
initWithSourceSampleRate:destinationSampleRate:
initWithStatisticsCollector:
initWithStreamConfig:
initWithStreamConfig:payloadConfigs:streamGroupID:
initWithStreamConfig:payloadConfigs:streamGroupID:defaultConfig:
initWithStreamDescription:
initWithStreamGroupConfig:
initWithStreamGroupConfig:defaultConfig:
initWithStreamIDGenerator:sessionMode:supportedAudioRules:
initWithStreamInputID:format:delegate:delegateQueue:remoteQueue:
initWithStreamInputID:streamToken:networkClockID:
initWithStreamToken:
initWithStreamToken:captionsSource:
initWithStreamToken:clientProcessID:synchronizationDelegate:delegate:delegateQueue:
initWithStreamToken:delegate:
initWithStreamToken:delegate:queue:error:
initWithStreamToken:error:
initWithStreamToken:format:bufferLength:
initWithStreamToken:messenger:
initWithStreamToken:powerSpectrumSource:
initWithStreamToken:queue:error:
initWithStreamToken:requesterID:delegate:dispatchQueue:
initWithStreams:captureFramerate:
initWithTapDescription:
initWithTargetBitrateCap:
initWithTelephonySubscriptionSlot:
initWithText:confidence:range:
initWithTimeIntervalSinceNow:
initWithTopicKey:strings:allowConcurrent:controlChannel:sendCompletionHandler:receiveHandler:
initWithTopicKey:strings:allowConcurrent:requireReliable:controlChannel:sendCompletionHandler:receiveHandler:sendMessageDataCompletionHandler:receiveMessageDictionaryHandler:
initWithTopicKey:strings:allowConcurrent:requireReliable:controlChannel:sendMessageDataCompletionHandler:receiveMessageDictionaryHandler:
initWithTransportSessionID:
initWithTransportSessionID:idsParticipantID:ssrc:streamToken:
initWithTransportSessionID:localSSRC:
initWithTransportSessionID:options:
initWithTransportSessionID:participantID:transactionID:transactionDelegate:
initWithTransportSessionID:reportingAgent:
initWithTransportSessionID:reportingAgent:mode:
initWithTransportToken:configuration:delegate:queue:
initWithTransportToken:configuration:negotiationData:delegate:queue:
initWithType:
initWithType:version:
initWithU1Config:
initWithURL:fileType:error:
initWithUTF8String:
initWithUUID:
initWithUUIDBytes:
initWithUUIDString:
initWithUnsignedChar:
initWithUnsignedInt:
initWithUnsignedInteger:
initWithUnsignedShort:
initWithUtteranceNumber:updateNumber:isLocal:isFinal:streamToken:
initWithVideoCodecs:imageTypes:capabilities:multiwayCapabilities:
initWithVideoCodecs:imageTypes:capabilitiesOneToOne:capabilitiesMultiway:
initWithVideoStreams:streamInfos:reportingAgent:delegate:
initWithWidth:height:formatType:
initXPCCommandQueue
initialBitrateTierFromLearntBitrateWithLocalTechnology:remoteTech:defaultTier:
initialMemoryUsageMB
initialReceivedBytes
initialSecondaryRelaySetupDone
initialSentBytes
initialTierIndexForFaceTimeWithMaxTierIndex:
initializeAudioStreamWithConfig:maxIDSStreamIDCount:supportedAudioRules:isLowestQualityAudio:
initializeAudioStreamsWithSupportedRules:
initializeDisplayLink
initializeEncryption
initializeInterfaceType
initializeInterfaceTypeWithSocket:
initializeIsIPv6
initializeLocalConfiguration:negotiationData:deviceRole:preferredAudioPayload:
initializeLocalSwitches
initializeMediaNegotiator
initializeMultiwayAudioStreamGroup:forLocalConfig:
initializeMultiwayVideoStreamGroup:forLocalConfig:
initializeNetworkInfoWithSocket:
initializeNetworkMTU
initializeNewCall
initializeNewCallWithDeviceRole:
initializeNewCallWithDeviceRole:reportingHierarchyToken:
initializeOneToOneStreamGroup:forLocalConfig:
initializeParameterSets
initializeParticipantType
initializeReceiveQueue:error:
initializeSRTPInfo:
initializeStateStrings
initializeStreamGroupsForLocalConfig:
initializeStreamInputWithXPCArguments:result:error:
initializeStreamsWithSupportedAudioRules:
initializeTextPacket:withMediaPacket:
initializeTransportSessionWithIDSDestination:error:
initializeTransportSessionWithRTPNWConnectionID:rtcpNWConnectionID:error:
initializeTransportSessionWithSocketDictionary:error:
initializeTransportSetupInfoWithIDSDestination:error:
initializeTransportSetupInfoWithRTPSocket:RTCPSocket:
initializeTransportSetupInfoWithSocketDictionary:
initializeTransportSetupInfoWithTransportSession:
initializeVideoReceiver:reportingAgent:fecHeaderV1Enabled:videoJBEnabled:
initializeVideoStreamWithConfig:streamIndex:
initializeVideoStreamWithDefaults
initializeVideoStreams
initializeVideoTransmitter:videoRules:unpausing:reportingAgent:fecHeaderV1Enabled:isFECGeneratorEnabled:
initializeWRMInfo
initializeWRMUsingRtpHandle:
initiateRelayRequest
initiateResolutionChangeToWidth:height:rate:
initilizeStreamInfoMapWithStreamInfos:
injectAudioConfigType
inputAudioPowerSpectrumToken
inputAvailable
inputDevice
inputDevices
inputFormat
inputFrequencyMeteringEnabled
inputMeter
inputMeteringEnabled
insertInfoSubLayerIntoLayer:videoMode:
insertObject:atIndex:
insertStartBlockWithEvent:volume:timestamp:
insertStopBlockWithEndTimestamp:withPauseCompleteTimestamp:
insertSubLayerInLayer:videoMode:videoSlot:
insertionIndex:forValue:
intValue
integerValue
integerValueForKey:
integerValueForKey:defaultValue:
interarrivalJitter
interfaceForCurrentCall
interfaceKey:forInterface:directionKey:forDirection:
interfaceListenerDelegate
interfaceName
interfaceStateDidChangeWithWifiUp:cellUp:
internalBundleFactor
internalPushAudioSamples:
internalReceiverQueue
internalStopRelayThread
internalUpdateOneToOneBitrateCapsForConnection:
intersectSet:
intersectsSet:
invalidate
inviteDataForParticipantID:callID:remoteInviteData:nonCellularCandidateTimeout:block:queue:caller:
inviteDataForParticipantID:callID:remoteInviteData:nonCellularCandidateTimeout:error:
inviteDictionaryForCallID:remoteInviteDictionary:nonCellularCandidateTimeout:block:queue:
ioBufferDurationWithFirstIO:secondIO:
ipVersion
ipport
ipv6Prefix
is4x
isAMRCodecModeSupported:forBandwidth:
isActive
isActiveMediaType:
isAggregableDevice
isAllConnectionTypeValid:
isAppleSiliconMac
isAudioActive
isAudioCodecMaskValid
isAudioCodecValid
isAudioEnabled
isAudioMuted
isAudioOnly
isAudioPaused
isAudioPausedToStart
isAudioPayloadSupported:
isAudioPowerBelowThreshold
isAudioPowerMovingAverage
isAudioRunning
isAudioSending
isAudioStalled
isAudioStream:
isAudioStreamOnDemand:isLowestQualityAudio:
isAvailable
isBasebandNotificationOutOfKeyFrameCoolDownTime
isBasebandRATGreaterOrSameAsLTE:
isBetterConnection:asPrimary:
isBetterForSIPInviteWithSourceDestinationInfo:thanSession:
isBetterPrimaryConnectionAvailable
isBitrateOscillatingWithCurrentTierIndex:
isBluetoothDevice
isCNEnabled
isCNValid
isCallActive
isCallOngoing
isCaller
isCameraZoomAvailable
isCaptioningSupported
isCaptionsSupported
isCaptureSIFRPreferred
isCellular16x9Capable
isCellular16x9EncodeCapable
isCellularTappingSupported
isClientInProcess
isClientSpecificUserInfoSupported
isClientSpecificUserInfoSupported:
isCodecModeChangeRequestValid:
isCodecModeSupported:forBandwidth:withPayload:
isComfortNoise
isCompoundStreamIDsIncreased
isCongested
isConnectedAndAllowAdditionalConnection
isConnectedOnIPv6ForActiveConnectionWithQuality:
isConnectedOnRelayForActiveConnectionWithQuality:
isConnectedToSession
isControlChannelDatagram:
isCurrentDTXEnabled
isCurrentNetworkBad
isCurrentPayloadTypeValid
isDTLSEnabled
isDTMF
isDTMFValid
isDTXEmptyPacket:
isDTXEnabled
isDecodeSupported
isDecryptionTimeOutEnabled
isDecryptionTimeoutEnabled
isDefaultMode
isDefaultPayloadConfig:index:rtpSampleRate:streamGroupID:
isDefaultPayloadConfigsWithStreamConfig:payloadConfigs:streamGroupID:
isDefaultPayloadConfigsWithStreamGroupConfig:
isDefaultSettings
isDegraded
isDemuxNeeded
isDeviceLargeScreen
isDisplayPortrait
isDroppedByAQM
isDuplexAudioOnly
isDuplexVideoOnly
isDuplicateMessageID:messageHistory:participantID:
isDuplicationAllowed
isDuplicationAllowedForParticipantID:bucketsToSum:threshold:
isDuplicationConnectionCandidate:
isDuplicationEnabled
isDuplicationPending
isEVSCodecModeSupported:forBandwidth:
isEVSPayload:
isEffectsOn
isEnabledMediaType:
isEnabledStreamToken:
isEncodeSupported
isEncodingSqaures
isEncryptionEnabled
isEndToEndBasedBandwidthProbingEnabled
isEndToEndLink
isEqual:
isEqualFaceTimeSettings:
isEqualFeatureStrings:
isEqualFormat:
isEqualMomentsImageTypes:
isEqualMomentsVideoCodecs:
isEqualMultiwayAudioStreamSet:
isEqualMultiwayVideoStreamSet:
isEqualPayloads:
isEqualStreamGroupConfigs:
isEqualTo:
isEqualToData:
isEqualToDictionary:
isEqualToNumber:
isEqualToRelayIO:
isEqualToSet:
isEqualToString:
isEqualToVideoAttributes:
isExtraDelayForPacketRetransmissionsEnabled
isFECGeneratorEnabled
isFECVersion2Enabled
isFaceMeshTrackingEnabled
isFallbackStreamWithStreamGroupID:streamConfig:
isFarEndVersionInfoValid
isFeatureListStringExpectedForStreamType:
isFecGeneratorEnabled
isFeedbackReceived
isFirstInitialRampUpDone
isFirstTimestampArrived
isFollowSystemInputEnabled
isFollowSystemOutputEnabled
isFrequencyMeteringEnabled:
isFull
isGKVoiceChat
isGVAEncoderAvailable
isHDVideoSupported
isHEVC444DecodeSupported
isHalfDuplexAudio
isHandoverSupported
isHeaderFullOnly
isHiDefCapable
isHighPriorityAudioWithPower:voiceActive:
isHistorySupported
isIMac
isIMacPro
isIOS
isIPv6
isInCanvas
isInDaemon
isInThrottlingMode
isInitialized
isInitiator
isInputMeteringEnabled
isInterfaceOnCellularForActiveConnectionWithQuality:forLocalInterface:
isJitterBufferModeValid
isKeyExchangeEnabled
isKeyFrame:
isKindOfClass:
isLTRPEnabled
isLargeFrameRequestDisabled
isLastFrameProbingSequence
isLatencySensitiveMode
isLatencySensitiveModeEnabled
isLinkProbingActive
isLoaded
isLoadedCondition
isLoadedMutex
isLocalCellularInterfaceUsed
isLocalConstrained
isLocalDelegated
isLocalExpensive
isLocalIPPort:
isLocalOn5G
isLocalOnCellular
isLocalOnWiFi
isLocalOrRemoteOnCellular
isLocalSwitchEnabled:
isLossBasedAdaptationOn
isLost
isLowBitrateCodecPreferred:
isLowLatency
isLowLatencyAudio
isLowLatencyStreamType
isLowLatencyStreamType:
isMacBookAir
isMacBookWVGA
isMacPro
isMacmini
isMainThread
isMatchedPacket:size:
isMediaPacket:length:
isMediaStalled
isMediaStateAPISupportedForMediaType:
isMemberOfClass:
isMicrophoneMuted
isMixingVoiceWithMediaEnabled
isMutedTalkerNotificationRegistered
isNACKPacket:length:
isNegotiationCodecTypeAudio:
isNetworkSaturated
isNewRateSentOut
isOctetAligned
isOfferSupported
isOnSameIPPortWithConnection:
isOnSameInterfacesAndQRSessionWithConnection:
isOnSameInterfacesWithConnection:
isOnSameQRSessionWithConnection:
isOneToOne
isOneToOneEnabled
isOneToOneModeEnabled
isOneToOneRemoteMediaStalling
isOneToOneRemoteParticipantUsingScreen
isOneToOneScreenEnabled
isOneToOneStreamGroup:
isOneToOneTemporalSupportedForSettings:streamDirection:
isOneToOneUsingScreen
isOneToOneUsingVideo
isOperatingAtMaxBitrate
isOperatingAtMinBitrate
isOptimalConnection:asPrimary:interfaceMask:
isOpusInBandFecEnabled
isOuputMeteringEnabled
isOutputFrequencyMeteringEnabled
isOutputMeteringEnabled
isPTimePackable:
isParticipantActive:
isParticipantPeace:
isPaused
isPausedMediaType:
isPayloadAssociated:
isPayloadSupported:
isPayloadSupportedInFaceTime:
isPayloadTimestampWithinThreshold:forTimestamp:
isPayloadTypeMatched:
isPersistent
isPixelFormatAvailable
isPixelFormatValid:hdrMode:
isPowerSpectrumEnabled
isPreLionOS
isPreWarmStateEnabled
isPreferredDevice
isPreferredVideoRule:preferredFormat:
isPreviewRunning
isPrewarmingClient
isPrimaryConnectionImprovedFromHistory:withIndex:remoteStatsHistory:
isPrimaryConnectionSameAsConnection:
isProbingLargeFrameRequiredAtTime:
isRTCPEnabled
isRTCPForLossFeedbackEnabled
isRTCPPacket:length:
isRTCPPayload:
isRTCPReceiveCallbackEnabled
isRTCPSendEnabled
isRTCPTimeOutEnabled
isRTCPTimeoutEnabled
isRTPFilter
isRTPFlushBasebandFromVCRateControl
isRTPTimeOutEnabled
isRTPTimeoutEnabled
isRadioAccessTechnologyOnCellular:
isRadioTechnologyOnCellular:
isRadioTechnologyOnNewerThanLTE:
isRadioTechnologyOnWiFiOrLTEAndNewer:
isRateAdaptationEnabled
isRateLimitedMaxTimeExceeded
isReadyForMoreMediaData
isRedEnabled
isRedValid
isRedundancyControlEnabled
isRedundancyEnabled
isRedundancyStrategyResetPending
isRelayEnabled
isRelayForced
isRelayRunning
isRemoteAudioEnabled
isRemoteAudioPaused
isRemoteCameraSenderSupported
isRemoteCodecInfoValid
isRemoteConstrained
isRemoteDelegated
isRemoteDuplicating
isRemoteExpensive
isRemoteMediaQualityDegraded
isRemoteMediaStalled
isRemoteMuted
isRemoteOSPreLion
isRemoteOn5G
isRemoteOnCellular
isRemoteOnWiFi
isRemotePresentationLarge:
isRemoteScreenEnabled
isRemoteSessionStatsTooLateWithStatsId:
isRemoteVersionInfoValid
isRemoteVideoEnabled
isRemoteVideoPaused
isReplaceOnly
isResumed
isRoundTripTimeDecreasingOrLessThanMinEnvelope
isRunning
isSIPEnabled
isSIPHandleValid:
isSKEOptimizationEnabled
isSameAsConnection:
isSameSRTPConfig:
isSameSRTPKey:newKey:
isScreenActive
isSeamlessTransitionSupportedForStreamGroup:
isSecondDisplaySupportEnabled
isSecondary
isSecondaryPayload:
isSecureMessagingRequired
isSendBitrateLimited
isSenderProbingEnabled
isSendingEnabled
isSendingMedia
isServerBasedBandwidthProbingEnabled
isServerPacketRetransmissionEnabled
isServerPacketRetransmissionEnabledForVideo
isServerRTxEnabled
isSiriVoicePlayoutSupported
isSiriVoiceTapSupported
isSomethingConnectedToJack
isSpatialAudioSupported
isSpatialAudioSupportedIPad
isSpatialAudioSupportedIPhone
isSpatialAudioSupportedIPod
isSpeakerPhoneEnabled
isStalled
isStarted
isStartingWithPrefix:
isStreamAvailableForScope:
isStreamGroupActive:
isStreamGroupEnabled:
isStreamInputIDValid
isSubStream
isSubscribedTo
isSubsetOfSet:
isSubstream
isSupported
isSupportedChipID
isSupportedDeviceClass
isSupportedDirection:
isSupportedPayload:
isSuspended
isSwitchEnabled:
isTalkSpurtStart
isTalking
isTargetBitrateStabilized
isTelephony:
isTemporalScalingEnabled
isTemporalStream
isTunnelSocketClosed
isUpgraded
isUseCaseWatchContinuity
isUseCaseWatchContinuity:primaryPayload:
isUsedPayloadConfigAtIndex:streamGroupConfig:rtpTimestampRate:
isUsingSuppression
isUsingViceroyBlobFormat
isVADFilteringEnabled
isVPN
isVTPInitialized
isValidAudioConfig
isValidConfiguration:
isValidDevice
isValidForDirection:
isValidInputDevice
isValidProbingResult:
isValidStreamGroupIDFromConfig:defaultConfig:
isValidTextConfig
isValidTimingForKey:
isValidVideoConfig
isValidVideoPayloadOverride:
isVariableSliceModeEnabled
isVideoEnabled
isVideoFullHD
isVideoPaused
isVideoPausedToStart
isVideoProtected
isVideoQualityDegraded
isVideoQualityNearDegraded
isVideoRenderingSupported
isVideoRunning
isVideoSourceScreen
isVideoStopped
isVideoStoppedByVCRateControl
isVideoStream:
isVideoStreamOnDemand:
isVideoStreamSupported:
isVideoSuspended
isViewPointCorrectionSupported
isVirtualRelayLink
isVisible
isVoLTE:
isVoLTERateAdaptationEnabled
isWaitingForICEResult
isWifiToWifi
isWindowed
jbTargetEstimatorSynchronizer
jitterBufferMode
jitterBufferModeFromAVCJitterBufferMode:
jitterQueuePushPacket:
keepOvershootingRampDownBandwidth
keyFrameInterval
keyPathsForValuesAffectingNetworkQuality
keysSortedByValueUsingComparator:
keysWithMode:
landscapeAspectRatioX
landscapeAspectRatioY
largeFrameSizeAtCurrentBandwidth
largeFrameSizeRequested
lastActiveCall
lastActiveCallID
lastBasebandFlushCountChangeTime
lastCalledApiName
lastDecodedFrameTime
lastDisplayedFrameRTPTimestamp
lastFrameTime
lastInputAudioTimeStamp
lastKeyFrameSentTime
lastLastVideoStallDuration
lastNoVoiceActivityPacketCount
lastObject
lastPrimaryConnectionInUse
lastProbingArrivalTime
lastProbingSequenceTimeActual
lastProbingSequenceTimeExpect
lastRTPTimestamp
lastReceived
lastReceivedPacketTimestamp
lastReceivedRTCPPacketTime
lastReceivedRTPPacketTime
lastReceivedVideoRTPPacketTime
lastSentAudioHostTime
lastSentAudioSampleTime
lastUsedMKIBytes
lastVideoCallAlarmTime
lastVideoKeyFrameTime
lastVideoQualityNotificationUpdate
lastVideoRefreshFrameTime
latencySensitiveMode
latencySensitiveModeEnabled
latestOutgoingMessageIndex
layer
layoutWithAVCLayout:
learntBitrateForSegment:defaultValue:
length
lengthOfBytesUsingEncoding:
limitCameraDownlinkBitrateDuringSharing
limitRulesFromVideoRules:frameHeight:videoRules:
limitVideoRulesToMaxWidth:maxHeight:transportType:
limitingRule
limits
linkID
linkPreferenceOrder
linkProbingCapabilityVersion
linkProbingHandlerDelegate
linkUUID
listLock
listenForNotifications
listener
loadCannedVideoReplay
loadDefaultSettings
loadDefaultVCRCFeatureFlags:
loadPoliciesFromJsonFile
loadRelay
loadSessionConfigurationWithResourceName:
loadStorebagValues
localAddress
localBandwidthEstimation
localBitrateForCallID:
localCallInfo
localCamera
localCameraUID
localCellTech
localConfigurationWithData:deviceRole:preferredAudioPayload:
localConnectionData
localConnectionType
localFrameHeight
localFramerateForCallID:
localInterfaceName
localInterfaceType
localInterfaceTypeString
localLanguages
localLinkFlags
localLinkTypeSuggestionChangeTime
localOnWiFi
localPacketLossRateForCallID:
localParticipant
localParticipantID
localRATTypeOverride
localRelayConnectionData
localRelayRequestResponse
localRelayUpdate
localSSRC
localScreenAttributesForVideoAttributes:
localScreenPortraitAspectRatio
localSettings
localSwitches
localVideoAttributes
localVideoLayer:
localWRMLinkType
localWRMLinkTypeSuggestion
locale
localeWithLocaleIdentifier:
localeWithMediaBlobLanguage:
localizedCaseInsensitiveCompare:
localizedDescription
localizedFailureReason
lock
logAllStreamTokens
logConnectionSuccess
logDetailedNetworkInformation
logFilename:dumpID:logNameType:prefix:suffix:
logIdentity:
logPerfTimings
logPrefix
logRemoteParticipantInfo:
logSignalStrength
logTierInfo:
logTierPickerConfig:
logToDumpFilesWithString:
longLongValue
longTerm
longValue
loopLength
loopbackNegotiationDataWithData:
loopbackSessionWaitingForSIPInvite
loopbackSocketTunnel:receivedData:from:
lossEventCount
lossEventCountThresholdForBitrate:
lossEventIncreasingCount
lossEventOverThresholdRatio
lossRate:forParticipantID:
lossRateThreshold
lowFpsVideoEnabled
lowNetworkModeEnabled
ltrAckFeedbackType
ltrpEnabled
machineName
mainBundle
mainDisplay
mainRunLoop
makeInvalidKey
mapPacketMultiplexModeToRTPMode:
mapPacketMultiplexModeToSIPMode:
mappedKeyBytes:size:
mappedKeySize
mappedRemoteQualityIndexForQualityIndex:
margin
markAsFinished
markUnfinishedSessions
marketingName
matchedFeaturesStringForPayload:
matchesCallID:
matchesChannelTokenWithSourceDestinationInfo:
matchesOpenSessionForParticipantID:
matchesParticipantID:
matchesSourceDestinationInfo:
max2GRate
maxActiveScreenEncoders
maxActiveVideoDecoders
maxActiveVideoEncoders
maxAllowedAudioOnlyBitrateForConnection:
maxAllowedBitrate
maxAllowedBitrate2G
maxAllowedBitrate3G
maxAllowedBitrateForConnectionType:
maxAllowedBitrateForConnectionType:operatingMode:
maxAllowedBitrateForVCConnection:forLocalInterface:
maxAllowedBitrateForVCConnection:forLocalInterface:encodeRule:
maxAllowedBitrateForVCConnection:forLocalInterface:operatingMode:encodeRule:
maxAllowedBitrateHighRat
maxAllowedBitrateLTE
maxAllowedBitrateP2P
maxAllowedBitrateRuleForConnection:
maxAllowedBitrateTCPRelay
maxAllowedBitrateUSB
maxAllowedBitrateWifi
maxAllowedCellularBitrate
maxAllowedScreenShareBitrateForConnection:
maxAllowedScreenShareCellularBitrate
maxAudioNetworkBitrateForLocalInterfaceOnWiFi:isLowLatencyAudio:
maxAveragePacketDelayMs
maxBandwidth
maxBandwidthWithOperatingMode:connectionType:
maxBdatNetworkBitrateForVideoQuality:isLocalOnWiFi:isRedundancyRequested:
maxBitrate
maxBitrate2GDownlink
maxBitrate2GUplink
maxBitrate3GDownlink
maxBitrate3GUplink
maxBitrateExpensiveDownlink
maxBitrateExpensiveUplink
maxBitrateForConnectionType
maxBitrateKbps
maxBitrateNonExpensiveDownlink
maxBitrateNonExpensiveUplink
maxBitrateWiFiDownlink
maxBitrateWiFiUplink
maxCameraNetworkBitrateForVideoQuality:isLocalOnWiFi:isRedundancyRequested:isSharingEnabled:
maxCaptureCameraFrameRate
maxCaptureCameraFrameRateForMode:
maxCaptureFrameRateForMode:
maxCaptureResolution
maxChannelCountMic
maxChannelCountSpeaker
maxConnectionMTU
maxDelay
maxDisplayRefreshRate
maxEncoderPixels
maxEncryptedDataSize
maxFdatNetworkBitrateForVideoQuality:isLocalOnWiFi:isRedundancyRequested:
maxFpsCameraCaptureDuringSharing
maxFrameDurationMillis
maxFrameRateSupportedBackgroundBlur
maxFrameRateSupportedScreenShare
maxFramerate
maxFramerateFromStreamConfigs:
maxFrequency
maxFtxtNetworkBitrateForVideoQuality:isLocalOnWiFi:isRedundancyRequested:
maxIDSStreamIdCount
maxMTU
maxMultiwayFramerateSupported
maxNetworkBitrate
maxNetworkBitrateForStreamGroupID:videoQuality:isLocalOnWiFi:isRedundancyRequested:isSharingEnabled:
maxNetworkBitrateMultiwayAudioOnWifi:isLowLatencyAudio:
maxNetworkBitrateMultiwayVideoOnWifi:
maxOneToOneFramerateSupported
maxPacketSize
maxPacketsPerSecond
maxPtime
maxRedundancyPercentage
maxRemoteParticipants30fps
maxScreenEncodingSizeSupported
maxStreamFrameRate
maxSupportedTemporalLayers
maxTargetBitrate
maxTierBelowBitrate:maxTierIndex:minTierIndex:
maxTierIndex:
maxUDPPayloadSize
maxUnencryptedDataSize
maxVCPSupportedTemporalLayers
maxZoomFactor
maximumLengthOfBytesUsingEncoding:
maximumSamplesPerFrame
mediaBitratesForStreamToken:targetNetworkBitrate:
mediaBlobForVersion:negotiationData:
mediaBlobLanguageWithLocale:
mediaCellularRxBytes
mediaCellularTxBytes
mediaControlInfoFECFeedbackVersion
mediaControlInfoGenerator
mediaControlInfoGeneratorOptions
mediaControlInfoGeneratorType
mediaControlInfoSubVersion
mediaControlInfoVersion
mediaController:mediaSuggestionDidChange:
mediaEntries
mediaExcessiveCellularRxBytes
mediaExcessiveCellularTxBytes
mediaFlags
mediaFlagsWithPayloadConfig:
mediaNegotiatorVersionWithNegotiationProtocolVersion:
mediaQualityDegraded:
mediaQueue
mediaQueueDumpEnabled
mediaQueueThrottlingInterval
mediaState
mediaStateChangedForParticipant:
mediaStateForMediaStateMessageValue:
mediaStateForMediaType:
mediaStateMessageKeyForMediaType:
mediaStateMessageStreamGroupKeysForMediaType:
mediaStateMessageValueForMediaState:
mediaStates
mediaStream:didReceiveFlushRequestWithPayloads:
mediaStream:didReceiveNewMediaKeyIndex:
mediaStream:didReceiveRTPGapForMediaKeyIndex:
mediaStreamDelegate
mediaStreamDelegateQueue
mediaStreamGroupCoordinateSystem
mediaStreamGroupStateToVCStreamGroupState:
mediaStreamInfoArray
mediaStreams
mediaSubtype
mediaType
mediaTypeForMediaStateMessageKey:
mediaTypeToString:
mediaTypesFromStreamGroupID:
mediaWifiRxBytes
mediaWifiTxBytes
memoryUsageMB
mergeFrom:
mergeProbingResults:
messageExistingParticipantsPostUpgrade
messageForCommand:
messageHandler
messageMediaInitialStateToParticipant:
messageReceived:participantInfo:
messageReceivedDelegate
messageVCMomentsRequest:
messaging
messenger
messengerFromClientContext:
metaData
metadata
metadataGlobalInfo
metadataPositionalInfo
metadataSateWithUIState:
metadataWithStreamConfig:
meterServerDidDisconnect
meterServerDidDisconnect:
meterSpectrumCaptureWasInterrupted:
meterWithType:
meters
micBuffer
micCallback
micCallbackContext
micContext
micPowerRMS
micStreamInfo
micTimestamp
microphoneOnlyTierTable
microphoneU1
minBandwidth
minBitrate
minBitrateKbps
minFramerate
minFrequency
minKeyFrameGenerationIntervalForMode:
minMarginRequired
minNetworkBitrate
minParticipantCountSendVoiceActiveOnly
minSamplesCountFastBandwidthEstimation
minTargetBitrate
minTierAboveBitrate:maxTierIndex:minTierIndex:
minTierIndex:
minusSet:
mismatchedDisplayAspectRatioX
mismatchedDisplayAspectRatioY
mixingVoiceWithMediaEnabled
mode
moments:capabilitiesDidChange:
moments:didEndProcessingRequest:stillImageURL:movieURL:error:
moments:didStartProcessingRequest:error:
moments:shouldProcessRequest:recipientID:
momentsCapabilitiesWithNegotiationBlobMomentsSettings_Capabilities:
momentsCollectorDelegate
momentsImageTypes
momentsServerDidDisconnect:
momentsUseBestVideoRule
momentsUserPreferenceEnabled
momentsVideoCodecs
monitorBufferPool
mostBurstLoss
mostRecentStartedCall
multiplexedConnection
multiwayAudioNetworkBitrateCapCellular
multiwayAudioNetworkBitrateCapWifi
multiwayAudioStreamNegotiatorConfigForStreamConfig:
multiwayAudioStreams
multiwayAudioStreamsAtIndex:
multiwayAudioStreamsCount
multiwayAudioStreamsType
multiwayCapabilities
multiwayCapabilitiesWithBlobCapabilities:
multiwayConfig
multiwayMaxTierFromServerBag
multiwayToOneToOneSwitchConfigure
multiwayToOneToOneSwitchResume
multiwayVideoNetworkBitrateCapCellular
multiwayVideoNetworkBitrateCapWifi
multiwayVideoStreamAtIndex:
multiwayVideoStreamType
multiwayVideoStreams
multiwayVideoStreamsCount
mutableCopy
muteWithError:
muted
mutedPeers
mutex
nackGeneratorStorebagConfigVersion
name
nameForNetworkWithIPPort:interfaceName:
natMutex
natObserver
natTypeDictionary
natTypeForCallSessions:
natTypeForCommNATFlags:isCarrier:
nativeParticipantSupportsStreamGroupID:
nearestRedPayloadForTimestamp:
needsNewNumSamples:timestamp:
needsPacketThread
negotiateAudioAllowRecording:
negotiateAudioDTXPayload:
negotiateAudioPrimaryPayload:
negotiateAudioREDPayload:
negotiateAudioRules:
negotiateAudioSecondaryPayloads:
negotiateAudioSettings:
negotiateAudioUseSBR:
negotiateCaptionsWithCaptionsSettings:
negotiateFaceTimeSettings:
negotiateFeaturesString:forPayload:
negotiateHDRMode:videoResults:
negotiateMaxBandwidth:
negotiateMediaMaxBandwidth
negotiateMomentsWithMomentsSettings:
negotiateMultiwayAudioStreams:
negotiateMultiwayVideoStreams:
negotiateOneToOne:
negotiateOneToOneWithRemoteParticipant:
negotiatePayloads:withError:
negotiateRTCPFB:
negotiateScreenSettings:
negotiateStreamGroupConfig:remoteInviteBlob:
negotiateSwitches
negotiateSwitchesForIsCaller:
negotiateTilesPerFrame:negotiatedSettings:
negotiateU1SettingsForStreamGroup:
negotiateVideoMaxResolutionWithEncodeRules:decodeRules:isEncoder:
negotiateVideoSettings:
negotiatedAudioPayloadTypes
negotiatedAudioPayloads
negotiatedAudioSettings
negotiatedCameraSettingsBetweenLocalU1Config:remoteU1Config:
negotiatedCaptionsSettings
negotiatedFaceTimeSettings
negotiatedFeaturesStringWithLocalFeaturesString:remoteFeaturesString:
negotiatedMicrophoneSettingsBetweenLocalU1Config:remoteU1Config:
negotiatedMomentsSettings
negotiatedReceivingFramerate
negotiatedResultsForGroupID:
negotiatedResultsForGroupID:localU1Config:remoteU1Config:
negotiatedScreenEnabled
negotiatedScreenSettings
negotiatedScreenSettingsBetweenLocalU1Config:remoteU1Config:
negotiatedSettings
negotiatedStreamGroupConfigForGroupID:negotiatedStreamGroupConfigs:
negotiatedStreamGroups
negotiatedSwitches
negotiatedSystemAudioSettingsBetweenLocalU1Config:remoteU1Config:
negotiatedVideoEnabled
negotiatedVideoSettings
negotiationBlobFromData:
negotiationCipherSuiteWithCipherSuite:
negotiationCodecTypeWithCodecType:
negotiationDataForLoopbackParticipant
negotiationDataForProtocolVersion:
negotiationDataWithVersion1:version2:
negotiationDataWithVersion:mediaBlob:
negotiationPackedPTimeWithPTime:
negotiationPackedRtpSampleRateWithRTPSampleRate:
negotiationPayloadFromPayload:
negotiationProtocolMask
negotiatorCipherSuite:fromMediaStreamConfig:
negotiatorSettingsForMode:deviceRole:options:errorString:
networkAgentRefCount
networkBitrate
networkClockID
networkConditionsTimeoutInSeconds
networkFeedbackController
networkInterfaceType
networkMTU
networkOverheadInBytesWithNumOfStreamId:isPriorityIncluded:
networkPayload
networkQuality
networkQualityForCallID:
networkQualityGraphLayer
networkQualityGraphLayer_
networkQualityUpdateTimer
networkQualityUpdateTimer_
networkReceivePackets
networkServiceTime
networkStateDidChange
networkType
newAggregatedBandwidthTableWithRedundancy:redundancyEnabledFor720Stream:enableMap:
newArrayOfStreamIdsForPacket:
newAudioConverterWithInputFormat:outputFormat:withError:
newAudioMultiwayConfigWithPList:audioRules:maxIDSStreamIDCount:streamIDGenerator:ssrc:
newAudioObjectStringPropertyWithSelector:scope:element:
newAudioRateControlConfigWithMediaControlInfoVersion:enableFeedbackController:isOneToOne:
newAudioSendGroupConfigWithStreamGroupID:streamGroupConfiguration:
newAudioSessionMediaPropertiesForSystemAudioWithPreferredClient:audioUnitProperties:
newAudioSessionMediaPropertiesWithPreferredClient:audioUnitProperties:
newAudioStreamGroupStreamConfigWithPList:supportedAudioRules:maxIDSStreamIDCount:streamIDGenerator:ssrc:groupID:
newAudioStreamOneToOneConfigurationWithStreamGroupId:
newAudioStreamSendGroupWithConfig:streamGroupID:
newAudioTapWithAudioStreamBasicDescription:
newAudioTapWithCaptureContext:audioFormat:
newAudioTapWithProcessID:audioFormat:
newAudioTapWithSessionType:audioFormat:
newAudioTierForPayloadConfig:bundlingAppliedByCodec:audioCodecBitrate:packetsPerBundle:redNumPayloads:headerSize:
newAudioUnitPropertiesForSystemAudioWithPreferredClient:
newAudioUnitPropertiesWithPreferredClient:
newBandwidthConfigurations
newCVPixelBufferFromXPCDictionary:isDepth:
newClientDiedDictionary
newCompactPayloadWithPayloadConfig:rtpSampleRate:
newCompressedBlob:
newConfigForPayloadType:
newContext
newControlInfo
newControlInfoFromPool
newControlInfoWithBuffer:length:optionalControlInfo:
newControllerSettingsWithNewClient:
newDataFromMessage:topic:transactionID:isReliable:transactionDelegate:
newDataStreamInputConfigurationWithPList:
newDecompressedBlob:
newDeviceList
newDictionaryForRequest:
newDictionaryFromUnpackedMessage:
newDictionaryFromUnpackedMessage:forTopic:controlChannelVersion:
newDictionaryFromUnpackedMessageV2:
newDictionaryFromUnpackedMomentsMessage:
newEmptyFeatureString
newEmptyFeatureStringWithPayload:
newEncodedCFDictionary
newEncodedDictionary
newEncryptedMessageFromMessage:sequenceNumber:transactionDelegate:
newEncryptionInfoWithMediaKeyIndex:
newEncryptionLabelWithLocalUUID:remoteUUID:
newFeatureListStringsDictForGroupID:isOneToOne:
newFeatureListStringsWithConfiguration:
newFeatureStrings
newFormatDescriptionForCaptureSource:
newLocalFeaturesStringWithType:aspectRatioFLS:
newMKIWithBytes:bufferSize:
newMediaBlobWithRemoteMediaBlob:localCallID:isLowBitrateCodecPreferred:
newMediaControlInfo
newMediaControlInfoWithBuffer:length:optionalControlInfo:
newMediaNegotiatorAudioConfiguration
newMediaNegotiatorAudioConfigurationForMediaType:
newMediaNegotiatorAudioConfigurationWithAllowAudioSwitching:useSBR:aacBlockSize:
newMediaStreamConfigWithStreamConfig:streamGroupConfig:maxIDSStreamIDCount:
newMediaStreamConfigWithStreamGroupConfig:streamConfig:rateControlConfig:multiwayConfig:
newMediaStreamInfoWithNegotiationConfig:streamToken:
newMediaStreamWithNegotiationConfig:streamToken:
newMultiwayAudioStream
newMultiwayConfigWithStreamGroupStreamConfig:maxIDSStreamIDCount:groupID:
newMultiwayVideoStream
newNSDictionaryFromNSDictionary:
newNSDictionaryFromNSError:
newNSDictionaryFromXPCDictionary:
newNSDictionaryWidthNSDictionary:
newNSErrorFromNSDictionary:
newNSErrorWithErrorDictionary:
newNWConnectionWithIPAddress:srcPort:
newNegotiatedSystemAudioResultsWithRemoteMediaBlob:
newNegotiatorForOneToOneWithRemoteParticipant:
newNetworkBitrateString:
newOneToOneAudioStreamConfigWithAudioSettings:streamDirection:streamGroupId:streamSsrc:
newOneToOneVideoStreamConfigWithStreamDirection:streamGroupId:streamSsrc:encodingType:videoSettings:
newOneToOneVideoStreamMultiwayConfiguration:streamGroupId:videoSettings:streamDirection:
newPackedMessageFromDictionary:forTopic:controlChannelVersion:
newPackedMessageFromDictionaryV2:
newPackedMessageFromMomentsDictionary:
newPacketWithRTCPPacket:packetLength:
newParticipantOneToOneConfigWithIDSParticipantID:isLocal:mediaControlInfoVersion:videoEnabled:screenEnabled:remoteParticipant:
newPayloadConfigForCodecConfig:streamConfig:inputSampleRate:
newPowerSpectrumMeterWithBinCount:refreshRate:delegate:error:
newQueueForStreamToken:videoMode:
newQueueForStreamToken:videoMode:imageQueueProtected:
newRTPSocketDictionary:rtpSourcePort:
newRandomParticipantID
newRelayIOWithCompletionHandler:
newRemoteQueueWithServerPid:
newRemoteScreenAttributesForOrientation:
newRequestWithArguments:state:
newRequestWithMediaType:mode:requesteeID:
newRequestWithMediaType:requesteeID:
newSKEBlobWithRemoteSKEBlob:
newScreenFeatureString
newSecureArchivedDataWithRootObject:
newServerDiedDictionary
newSessionWithDeviceRole:reportingHierarchyToken:
newStreamConfigFromMultiwayAudioStream:
newStreamConfigFromMultiwayVideoStream:
newStreamGroupCodecConfigForPayload:
newStreamGroupConfigWithNegotiationConfig:
newStreamGroupConfigurationWithPList:supportedAudioRules:streamIDGenerator:
newStreamGroupConfigurationsWithSupportedAudioRules:streamIDGenerator:
newStreamGroupNegotiationConfigForStreamGroup:
newStreamInfoWithAudioStreamWithConfiguration:idsDestination:isMultiway:streamGroupID:
newStreamInfoWithAudioStreamWithConfiguration:streamToken:isMultiway:streamGroupID:
newStreamInfoWithVideoStreamWithConfiguration:idsDestination:groupID:
newStreamInfoWithVideoStreamWithConfiguration:streamGroupID:
newStreamInputConfigurations
newStreamInputID
newTimeoutDictionary
newUnserializedMediaBlob:
newVideoCodecSet
newVideoMultiwayConfigWithPList:codecType:streamIDGenerator:ssrc:
newVideoPacketBufferConfig:
newVideoRateControlConfigWithMediaControlInfoVersion:enableMediaControlInfoGenerator:enableFeedbackController:isOneToOne:
newVideoRuleCollectionsForScreen:isCellular16x9Capable:isLocalConfig:
newVideoSendGroupConfigWithStreamGroupID:streamGroupConfiguration:
newVideoStreamGroupStreamConfigWithPList:streamIDGenerator:ssrc:groupID:shouldSkip:
newVideoStreamGroupWithStreamGroupConfig:
newVideoStreamInputConfigurationWithPList:
newVideoStreamKeyFrameScheduleWithStreamIDs:
newVideoStreamOneToOneConfigurationWithStreamGroupId:
newVideoStreamWithConfig:groupID:
newVideoTransmitterConfigWithVideoStreamConfig:
newXPCDictionaryFromNSDictionary:error:
newXPCDictionaryFromNSDictionary:forEvent:
newXPCDictionaryWithCVPixelBuffer:depthPixelBuffer:time:
nextAudioInterval:
nextLine
nextObject
nextTransactionID
noRemoteDuplicationThresholdFast
noRemotePacketInterval
noRemotePacketsTimeout
noServerStatsActivityDetected
nofityDelegateReceivedRemoteFrame:frameTime:cameraStatusBits:newRemoteVideoAttributes:remoteScreenAttributes:
nominateConnection:asPrimary:interfaceMask:demote:connectionPriority:replaceOnly:
nonConnectedSocketWithIPAddress:srcPort:error:
normalizeBDCD:
notANumber
notificationDelegate
notifyCachedStateForStreamToken:
notifyChangeInActiveMediaBitrateTo:from:
notifyClientsWithStreamToken:service:arguments:
notifyCodecModeChangeToCT:
notifyDelegateActiveConnectionDidChange
notifyDelegateAndEndCall:didRemoteCancel:error:
notifyDelegateDidReceiveRTCPPackets:
notifyDelegateOfLocalVariablesChange
notifyDelegateSessionStarted
notifyDelegateToCancelRelay
notifyDeviceListChanged
notifyFinishWithRequest:didSucceed:fileSize:
notifyLocalFinishWithRequest:didSucceed:
notifyRemoteFinishWithRequest:didSucceed:fileSize:
notifyRemoteOfCellTechChange:remoteParticipant:
nowrd
nowrdAcc
nowrdShort
null
numBufferBytesAvailable
numPacketReceived
numPacketSent
numPayloads
numRedundantPayloads
numTilesPerVideoFrameForHDRMode:
numberFromString:
numberOfMatchesInString:options:range:
numberOfPacketsInOutputQueue
numberOfPacketsWaitingInOutputQueue
numberWithDouble:
numberWithFloat:
numberWithInt:
numberWithInteger:
numberWithLongLong:
numberWithShort:
numberWithUnsignedChar:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedLong:
numberWithUnsignedLongLong:
numberWithUnsignedShort:
nwActivity
nwConnectionCongestionDetector
nwMonitor
nwMonitorEventHandlerQueue
nwNotificationProcessed
objectAtIndex:
objectAtIndexedSubscript:
objectEnumerator
objectForKey:
objectForKeyedSubscript:
objectForSlot:
objectsAtIndexes:
observeValueForKeyPath:ofObject:change:context:
observer
observer_
octetAligned
octetsSent
offer
onCaptureFrame:audioTS:audioHT:videoHT:cameraBits:
onCaptureScreenFrame:frameTime:orientation:
onCaptureVideoFrame:frameTime:switching:camera:videoMirrored:
onConfigureStreamWithConfiguration:error:
onDidResumeAudio
onPauseAudioStreams
onPauseWithCompletionHandler:
onPlayVideo:frameTime:cameraStatusBits:
onRTCPTimeout
onRTPTimeout
onResumeWithCompletionHandler:
onSendRTCPPacket
onStartAudioIO
onStartWithCompletionHandler:
onStop
onStopWithCompletionHandler:
onVideoFrame:frameTime:attribute:
oneToOneBitrateCapForConnectionWithType:
oneToOneConfig
oneToOneIsSupportedAudioStreamGroup:
oneToOneIsSupportedVideoStreamGroup:
oneToOneModeEnabled
oneToOneModeSupported
oneToOneOperatingMode
oneToOneRemoteParticipant
oneToOneSettings
oneToOneStreamConfig
oneToOneStreamIndex
oneToOneTierTableForStreamGroupID:splitType:
oneToOneToMultiwaySwitchConfigure
oneToOneToMultiwaySwitchResume
oneToOneVideoStreamRedundancyMode
oneToOneVideoStreamRedundancyPercentage
opaqueConf
opaqueData
openSessionForParticipant:
operatingBitrate
operatingMode
operatingModeForAudioStreamMode:
operatingModeForVideoStreamType:
operatingModeToTierPickerMode:
operation
operationAsString:
optInAllStreamsForConnection:
optInStreamIDsForConnection:
optInStreamIDsForNewPrimaryConnection:oldPrimaryConnection:
optInStreamWithIDSStreamIDs:
optIntoExistingSubscribedStreams
optIntoExistingSubscribedStreamsForConnection:
optOutAllStreamsForConnection:
optOutAllStreamsForNonPrimaryConnections
optOutStreamIDs:
optOutStreamIDsForNonPrimaryConnection:sentOnConnection:
optOutStreamWithIDSStreamIDs:
optedInAudioStreamID
optedInNetworkBitrateForStreamGroup:
optedInStreamIDForStreamGroupID:
optedInVideoStreamID
optionalArg
optionalPackedPayloaWithDefaultConfig:
optionalPackedPayload
optionalPayloadCompressWithConfig:
orientation
orientationMismatchAspectRatioLandscape
origin
osChannelInfoLog
osVersion
outgoingMessageQueue
outputAudioPowerSpectrumToken
outputDevice
outputDevices
outputFormat
outputFrequencyMeteringEnabled
outputMeterLevel
outputMeteringEnabled
outputURL
overrideConfigWithDefaults
overrideVideoStreamConfigWithDefaults:streamGroupID:
owrd
pTime
pTimeWithNegotiationPackedPTime:
packMeters:withLength:
packedPayload
packetCountInNetworkQueue
packetExpirationTime
packetFilter
packetID
packetLateAndMissingRatio
packetLossPercentage
packetLossRate
packetLossRate5Secs
packetLossRateAccum
packetLossRateAudio
packetLossRateCount
packetLossRateForCallID:
packetLossRateVideo
packetMultiplexMode
packetRelay:didStart:error:
packetRelay:didStop:error:
packetThread
packetType
packetsPerBundle
packetsSent
packetsSinceShortMediaStall
packetsSinceStall
parameterSet
parameterSetForPayload:
parameterSetStringFromPayloadSettings:
parameterSets
parentNWActivity
parentStreamID
parseAudioFormatAttribute:
parseAudioMediaAttributes:
parseIP:
parseImageAttributeRules:
parseMediaLineHeader:mediaType:supportedPayloads:rtpPort:
parsePacket:
parseRTCPPort:
parseRTPID:
parseSDPFromString:
parseSessionAttributes:
parsingDone
participant:audioEnabled:didSucceed:error:
participant:audioPaused:didSucceed:error:
participant:frequencyLevelsDidChange:
participant:mediaPrioritiesDidChange:
participant:mediaStateDidChange:forMediaType:didSucceed:error:
participant:remoteAudioEnabledDidChange:
participant:remoteAudioPausedDidChange:
participant:remoteMediaStateDidChange:forMediaType:
participant:remoteScreenEnabledDidChange:
participant:remoteVideoEnabledDidChange:
participant:remoteVideoPausedDidChange:
participant:screenEnabled:didSucceed:error:
participant:spatialAudioSourceIDDidChange:
participant:videoEnabled:didSucceed:error:
participant:videoPaused:didSucceed:error:
participantConfigFromXPCDictionary:
participantDataWithMediaNegotiatorVersion:participantData:
participantDataWithParticipantData:isReinit:
participantDataWithParticipantInfo:
participantForID:
participantID
participantId
participantInfoWithParticipantData:
participantMicrophoneToken
participantScreenToken
participantSpatialAudioSourceIDs
participantStateToString:
participantStreamTokens
participantVideoToken
participants
participantsToAdd
participantsToString
passMediaControlInfo:isFillBlobCallback:
passMessage:sequence:fromParticipant:
path
pathExtension
pathForResource:ofType:
pause
pauseAudioStreams:
pauseHeartbeatInterval
pauseLock
pauseMediaStreams
pausePreview
pauseStreams
pauseStreams:
pauseVideo
pauseVideo:
pauseVideoByUser:
pauseVideoConferences:
paused
pausedAudioHeartBeat
payloadConfig
payloadConfigurationWithPayloadConfig:
payloadConfigurationWithStreamGroupID:index:
payloadFlagWithPayload:
payloadFlags
payloadForCodecType:
payloadForVideoPayload:
payloadFromFlag:
payloadFromNegotiationPayload:
payloadHistoryDescription
payloadOctetAligned
payloadPreference
payloadSpecOrPayloads
payloadSpecWithStreamConfig:payloadConfigs:payloadSpecs:
payloadWithRTPPayload:
payloads
payloadsAtIndex:
payloadsCount
payloadsType
payloadsWithPayloadBit:
payloadsWithStreamConfig:payloadBitmap:
peerCN
peerPublishedStreamCallback
peerSubscribedStreamCallback
peerSubscribedStreams
peerSubscription:streamID:
pendingPrimaryConnection
pendingRelayCount
pendingRequestCount
pendingSecondaryConnection
pendingVideoStreams
percentage
perfTimers
perfTimings
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
periodicHealthPrintDispatchSource
periodicReportingEnabled
periodicTask:
persistent
pickBestHDRMode:
pickBestPixelFormatFromSet:
pickBestPixelFormatFromSet:preferenceList:count:acceptDefault:
pickFeaturesStringForPayload:featureListDict:remote:
pixelBuffer
pixelFormat
pixelFormatCollections
pixelFormats
placeRemainingItems:placedItems:leftItem:rightItem:
plrEnvelopeValue
pointerValue
poolLock
poolSize
popCompletionHandler
port
portraitAspectRatioX
portraitAspectRatioY
portraitBlurEnabledDidChange:
positionalInfo
postNotificationName:object:
powerFloatToInt:
powerIntToFloat:
powerLevel
powerSpectrumMetersForCellularTapType:
powerSpectrumSource
powerSpectrumStreamToken
preWarmCellEnabled
preWarmStateChanged:
predicateWithFormat:
preferPresentationTimestamp
preferRelayOverP2PEnabled
preferredAspectRatio
preferredAudioBitrateForPayload:
preferredAudioCodec
preferredBlockSize
preferredClientWithNewClient:
preferredCodec
preferredCodecRateMode
preferredFormatExt1
preferredIODuration
preferredIOSampleRate
preferredIOSampleRateForGroupID:
preferredIOSamplesPerFrame
preferredIOSamplesPerFrameForGroupID:
preferredLocalInterfaceForDuplication
preferredMediaBitRate
preferredMediaBitrate
preferredMode
preferredRTPTimestampRateForGroupID:
preferredRemoteInterfaceForDuplication
preferredSampleRate
preferredVideoCodec
prefixForMode:
prepareAudio
prepareFormatString:format:formatIndex:preferredFormat:
prepareOWRDList:owrd:time:config:
prepareSRTPWithError:
prependSPSPPS:dataPointer:sampleBuffer:
presentationInfo
presentationState
previewPreferredAspectRatio
previousNoRemoteInProgress
prewarmingClientOperatingMode
primaryConnHealthAllowedDelay
primaryConnection
primaryConnectionChanged:oldPrimaryConnection:
primaryConnectionDidChangeTo:oldConnection:
primaryConnectionType
primaryLinkID
primaryPayload
primaryTxCodecType
printBandwidthSettingsWithLogFile:
printBasebandNotificationStatistics:
printCaptionsSettingsWithLogFile:
printCreatedAudioTiers:
printDroppedPacketInfo:
printFeedbackMessage:
printFlushAckToBasebandDump:transactionID:packetDropped:sequenceNumberArray:
printLargeFrameStatsAtTime:timestamp:timeSinceLastProbingSequence:frameSize:wastedBytes:fecRatio:isFrameRequested:
printMediaStates
printMomentsSettingsWithLogFile:
printMultiwayAudioStreamsWithLogFile:
printMultiwayVideoStreamsWithLogFile:
printNWConnectionStatistics:
printPendingKeyFrameWarningOnThresholdTimeElapsedWithCurrentFrameTime:
printRateControlFullInfoWithLogDump:time:videoStall:videoFrozenDuration:averageTargetBitrate:
printRateControlInfoToLogDump
printRateControllerHealthPrint
printScreenWithLogFile:
printStreamFormats
printTable:
printVideoWithLogFile:
printWithLogFile:
printWithLogFile:prefix:
printWithLogFile:prefix:payloadConfig:
printWithLogFile:prefix:screenSize:
printWithLogFile:prefix:streamConfig:
printWithTitle:blobSize:logFile:
printWithTitle:logFile:
priority
probingLargeFrameSize
probingLockdownEnded
probingSequenceCount
probingSequencePacketCount
probingSequencePacketSize
process:
processAnswerWithError:errorReason:
processAnswererInitOptions:errorReason:
processBTNotification:
processBasebandAck:
processBasebandNotification:arrivalTime:error:
processBasebandNotification:metaData:error:
processBlackFrame:
processCachedParticipantData:
processCancelRelayRequest:cancelDict:didOriginateRequest:
processCancelRelayRequest:didOriginateRequest:
processCaptionsData:
processClientRequest:error:
processCompleteHandler
processConnectionHealthFromControlInfo:
processDatagramChannelEventInfo:
processDatagramForDirectIDSDataPath:datagramSize:datagramOptions:error:
processDecryptionTimeoutSettingChange
processDidStop
processDuplicationStateUpdateEvent:didLocalHandover:timeDurationMs:linkType:wrmCallbackScenario:
processEncryptedPayload:isData:topic:sequenceNumber:MKIData:participantID:
processEventQueue:clientList:
processFeedbackMessage:type:metaData:error:
processFormat:
processFrame:
processID
processId
processIdentifier
processInfo
processLocalWRMNotification:isAudioOnly:
processMediaControlInfo:isAudio:
processMediaStateMessage:remoteParticipantID:
processMediaTypeStatesWithMessage:mediaTypeStates:
processMessageData:participantID:topic:transactionID:messageStatus:isInternalMessage:
processMessageFromParticipant:transactionID:messageType:sessionID:transactionDelegate:
processMessageFromParticipant:transactionID:messageType:transactionDelegate:
processNWConnectionNotification:
processNWConnectionPacketEvent:eventType:
processNWConnectionStatistics:
processNetwork
processNotificationList:
processOfferWithError:errorReason:
processOffererInitOptions:errorReason:
processPacket:packetHandler:
processParameterSets:videoResults:
processParticipantInfo
processParticipantRemoval:
processPeerStatsBlob:
processPixelFormats:videoResults:
processRCNetworkStatistics:
processRTCPPSFBStatistics:
processRTCPPacket
processRTPPacket
processRTPTimeoutSettingChange
processRateControlProbingMessage:type:error:
processReceptionReportBlock:blockCount:arrivalNTPTime:
processRelayRequestResponse:didOriginateRequest:
processRelayRequestResponse:responseDict:didOriginateRequest:
processRelayRequestResponseDict:didOriginateRequest:
processRelayUpdate:didOriginateRequest:
processRelayUpdate:updateDict:didOriginateRequest:
processRelayUpdateDict:didOriginateRequest:
processRemoteIPChange:
processRemoteIPChange:callID:
processRemoteIPChange:dataLength:remoteCandidateVersion:
processRemoteInterfaceChangeMessageWithLocalCallID:remoteCallID:remoteData:remoteLen:remoteCandidateVersion:
processRemoteLivePhotoRequest:
processRemoteNegotiationData:
processRemotePhotoRequest:
processRemoteRequest:withMediaType:
processRemoteWRMSuggestion:isRemoteDuplicating:
processRequest:isRemote:
processResolutionChangeToVideoRule:captureRule:featureListString:
processResponseBlob:
processSIPMessage:msgOut:optional:confIndex:
processSampleQueue:input:lastPresentationTime:
processSocketRead
processSocketReadSSL
processSocketWrite:
processStreamGroupStateMessageKey:value:mediaTypeStates:
processSymptomFromMessage:participantID:isLocalInitiated:isLocalSideOnly:
processVTPPacket:
processVideoRTCP
processWRMCoexMetrics:
processWRMCoexMetrics:isAlertedMode:
processWRMNotification:
processWriteCompletionCallback:forDatagramWithSize:error:
profileLevel
profileLevelId
profileLevelIdForString:
profileLevelStringForId:
profileNumberKeyWithMode:
prominenceActiveAccumulationThreshold
prominenceActiveProbabilityThreshold
prominenceInactiveAccumulationThreshold
prominenceInactiveProbabilityThreshold
promoteSecondaryConnectionToPrimary:
propertyList:isValidForFormat:
propertyListFromData:mutabilityOption:format:errorDescription:
propertyListWithData:options:format:error:
protocolVersionforParticipantID:
pruneAllExpiredKeys
pruneQuietestPeers:talking:mask:meters:
pruneRecvKeyMaterialWithDelay:
pruneSendKeyMaterialWithDelay:
ptime
publicSessionConfigurationForType:
pullAudioSamples:
pullAudioSamples:rtpTimestamp:lastReceivedAudioTime:padding:paddingLength:silence:
pullAudioSamplesCount
pullDecodedAsFocus:
pullDecodedAsFocusClient:
pullDecodedMeshMode:
pullSamplesCallback
pullStoreBagKeys
purgeExpiredEntries:messageHistory:participantID:
push:
pushAudioSamples:
pushCompletionHandler
pushEventToNwActivity:started:
pushNoServerStatsToNwActivity:
pushSampleBuffer:error:
pushSampleBufferWithXPCArguments:result:error:
qosMonitor:didReceiveReport:streamToken:
qosMonitorServerDidDie:
qualityDelegateLock
qualityForBitRate:
qualityForPayload:forBitrate:
qualityIndex
qualityIndex:isFallbackStream:forStreamGroupID:streamIndex:
qualityIndexToTableEntry
qualityIndicator
qualityQueue
queryAnbrBitrate:forDirection:
queryAnbrBitrateRecommendation:direction:completionHandler:
queryBoardId
queryList
queryProbingResults
queryStatusWithOptions:
queue
queueExistsForStreamToken:
radioAccessTechnology
radioAccessTechnologyFromAVConferenceCellTech:isCellular:
rampDownAudioFraction
rampDownBWDropEnabled
rampDownTier
rampDownTierDueToBaseband
rampDownTierDueToBaseband:
rampDownTierDueToNWConnection
rampUpAudioFraction
rampUpTargetBitrateContinuousWithBandwidthDiff:
rampUpTier
range
rangeAtIndex:
rangeCheck:
rangeOfCharacterFromSet:
rangeOfString:
rangeOfString:options:
rateAdaptation:targetBitrateDidChange:rateChangeCounter:
rateAdaptationEnabled
rateChangeCounter
rateControlAllowBurstyLossRampDown
rateControlAllowVideoStop
rateControlBasebandSlowDownFactor
rateControlConfig
rateControlDumpEnabled
rateControlExperimentConfig
rateControlForceRxCap
rateControlForceRxRate
rateControlForceTxCap
rateControlForceTxRate
rateControlInterval
rateControlLogEnabled
rateControlModeFromAVConferenceOperatingMode:
rateControlStatisticsQueueWaitTime
rateController:targetBitrateDidChange:rateChangeCounter:
rateControllerType
rateSharingCount
ratio
rcvdFirstRemoteFrame
rdlock
readCarrierBundleValues
readDatagram:datagramSize:datagramOptions:
readDatagramWithCompletionHandler:
readDatagramsWithCompletionHandler:
readFrom:
readHandler
readHardwareValues
readIntegerFromConfig:key:value:
readOptionalPacketPayload:
readRequiredPacketPayloadWithStreamConfig:
readServerPacketRetransmissionsForVideoStoreBagConfig:
readStoreBagValues
readStoreBagValues:
readUint32WithPList:key:defaultValue:
readyToRead
realRATType
realignStreams
reallocateBufferWithMaxPacketSize:maxPacketCount:
realtimeSourceContext
reasonStringWithDuplicationReason:
receiveDataOnSocket:
receiveHandler
receiveMasterKey
receiveMessageBlock
receiveMessageDictionaryBlock
receivePacket:
receivedControlData:
receivedDataPacket:length:forCallID:encrypted:OFTType:
receivedFirstRemoteFrame
receivedRealTimeData:fromParticipantID:
receivedResponseCount
receivedSIPInvite
receivedSSLConnectionData:recordType:
receivedTMMBN:
receiverReport
receiverSframeCryptor
receiverThreadCallback:
recentlyGoAboveRampUpBandwidth
recommendedMTU
recommendedSettingsChanged:
recommendedStreamIDsForSelectedMediaEntries:forceSeamlessTransition:
recommendedTargetBitrateCap
recomputeAllocationTableIfRequired
reconfigureAudioIOForVideoEnabled:error:
reconfigureAudioIOIfNeededWithDeviceRole:operatingMode:
reconfigureOneToOneAudioStream:error:
reconfigureTierPicker:
reconfigureWithOperatingMode:deviceRole:direction:streamInputID:streamToken:allowAudioRecording:networkClockID:channelIndex:
recordDataWithSize:atTime:
recordVideoRefreshFrameWithTimestamp:payloadType:packetCount:isKeyFrame:
recvRTPTimeStamp
recvSamplesForSession:sampleBuffer:
redEnabled
redNumPayloads
redOverheadForNumPayloads:
redPayload
redPayloadDescription:
redPayloadForPrimaryPayload:
redPayloadSize
redPayloadType
redundancyControlForceVideoRedundancyPercentage
redundancyController
redundancyController:redundancyIntervalDidChange:
redundancyController:redundancyPercentageDidChange:
redundancyController:redundancyVectorDidChange:
redundancyControllerFECVersion
redundancyControllerMode
redundancyControllerModeForOperatingMode:isRedEnabled:
redundancyEnabled
redundancyEnabledFor720Stream
redundancyInterval
redundancyMode
redundancyPercentage
redundantPayloads:containsPointer:
redundantPayloadsDescription:
refreshInputMetering
refreshLoggingParameters
refreshOutputMetering
refreshRate
refreshRemoteCodecType:sampleRate:
registerActiveAudioStreamChangeNotifications
registerAudioPowerMeterSource:
registerAudioSessionId:maxChannelCountMic:maxChannelCountSpeaker:spatialMetadata:
registerAudioTapForStreamToken:tapType:
registerBTNotificationHandler:
registerBlockForService:block:
registerBlockForService:block:queue:
registerBlockForService:block:queue:eventLogLevel:
registerBlockWithUUID:service:block:
registerBlocksForConference
registerBlocksForDelegateNotifications
registerBlocksForNotification
registerBlocksForNotifications
registerBlocksForService
registerBlocksForVCNotifications
registerCallbacksForMediaControlInfoGenerator:forDirection:options:
registerCaptionsEventDelegate:
registerCaptionsSource:streamToken:
registerClient
registerClientForScreenShare
registerClientIO:controllerIO:
registerCodecRateModeChangeNotifications
registerConfigForScreenShare
registerDarwinNotification:
registerDataReceivedHandler:forCallID:
registerDidClientDieBlock:
registerDidServerDieBlock:
registerDirectoryWithFilePath:
registerFillBlobCallback:processBlobCallback:context:
registerForBandwidthAllocationWithClient:
registerForBluetoothImmediateNotifications
registerForCameraCaptureWithConfig:
registerForMutedTalkerNotfications
registerForMutedTalkerNotification:
registerForMutedTalkerNotificationWithAUIO:
registerForMutedTalkerNotifications:
registerForNetworkChanges
registerForNotifications
registerForRateSharing:
registerForScreenCapture
registerForVideoCapture
registerForVideoCapture:
registerForVideoFramesWithDeviceRole:captureRule:isUnpausing:
registerICEBlockForCallID:connectedBlock:newCandidatesBlock:newNominationBlock:removeIPPortBlock:
registerListenerWithCellularTapType:clientProcessId:powerSpectrumMeter:powerSpectrumMeterKey:error:
registerListenerWithStreamToken:powerSpectrumKey:powerSpectrumMeter:error:
registerMediaControlInfoGeneratorWithConfigs:
registerMediaStreamNotificationDelegate
registerMomentsMessenger:withStreamToken:
registerNewAudioPowerSpectrumForStreamToken:powerSpectrumKey:spectrumSource:
registerPacketCallbackContext:callback:
registerPeriodicTask
registerPowerSpectrumForCellularTapType:error:
registerPowerSpectrumForStreamToken:
registerQoSReportingSourceForToken:
registerRTPPayloadMappings
registerRateSharingClient:forInterfaceType:
registerRemoteParticipantToSession:
registerReportingTask
registerSampleBufferCallback:context:
registerSecureMicrophoneEngagedHandler:
registerService:weakSelf:eventLogLevel:block:
registerStatistics:
registerStatisticsChangeHandlerWithType:handler:
registerStatisticsChangeHandlers
registerStatisticsHandler:statisticType:
registerStatisticsHandlers
registerStreamOutputSource:forStreamToken:
registerStreamToken:
registerStreamTokenForCellularTapType:clientProcessId:error:
registerVideoSink:withCaptureSource:
registeredBlocks
registeredBlocksQueue
registeredConnection
registeredUUIDServiceBlocks
regularExpressionWithPattern:options:error:
reinitEncoderOnFrameSizeChangeEnabled
rejectWithError:
relativeReceiveTimeWithTimestamp:timestampRate:
relativeSendTimeWithTimestamp:timestampRate:
relay
relayCallback
relayChannelNumber
relayConnectionID
relayFormat
relayIDSPacket
relayProcessSamples
relayServerProvider
relaySessionToken
relayState
relayVTPPacket
releaseAllLogDumpFiles
releaseAllocators
releaseAudioPowerSpectrumForStreamToken:
releaseConverters
releaseFrameWithTime:
releaseLogDumpFile
releaseLogDumpFile:
releaseQueueForStreamToken:
releaseRTPHandles
releaseServiceConnection
releaseTextFrame:
releaseTextPacket:
releaseTimers
reliableMessageResendInterval
remainderBitrateSplitForStreamToken:
remainingBitrateSplitQualityIndexForStreamGroup:splitType:
remoteAddress
remoteAudioDidPause:callID:
remoteAudioEnabled
remoteAudioPaused
remoteBandwidthEstimation
remoteBasebandCodec
remoteBasebandCodecSampleRate
remoteBitrateForCallID:
remoteBlobCreationTime
remoteBlobVersion
remoteCallID
remoteCallInfo
remoteCanDisplayCaptions
remoteCancelledCallID:
remoteCellTech
remoteCellTechStateUpdate:maxRemoteBitrate:
remoteCodecSampleRate
remoteConnectionData
remoteConnectionType
remoteDataSoMask
remoteDeviceName
remoteDeviceVersionIDS
remoteExpectedLandscapeAspectRatio
remoteExpectedPortraitAspectRatio
remoteFeatureStringWithRemoteMediaBlob:
remoteFrameHeight
remoteFrameHeightForCallID:
remoteFrameSizeForCallID:
remoteFrameWidth
remoteFrameWidthForCallID:
remoteFramerateForCallID:
remoteIDSParticipantID
remoteIO
remoteInterfaceType
remoteInterfaceTypeString
remoteLinkProbingCapabilityVersion
remoteMaxBandwidthForOperatingMode:connectionType:
remoteMediaDidStall:streamToken:
remoteMediaStallTimeout
remoteMediaState
remoteMediaStateForMediaType:
remoteMuted
remoteNetworkType
remoteNoRemotePacketInterval
remotePacketLossRateForCallID:
remoteParticipantID
remoteParticipantIDFromChannelDataFormat:
remoteParticipants
remoteParticipantsMap
remoteParticipantsSupportStreamGroupID:
remotePauseDidChangeToState:forVideo:
remotePreWarmStateEnabled
remoteQueueOperationHandlerWithError:operation:
remoteRATType
remoteRelayConnectionData
remoteRelayRequestResponse
remoteRelayUpdate
remoteSSRC
remoteScreenAttributes
remoteScreenAttributesDidChange:
remoteScreenAttributesDidChange:streamToken:
remoteScreenEnabled
remoteScreenLandscapeAspectRatio
remoteSupportsExpectedAspectRatio
remoteSupportsVisibleRect
remoteSwitches
remoteToClientConverter
remoteVideoAttributes
remoteVideoAttributesDidChange:streamToken:
remoteVideoBackLayer
remoteVideoClient
remoteVideoClient:remoteMediaDidStall:
remoteVideoClient:remoteScreenAttributesDidChange:
remoteVideoClient:remoteVideoAttributesDidChange:
remoteVideoClient:remoteVideoDidPause:
remoteVideoClient:videoDidDegrade:
remoteVideoClient:videoDidSuspend:
remoteVideoClientDidReceiveFirstFrame:
remoteVideoClientDidReceiveLastFrame:
remoteVideoDidDegrade:streamToken:
remoteVideoDidPause:callID:
remoteVideoDidPause:streamToken:
remoteVideoDidSuspend:streamToken:
remoteVideoEnabled
remoteVideoInitialOrientation
remoteVideoLayer
remoteVideoOrientation
remoteVideoPaused
remoteVideoServerDidDie
remoteVideoServerDidDie:
remoteWRMLinkTypeSuggestion
removeActiveParticipant:
removeAllActiveParticipants
removeAllClientsForIO:
removeAllObjects
removeAudioTapForStreamToken:error:
removeCellularAssertion
removeClient:
removeCodec:
removeConnection:
removeConnectionWithIPPort:isLocalInterface:
removeConnectionWithIPPortInternal:isLocalInterface:
removeContext:
removeDatagramChannel:
removeDelegatesForRemoteParticipant:
removeFilesInDirectory:olderThan:
removeFirstObject
removeFromConnectionArray:
removeFromSuperlayer
removeItemAtPath:error:
removeItemAtURL:error:
removeLastObject
removeMediaHealthStatsHistoryEntryForParticipantID:
removeObject:
removeObjectAtIndex:
removeObjectForKey:
removeObjectIdenticalTo:
removeObjectsForKeys:
removeObjectsInArray:
removeObjectsInRange:
removeObserver:forKeyPath:
removeOldFilesInDefaultLogDumpPath
removeParticipant:
removeParticipants:
removeProbingResultsForLinks:
removeSink:
removeStreamConfigs:
removeSyncDestination:
removeSyncDestination:shouldSchedule:
removeTimingForKey:
removeTransactionForTransactionID:
removeUnusedAudioPayloads
removeVideoConference:
removeVideoRulesWithWidth:height:transportType:encodingType:
renderPixelBuffer:time:
renderProcessTime
renewNWMonitor
renewOneToOneMediaQueue
reorderedPacketsCount
repairMaxNetworkBitrate
repairStreamID
repairStreamIDsForStreamToken:
repairedMaxNetworkBitrate
repairedStreamID
replaceMatchesInString:options:range:withTemplate:
replaceObjectAtIndex:withObject:
replaceTag:
replyQueue
reportActiveConnectionOneToOne
reportActiveConnectionOneToOne:isAudioOnly:
reportCompletedSwitchingToOneToOne:
reportConnection:isInitialConnection:
reportConnectionHealthWithStatsHistory:index:isPeerStats:
reportConnectionUpdateWithRespCode:
reportConnectionUpdateWithResponseCode:delay:
reportCurrentPrimaryConnection
reportDashboardEndResult:
reportErrorAndTerminate:detail:returnCode:description:reason:
reportExistingParticipantsAnew
reportFailedToRegisterVideoFramesFromSource:width:height:frameRate:
reportFirstActiveConnectionOneToOne:remoteOSVersion:redState:isAudioOnly:
reportFirstPacketTimeForMKI:
reportHandoverResultsWithDictionary:localBitrateCap:remoteBitrateCap:
reportImmediateMetric:value:
reportInitialRampUpDeltas
reportLinkProbingStatsWithDuplicationJustStarted:
reportLinkSuggestion
reportMetricsFaceTimeCalling:
reportMetricsWifiCalling:
reportNATType
reportNetworkStatisticsWithArrivalTime:
reportNoPacketUpdateUsingCurrentTime:lastReceivedPacketTime:
reportOperatingMode
reportParticipantsPerfTimingsOnce
reportRTCPPacket
reportRateControlExperiment
reportRedundancyConfigChange
reportRedundancyPercentage:redundancyInterval:
reportScreenShareIsStarting:
reportSessionMediaDaemonStats:
reportSignificantHandshakeDelaySymptomForParticipantID:
reportStartedSwitchingToOneToOne:
reportSwitchingError:errorEvent:
reportSymptom:
reportTargetBitrateChange:rateChangeCounter:
reportTransportInfo
reportVideoEnabledStatsWithVideoEnabled:
reportVideoStreamType
reportWRMMetrics:
reportWRMSuggestion:
reportedSourceSSRC
reportingAgent
reportingAudioStreamEvent:
reportingClientType
reportingClientTypeForStreamType:
reportingHierarchyToken
reportingIPVersion
reportingIntervalChanged:
reportingIntervalForStreamToken:
reportingModuleID
reportingMomentsToGreenTeaWithRequest:
reportingMomentsWithRequest:
reportingMomentsWithRequest:recipientID:
reportingParentID
reportingSessionDownlinkOptInEvent:selectedMediaEntriesForParticipants:
reportingSessionParticipantEvent:keyChangeReason:newMKI:
reportingSessionParticipantEvent:withParticipant:
reportingSessionParticipantEvent:withParticipant:keyChangeReason:newMKI:
reportingSessionParticipantEvent:withParticipant:keyChangeReason:newMKI:withStreamID:
reportingSessionParticipantEvent:withStreamID:
reportingSessionParticipantEventBitrateChanged:optedInNetworkBitrate:actualNetworkBitrate:optedInStreamID:actualStreamID:
reportingSessionRemoteParticipantEvent:withParticipant:value:
reportingSessionStopEventWithError:
reportingSetUserInfo
reportingStats
reportingVideoStreamEvent:
reportingVideoStreamEvent:newVideoAttributes:
reportingVideoStreamEvent:newVideoAttributes:currentStreamID:
requestLastDecodedFrame
requestMediaDataWhenReadyOnQueue:usingBlock:
requestNotificationFaceTimeCalling
requestQoSReport
requestSessionInfoWithOptions:
requestSessionMediaDaemonStatsReport
requestTimestampAndRTTList
requestWRMNotification
requestedCameraType
requestedTimeoutRelay
requesteeID
requesterID
requiredAudioBitrate:highestAudioBitrates:
requiredPackedPayload
requiredPayloadCompressWithConfig:
requiresImplicitFeatureString
requiresWiFi
requiresWifi
reregisterMutedTalkerNotificationOverXPC
resMutex
reselectPrimaryConnection
reserveAudioChannelForMediaType:spatialAudioSourceID:
reset
resetAUIOWithProperties:
resetActiveConnection
resetAggregatedProbingResults
resetAudioBufferPool
resetAudioLimiterWithProperties:
resetAudioSessionOutputPortOverride
resetAudioSessionOutputPortOverride:
resetAudioSessionWithProperties:interruptSuccessful:
resetAudioTimestamps
resetBBNoteHistoryList
resetBDCDList
resetBuffer
resetBurstyLossStatistics
resetChannelMask
resetCodecs
resetConnectionStatTimers
resetConnectionStats:
resetDecryptionTimeout
resetDidReceiveFirstFrame
resetEffectsLogging
resetEncoder
resetEncoderWithSampleBuffer:numBytes:
resetEncodingRulesForCameraIsHD:isWVGA:is1080:
resetHandshake
resetHealthPrintCounters
resetHistory:
resetICETimeoutToLongTimeout
resetLastGoodVideoQualityTime:
resetLocalCameraAfterServerDisconnect
resetLoopback
resetLossEventBandwidthLimit
resetLossEventBuffer
resetMediaByteCounters
resetMediaHealthStats
resetOWRDEstimation
resetOneToOneSettings
resetOscillationDetection
resetOutputPayload:
resetPacketCountAndByteCountWithConnection:
resetParticipantGenerationCounter
resetPayloadHistory
resetPayloadMapping
resetPayloads
resetRTCPSendHeartbeatTimer:
resetRampingStatus
resetRedundancyStrategy:
resetRemoteMediaStalled
resetSendRTPTimestampOnStop
resetState
resetStats
resetStreamGroups
resetTimeoutHeartbeatTimer:
resetTimeoutHeartbeatWithRTPTimeout:rtcpTimeout:decryptionTimeout:currentTime:
resetVideoRulesForInterface:videoReportingDictionary:
resetXPCConnection
resolution
resourceNameForConfigurationType:
respondsToSelector:
result
resultQueue
resume
resumeMediaStreams
resumeStreams
resumeStreamsOnOneToOneModeSwitch
resumeVideoByVCRateControl
retain
retainCount
retainPixelBufferForMomentsEnabled
retrieveAndProcesOnePacket:seq:count:index:
retrieveAndProcessMediaPacketsFromBuffer:packetHandler:
retrieveBag
retrieveIdentity
retrieveRTPPacket:
retrieveRawFeaturesStringWithType:
retryCountUsingFastRetries:
retryTimeoutForRetryAttempt:usingFastRetries:
retryVCIDSSessionInfoSubscribedStreamIDs
returnBufferToPool:
reverseObjectEnumerator
reverseString:
rewriteMovieMetadataWithURL:transactionID:
ringBufRef
rmsPowerOfBuffer:numSamples:
roundTripTime
roundTripTimeForCallID:
rtChannel
rtcpEnabled
rtcpFlagStringWithPayloadConfig:
rtcpFlags
rtcpFlagsWithPayloadConfig:
rtcpHeartbeatLeeway
rtcpPSFBForFeedbackStoreBagConfig
rtcpPSFB_FIREnabled
rtcpPSFB_LTRAckEnabled
rtcpPSFB_PLIEnabled
rtcpPort
rtcpRTPFB_GNACKEnabled
rtcpReceiveCallbackEnabled
rtcpRemotePort
rtcpReportProvider
rtcpSREnabled
rtcpSendHeartbeat
rtcpSendInterval
rtcpSendIntervalElapsed
rtcpSendIntervalSec
rtcpTimeOutEnabled
rtcpTimeOutInterval
rtcpTimeOutIntervalSec
rtcpTimeoutEnabled
rtcpTimeoutInterval
rtcpXREnabled
rtpHandle
rtpId
rtpPayload
rtpPayloadWithPayload:
rtpSampleRate
rtpSampleRateWithNegotiationPackedSampleRate:
rtpTimeOutEnabled
rtpTimeOutInterval
rtpTimeOutIntervalSec
rtpTimeoutEnabled
rtpTimeoutInterval
rtpTimestampRate
rtpVideo
rttThreshold
rules
rulesForEncodeType:paylaod:videoRuleCollection:
rulesImageSizeForExternalPayload:pWidth:pHeight:
runDisplayLinkThreadWithStopRequested:
runRateControlStateTransition
runUntilTime:
runVideoStreamRateAdaptation
runningClient
rxCodecFeatureListString
rxCodecFeatureListStrings
rxCodecType
rxMaxBitrate
rxMinBitrate
rxNetworkPayloads
rxPayloadMap
rxPayloadType
rxRedPayloadType
sampleBufferAllocator
sampleLogCount
sampleRate
sampleRateForCodecBandwidth:
sampleRateForPayload:
saveImage:movie:
saveRemoteBandwidthSettingsWithMediaBlob:
scaleFactor
scheduleAfter:block:
scheduleDecodeForFrameWithBuffer:timestamp:hostTime:showFrame:
scheduleDecodeForTimestamp:
scheduleEncryptionRollTimerWithDelay:
schedulePrimaryConnectionChange:oldConnection:
scheduleProbingSequenceAtTime:
scheduleProbingSequenceWithFrameSize:paddingBytes:timestamp:fecRatio:isProbingSequenceScheduled:
schedulePruneTimer:
scheduleTMMBR:
scheduleVideoDecode:
schedulerStreamWithKeyFrameInterval:framerate:weightFactor:
screenCapture:didStart:withError:
screenCapture:didStop:withError:
screenCaptureDisplayID
screenCaptureStartFor:didSucceed:withError:
screenCaptureStopFor:didSucceed:withError:
screenEnabled
screenGroup
screenHeight
screenHeightForDisplayID:
screenPayload
screenPixelCount
screenRes
screenResolution
screenRuleCollections
screenSSRC
screenSettings
screenShareCapabilities
screenShareCapabilitiesIPad
screenShareCapabilitiesIPhone
screenShareCapabilitiesIPod
screenShareDictionary:
screenSharingVCCapabilities
screenSize
screenStreamBaseTierFramerate
screenStreamInfo
screenToken
screenWidth
screenWidthForDisplayID:
sdpString
searchMatchingTopic:payload:transactionID:fromParticipant:
secondaryAudioPayloads
secondaryConnection
secondaryFlags
secondaryPayloads
secretKey
secureControlChannel
secureDataChannel
secureMessagingRequired
secureMicrophoneEngagedNotification
securityKeyHolder
securityKeyHolderUsageForStreamConfigDirection:
securityKeyManager
securityKeyMaterialWithMediaKeyIndex:
segments
segmentsAtIndex:
segmentsCount
segmentsType
selectBestDecodeVideoRuleForTransport:payload:localVideoRuleCollection:remoteVideoRuleCollection:
selectBestScreenRule:preferredPayloadOrder:
selectBestVideoRuleForTransport:payload:encodingType:localVideoRuleCollection:remoteVideoSettings:negotiatedVideoSettings:isScreen:
selectBestVideoRuleForTransport:payload:encodingType:videoSettings:localVideoRuleCollection:remoteVideoRuleCollection:
selectCodecBandwidthForCodecRateMode:
selectConnectionForGroupType:fromConnectionArray:asPrimary:
selectDataPath
selectHighestQualityAudioTiers:forBitrateLimits:isHardLimit:
selectPrimaryAndSecondaryWithConnection:isEndToEnd:
selectRedPayloadsForPrimaryPayload:
selectVideoFeatureString:selectedPayload:
selectVideoStreamForVideoPriority
selectiveScreenUUID
selectiveSharingPort
self
selfTerminateDueToTimeout:
sendARPLData:toCallID:
sendActiveVoiceOnly
sendAllCachedMessagesAndDisableHandshakeWhenDone
sendAllocateMsg:
sendAudioPowerSpectrumSourceRegistration:
sendBasebandCodecMessage
sendCallingModeMessage
sendChannelBindingMsgWithDict:error:
sendCharacter:
sendCodecModeChangeEvent:
sendConfirmationToParticipantID:transactionID:sessionID:transactionDelegate:
sendCongestionEventWithTimestamp:
sendControlPacketWithParameters:
sendDTMFDigitString:withVolume:duration:interval:
sendDTMFEvent:
sendDTMFEvent:atTimestamp:withSampleRate:
sendData:forCallID:encrypted:
sendData:localCallID:remoteCallID:encrypted:OFTType:
sendData:size:error:
sendData:toCallID:encrypted:
sendDelegate
sendFailureCountSinceLastCheck
sendFeedbackControllerReport:
sendIntervalDidElapse:remainingTime:
sendLastRemoteVideoFrame:
sendLocalStats
sendMasterKey
sendMediaKey
sendMediaStateUpdateMessageToRemoteParticipant:
sendMessage:
sendMessage:participantID:
sendMessage:participantID:withSequence:numRetries:
sendMessage:withTopic:
sendMessage:withTopic:participantID:
sendMessageAsync:
sendMessageAsync:arguments:
sendMessageAsync:arguments:context:
sendMessageAsync:arguments:reply:
sendMessageAsync:arguments:reply:queue:
sendMessageAsync:arguments:toAllClientsWithContext:
sendMessageAsync:arguments:xpcArguments:context:
sendMessageAsync:arguments:xpcArguments:reply:
sendMessageAsync:arguments:xpcArguments:reply:queue:
sendMessageAsync:arguments:xpcArguments:reply:queue:replyLogLevel:
sendMessageCompletionBlock
sendMessageDataCompletionBlock
sendMessageDictionary:withTopic:participantID:
sendMessageSync:
sendMessageSync:arguments:
sendMessageSync:arguments:xpcArguments:
sendPacketToVTP:
sendProcessInfoWithProcessID:
sendProtobuf:withType:forCallID:
sendRateControlConfigToRemoteParticipant:
sendRateControlFeedback
sendRefreshMsg:error:
sendReliableMessage:participantID:withOptions:completion:
sendReliableMessage:sessionID:participantID:timeout:useFastRetries:withOptions:
sendReliableMessage:withTopic:
sendReliableMessage:withTopic:participantID:
sendReliableMessage:withTopic:participantID:timeout:withOptions:completion:
sendReliableMessage:withTopic:participantID:withOptions:completion:
sendReliableMessage:withTopic:timeout:withOptions:
sendReliableMessageAndWait:withTopic:
sendReliableMessageAndWait:withTopic:participantID:
sendReliableMessageAndWait:withTopic:participantID:timeout:withOptions:
sendReliableMessageInternal:withTopic:timeout:useFastRetries:withOptions:
sendReport:
sendSIPInviteWithError:
sendSampleBufferOverXPC:error:
sendStatusUpdate:
sendStatusUpdateFaceTimeCalling:
sendStatusUpdateInfoFaceTimeCalling:
sendStreamGroupStateToParticipant:
sendSubscriptionInfoFaceTimeCalling
sendSuccessCountSinceLastCheck
sendSymptomToRemote:groupID:
sendSymptomsToRemoteParticipants:symptom:groupID:
sendTCPData:bufSize:
sendText:
sendTextFrameWithRedundancy:marker:
sendTimings
sendTmmbrBitrate
sendUDPPacketReliableEncrypted:localIPPort:destinationIPPort:oftType:
sendUnreliableMessage:sessionID:participantID:transactionID:transactionDelegate:withOptions:
sendUnreliableMessage:withTopic:participantID:
sendUnreliableMessage:withTopic:sessionID:participantID:transactionDelegate:
sendUnsubscriptionInfoFaceTimeCalling
sendVCIDSSessionInfoSubscribedStreamIDs:
sendWRMStatusUpdate:
senderQueue
sendingDTMFEventWithTimeStamp:interval:RTPHandle:
sentAudioBytes
sentAudioBytesShort
sentClientSuccessfulDidStart
sentRequestCount
sequenceNumber
serializationClasses
serialize
serializeNegotiationData:
serializeNwActivity:
serializeToBuffer:bufferLength:blobLength:
serializedSize
serverBag
serverDidDie
serverDidDisconnect:
serverDied
serverDiedForConference:
serverIsDegraded
serverLinks
serverLoopProc
serverReconnected
serverStatsSizeInByteForUplink:connection:
serviceHandlerDidDegradeWithArguments:error:
serviceHandlerDidDieWithArguments:error:
serviceHandlerDidPauseWithArguments:error:
serviceHandlerDidReceiveFrameWithArguments:error:
serviceHandlerDidReleaseOutputQueueWithArguments:error:
serviceHandlerDidStallWithArguments:error:
serviceHandlerDidSuspendWithArguments:error:
serviceHandlerPowerMeterInitializeWithArguments:error:
serviceHandlerPowerMeterTerminateWithArguments:error:
serviceHandlerRegisterCellularTapWithArguments:error:
serviceHandlerRegisterListenerWithArguments:error:
serviceHandlerStreamOutputInitializeWithArguments:error:
serviceHandlerStreamOutputNotifyCacheWithArguments:error:
serviceHandlerStreamOutputTerminateWithArguments:error:
serviceHandlerUnregisterCellularTagWithArguments:error:
serviceHandlerUnregisterListenerWithArguments:error:
serviceName
session:addParticipant:didSucceed:error:
session:audioEnabled:didSucceed:error:
session:audioPaused:didSucceed:error:
session:cancelRelayRequest:
session:changeVideoRulesToCaptureRule:encodeRule:featureListString:
session:connectionDidChangeWithLocalInterfaceType:remoteInterfaceType:callID:
session:didChangeRemoteScreenAttributes:
session:didChangeVideoRule:
session:didDetectError:
session:didPauseAudio:error:
session:didPauseVideo:error:
session:didReceiveARPLData:fromCallID:
session:didReceiveData:messageType:withCallID:
session:didReceiveMomentsRequest:
session:didStart:connectionType:localInterfaceType:remoteInterfaceType:error:
session:didStart:error:
session:didStopVideoIO:error:
session:didStopWithError:
session:didStopWithError:metadata:
session:didUpdate:configuration:error:
session:downlinkRateAdaptationInfoDidChange:
session:frequencyLevelsDidChange:
session:initiateRelayRequest:
session:isSendingAudio:error:
session:localAudioEnabled:withCallID:error:
session:localIPChange:withCallID:
session:mediaPrioritiesDidChange:
session:mediaStateDidChange:forMediaType:didSucceed:error:
session:oneToOneEnabled:didSucceed:error:
session:packMeters:withLength:
session:receivedNoPacketsForSeconds:
session:receivedRemoteFrame:atTime:withScreenAttributes:videoAttributes:isFirstFrame:isVideoPaused:
session:remoteAudioEnabled:withCallID:
session:remoteCallingModeChanged:withCallID:
session:remoteMediaStalled:
session:removeParticipant:didSucceed:error:
session:screenEnabled:didSucceed:error:
session:sendRelayResponse:
session:setMomentsCapabilities:imageType:videoCodec:
session:setRemoteBasebandCodecType:sampleRate:
session:startAudioWithFarEndVersionInfo:internalFrameFormat:completionHandler:
session:startVideoReceive:
session:startVideoSend:captureRuleWifi:captureRuleCell:interface:isUnpausing:
session:stopAudioWithCompletionHandler:
session:stopVideoReceive:isPausing:
session:uplinkRateAdaptationInfoDidChange:
session:videoEnabled:didSucceed:error:
session:videoPaused:didSucceed:error:
session:withCallID:videoIsDegraded:isRemote:
sessionActive
sessionConfigurationForType:
sessionDict
sessionForIncomingParticipantID:
sessionForParticipantID:
sessionForSourceDestinationInfo:
sessionForStreamToken:
sessionHealthMonitor
sessionID
sessionIP
sessionId
sessionInfoSynchronizer
sessionLock
sessionMessaging
sessionMode
sessionModeWithClientSessionMode:
sessionReceivingBitrate
sessionReceivingFramerate
sessionServerDidDisconnect:
sessionShouldReconnect:
sessionStateToString:
sessionStatsController
sessionToken
sessionTransmittingBitrate
sessionTransmittingFramerate
sessionUUID
sessions
setAacBlockSize:
setAbSwitches:
setAccessNetworkType:
setAcknowledgement:
setActive:
setActiveConference:
setActiveConnection:uplinkBitrateCap:activeMediaStreamIDs:mediaBitrates:rateChangeCounter:
setActiveLinkProbingEnabled:
setActiveSize:
setActiveStreamID:
setActiveStreamIDs:
setActiveVideoLayerForMode:
setActualAudioCodec:
setActualBitrateForOptedInStreamWithActiveStreamID:
setActualNetworkBitrate:
setActualVideoCodec:
setAddress:forService:
setAfrcHandle:
setAfrcRemoteEstimatedBandwidth:
setAlignmentMode:
setAllSubscribedStreamIDsOnOptions:
setAllocationResponseHandler:
setAllowAudioRecording:
setAllowAudioSwitching:
setAllowDuplication:
setAllowDynamicMaxBitrate:
setAllowLargePackets:
setAllowRecording:
setAllowSwitching:
setAllowVideoStop:
setAllowsContentsChangeWithAspectPreservation:
setAllowsDynamicMaxBitrate:
setAllowsHitTesting:
setAlwaysOnAudRedEnabled:
setAlwaysOnAudioRedundancyEnabled:
setAmplitude:
setAnimoji:
setAnswer:withError:
setAnswerBandwidth:
setArray:
setAuNumber:
setAudio:
setAudioChannelCount:
setAudioChannelIndex:
setAudioConfiguration:
setAudioDumpEnabled:
setAudioEnabled:
setAudioFeatures:
setAudioFileName:
setAudioFractionTier:
setAudioIO:
setAudioIOSampleRate:
setAudioInputDevice:
setAudioIsPaused:
setAudioIssueDetectorEnabled:
setAudioMediaControlInfoGenerator:
setAudioMuted:
setAudioOutputDevice:
setAudioPayloads:
setAudioPosition:
setAudioRTCPPort:
setAudioRTCPStreamParamatersForSocket:packetType:remoteIP:remoteIPLength:
setAudioRTPID:
setAudioRTPPort:
setAudioRTPStreamParamatersForSocket:packetType:remoteIP:remoteIPLength:
setAudioRules:
setAudioRulesNegotiated:
setAudioSendingBitrate:
setAudioSessionID:
setAudioSessionId:
setAudioSessionProperties:
setAudioSettings:
setAudioStreamGroupConfig:
setAudioStreamGroupsPaused:
setAudioStreamMode:
setAudioTierPicker:
setAudioTransmitter:
setAudioUnitModel:
setAudioUnitNumber:
setAudioUnitType:
setAvcPositionalInfo:
setAvcSessionPresentationInfo:
setBWEOptions:UseNewBWEMode:FakeLargeFrameMode:ProbingSenderLog:
setBackgroundColor:
setBandwidth:
setBandwidthConfigurations:
setBandwidthDownstream:
setBandwidthSettings:
setBandwidthUpstream:
setBasebandCodec:
setBasebandCodecSampleRate:
setBasebandCodecType:
setBasebandCodecType:sampleRate:
setBasebandCongestionDetector:
setBasebandFlushCount:
setBasebandNotificationStreamParamatersForSocket:packetType:remoteIP:remoteIPLength:
setBindingResponseHandler:
setBitrate:
setBitrateUnstable
setBlock:
setBounds:
setBtNotificationMonitor
setBudgetInCaptureFrames:
setBundlingScheme:
setByAddingObjectsFromArray:
setCFAvailabilityChange:
setCName:
setCachedActiveVideoStreams:
setCallActive:
setCallID:
setCallReport:withReport:
setCallReportProtobuf:withProtobufData:forMetricID:
setCallState:forCallID:
setCallback:
setCamera:
setCameraStreamGroupsPaused:
setCameraSwitching:
setCameraU1:
setCameraZoomAvailable:currentZoomFactor:maxZoomFactor:
setCameraZoomFactor:
setCameraZoomFactor:withRate:
setCanDisplayCaptions:
setCanProcessAudio:
setCanUseP2PLinks:
setCap2G:
setCap3G:
setCap5G:
setCapLTE:
setCapWifi:
setCapabilities:
setCaptionsCoordinator:
setCaptionsReceiverLanguages:
setCaptionsSenderLanguages:
setCaptionsSettings:
setCaptureController:
setCaptureFrameRate:
setCaptureSource:
setCaptureSourceID:
setCellBandwidth:
setCellPrimaryInterfaceChangeEnabled:
setCellTech:remoteCellular:isIPV6:audioCap:
setCellularAllowRedLowBitratesEnabled:
setCellularUniqueTag:
setChangeListener:
setChannelAwareOffset:
setChannelCount:
setChannelIndex:
setChannelPreferences:
setChatMode:
setChosenAudioPayload:
setChosenDTXPayload:
setChosenRedPayloadType:
setCinematicFramingEnabled:
setClientFormat:
setClientIO:
setClientIO:withError:
setClientOptions:
setClientPID:
setClientTargetBitrate:
setClientTargetBitrateCap:
setClientVersion:
setCnEnabled:
setCnPayloadType:
setCname:
setCodecBandwidthMask:
setCodecModeRequest:
setCodecRateModeMask:
setCodecSupport:
setCodecType:
setColorInfo:
setCommNATFlags:forInterface:isCached:
setCompeletionHandler:forTransactionID:
setCompoundStreamIDs:
setConferenceOperatingMode:
setConferenceState:forCallID:
setConferenceVisualRectangle:forCallID:
setConferenceVolume:
setConferenceWithMic:
setConfidence:
setConfig:
setConfig:pid:
setConfiguration:
setConfigurationExtension:
setConfigurationInProgress:
setConnection:
setConnectionChangeState:
setConnectionForDuplication:
setConnectionForDuplicationNonProbingVersion:
setConnectionHealthMonitor:
setConnectionHealthOnControlInfo:
setConnectionMTU:
setConnectionManager:
setConnectionPause:isLocalConnection:
setConnectionPersists:
setConnectionResult:
setConnectionSelectionVersionWithLocalFrameworkVersion:remoteFrameworkVersion:
setConnectionSetupPiggybackBlob:
setConnectionSetupTime
setConnectionType:
setConnectionTypeString:
setContent:
setContents:
setContentsGravity:
setContentsRect:
setContext:
setContextId:
setContinuousCorners:
setControlChannelVersion:
setControlInfoGenerator:
setControllerFormat:
setConversationID:
setConversationTimeBase:
setConversationTimeBaseTruncated:
setCoordinateSystem:
setCoreMotionManagerDelegate:
setCount:
setCreationTime:
setCumulativePacketsLost:
setCurrentActiveConnection:
setCurrentAudioDevice:type:
setCurrentAudioSessionMediaProperties:
setCurrentAudioUnitProperties:
setCurrentChannelMetrics:
setCurrentDTXEnable:
setCurrentDTXEnabled:
setCurrentDetails:
setCurrentEncodeRule:
setCurrentFocus:
setCurrentFrameTime:
setCurrentInputDevice:
setCurrentInputDeviceInternal:
setCurrentOutputDevice:
setCurrentSendMKIWithKeyMaterial:
setCurrentTranscription:
setCurrentUplinkTargetBitrate:
setCurrentUplinkTotalBitrate:
setCurrentVideoCaptureFrameRate:
setCustomHeight:
setCustomVideoHeight:
setCustomVideoWidth:
setCvoExtensionID:
setDTMFRTPEventDuration:withPayload:
setDTXPayload:
setDataReceivedDelegate:
setDataType:
setDecodeFormats:
setDecryptionMKMRecoveryInterval:
setDecryptionTimeOutEnabled:
setDecryptionTimeOutInterval:
setDecryptionTimeoutEnabled:
setDecryptionTimeoutInterval:
setDefaultAlgorithmConfiguration:
setDefaultLinkProbingCapabilityVersionForDeviceRole:
setDelaySinceLastSR:
setDelegate:
setDelegateQueue:
setDelegatesForRemoteParticipant:
setDepartureTime:
setDepthPixelBuffer:
setDestinationFramerate:
setDestroyHandler:
setDeviceList:
setDeviceRole:
setDeviceRole:operatingMode:
setDeviceRoleForAudioStreamMode:direction:
setDeviceType:
setDidMBLRampDown:
setDidProcessSamplesCallback:
setDidProcessSamplesCallbackContext:
setDidReceiveFirstFrame:
setDidReceiveVideo:
setDidSend200OK:
setDirection:
setDisableActions:
setDisableVAD:
setDisplayID:
setDownlinkBitrateCap:
setDownlinkTargetBitrate:
setDownlinkTargetCellBitrateCap:
setDownstreamBandwidth:
setDtmf:
setDtmfPayloadType:
setDtmfSampleRate:
setDtmfTimestampRate:
setDtmfTonePlaybackEnabled:
setDtxEnabled:
setDtxPayload:
setDuplicateImportantPktsEnabled:
setDuplicateMessageOnServerLink:
setDuplicationCallback:withContext:
setDuplicationDownlinkCellBitrateCap:currentBitrate:
setDuplicationEnabled:
setDuplicationEnabledInternal:
setDuplicationEnhancementEnabled:
setDuplicationFlag:withPreferredLocalLinkTypeForDuplication:notifyPeer:
setDuplicationLinkID:
setDurationThresholdDownward:
setDurationThresholdUpward:
setEffectType:
setEffectsApplied:
setEffectsArray:
setEffectsMetadata:
setEmulatedNetworkConfigPath:
setEmulatedNetworkConfigurationPath:
setEmulatedRxPLR:
setEnableAggressiveProbingSequence:
setEnableAudioPowerSpectrumReport:
setEnableCVO:
setEnableCVO:cvoExtensionID:
setEnableDNNVAD:
setEnableLoopbackInterface:
setEnableMaxBitrateOnNoChangeCMR:
setEnableOneToOneMode:
setEnableRateAdaptation:maxBitrate:minBitrate:adaptationInterval:
setEnableSpeakerPhone:
setEnableVADFiltering:
setEncodeFormats:
setEncoderBitrateAveragingInterval:
setEncoderUsage:
setEncodingMode:
setEncryptionInfoReceived:
setEncryptionWithEncryptionMaterial:
setEndRTPTimeStamp:
setEndRTPTimestampWithTimestamp:
setErrorReponseCallback:
setErrorResponseCallback:
setEstimatedBandwidth:
setEstimatedBandwidthCap:
setEstimatedBandwidthUncapped:
setEventHandler:
setEventLogLevel:
setEvsChannelAwareOffset:
setEvsHeaderFullOnly:
setExpectedBitrate:
setExpectsMediaDataInRealTime:
setExtendedHighestSequenceNumber:
setExternalIOFormat:
setFECRatio:
setFECRedundancyVector:
setFPref:
setFaceMeshTrackingEnabled:
setFaceTimeSettings:
setFaceTimeSwitches:
setFarEndVersionInfo:
setFastSuddenBandwidthDetectionEnabled:
setFeatureListDict:
setFeatureString:
setFeatureStrings:
setFecFeedbackVersion:
setFecHeaderV1Enabled:
setFecRatio:
setFeedbackController:
setFeedbackDelegate:
setFirstMKIToFirstMediaReceivedTimerForMKIReceivedTime
setFixedJitterBufferSize:
setFlags:forInterface:isCached:isCachedKey:mask:
setFollowSystemCamera:
setFollowSystemCameraEnabled:
setFollowSystemInput:
setFollowSystemInputEnabled:
setFollowSystemOutput:
setFollowSystemOutputEnabled:
setFontSize:
setForceEVSWideBand:
setForceFullBandwidth:
setForceIPv6ForCallID:
setForceNetworkCellular:
setForceRelay
setForceRelayForCallID:
setForceZeroRegionOfInterestOrigin:
setForcedCapBitrate:
setForcedTargetBitrate:
setForegroundColor:
setFormats:
setFractionLost:
setFrame:
setFramePosition:
setFramePresentationTime:
setFrameRate:
setFrameWidth:frameHeight:frameRate:
setFramerate:
setFramesPerIdrPeriod:
setFrameworkVersion:
setFrequencyMeteringEnabled:
setFrequencyMeteringEnabled:meterType:
setFrequencyRange:
setGeometryFlipped:
setGroupID:
setH264LevelAsymmetryAllowed:
setH264PacketizationMode:
setHAFRC:
setHandle:
setHasAbSwitches:
setHasAccessNetworkType:
setHasAllowDynamicMaxBitrate:
setHasAllowsContentsChangeWithAspectPreservation:
setHasAudioChannelCount:
setHasAudioFeatures:
setHasAudioUnitModel:
setHasBasebandCodecSampleRate:
setHasBlobVersion:
setHasCanDisplayCaptions:
setHasCap2G:
setHasCap3G:
setHasCap5G:
setHasCapLTE:
setHasCapWifi:
setHasCapabilities:
setHasCipherSuite:
setHasCodecType:
setHasConfidence:
setHasConfigurationExtension:
setHasContent:
setHasCoordinateSystem:
setHasCustomVideoHeight:
setHasCustomVideoWidth:
setHasDecodeFormats:
setHasEncodeFormats:
setHasEncoderUsage:
setHasFormatsExt1:
setHasHasSpaceAfter:
setHasHdrModesSupported:
setHasIsFinal:
setHasIsLocal:
setHasLandscapeAspectRatioX:
setHasLandscapeAspectRatioY:
setHasLinkProbingCapabilityVersion:
setHasLtrpEnabled:
setHasMaxMediaBitrate:
setHasMaxNetworkBitrate:
setHasMaxPacketsPerSecond:
setHasMediaControlInfoSubVersion:
setHasMediaControlInfoVersion:
setHasMediaFlags:
setHasMic:
setHasMismatchedDisplayAspectRatioX:
setHasMismatchedDisplayAspectRatioY:
setHasMultiwayCapabilities:
setHasNtpTime:
setHasOneToOneModeSupported:
setHasPTime:
setHasParameterSet:
setHasPayloadSpecOrPayloads:
setHasPendingChanges:
setHasPixelFormats:
setHasPortraitAspectRatioX:
setHasPortraitAspectRatioY:
setHasPreferredFormat:
setHasPreferredFormatExt1:
setHasProfileLevelId:
setHasQualityIndex:
setHasReceivedFirstFrame:
setHasReceivedLastFrame:
setHasRepairedMaxNetworkBitrate:
setHasRepairedStreamID:
setHasRtcpFlags:
setHasRtpPayload:
setHasRtpSSRC:
setHasRtpSampleRate:
setHasScreenRes:
setHasSenderLanguages:
setHasSpaceAfter:
setHasStatus:
setHasStreamGroup:
setHasStreamIndex:
setHasSupportedCodecs:
setHasSupportedImageTypes:
setHasSupportedPayloads:
setHasSupportedVideoCodecs:
setHasTilesPerFrame:
setHasVideoPayload:
setHdrMode:
setHdrModesSupported:
setHeaderFullOnly:
setHeight:
setHidden:
setHighFecEnabled:
setHighestActiveQualityIndex:
setICETimeout:
setIOBufferDuration:withError:
setIRATDuplicationEnabled:
setIRATRtpEnabled:
setIdentity:
setIdsDestination:
setIdsParticipantID:
setIdsUPlusOneMode:
setIgnoreSilence:
setImageAttributeRules:
setImageData:
setImageType:
setIncludeRedSequenceOffset:
setInfo:size:type:
setInfoUnserialized:type:
setInitUsingWifiTiers:
setInitialMemoryUsageMB:
setInitialSecondaryRelaySetupDone:
setInjectAudioConfigType:
setInputFrequencyMeteringEnabled:
setInputMeter:
setInputMetering
setInputMeteringEnabled:
setInterarrivalJitter:
setInterfaceListenerDelegate:
setInterfaceName:
setInternalReceiverQueue:
setIp:
setIpVersion:
setIpport:
setIsAudioEnabled:
setIsAudioPausedToStart:
setIsAudioSending:
setIsAudioStalled:
setIsCaller:
setIsDTLSEnabled:
setIsDefaultMode:
setIsDegraded:
setIsDemuxNeeded:
setIsDroppedByAQM:
setIsDuplexAudioOnly:
setIsDuplexVideoOnly:
setIsDuplicationAllowed:
setIsDuplicationEnabled:
setIsEndToEndBasedBandwidthProbingEnabled:
setIsExtraDelayForPacketRetransmissionsEnabled:
setIsFecGeneratorEnabled:
setIsFeedbackReceived:
setIsFinal:
setIsFirstTimestampArrived:
setIsFocus:
setIsGKVoiceChat:
setIsHalfDuplexAudio:
setIsHopByHopEncryptedOnOptions:
setIsIPv6:
setIsInCanvas:
setIsInDaemon:
setIsKeyExchangeEnabled:
setIsLastFrameProbingSequence:
setIsLinkCongested:
setIsLocal:
setIsLocalCellular:
setIsLocalOnCellular:cappedVideoStreamIDs:
setIsLost:
setIsLowLatency:
setIsLowLatencyAudio:
setIsLowestQuality:
setIsMediaStalled:
setIsMuted:
setIsMutedTalkerNotificationRegistered:
setIsOneToOne:
setIsOneToOneModeEnabled:
setIsOneToOneRemoteMediaStalling:
setIsOneToOneScreenEnabled:
setIsOpusInBandFecEnabled:
setIsPaused:
setIsQueryAnswered:
setIsRTCPFBEnabled:
setIsRTCPForLossFeedbackEnabled:
setIsRTPFlushBasebandFromVCRateControl:
setIsRateLimitedMaxTimeExceeded:
setIsRedundancyControlEnabled:
setIsRedundancyStrategyResetPending:
setIsRelayEnabled:
setIsRelayForced:
setIsRemoteAudioPaused:
setIsRemoteMediaQualityDegraded:
setIsRemoteMediaStalled:
setIsRemoteOnPeace:
setIsRemotePreAzul:
setIsResumed:
setIsSenderProbingEnabled:
setIsSendingEnabled:
setIsServerBasedBandwidthProbingEnabled:
setIsServerPacketRetransmissionEnabled:
setIsServerRTxEnabled:
setIsStalled:
setIsStarted:
setIsTargetBitrateStabilized:
setIsTemporalStream:
setIsUseCaseWatchContinuity:
setIsUsingSuppression:
setIsValid:
setIsVariableSliceModeEnabled:
setIsVideoDegraded:
setIsVideoEnabled:
setIsVideoPaused:
setIsVideoPausedToStart:
setIsVideoProtected:
setIsVideoQualityDegraded:
setIsVideoQualityNearDegraded:
setIsVideoSourceScreen:
setIsVideoSuspended:
setIsVisible:
setIsWaitingForICEResult:
setIsWindowed:
setJbTargetEstimatorSynchronizer:
setJitterBufferMode:
setKeyFrameInterval:
setKeyFrameOnlyStreamID:
setKeySpace:
setLandscapeAspectRatioX:
setLandscapeAspectRatioY:
setLargeFrameSizeAtCurrentBandwidth:
setLargeFrameSizeRequested:
setLastActiveCall:
setLastActiveCallID:
setLastBasebandFlushCountChangeTime:
setLastCalledApiName:
setLastDecodedFrameTime:
setLastFrameTime:
setLastKeyFrameSentTime:
setLastNoVoiceActivityPacketCount:
setLastPrimaryConnectionInUse:
setLastProbingSequenceTimeActual:
setLastProbingSequenceTimeExpect:
setLastRTPTimestamp:
setLastReceived:
setLastReceivedRTCPPacketTime:
setLastReceivedRTPPacketTime:
setLastSRTimestamp:
setLastSentAudioHostTime:
setLastSentAudioSampleTime:
setLatencySensitiveMode:
setLayerBoundsForStreamTokenWithArguments:error:
setLayerHostBounds:
setLength:
setLinkFlags:
setLinkPreferenceOrder:
setLinkProbingCapabilityVersion:
setLinkProbingHandlerDelegate:
setLinkProbingResultConfig
setLocalAddress:
setLocalBandwidthEstimation:
setLocalCameraWithUID:
setLocalCellTech:
setLocalConnectionData:
setLocalIdentityForKeyExchange
setLocalInterfaceType:
setLocalLanguages:
setLocalLinkTypeSuggestionChangeTime:
setLocalParticipantID:
setLocalParticipantInfo:networkSockets:withError:
setLocalRelayConnectionData:
setLocalRelayRequestResponse:
setLocalRelayUpdate:
setLocalSSRC:
setLocalScreenAttributes:
setLocalSwitches:
setLocalVideoAttributes:
setLocalVideoLayer:front:
setLocale:
setLogPrefix:
setLoopLength:
setLowFpsVideoEnabled:
setLowNetworkModeEnabled:
setLtrAckFeedbackType:
setMapKey:
setMapping:
setMargin:
setMasksToBounds:
setMatchedFeaturesString:localFeaturesString:remoteFeaturesString:
setMaxAveragePacketDelayMs:
setMaxBandwidth:
setMaxBitrateKbps:
setMaxChannelCountMic:
setMaxChannelCountSpeaker:
setMaxConnectionMTU:
setMaxDelay:
setMaxEncoderPixels:
setMaxFrameDurationMillis:
setMaxFramerate:
setMaxIDSStreamIdCount:
setMaxMediaBitrate:
setMaxNetworkBitrate:
setMaxOWRD:
setMaxPacketLength:
setMaxPacketSize:
setMaxPacketsPerSecond:
setMaxPtime:
setMaxRedundancyPercentage:
setMaxSupportedTemporalLayers:
setMaxTargetBitrate:minTargetBitrate:
setMaxTierIndex:minTierIndex:
setMaxUDPPayloadSize:
setMediaControlInfoFECFeedbackVersion:
setMediaControlInfoGenerator:
setMediaControlInfoGeneratorOptions:
setMediaControlInfoGeneratorType:
setMediaControlInfoSubVersion:
setMediaControlInfoVersion:
setMediaController:
setMediaFlags:
setMediaNegotiator:
setMediaPlaybackOnExternalDevice:
setMediaQueue:
setMediaQueuePeakBitrateWithTargetBitrate:
setMediaQueueStreamSettings
setMediaQueueThrottlingInterval:
setMediaState:
setMediaState:forMediaType:
setMediaStreamDelegate:
setMediaStreamDelegateQueue:
setMediaSubtype:
setMediaSuggestion:
setMediaSuspended:forStreamToken:
setMediaType:
setMediaType:enabled:mediaString:xpcMessageKey:xpcOperationKey:completionBlock:
setMediaType:paused:mediaString:xpcMessageKey:xpcOperationKey:completionBlock:
setMediaTypeToSpatialSourceIDMap:
setMemoji:
setMemoryUsageMB:
setMessage:
setMessageHandler:
setMessageReceivedDelegate:
setMetaData:
setMetadata:
setMicCallbackContext:
setMicTimestamp:
setMicrophoneMuted:
setMicrophoneU1:
setMinBitrateKbps:
setMinFramerate:
setMinMarginRequired:
setMinSamplesCount:
setMinSamplesCountFastBandwidthEstimation:
setMinTargetBitrate:
setMismatchedDisplayAspectRatioX:
setMismatchedDisplayAspectRatioY:
setMode:
setMoments:
setMomentsCollectorDelegate:
setMomentsDelegate:
setMomentsImageTypes:
setMomentsSettings:
setMomentsVideoCodecs:
setMultiplexedConnection:
setMultiwayAudioStreams:
setMultiwayCapabilities:
setMultiwayConfig:
setMultiwayVideoStreams:
setMute:forClient:
setMuteOnStreams
setMuted:
setMutedPeers:
setNATType:
setNTPLeastSignificantWord:
setNTPMostSignificantWord:
setNackGeneratorStorebagConfigVersion:
setName:
setNatType:
setNeedsPacketThread:
setNegotiatedCoordinateSystemFromCoordinateSystem:
setNegotiatedScreenEnabled:
setNegotiatedSwitches:
setNegotiatedVideoEnabled:
setNegotiationPackedPayloadWithStreamGroupPayload:
setNegotiationProtocolMask:
setNetworkAgentRefCount:
setNetworkClockID:
setNetworkClockID:withError:
setNetworkConditionsTimeoutInSeconds:
setNetworkFeedbackController:
setNetworkPayload:
setNetworkQualityGraphLayer:
setNetworkQualityUpdateTimer:
setNetworkServiceTime:
setNoRemoteDuplicationThresholdFast:
setNotificationDelegate:
setNtpTime:
setNumRedundantPayloads:
setNwActivity:
setNwConnectionCongestionDetector:
setOSVersion:
setObject:atIndexedSubscript:
setObject:forKey:
setObject:forKey:forP2PID:
setObject:forKeyedSubscript:
setObserver:
setOctetAligned:
setOctetsSent:
setOneToOneConfig:
setOneToOneConfigOnRemoteParticipant:
setOneToOneEnabled:
setOneToOneModeEnabled:
setOneToOneModeEnabled:isInitiator:
setOneToOneModeEnabledFromRemoteSignal:
setOneToOneModeSupported:
setOneToOneOperatingMode:
setOneToOneVideoStreamBandwidthProbing:
setOpaque:
setOperatingBitrate:
setOperatingMode:
setOperatingTierIndexWithBitrate:
setOperation:
setOptInDictionary:
setOptIntoExistingSubscribedStreams:
setOptedInStreamID:
setOptionalPackedPayload:
setOrigin:
setOsVersion:
setOutputDevice:
setOutputFormat:
setOutputFrequencyMeteringEnabled:
setOutputMetering
setOutputMeteringEnabled:
setOutputURL:
setPTime:
setPackedPayload:
setPacketCountInNetworkQueue:
setPacketExpirationTime:
setPacketFilter:
setPacketLateAndMissingRatio:
setPacketLossRate5Secs:
setPacketLossRate:
setPacketType:
setPacketsPerBundle:
setParameterSet:
setParameterSets:
setParentNWActivity:
setParentStreamID:
setParentStreamID:videoConfig:
setParticipantData:
setParticipantID:
setParticipantIDOnOptions:
setParticipantId:
setParticipantJoinedToFirstMKITimer
setParticipantUUID:
setPause:
setPauseAudio:
setPauseAudio:callID:error:
setPauseAudio:error:
setPauseAudio:force:error:
setPauseOnMediaStreams:
setPauseVideo:
setPauseVideo:callID:error:
setPauseVideo:error:
setPauseVideo:force:error:
setPaused:
setPaused:onStreamGroups:
setPayload:
setPayload:mediaLine:
setPayloadFlags:
setPayloadFlagsWithPayloads:
setPayloadPreference:
setPayloadSpecOrPayloads:
setPayloads:
setPeerCN:
setPeerCN:callID:
setPeerProtocolVersion:
setPeerProtocolVersion:forCallID:
setPeerReportingID:
setPeerReportingID:sessionID:callID:
setPeerReportingIdentifier:sessionIdentifier:forCallID:
setPeerSubscribedStreamCallback:
setPeerSubscribedStreamIDs:
setPeerSubscribedStreams:
setPendingPrimaryConnection:
setPendingRelayCount:
setPendingSecondaryConnection:
setPendingVideoStreams:
setPercentage:
setPeriodicReportingEnabled:
setPersistent:
setPiggybackBlobPreference
setPixelFormats:
setPopCompletionHandler:
setPort:
setPortraitAspectRatioX:
setPortraitAspectRatioY:
setPosition:
setPositionalInfo:
setPowerLevel:
setPowerSpectrumEnabled:
setPowerSpectrumStreamToken:
setPreWarmCellEnabled:
setPreWarmState:
setPreferRelayOverP2P:reason:
setPreferRelayOverP2PEnabled:
setPreferredAudioCodec:
setPreferredBlockSize:
setPreferredCodec:
setPreferredCodecRateMode:
setPreferredFormat:
setPreferredFormatExt1:
setPreferredIOSampleRate:
setPreferredIOSamplesPerFrame:
setPreferredLocalInterfaceForDuplication:
setPreferredMediaBitRate:
setPreferredMediaBitrate:
setPreferredMediaBitrateWithConfiguration:
setPreferredMode:
setPreferredRemoteInterfaceForDuplication:
setPreferredSampleRate:
setPreferredVideoCodec:
setPresentationInfo:
setPresentationState:
setPreservesFlip:
setPrimaryConnHealthAllowedDelay:
setPrimaryConnection:
setPrimaryLinkID:
setPrimaryPayload:
setPriority:
setProbingSequenceCount:
setProbingSequencePacketCount:
setProbingSequencePacketSize:
setProcessCompleteHandler:
setProcessID:
setProcessId:
setProfileLevel:
setProfileLevelId:
setProminenceIndex:
setPtime:
setPushCompletionHandler:
setQualityDelegate:
setQualityIndex:
setQualityIndicator:
setQueue:
setQuickRelayServerProvider:
setRSSIThresholdEnabled:
setRTPPayloads:numPayloads:withError:
setRTPPayloads:withError:
setRTPTimestamp:
setRadioAccessTechnology:
setRampDownBWDropEnabled:
setRatType:
setRateAdaptationEnabled:
setRateChangeCounter
setRateChangeCounter:
setRateControlConfig:
setRateControlInterval:
setRateSharingCount:
setRatio:
setReadHandlerWithOptions:
setReadyToReadBlock:
setReceiveDelegate:
setReceiveHandler:
setReceiveMasterKey:
setReceiveMediaKey:
setReceivedSIPInvite:
setReceiverPayloads
setReceiverReport:
setRecommendedMTU:
setRedEnabled:
setRedMaxDelay20ms:
setRedNumPayloads:
setRedNumPayloads:withMaxDelay:shouldResetHistory:
setRedPayload:
setRedundancyController:
setRedundancyControllerFECVersion:
setRedundancyControllerMode:
setRedundancyEnabled:
setRedundancyEnabledFor720Stream:
setRedundancyMode:
setRedundancyPercentage:
setRegisteredConnection:
setReinitEncoderOnFrameSizeChangeEnabled:
setRelay:
setRelayConnectionID:
setRelayServerProvider:
setRemoteAddress:
setRemoteAddress:remoteRTCPPort:
setRemoteAudioEnabled:
setRemoteAudioPaused:
setRemoteBasebandCodec:
setRemoteBasebandCodecSampleRate:
setRemoteBlobCreationTime:
setRemoteBlobVersion:
setRemoteCallID:
setRemoteCallInfoFromInviteDictionary:
setRemoteCanDisplayCaptions:
setRemoteCellTech:
setRemoteCodecInfo:
setRemoteCodecSampleRate:
setRemoteCodecType:
setRemoteCodecType:sampleRate:
setRemoteCodecTypeAndSampleRate:
setRemoteConnectionData:
setRemoteDeviceName:
setRemoteDeviceVersionIDS
setRemoteFaceTimeSwitchesAvailable:
setRemoteFrameHeight:
setRemoteFrameWidth:
setRemoteIDSParticipantID:
setRemoteIO:
setRemoteIO:withError:
setRemoteInterfaceType:
setRemoteLanguages:
setRemoteLinkFlags:
setRemoteLinkProbingCapabilityVersion:
setRemoteMediaStalled:
setRemoteMediaState:
setRemoteMediaState:forMediaType:
setRemoteParticipantID:
setRemoteParticipants:
setRemoteParticipantsMapByServerID:
setRemotePreWarmStateEnabled:
setRemoteRelayConnectionData:
setRemoteRelayRequestResponse:
setRemoteRelayUpdate:
setRemoteSSRC:
setRemoteScreenAttributes:
setRemoteScreenEnabled:
setRemoteSwitches:
setRemoteSwitches:isCaller:
setRemoteSystemAudioPaused:
setRemoteUserAgent:
setRemoteVideoAttributes:
setRemoteVideoBackLayer:
setRemoteVideoEnabled:
setRemoteVideoInitialOrientation:
setRemoteVideoLayer:
setRemoteVideoLayerBounds:
setRemoteVideoOrientation:
setRemoteVideoPaused:
setRenderProcessTime:
setRepairedMaxNetworkBitrate:
setRepairedStreamID:
setReportedSourceSSRC:
setReportingAgent:
setReportingClientType:
setReportingConfig:
setReportingHierarchyToken:
setReportingParentID:
setRequiredPackedPayload:
setRequiresSecureCoding:
setRequiresWiFi:
setRequiresWifi:
setReservedBitrate:
setResolution:
setResult:
setResumeAudio
setResumeVideo
setRingBuf:
setRootLayer:
setRoundTripTime:
setRtcpFlags:
setRtcpPSFB_FIREnabled:
setRtcpPSFB_LTRAckEnabled:
setRtcpPSFB_PLIEnabled:
setRtcpRTPFB_GNACKEnabled:
setRtcpReceiveCallbackEnabled:
setRtcpRemotePort:
setRtcpReportProvider:
setRtcpSREnabled:
setRtcpSendInterval:
setRtcpSendIntervalSec:
setRtcpTimeOutEnabled:
setRtcpTimeOutInterval:
setRtcpTimeOutIntervalSec:
setRtcpTimeoutEnabled:
setRtcpTimeoutInterval:
setRtcpXREnabled:
setRtpHandle:
setRtpId:
setRtpPayload:
setRtpSSRC:
setRtpSampleRate:
setRtpTimeOutEnabled:
setRtpTimeOutInterval:
setRtpTimeOutIntervalSec:
setRtpTimeoutEnabled:
setRtpTimeoutInterval:
setRtpTimestampRate:
setRtpVideo:
setRules:
setRunningClient:
setRxCodecFeatureListString:
setRxMaxBitrate:
setRxMinBitrate:
setRxPayloadList:withPayloadTypes:
setRxPayloadList:withPayloadTypes:isRedEnabled:
setRxPayloadType:
setRxRedPayloadType:
setSKEBlobOnTransportSession
setSKEState:forCallID:
setSRTCPCipherSuite:
setSRTPCipherSuite:
setSSLFlags:forInterface:isCached:
setSSRC:
setSampleRate:
setScreenCaptureDisplayID:
setScreenDisplayID:
setScreenEnabled:
setScreenPixelCount:
setScreenRes:
setScreenRuleCollections:
setScreenSSRC:
setScreenSettings:
setScreenSharingHost:
setSdpString:
setSecondaryConnection:
setSecondaryFlags:
setSecureMessagingRequired:
setSecurityKeyHolder:
setSecurityKeyManager:
setSegments:
setSelectiveScreenUUID:
setSelectiveSharingPort:
setSendActiveVoiceOnly:
setSendAudio:forCallID:
setSendMasterKey:
setSendMediaKey:
setSenderLanguages:
setSendingAudio:callID:error:
setSequenceNumber:
setSerializedSize:
setServerAddresses:
setServerBag:
setServerInfo:
setSessionActive:
setSessionConferenceState:callID:
setSessionConferenceVisualRectangle:callID:
setSessionID:
setSessionID:callID:
setSessionIP:
setSessionId:
setSessionInfoSynchronizerCallbacks
setSessionInfoSynchronizerErrorResponseCallback
setSessionInfoSynchronizerPeerSubscribedStreamsCallback
setSessionMessaging:
setSetSessionID:forCallID:
setSettingsU1:
setSframeCipherSuite:
setSframeCryptor:
setShareProfile:
setSharedXPCConnection:
setSharingEnabled:
setShouldApplyRedAsBoolean:
setShouldCreateMediaControlInfoGenerator:
setShouldCreateRedundancyController:
setShouldDisableLargeFrameRequestsWhenInitialRampUp:
setShouldDisplayNetworkQualityGraph:
setShouldEnableFaceZoom:
setShouldEnableMLEnhance:
setShouldIgnoreRTPHeaderExtensions:
setShouldPrioritizeParticipantIDForSIPInvite:
setShouldRegisterMediaControlInfoGeneratorCallbacks:
setShouldScheduleMediaQueue:
setShouldSendAudio:
setShouldSendFeedbackControllerReport:
setShouldSetupNWMonitor:
setShouldSkipIDRScheduler:
setShouldSynchronizeWithSourceRTPTimestamps:
setShouldTimeoutPackets:
setShouldUpdateRemoteScreenAttributes:
setSignalStrengthBars:
setSignalStrengthDisplayBars:
setSignalStrengthMaxDisplayBars:
setSipState:
setSize:
setSocket:
setSourceFramerate:
setSpatialAudioDisabled:
setSpatialAudioSourceID:
setSpatialContext:
setSpatialMetadata:
setSpatialMetadata:audioSessionId:completionHandler:
setSpatialMetadataEntryMap:
setSpeakerCallback:
setSpeakerCallbackContext:
setSpeakerPhoneEnabled:
setSpeakerPowerRMS:
setSpeakerTimestamp:
setSpeakingDelegate:
setSrtpKeyBytes:
setSsrc:
setStartCompletionHandler:
setStartConnectionHealthMonitoring:
setStartHostTime:
setStartOnDemand:
setStartRTPTimeStamp:
setStartTime:
setStartTime:forKey:
setStarted:
setState:
setStateChangeHandlerForConnection:result:semaphore:
setStateQueue:
setStatistics:
setStatisticsCollector:
setStatisticsID:
setStatsReportingInterval:
setStatus:
setStillImageTime:
setStopTime:forKey:
setStream:
setStreamConfig:withError:
setStreamDelegate:
setStreamDirection:
setStreamGroupID:
setStreamGroupMode:
setStreamGroups:
setStreamID:
setStreamIDs:
setStreamIDs:numOfStreamIDs:repairedStreamIDs:numOfRepairedStreamIDs:
setStreamIDs:repairStreamIDs:
setStreamIDsCell:
setStreamIDsWifi:
setStreamInputID:
setStreamOutput:
setStreamOutputDelegate:
setStreamTokens:
setStreams:
setStreamsUseRTCPWithStreamInfos:
setString:
setSubscribedTo:
setSubscriptionSlot:
setSupportDuplication:
setSupportFlags:
setSupportedAudioPayloads:
setSupportedBandwidths:
setSupportedCodecs:
setSupportedImageTypes:
setSupportedModes:
setSupportedNumRedundantPayload:
setSupportedPayloads:
setSupportedVideoCodecs:
setSupportedVideoFormats:
setSupportsAdaptation:
setSupportsCodecBandwidthUpdate:
setSupportsDynamicMaxBitrate:
setSupportsSKEOptimization:
setSwitches:
setSyncSource:
setSyncSourceDelegate:
setSynchronizationDelegate:
setSynchronizationSourceStreamToken:
setSynchronizationTimeOffset:
setSynchronizer:
setSystemAudioCaptureSession:
setSystemAudioConfiguration:
setTCPFlags:forInterface:isCached:
setTalkingPeersLimit:
setTargetBitrate:
setTargetBitrate:rateChangeCounter:
setTargetBitrateCap:
setTargetBitrateChangeCounter:
setTargetBitrateIsAudioOnly:
setTargetMediaBitrate:
setTargetStreamID:
setTaskIsComplete:
setTemporalBitrateArray:
setTemporalScalingEnabled:
setTemporaryMaximumBitrate:
setTerminationHandler:
setText:
setThrottlingInterval:
setTierNetworkBitrate:
setTilesPerFrame:
setTilesPerVideoFrame:
setTime:
setTimestamp:
setTiming:forKey:
setTokenData:
setToneInjectionEnabled:
setTopic:
setTotalLargeFrameWaste:
setTotalMediaStallSaveIntervalWithTime:
setTransactionID:
setTransform:
setTransitionToDisabled:
setTransitionToEnabled:
setTransitionToPaused:
setTransmitterStreamIDs:repairStreamIDs:
setTransport:
setTransportConnectionSelectionVersionWithLocalFrameWorkVersion:remoteFrameworkVersion:
setTransportDelegate:
setTransportProtocolType:
setTransportSession:
setTransportSessionID:
setTransportType:
setTxCodecFeatureListString:
setTxInitialBitrate:
setTxIntervalMin:
setTxMaxBitrate:
setTxMinBitrate:
setTxPayloadType:
setTxRedPayloadType:
setType:
setU1Config:
setU8Version:
setUPlusOneMode:isInitiator:
setUniquePIDOnParameters:shouldRunInProcess:
setUp1080pRules:
setUpAspectRatios:
setUpAspectRatiosFromFeatureListString:
setUpAudioIO:callID:
setUpBufferPoolForOutputWidth:outputHeight:
setUpFirstRemoteFrameTimer
setUpRemoteAspectRatios
setUpRemoteAspectRatiosForPayload:
setUpRemoteAspectRatiosFromFreatureListString:
setUpWithDictionary:
setUpdateNumber:
setUpdateRemoteCodecInfoCallback:
setUpdateRemoteCodecInfoContext:
setUplinkAudioBitrateCapOneToOne:
setUplinkBitrateCap:
setUplinkBitrateCapCell:
setUplinkBitrateCapOneToOne:
setUplinkBitrateCapWifi:
setUpstreamBandwidth:
setUseChannelDataFormat:
setUseControlByte:
setUseInBandFEC:
setUseInBandFec:
setUseMediaDrivenDuplication:
setUsePacketThread:
setUseRateControl:
setUseSBR:
setUseSbr:blockSize:forAACFormat:
setUseUEP:
setUseViceroyBlobFormat:
setUseVideoJitterForVideoPlayout:
setUseWiFiTiers:
setUseWifiTiers:
setUserAgent:
setUsingServerBasedLinks:
setUtteranceNumber:
setUuid:
setVADFilteringEnabled:
setVCIDSSessionInfoPublishedStreamIDs:
setVCIDSSessionInfoSubscribedStreamIDs:
setVCNWConnectionMonitorStatisticsHandler
setVCStatistics:
setVTPIP:
setValue:
setValue:forKey:
setVcMediaQueue:
setVersion:
setVfdCancel:
setVfdMessage:
setVideo:
setVideoAttributes:
setVideoCodec:
setVideoDegraded:
setVideoEnabled:
setVideoFeatureStrings:
setVideoFeatures:
setVideoIsExpected:
setVideoIsPaused:
setVideoLayer:forMode:
setVideoLayerHost:forMode:
setVideoMediaControlInfoGenerator:
setVideoMirrored:
setVideoParameterSet:
setVideoPayload:
setVideoPayloadCollections:
setVideoPayloads:
setVideoPayloads:count:
setVideoPositionalInfo:
setVideoPriorityPointer:
setVideoQuality:
setVideoRTCPFB:useNACK:
setVideoRTCPStreamParamatersForSocket:packetType:remoteIP:remoteIPLength:
setVideoRTPStreamParamatersForSocket:packetType:remoteIP:remoteIPLength:
setVideoReceiverConfig:
setVideoReceiverFeedbackDelegate:
setVideoResolution:
setVideoRuleCollections:
setVideoRuleCollections:featureStrings:isScreen:isCellular16x9Capable:
setVideoSSRC:
setVideoSendingBitrate:
setVideoSettings:
setVideoSourceScreen:
setVideoStreamDelegate:
setVideoStreamMode:
setVideoToken:
setVisibilityIndex:
setVisibleRectCropping:
setVolume:
setVolume:withRampTime:
setVpEnableSpatialChat:
setVpOperatingMode:
setVpOperatingModeToAudioSessionMediaFormatMapping:
setVplrFecEnabled:
setWRMCallId:
setWRMCoexMetrics:
setWRMMetricConfig:
setWRMNotification:
setWRMUpdateCallback:requestNotificationCallback:withContext:completionHandler:
setWaitToBeNominated:
setWcmClientDelegate:
setWeightFactor:
setWiFiAssist:
setWidth:
setWidth:height:frameRate:
setWifiAllowRedLowBitratesEnabled:
setWithArray:
setWithCapacity:
setWithObject:
setWithSet:
setWrapped:
setWriteCompletionHandler:
setWriteDatagramBlock:
setWriteDatagramsBlock:
set_isCellUp:
set_isWifiUp:
setiRATDuplicationEnabled:
settingsU1
settingsWithMediaType:
setupAACELDPayload:
setupABTesting
setupAMRModesWithClientModeMask:
setupAMRWBModesWithClientModeMask:
setupAlwaysOnRedTiersForSupportedRed:usingCellular:
setupAssetWriterWithWidth:height:transactionID:
setupAudio:
setupAudioCodecWithPayload:
setupAudioCookies
setupAudioEnabledMessages
setupAudioEncoders
setupAudioHeaderSize
setupAudioIOWithConfig:
setupAudioOnOffStateMessages
setupAudioPauseMessages
setupAudioPausedHBMessages
setupAudioPausedMessages
setupAudioPowerSpectrum
setupAudioRedWithPlist:audioStreamConfig:supportedAudioRules:
setupAudioRulesWithSBR:isContinuity:
setupAudioStreamConfiguration:audioRules:
setupAudioStreamConfiguration:errorReason:
setupAudioStreamConfiguration:withStreamGroupConfig:streamGroupStreamConfig:
setupAudioStreamGroupStreams:streamGroupConfig:supportedAudioRules:streamIDGenerator:
setupAudioStreamGroupWithStreamConfigs:negotiatorConfig:streamGroupConfiguration:
setupAudioStreamInProcessWithClientArgs:networkSockets:error:
setupAudioStreamOutOfProcessWithClientArgs:networkSockets:error:
setupAudioStreamWithClientPid:enableAudioPowerSpectrum:
setupAudioStreamsWithStreamConfiguration:streamGroupConfiguration:
setupAudioStreamsWithStreamConfigurations:mediaNegotiatorConfig:streamGroupConfiguration:
setupAudioTierPicker
setupAudioWithNegotiatedSettings:
setupBTEventHandler
setupBandwidthAllocationTableForMediaStreamConfigs:streamGroupID:entryType:
setupBandwidthConfigurationsWithArbiter:
setupBandwidthEstimationOptions:featureString:
setupBandwidthExtensionConfiguration:
setupBandwidthSettingsForMediaBlob:
setupBasebandCodecInfoMessages
setupBitrateNegotiation
setupBufferPool:width:height:
setupCNCodecWithClientDictionary:
setupCallbacksWithNWConnectionMonitor:
setupCalleeSIPStartTimeout:
setupCallingModeMessages
setupCameraStreamGroupWithStreamConfigs:negotiatorConfig:streamGroupConfiguration:
setupCannedAudioInjection
setupCap2G:
setupCap3G:
setupCap5G:
setupCapForBandwidthConfiguration:
setupCapLTE:
setupCapWifi:
setupCaptionsForMediaBlob:
setupCellTechChangeMessages
setupClientFormatWithConfiguration:
setupCodecBandwidthsWithClientBandwidthMask:
setupColorInfo
setupCompoundStreamIDsWithStreamIDs:
setupConfig
setupConnectionHealthMonitor
setupConnectionHealthMonitorMultiway
setupConnectionTimeoutTimerWithErrorCode:detailedCode:description:reason:
setupContectRect:withCaptureHeight:
setupDTLSDefaults
setupDTLSSecurity:connectionResult:completionHandler:
setupDTMFCodecWithClientDictionary:
setupDataFormatWithConfiguration:
setupDelegate:delegateQueue:
setupDelegateQueue:
setupDisconnectMessage
setupDynamicDuckingVolumeHandlerForAUIO:
setupEVSModesWithClientModeMask:
setupEmulatedDatagramChannelWithDestination:datagramChannel:
setupEmulatedNetwork
setupEncode:videoRules:
setupEncodeProperties:
setupEncoderBuffer
setupEncodingModeWithVideoStreamConfig:
setupEncryptionWithKey:confIndex:
setupFaceTimeSettingsForMediaBlob:isResponse:
setupFeatureListStringsForReceiverConfig:streamConfig:
setupFeedbackAnalyzerConfig
setupFormatWithConfiguration:
setupH264CellularRules
setupH264Rules
setupH264WifiRules
setupHEVCRules
setupHandoverCandidateChangeMessage
setupIDSConnectionForCallID:destination:socket:error:
setupIODevicesForAUIO:
setupInitialSecondaryRelayWithCallbackRelayFlag:callID:connectionId:
setupInput:queue:dispatchGroup:lastPresentationTime:
setupInputs
setupInternalRedundancyControllerWithStreamConfig:
setupInterruptThread
setupJBTargetSynchronizers
setupLinkConstrainsChangedMessages
setupLocalABTestSwitches
setupLocalAudioTestGroupSwitches
setupLocalDuplicationTestGroupSwitches
setupLocalNetworkTestGroupSwitches
setupLocalOnOffSwitches
setupLocalOnOffSwitchesFromMasterSwitch
setupLocalRateControlTestGroupSwitches
setupLocalSwitchesIndividually
setupLocalVideoTestGroupSwitches
setupLogPrefixWithConfig:
setupLoopbackWithConnectionType:
setupMacDecodingOnlyRules
setupMachineName
setupMaxBitrateMap
setupMediaQualityDegradedMessage
setupMediaStateUpdateMessage
setupMediaStates
setupMediaStream
setupMediaStreamConfig
setupMediaStreamGroupConfig:withNegotiationConfig:
setupMediaSyncForStreamGroup:
setupMediaTypeSettingsWithConfig:
setupMessaging
setupMockIDSDatagramChannelRequiresOptions:
setupModesWithClientModeMask:
setupMomentsForMediaBlob:
setupMomentsMessages
setupMultiwayABTesting
setupMultiwayAudioStreamsForMediaBlob:
setupMultiwayVideoReceiverConfig:forTransportStream:
setupMultiwayVideoReceiverStreamSwitchInfo:forTransportStream:
setupMultiwayVideoReceiverTemporalScalingConfig:forTransportStream:
setupMultiwayVideoStreamsForMediaBlob:
setupNATObserver
setupNWConnection:
setupNWConnectionWithID:
setupNWMonitor
setupNWMonitorNotificationHandler
setupNWMonitorPacketEventHandler
setupNegotiatedAudioPayloads:negotiatedAudioSettings:primaryPayloadPreference:
setupNegotiatedAudioResultsWithRemoteMediaBlob:
setupNegotiatedFaceTimeSettingsWithRemoteMediaBlob:
setupNegotiatedMomentsResultsWithRemoteMediaBlob:
setupNegotiatedResultsWithRemoteMediaBlob:
setupNegotiatedVideoSettingsWithRemoteMediaBlob:
setupNetwork
setupNetworkAddressesForMediaConfig:
setupNotificationQueue:
setupOneToOne
setupOneToOneABTesting
setupOneToOneAdaptiveLearning
setupOneToOneAudioStreamWithConfig:streamGroupID:
setupOneToOneEnabledMessages
setupOneToOneEncryptionInfoWithConfiguration:
setupOneToOneMediaControlInfoGeneratorsWithVersion:oneToOneConfig:videoEnabled:
setupOneToOneMediaQueue
setupOneToOneVideoReceiverDelegate
setupOneToOneVideoStreamDelegate
setupOneToOneVideoStreamWithConfig:streamGroupID:
setupPayloadTypes
setupPayloads
setupPayloadsWithGroupConfig:
setupPeerInfo:usingInviteData:isCaller:capabilities:
setupPendingSecondaryRelayWithNewPrimary:
setupPerfTimersWithMediaKeyIndex:perfTimerIndexToStart:
setupPeriodicReporting
setupPiPStateChangeMessage
setupPowerSpectrumMeter
setupPreferredIOSettings
setupPreferredInterfaceMessage
setupRTPForIDS
setupRTPWithIDSDestination:error:
setupRTPWithIPInfo:error:
setupRTPWithLocalParticipantInfo:error:
setupRTPWithSocketDictionary:error:
setupRTPWithSockets:error:
setupRTPWithTransportSetupInfo:error:
setupRTPWithTransportStreams
setupRateControlConfigMessage
setupRateControllerOneToOne
setupRateControllersMultiway
setupRedFactorsWithPList:audioStreamConfig:
setupRedWithRxPayload:txPayload:
setupRedundancyController
setupRedundancyControllerForMode:
setupRedundancySettings
setupRemoteQueueWithSenderQueue:
setupRemoteReceiverQueueWithSenderQueue:
setupReportingAgent
setupReportingAgent:
setupResizingSessionsWithVisibleRect:cameraStatusBit:
setupRules
setupSRTP
setupScreenWithNegotiatedSettings:
setupSecondaryRelayForCall:callerRequired:
setupSecureDataChannel
setupSecurityKeyHolderForStreamConfig:
setupServiceConnection
setupSframeCryptorsWithError:
setupSiriSupport
setupSourceTransport:
setupSpatialAudio
setupSpatialAudioWithCallID:
setupSpatialAudioWithMetadata:spatialMetadataEntryMap:
setupSpatialInfoForStreamGroupConfig:
setupStillImageWithTimestamp:transactionID:visibleRect:cameraStatusBit:imageType:
setupStreamConfigWithCodecs:streamConfig:codecConfigs:featureStringsDict:
setupStreamGroupMediaSync
setupStreamGroupStateFetchMessage
setupStreamGroupWithConfig:
setupStreamGroupWithStreamGroupConfig:negotiatorConfig:
setupStreamGroups
setupStreamGroupsWithConfig:negotiatorConfig:
setupStreamGroupsWithRemoteMediaBlob:
setupStreamInputsWithConfig:
setupStreams
setupStreamsWithConfig:
setupStreamsWithGroupConfig:
setupStreamsWithStreamInfos:
setupSymptomEnabledMessage
setupSymptomEnabledMessages
setupSystemAudioCapture
setupTextReceiverWithError:
setupTextTransmitter
setupTierPickerForConfig:
setupTransport
setupTransportSessionWithDestination:
setupUplinkBitrateCaps
setupVCMediaStreamRateAdaptationConfig:
setupVTPCallback
setupVTPSocket
setupVTPSocketWithFileDescriptor:
setupVideoEnabledMessages
setupVideoFormatWithConfiguration:
setupVideoMediaStreamsWithStreamGroupConfiguration:streamGroupConfig:streamGroupID:mediaType:
setupVideoParameterSupport:
setupVideoPauseMessages
setupVideoPausedMessages
setupVideoPriority
setupVideoReceiver:withTransmitterHandle:
setupVideoRedundancyMessages
setupVideoRuleCollection:
setupVideoRulesForPayload:transportType:encodingType:formatList:formatListCount:preferredFormat:supportsHighDef:
setupVideoStream
setupVideoStreamConfiguration:errorReason:
setupVideoStreamConfiguration:withStreamGroupStreamConfig:codecConfigs:multiwayConfig:groupID:
setupVideoStreamGroupStreams:streamGroupConfig:streamIDGenerator:
setupVideoStreamsWithStreamConfiguration:streamGroupConfiguration:
setupVideoStreamsWithStreamConfigurations:mediaNegotiatorConfig:streamGroupConfiguration:
setupVideoWithNegotiatedSettings:
setupWCMClient
setupWRMAlertUpdateMessage
setupWRMClient
setupWRMClientWithMetricsConfig:
setupWRMCoexMetricsMessage
setupWithSharedSecret:isCaller:error:
setupWriterWithMode:
setupWriterWithTransactionID:filePath:stillImageTime:visibleRect:cameraStatusBit:
setupXPCConnection
setupXPCQueue
sframeCipherSuite
sframeCryptor
shareLocalInterfacePreferenceWithPeerDuringActiveDuplicationForEvent:updateResult:
sharedEstimatedBandwidth
sharedEstimatedBandwidthUncapped
sharedIDSService
sharedInstance
sharedInstanceClientFacing
sharedInstanceRemoteFacing
sharedInstanceSafeViewClientFacing
sharedInstanceSafeViewRemoteFacing
sharedManager
sharedRemoteEstimatedBandwidth
sharedSystemAudioInstance
sharedVoiceChatInstance
sharedXPCConnection
sharingEnabled
shortTerm
shortValue
shouldAcceptDataFromSourceDestinationInfo:
shouldAddBackupEntry:referenceTable:referenceQualityIndices:
shouldAdjustForLastPauseCompleteTimestamp:
shouldAppendEntry:screenEncoderGroups:
shouldAppendSampleBuffer:RTPtimeStamp:mediaType:
shouldApplyRedAsBoolean
shouldBlockRampUpDueToLossEventThreshold
shouldBlockRampUpDueToNetworkUnstable
shouldBlockRampUpDueToRecentLossEvent
shouldCapStream:cappedBitrate:
shouldCleanupFiles
shouldCompoundListIgnoreStream:streamConfig:activeStreamIds:
shouldCreateMediaControlInfoGenerator
shouldCreateRedundancyController
shouldDisableLargeFrameRequestsWhenInitialRampUp
shouldDisplayNetworkQualityGraph
shouldDisplayNetworkQualityGraph_
shouldDisplayVideoInfoLayer
shouldDropCurrentPrimaryConnectionWithConnectionStats:
shouldDropPacketWithCurrentAQMBudget:
shouldDuplicatePacket:
shouldEnableBasebandAdaptationWithBasebandStatistics:previousBasebandRAT:
shouldEnableFaceZoom
shouldEnableMLEnhance
shouldEnablePacketRetransmissionForStreamGroupID:
shouldEnablePacketSizeLimitForPayload:
shouldEnableRateControlForStreamType:
shouldEncodeTopicKeyInMessage
shouldEnforceScreenFrameRateLimit
shouldFastRampUp
shouldFilterTierForPayloadConfig:bitRate:packetsPerBundle:mode:redNumPayloads:cellular:
shouldFinishWritingSampleBuffer:RTPtimeStamp:mediaType:
shouldForceWRMRecommendationUsingUserDefaults
shouldGenerateIDRWithStreamSchedule:
shouldKeepAllConnections
shouldNominateCandidatePair:interfaceMask:nominated:demote:connectionPriority:replaceOnly:
shouldNominateCandidatePairInternal:interfaceMask:nominated:demote:connectionPriority:replaceOnly:
shouldNominateConnection:
shouldNotifyDelegateDidStartBeforeAudioSetup
shouldOverrideGPUMuxing
shouldPrioritizeParticipantIDForSIPInvite
shouldProcessAtTime:
shouldRampDown
shouldRampDownDueToBaseband
shouldRampDownDueToConsecutiveLoss
shouldRampDownDueToLossEvent
shouldRampDownDueToLossThreshold
shouldRampDownDueToNOWRD
shouldRampDownDueToNOWRDAcc
shouldRampUp
shouldRampUpDueToBaseband
shouldRampUpDueToNWConnection
shouldReadPacket:
shouldRegisterMediaControlInfoGeneratorCallbacks
shouldRegisterReportingForStreamType:
shouldRegisterReportingPeriodicTask
shouldReinitializeCallWithDuration:forCallID:
shouldReplaceConnection:withConnection:
shouldReportNetworkInterfaceType
shouldRequestWRMNotificationWithDuplicationReason:isDuplicationEnabled:isLocalUsingCellular:atTime:
shouldResetAudioSessionWithProperties:
shouldResetAudioUnitWithProperties:
shouldResetRTPTimestampOnStart
shouldResumeAudio
shouldResumeVideo
shouldRunInProcessWithOptions:
shouldScheduleMediaQueue
shouldSendAudioForCallID:
shouldSendBlackFrame
shouldSendBlackFrame:
shouldSendBlackFrame:callID:
shouldSendBlackFrames:callID:
shouldSendFeedbackControllerReport
shouldSendPacketImmediatelyMM
shouldSetPause:onStream:
shouldSetupNWMonitor
shouldSetupStreamGroupWithID:
shouldSkipIDRScheduler
shouldStopReportingTimer
shouldSubscribeToStreamID:peerSubscribedStreams:
shouldSynchronizeWithSourceRTPTimestamps
shouldTimeoutPackets
shouldTransmitDTMFWithTimestamp:
shouldTryNATCheck
shouldUpdateCodecBandwidth:
shouldUpdateCodecBitrate:
shouldUpdateLastReceivedPacketTimestamp
shouldUpdateRemoteScreenAttributes
shouldUpdateServerBasedConnection:
shouldUseAACELDSBRForMode:
shouldUseCookieForPayload:
shouldUseMinMicBitrate:streamToken:remainderBitrate:
shouldUseMultipleStreamGroupAlgorithm
shouldUseNWConnectionBackingSocket
shouldUseRandomRTPTimestampForMode:
shouldUseRandomRTPTimestampWithType:
shouldUseRepairBitrateForEntry:isRedundancyEnabled:isRedundancyEnabledFor720Stream:
shouldUseServerBasedConnection:isEndToEnd:
showDecodedFrame:atTime:
shutdownSocket
shutdownVoiceChatFromRemoteSIPSignal:withReason:
signal
signalStrengthBars
signalStrengthDisplayBars
signalStrengthMaxDisplayBars
signalUnderlyingFileDescriptor
signalingExcessiveCellularRxBytes
signalingExcessiveCellularTxBytes
simultaneousTalkers
sinkCount
sinkIO
sipCallback:callID:msgIn:msgOut:optional:confIndex:
sipConnectThreadProc:
sipConnectWithError:
sipRefCount
sipState
size
sizeForVideoResolution:
skeState
skipBandWidthCheckForCodecRateModes:supportedBitrates:
sleepForTime:
slotForMode:
slotForStreamToken:videoMode:
sockFD
socket
socketWithIPAddress:srcPort:error:
socketWithIPAddress:srcPort:shouldConnect:error:
sortMediaEntries
sortMediaEntriesGroupIds:
sortUsingComparator:
sortUsingFunction:context:
sortUsingSelector:
sortedArrayUsingSelector:
sortedEntries
sourceDestinationInfo:isSourceOnCellular:isSourceIPv6:
sourceExistsForStreamToken:
sourceFrameRateDidChange:
sourceIO
sourceSampleRate
sourceToken
sourceType
spatialAudioDisabled
spatialAudioSourceID
spatialAudioSourceIDForMediaType:
spatialChannelIndex:spatialAudioSourceID:forMediaType:
spatialContext
spatialMetadataEntryForMediaType:
spatialMetadataEntryMap
spatialToken
speakerBuffer
speakerCallbackContext
speakerContext
speakerPhoneEnabled
speakerTimestamp
speakingArray
speakingDelegate
splitPacket:packetArray:
srtpKeyBytes
srtpLock
ssrc
ssrcForStreamGroup:localConfig:ssrc:
standardUserDefaults
start
startAFRC:
startAUIOWithProperties:
startAWDStats
startActiveProbingOnLinks:
startActiveProbingWithOptions:
startAllConnections
startAudioDump
startAudioIO
startAudioIOWithCompletionHandler:
startAudioSession
startAudioSessionWithCompletionHandler:
startAudioSessionWithError:
startAudioSessionWithProperties:
startAudioWithCompletionHandler:
startBagLoad
startCameraStreamGroups
startCapture
startChangeListener
startClient:
startClientIO
startCompletionHandler
startConnectionCheckForCallID:remoteConnectionDataBlob:relayDictionary:iceTimeout:securityIdentity:skeState:usedRelay:
startConnectionWithBlob:useRelay:isInitialRelay:error:
startConnectionWithCallID:inviteData:isCaller:capabilities:destination:error:
startConnectionWithCallID:oldCallID:usingInviteData:isCaller:relayResponseDict:didOriginateRelayRequest:capabilities:error:
startConnectionWithCallID:oldCallID:usingInviteData:isCaller:relayResponseDict:didOriginateRelayRequest:capabilities:idsSocket:destination:error:
startConnectionWithCallID:oldCallID:usingInviteData:isCaller:relayResponseDict:didOriginateRelayRequest:capabilities:idsSocket:error:
startConnectionWithCallID:usingInviteData:isCaller:relayResponseDict:didOriginateRelayRequest:capabilities:error:
startConnectionWithCallID:usingInviteData:isCaller:relayResponseDict:didOriginateRelayRequest:capabilities:idsSocket:error:
startConnectionWithParticipantID:callID:oldCallID:usingInviteData:isCaller:relayResponseDict:didOriginateRelayRequest:capabilities:idsSocket:destination:error:
startConnectionWithParticipantID:callID:usingInviteData:isCaller:capabilities:idsSocket:destination:error:
startConnectionWithParticipantID:callID:usingInviteData:isCaller:relayResponseDict:didOriginateRelayRequest:capabilities:idsSocket:destination:error:
startContinuousDTMFWithDigit:volume:
startDeallocTimer
startDeallocTimerWithTimeout:
startDetectRemoteAudioLowPowerTime
startDynamicDucker
startFeedbackSource
startHandshakeWithMessage:topic:withOptions:
startHeartbeat
startHostTime
startInputForClient:error:
startInterruptThread
startLocalSessionStatsReceive
startLocalSessionStatsSend
startLocalSessionStatsUpdate
startMKMRecoveryForParticipantIDs:
startMediaQueue:
startMediaStreams
startMediaStreams:
startMediaTransportsWithError:
startMediaWithPreNegotiatedSettings:
startMessaging
startMicStreamGroups
startMonitoringFileDescriptor:forConnection:
startMonitoringMotionActivity
startMultiwayStreams
startNetworkQualityUpdateTimer
startNetworkReceiveThread
startOnDemand
startOneToOne
startOneToOneStreams
startOutputForClient:error:
startPausedHeartbeat
startPeriodicHealthPrint
startPreview
startPreviewUnpausing:
startRTCPSendHeartbeat
startRTPTimeStamp
startRateControl:
startRateControllerOneToOne
startRateControllersMultiwayFromOneToOne:
startRecording:transactionID:timestamp:completionHandler:
startRelay
startRelayIO:
startRelayIO:otherRelayIO:
startRelayThreadWithError:
startRemoteIO
startReportingForOneToOneEnabled:
startRoutingChangeListener
startSIPWithPacketMultiplexMode:transportType:
startScreenGroup
startSessionAtSourceTime:
startSessionMessaging
startStreamGroups
startStreamGroups:
startSynchronization:
startSynchronizeWithStream:
startSystemAudioCapture
startTerminationTimer:terminationType:
startTime
startTimeoutHeartbeat
startTimeoutTimer
startTimers
startTimingForKey:
startVCRC:
startVCRCWithStreamConfig:
startVTP
startVideo
startVideo:error:
startVideoReceive:
startVideoSend:error:
startVoiceActivityDetection
startWCMClient
startWRM
startWRMClientWithMode:metricsConfig:
startWithCompletionHandler:
startWithMetricsConfig:
startWriting
startWritingAtTime:
state
stateChange:
stateChangeTo:
stateEnter
stateExit
stateFrozen:
stateIdleWithAudioUnitProperties:sessionProperties:client:newState:
stateIdleWithControllerSettings:client:newState:
stateInterruptedShouldGoToRunning:
stateInterruptedShouldGoToStarted:
stateInterruptedWithAudioUnitProperties:sessionProperties:client:newState:
stateLock
stateMessageDictionary
statePrepareWithControllerSettings:client:newState:
stateQueue
stateRunning:
stateRunningShouldTransitionToInterrupted:
stateRunningShouldTransitionToStarted:
stateRunningToSessionStarted
stateRunningWithAudioUnitProperties:sessionProperties:client:newState:
stateRunningWithControllerSettings:client:newState:
stateSessionStartedWithAudioUnitProperties:sessionProperties:client:newState:
stateStartingWithControllerSettings:client:newState:
stateTransitionForMediaType:mediaState:previousState:didSucceed:error:
stateTransitionInterruptedToRunning
stateTransitionInterruptedToStarted
stateTransitionRunningToInterrupted
statisticsCollector
statisticsID
statsReceiveStatsPayload
statsRecorder
statsReportingInterval
status
stillWantsToRelay
stop
stop:
stopAUIO
stopActiveProbingOnLinks:resetStats:
stopActiveProbingWithOptions:
stopAllCalls:
stopAllConnections
stopAllParticipants
stopAudioDump
stopAudioIO
stopAudioIO:
stopAudioIOCompletion
stopAudioIOWithCompletionHandler:
stopAudioSession
stopAudioSessionWithError:
stopAudioStreams
stopCallID:
stopCallID:didRemoteCancel:error:
stopCapture
stopChangeListener
stopClient:
stopClientIO
stopContinuousDTMF
stopDTMFEventAtTimestamp:withSampleRate:
stopDynamicDucker
stopFeedbackSource
stopHeartbeat
stopInternal
stopInternalWithHandler:
stopInterruptThread
stopListeningForNotifications
stopLocalSessionStatsUpdate
stopLoopback
stopLoopbackProc:
stopMediaQueueOneToOne
stopMediaStreams
stopMediaStreams:
stopMediaTransports
stopMessaging
stopMicStreamGroups
stopMonitoringFileDescriptor:
stopMonitoringMotionActivity
stopMultiwayStreams
stopNetworkQualityUpdateTimer
stopNetworkReceiveThread
stopOneToOneStreams
stopPausedHeartbeat
stopPreview
stopRTCPSendHeartbeat
stopRateControl:
stopRateControllerOneToOne
stopRelay
stopRelayIO:otherRelayIO:
stopRemoteDuplicationAndUpdateResult:updateAlertState:
stopRemoteIO
stopRoutingChangeListener
stopSIPWithTransportType:
stopSecureControlChannel:
stopSendDTMFEvent
stopSessionMessaging
stopStream:
stopStreamGroups
stopStreamGroups:
stopSynchronization
stopSystemAudioCapture
stopTerminationTimer
stopThread
stopTimeoutHeartbeat
stopTimeoutTimer
stopTimers
stopTimingForKey:
stopVCRC
stopVTPReceiveThread
stopVideo
stopVideo:error:
stopVideoByVCRateControl
stopVideoCaptureClient
stopVideoReceive:isPausing:
stopVideoSend:error:
stopVoiceActivityDetection
stopWCMClient
stopWRMClient
stopWithCompletionHandler:
stopWithCompletionHandlerInternal:
stopWithError:
stopWithError:didRemoteCancel:
store:numSamples:timestamp:
storeBagBitrateForKey:
storeDelegate:delegateQueue:
storeHardwareSettingsForAllOperatingModes
storeMediaState:forMediaType:
storePixelFormatsInBitMap:
storeSpatialAudioMetadataEntry:forMediaType:
stream
stream:addAudioSampleBuffer:timestamp:
stream:addVideoSampleBuffer:cameraStatusBits:timestamp:
stream:didGetLastDecodedFrame:
stream:didPause:error:
stream:didReceiveDTMFEventWithDigit:
stream:didReceiveRTCPPackets:
stream:didResume:error:
stream:didStart:error:
stream:didStartSynchronizer:error:
stream:didUpdateVideoConfiguration:error:
stream:downlinkQualityDidChange:
stream:updateInputFrequencyLevel:
stream:updateOutputFrequencyLevel:
stream:uplinkQualityDidChange:
streamArray
streamConfig
streamConfigWithPayloadConfigs:payloadConfigSampleRates:streamGroupID:
streamConfigs
streamCount
streamDelegate
streamDescription
streamDescriptionForMediaStreamConfig:
streamDidInterruptionBegin:
streamDidInterruptionEnd:
streamDidRTCPTimeOut:
streamDidRTPTimeOut:
streamDidServerDie:
streamDidStop:
streamDirectionWithClientDirection:
streamFormat
streamGroup
streamGroup:didChangeMediaPriority:
streamGroup:didChangePlayoutRTPTime:
streamGroup:didChangeState:
streamGroup:didRemoteEnableChange:
streamGroup:didRemotePauseChange:
streamGroup:didRequestRedundancy:
streamGroup:didSuspendStreams:
streamGroup:didSwitchFromStreamID:toStreamID:
streamGroup:remoteMediaStalled:duration:
streamGroup:requestKeyFrameGenerationWithStreamID:firType:
streamGroupConfigForMode:
streamGroupConfigWithGroupID:mediaType:subtype:syncGroupID:cipherSuite:
streamGroupConfigs
streamGroupConfigurations
streamGroupFromStreamGroupID:
streamGroupID
streamGroupIDFromStreamGroup:
streamGroupIDs
streamGroupIDsFromParticipantData:
streamGroupIDsWithMediaBlob:
streamGroupNegotiationVideoConfigForStreamGroup:streamConfig:mediaConfig:
streamGroupStateFromStreamGroupID:
streamGroupWithID:
streamGroups
streamGroupsAtIndex:
streamGroupsCount
streamGroupsForIDs:
streamGroupsForMediaType:
streamGroupsType
streamID
streamIDToMediaStreamMap
streamIDs
streamIDsCell
streamIDsForStreamToken:
streamIDsForStreamToken:targetBitrate:
streamIDsForStreamToken:targetBitrateCap:
streamIDsFromTransport
streamIDsIfStreamTokenIsEnabled:
streamIDsIfStreamTokenIsPresent:
streamIDsWifi
streamIds
streamIndex
streamIndex:forStreamGroupID:qualityIndex:isFallbackStream:
streamInputConfigurations
streamInputID
streamInputWithID:
streamOutput
streamOutput:didDegrade:
streamOutput:didPause:
streamOutput:didReceiveSampleBuffer:
streamOutput:didStall:
streamOutput:didSuspend:
streamOutputDelegate
streamOutputDidBecomeInvalid:
streamOutputServerDidDie:
streamPayloadFromProviderConfig:
streamSSRCForStreamGroupID:streamIndex:
streamStateToString:
streamToken
streamToken:didDisableCaptions:error:
streamToken:didEnableCaptions:error:
streamToken:didEndProcessingRequest:stillImageURL:movieURL:error:
streamToken:didFinishRequest:didSucceed:
streamToken:didStartCaptioningWithReason:
streamToken:didStartProcessingRequest:error:
streamToken:didStopCaptioningWithReason:
streamToken:didUpdateCapabilities:
streamToken:didUpdateCaptions:
streamToken:enabled:
streamTokenDidCleanupAllRequests:
streamTokenForStreamGroupID:
streamTokenFromClientContext:
streamTokens
streamsCount
streamsType
string
stringByAppendingFormat:
stringByAppendingString:
stringByDeletingLastPathComponent
stringByPaddingToLength:withString:startingAtIndex:
stringByReplacingOccurrencesOfString:withString:
stringByReplacingOccurrencesOfString:withString:options:range:
stringByTrimmingCharactersInSet:
stringForCheckpoint
stringToMediaType:
stringValue
stringWithCString:encoding:
stringWithCharacters:length:
stringWithFormat:
stringWithString:
stringWithUTF8String:
strong
strongDelegate
subLayerForMode:
subLayerRefForMode:
subStreamConfigs
subarrayWithRange:
subdataWithRange:
sublayers
submitStatisticsCollectorVideoStallUpdateWithTime:
submitStatisticsCollectorVideoStallUpdateWithType:currentTime:stallDuration:idsParticipantID:
subpathsOfDirectoryAtPath:error:
subscribedTo
subscriptionSlot
substring
substringFromIndex:
substringRange
substringToIndex:
substringWithRange:
suggestedLinkTypeCombo
superclass
superlayer
supportDuplication
supportFlags
supportSDPCompression
supportVCPDecoderHEVC
supportVCPEncoderHEVC
supportedAudioPayloads
supportedAudioRules
supportedBandwidths
supportedBitrateRules
supportedBitrates
supportedCodecModesForBandwidth:payload:
supportedCodecsWithVideoCodecs:imageTypes:
supportedImageTypes
supportedModes
supportedNumRedundantPayload
supportedPayloads
supportedPixelFormats
supportedTransportTypes
supportedVideoCodecs
supportedVideoFormats
supportedVideoPayloads
supportedVideoRulesForBitrate:transportType:payload:encodingType:
supportedVideoRulesSizesForBitrate:transportType:payload:encodingType:
supportedVideoRulesSyncForTransportType:payload:encodingType:
supportedVideoSizesForKey:
supportiRATRecommendation
supports1080pDecoding
supports1080pEncoding
supportsAVFCapture
supportsAdaptation
supportsCodecBandwidthUpdate
supportsCodecBandwidthUpdateForCodecType:
supportsCodecRateModesForCodecType:
supportsDedicatedSystemAudioStream
supportsDynamicContentsRectWithAspectPreservation
supportsDynamicMaxBitrate
supportsEVSCodec
supportsGFTSwitchToOneToOne
supportsHEIFEncoding
supportsHEVCDecoding
supportsHEVCEncoding
supportsMultiway720pStream
supportsNegotiatedCoordinateSystem
supportsOneToOneMode
supportsPortraitCameraCapture
supportsRedAudio
supportsSKEOptimization
supportsSecureCoding
supportsSpecialAACBundle
suspendStreamsOnOneToOneModeSwitch
swapScreenStreamGroupSyncSourceWithState:
swapSendAndReceiveRules
switchFromMultiwayToOneToOne
switchFromOneToOneToMultiway
switches
syncGroupID
syncSource
syncSourceDelegate
synchronizationDelegate
synchronizationSourceStreamToken
synchronizationTimeOffset
synchronize
synchronizeParticipantGenerationCounter:
systemAudioCaptureSession
systemAudioConfiguration
systemAudioGroup
tableEntriesForStreamToken:
tableEntriesForStreamToken:targetBitrate:remainingBitrate:isLastEntryForStreamToken:
tail
takeSnapshotForTask:
talkTime
talkingPeersLimit
targetBitrate
targetBitrateCap
targetBitrateChangeCounter
targetBitrateIsAudioOnly
targetMediaBitrate
targetQueue
targetStreamID
taskIsComplete
tearDown
tearDownConnectionWithTerminateMessage:
tearDownRemoteQueue
tearDownRemoteQueues
teardownDecodeSession:
telephonyInterface:anbrActivationUpdate:
telephonyInterface:anbrRecommendation:forDirection:
telephonyInterface:vocoderInfoChangedToType:sampleRate:
temporalScalingEnabled
terminateConnection
terminatePowerSpectrumMeter:
terminateProcess:terminateSource:agent:
terminateSession
terminateStreamInputWithXPCArguments:result:error:
terminationHandler
text
textStreamWithStreamToken:
textString:
textStringLength:
thermalLevelDidChange:
threadSafeCleanupSession:
throwNotSupportedExceptionForMethod:
tierForAudioBitrate:withRedNumPayloads:
tierForNetworkBitrate:withLegacyDuplication:
tierForNetworkBitrate:withRedNumPayloads:
tierNetworkBitrate
tierPickerModeToAVConferenceOperatingMode:
tilesPerFrame
tilesPerFrame:
tilesPerFrame:hdrMode:
tilesPerVideoFrame
tilesPerVideoFrame:
tilesPerVideoFrame:hdrMode:
time
timeIntervalSinceReferenceDate
timeLastCheckedNetworkConditions
timeLastKnowGoodNetworkPLR
timeLastKnowGoodNetworkRTT
timeLastPLR5Secs
timeSinceLastReportedNoPackets
timeStampUpdateCounter
timeoutHeartbeat
timeoutUnfinishedConnection
timerWithTimeInterval:target:selector:userInfo:repeats:
timestamp
timestampQueue
timingForKey:
tlsRecord
toBeChangedPrimaryConnection
toStringWithVideoEnabled:
token
tokenData
tokenForDeviceName:sourceType:
tokens
toneInjectionEnabled
topic
topicKey
topics
totalLargeFrameWaste
totalPacketReceived
tpHandle
trafficClassForStreamType:
transactionCache
transactionID
transactions
translateRateControlDataWithFeedbackMessage:
translateTimestampFromMicro:
translateVocoderTypeToCoreAudioType:
transmitEncodedVideoFrame:cameraStatusBits:
transmitEncodedVideoFrame:size:timestamp:hostTime:cameraStatusBits:
transmitFrameInGroups:numOfPackets:timestamp:hostTime:cameraStatusBits:
transmitROC
transmitVideoPackets:packetSizes:startPacket:packetCount:lastGroup:timestamp:hostTime:cameraStatusBits:bytesSent:
transmitterSframeCryptor
transport
transportArray
transportAsString:
transportDelegate
transportMetadata
transportProtocolType
transportSession
transportSession:cancelRelayRequest:
transportSession:connectionSetupDataDidChange:
transportSession:initiateRelayRequest:
transportSession:sendRelayResponse:
transportSessionID
transportType
triggerInterfaceChange
triggerRateControlWithLocalSessionStats:time:forUplink:forDownlink:fromVCRCExternalThread:
tryNATCheckWithDelay:
tryrdlock
txCodecFeatureListString
txCodecFeatureListStrings
txCodecType
txInitialBitrate
txIntervalMin
txMaxBitrate
txMinBitrate
txPayloadMap
txPayloadType
txRedPayloadType
type
typeIdentifierForImageType:
u1Config
u8Version
uiStateWithAVCUIState:
unarchiveMediaStatesWithData:
unarchivedObjectOfClass:fromData:error:
unarchivedObjectOfClasses:fromData:error:
unbindChannel
underlyingFileDescriptor
unionSet:
unloadRelay
unlock
unmuteWithError:
unregisterAllBTNotificationHandlers
unregisterAllStatisticsChangeHandlers
unregisterAllStreams
unregisterAudioPowerSpectrumSourceForStreamToken:
unregisterAudioSessionId:
unregisterAudioTapForStreamToken:
unregisterBTNotificationHandler:
unregisterBlocksForDelegateNotifications
unregisterBlocksForService
unregisterBluetoothImmediateNotifications
unregisterCaptionsSourceWithStreamToken:
unregisterClientIO:controllerIO:
unregisterCodecRateModeChangeNotifications
unregisterDarwinNotification:
unregisterForMutedTalkerNotificationWithAUIO:
unregisterForNotifications
unregisterFromMutedTalkerNotfications
unregisterFromMutedTalkerNotification
unregisterFromMutedTalkerNotifications
unregisterListenerWithStreamToken:powerSpectrumMeter:error:
unregisterMediaControlInfoGenerator
unregisterMediaStreamNotificationDelegate
unregisterMomentsMessengerWithStreamToken:
unregisterPacketCallback
unregisterPowerSpectrumForCellularTapType:error:
unregisterPowerSpectrumForStreamToken:
unregisterQoSReportingSourceForToken:
unregisterRemoteParticipantFromSession:
unregisterReportingTask
unregisterStatistics
unregisterStatisticsChangeHandlerWithType:handlerIndex:
unregisterStatisticsHandlers
unregisterVideoSink:withCaptureSource:
unregisterWRMCallback
unserialize:
unserializeNegotiationData:
unsignedCharValue
unsignedIntValue
unsignedIntegerValue
unsignedLongLongValue
unsignedLongValue
unsignedShortValue
updateActiveMediaStreamIDs:withTargetBitrate:mediaBitrates:rateChangeCounter:
updateActiveStateForStreamGroup:
updateActiveStatus
updateActiveStreamsCount:
updateActiveVoiceOnly
updateActiveVoiceOnly:
updateAllBitrateCapsForConnection:
updateAllBitrateCapsForConnectionInternal:
updateAndHandleVideoMediaStall:isOneToOneStream:
updateAudioBuffer:WithSample:timestamp:
updateAudioInjectConfig:
updateAudioPriorityWithSampleBuffer:
updateAudioSpectrumState
updateAudioStallInMediaSuggestion:isSuggestionNeeded:atTime:
updateAudioTimestampsForSession:withNewSampleTime:hostTime:numSamples:
updateAudioTxBitrate
updateAudioTxRate
updateAverageTargetBitrate:interval:
updateBandwidthAllocator:activeStream:peerSubscribedStreams:streamGroup:
updateBasebandSuggestionWithStatistics:
updateBufferWithSample:timestamp:
updateBurstyLoss:
updateCachedConnectionState
updateCameraStatusBits:
updateCameraU1Config:forNegotiationBlob:localSupportedVideoPayloads:
updateCameraU1Config:localConfig:
updateCapabilities:
updateCapabilities:forCallID:
updateCapabilities:forSession:
updateCellularExcessiveBytesWithSourceDestinationInfo:bytes:isMediaData:isOutgoing:
updateCellularMTU:
updateCellularTech:forLocalInterface:
updateClient:direction:
updateCodecPayloadAndBitrateForStartEvent:bitrate:
updateCommonNegotiatedVideoSettings:localU1Config:remoteU1Config:
updateConfig:forMode:
updateConfiguration:
updateConfigurationWithDeviceRole:
updateCongestionStatusWhenRampDown:
updateCongestionStatusWhenRampUp
updateConnectionForDuplication
updateConnectionForDuplicationForDuplicationReason:duplicationEnhancementEnabled:preferredLocalInterfaceForDuplication:preferredRemoteInterfaceForDuplication:connectionArray:
updateConnectionHealthWithVCStatisticsMessage:
updateConnectionSelectionPolicyWithPreferE2E:
updateConnectionSelectionPolicyWithPreferRelayOverP2P:preferNonVPN:preferE2E:
updateConnectionStatsWithIndicatorNoPacket:
updateConnectionStatsWithIndicatorNone:
updateConnectionStatsWithIndicatorOnlyPrimaryNoPacket:
updateConnectionStatsWithIndicatorPrimaryImproved:
updateCurrentInputDevice:
updateCurrentOutputDevice:
updateDefaultPayloadConfigsWithConfig:rtpSampleRates:
updateDemuxPacketStatsWithPacketFilterPacketType:
updateDeviceRole:
updateDownlinkBandwithAllocatorClientConfigurations:
updateDuplicationEnhancementSwitches
updateDuplicationStateForAlertStateUpdatedEvent:updateResult:
updateDuplicationStateForConnectionArrayUpdatedEvent:updateResult:
updateDuplicationStateForLocalWRMSuggestingCellularEvent:updateResult:
updateDuplicationStateForLocalWRMSuggestingWiFiEvent:updateResult:
updateDuplicationStateForMediaHealthRecovered:updateResult:
updateDuplicationStateForMissingPacketsUpdateEvent:updateResult:
updateDuplicationStateForReceivingPacketsUpdateEvent:updateResult:
updateDuplicationStateForRemoteDuplicationChanged:updateResult:updateAlertState:
updateDuplicationStateForRemoteWRMSuggestingWiFiEvent:updateResult:
updateDuplicationStateForTurnOffDuplicationForHandoverEvent:updateResult:
updateDuplicationStateForTurnOnDuplicationForHandoverEvent:updateResult:
updateDuplicationStateWithAlertInfo:
updateDuplicationStateWithConnectionOperation:isLocalOnWiFi:isRemoteOnWiFi:
updateDuplicationStateWithEventType:
updateEnabledState
updateEncryption:derivedSSRC:
updateEncryptionInformationWithConfig:
updateEncryptionWithEncryptionMaterial:
updateEncryptionWithKeyMaterial:
updateGKSConnectivitySettings
updateHighestAudioBitrates:bitrate:
updateICERoleForCallID:role:remoteCallID:sessionID:
updateInitialBitrateFromDefaultWithAlgorithmConfig:
updateInterfaceList:shouldFilterCellInterface:isUpdateNeeded:
updateInternalStatistics:
updateInternalStats
updateInternalStatus
updateLargeFrameSizeWithBandwidth:
updateLastEmergencyBasebandRampDownTimeWithTierIndex:
updateLastGeneratedKeyMaterial
updateLastReceivedAudioTime
updateLastReceivedPacket:packetType:
updateLastReceivedPacketWithTimestamp:packetType:
updateLegacyStates
updateLinkPreferSuggestion:
updateLinkPreferenceOrder
updateLocalStreamConfiguration
updateLocalVideoCaptureFrameRate
updateLossEventBandwidthLimit:
updateMaxAllowedBitratePerConnection:connectionType:negotiatedSettings:
updateMaxConnectionMTU:
updateMaxPktLength
updateMediaDegradedHistoryWithCurrentAudioErasure:idsParticipantID:
updateMediaDegradedHistoryWithCurrentVideoStallDuration:idsParticipantID:
updateMediaDegradedHistoryWithValue:idsParticipantID:
updateMediaHealthStats:idsParticipantID:
updateMediaSettingsWithConfig:
updateMediaState:forStreamGroup:
updateMediaState:forStreamGroups:
updateMediaStatesWithConfig:
updateMediaStreamsForStreamGroup:uplinkBitrateCap:rateChangeCounter:
updateMeter:forParticipant:atIndex:
updateMeters:
updateMetricsConfig:
updateMinMaxSinceTime:
updateMomentsCapabillities:imageType:videoCodec:
updateMultiwayBandwithAllocationTable:mediaType:streamGroupID:encoderGroupID:minNetworkBitrate:maxNetworkBitrate:
updateMultiwayRateControllerWithActiveConnection:isScreenEnabled:isLocal:
updateNatTypeCache:
updateNatTypeCache_CachePlistScheme:
updateNatTypeCache_OSXGamedScheme:
updateNegotiatedSettings:
updateNegotiatedSettingsOnetoOne:
updateNetworkCheckHint:
updateNetworkFeedbackControllerReport:
updateNetworkQualityGraph
updateNumber
updateOneToOneAudioPositionalInfo:
updateOneToOneBitrateCapsForConnection:
updateOneToOneModeEnabled:
updateOneToOneRateControllerForVideoEnabled:
updateOneToOneRateControllerForVideoEnabled:screenEnabled:
updateOneToOneVideoStreamCustomResolution:videoSettings:
updateOverlayWithPixelBuffer:
updatePacketCountAndByteCountWithIndex:packetSize:numOfStreamId:isPriorityIncluded:isOutgoing:
updatePacketLossRate:time:
updateParametersForRampDownSuppression
updateParentStreamIDForGroupConfig:
updateParticipantConfigurations:
updateParticipantGenerationCounter:
updateParticipantWindowState
updatePayloadConfigsWithStreamGroupConfig:rtpSampleRates:
updatePayloadHistory:timestamp:payloadType:payload:payloadLength:
updatePayloadSpecsForConfig:defaultConfig:
updatePayloadSpecsForConfig:defaultConfig:payloadConfigs:
updatePayloadTypesWithAudioConfigs:
updatePayloadTypesWithVideoConfigs:
updatePeerSubscribedStreams:containsRepairStreams:
updatePeerSubscribedStreams:streamGroup:
updatePositionalInfo:shouldReapply:
updatePresentationInfo:
updatePrimaryWithConnection:
updateProbingLargeFrameSizeCap
updateProbingResult:initialResult:
updateProbingResults:
updateQoS:
updateQoSReport:toClientsWithToken:
updateQualificationParameters
updateRTPReceiveWithTimestamp:sampleRate:time:
updateRTPReceiveWithTimestamp:sampleRate:time:size:endOfFrame:
updateRateAdaptationWithNetworkNotification:
updateRateControlInfoWithStatisticsMessage:
updateRateControlWithNetworkNotification:
updateRatiosForHistory:withIndex:
updateRealTimeStats
updateReceiveStats
updateReceivedBytes:isOnCell:isIPv6:
updateReceivedExcessiveBytes:isMediaData:isIPv6:
updateReceivedPacketsAndBytesWithSourceDestinationInfo:bytesReceived:isMediaData:shouldCountPacket:numOfStreamId:isPriorityIncluded:
updateRecentTierWindow
updateRedundancyPercentage
updateRedundancyPercentageWithPLRThresholds:
updateRedundancyStrategyWithNetworkStatistics:
updateRemoteAddressWithConfig:error:
updateRemoteCodecInfo:
updateRemoteCodecInfoCallback
updateRemoteCodecInfoContext
updateRemoteMediaStallState:
updateRemoteMediaStallStateReporting:
updateRemoteScreenAttributes:
updateRemoteSessionStats:
updateScreenCaptureWithConfig:
updateScreenRuleCollections:size:
updateScreenShareWith:pid:
updateScreenStreamConfigurationWithStreamGroupResult:multiwayConfig:screenStreamConfig:
updateScreenU1Config:localConfig:
updateScreenU1ConfigWithStreamGroupConfig:forNegotiationBlob:localSupportedVideoPayloads:
updateSecondaryWithConnection:
updateSelectedConnectionsForGroupType:connectionAdded:
updateSelectedConnectionsForGroupType:connectionRemoved:connectionArray:
updateSelectedMediaEntriesForClientWithUUID:
updateSendBitrateAndCheckIdlePeriod:instantBitrate:
updateSendSampleRTPTimestamp:sampleRate:systemTime:
updateSendStatisticsWithTimestamp:frameSize:packetsInFrame:
updateSequenceNumber:
updateSessionStats:
updateSessionStats:connection:totalPacketSent:totalPacketReceived:
updateSettingsAtTime:
updateSettingsAtTime:impairments:
updateShareProfileForInterfaceType:
updateShouldEnableFaceZoom
updateShouldEnableMLEnhance
updateSourcePlayoutTimestamp:
updateSpeaking:timeStamp:
updateStateWithAudioIOClient:
updateStateWithClient:
updateStateWithCurrentConnection:asPrimary:interfaceMask:demote:replaceOnly:
updateStatistics:
updateStatsHistory
updateStreamConfig:forPayload:networkPayload:groupID:
updateStreamConfig:withMetadata:
updateStreamGroupU1Config:forGroupId:withNegotiationBlob:localSupportedVideoPayloads:
updateStreamGroups:
updateStreamIDCompoundingWithBlock:activeStreamIds:
updateSupportedAudioRules:
updateSuspendedState
updateTargetBitrateOneToOne:rateChangeCounter:
updateThermalLevel:
updateThrottleRate
updateTotalQueueDepth:
updateTransactionIDWithKeyMaterial:
updateTransmittedBytes:isOnCell:isIPv6:
updateTransmittedExcessiveBytes:isMediaData:isIPv6:
updateTransmittedPacketsAndBytesWithSourceDestinationInfo:bytesSent:isMediaData:shouldCountPacket:numOfStreamId:isPriorityIncluded:
updateTransportStream:
updateUplinkBitrateCapCell:activeStreamIDs:
updateUplinkBitrateCapWifi:activeStreamIDs:
updateUplinkStreamsForPeerSubscribedStreams:
updateUplinkStreamsForPeerSubscribedStreams:streamGroup:uplinkBandwidthAllocator:
updateUplinkTargetBitrate:rateChangeCounter:
updateUplinkTargetBitrateForStreamGroups
updateVCMomentsMode
updateVCRateControlHistory
updateVCRateControlWRMMetrics:
updateVideoBuffer:withPresentationTime:sampleBufferCopy:cameraStatusBits:timestamp:
updateVideoConfig:
updateVideoConfiguration:
updateVideoExpected
updateVideoMultiwayConfig:withStreamGroupStreamConfig:
updateVideoPaused:
updateVideoPriority:
updateVideoQualityStatusWithTime:isRemote:
updateVideoReceiver:
updateVideoStall:withStallDuration:
updateVideoStallStatus:
updateWRMNotificationRequestTime:
updateWindowState:isLocal:windowRect:
updateWithClientDictionary:
updateWithCurrentFramerate:bitrate:time:
updateWithLastDecodedFrameTime:time:
updateWithRemoteMediaHealthDuplication:
updatedConnectedPeers:
updatedMutedPeers:forParticipantID:
uplinkAudioBitrateCapOneToOne
uplinkAudioOnlyBitrateCapOneToOne:
uplinkBitrateCap
uplinkBitrateCapCell
uplinkBitrateCapForConnection:
uplinkBitrateCapOneToOne
uplinkBitrateCapOneToOne:
uplinkBitrateCapWifi
uplinkClient
uplinkVideoStreamController
uplinkVideoStreamControllerForMode:
upstreamBandwidth
usageMode
useActiveProbingSenderLog
useAudioPayload:withBitrate:
useAudioTier:
useCellPrimayInterface:
useChannelDataFormat
useCompressedConnectionData
useConnectionAsPrimary:
useControlByte
useExternalIO
useFakeLargeFrameMode
useInBandFEC
useInBandFec
useMediaDrivenDuplication
useNewBWEMode
useNewPLCalc
usePayloadSpecWithGroupID:qualityIndexForPayloadSpecIndex:defaultPayloadSpecsForQualityIndex:
usePreNegotiation
useRateControl
useSBR
useServer
useSoftFramerateSwitching
useUEP
useUEPForVideoConfig:
useViceroyBlobFormat
useVideoJitterForVideoPlayout
useWiFiTiers
useWifiTiers
userAgent
userInfo
usesInitialFECImplementation
usesPayloadConfigsWithGroupID:
usingServerBasedLinks
utteranceComplete
uuid
validateAndEnqueuePackets:
validateAudioStreamConfigurations:
validateCarrierBundleConfigParameters:forKey:defaultValue:minValue:maxValue:
validateClientDictionary:
validateIncomingRequest:isRemote:
validateInitializeConnectionResult:
validateLocalConfiguration:
validateMediaEntries:
validateMultiwayAudioStreamConfigurations:
validateMultiwayVideoStreamConfigurations:
validateNumberOfRequestsWithError:
validateParticipantConfiguration
validateParticipantToAdd:
validateParticipantToRemove:
validateStreamConfiguration:error:
validateStreamGroup:state:
validateVideoStreamConfigurations:
validateWithError:
value:withObjCType:
valueForKey:
valueForNetworkBitrate:networkBitrate:
valueForSecondaryKeyWithPrimaryKey:secondaryKey:type:
valueForType:value:
valueWithPointer:
vcArg:sendControlData:isTypeSSL:withTimeout:withDetail:
vcArg:sendRealTimeData:toParticipantID:
vcAudioCodecBandwidthForAudioCodecBandwidth:
vcAudioPowerLevelMonitor:isAudioBelowThreshold:
vcList
vcMediaQueue
vcMediaStream:didPauseStream:error:
vcMediaStream:didReceiveDTMFEventWithDigit:
vcMediaStream:didReceiveFirstFrameWithTime:
vcMediaStream:didReceiveRTCPPackets:
vcMediaStream:didReceiveTTYCharacter:
vcMediaStream:didReceiveText:
vcMediaStream:didResumeStream:error:
vcMediaStream:didStartStream:error:
vcMediaStream:didSwitchFromStreamID:toStreamID:
vcMediaStream:didSwitchToAudioStreamWithID:
vcMediaStream:didUpdateVideoConfiguration:error:dictionary:
vcMediaStream:downlinkQualityDidChange:
vcMediaStream:priorityDidChange:
vcMediaStream:remoteMediaStalled:duration:
vcMediaStream:requestKeyFrameGenerationWithStreamID:firType:
vcMediaStream:updateFrequencyLevel:isInputMeter:
vcMediaStream:updateInputFrequencyLevel:
vcMediaStream:updateOutputFrequencyLevel:
vcMediaStream:uplinkQualityDidChange:
vcMediaStreamDidDecryptionTimeOut:
vcMediaStreamDidDecryptionTimeOutForMKMRecovery:
vcMediaStreamDidInterruptionBegin:
vcMediaStreamDidInterruptionEnd:
vcMediaStreamDidRTCPTimeOut:
vcMediaStreamDidRTPTimeOut:
vcMediaStreamDidStop:
vcMediaStreamServerDidDie:
vcMoments
vcSecureDataChannel:messageType:receivedData:
vcSession:addParticipantWithID:didSucceed:error:
vcSession:didStart:error:
vcSession:didStopWithError:
vcSession:downlinkRateAdaptationDidChangeWithInfo:
vcSession:oneToOneModeEnabled:didSucceed:error:
vcSession:participantID:audioEnabled:didSucceed:error:
vcSession:participantID:audioPaused:didSucceed:error:
vcSession:participantID:didChangeMediaPriority:description:
vcSession:participantID:didDetectError:
vcSession:participantID:mediaStateDidChange:forMediaType:didSucceed:error:
vcSession:participantID:remoteAudioEnabledDidChange:
vcSession:participantID:remoteAudioPausedDidChange:
vcSession:participantID:remoteScreenEnabledDidChange:
vcSession:participantID:remoteVideoEnabledDidChange:
vcSession:participantID:remoteVideoPausedDidChange:
vcSession:participantID:screenEnabled:didSucceed:error:
vcSession:participantID:videoEnabled:didSucceed:error:
vcSession:participantID:videoPaused:didSucceed:error:
vcSession:removeParticipantWithID:didSucceed:error:
vcSession:updateConfiguration:didSucceed:error:
vcSession:uplinkRateAdaptationDidChangeWithInfo:
vcSessionParticipant:audioEnabled:didSucceed:error:
vcSessionParticipant:audioPaused:didSucceed:error:
vcSessionParticipant:didChangeActualNetworkBitrateForStreamGroupID:
vcSessionParticipant:didChangeMediaPriority:description:
vcSessionParticipant:didDetectError:
vcSessionParticipant:didRequestVideoRedundancy:
vcSessionParticipant:didStart:error:
vcSessionParticipant:didStopWithError:
vcSessionParticipant:didSwitchFromStreamID:toStreamID:
vcSessionParticipant:mediaStateDidChange:forMediaType:didSucceed:error:
vcSessionParticipant:oneToOneModeDidChange:
vcSessionParticipant:remoteAudioEnabledDidChange:
vcSessionParticipant:remoteAudioPausedDidChange:
vcSessionParticipant:remoteMediaStateDidChange:forMediaType:
vcSessionParticipant:remoteScreenEnabledDidChange:
vcSessionParticipant:remoteVideoEnabledDidChange:
vcSessionParticipant:remoteVideoPausedDidChange:
vcSessionParticipant:requestKeyFrameGenerationWithStreamID:streamGroupID:firType:
vcSessionParticipant:screenEnabled:didSucceed:error:
vcSessionParticipant:videoEnabled:didSucceed:error:
vcSessionParticipant:videoPaused:didSucceed:error:
vcSessionParticipantDidChangeReceivingStreams:
vcSessionParticipantDidChangeSendingStreams:
vcSessionParticipantDidMediaDecryptionTimeOut:
vcSessionParticipantDidMediaDecryptionTimeOutForMKMRecovery:
vcSessionParticipantDidRemoteMediaStallTimeout:duration:
vcSessionParticipantFetchStreamGroupState:
vcSessionShouldReconnect:
vcVideoReceiver:didReceiveSampleBuffer:isFirstFrame:
vcVideoReceiver:didSwitchFromStreamID:toStreamID:
vcVideoReceiver:downlinkQualityDidChange:
vcVideoReceiver:receivedTMMBR:
vcVideoReceiver:requestKeyFrameGenerationWithStreamID:firType:
vcVideoReceiverRequestKeyFrame:rtcpPSFBType:
vcWCMClient
vcWRMClient
vcpInitializedForHEVC
vcpSupportsHEVCEncoder
vcrcServerBag
vcrcServerBagProfileNumber
verifyRequiredKeys:
verifyRequiredKeys:withError:
verifyRequiredVoiceChatKeys:
vfdCancel
vfdMessage
video
videoAttributeCameraForCameraUID:
videoAttributesWithVideoAttributes:
videoCallMicrophoneTierTable
videoCaptureSourceFromClientCaptureSource:
videoCodec
videoCodecForPayload:
videoCodecs
videoConference:cancelRelayRequest:requestDict:
videoConference:closeConnectionForCallID:
videoConference:didChangeLocalVariablesForCallID:
videoConference:didReceiveARPLData:forCallID:
videoConference:didReceiveARPLData:fromCallID:
videoConference:didReceiveData:forCallID:
videoConference:didReceiveFirstRemoteFrameForCallID:
videoConference:didRemoteScreenAttributesChange:forCallID:
videoConference:didRemoteVideoAttributesChange:forCallID:
videoConference:didStartSession:withCallID:error:
videoConference:didStartSession:withCallID:withUserInfo:error:
videoConference:didStopWithCallID:error:
videoConference:didStopWithCallID:error:callMetadata:
videoConference:inititiateRelayRequest:requestDict:
videoConference:isRemoteAudioBelowThreshold:
videoConference:localAudioEnabled:forCallID:error:
videoConference:localIPChange:withCallID:
videoConference:receivedNoRemotePacketsForTime:callID:
videoConference:reinitializeCallForCallID:
videoConference:remoteAudioEnabled:forCallID:
videoConference:remoteAudioPaused:callID:
videoConference:remoteCallingModeChanged:forCallID:
videoConference:remoteMediaStalled:callID:
videoConference:remoteVideoPaused:callID:
videoConference:sendRelayUpdate:updateDict:
videoConference:updateInputFrequencyLevel:
videoConference:updateInputMeterLevel:
videoConference:updateOutputFrequencyLevel:
videoConference:updateOutputMeterLevel:
videoConference:videoQualityNotificationForCallID:isDegraded:isRemote:
videoConference:withCallID:didPauseAudio:error:
videoConference:withCallID:didPauseVideo:error:
videoConference:withCallID:isSendingAudio:error:
videoConference:withCallID:networkHint:
videoDataOutput:mediaDidStall:
videoDataOutput:videoDidDegrade:
videoDataOutput:videoDidPause:
videoDataOutput:videoDidSuspend:
videoDataOutputDidBecomeInvalid:
videoDataOutputServerDidDie:
videoDegradedThreshold
videoDisplayAttribute:withHeight:
videoEnabled
videoEncoderType
videoFeatureStrings
videoFeatures
videoFormatForWidth:height:
videoGroup
videoImageAttributes:
videoIsPaused
videoMediaControlInfoGenerator
videoMirrored
videoOnlyBitrateToStreamIDsTable
videoParameterSet
videoParameterSupport
videoPaused
videoPayload
videoPayloadCollections
videoPayloadCollectionsCount
videoPayloadCollectionsType
videoPayloadForPayload:
videoPayloadTypes
videoPayloads
videoPositionalInfo
videoPriorityPointer
videoQuality
videoQueue
videoRTPID
videoReceiver
videoReceiver:didReceiveRemoteFrame:atTime:remoteVideoAttributes:remoteScreenAttributes:isFirstFrame:
videoReceiverConfig
videoReceiverConfigWithVideoStreamConfig:
videoReceiverFeedbackDelegate
videoResolutionFromClientResolution:
videoRuleCollections
videoRuleCollectionsAtIndex:
videoRuleCollectionsCount
videoRuleCollectionsType
videoRulesCollectionsByRemovingPayload:andPayload:removeCellular:
videoRulesWithBitmap:
videoSSRC
videoSendingBitrate
videoSettings
videoSource
videoSourceScreen
videoStreamConfigurations
videoStreamDelegate
videoStreamIdToRepairStreamIdMap
videoStreamPendingKeyFrameGenerationWithStreamID:shouldRemoveFromPendingArray:
videoStreamRateControlDumpEnabled
videoStreamReceiverConfigWithDumpID:reportingAgent:
videoStreamTokenForCallID:
videoStreamTypeFromClientVideoStreamMode:
videoStreamWithSyncToken:
videoThrottlingTimeout
videoToken
videoTransmitter
videoTransmitterHandle
visibleRectCropping
volume
vpEnableSpatialChat
vpOperatingModeToAudioSessionMediaFormatMapping
vpOperationModeForConferenceOperatingMode:deviceRole:
vplrFecEnabled
vtpPacketTypeForStreamType:
vtpSA
waitForBagLoad
waitForCondition:withTimeout:conditionPredicate:
waitIdleForClient:
waitToBeNominated
waitUntilDate:
warmupForCall
wcmClientDelegate
wcmSetCallConfig:interferenceLevel:
weak
weakObjectHolderWithObject:
webParticipantSupportsStreamGroupID:
weightFactor
whitespaceCharacterSet
width
wifiAllowRedLowBitratesEnabled
willExitState:newState:
willStart
willStop
worstCaseNetworkOverheadInBytesWithNumOfStreamId:isPriorityIncluded:
worstRecentBurstLoss
worstRecentRoundTripTime
write:
writeDatagram:datagramSize:
writeDatagram:datagramSize:datagramInfo:options:completionHandler:
writeDatagram:datagramSize:flags:completionHandler:
writeDatagrams:datagramsSize:datagramsInfo:datagramsCount:options:completionHandler:
writeTo:
writeToEmulatedNetworkWithDatagram:datagramSize:datagramInfo:options:
writeToFile:atomically:
writeToFileWithTimestamp:transactionID:URL:imageType:
writeToLivePhotoToFileWithFrame:transactionID:URL:imageType:cameraStatusBits:
writerMode
wrlock
wrmClient
wrmContext
xAudioTS
xRemoteLayer
xpcConnection
xpcQueue
zone
@24@0:8@16
B40@0:8@16@24i32i36
v28@0:8@16B24
I24@0:8@16
B44@0:8@16I24@28@36
B40@0:8@16@24@32
@16@0:8
B24@0:8@16
I24@0:8i16i20
v24@0:8@16
B40@0:8C16i20@24@32
B32@0:8@16@24
@24@0:8^{_NSZone=}16
v20@0:8I16
v20@0:8B16
B16@0:8
Q16@0:8
I16@0:8
{?="maxMediaBitrate"b1"maxNetworkBitrate"b1"maxPacketsPerSecond"b1"metadata"b1"repairedMaxNetworkBitrate"b1"repairedStreamID"b1}
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8r^{_VCRemoteCodecInfo=Id}16
v28@0:8@16C24
v16@0:8
v28@0:8I16d20
v28@0:8B16@20
v24@0:8@"VCAudioIOControllerClient"16
v28@0:8@"VCAudioIOControllerClient"16C24
v28@0:8B16@"VCAudioIOControllerClient"20
@"NSDictionary"16@0:8
^{_VCAudioIOControllerIOState=BdIIdQ{_VCSingleLinkedList=^{_VCSingleLinkedListEntry}B^?Q}^{opaqueCMSimpleQueue}^{opaqueVCAudioLimiter}^{opaqueVCAudioBufferList}^{opaqueVCAudioBufferList}IQQ[40c]}16@0:8
v56@0:8^{AudioStreamBasicDescription=dIIIIIIII}16^d24^I32i40i44^{AudioStreamBasicDescription=dIIIIIIII}48
@20@0:8i16
i16@0:8
v24@0:8^{opaqueCMSimpleQueue=}16
v24@0:8^{_VCAudioIOControllerIOState=BdIIdQ{_VCSingleLinkedList=^{_VCSingleLinkedListEntry}B^?Q}^{opaqueCMSimpleQueue}^{opaqueVCAudioLimiter}^{opaqueVCAudioBufferList}^{opaqueVCAudioBufferList}IQQ[40c]}16
v32@0:8^{AudioStreamBasicDescription=dIIIIIIII}16@24
I28@0:8@16I24
@32@0:8@16@24
v24@0:8^{tagHANDLE=i}16
v32@0:8^{_VCAudioIOControllerClientIO=^v^?@III^{opaqueVCAudioBufferList}}16^{_VCAudioIOControllerIOState=BdIIdQ{_VCSingleLinkedList=^{_VCSingleLinkedListEntry}B^?Q}^{opaqueCMSimpleQueue}^{opaqueVCAudioLimiter}^{opaqueVCAudioBufferList}^{opaqueVCAudioBufferList}IQQ[40c]}24
i24@0:8^{tagHANDLE=i}16
i24@0:8@?16
i36@0:8I16I20I24^{OpaqueCMBlockBuffer=}28
v36@0:8^{OpaqueCMBlockBuffer=}16I24@?28
v32@0:8@16@24
v24@0:8^{OpaqueCMBlockBuffer=}16
B48@0:8@16@24@32^I40
v32@0:8@16^B24
i24@0:8f16f20
^{tagHANDLE=i}
@"NSObject<OS_dispatch_queue>"
@"VCAudioSessionMediaProperties"
@"VCAudioUnitProperties"
@"NSDictionary"
@"NSMutableArray"
@"AVAudioDevice"
{_VCAudioIOControllerIOState="timestampInitialized"B"lastHostTime"d"lastInputTimestamp"I"lastInputSampleCount"I"lastBlockSize"d"lastTimestamp"Q"clientIOList"{_VCSingleLinkedList="head"^{_VCSingleLinkedListEntry}"initialized"B"compare"^?"countEntries"Q}"eventQueue"^{opaqueCMSimpleQueue}"audioLimiter"^{opaqueVCAudioLimiter}"secondarySampleBuffer"^{opaqueVCAudioBufferList}"interruptMixDownSampleBuffer"^{opaqueVCAudioBufferList}"audioSessionId"I"channelStateBitmap"Q"prevUsedChannelStateBitmap"Q"logPrefix"[40c]}
@"VCAudioRelay"
@"VCAudioRelayIO"
{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}
@"NSMutableDictionary"
@"VCAudioUnitSpatialContext"
@"NSArray"
@"ATSpatialStreamDescriptions"
v24@0:8@"VCRateControlShareProfile"16
@44@0:8@16@24B32@36
@32@0:8@16r^{tagVCRateControlParams=@BB@@B@B}24
v28@0:8@16i24
v64@0:8{AVCRateControlConfig=IIIIIIB^{tagVCRateControlAlgorithmConfig}I}16
{tagAVCRateControlExperimentConfig=ii}16@0:8
{tagVCRateControlAlgorithmConfig=I^Iiii[2i]iiiiiiiiiiiddddddddddddddiiidddddddddddIIIIIBBBBBBBBBBBiBddididddidiiddidddddddddddddddddBdiiBiddddddIIdd}16@0:8
v24@0:8^v16
v24@0:8^{__CFDictionary=}16
v48@0:8i16B20i24B28i32I36B40I44
I20@0:8I16
I20@0:8i16
I24@0:8i16B20
@20@0:8I16
B20@0:8I16
i28@0:8I16I20i24
i20@0:8i16
v24@0:8^{tagVCRateControlAlgorithmConfig=I^Iiii[2i]iiiiiiiiiiiddddddddddddddiiidddddddddddIIIIIBBBBBBBBBBBiBddididddidiiddidddddddddddddddddBdiiBiddddddIIdd}16
v704@0:8{tagVCRateControlAlgorithmConfig=I^Iiii[2i]iiiiiiiiiiiddddddddddddddiiidddddddddddIIIIIBBBBBBBBBBBiBddididddidiiddidddddddddddddddddBdiiBiddddddIIdd}16
v184@0:8{tagVCStatisticsMessage=iidBBBB(?={?=IIIIIIddddd[64c]i}{?=IIIIIIIIIIIIddIIdIB{?=iIIIdddII}{?=SBBI}}{?=dddIIIIIQI}{?=IBBBIIdIB{?=iIIIdddII}}{?=CIIIIIIIIIddddIIII}{?=IIId}{?=iIIIdddII}{?=IIII}{?=IIIIIIBI}{?=IIIIfBBddIIIQ}{?=CCCQQQIIIQiI(?={?=CCSSCCCCCCCfBS[6I]}{?=CsscCCCCSSC})}{tagVCStatisticsVideoLossFeedback=ISCC})}16
v24@0:8d16
v24@0:8I16I20
i28@0:8I16i20i24
v24@0:8^^v16
{AVCRateControlConfig=IIIIIIB^{tagVCRateControlAlgorithmConfig}I}16@0:8
^{OpaqueFigCFWeakReference=}
@"<AVCRateControllerDelegate>"
@"AVCStatisticsCollector"
@"AVCRateControlFeedbackController"
@"AVCBasebandCongestionDetector"
@"VCNWConnectionCongestionDetector"
@"VCRateControlMediaController"
{AVCRateControlConfig="mode"I"localRadioAccessTechnology"I"remoteRadioAccessTechnology"I"maxBitrate"I"minBitrate"I"initialBitrate"I"isTrafficBursty"B"algorithmConfig"^{tagVCRateControlAlgorithmConfig}"featureFlags"I}
{tagVCRateControlAlgorithmConfig="serverBagProfileNumber"I"tierBitrates"^I"initialTierIndex"i"maxTierIndex"i"minTierIndex"i"softMaxTierIndex"[2i]"lowestNonEmergencyTierIndex"i"lowestNonEmergencyTierIndexWiFi"i"lowestEffectiveBWETierIndex"i"lowestTierIndexReactToNoServerActivity"i"rampUpTierNumber"i"rampDownTierNumber"i"rampUpAdditionalTierAtInitial"i"rampDownAdditionalTierAtInitial"i"rampDownBurstyLossThreshold"i"lowestTierForBurstyLossRampDown"i"lowestTierToDisableRateLimited"i"rampDownNOWRDThreshold"d"rampDownNOWRDAccThreshold"d"rampDownAggressiveNOWRDThreshold"d"rampDownAggressiveNOWRDAccThreshold"d"rampDownConstantOWRDDuration"d"rampDownOvershootDuration"d"rampDownOvershootNextTierRatio"d"rampUpFrozenDuration"d"rampUpSettleDuration"d"rampUpOWRDThreshold"d"rampUpNOWRDThreshold"d"rampUpNOWRDAccThreshold"d"rampUpOverBandwidthCalmDuration"d"rampUpBlockedTimeout"d"rampUpOverBandwidthTierNumber"i"rampDownLossEventThreshold"i"rampDownLossEventBadTrendThreshold"i"rampDownLossEventThresholdRatio"d"rampDownLossEventWindowDuration"d"rampDownLossEventNOWRDThreshold"d"rampUpFrozenPLRThreshold"d"rampUpRateLimitedRatio"d"unstableRateLimitedDuration"d"congestionWaitDuration"d"owrdWindowDuration"d"owrdShortWindowDuration"d"minimumNOWRDTimeDifference"d"owrdInitialRampUpReadyDuration"d"owrdHistorySize"I"owrdMininumHistorySize"I"fastRampDownBitrateRange"I"fastRampUpBitrateRange"I"consecutiveRampDownThresholdForCongestion"I"receivedBandwidthEstimationEnabled"B"basebandAdaptationEnabled"B"rateLimitedEnabled"B"randomRampUpFrozenDurationEnabled"B"oscillationAvoidanceEnabled"B"fastRampUpEnabled"B"blockRampUpInSaturatedNetworkEnabled"B"blockRampUpInBluetoothCoexEnabled"B"wifiEmergencyTiersEnabled"B"burstyTrafficEnabled"B"rampDownToActualSendBitrate"B"rampDownToActualSendBitrateMinTier"i"rampDownSuppressionEnabled"B"rampDownSuppressionMinRTT"d"rampDownSuppressionFactor"d"fastRampUpHighestTier"i"fastRampUpRTTRatio"d"fastRampUpTierGap"i"fastRampUpNetworkStableDuration"d"networkSaturatedRTTToMinRTTRatio"d"networkSaturatedOWRDToMinRTTRatio"d"networkSaturatedPersistFeedbackNumber"i"networkSaturatedRTTDecreasingThreshold"d"oscillationAvoidanceTierChangeThreshold"i"oscillationAvoidanceTiersHitThreshold"i"oscillationAvoidanceDurationRatio"d"oscillationAvoidanceDurationRatioAggressive"d"stabilizationScheme"i"rampDownNBDCDThreshold"d"rampDownAggressiveNBDCDThreshold"d"rampDownNormalizedQueuingDelayThreshold"d"rampDownMediumQueuingDelayThreshold"d"rampDownHighQueuingDelayThreshold"d"rampDownEmergencyTierCoolDownTime"d"rampDownWiFiEmergencyTierCoolDownTime"d"rampUpNBDCDThreshold"d"rampUpQueuingDelayThreshold"d"rampUpNBDCDCoolDownTime"d"rampUpAudioFractionCoolDownTime"d"basebandRATSwitchCoolDownTime"d"basebandAdaptationCrossTrafficRatio"d"rampUpNetworkUnstableCoolDownTime"d"autoResumeDurationAfterPaused"d"pauseOffChannelHighRatio"d"unpauseOffChannelLowRatio"d"oscillationDetectionEnabled"B"oscillationCoolDownTime"d"oscillationDeviationTierNumber"i"oscillationDeviationCountThreshold"i"preventBasebandRampDownCloseToKeyFrame"B"basebandRampDownSlowDownFactor"i"networkUnstableRTTThreshold"d"networkUnstablePLRThreshold"d"packetLossRateThresholdInitial"d"packetLossRateThresholdMin"d"packetLossRateThresholdMax"d"packetLossRateThresholdTarget"d"rampUpUplinkBLERThreshold"I"rampDownUplinkBLERThreshold"I"rampUpUplinkBLERDuration"d"rampDownUplinkBLERDuration"d}
@"NSString"
^{opaqueRTCReporting=}
@"VCRateControlServerBag"
@"NSObject<OS_nw_activity>"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"<VCRateControlAlgorithm>"
B24@0:8^{ifnet_interface_advisory=(?={?=CCSiQQQQIIICCSSCCCC}{?={ifnet_interface_advisory_header=CCCC}{ifnet_interface_advisory_capacity=iQQQQIII}(?={ifnet_interface_advisory_wifi_context=CCSSCCCCCS[6I]}{ifnet_interface_advisory_cell_context=CsscCCCCSSCC})})}16
B28@0:8^{packet_id=CCSIII}16i24
{tagVCStatisticsMessage="type"i"priority"i"arrivalTime"d"isVCRCInternal"B"shouldFlushAndProcess"B"shouldDrainAndProcess"B"statisticsUpdateOnly"B""(?="baseband"{?="queueDepth1"I"queueDepth2"I"txBitrate"I"averageBitrate"I"averageBitrateShort"I"averageBitrateLong"I"averageQueueDepth"d"expectedQueuingDelay"d"bdcd"d"normalizedBDCD"d"normalizedDelay"d"bbString"[64c]"radioTechnology"i}"feedback"{?="sendTimestamp"I"queuingDelay"I"remoteBWEstimation"I"remoteBWEStability"I"maxVideoBurstyLoss"I"audioConsecutiveLoss"I"mostBurstyLoss"I"audioReceivedPackets"I"videoReceivedPackets"I"totalSentPackets"I"echoedSendTimestamp"I"mediaTimestamp"I"owrd"d"packetLossRate"d"actualBitrate"I"instantBitrate"I"roundTripTime"d"receiveQueueTarget"I"isPacketReceivedValid"B"packetReceived"{?="packetType"i"packetId"I"sampleRate"I"totalPacketsReceived"I"receiveTimestamp"d"owrd"d"targetJitterQueueSize"d"bandwidthEstimation"I"localBurstyLoss"I}"connectionStats"{?="sequenceNumber"S"isDuplicatePacket"B"isReceivedOnPrimary"B"connectionStatsBuffer"I}}"network"{?="packetLossPercentage"d"packetLossPercentageAudio"d"packetLossPercentageVideo"d"burstPacketLoss"I"roundTripTimeMilliseconds"I"isNetworkCongested"I"owrd"I"targetBitrate"I"statisticsID"Q"videoPacketsReceived"I}"probing"{?="estimatorID"I"deregisterEstimator"B"isProbingSequence"B"isEndOfProbingSequence"B"probingSequenceID"I"messageLength"I"arrivalTime"d"mediaTimestamp"I"isPacketReceivedValid"B"packetReceived"{?="packetType"i"packetId"I"sampleRate"I"totalPacketsReceived"I"receiveTimestamp"d"owrd"d"targetJitterQueueSize"d"bandwidthEstimation"I"localBurstyLoss"I}}"serverStats"{?="linkID"C"sendTimestamp"I"receiveTimestamp"I"totalPacketSent"I"totalPacketReceived"I"totalByteSent"I"totalByteReceived"I"serverStatsByteUsed"I"bandwidthSample"I"bandwidthEstimation"I"roundTripTime"d"owrd"d"packetLossRate"d"packetLossRateShortWindow"d"actualBitrate"I"instantBitrate"I"serverStatsBitrate"I"expectedBitrate"I}"packetSent"{?="packetId"I"totalPacketsSent"I"totalBytesSent"I"sendTimestamp"d}"packetReceived"{?="packetType"i"packetId"I"sampleRate"I"totalPacketsReceived"I"receiveTimestamp"d"owrd"d"targetJitterQueueSize"d"bandwidthEstimation"I"localBurstyLoss"I}"rtcpRR"{?="ssrc"I"packetLossPercentage"I"lastSequenceNumber"I"roundTripTimeMilliseconds"I}"config"{?="mode"I"remoteRadioAccessTechnology"I"localRadioAccessTechnology"I"maxBitrate"I"minBitrate"I"initialBitrate"I"isTrafficBursty"B"featureFlags"I}"mediaEvent"{?="mediaEventType"I"additionalFlushCount"I"transactionID"I"audioStallBitrate"I"audioErasure"f"isKeyFrame"B"isTransitionToFEC"B"videoStallTimeDelta"d"videoStallTimeTotal"d"refreshFrameTimestamp"I"refreshFramePayloadType"I"refreshFramePacketCount"I"idsParticipantID"Q}"nwConnection"{?="version"C"direction"C"interfaceType"C"timestamp"Q"maxThroughputBps"Q"totalByteCount"Q"flushableQueueSize"I"nonFlushableQueueSize"I"averageDelayMillisecond"I"averageThroughputBps"Q"rateTrendSuggestion"i"packetLossPerFrame"I""(?="wifi"{?="frequencyBand"C"intermittentState"C"estimatedIntermittentPeriod"S"singleOutagePeriod"S"btCoex"C"radioCoex"C"qualityScoreDelayRx"C"qualityScoreDelayTx"C"qualityScoreLossRx"C"qualityScoreLossTx"C"qualityScoreChannel"C"offChannelTimeRatio"f"detectedFrequentOffChannelActivity"B"wlanDutyCycle"S"wifiObservedTxBitrate"[6I]}"baseband"{?="radioAccessTechnology"C"referenceSignalLevel"s"signalLevel"s"signalQuality"c"uplinkBLER"C"downlinkBLER"C"bandwidthLimitationIndication"C"cdrxState"C"cdrxCycle"S"estimatedOutagePeriod"S"outageState"C})}"videoLossFeedback"{tagVCStatisticsVideoLossFeedback="frameRTPTimestamp"I"packetsReceived"S"frameSize"C"packetsLost"C})}
B44@0:8^@16I24^@28^@36
B44@0:8@16I24@28^@36
B32@0:8^{tagVCStatisticsMessage=iidBBBB(?={?=IIIIIIddddd[64c]i}{?=IIIIIIIIIIIIddIIdIB{?=iIIIdddII}{?=SBBI}}{?=dddIIIIIQI}{?=IBBBIIdIB{?=iIIIdddII}}{?=CIIIIIIIIIddddIIII}{?=IIId}{?=iIIIdddII}{?=IIII}{?=IIIIIIBI}{?=IIIIfBBddIIIQ}{?=CCCQQQIIIQiI(?={?=CCSSCCCCCCCfBS[6I]}{?=CsscCCCCSSC})}{tagVCStatisticsVideoLossFeedback=ISCC})}16d24
B108@0:8{?=IBBBIIdIB{?=iIIIdddII}}16I96^@100
@160@0:8{?=IIIIIIIIIIIIddIIdIB{?=iIIIdddII}{?=SBBI}}16
@"VCConnectionHealthMonitor"
@24@0:8i16I20
@28@0:8i16i20I24
v20@0:8i16
@"VCCapabilities"
s24@0:8@16
v24@0:8@?16
I20@0:8B16
@28@0:8@16I24
q16@0:8
q20@0:8i16
q28@0:8i16@20
v32@0:8@16q24
v36@0:8@16q24B32
v56@0:8q16@24d32@?40@48
@24@0:8q16
v40@0:8@16@24q32
d24@0:8q16
B84@0:8q16q24@32B40@44B52@56i64@68^@76
B76@0:8q16q24@32B40@44B52@56i64^@68
B60@0:8q16@24B32@36@44^@52
B68@0:8q16@24B32@36B44@48i56^@60
B72@0:8q16q24@32B40@44B52@56^@64
B64@0:8q16@24B32@36B44@48^@56
v24@0:8q16
v40@0:8@16q24q32
v32@0:8q16@24
B20@0:8B16
f16@0:8
B40@0:8^B16q24^@32
^v16@0:8
q24@0:8q16
i24@0:8q16
B36@0:8B16q20^@28
v40@0:8@16B24I28@32
v48@0:8@16B24I28@32@40
v36@0:8@16I24@28
v44@0:8@16q24B32@36
v44@0:8@16I24@28@36
v36@0:8@16@24I32
v32@0:8@16B24I28
v28@0:8@16I24
v28@0:8@16f24
v36@0:8@16I24B28B32
v32@0:8@16I24B28
v32@0:8@16I24I28
v36@0:8q16@24B32
v28@0:8B16q20
v28@0:8I16q20
v56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48
@"AVConferenceXPCClient"
@"NSTimer"
@"CALayer"
{?="decodeFormats"b1"encodeFormats"b1"parameterSet"b1"videoPayload"b1}
@36@0:8@16@24B32
B52@0:8C16i20C24@28@36@44
v40@0:8@16{CGSize=dd}24
v40@0:8@16@24@32
@"NSData"16@0:8
B24@0:8@"NSData"16
@"VCMediaNegotiatorLocalConfiguration"16@0:8
@"VCMediaNegotiatorResults"16@0:8
@"VCMediaNegotiatorResultsAudio"16@0:8
@"VCMediaNegotiatorResultsVideo"16@0:8
@"VCMediaNegotiatorResultsMoments"16@0:8
@"VCMediaNegotiatorResultsFaceTimeSettings"16@0:8
@"NSArray"16@0:8
@"NSSet"24@0:8@"NSData"16
B40@0:8@"VCMediaNegotiatorLocalConfiguration"16@"NSData"24i32i36
@28@0:8I16@20
@36@0:8I16@20@28
@"VCMediaNegotiatorLocalConfiguration"
@"VCMediaNegotiatorResults"
@"VCMediaNegotiatorResultsAudio"
@"VCMediaNegotiatorResultsVideo"
@"VCMediaNegotiatorResultsMoments"
@"VCMediaNegotiatorResultsFaceTimeSettings"
B20@0:8i16
d16@0:8
@"NSData"
@44@0:8I16q20^v28^?36
{_VCRange=ff}16@0:8
{_VCAudioPowerSpectrumRealtimeContext="powerSpectrumConfigured"B"format"{AudioStreamBasicDescription="mSampleRate"d"mFormatID"I"mFormatFlags"I"mBytesPerPacket"I"mFramesPerPacket"I"mBytesPerFrame"I"mChannelsPerFrame"I"mBitsPerChannel"I"mReserved"I}"frequencyRange"{_VCRange="min"f"max"f}"sampleRate"I"fftSampleCount"I"hanningWindow"^f"octave2IndexTable6"^I"octave2IndexTable6Count"I"outputBinCount"I"lerpIdxs"^f"fftNormFactor"f"streamToken"q"averageLevel"f"sampleBuffer"^{opaqueVCAudioBufferList}"channels"^{_VCAudioPowerSpectrumChannel}"sinkContext"^v"sinkCallback"^?}
@24@0:8B16B20
i28@0:8i16@?20
B24@0:8i16i20
B24@0:8d16
{tagVCStatisticsMessage=iidBBBB(?={?=IIIIIIddddd[64c]i}{?=IIIIIIIIIIIIddIIdIB{?=iIIIdddII}{?=SBBI}}{?=dddIIIIIQI}{?=IBBBIIdIB{?=iIIIdddII}}{?=CIIIIIIIIIddddIIII}{?=IIId}{?=iIIIdddII}{?=IIII}{?=IIIIIIBI}{?=IIIIfBBddIIIQ}{?=CCCQQQIIIQiI(?={?=CCSSCCCCCCCfBS[6I]}{?=CsscCCCCSSC})}{tagVCStatisticsVideoLossFeedback=ISCC})}28@0:8i16d20
C16@0:8
v20@0:8C16
^{tagVCStatisticsCollection={?=IIIIIIIIIIIIddIIdIB{?=iIIIdddII}{?=SBBI}}{?=dddIIIIIQI}{?=CIIIIIIIIIddddIIII}{?=IIId}{?=iIIIdddII}{?=iIIIdddII}{?=IIIIfBBddIIIQ}{tagVCStatisticsVideoLossFeedback=ISCC}}
@"VCRateControlBandwidthEstimatorMap"
@"VCRateControlOWRDEstimator"
@"VCStatisticsHistory"
@"VCStatisticsCollectorQueue"
{_opaque_pthread_rwlock_t="__sig"q"__opaque"[192c]}
v48@0:8d16d24d32S40I44
v32@0:8I16I20d24
v24@0:8S16S20
v48@0:8^v16d24B32d36I44
S16@0:8
v32@0:8d16d24
i20@0:8I16
[4B]
v20@0:8f16
{?="maxMediaBitrate"b1"maxNetworkBitrate"b1"maxPacketsPerSecond"b1"repairedMaxNetworkBitrate"b1"repairedStreamID"b1"supportedPayloads"b1}
@"GKNATObserverInternal"
i24@0:8I16B20
I44@0:8I16@20B28@32I40
I32@0:8I16@20B28
v48@0:8^i16^i24^i32^@40
^{tagCommNATInfo=II[3S]I}32@0:8^{tagIPPORT=i[16c](?=I[16C])S}16r^{?=i[12C]}24
i44@0:8^{tagIPPORT=i[16c](?=I[16C])S}16r^{?=i[12C]}24@32B40
v36@0:8^{tagIPPORT=i[16c](?=I[16C])S}16r^{?=i[12C]}24B32
@32@0:8^{tagIPPORT=i[16c](?=I[16C])S}16@24
^{__SCDynamicStore=}
@"NSRecursiveLock"
@"NSObject<OS_dispatch_group>"
@"NSObject<OS_dispatch_semaphore>"
@"GKNATObserver_SCContext"
v24@0:8^{?=I[5I]Id{CGSize=dd}dIdII}16
v24@0:8^{opaqueRTCReporting=}16
v36@0:8@16B24d28
v28@0:8@16S24
v48@0:8@16{?=qiIq}24
@"VCAudioStreamGroupCommon"
{tagVCAudioStreamGroupPriorityInfo="isAudioActive"B"audioActiveProbabilityThreshold"I"audioInactiveProbabilityThreshold"I"audioActiveAccumulationThreshold"I"audioInactiveAccumulationThreshold"I"audioActiveCount"I"lastAudioPriority"I"refreshCounter"I}
@"VCAudioCaptionsCoordinator"
B32@0:8d16^@24
d32@0:8@16@24
B32@0:8@16^@24
B24@0:8^@16
B32@0:8^{tagVCAudioRelayIOInfo=@{_opaque_pthread_mutex_t=q[56c]}@@}16^{tagVCAudioRelayIOInfo=@{_opaque_pthread_mutex_t=q[56c]}@@}24
v32@0:8^{tagVCAudioRelayIOInfo=@{_opaque_pthread_mutex_t=q[56c]}@@}16^{tagVCAudioRelayIOInfo=@{_opaque_pthread_mutex_t=q[56c]}@@}24
B32@0:8Q16^@24
^{OpaqueAudioConverter=}40@0:8^{AudioStreamBasicDescription=dIIIIIIII}16^{AudioStreamBasicDescription=dIIIIIIII}24^@32
f28@0:8^f16I24
v48@0:8@16@24^{OpaqueAudioConverter=}32d40
v24@0:8^{timespec=qq}16
^{OpaqueAudioConverter=}16@0:8
^{OpaqueFigThread=}
{_opaque_pthread_cond_t="__sig"q"__opaque"[40c]}
^{OpaqueAudioConverter=}
{tagVCAudioRelayIOInfo="relayIO"@"VCAudioRelayIO""lock"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}"ioFriendlyName"@"NSString""audioRecordingFileName"@"NSString"}
@"NSObject<OS_dispatch_source>"
{_VCRemoteCodecInfo="codecType"I"sampleRate"d}
{timespec="tv_sec"q"tv_nsec"q}
@"NSObject<NSCopying>"
@"NSUUID"
@"NSDate"
@"<VCHardwareSettingsEmbeddedProtocol>"
v20@0:8S16
v24@0:8Q16
@32@0:8^{tagRTCPPACKET={tagRTCPCOMMON=b5b1b2b8S}(?={tagSR_RTCP=IIIIII[1{tagRTCP_RRB=Ib8b24IIII}]}{tagRR_RTCP=I[1{tagRTCP_RRB=Ib8b24IIII}]}{tagSDES_RTCP=I{tagRTCPSDES=CC[258c]}}{tagBYE_RTCP=I}{tagRTCP_APP=II}{tagRTCP_APP_LTRP={tagRTCP_APP=II}I}{tagFIR_RTCP=I[10S]}{tagNACK_RTCP=ISS}{tagRTCP_PSFB_PLI={tagRTCP_FBCOMMON=II}}{tagRTCP_PSFB_SLI={tagRTCP_FBCOMMON=II}I}{tagRTCP_PSFB_FIR={tagRTCP_FBCOMMON=II}IC[3C]}{tagRTCP_PSFB_TST={tagRTCP_FBCOMMON=II}II}{tagRTCP_PSFB_TST={tagRTCP_FBCOMMON=II}II}{tagRTCP_PSFB_ALFB_HEADER={tagRTCP_FBCOMMON=II}I}{tagRTCP_PSFB_LOSSFB={tagRTCP_PSFB_ALFB_HEADER={tagRTCP_FBCOMMON=II}I}{tagRTCP_CUSTOM_PSFB_LOSS_FB_INFO=ISCC}}{tagRTCP_PSFB_LTRACK={tagRTCP_PSFB_ALFB_HEADER={tagRTCP_FBCOMMON=II}I}I}{tagRTCP_RTPFB_GNACK={tagRTCP_FBCOMMON=II}SS}{tagRTCP_RTPFB_TMMB={tagRTCP_FBCOMMON=II}II}{tagRTCP_RTPFB_TMMB={tagRTCP_FBCOMMON=II}II}{tagVCRTCPXR=I[0I]}{tagRTCP_CUSTOM_SR={tagRTCP_APP=II}I{tagRTCP_CUSTOM_SENDER_INFO=IIIIb4b4}[1{tagRTCP_CUSTOM_RECEPTION_REPORT=Ib4b12SSCC}]}{tagRTCP_CUSTOM_RR={tagRTCP_APP=II}I{tagRTCP_CUSTOM_RECEIVER_INFO=b4b4}[1{tagRTCP_CUSTOM_RECEPTION_REPORT=Ib4b12SSCC}]}{tagRTCP_CUSTOM_RCTL={tagRTCP_APP=II}{tagRTCP_CUSTOM_RATE_CONTROL_INFO=[20C]}})}16Q24
@24@0:8^{tagRTCPPACKET={tagRTCPCOMMON=b5b1b2b8S}(?={tagSR_RTCP=IIIIII[1{tagRTCP_RRB=Ib8b24IIII}]}{tagRR_RTCP=I[1{tagRTCP_RRB=Ib8b24IIII}]}{tagSDES_RTCP=I{tagRTCPSDES=CC[258c]}}{tagBYE_RTCP=I}{tagRTCP_APP=II}{tagRTCP_APP_LTRP={tagRTCP_APP=II}I}{tagFIR_RTCP=I[10S]}{tagNACK_RTCP=ISS}{tagRTCP_PSFB_PLI={tagRTCP_FBCOMMON=II}}{tagRTCP_PSFB_SLI={tagRTCP_FBCOMMON=II}I}{tagRTCP_PSFB_FIR={tagRTCP_FBCOMMON=II}IC[3C]}{tagRTCP_PSFB_TST={tagRTCP_FBCOMMON=II}II}{tagRTCP_PSFB_TST={tagRTCP_FBCOMMON=II}II}{tagRTCP_PSFB_ALFB_HEADER={tagRTCP_FBCOMMON=II}I}{tagRTCP_PSFB_LOSSFB={tagRTCP_PSFB_ALFB_HEADER={tagRTCP_FBCOMMON=II}I}{tagRTCP_CUSTOM_PSFB_LOSS_FB_INFO=ISCC}}{tagRTCP_PSFB_LTRACK={tagRTCP_PSFB_ALFB_HEADER={tagRTCP_FBCOMMON=II}I}I}{tagRTCP_RTPFB_GNACK={tagRTCP_FBCOMMON=II}SS}{tagRTCP_RTPFB_TMMB={tagRTCP_FBCOMMON=II}II}{tagRTCP_RTPFB_TMMB={tagRTCP_FBCOMMON=II}II}{tagVCRTCPXR=I[0I]}{tagRTCP_CUSTOM_SR={tagRTCP_APP=II}I{tagRTCP_CUSTOM_SENDER_INFO=IIIIb4b4}[1{tagRTCP_CUSTOM_RECEPTION_REPORT=Ib4b12SSCC}]}{tagRTCP_CUSTOM_RR={tagRTCP_APP=II}I{tagRTCP_CUSTOM_RECEIVER_INFO=b4b4}[1{tagRTCP_CUSTOM_RECEPTION_REPORT=Ib4b12SSCC}]}{tagRTCP_CUSTOM_RCTL={tagRTCP_APP=II}{tagRTCP_CUSTOM_RATE_CONTROL_INFO=[20C]}})}16
@"AVCRTCPReceiverReport"
v24@0:8^{opaqueVCAudioBufferList=}16
@32@0:8q16@24
v24@0:8^^{opaqueCMSimpleQueue}16
^{_VCAudioPowerSpectrumSourceRealtimeContext={_VCSingleLinkedList=^{_VCSingleLinkedListEntry}B^?Q}^{opaqueCMSimpleQueue}@}16@0:8
{_VCAudioPowerSpectrumSourceRealtimeContext="powerSpectrumSinks"{_VCSingleLinkedList="head"^{_VCSingleLinkedListEntry}"initialized"B"compare"^?"countEntries"Q}"eventQueue"^{opaqueCMSimpleQueue}"powerSpectrumSourceDelegate"@}
@24@0:8I16I20
B32@0:8*16I24I28
i24@0:8I16I20
i32@0:8*16I24I28
^{tagIPPORT=i[16c](?=I[16C])S}16@0:8
v24@0:8^{tagIPPORT=i[16c](?=I[16C])S}16
^{tagIPPORT=i[16c](?=I[16C])S}
@24@0:8^{?=i[12C]}16
r^{?=i[12C]}16@0:8
^{?=i[12C]}
^{tagIPPORT=i[16c](?=I[16C])S}24@0:8@16
d20@0:8I16
@20@0:8C16
@44@0:8@16^{__CFString=}24@32B40
B48@0:8@16^{__CFString=}24*32*40
{?=S[32{?=CC}]}16@0:8
@28@0:8I16I20C24
{?=ddidd}16@0:8
[8I]
^{OpaqueVCFECFeedbackAnalyzer=}
B72@0:8^@16q24q32q40@48@56@64
B64@0:8^@16q24q32@40@48@56
{OWRDList="time"[100d]"owrd"[100d]"frontIndex"i"rearIndex"i"size"i}
@64@0:8@16@24@32^v40^?48^?56
v32@0:8^@16@24
v44@0:8i16@20@28^B36
B40@0:8@16^B24@32
i28@0:8^i16I24
^{tagVCNWConnectionMonitor=}16@0:8
i24@0:8@16
@"NSObject<OS_nw_connection>"
B20@0:8C16
@"NSError"16@0:8
v24@0:8@"VCAudioIO"16
@44@0:8@16^?24^v32C40
^{tagVCAudioStreamGroupStream=^{tagVCAudioStreamGroupStream}BB^v^?S@II}16@0:8
B28@0:8@16B24
v28@0:8^{?=I[5I]Id{CGSize=dd}dIdII}16f24
B28@0:8@16i24
^?16@0:8
v24@0:8^?16
^{tagVCAudioStreamGroupStream=^{tagVCAudioStreamGroupStream}BB^v^?S@II}
^{opaqueVCAudioBufferList=}
{VCAudioStreamGroupSyncDestinationList="slh_first"^{tagVCAudioStreamGroupSyncDestination}}
@"VCAudioIO"
@"VCAudioPowerSpectrumSource"
^{opaqueCMSimpleQueue=}
^{tagVCMemoryPool={?=^vq}Q}
v32@0:8^B16^B24
[500I]
{?="configurationExtension"b1}
B732@0:8^{?=[100d][100d]iiIdddB}16d24d32{tagVCRateControlAlgorithmConfig=I^Iiii[2i]iiiiiiiiiiiddddddddddddddiiidddddddddddIIIIIBBBBBBBBBBBiBddididddidiiddidddddddddddddddddBdiiBiddddddIIdd}40B728
B728@0:8^{?=[100d][100d]iiIdddB}16d24d32{tagVCRateControlAlgorithmConfig=I^Iiii[2i]iiiiiiiiiiiddddddddddddddiiidddddddddddIIIIIBBBBBBBBBBBiBddididddidiiddidddddddddddddddddBdiiBiddddddIIdd}40
v716@0:8^{?=[100d][100d]iiIdddB}16{tagVCRateControlAlgorithmConfig=I^Iiii[2i]iiiiiiiiiiiddddddddddddddiiidddddddddddIIIIIBBBBBBBBBBBiBddididddidiiddidddddddddddddddddBdiiBiddddddIIdd}24B712
d52@0:8d16^{?=[100d][100d]iiIdddB}24I32I36d40B48
v712@0:8^{?=[100d][100d]iiIdddB}16{tagVCRateControlAlgorithmConfig=I^Iiii[2i]iiiiiiiiiiiddddddddddddddiiidddddddddddIIIIIBBBBBBBBBBBiBddididddidiiddidddddddddddddddddBdiiBiddddddIIdd}24
@24@0:8^{tagCONNRESULT=IiiIiiSS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}IiiiiSiii^{tagCONNRESULT}i}16
v24@0:8^{tagCONNRESULT=IiiIiiSS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}IiiiiSiii^{tagCONNRESULT}i}16
^{tagCONNRESULT=IiiIiiSS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}IiiiiSiii^{tagCONNRESULT}i}16@0:8
^{tagCONNRESULT=IiiIiiSS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}IiiiiSiii^{tagCONNRESULT}i}
v28@0:8^{tagCONNRESULT=IiiIiiSS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}IiiiiSiii^{tagCONNRESULT}i}16I24
v36@0:8@16^{opaqueCMSampleBuffer=}24I32
v36@0:8@"VCMomentsHistoryBuffer"16^{opaqueCMSampleBuffer=}24I32
v28@0:8^{opaqueVCAudioBufferList=}16I24
v32@0:8^{opaqueCMSampleBuffer=}16C24I28
v36@0:8@16I24@?28
v40@0:8C16@20I28@?32
B40@0:8I16@20^@28i36
B48@0:8^{__CVBuffer=}16@24^@32i40C44
{?=qiIq}48@0:8I16@20^{CGRect={CGPoint=dd}{CGSize=dd}}28*36i44
v52@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16C48
{CGSize=dd}52@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16C48
v92@0:8@16@24{?=qiIq}32{CGRect={CGPoint=dd}{CGSize=dd}}56C88
@28@0:8@16C24
i32@0:8@16@24
v64@0:8^{__CVBuffer=}16{?=qiIq}24^{opaqueCMSampleBuffer=}48C56I60
C24@0:8@16
v40@0:8@16@24^{opaqueCMSampleBuffer=}32
v32@0:8@?16@24
@"NSObject<VCMovieWriterProtocol>"
@"VCMomentsHistoryBuffer"
@"VideoAttributes"
^{__CVPixelBufferPool=}
{CGSize="width"d"height"d}
^{OpaqueVTPixelTransferSession=}
^{__CFAllocator=}
{tagVCMomentsHistoryAudioFormat="figFormat"^{opaqueCMFormatDescription}"basicFormat"{AudioStreamBasicDescription="mSampleRate"d"mFormatID"I"mFormatFlags"I"mBytesPerPacket"I"mFramesPerPacket"I"mBytesPerFrame"I"mChannelsPerFrame"I"mBitsPerChannel"I"mReserved"I}}
v32@0:8d16@24
v24@0:8@"VCEmulatedPacket"16
v32@0:8d16@"NSDictionary"24
[4096d]
{?="multiwayCapabilities"b1"supportedImageTypes"b1"supportedVideoCodecs"b1}
v708@0:8{tagVCRateControlAlgorithmConfig=I^Iiii[2i]iiiiiiiiiiiddddddddddddddiiidddddddddddIIIIIBBBBBBBBBBBiBddididddidiiddidddddddddddddddddBdiiBiddddddIIdd}16B704
B184@0:8{tagVCStatisticsMessage=iidBBBB(?={?=IIIIIIddddd[64c]i}{?=IIIIIIIIIIIIddIIdIB{?=iIIIdddII}{?=SBBI}}{?=dddIIIIIQI}{?=IBBBIIdIB{?=iIIIdddII}}{?=CIIIIIIIIIddddIIII}{?=IIId}{?=iIIIdddII}{?=IIII}{?=IIIIIIBI}{?=IIIIfBBddIIIQ}{?=CCCQQQIIIQiI(?={?=CCSSCCCCCCCfBS[6I]}{?=CsscCCCCSSC})}{tagVCStatisticsVideoLossFeedback=ISCC})}16
[256i]
v40@0:8@16@24^{opaqueRTCReporting=}32
v24@0:8@"NSString"16
@"VCTextReceiver"
@"VCTextTransmitter"
@"<VCTextReceiverDelegate>"
@36@0:8S16@20^@28
{sockaddr_in="sin_len"C"sin_family"C"sin_port"S"sin_addr"{in_addr="s_addr"I}"sin_zero"[8c]}
@"NSObject"
@"NSObject<LoopbackSocketTunnelDelegate>"
{?="audioUnitModel"b1}
B28@0:8@16I24
q24@0:8@16
@44@0:8@16I24{VCRedundancyControllerVideoParameters_t=@IBC}28
v24@0:8^{?=*Q}16
@"<VCRedundancyControlAlgorithm>"
@28@0:8*16I24
@24@0:8[16C]16
r*16@0:8
v24@0:8[16C]16
I28@0:8*16I24
[16C]
@24@0:8^{tagSRTPINFO=ii{_opaque_pthread_mutex_t=q[56c]}{_opaque_pthread_cond_t=q[40c]}IISSIIQii[32C][14C][32C][14C][20C]{_opaque_pthread_mutex_t=q[56c]}^v^vII{os_unfair_lock_s=I}{tagSRTPCryptContext=^{_CCCryptor}}{tagSRTPTransformPolicy=iiiiiii}IB}16
^{tagSRTPINFO=ii{_opaque_pthread_mutex_t=q[56c]}{_opaque_pthread_cond_t=q[40c]}IISSIIQii[32C][14C][32C][14C][20C]{_opaque_pthread_mutex_t=q[56c]}^v^vII{os_unfair_lock_s=I}{tagSRTPCryptContext=^{_CCCryptor}}{tagSRTPTransformPolicy=iiiiiii}IB}16@0:8
{tagSRTPINFO="fSRTPInitialized"i"fCancelled"i"xWait"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}"cWait"{_opaque_pthread_cond_t="__sig"q"__opaque"[40c]}"dwSSRC"I"dwRTPROC"I"wFirstRTPSeq"S"wHighestRTPSeq"S"dwFirstRTCPSeq"I"dwHighestRTCPSeq"I"SRTPIndex"Q"mediaKeyLength"i"sessionKeyLength"i"MediaKey"[32C]"MasterSalt"[14C]"SessionKey"[32C]"SessionSalt"[14C]"SessionAuthenticationKey"[20C]"MKIAccess"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}"mediaKeyIndex"^v"mediaKeyIndexInPacket"^v"SRTCPIndex"I"dwDerivationRate"I"cryptContextLock"{os_unfair_lock_s="_os_unfair_lock_opaque"I}"cryptContext"{tagSRTPCryptContext="ccCryptorRef"^{_CCCryptor}}"policy"{tagSRTPTransformPolicy="cipherMode"i"mediaKeyLength"i"sessionKeyLength"i"sessionSaltLength"i"authenticationMode"i"sessionAuthenticationKeyLength"i"sessionAuthenticationTagLength"i}"operatingMode"I"enableEncryptionDebug"B}
v24@0:8^{tagSRTPINFO=ii{_opaque_pthread_mutex_t=q[56c]}{_opaque_pthread_cond_t=q[40c]}IISSIIQii[32C][14C][32C][14C][20C]{_opaque_pthread_mutex_t=q[56c]}^v^vII{os_unfair_lock_s=I}{tagSRTPCryptContext=^{_CCCryptor}}{tagSRTPTransformPolicy=iiiiiii}IB}16
v24@0:8^{?={tagSRTPExchangeInfo=[65c][29c]^v}I{tagSRTPExchangeInfo=[65c][29c]^v}Iii}16
i40@0:8^{?=[65c]i[65c]i^v}16@24^I32
i28@0:8^{?=[65c]i[65c]i^v}16I24
B32@0:8*16i24S28
B40@0:8^v16*24i32S36
@?16@0:8
@"VCEmulatedOutputQueue"
v40@0:8^S16C24^S28C36
v24@0:8r^{?=S[32{?=CC}]}16
v24@0:8^{VCRateControlMediaSuggestion=BBBBBBB}16
v56@0:8i16B20{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8I16I20I24I28
^{__CFDictionary=}16@0:8
v24@0:8^{opaqueCMSampleBuffer=}16
B40@0:8^Q16*24^{opaqueCMSampleBuffer=}32
B24@0:8^{opaqueCMSampleBuffer=}16
v28@0:8^{opaqueCMSampleBuffer=}16C24
i48@0:8*16Q24I32d36C44
i44@0:8*16i24I28d32C40
i68@0:8r*16^i24i32i36i40I44d48C56^i60
v28@0:8I16I20I24
^{tagVCRealTimeThread=II{_opaque_pthread_mutex_t=q[56c]}@^?^v^{OpaqueFigThread}i[60c]II}
^{opaqueCMBufferQueue=}
@"VCMediaStreamStats"
{?="encoderVTable"^{?}"type"i"encoderHandle"^{tagHANDLE}}
@"<VCCaptionsSource>"
v36@0:8q16B24@28
v28@0:8q16C24
v36@0:8q16B24@"NSError"28
v32@0:8q16@"VCCaptionsTranscription"24
v40@0:8q16*24@32
B48@0:8^{__CVBuffer=}16{?=qiIq}24
@48@0:8@16@24^{opaqueRTCReporting=}32@40
@32@0:8@16^B24
@"NSMutableSet"
@"VCIDRScheduler"
B28@0:8r^v16i24
@24@0:8I16C20
B20@0:8S16
@32@0:8B16B20B24i28
@36@0:8B16B20B24i28B32
@48@0:8i16i20i24@28B36B40i44
v28@0:8i16B20B24
v24@0:8B16B20
I28@0:8i16d20
@24@0:8i16i20
@36@0:8i16@20@28
i40@0:8I16i20@24@32
B28@0:8i16i20i24
B28@0:8i16@20
f24@0:8i16I20
I28@0:8q16i24
B24@0:8q16
v32@0:8@"VCAudioPowerSpectrumMeter"16@"NSDictionary"24
@44@0:8S16d20@28^@36
B48@0:8@16@24@32^@40
B40@0:8@16@24^@32
@36@0:8@16i24^@28
B56@0:8@16@24@32@40^@48
@32@0:8@16^@24
@"VCCellularAudioTap"
@"VCAudioRuleCollection"
@36@0:8i16@?20^@28
@44@0:8i16@?20@?28^@36
@40@0:8@16@?24^@32
@44@0:8@16@?24i32^@36
@52@0:8@16@?24@?32i40^@44
B48@0:8@16@?24@?32^@40
v32@0:8@16@?24
I24@0:8I16i20
I36@0:8@16@24I32
I24@0:8I16I20
@44@0:8@16q24@32I40
v36@0:8@16i24I28I32
@48@0:8@16@24I32I36^B40
S28@0:8S16@20
B36@0:8i16@20@28
@48@0:8@16@24I32@36I44
@52@0:8@16@24I32@36I44I48
B48@0:8@16@24@32@40
@40@0:8@16@24@32
@"NSSet"
@28@0:8I16@?20
@36@0:8I16@?20@28
I24@0:8q16
@36@0:8@16@24I32
C24@0:8q16
v24@0:8@"<VCMediaStreamSyncSourceDelegate>"16
v36@0:8@16I24q28
v40@0:8@"VCTelephonyInterface"16@"NSString"24@"NSNumber"32
v28@0:8@"VCTelephonyInterface"16B24
v36@0:8@"VCTelephonyInterface"16I24q28
v32@0:8@"VCMediaStreamRateAdaptation"16I24I28
I32@0:8I16i20d24
B32@0:8^{tagVCRTCPXRSummaryReport=BBBiISSIIiiiiCCCC}16*24
B32@0:8^{tagVCRTCPXRVoIPMetricsReport=CCCCSSSSCCCCCCCCCSSS}16*24
v28@0:8i16@?20
v24@0:8i16i20
v32@0:8q16q24
@28@0:8i16I20I24
@40@0:8@16@24^@32
B24@0:8i16B20
v24@0:8^{tagVCAudioReceiverConfig=I[4{tagVCAudioReceiverStream=^{tagHANDLE}SBB^{tagVCCryptor}iB^{tagVCAudioReceiver}^v^v}]^vIiIiiB^{opaqueRTCReporting}iB^{__CFString}^{__CFString}SBBBBBiB^v^?^?^?^{tagVCJBTargetEstimatorSynchronizer}^v^vIBIiBBQB}16
B32@0:8q16@24
^{_METER_INFO=B^{opaqueVCFFTMeter}}20@0:8i16
v24@0:8B16i20
B32@0:8^{_RTCP_RECEPTION_REPORT=IIIIIIIIC}16*24
v24@0:8^{ifnet_interface_advisory=(?={?=CCSiQQQQIIICCSSCCCC}{?={ifnet_interface_advisory_header=CCCC}{ifnet_interface_advisory_capacity=iQQQQIII}(?={ifnet_interface_advisory_wifi_context=CCSSCCCCCS[6I]}{ifnet_interface_advisory_cell_context=CsscCCCCSSCC})})}16
^{__CFDictionary=}24@0:8@16
^{__CFString=}16@0:8
v32@0:8^i16^I24
v40@0:8{_VCAudioCodecModeChangeEvent=iiiI{EVSRFParams=II}}16
v48@0:8{_VCAudioCodecModeChangeEvent=iiiI{EVSRFParams=II}}16B40B44
{tagVCAudioFrameFormat="format"{AudioStreamBasicDescription="mSampleRate"d"mFormatID"I"mFormatFlags"I"mBytesPerPacket"I"mFramesPerPacket"I"mBytesPerFrame"I"mChannelsPerFrame"I"mBitsPerChannel"I"mReserved"I}"samplesPerFrame"I}
@"DTMFEventHandler"
@"WRMClient"
@"VCAudioPayload"
@"VCAudioTransmitter"
@"VCTelephonyInterface"
@"NSNumber"
{_VCAudioStreamSinkContext="soundMeter"{_METER_INFO="frequencyMeteringEnabled"B"fftMeter"^{opaqueVCFFTMeter}}}
{_VCAudioStreamSourceContext="isRemoteMuted"B"soundMeter"{_METER_INFO="frequencyMeteringEnabled"B"fftMeter"^{opaqueVCFFTMeter}}"audioReceiver"^{tagVCAudioReceiver}"framesProcessed"I"volume"f"shouldPostProcessSamples"B"isSendOnly"B"isRemoteMediaStalled"B"lastReceivedAudioTimestamp"d"packetsSinceStallCount"i"remoteMediaStallTimeout"d"awdTimeReceiver"I"stallReportCount"C"transports"{_VCSingleLinkedList="head"^{_VCSingleLinkedListEntry}"initialized"B"compare"^?"countEntries"Q}"oneToOneStreamID"S"oneToOneStatisticsCollector"@"AVCStatisticsCollector""isMultiwayConfig"B"targetBitrate"I"delegate"@"<VCMediaStreamDelegate>""self"@"VCAudioStream""syncSourceDelegate"@"<VCMediaStreamSyncSourceDelegate>""momentsCollectorDelegate"@"<VCMomentsCollectorDelegate>""wrmInfo"^{tagWRMMetricsInfo}"defaultRtpHandle"^{tagHANDLE}}
{ifnet_interface_advisory=""(?=""{?="version"C"direction"C"_reserved"S"rate_trend_suggestion"i"timestamp"Q"max_bandwidth"Q"total_byte_count"Q"average_throughput"Q"flushable_queue_size"I"non_flushable_queue_size"I"average_delay"I"frequency_band"C"intermittent_state"C"estimated_intermittent_period"S"single_outage_period"S"bt_coex"C"quality_score_delay"C"quality_score_loss"C"quality_score_channel"C}""{?="header"{ifnet_interface_advisory_header="version"C"direction"C"interface_type"C"reserved"C}"capacity"{ifnet_interface_advisory_capacity="rate_trend_suggestion"i"timestamp"Q"max_bandwidth"Q"total_byte_count"Q"average_throughput"Q"flushable_queue_size"I"non_flushable_queue_size"I"average_delay"I}""(?="wifi_context"{ifnet_interface_advisory_wifi_context="frequency_band"C"intermittent_state"C"estimated_intermittent_period"S"single_outage_period"S"bt_coex"C"quality_score_delay"C"quality_score_loss"C"quality_score_channel"C"radio_coex"C"wlan_duty_cycle"S"wifi_observed_tx_bitrate"[6I]}"cell_context"{ifnet_interface_advisory_cell_context="radio_access_technology"C"reference_signal_level"s"signal_level"s"signal_quality"c"uplink_bler"C"downlink_bler"C"bandwidth_limitation_indication"C"cdrx_state"C"cdrx_cycle"S"estimated_outage_period"S"outage_state"C"__pad"C})})}
@24@0:8Q16
@"VCMediaNegotiationBlobV2BandwidthSettings"
@"VCMediaNegotiationBlobV2CameraSettingsU1"
@"VCMediaNegotiationBlobV2CodecFeatures"
@"VCMediaNegotiationBlobV2GeneralInfo"
@"VCMediaNegotiationBlobV2MicrophoneSettingsU1"
@"VCMediaNegotiationBlobV2MomentsSettings"
@"<VCStreamSychronizationDelegate>"16@0:8
v24@0:8@"<VCStreamSychronizationDelegate>"16
@"VCStreamOutput"16@0:8
v24@0:8@"VCStreamOutput"16
@40@0:8q16q24Q32
B24@0:8r^{tagVCAudioFrameFormat={AudioStreamBasicDescription=dIIIIIIII}I}16
@"VCStreamInputAudio"
@"VCAudioIOControllerClient"
^{PacketThread_s=}
@"VCStreamOutput"
^{_VCAudioIOControllerClientIO=^v^?@III^{opaqueVCAudioBufferList}}
{?="value"q"timescale"i"flags"I"epoch"q}
@"<VCCoreMotionManagerDelegate>"
@40@0:8@16I24i28^@32
@32@0:8i16I20^@24
v54@0:8r^v16I24{?=cSCSC}28^{?=IQSCc[12S]CS{?=SSSSS}dQBQ[16C]BB}38@?46
v60@0:8r^^v16^I24^{?=cSCSC}32i40^^{?}44@?52
@"IDSDatagramChannel"
v36@0:8S16@20I28I32
v28@0:8S16^{?=dCSIII}20
{?=dCSIII}16@0:8
i28@0:8B16@20
[128{?="requestTime"d"linkID"C"statsIdentifier"S"totalLocalMediaPacketSent"I"totalLocalMediaPacketReceived"I"totalServerStatsByteUsed"I}]
{?="capabilities"b1"supportedCodecs"b1}
@"VCEmulatedNetworkQueue"
d24@0:8I16I20
v40@0:8d16d24d32
B28@0:8*16I24
@"VCAudioStreamGroupCommonConfig"16@0:8
v24@0:8@"VCAudioStreamGroupCommonConfig"16
@"VCAudioStreamGroupCommonConfig"
@"VCSystemAudioCaptureSession"
@24@0:8i16B20
@36@0:8@16i24@28
v28@0:8^{opaqueCMSampleBuffer=}16I24
^{opaqueCMSampleBuffer=}20@0:8I16
^{tagVCCellularAudioTapIORealtimeContext=q^{_VCAudioPowerSpectrumSourceRealtimeContext}}16@0:8
{tagVCCellularAudioTapIORealtimeContext="streamToken"q"powerSpectrumSourceRealtimeContext"^{_VCAudioPowerSpectrumSourceRealtimeContext}}
B24@0:8@"<VCMediaStreamSyncSource>"16
v28@0:8@16c24
v36@0:8@16@24B32
v44@0:8@16B24@28@36
v32@0:8@16S24S28
v32@0:8@16S24i28
v24@0:8@"<VCMediaStreamProtocol>"16
v36@0:8@"<VCMediaStreamProtocol>"16B24d28
v32@0:8@"<VCMediaStreamProtocol>"16@"NSArray"24
v28@0:8@"<VCMediaStreamProtocol>"16c24
v36@0:8@"<VCMediaStreamProtocol>"16@"NSData"24B32
v28@0:8@"<VCMediaStreamProtocol>"16S24
v32@0:8@"<VCMediaStreamProtocol>"16@"NSString"24
v32@0:8@"<VCMediaStreamProtocol>"16@"NSDictionary"24
v44@0:8@"<VCMediaStreamProtocol>"16B24@"NSError"28@"NSDictionary"36
v28@0:8@"<VCMediaStreamProtocol>"16C24
v48@0:8@"<VCMediaStreamProtocol>"16{?=qiIq}24
v32@0:8@"<VCMediaStreamProtocol>"16S24S28
v32@0:8@"<VCMediaStreamProtocol>"16S24i28
B40@0:8@16q24^@32
@96@0:8I16I20I24I28I32I36I40I44B48B52I56@60@68I76I80I84C88I92
{CGSize=dd}16@0:8
v32@0:8{CGSize=dd}16
@"VCMediaNegotiationBlobV2SettingsU1"
{?="streamGroup"b1}
@36@0:8i16i20f24i28f32
@28@0:8i16i20f24
@32@0:8i16i20f24i28
v28@0:8i16i20f24
@32@0:8I16*20I28
[1500C]
v24@0:8^{tagVCSourceDestinationInfo=i(?={?={tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{?=BS}}{?=ii{tagIPPORT=i[16c](?=I[16C])S}i}{?=I{?=cSCSC}B}{?=@})I^{tagVCSourceDestinationInfo}^v}16
B24@0:8^{tagVCSourceDestinationInfo=i(?={?={tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{?=BS}}{?=ii{tagIPPORT=i[16c](?=I[16C])S}i}{?=I{?=cSCSC}B}{?=@})I^{tagVCSourceDestinationInfo}^v}16
q36@0:8@16B24^{?=BBBBB}28
S20@0:8S16
B24@0:8@"<VCConnectionProtocol>"16
q36@0:8@"<VCConnectionProtocol>"16B24^{?=BBBBB}28
@"NSUUID"16@0:8
@28@0:8^{tagCONNRESULT=IiiIiiSS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}IiiiiSiii^{tagCONNRESULT}i}16I24
@24@0:8^{tagCANDIDATEPAIR={tagCANDIDATE=iiI[8C]SS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}I}{tagCANDIDATE=iiI[8C]SS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}I}iSS[8C]{tagIPPORT=i[16c](?=I[16C])S}Iiiiiiiii^{tagCANDIDATEPARIR}}16
B24@0:8^{tagIPPORT=i[16c](?=I[16C])S}16
@24@0:8^{tagIPPORT=i[16c](?=I[16C])S}16
{tagIPPORT=i[16c](?=I[16C])S}24@0:8@16
@44@0:8@16@24I32@36
v36@0:8I16@20@28
B24@0:8^{tagStreamGroupStreamOptionalPackedPayload=SSC}16
v40@0:8^v16@24@32
B36@0:8@16@24I32
B36@0:8*16I24I28B32
B40@0:8^I16^B24I32C36
B28@0:8I16@20
B32@0:8@16^I24
B40@0:8@16@24^I32
v28@0:8I16@20
@36@0:8I16I20I24I28I32
@32@0:8I16I20I24I28
Q24@0:8@16
v32@0:8{_NSRange=QQ}16
@"VCMediaNegotiatorStreamGroupU1Configuration"
@"NSMutableOrderedSet"
@36@0:8I16I20I24^{OpaqueCMBlockBuffer=}28
^{OpaqueCMBlockBuffer=}16@0:8
^{OpaqueCMBlockBuffer=}
@40@0:8I16Q20Q28I36
@"VCSessionUplinkVideoStreamController"
@28@0:8I16^{opaqueRTCReporting=}20
{_VCVideoSourceToken=(?={?=b24b8}I)}28@0:8@16i24
@20@0:8{_VCVideoSourceToken=(?={?=b24b8}I)}16
@"VCVideoSourceTokenManager"
[4Q]
B24@0:8r^{tagVCSystemAudioCaptureControllerConfig={tagVCSystemAudioCaptureTapSettings=I(?=iI)^{__CFString}I}}16
@32@0:8^{tagVCSystemAudioCaptureControllerConfig={tagVCSystemAudioCaptureTapSettings=I(?=iI)^{__CFString}I}}16@24
i24@0:8^{tagVCSystemAudioCaptureControllerConfig={tagVCSystemAudioCaptureTapSettings=I(?=iI)^{__CFString}I}}16
@24@0:8r^{tagVCSystemAudioCaptureControllerConfig={tagVCSystemAudioCaptureTapSettings=I(?=iI)^{__CFString}I}}16
v24@0:8r^{tagVCSystemAudioCaptureControllerConfig={tagVCSystemAudioCaptureTapSettings=I(?=iI)^{__CFString}I}}16
{tagVCSystemAudioCaptureControllerConfig="tapSettings"{tagVCSystemAudioCaptureTapSettings="tapType"I""(?="audioProcessIdToTap"i"sessionTypeToTap"I)"captureContext"^{__CFString}"source"I}}
Q20@0:8i16
v24@0:8@"<VCMomentsMessengerDelegate>"16
B32@0:8@"NSDictionary"16^@24
v36@0:8C16C20@24I32
v36@0:8@16B24q28
@"VCMomentsHistory"
^{tagVCAudioRedPayload=i*iIBCCC}32@0:8^{tagVCAudioRedPayload=i*iIBCCC}16@24
B28@0:8^{tagVCAudioRedPayload=i*iIBCCC}16I24
*24@0:8^{tagVCAudioRedPayload=i*iIBCCC}16
^{tagVCAudioRedPayload=i*iIBCCC}20@0:8I16
@24@0:8^{tagVCAudioRedPayload=i*iIBCCC}16
B32@0:8@16^v24
^{tagVCAudioRedPayload=i*iIBCCC}24@0:8^{tagVCAudioRedPayload=i*iIBCCC}16
@40@0:8i16I20I24I28I32B36
{tagVCAudioRedPayload="payloadType"i"buffer"*"bufferLength"i"timestamp"I"isRedAudio"B"redCount"C"sequenceOffset"C"priority"C}
@"NSPointerArray"
[1472C]
[9{tagVCAudioRedPayload="payloadType"i"buffer"*"bufferLength"i"timestamp"I"isRedAudio"B"redCount"C"sequenceOffset"C"priority"C}]
B28@0:8^i16i24
@20@0:8B16
B32@0:8^@16^@24
v36@0:8i16i20^{imageTag=iiiiiiifi}24i32
v52@0:8i16i20@24i32^{imageTag=iiiiiiifi}36B44B48
v36@0:8i16^i20^i28
v28@0:8B16i20i24
B36@0:8^B16^i24i32
(tagNTP=Q{?=II})16@0:8
v24@0:8(tagNTP=Q{?=II})16
@"VCMediaNegotiatorAudioConfiguration"
@"VCVideoRuleCollections"
(tagNTP="wide"Q"time"{?="frac"I"sec"I})
@32@0:8^{tagHANDLE=i}16@24
v48@0:8^d16^d24^d32^d40
v32@0:8^I16^d24
v24@0:8^{VCRCMediaPLPFromRemoteInfo=SIII^I^d^d^d}16
v40@0:8^{VCRateControlMediaSuggestion=BBBBBBB}16^B24d32
B36@0:8C16S20S24^S28
v44@0:8I16I20I24d28^B36
v32@0:8I16C20I24B28
B24@0:8i16S20
v56@0:8d16I24d28I36I40d44B52
^{tagHANDLE=i}16@0:8
^{tagVCMediaQueue=}16@0:8
v24@0:8^{tagVCMediaQueue=}16
^{tagVCMediaQueue=}
@"SenderLargeFrameInfo"
q28@0:8@16B24
q32@0:8@16^{?=BBBBB}24
B36@0:8I16@20^I28
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
{_NSRange=QQ}16@0:8
@44@0:8I16@20{_NSRange=QQ}28
{_NSRange="location"Q"length"Q}
v48@0:8@16@24@32@40
{?="isFinal"b1"isLocal"b1}
i60@0:8^{tagCANDIDATEPAIR={tagCANDIDATE=iiI[8C]SS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}I}{tagCANDIDATE=iiI[8C]SS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}I}iSS[8C]{tagIPPORT=i[16c](?=I[16C])S}Iiiiiiiii^{tagCANDIDATEPARIR}}16i24^i28^i36^i44^i52
i28@0:8^{tagIPPORT=i[16c](?=I[16C])S}16B24
i56@0:8@16B24i28^i32^i40^i48
i48@0:8@16B24i28^i32^i40
v24@0:8i16B20
v40@0:8^{tagVCSourceDestinationInfo=i(?={?={tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{?=BS}}{?=ii{tagIPPORT=i[16c](?=I[16C])S}i}{?=I{?=cSCSC}B}{?=@})I^{tagVCSourceDestinationInfo}^v}16^B24^B32
@32@0:8^{tagVCSourceDestinationInfo=i(?={?={tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{?=BS}}{?=ii{tagIPPORT=i[16c](?=I[16C])S}i}{?=I{?=cSCSC}B}{?=@})I^{tagVCSourceDestinationInfo}^v}16^B24
v36@0:8C16i20i24B28B32
I24@0:8C16B20
@"<VCConnectionProtocol>"
d20@0:8B16
B32@0:8Q16Q24
@56@0:8^{__CVBuffer=}16{?=qiIq}24@48
@72@0:8^{__CVBuffer=}16^{__CVBuffer=}24{?=qiIq}32@56@64
v24@0:8^{__CVBuffer=}16
^{__CVBuffer=}16@0:8
{?=qiIq}16@0:8
v40@0:8{?=qiIq}16
^{__CVBuffer=}
v40@0:8C16B20C24C28@32
^{?=BBBBB}16@0:8
v28@0:8B16B20B24
v28@0:8C16@20
v36@0:8C16@20@28
v32@0:8C16@20B28
{?=@@}16@0:8
{?="preferRelayOverP2P"B"preferIPv6OverIPv4"B"preferNonVPN"B"e2eCriteriaEnabled"B"preferE2E"B}
{?="primaryConnection"@"<VCConnectionProtocol>""secondaryConnection"@"<VCConnectionProtocol>"}
@52@0:8I16@20@28^{?=i^{tagVCSecurityKeyHolder}^{tagVCSecurityKeyHolder}^{__CFData}^{__CFData}B}36@44
@64@0:8@16@24^@32^@40^I48^B56
v48@0:8@16@24d32@40
B52@0:8@16@24@32B40@44
B52@0:8@16@24I32@36@44
@52@0:8@16@24Q32B40@44
@"<VCControlChannelTransactionDelegate>"
v32@0:8@16^v24
v32@0:8@"VCSession"16@"NSDictionary"24
v36@0:8@16B24@28
v44@0:8@16@24B32@36
v40@0:8@16B24B28@32
v48@0:8@16@24B32B36@40
v52@0:8@16@24I32I36B40@44
v40@0:8@16@24I32I36
v44@0:8@16@24C32@36
v36@0:8@"VCSession"16B24@"NSError"28
v32@0:8@"VCSession"16@"NSError"24
v44@0:8@"VCSession"16@"NSString"24B32@"NSError"36
v44@0:8@"VCSession"16@"NSDictionary"24B32@"NSError"36
v40@0:8@"VCSession"16B24B28@"NSError"32
v48@0:8@"VCSession"16@"NSString"24B32B36@"NSError"40
v52@0:8@"VCSession"16@"NSString"24I32I36B40@"NSError"44
v40@0:8@"VCSession"16@"NSString"24I32I36
v36@0:8@"VCSession"16@"NSString"24B32
v44@0:8@"VCSession"16@"NSString"24C32@"NSString"36
v40@0:8@"VCSession"16@"NSString"24@"NSError"32
v24@0:8@"VCSession"16
@28@0:8q16I24
v28@0:8q16B24
B24@0:8B16S20
v28@0:8@"VCSessionBandwidthAllocationTableEntry"16B24
@"NSMutableArray"28@0:8q16I24
@"NSArray"24@0:8q16
@44@0:8q16I24^I28^B36
@"VCSessionBandwidthAllocationTable"
@28@0:8i16@20
@"<VCMediaNegotiatorProtocol>"
@32@0:8@16q24
B46@0:8r^v16I24{?=cSCSC}28^{?=IQSCc[12S]CS{?=SSSSS}dQBQ[16C]BB}38
@"VCDatagramChannelIDS"
@"VCEmulatedNetwork"
v24@0:8@"VCMediaControlInfo"16
i40@0:8^?16^?24^v32
i24@0:8^v16
^v40@0:8r*16Q24^{?=diIIIIISBB}32
^{__CFDictionary=}
@36@0:8S16d20@28
{_VCAudioPowerSpectrumMeterRealtimeContext="streams"{_VCSingleLinkedList="head"^{_VCSingleLinkedListEntry}"initialized"B"compare"^?"countEntries"Q}"eventQueue"^{opaqueCMSimpleQueue}"nextDeliveryTime"d"audioSpectrumRefreshRate"d"isProcessingOutput"{atomic_flag="_Value"AB}"nextHeatlhPrintTime"d"outputPowerSpectrums"^{__CFDictionary}"powerSpectrumMeterDelegate"@"powerSpectrumMeterDelegateContext"^v}
@"<VCMomentsMessenger>"
v40@0:8q16@24@32
v56@0:8q16@24@32@40@48
v28@0:8q16I24
v40@0:8q16@"NSDictionary"24@"NSError"32
v56@0:8q16@"NSDictionary"24@"NSURL"32@"NSURL"40@"NSError"48
v36@0:8q16@"NSDictionary"24B32
v40@0:8@16^{opaqueCMSampleBuffer=}24C32I36
v36@0:8@16^{opaqueVCAudioBufferList=}24I32
v40@0:8@"VCMediaStream"16^{opaqueCMSampleBuffer=}24C32I36
v36@0:8@"VCMediaStream"16^{opaqueVCAudioBufferList=}24I32
@"VCMoments"
B36@0:8C16B20B24d28
C28@0:8^{?=iiQ[128c]QQ}16B24
C24@0:8i16B20
v24@0:8f16I20
@"NSObject<VCAudioPowerLevelMonitorDelegate>"
@24@0:8^{tagVCVideoStreamReceiverConfig=^{tagHANDLE}@^{opaqueRTCReporting}Ii@B^v^?}16
v28@0:8B16Q20
v36@0:8B16I20I24d28
v24@0:8^{?=qiIq}16
{tagVCVideoPacketBufferConfig=SIii[200c]iBB^{__CFAllocator}BBB{tagVCVideoPacketBufferFrameDecryptionCallbackContext=^v^?}{tagVCVideoPacketBufferEnqueueFailedFrameToJitterBufferCallbackContext=^v^?}B^{tagVCNACKGenerator}{tagVCNACKGeneratorStoreBagsConfig=CffB[4f][4f]}}24@0:8^{_RTPMediaPacket=iiiSIISBdBBBQ[12S]CC{?=iiBQ}Q{VCBlockBuffer_t=^{OpaqueCMBlockBuffer}Q*}{VCBlockBuffer_t=^{OpaqueCMBlockBuffer}Q*}{VCBlockBuffer_t=^{OpaqueCMBlockBuffer}Q*}BBB}16
v36@0:8^{tagRTCP_RRB=Ib8b24IIII}16I24(tagNTP=Q{?=II})28
i40@0:8^{VCVideoReceiverSampleBuffer_t=^{__CFAllocator}{tagVCVideoDecodingArgs=iiISCBSBdiSBBSdBidBBBBQBI}^{OpaqueCMBlockBuffer}Q^{OpaqueCMBlockBuffer}{VCBlockBuffer_t=^{OpaqueCMBlockBuffer}Q*}{VCBlockBuffer_t=^{OpaqueCMBlockBuffer}Q*}{VCBlockBuffer_t=^{OpaqueCMBlockBuffer}Q*}{VCBlockBuffer_t=^{OpaqueCMBlockBuffer}Q*}i}16I24d28B36
v24@0:8^{opaqueCMFormatDescription=}16
i28@0:8^{opaqueCMSampleBuffer=}16B24
B28@0:8^{opaqueCMBufferQueue=}16I24
B24@0:8^{__CVBuffer=}16
i48@0:8^{__CVBuffer=}16{?=qiIq}24
^{OpaqueCMMemoryPool=}
^{OpaqueVTDecompressionSession=}
@"VCVideoStreamRateAdaptation"
^{opaqueCMFormatDescription=}
^{VideoPacketBuffer_t=}
^{OpaqueVCTransportStreamRunLoop=}
I24@0:8B16B20
I32@0:8C16B20B24B28
I28@0:8C16B20B24
I36@0:8I16C20B24B28B32
@"NSNumber"20@0:8I16
v28@0:8B16@"NSNumber"20
i32@0:8^v16^{__CFDictionary=}24
^v20@0:8I16
i28@0:8^v16I24
v24@0:8r^{tagVCSpatialAudioMetadataPositionalInfo=fffIII}16
B32@0:8@16I24C28
v44@0:8@16@24@32B40
@28@0:8@16B24
{_VCSessionParticipantCapabilities=BIiB}16@0:8
v32@0:8@16d24
C20@0:8B16
@32@0:8@16I24I28
B52@0:8@16@24@32@40I48
@48@0:8@16@24@32@40
i36@0:8^I16^Q24I32
v28@0:8^^{tagVCJBTargetEstimatorSynchronizer}16I24
v32@0:8{_VCSessionParticipantCapabilities=BIiB}16
@"TimingCollection"
{_VCSessionParticipantCapabilities="isPeace"B"participantType"I"controlChannelVersion"i"supportsGFTSwitchToOneToOne"B}
@"VCPositionalInfo"
@40@0:8I16B20@24@32
@44@0:8I16B20@24@32i40
B40@0:8^@16@24^@32
B40@0:8@16^i24^i32
B32@0:8^f16@24
B32@0:8@16^{CGSize=dd}24
v24@0:8@"<VCConnectionProtocol>"16
@"<VCVideoReceiverDelegate>"
@"<VCMediaStreamSyncSource>"
@"VCMediaStreamSynchronizer"
^{tagVCJBTargetEstimatorSynchronizer=}16@0:8
v24@0:8^{tagVCJBTargetEstimatorSynchronizer=}16
@"<VCMediaStreamGroupDelegate>"
@"<VCMediaCaptureController>"
@"VCSecurityKeyManager"
^{tagVCJBTargetEstimatorSynchronizer=}
@"VCNetworkFeedbackController"
{?="customVideoHeight"b1"customVideoWidth"b1"hdrModesSupported"b1"pixelFormats"b1"tilesPerFrame"b1"ltrpEnabled"b1}
@56@0:8@16^{opaqueCMFormatDescription=}24@32@40@48
@"VCVideoCapture"
@48@0:8^{tagHANDLE=i}16^{opaqueRTCReporting=}24@32I40i44
v24@0:8B16I20
v40@0:8I16I20d24I32B36
@"VCVideoStreamRateController"
I28@0:8i16Q20
@"<VCHardwareSettingsMacProtocol>"
@32@0:8r^{tagVCAudioRelayIOContext=^{tagVCAudioFrameFormat}^{tagVCAudioFrameFormat}^?^v^{opaqueVCAudioBufferList}f{tagVCAudioClientControllerTimeInfo=IIBBdIIQ}}16r^{tagVCAudioRelayIOContext=^{tagVCAudioFrameFormat}^{tagVCAudioFrameFormat}^?^v^{opaqueVCAudioBufferList}f{tagVCAudioClientControllerTimeInfo=IIBBdIIQ}}24
r^{_VCRemoteCodecInfo=Id}16@0:8
v24@0:8^{tagVCAudioRelayIOContext=^{tagVCAudioFrameFormat}^{tagVCAudioFrameFormat}^?^v^{opaqueVCAudioBufferList}f{tagVCAudioClientControllerTimeInfo=IIBBdIIQ}}16
r^{tagVCAudioRelayIOContext=^{tagVCAudioFrameFormat}^{tagVCAudioFrameFormat}^?^v^{opaqueVCAudioBufferList}f{tagVCAudioClientControllerTimeInfo=IIBBdIIQ}}16@0:8
r^{tagVCAudioFrameFormat={AudioStreamBasicDescription=dIIIIIIII}I}16@0:8
v24@0:8r^{tagVCAudioFrameFormat={AudioStreamBasicDescription=dIIIIIIII}I}16
B40@0:8d16@24^@32
^{opaqueVCAudioBufferList=}16@0:8
^{PacketThread_s=}16@0:8
{tagVCAudioRelayIOContext="clientFormat"^{tagVCAudioFrameFormat}"relayFormat"^{tagVCAudioFrameFormat}"callback"^?"callbackContext"^v"sampleBuffer"^{opaqueVCAudioBufferList}"powerRMS"f"timeInfo"{tagVCAudioClientControllerTimeInfo="clientSampleRate"I"controllerSampleRate"I"didHostTimeReferenceChange"B"isLastHostTimeValid"B"lastHostTime"d"lastClientTimestamp"I"timestampOffset"I"controllerTimestamp"Q}}
@24@0:8@?16
@40@0:8@?16I24I28@32
v24@0:8^B16
v48@0:8@16@24@32^v40
@"CADisplayLink"
@"NSRunLoop"
@52@0:8q16i24@28@36@44
B24@0:8^{__CFDictionary=}16
r^{__CFAllocator=}16@0:8
^{opaqueVCRemoteImageQueue=}
r^{__CFAllocator=}
v32@0:8^v16@24
@40@0:8I16I20B24B28q32
@48@0:8@16I24I28B32B36q40
@"NSMutableString"
d24@0:8d16
I24@0:8d16
@36@0:8I16@20q28
v36@0:8@"AVCScreenCapture"16B24@"NSError"28
v24@0:8@"AVCScreenCapture"16
@36@0:8Q16Q24I32
{?="ntpTime"b1"abSwitches"b1"screenRes"b1}
@56@0:8^{tagVCVideoReceiverConfig=I[9{tagVCVideoReceiverStreamConfig={tagVCVideoReceiverStreamIDInfo=SSSI[9S][9S]}^{tagHANDLE}^{__CFDictionary}BSCBB^{tagVCCryptor}^v^viBBBi}]iiqiiiIiiiiiiBBBBd^v^?^?^?^?^?^?^?QBSB^{tagWRMMetricsInfo}IBBBBBBBBBBBBB^vBBIBBS^{tagVCJBTargetEstimatorSynchronizer}^{__CFString}^{__CFString}IBBBiBB{tagVCNACKGeneratorStoreBagsConfig=CffB[4f][4f]}B}16@24^{opaqueRTCReporting=}32@40^{tagHANDLE=i}48
v24@0:8r*16
v52@0:8^{__CVBuffer=}16{?=qiIq}24C48
v24@0:8S16i20
v36@0:8^S16i24B28B32
{tagVCVideoReceiverConfig=I[9{tagVCVideoReceiverStreamConfig={tagVCVideoReceiverStreamIDInfo=SSSI[9S][9S]}^{tagHANDLE}^{__CFDictionary}BSCBB^{tagVCCryptor}^v^viBBBi}]iiqiiiIiiiiiiBBBBd^v^?^?^?^?^?^?^?QBSB^{tagWRMMetricsInfo}IBBBBBBBBBBBBB^vBBIBBS^{tagVCJBTargetEstimatorSynchronizer}^{__CFString}^{__CFString}IBBBiBB{tagVCNACKGeneratorStoreBagsConfig=CffB[4f][4f]}B}16@0:8
v1336@0:8{tagVCVideoReceiverConfig=I[9{tagVCVideoReceiverStreamConfig={tagVCVideoReceiverStreamIDInfo=SSSI[9S][9S]}^{tagHANDLE}^{__CFDictionary}BSCBB^{tagVCCryptor}^v^viBBBi}]iiqiiiIiiiiiiBBBBd^v^?^?^?^?^?^?^?QBSB^{tagWRMMetricsInfo}IBBBBBBBBBBBBB^vBBIBBS^{tagVCJBTargetEstimatorSynchronizer}^{__CFString}^{__CFString}IBBBiBB{tagVCNACKGeneratorStoreBagsConfig=CffB[4f][4f]}B}16
{tagVCVideoReceiverConfig="streamCount"I"streamConfigs"[9{tagVCVideoReceiverStreamConfig="streamInfo"{tagVCVideoReceiverStreamIDInfo="streamID"S"repairStreamID"S"baseStreamID"S"subStreamCount"I"subStreamIDs"[9S]"subStreamRepairIDs"[9S]}"rtpHandle"^{tagHANDLE}"featureListStrings"^{__CFDictionary}"onDemandIDR"B"framerate"S"tileIndex"C"isOneToOne"B"isTemporalScalingEnabled"B"sframeCryptor"^{tagVCCryptor}"mediaControlInfoGenerator"^v"statisticsCollector"^v"mode"i"isLTRPEnabled"B"isRTCPForLossFeedbackEnabled"B"isRTCPForLTRPAckEnabled"B"ltrAckRTCPPacketType"i}]"mode"i"jitterBufferMode"i"streamToken"q"audioTSRate"i"videoTSRate"i"enableVPBLogging"i"dumpID"I"enableControlByte"i"enableBitstreamCapture"i"enableRxDecodeYUVDump"i"enableUEP"i"enableRecvBitstreamDump"i"reportingParentID"i"shouldEnableFaceZoom"B"shouldEnableMLEnhance"B"useDisplayLink"B"enableDeferredAssembly"B"deferredAssemblyOffset"d"callbackContext"^v"remoteFrameCallback"^?"sampleBufferCallback"^?"streamSwitchCallback"^?"keyFrameGenerationCallback"^?"sendLTRAckCallback"^?"ackLTRFrameCallback"^?"modeSwitchCallback"^?"idsParticipantID"Q"triggerSoundAlarmOnRTPReceive"B"decoderNumOfTiles"S"useInternalRTPThreading"B"wrmInfo"^{tagWRMMetricsInfo}"maxDisplayRefreshRate"I"enableJitterBufferInReceiver"B"enableJitterBufferInPlayer"B"enableImmediateDecode"B"isLTRPEnabled"B"isAsyncDecodingEnabled"B"isReceiverSideVCRCFeedbackEnabled"B"isVCRCStatsOnlyVideoBased"B"fecHeaderV1Enabled"B"enableQueueAlarmForDisplay"B"useRTCPForFIR"B"sendRTCP_PSFB_FIR"B"enableJBDynamicModeSwitch"B"useInternalClockForPresentation"B"mediaControlInfoGenerator"^v"isVariableSliceModeEnabled"B"streamSwitchEnabled"B"cvoExtensionID"I"videoJBEnabled"B"enableAVLooseSync"B"targetDisplayAlarmCount"S"jbTargetEstimatorSynchronizer"^{tagVCJBTargetEstimatorSynchronizer}"participantId"^{__CFString}"sessionId"^{__CFString}"streamGroupID"I"isReferenceFrameEnabled"B"isLateFrameRecoveryEnabled"B"enableHighWatermarkQueueDiscard"B"externalPresentationClockType"i"isServerPacketRetransmissionEnabled"B"isRTTBasedFIRThrottlingEnabled"B"nackGeneratorStoreBagsConfig"{tagVCNACKGeneratorStoreBagsConfig="nackGeneratorStorebagConfigVersion"C"nackSeqNumAgingDuration"f"nackThrottlingBitRateLimitingMaxRatio"f"isExtraDelayForPacketRetransmissionsEnabled"B"nackThrottlingFactorBuckets"[4f]"nackThrottlingPlrBuckets"[4f]}"forceZeroRegionOfInterestOrigin"B}
@"VCVideoStreamRateAdaptationFeedbackOnly"
@"VCDisplayLink"
v24@0:8@"VCStreamInput"16
B40@0:8@16^@24^@32
v40@0:8*16@24@?32
v44@0:8*16@24i32@?36
v24@0:8B16C20
v24@0:8@"NSDictionary"16
v24@0:8@"NSArray"16
v32@0:8^?16^v24
r*20@0:8C16
i48@0:8^?16^?24^v32@?40
{?=BBi}48@0:8{?=CBBBBBBBiBB}16B32I36i40C44
i24@0:8^{?=iiQ[128c]QQ}16
i24@0:8i16B20
v24@0:8^{?=iiQ[128c]QQ}16
v32@0:8^q16^q24
v44@0:8^{tagVCSourceDestinationInfo=i(?={?={tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{?=BS}}{?=ii{tagIPPORT=i[16c](?=I[16C])S}i}{?=I{?=cSCSC}B}{?=@})I^{tagVCSourceDestinationInfo}^v}16i24B28B32i36B40
v40@0:8@16@24B32B36
v32@0:8{?=CBBBBBBBiBB}16
v32@0:8^{?=dBdd}16@24
B36@0:8@16i24d28
B32@0:8@16B24i28
^{tagVCSourceDestinationInfo=i(?={?={tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{?=BS}}{?=ii{tagIPPORT=i[16c](?=I[16C])S}i}{?=I{?=cSCSC}B}{?=@})I^{tagVCSourceDestinationInfo}^v}24@0:8r^{tagVCCMSourceDestinationInfoConfig=BBB}16
v28@0:8d16B24
v28@0:8S16d20
v36@0:8^{tagVCSourceDestinationInfo=i(?={?={tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{?=BS}}{?=ii{tagIPPORT=i[16c](?=I[16C])S}i}{?=I{?=cSCSC}B}{?=@})I^{tagVCSourceDestinationInfo}^v}16i24B28B32
v24@0:8^{?=dddddBi}16
B24@0:8^{?=dddddBi}16
v24@0:8S16B20
@"VCWifiAssistManager"
{?="lastReceivedPacketTime"d"lastReceivedPacketOnPrimaryTime"d"lastReportTime"d"maxPrimaryNoPacketInterval"d"noPacketInterval"d"isConnectionPaused"B"type"i}
@"VCWRMHandler"
@"VCDuplicationHandler"
@"VCConnectionSelector"
@"VCStatsRecorder"
@"VCLinkProbingHandler"
^{tagVCNWConnectionMonitor=}
@"VCCoreMotionManager"
{?="version"C"direction"C"interfaceType"C"timestamp"Q"maxThroughputBps"Q"totalByteCount"Q"flushableQueueSize"I"nonFlushableQueueSize"I"averageDelayMillisecond"I"averageThroughputBps"Q"rateTrendSuggestion"i"packetLossPerFrame"I""(?="wifi"{?="frequencyBand"C"intermittentState"C"estimatedIntermittentPeriod"S"singleOutagePeriod"S"btCoex"C"radioCoex"C"qualityScoreDelayRx"C"qualityScoreDelayTx"C"qualityScoreLossRx"C"qualityScoreLossTx"C"qualityScoreChannel"C"offChannelTimeRatio"f"detectedFrequentOffChannelActivity"B"wlanDutyCycle"S"wifiObservedTxBitrate"[6I]}"baseband"{?="radioAccessTechnology"C"referenceSignalLevel"s"signalLevel"s"signalQuality"c"uplinkBLER"C"downlinkBLER"C"bandwidthLimitationIndication"C"cdrxState"C"cdrxCycle"S"estimatedOutagePeriod"S"outageState"C})}
{?="applicationType"i"linkTypeSuggestion"i"linkTypeChangeReasonCode"Q"linkTypeChangeReasonString"[128c]"linkBandwidthMin"Q"linkBandwidthMax"Q}
v32@0:8^I16^I24
v24@0:8^{?=Q}16
v19@0:8{?=BBB}16
v52@0:8{?=IIIIIIIII}16
v24@0:8r^{?=iiiI}16
v28@0:8i16Q20
v24@0:8r^{?=QQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ}16
^{tagWRMMetricsInfo=B^{tagHANDLE}IIIIIIIIIIIIQQQi^?{?=^v^?^?}{_opaque_pthread_mutex_t=q[56c]}IIIIIIIIIQIIIIII}16@0:8
^{?=^v^?^?}16@0:8
@"<VCNetworkFeedbackControllerDelegate>"
@"VCWCMClient"
@"VCConnectionManager"
@"VCRecommendedNetworkSettings"
^{tagWRMMetricsInfo=B^{tagHANDLE}IIIIIIIIIIIIQQQi^?{?=^v^?^?}{_opaque_pthread_mutex_t=q[56c]}IIIIIIIIIQIIIIII}
^{?=^v^?^?}
{VCAudioClientSettings="isValid"B"enableAudioPreWarming"B"operatingMode"i"deviceRole"i}
@"VCAudioManager"
v90@0:8@16{?=S[32{?=CC}]}24
v28@0:8@"<VCRedundancyControllerProtocol>"16I24
v32@0:8@"<VCRedundancyControllerProtocol>"16d24
v90@0:8@"<VCRedundancyControllerProtocol>"16{?=S[32{?=CC}]}24
B32@0:8@16i24i28
v40@0:8@16I24@28I36
v32@0:8^{tagRTCPPACKET={tagRTCPCOMMON=b5b1b2b8S}(?={tagSR_RTCP=IIIIII[1{tagRTCP_RRB=Ib8b24IIII}]}{tagRR_RTCP=I[1{tagRTCP_RRB=Ib8b24IIII}]}{tagSDES_RTCP=I{tagRTCPSDES=CC[258c]}}{tagBYE_RTCP=I}{tagRTCP_APP=II}{tagRTCP_APP_LTRP={tagRTCP_APP=II}I}{tagFIR_RTCP=I[10S]}{tagNACK_RTCP=ISS}{tagRTCP_PSFB_PLI={tagRTCP_FBCOMMON=II}}{tagRTCP_PSFB_SLI={tagRTCP_FBCOMMON=II}I}{tagRTCP_PSFB_FIR={tagRTCP_FBCOMMON=II}IC[3C]}{tagRTCP_PSFB_TST={tagRTCP_FBCOMMON=II}II}{tagRTCP_PSFB_TST={tagRTCP_FBCOMMON=II}II}{tagRTCP_PSFB_ALFB_HEADER={tagRTCP_FBCOMMON=II}I}{tagRTCP_PSFB_LOSSFB={tagRTCP_PSFB_ALFB_HEADER={tagRTCP_FBCOMMON=II}I}{tagRTCP_CUSTOM_PSFB_LOSS_FB_INFO=ISCC}}{tagRTCP_PSFB_LTRACK={tagRTCP_PSFB_ALFB_HEADER={tagRTCP_FBCOMMON=II}I}I}{tagRTCP_RTPFB_GNACK={tagRTCP_FBCOMMON=II}SS}{tagRTCP_RTPFB_TMMB={tagRTCP_FBCOMMON=II}II}{tagRTCP_RTPFB_TMMB={tagRTCP_FBCOMMON=II}II}{tagVCRTCPXR=I[0I]}{tagRTCP_CUSTOM_SR={tagRTCP_APP=II}I{tagRTCP_CUSTOM_SENDER_INFO=IIIIb4b4}[1{tagRTCP_CUSTOM_RECEPTION_REPORT=Ib4b12SSCC}]}{tagRTCP_CUSTOM_RR={tagRTCP_APP=II}I{tagRTCP_CUSTOM_RECEIVER_INFO=b4b4}[1{tagRTCP_CUSTOM_RECEPTION_REPORT=Ib4b12SSCC}]}{tagRTCP_CUSTOM_RCTL={tagRTCP_APP=II}{tagRTCP_CUSTOM_RATE_CONTROL_INFO=[20C]}})}16(tagNTP=Q{?=II})24
^{opaqueVCVoiceDetector=}
^{tagVCAudioDucker=}
@44@0:8^{__CVBuffer=}16i24@28C36B40
{CGSize=dd}24@0:8q16
{CGSize=dd}32@0:8{CGSize=dd}16
q24@0:8i16i20
v40@0:8^{__CVBuffer=}16Q24Q32
{CGRect={CGPoint=dd}{CGSize=dd}}80@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGSize=dd}48{CGSize=dd}64
i40@0:8^^{__CVPixelBufferPool}16d24d32
q48@0:8{CGSize=dd}16{CGSize=dd}32
^{__CFString=}20@0:8i16
{CGSize=dd}56@0:8{CGSize=dd}16{CGSize=dd}32i48i52
v32@0:8@16^{__CVBuffer=}24
{CGSize=dd}24@0:8Q16
{tagVCStatisticsMessage=iidBBBB(?={?=IIIIIIddddd[64c]i}{?=IIIIIIIIIIIIddIIdIB{?=iIIIdddII}{?=SBBI}}{?=dddIIIIIQI}{?=IBBBIIdIB{?=iIIIdddII}}{?=CIIIIIIIIIddddIIII}{?=IIId}{?=iIIIdddII}{?=IIII}{?=IIIIIIBI}{?=IIIIfBBddIIIQ}{?=CCCQQQIIIQiI(?={?=CCSSCCCCCCCfBS[6I]}{?=CsscCCCCSSC})}{tagVCStatisticsVideoLossFeedback=ISCC})}24@0:8^{?=iSd(?={?=SCSCcIIII}{?=SSS[6{?=CS[500S]}]}{?=SS})}16
v24@0:8^{?=iSd(?={?=SCSCcIIII}{?=SSS[6{?=CS[500S]}]}{?=SS})}16
{?="type"i"version"S"arrivalTime"d"notes"(?="report"{?="radioTechnology"S"transmissionAntenna"C"numberOfFlows"S"flowType"C"transmissionPower"c"queueDepth1"I"queueDepth2"I"basebandTransmissionBytes"I"lastTransmissionTimestamp"I}"dropAck"{?="transactionID"S"totalNumDropped"S"numberOfPayloadTypes"S"PTSpecific"[6{?="payloadType"C"numberOfPacketDropped"S"awDroppedSN"[500S]}]}"codecRateChange"{?="currentBitrate"S"suggestedBitrate"S})}
{?="time"[15d]"bdcd"[15d]"delay"[15d]"frontIndex"i"rearIndex"i"size"I}
{?="time"[15d]"transmittedBytes"[15I]"nonFlushableQueueDepth"[15I]"frontIndex"i"rearIndex"i"size"I}
B40@0:8^{?=iSd(?={?=SCSCcIIII}{?=SSS[6{?=CS[500S]}]}{?=SS})}16d24^@32
v36@0:8C16S20S24^S28
@"VCBasebandMetrics"
C20@0:8I16
q32@0:8@16@24
@56@0:8@16C24q28I36I40I44I48I52
@84@0:8@16C24q28I36I40I44I48I52B56I60I64B68B72I76I80
@44@0:8@16C24q28I36I40
@"<VCSessionDownlinkBandwidthAllocatorClient>"
@"<VCSessionUplinkBandwidthAllocatorClient>"
Q32@0:8@16@24
Q56@0:8@16q24Q32q40Q48
B40@0:8Q16q24q32
@28@0:8I16^Q20
v40@0:8@16@"NSData"24@"NSString"32
v56@0:8q16q24q32@40@48
v28@0:8f16q20
v28@0:8r^v16i24
v48@0:8@16@24B32f36q40
@40@0:8@16I24C28^i32
B28@0:8I16^@20
{tagIPPORT="iFlags"i"szIfName"[16c]"IP"(?="dwIPv4"I"abIPv6"[16C])"wPort"S}
@"NSMutableData"
@"TCPBufferPool"
*20@0:8i16
v24@0:8*16
^{tagBufferNode=*ii^{tagBufferNode}}
@36@0:8i16I20B24@28
B32@0:8^{tagVCSourceDestinationInfo=i(?={?={tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{?=BS}}{?=ii{tagIPPORT=i[16c](?=I[16C])S}i}{?=I{?=cSCSC}B}{?=@})I^{tagVCSourceDestinationInfo}^v}16@24
B24@0:8^i16
v32@0:8@16i24i28
v24@0:8i16I20
@36@0:8Q16i24^i28
v28@0:8i16@20
v28@0:8d16i24
v40@0:8i16i20@24@32
v24@0:8^{tagWRMMetricsInfo=B^{tagHANDLE}IIIIIIIIIIIIQQQi^?{?=^v^?^?}{_opaque_pthread_mutex_t=q[56c]}IIIIIIIIIQIIIIII}16
B68@0:8@16I24@28B36@40i48@52^@60
@28@0:8B16B20I24
@32@0:8@16I24B28
@56@0:8@16^I24@32d40^@48
B32@0:8B16B20^@24
B28@0:8B16^@20
B64@0:8^{opaqueVCAudioBufferList=}16^I24^d32*40*48^i56
^{opaqueRTCReporting=}16@0:8
v52@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16I48
^{tagVCAudioReceiver={tagVCAudioReceiverConfig=I[4{tagVCAudioReceiverStream=^{tagHANDLE}SBB^{tagVCCryptor}iB^{tagVCAudioReceiver}^v^v}]^vIiIiiB^{opaqueRTCReporting}iB^{__CFString}^{__CFString}SBBBBBiB^v^?^?^?^{tagVCJBTargetEstimatorSynchronizer}^v^vIBIiBBQB}^v^{opaqueVCJitterBuffer}B{tagVCAudioFrameFormat={AudioStreamBasicDescription=dIIIIIIII}I}d{?=qiIq}^{tagVCRealTimeThread}{tagVCAudioReceiverReportingTask=^{opaqueRTCReporting}i^{tagHANDLE}}BB{_opaque_pthread_mutex_t=q[56c]}{_opaque_pthread_mutex_t=q[56c]}{tagVCAudioDecoderList=^{tagDecoderSettings}I}I{tagVCAudioReceiverStatistics=AIIIIf}^{tagWRMMetricsInfo}^?{tagVCAudioReceiverCallbackContext=^v^?^?}^?{tagVCAudioReceiverCallbackContext=^v^?^?}I[2{_RTCPPacketList=(tagNTP=Q{?=II})C[10^{tagRTCPPACKET}]^{OpaqueCMBlockBuffer}*QI[1472C][12S]CBQ{?=^{_RTCPPacketList}}}]dI[300{tagPacketHistoryInfo=ISIBB}]SS{_opaque_pthread_mutex_t=q[56c]}^{tagVCAudioReceiverStream}SSdBSS{_VCAudioCodecModeChangeEvent=iiiI{EVSRFParams=II}}BSSSIBBQB^v^?^?^?^{tagVCJBTargetEstimatorSynchronizer}{tagVCJitterBufferWRMReportingMetrics=IIIIQQII}^vBdiddId^{tagVCAudioIssueDetector}iiIi^{tagVCAudioDump}{tagVCAudioDumpPayloadInfo=BiBB^{AudioStreamBasicDescription}}}16@0:8
@"NSObject<VCCallSessionDelegate>"
@"VCCallInfo"
@"VCMediaNegotiator"
@"VCSwitchManager"
@"VCVideoRule"
@"VCImageAttributeRules"
@"AVCRateController"
@"GKRingBuffer"
@"NSObject<VideoConferenceChannelQualityDelegate>"
@"VCCallLinkCongestionDetector"
@"VCSessionMessaging"
@"VCControlChannel"
@"VCControlChannelMultiWay"
@"VCBitrateArbiter"
^{tagVCAudioReceiver={tagVCAudioReceiverConfig=I[4{tagVCAudioReceiverStream=^{tagHANDLE}SBB^{tagVCCryptor}iB^{tagVCAudioReceiver}^v^v}]^vIiIiiB^{opaqueRTCReporting}iB^{__CFString}^{__CFString}SBBBBBiB^v^?^?^?^{tagVCJBTargetEstimatorSynchronizer}^v^vIBIiBBQB}^v^{opaqueVCJitterBuffer}B{tagVCAudioFrameFormat={AudioStreamBasicDescription=dIIIIIIII}I}d{?=qiIq}^{tagVCRealTimeThread}{tagVCAudioReceiverReportingTask=^{opaqueRTCReporting}i^{tagHANDLE}}BB{_opaque_pthread_mutex_t=q[56c]}{_opaque_pthread_mutex_t=q[56c]}{tagVCAudioDecoderList=^{tagDecoderSettings}I}I{tagVCAudioReceiverStatistics=AIIIIf}^{tagWRMMetricsInfo}^?{tagVCAudioReceiverCallbackContext=^v^?^?}^?{tagVCAudioReceiverCallbackContext=^v^?^?}I[2{_RTCPPacketList=(tagNTP=Q{?=II})C[10^{tagRTCPPACKET}]^{OpaqueCMBlockBuffer}*QI[1472C][12S]CBQ{?=^{_RTCPPacketList}}}]dI[300{tagPacketHistoryInfo=ISIBB}]SS{_opaque_pthread_mutex_t=q[56c]}^{tagVCAudioReceiverStream}SSdBSS{_VCAudioCodecModeChangeEvent=iiiI{EVSRFParams=II}}BSSSIBBQB^v^?^?^?^{tagVCJBTargetEstimatorSynchronizer}{tagVCJitterBufferWRMReportingMetrics=IIIIQQII}^vBdiddId^{tagVCAudioIssueDetector}iiIi^{tagVCAudioDump}{tagVCAudioDumpPayloadInfo=BiBB^{AudioStreamBasicDescription}}}
@"VCCaptionsReceiver"
@"VCRedundancyControllerVideo"
^{SKEStateOpaque=}
^{__CFData=}
@"VCSecureDataChannel"
@"VCTransportSession"
v36@0:8@"VCSecureDataChannel"16I24@"NSData"28
v24@0:8@"VCCaptionsTranscription"16
i56@0:8i16I20r*24*32^v40^i48
i32@0:8@16^I24
B40@0:8I16@20i28^@32
i32@0:8r^^{__CFData}16^i24
^{__SecIdentity=}16@0:8
q36@0:8B16q20@28
v48@0:8*16*24^v32^i40
B124@0:8^i16i24^i28i36^i40i48@52i60i64^^{imageTag}68^i76^^{imageTag}84^i92*100^i108^@116
i60@0:8I16r*20*28^v36^i44^@52
v48@0:8^^i16^i24^^i32^i40
v32@0:8^^i16^i24
@24@0:8^@16
i28@0:8^v16B24
B36@0:8i16@20B28B32
B36@0:8@16i24B28B32
i28@0:8^^i16i24
@28@0:8^i16i24
B28@0:8^@16B24
B60@0:8i16i20i24^i28^i36^i44^i52
v28@0:8i16r*20
v32@0:8q16d24
v32@0:8i16I20@24
i24@0:8B16B20
v24@0:8^{__SecIdentity=}16
@32@0:8i16@20B28
B40@0:8*16@24@32
r*20@0:8i16
v28@0:8B16i20B24
B32@0:8B16@20B28
i32@0:8^{tagHANDLE=i}16@24
i36@0:8^{tagHANDLE=i}16@24B32
v44@0:8@16@24I32@36
v32@0:8@"VCTransportSessionLegacy"16@"NSData"24
v32@0:8@"VCTransportSessionLegacy"16@"NSDictionary"24
i28@0:8@16i24
v32@0:8@"AVCRateController"16I24I28
i28@0:8@"NSString"16i24
v31@0:8^v16{VCRateControlMediaSuggestion=BBBBBBB}24
@32@0:8d16d24
v32@0:8*16*24
v28@0:8@"VCAudioPowerLevelMonitor"16B24
v40@0:8@"VCMoments"16@"NSDictionary"24@"NSString"32
I28@0:8i16@20
v68@0:8@16I24@28Q36@?44@52@60
v52@0:8@16I24@?28@36@44
@40@0:8@16^I24^@32
i24@0:8r*16
B36@0:8^B16I24^@28
B32@0:8B16I20^@24
B28@0:8d16I24
B84@0:8@16I24I28@32B40@44B52@56i64@68^@76
B80@0:8@16I24@28B36@40B48@52i60@64^@72
v36@0:8I16@20q28
{CGSize=dd}20@0:8I16
v32@0:8I16@20B28
v24@0:8i16S20
C20@0:8f16
f20@0:8C16
@"VideoConferenceManager"
^{opaqueVCFFTMeter=}
@"VCCallSession"
@"NSObject<VideoConferenceSpeakingDelegate>"
@"VCAudioPowerLevelMonitor"
@"GKNATObserver"
B24@0:8I16I20
I36@0:8I16I20I24*28
v28@0:8^I16I24
v40@0:8@16I24d28i36
v32@0:8C16@20I28
B32@0:8@16^{opaqueVCAudioBufferList=}24
i24@0:8^{opaqueVCAudioBufferList=}16
@24@0:8^{tagVCSourceDestinationInfo=i(?={?={tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{?=BS}}{?=ii{tagIPPORT=i[16c](?=I[16C])S}i}{?=I{?=cSCSC}B}{?=@})I^{tagVCSourceDestinationInfo}^v}16
v32@0:8I16B20@24
v32@0:8@16Q24
v44@0:8@16@24@32I40
v56@0:8@16B24I28@32@40@48
v40@0:8@16q24@32
v40@0:8@16*24*32
B80@0:8@16^{__CVBuffer=}24{?=qiIq}32@56@64B72B76
B56@0:8@16^@24@32@40i48B52
B32@0:8i16@20B28
B36@0:8@16^@24B32
B36@0:8@16B24^@28
v32@0:8B16B20B24B28
v48@0:8@16^{VoiceIOFarEndVersionInfo=[64C][64C]I}24r^{tagVCAudioFrameFormat={AudioStreamBasicDescription=dIIIIIIII}I}32@?40
v36@0:8@16I24d28
{AudioStreamBasicDescription=dIIIIIIII}16@0:8
v36@0:8@16I24i28i32
v56@0:8@"VCCallSession"16B24I28@"NSString"32@"NSString"40@"NSError"48
v40@0:8@"VCCallSession"16q24@"NSError"32
v32@0:8@"VCCallSession"16@"NSError"24
B80@0:8@"VCCallSession"16^{__CVBuffer=}24{?=qiIq}32@"VideoAttributes"56@"VideoAttributes"64B72B76
B36@0:8@"VCCallSession"16B24^@28
v36@0:8@"VCCallSession"16B24@"NSError"28
v32@0:8@"VCCallSession"16@"NSDictionary"24
v32@0:8@"VCCallSession"16d24
v28@0:8@"VCCallSession"16B24
v40@0:8@"VCCallSession"16*24*32
v32@0:8@"VCCallSession"16@"VideoAttributes"24
v36@0:8@"VCCallSession"16I24B28B32
v32@0:8@"VCCallSession"16I24B28
v32@0:8@"VCCallSession"16@"VCVideoRule"24
v36@0:8@"VCCallSession"16@"NSData"24I32
v44@0:8@"VCCallSession"16@"NSString"24@"NSString"32I40
v48@0:8@"VCCallSession"16@"VCVideoRule"24@"VCVideoRule"32@"NSString"40
v40@0:8@"VCCallSession"16@"NSData"24I32I36
v24@0:8@"VCCallSession"16
v32@0:8@"VCCallSession"16B24I28
v40@0:8@"VCCallSession"16B24I28@"NSError"32
v32@0:8@"VCCallSession"16I24I28
B56@0:8@"VCCallSession"16^@24@"VCVideoRule"32@"VCVideoRule"40i48B52
B32@0:8@"VCCallSession"16^@24
B36@0:8@"VCCallSession"16^@24B32
v48@0:8@"VCCallSession"16^{VoiceIOFarEndVersionInfo=[64C][64C]I}24r^{tagVCAudioFrameFormat={AudioStreamBasicDescription=dIIIIIIII}I}32@?<v@?B@"NSError">40
v32@0:8@"VCCallSession"16@?<v@?B@"NSError">24
v36@0:8@"VCCallSession"16I24d28
v36@0:8@"VCCallSession"16I24i28i32
B68@0:8^{opaqueCMSampleBuffer=}16{?=qiIq}24{?=BBiBBiC}48
@?<B@?^{opaqueCMSampleBuffer=}{?=qiIq}^{?=BBiBBiC}>16@0:8
@"VCVideoRule"16@0:8
v28@0:8^v16B24
@"VCRateControlMediaController"16@0:8
v24@0:8@"VCRateControlMediaController"16
d28@0:8I16I20I24
S24@0:8d16
d20@0:8i16
{?="time"[100d]"owrd"[100d]"frontIndex"i"rearIndex"i"size"I"nowrd"d"nowrdShort"d"nowrdAcc"d"isOWRDListTooShortDuringInitialRampUp"B}
[64{?="time"d"packetLossRate"d"packetLossRateVideo"d"isLossIncreasing"B}]
{?="confidence"b1"hasSpaceAfter"b1}
v40@0:8@16@24^{tagIPPORT=i[16c](?=I[16C])S}32
v40@0:8@"LoopbackSocketTunnel"16@"NSData"24^{tagIPPORT=i[16c](?=I[16C])S}32
v32@0:8C16B20B24B28
v40@0:8@"<VCConnectionProtocol>"16@"<VCConnectionProtocol>"24@"<VCConnectionProtocol>"32
v28@0:8@"<VCConnectionProtocol>"16B24
v28@0:8B16@"<VCConnectionProtocol>"20
v24@0:8@"NSNumber"16
B40@0:8@16B24B28^@32
v28@0:8f16I20B24
v24@0:8I16B20
v28@0:8B16I20i24
v32@0:8*16i24S28
v44@0:8^{tagCONNRESULT=IiiIiiSS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}IiiiiSiii^{tagCONNRESULT}i}16B24B28@32i40
B48@0:8@16@24B32C36^@40
@28@0:8I16^{tagCONNRESULT=IiiIiiSS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}IiiiiSiii^{tagCONNRESULT}i}20
v48@0:8B16B20d24@32@?40
@32@0:8*16i24B28
@40@0:8B16B20d24^@32
i44@0:8^*16I24^i28d36
{tagIPPORT=i[16c](?=I[16C])S}20@0:8B16
I24@0:8^{tagCONNRESULT=IiiIiiSS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}IiiiiSiii^{tagCONNRESULT}i}16
@"VCTransport"
^{__SecIdentity=}
@"TCPTunnelClient"
@"NSObject<VideoConferenceRealTimeChannel>"
@"LoopbackSocketTunnel"
@"NSCondition"
@"GKInterfaceListener"
{VoiceIOFarEndVersionInfo=[64C][64C]I}16@0:8
v148@0:8{VoiceIOFarEndVersionInfo=[64C][64C]I}16
^{tagVCAudioFrameFormat={AudioStreamBasicDescription=dIIIIIIII}I}16@0:8
{VoiceIOFarEndVersionInfo="farEndHwModel"[64C]"farEndOSVersion"[64C]"farEndAUVersion"I}
v24@0:8^{tagAudioFrame=iiBSI[800C]ii[16C]Ciidii^?^v^{tagDecoderSettings}BICS^{tagAudioFrame}^{tagAudioFrame}I}16
@24@0:8^{_VCTextReceiverConfiguration=^{tagHANDLE}IB}16
v32@0:8^{tagAudioPacket=iiiBSIiidi[1472C]i[256C]C[4^{tagAudioFrame}]idi^{tagDecoderSettings}BICS}16^{_RTPMediaPacket=iiiSIISBdBBBQ[12S]CC{?=iiBQ}Q{VCBlockBuffer_t=^{OpaqueCMBlockBuffer}Q*}{VCBlockBuffer_t=^{OpaqueCMBlockBuffer}Q*}{VCBlockBuffer_t=^{OpaqueCMBlockBuffer}Q*}BBB}24
i24@0:8^{tagAudioPacket=iiiBSIiidi[1472C]i[256C]C[4^{tagAudioFrame}]idi^{tagDecoderSettings}BICS}16
v24@0:8^{tagVCRealTimeThreadParameters=i}16
v24@0:8^{tagAudioPacketArray=[100^{tagAudioPacket}]II}16
v32@0:8^{tagAudioPacket=iiiBSIiidi[1472C]i[256C]C[4^{tagAudioFrame}]idi^{tagDecoderSettings}BICS}16^{tagAudioPacketArray=[100^{tagAudioPacket}]II}24
^{tagAudioFrame=iiBSI[800C]ii[16C]Ciidii^?^v^{tagDecoderSettings}BICS^{tagAudioFrame}^{tagAudioFrame}I}40@0:8^{tagAudioPacket=iiiBSIiidi[1472C]i[256C]C[4^{tagAudioFrame}]idi^{tagDecoderSettings}BICS}16*24i32I36
B24@0:8^{tagAudioPacket=iiiBSIiidi[1472C]i[256C]C[4^{tagAudioFrame}]idi^{tagDecoderSettings}BICS}16
@"VCTextJitterBuffer"
v40@0:8@16I24B28@32
v36@0:8@16d24I32
v40@0:8@"VideoConference"16B24I28@"NSError"32
v36@0:8@"VideoConference"16I24@"NSError"28
v44@0:8@"VideoConference"16I24@"NSError"28@"NSDictionary"36
v48@0:8@"VideoConference"16B24I28@"NSDictionary"32@"NSError"40
v40@0:8@"VideoConference"16I24B28@"NSError"32
v36@0:8@"VideoConference"16d24I32
v32@0:8@"VideoConference"16B24I28
v28@0:8@"VideoConference"16I24
v36@0:8@"VideoConference"16@"VideoAttributes"24I32
v32@0:8@"VideoConference"16@"NSData"24
v28@0:8@"VideoConference"16f24
v28@0:8@"VideoConference"16B24
v36@0:8@"VideoConference"16I24@"NSDictionary"28
v36@0:8@"VideoConference"16I24B28B32
v32@0:8@"VideoConference"16I24B28
v36@0:8@"VideoConference"16@"NSData"24I32
v32@0:8@"VideoConference"16I24I28
B24@0:8^{tagHANDLE=i}16
@"VideoConference"
@"ICEResultWaitQueue"
B60@0:8@16I24@28@36@44@52
@44@0:8I16@20Q28@36
f24@0:8I16B20
B56@0:8@16I24@28@36B44@48
@"VCMediaNegotiationBlobAudioSettings"
@"VCMediaNegotiationBlobCaptionsSettings"
@"VCMediaNegotiationFaceTimeSettings"
@"VCMediaNegotiationBlobMomentsSettings"
@"VCMediaNegotiationBlobVideoSettings"
{?="ntpTime"b1"accessNetworkType"b1"basebandCodecSampleRate"b1"blobVersion"b1"mediaControlInfoVersion"b1"allowDynamicMaxBitrate"b1"allowsContentsChangeWithAspectPreservation"b1}
@40@0:8i16@20@28I36
B28@0:8B16@20
v32@0:8^{tagBWEOPTION=iiii}16@24
v36@0:8@16i24^{imageTag=iiiiiiifi}28
v32@0:8@16^{imageTag=iiiiiiifi}24
v36@0:8i16@20@28
v40@0:8i16^{imageTag=iiiiiiifi}20i28@32
v44@0:8@16C24i28i32@36
v40@0:8@16@24i32i36
B36@0:8@16i24i28i32
B32@0:8^i16^i24
v24@0:8^{?=i^{tagVCSecurityKeyHolder}^{tagVCSecurityKeyHolder}^{__CFData}^{__CFData}B}16
v36@0:8@"VCSessionParticipant"16B24@"NSError"28
v32@0:8@"VCSessionParticipant"16@"NSError"24
I20@0:8C16
I20@0:8S16
B24@0:8@"NSDictionary"16
v44@0:8@16I24I28B32@36
v36@0:8@16C24@28
v36@0:8@16S24I28i32
v40@0:8@"VCSessionParticipant"16B24B28@"NSError"32
v28@0:8@"VCSessionParticipant"16B24
v44@0:8@"VCSessionParticipant"16I24I28B32@"NSError"36
v32@0:8@"VCSessionParticipant"16I24I28
v36@0:8@"VCSessionParticipant"16C24@"NSString"28
v28@0:8@"VCSessionParticipant"16I24
v36@0:8@"VCSessionParticipant"16S24I28i32
v32@0:8@"VCSessionParticipant"16S24S28
v24@0:8@"VCSessionParticipant"16
v32@0:8@"VCSessionParticipant"16d24
v24@0:8@"VCRecommendedNetworkSettings"16
v24@0:8@"VideoAttributes"16
@56@0:8@16@24@32@40i48B52
v24@0:8^{?=I^{__CFString}^{__CFDate}iB^v@^{__CFString}^{__CFString}^{__CFDictionary}@?}16
*20@0:8I16
v28@0:8S16@20
v24@0:8^{?=IIIIIIIII}16
i28@0:8I16Q20
v32@0:8@16B24B28
v32@0:8d16I24i28
B32@0:8@16^B24
B40@0:8@16(tagNTP=Q{?=II})24^B32
B32@0:8^{?=i^{tagVCSecurityKeyHolder}^{tagVCSecurityKeyHolder}^{__CFData}^{__CFData}B}16@24
v36@0:8S16@20@28
v44@0:8S16@20@28@36
v48@0:8S16@20@28@36S44
v56@0:8^{__CFDictionary=}16S24@28@36@44S52
@24@0:8r^{?=I[5I]Id{CGSize=dd}dIdII}16
v28@0:8I16i20i24
@"<VCSessionDelegate>"
@"VCSessionConfiguration"
@"VCSessionParticipantLocal"
@"VCSessionStatsController"
{_VCSessionOneToOneSettings="rateController"@"AVCRateController""mediaController"@"VCRateControlMediaController""mediaQueue"^{tagHANDLE}"vcMediaQueue"^{tagVCMediaQueue}"receivedFirstConnection"B"startedOneToOne"B}
@"VCSessionDownlinkBandwidthAllocator"
@"NSError"
@"VCSessionPresentationInfo"
@"VCSessionBitrateArbiter"
@32@0:8r^{tagVCAudioFrameFormat={AudioStreamBasicDescription=dIIIIIIII}I}16r^{_VCRemoteCodecInfo=Id}24
v32@0:8^{AudioEventQueue_t=}16@24
@"VCAudioRelayIOControllerSettings"
@24@0:8^{?=i{tagVCAudioFrameFormat={AudioStreamBasicDescription=dIIIIIIII}I}iiIi}16
B24@0:8^{?=i{tagVCAudioFrameFormat={AudioStreamBasicDescription=dIIIIIIII}I}iiIi}16
{AudioStreamBasicDescription="mSampleRate"d"mFormatID"I"mFormatFlags"I"mBytesPerPacket"I"mFramesPerPacket"I"mBytesPerFrame"I"mChannelsPerFrame"I"mBitsPerChannel"I"mReserved"I}
{?="status"b1}
i24@0:8I16i20
@"IDSDataChannelLinkContext"
@72@0:8C16{CGSize=dd}20{CGRect={CGPoint=dd}{CGSize=dd}}36f68
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
B156@0:8{?=IIIIIIddddd[64c]i}16i152
i24@0:8d16
B48@0:8d16d24d32d40
v36@0:8I16I20S24d28
[500{?="owrd"d"roundTripTime"d"roundTripTimeMinEnvelope"d"packetLossRate"d"tierIndex"i}]
@32@0:8i16B20B24I28
@24@0:8^{_VCTextTransmitterConfiguration=^{tagHANDLE}IBIf}16
v52@0:8@16I24^i28^*36^i44
{_VCTextTransmitterConfiguration="rtpHandle"^{tagHANDLE}"sampleRate"I"isRedEnabled"B"numRedundantPayloads"I"txIntervalMin"f}
@"VCAudioRedBuilder"
@"NSLock"
{?="rtpSSRC"b1}
B32@0:8^I16@24
{tagVCNetworkStreamIdentifiers=ISS}28@0:8B16B20B24
B32@0:8q16^I24
@"NSDictionary"24@0:8q16
^{opaqueCMFormatDescription=}20@0:8I16
^{opaqueCMFormatDescription=}16@0:8
B40@0:8@16@24I32I36
v44@0:8@16I24I28I32I36I40
@40@0:8@16q24B32I36
@32@0:8@16i24i28
v32@0:8@16C24I28
B48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
B24@0:8f16B20
@40@0:8@16@24B32I36
v32@0:8@16I24i28
{_VCSessionParticipantLocalOneToOneSettings=@@@@IIB}16@0:8
@"<VCSessionUplinkBandwidthAllocator>"
{_VCSessionParticipantLocalOneToOneSettings="audioRedundancyController"@"VCRedundancyControllerAudio""videoRedundancyController"@"VCRedundancyControllerVideo""streamInfo"@"NSMutableDictionary""switchManager"@"VCSwitchManager""targetBitrate"I"rateChangeCounter"I"endToEndConnectionReceived"B}
I36@0:8@16i24I28B32
@56@0:8@16^?24^?32@40^v48
@56@0:8i16i20^?24^?32@40^v48
i52@0:8^i16i24^{sockaddr_storage=CC[6c]q[112c]}28^I36^B44
i24@0:8^{OpaqueVCTransportStream=}16
i36@0:8i16@20^{sockaddr_storage=CC[6c]q[112c]}28
i48@0:8^i16^i24^{sockaddr_storage=CC[6c]q[112c]}32^I40
i52@0:8I16^i20^i28^{sockaddr_storage=CC[6c]q[112c]}36^I44
i44@0:8i16i20^{sockaddr_storage=CC[6c]q[112c]}24I32^i36
{sockaddr_storage="ss_len"C"ss_family"C"__ss_pad1"[6c]"__ss_align"q"__ss_pad2"[112c]}
@"VCNetworkAddress"
[16c]
@56@0:8q16q24@32@40@48
@64@0:8q16q24q32@40@48@56
@40@0:8q16q24@32
@28@0:8I16C20i24
@56@0:8i16I20C24i28q32q40Q48
v28@0:8B16@"NSError"20
@24@0:8^{_VCAudioIOInitConfiguration=IIiiICB@i@^?^v@^?^vIIBQIqqQ}16
v24@0:8^{_VCAudioIOInitConfiguration=IIiiICB@i@^?^v@^?^vIIBQIqqQ}16
B60@0:8i16i20C24q28q36B44Q48I56
v24@0:8^{VoiceIOFarEndVersionInfo=[64C][64C]I}16
@"<VCAudioIOControllerControl>"
{_VCAudioEndpointData="converter"^{SoundDec_t}"isConverterNeeded"B"isAccumulatorNeeded"B"samplesPerFrame"I"sampleBuffer"^{opaqueVCAudioBufferList}"clientBuffer"^{opaqueVCAudioBufferList}"controllerBuffer"^{opaqueVCAudioBufferList}"isLastHostTimeValid"B"lastHostTime"d"lastTimestamp"I"timestampOffset"I"controllerChanged"B"isMuted"B"framesProcessed"I"delegate"@"<VCAudioIOSink><VCAudioIOSource>""clientCallback"^?"clientContext"^v}
@32@0:8i16B20I24B28
[300{tagVCStatisticsMessage="type"i"priority"i"arrivalTime"d"isVCRCInternal"B"shouldFlushAndProcess"B"shouldDrainAndProcess"B"statisticsUpdateOnly"B""(?="baseband"{?="queueDepth1"I"queueDepth2"I"txBitrate"I"averageBitrate"I"averageBitrateShort"I"averageBitrateLong"I"averageQueueDepth"d"expectedQueuingDelay"d"bdcd"d"normalizedBDCD"d"normalizedDelay"d"bbString"[64c]"radioTechnology"i}"feedback"{?="sendTimestamp"I"queuingDelay"I"remoteBWEstimation"I"remoteBWEStability"I"maxVideoBurstyLoss"I"audioConsecutiveLoss"I"mostBurstyLoss"I"audioReceivedPackets"I"videoReceivedPackets"I"totalSentPackets"I"echoedSendTimestamp"I"mediaTimestamp"I"owrd"d"packetLossRate"d"actualBitrate"I"instantBitrate"I"roundTripTime"d"receiveQueueTarget"I"isPacketReceivedValid"B"packetReceived"{?="packetType"i"packetId"I"sampleRate"I"totalPacketsReceived"I"receiveTimestamp"d"owrd"d"targetJitterQueueSize"d"bandwidthEstimation"I"localBurstyLoss"I}"connectionStats"{?="sequenceNumber"S"isDuplicatePacket"B"isReceivedOnPrimary"B"connectionStatsBuffer"I}}"network"{?="packetLossPercentage"d"packetLossPercentageAudio"d"packetLossPercentageVideo"d"burstPacketLoss"I"roundTripTimeMilliseconds"I"isNetworkCongested"I"owrd"I"targetBitrate"I"statisticsID"Q"videoPacketsReceived"I}"probing"{?="estimatorID"I"deregisterEstimator"B"isProbingSequence"B"isEndOfProbingSequence"B"probingSequenceID"I"messageLength"I"arrivalTime"d"mediaTimestamp"I"isPacketReceivedValid"B"packetReceived"{?="packetType"i"packetId"I"sampleRate"I"totalPacketsReceived"I"receiveTimestamp"d"owrd"d"targetJitterQueueSize"d"bandwidthEstimation"I"localBurstyLoss"I}}"serverStats"{?="linkID"C"sendTimestamp"I"receiveTimestamp"I"totalPacketSent"I"totalPacketReceived"I"totalByteSent"I"totalByteReceived"I"serverStatsByteUsed"I"bandwidthSample"I"bandwidthEstimation"I"roundTripTime"d"owrd"d"packetLossRate"d"packetLossRateShortWindow"d"actualBitrate"I"instantBitrate"I"serverStatsBitrate"I"expectedBitrate"I}"packetSent"{?="packetId"I"totalPacketsSent"I"totalBytesSent"I"sendTimestamp"d}"packetReceived"{?="packetType"i"packetId"I"sampleRate"I"totalPacketsReceived"I"receiveTimestamp"d"owrd"d"targetJitterQueueSize"d"bandwidthEstimation"I"localBurstyLoss"I}"rtcpRR"{?="ssrc"I"packetLossPercentage"I"lastSequenceNumber"I"roundTripTimeMilliseconds"I}"config"{?="mode"I"remoteRadioAccessTechnology"I"localRadioAccessTechnology"I"maxBitrate"I"minBitrate"I"initialBitrate"I"isTrafficBursty"B"featureFlags"I}"mediaEvent"{?="mediaEventType"I"additionalFlushCount"I"transactionID"I"audioStallBitrate"I"audioErasure"f"isKeyFrame"B"isTransitionToFEC"B"videoStallTimeDelta"d"videoStallTimeTotal"d"refreshFrameTimestamp"I"refreshFramePayloadType"I"refreshFramePacketCount"I"idsParticipantID"Q}"nwConnection"{?="version"C"direction"C"interfaceType"C"timestamp"Q"maxThroughputBps"Q"totalByteCount"Q"flushableQueueSize"I"nonFlushableQueueSize"I"averageDelayMillisecond"I"averageThroughputBps"Q"rateTrendSuggestion"i"packetLossPerFrame"I""(?="wifi"{?="frequencyBand"C"intermittentState"C"estimatedIntermittentPeriod"S"singleOutagePeriod"S"btCoex"C"radioCoex"C"qualityScoreDelayRx"C"qualityScoreDelayTx"C"qualityScoreLossRx"C"qualityScoreLossTx"C"qualityScoreChannel"C"offChannelTimeRatio"f"detectedFrequentOffChannelActivity"B"wlanDutyCycle"S"wifiObservedTxBitrate"[6I]}"baseband"{?="radioAccessTechnology"C"referenceSignalLevel"s"signalLevel"s"signalQuality"c"uplinkBLER"C"downlinkBLER"C"bandwidthLimitationIndication"C"cdrxState"C"cdrxCycle"S"estimatedOutagePeriod"S"outageState"C})}"videoLossFeedback"{tagVCStatisticsVideoLossFeedback="frameRTPTimestamp"I"packetsReceived"S"frameSize"C"packetsLost"C})}]
@72@0:8q16{AudioStreamBasicDescription=dIIIIIIII}24d64
@24@0:8d16
@56@0:8@16@24^{opaqueCMFormatDescription=}32@40^@48
i24@0:8^{opaqueCMFormatDescription=}16
B32@0:8^{opaqueCMSampleBuffer=}16^@24
r^{opaqueCMFormatDescription=}16@0:8
[20c]
@60@0:8^{tagHANDLE=i}16^{opaqueRTCReporting=}24@32I40i44@48B56
i32@0:8@16d24
@"VCEmulatedNetworkAlgorithmQueueBandwidth"
@"VCEmulatedNetworkAlgorithmQueueLoss"
@"VCEmulatedNetworkAlgorithmQueueDelay"
@"VCScreenShare"
B24@0:8^{opaqueCMFormatDescription=}16
@"<VCStreamInputDelegate>"
@80@0:8@16I24I28^v32^?40^v48^?56i64B68Q72
^{_VCAudioIOControllerClientIO=^v^?@III^{opaqueVCAudioBufferList}}16@0:8
{_VCAudioIOControllerClientIO="processSamplesContext"^v"processSamples"^?"runLock"@"NSObject<OS_dispatch_semaphore>""audioSessionId"I"channelIndex"I"channelCount"I"controllerAudioBuffer"^{opaqueVCAudioBufferList}}
@28@0:8I16I20I24
B32@0:8^^I16^I24
B28@0:8^I16I24
^I24@0:8^I16
@"AVInternalDeviceList"
I24@0:8^I16
[3I]
I24@0:8I16B20
@48@0:8Q16@24@32@40
{tagAVCPositionalInfo=I{CGSize=dd}ddd}16@0:8
v64@0:8{tagAVCPositionalInfo=I{CGSize=dd}ddd}16
v36@0:8I16I20B24@28
v40@0:8I16I20I24B28@32
v56@0:8I16B20r*24*32@40@?48
v32@0:8B16B20@24
q20@0:8I16
Q20@0:8I16
@"VCXPCClientShared"
@48@0:8q16@24@32^@40
v28@0:8i16^{FigRemoteOperation=iiQ^{__CFString}(?={?=^{__CFDictionary}^{__CFDictionary}}{?=^v^{__IOSurface}^{__IOSurface}}{?=^{opaqueCMSampleBuffer}Q}{?=^{opaqueCMFormatDescription}}{?=q^{opaqueCMFormatDescription}})}20
@"VCWeakObjectHolder"
@44@0:8q16C24@28^@36
@36@0:8@16C24^@28
@32@0:8@16^{opaqueRTCReporting=}24
@64@0:8@16^{opaqueRTCReporting=}24^?32^?40@48^v56
v24@0:8^{OpaqueVCTransportStream=}16
i36@0:8^^{OpaqueVCTransportStream}16I24@28
^AC16@0:8
v24@0:8^AC16
^{tagVCVideoTransmitterStreamConfig=^{tagHANDLE}SiI^{tagVCCryptor}}16@0:8
^{tagVCCryptor=}16@0:8
v24@0:8^{tagVCCryptor=}16
^{tagVCVideoTransmitterStreamConfig=^{tagHANDLE}SiI^{tagVCCryptor}}
^{tagVCCryptor=}
@40@0:8q16@24^@32
@"<AVCQoSMonitorDelegate>"
v32@0:8@"VideoAttributes"16q24
v40@0:8@"NSString"16@"NSString"24q32
@28@0:8q16i24
@32@0:8q16i24B28
@24@0:8I16i20
@"<VCRemoteVideoManagerDelegate>"
B36@0:8q16I24^@28
B32@0:8q16^@24
i28@0:8q16I24
{_VCAudioIOInitConfiguration=IIiiICB@i@^?^v@^?^vIIBQIqqQ}28@0:8I16^v20
@"<VCServerDelegate>"
v28@0:8^{_VCAudioPowerSpectrumEntry={_VCRange=ff}f}16I24
i40@0:8^{_opaque_pthread_cond_t=q[40c]}16d24^B32
{?="senderLanguages"b1"canDisplayCaptions"b1}
B32@0:8@"NSArray"16^@24
@"NSError"20@0:8B16
@"NSDictionary"32@0:8@"NSString"16^@24
@"NSDictionary"32@0:8@"NSObject<OS_xpc_object>"16^@24
@"NSDictionary"40@0:8@"NSDictionary"16@"NSObject<OS_xpc_object>"24^@32
v24@0:8^@16
v24@0:8^i16
v24@0:8^{tagVCNWConnectionMonitor=}16
^{tagHANDLE=i}32@0:8@16i24I28
v24@0:8I16C20
v36@0:8^v16q24I32
v24@0:8^{_RTCPPacketList=(tagNTP=Q{?=II})C[10^{tagRTCPPACKET}]^{OpaqueCMBlockBuffer}*QI[1472C][12S]CBQ{?=^{_RTCPPacketList}}}16
v28@0:8B16@?20
v24@0:8^{_RTCP_SEND_CONTROL_PARAMETERS=Ii*QC^SiSSI^{_RTCP_RECEPTION_REPORT}C^{tagRTCP_CUSTOM_RATE_CONTROL_INFO}^{tagVCRTCPXRSummaryReport}C^{tagVCRTCPXRVoIPMetricsReport}C[12S]CBQB^{tagRTCP_CUSTOM_PSFB_LOSS_FB_INFO}I}16
v48@0:8d16d24d32d40
d56@0:8d16d24d32d40d48
i36@0:8i16^v20^v28
@"<VCMediaStreamDelegate>"
@"<VCMomentsCollectorDelegate>"
{_VCMediaStreamTransportSetupInfo="setupType"C""(?="socketInfo"{?="rtpSocket"i"rtcpSocket"i}"ipInfo"{?="srcIPPORT"{tagIPPORT="iFlags"i"szIfName"[16c]"IP"(?="dwIPv4"I"abIPv6"[16C])"wPort"S}"srcRTPIPPort"{tagIPPORT="iFlags"i"szIfName"[16c]"IP"(?="dwIPv4"I"abIPv6"[16C])"wPort"S}}"transportStreamInfo"{?="context"^v"creationCallback"^?"isReceiveExternallyScheduled"B}"nwConnection"@"NSObject<OS_nw_connection>")"sourceRate"I"datagramChannelToken"I"isSessionIDValid"B}
@"VCMediaKeyIndex"
@"VCCallInfoBlob"
@"VCMediaStreamRateAdaptation"
v23@0:8i16{?=BBB}20
@"NSObject<OS_xpc_object>"
{?="reportImmediateMetricsEnabled"B"reportRtpErasureMetricsEnabled"B"allowPreWarmCellEnabled"B}
@48@0:8@16d24{_NSRange=QQ}32
@36@0:8q16B24I28I32
B48@0:8@16d24{_NSRange=QQ}32
@"NSLocale"
i24@0:8^@16
B36@0:8@16I24@28
[256I]
@"NSObject<VCRedundancyControllerProtocol>"
v48@0:8@16I24@28@36I44
@"<VCRedundancyControllerProtocol>"
{?="landscapeAspectRatioX"b1"landscapeAspectRatioY"b1"mismatchedDisplayAspectRatioX"b1"mismatchedDisplayAspectRatioY"b1"portraitAspectRatioX"b1"portraitAspectRatioY"b1"rtpSSRC"b1}
v32@0:8*16@24
v48@0:8*16@24@?32@40
v48@0:8*16@24@32@?40
v56@0:8*16@24@32@?40@48
v60@0:8*16@24@32@?40@48i56
@24@0:8*16
@32@0:8*16@24
@40@0:8*16@24@32
v32@0:8*16@?24
v40@0:8*16@?24@32
v44@0:8*16@?24@32i40
@44@0:8q16i24@28^i36
{?="cap2G"b1"cap3G"b1"cap5G"b1"capLTE"b1"capWifi"b1}
B36@0:8@16i24i28I32
@28@0:8@16i24
B56@0:8C16i20C24@28@36@44B52
@"VCMediaNegotiatorResultsCaptions"
@32@0:8^?16@24
v24@0:8^{ConnectionStatsHistory=C[5C][2[5C]][2[5C]]}16
v32@0:8^{ConnectionStatsHistory=C[5C][2[5C]][2[5C]]}16i24B28
v28@0:8^{ConnectionStatsHistory=C[5C][2[5C]][2[5C]]}16i24
B24@0:8*16
B28@0:8*16i24
B36@0:8^{ConnectionStatsHistory=C[5C][2[5C]][2[5C]]}16i24^{ConnectionStatsHistory=C[5C][2[5C]][2[5C]]}28
{ConnectionStatsHistory="latestConnectionStatsIndex"C"totalPacketsReceived"[5C]"connectionStats"[2[5C]]"connectionStatsRatio"[2[5C]]}
{ConnectionStats="totalPacketsReceived"C"connectionStats"[2C]"currentIndex"C"startTime"d}
[1024{ConnectionStatsSequenceNumberData="seqNumber"S"receivedTimestamp"d}]
B32@0:8^{_VCMediaStreamConfigurationProviderAudio=II{_VCMediaStreamConfigurationProviderAudioBitrateInfo=iIII}I[4{_VCMediaStreamConfigurationProviderAudioPayload=qi}]I[4I]iBIII[9q]}16q24
v48@0:8^I16^I24^f32I40I44
v56@0:8^I16^I24^f32I40I44^{_VCMediaStreamConfigurationProviderAudio=II{_VCMediaStreamConfigurationProviderAudioBitrateInfo=iIII}I[4{_VCMediaStreamConfigurationProviderAudioPayload=qi}]I[4I]iBIII[9q]}48
B28@0:8^{_VCMediaStreamConfigurationProviderAudio=II{_VCMediaStreamConfigurationProviderAudioBitrateInfo=iIII}I[4{_VCMediaStreamConfigurationProviderAudioPayload=qi}]I[4I]iBIII[9q]}16B24
B24@0:8^{_VCMediaStreamConfigurationProviderVideo=qIIIIIiIBI}16
@40@0:8@16q24@32
i24@0:8^{_VCMediaStreamConfigurationProviderVideo=qIIIIIiIBI}16
B28@0:8^{_VCMediaStreamConfigurationProviderVideo=qIIIIIiIBI}16I24
v32@0:8^^{_VCMediaStreamConfigurationProviderAudio}16^I24
B40@0:8^{_VCMediaStreamConfigurationProviderAudio=II{_VCMediaStreamConfigurationProviderAudioBitrateInfo=iIII}I[4{_VCMediaStreamConfigurationProviderAudioPayload=qi}]I[4I]iBIII[9q]}16I24@28B36
@32@0:8^{_VCMediaStreamConfigurationProviderAudio=II{_VCMediaStreamConfigurationProviderAudioBitrateInfo=iIII}I[4{_VCMediaStreamConfigurationProviderAudioPayload=qi}]I[4I]iBIII[9q]}16@24
@"<VCIDSStreamIDGenerator>"
v40@0:8@16^{__CVBuffer=}24^{__CFDictionary=}32
{VCInfoDetails=Bff{CGSize=dd}^{__CFDictionary}q@{VCOverlayAudioInfo=iiii}{VCOverlayVideoInfo=iiiiii}}16@0:8
v112@0:8{VCInfoDetails=Bff{CGSize=dd}^{__CFDictionary}q@{VCOverlayAudioInfo=iiii}{VCOverlayVideoInfo=iiiiii}}16
^{CGContext=}
{VCInfoDetails="isLocalVideo"B"averageFrameRate"f"currentFrameRate"f"currentDimensions"{CGSize="width"d"height"d}"storedAttributes"^{__CFDictionary}"streamToken"q"streamOutput"@"VCStreamOutput""audioInfo"{VCOverlayAudioInfo="bitrateTotal"i"birateMedia"i"codec"i"streamID"i}"videoInfo"{VCOverlayVideoInfo="fps"i"bitrateTotal"i"birateMedia"i"currentFECLevel"i"codec"i"streamID"i}}
@44@0:8@16i24@28@36
@28@0:8^{tagHANDLE=i}16I24
B64@0:8@16^{_VCMediaStreamTransportSetupInfo=C(?={?=ii}{?={tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}}{?=^v^?B}@)IIB}24B32B36@40@48^@56
^{tagVCCryptor=}36@0:8@16I24^@28
i32@0:8^{tagSRTPExchangeInfo=[65c][29c]^v}16@24
B32@0:8^{_VCMediaStreamTransportSetupInfo=C(?={?=ii}{?={tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}}{?=^v^?B}@)IIB}16^@24
B32@0:8^i16^d24
@"VCMediaStreamConfig"
{?="context"^v"creationCallback"^?"isReceiveExternallyScheduled"B}
@"NSObject<OS_os_transaction>"
^{OpaqueFigCFWeakReferenceHolder=}
v48@0:8*16@24@32@40
v40@0:8*16@24@32
@32@0:8C16d20i28
@28@0:8C16d20
B40@0:8^i16^i24^f32
^{_VCBitrateConfiguration=SSSSS}16@0:8
v40@0:8@16*24@?32
v32@0:8@16*24
B32@0:8^{__CVBuffer=}16q24
@"VCVideoFrameBufferPool"
@32@0:8i16Q20B28
Q20@0:8B16
@52@0:8@16@24I32I36i40B44B48
B44@0:8@16I24I28i32I36B40
@64@0:8{?=i^{__CFArray}^{__CFArray}^{__CFArray}IBBIBBB}16
B64@0:8{?=i^{__CFArray}^{__CFArray}^{__CFArray}IBBIBBB}16
v64@0:8{?=i^{__CFArray}^{__CFArray}^{__CFArray}IBBIBBB}16
@28@0:8Q16i24
@32@0:8Q16Q24
{?=i^{__CFArray}^{__CFArray}^{__CFArray}IBBIBBB}16@0:8
@"VCAudioTier"
@"BitrateLimits"
{?="mode"i"supportedAudioPayloadConfigs"^{__CFArray}"supportedPacketsPerBundle"^{__CFArray}"supportedRedNumPayloads"^{__CFArray}"headerSize"I"usingCellular"B"isUseCaseWatchContinuity"B"defaultMaxCap"I"alwaysOnAudioRedundancyEnabled"B"cellularAllowRedLowBitratesEnabled"B"wifiAllowRedLowBitratesEnabled"B}
^{_VCHardwareConfiguration=q{_VCVideoFormat=III}I^{_VCVideoFormat}I^{_VCVideoFormat}{_VCBitrateConfiguration=SSSSS}}24@0:8i16C20
B56@0:8i16C20C24^{_VCVideoFormat=III}28I36@40^B48
v36@0:8@16C24i28C32
v44@0:8i16i20i24i28i32i36i40
v40@0:8^@16i24^@28i36
v48@0:8d16d24d32I40I44
S20@0:8I16
@"<VCVideoStreamRateControlProtocol>"
@40@0:8^{VCBlockBuffer_t=^{OpaqueCMBlockBuffer}Q*}16^{tagVPKTFLAG=iIIBBBBii{tagVCSourceDestinationInfo=i(?={?={tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{?=BS}}{?=ii{tagIPPORT=i[16c](?=I[16C])S}i}{?=I{?=cSCSC}B}{?=@})I^{tagVCSourceDestinationInfo}^v}CiiiiiBBB{tagVCIDSChannelDataFormat=[12S]CBSCBBQBBBS{?=SSSSS}BBBQBSBBB}{tagPKT_TAG=[4Q]}I[16C]BB}24^^{tagVCIDSChannelDataFormat}32
B24@0:8Q16
v28@0:8I16@?20
v28@0:8I16@?<v@?>20
i24@0:8@"NSNumber"16
@32@0:8I16^{opaqueRTCReporting=}20i28
@24@0:8^{tagVCIDSChannelDataFormat=[12S]CBSCBBQBBBS{?=SSSSS}BBBQBSBBB}16
v32@0:8@16^{tagVCIDSChannelDataFormat=[12S]CBSCBBQBBBS{?=SSSSS}BBBQBSBBB}24
B40@0:8@16@24Q32
B56@0:8@16@24Q32@40@48
B52@0:8@16@24Q32I40@?44
B60@0:8@16@24Q32I40@44@?52
v40@0:8@16@24Q32
B40@0:8Q16@24^{?=i^{tagVCSecurityKeyHolder}^{tagVCSecurityKeyHolder}^{__CFData}^{__CFData}B}32
^{_opaque_pthread_t=q^{__darwin_pthread_handler_rec}[8176c]}
@92@0:8I16@20{CGSize=dd}28{CGSize=dd}44{CGSize=dd}60{CGSize=dd}76
v64@0:8^{CGSize=dd}16^{CGSize=dd}24^{CGSize=dd}32^{CGSize=dd}40{CGSize=dd}48
B40@0:8@16C24i28@32
v48@0:8^v16@24{CGSize=dd}32
@32@0:8C16i20@24
r^{tagVCSpatialAudioMetadataPositionalInfo=fffIII}16@0:8
{tagVCSpatialAudioMetadataPositionalInfo="positionX"f"positionY"f"positionZ"f"prominence"I"isVisible"I"isInCanvas"I}
@24@0:8^{tagVCTextJitterBufferConfiguration=I@}16
^{tagAudioPacket=iiiBSIiidi[1472C]i[256C]C[4^{tagAudioFrame}]idi^{tagDecoderSettings}BICS}16@0:8
v24@0:8^{tagAudioPacket=iiiBSIiidi[1472C]i[256C]C[4^{tagAudioFrame}]idi^{tagDecoderSettings}BICS}16
^{tagAudioFrame=iiBSI[800C]ii[16C]Ciidii^?^v^{tagDecoderSettings}BICS^{tagAudioFrame}^{tagAudioFrame}I}16@0:8
{tagVCTextJitterBufferConfiguration="sampleRate"I"delegate"@"<VCTextFrameReceiver>"}
^{JitterPreloadQueue_t=}
^{JitterQueue_t=}
@40@0:8i16i20^?24^v32
*16@0:8
B36@0:8^v16I24i28I32
{tagAccessUnitHeaderInfo="accessUnitCount"S"accessUnitSize"[3S]}
^{opaqueVCPacketBundlerCdrxBundleInfo=[2{tagVCPacketBundlerPacketInfo=iIIIB}]B{tagVCAudioPacketBundlerCDRXStateParameters=[8{tagVCAudioPacketBundlerCDRXInfo=CS}]C}^{opaqueCMSimpleQueue}}
B40@0:8d16d24d32
@36@0:8B16B20B24I28I32
@44@0:8B16B20B24I28I32@36
@36@0:8@16B24^@28
@44@0:8@16B24@28^@36
@48@0:8@16@24@32^@40
@80@0:8@16@24@32@40@48@56@64^@72
v36@0:8@16C24S28S32
v24@0:8c16C20
@"VCAudioStream"
@"AVCMediaStreamConfig"
@24@0:8^{opaqueRTCReporting=}16
I28@0:8I16@20
v48@0:8@16I24I28@32@40
v40@0:8*16^I24^S32
@24@0:8B16i20
v36@0:8r^v16I24^{?=IQSCc[12S]CS{?=SSSSS}dQBQ[16C]BB}28
B44@0:8r^v16I24^{?=IQSCc[12S]CS{?=SSSSS}dQBQ[16C]BB}28^@36
B24@0:8^{_VCMockIDSDatagramChannelPacket={_VCSingleLinkedListEntry=^{_VCSingleLinkedListEntry}}[1500C]QB{?=IQSCc[12S]CS{?=SSSSS}dQBQ[16C]BB}Q}16
@24@0:8^{_VCMockIDSDatagramChannelPacket={_VCSingleLinkedListEntry=^{_VCSingleLinkedListEntry}}[1500C]QB{?=IQSCc[12S]CS{?=SSSSS}dQBQ[16C]BB}Q}16
B32@0:8*16Q24
v40@0:8@?16Q24@32
v46@0:8r^v16I24{?=cSCSC}28@?38
^{_VCMockIDSDatagramChannelPacket={_VCSingleLinkedListEntry=^{_VCSingleLinkedListEntry}}[1500C]QB{?=IQSCc[12S]CS{?=SSSSS}dQBQ[16C]BB}Q}44@0:8^{_VCMockIDSDatagramChannelPacket={_VCSingleLinkedListEntry=^{_VCSingleLinkedListEntry}}[1500C]QB{?=IQSCc[12S]CS{?=SSSSS}dQBQ[16C]BB}Q}16r^v24I32^{?=IQSCc[12S]CS{?=SSSSS}dQBQ[16C]BB}36
v24@0:8^{_VCMockIDSDatagramChannelPacket={_VCSingleLinkedListEntry=^{_VCSingleLinkedListEntry}}[1500C]QB{?=IQSCc[12S]CS{?=SSSSS}dQBQ[16C]BB}Q}16
v32@0:8^{_VCMockIDSDatagramChannelPacket={_VCSingleLinkedListEntry=^{_VCSingleLinkedListEntry}}[1500C]QB{?=IQSCc[12S]CS{?=SSSSS}dQBQ[16C]BB}Q}16@?24
v152@0:8*16Q24{?=IQSCc[12S]CS{?=SSSSS}dQBQ[16C]BB}32
v32@0:8I16S20i24i28
v32@0:8^{tagRTCPPACKET={tagRTCPCOMMON=b5b1b2b8S}(?={tagSR_RTCP=IIIIII[1{tagRTCP_RRB=Ib8b24IIII}]}{tagRR_RTCP=I[1{tagRTCP_RRB=Ib8b24IIII}]}{tagSDES_RTCP=I{tagRTCPSDES=CC[258c]}}{tagBYE_RTCP=I}{tagRTCP_APP=II}{tagRTCP_APP_LTRP={tagRTCP_APP=II}I}{tagFIR_RTCP=I[10S]}{tagNACK_RTCP=ISS}{tagRTCP_PSFB_PLI={tagRTCP_FBCOMMON=II}}{tagRTCP_PSFB_SLI={tagRTCP_FBCOMMON=II}I}{tagRTCP_PSFB_FIR={tagRTCP_FBCOMMON=II}IC[3C]}{tagRTCP_PSFB_TST={tagRTCP_FBCOMMON=II}II}{tagRTCP_PSFB_TST={tagRTCP_FBCOMMON=II}II}{tagRTCP_PSFB_ALFB_HEADER={tagRTCP_FBCOMMON=II}I}{tagRTCP_PSFB_LOSSFB={tagRTCP_PSFB_ALFB_HEADER={tagRTCP_FBCOMMON=II}I}{tagRTCP_CUSTOM_PSFB_LOSS_FB_INFO=ISCC}}{tagRTCP_PSFB_LTRACK={tagRTCP_PSFB_ALFB_HEADER={tagRTCP_FBCOMMON=II}I}I}{tagRTCP_RTPFB_GNACK={tagRTCP_FBCOMMON=II}SS}{tagRTCP_RTPFB_TMMB={tagRTCP_FBCOMMON=II}II}{tagRTCP_RTPFB_TMMB={tagRTCP_FBCOMMON=II}II}{tagVCRTCPXR=I[0I]}{tagRTCP_CUSTOM_SR={tagRTCP_APP=II}I{tagRTCP_CUSTOM_SENDER_INFO=IIIIb4b4}[1{tagRTCP_CUSTOM_RECEPTION_REPORT=Ib4b12SSCC}]}{tagRTCP_CUSTOM_RR={tagRTCP_APP=II}I{tagRTCP_CUSTOM_RECEIVER_INFO=b4b4}[1{tagRTCP_CUSTOM_RECEPTION_REPORT=Ib4b12SSCC}]}{tagRTCP_CUSTOM_RCTL={tagRTCP_APP=II}{tagRTCP_CUSTOM_RATE_CONTROL_INFO=[20C]}})}16@?24
v36@0:8^{_VCMockIDSDatagramChannelPacket={_VCSingleLinkedListEntry=^{_VCSingleLinkedListEntry}}[1500C]QB{?=IQSCc[12S]CS{?=SSSSS}dQBQ[16C]BB}Q}16@?24B32
v24@0:8^{?=IQSCc[12S]CS{?=SSSSS}dQBQ[16C]BB}16
@"VCMockIDSDataChannelLinkContext"
{_VCSingleLinkedList="head"^{_VCSingleLinkedListEntry}"initialized"B"compare"^?"countEntries"Q}
[2048[1500C]]
[2048S]
[2048{?="options_flags"I"participantID"Q"probeGroupID"S"channelPriority"C"streamIDCount"c"streamIDs"[12S]"generationCounterLSB"C"statsID"S"statsPayload"{?="serverTimestamp"S"serverPacketInterval"S"totalServerPacketReceived"S"totalServerPacketSent"S"uplinkBandwidth"S}"arrivalTime"d"expireTimestamp"Q"encryptedHBH"B"encryptionSequenceNumber"Q"packetUUID"[16C]"retransmittedPacket"B"nonRetransmittablePacket"B}]
{?="options_flags"I"participantID"Q"probeGroupID"S"channelPriority"C"streamIDCount"c"streamIDs"[12S]"generationCounterLSB"C"statsID"S"statsPayload"{?="serverTimestamp"S"serverPacketInterval"S"totalServerPacketReceived"S"totalServerPacketSent"S"uplinkBandwidth"S}"arrivalTime"d"expireTimestamp"Q"encryptedHBH"B"encryptionSequenceNumber"Q"packetUUID"[16C]"retransmittedPacket"B"nonRetransmittablePacket"B}
@"VCMockIDSDatagramChannel"
@44@0:8B16@20s28@32s40
v28@0:8r^v16I24
r*24@0:8@16
v36@0:8B16d20d28
v32@0:8@"NSString"16@"NSError"24
v24@0:8@"NSData"16
v32@0:8@"NSString"16q24
v52@0:8@16B24{CGPoint=dd}28@44
@"NSObject<AVConferencePreviewClientDelegate>"
v24@0:8I16i20
B28@0:8C16C20I24
v32@0:8I16I20^{tagHANDLE=i}24
i40@0:8C16C20I24*28B36
B24@0:8^I16
B32@0:8^i16^B24
B56@0:8^@16^i24^i32^i40^i48
@44@0:8(tagNTP=Q{?=II})16{CGSize=dd}24I40
v24@0:8^{tagStreamGroupPayload=CCCCC(?={?=CC}{?=IC})}16
@36@0:8@16I24I28I32
B36@0:8@16I24I28I32
@"VCSessionMediaNegotiator"
{?=BBi}32@0:8{?=CBBBBBBBiBB}16
v40@0:8{?=CBBBBBBBiBB}16^{?=BBi}32
v28@0:8^{?=BBi}16B24
v44@0:8{?=CBBBBBBBiBB}16^{?=BBi}32B40
{?="isAlertEnabled"B"connectionWiFiCount"C"connectionCellCount"C"isDuplicationDisabledDueToAlert"B}
@44@0:8I16I20B24@28^@36
i36@0:8@16B24^@28
i32@0:8@16I24B28
i36@0:8@16^@24B32
^{_tls_record_s=}
@72@0:8@16@24@32@40^{opaqueRTCReporting=}48I56S60^{tagVCMediaQueue=}64
v40@0:8{?=dCSSSSSS}16
v60@0:8{?=dCSIII}16d40B48B52B56
v24@0:8^{?=Cd[1472C]ii{tagVCIDSChannelDataFormat=[12S]CBSCBBQBBBS{?=SSSSS}BBBQBSBBB}}16
@"<VCSessionStatsControllerDelegate>"
{?="responseTime"d"linkID"C"statsIdentifier"S"remoteTimestamp"S"serverPacketInterval"S"uplinkBandwidthSample"S"totalRemoteMediaPacketSent"S"totalRemoteMediaPacketReceived"S}
@"VCTransportStreamGFT"
B36@0:8r^v16I24^@28
@?<v@?^vIB@"NSError">16@0:8
v24@0:8@?<v@?^vIB@"NSError">16
@"AVCPacketFilter"16@0:8
v24@0:8@"AVCPacketFilter"16
@36@0:8S16@20@28
{sockaddr="sa_len"C"sa_family"C"sa_data"[14c]}
@"AVCPacketFilter"
@20@0:8S16
@"IDSService"
@28@0:8S16@20
@28@0:8r^v16i24
v28@0:8Q16B24
@"AVCPacketRelayDriver"
@"<AVCPacketRelayDelegate>"
@"<AVCPacketRelayConnectionProtocol>"
{_AVCPacketRelayHealthStats="demuxPacketStats"{_AVCPacketRelayDemuxPacketHealthStats="rtpAndRTCPPacketCount"I"rtpPacketCount"I"rtcpPacketCount"I"droppedPacketCount"I}"sendPacketCount"I"sendByteCount"I"receivePacketCount"I"receiveByteCount"I"lastSendTimePrint"d"lastReceiveTimePrint"d}
B32@0:8^@16@24
@32@0:8q16^@24
v32@0:8@16^@24
I40@0:8@16^I24i32B36
@"AVCMediaStreamNegotiatorSettings"
{tagVCMediaStreamSyncTime="ntpTime"d"sampleRate"q"rtpTimestampOfNTP"I}
@"VCTextStream"
@"VCCCMessageAcknowledgment"
@"VCCCMessage"
{?="content"b1}
[30d]
@"SuddenChangeParameters"
@"VCRateControlBandwidthEstimator"
{?="cipherSuite"b1"codecType"b1"encoderUsage"b1"mediaFlags"b1"pTime"b1"profileLevelId"b1"rtcpFlags"b1"rtpPayload"b1"rtpSampleRate"b1}
@36@0:8@16@24i32
@28@0:8C16@20
v24@0:8r^{_VCAudioPowerSpectrumEntry={_VCRange=ff}f}16
{?="payloads"b1"rtpSSRC"b1}
{tagVCVideoTransmitterRealtimeSPI="setFECRatio"^?"enqueueVideoFrame"^?}
{tagCONNRESULT="dwCallID"I"iResultCount"i"iRole"i"dwRemoteCallID"I"proto"i"bIfRelay"i"wRelayServType"S"wChannelNumber"S"mbLocal"{tagIPPORT="iFlags"i"szIfName"[16c]"IP"(?="dwIPv4"I"abIPv6"[16C])"wPort"S}"mbRemote"{tagIPPORT="iFlags"i"szIfName"[16c]"IP"(?="dwIPv4"I"abIPv6"[16C])"wPort"S}"mbSrc"{tagIPPORT="iFlags"i"szIfName"[16c]"IP"(?="dwIPv4"I"abIPv6"[16C])"wPort"S}"mbDst"{tagIPPORT="iFlags"i"szIfName"[16c]"IP"(?="dwIPv4"I"abIPv6"[16C])"wPort"S}"mbRemoteSrc"{tagIPPORT="iFlags"i"szIfName"[16c]"IP"(?="dwIPv4"I"abIPv6"[16C])"wPort"S}"mbRelayExt"{tagIPPORT="iFlags"i"szIfName"[16c]"IP"(?="dwIPv4"I"abIPv6"[16C])"wPort"S}"dwRTT"I"bIfLocalCellularQoS"i"bIfRemoteCellularQoS"i"iLocalCellTech"i"iRemoteCellTech"i"wCellularMTU"S"bIfUpgrade"i"bIfPrimary"i"bIfReplaceOnly"i"next"^{tagCONNRESULT}"channelID"i}
@56@0:8^{__CVBuffer=}16^{__CVBuffer=}24{?=qiIq}32
^{__CVBuffer=}28@0:8@16B24
{?=qiIq}24@0:8@16
v36@0:8@16I24^v28
@52@0:8I16B20@24@32B40I44B48
@76@0:8I16B20@24@32B40I44I48I52B56@60@68
B40@0:8@16@24B32B36
v64@0:8I16I20i24i28d32^I40I48@52B60
@28@0:8B16B20B24
i24@0:8i16i20
B36@0:8i16^i20^i28
@40@0:8@16@24C32C36
@"NSObject<VCMediaStreamDelegate>"
^{SoundDec_t={AudioStreamBasicDescription=dIIIIIIII}{AudioStreamBasicDescription=dIIIIIIII}ii^{OpaqueAudioConverter}*i{AudioStreamPacketDescription=qII}^{AudioBufferList}^{AudioBufferList}**iiiiCiiII{CMRData=II{EVSRFParams=II}}BCBCiB{EVSRFParams=II}{EVSRFParams=II}}
@48@0:8q16@24@32@40
@32@0:8C16C20@24
{?="formatsExt1"b1"preferredFormat"b1"preferredFormatExt1"b1}
B52@0:8^@16@24^i32i40B44B48
@28@0:8@16s24
i36@0:8@16s24^@28
i40@0:8@16s24B28^@32
@24@0:8B16s20
v24@0:8^{tagVCVideoCaptureSinkEntry={_VCSingleLinkedListEntry=^{_VCSingleLinkedListEntry}}@@?}16
v32@0:8^v16@"NSDictionary"24
@44@0:8I16B20@24@32B40
@48@0:8I16B20@24@32B40i44
@"VCIDSSessionInfoSynchronizer"
v32@0:8^{opaqueCMSampleBuffer=}16C24C28
B32@0:8^{opaqueCMSampleBuffer=}16I24C28
@36@0:8@"NSURL"16@"NSString"24I32
v24@0:8@?<v@?@"NSURL"@"NSError">16
@"NSURL"16@0:8
v24@0:8@"NSURL"16
v52@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16i48
@32@0:8i16i20@24
v48@0:8@16^{opaqueCMBufferQueue=}24@32^{?=qiIq}40
v40@0:8^{opaqueCMBufferQueue=}16@24^{?=qiIq}32
@"AVAssetWriter"
@"AVAssetWriterInput"
@"AVAssetWriterInputMetadataAdaptor"
@"NSURL"
@32@0:8^{tagHANDLE=i}16I24I28
@36@0:8^{tagHANDLE=i}16I24I28B32
{_VCAudioStreamTransportRealtimeContext="wrmInfo"{tagWRMMetricsInfo="bInitialized"B"hRTPHandle"^{tagHANDLE}"dwReportInterval"I"dwWrmTime"I"dwPlaybackCount"I"dwPlaybackCountSpeech"I"dwErasureCount"I"dwErasureSilence"I"videoFrameErasureCount"I"dwTimeOfLastRRPacket"I"dwEstimatedRTTMilliSeconds"I"dwJitter"I"dwTotalPacketRecv"I"dwDTXPacketRecv"I"callId"Q"nominalJitterBufferDelay"Q"targetJitterQueueSize"Q"nFraction"i"reportWRMMetricsCallback"^?"wrmMetricsReportingContext"{?="info"^v"retain"^?"release"^?}"wrmMetricsReportingLock"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}"dwInternalTSRate"I"dwPacketSent"I"isCallAudioOnly"I"bwEstimation"I"targetBitrate"I"oneWayRelativeDelay"I"adaptationPacketLossPercentage"I"isLocalCellular"I"isVideoPaused"I"linkType"Q"primaryVideoPacketReceived"I"primaryAudioPacketReceived"I"totalVideoPacketReceived"I"totalAudioPacketReceived"I"totalVideoPacketExpected"I"totalAudioPacketExpected"I}"rtpHandle"^{tagHANDLE}}
@24@0:8{_VCRange=ff}16
v24@0:8{_VCRange=ff}16
{_VCRange="min"f"max"f}
B24@0:8^{?={tagVCAudioFrameFormat={AudioStreamBasicDescription=dIIIIIIII}I}^v^?{tagVCSystemAudioCaptureTapSettings=I(?=iI)^{__CFString}I}}16
@32@0:8^{__CFString=}16@24
@24@0:8^{?={tagVCAudioFrameFormat={AudioStreamBasicDescription=dIIIIIIII}I}^v^?{tagVCSystemAudioCaptureTapSettings=I(?=iI)^{__CFString}I}}16
@24@0:8^{AudioStreamBasicDescription=dIIIIIIII}16
^{?=^{OpaqueAudioQueue}{AudioStreamBasicDescription=dIIIIIIII}[10^{AudioQueueBuffer}]Ii}
{tagVCSystemAudioCaptureTapSettings="tapType"I""(?="audioProcessIdToTap"i"sessionTypeToTap"I)"captureContext"^{__CFString}"source"I}
i40@0:8^{opaqueVCAudioBufferList=}16i24^v28i36
v28@0:8*16i24
B24@0:8^{EVSRFParams=II}16
B40@0:8{_VCAudioCodecModeChangeEvent=iiiI{EVSRFParams=II}}16
B32@0:8*16^I24
@"VCAudioPayloadConfig"
B76@0:8@16^{__CVBuffer=}24{?=qiIq}32@56@64B72
B36@0:8@16^{opaqueCMSampleBuffer=}24B32
B76@0:8@"VCVideoReceiverBase"16^{__CVBuffer=}24{?=qiIq}32@"VideoAttributes"56@"VideoAttributes"64B72
v32@0:8@"VCVideoReceiverBase"16S24i28
B36@0:8@"VCVideoReceiverBase"16^{opaqueCMSampleBuffer=}24B32
v28@0:8@"VCVideoReceiverBase"16I24
v32@0:8@"VCVideoReceiverBase"16@"NSDictionary"24
I28@0:8@"VCVideoReceiverBase"16I24
v32@0:8@"VCVideoReceiverBase"16S24S28
v32@0:8^{tagVCVideoReceiverStreamConfig={tagVCVideoReceiverStreamIDInfo=SSSI[9S][9S]}^{tagHANDLE}^{__CFDictionary}BSCBB^{tagVCCryptor}^v^viBBBi}16@24
v32@0:8^{tagVCVideoReceiverConfig=I[9{tagVCVideoReceiverStreamConfig={tagVCVideoReceiverStreamIDInfo=SSSI[9S][9S]}^{tagHANDLE}^{__CFDictionary}BSCBB^{tagVCCryptor}^v^viBBBi}]iiqiiiIiiiiiiBBBBd^v^?^?^?^?^?^?^?QBSB^{tagWRMMetricsInfo}IBBBBBBBBBBBBB^vBBIBBS^{tagVCJBTargetEstimatorSynchronizer}^{__CFString}^{__CFString}IBBBiBB{tagVCNACKGeneratorStoreBagsConfig=CffB[4f][4f]}B}16@24
v24@0:8^{tagVCVideoReceiverConfig=I[9{tagVCVideoReceiverStreamConfig={tagVCVideoReceiverStreamIDInfo=SSSI[9S][9S]}^{tagHANDLE}^{__CFDictionary}BSCBB^{tagVCCryptor}^v^viBBBi}]iiqiiiIiiiiiiBBBBd^v^?^?^?^?^?^?^?QBSB^{tagWRMMetricsInfo}IBBBBBBBBBBBBB^vBBIBBS^{tagVCJBTargetEstimatorSynchronizer}^{__CFString}^{__CFString}IBBBiBB{tagVCNACKGeneratorStoreBagsConfig=CffB[4f][4f]}B}16
{tagVCVideoStreamReceiverConfig=^{tagHANDLE}@^{opaqueRTCReporting}Ii@B^v^?}28@0:8I16^{opaqueRTCReporting=}20
{tagVCVideoReceiverConfig=I[9{tagVCVideoReceiverStreamConfig={tagVCVideoReceiverStreamIDInfo=SSSI[9S][9S]}^{tagHANDLE}^{__CFDictionary}BSCBB^{tagVCCryptor}^v^viBBBi}]iiqiiiIiiiiiiBBBBd^v^?^?^?^?^?^?^?QBSB^{tagWRMMetricsInfo}IBBBBBBBBBBBBB^vBBIBBS^{tagVCJBTargetEstimatorSynchronizer}^{__CFString}^{__CFString}IBBBiBB{tagVCNACKGeneratorStoreBagsConfig=CffB[4f][4f]}B}24@0:8@16
{tagVCNACKGeneratorStoreBagsConfig=CffB[4f][4f]}24@0:8@16
v32@0:8@16^{tagHANDLE=i}24
v28@0:8^{packet_id=CCSIII}16i24
B36@0:8^i16i24^@28
@40@0:8I16Q20I28q32
v44@0:8i16d20d28Q36
B28@0:8q16I24
v32@0:8i16i20i24i28
@"VCVideoTransmitterBase"
@"VCVideoReceiverBase"
@"VCVideoCaptureConverter"
@"<VCSessionParticipantLocalVideoStreamDelegate>"
{?="audioFeatures"b1}
v32@0:8@"VCMediaStream"16@"VCMediaKeyIndex"24
v32@0:8@"VCMediaStream"16@"NSArray"24
@28@0:8B16@20
@44@0:8@16B24I28I32I36I40
@52@0:8I16B20I24I28I32I36I40@44
v52@0:8@16@24@32I40@44
v44@0:8@"VCControlChannel"16@"NSString"24I32@"NSNumber"36
v52@0:8@"VCControlChannel"16@"NSString"24@"NSData"32I40@"NSNumber"44
v44@0:8@"VCControlChannel"16@"NSString"24B32@"NSNumber"36
v32@0:8@"VCControlChannel"16@"NSNumber"24
v44@0:8@16@24B32@?36
v52@0:8@16@24B32@?36@?44
v56@0:8@16@24B32B36@?40@?48
B56@0:8@16@24Q32@40@?48
i32@0:8^{sockaddr_storage=CC[6c]q[112c]}16^Q24
{?="maxNetworkBitrate"b1"maxMediaBitrate"b1"maxPacketsPerSecond"b1"idsStreamID"b1"qualityIndex"b1"maxIDSStreamIdCount"b1"repairedStreamID"b1"repairedMaxNetworkBitrate"b1}
v24@0:8^{tagVCSecurityKeyHolder=}16
^{tagVCSecurityKeyHolder=}16@0:8
^{tagVCSecurityKeyHolder=}
@"VCMediaStreamMultiwayConfig"
@"VCMediaStreamRateControlConfig"
v32@0:8@16^{opaqueCMSampleBuffer=}24
v32@0:8@"AVCStreamOutput"16^{opaqueCMSampleBuffer=}24
v24@0:8@"AVCStreamOutput"16
v28@0:8@"AVCStreamOutput"16B24
{?=@}16@0:8
v24@0:8{?=@}16
@"AVCStreamOutput"
{?="videoAttributes"@"VideoAttributes"}
@64@0:8@16{?=CIddd@}24
C24@0:8d16
{?="linkProbingCapabilityVersion"C"linkProbingQueryResultsInterval"I"expMovMeanFactor"d"envelopeAttackFactor"d"envelopeDecayFactor"d"plrBuckets"@"NSArray"}
v32@0:8^{CGSize=dd}16^{CGSize=dd}24
v36@0:8^{CGSize=dd}16^{CGSize=dd}24B32
@80@0:8{CGSize=dd}16{CGSize=dd}32{CGSize=dd}48{CGSize=dd}64
B48@0:8r*16*24Q32r*40
B64@0:8r*16r*24^i32^i40^i48^i56
B56@0:8r*16^i24^i32^i40^i48
i24@0:8^{__CFDictionary=}16
B44@0:8*16q24i32^{__CFDictionary=}36
@24@0:8I16B20
i32@0:8C16@20B28
@48@0:8Q16B24C28B32B36@40
@60@0:8@16@24B32@36@?44@?52
@64@0:8@16@24B32B36@40@?48@?56
@80@0:8@16@24B32B36@40@?48@?56@?64@?72
v36@0:8B16@20@28
B48@0:8@16Q24@32@?40
v48@0:8@16Q24q32q40
v40@0:8d16@24@32
v36@0:8@16i24@28
v32@0:8^{_VCAudioPowerSpectrumEntry={_VCRange=ff}f}16I24S28
@"<VCLinkProbingHandlerDelegate>"
@"VCDispatchTimer"
i52@0:8^{__CVBuffer=}16i24i28I32^{__CVPixelBufferPool=}36^^{__CVBuffer}44
@"VCPixelTransferSession"
@"VCMediaStream"
B32@0:8d16d24
{VoiceIOFarEndVersionInfo=[64C][64C]I}20@0:8B16
@"SDPMini"
@56@0:8{_AVCAudioPowerSpectrumMeterConfig=qISd}16@40@48
@"VCAudioPowerSpectrumMeter"
@72@0:8@16{tagVCMediaStreamRateAdaptationParams=@^{opaqueRTCReporting}i{tagVCMediaStreamRateAdaptationConfig=q(tagVCMediaStreamRateAdaptationAlgorithmConfig={tagVCMediaStreamRateAdaptationConfigTelephonyUplink=IIII})}}24
v24@0:8^{tagVCMediaStreamRateAdaptationConfig=q(tagVCMediaStreamRateAdaptationAlgorithmConfig={tagVCMediaStreamRateAdaptationConfigTelephonyUplink=IIII})}16
@"<VCMediaStreamRateAdaptationDelegate>"
I24@0:8^d16
[3d]
v36@0:8@16@24i32
{tagVCAudioFrameFormat={AudioStreamBasicDescription=dIIIIIIII}I}16@0:8
v64@0:8{tagVCAudioFrameFormat={AudioStreamBasicDescription=dIIIIIIII}I}16
@36@0:8C16@20@28
@44@0:8C16@20@28@36
@"NSObject<AVCMomentsRequestDelegate>"
i28@0:8q16i24
v32@0:8@"VCSessionUplinkVideoStreamController"16@"NSDictionary"24
v36@0:8I16d20d28
@"VCCaptionsTranscription"
^{opaqueVCCaptionsDecoder=}
^{OpaqueVTPixelRotationSession=}
B48@0:8@16*24I32S36@40
@36@0:8@16S24@28
B48@0:8@16@24I32I36@40
@60@0:8I16@20@28@36^{?=i^{tagVCSecurityKeyHolder}^{tagVCSecurityKeyHolder}^{__CFData}^{__CFData}B}44@52
B44@0:8@16@24I32@36
B48@0:8^v16@24*32I40S44
@60@0:8@16B24^@28@36@44@52
v40@0:8^@16^@24@32
@"AVCRemoteVideoClient"
^@20@0:8i16
v56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
@"VCCALayerHost"
@32@0:8I16i20@24
v36@0:8^I16i24@28
@28@0:8i16^v20
v32@0:8I16i20@24
v52@0:8^I16^{__CFString=}24@32B40^{__CFDictionary=}44
I28@0:8@16B24
I36@0:8@16B24@28
I40@0:8@16B24i28@32
{?="capabilities"b1"linkProbingCapabilityVersion"b1"mediaControlInfoSubVersion"b1"switches"b1"oneToOneModeSupported"b1}
d32@0:8d16d24
i40@0:8d16d24d32
d28@0:8I16d20
B40@0:8^i16d24d32
[500{VCStatisticsStatsHistoryElement="linkID"C"statsUpdateTime"d"statsTimestamp"I"totalPacketSent"I"totalPacketReceived"I"totalByteSent"Q"totalByteReceived"Q"totalByteServerStatsUsed"Q"maxBurstyLoss"I}]
{VCStatisticsStatsHistoryElement="linkID"C"statsUpdateTime"d"statsTimestamp"I"totalPacketSent"I"totalPacketReceived"I"totalByteSent"Q"totalByteReceived"Q"totalByteServerStatsUsed"Q"maxBurstyLoss"I}
^{VCStatisticsSendHistoryElement=IdIQ^{VCStatisticsSendHistoryElement}^{VCStatisticsSendHistoryElement}}
I32@0:8@16@24
I24@0:8C16C20
@48@0:8i16@20i28@32@40
C20@0:8C16
{tagAVCSessionPresentationInfo={CGRect={CGPoint=dd}{CGSize=dd}}IIC}16@0:8
v64@0:8{tagAVCSessionPresentationInfo={CGRect={CGPoint=dd}{CGSize=dd}}IIC}16
r^{tagVCSpatialAudioMetadataGlobalInfo=IffffffII}16@0:8
{tagVCSpatialAudioMetadataGlobalInfo="displayID"I"displayWidth"f"displayHeight"f"appWindowWidth"f"appWindowHeight"f"appWindowPositionX"f"appWindowPositionY"f"uiLayout"I"uiState"I}
{?="audioChannelCount"b1"coordinateSystem"b1"maxNetworkBitrate"b1"metadata"b1"payloadSpecOrPayloads"b1"qualityIndex"b1"repairedMaxNetworkBitrate"b1"rtpSSRC"b1"streamID"b1"streamIndex"b1}
v56@0:8{_VCAudioCodecModeChangeEvent=iiiI{EVSRFParams=II}}16^B40^B48
v32@0:8i16i20i24I28
f20@0:8i16
v28@0:8i16i20B24
{?=I[5I]Id{CGSize=dd}dIdII}16@0:8
v104@0:8{?=I[5I]Id{CGSize=dd}dIdII}16
@"VCPacketBundler"
@"VCRedundancyControllerAudio"
@"VCAudioTierPicker"
{?="averageNetworkBitrate"I"networkBitrate"[5I]"averageMediaBitrate"I"averageFramerate"d"frameResolution"{CGSize="width"d"height"d}"lastAudioHostTime"d"lastAudioSampleTime"I"lastVideoHostTime"d"lastVideoSampleTime"I"noVoiceActivityPacketCount"I}
{tagVCIDSChannelDataFormat="streamIDs"[12S]"numOfStreamIDs"C"probingGroupIDIsSet"B"probingGroupID"S"priority"C"pktCountingFlag"B"participantIDIsSet"B"participantID"Q"participantGenerationCounterIsSet"B"ignorePriority"B"statsIDIsSet"B"statsID"S"statsPayload"{?="serverTimestamp"S"serverPacketInterval"S"totalServerPacketReceived"S"totalServerPacketSent"S"uplinkBandwidthEstimate"S}"isTransitionPacket"B"isHopByHopEncrypted"B"encryptionSequenceNumberIDIsSet"B"encryptionSequenceNumber"Q"baseLayerStreamIdIsSet"B"baseLayerStreamId"S"isRetransmitted"B"isHighlyBurstyTraffic"B"requireOneToOneProbingSequence"B}
^{tagVCAudioIssueDetector=}
^{tagVCAudioDump=}
{tagVCAudioDumpPayloadInfo="audioDumpEnabled"B"payloadType"i"isOctetAligned"B"isEVSHeaderFull"B"format"^{AudioStreamBasicDescription}}
I44@0:8@16@24I32I36I40
v36@0:8I16q20@?28
@40@0:8q16^@24q32
f20@0:8I16
i24@0:8^{?=Cd[1472C]ii{tagVCIDSChannelDataFormat=[12S]CBSCBBQBBBS{?=SSSSS}BBBQBSBBB}}16
i32@0:8^v16@?24
v24@0:8^{_VTPPacket=d{sockaddr_storage=CC[6c]q[112c]}I{tagIPPORT=i[16c](?=I[16C])S}{tagVPKTFLAG=iIIBBBBii{tagVCSourceDestinationInfo=i(?={?={tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{?=BS}}{?=ii{tagIPPORT=i[16c](?=I[16C])S}i}{?=I{?=cSCSC}B}{?=@})I^{tagVCSourceDestinationInfo}^v}CiiiiiBBB{tagVCIDSChannelDataFormat=[12S]CBSCBBQBBBS{?=SSSSS}BBBQBSBBB}{tagPKT_TAG=[4Q]}I[16C]BB}{VCBlockBuffer_t=^{OpaqueCMBlockBuffer}Q*}}16
{fd_set="fds_bits"[32i]}
B32@0:8@16B24B28
@32@0:8B16B20@24
v44@0:8@16^I24B32@36
v52@0:8@16@24^I32B40@44
v64@0:8^{__CVBuffer=}16^{__CVBuffer=}24{?=qiIq}32@56
v48@0:8^{__CVBuffer=}16{?=qiIq}24
v72@0:8^{__CVBuffer=}16^{__CVBuffer=}24{?=qiIq}32@56@64
v64@0:8^{__CVBuffer=}16{?=qiIq}24@48@56
^{opaqueVCRemoteImageQueue=}16@0:8
d32@0:8^{__CFString=}16d24
q24@0:8^{__CFString=}16
q32@0:8^{__CFString=}16q24
B24@0:8^{__CFString=}16
B28@0:8^{__CFString=}16B24
@24@0:8^{__CFString=}16
@44@0:8r*16Q24^{?=diIIIIISBB}32C40
i40@0:8r*16Q24^{?=diIIIIISBB}32
i36@0:8^v16Q24I32
i28@0:8^{?=SSSSSSIIISII}16I24
i44@0:8^v16Q24^Q32I40
i40@0:8*16Q24^Q32
@"<VCMediaControlInfoDelegate>"
{tagVCMediaControlVTableC="serializedSize"^?"serialize"^?}
[8C]
i24@0:8^{?=diIIIIISBB}16
{?="timeStamp"S"bandwithEstimation"S"videoBurstLoss"S"videoReceviedPkts"S"audioBurstLoss"S"audioReceviedPkts"S"totalReceviedKbits"I"receiveQueueTarget"I"queuingDelay"I"sendTimestamp"S"owrd"I"connectionStatsBuffer"I}
{?="totalPacketsPerFrame"S"frameSequenceNumber"S}
[36C]
B64@0:8^{opaqueCMSampleBuffer=}16I24d28{?=qiIq}36C60
v68@0:8^{__CVBuffer=}16{?=qiIq}24C48@52@60
B52@0:8^@16^{VCCSVideoTransmitterVideoRules_t=@@@}24B32^{opaqueRTCReporting=}36B44B48
B40@0:8^@16^{opaqueRTCReporting=}24B32B36
v40@0:8@"AVCSessionParticipant"16B24B28@"NSError"32
v28@0:8@"AVCSessionParticipant"16B24
v32@0:8@"AVCSessionParticipant"16@"NSDictionary"24
v44@0:8@"AVCSessionParticipant"16I24I28B32@"NSError"36
v32@0:8@"AVCSessionParticipant"16I24I28
v32@0:8@"AVCSessionParticipant"16Q24
@56@0:8@16@24@32@40@48
@"AVCSessionParticipant"
@"AVCSessionConfiguration"
B40@0:8@16@24^q32
v60@0:8^{opaqueCMSampleBuffer=}16{?=qiIq}24B48i52B56
v52@0:8^{opaqueCMSampleBuffer=}16{?=qiIq}24i48
^{opaqueCMFormatDescription=}20@0:8i16
v32@0:8@"NSString"16@"NSString"24
v28@0:8@"<VCVideoSink>"16i24
@"<VCVideoSource>"
@40@0:8[16C]16@24^@32
@72@0:8@16@24@32@40@48@56^@64
@"VCVideoStream"
I24@0:8Q16
{CGPoint=dd}16@0:8
@28@0:8i16C20C24
@28@0:8C16i20C24
@36@0:8@16C24i28C32
v32@0:8i16i20C24C28
v32@0:8i16i20@24
v28@0:8i16i20C24
@28@0:8i16i20B24
v28@0:8@"VCMediaStreamGroup"16C24
v48@0:8@"VCMediaStreamGroup"16{?=qiIq}24
v24@0:8@"VCMediaStreamGroup"16
v28@0:8@"VCMediaStreamGroup"16B24
v32@0:8@"VCMediaStreamGroup"16S24S28
v32@0:8@"VCMediaStreamGroup"16S24i28
v36@0:8@"VCMediaStreamGroup"16B24d28
v28@0:8@"VCMediaStreamGroup"16I24
B32@0:8@16q24
@40@0:8C16I20@24q32
@40@0:8@16q24I32I36
@44@0:8q16I24I28C32@36
@32@0:8C16B20B24B28
@28@0:8C16B20B24
B32@0:8i16B20B24i28
B20@0:8f16
@"VCSessionParticipantOneToOneConfig"
v56@0:8{AudioStreamBasicDescription=dIIIIIIII}16
@"AVCNetworkAddress"
@"AVCAudioStreamConfig"
@"AVCVideoStreamConfig"
@"AVCTextStreamConfig"
B28@0:8I16Q20
@"NSObject<WCMClientDelegate>"
B48@0:8@16^i24@32^i40
@"NSEnumerator"
v52@0:8I16@?20@?28@?36@?44
i32@0:8I16B20^i24
v48@0:8I16^{tagCONNRESULT=IiiIiiSS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}IiiiiSiii^{tagCONNRESULT}i}20i28i32^{__CFData=}36i44
v36@0:8I16*20i28S32
v64@0:8^{tagCANDIDATEPAIR={tagCANDIDATE=iiI[8C]SS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}I}{tagCANDIDATE=iiI[8C]SS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}I}iSS[8C]{tagIPPORT=i[16c](?=I[16C])S}Iiiiiiiii^{tagCANDIDATEPARIR}}16I24i28^i32^i40^i48^i56
v32@0:8^{tagIPPORT=i[16c](?=I[16C])S}16I24B28
v28@0:8@?16I24
v40@0:8*16i24I28B32i36
@28@0:8^{tagIPPORT=i[16c](?=I[16C])S}16I24
i40@0:8^{tagCANDIDATE=iiI[8C]SS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}I}16I24i28^{tagIPPORT=i[16c](?=I[16C])S}32
i64@0:8I16C20B24^^v28^i36^{__CFDictionary=}44B52d56
i36@0:8I16^{tagCONNRESULT=IiiIiiSS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}IiiiiSiii^{tagCONNRESULT}i}20@?28
i68@0:8I16@20@28d36^{__SecIdentity=}44^{SKEStateOpaque=}52^i60
B28@0:8^{tagIPPORT=i[16c](?=I[16C])S}16B24
i44@0:8@16^{tagIPPORT=i[16c](?=I[16C])S}24^{tagIPPORT=i[16c](?=I[16C])S}32i40
i40@0:8@16I24I28B32i36
i36@0:8I16i20I24^{__CFString=}28
i28@0:8^{SKEStateOpaque=}16I24
i20@0:8B16
i24@0:8^{tagIPPORT=i[16c](?=I[16C])S}16
i40@0:8I16I20^v24i32S36
i28@0:8I16^I20
@"AVAudioDeviceList"
identity
deflate
gzip
rcim
emac
v024
f024
ediv
atem
f024
wmac
wcim
rcim
ercs
emac
tpac
emac
rcim
emac
ercs
emac
44fx
v024
f024
f024
v024
f444
v444
024x
44fx
rcim
emac
rcim
wcim
emac
wmac
 caa
emac
ercs
rcim
emac
ercs
UUUUUU
ffffff
#!rtpplay1.0 2a01:4c8:f000:f43::12/61324
v024f444f02444fxf444f024f024024x
@(#)PROGRAM:AVConference  PROJECT:AVConference-
BFJBDBL
?ffffff
?333333
MbP?
333333
?333333
?ffffff
%Fg@
p=bP@
##5Id
A333333
zt?-C
"@^x
^`?UUUUUU
MbP?
2M5MMM8X
2M5MMM8T
2M5MMM8T
2M5MMM8
#C^y
222
A333333
?333333
?UUUUUU
?UUUUUU
Mb`?
lppa

#
#99,9929;
11111
1!#%')+
 f"$&(*
,.024
1DXl
mcpl)
mcpl,
cckg
sves
xxtd
supo
lcaa
xeps
wala
pytt
walu
mcpl
mcpl)
Mb@?
A333333
'2p'
@mcpl)
fffff6m@
ffffff
)/Time
ClientID
streamGroupID
?______
&A_~
Anonymous
user
!*3<ENW`ir{
&/8AJS\enw
058;FN(knN
333333
"""""
333333
?ffffff
?UUUUUU
V@-C
333333
MbP?
+17=
,098
/=CU
#mtstpni
spatbolg
glpobolg
kcajtpni
SFrameEncryptionKey
SFrameSaltKey
SFrameAuthenticationKey
*;L_0
Apple Inc.1&0$
Apple Certification Authority1
Apple Root CA0
060425214036Z
350209214036Z0b1
Apple Inc.1&0$
Apple Certification Authority1
Apple Root CA0
, op
https://www.apple.com/appleca/0
Reliance on this certificate by any party assumes acceptance of the then applicable standard terms and conditions of use, certificate policy and certification practice statements.0
=&g 
Sj[d
uu!0
Apple Inc.1&0$
Apple Certification Authority1
Apple Root CA0
070412174328Z
220412174328Z0y1
Apple Inc.1&0$
Apple Certification Authority1-0+
$Apple iPhone Certification Authority0
!p(E`\
)XI
c{>c
4*."
/0-0+
%http://www.apple.com/appleca/root.crl0
kK>{
1+kT
>%(%
JAlXV
Apple Inc.1&0$
Apple Certification Authority1-0+
$Apple iPhone Certification Authority0
070416225446Z
140416225446Z0Z1
Apple Inc.1
Apple iPhone1
Apple iPhone Device CA0
MMNT
wE/g\
4*."
|508
10/0-
'http://www.apple.com/appleca/iphone.crl0
gzLV+
yR:L=y[


?UUUUUU
 #%*
walu&
 #&)
lppa
histogram
2M5MMM8
MGMMMJF
@(@@@+
"A*"-"""0
A06;IR
+G.GGG0
?uouaoipvlppa
$6AQ
rr0rrrrr4T
"'27
?*00
0000*
21ARPLReceiveSetElement
25ARPLAssociationSetElement
14ARPLSetElement
21ARPLSendingSetElement
NRUbf
zt?;
?[YO?
Pd?KMD?'
Cw>(
l~?8
 )19BJS[
".5<HNY`
iHQYiiia"
 0g7BIgggPW
Mb`?
@ffffff
MbP?
zt?{
RTCPGetSummaryReportBlock
_RTCPGetSummaryReportBlock
v8@?0
-[VCMediaNegotiatorV2 negotiationData]
mediaNegotiatorV2CompressionEnabled
Created invite media blob (verson 2)
+[VCMediaNegotiatorV2 newCompressedBlob:]
+[VCMediaNegotiatorV2 newDecompressedBlob:]
+[VCMediaNegotiatorV2 newUnserializedMediaBlob:]
-[VCMediaNegotiatorV2 processRemoteNegotiationData:]
Received invite media blob (version 2)
+[VCMediaNegotiatorV2 initializeLocalConfiguration:negotiationData:deviceRole:preferredAudioPayload:]
-[VCMediaNegotiatorV2 remoteMaxBandwidthForOperatingMode:connectionType:]
-[VCMediaNegotiatorV2 appendGeneralInfoToMediaBlob:]
-[VCMediaNegotiatorV2 appendBandwidthSettingsToMediaBlob:]
-[VCMediaNegotiatorV2 appendCodecFeaturesToMediaBlob:]
-[VCMediaNegotiatorV2 appendMicrophoneOneToOneSettingsToMediaBlob:]
-[VCMediaNegotiatorV2 appendCameraOneToOneSettingsToMediaBlob:]
-[VCMediaNegotiatorV2 appendMomentsSettingsToMediaBlob:]
-[VCMediaNegotiatorV2 appendStreamGroupsToMediaBlob:]
+[VCMediaNegotiatorV2 dumpRemoteNegotiationData:forceFileDump:]
%010u
mediablob_invite_remote
.blob
com.apple.VideoConference.MediaBlob
-[VCMediaNegotiatorV2 setupNegotiatedResultsWithRemoteMediaBlob:]
-[VCMediaNegotiatorV2 newNegotiatedSystemAudioResultsWithRemoteMediaBlob:]
-[VCMediaNegotiatorV2 selectBestDecodeVideoRuleForTransport:payload:localVideoRuleCollection:remoteVideoRuleCollection:]
-[VCMediaNegotiatorV2 setupNegotiatedVideoSettingsWithRemoteMediaBlob:]
-[VCMediaNegotiatorV2 setupNegotiatedMomentsResultsWithRemoteMediaBlob:]
-[VCMediaNegotiatorV2 negotiateStreamGroupConfig:remoteInviteBlob:]
-[VCMediaNegotiatorV2 setupStreamGroupsWithRemoteMediaBlob:]
-[VCMediaNegotiatorV2 negotiateU1SettingsForStreamGroup:]
+[VCMediaNegotiatorV2 streamGroupIDsWithMediaBlob:]
+[VCMediaNegotiatorV2 updateStreamGroupU1Config:forGroupId:withNegotiationBlob:localSupportedVideoPayloads:]
+[VCMediaNegotiatorV2 updateCameraU1Config:forNegotiationBlob:localSupportedVideoPayloads:]
+[VCMediaNegotiatorV2 updateScreenU1ConfigWithStreamGroupConfig:forNegotiationBlob:localSupportedVideoPayloads:]
%@ %@
ssrc
maxNetworkBitrate
payload
streamID
metadata
qualityIndex
supportedVideoFormats
frameRate
keyFrameInterval
maxMediaBitrate
maxPacketsPerSecond
repairedStreamID
repairedMaxNetworkBitrate
NOT SET
IDLE
STARTED
RUNNING
INTERRUPTED
-[VCAudioManager getPreferredFormat:blockSize:vpOperatingMode:forOperatingMode:deviceRole:suggestedFormat:]
controllerType=%s 
VoiceChat
System
%s (speaker)
%s (mic)
-[VCAudioManager initWithAudioSessionMode:]
com.apple.AVConference.audiomanagerqueue
{ %@ controllerType=%s }
-[VCAudioManager setMicrophoneMuted:]_block_invoke
-[VCAudioManager setMixingVoiceWithMediaEnabled:]
-[VCAudioManager setMixingVoiceWithMediaEnabled:]_block_invoke
-[VCAudioManager setMute:forClient:]_block_invoke
-[VCAudioManager applyAudioSessionMute]
%s: Iterations=%d
-[VCAudioManager flushEventQueue:]
-[VCAudioManager addClient:]
skipAudioManagerIdleWait
-[VCAudioManager waitIdleForClient:]
-[VCAudioManager _cleanupDeadClients]
-[VCAudioManager vpOperationModeForConferenceOperatingMode:deviceRole:]
-[VCAudioManager newAudioUnitPropertiesWithPreferredClient:]
-[VCAudioManager newAudioUnitPropertiesForSystemAudioWithPreferredClient:]
-[VCAudioManager updateCurrentInputDevice:]_block_invoke
-[VCAudioManager setCurrentInputDevice:]_block_invoke
-[VCAudioManager setCurrentOutputDevice:]_block_invoke
-[VCAudioManager updateCurrentOutputDevice:]_block_invoke
-[VCAudioManager startAUIOWithProperties:]
startAudioIO
-[VCAudioManager shouldResetAudioUnitWithProperties:]
-[VCAudioManager shouldResetAudioSessionWithProperties:]
-[VCAudioManager resetAudioLimiterWithProperties:]
-[VCAudioManager stopAUIO]
-[VCAudioManager registerClientIO:controllerIO:]
-[VCAudioManager unregisterClientIO:controllerIO:]
-[VCAudioManager completeStartForAllStartingClients]
-[VCAudioManager registerForMutedTalkerNotificationWithAUIO:]_block_invoke
v12@?0I8
-[VCAudioManager registerForMutedTalkerNotificationWithAUIO:]
-[VCAudioManager unregisterForMutedTalkerNotificationWithAUIO:]
-[VCAudioManager registerForMutedTalkerNotification:]
-[VCAudioManager registerForMutedTalkerNotification:]_block_invoke
-[VCAudioManager unregisterFromMutedTalkerNotification]_block_invoke
-[VCAudioManager registerAudioSessionId:maxChannelCountMic:maxChannelCountSpeaker:spatialMetadata:]
-[VCAudioManager registerAudioSessionId:maxChannelCountMic:maxChannelCountSpeaker:spatialMetadata:]_block_invoke
-[VCAudioManager unregisterAudioSessionId:]
-[VCAudioManager unregisterAudioSessionId:]_block_invoke
-[VCAudioManager setSpatialMetadata:audioSessionId:completionHandler:]_block_invoke
-[VCAudioManager applySessionContextToAudioUnitProperties:preferredClient:]
-[VCAudioManager applySpatialMetadata:]
-[VCAudioManager enterStateStarted]
forceMixingVoiceWithMediaEnabled
-[VCAudioManager stateSessionStartedWithAudioUnitProperties:sessionProperties:client:newState:]
-[VCAudioManager stateRunningWithAudioUnitProperties:sessionProperties:client:newState:]
-[VCAudioManager stateInterruptedWithAudioUnitProperties:sessionProperties:client:newState:]
-[VCAudioManager updateStateWithAudioIOClient:]
-[VCAudioManager startClient:]
Controller doesn't support client role: %d
-[VCAudioManager startClient:]_block_invoke
Controller request denied: client (%p) is alread started
Client (%p) failed to start
-[VCAudioManager stopClient:]
Controller request denied: client (%p) is not running
-[VCAudioManager stopClient:]_block_invoke
Client (%p) failed to stop
-[VCAudioManager updateClient:direction:]_block_invoke
-[VCAudioManager resetAudioSessionWithProperties:interruptSuccessful:]
-[VCAudioManager setupInterruptThread]
-[VCAudioManager startInterruptThread]
-[VCAudioManager stopInterruptThread]
-[VCAudioManager didSessionStop]_block_invoke
-[VCAudioManager didSessionEnd]_block_invoke
-[VCAudioManager didUpdateBasebandCodec:]
_VCAudioManager_ProcessEventQueue
_LogProfileTimeLimitHelper
_VCAudioManager_RegisterClientIO
_VCAudioManager_UnregisterClientIO
AVConference
UseNWConnectionNotificationForRateController
UseBTNotification
AVCRC
-[AVCRateController initWithDelegate:params:]
enabled
disabled
-[AVCRateController dealloc]
-[AVCRateController configure:]
-[AVCRateController start]
v176@?0{tagVCStatisticsMessage=iidBBBB(?={?=IIIIIIddddd[64c]i}{?=IIIIIIIIIIIIddIIdIB{?=iIIIdddII}{?=SBBI}}{?=dddIIIIIQI}{?=IBBBIIdIB{?=iIIIdddII}}{?=CIIIIIIIIIddddIIII}{?=IIId}{?=iIIIdddII}{?=IIII}{?=IIIIIIBI}{?=IIIIfBBddIIIQ}{?=CCCQQQIIIQiI(?={?=CCSSCCCCCCCfBS[6I]}{?=CsscCCCCSSC})}{tagVCStatisticsVideoLossFeedback=ISCC})}8
-[AVCRateController stop]
-[AVCRateController registerPeriodicTask]
v24@?0^v8^v16
ULPLR
RTTUL
ULTBR
ULSBR
ULWMBR
ULWNBR
ULBWE
ULTBSNT
ULTPRC
ULTPST
ULLBA
DLTPRC
DLPLR
RTTDL
DLTBR
DLRBR
DLBWE
DLTBRCVD
DLLBA
ULBPL
NWAPD
MAWFPD
NWATH
NWNaC
VPLR
TTxR
WRRTT
WRBPL
OVSBR
UNSBR
OVBWE
UNBWE
SBWD
RDMBL
%5.1f
BbTx
InTxR
APRR
VPRR
-[AVCRateController setTargetBitrateCap:]
-[AVCRateController setEstimatedBandwidthCap:]
disableBasebandAdaptation
enableRampDownSuppression
enableBlockRampUpInBluetoothCoex
enableRampDownToActualSendBitrate
enableRampDownUsingPLRThreshold
-[AVCRateController setBtNotificationMonitor]_block_invoke
v16@?0^{?=*Q}8
%@:%@
-[AVCRateController initialBitrateTierFromLearntBitrateWithLocalTechnology:remoteTech:defaultTier:]
forcedSoftMaxTierLowIndex
forcedSoftMaxTierMediumIndex
noRampUp-networkSaturation
RTTtoMinRTTRatio
OWRDtoMinRTTRatio
saturationPersistFeedbackNum
RTTDecreasingThreshold
-[AVCRateController applyServerBagNoRampUpGroupConfig:]
noRampUp-source
rateLimitedPercentage
blockedTimeout
noRampUp-network
networkUnstableCoolDownTime
RTTThreshold
PLRThreshold
noRampUp-delay
OWRD
NOWRD
noRampUp-bw
overGuardTierCalmDuration
guardTierDiff
rampDown-delay
NOWRDAcc
aggNOWRD
aggNOWRDAcc
constantOWRDDuration
suppressionEnabled
suppressionMinRTT
suppressionFactor
-[AVCRateController applyServerBagRampDownGroupConfig:]
rampDown-loss
lowestTier
lossEvent
lossEventNOWRD
rampDown-bw
keepOvershootDuration
nextTierPercentage
noRampUp-notification
BBDelay
NBDCD
highNBDCDCoolDuration
-[AVCRateController applyServerBagNotificationGroupConfig:]
rampDown-notification
highBBDelay
mediumBBDelay
normalizedBBDelay
aggNBDCD
profile
profileNumber
-[AVCRateController applyServerBagProfileConfig:]
fastRampUp
networkStableDuration
minTierGap
RTTRatio
-[AVCRateController applyServerBagFastRampUpConfig:]
oscillationAvoidance
tiersHit
tierChange
durationRatio
aggDurationRatio
-[AVCRateController applyServerBagOscillationAvoidanceConfig:]
emergencyTier
coolDownTimeWiFi
minNonEmergTierWiFi
-[AVCRateController applyServerBagEmergencyTierConfig:]
pauseResume
offChannelHighRatio
offChannelLowRatio
autoResumeTime
-[AVCRateController applyServerBagPauseResumeConfig:]
lossBasedAdaptation
packetLossRateThresholdInitial
packetLossRateThresholdMin
packetLossRateThresholdMax
packetLossRateThresholdTarget
-[AVCRateController applyServerBagLossBasedAdaptationConfig:]
mainControl
rampDown-loss-ratio
-[AVCRateController applyServerBagMainControlConfig:]
RCEV
RCEG
-[AVCRateController reportRateControlExperiment]
<nil>
maxBitrate
burstyTrafficUplink
burstyTrafficDownlink
-[AVCRateController multiwayMaxTierFromServerBag]
-[AVCRateController applyCachedAlgorithmConfig:]
maxTargetBitrate
forcedInitialBitrate
-[AVCRateController updateInitialBitrateFromDefaultWithAlgorithmConfig:]
-[AVCRateController pushNoServerStatsToNwActivity:]
VCSErrorDetected
-[AVCRateController doRateControlWithNWConnectionStatistics:]
-[AVCRateController reportInitialRampUpDeltas]
-[AVCRateController reportTargetBitrateChange:rateChangeCounter:]
-[AVCRateController loadDefaultSettings]
VCRateControl
.bwedump
com.apple.VideoConference.VCRClog
VCRC-UL
VCRC-DL
.afrcdump
STime
dTime/ETxTS
OWRD
NOWRD
NOWRDS
NOWRDA
PLR/FEC
BR/TR
MQIn: A/V
MQOut: A/V
ABRL
TxAT
MODE
TxSTATE
LBAWall
WallConf
BadTrend
.fbdump
com.apple.VideoConference.VCRClogFB
MyTxTS
QDelay
RemoteBWE
BurstLoss
AudioRecvPkt
VideoRecvPkt
RemoteTxTS
OWRD
TxTS
RxTS
LinkID
TxPkt
RxPkt
TxByte
RxByte
OWRD
MyTxTS
QDelay
RemoteBWE
BurstLoss
SentPkt
RecvPkt
RemoteTxTS
OWRD
.bbdump
com.apple.VideoConference.VCRClogBB
STime
V-R-A-F-T
XmitB
LTxTS
IBR_OLD
ABRS
ABRL
BDCD
NBDCD
.nwdump
com.apple.VideoConference.VCRClogNW
STime
aTime
TxTS
Version
Direction
Tech
ByteCount
QSize1
QSize2
Delay
Throughput
TxRate
RateTrend
FrequentScans
%8.3f
EndOfFile
%04X
%04X
%04X
%04X
%.2f
%.3f
-[AVCRateController printFeedbackMessage:]
%s %4u
%.4f
%.4f
%4u %d %c(%1d,%1d) FC:%d
%.1f
%llu
%llu
%llu
%llu
%2.4f
-[AVCRateController printRateControllerHealthPrint]
APLR=
Downlink PLR=
Uplink PLR=
VPLR=
VCRC
-[VCNWConnectionCongestionDetector processNWConnectionNotification:]
NWConnection notification has a bad version: %d
NWConnection notifications have identical timestamps or out of order [current timestamp:%llu, previous timestamp:%llu]
-[VCNWConnectionCongestionDetector processNWConnectionPacketEvent:eventType:]
NWConnection packet event has a bad version: %d, type: %d
NWConnection packet NACK event [type:%d, timestamp:%u, identifier:%u, seq:%u, dropCountPerFrame:%d, dropCount:%d, congestionEvent:%d]
MetaDataMessageArrivalTime
MetaDataTestSimulationTime
-[AVCRateControlFeedbackController getRateControlFeedbackMessage:type:metaData:error:]
_AVCRateControlFeedbackController_DetectOutOfOrderFeedbackMessage
GKSRelaySelfNatType
GKSRelaySelfBlob
GKSRelaySelfAddrPointer
GKSRelaySelfExternalAddr
GKSRelayPeerID
GKSRelayPeerNatType
GKSRelayPeerBlob
GKSRelayPeerAddrPointer
GKSRelayPeerExternalAddr
GKSRelayRemotePrimaryIdentifier
GKSRelayType
GKSRelayConnectionID
GKRelayTransactionID
GKRelayToken
GKSRelayPeerRelayIP
GKSRelayPeerRelayPort
GKSRelaySelfRelayIP
GKSRelaySelfRelayPort
GKSRelaySelfRelayNatIP
GKSRelaySelfRelayNatPort
GKSRelayPeerRelayNatIP
GKSRelayPeerRelayNatPort
ClientData
notificationEvent
didStart
callID
connType
localUseCellular
remoteUseCellular
error
NSErrorUserInfoDetailedError
NSErrorUserInfoReturnCode
InitiateInvitePush
InitiateRejectPush
InitiateAcceptPush
InitiateCancelPush
ReceivedInvitePush
ReceivedRejectPush
ReceivedAcceptPush
ReceivedCancelPush
LocalFrameRate
RemoteFrameRate
LocalBitRate
RemoteBitRate
AudioTierNetworkBitrate
AudioTierAudioBitrate
AudioTierPacketsPerBundle
AudioTierRedNumPayloads
AudioTierPayload
LocalFrameWidth
LocalFrameHeight
RemoteFrameWidth
RemoteFrameHeight
LocalPacketLossRate
RemotePacketLossRate
RoundTripTime
AVConferenceConnectionType
P2PUpgrade
Relay
FrontCaptureTime
BackCaptureTime
SessionBitRate
SessionSentBytes
SessionReceivedBytes
LocalUsesCell
RemoteUsesCell
SessionDataNonce
InviteDataCallInfoBlob
InviteDataConnectionBlob
InviteDataSKEBlob
InviteDataMediaBlob
AVConferenceBlockServiceCallID
AVConferenceBlockServiceConference
AVConferenceBlockServiceConnectionBlob
com.apple.VideoConference
-[AVConference initWithClientUUID:transportType:]
shouldDisplayNetworkQualityGraph
AVConferenceAPI
com.apple.avconference.avconference.callback.queue
conferenceDidServerDie
SERVERDIED
-[AVConference initWithClientUUID:transportType:]_block_invoke
v24@?0@"NSDictionary"8@"NSError"16
conferenceClientUUID
conferenceTransportType
conferenceInitialize
conferenceInitialized
AVConference server init failed
conferenceInputAudioPowerSpectrumToken
conferenceOutputAudioPowerSpectrumToken
-[AVConference initializeNewCallWithDeviceRole:reportingHierarchyToken:]
-[AVConference warmupForCall]
-[AVConference dealloc]
conferenceTerminate
-[AVConference sendARPLData:toCallID:]
-[AVConference sendData:forCallID:encrypted:]
-[AVConference setPeerReportingIdentifier:sessionIdentifier:forCallID:]
-[AVConference startConnectionWithCallID:oldCallID:usingInviteData:isCaller:relayResponseDict:didOriginateRelayRequest:capabilities:idsSocket:destination:error:]
None
-[AVConference startConnectionWithCallID:oldCallID:usingInviteData:isCaller:relayResponseDict:didOriginateRelayRequest:capabilities:idsSocket:error:]
-[AVConference startConnectionWithCallID:inviteData:isCaller:capabilities:destination:error:]
-[AVConference startConnectionWithCallID:usingInviteData:isCaller:relayResponseDict:didOriginateRelayRequest:capabilities:idsSocket:error:]
-[AVConference startConnectionWithCallID:oldCallID:usingInviteData:isCaller:relayResponseDict:didOriginateRelayRequest:capabilities:error:]
-[AVConference startConnectionWithCallID:usingInviteData:isCaller:relayResponseDict:didOriginateRelayRequest:capabilities:error:]
-[AVConference stopCallID:]
-[AVConference cancelCallID:]
-[AVConference remoteCancelledCallID:]
/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/AVConference.m
network-quality
float
-[AVConference remoteVideoLayer]
-[AVConference remoteVideoBackLayer]
-[AVConference setRemoteVideoLayer:]
-[AVConference setRemoteVideoBackLayer:]
-[AVConference statsForCallID:]
-[AVConference natType]
-[AVConference setSendingAudio:callID:error:]
-[AVConference setPauseAudio:callID:error:]
-[AVConference setPauseVideo:callID:error:]
-[AVConference updateCapabilities:forCallID:]
-[AVConference setServerInfo:]
Calling -conference:didStartSession:withCallID:error:
-[AVConference videoConference:didStartSession:withCallID:withUserInfo:error:]
-[AVConference videoConference:didStopWithCallID:error:]
Calling conference:withCallID:isSendingAudio:error:
Calling conference:withCallID:didPauseAudio:error:
Calling %s
-[AVConference videoConference:didStopWithCallID:error:callMetadata:]
-[AVConference videoConference:localIPChange:withCallID:]
Calling -conference:localIPChange:withCallID:
-[AVConference videoConference:remoteMediaStalled:callID:]
Calling -conference:withCallID:remoteMediaStalled:
-[AVConference videoConference:didReceiveFirstRemoteFrameForCallID:]
Calling -conference:remoteAudioPaused:callID:
Calling -conference:remoteVideoPaused:callID:
Calling -conference:didReceiveData:forCallID:
-[AVConference processRelayRequestResponse:responseDict:didOriginateRequest:]
-[AVConference processRelayUpdate:updateDict:didOriginateRequest:]
-[AVConference setConferenceState:forCallID:]
-[AVConference(Private) registerBlocksForVCNotifications]_block_invoke
conferenceCallID
conferenceConnectionStarted
conferenceError
conferenceErrorDomain
conferenceErrorCode
conferenceErrorUserInfo
conferenceUserInfo
conferenceDidStartConnection
conferenceCallMetadata
conferenceDidStopConnection
conferenceAudioSending
conferenceIsSendingAudio
conferenceAudioPause
conferenceDidPauseAudio
conferenceVideoPause
conferenceDidPauseVideo
firstRemoteFrame
conferenceDidReceiveRemoteFrame
conferenceDidRemoteAudioPause
conferenceDidRemoteVideoPause
conferenceCallNewBlob
conferenceLocalIPChange
conferenceIsRemoteMediaStalled
conferenceRemoteMediaStalled
conferenceRelayRequest
conferenceInitiateRelayRequest
conferenceSendRelayUpdate
-[AVConference(Private) registerBlocksForVCNotifications]_block_invoke_8
conferenceCancelRelayRequest
conferenceRemoteVideoAttributes
conferenceDidRemoteAttributesChange
conferenceRemoteScreenAttributes
conferenceDidRemoteScreenAttributesChange
conferenceInputFreqMetering
conferenceUpdateInputFrequencyMetering
conferenceOutputFreqMetering
conferenceUpdateOutputFrequencyMetering
conferenceInputMetering
conferenceUpdateInputMetering
conferenceOutputMetering
conferenceUpdateOutputMetering
conferenceAudioBelowThreshold
conferenceRemoteAudioBelowThreshold
conferenceIsRemote
conferenceIsVideoDegraded
conferenceVideoDegraded
conferenceNetworkHint
conferenceARPLData
conferenceReceivedARPL
conferenceData
conferenceReceivedData
-[AVConference(Private) registerBlocksForVCNotifications]_block_invoke_2
conferenceDidChangeLocalVariables
conferenceAudioEnabled
conferenceRemoteAudioEnabled
conferenceLocalAudioEnabled
conferenceCallingMode
conferenceRemoteCallingModeChanged
conferenceReinitializeCall
conferenceCloseConnection
-[AVConference(Private) serverReconnected]_block_invoke
-[AVConference(Private) serverDied]
videoPayload
parameterSet
encodeFormats
decodeFormats
-[VCMediaNegotiatorBase initWithLocalSettings:]
%s must be overridden in a subclass/category
-[VCMediaNegotiatorBase negotiationData]
-[VCMediaNegotiatorBase processRemoteNegotiationData:]
+[VCMediaNegotiatorBase initializeLocalConfiguration:negotiationData:deviceRole:preferredAudioPayload:]
+[VCMediaNegotiatorBase streamGroupIDsWithMediaBlob:]
-[VCMediaNegotiatorBase remoteMaxBandwidthForOperatingMode:connectionType:]
-[VCMediaNegotiatorBase negotiatedStreamGroupConfigForGroupID:negotiatedStreamGroupConfigs:]
-[VCMediaNegotiatorBase negotiatedResultsForGroupID:localU1Config:remoteU1Config:]
+[VCMediaNegotiatorBase getPreferredVideoPayloadList:localSupportedPayloads:]
+[VCMediaNegotiatorBase selectBestVideoRuleForTransport:payload:encodingType:videoSettings:localVideoRuleCollection:remoteVideoRuleCollection:]
-[VCHardwareSettingsMac init]
hw.model
^([^0-9]+)([0-9]+),([0-9]+)$
v32@?0@"NSTextCheckingResult"8Q16^B24
hw.cpufamily
-[VCHardwareSettingsMac _getCPUFamilyType]
Intel-K65
Intel
/System/Library/PrivateFrameworks/AppleGVA.framework/Versions/Current/AppleGVA
AVFQTXENC_GetEncodeAvailability
-[VCHardwareSettingsMac isGVAEncoderAvailable]
MacBookAir
MacBookPro8
MacPro
iMacPro
MacBookPro7,1
MacBookPro6,2
iMac10,1
iMac11,1
VCHardwareSettingsMac_CompareCPUFamilies
MacBookPro
iMac
Macmini
MacBook8
MacBook9
MacBook10
MacBookAir4,1
MacBookAir5,1
MacBookPro10,2
MacBookPro13,3
MacBookPro14,3
-[VCHardwareSettingsMac maxActiveScreenEncoders]
MacBookPro18
IOService
IOPlatformExpertDevice
board-id
-[VCHardwareSettingsMac supportsDedicatedSystemAudioStream]
-[VCAudioPowerSpectrum initWithBinCount:streamToken:sinkContext:sinkCallback:]
%@: [%f;%f] : 
 channel[%d] bins:
[%f;%f;%f]
VCAudioPowerSpectrum_LogHealth
VCAudioPowerSpectrum_PushAudioSamples
_VCAudioPowerSpectrum_SetupAudioPowerSpectrumWithBinCount
_VCAudioPowerSpectrum_SetupOctave2IndexTableWithBinCount
_VCAudioPowerSpectrum_SetupBinInterpolationWithBinCount
_VCAudioPowerSpectrum_SetupChannel
_VCAudioPowerSpectrum_SetupOctave2IndexTableForChannel
_VCAudioPowerSpectrum_SetupFFTForChannel
_VCAudioPowerSpectrum_SetupBinsForChannel
-[AVCStatisticsCollector dealloc]
-[AVCStatisticsCollector start]
-[AVCStatisticsCollector stop]
newStatistics=%s
-[AVCStatisticsCollector setStatistics:]
keys=%s
-[AVCStatisticsCollector getStatistics:]
AVCStatisticsCollector_SetVCStatistics
_AVCStatisticsCollector_GetVCStatisticsWithType
_AVCStatisticsCollector_AddEntriesFromStatistics
_AVCStatisticsCollector_UpdateMaxLocalBurstyLoss
_AVCStatisticsCollector_UpdatePacketReceivedCount
videoStreamRampUpFrozenDuration
videoStreamRampUpNoLossEventDurationRatio
videoStreamRampDownLossEventCountThreshold
videoStreamRampDownLossEventBitrateThreshold
videoStreamRampUpStatusRateLimitedThreshold
videoStreamRampDownOWRDThreshold
videoStreamRampDownLossRateThreshold
%@ state:%d OWRD:%.3f RTT:%.3f packetLossRate:%f
%8.3f/%04X:
%.4f
%.4f
%.4f
%.4f %c
RTT:%-4u
PLR:%4.2f@%.1f
RRx:0
MBL:0
%3u/%3u
 0:0/0  0:0/0 CS: 0 0 0 BB: %u
 UAT S _
-[VCVideoStreamOWRDLossEventRateControl stateChange:]
-[VCVideoStreamOWRDLossEventRateControl calculateOWRDWithTimestamp:sampleRate:time:]
CommTest
CommReport
socket() failed (%d)
getsockname() failed (%d)
supportedPayloads
nonCarrier
checkTCPSSL
favorNonCar
carrierType
addInRange
addCarrier
ignoreCache
ignoreCarrierBundle
summaryType
nonCarrierType
ifDictionary
interfaceType
commnatFlags
commnatCached
tcpCached
sslCached
gk_ci_
natTypeCache
/cache.plist
GKNATObserverDynamicStoreCallback
com.apple.gamekitservices.GKNATObserver.%p.natCheckQueue
com.apple.gamekitservices.GKNATObserver.%p.reportNATQueue
-[GKNATObserverInternal initWithOptions:]
-[GKNATObserverInternal dealloc]
-[GKNATObserverInternal setFlags:forInterface:isCached:isCachedKey:mask:]
-[GKNATObserverInternal currentNATType]
-[GKNATObserverInternal shouldTryNATCheck]
-[GKNATObserverInternal reportNATType]_block_invoke
0.0.0.0
/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/GKNATObserver.m
-[GKNATObserverInternal callCommNATTestFromIPPort:ipv6Prefix:]
CommNATMainIP
CommNATMainPort0
CommNATMainPort1
CommNATCohortIP
CommNATCohortPort0
-[GKNATObserverInternal callHTTPTestFromIPPort:ipv6Prefix:ToServer:isSSL:]
%@:%u
HTTPS
HTTP
-[GKNATObserverInternal ensureNatCachePathExists]
com.apple.conference
com.apple.gamed
natFlags
-[GKNATObserverInternal lookupCachedNATFlagsForNetwork:]
-[GKNATObserverInternal cacheNATFlags:forNetwork:]
natFlagsLastUpdated
-[GKNATObserverInternal NATCheckWithIPPort:ipv6Prefix:useCache:]
gk_ci_cache
-[GKNATObserverInternal HTTPCheckWithIPPort:ipv6Prefix:useCache:]
-[GKNATObserverInternal HTTPSCheckWithIPPort:ipv6Prefix:useCache:]
NAT64ResolverCallBack
-[GKNATObserverInternal tryNATCheckWithDelay:]
-[GKNATObserverInternal tryNATCheckWithDelay:]_block_invoke
-[GKNATObserverInternal tryNATCheckWithDelay:]_block_invoke_4
-[GKNATObserverInternal tryNATCheckWithDelay:]_block_invoke_2
State:/Network/Service/[^/]+/IPv4
State:/Network/Interface/[^/]+/IPv6
-[GKNATObserverInternal nameForNetworkWithIPPort:interfaceName:]
InterfaceName
NetworkSignature
%u.%u.%u.%u%%%@
com.apple.gamekitservices.GKNATObserver.%p
-[GKNATObserverInternal registerForNetworkChanges]
State:/Network/Interface/[^/]+/Link
Host
createTCPSocket
gk_ci_%s
-[VCAudioStreamReceiveGroup initWithConfig:]
-[VCAudioStreamReceiveGroup collectAndLogChannelMetrics:]
-[VCAudioStreamReceiveGroup didStart]
-[VCAudioStreamReceiveGroup addSyncDestination:]_block_invoke
-[VCAudioStreamReceiveGroup removeSyncDestination:]_block_invoke
-[VCAudioStreamReceiveGroup vcMediaStream:remoteMediaStalled:duration:]_block_invoke
v16@?0@"<VCMediaStreamGroupDelegate>"8
-[VCAudioStreamReceiveGroup vcMediaStream:remoteMediaStalled:duration:]_block_invoke_2
VCSPUUID
VCMSStreamGroup
VCAudioStreamReceiveGroup_UpdateAudioPriority
VCAudioStreamReceiveGroup_DebounceAudioPriority
-[VCAudioRelay setIOBufferDuration:withError:]
Cannot set VCAudioRelay property
VCAudioRelay is running
Can't start: relay IO is nil
Invalid IO
-[VCAudioRelay startRelayIO:otherRelayIO:]
-[VCAudioRelay internalStopRelayThread]
-[VCAudioRelay stopRelayIO:otherRelayIO:]
-[VCAudioRelay startClientIO]
-[VCAudioRelay startRemoteIO]
-[VCAudioRelay stopClientIO]
-[VCAudioRelay stopRemoteIO]
-[VCAudioRelay setNetworkClockID:withError:]
createRelayThreadWithError failed
pthread_cond_init failed
pthread_mutex_init failed
com.apple.avconference.audiorelay
pthread_create failed
-[VCAudioRelay newAudioConverterWithInputFormat:outputFormat:withError:]
newAudioConverterFromFormat failed
AudioConverter new failed
-[VCAudioRelay printStreamFormats]
-[VCAudioRelay startPeriodicHealthPrint]
-[VCAudioRelay startPeriodicHealthPrint]_block_invoke
com.apple.VideoConference.VCAudioRelay
-[VCAudioRelay relayCallback]
vcaudiorelay.client
client_relay_io
vcaudiorelay.remote
remote_relay_io
-[VCSessionConfiguration setSessionMode:]
-[VCSessionConfiguration updateWithClientDictionary:]
-[VCSessionConfiguration applyConfigurationUsingClientDict:]
-[VCVideoRuleCollectionsRemoteCameraEmbedded initWithHardwareSettings:]
+[AVCRTCPPacket newPacketWithRTCPPacket:packetLength:]
-[AVCRTCPPacket initWithRTCPPacket:]
packetType:%u, SSRC:%u
%@, NTPMostSignificantWord:%u, NTPLeastSignificantWord:%u, RTPTimestamp:%u, packetsSent:%u, octetsSent:%u, receiverReport:%@
%@, reportedSourceSSRC:%u, fractionLost:%u, cumulativePacketsLost:%u, extendedHighestSequenceNumber:%u, interarrivalJitter:%u, lastSRTimestamp:%u, delaySinceLastSR:%u
%@, type:%u, text:%@
Copy
Discard
SkipSpeech
JitterBuffer
jitterBufferHistoryUseShortTermWindowForTargetExpansion
jitterBufferHistoryShortTermWindowSize
jitterBufferHistoryLongTermWindowSize
State = STATE_NEWSTREAM, iSampleRate = %d
State = SETTLE
State = FILL
State = RUN
jitterBufferMinQueueSize
-[VCAudioPowerSpectrumSource initWithStreamToken:delegate:]
-[VCAudioPowerSpectrumSource dealloc]
-[VCAudioPowerSpectrumSource invalidate]
VCAudioPowerSpectrumSource_RegisterAudioPowerSpectrumSink
VCAudioPowerSpectrumSource_UnregisterAudioPowerSpectrumSink
_VCAudioPowerSpectrumSource_ProcessEventQueue
_VCAudioPowerSpectrumSource_ProcessAddEvent
gk-cdx
gk-commnat-main0
gk-commnat-main1
gk-commnat-cohort
gk-commnat-main0-name
gk-commnat-main1-name
gk-commnat-cohort-name
gk-p2p-tcp-check-url
gk-p2p-ssl-check-url
gk-p2p-video-degraded-threshold
gk-p2p-video-near-degraded-threshold
gk-p2p-media-degraded-threshold
gk-p2p-ice-timeout
gk-p2p-nat-type-timeout
gk-p2p-blob-size-max
gk-p2p-relay-bitrate-max
gk-p2p-tcp-relay-bitrate-max
gk-p2p-pre-relay-timeout
gk-p2p-video-throttling-timeout
gk-p2p-startup-timeout
gk-p2p-local-gaming-discovery-timeout
gk-p2p-local-gaming-discovery-heartbeat
gk-p2p-remote-packets-timeout
gk-p2p-network-conditions-timeout
staticnattypefromcarrierbundle
keepalivetimeoutfromcarrierbundle
gk-p2p-bitrate-max-2g
gk-p2p-bitrate-max-3g
gk-p2p-bitrate-max-lte
gk-p2p-bitrate-max-lte-v2
gk-p2p-bitrate-max-5g
gk-min-jitter-queue-size-5g
gk-p2p-bitrate-max-wifi
rtc-ss-bitrate-max-2g
rtc-ss-bitrate-max-3g
rtc-ss-bitrate-max-lte
rtc-ac-bitrate-max-2g
rtc-ac-bitrate-max-3g
rtc-ac-bitrate-max-lte
rtc-ac-relay-bitrate-max
rtc-ac-tcp-relay-bitrate-max
vc-max-bitrate-2g-uplink
vc-max-bitrate-3g-uplink
vc-max-bitrate-lte-uplink
vc-max-bitrate-nonexpensive-uplink
vc-max-bitrate-wifi-uplink
vc-max-bitrate-2g-downlink
vc-max-bitrate-3g-downlink
vc-max-bitrate-lte-downlink
vc-max-bitrate-nonexpensive-downlink
vc-max-bitrate-wifi-downlink
vc-enable-evs-audio-codec
vc-enable-red-audio
vc-red-state-value-A
vc-enable-irat-recommendation
vc-rate-controller-type
vc-viewpoint-correction-enabled
vc-facetime-photos-use-best-videorule
vc-facetime-jb-high-start
vc-facetime-jitter-buffer-mode
vc-facetime-30-fps-support
vc-primary-conn-health-allowed-delay
vc-send-feedback-controller-report
vc-server-video-packet-retransmission-enabled
vc-captions-enabled
vc-nack-generator-seq-num-aging-time
vc-nack-generator-storebag-config-version
vc-nack-generator-nack-throttling-plr-buckets
vc-nack-generator-nack-throttling-factor-buckets
vc-nack-generator-nack-bit-rate-limiting-max-ratio
vc-nack-generator-population-percentage-with-additional-delay-budget
vc-adaptive-learning-enabled
vc-short-term-history-length
vc-long-term-history-length
vc-adaptive-learning-A
vc-adjustment-factor-A
vc-short-term-value-weight-A
vc-long-term-value-weight-A
vc-adaptive-learning-B
vc-adjustment-factor-B
vc-short-term-value-weight-B
vc-long-term-value-weight-B
vc-adjustment-factor-C
vc-short-term-value-weight-C
vc-long-term-value-weight-C
vc-prefer-relay-over-p2p-threshold
vc-always-on-audio-redundancy-enable-threshold
vc-high-fec-enable-threshold
vc-low-fps-video-enable-threshold
vc-vplr-fec-enable-threshold
vc-video-redundancy-percentage-max
vc-ab-testing-use-video-jitter-for-video-playout
vc-fast-media-duplication-enable-threshold
vc-iRAT-rtp-enable-threshold
vc-pre-warm-cell-enable-threshold
vc-duplicate-important-pkts-enable-threshold
vc-allow-bursty-loss-ramp-down-enable-threshold
vc-hevc-wifi-tiers-enable-threshold
vc-viewpoint-correction-enable-threshold
vc-heif-hevc-live-photos-enable-threshold
vc-wifi-low-tier-redundancy-enable-threshold
vc-cellular-low-tier-redundancy-enable-threshold
vc-iRAT-metrics-enable-threshold
vc-fec-header-v1-enable-threshold
vc-updated-AFRC-header-enable-threshold
vc-secure-messaging-enable-threshold
vc-disable-SIP-enable-threshold
vc-wifi-assist-duplication-enable-threshold
vc-wifi-assist-budget-status-enable-threshold
vc-wifi-assist-status-bar-enable-threshold
vc-low-network-mode-enable-threshold
vc-duplication-enhancement-enable-threshold
vc-video-jb-enable-threshold-v2
vc-iRAT-duplication-enable-threshold
vc-wrm-rssi-threshold-enable-threshold
vc-wrm-rssi-threshold-distribution
vc-media-driven-duplication-enable-threshold
vc-ab-test-master-local-switches
vc-ab-test-audio-enhancement-feature-combinations
vc-ab-test-video-enhancement-feature-combinations
vc-ab-test-network-enhancement-feature-combinations
vc-ab-test-rate-control-enhancement-feature-combinations
vc-ab-test-media-duplication-enhancement-feature-combinations
vc-ab-testing-state
vc-ab-testing-use-rtt-for-fir-throttling
vc-link-probing-capability-version
vc-link-probing-feature-threshold
vc-link-probing-interval
vc-link-probing-timeout
vc-link-probing-query-results-interval
vc-link-probing-exponential-moving-mean-factor
vc-link-probing-envelope-attack-factor
vc-link-probing-envelope-decay-factor
vc-link-probing-connection-lockdown-period
vc-link-probing-plr-buckets
vc-nw-connection-monitor-enabled
vc-video-jitter-buffer-for-video-playout
vc-video-player-enable-loose-sync-for-facetime
vc-video-player-enable-reference-frame-for-facetime
vc-video-enable-late-frame-recovery
vc-duplication-media-driven-duplication-enabled
vc-ids-link-suggestion-enabled
vc-link-probing-duplication-wait-timeout
vc-link-probing-identical-query-result-max
vc-link-probing-lockdown-period
vc-video-transmitter-minimum-key-frame-generation-interval-for-facetime
vc-video-receiver-deferred-assembly-offset
vc-core-motion-detection-enabled
vc-decryption-timeout-interval
vc-decryption-mkm-recovery-interval
vc-new-session-joining-interval
GKSConnSettingsUpdate
vc-remote-media-stall-timeout
vc-no-remote-duplication-threshold-fast
vc-wrm-pending-bitrate-cap-delta
vc-fec-vectorization-enabled
vc-fec-generator-enabled
vc-fec-feedback-version
vc-fec-feedback-analyzer-level-match-percentile
vc-fec-feedback-analyzer-buffer-max-length
vc-fec-feedback-analyzer-report-min-period
vc-fec-feedback-analyzer-vplr-window-size
vc-fec-feedback-analyzer-interpolation-threshold
vc-video-priority-enabled
vc-low-quality-audio-stream-on-demand
vc-low-quality-video-stream-on-demand
vc-audio-issue-detector-enabled
vc-rtcp-psfb-for-loss-feedback
vc-rtcp-psfb-for-ltr-ack
+[GKSConnectivitySettings setAddress:forService:]
+[GKSConnectivitySettings setServerAddresses:]
specialAllocForHeapInspection
+[GKSConnectivitySettings setClientOptions:]
+[GKSConnectivitySettings getCachedIPPort]
+[GKSConnectivitySettings getIPPortForService:]
+[GKSConnectivitySettings clearAllSettingsWithRefreshIntervalInSeconds:]
+[GKSConnectivitySettings supportsEVSCodec]
+[GKSConnectivitySettings supportsRedAudio]
+[GKSConnectivitySettings supportiRATRecommendation]
NOT 
+[GKSConnectivitySettings getRateControllerType]
+[GKSConnectivitySettings getDecryptionTimeoutInterval]
+[GKSConnectivitySettings getDecryptionMKMRecoveryInterval]
+[GKSConnectivitySettings getNewSessionJoiningInterval]
useAdaptiveLearningForFaceTime
+[GKSConnectivitySettings getAdaptiveLearningState]
+[GKSConnectivitySettings getShortTermHistoryLength]
+[GKSConnectivitySettings getLongTermHistoryLength]
+[GKSConnectivitySettings getAdaptiveLearningA]
+[GKSConnectivitySettings getAdjustmentFactorA]
+[GKSConnectivitySettings getShortTermValueWeightA]
+[GKSConnectivitySettings getLongTermValueWeightA]
+[GKSConnectivitySettings getAdaptiveLearningB]
+[GKSConnectivitySettings getAdjustmentFactorB]
+[GKSConnectivitySettings getShortTermValueWeightB]
+[GKSConnectivitySettings getLongTermValueWeightB]
+[GKSConnectivitySettings getAdjustmentFactorC]
+[GKSConnectivitySettings getShortTermValueWeightC]
+[GKSConnectivitySettings getLongTermValueWeightC]
+[GKSConnectivitySettings getWRMRSSIThresholdValue:]
-80,-80,-80,-80,-80,-80,-80,-83,-85,-87
preferRelayOverP2PThreshold
alwaysOnAudioRedundancyEnableThreshold
highFecEnableThreshold
lowFpsVideoEnableThreshold
vplrFecEnableThreshold
fastMediaDuplicationEnableThreshold
iRATRtpEnableThreshold
preWarmCellEnableThreshold
duplicateImportantPktsEnableThreshold
allowBurstyLossRampDownEnableThreshold
hevcWifiTiersEnableThreshold
viewpointCorrectionEnableThreshold
heifHevcLivePhotosEnableThreshold
wifiLowTierRedundancyEnableThreshold
cellularLowTierRedundancyEnableThreshold
iRATMetricsEnableThreshold
fecHeaderV1EnableThreshold
updatedAFRCHeaderEnableThreshold
secureMessagingEnableThreshold
disableSIPEnableThreshold
wifiAssistDuplicationEnableThreshold
wifiAssistBudgetStatusEnableThreshold
wifiAssistStatusBarEnableThreshold
lowNetworkModeEnableThreshold
duplicationEnhancementEnableThreshold
videoJBEnableThreshold
iRATDuplicationEnableThreshold
wrmRSSIThresholdEnableThreshold
mediaDrivenDuplicationEnableThreshold
UseVideoJitterForVideoPlayoutForFaceTime
useRTTForFIRThrottling
+[GKSConnectivitySettings getThresholdForSwitch:]
+[GKSConnectivitySettings getAbTestMasterLocalSwitches]
+[GKSConnectivitySettings getAbTestingState]
abTestingState
0,1,2,3
0,1,2,4,8,15
+[GKSConnectivitySettings getTestGroupPermutations:]
+[GKSConnectivitySettings getRemoteMediaStallTimeout]
+[GKSConnectivitySettings getNoRemoteDuplicationThresholdFast]
+[GKSConnectivitySettings getVCRCSeverBagConfigWithKey:]
+[GKSConnectivitySettings getStorebagValueForStorebagKey:userDefaultKey:defaultValue:isDoubleType:]
+[GKSConnectivitySettings getFeatureFlagForStorebagKey:userDefaultKey:featureFlagDomain:featureFlagName:]
+[GKSConnectivitySettings getStorebagValueStorebagKey:defaultValue:]
-[VCRedundancyControlAlgorithmVideo initWithRedundancyControllerMode:maxAllowedRedundancyPercentage:mediaControlInfoFECFeedbackVersion:]
-[VCRedundancyControlAlgorithmVideo setupFeedbackAnalyzerConfig]
-[VCRedundancyControlAlgorithmVideo stateRunning:]
-[VCRedundancyControlAlgorithmVideo stateFrozen:]
-[VCRedundancyControlAlgorithmVideo reset]
-[VCRedundancyControlAlgorithmVideo processNWConnectionStatistics:]
-[VCRedundancyControlAlgorithmVideo processRCNetworkStatistics:]
-[VCRedundancyControlAlgorithmVideo computeRedundancyWithLossPercentage]
GKVoiceChatServiceErrorDomain
videoStreamRampDownNOWRDThreshold
videoStreamRampUpNOWRDThreshold
videoStreamRampDownNOWRDAccThreshold
videoStreamRampUpNOWRDAccThreshold
%@ state:%d OWRD:%.3f NOWRD:%.3f NOWRDACC:%.3f RTT:%.3f packetLossRate:%f rampingStatus:0x%04X
%8.3f/%04X:
%.4f
%.4f
%.4f
%.4f %c
RTT:%-4u
PLR:%4.2f@%.1f
RRx:%3u
MBL:0
%3u/%3u
 0:0/0  0:0/0 CS: 0 0 0 BB: %u
%04X
 UAT S _
-[VCVideoStreamNOWRDLossEventRateControl stateChange:]
-[VCVideoStreamNOWRDLossEventRateControl calculateOWRDWithTimestamp:sampleRate:time:]
-[VCTransportSessionNW initWithRTPNWConnectionID:RTCPNWConnectionID:handlerQueue:context:notificationHandler:eventHandler:]
-[VCTransportSessionNW handleStateChanges:error:semaphore:operationResult:]
-[VCTransportSessionNW setStateChangeHandlerForConnection:result:semaphore:]
-[VCTransportSessionNW setStateChangeHandlerForConnection:result:semaphore:]_block_invoke
v20@?0i8@"NSObject<OS_nw_error>"12
-[VCTransportSessionNW setupNWConnection:]
-[VCTransportSessionNW createVFD:forStreamType:]
-[VCTransportSessionNW start]
Start VCTransportSessionNW failed
Failed to schedule receives for nw_connection
-[VCTransportSessionNW dupRTPNWConnectionBackingSocketForNWConnection:]
llw0
-[VCTransportSessionNW initializeInterfaceType]_block_invoke
B16@?0@"NSObject<OS_nw_interface>"8
-[VCTransportSessionNW initializeNetworkMTU]
-[VCTransportSessionNW initializeIsIPv6]
-[VCAudioStreamGroupCommon initWithConfig:audioCallback:context:audioDirection:]
streamGroupID=%s participantUUID=%@ 
{ %@ %s }
Send Group
Receive Group
-[VCAudioStreamGroupCommon configurePowerSpectrumSource]
-[VCAudioStreamGroupCommon setupStreamsWithStreamInfos:]
-[VCAudioStreamGroupCommon configureAudioIOWithDeviceRole:operatingMode:]
-[VCAudioStreamGroupCommon reconfigureAudioIOIfNeededWithDeviceRole:operatingMode:]
-[VCAudioStreamGroupCommon startCapture]
-[VCAudioStreamGroupCommon stopCapture]
-[VCAudioStreamGroupCommon configureStreams:withRateControlConfig:]
-[VCAudioStreamGroupCommon collectAndLogChannelMetrics:averagePower:]
Send
Receive
-[VCAudioStreamGroupCommon enqueueSyncDestinationChangeEvent:eventType:]
-[VCAudioStreamGroupCommon didSuspendAudioIO:]
-[VCAudioStreamGroupCommon didResumeAudioIO:]
VCSPAPSReg
-[VCAudioStreamGroupCommon didUpdateBasebandCodec:]
_VCAudioStreamGroup_AddSyncDestination
_VCAudioStreamGroup_RemoveSyncDestination
DynamicStoreCallbackForWifiChanges
State:/Network/Interface/
State:/Network/Interface/pdp_ip
/IPv4
/IPv6
-[GKInterfaceListener hasConnectionWithWifi:cell:]
GKInterfaceListener%d
State:/Network/Interface/[^/]+/IPv4
State:/Network/Interface/[^/]+/LinkIssues
-[GKInterfaceListener startChangeListener]
-[GKInterfaceListener startRoutingChangeListener]_block_invoke
v12@?0i8
-[GKInterfaceListener startRoutingChangeListener]
LinkIssues
checkForLinkIssues
TimeStamp
ModuleID
Info
-[VCRedundancyControlAlgorithmVideoIpadCompanion updateRedundancyStrategyWithNetworkStatistics:]
configuration
maxBandwidth
configurationExtension
mode_Invalid
mode_Default_Wifi
mode_Default_LTE
mode_FaceTime_Wifi
mode_FaceTime_LTE
mode_Screen_Wifi
mode_Screen_LTE
mode_FaceTime_3G
mode_Screen_3G
mode_Default_3G
mode_FaceTime_2G
mode_Screen_2G
mode_Default_2G
mode_iPadCompanion_AWDL
mode_iPadCompanion_USB
mode_FaceTime_5G
mode_RemoteCamera_AWDL
mode_RemoteCamera_USB
mode_SUPPORTED
(unknown: %i)
+[VCRateControlUtil calculateNOWRDWithDuration:owrdList:historySize:minHistorySize:initalRampUpReadyDuration:isInitialRampUp:]
VideoWidth
VideoHeight
FrameRate
ForceMirrorMode
EnableClearScreen
ResolutionScaling
ScreenDisplayID
ScreenCaptureIsWindowed
ScreenCaptureMachPort
ScreenCaptureUUID
PixelFormat
EnableIdleFrameAdjustments
ScreenWatcherExempt
ShouldSupressDRMContent
ShouldAllowReconfigureForLocalDisplay
ShouldOptimizeForLowLatency
BiomeEventType
-[ICEResultWaitQueue copyResultForCallID:]
com.apple.AVConferenceVCMomentsHistory.moments
enableLocalVideoRecording
VCMomentsHistoryFrameAllocator
-[VCMomentsHistory addLocalAudioSample:timestamp:]
-[VCMomentsHistory addRemoteAudioSample:timestamp:]
-[VCMomentsHistory updateRemoteScreenAttributes:]_block_invoke
VCMomentsHistory_UpdateResizeFlag
-[VCMomentsHistory getPhotoWithTransactionID:timestamp:completionHandler:]
-[VCMomentsHistory getPhotoWithTransactionID:timestamp:completionHandler:]_block_invoke
VCMomentsHistory
-[VCMomentsHistory endRecording:timestamp:completionHandler:]
-[VCMomentsHistory endRecording:timestamp:completionHandler:]_block_invoke
-[VCMomentsHistory historyBuffer:didDequeueSample:timestamp:]
_getActiveWriters
v24@?0@"NSURL"8@"NSError"16
-[VCMomentsHistory cleanupActiveRequests]
-[VCMomentsHistory cleanupActiveRequests]_block_invoke
-[VCMomentsHistory cleanupActiveRequests]_block_invoke_2
-[VCMomentsHistory cancelRequestWithTransactionID:]
-[VCMomentsHistory cancelRequestWithTransactionID:]_block_invoke
-[VCMomentsHistory setImageType:]_block_invoke
-[VCMomentsHistory setVideoCodec:]_block_invoke
bCameraStatusBits
-[VCMomentsHistory setupStillImageWithTimestamp:transactionID:visibleRect:cameraStatusBit:imageType:]
AVConference:MomentsResize
-[VCMomentsHistory setupResizingSessionsWithVisibleRect:cameraStatusBit:]
-[VCMomentsHistory rewriteMovieMetadataWithURL:transactionID:]
-[VCMomentsHistory handleSinglePendingRequestWithTransactionID:sourceURL:]
-[VCMomentsHistory updateAudioBuffer:WithSample:timestamp:]
localAudioBuffer
remoteAudioBuffer
-[VCMomentsHistory updateVideoBuffer:withPresentationTime:sampleBufferCopy:cameraStatusBits:timestamp:]
FixedBandwidth
GaussianBandwidth
AQMBandwidth
-[VCEmulatedNetworkAlgorithmQueueBandwidth updateSettingsAtTime:impairments:]
-[VCEmulatedNetworkAlgorithmQueueBandwidth process:]
time
value
VCEmulatedNetworkAlgorithm_UpdateIndexWithIntervalArray
mean
stdDev
capabilities
supportedVideoCodecs
supportedImageTypes
multiwayCapabilities
-[VCRateControlAlgorithmSparseNOWRD configure:restartRequired:]
Configure with targetBitrate=%d, minBitrate=%d, maxBitrate=%d, burstyTraffic=%d
-[VCRateControlAlgorithmSparseNOWRD doRateControlWithStatistics:]
-[VCRateControlAlgorithmSparseNOWRD doRateControlWithVCRCStatistics:]
-[VCRateControlAlgorithmSparseNOWRD doRateControlWithBasebandStatistics:]
Disable baseband adaptation due to FR2 RATType
[%u] Ramp up bitrate to %u
[%u] Congestion!!! New bitrate down to %u
[%u] Congestion due to baseband!!! New bitrate down to %u
-[VCRateControlAlgorithmSparseNOWRD printRateControlInfoToLogDump]
%8.3f/%04X:
%.4f
%.4f
%.4f
%.4f %c
RTT:%-4u
PLR:%4.2f@%.1f
RRx:%u
MBL:%d %u
%4u/%4u
 %4u:%4u/%4u  %4u:%4u/%4u  CS: %04X %04X %u BB: %3u
%s UAT %s
VCTextStream
-[VCTextStream init]
-[VCTextStream dealloc]
-[VCTextStream sendCharacter:]
-[VCTextStream sendText:]
-[VCTextStream didReceiveCharacter:]
Failed to allocate the text receiver
%s:%d
/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCTextStream.m
Invalid Parameter
Called with an invalid parameter
-[VCTextStream onConfigureStreamWithConfiguration:error:]
Failed to create transport
Create transport failed
127.0.0.1
com.apple.AVConference.LoopbackSocketTunnel.ReceiveProc
-[LoopbackSocketTunnel initWithPort:delegate:error:]
LoopbackSocketTunnel init failed
FigThreadCreate failed
-[LoopbackSocketTunnel setVTPIP:]
LoopbackTunnelReceiveProc
rtpSSRC
audioUnitModel
supportFlags
payloadFlags
secondaryFlags
useSBR
com.apple.AVConference.vcRateControllerManager.delegateQueue
-[VCRateControllerManager registerRateSharingClient:forInterfaceType:]
-[VCRateControllerManager deregisterRateSharingClient:]
IDR Scheduler Item: Budget=%d (frames) weightFactor:%d framePosition:%@ streams:%@
-[VCRedundancyControllerVideo initWithDelegate:mode:parameters:]
isRSUOptimizationEnabled
UseNWConnectionNotificationForVideoRedundancyController
-[VCRedundancyControllerVideo updateRedundancyStrategyWithNetworkStatistics:]
-[VCRedundancyControllerVideo reportRedundancyPercentage:redundancyInterval:]
-[VCRedundancyControllerVideo resetRedundancyStrategy:]
-[VCMediaKeyIndex initWithBytes:bufferSize:]
unmapped
%@(%d):%@
-[VCMediaKeyIndex setMapping:]
-[VCMediaKeyIndex isEqual:]
-[VCMediaKeyIndex isStartingWithPrefix:]
VCMediaKeyIndex_MappedKeyBytes
initialBitrateTierFromLearntBitrateWithCellTech
AFRCCreateHandle
AFRCCreateHandle_block_invoke
BTPw
RxPC
RxSC
TxPC
TxSC
v16@?0^v8
AFRCUpdateOperatingMode
AFRCCloseHandle
AFRCSetTxCap
UpdateRxEstimate
AFRCCalcRxEstimate
AFRCSetAudioBitRate
New audio rate [%ukbps], fraction [%.2f], FEC [%.2f], RED[%u %u]
AFRCSetAudioPayload
AFRCGetAudioTxInfo
AFRCGetTxInfo
AFRCRecordMaxBurstyLoss
AFRCRecordMaxAudioConsecutiveLoss
AFRCUpdateVideoSendingBitrate
AFRCUpdateAudioSendingBitrate
AFRCSetFeedbackControlInfo
AFRCGetPeerArrivalTime
AFRCProcessVideoReceiveMetric
AFRCProcessFeedbackPacket
AFRCGetStat
AFRCProcessBasebandNotification
AFRCSetReceiveQueueSize
Video %s...
AFRCSetAudioPaused
AFRCSetAudioSilent
AFRCSetPLCalc
AFRCUpdateCellTech
AFRCUpdateRateTier
AFRCProcessWCMSetCallConfig
AFRCProcessWCMGetCallConfig
AFRCMarkNetworkChange
network state changed.
AFRCAddBBDump
AFRCMarkResetCS
reset connection stats.
AFRCSetConnectionNumber
connection #: (%d->%d).
BWEstResetRecvrBWState
BWEUpdateFilterType
BWEUpdateSenderRecvrEnabledStates
AFRCSetBWEstMode
AFRCGetSendersLogState
AFRCGetSenderRecvrModes
AFRCSetBWECap
AFRCSetStatisticsCollector
AFRCLog_OpenLogs
AFRC
com.apple.VideoConference.AFRClog
STime
dTime/ETxTS
OWRD
NOWRD
NOWRDS
NOWRDA
PLR/FEC
BR/TR
MQIn: A/V
MQOut: A/V
ABRL
TxAT
MODE
TxSTATE
Audio:PL/Rate
connection #: %d.
com.apple.VideoConference.AFRClogFB
MyTxTS
Delay
RecvKb
BLoss
AudioRecvPkt
VideoRecvPkt
YrTxTS
OWRD
AFRC-DashBoard.dump
========== Start logging from File %d ==========
AFRCCalcRxEstimate_New
NEW AFRCCalcRxEstimate [%d]: [%f] //////
/////tp: %d  ts/arr: %d/%f 
 seq: %d sz: %d 
 Probe: %d/%d 
 path: %d (%d)  BWD: %f/%f  Est: %f
///// 
 TS: %d  
 arrival: %f/%f 
 total: %d/%d (%.1f ms) ref_size: %d
NEW AFRCCalcRxEstimate: [%d]  (%d %d)  //////
NEW AFRCCalcRxEstimate: [%d]  //////
///// 
 LOSS [%d/%d] @ %d: //////
%ums(%u)%c 
UpdateBigFrameReporter
UpdateBBAction
%s%sAudio[%u %.2f %.2f %u %u], Action[%02X->%02X(%u)]%s.
HWM is hit! 
AWM is hit! 
Detected AS, restore state. 
Missed AS. 
, ignore samples
Stopped
Resumed
RampDownTxRate
Congestion!!! TxRate v %u, Baseband.
Rate change [%u] (Ramp Down to %u, Baseband).
Initial Rampup done!
Initial Rampup done!
DoRateControl
Congestion!!! TxRate v %u
Rate change [%u] (Ramp Down to %u, AFRC).
Congestion!!! Pause video.
Congestion!!! Pause video.
AFRC: Congestion!!! Pause video.
Initial Rampup Done!
TxRate ^ %u
Rate change [%u] (Ramp Up to %u).
Initial Rampup Done!
DetectCongestion
[%u] Rate was limited
Rate is limited(%ukbps).
[%u] Stabilized (TxTS %u >= %u FB). now collecting samples...
Rate(%ukbps) stabilized.
[%u] Collected %d samples (TxTS %u)
AFRC collected %d samples.
OWRD has been 0 for %f seconds, reset NOWRDAcc
AFRCLog_PrintCongestionInfo
%8.3f
%8.3f/%04X:
%.4f(%d)
RTT:%-4u
PLR:%4.1f@%.1f
RRx:%u
MBL:%u
%3u/%3u
 %3u:%3u/%3u  %3u:%3u/%3u
BB: %u
%s%s
 UAT
 LAT
AFRCLog_PrintCongestionFullInfo
%8.3f/%04X:
%.4f
%.4f
%.4f
%.4f %c
RTT:%-4u
PLR:%4.1f@%.1f
RRx:%u
MBL:%d %u
%3u/%3u
 %3u:%3u/%3u  %3u:%3u/%3u CS: %1d %3u %3u BB: %u
%s%s%s
%d/%d
%04X 
AFRCUpdateBBNote
Rate change done, [%.6f %u>=%d %u%s], taking new samples.
Still trying to flush baseband with flush counter: %d. Stop ramp-up and possibly decrease audio fraction based on BBAvgTxRate: %d
Flush counter: %d stuck for more than %d seconds. And baseband shows TxRate:%d, TxDelay:%d. Reset the flush counter.
Congestion!!! TxRate v %u, BaseBand.
%2u%2u%2u%2u%2u %6u
%u %4u
%.4f
%.4f
%4u %.2f %c(%1d,%1d) %1d %4d
%2u%2u%2u%2u%2u %6u
%u [Bogus notification, discard]
Get Out of Antenna Imbalance Mode!
Get Into of Antenna Imbalance Mode!
%s TID[%04X] Drop ACK for PT %u: %2u packets dropped [%s]%s
, taking new samples.
%s TID[%04X] Drop ACK, no packet dropped%s
%s TID[%04X] Drop ACK reported a failure%s
%s Request video refresh for PT (%u).
com.apple.VideoConference.AFRClogBB
STime
ATime
V-R-A-F-T
XmitB
LTxTS
ABRS
ABRL
BDCD
NBDCD
forcedTxCap
forcedTxRate
forcedPLRForAudioFEC100
forcedPLRForAudioFEC150
forcedPLRForAudioFEC200
ConfigureAFRCDefaults
rateControlAllowVideoStop
rateControlAllowBurstyLossRampDown
BWEstInit
BWEstEnableNewEstSenderSide
BWEstEnableNewEstRecvrSide
BWEstProbeInterval
BWEstLogType
BWEstLogLevel
BWEstDemoLogInterval
HackUploadBW
V1BWE
BWEstConfigureDefaults
BWEstUninit
BWEstCheckIfLargeFrameNeeded
setCapOnLF
BWE_FILTER__NONE
BWE_FILTER__WIFI
BWE_FILTER__CELLULAR_2G_3G
BWE_FILTER__CELLULAR_LTE
UNEXPECTED
MediaQueue_CreateHandle
MediaQueue_CloseHandle
MediaQueue_Start
com.apple.avconference.mediaqueue.sendproc
MediaQueue_Stop
MediaQueue_Malloc
MediaQueue_FreePacket
MediaQueue_AddPacket
MediaQueue_SetRedundantAudio
MediaQueue_SetAudioFraction
MediaQueue_SetAudioFECLevel
MediaQueue_GetTimeRateChanged
MediaQueue_UpdateAudioOnlyRateChange
MediaQueue_RecordNewPacketWithSize
MediaQueue_FindPacketInTxHistory
MediaQueue_CleanupTxHistory
MediaQueue_SetPLCalc
MediaQueue_SetActiveProbingLog
MediaQueue_SetAFRCSendMode
MediaQueue_SetRTPHandle
ActiveProbing_ProcessIncomingPacket
ActiveProbing_FlushPendingPackets
MediaQueue_SetThrottlingAudioInterval
MediaQueue_SetThrottlingIsIPv6
MediaQueue_RetrieveAudioVideoRates
MediaQueue_SetFECFeedbackVersion
MediaQueueSendProc
MediaQueue_SendPacket
MediaQueue - Last sent audio delayed. lastSentAudioPacketTime=%f currentTime=%f delta=%f
MediaQueue_UpdateSeqNumber
_MediaQueue_CheckActiveProbingQueueLength
ActiveProbing_Uninit
ActiveProbing_UpdateRTPProbeSeqId
-[VCControlChannelMultiWay(Encryption) updateEncryptionWithEncryptionMaterial:]
-[VCControlChannelMultiWay(Encryption) updateEncryptionWithKeyMaterial:]
-[VCControlChannelMultiWay(Encryption) setCurrentSendMKIWithKeyMaterial:]
-[VCControlChannelMultiWay(Encryption) updateEncryption:derivedSSRC:]
-[VCControlChannelMultiWay(Encryption) encryptData:size:sequenceNumber:]
-[VCControlChannelMultiWay(Encryption) decryptWithMKI:data:size:sequenceNumber:]
-[VCEmulatedNetwork initWithPolicies:]
RSUtil_SetOptimizationModeForFECUnit
_RSU_DecodeByteBuffer
RSU_Decode
_RSU_PrepareErasureLocationsInfo
_RSU_DecodeByteBufferSimd
_RSU_ScatterRecoveryDataToSimdOneSymbol
_RSU_GatherDecodedDataOneSymbol
_RSU_ScatterRecoveryDataToSimdTwoSymbols
_RSU_GatherDecodedDataTwoSymbols
_RSU_ScatterRecoveryDataToSimdFourSymbols
_RSU_GatherDecodedDataFourSymbols
-[VCVideoStreamTransmitter initWithConfig:]
com.apple.VideoConference.VCVideoStreamTransmitter
com.apple.VideoConference.VCVideoTransmitter.Encoder
-[VCVideoStreamTransmitter startVideo]
VCVideoStreamTransmitter_EnqueueVideoFrame
cameraStatusBits
-[VCVideoStreamTransmitter generateKeyFrameWithFIRType:]
-[VCVideoStreamTransmitter setTemporaryMaximumBitrate:]_block_invoke
VCVideoStreamTransmitter_SetFECRatio
-[VCVideoStreamTransmitter setFECRedundancyVector:]
-[VCVideoStreamTransmitter setMediaSuggestion:]
-[VCVideoStreamTransmitter setEncodingMode:]
-[VCVideoStreamTransmitter handleThermalLevelChange:]
-[VCVideoStreamTransmitter updateWindowState:isLocal:windowRect:]
-[VCVideoStreamTransmitter encodeVideoFrame:]
-[VCVideoStreamTransmitter prependSPSPPS:dataPointer:sampleBuffer:]
-[VCVideoStreamTransmitter transmitEncodedVideoFrame:cameraStatusBits:]
-[VCVideoStreamTransmitter transmitEncodedVideoFrame:size:timestamp:hostTime:cameraStatusBits:]
-[VCVideoStreamTransmitter transmitFrameInGroups:numOfPackets:timestamp:hostTime:cameraStatusBits:]
-[VCVideoStreamTransmitter gatherRealtimeStats:]
VCVSTxMaxFrameDuration
VCVSTxAvgBitrate
VCVSTxMaxBitrate
VCVSTxMinBitrate
%5.2f
VCVSTxAvgFramerate
VCVSTxMaxFramerate
VCVSTxMinFramerate
VCVSTxKeyFramesSent
VCVSKeyFrameSize
-[VCVideoStreamTransmitter handleActiveConnectionChange:]
VCVideoStreamEncoderProc
encoderFrameCallback
com.apple.AVConference.VCCaptionsManager.XPCCommandQueue
-[VCCaptionsManager registerCaptionsSource:streamToken:]_block_invoke
vcCaptionsEnabled
vcCaptionsError
vcCaptionsDidEnableCaptions
vcCaptionsDisabled
vcCaptionsDidDisableCaptions
vcCaptionsStartReason
vcCaptionsDidCaptionsStart
vcCaptionsStopReason
vcCaptionsDidCaptionsEnd
vcCaptionsTranscription
vcCaptionsDidUpdateCaptions
JitterQueue_Insert
JitterQueue_Reset
JitterQueue_DiscardExcess
VCNWConnectionMonitor_Create
VCNWConnectionMonitor_CreateWithInterfaceName
VCNWConnectionMonitor_Destroy
VCNWConnectionMonitor_SetNotificationHandler
VCNWConnectionMonitor_SetPacketEventHandler
_VCNWConnectionMonitor_AddNotification
%llu
%llu
%llu
%llu
0x%x
%2.4f
_VCNWConnectionMonitor_ComputeMetrics
_VCNWConnectionMonitor_ProcessNotification
VCNWConnectionMonitor_SetStatisticsHandler
_VCNWConnectionMonitor_DispatchedCreate
_VCNWConnectionMonitor_DispatchedCreateWithInterfaceName
%p-%s
VCNWConnectionMonitor
.nwmonitordump
STime
Timestamp
Version
Direction
ByteCount
QSize1
QSize2
Delay
Throughput
TxRate
RateTrend
FrequencyBand
IntermittentState
IntermittentPeriod
SingleOutagePeriod
BtCoex
RadioCoex
ScoreDelayTx
ScoreDelayRx
ScoreLossTx
ScoreLossRx
ScoreChannel
OffChannelRatio
WlanDutyCycle
WifiObservedTxBitrate(BE)
WifiObservedTxBitrate(BK)
WifiObservedTxBitrate(VI)
WifiObservedTxBitrate(VO)
WifiObservedTxBitrate(LLW0)
WifiObservedTxBitrate(LLW1)
1234::1234
1234
120.0.0.1
_VCNWConnectionMonitor_DispatchedCreateWithInterfaceName_block_invoke
_VCNWConnectionMonitor_DispatchedCreateWithInterfaceName_block_invoke_2
v20@?0i8^{nw_error=}12
_VCNWConnectionMonitor_CheckAndReleaseNWMonitor
_VCNWConnectionMonitor_DispatchedDestroy
_VCNWConnectionMonitor_DispatchedSetNotificationHandler_block_invoke
v28@?0*8Q16i24
_VCNWConnectionMonitor_DispatchedSetPacketEventHandler_block_invoke
_VCNWConnectionMonitor_DispatchedSetPacketEventHandler_block_invoke_2
v32@?0i8^[16C]12Q20i28
_VCNWConnectionMonitor_DispatchedSetStatisticsHandler_block_invoke
-[AVCEffects initWithDelegate:]
com.apple.avconference.effects
vcEffectsInitialize
ERROR
-[AVCEffects dealloc]
vcEffectsTerminate
-[AVCEffects setDelegate:]
-[AVCEffects setupRemoteReceiverQueueWithSenderQueue:]
vcEffectsServerDidDisconnect
vcEffectsServerTimeOut
vcEffectsFrameTime
vcEffectsClientReleasedVideoFrame
-[AVCEffects setMode:]
-[AVCEffects setEffectType:]
-[AVCEffects encodeProcessedVideoFrame:]
-[VCSessionUplinkVideoStreamController initWithVideoStreams:streamInfos:reportingAgent:delegate:]
-[VCSessionUplinkVideoStreamController setStreamIDsCell:]
-[VCSessionUplinkVideoStreamController setStreamIDsWifi:]
-[VCSessionUplinkVideoStreamController setPendingVideoStreams:]
-[VCSessionUplinkVideoStreamController printPendingKeyFrameWarningOnThresholdTimeElapsedWithCurrentFrameTime:]
-[VCSessionUplinkVideoStreamController setCurrentFrameTime:]
-[VCSessionUplinkVideoStreamController setIsLocalOnCellular:cappedVideoStreamIDs:]
-[VCSessionUplinkVideoStreamController setStreamsUseRTCPWithStreamInfos:]
-[VCSessionUplinkVideoStreamController anchorStreamIDWithCappedVideoStreamIDs:]
(%p) %s
-[VCSessionUplinkVideoStreamController initilizeStreamInfoMapWithStreamInfos:]
_streamInfoMap:
-[VCSessionUplinkVideoStreamController resumeStreams]
-[VCSessionUplinkVideoStreamController shouldGenerateIDRWithStreamSchedule:]
-[VCSessionUplinkVideoStreamController pauseStreams]
-[VCSessionUplinkVideoStreamController videoStreamPendingKeyFrameGenerationWithStreamID:shouldRemoveFromPendingArray:]
-[VCSessionUplinkVideoStreamController handleStreamsResetIDR]
-[VCSessionUplinkVideoStreamController restart]
v32@?0@"NSNumber"8@"VCVideoStream"16^B24
-[AVCPacketFilter isMatchedPacket:size:]
-[AVCPacketFilterRTP initWithIncomingSSRC:acceptPacketType:]
ACDTXEncoderFactory
ACDTXDecoderFactory
ACOpusEncoderFactory
ACOpusDecoderFactory
ACAMREncoderFactory
ACAMRDecoderFactory
ACEVSEncoderFactory
ACEVSDecoderFactory
ACSpeexEncoderFactory
ACSpeexDecoderFactory
RegisterExternalAudioCodecs
/System/Library/Frameworks/AudioToolbox.framework/AudioCodecs
VCMediaQueueUtil_FindPacketInTxHistory
+[VCAudioRuleCollection getForcedPayload]
+[VCPayloadUtils audioCodecTypeForPayload:]
+[VCPayloadUtils codecSamplesPerFrameForPayload:blockSize:]
+[VCPayloadUtils allowedBitratesForPayload:supportedBitrates:supportedBandwidths:]
+[VCPayloadUtils codecRateModeForDesiredANBR:payload:supportedBitrates:supportedBandwidths:]
+[VCPayloadUtils codecTypeForPayload:]
+[VCPayloadUtils payloadForCodecType:]
useStandardsBasedOpusCodec
+[VCPayloadUtils bitrateForAMRCodecMode:]
+[VCPayloadUtils bitrateForAMRWBCodecMode:]
VCPayloadUtils_AudioCodecRateModeForBitrate
_VCPayloadUtils_AudioCodecRateModeForAMRBitrate
_VCPayloadUtils_AudioCodecRateModeForAMRWBBitrate
com.apple.AVConference
com.apple.AVConferenceVCAudioPowerSpectrumManager.XPCCommandQueue
-[VCAudioPowerSpectrumManager init]
-[VCAudioPowerSpectrumManager registerAudioPowerMeterSource:]_block_invoke
-[VCAudioPowerSpectrumManager newPowerSpectrumMeterWithBinCount:refreshRate:delegate:error:]
-[VCAudioPowerSpectrumManager registerListenerWithStreamToken:powerSpectrumKey:powerSpectrumMeter:error:]
-[VCAudioPowerSpectrumManager unregisterListenerWithStreamToken:powerSpectrumMeter:error:]
-[VCAudioPowerSpectrumManager registerStreamTokenForCellularTapType:clientProcessId:error:]
-[VCAudioPowerSpectrumManager powerSpectrumMetersForCellularTapType:]
-[VCAudioPowerSpectrumManager cleanupPowerSpectrumSetForCellularTapType:]
-[VCAudioPowerSpectrumManager registerListenerWithCellularTapType:clientProcessId:powerSpectrumMeter:powerSpectrumMeterKey:error:]
-[VCAudioPowerSpectrumManager registerListenerWithCellularTapType:clientProcessId:powerSpectrumMeter:powerSpectrumMeterKey:error:]_block_invoke
-[VCAudioPowerSpectrumManager unregisterListenerWithCellularTapType:powerSpectrumMeter:error:]
vcAudioPowerSpectrumBinCount
-[VCAudioPowerSpectrumManager serviceHandlerPowerMeterInitializeWithArguments:error:]
vcAudioPowerSpectrumRefreshRate
CONTEXT
-[VCAudioPowerSpectrumManager serviceHandlerRegisterListenerWithArguments:error:]
vcAudioPowerSpectrumStreamToken
-[VCAudioPowerSpectrumManager serviceHandlerUnregisterListenerWithArguments:error:]
-[VCAudioPowerSpectrumManager serviceHandlerRegisterCellularTapWithArguments:error:]
CLIENTPID
vcAudioPowerSpectrumCellularTapType
vcAudioPowerSpectrumMeterKeyType
-[VCAudioPowerSpectrumManager serviceHandlerUnregisterCellularTagWithArguments:error:]
CLIENTDIED
@"NSDictionary"24@?0@"NSDictionary"8^@16
vcAudioPowerSpectrumInitializeRemoteVideoForStreamToken
vcAudioPowerSpectrumRegisterListener
vcAudioPowerSpectrumUnregisterListener
vcAudioPowerSpectrumRegisterCellularTap
vcAudioPowerSpectrumUnregisterCellularTap
vcAudioPowerSpectrumTerminateMeter
-[VCAudioPowerSpectrumManager audioPowerSpectrumMeter:didUpdateAudioPowerSpectrums:]
vcAudioPowerSpectrumRemoteSpectrum
vcAudioPowerSpectrumServerDidReceiveSpectrum
vcAudioPowerSpectrumServerSpectrumInterrupted
RTCPReducedSizePackets
RTCPSetHopByHopEncryptionEnabled
RTPGetRTCPHasPendingPLI
RTPGetRecvStats
RTCPSetSendPLI
RTCPSetSendTMMBR
RTPCheckRTCPSendIntervalElapsed
RTPSendControlPacket
RTPSendRateControlPacket
RTCPGetVoIPMetricsReportBlock
RTPSendRTCP
_RTCPTransport_ParsePacket
enableLTRPLogging
_RTCPPacketCallback
RTCPRegisterPacketCallback
v28@?0i8^v12^{_VTPPacket=d{sockaddr_storage=CC[6c]q[112c]}I{tagIPPORT=i[16c](?=I[16C])S}{tagVPKTFLAG=iIIBBBBii{tagVCSourceDestinationInfo=i(?={?={tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{?=BS}}{?=ii{tagIPPORT=i[16c](?=I[16C])S}i}{?=^{nw_connection}})I^{tagVCSourceDestinationInfo}^v}CiiiiiBBB{tagVCIDSChannelDataFormat=[12S]CBSCBBQBBBS{?=SSSSS}BBBQBSBBB}{tagPKT_TAG=[4Q]}I[16C]BB}{VCBlockBuffer_t=^{OpaqueCMBlockBuffer}Q*}}20
RTCPUnregisterPacketCallback
RTPRecvRTCP
RTPGetLatestRTCPTimestamp
RTCPInitializeReceptionReportBlock
_RTPTransportStreamRTCPCallback
_RTCPInitializeReceptionReportBlock
_RTCPAddSenderReportHeader
_RTCPAddXRPacket
_RTCPAddPSFBAlfbPacketTypes
_RTCPAddPSFBAlfbPacket
RTCPAddFIR
RTCPAddPLI
RTCPAddTST
TSTN
TSTR
RTCPAddTMMB
TMMBN
TMMBR
_RTCPSendWithSocket
_RTCPInitializePacketList
_RTCPProcessSenderReportPacket
_RTCPProcessReceiverReportPacket
_RTCPProcessAPPPacket
_RTCPProcessPSFBAlfbPacket
_RTCPParseVCPacket
_RTCPIsValidPacket
_RTCPSendWithTransportStream
-[VCDatagramChannelManager addDatagramChannelWithDescriptor:eventHandler:writeCompletionHandler:error:]
-[VCDatagramChannelManager addDatagramChannelWithDestination:eventHandler:writeCompletionHandler:dataPath:error:]
loopback:
emulatedNetworkConfigPath
-[VCDatagramChannelManager setupEmulatedDatagramChannelWithDestination:datagramChannel:]
-[VCDatagramChannelManager setupDatagramChannel:eventHandler:writeCompletionHandler:error:]
v46@?0r^v8I16{?=cSCSC}20^{?=IQSCc[12S]CS{?=SSSSS}dQBQ[16C]BB}30@"NSError"38
-[VCDatagramChannelManager removeDatagramChannel:]
VCFBOUtils_IsKindOfClass
streamGroupID
streamGroupMediaType
streamInputID
streamConfigurations
streamGroupSyncGroupID
streamInputs
streamGroups
ignore
type
subtype
maxWidth
maxHeight
maxFramerate
streams
width
height
framesPerSecond
onDemand
maxScreenPixels
isVideoResolutionCustom
isTemporalStream
codecs
codecType
codecPreferredMode
encoderUsage
redPayload
bitrateInfo
mediaBitrate
redFactors
packetsPerSecond
rtpTimestampRate
rtcpEnabled
rtpPayload
pTime
bundlingScheme
profileLevel
rtcpSendInterval
rtcpTimeOutEnabled
rtcpPSFBFIREnabled
sframeCipherSuite
audioChannelCount
isOpusInBandFecEnabled
fallbackStream
session_config_presence
session_config_GFT
+[VCSessionMediaStreamPresenceConfigurationProvider sessionConfigurationForType:]
-[VCSessionMediaStreamPresenceConfigurationProvider initWithConfigurationType:supportedAudioRules:streamIDGenerator:]
CompressedMoCap
FTXT_P3
%FRAMES_PER_SECOND_SCREENSHARE_BASE_TIER%
%BDAT_OLD_GROUP_DISABLED%
%FTXT_OLD_GROUP_DISABLED%
%FTXT_GROUP_DISABLED%
%BDAT_GROUP_DISABLED%
%FDAT_GROUP_DISABLED%
sessionConfigPlist
+[VCSessionMediaStreamPresenceConfigurationProvider loadSessionConfigurationWithResourceName:]
plist
+[VCSessionMediaStreamPresenceConfigurationProvider publicSessionConfigurationForType:]
forceFixedSSRCsForWebRTCStreams
+[VCSessionMediaStreamPresenceConfigurationProvider streamSSRCForStreamGroupID:streamIndex:]
+[VCSessionMediaStreamPresenceConfigurationProvider readUint32WithPList:key:defaultValue:]
-[VCSessionMediaStreamPresenceConfigurationProvider newStreamInputConfigurations]
-[VCSessionMediaStreamPresenceConfigurationProvider newVideoStreamInputConfigurationWithPList:]
-[VCSessionMediaStreamPresenceConfigurationProvider newDataStreamInputConfigurationWithPList:]
-[VCSessionMediaStreamPresenceConfigurationProvider newVideoMultiwayConfigWithPList:codecType:streamIDGenerator:ssrc:]
forceVideoOnDemand
-[VCSessionMediaStreamPresenceConfigurationProvider updateStreamConfig:forPayload:networkPayload:groupID:]
-[VCSessionMediaStreamPresenceConfigurationProvider checkEncoderSupportForConfig:]
-[VCSessionMediaStreamPresenceConfigurationProvider checkEncoderSupportForCodecType:]
-[VCSessionMediaStreamPresenceConfigurationProvider getVideoCodecConfigFromStreamConfigPList:]
-[VCSessionMediaStreamPresenceConfigurationProvider getVideoCodecFromStreamCodecPList:]
-[VCSessionMediaStreamPresenceConfigurationProvider newVideoStreamGroupStreamConfigWithPList:streamIDGenerator:ssrc:groupID:shouldSkip:]
-[VCSessionMediaStreamPresenceConfigurationProvider setupVideoStreamGroupStreams:streamGroupConfig:streamIDGenerator:]
-[VCSessionMediaStreamPresenceConfigurationProvider newAudioMultiwayConfigWithPList:audioRules:maxIDSStreamIDCount:streamIDGenerator:ssrc:]
forceAudioOnDemand
-[VCSessionMediaStreamPresenceConfigurationProvider setupRedFactorsWithPList:audioStreamConfig:]
-[VCSessionMediaStreamPresenceConfigurationProvider setupAudioRedWithPlist:audioStreamConfig:supportedAudioRules:]
-[VCSessionMediaStreamPresenceConfigurationProvider setupAudioRulesWithPList:audioStreamConfig:supportedAudioRules:]
-[VCSessionMediaStreamPresenceConfigurationProvider newAudioStreamGroupStreamConfigWithPList:supportedAudioRules:maxIDSStreamIDCount:streamIDGenerator:ssrc:groupID:]
-[VCSessionMediaStreamPresenceConfigurationProvider setupAudioStreamGroupStreams:streamGroupConfig:supportedAudioRules:streamIDGenerator:]
-[VCSessionMediaStreamPresenceConfigurationProvider newStreamGroupConfigurationWithPList:supportedAudioRules:streamIDGenerator:]
-[VCSessionMediaStreamPresenceConfigurationProvider newStreamGroupConfigurationsWithSupportedAudioRules:streamIDGenerator:]
-[VCDispatchTimer initWithIntervalMilliseconds:callbackBlock:clientQueue:]
-[VCDispatchTimer initWithIntervalMilliseconds:callbackBlock:clientQueue:]_block_invoke
-[VCDispatchTimer dealloc]
-[VCDispatchTimer start]
-[VCDispatchTimer stop]
VCAudioStream
-[VCAudioStream computePacketTimestampWithInputTimestamp:numSamples:hostTime:]
-[VCAudioStream generateRTCPXRSummaryReports:reportCount:]
-[VCAudioStream generateRTCPXRVoIPMetricsReports:reportCount:]
-[VCAudioStream startAudioWithCompletionHandler:]
-[VCAudioStream stopAudioWithCompletionHandler:]
-[VCAudioStream getSupportedPayloads]
-[VCAudioStream setupPayloads]
-[VCAudioStream getCodecConfigForPayload:block:]
v24@?0@"VCAudioStreamConfig"8@"VCAudioStreamCodecConfig"16
+[VCAudioStream audioIOTypeForMode:]
EVSSIDDuration
dtmfTonePlaybackEnabled
-[VCAudioStream setReceiverPayloads]
+[VCAudioStream operatingModeForAudioStreamMode:]
-[VCAudioStream setDeviceRoleForAudioStreamMode:direction:]
-[VCAudioStream setupAudioStreamWithClientPid:enableAudioPowerSpectrum:]
-[VCAudioStream dealloc]
audioTimescaleAlgorithm
audioJitterBufferQueueManagementAlgo
audioJitterBufferDisableSpikeManagement
enableEVSWidebandDecodeForAMRWideband
^\d{1,10}$
-[VCAudioStream createAudioReceiver]
useErasureSensitiveMode
audioIssueDetectorEnabled
UseAudioIssueDetectors
audioDumpEnabled
-[VCAudioStream createAudioTransmitter:streamIDs:]
-[VCAudioStream setVolume:]
-[VCAudioStream validateAudioStreamConfigurations:]
-[VCAudioStream setupSourceTransport:]
-[VCAudioStream createTransportWithStreamConfig:]
-[VCAudioStream cleanupBeforeReconfigure:]
simulateWebRTCOnlyClient
audioStreamPreferredMediaBitrate
/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCAudioStream.m
-[VCAudioStream onConfigureStreamWithConfiguration:error:]
Failed to create VCAudioIO
Invalid config caused VCAudioIO init to fail
_VCAudioStream_NWConnectionNotificationHandler
-[VCAudioStream onStartWithCompletionHandler:]_block_invoke_2
v20@?0B8@"NSError"12
v16@?0^{__CFDictionary=}8
-[VCAudioStream onPauseWithCompletionHandler:]_block_invoke
-[VCAudioStream onPauseWithCompletionHandler:]
-[VCAudioStream onResumeWithCompletionHandler:]_block_invoke
-[VCAudioStream onResumeWithCompletionHandler:]
-[VCAudioStream setTargetStreamID:]
-[VCAudioStream setupReportingAgent:]_block_invoke
v16@?0^{__CFArray=}8
VCVSStreamToken
VCMSDirection
CallID
VCSUUID
VCASStreamIDs
-[VCAudioStream updateCodecPayloadAndBitrateForStartEvent:bitrate:]
VCASMaxNetworkBitRate
VCVSRemoteDeviceModel
VCVSRemoteOSBuildVersion
VCASCurrentPayload
VCASCodecBitRate
VCASRedundancyLevel
VCASRedundancyDelay
-[VCAudioStream getConnectionTypeForStreamMode:]
VCAudioStream_PushAudioSamples
VCAudioStream_PushRemainingSamples
-[VCAudioStream queryAnbrBitrate:forDirection:]_block_invoke
v16@?0@"NSError"8
-[VCAudioStream handleCodecModeChangeEvent:]
-[VCAudioStream handleANBR:forDirection:]
-[VCAudioStream collectRxChannelMetrics:]
-[VCAudioStream didUpdateBasebandCodec:]
-[VCAudioStream telephonyInterface:anbrRecommendation:forDirection:]
-[VCAudioStream rateAdaptation:targetBitrateDidChange:rateChangeCounter:]
Audio
_VCAudioStream_UpdateRemoteMediaStallState
_VCAudioStream_CheckAbnormalOWRDAndResetLagReference
VCASHostTimeJumpSize
_VCAudioStream_ComputePacketTimestampWithInputTimestamp
_VCAudioStream_UpdateSourceNTPToRTPTimeMappingCallback
_VCAudioStream_ActiveStreamChangeCallback
_VCAudioStream_StreamSwitchCallback
generalInfo
bandwidthSettings
codecSupport
microphoneU1
cameraU1
momentsSettings
VCAudioDucker_Allocate
VCAudioDucker_Start
VCAudioDucker_Stop
VCAudioDucker_Process
AUDynamicDuckerFactory
Apple: DynamicDucker
_VCAudioDucker_SetProperties
_VCAudioDucker_SetTuningParameters
audioTimescalingHysteresisEnabled
VCTimescale_InitializeTimescaleAlgo
WSOLA
PSOLA
Empty
_VCTimescale_TimescaleEnablement
_VCTimescale_SetupAlgoInterfaces
RTPSendH264Packet
_RTPProcessSTAPPacket
_RTPProcessFUPacket
_RTPProcessSingleNALPacket
VERSION = %s, DTX Support
CALLID = %s
LogDump_OpenLog
Enabled
Disabled
enableTFRCDump
com.apple.VideoConference.Jitterlog
streamInputID=%ld
VCStreamIOAudioController
-[VCStreamIOAudioController initWithStreamInputID:streamToken:networkClockID:]
com.apple.AVConference.streamIOAudioController_%ld
-[VCStreamIOAudioController dealloc]
-[VCStreamIOAudioController _packetThreadStartWithClientFormat:]
v28@?0^v8*16I24
-[VCStreamIOAudioController startClient:]
AudioStreamBasicDescription is nil for client or stream. Client asbd=%s Stream asbd=%p for client (%p)
Client (%p) format=%s does not match stream input format=%s for StreamInputID=%ld
Client (%p) sinkIO is nil for StreamInputID=%ld
Unable to start the packet thread for Client=%p for StreamInputID=%ld
-[VCStreamIOAudioController startInputForClient:error:]
Client (%p) sourceIO is nil for StreamToken=%ld
Client (%p) Failed to create the outputClientThread
-[VCStreamIOAudioController startOutputForClient:error:]
-[VCStreamIOAudioController setupAndStartOutputClientThread]
-[VCStreamIOAudioController stopClient:]
Client (%p) cannot stop stream IO Audio when not running
Client (%p) does not match running client=%p. Cannot stop stream IO Audio
-[VCStreamIOAudioController stopClient:]_block_invoke
Client (%p) cannot start stream IO Audio when already running
Client (%p) direction is invalid
Client (%p) Starting output for client failed
Client (%p) Stop the output for client
-[VCStreamIOAudioController dispatchedStartClient:error:]
-[VCStreamIOAudioController updateClient:direction:]_block_invoke
-[VCStreamIOAudioController didUpdateBasebandCodec:]
_VCStreamIOAudioController_SampleBufferCallback
_VCStreamIOAudioController_GetSampleBufferTimestamp
_VCStreamIOAudioController_EnqueueSampleBuffer
networkTimestamp
RTPMapAddMappingForPayload
RTPMapResetMapping
RTPMapPrintMapping
RTPMapGetInternalPayload
RTPMapGetExternalPayload
avcKeyDaemonProcessInfoError
avcKeyDaemonProcessInfoUniquePID
vcGetDaemonProcessInfo
RTPCreateHandle
RTCPPacketAllocator
RTCPBlockBufferHeaderAllocator
RTPGetTimestampBase
RTPCloseHandle
RTPGetJitter
RTPGetPacketSent
RTPSetAudioReceiver
RTPSetWRMInfo
RTPGetPacketLossMetrics
RTPResetHandle
RTPResetDecryptionStatus
RTPSetDestinationWithToken
RTPSetDestination
RTPSetRTCPFB
RTPSetTxPayloadList
RTPSetRxPayloadList
RTPAddMappingForPayload
RTPResetPayloadMapping
RTPGetInternalPayload
RTPGetExternalPayload
RTPSetSourceRate
RTPGetPacketMultiplexMode
RTPSetPacketMultiplexMode
RTPSetThrottlingAudioInterval
RTPSetRTCPEnabled
RTPSetRTCPXREnabled
RTPSetRTCPSendInterval
RTPGetSequenceNumber
RTPGetSendROCWithSequenceNumber
RTCPGetReportNTPTimeMiddle32
RTPGetExtendedSequenceNumber
RTPSendRTP
SendRTP
Failed to add data into RTP packet
_RTPSendTimestampWithMediaSampleTime
_RTPMediaSampleTimeWithReceiveTimestamp
RTPProcessDecryptionStatusChange
RTPReleaseRTPPacket
RTPRecvRTP
_RTPTransport_ParseMediaPacket
_RTPRecvWithSocket
_RTPSocketRTPAndBBNoteCallback
RTPGetReceiveStatus
RTPGetLocalSSRC
RTPSetRemoteSSRC
RTPSetCellularUniqueTag
RTPSetStreamDirection
_RTPConfigureVirtualSockets
RTPSetSockets
RTPSetNWConnections
RTPCreateSocketsForIDSInternal
RTPCreateSocketsForIDS
RTPCreateSocketsRetryBind
RTPSetCName
RTPCreateSockets
RTPSetMediaQueue
RTPSetVCMediaQueue
RTPSetStatisticsCollector
RTPSetBasebandCongestionDetector
RTPSetAFRCHandle
RTPGetAFRCTxInfo
RTPSetRedundantAudio
RTPGetOWRD
RTPSetOWRD
RTPGetAFRCStat
RTPSetAFRCRecvMode
RTPUpdateAudioOnlyRateChange
RTPResetConnectionStats
RTPUpdateIsIPv6
RTPGetIsIPv6
RTPGetAFRCProbeSeqId
RTPInsertAFRCProbeSeqId
RTPSetWRMMetricConfig
RTPSetWRMMetricsCallback
RTPSetWRMCallId
RTPUpdateWRMInfo
RTPSetSendTimestampRate
RTPProcessMediaControlInfo
RTPRegisterPacketCallback
RTPUnregisterPacketCallback
RTPSetTimestampRateScale
RTPCopyPreferredSendQueue
RTPSetTransportStreams
v16@?0^{VCPacket=^{OpaqueCMBlockBuffer}{?=BB[12S]CCBQB[4Q]{?=iiBQ}(?={?=II[16C]BB}{?=dCB})}{?=^{VCPacket}}}8
RTPClearTransportStreams
_RTPEnsureTransportStreamsActivated
RTPGetReceiveStatusWithRunLoop
RTPSetConnectionManager
RTPSetVCSecurityKeyHolder
RTPReset
_RTPSendWithTransportStream
_RTPProcessDecryptionStatusChange
_RTPTransport_PrepareRTPHeader
_RTPTransport_ReinitializeStream
_RTPTransport_DetectPacketLoss
_RTPTransport_PacketExtensionLength
_RTPTransport_ExtractPacketExtension
_RTPTransport_ExtractPacketData
RTPUninitialize
_RTPTransport_ParseBasebandNotification
RTPMapPacketMultiplexModeToVTPMode
user
hostname
%s%08X@%s%s%s
RTPSetDefaultCNAME
CreateSocket
_RTPEnsureTransportStreamsDeactivated
_RTPSetIsIPv6WithTransportStream
_RTPClearTransportStreamsInternal
_RTPSetPayloadListOnPacketFilter
_RTPSetRemoteSSRCOnPacketFilters
_RTPSetCellularUniqueTagOnPacketFilters
_RTPTransportStreamRTPAndBBNoteCallback
_RTPSetReceiveStatusFlags
_RTPWaitForReceiveFromTransportStreams
BitrateToQuality
FileUtil_PrintBasicDesc
useZeroSignaling
SoundDec_Create
in  format:
out format:
DecodeNilPacket
SoundDec_Decode
 (AVC Out of Data error)
_SoundDec_HandleCodecModeRequest
SoundDec_Encode
SoundDec_SetDTXPrimerSamples
SoundDec_SetDTX
SoundDec_SetEVSSIDPeriod
SoundDec_SetEVSInitialBitrate
_SoundDec_SetEVSRFParams
SoundDec_SetEVSChannelAwareOffset
SoundDec_SetEVSFormatHandling
SoundDec_SetEVSDecodeRF
SoundDec_SetAMRPayloadFormat
SoundDec_SetAACELDPacketLossConcealmentAlgorithm
SoundDec_SetBitrate
SoundDec_GetMagicCookie
SoundDec_GetSpeechCodecBundleData
SoundDec_SetMagicCookie
SoundDec_SetOpusInBandFecEnabled
SoundDec_SetPacketLossPercentage
SoundDec_GetOpusDecodeFECStatus
SoundDec_SetCMR
TranslateASBDToPayloadFormat
_SoundDec_SetBitrateInternal
_SoundDec_SetEVSAudioCodecBandwidthInternal
_SoundDec_SetEVSCMRInternal
_SoundDec_SetAMRCMRInternal
com.apple.AVConference.vcCoreMotion.serialQueue
com.apple.AVConference.vcCoreMotion.delegateQueue
com.apple.private.alloy.avconference.icloud
-[VCDatagramChannelIDS datagramChannelWithDestination:error:]
loopback:Conference
-[VCDatagramChannelIDS start]
Signalled error at %s: Failed to create VTP socket
-[VCDatagramChannelIDS setupVTPSocketWithFileDescriptor:]
VCVideoPlayer
_VCVideoPlayer_GetDisplayTimestamp
_VCVideoPlayer_LogPlayoutTimeChange
_VCVideoPlayer_PreventBackwardPresentationTime
_VCVideoPlayer_GetPresentationTime
_VCVideoPlayer_ShouldProcessAlarmForDisplayLinkImmediateDecode
_VCVideoPlayer_ShouldProcessAlarmForDisplayLinkWithDisplayAlarms
_VCVideoPlayer_ProcessAlarmForDecode
_VCVideoPlayer_ProcessAlarmForDisplay
_VCVideoPlayer_CheckAndProcessAlarm
_VCVideoPlayer_CheckAndProcessDisplayAlarms
_VCVideoPlayer_QueueAlarm
Player
Decode
VCVideoPlayer_CallAlarms
com.apple.avconference.VCVideoPlayer.alarmproc
VCVideoPlayer_Create
videoPlayerProcessDisplayFramesOnlyOnDisplayLinkThread
avSyncAudioEarlyThreshold
avSyncAudioLateThreshold
avSyncAudioTimestampJumpDetectionThreshold
avSyncMaxAudioJitterBufferLevelThreshold
VCVideoPlayer_Destroy
_VCVideoPlayer_ShouldProcessAVSyncOffset
_VCVideoPlayer_DumpAVSyncState
_VCVideoPlayer_HealthPrint
VCVideoPlaybackAlarmThread
videoPlayerAverageDecodeTime
CStrToFourcc
{ %u, %s, %x, %d, %d, %d, %d, %d }
nope
<NULL>
SummerCreateHandle
SummerCloseHandle
SummerAdd
SummerLengthPred
SummerSumPred
hw.optional.altivec
hw.optional.mmx
hw.optional.sse
hw.optional.sse2
hw.optional.sse3
hw.physicalcpu
Gossamer
Power Macintosh G3 Beige Revision A or B
PowerMac-G3
Power Macintosh G3 Beige Revision C
PowerMac1,1
Power Macintosh G3 (Blue and White)
PowerMac1,2
Power Macintosh G4 (PCI Graphics)
iMac (Rev a-d)
PowerMac2,1
iMac (Slot Loading)
PowerMac2,2
iMac (Summer 2000)
PowerMac3,1
Power Macintosh G4 (AGP Graphics - Sawtooth)
PowerMac3,2
PowerMac3,3
Power Macintosh G4 (Gigabit Ethernet)
PowerMac3,4
Power Macintosh G4 (Digital Audio)
PowerMac3,5
Power Macintosh G4 (QuickSilver)
PowerMac3,6
Power Macintosh G4 (Mirrored Drive Doors)
PowerMac4,1
iMac (Summer 2001) or iMac (Early 2001)
PowerMac4,2
iMac (Flat Panel)
PowerMac4,4
eMac
PowerMac8,1
iMac (G5)
PowerMac8,2
PowerMac12,1
PowerMac5,1
Power Macintosh G4 Cube
PowerMac5,2
PowerMac7,2
Power Macintosh G5
PowerMac7,3
RackMac1,1
Xserv
PowerBook1,1
PowerBook G3 Series (Bronze Keyboard/Lombard)
PowerBook1998
PowerBook G3 Series (Mainstreet/Wallstreet)
PowerBook4,4
iBook (Unknown Type)
PowerBook4,3
PowerBook4,2
iBook (Dual USB) with 14" Screen Option
PowerBook4,1
iBook (Dual USB)
PowerBook2,2
iBook (FireWire)
PowerBook2,1
iBook
PowerBook6,1
PowerBook G4 12in
PowerBook6,3
PowerBook5,2
PowerBook G4 17in
PowerBook5,1
PowerBook3,5
PowerBook G4 (1 GHz)
PowerBook3,4
PowerBook G4 (DVI)
PowerBook3,3
PowerBook G4 (Gigabit Ethernet)
PowerBook3,2
PowerBook G4 (Titanium)
PowerBook3,1
PowerBook G3 (FireWire)
powerbook1,
powerbook2,
powerbook3,
powerbook4,
powerbook5,
powerbook6,
powermac7,
powermac8,
powermac12,
book
ReadFirstMBAndSliceType
hwrandom
hwrandom16
ReadFrameSliceHeader
Width
Height
FirstMB
SliceType
SimplifyRatio
 %u,
isGenerateStackshotEnabled
VCUtil_GenerateStackshot
TranslateVCPSliceTypeToGKS
-[VCStatsRecorder updateSessionStats:connection:totalPacketSent:totalPacketReceived:]
-[VCStatsRecorder getLocalStats:localSessionStats:]
-[VCStatsRecorder serverStatsSizeInByteForUplink:connection:]
supportedCodecs
DoubleQueueImpairments
QueueAImpairments
QueueBImpairments
-[VCEmulatedNetworkDoubleQueue initWithPolicies:]
-[VCEmulatedNetworkDoubleQueue push:]
-[VCRateControlOWRDEstimator relativeSendTimeWithTimestamp:timestampRate:]
-[VCRateControlOWRDEstimator relativeReceiveTimeWithTimestamp:timestampRate:]
-[VCRateControlOWRDEstimator calculateOWRDWithSendTime:receiveTime:roundTripTime:]
-[VCRateControlOWRDEstimator detectAbnormalOWRDWithRoundTripTime:]
-[VCRateControlOWRDEstimator detectOutOfOrderAndSpikeWithSendTimestamp:]
-[VCRateControlOWRDEstimator detectOutOfOrderAndSpikeWithReceiveTimestamp:]
-[VCRateControlOWRDEstimator resetOWRDEstimation]
-[NSData(VCControlChannelMessageProtocol) VCCCGetBytes:size:]
-[NSString(VCControlChannelMessageProtocol) VCCCGetBytes:size:]
FECUtil_GetRealNumParity
FECUtil_ConvertNumberOfSymbolsToPackets
FECUtil_UnpackFrameLoss
-[VCAudioStreamSendGroupConfig init]
{?=iB@}
-[VCEmulatedNetworkElement initWithPolicies:]
-[VCEmulatedNetworkElement write:]
-[VCEmulatedNetworkElement connectTo:]
v16@?0@"VCEmulatedPacket"8
-[VCEmulatedNetworkElement connectFrom:]
paused
Unknown (%d)
-[VCMomentsHistoryBuffer initWithDelegate:bufferLength:dispatchQueue:]
-[VCMomentsHistoryBuffer updateBufferWithSample:timestamp:]
-[VCMomentsHistoryBuffer getClosestSampleForTimestamp:]
-[VCMomentsHistoryBuffer dequeueOneFrame]
-[VCMomentsHistoryBuffer enqueueWithSample:timestamp:]
-[VCCellularAudioTapIO initWithStreamToken:powerSpectrumSource:]
vcKeyVideoStreamDownlinkOptimalBitrate
vcKeyVideoStreamDownlinkOperatingBitrate
vcKeyVideoStreamDownlinkIsOperatingAtMaxBitrate
vcKeyVideoStreamDownlinkIsOperatingAtMinBitrate
vcKeyVideoStreamUplinkOperatingBitrate
ERROR_DOMAIN
ERROR_CODE
ERROR_USERINFO
vcMediaStreamError
com.apple.AVConference.VCStreamManagerXPCQueue
-[VCMediaStreamManager pauseStreams:]
v16@?0Q8
-[VCMediaStreamManager vcMediaStreamServerDidDie:]
vcMediaStreamDidServerDie
vcMediaStreamDidInterruptionBegin
vcMediaStreamDidInterruptionEnd
vcMediaStreamDTMFDigitReceived
vcMediaStreamTTYCharacterReceived
vcMediaStreamTextReceived
vcMediaStreamRTPPacketTimeout
vcMediaStreamRTCPPacketTimeout
vcMediaStreamRTCPPackets
vcMediaStreamRTCPPacketsReceived
vcMediaStreamInputFreqMetering
vcMediaStreamUpdateInputFrequencyMetering
vcMediaStreamOutputFreqMetering
vcMediaStreamUpdateOutputFrequencyMetering
vcMediaStreamDownlinkQualityInfo
vcMediaStreamDownlinkQualityDidChange
vcMediaStreamUplinkQualityInfo
vcMediaStreamUplinkQualityDidChange
vcMediaStreamUpdatedVideoConfiguration
-[VCMediaStreamManager vcMediaStream:didUpdateVideoConfiguration:error:dictionary:]
vcMediaStreamDidUpdateVideoConfiguration
-[VCMediaStreamManager addSyncSourceToVideoStreamConfig:sourceStreamToken:error:]
/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCMediaStreamManager.m
Invalid synchronization source token
Failed to set synchronization source
vcMediaStreamDidStopConnection
vcMediaStreamDictionary
-[VCMediaStreamManager registerBlocksForService]_block_invoke
USERXPCARGUMENTS
vcMediaStreamToken
vcMediaStreamStreamCapabilities
vcMediaStreamInitializeAudio
vcVirtualTTYDeviceInitialize
vcVirtualRTTDeviceInitialize
vcVirtualTTYDeviceSendCharacter
vcVirtualTTYDeviceSendText
vcVirtualTTYDeviceTerminate
-[VCMediaStreamManager registerBlocksForService]_block_invoke_4
vcMediaStreamTerminateAudio
vcMediaStreamTXCodecType
vcMediaStreamRXCodecType
vcMediaStreamSyncStreamToken
Unexpected stream type
setStreamConfig called on an unsupported object
Stream config allocation failure
Failed to allocate the stream configuration
vcMediaStreamSetSessionConfig
vcMediaStreamSendDTMFEvent
vcMediaStreamStopSendDTMFEvent
vcMediaStreamVolume
-[VCMediaStreamManager registerBlocksForService]_block_invoke_3
vcMediaStreamSetVolume
vcMediaStreamConnectionStarted
vcMediaStreamDidStartConnection
vcMediaStreamStartConference
-[VCMediaStreamManager registerBlocksForService]_block_invoke_2
vcMediaStreamStopConference
vcMediaStreamSynchronizationStarted
vcMediaStreamDidStartSynchronization
vcMediaStreamStartSynchronization
vcMediaStreamPauseState
vcMediaStreamPaused
vcMediaStreamResumed
vcMediaStreamDidPause
vcMediaStreamDidResume
vcMediaStreamSetPause
vcMediaStreamUpdateVideoConfig
vcMediaStreamDirection
vcMediaStreamSetStreamDirection
vcMediaStreamRTCPEnabled
vcMediaStreamSetRTCPEnabled
vcMediaStreamRTPTimeoutEnabled
vcMediaStreamSetRTPTimeoutEnabled
vcMediaStreamRTCPTimeoutEnabled
vcMediaStreamSetRTCPTimeoutEnabled
vcMediaStreamRTPTimeoutInterval
vcMediaStreamSetRTPTimeoutInterval
vcMediaStreamRTCPTimeoutInterval
vcMediaStreamSetRTCPTimeoutInterval
vcMediaStreamRTCPSendInterval
vcMediaStreamSetRTCPSendInterval
vcMediaStreamInputFreqMeterEnabled
vcMediaStreamGetInputFrequencyMeteringEnabled
vcMediaStreamSetInputFrequencyMeteringEnabled
vcMediaStreamOutputFreqMeterEnabled
vcMediaStreamGetOutputFrequencyMeteringEnabled
vcMediaStreamSetOutputFrequencyMeteringEnabled
vcMediaStreamInitializeVideo
vcMediaStreamTerminateVideo
vcMediaStreamRequestLastDecodedFrame
vcMediaStreamInitializeText
vcMediaStreamTerminateText
RTPUnpackGenericDataPacket
-[VCMediaNegotiatorStreamGroupStreamConfiguration applyCipherSuiteOnMediaStreamConfig:codecConfigs:]
com.apple.AVConference.VCDaemonProcessInfoManagerXPCQueue
VCDaemonProcessInfo
streamGroup
payloads
settingsU1
Video rule width %d height %d frame rate %.1f pref %.2f payload: %d
videoStreamRampUpPacketLossRate
videoStreamRampDownPacketLossRate
videoStreamRampDownRoundTripTime
%@ state:%d RTT:%.3f packetLossRate:%f
%8.3f/%04X:
%.4f
%.4f
%.4f
%.4f %c
RTT:%-4u
PLR:%4.2f@%.1f
RRx:0
MBL:0
%3u/%3u
 0:0/0  0:0/0 CS: 0 0 0 BB: 0
 UAT S _
-[VCVideoStreamRTTPLRRateControl stateChange:]
-[VCEmulatedPacket initWithPacketID:datagram:datagramSize:]
.vpbdump
VideoPacketBuffer
VideoPacketBuffer_Create
VideoPacketBufferBlockBufferAllocator
VPBSampleBufferAllocator
VideoPacketBufferSliceHeaderAllocator
VideoPacketBuffer_Destroy
VideoPacketBuffer_ResetBurstLossStatistics
_VideoPacketBuffer_ProcessFrameStats
VideoPacketBuffer_UpdateMaxFrameBurstLossStatistics
VideoPacketBuffer_UpdateMaxGroupBurstLossStatistics
VideoPacketBuffer_AddPacket
VideoPacketBuffer_ScheduleFutureFrame
_VideoPacketBuffer_SchedulePastIncompleteFrame_InternalLoop
VideoPacketBuffer_SchedulePastIncompleteFrame
VideoPacketBuffer_GetNextFrame
_VideoPacketBuffer_FreeAllFrames
Invalid
Unknown
Bad Slice size
Need image description
Slices don't match without new image description
Needed a refresh frame, but this is not one
Preceding loss but not refresh frame
Failed to allocate frame buffer
RTPProcessH264Packet failed
First packet is not start of GOB
Loss in middle of frame
Failed to append packet
Frame did not end with end_of_frame packet
No IDR received and this frame is not an intra frame
Non-zero macroblock number on first slice
Too many slices
Bad Buffer
Decoder requested
Asynchronous decoder requested in callback
Compressed frame creation failed
Expected decoding order is invalid
Frame decoding order is out of order
Failed to enqueue in video queue
Full subframe was lost
Resetting non target stream
Set target stream
Frames in decode queue were flushed, high watermark reached
Decoder requested refresh frame
VideoPacketBuffer_Reset
_VideoPacketBuffer_LogNewPacket
%s, AddPacket: seq:%d, TS:%u, frameSeq: IsOOO:%d
_VideoPacketBuffer_CorrectFrameStats
_VideoPacketBuffer_StartTrackingEvictedFrameStats
_VideoPacketBuffer_UpdatePreviousFrameSequenceNumber
_VideoPacketBuffer_UpdateFrameDecodingOrder
_VideoPacketBuffer_ShouldInsertNonParityPacketBeforePacket
_VideoPacketBuffer_ShouldInsertParityPacketBeforePacket
_VideoPacketBuffer_IsFrameComplete
_VideoPacketBuffer_ScheduleSingleFrame
_VideoPacketBuffer_ShouldSkipTemporalFrameScheduling
RecoverOneFECGroup
parity
data
VideoPacketBuffer_CreateBlockBufferForPacket
_VideoPacketBuffer_IsIncompleteFramesTooOld
_VCVideoPacketBuffer_AssembleFrame
NONE
%s TS:%X %dB reason = %s
_VCVideoPacketBuffer_ProcessRTPPackets
%s, %u -> %u: %s%d, %d-%d-%d (%dB)
FEC recovered %d parity %d
missing 
_VCVideoPacketBuffer_DetectMissingPackets
_VCVideoPacketBuffer_StripFakeLargeFramePadding
_VCVideoPacketBuffer_ParseCompletedPacket
%d: MB %u ST %u
%d: FirstMB!=0 Stop!
%d: iSlices >= MAX_SLICES  Stop!
SPS/PPS received
ImgDesc: %dx%d
_VideoReceiver_HandlePrecedingLossOnBaseLayerOfTemporalStream
_VideoPacketBuffer_ConfirmFrameAssembledAndCalculateStats
%s (%i)
_VideoPacketBuffer_PrintMissingSequenceNumbers
_VideoPacketBuffer_CheckForMissingBaseLayerAssemblyOfTemporalStream
_VideoPacketBuffer_MoveEvictedFrameToIncompleteFrameBuffer
VCAudioDecoderList_GetDecoderSettings
VCAudioDecoderList_Cleanup
VCAudioDecoderList_SetMagicCookieForPayload
VCAudioDecoderList_GetEVSHeaderFormat
VCAudioDecoderList_Setup
VCAudioDecoderList_GetSpeechCodecBundleData
VCAudioDecoderList_IsDTXFrame
-[VCConnectionLegacy initWithConnectionResult:type:]
-[VCConnectionLegacy isLocalIPPort:]
-[VCConnectionLegacy isRemoteIPPort:]
-[VCConnectionLegacy isOnSameIPPortWithConnection:]
-[VCConnectionLegacy isOnSameInterfacesWithConnection:]
[%s %@(%s)<>%@<===>%@<>%@(%s)]
RELAY
NOT RELAY
WiFi
Cell
-[VCConnectionLegacy downlinkBitrateCap]
-[VCConnectionLegacy uplinkBitrateCap]
-[VCConnectionLegacy setDownlinkBitrateCap:]
-[VCConnectionLegacy setUplinkBitrateCap:]
-[VCConnectionLegacy uplinkAudioBitrateCapOneToOne]
-[VCConnectionLegacy setUplinkAudioBitrateCapOneToOne:]
-[VCConnectionLegacy uplinkBitrateCapOneToOne]
-[VCConnectionLegacy setUplinkBitrateCapOneToOne:]
-[VCMediaNegotiationBlobV2StreamGroupStream(Utils) initWithStreamConfig:payloadConfigs:streamGroupID:defaultConfig:]
-[VCMediaNegotiationBlobV2StreamGroupStream(Utils) initWithStreamConfig:payloadConfigs:streamGroupID:]
-[VCMediaNegotiationBlobV2StreamGroupStream(Utils) initSSRC:]
-[VCMediaNegotiationBlobV2StreamGroupStream(Utils) streamConfigWithPayloadConfigs:payloadConfigSampleRates:streamGroupID:]
[%lu] %@
Stream: QualityIndex=%4d
 SSRC=%08x StreamID=%5d NetworkBitrate=%6d
 Repair[ID=%5d NetworkBitrate=%6d]
 RTPSampleRate=%d
 channels=%u
+[VCMediaNegotiationBlobV2StreamGroupStream(Utils) printWithLogFile:prefix:streamConfig:]
+[VCMediaNegotiationBlobV2StreamGroupStream(Utils) defaultsForStreamGroupID:streamIndex:]
+[VCMediaNegotiationBlobV2StreamGroupStream(Utils) payloadsWithStreamConfig:payloadBitmap:]
+[VCMediaNegotiationBlobV2StreamGroupStream(Utils) payloadSpecWithStreamConfig:payloadConfigs:payloadSpecs:]
+[VCMediaNegotiationBlobV2StreamGroupStream(Utils) payloadsWithPayloadBit:]
-[VCMediaNegotiationBlobV2StreamGroupStream(Utils) updatePayloadSpecsForConfig:defaultConfig:]
-[VCMediaNegotiationBlobV2StreamGroupStream(Utils) updatePayloadSpecsForConfig:defaultConfig:payloadConfigs:]
 metadata=[
 payloads=[
 payloadSpecs=[
%@%@
-[VCMediaNegotiationBlobV2StreamGroupStream(Utils) optionalPackedPayloaWithDefaultConfig:]
-[VCMediaNegotiationBlobV2StreamGroupStream(Utils) requiredPayloadCompressWithConfig:]
-[VCMediaNegotiationBlobV2StreamGroupStream(Utils) optionalPayloadCompressWithConfig:]
SubStream
TemporalStream
UsePayloadSpec
SupportedMask
H264
HEVC
Data
OPUS
AACELD_24000
EVS_32000
AACELD_48000
MOCAP
MMJI
VCAudioIssueDetectorUtil_Create
VCAudioIssueDetectorUtil_Configure
VCAudioIssueDetectorUtil_UpdateConnectionType
VCAudioIssueDetectorUtil_Start
VCAudioIssueDetectorUtil_Stop
VCAudioIssueDetectorUtil_ProcessFrame
VCAudioIssueDetectorUtil_FlushLogEvents
_VCAudioIssueDetectorUtil_StateMachine
_VCAudioIssueDetectorUtil_HandleInitStateEvents
_VCAudioIssueDetectorUtilDeInit
_VCAudioIssueDetectorUtil_HandleIdleStateEvents
_VCAudioIssueDetectorUtil_EnqueueDistortion
_VCAudioIssueDetectorUtil_ReportAggregatedAudioStats
AudioTotalFrameCount
AudioSpeechFrameCount
AudioSilenceFrameCount
AudioSpeechBadFrameCount
AudioSpeechLostFrameCount
AudioNoDataFrameCount
AudioStatDirection
RATType
CodecSampleRate
UplinkCodecBitRate
DownlinkCodecBitRate
CodecPayload
_VCAudioIssueDetectorUtil_ReportAggregatedDistortionStats
AudioDistortionContinuousSpeechLoss
AudioDistortionAverageSpeechLoss
AudioDistortionRxLinkBroken
AudioDistortionRxSilence
AudioDistortionTxSilence
AudioDistortionZerosTx
AudioDistortionZerosRx
AudioDistortionLowEnergyTx
AudioDistortionLowEnergyRx
AudioDistortionHighNoiseTx
AudioDistortionHighNoiseRx
%sCount
%sDuration
_VCAudioIssueDetectorUtil_HandleSilenceStateEvents
_VCAudioIssueDetectorUtil_HandleSpeechStateEvents
_VCAudioIssueDetectorUtil_HandleLogEvents
_groupID=%s, _mediaType=%s, _syncGroupID=%s, _cipherSuite=%d streamConfigs=%@
-[VCImageRotationConverter initWithRotationAngle:width:height:formatType:]
v20@?0^{__CFString=}8I16
-[VCVideoSourceTokenManager init]
com.apple.avconference.VCVideoSourceTokenManager
-[VCVideoSourceTokenManager createtokenForDeviceName:sourceType:]
-[VCSystemAudioCaptureController initWithConfig:]
-[VCSystemAudioCaptureController dealloc]
+[VCSystemAudioCaptureController isValidConfiguration:]
PID=%d 
SessionType(pre-spatial)=%d 
CaptureContext=%@ 
com.apple.AVConference.systemAudioCaptureController
.pid_%d
.session_type_%d
.scene_id%@
-[VCSystemAudioCaptureController startClient:]
Client (%p) can not start system audio capture when already running
Client (%p) failed to start system audio capture
-[VCSystemAudioCaptureController startClient:]_block_invoke
-[VCSystemAudioCaptureController stopClient:]
Client (%p) can not stop system audio capture when not running
Client (%p) error stopping system audio capture
-[VCSystemAudioCaptureController stopClient:]_block_invoke
-[VCSystemAudioCaptureController updateClient:direction:]
-[VCSystemAudioCaptureController didUpdateBasebandCodec:]
com.apple.AVConferenceVCMoments.Notification
-[VCMoments validateIncomingRequest:isRemote:]
vcMomentsTransactionID
vcMomentsRequestMode
vcMomentsRequestState
vcMomentsRequestTimestamp
vcMomentsMediaType
vcMomentsInitiatorID
vcMomentsRequesteeID
vcMomentsRequesterID
vcMomentsFileSize
vcMomentsRequestDidSucceed
-[VCMoments processRequest:isRemote:]
-[VCMoments setCapabilities:]
-[VCMoments processClientRequest:error:]
-[VCMoments registerClient]
-[VCMoments deregisterClient]
-[VCMoments updateActiveStatus]
-[VCMoments processRemoteRequest:withMediaType:]_block_invoke_4
v32@?0@"NSURL"8@"NSURL"16@"NSError"24
-[VCMoments processRemoteLivePhotoRequest:]
-[VCMoments processRemoteLivePhotoRequest:]_block_invoke_2
-[VCMoments processRemotePhotoRequest:]
-[VCMoments notifyFinishWithRequest:didSucceed:fileSize:]
VCMomentsError
+[VCMoments typeForRequest:]
VCAudioRedBuilder
%s: primaryPayload:%s redPayloads:%s
-[VCAudioRedBuilder buildRedPayloadWithPrimaryPayload:redPayloads:]
Max RED payload size overflow. outputPayloadBufferLength=%ld, lastRedPayloadBufferLength=%d, maxPayloadLength=%zu, remainingLength=%d
-[VCAudioRedBuilder isPayloadTimestampWithinThreshold:forTimestamp:]
%s: redTimestamp:%d current:%s previous:%s
-[VCAudioRedBuilder nearestRedPayloadForTimestamp:]
%s: primary:%s numPayloads:%d maxDelay:%d strideInBlocks:%f
-[VCAudioRedBuilder selectRedPayloadsForPrimaryPayload:]
%s: primary:%s numPayloads:%d maxDelay:%d count:%d
{ VCAudioRedPayload payloadType=%d bufferLen:%d timestamp=%u isRedAudio=%d redCount=%d sequenceOffset=%d }
VCAudioRedPayload NULL
count:%d history:%s 
VCAudioRedBuilder_UpdatePayloadHistory
count=%d history=%s
-[VCAudioRedBuilder resetPayloadHistory]
-[VCAudioRedBuilder initWithRedPayloadType:sampleRate:samplesPerFrame:numPayloads:maxDelay:includeSequenceOffset:]
-[VCAudioRedBuilder setMaxDelay:]
-[VCAudioRedBuilder setNumPayloads:]
VCAudioRedBuilder_UpdateAudioPacketWithRedPayload
_VCAudioRedBuilder_SplitRedPacketIntoArray
VTU_ReallocPktsInfo
VCVideoTransmitterPacketAllocator
VTU_HandleMTUOverride
VTU_SplitVideoIntoPackets
_VTU_GenerateNewMaxPacketCount
_VTU_ReallocateBuffer
_VTU_AllocateVPList
VTU_PrepareH264FrameData
AddOneVPList
PrepareLastH264Fragment
audio
video
screen
rtpmap:123 H264/90000
fmtp:123 imagesize 0 rules 15:320:240:320:240:15
rtpmap:126 X-H264/90000
fmtp:126 imagesize 0 rules 15:320:240:320:240:15
%@=%@ %@ %@ %@%@
%VRTP-PORT%
RTP/AVP
AS:%@:%@
AS:%@
%@=0
%@=%@ 0 0 IN %@ %@
%RTP-IP-AF%
%RTP-IP%
%@=%@
%@=IN %@ %@
%@=0 0
DMBR
%@=%@:%@:%u
BBCODEC
%@=%@:%d %@
X_FLS
v32@?0@8@16^B24
%@=audio %@ %@ %@
%ARTP-PORT%
%@=rtcp:%@
%ARTCP-PORT%
%@=fmtp:AAC SamplesPerBlock %@
%@=allowrecording
%@=rtpID:%@
%@=au:%@
%@=fmtp:%@ %@
-[SDPMini(SDPParsing) parseMediaLine:]
-[SDPMini(SDPParsing) parseSessionAttributes:]
fmtp:AAC SamplesPerBlock
rtpID
rtcp:
fmtp:
allowrecording
fmtp:%d
block %u
block 
rtcp-fb:*%s%s
 rpsi
 nack
VCAudioLimiter_Allocate
VCAudioLimiter_Start
VCAudioLimiter_Stop
VCAudioLimiter_Process
AUControlFreakFactory
Apple: ControlFreak
-[VCMediaNegotiatorLocalConfiguration init]
-[VCMediaNegotiatorLocalConfiguration setupBandwidthConfigurationsWithArbiter:]
-[VCMediaNegotiatorLocalConfiguration setupBandwidthExtensionConfiguration:]
-[VCMediaNegotiatorLocalConfiguration isEqualFeatureStrings:]
-[VCRateControlMediaController initWithMediaQueue:delegate:]
probingSequence
aggModeEnabled
minAggProbingSpacing
-[VCRateControlMediaController setServerBag:]
-[VCRateControlMediaController getMediaQueueInVideoBitrate:outVideoBitrate:inAudioBitrate:outAudioBitrate:]
-[VCRateControlMediaController getMediaQueueRateChangeCounter:rateChangeTime:]
-[VCRateControlMediaController computePacketLossWithRemoteInfo:]
-[VCRateControlMediaController updateBasebandSuggestionWithStatistics:]
 flush audio
 flush video
 stop video
Baseband queue HWM is hit, [delay:%.3f, queueDepth:%u, BBRate:%u, minRate:%u, audioRate:%u, audioFraction:%d, mediaSuggestion:%s%s%s]
Baseband queue LWM is hit, [delay:%.3f, queueDepth:%u, BBRate:%u, audioRate:%d, audioFraction:%d, resume video]
VCRateControl turn audio stall ON!
VCRateControl turn audio stall OFF!
-[VCRateControlMediaController pauseVideoByUser:]
pause
resume
Video %s by user, [rate:%u, BBRate:%u, audioFraction:%d, videoStopped:%d]
-[VCRateControlMediaController stopVideoByVCRateControl]
-[VCRateControlMediaController resumeVideoByVCRateControl]
Decrease basebandFlushCount %d -> %d.
-[VCRateControlMediaController decreaseFlushCount:]
-[VCRateControlMediaController setAudioSendingBitrate:]
Change audio fraction tier from %d -> %d.
%s frame (%08X) is generated PT (%u), %d packets.
KeyFrame
RefreshFrame
Increase basebandFlushCount %d -> %d due to video refresh [TID:%0X].
Increase basebandFlushCount %d -> %d internally with suggestion.
A LARGE FRAME of %d size %s (actual:%d, req:%d), rate:%f, [waste:%d wastBitrate:%d, avgWastBitrate:%d], txRate:%d, remoteBW:%d, throttling:%d, timestamp:%u
ARRIVED
OBSERVED
-[VCRateControlMediaController isProbingLargeFrameRequiredAtTime:]
-[VCRateControlMediaController updateProbingLargeFrameSizeCap]
FixedDelay
GaussianDelay
-[VCEmulatedNetworkAlgorithmQueueDelay updateSettingsAtTime:impairments:]
-[VCConnection setLinkFlags:]
-[VCConnection setRemoteLinkFlags:]
-[VCConnection compare:isPrimary:selectionPolicy:]
connectionPrimary
connectionSecondary
interfacePriority
interfaceWiFi
interfaceCellular
preferRelay
preferP2P
connectionTypePriority
connectionTypeRelay
connectionTypeP2P
preferIPv6
preferIPv4
networkTypePriority
IPv6
IPv4
DLCreateHandle
DLCloseHandle
DLUpdate
DLUnlock
DLSetConfIndex
DLGetData
DLSetState
DLGetState
DLGetCallID
DLSetAck
DLGetAck
DLPutMsg
DLGetMsg
DLIncreaseLocalSeq
DLSetMediaType
DLGetConfIndex
DLGetSIPPing
MatchSipMsgAndLock
+[VCMediaNegotiatorStreamGroupU1Configuration updateCameraU1Config:localConfig:]
+[VCMediaNegotiatorStreamGroupU1Configuration updateScreenU1Config:localConfig:]
-[VCMediaNegotiatorStreamGroupU1Configuration initStreamGroupU1ConfigForGroupId:withLocalConfig:]
+[VCMediaNegotiatorStreamGroupU1Configuration negotiatedSystemAudioSettingsBetweenLocalU1Config:remoteU1Config:]
+[VCMediaNegotiatorStreamGroupU1Configuration negotiatedMicrophoneSettingsBetweenLocalU1Config:remoteU1Config:]
+[VCMediaNegotiatorStreamGroupU1Configuration negotiatedCameraSettingsBetweenLocalU1Config:remoteU1Config:]
+[VCMediaNegotiatorStreamGroupU1Configuration negotiatedScreenSettingsBetweenLocalU1Config:remoteU1Config:]
v32@?0@"NSNumber"8Q16^B24
+[VCMediaNegotiatorStreamGroupU1Configuration updateCommonNegotiatedVideoSettings:localU1Config:remoteU1Config:]
segmentText
segmentConfidence
segmentLength
segmentLocation
-[VCCaptionsTranscriptionSegment initWithCoder:]
%@<%p> confidence=%u range=%@
-[VCIDRScheduler initWithStreams:captureFramerate:]
-[VCIDRScheduler computeBasePeriod]
-[VCIDRScheduler computeCaptureFramerate]
-[VCIDRScheduler computeGroupList]
-[VCIDRScheduler computeSchedulerItemList]
-[VCIDRScheduler computeSchedulerItemsBudget]
-[VCIDRScheduler placeRemainingItems:placedItems:leftItem:rightItem:]
-[VCIDRScheduler computeSchedulerItemsPosition]
IDR Scheduler: framerate:%d, basePeriod:%dms framesPerBasePeriod:%d groups:%@
utteranceNumber
updateNumber
isLocal
isFinal
segments
-[VCConnectionManagerLegacy shouldNominateCandidatePairInternal:interfaceMask:nominated:demote:connectionPriority:replaceOnly:]
OPTIMAL
PRIMARY
SECONDARY
-[VCConnectionManagerLegacy addConnection:]
-[VCConnectionManagerLegacy removeConnection:]
-[VCConnectionManagerLegacy removeConnectionWithIPPortInternal:isLocalInterface:]
LOCAL
REMOTE
-[VCConnectionManagerLegacy reportConnection:isInitialConnection:]
connectionResultCallback %s/%s (rtt: %f cell: %d/%d v6/rel: %d/%d)  RTT=%d/%d
relay
VPCEnabled
ConnectionType
LocalCandidate
RemoteCandidate
LocalInterfaceType
RemoteInterfaceType
relayServer
relayType
IDSToken
VPCENABLED
EndToEnd
-[VCConnectionManagerLegacy sourceDestinationInfo:isSourceOnCellular:isSourceIPv6:]
MQCreateHandle
MQCloseHandle
MQPut
MQGet
MQDeleteAt
-[VCRateControlAlgorithmLowLatencyNOWRD configure:restartRequired:]
Configure with targetBitrate=%d, minBitrate=%d, maxBitrate=%d
-[VCRateControlAlgorithmLowLatencyNOWRD doRateControlWithStatistics:]
-[VCRateControlAlgorithmLowLatencyNOWRD doRateControlWithVCRCStatistics:]
-[VCRateControlAlgorithmLowLatencyNOWRD doRateControlWithNWConnectionStatistics:]
Re-enter Initial Rampup!
OWRD has been 0 for %f seconds, reset NOWRDAcc
Stop ramping down due to nw connection NACK [loss:%u]
[%u] Congestion due to nw connection!!! New bitrate down to %u
-[VCRateControlAlgorithmLowLatencyNOWRD printRateControlInfoToLogDump]
%8.3f/%04X:
%.4f
%.4f
%.4f
%.4f %c
RTT:%-4u
PLR:%4.2f@%.1f
RRx:%u
MBL:%d %u
%4u/%4u
 %4u:%4u/%4u  %4u:%4u/%4u  CS: %04X %04X %u BB: %3u
 UAT %s %s
-[VCImageConverterBase setUpBufferPoolForOutputWidth:outputHeight:]
-[AVCVideoFrame setDepthPixelBuffer:]
-[AVCVideoFrame setPixelBuffer:]
-[AVCVideoFrame dealloc]
-[VCConnectionSelector updateConnectionForDuplicationForDuplicationReason:duplicationEnhancementEnabled:preferredLocalInterfaceForDuplication:preferredRemoteInterfaceForDuplication:connectionArray:]
-[VCConnectionSelector selectPrimaryAndSecondaryWithConnection:isEndToEnd:]
-[VCConnectionSelector updateConnectionSelectionPolicyWithPreferRelayOverP2P:preferNonVPN:preferE2E:]
-[VCConnectionSelector updateSelectedConnectionsForGroupType:connectionAdded:]
-[VCConnectionSelector updateSelectedConnectionsForGroupType:connectionRemoved:connectionArray:]
com.apple.VideoConference.VCControlChannelDialog.handshakeOperationQueue
-[VCControlChannelDialog initWithSessionID:participantID:participantUUID:participantConfig:transactionDelegate:]
-[VCControlChannelDialog dealloc]
-[VCControlChannelDialog removeTransactionForTransactionID:]
-[VCControlChannelDialog processMessageData:participantID:topic:transactionID:messageStatus:isInternalMessage:]
-[VCControlChannelDialog doHandshakeWithMessage:topic:afterDelay:withOptions:]_block_invoke
-[VCControlChannelDialog sendAllCachedMessagesAndDisableHandshakeWhenDone]
CachedTopic
CachedMessage
CachedOptions
Temeout
-[VCControlChannelDialog startHandshakeWithMessage:topic:withOptions:]
-[VCControlChannelDialog cacheOutgoingMessage:topic:timeout:withOptions:]
-[VCControlChannelDialog sendReliableMessage:withTopic:timeout:withOptions:]
-[VCControlChannelDialog sendReliableMessageInternal:withTopic:timeout:useFastRetries:withOptions:]
-[VCControlChannelDialog sendUnreliableMessage:withTopic:sessionID:participantID:transactionDelegate:]
-[VCControlChannelDialog newDataFromMessage:topic:transactionID:isReliable:transactionDelegate:]
-[VCControlChannelDialog confirmTransaction:]
%@ (size=%lu):
Media Blob (v2) - %s
-[VCMediaNegotiationBlobV2(Utils) printWithTitle:logFile:]
%s  
Media Blob (v2) - 
vcSessionError
com.apple.AVConference.VCSessionManager.xpcCommandQueue
com.apple.AVConference.VCSessionManager.sessionQueue
-[VCSessionManager setSharingEnabled:]_block_invoke
vcSessionStarted
vcSessionDidStart
vcSessionDidStopMetadata
vcSessionDidStop
vcSessionParameterRateAdaptationInfo
vcSessionUplinkRateAdaptationInfoDidChange
vcSessionDownlinkRateAdaptationInfoDidChange
vcSessionSucceeded
vcSessionParticipantID
vcSessionParameterStreamTokens
vcSessionSpatialSourceIDs
vcSessionAddParticipantDidSuceed
vcSessionRemoveParticipantDidSucceed
vcSessionConfiguration
vcSessionDidUpdateConfiguration
vcSessionOneOnOneModeEnabled
vcSessionSetOneToOneEnabledDidChange
vcServiceType
vcSessionParameterAudioEnabled
vcSessionAudioEnabledDidSucceed
vcSessionParameterVideoEnabled
vcSessionVideoEnabledDidSucceed
vcSessionParameterScreenEnabled
vcSessionScreenEnabledDidSucceed
vcSessionRemoteAudioEnabledDidChange
vcSessionRemoteVideoEnabledDidChange
vcSessionRemoteScreenEnabledDidChange
vcSessionParameterAudioPaused
vcSessionAudioPausedDidSucceed
vcSessionParameterVideoPaused
vcSessionVideoPausedDidSucceed
vcSessionRemoteAudioPausedDidChange
vcSessionRemoteVideoPausedDidChange
vcSessionParameterMediaType
vcSessionParameterMediaState
vcSessionMediaStateDidChange
vcSessionRemoteMediaStateDidChange
vcSessionShouldReconnect
vcSessionParameterParticipantMediaPriority
vcSessionParameterParticipantMediaPriorityString
vcSessionMediaPrioritiesDidChange
vcSessionDidDetectError
vcSessionIDSDestination
vcSessionParticipantData
-[VCSessionManager registerBlocksForService]_block_invoke
vcSessionUUID
vcSessionToken
vcSessionCapabilities
vcSessionInitialize
vcSessionTerminate
vcSessionParticipantIDs
vcSessionRemoveParticipants
vcSessionLocalParticipantConfig
vcSessionStart
vcSessionStop
vcSessionUpdateConfiguration
vcSessionParticipantConfigs
-[VCSessionManager registerBlocksForService]_block_invoke_5
vcSessionAddParticipants
vcSessionParameterMute
vcSessionSetMute
vcSessionParameterVolume
/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCSessionManager.m
vcSessionSetVolume
vcSessionParameterAudioPosition
vcSessionSetAudioPosition
-[VCSessionManager registerBlocksForService]_block_invoke_4
vcSessionSetAudioEnabled
vcSessionSetVideoEnabled
vcSessionSetScreenEnabled
vcSessionSetAudioPaused
vcSessionSetVideoPaused
-[VCSessionManager registerBlocksForService]_block_invoke_3
vcSessionSetMediaState
vcSessionSetOneToOneEnabled
vcSessionParameterParticipantConfiguration
vcSessionParameterVideoQuality
vcSessionParameterVisibilityIndex
vcSessionParameterProminenceIndex
vcSessionPositionalInfo
-[VCSessionManager registerBlocksForService]_block_invoke_2
vcSessionPresentationInfo
vcSessionUpdateParticipantConfiguration
vcSessionIDSParticipantID
vcSessionParameterMediaStates
-[VCSessionUplinkBandwidthAllocatorMultiway init]
-[VCSessionUplinkBandwidthAllocatorMultiway mediaBitratesForStreamToken:targetNetworkBitrate:]
-[VCSessionMediaNegotiator initWithLocalConfiguration:]
v32@?0@"NSNumber"8@"<VCMediaNegotiatorProtocol>"16^B24
-[VCSessionMediaNegotiator processRemoteNegotiationData:]
v32@?0@"NSNumber"8@"NSData"16^B24
+[VCSessionMediaNegotiator streamGroupIDsWithMediaBlob:]
+[VCSessionMediaNegotiator initializeLocalConfiguration:negotiationData:deviceRole:preferredAudioPayload:]
-[VCDatagramChannelIDSEmulated initWithIDSDatagramChannel:mode:]
-[VCDatagramChannelIDSEmulated dealloc]
-[VCDatagramChannelIDSEmulated writeDatagram:datagramSize:datagramInfo:options:completionHandler:]
-[VCDatagramChannelIDSEmulated writeToEmulatedNetworkWithDatagram:datagramSize:datagramInfo:options:]
-[VCDatagramChannelIDSEmulated writeDatagrams:datagramsSize:datagramsInfo:datagramsCount:options:completionHandler:]
-[VCDatagramChannelIDSEmulated setupEmulatedNetwork]
-[VCDatagramChannelIDSEmulated setupEmulatedNetwork]_block_invoke
-[VCMediaControlInfoGenerator newControlInfoWithBuffer:length:optionalControlInfo:]
-[VCAudioPowerSpectrumMeter initWithBinCount:refreshRate:delegate:]
-[VCAudioPowerSpectrumMeter dealloc]
-[VCAudioPowerSpectrumMeter registerNewAudioPowerSpectrumForStreamToken:powerSpectrumKey:spectrumSource:]
-[VCAudioPowerSpectrumMeter releaseAudioPowerSpectrumForStreamToken:]
-[VCAudioPowerSpectrumMeter unregisterAllStreams]
_VCAudioPowerSpectrumMeter_ProcessEventQueue
_VCAudioPowerSpectrumMeter_AddStream
_VCAudioPowerSpectrumMeter_RemoveAllStream
-[VCMediaStreamReceiveGroup initWithConfig:]
-[VCMediaStreamReceiveGroup setActiveStreamIDs:]
-[VCMediaStreamReceiveGroup setActualBitrateForOptedInStreamWithActiveStreamID:]
-[VCMediaStreamReceiveGroup vcMediaStreamDidRTPTimeOut:]
-[VCMediaStreamReceiveGroup vcMediaStreamDidRTCPTimeOut:]
-[VCMediaStreamReceiveGroup vcMediaStreamDidDecryptionTimeOut:]
-[VCMediaStreamReceiveGroup vcMediaStreamDidDecryptionTimeOutForMKMRecovery:]
-[VCMediaStreamReceiveGroup notifyChangeInActiveMediaBitrateTo:from:]
VCTimescaleInterface_InitializeWSOLA
VCTimescaleInterface_InitializePSOLA
com.apple.AVConferenceVCQoSMonitorManager.XPCCommandQueue
-[VCQoSMonitorManager registerQoSReportingSourceForToken:]_block_invoke
-[VCQoSMonitorManager unregisterQoSReportingSourceForToken:]_block_invoke
vcQoSReportDictionary
vcQoSReportToken
-[VCQoSMonitorManager updateQoSReport:toClientsWithToken:]_block_invoke
vcQoSMonitorCallbackDidReceiveReport
vcQoSReportingInterval
-[VCQoSMonitorManager registerBlocksForService]_block_invoke
vcQosMonitorInitializForStreamToken
vcQosMonitorTerminate
vcQosMonitorRegisterStreamToken
com.apple.AVConference.VCMomentssManager.XPCCommandQueue
-[VCMomentsManager registerMomentsMessenger:withStreamToken:]_block_invoke
-[VCMomentsManager unregisterMomentsMessengerWithStreamToken:]_block_invoke
vcMomentsStreamToken
VCMomentsManager
vcMomentsCapabilities
-[VCMomentsManager registerBlocksForService]_block_invoke
vcMomentsInitialize
vcMomentsUninitialize
vcMomentsStartRequest
vcMomentsEndRequest
vcMomentsRejectRequest
-[VCMomentsManager notifyClientsWithStreamToken:service:arguments:]_block_invoke
streamToken=%u, service=%s, arguments=%s
vcMomentsError
vcMomentsDidStartProcessingRequest
vcMomentsStillImageURL
vcMomentsStillImageURLSandboxExtensionToken
-[VCMomentsManager streamToken:didEndProcessingRequest:stillImageURL:movieURL:error:]
vcMomentsMovieURL
vcMomentsMovieURLSandboxExtensionToken
vcMomentsDidEndProcessingRequest
FaceTimePhotosSaveImagesForDebug
debug
-[VCMomentsManager saveImage:movie:]
vcMomentsDidFinishRequest
vcMomentsCapabilitiesDidChange
-[VCMomentsManager streamTokenDidCleanupAllRequests:]_block_invoke
*Invalid*
INVITE
OPTIONS
CANCEL
REGISTER
MESSAGE
REFER
SUBSCRIBE
NOTIFY
INFO
ParseMessage
SIP/
ParseStatusLine
SIP/2.0
ParseRequestLine
kern.osversion
iProd
-[VCMomentsCollector dealloc]
-[VCWRMHandler shouldForceWRMRecommendationUsingUserDefaults]
-[VCWRMHandler shouldRequestWRMNotificationWithDuplicationReason:isDuplicationEnabled:isLocalUsingCellular:atTime:]
-[VCWRMHandler processLocalWRMNotification:isAudioOnly:]
Cellular
-[VCWRMHandler processRemoteWRMSuggestion:isRemoteDuplicating:]
with
without
_VCJBTargetEstimatorSynchronizer_Configure
_VCJBTargetEstimatorSynchronizer_StoreCurrentSize
VCJBTargetEstimatorSynchronizer_Create
VCJBTargetEstimatorSynchronizer_RegisterClient
VCJBTargetEstimatorSynchronizer_GetSyncTarget
VCJBTargetEstimatorSynchronizerClass
_VCJBTargetEstimatorSynchronizer_Finalize
_VCJBTargetEstimatorSynchronizer_ApplyPolicy
_VCJBTargetEstimatorSynchronizer_ApplyPolicy_MinMax
%s%d
%s%c
%s%.4f
%010u-%s
avconference
.jbsyncdump
_VCJBTargetEstimatorSynchronizer_CheckIfDumpIsInitialized
%sClient%i
%sSyncTarget
-[VCVideoStreamReceiver initWithConfig:]
com.apple.VideoConference.VCVideoStreamReceiver
v16@?0I8B12
com.apple.AVConference.videoreceiver.networkreceiveproc
-[VCVideoStreamReceiver startNetworkReceiveThread]_block_invoke
-[VCVideoStreamReceiver updateSequenceNumber:]
-[VCVideoStreamReceiver scheduleDecodeForTimestamp:]
video-stream-receiver
enableLateVideoFrameRecovery
-[VCVideoStreamReceiver processVideoRTP]
-[VCVideoStreamReceiver processReceptionReportBlock:blockCount:arrivalNTPTime:]
-[VCVideoStreamReceiver processVideoRTCP]
-[VCVideoStreamReceiver scheduleDecodeForFrameWithBuffer:timestamp:hostTime:showFrame:]
-[VCVideoStreamReceiver decodeFrame:showFrame:]
-[VCVideoStreamReceiver canDequeue:forTimestamp:]
-[VCVideoStreamReceiver dequeueAndDecodeForTimestamp:]
-[VCVideoStreamReceiver gatherRealtimeStats:]
VCVSTMMB
VCVSRxOperatingBitrate
%.5f
VCVSRxPacketLossPercentage
VCVSRxRoundTripTime
VCVSRxMaxOWRD
VCVSRxNOWRD
VCVSRxNOWRDSHORT
VCVSRxNOWRDACC
VCVSRxVideoStallDuration
VCVSRxMaxFrameDuration
VCVSRxAvgBitrate
VCVSRxMaxBitrate
VCVSRxMinBitrate
VCVSRxAvgFramerate
VCVSRxMaxFramerate
VCVSRxMinFramerate
VCVSRxVideoWidth
VCVSRxVideoHeight
VCVSRxVideoOrientation
-[VCVideoStreamReceiver handleActiveConnectionChange:]
_VCVideoStreamReceiver_CreateVideoFormatDescription
decoderFrameCallback
native
webrtc
UseVideoJitterForVideoPlayout
VCSessionParticipantRemote
-[VCSessionParticipantRemote initWithConfig:delegate:]
participantID:%@ 
-[VCSessionParticipantRemote initializeParticipantType]
-[VCSessionParticipantRemote setupSpatialAudioWithMetadata:spatialMetadataEntryMap:]
-[VCSessionParticipantRemote spatialMetadataEntryForMediaType:]
-[VCSessionParticipantRemote storeSpatialAudioMetadataEntry:forMediaType:]
-[VCSessionParticipantRemote participantSpatialAudioSourceIDs]
-[VCSessionParticipantRemote setAudioPaused:]_block_invoke
v16@?0@"<VCSessionParticipantDelegate>"8
-[VCSessionParticipantRemote dispatchedSetRemoteAudioPaused:]
-[VCSessionParticipantRemote dispatchedSetRemoteAudioEnabled:]
-[VCSessionParticipantRemote dispatchedSetRemoteVideoEnabled:]
-[VCSessionParticipantRemote dispatchedSetRemoteScreenEnabled:]
-[VCSessionParticipantRemote dispatchedSetRemoteSystemAudioPaused:]_block_invoke
-[VCSessionParticipantRemote setTransitionToEnabled:]
-[VCSessionParticipantRemote setTransitionToPaused:]
-[VCSessionParticipantRemote setTransitionToDisabled:]
-[VCSessionParticipantRemote updateMediaState:forStreamGroup:]
-[VCSessionParticipantRemote setRemoteMediaState:forMediaType:]_block_invoke
-[VCSessionParticipantRemote setRemoteMediaState:forMediaType:]_block_invoke_2
-[VCSessionParticipantRemote dispatchedSetRemoteVideoPaused:]
-[VCSessionParticipantRemote applyVideoEnabledSetting:]
forceVisibilityIndex
forceProminenceIndex
-[VCSessionParticipantRemote updatePositionalInfo:shouldReapply:]
-[VCSessionParticipantRemote processParticipantInfo]
uuid:%@ (remote)
-[VCSessionParticipantRemote getMajorVersionNumber]
-[VCSessionParticipantRemote supportsNegotiatedCoordinateSystem]
-[VCSessionParticipantRemote supportsGFTSwitchToOneToOne]
-[VCSessionParticipantRemote isParticipantPeace:]
-[VCSessionParticipantRemote setupAudioStreamConfiguration:withStreamGroupConfig:streamGroupStreamConfig:]
-[VCSessionParticipantRemote setupBandwidthAllocationTableForMediaStreamConfigs:streamGroupID:entryType:]
-[VCSessionParticipantRemote entryForStreamID:]
-[VCSessionParticipantRemote appendOptedInStreamID:toOptInStreamsIDs:targetBandwidthEntry:forceSeamlessTransition:]
-[VCSessionParticipantRemote recommendedStreamIDsForSelectedMediaEntries:forceSeamlessTransition:]_block_invoke
-[VCSessionParticipantRemote negotiateAudioRules:]_block_invoke
-[VCSessionParticipantRemote configureWithOneToOneParticipantConfig:operatingMode:]_block_invoke
-[VCSessionParticipantRemote setVideoStreamDelegate:]
-[VCSessionParticipantRemote redundancyController:redundancyPercentageDidChange:]_block_invoke
-[VCSessionParticipantRemote redundancyController:redundancyPercentageDidChange:]_block_invoke_2
-[VCSessionParticipantRemote pushEventToNwActivity:started:]
-[VCSessionParticipantRemote setVideoDegraded:]
-[VCSessionParticipantRemote setRemoteMediaStalled:]
+[VCSessionParticipantRemote maxCameraNetworkBitrateForVideoQuality:isLocalOnWiFi:isRedundancyRequested:isSharingEnabled:]
-[VCSessionParticipantRemote cappedVideoQualityWithShouldLimitCameraQualityForPIP:]
-[VCSessionParticipantRemote appendStreamGroupsMediaEntries:]
-[VCSessionParticipantRemote validateMediaEntries:]
Missing audio entries
-[VCSessionParticipantRemote mediaEntries]
-[VCSessionParticipantRemote isVideoExpected]
-[VCSessionParticipantRemote newMultiwayConfigWithStreamGroupStreamConfig:maxIDSStreamIDCount:groupID:]
-[VCSessionParticipantRemote setupVideoStreamConfiguration:withStreamGroupStreamConfig:codecConfigs:multiwayConfig:groupID:]
-[VCSessionParticipantRemote newMediaStreamConfigWithStreamGroupConfig:streamConfig:rateControlConfig:multiwayConfig:]
-[VCSessionParticipantRemote setupStreamConfigWithCodecs:streamConfig:codecConfigs:featureStringsDict:]
-[VCSessionParticipantRemote newMediaStreamConfigWithStreamConfig:streamGroupConfig:maxIDSStreamIDCount:]
-[VCSessionParticipantRemote newMediaStreamInfoWithNegotiationConfig:streamToken:]
participantID:%@ streamToken:%d
-[VCSessionParticipantRemote spatialChannelIndex:spatialAudioSourceID:forMediaType:]
-[VCSessionParticipantRemote setupSpatialInfoForStreamGroupConfig:]
-[VCSessionParticipantRemote newStreamGroupConfigWithNegotiationConfig:]
-[VCSessionParticipantRemote addOneToOneStreamConfigToMediaStreamInfo:negotiatorStreamGroupConfig:]
-[VCSessionParticipantRemote setupStreamGroupWithConfig:]
-[VCSessionParticipantRemote newVideoStreamGroupWithStreamGroupConfig:]
RepresentationsAsMediaTypes
-[VCSessionParticipantRemote shouldSetupStreamGroupWithID:]
session_%s-participant_%s-groupid_%s
-[VCSessionParticipantRemote createJitterBufferTargetEstimatorSynchronizer:syncGroupID:]
-[VCSessionParticipantRemote setupJBTargetSynchronizers]
-[VCSessionParticipantRemote setupStreamGroups]
-[VCSessionParticipantRemote updateShouldEnableFaceZoom]
forceDisableMLEnhance
-[VCSessionParticipantRemote updateShouldEnableMLEnhance]
-[VCSessionParticipantRemote createAndResumeFetchTimer]
-[VCSessionParticipantRemote createAndResumeFetchTimer]_block_invoke_2
-[VCSessionParticipantRemote createAndResumeFetchTimer]_block_invoke
-[VCSessionParticipantRemote cancelAndReleaseFetchTimer]
-[VCSessionParticipantRemote updateAndHandleVideoMediaStall:isOneToOneStream:]
_VCSessionParticipantRemote_AddMetaDataToSpatialAudioSourceID
idsLinkSuggestionEnabled
UseIDSLinkSuggestion
-[VCTransportSessionIDS initWithCallID:requireEncryptionInfo:reportingAgent:notificationQueue:dataPath:]
-[VCTransportSessionIDS dispatchedProcessDatagramChannelEventInfo:]
Received IDS data channel event[%d] with payload=%s
idsLinkSuggestionKey
idsLinkIPPreferenceKey
lipp
-[VCTransportSessionIDS remoteDeviceVersionIDS]
-[VCTransportSessionIDS start]_block_invoke
Start VCTransportSessionIDS failed
Destination/socket not set
v16@?0@"NSDictionary"8
v24@?0@"NSError"8{?=q}16
preference-remote-device-version-key
-[VCTransportSessionIDS start]_block_invoke_3
Could not start transport session
datagramChannel start failed
onStart failed
-[VCTransportSessionIDS startMKMRecoveryForParticipantIDs:]
-[VCTransportSessionIDS setConnectionSetupPiggybackBlob:]_block_invoke
-[VCTransportSessionIDS setPiggybackBlobPreference]
-[VCTransportSessionIDS handleLinkConnectedWithInfo:]
-[VCTransportSessionIDS handleLinkDisconnectedWithInfo:]
-[VCTransportSessionIDS handleDefaultLinkUpdatedWithInfo:]
-[VCTransportSessionIDS handleRATChanged:]
-[VCTransportSessionIDS handleIDSEncryptionInfoEvent:]
-[VCTransportSessionIDS handleIDSMembershipChangeInfoEvent:]
-[VCTransportSessionIDS handleProbingResponse:]
-[VCTransportSessionIDS handleChannelInfoReport:]
-[VCTransportSessionIDS handleReportingBlob:]
IDSCB
_VCTransportSessionIDS_writeCompletionHandler
success
iPhone9,1
1280x720
iPhone12,1
1920x1080
iPhone11,8
iPhone10,1
iPhone12,8
iPhone13,4
iPhone8,1
iPad13,8
1920x1440
iPad13,4
iPad11,2
1024x768
iPad11,1
iPad11,6
iPad8,12
iPad7,11
iPad7,12
iPad7,5
iPad7,6
720x720
iPad11,3
MacBookPro16,1
iMac18,3
iMac18,2
-[VCVideoReceiverBase setEnableCVO:cvoExtensionID:]
-[VCVideoReceiverBase setEnableRateAdaptation:maxBitrate:minBitrate:adaptationInterval:]
-[VCVideoReceiverBase startVideo]
-[VCVideoReceiverBase stopVideo]
-[VCVideoReceiverBase pauseVideo]
-[VCVideoReceiverBase rtcpSendIntervalElapsed]
-[VCVideoReceiverBase startSynchronization:]
-[VCVideoReceiverBase updateSourcePlayoutTimestamp:]
-[VCVideoReceiverBase collectChannelMetrics:interval:]
-[VCVideoReceiverBase setTargetStreamID:]
-[VCVideoReceiverBase lastDisplayedFrameRTPTimestamp]
-[VCVideoReceiverBase handleActiveConnectionChange:]
-[VCMediaStreamGroupConfig addMediaStreamInfo:]
-[VCMediaStreamGroupConfig setupStreams]
VCAllocatorMultiQueue_Create
_VCAllocatorMultiQueueCallback_Alloc
_VCAllocatorMultiQueue_FindBufferQueue
_VCAllocatorMultiQueueCallback_Realloc
_VCAllocatorMultiQueue_AllocateInfo
_VCAllocatorMultiQueue_InitializeInfo
_VCAllocatorMultiQueue_InitializeQueues
_VCAllocatorMultiQueue_FinalizeInfo
_VCAllocatorMultiQueue_CleanupQueue
SIPSetMessageDelegateForCallID
SIPMessageReceivedHandler
SIPSetCellConditionChangeHandler
SIPCreateHandle
SIPCloseHandle
SIPSetPacketMultiplexMode
SIPStartListen
SIPStopListen
SIPConnectIPPort
10.0.0.1
10.0.0.2
SIPCancel
Remote Hang Up
SIPHangupWithTimeout
SIPCloseCall
SIPSendMessage
VCHandoverCandidateChange:VCHandoverNewCandidateBlob
SIPSendMessageAll
PING
SIPGetRemoteInfo
SIPSetDoKeyExchange
SIPSetEnableCompression
SIPSetAllowSameSourceDestination
com.apple.AVConference.SIP.tuMessageCallbackProc
TUMsgCallback
com.apple.avconference.sip.newcallproc
SIPNewCallProc
Timeout
Transport Error(%08X)
Cancelled
Internal Error(%08X)
SendTAStatus
SendTAStatusGeneric
com.apple.avconference.sip.cancelproc
SIPCancelProc
com.apple.avconference.sip.hangupproc
SIPHangupProc
com.apple.avconference.sip.messageproc
SIPMessageProc
SendTPStatus
SIPMapPacketMultiplexModeToTransportMode
SIPListenOnVirtualInterface
SIPStopListenOnInterface
virtual
physical
SIPListenOnPhysicalInterface
DLIsFinishedCallback
TUGenericLogCallback
allowRTCPFB
videoPayloadCollections
customVideoWidth
customVideoHeight
tilesPerFrame
ltrpEnabled
pixelFormats
hdrModesSupported
-[VCStreamInputVideo initWithStreamInputID:format:delegate:delegateQueue:remoteQueue:]
videoStreamAverageBitrateWindowDuration
-[VCVideoStreamRateAdaptation runVideoStreamRateAdaptation]
-[VCVideoStreamRateAdaptation receivedTMMBN:]
-[VCVideoStreamRateAdaptation scheduleTMMBR:]
VCVSRxOWRD
-[VCVideoRuleCollectionsScreenAirplayMac initWithHardwareSettings:]
-[VCVideoRuleCollectionsScreenAirplayMac setupH264Rules]
videoRulesForFormatList
client format: 
relay format:  
-[VCAudioRelayIO pushAudioSamples:]
-[VCAudioRelayIO createPacketThreadWithIOBufferDuration:name:error:]
createPacketThreadWithIOBufferDuration failed
PacketThread_Create failed
-[VCAudioRelayIO didUpdateBasebandCodec:]
-[VCDisplayLink initWithHandler:]
-[VCDisplayLink initWithHandler:threadPriority:threadOptions:threadIdentifier:]
-[VCDisplayLink ensureDisplayIsReady]
refreshRate
-[VCDisplayLink activate]
-[VCDisplayLink handleWaitToRunTimeout]
-[VCDisplayLink dealloc]
-[VCDisplayLink runDisplayLinkThreadWithStopRequested:]
-[VCDisplayLink observeValueForKeyPath:ofObject:change:context:]
_VCDisplayLinkRunLoopObserverCallBack
vcStreamOutputInProcessDelegate
vcStreamOutputInProcessDelegateQueue
-[VCStreamOutput initWithStreamToken:clientProcessID:synchronizationDelegate:delegate:delegateQueue:]
out of
-[VCStreamOutput createRemoteQueue]
-[VCStreamOutput enqueueAttributes:]
VCStreamOutput_EnqueueSampleBuffer
com.apple.VCStreamOutput.XPCCommandQueue
-[VCStreamOutput initXPCCommandQueue]
_VCStreamOutput_SendSampleBufferToXPCClient
streamOutputDidReceiveFrame
_VCStreamOutput_dispatchToDelegate
-[VCMediaNegotiationBlobV2BandwidthSettings(Utils) initWithBandwidthConfigurations:]
-[VCMediaNegotiationBlobV2BandwidthSettings(Utils) bandwidthConfigurations]
BandwidthSettings: 2G=%u 3G=%u LTE=%u 5G=%u Wifi=%u
-[VCMediaNegotiationBlobV2BandwidthSettings(Utils) printWithLogFile:prefix:]
Accept
Accept-Encoding
Accept-Language
Alert-Info
Allow
Allow-Events
Authentication-Info
Authorization
Call-ID
Call-Info
Contact
Content-Disposition
Content-Encoding
Content-Language
Content-Length
Content-Type
CSeq
Date
Error-Info
Event
Expires
From
In-Reply-To
Max-Forwards
MIME-Version
Min-Expires
Organization
Priority
Proxy-Authenticate
Proxy-Authorization
Proxy-Require
Record-Route
Refer-To
Reply-To
Require
Retry-After
Route
Server
Subject
Subscription-State
Supported
Timestamp
Unsupported
User-Agent
Warning
WWW-Authenticate
SKESeq
X-Call-ID
Reason
active
pending
terminated
deactivated
probation
rejected
timeout
giveup
noresource
conference
refer
ParseHeader
%s: %s
, %s
%s: 
%c: 
%c: %s
isfocus
ismultiway
%c: %s%s%s
%CLENGTH%
%c: %d
%s: %lu %s
%c: %s;%s
%s: %d
;%s%s
tag=
%c: %s<%s>%s
%s: %s; cause=%d
%s: %s<%s>
;%s%d
expires=
%s: %s%s
reason=
retry-after=
%s: %s%s%s
%c: %s%s
%s: %s
%c: %s/%s %s%s%s
%c: %s/%s [%s]%s%s
branch=
received=
%s: %lu;%d
CreateAcceptHdr
application/sdp
message/sipfrag
application/conference-info+xml
CreateAllowHdr
CreateAllowEventsHdr
CreateCallIDHdr
CreateContactHdr
CreateContentEncodingHdr
CreateContentLengthHdr
CreateContentTypeHdr
CreateCSeqHdr
CreateExpiresHdr
CreateFromHdr
CreateMaxForwardsHdr
CreateMinExpiresHdr
CreateToHdr
CreateUserAgentHdr
CreateViaHdr
CreateReasonHdr
CopySipHeader
ParseUnsupported
ParseAcceptHdr
ParseAllowHdr
ParseAllowEventsHdr
ParseCallIDHdr
ParseContactHdr
ParseContentEncodingHdr
ParseContentLengthHdr
ParseContentTypeHdr
ParseCSeqHdr
ParseEventHdr
ParseExpiresHdr
ParseFromHdr
ParseMaxForwardsHdr
ParseReasonHdr
cause=
text=
ParseMinExpiresHdr
ParseReferToHdr
ParseSubscriptionStateHdr
ParseToHdr
ParseUserAgentHdr
ParseViaHdr
ParseSKESeqHdr
ParseXCallIDHdr
ReplaceKeyword
CreateInvite
"%s"
Viceroy 1.7.0/GK
CreateAck
CreateCancel
CreateBye
application/ske
CreateBinaryMessageInDialog
text/plain
CreateGenericStatus
%s %s %s
%s %d %s
ConstructSipMsg
AssignHeader
CreateGenericSIPMsg
SIPCompressCallback
%08x-%04x-%04x-%04x-%08x%04x
z9hG4bK%08x%08x
ParseSipUri
transport=
method=
%s:%s%s%s%s%s%s
%s:%s%s[%s]%s%s%s
-[VCCaptionsTranscription initWithCoder:]
%@<%p> utteranceNumber=%u updateNumber=%u isLocal=%d isFinal=%d streamToken=%ld segments=%@
-[VCMediaStreamStats init]
Add participant failed
Remote participant already exist in session
Remote participant data is nil
Trying to remove an unknown participant
Invalid participant
Bad API usage
Start called on a stopping session
Stop called on a starting session
Start called while session is already in progress
Stop called on an already stopped session
Session start failed
One or more participants failed to start
Local source collision detected
Remote source collision detected
Update configuration failed
Failed to update session configuration
Media decryption failed
Remote media decryption failed
Fractured media detected
Remote participant subscribed to unknown stream ID
No remote packets for %ld seconds
Remote network outage?
Init remote participant failed
Unable to init remote participant
Add OneToOne Participant failed
Unable to add OneToOne participant
Configure remote participant failed
Unable to configure remote participant
Configure OneToOne Local participant failed
Unable to configure OneToOne Local participant
Session failed to switch from Multiway to OneToOne
Unable to send control message
Session failed to switch from OneToOne to Multiway
Uplink key material failed to roll
No uplink key material update event
Call terminated gracefully
Remote participant hung up
Call failed
Media server terminated
Failed to set the volume
Invalid input
Failed to set audio position
Audio position value is out of range
Participant start error
Start called on stopping participant
Participant stop error
Stop called on a starting participant
Start called on an already started participant
Stop called on an already stopped participant
Participant enabling/disabling audio/video in progress
Enable/disable audio or video called when it is already in progress
Participant stop in progress
Enable/disable audio or video called on a stopping participant
Participant start in progress
Enable/disable audio or video called on a starting participant
Participant in invalid
API called when not in the right state
Memory allocation failed
Participant media state change error
Setting the state of this media type is unsupported
Participant media state inconsistency
Cannot set different states on stream groups that belong to the same media type
Participant captions audio IO failure
Failed to configure audio IO. Will not start captions.
Participant argument error
The argument is invalid.
Media representation error
The provided representation is unsupported.
Speech Recognizer Error
The Speech Framework is unavailable
Captions State Transition Failed
Captions not supported
Invalid captions state transition
Unsupported transition
Recognizer is unavailable
Captions Initalization Error
Recognizer Request/Task or Converter Failed
Invalid Status
Trying
Ringing
Call Is Being Forwarded
Queued
Session Progress
Accepted
Multiple Choices
Moved Permanently
Moved Temporarily
Use Proxy
Alternative Service
Bad Request
Unauthorized
Payment Required
Forbidden
Not Found
Method Not Allowed
Not Acceptable
Proxy Authentication Required
Request Timeout
Gone
Request Entity Too Large
Request-URI Too Large
Unsupported Media Type
Unsupported URI Scheme
Bad Extension
Extension Required
Interval Too Brief
Temporarily not available
Call Leg/Transaction Does Not Exist
Loop Detected
Too Many Hops
Address Incomplete
Ambiguous
Busy Here
Request Terminated
Not Acceptable Here
Bad Event
Request Pending
Undecipherable
Internal Server Error
Not Implemented
Bad Gateway
Service Unavailable
Server Time-out
SIP Version not supported
Message Too Large
Busy Everywhere
Decline
Does not exist anywhere
ntpTime
cname
abSwitches
screenRes
TACreateHandle
TACloseHandle
TASend
TACancel
RTTAdjustedTimeOut(%d): %d -> %d (RTT: %d)
RTTAdjustedTimeOut
TAStart
TASetRTT
com.apple.avconference.transaction.inviteclientproc
TAInviteClientProc
TAMsgCallback
com.apple.avconference.transaction.noninviteclientproc
TANonInviteClientProc
com.apple.avconference.transaction.inviteserverproc
TAInviteServerProc
com.apple.avconference.transaction.noninviteserverproc
TANonInviteServerProc
-[VCVideoReceiverDefault initWithConfig:delegate:reportingAgent:statisticsCollector:transmitterHandle:]
-[VCVideoReceiverDefault setMode:]
-[VCVideoReceiverDefault oneToOneStreamIndex]
-[VCVideoReceiverDefault setUpRemoteAspectRatiosFromFreatureListString:]
-[VCVideoReceiverDefault dealloc]
v16@?0^{?=ddd}8
com.apple.VCVideoReceiverDefault.VCDisplayLink
-[VCVideoReceiverDefault initializeDisplayLink]
-[VCVideoReceiverDefault handleRemoteFrame:timestamp:cameraStatusBits:]
-[VCVideoReceiverDefault handleRequestingKeyFrameGenerationWithStreamID:firType:]
%@.%@.connection_queue
-[VCStreamInputManager init]
%@.%@.stream_input_queue
-[VCStreamInputManager newStreamInputID]
VCStreamInputID
-[VCStreamInputManager initializeStreamInputWithXPCArguments:result:error:]
VCStreamInputRemoteQueue
VCStreamInputManager
enableFigRemoteQueueForAVCStreamInputOutput
-[VCStreamInputManager getServerPidWithXPCArguments:result:error:]
VCStreamInputServerPID
-[VCStreamInputManager terminateStreamInputWithXPCArguments:result:error:]
-[VCStreamInputManager clientProcessDiedWithXPCArguments:result:error:]
-[VCStreamInputManager pushSampleBufferWithXPCArguments:result:error:]
VCStreamInputDidClientDie
VCStreamInputInitialize
B40@?0@"VCStreamInputManager"8@"NSDictionary"16^@24^@32
VCStreamInputGetServerPid
VCStreamInputTerminate
VCStreamInputPushSampleBuffer
VCStreamInputDidStart
VCStreamInputDidStop
VCStreamInputDidSuspend
VCStreamInputDidResume
EncoderVTCreateHandle
EncoderVTCloseHandle
EncoderVTSetThermalLevel
EncoderVTSetBitRate
EncoderVTEncodeFrame
EncoderVTGenerateKeyFrame
EncoderVTSendImgDesc
EncoderVTPixelBufferFromPool
EncoderVTSetEncodingMode
com.apple.VideoConference.VCConnectionManagerDelegateQueue
com.apple.VideoConference.VCConnectionManagerCallbackQueue
com.apple.VideoConference.VCConnectionManagerReportingQueue
com.apple.VideoConference.VCNWConnectionMonitorQueue
useNWConnectionMonitorForVCCM
UseNWConnectionMonitorForVCCM
duplicationReductionEnabled
UseMediaDrivenDuplication
-[VCConnectionManager init]
wrmPendingBitrateCapDelta
videoNearDegradedThreshold
coreMotionDetectionEnabled
UseCoreMotionDetection
-[VCConnectionManager dealloc]
-[VCConnectionManager registerStatisticsHandlers]_block_invoke
-[VCConnectionManager registerStatisticsHandlers]
-[VCConnectionManager setupConnectionHealthMonitorMultiway]
no-remote
remote-no-remote
-[VCConnectionManager setupConnectionHealthMonitor]
-[VCConnectionManager setPreferRelayOverP2PEnabled:]
-[VCConnectionManager setPreferRelayOverP2P:reason:]
-[VCConnectionManager setIsOneToOneModeEnabled:]
-[VCConnectionManager setIsOneToOneScreenEnabled:]
-[VCConnectionManager setStartConnectionHealthMonitoring:]
-[VCConnectionManager resetConnectionStatTimers]
mediaDegradedThreshold
NWOffChannel
NWBtCoex
NWFreqBand
NWQualityDelayRx
NWQualityDelayTx
NWQualityLossRx
NWQualityLossTx
NWQualityChannel
-[VCConnectionManager periodicTask:]
-[VCConnectionManager setConnectionSelectionVersionWithLocalFrameworkVersion:remoteFrameworkVersion:]
-[VCConnectionManager setConnectionPause:isLocalConnection:]
LCTCH
LXPNSV
RCTCH
RXPNSV
IPVER
ConnFmly
DuplicationType
SLTS
-[VCConnectionManager setDuplicationEnabledInternal:]
Start
Stop
No duplication
Local media degraded
Remote duplication
Both local media degraded and remote duplication
Local no packet received
Remote no packet received
Local media unrecoverable
Both local media unrecoverable and remote duplication
-[VCConnectionManager setPreWarmState:]
WRMLocAlrtUpdate
-[VCConnectionManager setRemotePreWarmStateEnabled:]
WRMRemAlrtUpdate
-[VCConnectionManager setIsRemoteMediaQualityDegraded:]
-[VCConnectionManager checkForCachedWRMNotification]
-[VCConnectionManager setWRMNotification:]
-[VCConnectionManager reportWRMSuggestion:]
WRMCoexIsLocal
WRMLinkType
WRMReasonCode
-[VCConnectionManager getSentBytes:receivedBytes:]
-[VCConnectionManager updatePacketCountAndByteCountWithIndex:packetSize:numOfStreamId:isPriorityIncluded:isOutgoing:]
-[VCConnectionManager synchronizeParticipantGenerationCounter:]
-[VCConnectionManager getPacketCountWithIndex:isOutgoing:]
-[VCConnectionManager getByteCountWithIndex:isOutgoing:]
-[VCConnectionManager updateSessionStats:]
-[VCConnectionManager addMediaHealthStatsHistoryEntryForParticipantID:]
-[VCConnectionManager removeMediaHealthStatsHistoryEntryForParticipantID:]
-[VCConnectionManager checkMediaQualityDegradedForParticipantID:]
-[VCConnectionManager updateMediaHealthStats:idsParticipantID:]
-[VCConnectionManager isDuplicationAllowedForParticipantID:bucketsToSum:threshold:]
-[VCConnectionManager updateMediaDegradedHistoryWithCurrentVideoStallDuration:idsParticipantID:]
allowed
not allowed
-[VCConnectionManager updateMediaDegradedHistoryWithCurrentAudioErasure:idsParticipantID:]
%d:%d:%d:%d
%c:%c
_VCConnectionManagerNWConnectionStatisticsCallback
-[VCConnectionManager checkpointPrimaryConnection:]
primary
secondary
cellular
wifi
IPV6
IPV4
-[VCConnectionManager primaryConnectionChanged:oldPrimaryConnection:]
-[VCConnectionManager disableRemotePreferredInterfaceInference:]
1476
1651
1885
-[VCConnectionManager isOptimalConnection:asPrimary:interfaceMask:]
is not
-[VCConnectionManager connectionForQualityInternal:]
-[VCConnectionManager createSourceDestinationInfoListWithConfig:]
localWRMAlert
-[VCConnectionManager checklocalRATTypeOverrideDefaultValue:]
ACAS
linkProbingFeatureThreshold
linkProbingCapabilityVersion
-[VCConnectionManager setDefaultLinkProbingCapabilityVersionForDeviceRole:]
lnkPrbVers
remLnkPrbVers
-[VCConnectionManager setRemoteLinkProbingCapabilityVersion:]
-[VCConnectionManager addConnection:]
-[VCConnectionManager removeConnection:]
-[VCConnectionManager updateCellularMTU:]
-[VCConnectionManager updateCellularTech:forLocalInterface:]
-[VCConnectionManager updateOneToOneBitrateCapsForConnection:]
-[VCConnectionManager updateAllBitrateCapsForConnection:]
-[VCConnectionManager sourceDestinationInfo:isSourceOnCellular:isSourceIPv6:]
-[VCConnectionManager copyConnectionWithSourceDestinationInfo:isPrimary:]
-[VCConnectionManager shouldAcceptDataFromSourceDestinationInfo:]
-[VCConnectionManager updateConnectionForDuplication]
-[VCConnectionManager reportLinkProbingStatsWithDuplicationJustStarted:]
-[VCConnectionManager updateNegotiatedSettingsOnetoOne:]
-[VCConnectionManager useCellPrimayInterface:]
-[VCConnectionManager updateConnectionStatsWithIndicatorNoPacket:]
-[VCConnectionManager updateConnectionStatsWithIndicatorOnlyPrimaryNoPacket:]
local
remote
MAXNRPT
MAXRNRPT
-[VCConnectionManager updateConnectionStatsWithIndicatorPrimaryImproved:]
-[VCConnectionManager updateConnectionHealthWithVCStatisticsMessage:]
-[VCConnectionManager updateLinkPreferSuggestion:]
-[VCConnectionManager applyLinkRecommendation]
LnkSug
LnkScr
LnkDec
LnkIp
-[VCConnectionManager applyLinkFlags:isCellular:]
-[VCConnectionManager applyRemoteLinkFlags:isCellular:]
-[VCConnectionManager startActiveProbingWithOptions:]
-[VCConnectionManager stopActiveProbingWithOptions:]
-[VCConnectionManager queryProbingResultsWithOptions:]
-[VCConnectionManager flushLinkProbingStatusWithOptions:]
-[VCConnectionManager updateConnectionSelectionPolicyWithPreferE2E:]
-[VCConnectionManager didChangeWifiAssistAvailable:reason:]
WAStateChangeReason
VCConnectionManager_UpdatePacketSendStatus
+[VCVTPWrapper startVTP]
+[VCVTPWrapper stopVTP]
-[VCNetworkFeedbackController initializeWRMInfo]
-[VCNetworkFeedbackController startWithMetricsConfig:]
-[VCNetworkFeedbackController stop]
-[VCNetworkFeedbackController requestWRMNotification]
-[VCNetworkFeedbackController setWRMNotification:]
-[VCNetworkFeedbackController setWRMCoexMetrics:]
-[VCNetworkFeedbackController wcmSetCallConfig:interferenceLevel:]
-[VCNetworkFeedbackController wcmGetCallConfig:targetBitrate:]
-[VCNetworkFeedbackController setupWRMClientWithMetricsConfig:]
-[VCNetworkFeedbackController cleanupWRMClient]
-[VCNetworkFeedbackController setDownlinkTargetCellBitrateCap:]
psolaMaxContiguousCompressions
psolaAdaptationGap
psolaMaxContiguousExpansion
_VCTimescalePSOLA_ActiveSpeechExpand
_VCTimescalePSOLA_ActiveSpeechCompress
VCTimescalePSOLA_UpdateHistoryBuffer
-[VCAudioClient startWithError:]
Session parameters have not been set
Timeout while starting the client
-[VCAudioClient stopWithError:]_block_invoke
-[VCAudioClient stopWithError:]
Timeout while stopping the client
-[VCAudioStreamSendGroup initWithConfig:]
-[VCAudioStreamSendGroup setDeviceRole:operatingMode:]_block_invoke
-[VCAudioStreamSendGroup configureAudioStreams:deviceRole:operatingMode:]
-[VCAudioStreamSendGroup updateActiveVoiceOnly:]
-[VCAudioStreamSendGroup dispatchedUpdateActiveMediaStreamIDs:withTargetBitrate:mediaBitrates:rateChangeCounter:]
v32@?0^{tagVCAudioStreamGroupStream=^{tagVCAudioStreamGroupStream}BB^v^?S@II}8B16^S20C28
-[VCAudioStreamSendGroup addSyncDestination:]_block_invoke
-[VCAudioStreamSendGroup removeSyncDestination:]_block_invoke
-[VCAudioStreamSendGroup redundancyController:redundancyPercentageDidChange:]_block_invoke
-[VCAudioStreamSendGroup createIOEventQueues]
-[VCAudioStreamSendGroup startDynamicDucker]
Tried to create redundancy controller for mode which VCMediaStreamSendGroupConfig is nil
Need statistics collector to create redundancy controller
Failed to create audio redundancy controller
-[VCAudioStreamSendGroup setupRedundancyControllerForMode:]
-[VCAudioStreamSendGroup checkStreamsForAdditionalOptIn:]
-[VCAudioStreamSendGroup didReceiveReportPacket:arrivalNTPTime:]
-[VCAudioStreamSendGroup didReceiveCustomReportPacket:arrivalNTPTime:]
VCAudioStreamSendGroup_PushAudioSamples
VCAudioStreamSendGroup_ProcessAudioStreamUpdateEvent
%02x
MVRA
RVRA1
RVRA2
[%.2fx%.2f@(%.2f,%.2f)]
VideoUtil_CreateSampleFromBuffer
VideoUtil_CreateAndAppendBuffer
+[VideoUtil convertPixelBuffer:toImageType:withAssetIdentifier:cameraStatusBits:allowTimeMetaData:]
+[VideoUtil sizeForVideoResolution:]
+[VideoUtil adjustFaceBounds:fromOriginalBufferSize:toCroppedBufferSize:]
public.jpeg
public.heic
+[VideoUtil typeIdentifierForImageType:]
+[VideoUtil videoCodecForPayload:]
+[VideoUtil computeResolutionForMainDisplayWithMaxScreenPixelCount:]
TPSendUDPPacketARPL
TPSendUDPDataPacket
TPCreateHandle
com.apple.VideoConference.ICEConnectivityCallbackQueue
TPCloseHandle
TPSetPacketMultiplexMode
TPSetupOpenFaceTimeSecurity
TPGetLoopbackIP
TPListenVirtualInterface
TPListenOnPhysicalInterface
TPStopListen
TPSend
TPAddTransaction
TPRemoveTransaction
TPGetType
TPStopHeartbeat
TPGetInterfaceStillExists
TPGetConnectionData
TPStartConnectionCheck
TPDiscardConnectionResult
TPDiscardRelayBinding
TPDiscardRelayBindingWithChannelNumber
TPRemovePreservedPortBindForCallID
TPSetCellConditionChangeHandler
TPUpdateInterfaceList
TPStopConnectivityCheck
TPGetNextBestCandidate
TPGetRemoteCIDForDstIPPort
TPSetSKEState
TPSetForceRelay
TPSetForceIPv6
TPSetReportingAgent
TPSetICETimeout
TPSetARPLHandler
TPCleanupARPLHandler
TPUpdateICERole
TPUpdateQoS
TPGetConnErrorCode
TPSetDataPacketReceivedCallback
TPProcessRemoteInterfaceChangeMessage
TPGetRemoteICEVersion
TPSetAllowSameSourceDestination
SendUDPPacket
SendUDPPacketForCList
dtls
ListenIDS
CreateSocketForIDS
TPEnsureRecvProcStarted
com.apple.avconference.transport.recvproc
TPRecvProc
RecvMessageUDP
PassMessage
CallSIPMessageCallback
ListenUDP
SendUDP
%VRTCP-PORT%
CompressMsg
<Binary>
AppendBinaryBody
TPAddIPPortToCLIST
RemoveCListForCallID
CreateSocketAndBind
TransportMapPacketMultiplexModeToVTPMode
needUpdateRemoteCandidateList
TPSendUDPPacket
TPRecvUDPPacketWithTimeout
TPConnectedCallback
TPConnectedCallback_block_invoke
TPCancelRecvUDP
TPProcessICENomination
TPNewCandidatesCallback
TPNewCandidatesCallback_block_invoke
TPShouldNominateICECandidatePair
TPRemoveIPPort
TPRemoveIPPort_block_invoke
basebandUseAverageQueueDepthForDelay
basebandBitrateAverageWindow
%2u%2u%2u%2u%2u %6u
Baseband target bitrate changed and not stable.
New bitrate stabilized for baseband, collected %d BDCD samples and start normalizing BDCD.
Unstable bitrate for baseband, start re-collecting BDCD list...
-[AVCBasebandCongestionDetector dealloc]
[Baseband notification too close to the previous one, discard]
Start re-collecting BDCD samples [flushCount %d, BBAvgTxRate %d].
[Bogus baseband notification, discard]
TID[%04X] Baseband Drop ACK no packet dropped
TID[%04X] Baseband Drop ACK reported failure
TID[%04X] Baseband Drop ACK for PT %u: %2u packets dropped [%s]
{ %@: %@ streamGroupID=%s type=%d minNetworkBitrate=%u maxNetworkBitrate=%u qualityIndex=%u videoQuality=%u visibilityIndex=%u prominenceIndex=%u streamID=%u repairStreamID=%u repairNetworkBitrate=%u actualNetworkBitrate=%u isLowestQuality=%d }
+[VCSessionBandwidthAllocationTableEntry entryTypeForMediaType:]
-[VCSessionBandwidthAllocationTableEntry compare:]
+[VCSessionBandwidthAllocationTableEntry compareAudioEntry:audioEntry:]
+[VCSessionBandwidthAllocationTableEntry compareVideoEntry:videoEntry:]
+[VCSessionBandwidthAllocationTableEntry compareAudioEntry:videoEntry:]
VCTransportStreamRunLoopVTPCreate
_VCTransportStreamRunLoopVTPAddTransportStream
_VCTransportStreamRunLoopVTPUpdateFDSet
i28@?0^{?=^{__CFArray}{os_unfair_lock_s=I}i{fd_set=[32i]}i}8^{OpaqueVCTransportStream=}16i24
_VCTransportStreamRunLoopVTPIterateTransportStreams
_VCTransportStreamRunLoopVTPRemoveTransportStream
_VCTransportStreamRunLoopVTPWaitForReceive
_VCTransportStreamRunLoopVTPPerformReceive_block_invoke
_VCTransportStreamRunLoopVTPCancelWait
-[VCSessionUplinkBandwidthAllocatorOneToOne init]
-[VCSessionUplinkBandwidthAllocatorOneToOne getCurrentEnabledTierTables:qualityIndices:qualityIndexToStreamToken:]
q24@?0@8@16
-[VCSessionUplinkBandwidthAllocatorOneToOne mediaBitratesForStreamToken:targetNetworkBitrate:]
-[VCSessionUplinkBandwidthAllocatorOneToOne streamIDsIfStreamTokenIsEnabled:]
setTransformPolicyFromCipherSuite
SRTPGetROC
SRTPCleanUpEncryption
SRTPInitCrypt
SRTPPrepareEncryption
SRTPUseEncryption
enableEncryptionDebug
SRTPUpdateKeyMaterialForRTPInfo
SRTPUpdateKeyMaterial
SRTPUpdateEncryptionInfo
SRTPDeriveMediaKeyInfo
SRTPEncryptData
SRTPEncrypt
SRTCPEncrypt
SRTCPDecrypt
SRTPAddAuthenticationTag
SRTCPAddAuthenticationTag
SRTCPVerifyAuthenticationTag
SRTPCancelEncryption
SRTPWaitUseEncryption
_SRTPUpdateEncryption
SRTPGetKeyDerivationCryptoSet
_SRTPCancelEncryption
MakeCounter
SRTPIsAuthenticationEnabled
transactionID
topic
VCPacketFilter
[VCPacketFilter %p]
/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/TCPTunnelClient.m
-[TCPTunnelClient destroyDispatchTimer]
-[TCPTunnelClient createDispatchTimer:withDetailedError:]_block_invoke
cannot establish TCP TURN channel
TURN request is timed out
-[TCPTunnelClient createDispatchTimer:withDetailedError:]
TCP TURN channel closed
Socket closed while accepting packets
-[TCPTunnelClient processSocketRead]
-[TCPTunnelClient sendTCPData:bufSize:]
Socket closed while writing
-[TCPTunnelClient processSocketWrite:]
-[TCPTunnelClient vcArg:sendControlData:isTypeSSL:withTimeout:withDetail:]_block_invoke_2
-[TCPTunnelClient receivedControlData:]
Error parsing TURN message (%08X)
Allocation Failed: %u
ChannelBind Failed: %u
Refresh Failed: %u
-[TCPTunnelClient processSocketReadSSL]
TCP/SSL TURN channel closed
-[TCPTunnelClient receivedSSLConnectionData:recordType:]
-[TCPTunnelClient initWithRelayRequestDictionary:withCallID:relayType:errorCode:]
Dummy
com.apple.viceroy.TCPTunnel
-[TCPTunnelClient initWithRelayRequestDictionary:withCallID:relayType:errorCode:]_block_invoke
can't create write source.
-[TCPTunnelClient initWithRelayRequestDictionary:withCallID:relayType:errorCode:]_block_invoke_2
can't connect socket.
can't create read source.
-[TCPTunnelClient dealloc]
-[TCPTunnelClient sendAllocateMsg:]
Sending TCPTunnel Allocate Request failed.
Make request error: %x.
Encode request error: %x.
-[TCPTunnelClient sendAllocateMsg:]_block_invoke
-[TCPTunnelClient sendChannelBindingMsgWithDict:error:]
Sending TCPTunnel ChannelBinding Request failed.
-[TCPTunnelClient sendChannelBindingMsgWithDict:error:]_block_invoke
-[TCPTunnelClient sendRefreshMsg:error:]
Sending TCPTunnel Refresh Request failed.
-[TCPTunnelClient unbindChannel]_block_invoke
-[TCPTunnelClient closeTunnelSocket]
-[TCPTunnelClient closeTunnelSocket]_block_invoke
-[TCPBufferPool getBufferFromPool:]
-[TCPBufferPool returnBufferToPool:]
Pool(%d):
 %4d
-[TCPBufferPool monitorBufferPool]
<VCCallSession localCallID = %d, remoteCallID = %d, state = %d, sentDidStartAsYES = %d>
VCCallSession
-[VCCallSession initWithDeviceRole:transportType:isGKVoiceChat:reportingHierarchyToken:]
com.apple.VideoConference.VCCallSession.connectionChangeQueue
com.apple.VideoConference.VCCallSession.videoQueue
com.apple.VideoConference.VCCallSession.videoAsyncQueue
com.apple.VideoConference.VCCallSession.qualityQueue
com.apple.VideoConference.VCCallSession.audioQueue
com.apple.VideoConference.VCCallSession.delegateNotificationQueue
com.apple.avconference.vccallsession.celltech
CallSettings
.calldump
com.apple.VideoConference.CallSettingsLog
v24@?0^v8^{__CFArray=}16
-[VCCallSession initWithDeviceRole:transportType:isGKVoiceChat:reportingHierarchyToken:]_block_invoke
com.apple.avconference.vccallsession.timestamp
-[VCCallSession gatherRealtimeStats:]
packetLossRate
bandwidthUpstream
packetLateAndMissingRatio
-[VCCallSession setOperatingMode:]_block_invoke
-[VCCallSession updateVideoQualityStatusWithTime:isRemote:]_block_invoke
enableBBNote
-[VCCallSession evaluateEnableRRx:]
enableRRx
-[VCCallSession updateMaxPktLength]
captureRule
NoRule
encodeRule
-[VCCallSession handleCellTechChange:]
-[VCCallSession handleCellTechChange:]_block_invoke_2
VCCellTechKey
VCMaxBitrateKey
VCCellTechChangeTopic
-[VCCallSession handleCellTechChange:]_block_invoke
CellTech
-[VCCallSession remoteCellTechStateUpdate:maxRemoteBitrate:]_block_invoke
matchedFeatureListString
-[VCCallSession getFeatureListStringForPayload:]
localFeatureListString
remoteFeatureListString
-[VCCallSession applyFeatureListStringForPayload:]
%d/%d,%d/%d
useFakeLF
-[VCCallSession chooseVideoPayloadForInterface:]
/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCCallSession.m
Could not find a compatible codec. Participant may switched wireless interface.
FaceTimePhotosUseBestVideoRule
-[VCCallSession schedulePrimaryConnectionChange:oldConnection:]_block_invoke
-[VCCallSession handlePendingPrimaryConnectionChange]_block_invoke
-[VCCallSession updateRemoteMediaStallState:]
-[VCCallSession updateRemoteMediaStallStateReporting:]
-[VCCallSession updateLastReceivedPacketWithTimestamp:packetType:]
SymptomReporterOptionalKeySessionID
SymptomReporterOptionalKeyPeerID
-[VCCallSession updateLastReceivedPacketWithTimestamp:packetType:]_block_invoke
Disconnecting due to no remote packets.
-[VCCallSession updateLastReceivedPacketWithTimestamp:packetType:]_block_invoke_2
Network conditions became unusable for %d seconds
Bad network conditions
-[VCCallSession dealloc]
fecFeedbackVersion
The connection timed out without getting started
Client disconnected session before completely initializing it
-[VCCallSession cancelConnectionTimeoutTimer]
-[VCCallSession setupConnectionTimeoutTimerWithErrorCode:detailedCode:description:reason:]_block_invoke
treatLTEAs4G
-[VCCallSession startConnectionWithParticipantID:callID:usingInviteData:isCaller:capabilities:idsSocket:destination:error:]
Failed to process response media blob
Media blob error
00000000-0000-0000-0000-000000000000
-[VCCallSession startConnectionWithParticipantID:callID:usingInviteData:isCaller:capabilities:idsSocket:destination:error:]_block_invoke
v16@?0@8
-[VCCallSession startConnectionWithParticipantID:callID:usingInviteData:isCaller:capabilities:idsSocket:destination:error:]_block_invoke_3
v20@?0I8@12
-[VCCallSession handleReceivedPiggybackBlobIDS:]
Signalled error at %s: Piggyback SKE blob is nil
Signalled error at %s: skeState is NULL
Signalled error at %s: SKEState_SetBlob(1) failed
Signalled error at %s: SKEState_CopySecretKeySync failed
Media insecure
Key exchange failed
A/B testing: %s
-[VCCallSession setupABTesting]
-[VCCallSession setupWRMClient]
-[VCCallSession cleanupWRMClient]
-[VCCallSession setWRMNotification:]
-[VCCallSession setWRMCoexMetrics:]
VCWRMCoexMetricsMessage
VCWRMAlertStateEnabled
VCWRMAlertStateDisabled
VCWRMAlertStateUpdateMessageTopic
-[VCCallSession sendWRMStatusUpdate:]
-[VCCallSession requestWRMNotification]
-[VCCallSession newMediaNegotiatorAudioConfigurationWithAllowAudioSwitching:useSBR:aacBlockSize:]
-[VCCallSession newMediaBlobWithRemoteMediaBlob:localCallID:isLowBitrateCodecPreferred:]
-[VCCallSession reportOperatingMode]
Mode
Watch
-[VCCallSession inviteDataForParticipantID:callID:remoteInviteData:nonCellularCandidateTimeout:error:]
Failed to generate the media blob
1935.21.1.3
-[VCCallSession addLocalCallInfoToInviteDictionary:]
-[VCCallSession setRemoteCallInfoFromInviteDictionary:]
VCAudioPaused
AudioPauseStateMessageTopic
VCAudioUnpaused
-[VCCallSession setPauseAudio:force:error:]
-[VCCallSession setPauseAudio:force:error:]_block_invoke
-[VCCallSession setSuspendVideo]
VCVideoPaused
VideoPauseStateMessageTopic
-[VCCallSession setResumeVideo]
VCVideoUnpaused
-[VCCallSession setPauseVideo:force:error:]_block_invoke_2
-[VCCallSession processRelayRequestResponseDict:didOriginateRequest:]
-[VCCallSession processRelayUpdateDict:didOriginateRequest:]
-[VCCallSession processCancelRelayRequest:didOriginateRequest:]
-[VCCallSession sendARPLData:toCallID:]
-[VCCallSession sendData:messageType:encrypted:]
SUCCESS
FAILURE
-[VCCallSession negotiatedReceivingFramerate]
-[VCCallSession setSessionConferenceState:callID:]
VCWindowState
VCWindowStateChange
-[VCCallSession setSessionConferenceVisualRectangle:callID:]
VCWindowOriginX
VCWindowOriginY
VCWindowWidth
VCWindowHeight
-[VCCallSession setPeerProtocolVersion:]
RLY-
P2P-
-[VCCallSession handleNewConnectionSetup:isInitialConnection:]
-[VCCallSession handleFirstConnectionSetup:]
cannedReplay
Carrier
Unavailable
CannedRelay
missing
Interface
Upgrade
RedState
WAState
REMBUILD
unknown
localBitrateCap
remoteBitrateCap
-[VCCallSession setupSecureDataChannel]
-[VCCallSession(WCMClientDelegate) wcmSetCallConfig:interferenceLevel:]
-[VCCallSession(WCMClientDelegate) wcmGetCallConfig:targetBitrate:]
-[VCCallSession(Callbacks) sipCallback:callID:msgIn:msgOut:optional:confIndex:]
DTLS-SRTP
Video Insecure
Encryption key setup did not complete successfully
Audio Insecure
Identif
UserMessage
MediaCallback
-[VCCallSession(PrivateMethods) setupIDSConnectionForCallID:destination:socket:error:]
Cannot setup IDS connection
No destination/socket
-[VCCallSession(PrivateMethods) setSKEBlobOnTransportSession]
-[VCCallSession(PrivateMethods) configureLegacyTransportWithInviteInfo:error:]
Cannot setup legacy connection
No remote connection blob
SKECheckRemoteCert
v32@?0^{SKEStateOpaque=}8^{__SecCertificate=}16^i24
-[VCCallSession(PrivateMethods) newSKEBlobWithRemoteSKEBlob:]
-[VCCallSession(PrivateMethods) setupEncryptionWithKey:confIndex:]
-[VCCallSession(PrivateMethods) initWithRelevantStorebagEntries]
-[VCCallSession(PrivateMethods) logDetailedNetworkInformation]
forceDTLS
-[VCCallSession(PrivateMethods) setupDTLSDefaults]
-[VCCallSession(PrivateMethods) setupPeerInfo:usingInviteData:isCaller:capabilities:]
Connection to remote participant timed out
Connection took too long
-[VCCallSession(PrivateMethods) notifyDelegateAndEndCall:didRemoteCancel:error:]
-[VCCallSession(PrivateMethods) reportDashboardEndResult:]
Media cleanup
Ping!
VCPingTopic
-[VCCallSession(PrivateMethods) stopPausedHeartbeat]
-[VCCallSession(PrivateMethods) logPerfTimings]
-[VCCallSession(PrivateMethods) processSIPMessage:msgOut:optional:confIndex:]
SKEComplete
SKEReportError
skeDetailCode
filePath
description
reason
-[VCCallSession(PrivateMethods) resetState]
-[VCCallSession(PrivateMethods) setupCalleeSIPStartTimeout:]_block_invoke
GKVoiceChatService
-[VCCallSession(PrivateMethods) createSDP:audioPayloadCount:secondaryPayloadTypes:secondaryPayloadCount:videoPayloadTypes:videoPayloadCount:localFeatureList:answerBandwidth:maxBandwidth:imageSizesSend:imageSendCount:imageSizesRecv:imageRecvCount:sdp:numSDPBytes:error:]
Could not create session description
-[VCCallSession(PrivateMethods) negotiateMediaMaxBandwidth]
-[VCCallSession(PrivateMethods) applyNegotiatedSettings]
+[VCCallSession(PrivateMethods) setRxPayloadList:withPayloadTypes:isRedEnabled:]
-[VCCallSession(PrivateMethods) applyNegotiatedAudioSettings:]
Failed to apply audio settings
Error: %x.
-[VCCallSession(PrivateMethods) applyNegotiatedVideoSettings:]
Failed to apply video settings
-[VCCallSession(PrivateMethods) startMediaWithPreNegotiatedSettings:]
Failed to start media
-[VCCallSession(PrivateMethods) handleIncomingWithCallID:msgIn:msgOut:optional:confIndex:error:]
-[VCCallSession(PrivateMethods) getAllPayloadsForVideo:count:]
v32@?0@8Q16^B24
no longer attempting to connect
State != GKVoiceChatServiceStateCallerAttemptingToConnect
-[VCCallSession(PrivateMethods) createInviteSDPWithError:]
Failed to create the offer SDP
Error status: 0x%08x
Unable to establish session with the remote participant.
SIPConnectIPPort failed
-[VCCallSession(PrivateMethods) sendSIPInviteWithError:]
-[VCCallSession(PrivateMethods) createAudioTransmitter:]
Could not setup RTP
Failed to allocate audio transmitter
useHighStartMode
Error creating handle
Failed to initialize audio receiver
Error setting VTP mode
Error setting connectionManager
Error creating video handle
Could not setup video RTP
Failed to associate audio/video handles
-[VCCallSession(PrivateMethods) createRTPHandles:]
Could not prepare SRTP for audio RTP handle
Error calling SRTPPrepareEncryption
-[VCCallSession(PrivateMethods) prepareSRTPWithError:]
Could not prepare SRTP for video RTP handle
-[VCCallSession(PrivateMethods) createMediaQueueHandle:]
Could not setup media queue
-[VCCallSession(PrivateMethods) negotiateFeaturesString:forPayload:]
-[VCCallSession(PrivateMethods) negotiatePayloads:withError:]
Unable to parse session description. The remote participant may be using an incompatible version.
Bad SDP.
No matching codec
Could not find a compatible codec.  The remote participant may be using an incompatible version.
SetBWEstMode critical failure
SetBWEstMode critical failure.
-[VCCallSession(PrivateMethods) negotiateMaxBandwidth:]
-[VCCallSession(PrivateMethods) chooseVideoPayload:operatingMode:isLocalOnCellular:isRemoteOnCellular:]
cellRules
wifiRules
send
recv
-[VCCallSession(PrivateMethods) getAllCompatibleVideoPayloads:forMediaType:]
-[VCCallSession(PrivateMethods) getCompatibleLocalFeatureListForPayloads:count:]
-[VCCallSession(PrivateMethods) setRTPPayloads:withError:]
Error
Could not set RTP payload
-[VCCallSession(PrivateMethods) setMediaQueueStreamSettings]
-[VCCallSession(PrivateMethods) setupCallerRTPChannelWithError:]
-[VCCallSession(PrivateMethods) sipConnectWithError:]
Could not stop audio.
Audio is not running
disableAudio
-[VCCallSession(PrivateMethods) startAudioWithCompletionHandler:]_block_invoke
Could not start audio.
Call already completed
Couldn't setup encoder.
Bad cookie?
-[VCCallSession(PrivateMethods) startAudioIOWithCompletionHandler:]
Audio started after call ended.
-[VCCallSession(PrivateMethods) startAudioIOWithCompletionHandler:]_block_invoke
-[VCCallSession(PrivateMethods) updateDeviceRole:]
updateDeviceRole failed
Invalid transition from role %d to %d
-[VCCallSession(PrivateMethods) updateDeviceRole:]_block_invoke
Stop Audio Timed out
Start Audio Timed out
VCVideoMode
VCAudioMode
VCDataMode
CallingModeTopic
-[VCCallSession(PrivateMethods) sendCallingModeMessage]
-[VCCallSession(PrivateMethods) setupAudioCookies]
-[VCCallSession(PrivateMethods) vcrcServerBagProfileNumber]
enableTFRCLog
-[VCCallSession(PrivateMethods) startAFRC:]
Could not setup AFRC
could not create handle
-[VCCallSession(PrivateMethods) startVCRC:]
-[VCCallSession(PrivateMethods) startRateControl:]
-[VCCallSession(PrivateMethods) newConfigForPayloadType:]
-[VCCallSession(PrivateMethods) choosePayload:]
SIP failed with internal fatal error
Remote participant cancelled request.
Remote participant cancelled session.
Remote participant hangup.
-[VCCallSession(PrivateMethods) audioRTPID]
-[VCCallSession(PrivateMethods) videoRTPID]
-[VCCallSession(PrivateMethods) disconnectWithNoRemotePackets:timeoutUsed:]_block_invoke
No remote packets for %d seconds
Normal Call Termination
-[VCCallSession(PrivateMethods) doSipEndAction:callID:error:]
-[VCCallSession(PrivateMethods) setLocalIdentityForKeyExchange]
We could not establish end-to-end security for this call.
No local identity could be retrieved.
-[VCCallSession(PrivateMethods) logIdentity:]
-[VCCallSession(PrivateMethods) pickFeaturesStringForPayload:featureListDict:remote:]
-[VCCallSession(PrivateMethods) setMatchedFeaturesString:localFeaturesString:remoteFeaturesString:]
CABAC
-[VCCallSession(PrivateMethods) maxBitrateForConnectionType]
CFBundleName
AppName
-[VCCallSession(PrivateMethods) enableSessionHealthMonitor]_block_invoke
-[VCCallSession(PrivateMethods) sendBasebandCodecMessage]
VCBasebandCodecType
VCBasebandCodecSampleRate
VCBasebandCodecChange
VCSymptomReporterSymptom
VCSymptomReporterGroupID
VCSymptomReporterMessage
-[VCCallSession(PrivateMethods) mapPacketMultiplexModeToRTPMode:]
-[VCCallSession(PrivateMethods) mapPacketMultiplexModeToSIPMode:]
-[VCCallSession(PrivateMethods) disconnectInternal:disconnectError:didRemoteCancel:]_block_invoke
VCDisconnectMessage
-[VCCallSession(PrivateMethods) disconnectInternal:disconnectError:didRemoteCancel:]_block_invoke_3
SUCCESSFULLY
UNSUCCESSFULLY
v12@?0B8
-[VCCallSession(PrivateMethods) disconnectInternal:disconnectError:didRemoteCancel:]
Ending the Call even though we haven't finished notifying the client that we have started
-[VCCallSession(Messages) setupAudioPauseMessages]_block_invoke
v32@?0@"NSString"8@"NSError"16@"NSNumber"24
-[VCCallSession(Messages) setupVideoPauseMessages]_block_invoke
-[VCCallSession(Messages) setupAudioPausedHBMessages]_block_invoke
AudioOnOffStateMessageTopic
VCAudioEnabled
VCAudioDisbaled
-[VCCallSession(Messages) setupAudioOnOffStateMessages]_block_invoke
-[VCCallSession(Messages) setupCallingModeMessages]_block_invoke
-[VCCallSession(Messages) setupBasebandCodecInfoMessages]_block_invoke
-[VCCallSession(Messages) setupDisconnectMessage]_block_invoke
VCHandoverCandidateChange
VCHandoverNewCandidateBlob
-[VCCallSession(Messages) setupHandoverCandidateChangeMessage]_block_invoke
-[VCCallSession(Messages) setupPiPStateChangeMessage]_block_invoke
-[VCCallSession(Messages) setupCellTechChangeMessages]_block_invoke
VCMomentsStateMessageTopic
-[VCCallSession(Messages) setupMomentsMessages]_block_invoke
VCPreferredInterfaceMessageTopic
-[VCCallSession(Messages) setupPreferredInterfaceMessage]_block_invoke
VCPreferredInterfaceKey
VCPreferredInterfaceDuplicatingKey
-[VCCallSession(Messages) processSymptomFromMessage:participantID:isLocalInitiated:isLocalSideOnly:]
SymptomReporterOptionalKeyGroupID
SymptomReporterOptionalIsLocalSideOnly
-[VCCallSession(Messages) setupSymptomEnabledMessage]_block_invoke
v28@?0@"NSString"8B16@"NSNumber"20
-[VCCallSession(Messages) setupWRMAlertStateUpdateMessage]_block_invoke
-[VCCallSession(Messages) setupWRMCoexMetricsMessage]_block_invoke
-[VCCallSession(Messages) controlChannel:receivedData:transactionID:fromParticipant:]
-[VCCallSession(VCTransportSessionLegacyDelegate) transportSession:connectionSetupDataDidChange:]
-[VCCallSession(AVCRateControllerDelegate) rateController:targetBitrateDidChange:rateChangeCounter:]
-[VCCallSession(VCRateControlMediaControllerDelegate) mediaController:mediaSuggestionDidChange:]
flush audio
flush video
refresh video
stop video
start video
stall audio
unstall audio
imageAttrForAnswer
remove16x9Resolutions
SymptomReporterCallbackKeySymptomID
SymptomReporterCallbackKeyGroupID
reportingStatusCodeForConnectionType
{VCCapabilities: isAudioEnabled = %d, isAudioPausedToStart = %d, isVideoEnabled = %d, isVideoPausedToStart = %d, isVideoSourceScreen = %d, isDuplexAudioOnly = %d, isDuplexVideoOnly = %d, isHalfDuplexAudio = %d, isKeyExchangeEnabled = %d, isRelayEnabled = %d, isRelayForced = %d, requiresWifi = %d, isDTLSEnabled = %d, preferredAudioCodec = %u, actualAudioCodec = %u, preferredVideoCodec = %u, actualVideoCodec = %u, deviceRole = %d}
audioEnabled
videoEnabled
videoSourceScreen
duplexAudioOnly
duplexVideoOnly
halfDuplexAudio
keyExchangeEnabled
startAudioPaused
startVideoPaused
preferredAudioCodec
actualAudioCodec
preferredVideoCodec
actualVideoCodec
deviceRole
relayEnabled
relayForced
requiresWifi
DTLSEnabled
VideoConference
-[VideoConference initWithClientPid:]
disableFacetimeTimeout
com.apple.VideoConference.Notification
-[VideoConference dealloc]
newSession
-[VideoConference newSessionWithDeviceRole:reportingHierarchyToken:]
-[VideoConference sendARPLData:toCallID:]
-[VideoConference warmupForCall]
-[VideoConference setupNATObserver]_block_invoke
natType
-[VideoConference natType]
-[VideoConference inviteDataForParticipantID:callID:remoteInviteData:nonCellularCandidateTimeout:error:]
connectionBlobForParticipantID
-[VideoConference natTypeForCallSessions:]
requiresNoWifi
/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VideoConference.m
No CallID
Called without a callID we know about
-[VideoConference setPauseAudio:callID:error:]
-[VideoConference setPeerCN:callID:]
-[VideoConference setSessionID:callID:]
-[VideoConference setPeerReportingID:sessionID:callID:]
-[VideoConference updateCapabilities:forSession:]
-[VideoConference updateCapabilities:forCallID:]
-[VideoConference setUpAudioIO:callID:]
-[VideoConference setupSpatialAudioWithCallID:]
-[VideoConference startConnectionWithParticipantID:callID:usingInviteData:isCaller:capabilities:idsSocket:destination:error:]
-[VideoConference setCurrentFocus:]
-[VideoConference stopAllCalls:]
-[VideoConference stopCallID:]
-[VideoConference cancelCallID:]
-[VideoConference remoteCancelledCallID:]
Report
-[VideoConference setPacketsPerBundle:]
-[VideoConference processRelayRequestResponse:responseDict:didOriginateRequest:]
-[VideoConference processRelayUpdate:updateDict:didOriginateRequest:]
-[VideoConference pushAudioSamples:]
-[VideoConference pullAudioSamples:]
-[VideoConference(AudioProcessing) updateSpeaking:timeStamp:]
-[VideoConference(AudioProcessing) updateAudioTimestampsForSession:withNewSampleTime:hostTime:numSamples:]
-[VideoConference(AudioProcessing) pullDecodedMeshMode:]
-[VideoConference(SIPDispatch) sipCallbackNotification:callID:msgIn:msgOut:optional:confIndex:]
-[VideoConference(SessionInfo) conferenceMatchesSourceDestinationInfo:]
-[VideoConference(SessionInfo) sessionForSourceDestinationInfo:]
-[VideoConference(SessionInfo) sessionForIncomingParticipantID:]
-[VideoConference(PrivateMethods) stopCallID:didRemoteCancel:error:]
-[VideoConference(PrivateMethods) cancelCallID:error:]
session
date
-[VideoConference(PrivateMethods) defaultCleanupSession:]
-[VideoConference(PrivateMethods) threadSafeCleanupSession:]
-[VideoConference(PrivateMethods) cleanupSession:didRemoteCancel:]
-[VideoConference(PrivateMethods) setPauseAudio:]_block_invoke_2
-[VideoConference(PrivateMethods) setPauseAudio:]_block_invoke
-[VideoConference(SessionDelegate) session:didStart:connectionType:localInterfaceType:remoteInterfaceType:error:]
-[VideoConference(SessionDelegate) session:cleanUpWithDelay:error:]
-[VideoConference(SessionDelegate) session:didStopWithError:]_block_invoke
-[VideoConference(SessionDelegate) session:didReceiveARPLData:fromCallID:]
-[VideoConference(SessionDelegate) session:didReceiveData:messageType:withCallID:]
-[VideoConference(SessionDelegate) session:initiateRelayRequest:]
-[VideoConference(SessionDelegate) session:sendRelayResponse:]
Audio is already running
Stopping audio session but session wasn't started
-[VideoConference(NATDelegate) triggerInterfaceChange]
-[VideoConference(NATDelegate) NATTypeDictionaryUpdated:]
NATTypeDictionaryUpdated
-[VideoConference(NATDelegate) NATTypeDictionaryUpdated:]_block_invoke
-[VCRateControlAlgorithmBase checkPaused]
Pause rate control algorithm
Resume rate control algorithm
-[VCRateControlAlgorithmBase configure:restartRequired:]
-[VCRateControlAlgorithmBase doRateControlWithStatistics:]
LossEventRampDown update bandwidth limit=%u, confidence=%u, diff=%d
LossEventRampUp is blocked due to continuousTargetBitrate=%u, currentTargetBitrate=%u, nextTargetBitrate=%u, bandwidthLimit=%u, confidence=%u
LossEventRampDown no use and tried ramped down with badTrendCount=%d, nullify lossEventRampDown RTT=%f, avgPLR=%f, previous avgPLR=%f, PLRThreshold=%f
LossEventRampDown start ramping down with RTT=%f, avgPLR=%f, PLRThreshold=%f, ratio=%f
LossEventRampDown doesn't seem to stabilized yet with RTT=%f, avgPLR=%f, previousAvgPLR=%f, PLRThreshold=%f, badTrendCount=%d, PLR trend is going %s, %s improvement
Down
LossEventRampDown ramping down may be too aggressive with RTT=%f, avgPLR=%f, PLRThreshold=%f
confidence
hasSpaceAfter
text
transportSessionLegacyOptionNonCellularCandidateTimeout
enableRelay
-[VCTransportSessionLegacy start]_block_invoke
/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCTransportSessionLegacy.m
Could not connect
connection check returned error
-[VCTransportSessionLegacy startConnectionWithBlob:useRelay:isInitialRelay:error:]
-[VCTransportSessionLegacy setForceRelay]
-[VCTransportSessionLegacy processRelayRequestResponse:didOriginateRequest:]
-[VCTransportSessionLegacy processRelayRequestResponse:didOriginateRequest:]_block_invoke
v24@?0@"NSData"8@"NSError"16
-[VCTransportSessionLegacy processRelayUpdate:didOriginateRequest:]
-[VCTransportSessionLegacy processRelayUpdate:didOriginateRequest:]_block_invoke
-[VCTransportSessionLegacy createSecondaryRelayDispatchTimer:callID:callerRequired:]_block_invoke_2
-[VCTransportSessionLegacy destroySecondaryRelayDispatchTimer]
-[VCTransportSessionLegacy setupPendingSecondaryRelayWithNewPrimary:]_block_invoke
-[VCTransportSessionLegacy notifyDelegateToCancelRelay]
-[VCTransportSessionLegacy setupSecondaryRelayForCall:callerRequired:]
-[VCTransportSessionLegacy setupInitialSecondaryRelayWithCallbackRelayFlag:callID:connectionId:]_block_invoke
-[VCTransportSessionLegacy initiateRelayRequest]
-[VCTransportSessionLegacy initiateRelayRequest]_block_invoke
-[VCTransportSessionLegacy isHandoverSupported]
-[VCTransportSessionLegacy networkStateDidChange]_block_invoke
-[VCTransportSessionLegacy handleNewCandidates:version:]
-[VCTransportSessionLegacy processRemoteIPChange:]
-[VCTransportSessionLegacy connectionResultCallback:didReceiveICEPacket:didUseRelay:secretKey:skeResult:]
-[VCTransportSessionLegacy handleExchangedKey:result:]
Media Insecure
Optimized SKE failed
-[VCTransportSessionLegacy connectionCallback:isInitialConnection:]
Creating TCPTunnel Client failed.
Error was encountered
-[VCTransportSessionLegacy createTCPTunnelForParticipantID:relayDictionary:didOriginateRequest:relayType:error:]_block_invoke_2
v16@?0@"NSMutableDictionary"8
v24@?0@"NSData"8@"NSString"16
-[VCTransportSessionLegacy createTCPTunnelForParticipantID:relayDictionary:didOriginateRequest:relayType:error:]_block_invoke_6
-[VCTransportSessionLegacy resetLoopback]
-[VCTransportSessionLegacy setupLoopbackWithConnectionType:]
-[VCTransportSessionLegacy createInitiateRelayDictionaryForCall:primaryConnection:]
-[VCTransportSessionLegacy createRelayUpdateDictionary:]
-[VCTransportSessionLegacy connectionData:connectionDataSizeInBytes:shouldUseRelay:]
NATType
-[VCTransportSessionLegacy connectionDataUsingRelay:isInitialRelay:nonCellularCandidateTimeout:error:]
No local connection data
Check network settings.
-[VCTransportSessionLegacy generateConnectionData:forCallID:connectionDataSize:nonCellularCandidateTimeout:]
v36@?0^{tagCONNRESULT=IiiIiiSS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}IiiiiSiii^{tagCONNRESULT}i}8B16B20^{__CFData=}24i32
v20@?0@"NSData"8S16
v52@?0^{tagCANDIDATEPAIR={tagCANDIDATE=iiI[8C]SS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}I}{tagCANDIDATE=iiI[8C]SS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}I}iSS[8C]{tagIPPORT=i[16c](?=I[16C])S}Iiiiiiiii^{tagCANDIDATEPARIR}}8i16^i20^i28^i36^i44
v20@?0^{tagIPPORT=i[16c](?=I[16C])S}8B16
-[VCTransportSessionLegacy resetICETimeoutToLongTimeout]
-[VCTransportSessionLegacy isConnectedAndAllowAdditionalConnection]
AUIO
BBIO
RemoteIO
GenericOutput
%@ type=%s(%d) micFormat=%s, %u speakerFormat=%s, %u operatingRole=%d deviceRole=%d vpOperatingMode=%d vpEnableSpatialChat=%d audioRecording=%d enableDNNVAD=%d
VCMediaQueuePacketBundler_Create
VCMediaQueuePacketBundler_AddPacket
VCMediaQueuePacketBundler_SetMTU
VCMediaQueuePacketBundler_SetOneToOne
VCMediaQueuePacketBundler_BundlePackets
_VCMediaQueuePacketBundler_ReturnProcessedPackets
_VCMediaQueuePacketBundler_GetSizeOfHeaderWithBundledPackets
VCMediaQueuePacketBundlerClass
VCTextReceiver
-[VCTextReceiver initWithConfiguration:]
com.apple.avconference.textreceiver.rtprecvproc
-[VCTextReceiver dealloc]
-[VCTextReceiver start]
-[VCTextReceiver stop]
-[VCTextReceiver retrieveRTPPacket:]
-[VCTextReceiver receiverThreadCallback:]
-[VCTextReceiver processRTCPPacket]
-[VCTextReceiver isSupportedPayload:]
-[VCTextReceiver validateAndEnqueuePackets:]
-[VCTextReceiver parsePacket:]
-[VCTextReceiver didReceiveFrame:]
com.apple.AVConference.VideoConferenceManager.xpcCommandQueue
conferenceNoRemotePacketsTime
-[VideoConferenceManager videoConference:didReceiveARPLData:fromCallID:]
-[VideoConferenceManager createSIPWithPacketMultiplexMode:]
-[VideoConferenceManager startSIPWithPacketMultiplexMode:transportType:]
-[VideoConferenceManager isSIPHandleValid:]
-[VideoConferenceManager cleanupVTP]_block_invoke
-[VideoConferenceManager stopSIPWithTransportType:]
Closing SIP Handle
-[VideoConferenceManager stopSIPWithTransportType:]_block_invoke
-[VideoConferenceManager addVideoConference:]
-[VideoConferenceManager removeVideoConference:]
-[VideoConferenceManager pauseVideoConferences:]
-[VideoConferenceManager pauseVideoConferences:]_block_invoke_2
SIPCallback
CellConditionChangeCallback
VTPCallback
-[VCControlChannelTransaction initWithTransportSessionID:participantID:transactionID:transactionDelegate:]
-[VCControlChannelTransaction dealloc]
-[VCControlChannelTransaction flushTransaction]
-[VCControlChannelTransaction confirmedTransactionByParticipantID:sessionID:]
-[VCControlChannelTransaction sendReliableMessage:sessionID:participantID:timeout:useFastRetries:withOptions:]
+[VCControlChannelTransaction sendUnreliableMessage:sessionID:participantID:transactionID:transactionDelegate:withOptions:]
VTP_Initialize
forceDSCPTagging
com.apple.avconference.vtransport.recvproc
DisableWMM
fttc
VTP_Cleanup
VTP_SetCallback
VTP_SetSessionID
VTP_SetDTLS
VTP Transport Context
VTP Receive Proc
VTP_CopyPreferredSendQueue
VTP_SocketWithNWConnection
v24@?0^{tagVTRANSPORT=qqSSii^{OpaqueFigThread}B{_opaque_pthread_mutex_t=q[56c]}^?^v[1024i]{_opaque_pthread_mutex_t=q[56c]}{_opaque_pthread_mutex_t=q[56c]}[1024B]{_opaque_pthread_rwlock_t=q[192c]}^{tagVFDLIST}{_opaque_pthread_rwlock_t=q[192c]}^{tagVFDSETLIST}{_opaque_pthread_mutex_t=q[56c]}^{tagIFMAP}i^{tagVCMemoryPool}^{tagVFDRESULT}^{tagHANDLE}BB[924B][924^{__CFString}][924^{tagHANDLE}]BBiIC{_opaque_pthread_rwlock_t=q[192c]}^{__CFDictionary}^{tagVPKTLIST}IId{VTransportHealthStats=[2{_VTransportConnectionHealthStats=IIII}]{_VTransportDemuxPacketHealthStats=IIIII}{_VTransportTrafficClassHealthStats=III}dd}Iddi^{__CFAllocator}^{__CFAllocator}^{tagVCMemoryPool}}8^{tagVFDLIST=iiiiiiCCCBi^iiIIII{tagIPPORT=i[16c](?=I[16C])S}^{tagVPKTLIST}{_opaque_pthread_mutex_t=q[56c]}{_opaque_pthread_cond_t=q[40c]}ii[4C]{_opaque_pthread_mutex_t=q[56c]}{_opaque_pthread_cond_t=q[40c]}^{tagVFDLIST}^{tagHANDLE}B{?=i[12C]}{tagVCSourceDestinationInfo=i(?={?={tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{?=BS}}{?=ii{tagIPPORT=i[16c](?=I[16C])S}i}{?=I{?=cSCSC}B}{?=@})I^{tagVCSourceDestinationInfo}^v}}16
VTP_DuplicateVFD
VTP_SocketWithRealSocket
VTP_SocketForIDSWithFileDescriptor
VTP_SetPayloadList
%s %i,
VTP_SetSocketMode
VTP_SetPktType
VTP_AddPktType
VTP_RemovePktType
VTP_Getsockname
_VTP_SetSSRC
VTP_SetTransportSessionID
VTP_GetTransportSessionID
VTP_Setsockopt
VTP_SetSourceDestinationWithToken
VTP_SetSourceDestinationWithIPPort
VTP_Close
VTP_Bind
VTP_BindNew
VTP_Sendto
VTP_Send
ssize_t VTP_Send(int, const void *, size_t, int, VPKTFLAG *)
VTP_SendCompoundPacket
VTP_ReleasePacket
VTP_Recvfrom
VTP_SetAFRCRecvMode
VTP_SetAFRC
VTP_SetAFRCConnectionNumber
int VTP_SetAFRCConnectionNumber(int)
VTP_NotifyAFRCRxEstimate
VTP_RegisterPacketCallback
VTP_UnregisterPacketCallback
VTP_Select
VTP_GetSendRecvStats
VTP_SetCellularUniqueTag
VTP_SetPktTag
VTP_SetRTPSrc
VTP_SetNetworkLogLevel
VTP_NotifyRemoteNoRemotePacket
VTP_NotifySendFailed
VTP_SetClientRelayVFD
VTP_DetectNAT64Prefix
VTP_RegisterConnectionManagerWithCallID
int VTP_RegisterConnectionManagerWithCallID(VCConnectionManager *, uint32_t)
VTP_DeregisterConnectionManagerWithCallID
int VTP_DeregisterConnectionManagerWithCallID(uint32_t)
VTP_SendWithSourceDestinationInfo
Packet data is too big. length=%zu, trafficFlags=%d, mode=%d, expectedMaxLength=%d
VTP_IncrementTotalBytesSent
VTP_ScheduleReceiveForNWConnection_block_invoke
v24@?0^@8I16i20
VTP_GetPktType
VTPBlockBufferDataAllocator
_VTP_InitializeAllocators
VTPBlockBufferHeaderAllocator
_VTP_ReleasePacket
VTP_GetVFD
_VTP_SocketWithRealSocketFromFVDList
VTP_ReleaseVFD
VTP_CloseOneVFDList
_VTP_ReleaseSocket
FindConnectionResultByKey
SendOnePacketOnVFDList
PrepareOFTMAC
PrepareOFTCRC32
_VTP_HealthPrint
VTP_CreateSourceDestinationInfoListWithVFD
VCSourceDestinationInfo *VTP_CreateSourceDestinationInfoListWithVFD(int)
VTPRecvProc
_VTP_LogOSChannelInfoWithInterval
_VTP_LogOSChannelInfoToIDSDatagramChannel
reset:%d
,%d->%d
_VTP_LogOSChannelInfoWhenSelectTimeout
VTP_RecvAndProcessOnePacketFromSocket
recvfrom
VTP_RecvFromSocket
_VTP_AllocatePacketWithBufferFreeCallback
VTP_IFIndexToName
_VTP_ShrinkPacket
VTP_ProcessPacketType
ProcessOFTData
IsValidOFTMAC
_VTP_SetRTCPFBMediaSenderSSRC
VTP_UpdateReceivedBytes
void VTP_UpdateReceivedBytes(uint32_t, int, _Bool, _Bool, VCSourceDestinationInfo *, _Bool, int, _Bool)
VTP_RecvAndProcessPacketsFromDatagramChannel
VTP_DemuxPacketsToVFDList
VTP_PassHsk
VTP_PassPkt
VTP_BandwidthEstimationWithMediaPacket
AddOneVFDSETList
SetVFDSASrc
FindVFDByLocalIPPort
VTP_NAT64PrefixResolvedCallback
VTP_ReportTransmittedBytes
void VTP_ReportTransmittedBytes(UInt32, VCSourceDestinationInfo *, int, _Bool)
_VTP_SendOnePacketWithDatagramChannel
_VTP_UpdateIDSDatagramOptionWithChannelDataFormat
_VTP_SendCompoundPacketWithDatagramChannel
AVConferenceNWContext
_VTP_SendOnePacketWithNWConnection_block_invoke
v16@?0@"NSObject<OS_nw_error>"8
_VTP_HandleReceiveForNWConnection_block_invoke
B40@?0@"NSObject<OS_dispatch_data>"8Q16r^v24Q32
VTP_SendOnePacketWithSocket
ssize_t VTP_SendOnePacketWithSocket(int, int, IPPORT *, BOOL, const void *, size_t, int, VPKTFLAG *, int)
VTP_SendOnePacketWithIPPort
ssize_t VTP_SendOnePacketWithIPPort(IPPORT *, IPPORT *, IPBasedRelayInfo *, const void *, size_t, int, VPKTFLAG *)
v54@?0@"VCDatagramChannelIDS"8r^v16I24{?=cSCSC}28^{?=IQSCc[12S]CS{?=SSSSS}dQBQ[16C]BB}38@"NSError"46
VTP_SetIDSReadHandler_block_invoke
_VTP_ProcessDatagramOptions
VTP_SynchronizeParticipantGenerationCounter
void VTP_SynchronizeParticipantGenerationCounter(uint32_t, uint8_t)
_VTP_ProcessPacketForDirectIDSDataPath
_VTP_ProcessPacketForSharedIDSDataPath
-[VCBTNotificationMonitor registerBTNotificationHandler:]
-[VCBTNotificationMonitor unregisterBTNotificationHandler:]
com.apple.notifyd.matching
XPCEventName
_State
-[VCBTNotificationMonitor setupBTEventHandler]_block_invoke
com.apple.bluetooth.pairing
com.apple.bluetooth.outgoing-classic-connection-state
com.apple.bluetooth.settings.app-state
com.apple.bluetooth.outgoing-le-fast-scan-level
5GHz WLAN
2.4GHz WLAN
v16@?0@"NSObject<OS_xpc_object>"8
Notification
-[VCBTNotificationMonitor registerDarwinNotification:]
-[VCBTNotificationMonitor unregisterDarwinNotification:]
allowDynamicMaxBitrate
allowsContentsChangeWithAspectPreservation
audioSettings
videoSettings
screenSettings
userAgent
basebandCodec
basebandCodecSampleRate
captionsSettings
multiwayAudioStreams
blobVersion
multiwayVideoStream
mediaControlInfoVersion
faceTimeSettings
accessNetworkType
-[VCMediaNegotiationBlobV2VideoPayload(Utils) initWithPayload:encodeVideoRules:decodeVideoRules:videoParameterSupport:]
-[VCMediaNegotiationBlobV2VideoPayload(Utils) videoRulesWithBitmap:]
Payload=%@ Encode=[
%@%dx%d@%.0f
] Decode=[
 paramSet=[
-[VCMediaNegotiationBlobV2VideoPayload(Utils) printWithLogFile:prefix:]
+[VCMediaNegotiationBlobV2VideoPayload(Utils) payloadWithRTPPayload:]
+[VCMediaNegotiationBlobV2VideoPayload(Utils) rtpPayloadWithPayload:]
-[VCMediaNegotiationBlobV2VideoPayload(Utils) setupEncode:videoRules:]
ImageDescription
-[VCRateControlAlgorithmTelephony configure:restartRequired:]
-[VCRateControlAlgorithmTelephony doRateControlWithStatistics:]
-[VCRateControlAlgorithmTelephony doRateControlWithNWConnectionStatistics:]
-[VCRateControlAlgorithmTelephony runRateControlStateTransition]
-[VCRateControlAlgorithmTelephony printRateControlInfoToLogDump]
%8.3f/%04X:
%.4f
%.4f
%.4f
%.4f %c
RTT:%-4u
PLR:%4.2f@%.1f
RRx:%u
MBL:%d %u
%4u/%4u
 %4u:%4u/%4u  %4u:%4u/%4u  CS: %04X %04X %u BB: %3u
 UAT 
-[VCVideoTransmitterDefault initWithConfig:]
-[VCVideoTransmitterDefault setUpAspectRatios:]
-[VCVideoTransmitterDefault setUpAspectRatiosFromFeatureListString:]
minimumKeyFrameGenerationIntervalFaceTime
minKeyFrameGenerationInterval
-[VCRedundancyControlAlgorithmVideoMultiway updateRedundancyStrategyWithNetworkStatistics:]
-[VCRedundancyControlAlgorithmVideoMultiway updateRedundancyPercentage]
imageattr:%d
 [x=%d,
 [x=[%d:%d:%d],
y=%d,
y=[%d:%d:%d],
fps=%d
,i=1
,q=%.2f]
-[SDPMediaLine getVideoSendImages:]
-[SDPMediaLine getVideoRecvImages:]
priority
fps=
+[SDPMediaLine fillImageStruct:imageStruct:]
ftdisplayattr:resolution
-[SDPMediaLine videoDisplayAttribute:withHeight:]
rtcp-fb
rtcp
imageattr
%@=%@:%u%@
%@=%@:%@%@
%@=%@%@
VCSession
-[VCSession initWithIDSDestination:configurationDict:negotiationData:delegate:processId:isGKVoiceChat:]
com.apple.AVConference.vcSessionQueue
com.apple.AVConference.vcSessionNotificationQueue
EnableGFTDowngradeToOneToOne
Session init %s
%s(%p) Session init %s
controlChannelV2ForceFixedEncryptionLabel
Session dealloc %s
-[VCSession dealloc]
%s(%p) Session dealloc %s
-[VCSession setReportingConfig:]
useAggregatorMultiwayforU1
-[VCSession startDeallocTimer]
-[VCSession capabilities]
UseIDSOutOfDataPath
datagramChannelIDSDataPath
-[VCSession selectDataPath]
-[VCSession setupTransportSessionWithDestination:]
shared
direct
-[VCSession setState:]
Starting
Start Failed
Running
Stopping
idsDestination[%@] state[%s] localParticipantID[%@] remoteParticipants[%@]
stoppingParticipants[%@] startingParticipants[%@] initializingParticipants[%@]
-[VCSession mediaStateChangedForParticipant:]
twoway
-[VCSession generateKeyFrameWithReceivedMessage:forParticipant:]_block_invoke
VCSessionMessageStreamID
VCSessionMessageFIRType
VCSessionMesageStreamGroupID
-[VCSession dispatchedSetSharingEnabled:]
VCSPExpanseEnabled
-[VCSession setTransportSessionEventHandler]_block_invoke
VCSessionMessageTopicLinkConstrainesChanged
-[VCSession handlePrimaryConnectionChanged:]
-[VCSession dispatchedHandleActiveConnectionChange:]
VCPreferredInterfaceMediaUnrecoverableSignalKey
-[VCSession calculateExpectedTotalNetworkBitrateDownlink]
-[VCSession calculateExpectedTotalNetworkBitrateUplink]
-[VCSession vcSessionParticipant:audioEnabled:didSucceed:error:]_block_invoke
VCSessionMessageAudioEnabled
VCSessionMessageAudioDisabled
VCSessionMessageTopicAudioEnabledState
-[VCSession vcSessionParticipant:videoEnabled:didSucceed:error:]_block_invoke
VCSessionMessageVideoEnabled
VCSessionMessageVideoDisabled
VCSessionMessageTopicVideoEnabledStateb
-[VCSession vcSessionParticipant:screenEnabled:didSucceed:error:]_block_invoke
VCSessionMessageTopicFetchStreamGroupsState
-[VCSession vcSessionParticipant:audioPaused:didSucceed:error:]_block_invoke
VCSessionMessageAudioPaused
VCSessionMessageAudioUnpaused
VCSessionMessageTopicAudioPausedState
-[VCSession vcSessionParticipant:videoPaused:didSucceed:error:]_block_invoke
VCSessionMessageVideoPaused
VCSessionMessageVideoUnpaused
VCSessionMessageTopicVideoPausedState
-[VCSession vcSessionParticipant:didChangeMediaPriority:description:]_block_invoke
-[VCSession vcSessionParticipant:requestKeyFrameGenerationWithStreamID:streamGroupID:firType:]
VCSessionMessageTopicGenerateKeyFrame
VCSessionMessageVideoRedundancyRequested
VCSessionMessageVideoRedundancyDismissed
VCSessionMessageTopicVideoRedundancyState
-[VCSession vcSessionParticipantDidMediaDecryptionTimeOut:]_block_invoke
/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCSession.m
-[VCSession vcSessionParticipantDidMediaDecryptionTimeOutForMKMRecovery:]_block_invoke
SymptomReporterOptionalKeyParticipantID
-[VCSession vcSessionParticipantDidRemoteMediaStallTimeout:duration:]_block_invoke
-[VCSession vcSessionParticipant:oneToOneModeDidChange:]
-[VCSession vcSessionParticipant:mediaStateDidChange:forMediaType:didSucceed:error:]_block_invoke
-[VCSession rateController:targetBitrateDidChange:rateChangeCounter:]_block_invoke
-[VCSession updatePresentationInfo:]_block_invoke
-[VCSession applySpatialMetadata]
-[VCSession applySpatialMetadata]_block_invoke
VCSessionMessageTopicRateControlConfig
-[VCSession updateParticipantConfigurations:]_block_invoke
-[VCSession distributeBitrateAndOptInToStreamIDsWithSeamlessTransition:]
VCSPTargetBitrate
VCSPUUIDList
VCSPDownlinkBitrates
VCSPActiveStreamIDTuples
VCSCallEndReason
VCSCallEndDetailedReason
VCSErrorDomain
-[VCSession setSessionInfoSynchronizerErrorResponseCallback]_block_invoke
-[VCSession setSessionInfoSynchronizerPeerSubscribedStreamsCallback]_block_invoke
v16@?0@"NSArray"8
session_%@
-[VCSession setupSpatialAudio]
-[VCSession reserveAudioChannelForMediaType:spatialAudioSourceID:]
-[VCSession createMediaQueue]
v32@?0^v8d16I24i28
-[VCSession handleMediaQueueSizeExceedThresholdWithQueueSize:mediaQueueStreamId:type:]
-[VCSession setMediaQueuePeakBitrateWithTargetBitrate:]
maxParticipantCountSend30Fps
allowScreenToLimitCameraFrameRate
-[VCSession updateLocalVideoCaptureFrameRate]
v16@?0@"VCDatagramChannelIDS"8
-[VCSession detectSSRCCollisionWithRemoteMediaStream:remoteBlobCreationTime:resetNeeded:]
maxSN
-[VCSession handleEncryptionInfoEvent:]
-[VCSession handleMembershipChangeInfoEvent:]
-[VCSession messageMediaInitialStateToParticipant:]
-[VCSession broadcastInitialMediaState]
VCControlChannelV2
-[VCSession newEncryptionLabelWithLocalUUID:remoteUUID:]
-[VCSession composeControlChannelParticipantConfig:withRemoteParticipant:]
-[VCSession registerRemoteParticipantToSession:]
-[VCSession unregisterRemoteParticipantFromSession:]
VCSessionMessageSymptom
VCSessionMessageGroupID
-[VCSession sendSymptomsToRemoteParticipants:symptom:groupID:]_block_invoke
VCSessionMessageTopicSymptom
-[VCSession setupMultiwayABTesting]
-[VCSession handleEncryptionInfoChange:]_block_invoke
ConversationBaseDate
-[VCSession reportingSessionParticipantEvent:withParticipant:keyChangeReason:newMKI:withStreamID:]
LocSw
VCSOneToOneModeEnabled
VCSMode
VCSPAudioEnabled
VCSPVideoEnabled
VCSPScreenEnabled
VCSPIDSID
VCSPIsWebUser
VCSKeyChangeReason
VCSNewMKI
VCSPIsLocalParticipant
VCSPAudioPaused
VCSPVideoPaused
VCSPConnectionType
-[VCSession reportingSessionRemoteParticipantEvent:withParticipant:value:]
-[VCSession dispatchedAddParticipantWithConfig:]
-[VCSession configureRemoteParticipant:withConfig:]
-[VCSession dispatchedRemoveParticipant:]
Start called. oneToOneModeEnabled=%d sessionMode=%ld remoteParticipants=%s
-[VCSession dispatchedStart]
%s(%p) Start called. oneToOneModeEnabled=%d sessionMode=%ld remoteParticipants=%s
Stop called. error=%s, remoteParticipants=%s
-[VCSession dispatchedStopWithError:didRemoteCancel:]
%s(%p) Stop called. error=%s, remoteParticipants=%s
-[VCSession tearDown]
-[VCSession dispatchedUpdateConfiguration:]
-[VCSession dispatchedParticipant:didStart:error:]
-[VCSession remoteScreenAttributesDidChange:]_block_invoke
-[VCSession dispatchedParticipant:didStopWithError:]
VCSActiveStreamsList
 videoTxFrameRate=%3.1f,
[hostTime:%f/%f sampleTime:%u/%u (Audio/Video)]
-[VCSession generateReportDictionary:]
VCSVTxBR
VCSATxBR
VCSCTxBR
VCSTxBR
VCSInCanvasCounter
VCSVRxBR
VCSARxBR
VCSCRxBR
VCSRxBR
VCSVRxBRs
VCSARxBRs
VCSCRxBRs
CTxDb
CRxDb
CDupTxDb
CDupRxDb
CBudgTxDb
CBudgRxDb
WTxDb
WRxDb
PSSCTR
PSFCTR
iWiFi5GHz
-[VCSession registerReportingTask]_block_invoke
VCMediaQualityDegraded
VCMediaQualityRecovered
VCMediaQualityDegradedMessageTopic
serverPacketRetransmissionEnabledForVideo
EnableServerPacketRetransmissionForVideo
-[VCSession moments:shouldProcessRequest:recipientID:]_block_invoke
VCSessionMomentsStateMessageTopic
-[VCSession updateMomentsCapabillities:imageType:videoCodec:]_block_invoke
gonzo
_VCSession_ReportingConfigurationCallback
+[AVCScreenCapture capabilities]
-[AVCScreenCapture initWithDelegate:withConfig:]
com.apple.AVConference.screenCapture
vcScreenCaptureHeight
vcScreenCaptureWidth
vcScreenCaptureFramerate
vcScreenCaptureScreenDisplayID
vcScreenCaptureScreenIsWindowed
vcScreenCaptureScreenMachPort
vcScreenCaptureScreenUUID
vcScreenCaptureInitialize
-[AVCScreenCapture dealloc]
vcScreenCaptureTerminate
vcScreenCaptureStopReturn
vcScreenCaptureStartReturn
vcScreenCaptureServerDidDisconnect
-[AVCScreenCapture startCapture]
-[AVCScreenCapture stopCapture]
com.apple.AVConference.AudioIORelayControllerQueue
{ %@ relayType=%s(%u) relayIOType=%s(%u) }
-[VCAudioRelayIOController _cleanupDeadClients]
-[VCAudioRelayIOController registerClientIO:controllerIO:]
-[VCAudioRelayIOController unregisterClientIO:controllerIO:]
-[VCAudioRelayIOController handleTransitionPrepareToStarting]
-[VCAudioRelayIOController stateStartingWithControllerSettings:client:newState:]
-[VCAudioRelayIOController updateStateWithClient:]
-[VCAudioRelayIOController processEventQueue:clientList:]
-[VCAudioRelayIOController flushEventQueue:]
_VCAudioRelayIOController_ProcessEventQueue
PREPARE
STARTING
FaceTime
Safeview
ClientFacing
RemoteFacing
_VCAudioRelayIOController_RegisterClientIO
_VCAudioRelayIOController_UnregisterClientIO
-[VCSystemAudioCaptureSession initWithConfiguration:]
-[VCSystemAudioCaptureSession dealloc]
-[VCSystemAudioCaptureSession start]
-[VCSystemAudioCaptureSession stop]
-[VCSystemAudioCaptureSession createAudioBufferPool]
-[VCSystemAudioCaptureSession resetAudioBufferPool]
VCSystemAudioCaptureSession_pullAudioSamples
_VCSystemAudioCaptureSession_audioSink
VCAudioIOControllerIOState_GetControllerTimestamp
frameRate: %u, _keyFrameInterval: %u, payload: %d
status
Token (%d) Link (%d): %s <-> %s (%s, %s), priority %d, uplink bitrate cap (%u), downlink bitrate cap (%u), uplink audio only bitrate cap = (%u), uplink OneToOne bitrate cap = (%u), isLocalConstrained (%d), isRemoteConstrained (%d), isLocalExpensive (%d) isRemoteExpensive (%d) isLocalDelegated (%d) isRemoteDelegated (%d) isVirtualRelayLink (%d)
-[VCConnectionIDS isWifiToWifi]
-[VCConnectionIDS updateMaxConnectionMTU:]
-[VCConnectionIDS isOnSameInterfacesWithConnection:]
-[VCConnectionIDS isOnSameQRSessionWithConnection:]
-[VCConnectionIDS isOnSameInterfacesAndQRSessionWithConnection:]
VCConnectionIDSCellTechForRATType
VCConnectionIDSIsKnownRATType
UMTS
C2K1x
HSPA+
UTRAN
Wired
[ratio:%.2fx%.2f orientation:%s camera:%s switching:%s contentsRect:%.3fx%.3f@(%.3f,%.3f) videoSourceScreen:%s videoMirrored:%s framePresentationTime:%f scaleFactor:%f]
Portrait
PortraitUpsideDown
LandscapeLeft
LandscapeRight
Front
Back
ratio
orientation
camera
cameraSwitching
contentsRect
isVideoSourceScreen
videoMirrored
framePresentationTimeValue
framePresentationTimeTimeScale
scaleFactor
aspectRatio
-[VCRateControlAlgorithmStabilizedNOWRD configure:restartRequired:]
-[VCRateControlAlgorithmStabilizedNOWRD doRateControlWithStatistics:]
-[VCRateControlAlgorithmStabilizedNOWRD doRateControlWithVCRCStatistics:]
-[VCRateControlAlgorithmStabilizedNOWRD doRateControlWithNWStatistics:]
-[VCRateControlAlgorithmStabilizedNOWRD doRateControlWithBasebandStatistics:]
Disabling baseband adaptation due to FR2 RATType
Disable baseband adaptation due to cross traffic. Average baseband throughput %d is much larger than our actual bitrate %d
-[VCRateControlAlgorithmStabilizedNOWRD runRateControlStateTransition]
-[VCRateControlAlgorithmStabilizedNOWRD updateInternalStatistics:]
Ramp Up!!! Resume video first!
Ramp Up!!! Ramp up audio fraction first. Video is still stopped!
Congestion!!! Stop video!
[%u] Congestion due to baseband!!! New bitrate down to %u [slow:%f]
[%u] Congestion due to baseband!!! New audio fraction tier down to %u. Video stopped.
Possible network saturation detected with RTT:%f, minRTT:%f, PLR:%f, owrd:%f
BurstyLossRampDown RTT=%f, avgPLR=%f, PLRThreshold=%f, threshold=%d
Possible ramp down suppression with RTT:%.3f, minRTT:%.3f, bitrateThreshold:%u, suppressionFactor:%.3f, NOWRDAcc:%.3f
Still trying to flush baseband with flush counter %d. No further ramp up/down but possibly decrease audio fraction.
Flush counter: %d stuck for more than %d seconds. And baseband shows TxRate:%d, TxDelay:%f. Reset the flush counter!
Try to ramp down audio fraction with [flushCount:%d, BBAvgRate:%d]
Still trying to flush baseband with flush counter: %d. Stop ramp-up!
Hit the abnormal bad network condition. Start the abnormal bad network adaptation with softMaxTier=%u. RTT=%f, owrd=%f
The abnormal bad network condition is gone. Remove the softMaxTier and current maxTier=%u. RTT=%f, owrd=%f
[%u] Sending rate was limited for a long time, stabilizing the bitrate
[%u] VCRC rate stabilized since no mediaController. Collecting VCRC samples...
[%u] VCRC rate stabilized (TxTS %u >= %u FB). Collecting VCRC samples...
[%u] Collected %d VCRC samples (TxTS %u)
-[VCRateControlAlgorithmStabilizedNOWRD printRateControlInfoToLogDump]
%8.3f/%04X:
%.4f
%.4f
%.4f
%.4f %c
RTT:%-4u
PLR:%4.2f@%.1f
RRx:%u
MBL:%d %u
%4u/%4u
 %4u:%4u/%4u  %4u:%4u/%4u  CS: %04X %04X %u BB: %3u
%s UAT %u
%@: payload=%u secondary=%s sbr=%s samplesPerBlock=%u
com.apple.AVConference.VCTextTransmitter
VCTextTransmitter
-[VCTextTransmitter start]
-[VCTextTransmitter stop]
-[VCTextTransmitter sendText:]
-[VCTextTransmitter sendTextFrameWithRedundancy:marker:]
-[VCTextTransmitter updatePayloadHistory:timestamp:payloadType:payload:payloadLength:]
-[VCTextTransmitter startHeartbeat]
ReorderProbability
ReorderCorrelation
ReorderGap
-[VCEmulatedNetworkDoubleQueueReorder initWithPolicies:]
Invalid state %d!
-[VCEmulatedNetworkDoubleQueueReorder push:]
TransportLayer
tileIndex
streamGroupMode
streamGroupRedundancyMode
streamGroupRedundancyPercent
enableVideoPriority
-[VCSessionParticipantLocal initWithConfig:delegate:]
uuid:%@ (local)
-[VCSessionParticipantLocal createUplinkBandwidthAllocators]
-[VCSessionParticipantLocal processCachedParticipantData:]
uuid:%@ 
-[VCSessionParticipantLocal setupAudioStreamGroupWithStreamConfigs:negotiatorConfig:streamGroupConfiguration:]
-[VCSessionParticipantLocal setupCameraStreamGroupWithStreamConfigs:negotiatorConfig:streamGroupConfiguration:]
-[VCSessionParticipantLocal captureSourceIDFromStreamGroupConfig:]
-[VCSessionParticipantLocal setupStreamGroupWithStreamGroupConfig:negotiatorConfig:]
-[VCSessionParticipantLocal setupStreamGroupsWithConfig:negotiatorConfig:]
-[VCSessionParticipantLocal start]
-[VCSessionParticipantLocal dispatchedStartOneToOneStreams]
-[VCSessionParticipantLocal maxCaptureCameraFrameRate]
-[VCSessionParticipantLocal setUplinkBitrateCapCell:]
-[VCSessionParticipantLocal setUplinkBitrateCapWifi:]
-[VCSessionParticipantLocal reconfigureOneToOneAudioStream:error:]
%@. Unable to reconfigure _audioIO=%p in _state=%d
-[VCSessionParticipantLocal reconfigureAudioIOForVideoEnabled:error:]
-[VCSessionParticipantLocal applyVideoEnabledSetting:]
-[VCSessionParticipantLocal applyScreenEnabledSetting:]
-[VCSessionParticipantLocal updateVideoPaused:]
-[VCSessionParticipantLocal setCurrentVideoCaptureFrameRate:]_block_invoke
-[VCSessionParticipantLocal suspendStreamsOnOneToOneModeSwitch]_block_invoke
-[VCSessionParticipantLocal setRemoteParticipants:]_block_invoke
-[VCSessionParticipantLocal startMultiwayStreams]
/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCSessionParticipantLocal.m
v16@?0@"<VCSessionParticipantStreamDelegate>"8
-[VCSessionParticipantLocal setOneToOneModeEnabled:]_block_invoke
-[VCSessionParticipantLocal startSystemAudioCapture]
-[VCSessionParticipantLocal stopSystemAudioCapture]
-[VCSessionParticipantLocal updateMediaSettingsWithConfig:]_block_invoke
-[VCSessionParticipantLocal applyCachedMediaStreamsWithStreamConfigurations:mediaNegotiatorConfig:]
-[VCSessionParticipantLocal setupAudioStreamsWithStreamConfigurations:mediaNegotiatorConfig:streamGroupConfiguration:]
-[VCSessionParticipantLocal newAudioSendGroupConfigWithStreamGroupID:streamGroupConfiguration:]
-[VCSessionParticipantLocal setupVideoStreamsWithStreamConfiguration:streamGroupConfiguration:]
-[VCSessionParticipantLocal setupVideoMediaStreamsWithStreamGroupConfiguration:streamGroupConfig:streamGroupID:mediaType:]
-[VCSessionParticipantLocal setupAudioStreamsWithStreamConfiguration:streamGroupConfiguration:]
-[VCSessionParticipantLocal newStreamInfoWithVideoStreamWithConfiguration:streamGroupID:]
-[VCSessionParticipantLocal newStreamInfoWithAudioStreamWithConfiguration:streamToken:isMultiway:streamGroupID:]
-[VCSessionParticipantLocal newMediaNegotiatorAudioConfigurationForMediaType:]
+[VCSessionParticipantLocal negotiatorCipherSuite:fromMediaStreamConfig:]
-[VCSessionParticipantLocal newStreamGroupNegotiationConfigForStreamGroup:]
-[VCSessionParticipantLocal initializeStreamGroupsForLocalConfig:]
-[VCSessionParticipantLocal initializeOneToOneStreamGroup:forLocalConfig:]
-[VCSessionParticipantLocal initializeMediaNegotiator]
-[VCSessionParticipantLocal oneToOneVideoStreamRedundancyPercentage]
videoRedundancyPercentageMax
-[VCSessionParticipantLocal oneToOneVideoStreamRedundancyMode]
-[VCSessionParticipantLocal negotiateOneToOne:]
-[VCSessionParticipantLocal logRemoteParticipantInfo:]
-[VCSessionParticipantLocal overrideVideoStreamConfigWithDefaults:streamGroupID:]
-[VCSessionParticipantLocal setupOneToOneVideoStreamWithConfig:streamGroupID:]
-[VCSessionParticipantLocal setupOneToOneAudioStreamWithConfig:streamGroupID:]
-[VCSessionParticipantLocal configureMultiwayStreamGroups]
-[VCSessionParticipantLocal configureWithOneToOneParticipantConfig:shouldConfigureGFTStreams:]_block_invoke
-[VCSessionParticipantLocal configureOneToOneVideoStreamsWithDeviceRole:]
-[VCSessionParticipantLocal configureOneToOneAudioStreamsWithDeviceRole:]
-[VCSessionParticipantLocal setupOneToOneEncryptionInfoWithConfiguration:]
-[VCSessionParticipantLocal newAudioStreamOneToOneConfigurationWithStreamGroupId:]
-[VCSessionParticipantLocal newVideoStreamOneToOneConfigurationWithStreamGroupId:]
-[VCSessionParticipantLocal updateWindowState:isLocal:windowRect:]
-[VCSessionParticipantLocal audioRuleCollectionWithAudioStreamConfig:]
-[VCSessionParticipantLocal addCallInfoBlobToParticipantInfo:]
-[VCSessionParticipantLocal createParticipantInfo]
-[VCSessionParticipantLocal newStreamInfoWithVideoStreamWithConfiguration:idsDestination:groupID:]
participantID:%@ streamGroupId=%s
-[VCSessionParticipantLocal newStreamInfoWithAudioStreamWithConfiguration:idsDestination:isMultiway:streamGroupID:]
-[VCSessionParticipantLocal setupEncodingModeWithVideoStreamConfig:]
simulateStreamFracture
-[VCSessionParticipantLocal checkSubscribedStreamsConsistency:]
-[VCSessionParticipantLocal setPeerSubscribedStreams:]_block_invoke
peerSubscribedStreams=
%s(%p) %s
localPublishedStreams=
+[VCSessionParticipantLocal updateBandwidthAllocator:activeStream:peerSubscribedStreams:streamGroup:]
subscribed to
unsubscribed from
-[VCSessionParticipantLocal enableRedundancy:]
-[VCSessionParticipantLocal updateUplinkTargetBitrate:rateChangeCounter:]_block_invoke
-[VCSessionParticipantLocal updateUplinkTargetBitrateForStreamGroups]_block_invoke
-[VCSessionParticipantLocal updateTargetBitrateOneToOne:rateChangeCounter:]_block_invoke
VCSessionPartipantLocal_OnVideoFrame
-[VCSessionParticipantLocal sourceFrameRateDidChange:]
B48@?0^{opaqueCMSampleBuffer=}8{?=qiIq}16r^{?=BBiBBiC}40
-[VCSessionParticipantLocal avConferencePreviewError:]
-[VCSessionParticipantLocal thermalLevelDidChange:]
-[VCSessionParticipantLocal cameraAvailabilityDidChange:]
VCSPFR
VCSPTLC
VCSPPLC
VIDSTATE
VIDDRTN
-[VCSessionParticipantLocal pushAudioSamples:]
spatialAudioDisabled
-[VCSessionParticipantLocal handleActiveConnectionChange:]_block_invoke
-[VCSessionParticipantLocal didReceiveReportPacket:arrivalNTPTime:]
-[VCSessionParticipantLocal didReceiveCustomReportPacket:arrivalNTPTime:]
-[VCSessionParticipantLocal streamGroup:didSuspendStreams:]
-[VCSessionBitrateArbiter rangeCheck:]
-[VCSessionBitrateArbiter bitrateForStoreBagKey:connectionType:currentBitrate:isExpensive:]
-[VCTransportSessionSocket initWithSocketDictionary:notificationHandler:eventHandler:handlerQueue:context:]
-[VCTransportSessionSocket initWithRTPSocket:RTCPSocket:notificationHandler:eventHandler:handlerQueue:context:]
-[VCTransportSessionSocket createVFD:realSocket:sockAddr:length:isUsable:]
-[VCTransportSessionSocket updateTransportStream:]
-[VCTransportSessionSocket connectSocket:remoteAddress:storage:]
-[VCTransportSessionSocket setRemoteAddress:remoteRTCPPort:]
-[VCTransportSessionSocket configureParamatersForStreamType:socket:packetType:remoteIP:remoteIPLength:]
-[VCTransportSessionSocket createAndConfigureVFDForSocket:packetType:remoteIP:remoteIPLength:vfd:]
-[VCTransportSessionSocket createVFD:forStreamType:]
-[VCTransportSessionSocket start]
-[VCTransportSessionSocket initializeInterfaceTypeWithSocket:]
-[VCTransportSessionSocket initializeNetworkInfoWithSocket:]
VCPerfTimingUtilsLog
RTCPRemoteSSRC
RTCPLocalSSRC
_VCPacketFilterRTCPFinalize
_VCPacketFilterRTCPCopyProperty
_VCPacketFilterRTCPSetProperty
VCAudioIO
+[VCAudioIO defaultControllerForAudioType:forDirection:forOperatingMode:]
+[VCAudioIO controllerForDeviceRole:audioType:direction:operatingMode:streamInputID:streamToken:networkClockID:]
-[VCAudioIO initWithConfiguration:]
-[VCAudioIO reconfigureWithOperatingMode:deviceRole:direction:streamInputID:streamToken:allowAudioRecording:networkClockID:channelIndex:]
-[VCAudioIO forceCleanup]
-[VCAudioIO setFarEndVersionInfo:]
-[VCAudioIO setMuted:]
-[VCAudioIO setDirection:]
-[VCAudioIO setSpatialAudioDisabled:]
-[VCAudioIO createConverterForSource:error:]
source
sink
-[VCAudioIO didStart:error:]
-[VCAudioIO didStop:error:]
-[VCAudioIO didStop:error:]_block_invoke
-[VCAudioIO controllerFormatChanged:]
-[VCAudioIO didSuspend]
-[VCAudioIO didResume]
-[VCAudioIO didServerDie]
-[VCAudioIO startWithCompletionHandler:]
state
-[VCAudioIO start]_block_invoke
-[VCAudioIO start]
start timeout
-[VCAudioIO stopWithCompletionHandlerInternal:]
-[VCAudioIO stopWithCompletionHandler:]
-[VCAudioIO stop]_block_invoke
-[VCAudioIO stop]
_VCAudioIO_ConvertSourceSamples
-[VCStatisticsCollectorQueue dealloc]
-[VCStatisticsCollectorQueue start]
com.apple.AVConference.VCRateControlStatisticsProc
-[VCStatisticsCollectorQueue stop]
VCStatisticsCollectorQueue_AddStatisticsMessage
VCStatisticsCollectorQueue_DrainAndProcessAllStatistics
VCStatisticsCollectorQueue_FlushAllStatistics
_VCStatisticsCollectorQueue_Enqueue
_VCStatisticsCollectorQueue_ShouldFlushOldMessages
_VCStatisticsCollectorQueue_Dequeue
VCTimescalePSOLA_Accelerate
_VCTimescalePSOLA_CheckQualityAndAccelerate
-[VCAudioCaptionsBufferInfo initWithStreamToken:format:bufferLength:]
%@<%p> streamToken=%ld priority=%d
-[VCAudioCaptionsBufferInfoCollection initWithBufferLength:]
com.apple.VCAudioCaptionsBufferInfoCollection.stateQueue
%@<%p> bufferInfos=%@
v32@?0@"VCAudioCaptionsBufferInfo"8Q16^B24
-[VCPixelTransferSession init]
options
poolSize
AVCStreamInput
-[AVCStreamInput initWithDelegate:delegateQueue:format:options:error:]
AVCInputStream
mediaType=%s subtype=%s
 dimensions=%dx%d
 audioStreamBasicDescription=%s
-[AVCStreamInput processOptions:]
-[AVCStreamInput processFormat:]
-[AVCStreamInput setupDelegate:delegateQueue:]
%s.%@.delegate_queue
%s.%@.connection_queue
-[AVCStreamInput setupXPCQueue]
-[AVCStreamInput newRemoteQueueWithServerPid:]
-[AVCStreamInput setupXPCConnection]
-[AVCStreamInput dealloc]
-[AVCStreamInput createAndAddRemoteQueueToXPCDictionary:]
-[AVCStreamInput initializeServerSideInputStream]
-[AVCStreamInput didServerDie]
-[AVCStreamInput didServerDie]_block_invoke
-[AVCStreamInput didStart]_block_invoke
-[AVCStreamInput didStop]_block_invoke
-[AVCStreamInput didSuspend]_block_invoke
-[AVCStreamInput didResume]_block_invoke
VCStreamInputDidServerDie
v32@?0@"AVCStreamInput"8@"NSDictionary"16@"NSError"24
-[AVCStreamInput sendSampleBufferOverXPC:error:]_block_invoke_2
-[AVCStreamInput sendSampleBufferOverXPC:error:]_block_invoke
-[AVCStreamInput pushSampleBuffer:error:]
%@(%p) streamInputID=%ld
_AVCStreamInput_PrintSampleBufferDetails
avcKeyRTPSocket
avcKeyRTCPSocket
avcKeySharedSocket
avcKeySourcePort
avcKeySupportedCodecs
avcKeySupportedAudioCodecs
avcKeySupportedVideoEncodingCodecs
avcKeySupportedVideoDecodingCodecs
avcKeySupportedVideoEncodingResolutions
avcKeySupportedVideoDecodingResolutions
avcKeyAudioPowerSpectrumTokenInput
avcKeyAudioPowerSpectrumTokenOutput
avcKeyRTPLocalSSRC
avcKeyVideoStreamDownlinkOptimalBitrate
avcKeyVideoStreamDownlinkOperatingBitrate
avcKeyVideoStreamDownlinkIsOperatingAtMaxBitrate
avcKeyVideoStreamDownlinkIsOperatingAtMinBitrate
avcKeyVideoStreamUplinkOperatingBitrate
avcKeySupportedMaxVideoDecodes
avcKeySessionSentBytes
avcKeySessionReceivedBytes
avcMediaStreamOptionCallID
avcMediaStreamOptionRemoteEndpointInfo
avcMediaStreamOptionRunInProcess
avcMediaStreamOptionClientPID
avcMediaStreamOptionIsOriginator
-[VCVideoStreamRateAdaptationFeedbackOnly initWithRTPHandle:reportingAgent:receiverStats:dumpID:reportingParentID:statisticsCollector:lowTimestampPrecision:]
-[VCVideoStreamRateAdaptationFeedbackOnly dealloc]
-[VCVideoStreamRateAdaptationFeedbackOnly startFeedbackSource]
-[VCVideoStreamRateAdaptationFeedbackOnly stopFeedbackSource]
-[VCVideoStreamRateAdaptationFeedbackOnly sendRateControlFeedback]
-[VCVideoStreamRateAdaptationFeedbackOnly updateRateControlInfoWithStatisticsMessage:]
-[VCEmulatedNetworkQueue initWithPolicies:]
-[VCEmulatedNetworkQueue write:]
-[VCEmulatedNetworkQueue enqueuePacket:]
-[VCEmulatedNetworkQueue runUntilTime:]
-[VCEmulatedNetworkQueue dequeuePacket:time:]
-[AVCCaptionsClient initWithDelegate:streamToken:]
-[AVCCaptionsClient connect]
vcCaptionsStreamToken
vcCaptionsClientInitialize
-[AVCCaptionsClient disconnect]
vcCaptionsClientUninitialize
vcCaptionsGetCaptionsEnabled
vcCaptionsGetCaptionsSupported
vcCaptionsSupported
vcCaptionsEnable
vcCaptionsSetCaptionsEnabled
vcCaptionsLocale
vcCaptionsSetCaptionsConfiguration
com.apple.avconference.VCScreenCaptureManager.xpc.commands
-[VCScreenCaptureManager init]
+[VCScreenCaptureManager sharedManager]
Screen Capture unknown error
vcScreenCaptureDidStartSuccess
vcScreenCaptureDidStartError
vcScreenCaptureDidStopSuccess
vcScreenCaptureDidStopError
-[VCStreamInput initWithStreamInputID:format:delegate:delegateQueue:remoteQueue:]
streamInputID=%@
%@.%@.%p
-[VCStreamInput dealloc]
MediaCaptureJitter
MediaCaptureBufferRate
-[VCStreamInput createRemoteReceiveQueue:]
v20@?0i8^{FigRemoteOperation=iiQ^{__CFString}(?={?=^{__CFDictionary}^{__CFDictionary}}{?=^v^{__IOSurface}^{__IOSurface}}{?=^{opaqueCMSampleBuffer}Q}{?=^{opaqueCMFormatDescription}}{?=q^{opaqueCMFormatDescription}})}12
_VCStreamInput_RemoteQueueOperationHandler
{ %@ clientFormat=%s operatingMode=%d deviceRole=%d audioRecording=%d, isPrewarmingClient=%d, sinkIO=%p, sourceIO=%p }
-[AVAudioDevice initWithDeviceID:]
%@: [%p] deviceName[%@] deviceID[%@] UID[%@] isPreferred[%d] _isLineIn[%d] inputAvailable[%d] outputAvailable[%d]
VPAUAggregateAudioDevice
-[AVAudioDevice copyStreamIDArray:length:]
-[AVAudioDevice deviceHasNonTapStreamsInStreamList:length:]
com.apple.audio.CoreAudio
-[AVAudioDevice isAggregableDevice]
-[AVAudioDevice isSomethingConnectedToJack]
-[AVInternalDeviceList dataSourceControlID]
Calling changeListener %s
-[AVInternalDeviceList notifyDeviceListChanged]_block_invoke_2
self=%s devices=%s
-[AVAudioDeviceList devices]
AVAudioDeviceList-devices
B32@?0@8Q16^B24
-[AVAudioDeviceList inputDevices]_block_invoke
self=%s inputDevices=%s
-[AVAudioDeviceList inputDevices]
AVAudioDeviceList-inputDevices
-[AVAudioDeviceList outputDevices]_block_invoke
self=%s outputDevices=%s
-[AVAudioDeviceList outputDevices]
AVAudioDeviceList-outputDevices
FixedPLR
LossPattern
QueueSize
-[VCEmulatedNetworkAlgorithmQueueLoss updateSettingsAtTime:impairments:]
-[VCEmulatedNetworkAlgorithmQueueLoss process:]
-[VCRedundancyControlAlgorithmAudioMultiWay processNWConnectionStatistics:]
-[VCRedundancyControlAlgorithmAudioMultiWay processRCNetworkStatistics:]
-[VCRedundancyControlAlgorithmAudioMultiWay updateRedundancyPercentageWithPLRThresholds:]
MediaTypeAudio
MediaTypeVideo
-[AVCSessionParticipant initWithParticipantID:data:delegate:queue:]
forceLoopback
vcSessionParticipantKeyUUID
%@[%p] idsParticipantID[%llu] _participantID[%@] _hasPendingChanges[%d] audioEnabled[%d] videoEnabled[%d] videoQuality[%d] visibilityIndex[%d] promienceIndex[%d] participantData[%@]
-[AVCSessionParticipant setMediaState:forMediaType:]
-[AVCSessionParticipant setMediaState:forMediaType:]_block_invoke
-[AVCSessionParticipant setAudioMuted:]_block_invoke
Invalid transition
-[AVCSessionParticipant setVolume:]_block_invoke
-[AVCSessionParticipant setVideoQuality:]_block_invoke
vcSessionSetVideoQuality
-[AVCSessionParticipant setVisibilityIndex:]_block_invoke
vcSessionSetVisibilityIndex
-[AVCSessionParticipant setProminenceIndex:]_block_invoke
vcSessionSetProminenceIndex
-[AVCSessionParticipant setVideoPositionalInfo:]
-[AVCSessionParticipant setVideoPositionalInfo:]_block_invoke
Screen doesn't support pause/resume
Unsupported media type pause/resume
v24@?0B8B12@"NSError"16
-[AVCSessionParticipant completeSetMediaState:forMediaType:didSucceed:error:]_block_invoke
%@[%@] 
v32@?0@"NSNumber"8@"NSNumber"16^B24
-[AVCSessionParticipant printMediaStates]
-[AVCSessionParticipant storeMediaState:forMediaType:]
-[AVCSessionParticipant setMediaType:enabled:mediaString:xpcMessageKey:xpcOperationKey:completionBlock:]
-[AVCSessionParticipant setMediaType:enabled:mediaString:xpcMessageKey:xpcOperationKey:completionBlock:]_block_invoke
-[AVCSessionParticipant setMediaType:paused:mediaString:xpcMessageKey:xpcOperationKey:completionBlock:]
/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/AVCSessionParticipant.m
-[AVCSessionParticipant setMediaType:paused:mediaString:xpcMessageKey:xpcOperationKey:completionBlock:]_block_invoke
-[AVCSessionParticipant spatialAudioSourceIDForMediaType:]
-[AVCSessionParticipant registerBlocksForNotifications]_block_invoke
-[AVCSessionParticipant registerBlocksForNotifications]_block_invoke_2
-[AVCSessionParticipant registerBlocksForNotifications]_block_invoke_3
com.apple.AVConference.AVCSessionParticipant.notificationQueue
-[AVCSessionParticipant setupMediaStates]
-[AVCSessionParticipant appendConfigurationToXPCConfiguration:]
+[AVCSessionParticipant archiveMediaStates:]
+[AVCSessionParticipant unarchiveMediaStatesWithData:]
AVCStreamOutput
-[AVCStreamOutput initWithStreamToken:delegate:queue:error:]
-[AVCStreamOutput dealloc]
com.apple.avconference.StreamOutput.internalReceiverQueue
-[AVCStreamOutput createReceiverQueue]
-[AVCStreamOutput setupXPCConnection]
streamOutputInitialize
streamOutputCachedNotifications
-[AVCStreamOutput remoteQueueOperationHandlerWithError:operation:]
-[AVCStreamOutput setupRemoteQueueWithSenderQueue:]
streamOutputSyncTimeOffset
streamOutputSetSyncTimeOffset
-[AVCStreamOutput didPause:]
-[AVCStreamOutput didStall:]
-[AVCStreamOutput didDegrade:]
-[AVCStreamOutput didSuspend:]
-[AVCStreamOutput didInvalidate]
-[AVCStreamOutput didReceiveSampleBuffer:]
-[AVCStreamOutput serviceHandlerDidDieWithArguments:error:]
conferenceIsVideoSuspended
-[AVCStreamOutput serviceHandlerDidReceiveFrameWithArguments:error:]
-[AVCStreamOutput registerBlocksForNotification]_block_invoke
streamOutputDidRemoteVideoPause
streamOutputDidRemoteMediaStall
streamOutputDidVideoDegrade
streamOutputDidVideoSuspend
streamOutputDidReleaseRemoteVideoQueue
streamOutputTerminate
_AVCStreamOutput_PrintSampleBufferDetails
_AVCStreamOutput_DisplayHealthInfo
VCAllocatorFirstCome_Create
_VCAllocatorFirstComeCallback_Alloc
Terminating due to high allocation count
_VCAllocatorFirstCome_AllocateInfo
-[AVCMediaStreamNegotiatorSettings operatingMode]
+[AVCMediaStreamNegotiatorSettings negotiatorSettingsForMode:deviceRole:options:errorString:]
Failed to init AVCMediaStreamNegotiatorSettings for mode=%ld
audioRules init failed
_audioConfiguration init failed
no _videoRuleCollections is created
Hardware does not support offerer device role
no _screenRuleCollections is created
no _hdrModesSupported ivar is created
-[AVCMediaStreamNegotiatorSettingsiPadCompanion initWithOptions:deviceRole:error:]
cannot get accessNetworkType from Init options
transportSessionEventInfoNewLink
transportSessionEventInfoIsFirstLink
transportSessionEventInfoDisconnectedLink
transportSessionEventInfoNewPrimary
transportSessionEventInfoOldPrimary
transportSessionEventInfoIsDuplicationEnabled
transportSessionEventInfoIsMediaUnrecoverableSignal
transportSessionEventInfoActiveConnection
transportSessionEventInfoPreferredInterfaceForDuplication
transportSessionEventInfoNotifyPeer
transportSessionEventPayloadKey_IsCellular
transportSessionEventInfoIsMediaQualityDegraded
com.apple.VideoConference.VCTransportSession.stateQueue
com.apple.VideoConference.VCTransportSession.notificationQueue
-[VCTransportSession start]
-[VCTransportSession stop]_block_invoke
-[VCTransportSession callEventHandlerWithEvent:info:]_block_invoke
-[VCTransportSession createTransportStream:withType:options:]
-[VCTransportSession createVFD:forStreamType:]
-[VCTransportSession deregisterNotificationForTransportStream:]
-[VCTransportSession setConnectionSelectionVersionWithLocalFrameworkVersion:remoteFrameworkVersion:]
+[VCTransportSession trafficClassForStreamType:]
+[VCTransportSession vtpPacketTypeForStreamType:]
-[VCTransportSession networkInterfaceType]
-[VCTransportSession networkMTU]
-[VCTransportSession isIPv6]
-[VCTransportSession createNWMonitor]
-[VCVideoTransmitterConfig init]
{ %s: videoResolution:%ld codecType:%ld framerate:%lu txMaxBitrate:%lu txMinBitrate:%lu keyFrameInterval:%lu recommendedMTU:%lu cvoExtensionID:%lu enableCVO:%d customWidth %lu, customHeight %lu, pixelFormat: %s}
VFExCnt
VIQDCnt
VSTSM
ChannelSequence
VIQMinHEL
VIQMaxHEL
VIQAHEL
-[AVCQoSMonitor initWithStreamToken:queue:error:]
-[AVCQoSMonitor dealloc]
-[AVCQoSMonitor setDelegate:]
-[AVCQoSMonitor requestQoSReport]
-[AVCQoSMonitor registerStreamToken:]
-[AVCQoSMonitor reportingIntervalForStreamToken:]
-[AVCQoSMonitor terminateConnection]
-[AVCQoSMonitor registerBlocksForNotifications]_block_invoke
/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/AVCQoSMonitor.m
Could not register QoS Monitor
Invalid Stream Token
+[VCVisualAlert start]
+[VCVisualAlert stop]
hasReceivedFirstFrame=%d isVideoPaused=%d isMediaStalled=%d isVideoDegraded=%d isVideoSuspended=%d localInterfaceType=%@ remoteInterfaceType=%@
com.apple.AVConference.VCRemoteVideoManager.XPCCommandQueue
-[VCRemoteVideoManager releaseQueueForStreamToken:]_block_invoke
-[VCRemoteVideoManager dispatchedDidReceiveFirstRemoteFrameForStreamToken:]
-[VCRemoteVideoManager dispatchedRemoteScreenAttributesDidChange:streamToken:]
-[VCRemoteVideoManager dispatchedRemoteVideoAttributesDidChange:streamToken:]
-[VCRemoteVideoManager dispatchedRemoteVideoDidPause:streamToken:]
-[VCRemoteVideoManager dispatchedRemoteMediaDidStall:streamToken:]
-[VCRemoteVideoManager dispatchedRemoteVideoDidDegrade:streamToken:]
-[VCRemoteVideoManager dispatchedRemoteVideoDidSuspend:streamToken:]
conferenceVisualRectangle
-[VCRemoteVideoManager contextIdForStreamTokenWithArguments:error:]
vcRemoteVideoSlotsForModes
VCRemoteVideoManager
-[VCRemoteVideoManager setLayerBoundsForStreamTokenWithArguments:error:]
-[VCRemoteVideoManager dispatchedNotifyCachedStateForStreamToken:]
-[VCRemoteVideoManager registerBlocksForService]_block_invoke
vcRemoteVideoInitializeRemoteVideoForStreamToken
vcRemoteVideoGetContextIdForStreamToken
vcRemoteVideoSetLayerBoundsForStreamToken
-[VCRemoteVideoManager registerBlocksForService]_block_invoke_3
vcRemoteVideoTerminate
vcRemoteVideoGetCachedNotifications
VCCellularAudioTap
-[VCCellularAudioTap initWithProcessId:delegate:delegateQueue:]
com.apple.VideoConference.VCCellularAudioTap.delegateQueue
com.apple.VideoConference.VCCellularAudioTap.stateQueue
-[VCCellularAudioTap addAudioTapForStreamToken:tapType:error:]_block_invoke
-[VCCellularAudioTap removeAudioTapForStreamToken:error:]_block_invoke
-[VCCellularAudioTap registerAudioTapForStreamToken:tapType:]
bins
SingleQueueImpairments
-[VCNetworkSimulator createDefaultPolicies]
-[VCNetworkSimulator loadPoliciesFromJsonFile]
-[VCNetworkSimulator setupNetwork]
com.apple.avconference.networkSimulator.networkproc
-[VCNetworkSimulator start]
SUCCEEDED
FAILED
-[VCNetworkSimulator stop]
networkProc
VCAudioStructs_PrintFrameFormat
DisableReplayProtection
VCCryptor_GetCipherSuite
VCCryptor_ComposeSFrameHeaderWithCounterAndMKI
VCCryptor_ParseSFrameHeader
_VCCryptor_ValidateAuthenticationTag
VCCryptor_Create
VCCryptor_Encrypt
VCCryptor_Decrypt
VCCryptorClass
_VCCryptor_ValidateCryptographyInputParameters
_VCCryptor_EnsureCryptorIsReady
_VCCryptor_EnsureCryptorIsReady_block_invoke
_VCCryptor_SetupCryptor
_VCCryptor_DeriveIV
canDisplayCaptions
senderLanguages
VCMediaStream
-[VCMediaStream defaultTransport]
-[VCMediaStream defaultStreamConfig]
-[VCMediaStream oneToOneStreamConfig]
-[VCMediaStream decryptionStatusChanged:]
UseTransportStreamsForSockets
-[VCMediaStream setupRTPWithSocketDictionary:error:]
-[VCMediaStream initializeTransportSetupInfoWithTransportSession:]
/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCMediaStream.m
Transport session creation failed
Invalid parameter
-[VCMediaStream handleTransportSessionEvent:info:]
-[VCMediaStream initializeTransportSetupInfoWithRTPSocket:RTCPSocket:]
-[VCMediaStream initializeTransportSessionWithRTPNWConnectionID:rtcpNWConnectionID:error:]
vcMediaStreamConnectionClientID
vcMediaStreamRTCPConnectionClientID
connectionID should not be nil
UseTransportStreamsForNW
-[VCMediaStream setupRTPWithNWConnection:error:]
Unable to retrieve NWConnection for clientID '%@'
No NWConnection matching clientID found
-[VCMediaStream dupNWConnectionBackingSocket:]
-[VCMediaStream setupNWConnectionWithID:]
-[VCMediaStream setupNWConnectionWithID:]_block_invoke
-[VCMediaStream setupCallbacksWithNWConnectionMonitor:]
vcMediaStreamDestID
vcMediaStreamSourceIP
No IDS destination or IP Address specified
UseTransportStreamsForProxy
-[VCMediaStream setupRTPForIDS]
No IDS destination
UseTransportStreamsForIDS
-[VCMediaStream setupRTPWithIDSDestination:error:]
-[VCMediaStream initializeTransportSetupInfoWithIDSDestination:error:]_block_invoke
-[VCMediaStream initializeTransportSetupInfoWithIDSDestination:error:]
Could not start setup RTP
No IP Address specified
vcMediaStreamSourceInterfaceName
TransportType
Unique5GhzChannelCount
Unique2pt4GhzChannelCount
UniqueDFSChannelCount
InactiveSlotCount
-[VCMediaStream collectChannelSequenceMetrics:]
-[VCMediaStream setupMediaStream]
com.apple.AVConference.VCMediaStream.Notification
UseNWConnectionNotificationForMediaStream
-[VCMediaStream dealloc]
kVCMediaStreamStateStopped
kVCMediaStreamStateStarting
kVCMediaStreamStateRunning
kVCMediaStreamStateStopping
kVCMediaStreamStatePaused
-[VCMediaStream createRTPHandleWithStreamConfig:payloadType:localSSRC:]
-[VCMediaStream createTransportWithStreamConfig:ssrc:]
-[VCMediaStream registerMediaControlInfoGeneratorWithConfigs:]
-[VCMediaStream createLocalMediaControlInfoGeneratorWithType:version:]
-[VCMediaStream registerCallbacksForMediaControlInfoGenerator:forDirection:options:]
-[VCMediaStream unregisterMediaControlInfoGenerator]
VCMediaStreamFillMediaControlInfoCallback
VCMediaStreamProcessMediaControlInfoCallback
-[VCMediaStream handleEncryptionInfoChange:]
-[VCMediaStream resetDecryptionTimeout]
-[VCMediaStream updateRemoteAddressWithConfig:error:]
Stream configuration failed
Could not set remote address on transport session
-[VCMediaStream setStreamConfig:withError:]
setStreamConfig called while media stream is running
-[VCMediaStream start]_block_invoke
-[VCMediaStream start]
Time out
Media stream start time out
-[VCMediaStream startWithCompletionHandler:]
Start called while media stream is running or starting
-[VCMediaStream startWithCompletionHandler:]_block_invoke
-[VCMediaStream setState:]
-[VCMediaStream handleStartDidSucceed:withError:]
Unable to start media stream transport
Internal error
-[VCMediaStream stop]_block_invoke
-[VCMediaStream stop]
Media stream stop time out
-[VCMediaStream stopInternalWithHandler:]
-[VCMediaStream stopInternalWithHandler:]_block_invoke
-[VCMediaStream setPause:]_block_invoke
-[VCMediaStream setPause:]
Media stream pause time out
-[VCMediaStream getInvalidParamErrorForSetPause:didSucceed:]
Trying to set pause=%d while the media stream is in state=%d
-[VCMediaStream setPause:withCompletionHandler:]
-[VCMediaStream setPause:withCompletionHandler:]_block_invoke_2
-[VCMediaStream setPause:withCompletionHandler:]_block_invoke
vcMediaStreamCallID
vcMediaStreamClientPID
vcMediaStreamRemoteEndpointInfo
-[VCMediaStream setLocalParticipantInfo:networkSockets:withError:]
-[VCMediaStream setStreamDirection:]
-[VCMediaStream streamDirection]
-[VCMediaStream setRtcpEnabled:]
-[VCMediaStream setRtpTimeOutEnabled:]
-[VCMediaStream setRtcpTimeOutEnabled:]
-[VCMediaStream setDecryptionTimeOutEnabled:]
-[VCMediaStream setRtpTimeOutInterval:]
-[VCMediaStream setRtcpTimeOutInterval:]
-[VCMediaStream setDecryptionTimeOutInterval:]
-[VCMediaStream setRtcpSendInterval:]
-[VCMediaStream generateReceptionReportList:reportCount:]
-[VCMediaStream rtcpSendHeartbeat]
-[VCMediaStream startRTCPSendHeartbeat]
-[VCMediaStream stopRTCPSendHeartbeat]
-[VCMediaStream setStreamIDs:repairStreamIDs:]
-[VCMediaStream resetTimeoutHeartbeatWithRTPTimeout:rtcpTimeout:decryptionTimeout:currentTime:]
-[VCMediaStream checkRTPPacketTimeoutAgainstTime:lastReceivedPacketTime:]
-[VCMediaStream checkRTCPPacketTimeoutAgainstTime:lastReceivedPacketTime:]
-[VCMediaStream checkDecryptionTimeoutAgainstTime:decryptionErrorStartTime:]
-[VCMediaStream checkDecryptionTimeoutForMKMRecoveryAgainstTime:decryptionErrorStartTime:]
-[VCMediaStream timeoutHeartbeat]
-[VCMediaStream startTimeoutHeartbeat]
-[VCMediaStream stopTimeoutHeartbeat]
-[VCMediaStream onCallIDChanged]
-[VCMediaStream supportedPayloads]
-[VCMediaStream onConfigureStreamWithConfiguration:error:]
-[VCMediaStream onStartWithCompletionHandler:]
-[VCMediaStream onStopWithCompletionHandler:]
-[VCMediaStream onPauseWithCompletionHandler:]
-[VCMediaStream onResumeWithCompletionHandler:]
-[VCMediaStream onSendRTCPPacket]
-[VCMediaStream onRTPTimeout]
-[VCMediaStream onRTCPTimeout]
-[VCMediaStream lastReceivedRTPPacketTime]
-[VCMediaStream lastReceivedRTCPPacketTime]
-[VCMediaStream rtcpHeartbeatLeeway]
-[VCMediaStream collectRxChannelMetrics:interval:]
-[VCMediaStream collectRxChannelMetrics:]
-[VCMediaStream collectTxChannelMetrics:]
-[VCMediaStream handleActiveConnectionChange:]
-[VCMediaStream handleMediaCallbackNotification:inData:outData:]_block_invoke
-[VCMediaStream handleMediaCallbackNotification:inData:outData:]_block_invoke_3
-[VCMediaStream handleMediaCallbackNotification:inData:outData:]
Throttling_MediaQueue_AddPacket_ScheduleAndActiveProbing
Throttling_MediaQueue_SetAudioInterval
Throttling_MediaQueue_SetIsIPv6
Throttling_VideoTransmitterUtil_ForceFirstProbePktSize
Throttling
Throttling_AFRC_GetDefaults
HardCodeBWEstRate
HardCodeTxRate
ThrottlingSendLog
ThrottlingRecvLog
ThrottlingProbeSeqLog
RealTimeStats_Init
ProcessThrottledPktsWithNewAudioPkt
ProcessThrottledPktsWithTime
TagMPWithOpportunisticBWEProbeSeq
ScheduleReleasedPkts
CheckIfBoostNeeded
CalcBoostIncrease
AccelerateThrottlingQueue
SchedulePkt
-[VCVideoRuleCollectionsMoments init]
-[VCVideoRuleCollectionsMomentsEmbeded isSupportedDeviceClass]
-[VCVideoRuleCollectionsMomentsEmbeded isSupportedChipID]
dtlsHandshakeTimeout
DTLS_Create
DTLS_Cleanup
DTLS_Handshake
DTLS
No datagram context available
DTLS_UpdateHandshake
DTLS_IsConnected
DTLS_Read
DTLS_Write
-[WRMClient init]
com.apple.AVConference.WRMClientQueue
-[WRMClient initWithDelegate:]
-[WRMClient dealloc]
VCCreateVFDForIDS
VCBasebandNotificationParser_ParseNotification
-[VCVideoRuleCollectionsScreenSecondaryMac initWithHardwareSettings:]
-[VCVideoRuleCollectionsScreenSecondaryMac setupH264Rules]
appendSamples
AVCCaptions
-[AVCCaptionsToken initWithText:confidence:range:]
%@: confidence[%f] range[%@]
-[AVCCaptionsResult initWithCapacity:utteranceComplete:utteranceNumber:updateNumber:]
%@: tokens:[%@] utteranceCompleted[%d]
%@: locale[%@]
CellularUniqueTag
_VCPacketFilterBBNotificationFinalize
_VCPacketFilterBBNotificationCopyProperty
_VCPacketFilterBBNotificationSetProperty
-[VCImageResizingConverter initWithOutputWidth:outputHeight:formatType:]
forceScreenDimensionWidth
-[VCHardwareSettingsEmbedded _initializeScreenDimension]
forceScreenDimensionHeight
facetime_camera_sifr
-[VCHardwareSettingsEmbedded isCaptureSIFRPreferred]
forceDeviceClass
+[VCHardwareSettingsEmbedded deviceClass]
supportsMultiway720pStream
MaxMultiwayFramerate
-[VCHardwareSettingsEmbedded isRemoteCameraSenderSupported]
-[VCHardwareSettingsEmbedded isSecondDisplaySupportEnabled]
-[VCHardwareSettingsEmbedded isHEVC444DecodeSupported]
enableDiscreteSwitchSettingsForTesting
-[VCSwitchManager initializeLocalSwitches]
-[VCSwitchManager setupLocalAudioTestGroupSwitches]
-[VCSwitchManager setupLocalVideoTestGroupSwitches]
-[VCSwitchManager setupLocalNetworkTestGroupSwitches]
-[VCSwitchManager setupLocalRateControlTestGroupSwitches]
-[VCSwitchManager setupLocalDuplicationTestGroupSwitches]
-[VCSwitchManager updateDuplicationEnhancementSwitches]
%@[%p] LocalSwitches[%08X] RemoteSwitches[%08X] NegotiatedSwitches[%08X] preferRelayOverP2P[%d] alwaysOnAudioRedundancy[%d] highFec[%d] lowFpsVideo[%d] vplrFec[%d] fastMediaDuplication[%d] iRATRtp[%d] preWarmCell[%d] duplicateImportantPkts[%d] allowBurstyLossRampDown[%d] hevcWifiTiers[%d] viewpointCorrection[%d] heifHevcLivePhotos[%d] wifiLowTierRedundancy[%d] cellularLowTierRedundancy[%d] iRATMetrics[%d] fecHeaderV1[%d] updatedAFRCHeader[%d] secureMessaging[%d] disableSIP[%d] wifiAssistDuplication[%d] wifiAssistBudgetStatus[%d] wifiAssistStatusBar[%d] lowNetworkMode[%d] duplicationEnhancement[%d] videoJB[%d] iRATDuplication[%d], wrmRSSIThreshold[%d] mediaDrivenDuplication[%d] UseVideoJitterForVideoPlayoutEnabled[%d] UseRTTForFIRThrottlingEnabled[%d]
VCSecurityKeyHolder_CopyKeyManager
VCSecurityKeyHolder_Create
VCSecurityKeyHolder_CopyKeyMaterialForKeyIndex
VCSecurityKeyHolder_RegisterForKeyMaterialChangeNotification
VCSecurityKeyHolder_AssociateKeyIndex
VCSecurityKeyHolderClass
_VCSecurityKeyHolder_Finalize
_VCSecurityKeyHolder_KeyMaterialCallback
-[VCMediaNegotiationBlobV2StreamGroup(Utils) initWithStreamGroupConfig:defaultConfig:]
-[VCMediaNegotiationBlobV2StreamGroup(Utils) initWithStreamGroupConfig:]
-[VCMediaNegotiationBlobV2StreamGroup(Utils) getStreamGroupConfig:]
-[VCMediaNegotiationBlobV2StreamGroup(Utils) appendStreamsToStreamGroupConfig:streamGroupID:rtpSampleRates:]
[%lu] %@Stream Group: 
groupID='%s' mediaType='%s' subtype='%s'
 syncGroupID='%s'
Skipping (result=%x)
-[VCMediaNegotiationBlobV2StreamGroup(Utils) printWithLogFile:prefix:]
%@  
+[VCMediaNegotiationBlobV2StreamGroup(Utils) defaultsForStreamGroupCustom:]
-[VCMediaNegotiationBlobV2StreamGroup(Utils) setupStreamsWithGroupConfig:]
-[VCMediaNegotiationBlobV2StreamGroup(Utils) setupPayloadsWithGroupConfig:]
-[VCMediaNegotiationBlobV2StreamGroup(Utils) updatePayloadConfigsWithStreamGroupConfig:rtpSampleRates:]
SFRAME 80
SFRAME 32
RCCM3
VCDTMFToneGenerator_Reinit
VCDTMFToneGenerator_GenerateSamples
-[VCVideoRuleCollectionsRemoteCamera setupHEVCRules]
-[VCConnectionManagerIDS oneToOneBitrateCapForConnectionWithType:]
-[VCConnectionManagerIDS addConnection:]
-[VCConnectionManagerIDS reselectPrimaryConnection]
-[VCConnectionManagerIDS handleSecondaryConnectionRemoved]
-[VCConnectionManagerIDS removeConnection:]
-[VCConnectionManagerIDS optOutAllStreamsForNonPrimaryConnections]
-[VCConnectionManagerIDS setPreferredLocalInterfaceForDuplication:]
-[VCConnectionManagerIDS setPreferredRemoteInterfaceForDuplication:]
-[VCConnectionManagerIDS updateSessionStats:]
-[VCConnectionManagerIDS updateConnectionForDuplication]
lnkPrbRTTMeanDelta
lnkPrbPLRTierDelta
-[VCConnectionManagerIDS shouldReplaceConnection:withConnection:]
-[VCConnectionManagerIDS addConnectionToConnectionArray:]
-[VCConnectionManagerIDS sourceDestinationInfo:isSourceOnCellular:isSourceIPv6:]
-[VCConnectionManagerIDS reportConnection:isInitialConnection:]
QRSAK
QRSAP
QRSUN
-[VCConnectionManagerIDS didUpdateLinkPreferenceOrder:]
Stream: KeyInterval=%d, framerate=%d, weightFactor:%d
 => FramesPerPeriod:%d FramePosition:%d
mediaType=%@ 
-[VCSessionMediaTypeSettings initWithMediaType:]
mediaType=%@ mediaState=%@
streamGroupIDs
-[VCMediaStreamSendGroup initWithConfig:]
-[VCMediaStreamSendGroup setStreamGroupMode:]_block_invoke
-[VCMediaStreamSendGroup setupStreamGroupWithConfig:]
-[VCMediaStreamSendGroup updateConfig:forMode:]_block_invoke
streamId=%hu quality=%u
-[VCMediaStreamSendGroup setActiveConnection:uplinkBitrateCap:activeMediaStreamIDs:mediaBitrates:rateChangeCounter:]_block_invoke
-[VCMediaStreamSendGroup activeStreamKeys]
-[VCMediaStreamSendGroup updateActiveStreamsCount:]
VCSignalErrorAt
VCAudioIssueDetector_Create
VCAudioIssueDetector_Finalize
VCAudioIssueDetector_Configure
VCAudioIssueDetector_UpdateConnectionType
VCAudioIssueDetector_Start
VCAudioIssueDetector_Stop
VCAudioIssueDetector_ProcessFrame
VCAudioIssueDetector_ReportRTPTraffic
VCAudioIssueDetector_ReportRTCPTraffic
VCAudioIssueDetector_GetReportingStats
landscapeAspectRatioX
landscapeAspectRatioY
portraitAspectRatioX
portraitAspectRatioY
mismatchedDisplayAspectRatioX
mismatchedDisplayAspectRatioY
videoRuleCollections
featureString
AVConferenceXPCClient
-[AVConferenceXPCClient init]
AVConferenceXPCClientReplyQueue
AVConferenceXPCClientConnectionQueue
-[AVConferenceXPCClient dealloc]
RESULTS
Failed to create XPC dictionary
k_%d
v_%d
TIMEOUT
-[AVConferenceXPCClient closeConnectionToServer]_block_invoke
com.apple.avconference.xpc
com.apple.videoconference.camera
-[AVConferenceXPCClient createConnectionToServer]_block_invoke
XPCARGUMENTS
-[AVConferenceXPCClient createConnectionToServer]_block_invoke_2
service is nil
USERPERSISTENT
-[AVConferenceXPCClient sendMessageAsync:arguments:xpcArguments:reply:queue:replyLogLevel:]
-[AVConferenceXPCClient sendMessageAsync:arguments:xpcArguments:reply:queue:replyLogLevel:]_block_invoke
EXPECTSREPLY
-[AVConferenceXPCClient sendMessageSync:arguments:xpcArguments:]
-[AVConferenceXPCClient registerBlockForService:block:queue:eventLogLevel:]
-[AVConferenceXPCClient deregisterFromService:]
-[VCVideoRuleCollectionsCameraMac initWithHardwareSettings:]
-[VCVideoRuleCollectionsCameraMac computeEncodingScore]
-[VCVideoRuleCollectionsCameraMac setupH264WifiRules]
-[VCVideoRuleCollectionsCameraMac setUp1080pRules:]
-[VCVideoRuleCollectionsCameraMac setupRules]
-[VCVideoRuleCollectionsCameraMac _resetJ92EncodingRulesForCameraIsHD:isWVGA:is1080:]
-[VCVideoRuleCollectionsCameraMac resetEncodingRulesForCameraIsHD:isWVGA:is1080:]
com.apple.AVConference.VCStreamOutputManager.XPCCommandQueue
-[VCStreamOutputManager init]
com.apple.AVConference.VCStreamOutputManager.XPCNotificationQueue
-[VCStreamOutputManager dispatchedRegisterStreamOutputSource:forStreamToken:]
-[VCStreamOutputManager dispatchedDeregisterStreamOutputSourceForStreamToken:]
-[VCStreamOutputManager serviceHandlerStreamOutputInitializeWithArguments:error:]
VCStreamOutputManager
-[VCStreamOutputManager serviceHandlerStreamOutputNotifyCacheWithArguments:error:]
-[VCStreamOutputManager serviceHandlerStreamOutputTerminateWithArguments:error:]
-[VCStreamOutputManager serviceHandlerStreamOutputSetTimeSyncOffsetWithArguments:error:]
SecurityKey
SecuritySalt
SecurityKeyIndex
SecurityKeySetTime
SecurityLocallyGenerated
SecurityMaxSequenceNumber
VCSecurityKeyManagerNotification_SendKeyMaterialChanged
VCSecurityKeyManagerNotification_ReceiveKeyMaterialChanged
com.apple.AVConference.VCSecurityKeyManagerQueue
forceRemoteMKMMissing
keyMaterialNotUsedTimeout
-[VCSecurityKeyManager initWithDelegate:]
-[VCSecurityKeyManager dealloc]
instance=%p
-[VCSecurityKeyManager start]_block_invoke
started
failed to start
-[VCSecurityKeyManager stop]_block_invoke
-[VCSecurityKeyManager startTimers]
-[VCSecurityKeyManager startTimers]_block_invoke_2
-[VCSecurityKeyManager startTimers]_block_invoke
-[VCSecurityKeyManager stopTimers]
-[VCSecurityKeyManager addSecurityKeyMaterial:]
-[VCSecurityKeyManager addSecurityKeyMaterial:]_block_invoke
-[VCSecurityKeyManager getSendKeyMaterialWithIndex:]_block_invoke
-[VCSecurityKeyManager getRecvKeyMaterialWithIndex:]_block_invoke
-[VCSecurityKeyManager getLatestSendKeyMaterial]_block_invoke
-[VCSecurityKeyManager getLatestRecvKeyMaterial]_block_invoke
-[VCSecurityKeyManager pruneSendKeyMaterialWithDelay:]_block_invoke
-[VCSecurityKeyManager pruneRecvKeyMaterialWithDelay:]_block_invoke
-[VCSecurityKeyManager pruneAllExpiredKeys]
-[VCSecurityKeyManager schedulePruneTimer:]
-[VCSecurityKeyManager handlePruneTimerEventAndReschedule]
-[VCSecurityKeyManager scheduleEncryptionRollTimerWithDelay:]
-[VCSecurityKeyManager associateMKI:withClientID:]
-[VCSecurityKeyManager associateMKI:withClientID:]_block_invoke
cap2G
cap3G
capLTE
cap5G
capWifi
-[VCMediaNegotiator initWithLocalSettings:]
-[VCMediaNegotiator isCellular16x9EncodeCapable]
-[VCMediaNegotiator negotiationData]
Created invite media blob
mediablob_invite
-[VCMediaNegotiator processRemoteNegotiationData:]
mediablob_remote_invite_err
Received invite media blob
+[VCMediaNegotiator negotiationBlobFromData:]
mediablob_local_err
+[VCMediaNegotiator localConfigurationWithData:deviceRole:preferredAudioPayload:]
+[VCMediaNegotiator initializeLocalConfiguration:negotiationData:deviceRole:preferredAudioPayload:]
Cached invite media blob
-[VCMediaNegotiator newResponseBlob]
Created response media blob
mediablob_response
mediablob_response_remote
-[VCMediaNegotiator processResponseBlob:]
mediablob_remote_response_err
Received response media blob
+[VCMediaNegotiator negotiatedFeaturesStringWithLocalFeaturesString:remoteFeaturesString:]
+[VCMediaNegotiator validateMultiwayVideoStreamConfigurations:]
+[VCMediaNegotiator validateMultiwayAudioStreamConfigurations:]
+[VCMediaNegotiator dumpBlob:prefix:force:]
-[VCMediaNegotiator addBandwidthSettingsForMediaBlob:operatingMode:connectionType:maxBitrate:]
+[VCMediaNegotiator newDecompressedBlob:]
+[VCMediaNegotiator newCompressedBlob:]
-[VCMediaNegotiator negotiateAudioDTXPayload:]
-[VCMediaNegotiator negotiateAudioREDPayload:]
-[VCMediaNegotiator negotiateAudioSettings:]
-[VCMediaNegotiator setupAudioWithNegotiatedSettings:]
-[VCMediaNegotiator selectVideoFeatureString:selectedPayload:]
-[VCMediaNegotiator selectBestVideoRuleForTransport:payload:encodingType:localVideoRuleCollection:remoteVideoSettings:negotiatedVideoSettings:isScreen:]
-[VCMediaNegotiator processParameterSets:videoResults:]
-[VCMediaNegotiator negotiateVideoSettings:]
-[VCMediaNegotiator setupVideoWithNegotiatedSettings:]
-[VCMediaNegotiator negotiateScreenSettings:]
-[VCMediaNegotiator setupScreenWithNegotiatedSettings:]
-[VCMediaNegotiator negotiateFaceTimeSettings:]
-[VCMediaNegotiator setupMomentsForMediaBlob:]
-[VCMediaNegotiator negotiateMomentsWithMomentsSettings:]
-[VCMediaNegotiator negotiateMultiwayAudioStreams:]
-[VCMediaNegotiator negotiateMultiwayVideoStreams:]
-[VCMediaNegotiator newStreamGroupCodecConfigForPayload:]
-[VCMediaNegotiator newStreamConfigFromMultiwayAudioStream:]
-[VCMediaNegotiator newStreamConfigFromMultiwayVideoStream:]
zh-CN
en_US
zh_CN
-[VCMediaNegotiator negotiateCaptionsWithCaptionsSettings:]
+[VCMediaNegotiator streamGroupIDsWithMediaBlob:]
-[VCVideoCaptureConverter initWithConvertedFrameHandler:context:]
-[VCVideoCaptureConverter setSourceFramerate:]
-[VCVideoCaptureConverter setDestinationFramerate:]
-[VCVideoCaptureConverter updateThrottleRate]
-[VCVideoCaptureConverter avConferencePreviewError:]
+[VCStringUtils convertString:toFourcc:]
com.apple.VCConnectionHealthMonitor.delegateQueue
primaryConnHealthAllowedDelay
-[VCConnectionHealthMonitor init]
-[VCConnectionHealthMonitor processPeerStatsBlob:]
-[VCConnectionHealthMonitor updateStatsHistory]
VCConnectionHealthMonitor_ReceivePacket
VCConnectionHealthMonitor_ReceiveServerStats
-[VCSessionMediaStreamConfigurationProvider initWithStreamIDGenerator:sessionMode:supportedAudioRules:]
-[VCSessionMediaStreamConfigurationProvider initializeVideoStreams]
-[VCSessionMediaStreamConfigurationProvider initializeVideoStreamWithConfig:streamIndex:]
-[VCSessionMediaStreamConfigurationProvider initializeVideoStreamWithDefaults]
-[VCSessionMediaStreamConfigurationProvider initializeAudioStreamsWithSupportedRules:]
lowQualityAudioOnDemand
lowQualityVideoOnDemand
-[VCSessionMediaStreamConfigurationProvider initializeAudioStreamWithConfig:maxIDSStreamIDCount:supportedAudioRules:isLowestQualityAudio:]
-[VCSessionMediaStreamConfigurationProvider audioRuleCollectionWithAudioConfig:supportedAudioRules:]
%dx%d (VRA: %dx%d)
%.01f (%.01favg) FPS
_VCPixelBufferOverlay_renderText
SF Mono
-[VCVideoRuleCollectionsRemoteCameraMac initWithHardwareSettings:]
-[VCVideoRuleCollectionsRemoteCameraMac initSupportedPayloads]
VCFFTMeter_Create
FFTMeterLERPFilterAllocator
Microphone
Camera
Screen
SystemAudio
Siri
Captions
com.apple.VideoConference.VCVirtualTextDevice
-[VCVirtualTextDevice initWithSendDelegate:clientPid:delegate:delegateQueue:]
-[VCVirtualTextDevice start]
Invalid state
-[VCVirtualTextDevice stop]
-[VCVirtualTextDevice pause]
-[VCVirtualTextDevice resume]
-[VCVirtualTextDevice sendCharacter:]
-[VCVirtualTextDevice sendText:]
-[VCMediaStreamTransport updateLastGeneratedKeyMaterial]
-[VCMediaStreamTransport configureWithStreamConfig:setupInfo:reducedSizeRTCPPackets:hopByHopEncryptRTCPPackets:statisticsCollector:basebandCongestionDetector:error:]
/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCMediaStreamTransport.m
Call with empty remoteIP address
rtcpXrEnabled
Failed to setup SRTP encryption
setupSRTP failed with error %d
Invalid SecurityKeyHolder
VCCryptor_Create failed
Create SFrame cryptor failed
-[VCMediaStreamTransport setupSframeCryptorsWithError:]
-[VCMediaStreamTransport getCryptoSet:withMediaKey:]
-[VCMediaStreamTransport setupSRTP]
RTPSetSockets failed
-[VCMediaStreamTransport setupRTPWithTransportStreams]
RTPSetNWConnections failed
RTP set multiplex mode failed
RTP set IDS descriptor
RTPCreateSocketsRetryBind failed
Setup type not set
Invalid setup type
-[VCMediaStreamTransport lastReceivedRTCPPacketTime]
-[VCMediaStreamTransport handleEncryptionInfoChange:]
-[VCMediaStreamTransport generateReceptionReport:reportCount:]
-[VCMediaStreamTransport generateRTCPXRSummaryReport:reportCount:]
-[VCMediaStreamTransport generateRTCPXRVoIPMetricsReport:reportCount:]
-[VCMediaStreamTransport getRTCPReportNTPTimeMiddle32ForReportId:]
-[VCMediaStreamTransport getExtendedSequenceNumberForSequenceNumber:]
RTPRemoteSSRC
RTPPayloadList
_VCPacketFilterRTPFinalize
_VCPacketFilterRTPCopyProperty
_VCPacketFilterRTPSetProperty
timeoutQueueLabel-%d
AVConferenceXPCServer
-[VCXPCConnection createTimeoutTimer]
-[VCXPCConnection destroyTimeoutTimer]
+[VCXPCConnection selfTerminateDueToTimeout:]
AVConference %d %s
-[VCXPCConnection setPid:]
<VCXPCConnection connection: %p client pid: %d, context: %@>
-[VCXPCConnection setConnection:]
AVConferenceXPCServerIncomingQueue
AVConferenceXPCServerOutgoingQueue
AVConferenceXPCServerClientConnectionsQueue
pingServer
-[AVConferenceXPCServer init]_block_invoke
Ping
-[AVConferenceXPCServer sendMessageAsync:arguments:]
-[AVConferenceXPCServer sendMessageAsync:arguments:xpcArguments:context:]
-[AVConferenceXPCServer sendMessageAsync:arguments:context:]
-[AVConferenceXPCServer sendMessageAsync:arguments:toAllClientsWithContext:]
-[AVConferenceXPCServer sendMessageAsync:arguments:toAllClientsWithContext:]_block_invoke
-[AVConferenceXPCServer registerBlockForService:block:queue:eventLogLevel:]
-[AVConferenceXPCServer deregisterFromService:]
v32@?0@"NSObject"8@"NSObject"16^B24
-[AVConferenceXPCServer _xpc_start_listening_for_connections]
-[AVConferenceXPCServer(XPCManagement) _xpc_handle_incoming_request:]
com.apple.videoconference.allow-conferencing
CACHEAUTHTOKEN
-[AVConferenceXPCServer(XPCManagement) _xpc_handle_incoming_request:]_block_invoke
-[AVConferenceXPCServer(XPCManagement) _xpc_handle_incoming_request:]_block_invoke_3
-[AVConferenceXPCServer(XPCManagement) _xpc_handle_incoming_request:]_block_invoke_2
-[AVConferenceXPCServer(XPCManagement) _xpc_add_connection_to_list:]_block_invoke
-[AVConferenceXPCServer(XPCManagement) _xpc_remove_connection_from_list:]_block_invoke
-[AVConferenceXPCServer(XPCManagement) _xpc_remove_connections_from_list]
_VCXPCConnection_timeoutHandlerFunc
-[VCVideoRuleCollectionsCamera setupH264CellularRules]
-[VCVideoRuleCollectionsCamera bestVideoRuleForEncodingType:aspectRatio:payload:]
-[VCVideoRuleCollectionsCamera getBestFrameWidth:frameHeight:frameRate:]
%s[%p] %s
-[VCVideoStreamConfig initWithClientDictionary:]
vcMediaStreamFramerate
vcMediaStreamTilesPerFrame
vcMediaStreamEnableCVO
vcMediaStreamCVOExtensionID
vcMediaStreamPixelFormat
vcMediaStreamHDRMode
+[VCVideoStreamConfig validateClientDictionary:]
+[VCVideoStreamConfig profileLevelIdForString:]
+[VCVideoStreamConfig profileLevelStringForId:]
tilesPerVideoFrame
vcMediaStreamRxPayloadType
vcMediaStreamTxPayloadType
vcMediaStreamTXMinBitrate
vcMediaStreamTXMaxBitrate
vcMediaStreamRXMinBitrate
vcMediaStreamRXMaxBitrate
vcMediaStreamKeyFrameInterval
vcMediaStreamRemoteVideoInitialOrientation
vcMediaStreamIsVideoProtected
vcMediaStreamVideoResolution
vcMediaStreamVideoStreamMode
vcMediaStreamDisplayID
vcMediaStreamIsltrpEnabled
vcMediaStreamCustomWidth
vcMediaStreamCustomHeight
vcRemoteDeviceName
vcMediaStreamRxCodecFeatureListString
vcMediaStreamTxCodecFeatureListString
vcMediaStreamProfileLevel
vcMediaStreamTransportProtocolType
vcMediaStreamAccessNetworkType
codecType=%ld, rtpPayload=%d, cipherSuite=%d
, pTime=%ld
, useInBandFEC
GNACK
, rtcp=[%@]
, encoderUsage=%u
VCSpatialAudioMetadata_Create
VCSpatialAudioMetadataAllocator
VCSpatialAudioMetadata_CreateEntry
VCSpatialAudioMetadata_ChannelIndex
VCSpatialAudioMetadata_SpatialAudioSourceID
VCSpatialAudioMetadata_UpdateGlobalInfo
VCSpatialAudioMetadata_UpdateOrientation
VCSpatialAudioMetadata_UpdatePositionalInfo
VCSpatialAudioMetadata_Serialize
VCSpatialAudioMetadata_SetNeedsRefresh
/System/Library/Frameworks/AudioToolbox.framework/libAudioDSP.dylib
gSpatialMetadataSPI
_VCSpatialAudioMetadata_SetEntryPropertyUInt32
_VCSpatialAudioMetadata_SetPropertyUInt32
_VCSpatialAudioMetadata_SetPropertyFloat32
_VCSpatialAudioMetadata_SetEntryPropertyFloat32
VCSpatialAudioMetadata
_VCSpatialAudioMetadata_Finalize
VCSpatialAudioMetadataEntry
_VCSpatialAudioMetadataEntry_Finalize
-[VCXPCClientShared init]
com.apple.AVConference.AVCSessionXPCClient.stateQueue
-[VCXPCClientShared registerBlockWithUUID:service:block:]_block_invoke
-[VCXPCClientShared registerBlockWithUUID:service:block:]_block_invoke_2
VCTimescalePSOLA_CheckforSignalCorrelation
Expand
Compress
_VCTimescalePSOLA_DownSampledCoarseCorrelation
_VCTimescalePSOLA_VadCheckForScaling
-[VCEffects setEffectsMode:]
-[AVCTestMonitor initWithDelegate:queue:]
-[AVCTestMonitor dealloc]
SessionStatsReportToken
-[AVCTestMonitor registerBlocksForNotifications]_block_invoke
InitialMemoryUsageInfo
MemoryUsageInfo
NetworkAgentRefCount
vcTestMonitorDidReportSessionStats
com.apple.AVConference.AVCTestMonitor.notificationQueue
vcTestMonitorRequestSessionStatsReport
-[AVCTestMonitor updateAudioInjectConfig:]
vcTestMonitorInjectAudioToneSwitch
vcTestMonitorInjectAudio
-[AVCTestMonitor forceNetworkCellular:]
vcTestMonitorForceNetworkCellSwitch
vcTestMonitorForceNetworkCell
-[AVCTestMonitor setEnableLoopbackInterface:]
vcTestMonitorSetEnableLoopbackValue
vcTestMonitorSetEnableLoopback
-[AVCTestMonitor setEmulatedRxPLR:]
vcTestMonitorSetEmulatedRxPLR
vcTestMonitorSetForcedTargetBitrate
vcTestMonitorSetForcedCapBitrate
vcTestMonitorEmulatedNetworkConfigPath
-[AVCTestMonitor setEnableAudioPowerSpectrumReport:]
vcTestMonitorSetEnableAudioPowerSpectrumReport
VCRemoteImageQueue_CreateSenderQueueWithPoolSize
VCRemoteImageQueue_CreateReceiverQueue
VCRemoteImageQueue_EnqueueFrame
VCRemoteImageQueue_EnqueueAttributes
VCRemoteImageQueue_ReleaseIOSurfaces
VCRemoteImageQueue_CreateQueueXPCObject
_VCRemoteImageQueue_Enqueue_block_invoke
C24@?0i8i12^{FigRemoteQueueMessage=^v^{__IOSurface}i}16
_VCRemoteImageQueue_Enqueue
_VCAudioDumpFileWrapper_Create
_VCAudioDumpFileWrapper_UpdateSamples
_VCAudioDumpFileWrapper_Update
VCAudioDump_Create
.caf
.rtpdump
VCAudioDump_Finalize
AVC-enc_in
AVC-enc_out
AVC-jbm_in
AVC-dec_in
AVC-dec_out
none
amr_nb_oa
amr_nb_be
amr_wb_oa
amr_wb_be
evs_nb_ch
evs_nb_hf
evs_wb_ch
evs_wb_hf
evs_swb_ch
evs_swb_hf
-[VCAudioTierPicker reconfigureTierPicker:]
{ VCAudioTierPickerConfig: mode=%d headerSize=%lu usingCellular=%d isUseCaseWatchContinuity=%d defaultMaxCap=%lu alwaysOnAudioRedundancyEnabled=%d cellularAllowRedLowBitratesEnabled=%d wifiAllowRedLowBitratesEnabled=%d supportedAudioPayloadConfigs=(%@) supportedPacketsPerBundle=(%@) supportedRedNumPayloads=(%@) }
-[VCAudioTierPicker logTierPickerConfig:]
-[VCAudioTierPicker setupTierPickerForConfig:]
-[VCAudioTierPicker setupAlwaysOnRedTiersForSupportedRed:usingCellular:]
+[VCAudioTierPicker selectHighestQualityAudioTiers:forBitrateLimits:isHardLimit:]
 new
-[VCAudioTierPicker printCreatedAudioTiers:]
Video
-[VCAudioTierPicker tierForNetworkBitrate:withLegacyDuplication:]
-[VCAudioTierPicker tierForAudioBitrate:withRedNumPayloads:]
rateControlAllowRedLowBitrate
VCAudioPlayerDTMF_Initialize
VCAudioPlayerDTMF_ShouldProcessDTMF
VCAudioPlayerDTMF_ProcessDTMF
VCAudioPlayerDTMFStateStopped
VCAudioPlayerDTMFStateStarting
VCAudioPlayerDTMFStatePlayingTone
VCAudioPlayerDTMFStatePlayingGap
_VCAudioPlayerDTMF_ShouldPurgeJitterQueue
_VCAudioPlayerDTMF_ProcessDTMFStatePlayingTone
_VCAudioPlayerDTMF_GetNextDTMFFrame
_VCAudioPlayerDTMF_ProcessNextDTMFFrameForCurrentEvent
_VCAudioPlayerDTMF_ParseDTMFEventPacket
_VCAudioPlayerDTMF_GenerateSamples
_VCAudioPlayerDTMF_ProcessDTMFStatePlayingGap
-[VCVideoRuleCollectionsCameraEmbedded initWithHardwareSettings:]
%@: screenSize[%dx%d] deviceClass[%ld] VCHardwareVideoEncoderType[%ld] useSoftFramerateSwitching[%d]
-[VCVideoRuleCollectionsCameraEmbedded hardwareConfigurationForPayload:transportType:]
-[VCVideoRuleCollectionsCameraEmbedded setupVideoRulesForPayload:transportType:encodingType:formatList:formatListCount:preferredFormat:supportsHighDef:]
-[VCVideoRuleCollectionsCameraEmbedded setupH264Rules]
-[VCVideoRuleCollectionsCameraEmbedded bitrateConfiguration]
-[VCVideoRuleCollectionsCameraEmbedded setupRules]
SymptomReporterOptionalKeyTerminationSource
Terminating %s (PID=%d) terminateSource=%@ reason=%@
VCTerminateProcess
-[VCControlChannelDialogV2 initWithSessionID:participantID:participantUUID:participantConfig:transactionDelegate:]
-[VCControlChannelDialogV2 allocEncryptedPayloadFromPayloadData:]
-[VCControlChannelDialogV2 copyDecryptedDataFromEncryptedPayload:]
-[VCControlChannelDialogV2 newDataFromMessage:topic:transactionID:isReliable:transactionDelegate:]
-[VCControlChannelDialogV2 processMessageData:participantID:topic:transactionID:messageStatus:isInternalMessage:]
-[VCControlChannelDialogV2 sendConfirmationToParticipantID:transactionID:sessionID:transactionDelegate:]
-[VCImageAttributeRules addRuleForVideoPayload:withDirection:width:height:frameRate:priority:interface:]
-[VCImageAttributeRules extractDimensionsForInterface:direction:]
-[VCVideoStreamRateController initWithDumpID:]
com.apple.VideoConference.VCVideoStreamRateController
-[VCVideoStreamRateController doRateControlWithTime:roundTripTime:packetLossRate:operatingBitrate:averageReceivedBitrate:]_block_invoke
-[VCVideoStreamRateController minTierIndex:]
-[VCVideoStreamRateController maxTierIndex:]
-[VCVideoStreamRateController setOperatingTierIndexWithBitrate:]
VCVideoRC
com.apple.VideoConference.AFRClog.VideoStream
STime
dTime/ETxTS
OWRD
NOWRD
NOWRDS
NOWRDA
PLR/FEC
BR/TR
MQIn: A/V
MQOut: A/V
ABRL
TxAT
MODE
TxSTATE
-[VCMediaNegotiationBlobV2SettingsU1(Utils) initWithU1Config:]
-[VCControlChannelMultiWay initWithTransportSessionID:reportingAgent:mode:]
com.apple.VideoConference.VCControlChannel.keyMaterialQueue
-[VCControlChannelMultiWay dealloc]
-[VCControlChannelMultiWay start]_block_invoke
-[VCControlChannelMultiWay stop]_block_invoke
+[VCControlChannelMultiWay allocPayoadDataFromVTPPacket:vpktFlags:channelDataFormat:]
-[VCControlChannelMultiWay remoteParticipantIDFromChannelDataFormat:]
-[VCControlChannelMultiWay messageReceived:participantInfo:]
-[VCControlChannelMultiWay copyDialogForParticipantID:]
-[VCControlChannelMultiWay sendReliableMessageAndWait:withTopic:participantID:timeout:withOptions:]
-[VCControlChannelMultiWay sendReliableMessage:withTopic:participantID:timeout:withOptions:completion:]
-[VCControlChannelMultiWay sendReliableMessage:withTopic:participantID:]
-[VCControlChannelMultiWay sendUnreliableMessage:withTopic:participantID:]
-[VCControlChannelMultiWay sendUnreliableMessage:withTopic:participantID:]_block_invoke
-[VCControlChannelMultiWay addActiveParticipant:participantUUID:withConfiguration:]
-[VCControlChannelMultiWay removeActiveParticipant:]
-[VCControlChannelMultiWay removeAllActiveParticipants]
-[VCControlChannelMultiWay updateTransactionIDWithKeyMaterial:]
-[VCControlChannelMultiWay lastUsedMKIBytes]
CCMinBytesSent
CCMaxBytesSent
CCRawBytesSent
CCMinBytesReceived
CCMaxBytesReceived
CCRawBytesReceived
receiveProc
com.apple.vccontrolchannel.receiveproc
-[VCMediaNegotiationBlobV2CameraSettingsU1(Utils) initWithSSRC:videoRuleCollections:screenSize:aspectRatioPortrait:aspectRatioLandscape:orientationMismatchAspectRatioLandscape:]
-[VCMediaNegotiationBlobV2CameraSettingsU1(Utils) addVideoRules:encodingType:payload:videoRuleCollections:]
-[VCMediaNegotiationBlobV2CameraSettingsU1(Utils) videoRuleCollections]
Camera settings (U+1): src=%08x AR=%fx%f,%fx%f XR=%fx%f,%fx%f
-[VCMediaNegotiationBlobV2CameraSettingsU1(Utils) printWithLogFile:prefix:screenSize:]
-[VCMediaNegotiationBlobV2CameraSettingsU1(Utils) setupVideoRuleCollection:]
TrafficClass
IsReceiveExternallyScheduled
PreferredSendQueue
IsIPv6
ReceiveHopLimitEnabled
TransportStreamDeactivated
VCTransportStream
VCTransportStreamCommonCopyProperty
VCTransportStreamCommonSetSendFailedHandler
VCTransportStreamCommonSetReceivedHandler
[VCTransportStream %p]
VCBlockBuffer_Copy
+[SnapshotTimer takeSnapshotForTask:]
-[SnapshotTimer checkinWithTimeout:forTask:]_block_invoke
tileX
tileY
tileZ
tileW
tileH
inCanvas
prom
visible
inCanvas=%u size=[%f;%f] center=[%.0f;%.0f;%.02f] prominanceIndex=%d
-[VCPositionalInfo serialize]
-[VCPositionalInfo unserialize:]
-[VCPositionalInfo setAvcPositionalInfo:]
-[VCTextJitterBuffer initWithConfiguration:]
-[VCTextJitterBuffer dealloc]
-[VCTextJitterBuffer start]
-[VCTextJitterBuffer stop]
-[VCTextJitterBuffer startHeartbeat]
-[VCTextJitterBuffer heartbeat]
-[VCVideoStreamReceiveGroup initWithConfig:]
-[VCVideoStreamReceiveGroup dealloc]
Failed to create video redundancy controller
-[VCVideoStreamReceiveGroup setupRedundancyController]
-[VCVideoStreamReceiveGroup isVideoExpected]
-[VCVideoStreamReceiveGroup updateShouldEnableFaceZoom]
-[VCVideoStreamReceiveGroup setSyncSource:]_block_invoke
-[VCVideoStreamReceiveGroup setActiveStreamIDs:]_block_invoke
-[VCVideoStreamReceiveGroup setVideoDegraded:]
VCSPVideoDegraded
-[VCVideoStreamReceiveGroup lastDisplayedFrameRTPTimestamp]_block_invoke
-[VCVideoStreamReceiveGroup setShouldEnableMLEnhance:]_block_invoke
-[VCVideoStreamReceiveGroup redundancyController:redundancyPercentageDidChange:]_block_invoke
Requesting
Dismissing
-[VCVideoStreamReceiveGroup vcMediaStream:didSwitchFromStreamID:toStreamID:]_block_invoke
-[VCVideoStreamReceiveGroup updateVideoExpected]
-[VCVideoStreamReceiveGroup setIsRemoteMediaStalled:]
-[VCVideoStreamReceiveGroup vcMediaStream:requestKeyFrameGenerationWithStreamID:firType:]
-[VCVideoStreamReceiveGroup checkForExtendedPoorConnection]
-[VCVideoStreamReceiveGroup collectAndLogChannelMetrics:]
-[VCPacketBundler initWithOperatingMode:bundlingScheme:packetHandler:packetHandlerContext:]
-[VCPacketBundler bundleAudioRFC3640:numInputBytes:payloadType:timestamp:]
VCPacketBundler_BundleAudio
-[VCPacketBundler _copyInputBytes:numInputBytes:payloadType:timestamp:]
-[VCPacketBundler bundleAudioLegacy:numInputBytes:payloadType:timestamp:]
VCAudioPacketBundler_UpdatePriority
VCPacketBundler_FlushPackets
VCPacketBundler_StoreAndEnqueueCdrxInfo
_VCPacketBundler_PrepareCdrxInfo
_VCPacketBundler_CleanupCDRXInfo
_VCPacketBundler_BundleAudioCDRX
_VCPacketBundler_UpdatePacketsPerBundle
videoDegradedThreshold
videoImprovedThreshold
videoMinFrameRate
shouldUseExitHysteresis
-[VCVideoQualityInfo init]
-[VCVideoQualityInfo updateWithCurrentFramerate:bitrate:time:]
-[VCVideoQualityInfo setVideoIsExpected:]
-[VCMediaNegotiatorAudioConfiguration addAudioPayload:isSecondary:]
AVCAudioStream
-[AVCAudioStream initWithLocalAddress:error:]
-[AVCAudioStream initWithLocalAddress:callID:error:]
-[AVCAudioStream initWithLocalAddress:isOriginator:error:]
-[AVCAudioStream initWithLocalAddress:isOriginator:callID:error:]
-[AVCAudioStream initWithNetworkSockets:isOriginator:error:]
-[AVCAudioStream initWithNetworkSockets:isOriginator:callID:error:]
-[AVCAudioStream initWithIDSDestination:isOriginator:error:]
-[AVCAudioStream initWithIDSDestination:isOriginator:callID:error:]
-[AVCAudioStream initWithRTPNWConnectionClientID:rtcpNWConnectionClientID:options:error:]
rtpClientID cannot not be nil
-[AVCAudioStream initWithLocalAddress:networkSockets:IDSDestination:rtpConnectionClientID:rtcpConnectionClientID:callID:options:error:]
com.apple.avconference.avcaudiostream.callback.queue
-[AVCAudioStream shouldRunInProcessWithOptions:]
-[AVCAudioStream validateInitializeConnectionResult:]
Missing result dictionary
Server died
IPC Timeout
Missing capabilities dictionary
Missing stream token
-[AVCAudioStream dealloc]
configuration=%s, error=%s
-[AVCAudioStream configure:error:]
/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/AVCAudioStream.m
-[AVCAudioStream start]
AVCAudioStream hasn't been configured
-[AVCAudioStream stop]
-[AVCAudioStream pause]
-[AVCAudioStream resume]
-[AVCAudioStream sendDTMFDigitString:withVolume:duration:interval:]
event
volume
duration
interval
-[AVCAudioStream startContinuousDTMFWithDigit:volume:]
-[AVCAudioStream startSynchronizeWithStream:]
-[AVCAudioStream setDirection:]
-[AVCAudioStream setRtcpEnabled:]
-[AVCAudioStream setRtpTimeOutEnabled:]
-[AVCAudioStream setRtcpTimeOutEnabled:]
-[AVCAudioStream setRtpTimeOutIntervalSec:]
-[AVCAudioStream setRtcpTimeOutIntervalSec:]
-[AVCAudioStream setRtcpSendIntervalSec:]
-[AVCAudioStream setVolume:]
-[AVCAudioStream setInputFrequencyMeteringEnabled:]
-[AVCAudioStream setOutputFrequencyMeteringEnabled:]
-[AVCAudioStream didInterruptionBeginHandler]
-[AVCAudioStream didInterruptionEndHandler]
-[AVCAudioStream registerBlocksForDelegateNotifications]_block_invoke
Failed to create VCAudioStream
-[AVCAudioStream setupAudioStreamInProcessWithClientArgs:networkSockets:error:]
Failed to create VCAudioStreamConfig from config dictionary.
-[AVCAudioStream configureInProcess:error:]
-[AVCAudioStream vcMediaStream:didStartStream:error:]
-[AVCAudioStream vcMediaStreamDidStop:]
-[AVCAudioStream vcMediaStream:didPauseStream:error:]
-[AVCAudioStream vcMediaStreamDidRTPTimeOut:]
-[AVCAudioStream vcMediaStreamDidRTCPTimeOut:]
-[AVCAudioStream vcMediaStream:didReceiveDTMFEventWithDigit:]
stream=%s, rtcpPackets=%s
-[AVCAudioStream vcMediaStream:didReceiveRTCPPackets:]
-[AVCAudioStream vcMediaStream:updateInputFrequencyLevel:]
-[AVCAudioStream vcMediaStream:updateOutputFrequencyLevel:]
-[AVCAudioStream vcMediaStreamServerDidDie:]
-[VCNWConnectionCongestionDetectorBaseband processNWConnectionNotification:]
NWConnection notification has a bad version=%d
-[VCEmulatedNetworkSingleQueue initWithPolicies:]
-[VCEmulatedNetworkSingleQueue push:]
com.apple.AVConference.vcSessionDownlinkBandwidthAllocatorClientQueue
VCSessionDownlinkBandwidthAllocator
-[VCSessionDownlinkBandwidthAllocator sortMediaEntries]
-[VCSessionDownlinkBandwidthAllocator distributeBitrate:]
-[VCSessionDownlinkBandwidthAllocator distributeBitrate:]_block_invoke
-[VCSessionDownlinkBandwidthAllocator updateSelectedMediaEntriesForClientWithUUID:]
VCSPActualBitrate
VCSPOptedInBitrate
VCSPActiveStreamID
VCSPOptedInStreamID
-[VCMockIDSDataChannelLinkContext init]
-[VCMockIDSDatagramChannel setupMockIDSDatagramChannelRequiresOptions:]
MOCKDatagramChannelPacketAllocator
enableMockDatagramChannelDoNotDropNack
mockDatagramChannelAddSourceParticipantIDOnFanOutPackets
mockDatagramChannelAddWrongParticipantIDOnFanOutPackets
-[VCMockIDSDatagramChannel initCreateSocketRequiresOptions:dataPath:]
com.apple.AVConference.VCMockIDSDatagramChannelQueue
com.apple.AVConference.VCMockIDSDatagramChannelRTXQueue
-[VCMockIDSDatagramChannel flushDatagramPacketsList]
-[VCMockIDSDatagramChannel signalUnderlyingFileDescriptor]
Trying to enqueue to invalidated VCMockIDSDatagramChannel
-[VCMockIDSDatagramChannel enqueueDatagramPacket:datagramSize:options:error:]
Failed to allocate packet
-[VCMockIDSDatagramChannel shouldReadPacket:]
-[VCMockIDSDatagramChannel isNACKPacket:length:]
-[VCMockIDSDatagramChannel readDatagramWithCompletionHandler:]
-[VCMockIDSDatagramChannel readDatagramsWithCompletionHandler:]
Trying to process datagrams using invalidated VCMockIDSDatagramChannel
-[VCMockIDSDatagramChannel processDatagramForDirectIDSDataPath:datagramSize:datagramOptions:error:]_block_invoke_2
-[VCMockIDSDatagramChannel processDatagramForDirectIDSDataPath:datagramSize:datagramOptions:error:]_block_invoke
v28@?0^v8I16^{?=IQSCc[12S]CS{?=SSSSS}dQBQ[16C]BB}20
-[VCMockIDSDatagramChannel invalidate]
-[VCMockIDSDatagramChannel start]
-[VCMockIDSDatagramChannel setChannelPreferences:]
Could not serialize provided metadata.
-[VCMockIDSDatagramChannel requestSessionInfoWithOptions:]
-[VCMockIDSDatagramChannel reportFirstPacketTimeForMKI:]
-[VCMockIDSDatagramChannel createSocket]
-[VCMockIDSDatagramChannel underlyingFileDescriptor]
-[VCMockIDSDatagramChannel drainUnderlyingFileDescriptor]
-[VCMockIDSDatagramChannel printDroppedPacketInfo:]
-[VCMockIDSDatagramChannel addMediaPacketToBuffer:length:datagramOptions:]
-[VCMockIDSDatagramChannel retrieveAndProcesOnePacket:seq:count:index:]
-[VCMockIDSDatagramChannel retrieveAndProcesOnePacket:seq:count:index:]_block_invoke_2
-[VCMockIDSDatagramChannel setUPlusOneMode:isInitiator:]
mockDatagramChannelIPPorts
vcDefaultMockDatagramChannelIPPortsKeyLocalIP
vcDefaultMockDatagramChannelIPPortsKeyLocalPort
vcDefaultMockDatagramChannelIPPortsKeyRemoteIP
vcDefaultMockDatagramChannelIPPortsKeyRemotePort
-[VCMockIDSDatagramChannelSocket initRequiresOptions:localIP:localPort:remoteIP:remotePort:]
-[VCMockIDSDatagramChannelSocket writeDatagram:datagramSize:]
-[VCMockIDSDatagramChannelSocket readyToRead]
VCMQSchBytes
VCMQSchHeaderBytes
VCMQSchPkts
VCMQSentBytes
VCMQSentHeaderBytes
VCMQSentPkts
VCMQUnsentPkts
VCMQSavedBytes
VCMQSavedPkts
VCMediaQueue
_VCMediaQueue_ReportingRegisterPeriodicTask_block_invoke
VCMQFlushPerStream
VCMQQSizePerStream
VCMQMaxQSizePerStream
VCMQPeakBR
VCMQMTU
VCMQStreamID
_VCMediaQueue_FreeMediaPacket
_VCMediaQueue_RegisterStream
_VCMediaQueue_SchedulePackets
_VCMediaQueue_SchedulePacketsWithLimitedBudget
_VCMediaQueue_ScheduleDirectSendQueuesAndReduceRemainingBudget
_VCMediaQueue_ScheduleThrottlingQueuesAndReduceRemainingBudget
_VCMediaQueue_SendAndFreePackets
_VCMediaQueue_PreAllocVCMediaPacketsInFreePool
_VCMediaQueue_CreateInternalQueue
_VCMediaQueue_DestroyInternalQueuePool
_VCMediaQueue_DestroyInternalQueues
%s: done destroying numberOfInternalQueues=%d
_VCMediaQueue_ResetStatistics
Stream registration with index=%d, mediaQueueStreamId=%u
%4.3f
%u/%u/%u/%u
%08X
%08X
%.3f
%u/%u
%u/%u
%u/%u
[InternalQueue]
%u/%u
.mqdump
com.apple.VideoConference.VCMediaQueuelog
STime
SchedulePolicy
ExpInterval
BudgetTuple
IDRBitmap
SendBitmap
PktLeft
WQSize
BundlePolicy
PktCount
NetworkOverhead
TotalSize
[InternalQueue]
Index
Type
StreamId
QSizeTuple
OldTS
PktSch
LastSchTS
ProbingSeq
VCMediaQueue_Create
disableMQPacketBundling
com.apple.AVConference.VCMediaQueueSendProc
VCMediaQueue_Start
VCMediaQueue_Stop
VCMediaQueue_AllocMediaPacket
VCMediaQueue_AddPacket
VCMediaQueue_FlushPacketsInStream
VCMediaQueue_SetPeakBitrate
VCMediaQueue_SetMTUBytes
VCMediaQueue_RetrieveAudioVideoRates
VCMediaQueue_SetOneToOne
VCMediaQueue_SetMediaQueueSizeThresholdExceededBlock
VCMediaQueue_ComputeOneToOneStatsWithPacketInfo
_VCMediaQueueFinalize
_VCMediaQueue_ResetLastIDRTimestamp
_VCMediaQueue_SerializeMediaControlInfoInOneToOneMediaPacket
_VCMediaQueue_UpdateStabilizationCounters
VCMediaQueueSendProc_block_invoke
i28@?0^{tagVCMediaPacket=iS^{OpaqueCMBlockBuffer}{tagVCIDSChannelDataFormat=[12S]CBSCBBQBBBS{?=SSSSS}BBBQBSBBB}i^vddBBBBIIIIISIIIiddBBBBBB^{tagVCMediaPacket}}8S16S20s24
_VCMediaQueue_FlushInternalQueueBeforeTimestamp
_VCMediaQueue_CheckQueueThresholdExceededForInternalQueue
_VCMediaQueue_RateStats_Init
_VCMediaQueue_RateStats_TrackMediaPacket
WiFiManager
CallInProgress
AVConferencePreview
-[AVConferencePreview setDelegate:]
responds
does NOT respond
-[AVConferencePreview didStartPreview]_block_invoke
didStartPreview
-[AVConferencePreview didPausePreview]_block_invoke
-[AVConferencePreview didStopPreview]_block_invoke
didStopPreview
-[AVConferencePreview didReceiveFirstPreviewFrameFromCameraUniqueID:]_block_invoke
-[AVConferencePreview didChangeLocalCameraUID:]_block_invoke
-[AVConferencePreview didChangeLocalVideoAttributes:]_block_invoke
-[AVConferencePreview didChangeLocalScreenAttributes:]_block_invoke
-[AVConferencePreview didReceiveErrorFromCameraUniqueID:error:]_block_invoke
-[AVConferencePreview didGetSnapshot:]_block_invoke
-[AVConferencePreview cameraDidBecomeAvailableForUniqueID:]_block_invoke
-[AVConferencePreview cameraDidBecomeInterruptedForForUniqueID:reason:]_block_invoke
-[AVConferencePreview cameraZoomAvailabilityDidChange:currentZoomFactor:maxZoomFactor:]_block_invoke
-[AVConferencePreview cameraCFramingAvailabilityDidChange:]_block_invoke
-[AVConferencePreview connectLayer:withSlot:]
-[AVConferencePreview registerBlocksForDelegateNotifications]_block_invoke
previewInitialize
localCameraUIDString
previewDidReceiveFirstFrame
previewCameraUIDChanged
previewDidStart
previewDidPause
previewDidStop
snapShotFrame
previewDidGetSnapShot
localVideoAttributes
previewDidLocalVideoAttributesChange
previewDidLocalScreenAttributesChange
previewDidReceiveCameraError
videoSlotNumber
videoSlotFacing
-[AVConferencePreview registerBlocksForDelegateNotifications]_block_invoke_5
previewDidLocalVideoSlotChange
previewCameraDidBecomeAvailable
previewInterruptionReason
previewCameraDidBecomeInterrupted
previewCameraZoomAvailabilty
previewCameraZoomMaxFactor
previewCameraZoomAvailablilty
previewCameraCinematicFraming
previewCameraCinematicFramingAvailablilty
previewState
updatePreviewState
-[AVConferencePreview dealloc]
-[AVConferencePreview startPreviewUnpausing:]
-[AVConferencePreview isPreviewRunning]
-[AVConferencePreview isCameraZoomAvailable]
-[AVConferencePreview currentZoomFactor]
-[AVConferencePreview maxZoomFactor]
-[AVConferencePreview setLocalCamera:]
-[AVConferencePreview setLocalCameraWithUID:]
-[AVConferencePreview setFollowSystemCameraEnabled:]
-[AVConferencePreview localCamera]
com.apple.avconference.DTMFEventHandler.queue
startTimestamp
endTimestamp
pauseCompleteTimestamp
-[DTMFEventHandler sendDTMFEvent:atTimestamp:withSampleRate:]_block_invoke
-[DTMFEventHandler sendingDTMFEventWithTimeStamp:interval:RTPHandle:]_block_invoke
channel
WiFiCopyCurrentNetworkInfoEx
/System/Library/PrivateFrameworks/CoreUtils.framework/CoreUtils
### Failed to Soft Link: /System/Library/PrivateFrameworks/CoreUtils.framework/CoreUtils
-[VCMediaNegotiationBlobV2GeneralInfo(Utils) initWithCreationTime:screenResolution:abSwitches:]
General Info: ntpTime=%f screenResolution=%d/%d ABSwitches=0x%08x
-[VCMediaNegotiationBlobV2GeneralInfo(Utils) printWithLogFile:prefix:]
-[VCMediaNegotiationBlobV2StreamGroupPayload(Utils) initWithPayloadConfig:rtpSampleRate:]
-[VCMediaNegotiationBlobV2StreamGroupPayload(Utils) initWithPayloadConfig:index:rtpSampleRate:streamGroupID:]
-[VCMediaNegotiationBlobV2StreamGroupPayload(Utils) newCompactPayloadWithPayloadConfig:rtpSampleRate:]
Payload config:
 CodecType=%@
 RTPPayload=%u
 pTime=%lu
 rtcpFlags=[%@]
 useInBandFEC=1
 profileLevelID=%lx
 cipherSuite=%@
 encoderUsage=%u
 <failed to decode>
+[VCMediaNegotiationBlobV2StreamGroupPayload(Utils) printWithLogFile:prefix:payloadConfig:]
PSFB_PLI
PSFB_FIR
OPUS16K
OPUS24K
AACELD48K
AACELD24K
EVSSWB
CipherNoneAuthNone
CipherSFRAME_AESCM128AuthSHA256_80
CipherSFRAME_AESCM128AuthSHA256_32
CipherSRTP_AESCM128AuthNoneRCCM3
%@[%p] idsParticipantID[%llu] participantUUID[%@] audioEnabled[%d] videoEnabled[%d] screenEnabled[%d] videoPaused[%d] videoQuality[%d] visibilityIndex[%d] prominenceIndex[%d] positionalInfo[%p] mediaStates[%p]
forceDisableDuplication
-[VCDuplicationHandler enableDuplication]
-[VCDuplicationHandler disableDuplication]
-[VCDuplicationHandler updateDuplicationStateForLocalWRMSuggestingCellularEvent:updateResult:]
-[VCDuplicationHandler updateDuplicationStateForLocalWRMSuggestingWiFiEvent:updateResult:]
-[VCDuplicationHandler updateDuplicationStateForRemoteWRMSuggestingWiFiEvent:updateResult:]
-[VCDuplicationHandler stopRemoteDuplicationAndUpdateResult:updateAlertState:]
-[VCDuplicationHandler updateDuplicationStateForTurnOffDuplicationForHandoverEvent:updateResult:]
-[VCDuplicationHandler updateDuplicationStateForTurnOnDuplicationForHandoverEvent:updateResult:]
-[VCDuplicationHandler updateDuplicationStateWithAlertInfo:]
-[VCDuplicationHandler updateDuplicationStateForMediaHealthUnrecoverable:updateResult:]
-[VCDuplicationHandler updateDuplicationStateForMediaHealthRecovered:updateResult:]
-[VCDuplicationHandler updateDuplicationStateForRemoteDuplicationChanged:updateResult:updateAlertState:]
-[VCDuplicationHandler shareLocalInterfacePreferenceWithPeerDuringActiveDuplicationForEvent:updateResult:]
-[VCSecureDataChannel initWithLocalCallID:remoteCallID:isCaller:sharedSecret:error:]_block_invoke
v24@?0@"NSData"8B16i20
-[VCSecureDataChannel initWithLocalCallID:remoteCallID:isCaller:sharedSecret:error:]
-[VCSecureDataChannel setupWithSharedSecret:isCaller:error:]
Could not setup secure data channel
-[VCSecureDataChannel sendData:messageType:encrypted:]
-[VCSecureDataChannel convertEncryptedData:toData:encrypted:]
-[VCSecureDataChannel convertData:toEncryptedData:encrypted:]
getOFTTypeForSecureDataMessageType
Signalled error at %s: Invalid message type %d
secureDataMessageTypeForOFTType
-[VCIDSSessionInfoSynchronizer setVCIDSSessionInfoSubscribedStreamIDs:]
-[VCIDSSessionInfoSynchronizer setVCIDSSessionInfoSubscribedStreamIDs:]_block_invoke
streamIDsDictionary=
-[VCIDSSessionInfoSynchronizer retryVCIDSSessionInfoSubscribedStreamIDs]
-[VCIDSSessionInfoSynchronizer retryVCIDSSessionInfoSubscribedStreamIDs]_block_invoke
-[VCIDSSessionInfoSynchronizer sendVCIDSSessionInfoSubscribedStreamIDs:]
-[VCIDSSessionInfoSynchronizer setVCIDSSessionInfoPublishedStreamIDs:]_block_invoke
com.apple.AVConference.VCIDSSessionInfoSynchronizer
-[VCIDSSessionInfoSynchronizer(PrivateMethods) setPrimaryLinkID:]
-[VCIDSSessionInfoSynchronizer(PrivateMethods) setDuplicationLinkID:]
-[VCIDSSessionInfoSynchronizer(PrivateMethods) resetParticipantGenerationCounter]
-[VCIDSSessionInfoSynchronizer(PrivateMethods) checkVCIDSSessionInfoNeedUpdate:]
-[VCIDSSessionInfoSynchronizer(PrivateMethods) updateVCIDSSessionInfoResponse:]
-[VCIDSSessionInfoSynchronizer(PrivateMethods) optInStreamIDsForConnection:]
-[VCIDSSessionInfoSynchronizer(PrivateMethods) optInStreamIDsForConnection:]_block_invoke
-[VCIDSSessionInfoSynchronizer(PrivateMethods) optOutStreamIDsForNonPrimaryConnection:sentOnConnection:]
SIMinBytesSent
SIMaxBytesSent
SIRawBytesSent
SIMinBytesReceived
SIMaxBytesReceived
SIRawBytesReceived
-[VCSessionStatsController initWithDelegate:connectionManager:uplinkStatsCollector:downlinkStatsCollector:reportingAgent:transportSessionID:streamID:mediaQueue:]
-[VCSessionStatsController dealloc]
-[VCSessionStatsController reset]
com.apple.AVConference.vcsessionStatsController.receiveproc
-[VCSessionStatsController startLocalSessionStatsReceive]
v24@?0^v8^{?=Cd[1472C]ii{tagVCIDSChannelDataFormat=[12S]CBSCBBQBBBS{?=SSSSS}BBBQBSBBB}}16
-[VCSessionStatsController startLocalSessionStatsSend]
-[VCSessionStatsController stopLocalSessionStatsUpdate]_block_invoke
-[VCSessionStatsController updateRemoteSessionStats:]
-[VCSessionStatsController isRemoteSessionStatsTooLateWithStatsId:]
-[VCSessionStatsController triggerRateControlWithLocalSessionStats:time:forUplink:forDownlink:fromVCRCExternalThread:]
-[VCSessionStatsController statsReceiveStatsPayload]
-[VCSessionStatsController handleRemoteSessionStats:]
-[VCSessionStatsController healthPrintForServerStats]
SSMinBytesSent
SSMaxBytesSent
SSRawBytesSent
SSMinBytesReceived
SSMaxBytesReceived
SSRawBytesReceived
statsReceiveProc
%s signalled err=%d (%s) (%s) at %s:%d
ENOMEM
emulation3Byte malloc
RemoveEmulation3Byte
H264Bridge.c
err = kFigBridgeInvalidSerializedSampleDescriptionErr
{PullParamSetSPS} ERROR: Wrong forbidden_bit in SPS NAL unit, will bail ...
PullParamSetSPS
{PullParamSetSPS} ERROR: Wrong nal_ref_idc in SPS NAL unit, will bail ...
{PullParamSetSPS} ERROR: Wrong nal_unit_type in SPS NAL unit, will bail ...
PullParamSetSPS: chroma_format_idc too large for high profile
PullParamSetSPS: bit_depth_luma_minus8 too large for high profile
PullParamSetSPS: bit_depth_chroma_minus8 too large for high profile
PullParamSetSPS: qpprime_y_zero_transform_bypass_flag too large for high profile
{PullParamSetSPS} Overflowing NALU size, will bail ...
PullParamSetSPS: thiss->seq_parameter_set_id too large
PullParamSetSPS: wrong SeqParamSet.num_ref_frames_in_pic_order_cnt_cycle number
kFigBridgeInvalidSerializedSampleDescriptionErr
h264bridge_u_pull
Buffer overflow!
UE_PULL should :numZeros<=12
h264bridge_ue_pull
h264bridge_se_pull
Overran SPS
PullVUIParamSet
thiss->cpb_cnt_minus1 too big
h264bridge_u_pulllong
h264bridge_ue_pulllong
UE_PULLlong: data too large for UINT
/System/Library/Components/AudioDSP.component/Contents/MacOS/AudioDSP
VCAudioUnit_RegisterDynamicAudioUnit
VCAudioUnit_NewInstance
-[AVCPacketRelaySocketConnection initWithSocket:remoteAddress:packetFilter:]
-[AVCPacketRelaySocketConnection start]
-[AVCPacketRelaySocketConnection stop]
-[AVCPacketRelaySocketConnection receiveDataOnSocket:]
-[AVCPacketRelaySocketConnection sendData:size:error:]
AVCPacketRelayErrorDomain
socket connection with remote IPPort %s, socket %d (connected %d)
-[AVCPacketRelaySocketConnection dealloc]
com.apple.private.alloy.willow.stream
-[AVCPacketRelayIDSConnection initWithIDSSocketDescriptor:]
-[AVCPacketRelayIDSConnection initWithIDSDestination:]
-[AVCPacketRelayIDSConnection start]
-[AVCPacketRelayIDSConnection start]_block_invoke
v38@?0r^v8I16{?=cSCSC}20@"NSError"30
-[AVCPacketRelayIDSConnection stop]
-[AVCPacketRelayIDSConnection sendData:size:error:]
-[AVCPacketRelayIDSConnection sendData:size:error:]_block_invoke
-[AVCPacketRelayIDSConnection dealloc]
-[AVCPacketRelay initWithConnections:multiplexedConnection:error:]
com.apple.avconference.AVCPacketRelayQueue
-[AVCPacketRelay initWithConnections:multiplexedConnection:error:]_block_invoke
v32@?0r^v8I16B20@"NSError"24
-[AVCPacketRelay start]_block_invoke
-[AVCPacketRelay stop]_block_invoke
-[AVCPacketRelay dealloc]
-[AVCPacketRelay startAllConnections]
-[AVCPacketRelay stopAllConnections]
-[AVCPacketRelay healthPrint:isSend:]
avcMediaStreamNegotiatorMediaBlob
avcMediaStreamNegotiatorMode
AVCMediaStreamNegotiatorVideoWidth
AVCMediaStreamNegotiatorVideoHeight
AVCMediaStreamNegotiatorVideoResolution
AVCMediaStreamNegotiatorHDRMode
AVCMediaStreamNegotiatorTransportType
AVCMediaStreamNegotiatorTransportProtocolType
AVCMediaStreamNegotiatorAccessNetworkType
+[AVCMediaStreamNegotiator(utils) AVConferenceOperatingModeWithAVCMediaStreamMode:]
+[AVCMediaStreamNegotiator(utils) AVCVideoStreamModeWithAVCMediaStreamMode:]
+[AVCMediaStreamNegotiator(utils) audioStreamModeWithMediaStreamMode:]
+[AVCMediaStreamNegotiator(utils) clientAccessNetworkType:]
+[AVCMediaStreamNegotiator(utils) defaultAccessNetworkType:]
-[AVCMediaStreamNegotiator(utils) VCVideoFeatureListStringTypeWithAVCMediaStreamMode:]
Failed to create local feature string for media negotiator
Failed to create bitRateArbiter
Failed to create local config object
Failed to obtain pixelFormat set
Failed to create VCMediaNegotiator
-[AVCMediaStreamNegotiator initWithMode:options:error:]
Failed to create the offerer media blob
Failed to create offerer dictionary with media blob
-[AVCMediaStreamNegotiator initWithMode:error:]
-[AVCMediaStreamNegotiator createOffer]
Failed to deserialize media blob on answerer
Failed to extract incoming media blob on answerer
cannot get video width from Init options
cannot get video height from Init options
cannot get DPI scaling facfor from Init options
-[AVCMediaStreamNegotiator initWithOffer:error:]
offer=%s, options=%s, error=%s
-[AVCMediaStreamNegotiator initWithOffer:options:error:]
Failed to process incoming blob on answerer
Failed to create the response media blob on answerer
Failed to create answer dictionary on answerer
-[AVCMediaStreamNegotiator createAnswer]
Failed to extract negotiated media blob on offerer
-[AVCMediaStreamNegotiator setAnswer:withError:]
Can't set answer blob on answerer
Empty answer blob cannot be set on offerer
-[AVCMediaStreamNegotiator setupAudioStreamConfiguration:errorReason:]
connectionType = %d AND mode = %d
Settings not found in negotiated settings
-[AVCMediaStreamNegotiator setupVideoStreamConfiguration:errorReason:]
RuleCollection not correct in negotiated settings
No valid payload found in the negotiated settings
No valid video rules found found in the negotiated screen settings
No valid pixel format found in the negotiated screen settings
-[AVCMediaStreamNegotiator generateMediaStreamConfigurationWithError:]
Failed to process the response blob on the offerer
-[AVCMediaStreamNegotiator addLocalCallInfoBlobToOutgoingDictionary:]
-[AVCMediaStreamNegotiator generateMediaStreamInitOptionsWithError:]
failed to create mediastream init options dictionary
-[AVCMediaStreamNegotiator pickBestPixelFormatFromSet:preferenceList:count:acceptDefault:]
-[AVCMediaStreamNegotiator pickBestHDRMode:]
VCMediaStreamSynchronizer
-[VCMediaStreamSynchronizer initWithSourceSampleRate:destinationSampleRate:]
com.apple.VideoConference.VCMediaStreamSynchronizer
VCMediaStreamSynchronizer_updateDestinationNTPTime
VCMediaStreamSynchronizer_scheduleDestinationPlaybackWithRTPTimestamp
VCMediaStreamSynchronizer_resetDestinationState
VCMediaStreamSynchronizer_setDestinationAlarmHandler
VCMediaStreamSynchronizer_scheduleTimeForDestinationRTPTimestamp_block_invoke
_VCMediaStreamSynchronizer_differenceBetweenRtpTimestamp
VCMediaStreamSyncSourceDelegate_updateSourceState_block_invoke
VCMediaStreamSyncSourceDelegate_resetSourceState_block_invoke
VCMediaStreamSyncSourceDelegate_updateSourcePlayoutSampleRTPTimestamp
VCMediaStreamSyncSourceDelegate_updateSourceNTPTimeWithRTPTimeStamp
_VCMediaStreamSynchronizer_sourceRTPTimestampFromDestinationRTPTimestampInternal
AVCTextStream
-[AVCTextStream initWithNetworkSockets:callID:error:]
com.apple.avconference.avctextstream.callback.queue
-[AVCTextStream dealloc]
-[AVCTextStream configure:error:]
AVCTextStream configuration is invalid
-[AVCTextStream start]
AVCTextStream hasn't been configured
-[AVCTextStream stop]
-[AVCTextStream pause]
-[AVCTextStream resume]
-[AVCTextStream setDelegate:]
-[AVCTextStream setDirection:]
-[AVCTextStream setRtcpEnabled:]
-[AVCTextStream setRtpTimeOutEnabled:]
-[AVCTextStream setRtcpTimeOutEnabled:]
-[AVCTextStream setRtpTimeOutIntervalSec:]
-[AVCTextStream setRtcpTimeOutIntervalSec:]
-[AVCTextStream setRtcpSendIntervalSec:]
VCRealTimeThread_Initialize
VCRealTimeThread_Finalize
VCRealTimeThread_Start
VCRealTimeThread_Stop
VCRealTimeThread_ChangeState
VCRealTimeThread_InternalStart
VCRealTimeThread_ThreadProc
VCRealTimeThread_CreateStopSocket
message
acknowledgement
content
PBUNSET
VCStreamInputUtil_EncodeFormatDescription
VCStreamInputMediaType
VCStreamInputUtil_DecodeFormatDescription
VCStreamInputUtil_DecodeSampleBuffer
_VCStreamInputUtil_AddFormatDescription
VCStreamInputMediaSubtype
_VCStreamInputUtil_AddUint32Value
VCStreamInputPixelBufferWidth
_VCStreamInputUtil_AddFormatDescriptionVideo
VCStreamInputPixelBufferHeight
VCStreamInputFormatExtensions
_VCStreamInputUtil_AddFormatDescriptionAudio
VCStreamInputFormatASBD
_VCStreamInputUtil_EncodeSampleBufferAttachments
VCStreamInputSampleBufferAttachments
_VCStreamInputUtil_EncodeAudioSampleBuffer
VCStreamInputFormatSampleCount
_VCStreamInputUtil_ReadUint32Value
_VCStreamInputUtil_DecodeVideoFormat
_VCStreamInputUtil_DecodeMetaDataFormat
_VCStreamInputUtil_DecodeAudioFormat
_VCStreamInputUtil_DecodeVideoSampleBuffer
VCStreamInputPresentationTime
_VCStreamInputUtil_DecodeTime
_VCStreamInputUtil_DecodeSampleBufferAttachments
_VCStreamInputUtil_DecodeAudioSampleBuffer
_VCStreamInputUtil_DecodeDataSampleBuffer
VCStreamInputBufferData
_VCStreamInputUtil_DecodeBlockBuffer
bwEstimation
minProbingSequenceSize
suddenBWDPercentage
minFastBWDSampleCount
-[VCRateControlBandwidthEstimator setServerBag:]
VCRateControlBandwidthEstimator_CalculateBandwidthEstimation
Bandwidth Estimation: ArrivalTime:%.4f, timestamp:%u, BWD:%.2f, state:%d, divergeCount:%d, prob_seq:[duration:%.4f, size:%d, count:%d], EstimatedBandwidth:%.2f
VCRateControlBandwidthEstimator_CalculateBandwidthEstimationForBandwidthSample
-[VCRateControlBandwidthEstimator updateQualificationParameters]
VCRateControlBandwidthEstimatorMap_BandwidthEstimator
VCRateControlBandwidthEstimatorMap_DeregisterBandwidthEstimator
VCRateControlBandwidthEstimatorMap_EstimatedBandwidthWithArrivalTime
v32@?0@"NSNumber"8@"VCRateControlBandwidthEstimator"16^B24
VCRateControlBandwidthEstimatorMap_EstimatedBandwidthUncappedWithArrivalTime
rtcpFlags
mediaFlags
profileLevelId
rtpSampleRate
cipherSuite
packedPayload
vcrc
faceTime
groupFaceTime
allowRampUpPLR
highNBDCD
ABTesting
bitMap
testPercentage
experiment
experimentConfig
+[VCRateControlServerBag keysWithMode:]
%@-%@-%@
+[VCRateControlServerBag groupKeysWithMode:primaryKey:]
+[VCRateControlServerBag prefixForMode:]
-[VCRateControlServerBag initWithMode:serverBagDict:]
-[VCRateControlServerBag valueForType:value:]
-[VCRateControlServerBag valueForSecondaryKeyWithPrimaryKey:secondaryKey:type:]
-[VCRateControlServerBag experimentGroupIndex]
minFrequency
maxFrequency
powerLevel
com.apple.AVConference.VCAudioClientManager.XPCCommandQueue
vcSecureMicNotification
VCTimescalePSOLA_PreEmptiveExpand
_VCFECFeedbackAnalyzer_Configure
VCFECFeedbackAnalyzer_Create
isFECFeedbackAnalyzerDumpEnabled
com.apple.VideoConference.VCFECFeedbackAnalyzer
.fecdump
Time
TimeMicro
FrameSizeInPackets
lostPackets
VCFECFeedbackAnalyzer_ProcessFeedback
VCFECFeedbackAnalyzer_GetFECLevelVector
VCFECFeedbackAnalyzer_GetVPLR
VCFECFeedbackAnalyzer_CleanHistory
VCFECFeedbackAnalyzerClass
_VCFECFeedbackAnalyzer_RegisterFeedback
{"histogram":
{"size": %2d,
"bins":{
%s%s
"%d":%2.3f
%s}}}
%5.6f
_VCFECFeedbackAnalyzer_PopulateHistogram
{"measuredLoss"
%s%s"%d":%2d
%s}}
{"vector"
{"vectorPLR"
-[VCTransportSessionProxy initWithTransportSessionID:]
-[VCTransportSessionProxy createVFD:forStreamType:]
-[VCVideoTransmitterBase initWithConfig:]
-[VCVideoTransmitterBase startVideo]
-[VCVideoTransmitterBase stopVideo]
-[VCVideoTransmitterBase generateKeyFrameWithFIRType:]
-[VCVideoTransmitterBase setTemporaryMaximumBitrate:]
-[VCVideoTransmitterBase setKeyFrameOnlyStreamID:]
-[VCVideoTransmitterBase setStreamIDs:numOfStreamIDs:repairedStreamIDs:numOfRepairedStreamIDs:]
-[VCVideoTransmitterBase collectChannelMetrics:interval:]
-[VCVideoTransmitterBase setFECRatio:]
-[VCVideoTransmitterBase setFECRedundancyVector:]
-[VCVideoTransmitterBase setMediaSuggestion:]
-[VCVideoTransmitterBase setEncodingMode:]
-[VCVideoTransmitterBase handleThermalLevelChange:]
-[VCVideoTransmitterBase updateWindowState:isLocal:windowRect:]
-[VCVideoTransmitterBase setTemporalBitrateArray:]
-[VCVideoTransmitterBase setHighestActiveQualityIndex:]
-[VCVideoTransmitterBase handleActiveConnectionChange:]
-[VCClientRelay setupVTPSocket]
-[VCClientRelay startRelay]
com.apple.videoconference.VCClientRelayVTPReceiveProc
com.apple.videoconference.vcclientrelay.idsreadqueue
-[VCClientRelay stopRelay]
-[VCClientRelay relayIDSPacket]
-[VCClientRelay relayVTPPacket]
VCClientRelayVTPReceiveProc
vcEffectsXPCCMTime
VCAudioBufferList_Allocate
VCAudioBufferList_Destroy
VCAudioBufferList_ZeroMemory
VCAudioBufferList_InvalidateStats
VCAudioBufferList_ApplyGain
VCAudioBufferList_Mix
VCAudioBufferList_MixToMono
VCAudioBufferList_Append
VCAudioBufferList_ReplaceSamples
VCAudioBufferList_Shift
VCAudioBufferList_Convert
VCAudioBufferList_GetSampleFormat
VCAudioBufferList_GetAudioBufferList
VCAudioBufferList_GetBufferAtIndex
VCAudioBufferList_Reset
VCAudioBufferList_ResetDataPointers
VCAudioBufferList_ResampleAppend
VCAudioBufferList_InvalidateAveragePower
VCAudioBufferList_GetTimestamp
VCAudioBufferList_GetAudioTimestamp
VCAudioBufferList_GetHostTimeJumpSize
VCAudioBufferList_GetHostTime
VCAudioBufferList_GetVoiceActivity
VCAudioBufferList_SetVoiceActivity
VCAudioBufferList_GetSampleCount
VCAudioBufferList_GetSampleCapacity
VCAudioBufferList_GetChannelCount
VCAudioBufferList_GetAveragePower
VCAudioBufferList_SetAveragePower
VCAudioBufferList_GetSerializedSize
VCAudioBufferListSampleBufferAllocator
VCAudioBufferList_CreateSampleBufferWithFormatWithAllocator
VCAudioBufferList_CreateSampleBufferAllocateWithAllocator
VCAudioBufferList_GetPriority
VCAudioBufferList_SetPriority
VCAudioBufferList_InvalidateNetworkTimestamp
VCAudioBufferList_SetNetworkTimestamp
VCAudioBufferList_GetNetworkTimestamp
VCAudioBufferList_SetVoiceProbability
VCAudioBufferListConverterCallback
 %@(%@)=%u,
Bandwidth Settings:
-[VCMediaNegotiationBlob(Utils) printBandwidthSettingsWithLogFile:]
Media Blob - %s
-[VCMediaNegotiationBlob(Utils) printCaptionsSettingsWithLogFile:]
Media Blob - Captions Settings: canDisplayCaptions=%d
Sender languages:
 %@,
Media Blob -     %s
Moments Settings:
-[VCMediaNegotiationBlob(Utils) printMomentsSettingsWithLogFile:]
-[VCMediaNegotiationBlob(Utils) printMultiwayAudioStreamsWithLogFile:]
Media Blob - Multiway Audio: count=%d
-[VCMediaNegotiationBlob(Utils) printMultiwayVideoStreamsWithLogFile:]
Media Blob - Multiway Video: count=%d
%@ (size=%u): UserAgent=%s
, basebandCodec=%@, basebandCodecSampleRate=%u
, allowDynamicMaxBitrate=%d
, allowsContentsChangeWithAspectPreservation=%d
-[VCMediaNegotiationBlob(Utils) printWithTitle:blobSize:logFile:]
-[VCMediaNegotiationBlobVideoSettings(VideoRules) initWithSSRC:allowRTCPFB:videoRuleCollections:featureStrings:isCellular16x9Capable:tilesPerFrame:ltrpEnabled:]
-[VCMediaNegotiationBlobVideoSettings(VideoRules) initWithScreenSSRC:allowRTCPFB:videoRuleCollections:featureStrings:isCellular16x9Capable:customVideoWidth:customVideoHeight:tilesPerFrame:ltrpEnabled:pixelFormats:hdrModesSupported:]
-[VCMediaNegotiationBlobVideoSettings(VideoRules) setVideoRuleCollections:featureStrings:isScreen:isCellular16x9Capable:]
-[VCMediaNegotiationBlobVideoSettings(VideoRules) checkAndInsertRuleWithWidth:height:framerate:payload:priority:negotiationBitfield:negotiationBit:rules:isCellular16x9Capable:]
-[VCMediaNegotiationBlobVideoSettings(VideoRules) newVideoRuleCollectionsForScreen:isCellular16x9Capable:isLocalConfig:]
, %@
 %@@%@fps%s
 (preferred)
-[VCMediaNegotiationBlobVideoSettings(VideoRules) printVideoWithLogFile:]
Media Blob - Video Settings: SSRC=%x allowRTCPFB=%u
Media Blob -     Payload=%u Format string=%s
Media Blob -     Payload=%u Parameter set: %s
Payload=%u %s %s
encode
decode
-[VCMediaNegotiationBlobVideoSettings(VideoRules) printScreenWithLogFile:]
Media Blob - Screen Settings: SSRC=%x allowRTCPFB=%u
Media Blob -     Format string=%s
Media Blob -     Payload=%u parameter set: %s
 %@@%@fps
Audio Settings: SSRC=%x sbr=%d audioSwitching=%d audioRecording=%d
 model=%u
-[VCMediaNegotiationBlobAudioSettings(AudioRules) printWithLogFile:]
Primary payloads:
Secondary payloads:
+[VCMediaNegotiationBlobBandwidthSettings(BandwidthSettings) bandwidthConfigurationWithOperatingMode:connectionType:]
Multiway Audio Stream Settings: SSRC=%x maxNetworkBitrate=%d maxMediaBitrate=%d maxPacketsPerSecond=%f supportedPayloads=0x%08x streamID=%d qualityIndex=%d hasRepaired:%u repairedMaxNetworkBitrate=%d repairedStreamID=%d
-[VCMediaNegotiationBlobMultiwayAudioStream(MultiwayAudioStream) printWithLogFile:]
Multiway Video Stream Settings: SSRC=%x maxNetworkBitrate=%d maxMediaBitrate=%d maxPacketsPerSecond=%d payload=%d streamID=%d qualityIndex=%d supportedvideoFormats=%d frameRate=%d keyFrameInterval=%u metadata=%u hasRepaired:%u repairedMaxNetworkBitrate=%d repairedStreamID=%d
-[VCMediaNegotiationBlobMultiwayVideoStream(MultiwayVideoStream) printWithLogFile:]
en_us
zh_cn
supported
no_history
history_image
history_video
SUPPORTED
JPEG
HEIF
video_320x240_15
video_320x240_30
video_480x368_15
video_480x368_30
video_640x480_15
video_640x480_30
video_848x480_15
video_848x480_30
video_1024x768_15
video_1024x768_30
video_1280x720_15
video_1280x720_30
video_1024x768_60
video_1280x720_60
video_480x272_15
video_480x272_30
video_1280x720_15_dec
video_1280x720_30_dec
video_1280x720_60_dec
video_192x112_15
video_192x192_15
video_240x240_15
video_320x320_30
video_480x480_30
video_640x640_30
video_720x720_30
video_1024x576_30
video_1920x1080_30
video_1440x1080_30
video_896_672_30
video_1920x1080_60
video_SUPPORTED
video_896x672_60
video_1664x1248_30
video_1664x1248_60
video_1024x576_15
video_896x672_15
video_1920x1440_60
screen_1024x768_30
screen_1024x768_60
screen_1136x640_30
screen_1136x640_60
screen_1334x750_30
screen_1334x750_60
screen_1664x1248_30
screen_1664x1248_60
screen_1920x1080_30
screen_1920x1080_60
screen_2208x1242_30
screen_2208x1242_60
screen_2048x1536_30
screen_2048x1536_60
screen_1280x720_30
screen_1280x720_60
screen_1920x896_30
screen_1920x896_60
screen_2732x2048_60
screen_2388x1668_60
screen_2224x1668_60
screen_3616x1552_60
screen_4400x1888_60
screen_SUPPORTED
G722
AACELD_16000
AACELD_22050
SPEEX_8K
SPEEX_16K
AMR_8000
AMR_16000
INVALID
VirtualTTYDevice
VCVirtualTTYDevice
-[VCVirtualTTYDevice initWithMode:clientPid:]
-[VCVirtualTTYDevice start]
-[VCVirtualTTYDevice sendCharacter:]
-[VCVirtualTTYDevice sendText:]
-[VCVirtualTTYDevice setPause:]
-[VCVirtualTTYDevice pushAudioSamples:]
-[VCVirtualTTYDevice didUpdateBasebandCodec:]
-[VCMediaNegotiationBlobV2MicrophoneSettingsU1(Utils) initWithSSRC:audioPayloads:]
Mic settings (U+1): 
ssrc=%08x 
payloads=0x%x [
-[VCMediaNegotiationBlobV2MicrophoneSettingsU1(Utils) printWithLogFile:prefix:]
-[AVCMoments initWithStreamToken:requesterID:delegate:dispatchQueue:]
com.apple.AVConference.AVCMoments.delegateQueue
%@: streamToken[%ld] capabilities[%X] requesterID[%@]
-[AVCMoments connect]
-[AVCMoments connect]_block_invoke
-[AVCMoments disconnect]
-[AVCMoments registerBlocksForNotifications]_block_invoke
vcMomentsServerDidDisconnect
result=%s
-[AVCMoments didStartProcessingRequestHelperWithResult:]
-[AVCMoments didEndProcessingRequestHelperWithResult:]
-[AVCMoments didFinishRequestHelperWithResult:]
AVCMoments
-[AVCMoments newRequestWithMediaType:mode:requesteeID:]
-[AVCMoments avcMomentsRequestDidStartRequest:withError:]
-[AVCMoments avcMomentsRequestDidEndRequest:withError:]
-[AVCMoments avcMomentsRequestDidRejectRequest:withError:]
-[VCNetworkAgentCell addCellularAssertion]
-[VCNetworkAgentCell removeCellularAssertion]
transport
operation
formats
preferredFormat
formatsExt1
preferredFormatExt1
NEGOTIATION_TRANSPORT_TYPE_WIFI
NEGOTIATION_TRANSPORT_TYPE_CELLULAR
NEGOTIATION_OPERATION_TYPE_ENCODE
NEGOTIATION_OPERATION_TYPE_DECODE
-[VCVideoRuleCollectionsScreenAirplayEmbedded initWithHardwareSettings:]
-[VCVideoRuleCollectionsScreenAirplayEmbedded selectPreferredRule:screenSize:]
-[VCVideoRuleCollectionsScreenAirplayEmbedded setupH264Rules]
audioCannedReplay
audioCannedReplayLoopLength
audioCannedReplayStartTime
AUIOCreateHandle
AUIOCloseHandle
AUIOSuspend
AUIOResume
AUIOSetupFormats
AUIOReceiverIsReady
_AUIOHealthPrintCallback
AUIOStart
AUIOStop
AUIOSetInputMeterEnabled
AUIOSetOutputMeterEnabled
AUIOSetMute
AUIOSetVoiceMixingMedia
AUIOSetMediaPlaybackOnExternalDevice
AUIOSetRemoteCodecInfo
AUIOSetSpatialMetadata
AUIOSetDynamicDuckerVolume
_AUIOComponentSubTypeForConfiguration
_AUIOMicProc
IOProc: shenanigans mic proc
_AUIOProcessMetaData
AUIO last mic sample delayed. currentTime=%f previousTime=%f delta=%f
_AUIOMicProcDetectDelayedSamples
_AUIOLogAbnormalTimestamps
_AUIOBufferMicSamples
_AUIOSpkrProc
IOProc: shenanigans spkr proc
_AUIOSpkrProcGKS
_AUIOSetPropertiesAndInitialize
forceMute
AUIOSetupMic
MicOutFmt:
_AUIOReallocBufferedMicSamples
AUIOSetupSpeaker
SpkrIn:
_AUIOPostinitialization
_AUIOStartPacketThread
com.apple.AVConference.auio
_AUIOSetRemoteCodecProperties
-[VCVideoRuleCollectionsScreen initWithHardwareSettings:]
-[VCVideoRuleCollectionsScreen initForMacDecodingOnly]
-[VCVideoRuleCollectionsScreen setupH264Rules]
v16@?0@"NSObject<OS_nw_connection>"8
Unexpected connection callback
cannot create socket
bind failed
connect failed
rtp socket creation failed
rtcp socket creation failed
00110011
11100010
00110010
11100011
-[VCVideoCapture addSink:]
-[VCVideoCapture removeSink:]
v24@?0^{_VCSingleLinkedListEntry=^{_VCSingleLinkedListEntry}}8^B16
-[VCTransportSessionIDSMultiLink handleLinkConnectedWithInfo:]
-[VCTransportSessionIDSMultiLink handleLinkDisconnectedWithInfo:]
-[VCTransportSessionIDSMultiLink handleProbingResponse:]
-[VCTransportSessionIDSMultiLink setWiFiAssist:]
-[VCTransportSessionIDSMultiLink setWiFiAssist:]_block_invoke
-[VCTransportSessionIDSMultiLink setDefaultLink:]_block_invoke
-[VCTransportSessionIDSMultiLink primaryConnectionChanged:oldPrimaryConnection:activeConnection:]
-[VCTransportSessionIDSMultiLink discardConnection:]
-[VCTransportSessionIDSMultiLink discardConnection:]_block_invoke
-[VCTransportSessionIDSMultiLink didEnableDuplication:activeConnection:]
-[VCTransportSessionIDSMultiLink setOneToOneModeEnabled:isInitiator:]
-[VCTransportSessionIDSMultiLink startActiveProbingWithOptions:]_block_invoke
-[VCTransportSessionIDSMultiLink stopActiveProbingWithOptions:]_block_invoke
-[VCTransportSessionIDSMultiLink queryProbingResultsWithOptions:]_block_invoke
-[VCTransportSessionIDSMultiLink flushLinkProbingStatusWithOptions:]_block_invoke
-[VCTransportSessionIDSMultiLink setRemoteDeviceVersionIDS]_block_invoke
-[VCTransportSessionIDSMultiLink VCIDSSessionInfoSynchronizer:sendVCIDSSessionInfoRequest:]
RateMonitorUpdateDataSamples
com.apple.avconference.writerqueue
-[VCMovieWriter setupContectRect:withCaptureHeight:]
AVConference:MovieWriter
-[VCMovieWriter appendAudioSampleBuffer:mediaType:]
-[VCMovieWriter shouldFinishWritingSampleBuffer:RTPtimeStamp:mediaType:]
-[VCMovieWriter setStillImageTime:]
-[VCMovieWriter finishWritingWithHandler:]
VCMovieWriter
-[VCMovieWriter setupAssetWriterWithWidth:height:transactionID:]
com.apple.quicktime.content.identifier
mdta
-[VCMovieWriter setupInput:queue:dispatchGroup:lastPresentationTime:]_block_invoke
-[VCMovieWriter processSampleQueue:input:lastPresentationTime:]
com.apple.quicktime.still-image-time
-[VCMovieWriter appendMetaData]
-[VCMovieWriter startWritingAtTime:]
VCCVOExtensionUtils_CameraStatusBitsFromCVOExtension
-[VCAudioStreamTransport initWithHandle:callId:localSSRC:enableNetworkMonitor:]
-[VCSystemAudioCapture initWithConfiguration:]
-[VCSystemAudioCapture dealloc]
+[VCSystemAudioCapture isValidConfiguration:]
-[VCSystemAudioCapture start]
-[VCSystemAudioCapture stop]
+[VCSystemAudioCapture newAudioTapWithProcessID:audioFormat:]
+[VCSystemAudioCapture newAudioTapWithSessionType:audioFormat:]
+[VCSystemAudioCapture newAudioTapWithCaptureContext:audioFormat:]
-[VCSystemAudioCapture newAudioTapWithAudioStreamBasicDescription:]
systemAudioUseSineWave
_VCSystemAudioCapture_handleInputBuffer
_VCSystemAudioCapture_logInfoForFirstAudioBufferReceived
_VCSystemAudioCapture_processInputBuffer
_VCSystemAudioCapture_appendInputBuffer
_VCSystemAudioCapture_CopyOutputBufferNonInterFormat
_VCSystemAudioCapture_CopyOutputBufferInterFormat
_VCSystemAudioCapture_UpdateAppendBuffer
_VCSystemAudioCapture_isRunningListenerCallback
_VCSystemAudioCapture_AudioQueueRemovePropertyListener
_VCSystemAudioCapture_allocateAudioQueueBuffers
_VCSystemAudioCapture_destroyAudioQueueBuffers
-[VCAudioPayload initWithConfig:]
-[VCAudioPayload createEncoderWithInputFormat:]
-[VCAudioPayload encodeAudio:numInputSamples:outputBytes:numOutputBytes:]
-[VCAudioPayload setCodecModeRequest:]
{ VCAudioPayload config=%@ currentBitrate=%d }
v32@?0@"NSNumber"8@"NSString"16^B24
VCVideoStream
-[VCVideoStream newVideoTransmitterConfigWithVideoStreamConfig:]
isFECGeneratorEnabled
-[VCVideoStream isFECGeneratorEnabled]
-[VCVideoStream initVideoTransmitter]
-[VCVideoStream destroyVideoTransmitter]
videoJBUseErasureSensitiveMode
videoReceiverDeferredAssemblyOffset
-[VCVideoStream videoReceiverConfigWithVideoStreamConfig:]
enableVideoJitterBufferInReceiver
looseAVSyncEnabled
forceVideoStreamLowLatency
delayBudgetForServerPacketRetransmissionForVideo
0.005, 0.01, 0.025, 1.0
1.0, 0.8, 0.5, 0.3
-[VCVideoStream readServerPacketRetransmissionsForVideoStoreBagConfig:]
-[VCVideoStream setupVideoReceiver:withTransmitterHandle:]
-[VCVideoStream updateVideoReceiver:]
-[VCVideoStream destroyVideoReceiver]
-[VCVideoStream destroyVideoModules]
-[VCVideoStream setupCompoundStreamIDsWithStreamIDs:]
compoundStreamIDs=
forceHDR10ColorInfo
-[VCVideoStream setupColorInfo]
com.apple.AVConference.VCVideoStream.lastDecodedFrame
-[VCVideoStream dealloc]
/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCVideoStream.m
updateVideoConfig Called while video stream is not running
-[VCVideoStream updateVideoConfig:]
-[VCVideoStream submitStatisticsCollectorVideoStallUpdateWithTime:]
-[VCVideoStream submitStatisticsCollectorVideoStallUpdateWithType:currentTime:stallDuration:idsParticipantID:]
-[VCVideoStream resetRemoteMediaStalled]
-[VCVideoStream updateSourcePlayoutTimestamp:]
-[VCVideoStream generateKeyFrameWithFIRType:]
-[VCVideoStream sendLastRemoteVideoFrame:]
-[VCVideoStream cleanupBeforeReconfigure:]
-[VCVideoStream setTargetStreamID:]
-[VCVideoStream setShouldEnableFaceZoom:]
-[VCVideoStream setShouldEnableMLEnhance:]
-[VCVideoStream lastDisplayedFrameRTPTimestamp]
Invalid configuration
Feature string is nil
-[VCVideoStream validateStreamConfiguration:error:]
-[VCVideoStream setEncodingMode:]
-[VCVideoStream enableRateControlFeebackInConfig:]
-[VCVideoStream maxFramerateFromStreamConfigs:]
-[VCVideoStream configureNetworkSampleRateScaleForStream:transport:]
-[VCVideoStream onConfigureStreamWithConfiguration:error:]
Can not register capture source streamInput, streamInputID could be wrong
SymptomReporterOptionalKeyCaptureSource
SymptomReporterOptionalKeyCaptureWidth
SymptomReporterOptionalKeyCaptureHeight
SymptomReporterOptionalKeyCaptureFrameRate
-[VCVideoStream registerForCameraCaptureWithConfig:]
-[VCVideoStream setupReportingAgent]_block_invoke
-[VCVideoStream networkMTU]
-[VCVideoStream isTransportIPv6]
-[VCVideoStream setupInternalRedundancyControllerWithStreamConfig:]
-[VCVideoStream onStartWithCompletionHandler:]
Screen capture failed
Screen capture is busy or not permitted
-[VCVideoStream onStopWithCompletionHandler:]
-[VCVideoStream onPauseWithCompletionHandler:]
-[VCVideoStream onResumeWithCompletionHandler:]
-[VCVideoStream getMaxTemporalBitrateForStreamIDs:]
-[VCVideoStream setTransmitterStreamIDs:repairStreamIDs:]
-[VCVideoStream setStreamIDs:repairStreamIDs:]
streamIDs=
repairStreamIDs=
-[VCVideoStream setPeerSubscribedStreamIDs:]
-[VCVideoStream handleVTPSendFailedWithData:]
VCMediaStreamType
VCVSStreamIDs
VCVSConfigTxMaxBitrate
VCVSConfigTxMinBitrate
VCVSConfigRxMaxBitrate
VCVSConfigRxMinBitrate
VCVSKeyFrameInterval
VCVSRemoteVInitialOrientation
VCVSConfigTxCodecType
VCVSConfigRxCodecType
VCVSConfigTxFramerate
VCVSConfigTxResolution
VCVSConfigWidth
VCVSConfigHeight
VCVSConfigTransportProtocol
VCVSConfigAccessNetworkType
-[VCVideoStream collectVideoStreamStartMetrics:]
Time
VCVSUUID
%@:%d
VCVSLocalIPPort
VCVSRemoteIPPort
VCVSIDSDestination
VCVSRateAdaptationEnabled
VCVSRtcpSendInterval
VCVSRepairIDs
VCVSSubStreamIDs
VCVSRemoteFrameworkVersion
VCVSConfigHDRMode
VCVSActiveStreamID
-[VCVideoStream vcVideoReceiver:didReceiveSampleBuffer:isFirstFrame:]
-[VCVideoStream vcVideoReceiver:requestKeyFrameGenerationWithStreamID:firType:]
-[VCVideoStream vcVideoReceiverRequestKeyFrame:rtcpPSFBType:]
-[VCVideoStream avConferencePreviewError:]
-[VCVideoStream avConferenceScreenCaptureError:]
-[VCVideoStream thermalLevelDidChange:]
-[VCVideoStream cameraAvailabilityDidChange:]
VCVideoStream_ProcessConvertedFrame
-[VCVideoStream rateController:targetBitrateDidChange:rateChangeCounter:]
-[VCVideoStream redundancyController:redundancyVectorDidChange:]
_VCVideoStreamNWConnectionNotificationCallback
_VCVideoStreamNWConnectionPacketEventCallback
_VCVideoStreamVTPNotificationCallback
audioFeatures
videoFeatures
-[VCMediaStreamGroup initWithConfig:]
%@.streamGroup.stateQueue.%s.%u
%p streamGroupID=%s state=%d participantUUID=%@
-[VCMediaStreamGroup configureStreams]
-[VCMediaStreamGroup callDelegateWithBlock:]
-[VCMediaStreamGroup setParticipantJoinedToFirstMKITimer]
-[VCMediaStreamGroup startMediaStreams]
-[VCMediaStreamGroup stopMediaStreams]
-[VCMediaStreamGroup pauseMediaStreams]
Invalid state=%d
%@. Failed to pause streamToken=%u
/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCMediaStreamGroup.m
-[VCMediaStreamGroup resumeMediaStreams]
%@. Failed to resume streamToken=%u
-[VCMediaStreamGroup start]
%@. Failed already running streamToken=%u
-[VCMediaStreamGroup stop]
%@. Failed already stopped streamToken=%u
-[VCMediaStreamGroup pause]
-[VCMediaStreamGroup resume]
-[VCMediaStreamGroup mediaStream:didReceiveRTPGapForMediaKeyIndex:]_block_invoke
Codec Featues: allowAudioRecording=%d videoFeatures=%@
-[VCMediaNegotiationBlobV2CodecFeatures(Utils) printWithLogFile:prefix:]
{ VCAudioTier: payload=%d bundle=%d%s audioCodecBitrate=%d redNumPayloads=%d redMaxDelay20ms=%d networkBitrate=%d packetSize=%d payloadSize=%d headerSize=%d }
bundle
audioCodecBitrate
redNumPayloads
redMaxDelay
networkBitrate
-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke
conferenceWarmUpForCall
conferenceDeviceRole
conferenceReportingHierarchyToken
-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_2
conferenceInitializeNewCall
conferenceUsingBlobFormat
conferenceGetIsUsingBlobFormat
conferenceSetIsUsingBlobFormat
conferencePeerReportingIdentifier
conferenceSessionID
conferenceSetReportingIdentifier
conferenceSetSessionID
conferenceCallEvent
conferenceAddGKSCallEvent
conferenceParticipantID
conferenceConnectionBlob
conferenceGetConnectionBlob
conferenceInviteData
conferenceNonCellularCandidateTimeout
conferenceGetInviteData
conferenceGetCallMetadata
conferencePeerCN
conferenceSetPeerCN
conferenceNetworkQuality
conferenceNetworkQualityForCall
conferenceRequiresWifi
conferenceGetRequiresWifi
conferenceSetRequiresWifi
conferenceOldCallID
conferenceIsCaller
conferenceCapabilities
conferenceDestination
FILEDESCRIPTOR
conferenceStartConnectionUsingInviteData
conferenceStopCallID
conferenceCancelCallID
conferenceRemoteCancelledCallID
conferenceCallReport
conferenceCallReportProtobuf
conferenceCallReportProtobufID
conferenceSetCallReport
conferenceActive
conferenceSetActive
conferenceRemoteIPChange
conferenceGetIsOutputMeteringEnabled
conferenceSetIsOutputMeteringEnabled
conferenceGetIsInputMeteringEnabled
conferenceSetIsInputMeteringEnabled
conferenceGetIsInputFrequencyMeteringEnabled
conferenceSetIsInputFrequencyMeteringEnabled
conferenceGetIsOutputFrequencyMeteringEnabled
conferenceSetIsOutputFrequencyMeteringEnabled
conferenceGetOutputMeterLevel
conferenceGetInputMeterLevel
conferenceMicrophoneMute
conferenceGetIsMicrophoneMuted
conferenceSetIsMicrophoneMuted
conferenceLocalFrameRate
conferenceGetLocalFrameRate
conferenceLocalBitRate
conferenceGetLocalBitRate
conferenceRemoteFrameRate
conferenceGetRemoteFrameRate
conferenceRemoteBitRate
conferenceGetRemoteBitRate
conferenceRemotePacketLossRate
conferenceGetLocalPacketLossRate
conferenceGetRemotePacketLossRate
conferenceRoundTripTime
conferenceGetRoundTripTime
conferenceCallStats
conferenceGetStatsForCallID
conferenceSpeakerEnabled
conferenceSetIsSpeakerEnabled
conferenceGetIsSpeakerEnabled
conferenceNATType
conferenceGetNATType
conferenceSetAudioSending
conferenceSetPauseAudio
conferenceSetPauseVideo
conferenceServerInfo
conferenceSetServerInfo
conferenceLocalFrameWidth
conferenceGetLocalFrameWidth
conferenceLocalFrameHeight
conferenceGetLocalFrameHeight
conferenceRemoteFrameWidth
conferenceGetRemoteFrameWidth
conferenceRemoteFrameHeight
conferenceGetRemoteFrameHeight
conferenceProcessRelayRequestResponse
conferenceProcessRelayRequestUpdate
-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_53
conferenceSendARPL
conferenceEncryptData
conferenceSendData
conferenceGetLastActiveCallID
conferenceSetLastActiveCallID
conferenceUpdateCapabilities
conferenceShouldSendBlackFrameState
conferenceShouldSendBlackFrame
conferenceState
conferenceSetState
conferenceSetVisualRectangle
conferenceProtocolVersion
conferenceSetPeerProtocolVersion
VCNACKGenerator_AddPacketInfo
VCNACKGenerator_UpdatePlayoutRTPTimestamp
_VCNACKGenerator_GetBitrate
_VCNACKGenerator_UpdateSSRCContext
%5.3f
%5.3f
NackGenerator
.nackdump
Timestamp
RequestTime
Type
SSRC
HighestSeqNum
Bitmask
ResponseTime
_VCNACKGenerator_CheckBitrateLimits
_VCNACKGenerator_AttemptToRequestNACK
_VCNACKGenerator_ShouldGenerateNACK
_VCNACKGenerator_CalculateAndUpdateNACKGenerationThrottlingFactor
%5.3f
0x%x
NACK
-[VCSessionMessaging dealloc]
v28@?0@"NSData"8B16@"NSNumber"20
-[VCSessionMessaging sendMessage:withTopic:]
-[VCSessionMessaging sendMessage:withTopic:participantID:]
-[VCSessionMessaging sendMessageDictionary:withTopic:participantID:]
-[VCSessionMessaging sendReliableMessage:withTopic:participantID:withOptions:completion:]
%@=%@:
%@%@=%@:
%@=%@?
-[VCSessionMessaging newPackedMessageFromDictionaryV2:]
-[VCSessionMessaging newDictionaryFromUnpackedMessageV2:]
-[VCSessionMessaging searchMatchingTopic:payload:transactionID:fromParticipant:]
-[VCSessionMessaging controlChannel:topic:payload:transactionID:fromParticipant:]
-[VCSessionMessaging controlChannel:sendReliableMessage:didSucceed:toParticipant:]
-[VCSessionMessaging controlChannel:clearTransactionCacheForParticipant:]
%@ %@:%d
-[VCNetworkAddress getSockaddrStorage:size:]
%@ (%p)
vcMediaStreamDestIp
vcMediaStreamDestPort
vcMediaStreamDestIsIPv6
vcMediaStreamRemoteSSRC
vcMediaStreamSourcePort
vcMediaStreamSourceIsIPv6
vcMediaStreamLocalSSRC
vcMediaStreamCName
vcMediaStreamRecommendedMTU
vcMediaStreamRateAdaptationEnabled
vcMediaStreamDecryptionTimeoutEnabled
vcMediaStreamDecryptionTimeoutInterval
vcMediaStreamSRTPCipherSuite
vcMediaStreamRTCPXREnabled
vcMediaStreamRTCPRemotePort
vcMediaStreamSRTCPCipherSuite
vcMediaStreamSRTPSendMediaKey
vcMediaStreamSRTPReceiveMediaKey
vcMediaStreamCaptureSource
vcMediaStreamStreamInputID
vcMediaStreamNetworkClockID
vcMediaStreamJitterBufferMode
vcMediaStreamFixedJitterBufferSize
-[AVCVideoDataOutput initWithStreamToken:delegate:queue:error:]
AVCVideoDataOutput
-[AVCVideoDataOutput streamOutputServerDidDie:]
-[AVCVideoDataOutput streamOutput:didPause:]
-[AVCVideoDataOutput streamOutput:didStall:]
-[AVCVideoDataOutput streamOutput:didDegrade:]
%@[%p][CUMULATIVE] reorderedPacketsCount[%d] sentRequestCount[%d] receivedResponseCount[%d] ExpMovMeanRTT[%@] plrEnvelopeValue[%@] plrTier[%@]
%s:%d/%d,%d/%d;%s:%d/%d,%d/%d;
+[VCVideoFeatureListStringHelper deriveAspectRatioFLSWithPortraitRatio:landscapeRatio:expectedPortraitRatio:expectedLandscapeRatio:]
FLS;
+[VCVideoFeatureListStringHelper extractAspectRatios:prefix:landscapeX:landscapeY:portraitX:portraitY:]
+[VCVideoFeatureListStringHelper defaultPayload:]
+[VCVideoFeatureListStringHelper featureListString:maxSize:payload:featureListStrings:]
FLS;VRAE:0;SW:1;
FLS;SW:1;
-[VCSession(OneToOne) setupOneToOne]
ForceVCMediaQueueForOneToOne
-[VCSession(OneToOne) setupOneToOneMediaQueue]
-[VCSession(OneToOne) newNegotiatorForOneToOneWithRemoteParticipant:]
-[VCSession(OneToOne) setOneToOneConfigOnRemoteParticipant:]
-[VCSession(OneToOne) setupRateControllerOneToOne]
session_%@_1:1
-[VCSession(OneToOne) configureLocalParticipantWithOneToOneRemoteParticipant:isInitialConfiguration:]
-[VCSession(OneToOne) setupOneToOneMediaControlInfoGeneratorsWithVersion:oneToOneConfig:videoEnabled:]
-[VCSession(OneToOne) newParticipantOneToOneConfigWithIDSParticipantID:isLocal:mediaControlInfoVersion:videoEnabled:screenEnabled:remoteParticipant:]
-[VCSession(OneToOne) configureRemoteParticipantForOneToOne:]
VCGFTSWTT
VCSOTOST
-[VCSession(OneToOne) reportCompletedSwitchingToOneToOne:]
-[VCSession(OneToOne) switchFromOneToOneToMultiway]
-[VCSession(OneToOne) multiwayToOneToOneSwitchConfigure]
-[VCSession(OneToOne) switchFromMultiwayToOneToOne]
-[VCSession(OneToOne) startReportingForOneToOneEnabled:]
-[VCSession(OneToOne) negotiateOneToOneWithRemoteParticipant:]
-[VCSession(OneToOne) configureOneToOneRateController:isUsingCamera:isUsingScreen:]
-[VCSession(OneToOne) vcrcServerBagProfileNumber]
/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCSession+OneToOne.m
-[VCSession(OneToOne) addOneToOneParticipant:]
-[VCSession(OneToOne) completeTransitionToOneToOneEnabled:]
Successfully completed
Failed
-[VCSession(OneToOne) completionHandlerOneToOneEnabled:didSucceed:]_block_invoke
-[VCSession(OneToOne) dispatchedSetOneToOneModeEnabled:isLocal:]
VCSessionMessageOneToOneEnabled
VCSessionMessageOneToOneDisabled
VCSessionMessageTopicOneToOneEnabledState
-[VCSession(OneToOne) setupOneToOneABTesting]
-[VCSession(OneToOne) startOneToOne]
-[VCSession(OneToOne) setIsOneToOneRemoteMediaStalling:]_block_invoke
-[VCSession(OneToOne) reportActiveConnectionOneToOne]
-[VCSession(OneToOne) handleActiveConnectionChangeForOneToOne:]
-[SIPClientDataDictionary dealloc]
-[VCSessionMessageTopic dealloc]
-[VCSessionMessageTopic sendReliableMessage:participantID:withOptions:completion:]
com.apple.VideoConference.VCSessionMessageTopic.out
-[VCSessionMessageTopic sendMessage:participantID:withSequence:numRetries:]
-[VCSessionMessageTopic sendMessage:participantID:withSequence:numRetries:]_block_invoke
replayThreshold
-[VCSessionMessageTopic isDuplicateMessageID:messageHistory:participantID:]
messageHistory
messageID
expireTime
-[VCSessionMessageTopic purgeExpiredEntries:messageHistory:participantID:]
-[VCSessionMessageTopic passMessage:sequence:fromParticipant:]
com.apple.VideoConference.VCSessionMessageTopic.in
-[VCSessionMessageTopic clearTransactionCacheForParticipant:]
VCMemoryPool_Alloc
VCMemoryPool_Free
-[VCRedundancyControlAlgorithmAudioLegacy updateRedundancyStrategyWithNetworkStatistics:]
-[VCRedundancyControlAlgorithmAudioLegacy computeRedundancyInfo]
channels
-[AVCAudioPowerSpectrum(VCPrivateAccess) applyChannelBins:binCount:channelID:]
com.apple.AVConference.vcLinkProbing.delegateQueue
com.apple.AVConference.vcLinkProbing.serialQueue
-[VCLinkProbingHandler startActiveProbingOnLinks:]
-[VCLinkProbingHandler stopActiveProbingOnLinks:resetStats:]
-[VCLinkProbingHandler stopActiveProbingOnLinks:resetStats:]_block_invoke
-[VCLinkProbingHandler dispatchedUpdateProbingResults:]
LinkProbing: Updated probing results for linkID: %d -> %s
linkProbingInterval
linkProbingTimeout
linkProbingQueryResultsInterval
linkProbingConnectionLockdownPeriod
linkProbingExponentialMovingMeanFactor
linkProbingEnvelopeAttackFactor
linkProbingEnvelopeDecayFactor
0.25,2.5,10,20,30,100
linkProbingDuplicationWaitTimeout
linkProbingIdenticalQueryResultMax
linkProbingLockdownPeriod
-[VCLinkProbingHandler loadStorebagValues]
-[VCLinkProbingHandler queryProbingResults]
-[VCLinkProbingHandler queryProbingResults]_block_invoke
q24@?0@"VCLinkProbingResult"8@"VCLinkProbingResult"16
-[VCLinkProbingHandler updateLinkPreferenceOrder]
-[VCLinkProbingHandler probingLockdownEnded]
-[VCCallInfo init]
-[VCCallInfo updateWithLastDecodedFrameTime:time:]
Viceroy 1.4.0
Viceroy 1.4.1
Viceroy 1.4.2
Viceroy 1.4
Viceroy 1.5
Viceroy 1.6
Viceroy 1.7
-[AVCAudioPowerSpectrumMeter initWithConfig:delegate:queue:]
-[AVCAudioPowerSpectrumMeter dealloc]
-[AVCAudioPowerSpectrumMeter registerPowerSpectrumForStreamToken:]
-[AVCAudioPowerSpectrumMeter unregisterPowerSpectrumForStreamToken:]
-[AVCAudioPowerSpectrumMeter registerPowerSpectrumForCellularTapType:error:]
Platform doesn't support callular tapping
-[AVCAudioPowerSpectrumMeter unregisterPowerSpectrumForCellularTapType:error:]
-[AVCAudioPowerSpectrumMeter setupXPCConnection]
-[AVCAudioPowerSpectrumMeter storeDelegate:delegateQueue:]
com.apple.AVConference.AVCAudioPowerSpectrumMeter.notificationQueue
-[AVCAudioPowerSpectrumMeter setupPowerSpectrumMeter]
-[AVCAudioPowerSpectrumMeter registerBlocksForNotifications]_block_invoke
vcAudioPowerSpectrumServerDidDisconnect
-[AVCAudioPowerSpectrumMeter registerBlocksForNotifications]_block_invoke_2
-[VCMediaStreamRateAdaptation initWithDelegate:params:]
-[VCMediaStreamRateAdaptation configureRateControllerWithConfig:]
-[VCMediaStreamRateAdaptation start]
-[VCServerBag waitForBagLoad]
-[VCServerBag waitForBagLoad]_block_invoke_2
v16@?0@"NSNotification"8
com.apple.facetime
+[VCServerBag checkKeysAgainstHardcodedPrefs:]
+[VCServerBag verifyRequiredKeys:withError:]
No store bag is present so we failed the call.
Missing required store bag keys.
-[VCRedundancyControlAlgorithmAudio processNWConnectionStatistics:]
-[VCRedundancyControlAlgorithmAudio processRCNetworkStatistics:]
-[VCRedundancyControlAlgorithmAudio updateRedundancyPercentageWithPLRThresholds:]
-[VCIDRSchedulerPeriodGroup computeStreamsIDRPosition]
IDR Period Group: BasePeriodCount=%d frames:%d streams:%@
-[VCSession(Messaging) setupAudioEnabledMessages]_block_invoke
-[VCSession(Messaging) setupVideoEnabledMessages]_block_invoke
-[VCSession(Messaging) setupStreamGroupStateFetchMessage]_block_invoke
v32@?0@"NSDictionary"8@"NSError"16@"NSNumber"24
-[VCSession(Messaging) setupAudioPausedMessages]_block_invoke
-[VCSession(Messaging) setupOneToOneEnabledMessages]_block_invoke
-[VCSession(Messaging) setupVideoPausedMessages]_block_invoke
-[VCSession(Messaging) processSymptomFromMessage:participantID:isLocalInitiated:isLocalSideOnly:]
-[VCSession(Messaging) setupSymptomEnabledMessages]_block_invoke
v28@?0@"NSDictionary"8B16@"NSNumber"20
-[VCSession(Messaging) setupWRMAlertUpdateMessage]_block_invoke
-[VCSession(Messaging) setupMomentsMessages]_block_invoke
-[VCSession(Messaging) setupVideoRedundancyMessages]_block_invoke
-[VCSession(Messaging) setupPreferredInterfaceMessage]_block_invoke
-[VCSession(Messaging) setupPiPStateChangeMessage]_block_invoke
-[VCSession(Messaging) setupDisconnectMessage]_block_invoke
/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCSession+Messaging.m
-[VCSession(Messaging) setupMediaQualityDegradedMessage]_block_invoke
-[VCSession(Messaging) handleControlConfigMessage:forParticipantId:]
Received State Update:
-[VCSession(Messaging) remoteCellTechStateUpdate:maxRemoteBitrate:]
-[VCSession(Messaging) setupCellTechChangeMessages]_block_invoke
-[VCSession(Messaging) stateMessageDictionary]
-[VCSession(Messaging) broadcastMediaStateUpdateMessage]
Sending State Update:
VCSessionMessageTopicStreamGroupsState
-[VCSession(Messaging) processStreamGroupStateMessageKey:value:mediaTypeStates:]
-[VCSession(Messaging) processMediaTypeStatesWithMessage:mediaTypeStates:]
-[VCSession(Messaging) processMediaStateMessage:remoteParticipantID:]
{ %s: audioPayloads:%@ chosenAudioPayload:%@ chosenDTXPayload:%@ chosenRedPayloadType:%d             
 packetsPerBundle:%d useRateControl:%d bundlingScheme:%d allowAudioSwitching:%d supportsAdaptation:%d operatingMode:%d isRedEnabled:%d transmitROC:%d ignoreSilence:%d useWifiTiers:%d}
-[AVCMomentsRequest startWithError:]
-[AVCMomentsRequest endWithError:]
-[AVCMomentsRequest rejectWithError:]
-[AVCMomentsRequest initWithMediaType:requesterID:requesteeID:transactionID:]
-[AVCMomentsRequest dealloc]
%@: transactionID[%@] mediaType[%hhu] requesterID[%@] requesteeID[%@]
transactionID is nil
media type is invalid
mode is invalid
AVCMomentsRequest
-[AVCMomentsRequest validateWithError:]
-[VCAudioStreamConfig initWithClientDictionary:]
vcMediaStreamAudioStreamMode
vcMediaStreamEnableMaxBitrateOnNoChangeCMR
vcMediaStreamdtmfTonePlaybackEnabled
vcMediaStreamDTMFTsRate
vcMediaStreamTelephonyServiceSubscriptionSlot
vcMediaStreamAnbrEnabled
vcMediaStreamPreferredMediaBitRate
vcMediaStreamCodecType
-[VCAudioStreamConfig setupCodecWithClientDictionary:]
vcMediaStreamEVSChannelAwareOffset
vcMediaStreamEVSHeaderFullOnly
vcMediaStreamAMRIsOctetAligned
vcMediaStreamAMRDTXEnabled
vcMediaStreamPtime
vcMediaStreamCodecRateModePreferred
vcMediaStreamCodecRateModeMask
vcMediaStreamCodecBandwidthMask
vcMediaStreamNumRedundantPayloads
vcMediaStreamTxRedPayloadType
vcMediaStreamRxRedPayloadType
vcMediaStreamCNEnabled
-[VCAudioStreamConfig setupCNCodecWithClientDictionary:]
vcMediaStreamCNPayloadType
-[VCAudioStreamConfig setupDTMFCodecWithClientDictionary:]
vcMediaStreamDTMFPayloadType
-[VCVideoStreamSendGroup initWithConfig:]
-[VCVideoStreamSendGroup setupRedundancySettings]
Tried to create redundancy controller for mode but VCMediaStreamSendGroupConfig is nil
-[VCVideoStreamSendGroup setupRedundancyControllerForMode:]
-[VCVideoStreamSendGroup uplinkVideoStreamControllerForMode:]
-[VCVideoStreamSendGroup generateKeyFrameWithStreamID:firType:]
-[VCVideoStreamSendGroup updateEnabledState]
-[VCVideoStreamSendGroup setupVideoPriority]
-[VCVideoStreamSendGroup dispatchedUpdateActiveMediaStreamIDs:withTargetBitrate:mediaBitrates:rateChangeCounter:]
VCVSTxTemporalTier
-[VCVideoStreamSendGroup updateUplinkStreamsForPeerSubscribedStreams:]
streamId=%hu quality=%u, %dx%d.
-[VCVideoStreamSendGroup shouldSubscribeToStreamID:peerSubscribedStreams:]
-[VCVideoStreamSendGroup enableRedundancy:]
-[VCVideoStreamSendGroup setCaptureFrameRate:]_block_invoke
-[VCVideoStreamSendGroup startCapture]
VCVideoStreamGroup
-[VCVideoStreamSendGroup stopCapture]
-[VCVideoStreamSendGroup controller:didChangeActiveVideoStreams:]
-[VCVideoStreamSendGroup controller:didChangeActiveVideoStreams:]_block_invoke
v36@?0@"VCMediaStream"8@"NSArray"16@"NSArray"24B32
-[VCVideoStreamSendGroup sourceFrameRateDidChange:]
VCVideoStreamSendGroup_OnVideoFrame
-[VCVideoStreamSendGroup avConferencePreviewError:]
-[VCVideoStreamSendGroup thermalLevelDidChange:]
-[VCVideoStreamSendGroup cameraAvailabilityDidChange:]
-[VCVideoStreamSendGroup redundancyController:redundancyPercentageDidChange:]_block_invoke
-[VCVideoStreamSendGroup redundancyController:redundancyVectorDidChange:]_block_invoke
-[VCVideoStreamSendGroup vcMediaStreamDidRTPTimeOut:]
-[VCVideoStreamSendGroup vcMediaStreamDidRTCPTimeOut:]
-[VCVideoStreamSendGroup vcMediaStreamDidDecryptionTimeOut:]
-[VCVideoStreamSendGroup computeMaxScreenCaptureSize]
-[VCVideoStreamSendGroup maxStreamFrameRate]
-[VCVideoStreamSendGroup collectAndLogChannelMetrics:]
VCNAT64ResolverCleanup
VCNAT64ResolverRegisterForPrefixUpdate
VCNAT64ResolverDeregisterAll
VCNAT64ResolverGetPrefix
VCNAT64ResolverGetSharedInstance
com.apple.VTP.DNSCallbackQueue
com.apple.VTP.DNSRetryQueue
VCNAT64ResolveNAT64Prefix
VCNAT64ResolveNAT64Prefix_block_invoke
VCNAT64ResolveNAT64Prefix_block_invoke_2
v20@?0i8^{?=i[12C]}12
VCNAT64ResolverDeregisterFromInterface
VCSDInfoConstructWithSocket
VCSDInfoIsPacketFromKnownRemote
VCSourceDestinationInfo IPPort mode with IP port: %s-%s isRelay %d, relayChannelNumber %d
VCSourceDestinationInfo BoundSocket mode with socket: %d destination: %s
VCSourceDestinationInfo ConnectedSocket mode with socket: %d
VCSourceDestinationInfo IDSLink mode with datagramChannel:%p datagramToken: %d linkID: %d
VCSourceDestinationInfo NW mode with conn: %p
Unrecogized VCSourceDestinationInfoMode %d
VCSDInfoIsSrcDstInfoMatchedWithIP
VCSDInfoIsSrcDstInfoMatchedWithChannelToken
VCSDInfoIsSrcDstInfoMatchedWithNWConnection
com.apple.AVConference.VCTestMonitorManager.xpcCommandQueue
com.apple.AVConference.VCTestMonitorManager.xpcNotificationQueue
-[VCTestMonitorManager reportSessionMediaDaemonStats:]
-[VCTestMonitorManager registerBlocksForService]_block_invoke_2
-[VCTestMonitorManager registerBlocksForService]_block_invoke
-[VCCaptionsReceiver processCaptionsData:]
-[VCRedundancyControllerAudio initWithDelegate:statisticsCollector:mode:]
UseNWConnectionNotificationForAudioRedundancyController
forceAudioRedundancyPercentage
forceAudioRedundancyInterval
-[VCRedundancyControllerAudio reportRedundancyPercentage:redundancyInterval:]
-[VCControlChannelDialogV1 processMessageFromParticipant:transactionID:messageType:transactionDelegate:]
+[VCControlChannelDialogV1 encryptMessage:buffer:size:sequenceNumber:transactionDelegate:]
-[VCControlChannelDialogV1 newDataFromMessage:topic:transactionID:isReliable:transactionDelegate:]
%@%@%@
+[VCControlChannelDialogV1 newEncryptedMessageFromMessage:sequenceNumber:transactionDelegate:]
+[VCControlChannelDialogV1 sendConfirmationToParticipantID:transactionID:sessionID:transactionDelegate:]
+[VCControlChannelDialogV1 processMessageFromParticipant:transactionID:messageType:sessionID:transactionDelegate:]
-[VCControlChannelDialogV1 decryptMessageWithMKI:message:buffer:size:sequenceNumber:]
-[VCControlChannelDialogV1 processEncryptedPayload:isData:topic:sequenceNumber:MKIData:participantID:]
-[VCControlChannelDialogV1 processMessageData:participantID:topic:transactionID:messageStatus:isInternalMessage:]
Will not
Will
-[VCCALayerHost layoutSublayers]
-[AVCRemoteVideoClient initWithStreamToken:delegate:]
com.apple.avconference.remotevideo
-[AVCRemoteVideoClient dealloc]
-[AVCRemoteVideoClient setVideoLayer:forMode:]
-[AVCRemoteVideoClient slotForMode:]
-[AVCRemoteVideoClient setLayerHostBounds:]
-[AVCRemoteVideoClient createCALayerHostForRootLayer:withContextId:]
AVCRemoteVideoCALayerHost%p
RemoteParticipantVideoLayerScreen
-[AVCRemoteVideoClient setRemoteVideoLayerBounds:]
-[AVCRemoteVideoClient setVideoLayerHost:forMode:]
-[AVCRemoteVideoClient remoteScreenAttributesDidChange:streamToken:]
-[AVCRemoteVideoClient remoteVideoAttributesDidChange:streamToken:]
-[AVCRemoteVideoClient remoteVideoDidPause:streamToken:]
-[AVCRemoteVideoClient remoteMediaDidStall:streamToken:]
-[AVCRemoteVideoClient remoteVideoDidDegrade:streamToken:]
-[AVCRemoteVideoClient remoteVideoDidSuspend:streamToken:]
AVCRemoteVideoSubLayer%p(%d)
-[AVCRemoteVideoClient subLayerRefForMode:]
bounds
-[AVCRemoteVideoClient observeValueForKeyPath:ofObject:change:context:]
-[AVCRemoteVideoClient adjustInfoSubLayerBounds:forSuperLayer:]
AVCRemoteVideoInfoLayer%p(%d)
L:%@ -- R:%@
-[AVCRemoteVideoClient updateConnectionInfoWithLocalInterfaceType:remoteInterfaceType:]
-[AVCRemoteVideoClient drawText:inSubLayer:]
AVCRemoteVideoInfoLayer
Bitrate rule bitrate %u connection type %d limit %@
-[VCBitrateArbiter initWithDeviceRole:callLogFile:]
-[VCBitrateArbiter readStoreBagValues:]
%s: overriding TCP Relay bitrate with storebag value of %d
-[VCBitrateArbiter maxAllowedBitrateForConnectionType:]
-[VCBitrateArbiter maxAllowedBitrateForVCConnection:forLocalInterface:encodeRule:]
Local
Remote
-[VCBitrateArbiter maxAllowedScreenShareBitrateForConnection:]
-[VCBitrateArbiter maxAllowedAudioOnlyBitrateForConnection:]
-[VCBitrateArbiter maxAllowedBitrateRuleForConnection:]
-[VCBitrateArbiter updateNegotiatedSettings:]
-[AVCPacketRelayDriver startMonitoringFileDescriptor:forConnection:]
-[AVCPacketRelayDriver stopMonitoringFileDescriptor:]
-[AVCPacketRelayDriver init]
-[AVCPacketRelayDriver dealloc]
VCCaptionsDecoder_Decode
switches
oneToOneModeSupported
mediaControlInfoSubVersion
1.2.11
ZLibAndGZipCompress
ZLibAndGZipDecompress
VCStatisticsHistory_AddStatsHistory
-[VCStatisticsHistory getPacketLossRateAtTime:inMostRecentDuration:]
-[VCStatisticsHistory getSendingBitrateAtTime:inMostRecentDuration:]
-[VCStatisticsHistory getReceivingBitrateAtTime:inMostRecentDuration:]
-[VCStatisticsHistory getServerStatsBitrateAtTime:inMostRecentDuration:]
-[VCStatisticsHistory getBurstyLossAtTime:inMostRecentDuration:withPercentile:]
VCStatisticsHistory_AddAndPruneSendHistory
VCStatisticsHistory_GetSendHistoryElement
-[VCStatisticsHistory getStatsHistoryElementIndex:time:inMostRecentDuration:]
_VCStatisticsHistory_HandleWrappedAroundByteCountForStats
_VCStatisticsHistory_ResetHistory
-[VCMediaNegotiationBlobV2MomentsSettings(Utils) initWithVideoCodecs:imageTypes:capabilitiesOneToOne:capabilitiesMultiway:]
Moments settings: 
imageTypes
videoCodecs
-[VCMediaNegotiationBlobV2MomentsSettings(Utils) printWithLogFile:prefix:]
%@=[
createDirectory
openLogDump
VRLogfileAlloc
VRLogfileZip
enableZipDump
%s%c%s
Library/Caches/com.apple.VideoConference
/logs/
/var/tmp/AudioCapture/AVC/
+[LogDumpUtility logFilename:dumpID:logNameType:prefix:suffix:]
%04d%02d%02d-%02d%02d%02d-%@-%@%@
%@-%@%@
+[LogDumpUtility createFileListSortedByTimestamp:]
+[LogDumpUtility removeFilesInDirectory:olderThan:]
(.*)(\d{10})(-.*)$
%02d%02d%02d.%06d
_VRLogfileZipToFile
appX
appY
appW
appH
dispID
uiState
uiLayout
displayRect=[%.0f, %.0f, %.0f, %.0f] layout=%u state=%u
-[VCSessionPresentationInfo serialize]
-[VCSessionPresentationInfo unserialize:]
-[VCSessionPresentationInfo setAvcSessionPresentationInfo:]
-[AVCSessionConfiguration setSessionMode:]
vcSessionType
vcSessionParentHierarchyToken
vcSessionConversationID
vcSessionConversationTimeBase
vcSessionConversationTimeBaseTruncated
vcSessionServiceName
vcSessionParentNWActivity
-[VCVideoFrameBufferPool addFrame:time:]
-[VCVideoFrameBufferPool releaseFrameWithTime:]
VCTransportStreamRunLoop
VCTransportStreamRunLoopCreateWithTransportStreams
[VCTransportStreamRunLoop %p]
_VCTransportStreamRunLoopCreateIfNeeded
payloadSpecOrPayloads
streamIndex
requiredPackedPayload
optionalPackedPayload
coordinateSystem
VCAudioReceiver
VCAudioReceiver_CreateReceiver
forceUseInternalRTPThreading
com.apple.avconference.audioreceiver.rtprecvproc
session_%s-participant_%s
VCAudioReceiver_Finalize
_VCAudioReceiver_StartIssueDetector
VCAudioReceiver_Start
VCAudioReceiver_Stop
VCAudioReceiver_GetLatestAudioTimestamp
VCAudioReceiver_SetupDecoders
VCAudioReceiver_RegisterCodecRateModeRequestCallback
VCAudioReceiver_RegisterActiveAudioStreamRequestCallback
VCAudioReceiver_ResetLagReference
VCAudioReceiver_UpdateCellTech
VCAudioReceiver_GetActiveStreamId
VCAudioReceiver_GetPercentPacketsLateAndMissing
VCAudioReceiver_PullAudioSamples
VCAudioReceiver_CollectChannelMetrics
VCAudioReceiver_UpdateStallMetrics
VCAudioReceiver_DiscardQueueExcess
_VCAudioReceiver_SetActiveStream
VCAudioReceiver_CalculateBurstLoss
_VCAudioReceiver_SplitRedPacket
VCAudioReceiver_ReportAWDMetrics
VCAudioReceiver_UpdateWrmMetrics
VCAudioReceiver_GetJitterBufferMetrics
VCAudioReceiver_SendStartCallReport
VCAudioReceiver_SendEndCallReport
VCAudioReceiver_SetMagicCookieForPayload
VCAudioReceiver_SetTargetStreamID
VCAudioReceiver_ProcessCellularNetworkNotification
VCAudioReceiver_ProcessConnectionType
_VCAudioReceiver_Lock
_VCAudioIssueDetectorStopAndFinalize
_VCAudioReceiver_Cleanup
_VCAudioReceiver_RegisterStatistics
_VCAudioReceiver_ProcessWiFiNetworkNotification
_VCAudioReceiver_RegisterTransportCallbacks
v24@?0^v8^{_RTPPacket=i(?={_RTPMediaPacket=iiiSIISBdBBBQ[12S]CC{?=iiBQ}Q{VCBlockBuffer_t=^{OpaqueCMBlockBuffer}Q*}{VCBlockBuffer_t=^{OpaqueCMBlockBuffer}Q*}{VCBlockBuffer_t=^{OpaqueCMBlockBuffer}Q*}BBB}{?=iSd(?={?=SCSCcIIII}{?=SSS[6{?=CS[500S]}]}{?=SS})}){?=^{_RTPPacket}}}16
v24@?0^v8^{_RTCPPacketList=(tagNTP=Q{?=II})C[10^{tagRTCPPACKET}]^{OpaqueCMBlockBuffer}*QI[1472C][12S]CBQ{?=^{_RTCPPacketList}}}16
_VCAudioReceiver_HandleRTPPacket
_VCAudioReceiver_HandleRTPMediaPacket
_VCAudioReceiver_ShouldProcessAudioPacket
_VCAudioReceiver_CompleteStreamSwitch
VCASActiveStreamID
_VCAudioReceiver_SwitchStreamConfigs
_VCAudioReceiver_DecryptAndFillAudioPacket
_VCAudioReceiver_Decrypt
_VCAudioReceiver_ValidateAndEnqueuePackets
_VCAudioReceiver_EnqueuePacket
_VCAudioReceiver_ProcessCMR
_VCAudioReceiver_ParsePacket
_VCAudioReceiver_UpdatePacketHistory
_VCAudioReceiver_HandleRTPBasebandNotificationPacket
_VCAudioReceiver_ProcessAudioRTCPInternal
_VCAudioReceiver_ProcessAudioRTCPSRPacketInternal
_VCAudioReceiver_UnregisterStatistics
_VCAudioReceiver_UnregisterReportingTask
_VCAudioReceiver_RegisterReportingTask_block_invoke
AJQS
XJoW
FrameErasureRate
FrameSpeechErasureRate
JitterErasureRate
WindowedFrameErasureRate
RedErasureCompensationRate
RedRxPlayedCount
RedRxPlayedBytes
FramesPlayedCount
FrameErasureCount
MaxConsecutiveAudioErasures
TimescaleRate
SpeechTimescaleRate
SilenceTimescaleRate
TotalTimescaleCount
TotalExpandTimescaleCount
TotalCompressTimescaleCount
TotalSpeechTimescaleCount
TotalSilenceTimescaleCount
UJBL
RedRxCount
RedRxBytes
RedRxDiscardCount
RedRxDiscardBytes
JitterBufferTargetChanges
ARxR
APktRx
MSTC
MSTT
MMST
forceNOLOG
_VCAudioReceiver_CalculateRTPMetrics
_VCAudioReceiver_GetRTPMetricsFromStreams
_VCAudioReceiver_ComputeExtendedTimestamp
_VCAudioReceiver_ReceiveProc
_VCAudioReceiver_ProcessRTPPacket
_VCAudioReceiver_ProcessRTCPPacket
RTPPacketLossRate
JitterBufferUnderflowRate
Payload
_VCAudioReceiver_CollectAWDMetrics
JitterBufferResidencyTime
JitterPreloadQueue_AudioFrameAlloc
JitterPreloadQueue_AudioPacketAlloc
JitterPreloadQueue_Create
JitterPreloadQueue_Destroy
JitterPreloadQueue_Enqueue
shouldApplyRedAsBoolean
-[VCAudioTransmitter initWithConfig:]
-[VCAudioTransmitter shouldUpdateCodecBitrate:]
-[VCAudioTransmitter shouldUpdateCodecBandwidth:]
-[VCAudioTransmitter handleCodecModeChangeEvent:didUpdateBandwidth:didUpdateBitrate:]
-[VCAudioTransmitter sendCodecModeChangeEvent:]
/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCAudioTransmitter.m
Couldn't setup audio selector
Bad audio payload?
Bad remote payload?
Couldn't allocate memory for audio
Malloc?
Couldn't allocate encode buffer for audio
-[VCAudioTransmitter gatherRealtimeStats:]
ATxR
AFEC
ATxRPrimary
-[VCAudioTransmitter reportRedundancyConfigChange]
DtxFramesTotal
DtxFrameSilent
DtxCompRatio
TxBytesActual
TxBytesEstimate
-[VCAudioTransmitter allocateLastInputSampleBuffer:]
VCAudioTransmitter_PushAudioSamples
-[VCAudioTransmitter chooseAudioNetworkBitrate]
-[VCAudioTransmitter setupAudioTierPicker]
-[VCAudioTransmitter updateAudioTxBitrate]
-[VCAudioTransmitter useAudioPayload:withBitrate:]
rtpsend
-[VCAudioTransmitter start]
-[VCAudioTransmitter stop]
-[VCAudioTransmitter setRedNumPayloads:withMaxDelay:shouldResetHistory:]
-[VCAudioTransmitter redundancyController:redundancyPercentageDidChange:]
-[VCAudioTransmitter processNWConnectionNotification:]
-[VCAudioTransmitter audioIssueDetectorCreateAndConfigure]
-[VCAudioTransmitter audioIssueDetectorStopAndFinalize]
VCAudioTransmitter_ReportAWDMetrics
VCAudioTransmitter_ProcessConnectionType
VCAudioTransmitter_UpdateWrmMetrics
_VCAudioTransmitter_SendAudioBundle
_VCAudioTransmitter_SendAudioPacketWithPayloadLength
_VCAudioTransmitter_SendSframeEncryptedAudioPacket
_VCAudioTransmitter_BundleAndSendSamples
voicedFrameCount
silenceFrameCount
_VCAudioTransmitter_GenerateControlInfo
buffer
ARPLSessionCreate
ARPLSend_internal
reliable
non-reliable
ARPL_Sendto
ARPLSessionRelease
checkSendingSet
com.apple.AVConference.SIP.arplMonitorProc
clientVersion
deviceType
frameworkVersion
osVersion
-[VCEmulatedOutputQueue runUntilTime:]
-[VCEmulatedOutputQueue connectFrom:]
UplinkRateAdaptation
RateIncreaseMonitorPeriod
RateDecreaseMonitorPeriod
RateIncreaseUplinkBLERThreshold
RateDecreaseUplinkBLERThreshold
-[VCTelephonyInterface validateCarrierBundleConfigParameters:forKey:defaultValue:minValue:maxValue:]
-[VCTelephonyInterface setupVCMediaStreamRateAdaptationConfig:]
AVCVirtualTTYDevice
-[AVCVirtualTTYDevice initWithMode:error:streamToken:]
-[AVCVirtualTTYDevice dealloc]
-[AVCVirtualTTYDevice setDelegate:]
-[AVCVirtualTTYDevice start]
-[AVCVirtualTTYDevice stop]
-[AVCVirtualTTYDevice sendCharacter:]
-[AVCVirtualTTYDevice sendText:]
-[AVCVirtualTTYDevice registerBlocksForDelegateNotifications]_block_invoke
vcAudioPayloadConfigKeyPayloadType
vcAudioPayloadConfigKeyInputSampleRate
vcAudioPayloadConfigKeyBlockSize
vcPayloadConfigKeyInternalBundleFactor
vcPayloadConfigKeyDTXEnabled
vcPayloadConfigKeyOctetAligned
vcPayloadConfigKeyUseSBR
vcPayloadConfigKeySampleRate
vcPayloadConfigKeyEVSSIDPeriod
vcPayloadConfigKeyEVSChannelAwareOffset
vcPayloadConfigKeyEVSHeaderFullOnly
vcPayloadConfigKeyCodecBitrates
vcPayloadConfigKeyPreferredBitrate
vcAudioPayloadConfigKeyPayloadTypeOverride
vcAudioPayloadConfigKeyOPUSInBandFecEnabled
vcAudioPayloadConfigKeySupportedBandwidths
-[VCAudioPayloadConfig configure:]
forceAACELDBitrate
-[VCAudioPayloadConfig aacBitrate]
%@ payload=%d blockSize=%d codecSampleRate=%d codecSamplesPerFrame=%d inputSampleRate=%d inputSamplesPerFrame=%d isDTXEnabled=%d octedAligned=%d useSBR=%d, internalBundleFactor=%d initialBitrate=%d
JLagProcessor_Initialize
JLagProcessor_NewStream
JLagProcessor_Process
JLagProcessor_ComputeLag
Moved reference to Secondary 
JLagProcessor_CalculatePacketLag
JLagProcessor_RecordOWRD
JLagProcessor_DetectSpike
JLagProcessor_IsSpikeTimeout
_JTargetJBEstimator_AddLagToHistory
Leaving SPIKE, SpikeSize = %f 
Entering %s SPIKE, earliest Lag = %f
SLOPE
JUMP
_JTargetJBEstimator_GetNewMinLag
_JTargetJBEstimator_DiscardExcessFromHistory
_JTargetJBEstimator_AddLagToCdf
_JTargetJBEstimator_GetJBTargetFromEstimatedTarget
transportStreamStreamTypeKey
-[VCTransportStreamGFT initWithTransportSessionID:options:]
-[VCTransportStreamGFT dealloc]
-[VCTransportStreamGFT VCTransportStreamSendPacket:]
-[VCTransportStreamGFT receivePacket:]
-[VCTransportStreamGFT registerPacketCallbackContext:callback:]
v28@?0i8^v12^{_VTPPacket=d{sockaddr_storage=CC[6c]q[112c]}I{tagIPPORT=i[16c](?=I[16C])S}{tagVPKTFLAG=iIIBBBBii{tagVCSourceDestinationInfo=i(?={?={tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{?=BS}}{?=ii{tagIPPORT=i[16c](?=I[16C])S}i}{?=I{?=cSCSC}B}{?=@})I^{tagVCSourceDestinationInfo}^v}CiiiiiBBB{tagVCIDSChannelDataFormat=[12S]CBSCBBQBBBS{?=SSSSS}BBBQBSBBB}{tagPKT_TAG=[4Q]}I[16C]BB}{VCBlockBuffer_t=^{OpaqueCMBlockBuffer}Q*}}20
-[VCTransportStreamGFT unregisterPacketCallback]
q24@?0@"VCSessionBandwidthAllocationTableEntry"8@"VCSessionBandwidthAllocationTableEntry"16
v32@?0@"NSNumber"8@"VCSessionBandwidthAllocationTableStreamInfo"16^B24
-[VCSessionBandwidthAllocationTable newAggregatedBandwidthTableWithRedundancy:redundancyEnabledFor720Stream:enableMap:]
-[VCSessionBandwidthAllocationTable shouldAppendEntry:screenEncoderGroups:]
-[VCSessionBandwidthAllocationTable printTable:]
-[VCSessionBandwidthAllocationTable printTable:]_block_invoke
v32@?0@"NSNumber"8@"VCSessionBandwidthAllocationTableEntry"16^B24
com.apple.avconference.VCEffectsManager.xpc.commands
-[VCEffectsManager updateThermalLevel:]_block_invoke
-[VCEffectsManager flushRemoteQueue]_block_invoke
vcEffectsFlushRemoteQueue
-[VCEffectsManager capturedPixelBuffer:depthDataPixelBuffer:time:imageData:]
-[VCEffectsManager checkEffectsHealth]
WarpSpeech
SkipSilence
DupSpeech
DupSilence
DupDTX
DiscardSpike
Normal
Suspend
VCAudioPlayer
_VCAudioPlayer_SetPlaybackFormat
_VCAudioPlayer_InitializeBuffers
VCAudioPlayer_Initialize
VCAudioPlayer_NewStream
VCAudioPlayer_Finalize
printMissingAudioPackets
VCAudioPlayer_UpdateLosses
_VCAudioPlayer_PerformQueueGrowth
_VCAudioPlayer_DetectLateFrame
_VCAudioPlayer_HandleHoleDetection
VCAudioPlayer_SetTargetBoostMode
VCAudioPlayer_GetSilenceSamples
_VCAudioPlayerDTMF_GetDTMFSamples
audioQueueManagementMode
_VCAudioPlayer_InitializeQueueSteeringAlgo
audioPlayerQueueTrendingUpThreshold
audioPlayerQueueTrendingDownThreshold
audioPlayerSpeechOnsetOffsetProtectionTime
audioPlayerQueueSteeringMultiplier
enableAudioPlayerDump
.csv
STime,FrameSeqNum,FrameTimestamp,SampleRate,FrameSPF,FrameDtx,InSilence (low energy),FrameCodec,QueuedSamples,LeftOverSamples,AvgQSize,DesiredQSize,SpeechOnsetProtected,SpeechOffsetProtected,SamplesToAdjust,SamplesAdjusted,SamplesRequested,LeftOverSamplesOutput,SamplesNeed,PlayerMode,QueueGrowthMode,DecodeType,SamplesDecoded,DecSkip:Adjust,DecSkip:SamplesOut,SamplesIn,SamplesOut,InputBufferSampleCount,OutputBufferSampleCount,InputBufferTS,OutputBufferTS,IsNilDecode,NilDecodeCount,IsErasure,ErasuresCount,PacketLifeTime,PacketLifetimeCDFBin,PacketLifeTime5Perc,PacketLifeTime10Perc,PacketLifeTimeAvg,PacketLifeTime90Perc,InterArrivalTime,PacketLifetimeIsTrendingUp,PacketLifetimeIsTrendingDown,PacketLifetimeZeroCount,NumberOfPacketsWithHighInterarrival,AvgQSizeInSec,DesiredQSizeInSec,Underflow,ErasuresCountShortWindow,ErasuresCountLongWindow,QueueSteeringOffset,ShouldGrowQueue,ShouldShrinkQueue,ShouldProactivelyShrinkQueue,CurrentIndex,packetLifetimeIsLow,SpikeNeedsProtection,MinimumQueueSizeProtected,QueueSteeringIsPositive,NewSpikeDetected,ExitedSpike,queueGrewDueToSpike,SpikeDetected,SteeringNegativeWithErasures,LowQueueSize,HighQueueSize,ErasuresLongTermIsZero,ErasuresShortTermIsZero,ErasureReduced,TenPercentileHigherThanMin,FivePercentileHigherThanMin,NinetyPercentileHigherThanTarget,PacketLifetimeAvgHigherThanTarget,NegativeQueueSteeringWithErasures,SomePacketsHadZeroPacketLifetime,HasHighInterarrivalFrames,FirstSpeechPacketLifetime,IsNormalPacketFlow,JitterIsLow,MinQueueSizeBuildThreshold,IsMinQueueRebuilt,QueueSizeThresholdMet,PacketLifetimeThresholdMet,ShouldExitQueueGrowth,Channel1Rms,Channel2Rms,Channel1RmsAvg,Channel2RmsAvg,EnergyDecayFactor,Rms,RmsAvg,
_VCAudioPlayer_ShouldPerformQueueGrowth
_VCAudioPlayer_FillSilenceBuffer
Warning: Jitter Queue underflow detected. UnderflowCount=%d  lastDecodedTimestamp=%u
%s, %u, %u, %d, %d, %d, %u, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %s, %s, %s, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %f, %d, %f, %f, %f, %f, %f, %d, %d, %d, %d, %f, %f, %d, %d, %d, %f, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %d, %f, %f, %f, %f, %f, %f, %f 
NilDecode
FrameDecode
SpkrProc: GetSamples
_VCAudioPlayer_GetAudioSamples
Warning: Timestamp did not increment! prevTimestamp=%d
_VCAudioPlayer_CalcAdjustment
_VCAudioPlayer_ProtectMinimumQueue
_VCAudioPlayer_RunQueueSteeringAlgo
_VCAudioPlayer_HandleQueueSteeringReset
_VCAudioPlayer_SteerQueueCommand
_VCAudioPlayer_ExecuteQueueSteering
Proactively 
_VCAudioPlayer_DiscardSamples
Warning: JQ too high, discarding. CurrentJQSize:%f currentTime:%f lastSpkrCallback:%f
Critical: Average JB queue size is negative!
_VCAudioPlayer_DecodeSamples
Warning: Timeout in decoder loop. Updating samplesToDecode to %d
Critical: Invalid samplesToDecode=%d samplesNeed=%d, inputBuffer.playbackBuffer=%p, inputBuffer.samples=%d, decoded=%d
Invalid samplesToDecode
Warning: Late packet %s. %.01fms (%u - %u %u %d %u) (Jitter Size = %f) DTX %d Seq num %d
dropped
played out
_VCAudioPlayer_DecodeSpeech
SpkrProc: SoundDec_Decode
Warning: Sound decoding failed. Timestamp=%d SeqNumber=%d DTX=%d
_VCAudioPlayer_HandleComfortNoiseTransition
_VCAudioPlayer_UpdateOpusDecodeFECStatus
_VCAudioPlayer_AddFrameToHistory
_VCAudioPlayer_CalculateQueueSteeringKPIs
_VCAudioPlayer_CalcPacketLifeTimeCDFs
_VCAudioPlayer_UpdateBurstInfo
_VCAudioPlayer_DecodeSilence
Warning: Nil decoding failed
_VCAudioPlayer_GetSilenceBufferSampleCount
_VCAudioPlayer_UpdateSilenceDecodeMetrics
_VCAudioPlayer_PerformPostDecodeActions
_VCAudioPlayer_UpdateMultiChannelRMS
_VCAudioPlayer_UpdateMultiChannelAverageEnergy
Warning: Active Speech Timescaling did not complete! Result=%d
SpkrProc: Skip Silence
SpkrProc: Dup
SpkrProc: Copy
_VCAudioPlayer_DecodeSkipSilence
_VCAudioPlayer_DecodeDup
Critical: Average JB queue size is negative!. Current size: %f new size: %f samplesDelta: %d needed samples: %d audioPlayer mode: %d silent: %d
_VCAudioPlayer_UpdateAvgQueueSize
Critical: Number of samples in the input buffer would have become negative! samples=%d samplesIn=%d
_VCAudioPlayer_UpdateInputBuffer
_VCAudioPlayer_UpdateOutputBuffer
Critical: Number of samples in the output buffer would have become negative! samples=%d sampleCount=%d
_VCAudioPlayer_FinalizeOutputBuffer
Critical: Number of samples in the output buffer became negative! samples=%d sampleCount=%d
PacketThread_Create
com.apple.avconference.packetThread.%s
_PacketThread_StorePacket
PacketThread_SendPacket
PacketThread_Destroy
PacketThread_AllocatePacketBuffer
SendPacketsProc
_PacketThread_PullPacket
forceScreenHWI
-[VCDefaults forceScreenHWI]
forceDisableThermal
ARCaptureEnabled
forceMirroredCapture
forceEnablePearlCamera
forceDisableVideoRuleWiFi1080
forceDisableVideoRuleCell720
forceThermalLevelFramerate
enableBitstreamCapture
enableRxDecodeYUVDump
-[VCDefaults enableRxDecodeYUVDump]
enableVPBLogging
enableRecvBitstreamDump
enableTxSourceYuvDump
-[VCDefaults enableTxSourceYuvDump]
enableTxBitstreamDump
enablePacketLogging
extraPL
enableTxTimestampAlignmentLogs
encodingScore
canDecodeHD
disableVAD
bundleAudio
-[VCDefaults bundleAudio]
AllowAudioRecording
-[VCDefaults audioRecordingEnabled]
forceAudioPayload
forceAudioBitrate
forceAudioPacketsPerBundle
forceHWAudioSampleRate
audioPowerThreshold
audioPowerTimeInterval
forceUseFloat
disableAudioPowerSpectrumRegister
disableRed
forceRedNumPayloads
forceRedMaxDelay
forceAACELDFrames
forceVideoStreamResolution
forceVideoStreamTxMaxBitrate
forceVideoStreamTxMinBitrate
forceVideoStreamFramerate
forceVideoStreamKeyFrameInterval
forceVideoStreamRxMaxBitrate
forceVideoStreamRxMinBitrate
forceVideoStreamDisableBitrateCap
forceVideoStreamPayload
enableHEIFAndHEVCForMoments
videoStreamRateControlDumpEnabled
videoStreamRateControlAlgorithm
forceDisableMediaQueue
enableMediaQueueDump
rateControllerType
rateControlStatisticsQueueWaitTime
enableBWEDump
forcedRxCap
forcedRxRate
basebandSlowDownFactor
forcePacketExpirationTime
forceVideoRedundancyPercentage
max2GRate
forceIPv6
enableiRATSuggestion
localWRMLinkType
localRATTypeOverride
enableGFTStatsReporting
enableGFTStatsReceiveThread
pauseHeartbeatInterval
shouldDisplayVideoInfoLayer
forceWiFiAssist
kVCDefaultForceWiFiAssistOutOfBudget
FaceTimePhotosEnabled
dumpMediaBlob
CameraVideoStabilization
ForceOneToOneMode
SupportsOneToOneMode
TelephonyUtilities
conversationOneToOneModeEnabled
-[VCDefaults supportsOneToOneMode]
MaxActiveVideoEncoders
MaxActiveVideoDecoders
ForceEVSWideBand
forceMuteAtStart
minParticipantCountSendVoiceActiveOnly
forceFECRepairStream
enableAudioDumpParticipantRemote
enableAudioDumpParticipantLocal
forceDisableMediaPriority
audioPriorityDecaySlow
audioPriorityDecayFast
audioPriorityRampUp
audioVoiceDetectionSensitivity
silenceLevelMovingAveragePeriod
forceAudioPriorityValue
-[VCDefaults forceAudioPriorityValue]
forceAudioPriorityEnabled
multiwayAudioNetworkBitrateCapWifi
multiwayAudioNetworkBitrateCapCellular
multiwayVideoNetworkBitrateCapWifi
multiwayVideoNetworkBitrateCapCellular
forceDisableFaceZoom
forceDynamicEffectsFrameRate
depthFrameRateMultiplier
forceDisableEffectsHealthCheck
forceDisableVideoDegraded
forceDisableMediaStalled
effectsFrameRate
-[VCDefaults shouldOverrideEffectsFramerate:]
forceDisableMediaEncryption
forceDisableMessageEncryption
forceDisableReporting
disableProcessSpecificRequirements
forceDisableSSRCCollisionDetection
prominenceActiveProbabilityThreshold
-[VCDefaults prominenceActiveProbabilityThreshold]
prominenceActiveAccumulationThreshold
prominenceInactiveProbabilityThreshold
prominenceInactiveAccumulationThreshold
remoteMediaStallTimeout
VCDefaults_GetDoubleValueForKey
_VCDefaults_GetBoolValueForKey
VCDefaults_GetIntValueForKey
VCDefaults_CopyValueForKey
Message
EncryptedMessage
EncryptedData
Status
TransactionID
VCExternalClientDataTopic
com.apple.VideoConference.VCControlChannel.AsyncProcessingQueue
flushActiveMessages:
Not supported method %@
Class VCControlChannel should not be instantiated directly. Use VCControlChannelFaceTime or VCControlChannelMultiWay instead.
sendReliableMessageAndWait:
sendReliableMessage:
sendReliableMessageAndWait:participantID:
sendReliableMessage:participantID:
sendReliableMessage:withTopic:participantID:timeout:completion:
sendUnreliableMessage:participantID:
setEncryptionWithEncryptionMaterial:
UnderlyingVFD
VCTransportStreamVTPCreate
_VCTransportStreamVTPFinalize
_VCTransportStreamVTPCopyProperty
_VCTransportStreamVTPCopyIsIPv6
_VCTransportStreamVTPCopyReceiveHopLimitEnabled
_VCTransportStreamVTPSetProperty
_VCTransportStreamVTPSetReceiveHopLimitEnabled
_VCTransportStreamVTPSetSendFailedHandler
_VCTransportStreamVTPSend
_VCTransportStreamVTPSendOnePacket
_VCTransportStreamVTPSetPacketFilter
_VCTransportStreamVTPSetRemoteSSRCOnVFD
_VCTransportStreamVTPSetPayloadListOnVFD
_VCTransportStreamVTPSetLocalSSRCOnVFD
_VCTransportStreamVTPSetCellularUniqueTagOnVFD
_VCTransportStreamVTPCopyPacketFilter
_VCTransportStreamVTPSetReceivedHandler
_VCTransportStreamVTPPerformReceive
_VCTransportStreamVTPHandlePacketReceived
_VCTransportStreamVTPActivate
_VCTransportStreamVTPRegisterPacketCallback
_VCTransportStreamVTPDeactivate
-[VCMediaControlInfo configureWithBuffer:length:optionalControlInfo:]
-[VCMediaControlInfo setInfo:size:type:]
-[VCMediaControlInfo hasInfoType:]
-[VCMediaControlInfo getInfo:bufferLength:infoSize:type:]
HRESULT VCMediaControlInfo_SerializeBuffer(VCMediaControlInfo *, uint8_t *, size_t, size_t *)
VCMediaControlInfo_SerializedSize
VCMediaControlInfoIPCamera_SerializedSize
VCMediaControlInfoIPCamera_SerializeBuffer
VCMediaControlInfoSerializeWithData
VCMediaControlInfoUnserializeWithData
VCMediaControlInfoFaceTimeAudio_SerializedSize
_version = %u, _bitmap 0x%x. :
Feedback parameters: 
     %25s = %10d
timeStamp
receiveQueueTarget
audioReceviedPkts
audioBurstLoss
totalReceviedKbits
videoReceviedPkts
videoBurstLoss
bandwithEstimation
Media Queue parameters: 
owrd
queuingDelay
sendTimestamp
     %25s = 0x%8x
connectionStatsBuffer
-[VCMediaControlInfoFaceTimeAudio configureWithBuffer:length:optionalControlInfo:]
-[VCMediaControlInfoFaceTimeAudio getInfoUnserialized:type:]
-[VCMediaControlInfoFaceTimeAudio setInfo:size:type:]
-[VCMediaControlInfoFaceTimeAudio setInfoUnserialized:type:]
-[VCMediaControlInfoFaceTimeAudio getInfo:bufferLength:infoSize:type:]
VCMediaControlInfoFaceTimeAudio_SerializeBuffer
VCMediaControlInfoFaceTimeVideo_SerializedSize
camera status %08X size %ld, 
LTR bits %08X size %ld, 
LTR timestamp %08X size %ld, 
Frame Support Information 
Total # Packets Per Frame
Frame Sequence Number
FEC size %ld, 
probe %08X, size %ld, 
-[VCMediaControlInfoFaceTimeVideo configureWithBuffer:length:optionalControlInfo:]
VCMediaControlInfoFaceTimeVideo_SerializeBuffer
VCMediaControlInfoMultiwayAudio_SerializedSize
ROC %08X size %ld, 
MKI %08X size %ld, 
-[VCMediaControlInfoMultiwayAudio configureWithBuffer:length:optionalControlInfo:]
VCMediaControlInfoMultiwayAudio_SerializeBuffer
-[VCVideoRuleCollectionsScreenSecondaryEmbedded initWithHardwareSettings:]
-[VCVideoRuleCollectionsScreenSecondaryEmbedded selectPreferredRule:screenSize:]
-[VCVideoRuleCollectionsScreenSecondaryEmbedded setupH264Rules]
iPadWiFiScreenEncodingRules
iPadWiFiScreenDecodingRules
-[VCCallSession(VideoConferencing) processBlackFrame:]
ComputeVisibleAspectRatioWithRemoteScreenAspectRatio
Targetbitrate
BandwidthEstimation
-[AVCSession dealloc]
%@: transportToken[%@] configuration[%@]
-[AVCSession setAudioMuted:]
-[AVCSession setVolume:]
-[AVCSession setOneToOneEnabled:]
-[AVCSession setOneToOneEnabled:]_block_invoke
-[AVCSession setOneToOneEnabled:]_block_invoke_2
-[AVCSession setAudioEnabled:]
-[AVCSession setVideoEnabled:]
-[AVCSession setScreenEnabled:]
-[AVCSession setAudioPaused:]
-[AVCSession setVideoPaused:]
forceMediaNegotiatorVersion
+[AVCSession mediaNegotiatorVersionWithNegotiationProtocolVersion:]
-[AVCSession negotiationDataForProtocolVersion:]
-[AVCSession setPresentationInfo:]
-[AVCSession setPresentationInfo:]_block_invoke
-[AVCSession initPrivateWithTransportToken:configuration:negotiationData:delegate:queue:]
%@%u
com.apple.AVConference.AVCSession.stateQueue
-[AVCSession setMediaState:forMediaType:]
-[AVCSession addParticipant:]
-[AVCSession addParticipants:]_block_invoke
/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/AVCSession.m
-[AVCSession removeParticipants:]_block_invoke
-[AVCSession start]_block_invoke
-[AVCSession stopWithError:]_block_invoke
-[AVCSession updateConfiguration:]_block_invoke
-[AVCSession beginParticipantConfiguration]_block_invoke
-[AVCSession endParticipantConfiguration]_block_invoke
-[AVCSession validateParticipantConfiguration]
-[AVCSession didAddParticipantHandlerWithResult:]
ParticipantID is nil
Participant is nil
streamTokens is nil
Spatial source ID map is nil
-[AVCSession didAddParticipantHandlerWithResult:]_block_invoke
-[AVCSession registerBlocksForNotifications]_block_invoke
vcSessionServerDidDisconnect
-[AVCSession registerBlocksForNotifications]_block_invoke_2
com.apple.AVConference.AVCSession.notificationQueue
-[AVCSession participant:audioEnabled:didSucceed:error:]
-[AVCSession participant:videoEnabled:didSucceed:error:]
-[AVCSession participant:screenEnabled:didSucceed:error:]
-[AVCSession participant:audioPaused:didSucceed:error:]
-[AVCSession participant:videoPaused:didSucceed:error:]
-[AVCSession participant:mediaStateDidChange:forMediaType:didSucceed:error:]
-[AVCSession participant:mediaPrioritiesDidChange:]
framerate
formatDescription
-[VCStreamInputCaptureSource initWithCaptureSourceID:configuration:]
+[VCStreamInputCaptureSource readIntegerFromConfig:key:value:]
+[VCStreamInputCaptureSource readUint32FromConfig:key:value:]
-[VCStreamInputCaptureSource setupFormatWithConfiguration:]
-[VCStreamInputCaptureSource setupVideoFormatWithConfiguration:]
-[VCStreamInputCaptureSource setupDataFormatWithConfiguration:]
-[VCStreamInputCaptureSource setDelegate:]
AVCVideoStream
socketsDictionary=%s, callID=%s, error=%s
-[AVCVideoStream initWithNetworkSockets:callID:error:]
socketsDictionary=%s, options=%s, error=%s
-[AVCVideoStream initWithNetworkSockets:options:error:]
clientID=%s, options=%s, error=%s
-[AVCVideoStream initWithNWConnectionClientID:options:error:]
clientID may not be nil
-[AVCVideoStream initWithIDSDestination:callID:error:]
-[AVCVideoStream initWithLocalAddress:networkSockets:IDSDestination:connectionClientID:callID:options:error:]
com.apple.avconference.avcvideostream.callback.queue
-[AVCVideoStream dealloc]
-[AVCVideoStream configure:error:]
/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/AVCVideoStream.m
-[AVCVideoStream start]
AVCVideoStream hasn't been configured
-[AVCVideoStream stop]
-[AVCVideoStream pause]
-[AVCVideoStream resume]
-[AVCVideoStream updateVideoConfiguration:]
videoConfig=%s
-[AVCVideoStream requestLastDecodedFrame]
-[AVCVideoStream setDirection:]
-[AVCVideoStream setRtcpEnabled:]
-[AVCVideoStream setRtpTimeOutEnabled:]
-[AVCVideoStream setRtcpTimeOutEnabled:]
-[AVCVideoStream setRtpTimeOutIntervalSec:]
-[AVCVideoStream setRtcpTimeOutIntervalSec:]
-[AVCVideoStream setRtcpSendIntervalSec:]
-[AVCVideoStream registerBlocksForDelegateNotifications]_block_invoke
Calling -stream:didStart:error:
vcMediaStreamLastDecodedFrame
vcMediaStreamDidGetLastDecodedFrame
-[AVCVideoStream vcMediaStream:didStartStream:error:]
-[AVCVideoStream vcMediaStreamDidStop:]
Calling -streamDidStop:
-[AVCVideoStream vcMediaStream:didPauseStream:error:]
-[AVCVideoStream vcMediaStream:didResumeStream:error:]
-[AVCVideoStream vcMediaStreamDidRTPTimeOut:]
-[AVCVideoStream vcMediaStreamDidRTCPTimeOut:]
-[AVCVideoStream vcMediaStream:didReceiveRTCPPackets:]
-[AVCVideoStream vcMediaStream:downlinkQualityDidChange:]
-[AVCVideoStream vcMediaStream:uplinkQualityDidChange:]
stream=%s, didUpdateVideoConfiguration=%d, error=%s, configDict=%s
-[AVCVideoStream vcMediaStream:didUpdateVideoConfiguration:error:dictionary:]
-[AVCVideoStream vcMediaStreamServerDidDie:]
-[VCAudioStreamReceiveGroupConfig init]
-[VCTextStreamConfig initWithClientDictionary:]
vcMediaStreamTextCodecType
vcMediaStreamTextNumRedundantPayloads
vcMediaStreamTextTxRedPayloadType
vcMediaStreamTextRxRedPayloadType
vcMediaStreamTextTxIntervalMin
skipTerminationTimer
%@(%p) Timeout=%d
-[VCObject startTerminationTimer:terminationType:]
-[VCObject startTerminationTimer:terminationType:]_block_invoke
Termination Timeout - %@ type=%d
-[VCObject stopTerminationTimer]
+[VCObject terminateProcess:terminateSource:agent:]
-[VCHardwareOperatingModeSettings numTilesPerVideoFrameForHDRMode:]
-[VCHardwareSettings init]
-[VCHardwareSettings storeHardwareSettingsForAllOperatingModes]
maxCameraFrameRateWhenScreenIsEnabled
enableSpatialAudio
+[VCHardwareSettings isSpatialAudioSupported]
ftvSpatialAudioEnabled
+[VCHardwareSettings isCaptureSIFRPreferred]
SiriAudio
+[VCHardwareSettings isSiriVoiceTapSupported]
+[VCHardwareSettings isSiriVoicePlayoutSupported]
Payload:%d %@ %@ rules
encoding
decoding
-[VCVideoRuleCollections init]
-[VCVideoRuleCollections filterRules:byBitrateRule:]
VCVideoRuleCollections description: count = %lu.
  encodingType = %d, payload = %d, transportType = %d, rules = 
%dx%d@%u 
v32@?0@"VCVideoRuleCollectionKey"8@"NSArray"16^B24
-[VCVideoRuleCollections limitVideoRulesToMaxWidth:maxHeight:transportType:]
vcSessionParticipantKeyMediaBlob
vcSessionParticipantKeyMediaNegotiationData
vcSessionParticipantKeyCallInfoBlob
-[VCSessionParticipant callDelegateWithBlock:]
-[VCSessionParticipant logAllStreamTokens]
-[VCSessionParticipant startOneToOneStreams]_block_invoke
-[VCSessionParticipant dispatchedStartOneToOneStreams]
-[VCSessionParticipant startMultiwayStreams]
-[VCSessionParticipant dispatchedStart]
/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCSessionParticipant.m
-[VCSessionParticipant dispatchedStop]
-[VCSessionParticipant dispatchedSetAudioEnabled:]
-[VCSessionParticipant dispatchedSetVideoEnabled:]
-[VCSessionParticipant dispatchedSetScreenEnabled:]
-[VCSessionParticipant dispatchedSetAudioPaused:]
-[VCSessionParticipant dispatchedSetVideoPaused:]
-[VCSessionParticipant dispatchedSetMediaState:forMediaType:]
+[VCSessionParticipant participantDataWithMediaNegotiatorVersion:participantData:]
+[VCSessionParticipant participantDataWithParticipantData:isReinit:]
+[VCSessionParticipant streamGroupIDsFromParticipantData:]
%@[%p] idsDestination[%@] idsParticipantID[%llu] participantUUID[%@] state[%s]
-[VCSessionParticipant stopInternal]
-[VCSessionParticipant startAudioIO]
-[VCSessionParticipant stopAudioIO]
-[VCSessionParticipant updateStreamGroups:]
-[VCSessionParticipant isActiveMediaType:]
-[VCSessionParticipant isStreamGroupActive:]
-[VCSessionParticipant updateActiveStateForStreamGroup:]
-[VCSessionParticipant startStreamGroups]
-[VCSessionParticipant startScreenGroup]
-[VCSessionParticipant stopScreenGroup]
-[VCSessionParticipant stopAudioStreams]
-[VCSessionParticipant setupAudioStreamConfiguration:audioRules:]
-[VCSessionParticipant newOneToOneVideoStreamMultiwayConfiguration:streamGroupId:videoSettings:streamDirection:]
-[VCSessionParticipant newOneToOneAudioStreamConfigWithAudioSettings:streamDirection:streamGroupId:streamSsrc:]
rtcpPSBFForLossFeedbackEnabled
rtcpPSBFForLTRAckEnabled
-[VCSessionParticipant newOneToOneVideoStreamConfigWithStreamDirection:streamGroupId:streamSsrc:encodingType:videoSettings:]
-[VCSessionParticipant setupSecurityKeyHolderForStreamConfig:]
-[VCSessionParticipant completeStreamSetup:]
-[VCSessionParticipant configureAudioIOWithDeviceRole:operatingMode:]
-[VCSessionParticipant updateConfigurationWithDeviceRole:]_block_invoke
-[VCSessionParticipant configureOneToOneAudioStreamsWithDeviceRole:streamInfoArray:]
-[VCSessionParticipant newVideoRateControlConfigWithMediaControlInfoVersion:enableMediaControlInfoGenerator:enableFeedbackController:isOneToOne:]
-[VCSessionParticipant configureOneToOneVideoStreamsWithDeviceRole:streamInfoArray:]
-[VCSessionParticipant configureOneToOneWithConfig:]
-[VCSessionParticipant configureWithDeviceRole:negotiatedVideoEnabled:negotiatedScreenEnabled:operatingMode:]_block_invoke
-[VCSessionParticipant dispatchedConfigureWithDeviceRole:negotiatedVideoEnabled:negotiatedScreenEnabled:operatingMode:]
-[VCSessionParticipant configureStreamInfosForMultiway:streamGroupID:]
-[VCSessionParticipant configureMultiwayStreamGroups]
-[VCSessionParticipant initWithConfig:delegate:]
com.apple.AVConference.vcSessionParticipantQueue
-[VCSessionParticipant dealloc]
-[VCSessionParticipant updateMediaStatesWithConfig:]
-[VCSessionParticipant setupMediaTypeSettingsWithConfig:]
forceAudioBlockSize
forceAudioSampleRate
-[VCSessionParticipant setState:]
-[VCSessionParticipant applyVideoEnabledSetting:]
-[VCSessionParticipant applyScreenEnabledSetting:]
-[VCSessionParticipant streamGroupsForMediaType:]
-[VCSessionParticipant streamGroupsForIDs:]
-[VCSessionParticipant applyMediaState:forMediaType:]
-[VCSessionParticipant updateMediaState:forStreamGroups:]
-[VCSessionParticipant updateVideoPaused:]
+[VCSessionParticipant mediaStreamGroupStateToVCStreamGroupState:]
-[VCSessionParticipant setBasebandCongestionDetector:]
-[VCSessionParticipant createRedundancyControllers]
-[VCSessionParticipant collectVideoChannelMetrics:]
-[VCSessionParticipant collectAudioChannelMetrics:]
-[VCSessionParticipant setupMediaSyncForStreamGroup:]
-[VCSessionParticipant swapScreenStreamGroupSyncSourceWithState:]
-[VCSessionParticipant vcMediaStream:requestKeyFrameGenerationWithStreamID:firType:]
-[VCSessionParticipant resetDecryptionTimeout]
-[VCSessionParticipant pullAudioSamples:]
-[VCSessionParticipant pushAudioSamples:]
-[VCSessionParticipant redundancyController:redundancyIntervalDidChange:]
-[VCSessionParticipant redundancyController:redundancyPercentageDidChange:]
-[VCSessionParticipant didUpdateBasebandCodec:]
-[VCSessionParticipant handleRemoteOneToOneSwitchWithStreamGroup:fromStreamID:toStreamID:]
-[VCSessionParticipant streamGroup:didChangeMediaPriority:]
-[VCSessionParticipant didChangeSendingStreamsForStreamGroup:]
-[VCSessionParticipant didMediaDecryptionTimeOutForStreamGroup:]
-[VCSessionParticipant streamGroup:didRemoteEnableChange:]
-[VCSessionParticipant streamGroup:didRemotePauseChange:]
-[VCSessionParticipant streamGroup:didSwitchFromStreamID:toStreamID:]
-[VCSessionParticipant didChangeReceivingStreamsForStreamGroup:]
-[VCSessionParticipant didChangeActualNetworkBitrateForStreamGroup:]
-[VCSessionParticipant streamGroup:didRequestRedundancy:]
-[VCSessionParticipant streamGroup:requestKeyFrameGenerationWithStreamID:firType:]
-[VCSessionParticipant didDecryptionTimeOutForMKMRecoveryForStreamGroup:]
-[VCSessionParticipant streamGroup:didSuspendStreams:]
-[VCSessionParticipant streamGroup:remoteMediaStalled:duration:]
AVCPacketRelayDriverThreadStart
com.apple.avconference.AVCPacketRelayDriverProc
AVCPacketRelayDriverThreadStop
int AVCPacketRelayDriverThreadStop(void)
AVCPacketRelayDriverThreadAddFileDescriptorWithConnection
int AVCPacketRelayDriverThreadAddFileDescriptorWithConnection(int, id<AVCPacketRelayConnectionProtocol>)
AVCPacketRelayDriverThreadRemoveFileDescriptor
int AVCPacketRelayDriverThreadRemoveFileDescriptor(int)
AVCPacketRelayDriverProc
-[VCAudioSessionMediaProperties isEqual:]
%@: sampleRate=%f blockSize=%f, operatingMode=%d, VP=%d, sampleRateIn=%f, inputFormat=%s, sampleRateOut=%f, outputFormat=%s, processId=%d, active=%d
-[VCTransportSessionIDSSingleLink handleLinkConnectedWithInfo:]
-[VCTransportSessionIDSSingleLink handleLinkDisconnectedWithInfo:]
-[VCTransportSessionIDSSingleLink onStart]
-[VCTransportSessionIDSSingleLink createVFD:forStreamType:]
-[VCTransportSessionIDSSingleLink updateTransportStream:]
isTimeoutExpired
_VCTimescaleWSOLA_SearchMinimumCostPosition
_VCTimescaleWSOLA_PerformAdaptation
VCTimescaleWSOLA_Initialize
VCTimescaleWSOLA_Adapt
VCTimescaleWSOLA_CheckCompression
SpkrProc: Warping
wsolaStartCompressionThreshold
wsolaCompressionHysteresis
wsolaStopCompressionThreshold
_VCTimescale_InitializeWsolaWarpConverter
_VCTimescale_DecodeWarpWsola
_VCTimescaleWSOLA_TailSize
SpkrProc: WsolaTail
+[AVCAudioStreamConfig streamModeWithClientStreamMode:]
vcMediaStreamMaxPtime
vcMediaStreamLatencySensitiveMode
force444
-[AVCVideoStreamConfig dictionary]
force444-10bit
force420
+[AVCVideoStreamConfig isPixelFormatValid:hdrMode:]
+[AVCTextStreamConfig codecTypeWithClientCodecType:]
VCWCMClientQueue
-[SDPParser parseMediaLineHeader:mediaType:supportedPayloads:rtpPort:]
com.apple.VideoConference.vctransport
com.apple.VideoConference.vctransport.dataReceivedHandlerQueue
NewConnection
NewCandidates
NewNomination
RemoveIPPort
-[VCTransport iceShouldNominateNewCandidate:forCallID:interfaceMask:nominated:demote:connectionPriority:replaceOnly:]_block_invoke
-[VCTransport iceRemoveIPPort:forCallID:isLocalInterface:]_block_invoke
static
_VCJitterBuffer_GetJBTargetFromEstimatedTarget
_VCJitterBuffer_GetMinMaxQueueSizeFromConfig
VCJitterBuffer_Create
.jbdump
STime
Timestamp
Bundling
NetworkType
FirstTimestamp
Wraps
IsRed
AvgLag
MaxLag
MinLag
JumpThresh
SlopeThresh
Flat
ClippedLag
MinLagAdjustment
MinClipThreshold
JBMin
JBMax
TargetJ
RedOverheadInTargetJ
TargetJQSize
JQSize
AvgJQSize
ERASURE
MODE
Payload Type
Seq Number
INTS
OUTTS
LeftOverSamples
Prominence
StreamID
TargetSizeIndependent
AVSyncOffset
IntermittentState
SingleOutagePeriod
EstimatedIntermittentPeriod
TargetBoostMode
audioJitterBufferWeightedAvgQSizeFactor
VCJitterBuffer_Finalize
VCJitterBuffer_QueueSteeringCallback
VCJitterBuffer_InitializePlayback
VCJitterBuffer_Reset
VCJitterBuffer_DiscardQueueExcess
VCJitterBuffer_SetRedAudioDelayInSamples
VCJitterBuffer_Flush
VCJitterBuffer_ResetPlaybackReportingMetrics
VCJitterBuffer_ResetJitterQueueUnderflowRate
VCJitterBuffer_EnqueuePacket
State = RESET
forceJitterBufferSize
VCJitterBuffer_PlaybackGetSamples
VCJitterBuffer_GetAWDReportingMetrics
VCJitterBuffer_GetWRMReportingMetrics
VCJitterBuffer_GetPlaybackReportingMetrics
VCJitterBuffer_GetReportingMetrics
Red Rx Stats, redAudioFramesReceived = %d , redAudioBytesReceived = %d , redAudioFramesDiscarded = %d , redAudioBytesDiscarded = %d 
VCJitterBuffer_SetMode
VCJitterBuffer_SetNetworkType
VCJitterBuffer_ProcessWiFiNetworkNotification
VCJitterBuffer_ProcessCellularNetworkNotification
VCJitterBuffer_SetSkipDecodeOnSilence
VCJitterBuffer_AudioPacketAlloc
VCJitterBuffer_AudioFrameAlloc
VCJitterBuffer_AudioPacketFree
VCJitterBuffer_GetMinJitterBufferQueueSize5G
kVCDefaultJitterBufferMinQueueSize5G
_VCJitterBuffer_UpdateDiscardAlgoParams
%02.6f
%02.6f
%02.6f
%02.6f
%02.4f
%02.4f
%02.6f
%02.6f
%02.6f
%02.4f
%02.4f
%02.4f
%02.4f
%02.4f
%02.6f
%02.4f
%2.6f
%2.6f
_VCJitterBuffer_DequeuePacketsFromPreloadQueue
SpkrProc: PreloadQueue_Dequeue and AddPacket
SpkrProc: PreloadQueueDequeue
SpkrProc: PreloadQueueDequeue Loop, Iterations = %d
_VCJitterBuffer_UpdateRedAudioArrivalTime
SpkrProc: _VCJitterBuffer_UpdateAudioQSize
_VCJitterBuffer_ApplyQueueManagementPolicy
_VCJitterBuffer_ShouldAdjustAudioQueuSizeForRed
_VCJitterBuffer_UpdateAvgQSize
SpkrProc: UpdateAvgQSize
kAUVoiceIOProperty_MediaPlaybackOnExternalDevice
com.apple.AVConference.AVAudioClient.AudioSessionQueue
AVCAudioClient
-[AVAudioClient initSharedInstance]
-[AVAudioClient init]
-[AVAudioClient dealloc]
-[AVAudioClient resetAudioSessionOutputPortOverride]
-[AVAudioClient setMixingVoiceWithMediaEnabled:]
-[AVAudioClient setMixingVoiceWithMediaEnabled:]_block_invoke
-[AVAudioClient setInputDevice:]
-[AVAudioClient setOutputDevice:]
-[AVAudioClient registerForMutedTalkerNotifications:]
-[AVAudioClient registerForMutedTalkerNotifications:]_block_invoke
Failed to register the notification
-[AVAudioClient registerForMutedTalkerNotifications:]_block_invoke_3
-[AVAudioClient unregisterFromMutedTalkerNotifications]_block_invoke
Failed to unregister the notification
mutedTalkerNotificationType
-[AVAudioClient handleMutedTalkerNotificationWithXPCArguments:]
+[AVAudioClient startAudioSessionWithCompletionHandler:]
+[AVAudioClient startAudioSession]
+[AVAudioClient setAudioSessionProperties:]
+[AVAudioClient stopAudioSession]
+[AVAudioClient resetAudioSessionOutputPortOverride]
+[AVAudioClient setMicrophoneMuted:]
+[AVAudioClient isMicrophoneMuted]
+[AVAudioClient setMixingVoiceWithMediaEnabled:]
+[AVAudioClient isMixingVoiceWithMediaEnabled]
+[AVAudioClient currentInputDevice]
+[AVAudioClient currentOutputDevice]
+[AVAudioClient setInputDevice:]
+[AVAudioClient setOutputDevice:]
+[AVAudioClient setFollowSystemInputEnabled:]
+[AVAudioClient setFollowSystemOutputEnabled:]
+[AVAudioClient registerForMutedTalkerNotifications:]
+[AVAudioClient unregisterFromMutedTalkerNotifications]
+[AVAudioClient registerSecureMicrophoneEngagedHandler:]
-[AVAudioClient setChangeListener:]
-[AVAudioClient devices]
AVAudioClient-devices
-[AVAudioClient inputDevices]
AVAudioClient-inputDevices
-[AVAudioClient outputDevices]
AVAudioClient-outputDevices
 [%s] %s:%d RTCP XR is not enabled
 [%s] %s:%d Haven't received any RTP packet yet
 [%s] %s:%d RTCP XR Summary report Start sequence=%d End sequence=%d minJitter=%d maxJitter=%d meanJitter=%d stdevJitter=%d meanHopLimt=%d devHopLimit=%d minHopLimt=%d maxHopLimit=%d lostPackets=%d duplicatePackets=%d dwPacketsRecv=%d
 [%s] %s:%d Failed to allocate media blob (v2)
 [%s] %s:%d Failed to compress the media blob
 [%s] %s:%d Failed to allocate memory for v2 blob
 [%s] %s:%d Media blob v2 size=%d -> %d bytes with ratio %f
 [%s] %s:%d Media blob size=%d -> %d bytes
 [%s] %s:%d Compressed media blob is nil
 [%s] %s:%d Failed to decompress the media blob v2
 [%s] %s:%d Exception occurred while parsing remote invite blob: %@
 [%s] %s:%d Remote invite blob is nil
 [%s] %s:%d Failed to deserialize the remote invite blob
 [%s] %s:%d Failed to generated negotiated results
 [%s] %s:%d Failed to generated negotiated moments results
 [%s] %s:%d Failed to generated negotiated stream groups
 [%s] %s:%d Failed to parse the negotiation data
 [%s] %s:%d Failed to retrieve stream group. status=%x
 [%s] %s:%d Failed to allocate system audio configuration
 [%s] %s:%d Max bandwidth not found for operatingMode=%d connectionType=%d
 [%s] %s:%d Failed to allocate media blob (v2) general info
 [%s] %s:%d Failed to allocate media blob (v2) banwidth settings
 [%s] %s:%d Failed to allocate media blob (v2) codec features
 [%s] %s:%d Failed to allocate media blob (v2) microphone U+1 settings
 [%s] %s:%d No supported payloads for the device
 [%s] %s:%d Failed to allocate media blob (v2) camera U+1 settings
 [%s] %s:%d Moments user preference not enabled.
 [%s] %s:%d Failed to allocate media blob (v2) moments settings
 [%s] %s:%d Failed to allocate media blob (v2) stream group
 [%s] %s:%d Media blob dump enabled !!
 [%s] %s:%d Failed to retrive the bandwdith settings
 [%s] %s:%d Failed to allocate negotiation system audio results
 [%s] %s:%d Stream group found for system audio.
 [%s] %s:%d Stream group has no U1 settings for system audio. Check for standalone system audio support.
 [%s] %s:%d Stream group has no U1 settings for system audio and does not support standalone system audio
 [%s] %s:%d No local video rules for payload=%d transport=%d encoding=%d
 [%s] %s:%d No remote video rules for payload=%d transport=%d encoding=%d
 [%s] %s:%d Skipping negotiating video settings, as this device does not support video
 [%s] %s:%d Skipping negotiating video settings, as the remote device does not support video
 [%s] %s:%d Video features not successfully negotiated
 [%s] %s:%d No available payloads
 [%s] %s:%d Failed to find video rule for transportType=%d encodingType=%d
 [%s] %s:%d Moments not supported
 [%s] %s:%d Moments user preference Not Enabled.
 [%s] %s:%d No supported moments payload. videoCodecs=%@
 [%s] %s:%d No supported moments image types. imageTypes=%@
 [%s] %s:%d Unsupported media type (%s). Ignoring streamGroup groupID=%s
 [%s] %s:%d %@(%p) Unsupported media type (%s). Ignoring streamGroup groupID=%s
 [%s] %s:%d Skipping negotiating streamGroup=%s, as this device is audio only
 [%s] %s:%d Missing codecs or payloads for mediaType=%s mediaSubtype=%s
 [%s] %s:%d %@(%p) Missing codecs or payloads for mediaType=%s mediaSubtype=%s
 [%s] %s:%d HEVC codec not supported, removing all higher quality streams from streamGroup=%s
 [%s] %s:%d %@(%p) HEVC codec not supported, removing all higher quality streams from streamGroup=%s
 [%s] %s:%d Invalid payload in streamconfig
 [%s] %s:%d HEVC payload not supported, removing all higher quality streams from streamGroup=%s
 [%s] %s:%d %@(%p) HEVC payload not supported, removing all higher quality streams from streamGroup=%s
 [%s] %s:%d Skipping unknown stream group
 [%s] %s:%d Failed to retrieve stream group. result=%x
 [%s] %s:%d Failed to negotiate stream groups
 [%s] %s:%d Setup U1 config for stream group for groupID=%s
 [%s] %s:%d Negotiate for audio settings using microphoneU1
 [%s] %s:%d Negotiate for video settings using cameraU1
 [%s] %s:%d Failed to generated negotiated video results
 [%s] %s:%d Failed to negotiate stream group config for groupID=%s
 [%s] %s:%d Not going to negotiate stream group config for groupID=%s
 [%s] %s:%d Failed to allocate stream group set
 [%s] %s:%d Failed to unserialize the blob
 [%s] %s:%d Update stream group U1 config for groupID=%s
 [%s] %s:%d Failed to allocate videoPayloads array
 [%s] %s:%d Failed to allocate videoParameterSet array
 [%s] %s:%d Screen U1 settings failed to calculate resolution
 [%s] %s:%d Skipping negotiating screen settings, as the local device does not support screen
 [%s] %s:%d Screen features not successfully negotiated
 [%s] %s:%d using audio channelCount[%d]
 [%s] %s:%d %@(%p) using audio channelCount[%d]
 [%s] %s:%d Failed to allocate stateStrings array
 [%s] %s:%d %@(%p) Failed to allocate stateStrings array
 [%s] %s:%d Failed to allocate the dispatch queue
 [%s] %s:%d %@(%p) Failed to allocate the dispatch queue
 [%s] %s:%d Failed to allocate client array
 [%s] %s:%d %@(%p) Failed to allocate client array
 [%s] %s:%d Failed to allocate starting IO client array
 [%s] %s:%d %@(%p) Failed to allocate starting IO client array
 [%s] %s:%d Failed to allocate source event queue
 [%s] %s:%d %@(%p) Failed to allocate source event queue
 [%s] %s:%d Failed to allocate sink event queue
 [%s] %s:%d %@(%p) Failed to allocate sink event queue
 [%s] %s:%d Failed to initialize source data link list
 [%s] %s:%d %@(%p) Failed to initialize source data link list
 [%s] %s:%d Failed to initialize sink data link list
 [%s] %s:%d %@(%p) Failed to initialize sink data link list
 [%s] %s:%d Failed to create allocate the spatial context dictionary
 [%s] %s:%d %@(%p) Failed to create allocate the spatial context dictionary
 [%s] %s:%d Failed to create allocate the audio session muted dictionary
 [%s] %s:%d %@(%p) Failed to create allocate the audio session muted dictionary
 [%s] %s:%d Failed to create the interrupt thread
 [%s] %s:%d setMicrophoneMuted:%d
 [%s] %s:%d %@(%p) setMicrophoneMuted:%d
 [%s] %s:%d ignore
 [%s] %s:%d %@(%p) ignore
 [%s] %s:%d setMixingVoiceWithMediaEnabled:%d
 [%s] %s:%d %@(%p) setMixingVoiceWithMediaEnabled:%d
 [%s] %s:%d client=%p mute=%d
 [%s] %s:%d %@(%p) client=%p mute=%d
 [%s] %s:%d Applying mute property for audioSessionId=%d, isMuted=%d
 [%s] %s:%d %@(%p) Applying mute property for audioSessionId=%d, isMuted=%d
 [%s] %s:%d Adding client[%p] with sinkIO[%p], sourceIO[%p] in current manager state=%d clientCount (before add)=%d
 [%s] %s:%d %@(%p) Adding client[%p] with sinkIO[%p], sourceIO[%p] in current manager state=%d clientCount (before add)=%d
 [%s] %s:%d %@ set. Skipping idle wait
 [%s] %s:%d %@(%p) %@ set. Skipping idle wait
 [%s] %s:%d Sink run lock semaphore was not signaled! client=%p sinkIO=%p
 [%s] %s:%d %@(%p) Sink run lock semaphore was not signaled! client=%p sinkIO=%p
 [%s] %s:%d Source run lock semaphore was not signaled! client=%p sourceIO=%p
 [%s] %s:%d %@(%p) Source run lock semaphore was not signaled! client=%p sourceIO=%p
 [%s] %s:%d Removing dead client (%p)!
 [%s] %s:%d %@(%p) Removing dead client (%p)!
 [%s] %s:%d conferenceMode=%d, deviceRole=%d, vpOperatingMode=%d
 [%s] %s:%d Last client is prewarming, ignore its settings. _currentAudioUnitProperties=%@
 [%s] %s:%d %@(%p) Last client is prewarming, ignore its settings. _currentAudioUnitProperties=%@
 [%s] %s:%d Selected audio unit properties: UnitType=%d, micFormat=%s speakerFormat=%s audioSessionId=%u samplesPerFrame=%d VPOperatingMode=%d
 [%s] %s:%d %@(%p) Selected audio unit properties: UnitType=%d, micFormat=%s speakerFormat=%s audioSessionId=%u samplesPerFrame=%d VPOperatingMode=%d
 [%s] %s:%d System audio unit properties: UnitType=%d, speakerFormat=%s samplesPerFrame=%d
 [%s] %s:%d %@(%p) System audio unit properties: UnitType=%d, speakerFormat=%s samplesPerFrame=%d
 [%s] %s:%d Input device changed via default change listener. current input device=%s deviceID=%u new input device=%s deviceID=%u
 [%s] %s:%d %@(%p) Input device changed via default change listener. current input device=%s deviceID=%u new input device=%s deviceID=%u
 [%s] %s:%d Ignoring attempt to set newInputDevice=%u since _followSystemInput=%d. Current inputDevice=%s deviceID=%u
 [%s] %s:%d %@(%p) Ignoring attempt to set newInputDevice=%u since _followSystemInput=%d. Current inputDevice=%s deviceID=%u
 [%s] %s:%d Setting input device=%@, previous input device=%@
 [%s] %s:%d %@(%p) Setting input device=%@, previous input device=%@
 [%s] %s:%d Input device change completed. New device=%s deviceID=%u
 [%s] %s:%d %@(%p) Input device change completed. New device=%s deviceID=%u
 [%s] %s:%d Ignoring attempt to set newOutputDevice=%u since _followSystemOutput=%d. Current outputDevice=%s deviceID=%u
 [%s] %s:%d %@(%p) Ignoring attempt to set newOutputDevice=%u since _followSystemOutput=%d. Current outputDevice=%s deviceID=%u
 [%s] %s:%d Setting output deviceID=%u, previous output deviceID=%u
 [%s] %s:%d %@(%p) Setting output deviceID=%u, previous output deviceID=%u
 [%s] %s:%d Output device change completed. New device=%s deviceID=%u
 [%s] %s:%d %@(%p) Output device change completed. New device=%s deviceID=%u
 [%s] %s:%d Output device changed via default change listener. current output device=%s deviceID=%u new output device=%s deviceID=%u
 [%s] %s:%d %@(%p) Output device changed via default change listener. current output device=%s deviceID=%u new output device=%s deviceID=%u
 [%s] %s:%d AUIO already exists
 [%s] %s:%d %@(%p) AUIO already exists
 [%s] %s:%d CMSession:[%u] Starting AUIO operatingMode[%d] deviceRole[%d] remoteCodecType[%s] remoteCodecRate[%f] isMicrophoneMuted[%d]
 [%s] %s:%d %@(%p) CMSession:[%u] Starting AUIO operatingMode[%d] deviceRole[%d] remoteCodecType[%s] remoteCodecRate[%f] isMicrophoneMuted[%d]
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCAudioManager.m:%d: Failed to create the audio limiter
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCAudioManager.m:%d: Failed to start the audio limiter
 [%s] %s:%d New active audioSessionId=%u previousAudioSessionID=%u
 [%s] %s:%d %@(%p) New active audioSessionId=%u previousAudioSessionID=%u
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCAudioManager.m:%d: CMSession:[%u] AUIOCreateHandle failed(%X)
 [%s] %s:%d AUIOSetupFormats() failed. hResult=0x%08X
 [%s] %s:%d %@(%p) AUIOSetupFormats() failed. hResult=0x%08X
 [%s] %s:%d Failed to register muted talker notification callback hResult=0x%08X
 [%s] %s:%d %@(%p) Failed to register muted talker notification callback hResult=0x%08X
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCAudioManager.m:%d: [CMSession]:%u AUIOStart failed(%08lX)
 [%s] %s:%d startAudioIO is completed
 [%s] %s:%d %@(%p) startAudioIO is completed
 [%s] %s:%d Recording changed: %d->%d
 [%s] %s:%d %@(%p) Recording changed: %d->%d
 [%s] %s:%d Mic sample rate changed: %d->%d
 [%s] %s:%d %@(%p) Mic sample rate changed: %d->%d
 [%s] %s:%d Mic samples per frame changed: %d->%d
 [%s] %s:%d %@(%p) Mic samples per frame changed: %d->%d
 [%s] %s:%d Mic channels per frame changed: %d->%d
 [%s] %s:%d %@(%p) Mic channels per frame changed: %d->%d
 [%s] %s:%d Speaker sample rate changed: %d->%d
 [%s] %s:%d %@(%p) Speaker sample rate changed: %d->%d
 [%s] %s:%d Speaker samples per frame changed: %d->%d
 [%s] %s:%d %@(%p) Speaker samples per frame changed: %d->%d
 [%s] %s:%d Speaker channels per frame changed: %d->%d
 [%s] %s:%d %@(%p) Speaker channels per frame changed: %d->%d
 [%s] %s:%d VP operating mode changed: %d->%d
 [%s] %s:%d %@(%p) VP operating mode changed: %d->%d
 [%s] %s:%d VP spatial chat flag changed: %d->%d
 [%s] %s:%d %@(%p) VP spatial chat flag changed: %d->%d
 [%s] %s:%d Current settings: %@
 [%s] %s:%d %@(%p) Current settings: %@
 [%s] %s:%d New settings: %@
 [%s] %s:%d %@(%p) New settings: %@
 [%s] %s:%d [CMSession]:%u Session properties changed!
 [%s] %s:%d %@(%p) [CMSession]:%u Session properties changed!
 [%s] %s:%d reset audio limiter: %d
 [%s] %s:%d %@(%p) reset audio limiter: %d
 [%s] %s:%d AUIO doesn't exists
 [%s] %s:%d %@(%p) AUIO doesn't exists
 [%s] %s:%d Registering clientIO[%p] controllerIO[%p] in current manager state=%d
 [%s] %s:%d %@(%p) Registering clientIO[%p] controllerIO[%p] in current manager state=%d
 [%s] %s:%d Wait on run lock semaphore timed out! clientIO=%p
 [%s] %s:%d %@(%p) Wait on run lock semaphore timed out! clientIO=%p
 [%s] %s:%d CMSimpleQueueEnqueue Full
 [%s] %s:%d %@(%p) CMSimpleQueueEnqueue Full
 [%s] %s:%d Unregistering clientIO[%p] controllerIO[%p] in current manager state=%d
 [%s] %s:%d %@(%p) Unregistering clientIO[%p] controllerIO[%p] in current manager state=%d
 [%s] %s:%d controller did start client (audioIO=%p)
 [%s] %s:%d %@(%p) controller did start client (audioIO=%p)
 [%s] %s:%d Handle mutedTalkerNotification type=%d
 [%s] %s:%d %@(%p) Handle mutedTalkerNotification type=%d
 [%s] %s:%d Registered for mutedTalker notification. result=0x%08x
 [%s] %s:%d %@(%p) Registered for mutedTalker notification. result=0x%08x
 [%s] %s:%d Unregistered from muted talker notification. result=0x%08x
 [%s] %s:%d %@(%p) Unregistered from muted talker notification. result=0x%08x
 [%s] %s:%d Muted talker notification handler is nil
 [%s] %s:%d %@(%p) Muted talker notification handler is nil
 [%s] %s:%d Muted talker notification handler already registered
 [%s] %s:%d %@(%p) Muted talker notification handler already registered
 [%s] %s:%d Muted talker notification handler not registered
 [%s] %s:%d %@(%p) Muted talker notification handler not registered
 [%s] %s:%d Register session context for audioSessionId=%u
 [%s] %s:%d %@(%p) Register session context for audioSessionId=%u
 [%s] %s:%d Failed to allocate audio session context for audioSessionId=%u
 [%s] %s:%d %@(%p) Failed to allocate audio session context for audioSessionId=%u
 [%s] %s:%d Session context for audioSessionId=%u is already registered
 [%s] %s:%d %@(%p) Session context for audioSessionId=%u is already registered
 [%s] %s:%d Unregister session context for audioSessionId=%u
 [%s] %s:%d %@(%p) Unregister session context for audioSessionId=%u
 [%s] %s:%d Session context for audioSessionId=%u is not registered
 [%s] %s:%d %@(%p) Session context for audioSessionId=%u is not registered
 [%s] %s:%d Spatial context for audioSessionId=%u is not registered
 [%s] %s:%d %@(%p) Spatial context for audioSessionId=%u is not registered
 [%s] %s:%d skip spatial context _spatialAudioDisabled=%d
 [%s] %s:%d %@(%p) skip spatial context _spatialAudioDisabled=%d
 [%s] %s:%d Failed to retrieve the metadata buffer. osStatus=%d
 [%s] %s:%d %@(%p) Failed to retrieve the metadata buffer. osStatus=%d
 [%s] %s:%d Failed to apply the metadata buffer. spatialMetadata=%p, dataBufferLength=%zu, status=%08x
 [%s] %s:%d %@(%p) Failed to apply the metadata buffer. spatialMetadata=%p, dataBufferLength=%zu, status=%08x
 [%s] %s:%d [%p] Flushing eventQueue of source controllerIO[%p] in current manager state=%d
 [%s] %s:%d %@(%p) [%p] Flushing eventQueue of source controllerIO[%p] in current manager state=%d
 [%s] %s:%d [%p] Flushing eventQueue of sink controllerIO[%p] in current manager state=%d
 [%s] %s:%d %@(%p) [%p] Flushing eventQueue of sink controllerIO[%p] in current manager state=%d
 [%s] %s:%d Setting Voice Mixing Enabled=%d
 [%s] %s:%d [CMSession]:%u reset audio unit: %d
 [%s] %s:%d %@(%p) [CMSession]:%u reset audio unit: %d
 [%s] %s:%d reset audio unit: %d
 [%s] %s:%d %@(%p) reset audio unit: %d
 [%s] %s:%d new client: %@
 [%s] %s:%d %@(%p) new client: %@
 [%s] %s:%d (%p) audioIO=%p clientCount:%d AUIO=%d/%d AudioSession=%d
 [%s] %s:%d %@(%p) (%p) audioIO=%p clientCount:%d AUIO=%d/%d AudioSession=%d
 [%s] %s:%d (%p) audioIO=%p clientCount:%d AUIO=-/- AudioSession=-
 [%s] %s:%d %@(%p) (%p) audioIO=%p clientCount:%d AUIO=-/- AudioSession=-
 [%s] %s:%d Process state: %@ (%d)
 [%s] %s:%d %@(%p) Process state: %@ (%d)
 [%s] %s:%d State change: %@ (%d) -> %@ (%d)
 [%s] %s:%d %@(%p) State change: %@ (%d) -> %@ (%d)
 [%s] %s:%d Client is nil!
 [%s] %s:%d %@(%p) Client is nil!
 [%s] %s:%d Invalid device role: %d!
 [%s] %s:%d %@(%p) Invalid device role: %d!
 [%s] %s:%d Client already registered!
 [%s] %s:%d %@(%p) Client already registered!
 [%s] %s:%d controller start client (audioIO=%p)
 [%s] %s:%d %@(%p) controller start client (audioIO=%p)
 [%s] %s:%d controller start client FAILED (audioIO=%p)
 [%s] %s:%d %@(%p) controller start client FAILED (audioIO=%p)
 [%s] %s:%d controller stop client (audioIO=%p)
 [%s] %s:%d %@(%p) controller stop client (audioIO=%p)
 [%s] %s:%d controller did stop client (audioIO=%p)
 [%s] %s:%d %@(%p) controller did stop client (audioIO=%p)
 [%s] %s:%d controller stop client FAILED (audioIO=%p)
 [%s] %s:%d %@(%p) controller stop client FAILED (audioIO=%p)
 [%s] %s:%d Update client[%p]. Current manager state=%d
 [%s] %s:%d %@(%p) Update client[%p]. Current manager state=%d
 [%s] %s:%d client not found: %@
 [%s] %s:%d %@(%p) client not found: %@
 [%s] %s:%d controller update FAILED (audioIO=%p)
 [%s] %s:%d %@(%p) controller update FAILED (audioIO=%p)
 [%s] %s:%d controller updated _spatialAudioDisabled=%d
 [%s] %s:%d %@(%p) controller updated _spatialAudioDisabled=%d
 [%s] %s:%d sampleRate=%d
 [%s] %s:%d %@(%p) sampleRate=%d
 [%s] %s:%d Failed to allocate interrupt thread
 [%s] %s:%d %@(%p) Failed to allocate interrupt thread
 [%s] %s:%d Failed to allocate interrupt thread client
 [%s] %s:%d %@(%p) Failed to allocate interrupt thread client
 [%s] %s:%d Start the interrupt thread. format=%s
 [%s] %s:%d %@(%p) Start the interrupt thread. format=%s
 [%s] %s:%d Failed to start the interrupt thread
 [%s] %s:%d %@(%p) Failed to start the interrupt thread
 [%s] %s:%d Failed to set the client IO
 [%s] %s:%d %@(%p) Failed to set the client IO
 [%s] %s:%d Stop the interrupt thread
 [%s] %s:%d %@(%p) Stop the interrupt thread
 [%s] %s:%d CMSession interrupt begin
 [%s] %s:%d %@(%p) CMSession interrupt begin
 [%s] %s:%d CMSession interrupt begin, audio manager is now paused
 [%s] %s:%d %@(%p) CMSession interrupt begin, audio manager is now paused
 [%s] %s:%d CMSession interrupt end
 [%s] %s:%d %@(%p) CMSession interrupt end
 [%s] %s:%d CMSession interrupt end, audio manager resume completed
 [%s] %s:%d %@(%p) CMSession interrupt end, audio manager resume completed
 [%s] %s:%d Unexpected SPI call
 [%s] %s:%d %@(%p) Unexpected SPI call
 [%s] %s:%d %sProcess event: controllerIO=%p clientIO=%p type=%d
 [%s] %s:%d %s: Took a long time %fs
 [%s] %s:%d %sRegistering clientIO[%p]
 [%s] %s:%d %sUnregistering clientIO[%p]
AVCRC [%s] %s:%d AVCRateController (%p) init with VCRateControl dumpFile %s, VCRateControl logging %s, BWE dumpFile %s.
AVCRC [%s] %s:%d (%p)
AVCRC [%s] %s:%d AVCRateController (%p) configuration with mode=%d, LocalRAT=%d, RemoteRAT=%d, minBitrate=%d, maxBitrate=%d, isTrafficBursty=%d, featureFlags=%X, statisticsCollector=%p
AVCRC [%s] %s:%d (%p) rate controller has been started
AVCRC [%s] %s:%d (%p) Cannot load and retain rateControllerDelegate successfully!
AVCRC [%s] %s:%d (%p) Cannot load and retain reportingAgent successfully!
AVCRC [%s] %s:%d (%p) rate controller has been stopped
AVCRC [%s] %s:%d (%p) Cannot register periodic task before rate controller start!
AVCRC [%s] %s:%d (%p) AVCRateController target bitrate cap %d -> %d
AVCRC [%s] %s:%d (%p) AVCRateController bandwidth estimation cap %d -> %d
AVCRC [%s] %s:%d [%p] Pause rate controller for 5 seconds, BT device %s state=%d while WLAN's on 2.4GHz
AVCRC [%s] %s:%d AdaptiveLearning(AVCRateController): Setting up initial bitrate for segment %@ - learnt target bitrate %d, selected tier %d, default bitrate %d
AVCRC [%s] %s:%d AdaptiveLearning(AVCRateController): Initial bitrate defaulted to %d
AVCRC [%s] %s:%d [%p] config for key=%s config serverBagContainsGroup=%d blockRampUpInSaturatedNetworkEnabled=%d networkSaturatedRTTToMinRTTRatio=%f networkSaturatedOWRDToMinRTTRatio=%f networkSaturatedPersistFeedbackNumber=%d networkSaturatedRTTDecreasingThreshold=%f
AVCRC [%s] %s:%d [%p] config for key=%s config serverBagContainsGroup=%d rateLimitedPercentage=%f blockedTimeout=%f
AVCRC [%s] %s:%d [%p] config for key=%s config serverBagContainsGroup=%d networkUnstableCoolDownTime=%f RTTThreshold=%f PLRThreshold=%f
AVCRC [%s] %s:%d [%p] config for key=%s serverBagContainsGroup=%d rampUpOWRDThreshold=%f rampUpNOWRDThreshold=%f
AVCRC [%s] %s:%d [%p] config for key=%s serverBagContainsGroup=%d rampUpOverBandwidthCalmDuration=%f rampUpOverBandwidthTierNumber=%d
AVCRC [%s] %s:%d [%p] config for key=%s serverBagContainsGroup=%d rampDownNOWRDThreshold=%f rampDownNOWRDAccThreshold=%f rampDownAggressiveNOWRDThreshold=%f rampDownAggressiveNOWRDAccThreshold=%f rampDownConstantOWRDDuration=%f
AVCRC [%s] %s:%d [%p] config for key=%s serverBagContainsGroup=%d rampDownBurstyLossThreshold=%d lowestTierForBurstyLossRampDown=%d rampDownLossEventThreshold=%d rampDownLossEventNOWRDThreshold=%f
AVCRC [%s] %s:%d [%p] config for key=%s serverBagContainsGroup=%d rampDownOvershootDuration=%f rampDownOvershootNextTierRatio=%f
AVCRC [%s] %s:%d [%p] config for key=%s serverBagContainsGroup=%d rampUpQueuingDelayThreshold=%f rampUpNBDCDThreshold=%f rampUpNBDCDCoolDownTime=%f
AVCRC [%s] %s:%d [%p] config for key=%s serverBagContainsGroup=%d rampDownHighQueuingDelayThreshold=%f rampDownMediumQueuingDelayThreshold=%f rampDownNormalizedQueuingDelayThreshold=%f rampDownNBDCDThreshold=%f rampDownAggressiveNBDCDThreshold=%f
AVCRC [%s] %s:%d [%p] config for key=%s serverBagContainsGroup=%d serverBagProfileNumber=%d
AVCRC [%s] %s:%d [%p] config for key=%s serverBagContainsGroup=%d fastRampUpEnabled=%d fastRampUpNetworkStableDuration=%f fastRampUpTierGap=%d fastRampUpRTTRatio=%F
AVCRC [%s] %s:%d [%p] config for key=%s serverBagContainsGroup=%d oscillationAvoidanceEnabled=%d oscillationAvoidanceTiersHitThreshold=%d oscillationAvoidanceTierChangeThreshold=%d oscillationAvoidanceDurationRatio=%f oscillationAvoidanceDurationRatioAggressive=%f
AVCRC [%s] %s:%d [%p] config for key=%s serverBagContainsGroup=%d wifiEmergencyTierEnabled=%d rampDownWiFiEmergencyTierCoolDownTime=%f lowestNonEmergencyTierIndexWiFi=%d
AVCRC [%s] %s:%d [%p] config for key=%s serverBagContainsGroup=%d offChannelHighRatio=%f offChannelLowRatio=%f autoResumeTime=%f
AVCRC [%s] %s:%d [%p] config for key=%s serverBagContainsGroup=%d packetLossRateThresholdInitial=%f packetLossRateThresholdMin=%f packetLossRateThresholdMax=%f packetLossRateThresholdTarget=%f
AVCRC [%s] %s:%d [%p] config for key=%s serverBagContainsGroup=%d rampDownLossEventThresholdRatio=%f
AVCRC [%s] %s:%d VCRateControl experiment report=%s
AVCRC [%s] %s:%d %@(%p) VCRateControl experiment report=%s
AVCRC [%s] %s:%d [%p] config for key=%s serverBagContainsGroup=%d burstyTrafficUplink=%d burstyTrafficDownlink=%d
AVCRC [%s] %s:%d Apply algorithm config rampUpUplinkBLERThreshold=%u, rampDownUplinkBLERThreshold=%u, rampUpUplinkBLERDuration=%f, rampDownUplinkBLERDuration=%f
AVCRC [%s] %s:%d %@(%p) Apply algorithm config rampUpUplinkBLERThreshold=%u, rampDownUplinkBLERThreshold=%u, rampUpUplinkBLERDuration=%f, rampDownUplinkBLERDuration=%f
AVCRC [%s] %s:%d Not allowed to force algorithm config for mode=%d yet!
AVCRC [%s] %s:%d %@(%p) Not allowed to force algorithm config for mode=%d yet!
AVCRC [%s] %s:%d Forced the initialBitrate=%u, initialTierIndex=%d
AVCRC [%s] %s:%d %@(%p) Forced the initialBitrate=%u, initialTierIndex=%d
AVCRC [%s] %s:%d Failed to create nwActivity
AVCRC [%s] %s:%d %@(%p) Failed to create nwActivity
AVCRC [%s] %s:%d Not using nwConnectionNotification
AVCRC [%s] %s:%d %@(%p) Not using nwConnectionNotification
AVCRC [%s] %s:%d Wrong statistics type=%d
AVCRC [%s] %s:%d %@(%p) Wrong statistics type=%d
AVCRC [%s] %s:%d (%p) Report initial ramp up done with bitrateDelta:%d, timeDelta:%f, initialBitrate:%d
AVCRC [%s] %s:%d (%p) rateControllerDelegate is nil
AVCRC [%s] %s:%d (%p) Reporting target bitrate change for mode=%d old targetBitrate=%u newTargetBitrate=%u old rateChangeCounter=%u newRateChangeCounter=%u
AVCRC [%s] %s:%d (%p) Forcing VCRateControl TxCap to %u from defaults
AVCRC [%s] %s:%d (%p) Forcing VCRateControl TxRate to %u from defaults
AVCRC [%s] %s:%d (%p) Configuration mode %d not supported
AVCRC [%s] %s:%d @=@ Health: VCRC (%p) mode=%d, targetBitrate=%u kbps, bitrateCap=%u kbps, actualBitrate=%u kbps, RemoteBWE=%u kbps, LocalBWE=%u kbps, RTT=%u ms, OWRD=%u ms, %s%.2f%%, %s%.2f%%
VCRC [%s] %s:%d NWConnection notification is nil
VCRC [%s] %s:%d NWConnection packet event is nil
VCRC [%s] %s:%d Cannot get rate control feedback message!
VCRC [%s] %s:%d Out of order feedback message detected with timestamp=%u, controller mediaTimestamp=%u
AVConferenceAPI [%s] %s:%d Network quality graph is enabled.
AVConferenceAPI [%s] %s:%d useServer=%d
AVConferenceAPI [%s] %s:%d %@(%p) useServer=%d
AVConferenceAPI [%s] %s:%d AVConference: server died, but AVConference has already deallocated, NO-OP
AVConferenceAPI [%s] %s:%d AVConference: Server initialization failed
@:@ AVConference-init
AVConferenceAPI [%s] %s:%d @:@ AVConference-init (%p) clientUUID=%@
AVConferenceAPI [%s] %s:%d initializeNewCallWithDeviceRole:%d callID=%d (not using XPC)
@:@ AVConference-newCall
AVConferenceAPI [%s] %s:%d @:@ AVConference-newCall (%p) callID=%d, deviceRole=%d
AVConferenceAPI [%s] %s:%d 
AVConferenceAPI [%s] %s:%d %@(%p) 
@:@ AVConference-dealloc
AVConferenceAPI [%s] %s:%d @:@ AVConference-dealloc (%p)
AVConferenceAPI [%s] %s:%d >>>>> Sending ARPL data to VideoConference via XPC (in AVConference) <<<<<
AVConferenceAPI [%s] %s:%d >>>>> mediaservd not supported - cannot send ARPL data <<<<<
AVConferenceAPI [%s] %s:%d AVConference: report session ID: %s
AVConferenceAPI [%s] %s:%d AVConference: Server - Calling startConnectionWithParticipantIDUsingInviteData caps = %s] 
AVConferenceAPI [%s] %s:%d AVConference startConnectionWithCallID: IDS Socket %d duped to %d
AVConferenceAPI [%s] %s:%d AVConference: Server - Finished calling startConnectionWithParticipantIDUsingInviteData]
@:@ AVConference-start
AVConferenceAPI [%s] %s:%d @:@ AVConference-start (%p) callID=%d, audioEnabled=%d, audioPaused=%d, videoEnabled=%d, videoPaused=%d, relayEnabled=%d, didSucceed=%d, error=%@
@:@ AVConference-stop
AVConferenceAPI [%s] %s:%d @:@ AVConference-stop (%p) callID=%d
@:@ AVConference-cancel
AVConferenceAPI [%s] %s:%d @:@ AVConference-cancel (%p) callID=%d
AVConferenceAPI [%s] %s:%d this function is deprecated
AVConferenceAPI [%s] %s:%d statsForCallID: %s, %d
AVConferenceAPI [%s] %s:%d AVConference: My nat type is = %d
AVConferenceAPI [%s] %s:%d updateCapabilities: isAudioEnabled needs to be YES when isVideoEnabled is set
@:@ AVConference-updateCapabilities
AVConferenceAPI [%s] %s:%d @:@ AVConference-updateCapabilities (%p) callID=%d, audioEnabled=%d, audioPaused=%d, videoEnabled=%d, videoPaused=%d, relayEnabled=%d, deviceRole=%d
AVConferenceAPI [%s] %s:%d callID %ld newCapabilities %s
AVConferenceAPI [%s] %s:%d AVConference: setServerInfo completed with %s
@:@ AVConference-didStart
AVConferenceAPI [%s] %s:%d @:@ AVConference-didStart (%p) callID=%u, didSucceed=%d, error=%@
@:@ AVConference-didStop
AVConferenceAPI [%s] %s:%d @:@ AVConference-didStop (%p) callID=%u, error=%@
AVConferenceAPI [%s] %s:%d AVConference: Notify client %d, ipChange %s
AVConferenceAPI [%s] %s:%d AVConference: notifying client %p of remoteMediaStalled %d for callID %d
@:@ AVConference-didReceiveFirstFrame
AVConferenceAPI [%s] %s:%d @:@ AVConference-didReceiveFirstFrame (%p) callID=%u
AVConferenceAPI [%s] %s:%d callID=%d, responseDict=%s
AVConferenceAPI [%s] %s:%d %@(%p) callID=%d, responseDict=%s
@:@ AVConference-setConferenceState
AVConferenceAPI [%s] %s:%d @:@ AVConference-setConferenceState state=%d, callID=%d
AVConferenceAPI [%s] %s:%d didStartConnectionBlock: error = %p, result = %s
AVConferenceAPI [%s] %s:%d didStartConnectionBlock:strongAVConference == NULL
AVConferenceAPI [%s] %s:%d didStartConnectionBlock:strongAVConference (%d)
AVConferenceAPI [%s] %s:%d AVConference: notified client %p of didStartCallID %d
AVConferenceAPI [%s] %s:%d AVConference: notified client %p of didStopCallID %d, callMetadataDict = %s
AVConferenceAPI [%s] %s:%d AVConference: notified client %p of callID %d isSendingAudio %d
AVConferenceAPI [%s] %s:%d AVConference: notified client %p of callID %d didPauseAudio %d
AVConferenceAPI [%s] %s:%d AVConference: notified client %p of callID %d didPauseVideo %d
AVConferenceAPI [%s] %s:%d relayCancelBlock called (callID %d) with...%s
AVConferenceAPI [%s] %s:%d relayCancelBlock called (callID %d)
AVConferenceAPI [%s] %s:%d AVConference: notified client %p (%d) of video degraded %d isRemote = %d
AVConferenceAPI [%s] %s:%d AVConference: notified client %p (%d) of network connection hint %d
AVConferenceAPI [%s] %s:%d AVConference: >>>>> Relaying incoming ARPL data from VideoConferenceManager via XPC connection to AVConference delegate (in AVConference) <<<<<
AVConferenceAPI [%s] %s:%d AVConference: notified client of outdated cache for call ID %d
AVConferenceAPI [%s] %s:%d serverDied
AVConferenceAPI [%s] %s:%d AVConference: mediaserverd died, notifying client
@:@ AVConference-serverDied
AVConferenceAPI [%s] %s:%d @:@ AVConference-serverDied (%p)
 [%s] %s:%d Local preferredAudioCodec:%d, allowAudioSwitching:%d
 [%s] %s:%d Failed to allocate negotiation results
 [%s] %s:%d Failed to allocate negotiation audio results
 [%s] %s:%d Failed to allocate negotiation video results
 [%s] %s:%d Failed to allocate negotiation screen results
 [%s] %s:%d Failed to allocate negotiation moments results
 [%s] %s:%d Failed to allocate FaceTime settings results
 [%s] %s:%d Failed to allocate the negotiated stream groups array
 [%s] %s:%d Found one to one stream group for groupID=%s
 [%s] %s:%d Failed to find one to one stream group for groupID=%s
 [%s] %s:%d Get negotiated results for stream group groupID=%s
 [%s] %s:%d Failed to get negotiated results for stream group groupID=%s
 [%s] %s:%d Video payload OVERRIDE is PL_INVALID! Ignoring ...
 [%s] %s:%d Remote client doesn't support video OVERRIDE payload (%d). Ignoring ...
 [%s] %s:%d Local client doesn't support video OVERRIDE payload (%d). Ignoring ...
 [%s] %s:%d Video payload OVERRIDE to %d
 [%s] %s:%d Failed to allocate updatedRules array
 [%s] %s:%d No matching remote rules for payload=%d transport=%d encoding=%d
 [%s] %s:%d { 0, 0, %d, @"%@", 0x%x, @"%@", 0x%08x, %d, %d, %d, %d }
 [%s] %s:%d VCHardwareSettingsMac: Your machine arch is 0x%x
 [%s] %s:%d VCHardwareSettingsMac: Your machine arch is CPUFAMILY_UNKNOWN, 0x%x
 [%s] %s:%d VCHardwareSettingsMac: HW encoder is available on this platform.
 [%s] %s:%d VCHardwareSettingsMac: HW encoder is NOT available on this platform.
 [%s] %s:%d Comparing %d (0x%x) and %d (0x%x), result=%d
 [%s] %s:%d Forcing max screen encoders=%d
 [%s] %s:%d Forcing mixed in system audio
 [%s] %s:%d Power spectrum initialzed with incorrect arguments: binCount[%d] sinkContext[%p] sinkCallback[%p]!
 [%s] %s:%d @=@ Health: VCAudioPowerSpectrum Power spectrum for streamToken=%u averageLevel=%.02f
 [%s] %s:%d Power spectrum is not correctly configured: context[%p] sincCallback[%p] sinkContext[%p]
 [%s] %s:%d error setting up VCAudioPowerSpectrum
 [%s] %s:%d binCount:%d
 [%s] %s:%d Unsupported format id: %d
 [%s] %s:%d Unsupported format flags: %x
 [%s] %s:%d Failed to allocate sample buffer
 [%s] %s:%d Failed to create octave to index table
 [%s] %s:%d Failed to create bin interpolation indexes
 [%s] %s:%d Failed to create hanning window
 [%s] %s:%d Failed to create channel settings: channelCount=%d
 [%s] %s:%d Failed to setup the channel settings[%d]
 [%s] %s:%d Failed to allocate _octave2IndexTable6 [count=%d]
 [%s] %s:%d Output bin count is 0
 [%s] %s:%d lerp[%d] : %f
 [%s] %s:%d Failed to create FFT
 [%s] %s:%d Failed to create bins
 [%s] %s:%d Failed to allocate octaveDbOld [count=%d]
 [%s] %s:%d Failed to allocate octaveDb [count=%d]
 [%s] %s:%d Failed to allocate octaveDbFilt [count=%d]
 [%s] %s:%d Failed to allocate octaveDbFiltInterpolated [count=%d]
 [%s] %s:%d Failed to history buffer
 [%s] %s:%d Failed to allocate fftBuffer
 [%s] %s:%d Output bin count is 0!
 [%s] %s:%d Current bin count is %d. Setup run a second time ?
VCRC [%s] %s:%d dealloc called %p
VCRC [%s] %s:%d statisticsCollector[%p] is already started
VCRC [%s] %s:%d start
VCRC [%s] %s:%d statisticsCollector[%p] is already stopped
VCRC [%s] %s:%d stop
VCRC [%s] %s:%d %s %s
VCRC [%s] %s:%d setStatistics:newStatsistics is deprecated
VCRC [%s] %s:%d getStatistics:keys is deprecated
VCRC [%s] %s:%d Invalid parameter. statisticsCollector=%p message=%p
VCRC [%s] %s:%d Mode %d does not support reading the statistics collection
VCRC [%s] %s:%d Unknown type of packet received statistics
VCRC [%s] %s:%d update audio loss: %d
VCRC [%s] %s:%d update video loss: %d
VCRC [%s] %s:%d Reset remotePAcketReceivedAudio from current=%d to feedback=%d
VCRC [%s] %s:%d Feedback out of order count=%d with packet receive count video:[current=%d, feedback=%d], audio:[current=%d, feedback=%d]
 [%s] %s:%d %s:%d Exiting state:%d Entering state:%d
 [%s] %s:%d Time counter wrapped around
 [%s] %s:%d calculateOWRDWithTimestamp: Lag (%fs) looks spurios (short %fs: long %fs : threshold %fs), discarding
 [%s] %s:%d calculateOWRDWithTimestamp: timestamp: %u, now: %f, Lag %fs short %fs: long %fs : owrd %fs
 [%s] %s:%d CommTest: select() failed (%d)
 [%s] %s:%d CommTest: recvfrom() failed (%d)
 [%s] %s:%d CommTest: recvfrom() returns 0
 [%s] %s:%d CommTest: bad seq# %08X.
 [%s] %s:%d GKNATObserver_SCContext: GKNATObserverDynamicStoreCallback(): changedKeys = %s
 [%s] %s:%d GKNATObserver_SCContext: GKNATObserverDynamicStoreCallback(): self.observer = %s
 [%s] %s:%d GKNATObserver: no NAT cache available, running NAT check
 [%s] %s:%d GKNATObserverInternal(%p) -init
 [%s] %s:%d GKNATObserverInternal(%p) -dealloc
 [%s] %s:%d GKNATObserver setting flags[%08X] mask[%08X] old[%08X]=>result[%08X] (cached:%d)
 [%s] %s:%d GKNATObserver _commNATFlagDictionary = %s
 [%s] %s:%d GKNATObserver: running NAT check from startConnection
 [%s] %s:%d GKNATObserver: updating cache with new NAT dict
 [%s] %s:%d GKNATObserver: using cached NAT dict
 [%s] %s:%d GKNATObserver reporting NAT Type dictionary [%s]
 [%s] %s:%d GKNATObserver not reporting NAT Type dictionary [%s] - no change
 [%s] %s:%d GKNATObserver reporting NAT Type %d
 [%s] %s:%d GKNATObserver cannot report NAT Type %d (%d/%d), delegate does not respond to callbacks!
 [%s] %s:%d GKNATObserver cannot report NAT Type %d (%d/%d), delegate is nil!
 [%s] %s:%d natchecktimeout using default: %lf
 [%s] %s:%d natchecktimeout set to %lf from bag
 [%s] %s:%d commnat_test: [%08X] after %0.6lfs (%s)
 [%s] %s:%d callHTTPTestFromIPPort: [%s], IP: %u.%u.%u.%u:%u
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/GKNATObserver.m:%d: connectTCPSocket: connect failed (%d)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/GKNATObserver.m:%d: callHTTPTestFromIPPort: select failed for connect (%d)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/GKNATObserver.m:%d: callHTTPTestFromIPPort: connect timed out %d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/GKNATObserver.m:%d: callHTTPTestFromIPPort: connect refused (%d)
 [%s] %s:%d callHTTPTestFromIPPort: TCP socket connected!
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/GKNATObserver.m:%d: callHTTPTestFromIPPort: write failed
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/GKNATObserver.m:%d: callHTTPTestFromIPPort: read failed
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/GKNATObserver.m:%d: callHTTPTestFromIPPort: server terminated
 [%s] %s:%d callHTTPTestFromIPPort: for %s result %d
 [%s] %s:%d GKNATObserver:ensureNatCachePathExists : %d
 [%s] %s:%d GKNATObserver: NAT Cache = %s
 [%s] %s:%d GKNATObserver: Caching NAT flags [%s] for network "%s"...
 [%s] %s:%d GKNATObserver: Pruning network "%s" from NAT flags cache. (GKNATObserverMaxCachedNetworks=%d)
 [%s] %s:%d GKNATObserver: NATCheckWithIPPort starting for %s
 [%s] %s:%d GKNATObserver: nameForNetworkWithIPPort took %0.lf seconds
 [%s] %s:%d GKNATObserver: cache lookup took %0.lf seconds
 [%s] %s:%d GKNATObserver: Cached NAT flags for network "%s": [%08lX]
 [%s] %s:%d GKNATObserver: Network on interface "%s" [%s] did not change, skipping...
 [%s] %s:%d GKNATObserver: cache lookup semaphore took %0.lf seconds
 [%s] %s:%d GKNATObserver: updating NAT flags dictionary took %0.lf seconds
 [%s] %s:%d GKNATObserver: caching took %0.lf seconds
 [%s] %s:%d No tcp server... aborting
 [%s] %s:%d No https server... aborting
 [%s] %s:%d NAT64ResolverCallBack: got prefix for %s
 [%s] %s:%d GKNATObserver: %s
 [%s] %s:%d GKNATObserver: start setting up NAT checks (delay: %lf)
 [%s] %s:%d Trigger interface change directly from non-carrier check
 [%s] %s:%d GKNATObserver: queued non-carrier NAT check %d@%d, %s
 [%s] %s:%d GKNATObserver: carrier static NAT type: %08X
 [%s] %s:%d Trigger interface change directly from carrier check
 [%s] %s:%d GKNATObserver: queued carrier NAT check on %s
 [%s] %s:%d GKNATObserver: empty carrier NAT type set
 [%s] %s:%d GKNATObserver: No usable carrier interfaces found.
 [%s] %s:%d GKNATObserver: _nonCarrierInterfacesOnly set, skipping carrier interfaces test
 [%s] %s:%d GKNATObserver: Removing interfaces from consideration: %s
 [%s] %s:%d GKNATObserver: no usable interfaces (retry #%d in %0.3lfs)
 [%s] %s:%d GKNATObserver: no usable interfaces (already retried %d times)
 [%s] %s:%d GKNATObserver: done waiting for NAT check group
 [%s] %s:%d Dynamic store is nil
 [%s] %s:%d GKNATObserver: SCDS dictionary: %s
 [%s] %s:%d GKNATObserver: SCDynamicStoreSetNotificationKeys failed, we will miss network change notifications!
 [%s] %s:%d GKNATObserver: SCDynamicStoreSetDispatchQueue failed, we will miss network change notifications!
 [%s] %s:%d GKNATObserver: SCDynamicStoreCreate failed, we will miss network change notifications!
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/GKNATObserver.m:%d: createTCPSocket: socket() failed (%d)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/GKNATObserver.m:%d: createTCPSocket: bind() failed (%d)
 [%s] %s:%d Failed to create VCAudioStreamGroupCommon
 [%s] %s:%d @=@ Health: VCAudioStreamReceiveGroup %@ speakerProcsCalled=%ld, averageOutputPower=%f, syncTargetCalled=%ld
 [%s] %s:%d System audio start capture failed on receive stream group with error=%@
 [%s] %s:%d Unexpected type of syncDestination
 [%s] %s:%d Adding syncDestination=%s, common=%p
 [%s] %s:%d %@(%p) Adding syncDestination=%s, common=%p
 [%s] %s:%d Failed to add sync destination. streamGroup=%s syncDestination=%s
 [%s] %s:%d Failed to set sync source on sync destination
 [%s] %s:%d Removing syncDestination=%s, common=%p
 [%s] %s:%d %@(%p) Removing syncDestination=%s, common=%p
 [%s] %s:%d Failed removing remove syncDestination=%s from streamGroup=%s
 [%s] %s:%d Audio is stalling with duration %f
 [%s] %s:%d Audio has stopped stalling
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCAudioStreamReceiveGroup.m:%d: Updating audio priority %d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCAudioStreamReceiveGroup.m:%d: ActiveCount:%d audioPriority:%d audioActive:%d
 [%s] %s:%d Trying to set the IO duration while relay is running
 [%s] %s:%d Relay IO is already started
 [%s] %s:%d Failed to restart the other IO
 [%s] %s:%d Failed to create packet thread: %@
 [%s] %s:%d Failed to start the relay thread: %@
 [%s] %s:%d VCAudioRelay stopped
 [%s] %s:%d Can't stop: relay IO is nil
 [%s] %s:%d Can't stop: invalid IO
 [%s] %s:%d Relay IO is not started
 [%s] %s:%d Starting client relay IO
 [%s] %s:%d Failed to start client IO
 [%s] %s:%d Starting remote relay IO
 [%s] %s:%d Failed to start remote IO
 [%s] %s:%d Stopping client relay IO
 [%s] %s:%d VCAudioRelay client stopped
 [%s] %s:%d Stopping remote relay IO
 [%s] %s:%d VCAudioRelay remote stopped
 [%s] %s:%d Trying to set network clock while relay is running
 [%s] %s:%d newAudioConverterFromFormat failed with error %d
 [%s] %s:%d AudioConverterSetProperty(kAudioConverterPrimeMethod) failed with error %d
 [%s] %s:%d Remote relay IO:
 [%s] %s:%d Client relay IO:
 [%s] %s:%d Periodic health print already initialized
 [%s] %s:%d @=@ Health: VCAudioRelay blocksRelayedCount=%d, clientUplinkPowerMovingAverage=%f, clientDownlinkPowerMovingAverage=%f
 [%s] %s:%d setRealTimeConstraints() failed with error %d
 [%s] %s:%d VCAudioRelayThread stopped
 [%s] %s:%d Invalid value for sessionMode=%d
 [%s] %s:%d Invalid client dictionary!
 [%s] %s:%d %@(%p) Invalid client dictionary!
 [%s] %s:%d Does not support oneToOne mode, but session configuration supports oneToOne Mode
 [%s] %s:%d Failed to create camera rules!
 [%s] %s:%d Invalid packet type: %d
 [%s] %s:%d %@(%p) Invalid packet type: %d
 [%s] %s:%d RTPC Packet is nil
 [%s] %s:%d %@(%p) RTPC Packet is nil
 [%s] %s:%d streamToken=%ld delegate=%p
 [%s] %s:%d %@(%p) streamToken=%ld delegate=%p
 [%s] %s:%d 
 [%s] %s:%d %@(%p) 
 [%s] %s:%d Invalid client registration. RealtimeContext[%p] clientContext[%p] callback[%p] sinkObject[%p]
 [%s] %s:%d Failed to enqueue cient=%p realtimeContext=%p clientContext=%p queue=%p status=%d
 [%s] %s:%d Invalid client unregistration: RealtimeContext[%p] clientContext[%p]
 [%s] %s:%d Failed to enqueue client=%p realtimeContext=%p clientContext=%p queue=%p status=%d
 [%s] %s:%d Invalid operation: %d
 [%s] %s:%d error powerSpectrum[%p] already registered
 [%s] %s:%d GKSConnSettings: %@ => %@
 [%s] %s:%d GKSConnSettings: set server: %@
 [%s] %s:%d  **** GKSConnectivitySettings:setServerAddresses: "Special Allocation For Heap Inspection" has been enabled.
 [%s] %s:%d GKSConnSettings: set client: %@
 [%s] %s:%d GKSConnSettings: prepare to enter getIPPortForService
 [%s] %s:%d GKSConnSettings getCachedIPPort: %08X:%u
 [%s] %s:%d GKSConnSettings getCachedIPPort failed
 [%s] %s:%d GKSConnSettings getIPPortForService: %s == 00
 [%s] %s:%d GKSConnSettings getIPPortForService: %s == nil
 [%s] %s:%d GKSConnSettings getIPPortForService: GKS setting for get SNATMAP IP: %s
 [%s] %s:%d GKSConnSettings getIPPortForService: %s failed to resolve
 [%s] %s:%d GKSConnSettings getIPPortForService: cached %08X:%u
 [%s] %s:%d GKSConnSettings getIPPortForService: %s == %08X:%u
 [%s] %s:%d Clear the locally cached serverbag settings with interval %d seconds [cacheClearTime: %f, now %f]
 [%s] %s:%d Not yet to clear the locally cached serverbag settings. Still %d seconds left [cacheClearTime: %f, now %f]
 [%s] %s:%d value %s
 [%s] %s:%d %s is not present!
 [%s] %s:%d storebag shows we do %s support iRAT recommendation
 [%s] %s:%d storebag does not have %s, enable iRAT recommendation support by default
 [%s] %s:%d storebag shows we should use rate controller type %d
 [%s] %s:%d storebag does not have %s, select both rate controller type by default
 [%s] %s:%d storebag value for '%@' is '%d'
 [%s] %s:%d storebag does not have '%@', default value '%d' selected
 [%s] %s:%d storebag does not have %@, default value '%d' selected
 [%s] %s:%d %s: Read key 'useAdaptiveLearningForFaceTime' from user defaults: %d
 [%s] %s:%d %s: No key 'useAdaptiveLearningForFaceTime' in user defaults. Trying to find it in the storebag
 [%s] %s:%d %s: found storebag value '%@'=%d
 [%s] %s:%d %s: storebag does not have %@, using defaul value %D
 [%s] %s:%d %s: storebag does not have %@, using defaul value %d
 [%s] %s:%d %s: found storebag value '%@'=%f
 [%s] %s:%d %s: storebag does not have %@, using defaul value %f
 [%s] %s:%d Found storebag value '%@'=%@, using threshold value %d
 [%s] %s:%d Storebag does not have %@, using threshold value %d from default distribution %@
 [%s] %s:%d Found storebag value '%@'=%f, using %f
 [%s] %s:%d Storebag does not have %@, using default value %f
 [%s] %s:%d Found storebag value '%@'=%@
 [%s] %s:%d Storebag does not have %@, using default value %d
 [%s] %s:%d Storebag does not have %@, using default value %@
 [%s] %s:%d storebag value for '%@' is '%@'
 [%s] %s:%d storebag does not have '%@', default value '%@' selected
 [%s] %s:%d storebag map value for '%@' is '%@'
 [%s] %s:%d storebag does not have '%@'
 [%s] %s:%d Found storebag value '%@'=%@, using %@
 [%s] %s:%d Storebag does not have %@, using %@
 [%s] %s:%d Storebag does not have %@, using feature flag domain=%s name=%s value=%d
 [%s] %s:%d Setting maxAllowedRedundancyPercentage = %d
 [%s] %s:%d Unexpected reportMinPeriod storebag value %f, falling back to default %f
 [%s] %s:%d Redundancy frozen reason=%d isNetworkCongested=%d _offChannelTimeRatio=%2.3f bluetoohResetFlag=%d
 [%s] %s:%d Redundancy unfrozen reason=%d isNetworkCongested=%d _offChannelTimeRatio=%2.3f
 [%s] %s:%d Redundancy reset
 [%s] %s:%d wrong type of statistics message is processed by VCRedundancyControl type=%d
 [%s] %s:%d wrong type of statistics message is processed by VCRedundancyControl
 [%s] %s:%d Frame Losss Stats size=%d loss=%d
 [%s] %s:%d Redundancy level changed from %d to %d _redundancyMode=%d redundancyPercentageBasedOnPLR=%d redundancyPercentageBasedOnBurstyLoss=%d _plrEnvelope=%3.3f _packetLossPercentage=%3.3f _packetLossPercentageVideo=%3.3f _mediaControlInfoFECFeedbackVersion=%d
 [%s] %s:%d Redundancy level _packetLossPercentage=%2.2f _packetLossPercentageVideo=%2.2f _plrEnvelope=%2.2f currentPLR=%2.2f GetFECVPLR=%2.2f
 [%s] %s:%d Parameter 'connectionID' may not be NULL
 [%s] %s:%d Failed to create nw_connection for RTP
 [%s] %s:%d Failed to setup NWConnection for RTP transport session
 [%s] %s:%d Failed to create nw_connection for RTCP
 [%s] %s:%d Failed to setup NWConnection for RTCP transport session
 [%s] %s:%d Get error %@ from nw connection with state: %d!
 [%s] %s:%d Parameter 'operationResult' must be non-nil
 [%s] %s:%d Parameter 'semaphore' must be non-nil
 [%s] %s:%d Get nw connection state %d
 [%s] %s:%d Failed to set handlers for NWConnection '%@'
 [%s] %s:%d nw_connection ready timeout
 [%s] %s:%d nw_connection start failed
 [%s] %s:%d NULL vfd
 [%s] %s:%d Invalid Stream Type
 [%s] %s:%d VTP socket creation failed for RTP
 [%s] %s:%d VTP socket creation failed for RTCP
 [%s] %s:%d VTP_SetSocketMode failed %x
 [%s] %s:%d VTP_SetPktType failed %x
 [%s] %s:%d VTP_ScheduleReceiveForNWConnection failed for RTP
 [%s] %s:%d VTP_ScheduleReceiveForNWConnection failed for RTCP
 [%s] %s:%d nw_connection %p is backed by socket %d duped to %d
 [%s] %s:%d nw_connection %p is backed by socket %d. Failed to dup
 [%s] %s:%d Not setting unexpected wifi nw_interface_subtype_t %d
 [%s] %s:%d Not setting unexpected nw_interface_type_t %d
 [%s] %s:%d nw_connection_copy_current_path failed
 [%s] %s:%d nw_connection_copy_endpoint failed
 [%s] %s:%d nw_endpoint_get_address failed
 [%s] %s:%d Invalid direction %d
 [%s] %s:%d Failed to create sync destination change event queue
 [%s] %s:%d %@(%p) Failed to create sync destination change event queue
 [%s] %s:%d Failed to create sync destination change event pool
 [%s] %s:%d Failed to create audio power spectrum
 [%s] %s:%d Streams are already setup
 [%s] %s:%d %@(%p) Streams are already setup
 [%s] %s:%d updated _maxChannelCount to channel count: %d
 [%s] %s:%d %@(%p) updated _maxChannelCount to channel count: %d
 [%s] %s:%d Failed to create audioIO. operatingMode=%d deviceRole=%d direction=%d
 [%s] %s:%d %@(%p) Failed to create audioIO. operatingMode=%d deviceRole=%d direction=%d
 [%s] %s:%d Failed to reconfigure: audioIO=%p operatingMode=%d deviceRole=%d direction=%d
 [%s] %s:%d %@(%p) Failed to reconfigure: audioIO=%p operatingMode=%d deviceRole=%d direction=%d
 [%s] %s:%d configured audioIO=%p operatingMode=%d deviceRole=%d direction=%d isMuted=%d audioType=%d maxChannelCount=%d
 [%s] %s:%d %@(%p) configured audioIO=%p operatingMode=%d deviceRole=%d direction=%d isMuted=%d audioType=%d maxChannelCount=%d
 [%s] %s:%d Failed to create sample buffer
 [%s] %s:%d %@(%p) Failed to create sample buffer
 [%s] %s:%d stop audio IO failed
 [%s] %s:%d %@(%p) stop audio IO failed
 [%s] %s:%d configure audio IO failed
 [%s] %s:%d %@(%p) configure audio IO failed
 [%s] %s:%d start audio IO failed
 [%s] %s:%d %@(%p) start audio IO failed
 [%s] %s:%d (%p) starting audioIO=%p
 [%s] %s:%d %@(%p) (%p) starting audioIO=%p
 [%s] %s:%d Stopping audioIO=%p
 [%s] %s:%d %@(%p) Stopping audioIO=%p
 [%s] %s:%d audioIO already stopped
 [%s] %s:%d %@(%p) audioIO already stopped
 [%s] %s:%d Failed to configure the power spectrum source
 [%s] %s:%d %@(%p) Failed to configure the power spectrum source
 [%s] %s:%d Health Monitor for Audio Stream %s Group streamID=%u audio=%ukbps VCAudioIO=%p procsCount=%u averagePower=%f state=%d noVoiceActivityPacketCount=%u
 [%s] %s:%d %@(%p) Health Monitor for Audio Stream %s Group streamID=%u audio=%ukbps VCAudioIO=%p procsCount=%u averagePower=%f state=%d noVoiceActivityPacketCount=%u
 [%s] %s:%d Unexpected event type
 [%s] %s:%d Error adding sync destination change event to the queue. error=%d
 [%s] %s:%d %@(%p) Error adding sync destination change event to the queue. error=%d
 [%s] %s:%d audioIO=%p
 [%s] %s:%d %@(%p) audioIO=%p
 [%s] %s:%d syncDestination[%p] is already in the list for streamGroup[%p]
 [%s] %s:%d Failed allocating memory for listEntry
 [%s] %s:%d Added syncDestination[%p] from list, on streamGroup[%p]
 [%s] %s:%d Removed syncDestination[%p] from list, on streamGroup[%p]
 [%s] %s:%d GKInterfaceListener Dynamic store instance NULL, discontinuing Wifi detection.
 [%s] %s:%d DynamicStoreCallbackForWifiChanges: key[%d]=%s
 [%s] %s:%d GKInterfaceListener network %d %s
 [%s] %s:%d GKInterfaceListener no active interface found.
 [%s] %s:%d GKInterfaceListener SCDynamicStoreSetNotificationKeys failed
 [%s] %s:%d GKInterfaceListener: network information changed.
 [%s] %s:%d GKInterfaceListener: not setting up correctly
 [%s] %s:%d Link issues with interface %s 
 %s=%s 
 %s=%s 
 %s=%s
 [%s] %s:%d calculateNOWRDWithDuration exceeded max possible iterations iterationCount=%d first=%d frontIndex=%d rearIndex=%d time@first=%f time@rearIndex=%f  duration=%f
 [%s] %s:%d Didn't return a connection result in the ICE result wait queue.  This shouldn't happen
 [%s] %s:%d figFormat is NULL for audioBufferList=%p
 [%s] %s:%d sampleBuffer is NULL for audioBufferList=%p
 [%s] %s:%d Adding remote audio sample failed because we are in local recording mode.
 [%s] %s:%d sampleBuffer is NULL %p
 [%s] %s:%d remoteScreenAttributes is %f, %f
 [%s] %s:%d Should resize frames for moments:%d
 [%s] %s:%d VCMomentsHistory %s
 [%s] %s:%d VCMomentsHistory %s photo writing to file success(%d)
 [%s] %s:%d VCMomentsHistory %s timestamp %d
 [%s] %s:%d current writer doesn't exist
 [%s] %s:%d sample is NULL
 [%s] %s:%d %s %s
 [%s] %s:%d Ignoring Cleanup Active Request, because localVideoRecording is enabled.
 [%s] %s:%d completion handler count is %lu
 [%s] %s:%d currentWriter=%@
 [%s] %s:%d , %@
 [%s] %s:%d Setting image type from %d to %d
 [%s] %s:%d Setting video codec from %d to %d
 [%s] %s:%d write to file %d stillImageURL:%@
 [%s] %s:%d can not find such frame for timestamp %d in buffer
 [%s] %s:%d , VCMomentsUtil_SetupBufferPool for resizing failed
 [%s] %s:%d VCMomentsHistory visible Width is %f, height %f rect (%f,%f) (%fx%f)
 [%s] %s:%d for %@
 [%s] %s:%d copying live photo for %@
 [%s] %s:%d copying file failed %@
 [%s] %s:%d copying file from  %@ to %@ error %d
 [%s] %s:%d handler for %@ not found
 [%s] %s:%d , failed to create sample buffer for %s, timestamp %d
 [%s] %s:%d Updating video buffer for timestamp %d
 [%s] %s:%d Current emulated network serviceRate=%d, serviceRateMean=%d, serviceRateStdDev=%d, AQMRate=%d
 [%s] %s:%d packetID:%d, isLost:%d, packet size:%d, serviceRate:%d, serviceTime:%f, arrivalTime:%f, departureTime:%f
 [%s] %s:%d Cannot update index when updating network settings
VCRC [%s] %s:%d Configuring VCRateControl algorithm with targetBitrate=%d, minBitrate=%d, maxBitrate=%d, burstyTraffic=%d
VCRC [%s] %s:%d This algorithm does not support statistics type:%d to do rate control
VCRC [%s] %s:%d wrong type of statistics message is processed by VCRateControl
VCRC [%s] %s:%d Duplicated feedback or out-of-order feedback messages! timestamp:0x%04X, previousTimestamp:0x%04X
VCRC [%s] %s:%d Rate controller is paused
VCRC [%s] %s:%d Unknown VCRateControl state %d
VCRC [%s] %s:%d wrong type of statistics message is processed by VCRateControl baseband
VCRC [%s] %s:%d %8.3f/%04X:
%.4f
%.4f
%.4f
%.4f %c
RTT:%-4u
PLR:%4.2f@%.1f
RRx:%4u
MBL:%d
%4u/%4u
  CS:%04X %04X %u BB: %3u
 UAT %s _
VCTextStream [%s] %s:%d VCTextStream[%p] %s
VCTextStream [%s] %s:%d 
VCTextStream [%s] %s:%d %@(%p) 
VCTextStream [%s] %s:%d Sending text:'%C'
VCTextStream [%s] %s:%d %@(%p) Sending text:'%C'
VCTextStream [%s] %s:%d Sending text:%@
VCTextStream [%s] %s:%d %@(%p) Sending text:%@
VCTextStream [%s] %s:%d Error: -didReceiveText: should be called instead of this method.
VCTextStream [%s] %s:%d %@(%p) Error: -didReceiveText: should be called instead of this method.
VCTextStream [%s] %s:%d error[%s]
VCTextStream [%s] %s:%d %@(%p) error[%s]
VCTextStream [%s] %s:%d Failed to create transport
VCTextStream [%s] %s:%d %@(%p) Failed to create transport
 [%s] %s:%d FigThreadCreate(LoopbackTunnelReceiveProc) failed %d
 [%s] %s:%d vtpIP = %s
 [%s] %s:%d LoopbackTunnelReceiveProc stopped
 [%s] %s:%d Registering with an invalid interface type=%u
 [%s] %s:%d %@(%p) Registering with an invalid interface type=%u
 [%s] %s:%d Registered rateSharingClient=%p for interface type=%u
 [%s] %s:%d De-registered rateSharingClient=%p for interface type=%u
 [%s] %s:%d De-registering an unregistered rateSharingClient=%p
 [%s] %s:%d %@(%p) De-registering an unregistered rateSharingClient=%p
 [%s] %s:%d Failed to create internal statistics collector for redundancy controller
 [%s] %s:%d Video redundancy is disabled.
 [%s] %s:%d In-appropriate mode %d for VCRedundancyControllerVideo
 [%s] %s:%d Filter out statistics not belong to this redundancyController with id:%llu, statisticsID:%llu
 [%s] %s:%d Video redundancy percentage changed from %d to %d with mode %d
 [%s] %s:%d Video redundancy interval %f, which should be 0 since we don't support cross-frame FEC yet
 [%s] %s:%d Reset redundancy strategy, BT device %s state=%d while WLAN's on 2.4GHz
 [%s] %s:%d %@(%p) Reset redundancy strategy, BT device %s state=%d while WLAN's on 2.4GHz
 [%s] %s:%d Invalid parameters 'buffer' passed to the method
 [%s] %s:%d Invalid size of input data %d
 [%s] %s:%d Attempt to set mapping for already mapped key '%@'. Suggested map '%d' will be ignored
 [%s] %s:%d Mapping set for '%@'
 [%s] %s:%d keyToCompare is not of VCMediaKeyIndex class
 [%s] %s:%d prefix is not of VCMediaKeyIndex class
 [%s] %s:%d Invalid parameters passed to the method
 [%s] %s:%d Size of input buffer is too small (bufferSize=%d < copySize=%d)
VCRC [%s] %s:%d AdaptiveLearning(AFRC): Setting up initial bitrate for segment %@ - learnt target bitrate %d, selected tier %d, default bitrate %d
VCRC [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/MediaQueue/AFRC.c:%d: calloc(%d) failed
VCRC [%s] %s:%d AFRCCreateHandle: RTCReportingAgent is nil
VCRC [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/MediaQueue/AFRC.c:%d: AFRCCreateHandle failed
VCRC [%s] %s:%d AFRCCreateHandle (CellTech local[%s:%d] remote[%s:%d]).
VCRC [%s] %s:%d Invalid parameter dwTxCap %u
VCRC [%s] %s:%d AFRC: Forcing AFRC TxCap to %u from defaults
VCRC [%s] %s:%d ### AFRCSetTxCap: (%u->%u)
VCRC [%s] %s:%d *!*!*!* UpdateRxEstimate: too short Seq; ------ dBWD: 0 (%d/%f/%d) 
VCRC [%s] %s:%d AFRCCalcRxEstimate [%d]: //////
/////tp: %d  ts/arr: %d/%f 
 seq: %d sz: %d 
 path: %d (%d)  BWD: %f/%f  Est: %f
VCRC [%s] %s:%d AFRCCalcRxEstimate [%d]: //////
VCRC [%s] %s:%d AFRCCalcRxEstimate [%d]: //////
VCRC [%s] %s:%d AFRCCalcRxEstimate [%d]: //////
/////tp: %d  ts/arr: %d/%f 
 seq: %d sz: %d 
 path: %d (%d)  BWD: %f/%f  Est: %f
VCRC [%s] %s:%d 
 AFRCCalcRxEstimate [%d]: //////
VCRC [%s] %s:%d Bandwidth estimation new: %d, afrc:%d
VCRC [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/MediaQueue/AFRC.c:%d: Bad ACK, #dropped SN doesn't match(%d != %u).
VCRC [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/MediaQueue/AFRC.c:%d: Bad ACK, #dropped SN exceeds limit(%d > %d).
VCRC [%s] %s:%d Baseband dropped %u packet(s) for PT %u.
VCRC [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/MediaQueue/AFRC.c:%d: Got PTs more than MAX_PAYLOADTYPES(%d) in a DropACK
VCRC [%s] %s:%d AFRCSetAudioPaused: local? %d, audio paused? %d
VCRC [%s] %s:%d AFRCUpdateCellTech: iLocalCellTech: %s -> %s  iRemoteCellTech: %s -> %s  fEnableRRx: %d  didHandover: %d
VCRC [%s] %s:%d ProcessWCMSetCallConfig: (%u->%u), interference: (%u), clientTxCap: %u
VCRC [%s] %s:%d ProcessWCMGetCallConfig: (TxCap %u, TxRate %u).
VCRC [%s] %s:%d ### Add BB dump for AFRC
VCRC [%s] %s:%d AFRCSetConnectionNumber (%d->%d)
VCRC [%s] %s:%d BWEstResetRecvrBWState
VCRC [%s] %s:%d BWEst FilterType: %d/%s <-- ImOnCellular: %d/%s  RemoteOnCellular: %d/%s  PeerIsOnIOS: %d 
VCRC [%s] %s:%d ////^^^^ BWEUpdateSenderRecvrEnabledStates: Sender/Recvr %d/%d iLocalCellTech: %s  iRemoteCellTech: %s
VCRC [%s] %s:%d ////^^^^ AFRCSetBWEstMode: Sender/Recvr (master) %d/%d 
VCRC [%s] %s:%d ////^^^^ AFRCSetBWEstMode: FALLING TO BW-EST BACKWARD COMPATIBLITY MODE
VCRC [%s] %s:%d AFRCSetBWECap newBitrateCap: %d -> dwFakeBitrateCap: %d  
VCRC [%s] %s:%d ### AFRC log %s
VCRC [%s] %s:%d ### AFRC dump %s
VCRC [%s] %s:%d ArrivalTime:%.4f, BWD:%.2f, state:%d, divergeCount:%d prob_seq:[duration:%.4f, size:%d, count:%d], EstimatedBandwidth:%.2f
VCRC [%s] %s:%d 
BIG FRAME report at %.3f, %d/%d frames: %s
VCRC [%s] %s:%d Audio fraction change [%.2f->%.2f].
VCRC [%s] %s:%d %s is hit, [audio:%u, factor:%.2f, FEC:%.2f, RED:%u, %u, %02X->%02X]
VCRC [%s] %s:%d AFRC: Video %s...
VCRC [%s] %s:%d AFRC: Congestion!!! TxRate v %u, Baseband.
VCRC [%s] %s:%d AFRC: %s
VCRC [%s] %s:%d AFRC: Congestion!!! TxRate v %u
VCRC [%s] %s:%d AFRC: TxRate ^ %u
VCRC [%s] %s:%d AFRC: [%u] Rate was limited
VCRC [%s] %s:%d AFRC: [%u] Stabilized (TxTS %u >= %u FB). now collecting samples...
VCRC [%s] %s:%d AFRC: [%u] Collected %d samples (TxTS %u)
VCRC [%s] %s:%d AFRC: %8.3f %.3f/%04X %.4f(%d) %u %.4f %.4f %u %u %u %u%s
VCRC [%s] %s:%d AFRC: %8.3f/%04X: %.4f %.4f %.4f %.4f %c RTT:%u PLR:%4.1f@%.1f %u %u RRx:%u MBL:%d %3u/%3u%s
BB: %u
%s%s
VCRC [%s] %s:%d Forcing Audio FEC Level 100,150,200 at PLR:(%.2f, %.2f, %.2f) from defaults
VCRC [%s] %s:%d Forcing AFRC TxCap to %u from defaults
VCRC [%s] %s:%d Forcing AFRC TxRate to %u from defaults
VCRC [%s] %s:%d ////^^^^ Initial BWEstEnableNewst_Recvr/_Sender %d/%d  
 BWEstProbeInterval: %f  BWEstDemoLogInterval: %d  BWEstLogType: %d  BWEstLogLevel: %x 
VCRC [%s] %s:%d ///////////////////////AFRCCreateHandle startAFRC//////////////////////// %p
VCRC [%s] %s:%d HackUploadBW: %d  V1BWE: %d 
VCRC [%s] %s:%d ////////////////// Loss event reports //////////////////////////
///// Video: %d/%d
last seq#: %d 
 Audio: %d/%d last seq#: %d
///// Avg. BW: %f  
  with %d reports
///////////////////////////////////////////////////////
VCRC [%s] %s:%d //////
////// In %.1f seconds: Video: %f KB/%d = %d B  avg. %.1f kbits/s  %.1f pkts/s 
//////                  Audio: %f KB/%d = %d B  avg. %.1f kbits/s  %.1f pkts/s 
VCRC [%s] %s:%d 
///// Avg. BW (ORG Scheme): %f  
  with %d reports
////// In %.1f seconds: Video: %f KB/%d = %d B  avg. %.1f kbits/s  %.1f pkts/s 
//////                  Audio: %f KB/%d = %d B  avg. %.1f kbits/s  %.1f pkts/s 
///////////////////////////////////////////////////////
VCRC [%s] %s:%d Enabling LF
VCRC [%s] %s:%d ^ %.3f since last LF; CRITICAL: letting it go; size is %d 
VCRC [%s] %s:%d ^^^^^ LARGE frame req'd of %d 
VCRC [%s] %s:%d ^^^^^ LARGE frame req'd of %d (%d, %d, R %d)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/MediaQueue/MediaQueue.c:%d: calloc(%d) failed
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/MediaQueue/MediaQueue.c:%d: CreateHandle failed
 [%s] %s:%d MediaQueueSendProc Thread already started
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/MediaQueue/MediaQueue.c:%d: pthread_create(MediaQueueSendProc) failed (%08X)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/MediaQueue/MediaQueue.c:%d: Request buffer size(%d) too big!
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/MediaQueue/MediaQueue.c:%d: Media queue closing, free packet!
 [%s] %s:%d MediaQueue_SetRedundantAudio fRedundantAudio (%d->%d)
 [%s] %s:%d MediaQueue_SetRedundantAudio isRedEnabled (%d->%d)
 [%s] %s:%d MediaQueue_SetdAudioFraction (%.2f->%.2f)
 [%s] %s:%d MediaQueue_SetAudioFECLevel (%.3f->%.3f)
 [%s] %s:%d AddPacket: ^^^^^^
 incoming %d %d/%d/%d 
 [%s] %s:%d AddPacket: ^^^^^^
 ProbeSeq %d/%d bNewProbeSeq %d bVideoPacketPartOfActiveProbeSeq %d 
 [%s] %s:%d AddPacket: ^^^^^^
 MP belonging to an active Probe. Going to the main list
 [%s] %s:%d AddPacket: ^^^^^^
 Audio %d CAME. KICKING ProbeSeq (%d) from %d/%d/%d to %d/%d/%d 
 [%s] %s:%d AddPacket: ^^^^^^
 Regular frame %d is blocked in the waiting list...
 [%s] %s:%d AddPacket: ^^^^^^
 ProbeSeq/Regular frame %d (%d) waiting for the next Audio
 [%s] %s:%d 
 *** ActiveProbing_FlushPendingPackets: flushed %d pkts; ProbeSeqId: %d->%d, VideoFrameTS: %d->%d 
 [%s] %s:%d 
 *** ActiveProbing_FlushPendingPackets: Unexpected: flushed %d pkts vs. %d queue length 
 [%s] %s:%d 
 *** ActiveProbing_FlushPendingPackets: flushed 0 pkts; alraedy empty
 [%s] %s:%d MediaQueueSendProc Thread start...
 [%s] %s:%d SENDPROC: ^^^^^^ @%.3f
MP %d  %d/%d/%d  QLen: %d/%d  Probe: %d
 [%s] %s:%d MediaQueueSendProc Thread end...
 [%s] %s:%d Refresh frame counter[%d], time[%.4f].
 [%s] %s:%d Adding extension failed with result %08X
 [%s] %s:%d RTP(%08X): seq number wc %d
 [%s] %s:%d Media queue overflow! maxLength=%d, currentLength=%d
 [%s] %s:%d ^^^^^^ 
ActiveProbing_Uninit  V/A packets sent: %d/%d
 [%s] %s:%d ^^^^ SeqId for VMP TS/seq %d/%d to %d
 [%s] %s:%d CMBlockBufferCreateWithMemoryBlock failed
 [%s] %s:%d CMBlockBufferGetDataPointer failed
 [%s] %s:%d VCCryptor_Encrypt failed with error %d
 [%s] %s:%d input buffer should not be NULL
 [%s] %s:%d output buffer should not be NULL
 [%s] %s:%d inputBuffer contains incorrect data size '%zu'
 [%s] %s:%d Could not update encryption cryptors for messaging, result:%X
 [%s] %s:%d Can not set currentSendMKI '%@': can not find corresponding cryptor for key
 [%s] %s:%d MKI '%@' has already been configured for this session. Ignoring duplicate
 [%s] %s:%d Could not create crypto set for messaging, result:%X
 [%s] %s:%d Can not set currentSendMKI with keyMaterial '%@': can not find corresponding cryptor
 [%s] %s:%d Can not set currentSendMKI with keyMaterial '%@': absent MKI
 [%s] %s:%d MKI=%@ has already been configured. Ignoring duplicate
 [%s] %s:%d updateEncryption: media key/salt derivation failed
 [%s] %s:%d SRTPUpdateEncryptionInfo: failed to update encryption info
 [%s] %s:%d Cryptor for keyIndex:%@ is updated
 [%s] %s:%d Failed to create cryptoInfo with keyIndex:%@
 [%s] %s:%d encryptData: with currentSendMKI='%@', sequenceNumber=%d
 [%s] %s:%d encryptData: _currentSendMKI (%@) failed to match any cryptors
 [%s] %s:%d decryptWithMKI: currentReceiveMKI='%@', sequenceNumber=%d
 [%s] %s:%d decryptWithMKI: MKI (%@) failed to match any cryptors
 [%s] %s:%d Cannot create output queue successfully!
 [%s] %s:%d Selected FEC Optimization: unit %d, finalFECMode: %d, RSOptimization: %d, interleaved SIMD load/store instr available: %d
 [%s] %s:%d Invalid input argument recoveryPacketBuffers[%p] recoveryPacketSizes[%p]
 [%s] %s:%d Invalid Buffer Size
 [%s] %s:%d DecodeByteBuffe failed!
 [%s] %s:%d Invalid number of symbols per packet (%d)
 [%s] %s:%d Got unsupported SIMD fetch type %d for packetOffset=%d
 [%s] %s:%d Cannot gather all parity from packet. Size=%d, offset=%d, codewordIdx=%d
 [%s] %s:%d Configuration pointer is nil
 [%s] %s:%d encode = %dx%d
 [%s] %s:%d Failed to create buffer queue
 [%s] %s:%d Failed to create video packet allocator: %d
 [%s] %s:%d Failed to create thread "%s"
 [%s] %s:%d VCVideoStreamTransmitter startVideo
 [%s] %s:%d Drop a pending frame (encoder). Already has a frame for encoder
 [%s] %s:%d key frame requested for next pixel buffer, FIRType %d.
 [%s] %s:%d key frame was already requested, FIRType: %d
 [%s] %s:%d Failed to allocate bitRate array
 [%s] %s:%d Failed to create bitRate value
 [%s] %s:%d Not implemented!
 [%s] %s:%d Failed to get image buffer
 [%s] %s:%d sendFrame: Error while allocating %d bytes
 [%s] %s:%d sendFrame: Error: Error getting data buffer
 [%s] %s:%d sendFrame: Error while getting image buffer data
 [%s] %s:%d Failed To Prepend SPS/PPS
 [%s] %s:%d sendFrame: transmitEncodedVideoFrame returned error %d (0x%08x). isKeyFrame=%d
 [%s] %s:%d successfully sent key frame
 [%s] %s:%d RTPGetIsIPv6 failed %d
 [%s] %s:%d VTU_SplitVideoIntoPackets returned 0
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCVideoStreamTransmitter.m:%d: VideoTransmitter transmitGroup failed (%08lX) for group (%d) #packet (%d)
 [%s] %s:%d VideoStreamStats - Tx - framerate:%f, bitrate:%dkbps
 [%s] %s:%d Tx RTCReporting:%s
 [%s] %s:%d Handling active connection change is not implemented for VCVST
 [%s] %s:%d Encoder thread "%s" terminated
 [%s] %s:%d Failed to dequeue sample buffer
 [%s] %s:%d frame encode error %d
 [%s] %s:%d VCCaptionsManager: Context already exists for stream token: %u
 [%s] %s:%d Discarding an old primary frame, payloadType=%d, timestamp=%u, lastDecoded=%u
 [%s] %s:%d Discarding an old redundant frame, timestamp %u, last Decoded %u sequence number %d
 [%s] %s:%d Discarding duplicate audio frame isRedAudio:%d timestamp:%u
 [%s] %s:%d Jitter Queue Max maxPacketTimeDelta Size is not set
 [%s] %s:%d Jitter Queue was reset
 [%s] %s:%d Discard excess performed. New size=%d
 [%s] %s:%d Failed to create monitor because nwConnection is null!
 [%s] %s:%d Monitor cannot be created with an invalid interfaceName
 [%s] %s:%d Destroying monitor=%p
 [%s] %s:%d monitor is null!
 [%s] %s:%d Monitor, handler or context cannot be NULL, monitor=%p, handler=%p, context=%p, monitor->nwMonitor=%p
 [%s] %s:%d monitor, handler or context cannot be NULL, monitor=%p, handler=%p, context=%p monitor->nwMonitor=%p
 [%s] %s:%d Can't add a null monitor!
 [%s] %s:%d Off Channel Metrics currentTimeDelta=%llu accumulatedOffChannelTime=%llu statistics->offChannelTimeRatio=%4.4f offChannelSwitchCount=%u statistics->detectedFrequentOffChannelActivity=%d
 [%s] %s:%d NWConnection notification is nil
 [%s] %s:%d  timestamp%llu
 [%s] %s:%d NWConnection notification submitted with incompatible version=%d, discarding
 [%s] %s:%d monitor=%p
 [%s] %s:%d Failed to create monitor->nwMonitor for monitor=%p!
 [%s] %s:%d Failed to allocate memory for monitor
 [%s] %s:%d Creating monitor=%p with interfaceName=%s
 [%s] %s:%d NWConnection state ready and setting status monitor! monitor=%p
 [%s] %s:%d NWConnection state ready but monitor=%p is already destroyed!
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCNWConnectionMonitor.c:%d: Failed to create status monitor after state ready! monitor=%p
 [%s] %s:%d NWConnection state failed, monitor=%p, state=%d
 [%s] %s:%d NWConnection state cancelled! monitor=%p and monitor->NWConnection=%p is released.
 [%s] %s:%d Starting NWConnection for monitor=%p with interfaceName=%s
 [%s] %s:%d monitor=%p is released
 [%s] %s:%d Monitor is already destroyed!
 [%s] %s:%d monitor->nwMonitor=%p is released, monitor=%p
 [%s] %s:%d NWConnection notification returns error %d, monitor=%p
 [%s] %s:%d monitor is already destroyed! monitor=%p
 [%s] %s:%d NWConnection notification size mismatch. (expected size: %u, actual size: %u) status_data: %p
 [%s] %s:%d Failed to allocate memory for notification!
 [%s] %s:%d NWConnection packet event returns error %d
 [%s] %s:%d Failed to allocate memory for packetEvent!
 [%s] %s:%d Receive other unknown event type %d
 [%s] %s:%d inDelegate=%@
 [%s] %s:%d Results from initializtion: %@
 [%s] %s:%d Error initializing Effects. Deallocing. error=%@
 [%s] %s:%d Begin
 [%s] %s:%d Results from termination: %@
 [%s] %s:%d End
 [%s] %s:%d delegate=%@
 [%s] %s:%d xpcSenderQueue was null, cannot make the remote queue
 [%s] %s:%d mode=%d
 [%s] %s:%d effectType=%d
 [%s] %s:%d Effect type is already set to %d
 [%s] %s:%d videoFrame=%@
 [%s] %s:%d NULL newInstance
 [%s] %s:%d allocate failed
 [%s] %s:%d NULL object
 [%s] %s:%d Failed to initialize VCSessionUplinkVideoStreamController. Invalid RTCP config.
 [%s] %s:%d %@(%p) Failed to initialize VCSessionUplinkVideoStreamController. Invalid RTCP config.
 [%s] %s:%d streamIDsCell is nil
 [%s] %s:%d %@(%p) streamIDsCell is nil
 [%s] %s:%d Cell stream %@ position %d, framesPerIdrPeriod %d
 [%s] %s:%d %@(%p) Cell stream %@ position %d, framesPerIdrPeriod %d
 [%s] %s:%d StreamScheduleCell (active) is %@
 [%s] %s:%d %@(%p) StreamScheduleCell (active) is %@
 [%s] %s:%d StreamScheduleCell is %@
 [%s] %s:%d %@(%p) StreamScheduleCell is %@
 [%s] %s:%d streamIDsWifi is nil
 [%s] %s:%d %@(%p) streamIDsWifi is nil
 [%s] %s:%d Wifi stream %@, position %d, framesPerIdrPeriod %d
 [%s] %s:%d %@(%p) Wifi stream %@, position %d, framesPerIdrPeriod %d
 [%s] %s:%d StreamScheduleWifi (active) is %@
 [%s] %s:%d %@(%p) StreamScheduleWifi (active) is %@
 [%s] %s:%d StreamScheduleWifi is %@
 [%s] %s:%d %@(%p) StreamScheduleWifi is %@
 [%s] %s:%d Setting pending streams %@
 [%s] %s:%d %@(%p) Setting pending streams %@
 [%s] %s:%d _streamsPendingKeyFrameGeneration array has been non zero for %5.2f seconds, streams=%@
 [%s] %s:%d %@(%p) _streamsPendingKeyFrameGeneration array has been non zero for %5.2f seconds, streams=%@
 [%s] %s:%d FrameTime is %f
 [%s] %s:%d %@(%p) FrameTime is %f
 [%s] %s:%d Current interface isLocalOnCellular %d %@
 [%s] %s:%d %@(%p) Current interface isLocalOnCellular %d %@
 [%s] %s:%d anchor stream doesn't exist
 [%s] %s:%d %@(%p) anchor stream doesn't exist
 [%s] %s:%d schedule for anchor stream %@ on Wifi not found
 [%s] %s:%d %@(%p) schedule for anchor stream %@ on Wifi not found
 [%s] %s:%d schedule for anchor stream %@ on cell not found
 [%s] %s:%d %@(%p) schedule for anchor stream %@ on cell not found
 [%s] %s:%d StreamInfo array is nil, empty, or its streamConfigs array is nil or empty.
 [%s] %s:%d %@(%p) StreamInfo array is nil, empty, or its streamConfigs array is nil or empty.
 [%s] %s:%d Invalid RTCP config. firstStreamRTCPEnabled=%d but stream=%p has a different value. All streams must have matching isRTCPEnabled values.
 [%s] %s:%d %@(%p) Invalid RTCP config. firstStreamRTCPEnabled=%d but stream=%p has a different value. All streams must have matching isRTCPEnabled values.
 [%s] %s:%d no streams available
 [%s] %s:%d %@(%p) no streams available
 [%s] %s:%d Non temporal stream's schedule is nil for streamID %@
 [%s] %s:%d %@(%p) Non temporal stream's schedule is nil for streamID %@
 [%s] %s:%d streamResumed %d activeVideoStreams %@
 [%s] %s:%d %@(%p) streamResumed %d activeVideoStreams %@
 [%s] %s:%d Calculated value is not a number expectedTimePercentage=%f. IDR scheduler may not have initialized framesPerIdrPeriod=%d
 [%s] %s:%d %@(%p) Calculated value is not a number expectedTimePercentage=%f. IDR scheduler may not have initialized framesPerIdrPeriod=%d
 [%s] %s:%d reminderTimePercentage=%3.2f, expectedTimePercentage=%3.2f, _currentFrameTime=%5.2f, _startTime=%5.2f.
 [%s] %s:%d %@(%p) reminderTimePercentage=%3.2f, expectedTimePercentage=%3.2f, _currentFrameTime=%5.2f, _startTime=%5.2f.
 [%s] %s:%d streamPaused %d activeVideoStreams %@
 [%s] %s:%d %@(%p) streamPaused %d activeVideoStreams %@
 [%s] %s:%d Requesting a streamID %@ that is not in any of the compound streamIDs
 [%s] %s:%d %@(%p) Requesting a streamID %@ that is not in any of the compound streamIDs
 [%s] %s:%d  Stream is nil for streamID %@, sendingStreamID %@ activeVideoStreams %@
 [%s] %s:%d %@(%p)  Stream is nil for streamID %@, sendingStreamID %@ activeVideoStreams %@
 [%s] %s:%d Non temporal stream's schedule is nil for streamID %@, sendingStreamID %@
 [%s] %s:%d %@(%p) Non temporal stream's schedule is nil for streamID %@, sendingStreamID %@
 [%s] %s:%d Stream is nil
 [%s] %s:%d %@(%p) Stream is nil
 [%s] %s:%d Non temporal stream's schedule stream is nil
 [%s] %s:%d %@(%p) Non temporal stream's schedule stream is nil
 [%s] %s:%d Could not allocate memory for pendingVideoStreams dictionary
 [%s] %s:%d %@(%p) Could not allocate memory for pendingVideoStreams dictionary
 [%s] %s:%d SSRC=%u, type=%hhu
 [%s] %s:%d AVCPacketFilterRTP: init filter with SSRC %08X, type %d
 [%s] %s:%d Do not have a valid packetParam
 [%s] %s:%d Forcing audio payload: %d
 [%s] %s:%d Invalid payload (%d) for forceAudioPayload. Forcing PureVoice.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCPayloadUtils.m:%d: Unsupported payload type: %d
 [%s] %s:%d Failed to allocate standardsBitrateSet
 [%s] %s:%d Failed to allocate filteredAndSortedBitrates
 [%s] %s:%d Failed to allocate primaryBitrates
 [%s] %s:%d Unsupported payload %d
 [%s] %s:%d Unsupported codec type %d
 [%s] %s:%d Unsupported mode %d
 [%s] %s:%d Unsupported bitrate %d
 [%s] %s:%d Failed to allocate the cellular tap type to stream token map
 [%s] %s:%d %@(%p) Failed to allocate the cellular tap type to stream token map
 [%s] %s:%d Failed to allocate the power spectrum meter dictionary
 [%s] %s:%d %@(%p) Failed to allocate the power spectrum meter dictionary
 [%s] %s:%d source.streamToken=%ld
 [%s] %s:%d %@(%p) source.streamToken=%ld
 [%s] %s:%d source[streamToken=%ld] already existed
 [%s] %s:%d %@(%p) source[streamToken=%ld] already existed
 [%s] %s:%d VCPowerSpectrumMeter failed to allocate
 [%s] %s:%d %@(%p) VCPowerSpectrumMeter failed to allocate
 [%s] %s:%d VCPowerSpectrumMeter[%p] created
 [%s] %s:%d %@(%p) VCPowerSpectrumMeter[%p] created
 [%s] %s:%d audioSpectrumRegisterListener: error no powerSpectrumSource for streamToken=%@
 [%s] %s:%d %@(%p) audioSpectrumRegisterListener: error no powerSpectrumSource for streamToken=%@
 [%s] %s:%d powerSpectrumMeter=%@ registered listener for streamToken=%@
 [%s] %s:%d %@(%p) powerSpectrumMeter=%@ registered listener for streamToken=%@
 [%s] %s:%d Invalid tapType=%@
 [%s] %s:%d %@(%p) Invalid tapType=%@
 [%s] %s:%d Failed to allocate the audio tap for tapType=%@
 [%s] %s:%d %@(%p) Failed to allocate the audio tap for tapType=%@
 [%s] %s:%d Failed to create an app tap for tapType=%@ with streamToken=%u
 [%s] %s:%d %@(%p) Failed to create an app tap for tapType=%@ with streamToken=%u
 [%s] %s:%d Failed allocate the client set for tapType=%@
 [%s] %s:%d %@(%p) Failed allocate the client set for tapType=%@
 [%s] %s:%d Stream token not found for tapType=%@
 [%s] %s:%d %@(%p) Stream token not found for tapType=%@
 [%s] %s:%d Missing tapType
 [%s] %s:%d %@(%p) Missing tapType
 [%s] %s:%d Process id is missing tapType=%@
 [%s] %s:%d %@(%p) Process id is missing tapType=%@
 [%s] %s:%d Missing power spectrum meter for tapType=%@
 [%s] %s:%d %@(%p) Missing power spectrum meter for tapType=%@
 [%s] %s:%d Missing power spectrum meter key for tapType=%@
 [%s] %s:%d %@(%p) Missing power spectrum meter key for tapType=%@
 [%s] %s:%d power spectrum meter set not found for tapType=%@
 [%s] %s:%d %@(%p) power spectrum meter set not found for tapType=%@
 [%s] %s:%d power spectrum meter is already registered for tapType=%@
 [%s] %s:%d %@(%p) power spectrum meter is already registered for tapType=%@
 [%s] %s:%d Failed to retrieve the stream token for tapType=%@
 [%s] %s:%d %@(%p) Failed to retrieve the stream token for tapType=%@
 [%s] %s:%d powerSpectrumMeter=%@ registered listener for tapType=%@ with streamToken=%@
 [%s] %s:%d %@(%p) powerSpectrumMeter=%@ registered listener for tapType=%@ with streamToken=%@
 [%s] %s:%d client set not found for tapType=%@
 [%s] %s:%d %@(%p) client set not found for tapType=%@
 [%s] %s:%d No registered power spectrum meters found for tapType=%@
 [%s] %s:%d %@(%p) No registered power spectrum meters found for tapType=%@
 [%s] %s:%d Power spectrum not registered for tapType=%@
 [%s] %s:%d %@(%p) Power spectrum not registered for tapType=%@
 [%s] %s:%d Failed to unregister listener for tapType=%@ streamToken=%@
 [%s] %s:%d %@(%p) Failed to unregister listener for tapType=%@ streamToken=%@
 [%s] %s:%d Bin count is invalid
 [%s] %s:%d %@(%p) Bin count is invalid
 [%s] %s:%d Refresh rate is invalid
 [%s] %s:%d %@(%p) Refresh rate is invalid
 [%s] %s:%d Force disableAudioPowerSpectrumRegister is YES: inhibiting call to API_VCAUDIOPOWERSPECTURM_REGISTER_LISTENER_KEY
 [%s] %s:%d %@(%p) Force disableAudioPowerSpectrumRegister is YES: inhibiting call to API_VCAUDIOPOWERSPECTURM_REGISTER_LISTENER_KEY
 [%s] %s:%d Invalid context. Power spectrum meter is nil
 [%s] %s:%d %@(%p) Invalid context. Power spectrum meter is nil
 [%s] %s:%d audioSpectrumRegisterListener: error no stream token specified
 [%s] %s:%d %@(%p) audioSpectrumRegisterListener: error no stream token specified
 [%s] %s:%d Failed to register the listener
 [%s] %s:%d %@(%p) Failed to register the listener
 [%s] %s:%d audioSpectrumUnregisterListener: error no stream token specified
 [%s] %s:%d %@(%p) audioSpectrumUnregisterListener: error no stream token specified
 [%s] %s:%d Failed to register the listener. error=%@
 [%s] %s:%d %@(%p) Failed to register the listener. error=%@
 [%s] %s:%d Failed to unregister the listener. error=%@
 [%s] %s:%d %@(%p) Failed to unregister the listener. error=%@
 [%s] %s:%d meter[%p] spectrums[%@]
 [%s] %s:%d %@(%p) meter[%p] spectrums[%@]
 [%s] %s:%d PSFB PLI will be sent in the next RTCP interval
 [%s] %s:%d PSFB PLI is already scheduled to be sent in the next RTCP interval
 [%s] %s:%d RTPFB TMMBR bitrate:%d, will be sent in the next RTCP interval
 [%s] %s:%d RTPFB TMMBR is already scheduled to be sent in the next RTCP interval
 [%s] %s:%d i=%d awSizeAndFirstMBs=%d paramSizeAndFirstMBs=%d
 [%s] %s:%d Invalid Slice! i=%d awSizeAndFirstMBs=%d paramSizeAndFirstMBs=%d
 [%s] %s:%d Unable to add RTCL packet (%X)
 [%s] %s:%d Unable to add custom SR/RR packet (%X)
 [%s] %s:%d Unable to add SR/RR packet (%X)
 [%s] %s:%d RTCP buffer too small. Unable to add SDES: %d + %d > %d
 [%s] %s:%d Failed to write RTCP XR. result=%X
 [%s] %s:%d Failed to write PSFB ALFB packet, result=%X
 [%s] %s:%d Unable to add custom APP packet (%X))
 [%s] %s:%d RTCP buffer too small. Unable to add FIR: %d + %d > %d
 [%s] %s:%d RTCP buffer too small. Unable to add NACK: %d + %d > %d
 [%s] %s:%d Failed to write FIR: (%X)
 [%s] %s:%d Failed to write PLI: (%X)
 [%s] %s:%d Failed to write TSTR: (%X)
 [%s] %s:%d Failed to write TSTN: (%X)
 [%s] %s:%d Failed to write TMMBR: (%X)
 [%s] %s:%d Failed to write TMMBN: (%X)
 [%s] %s:%d RTCP buffer too small. Unable to add BYE: %d + %d > %d
 [%s] %s:%d SRTCP encryption failed (%X)
 [%s] %s:%d SRTCP add authentication tag failed (%X)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTCPTransport.c:%d: Invalid RTCP SDES message
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTCPTransport.c:%d: Invalid RTCP BYE message
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTCPTransport.c:%d: Invalid RTCP FIR message
 [%s] %s:%d j=%d awSizeAndFirstMBs=%d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTCPTransport.c:%d: Invalid RTCP NACK message
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTCPTransport.c:%d: Invalid RTCP PSFB message
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTCPTransport.c:%d: Invalid RTCP RTPFB message
 [%s] %s:%d Failed to allocate RTCP packet list
 [%s] %s:%d RTP error[%x]
 [%s] %s:%d Invalid parameter rtpHandle[%p] callbackContext[%p]!
 [%s] %s:%d Failed to checking rtpHandle[%p]
 [%s] %s:%d RTPHandle[%p] Packet callback already registered
 [%s] %s:%d RTCPHandle[%p] Failed store the callback
 [%s] %s:%d RTPHandle[%p], Socket[%d] is invalid
 [%s] %s:%d RTPHandle[%p] RTCP packet callback was not registered
 [%s] %s:%d RTCP receive failed! hResult:(%08X)
 [%s] %s:%d NULL packetList
 [%s] %s:%d Invalid RTP Handle
 [%s] %s:%d Failed to allocate RTCP packet
 [%s] %s:%d RTCP error[%x]
 [%s] %s:%d Invalid parameters
 [%s] %s:%d localSSRC:%X remoteSSRC:%X dwPacketExp = %u lPacketLost = %ld, dwPacketExpInt = %d, lPacketLostInt = %ld, fraction = %d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTCPTransport.c:%d: Sending RTCP SR packet PayloadType=%d NTP Seconds=%u RTPTimestamp=%u
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTCPTransport.c:%d: Failed to add RTCP header
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTCPTransport.c:%d: Not enough space for the RTCP XR packet
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTCPTransport.c:%d: Failed to add the Statistics Summary Report Block. status=%X
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTCPTransport.c:%d: Failed to add the VoIP Metrics Report Block. status=%X
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTCPTransport.c:%d: Failed to finalize the XR packet. status=%X
 [%s] %s:%d Failed to add a PSFB ALFB Loss Feedback packet, error=%X
 [%s] %s:%d Unsupported application name=%u
 [%s] %s:%d Unable to add FIR, buffer too small: %d > %d
 [%s] %s:%d Unable to add PLI, buffer too small: %d > %d
 [%s] %s:%d Unable to add %s, buffer too small: %d > %d
 [%s] %s:%d VTP_Send failed %d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTCPTransport.c:%d: Invalid RTCP header
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTCPTransport.c:%d: Invalid RTCP version
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTCPTransport.c:%d: Bad RTCP packet
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTCPTransport.c:%d: Invalid RTCP SR packet
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTCPTransport.c:%d: Received RTCP SR packet PayloadType=%d NTP Seconds=%u RTPTimestamp=%u
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTCPTransport.c:%d: Invalid RTCP RR packet
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTCPTransport.c:%d: Bad RTCP APP packet
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTCPTransport.c:%d: Unsupported PSFB ALFB app type=%u
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTCPTransport.c:%d: Bad RTCP PSFB ALFB packet
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTCPTransport.c:%d: Drop RTCP packet from a unknown connection.
 [%s] %s:%d Unable to retrieve data pointer %d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTCPTransport.c:%d: RTCP packet failed Version, padding bit, packet type check
 [%s] %s:%d SRTCP verification failed (%X)
 [%s] %s:%d RTCP header doesn't fit in packet. Packet length=%d
 [%s] %s:%d SRTCP decryption failed (%X)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTCPTransport.c:%d: Invalid RTCP Packet(packetType=%d, version=%d, count=%d, padding=%d) useReducedSizePackets=%d
 [%s] %s:%d NULL sendParameters
 [%s] %s:%d streamIDCount=%d is greater than max=%u
 [%s] %s:%d eventHandler must not be nil
 [%s] %s:%d DatagramChannel creation failed with error %s
 [%s] %s:%d DatagramChannel setup failed
 [%s] %s:%d destination must not be nil
 [%s] %s:%d Setup EmulatedDatagramChannel failed
 [%s] %s:%d VCDatagramChannelManager: found existing datagram channel with token %d for destination %s
 [%s] %s:%d isEmulatedDatagramChannelEnabled=%d, emulatedNetworkConfigPath=%@
 [%s] %s:%d Do not load emulated network
 [%s] %s:%d VCDatagramChannelManager: added datagram channel with token %d
 [%s] %s:%d VCDatagramChannelManager: removed datagram channel with token %d
 [%s] %s:%d VCDatagramChannelManager: removed destination %s
 [%s] %s:%d NULL filter
 [%s] %s:%d No resource defined for configuration type=%u
 [%s] %s:%d Failed to load configuration resource=%@
 [%s] %s:%d Failed to load configuration
 [%s] %s:%d Failed to load the stream input configurations
 [%s] %s:%d Failed to load the stream group configurations
 [%s] %s:%d Configuration plist specified but the path is invalid: path=%@
 [%s] %s:%d Configuration plist specified but the file could not be loaded: path=%@
 [%s] %s:%d Successfully loaded configuration plist: path=%@
 [%s] %s:%d Failed to allocate new plist configuration
 [%s] %s:%d Failed to allocated stream input array
 [%s] %s:%d Configuration is nil for type=%d
 [%s] %s:%d Failed to allocated stream input dictionary
 [%s] %s:%d Unknown stream group ID %u. Using random SSRC
 [%s] %s:%d '%@' is missing in config
 [%s] %s:%d Invalid type for field=%@
 [%s] %s:%d Unable read stream input configuration type
 [%s] %s:%d Unsupported media type=%@
 [%s] %s:%d Framerate is 0!
 [%s] %s:%d Failed to load stream input configuration
 [%s] %s:%d Failed to allocate the video stream input config
 [%s] %s:%d streamInputID is not valid
 [%s] %s:%d Subtype is not valid
 [%s] %s:%d Width is 0!
 [%s] %s:%d Height is 0!
 [%s] %s:%d Failed to allocate the data stream input config
 [%s] %s:%d Failed to create video multiway config
 [%s] %s:%d Max network bitrate is invalid
 [%s] %s:%d Max media bitrate is invalid
 [%s] %s:%d '%@' is invalid
 [%s] %s:%d Frame rate field should be of numeber type
 [%s] %s:%d Invalid framerate
 [%s] %s:%d Video width is invalid
 [%s] %s:%d Height width is invalid
 [%s] %s:%d Invalid resolution: width=%u height=%u
 [%s] %s:%d Using reserved SSRC with un-available repaired stream id
 [%s] %s:%d Failed to create featureStrings
 [%s] %s:%d %@(%p) Failed to create featureStrings
 [%s] %s:%d Found unsupported codec type=%ld
 [%s] %s:%d %@(%p) Found unsupported codec type=%ld
 [%s] %s:%d Invalid codecs array
 [%s] %s:%d %@(%p) Invalid codecs array
 [%s] %s:%d Invalid codec config
 [%s] %s:%d %@(%p) Invalid codec config
 [%s] %s:%d Invalid codec type class
 [%s] %s:%d %@(%p) Invalid codec type class
 [%s] %s:%d '%@'=%d incorrect codecType in config
 [%s] %s:%d Failed to create video stream config
 [%s] %s:%d Failed to parse codec config
 [%s] %s:%d 'Invalid codec type
 [%s] %s:%d No fallback stream is provided for an unsupported codec type
 [%s] %s:%d Falling back to stream config with codecType=%ld
 [%s] %s:%d Invalid encoderUsage class
 [%s] %s:%d %@(%p) Invalid encoderUsage class
 [%s] %s:%d Invalid rtp payload
 [%s] %s:%d %@(%p) Invalid rtp payload
 [%s] %s:%d Invalid profile level
 [%s] %s:%d %@(%p) Invalid profile level
 [%s] %s:%d Invalid RTP timestamp rate
 [%s] %s:%d %@(%p) Invalid RTP timestamp rate
 [%s] %s:%d Invalid RTCP enabled
 [%s] %s:%d %@(%p) Invalid RTCP enabled
 [%s] %s:%d Invalid RTCP send interval
 [%s] %s:%d %@(%p) Invalid RTCP send interval
 [%s] %s:%d Invalid RTCP timeout enabled
 [%s] %s:%d %@(%p) Invalid RTCP timeout enabled
 [%s] %s:%d %@(%p) Invalid %@ class
 [%s] %s:%d Failed to create rate control config
 [%s] %s:%d Invalid %@ class
 [%s] %s:%d streamConfig cannot be generated when encoder resolution is zero
 [%s] %s:%d Invalid payloads, payloadSize: %lu
 [%s] %s:%d %@(%p) Invalid payloads, payloadSize: %lu
 [%s] %s:%d Failed to allocate the video stream configuration array!
 [%s] %s:%d Failed to initialize the video stream config
 [%s] %s:%d Invalid max network bitrate
 [%s] %s:%d Invalid max packets per second
 [%s] %s:%d Invalid quality index
 [%s] %s:%d Invalid media bitrate
 [%s] %s:%d Invalid red factir class
 [%s] %s:%d %@(%p) Invalid red factir class
 [%s] %s:%d Invalid red payload class
 [%s] %s:%d %@(%p) Invalid red payload class
 [%s] %s:%d Invalid red payload
 [%s] %s:%d %@(%p) Invalid red payload
 [%s] %s:%d %@(%p) Failed to add payload
 [%s] %s:%d Invalid red factors class
 [%s] %s:%d %@(%p) Invalid red factors class
 [%s] %s:%d Failed to setup red factors
 [%s] %s:%d %@(%p) Failed to setup red factors
 [%s] %s:%d No payloads listed in config
 [%s] %s:%d %@(%p) No payloads listed in config
 [%s] %s:%d Invalid codec class
 [%s] %s:%d %@(%p) Invalid codec class
 [%s] %s:%d Invalid codec
 [%s] %s:%d %@(%p) Invalid codec
 [%s] %s:%d Invalid perferred codec mode class
 [%s] %s:%d %@(%p) Invalid perferred codec mode class
 [%s] %s:%d Invalid preferred mode
 [%s] %s:%d %@(%p) Invalid preferred mode
 [%s] %s:%d Invalid pTime
 [%s] %s:%d %@(%p) Invalid pTime
 [%s] %s:%d Invalid isOpusInBandFecEnabled
 [%s] %s:%d %@(%p) Invalid isOpusInBandFecEnabled
 [%s] %s:%d Failed retrieve payload for codec type=%d
 [%s] %s:%d %@(%p) Failed retrieve payload for codec type=%d
 [%s] %s:%d Failed to allocate codec config for type=%d
 [%s] %s:%d %@(%p) Failed to allocate codec config for type=%d
 [%s] %s:%d Failed to add payload
 [%s] %s:%d Failed to create audio stream config
 [%s] %s:%d %@(%p) Failed to create rate control config
 [%s] %s:%d Failed to create audio rules collection
 [%s] %s:%d %@(%p) Failed to create audio rules collection
 [%s] %s:%d Failed to create audio rules
 [%s] %s:%d Failed to create audio multiway config
 [%s] %s:%d Invalid RTP send interval
 [%s] %s:%d %@(%p) Invalid RTP send interval
 [%s] %s:%d Invalid bundling scheme
 [%s] %s:%d %@(%p) Invalid bundling scheme
 [%s] %s:%d Invalid number of audio channels
 [%s] %s:%d %@(%p) Invalid number of audio channels
 [%s] %s:%d Failed to allocate the audio stream configuration array!
 [%s] %s:%d Failed to initialize the audio stream config
 [%s] %s:%d Failed to allocate the stream group config dictionary
 [%s] %s:%d Failed to retrieve the stream group ID
 [%s] %s:%d Failed to retrieve the stream group stream input ID
 [%s] %s:%d Failed to retrieve the stream group media type
 [%s] %s:%d Failed to retrieve syncGroupID for stream group
 [%s] %s:%d No streams specified!
 [%s] %s:%d Invalid media type class
 [%s] %s:%d Unsupported media type=%s
 [%s] %s:%d Failed to setup streams
 [%s] %s:%d mediaType=%u
 [%s] %s:%d Failed to create dispatch timer
 [%s] %s:%d timer is not running. ignoring timeout.
 [%s] %s:%d %@(%p) timer is not running. ignoring timeout.
 [%s] %s:%d timer=%p has been cancelled
 [%s] %s:%d %@(%p) timer=%p has been cancelled
 [%s] %s:%d timer=%p is waiting to be test cancelled
 [%s] %s:%d %@(%p) timer=%p is waiting to be test cancelled
 [%s] %s:%d timer=%p has been test cancelled
 [%s] %s:%d %@(%p) timer=%p has been test cancelled
 [%s] %s:%d started a timer=%p that was already running
 [%s] %s:%d %@(%p) started a timer=%p that was already running
 [%s] %s:%d stopped a timer=%p that was already stop
 [%s] %s:%d %@(%p) stopped a timer=%p that was already stop
VCAudioStream [%s] %s:%d %s Timestamp jumped: %u (%u to %u), host time: %f (%d samples) (%f to %f). Adjustment: %d
VCAudioStream [%s] %s:%d Failed to generate the RTCP XR statistics summary report.
VCAudioStream [%s] %s:%d audio receiver is not ready
VCAudioStream [%s] %s:%d Failed to generate the RTCP XR VoIP metrics report.
VCAudioStream [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCAudioStream.m:%d: Benign Error (possibly not): We started audio before we negotiated our codec.
VCAudioStream [%s] %s:%d alreadyStarted = %d
VCAudioStream [%s] %s:%d (%p) starting audioIO=%p
VCAudioStream [%s] %s:%d (%p) stopping audioIO=%p
VCAudioStream [%s] %s:%d Skip DTMF from supported payloads for AudioStream
VCAudioStream [%s] %s:%d No Audio Payloads, returning false
VCAudioStream [%s] %s:%d Failed to retrieve codec config.
VCAudioStream [%s] %s:%d %@(%p) Failed to retrieve codec config.
VCAudioStream [%s] %s:%d Invalid audioStreamMode=%d defaulting to VCAudioIOAudioType=%d
VCAudioStream [%s] %s:%d Multiple network payloads=%d, %d for internal payload=%d. Creating decoders for both
VCAudioStream [%s] %s:%d Failed to setup receiver decoders.
VCAudioStream [%s] %s:%d %@(%p) Failed to setup receiver decoders.
VCAudioStream [%s] %s:%d Invalid mode=%ld
VCAudioStream [%s] %s:%d Failed to allocate audio payloads
VCAudioStream [%s] %s:%d %@(%p) Failed to allocate audio payloads
VCAudioStream [%s] %s:%d Failed to allocate the DTMF event handler
VCAudioStream [%s] %s:%d %@(%p) Failed to allocate the DTMF event handler
VCAudioStream [%s] %s:%d 
VCAudioStream [%s] %s:%d %@(%p) 
VCAudioStream [%s] %s:%d NetworkFeedbackController is nil in AudioStream
VCAudioStream [%s] %s:%d Creating Audio Receiver with jbTargetEstimatorSynchronizer=%p
VCAudioStream [%s] %s:%d audioReceiver=%p
VCAudioStream [%s] %s:%d %@(%p) audioReceiver=%p
VCAudioStream [%s] %s:%d VCAudioStream[%p] Failed to set audio receiver payloads
VCAudioStream [%s] %s:%d VCAudioStream[%p] Failed to create the audio transmitter
VCAudioStream [%s] %s:%d audioTransmitter=%p
VCAudioStream [%s] %s:%d %@(%p) audioTransmitter=%p
VCAudioStream [%s] %s:%d Setting volume from %f to %f
VCAudioStream [%s] %s:%d The VCMediaStreamConfig array is empty!
VCAudioStream [%s] %s:%d streamConfigArray.count=%u, but firstAudioStreamConfig.direction=%ld
VCAudioStream [%s] %s:%d Failure at index i=%u of streamConfigArray.count=%u audioStreamConfig.audioStreamMode=%ld firstAudioStreamConfig.audioStreamMode=%ld audioStreamConfig.jitterBufferMode=%u firstAudioStreamConfig.jitterBufferMode=%u audioStreamConfig.direction=%ld firstAudioStreamConfig.direction=%ld
VCAudioStream [%s] %s:%d Failed to allocate source transport
VCAudioStream [%s] %s:%d Failed to insert source transport
VCAudioStream [%s] %s:%d Failed to create RTP handle
VCAudioStream [%s] %s:%d %@(%p) Failed to create RTP handle
VCAudioStream [%s] %s:%d Failed to create RTP extension
VCAudioStream [%s] %s:%d %@(%p) Failed to create RTP extension
VCAudioStream [%s] %s:%d Failed to setup the transport
VCAudioStream [%s] %s:%d %@(%p) Failed to setup the transport
VCAudioStream [%s] %s:%d Reconfiguring VCAudioStream with a different number of transports.
VCAudioStream [%s] %s:%d %@(%p) Reconfiguring VCAudioStream with a different number of transports.
VCAudioStream [%s] %s:%d error[%s]
VCAudioStream [%s] %s:%d %@(%p) error[%s]
VCAudioStream [%s] %s:%d Failed to create transport
VCAudioStream [%s] %s:%d %@(%p) Failed to create transport
VCAudioStream [%s] %s:%d Failed to configure transport
VCAudioStream [%s] %s:%d %@(%p) Failed to configure transport
VCAudioStream [%s] %s:%d Telephony calling isLocalCellular=%d
VCAudioStream [%s] %s:%d %@(%p) Telephony calling isLocalCellular=%d
VCAudioStream [%s] %s:%d (%p) created audioIO=%p operatingMode:%d deviceRole:%d direction:%d
VCAudioStream [%s] %s:%d (%p) reconfigured audioIO=%p operatingMode:%d deviceRole:%d direction:%d
VCAudioStream [%s] %s:%d Callback executed with context being nil
VCAudioStream [%s] %s:%d nwConnectionNotification is invalid
VCAudioStream [%s] %s:%d Received Skywalk notification with unsupported version=%d
VCAudioStream [%s] %s:%d Received Skywalk notification for unsupported interface type=%d
VCAudioStream [%s] %s:%d Cellular Network Notification: timestamp=%llu radioAccessTechnology=%u referenceSignalLevel=%d signalLevel=%d signalQuality=%d uplinkBler=%u bandwidthLimitationIndication=%u cdrxCycleLength=%u cdrxState=%u downlinkBLER=%u
VCAudioStream [%s] %s:%d VCTelephonyInterface returned error=%@
VCAudioStream [%s] %s:%d VCAudioStream[%p] setPauseAudio: error pausing audio
VCAudioStream [%s] %s:%d (%p) pausing audioIO=%p
VCAudioStream [%s] %s:%d VCAudioStream[%p] setPauseAudio: error unpausing audio
VCAudioStream [%s] %s:%d (%p) resume audioIO=%p
VCAudioStream [%s] %s:%d TargetStreamID didn't change %@
VCAudioStream [%s] %s:%d Setting target stream id: %@
VCAudioStream [%s] %s:%d %@(%p) Setting target stream id: %@
VCAudioStream [%s] %s:%d Reporting not available (no backends)
VCAudioStream [%s] %s:%d %@(%p) Reporting not available (no backends)
VCAudioStream [%s] %s:%d Payload is null
VCAudioStream [%s] %s:%d %@(%p) Payload is null
VCAudioStream [%s] %s:%d Bitrate is null
VCAudioStream [%s] %s:%d %@(%p) Bitrate is null
VCAudioStream [%s] %s:%d Unexpected mode VCAudioStreamModeInvalid
VCAudioStream [%s] %s:%d VCAudioStream[%p] IOProc:  Missing grabbing lock onCaptureSound at %u
VCAudioStream [%s] %s:%d VCAudioStream[%p] IOProc: Missing grabbing lock onCaptureSound
VCAudioStream [%s] %s:%d Failed querying Telephony Interface for ANBR bitrate recommendation, bitrate=%u, direction=%ld, error=%@
VCAudioStream [%s] %s:%d %@(%p) Failed querying Telephony Interface for ANBR bitrate recommendation, bitrate=%u, direction=%ld, error=%@
VCAudioStream [%s] %s:%d codecType is invalid for payload=%d, codecType=%ld
VCAudioStream [%s] %s:%d codecRateMode is invalid for payload=%d, codecRateMode=%ld
VCAudioStream [%s] %s:%d Requested bitrate is not in the configurred bitrates: payload=%d, supportedBitrates=%@, bitrate=%d
VCAudioStream [%s] %s:%d Disabling uplink rate adaptation due to EVS AMRWB-IO bitrate=%u
VCAudioStream [%s] %s:%d Updated uplink rate adaptation max allowed bitrate=%d
VCAudioStream [%s] %s:%d codecRateMode is invalid for payload=%d, codecRateMode=%u
VCAudioStream [%s] %s:%d codecBitrate is invalid for payload=%d, codecBitrate=%u
VCAudioStream [%s] %s:%d Codec Rate Mode and Codec Bandwidth selected are not supported for payload=%d, codecBitrate=%u, codecRateMode=%u, codecBandwidth=%u
VCAudioStream [%s] %s:%d VCAudioStream[%p] PullAudioSamples count:%u, state:%d, participantID:[%@], audioReceiver[%p]
VCAudioStream [%s] %s:%d Unexpected SPI call
VCAudioStream [%s] %s:%d Received a bitrate recommendation when ANBR is not enabled. anbrEnabled=%d, anbrActive=%d, bitrate=%u, direction=%ld
VCAudioStream [%s] %s:%d Received unexpected bitrate change _rateAdaptation=%@, anbrEnabled=%d
VCAudioStream [%s] %s:%d %@(%p) Received unexpected bitrate change _rateAdaptation=%@, anbrEnabled=%d
VCAudioStream [%s] %s:%d Bitrate adaptation not supported payload=%d
VCAudioStream [%s] %s:%d %@(%p) Bitrate adaptation not supported payload=%d
VCAudioStream [%s] %s:%d Target bitrate change not supported targetBitrate=%d
VCAudioStream [%s] %s:%d %@(%p) Target bitrate change not supported targetBitrate=%d
VCAudioStream [%s] %s:%d Current and target bitrates are same uplinkTargetBitrate=%d maxAllowedBitrate=%d
VCAudioStream [%s] %s:%d %@(%p) Current and target bitrates are same uplinkTargetBitrate=%d maxAllowedBitrate=%d
VCAudioStream [%s] %s:%d Applying uplink rate adaptation recommendation currentBitrate=%u maxAllowedBitrate=%d uplinkTargetBitrate=%d
VCAudioStream [%s] %s:%d %@(%p) Applying uplink rate adaptation recommendation currentBitrate=%u maxAllowedBitrate=%d uplinkTargetBitrate=%d
VCAudioStream [%s] %s:%d Stalling lastReceivedPacketTime %f currentTime %f
VCAudioStream [%s] %s:%d Unstalling lastReceivedPacketTime %f currentTime %f packetCount %d
VCAudioStream [%s] %s:%d audioStream is invalid
VCAudioStream [%s] %s:%d Statistics collector is not valid
VCAudioStream [%s] %s:%d RTT=%.3f, TxBW=%ub/sec, PLR=%.2f%%, PLaMR=%.2f%%
VCAudioStream [%s] %s:%d OWRD is not valid, skipping
VCAudioStream [%s] %s:%d Abnormal OWRD Verification: rtt=%f, owrd=%f, _abnormalOWRDCount=%d
VCAudioStream [%s] %s:%d Abnormal OWRD detected: rtt=%f, owrd=%f, _abnormalOWRDCount=%d
VCAudioStream [%s] %s:%d OWRD in abnormal levels for %d seconds, triggering lag reference reset
VCAudioStream [%s] %s:%d %s Timestamp jumped=%u (%u to %u), host time=%f (samples=%d) (%f to %f). Adjustment=%d
VCAudioStream [%s] %s:%d audioStream (%p) updating syncSourceDelegate (%p) with ntpTime=%.6f and rtpTimestamp=%u
VCAudioStream [%s] %s:%d audioStream=%p resetting SourceState for syncSourceDelegate=%p
VCAudioStream [%s] %s:%d audioStream=%p switched from streamID=%u to streamID=%u
 [%s] %s:%d Failed to allocate audio ducker
 [%s] %s:%d audioDucker is nil
 [%s] %s:%d Failed to start due to failing to get new instance
 [%s] %s:%d Set properties failed
 [%s] %s:%d Set tuning parameters failed
 [%s] %s:%d AudioUnitInitialize err=%d
 [%s] %s:%d invalid parameter, audioDucker=%p sampleBuffer=%p sysaSampleBuffer=%p
 [%s] %s:%d processing err=%d
 [%s] %s:%d AudioUnitSetProperty kAudioUnitProperty_MaximumFramesPerSlice err=%d
 [%s] %s:%d AudioUnitSetProperty kAudioUnitProperty_StreamFormat for kAudioUnitScope_Input err=%d inputNum=%d
 [%s] %s:%d AudioUnitSetProperty kAudioUnitProperty_StreamFormat for kAudioUnitScope_Output err=%d outputNum=%d
 [%s] %s:%d Failed to set kVCAudioDuckerParameterIDOtherAudioDuckingLevel err=%d
 [%s] %s:%d Failed to set kVCAudioDuckerParameterIDPrimaryDuckingThreshold err=%d
 [%s] %s:%d Failed to set kVCAudioDuckerParameterIDPrimaryDuckingMinLevel err=%d
 [%s] %s:%d Failed to set kVCAudioDuckerParameterIDOtherAudioDuckingMinLevel err=%d
 [%s] %s:%d Failed to set kVCAudioDuckerParameterIDOtherAudioRMSLimit err=%d
 [%s] %s:%d Failed to set kVCAudioDuckerParameterIDDuckingRampTime err=%d
 [%s] %s:%d Failed to set kVCAudioDuckerParameterIDHistoryAccumulationTime err=%d
 [%s] %s:%d Failed to set kVCAudioDuckerParameterIDUnDuckingRampTime err=%d
 [%s] %s:%d Failed to set kVCAudioDuckerParameterIDReleaseHoldTime err=%d
 [%s] %s:%d %s Timescale successfully initialized 
 [%s] %s:%d Timescale Disabled channelCount[%d]
 [%s] %s:%d Disable WSOLA Timescale selected for channelCount=%d
 [%s] %s:%d Timescale algorithm selected is %d
 [%s] %s:%d Failed to allocate timescale Interface
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTPH264.c:%d: data size too big (%d)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTPH264.c:%d: Invalid fragmentation unit length (%d)
 [%s] %s:%d FU-B Decoding order is %hu
 [%s] %s:%d STAP-B Decoding order is %hu
 [%s] %s:%d Invalid data size of length %zu
 [%s] %s:%d Invalid data length for decoding order %zu
 [%s] %s:%d Invalid data length %zu
 [%s] %s:%d Invalid aggregation unit length (%d) for H264NALU_STAP packet, discarded.
 [%s] %s:%d Failed to allocate the H264NALU_STAP_A header bytes
 [%s] %s:%d Failed to append the H264NALU_STAP header buffer
 [%s] %s:%d Failed to append the H264NALU_STAP data
 [%s] %s:%d Failed to allocate the H264NALU_FU header bytes
 [%s] %s:%d Failed to append the H264NALU_FU header buffer
 [%s] %s:%d Failed to append the H264NALU_FU data
 [%s] %s:%d Failed to allocate the default header bytes
 [%s] %s:%d Failed to append the default header buffer
 [%s] %s:%d Failed to append the default data
 [%s] %s:%d Log Dump is %s
VCStreamIOAudioController [%s] %s:%d 
VCStreamIOAudioController [%s] %s:%d %@(%p) 
VCStreamIOAudioController [%s] %s:%d Invalid streamToken
VCStreamIOAudioController [%s] %s:%d %@(%p) Invalid streamToken
VCStreamIOAudioController [%s] %s:%d Failed to allocate the dipatch queue
VCStreamIOAudioController [%s] %s:%d %@(%p) Failed to allocate the dipatch queue
VCStreamIOAudioController [%s] %s:%d StreamInputID not found in VCStreamInputManager
VCStreamIOAudioController [%s] %s:%d %@(%p) StreamInputID not found in VCStreamInputManager
VCStreamIOAudioController [%s] %s:%d Failed to create the sample buffer allocator
VCStreamIOAudioController [%s] %s:%d %@(%p) Failed to create the sample buffer allocator
VCStreamIOAudioController [%s] %s:%d Packet thread is already running
VCStreamIOAudioController [%s] %s:%d %@(%p) Packet thread is already running
VCStreamIOAudioController [%s] %s:%d Error allocating buffer list for stream IO
VCStreamIOAudioController [%s] %s:%d %@(%p) Error allocating buffer list for stream IO
VCStreamIOAudioController [%s] %s:%d Failed to create the packet thread
VCStreamIOAudioController [%s] %s:%d %@(%p) Failed to create the packet thread
VCStreamIOAudioController [%s] %s:%d nil client
VCStreamIOAudioController [%s] %s:%d %@(%p) nil client
VCStreamIOAudioController [%s] %s:%d error=%@
VCStreamIOAudioController [%s] %s:%d %@(%p) error=%@
VCStreamIOAudioController [%s] %s:%d Failed to allocate output thread
VCStreamIOAudioController [%s] %s:%d %@(%p) Failed to allocate output thread
VCStreamIOAudioController [%s] %s:%d Failed to allocate output thread client
VCStreamIOAudioController [%s] %s:%d %@(%p) Failed to allocate output thread client
VCStreamIOAudioController [%s] %s:%d Failed to set client error=%@
VCStreamIOAudioController [%s] %s:%d %@(%p) Failed to set client error=%@
VCStreamIOAudioController [%s] %s:%d Failed to start streamOutput thread
VCStreamIOAudioController [%s] %s:%d %@(%p) Failed to start streamOutput thread
VCStreamIOAudioController [%s] %s:%d client is nil
VCStreamIOAudioController [%s] %s:%d %@(%p) client is nil
VCStreamIOAudioController [%s] %s:%d client=%p != runningClient=%p
VCStreamIOAudioController [%s] %s:%d %@(%p) client=%p != runningClient=%p
VCStreamIOAudioController [%s] %s:%d Could not update the direction for client=%p
VCStreamIOAudioController [%s] %s:%d %@(%p) Could not update the direction for client=%p
VCStreamIOAudioController [%s] %s:%d not handled
VCStreamIOAudioController [%s] %s:%d %@(%p) not handled
VCStreamIOAudioController [%s] %s:%d context not included.  Cannot process the sampleBuffer.
VCStreamIOAudioController [%s] %s:%d Frame size=%ld changed unexpectedly and sample buffer size=%u is not big enough for streamInputID=%ld.
VCStreamIOAudioController [%s] %s:%d CMSampleBufferCopyPCMDataIntoAudioBufferList failed with err=%d for controller=%p streamInputID=%ld
VCStreamIOAudioController [%s] %s:%d controller=%p Real time miss. host time jumped: %f (%u samples) (%f to %f) for streamInputID=%ld. lastSampleCount=%lu -> nextExpectedSampleTime=%u
VCStreamIOAudioController [%s] %s:%d Failed to allocate RTP timestamp attachment
VCStreamIOAudioController [%s] %s:%d Enqueue failed
 [%s] %s:%d internalPayload is invalid.
 [%s] %s:%d Internal payload(%d)'s mapping is overwriten
 [%s] %s:%d External payloads send(%d), recv(%d) are used twice by existing internal payload %d and new internal payload %d. Treated as no-op
 [%s] %s:%d RTPMap is NULL!
 [%s] %s:%d *** RTPPrintRTPMapping *** external payload receive %d -> internal payload %d -> external payload send %d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTPTransport.c:%d: Unknown Payload Type(%d)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTPTransport.c:%d: calloc failed(%d)
 [%s] %s:%d %p Starting SeqNum for PayloadType %d = %d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTPTransport.c:%d: Failed to allocate the rtpPacket allocator
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTPTransport.c:%d: Failed to create the rtcpPacket allocator (error:%d)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTPTransport.c:%d: Failed to allocate the block buffer allocator
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTPTransport.c:%d: CreateHandle failed(%08X)
 [%s] %s:%d Releasing the statisticsCollector:%p
 [%s] %s:%d Releasing the basebandCongestionDetector:%p
 [%s] %s:%d Releasing the mediaQueue:%p
 [%s] %s:%d Negative packetsLostForInterval detected. receivedForInterval=%d expectedForInterval=%d. Reset to 0
 [%s] %s:%d RTP/RTCP Destination for PT%d = [IDS datagram channel token %u]
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTPTransport.c:%d: getaddrinfo(%s,%s) failed(%08X)
 [%s] %s:%d RTP/RTCP Destination for PT%d(%d) = [%s:%u/%u]
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTPTransport.c:%d: calloc(%zu) failed
 [%s] %s:%d Invalid RTP handle
 [%s] %s:%d payloadType=%d, sourceRate=%u
 [%s] %s:%d Header size is negative: %d
 [%s] %s:%d Data size is negative: %d
 [%s] %s:%d RTP SendRTP direction[%d] dropping packet
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTPTransport.c:%d: Failed to allocate send buffer
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTPTransport.c:%d: Bad RTP extension length (%ld)
 [%s] %s:%d Failed to add RTP header extension
 [%s] %s:%d Failed to copy header to the RTP buffer
 [%s] %s:%d Failed to copy data to the RTP buffer
 [%s] %s:%d Failed to copy padding bytes to the RTP buffer
 [%s] %s:%d SRTP encryption failed (%X)
 [%s] %s:%d SRTP add authentication tag failed (%X)
 [%s] %s:%d IDS channel data is not setup correctly!
 [%s] %s:%d Failed to enqueue packet in media queue. Error=%x
 [%s] %s:%d Unknown packet passing to the VCMediaQueue!
 [%s] %s:%d Cannot alloc media packet from VCMediaQueue!
 [%s] %s:%d Failed to send packet due to oversize dataSizeByte %d
 [%s] %s:%d Failed to copy data bytes. Error=%d!
 [%s] %s:%d Cannot add media packet to VCMediaQueue!
 [%s] %s:%d Sent RTP packet with marker: %u, payload type: %u, sequence number: %u, timestamp: %u, ssrc: %u
 [%s] %s:%d Unexpected sendTimestampMode=%d
 [%s] %s:%d Send Scaling sendTimestampMode=%d is not supported
 [%s] %s:%d Unexpected recvTimestampMode=%d
 [%s] %s:%d Receive Scaling recvTimestampMode=%d is not supported
 [%s] %s:%d Failed to parse RTP packet: %d
 [%s] %s:%d RTP relay flag (%d->%d).
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTPTransport.c:%d: Drop RTP packet from a unknown source
 [%s] %s:%d Failed to parse RTP header: %d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTPTransport.c:%d: Wrong connection index: %d.
 [%s] %s:%d Failed to retrieve extension size: %d
 [%s] %s:%d Invalid packet! length:%d iRet:%d iOffset:%d padding:%d, 
 [%s] %s:%d Failed to allocate RTP packet
 [%s] %s:%d RTP packet parsing failed: %d
 [%s] %s:%d callback is NULL
 [%s] %s:%d RTPSetRemoteSSRC [%d/%d]: SSRC = 0x%X(%u)
 [%s] %s:%d RTPSetRemoteSSRC: SSRC = 0x%X(%u)
 [%s] %s:%d RTPSetCellularUniqueTag vfd = %d tag = 0x%X(%u)
 [%s] %s:%d RTPSetStreamDirection [%p] [%d/%d]: Direction[%d]
 [%s] %s:%d Getsockname for RTP socket failed(%08X)
 [%s] %s:%d Start listening RTP on sock %d
 [%s] %s:%d Getsockname for RTCP socket failed(%08X)
 [%s] %s:%d Start listening RTCP on sock %d
 [%s] %s:%d RTP  vfd (%d) accepts pkt (%04X)
 [%s] %s:%d RTCP vfd (%d) accepts pkt (%04X)
 [%s] %s:%d RTP/RTCP sockets for PayloadType %d are %d and %d
 [%s] %s:%d Configure RTP sockets: iSocRTP %d, dwRemoteSSRC %08X, cellularUniqueTag %d
 [%s] %s:%d RTPSetSockets: Invalid sockets passed: rtp(%d) rtcp(%d)
 [%s] %s:%d Creation of RTP socket from real socket failed(%08X)
 [%s] %s:%d Creation of RTCP socket from real socket failed(%08X)
 [%s] %s:%d RTPSetSockets: Invalid nwConnection passed
 [%s] %s:%d Creation of RTP socket from NWConnection failed(%08X)
 [%s] %s:%d Creation of RTCP socket from NWConnection failed(%08X)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTPTransport.c:%d: VTP_SocketWithIDSDescriptor for RTP failed(%08X)
 [%s] %s:%d Start listening RTP on virtual socket %d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTPTransport.c:%d: VTP_SocketWithIDSDescriptor for RTCP failed(%08X)
 [%s] %s:%d Start listening RTCP on virtual socket %d
 [%s] %s:%d RTPCreateSocketsForIDS iSocRTP %d, iSocRTCP %d, dwRemoteSSRC %08X, cellularUniqueTag %d
 [%s] %s:%d RTPCreateSocketsRetryBind: RTP port(%d) must be even
 [%s] %s:%d RTPCreateSocketsRetryBind failed to create RTCP socket: hResult(%x) port(%d)
 [%s] %s:%d RTPCreateSocketsRetryBind failed to create RTP socket: hResult(%x) port(%d)
 [%s] %s:%d RTPCreateSockets hRTP %p, iSocRTP %d, dwRemoteSSRC %08X cellularUniqueTag %d
 [%s] %s:%d CNAME for RTP Handle(%d) is [%s]
 [%s] %s:%d RTPCreateSockets hRTP %p, iSocRTP %d, dwRemoteSSRC %08X cellularUniquetag %d
 [%s] %s:%d RTPCreateSocket:VTP_SetAFRC failed with %d for hRTP/iSocRTP: %p/%d hAFRC %p 
 [%s] %s:%d RTPSetAFRCHandle:VTP_SetAFRC failed with %d for hRTP/iSockRTP: %p/%d  hAFRC %p 
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTPTransport.c:%d: RTP Handle invalid
 [%s] %s:%d NULL isIPv6
 [%s] %s:%d Invalid RTP handle %d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTPTransport.c:%d: Bad version(%u) of RTP header extension!
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTPTransport.c:%d: RTP extension length(%u) invalid.
 [%s] %s:%d 
 RTPGetAFRCProbeSeqId for VP %d/%d: net %x   id %d 
 [%s] %s:%d INSERT: ^^^^^^ MP %d/%d/%d P: %d  PROBE_id: %d
 [%s] %s:%d INSERT: ^^^^^^ MP %d/%d/%d P: %d  PROBE_id: %d 
 [%s] %s:%d WRM: Set metric reportInterval=%d
 [%s] %s:%d Skip AFRCProcessFeedbackPacket, due to isFeedbackOOO = %d, receivedBytes = %d,
 [%s] %s:%d RTPHandle[%p] Failed store the callback
 [%s] %s:%d RTPHandle:%p Packet callback was not registered
 [%s] %s:%d [%p] Updating the network sample rate shift factors. send[%d] receive[%d]
 [%s] %s:%d Getting kVCTransportStreamProperty_PreferredSendQueue failed - %x
 [%s] %s:%d VTP_GetPreferredSendQueue failed - %x
 [%s] %s:%d NULL rtpTransportStream
 [%s] %s:%d NULL rtcpTransportStream
 [%s] %s:%d Invalid handle
 [%s] %s:%d Trying to set new transport streams while existing ones are already activated
 [%s] %s:%d NULL rtpHandleList
 [%s] %s:%d NULL flagList
 [%s] %s:%d rtpHandleCount is %d
 [%s] %s:%d NULL runLoop
 [%s] %s:%d NULL connectionManager
 [%s] %s:%d SSRC:%X
 [%s] %s:%d NULL transportStream
 [%s] %s:%d data length <= 0
 [%s] %s:%d MEDIANOTIFICATION_DECRYPTION_STATUS callback failed. (%08lX)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTPTransport.c:%d: First RTP packet had sequence number 0. Dropping
 [%s] %s:%d RTP(%d): recv started(%X,%X, %d) SeqNum = %u, TimeStamp = %u
 [%s] %s:%d %d packets lost
 [%s] %s:%d Big jump in sequence Number! LastSeq:%d CurrentSeq:%d
 [%s] %s:%d Extension length pointer is NULL
 [%s] %s:%d Extension offset is larger than the packet size
 [%s] %s:%d Overflow while reading packet extension header
 [%s] %s:%d Overflow while reading packet extension data
 [%s] %s:%d Failed to extract packet extension:%d
 [%s] %s:%d Failed to extract packet payload:%d
 [%s] %s:%d Uninitializing RTP with error %X
 [%s] %s:%d Error Parsing Baseband Notification
 [%s] %s:%d Received baseband notification with type %d
 [%s] %s:%d Received codec rate mode change request with suggested bitrate %d
 [%s] %s:%d Error processing AFRC Baseband notification %d
 [%s] %s:%d Invalid RTP packet multiplex mode
 [%s] %s:%d CNAME for RTP(%p) is [%s]
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTPTransport.c:%d: socket failed(%08X)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTPTransport.c:%d: bind on %s failed(%08X)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/RTPTransport.c:%d: set sockopt IP_BOUND_IF failed
 [%s] %s:%d VCTransportStreamCopyProperty %@ failed %d
 [%s] %s:%d _RTPEnsureTransportStreamsDeactivated failed %d
 [%s] %s:%d NULL payloadList
 [%s] %s:%d payloadCount <= 0
 [%s] %s:%d Remote SSRC is 0
 [%s] %s:%d NULL rtpInfo
 [%s] %s:%d cellularUniqueTag is 0
 [%s] %s:%d NULL rtpInfoList
 [%s] %s:%d NULL updatedFlagsList
 [%s] %s:%d Failed to allocate addedTransportStreams
 [%s] %s:%d Unexpected Codec Family: %d, asking for variable bitrate change using quality setting
 [%s] %s:%d %s mSampleRate : mFormatID : mFormatFlags : mBytesPerPacket : mFramesPerPacket : mBytesPerFrame : mChannelsPerFrame : mBitsPerChannel :
 [%s] %s:%d %s %8.0f    : %7s   :  0x%08x  : %8u        : %9u        : %8u       : %9u         : %9u       :
 [%s] %s:%d SoundDec_Create(%08x --> %08x)
 [%s] %s:%d Failed to register: %X
 [%s] %s:%d AudioConverterNew returned %d '%s'
 [%s] %s:%d AudioConverterSetProperty failed to set kAudioCodecPrivatePropertyEnableSAD with error %d
 [%s] %s:%d AudioConverterSetProperty failed to set kAudioConverterSampleRateConverterQuality with error %d
 [%s] %s:%d AudioConverterSetProperty failed to set kAudioCodecPropertySpeexEncodeQuality with error %d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/SoundDec.c:%d: AudioConverterSetProperty failed to set property kAudioCodecPropertyBitRateControlMode with error %08x
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/SoundDec.c:%d: AudioConverterSetProperty failed to set property kAudioConverterPrimeMethod with error %08x
 [%s] %s:%d Leaving SoundDec_Create
 [%s] %s:%d AudioConverterFillComplexBuffer on lost packet returned %d
 [%s] %s:%d AudioConverter (%s/%d -> %s/%d) returned error %d%s during FillComplexBuffer.
 [%s] %s:%d Error filling a gap? packets[%d] < full_packets[%d]
 [%s] %s:%d Failed to set pending EVS CMRData
 [%s] %s:%d Failed to set pending AMR CMR
 [%s] %s:%d Failed to stop AMR CMR
 [%s] %s:%d %s AudioConverter (%s/%d -> %s/%d) returned error %d%s during FillComplexBuffer inBytes[%d] packets[%d].
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/SoundDec.c:%d: Failed to set DTX encoder primer sample buffer[%p] bytes[%d] err[%d]
 [%s] %s:%d AudioConverterSetProperty succeeded with dtx encoder primer sample buffer=%p bytes=%u
 [%s] %s:%d AudioConverterSetProperty failed to set property kAudioCodecPrivatePropertyEnableSAD with error %08x
 [%s] %s:%d AudioConverterSetProperty succeeded to set property kAudioCodecPrivatePropertyEnableSAD dtxEnabled=%u
 [%s] %s:%d AudioConverterSetProperty failed to set property kAudioCodecPrivatePropertyEVSSIDPeriod %d with error %08x
 [%s] %s:%d AudioConverterSetProperty succeeded to set property kAudioCodecPrivatePropertyEVSSIDPeriod evsSIDPeriod=%u 
 [%s] %s:%d AudioConverterSetProperty failed to set property kAudioCodecPropertyCurrentTargetBitRate for bitrate=%u with error %08x
 [%s] %s:%d AudioConverterSetProperty succeeded to set property kAudioCodecPropertyCurrentTargetBitRate bitrate=%u
 [%s] %s:%d AudioConverterSetProperty failed to set property kAudioCodecPrivatePropertyEVSRFParams %d with error %08x
 [%s] %s:%d AudioConverterSetProperty succeeded to set property kAudioCodecPrivatePropertyEVSRFParams offset=%d indicator=%d
 [%s] %s:%d SoundDec_SetEVSChannelAwareOffset Requested EVSRFParams offset=%d indicator=%d
 [%s] %s:%d AudioConverterSetProperty failed to set property kAudioCodecPrivatePropertyEVSFormatHandling %d with error %08x
 [%s] %s:%d AudioConverterSetProperty succeeded to set property kAudioCodecPrivatePropertyEVSFormatHandling evsFormatHandling=%u
 [%s] %s:%d AudioConverterSetProperty failed to set property kAudioCodecPrivatePropertyEVSDecodeRF %d with error %08x
 [%s] %s:%d AudioConverterSetProperty succeeded to set property kAudioCodecPrivatePropertyEVSDecodeRF frameType=%u
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/SoundDec.c:%d: AudioConverterSetProperty failed to set property kAudioCodecPrivatePropertyAMRPayloadFormat %d with error %08x
 [%s] %s:%d AudioConverterSetProperty succeeded to set property kAudioCodecPrivatePropertyAMRPayloadFormat isOctetAligned=%u
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/SoundDec.c:%d: AudioConverterSetProperty failed to set property kAudioCodecPropertyConcealmentMode %d with error %08x
 [%s] %s:%d AudioConverterSetProperty succeeded to set property kAudioCodecPropertyConcealmentMode plcMode=%u
 [%s] %s:%d SoundDec_SetBitrate Requested bitrate: %d
 [%s] %s:%d SoundDec_GetMagicCookie Failed to retrieve cookie [%p, %u] %d
 [%s] %s:%d SoundDec_GetSpeechCodecBundleData Failed to get bundle data [%p, %u] %d
 [%s] %s:%d SoundDec_SetMagicCookie Failed to set cookie [%p, %u] %d
 [%s] %s:%d SoundDec_SetMagicCookie succeeded %d
 [%s] %s:%d AudioConverterSetProperty failed to set property kAudioCodecPrivatePropertyEnableFEC %d with error %08x
 [%s] %s:%d AudioConverterSetProperty succeeded to set property kAudioCodecPrivatePropertyEnableFEC opusInBandFecEnabled=%u
 [%s] %s:%d AudioConverterSetProperty failed to set property kAudioCodecPrivatePropertyPacketLossPercentage %d with error %08x
 [%s] %s:%d AudioConverterSetProperty succeeded to set property kAudioCodecPrivatePropertyPacketLossPercentage packetLossPercentage=%u
 [%s] %s:%d AudioConverterGetProperty(kAudioCodecPrivatePropertyFECStatus) failed error=%d
 [%s] %s:%d SoundDec_SetCMR mode=%u bandwidth=%u
 [%s] %s:%d SoundDec didn't understand the asbd sent to it
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/SoundDec.c:%d: Failed to set max packet size[%d] for bitrate[%d] with err[%d]
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/SoundDec.c:%d: Failed to set bitrate[%d]: %d
 [%s] %s:%d NEW AUDIO BITRATE (vbr)=%d fvbrcodec=%d
 [%s] %s:%d AudioConverterSetProperty(kAudioCodecPrivatePropertyBandwidth) failed error=%d
 [%s] %s:%d AudioConverterSetProperty succeeded to set property kAudioCodecPrivatePropertyBandwidth codecBandwidth=%u
 [%s] %s:%d AudioConverterSetProperty failed to set kAudioCodecPrivatePropertyCMR for EVS with error=%d
 [%s] %s:%d AudioConverterSetProperty succeeded to set property kAudioCodecPrivatePropertyCMR mode=%u bandwidth=%u offset=%u indicator=%u
 [%s] %s:%d AudioConverterSetProperty failed to set kAudioCodecPrivatePropertyCMR for AMR with error=%d
 [%s] %s:%d AudioConverterSetProperty succeeded to set property kAudioCodecPrivatePropertyCMR mode=%u
 [%s] %s:%d Unit Test: Using VCMockIDSDatagramChannel instead of IDSDatagramChannel
 [%s] %s:%d Can not start VCDatagramChannel due to invalid dataPath value=%d
VCVideoPlayer [%s] %s:%d VCVideoPlayer[%p] displayLink is not running yet using currentTime:%f for display
VCVideoPlayer [%s] %s:%d VCVideoPlayer[%p] playbackClient=%p reference changed lastFrame.presentationTime=%f lastFrame.rtpTimestamp=%u adjustedPresentationTime=%f current RTPTimeStamp=%u lastFrame.presentationTime changed by %f seconds preventBackward=%d delayOffsetInSeconds=%f
VCVideoPlayer [%s] %s:%d VCVideoPlayer[%p] playbackClient=%p keeping presentationTime=%f the same to prevent it from going backward rtpTimestamp=%u durationSinceLastAdjustment=%f
VCVideoPlayer [%s] %s:%d VCVideoPlayer[%p] playbackClient=%p finished keeping presentationTime=%f the same rtpTimeStamp=%u lastFrame.presentationTime=%f durationSinceLastAdjustment=%f
VCVideoPlayer [%s] %s:%d Adjusting presentationTime=%f rtpTimestamp=%u adjustedPresentationTime=%f adjustedVideoFrameTimeInSeconds=%f durationInSeconds=%f
VCVideoPlayer [%s] %s:%d presentationTime=%f rtpTimestamp=%u delayOffsetInSeconds=%f lastFrame.presentationTime=%f durationInSeconds=%f videoFrameTimeInSeconds=%f lastFrame.videoFrameTimeInSeconds=%f alarmType=%d
VCVideoPlayer [%s] %s:%d VCVideoPlayer[%p] high leeway:%f, decoding anyways!
VCVideoPlayer [%s] %s:%d VCVideoPlayer[%p] leeway=%f waiting for next tick. presentationTime=%f displayTimestamp=%f
VCVideoPlayer [%s] %s:%d VCVideoPlayer[%p] rtpTimestamp=%u alarmsSentForDecodeButNotDisplayedCount=%u lastFrameSequenceNumberSentForDecode=%u lastFrameSequenceNumberSentForDisplay=%u
VCVideoPlayer [%s] %s:%d VCVideoPlayer[%p] alarmsSentForDecodeButNotDisplayedCount=%u is excessively high, at or above the threshold of %u. rtpTimestamp=%u lastFrameSequenceNumberSentForDecode=%u lastFrameSequenceNumberSentForDisplay=%u
VCVideoPlayer [%s] %s:%d VCVideoPlayer[%p] trying to process display alarm when it's not allowed!
VCVideoPlayer [%s] %s:%d VCVideoPlayer[%p] Processing alarmType=%d, presentationTime=%f displayTime=%f rtpTimeStamp=%u alarmsSentForDecodeButNotDisplayedCount=%d
VCVideoPlayer [%s] %s:%d VCVideoPlayer[%p] NOT Processing alarmType=%d, presentationTime=%f displayTime=%f rtpTimeStamp=%u alarmsSentForDecodeButNotDisplayedCount=%d
VCVideoPlayer [%s] %s:%d VCVideoPlayer[%p] Not processing display alarm, wait until next leeway=%f
VCVideoPlayer [%s] %s:%d VCVideoPlayer[%p] Ignoring QueueAlarmForDisplay.
VCVideoPlayer [%s] %s:%d VCVideoPlayer[%p] alarmType=%d videoFrameTimeInSeconds=%f rtpTimestamp=%u frameSequenceNumber=%u didAssembleFail=%d
VCVideoPlayer [%s] %s:%d VCVideoPlayer[%p] Processing on %s Thread. rtpTimeStamp=%u alarmsSentForDecodeButNotDisplayedCount=%u
VCVideoPlayer [%s] %s:%d VCVideoPlayer[%p] NOT processing on %s Thread. rtpTimeStamp=%u alarmsSentForDecodeButNotDisplayedCount=%u
VCVideoPlayer [%s] %s:%d VCVideoPlayer[%p] PlayerHandle=%p nextPlayoutTimeInSeconds=%.6f hostTimeForPlayout=%.6f
VCVideoPlayer [%s] %s:%d VCVideoPlayer[%p] Defaults: avSyncAudioEarlyThreshold=%f, avSyncAudioLateThreshold=%f avSyncAudioTimestampJumpThreshold=%f avSyncAudioMaxJBThreshold=%f videoPlayerHandlePtr=%p
VCVideoPlayer [%s] %s:%d Created VCVideoPlayer[%p] successfully with enableAVLooseSync=%d
VCVideoPlayer [%s] %s:%d Destroying VCVideoPlayer[%p]
VCVideoPlayer [%s] %s:%d videoPlayer[%p] playbackClient[%p] Skipping avsync offset calculation. alarmType=%d rtpTimestamp=%u firstFramePresented=%d preventBackwardPresentationTime=%d shouldResetReferenceRTPTimestamp=%d shouldUseAdjustedReference=%d shouldResetPlaybackOffset=%d, isAudioTimestampJumpDetected=%d isAudioStalled=%d isDelayOffsetLagerThanAVSyncMaxJBThreshold=%d | videoFrameRTPTimestamp=%u playoutRTPTimestamp=%u timestampWraps=%u |videoFrameTimeInSeconds=%f lastFrame.presentationTime=%f ExternalSrcPlayoutTimeInSeconds=%f displayLinkTimestamp=%f lastPlayoutRTPTimestampInSeconds=%f | videoAlarmToAudioLeeway=%f | delayOffsetInSeconds=%f avSyncOffset=%f 
VCVideoPlayer [%s] %s:%d videoPlayer[%p] playbackClient[%p] displayAlarm[%p] frameSequenceNumber=%u ExternalSrcPlayoutTimeInSeconds=%f currentTime=%f HostTimeOffset=%f playbackOffsetInSeconds=%f | Math: lastFrame.rtpTimestamp=%u externalSourcePlayoutTimestamp=%u avSyncDeltaInSamples=%d, videoTimeInSeconds=%f, audioTimeInSeconds=%f playoutOffset=%f avPlayoutOffsetAverage=%f avSyncOffset=%f avSyncOffsetQuantized=%f | Validation: avSyncOffsetValidation=%f isNewPresentationTimeInLineWithAVSyncOffset=%d | isVideoEarly=%d
VCVideoPlayer [%s] %s:%d @=@ Health: VCVideoPlayer [%p] Health displayLinkTickCount=%d numAlarmsEnqueuedForDecode=%d numAlarmsProcessedForDecode=%d numAlarmsEnqueuedForDisplay=%d numAlarmsProcessedForDisplay=%d numAlarmsDropped=%d alarmsSentForDecodeButNotDisplayedCount=%d tickInterval=%f displayLinkTimestamp=%f lastPresentationTime=%f lastRTPTimestamp=%u lastFrameTimeInSeconds=%f targetJitterBufferInSeconds=%f playbackOffsetInSeconds=%f avSyncOffset=%f
VCVideoPlayer [%s] %s:%d @=@ Health: VCVideoPlayer [%p] Health displayLinkTickCount=%d numAlarmsEnqueuedForDecode=%d numAlarmsProcessedForDecode=%d tickInterval=%f displayLinkTimestamp=%f lastPresentationTime=%f lastRTPTimestamp=%u lastFrameTimeInSeconds=%f externalSourcePlayoutTimeInSeconds=%f lastFrameTimeInSeconds-externalSourcePlayoutTimeInSeconds=%f
VCVideoPlayer [%s] %s:%d VCVideoPlayer[%p] Not processing decode alarm, wait until next leeway=%f
 [%s] %s:%d CStrToFourcc: input %s, output %s(%X)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/Util.c:%d: calloc failed(%d)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/Util.c:%d: CreateHandle failed(%08X)
 [%s] %s:%d Failed to parse header, bufferSize=%d is smaller than the header size=%ld
 [%s] %s:%d Failed to parse header, bufferSize=%d is smaller than 12 bytes
 [%s] %s:%d SecRandomCopyBytes failure result:%d
 [%s] %s:%d %dx%d
 [%s] %s:%d FirstMB=%d sliceType=%d
 [%s] %s:%d ReadFrameSliceHeader: UNEXPECTED payload %d
 [%s] %s:%d Resetting the ratio from %d:%d to 3:4
 [%s] %s:%d ##### Generating stackshot for reason=%s
 [%s] %s:%d TranslateVCPSliceType unexpected type: %d
 [%s] %s:%d Connection is NIL
 [%s] %s:%d localSessionStats is invalid
 [%s] %s:%d Cannot create network queue(s) successfully!
 [%s] %s:%d Failed to write to network queue %c
VCRC [%s] %s:%d Time counter wrapped around
VCRC [%s] %s:%d Repeated or out of order timestamp detected when calculating OWRD, sendTime=%f, receiveTime=%f
VCRC [%s] %s:%d Lag=%f with receiveDiff=%f and sendDiff=%f looks spurios (shortLag=%f, longLag=%f, threshold=%f), discarding
VCRC [%s] %s:%d Abnormal OWRD %f detected while RTT stays low at %f for too long. Reference could be bad. Reset OWRD
VCRC [%s] %s:%d Abnormal OWRD %f detected while RTT stays low at %f. abnormalOWRDSampleCount:%u
VCRC [%s] %s:%d Detected out of order at send timestamp %X, previousTS:%X, timestampDiff:%d, current owrd:%f
VCRC [%s] %s:%d Detected spike at send timestamp %X, previousTS:%X, timestampDiff:%d, average send interval:%f, current owrd:%f
VCRC [%s] %s:%d Detected spike before send timestamp %X, previousTS:%X, timestampDiff:%d, average send interval:%f, current owrd:%f
VCRC [%s] %s:%d Detected out of order at receive timestamp %X, previousTS:%X, timestampDiff:%d, current owrd:%f
VCRC [%s] %s:%d Detected spike at receive timestamp %X, previousTS:%X, timestampDiff:%d, average send interval:%f, current owrd:%f
VCRC [%s] %s:%d Detected spike before receive timestamp %X, previousTS:%X, timestampDiff:%d, average send interval:%f, current owrd:%f
VCRC [%s] %s:%d Reset OWRD from %f to 0
 [%s] %s:%d message '%@' is too long for given buffer (%d > %d)
 [%s] %s:%d %@(%p) message '%@' is too long for given buffer (%d > %d)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/FECUtil.c:%d: WRONG, cannot have %d packets per group
 [%s] %s:%d Number of symbols per packet must be non-zero.
 [%s] %s:%d Number of symbols is larger than supported. numberOfSymbols=%d symbolsPerPacket=%d
 [%s] %s:%d Invalid parameters. Size and loss cannot be null.
 [%s] %s:%d FECv2 loss signal unpack=%d size=%d loss=%d
 [%s] %s:%d Failed to allocate _audioStreamGroupConfig
 [%s] %s:%d Cannot create network element queue successfully!
 [%s] %s:%d Failed to enqueue! status: %d
 [%s] %s:%d A network element cannot connect to itself!
 [%s] %s:%d VCMomentsHistoryBuffer Delegate parameter is nil
 [%s] %s:%d VCMomentsHistoryBuffer timestampQueue length %d != sampleMap length %d, sizes are inconsistent
 [%s] %s:%d Image not found in the buffer for timestamp=%u, retrieving the latest one for currentTS=%u, _sampleMap contains %lu
 [%s] %s:%d Can't find last object in timestamp queue, get last object in the image buffer
 [%s] %s:%d VCMomentsHistoryBuffer %s the old frame does not in buffer, something is wrong
 [%s] %s:%d timestamp %d exists already, enqueue failed
 [%s] %s:%d Invalid stream token
 [%s] %s:%d %@(%p) Invalid stream token
 [%s] %s:%d The power spectrum is nil
 [%s] %s:%d %@(%p) The power spectrum is nil
 [%s] %s:%d isPause[%d] begin
 [%s] %s:%d mediaserverd died reported by stream=%p
 [%s] %s:%d VCMediaStream didUpdateVideoConfiguration configDict is nil
 [%s] %s:%d Failed configure stream synchronization
 [%s] %s:%d %@(%p) Failed configure stream synchronization
 [%s] %s:%d VCMediaStream allocated new VCAudioStream %p
 [%s] %s:%d VCMediaStream allocated new virtual TTY device %p with mode %ld
 [%s] %s:%d Text device for stream token %ld
 [%s] %s:%d Couldn't find text stream for stream token %ld
 [%s] %s:%d VCMediaStream releasing old VCAudioStream[%p]
 [%s] %s:%d Forcing video payload to %d
 [%s] %s:%d Unexpected stream type [%s]
 [%s] %s:%d %@(%p) Unexpected stream type [%s]
 [%s] %s:%d Failed to allocate stream config
 [%s] %s:%d %@(%p) Failed to allocate stream config
 [%s] %s:%d VCMediaStream failed to set volume nil xpcDict
 [%s] %s:%d Unable to retrieve video stream for audio sync token=%ld
 [%s] %s:%d removed stream=%s as sync source for stream=%s delegates
 [%s] %s:%d VCMediaStream setMomentsCollectorDelegate for audioStream=%p: videostream=%p, delegate=%p
 [%s] %s:%d %s startSynchronization succeeded
 [%s] %s:%d %s startSynchronization failed
 [%s] %s:%d VCMediaStream failed to set PAUSE state, nil xpcDict
 [%s] %s:%d VCMediaStream failed to set stream direction nil xpcDict
 [%s] %s:%d VCMediaStream failed to set rtcpEnabled nil xpcDict
 [%s] %s:%d VCMediaStream failed to set rtpTimeOutEnabled nil xpcDict
 [%s] %s:%d VCMediaStream failed to set rtcpTimeOutEnabled nil xpcDict
 [%s] %s:%d VCMediaStream failed to set rtpTimeOutInterval nil xpcDict
 [%s] %s:%d VCMediaStream failed to set rtcpTimeOutInterval nil xpcDict
 [%s] %s:%d VCMediaStream failed to set rtcpSendInterval nil xpcDict
 [%s] %s:%d VCMediaStream failed to set 'input frequency meter enabled' nil xpcDict
 [%s] %s:%d VCMediaStream failed to set 'output frequency meter enabled' nil xpcDict
 [%s] %s:%d VCMediaStream allocated new VCVideoStream %p
 [%s] %s:%d VCMediaStream created momentsCollector for video stream %ld. vcMomentsCollectorDictionary=%@
 [%s] %s:%d VCMediaStream releasing old VCVideoStream %p. Removed momentsCollector for video stream %ld, vcMomentsCollectorDictionary=%@
 [%s] %s:%d Allocated new %s(%p)
 [%s] %s:%d %@(%p) Allocated new %s(%p)
 [%s] %s:%d Releasing old %s(%p) stream:%ld 
 [%s] %s:%d %@(%p) Releasing old %s(%p) stream:%ld 
 [%s] %s:%d Data header size (%d) is larger than the received packet size (%zu)
 [%s] %s:%d Invalid data length. inDataLength:%zu, payloadLength:%hu totalLength=%zu
 [%s] %s:%d Failed to append the uncompressed video data
 [%s] %s:%d Failed to convert negotiatorStreamGroupConfig cipherSuite(%ld) to mediaStreamConfig cipherSuite
 [%s] %s:%d Cannot create VCEmualtedPacket with datagram: %p, datagramSize: %d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Failed to allocate memory pool
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Failed to allocate memory pool allocator
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Failed to allocate block buffer header allocator
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Failed to allocate sample buffer allocator
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Failed to allocate slice header allocator
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer pointer is null
VideoPacketBuffer [%s] %s:%d Invalid arguments for resetting max burst loss stats.
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] FEC Feedback computed maxLossFrameIndex=%d frameSequenceNumber=%d playoutRTPTimestamp=%u rtpTimestamp=%u frameSize=%u VideoPacketsLostPerFrame=%u lossRatio=%2.2f arrivalTime=%2.3f
VideoPacketBuffer [%s] %s:%d Invalid videoPacketBuffer for updating max frame burst loss.
VideoPacketBuffer [%s] %s:%d Invalid frameStats for updating max frame burst loss for VideoPacketBuffer=%p
VideoPacketBuffer [%s] %s:%d Invalid frameIndex for updating max frame burst loss for VideoPacketBuffer=%p, frameIndex=%d
VideoPacketBuffer [%s] %s:%d Received more video packets than expected.
VideoPacketBuffer [%s] %s:%d Received more parity packets than expected.
VideoPacketBuffer [%s] %s:%d frameSequenceNumber=%d size=%d maxVideoPacketsLostPerFrame=%d, maxParityPacketsLostPerFrame=%d, videoPacketsLost=%d, parityPacketsLost=%d, videoPacketsExpected=%d, parityPacketsExpected=%d, videoPacketsReceived=%d, parityPacketsReceived=%d
VideoPacketBuffer [%s] %s:%d Invalid arguments for updating max group burst loss.
VideoPacketBuffer [%s] %s:%d Lost more video symbols than expected.
VideoPacketBuffer [%s] %s:%d groupID=%d videoPacketsLost=%d parityPacketsLostPerGroup=%d numberOfSymbolsPerPacket=%d numberOfDataPackets=%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] pFECHeader is NULL
VideoPacketBuffer [%s] %s:%d [Media Priority] Received video priority=%u
VideoPacketBuffer [%s] %s:%d Invalid Stream Id Count %d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Discarding packet fecProtected=%d TS=%d lastTS=%d seq=%d that arrived late [%f]s frameSequenceNumber=%d isTemporalStreamEnabled=%d isBaseLayerStream=%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] $ Discarding packet %d, frame %lu.  Packet.payload disagree, first %d, then %d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] $ Discarding packet %d, frame %lu.  Packet.srcfmt disagree, first %d, then %d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] $ Discarding packet %d, frame %lu.  Packet.pctype disagree, first %d, then %d
VideoPacketBuffer [%s] %s:%d Retransmitted packet arrived ssrc=%u seqNum=%u packetLen=%d isRetransmitted=%d frameSequenceNumber=%d
VideoPacketBuffer [%s] %s:%d invalidating fecHeader for frame with frameSequenceNumber:%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] schedule pointer is null
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] seq:%u playoutRTPTimestamp:%u frameTimestamp:%u diff:%d frameSequenceNumber=%d previousFrameSequenceNumber=%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] frameDecodingOrder:%hu, expectedDecodingOrder:%hu
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] FEC Protected Frame begin recovery
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Scheduling FEC Protected Frame after successful recovery (when next frame come)
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] scheduling incomplete frame! fecProtected:%d seq:%u playoutRTPTimestamp:%u frameTimestamp:%u diff:%d decodingOrder:%u isDecodingOrderValid:%d expectdDecodingOrder:%d isExpectedDecodingOrderValid:%d fecStatus=%d frameSequenceNumber=%d previousFrameSequenceNumber=%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Late frame scheduled lateFramesScheduledCount=%d playoutRTPTimestamp=%u frameSequenceNumber=%u previousFrameSequenceNumber=%u
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] pointer is null scheduledFrameTimestamps=%p
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Frame assembly failed frameTS:%u for timestamp:%u seq=%u frameSequenceNumber=%u isFrameSequenceNumberValid=%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Assembled incomplete frame with timestamp=%u, frameSequenceNumber=%d. Merging buffers!
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Freed all frames
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] wFirstSeqNumber:%d, dwFirstTimestamp=%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Add Packet frameSequenceNumber=%d fParityPacket=%d fecProtected=%d seq=%d startPosition=%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Received a packet out of order. lastAssembledTimestamp=%d packetTimestamp=%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Correct loss frameSequenceNumber=%d isParity=%d frameIndex=%d maxVideoPacketsLostPerFrame=%d maxParityPacketsLostPerFrame=%d
VideoPacketBuffer [%s] %s:%d Received NULL frame
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Starting to track late frame[%p] at t=%.4f
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Already tracking frame=%p with t=%.4f
VideoPacketBuffer [%s] %s:%d isNewFrameOufOfOrder=%d, newFrame->seq=%d, newFrame->prevSeq=%d, newFrame->nextSeq=%d, newFrame->next->prevSeq=%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Decoding order is different within a frame. Previous:%d New:%d
VideoPacketBuffer [%s] %s:%d Out of order non-parity packet. Incoming packet with sequenceNumber=%d, isParity=%d, groupID=%d, startPosition=%d
VideoPacketBuffer [%s] %s:%d Duplicate non-partity packet! Incoming packet with sequenceNumber=%d, isParity=%d, groupID=%d, startPosition=%d
VideoPacketBuffer [%s] %s:%d Duplicate parity packet! Incoming packet with sequenceNumber=%d, isParity=%d, groupID=%d, startPosition=%d
VideoPacketBuffer [%s] %s:%d Out of order parity packet! Incoming packet with sequenceNumber=%d, isParity=%d, groupID=%d, startPosition=%d
VideoPacketBuffer [%s] %s:%d BEGIN
VideoPacketBuffer [%s] %s:%d Error! Missing inital frames, seq:%d
VideoPacketBuffer [%s] %s:%d Packet seq:%d
VideoPacketBuffer [%s] %s:%d END
VideoPacketBuffer [%s] %s:%d Error! Missing middle frames, beforeSeq:%d afterSeq:%d
VideoPacketBuffer [%s] %s:%d Error! Missing end of frame
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Frame already scheduled! expectedSeq=%u seq=%u frameTimestamp=%u frameSequenceNumber=%u playoutRTPTimestamp=%u
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Invalid parameter scheduledFrameTimestamp!
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Out of order. expectedSeq:%u seq:%u frameTimestamp:%u frameSequenceNumber=%u playoutRTPTimestamp:%u
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Scheduling FEC Protected Frame after successful recovery
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] FEC Protected Frame unsuccessful recovery
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Scheduling Regular Frame seq:%u frameTimestamp:%u playoutRTPTimestamp:%u, isTemporalScaledStream=%d, isBaseLayerStream=%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Frame is not yet ready seq:%u frameTimestamp:%u playoutRTPTimestamp:%u, isTemporalScaledStream=%d, isBaseLayerStream=%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Previous frame is unknown. frameTimestamp=%u frameSequenceNumber=%d lastAssembledFrameSequenceNumber=%u baseLayerFrameAssemblyFailed=%d playoutRTPTimestamp=%u
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Trying to assemble a frame while previous frame assembly is pending. frameTimestamp=%u frameSequenceNumber=%d previousFrameSequenceNumber=%d lastAssembledFrameSequenceNumber=%u baseLayerFrameAssemblyFailed=%d playoutRTPTimestamp=%u
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Temporal base layer frame out of order. expectedSeq=%u seq=%u frameTimestamp=%d baseLayerFrameSequenceNumber=%d playoutRTPTimestamp=%u
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] group_id mismatch, expected (%d)
VideoPacketBuffer [%s] %s:%d Received %s packet FEC Header version %d with numberOfDataPackets: %d, numberOfParityPackets:%d
VideoPacketBuffer [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/VideoPacketBuffer.c:%d: VideoPacketBuffer[%p] packet size (%d) is too big
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Unexpected index index=%d startPosition=%d dataPacketOffset=%d numberOfSymbolsPerPacket=%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Unexpected duplicate packet found! GroupID=%d packet=%p parity=%d position=%d
VideoPacketBuffer [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/VideoPacketBuffer.c:%d: VideoPacketBuffer[%p] malloc failed
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Block buffer init failed
VideoPacketBuffer [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/VideoPacketBuffer.c:%d: VideoPacketBuffer[%p] RSU_Decode failed (%d)
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] recovered frame (%08X) group (%d:%d)
VideoPacketBuffer [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/VideoPacketBuffer.c:%d: VideoPacketBuffer[%p] payload size (%d) is too big
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Failed to create block buffer with error %d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Failed to get data pointer with error %d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Flushing incomplete frame bufer timestamp=%u playoutRTPTimestamp=%u frameSequenceNumberAtHead=%hu frameSequenceNumberAtTail=%hu diffTime=%5.5f
VideoPacketBuffer [%s] %s:%d This frame has unrecoverable loss, consider checking why the FEC Feedback Analyzer did not provide enough protection frameSequenceNumber=%d videoPacketsExpected=%d missingMediaPacketsCount=%d mediaCount=%d parityCount=%d  extraParityPacketsNeededCount=%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Error while processing packets
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Error while detecting missing packets missingMediaPacketsCount=%d mediaCount=%d parityCount=%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Error appending packets, buffer size %zu
VideoPacketBuffer [%s] %s:%d Frame assembly failed because of no end of frame videoPacketsExpected=%d mediaCount=%d parityCount=%d missingMediaPacketsCount=%d
VideoPacketBuffer [%s] %s:%d Frame assembly failed because of lost packets videoPacketsExpected=%d mediaCount=%d parityCount=%d missingMediaPacketsCount=%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] failed to create data frame. Status=%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Failed to decrypt the frame with frameDecryptionCallback result=%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Failed to get valid decrypted buffer length=%zu
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Failed to parse reconstructed packet result=%d videoPacketsExpected=%d, mediaCount=%d parityCount=%d missingMediaPacketsCount=%d error.reason=%s
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Assembled after gap in Frame Sequence Number without Refresh Frame timestamp=%u isLTRPFrame=%u isIntraFrame=%u frameSequenceNumber=%u lastAssembledFrameSequenceNumber=%u gapFrameSequenceNumber=%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Refresh frame has arrived and we can resume enqueueing late frames isIntraFrame=%d isLTRPFrame=%d frameSequenceNumber=%u
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] seq:%d Needs Refresh badFrame reason:%s 
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] frame recovered with retransmitted packets frameSequenceNumber=%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] frame with retransmitted packets failed to assemble frameSequenceNumber=%d
VideoPacketBuffer [%s] %s:%d packet[%p] bufferData.data is NULL
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Failed to create block buffer for packet. Status:%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] PacketSeq:%d LastSeq:%d missingCount:%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Failed to retrieve magic number and length
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Found corrupted buffer. Offset:%d BufferLen:%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Failed to truncate the buffer
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Failed to get length pointer, bufferLength is %zu, i is %d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Failed to get the slice length
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] jump=%d i=%d frameBufferLength=%u
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Failed to get data pointer
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] CMBlockBufferAccessDataBytes failed with status=%d dataPointerLength=%lu
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] FRAMEHEADER_SLICEINFO bad dictHeaderInfo
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] *** BAD FRAME -- %d: iSlices >= MAX_SLICES  Stop!
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Failed to create contiguous SPS buffer. Status:%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] FRAMEHEADER_SPSPPS bad dictHeaderInfo. err=%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] RECEIVED SPS/PPS TS: %08X, isTemporalScaledStream=%d, isBaseLayerStream=%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] IMGDESC is in multiple chuncks, copy needed
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Failed to create contiguous IMGDESC buffer. Status:%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] FRAMEHEADER_IMGDESC bad dictHeaderInfo
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] RECEIVED IMGDESC(%dx%d) TS:%08X, isTemporalScaledStream=%d, isBaseLayerStream=%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] SPS is in multiple chuncks, copy needed
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Failed to create contiguous PPS buffer. Status:%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Unknown InfoType: %d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] RECEIVED NO IMGDESC YET TS:%08X, isTemporalScaledStream=%d, isBaseLayerStream=%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] RECEIVED A FRAME WITH NO MATCHING SLICES(%d -> %d), isTemporalScaledStream=%d, isBaseLayerStream=%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] RECEIVED REFRESH FRAME seq:%d TS:%08X BITS:%04X SLICES:%d, isTemporalScaledStream=%d, isBaseLayerStream=%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] RECEIVED INTRA FRAME TS:%08X BITS:%04X SLICES:%d, isTemporalScaledStream=%d, isBaseLayerStream=%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Late frame was discarded in parse stage timestamp=%u frameSequenceNumber=%u
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Successfully assembled previously incomplete late frame timestamp=%u frameSequenceNumber=%u isRefreshFrame=%d hasRetransmittedPackets=%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] late frame assembled with retransmitted packets frameSequenceNumber=%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Received refresh frame for streamID=%d, frameSeqNumber=%d, isTemporalScalingStream=%d, isBaseLayerStream=%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Exiting base layer preceding loss state. isRefreshFrame=%d isBaseLayerStream=%d timestamp=%u frameSequenceNumber=%u
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] VPB is still in preceding loss state, dropping this frame. isRefreshFrame=%d isBaseLayerStream=%d timestamp=%u frameSequenceNumber=%u
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] FrameTimestamp=%d, evictedFramesTrackedCount=%d, evictedFramesRecoveredCount=%d, percOfEvictedFramesRecovered=%f, averageLatePacketDelayForEvictedFrames=%f,
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Error in assembly missingMediaPacketsCount=%d mediaCount=%d parityCount=%d frameSequenceNumber=%d ssrc=%u missingPackets=%s reason=%s
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Assembly of base layer frame of temporal stream failed, refresh frame is needed. frameSequenceNumber=%d timestamp=%u baseLayerFrameAssemblyFailedSequenceNumber=%d
VideoPacketBuffer [%s] %s:%d VideoPacketBuffer[%p] Moving Evicted frame with frameSequenceNumber=%u to incomplete buffer
 [%s] %s:%d Audio decoder (%p) received a packet with unknown payload=%d networkPayload=%d
 [%s] %s:%d Found existing audio receiver (%p) decoder (%p) at index %u. Release decoder.
 [%s] %s:%d AudioDecoder is NULL
 [%s] %s:%d Invalid decoder format
 [%s] %s:%d Failed to allocate payload structure for audio receiver (%p).
 [%s] %s:%d Skip creating decoder for DTMF
 [%s] %s:%d Overriding AMR payload with EVS Decoder
 [%s] %s:%d SoundDec_Create failed(%08X) for audio receiver (%p).
 [%s] %s:%d InternalBlockSize=%d useRTC=%d amrOctetAligned=%d payload=%d selectedPayload=%d networkPayload=%d flags=%d blockSize=%d forceEVSWideBandforAMR=%d headerFormat=%d
 [%s] %s:%d Updated DTMF sampleRate=%d isOctedAligned=%d convertedSamples=%d
 [%s] %s:%d Update audio receiver (%p) decoders: count=%u
 [%s] %s:%d Asking SpeechCodecBundleData for a invalid bundle data for payload type: %d
 [%s] %s:%d unable to read bundle data[%d]
 [%s] %s:%d Invalid parameter bitRate=%p
 [%s] %s:%d No packets in the bundle data [%p, %u]
 [%s] %s:%d VCConnection: initWithConnectionResult: %s
 [%s] %s:%d VCConnection: isLocalIPPort: NO
 [%s] %s:%d VCConnection: isLocalIPPort: %s
 [%s] %s:%d VCConnection: isRemoteIPPort: NO
 [%s] %s:%d VCConnection: isRemoteIPPort: %s
 [%s] %s:%d VCConnection: isOnSameIPPortWithConnection: %s vs. %s
 [%s] %s:%d VCConnection: isOnSameIPPortWithConnection: YES
 [%s] %s:%d VCConnection: isOnSameIPPortWithConnection: NO
 [%s] %s:%d VCConnection: isOnSameInterfacesWithConnection: NO
 [%s] %s:%d VCConnection: isOnSameInterfacesWithConnection: %s vs. %s
 [%s] %s:%d VCConnection: isOnSameInterfacesWithConnection: %s
 [%s] %s:%d Downlink bitrate cap is not implemented for legacy VCConnection
 [%s] %s:%d Uplink bitrate cap is not implemented for legacy VCConnection
 [%s] %s:%d Setting downlink bitrate cap is not implemented for legacy VCConnection
 [%s] %s:%d Setting uplink bitrate cap is not implemented for legacy VCConnection
 [%s] %s:%d Failed to generate the payload specs field!
 [%s] %s:%d Failed to generate the payload field!
 [%s] %s:%d Failed to generate the default payload field!
 [%s] %s:%d Failed to generate the coordinateSystem field!
 [%s] %s:%d Stream config is nil
 [%s] %s:%d groupID='%s' qualityIndex=%u Unable to encode both payload and payload specs. payloads=%@ codecs=%@
 [%s] %s:%d Default stream config doesn't exist
 [%s] %s:%d Failed to generate the payloads field!
 [%s] %s:%d repairedStreamID=%u does not match lower 16 bits of SSRC + 1 (%u)
 [%s] %s:%d Invalid input parameter (payloadConfigs and payloadConfigSampleRates have different sizes)
 [%s] %s:%d Missing quality index and stream type. streamGroupID=%s
 [%s] %s:%d Unable to determine the quality index. streamGroupID=%s streamIndex=%d
 [%s] %s:%d Unsupported metadata flag (0x%x)
 [%s] %s:%d Invalid payload config Sample Rates
 [%s] %s:%d Invalid payload specs
 [%s] %s:%d %@
 [%s] %s:%d Failed to allocate config for known stream type. streamGroupID=%s streamIndex=%d!
 [%s] %s:%d Invalid payload bitmap
 [%s] %s:%d Unable to encode payload=%@
 [%s] %s:%d Invalid index=%u in payload configs (%lul)
 [%s] %s:%d Invalid payload: 0x%x
 [%s] %s:%d Unrecognized payload (0x%x)!
 [%s] %s:%d Unrecognized payload specs (0x%x)!
 [%s] %s:%d Invalid codec index (%d)!
 [%s] %s:%d The metadata field doesn't fit in a uint16. metadata=%x
 [%s] %s:%d The maxNetworkBitrate field doesn't fit in a uint16. maxNetworkBitrate=%x
 [%s] %s:%d The audioChannelCount field doesn't fit in a uint8. audioChannelCount=%x
 [%s] %s:%d Failed to copy the stream config for required fields compression
 [%s] %s:%d Failed to copy the stream config for optional fields compression
 [%s] %s:%d Failed to allocate audio issue detector handle
 [%s] %s:%d Failed to allocate audio issue detector queue
 [%s] %s:%d Audio issue detector created for direction=%d
 [%s] %s:%d Invalid parameter issueDetectorUtil=%p config=%p
 [%s] %s:%d Audio issue detector configured for direction=%d with samples per frame=%d, sample rate=%d
 [%s] %s:%d Invalid parameter issueDetectorUtil=%p
 [%s] %s:%d Audio issue detector link type updated to %d for direction=%d
 [%s] %s:%d Audio issue detector is NULL
 [%s] %s:%d Audio issue detector for direction=%d is NULL
 [%s] %s:%d Audio issue detector [%p] state is invalid
 [%s] %s:%d Unexpected event in init state for direction=%d
 [%s] %s:%d Invalid parameter issueDetectorUtil=%p eventQueue=%p
 [%s] %s:%d Unexpected event in idle state for direction=%d
 [%s] %s:%d Event logging enqueue failed for event=%d
 [%s] %s:%d Failed to allocate reporting dictionary
 [%s] %s:%d Unexpected event in silence state for direction=%d
 [%s] %s:%d Unexpected event in speech state in direction=%d
 [%s] %s:%d Audio issue detector: DistortionEvent: Continuous speech loss: direction=%d, disortionTimeMs=%d, distortionDurationMs=%d
 [%s] %s:%d Audio issue detector: DistortionEvent: Average speech loss: direction=%d, disortionTimeMs=%d, distortionDurationMs=%d
 [%s] %s:%d Audio issue detector: DistortionEvent: Downlink link broken: direction=%d, disortionTimeMs=%d, distortionDurationMs=%d
 [%s] %s:%d Audio issue detector: DistortionEvent: Downlink silence > 5s: direction=%d, disortionTimeMs=%d, distortionDurationMs=%d
 [%s] %s:%d Audio issue detector: DistortionEvent: Uplink silence > 5s: direction=%d, disortionTimeMs=%d, distortionDurationMs=%d
 [%s] %s:%d Audio issue detector: DistortionEvent: Continuous zero pcm samples > 5s in uplink: direction=%d, disortionTimeMs=%d, distortionDurationMs=%d
 [%s] %s:%d Audio issue detector: DistortionEvent: Continuous zero pcm samples > 5s in downlink: direction=%d, disortionTimeMs=%d, distortionDurationMs=%d
 [%s] %s:%d Audio issue detector: DistortionEvent: Low energy in uplink: direction=%d, disortionTimeMs=%d, distortionDurationMs=%d
 [%s] %s:%d Audio issue detector: DistortionEvent: Low energy in downlink: direction=%d, disortionTimeMs=%d, distortionDurationMs=%d
 [%s] %s:%d Audio issue detector: DistortionEvent: High noise floor in uplink: direction=%d, disortionTimeMs=%d, distortionDurationMs=%d, segmentRmsMeanDb=%d
 [%s] %s:%d Audio issue detector: DistortionEvent: High noise floor in downlink: direction=%d, disortionTimeMs=%d, distortionDurationMs=%d, segmentRmsMeanDb=%d
 [%s] %s:%d Audio issue detector: CallEndEvent: Speech state rms stats: direction=%d, disortionTimeMs=%d, distortionDurationMs=%d, rmsMeanDb=%d, rmsMinDb=%d, rmsMaxDb=%d, rmsSegmentMeanDb=%d, rmsSegmentMinDb=%d, rmsSegmentMaxDb=%d
 [%s] %s:%d Audio issue detector: CallEndEvent: Silence state rms stats: direction=%d, disortionTimeMs=%d, distortionDurationMs=%d, rmsMeanDb=%d, rmsMinDb=%d, rmsMaxDb=%d, rmsSegmentMeanDb=%d, rmsSegmentMinDb=%d, rmsSegmentMaxDb=%d
 [%s] %s:%d Audio issue detector: CallEndEvent: Call end stats: direction=%d, disortionTimeMs=%d, distortionDurationMs=%d, payloadType=%d, sampleRate=%d, bitRateInBps=%d, ratType=%d, totalFrameCount=%d, speechFrameCount=%d, speechBadFrameCount=%d, speechLostFrameCount=%d, silenceFrameCount=%d, noDataFrameCount=%d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCAudioIssueDetectorUtil.c:%d: Unexpected log event
 [%s] %s:%d Rotation angle %d is not supported (Only 90 and 270 are valid).
 [%s] %s:%d kVCVideoSourceTokenInvalid. type=%d, deviceName=%@
 [%s] %s:%d sourceToken was created before. type=%d, deviceName=%@
 [%s] %s:%d Reached VCVIDEOSOURCETOKEN_MAX_IDENTIFIER=0x%x, reset _identifierSeeds %d to %d
 [%s] %s:%d sourceToken(0x%x) deviceName (%@) was in look up table _sourceNames. Either token is colliding ,or VCVideoSourceType is not correct
 [%s] %s:%d Created sourceToken=0x%x, type=%d, deviceName=%@
 [%s] %s:%d Invalid configuration
 [%s] %s:%d Failed to generate dispatch queue name
 [%s] %s:%d %@(%p) Failed to generate dispatch queue name
 [%s] %s:%d Failed to generate dispatch queue. queueName=%@
 [%s] %s:%d %@(%p) Failed to generate dispatch queue. queueName=%@
 [%s] %s:%d null configuration
 [%s] %s:%d Invalid tapType=%d
 [%s] %s:%d Invalid sessionType=%d
 [%s] %s:%d capture context is NULL
 [%s] %s:%d nil client
 [%s] %s:%d %@(%p) nil client
 [%s] %s:%d %s
 [%s] %s:%d %@(%p) %s
 [%s] %s:%d not handled
 [%s] %s:%d %@(%p) not handled
 [%s] %s:%d Invalid request!
 [%s] %s:%d Invalid count!
 [%s] %s:%d TransactionID is nil!
 [%s] %s:%d RequestMode is nil!
 [%s] %s:%d RequestState is nil!
 [%s] %s:%d RequestTimestamp is nil!
 [%s] %s:%d MediaType is nil!
 [%s] %s:%d Local Video recording is enabled, we do not support type=%d remote=%d requests
 [%s] %s:%d Received local video request with local video recording disabled
 [%s] %s:%d InitiatorID is nil!
 [%s] %s:%d RequesteeID is nil!
 [%s] %s:%d RequesterID is nil!
 [%s] %s:%d FileSize is nil!
 [%s] %s:%d Request did succeed is nil!
 [%s] %s:%d VCMoments request %@ has unexpected contents!
 [%s] %s:%d VCMoments request %@ invalid transactionID!
 [%s] %s:%d VCMoments request %@ is processed, ignoring the duplicate
 [%s] %s:%d VCMoments set capabilities %d
 [%s] %s:%d mode=%d, timestamp=%d, request %@
 [%s] %s:%d update _isActive to %s
 [%s] %s:%d We do not support local audio recording
 [%s] %s:%d AVCMomentsRequestMode invalid
 [%s] %s:%d getLivePhotoWithTransactionID failed! stillImageURL:%@ movieURL:%@ error:%@
 [%s] %s:%d The number of requests exceeds the max %d
 [%s] %s:%d mode=%d, didSucceed=%d, fileSize=%ld
 [%s] %s:%d AVCMomentsRequestModeInvalid
 [%s] %s:%d Missing state in moments request %@
VCAudioRedBuilder [%s] %s:%d %s %s
VCAudioRedBuilder [%s] %s:%d Discarding Red payload that is too big :%d
VCAudioRedBuilder [%s] %s:%d Discarding Red payload with too old sequence offset :%d
VCAudioRedBuilder [%s] %s:%d Discarding Red payload with too old timestamp offset :%d
VCAudioRedBuilder [%s] %s:%d Buffer size not enough remainingLength %d
VCAudioRedBuilder [%s] %s:%d Buffer size not enough requiredLength %d remainingLength %d
VCAudioRedBuilder [%s] %s:%d timestampOffsetThreshold:%d highThreshold:%d lowThreshold:%d payloadTimestamp:%d
VCAudioRedBuilder [%s] %s:%d blockOffset:%d timestampOffset:%d redTimestamp:%d redPayload:%s
VCAudioRedBuilder [%s] %s:%d timestampOffset:%d redPayload:%s
VCAudioRedBuilder [%s] %s:%d Failed to allocate red payload buffer history
VCAudioRedBuilder [%s] %s:%d Cap exceeded for maxDelay:%d using %d instead
VCAudioRedBuilder [%s] %s:%d Cap exceeded for number of red payloads:%d using %d instead
VCAudioRedBuilder [%s] %s:%d Bad packet large redPayload bufferLength:%d
VCAudioRedBuilder [%s] %s:%d RED payload invalid. Buffer is too small
VCAudioRedBuilder [%s] %s:%d Invalid RED header. Abort and drop this packet.
VCAudioRedBuilder [%s] %s:%d Invalid RED header
VCAudioRedBuilder [%s] %s:%d redundant payloads count:%d
 [%s] %s:%d VTU_ReallocPktsInfo failed; iNewMaxPacketCount==0 BUT *ppiPacketSizes=%p *ppiPacketFlags=%p
 [%s] %s:%d Failed to compute the new max packet count
 [%s] %s:%d VTU_ReallocPktsInfo requested %d. Already have larger %d pkts.
 [%s] %s:%d Failed to reallocate packet sizes array
 [%s] %s:%d Failed to reallocate packet flags array
 [%s] %s:%d Failed to reallocate line sizes array
 [%s] %s:%d Failed to reallocate line offsets array
 [%s] %s:%d VTU_ReallocPktsInfo succeeded for %d elements.
 [%s] %s:%d VTU_SplitVideoIntoPackets: bEnableInitialMTUOverrideFor2G    MTU: %d %d->%d  Tx: %d
 [%s] %s:%d CU_SplitVideoIntoPackets failed sanity check!: iProbeSeqPacketSize = %d iProbeSeqFirstPacketSize = %d iProbeSeqPacketCount = %d len = %d lenWithFEC = %d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/VideoTransmitterUtils.c:%d: Max number of GOBs reached (%d), discarded.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/VideoTransmitterUtils.c:%d: Invalid slice length (%d), discarded.
 [%s] %s:%d VTU_SplitVideoIntoPackets: FRAMEHEADER_IMGDESC/SPS bad RetrieveMBSlice
 [%s] %s:%d Too many slices in packet
 [%s] %s:%d VTU_SplitVideoIntoPackets: FRAMEHEADER_SLICEINFO bad RetrieveMBSlice
 [%s] %s:%d Exceeded max GOB count (%d > %d)!
 [%s] %s:%d Failed to allocate buffer!
 [%s] %s:%d "parts" is zero while trying to calculate "each = (bytes / parts) + 1"
 [%s] %s:%d _VTU_GenerateNewPacketCount requested %d exceeds the MAX pkts %d. 
 [%s] %s:%d _VTU_ReallocateBuffer failed to re-allocate %zu bytes
 [%s] %s:%d _VTU_ReallocateBuffer.....Reallocing buffer of size %zu to %zu from [%p, %p)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/VideoTransmitterUtils.c:%d: Failed to allocate entry
 [%s] %s:%d Unexpected frame with zero data length!
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/VideoTransmitterUtils.c:%d: calloc %d bytes failed
 [%s] %s:%d Skip the frame since we failed to prepare the last fragement
 [%s] %s:%d Skip the frame since we failed to prepare the middle fragement
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/VideoTransmitterUtils.c:%d: malloc %d bytes failed
 [%s] %s:%d Failed at VTU_ReallocPktsInfo!
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/VideoTransmitterUtils.c:%d: Invalid size iGobs = %d, iHeads = %d, buffer size = %u, dataLen = %d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/Others/VideoTransmitterUtils.c:%d: Failed to allocate new entry
 [%s] %s:%d Found out-of-bound data length %d
 [%s] %s:%d Failed to initialize media line
 [%s] %s:%d Invalid media line type
 [%s] %s:%d Can't parse attribute: %s
 [%s] %s:%d Failed to allocate audio limiter
 [%s] %s:%d voiceLimiterUnit=%p VCAudioUnit_NewInstance kAudioUnitSubType_ControlFreak
 [%s] %s:%d Error AudioUnitSetProperty voiceLimiterUnit, kAudioUnitProperty_MaximumFramesPerSlice %d
 [%s] %s:%d voiceLimiterUnit=%p kAudioUnitProperty_MaximumFramesPerSlice kAudioUnitScope_Global
 [%s] %s:%d Error AudioUnitSetProperty voiceLimiterUnit, kAudioUnitProperty_StreamFormat, kAudioUnitScope_Input %d
 [%s] %s:%d voiceLimiterUnit=%p kAudioUnitProperty_StreamFormat kAudioUnitScope_Input
 [%s] %s:%d Error AudioUnitSetProperty voiceLimiterUnit, kAudioUnitProperty_StreamFormat, kAudioUnitScope_Output %d
 [%s] %s:%d voiceLimiterUnit=%p kAudioUnitProperty_StreamFormat kAudioUnitScope_Output
 [%s] %s:%d Failed to set the voiceLimiterUnit threshold db %d
 [%s] %s:%d voiceLimiterUnit=%p kVCAudioLimiterParameterInputThresholddB kAudioUnitScope_Global
 [%s] %s:%d Failed to set the voiceLimiterUnit min fast gain %d
 [%s] %s:%d voiceLimiterUnit=%p kVCAudioLimiterParameterMinFastGain kAudioUnitScope_Global
 [%s] %s:%d Failed to set the voiceLimiterUnit fast gain release time %d
 [%s] %s:%d voiceLimiterUnit=%p kVCAudioLimiterParameterFastGainReleaseTime kAudioUnitScope_Global
 [%s] %s:%d Failed to set the voiceLimiterUnit lookahead %d
 [%s] %s:%d voiceLimiterUnit=%p kVCAudioLimiterParameterLookahead kAudioUnitScope_Global
 [%s] %s:%d Failed to set the voiceLimiterUnit input gain %d
 [%s] %s:%d voiceLimiterUnit=%p kVCAudioLimiterParameterInputGain kAudioUnitScope_Global
 [%s] %s:%d Error AudioUnitInitialize voiceLimiterUnit %d
 [%s] %s:%d voiceLimiterUnit=%p AudioUnitInitialize
 [%s] %s:%d voiceLimiterUnit=%p status=%{BOOL}d
 [%s] %s:%d Stopping audioLimiter=%p
 [%s] %s:%d Stopped audioLimiter=%p
 [%s] %s:%d Error AudioUnitProcess voiceLimiterUnit %d
 [%s] %s:%d Failed to allocate multiway audio stream set
 [%s] %s:%d Failed to allocate multiway video stream set
 [%s] %s:%d Failed to allocate bandwidth configuration set
 [%s] %s:%d Failed to allocate pixel format set
 [%s] %s:%d Failed to allocate for hdr modes supported
 [%s] %s:%d Failed to allocate the stream group config array
 [%s] %s:%d Failed to allocate bandwidth configuration for mode:%d connectionType:%d
 [%s] %s:%d Failed to allocate default bandwidth configuration for connectionType:%d
 [%s] %s:%d Failed to allocate bandwidth extension configuration
 [%s] %s:%d Failed to allocate payload set
 [%s] %s:%d Payload cound is not identical
 [%s] %s:%d Missing payload: %d
 [%s] %s:%d Feature string not found for payload: %d
 [%s] %s:%d Compare feature string not found for payload: %d
 [%s] %s:%d Feature strings not identical for payload: %d
VCRC [%s] %s:%d VCRateControlMediaController init
VCRC [%s] %s:%d [%p] config for key=%s serverBagContainsGroup=%d _enableAggressiveProbingSequence=%d _minProbingSpacingAggressive=%f
VCRC [%s] %s:%d MediaQueue and VCMediaQueue passed are nil for VCRC MediaController=%p
VCRC [%s] %s:%d wrong type of statistics message is processed by media controller
VCRC [%s] %s:%d Baseband queue HWM is hit, [mediaSuggestion:%s%s%s]
VCRC [%s] %s:%d Baseband queue LWM is hit
VCRC [%s] %s:%d Baseband queue LWM is hit, [resume video]
VCRC [%s] %s:%d Video %s by user [rate:%u, videoStopped:%d]
VCRC [%s] %s:%d Suggest to stop video from rate controller due to congestion [pause:%d,stopByBB:%d,stopByRC:%d]
VCRC [%s] %s:%d Suggest to resume video from rate controller due to no congestion [pause:%d,stopByBB:%d,stopByRC:%d]
VCRC [%s] %s:%d Stop resuming video since user already pause the video
VCRC [%s] %s:%d Negative flush count: %d. Bad flush count maintainance!
VCRC [%s] %s:%d Audio sending bitrate %u is set much higher than the target bitrate %u
VCRC [%s] %s:%d A fake large frame is %s required [time:%.2f, expected:%.2f, actual:%.2f, timeDiffExpect:%.2f, timeDiffActual:%.2f]
VCRC [%s] %s:%d Audio sending bitrate used up all available uplink bandwidth, do minimum probing by setting large frame size cap to 0
 [%s] %s:%d Current emulated network delay: [%d, %d, %d]
 [%s] %s:%d Set link flags='%08x'
 [%s] %s:%d Set remote link flags='%08x'
 [%s] %s:%d HandoverReport: connections %@, and %@ are identical for primary, choosing %s
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Dialog.c:%d: Invalid Request message(%p)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Dialog.c:%d: calloc(%d) failed
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Dialog.c:%d: MQCreateHandle failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Dialog.c:%d: CreateHandle failed
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Dialog.c:%d: Invalid Response message(%p,%d,%d)
SIP [%s] %s:%d MatchSipMsgAndLock: got a closing handle.
SIP [%s] %s:%d Dialog(CREATED) Match(STATUS) [%s]=[%s], [%s]=[%s]
SIP [%s] %s:%d Dialog(CREATED) Match(REQUEST) [%s]=[%s], [%s]=[%s]
SIP [%s] %s:%d Dialog Match(STATUS): [%s]=[%s], [%s]=[%s], [%s]=[%s]
SIP [%s] %s:%d Dialog Match(REQUEST): [%s]=[%s], [%s]=[%s], [%s]=[%s]
 [%s] %s:%d Local screen rule collection initialization failed
 [%s] %s:%d Screen features not successfully generated
 [%s] %s:%d Initialize stream group U1 config for groupID=%s
 [%s] %s:%d One to one config not supported for groupID=%s
 [%s] %s:%d Failed to init U1 config for groupID=%s
 [%s] %s:%d Failed to initialize negotiated audio settings
 [%s] %s:%d Stream group has no remote U1 config for system audio. Check for standalone system audio support.
 [%s] %s:%d Failed to negotiate microphone settings as either local u1Config isNil=%{BOOL}d or remote u1Config isNil=%{BOOL}d
 [%s] %s:%d Failed to initialize negotiated video settings
 [%s] %s:%d Failed to negotiate video settings as either local u1Config isNil=%@ or remote u1Config isNil=%@
 [%s] %s:%d Failed to initialize negotiated screen settings
 [%s] %s:%d Failed to negotiate screen settings as either local u1Config isNil=%@ or remote u1Config isNil=%@
 [%s] %s:%d Failed to decode update number
 [%s] %s:%d Failed to decode is local
 [%s] %s:%d Failed to decode segment text
 [%s] %s:%d Failed to compute a valid capture framerate
 [%s] %s:%d Computed base period: %d frames
 [%s] %s:%d Computed capture frame rate is not a valid _captureFramerate=%d
 [%s] %s:%d Configured max capture frame _captureFramerate=%d is incompatible with streamInfo.framerate=%d
 [%s] %s:%d Computed capture frame rate: %d
 [%s] %s:%d Computed group list: %@
 [%s] %s:%d Computed scheduler item list: %@
 [%s] %s:%d Total budget: time:%dms weight:%d frames:%d
 [%s] %s:%d Bugdet computed for item: %@
 [%s] %s:%d Position next item (start position=%d leftDist=%d rightDist=%d): %@
 [%s] %s:%d Left item: %@
 [%s] %s:%d Right item: %@
 [%s] %s:%d Remaining items: %@
 [%s] %s:%d Place item in the right bucket (position=%d leftDist=%d rightDist=%d): %@ 
 [%s] %s:%d Place item in the left bucket (position=%d leftDist=%d rightDist=%d): %@ 
 [%s] %s:%d Placing first item: %@
 [%s] %s:%d HandoverReport: DID nominate connection %s as %s %s connection. Demote current: %d, replace current: %d
 [%s] %s:%d HandoverReport: DID NOT nominate connection %s
 [%s] %s:%d HandoverReport: Finished nominating a candidate pair. Primary %s; Secondary: %s; Pending primary: %s; Pending secondary %s
 [%s] %s:%d HandoverReport: %s received a nil VCConnection!
 [%s] %s:%d HandoverReport: set a PRIMARY connection %s
 [%s] %s:%d HandoverReport: new connection %s is not the pending primary %s
 [%s] %s:%d HandoverReport: Secondary nomination response comes back first. Use connection %s as a temporary primary
 [%s] %s:%d HandoverReport: set a SECONDARY connection %s
 [%s] %s:%d HandoverReport: new connection %s is not the pending secondary %s
 [%s] %s:%d HandoverReport: Add result %s %s connection %s. Primary %s; Secondary: %s; Pending primary: %s; Pending secondary: %s
 [%s] %s:%d HandoverReport: removed SECONDARY connection %s due to %s IPPort %s change
 [%s] %s:%d HandoverReport: removed PRIMARY connection %s due to %s IPPort %s change
 [%s] %s:%d HandoverReport: replace primary connection %s with new primary %s due to removed IPPort %s
 [%s] %s:%d HandoverReport: no available connection after interface change
 [%s] %s:%d reportConnection: reportingAgent is nil, can not report connections
 [%s] %s:%d reportConnection: %s
 [%s] %s:%d invalid parameters
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/MsgQue.c:%d: calloc(%d) failed
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/MsgQue.c:%d: CreateHandle failed
SIP [%s] %s:%d Message Queue is full
SIP [%s] %s:%d MQIgnore: out of memory
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/MsgQue.c:%d: ppSipMsg is NULL
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/MsgQue.c:%d: Message Queue Closed during MQGet
SIP [%s] %s:%d Trying to remove an invalid element from a message queue. pMsgQue=%p iAvail=%d nth=%d
VCRC [%s] %s:%d Configuring VCRateControl algorithm with targetBitrate=%d, minBitrate=%d, maxBitrate=%d
VCRC [%s] %s:%d Duplicated feedback or out-of-order feedback messages! timestamp:0x%04X
VCRC [%s] %s:%d VCRateControl is paused
VCRC [%s] %s:%d Wrong statistics type %d
VCRC [%s] %s:%d %8.3f/%04X:
%.4f
%.4f
%.4f
%.4f %c
RTT:%-4u
PLR:%4.2f@%.1f
RRx:%4u
MBL:%d
%4u/%4u
  CS:%04X %04X %u BB: %3u
 UAT %s %s
 [%s] %s:%d %p, Releasing _bufferPool to create a new one
 [%s] %s:%d Frame Transform, %p, create %ux%u _bufferPool
 [%s] %s:%d %p, CVPixelBufferPoolCreate failed
 [%s] %s:%d depthPixelBuffer=%@
 [%s] %s:%d pixelBuffer=%@
 [%s] %s:%d HandoverReport: updateConnectionForDuplication isLocalPreferWiFi %d isRemotePreferWiFi: %d duplicationEnhancementEnabled: %d duplicationReason: %d useLinkPriorityForSelection: %d secondary connection %s
 [%s] %s:%d HandoverReport: Duplication active due to missing packets - updateConnectionForDuplication forces to use secondary connection %s
 [%s] %s:%d HandoverReport: Duplication active due to missing packets - updateConnectionForDuplication forces to use secondary connection interface preferences - isLocalPreferWiFi(updated): %d isRemotePreferWiFi(updated): %d
 [%s] %s:%d HandoverReport: updateConnectionForDuplication check connection %s
 [%s] %s:%d HandoverReport: updateConnectionForDuplication picks connection %s
 [%s] %s:%d HandoverReport: updateConnectionForDuplication picks connection %s selectedConnectionPriority: %d
 [%s] %s:%d HandoverReport: Get the same connection for multiway. Keep using the old connection
 [%s] %s:%d HandoverReport: a new connection is added with the same interface combo as the primary connection. Prevent selecting it as secondary connection.
 [%s] %s:%d ConnectionSelectionPolicy updated: preferRelayOverP2P[%d] preferIPv6OverIPv4[%d] preferNonVPN[%d] e2eCriteriaEnabled[%d] preferE2E[%d]
 [%s] %s:%d HandoverReport: Updated primary connection to: %s for group: %d
 [%s] %s:%d HandoverReport: Updated secondary connection to: %s for group: %d
 [%s] %s:%d Created VCControlChannelDialog object with remoteParticipantID='%@'
 [%s] %s:%d %@(%p) Created VCControlChannelDialog object with remoteParticipantID='%@'
 [%s] %s:%d Dealloc VCControlChannelDialog object with remoteParticipantID='%@'
 [%s] %s:%d %@(%p) Dealloc VCControlChannelDialog object with remoteParticipantID='%@'
 [%s] %s:%d removeTransactionForTransactionID: transactionID='%d' removed from list of transactions
 [%s] %s:%d %@(%p) removeTransactionForTransactionID: transactionID='%d' removed from list of transactions
 [%s] %s:%d Participant '%@' removed from the session '%d'. Cancelling handshake...
 [%s] %s:%d %@(%p) Participant '%@' removed from the session '%d'. Cancelling handshake...
 [%s] %s:%d Dialog was flushed. Cancelling handshake...
 [%s] %s:%d %@(%p) Dialog was flushed. Cancelling handshake...
 [%s] %s:%d Handshake acknowledged from '%@'
 [%s] %s:%d %@(%p) Handshake acknowledged from '%@'
 [%s] %s:%d sendAllCachedMessagesAndDisableHandshakeWhenDone: Handshake turned off for _sessionID='%d', _participantID='%@'
 [%s] %s:%d %@(%p) sendAllCachedMessagesAndDisableHandshakeWhenDone: Handshake turned off for _sessionID='%d', _participantID='%@'
 [%s] %s:%d sendAllCachedMessagesAndDisableHandshakeWhenDone: Sent cached message for _sessionID='%d', _participantID='%@', topic='%@', reliable message='%@' 
 [%s] %s:%d %@(%p) sendAllCachedMessagesAndDisableHandshakeWhenDone: Sent cached message for _sessionID='%d', _participantID='%@', topic='%@', reliable message='%@' 
 [%s] %s:%d Started handshake for session '%d' with participant '%@' using topic '%@', message '%@'
 [%s] %s:%d %@(%p) Started handshake for session '%d' with participant '%@' using topic '%@', message '%@'
 [%s] %s:%d cacheOutgoingMessage: Cached a new message for sessionID='%d', _participantID='%@', topic='%@', reliable message='%@' 
 [%s] %s:%d %@(%p) cacheOutgoingMessage: Cached a new message for sessionID='%d', _participantID='%@', topic='%@', reliable message='%@' 
 [%s] %s:%d topic must not be nil
 [%s] %s:%d %@(%p) topic must not be nil
 [%s] %s:%d message must not be nil
 [%s] %s:%d %@(%p) message must not be nil
 [%s] %s:%d messageData should not be nil
 [%s] %s:%d %@(%p) messageData should not be nil
 [%s] %s:%d sendReliableMessageInternal: attempt to send duplicate transaction detected for _sessionID='%d', _participantID='%@', transactionID='%llu'. Aborted send...
 [%s] %s:%d %@(%p) sendReliableMessageInternal: attempt to send duplicate transaction detected for _sessionID='%d', _participantID='%@', transactionID='%llu'. Aborted send...
 [%s] %s:%d sendReliableMessageInternal: creating a new transaction for _sessionID='%d', _participantID='%@', transactionID='%llu', data='%@'
 [%s] %s:%d %@(%p) sendReliableMessageInternal: creating a new transaction for _sessionID='%d', _participantID='%@', transactionID='%llu', data='%@'
 [%s] %s:%d failed to create transaction
 [%s] %s:%d %@(%p) failed to create transaction
 [%s] %s:%d sendReliableMessageInternal: Remove transaction for _sessionID='%d', _participantID='%@', transactionID='%llu', data='%@'
 [%s] %s:%d %@(%p) sendReliableMessageInternal: Remove transaction for _sessionID='%d', _participantID='%@', transactionID='%llu', data='%@'
 [%s] %s:%d Dialog send unreliable message for sessionID='%d', participantID='%@', transactionID='%llu', message='%@'
 [%s] %s:%d %@(%p) Dialog send unreliable message for sessionID='%d', participantID='%@', transactionID='%llu', message='%@'
 [%s] %s:%d confirmTransaction: Found matching transaction for _sessionID='%d', participantID='%@', transactionID='%@'
 [%s] %s:%d %@(%p) confirmTransaction: Found matching transaction for _sessionID='%d', participantID='%@', transactionID='%@'
 [%s] %s:%d confirmTransaction: Could not find matching transaction for _sessionID='%d', participantID='%@', transactionID='%@'
 [%s] %s:%d %@(%p) confirmTransaction: Could not find matching transaction for _sessionID='%d', participantID='%@', transactionID='%@'
 [%s] %s:%d Media Blob (v2) - %s
 [%s] %s:%d changing _isSharingEnabled to %d
 [%s] %s:%d %@(%p) changing _isSharingEnabled to %d
 [%s] %s:%d _isSharingEnabled already set to %d
 [%s] %s:%d %@(%p) _isSharingEnabled already set to %d
 [%s] %s:%d sessionInitializeBlock allocated new VCSession[%p]
 [%s] %s:%d sessionTerminateBlock releasing old VCSession[%p]
 [%s] %s:%d adding new VCSessionParticipant(s) with config(s):%s to VCSession[%p]
 [%s] %s:%d changing VCSessionParticipant[%p] audioEnabled to %d
 [%s] %s:%d changing VCSessionParticipant[%p] videoEnabled to %d
 [%s] %s:%d changing VCSessionParticipant[%p] screenEnabled to %d
 [%s] %s:%d changing VCSessionParticipant=%p mediaType=%d to state=%d
 [%s] %s:%d participantUUID[%@] videoQuality[%d] visibilityIndex[%d] prominenceIndex[%d]
 [%s] %s:%d Failed to allocate the uplink bandwidth allocation table
 [%s] %s:%d Failed to allocate stream token to enable map
 [%s] %s:%d Last entry=%@ will use remaining available networkBitrate=%d mediaBitrate=%d
 [%s] %s:%d Failed to allocate the negotiator map
 [%s] %s:%d Failed to allocate the negotiator for version 1 of the media blob
 [%s] %s:%d Failed to allocate the negotiator for version 2 of the media blob
 [%s] %s:%d Active negotiator found, negotiation already performed. ActiveNegotiator=%@
 [%s] %s:%d Failed to extract the media blob from the negotiation data
 [%s] %s:%d No negotiator found for media blob version=%@
 [%s] %s:%d Failed to negotiate the media blob with version=%@
 [%s] %s:%d Unknown blob version=%d
 [%s] %s:%d Failed to unserialize the negotiation data
 [%s] %s:%d Failed to retrieve the negotiation data for version=%d
 [%s] %s:%d Failed to initialize the local configuration for version=%u
 [%s] %s:%d VCDatagramChannelIDSEmulated %p created
 [%s] %s:%d VCDatagramChannelIDSEmulated %p dealloc called: _idsChannel %p, _network %p
 [%s] %s:%d Not supported yet for mode %d
 [%s] %s:%d unknown mode %d
 [%s] %s:%d datagram size too large %d
 [%s] %s:%d Cannot create VCEmulatedPacket!
 [%s] %s:%d The datagramChannel is not started!
 [%s] %s:%d Failed to obtain emulated network
 [%s] %s:%d Failed to write to ids datagram channel with error %s
 [%s] %s:%d Invalid VCMediaControlInfoGeneratorType: %d
 [%s] %s:%d Failed to create _streamTokenEventQueue
 [%s] %s:%d streamToken=%@, powerSpectrumSource=%@
 [%s] %s:%d Failed to enqueue stream=%p streamToken=%@ powerSpectrumSource=%@ queue=%p status=%d
 [%s] %s:%d Failed to enqueue stream=%p streamToken=%@ queue=%p status=%d
 [%s] %s:%d Failed to enqueue stream=%p queue=%p status=%d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCAudioPowerSpectrumMeter.m:%d: streamToken %d is registered to source %p with spectrum %p
 [%s] %s:%d error VCAudioPowerSpectrum already exists for streamToken[%d]
 [%s] %s:%d VCAudioPowerSpectrumMeter=%p
 [%s] %s:%d Failed to allocate max bitrate map
 [%s] %s:%d %@(%p) Failed to allocate max bitrate map
 [%s] %s:%d Failed to allocate actual bitrate map
 [%s] %s:%d %@(%p) Failed to allocate actual bitrate map
 [%s] %s:%d Switching from stream %@ to new stream %@, with opted-in stream %@
 [%s] %s:%d %@(%p) Switching from stream %@ to new stream %@, with opted-in stream %@
 [%s] %s:%d stream=%p
 [%s] %s:%d %@(%p) stream=%p
 [%s] %s:%d stream:%p
 [%s] %s:%d %@(%p) stream:%p
 [%s] %s:%d Actual Network Bitrate optedInStreamID=%@ has been updated from %d bps, to %d bps
 [%s] %s:%d %@(%p) Actual Network Bitrate optedInStreamID=%@ has been updated from %d bps, to %d bps
 [%s] %s:%d WSOLA is enabled, Sample Rate = %d, Warp Frame Size = %d, Extended Buffer Size = %d
 [%s] %s:%d WSOLA initialization failed
 [%s] %s:%d PSOLA is enabled, Sample Rate = %d, 
 [%s] %s:%d registered source[streamToken=%ld]
 [%s] %s:%d source[streamToken=%ld] already registered
 [%s] %s:%d unregistered source[streamToken=%ld]
 [%s] %s:%d source[streamToken=%ld] already unregistered
 [%s] %s:%d updateQoSReport qosReport=%@
 [%s] %s:%d source for streamToken=%ld not registered
 [%s] %s:%d VCRemoteVideoManager: new client initialized for streamToken=%u
 [%s] %s:%d VCQoSMonitorManager: ERROR QoS source does not exist for streamToken=%u
 [%s] %s:%d VCQoSMonitorManager: Terminate remoteVideo connection for streamToken=%u
 [%s] %s:%d VCMomentsMessenger: Context already exists for stream token: %u
 [%s] %s:%d VCMomentsMessenger: Context doesn't exists for stream token: %u
 [%s] %s:%d VCMomentsManager: New moments client. Context=0x%p
 [%s] %s:%d VCMomentsManager: Unregister moments client. Context=0x%p
 [%s] %s:%d AVCMomentsManager: clientStartRequest %s
 [%s] %s:%d AVCMomentsManager: clientEndRequest %s
 [%s] %s:%d AVCMomentsManager: clientRejctRequest %s
 [%s] %s:%d notifyClientsWithStreamToken streamClientList is nil
 [%s] %s:%d Failed to issue stillImage sandbox extension for moments URL: %@
 [%s] %s:%d Failed to issue movie sandbox extension for moments URL: %@
 [%s] %s:%d Created for debugging: %@
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipParse.c:%d: calloc(%d) failed
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipParse.c:%d: No Topline found in the message[%s]
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipParse.c:%d: No SIP Version found in Status-Line[%s]
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipParse.c:%d: Invalid SIP version in Status-Line[%s]
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipParse.c:%d: No status code found in Status-Line[%s]
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipParse.c:%d: Invalid status code(%d[%s])
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipParse.c:%d: No Method found in Request-Line[%s]
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipParse.c:%d: Extension Method is not supported[%s]
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipParse.c:%d: No RequestURI found in Request-Line[%s]
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipParse.c:%d: ParseSipUri failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipParse.c:%d: Invalid SIP version in Request-Line[%s]
 [%s] %s:%d VCMomentsCollector: dealloc for streamToken=%u
 [%s] %s:%d HandoverReport: Defaults settings force local iRATSuggestion to be %d
 [%s] %s:%d HandoverReport: dupe state: %d and enableDuplication %d.
 [%s] %s:%d HandoverReport: actively request for the latest iRAT recommendation from WRM.
 [%s] %s:%d HandoverReport: Receive and cache local iRAT suggestion to %s.
 [%s] %s:%d HandoverReport: Receive and cache remote iRAT suggestion to %s %s duplication
 [%s] %s:%d policy = %d out of valid range
 [%s] %s:%d Invalid clientID clientID=%d currentClientID=%d
 [%s] %s:%d NULL config
 [%s] %s:%d targetSynchronizer[%p] config.policy=%d dumpNamePrefix=%s
 [%s] %s:%d Previously registered client for streamGroupID=%s with currentClientID=%d
 [%s] %s:%d targetSynchronizer[%p] currentClientID=%d streamGroupID=%s
 [%s] %s:%d Succesfully registered Client ID currentClientID=%d streamGroupID=%s
 [%s] %s:%d Error in storing current size
 [%s] %s:%d Error while applying policy
 [%s] %s:%d targetSynchronizer[%p] clientID=%d currentTargetSize=%4.4f arrivalTime=%4.4f syncTargetSize=%4.4f
 [%s] %s:%d targetSynchronizer[%p] dumpNamePrefix=%s
 [%s] %s:%d Invalid Policy policy=%d
 [%s] %s:%d Ignoring old jitter values i=%d timeDiff=%4.2f
 [%s] %s:%d synchronizer[%p] _logDump=%p dumpIDString=%s
 [%s] %s:%d no config specified!
 [%s] %s:%d no delegate specified!
 [%s] %s:%d VCTransportStreamRunLoopVTPCreate failed %d
 [%s] %s:%d Network receive thread create failed (%d)
 [%s] %s:%d Out of order packets[%d,%d]
 [%s] %s:%d Sending RTCP PSFB FIR(%d)
 [%s] %s:%d Failed to read RTP packet
 [%s] %s:%d bCameraStatusBits = %x
 [%s] %s:%d Invalid header extension profile or CVO Extension ID
 [%s] %s:%d processVideoRTP called RTPRecvRTP packet (%d bytes)
 [%s] %s:%d Received payload of unknown type %d
 [%s] %s:%d Received zero length packet (seq:%d, ts:%d, payload:%d)
 [%s] %s:%d Could not get the local SSRC
 [%s] %s:%d %@(%p) Could not get the local SSRC
 [%s] %s:%d Received RTCP SR
 [%s] %s:%d VideoStreamReceiver (%p) updating MediaStreamSynchronizer (%p) with ntpTime=%.6f and rtpTimeStamp=%u
 [%s] %s:%d Received RTCP RR
 [%s] %s:%d Received RTCP SDES
 [%s] %s:%d Received RTCP PSFB:%d
 [%s] %s:%d currentTime=%.3f, lastFIRArrivalTime=%.3f, dRTT=%.3f
 [%s] %s:%d Ignoring too many FIR
 [%s] %s:%d Received TMMBR:%d, mantissa:%d, exponent:%d, overhead:%d adjusted TMMBN bitrate:%d
 [%s] %s:%d Received TMMBN:%d, mantissa:%d, exponent:%d, overhead:%d
 [%s] %s:%d Received unknown RTCP RTPFB:%d
 [%s] %s:%d Received RTCP FIR RFC 2032
 [%s] %s:%d Received RTCP NACK RFC 2032
 [%s] %s:%d Received RTCP APP
 [%s] %s:%d Received unknown RTCP packet type:%d
 [%s] %s:%d Failed to read format from sampleBuffer
 [%s] %s:%d CMSampleBufferCreate failed
 [%s] %s:%d CMBufferQueueEnqueue failed %d
 [%s] %s:%d Resetting VTDecompressionSession due to format change
 [%s] %s:%d timestamp:%08X count:%ld
 [%s] %s:%d CMSampleBufferGetDecodeTimeStamp is invalid timestamp:%u
 [%s] %s:%d CMBufferQueueDequeueAndRetain returned null!
 [%s] %s:%d CMSampleBufferCreateCopyWithNewTiming failed %d
 [%s] %s:%d @=@ Health: VideoStreamReceiver videoRxFrameRate=%f, videoRxBitrate=%d kbps
 [%s] %s:%d Rx RTCReporting:%s
 [%s] %s:%d Handling active connection change is not implemented for VCVSR
 [%s] %s:%d CMVideoFormatDescriptionCreateFromH264ParameterSets failed (%d)
 [%s] %s:%d frame decode error %d
VCSessionParticipantRemote [%s] %s:%d Failed jitter target synchronizer  dictionary!
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed jitter target synchronizer  dictionary!
VCSessionParticipantRemote [%s] %s:%d Failed to allocate positional info!
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to allocate positional info!
VCSessionParticipantRemote [%s] %s:%d Failed to copy local configuration!
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to copy local configuration!
VCSessionParticipantRemote [%s] %s:%d Nil remote participant data!
VCSessionParticipantRemote [%s] %s:%d %@(%p) Nil remote participant data!
VCSessionParticipantRemote [%s] %s:%d Failed to deserialize remote participant data!
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to deserialize remote participant data!
VCSessionParticipantRemote [%s] %s:%d Failed to process participant info!
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to process participant info!
VCSessionParticipantRemote [%s] %s:%d Failed to setup spatial audio! result=%08x
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to setup spatial audio! result=%08x
VCSessionParticipantRemote [%s] %s:%d Failed to setup stream groups
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to setup stream groups
VCSessionParticipantRemote [%s] %s:%d _isRedundancyRequested set to YES by forceFECRepairStream
VCSessionParticipantRemote [%s] %s:%d %@(%p) _isRedundancyRequested set to YES by forceFECRepairStream
VCSessionParticipantRemote [%s] %s:%d Participant init %@
VCSessionParticipantRemote [%s] %s:%d %@(%p) Participant init %@
VCSessionParticipantRemote [%s] %s:%d remoteParticipantType=%@
VCSessionParticipantRemote [%s] %s:%d %@(%p) remoteParticipantType=%@
VCSessionParticipantRemote [%s] %s:%d Failed to allocate channel index map
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to allocate channel index map
VCSessionParticipantRemote [%s] %s:%d spatialMetadata is NULL
VCSessionParticipantRemote [%s] %s:%d %@(%p) spatialMetadata is NULL
VCSessionParticipantRemote [%s] %s:%d Failed to allocate spatial metadata entry. status=%08x
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to allocate spatial metadata entry. status=%08x
VCSessionParticipantRemote [%s] %s:%d Failed to retrieve the channel index. status=%08x
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to retrieve the channel index. status=%08x
VCSessionParticipantRemote [%s] %s:%d created entry=%p with channelIndex=%u
VCSessionParticipantRemote [%s] %s:%d %@(%p) created entry=%p with channelIndex=%u
VCSessionParticipantRemote [%s] %s:%d Failed to store metadata entry for VCSessionMediaTypeMicrophone. status=%08x
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to store metadata entry for VCSessionMediaTypeMicrophone. status=%08x
VCSessionParticipantRemote [%s] %s:%d Failed to allocate media type key
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to allocate media type key
VCSessionParticipantRemote [%s] %s:%d Failed to get spatial audio source IDs
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to get spatial audio source IDs
VCSessionParticipantRemote [%s] %s:%d setAudioPaused=%d
VCSessionParticipantRemote [%s] %s:%d %@(%p) setAudioPaused=%d
VCSessionParticipantRemote [%s] %s:%d setRemoteAudioPaused=%d
VCSessionParticipantRemote [%s] %s:%d %@(%p) setRemoteAudioPaused=%d
VCSessionParticipantRemote [%s] %s:%d Ignoring setRemoteAudioPaused=%d
VCSessionParticipantRemote [%s] %s:%d %@(%p) Ignoring setRemoteAudioPaused=%d
VCSessionParticipantRemote [%s] %s:%d setRemoteAudioEnabled=%d
VCSessionParticipantRemote [%s] %s:%d %@(%p) setRemoteAudioEnabled=%d
VCSessionParticipantRemote [%s] %s:%d Ignoring setRemoteAudioEnabled:%d
VCSessionParticipantRemote [%s] %s:%d %@(%p) Ignoring setRemoteAudioEnabled:%d
VCSessionParticipantRemote [%s] %s:%d setRemoteVideoEnabled:%d
VCSessionParticipantRemote [%s] %s:%d %@(%p) setRemoteVideoEnabled:%d
VCSessionParticipantRemote [%s] %s:%d Ignoring setRemoteVideoEnabled:%d
VCSessionParticipantRemote [%s] %s:%d %@(%p) Ignoring setRemoteVideoEnabled:%d
VCSessionParticipantRemote [%s] %s:%d setRemoteScreenEnabled:%d
VCSessionParticipantRemote [%s] %s:%d %@(%p) setRemoteScreenEnabled:%d
VCSessionParticipantRemote [%s] %s:%d Screen state=%d changed, remoteSystemAudioPaused:%d
VCSessionParticipantRemote [%s] %s:%d %@(%p) Screen state=%d changed, remoteSystemAudioPaused:%d
VCSessionParticipantRemote [%s] %s:%d Ignoring setRemoteScreenEnabled:%d
VCSessionParticipantRemote [%s] %s:%d %@(%p) Ignoring setRemoteScreenEnabled:%d
VCSessionParticipantRemote [%s] %s:%d setRemoteSystemAudioPaused:%d
VCSessionParticipantRemote [%s] %s:%d %@(%p) setRemoteSystemAudioPaused:%d
VCSessionParticipantRemote [%s] %s:%d Ignoring setRemoteSystemAudioPaused:%d
VCSessionParticipantRemote [%s] %s:%d %@(%p) Ignoring setRemoteSystemAudioPaused:%d
VCSessionParticipantRemote [%s] %s:%d Failed to update mediaState=enabled for mediaType=%@
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to update mediaState=enabled for mediaType=%@
VCSessionParticipantRemote [%s] %s:%d Screen pause state is not supported
VCSessionParticipantRemote [%s] %s:%d Failed to update mediaState=paused for mediaType=%@
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to update mediaState=paused for mediaType=%@
VCSessionParticipantRemote [%s] %s:%d Failed to update mediaState=disabled for mediaType=%@
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to update mediaState=disabled for mediaType=%@
VCSessionParticipantRemote [%s] %s:%d mediaType=%@ not supported. Ignore set remote mediaState=%@
VCSessionParticipantRemote [%s] %s:%d %@(%p) mediaType=%@ not supported. Ignore set remote mediaState=%@
VCSessionParticipantRemote [%s] %s:%d Setting remote mediaState=%@ for mediaType=%@ _remoteMediaStates=%@
VCSessionParticipantRemote [%s] %s:%d %@(%p) Setting remote mediaState=%@ for mediaType=%@ _remoteMediaStates=%@
VCSessionParticipantRemote [%s] %s:%d Ignoring setRemoteState=%@ forMediaType=%@
VCSessionParticipantRemote [%s] %s:%d %@(%p) Ignoring setRemoteState=%@ forMediaType=%@
VCSessionParticipantRemote [%s] %s:%d setRemoteVideoPaused=%d
VCSessionParticipantRemote [%s] %s:%d %@(%p) setRemoteVideoPaused=%d
VCSessionParticipantRemote [%s] %s:%d Ignoring setRemoteVideoPaused=%d
VCSessionParticipantRemote [%s] %s:%d %@(%p) Ignoring setRemoteVideoPaused=%d
VCSessionParticipantRemote [%s] %s:%d Changing participant videoEnabled to %d
VCSessionParticipantRemote [%s] %s:%d %@(%p) Changing participant videoEnabled to %d
VCSessionParticipantRemote [%s] %s:%d Failed to update stream group with videoEnabled=%d
VCSessionParticipantRemote [%s] %s:%d [AVC SPATIAL AUDIO] Positional info not available: positionalInfo=%p _positionalInfo=%p
VCSessionParticipantRemote [%s] %s:%d Missing participant UUID
VCSessionParticipantRemote [%s] %s:%d %@(%p) Missing participant UUID
VCSessionParticipantRemote [%s] %s:%d Missing callInfo blob
VCSessionParticipantRemote [%s] %s:%d %@(%p) Missing callInfo blob
VCSessionParticipantRemote [%s] %s:%d Failed to retrieve the negotiation data
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to retrieve the negotiation data
VCSessionParticipantRemote [%s] %s:%d Media negotiation failed
VCSessionParticipantRemote [%s] %s:%d %@(%p) Media negotiation failed
VCSessionParticipantRemote [%s] %s:%d Failed to allocate callInfo blob
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to allocate callInfo blob
@:@ VCSessionParticipantRemote-info
VCSessionParticipantRemote [%s] %s:%d @:@ VCSessionParticipantRemote-info (%p) uuid=%@, %@
VCSessionParticipantRemote [%s] %s:%d Failed to get substring
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to get substring
VCSessionParticipantRemote [%s] %s:%d Failed to allocate formatter
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to allocate formatter
VCSessionParticipantRemote [%s] %s:%d Failed to get number from string
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to get number from string
VCSessionParticipantRemote [%s] %s:%d supportsNonZeroRegionOfInterestOrigin=%d remoteFrameworkVersion=%s
VCSessionParticipantRemote [%s] %s:%d %@(%p) supportsNonZeroRegionOfInterestOrigin=%d remoteFrameworkVersion=%s
VCSessionParticipantRemote [%s] %s:%d Web participants do not support switching from GFT to OneToOne
VCSessionParticipantRemote [%s] %s:%d %@(%p) Web participants do not support switching from GFT to OneToOne
VCSessionParticipantRemote [%s] %s:%d supportsGFTSwitchToOneToOne:[%d] remoteFrameworkVersion:[%s] 
VCSessionParticipantRemote [%s] %s:%d %@(%p) supportsGFTSwitchToOneToOne:[%d] remoteFrameworkVersion:[%s] 
VCSessionParticipantRemote [%s] %s:%d isParticipantPeace:[%d] numMatchesVersion:[%lu]
VCSessionParticipantRemote [%s] %s:%d %@(%p) isParticipantPeace:[%d] numMatchesVersion:[%lu]
VCSessionParticipantRemote [%s] %s:%d codecIndex=%@ out of bounds, codecConfigCount=%d
VCSessionParticipantRemote [%s] %s:%d No codec configurations for stream configuration!
VCSessionParticipantRemote [%s] %s:%d StreamGroupID=%s Lowest qualityIndex=%d streamID=%d
VCSessionParticipantRemote [%s] %s:%d %@(%p) StreamGroupID=%s Lowest qualityIndex=%d streamID=%d
VCSessionParticipantRemote [%s] %s:%d Failed to allocate allocator entry!
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to allocate allocator entry!
VCSessionParticipantRemote [%s] %s:%d No media entry found for stream ID: %@
VCSessionParticipantRemote [%s] %s:%d %@(%p) No media entry found for stream ID: %@
VCSessionParticipantRemote [%s] %s:%d Adding currently optedInVideoStreamID:%@ to allow seamless video stream transition. Force=%d, Bitrate %d -> %d
VCSessionParticipantRemote [%s] %s:%d %@(%p) Adding currently optedInVideoStreamID:%@ to allow seamless video stream transition. Force=%d, Bitrate %d -> %d
VCSessionParticipantRemote [%s] %s:%d Stream group '%s' (%d) doesn't exist!
VCSessionParticipantRemote [%s] %s:%d %@
VCSessionParticipantRemote [%s] %s:%d %@(%p) %@
VCSessionParticipantRemote [%s] %s:%d No compatible stream configuration! localAudioRules=%@ supportedAudioRules=%@
VCSessionParticipantRemote [%s] %s:%d %@(%p) No compatible stream configuration! localAudioRules=%@ supportedAudioRules=%@
VCSessionParticipantRemote [%s] %s:%d Fail configure participant
VCSessionParticipantRemote [%s] %s:%d %@(%p) Fail configure participant
VCSessionParticipantRemote [%s] %s:%d stream=%p, videoStreamDelegate=%p
VCSessionParticipantRemote [%s] %s:%d %@(%p) stream=%p, videoStreamDelegate=%p
VCSessionParticipantRemote [%s] %s:%d New redundancy percentage %d
VCSessionParticipantRemote [%s] %s:%d %@(%p) New redundancy percentage %d
VCSessionParticipantRemote [%s] %s:%d Dismissing video redundancy
VCSessionParticipantRemote [%s] %s:%d %@(%p) Dismissing video redundancy
VCSessionParticipantRemote [%s] %s:%d Requesting video redundancy
VCSessionParticipantRemote [%s] %s:%d %@(%p) Requesting video redundancy
VCSessionParticipantRemote [%s] %s:%d Invalid NW activity label:%d
VCSessionParticipantRemote [%s] %s:%d %@(%p) Invalid NW activity label:%d
VCSessionParticipantRemote [%s] %s:%d Failed to create event nwActivity
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to create event nwActivity
VCSessionParticipantRemote [%s] %s:%d Ignoring setVideoDegraded=%d with same value
VCSessionParticipantRemote [%s] %s:%d %@(%p) Ignoring setVideoDegraded=%d with same value
VCSessionParticipantRemote [%s] %s:%d videoDegraded=%d
VCSessionParticipantRemote [%s] %s:%d %@(%p) videoDegraded=%d
VCSessionParticipantRemote [%s] %s:%d Ignoring setRemoteMediaStalled=%d with same value
VCSessionParticipantRemote [%s] %s:%d %@(%p) Ignoring setRemoteMediaStalled=%d with same value
VCSessionParticipantRemote [%s] %s:%d useForcedNetworkBitrate=%d videoQuality=%d isRedundancyRequested=%d isLocalOnWiFi=%d isDeviceLargeScreen=%d isSharingEnabled=%d, shouldLimitCameraQualityForSharing=%d, maxNetworkBitrate=%d
VCSessionParticipantRemote [%s] %s:%d %@(%p) useForcedNetworkBitrate=%d videoQuality=%d isRedundancyRequested=%d isLocalOnWiFi=%d isDeviceLargeScreen=%d isSharingEnabled=%d, shouldLimitCameraQualityForSharing=%d, maxNetworkBitrate=%d
VCSessionParticipantRemote [%s] %s:%d cappedVideoQuality=%d self.videoQuality=%d
VCSessionParticipantRemote [%s] %s:%d %@(%p) cappedVideoQuality=%d self.videoQuality=%d
VCSessionParticipantRemote [%s] %s:%d _sharingEnabled=%d, self.isLocalOnWiFi=%d, shouldUseWifiQuality=%d, shouldLimitCameraQualityForPIP=%d
VCSessionParticipantRemote [%s] %s:%d appendStreamGroupsMediaEntries, count of streamGroups are cameraStreamGroupCount=%d, micrStreamGroupCount=%d, screenStreamGroupCount=%d, systemAudioStreamGroupCount=%d, captionsStreamGroupCount=%d 
VCSessionParticipantRemote [%s] %s:%d %@(%p) appendStreamGroupsMediaEntries, count of streamGroups are cameraStreamGroupCount=%d, micrStreamGroupCount=%d, screenStreamGroupCount=%d, systemAudioStreamGroupCount=%d, captionsStreamGroupCount=%d 
VCSessionParticipantRemote [%s] %s:%d No audio entry was added. addedMediaEntries=%@ micEntries=%@ micwEntries=%@
VCSessionParticipantRemote [%s] %s:%d %@(%p) No audio entry was added. addedMediaEntries=%@ micEntries=%@ micwEntries=%@
VCSessionParticipantRemote [%s] %s:%d mediaEntries %@: %@
VCSessionParticipantRemote [%s] %s:%d %@(%p) mediaEntries %@: %@
VCSessionParticipantRemote [%s] %s:%d videoEnabled:%d remoteVideoEnabled:%d videoPaused:%d remoteVideoPaused:%d isVisible:%d
VCSessionParticipantRemote [%s] %s:%d %@(%p) videoEnabled:%d remoteVideoEnabled:%d videoPaused:%d remoteVideoPaused:%d isVisible:%d
VCSessionParticipantRemote [%s] %s:%d Unable to allocate multiway config
VCSessionParticipantRemote [%s] %s:%d Failed to create featureStringsDict
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to create featureStringsDict
VCSessionParticipantRemote [%s] %s:%d setupStreamConfigWithCodecs failed
VCSessionParticipantRemote [%s] %s:%d %@(%p) setupStreamConfigWithCodecs failed
VCSessionParticipantRemote [%s] %s:%d Failed to setup the audio stream config
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to setup the audio stream config
VCSessionParticipantRemote [%s] %s:%d Failed to allocate stream configuration!
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to allocate stream configuration!
VCSessionParticipantRemote [%s] %s:%d Failed to setup the video stream config
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to setup the video stream config
VCSessionParticipantRemote [%s] %s:%d cipher suite setup failed
VCSessionParticipantRemote [%s] %s:%d Stream setup failed
VCSessionParticipantRemote [%s] %s:%d Could not retrieve a valid profileLevel string from profileLevelId=%lu with codecIndex=%@ codecConfigCount=%d
VCSessionParticipantRemote [%s] %s:%d Unable to allocate rate control config
VCSessionParticipantRemote [%s] %s:%d Failed to create media stream info
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to create media stream info
VCSessionParticipantRemote [%s] %s:%d Failed to create media stream config
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to create media stream config
VCSessionParticipantRemote [%s] %s:%d Failed to add one to one groupID=%s stream configuration to media stream info
VCSessionParticipantRemote [%s] %s:%d Failed to create media stream
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to create media stream
VCSessionParticipantRemote [%s] %s:%d invalid capabilies dictionary for media stream!
VCSessionParticipantRemote [%s] %s:%d %@(%p) invalid capabilies dictionary for media stream!
VCSessionParticipantRemote [%s] %s:%d Failed to retrieve channel index for mediaType=%d. status=%08x
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to retrieve channel index for mediaType=%d. status=%08x
VCSessionParticipantRemote [%s] %s:%d Failed to retrieve spatial audio source ID for mediaType=%d. status=%08x
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to retrieve spatial audio source ID for mediaType=%d. status=%08x
VCSessionParticipantRemote [%s] %s:%d Unexpected number of media types. Count=%lu. status=%08x
VCSessionParticipantRemote [%s] %s:%d %@(%p) Unexpected number of media types. Count=%lu. status=%08x
VCSessionParticipantRemote [%s] %s:%d Failed to retrieve spatial information for mediaType=%d. status=%08x
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to retrieve spatial information for mediaType=%d. status=%08x
VCSessionParticipantRemote [%s] %s:%d Failed to create stream group config
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to create stream group config
VCSessionParticipantRemote [%s] %s:%d Failed configure stream group config spatial info. status=%08x
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed configure stream group config spatial info. status=%08x
VCSessionParticipantRemote [%s] %s:%d Add one to one stream config to media stream info for groupID=%s
VCSessionParticipantRemote [%s] %s:%d No one to one streams to setup oneToOneModeSupported=%d
VCSessionParticipantRemote [%s] %s:%d One to one video streams not supported for groupID=%s
VCSessionParticipantRemote [%s] %s:%d One to one audio streams not supported for groupID=%s
VCSessionParticipantRemote [%s] %s:%d Added one to one stream config to %s streamGroup
VCSessionParticipantRemote [%s] %s:%d One to one groupID=%s stream configuration not available
VCSessionParticipantRemote [%s] %s:%d Failed to create receive media group
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to create receive media group
VCSessionParticipantRemote [%s] %s:%d Failed to setup bandwidth allocation table for video!
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to setup bandwidth allocation table for video!
VCSessionParticipantRemote [%s] %s:%d Failed to create video receive stream group
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to create video receive stream group
VCSessionParticipantRemote [%s] %s:%d Skipping streamGroupID=%s
VCSessionParticipantRemote [%s] %s:%d Failed to create Jitter Buffer Target Synchronizer remoteParticipant=%p
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to create Jitter Buffer Target Synchronizer remoteParticipant=%p
VCSessionParticipantRemote [%s] %s:%d New Target Synchronizer syncGroupID=%@ jbTargetEstimatorSynchronizer=%p
VCSessionParticipantRemote [%s] %s:%d %@(%p) New Target Synchronizer syncGroupID=%@ jbTargetEstimatorSynchronizer=%p
VCSessionParticipantRemote [%s] %s:%d There are no negotiated stream groups
VCSessionParticipantRemote [%s] %s:%d Siri config was negotiated, but device does not support playout
VCSessionParticipantRemote [%s] %s:%d Failed to setup stream group=%s
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to setup stream group=%s
VCSessionParticipantRemote [%s] %s:%d FaceZoom is disabled.
VCSessionParticipantRemote [%s] %s:%d %@(%p) FaceZoom is disabled.
VCSessionParticipantRemote [%s] %s:%d ML Enhance is disabled.
VCSessionParticipantRemote [%s] %s:%d %@(%p) ML Enhance is disabled.
VCSessionParticipantRemote [%s] %s:%d Start stream group state update timer
VCSessionParticipantRemote [%s] %s:%d %@(%p) Start stream group state update timer
VCSessionParticipantRemote [%s] %s:%d Failed to allocate fetch timer dispatch source!
VCSessionParticipantRemote [%s] %s:%d %@(%p) Failed to allocate fetch timer dispatch source!
VCSessionParticipantRemote [%s] %s:%d Fetching stream group state update
VCSessionParticipantRemote [%s] %s:%d %@(%p) Fetching stream group state update
VCSessionParticipantRemote [%s] %s:%d Cancel stream group state update timer
VCSessionParticipantRemote [%s] %s:%d %@(%p) Cancel stream group state update timer
VCSessionParticipantRemote [%s] %s:%d We are experiencing a video stall too soon after we switch video on. Ignoring... currentTime=%f lastVideoExpectationSwitch=%f diff=%f
VCSessionParticipantRemote [%s] %s:%d dictionary is NULL
VCSessionParticipantRemote [%s] %s:%d mediaType is NULL
VCSessionParticipantRemote [%s] %s:%d metadataEntry is NULL
VCSessionParticipantRemote [%s] %s:%d Failed to retrieve spatial audio source ID. status=%08x
VCSessionParticipantRemote [%s] %s:%d Failed to retrieve the media type
 [%s] %s:%d useIDSLinkSuggestionFeatureFlag=%d
 [%s] %s:%d IDS eventHandler called without event type
 [%s] %s:%d Forcing link suggestion using defaults. IDSLinkSuggestionKey=%d IDSLinkScoreKey=%d IDSLinkIPPreferenceKey=%d
 [%s] %s:%d %s, IDSDataChannelEventUsageError
 [%s] %s:%d Received unknown IDSDatagramChannelEvent %d
 [%s] %s:%d Remote device framework version IDS selected '%d'
 [%s] %s:%d Remote device framework version IDS is unknown
 [%s] %s:%d IDS destination not set
 [%s] %s:%d DatagramChannel start failed with error %x
 [%s] %s:%d onStart failed with error %x
 [%s] %s:%d Start MKM recovery for pariticipantIDs %@
 [%s] %s:%d Caching piggyback blob %p
 [%s] %s:%d Set piggyback blob %p on datagram channel %d
 [%s] %s:%d HandoverReport: default link updated to %d
 [%s] %s:%d Got 5G iRAT notification
 [%s] %s:%d [(VCTransportSession*)%p %s]:%d IDS channel encryption info
 [%s] %s:%d [(VCTransportSession*)%p %s]:%d IDS channel membership change info
 [%s] %s:%d Callee's accept delay %d milliseconds
 [%s] %s:%d IDS reporting blob must be a dictionary
 [%s] %s:%d Received IDS reportingBlob=%@
 [%s] %s:%d VCTransportSessionIDS: failed to send data with error=%@
 [%s] %s:%d connectionManager should not be nil
 [%s] %s:%d Finished sending %zd bytes with error=%@
 [%s] %s:%d Setting syncSourceDelegate (%p) for VideoReceiver (%p) for syncSource (%p)
 [%s] %s:%d media stream is nil
 [%s] %s:%d Failed to create the stream array for streamToken=%u
 [%s] %s:%d %@(%p) Failed to create the stream array for streamToken=%u
 [%s] %s:%d Failed to create the stream map for streamToken=%u
 [%s] %s:%d %@(%p) Failed to create the stream map for streamToken=%u
 [%s] %s:%d Queue configuration count is 0
 [%s] %s:%d Configuration queues pointer is NULL
 [%s] %s:%d Allocator out pointer is NULL
 [%s] %s:%d Allocator[%s] Failed to create allocator info: %s
 [%s] %s:%d Allocator[%s] was unable to find a relevant buffer queue. Requested size:%d
 [%s] %s:%d Allocator[%s] Failed to allocate memory. Size:%d
 [%s] %s:%d Unable to allocate buffer!
 [%s] %s:%d Allocator[%s] Memory reallocation failed. Size:%d
 [%s] %s:%d Failed to allocate allocator info
 [%s] %s:%d Failed to allocate allocator context
 [%s] %s:%d Settings entries not ordered by buffer size
 [%s] %s:%d Allocator=%s. %d buffer leak(s) not associated with a queue
 [%s] %s:%d Allocator=%s. %d buffer leak(s) detected queue with size[%zu]
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: SIPSetMessageDelegateForCallID: Invalid SIP Handle
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: SIPSetCellConditionChangeHandler: Invalid SIP Handle
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: fpAppCallback is NULL
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: Bad Transport Protocol(%d)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: calloc(%d) failed
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: CreateHandle failed
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: TPCreateHandle failed(%08X)
SIP [%s] %s:%d SIPListenOnPhysicalInterface failed with error %08X
SIP [%s] %s:%d SIPListenOnVirtualInterface failed with error %08X
SIP [%s] %s:%d invalid SIP transport type %d
SIP [%s] %s:%d SIPStopListenOnInterface(Physical) failed with error %08X
SIP [%s] %s:%d SIPStopListenOnInterface(Virtual) failed with error %08X
SIP [%s] %s:%d SIPConnect start...
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: Call SIPStartListen first.
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: DLCountActiveDialogs(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: CreateInvite failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: DLCreateHandle failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: TACreateHandle failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: TAStart failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: DLGetMsg failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: CreateCancel failed(%08X)
SIP [%s] %s:%d Call request cancelled before receiving any response
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: CreateAck failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: TPSend failed(%08X)
SIP [%s] %s:%d SIPConnect stop(%X)...
SIP [%s] %s:%d SIPCancel start...
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: Cannot find call ID(%d)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: DLPutMsg failed(%08X)
SIP [%s] %s:%d SIPCancel stop(%X)...
SIP [%s] %s:%d SIPHangup start with detailed code (%u), Reason:(%s)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: Call(%d) is in state %d
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: CreateBye failed(%08X)
SIP [%s] %s:%d SIPHangup stop(%X)...
SIP [%s] %s:%d SIPCloseCall start...
SIP [%s] %s:%d SIPCloseCall stop(%X)...
SIP [%s] %s:%d SIPSendMessage start...
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: CreateMessageInDialog failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: CallID(%d) is invalid
SIP [%s] %s:%d SIPSendMessage status(%d)...
SIP [%s] %s:%d HandoverReport: got %s back for candidateChangeMessage, status: %d
SIP [%s] %s:%d SIPSendMessage stop(%X)...
SIP [%s] %s:%d SIPSendMessageAll start...
SIP [%s] %s:%d SIPSendMessageAll stop(%X)...
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: pthread_create failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: Found no-match: Discard message(%08X)
SIP [%s] %s:%d SIPNewCallProc Thread start...
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: Invalid SIP Handle
SIP [%s] %s:%d SIPNewCallProc: SIPGETCALLEECALLID result == DENIED: Declining SIP INVITE
SIP [%s] %s:%d Found an existing dialog with Call ID %d. Closing.
SIP [%s] %s:%d Incoming call for Call ID %d
SIP [%s] %s:%d Primary connection is not ready, ignore the SIP INVITE for Call ID: %u
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: SendTAStatus failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: SendTAStatus cancelled
SIP [%s] %s:%d SIPNewCallProc Thread end(%d)...
SIP [%s] %s:%d |        |        |        |    --- iBodyLen %d
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: CreateGenericStatus failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: DLUpdate failed(%08X)
SIP [%s] %s:%d SIPCancelProc Thread start...
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: Cannot find a dialog to cancel, sending 481
SIP [%s] %s:%d SIPCancelProc Thread end(%d)...
SIP [%s] %s:%d SIPHangupProc Thread start...
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: Cannot find a dialog to hangup, sending 481
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: DLUnlock: failed to unlock.
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: DLUnlock: failed to unlock also.
SIP [%s] %s:%d SIPHangupProc Thread end(%d)...
SIP [%s] %s:%d SIPMessageProc Thread start...
SIP [%s] %s:%d SIP MESSAGE is missing a body - length = %d, body = %p
SIP [%s] %s:%d SIPMessageProc Thread end(%d)...
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SIP.c:%d: CreateStatus failed(%08X)
SIP [%s] %s:%d Invalid SIP packet multiplex mode
SIP [%s] %s:%d TPListenVirtualInterface failed(%08X)
SIP [%s] %s:%d SIPListenOnVirtualInterface succeeded
SIP [%s] %s:%d TPStopListen failed(%08X)
SIP [%s] %s:%d SIPStopListenOnInterface %s succeeded
SIP [%s] %s:%d TPListenOnPhysicalInterface failed(%08X)
SIP [%s] %s:%d TPListenOnPhysicalInterface on port %d
 [%s] %s:%d Failed to allocate the VCVideoCapture
 [%s] %s:%d %@(%p) Failed to allocate the VCVideoCapture
 [%s] %s:%d packetsExpectedForInterval:%u packetsLostForInterval:%u
 [%s] %s:%d %s:%d - Failed to receive TMMBN!
 [%s] %s:%d %s:%d received TMMBN:%u RTT:%.3f requested TMMBR:%u, operatingTierBitrate:%u
 [%s] %s:%d %s:%d TMMBR scheduled - new bitrate:%u
 [%s] %s:%d Failed to create Airplay screen rules!
 [%s] %s:%d Airplay Screen rules: No suitable H264 encode rules for this mac
 [%s] %s:%d Airplay Screen rules: No suitable H264 decode rules for this mac
 [%s] %s:%d Failed to create video rule for Airplay screen!
 [%s] %s:%d forwardSamplesFromIO: PacketThread_SendSampleBuffer failed
 [%s] %s:%d createPacketThreadWithIOBufferDuration: PacketThread_Create failed
 [%s] %s:%d Callback function not registered. CodecType[%s] SampleRate[%f]
 [%s] %s:%d initializing VCDisplayLink[%p]
 [%s] %s:%d nil displayLinkTickHandler
 [%s] %s:%d Failed to create CADisplayLink
 [%s] %s:%d dispatch_semaphore_create failed
 [%s] %s:%d VCRealTimeThread_Initialize failed
 [%s] %s:%d RefreshRate = %f
 [%s] %s:%d Display is not ready, waiting
 [%s] %s:%d Timed out waiting for display refresh rate update
 [%s] %s:%d Unexpected state %lu
 [%s] %s:%d VCRealTimeThread_Start failed
 [%s] %s:%d Timed out waiting for runLoop to run
 [%s] %s:%d dealloc VCDisplayLink[%p]
 [%s] %s:%d Not activated
 [%s] %s:%d CFRunLoopObserverCreate failed
 [%s] %s:%d Stopping VCDisplayLink thread
 [%s] %s:%d Refresh rate still 0, continue to wait
 [%s] %s:%d Unexpected acitivity %lu
 [%s] %s:%d Incorrect input for clientInProcess: Client delegate=%p, delegateQueue=%p
 [%s] %s:%d Incorrect input for clientOutOfProcess, delegate=%p, delegateQueue=%p
 [%s] %s:%d Failed to create queue
 [%s] %s:%d Will run %s process
 [%s] %s:%d %@(%p) Will run %s process
 [%s] %s:%d Could not get the shared pool allocator for the remoteQueue
 [%s] %s:%d Failed to enqueue attributes
 [%s] %s:%d Client Terminated remote queue connection destroying remote queue
 [%s] %s:%d Failed to create xpcCommandQueue
 [%s] %s:%d Could not create XPC dictionary from sample buffer
 [%s] %s:%d Client run out of process, should not do delegate callback
 [%s] %s:%d Nil bandwidth configurations!
 [%s] %s:%d Nil filtered bandwidth configurations!
 [%s] %s:%d Failed to initialize bandwidth configurations
 [%s] %s:%d Failed to allocate the bandwidth configuration for 2G
 [%s] %s:%d Failed to allocate the bandwidth configuration for 3G
 [%s] %s:%d Failed to allocate the bandwidth configuration for LTE
 [%s] %s:%d Failed to allocate the bandwidth configuration for 5G
 [%s] %s:%d Failed to allocate the bandwidth configuration for Wifi
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipHdr.c:%d: No '%c' in the header[%s]
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipHdr.c:%d: No header field name[%s]
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipHdr.c:%d: CreateReasonHdr: calloc(%d) failed
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipHdr.c:%d: malloc(%d) failed
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipHdr.c:%d: Unsupported header[%s]
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipHdr.c:%d: calloc(%d) failed
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipHdr.c:%d: No '>' in SIP URI[%s]
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipHdr.c:%d: Multiple Event packages in Event header[%s]
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipHdr.c:%d: ParseReasonHdr calloc(%d) failed
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipHdr.c:%d: Invalid protocol version[%s] in Via
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipHdr.c:%d: No ']' after '[' for an IPv6 address[%s]
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipHdr.c:%d: More Via than the maximum %d
SIP [%s] %s:%d Destination buffer size '%d' is too small to handle replacement '%s'->'%s'
SIP [%s] %s:%d Error Replacing Keyword - MaxSize:(%d) < (p - pszStr):(%ld)
SIP [%s] %s:%d Relay external addr [%s] type %u channel %x
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipMsg.c:%d: CreateCallIDHdr failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipMsg.c:%d: CreateContactHdr failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipMsg.c:%d: CreateContentLengthHdr failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipMsg.c:%d: CreateContentTypeHdr failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipMsg.c:%d: CreateCSeqHdr failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipMsg.c:%d: CreateFromHdr failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipMsg.c:%d: CreateMaxForwardsHdr failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipMsg.c:%d: CreateToHdr failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipMsg.c:%d: CreateViaHdr failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipMsg.c:%d: CreateUserAgentHdr failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipMsg.c:%d: malloc(%d) failed
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipMsg.c:%d: CopySipHeader failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipMsg.c:%d: DLGetData failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipMsg.c:%d: CreateReasonHdr failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipMsg.c:%d: CreateAcceptHdr failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipMsg.c:%d: CreateAllowHdr failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipMsg.c:%d: CreateAllowEventsHdr failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipMsg.c:%d: CreateExpiresHdr failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipMsg.c:%d: CreateMinExpires failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipMsg.c:%d: Invalid SIP Message(%d)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipMsg.c:%d: # of Via exceeded the maximum %d < %d+%d
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipMsg.c:%d: calloc(%d) failed
SIP [%s] %s:%d SIPCompressCallback: already compressed.
SIP [%s] %s:%d SIPCompressCallback: too small to compress %d
SIP [%s] %s:%d SIPCompressCallback: Not worth compressing %d --> %d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipUri.c:%d: No colon after sip scheme[%s]
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipUri.c:%d: No ']' after '[' for an IPv6 address[%s]
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/SipUri.c:%d: Unknown URI parameter[%s]
 [%s] %s:%d Failed to decode utterance number
 [%s] %s:%d Failed to decode is final
 [%s] %s:%d Failed to decode segments
 [%s] %s:%d failed to create Summer handle!
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transaction.c:%d: calloc(%d) failed
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transaction.c:%d: MQPut failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transaction.c:%d: CreateCancel failed(%08X)
SIP [%s] %s:%d TAInviteClientProc:%s
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transaction.c:%d: pthread_create failed(%08X)
SIP [%s] %s:%d TASetRTT: %d ms
SIP [%s] %s:%d TAInviteClientProc Thread start...
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transaction.c:%d: Invalid Transaction Handle
SIP [%s] %s:%d Save this ToTag: %s
SIP [%s] %s:%d TAInviteClientProc Thread end(%X)...
SIP [%s] %s:%d TANonInviteClientProc Thread start...
SIP [%s] %s:%d TANonInviteClientProc Thread end(%X)...
SIP [%s] %s:%d TAInviteServerProc Thread start...
SIP [%s] %s:%d TAInviteServerProc Thread end(%X)...
SIP [%s] %s:%d TANonInviteServerProc Thread start...
SIP [%s] %s:%d TANonInviteServerProc Thread end(%X)...
 [%s] %s:%d mode=%d, _notifyDelegateVideoAttributeChanges=%d _videoReceiverHandle=0x%x videoReceiver=%p
 [%s] %s:%d %@(%p) mode=%d, _notifyDelegateVideoAttributeChanges=%d _videoReceiverHandle=0x%x videoReceiver=%p
 [%s] %s:%d init video receiver 0x%x with an invalid rtp handle
 [%s] %s:%d init video receiver 0x%x and rateAdaptation %p with rtp handle 0x%x
 [%s] %s:%d New mode=%d
 [%s] %s:%d %@(%p) New mode=%d
 [%s] %s:%d mode=%d, streamCount=%d, streamIndex=%d
 [%s] %s:%d %@(%p) mode=%d, streamCount=%d, streamIndex=%d
 [%s] %s:%d containsAspectRatios=%d, _remoteSupportsExpectedAspectRatio=%d
 [%s] %s:%d %@(%p) containsAspectRatios=%d, _remoteSupportsExpectedAspectRatio=%d
 [%s] %s:%d featureListString=%s, AR=%d/%d, XR=%d/%d
 [%s] %s:%d %@(%p) featureListString=%s, AR=%d/%d, XR=%d/%d
 [%s] %s:%d dealloc called
 [%s] %s:%d %@(%p) dealloc called
 [%s] %s:%d Failed to create VCDisplayLink
 [%s] %s:%d Failed to activate VCDisplayLink
 [%s] %s:%d participantUUID=%@ remoteVideoAttributes=%@ visibleRect=%s
 [%s] %s:%d frameTime=%f
 [%s] %s:%d %@(%p) frameTime=%f
 [%s] %s:%d Ignoring key frame request key frame too soon for the same streamID:%d
 [%s] %s:%d %@(%p) Ignoring key frame request key frame too soon for the same streamID:%d
 [%s] %s:%d Requesting Key Frame with streamID:%d FIRType:%d
 [%s] %s:%d %@(%p) Requesting Key Frame with streamID:%d FIRType:%d
 [%s] %s:%d Failed to create the XPC queue[%@]
 [%s] %s:%d Failed to create the StreamInput queue[%@]
 [%s] %s:%d Failed to allocate stream inputs dictionary
 [%s] %s:%d streamInputID=%@
 [%s] %s:%d Failed to create format description from XPC arguments
 [%s] %s:%d Stream input ID %@ already exists!
 [%s] %s:%d streamInputID=%@ mediaType=%s
 [%s] %s:%d Failed to create the video stream input for streamInputID=%@
 [%s] %s:%d Failed to create the audio stream input for streamInputID=%@
 [%s] %s:%d Unsupported streamInputID=%@ mediaType=%s
 [%s] %s:%d Failed to allocate the return dictionary for streamInputID=%@ mediaType=%s
 [%s] %s:%d kVCDefaultEnableFigRemoteQueueForAVCStreamInputOutput disabled
 [%s] %s:%d Failed to allocate the result dictionary
 [%s] %s:%d Failed to allocate NSNumber for pid
 [%s] %s:%d Terminate request received with nil context
 [%s] %s:%d Terminate streamInputID=%@
 [%s] %s:%d Terminate request received with invalid context
 [%s] %s:%d Client process ID argument is missing
 [%s] %s:%d Client process with pid=%@ died. Cleaning up streamInputID=%@
 [%s] %s:%d nil VCInputStream
 [%s] %s:%d received NULL CMSampleBuffer
 [%s] %s:%d Invalid resolution %dx%d
 [%s] %s:%d VTCompressionSessionCreate failed (%d)
 [%s] %s:%d Failed to set profile level property to %@ with error status=%d
 [%s] %s:%d not implemented!
 [%s] %s:%d pEnc is NULL
 [%s] %s:%d bitrateBps:%d, dataSizeBytes:%d, duration:%f
 [%s] %s:%d VTCompressionSession set average bitrate property failed with %d
 [%s] %s:%d VTCompressionSession set data rate limits property failed with %d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCVideoEncoder_VT.c:%d: Encoder callback is NULL
 [%s] %s:%d VTCompressionSessionEncodeFrame error: %d, the system may run into a low memory state
 [%s] %s:%d VTCompressionSessionEncodeFrame error: %d
 [%s] %s:%d VTCompressionSession is not initialized
 [%s] %s:%d useMediaDrivenDuplication from feature-flag setting=%d
 [%s] %s:%d Received video stall update videoStallTimeTotal=%.2f
 [%s] %s:%d Registered MediaHealthStatisticsHandlerIndex=%d
 [%s] %s:%d HandoverReport: VCConnectionHealthMonitor stopped
 [%s] %s:%d HandoverReport: stop dupe by %s.
 [%s] %s:%d HandoverReport: VCConnectionHealthMonitor is running
 [%s] %s:%d HandoverReport: _preferRelayOverP2PEnabled=%d preferRelayOverP2PEnabled=%d _dropLinkRecommendation=%d
 [%s] %s:%d HandoverReport: _preferRelayOverP2PEnabled=%d _preferRelayOverP2PReason=%d _dropLinkRecommendation=%d
 [%s] %s:%d oneToOneMode=%s
 [%s] %s:%d oneToOneScreenEnabled=%s
 [%s] %s:%d HandoverReport: startConnectionHealthMonitoring=%d
 [%s] %s:%d Re-setting connection stat timers to now=%f
 [%s] %s:%d @=@ Health: VCConnectionManager [%p] interfaceName=%@ offChannelRatio=%2.3f btCoex=%d frequencyBand=%d qualityScoreDelayRx=%d qualityScoreDelayTx=%d qualityScoreLossRx=%d qualityScoreLossTx=%d qualityScoreChannel=%d
 [%s] %s:%d HandoverReport: setting connection selection version %d
 [%s] %s:%d local? %d, audio paused? %d
 [%s] %s:%d HandoverReport: Reset _duplicationPending state if we stop duplication.
 [%s] %s:%d HandoverReport: enable duplication (%d) already applied.
 [%s] %s:%d HandoverReport: can't enable duplication when there is no secondary connection.
 [%s] %s:%d HandoverReport: %s duplication and active probing on links
 [%s] %s:%d HandoverReport: set _isPreWarmStateEnabled state to %d. Do %s duplicate the RTCP packets. %s active probing on links
 [%s] %s:%d HandoverReport: set remote pre-warm state to %d. %s active probing on links
 [%s] %s:%d HandoverReport: Set isRemoteMediaQualityDegraded=%d
 [%s] %s:%d Checking for cached WRM notification _isWRMNotificationPending=%d isDuplicationAllowed=%d
 [%s] %s:%d HandoverReport: Processing iRAT notification (cached) WRM suggestion=%d isDuplicationAllowedForMediaDegraded=%d isRemoteMediaQualityDegraded=%d currentTargetBitrate=%d cellBitrateCap=%d bitrateCapDelta=%d
 [%s] %s:%d wrmNotification cannot be nil
 [%s] %s:%d %@(%p) wrmNotification cannot be nil
 [%s] %s:%d HandoverReport: Ignoring iRAT notification because the reason for recommendation is WiFi link going down
 [%s] %s:%d HandoverReport: Pending iRAT notification isDuplicationAllowedForMediaDegraded=%d isRemoteMediaQualityDegraded=%d currentTargetBitrate=%d cellBitrateCap=%d bitrateCapDelta=%d
 [%s] %s:%d HandoverReport: Processing iRAT notification isDuplicationAllowedForMediaDegraded=%d isRemoteMediaQualityDegraded=%d currentTargetBitrate=%d cellBitrateCap=%d bitrateCapDelta=%d
 [%s] %s:%d idsParticipantID %@ is already part of mediaDegradedHistories!
 [%s] %s:%d idsParticipantID %@ is not yet added to mediaDegradedHistories!
 [%s] %s:%d Aggregated stall time duration=%.2f Media degraded threshold=%.2f
 [%s] %s:%d idsParticipantID %@ is not part of mediaDegradedHistories!
 [%s] %s:%d HandoverReport: Ignoring media health stats update
 [%s] %s:%d Invalid bucketsToSum %d, defaulting to %d
 [%s] %s:%d HandoverReport: Per media criteria, duplication is %s!
 [%s] %s:%d Callback executed with context being nil
 [%s] %s:%d VCNWConnectionNofitication timestamp=%llu
@:@ VCConnectionManager-primaryConnectionChanged
 [%s] %s:%d @:@ VCConnectionManager-primaryConnectionChanged type=%s, localInterface=%s, remoteInterface=%s, uplinkBitrateCap=%u, downlinkBitrateCap=%u, callID=%u, connectionType=%s, addressType=%s
 [%s] %s:%d VCConnectionManager: Delegate didn't implement primaryConnectionChanged
 [%s] %s:%d HandoverReport: force to disable remote preferred interface inference
 [%s] %s:%d HandoverReport: connection %s %s optimal primary connection
 [%s] %s:%d HandoverReport: connection %s %s optimal secondary connection
 [%s] %s:%d VCConnectionManager: unrecognized connection quality: %d
 [%s] %s:%d Primary connection should not be nil
 [%s] %s:%d p2p link cannot be used as primary
 [%s] %s:%d %@(%p) p2p link cannot be used as primary
 [%s] %s:%d p2p link cannot be used for duplication
 [%s] %s:%d %@(%p) p2p link cannot be used for duplication
 [%s] %s:%d HandoverReport: Defaults settings force local cell tech enabled to be %s
 [%s] %s:%d HandoverReport: Defaults settings force local cell tech disabled
 [%s] %s:%d Link probing capability version on local: %d
 [%s] %s:%d Link probing capability version on remote: %d
 [%s] %s:%d Prevent displaying cell as primary interface as directed by storebag settings
 [%s] %s:%d %@(%p) Prevent displaying cell as primary interface as directed by storebag settings
 [%s] %s:%d callID = %u, network status bar request, useCellPrimayInterface = %d
 [%s] %s:%d LastReceivedPacketTime has not been set isLocalConnection=%d
 [%s] %s:%d Using noPacketThreshold=%.2f noPacketInterval:%.2f noRemoteDuplicationThresholdFast:%.2f
 [%s] %s:%d Receive and cache internal suggestion to duplication, %s packets for %.6f seconds.
 [%s] %s:%d HandoverReport: start dupe by %s.
 [%s] %s:%d HandoverReport: Drop and re-select the next candidate as primary connection, since no packet flowing for %f seconds
 [%s] %s:%d LastReceivedPacketOnPrimaryTime has not been set isLocalConnection=%d
 [%s] %s:%d HandoverReport: %s primary connection has no packet (could already have been received over secondary). Max interval: %f
 [%s] %s:%d Wrong type of statistics message received by VCConnectionManager
 [%s] %s:%d IDS Link recommendation ignored
 [%s] %s:%d HandoverReport: reportLinkPreferSuggestion=%d linkPreferSuggestion=%d linkConfidenceScore=%d linkIPPreference=%d
 [%s] %s:%d HandoverReport: Check if primary connection needs to be updated - isCurrentPrimaryUsingRelay=%d isPreferRelayOverP2PEnabled=%d
 [%s] %s:%d Applying link flags='%08x' for %@
 [%s] %s:%d Applying remote link flags='%08x' for %@
 [%s] %s:%d Update WifiAssist Available = %s
 [%s] %s:%d connectionManager must not be NULL
 [%s] %s:%d VTP refCount=%d
 [%s] %s:%d Failed to allocate memory for WRM info
 [%s] %s:%d Failed to allocate memory for WRM context
 [%s] %s:%d VCNetworkFeedbackController already started
 [%s] %s:%d VCNetworkFeedbackController already stopped
 [%s] %s:%d Request for the latest iRAT notification by resubscribing again
 [%s] %s:%d Get iRAT notification for %u, %u, 0x%llx, %s, (%llu, %llu)
 [%s] %s:%d WRM: Get iRAT Coex Metrics %s
 [%s] %s:%d wcmSetCallConfig callback.
 [%s] %s:%d wcmGetCallConfig callback.
 [%s] %s:%d WRMClient setup start.
 [%s] %s:%d WRMClient cleanup start.
 [%s] %s:%d HandoverReport: Update cellBitrateCap for pending iRAT notification purpose: %d
 [%s] %s:%d PSOLA Expansion samplesToDecode %d Samples Added %d
 [%s] %s:%d PSOLA Compress samplesToDecode %d samples removed %d
 [%s] %s:%d Not enough samples to update PSOLA history buffer availableSamples=%d
 [%s] %s:%d Audio client is trying to start but session parameters have not been set! (client PID=%d)
 [%s] %s:%d Timeout occured while waiting for audio IO start!
 [%s] %s:%d %@(%p) Timeout occured while waiting for audio IO start!
 [%s] %s:%d VCAudioClient=%p
 [%s] %s:%d Timeout occured while waiting for audio IO stop!
 [%s] %s:%d %@(%p) Timeout occured while waiting for audio IO stop!
 [%s] %s:%d Failed to create IO event queues
 [%s] %s:%d Failed to setDeviceRole
 [%s] %s:%d %@(%p) Failed to setDeviceRole
 [%s] %s:%d Failed to configureAudioStreams
 [%s] %s:%d %@(%p) Failed to configureAudioStreams
 [%s] %s:%d stop audio stream failed
 [%s] %s:%d %@(%p) stop audio stream failed
 [%s] %s:%d configuring audio stream failed error=%@
 [%s] %s:%d %@(%p) configuring audio stream failed error=%@
 [%s] %s:%d start audio stream failed
 [%s] %s:%d %@(%p) start audio stream failed
 [%s] %s:%d Send active voice only set to %d for stream=%@
 [%s] %s:%d %@(%p) Send active voice only set to %d for stream=%@
 [%s] %s:%d StreamGroup=%s streamIDs=%@ mediaBitrates=%@ for targetBitrate=%d
 [%s] %s:%d %@(%p) StreamGroup=%s streamIDs=%@ mediaBitrates=%@ for targetBitrate=%d
 [%s] %s:%d CMSimpleQueueEnqueue Full! Dropping audio stream update event with %d active streams
 [%s] %s:%d %@(%p) CMSimpleQueueEnqueue Full! Dropping audio stream update event with %d active streams
 [%s] %s:%d Failed to add sync destination
 [%s] %s:%d Failed to remove sync destination
 [%s] %s:%d Redundancy controller callback for inactive redundancy controller was ignored. Redundancy controller=%@ Current controller=%@
 [%s] %s:%d %@(%p) Redundancy controller callback for inactive redundancy controller was ignored. Redundancy controller=%@ Current controller=%@
 [%s] %s:%d Enqueue new audio redundancyPercentage=%d
 [%s] %s:%d %@(%p) Enqueue new audio redundancyPercentage=%d
 [%s] %s:%d CMSimpleQueueEnqueue Full, audioIO.state=%d
 [%s] %s:%d %@(%p) CMSimpleQueueEnqueue Full, audioIO.state=%d
 [%s] %s:%d Failed to create audio event queue
 [%s] %s:%d %@(%p) Failed to create audio event queue
 [%s] %s:%d Failed to create audio stream update event pool
 [%s] %s:%d Failed to create audioRedundancyChangeQueue
 [%s] %s:%d %@(%p) Failed to create audioRedundancyChangeQueue
 [%s] %s:%d Failed to create audio redundancy event pool
 [%s] %s:%d Failed to create the dynamic ducker
 [%s] %s:%d Failed to start the dynamic ducker
 [%s] %s:%d Redundancy controller is created
 [%s] %s:%d %@(%p) Redundancy controller is created
 [%s] %s:%d %@(%p) %@
 [%s] %s:%d Remote side is on Peace [%d]. Adding subscription to low Quality audio %@
 [%s] %s:%d RTCP report not found!!
 [%s] %s:%d %@(%p) RTCP report not found!!
 [%s] %s:%d RTCP report found!!
 [%s] %s:%d %@(%p) RTCP report found!!
 [%s] %s:%d Received custom report (%d) from %x with %d reception reports
 [%s] %s:%d %@(%p) Received custom report (%d) from %x with %d reception reports
 [%s] %s:%d audio no-op no MKM
 [%s] %s:%d CMSampleBufferCreate failed %d
 [%s] %s:%d Failed to allocate the block buffer. Status:%d
 [%s] %s:%d Failed to append the block buffer. Status:%d
 [%s] %s:%d CVPixelBufferCreate failed %d
 [%s] %s:%d VTPixelTransferSessionCreate failed %d
 [%s] %s:%d VTPixelTransferSessionTransferImage failed %d
 [%s] %s:%d Failed to create color space
 [%s] %s:%d CGDataProviderCreateWithData failed %d
 [%s] %s:%d source image is NULL
 [%s] %s:%d Created image type:%d data with (%zux%zu) %@
 [%s] %s:%d Invalid resolution: %d
 [%s] %s:%d Original %fx%f [x=%3f,y=%3f,w=%3f,h=%3f], Cropped %fx%f [x=%3f,y=%3f,w=%3f,h=%3f]
 [%s] %s:%d Invalid image type %d
 [%s] %s:%d Unsupported video payload type %d
 [%s] %s:%d Failed to get device width
 [%s] %s:%d Failed to get device height
 [%s] %s:%d Failed to get native pixel count
 [%s] %s:%d Failed to get device maxScreenEncodingSizeSupported
 [%s] %s:%d Computed max screen pixel count cannot be zero
SIP [%s] %s:%d >>>>>  ARPL packet is UNENCRYPTED in TPSendUDPPacketARPL (in Transport) <<<<<
SIP [%s] %s:%d >>>>>  ARPL packet pbMsg is NULL in TPSendUDPPacketARPL(in Transport) <<<<<
SIP [%s] %s:%d >>>>>  ARPL packet iLen==0 in TPSendUDPPacketARPL(in Transport) <<<<<
SIP [%s] %s:%d ((((( In TPCreateHandle with g_iHandleRefCount = %d and g_hActualTPHandle = %p )))))
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: calloc(%d) failed
SIP [%s] %s:%d ((((( In TPCreateHandle [A] phTP = %p and *phTP = %ld )))))
SIP [%s] %s:%d ((((( In TPCreateHandle [B] phTP = %p and *phTP = %ld )))))
SIP [%s] %s:%d ((((( In TPCreateHandle [C] phTP = %p and *phTP = %ld )))))
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: ICECreateHandle failed(%08X)
SIP [%s] %s:%d ((((( In TPCreateHandle AREA 1 with g_iHandleRefCount = %d and g_hActualTPHandle = %p )))))
SIP [%s] %s:%d ((((( Leaving TPCreateHandle successfully with g_iHandleRefCount = %d and g_hActualTPHandle = %p )))))
SIP [%s] %s:%d ((((( In TPCloseHandle with g_iHandleRefCount = %d and g_hActualTPHandle = %p )))))
SIP [%s] %s:%d Unmatched call to TPCreateHandle, TPCloseHandle called with non-positive ref count
SIP [%s] %s:%d TPGetLoopbackIP:: found loopbackIP = %s
SIP [%s] %s:%d TPGetLoopbackIP:: error loopbackIP = %s
SIP [%s] %s:%d Stop listening on IDS interface vfd %d
SIP [%s] %s:%d Stop listening on %s(%s) vfd %d
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: SipMsg doesn't have a Via header
SIP [%s] %s:%d Stop heartbeat to %s
SIP [%s] %s:%d Setting ice timeout to iceTimeout = %f
SIP [%s] %s:%d Keep listening on %s
SIP [%s] %s:%d Adding [%s] to list
SIP [%s] %s:%d ICEAddOneInterface failed %08x
SIP [%s] %s:%d Keep listening on virtual interface (vfd %d)
SIP [%s] %s:%d Interface '%s' is not in the routing table but still valid. Keeping it
SIP [%s] %s:%d Stop listening on %s
SIP [%s] %s:%d TPUpdateInterfaceList: %u
SIP [%s] %s:%d TPUpdateInterfaceList:%d valid interfaces found.
SIP [%s] %s:%d Setting ice timeout to %f
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: Remote candidate data is invalid (data:%p len:%d).
SIP [%s] %s:%d HandoverReport: TPProcessRemoteInterfaceChangeMessage, remote candidate list already updated
SIP [%s] %s:%d >>>>>  ARPL packet is UNENCRYPTED in sendudppacket(in Transport) <<<<<
SIP [%s] %s:%d >>>>>  ARPL packet pbMsg is NULL in sendudppacket(in Transport) <<<<<
SIP [%s] %s:%d >>>>>  ARPL packet iLen==0 in sendudppacket(in Transport) <<<<<
SIP [%s] %s:%d Retry SIP packet using default result key.
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: Retry SIP packet using default result key failed (%08lX).
SIP [%s] %s:%d >>>>>  ARPL packet is UNENCRYPTED in SendUDPPacketForCList(in Transport) <<<<<
SIP [%s] %s:%d SendUDPPacketForCList: SENDING PACKET FROM %s:%d
SIP [%s] %s:%d SendUDPPacketForCList: SENDING PACKET TO %s:%d
SIP [%s] %s:%d SendUDPPacketForCList: skip mismatched interface: IPv4
SIP [%s] %s:%d DTLS: entering (dwCallID == %08X)...
SIP [%s] %s:%d DTLS:: (dwCallID == %08X) found clist local IP == %s
SIP [%s] %s:%d DTLS:: (dwRemoteCallID == %08X) dtls to remote == %s
SIP [%s] %s:%d DTLS: initialize and perform handshake...
SIP [%s] %s:%d DTLS_Create failed with %d
SIP [%s] %s:%d dtls: ARPLSessionCreate(p2pID == %08X) ...
SIP [%s] %s:%d dtls: ARPLSessionCreate failed with %d
SIP [%s] %s:%d DTLS: handshake result == %08X ...
SIP [%s] %s:%d DTLS: error description [%s]
SIP [%s] %s:%d DTLS: exiting (hResult == %08X)...
SIP [%s] %s:%d Create socket for IDS interface failed with error %08X
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: socket failed(%08X)
SIP [%s] %s:%d Start listening on IDS interface vfd %d
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: pthread_create(TPRecvProc) failed(%08X)
SIP [%s] %s:%d TPRecvProc(%p) started
SIP [%s] %s:%d TPRecvProc already started
SIP [%s] %s:%d Transport(UDP) Thread start...
SIP [%s] %s:%d TPRecvProc: UNEXPECTED! Breaking the loop due to invalid pTP->sReset
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: select failed(%08X)
SIP [%s] %s:%d Transport(UDP) Thread end(%08X)...
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: recvfrom(%d) returned 0: empty message
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: recvfrom(%d) failed(%08X)
SIP [%s] %s:%d >>>> SKIPPING INCOMING ARPL PACKET! <!bEncrypted>  (in Transport) <<<<<
SIP [%s] %s:%d >>>> SKIPPING INCOMING ARPL PACKET! <!DTLS_IsConnected(pCList->hDTLS)>  (in Transport) <<<<<
SIP [%s] %s:%d RecvMessageUDP: ignore unrecognized OFT packet for callID %08X
SIP [%s] %s:%d RecvMessageUDP: localCallID == %08X remoteCallID == %08X
SIP [%s] %s:%d RecvMessageUDP: pass message SIP
SIP [%s] %s:%d Updating heartbeat from %s to %s
SIP [%s] %s:%d >>>>> Received incoming ARPL data with szMessage=[%s] and length=[%d] <NEED TO DO SOMETHING HERE> (in Transport) <<<<<
SIP [%s] %s:%d calloc(%d) failed(%08X)
SIP [%s] %s:%d [[%s
%s]] from %s
SIP [%s] %s:%d [[%s
<binary>]] from %s
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: ParseMessage failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: INVITE doesn't have Contact header.
SIP [%s] %s:%d doesn't have valid source destination info
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: CONTENT-LENGTH less than 0 (%d).
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: CONTENT-LENGTH incorrect (%d/%d).
SIP [%s] %s:%d Use relay external addr [%s], relay %u, channel %x
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: Via header missing or no field value
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: CSeq header missing
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: CONTENT-TYPE null when body not empty.
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: Decompress failed: %d, %d, (%08X)
SIP [%s] %s:%d Uncompressed SDP(%d): [%s] from size %d
SIP [%s] %s:%d Uncompress binary body from %d to %d
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: malloc(%d) failed
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: CallSIPMessageCallback failed(%08X)
SIP [%s] %s:%d SIPMessage callback no via/cseq failed, result = %x
SIP [%s] %s:%d SIPMessage transaction callback request failed, result = %x
SIP [%s] %s:%d SIPMessage transaction callback response failed, result = %x
SIP [%s] %s:%d SIPMessage callback failed, result = %x
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: No network interface found.
SIP [%s] %s:%d %d interfaces found.
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: ICESetEnableLoopbackInterface failed(%08X)
SIP [%s] %s:%d %d valid interfaces found. (pTP->pCList == NULL) = %d
SIP [%s] %s:%d Same Local and Destination IP:Port(%s)
SIP [%s] %s:%d ( )( )( )( )( ) SIP BODY IS BINARY? (%d)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: Compress Binary SDP failed(%08X)
SIP [%s] %s:%d RTP using %s and %s as hints
SIP [%s] %s:%d Overriding Video RTCP port from %u to %u
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: Compress INVITE/200 SDP failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: Compress other SIP SDP failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: ConstructSipMsg failed(%08X)
SIP [%s] %s:%d Send to %s [%s]
SIP [%s] %s:%d Compress binary body from %d to %d
SIP [%s] %s:%d Compress SDP(%d): [%s] to size %d
SIP [%s] %s:%d ( )( )( )( )( ) TP BINARY BODY (%d + %d)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: CreateSocketAndBind failed in TPAddIPPortToCLIST = (%08x)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: ICEAddOneInterface failed in TPAddIPPortToCLIST = (%08x)
SIP [%s] %s:%d RemoveCListForCallID for a callid [%d == %d]
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: getaddrinfo failed(%08X)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: getaddrinfo returned NULL
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: bind on %d failed(%d)
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: getsockname failed(%08X)
SIP [%s] %s:%d Start listening on %s(%s) sock %d
SIP [%s] %s:%d CreateSocketAndBind: Unable to set delegatedUUID(%s) for socket %s with error %d)
SIP [%s] %s:%d CreateSocketAndBind: Set delegatedUUID(%s) for socket %s)
SIP [%s] %s:%d Invalid transport packet multiplex mode
SIP [%s] %s:%d HandoverReport: needUpdateRemoteCandidateList didn't find matched callID
SIP [%s] %s:%d TPConnectedCallback: pCCResult == %08X, fUseRelay = %d ...
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: TPConnectedCallback: CheckInHandle failed in the dispatched block
SIP [%s] %s:%d TPConnectedCallback: theCCResult == %08X, ifDidRecvPacket = %d fUseRelay = %d ...
SIP [%s] %s:%d TPConnectedCallback:: result#%d
SIP [%s] %s:%d TPConnectedCallback:: local = %s
SIP [%s] %s:%d TPConnectedCallback:: remote = %s
SIP [%s] %s:%d TPConnectedCallback:: src = %s
SIP [%s] %s:%d TPConnectedCallback:: dst = %s
SIP [%s] %s:%d TPConnectedCallback:: remoteSrc = %s
SIP [%s] %s:%d TPConnectedCallback:: relay ext = %s
SIP [%s] %s:%d TPConnectedCallback:: bIfRelay = %d wRelayServType = %d wChannelNumber = %04x
SIP [%s] %s:%d TPConnectedCallback:: cell_tech (local:%d, remote:%d)
SIP [%s] %s:%d TPConnectedCallback:: dwCallID = %08X iRemoteCallID = %08X
SIP [%s] %s:%d TPConnectedCallback:: upgrade = %d primary = %d, replace = %d
SIP [%s] %s:%d TPProcessICENomination Callback: callID[%08X] local[%s] dst[%s].
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: TPNewCandidatesCallback: CheckInHandle failed in the dispatched block
SIP [%s] %s:%d TPNewCandidatesCallback: blob size: %d
SIP [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/Transport.c:%d: TPRemoveIPPort: CheckInHandle failed in the dispatched block
AVCRC [%s] %s:%d Releasing baseband congestion detector:%p
 [%s] %s:%d Unsupported media type:%s
 [%s] %s:%d compare method returning NSOrderedSame -- sort result will be indeterministic
 [%s] %s:%d result=%d (%@ vs. %@)
 [%s] %s:%d CMDerivedObjectCreate failed %x
 [%s] %s:%d Failed to create transport stream array
 [%s] %s:%d [%p]
 [%s] %s:%d Invalid transportStream type
 [%s] %s:%d transportStream %p was already added to run loop
 [%s] %s:%d NULL storage
 [%s] %s:%d Failed to create reset socket %d
 [%s] %s:%d Could not get VFD %d from tranportStream %p
 [%s] %s:%d VFD returned by tranportStream %p is NULL
 [%s] %s:%d transportStream %p being removed was not added to run loop
 [%s] %s:%d Negative timeout
 [%s] %s:%d RunLoop %p wait for receive was cancelled
 [%s] %s:%d RunLoop %p wait for receive timed out
 [%s] %s:%d Select failed %d
 [%s] %s:%d Perform receive failed for tranportStream %p
 [%s] %s:%d Reset socket not set up
 [%s] %s:%d %@(%p) Failed to allocate stream token to enable map
 [%s] %s:%d Failed to allocate stream token to table entry map
 [%s] %s:%d %@(%p) Failed to allocate stream token to table entry map
 [%s] %s:%d Failed to allocate bandwith allocation map
 [%s] %s:%d Quality Index collision for index=%u existing streamGroupID=%s other streamGroupID=%s
 [%s] %s:%d Failed to allocate media bitrate array
 [%s] %s:%d %@(%p) Failed to allocate media bitrate array
 [%s] %s:%d StreamToken=%ld is disabled
 [%s] %s:%d %@(%p) StreamToken=%ld is disabled
 [%s] %s:%d Calculate bitrate for streamGroup=%s
 [%s] %s:%d %@(%p) Calculate bitrate for streamGroup=%s
 [%s] %s:%d Unknown cipherSuite=%d, defaulting to %d 
 [%s] %s:%d PreCalc: dwROC=%u (wSeq=%u)
 [%s] %s:%d Tried to decrement ROC to -1, prevented this from happening
 [%s] %s:%d PreCalc: use dwROC=%u (wSeq=%u)
 [%s] %s:%d failed with error %d
 [%s] %s:%d SRTPInfo not initialized properly. Call SRTPPrepareEncryption first
 [%s] %s:%d invalid SRTP exchange info provided
 [%s] %s:%d create crypto set failed
 [%s] %s:%d Configuring Crypto Set
 [%s] %s:%d update encryption failed
 [%s] %s:%d SRTPUpdateEncryptionInfo: attempt to set an invalid media key index
 [%s] %s:%d SRTPDeriveMediaKeyInfo: media key/salt derivation failed
 [%s] %s:%d SRTPEncryptData: In=[%s]
 [%s] %s:%d SRTPEncData: MKI=%s, ROC==%08lX, SEQ==%u):
 [%s] %s:%d CCCryptorReset failed with error %d
 [%s] %s:%d CCCryptorUpdate failed with error %d
 [%s] %s:%d SRTPEncryptData: Out=[%s]
 [%s] %s:%d SRTPEnc: MKI=%s, SSRC==%08lX, SEQ==%u):
 [%s] %s:%d Max number of SRTP packets reached
 [%s] %s:%d Max number of SRTCP packets reached
 [%s] %s:%d SRTP header doesn't fit in packet. Packet length=%d
 [%s] %s:%d SRTP authentication tag does not fix in packet. dataLength=%d, MKIActualSize=%d, sessionAuthenticationTagLength=%d, maxBufferLength=%d
 [%s] %s:%d Invalid MediaKeyIndex. Stop sending the packet
 [%s] %s:%d Authentication tag doesn't match. Authentication failed
 [%s] %s:%d No extra buffer space to add authentication tag
 [%s] %s:%d SRTCP packet too short
 [%s] %s:%d Oversize member key length (limit=%d, given=%d)
 [%s] %s:%d Oversize member salt length (limit=%d, given=%d)
 [%s] %s:%d Canceld SRTP encryption
 [%s] %s:%d Invalid operating mode %d, falling back to kSRTPOperatingModeRFCCompliant
 [%s] %s:%d   counters: [%s], ROC=%d
 [%s] %s:%d Authentication is enabled but the tag size is invalid. Size=%d
 [%s] %s:%d TCPTUNNEL: timer is deleted.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/TCPTunnelClient.m:%d: TCPTUNNEL: Request timed out after %5.2f sec.
 [%s] %s:%d TCPTUNNEL: timer is set.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/TCPTunnelClient.m:%d: Unknown types: %d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/TCPTunnelClient.m:%d: TCPTUNNEL: socket error, tear down the connection.
 [%s] %s:%d TCPTUNNEL: wcb resume
 [%s] %s:%d TCPTUNNEL: put %d on write buffer.
 [%s] %s:%d TCPTUNNEL: shift %d, put %d on write buffer.
 [%s] %s:%d TCPTUNNEL: wcb: %d
 [%s] %s:%d TCPTUNNEL: socket is successfully connected %d.
 [%s] %s:%d TCPTUNNEL: We got a TCP connection!
 [%s] %s:%d TCPTUNNEL: Start SSL handshake
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/TCPTunnelClient.m:%d: TCPTUNNEL: Socket error, tear down the connection.
 [%s] %s:%d TCPTUNNEL: reset write buffer
 [%s] %s:%d TCPTUNNEL: wcb suspend
 [%s] %s:%d Data length is too large: %lu
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/TCPTunnelClient.m:%d: TCPTUNNEL: Error parsing TURN message (%08X)
 [%s] %s:%d TCPTUNNEL: %d, Received TURN message: %x, %x
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/TCPTunnelClient.m:%d: TCPTUNNEL: ProcessAllocateResponse failed
 [%s] %s:%d TCPTUNNEL: send saved ChannelBinding request now.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/TCPTunnelClient.m:%d: TCPTUNNEL: Got error response for Allocate request.
 [%s] %s:%d TCPTUNNEL: refreshing now.
 [%s] %s:%d TCPTUNNEL: refreshing after %5.2f seconds
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/TCPTunnelClient.m:%d: TCPTUNNEL: Got error response for ChannelBinding request.
 [%s] %s:%d TCPTUNNEL: Got TURN terminating response.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/TCPTunnelClient.m:%d: TCPTUNNEL: Got error response for Refresh request.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/TCPTunnelClient.m:%d: TCPTUNNEL: throw away TURN Message(%x).
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/TCPTunnelClient.m:%d: TCPTUNNEL: TCP/SSL socket is closed while accepting packets
 [%s] %s:%d TCPTUNNEL: SSL enabled channel has set up.
 [%s] %s:%d TCPTUNNEL: send Allocate request in queue now.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/TCPTunnelClient.m:%d: TCPTUNNEL: handshake error: %d, %d
 [%s] %s:%d TCPTUNNEL: STARTING! %s
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/TCPTunnelClient.m:%d: TCPTUNNEL: Only Carrier interface available.
 [%s] %s:%d TCPTUNNEL: interface %s is behind NAT64 with prefix %s
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/TCPTunnelClient.m:%d: TCPTUNNEL: can't create socket
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/TCPTunnelClient.m:%d: TCPTUNNEL: no port to bind to.
 [%s] %s:%d TCPTUNNEL: local IP %s, local port: %d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/TCPTunnelClient.m:%d: TCPTUNNEL: can't reserver buffer pool
 [%s] %s:%d TCPTUNNEL: attempt a TCP connection to %s
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/TCPTunnelClient.m:%d: TCPTUNNEL: can't create write source.
 [%s] %s:%d TCPTUNNEL: connect is done immediately %d.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/TCPTunnelClient.m:%d: TCPTUNNEL: We can't connect: %d, %d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/TCPTunnelClient.m:%d: TCPTUNNEL: can't create read source.
 [%s] %s:%d TCPTUNNEL: TCP tunnel released.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/TCPTunnelClient.m:%d: sendAllocateMsg: MakeAllocateRequest error: %x
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/TCPTunnelClient.m:%d: sendAllocateMsg: STUNEncodeMessage error: %x
 [%s] %s:%d sendAllocateMsg: save the message for set-up in progress.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/TCPTunnelClient.m:%d: sendChannelBindingMsg: MakeChannelBindRequest error: %x
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/TCPTunnelClient.m:%d: sendChannelBindingMsg: STUNEncodeMessage error: %x
 [%s] %s:%d sendChannelBindingMsgWithDict: save message for set-up in progress.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/TCPTunnelClient.m:%d: sendRefreshMsg: STUNEncodeMessage error: %x
 [%s] %s:%d TCPTUNNEL: TCP channel is unbound.
 [%s] %s:%d TCPTUNNEL: closeTunnelSocket %d
 [%s] %s:%d TCPTUNNEL: Canceling the writeSource.
 [%s] %s:%d TCPTUNNEL: Canceling the readSource.
 [%s] %s:%d TCPTUNNEL: buffer pool limit reached.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/TCPTunnelClient.m:%d: TCPTUNNEL: malloc error for a new node
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/TCPTunnelClient.m:%d: TCPTUNNEL: malloc error for buffer %d
 [%s] %s:%d TCPTUNNEL: add new buffer to the pool %d
 [%s] %s:%d TCPTUNNEL: replace %d with %d.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/TCPTunnelClient.m:%d: TCPTUNNEL: not found in buffer pool %p
 [%s] %s:%d TCPTUNNEL: %s
VCCallSession [%s] %s:%d deviceRole = %d, transportType = %d, isGKVoiceChat = %d
VCCallSession [%s] %s:%d %@(%p) deviceRole = %d, transportType = %d, isGKVoiceChat = %d
VCCallSession [%s] %s:%d Using the following path - traditional 1:1
VCCallSession [%s] %s:%d RTCReporting: can't configure the reporting agent.
VCCallSession [%s] %s:%d Load switch wifiAssistStatusBarEnabled %d
VCCallSession [%s] %s:%d RTCReporting: reporting dictionary %s
VCCallSession [%s] %s:%d setOperatingMode - startVideo failed with error %s
VCCallSession [%s] %s:%d setOperatingMode - stop failed with error %s
VCCallSession [%s] %s:%d updateWithLastDecodedFrameTime returned YES. lastDecodedFrametime=%f isVideoQualityDegraded=%d
VCCallSession [%s] %s:%d Found enableBBNote NO. Disable baseband notification
VCCallSession [%s] %s:%d Found enableRRx %d for AFRC.
VCCallSession [%s] %s:%d 
 VCCallSession:UpdateMTU remote is %s. Lowering local MTU: %d -> %d 
VCCallSession [%s] %s:%d VCCallSession:UpdateMTU MTU: %d -> %d Cellular: %d/%d 
VCCallSession [%s] %s:%d VCCallSession: handleCellTechChange (%s to %s) 
VCCallSession [%s] %s:%d VCCallSession: received unsupported cell tech change to %d
VCCallSession [%s] %s:%d Remote is legacy device: setting local bandwidth estimation cap: %d 
VCCallSession [%s] %s:%d VCCallSession: Local CellTech has changed %s, max bitrate %u, max remote bitrate %u
VCCallSession [%s] %s:%d VCCallSession: Local cell tech change ignored, current connection type %d
VCCallSession [%s] %s:%d VCCallSession: Remote CellTech has changed %s, max bitrate %u, max remote bitrate %u
VCCallSession [%s] %s:%d HandoverReport: transmitter updated feature list string to %s, for payload: %ld
VCCallSession [%s] %s:%d NO matched feature list string for selected payload %d
VCCallSession [%s] %s:%d Setting remote screen aspect ratio numbers %d/%d,%d/%d (%sPR), remote expects to receive %d/%d,%d/%d
VCCallSession [%s] %s:%d Could not find matching video codec for interface %d
VCCallSession [%s] %s:%d HandoverReport: schedule a pending primary connection change, old primary connection: %s
VCCallSession [%s] %s:%d invalid connection change state %ld
VCCallSession [%s] %s:%d HandoverReport: handle a pending primary connection change
VCCallSession [%s] %s:%d HandoverReport: audio/video setup done. Update connection change state to ready
VCCallSession [%s] %s:%d VCCallSession: Stalling lastReceivedPacketTime %f currentTime %f
VCCallSession [%s] %s:%d VCCallSession: Unstalling lastReceivedPacketTime %f currentTime %f packetCount %d
VCCallSession [%s] %s:%d Entering short media stall lastReceivedPacketTime=%f, currentTime=%f
VCCallSession [%s] %s:%d Leaving short media stall lastReceivedPacketTime=%f, currentTime=%f, packetCount=%d
VCCallSession [%s] %s:%d Falling back to lastReceivedPacketTimestamp=%f for packetType=%d
VCCallSession [%s] %s:%d Falling back to currentTime=%f for packetType=%d
VCCallSession [%s] %s:%d Disconnecting due to no remote packet currentTime=%f lastPacketTime=%f lastReceivedPacketTimestamp=%f noRemotePacketsTimeout=%f packetType=%d
VCCallSession [%s] %s:%d roundTripTime = %f, packetLossRate = %f
VCCallSession [%s] %s:%d PLR too high:Disconnecting
VCCallSession [%s] %s:%d RTT too high:Disconnecting
VCCallSession [%s] %s:%d perfTimers=%s, callID = %u
VCCallSession [%s] %s:%d %@(%p) perfTimers=%s, callID = %u
VCCallSession [%s] %s:%d Cancelling Timeout Source
VCCallSession [%s] %s:%d Connection timeout occurred, disconnecting
VCCallSession [%s] %s:%d startConnectionWithParticipantID: callID = %d, isCaller = %d, self.deviceRole = %d, caps = %s, inviteData = %s
VCCallSession [%s] %s:%d Failed to process response media blob
VCCallSession [%s] %s:%d Starting secure control channel
VCCallSession [%s] %s:%d Failed to add participant to Control Channel list of active participants
VCCallSession [%s] %s:%d Starting SIP control channel
VCCallSession [%s] %s:%d Media control info FEC feedback version is '%d'
VCCallSession [%s] %s:%d SKEState_SetBlob(0) failed with error %d
VCCallSession [%s] %s:%d Reporting not available (no backends)
VCCallSession [%s] %s:%d Received transportSession event %d while call is not ongoing. Skipping
VCCallSession [%s] %s:%d Received invalid transportSession event(%d)
VCCallSession [%s] %s:%d Received piggyback blob %p
VCCallSession [%s] %s:%d %s %s
VCCallSession [%s] %s:%d Load switch preferRelayOverP2P %d
VCCallSession [%s] %s:%d Load switch fastMediaDuplicationEnabled %d
VCCallSession [%s] %s:%d Load switch duplicateImportantPktsEnabled %d
VCCallSession [%s] %s:%d Load switch lowNetworkModeEnabled %d
VCCallSession [%s] %s:%d Load switch duplicationEnhancementEnabled %d
VCCallSession [%s] %s:%d Load switch iRATDuplicationEnabled %d
VCCallSession [%s] %s:%d WRM: vcWRMClient setup start.
VCCallSession [%s] %s:%d Load switch iRATMetricsEnabled %d
VCCallSession [%s] %s:%d Load switch iRATRtpEnabled %d
VCCallSession [%s] %s:%d Load switch preWarmCellEnabled %d
VCCallSession [%s] %s:%d Load switch wrmRSSIThresholdEnabled %d
VCCallSession [%s] %s:%d WRM: vcWRMClient cleanup start.
VCCallSession [%s] %s:%d HandoverReport: Ignoring iRAT notification because the reason for recommendation is WiFi link going down
VCCallSession [%s] %s:%d HandoverReport: Pending iRAT notification until video quality degrade
VCCallSession [%s] %s:%d WRM: Get iRAT notification for %u, %u, 0x%llx, %s, (%llu, %llu)
VCCallSession [%s] %s:%d WRM: Get iRAT Coex Metrics %s
VCCallSession [%s] %s:%d WRM: Send iRAT status update for %u, %u
VCCallSession [%s] %s:%d WRM: Request for the latest iRAT notification by resubscribing again
VCCallSession [%s] %s:%d Failed to create audio rules for media negotiator
VCCallSession [%s] %s:%d Failed to create audio configuration for media negotiator
VCCallSession [%s] %s:%d Failed to create local audio configuration for media negotiator
VCCallSession [%s] %s:%d Failed to create local feature string for media negotiator
VCCallSession [%s] %s:%d Failed to create local configuration for the media negotiator
VCCallSession [%s] %s:%d Load switch before negotiation secureMessagingRequired %d
VCCallSession [%s] %s:%d Load switch before negotiation disableSIPEnabled %d
VCCallSession [%s] %s:%d Failed to create media negotiator
VCCallSession [%s] %s:%d Failed to create the invite media blob
VCCallSession [%s] %s:%d Remote caller doesn't use media pre-negotiation
VCCallSession [%s] %s:%d Failed to process media blob
VCCallSession [%s] %s:%d Failed to create the response media blob
VCCallSession [%s] %s:%d Operating mode is INVALID
VCCallSession [%s] %s:%d Failed to generate the media blob
VCCallSession [%s] %s:%d falls back to SDP. remoteInviteData = %@, remoteMediaBlob = %@
VCCallSession [%s] %s:%d Local callInfoBlob = %s
VCCallSession [%s] %s:%d Both connectionBlob and callInfoBlob are nil. No callID and client version
VCCallSession [%s] %s:%d Remote callInfoBlob = %s localCallID = %d
VCCallSession [%s] %s:%d setPauseAudio (was %d is %d state is %d)
VCCallSession [%s] %s:%d setPauseAudio early return due to state == %d
VCCallSession [%s] %s:%d Baseband codec not set propertly
VCCallSession [%s] %s:%d isVideoEnabled=%d
VCCallSession [%s] %s:%d failed to start video with error %@
VCCallSession [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCCallSession.m:%d: processRelayRequestResponseDict bailing because (![self isCallOngoing] == %d)
VCCallSession [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCCallSession.m:%d: processRelayUpdateDict bailing because (![self isCallOngoing] == %d)
VCCallSession [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCCallSession.m:%d: processRelayUpdateDict: remoteCallInfo is nil.
VCCallSession [%s] %s:%d STUB:processCancelRelayRequest:%s, %d
VCCallSession [%s] %s:%d >>>>> Sending ARPL data <%s> with callID %d (in VCCallSession) <<<<<
VCCallSession [%s] %s:%d Attempt to send data with zero size. Ignoring...
VCCallSession [%s] %s:%d sendReliableMessageAndWait result was %s, participantID=%d, data=%@
VCCallSession [%s] %s:%d framerate is not set.
VCCallSession [%s] %s:%d setSessionConferenceState, %d
VCCallSession [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCCallSession.m:%d: setSessionConferenceState: invalid state
VCCallSession [%s] %s:%d setSessionConferenceVisualRectangle: (%g, %g), %gx%g
VCCallSession [%s] %s:%d PeerProtocolVersion set to %d
VCCallSession [%s] %s:%d connectionEstablishedCallback: initialize remote cell bitrate cap to %u, cell tech %d, operation mode %d
VCCallSession [%s] %s:%d VCCallSession: sipConnectThreadProc
VCCallSession [%s] %s:%d VCSecureDataChannel already exists. Releasing it and creating a new one. 
VCCallSession [%s] %s:%d Setting up secureDataChannel with dataChannelSharedSecret %@
VCCallSession [%s] %s:%d VCSecureDataChannel init failed with error %s
VCCallSession [%s] %s:%d WCM: wcmSetCallConfig callback.
VCCallSession [%s] %s:%d WCM: wcmGetCallConfig callback.
VCCallSession [%s] %s:%d SIPINCOMINGCONFERENCE state == GKVoiceChatServiceStateCalleeAttemptingToConnect = %d, %d
VCCallSession [%s] %s:%d SIPINCOMING: WE ARE BUSY BUSY (state = %d)
VCCallSession [%s] %s:%d SIPCONNECTEDCONFERENCE
VCCallSession [%s] %s:%d SIPCONNECTEDCONFERENCE: use DTLS-SRTP is enabled...
VCCallSession [%s] %s:%d SIPCONNECTEDCONFERENCE: GKVoiceChatServiceSRTPEncryptionSetupError... (dtls-srtp)
VCCallSession [%s] %s:%d SIPCONNECTEDCONFERENCE: DTLS-SRTP is not enabled...
VCCallSession [%s] %s:%d SIPCONNECTEDCONFERENCE: Need to wait for SRTP to init... (video)
VCCallSession [%s] %s:%d SIPCONNECTEDCONFERENCE: GKVoiceChatServiceSRTPEncryptionSetupError... (video)
VCCallSession [%s] %s:%d SIPCONNECTEDCONFERENCE: Need to wait for SRTP to init... (audio)
VCCallSession [%s] %s:%d SIPCONNECTEDCONFERENCE: end wait SRTP @ %.3f seconds (%08X)
VCCallSession [%s] %s:%d SIPCONNECTEDCONFERENCE: GKVoiceChatServiceSRTPEncryptionSetupError... (audio)
VCCallSession [%s] %s:%d sipCallback(SIPGENERICREPORTLOG):%s
VCCallSession [%s] %s:%d sipCallback: message %d requires no action.
VCCallSession [%s] %s:%d MediaCallback: call (%08X) is not using relay for connection %d
VCCallSession [%s] %s:%d MediaCallback: call (%08X) is upgraded from relay to P2P, relay will be torn down in handlePrimaryConnChange.
VCCallSession [%s] %s:%d MediaCallback: call (%08X) started with relay for connection %d
VCCallSession [%s] %s:%d MediaCallback: srtp key update is not supported for call (%08X).
VCCallSession [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCCallSession.m:%d: MediaCallback: notificaiton %d unknown, no action.
VCCallSession [%s] %s:%d startConnectionWithParticipantID: idsSocket and destination are invalid
VCCallSession [%s] %s:%d SKEState_CopyBlobSync(1) failed with error %d
VCCallSession [%s] %s:%d configureLegacyTransportWithInviteInfo failed: remote blob %s
VCCallSession [%s] %s:%d SKEState_Create failed with error %d
VCCallSession [%s] %s:%d SKEState_CopyBlobSync(0) failed with error %d
VCCallSession [%s] %s:%d setupEncryption
VCCallSession [%s] %s:%d noRemotePacketsTimeout = %f
VCCallSession [%s] %s:%d networkConditionsTimeoutInSeconds = %f
VCCallSession [%s] %s:%d NQ = %.3f, RTT = %.3f, TxBW = %ub/sec, PLR = %.2f%%, PLaMR = %.2f%%, signal = [%d %d %d]
VCCallSession [%s] %s:%d DTLS force set to (%d) for call (%d): 
VCCallSession [%s] %s:%d NO DTLS force set for call (%d).  We are ignoring the capabilities passed.
VCCallSession [%s] %s:%d setupPeerInfo isAudioPausedToStart = %d, isVideoPausedToStart = %d
VCCallSession [%s] %s:%d VCCallSession: notifying delegate didStop %d:%d (%d, %d)
VCCallSession [%s] %s:%d Reporting excessive cellular data usage: signalingExcessiveCellularRxBytes %llu, signalingExcessiveCellularTxBytes %llu, mediaExcessiveCellularRxBytes %llu, mediaExcessiveCellularTxBytes %llu budgetConsumingCellularTxBytes:%llu budgetConsumingCellularRxBytes:%llu
VCCallSession [%s] %s:%d We are tearing down our heartbeat!
VCCallSession [%s] %s:%d sendTimings:Key = %d, value = %d
VCCallSession [%s] %s:%d SipCallbackNotification SIPMESSAGE...%s
VCCallSession [%s] %s:%d SipCallbackNotification SKEComplete...
VCCallSession [%s] %s:%d SipCallbackNotification SKECheckRemoteCert...
VCCallSession [%s] %s:%d SKECheckRemoteCert: peerCN = '%s'
VCCallSession [%s] %s:%d Common names: %s
VCCallSession [%s] %s:%d SKECheckRemoteCert: specified peer common name not found...
VCCallSession [%s] %s:%d SipCallbackNotification SKECheckRemoteCert valid == %d...
VCCallSession [%s] %s:%d SipCallbackNotification SKEReportError...
VCCallSession [%s] %s:%d The call failed.
VCCallSession [%s] %s:%d inviteeICEResultTimer:ready to go, %d
VCCallSession [%s] %s:%d createSDP failed
VCCallSession [%s] %s:%d localMaxBandwidth: %u remoteMaxBandwidth: %u answerBandwidth: %u
VCCallSession [%s] %s:%d Baseband codec information form negotiated settings: basebandCodecType:%s, sampleRate:%u
VCCallSession [%s] %s:%d mediaControlInfoVersion = %d
VCCallSession [%s] %s:%d Failed to allocate payload list
VCCallSession [%s] %s:%d Silence Suppression using DTX payload[%d] enabled
VCCallSession [%s] %s:%d Forcing Red to be disabled
VCCallSession [%s] %s:%d Apply negotiated redPayload settings. RedPayloadType:%d, isRedEnabled:%d
VCCallSession [%s] %s:%d Failed to set audio remote RTP id
VCCallSession [%s] %s:%d Failed to apply audio settings!!! error = (%s)
VCCallSession [%s] %s:%d Video settings not found in pre-negotiated settings
VCCallSession [%s] %s:%d No valid video rules found for the current connection settings
VCCallSession [%s] %s:%d Failed to apply video settings!!! error = (%s)
VCCallSession [%s] %s:%d 
VCCallSession [%s] %s:%d failed: Couldn't create the rtp handles!!! error = (%s)
VCCallSession [%s] %s:%d failed: Couldn't prepare SRTP for the rtp handles!!! error = (%s)
VCCallSession [%s] %s:%d failed: Couldn't create the media queue handle! error = (%s)
VCCallSession [%s] %s:%d Callee: setMediaQueueStreamSettings returned NO
VCCallSession [%s] %s:%d HandoverReport: handover is %ssupported.
VCCallSession [%s] %s:%d Failed to start rate controller
VCCallSession [%s] %s:%d HandoverReport: iRAT recommendation is enabled.
VCCallSession [%s] %s:%d failed: Couldn't create the audio rtp handles!!! error = (%s)
VCCallSession [%s] %s:%d Failed to start media queue
VCCallSession [%s] %s:%d Failed to start video
VCCallSession [%s] %s:%d Failed to start media!!! error = (%s)
VCCallSession [%s] %s:%d input SDP was NULL
VCCallSession [%s] %s:%d Couldn't create the rtp handles!!! error = (%s)
VCCallSession [%s] %s:%d Couldn't prepare SRTP for the rtp handles!!! error = (%s)
VCCallSession [%s] %s:%d Couldn't create the media queue handle! error = (%s)
VCCallSession [%s] %s:%d Callee: negotiatePayloadWithError returned NO with error %s
VCCallSession [%s] %s:%d Callee: setRTPPayloadWithError returned NO with error %s
VCCallSession [%s] %s:%d imageAttrForAnswer returned an error
VCCallSession [%s] %s:%d Callee: createSDP failed with error %s
VCCallSession [%s] %s:%d Couldn't create the audio transmitter!!! error = (%s)
VCCallSession [%s] %s:%d Video payload OVERRIDE to %d
VCCallSession [%s] %s:%d Override unrecognized payload
VCCallSession [%s] %s:%d Video receive payload OVERRIDE to %d
VCCallSession [%s] %s:%d Failed to allocate image attributes memory for image send
VCCallSession [%s] %s:%d Failed to allocate image attributes memory for image receive
VCCallSession [%s] %s:%d Failed to allocate image attributes memory for image send count
VCCallSession [%s] %s:%d Failed to allocate image attributes memory for image receive count
VCCallSession [%s] %s:%d sendSIPInviteWithError: createSDP failed with error %s
VCCallSession [%s] %s:%d sendSIPInviteWithError failed state: no longer attempting to connect! error = (%s)
VCCallSession [%s] %s:%d sendSIPInviteWithError failed: Couldn't create the rtp handles!!! error = (%s)
VCCallSession [%s] %s:%d sendSIPInviteWithError failed: Couldn't prepare SRTP for the rtp handles!!! error = (%s)
VCCallSession [%s] %s:%d sendSIPInviteWithError failed: Couldn't create the media queue handle! error = (%s)
VCCallSession [%s] %s:%d sendSIPInviteWithError failed: SDP string is empty! error = (%s)
VCCallSession [%s] %s:%d sendSIPInviteWithError failed: couldn't establish connection with SDP! error = (%s)
VCCallSession [%s] %s:%d Load switch alwaysOnAudioRedundancyEnabled %d
VCCallSession [%s] %s:%d Load switch cellularLowTierRedundancyEnabled %d
VCCallSession [%s] %s:%d Load switch wifiLowTierRedundancyEnabled %d
VCCallSession [%s] %s:%d %s: %s
VCCallSession [%s] %s:%d VCCallSession: FAILED TO PREPARE ENCRYPTION FOR AUDIO...
VCCallSession [%s] %s:%d VCCallSession: FAILED TO PREPARE ENCRYPTION FOR VIDEO...
VCCallSession [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCCallSession.m:%d: MediaQueue_CreateHandle failed (%08X)
VCCallSession [%s] %s:%d matched FeaturesString = [%s], for payload %d
VCCallSession [%s] %s:%d setMatchedFeaturesString returned NO for payload %d
VCCallSession [%s] %s:%d parseSDP failed
VCCallSession [%s] %s:%d SDP has basebandCodecType:%s, sampleRate:%d
VCCallSession [%s] %s:%d AllowAudioRecording: %d (local: %d remote: %d)
VCCallSession [%s] %s:%d isRTCPFBEnabled = %d
VCCallSession [%s] %s:%d Could not find matching codec
VCCallSession [%s] %s:%d Not using secondary audio, no codecs found
VCCallSession [%s] %s:%d Could not find matching video codec
VCCallSession [%s] %s:%d SetBWEstMode critical failure.
VCCallSession [%s] %s:%d ===== Actual Video Payload (%d) =====
VCCallSession [%s] %s:%d localMaxBandwidth: %d remoteMaxBandwidth: %d answerBandwidth: %d
VCCallSession [%s] %s:%d filterFeatureListForPayloads: Unexpected for %s count: %d
VCCallSession [%s] %s:%d failed: result=%x
VCCallSession [%s] %s:%d RTPSetThrottlingAudioInterval returned %d
VCCallSession [%s] %s:%d negotiatePayloadWithError returned NO with error %s
VCCallSession [%s] %s:%d setRTPPayloadWithError returned NO with error %s
VCCallSession [%s] %s:%d setMediaQueueStreamSettings returned NO
VCCallSession [%s] %s:%d VCAudioReceiver_Start returned NO
VCCallSession [%s] %s:%d (state == GKVoiceChatServiceStateCallerAttemptingToConnect = %d, sipState = %d
VCCallSession [%s] %s:%d createAudioTransmitter returned NO with error %s
VCCallSession [%s] %s:%d sendSIPInvite returned NO error = %s
VCCallSession [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCCallSession.m:%d: Benign Error (possibly not): We started audio before we negotiated our codec.
VCCallSession [%s] %s:%d disableAudio is set to True, not starting audio!
VCCallSession [%s] %s:%d alreadyStarted = %d, isEnabled = %d
VCCallSession [%s] %s:%d SAME device role %d set, No-Op
VCCallSession [%s] %s:%d Invalid transition from role %d to %d
VCCallSession [%s] %s:%d Updating from role %d to %d. shouldRestartAudio %d
VCCallSession [%s] %s:%d %@(%p) Updating from role %d to %d. shouldRestartAudio %d
VCCallSession [%s] %s:%d Finished starting audio didStart[%d]
VCCallSession [%s] %s:%d Finished stopping audio didStop[%d]
VCCallSession [%s] %s:%d stopping audio
VCCallSession [%s] %s:%d stop audio timed out
VCCallSession [%s] %s:%d starting audio
VCCallSession [%s] %s:%d updateDeviceRole: start audio timed out
VCCallSession [%s] %s:%d Finished update to role %d
VCCallSession [%s] %s:%d Sending VCCallingModeTopic %s
VCCallSession [%s] %s:%d Getting cookie for payload type %d
VCCallSession [%s] %s:%d Could not find server bag config for %@. Using default value %d
VCCallSession [%s] %s:%d Found enableTFRCLog YES. Enable rate control log
VCCallSession [%s] %s:%d Local device uses cellular:[%s], remote device uses cellular:[%s]
VCCallSession [%s] %s:%d Current connection number %d, enableBBDump %d
VCCallSession [%s] %s:%d Load switch allowBurstyLossRampDownEnabled %d
VCCallSession [%s] %s:%d Load switch lowFpsVideoEnabled %d
VCCallSession [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCCallSession.m:%d: AFRCCreateHandle failed (%08X)
VCCallSession [%s] %s:%d Starting AFRC
VCCallSession [%s] %s:%d Starting VCRateController (%p) and VCMediaController (%p)
VCCallSession [%s] %s:%d Failed to start AFRC
VCCallSession [%s] %s:%d Failed to start VCRC
VCCallSession [%s] %s:%d AMR packetsPerBundle[%d] octetAligned[%d] dtxEnabled[%d]
VCCallSession [%s] %s:%d EVS dtxEnabled[%d] evsSIDPeriod[%d]
VCCallSession [%s] %s:%d Selecting PL_AAC_ELD/24000!
VCCallSession [%s] %s:%d Selecting PL_AAC_ELD/22050!
VCCallSession [%s] %s:%d Selecting PL_AAC_ELD/16000!
VCCallSession [%s] %s:%d Selecting PL_G722!
VCCallSession [%s] %s:%d Selecting PL_OPUS
VCCallSession [%s] %s:%d Selecting PL_CN
VCCallSession [%s] %s:%d Selecting PL_SPEEX_8K
VCCallSession [%s] %s:%d Selecting PL_SPEEX_16K
VCCallSession [%s] %s:%d Selecting MULAW!
VCCallSession [%s] %s:%d Selecting PL_AMR_16000!
VCCallSession [%s] %s:%d Selecting PL_AMR_8000!
VCCallSession [%s] %s:%d Selecting PL_EVS_32000!
VCCallSession [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCCallSession.m:%d: RTPGetLocalSSRC for audio failed (%08X) handle = %p
VCCallSession [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCCallSession.m:%d: RTPGetLocalSSRC for video failed (%08X)
VCCallSession [%s] %s:%d Failing due to no remote packets.  local callid: %x
VCCallSession [%s] %s:%d Finished sip end action %d
VCCallSession [%s] %s:%d SIPSetDoKeyExchange = %d, ident = %s, peerCN =%s, caps = %s
VCCallSession [%s] %s:%d Failed retreiving the localIdentity from APS
VCCallSession [%s] %s:%d setLocalIdentityForKeyExchange: SecIdentityCopyCertificate error
VCCallSession [%s] %s:%d setLocalIdentityForKeyExchange: display common name(s) from local cert...
VCCallSession [%s] %s:%d %s
VCCallSession [%s] %s:%d setLocalIdentityForKeyExchange: no common name(s) found in local cert...
VCCallSession [%s] %s:%d setLocalIdentityForKeyExchange: done displaying common name(s) from local cert...
VCCallSession [%s] %s:%d setLocalIdentityForKeyExchange: no local cert found...
VCCallSession [%s] %s:%d pickFeaturesStringForPayload: DID NOT FIND payload %d.
VCCallSession [%s] %s:%d pickFeaturesStringForPayload for %d (%s) from %s: %s
VCCallSession [%s] %s:%d setMatchedFeaturesString: local=[%s] remote=[%s]
VCCallSession [%s] %s:%d NO matched featuresString
VCCallSession [%s] %s:%d TCP maxBitrateForConnectionType is %d
VCCallSession [%s] %s:%d Use general RelayBitRate for TCP: %d
VCCallSession [%s] %s:%d UDP maxBitrateForConnectionType is %d
VCCallSession [%s] %s:%d @=@ Health: VCCallSession-AudioOnly audioTxBitrate=%5.3f kbps, audioRxBitrate=%5.3f kbps, callID=%d
VCCallSession [%s] %s:%d Not sending message. codecType = %s, codecRate = %s
VCCallSession [%s] %s:%d %@(%p) Not sending message. codecType = %s, codecRate = %s
VCCallSession [%s] %s:%d Invalid VCCallSession packet multiplex mode
VCCallSession [%s] %s:%d Stop audio failed with error: %s
VCCallSession [%s] %s:%d disconnect: callID = %d state = %d, stateIsCallee = %d, didRemoteCancel = %d, didSend200OK = %d, error = %@
VCCallSession [%s] %s:%d Disconnect message was sent %@
VCCallSession [%s] %s:%d Failed to send disconnect message
VCCallSession [%s] %s:%d Ending the Call even though we haven't finished notifying the client that we have started
VCCallSession [%s] %s:%d VCCallSession callID[%u] receives message :%s
VCCallSession [%s] %s:%d VCCallSession callID[%u] received message about BasebandCodecChange type :%s, sampleRate %u
VCCallSession [%s] %s:%d VCCallSession callID[%u] received 'disconnect' message from remote participant '%@'
VCCallSession [%s] %s:%d HandoverReport: VCCallSession callID[%d] received message about remote candidate change:%s
VCCallSession [%s] %s:%d VCCallSession callID[%d] received message about PIP State change:%@
VCCallSession [%s] %s:%d VCCallSession received message about CellTech change :%d, remote bitrate %u
VCCallSession [%s] %s:%d moment message %s
VCCallSession [%s] %s:%d setupMomentsMessages message is nil
VCCallSession [%s] %s:%d Preferred interface message %s
VCCallSession [%s] %s:%d setupPreferredInterfaceMessage message is nil
VCCallSession [%s] %s:%d SymptomReporter: isLocalInitiated:%d isLocalSideOnly:%d message:%s, symptomID = %d, groupID = %@
VCCallSession [%s] %s:%d groupID is nil, return
VCCallSession [%s] %s:%d SymptomReporter: Failed to send symptom message %s to participantID %@, requesting only the local side
VCCallSession [%s] %s:%d WRM Alert state update message: %s
VCCallSession [%s] %s:%d setupWRMAlertStateUpdateMessage message is invalid
VCCallSession [%s] %s:%d setupWRMAlertStateUpdateMessage message is nil
VCCallSession [%s] %s:%d WRM: Get remote iRAT Coex Metrics %s
VCCallSession [%s] %s:%d VCCallSession callID[%u] received data='%@' from remote participant '%@'
VCCallSession [%s] %s:%d HandoverReport: sending SIP message to inform ipChange %s
VCCallSession [%s] %s:%d VCRC targetBitrateDidChange:%d, rateChangeCounter:%d callID %d
VCCallSession [%s] %s:%d VCRC mediaSuggestion:[%s,%s,%s,%s,%s,%s,%s]
VCCallSession [%s] %s:%d *pSendCount is zero (payload=%d)
VCCallSession [%s] %s:%d *pReceiveCount is zero (payload=%d)
VCCallSession [%s] %s:%d Removing resolution %dx%d %f for SDP
VCCallSession [%s] %s:%d Invalid connection type %d
VideoConference [%s] %s:%d 
VideoConference [%s] %s:%d %@(%p) 
VideoConference [%s] %s:%d Tearing down the natObserver.
VideoConference [%s] %s:%d session.requiresWifi = %d
VideoConference [%s] %s:%d New session array = %s
VideoConference [%s] %s:%d >>>>> ERROR: VCCallSession is nil (in VideoConference) <<<<<
VideoConference [%s] %s:%d >>>>> Relaying outgoing ARPL data from VideoConferenceManager to VCCallsession with callID=%d (in VideoConference) <<<<<
VideoConference [%s] %s:%d warmupForCall: Setting up the natObserver. (requiresWifi: %d)
VideoConference [%s] %s:%d Something is wrong with getting the snatmapserver
VideoConference [%s] %s:%d Getting natType: %d [requiresWifi: %d]
VideoConference [%s] %s:%d inviteDataForParticipantID skipReachingServers:%d
VideoConference [%s] %s:%d Error to verify loaded Server Bags %@
VideoConference [%s] %s:%d inviteDataForParticipantID:callID %d
VideoConference [%s] %s:%d inviteDataForParticipantID: session.requiresWifi = %d
VideoConference [%s] %s:%d inviteDataForParticipantID: Setting natType %d for callID %d
VideoConference [%s] %s:%d VideoConference: CALLID MISMATCH %p client callID %ld internal callID %u
VideoConference [%s] %s:%d Returning invite data: %s
VideoConference [%s] %s:%d connection-data-returned
VideoConference [%s] %s:%d natTypeForCallSessions(%s): natTypeDictionary %s. natType is %d.
VideoConference [%s] %s:%d setPauseAudio called...session = %s, callID = %d
VideoConference [%s] %s:%d setPeerCN: called...session = %s, peerCN = %s callID = %d
VideoConference [%s] %s:%d setSessionID: called...session = %s, sessionID = %s callID = %d
VideoConference [%s] %s:%d setPeerReportingID: called...peerReportingID = %s, session = %s, sessionID = %s callID = %d
VideoConference [%s] %s:%d audio for the session should not be running
VideoConference [%s] %s:%d deregisterForVideoFramesWithDeviceRole failed; self = %p
VideoConference [%s] %s:%d registerForVideoFramesWithDeviceRole failed; self = %p
VideoConference [%s] %s:%d self = %p, callID = %d, capabilities = %@, _deviceRole = %d
VideoConference [%s] %s:%d _startedSessions is not empty
VideoConference [%s] %s:%d (%p) reconfigured audioIO=%p operatingMode:%d deviceRole:%d direction:%d
VideoConference [%s] %s:%d Failed to create the spatial metadata. status=%08x
VideoConference [%s] %s:%d Failed to allocate spatial metadata entry. status=%08x
VideoConference [%s] %s:%d Failed to retrieve the channel index. status=%08x
VideoConference [%s] %s:%d Failed to register the spatial metadata. status=%08x
VideoConference [%s] %s:%d startConnectionWithParticipantID called...session = %s, callID = %d
VideoConference [%s] %s:%d startConnectionWithParticipantID-completed
VideoConference [%s] %s:%d setCurrentFocus: updateLastReceivedPacket at focus for session: %p
VideoConference [%s] %s:%d setCurrentFocus: updateLastReceivedPacket at client for session: %p
VideoConference [%s] %s:%d stopAllCalls-completed
VideoConference [%s] %s:%d stopCallID-completed
VideoConference [%s] %s:%d cancelCallID-completed
VideoConference [%s] %s:%d remoteCancelledCallID-completed
VideoConference [%s] %s:%d VideoConference setPacketsPerBundle %d -> %d
VideoConference [%s] %s:%d processRelayRequestResponse:session %s
VideoConference [%s] %s:%d processRelayUpdate:session %s
VideoConference [%s] %s:%d IOProc:  Missing grabbing lock onCaptureSound at %u
VideoConference [%s] %s:%d VideoConference[%p] IOProc:  Missing grabbing lock onPlaySound at %u
VideoConference [%s] %s:%d START TALKING at %u
VideoConference [%s] %s:%d STOP TALKING at %u
VideoConference [%s] %s:%d Timestamp jumped by %d, %d to %d at %f. host time jump %f (%d)
VideoConference [%s] %s:%d Detected large timestamp jump by %d, from %d to %d. host time jump %f (%d)
VideoConference [%s] %s:%d pullAudioSamples() took a long time = %f
VideoConference [%s] %s:%d sipCallbackNotification:%d
VideoConference [%s] %s:%d shouldPrioritizeParticipantIDForSIPInvite %d
VideoConference [%s] %s:%d sipCallbackNotification:session = %s
VideoConference [%s] %s:%d %s matches session %s for %s
VideoConference [%s] %s:%d returns %s out of %s
VideoConference [%s] %s:%d sessionForIncomingParticipantID returned: %s
VideoConference [%s] %s:%d stopCallID: %d, didRemoteCancel = %d, session = %s
VideoConference [%s] %s:%d cancelCallID: %d, session = %s
VideoConference [%s] %s:%d defaultCleanupSession!
VideoConference [%s] %s:%d threadSafeCleanupSession!
VideoConference [%s] %s:%d threadSafeCleanupSession end!
VideoConference [%s] %s:%d cleanupSession: session = %s, session.state == GKVoiceChatServiceStateRunning = %d
VideoConference [%s] %s:%d InterruptMe:%s Begin Pausing audio session %s
VideoConference [%s] %s:%d InterruptMe:%s End Pausing audio session  done%s
VideoConference [%s] %s:%d VideoConference: didStart when call is not running? session %s
VideoConference [%s] %s:%d didStart:session %s, didStart = %d, connType = %u, InterfaceType = %s, %s, error = %s, claimed Session = %s
@:@ VideoConference-didStart
VideoConference [%s] %s:%d @:@ VideoConference-didStart (%p) operatingMode=%d
VideoConference [%s] %s:%d VideoConference: clean up session (call ID %d) with delay %ld, error %s
VideoConference [%s] %s:%d VideoConference: notifying delegate of didStop for call ID %d
VideoConference [%s] %s:%d VCCallSession callID[%d] call end audio metrics: %s
VideoConference [%s] %s:%d >>>>> Relaying incoming ARPL data from VCCallSession to VideoConferenceManager with callID=%d (in VideoConference) <<<<<
VideoConference [%s] %s:%d >>>>> DATA ERROR (in VideoConference) <<<<<
VideoConference [%s] %s:%d Unsupported data received from callId=%d with messageType=%u
VideoConference [%s] %s:%d session=%s
VideoConference [%s] %s:%d %@(%p) session=%s
VideoConference [%s] %s:%d Forced interface change
VideoConference [%s] %s:%d NATTypeDictionaryUpdated: requiresWifi: %d  natTypeDictionary %s
VideoConference [%s] %s:%d Setting natType %d for callID %d
VCRC [%s] %s:%d Pause VCRateControl algorithm
VCRC [%s] %s:%d Resume VCRateControl algorithm
 [%s] %s:%d startConnectionWithBlob for P2P failed with error %s
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCTransportSessionLegacy.m:%d: VCCallSession: StartConnectionCheck failed(%X)
 [%s] %s:%d Force Relay is set for call (%d)
 [%s] %s:%d Relay: processRelayRequestResponseDict:%s, %d, %d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCTransportSessionLegacy.m:%d: processRelayRequestResponseDict bailing because relay is not allowed.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCTransportSessionLegacy.m:%d: processRelayRequestResponseDict bailing because relayState is %d
 [%s] %s:%d processRelayRequestResponseDict: %s relay.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCTransportSessionLegacy.m:%d: processRelayRequestResponseDict: can't find relay type info in the dictionary
 [%s] %s:%d Unable to create TCPTunnel: %s
 [%s] %s:%d %@(%p) Unable to create TCPTunnel: %s
 [%s] %s:%d Unabled to create UDP relay blob: %s
 [%s] %s:%d %@(%p) Unabled to create UDP relay blob: %s
 [%s] %s:%d Relay: processRelayUpdateDict:%s, %d, %d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCTransportSessionLegacy.m:%d: processRelayUpdateDict bailing because relay is not allowed.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCTransportSessionLegacy.m:%d: processRelayUpdateDict: wait until allocation is finished %d
 [%s] %s:%d processRelayUpdateDict: %s relay, %d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCTransportSessionLegacy.m:%d: processRelayUpdateDict: can't find relay type info in the dictionary
 [%s] %s:%d TCPTUNNEL: relayUpdateDict %s
 [%s] %s:%d HandoverReport: secondary relay dispatch timed out after %5.2f sec. Start relay setup
 [%s] %s:%d HandoverReport: secondary relay dispatch timer is deleted.
 [%s] %s:%d HandoverReport: handlePrimaryConnChange, setup initial secondary relay
 [%s] %s:%d notifyDelegateToCancelRelay: No need, relay state %d.
 [%s] %s:%d notifyDelegateToCancelRelay: Resetting relay state from %d.
 [%s] %s:%d HandoverReport: setupSecondaryRelayForCall
 [%s] %s:%d HandoverReport: setupSecondaryRelay fail, relayState %d
 [%s] %s:%d MediaCallback: link doesnot match(%d, %d)
 [%s] %s:%d MediaCallback: call (%08X) has optimal P2P primary: cancel preemptive relay
 [%s] %s:%d MediaCallback: call (%08X) has optimal P2P primary: setup initial secondary relay
 [%s] %s:%d MediaCallback: not initial secondary relay, return, let ProcessRemoteIPChange setup secondary relay
 [%s] %s:%d MediaCallback: call (%08X) has optimal relay primary: setup secondary relay
 [%s] %s:%d MediaCallback: add a pending relay count = 1 relayFlag: %d, let handlePrimaryConnChange start initial secondary relay
 [%s] %s:%d initiateRelayRequest: caller start relay in %f seconds
 [%s] %s:%d initiateRelayRequest bailing because already connected
 [%s] %s:%d initiateRelayRequest bailing because relay has already started %d
 [%s] %s:%d initiateRelayRequest bailing because transportSession has been stopped
 [%s] %s:%d Remote ICE Version:%u, handover is %ssupported.
 [%s] %s:%d networkStateDidChange: Failed updating interface list %x
 [%s] %s:%d networkStateDidChange: checking for %s.
 [%s] %s:%d networkStateDidChange: no need to collect blob: %d, %d, %d.
 [%s] %s:%d networkStateDidChange: Error %x getting connection data!
 [%s] %s:%d HandoverReport: Relay state: %d, local blob is updated %s
 [%s] %s:%d HandoverReport: processRemoteIPChange: callID:%u length:%d
 [%s] %s:%d HandoverReport: Bad blob version number: %d
 [%s] %s:%d connectionResultCallback: pConnResult = %p, didReceiveICEPacket = %d resultCount = %d, secretKey = %p, skeResult = %d
 [%s] %s:%d Key exchange failed with error: %d
 [%s] %s:%d HandoverReport: P2P established, no need for TCP relay.
 [%s] %s:%d TCPTUNNEL: continue with ChannelBinding, %s.
 [%s] %s:%d TCP Channel is set up, time out ICE right away.
 [%s] %s:%d HandoverReport: Remove loopback connection %s
 [%s] %s:%d call [transport getLoopbackIP]...
 [%s] %s:%d done [transport getLoopbackIP]...
 [%s] %s:%d call tunnel setVTPIP...
 [%s] %s:%d done tunnel setVTPIP...
 [%s] %s:%d HandoverReport: Add loopback connection %s
 [%s] %s:%d Didn't find valid remote candidate ID, cannot create relay dictionary
 [%s] %s:%d VCCallSession: preparing for secondary connection, %x, %x
 [%s] %s:%d createInitiateRelayDictionaryForCall: No new candidate for secondary connection
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCTransportSessionLegacy.m:%d: createRelayUpdateDictionary: requestResponse is %s
 [%s] %s:%d createRelayUpdateDictionary: dict %s
 [%s] %s:%d Relayconnectiondata = %s
 [%s] %s:%d The max blob size allowed = %d
 [%s] %s:%d Error %x getting sip connection data!
 [%s] %s:%d ICE_E_NOTFOUND was received, using default connection data
 [%s] %s:%d connectDataSizeInBytes = %d, connectionData = %p, transport = %p
 [%s] %s:%d SIPGetConnectionData failed, retrying
 [%s] %s:%d VCCallSession generateConnectionData: timed out
 [%s] %s:%d [transport setICETimeout] timeout failed with %08x
 [%s] %s:%d number of connection is %d
 [%s] %s:%d NULL bundlerOut
 [%s] %s:%d CMSimpleQueueCreate failed (%d)
 [%s] %s:%d NULL bundler
 [%s] %s:%d NULL mediaPacket
 [%s] %s:%d mediaPacket->next is not NULL
 [%s] %s:%d mediaPacket->dataSizeByte(%u) is bigger than bundler->currentMTUBytes(%u)
 [%s] %s:%d Failed to add media packet to bundler (%d)
 [%s] %s:%d NULL outputBlockHandler
 [%s] %s:%d Output Block failed (%d)
 [%s] %s:%d Reach of number of max packets
VCTextReceiver [%s] %s:%d Failed to create the jitter buffer
VCTextReceiver [%s] %s:%d Failed to initalize the text receiver thread
VCTextReceiver [%s] %s:%d VCTransportStreamRunLoopVTPCreate failed %d
VCTextReceiver [%s] %s:%d VCTextReceiver cleanup DONE!
VCTextReceiver [%s] %s:%d 
VCTextReceiver [%s] %s:%d %@(%p) 
VCTextReceiver [%s] %s:%d Failed to start jitter buffer
VCTextReceiver [%s] %s:%d received packet time[%f]
VCTextReceiver [%s] %s:%d RTPReceiveRTP returned[%x] sleeping 15000usecs??
VCTextReceiver [%s] %s:%d Received an error %x
VCTextReceiver [%s] %s:%d Receiving RTP packet
VCTextReceiver [%s] %s:%d %@(%p) Receiving RTP packet
VCTextReceiver [%s] %s:%d Failed to retrieve RTCP packet. Error:%x
VCTextReceiver [%s] %s:%d Received a packet with unknown payload: %d
VCTextReceiver [%s] %s:%d Payload not supported:%d
VCTextReceiver [%s] %s:%d Failed to enqueue packet
VCTextReceiver [%s] %s:%d Unrecognized payload type: %d
VCTextReceiver [%s] %s:%d Unable to fit audio data into the audioFrame buffer. Data size: %d, padding len: %u
VCTextReceiver [%s] %s:%d Failed to create frame. Data size: %d, padding len: %u
VCTextReceiver [%s] %s:%d Unexpected payload type: %u
VCTextReceiver [%s] %s:%d Discarding empty text frame
VCTextReceiver [%s] %s:%d Received text:%@ length:%lu
VCTextReceiver [%s] %s:%d %@(%p) Received text:%@ length:%lu
 [%s] %s:%d >>>>> Relaying incoming ARPL data from VideoConference to AVConference via XPC (in VideoConferenceManager) <<<<<
 [%s] %s:%d >>>>> DATA ERROR (in VideoConferenceManager) <<<<<
 [%s] %s:%d NetworkAgent is being asserted by SIP
 [%s] %s:%d SOMETHING WENT WRONG MAKING THE SIP HANDLE!%08x
 [%s] %s:%d SIP Handle created:0x%x
 [%s] %s:%d VideoConferenceManager:  starting sip with refCount = %d
 [%s] %s:%d SOMETHING WENT WRONG IN SIP LISTEN! %08x
 [%s] %s:%d SIPCallback tried to use stale/invalid handle %d. actual is %d
 [%s] %s:%d Entering cleanupVTP...with isVTPInitialized = %d and sip is invalid = %d
 [%s] %s:%d Finished cleanupVTP...
 [%s] %s:%d VideoConferenceManager:  stopping sip with refCount = %d
 [%s] %s:%d NetworkAgent is being un-asserted by SIP
 [%s] %s:%d SIP Handle closed:0x%x
 [%s] %s:%d NetworkAgent is being asserted by addVideoConference '%@'
 [%s] %s:%d NetworkAgent is being un-asserted by removeVideoConference '%@'
 [%s] %s:%d InterruptMe: (%d) pauseVideoConferences begin
 [%s] %s:%d InterruptMe: (%d) Pausing audio and video for conference %s
 [%s] %s:%d SIPCallback: %p, dwCallID = %d (%d)
 [%s] %s:%d SIPCallback: VCManager %p matched VC %s to get callee callID
 [%s] %s:%d VideoConferenceManager: CellConditionChangeCallback
 [%s] %s:%d VCM:VTPCallback: context (%p) notification (%d) data (%p) optional (%p).
 [%s] %s:%d VCM: Receive remote-no-remote-packet notification, %f. callID %d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VideoConferenceManager.m:%d: VTPCallback error: unknown notificaiton %d.
 [%s] %s:%d Created VCControlChannelTransaction object for sessionID='%d', participantID='%@'
 [%s] %s:%d %@(%p) Created VCControlChannelTransaction object for sessionID='%d', participantID='%@'
 [%s] %s:%d Dealloc VCControlChannelTransaction object for sessionID='%d', participantID='%@'
 [%s] %s:%d %@(%p) Dealloc VCControlChannelTransaction object for sessionID='%d', participantID='%@'
 [%s] %s:%d flushTransaction: transaction has been flushed for sessionID='%d', participantID='%@'
 [%s] %s:%d %@(%p) flushTransaction: transaction has been flushed for sessionID='%d', participantID='%@'
 [%s] %s:%d transactionConfirmedByParticipantID: message has been ACKed for sessionID='%d', participantID='%@'
 [%s] %s:%d %@(%p) transactionConfirmedByParticipantID: message has been ACKed for sessionID='%d', participantID='%@'
 [%s] %s:%d transactionConfirmedByParticipantID: confirmation mismatch: sessionID '%d'!='%d', participantID '%@'!='%@'
 [%s] %s:%d %@(%p) transactionConfirmedByParticipantID: confirmation mismatch: sessionID '%d'!='%d', participantID '%@'!='%@'
 [%s] %s:%d Stop sending message to remote participant '%@' which is not part of session '%d'
 [%s] %s:%d %@(%p) Stop sending message to remote participant '%@' which is not part of session '%d'
 [%s] %s:%d Transaction flushed. Not sending message on attempt '%d', sessionID='%d', participantID='%@'
 [%s] %s:%d %@(%p) Transaction flushed. Not sending message on attempt '%d', sessionID='%d', participantID='%@'
 [%s] %s:%d Network failed to send message on attempt '%d', sessionID='%d', participantID='%@'
 [%s] %s:%d %@(%p) Network failed to send message on attempt '%d', sessionID='%d', participantID='%@'
 [%s] %s:%d User-specified timeout '%@' has expired. Aborting confirmation wait
 [%s] %s:%d %@(%p) User-specified timeout '%@' has expired. Aborting confirmation wait
 [%s] %s:%d Attempt '%d' timed out. Aggregated wait is '%f', useFastRetries=%d
 [%s] %s:%d %@(%p) Attempt '%d' timed out. Aggregated wait is '%f', useFastRetries=%d
 [%s] %s:%d Message has been confirmed for sessionID='%d' by remote participant participantID='%@'
 [%s] %s:%d %@(%p) Message has been confirmed for sessionID='%d' by remote participant participantID='%@'
 [%s] %s:%d Finished sending message to participantID='%@' for sessionID='%d', result='%s', attempt='%d', aggregated wait='%f'
 [%s] %s:%d %@(%p) Finished sending message to participantID='%@' for sessionID='%d', result='%s', attempt='%d', aggregated wait='%f'
 [%s] %s:%d sendUnreliableMessage: attempt to send message to remote participant '%@' which is not part of session '%d'
 [%s] %s:%d %@(%p) sendUnreliableMessage: attempt to send message to remote participant '%@' which is not part of session '%d'
 [%s] %s:%d Message length is too large (header[%d] data[%d]) to be sent. session[%d] particiapnt[%@] 
 [%s] %s:%d %@(%p) Message length is too large (header[%d] data[%d]) to be sent. session[%d] particiapnt[%@] 
 [%s] %s:%d sendUnreliableMessage: send message to remote participant '%@' which is part of session '%d'
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: Failed to create VTP memory allocators
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: CreateHandle failed (%d)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: VTPRecvProc thread failed (%d)
 [%s] %s:%d WMM is %s.
 [%s] %s:%d Override DisableWMM due to FT traffic class is set.
 [%s] %s:%d Force FaceTime traffic class to (%d).
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: Invalid FaceTime traffic class value (%d), ignore.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: VTPRecvProc thread(%p) started. [g_hVTP: %p]
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: VTP_Cleanup failed due to invalid handle. [g_hVTP: %p]
 [%s] %s:%d VTPRecvProc thread(%p) end...
 [%s] %s:%d removed all vfd from the list
 [%s] %s:%d preferredSendQueue is NULL
 [%s] %s:%d Failed due to invalid handle
 [%s] %s:%d NWConnection should not be nil
 [%s] %s:%d Non-UDP protocol '%d' is not supported
 [%s] %s:%d calloc(%d) failed
 [%s] %s:%d VTP_GetVFD returned invalid handle.
 [%s] %s:%d new vfd(%d)->fd(%d), and add to list
 [%s] %s:%d VTP_DuplicateVFD failed due to invalid handle
 [%s] %s:%d VTP_DuplicateVFD failed
 [%s] %s:%d Invalid VTP handle.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: VTP_Socket failed due to invalid handle.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: fd(%d) > FD_SETSIZE
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: VTP_GetVFD returned invalid handle.
 [%s] %s:%d VTP set shouldLogFDsAtTimeout: %d with vfd:%d, fileDescriptor:%d
 [%s] %s:%d VTP create VFDList failed with errno %d
 [%s] %s:%d VTP_SetPayloadList failed due to invalid handle.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: VTP_SetPayloadList failed to alloc.
 [%s] %s:%d VTP_SetPayloadList for vfd[%d]: %i payloads:%s
 [%s] %s:%d VTP_SetSocketMode failed due to invalid input mode.
 [%s] %s:%d VTP_SetSocketMode failed due to invalid handle.
 [%s] %s:%d VTP_SetPktType failed due to invalid handle.
 [%s] %s:%d VTP_AddPktType failed due to invalid handle.
 [%s] %s:%d VTP_RemovePktType failed due to invalid handle
 [%s] %s:%d VTP_Getsockname failed due to invalid handle.
 [%s] %s:%d VTP_SetRTPSSRC failed due to invalid handle.
 [%s] %s:%d Invalid transport session ID
 [%s] %s:%d VTP_SetTransportSessionID failed due to invalid handle.
 [%s] %s:%d VTP_Setsockopt failed due to invalid handle.
 [%s] %s:%d VTP handle is invalid
 [%s] %s:%d VTP_Close failed due to invalid handle.
 [%s] %s:%d removed vfd (%d) from the list
 [%s] %s:%d VTP_Bind failed due to invalid handle.
 [%s] %s:%d All binding tries failed. Trying a random port...
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: bind failed(%d)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: VTP_Sendto failed due to invalid parameter.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: VTP_Sendto failed due to invalid packet type (%d).
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: VTP_Sendto failed due to invalid handle.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: DTLS_Write failed %08X.
 [%s] %s:%d VTP_Sendto: isICEPacket = 1  mbLocal = %s, mbLocalIsCellular = %d, mbDst = %s, matchedType = %d, shouldCountBytes = %d, length = %lu, numResult = %d, isSecondaryCellular = %d
 [%s] %s:%d HandoverReport: matching localIP: %s
 [%s] %s:%d HandoverReport: matching vfd, %s
 [%s] %s:%d got a NULL VPKTFlag
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: %s: failed due to invalid handle.
 [%s] %s:%d got a NULL datagramsVPKTFlag
 [%s] %s:%d got a NULL datagramsLength
 [%s] %s:%d got a NULL datagramsBuffer
 [%s] %s:%d got a bad datagramsCount %d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: Failed due to invalid handle
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: callID should not be 0 when sending IDS compound packet
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: index=%d, statsID = %d
 [%s] %s:%d Failed to retrieve VTP handle.
 [%s] %s:%d VTP_Recvfrom failed due to invalid handle.
 [%s] %s:%d VTP_Recvfrom failed due to no real socket found for vfd
 [%s] %s:%d VTP_Recvfrom failed due to socket already closed
 [%s] %s:%d VTP_Recvfrom failed to allocate packet info
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: VTP_SetAFRCRecvMode failed due to invalid handle.
 [%s] %s:%d VTP_SetAFRC failed due to invalid handle.
 [%s] %s:%d VTP_NotifyAFRCRxEstimate INVALID_HANDLE
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: VTP_NotifyAFRCRxEstimate
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: Failed due to invalid parameter.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: Failed VTP check-in
 [%s] %s:%d Successfully added new vfd set with id: %d
 [%s] %s:%d Failed to add new vfd set.
 [%s] %s:%d Failed to copy readFDs.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: Failed VTP check-in.
 [%s] %s:%d Successfully removed vfd set with id: %d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: VTP_Select failed due to invalid parameter.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: VTP_GetSendRecvStats failed due to invalid handle.
 [%s] %s:%d VTP_GetSendRecvStats %lld/%lld
 [%s] %s:%d VTP_SetCellularUniqueTag failed due to invalid handle.
 [%s] %s:%d VTP_SetPktTag: invalid tag index requested '%d'. Ignoring
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: VTP_SetRTPSrc failed due to invalid handle.
 [%s] %s:%d VTP_SetRTPSrc for callID(%08X) local[%s] dst[%s].
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: RealSocketForConnectionResult returned invalid socket
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: ioctl(SIOCSIFLOG) for interface %s failed with error %d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: VTPCallback failed due to undefined pointer.
 [%s] %s:%d VTPCallback failed due to invalid VTP handle [g_hVTP:%p]
 [%s] %s:%d VTP_DetectNAT64Prefix failed due to invalid handle.
 [%s] %s:%d Interface %s (VFD %d) IS behind NAT
 [%s] %s:%d Interface %s (VFD %d) ISNOT behind NAT (result %d, local is IPv6 %d, isNoneZero %d)
 [%s] %s:%d VTP registered connectionManager %p with callID %d
 [%s] %s:%d VTP de-registered connectionManager with callID %d, remaining items number %ld
 [%s] %s:%d Failed due to null VCSourceDestinationInfo
 [%s] %s:%d Packet data too big length=%zu trafficFlags=%d mode=%d
 [%s] %s:%d RealTransport: source destination info with mode %d is not supported
 [%s] %s:%d VTP_IncrementTotalBytesSent failed due to invalid handle
 [%s] %s:%d NWConnection failed to receive data with error %d
 [%s] %s:%d Could not find VFDList for gived fvd '%d'
 [%s] %s:%d Failed to create data allocator
 [%s] %s:%d Failed to create the vtp packet allocator
 [%s] %s:%d VCMemPool_Create(%d) failed
 [%s] %s:%d Releasing NULL packet reference
 [%s] %s:%d ***VTP_GetVFD: UNEXPECTED; ran out of vfd's with i=%d. There must be some socket LEAK!
 [%s] %s:%d sourceVFD should not be NULL
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: socket failed (%d)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: socket(%d) > FD_SETSIZE(%d)
 [%s] %s:%d fd[%d] increase. RefCount[%d]
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: realSocket(%d) > FD_SETSIZE(%d)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: vfd (%d) is out-of-range.
 [%s] %s:%d vfd(%d) [%s] closed.
 [%s] %s:%d fd[%d] decrease. RefCount[%d]
 [%s] %s:%d fd[%d] over released. RefCount[%d]
 [%s] %s:%d fd[%d] closed.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: No VFD result found.
 [%s] %s:%d VTP default result key uses vfd(%d) for send.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: No VFD found for default result key.
 [%s] %s:%d HandoverReport: packet destination matched connection result %d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: Invalid relay server type(%d).
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: SessionID is NULL, cannot generate MAC, reset flag.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: SessionID length 0, cannot generate MAC, reset flag.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: No key available to generate MAC, reset flag.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: PrepareOFTCRC32 failed due to invalid parameter.
 [%s] %s:%d Cannot print health for invalid connectionIndex=%d.
 [%s] %s:%d @=@ Health: VTransport Health Monitor for VTP Send packet count:[%d %d], byte count:[%d %d], interval:%.3fs, rate:[%.3f %.3fkbps], VO=%u, VI=%u, BE=%u
 [%s] %s:%d @=@ Health: VTransport Health Monitor for VTP Recv packet count:[%d %d], byte count:[%d %d], interval:%.3fs, rate:[%.3f %.3f]kbps, demuxPackets:[%u, %u, %u, %u, %u], maxQueueLength:%d, maxQueueDelay:%.2fms statsCount:%d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: %s failed due to invalid handle.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: %s failed due to VFDList not found.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: VTPRecvProc failed due to invalid handle.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: socket failed. We may run out of file descriptors
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: select failed (%08X)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: Select timeout, VTP has received a total of %d packets
 [%s] %s:%d Triggering osChannelInfoLog [IDS readyToReadCount: %d]
 [%s] %s:%d nil VCDatagramChannelIDS, cannot log os channel info!
 [%s] %s:%d Select timeout with fds:[%s]
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: %s(%d) returned 0: empty message
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: %s(%d) failed (%08X)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: %s(%d) error. Empty buffer returned!
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: calloc(%d) failed
 [%s] %s:%d Failed to allocate VTP packet
 [%s] %s:%d Failed to allocate VTP data packet buffer
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: if_indextoname failed for index %d (%d)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: realloc (%d) failed
 [%s] %s:%d VTP_IFIndexToName mapping [if_index:%d if_name:%s]
 [%s] %s:%d Failed to retrieve blockBuffer pointer and size
 [%s] %s:%d ++++++++++++++++ ARPL packet detected in VTP_RecvPkt(...) ++++++++++++++++
 [%s] %s:%d >>>>> ARPL packetin VTP_RecvPkt(...) is encrypted <<<<<
 [%s] %s:%d >>>>> ARPL packetin VTP_RecvPkt(...) is UNENCRYPTED <<<<<
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: out-of-bound OFT type.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: unrecognized openfacetime type: %d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: VTP_RecvPkt recv bad message (%04X)
 [%s] %s:%d received packet with type %d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: Invalid OFT RTP header version, discard.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: Invalid OFT header, discard.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: Invalid OFT MAC, discard.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: OFT packet (%d) missing OFT MAC, discard.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: Invalid OFT RTP header version with bad CRC, discard.
 [%s] %s:%d Skip OFT MAC validation for packet(%d), sessionID not ready.
 [%s] %s:%d RTCP packet too small. bufferSize=%zu
 [%s] %s:%d RTCP packet too small. bufferSize=%zu rtcpPacketLength=%zu
 [%s] %s:%d Packet is not Hop-by-hop encrypted
 [%s] %s:%d rtcpPacketLength=%zu not equal to sizeof(RTCP_PSFB_PLI)
 [%s] %s:%d rtcpPacketLength=%zu not equal to sizeof(RTCP_PSFB_FIR)
 [%s] %s:%d rtcpPacketLength=%zuBytes not equal to sizeof(RTCP_PSFB_LOSSFB)=%zuBytes
 [%s] %s:%d rtcpPacketLength=%zuBytes not equal to sizeof(RTCP_PSFB_LTRACK)=%zuBytes
 [%s] %s:%d nil dataChannel, cannot receive packet!
 [%s] %s:%d VTP recv bad message (%04X), ssrc=%X, vfd=%d
 [%s] %s:%d VTP_PassHsk bad packet. encrypted? %d type_check %d
 [%s] %s:%d ###### VTP_PassPkt packet list is growing and not draining!!! count:%d (len=%d type=%04X) streamIDs:%s, vfd:%d ######
 [%s] %s:%d receiving packet on a closed handle! id[%d], ignoring....
 [%s] %s:%d notify AFRC failed (%08X): VFD %d AFRC handle %p  packet type %d/%d packet length: %d
 [%s] %s:%d VTP added VFDSASrc successfully.
 [%s] %s:%d VTP found duplicate VFDSASrc entry.
 [%s] %s:%d Connection result with localIPPort %s uses vfd(%d) for send.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: No VFD found for connection result with localIPPort %s
 [%s] %s:%d Interface %s (VFD %d) IS behind NAT 64 with prefix: %s
 [%s] %s:%d provided a all zeroed prefix (%d), local is IPv6 (%d)
 [%s] %s:%d nil idsDatagramChannel
 [%s] %s:%d Option cannot be NULL
 [%s] %s:%d Datagram count %d is larger than VTP max compound packet datagram count %d
 [%s] %s:%d Cannot not handle open facetime with IDS compound packet
 [%s] %s:%d nil datagramChannel passed
 [%s] %s:%d nw_connection_send(%llx, %llx, %llx) failed with error:%s, expiration time %d ms
 [%s] %s:%d Ignore packets with offset
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: VTP packet allocation failed. Datagram size[%lu]
 [%s] %s:%d failed due to NULL destination IPPort
 [%s] %s:%d failed to match a VFDList
 [%s] %s:%d Datagram channel %p failed to read with error %s
 [%s] %s:%d Datagram channel %p returned empty datagram
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: VCDatagramChannelReadHandler failed due to invalid handle.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: VTP packet allocation failed. Datagram size[%d]
 [%s] %s:%d _VTP_ProcessDatagramOptions failed with error %08X
 [%s] %s:%d Process packet type failed with error %08X
 [%s] %s:%d Invalid data path value=%d. Ignoring the packet
 [%s] %s:%d datagram readHandler received packet from participantID=%llu
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VTP/VTransport.m:%d: VTP packet allocation failed: %d
 [%s] %s:%d datagram readHandler received packet with numOfStreamIDs:%d and streamID[0]:%u
 [%s] %s:%d Parameter VTP must not be NULL
 [%s] %s:%d Parameter packet must not be NULL
 [%s] %s:%d Registered handler[%p] with index=%d
 [%s] %s:%d Unregistered handler with index=%d
 [%s] %s:%d Received notifyd.matching event %s state %llu isPairing %d
 [%s] %s:%d VCWiFiUtils getInfraChannelNumber() failed!
 [%s] %s:%d BT event received while device is on band=%@
 [%s] %s:%d Register for Darwin %@
 [%s] %s:%d Unregister for Darwin %@
 [%s] %s:%d Failed to encode the encode rules for payload (%d)
 [%s] %s:%d Failed to encode the decode rules for payload (%d)
 [%s] %s:%d Failed to allocate video rules
 [%s] %s:%d Failed to allocate the video rule for %dx%d %dfps
 [%s] %s:%d Unknown video payload (payload=%d)
 [%s] %s:%d Unknown video payload (%d)
 [%s] %s:%d Failed to add video format to negotiation blob: %dx%d %f
VCRC [%s] %s:%d This algorithm does not support statistics type=%d to do rate control
VCRC [%s] %s:%d Wrong statistics type=%d!
VCRC [%s] %s:%d Wrong statistics interfaceType=%d!
VCRC [%s] %s:%d Unknown VCRateControl state=%d
VCRC [%s] %s:%d %8.3f/%04X:
%.4f
%.4f
%.4f
%.4f %c
RTT:%-4u
PLR:%4.2f@%.1f
RRx:%4u
MBL:%d
%4u/%4u
  CS:%04X %04X %u BB: %3u
 UAT 
 [%s] %s:%d Failed to initialize the transmitter.
 [%s] %s:%d The provided config is nil
 [%s] %s:%d %@(%p) The provided config is nil
 [%s] %s:%d portraitFrameRotated=%d
 [%s] %s:%d %@(%p) portraitFrameRotated=%d
 [%s] %s:%d Setting remote screen aspect ratio numbers %d/%d,%d/%d (%sPR), remote expects to receive %d/%d,%d/%d
 [%s] %s:%d %@(%p) Setting remote screen aspect ratio numbers %d/%d,%d/%d (%sPR), remote expects to receive %d/%d,%d/%d
 [%s] %s:%d Redundancy level _packetLossPercentage=%2.2f _plrEnvelope=%2.2f 
 [%s] %s:%d Redundancy level changed from _redundancyPercentage=%d to newRedundancyPercentage=%d _packetLossPercentage=%3.3f _plrEnvelope=%3.3f
 [%s] %s:%d multiple send markers found!
 [%s] %s:%d multiple recv markers found!
 [%s] %s:%d Parameter %s is not supported
VCSession [%s] %s:%d Unable to initialize the session. Destination=%s
VCSession [%s] %s:%d %@(%p) Unable to initialize the session. Destination=%s
VCSession [%s] %s:%d Using the following path - oneToOneModeEnabled=%d sessionMode=%ld serviceName=%@
VCSession [%s] %s:%d Unable to initialize the session's local participant!
VCSession [%s] %s:%d %@(%p) Unable to initialize the session's local participant!
VCSession [%s] %s:%d Reporting agent is disabled through default.
VCSession [%s] %s:%d Unable to configure local participant streams for the session. Destination=%s localParticipant=%p
VCSession [%s] %s:%d %@(%p) Unable to configure local participant streams for the session. Destination=%s localParticipant=%p
VCSession [%s] %s:%d %s %s
VCSession [%s] %s:%d reportingConfig must not be nil
VCSession [%s] %s:%d %@(%p) reportingConfig must not be nil
VCSession [%s] %s:%d Dealloc timer starting without stop completing
VCSession [%s] %s:%d %@(%p) Dealloc timer starting without stop completing
VCSession [%s] %s:%d maxActiveVideoDecodes=%d
VCSession [%s] %s:%d Wrong value=%d read from user default [%@]. Resetting it to default value=%d
VCSession [%s] %s:%d Session will use [%@] data path
VCSession [%s] %s:%d Exiting state session %s. Entering state session %s.
VCSession [%s] %s:%d %@(%p) Exiting state session %s. Entering state session %s.
VCSession [%s] %s:%d uuid:%@
VCSession [%s] %s:%d VCSession[%@] transportSessionID[%u] idsParticipantID[%@] participantUUID[%@] receives message[%@]
VCSession [%s] %s:%d messageTuples is nil, can't proceed
VCSession [%s] %s:%d changing _sharingEnabled to %d
VCSession [%s] %s:%d %@(%p) changing _sharingEnabled to %d
VCSession [%s] %s:%d _sharingEnabled already %d
VCSession [%s] %s:%d %@(%p) _sharingEnabled already %d
VCSession [%s] %s:%d Received transportSession event %d while call is not ongoing. Skipping
VCSession [%s] %s:%d Established initial connection '%@'
VCSession [%s] %s:%d Removing current active connection '%@'
VCSession [%s] %s:%d Duplication state changed to %d, active connection is '%@'
VCSession [%s] %s:%d Link constrains changed: '%@'
VCSession [%s] %s:%d Received invalid transportSession event(%d)
VCSession [%s] %s:%d Primary connection changed to '%@'
VCSession [%s] %s:%d Connection changed to '%@'
VCSession [%s] %s:%d New downlink expected bitrate:%u
VCSession [%s] %s:%d New uplink expected bitrate:%u
VCSession [%s] %s:%d Broadcasting audioEnabled state
VCSession [%s] %s:%d %@(%p) Broadcasting audioEnabled state
VCSession [%s] %s:%d Broadcasting videoEnabled state
VCSession [%s] %s:%d %@(%p) Broadcasting videoEnabled state
VCSession [%s] %s:%d Broadcasting screenEnabled state
VCSession [%s] %s:%d %@(%p) Broadcasting screenEnabled state
VCSession [%s] %s:%d Broadcasting audioPaused state
VCSession [%s] %s:%d %@(%p) Broadcasting audioPaused state
VCSession [%s] %s:%d Broadcasting videoPaused state
VCSession [%s] %s:%d %@(%p) Broadcasting videoPaused state
VCSession [%s] %s:%d Participant=%@ didChangeMediaPriority=%d, description=%@
VCSession [%s] %s:%d Participant:%@ requestKeyFrameGenerationWithStreamID:%d FIRType:%d
VCSession [%s] %s:%d Session State:%d, Participant:%@, sessionStartTime:%f
VCSession [%s] %s:%d %@(%p) Session State:%d, Participant:%@, sessionStartTime:%f
VCSession [%s] %s:%d Call is stalling for %f seconds trying to reconnect
VCSession [%s] %s:%d Call is no longer stalling
VCSession [%s] %s:%d Received signal from the remote side to switch oneToOneMode
VCSession [%s] %s:%d Error updating media state=%d for media type=%d, error=%@
VCSession [%s] %s:%d %@(%p) Error updating media state=%d for media type=%d, error=%@
VCSession [%s] %s:%d Downlink TargetBitrate changed from %u to %u
VCSession [%s] %s:%d %@(%p) Downlink TargetBitrate changed from %u to %u
VCSession [%s] %s:%d [AVC SPATIAL AUDIO] Presentation info is nil
VCSession [%s] %s:%d [AVC SPATIAL AUDIO] Serialization failed. result=%08x
VCSession [%s] %s:%d %@(%p) [AVC SPATIAL AUDIO] Serialization failed. result=%08x
VCSession [%s] %s:%d [AVC SPATIAL AUDIO] Serialization complete. result=%08x
VCSession [%s] %s:%d %@(%p) [AVC SPATIAL AUDIO] Serialization complete. result=%08x
VCSession [%s] %s:%d [AVC SPATIAL AUDIO] Failed to apply the spatial metadata. result=%08x
VCSession [%s] %s:%d %@(%p) [AVC SPATIAL AUDIO] Failed to apply the spatial metadata. result=%08x
VCSession [%s] %s:%d %@
VCSession [%s] %s:%d %@(%p) %@
VCSession [%s] %s:%d forceSeamLess:%d
VCSession [%s] %s:%d %@(%p) forceSeamLess:%d
VCSession [%s] %s:%d New opt-in dictionary for new downlink target bitrate:[%u]
VCSession [%s] %s:%d %@(%p) New opt-in dictionary for new downlink target bitrate:[%u]
VCSession [%s] %s:%d strongSelf is nil, return
VCSession [%s] %s:%d transportSessionIDS is invalid
VCSession [%s] %s:%d Opt in dictionary is invalid
VCSession [%s] %s:%d Failed to create the spatial metadata. status=%08x
VCSession [%s] %s:%d Failed to register the spatial metadata. status=%08x
VCSession [%s] %s:%d Failed to reserve channel for siri. status=%08x
VCSession [%s] %s:%d Failed to allocate spatial metadata entry. status=%08x
VCSession [%s] %s:%d Failed to retrieve the channel index. status=%08x
VCSession [%s] %s:%d Failed to allocate media type key
VCSession [%s] %s:%d Failed to create media queue with error 0x%X
VCSession [%s] %s:%d VCMediaQueue size threshold exceeded for mediaQueueStreamId=%u queueSizeInSecond=%f - FLUSHING!
VCSession [%s] %s:%d %@(%p) VCMediaQueue size threshold exceeded for mediaQueueStreamId=%u queueSizeInSecond=%f - FLUSHING!
VCSession [%s] %s:%d Should not handle media queue threshold exceeded with type=%d for mediaQueueStreamId=%u queueSize=%f!
VCSession [%s] %s:%d %@(%p) Should not handle media queue threshold exceeded with type=%d for mediaQueueStreamId=%u queueSize=%f!
VCSession [%s] %s:%d No VCMediaQueue created!
VCSession [%s] %s:%d Screen is enabled, constraining the local camera framerate=%d fps
VCSession [%s] %s:%d %@(%p) Screen is enabled, constraining the local camera framerate=%d fps
VCSession [%s] %s:%d Too many remote Participants %lu, constraining the local capture to %d fps
VCSession [%s] %s:%d %@(%p) Too many remote Participants %lu, constraining the local capture to %d fps
VCSession [%s] %s:%d Removing or adding a remote participant %lu, changing max video capture framerate to %d fps
VCSession [%s] %s:%d %@(%p) Removing or adding a remote participant %lu, changing max video capture framerate to %d fps
VCSession [%s] %s:%d Restoring camera capture framerate to %d fps
VCSession [%s] %s:%d %@(%p) Restoring camera capture framerate to %d fps
VCSession [%s] %s:%d SSRC collision detected! SSRC=%u
VCSession [%s] %s:%d Security key material with key index '%@' added
VCSession [%s] %s:%d Start pruning keys in the security key manager due to membershipChangeReason: %@
VCSession [%s] %s:%d Send initial state to participant=%@. audioEnabled=%d videoEnabled=%d screenEnabled=%d
VCSession [%s] %s:%d Broadcasting initial state. audioEnabled=%d videoEnabled=%d screenEnabled=%d
VCSession [%s] %s:%d Fixed label '%s' is being used due to default
VCSession [%s] %s:%d config must not be nil
VCSession [%s] %s:%d remoteParticipant must not be nil
VCSession [%s] %s:%d Failed to create uplink encryption label holder
VCSession [%s] %s:%d Failed to create downlink encryption label holder
VCSession [%s] %s:%d Failed to create uplink security key holder
VCSession [%s] %s:%d Failed to create downlink security key holder
VCSession [%s] %s:%d Failed to compose control channel configuration for participant '%llu'
VCSession [%s] %s:%d Failed to add participant '%llu' to Control Channel list of active participants
VCSession [%s] %s:%d Participant count:%d
VCSession [%s] %s:%d remoteParticipantIDs = %p
VCSession [%s] %s:%d Load switch useMediaDrivenDuplication %d
VCSession [%s] %s:%d Received encryption info from IDS with destination[%@]
VCSession [%s] %s:%d %@(%p) Received encryption info from IDS with destination[%@]
VCSession [%s] %s:%d Reporting agent is not properly configured
VCSession [%s] %s:%d %@(%p) Reporting agent is not properly configured
VCSession [%s] %s:%d Session Event failed - EventType:%d needs a participant but it is nil
VCSession [%s] %s:%d %@(%p) Session Event failed - EventType:%d needs a participant but it is nil
VCSession [%s] %s:%d EventType:%d is not relevant for Session Remote Participant Event logging
VCSession [%s] %s:%d %@(%p) EventType:%d is not relevant for Session Remote Participant Event logging
VCSession [%s] %s:%d Adding participant[%s]
VCSession [%s] %s:%d %@(%p) Adding participant[%s]
VCSession [%s] %s:%d Another participant with same idsParticipantID=%llu already exists!
VCSession [%s] %s:%d %@(%p) Another participant with same idsParticipantID=%llu already exists!
VCSession [%s] %s:%d Attempting to add a remote participant that is using same uuid as local participant's uuid=%@!
VCSession [%s] %s:%d %@(%p) Attempting to add a remote participant that is using same uuid as local participant's uuid=%@!
VCSession [%s] %s:%d Failed to configure Remote Participant
VCSession [%s] %s:%d Failed to add and start Remote Participant for One to One
VCSession [%s] %s:%d OneToOne config was unable to be setup for remoteParticipant=%p participantID=%llu
VCSession [%s] %s:%d Removing participant[%@]
VCSession [%s] %s:%d %@(%p) Removing participant[%@]
VCSession [%s] %s:%d Session stop in progress
VCSession [%s] %s:%d %@(%p) Session stop in progress
VCSession [%s] %s:%d Session is already started/starting
VCSession [%s] %s:%d %@(%p) Session is already started/starting
VCSession [%s] %s:%d Local source marked as invalid. Can't start.
VCSession [%s] %s:%d %@(%p) Local source marked as invalid. Can't start.
VCSession [%s] %s:%d Session already stopped. stopError=%p
VCSession [%s] %s:%d %@(%p) Session already stopped. stopError=%p
VCSession [%s] %s:%d Session stop when start in progress, transitioning to stopping
VCSession [%s] %s:%d Tearing down session
VCSession [%s] %s:%d VCSession:[%p] configurationDict:[%@]
VCSession [%s] %s:%d %@(%p) VCSession:[%p] configurationDict:[%@]
VCSession [%s] %s:%d VCSession:[%p] Failed to update the session configuration
VCSession [%s] %s:%d VCSession:[%p] Failed to update the local participant configuration
VCSession [%s] %s:%d VCSession:[%p] Failed to update the remote participant:[%@] configuration
VCSession [%s] %s:%d Participant didStart:%d error:[%@] participantID[%@] %@
VCSession [%s] %s:%d %@(%p) Participant didStart:%d error:[%@] participantID[%@] %@
VCSession [%s] %s:%d Session failed to start.
VCSession [%s] %s:%d %@(%p) Session failed to start.
@:@ VCSession-didStart
VCSession [%s] %s:%d @:@ VCSession-didStart (%p)
VCSession [%s] %s:%d Resetting Participant shouldStart to false as session state=%d failed to move to start, participantID[%@] %@
VCSession [%s] %s:%d %@(%p) Resetting Participant shouldStart to false as session state=%d failed to move to start, participantID[%@] %@
VCSession [%s] %s:%d remoteScreenAttributes=%@
VCSession [%s] %s:%d Participant didStopWithError:[%@] participantID[%@] %@
VCSession [%s] %s:%d %@(%p) Participant didStopWithError:[%@] participantID[%@] %@
VCSession [%s] %s:%d @=@ Health: VCSession-local localParticipant=%@, videoTxBitrate=%u kbps,%@ audioTxBitrate=%u kbps [%@] avTxTimestamps=%@
VCSession [%s] %s:%d @=@ Health: VCSession-remote remoteParticipant=%@, videoStreamID=%@, audioStreamID=%@, videoRxBitrate=%u kbps, videoRxFrameRate=%3.1f, audioRxBitrate=%u kbps videoRxResolution=%@
VCSession [%s] %s:%d [VCSession]: reporting periodic task: strongSelf == nil
VCSession [%s] %s:%d VCMoments requestee %@, RTP timestamp %@
VCSession [%s] %s:%d capabilities=0x%02x, imageType=%d, videoCodec=%d
VCSession [%s] %s:%d Reporting is disabled.
VCSession [%s] %s:%d Reporting backends=%@
 [%s] %s:%d screen capture capability: %ld
 [%s] %s:%d inDelegate=%@ config=%@
 [%s] %s:%d Failed to create XPC connection
 [%s] %s:%d Failed to create process queue
 [%s] %s:%d Error initializing Screen Capture. Deallocing
 [%s] %s:%d start capture
 [%s] %s:%d stop capture
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCAudioRelayIOController.m:%d: Failed to allocate secondary buffer
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCAudioRelayIOController.m:%d: Failed to create the audio limiter
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCAudioRelayIOController.m:%d: Failed to start the audio limiter
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCAudioRelayIOController.m:%d: Failed to create the relay IO
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCAudioRelayIOController.m:%d: Failed to start the relay IO
 [%s] %s:%d Client facing:%d relay stopped
 [%s] %s:%d %d:%d: State change: %@ (%d) -> %@ (%d)
 [%s] %s:%d Registering clientIO[%p]
 [%s] %s:%d Unregistering clientIO[%p]
 [%s] %s:%d %p
 [%s] %s:%d Failed to configure the audio IO
 [%s] %s:%d could not create queue
 [%s] %s:%d could not audio buffers
 [%s] %s:%d could not create audio buffer list
 [%s] %s:%d could not enque audio buffer
 [%s] %s:%d %p Error returning output to audio buffer pool
 [%s] %s:%d %p pool queue full with count %d
 [%s] %s:%d %p output queue empty with count %d
 [%s] %s:%d %p audio sink buffer received
 [%s] %s:%d %p output queue full with count %d
 [%s] %s:%d %p pool queue empty with count %d
 [%s] %s:%d %s Audio callback called too quickly. Delta:%f
 [%s] %s:%d %s Unexpected timestamp received: %u, expected:%u hostTimeDelta=%f lastTimestamp=%llu -> timestamp=%llu
 [%s] %s:%d %s Real time miss. Timestamp jumped: delta=%u (%u to %u), host time: delta=%f (sampleCount=%d) (%f to %f). lastTimestamp=%llu -> timestamp=%llu
 [%s] %s:%d [Local] Expensive %d, constraint %d, 5G %d. [Remote] Expensive %d, constraint %d, 5G %d
 [%s] %s:%d UpdateMTU MTU: %d -> %d Cellular: %d/%d
 [%s] %s:%d VCConnection: connection to check is nil
 [%s] %s:%d VCConnection: isOnSameInterfacesAndQRSessionWithConnection: %s vs. %s
 [%s] %s:%d VCConnection: isOnSameInterfacesAndQRSessionWithConnection: %s
 [%s] %s:%d Unknown IDSDataChannelRATType %lu
VCRC [%s] %s:%d wrong type of statistics message is processed by VCRateControl WiFi
VCRC [%s] %s:%d media controller is required for VCRateControl
VCTextTransmitter [%s] %s:%d 
VCTextTransmitter [%s] %s:%d %@(%p) 
VCTextTransmitter [%s] %s:%d Trying to send when the transmitter is stopped!
VCTextTransmitter [%s] %s:%d %@(%p) Trying to send when the transmitter is stopped!
VCTextTransmitter [%s] %s:%d Sending text:%@
VCTextTransmitter [%s] %s:%d %@(%p) Sending text:%@
VCTextTransmitter [%s] %s:%d failed to send RTP
VCTextTransmitter [%s] %s:%d %@(%p) failed to send RTP
VCTextTransmitter [%s] %s:%d Invalid payload!
VCTextTransmitter [%s] %s:%d Invalid red payload!
VCTextTransmitter [%s] %s:%d Starting sending heartbeat (interval=%f)
VCTextTransmitter [%s] %s:%d %@(%p) Starting sending heartbeat (interval=%f)
VCTextTransmitter [%s] %s:%d Failed to create polling
VCTextTransmitter [%s] %s:%d %@(%p) Failed to create polling
 [%s] %s:%d Reorder profile probability: %2.2f correlation: %2.2f gap: %d
 [%s] %s:%d _videoPriorityEnabled=%d
 [%s] %s:%d AVCDashboard DisplayURL: https://avc-gft-dashboard.apple.com/multiway/conference/%@
 [%s] %s:%d Failed to allocate generated stream ID set
 [%s] %s:%d %@(%p) Failed to allocate generated stream ID set
 [%s] %s:%d Failed to allocate generated SSRC set
 [%s] %s:%d %@(%p) Failed to allocate generated SSRC set
 [%s] %s:%d Failed to allocate power spectrum source
 [%s] %s:%d %@(%p) Failed to allocate power spectrum source
 [%s] %s:%d Failed to allocate oneToOne streamInfo dictionary
 [%s] %s:%d %@(%p) Failed to allocate oneToOne streamInfo dictionary
 [%s] %s:%d Failed to create uplinkBandwidthAllocators
 [%s] %s:%d %@(%p) Failed to create uplinkBandwidthAllocators
 [%s] %s:%d Failed to allocate config provider
 [%s] %s:%d Failed to setup the stream inputs
 [%s] %s:%d Failed to setup the stream groups
 [%s] %s:%d %@(%p) Failed to setup the stream groups
 [%s] %s:%d %@(%p) Failed to allocate config provider
 [%s] %s:%d Failed to setup audio streams
 [%s] %s:%d %@(%p) Failed to setup audio streams
 [%s] %s:%d Failed to setup video stream
 [%s] %s:%d %@(%p) Failed to setup video stream
 [%s] %s:%d %@(%p) Failed to setup the stream inputs
 [%s] %s:%d video payload types: %@, audio payload types: %@
 [%s] %s:%d Failed to initialize media negotiator
 [%s] %s:%d %@(%p) Failed to initialize media negotiator
 [%s] %s:%d Failed to create participant info
 [%s] %s:%d %@(%p) Failed to create participant info
 [%s] %s:%d Participant init %@
 [%s] %s:%d %@(%p) Participant init %@
 [%s] %s:%d Failed to create bandwith allocator array
 [%s] %s:%d %@(%p) Failed to create bandwith allocator array
 [%s] %s:%d Failed to create VCSessionUplinkBandwidthAllocatorMultiway
 [%s] %s:%d %@(%p) Failed to create VCSessionUplinkBandwidthAllocatorMultiway
 [%s] %s:%d Failed to create VCSessionUplinkBandwidthAllocatorOneToOne
 [%s] %s:%d %@(%p) Failed to create VCSessionUplinkBandwidthAllocatorOneToOne
 [%s] %s:%d Failed to unserialize the participant info
 [%s] %s:%d Media blob not found in participant info
 [%s] %s:%d Failed to allocate the negotiation local configuration
 [%s] %s:%d Failed to initialize the negotiation local configuration
 [%s] %s:%d No video streams to set up
 [%s] %s:%d %@(%p) No video streams to set up
 [%s] %s:%d Stream group ID missing in stream group config
 [%s] %s:%d Stream input ID missing in stream group config
 [%s] %s:%d Unknown stream input ID=%@
 [%s] %s:%d Stream token already assigned for captureSourceID=%d
 [%s] %s:%d %@(%p) Stream token already assigned for captureSourceID=%d
 [%s] %s:%d Failed to setup stream
 [%s] %s:%d %@(%p) Failed to setup stream
 [%s] %s:%d Failed to register stream group for capture source ID=%d
 [%s] %s:%d setupStreamGroupMediaSync failed
 [%s] %s:%d _enableRedundancy set to YES by forceFECRepairStream
 [%s] %s:%d %@(%p) _enableRedundancy set to YES by forceFECRepairStream
 [%s] %s:%d Starting stream groups with oneToOneModeEnabled=%d
 [%s] %s:%d %@(%p) Starting stream groups with oneToOneModeEnabled=%d
 [%s] %s:%d no oneToOneSettings video config found, use default maxFrameRate=%d
 [%s] %s:%d %@(%p) no oneToOneSettings video config found, use default maxFrameRate=%d
 [%s] %s:%d maxFrameRate=%d
 [%s] %s:%d %@(%p) maxFrameRate=%d
 [%s] %s:%d Setting uplink bit rate cap cell is %d
 [%s] %s:%d %@(%p) Setting uplink bit rate cap cell is %d
 [%s] %s:%d Setting uplink bit rate cap wifi is %d
 [%s] %s:%d %@(%p) Setting uplink bit rate cap wifi is %d
 [%s] %s:%d Updating videoEnabled on the oneToOne audio stream
 [%s] %s:%d %@(%p) Updating videoEnabled on the oneToOne audio stream
 [%s] %s:%d OneToOne Audio Stream is already configured in mode %d for videoEnabled %d
 [%s] %s:%d %@(%p) OneToOne Audio Stream is already configured in mode %d for videoEnabled %d
 [%s] %s:%d OneToOne Audio Stream was unable to be reconfigured
 [%s] %s:%d %@(%p) OneToOne Audio Stream was unable to be reconfigured
 [%s] %s:%d Updating videoEnabled on the local participant audioIO
 [%s] %s:%d %@(%p) Updating videoEnabled on the local participant audioIO
 [%s] %s:%d Failed to update videoEnabled=%d on the audio stream - stopping call
 [%s] %s:%d %@(%p) Failed to update videoEnabled=%d on the audio stream - stopping call
 [%s] %s:%d Failed to update camera stream group with videoEnabled=%d
 [%s] %s:%d %@ videoEnabled[%d]
 [%s] %s:%d %@(%p) %@ videoEnabled[%d]
 [%s] %s:%d %@ screenEnabled[%d]
 [%s] %s:%d %@(%p) %@ screenEnabled[%d]
 [%s] %s:%d Changing participant videoPaused to %d
 [%s] %s:%d %@(%p) Changing participant videoPaused to %d
 [%s] %s:%d Ignoring the change of video captureFrameRate. currentVideoCaptureFrameRate %d maxSupportedMultiwayFrameRate %d framerate %d
 [%s] %s:%d Setting local capture rate, currentVideoCaptureFrameRate=%d fps, maxSupportedMultiwayCameraFrameRate=%d fps state=%d
 [%s] %s:%d Failed to stop Multiway streams. error=%@
 [%s] %s:%d updateStreamGroups failed with error=%@
 [%s] %s:%d Failed to set mode=%d for stream groups
 [%s] %s:%d %@(%p) Failed to set mode=%d for stream groups
 [%s] %s:%d We are already in the correct OneToOne mode
 [%s] %s:%d Switching into oneToOne mode
 [%s] %s:%d Switching out of oneToOne mode
 [%s] %s:%d stopping
 [%s] %s:%d %@(%p) stopping
 [%s] %s:%d Updating local media settings with config :%@
 [%s] %s:%d Unable to apply the cached configuration
 [%s] %s:%d streamConfigurations cannot be nil!
 [%s] %s:%d Failed to allocate stream group
 [%s] %s:%d Unable to retrieve the format for captureSource=%d streamGroupID=%s
 [%s] %s:%d Failed to initalize video stream group
 [%s] %s:%d %@(%p) Failed to initalize video stream group
 [%s] %s:%d Failed to set up video stream %d
 [%s] %s:%d %@(%p) Failed to set up video stream %d
 [%s] %s:%d Base temporal layer hasn't been configured for streamID=%d
 [%s] %s:%d %@(%p) Base temporal layer hasn't been configured for streamID=%d
 [%s] %s:%d Stream setup failed
 [%s] %s:%d temporalStream configured streamGroupID=%s baseStreamId=%d repairStreamId=%d maxNetworkBitrate=%d temporalID=%d maxNetworkBitrate=%d
 [%s] %s:%d %@(%p) temporalStream configured streamGroupID=%s baseStreamId=%d repairStreamId=%d maxNetworkBitrate=%d temporalID=%d maxNetworkBitrate=%d
 [%s] %s:%d Failed to allocate audio stream group config
 [%s] %s:%d Failed to set up audio stream %d
 [%s] %s:%d %@(%p) Failed to set up audio stream %d
 [%s] %s:%d Failed to initalize audio stream group
 [%s] %s:%d %@(%p) Failed to initalize audio stream group
 [%s] %s:%d Stream setup failed for streamGroupId=%s
 [%s] %s:%d Failed to setup video stream for streamGroupId=%s
 [%s] %s:%d %@(%p) Failed to setup video stream for streamGroupId=%s
 [%s] %s:%d Failed to setup audio stream
 [%s] %s:%d %@(%p) Failed to setup audio stream
 [%s] %s:%d Audio configuration for media negotiator not supported for mediaType=%@
 [%s] %s:%d Failed to create audio configuration for media negotiator for mediaType=%@
 [%s] %s:%d Failed to convert mediaStreamConfig cipherSuite(%ld) to negotiatorStreamGroupConfig cipherSuite
 [%s] %s:%d Failed to allocate media blob stream group config
 [%s] %s:%d Failed to allocate media blob stream group stream config
 [%s] %s:%d Failed to retrieve the cipher suite for stream. streamGroupID=%s
 [%s] %s:%d Skipping stream = %d
 [%s] %s:%d Failed to allocate media blob stream group codec config
 [%s] %s:%d Invalid payload for video, payload size: %lu
 [%s] %s:%d Invalid rtpPayload for video, rtpPayload size: %lu
 [%s] %s:%d Failed to create U1 stream group negotiation config for groupID=%s
 [%s] %s:%d Failed to create new stream group negotiation config
 [%s] %s:%d Successfully created stream group U1 config for groupID=%s
 [%s] %s:%d Failed to create stream group U1 config for groupID=%s
 [%s] %s:%d Failed to initialize stream groups for local configuration
 [%s] %s:%d %@(%p) Failed to initialize stream groups for local configuration
 [%s] %s:%d Load switch highFecEnabled %d
 [%s] %s:%d currentRedundancyPercentage before abTestSwitch %d
 [%s] %s:%d maxAllowedRedundancyPercentage after abTestSwitch %d
 [%s] %s:%d Load switch vplrFecEnabled %d
 [%s] %s:%d Failed to copy the local configuration
 [%s] %s:%d %@(%p) Failed to copy the local configuration
 [%s] %s:%d Failed to reinitialize the 1:1 media negotiator
 [%s] %s:%d %@(%p) Failed to reinitialize the 1:1 media negotiator
 [%s] %s:%d Failed to extract media blob from remote participant info
 [%s] %s:%d %@(%p) Failed to extract media blob from remote participant info
 [%s] %s:%d Failed to negotiate one to one settings with remote media blob
 [%s] %s:%d %@(%p) Failed to negotiate one to one settings with remote media blob
 [%s] %s:%d Failed to negotiate with devices that does not support one to one
 [%s] %s:%d %@(%p) Failed to negotiate with devices that does not support one to one
 [%s] %s:%d Remote callInfoBlob = %s
 [%s] %s:%d forcing oneToOneVideoConfig settings width=%lu, height=%lu, framerate=%lufps
 [%s] %s:%d Error setting up the config for one-to-one mode for streamGroupId=%s
 [%s] %s:%d %@(%p) Error setting up the config for one-to-one mode for streamGroupId=%s
 [%s] %s:%d Failed to set up video stream for streamGroupId=%s
 [%s] %s:%d %@(%p) Failed to set up video stream for streamGroupId=%s
 [%s] %s:%d Failed to update config for stream group=%@ configuration=%@
 [%s] %s:%d Error setting up the audio config for one-to-one mode for streamGroupId=%s
 [%s] %s:%d %@(%p) Error setting up the audio config for one-to-one mode for streamGroupId=%s
 [%s] %s:%d Error setting up the audio stream for one-to-one mode for streamGroupId=%s
 [%s] %s:%d %@(%p) Error setting up the audio stream for one-to-one mode for streamGroupId=%s
 [%s] %s:%d Failed to allocate audio stream group config for streamGroupId=%s
 [%s] %s:%d Error configuring stream infos for streamGroupID=%s
 [%s] %s:%d Error configuring streamGroupID=%s
 [%s] %s:%d Setting one-to-one remote participant data
 [%s] %s:%d Configuring U+1 screen and system audio streams
 [%s] %s:%d %@(%p) Configuring U+1 screen and system audio streams
 [%s] %s:%d Calling configureWithDeviceRole with AVC operatingMode=%d shouldConfigureGFTStreams=%d
 [%s] %s:%d %@(%p) Calling configureWithDeviceRole with AVC operatingMode=%d shouldConfigureGFTStreams=%d
 [%s] %s:%d Fail configure participant
 [%s] %s:%d %@(%p) Fail configure participant
 [%s] %s:%d U+1 config for StreamGroupID=%s not set
 [%s] %s:%d Failed to configure one to one video streams StreamGroupID=%s
 [%s] %s:%d Failed to update config for StreamGroupID=%s
 [%s] %s:%d Failed to configure one to one audio streams StreamGroupID=%u
 [%s] %s:%d Failed to update config for StreamGroupID=%u
 [%s] %s:%d Already received Key material, updating oneToOne streams with the cached key material
 [%s] %s:%d Failed to create one to one audio stream config for streamGroupId=%s
 [%s] %s:%d %@(%p) Failed to create one to one audio stream config for streamGroupId=%s
 [%s] %s:%d Failed to create one to one video stream config
 [%s] %s:%d %@(%p) Failed to create one to one video stream config
 [%s] %s:%d Recalculating bandwidth allocation _isRemotePresentationLarge=%u width=%f height=%f, presentationState=%u
 [%s] %s:%d %@(%p) Recalculating bandwidth allocation _isRemotePresentationLarge=%u width=%f height=%f, presentationState=%u
 [%s] %s:%d Missing payload:%d (codecType:%d). Supported rules:%@ secondary:%@
 [%s] %s:%d %@(%p) Missing payload:%d (codecType:%d). Supported rules:%@ secondary:%@
 [%s] %s:%d Local Participant callInfoBlob = %@
 [%s] %s:%d %@(%p) Local Participant callInfoBlob = %@
 [%s] %s:%d Failed to allocate participant info
 [%s] %s:%d %@(%p) Failed to allocate participant info
 [%s] %s:%d Failed to create new invite blob
 [%s] %s:%d %@(%p) Failed to create new invite blob
 [%s] %s:%d Video stream config is missing for streamGroupID=%s!
 [%s] %s:%d %@(%p) Video stream config is missing for streamGroupID=%s!
 [%s] %s:%d Failed to allocate video stream!
 [%s] %s:%d %@(%p) Failed to allocate video stream!
 [%s] %s:%d video stream successfully created: %p! streamGroupID=%s streamId=%d repairStreamId=%d
 [%s] %s:%d %@(%p) video stream successfully created: %p! streamGroupID=%s streamId=%d repairStreamId=%d
 [%s] %s:%d invalid capabilies dictionary for streamGroupID=%s!
 [%s] %s:%d %@(%p) invalid capabilies dictionary for streamGroupID=%s!
 [%s] %s:%d Failed to allocate participant video stream info for streamGroupID=%s
 [%s] %s:%d %@(%p) Failed to allocate participant video stream info for streamGroupID=%s
 [%s] %s:%d Audio stream config is missing!
 [%s] %s:%d %@(%p) Audio stream config is missing!
 [%s] %s:%d Failed to allocate audio stream!
 [%s] %s:%d %@(%p) Failed to allocate audio stream!
 [%s] %s:%d audio stream successfully created: %p! streamGroupID=%s streamId=%d repairStreamId=%d
 [%s] %s:%d %@(%p) audio stream successfully created: %p! streamGroupID=%s streamId=%d repairStreamId=%d
 [%s] %s:%d invalid capabilies dictionary!
 [%s] %s:%d %@(%p) invalid capabilies dictionary!
 [%s] %s:%d Failed to allocate participant audio stream info
 [%s] %s:%d %@(%p) Failed to allocate participant audio stream info
 [%s] %s:%d Failed to initialize audio rule collection!
 [%s] %s:%d %@(%p) Failed to initialize audio rule collection!
 [%s] %s:%d _videoPriorityEnabled=%d, maxMediaBitrate=%u, encodingMode=%d
 [%s] %s:%d MEDIA FRACTURE SITUATION! peer asking for unknown stream:%@
 [%s] %s:%d %@(%p) MEDIA FRACTURE SITUATION! peer asking for unknown stream:%@
 [%s] %s:%d Remote %s %@
 [%s] %s:%d %@(%p) Remote %s %@
 [%s] %s:%d Sender side redundancy changed to[%d]
 [%s] %s:%d Uplink TargetBitrate changed from %u to %u
 [%s] %s:%d %@(%p) Uplink TargetBitrate changed from %u to %u
 [%s] %s:%d Uplink TargetBitrate set to %u
 [%s] %s:%d %@(%p) Uplink TargetBitrate set to %u
 [%s] %s:%d OneToOne TargetBitrate changed from %u to %u (state=%u, rateChangeCounter=%u)
 [%s] %s:%d %@(%p) OneToOne TargetBitrate changed from %u to %u (state=%u, rateChangeCounter=%u)
 [%s] %s:%d video no-op no MKM
 [%s] %s:%d %@(%p) video no-op no MKM
 [%s] %s:%d frameRate=%u
 [%s] %s:%d %@(%p) frameRate=%u
 [%s] %s:%d avConferencePreviewError %@
 [%s] %s:%d %@(%p) avConferencePreviewError %@
 [%s] %s:%d thermalLevelDidChange %u
 [%s] %s:%d %@(%p) thermalLevelDidChange %u
 [%s] %s:%d cameraAvailabilityDidChange=%d ignored
 [%s] %s:%d %@(%p) cameraAvailabilityDidChange=%d ignored
 [%s] %s:%d %@(%p) audio no-op no MKM
 [%s] %s:%d Active connection changed with new connection uplinkBitrateCap %d
 [%s] %s:%d %@(%p) Active connection changed with new connection uplinkBitrateCap %d
 [%s] %s:%d Active connection changed with new connection oneToOneUplinkBitrateCap %d
 [%s] %s:%d %@(%p) Active connection changed with new connection oneToOneUplinkBitrateCap %d
 [%s] %s:%d This should no longer get called, VCSessionParticipantLocal is no longer managing U+1 streams
 [%s] %s:%d streamGroup=%@ didSuspendStreams=%d isMixingSystemAudio=%d
 [%s] %s:%d Participant is not running, ignoring delegate callback.
 [%s] %s:%d Unexpected number of mediaTypes for streamGroup=%@ didSuspendStreams=%d isMixingSystemAudio=%d
 [%s] %s:%d VCSessionBitrateArbiter: value %d failed bitrate range check, ignored
 [%s] %s:%d Overriding %@ for connection type %d isExpensive %d with storebag value of %d
 [%s] %s:%d Hardware does not support connection type %d isExpensive %d, ignored %@ storebag value of %d
 [%s] %s:%d Parameter 'socketDictionary' may not be NULL
 [%s] %s:%d 'rtcpSocket' may not be kVCInvalidSocket for regular mode
 [%s] %s:%d 'rtpSocket' may not be kVCInvalidSocket
 [%s] %s:%d initWithRTPSocket:%d RTCPSocket:%d failed
 [%s] %s:%d Invalid RTP socket
 [%s] %s:%d _rtpVFD creation failed with error '%d'
 [%s] %s:%d _rtcpVFD creation failed with error '%d'
 [%s] %s:%d initializeNetworkMTUWithSocket failed with error '%d'
 [%s] %s:%d vfd creation failed
 [%s] %s:%d VTP_SetSourceDestinationWithIPPort failed with error '%d'
 [%s] %s:%d Could not get property '%@' for transport stream '%@'
 [%s] %s:%d VTP_GetPktType failed
 [%s] %s:%d VTP_SetSourceDestinationWithIPPort failed
 [%s] %s:%d Parameter 'address' must not be NULL
 [%s] %s:%d getSockaddrStorage:size: failed with error '%d'
 [%s] %s:%d connect failed with error '%d'
 [%s] %s:%d New configuration matches current one '%@'. Ignoring...
 [%s] %s:%d Failed to set up remoteAddress on rtpSocket
 [%s] %s:%d RTCP port is set to '%d'
 [%s] %s:%d Failed to set up remoteAddress on rtcpSocket
 [%s] %s:%d Failed to set up remoteAddress on transport stream '%@'
 [%s] %s:%d Invalid stream type '%d'
 [%s] %s:%d sourceDestinationInfo has not been set. streamType=%d
 [%s] %s:%d VTP socket creation failed
 [%s] %s:%d VTP_SetSocketMode failed
 [%s] %s:%d VTP_SetPktType failed
 [%s] %s:%d Failed to configure transport stream parameters for socket '%d'
 [%s] %s:%d Failed to set vfd parameters for socket '%d'
 [%s] %s:%d Creating NW Connection based on network interface=%s
 [%s] %s:%d Not setting unexpected transport type %d
 [%s] %s:%d getsockname(%d) failed
 [%s] %s:%d sendTimings:Key = %d, value = %d
 [%s] %s:%d Parameter 'filter' should not be NULL
 [%s] %s:%d Object '%@' is not a valid VCPacketFilterRTCP
 [%s] %s:%d Property name '%@' and property value out '%@' must not be NULL
 [%s] %s:%d kVCPacketFilterRTCPProperty_RemoteSSRC not set
 [%s] %s:%d kVCPacketFilterRTCPProperty_LocalSSRC not set
 [%s] %s:%d Unsupported property '%@' requested
 [%s] %s:%d Unsupported audioType=%d
 [%s] %s:%d %@(%p) Unsupported audioType=%d
 [%s] %s:%d No controller found for device role:%d
 [%s] %s:%d %@(%p) No controller found for device role:%d
 [%s] %s:%d Failed to create controller for deviceRole=%d audioType=%d direction=%d
 [%s] %s:%d %@(%p) Failed to create controller for deviceRole=%d audioType=%d direction=%d
 [%s] %s:%d Controller not found for device role:%d
 [%s] %s:%d %@(%p) Controller not found for device role:%d
 [%s] %s:%d Operation not allowed while the audio IO is running
 [%s] %s:%d %@(%p) Operation not allowed while the audio IO is running
 [%s] %s:%d VCAudioIO is being released but it is not in the right state: %d
 [%s] %s:%d %@(%p) VCAudioIO is being released but it is not in the right state: %d
 [%s] %s:%d VCAudioIO now in the right state to be released: %d
 [%s] %s:%d %@(%p) VCAudioIO now in the right state to be released: %d
 [%s] %s:%d isMuted=%d
 [%s] %s:%d %@(%p) isMuted=%d
 [%s] %s:%d Set direction from %d to %d. Current state:%d
 [%s] %s:%d %@(%p) Set direction from %d to %d. Current state:%d
 [%s] %s:%d Set spatialAudioDisabled from %d to %d. Current state:%d
 [%s] %s:%d %@(%p) Set spatialAudioDisabled from %d to %d. Current state:%d
 [%s] %s:%d The controller audio format is invalid!
 [%s] %s:%d %@(%p) The controller audio format is invalid!
 [%s] %s:%d Failed to create %s converter for audioIO:%p! Err:%d
 [%s] %s:%d %@(%p) Failed to create %s converter for audioIO:%p! Err:%d
 [%s] %s:%d Unexpected audioIO state:%d. Stop may have been called before the didStart callback
 [%s] %s:%d %@(%p) Unexpected audioIO state:%d. Stop may have been called before the didStart callback
 [%s] %s:%d Stream successfully started
 [%s] %s:%d %@(%p) Stream successfully started
 [%s] %s:%d Failed to start!!
 [%s] %s:%d %@(%p) Failed to start!!
 [%s] %s:%d completionHandler:%p
 [%s] %s:%d %@(%p) completionHandler:%p
 [%s] %s:%d Unexpected audioIO state:%d. Start may have been called before the didStop callback
 [%s] %s:%d %@(%p) Unexpected audioIO state:%d. Start may have been called before the didStop callback
 [%s] %s:%d Stream successfully stopped
 [%s] %s:%d %@(%p) Stream successfully stopped
 [%s] %s:%d Failed to stop!!
 [%s] %s:%d %@(%p) Failed to stop!!
 [%s] %s:%d Controller format: {%f, %7s, 0x%08x, %u, %u, %u, %u, %u} samplesPerFrame=%u
 [%s] %s:%d %@(%p) Controller format: {%f, %7s, 0x%08x, %u, %u, %u, %u, %u} samplesPerFrame=%u
 [%s] %s:%d Client format: {%f, %7s, 0x%08x, %u, %u, %u, %u, %u} samplesPerFrame=%u
 [%s] %s:%d %@(%p) Client format: {%f, %7s, 0x%08x, %u, %u, %u, %u, %u} samplesPerFrame=%u
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCAudioIO.m:%d: 
 [%s] %s:%d Starting... audioController=%@, controllerClient=%@, delegate=%@
 [%s] %s:%d %@(%p) Starting... audioController=%@, controllerClient=%@, delegate=%@
 [%s] %s:%d Start failed. error:%@
 [%s] %s:%d %@(%p) Start failed. error:%@
 [%s] %s:%d Executing start completion handler, succeeded=%d error=%@
 [%s] %s:%d %@(%p) Executing start completion handler, succeeded=%d error=%@
 [%s] %s:%d start timed out
 [%s] %s:%d %@(%p) start timed out
 [%s] %s:%d Stopping... audioController=%@, controllerClient=%@, delegate=%@
 [%s] %s:%d %@(%p) Stopping... audioController=%@, controllerClient=%@, delegate=%@
 [%s] %s:%d Stop failed. error:%@
 [%s] %s:%d %@(%p) Stop failed. error:%@
 [%s] %s:%d Executing stop completion handler, succeeded=%d error=%@
 [%s] %s:%d %@(%p) Executing stop completion handler, succeeded=%d error=%@
 [%s] %s:%d stop timed out
 [%s] %s:%d %@(%p) stop timed out
 [%s] %s:%d Failed to convert buffer. result=%08x
VCRC [%s] %s:%d dealloc called
VCRC [%s] %s:%d Start VCStatisticsCollectorQueue without VCRateControlStatisticsProc thread
VCRC [%s] %s:%d VCRateControlStatisticsProc thread create failed (%d)
VCRC [%s] %s:%d VCRateControlStatisticsProc thread started
VCRC [%s] %s:%d Stop VCStatisticsCollectorQueue without VCRateControlStatisticsProc thread
VCRC [%s] %s:%d VCRateControlStatisticsProc thread ended
VCRC [%s] %s:%d Invalid parameter. Collector=%p message=%p
VCRC [%s] %s:%d Collector is nil
VCRC [%s] %s:%d This should be called only with _shouldProcessMessageOnExternalThread is true
VCRC [%s] %s:%d Message queue [%p] full with queueSize=%d, queueFullCount=%u, statistic message ignored!
VCRC [%s] %s:%d Message queue [%p] is still full with queueSize=%d, queueFullCount=%u after flushing the low priority messages. High priroity statistic message will be ignored!
VCRC [%s] %s:%d Message queue [%p] with queueSize=%d, queueFullCount=%u should be flushed
VCRC [%s] %s:%d Message queue [%p] with queueSize=%d, queueFullCount=%u after low priority messages flushed
VCRC [%s] %s:%d Invalid parameter. queue=%p message=%p
 [%s] %s:%d Accelerate buffer  inputBufferLength=%d
 [%s] %s:%d Signal Correlation check failed
 [%s] %s:%d REJECTED accelerate (bestIndex %d > psolaMax %d)
 [%s] %s:%d Failed to allocate buffer for buffer info.
 [%s] %s:%d %@(%p) Failed to allocate buffer for buffer info.
 [%s] %s:%d Failed to create buffer infos array.
 [%s] %s:%d %@(%p) Failed to create buffer infos array.
 [%s] %s:%d VTPixelTransferSessionCreate failed %d (%p)
AVCStreamInput [%s] %s:%d @:@ AVCInputStream-init (%p) streamInputID=%@
@:@ AVCInputStream-init
AVCStreamInput [%s] %s:%d @:@ AVCInputStream-init (%p) streamInputID=%@ mediaType=%s didSucceed=%@ errorCode=%x %@
AVCStreamInput [%s] %s:%d Invalid ID
AVCStreamInput [%s] %s:%d Invalid sample buffer pool size
AVCStreamInput [%s] %s:%d Provided format is NULL
AVCStreamInput [%s] %s:%d Provided format is invalid
AVCStreamInput [%s] %s:%d No delegate specified
AVCStreamInput [%s] %s:%d Delegate queue is NULL
AVCStreamInput [%s] %s:%d Failed to create the XPC connection queue
AVCStreamInput [%s] %s:%d RemoteImageQueue could not be made on StreamInput client
AVCStreamInput [%s] %s:%d Could not get the shared pool allocator for the _senderQueue
AVCStreamInput [%s] %s:%d RemoteImageQueue failed to create sender xpc object
AVCStreamInput [%s] %s:%d Failed to allocate the XPC connection
@:@ %@-dealloc
AVCStreamInput [%s] %s:%d @:@ %@-dealloc (%p)
AVCStreamInput [%s] %s:%d Message=%s returned with an error=%@
AVCStreamInput [%s] %s:%d Failed to create remote queue
AVCStreamInput [%s] %s:%d useFigRemoteQueue=%d
AVCStreamInput [%s] %s:%d %@(%p) useFigRemoteQueue=%d
AVCStreamInput [%s] %s:%d Failed to encode the format description
AVCStreamInput [%s] %s:%d RemoteQueue creation and adding to XPC dictionary failed
AVCStreamInput [%s] %s:%d %s sendMessageSync failed
AVCStreamInput [%s] %s:%d %s returned with an error=%@
AVCStreamInput [%s] %s:%d No stream input ID provided. nsRet=%@
AVCStreamInput [%s] %s:%d streamInput=%@ server died while initializing the XPC connection. Don't try to reconnect since this instance will dealloc
@:@ %@-reset
AVCStreamInput [%s] %s:%d @:@ %@-reset (%p) streamInput=%s Successfully recovered
AVCStreamInput [%s] %s:%d streamInput=%s server died, notifying client
@:@ %@-didStart
AVCStreamInput [%s] %s:%d @:@ %@-didStart (%p)
@:@ %@-didStop
AVCStreamInput [%s] %s:%d @:@ %@-didStop (%p)
@:@ %@-didSuspend
AVCStreamInput [%s] %s:%d @:@ %@-didSuspend (%p)
@:@ %@-didResume
AVCStreamInput [%s] %s:%d @:@ %@-didResume (%p)
AVCStreamInput [%s] %s:%d Failed to submit frame. error=%@
AVCStreamInput [%s] %s:%d could not create XPC dictionary for AVCStreamInput
AVCStreamInput [%s] %s:%d streamInput=%p streamInputID=%s sampleBuffer is NULL
AVCStreamInput [%s] %s:%d streamInput=%p streamInputID=%s missing tile index
AVCStreamInput [%s] %s:%d streamInput=%p streamInputID=%s length=%zu data=%s sampleBuffer=%@
AVCStreamInput [%s] %s:%d streamInput=%p streamInputID=%s sampleBuffer=%@
 [%s] %s:%d init
 [%s] %s:%d %@(%p) init
 [%s] %s:%d RTPGetPreferredSendQueue failed %x
 [%s] %s:%d No preferred send queue. Falling back to default queue
 [%s] %s:%d Start VCRC rate control feedback
 [%s] %s:%d %@(%p) Start VCRC rate control feedback
 [%s] %s:%d Stop VCRC rate control feedback
 [%s] %s:%d %@(%p) Stop VCRC rate control feedback
 [%s] %s:%d Sending VCRC rate control info with owrd:%f, BWE:%d, burstyLoss:%d
 [%s] %s:%d Failed to VCMediaControlInfoSerializeWithData %X
 [%s] %s:%d Failed to send VCRC rate control feedback %X
 [%s] %s:%d Update VCRC information when _statisticsCollector is nil!
 [%s] %s:%d Network queue policies: %@
 [%s] %s:%d networkElementQueue %p and packet %p cannot not be nil!
 [%s] %s:%d Failed to dequeue the packet ID %u at time: %f!
 [%s] %s:%d _processCompleteHandler is nil. Network element is not connected correctly!
 [%s] %s:%d PacketCountInQueue is bad, size:%d
 [%s] %s:%d In-process captions handling is not supported.
 [%s] %s:%d AVCCaptionsClient: connect for streamToken:%u
 [%s] %s:%d AVCCaptionsClient: Failed connection for streamToken=%u Error=%s
 [%s] %s:%d AVCCaptionsClient: disconnect for streamToken:%u
 [%s] %s:%d Failed to create xpc command queue
 [%s] %s:%d Failed to create client to vcscreenshare array
 [%s] %s:%d Failed to create VCScreenCaptureManager
 [%s] %s:%d Stream input ID is nil
 [%s] %s:%d Provided format is NULL
 [%s] %s:%d %@(%p) Provided format is NULL
 [%s] %s:%d Provided delegate is NULL
 [%s] %s:%d %@(%p) Provided delegate is NULL
 [%s] %s:%d Provided delegate queue is NULL
 [%s] %s:%d %@(%p) Provided delegate queue is NULL
 [%s] %s:%d Failed to create the dispatch queue with queueName=%@
 [%s] %s:%d %@(%p) Failed to create the dispatch queue with queueName=%@
 [%s] %s:%d Failed to copy the stream input ID
 [%s] %s:%d %@(%p) Failed to copy the stream input ID
 [%s] %s:%d Invalidate was not called!
 [%s] %s:%d %@(%p) Invalidate was not called!
 [%s] %s:%d xpcClientQueue was null, cannot make the remote queue
 [%s] %s:%d Error making the receiver queue
 [%s] %s:%d Error received from the remote Queue=%d
 [%s] %s:%d Received unexpected operation=%d
 [%s] %s:%d Received nil sampleBuffer
@:@ AVAudioDevice-initWithDeviceID
 [%s] %s:%d @:@ AVAudioDevice-initWithDeviceID self=%@ initDeviceID=%@
 [%s] %s:%d Unable to get size for stream vector - deviceID=%lu, streamListDataSizeBytes=%u, status=%d
 [%s] %s:%d AudioObjectGetPropertyDataSize for kAudioDevicePropertyStreams returned streamListDataSizeBytes=%u for deviceID=%lu with status=%d
 [%s] %s:%d streamList calloc failed
 [%s] %s:%d Unable to get stream vector - streamList=%p, status=%d, expectedStreamListDataSizeBytes=%u, actualStreamListDataSizeBytes=%u
 [%s] %s:%d Returning streamList=%p with streamListDataSizeBytes=%u, streamListLength=%u, and status=%d
 [%s] %s:%d Unable to get kAudioStreamPropertyIsTapStream data from streamID=%u on _deviceID=%@, status=%d - array value i=%u out of total=%u
 [%s] %s:%d deviceHasOnlyTapStreamInputs=%{BOOL}d, _deviceId=%@, _deviceName [%@], isTapStream=%u
 [%s] %s:%d Input device created by CoreAudio result=%{BOOL}d
 [%s] %s:%d AudioDeviceGetProperty failed for JackIsConnected error=%s [%d] deviceId=%@
 [%s] %s:%d AudioDeviceGetProperty kAudioDevicePropertyJackIsConnected returned nValue=%u
 [%s] %s:%d Built-in audio device[%@]'s data source control ID[%u]
 [%s] %s:%d audioDevice=%p isInputAvailable=%{BOOL}d isValidInputDevice=%{BOOL}d
 [%s] %s:%d audioDevice=%p outputAvailable=%{BOOL}d
 [%s] %s:%d Current emulated network packet loss: [%f, %X], queue size: %d
 [%s] %s:%d network queue is full with packet count: %u, limit: %u
 [%s] %s:%d Filter out statistics not belong to this redundancyController with statisticsID:%llu
 [%s] %s:%d Audio redundancy percentage change due to packet loss: %2.3f, new threshold: %2.3f [%d to %d] plrEnvelope=%2.3f
 [%s] %s:%d Participant Data is nil
 [%s] %s:%d %@(%p) Participant Data is nil
 [%s] %s:%d Failed to allocate the positional info
 [%s] %s:%d %@(%p) Failed to allocate the positional info
 [%s] %s:%d Failed to allocate the media states dictionary
 [%s] %s:%d %@(%p) Failed to allocate the media states dictionary
 [%s] %s:%d The participant ID is nil
 [%s] %s:%d %@(%p) The participant ID is nil
 [%s] %s:%d The participant data is nil
 [%s] %s:%d %@(%p) The participant data is nil
 [%s] %s:%d Failed to initialize the media states
 [%s] %s:%d %@(%p) Failed to initialize the media states
 [%s] %s:%d ParticipantID=%@ mediaType=%@ mediaState=%@
 [%s] %s:%d %@(%p) ParticipantID=%@ mediaType=%@ mediaState=%@
 [%s] %s:%d ParticipantID=%@ mediaType=%@ is already in mediaState=%@
 [%s] %s:%d %@(%p) ParticipantID=%@ mediaType=%@ is already in mediaState=%@
 [%s] %s:%d Participant audio is already muted [%d]
 [%s] %s:%d %@(%p) Participant audio is already muted [%d]
 [%s] %s:%d audioMuted[%d]
 [%s] %s:%d %@(%p) audioMuted[%d]
 [%s] %s:%d Participant volume is already [%f]
 [%s] %s:%d %@(%p) Participant volume is already [%f]
 [%s] %s:%d volume[%f]
 [%s] %s:%d %@(%p) volume[%f]
 [%s] %s:%d videoQuality[%d]
 [%s] %s:%d %@(%p) videoQuality[%d]
 [%s] %s:%d videoQuality is already at %d
 [%s] %s:%d %@(%p) videoQuality is already at %d
 [%s] %s:%d videoQuality[%d] is cached until endParticipantConfiguration is called.
 [%s] %s:%d %@(%p) videoQuality[%d] is cached until endParticipantConfiguration is called.
 [%s] %s:%d visibilityIndex[%d]
 [%s] %s:%d %@(%p) visibilityIndex[%d]
 [%s] %s:%d visibilityIndex is already at %d
 [%s] %s:%d %@(%p) visibilityIndex is already at %d
 [%s] %s:%d visibilityIndex[%d] is cached until endParticipantConfiguration is called.
 [%s] %s:%d %@(%p) visibilityIndex[%d] is cached until endParticipantConfiguration is called.
 [%s] %s:%d prominenceIndex[%d]
 [%s] %s:%d %@(%p) prominenceIndex[%d]
 [%s] %s:%d prominenceIndex is already at %d
 [%s] %s:%d %@(%p) prominenceIndex is already at %d
 [%s] %s:%d prominenceIndex[%d] is cached until endParticipantConfiguration is called.
 [%s] %s:%d %@(%p) prominenceIndex[%d] is cached until endParticipantConfiguration is called.
 [%s] %s:%d [AVC SPATIAL AUDIO] Invalid flags=%08x
 [%s] %s:%d %@(%p) [AVC SPATIAL AUDIO] Invalid flags=%08x
 [%s] %s:%d [AVC SPATIAL AUDIO] Video position info will not be applied until endParticipantConfiguration is called.
 [%s] %s:%d %@(%p) [AVC SPATIAL AUDIO] Video position info will not be applied until endParticipantConfiguration is called.
 [%s] %s:%d ParticipantID=%@ mediaType=%@ mediaState=%@ did succeed[%d]
 [%s] %s:%d %@(%p) ParticipantID=%@ mediaType=%@ mediaState=%@ did succeed[%d]
 [%s] %s:%d Media state update: %@
 [%s] %s:%d %@(%p) Media state update: %@
 [%s] %s:%d Failed to retrieve media state for mediaType=%@
 [%s] %s:%d %@(%p) Failed to retrieve media state for mediaType=%@
 [%s] %s:%d Error encoding media type settings dictionary
 [%s] %s:%d %@(%p) Error encoding media type settings dictionary
 [%s] %s:%d %sEnabled[%d]
 [%s] %s:%d %@(%p) %sEnabled[%d]
 [%s] %s:%d Participant %s is already enabled[%d]
 [%s] %s:%d %@(%p) Participant %s is already enabled[%d]
 [%s] %s:%d %sPaused[%d]
 [%s] %s:%d %@(%p) %sPaused[%d]
 [%s] %s:%d Participant %s is already paused[%d]
 [%s] %s:%d %@(%p) Participant %s is already paused[%d]
 [%s] %s:%d Invalid mediaType=%d
 [%s] %s:%d %@(%p) Invalid mediaType=%d
 [%s] %s:%d Source ID not found for mediaType=%d
 [%s] %s:%d %@(%p) Source ID not found for mediaType=%d
 [%s] %s:%d Participant[%@] received callback for video enabled[%d] did succeed[%d]
 [%s] %s:%d %@(%p) Participant[%@] received callback for video enabled[%d] did succeed[%d]
 [%s] %s:%d Participant[%@] received callback for screen enabled[%d] did succeed[%d]
 [%s] %s:%d %@(%p) Participant[%@] received callback for screen enabled[%d] did succeed[%d]
 [%s] %s:%d Participant[%@] received callback for audio enabled[%d] did succeed[%d]
 [%s] %s:%d %@(%p) Participant[%@] received callback for audio enabled[%d] did succeed[%d]
 [%s] %s:%d Participant[%@] received callback for remote audio enabled[%d] did change
 [%s] %s:%d %@(%p) Participant[%@] received callback for remote audio enabled[%d] did change
 [%s] %s:%d Participant[%@] received callback for remote video enabled[%d] did change
 [%s] %s:%d %@(%p) Participant[%@] received callback for remote video enabled[%d] did change
 [%s] %s:%d Participant[%@] received callback for remote screen video enabled[%d] did change
 [%s] %s:%d %@(%p) Participant[%@] received callback for remote screen video enabled[%d] did change
 [%s] %s:%d Participant=%@ received callback for remote mediaType=%@ change to mediaState=%@
 [%s] %s:%d %@(%p) Participant=%@ received callback for remote mediaType=%@ change to mediaState=%@
 [%s] %s:%d Participant[%@] received callback for audio paused[%d] did succeed[%d]
 [%s] %s:%d %@(%p) Participant[%@] received callback for audio paused[%d] did succeed[%d]
 [%s] %s:%d Participant[%@] received callback for video paused[%d] did succeed[%d]
 [%s] %s:%d %@(%p) Participant[%@] received callback for video paused[%d] did succeed[%d]
 [%s] %s:%d Participant[%@] received callback for remote audio paused[%d] did change
 [%s] %s:%d %@(%p) Participant[%@] received callback for remote audio paused[%d] did change
 [%s] %s:%d Participant[%@] received callback for remote video paused[%d] did change
 [%s] %s:%d %@(%p) Participant[%@] received callback for remote video paused[%d] did change
 [%s] %s:%d Participant[%@] received callback for media priority change:[%@] (%@)
 [%s] %s:%d %@(%p) Participant[%@] received callback for media priority change:[%@] (%@)
 [%s] %s:%d [Media Priority] Participant[%@] calling mediaPrioritiesDidChange:%@
 [%s] %s:%d %@(%p) [Media Priority] Participant[%@] calling mediaPrioritiesDidChange:%@
 [%s] %s:%d No stream groups found
 [%s] %s:%d %@(%p) No stream groups found
 [%s] %s:%d Unknown streamGroupID=%s
 [%s] %s:%d %@(%p) Unknown streamGroupID=%s
 [%s] %s:%d Failed to add streamGroupID=%s for mediaType=%@
 [%s] %s:%d %@(%p) Failed to add streamGroupID=%s for mediaType=%@
 [%s] %s:%d (%d) uuid=%@ videoQuality=%d visibilityIndex=%d prominenceIndex=%d
 [%s] %s:%d %@(%p) (%d) uuid=%@ videoQuality=%d visibilityIndex=%d prominenceIndex=%d
 [%s] %s:%d Failed to archive mediaStates=%@. error=%@
 [%s] %s:%d %@(%p) Failed to archive mediaStates=%@. error=%@
 [%s] %s:%d Failed to decode the media state dictionary. error=%@
 [%s] %s:%d %@(%p) Failed to decode the media state dictionary. error=%@
@:@ AVCStreamOutput-init
AVCStreamOutput [%s] %s:%d @:@ AVCStreamOutput-init (%p) streamToken=%ld, delegate=%@, queue=%@, error=%@
AVCStreamOutput [%s] %s:%d Failed to allocate receiver queue
AVCStreamOutput [%s] %s:%d Failed to allocate the VCStreamOutput for streamToken=%u
AVCStreamOutput [%s] %s:%d Failed to setup the XPC connection
@:@ AVCStreamOutput-dealloc
AVCStreamOutput [%s] %s:%d @:@ AVCStreamOutput-dealloc (%p)
AVCStreamOutput [%s] %s:%d Error creating internal Queue
AVCStreamOutput [%s] %s:%d Failed to allocate the XPC connection
AVCStreamOutput [%s] %s:%d Failed to connect to stream with streamToken=%ld
AVCStreamOutput [%s] %s:%d Error retrieving the server side remoteQueue
AVCStreamOutput [%s] %s:%d Failed to setup the remote queue
AVCStreamOutput [%s] %s:%d Error received from the remote Queue %d
AVCStreamOutput [%s] %s:%d Error making the receiver queue
AVCStreamOutput [%s] %s:%d AVCStreamOutput callback: didPause=%d for streamToken=%u
AVCStreamOutput [%s] %s:%d AVCStreamOutput callback: didStall=%d for streamToken=%u
AVCStreamOutput [%s] %s:%d AVCStreamOutput callback: didDegrade=%d for streamToken=%u
AVCStreamOutput [%s] %s:%d AVCStreamOutput callback: didSuspend=%d for streamToken=%u
AVCStreamOutput [%s] %s:%d AVCStreamOutput callback: didInvalidate for streamToken=%u.
AVCStreamOutput [%s] %s:%d streamOutput=%p streamToken=%u Received NULL sample buffer
AVCStreamOutput [%s] %s:%d AVCStreamOutput: serverd died, notifying client
AVCStreamOutput [%s] %s:%d XPC connection error=%@
AVCStreamOutput [%s] %s:%d Could not decode SampleBuffer
AVCStreamOutput [%s] %s:%d AVCStreamOutput: server died
AVCStreamOutput [%s] %s:%d AVCStreamOutput: strongSelf == nil
AVCStreamOutput [%s] %s:%d streamOutput=%p streamToken=%u length=%zu data=%s sampleBuffer=%@
AVCStreamOutput [%s] %s:%d streamOutput=%p streamToken=%u sampleBuffer=%@
AVCStreamOutput [%s] %s:%d @=@ Health: AVCStreamOutput StreamToken=%u mediaType=%s estimatedDataRate=%0.2fkbps sampleBufferCount=%d
AVCStreamOutput [%s] %s:%d @=@ Health: AVCStreamOutput StreamToken=%u mediaType=%s sampleBufferCount=%d
 [%s] %s:%d Failed to create allocator info: %s
 [%s] %s:%d First come allocator callback received allocation size request that does not match expectations. bufferSize=%d, size=%zu
 [%s] %s:%d High allocation count for %s allocator. New allocation size:%d count:%d
 [%s] %s:%d AVCMediaStreamNegotiatorSettings for AVCMediStreaMode=%ld not supported yet
 [%s] %s:%d HDR10Reference mode enabled on answerer
 [%s] %s:%d stopping transport session
 [%s] %s:%d Could not dispatch transportSessionEvent %d as eventHandler is nil
 [%s] %s:%d Failed to add notification listener %d
 [%s] %s:%d Remove listener failed %d
 [%s] %s:%d VCTransportStreamNotificationBarrier failed %x
 [%s] %s:%d VCTransportSession: Setting connection selection version: local='%@', remote='%@'
 [%s] %s:%d Invalid stream type %d
 [%s] %s:%d streamToken=%ld, queue=%@, error=%@
 [%s] %s:%d streamToken[%u]
 [%s] %s:%d %@(%p) streamToken[%u]
 [%s] %s:%d ERROR In process mode not currently supported
 [%s] %s:%d NOT YET IMPLEMENTED
 [%s] %s:%d streamToken=%ld
 [%s] %s:%d AVCQoSMonitor: serverd died, notifying client
 [%s] %s:%d AVCQoSMonitor: server died
 [%s] %s:%d AVCQoSMonitor: strongSelf == nil
 [%s] %s:%d AVCQoSMonitor callback: qosMonitor:didReceiveReport for streamToken=%u
 [%s] %s:%d AVCQoSMonitor callback: qosMonitor:didReceiveReport Error[%@] 
 [%s] %s:%d VCVisualAlert disabled
 [%s] %s:%d queue doesn't exist for streamToken=%u
 [%s] %s:%d will release queues for streamToken=%u, [queuesForVideoMode count]=%lu
 [%s] %s:%d did release for streamToken=%u, [queueDict count]=%lu
 [%s] %s:%d streamToken[%ld]
 [%s] %s:%d streamToken[%ld] screenAttributes[%s]
 [%s] %s:%d streamToken[%ld] videoAttributes[%s]
 [%s] %s:%d streamToken[%u] didPause[%d]
 [%s] %s:%d streamToken[%u] didStall[%d]
 [%s] %s:%d streamToken[%u] isDegraded[%d]
 [%s] %s:%d streamToken[%u] isSuspended[%d]
 [%s] %s:%d Invalid streamToken and frameRect arguments
 [%s] %s:%d VCRemoteVideoManager: video queue does not exist for streamToken=%u
 [%s] %s:%d VCRemoteVideoManager: video queue does not exist for streamToken=%ld
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCRemoteVideoManager.m:%d: token[%ld] state[%s]
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCRemoteVideoManager.m:%d: %s Error no VCRemoteVideoState for this stream token
 [%s] %s:%d VCRemoteVideoManager: new client initialized for streamToken=%ld
 [%s] %s:%d VCRemoteVideoManager: ERROR video queue does not exist for streamToken=%u
 [%s] %s:%d VCRemoteVideoManager: Terminate connection for streamToken=%u
 [%s] %s:%d Failed to allocate the audio tap I/O map
 [%s] %s:%d %@(%p) Failed to allocate the audio tap I/O map
 [%s] %s:%d Failed to allocate the delegate queue
 [%s] %s:%d %@(%p) Failed to allocate the delegate queue
 [%s] %s:%d Failed to allocate the state queue
 [%s] %s:%d %@(%p) Failed to allocate the state queue
 [%s] %s:%d Audio tap already registered for streamToken=%u
 [%s] %s:%d %@(%p) Audio tap already registered for streamToken=%u
 [%s] %s:%d Failed to register audio tap for streamToken=%u result=0x%x
 [%s] %s:%d %@(%p) Failed to register audio tap for streamToken=%u result=0x%x
 [%s] %s:%d Failed to register start the audioIO for streamToken=%u. error=%@
 [%s] %s:%d %@(%p) Failed to register start the audioIO for streamToken=%u. error=%@
 [%s] %s:%d Audio tap not found. streamToken=%u
 [%s] %s:%d %@(%p) Audio tap not found. streamToken=%u
 [%s] %s:%d Failed to stop the audioIO for streamToken=%u. error=%@
 [%s] %s:%d %@(%p) Failed to stop the audioIO for streamToken=%u. error=%@
 [%s] %s:%d Unsupported tapType=%d
 [%s] %s:%d Failed to allocate power spectrum source for tapType=%d
 [%s] %s:%d Failed to allocate the audio tap settings for tapType=%d
 [%s] %s:%d Failed to allocate the audio IO for tapType=%d
 [%s] %s:%d Using default json policies.
 [%s] %s:%d Error loading json config path.
 [%s] %s:%d Error loading json policies from path=%@ error=%@
 [%s] %s:%d Error serializing json policies.
 [%s] %s:%d Failed to create VCEmulatedNetwork
 [%s] %s:%d VCRealTimeThread_Start for network simulator %s
 [%s] %s:%d VCRealTimeThread_Initialize for network simulator thread FAILED
 [%s] %s:%d VCRealTimeThread_Stop for network simulator
 [%s] %s:%d simulator is NULL!
 [%s] %s:%d %s mSampleRate : mFormatID : mFormatFlags : mBytesPerPacket : mFramesPerPacket : mBytesPerFrame : mChannelsPerFrame : mBitsPerChannel : samplesPerFrame 
 [%s] %s:%d %s %8.0f    : %7s   :  0x%08x  : %8u        : %9u        : %8u       : %9u         : %9u       : %9u       
 [%s] %s:%d cryptor should not be NULL
 [%s] %s:%d buffer must not be NULL
 [%s] %s:%d bufferSize must not be NULL
 [%s] %s:%d buffer is too small
 [%s] %s:%d keyMaterialIndex must not be NULL
 [%s] %s:%d Wrong size of input SFrame header: expected=%d, received=%zu
 [%s] %s:%d frameMKI must not be NULL
 [%s] %s:%d activeCounter must not be NULL
 [%s] %s:%d headerSize must not be NULL
 [%s] %s:%d SFrame signatureFlag must not be set
 [%s] %s:%d SFrame kidExtentionFlag must be set
 [%s] %s:%d SFrame header is bigger than output buffer size
 [%s] %s:%d Could not create SFrame MKI
 [%s] %s:%d encryptedDataSize is too small
 [%s] %s:%d keyHolder should not be NULL
 [%s] %s:%d cipherSuitepe parameter has wrong value
 [%s] %s:%d encryptionLabel should not be NULL
 [%s] %s:%d Create instance failed
 [%s] %s:%d [%p] isReplayProtectionEnabled=%d
 [%s] %s:%d Failed due to invalid input parameter
 [%s] %s:%d Failed due to encryption material not being ready
 [%s] %s:%d _VCCryptor_DeriveIV failed
 [%s] %s:%d CMBlockBuffer is not contiguous
 [%s] %s:%d VCCryptor_ComposeSFrameHeaderWithCounterAndMKI failed
 [%s] %s:%d CCCryptorReset failed to reset cryptor
 [%s] %s:%d CCCryptorUpdate failed to encryp data
 [%s] %s:%d Encryptor should have encryped at least '%zu' bytes bu only encryped '%zu' bytes
 [%s] %s:%d VCCryptor_Decrypt failed due to invalid input parameter
 [%s] %s:%d VCCryptor_Decrypt failed due to invalid SFrame
 [%s] %s:%d Size of encrypted SFrame is less than its required overhead. Minimum required size '%zu', actual size '%zu'
 [%s] %s:%d VCCryptor_Decrypt failed authenticate incoming frame
 [%s] %s:%d [%p] VCCryptor_CheckReplayWindow detected replay. counter=%llu, maxReceivedCounter=%llu
 [%s] %s:%d Decrypor should have produced at least '%zu' bytes but only produced '%zu' bytes
 [%s] %s:%d VCSecurityKeyHolder_AssociateKeyIndex failed
 [%s] %s:%d inputBuffer contains incorrect data size '%zu'. Expected at least '%zu' bytes of input data
 [%s] %s:%d Cryptor is valid, nothing to do here
 [%s] %s:%d Invalid key material passed in callback
 [%s] %s:%d VCSecurityKeyHolder_RegisterForKeyMaterialChangeNotification failed
 [%s] %s:%d VCSecurityKeyHolder_CopyKeyMaterialForKeyIndex failed, MKI=%s
 [%s] %s:%d Key material with MKI=%s is not ready yet
 [%s] %s:%d _VCCryptor_SetupCryptor failed to find key material from '%@' with disableMKI array '%@'
 [%s] %s:%d _VCCryptor_SetupCryptor failed for key material '%@'
 [%s] %s:%d Invalid key material received '%@'
 [%s] %s:%d Failed to derive secret key with key material '%@'
 [%s] %s:%d Failed to derive encryption key with key material '%@'
 [%s] %s:%d Failed to derive salt key with key material '%@'
 [%s] %s:%d Failed to derive authentication key with key material '%@'
 [%s] %s:%d CCCryptorCreateWithMode failed to creae cryptor
 [%s] %s:%d iv should not be NULL
VCMediaStream [%s] %s:%d _transportArray is empty, and we are trying to get the default transport, which does not exist.
VCMediaStream [%s] %s:%d _transportArray is empty, and we are trying to get the default stream config, which does not exist.
VCMediaStream [%s] %s:%d _transportArray does not have a oneToOne stream configuration.
VCMediaStream [%s] %s:%d %s[%p] %s canDecrypt[%d]
VCMediaStream [%s] %s:%d UseTransportStreamsForSockets feature flag set
VCMediaStream [%s] %s:%d VCTransportSession init failed
VCMediaStream [%s] %s:%d Connection Setup Failed error = %@
VCMediaStream [%s] %s:%d Attempting to connect link=%@
VCMediaStream [%s] %s:%d %@(%p) Attempting to connect link=%@
VCMediaStream [%s] %s:%d isShared:%d sockets rtp(%d) rtcp(%d)
VCMediaStream [%s] %s:%d Failed to create VCTransportSessionSocket with backingRTPSocket=%d, backingRTCPSocket=%d
VCMediaStream [%s] %s:%d UseTransportStreamsForNW feature flag set
VCMediaStream [%s] %s:%d nw_connection %p is backed by socket %d duped to %d
VCMediaStream [%s] %s:%d nw_connection %p is backed by socket %d. Failed to dup
VCMediaStream [%s] %s:%d Failed to create connectionClientID with %@
VCMediaStream [%s] %s:%d Failed to create nw_connection
VCMediaStream [%s] %s:%d Get nw connection state %d
VCMediaStream [%s] %s:%d Get error %@ from nw connection with state: %d!
VCMediaStream [%s] %s:%d nw_connection ready timeout
VCMediaStream [%s] %s:%d nw_connection start failed
VCMediaStream [%s] %s:%d VTP_ScheduleReceiveForNWConnection failed
VCMediaStream [%s] %s:%d Setting callbacks for monitor that is nil
VCMediaStream [%s] %s:%d UseTransportStreamsForProxy feature flag set
VCMediaStream [%s] %s:%d Failed with error %@
VCMediaStream [%s] %s:%d UseTransportStreamsForIDS feature flag set
VCMediaStream [%s] %s:%d IDS eventHandler called without event type
VCMediaStream [%s] %s:%d IDS channel connected
VCMediaStream [%s] %s:%d IDS channel disconnected
VCMediaStream [%s] %s:%d %s[%p]: Create datagram channel failed with error %s
VCMediaStream [%s] %s:%d DatagramChannel start failed with error %x
VCMediaStream [%s] %s:%d Channel sequence has inactive slots %s
VCMediaStream [%s] %s:%d (%p) Generated _streamToken=%u
VCMediaStream [%s] %s:%d NetworkAgent is being asserted by setupMediaStream
VCMediaStream [%s] %s:%d NetworkAgent is being un-asserted by VCMediaStream's dealloc
VCMediaStream [%s] %s:%d Failed to create RTP extension. Error=%d
VCMediaStream [%s] %s:%d %@(%p) Failed to create RTP extension. Error=%d
VCMediaStream [%s] %s:%d Failed to set rtp timestamp rate. Error=%d
VCMediaStream [%s] %s:%d %@(%p) Failed to set rtp timestamp rate. Error=%d
VCMediaStream [%s] %s:%d Failed to create RTP handle
VCMediaStream [%s] %s:%d %@(%p) Failed to create RTP handle
VCMediaStream [%s] %s:%d Failed to create media stream transport
VCMediaStream [%s] %s:%d %@(%p) Failed to create media stream transport
VCMediaStream [%s] %s:%d %s[%p] Using Media Control Info Generator from multiway config
VCMediaStream [%s] %s:%d %s[%p] Using Feedback Controller from multiway config
VCMediaStream [%s] %s:%d Registered callbacks for MediaControlInfoGenerator[%p], type=%d, direction=%ld
VCMediaStream [%s] %s:%d %@(%p) Registered callbacks for MediaControlInfoGenerator[%p], type=%d, direction=%ld
VCMediaStream [%s] %s:%d Registered callbacks for oneToOne MediaControlInfoGenerator[%p], type=%d, direction=%ld
VCMediaStream [%s] %s:%d %@(%p) Registered callbacks for oneToOne MediaControlInfoGenerator[%p], type=%d, direction=%ld
VCMediaStream [%s] %s:%d %s[%p] Api usage error. Overriding generator from multiway config with a locally created generator
VCMediaStream [%s] %s:%d %s[%p] Registering Media Control Info Generator Callbacks for direction %ld
VCMediaStream [%s] %s:%d Deregistering callbacks for MediaControlInfoGenerator[%p]
VCMediaStream [%s] %s:%d %@(%p) Deregistering callbacks for MediaControlInfoGenerator[%p]
VCMediaStream [%s] %s:%d Deregistering callbacks for oneToOne MediaControlInfoGenerator[%p]
VCMediaStream [%s] %s:%d %@(%p) Deregistering callbacks for oneToOne MediaControlInfoGenerator[%p]
VCMediaStream [%s] %s:%d %s[%p] Failed to fill the media control info
VCMediaStream [%s] %s:%d %s[%p] Failed to process feedback control info
VCMediaStream [%s] %s:%d %s[%p] Failed to process the probing control info
VCMediaStream [%s] %s:%d %s[%p] Failed to process transport media control info
VCMediaStream [%s] %s:%d Propagating MKM to transport=%p streamID=%d
VCMediaStream [%s] %s:%d %@(%p) Propagating MKM to transport=%p streamID=%d
VCMediaStream [%s] %s:%d MKM not updated on media stream transports. shouldHandle=%d isTransportArrayCount=%u
VCMediaStream [%s] %s:%d %@(%p) MKM not updated on media stream transports. shouldHandle=%d isTransportArrayCount=%u
VCMediaStream [%s] %s:%d Resetting decryption status
VCMediaStream [%s] %s:%d %s[%p] Failed to setRemoteAddress on transportSession %d
VCMediaStream [%s] %s:%d %s[%p] %s
VCMediaStream [%s] %s:%d %s[%p] error[%s]
VCMediaStream [%s] %s:%d Setting stream config with networkFeedbackController=%p type=%@
VCMediaStream [%s] %s:%d %s[%p] %s error configuring stream
VCMediaStream [%s] %s:%d start timed out
VCMediaStream [%s] %s:%d Start called while media stream is running (state=%d)
VCMediaStream [%s] %s:%d %@(%p) Start called while media stream is running (state=%d)
VCMediaStream [%s] %s:%d Failed to start media stream transports
VCMediaStream [%s] %s:%d %@(%p) Failed to start media stream transports
VCMediaStream [%s] %s:%d Failed to start media
VCMediaStream [%s] %s:%d %@(%p) Failed to start media
@:@ VCMediaStream-onStart
VCMediaStream [%s] %s:%d @:@ VCMediaStream-onStart %@ (%p) streamToken=%d, operatingMode=%d
VCMediaStream [%s] %s:%d Exiting state:%s Entering state:%s
VCMediaStream [%s] %s:%d %@(%p) Exiting state:%s Entering state:%s
VCMediaStream [%s] %s:%d Ignoring Link connected event on stream with _state=%lu self=%@
VCMediaStream [%s] %s:%d %@(%p) Ignoring Link connected event on stream with _state=%lu self=%@
VCMediaStream [%s] %s:%d %s[%p] Executing stop completion handler, succeeded=%d error=%@
VCMediaStream [%s] %s:%d %@(%p) %s[%p] Executing stop completion handler, succeeded=%d error=%@
VCMediaStream [%s] %s:%d stop timed out
VCMediaStream [%s] %s:%d Stop called while media stream is already stopped (state=%d)
VCMediaStream [%s] %s:%d %@(%p) Stop called while media stream is already stopped (state=%d)
VCMediaStream [%s] %s:%d %s[%p] Executing stop completion handler, stop succeeded[%d]
VCMediaStream [%s] %s:%d %@(%p) %s[%p] Executing stop completion handler, stop succeeded[%d]
VCMediaStream [%s] %s:%d %s[%p] Stopping stream transports
VCMediaStream [%s] %s:%d %@(%p) %s[%p] Stopping stream transports
VCMediaStream [%s] %s:%d Failed to stop media
VCMediaStream [%s] %s:%d %@(%p) Failed to stop media
VCMediaStream [%s] %s:%d %s[%p] setPause=%d completed success=%d error=%@
VCMediaStream [%s] %s:%d pause timed out
VCMediaStream [%s] %s:%d setPause=%d called while in same state=%d already
VCMediaStream [%s] %s:%d %@(%p) setPause=%d called while in same state=%d already
VCMediaStream [%s] %s:%d error=%s
VCMediaStream [%s] %s:%d %@(%p) error=%s
VCMediaStream [%s] %s:%d %s[%p] setPause (was %d is %d)
VCMediaStream [%s] %s:%d Error pausing media
VCMediaStream [%s] %s:%d %@(%p) Error pausing media
VCMediaStream [%s] %s:%d Error resuming media
VCMediaStream [%s] %s:%d %@(%p) Error resuming media
VCMediaStream [%s] %s:%d %s[%p] infoDict = %s networkSockets = %s callID = %s
VCMediaStream [%s] %s:%d %s[%p] %s was[%d] now[%d]
VCMediaStream [%s] %s:%d %s[%p] %s streamDirection[%ld]
VCMediaStream [%s] %s:%d %s[%p] %s rtcpEnabled[%d]
VCMediaStream [%s] %s:%d %s[%p] %s rtpTimeOutEnabled[%d]
VCMediaStream [%s] %s:%d %s[%p] %s rtcpTimeOutEnabled[%d]
VCMediaStream [%s] %s:%d %s[%p] %s decryptionTimeOutEnabled[%d]
VCMediaStream [%s] %s:%d %s[%p] %s rtpTimeOutInterval[%f]
VCMediaStream [%s] %s:%d %s[%p] %s rtcpTimeOutInterval[%f]
VCMediaStream [%s] %s:%d %s[%p] %s decryptionTimeOutInterval[%f]
VCMediaStream [%s] %s:%d %s[%p] %s rtcpSendInterval[%f]
VCMediaStream [%s] %s:%d Failed to generate reception report.
VCMediaStream [%s] %s:%d %@(%p) Failed to generate reception report.
VCMediaStream [%s] %s:%d RTCP send heartbeat called while the stream has already stopped.
VCMediaStream [%s] %s:%d %@(%p) RTCP send heartbeat called while the stream has already stopped.
VCMediaStream [%s] %s:%d RTCP HeartBeat intervalElapsed:%d remainingInterval:%.5f
VCMediaStream [%s] %s:%d Error already started
VCMediaStream [%s] %s:%d %@(%p) Error already started
VCMediaStream [%s] %s:%d RTCP not properly configured. Do not start heart beat. Enabled=%d, interval=%f
VCMediaStream [%s] %s:%d %@(%p) RTCP not properly configured. Do not start heart beat. Enabled=%d, interval=%f
VCMediaStream [%s] %s:%d Starting RTCP send heartbeat (interval=%f)
VCMediaStream [%s] %s:%d %@(%p) Starting RTCP send heartbeat (interval=%f)
VCMediaStream [%s] %s:%d Failed to create RTCP send heartbeat
VCMediaStream [%s] %s:%d %@(%p) Failed to create RTCP send heartbeat
VCMediaStream [%s] %s:%d Tearing down rtcp heartbeat!
VCMediaStream [%s] %s:%d %@(%p) Tearing down rtcp heartbeat!
VCMediaStream [%s] %s:%d Schedule next timeout @ %f currentTime:%f
VCMediaStream [%s] %s:%d %@(%p) Schedule next timeout @ %f currentTime:%f
VCMediaStream [%s] %s:%d Last RTP packet receive time:%f now:%f rtpTimeoutEnabledTime=%f
VCMediaStream [%s] %s:%d Last RTCP packet receive time:%f now:%f
VCMediaStream [%s] %s:%d DecryptionErrorStartTime:%f now:%f. Triggering decryption timeout
VCMediaStream [%s] %s:%d DecryptionErrorStartTime:%f lastDecryptionMKMRecoveryTime:%f now:%f. Triggering MKM recovery
VCMediaStream [%s] %s:%d RTP/RTCP/Decryption timeouts not configured. RTP Enabled=%d, interval=%f, RTCP Enabled=%d, interval=%f Decryption Enabled=%d, interval=%f
VCMediaStream [%s] %s:%d %@(%p) RTP/RTCP/Decryption timeouts not configured. RTP Enabled=%d, interval=%f, RTCP Enabled=%d, interval=%f Decryption Enabled=%d, interval=%f
VCMediaStream [%s] %s:%d already started
VCMediaStream [%s] %s:%d %@(%p) already started
VCMediaStream [%s] %s:%d Starting timeout heartbeat (interval=%f)
VCMediaStream [%s] %s:%d %@(%p) Starting timeout heartbeat (interval=%f)
VCMediaStream [%s] %s:%d Failed to create timeout heartbeat
VCMediaStream [%s] %s:%d %@(%p) Failed to create timeout heartbeat
VCMediaStream [%s] %s:%d heartbeat is not active
VCMediaStream [%s] %s:%d %@(%p) heartbeat is not active
VCMediaStream [%s] %s:%d Tearing down timeout heartbeat!
VCMediaStream [%s] %s:%d %@(%p) Tearing down timeout heartbeat!
VCMediaStream [%s] %s:%d MediaCallback: SRTP key needs update
VCMediaStream [%s] %s:%d MediaCallback: Gap in RTP sequence number detected
VCMediaStream [%s] %s:%d MediaCallback: call back is not supported for notification %d.
VCMediaStream [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCMediaStream.m:%d: MediaCallback: notificaiton %d unknown, no action.
 [%s] %s:%d AddPacket: ^^^^^^ @%.3f MP %d  %d/%d/%d P: %d  pTWL: %p %d
 [%s] %s:%d  *#*#*#*#*#*#*#*# BAD AUD. pkt INTERVAL: %f (avg: %f) 
 [%s] %s:%d  AUD. pkt INTERVAL: %f (avg: %f) 
 [%s] %s:%d Packet with a shouldScheduleQueuedPackets set. Empty throttling queue! iPktsAddedToPktListCount=%d
 [%s] %s:%d Packet with a shouldScheduleQueuedPackets set. Empty waiting queue! iPktsCount=%d
 [%s] %s:%d ActiveProbing_ProcessIncomingPacket: %d  ScheduleReleasedPkts: %d 
 [%s] %s:%d MediaQueue_Throttling_SetAudioInterval: %f
 [%s] %s:%d MediaQueue_Throttling_SetIsIPv6: %d 
 [%s] %s:%d 
 FORCE_MIN_PKT org: %d new: %d gob: %d 
 [%s] %s:%d 
 FORCE_MIN_PKT did NOT take effect: iGobBytes: %d  iPktBytes: %d 
 [%s] %s:%d Throttling: %d 
 [%s] %s:%d dwHardCodeBWEstRate: %d 
 dwHardCodeTxRate: %d 
 [%s] %s:%d g_bThrottlingSendLog: %d  g_bThrottlingRecvLog: %d  g_bThrottlingProbeSeqLog: %d 
 [%s] %s:%d  ------ MQ IN/OUT RealTime stats are ENABLED
 [%s] %s:%d ProcessThrottledPktsWithNewAudioPkt: Pkts: %d  now: %f   interval: %f  next_audio: %f 
 [%s] %s:%d ProcessThrottledPktsWithTime: ^^^^^^ MP %d  %d/%d/%d P: %d  pTWL: %p %d  sched: %.3f now: %.3f
 [%s] %s:%d OpportunisticBWEProbeSeqTagging: ^^^^^^ MP %d  %d/%d/%d P: %d  pTWL: %p %d  sched: %.3f now: %.3f PROBE_id: %d 
 [%s] %s:%d OpportunisticBWEProbeSeqTagging FAILED for pkt %d/%d/%d and audio pkt %d/%d/%d 
 [%s] %s:%d ScheduleReleasedPkts: Updating last pkt's in pThrottledPktsWaitingList == NULL
 [%s] %s:%d  VIDEO GAP: %f  last: %f  now: %.3f new: %f 
 [%s] %s:%d  TOO FAST: now: %.3f last: %f factor: %.3f 
 [%s] %s:%d  TOO FAST: now: %.3f last: %f --> updated: %f   factor: %.3f 
 [%s] %s:%d  TOO MUCH ACCEL!!!!!!!!!!!!!!!!!!
 [%s] %s:%d  PROBESEQ comp: %f -> new: %f 
 [%s] %s:%d  dSinceLastPktIssue %f  dNow %f    dBaseTime %f = dFirstPktScheduleTime %f - dDeliveryEstimate %f (%d %d)
 [%s] %s:%d UNEXPECTED!!! CalcBoostIncrease:  SCHEME2: %f  SCHEME1: %f  last: %f base: %f, %f %d %d %f %f %d %f 
 [%s] %s:%d  SCHEME %d:   %f   %f    (INC %f)
 [%s] %s:%d  Accelerating: ^^^^^^ MP %d  %d/%d/%d P: %d  by %.3fs (%.5f %d) to %.3f b: %d 
 [%s] %s:%d AccelerateThrottlingQueue: %.3f from %.3f to %.3f (%d pkts) 
 [%s] %s:%d 
 THROTTLING: disabled->enabled   dLastThrottledVideoPktTime init: %f 
 [%s] %s:%d 
 THROTTLING: enabled->disabled  EMPTY THROT QUEUE -> DISABLED
 [%s] %s:%d 
 THROTTLING: enabled->disabled  EDGE ... signalling the caller to FLUSH pending pkts in queue
 [%s] %s:%d 
 SCHEDULING: len/rate: %d/%d  take: %f  me: %f  next: %f 
 [%s] %s:%d  SchedulePkt: %d  %d/%d/%d rate: %d  sched: %f now: %f aud: %f  b: %d mode: %c 
 [%s] %s:%d Load switch heifHevcLivePhotosEnabled %d
 [%s] %s:%d Initializing moments rule collections with HEIF and HEVC enabled:%d and the storebag settings value was: %d
 [%s] %s:%d No moments supported for device class %d
 [%s] %s:%d Unknown chipID 0x%x
 [%s] %s:%d DTLS timeout: set via preferences to %d seconds for call (%d)
 [%s] %s:%d DTLS_Cleanup done on handle %d
 [%s] %s:%d SECURETRANSPORT SETUP %s...
 [%s] %s:%d SECURETRANSPORT FAILED...
 [%s] %s:%d DTLS_UpdateHandshake:: process late incoming handshake packet...
 [%s] %s:%d DTLS_UpdateHandshake invalid incoming handshake packet
 [%s] %s:%d Failed to retrieve input data pointer
 [%s] %s:%d Failed to allocate the output data pointer with status:%d
 [%s] %s:%d Failed to retrieve output data pointer with status:%d
 [%s] %s:%d SSLRead failed with status:%d
 [%s] %s:%d DTLS_Read failed with %d
 [%s] %s:%d DTLS_Write failed with %d
 [%s] %s:%d WRMClient[%p] init
 [%s] %s:%d WRMClient[%p] dealloc
 [%s] %s:%d VTP_SocketForIDS failed %x
 [%s] %s:%d Corrupted baseband notification. Length[%d] < needed[%d]
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCBasebandNotificationParser.c:%d: Bad ACK, #dropped SN doesn't match(%d != %u).
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCBasebandNotificationParser.c:%d: Bad ACK, #dropped SN exceeds limit(%d > %d).
 [%s] %s:%d Baseband dropped %u packet(s) for PT %u.
 [%s] %s:%d Corrupted baseband notification ACK packet. Length[%d] < needed[%d]
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCBasebandNotificationParser.c:%d: Got PTs more than VC_BBNOTE_MAX_PAYLOAD_TYPES (%d) in a DropACK
 [%s] %s:%d Corrupted baseband notification packet (cookie). Length[%d] < needed[%d]
 [%s] %s:%d Corrupted baseband notification codec rate change packet. Length[%d] < needed[%d]
 [%s] %s:%d Corrupted baseband notification report packet. Length[%d] < needed[%d]
 [%s] %s:%d Failed to create screen secondary rules!
 [%s] %s:%d Screen rules: No suitable rules for this device
 [%s] %s:%d Screen rules: No suitable decode rules for this device
 [%s] %s:%d Failed to create video rule for secondary screen !
 [%s] %s:%d VCTimescaleWSOLAClass is increasing size of extendedBuffer by 8x.
AVCCaptions [%s] %s:%d Invalid closed captions token received
AVCCaptions [%s] %s:%d Failed to allocate closed captions token array
 [%s] %s:%d Object '%@' is not a valid VCPacketFilterBasebandNotification
 [%s] %s:%d Parameter '%@' is currently not set for packet filter
 [%s] %s:%d Frame Transform resize, %p outputSize %zux%zu
 [%s] %s:%d Forcing 'width' portion of screen dimensions to %@ as specified by the '%@' preference
 [%s] %s:%d Forcing 'height' portion of screen dimensions to %@ as specified by the '%@' preference
 [%s] %s:%d screenWidth=%d, screenHeight=%d
 [%s] %s:%d featureFlagEnabled = %d, hardwareSupport = %d
 [%s] %s:%d Forcing device class to %@ as specified by the '%@' preference
 [%s] %s:%d Unknown chipID 0x%llx
 [%s] %s:%d SwitchManager: Setting individual local switches for the purpose of QA testing
 [%s] %s:%d SwitchManager: Non-seed build - using master local switch: %08X
 [%s] %s:%d SwitchManager: selectedAudioTestGroupPermutation: %08X
 [%s] %s:%d SwitchManager: selectedVideoTestGroupPermutation: %08X
 [%s] %s:%d SwitchManager: selectedNetworkTestGroupPermutation: %08X
 [%s] %s:%d SwitchManager: selectedRateControlTestGroupPermutation: %08X
 [%s] %s:%d SwitchManager: selectedDuplicationTestGroupPermutation: %08X
 [%s] %s:%d SwitchManager: updateDuplicationEnhancementSwitches updates local switches to: %08X
 [%s] %s:%d keyManager should not be NULL
 [%s] %s:%d usage has invalid value '%d'
 [%s] %s:%d clientID should not be NULL
 [%s] %s:%d keyHolder instance '%p' created
 [%s] %s:%d MKMList should not be NULL
 [%s] %s:%d Immutable instance does not have key manager
 [%s] %s:%d Can not set key material change notification handler for immutable instance of VCSecurityKeyholder
 [%s] %s:%d keyIndex should not be NULL
 [%s] %s:%d keyHolder instance '%p' finalized
 [%s] %s:%d Received Uplink notification for keyHolder instance '%p' with key material '%@'
 [%s] %s:%d Wrong notification received from VCSecurityKeyManager : '%@'
 [%s] %s:%d Notification from wrong VCSecurityKeyManager instance received: Expected instance '%llu' but got '%llu'
 [%s] %s:%d Invalid combination of groupID='%s' mediaType='%s' mediaSubtype='%s' syncGroupID='%s'
 [%s] %s:%d Failed to create the U1 config for groupID='%s'
 [%s] %s:%d Failed to setup payloads for groupID='%s'
 [%s] %s:%d Failed to setup streams for groupID='%s'
 [%s] %s:%d Invalid argument. streamGroupConfig is nil
 [%s] %s:%d Failed to retrieve defaultConfig for streamGroup=%u
 [%s] %s:%d Failed to read the payload configurations for streamGroupID=%s
 [%s] %s:%d Failed to add streams to stream group (streamGroupID=%s)
 [%s] %s:%d Failed to process the stream config (streamIndex=%d) for streamGroupID=%s. Skipping remaining streams
 [%s] %s:%d Unknown cipherSuite=%d (streamIndex=%d) for streamGroupID=%s. Skipping remaining streams
 [%s] %s:%d Stream group (streamGroupID=%s) has no valid streams
 [%s] %s:%d Unexpected streamGroup value=%u ('%s')
 [%s] %s:%d Failed to allocate the stream config
 [%s] %s:%d Found payload config that isn't used for any stream! payloadConfig=%@
 [%s] %s:%d Failed to allocate the payload config
 [%s] %s:%d Failed to create the payload spec
 [%s] %s:%d VCDTMFToneGenerator[%p] Initialize event=%d, powerLevel=%d, sampleRate=%d
 [%s] %s:%d Received Invalid DTMF eventType=%d
 [%s] %s:%d Received Invalid powerLevel=%d
 [%s] %s:%d Received Invalid sampleRate=%d
 [%s] %s:%d VCDTMFToneGenerator[%p] not initialized
 [%s] %s:%d VCDTMFToneGenerator[%p] Generate DTMF tone samples, sampleCount=%d
 [%s] %s:%d NO HEVC payloades
 [%s] %s:%d Failed to allocate videoRules
 [%s] %s:%d Failed to allocate rule for (width=%u, height=%u, frameRate=%u)
 [%s] %s:%d TCP connectionLimitedBitrate=%u
 [%s] %s:%d Use general wifi relay connectionLimitedBitrate=%u for TCP
 [%s] %s:%d HandoverReport: add result backup IDS connection %s
 [%s] %s:%d HandoverReport: add result %s IDS connection %s. Primary: %s, secondary: %s
 [%s] %s:%d HandoverReport: connection array %s has %lu connections
 [%s] %s:%d HandoverReport: no connection available after link is removed!
 [%s] %s:%d HandoverReport: selected new primary %s due to interface change (current secondary %s)
 [%s] %s:%d HandoverReport: no secondary connection available after link is removed!
 [%s] %s:%d HandoverReport: selected new secondary %s due to interface change
 [%s] %s:%d Opting out all streams for non primary connections!
 [%s] %s:%d HandoverReport: updated preferred local interface for duplication to %s
 [%s] %s:%d HandoverReport: updated preferred remote interface for duplication to %s
 [%s] %s:%d HandoverReport: selected connection %s for duplication
 [%s] %s:%d HandoverReport: Should not call this to choose one of the connections!
 [%s] %s:%d HandoverReport: new connection %s is not added, stop keep alive
 [%s] %s:%d HandoverReport: connection %s is replaced, stop keep alive
 [%s] %s:%d HandoverReport: Updated link preference order: %@
 [%s] %s:%d Failed to allocate the streamGroupID set
 [%s] %s:%d %@(%p) Failed to allocate the streamGroupID set
 [%s] %s:%d Failed to allocate peer subscribed streams
 [%s] %s:%d The dictionary for stream send group config for stream mode is nil
 [%s] %s:%d %@(%p) The dictionary for stream send group config for stream mode is nil
 [%s] %s:%d Stream group mode cannot be changed. Current state=%u, configForMode=%@
 [%s] %s:%d %@(%p) Stream group mode cannot be changed. Current state=%u, configForMode=%@
 [%s] %s:%d Successfully set Stream Send GroupID=%s to mode=%u
 [%s] %s:%d %@(%p) Successfully set Stream Send GroupID=%s to mode=%u
 [%s] %s:%d Failed to set stream group mode. Current mode=%u new mode=%u
 [%s] %s:%d %@(%p) Failed to set stream group mode. Current mode=%u new mode=%u
 [%s] %s:%d Failed to reset stream group back to original mode. Current mode=%u
 [%s] %s:%d %@(%p) Failed to reset stream group back to original mode. Current mode=%u
 [%s] %s:%d Failed to setup streams with configuration
 [%s] %s:%d %@(%p) Failed to setup streams with configuration
 [%s] %s:%d Failed to configure streams
 [%s] %s:%d %@(%p) Failed to configure streams
 [%s] %s:%d Stream group config cannot be changed. Current state=%u
 [%s] %s:%d %@(%p) Stream group config cannot be changed. Current state=%u
 [%s] %s:%d Updating streamGroupConfig for mode=%d
 [%s] %s:%d %@(%p) Updating streamGroupConfig for mode=%d
 [%s] %s:%d Updating active streams for active connection change %d.
 [%s] %s:%d %@(%p) Updating active streams for active connection change %d.
 [%s] %s:%d Active stream count %d, streams currently suspended: %d
 [%s] %s:%d %@(%p) Active stream count %d, streams currently suspended: %d
 [%s] %s:%d Active stream count has dropped to zero. Will signal delegate that streams have suspended.
 [%s] %s:%d %@(%p) Active stream count has dropped to zero. Will signal delegate that streams have suspended.
 [%s] %s:%d Active stream count is no longer zero. Will signal delegate that streams will be resumed.
 [%s] %s:%d %@(%p) Active stream count is no longer zero. Will signal delegate that streams will be resumed.
 [%s] %s:%d Failed to create formattedArguments
 [%s] %s:%d Unknown issue detector type
 [%s] %s:%d Failed to allocate the audio issue detector
 [%s] %s:%d Failed to allocate the utils for receiver issue detector
 [%s] %s:%d VCAudioIssueDetector=%p of type=%d created
 [%s] %s:%d VCAudioIssueDetector creation failed
 [%s] %s:%d Audio issue detector ref is NULL
 [%s] %s:%d VCAudioIssueDetector=%p finalized
 [%s] %s:%d VCAudioIssueDetector=%p configured
 [%s] %s:%d VCAudioIssueDetector=%p link type updated
 [%s] %s:%d VCAudioIssueDetector=%p started
 [%s] %s:%d VCAudioIssueDetector=%p stopped
 [%s] %s:%d Invalid parameter issueDetector=%p frameInfo=%p
 [%s] %s:%d Invalid parameter issueDetector=%p reportingStats=%p
 [%s] %s:%d Rtp inactivity detected in audio issue detector=%p, direction=%d
 [%s] %s:%d Rtcp inactivity detected in audio issue detector=%p, direction=%d
AVConferenceXPCClient [%s] %s:%d 
AVConferenceXPCClient [%s] %s:%d %@(%p) 
AVConferenceXPCClient [%s] %s:%d XPC Client: disposing off connection to server
AVConferenceXPCClient [%s] %s:%d XPC Client: creating new connection to server
AVConferenceXPCClient [%s] %s:%d name=%s, connection=%p
AVConferenceXPCClient [%s] %s:%d XPC Client: Cannot talk to server because server died or parent deallocated, %s
AVConferenceXPCClient [%s] %s:%d XPC Client: processing registered reply for service %@
AVConferenceXPCClient [%s] %s:%d XPC Client: no registered block found for service %@
AVConferenceXPCClient [%s] %s:%d XPC Client: Sending message to server for service: %s
AVConferenceXPCClient [%s] %s:%d XPC Client: received error from server while processing reply, %s
AVConferenceXPCClient [%s] %s:%d XPC Client: executing reply block for service %s
AVConferenceXPCClient [%s] %s:%d XPC Client: Sending sync message to server for service: %s
AVConferenceXPCClient [%s] %s:%d XPC Client: Adding registered block for service %s
AVConferenceXPCClient [%s] %s:%d XPC Client: Removing registered block for service %s
 [%s] %s:%d encode score = %d, encodingHighDef = %d decoding score = %d, decodeHighDef = %d
 [%s] %s:%d Found default encode score setting, setting encode score to %d
 [%s] %s:%d Setting encode score to %d, _encodeHighDef=%d
 [%s] %s:%d H264 Wifi rules: failed to allocate QVGA15 rule
 [%s] %s:%d H264 Wifi rules: failed to allocate QVGA30 rule
 [%s] %s:%d H264 Wifi rules: failed to allocate HVGA15 rule
 [%s] %s:%d H264 Wifi rules: failed to allocate HVGA30 rule
 [%s] %s:%d H264 Wifi rules: failed to allocate VGA15 rule
 [%s] %s:%d H264 Wifi rules: failed to allocate VGA30 rule
 [%s] %s:%d H264 Wifi rules: failed to allocate WVGA15 rule
 [%s] %s:%d H264 Wifi rules: failed to allocate WVGA30 rule
 [%s] %s:%d H264 Wifi rules: failed to allocate XVGA15 rule
 [%s] %s:%d H264 Wifi rules: failed to allocate XVGA30 rule
 [%s] %s:%d H264 Wifi rules: failed to allocate 720p15 rule
 [%s] %s:%d H264 Wifi rules: failed to allocate 720p30 rule
 [%s] %s:%d H264 Wifi rules: failed to allocate video rules array for encoding
 [%s] %s:%d H264 Wifi rules: failed to allocate video rules array for decoding
 [%s] %s:%d Failed to allocate videoRulesWiFiEncoding for HEVC
 [%s] %s:%d Failed to allocate videoRulesWiFiDecoding for HEVC
 [%s] %s:%d H264 Wi-Fi rules: failed to allocate 1920x1080 30 FPS rule
 [%s] %s:%d H264 Wi-Fi rules: failed to allocate 1664x1248 30 FPS rule
 [%s] %s:%d sVCDefaults forceDisableVideoRuleWiFi1080 is set
 [%s] %s:%d sVCDefaults forceDisableVideoRuleCell720 is set
 [%s] %s:%d built in J92 camera. removing rules greater than VGA. adding WVGA encoding rules
 [%s] %s:%d 720p camera. removing rules greater than 720p
 [%s] %s:%d isHD = %d, isWVGA = %d, is1080 = %d
 [%s] %s:%d Failed to Setup Rules
 [%s] %s:%d resetting encoding rules for J92
 [%s] %s:%d camera does not support 720p. removing rules greater than VGA
 [%s] %s:%d camera does not support 1080p. removing rules greater than 720p
 [%s] %s:%d Failed to allocate _dispatchQueue
 [%s] %s:%d Failed to allocate _streamOutputSourceForStreamToken dictionary
 [%s] %s:%d Failed to allocate _streamOutputs dictionary
 [%s] %s:%d Failed to allocate _xpcCallbackQueue
 [%s] %s:%d This streamOutputSource has already been registered with streamToken=%u
 [%s] %s:%d Source=%p registered for streamToken=%u
 [%s] %s:%d %@(%p) Source=%p registered for streamToken=%u
 [%s] %s:%d StreamToken was not registered:%u
 [%s] %s:%d Source=%p unregistered for streamToken=%u
 [%s] %s:%d %@(%p) Source=%p unregistered for streamToken=%u
 [%s] %s:%d Call ID argument is missing
 [%s] %s:%d Failed to create output stream for streamToken=%@
 [%s] %s:%d Unable to allocate memory for dictionary. streamToken=%@
 [%s] %s:%d Invalid sender queue for streamToken=%@
 [%s] %s:%d Failed to get context
 [%s] %s:%d Invalid context
 [%s] %s:%d Missing argument: %@
 [%s] %s:%d Invalid argument: %@
 [%s] %s:%d security delegate %p
 [%s] %s:%d %@(%p) security delegate %p
 [%s] %s:%d deallocating
 [%s] %s:%d %@(%p) deallocating
 [%s] %s:%d Security key manager start result=[%@]
 [%s] %s:%d Security key manager is already started
 [%s] %s:%d Security key manager stopped
 [%s] %s:%d MW control channel already stopped
 [%s] %s:%d Failed to create pruneTimer
 [%s] %s:%d %@(%p) Failed to create pruneTimer
 [%s] %s:%d pruneTimer cancelled
 [%s] %s:%d Failed to create encryptionKeyRollTimer
 [%s] %s:%d %@(%p) Failed to create encryptionKeyRollTimer
 [%s] %s:%d Encryption key material has failed to roll at boundary=%d seconds, calling didEncryptionKeyRollTimeout
 [%s] %s:%d Encryption roll timer cancelled
 [%s] %s:%d Cancelling pruneTimer
 [%s] %s:%d Cancelling encryption key roll timer
 [%s] %s:%d kVCSecurityKeyIndex is missing in key material dictionary '%@'
 [%s] %s:%d Found duplicate key index '%@': sendKeys (%@), receiveKeys (%@) passed down from IDS. Updating key material
 [%s] %s:%d %@(%p) Found duplicate key index '%@': sendKeys (%@), receiveKeys (%@) passed down from IDS. Updating key material
 [%s] %s:%d Will not add remote MKM per default override.
 [%s] %s:%d Received keyIndex '%@', calling scheduleEncryptionRollTimer
 [%s] %s:%d %@(%p) Received keyIndex '%@', calling scheduleEncryptionRollTimer
 [%s] %s:%d Received keyIndex '%@', calling resetDecryptionTimeout
 [%s] %s:%d %@(%p) Received keyIndex '%@', calling resetDecryptionTimeout
 [%s] %s:%d Found keyIndex '%@' in send keys in key manager
 [%s] %s:%d %@(%p) Found keyIndex '%@' in send keys in key manager
 [%s] %s:%d Cannot find keyIndex '%@' in send keys array of %d elements
 [%s] %s:%d %@(%p) Cannot find keyIndex '%@' in send keys array of %d elements
 [%s] %s:%d %p Found keyIndex '%@' in receive keys array of %d elements
 [%s] %s:%d %@(%p) %p Found keyIndex '%@' in receive keys array of %d elements
 [%s] %s:%d Cannot find keyIndex '%@' in receive keys array of %d elements
 [%s] %s:%d %@(%p) Cannot find keyIndex '%@' in receive keys array of %d elements
 [%s] %s:%d Found _latestSendKeyIndex '%@' in send keys array of %d elements
 [%s] %s:%d %@(%p) Found _latestSendKeyIndex '%@' in send keys array of %d elements
 [%s] %s:%d Cannot find _latestSendKeyIndex '%@' in receive keys array of %d elements. Invalidating it...
 [%s] %s:%d %@(%p) Cannot find _latestSendKeyIndex '%@' in receive keys array of %d elements. Invalidating it...
 [%s] %s:%d Found keyIndex '%@' in receive keys array of %d elements
 [%s] %s:%d %@(%p) Found keyIndex '%@' in receive keys array of %d elements
 [%s] %s:%d Cannot find _latestReceiveKeyIndex '%@' in receive keys array of %d elements. Invalidating it...
 [%s] %s:%d %@(%p) Cannot find _latestReceiveKeyIndex '%@' in receive keys array of %d elements. Invalidating it...
 [%s] %s:%d Pruning obsolete send keys (%@)
 [%s] %s:%d %@(%p) Pruning obsolete send keys (%@)
 [%s] %s:%d Pruned keyIndex '%@'
 [%s] %s:%d %@(%p) Pruned keyIndex '%@'
 [%s] %s:%d Updating the security key material with _latestSendKeyIndex '%@' for send %f seconds after key pruning
 [%s] %s:%d %@(%p) Updating the security key material with _latestSendKeyIndex '%@' for send %f seconds after key pruning
 [%s] %s:%d Pruned last uplink MKM from sendKeys. calling scheduleEncryptionRollTimer
 [%s] %s:%d %@(%p) Pruned last uplink MKM from sendKeys. calling scheduleEncryptionRollTimer
 [%s] %s:%d Pruning obsolete receive keys (%@)
 [%s] %s:%d %@(%p) Pruning obsolete receive keys (%@)
 [%s] %s:%d Pruned _latestReceiveKeyIndex '%@
 from receiveKeys (%@). Nullifying it
 [%s] %s:%d %@(%p) Pruned _latestReceiveKeyIndex '%@
 from receiveKeys (%@). Nullifying it
 [%s] %s:%d Attempt to schedulePrineTimer when VCSecurityManager is stopped
 [%s] %s:%d schedulePruneTimer: currentTime=%f, firstExpirationTime=%f
 [%s] %s:%d %@(%p) schedulePruneTimer: currentTime=%f, firstExpirationTime=%f
 [%s] %s:%d pruneTimerEvent fired
 [%s] %s:%d %@(%p) pruneTimerEvent fired
 [%s] %s:%d Security key manager has not been started, yet
 [%s] %s:%d Scheduled encryption roll timeout delta=%f seconds
 [%s] %s:%d keyIndex must not be nil
 [%s] %s:%d %@(%p) keyIndex must not be nil
 [%s] %s:%d clientID must not be nil
 [%s] %s:%d %@(%p) clientID must not be nil
 [%s] %s:%d Reset pruning timeout for keyIndex '%@' to default value '%d'
 [%s] %s:%d %@(%p) Reset pruning timeout for keyIndex '%@' to default value '%d'
 [%s] %s:%d Invalid local configuration
 [%s] %s:%d Failed to allocate negotiation captions results
 [%s] %s:%d Capable of streaming 16x9 cellular!
 [%s] %s:%d Not capable of streaming 16x9 cellular!
 [%s] %s:%d Invalid media negotiator state: The callee tried to create the invite blob
 [%s] %s:%d Failed to create the invite blob
 [%s] %s:%d Failed to create bandwidth settings for media blob
 [%s] %s:%d Failed to allocate invite blob audio settings
 [%s] %s:%d Failed to allocate invite blob video settings
 [%s] %s:%d Invalid media negotiator state: The caller tried to process the invite blob
 [%s] %s:%d Failed to decompress the media blob
 [%s] %s:%d Failed to decode the media blob
 [%s] %s:%d Load switch after negotiation updatedAFRCHeaderEnabled %d
 [%s] %s:%d Failed to negotiate FaceTime settings
 [%s] %s:%d Failed to negotiate audio settings
 [%s] %s:%d Failed to negotiate video settings
 [%s] %s:%d Failed to negotiate screen settings
 [%s] %s:%d Failed to negotiate captions settings
 [%s] %s:%d Failed to negotiate moments settings
 [%s] %s:%d Failed to negotiate multiway audio streams
 [%s] %s:%d Failed to negotiate multiway video streams
 [%s] %s:%d Exception occurred while blob from data. exception=%@
 [%s] %s:%d Failed to allocate the local configuration
 [%s] %s:%d Failed to inialize the local configuration
 [%s] %s:%d Failed to extract negotiation data
 [%s] %s:%d Invalid media negotiator state: The caller tried to create the response blob
 [%s] %s:%d Failed to create the response blob
 [%s] %s:%d Failed to create the response blob audio rules
 [%s] %s:%d Failed to create the reponse blob audio settings
 [%s] %s:%d Failed to create the reponse blob video settings
 [%s] %s:%d Failed to create the reponse blob screen settings
 [%s] %s:%d Invalid media negotiator state: The callee tried to process the response blob
 [%s] %s:%d Exception occurred while parsing remote response blob: %@
 [%s] %s:%d Failed to parse audio rules from response blob
 [%s] %s:%d Failed to parse video rules from response blob
 [%s] %s:%d Failed to parse screen rules from response blob
 [%s] %s:%d Failed to negotiation captions settings
 [%s] %s:%d Failed to negotiation moments settings
 [%s] %s:%d Failed to negotiation FaceTime settings
 [%s] %s:%d Unable to allocate dictionary for local feature string
 [%s] %s:%d Unable to allocate dictionary for remote feature string
 [%s] %s:%d Found substream with ssrc[%x] not associated with a parent stream
 [%s] %s:%d Substream ssrc[%x] doesn't match its corresponding parent stream[%x]
 [%s] %s:%d Unsupported audio substream !!
 [%s] %s:%d Failed to create bandwidth setting: connection type=%d, operating mode=%d 
 [%s] %s:%d Media blob size %s: %d -> %d bytes
 [%s] %s:%d Media blob size %s: %d -> %d bytes with ratio %f
 [%s] %s:%d DTX payload not available!
 [%s] %s:%d RED payload not available!
 [%s] %s:%d Unable to extract audio rules from media negotiation blob
 [%s] %s:%d Failed to negotiation primary audio payload
 [%s] %s:%d Unable to extract audio configuration from media response blob
 [%s] %s:%d Failed to find local video feature list %d
 [%s] %s:%d Failed to extract the remote video rules for payload=%d transport=%d encoding=%d
 [%s] %s:%d Failed to select feature string for payload=%d
 [%s] %s:%d Parameter set is not valid for payload %u
 [%s] %s:%d Unable to extract video rules from media negotiation blob
 [%s] %s:%d Failed to set video parameter set
 [%s] %s:%d Unable to find a video rule for transport=%d encoding=%d
 [%s] %s:%d forceHWI enabled! No match found when select video rules for transport=%d, encoding=%d
 [%s] %s:%d Failed to extract the video rule collection from response
 [%s] %s:%d Skipping negotiating screen video settings, as this device does not have a screen.
 [%s] %s:%d Unable to extract screen rules from media negotiation blob
 [%s] %s:%d Skipping negotiating screen video settings, as the remote device does not have a screen.
 [%s] %s:%d Failed to set screen parameter set
 [%s] %s:%d Failed to negotiate and set pixel format set
 [%s] %s:%d Failed to negotiate HDR modes correctly
 [%s] %s:%d Failed to extract the screen rule collection from response
 [%s] %s:%d Failed to retrieve negotiated pixel formats
 [%s] %s:%d Load switch after negotiation disableSIPEnabled %d
 [%s] %s:%d Load switch after negotiation secureMessagingEnabled %d
 [%s] %s:%d Load switch after negotiation mediaControlInfoFECFeedbackVersion '%d'
 [%s] %s:%d Failed to allocate moments settings.
 [%s] %s:%d multiwayAudioStreams=%@
 [%s] %s:%d %@(%p) multiwayAudioStreams=%@
 [%s] %s:%d No codec configs in stream group
 [%s] %s:%d negotiated audio streamGroupConfig=%@
 [%s] %s:%d %@(%p) negotiated audio streamGroupConfig=%@
 [%s] %s:%d multiwayVideoStreams=%@
 [%s] %s:%d %@(%p) multiwayVideoStreams=%@
 [%s] %s:%d Skipping negotiating video streams, as this device is audio only
 [%s] %s:%d Error substreams not supported with stream groups
 [%s] %s:%d No streamConfigs in the stream group
 [%s] %s:%d negotiated video streamGroupConfig=%@
 [%s] %s:%d %@(%p) negotiated video streamGroupConfig=%@
 [%s] %s:%d Failed to allocate a codec configuration
 [%s] %s:%d Failed to allocate a StreamGroup Stream configuration
 [%s] %s:%d Video stream sub-streams metadata=%d not supported in groups
 [%s] %s:%d %@(%p) Video stream sub-streams metadata=%d not supported in groups
 [%s] %s:%d Unknown metadata flags. metadata=%d not supported in groups
 [%s] %s:%d %@(%p) Unknown metadata flags. metadata=%d not supported in groups
 [%s] %s:%d Video stream payload=%d is not supported
 [%s] %s:%d %@(%p) Video stream payload=%d is not supported
 [%s] %s:%d Video stream has an invalid video resolution. supportedVideoFormats %d
 [%s] %s:%d %@(%p) Video stream has an invalid video resolution. supportedVideoFormats %d
 [%s] %s:%d Failed to allcoate remote languages.
 [%s] %s:%d Failed to decompress the blob
 [%s] %s:%d Exception occurred while blob from data: %@
 [%s] %s:%d Failed to allocate the stream group IDs
 [%s] %s:%d Provided handler is NULL
 [%s] %s:%d %@(%p) Provided handler is NULL
 [%s] %s:%d Provided context is NULL
 [%s] %s:%d %@(%p) Provided context is NULL
 [%s] %s:%d [%p], convertedFrameHandlerContext=%p
 [%s] %s:%d [%p], Source frame rate is already at %u
 [%s] %s:%d [%p], Source frame rate set to %u
 [%s] %s:%d [%p], setting destination frame rate to %d
 [%s] %s:%d [%p], _sourceFramerate=%u, _destinationFramerate=%u, _throttleRate=%f, _isThrottling=%d
 [%s] %s:%d received an error %s
 [%s] %s:%d fourcc pointer is NULL
 [%s] %s:%d fourccString is nil
 [%s] %s:%d Invalid fourcc string class
 [%s] %s:%d Invalid fourcc string=%@ length=%lu
 [%s] %s:%d HandoverReport: Primary connection health allowed delay = %.2f
 [%s] %s:%d HandoverReport: receive - last packet with feedback index %d, %u, bucket [%u %u %u] ratios [%u %u]
 [%s] %s:%d HandoverReport: send - last received packet with index %d, %u, bucket [%u %u %u] ratios [%u %u]
 [%s] %s:%d First packet received
 [%s] %s:%d Invalid stream ID generator provided
 [%s] %s:%d %@(%p) Invalid stream ID generator provided
 [%s] %s:%d Failed to allocate audio stream array
 [%s] %s:%d %@(%p) Failed to allocate audio stream array
 [%s] %s:%d Failed to allocate video stream array
 [%s] %s:%d %@(%p) Failed to allocate video stream array
 [%s] %s:%d Failed to initialize streams
 [%s] %s:%d %@(%p) Failed to initialize streams
 [%s] %s:%d Failed to initialize video multiway stream
 [%s] %s:%d %@(%p) Failed to initialize video multiway stream
 [%s] %s:%d %@(%p) Failed to create video multiway config
 [%s] %s:%d %@(%p) Failed to create video stream config
 [%s] %s:%d videoResolution is %d, not encoding squares
 [%s] %s:%d force encode size width is %d, height is %d
 [%s] %s:%d video reolution is %d
 [%s] %s:%d Failed to forceHWI initialize video multiway stream
 [%s] %s:%d %@(%p) Failed to forceHWI initialize video multiway stream
 [%s] %s:%d Created video stream config with forceHWI to initialize video a multiway stream. Stream[Codec=%d,W=%d,H=%d,fps=%d,%xkbps, %dIDR/sec]
 [%s] %s:%d %@(%p) Created video stream config with forceHWI to initialize video a multiway stream. Stream[Codec=%d,W=%d,H=%d,fps=%d,%xkbps, %dIDR/sec]
 [%s] %s:%d Failed to load supported audio rule collection
 [%s] %s:%d %@(%p) Failed to load supported audio rule collection
 [%s] %s:%d %@(%p) Failed to create audio stream config
 [%s] %s:%d Failed to create audio rules multiway config
 [%s] %s:%d %@(%p) Failed to create audio rules multiway config
 [%s] %s:%d Failed to allocate EVS codec config!
 [%s] %s:%d %@(%p) Failed to allocate EVS codec config!
 [%s] %s:%d CVPixelBufferGetBaseAddressOfPlane was NULL
 [%s] %s:%d CGColorSpaceCreateDeviceGray was NULL
 [%s] %s:%d CGBitmatContextCreate was NULL
 [%s] %s:%d CreateStringAttributes was NULL
 [%s] %s:%d CFAttributedStringCreate was NULL
 [%s] %s:%d CTFramesetterCreateWithAttributedString was NULL
 [%s] %s:%d CGPathCreateMutable was NULL
 [%s] %s:%d CTFramesetterCreateFrame was NULL
 [%s] %s:%d No supportedPayloads for this hardware
 [%s] %s:%d Failed to allocate the FFT meter
 [%s] %s:%d Failed to allocate the first come allocator
 [%s] %s:%d Failed to allocate the FFT
 [%s] %s:%d Security Key Holder not configured
 [%s] %s:%d Key material is not yet available
 [%s] %s:%d Setup error[%s]
 [%s] %s:%d %@(%p) Setup error[%s]
 [%s] %s:%d error[%s]
 [%s] %s:%d %@(%p) error[%s]
 [%s] %s:%d SRTP setup error[%s]
 [%s] %s:%d %@(%p) SRTP setup error[%s]
 [%s] %s:%d SFrame cryptors setup error[%@]
 [%s] %s:%d %@(%p) SFrame cryptors setup error[%@]
 [%s] %s:%d Failed to create SFrame receiver cryptor
 [%s] %s:%d Failed to create SFrame transmitter cryptor
 [%s] %s:%d unexpected media key/salt length (expected[%d], given[%d])
 [%s] %s:%d %@(%p) unexpected media key/salt length (expected[%d], given[%d])
 [%s] %s:%d SRTPPrepareEncryption failed
 [%s] %s:%d %@(%p) SRTPPrepareEncryption failed
 [%s] %s:%d Disabling rtp and rtcp encryption
 [%s] %s:%d %@(%p) Disabling rtp and rtcp encryption
 [%s] %s:%d create send crypto set failed
 [%s] %s:%d %@(%p) create send crypto set failed
 [%s] %s:%d create receive crypto set failed
 [%s] %s:%d %@(%p) create receive crypto set failed
 [%s] %s:%d SRTPUseEncryption failed
 [%s] %s:%d %@(%p) SRTPUseEncryption failed
 [%s] %s:%d SRTPUseEncryption completed
 [%s] %s:%d %@(%p) SRTPUseEncryption completed
 [%s] %s:%d NULL creationCallback
 [%s] %s:%d Failed to retrieve last RTCP timesamp. error=%d
 [%s] %s:%d %@(%p) Failed to retrieve last RTCP timesamp. error=%d
 [%s] %s:%d SRTP should be initialized first before we can update security key material
 [%s] %s:%d %@(%p) SRTP should be initialized first before we can update security key material
 [%s] %s:%d %s[%p] %s failed to generate the reception report: status=%d
 [%s] %s:%d No slot available for RTCP XR Statistics Summary Report Block
 [%s] %s:%d Failed to generate the RTCP XR Statistics Summary Report: status=%d
 [%s] %s:%d No slot available for RTCP XR VoIP Metrics Report Block
 [%s] %s:%d Failed to generate the RTCP XR VoIP Metrics Report: status=%d
 [%s] %s:%d %s[%p] %s failed to retrieve the report[%d] time: status=%d
 [%s] %s:%d %s[%p] %s failed to retrieve extended sequence number: status=%d
 [%s] %s:%d Object '%@' is not a valid VCPacketFilterRTP
AVConferenceXPCServer [%s] %s:%d Failed to create timeoutQueueLabel for PID %d
AVConferenceXPCServer [%s] %s:%d [%p] timer is waiting to be test cancelled
AVConferenceXPCServer [%s] %s:%d [%p] timer has been cancelled
AVConferenceXPCServer [%s] %s:%d ##### TERMINATING %s [%d] due to timeout (client %s [%d]) (API NAME: %@)
AVConferenceXPCServer [%s] %s:%d ##### TERMINATING %s [%d] now
AVConferenceXPCServer [%s] %s:%d Failed to create description for PID %d
AVConferenceXPCServer [%s] %s:%d setting connection again with same value
AVConferenceXPCServer [%s] %s:%d VCXPCServer: Ping saw client death, ignored by ping
AVConferenceXPCServer [%s] %s:%d VCXPCServer: Server was pinged successfully
AVConferenceXPCServer [%s] %s:%d VCXPCServer: preparing to send message to clients for service %s
AVConferenceXPCServer [%s] %s:%d VCXPCServer: sending notification to client for service %s
AVConferenceXPCServer [%s] %s:%d VCXPCServer: sending notification to all clients for service %s
AVConferenceXPCServer [%s] %s:%d VCXPCServer: XPC connectionsToUse count =%lu
AVConferenceXPCServer [%s] %s:%d VCXPCServer: Adding registered block for service %s
AVConferenceXPCServer [%s] %s:%d VCXPCServer: Removing registered block for service %s
AVConferenceXPCServer [%s] %s:%d name=%s, listener=%p
AVConferenceXPCServer [%s] %s:%d VCXPCServer: AVConferenceXPCServer _xpc_handle_connection incoming request
AVConferenceXPCServer [%s] %s:%d Process %s (PID=%d) is missing entitlement %s, ignoring connection
AVConferenceXPCServer [%s] %s:%d VCXPCServer: caching audit token from PID %d
AVConferenceXPCServer [%s] %s:%d VCXPCServer: dispatching registered block for service %@, block %p, queue %p
AVConferenceXPCServer [%s] %s:%d VCXPCServer: executing registered block for service %@, block %p, queue %p
AVConferenceXPCServer [%s] %s:%d VCXPCServer: invalid service requested or no block registered for service %@, ignoring
AVConferenceXPCServer [%s] %s:%d VCXPCServer: client connection fully disconnected or error from unrecognized client
AVConferenceXPCServer [%s] %s:%d VCXPCServer: XPC Error, %s
AVConferenceXPCServer [%s] %s:%d VCXPCServer: XPC Error, IGNORING INCOMING REQUEST
AVConferenceXPCServer [%s] %s:%d VCXPCServer: _xpc_add_connection_to_list PID %d
AVConferenceXPCServer [%s] %s:%d VCXPCServer: _xpc_remove_connection_from_list PID %d
AVConferenceXPCServer [%s] %s:%d 
AVConferenceXPCServer [%s] %s:%d ##### XPC Call timeout event
 [%s] %s:%d Failed to allocate video H264 encoding rules array for cellular
 [%s] %s:%d Failed to allocate video H264 decoding rules array for cellular
 [%s] %s:%d Failed to allocate QVGA15 rule for H264 cellular
 [%s] %s:%d Failed to allocate HVGA15 rule for H264 cellular
 [%s] %s:%d Failed to allocate 1024x576 rule for H264 cellular
 [%s] %s:%d Failed to allocate 896x672 rule for H264 cellular
 [%s] %s:%d not able to find for aspect ratio=%g payload=%d
 [%s] %s:%d Best video settings %s for aspect ratio=%g payload=%d
 [%s] %s:%d frameWidth=%d, frameHeight=%d, aspectRatio=%f
 [%s] %s:%d %dx%d@%dfps, aspectRatio=%f
 [%s] %s:%d Invalid HDR mode in video configuration: hdrMode=%d
 [%s] %s:%d HDR mode set for non-HDR pixel format in video configuration
 [%s] %s:%d 444-10 bit can only be used for HDR10Reference mode
 [%s] %s:%d Unexpected pixel format in video configuration. pixelFormat=%s
 [%s] %s:%d Unsupported profile level string
 [%s] %s:%d Unsupported profile level id
 [%s] %s:%d Metadata address is NULL
 [%s] %s:%d Max channel count is 0
 [%s] %s:%d SPI pointer is NULL
 [%s] %s:%d Failed to allocate the metadata
 [%s] %s:%d Failed to allocate the metadata entries
 [%s] %s:%d Failed to create the CoreAudio spatial metadata. error=%u
 [%s] %s:%d Core audio metadata is NULL
 [%s] %s:%d Failed to retrieve spatial metadata serialized size. error=%u
 [%s] %s:%d Metadata serialized size is 0
 [%s] %s:%d Failed to create serialized buffer allocator
 [%s] %s:%d Failed to create serialized buffer header allocator
 [%s] %s:%d Metadata entry address is NULL
 [%s] %s:%d Metadata is NULL
 [%s] %s:%d Reached max number of entries
 [%s] %s:%d No more available metadata entries
 [%s] %s:%d Entry is NULL
 [%s] %s:%d Positional info is NULL
 [%s] %s:%d spatialAudioSourceID is NULL
 [%s] %s:%d Invalid global info
 [%s] %s:%d Invalid display width
 [%s] %s:%d Invalid display height
 [%s] %s:%d Invalid window width
 [%s] %s:%d Invalid window height
 [%s] %s:%d Invalid uiState=%u
 [%s] %s:%d Invalid uiLayout=%u
 [%s] %s:%d Invalid orientation=%u
 [%s] %s:%d serializedBuffer is NULL
 [%s] %s:%d Failed to serialize the metadata
 [%s] %s:%d Failed to set the buffer size
 [%s] %s:%d Failed to set property %d to %u. error=%s
 [%s] %s:%d Failed to set property %d to %f. error=%s
 [%s] %s:%d The metadata still has an active channel. Unable to release the metadata
 [%s] %s:%d Metadata entry is NULL
 [%s] %s:%d Channel is NULL
 [%s] %s:%d Registered service %s with key %@, particiantID: %@
 [%s] %s:%d Received callback for service %@ with particiantID: %@
 [%s] %s:%d %@(%p) Received callback for service %@ with particiantID: %@
 [%s] %s:%d Cannot find block for serviceType %@, particiantID: %@
 [%s] %s:%d Not Enough samples to Timescale input bufferLength=%d
 [%s] %s:%d Down sample coarse correlation failed
 [%s] %s:%d mode=%s: pitch period=%d
 [%s] %s:%d PSOLA Adapt : pitch period=%d channel=%d
 [%s] %s:%d mode=%s bestCorrelation=%d VAD=0 energy_Q14=%d
 [%s] %s:%d mode=%s: bestCorrelation=%d VAD=1 energy_Q14=%d
 [%s] %s:%d Setting effects to disabled, re-initialize the buffer
 [%s] %s:%d inDelegate=%@, queue=%@
 [%s] %s:%d received callback for stats report
 [%s] %s:%d %@(%p) received callback for stats report
 [%s] %s:%d injectAudioConfig=%@
 [%s] %s:%d forceCellular=%d
 [%s] %s:%d enableLoopbackInterface=%d
 [%s] %s:%d emulatedRxPLR=%f
 [%s] %s:%d enableAudioPowerSpectrumReport=%d
 [%s] %s:%d Passed in NULL for remoteImageQueue
 [%s] %s:%d Failed to allocate remoteImageQueue
 [%s] %s:%d Could not create the shared memory pool for the new VCRemoteImageQueue sender returning NULL
 [%s] %s:%d Unable to create FigRemoteQueueSender err=%d
 [%s] %s:%d Could not set maximum buffer age=%d err=%d
 [%s] %s:%d Passed in NULL sender queue or NULL remoteImageQueue to the Receiver create.
 [%s] %s:%d Could not allocate space for the new VCRemoteImageQueue receiver, returning NULL
 [%s] %s:%d Unable to create FigRemoteQueueReceiver
 [%s] %s:%d Unable to create FigRemoteQueueReceiverHandler
 [%s] %s:%d Cannot Enqueue on an invalid remoteImageQueue %p
 [%s] %s:%d Pixel Buffer was NULL could not enqueue
 [%s] %s:%d Error occurred when sending the video frame. err=%d
 [%s] %s:%d Attributes are NULL could not enqueue
 [%s] %s:%d Error occurred when sending the video attributes. err=%d
 [%s] %s:%d Invalid remoteImageQueue=%p
 [%s] %s:%d Cannot get the XPC object on an invalid remoteImageQueue %p
 [%s] %s:%d remoteImageQueue=%p msgType=%d Queue is full. Resetting....
 [%s] %s:%d remoteImageQueue=%p err=%d opType=%d Client terminated the queue
 [%s] %s:%d remoteImageQueue=%p err=%d opType=%d Queue is full!
 [%s] %s:%d remoteImageQueue=%p err=%d opType=%d Error occurred when enqueuing data
 [%s] %s:%d AudioFileCreateWithURL failed with error=%d
 [%s] %s:%d ExtAudioFileWrapAudioFileID failed with error=%d
 [%s] %s:%d ExtAudioFileWriteAsync failed with error=%d
 [%s] %s:%d Parameter passed is NULL
 [%s] %s:%d Failed to allocate memory for audio dump
 [%s] %s:%d Failed to allocate memory for audio dump packet
 [%s] %s:%d Audio dump file=[%p] created successfully for tap point=%d, payloadType=%d, bandwidth=%d, rtpPayloadFormat=%d
 [%s] %s:%d Audio dump finalized for tap point=%d
 [%s] %s:%d Reconfiguring audio tier picker (%u -> %u)
 [%s] %s:%d { VCAudioTierPickerConfig: mode=%d headerSize=%lu usingCellular=%d isUseCaseWatchContinuity=%d defaultMaxCap=%lu alwaysOnAudioRedundancyEnabled=%d cellularAllowRedLowBitratesEnabled=%d wifiAllowRedLowBitratesEnabled=%d supportedPacketsPerBundle=(%@) supportedRedNumPayloads=(%@) }
 [%s] %s:%d  { VCAudioTierPickerConfig: supportedAudioPayloadConfig=(%@)}
 [%s] %s:%d Cannot setup audio tier picker, invalid mode
 [%s] %s:%d Setting up Audio Tier Picker with config %@
 [%s] %s:%d Error allocating _tierTabledForRedNumPayloads
 [%s] %s:%d Error allocating _bitrateLimits
 [%s] %s:%d VCAudioTierPicker failed to generate tiers
 [%s] %s:%d Unabled to setup always on red tiers, as supportedRedNumPayloads is nil
 [%s] %s:%d AudioTierSelection %d: %s quality[%f] diff=%d+%d=%d)%s
 [%s] %s:%d (%s) %d: %s
 [%s] %s:%d Multiway doesn't use legacy duplication. Tier not found!
 [%s] %s:%d No corresponding tier found for AudioBitRate, using fallback: %@
 [%s] %s:%d (%s) Using tier: %d
 [%s] %s:%d Tier for bitrate %d not found!
 [%s] %s:%d Tier for bitrate %d -> %@
 [%s] %s:%d Cap exceeded for number of red payloads:%d using %d instead
 [%s] %s:%d RED value of %d is not supported. Next RED value: %d
 [%s] %s:%d No corresponding tier found for AudioBitRate, using fallback
 [%s] %s:%d (%s) Using tier:%d %s
 [%s] %s:%d Failed to create the float converter
 [%s] %s:%d Failed to create the tone generator
 [%s] %s:%d VCAudioPlayerDTMF[%p] Successfully initialized DTMF: dtmfSampleRate=%d, audioSampleRate=%f maxTonePlaybackExtensionDuration=%d minTonePlaybackDuration=%d toneGapDuration=%d
 [%s] %s:%d VCAudioPlayerDTMF[%p] Transitioning DTMF State currentState=%s ==> newState=%s
 [%s] %s:%d VCAudioPlayerDTMF[%p] Transitioning DTMF State currentState=%s ==> newState=%s shouldContinue=%s
 [%s] %s:%d VCAudioPlayerDTMF[%p] Should Purge re-transmitted end events, eventTimeStamp=%d, result=%d
 [%s] %s:%d VCAudioPlayerDTMF[%p] Should Purge DTMF frame for old event, frameTimeStamp=%d eventTimeStamp=%d, result=%d
 [%s] %s:%d VCAudioPlayerDTMF[%p] Should Purge audioFrames, payloadType=%d frameTimeStamp=%d lastEventMaxTimeStamp=%d audioFrameCase=%d result=%d
 [%s] %s:%d VCAudioPlayerDTMF[%p] _VCAudioPlayerDTMF_ProcessDTMFStatePlayingTone Skipped
 [%s] %s:%d Failed to generate DTMF samples for event=%d
 [%s] %s:%d VCAudioPlayerDTMF[%p] Continue with last event duration, lastEventDurationCount=%d lastEventInfo.duration=%d
 [%s] %s:%d VCAudioPlayerDTMF[%p] Exiting from Tone extension window
 [%s] %s:%d VCAudioPlayerDTMF[%p] Discard the long event
 [%s] %s:%d Failed to parse DTMF payload
 [%s] %s:%d VCAudioPlayerDTMF Updated DTMF duration=%d
 [%s] %s:%d VCAudioPlayerDTMF[%p] Reset evenDuration for endFrame oldValue=%d newValue=%d
 [%s] %s:%d Failed to initialize DTMFToneGenerator, event=%d result=%d
 [%s] %s:%d Invalid DTMF payloadSize=%d
 [%s] %s:%d Parsed DTMF EventInfo: eventType=%d isEnd=%d volume=%d duration=%d, RTP Header Info: isMarker=%d seqNumber=%d rtpTimeStamp=%d
 [%s] %s:%d VCAudioPlayerDTMF[%p] Failed to generate tone samples, event=%d result=%d
 [%s] %s:%d VCAudioPlayerDTMF[%p] Playing Gap samplesCount=%d maxToneGapDuration=%d toneGapDurationCount=%d 
 [%s] %s:%d Load switch hevcWifiTiersEnabled %d
 [%s] %s:%d formatList size is zero for payload=%d, transfportType=%d
 [%s] %s:%d Failed setupVideoRulesForPayload for unrecognized payload %d!
 [%s] %s:%d Failed to allocate preferred H264 wifi rule
 [%s] %s:%d Failed to setup Wifi encoding rules for H264
 [%s] %s:%d Failed to setup Wifi decoding rules for H264
 [%s] %s:%d Failed to allocate preferred H264 cell rule
 [%s] %s:%d Failed to setup cell encoding rules for H264
 [%s] %s:%d Failed to setup cell decoding rules for H264
 [%s] %s:%d Couldn't find configuration for _hardwareSettings.deviceClass = %d
 [%s] %s:%d ##### %@
 [%s] %s:%d participantConfig may not be nil
 [%s] %s:%d %@(%p) participantConfig may not be nil
 [%s] %s:%d Failed to create uplink cryptor for dialog
 [%s] %s:%d %@(%p) Failed to create uplink cryptor for dialog
 [%s] %s:%d Failed to create downlink cryptor for dialog
 [%s] %s:%d %@(%p) Failed to create downlink cryptor for dialog
 [%s] %s:%d CMBlockBufferCreateWithMemoryBlock failed with error '%d'
 [%s] %s:%d VCCryptor_Encrypt failed with error '%d'
 [%s] %s:%d VCCryptor_Encrypt produced non-contiguous buffer
 [%s] %s:%d VCCryptor_Decrypt failed with error '%d'
 [%s] %s:%d VCCryptor_Decrypt produced non-contiguous buffer
 [%s] %s:%d Failed to allocate outgoing message for '%@:%@'
 [%s] %s:%d Failed to allocate message wrapper for '%@:%@'
 [%s] %s:%d Could not encrypt outgoing message '%@:%@'
 [%s] %s:%d messageData length must not be 0
 [%s] %s:%d %@(%p) messageData length must not be 0
 [%s] %s:%d transactionID must not be nil
 [%s] %s:%d %@(%p) transactionID must not be nil
 [%s] %s:%d messageStatus must not be nil
 [%s] %s:%d %@(%p) messageStatus must not be nil
 [%s] %s:%d isInternalMessage must not be nil
 [%s] %s:%d %@(%p) isInternalMessage must not be nil
 [%s] %s:%d Could not decrypt incoming payload for _sessionID='%d', participantID='%@', transactionID='%@'
 [%s] %s:%d messageData does have neither message nor acknowledgment. Ignoring malformed messageData
 [%s] %s:%d %@(%p) messageData does have neither message nor acknowledgment. Ignoring malformed messageData
 [%s] %s:%d Sent confirmation for _sessionID='%d', participantID='%@', transactionID='%@'
 [%s] %s:%d %@(%p) Sent confirmation for _sessionID='%d', participantID='%@', transactionID='%@'
 [%s] %s:%d Reliable message has been ACKed for _sessionID='%d', participantID='%@', transactionID='%@', messageStatus='%d'
 [%s] %s:%d %@(%p) Reliable message has been ACKed for _sessionID='%d', participantID='%@', transactionID='%@', messageStatus='%d'
 [%s] %s:%d Failed to allocate outgoing acknowledgment message for sessionID='%d', transactionID='%@'
 [%s] %s:%d Failed to allocate message wrapper for sessionID='%d', transactionID='%@'
 [%s] %s:%d Can not send confirmation: messageData is nil
 [%s] %s:%d %@(%p) Can not send confirmation: messageData is nil
 [%s] %s:%d Could not encrypt confirmation for sessionID='%d', participantID='%@', transactionID='%@'
 [%s] %s:%d Dialog send confirmation for sessionID='%d', participantID='%@', transactionID='%@'
 [%s] %s:%d %@(%p) Dialog send confirmation for sessionID='%d', participantID='%@', transactionID='%@'
 [%s] %s:%d VCImageAttrbuteRules: %s received invalid arguments 
 [%s] %s:%d VCImageAttrbuteRules: %s received unknown wireless interface
 [%s] %s:%d VCImageAttributeRules: extract dimensions for interface %d direction %d: %s, from %s
 [%s] %s:%d Creating a VCVideoStreamRateController with unknown algorithm.
 [%s] %s:%d %s doRateControlWithTime - %s maxTierBitrate:%u minTierBitrate:%u operatingTierBitrate:%u targetBitrate:%u rxBitrate:%u
 [%s] %s:%d %s:%d bitrate is greater than the maximum possible tier!
 [%s] %s:%d %s:%d bitrate is less than the minimum possible tier!
 [%s] %s:%d %s: operating bitrate is greater than the configured max bitrate: %u!
 [%s] %s:%d %s: operating bitrate is less than the configured min bitrate: %u!
 [%s] %s:%d U1 config is nil
 [%s] %s:%d Could not create VTP socket for MW control channel (%08X) for sessionID '%d'
 [%s] %s:%d %@(%p) Could not create VTP socket for MW control channel (%08X) for sessionID '%d'
 [%s] %s:%d Created VCControlChannelMultiWay object for sessionID '%d'
 [%s] %s:%d %@(%p) Created VCControlChannelMultiWay object for sessionID '%d'
 [%s] %s:%d Dealloccing VCControlChannelMultiWay object with sessionID='%d'
 [%s] %s:%d %@(%p) Dealloccing VCControlChannelMultiWay object with sessionID='%d'
 [%s] %s:%d VCControlChannelMultiWay object has been dealloced while its thread is still running. [VCControlChannelMultiWay stop] should have been invoked for sessionID='%d'!
 [%s] %s:%d %@(%p) VCControlChannelMultiWay object has been dealloced while its thread is still running. [VCControlChannelMultiWay stop] should have been invoked for sessionID='%d'!
 [%s] %s:%d VCControlChannelMultiWay object has been dealloced with sessionID='%d'
 [%s] %s:%d %@(%p) VCControlChannelMultiWay object has been dealloced with sessionID='%d'
 [%s] %s:%d Failed to create receiveProc for MW control channel for sessionID='%d'
 [%s] %s:%d %@(%p) Failed to create receiveProc for MW control channel for sessionID='%d'
 [%s] %s:%d MW control channel already stopped for sessionID='%d'
 [%s] %s:%d %@(%p) MW control channel already stopped for sessionID='%d'
 [%s] %s:%d Started MW control channel for sessionID='%d'
 [%s] %s:%d %@(%p) Started MW control channel for sessionID='%d'
 [%s] %s:%d Stopped MW control channel for sessionID='%d'
 [%s] %s:%d %@(%p) Stopped MW control channel for sessionID='%d'
 [%s] %s:%d inData must not be NULL
 [%s] %s:%d vpktFlags must not be NULL
 [%s] %s:%d channelDataFormat must not be NULL
 [%s] %s:%d Raw data header must not be NULL
 [%s] %s:%d VCControlChannelMultiWay: receiveProc unrecognized packet type '%d' received
 [%s] %s:%d VCControlChannelMultiWay: receiveProc unrecognized version of control channel messaging protocol '%d'. Ignoring the message...
 [%s] %s:%d Could not create payloadData
 [%s] %s:%d Zero-valued participantID updated to: %@, when there is only one remote participant
 [%s] %s:%d Could not create dialog for unknown participantID='%@'
 [%s] %s:%d %@(%p) Could not create dialog for unknown participantID='%@'
 [%s] %s:%d messageReceived finished for sessionID='%d': topic='%@', message='%@', participantID='%@', sequenceNumber='%@', status='%d'
 [%s] %s:%d %@(%p) messageReceived finished for sessionID='%d': topic='%@', message='%@', participantID='%@', sequenceNumber='%@', status='%d'
 [%s] %s:%d sendMessage: found existing dialog for participantID='%@'
 [%s] %s:%d %@(%p) sendMessage: found existing dialog for participantID='%@'
 [%s] %s:%d sendMessage: could not find existing dialog for participantID='%@'
 [%s] %s:%d %@(%p) sendMessage: could not find existing dialog for participantID='%@'
 [%s] %s:%d VCControlChannelMultiWay: sendReliableMessageAndWait: message '%@' for sessionID '%d', participantID '%llu', timeout '%@'
 [%s] %s:%d %@(%p) VCControlChannelMultiWay: sendReliableMessageAndWait: message '%@' for sessionID '%d', participantID '%llu', timeout '%@'
 [%s] %s:%d Could not create dialog for unknown participantID='%llu'
 [%s] %s:%d %@(%p) Could not create dialog for unknown participantID='%llu'
 [%s] %s:%d completion should not be nil
 [%s] %s:%d %@(%p) completion should not be nil
 [%s] %s:%d VCControlChannelMultiWay: sendReliableMessage: message '%@' for sessionID '%d', participantID '%llu's
 [%s] %s:%d %@(%p) VCControlChannelMultiWay: sendReliableMessage: message '%@' for sessionID '%d', participantID '%llu's
 [%s] %s:%d VCControlChannelMultiWay: sendUnreliableMessage: message '%@' for sessionID '%d', participantID '%llu'
 [%s] %s:%d %@(%p) VCControlChannelMultiWay: sendUnreliableMessage: message '%@' for sessionID '%d', participantID '%llu'
 [%s] %s:%d participantConfig must not be nil
 [%s] %s:%d %@(%p) participantConfig must not be nil
 [%s] %s:%d API misuse! Participant '%llu' has alrady been added to the list of active participants! Ignoring...
 [%s] %s:%d %@(%p) API misuse! Participant '%llu' has alrady been added to the list of active participants! Ignoring...
 [%s] %s:%d Wrong version of protocol supplied '%u'. Ignoring...
 [%s] %s:%d %@(%p) Wrong version of protocol supplied '%u'. Ignoring...
 [%s] %s:%d addActiveParticipant:'%llu' for sessionID '%d'
 [%s] %s:%d %@(%p) addActiveParticipant:'%llu' for sessionID '%d'
 [%s] %s:%d removeActiveParticipant:Removed participant '%llu' for sessionID '%d'
 [%s] %s:%d %@(%p) removeActiveParticipant:Removed participant '%llu' for sessionID '%d'
 [%s] %s:%d Removed participant '%@' for sessionID '%d'
 [%s] %s:%d %@(%p) Removed participant '%@' for sessionID '%d'
 [%s] %s:%d Initialized transactionID=%llu
 [%s] %s:%d %@(%p) Initialized transactionID=%llu
 [%s] %s:%d Reset transactionID=%llu
 [%s] %s:%d %@(%p) Reset transactionID=%llu
 [%s] %s:%d currentSendMKI is nil
 [%s] %s:%d %@(%p) currentSendMKI is nil
 [%s] %s:%d control channel starts listening for sessionID='%d'
 [%s] %s:%d receiveProc: vfdMessage='%d', exiting receiveProc for sessionID='%d'
 [%s] %s:%d receiveProc: vfdCancel='%d', exiting receiveProc for sessionID='%d'
 [%s] %s:%d select failed(%08X) for sessionID='%d'
 [%s] %s:%d from sessionID='%d'
 [%s] %s:%d VTP_Recvfrom(%d) failed(%08X) for sessionID='%d'
 [%s] %s:%d VTP_Recvfrom(%d) returned 0: empty message for sessionID='%d'
 [%s] %s:%d Could not parse raw input data
 [%s] %s:%d VCControlChannelMultiWay: receiveProc for MW control channel parsed message for sessionID='%d', status='%d
 [%s] %s:%d control channel receiveProc ended for sessionID='%d'
 [%s] %s:%d setupVideoRuleCollection failed
 [%s] %s:%d Failed to allocate the video rules
 [%s] %s:%d Failed to allocate the video rules collection
 [%s] %s:%d Failed to allocate the temporary set of payloads
 [%s] %s:%d Failed to add encoding rules
 [%s] %s:%d Failed to allocate video payload
 [%s] %s:%d NULL sendFailedHandler
 [%s] %s:%d sendFailedHandler can only be set in created state
 [%s] %s:%d NULL receivedHandler
 [%s] %s:%d receivedHandler can only be set in created state
 [%s] %s:%d Attempt to copy a block buffer to an NULL poiner
 [%s] %s:%d MarcoPerformSnapshot no longer in use
 [%s] %s:%d SnapshotTimer: %s complete before deadline, ignored
 [%s] %s:%d Failed to serialize. error=%@
 [%s] %s:%d [AVC SPATIAL AUDIO] Failed to serialize. error=%@
 [%s] %s:%d [AVC SPATIAL AUDIO] unserialize done. %@
 [%s] %s:%d [AVC SPATIAL AUDIO] %@
 [%s] %s:%d Invalid Config (nil)
 [%s] %s:%d Failed to create pre-load queue
 [%s] %s:%d Failed to create jitter queue
 [%s] %s:%d Jitter Buffer Created Successfully
 [%s] %s:%d Cleaning up JitterBuffer
 [%s] %s:%d %@(%p) Cleaning up JitterBuffer
 [%s] %s:%d Starting heartbeat (interval=%f)
 [%s] %s:%d %@(%p) Starting heartbeat (interval=%f)
 [%s] %s:%d Failed to create polling
 [%s] %s:%d %@(%p) Failed to create polling
 [%s] %s:%d Reset the queue
 [%s] %s:%d %@(%p) Reset the queue
 [%s] %s:%d Frame received seqNumber:%d length:%d isRed:%d
 [%s] %s:%d %@(%p) Frame received seqNumber:%d length:%d isRed:%d
 [%s] %s:%d _isRedundancyRequested set to YES by forceFECRepairStream
 [%s] %s:%d %@(%p) _isRedundancyRequested set to YES by forceFECRepairStream
 [%s] %s:%d state:%d remoteVideoPaused:%d isVisible:%d
 [%s] %s:%d %@(%p) state:%d remoteVideoPaused:%d isVisible:%d
 [%s] %s:%d FaceZoom is disabled.
 [%s] %s:%d %@(%p) FaceZoom is disabled.
 [%s] %s:%d Stream group must be stopped when setting sync source. state=%d
 [%s] %s:%d %@(%p) Stream group must be stopped when setting sync source. state=%d
 [%s] %s:%d Opted out of all video streams!!!
 [%s] %s:%d %@(%p) Opted out of all video streams!!!
 [%s] %s:%d Opted out and back in to the same video streamID %@, large sequence number gaps may occur
 [%s] %s:%d %@(%p) Opted out and back in to the same video streamID %@, large sequence number gaps may occur
 [%s] %s:%d Starting seamless video switch with target stream id: %@
 [%s] %s:%d %@(%p) Starting seamless video switch with target stream id: %@
 [%s] %s:%d Non-seamless video switch with target stream id: %@
 [%s] %s:%d %@(%p) Non-seamless video switch with target stream id: %@
 [%s] %s:%d Ending seamless video switch with target stream id: %@
 [%s] %s:%d %@(%p) Ending seamless video switch with target stream id: %@
 [%s] %s:%d Trying to opt into more than %d video streams! Streams:%@
 [%s] %s:%d %@(%p) Trying to opt into more than %d video streams! Streams:%@
 [%s] %s:%d Ignoring setVideoDegraded=%d with same value
 [%s] %s:%d %@(%p) Ignoring setVideoDegraded=%d with same value
 [%s] %s:%d videoDegraded=%d
 [%s] %s:%d %@(%p) videoDegraded=%d
 [%s] %s:%d Can not find VCMediaStream from _activeDownlinkStreamID=%@
 [%s] %s:%d %@(%p) Can not find VCMediaStream from _activeDownlinkStreamID=%@
 [%s] %s:%d Setting shouldEnableMLEnhance on Stream to %d
 [%s] %s:%d %@(%p) Setting shouldEnableMLEnhance on Stream to %d
 [%s] %s:%d shouldEnableMLEnhance is Already %s
 [%s] %s:%d New redundancy percentage %d
 [%s] %s:%d %@(%p) New redundancy percentage %d
 [%s] %s:%d %s video redundancy
 [%s] %s:%d %@(%p) %s video redundancy
 [%s] %s:%d Completed transition to streamId:%d (previous:%@). Opt out of old stream id if needed.
 [%s] %s:%d %@(%p) Completed transition to streamId:%d (previous:%@). Opt out of old stream id if needed.
 [%s] %s:%d networkFeedbackController is nil in VCVideoStreamReceiveGroup
 [%s] %s:%d We are experiencing a video stall too soon after we switch video on. Ignoring... currentTime=%f lastVideoExpectationSwitch=%f diff=%f
 [%s] %s:%d %@(%p) We are experiencing a video stall too soon after we switch video on. Ignoring... currentTime=%f lastVideoExpectationSwitch=%f diff=%f
 [%s] %s:%d Requesting streamID to generate a key frame %hu
 [%s] %s:%d %@(%p) Requesting streamID to generate a key frame %hu
 [%s] %s:%d ExtendedPoorConnection detected for idsParticipantID=%llu duration=%f now=%f  isVideoDegradedStartTime=%f
 [%s] %s:%d Health Monitor for Video Stream Receive GroupID=%s StreamID[main:%u repair:%u] Video[%ukbps %4.1ffps] VideoResolution=%@ syncUpdateCalled=%ld
 [%s] %s:%d %@(%p) Health Monitor for Video Stream Receive GroupID=%s StreamID[main:%u repair:%u] Video[%ukbps %4.1ffps] VideoResolution=%@ syncUpdateCalled=%ld
 [%s] %s:%d packetHandler=[%p]
 [%s] %s:%d Bundler init failed
 [%s] %s:%d RFC3640 bundling encountered an error: inputBytes=%u bufferSize=%u accessUnitDataSectionSize=%u bundledCount=%u
 [%s] %s:%d Bundling encountered an error: inputBytes=%u bufferSize=%u accessUnitDataSectionSize=%u bundledCount=%u
 [%s] %s:%d NULL access: bundler=[%p], audioBundleInfo=[%p]
 [%s] %s:%d : bundler buffer is full=%d
 [%s] %s:%d : bundler can't mix payload types
 [%s] %s:%d : Large packet bundling encountered an error: inputBytes=%u bufferSize=%u encodedBufferSize=%u bundledCount=%u
 [%s] %s:%d Small packet bundling encountered an error: inputBytes=%u bufferSize=%u encodedBufferSize=%u bundledCount=%u
 [%s] %s:%d NULL access: packetBundler=[%p]
 [%s] %s:%d NULL access: packetBundler=[%p], packetBundler->_cdrxBundleInfoRef=[%p]
 [%s] %s:%d Cdrx event enqueued: cdrx state=%d, cdrx cycle=%d, enqueued event count=%d
 [%s] %s:%d Cdrx event queue is Full. Reset Queue and enqueue
 [%s] %s:%d Cdrx event queue enqueue failed with error=%d
 [%s] %s:%d Failed to allocate CDRX container
 [%s] %s:%d Cdrx event queue creation failed with error=%d
 [%s] %s:%d cdrxInfo=[%p]
 [%s] %s:%d NULL access: bundler->_cdrxBundleInfoRef=[%p], inputBytes=[%p]
 [%s] %s:%d Bundling encountered an error: inputBytes=%u bufferSize=%u encodedBufferSize=%u bundledCount=%u
 [%s] %s:%d After processing CDRX event, packets per bundle=%d
 [%s] %s:%d videoDegradedThreshold = %f videoImprovedThreshold = %f videoMinFrameRate = %f shouldUseExitHysteresis = %d
 [%s] %s:%d isVideoQualityDegraded:%d
 [%s] %s:%d %@(%p) isVideoQualityDegraded:%d
 [%s] %s:%d videoIsExpected=%d
 [%s] %s:%d %@(%p) videoIsExpected=%d
 [%s] %s:%d Payload cannot be negotiated: %d
AVCAudioStream [%s] %s:%d localAddress=%@, error=%@
AVCAudioStream [%s] %s:%d localAddress=%@, callID=%@, error=%@
AVCAudioStream [%s] %s:%d localAddress=%@, isOriginator=%d, error=%@
AVCAudioStream [%s] %s:%d localAddress=%@, isOriginator=%d, callID=%@, error=%@
AVCAudioStream [%s] %s:%d socketsDictionary=%@, isOriginator=%d, error=%@
AVCAudioStream [%s] %s:%d socketsDictionary=%@, isOriginator=%d, callID=%@, error=%@
AVCAudioStream [%s] %s:%d destination=%@, isOriginator=%d, error=%@
AVCAudioStream [%s] %s:%d destination=%@, isOriginator=%d, callID=%@, error=%@
AVCAudioStream [%s] %s:%d rtpClientID=%@, rtcpClientID=%@, isOriginator=%d, callID=%@, options=%s, error=%s
AVCAudioStream [%s] %s:%d localAddress=%@, socketsDictionary=%@, destination=%@, rtpConnectionClientID=%@, rtcpConnectionClientID=%@, callID=%@, options=%s, error=%@
AVCAudioStream [%s] %s:%d @:@ AVCAudioStream-init (%p) PID=%d, callID=%@, streamToken=%d, error=%@
@:@ AVCAudioStream-init
AVCAudioStream [%s] %s:%d @:@ AVCAudioStream-init (%p)
AVCAudioStream [%s] %s:%d AVCAudioStream will run %s process
AVCAudioStream [%s] %s:%d %@(%p) AVCAudioStream will run %s process
AVCAudioStream [%s] %s:%d Missing result dictionary
AVCAudioStream [%s] %s:%d Server died
AVCAudioStream [%s] %s:%d error=%@, result=%@
AVCAudioStream [%s] %s:%d IPC Timeout: result=%@
AVCAudioStream [%s] %s:%d Missing capabilities dictionary: result=%@
AVCAudioStream [%s] %s:%d Missing stream token
AVCAudioStream [%s] %s:%d 
AVCAudioStream [%s] %s:%d %@(%p) 
@:@ AVCAudioStream-dealloc
AVCAudioStream [%s] %s:%d @:@ AVCAudioStream-dealloc (%p)
AVCAudioStream [%s] %s:%d %s %s
AVCAudioStream [%s] %s:%d Invalid audio configuration: error[%s]
AVCAudioStream [%s] %s:%d %@(%p) Invalid audio configuration: error[%s]
@:@ AVCAudioStream-configure
AVCAudioStream [%s] %s:%d @:@ AVCAudioStream-configure (%p) didSucceed=%d, error=%@
AVCAudioStream [%s] %s:%d AVCAudioStream API_VCMEDIASTREAM_STARTCONFERENCE (client side)
AVCAudioStream [%s] %s:%d AVCAudioStream start (not using XPC)
@:@ AVCAudioStream-start
AVCAudioStream [%s] %s:%d @:@ AVCAudioStream-start (%p)
@:@ AVCAudioStream-stop
AVCAudioStream [%s] %s:%d @:@ AVCAudioStream-stop (%p)
@:@ AVCAudioStream-pause
AVCAudioStream [%s] %s:%d @:@ AVCAudioStream-pause (%p)
@:@ AVCAudioStream-resume
AVCAudioStream [%s] %s:%d @:@ AVCAudioStream-resume (%p)
AVCAudioStream [%s] %s:%d digits=%@, volume=%hhu, duration=%hu, interval=%hu
AVCAudioStream [%s] %s:%d digit=%c, volume=%u
AVCAudioStream [%s] %s:%d syncStreamToken=%ld
AVCAudioStream [%s] %s:%d AVCAudioStream: synchronizeWithStream %u
AVCAudioStream [%s] %s:%d direction=%ld
AVCAudioStream [%s] %s:%d rtcpEnabled=%d
AVCAudioStream [%s] %s:%d rtpTimeOutEnabled=%d
AVCAudioStream [%s] %s:%d rtcpTimeOutEnabled=%d
AVCAudioStream [%s] %s:%d rtpTimeOutIntervalSec=%f
AVCAudioStream [%s] %s:%d rtcpTimeOutIntervalSec=%f
AVCAudioStream [%s] %s:%d rtcpSendIntervalSec=%f
AVCAudioStream [%s] %s:%d volume=%f
AVCAudioStream [%s] %s:%d Volume out of range:%f expected [0.0 - 1.0]
AVCAudioStream [%s] %s:%d isEnabled=%d
AVCAudioStream [%s] %s:%d AVCAudioStream: notified client %p interruption begin
AVCAudioStream [%s] %s:%d AVCAudioStream: notified client %p interruption end
AVCAudioStream [%s] %s:%d AVCAudioStream: AVC server died, notifying client
AVCAudioStream [%s] %s:%d AVCAudioStream: Media server died, notifying client
@:@ AVCAudioStream-didServerDie
AVCAudioStream [%s] %s:%d @:@ AVCAudioStream-didServerDie (%p)
AVCAudioStream [%s] %s:%d AVCAudioStream: Server died, but AVCAudioStream has already deallocated, NO-OP
AVCAudioStream [%s] %s:%d didStartConnectionBlock: error = %p, result = %s
AVCAudioStream [%s] %s:%d AVCAudioStream: didStartConnectionBlock: strongSelf == nil
AVCAudioStream [%s] %s:%d AVCAudioStream: didStartConnectionBlock strongSelf started(%d)
@:@ AVCAudioStream-didStart
AVCAudioStream [%s] %s:%d @:@ AVCAudioStream-didStart (%p) didSucceed=%d, error=%@
AVCAudioStream [%s] %s:%d AVCAudioStream: notified client %p of didStart started[%d]
@:@ AVCAudioStream-didStop
AVCAudioStream [%s] %s:%d @:@ AVCAudioStream-didStop (%p)
AVCAudioStream [%s] %s:%d AVCAudioStream: notified client %p of didStop
@:@ AVCAudioStream-didPause
AVCAudioStream [%s] %s:%d @:@ AVCAudioStream-didPause (%p) didSucceed=%d, error=%@
AVCAudioStream [%s] %s:%d AVCAudioStream: notified client %p of didPause [%d]
@:@ AVCAudioStream-didResume
AVCAudioStream [%s] %s:%d @:@ AVCAudioStream-didResume (%p) didSucceed=%d, error=%@
AVCAudioStream [%s] %s:%d AVCAudioStream: notified client %p of didResume [%d]
AVCAudioStream [%s] %s:%d AVCAudioStream: notified client %p of didStartSynchronizer [%d]
AVCAudioStream [%s] %s:%d AVCAudioStream: notified client %p RTP packet timeout
AVCAudioStream [%s] %s:%d AVCAudioStream: notified client %p RTCP packet timeout
AVCAudioStream [%s] %s:%d AVCAudioStream: notified client %p received RTCP packets
AVCAudioStream [%s] %s:%d AVCAudioStream: notified client %p received input frequency metering packets
AVCAudioStream [%s] %s:%d error=%@
AVCAudioStream [%s] %s:%d stream=%@, didStartStream=%d, error=%@
AVCAudioStream [%s] %s:%d stream=%@
AVCAudioStream [%s] %s:%d stream=%@, didPauseStream=%d, error=%@
AVCAudioStream [%s] %s:%d stream=%@, digit=%c
AVCAudioStream [%s] %s:%d stream=%@, inputFreq=%@
AVCAudioStream [%s] %s:%d stream=%@, outputFreq=%@
AVCAudioStream [%s] %s:%d stream=%@, serverDidDie
VCRC [%s] %s:%d NWConnection notification has a bad version=%d
 [%s] %s:%d Cannot create network queue successfully!
 [%s] %s:%d Failed to write to network queue
VCSessionDownlinkBandwidthAllocator [%s] %s:%d No audio entry for client=%@ mediaEntries=%@
VCSessionDownlinkBandwidthAllocator [%s] %s:%d %@(%p) No audio entry for client=%@ mediaEntries=%@
VCSessionDownlinkBandwidthAllocator [%s] %s:%d Missing audio entries in sortedMediaEntries=%@
VCSessionDownlinkBandwidthAllocator [%s] %s:%d %@(%p) Missing audio entries in sortedMediaEntries=%@
VCSessionDownlinkBandwidthAllocator [%s] %s:%d bitrate=%d
VCSessionDownlinkBandwidthAllocator [%s] %s:%d %@(%p) bitrate=%d
VCSessionDownlinkBandwidthAllocator [%s] %s:%d Sorted media entries:
VCSessionDownlinkBandwidthAllocator [%s] %s:%d %@(%p) Sorted media entries:
VCSessionDownlinkBandwidthAllocator [%s] %s:%d %@
VCSessionDownlinkBandwidthAllocator [%s] %s:%d %@(%p) %@
VCSessionDownlinkBandwidthAllocator [%s] %s:%d Reached max number of decoder streams (%d). Unable to display video for client:%@
VCSessionDownlinkBandwidthAllocator [%s] %s:%d %@(%p) Reached max number of decoder streams (%d). Unable to display video for client:%@
VCSessionDownlinkBandwidthAllocator [%s] %s:%d Always opt into Video Stream with Quality Index:%d availableBitrate %d requiredBitrate %d
VCSessionDownlinkBandwidthAllocator [%s] %s:%d We do not have available bandwidth to support the lowest quality video stream, but we are forcing it on anyways.
VCSessionDownlinkBandwidthAllocator [%s] %s:%d Opt in [%d] to client[%@] to upgrade to stream %@ remaining %d
VCSessionDownlinkBandwidthAllocator [%s] %s:%d %@(%p) Opt in [%d] to client[%@] to upgrade to stream %@ remaining %d
VCSessionDownlinkBandwidthAllocator [%s] %s:%d Bitrate distribution completed; remaining %d (candidate: %@ %@)
VCSessionDownlinkBandwidthAllocator [%s] %s:%d %@(%p) Bitrate distribution completed; remaining %d (candidate: %@ %@)
VCSessionDownlinkBandwidthAllocator [%s] %s:%d Allocated media entries for clients:
VCSessionDownlinkBandwidthAllocator [%s] %s:%d %@(%p) Allocated media entries for clients:
VCSessionDownlinkBandwidthAllocator [%s] %s:%d %@: %@
VCSessionDownlinkBandwidthAllocator [%s] %s:%d %@(%p) %@: %@
VCSessionDownlinkBandwidthAllocator [%s] %s:%d Selected media entries for clients:%@
VCSessionDownlinkBandwidthAllocator [%s] %s:%d %@(%p) Selected media entries for clients:%@
VCSessionDownlinkBandwidthAllocator [%s] %s:%d No audio entry for client=%@
VCSessionDownlinkBandwidthAllocator [%s] %s:%d %@(%p) No audio entry for client=%@
 [%s] %s:%d Mock IDS channel network type as cellular
 [%s] %s:%d Failed to allocate link context
 [%s] %s:%d Failed to allocate _blockSettingLock
 [%s] %s:%d Failed to allocate _writeDirectPathIDSLock
 [%s] %s:%d Failed to allocate _flushDatagramPacketsLock
 [%s] %s:%d Failed to create allocator
 [%s] %s:%d Failed to setup mock IDS datagram channel
 [%s] %s:%d Failed to create underlying file descriptor
 [%s] %s:%d Failed to create VCMockIDSDatagram Channel read queue
 [%s] %s:%d Failed to create VCMockIDSDatagram Channel write queue
 [%s] %s:%d Datagram packet queue has remaining elements
 [%s] %s:%d Send failed %d errno %d
 [%s] %s:%d failing to enqueue NACK seq=%d
 [%s] %s:%d failing to enqueue Media ssrc=%u ssrc_hex=%x seq=%d seq_hex=%x
 [%s] %s:%d Trying to filter packet when there is either no stream subscription or packet's streamID isnt set
 [%s] %s:%d Generic NACK packet received, ssrc=%u ssrc_hex=%x source_ssrc=%u source_ssrc_hex=%x highestSeqNum=%d highestSeqNum_hex=%x bitMask=%x length passed=%zu length in pkt=%zu
 [%s] %s:%d Unit Test: readDatagramWithCompletionHandler NOT SUPPORTED
 [%s] %s:%d Unit Test: call to readDatagramsWithCompletionHandler NOT SUPPORTED
 [%s] %s:%d Empyting _datagramPacketsDirectIDSPath for next set of packets
 [%s] %s:%d Packet=%@ did not get enqueued in direct IDS Path
 [%s] %s:%d Unit Test: Invalidating VCMockIDSDatagramChannel
 [%s] %s:%d Unit Test: Invalidated VCMockIDSDatagramChannel
 [%s] %s:%d Unit Test: call to start NOT SUPPORTED
 [%s] %s:%d Unit Test: call to setChannelPreferences
 [%s] %s:%d Unit Test: call to requestSessionInfoWithOptions only supported for stream subscription updates
 [%s] %s:%d Unit Test: call to reportFirstPacketTimeForMKI NOT SUPPORTED
 [%s] %s:%d Create socket failed %d
 [%s] %s:%d Returning underlyingFD %d
 [%s] %s:%d recv failed %d errno %d
 [%s] %s:%d Unit Test: emulating loss by dropping packet GGeneric NACK packet received, ssrc=%u ssrc_hex=%x source_ssrc=%u source_ssrc_hex=%x highestSeqNum=%d highestSeqNum_hex=%x bitMask=%x length passed=%zu length in pkt=%zu
 [%s] %s:%d Unit Test: emulating loss by dropping packet _emulatedRxPLR=%f ssrc=%u seqNum=%hu retransmittedPacket=%d dataLength=%d
 [%s] %s:%d Unit Test: emulating loss by dropping packet
 [%s] %s:%d IGNORING! Add media packet to the buffer at index=%llu for ssrc=%u and seqNum=%u length=%zu
 [%s] %s:%d RTX/NACK: Retrieve media packet from buffer at index=%llu for ssrc=%u ssrc_hex=%x and seq=%u seq_hex=%x nCount=%u cached_ssrc2=%u cached_ssrc_hex=%x cached_seqNum2=%u cached_seqNum2=%x packetLen=%u packetBufferIndex=%d index=%d
 [%s] %s:%d RTX/NACK: INVALID PACKET LEN cached packet does not match with NACK ssrc and seq num index=%llu for ssrc=%u ssrc_hex=%x and seq_hex=%u seq_hex=%x nCount=%u ssrc2=%u ssrc2_hex=%x seqNum2=%u seqNum2_hex=%x packetLen=%u packetBufferIndex=%d index=%d
 [%s] %s:%d RTX/NACK: INVALID PACKET NACK packet does not match with cached ssrc and seqnum index=%llu for ssrc=%u ssrc_hex=%x and seq=%u seq_hex=%x nCount=%u cached_ssrc2=%u cached_ssrc2_hex=%x cached_seqNum2=%u cached_seqNum2_hex=%x packetLen=%u packetBufferIndex=%d index=%d
 [%s] %s:%d RTX/NACK: successfully retrieved packet num index=%llu for ssrc=%u ssrc_hex=%x and seq=%u seq_hex=%x nCount=%u cached_ssrc2=%u cached_ssrc2_hex=%x cached_seqNum2=%u cached_seqNum2=%x packetLen=%u packetBufferIndex=%d index=%d
 [%s] %s:%d RTX/NACK: DATAGRAM WRITE FAILED index=%llu for ssrc=%u ssrc_hex=%x and seq_hex=%u seq_hex=%x nCount=%u ssrc2=%u ssrc2_hex=%x seqNum2=%u seqNum2_hex=%x packetLen=%u packetBufferIndex=%d index=%d error=%@
 [%s] %s:%d RTX/NACK Retrieval failed because _packetBuffer[packetBufferIndex=%llu = nil for ssrc=%u and highest=%u index=%d
 [%s] %s:%d setUPlusOneMode: isUPlusOneEnabled=%d isInitiator=%d
 [%s] %s:%d nil localIP
 [%s] %s:%d nil remoteIP
 [%s] %s:%d 0 localPort
 [%s] %s:%d 0 remotePort
 [%s] %s:%d Setup socket %@:%d to %@:%d
 [%s] %s:%d Ignoring datagram with size %d
 [%s] %s:%d Send failed %d
 [%s] %s:%d recv failed %d
VCMediaQueue [%s] %s:%d Failed to allocate dictionaries in reporting flushCountDict=%p queueSizeDict=%p
VCMediaQueue [%s] %s:%d Cannot get internal queue index for packet type=%d, mediaQueueStreamId=%u
VCMediaQueue [%s] %s:%d Media packets are drained from the busy pool of mediaQueueStreamId=%u out of order!
VCMediaQueue [%s] %s:%d Internal queue has error %d when free media packet for packet type=%d, mediaQueueStreamId=%u
VCMediaQueue [%s] %s:%d VCMediaQueue register mediaQueueStreamId=%u with internal queue index=%d
VCMediaQueue [%s] %s:%d Unknown schedule policy %d
VCMediaQueue [%s] %s:%d Starting budget in this interval: %d
VCMediaQueue [%s] %s:%d Total byte count scheduled in this interval: %d, remaining budget: %d
VCMediaQueue [%s] %s:%d Failed to enqueue! status: %d
VCMediaQueue [%s] %s:%d Schedule policy %d should not reach here!
VCMediaQueue [%s] %s:%d CMBlock error %d when send/free media packet for mediaQueueStreamId=%u
VCMediaQueue [%s] %s:%d Datagram count %d is larger than VTP max compound packet datagram count %d
VCMediaQueue [%s] %s:%d Not sending the malformatted packet out from VCMediaQueue!
VCMediaQueue [%s] %s:%d Sending out probingGroupID=%d, mediaQueueStreamId=%u, size=%d
VCMediaQueue [%s] %s:%d One to one should not have compound packets
VCMediaQueue [%s] %s:%d Out of memory when creating CMBlockBuffer!
VCMediaQueue [%s] %s:%d Error from _VCMediaQueue_PreAllocVCMediaPacketsInFreePool, result %x
VCMediaQueue [%s] %s:%d Out of memory when creating internal queues!
VCMediaQueue [%s] %s:%d count=%d in pool=%p
VCMediaQueue [%s] %s:%d numberOfInternalQueues=%d mediaQueue->config.useExternalDataBuffer=%d
VCMediaQueue [%s] %s:%d mediaQueue cannot be NULL
VCMediaQueue [%s] %s:%d Internal queue with index %d is NULL
VCMediaQueue [%s] %s:%d Number of internal queues are set too large
VCMediaQueue [%s] %s:%d Not enough memory to create run time instance
VCMediaQueue [%s] %s:%d Not enough memory to create main queue
VCMediaQueue [%s] %s:%d Not enough memory to create internal queues
VCMediaQueue [%s] %s:%d VCMediaQueue: Force Disabling Packet Bundling
VCMediaQueue [%s] %s:%d Failed to create packet bundler
VCMediaQueue [%s] %s:%d Failed to create internal thread
VCMediaQueue [%s] %s:%d VCMediaQueue created successfully with 1 main queue, %d internal queues
VCMediaQueue [%s] %s:%d VCMediaQueueSendProc thread started
VCMediaQueue [%s] %s:%d VCMediaQueueSendProc thread ended
VCMediaQueue [%s] %s:%d Cannot get internal queue index for mediaQueueStreamId=%u
VCMediaQueue [%s] %s:%d Cannot get media packet from its pool for mediaQueueStreamId=%d
VCMediaQueue [%s] %s:%d Add media packet for an unknown packet type %d
VCMediaQueue [%s] %s:%d Set internalQueue timestampRateHz=%u for packetType=%d, mediaQueueStreamId=%u
VCMediaQueue [%s] %s:%d Internal queue has error %d when adding media packet for packet type=%d, mediaQueueStreamId=%u
VCMediaQueue [%s] %s:%d VCMediaQueue set with peak bitrate = %u
VCMediaQueue [%s] %s:%d VCMediaQueue set with MTU bytes = %u
VCMediaQueue [%s] %s:%d mediaQueue or its rateStats cannot be NULL mediaQueue=%p mediaQueue->rateStats=%p
VCMediaQueue [%s] %s:%d VCMediaQueue set oneToOne=%u
VCMediaQueue [%s] %s:%d Callback is NULL
VCMediaQueue [%s] %s:%d VCMediaQueue is not in the oneToOne mode yet
VCMediaQueue [%s] %s:%d Finalize the media queue:%p
VCMediaQueue [%s] %s:%d IDR frame sent out. Reset lastIDRTimestamp for mediaQueueStreamId=%u, frameSizeInPackets=%u
VCMediaQueue [%s] %s:%d Adding extension failed with result=%08X for packet sequenceNum=%u controlInfo=%p
VCMediaQueue [%s] %s:%d Refresh frame counter=%d, time=%.4f
VCMediaQueue [%s] %s:%d Unable to enqueue onto the media queue. Dropping the packet. status=%d
VCMediaQueue [%s] %s:%d Internal queue has error %d when free media packet for mediaQueueStreamId=%u
VCMediaQueue [%s] %s:%d Media packets are drained from the busy pool of stream=%u out of order!
VCMediaQueue [%s] %s:%d VCMediaQueue internal queue flushed with %u packets, %d remaining
VCMediaQueue [%s] %s:%d VCMediaQueue size over high water mark for mediaQueueStreamId=%u queueSizeInSecond=%f
VCMediaQueue [%s] %s:%d VCMediaQueue size under low water mark for mediaQueueStreamId=%u queueSizeInSecond=%f
VCMediaQueue [%s] %s:%d VCMediaQueue IN/OUT RealTime stats cannot be malloced
VCMediaQueue [%s] %s:%d VCMediaQueue IN/OUT RealTime stats are ENABLED
VCMediaQueue [%s] %s:%d mediaPacket or rateStats cannot be NULL
AVConferencePreview [%s] %s:%d self=%p (%@), delegate=%p (%@)
AVConferencePreview [%s] %s:%d Protocol AVConferencePreviewClientDelegate contains %u optional methods.
AVConferencePreview [%s] %s:%d %u: Delegate %s to "%@"
@:@ AVConferencePreview-didStartPreview
AVConferencePreview [%s] %s:%d @:@ AVConferencePreview-didStartPreview (%p)
@:@ AVConferencePreview-didPausePreview
AVConferencePreview [%s] %s:%d @:@ AVConferencePreview-didPausePreview (%p)
@:@ AVConferencePreview-didStopPreview
AVConferencePreview [%s] %s:%d @:@ AVConferencePreview-didStopPreview (%p)
@:@ AVConferencePreview-didReceiveFirstPreviewFrameFromCamera
AVConferencePreview [%s] %s:%d @:@ AVConferencePreview-didReceiveFirstPreviewFrameFromCamera (%p) cameraUID=%@
@:@ AVConferencePreview-didReceiveFirstPreviewFrameFromCameraUniqueID
AVConferencePreview [%s] %s:%d @:@ AVConferencePreview-didReceiveFirstPreviewFrameFromCameraUniqueID (%p) cameraUID=%@
AVConferencePreview [%s] %s:%d self=[%p] cameraUID=%@
AVConferencePreview [%s] %s:%d (%p) videoAttributes=%@
AVConferencePreview [%s] %s:%d (%p) screenAttributes=%@
AVConferencePreview [%s] %s:%d cameraUID=%s, error=%@
@:@ AVConferencePreview-didReceiveErrorFromCamera
AVConferencePreview [%s] %s:%d @:@ AVConferencePreview-didReceiveErrorFromCamera (%p) cameraUID=%@, error=%@
AVConferencePreview [%s] %s:%d size=%lu
AVConferencePreview [%s] %s:%d Delegate does not respond to didGetSnapshot:
AVConferencePreview [%s] %s:%d cameraUniqueID=%s
AVConferencePreview [%s] %s:%d Delegate does not respond to cameraDidBecomeAvailableForUniqueID:
AVConferencePreview [%s] %s:%d cameraUID=%s, reason=%d
AVConferencePreview [%s] %s:%d Delegate does not respond to cameraDidBecomeInterruptedForForUniqueID:reason:
AVConferencePreview [%s] %s:%d zoomAvailabilty=%d
AVConferencePreview [%s] %s:%d Delegate does not respond to cameraZoomAvailabilityDidChange:
AVConferencePreview [%s] %s:%d availability=%d
AVConferencePreview [%s] %s:%d Delegate does not respond to cameraCinematicFramingAvailabilityDidChange:
AVConferencePreview [%s] %s:%d Invalid layer or slot: layer=%p, slot=%u
AVConferencePreview [%s] %s:%d Connected slot %u to layer %p named "%@"
AVConferencePreview [%s] %s:%d previewDidReceiveFirstFrame: Retrying connection to server in %g seconds, connection attempts %u
AVConferencePreview [%s] %s:%d previewDidReceiveFirstFrame: Sending re-connect message to server
AVConferencePreview [%s] %s:%d previewDidReceiveFirstFrame: Connected to server
AVConferencePreview [%s] %s:%d previewCameraUIDChanged: cameraUID = %@
AVConferencePreview [%s] %s:%d previewCameraUIDChanged: cameraUID is nil
AVConferencePreview [%s] %s:%d previewDidStart: _isPreviewRunning=%d
AVConferencePreview [%s] %s:%d previewDidPause: _isPreviewRunning=%d
AVConferencePreview [%s] %s:%d previewDidStop: _isPreviewRunning=%d
AVConferencePreview [%s] %s:%d previewDidLocalVideoSlotChange: Received slot %u for layer %p facing %d
AVConferencePreview [%s] %s:%d updatePreviewState: _isPreviewRunning=%d
@:@ AVConferencePreview-dealloc
AVConferencePreview [%s] %s:%d @:@ AVConferencePreview-dealloc (%p)
AVConferencePreview [%s] %s:%d !!Deprecating!! Client is recommanded to use startPreview instead. AVConferencePreview startPreviewUnpausing, self %p, unpause=%d.
AVConferencePreview [%s] %s:%d _isPreviewRunning=%d
AVConferencePreview [%s] %s:%d returning %d
AVConferencePreview [%s] %s:%d returning %f
AVConferencePreview [%s] %s:%d ---- STOP! ---- setLocalCamera is deprecated! Use setLocalCameraWithUID instead! AVConferencePreview setLocalCamera %u
AVConferencePreview [%s] %s:%d requestedCameraUniqueID = %@
AVConferencePreview [%s] %s:%d enabled=%d
AVConferencePreview [%s] %s:%d localCamera=%u
 [%s] %s:%d DTMF: error, unsupported event %u
 [%s] %s:%d DTMF: error, not a start block
 [%s] %s:%d Timestamp delta between the current packet timestamp and the timestamp when the DTMF event was originated from IPT=%d, current event=%d, timestamp=%d, currentStartTimestamp=%d
 [%s] %s:%d DTMF: error, not a stop block
 [%s] %s:%d Screen size error: %dx%d
 [%s] %s:%d Invalid payload config
 [%s] %s:%d Failed to encode the codec=%d
 [%s] %s:%d Failed to encode the cipherSuite=%d
 [%s] %s:%d Unsupported H264PacketizationMode=%d
 [%s] %s:%d Unsupported H264LevelAsymmetryAllowed=%d
 [%s] %s:%d Unsupported cipher suite (%u)
 [%s] %s:%d codecType=%u is too large for packed format
 [%s] %s:%d rtpPayload=%u is too large for packed format
 [%s] %s:%d rtcpFlags=%u is too large for packed format
 [%s] %s:%d rtpSampleRate=%u is too large for packed format
 [%s] %s:%d Unknown rtpSampleRate=%u
 [%s] %s:%d negotiationCipherSuite=%u is too large for packed format
 [%s] %s:%d mediaFlags=%u is too large for packed format
 [%s] %s:%d pTime=%lu is too large for packed format or is not
 [%s] %s:%d Failed to allocate VCMediaNegotiationBlobV2StreamGroupPayload (extension)
 [%s] %s:%d HandoverReport: Duplication is forcibly disabled using user defaults
 [%s] %s:%d HandoverReport: Duplication cannot be enabled due to WiFi off-channel activity
 [%s] %s:%d HandoverReport: Duplication state changed to PENDING
 [%s] %s:%d HandoverReport: Duplication state changed to ON
 [%s] %s:%d HandoverReport: Duplication state changed to OFF
 [%s] %s:%d HandoverReport: Ignoring iRAT suggestion as directed by storebag settings
 [%s] %s:%d HandoverReport: start dupe by local media degraded.
 [%s] %s:%d HandoverReport: start dupe by both local media degraded and remote duplication.
 [%s] %s:%d HandoverReport: stop dupe by local media degraded.
 [%s] %s:%d HandoverReport: stop dupe by local media degraded but remain dupe by remote duplication.
 [%s] %s:%d HandoverReport: remote duplication suggests %s during other type of duplication.
 [%s] %s:%d HandoverReport: stop dupe by remote duplication.
 [%s] %s:%d HandoverReport: stop dupe by remote duplication but remain dupe by local media degraded.
 [%s] %s:%d HandoverReport: stop dupe by remote duplication but remain dupe by local media health unrecoverable.
 [%s] %s:%d HandoverReport: stop dupe by local media degraded in handover.
 [%s] %s:%d HandoverReport: stop dupe by both local media degraded and remote duplication in handover.
 [%s] %s:%d HandoverReport: stop dupe by remote media degraded in handover.
 [%s] %s:%d HandoverReport: start dupe by local media degraded in handover.
 [%s] %s:%d HandoverReport: start dupe by remote media degraded in handover.
 [%s] %s:%d HandoverReport: Make duplication pending due to interface alert update
 [%s] %s:%d HandoverReport: Enable duplication if it is pending, due to interface alert update
 [%s] %s:%d HandoverReport: updateDuplicationStateWithAlertInfo - isOnLocal: %d isAlertEnabled: %d connectionWiFiCount: %d connectionCellCount: %d isDuplicationDisabledDueToAlert: %d
 [%s] %s:%d HandoverReport: start dupe by media health unrecoverable.
 [%s] %s:%d HandoverReport: start dupe by both local media health unrecoverable and remote duplication.
 [%s] %s:%d HandoverReport: stop dupe by media health recovered.
 [%s] %s:%d HandoverReport: stop dupe by media health recovered but remain dupe by remote duplication.
 [%s] %s:%d HandoverReport: start dupe by remote duplication.
 [%s] %s:%d HandoverReport: start dupe by both remote and local media degraded.
 [%s] %s:%d HandoverReport: local media degraded suggests %s during other type of duplication.
 [%s] %s:%d Packet handler called after secure data channel was released!
 [%s] %s:%d Failed to decrypt the data. (%X)
 [%s] %s:%d maxEncryptedDataSize = %ld
 [%s] %s:%d %@(%p) maxEncryptedDataSize = %ld
 [%s] %s:%d maxUnencryptedDataSize = %ld
 [%s] %s:%d %@(%p) maxUnencryptedDataSize = %ld
 [%s] %s:%d sharedSecret (%p) invalid: requiredSize = %d, passedSize = %d
 [%s] %s:%d tls_record_init_pending_ciphers failed with error 0x%X
 [%s] %s:%d tls_record_advance_read_cipher failed with error 0x%X
 [%s] %s:%d tls_record_advance_write_cipher failed with error 0x%X
 [%s] %s:%d Data is too large (%d)
 [%s] %s:%d Failed to encrypt the client data (%X)
 [%s] %s:%d Failed with status: %X
 [%s] %s:%d Invalid encrypted data passed to %s.
 [%s] %s:%d need sharedSecret for encrypted data
 [%s] %s:%d tls_record_decrypt failed with error 0x%X
 [%s] %s:%d tls_record_decrypt returned contentType = %d != tls_record_type_AppData
 [%s] %s:%d Invalid secure data passed to %s.
 [%s] %s:%d Invalid OFT Type %d
 [%s] %s:%d streamIDsDictionary is nil
 [%s] %s:%d subscribedStreamIDs is the same. Don't subscribe again
 [%s] %s:%d retry %d times subscribedStreamIDs equal: %@
 [%s] %s:%d Hit the retry limit=%d for subscribedStreamIDs
 [%s] %s:%d primary connection is nil
 [%s] %s:%d Primary connection is end-to-end when subscribing to streams.
 [%s] %s:%d Secondary connection is end-to-end when subscribing to streams.
 [%s] %s:%d set publishedStreamIDs: %@
 [%s] %s:%d publishedStreamIDs equal: %@
 [%s] %s:%d Primary connection is end-to-end when publishing streams.
 [%s] %s:%d set primaryLinkID: %@
 [%s] %s:%d set duplicationLinkID: %@
 [%s] %s:%d Reset participant generation counter from %d to 0
 [%s] %s:%d participantGenerationCounterLSByte = %d, %d
 [%s] %s:%d eventInfo=%@
 [%s] %s:%d eventInfo has IDSDataChannelError, ERROR = %@
 [%s] %s:%d No IDSSessionInfoResponse in the eventInfo!
 [%s] %s:%d Getting duplicated participantGenerationCounter=%u
 [%s] %s:%d %@(%p) Getting duplicated participantGenerationCounter=%u
 [%s] %s:%d peerSubscribedStreamCallback is not set up
 [%s] %s:%d %@(%p) peerSubscribedStreamCallback is not set up
 [%s] %s:%d Ignoring identical peerSubscribedStreams=%@
 [%s] %s:%d %@(%p) Ignoring identical peerSubscribedStreams=%@
 [%s] %s:%d peerPublishedStreamCallback is not set up
 [%s] %s:%d %@(%p) peerPublishedStreamCallback is not set up
 [%s] %s:%d Ignoring identical peerPublishedStreams=%@
 [%s] %s:%d %@(%p) Ignoring identical peerPublishedStreams=%@
 [%s] %s:%d Primary connection is nil
 [%s] %s:%d Opt in for connection, request = %@
 [%s] %s:%d Connection is nil
 [%s] %s:%d Opt out for non primary connection, request = %@
 [%s] %s:%d stats controller [%p] init with transportStream [%p] and transportSessionId: %u
 [%s] %s:%d dealloc [%p] with statsCount:[%u, %u, %u, %u]
 [%s] %s:%d session stats controller reset
 [%s] %s:%d VCRealTimeThread_Start for session stats controller %s
 [%s] %s:%d VCRealTimeThread_Initialize for session stats controller thread FAILED
 [%s] %s:%d start local session stats update
 [%s] %s:%d stop local session stats update completely
 [%s] %s:%d Round trip time is greater than 10 seconds [RTT:%dms]
 [%s] %s:%d Local VTP queue time is greater than 1 seconds [qTime:%dms]
 [%s] %s:%d index = %d, sessionStatsLocal: uplinkID = %d, request time = %f, totalLocalMediaPacketSent = %d, totalServerStatsByteUsed = %d
 [%s] %s:%d Dropping late server stats with Id: %u [current Id:%u, diff:%u]
 [%s] %s:%d Trigger rate control without serverStats response with uplinkSendTimestamp:0x%04X, downlinkSendTimestamp:0x%04X [uplink:%s, downlink:%s]
 [%s] %s:%d Receive packet from transport stream fails!
 [%s] %s:%d Invalid remoteSessionStats
 [%s] %s:%d Do not update session stats since linkID does not match %d, %d
 [%s] %s:%d statsID is same as the previous one %u
 [%s] %s:%d @=@ Health: VCSessionStatsController Health Monitor for serverStats: total stats request count:%u, total response count:%u, total callback count:%u, avgInterCallbackDuration:%.3f [this interval processed:%u, dropped:%u,%u,%u, triggered:%u,%u, average queue time:%.2fms, max queue time:%.2fms]
 [%s] %s:%d statsController is NULL!
 [%s] %s:%d Failed to register
 [%s] %s:%d Failed to open path to audio units
 [%s] %s:%d Dynamic ducker component not found.
 [%s] %s:%d Failed to create a dynamic ducker instance err=%d
 [%s] %s:%d AVCPacketRelaySocketConnection: getpeername failed on connected socket %d with errno %d
 [%s] %s:%d AVCPacketRelaySocketConnection: invalid remote IPPort
 [%s] %s:%d AVCPacketRelaySocketConnection: socket %d is connected. Expected an unconnected socket
 [%s] %s:%d Created AVCPacketRelaySocketConnection %s successfully
 [%s] %s:%d AVCPacketRelaySocketConnection: init error %08X
 [%s] %s:%d AVCPacketRelaySocketConnection: starting...
 [%s] %s:%d AVCPacketRelaySocketConnection: cannot start without setting read handler
 [%s] %s:%d AVCPacketRelaySocketConnection: stopping...
 [%s] %s:%d AVCPacketRelaySocketConnection: received from %s
 [%s] %s:%d AVCPacketRelaySocketConnection: receive failed with error %d on socket %d
 [%s] %s:%d AVCPacketRelaySocketConnection: received %d bytes of data
 [%s] %s:%d AVCPacketRelaySocketConnection: send failed with error %d on socket %d
 [%s] %s:%d AVCPacketRelaySocketConnection: send failed with broken pipe (socket %d), error %d
 [%s] %s:%d AVCPacketRelaySocketConnection: sent %zu bytes < %u total bytes
 [%s] %s:%d AVCPacketRelaySocketConnection: sent %zu bytes
 [%s] %s:%d AVCPacketRelaySocketConnection: dealloc
 [%s] %s:%d Created AVCPacketRelayIDSConnection %s successfully
 [%s] %s:%d AVCPacketRelayIDSConnection: init error %08X
 [%s] %s:%d AVCPacketRelayIDSConnection: already started
 [%s] %s:%d AVCPacketRelayIDSConnection: cannot start without setting read handler
 [%s] %s:%d AVCPacketRelayIDSConnection: starting...
 [%s] %s:%d AVCPacketRelayIDSConnection: Datagram channel link %d failed to read with error %s
 [%s] %s:%d AVCPacketRelayConnection has been dealloced
 [%s] %s:%d AVCPacketRelayIDSConnection: Datagram channel link %d returned empty datagram
 [%s] %s:%d AVCPacketRelayIDSConnection: reading %u bytes
 [%s] %s:%d AVCPacketRelayIDSConnection: IDS eventHandler called without event type
 [%s] %s:%d AVCPacketRelayIDSConnection: IDS channel connected
 [%s] %s:%d AVCPacketRelayIDSConnection: IDS channel disconnected
 [%s] %s:%d AVCPacketRelayIDSConnection: stopping...
 [%s] %s:%d AVCPacketRelayIDSConnection: resume the connection and wait to be connected before sending data
 [%s] %s:%d AVCPacketRelayIDSConnection: write %u bytes failed with error %s
 [%s] %s:%d AVCPacketRelayIDSConnection: write %u bytes successfully
 [%s] %s:%d AVCPacketRelayIDSConnection: dealloc
 [%s] %s:%d AVCPacketRelay: init connection is nil
 [%s] %s:%d AVCPacketRelay: init connection has wrong type
 [%s] %s:%d AVCPacketRelay: failed to create AVCPacketRelayQueue
 [%s] %s:%d AVCPacketRelay: readHandler failed with error %s
 [%s] %s:%d AVCPacketRelay has been dealloced
 [%s] %s:%d AVCPacketRelay: doesn't know how to forward packet
 [%s] %s:%d AVCPacketRelay: forwarding packet failed with error %s
 [%s] %s:%d Created AVCPacketRelay %s successfully
 [%s] %s:%d AVCPacketRelay: init failed with error %s
 [%s] %s:%d AVCPacketRelay: starting...
 [%s] %s:%d AVCPacketRelay: stopping...
 [%s] %s:%d AVCPacketRelay: dealloc
 [%s] %s:%d AVCPacketRelay: start failed with result %08X
 [%s] %s:%d AVCPacketRelay: stop connection failed with result %08X
 [%s] %s:%d AVCPacketRelay: stop multiplexed connection failed with result %08X
 [%s] %s:%d AVCPacketRelay: stop failed with result %08X
 [%s] %s:%d @=@ Health: AVCPacketRelay Health Monitor for AVCPacketRelay Send packet count=%d, byte count=%d, interval=%.3fs, rate=%.3fkbps
 [%s] %s:%d @=@ Health: AVCPacketRelay Health Monitor for AVCPacketRelay Recv packet count=%d, byte count=%d, interval=%.3fs, rate:%.3fkbps, demuxPackets:[rtpAndRTCPPacketCount=%u, rtpPacketCount=%u, rtcpPacketCount=%u, droppedPacketCount=%u]
 [%s] %s:%d Invalid mediaStreamMode=%d
 [%s] %s:%d Invalid connection type=%d
 [%s] %s:%d Invalid mode=%d
 [%s] %s:%d mode=%ld, error=%@
 [%s] %s:%d %s.
 [%s] %s:%d Failed to allocate offer info
 [%s] %s:%d %@(%p) Failed to allocate offer info
 [%s] %s:%d uuid generation failed
 [%s] %s:%d %@(%p) uuid generation failed
 [%s] %s:%d could not generate dataSessionID
 [%s] %s:%d %@(%p) could not generate dataSessionID
 [%s] %s:%d could not generate callInfoBlob on offerer
 [%s] %s:%d %@(%p) could not generate callInfoBlob on offerer
 [%s] %s:%d offer=%@, error=%@
 [%s] %s:%d Failed to allocate answer info dictionary
 [%s] %s:%d Failed to add VCCallInfo dictionary on answerer
 [%s] %s:%d answer=%@, error=%@
 [%s] %s:%d Negotiated accessNetworkType cannot be kAVCMediaStreamAccessNetworkTypeTypeUnspecified
 [%s] %s:%d Negotiated values: mediaStreamMode=%u, audioStreamMode=%u, codecType=%u, payloadType=%u pTime=%u
 [%s] %s:%d Negotiated values: tilesPerFrame=%lu, ltrpEnabled=%i, videoWidth=%lu, videoHeight=%lu, payloadType=%lu, videoHDRMode = %lu, frameRate=%lu, maxTxBitRate=%lu, FLS=%s, transportProtocolType=%u
 [%s] %s:%d error=%@
 [%s] %s:%d Failed to allocate media stream config object
 [%s] %s:%d Failed to allocate callInfo blob object
 [%s] %s:%d Failed to create deviceType string for VCCallInfo blob
 [%s] %s:%d Failed to osVersion string for VCCallInfo blob
 [%s] %s:%d Failed to frameworkVersionString string for VCCallInfo blob
 [%s] %s:%d Local callInfoBlob = %s
 [%s] %s:%d Negotiated pixelFormat=%s for mediaStreamMode=%lu in videoHDRMode=%lu
 [%s] %s:%d Negotiation of hdr modes is incorrect
VCMediaStreamSynchronizer [%s] %s:%d VCMediaStreamSynchronizer[%p] failed! sourceSampleRate:%u destinationSampleRate:%u
VCMediaStreamSynchronizer [%s] %s:%d VCMediaStreamSynchronizer[%p]: sourceSampleRate:%ld destinationSampleRate:%ld
VCMediaStreamSynchronizer [%s] %s:%d synchronizer=nil
VCMediaStreamSynchronizer [%s] %s:%d VCMediaStreamSynchronizer[%p]: source info not ready
VCMediaStreamSynchronizer [%s] %s:%d VCMediaStreamSynchronizer[%p]: destination info not ready
VCMediaStreamSynchronizer [%s] %s:%d VCMediaStreamSynchronizer[%p] Received dest (video) ntpTime=%.6f rtpTimeStamp=%u
VCMediaStreamSynchronizer [%s] %s:%d VCMediaStreamSynchronizer[%p]: Scheduled playout for dest (video) RTPTimestamp=%u scheduleTime=%.6f
VCMediaStreamSynchronizer [%s] %s:%d VCMediaStreamSynchronizer[%p]: wrapCount=%d sourceTime=%.9f
VCMediaStreamSynchronizer [%s] %s:%d VCMediaStreamSynchronizer: wrap around playoutSampleRTP(%lld)-destRTPOfNTP(%lld)=%lld
VCMediaStreamSynchronizer [%s] %s:%d VCMediaStreamSynchronizer[%p]: isSourceActive:%d
VCMediaStreamSynchronizer [%s] %s:%d VCMediaStreamSynchronizer[%p]: resetting source state
VCMediaStreamSynchronizer [%s] %s:%d VCMediaStreamSynchronizer[%p]: Received source (audio) frame. systemTime=%.6f playoutSampleRTPTimestamp=%u
VCMediaStreamSynchronizer [%s] %s:%d VCMediaStreamSynchronizer[%p] Received source (audio) ntpTime=%.6f rtpTimeStamp=%u
VCMediaStreamSynchronizer [%s] %s:%d VCMediaStreamSynchronizer[%p]: lastSrcRTP=%u srcSRRTP=%u srcSRNPT=%.9f srcRate=%d dstRTP=%u dstSrRTP=%u dstSRNTP=%.9f dstRate=%d
VCMediaStreamSynchronizer [%s] %s:%d VCMediaStreamSynchronizer[%p]: DToS: %u->%u
AVCTextStream [%s] %s:%d socketsDictionary=%@, callID=%@, error=%@
AVCTextStream [%s] %s:%d Failed to allocate callback queue
AVCTextStream [%s] %s:%d %@(%p) Failed to allocate callback queue
AVCTextStream [%s] %s:%d Failed to allocate text stream
AVCTextStream [%s] %s:%d %@(%p) Failed to allocate text stream
AVCTextStream [%s] %s:%d Failed to get capabilities dictionary
AVCTextStream [%s] %s:%d %@(%p) Failed to get capabilities dictionary
AVCTextStream [%s] %s:%d @:@ AVCTextStream-init (%p) PID=%d, callID=%@, streamToken=%d, error=%@
@:@ AVCTextStream-init
AVCTextStream [%s] %s:%d @:@ AVCTextStream-init (%p)
@:@ AVCTextStream-dealloc
AVCTextStream [%s] %s:%d @:@ AVCTextStream-dealloc (%p)
AVCTextStream [%s] %s:%d Invalid text configuration: error[%s]
AVCTextStream [%s] %s:%d %@(%p) Invalid text configuration: error[%s]
AVCTextStream [%s] %s:%d 
AVCTextStream [%s] %s:%d start (not using XPC)
AVCTextStream [%s] %s:%d %@(%p) start (not using XPC)
@:@ AVCTextStream-start
AVCTextStream [%s] %s:%d @:@ AVCTextStream-start (%p)
@:@ AVCTextStream-stop
AVCTextStream [%s] %s:%d @:@ AVCTextStream-stop (%p)
@:@ AVCTextStream-pause
AVCTextStream [%s] %s:%d @:@ AVCTextStream-pause (%p)
@:@ AVCTextStream-resume
AVCTextStream [%s] %s:%d @:@ AVCTextStream-resume (%p)
AVCTextStream [%s] %s:%d delegate=%p
AVCTextStream [%s] %s:%d direction=%d
AVCTextStream [%s] %s:%d direction is already set to %d
AVCTextStream [%s] %s:%d rtcpEnabled=%d
AVCTextStream [%s] %s:%d rtcpEnabled is already set to %d
AVCTextStream [%s] %s:%d rtpTimeOutEnabled=%d
AVCTextStream [%s] %s:%d rtpTimeOutEnabled is already set to %d
AVCTextStream [%s] %s:%d rtcpTimeOutEnabled=%d
AVCTextStream [%s] %s:%d rtcpTimeOutEnabled is already set to %d
AVCTextStream [%s] %s:%d rtpTimeOutIntervalSec=%f
AVCTextStream [%s] %s:%d rtpTimeOutInterval is already set to %f
AVCTextStream [%s] %s:%d rtcpTimeOutIntervalSec=%f
AVCTextStream [%s] %s:%d rtcpTimeOutIntervalSec is already set to %f
AVCTextStream [%s] %s:%d rtcpSendIntervalSec=%f
AVCTextStream [%s] %s:%d rtcpSendIntervalSec is already set to %f
 [%s] %s:%d called with invalid parameter: routine=%p context=%p identifier=%p
 [%s] %s:%d Failed to allocate real time thread
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCRealTimeThread.c:%d: Failed to start the thread
 [%s] %s:%d called with NULL context!
 [%s] %s:%d ### VCRealTimeThread_Start(%s) called!
 [%s] %s:%d ### VCRealTimeThread_Stop(%s) called!
 [%s] %s:%d Successful thread state transition: %d -> %d
 [%s] %s:%d Thread state transition failed: %d -> %d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCRealTimeThread.c:%d: Thread creation failed (%d)
 [%s] %s:%d ### VCRealTimeThread_ThreadProc(%s) start!
 [%s] %s:%d ### VCRealTimeThread_ThreadProc(%s) running!
 [%s] %s:%d ### VCRealTimeThread_ThreadProc(%s) pausing!
 [%s] %s:%d ### VCRealTimeThread_ThreadProc(%s) stop!
 [%s] %s:%d Socket creation error - %u
 [%s] %s:%d dictXPCObj returned NULL
 [%s] %s:%d Failed to add the format description
 [%s] %s:%d Failed to read the media type
 [%s] %s:%d Incompatible media type
 [%s] %s:%d Failed to create XPC object for mediaType=%s
 [%s] %s:%d Unsupported mediaType=%s
 [%s] %s:%d Failed to allocate value ref for %s
 [%s] %s:%d Failed to create XPC object for media type
 [%s] %s:%d Failed to create XPC object for width
 [%s] %s:%d Failed to create XPC object for height
 [%s] %s:%d Failed to create XPC object for the format extensions
 [%s] %s:%d Unable to extract audio stream basic description from formatDescription
 [%s] %s:%d dataXPCObj is NULL
 [%s] %s:%d Could not encode CMSampleBuffer attachments
 [%s] %s:%d Failed to encode audio sample buffer for XPC
 [%s] %s:%d XPC object not found for %s
 [%s] %s:%d Failed to create number ref for %s
 [%s] %s:%d Failed to read the pixel format
 [%s] %s:%d Failed to read the width
 [%s] %s:%d Failed to read the height
 [%s] %s:%d Failed to read extensions
 [%s] %s:%d Failed to create format description. status=%d
 [%s] %s:%d xpc_data_get_bytes returned an unexpected size=%d for the audio format
 [%s] %s:%d Failed to create format description from XPC dictionary. status=%d
 [%s] %s:%d Failed to retrieve the pixel buffer
 [%s] %s:%d Could not retrieve the time information
 [%s] %s:%d Failed to decode samplebuffer attachments
 [%s] %s:%d Failed to read the audio sample count
 [%s] %s:%d Failed to decode audio sample buffer
 [%s] %s:%d Failed to decode the block buffer
 [%s] %s:%d Failed to decode the format description
 [%s] %s:%d Failed to decode the time
 [%s] %s:%d Could not recreate sample buffer from xpcDictionary: %d
 [%s] %s:%d Data is missing in XPC dictionary
 [%s] %s:%d Failed to retrieve data buffer from XPC dictionary
 [%s] %s:%d Unexpected data length=%d
 [%s] %s:%d Failed to allocate temporary buffer
 [%s] %s:%d Error creating CMBlockBufferRef from CFData. status=%d
VCRC [%s] %s:%d [%p] config for key=%s serverBagContainsGroup=%d fastSuddenBandwidthDetectionEnabled=%d minProbingSequenceSize=%d suddenBWDPercentage=%f minFastBWDSampleCount=%d
VCRC [%s] %s:%d Invalid parameter. estimator=%p
VCRC [%s] %s:%d Probing sequence head is late, early probing sequence packet number: %d, bytes:%d
VCRC [%s] %s:%d Bandwidth Estimation(BWD:%.2f): ArrivalTime:%.4f, state:%d, divergeCount:%d, EstimatedBandwidth:%.2f
VCRC [%s] %s:%d Bandwidth Estimation: Update bandwidth estimator qualification parameters with RAT=%d, mode=%d. [maxBW:%f, minWin:%f, maxOverRange:%d, minPacketCount:%d]
VCRC [%s] %s:%d Invalid parameter. estimatorMap=%p
VCRC [%s] %s:%d Create bandwidth estimator for estimator id: %d
VCRC [%s] %s:%d Remove bandwidth estimator for estimator id: %d
AVCRC [%s] %s:%d Unsupported operating mode %d
AVCRC [%s] %s:%d Adding key:%s for mode %d
AVCRC [%s] %s:%d Server bag dictionary is empty.
AVCRC [%s] %s:%d operatingMode:%d keys:%s
AVCRC [%s] %s:%d Invalid type=%d
AVCRC [%s] %s:%d Could not find key %s in VCRC Server Bag!
AVCRC [%s] %s:%d VCRC Experiment groupIndex=%d populationDistribution=%@ randomValue=%f
 [%s] %s:%d Expand: WARN TOO MANY PLAYED OUT DATA %d > 15 ms %d
 [%s] %s:%d levelMatchPercentile = %2.3f out of valid range
 [%s] %s:%d buffer size out of valid range bufferMaxSize = %d
 [%s] %s:%d history buffer allocate failed
 [%s] %s:%d NULL outputVector
 [%s] %s:%d output not ready
 [%s] %s:%d NULL fecAnalyzer
 [%s] %s:%d New feedback arrived fecFeedback.sizeInPackets=%d fecFeedback.lostPackets=%d time=%f timeDelta=%f bufferIndex=%d
 [%s] %s:%d Histogram has been populated countItems=%d currentTimeDelta=%f _lastComputedVPLR=%2.2f
 [%s] %s:%d Invalid transportSessionID
 [%s] %s:%d VTP_SetTransportSessionID failed %x
 [%s] %s:%d capture = %dx%d, encode = %dx%d
 [%s] %s:%d %@(%p) capture = %dx%d, encode = %dx%d
 [%s] %s:%d setupVTPSocket called before connectionResult was set
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCClientRelay.m:%d: socket failed(%08X)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCClientRelay.m:%d: bind on %s failed(%08X)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCClientRelay.m:%d: getaddrinfo(%s,%s) failed(%08X)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCClientRelay.m:%d: setupVTPSocket failed(%x)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCClientRelay.m:%d: VTPRecvProcVCCR thread create failed(%d)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCClientRelay.m:%d: startRelay: _idsReadQueue creation failed
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCClientRelay.m:%d: startRelay: _idsReadSource creation failed
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCClientRelay.m:%d: startRelay VTP_SetClientRelayMode(%d) failed(%d)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCClientRelay.m:%d: relayIDSPacket: recv failed(%d)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCClientRelay.m:%d: relayIDSPacket: VTP_Sendto: sentBytes = %d, errno = %d
 [%s] %s:%d recv(%d) = %d, sent(%d) = (%d)
 [%s] %s:%d %@(%p) recv(%d) = %d, sent(%d) = (%d)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCClientRelay.m:%d: VCClientRelayVTPReceiveProc: VTP_Select failed(%d)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCClientRelay.m:%d: VCClientRelayVTPReceiveProc: VTP_Recvfrom failed(%d)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCClientRelay.m:%d: VCClientRelayVTPReceiveProc send: sentBytes = %d, errno = %d
 [%s] %s:%d VCCR - VCClientRelayVTPReceiveProc stop!
 [%s] %s:%d invalid input parameter
 [%s] %s:%d Failed to allocate buffer list
 [%s] %s:%d Nothing to do. The audio buffer list is already NULL
 [%s] %s:%d No support for interleaved audio channels
 [%s] %s:%d Formats don't match
 [%s] %s:%d Sample count mismatch: source=%u dest=%u don't match
 [%s] %s:%d No support for non Float formats
 [%s] %s:%d Sample count sourceMultiChannelBufferList=%u and destMonoBufferList=%u don't match
 [%s] %s:%d Invalid number of source buffers, mNumberBuffers=%u
 [%s] %s:%d Formats don't match: source=%f dest=%f
 [%s] %s:%d Unable to append all the source samples!
 [%s] %s:%d failed with %d
 [%s] %s:%d invalid input parameter. Index=%u
 [%s] %s:%d Invalid input parameter
 [%s] %s:%d Number of buffers is incorrect. mNumberBuffers=%u mChannelsPerFrame=%u.
 [%s] %s:%d Invalid input parameter. inSampleBuffer=%p outSampleBuffer=%p converter=%p
 [%s] %s:%d Unable to resample. Needed capacity=%d capacity=%d
 [%s] %s:%d Invalid channel count. inSampleBuffer=%d outSampleBuffer=%d
 [%s] %s:%d converter failed
 [%s] %s:%d Failed to create the CMSampleBuffer description: %d
 [%s] %s:%d Failed to create the CMSampleBuffer: %d
 [%s] %s:%d Failed to create format description for audio buffer
 [%s] %s:%d One of the pointers passed to AudioConverterInput callback is NULL
 [%s] %s:%d Number of buffers in sample buffer and io data do not match. inAudioBuffer=%d, ioData=%d.
 [%s] %s:%d Insufficent input samples: needed = %d, available = %lu
 [%s] %s:%d Media Blob - %s
 [%s] %s:%d Media Blob - Captions Settings: canDisplayCaptions=%d
 [%s] %s:%d Media Blob -     %s
 [%s] %s:%d Media Blob - Multiway Audio: count=%d
 [%s] %s:%d Media Blob - Multiway Video: count=%d
 [%s] %s:%d Failed to create video rules media blob entries
 [%s] %s:%d Failed to create screen sharing media blob entries
 [%s] %s:%d No pixel format set to negotiate
 [%s] %s:%d No HDR modes to negotiate
 [%s] %s:%d Found duplicated rule for %dx%d (%d) payload=%d 0x%x
 [%s] %s:%d Failed to allocate video rule collection (screen=%d)
 [%s] %s:%d Failed to allocate video rules array (screen=%d)
 [%s] %s:%d Detected an unknown formats (bitfield=0x%08x, bitfieldExt1=0x%08x - screen=%d). Ignoring ...
 [%s] %s:%d Media Blob - Video Settings: SSRC=%x allowRTCPFB=%u
 [%s] %s:%d Media Blob -     Payload=%u Format string=%s
 [%s] %s:%d Media Blob -     Payload=%u Parameter set: %s
 [%s] %s:%d Media Blob - Screen Settings: SSRC=%x allowRTCPFB=%u
 [%s] %s:%d Media Blob -     Format string=%s
 [%s] %s:%d Media Blob -     Payload=%u parameter set: %s
 [%s] %s:%d Invalid bandwidth configuration: connection type=%d, operating mode=%d 
 [%s] %s:%d Media Blob -     %s
VCVirtualTTYDevice [%s] %s:%d Virtual TTY Device mode(%ld) not supported
VCVirtualTTYDevice [%s] %s:%d VCVirtualTTYDevice[%p] %s
VCVirtualTTYDevice [%s] %s:%d 
VCVirtualTTYDevice [%s] %s:%d Unable to start because of unexpected state:%d 
VCVirtualTTYDevice [%s] %s:%d %@(%p) Unable to start because of unexpected state:%d 
VCVirtualTTYDevice [%s] %s:%d CMSimpleQueueEnqueue Full
VCVirtualTTYDevice [%s] %s:%d %@(%p) CMSimpleQueueEnqueue Full
VCVirtualTTYDevice [%s] %s:%d Sending character:'%C'
VCVirtualTTYDevice [%s] %s:%d Not supported
VCVirtualTTYDevice [%s] %s:%d Received character:%c
VCVirtualTTYDevice [%s] %s:%d Unexpected SPI call
 [%s] %s:%d The payload set is empty
 [%s] %s:%d No payloads to negotiate. Audio payloads=%@
 [%s] %s:%d streamToken=%ld, requesterID=%@, delegate=%@, queue=%@v
 [%s] %s:%d Delegate parameter is nil
 [%s] %s:%d Failed to allocate moments XPC connection for streamToken:%u
 [%s] %s:%d Failed to allocate moments _delegateQueue
 [%s] %s:%d Failed to connect to moments server with streamToken:%u
 [%s] %s:%d AVCMoments: connect for streamToken:%u
 [%s] %s:%d AVCMomentsClient: Failed connection for streamToken=%u Error=%s
 [%s] %s:%d AVCMoments: capabilities is %d
 [%s] %s:%d AVCMoments: disconnect for streamToken:%u
 [%s] %s:%d AVCMoments: did start processing request from AVCMomentsManager %s
 [%s] %s:%d AVCMoments: did end processing request from AVCMomentsManager %s
 [%s] %s:%d AVCMoments: did finish request from AVCMomentsManager %s
 [%s] %s:%d Attempting to update capabilities with nil argument
 [%s] %s:%d received callback for serverDidDisconnect
 [%s] %s:%d %@(%p) received callback for serverDidDisconnect
 [%s] %s:%d AVCMoments current requests %@
 [%s] %s:%d Did not find still Image sandbox extension token to consume
 [%s] %s:%d Did not find movie sandbox extension token to consume
 [%s] %s:%d Failed to remove stillImage at URL %@: %@
 [%s] %s:%d Failed to remove movie at URL %@: %@
 [%s] %s:%d Notify client with new caps %d, currentActiveRequestsCount %d
 [%s] %s:%d mediaType=%ld, mode=%d, requesteeID=%@
 [%s] %s:%d Current active request count has reached max. Can't process anymore
 [%s] %s:%d Notify client reached max request capabilities %d
 [%s] %s:%d AVCMoments: avcMomentsRequestDidStartRequest %s
 [%s] %s:%d failed validation with error %s
 [%s] %s:%d AVCMoments: avcMomentsRequestDidEndRequest %s
 [%s] %s:%d failed validation
 [%s] %s:%d NO cell watcher support on this build
 [%s] %s:%d Failed to create H264/HEVC rules for Airplay screen!
 [%s] %s:%d Screen rules: Could not find a preferred video rule
 [%s] %s:%d Screen rules: no H264 support
 [%s] %s:%d Screen rules: Could not retrieve main screen width
 [%s] %s:%d Screen rules: Could not retrieve main screen height
 [%s] %s:%d Screen rules: Could not retrieve hardware encoder type
 [%s] %s:%d Device has no Airplay Screen rules
 [%s] %s:%d Failed to create video rule for Airplay screen !
AUIO [%s] %s:%d AUIO=%p finding next audio component with subtype=%u
AUIO [%s] %s:%d Found component=%p
AUIO [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/AUIO/AUIO.mm:%d: AudioComponentCopyName() returned error %d
AUIO [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/AUIO/AUIO.mm:%d: AudioComponentCopyName() gave a NULL name!
AUIO [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/AUIO/AUIO.mm:%d: CFStringGetCString() failed!
AUIO [%s] %s:%d Creating "%s" Component Instance
AUIO [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/AUIO/AUIO.mm:%d: AudioComponentInstanceNew failed(%X)
AUIO [%s] %s:%d AUIO=%p AudioComponentInstanceNew succeeded, unit=%p
AUIO [%s] %s:%d AUIO=%p Failed to find component
AUIO [%s] %s:%d AUIO=%p kAudioOutputUnitProperty_EnableIO kAudioUnitScope_Input succeeded
AUIO [%s] %s:%d AUIO=%p kAudioOutputUnitProperty_EnableIO kAudioUnitScope_Output succeeded
AUIO [%s] %s:%d AUIO=%p kAudioOutputUnitProperty_SetInputCallback kAudioUnitScope_Global succeeded
AUIO [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/AUIO/AUIO.mm:%d: AudioUnitSetProperty failed(%X)
AUIO [%s] %s:%d AUIO=%p kAudioUnitProperty_SetRenderCallback kAudioUnitScope_Global succeeded
AUIO [%s] %s:%d Successfully created the AUIO
AUIO [%s] %s:%d Destroying AUIO=%p
AUIO [%s] %s:%d Disposed AUIO=%p unit=%p
AUIO [%s] %s:%d AUIO Closed Handle.
AUIO [%s] %s:%d AUIO=%p Stopping the audio unit.
AUIO [%s] %s:%d AUIO Unit is not found during reinitialization
AUIO [%s] %s:%d AudioOutputUnitStop failed(%d)
AUIO [%s] %s:%d AUIO=%p unit=%p stopped
AUIO [%s] %s:%d AudioUnitUninitialize failed(%d)
AUIO [%s] %s:%d AUIO=%p unit=%p uninitialized
AUIO [%s] %s:%d AUIO=%p AUIO resume pAUIO->audioUnitIsStarted=%d
AUIO [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/AUIO/AUIO.mm:%d: Failed to restart the packet thread result=%x
AUIO [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/AUIO/AUIO.mm:%d: AudioOutputUnitStart returned %d
AUIO [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/AUIO/AUIO.mm:%d: AudioOutputUnitStart completed
AUIO [%s] %s:%d IO Proc health monitor called with invalid HANDLE
AUIO [%s] %s:%d @=@ Health: AudioIO (%p) micProcsCalled=%ld, ready=%d, micProcsReturned=%ld, packetsSent=%ld, voiceActivityCount=%ld, speakerProcsCalled=%ld, speakerProcsReturned=%ld, averageInputPower=%f, inputPowerMovingAverage=%f, averageOutputPower=%f, latestMicTimeStamp=%u, latestMicHostTime=%f, micShenanigans=%d, speakerShenanigans=%d, swapCount=%d packetsStored=%ld packetsDropped=[%ld, %ld, %ld, %ld] internalThreading=%d
AUIO [%s] %s:%d AUIO=%p AUIO Starting...
AUIO [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/AUIO/AUIO.mm:%d: AUIO=%p Failed to start the packet thread result=%x
AUIO [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/AUIO/AUIO.mm:%d: AUIO=%p ERROR AudioOutputUnitStart returned %d
AUIO [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/AUIO/AUIO.mm:%d: AUIO=%p AudioOutputUnitStart() completed
AUIO [%s] %s:%d AUIO=%p Stopped the audio unit.
AUIO [%s] %s:%d AUIO Stop!
AUIO [%s] %s:%d AudioUnitSetProperty failed to set property kAUVoiceIOProperty_MuteOutput to %u with error %08x %d
AUIO [%s] %s:%d Changed mute to %u
AUIO [%s] %s:%d AudioUnitSetProperty failed to set property kAUVoiceIOProperty_EnableMediaChat to %u with error %08x %d
AUIO [%s] %s:%d Changed kAUVoiceIOProperty_EnableMediaChat to %u
AUIO [%s] %s:%d Changed kAUVoiceIOProperty_MediaPlaybackOnExternalDevice to value=%u
AUIO [%s] %s:%d AudioUnitSetProperty failed to set property kAUVoiceIOProperty_MediaPlaybackOnExternalDevice to value=%u with error=%08x (fourcc=%s)
AUIO [%s] %s:%d AudioUnitSetProperty(kAUVoiceIOProperty_SpatialMetadata) failed(%d)
AUIO [%s] %s:%d AudioUnitSetParameter(kHALOutputParam_Volume) failed(%d)
AUIO [%s] %s:%d using kAudioUnitSubType_RemoteIO w/o AEC
AUIO [%s] %s:%d getting called with no inRefCon!
AUIO [%s] %s:%d Frame size changed and sample buffer size is not big enough
AUIO [%s] %s:%d AudioUnitComplexRender: error %d
AUIO [%s] %s:%d STACK OVERFLOW: Please file a radar. MetaData buffer is too small (%d). Required:%d
AUIO [%s] %s:%d AUIO=%p Modifying timestamp delta to timeStampDelta=%d because mic also jumped latestMicTimeStamp=%d to latestMicTimeStamp=%d, hostTime jumped latestMicHostTime=%f to inHostTime=%f
AUIO [%s] %s:%d Corrupted metadata!
AUIO [%s] %s:%d %s: Took a long time %fs
AUIO [%s] %s:%d AUIO=%p received first non-silence audio frame
AUIO [%s] %s:%d inSampleTime - pAUIO->numBufferedMicSamples = %d, inTimeStamp = %f, converted %lld, inSampleTime %u, HostTime %lld %f
AUIO [%s] %s:%d AUIO=%p sampleBuffer=%p buffer=%p bufferedMicSamples=%p
AUIO [%s] %s:%d AUIO=%p bufferedMicSamples=%p is too full, dropping older samples to fit this. maxSampleSize=%d maxByteSize=%u curSampleCount=%u appendSampleCount=%u appendBytes=%u sizeNeeded=%u
AUIO [%s] %s:%d speaker sample buffer is too small (%d). Expected=%d frames=%d bytesPerFrame=%d channels=%d! BufferCount=%d size=%d
AUIO [%s] %s:%d Setting timestamp delta to %d: speaker %d - mic %d
AUIO [%s] %s:%d [AUIO=%p] Observing hostTime Jump previousHostTime=%f currentHostTime=%f inNumberFrames=%d format->mSampleRate=%f allowedHostTimeJump=%f
AUIO [%s] %s:%d AUIO=%p setting up AudioInput but not using BasebandIO
AUIO [%s] %s:%d AudioUnitSetProperty(RequestMetadata) failed(%d)
AUIO [%s] %s:%d AUIO=%p kAUVoiceIOProperty_RequestMetadata kAudioUnitScope_Global succeeded
AUIO [%s] %s:%d AudioUnitSetProperty failed to set property kAUVoiceIOProperty_OperationMode %d %d %.4s
AUIO [%s] %s:%d AUIO=%p kAUVoiceIOProperty_OperationMode kAudioUnitScope_Global succeeded
AUIO [%s] %s:%d AudioUnitSetProperty failed to set property kAUVoiceIOProperty_EnableSpatialChat %d %d %.4s
AUIO [%s] %s:%d AUIO=%p kAUVoiceIOProperty_EnableSpatialChat kAudioUnitScope_Global succeeded
AUIO [%s] %s:%d AudioUnitSetProperty failed to set property kAUVoiceIOProperty_MuteOutput with error %08x %d
AUIO [%s] %s:%d AUIO=%p kAUVoiceIOProperty_MuteOutput kAudioUnitScope_Global succeeded
AUIO [%s] %s:%d AUIO=%p setting up AudioInput and using BasebandIO
AUIO [%s] %s:%d AudioUnitSetProperty failed to set property kAudioOutputUnitProperty_IOBufferDuration with error %08x %d
AUIO [%s] %s:%d AUIO=%p kAudioOutputUnitProperty_IOBufferDuration kAudioUnitScope_Global succeeded
AUIO [%s] %s:%d AudioUnitSetProperty failed to set property kAUVoiceIOProperty_EnableRecording with error %08x %d
AUIO [%s] %s:%d allowAudioRecording and kAUVoiceIOProperty_EnableRecording set to YES
AUIO [%s] %s:%d AUIO=%p Trying to setup AUIO
AUIO [%s] %s:%d AudioUnitInitialize failed. err=%d (%s) attempt %d
AUIO [%s] %s:%d AudioUnitInitialize failed. err=%d (%s)
AUIO [%s] %s:%d AudioUnitInitialize succeeded
AUIO [%s] %s:%d AUIO=%p VoiceIO Remote OS Version = %s
AUIO [%s] %s:%d AUIO=%p VoiceIO Remote HW Model = %s
AUIO [%s] %s:%d AUIO=%p VoiceIO Remote AU Version = %u
AUIO [%s] %s:%d AudioUnitSetProperty failed to set property FarEndVersionInfo with error %08x %d
AUIO [%s] %s:%d AUIO=%p kAUVoiceIOProperty_FarEndVersionInfo kAudioUnitScope_Global succeeded
AUIO [%s] %s:%d succeeded AUIO=%p
AUIO [%s] %s:%d AUIO=%p Setting up mic reinitialize=%d
AUIO [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/AUIO/AUIO.mm:%d: AUIO=%p AudioUnitGetProperty(MicOut) failed(%d)
AUIO [%s] %s:%d AUIO=%p kAudioUnitProperty_StreamFormat kAudioUnitScope_Output get succeeded
AUIO [%s] %s:%d AUIO=%p AudioUnitSetProperty(MicOut) Failed to allcoate the mic audio buffer list
AUIO [%s] %s:%d AUIO=%p AudioUnitSetProperty(MicOut) StreamFormat failed(%d)
AUIO [%s] %s:%d AUIO=%p kAudioUnitProperty_StreamFormat kAudioUnitScope_Output set succeeded
AUIO [%s] %s:%d AUIO=%p Reallocated the buffered mic sample buffer. prevMaxSampleSize=%d maxSampleSize=%d prevMaxByteSize=%u maxByteSize=%u prevBufferedMicSamples=%p bufferedMicSamples=%p sampleCount=%d
AUIO [%s] %s:%d AUIO=%p Failed to allocate the mic sample buffer
AUIO [%s] %s:%d AUIO=%p Setting up speaker reinitialize=%d
AUIO [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/AUIO/AUIO.mm:%d: AudioUnitGetProperty(SpkrIn) failed(%d)
AUIO [%s] %s:%d AUIO=%p kAudioUnitProperty_StreamFormat kAudioUnitScope_Input get succeeded
AUIO [%s] %s:%d AUIO=%p AudioUnitSetProperty(MicOut) Failed to allcoate the speaker audio buffer list
AUIO [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/AUIO/AUIO.mm:%d: AudioUnitSetProperty(SpkrIn) failed(%d)
AUIO [%s] %s:%d AUIO=%p kAudioUnitProperty_StreamFormat kAudioUnitScope_Input set succeeded
AUIO [%s] %s:%d AudioUnitGetProperty(MaximumMetadataByteSize) failed(%d)
AUIO [%s] %s:%d AUIO=%p kAUVoiceIOProperty_MaximumMetadataByteSize kAudioUnitScope_Output get succeeded
AUIO [%s] %s:%d Packet thread is already running. auio=%p
AUIO [%s] %s:%d Failed to create the packet thread. auio=%p
AUIO [%s] %s:%d kAUVoiceIOProperty_PrimaryCodecType failed(%d) codecType(%d)
AUIO [%s] %s:%d kAUVoiceIOProperty_PrimaryCodecType succeeded codecType(%d)
AUIO [%s] %s:%d kAUVoiceIOProperty_PrimaryCodecSampleRate failed(%d) sampleRate(%d)
AUIO [%s] %s:%d kAUVoiceIOProperty_PrimaryCodecSampleRate succeded: sampleRate(%d)
 [%s] %s:%d Screen sharing rules: Failed to create H264 rules
 [%s] %s:%d Screen sharing rules: Failed to create Mac Decoding only rules
 [%s] %s:%d Screen sharing rules: no H264 support
 [%s] %s:%d Screen sharing rules: Could not retrieve main screen width
 [%s] %s:%d Screen sharing rules: Could not retrieve main screen height
 [%s] %s:%d Screen sharing rules: Could not retrieve hardware encoder type
 [%s] %s:%d Device has no screen sharing rules
 [%s] %s:%d Screen sharing rules: No suitable rules for this device
 [%s] %s:%d Invalid sink provided
 [%s] %s:%d %@(%p) Invalid sink provided
 [%s] %s:%d Failed to allocate the list entry for sink=%p
 [%s] %s:%d %@(%p) Failed to allocate the list entry for sink=%p
 [%s] %s:%d VCVideoSink %p was in the array, return directly
 [%s] %s:%d %@(%p) VCVideoSink %p was in the array, return directly
 [%s] %s:%d Add VCVideoSink %p, new array count = %lu
 [%s] %s:%d %@(%p) Add VCVideoSink %p, new array count = %lu
 [%s] %s:%d Remove VCVideoSink %p, new array count = %lu
 [%s] %s:%d %@(%p) Remove VCVideoSink %p, new array count = %lu
 [%s] %s:%d VCVideoSink %p was not in the array, nothing to remove
 [%s] %s:%d %@(%p) VCVideoSink %p was not in the array, nothing to remove
 [%s] %s:%d Discarding link with unknown RAT local %d remote %d
 [%s] %s:%d HandoverReport: new link established with link context %s
 [%s] %s:%d HandoverReport: link %s disconnected
 [%s] %s:%d Probing response received is invalid
 [%s] %s:%d try to setWiFiAssist = %d
 [%s] %s:%d _isWiFiAssistActive = %d
 [%s] %s:%d HandoverReport: set default link %d on datagram channel %d
 [%s] %s:%d Force wifi assist active always on cellular channel, _datagramChannel %p
 [%s] %s:%d setWiFiAssist = %d, _datagramChannel %p
 [%s] %s:%d Primary connection changed to an end-to-end connection in GFT
 [%s] %s:%d got a nil connection, return
 [%s] %s:%d HandoverReport: discard link %d on datagram channel %d
 [%s] %s:%d _datagramChannel. isDuplicationEnabled = %d, activeConnection: isLocalOnCellular = %d, isRemoteOnCellular = %d
 [%s] %s:%d Active connection is end-to-end when updating duplication state
 [%s] %s:%d HandoverReport: oneToOneMode %s for isInitiator: %d
 [%s] %s:%d HandoverReport: Start active probing on datagram channel %d on connections with link IDs: %@ with interval: %@ and timeout: %@
 [%s] %s:%d HandoverReport: Stop active probing on datagram channel %d on connections with link IDs: %@
 [%s] %s:%d HandoverReport: Query probing results on datagram channel %d on connections with link IDs: %@
 [%s] %s:%d HandoverReport: Flush link probing results on datagram channel %d on connections with link IDs: %@
 [%s] %s:%d Setting the remote device version=%d
 [%s] %s:%d synchronizer = %p, request = %p
 [%s] %s:%d Rate Monitor: head index %d, tail index %d, dataSample1 %f, dataSample2 %f, tierTolerance %f, isAbnormalData %d, _abnormalCounter %d, isExceedingThreshold %d
 [%s] %s:%d transferSession or Bufferpool is not NULL
 [%s] %s:%d audioQueue is NULL
 [%s] %s:%d CMBufferQueueContainsEndOfData(audioQueue) returned true
 [%s] %s:%d appending audio error is %d
 [%s] %s:%d finishWritingWithHandler was executed, return NO
 [%s] %s:%d %@(%p) finishWritingWithHandler was executed, return NO
 [%s] %s:%d PresentationTime=%f, startTime=%f
 [%s] %s:%d %@(%p) PresentationTime=%f, startTime=%f
 [%s] %s:%d _stillImageTime=%f
 [%s] %s:%d _assetWriter.status=%ld
 [%s] %s:%d %@(%p) _assetWriter.status=%ld
 [%s] %s:%d Invalid assetWriter status=%ld, error=%@
 [%s] %s:%d %@(%p) Invalid assetWriter status=%ld, error=%@
 [%s] %s:%d width=%d, height=%d, transactionID=%@
 [%s] %s:%d Cannot set up asset writer with zero dimensions
 [%s] %s:%d _assetWriter init failed
 [%s] %s:%d AVAssetWriterInputMetadataAdaptor initWithAssetWriterInput: failed, transactionID=%@
 [%s] %s:%d assetWriter startWriting failed, transactionID=%@, status=%ld, error=%@
 [%s] %s:%d VCMovieWriter, finished writing
 [%s] %s:%d VCMovieWriter, append success(%d) error(%@) for sampleTime(%f)
 [%s] %s:%d current time older than last frame
 [%s] %s:%d chapterStart=%f being changed to _startTime=%f
 [%s] %s:%d Writing metadata for VCMovieWriter %@ with URL %@
 [%s] %s:%d appendTimeMetadataGroup failed %s
 [%s] %s:%d VCMovieWriter, started writing at %f
 [%s] %s:%d Invalid header extension profile 0x%x (should be 0x%x)
 [%s] %s:%d CVO extension ID not found %d
 [%s] %s:%d Failed to set the WRM info. Error=%d
 [%s] %s:%d %@(%p) Failed to set the WRM info. Error=%d
 [%s] %s:%d Invalid config
 [%s] %s:%d could not allocate audio queue recorder
 [%s] %s:%d System Audio Capture Format is Non-Interleaved, updating AudioQueue Format
 [%s] %s:%d could not allocate audio buffer list
 [%s] %s:%d null sinkProc
 [%s] %s:%d NULL captureContext
 [%s] %s:%d start called but already started
 [%s] %s:%d allocate tapDesc error
 [%s] %s:%d allocate tap error
 [%s] %s:%d allocate buffer error
 [%s] %s:%d AudioQueueStart kAudioQueueErr_CannotStartYet, may need to add a retry here
 [%s] %s:%d start error: %i
 [%s] %s:%d Successfully started
 [%s] %s:%d stop called but not never start
 [%s] %s:%d Audio queue stopped
 [%s] %s:%d stop error: %i
 [%s] %s:%d Failed to create audio tap
 [%s] %s:%d Failed to create audio tap for sessionType=%d
 [%s] %s:%d Failed to create audio tap for captureContext=%@
 [%s] %s:%d allocate audioFormat error
 [%s] %s:%d input sample count = %d
 [%s] %s:%d input timestamp %d
 [%s] %s:%d input hostTime %f
 [%s] %s:%d input audio bytes %d
 [%s] %s:%d nil context
 [%s] %s:%d inputSamples=%d for host time jump from time=%f to time=%f seconds
 [%s] %s:%d discarding inputSamples=%d between time=%f and time=%f seconds
 [%s] %s:%d Could not enqueue audio buffer
 [%s] %s:%d Audio Queue config: %.1f mSampleRate
 [%s] %s:%d Audio Queue config: %d mFormatID
 [%s] %s:%d Audio Queue config: 0x%x mFormatFlags
 [%s] %s:%d Audio Queue config: %d mBytesPerPacket
 [%s] %s:%d Audio Queue config: %d mFramesPerPacket
 [%s] %s:%d Audio Queue config: %d mBytesPerFrame
 [%s] %s:%d Audio Queue config: %d mChannelsPerFrame
 [%s] %s:%d Audio Queue config: %d mBitsPerChannel
 [%s] %s:%d Audio Queue config: 0x%x mReserved
 [%s] %s:%d Audio Queue config: %.1f sample rate
 [%s] %s:%d append timestamp %d
 [%s] %s:%d output timestamp %d
 [%s] %s:%d append sample count %d
 [%s] %s:%d can not copy %d audio samples
 [%s] %s:%d context is NULL
 [%s] %s:%d AudioQueue listener property %d not added
 [%s] %s:%d error reading AudioQueue property %d
 [%s] %s:%d isRunningListenerCallback with isRunning %d
 [%s] %s:%d running %d
 [%s] %s:%d AudioQueue error removing listener %d
 [%s] %s:%d allocate error: %i
 [%s] %s:%d enqueue error: %i
 [%s] %s:%d AudioQueueFreeBuffer error: %i
 [%s] %s:%d Configuration is nil!
 [%s] %s:%d SoundDec_Create failed!
 [%s] %s:%d %s: SoundDec_Encode failed (%x). reset=%d inSamples=%d outBytes=%d %s
 [%s] %s:%d Payload=%d on codec mode change event does not match configuration with payload=%d
VCVideoStream [%s] %s:%d Configured for Screen Sharing (isOneToOne=%s)
VCVideoStream [%s] %s:%d %@(%p) Configured for Screen Sharing (isOneToOne=%s)
VCVideoStream [%s] %s:%d Enabling FECGenerator for FECFeedbackVersion %d
VCVideoStream [%s] %s:%d VCVideoStream[%p]
VCVideoStream [%s] %s:%d videoTransmitter=%p
VCVideoStream [%s] %s:%d %@(%p) videoTransmitter=%p
VCVideoStream [%s] %s:%d NetworkFeedbackController is nil in VideoStream
VCVideoStream [%s] %s:%d Unexpected size for plrBuckets(size=%lu) or factorBuckets(size=%lu) storebag
VCVideoStream [%s] %s:%d Loaded storebag values for VCNackGenerator: nackGeneratorStorebagConfigVersion=%u nackSeqNumAgingDuration=%f isExtraDelayForPacketRetransmissionsEnabled=%d nackThrottlingBitRateLimitingMaxRatio=%f nackThrottlingPlrBuckets[%@] nackThrottlingFactorBuckets[%@]
VCVideoStream [%s] %s:%d Skipping video receiver for target stream[%@]
VCVideoStream [%s] %s:%d videoReceiver=%p
VCVideoStream [%s] %s:%d %@(%p) videoReceiver=%p
VCVideoStream [%s] %s:%d %s %s
VCVideoStream [%s] %s:%d sendingStreamID=%@
VCVideoStream [%s] %s:%d %@(%p) sendingStreamID=%@
VCVideoStream [%s] %s:%d ITU_R_2020 color settings will be used to configure capture and encoder
VCVideoStream [%s] %s:%d %@(%p) ITU_R_2020 color settings will be used to configure capture and encoder
VCVideoStream [%s] %s:%d P3D65 color settings will be used to configure capture and encoder
VCVideoStream [%s] %s:%d %@(%p) P3D65 color settings will be used to configure capture and encoder
VCVideoStream [%s] %s:%d Memory allocation for HDR color settings failed
VCVideoStream [%s] %s:%d %@(%p) Memory allocation for HDR color settings failed
VCVideoStream [%s] %s:%d VCVideoStream[%p] remoteVideo release queue for streamToken=%u
VCVideoStream [%s] %s:%d error[%s]
VCVideoStream [%s] %s:%d %@(%p) error[%s]
VCVideoStream [%s] %s:%d VCVideoStream[%p] %s
VCVideoStream [%s] %s:%d VCVideoStream[%p] error[%s]
VCVideoStream [%s] %s:%d VideoStallTimeTotal=%.2f
VCVideoStream [%s] %s:%d Statistics collector is nil
VCVideoStream [%s] %s:%d 
VCVideoStream [%s] %s:%d %@(%p) 
VCVideoStream [%s] %s:%d This should not be called for IP camera or display
VCVideoStream [%s] %s:%d %@(%p) This should not be called for IP camera or display
VCVideoStream [%s] %s:%d remote media stall  %f currentTime %f
VCVideoStream [%s] %s:%d Returning, No need to request a key frame generation with periodic IDR
VCVideoStream [%s] %s:%d %@(%p) Returning, No need to request a key frame generation with periodic IDR
VCVideoStream [%s] %s:%d Refresh frame requested when LTRP is disabled, requesting an IDR
VCVideoStream [%s] %s:%d %@(%p) Refresh frame requested when LTRP is disabled, requesting an IDR
VCVideoStream [%s] %s:%d Sending stream ID is %@, compound stream ID is %@
VCVideoStream [%s] %s:%d %@(%p) Sending stream ID is %@, compound stream ID is %@
VCVideoStream [%s] %s:%d not implemented
VCVideoStream [%s] %s:%d Reconfiguring VCVideoStream with a different number of transports.
VCVideoStream [%s] %s:%d %@(%p) Reconfiguring VCVideoStream with a different number of transports.
VCVideoStream [%s] %s:%d TargetStreamID didn't change %@
VCVideoStream [%s] %s:%d %@(%p) TargetStreamID didn't change %@
VCVideoStream [%s] %s:%d Setting target stream id: %@
VCVideoStream [%s] %s:%d %@(%p) Setting target stream id: %@
VCVideoStream [%s] %s:%d Setting shouldEnableFaceZoom in receiver to %d
VCVideoStream [%s] %s:%d %@(%p) Setting shouldEnableFaceZoom in receiver to %d
VCVideoStream [%s] %s:%d Setting shouldEnableMLEnhance in receiver to %d
VCVideoStream [%s] %s:%d %@(%p) Setting shouldEnableMLEnhance in receiver to %d
VCVideoStream [%s] %s:%d From VCVideoStream[%p], _videoReceiver[%p], RTPTimestamp[%u]
VCVideoStream [%s] %s:%d VCVideoStream[%p]: encodingMode=%d
VCVideoStream [%s] %s:%d Could not allocate memory for creating VCMediaStreamRateControlConfig object
VCVideoStream [%s] %s:%d Updating maxFramerate from %u to  %lu
VCVideoStream [%s] %s:%d %@(%p) Updating maxFramerate from %u to  %lu
VCVideoStream [%s] %s:%d Configuring OneToOne videoStream's transport with NetworkSampleRate=kRtpNetworkSampleRateHalf. streamID=%d, streamGroupID=%s, rtpHandle=%p, direction=%ld
VCVideoStream [%s] %s:%d %@(%p) Configuring OneToOne videoStream's transport with NetworkSampleRate=kRtpNetworkSampleRateHalf. streamID=%d, streamGroupID=%s, rtpHandle=%p, direction=%ld
VCVideoStream [%s] %s:%d Error setting socket receive buffer size to %d
VCVideoStream [%s] %s:%d Set socket receive buffer size to %d
VCVideoStream [%s] %s:%d Failed to create transport
VCVideoStream [%s] %s:%d %@(%p) Failed to create transport
VCVideoStream [%s] %s:%d Failed to update stream config for VCVideoStreamType=%d
VCVideoStream [%s] %s:%d %@(%p) Failed to update stream config for VCVideoStreamType=%d
VCVideoStream [%s] %s:%d Failed to configure transport
VCVideoStream [%s] %s:%d %@(%p) Failed to configure transport
VCVideoStream [%s] %s:%d capture = %dx%d, encode = %dx%d
VCVideoStream [%s] %s:%d %@(%p) capture = %dx%d, encode = %dx%d
VCVideoStream [%s] %s:%d RTCReporting: can't configure the reporting agent.
VCVideoStream [%s] %s:%d %@(%p) RTCReporting: can't configure the reporting agent.
VCVideoStream [%s] %s:%d Cannot determine MTU. Returning minMTU %d as a fallback
VCVideoStream [%s] %s:%d Cannot determine isIPv6. Returning YES as a fallback
VCVideoStream [%s] %s:%d Failed to create video redundancy controller
VCVideoStream [%s] %s:%d Set up and using internal redundancy controller=%@
VCVideoStream [%s] %s:%d Start VCRC in VideoStream with type:%d and maxBitrate:%d, minBitrate:%d, initialBitrate:%d
VCVideoStream [%s] %s:%d %@(%p) Start VCRC in VideoStream with type:%d and maxBitrate:%d, minBitrate:%d, initialBitrate:%d
VCVideoStream [%s] %s:%d VCVideoStream[%p]: Starting synchronization using syncSource=%p
VCVideoStream [%s] %s:%d VCVideoStream[%p]: Stopping synchronization using syncSource=%p
VCVideoStream [%s] %s:%d Max temporal bitrate=%d
VCVideoStream [%s] %s:%d %@(%p) Max temporal bitrate=%d
VCVideoStream [%s] %s:%d Replacing temporal streamID=%d->%d
VCVideoStream [%s] %s:%d %@(%p) Replacing temporal streamID=%d->%d
VCVideoStream [%s] %s:%d Bitrate array size (%lu) does not match transport array size (%lu)
VCVideoStream [%s] %s:%d %@(%p) Bitrate array size (%lu) does not match transport array size (%lu)
VCVideoStream [%s] %s:%d Setting temporal stream bitrate array to %@
VCVideoStream [%s] %s:%d %@(%p) Setting temporal stream bitrate array to %@
VCVideoStream [%s] %s:%d VTP send failed with no data!
VCVideoStream [%s] %s:%d No callID provided for stream!
VCVideoStream [%s] %s:%d %@(%p) No callID provided for stream!
VCVideoStream [%s] %s:%d VCVideoStream[%p] received first remote frame
VCVideoStream [%s] %s:%d Requesting streamID:%hu to generate a key frame for FIRType:%d
VCVideoStream [%s] %s:%d %@(%p) Requesting streamID:%hu to generate a key frame for FIRType:%d
VCVideoStream [%s] %s:%d VCVideoStream[%p] requesting Key frame for unknown RTCP FB:%d
VCVideoStream [%s] %s:%d VCVideoStream[%p] Requesting to generate key frame. RTT:%.3f timeDelta:%.3f timeToNextKeyFrame:%.3f
VCVideoStream [%s] %s:%d VCVideoStream[%p] Ignoring request to generate key frame. RTT:%.3f timeDelta:%.3f timeToNextKeyFrame:%.3f
VCVideoStream [%s] %s:%d VCVideoStream[%p] Unable to request key frame
VCVideoStream [%s] %s:%d received an error %s
VCVideoStream [%s] %s:%d %@(%p) received an error %s
VCVideoStream [%s] %s:%d received a capture error %s
VCVideoStream [%s] %s:%d %@(%p) received a capture error %s
VCVideoStream [%s] %s:%d thermalLevelDidChange %u
VCVideoStream [%s] %s:%d %@(%p) thermalLevelDidChange %u
VCVideoStream [%s] %s:%d Handling of camera availability did change not implemented yet
VCVideoStream [%s] %s:%d Can't enqueue, VideoStream is not running yet
VCVideoStream [%s] %s:%d %@(%p) Can't enqueue, VideoStream is not running yet
VCVideoStream [%s] %s:%d VCRC rate controller[%p] gives targetBitrate: %d, rateChangeCounter: %d
VCVideoStream [%s] %s:%d %@(%p) VCRC rate controller[%p] gives targetBitrate: %d, rateChangeCounter: %d
VCVideoStream [%s] %s:%d VCVideoStream received redundancyController update redundancyControler=%@ redundancyArrayCount=%u
VCVideoStream [%s] %s:%d %@(%p) VCVideoStream received redundancyController update redundancyControler=%@ redundancyArrayCount=%u
VCVideoStream [%s] %s:%d Callback executed with context being nil
VCVideoStream [%s] %s:%d VTP callback error: unknown notificaiton %d.
 [%s] %s:%d Configuration is nil
 [%s] %s:%d Delegate is nil
 [%s] %s:%d %@(%p) Delegate is nil
 [%s] %s:%d Delegate queue is nil
 [%s] %s:%d %@(%p) Delegate queue is nil
 [%s] %s:%d Failed to create the state queue for streamToken=%u
 [%s] %s:%d %@(%p) Failed to create the state queue for streamToken=%u
 [%s] %s:%d Create Stream Group with TargetEstimatorSynchronizer=%p syncGroupID=%s
 [%s] %s:%d %@(%p) Create Stream Group with TargetEstimatorSynchronizer=%p syncGroupID=%s
 [%s] %s:%d Failed to setup the streams for streamToken=%u
 [%s] %s:%d %@(%p) Failed to setup the streams for streamToken=%u
 [%s] %s:%d Error configuring media stream [%@]
 [%s] %s:%d %@(%p) Error configuring media stream [%@]
 [%s] %s:%d block is nil
 [%s] %s:%d %@(%p) block is nil
 [%s] %s:%d delegate could not be loaded
 [%s] %s:%d %@(%p) delegate could not be loaded
 [%s] %s:%d First media key index must not be nil
 [%s] %s:%d Could not find mediaKeyIndex=%@. PerfTimer will not be set for participant joined to first MKI
 [%s] %s:%d Starting stream group that isn't stopped
 [%s] %s:%d %@(%p) Starting stream group that isn't stopped
 [%s] %s:%d Starting group. groupEntries=%@
 [%s] %s:%d %@(%p) Starting group. groupEntries=%@
 [%s] %s:%d Stopping stream group that is already stopped
 [%s] %s:%d %@(%p) Stopping stream group that is already stopped
 [%s] %s:%d Stopping group. groupEntries=%@
 [%s] %s:%d %@(%p) Stopping group. groupEntries=%@
 [%s] %s:%d Pausing stream group that isn't running=%@
 [%s] %s:%d %@(%p) Pausing stream group that isn't running=%@
 [%s] %s:%d Pausing group. groupEntries=%@
 [%s] %s:%d %@(%p) Pausing group. groupEntries=%@
 [%s] %s:%d Resuming stream group that isn't paused=%@
 [%s] %s:%d %@(%p) Resuming stream group that isn't paused=%@
 [%s] %s:%d Resuming group. groupEntries=%@
 [%s] %s:%d %@(%p) Resuming group. groupEntries=%@
@:@ StreamGroup-Start
 [%s] %s:%d @:@ StreamGroup-Start (%p) %@ streamToken=%u
@:@ StreamGroup-Stop
 [%s] %s:%d @:@ StreamGroup-Stop (%p) %@ streamToken=%u
@:@ StreamGroup-Pause
 [%s] %s:%d @:@ StreamGroup-Pause (%p) %@ streamToken=%u
@:@ StreamGroup-Resume
 [%s] %s:%d @:@ StreamGroup-Resume (%p) %@ streamToken=%u
 [%s] %s:%d RTP sequence number gap detected for stream=%p
 [%s] %s:%d allocated new VideoConference object %p, with transportType %d
 [%s] %s:%d released old VideoConference object %p
 [%s] %s:%d initializeNewCallWithDeviceRole:%d (server side) callID=%d
 [%s] %s:%d >>>>> ERROR: Incoming arguments are nil (in VideoConferenceManagerCategories) <<<<<
 [%s] %s:%d >>>>> ERROR: Call ID is nil (in VideoConferenceManagerCategories) <<<<<
 [%s] %s:%d >>>>> ERROR: VideoConference context is nil (in VideoConferenceManagerCategories) <<<<<
 [%s] %s:%d >>>>> Relaying outgoing ARPL data from AVConference via XPC to VideoConference with callID=%d (in VideoConferenceManagerCategories) <<<<<
 [%s] %s:%d >>>>> [incomingArgs objectForKey:CLIENT_DIED_KEY] != nil (in VideoConferenceManagerCategories) <<<<<
 [%s] %s:%d Failed to check bit rate limits for NACK
 [%s] %s:%d Failed to compute summer bitrate for retransmitted media bytes
 [%s] %s:%d Failed to compute summer bitrate for media frames bytes
 [%s] %s:%d Packet Information does not match ssrc=%u ssrc=0x%x and seqNum=%u seqNum=0x%x arrivalTime=%f timeOfRequest=%f timeOfFirstRequest=%f diff=%f isSameSeqNum=%d seqNumRequested=%u
 [%s] %s:%d VCNACKGenerator[%p] Failed to add media packet length to media bit rate summer, err=%d
 [%s] %s:%d VCNACKGenerator[%p] Failed to add media packet length to retransmitted media bit rate summer, err=%d
 [%s] %s:%d Use cached canSendNACK, timeSinceLastCheck=%f
 [%s] %s:%d Failed to get bit rate
 [%s] %s:%d VCNACKGenerator[%p] Failed to get media packet count, err=%d
 [%s] %s:%d VCNACKGenerator[%p] Based on bitrate limits, canSendNack changed from mostRecentCanSendNackStatus=%d to canSendNack=%d, mediaBitrate=%3.3f, retransmittedBitrate=%3.3f, overhead=%3.3f nackGenerator->nackBudget=%d
 [%s] %s:%d Sending NACK for ssrc=%u ssrc=0x%x and lowestSeqNum=%u lowestSeqNum=0x%x, requestBitMask=0x%0000x rtt=%2.3fs plr=%1.3f%%
 [%s] %s:%d Not sending NACK because [nackGenerated=%d throttleNackGeneration=%d missingPacketIsTooOld=%d] ssrc=%u ssrc=0x%x and seqNum=%u seqNum=0x%x arrivalTime=%f timeOfRequest=%f diff=%f timeOfFirstRequest=%f diff=%f rtt=%2.3fs plr=%3.2f%% nackGenerationThrottlingFactor=%f isSameSeqNum=%d seqNumRequested=%u seqNumHash=%d
 [%s] %s:%d nackGenerationThrottlingFactor changed from old=%f => new=[%f] at PLR=%f
 [%s] %s:%d VCSessionMessaging dealloc
 [%s] %s:%d VCSessionMessaging: sendMessage:%@, %@, %@
 [%s] %s:%d VCSessionMessaging: sendMessage:%@ for participantID:%llu, %@, %@
 [%s] %s:%d VCSessionMessaging: sendMessageDictionary=%@ for participantID=%llu, topicKey=%@, topic=%@
 [%s] %s:%d VCSessionMessaging: sendMessage=%@ for participantID=%llu, topicKey=%@, topic=%@
 [%s] %s:%d newPackedMessageFromDictionaryV2 tuples must not be nil
 [%s] %s:%d newPackedMessageFromDictionaryV2 can't save as binary dictionary=%@
 [%s] %s:%d newPackedMessageFromDictionaryV2 failed to create binary plist for dictionary=%@ with error=%@
 [%s] %s:%d newDictionaryFromUnpackedMessageV2 message must not be nil
 [%s] %s:%d newDictionaryFromUnpackedMessageV2 failed to create property list from message=%@ with error=%@
 [%s] %s:%d newDictionaryFromUnpackedMessageV2 unexpected format=%lu received from message=%@
 [%s] %s:%d VCControlChannelDelegate receivedMessage callback with message '%@%@'
 [%s] %s:%d Is topic '%@' assisiated with incoming message '%@%@' block...
 [%s] %s:%d Topic and payload can not be both nil
 [%s] %s:%d VCControlChannelDelegate sendReliableMessage callback...
 [%s] %s:%d VCControlChannelDelegate clearParticipantTransactionCacheForParticipant callback...
 [%s] %s:%d Parameter 'storage'  must not be NULL
 [%s] %s:%d Parameter 'size' must not be NULL
 [%s] %s:%d getaddrinfo failed with error '%d'
 [%s] %s:%d getaddrinfo failed to return valid data
 [%s] %s:%d streamToken=%ld, delegate=%@, queue=%@, error=%@
 [%s] %s:%d AVCVideoDataOutput: serverd died, notifying client
 [%s] %s:%d AVCVideoDataOutput callback: didPause=%d for streamToken=%u
 [%s] %s:%d AVCVideoDataOutput callback: mediaDidStall=%d for streamToken=%u
 [%s] %s:%d AVCVideoDataOutput callback: videoDidDegrade=%d for streamToken=%u
 [%s] %s:%d Aspect ratio string: %@
 [%s] %s:%d Invalid parameter(s): featureListStrings=%s, prefix=%s
 [%s] %s:%d featureListStrings is empty
 [%s] %s:%d Failed to retrieve fist payload from featureListStrings
 [%s] %s:%d Invalid parameter(s): featureListStrings=%p, featureListString=%s
 [%s] %s:%d Selected %s
 [%s] %s:%d Failed to create the media queue. error=%x
 [%s] %s:%d %@(%p) Failed to create the media queue. error=%x
 [%s] %s:%d Failed to create rate controller. error=%x
 [%s] %s:%d %@(%p) Failed to create rate controller. error=%x
 [%s] %s:%d Using VCMediaQueue2.0
 [%s] %s:%d %@(%p) Using VCMediaQueue2.0
 [%s] %s:%d Unable to negotiate oneToOne data with participant=%p
 [%s] %s:%d %@(%p) Unable to negotiate oneToOne data with participant=%p
 [%s] %s:%d OneToOne config was nil
 [%s] %s:%d %@(%p) OneToOne config was nil
 [%s] %s:%d 1:1 rate controller already configured
 [%s] %s:%d %@(%p) 1:1 rate controller already configured
 [%s] %s:%d 1:1 media controller already configured
 [%s] %s:%d %@(%p) 1:1 media controller already configured
 [%s] %s:%d Media queue was not setup for 1:1
 [%s] %s:%d %@(%p) Media queue was not setup for 1:1
 [%s] %s:%d Failed to allocate 1:1 rate controller
 [%s] %s:%d %@(%p) Failed to allocate 1:1 rate controller
 [%s] %s:%d Failed to allocate 1:1 media controller
 [%s] %s:%d %@(%p) Failed to allocate 1:1 media controller
 [%s] %s:%d Failed to get pre-warming client's operating mode from VCAudioManager! Defaulting to operatingMode=%d (due to isUsingVideo=%d)
 [%s] %s:%d %@(%p) Failed to get pre-warming client's operating mode from VCAudioManager! Defaulting to operatingMode=%d (due to isUsingVideo=%d)
 [%s] %s:%d Failed to allocate local 1:1 config!
 [%s] %s:%d %@(%p) Failed to allocate local 1:1 config!
 [%s] %s:%d Failed to configure local participant for 1:1!
 [%s] %s:%d %@(%p) Failed to configure local participant for 1:1!
 [%s] %s:%d Failed to allocate 1:1 audio media control info generator
 [%s] %s:%d %@(%p) Failed to allocate 1:1 audio media control info generator
 [%s] %s:%d Failed to allocate 1:1 video media control info generator
 [%s] %s:%d %@(%p) Failed to allocate 1:1 video media control info generator
 [%s] %s:%d Failed to allocate one to one participant configuration
 [%s] %s:%d %@(%p) Failed to allocate one to one participant configuration
 [%s] %s:%d Failed to setup the OneToOne MCIG
 [%s] %s:%d %@(%p) Failed to setup the OneToOne MCIG
 [%s] %s:%d Failed to configure remote participant for 1:1!
 [%s] %s:%d %@(%p) Failed to configure remote participant for 1:1!
 [%s] %s:%d SwitchTime=%f switchingToOneToOne=%d
 [%s] %s:%d %@(%p) SwitchTime=%f switchingToOneToOne=%d
 [%s] %s:%d Already switched to GFT, ignoring.
 [%s] %s:%d %@(%p) Already switched to GFT, ignoring.
 [%s] %s:%d Failed to negotiate with devices that do not support one to one mode
 [%s] %s:%d %@(%p) Failed to negotiate with devices that do not support one to one mode
 [%s] %s:%d Failed to reconfigure local participant failed to switch
 [%s] %s:%d %@(%p) Failed to reconfigure local participant failed to switch
 [%s] %s:%d Already switched to OneToOne, ignoring.
 [%s] %s:%d %@(%p) Already switched to OneToOne, ignoring.
 [%s] %s:%d Failed to reconfigure session for switch to OneToOne
 [%s] %s:%d %@(%p) Failed to reconfigure session for switch to OneToOne
 [%s] %s:%d RTCReporting: Switching to one-to-one mode reporting
 [%s] %s:%d %@(%p) RTCReporting: Switching to one-to-one mode reporting
 [%s] %s:%d RTCReporting: Switching to one-to-many mode reporting
 [%s] %s:%d %@(%p) RTCReporting: Switching to one-to-many mode reporting
 [%s] %s:%d Failed to negotiate one to one settings!
 [%s] %s:%d %@(%p) Failed to negotiate one to one settings!
 [%s] %s:%d Negotiated 1:1 camera rules: %@
 [%s] %s:%d %@(%p) Negotiated 1:1 camera rules: %@
 [%s] %s:%d Negotiated 1:1 camera not supported
 [%s] %s:%d %@(%p) Negotiated 1:1 camera not supported
 [%s] %s:%d Negotiated 1:1 screen rules: %@
 [%s] %s:%d %@(%p) Negotiated 1:1 screen rules: %@
 [%s] %s:%d Negotiated 1:1 screen not supported
 [%s] %s:%d %@(%p) Negotiated 1:1 screen not supported
 [%s] %s:%d We cannot configure the OneToOne RateController as there is not an active connection yet
 [%s] %s:%d %@(%p) We cannot configure the OneToOne RateController as there is not an active connection yet
 [%s] %s:%d Could not find server bag config for key=%@. Using default value=%d
 [%s] %s:%d %@(%p) Could not find server bag config for key=%@. Using default value=%d
 [%s] %s:%d Trying to add a oneToOne participant even though we do not support OneToOne mode
 [%s] %s:%d %@(%p) Trying to add a oneToOne participant even though we do not support OneToOne mode
 [%s] %s:%d Attempting to add another participant while in 1:1 mode!
 [%s] %s:%d %@(%p) Attempting to add another participant while in 1:1 mode!
 [%s] %s:%d Failed to negotiate with the remoteParticipant
 [%s] %s:%d %@(%p) Failed to negotiate with the remoteParticipant
 [%s] %s:%d Failed to configure the remoteParticipant for OneToOne
 [%s] %s:%d %@(%p) Failed to configure the remoteParticipant for OneToOne
 [%s] %s:%d Failed to setup the remote participant in OneToOneMode
 [%s] %s:%d %@(%p) Failed to setup the remote participant in OneToOneMode
 [%s] %s:%d %s transition to oneToOneModeEnabled=%d
 [%s] %s:%d %@(%p) %s transition to oneToOneModeEnabled=%d
 [%s] %s:%d Failed to send oneToOneModeEnabled=%d message
 [%s] %s:%d %@(%p) Failed to send oneToOneModeEnabled=%d message
 [%s] %s:%d Failed to complete transition to oneToOneModeEnabled=%d
 [%s] %s:%d %@(%p) Failed to complete transition to oneToOneModeEnabled=%d
 [%s] %s:%d Switching from multiway to OneToOne enabled is not supported. switchFromGFTToOneToOneEnabled=%d remoteSupportsGFTSwitchToOneToOne=%d 
 [%s] %s:%d %@(%p) Switching from multiway to OneToOne enabled is not supported. switchFromGFTToOneToOneEnabled=%d remoteSupportsGFTSwitchToOneToOne=%d 
 [%s] %s:%d Switch to U+1 requested at improper time - canSwitch=%{BOOL}d, oneToOneModeEnabled=%{BOOL}d, remoteParticipantCount=%lu
 [%s] %s:%d %@(%p) Switch to U+1 requested at improper time - canSwitch=%{BOOL}d, oneToOneModeEnabled=%{BOOL}d, remoteParticipantCount=%lu
 [%s] %s:%d Starting Switch _oneToOneModeEnabled=%d to oneToOneEnabled=%d isLocal=%d
 [%s] %s:%d %@(%p) Starting Switch _oneToOneModeEnabled=%d to oneToOneEnabled=%d isLocal=%d
 [%s] %s:%d Failed to send the oneToOneEnabledState message oneToOneEnabled=%d isLocal=%d
 [%s] %s:%d %@(%p) Failed to send the oneToOneEnabledState message oneToOneEnabled=%d isLocal=%d
 [%s] %s:%d Failed to complete the switch to oneToOneEnabled=%d isLocal=%d
 [%s] %s:%d %@(%p) Failed to complete the switch to oneToOneEnabled=%d isLocal=%d
 [%s] %s:%d Load switch iRATMetricsEnabled %d
 [%s] %s:%d %@(%p) Load switch iRATMetricsEnabled %d
 [%s] %s:%d Load switch iRATRtpEnabled %d
 [%s] %s:%d %@(%p) Load switch iRATRtpEnabled %d
 [%s] %s:%d Load switch preWarmCellEnabled %d
 [%s] %s:%d %@(%p) Load switch preWarmCellEnabled %d
 [%s] %s:%d Load switch wrmRSSIThresholdEnabled %d
 [%s] %s:%d %@(%p) Load switch wrmRSSIThresholdEnabled %d
 [%s] %s:%d Load switch preferRelayOverP2P %d
 [%s] %s:%d %@(%p) Load switch preferRelayOverP2P %d
 [%s] %s:%d Load switch fastMediaDuplicationEnabled %d
 [%s] %s:%d %@(%p) Load switch fastMediaDuplicationEnabled %d
 [%s] %s:%d Load switch duplicateImportantPktsEnabled %d
 [%s] %s:%d %@(%p) Load switch duplicateImportantPktsEnabled %d
 [%s] %s:%d Load switch lowNetworkModeEnabled %d
 [%s] %s:%d %@(%p) Load switch lowNetworkModeEnabled %d
 [%s] %s:%d Load switch duplicationEnhancementEnabled %d
 [%s] %s:%d %@(%p) Load switch duplicationEnhancementEnabled %d
 [%s] %s:%d Load switch iRATDuplicationEnabled %d
 [%s] %s:%d %@(%p) Load switch iRATDuplicationEnabled %d
 [%s] %s:%d Load switch useMediaDrivenDuplication %d
 [%s] %s:%d %@(%p) Load switch useMediaDrivenDuplication %d
 [%s] %s:%d We cannot start oneToOne if we haven't yet received an active connection
 [%s] %s:%d %@(%p) We cannot start oneToOne if we haven't yet received an active connection
 [%s] %s:%d We cannot start oneToOne if we haven't yet started the remote participant
 [%s] %s:%d %@(%p) We cannot start oneToOne if we haven't yet started the remote participant
 [%s] %s:%d We cannot start oneToOne if we have already started oneToOne
 [%s] %s:%d %@(%p) We cannot start oneToOne if we have already started oneToOne
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/VCSession+OneToOne.m:%d: [%p] OneToOne session should reconnect (ids reinit)
 [%s] %s:%d We haven't yet received an active connection
 [%s] %s:%d We have received the first active connection, we can now start OneToOne
 [%s] %s:%d SIPClientDataDictionary dealloc
 [%s] %s:%d VCSessionMessageTopic with topic %s dealloc
 [%s] %s:%d sendReliableMessage topic=%@
 [%s] %s:%d sendMessage topic=%@ reliable=%d, concurent=%d, outgoingIndex=%d, lastOutgoingIndex=%d, retries=%d
 [%s] %s:%d sendReliableMessageAndWait result was %s, participantID=%llu, index=%ld, retry=%ld, payload=%@
 [%s] %s:%d sendReliableMessageAndWait result was %s
 [%s] %s:%d ParticipantID=%@: Message too old: transactionID=%@, replayProtectionThreshold=%@
 [%s] %s:%d ParticipantID=%@: Found duplicate message with transactionID=%@ and expiration time=%@
 [%s] %s:%d ParticipantID=%@: Purging message with transactionID=%llu and expiration time=%f. Current time=%f, replayProtectionThreshold=%llu
 [%s] %s:%d passMessage: Participant '%@': Added message ID '%@' to message history '%@', expireTime '%@'
 [%s] %s:%d passMessage: ParticipantID '%@': Passing message '%@' with transactionID '%@' for topic '%@'
 [%s] %s:%d passMessage: ParticipantID '%@': Ignoring duplicate message '%@' with transactionID '%@' for topic '%@'
 [%s] %s:%d clearTransactionCacheForParticipant:%@
 [%s] %s:%d parameter memory pool is NULL!
 [%s] %s:%d invalid memory pool %p or pointer %p!
 [%s] %s:%d Redundancy percentage: %d is out of bound in legacy duplication
 [%s] %s:%d Number of channels is incorrect (%d >= %lu)
 [%s] %s:%d %@(%p) Number of channels is incorrect (%d >= %lu)
 [%s] %s:%d LinkProbing: startActiveProbing failed: Link probing not enabled
 [%s] %s:%d LinkProbing: startActiveProbing failed: Invalid linkID list
 [%s] %s:%d LinkProbing: stopActiveProbing failed: Link probing not enabled
 [%s] %s:%d LinkProbing: stopActiveProbing failed: Link probing not in progress
 [%s] %s:%d LinkProbing: stopActiveProbing failed: Invalid linkID list
 [%s] %s:%d LinkProbing: updateProbingResults failed: Link probing not in progress
 [%s] %s:%d LinkProbing: Loaded storebag values linkProbingInterval: %d linkProbingTimeout: %d linkProbingQueryResultsInterval: %d exponentialMovingMeanFactor: %f plrEnvelopeAttackFactor: %f plrEnvelopeDecayFactor: %f plrBuckets: %@ minSentRequestCountThreshold: %d _linkProbingDuplicationWaitTimeout: %d _consecutiveIdenticalQueryResultMax: %d _linkProbingLockdownPeriod: %f
 [%s] %s:%d LinkProbing: Stop active probing because duplication did not start in %f seconds after starting probing.
 [%s] %s:%d LinkProbing: queryProbingResults failed: Link probing not in progress
 [%s] %s:%d LinkProbing: queryProbingResults failed: No links are currently being probed
 [%s] %s:%d LinkProbing: Stop active probing because the same connection chosen for duplication after %d consecutive queries
 [%s] %s:%d LinkProbing: Start active probing because connection for duplication was last updated using probing results %f seconds ago, and duplication is still active.
 [%s] %s:%d videoDegradedThreshold = %f
 [%s] %s:%d microTime=%f lastDecodedFrameTime=%f currentFrameTimeDiff=%f videoIsPaused=%d
 [%s] %s:%d Failed to setup delegate queue
 [%s] %s:%d %@(%p) Failed to setup delegate queue
 [%s] %s:%d Failed to setup XPC
 [%s] %s:%d %@(%p) Failed to setup XPC
 [%s] %s:%d Failed to initialize the power spectrum meter
 [%s] %s:%d %@(%p) Failed to initialize the power spectrum meter
 [%s] %s:%d deallocating AVCAudioPowerSpectrumMeter
 [%s] %s:%d %@(%p) deallocating AVCAudioPowerSpectrumMeter
 [%s] %s:%d %@(%p) streamToken=%ld
@:@ AVCAudioPowerSpectrumMeter-registerPowerSpectrumForCellularTapType
 [%s] %s:%d @:@ AVCAudioPowerSpectrumMeter-registerPowerSpectrumForCellularTapType (%p) type=%u
 [%s] %s:%d Failed to register the power spectrum for tap type=%@. error=%@
 [%s] %s:%d %@(%p) Failed to register the power spectrum for tap type=%@. error=%@
@:@ AVCAudioPowerSpectrumMeter-unregisterPowerSpectrumForCellularTapType
 [%s] %s:%d @:@ AVCAudioPowerSpectrumMeter-unregisterPowerSpectrumForCellularTapType (%p) type=%u
 [%s] %s:%d Failed to unregister the power spectrum for tap type=%@. error=%@
 [%s] %s:%d %@(%p) Failed to unregister the power spectrum for tap type=%@. error=%@
 [%s] %s:%d Failed to allocate XPC connection
 [%s] %s:%d %@(%p) Failed to allocate XPC connection
 [%s] %s:%d Failed to allocate XPC object allow list
 [%s] %s:%d %@(%p) Failed to allocate XPC object allow list
 [%s] %s:%d The delegate is nil
 [%s] %s:%d %@(%p) The delegate is nil
 [%s] %s:%d Failed to create the delegate queue
 [%s] %s:%d %@(%p) Failed to create the delegate queue
 [%s] %s:%d Failed to allocate power spectrum error=%@
 [%s] %s:%d %@(%p) Failed to allocate power spectrum error=%@
 [%s] %s:%d Decoding: error %@.
 [%s] %s:%d received callback for serverSpectrumInterrupted
 [%s] %s:%d %@(%p) received callback for serverSpectrumInterrupted
 [%s] %s:%d Cannot create rate controller!
 [%s] %s:%d mode=%d is not supported yet
 [%s] %s:%d Cannot load and retain delegate successfully!
 [%s] %s:%d Waiting for bag load.
 [%s] %s:%d Bag Load Notification came in %s
 [%s] %s:%d This is what we are reading in %s = %s
 [%s] %s:%d We don't have the required keys %s.  Please file.
 [%s] %s:%d verifyRequiredKeys finished.
 [%s] %s:%d Audio redundancy percentage change due to packet loss: %lf, new threshold: %lf [%d to %d]
 [%s] %s:%d Assign IDR slot for streams in item: %@
 [%s] %s:%d Setting position and period: %@
 [%s] %s:%d VCSession[%@] transportSessionID[%u] participantId:[%@] participantUUID[%@] receives message:%s
 [%s] %s:%d streamGroupStatesMessage is nil
 [%s] %s:%d Participant is nil
 [%s] %s:%d Session is nil
 [%s] %s:%d VCSession[%@] transportSessionID=%u participantId[%@] participantUUID[%@] message=%@
 [%s] %s:%d SymptomReporter: VCSession[%@] transportSessionID[%u] participantId:[%@] participantUUID:[%@] isLocalInitiated:%d isLocalSideOnly:%d message:%@, symptomID: %d, groupID: %@
 [%s] %s:%d groupID is nil, return
 [%s] %s:%d SymptomReporter: Failed to send symptom message %@ to participantID %@, requesting only the local side
 [%s] %s:%d setupWRMAlertUpdateMessage message is invalid
 [%s] %s:%d setupWRMAlertUpdateMessage message is nil
 [%s] %s:%d moment message %@ from participantId:[%@] participantUUID:[%@]
 [%s] %s:%d setupMomentsMessages message is nil
 [%s] %s:%d VCSession[%@] transportSessionID[%u] idsParticipantID[%@] participantUUID[%@] receives message[%@]
 [%s] %s:%d setupPreferredInterfaceMessage message is nil
 [%s] %s:%d VCSession received message about PIP State change:%@
 [%s] %s:%d VCSession callID[%u] received 'disconnect' message from remote participant '%@'
 [%s] %s:%d VCSession=%@ transportSessionID=%u participantId=%@ participantUUID=%@ receives message=%s
 [%s] %s:%d setupMediaQualityDegradedMessage message is invalid
 [%s] %s:%d setupMediaQualityDegradedMessage message is nil
 [%s] %s:%d rateControlConfigMessage is nil
 [%s] %s:%d Unexpected remoteCellTech=%d
 [%s] %s:%d VCSession: Remote CellTech has changed %s, max bitrate %u, max remote bitrate %u
 [%s] %s:%d VCSession received message about CellTech change :%d, remote bitrate %u
 [%s] %s:%d Sending State Update: Failed to add message entry for mediaType=%@ mediaState=%@. Value is nil.
 [%s] %s:%d %@(%p) Sending State Update: Failed to add message entry for mediaType=%@ mediaState=%@. Value is nil.
 [%s] %s:%d Sending State Update: Failed to add message entry for mediaType=%@ mediaState=%@. Key is nil.
 [%s] %s:%d %@(%p) Sending State Update: Failed to add message entry for mediaType=%@ mediaState=%@. Key is nil.
 [%s] %s:%d Sending State Update: mediaType=%@ mediaState=%@
 [%s] %s:%d %@(%p) Sending State Update: mediaType=%@ mediaState=%@
 [%s] %s:%d Found unsupported key=%@
 [%s] %s:%d %@(%p) Found unsupported key=%@
 [%s] %s:%d Media states for mediaType=%@ are mismatched state=%@ != state=%@
 [%s] %s:%d %@(%p) Media states for mediaType=%@ are mismatched state=%@ != state=%@
 [%s] %s:%d Receive State Update: Failed to find message entry key for mediaType=%@
 [%s] %s:%d %@(%p) Receive State Update: Failed to find message entry key for mediaType=%@
 [%s] %s:%d Received State Update: mediaType=%@ mediaState=%@
 [%s] %s:%d %@(%p) Received State Update: mediaType=%@ mediaState=%@
 [%s] %s:%d mediaStateMessage is nil
 [%s] %s:%d %@(%p) mediaStateMessage is nil
 [%s] %s:%d %@(%p) Participant is nil
 [%s] %s:%d Received State Update: transportSessionID=%u participantId=%@ participantUUID=%@ mediaType=%@ mediaState=%@
 [%s] %s:%d %@(%p) Received State Update: transportSessionID=%u participantId=%@ participantUUID=%@ mediaType=%@ mediaState=%@
 [%s] %s:%d type=%hhu, requesterID=%@, requesteeID=%@, transactionID=%@
 [%s] %s:%d %p failed validation: %s
 [%s] %s:%d Failed to allocate config for type: %d
 [%s] %s:%d %@(%p) Failed to allocate config for type: %d
 [%s] %s:%d Failed to allocate payload types set
 [%s] %s:%d Failed to setup redundancy settings
 [%s] %s:%d Failed to allocate pending uplink streams dictionary
 [%s] %s:%d Failed to setup the stream controller
 [%s] %s:%d Failed to allocate temporal streamIDs
 [%s] %s:%d Failed to allocate video redundancy pool
 [%s] %s:%d Failed to create videoRedundancyChangeQueue
 [%s] %s:%d %@(%p) Failed to create videoRedundancyChangeQueue
 [%s] %s:%d Tried to create uplink video stream controller for mode but VCMediaStreamSendGroupConfig is nil
 [%s] %s:%d %@(%p) Tried to create uplink video stream controller for mode but VCMediaStreamSendGroupConfig is nil
 [%s] %s:%d _videoPriorityEnabled=%d, uplinkVideoStreamController.dynamicVideoPriorityEnabled=%d uplinkVideoStreamController.captureFrameRate=%d
 [%s] %s:%d %@(%p) _videoPriorityEnabled=%d, uplinkVideoStreamController.dynamicVideoPriorityEnabled=%d uplinkVideoStreamController.captureFrameRate=%d
 [%s] %s:%d streamID=%@ does not exist
 [%s] %s:%d %@(%p) streamID=%@ does not exist
 [%s] %s:%d captureEnabled=%d isRunning=%d _hasPeerSubscribedStreams=%d _allowSuspendProvisionedStreams=%d
 [%s] %s:%d %@(%p) captureEnabled=%d isRunning=%d _hasPeerSubscribedStreams=%d _allowSuspendProvisionedStreams=%d
 [%s] %s:%d %@(%p) _videoPriorityEnabled=%d
 [%s] %s:%d StreamGroup:%s VideoStreamIDs:%@ videoMediaBitrates:%@ for targetBitrate:%d
 [%s] %s:%d %@(%p) StreamGroup:%s VideoStreamIDs:%@ videoMediaBitrates:%@ for targetBitrate:%d
 [%s] %s:%d not found video stream with stream ID %@
 [%s] %s:%d %@(%p) not found video stream with stream ID %@
 [%s] %s:%d New remote subscriptions. Enable capture.
 [%s] %s:%d %@(%p) New remote subscriptions. Enable capture.
 [%s] %s:%d No remote subscriptions. Disable capture.
 [%s] %s:%d %@(%p) No remote subscriptions. Disable capture.
 [%s] %s:%d streamID=%d is the highest temporal tier within max=%d
 [%s] %s:%d not subscribing to streamID=%d either a higher temporal tier is subscribed (%d) or max active tiers=%d
 [%s] %s:%d Cannot set capture framerate for captureSource=%d
 [%s] %s:%d %@(%p) Cannot set capture framerate for captureSource=%d
 [%s] %s:%d Ignoring the change of captureFrameRate. currentCaptureFrameRate=%d maxSupportedMultiwayFrameRate=%d framerate=%d
 [%s] %s:%d %@(%p) Ignoring the change of captureFrameRate. currentCaptureFrameRate=%d maxSupportedMultiwayFrameRate=%d framerate=%d
 [%s] %s:%d Set capture rate to %d fps
 [%s] %s:%d %@(%p) Set capture rate to %d fps
 [%s] %s:%d Registering for video capture of type: %d
 [%s] %s:%d %@(%p) Registering for video capture of type: %d
 [%s] %s:%d Registering for screen capture of type: %d
 [%s] %s:%d %@(%p) Registering for screen capture of type: %d
 [%s] %s:%d Unregistering from video capture of type: %d
 [%s] %s:%d %@(%p) Unregistering from video capture of type: %d
 [%s] %s:%d activeVideoStreams:%@
 [%s] %s:%d %@(%p) activeVideoStreams:%@
 [%s] %s:%d compound streamID increased for stream %hu, generating key frame
 [%s] %s:%d %@(%p) compound streamID increased for stream %hu, generating key frame
 [%s] %s:%d Currently sending streamIDs %@
 [%s] %s:%d %@(%p) Currently sending streamIDs %@
 [%s] %s:%d Sync source timestamp information is not yet available. Dropping video frame.
 [%s] %s:%d %@(%p) Sync source timestamp information is not yet available. Dropping video frame.
 [%s] %s:%d Enqueue new redundancyPercentage=%d
 [%s] %s:%d %@(%p) Enqueue new redundancyPercentage=%d
 [%s] %s:%d Ignoring redundancy controller callback for controller=%@, current controller=%@, streamGroupMode=%u
 [%s] %s:%d %@(%p) Ignoring redundancy controller callback for controller=%@, current controller=%@, streamGroupMode=%u
 [%s] %s:%d Max Screen capture size: width = %f, height = %f
 [%s] %s:%d %@(%p) Max Screen capture size: width = %f, height = %f
 [%s] %s:%d Max Screen capture frame rate: = %d
 [%s] %s:%d %@(%p) Max Screen capture frame rate: = %d
 [%s] %s:%d Health Monitor for Video Stream Send GroupID=%s StreamID[main:%u repair:%u] Video[%ukbps %4.1ffps] Frames Received=%u Processed=%u
 [%s] %s:%d %@(%p) Health Monitor for Video Stream Send GroupID=%s StreamID[main:%u repair:%u] Video[%ukbps %4.1ffps] Frames Received=%u Processed=%u
 [%s] %s:%d VCNAT64ResolverCleanup: no more registered callbackContexts left. Destroying NAT64Resolver
 [%s] %s:%d VCNAT64ResolverRegisterForPrefixUpdate: begin registration of context %08X on interface %s
 [%s] %s:%d VCNAT64ResolverRegisterForPrefixUpdate: could not create a shared instance of NAT64Resolver
 [%s] %s:%d VCNAT64ResolverRegisterForPrefixUpdate: failed on creating VCNAT64ListenerContext
 [%s] %s:%d VCNAT64ResolverRegisterForPrefixUpdate: failed on creating NAT64CallBackContext
 [%s] %s:%d VCNAT64ResolverRegisterForPrefixUpdate: failed on creating interfaceName
 [%s] %s:%d VCNAT64ResolverRegisterForPrefixUpdate: failed on creating listeners array
 [%s] %s:%d VCNAT64ResolverRegisterForPrefixUpdate: context %08X has already been registered for interface %s
 [%s] %s:%d VCNAT64ResolverRegisterForPrefixUpdate: succesfully registered context %08X on interface %s
 [%s] %s:%d VCNAT64ResolverDeregisterAll: nothing to deregister
 [%s] %s:%d VCNAT64ResolverGetPrefix: could not create a shared instance of NAT64Resolver
 [%s] %s:%d VCNAT64ResolverGetPrefix: can not fetch NAT64 prefix as '%s' has not been registered on NAT64Resolver
 [%s] %s:%d VCNAT64ResolverGetSharedInstance: shared instance of NAT64Resolver does not exist. Creating it...
 [%s] %s:%d VCNAT64ResolverGetSharedInstance: failed to create VCNAT64Resolver
 [%s] %s:%d VCNAT64ResolverGetSharedInstance: failed to create interface dictionary for shared instance
 [%s] %s:%d VCNAT64ResolverGetSharedInstance: failed to create dispatch queue for shared instance
 [%s] %s:%d VCNAT64ResolverGetSharedInstance: failed to create retry queue for shared instance
 [%s] %s:%d VCNAT64ResolveNAT64Prefix: callbackContext should not be NULL
 [%s] %s:%d VCNAT64ResolveNAT64Prefix: DNS callback context has already been released for nterface %s
 [%s] %s:%d VCNAT64ResolveNAT64Prefix: Interface %s IS NOT behind NAT 64
 [%s] %s:%d VCNAT64ResolveNAT64Prefix: Re-trying in 1 second for Interface %s, attempt %d out of %d
 [%s] %s:%d VCNAT64ResolveNAT64Prefix: NAT64 prefix resolution failed with error %d
 [%s] %s:%d VCNAT64ResolveNAT64Prefix: Interface %s IS behind NAT 64
 [%s] %s:%d VCNAT64ResolverDeregisterFromInterface: removing context %08x from interface %s at index %d
 [%s] %s:%d VCNAT64ResolverDeregisterFromInterface: removing interface %s as it has no listeners
 [%s] %s:%d destinationIPPort is NULL for socket %d with getpeername errno %d
 [%s] %s:%d Get ipv6 tclass socket option for DSCP value=%d
 [%s] %s:%d Invalid parameters! cachedSrcDstInfo isValid:%d, packetSrcDstInfo isValid:%d!
 [%s] %s:%d invalid packet srcDstInfo mode %d
 [%s] %s:%d Invalid parameters! cachedSrcDstInfo isValid:%d, IPPort isValid:%d!
 [%s] %s:%d IPPort mismatch! expected %s actual %s
 [%s] %s:%d ChannelToken mismatch! expected %d actual %d
 [%s] %s:%d Invalid VCSourceDestinationInfoMode:%d!
 [%s] %s:%d matching NW %p to srcDstInfo mode %d
 [%s] %s:%d matching NW %p to srcDstInfo conn %p
 [%s] %s:%d NW Connection mismatch!
 [%s] %s:%d Report initial memory usage %d
 [%s] %s:%d Report memory usage %d
 [%s] %s:%d toneInjectionEnabled = %d
 [%s] %s:%d %@(%p) toneInjectionEnabled = %d
 [%s] %s:%d forceNetworkCellular = %d
 [%s] %s:%d %@(%p) forceNetworkCellular = %d
 [%s] %s:%d setEnableLoopbackInterfaceBlock=%d
 [%s] %s:%d %@(%p) setEnableLoopbackInterfaceBlock=%d
 [%s] %s:%d setEmulatedRxPLRBlock=%2.3f
 [%s] %s:%d %@(%p) setEmulatedRxPLRBlock=%2.3f
 [%s] %s:%d forcedTargetBitrate=%d
 [%s] %s:%d %@(%p) forcedTargetBitrate=%d
 [%s] %s:%d forcedCapBitrate=%d
 [%s] %s:%d %@(%p) forcedCapBitrate=%d
 [%s] %s:%d emulatedNetworkConfigPath=%s
 [%s] %s:%d %@(%p) emulatedNetworkConfigPath=%s
 [%s] %s:%d setEnableAudioPowerSpectrumReport=%d
 [%s] %s:%d %@(%p) setEnableAudioPowerSpectrumReport=%d
 [%s] %s:%d Failed to decode captions blob. Error=%d
 [%s] %s:%d Audio redundancy is disabled.
 [%s] %s:%d In-appropriate mode %d for VCRedundancyController
 [%s] %s:%d Audio redundancy percentage changed from %d to %d with mode %d, 0x%p
 [%s] %s:%d Audio redundancy interval changed from %f to %f with mode %d, 0x%p
 [%s] %s:%d processMessage: sequenceNumber may not be nil!!! Aborting processing message for _sessionID='%d', participantID='%@'
 [%s] %s:%d %@(%p) processMessage: sequenceNumber may not be nil!!! Aborting processing message for _sessionID='%d', participantID='%@'
 [%s] %s:%d Reliable message has been ACKed for _sessionID='%d', participantID='%@', transactionID='%@', messageType='%d'
 [%s] %s:%d %@(%p) Reliable message has been ACKed for _sessionID='%d', participantID='%@', transactionID='%@', messageType='%d'
 [%s] %s:%d processMessage: Sent confirmation for _sessionID='%d', participantID='%@', transactionID='%@'
 [%s] %s:%d %@(%p) processMessage: Sent confirmation for _sessionID='%d', participantID='%@', transactionID='%@'
 [%s] %s:%d processMessageFromParticipant: isInternalMessage='%d'
 [%s] %s:%d %@(%p) processMessageFromParticipant: isInternalMessage='%d'
 [%s] %s:%d encryptMessage: message '%@' is too long (%d > %d)
 [%s] %s:%d %@(%p) encryptMessage: message '%@' is too long (%d > %d)
 [%s] %s:%d newDataFromMessage: encryption failed. Dropping the message...
 [%s] %s:%d %@(%p) newDataFromMessage: encryption failed. Dropping the message...
 [%s] %s:%d newEncryptedMessageFromMessage: encryption failed. Dropping the message...
 [%s] %s:%d %@(%p) newEncryptedMessageFromMessage: encryption failed. Dropping the message...
 [%s] %s:%d +processMessage: Sent confirmation for _sessionID='%d', participantID='%@', transactionID='%@'
 [%s] %s:%d %@(%p) +processMessage: Sent confirmation for _sessionID='%d', participantID='%@', transactionID='%@'
 [%s] %s:%d +processMessageFromParticipant: shouldNotifyClient='%d'
 [%s] %s:%d %@(%p) +processMessageFromParticipant: shouldNotifyClient='%d'
 [%s] %s:%d decryptMessageWithMKI='%@' message='%@', sequenceNumber='%d'
 [%s] %s:%d %@(%p) decryptMessageWithMKI='%@' message='%@', sequenceNumber='%d'
 [%s] %s:%d decryptMessageWithMKI: message='%@' is too long (%d > %d)
 [%s] %s:%d %@(%p) decryptMessageWithMKI: message='%@' is too long (%d > %d)
 [%s] %s:%d processEncryptedMessage: message received but MKI is not included in the packet from participantID='%@'. Dropping message...
 [%s] %s:%d %@(%p) processEncryptedMessage: message received but MKI is not included in the packet from participantID='%@'. Dropping message...
 [%s] %s:%d processEncryptedMessage: message received from participantID='%@' but could not decrypt it. Dropping message...
 [%s] %s:%d %@(%p) processEncryptedMessage: message received from participantID='%@' but could not decrypt it. Dropping message...
 [%s] %s:%d Failed to unarchive message. error='%@'
 [%s] %s:%d %@(%p) Failed to unarchive message. error='%@'
 [%s] %s:%d Payload and topic may not be both nil
 [%s] %s:%d %@(%p) Payload and topic may not be both nil
 [%s] %s:%d processEncryptedMessage: message encryption is enabled but remote participant '%@' sends un-encrypted messages. Dropping un-encrypted message. FIX ENCRYPTION INCONSYSTENCY!!!)
 [%s] %s:%d %@(%p) processEncryptedMessage: message encryption is enabled but remote participant '%@' sends un-encrypted messages. Dropping un-encrypted message. FIX ENCRYPTION INCONSYSTENCY!!!)
 [%s] %s:%d processEncryptedMessage: message encryption is enabled but message payload is empty for participant '%@'
 [%s] %s:%d %@(%p) processEncryptedMessage: message encryption is enabled but message payload is empty for participant '%@'
 [%s] %s:%d messageReceived: message encryption is disabled locally via user defaults but remote participant '%@' sends encrypted messages. Dropping encrypted message. FIX ENCRYPTION INCONSYSTENCY!!!)
 [%s] %s:%d %@(%p) messageReceived: message encryption is disabled locally via user defaults but remote participant '%@' sends encrypted messages. Dropping encrypted message. FIX ENCRYPTION INCONSYSTENCY!!!)
 [%s] %s:%d messageReceived: found existing dialog for participantID='%@'
 [%s] %s:%d %@(%p) messageReceived: found existing dialog for participantID='%@'
 [%s] %s:%d messageReceived: no participantID provided. Processing without dialog
 [%s] %s:%d %@(%p) messageReceived: no participantID provided. Processing without dialog
 [%s] %s:%d messageReceived: %@ notify client for sessionID '%d'
 [%s] %s:%d %@(%p) messageReceived: %@ notify client for sessionID '%d'
 [%s] %s:%d superlayer bounds=%@
 [%s] %s:%d %@(%p) superlayer bounds=%@
 [%s] %s:%d Invalid AVCRemoteVideoClient instance for the host layer
 [%s] %s:%d %@(%p) Invalid AVCRemoteVideoClient instance for the host layer
@:@ AVCRemoteVideoClient-init
 [%s] %s:%d @:@ AVCRemoteVideoClient-init (%p) streamToken=%ld
 [%s] %s:%d Video info layer is enabled.
 [%s] %s:%d ERROR queue for streamToken=%u doesn't exist.
 [%s] %s:%d ERROR OSX only support one client %u.
@:@ AVCRemoteVideoClient-dealloc
 [%s] %s:%d @:@ AVCRemoteVideoClient-dealloc (%p) streamToken=%u layerHostMode=%d activeVideoMode=%d
 [%s] %s:%d videoLayer=%@, mode=%d
 [%s] %s:%d AVCRemoteVideoClient: setVideoLayer %s for mode %d
 [%s] %s:%d AVCRemoteVideoClient: slotForMode %d
 [%s] %s:%d ERROR no valid slot for mode=%d
 [%s] %s:%d Invalid CALayerHost instance
 [%s] %s:%d %@(%p) Invalid CALayerHost instance
 [%s] %s:%d Invalid rootLayer or contextId
 [%s] %s:%d %@(%p) Invalid rootLayer or contextId
 [%s] %s:%d Failed to allocate layer host name
 [%s] %s:%d %@(%p) Failed to allocate layer host name
 [%s] %s:%d Failed to allocate CALayerHost
 [%s] %s:%d %@(%p) Failed to allocate CALayerHost
 [%s] %s:%d AVCRemoteVideoClient: connect layer=%p with  <--> contextId=%u
 [%s] %s:%d %@(%p) AVCRemoteVideoClient: connect layer=%p with  <--> contextId=%u
 [%s] %s:%d bounds=%@
 [%s] %s:%d %@(%p) bounds=%@
 [%s] %s:%d Failed due to invalid root layer bounds=%@
 [%s] %s:%d %@(%p) Failed due to invalid root layer bounds=%@
 [%s] %s:%d CALayerHost invalid
 [%s] %s:%d %@(%p) CALayerHost invalid
 [%s] %s:%d Feature not using daemon
 [%s] %s:%d %@(%p) Feature not using daemon
 [%s] %s:%d rootLayer=%@ bounds=%@
 [%s] %s:%d %@(%p) rootLayer=%@ bounds=%@
 [%s] %s:%d Invalid rootLayer parameter
 [%s] %s:%d %@(%p) Invalid rootLayer parameter
 [%s] %s:%d CALayerHost exist already, reconfigure not supported currently
 [%s] %s:%d %@(%p) CALayerHost exist already, reconfigure not supported currently
 [%s] %s:%d screenAttributes=%@, streamToken=%ld
 [%s] %s:%d videoAttributes=%@, streamToken=%ld
 [%s] %s:%d didPause=%d, streamToken=%u
 [%s] %s:%d didStall=%d, streamToken=%u
 [%s] %s:%d isDegraded=%d, streamToken=%u
 [%s] %s:%d isSuspended=%d, streamToken=%u
 [%s] %s:%d Invalid video mode:%d
 [%s] %s:%d Object is not a CA Layer
 [%s] %s:%d Bounds are NULL
 [%s] %s:%d Setting bounds %f x %f
 [%s] %s:%d HandoverReport: connection changed to: %s
 [%s] %s:%d Setting textLayer
 [%s] %s:%d VCBitrateArbiter: Bitrate rules %s
 [%s] %s:%d %s: overriding TCP Relay bitrate with storebag value of %d
 [%s] %s:%d VCBitrateArbiter: received connectionType %d
 [%s] %s:%d Bitrate = %d. received connection for %s, connectionType = %d, constraint %d, expensive %d, videoFullHD %d
 [%s] %s:%d Received connection type %d
 [%s] %s:%d _maxAllowedBitrate2G = %d,  _maxAllowedBitrate3G = %d, _maxAllowedBitrateLTE = %d, _maxAllowedBitrateHighRat = %d, _maxAllowedBitrateWifi = %d
 [%s] %s:%d fileDescriptor=%d, connection=%@
 [%s] %s:%d AVCPacketRelayDriver: invalid file descriptor to drive
 [%s] %s:%d fileDescriptor=%d
 [%s] %s:%d AVCPacketRelayDriver: invalid file descriptor to stop
 [%s] %s:%d AVCPacketRelayDriver init failed: unable to start driver thread with errno %d
 [%s] %s:%d AVCPacketRelayDriver init %p
 [%s] %s:%d AVCPacketRelayDriver dealloc
 [%s] %s:%d Expired frame received. Error=%d
 [%s] %s:%d Unable to parse segment header. Error=%d
 [%s] %s:%d Failed to decode payload. Error=%d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/CompressionUtils.c:%d: Error initializing deflate.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/CompressionUtils.c:%d: Error ending deflate.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/CompressionUtils.c:%d: Error initializing inflate.
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/SIP/CompressionUtils.c:%d: Error ending inflate.
AVCRC [%s] %s:%d Invalid parameter. statisticsHistory=%p statsElement=%p
AVCRC [%s] %s:%d Statistics has reverse history! packet count is not incremental, sendDiff:%d, receiveDiff:%d, time:%f, index:%d [%d,%d]
AVCRC [%s] %s:%d Received more packets than sent, sendDiff:%d, receiveDiff:%d, time:%f, index:%d [%d,%d]
AVCRC [%s] %s:%d Statistics has reverse history! byte count is not incremental, sendDiff:%d, currentCount:%llu, previousCount:%llu, time:%f, index:%d
AVCRC [%s] %s:%d Statistics has reverse history! byte count is not incremental, receiveDiff:%d, currentCount:%llu, previousCount:%llu, time:%f, index:%d
AVCRC [%s] %s:%d Statistics has reverse history! byte count is not incremental, serverStatsDiff:%d, currentCount:%llu, previousCount:%llu, time:%f, index:%d
AVCRC [%s] %s:%d Statistics history does not have enough history for the stats within the most recent %f seconds
AVCRC [%s] %s:%d Invalid parameter. statisticsHistory=%p
AVCRC [%s] %s:%d Adding sendStats with packetId:%u [len:%d, pruned:%d]
AVCRC [%s] %s:%d Cannot find sendStatsElement in history with packetId %d [earliest packetId: %d, len:%d]
AVCRC [%s] %s:%d Statistics history cannot match, because elementIndex is NULL!
AVCRC [%s] %s:%d Statistics history does not have enough history for the stats within the most recent %f seconds. History size: %f seconds
AVCRC [%s] %s:%d Statistics history receives out of order statistics for totalByteSent! [current:%llu, previous:%llu]
AVCRC [%s] %s:%d Statistics history receives out of order statistics for totalByteReceived!
AVCRC [%s] %s:%d Reset VCRC statistics history
 [%s] %s:%d Failed to negotiate image types and video codecs. imageTypes=%@ videoCodecExpected=%@
 [%s] %s:%d %s ret: %d (%s)
 [%s] %s:%d failed to create %@
 [%s] %s:%d file exists at %@
 [%s] %s:%d failed to open %@ with error %d
 [%s] %s:%d successfully created %@
 [%s] %s:%d Failed to allocate context
 [%s] %s:%d Failed to create log file
 [%s] %s:%d Failed to create log queue
 [%s] %s:%d open original %@ failed with %d
 [%s] %s:%d open new zip %@ failed with %d
 [%s] %s:%d failed to create %@: %d
 [%s] %s:%d compressed to %@
 [%s] %s:%d removed origFileName=%@, error=%@
 [%s] %s:%d removed zipFileName=%@, error=%@
 [%s] %s:%d Error in creating directory path=%s error=%s 
 [%s] %s:%d failed to read directory %@ (%@)
 [%s] %s:%d directory=%@, fileList.count=%lu
 [%s] %s:%d Total size: %llu
 [%s] %s:%d file no longer exists at %@
 [%s] %s:%d removed %@ (%@, %llu bytes, dumpID %u) - %llu bytes remaining
 [%s] %s:%d failed to remove %@ (%@)
 [%s] %s:%d Skipping filename=%@, date=%@
 [%s] %s:%d Completed: Total size: %llu
 [%s] %s:%d failed to read from source: %d
 [%s] %s:%d failed to compress buffer: %d
 [%s] %s:%d failed to write to destination: %d
 [%s] %s:%d [AVC SPATIAL AUDIO] Updated presentation info: %@
 [%s] %s:%d Dropping the frame, Client fell behind. Buffer is full.
 [%s] %s:%d Can't release frame with time %lld, doesn't exist
 [%s] %s:%d NULL transportStreams
 [%s] %s:%d Empty transportStreams array
 [%s] %s:%d Unknown transport stream type
VCAudioReceiver [%s] %s:%d Failed to allocate the audio receiver
VCAudioReceiver [%s] %s:%d Failed to initialize the receiver thread
VCAudioReceiver [%s] %s:%d Creating Audio Receiver with jbTargetEstimatorSynchronizer=%p
VCAudioReceiver [%s] %s:%d Failed to create VCJitterBuffer
VCAudioReceiver [%s] %s:%d Failed to set audio receiver for RTP (%d)
VCAudioReceiver [%s] %s:%d Audio issue detector=%p is created in audio receiver=%p
VCAudioReceiver [%s] %s:%d Initialized AudioReceiver[%p] with JitterBuffer[%p]
VCAudioReceiver [%s] %s:%d Invalid audio receiver (nil)
VCAudioReceiver [%s] %s:%d Cleaning up audioReceiver (0x%p)
VCAudioReceiver [%s] %s:%d Audio issue detector=%p is configured in audio receiver=%p with samples per frame=%d, sample rate=%d
VCAudioReceiver [%s] %s:%d Playback was not initialized before start
VCAudioReceiver [%s] %s:%d Audio issue detector=%p is stopped in audio receiver=%p
VCAudioReceiver [%s] %s:%d AudioReceiver is NULL
VCAudioReceiver [%s] %s:%d Failed to initialize audio receiver (%p) playback.
VCAudioReceiver [%s] %s:%d Done updating audio receiver (%p) decoders. Status=%X
VCAudioReceiver [%s] %s:%d Force to reset audio jitter buffer lag reference
VCAudioReceiver [%s] %s:%d JB: Updated CellTech isCellular[%d] LocalCellTech:%d, RemoteCellTech=%d
VCAudioReceiver [%s] %s:%d ActiveReceiver Stream is NULL
VCAudioReceiver [%s] %s:%d error bad handle
VCAudioReceiver [%s] %s:%d VCAudioReceiver_PullAudioSamples: Failed to grab the lock
VCAudioReceiver [%s] %s:%d Audio is asking for invalid number of samples %d 
VCAudioReceiver [%s] %s:%d AudioReceiver[%p] PullAudioSamples count:%u
VCAudioReceiver [%s] %s:%d Entering short media stall lastReceivedPacketTime=%f, currentTime=%f
VCAudioReceiver [%s] %s:%d Leaving short media stall lastReceivedPacketTime=%f, currentTime=%f, packetCount=%d
VCAudioReceiver [%s] %s:%d AudioReceiver[%p] resetting non target stream %d
VCAudioReceiver [%s] %s:%d Calculated maxBurstLoss in samples: %u, in 20ms blocks: %u, sampleRate: %f
VCAudioReceiver [%s] %s:%d Ignoring audio packet carrying bad red payload!
VCAudioReceiver [%s] %s:%d CollectAWDMetrics:audioReceiver is nil
VCAudioReceiver [%s] %s:%d VCAudioReceiver_CollectAWDMetrics: Failed to grab the lock
VCAudioReceiver [%s] %s:%d WRMInfo is NULL
VCAudioReceiver [%s] %s:%d wrmMetrics is NULL
VCAudioReceiver [%s] %s:%d Receiver is being torn down
VCAudioReceiver [%s] %s:%d Audio issue detector=%p destroyed in audio receiver=%p
VCAudioReceiver [%s] %s:%d VCAudioReceiver cleanup DONE (0x%p)
VCAudioReceiver [%s] %s:%d AudioReceiver[%p] Registered statisticsCollector[%p] with index=%d
VCAudioReceiver [%s] %s:%d Wrong type of statistics message is processed by VCAudioStream type=%d
VCAudioReceiver [%s] %s:%d audioReceiver=%p Transport callbacks already registered
VCAudioReceiver [%s] %s:%d Unsupported packet type:%d
VCAudioReceiver [%s] %s:%d Ignoring invalid incoming RTP media packet.
VCAudioReceiver [%s] %s:%d Bad buffer length bufferLength:%zu
VCAudioReceiver [%s] %s:%d Bad padding length paddingLength:%zu
VCAudioReceiver [%s] %s:%d Could not allocate memory for Audio Packet
VCAudioReceiver [%s] %s:%d received packet time[%f]
VCAudioReceiver [%s] %s:%d RTPMediaPacketToAudioPacket failed
VCAudioReceiver [%s] %s:%d First audio packet received. AudioReceiver[%p] jb[%p] time[%f] timestamp[%d]
VCAudioReceiver [%s] %s:%d AudioReceiver[%p] Unexpected idsParticipantID=%llu, expected=%llu
VCAudioReceiver [%s] %s:%d AudioReceiver[%p] UNEXPECTED: IDS stream ID is not valid
VCAudioReceiver [%s] %s:%d AudioReceiver[%p] Switching audio stream: %d -> %d
VCAudioReceiver [%s] %s:%d Switching Audio Stream configs isOneToOne:%d
VCAudioReceiver [%s] %s:%d CMBlockBufferCreateEmpty failed with error %d
VCAudioReceiver [%s] %s:%d _VCAudioReceiver_Decrypt failed %d
VCAudioReceiver [%s] %s:%d CMBlockBufferGetDataPointer failed
VCAudioReceiver [%s] %s:%d Decrypted payload is smaller than original one: expected at least '%zu', available size '%zu' got '%zu'
VCAudioReceiver [%s] %s:%d VCCryptor_Decrypt failed. result=%x
VCAudioReceiver [%s] %s:%d ERROR unknown payloadType[%d]
VCAudioReceiver [%s] %s:%d [%p]
VCAudioReceiver [%s] %s:%d VCAudioReceiver[%p] Codec rate mode change requested: mode=%u bitrate=%d bandwidth=%d payload=%u rtpTimestamp=%u seqNum=%u evs_ch_rf offset=%d indicator=%d
VCAudioReceiver [%s] %s:%d Audio buffer corrupted. Access unit length=%d, packet length=%d
VCAudioReceiver [%s] %s:%d GSM Audio buffer corrupted. Packet too short (%d < %d)
VCAudioReceiver [%s] %s:%d Audio buffer corrupted. Packet too short (%d < %d), payload=%d
VCAudioReceiver [%s] %s:%d Too many frames in audio packet, possible corruption
VCAudioReceiver [%s] %s:%d Unable to fit audio data into the audioFrame buffer. Data size: %d, padding len: %u
VCAudioReceiver [%s] %s:%d New burst loss entry: SQ: %u, timestamp: %u, isDTX: %d, duration: %u, isValid: %d, AR highest received SQ: %u, AR packet entry count: %u
VCAudioReceiver [%s] %s:%d received VTP_PKT_BBNOTE
VCAudioReceiver [%s] %s:%d Received local codec rate mode change request
VCAudioReceiver [%s] %s:%d Received RTCP SR
VCAudioReceiver [%s] %s:%d Received RTCP Custom SR
VCAudioReceiver [%s] %s:%d Received RTCP RR
VCAudioReceiver [%s] %s:%d Received unknown RTCP packetType=%u
VCAudioReceiver [%s] %s:%d Could not get the local SSRC
VCAudioReceiver [%s] %s:%d AudioReceiver[%p] Unregistered statisticsCollector[%p] with index=%d
VCAudioReceiver [%s] %s:%d Failed to unregister the reporting task: (0x%p)
VCAudioReceiver [%s] %s:%d [%p] participantID=%s Total(Received=%u expected=%u lost=%u) Reporting interval(Received=%u expected=%u lost=%u)
VCAudioReceiver [%s] %s:%d [%p] participantID=%s Expected packet count decreased, resetting counts. Received=%u expected=%u lost=%u
VCAudioReceiver [%s] %s:%d @=@ Health: VCAudioReceiver ParticipantID=%s erasure percentage=%.2f%% PLR percentage=%.2f%% current percentage:%.2f%% (rec:%u exp:%u, loss:%u)
VCAudioReceiver [%s] %s:%d [%p] participantID=%s idsStreamID=%u Total(Received=%u expected=%u lost=%u)
VCAudioReceiver [%s] %s:%d AudioReceiver[%p] Detected timestamp rollover
VCAudioReceiver [%s] %s:%d AudioReceiver[%p] Detected misordered packet during timestamp rollover
VCAudioReceiver [%s] %s:%d Tearing down audio receiver thread
VCAudioReceiver [%s] %s:%d ERROR bad handle
VCAudioReceiver [%s] %s:%d Audio receiver %p RTPRecvRTP returned[%x] sleeping 15000usecs??
VCAudioReceiver [%s] %s:%d Audio receiver %p received an error %x
VCAudioReceiver [%s] %s:%d Failed to retrieve RTCP packet. Error:%x
VCAudioReceiver [%s] %s:%d High audio erasure rate: %f
VCAudioReceiver [%s] %s:%d Collected AWD metric samples (rtpPacketLossRate=%f, jitterBufferUnderflowRate=%f, frameErasureRate=%f, speechErasureRate=%f, jitterBufferResidencyTime=%f, payloadType=%d, sampleRate=%d, bitRate=%d, ratType=%d)
 [%s] %s:%d JitterPreloadQueue: Allocation failed as the Queue is not valid
 [%s] %s:%d JitterPreloadQueue: Create Failed
 [%s] %s:%d JitterPreloadQueue: Failed to created Audio Packet Pool
 [%s] %s:%d JitterPreloadQueue: Failed to created Audio Frame Pool
 [%s] %s:%d JitterPreloadQueue: Too many frames seen in audio packet, possible corruption
 [%s] %s:%d Queue=%p is full
 [%s] %s:%d VCAudioTransmitter[%p] Codec rate mode change request had incorrect bitrate: mode=%u, bitrate=%u
 [%s] %s:%d VCAudioTransmitter[%p] Payload in codec mode change event does not match current payload: payload=%d, currentPayload=%d
 [%s] %s:%d VCAudioTransmitter[%p] Attempting to update to an unsupported codec bitrate: payload=%d, supportedBitrates=%@, bitrate=%d
 [%s] %s:%d VCAudioTransmitter[%p] Payload in codec mode change event does not match current payload: payload=%d currentPayload=%d
 [%s] %s:%d VCAudioTransmitter[%p] Attempting to update to an unsupported codec bandwidth: payload=%d, supportedBandwidths=%@, bitrate=%d
 [%s] %s:%d Coded rate mode and bandwidth combination is not supported for payload=%u. mode=%u bandwidth=%u
 [%s] %s:%d VCAudioTransmitter[%p] EVSCodec rfparams change requested offset=%u indicator=%u 
 [%s] %s:%d VCAudioTransmitter[%p] Codec bandwidth change requested for payload=%u: mode=%u bandwidth=%u
 [%s] %s:%d VCAudioTransmitter[%p] Codec rate mode change requested for payload=%u: mode=%u bitrate=%u
 [%s] %s:%d VCAudioTransmitter[%p] Requested codec rate mode change: mode=%u bandwidth=%u
 [%s] %s:%d VCAudioTransmitter[%p] Failed requesting codec rate mode change: mode=%u bandwidth=%u
 [%s] %s:%d [%p] Failed to compute audio Tx bit rate because timePeriod=%fs < (AUDIO_TRANSMITTER_MIN_BITRATE_REPORT_PERIOD=%fs)
 [%s] %s:%d @=@ Health: AudioTransmitter [%p] audioTxBitrate=%ukbps, audioFecTx=%f, primaryAudioTxRate=%ukbps, audioStreamRedundancyLevel=%u, _qualityIndex=%u
 [%s] %s:%d %@(%p) Failed to allocate reporting dictionary
 [%s] %s:%d Failed to allocate current payload value
 [%s] %s:%d %@(%p) Failed to allocate current payload value
 [%s] %s:%d Failed to allocate codec bitrate value
 [%s] %s:%d %@(%p) Failed to allocate codec bitrate value
 [%s] %s:%d Failed to allocate redundancy level value
 [%s] %s:%d %@(%p) Failed to allocate redundancy level value
 [%s] %s:%d Failed to allocate redundancy delay value
 [%s] %s:%d %@(%p) Failed to allocate redundancy delay value
 [%s] %s:%d error zero sampleBufferSize requested
 [%s] %s:%d encoderSamplePerFrame:%d bufferedSamples:%d totalSamples:%d timestamp:%d
 [%s] %s:%d Switching audio bitrates without changing tier %d -> %d
 [%s] %s:%d Time Hysteresis preventing tier upgrade from %d to %d, last upgrade at %6.3f
 [%s] %s:%d Switching audio bitrate tier payload %d -> %d for total tx %d: netBitrate %d -> %d, bundle %d -> %d
 [%s] %s:%d Overriding suggested red value %d with red value %u
 [%s] %s:%d Tier Table for Operating Mode %d
 [%s] %s:%d Setting audioTxBitrate to %d, %d audio + %d ((%d/%d+%d)*%d/%d) header
 [%s] %s:%d Switching payloads -> %d %d samplesPerFrame
 [%s] %s:%d Audio issue detector=%p is started in audio transmitter=%p
 [%s] %s:%d %@(%p) Audio issue detector=%p is started in audio transmitter=%p
 [%s] %s:%d Audio issue detector=%p is stopped in audio transmitter=%p
 [%s] %s:%d %@(%p) Audio issue detector=%p is stopped in audio transmitter=%p
 [%s] %s:%d numPayloads:%d maxDelay(in20ms):%d shouldResetHistory=%d
 [%s] %s:%d redundancyPercentage=%d
 [%s] %s:%d %@(%p) redundancyPercentage=%d
 [%s] %s:%d Notification is null
 [%s] %s:%d VCAudioTransmitter[%p] Cellular Network Notification: timestamp=%llu radioAccessTechnology=%u referenceSignalLevel=%d signalLevel=%d signalQuality=%d uplinkBler=%u bandwidthLimitationIndication=%u cdrxCycleLength=%u
 [%s] %s:%d Audio issue detector=%p is configured in audio transmitter=%p with samples per frame=%d, sample rate=%d
 [%s] %s:%d %@(%p) Audio issue detector=%p is configured in audio transmitter=%p with samples per frame=%d, sample rate=%d
 [%s] %s:%d Audio issue detector=%p is stopped and destroyed in audio transmitter=%p
 [%s] %s:%d %@(%p) Audio issue detector=%p is stopped and destroyed in audio transmitter=%p
 [%s] %s:%d Failed to allocate the codec bitrate value
 [%s] %s:%d Transmitter object is nil
 [%s] %s:%d wrmMetrics is NULL
 [%s] %s:%d NULL access: context=[%p], rtpPacketInfo=[%p]
 [%s] %s:%d Invalid red payload!
 [%s] %s:%d Invalid payload!
 [%s] %s:%d packet payload contains incorrect data size '%d'
 [%s] %s:%d CMBlockBufferIsRangeContinuous failed
 [%s] %s:%d Unable to add samples to the bundle!
 [%s] %s:%d VCAT bundleAndSendSamples: frame#[%d] payload[%d] numBytes[%d] %s[%d]
 [%s] %s:%d transmitter=%p Current ROC=%d
 [%s] %s:%d buffer: CAN'T BUFFER (%08X:%02d:%02d)...
 [%s] %s:%d buffer: FAILED TO BUFFER A RELIABLE PACKET SERIALNUMBER (%08X:%02d:%02d)...
 [%s] %s:%d ARPLSessionCreate: new session (%08X)...
 [%s] %s:%d ARPL_Sendto(%d): send %ld bytes %s ...
 [%s] %s:%d ARPL %p send: BUFFERED A NEW RELIABLE PACKET SERIALNUMBER (%08X:%02d:%02d) to (%08X)...
 [%s] %s:%d ARPL %p send: FAILED TO BUFFER A RELIABLE PACKET ..
 [%s] %s:%d ARPLSessionRelease: enter...
 [%s] %s:%d ARPLSessionRelease: old session (%08X)...
 [%s] %s:%d ARPLSessionRelease: delete...
 [%s] %s:%d ARPLSessionRelease: done...
 [%s] %s:%d ERROR: CAN'T RESEND (BAD TIMESTAMP) !!!!!!!!!!!!
 [%s] %s:%d %p check: RESEND serial number %08X to destination %08X INDEX %d
 [%s] %s:%d ERROR: CAN'T RESEND (BAD ADDRESS) !!!!!!!!!!!!
 [%s] %s:%d No processing should be run for the output queue!
 [%s] %s:%d Cannot not call connect from for the output queue!
 [%s] %s:%d Key=%@ present in carrier bundle, value=%d
 [%s] %s:%d Key=%@ either not present in carrier bundle or out of range, value=%d default value=%d
 [%s] %s:%d UplinkRateAdaptation config=%@
 [%s] %s:%d %@(%p) UplinkRateAdaptation config=%@
AVCVirtualTTYDevice [%s] %s:%d mode=%d, streamToken=%u error=%@
@:@ AVCVirtualTTYDevice-init
AVCVirtualTTYDevice [%s] %s:%d @:@ AVCVirtualTTYDevice-init (%p) mode=%d, streamToken=%d, error=%@
AVCVirtualTTYDevice [%s] %s:%d 
@:@ AVCVirtualTTYDevice-dealloc
AVCVirtualTTYDevice [%s] %s:%d @:@ AVCVirtualTTYDevice-dealloc (%p)
AVCVirtualTTYDevice [%s] %s:%d delegate=%@
@:@ AVCVirtualTTYDevice-start
AVCVirtualTTYDevice [%s] %s:%d @:@ AVCVirtualTTYDevice-start (%p)
@:@ AVCVirtualTTYDevice-stop
AVCVirtualTTYDevice [%s] %s:%d @:@ AVCVirtualTTYDevice-stop (%p)
AVCVirtualTTYDevice [%s] %s:%d Sending text:0x%04x '%C'
@:@ AVCVirtualTTYDevice-sendCharacter
AVCVirtualTTYDevice [%s] %s:%d @:@ AVCVirtualTTYDevice-sendCharacter (%p) error=%@
AVCVirtualTTYDevice [%s] %s:%d Sending text:%@
AVCVirtualTTYDevice [%s] %s:%d %d/%d: 0x%04x '%C'
AVCVirtualTTYDevice [%s] %s:%d %@ has not started.
@:@ AVCVirtualTTYDevice-sendText
AVCVirtualTTYDevice [%s] %s:%d @:@ AVCVirtualTTYDevice-sendText (%p) Not started
AVCVirtualTTYDevice [%s] %s:%d @:@ AVCVirtualTTYDevice-sendText (%p)
AVCVirtualTTYDevice [%s] %s:%d didStartConnectionBlock: error = %p, result = %s
AVCVirtualTTYDevice [%s] %s:%d AVCVirtualTTYDevice: didStartConnectionBlock: strongSelf == nil
AVCVirtualTTYDevice [%s] %s:%d AVCVirtualTTYDevice: didStartConnectionBlock strongSelf started(%d)
@:@ AVCVirtualTTYDevice-didStart
AVCVirtualTTYDevice [%s] %s:%d @:@ AVCVirtualTTYDevice-didStart (%p) didSucceed=%d
AVCVirtualTTYDevice [%s] %s:%d AVCVirtualTTYDevice: notified client %p of didStart started[%d]
@:@ AVCVirtualTTYDevice-didStop
AVCVirtualTTYDevice [%s] %s:%d @:@ AVCVirtualTTYDevice-didStop (%p)
AVCVirtualTTYDevice [%s] %s:%d AVCVirtualTTYDevice: notified client %p of didStop
AVCVirtualTTYDevice [%s] %s:%d Received text:0x%04x '%C'
@:@ AVCVirtualTTYDevice-didReceiveCharacter
AVCVirtualTTYDevice [%s] %s:%d @:@ AVCVirtualTTYDevice-didReceiveCharacter (%p)
AVCVirtualTTYDevice [%s] %s:%d Delegate %@ does not respond to -device:didReceiveCharacter:
AVCVirtualTTYDevice [%s] %s:%d Received an empty string
AVCVirtualTTYDevice [%s] %s:%d Received text:%@
@:@ AVCVirtualTTYDevice-didReceiveText
AVCVirtualTTYDevice [%s] %s:%d @:@ AVCVirtualTTYDevice-didReceiveText (%p)
AVCVirtualTTYDevice [%s] %s:%d Delegate %@ does not respond to -device:didReceiveText:
 [%s] %s:%d Missing payloadType
 [%s] %s:%d payload:%d Invalid Codec SampleRate
 [%s] %s:%d payload:%d Invalid internal bundle factor
 [%s] %s:%d payload:%d Invalid block size
 [%s] %s:%d payload:%d Invalid payload configuration, isOpusInBandFecEnabled:%d
 [%s] %s:%d forceAACELDBitRate to %d
 [%s] %s:%d Lag processor initialized with invalid pointer
 [%s] %s:%d Invalid parameter passed to lag processor new stream. LagProcessor=%p, lagPacket=%p, TSRate=%u, samplesPerFrame=%u
 [%s] %s:%d Invalid parameter passed to lag processor. LagProcessor=%p lagPacket=%p samplesPerFrame=%d videoQSize=%d, state=%d
 [%s] %s:%d Skip lag computation
 [%s] %s:%d Spurious lag noted (Pkt: SN:0X%4X TS:0X%8X) (Ref: SN:0X%4X TS:0X%8X)
 [%s] %s:%d Moving reference to secondary (Was: SN:0X%4X TS:0X%8X) (Now: SN:0X%4X TS:0X%8X), reset:%d
 [%s] %s:%d Reference changed. Reset OWRD
 [%s] %s:%d Spike detected! Discarding lag sample %f
 [%s] %s:%d Lag (%fs) looks spurious (short %fs: long %fs : threshold %fs), discarding
 [%s] %s:%d Just picked a new reference. OWRD should have been reset. OWRD = %f
 [%s] %s:%d Samples per frame looks incorrect %d
 [%s] %s:%d Entering OWRD SPIKE %.4f - %.4f > %.4f
 [%s] %s:%d Leaving OWRD SPIKE due to recovery
 [%s] %s:%d Leaving OWRD SPIKE due to flatness
 [%s] %s:%d Leaving OWRD SPIKE due to timeout %d
 [%s] %s:%d Bundling looks incorrect %d
 [%s] %s:%d Large Jump seen in sequence number %u startSeq=%u
 [%s] %s:%d Noted jump in AddLagToHistory %f
 [%s] %s:%d Lag is not statistically relevant. LastMinTimestamp=%d, stdev=%f, mean=%f, stdevMult=%f, skew=%f, kurtosis=%f, threshold=%f, candMinLag=%f, finalMinLag=%f
 [%s] %s:%d Incorrect bundling, it should never be zero
 [%s] %s:%d Attempting to add lag value to cdf with an index out of range
 [%s] %s:%d Failed to update the target size estimated prior to synchronization
 [%s] %s:%d Could not create VTP socket for VCTransportStream for sessionID=%d
 [%s] %s:%d Created VCTransportStream object [%p] for sessionID %d, with vfd:%d, vfdCancel:%d
 [%s] %s:%d dealloc [%p]
 [%s] %s:%d invalid packet
 [%s] %s:%d Failed to allocate media packet. (%X)
 [%s] %s:%d Failed to add media packet. (%X)
 [%s] %s:%d Invalid socket, return
 [%s] %s:%d VTP_Recvfrom(%d) failed(%08X) for sessionID=%d
 [%s] %s:%d transportStream[%p] callback %p or callback context %p is invalid
 [%s] %s:%d transportStream[%p] socket[%d] is invalid
 [%s] %s:%d transportStream[%p] already registered a vtpCallbackId [%d]
 [%s] %s:%d transportStream[%p] cannot unregister an invalid vtpCallbackId [%d]
 [%s] %s:%d Recomputed tier table. isRedundancyEnabled=%d
 [%s] %s:%d %@(%p) Recomputed tier table. isRedundancyEnabled=%d
 [%s] %s:%d Reached max screen encoders=%d
 [%s] %s:%d %@(%p) Reached max screen encoders=%d
 [%s] %s:%d Printing Table ########### 
 [%s] %s:%d %@(%p) Printing Table ########### 
 [%s] %s:%d Bandwidth %@, streamToken:%@, %@
 [%s] %s:%d %@(%p) Bandwidth %@, streamToken:%@, %@
 [%s] %s:%d Turning effects back on is not supported
 [%s] %s:%d Turning off effect: %@
 [%s] %s:%d Notifying effects[%@] client to flush remote queue
 [%s] %s:%d Sending video frame to extension to process
 [%s] %s:%d Sending video frame to AVC to process
 [%s] %s:%d Sending video frame to client to be processed
 [%s] %s:%d Dropping video frame due to effects being disabled
 [%s] %s:%d @=@ Health: VCEffectsManager Frames Sent: %d (%f FPS) Frames Received: %d (%f FPS) Frames Dropped: %d Frames Failed: %d
 [%s] %s:%d Cannot send frames to AVCEffects. Consecutive Dropped frames: %d
 [%s] %s:%d Have not received frames from AVCEffects. Sent Frames: %d Received Frames: %d
VCAudioPlayer [%s] %s:%d holeDetectionThreshold=%f
VCAudioPlayer [%s] %s:%d Failed to allocate Input playback buffer
VCAudioPlayer [%s] %s:%d Failed to allocate Output playback buffer
VCAudioPlayer [%s] %s:%d Failed to allocate last Decoded playback buffer
VCAudioPlayer [%s] %s:%d VCAudioPlayer pointer is NULL
VCAudioPlayer [%s] %s:%d Invalid number of channels[%d]
VCAudioPlayer [%s] %s:%d Player: Failed allocating in/out buffers
VCAudioPlayer [%s] %s:%d Player: Failed initializing Crossfade
VCAudioPlayer [%s] %s:%d Player: Failed initializing Timescaler
VCAudioPlayer [%s] %s:%d AudioPlayer[%p] Failed initializing DTMF
VCAudioPlayer [%s] %s:%d Audio Player initialized with sampleRate=%d, bufferQueueManagementMode=%d, timescaleAlgorithm=%d, channelsPerFrame=%d dtmfTonePlaybackEnabled=%d minJitterBufferQueueSize=%d
VCAudioPlayer [%s] %s:%d New Stream
VCAudioPlayer [%s] %s:%d Finalizing Audio Player
VCAudioPlayer [%s] %s:%d Fraction of missing packets during 5 seconds = %f, missing = %d, total = %d, average = %f [max interarrival = %f, average jitter size = %f, average interarrival = %f]
VCAudioPlayer [%s] %s:%d Suspend queue growth audio frame %d queueSize %d AvgQsize %f
VCAudioPlayer [%s] %s:%d %7.03f: backtrack: %.01fms (%u - %u,%u,%d,%u) (Jitter Size = %f) DTX %d Seq num %d
VCAudioPlayer [%s] %s:%d %7.03f: silence: %.01fms
VCAudioPlayer [%s] %s:%d %7.03f: jump: %.01fms
VCAudioPlayer [%s] %s:%d Target Boost targetBoostType=%d, currentActiveTargetSize=%lf
VCAudioPlayer [%s] %s:%d Timestamp did not increment: %d
VCAudioPlayer [%s] %s:%d DTMFGenerator: Timestamp did not increment, timestamp=%d
VCAudioPlayer [%s] %s:%d Queue steering callbacks configured
VCAudioPlayer [%s] %s:%d Queue growth suspended as silence period=%f is low
VCAudioPlayer [%s] %s:%d [%p] Detected a time gap of %0.6f seconds (larger than %0.6f threshold). Incrementing by sampleCount=%d instead of by oldSampleCount=%d.
VCAudioPlayer [%s] %s:%d Adjust[%f] AvgQSize[%f] DesiredQsize[%f] QueuedSamples[%d]
VCAudioPlayer [%s] %s:%d Warning: Protecting minimum queue. packetLifetimeIsLow=%d, packetLifeTime5Perc=%f threshold=%f
VCAudioPlayer [%s] %s:%d Queue Steering: Algorithm provided ambiguous output, skipping this instance
VCAudioPlayer [%s] %s:%d Queue Steering: Resetting queue growth state
VCAudioPlayer [%s] %s:%d Queue Steering: Failed to steer queue in direction %d
VCAudioPlayer [%s] %s:%d Queue Steering: Growing queue to protect against low packet lifetime and erasures
VCAudioPlayer [%s] %s:%d Queue Steering: %s shrinking queue
VCAudioPlayer [%s] %s:%d JQ too high, discarding. CurrentJQSize:%f currentTime:%f lastSpkrCallback:%f
VCAudioPlayer [%s] %s:%d Please file a radar on AVConference Media | All. Average JB queue size is negative! Current size: %f, new size: %f, jitter samples: %f
VCAudioPlayer [%s] %s:%d NewJQSize:%f
VCAudioPlayer [%s] %s:%d  sampleCount<=0 breaking loop %d
VCAudioPlayer [%s] %s:%d Timeout in audio player decoder loop, breaking. Updating samplesToDecode to %d
VCAudioPlayer [%s] %s:%d Invalid samplesToDecode=%d, samplesNeed=%d, inputBuffer.playbackBuffer=%p, inputBuffer.samples=%d, decoded=%d
VCAudioPlayer [%s] %s:%d Decode : RequiredTimeStamp[%d] SelectedTimeStamp[%d] DTX[%d] seq[%d]
VCAudioPlayer [%s] %s:%d SoundDec_Decode failed (%x). Previous payload=%d, payload=%d, dtx=%d lastSeq=%x seq=%x reset=%d firstFrameDecoded=%d
VCAudioPlayer [%s] %s:%d nil decode for crossfade failed (%x). Previous payload=%d, payload=%d, history=%x lastSeq=%x seq=%d reset=%d
VCAudioPlayer [%s] %s:%d SoundDec_GetOpusDecodeFECStatus soundDec=%p fecStatus=%u
VCAudioPlayer [%s] %s:%d Late packets played=%d currentTimestamp=%u currentSeqNum=%d
VCAudioPlayer [%s] %s:%d QueueSteering: Adding frame to history. Index=%d, packetLifeTime=%f, erasureCount=%d
VCAudioPlayer [%s] %s:%d QueueSteering: packetLifeTimeAvg=%f, frameErasurecount=%u 
VCAudioPlayer [%s] %s:%d QueueSteering: Packet Lifetime 5 percentile %f
VCAudioPlayer [%s] %s:%d QueueSteering: Packet Lifetime 10 percentile %f
VCAudioPlayer [%s] %s:%d QueueSteering: Packet Lifetime 90 percentile %f
VCAudioPlayer [%s] %s:%d Unexpected burstInfo->state=%d
VCAudioPlayer [%s] %s:%d nil decode failed (%x). Previous payload=%d, history=%x, dtx=%d lastSeq=%x reset=%d sampleCount=%d
VCAudioPlayer [%s] %s:%d  Decode Buffer Overflow, adding %d = >
VCAudioPlayer [%s] %s:%d  clipped to %d
VCAudioPlayer [%s] %s:%d Missing a packet %f [expected seq = %x] DTX[%d]
VCAudioPlayer [%s] %s:%d bytesPerFrame is zero while calculating input samples
VCAudioPlayer [%s] %s:%d Audio Frame seq[%d] rms[%f] rmsAvg[%f] channel[%d]
VCAudioPlayer [%s] %s:%d Audio Frame seq[%d] energyInfo.rms[%f] energyInfo.RMSAvg[%f]
VCAudioPlayer [%s] %s:%d Audio Frame seq[%d] energy[%f] energyInfo.energyAvg[%f] channel[%d]
VCAudioPlayer [%s] %s:%d Audio Frame seq[%d] energyInfo.energy[%f] energyInfo.energyAvg[%f]
VCAudioPlayer [%s] %s:%d %7.03f: %-4i  skip %i -> %i adjust %d
VCAudioPlayer [%s] %s:%d %7.03f: %-4i  dup  %i -> %i
VCAudioPlayer [%s] %s:%d Please file a radar on AVConference Media | All. Average JB queue size is negative! Current size: %f, new size: %f, samplesDelta: %d, needed samples: %d, audioPlayer mode: %d, silent: %d
VCAudioPlayer [%s] %s:%d Number of samples in the input buffer would have become negative! samples=%d samplesIn=%d
VCAudioPlayer [%s] %s:%d Number of samples in the output buffer would have become negative! samples=%d sampleCount=%d
VCAudioPlayer [%s] %s:%d Channel count mismatch! sampleBufferChannelCount=%hhu audioPlayerChannelCount=%d
VCAudioPlayer [%s] %s:%d %s: Took a long time %fs
 [%s] %s:%d Send callback is null
 [%s] %s:%d Failed to allocate packetThread struct
 [%s] %s:%d packetThread=%p Failed to create dispatch_semaphore
 [%s] %s:%d packetThread=%p Failed to allocate packetPool of %u packets
 [%s] %s:%d packetThread=%p Failed to allocate buffers of %u
 [%s] %s:%d packetThread=%p Failed to create packet thread %d
 [%s] %s:%d packetThread=%p PacketThread_Create completed for %s
 [%s] %s:%d IOProc: packetThread=%p _PacketThread_StorePacket failed to store a buffer
 [%s] %s:%d packetThread=%p PacketThread_SendPacket called with too many bytes %d
 [%s] %s:%d packetThread=%p PacketThread_Destroy complete.
 [%s] %s:%d packetThread=%p SendPacketsProc starting
 [%s] %s:%d packetThread=%p SendPacketsProc ending. dispatch_semaphore_wait returned %ld
 [%s] %s:%d packetThread=%p SendPacketsProc got lapped! sent %d stored %d, dropping packets.
 [%s] %s:%d packetThread=%p SendPacketsProc failed to fetch a packet
 [%s] %s:%d VideoConferenceDefaults: Forced screen capture settings: %dx%d@%dfps
 [%s] %s:%d VideoConferenceDefaults: Found enableRxDecodeYUVDump set to %d
 [%s] %s:%d VideoConferenceDefaults: Found enableRxDecodeYUVDump but the value[%d] is invalid (should be 1 or 2)
 [%s] %s:%d VideoConferenceDefaults: Found enableTxSourceYuvDump set to %d
 [%s] %s:%d VideoConferenceDefaults: Found enableTxSourceYuvDump but the value[%d] is invalid (should be 1 or 2)
 [%s] %s:%d VideoConferenceDefaults: Found bundleAudio. Bundling %d audio packets
 [%s] %s:%d VideoConferenceDefaults: Found bundleAudio but the value[%d] is invalid (should be 1-10)
 [%s] %s:%d allowAudioRecording: %d keyExists: %d
 [%s] %s:%d %@(%p) allowAudioRecording: %d keyExists: %d
 [%s] %s:%d OneToOne mode supported %d
 [%s] %s:%d VideoConferenceDefaults: %@=%d
 [%s] %s:%d VideoConferenceDefaults: %@=%u
 [%s] %s:%d key=%s Value=%.3f
 [%s] %s:%d %@=%d
 [%s] %s:%d Key %s: Value %d
 [%s] %s:%d %@=%@
 [%s] %s:%d Invalid VFD
 [%s] %s:%d transportSessionID=%u
 [%s] %s:%d Invalid traffic class %d
 [%s] %s:%d [%p] vfd = %d, options = %@
 [%s] %s:%d Parameter 'stream' should not be NULL
 [%s] %s:%d VTP_GetPreferredSendQueue failed - %d
 [%s] %s:%d VTP_Getsockname failed - %d
 [%s] %s:%d NULL receiveHopLimit
 [%s] %s:%d Parameter 'transportStream' should not be NULL
 [%s] %s:%d propertyKey=%@ and propertyValue=%@ must not be NULL
 [%s] %s:%d Unsupported propertyKey=%@ requested
 [%s] %s:%d _VCTransportStreamVTPCopyIsIPv6 failed, result=0x%08x
 [%s] %s:%d set sockopt IPV6_RECVHOPLIMIT/IP_RECVTTL failed , result=0x%08x
 [%s] %s:%d Send on non-activated stream
 [%s] %s:%d NULL packet data
 [%s] %s:%d streamIDCount=%u is greater than max=%u
 [%s] %s:%d Packet data too big %ld
 [%s] %s:%d CMBlockBufferAccessDataBytes failed %x
 [%s] %s:%d VTP_Send failed with errno=%d vfd=%d localCallID=%d, dataLength=%zu
 [%s] %s:%d NULL packetFilter
 [%s] %s:%d setPacketFilter only allowed in created state
 [%s] %s:%d VTP_SetPktType failed %d
 [%s] %s:%d Unsupported packet filter type %@
 [%s] %s:%d NULL packet filter
 [%s] %s:%d NULL remoteSSRCProperty
 [%s] %s:%d Remote SSRC not set on filter
 [%s] %s:%d Invalid vfd
 [%s] %s:%d Payload list not set on filter
 [%s] %s:%d Empty payloadList
 [%s] %s:%d Failed to allocate payloadListValue
 [%s] %s:%d VTP_SetPayloadList failed %d
 [%s] %s:%d Local SSRC not set on filter
 [%s] %s:%d VTP_SetRemoteSSRC failed %d
 [%s] %s:%d Cellular Unique Tag not set on filter
 [%s] %s:%d VTP_SetCellularUniqueTag failed %d
 [%s] %s:%d NULL packetFilter pointer
 [%s] %s:%d receivedHandler not set
 [%s] %s:%d Cannot perform receive. Not in activated state
 [%s] %s:%d Trying to perform receive on a transportStream that is not externally scheduled
 [%s] %s:%d Transport stream deactivated
 [%s] %s:%d VTP_Recvfrom failed %x
 [%s] %s:%d Dropping packet. Not in activated state
 [%s] %s:%d Activation only allowed in created state
 [%s] %s:%d regiterPacketCallback only allowed in created state
 [%s] %s:%d Cannot deactivate a non-activated stream
 [%s] %s:%d MediaControlInfo is nil
 [%s] %s:%d Invalid mediaControlInfo.
 [%s] %s:%d Invalid buffer for serialization.
 [%s] %s:%d Not enough buffer for media control info
 [%s] %s:%d Missing CVO info
 [%s] %s:%d NULL input paramter
 [%s] %s:%d Missing feedback info
 [%s] %s:%d Wrong MediaControlInfoVersion %d
 [%s] %s:%d Missing media queue info
 [%s] %s:%d bufferFilledSize(%zu) does not match totalLength(%zu)
 [%s] %s:%d Bad buffer length(%zu) for FaceTime audio media control info, expecting %u
 [%s] %s:%d Bad version(%u) for FaceTime audio media control info, expecting %u
 [%s] %s:%d The remote caller is likely in an incompatible AVConference build, please update to AVConference build latest OR after <rdar://problem/49225282> Fix AFRC feedback FaceTimeMediaControlInfoHeaderAudioV2 in LITTLE_ENDIAN case
 [%s] %s:%d Bad data length for FaceTime audio media control info
 [%s] %s:%d Not enough buffer for connection stats
 [%s] %s:%d Bad data buffer length for FaceTime audio media control info
 [%s] %s:%d VCMediaControlInfoUnserializeWithData failed with error %08X for FaceTime audio
 [%s] %s:%d Handle optional control info failed with error %08X for FaceTime audio
 [%s] %s:%d Does not support type %d
 [%s] %s:%d Bad buffer length(%zu) for FaceTime video media control info, expecting %zu
 [%s] %s:%d Bad version(%u) for FaceTime video media control info, expecting %u
 [%s] %s:%d Bad data length(%zu) for FaceTime video media control info, expecting %lu
 [%s] %s:%d Not enough buffer for LTR Timestamp
 [%s] %s:%d Not enough buffer for Frame Support Information
 [%s] %s:%d Not enough buffer for probe
 [%s] %s:%d Not enough buffer for FEC
 [%s] %s:%d FEC oversized
 [%s] %s:%d Bad data buffer length for FaceTime video media control info
 [%s] %s:%d Handle optional control info failed with error %08X for FaceTime video
 [%s] %s:%d Not enough buffer(%zu) for media control info, need %zu
 [%s] %s:%d Bad buffer length(%zu) for Multiway audio media control info, expecting %u
 [%s] %s:%d Missing ROC info
 [%s] %s:%d Missing MKI info
 [%s] %s:%d Failed to create rules for secondary screen!
 [%s] %s:%d Secondary Screen rules: Could not find a preferred video rule
 [%s] %s:%d Secondary Screen rules: no H264 support
 [%s] %s:%d Secondary Screen rules: Could not retrieve main screen width
 [%s] %s:%d Secondary Screen rules: Could not retrieve main screen height
 [%s] %s:%d Secondary Screen rules: Could not retrieve hardware encoder type
 [%s] %s:%d Device has no Secondary Screen rules
 [%s] %s:%d Resolution(%f x %f)  not supported. Defaulting to 2048x1536
VCCallSession [%s] %s:%d Failed to get image buffer
VCCallSession [%s] %s:%d remoteScreenAspectRatio %.0f:%.0f (%f), remoteExpectedAspectRatio %.0f:%.0f (%f), encode %.0f:%.0f (%f) --> visibleAspectRatio %.0f:%.0f (%f)
@:@ AVCSession-dealloc
 [%s] %s:%d @:@ AVCSession-dealloc (%p)
 [%s] %s:%d Session change to muted[%d]
 [%s] %s:%d %@(%p) Session change to muted[%d]
 [%s] %s:%d Session change to volume[%f]
 [%s] %s:%d %@(%p) Session change to volume[%f]
 [%s] %s:%d Session change to oneToOneEnabled[%d]
 [%s] %s:%d %@(%p) Session change to oneToOneEnabled[%d]
 [%s] %s:%d Session is already configure with oneToOneMode Enabled[%d]
 [%s] %s:%d %@(%p) Session is already configure with oneToOneMode Enabled[%d]
 [%s] %s:%d oneToOneModeEnabled[%d]
 [%s] %s:%d %@(%p) oneToOneModeEnabled[%d]
 [%s] %s:%d Session change to audio enabled[%d]
 [%s] %s:%d %@(%p) Session change to audio enabled[%d]
 [%s] %s:%d Session change to video enabled[%d]
 [%s] %s:%d %@(%p) Session change to video enabled[%d]
 [%s] %s:%d Session change to screen enabled[%d]
 [%s] %s:%d %@(%p) Session change to screen enabled[%d]
 [%s] %s:%d Session change to audio paused[%d]
 [%s] %s:%d %@(%p) Session change to audio paused[%d]
 [%s] %s:%d Session change to video paused[%d]
 [%s] %s:%d %@(%p) Session change to video paused[%d]
 [%s] %s:%d Forcing mediaNegotiatorVersion=%d
 [%s] %s:%d Unknown protocol version=%d
 [%s] %s:%d Negotiation blob requested with protocol version=%d
 [%s] %s:%d [AVC SPATIAL AUDIO] Receivieng presentation info: rect=[%f, %f, %f, %f] didplayID=%u layout=%d state=%u
 [%s] %s:%d Invalid layout=%u
 [%s] %s:%d %@(%p) Invalid layout=%u
 [%s] %s:%d Invalid display width=%f
 [%s] %s:%d %@(%p) Invalid display width=%f
 [%s] %s:%d Invalid display height=%f
 [%s] %s:%d %@(%p) Invalid display height=%f
 [%s] %s:%d Invalid state=%u
 [%s] %s:%d %@(%p) Invalid state=%u
 [%s] %s:%d [AVC SPATIAL AUDIO] Presentation info updated: %@
 [%s] %s:%d transportToken[%@]
 [%s] %s:%d %@(%p) transportToken[%@]
 [%s] %s:%d Transport token is nil
 [%s] %s:%d %@(%p) Transport token is nil
 [%s] %s:%d Non-nil parentNWActivity is unactivated!
 [%s] %s:%d %@(%p) Non-nil parentNWActivity is unactivated!
 [%s] %s:%d localParticipant [%p] has been created and stateQueue [%p] and shared xpc connection [%p] have been set
 [%s] %s:%d %@(%p) localParticipant [%p] has been created and stateQueue [%p] and shared xpc connection [%p] have been set
 [%s] %s:%d failed transportToken[%@]
 [%s] %s:%d %@(%p) failed transportToken[%@]
@:@ AVCSession-init
 [%s] %s:%d @:@ AVCSession-init (%p)
 [%s] %s:%d @:@ AVCSession-init (%p) localParticipantID=%@, transportToken=%@
 [%s] %s:%d Session change to media type=%d state=%d
 [%s] %s:%d %@(%p) Session change to media type=%d state=%d
 [%s] %s:%d Unable to add nil participant
 [%s] %s:%d %@(%p) Unable to add nil participant
 [%s] %s:%d participants[%@]
 [%s] %s:%d %@(%p) participants[%@]
@:@ AVCSession-addParticipants
 [%s] %s:%d @:@ AVCSession-addParticipants (%p) %@
 [%s] %s:%d participantIDs[%@]
 [%s] %s:%d %@(%p) participantIDs[%@]
@:@ AVCSession-removeParticipants
 [%s] %s:%d @:@ AVCSession-removeParticipants (%p) %@
@:@ AVCSession-start
 [%s] %s:%d @:@ AVCSession-start (%p) audioEnabled=%d, audioPaused=%d, audioMuted=%d, videoEnabled=%d, videoPaused=%d, screenEnabled=%d
 [%s] %s:%d stopError:%@
 [%s] %s:%d %@(%p) stopError:%@
@:@ AVCSession-stop
 [%s] %s:%d @:@ AVCSession-stop (%p) error=%@
 [%s] %s:%d _activeConfigurationCount=%d
 [%s] %s:%d %@(%p) _activeConfigurationCount=%d
 [%s] %s:%d Multiple participants are configured with the same prominence indices
 [%s] %s:%d received callback for addParticipantDidSucceed %d, participantID %@
 [%s] %s:%d %@(%p) received callback for addParticipantDidSucceed %d, participantID %@
 [%s] %s:%d Failed to add the participant
@:@ AVCSession-didAddParticipant
 [%s] %s:%d @:@ AVCSession-didAddParticipant (%p) uuid=%@, didSucceed=%d, error=%@
 [%s] %s:%d received callback for didStart
 [%s] %s:%d %@(%p) received callback for didStart
@:@ AVCSession-didStart
 [%s] %s:%d @:@ AVCSession-didStart (%p) didSucceed=%d, error=%@
 [%s] %s:%d received callback for didStop
 [%s] %s:%d %@(%p) received callback for didStop
@:@ AVCSession-didStop
 [%s] %s:%d @:@ AVCSession-didStop (%p) error=%@
@:@ AVCSession-serverDidDisconnect
 [%s] %s:%d @:@ AVCSession-serverDidDisconnect (%p)
 [%s] %s:%d received callback for removeParticipantDidSucceed
 [%s] %s:%d %@(%p) received callback for removeParticipantDidSucceed
@:@ AVCSession-didRemoveParticipant
 [%s] %s:%d @:@ AVCSession-didRemoveParticipant (%p) uuid=%@, didSucceed=%d, error=%@
 [%s] %s:%d received callback for didUpdateConfig
 [%s] %s:%d %@(%p) received callback for didUpdateConfig
 [%s] %s:%d received callback for didDetectError:%@
 [%s] %s:%d %@(%p) received callback for didDetectError:%@
 [%s] %s:%d received callback for didChangeUplinkRateAdaptationInfo:%@
 [%s] %s:%d %@(%p) received callback for didChangeUplinkRateAdaptationInfo:%@
 [%s] %s:%d received callback for didChangeDownlinkRateAdaptationInfo:%@
 [%s] %s:%d %@(%p) received callback for didChangeDownlinkRateAdaptationInfo:%@
 [%s] %s:%d received callback for shouldReconnect
 [%s] %s:%d %@(%p) received callback for shouldReconnect
 [%s] %s:%d Calling sessionShouldReconnect on the delegate
 [%s] %s:%d %@(%p) Calling sessionShouldReconnect on the delegate
 [%s] %s:%d Session[%@] received callback for oneToOneModeEnabled[%d] did succeed[%d]
 [%s] %s:%d %@(%p) Session[%@] received callback for oneToOneModeEnabled[%d] did succeed[%d]
 [%s] %s:%d AVCSession[%@] received callback for audio enabled[%d] did succeed[%d]
 [%s] %s:%d %@(%p) AVCSession[%@] received callback for audio enabled[%d] did succeed[%d]
 [%s] %s:%d AVCSession[%@] received callback for video enabled[%d] did succeed[%d]
 [%s] %s:%d %@(%p) AVCSession[%@] received callback for video enabled[%d] did succeed[%d]
 [%s] %s:%d AVCSession[%@] received callback for screen enabled[%d] did succeed[%d]
 [%s] %s:%d %@(%p) AVCSession[%@] received callback for screen enabled[%d] did succeed[%d]
 [%s] %s:%d AVCSession[%@] received callback for audio paused[%d] did succeed[%d]
 [%s] %s:%d %@(%p) AVCSession[%@] received callback for audio paused[%d] did succeed[%d]
 [%s] %s:%d AVCSession[%@] received callback for video paused[%d] did succeed[%d]
 [%s] %s:%d %@(%p) AVCSession[%@] received callback for video paused[%d] did succeed[%d]
 [%s] %s:%d AVCSession=%@ received mediaStateDidChange callback for mediaType=%d mediaState=%d did succeed[%d]
 [%s] %s:%d %@(%p) AVCSession=%@ received mediaStateDidChange callback for mediaType=%d mediaState=%d did succeed[%d]
 [%s] %s:%d AVCSession[%@] received callback.
 [%s] %s:%d %@(%p) AVCSession[%@] received callback.
 [%s] %s:%d Invalid captureSourceID=%d
 [%s] %s:%d Failed to allocate the video sink state dictionary
 [%s] %s:%d Failed to read key=%@
 [%s] %s:%d Failed to create the format description
 [%s] %s:%d Invalid parameter
 [%s] %s:%d Missing key=%@ in config
 [%s] %s:%d Unexpected class for key=%@
 [%s] %s:%d Invalid framerate=%u
 [%s] %s:%d Incorrect format type typeId=%lu
 [%s] %s:%d Registering the same delegate twice!
AVCVideoStream [%s] %s:%d %s %s
AVCVideoStream [%s] %s:%d destination=%@, callID=%@, error=%@
AVCVideoStream [%s] %s:%d Will run %s process
AVCVideoStream [%s] %s:%d %@(%p) Will run %s process
AVCVideoStream [%s] %s:%d AVCVideoStream: error initializing error[%s] resultDict[%s]
AVCVideoStream [%s] %s:%d AVCVideoStream: error initializing no capabilities dict result[%s]
AVCVideoStream [%s] %s:%d AVCVideoStream: error initializing... return stream token failed
AVCVideoStream [%s] %s:%d AVCVideoStream: error initializing... no results dict
AVCVideoStream [%s] %s:%d @:@ AVCVideoStream-init (%p) callID=%@, streamToken=%d, error=%@
@:@ AVCVideoStream-init
AVCVideoStream [%s] %s:%d @:@ AVCVideoStream-init (%p)
AVCVideoStream [%s] %s:%d 
AVCVideoStream [%s] %s:%d %@(%p) 
@:@ AVCVideoStream-dealloc
AVCVideoStream [%s] %s:%d @:@ AVCVideoStream-dealloc (%p)
AVCVideoStream [%s] %s:%d Invalid video configuration: error[%s]
AVCVideoStream [%s] %s:%d %@(%p) Invalid video configuration: error[%s]
AVCVideoStream [%s] %s:%d AVCVideoStream API_VCMEDIASTREAM_STARTCONFERENCE (client side)
AVCVideoStream [%s] %s:%d AVCVideoStream start (not using XPC)
@:@ AVCVideoStream-start
AVCVideoStream [%s] %s:%d @:@ AVCVideoStream-start (%p)
@:@ AVCVideoStream-stop
AVCVideoStream [%s] %s:%d @:@ AVCVideoStream-stop (%p)
@:@ AVCVideoStream-pause
AVCVideoStream [%s] %s:%d @:@ AVCVideoStream-pause (%p)
@:@ AVCVideoStream-resume
AVCVideoStream [%s] %s:%d @:@ AVCVideoStream-resume (%p)
AVCVideoStream [%s] %s:%d AVCVideoStream[%p] %s error[%s]
AVCVideoStream [%s] %s:%d %s only supported in the daemon
AVCVideoStream [%s] %s:%d direction=%ld
AVCVideoStream [%s] %s:%d rtcpEnabled=%d
AVCVideoStream [%s] %s:%d rtpTimeOutEnabled=%d
AVCVideoStream [%s] %s:%d rtcpTimeOutEnabled=%d
AVCVideoStream [%s] %s:%d rtpTimeOutIntervalSec=%f
AVCVideoStream [%s] %s:%d rtcpTimeOutIntervalSec=%f
AVCVideoStream [%s] %s:%d rtcpSendIntervalSec=%f
AVCVideoStream [%s] %s:%d AVCVideoStream: AVC server died, notifying client
AVCVideoStream [%s] %s:%d AVCVideoStream: Media server died, notifying client
@:@ AVCVideoStream-didServerDie
AVCVideoStream [%s] %s:%d @:@ AVCVideoStream-didServerDie (%p)
AVCVideoStream [%s] %s:%d AVCVideoStream: Server died, but AVCVideoStream has already deallocated, NO-OP
AVCVideoStream [%s] %s:%d didStartConnectionBlock: error = %p, result = %s
AVCVideoStream [%s] %s:%d AVCVideoStream: didStartConnectionBlock: strongSelf == nil
AVCVideoStream [%s] %s:%d AVCVideoStream: didStartConnectionBlock strongSelf started(%d)
@:@ AVCVideoStream-didStart
AVCVideoStream [%s] %s:%d @:@ AVCVideoStream-didStart (%p) didSucceed=%d, error=%@
AVCVideoStream [%s] %s:%d AVCVideoStream: notified client %p of didStart started[%d]
AVCVideoStream [%s] %s:%d AVCVideoStream: notified client %p of didStop
@:@ AVCVideoStream-didStop
AVCVideoStream [%s] %s:%d @:@ AVCVideoStream-didStop (%p)
@:@ AVCVideoStream-didPause
AVCVideoStream [%s] %s:%d @:@ AVCVideoStream-didPause (%p) didSucceed=%d, error=%@
AVCVideoStream [%s] %s:%d AVCVideoStream: notified client %p of didPause [%d]
@:@ AVCVideoStream-didResume
AVCVideoStream [%s] %s:%d @:@ AVCVideoStream-didResume (%p) didSucceed=%d, error=%@
AVCVideoStream [%s] %s:%d AVCVideoStream: notified client %p of didResume [%d]
AVCVideoStream [%s] %s:%d AVCVideoStream: notified client %p RTP packet timeout
AVCVideoStream [%s] %s:%d AVCVideoStream: notified client %p RTCP packet timeout
AVCVideoStream [%s] %s:%d AVCVideoStream: notified client %p received RTCP packets
AVCVideoStream [%s] %s:%d %s: notified client %p didGetLastDecodedFrame
AVCVideoStream [%s] %s:%d AVCVideoStream: notified client %p of downlinkQualityDidChange [%s]
AVCVideoStream [%s] %s:%d AVCVideoStream: notified client %p of uplinkQualityDidChange [%s]
AVCVideoStream [%s] %s:%d AVCVideoStream: notified client %p of didUpdateVideoConfiguration [%d]
AVCVideoStream [%s] %s:%d stream=%@, didStartStream=%d, error=%@
AVCVideoStream [%s] %s:%d stream=%@
AVCVideoStream [%s] %s:%d stream=%@, didPauseStream=%d, error=%@
AVCVideoStream [%s] %s:%d stream=%@, didResumeStream=%d, error=%@
AVCVideoStream [%s] %s:%d conf=%@, rtcpPackets=%@
AVCVideoStream [%s] %s:%d stream=%@, downlinkQualityInfo=%@
AVCVideoStream [%s] %s:%d stream=%@, uplinkQualityInfo=%@
AVCVideoStream [%s] %s:%d stream=%@, serverDidDie
 [%s] %s:%d %@. Starting timer
 [%s] %s:%d %@. VCDispatchTimer is already active
 [%s] %s:%d %@. Timeout triggered. Terminating process ...
 [%s] %s:%d %@(%p). Stopping timer
 [%s] %s:%d VCHardwareSettings: tilesPerFrame=%d for avcOperatingmode=%d
 [%s] %s:%d VCHardwareSettings: Failed to allocate memory for pixel format storage
 [%s] %s:%d VCHardwareSettings: Failed to allocate array for hardware Settings
 [%s] %s:%d Spatial audio feature force enabled
 [%s] %s:%d Spatial audio feature disabled
 [%s] %s:%d Spatial audio feature enabled. deviceSupportsSpatialAudio=%d
 [%s] %s:%d Siri audio feature disabled
 [%s] %s:%d VCVideoRules: Failed to create rules array
 [%s] %s:%d VCVideoRules: Failed to create supported payload array
 [%s] %s:%d VCVideoRuleCollections: invalid bitrate rule
 [%s] %s:%d VCVideoRuleCollections: Returning filtered video rules %s
 [%s] %s:%d maxWidth=%d, maxHeight=%d, transportType=%s
 [%s] %s:%d (%p) streamToken=%u
 [%s] %s:%d starting oneToOne streams
 [%s] %s:%d %@(%p) starting oneToOne streams
 [%s] %s:%d Failed to start the VCAudioIO. error=%@
 [%s] %s:%d Starting the Multiway Streams
 [%s] %s:%d %@(%p) Starting the Multiway Streams
 [%s] %s:%d Failed to start the stream groups. error=%@
 [%s] %s:%d Participant already started
 [%s] %s:%d %@(%p) Participant already started
 [%s] %s:%d screenStreams[%@]
 [%s] %s:%d %@(%p) screenStreams[%@]
 [%s] %s:%d Participant already stopped
 [%s] %s:%d %@(%p) Participant already stopped
 [%s] %s:%d Participant audio already set to enabled[%d]
 [%s] %s:%d Participant video already set to enabled[%d]
 [%s] %s:%d screenStream[%@] state=%d
 [%s] %s:%d %@(%p) screenStream[%@] state=%d
 [%s] %s:%d Participant screen video already set to enabled[%d]
 [%s] %s:%d Can't set pause when participant audio is not enabled
 [%s] %s:%d Participant audio already set to paused[%d]
 [%s] %s:%d startAudioStreamGroups failed with error=%@
 [%s] %s:%d Shouldn't come here when setting audio paused
 [%s] %s:%d setAudioStreamGroupsPaused=%d failed with error=%@
 [%s] %s:%d pauseAudioStreams=%d failed with error=%@
 [%s] %s:%d Can't set pause when participant video is not enabled
 [%s] %s:%d Participant video already set to paused[%d]
 [%s] %s:%d Failed to startVideo for videoPausedToStart paused=%d error=%@ 
 [%s] %s:%d Shouldn't come here when setting video paused
 [%s] %s:%d paused=%d error=%@ 
 [%s] %s:%d mediaTypeSettings is missing for mediaType=%@ mediaState=%@
 [%s] %s:%d %@(%p) mediaTypeSettings is missing for mediaType=%@ mediaState=%@
 [%s] %s:%d mediaType=%@ already set to mediaState=%@
 [%s] %s:%d %@(%p) mediaType=%@ already set to mediaState=%@
 [%s] %s:%d Failed to set the mediaState=%@ for mediaType=%@. error=%@
 [%s] %s:%d %@(%p) Failed to set the mediaState=%@ for mediaType=%@. error=%@
 [%s] %s:%d The participant info data is nil
 [%s] %s:%d Media blob missing in the participant info
 [%s] %s:%d Negotiation data not available for version=%d
 [%s] %s:%d Failed to allocate output dictionary
 [%s] %s:%d Unexpected participant data in participant info dictionary
 [%s] %s:%d Negotiation v1 blob not present in particiant info
 [%s] %s:%d Negotiation v2 blob not present in particiant info
 [%s] %s:%d Missing media blob entry in particiant info. ParticipantInfo=%@
 [%s] %s:%d Failed to generate the negotation data entry
 [%s] %s:%d Media blob is nil
 [%s] %s:%d Tearing down participant
 [%s] %s:%d %@(%p) Tearing down participant
 [%s] %s:%d Failed to stop the VCAudioIO. error=%@
 [%s] %s:%d Failed to update streamgroup=%s, Error=%@
 [%s] %s:%d %@(%p) Failed to update streamgroup=%s, Error=%@
 [%s] %s:%d Ignore start/stop for stream group=%@ isStreamGroupActive=%d isStreamGroupStarted=%d
 [%s] %s:%d Failed to update stream group=%@ with error=%@
 [%s] %s:%d Failed to allocate temporary stream group array
 [%s] %s:%d streamGroupID=%s, streamToken=%u is inactive
 [%s] %s:%d %@(%p) streamGroupID=%s, streamToken=%u is inactive
 [%s] %s:%d Starting stream group. streamGroupID=%s, streamToken=%u
 [%s] %s:%d %@(%p) Starting stream group. streamGroupID=%s, streamToken=%u
 [%s] %s:%d Failed to start stream group. streamGroupID=%s streamToken=%u error=%@
 [%s] %s:%d %@(%p) Failed to start stream group. streamGroupID=%s streamToken=%u error=%@
 [%s] %s:%d screenStreamGroup=%@, sysaStreamGroup=%@, supportsDedicatedSystemAudioStream=%d
 [%s] %s:%d %@(%p) screenStreamGroup=%@, sysaStreamGroup=%@, supportsDedicatedSystemAudioStream=%d
 [%s] %s:%d Failed to start screen group. Error=%@
 [%s] %s:%d streamGroup: %@, streamGroup: %@
 [%s] %s:%d %@(%p) streamGroup: %@, streamGroup: %@
 [%s] %s:%d Failed to allocate codec config for payload=%d!
 [%s] %s:%d %@(%p) Failed to allocate codec config for payload=%d!
 [%s] %s:%d No audio rules for stream configuration!
 [%s] %s:%d No codec configurations for stream configuration!
 [%s] %s:%d Unable to allocate multiway video config
 [%s] %s:%d Failed to allocate stream configuration!
 [%s] %s:%d %@(%p) Failed to allocate stream configuration!
 [%s] %s:%d Unable to allocate multiway audio config
 [%s] %s:%d Unable to allocate rate controller audio config
 [%s] %s:%d Failed to setup the audio stream config
 [%s] %s:%d %@(%p) Failed to setup the audio stream config
 [%s] %s:%d Failed to allocate one to one video stream configuration!
 [%s] %s:%d %@(%p) Failed to allocate one to one video stream configuration!
 [%s] %s:%d Unable to allocate rate controller config
 [%s] %s:%d Invalid VCSecurityKeyManager
 [%s] %s:%d VCSecurityKeyHolder_Create failed
 [%s] %s:%d Disabling SRTP encryption. isEncryptionDisabled=%d, sframeCipherSuite=%d
 [%s] %s:%d setupSecurityKeyHolderForStreamConfig failed
 [%s] %s:%d Disabling SFrame encryption. isEncryptionDisabled=YES
 [%s] %s:%d Failed created audioIO=%p operatingMode:%d deviceRole:%d direction:%d
 [%s] %s:%d %@(%p) Failed created audioIO=%p operatingMode:%d deviceRole:%d direction:%d
 [%s] %s:%d configured audioIO=%p operatingMode=%d deviceRole=%d direction=%d isMuted=%d
 [%s] %s:%d %@(%p) configured audioIO=%p operatingMode=%d deviceRole=%d direction=%d isMuted=%d
 [%s] %s:%d Failed to setDevice role on captionsStreamGroup=%@
 [%s] %s:%d Error configuring audioIO
 [%s] %s:%d %@(%p) Error configuring audioIO
 [%s] %s:%d There are no audio streams to configure, bypassing configuration
 [%s] %s:%d Error configuring audio stream [%@]
 [%s] %s:%d Unable to allocate video rate control config
 [%s] %s:%d There are no video streams to configure, bypassing configuration
 [%s] %s:%d Failed to allocate one to one rate config
 [%s] %s:%d Error configuring stream [%@]
 [%s] %s:%d deviceRole=%d, negotiatedVideoEnabled=%d, negotiatedScreenEnabled=%d, operatingMode=%d
 [%s] %s:%d %@(%p) deviceRole=%d, negotiatedVideoEnabled=%d, negotiatedScreenEnabled=%d, operatingMode=%d
 [%s] %s:%d Error configuring audio stream
 [%s] %s:%d Error configuring video stream
 [%s] %s:%d Unable to create the oneToOneConfig
 [%s] %s:%d Error configuring streams
 [%s] %s:%d Error setting device role on stream group
 [%s] %s:%d %@(%p) Error setting device role on stream group
 [%s] %s:%d Unable to initialize participant. Destination=%s 
 [%s] %s:%d %@(%p) Unable to initialize participant. Destination=%s 
 [%s] %s:%d Failed to create the list of supported audio rules
 [%s] %s:%d %@(%p) Failed to create the list of supported audio rules
 [%s] %s:%d Failed to create the participant stream token dictionary
 [%s] %s:%d %@(%p) Failed to create the participant stream token dictionary
 [%s] %s:%d (%p) Generated video stream token=%@
 [%s] %s:%d (%p) Generated audio stream token=%@
 [%s] %s:%d Participant dealloc %@
 [%s] %s:%d %@(%p) Participant dealloc %@
 [%s] %s:%d Media state data dictionary is nil
 [%s] %s:%d %@(%p) Media state data dictionary is nil
 [%s] %s:%d Failed to allocate the media type settings for mediaType=%@
 [%s] %s:%d %@(%p) Failed to allocate the media type settings for mediaType=%@
 [%s] %s:%d _mediaTypeSettingsDict=%@
 [%s] %s:%d %@(%p) _mediaTypeSettingsDict=%@
 [%s] %s:%d Adding streamGroupID=%s for mediaType=%@ mediaState=%@
 [%s] %s:%d Exiting state participant %s. Entering state participant %s.
 [%s] %s:%d %@(%p) Exiting state participant %s. Entering state participant %s.
 [%s] %s:%d Changing participant screenEnabled to %d
 [%s] %s:%d %@(%p) Changing participant screenEnabled to %d
 [%s] %s:%d Stream token not found for streamGroupID=%@
 [%s] %s:%d %@(%p) Stream token not found for streamGroupID=%@
 [%s] %s:%d mediaTypeSettings is missing for mediaType=%@
 [%s] %s:%d %@(%p) mediaTypeSettings is missing for mediaType=%@
 [%s] %s:%d Failed to activate stream groups. mediaType=%@ mediaState=%@ error=%@
 [%s] %s:%d %@(%p) Failed to activate stream groups. mediaType=%@ mediaState=%@ error=%@
 [%s] %s:%d Failed to deactivate stream groups. mediaState=%@ error=%@
 [%s] %s:%d %@(%p) Failed to deactivate stream groups. mediaState=%@ error=%@
 [%s] %s:%d Stream groups not found. error=%@
 [%s] %s:%d %@(%p) Stream groups not found. error=%@
 [%s] %s:%d Ignore mediaState=%@ for streamGroup=%@ isStreamGroupActive=%d isStreamGroupStarted=%d
 [%s] %s:%d %@(%p) Ignore mediaState=%@ for streamGroup=%@ isStreamGroupActive=%d isStreamGroupStarted=%d
 [%s] %s:%d Unknown media stream group state: %d
 [%s] %s:%d Set VCRateControl baseband congestion detector to all audio streams
 [%s] %s:%d Redundancy controllers are created
 [%s] %s:%d Sync group=%s not found for group=%s
 [%s] %s:%d Failed to add %s as sync destination to %s
 [%s] %s:%d System Audio Stream Group has paused, swapping sync sources
 [%s] %s:%d %@(%p) System Audio Stream Group has paused, swapping sync sources
 [%s] %s:%d System Audio Stream Group has resumed, swapping sync sources
 [%s] %s:%d %@(%p) System Audio Stream Group has resumed, swapping sync sources
 [%s] %s:%d requestKeyFrameGenerationWithStreamID:%d FIRType:%d
 [%s] %s:%d Resetting decryption status
 [%s] %s:%d %@(%p) Resetting decryption status
 [%s] %s:%d Detected remote switch of oneToOne mode %d
 [%s] %s:%d priority %hhu
 [%s] %s:%d streamGroup %@
 [%s] %s:%d enabled %s
 [%s] %s:%d paused %s
 [%s] %s:%d fromStreamID & toStreamID are equal, no switch needed
 [%s] %s:%d switched streamID %hu -> %hu
 [%s] %s:%d requestRedundancy %s
 [%s] %s:%d streamID %d
 [%s] %s:%d streamGroup=%@
 [%s] %s:%d %@(%p) streamGroup=%@
 [%s] %s:%d streamGroup %@ didSuspendStreams:%d
 [%s] %s:%d streamGroup=%@ remoteMediaStalled=%d duration=%f
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/AVCPacketRelayDriverThread.m:%d: AVCPacketRelayDriverThread: calloc(%d) failed
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/AVCPacketRelayDriverThread.m:%d: AVCPacketRelayDriverThread: CreateHandle failed (%d)
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/AVCPacketRelayDriverThread.m:%d: AVCPacketRelayDriverThread: AVCPacketRelayDriverProc start failed (%d)
 [%s] %s:%d AVCPacketRelayDriverThread: AVCPacketRelayDriverProc thread(%p) started...
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/AVCPacketRelayDriverThread.m:%d: %s: failed due to invalid handle.
 [%s] %s:%d AVCPacketRelayDriverThread: AVCPacketRelayDriverProc thread(%p) end...
 [%s] %s:%d AVCPacketRelayDriverThread: allocate new connection failed
 [%s] %s:%d AVCPacketRelayDriverThread: now driving file descriptor %d
 [%s] %s:%d AVCPacketRelayDriverThread: stop driving file descriptor %d
 [%s] %s:%d AVCPacketRelayDriverThread: didn't find file descriptor %d
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/AVCPacketRelayDriverThread.m:%d: AVCPacketRelayDriverProc failed due to invalid handle.
 [%s] %s:%d AVCPacketRelayDriverProc: select failed with errno %d
 [%s] %s:%d VCAudioSessionMediaProperties property changed: object=%@ is nil or not of class=%@
 [%s] %s:%d %@(%p) VCAudioSessionMediaProperties property changed: object=%@ is nil or not of class=%@
 [%s] %s:%d VCAudioSessionMediaProperties property changed: preferredSampleRate=%f became preferredSampleRate=%f
 [%s] %s:%d %@(%p) VCAudioSessionMediaProperties property changed: preferredSampleRate=%f became preferredSampleRate=%f
 [%s] %s:%d VCAudioSessionMediaProperties property changed: preferredBlockSize=%f became preferredBlockSize=%f
 [%s] %s:%d %@(%p) VCAudioSessionMediaProperties property changed: preferredBlockSize=%f became preferredBlockSize=%f
 [%s] %s:%d VCAudioSessionMediaProperties property changed: vpOperatingMode=%u became vpOperatingMode=%u
 [%s] %s:%d %@(%p) VCAudioSessionMediaProperties property changed: vpOperatingMode=%u became vpOperatingMode=%u
 [%s] %s:%d VCAudioSessionMediaProperties property changed: inputFormat=%s became inputFormat=%s
 [%s] %s:%d %@(%p) VCAudioSessionMediaProperties property changed: inputFormat=%s became inputFormat=%s
 [%s] %s:%d VCAudioSessionMediaProperties property changed: outputFormat=%s became outputFormat=%s
 [%s] %s:%d %@(%p) VCAudioSessionMediaProperties property changed: outputFormat=%s became outputFormat=%s
 [%s] %s:%d IDS channel connected
 [%s] %s:%d IDS channel disconnected
 [%s] %s:%d Failed to update transport stream '%@'
 [%s] %s:%d VTP_SetSourceDestinationWithToken failed %x
 [%s] %s:%d Wsola Timeout: %lld > %lld!!!!!!!!
 [%s] %s:%d %.3f 
 [%s] %s:%d <%.3f Search Stop[%d]
 [%s] %s:%d Found match at position=%d star=%d candidate=%d
 [%s] %s:%d Candidate length=%d
 [%s] %s:%d Nin:%d < %d or %d
 [%s] %s:%d offset:%d Nwin:%d searchCenter:%d delta:%d
 [%s] %s:%d Nin:%d
 [%s] %s:%d ------- Wsola Search:%d ---------
 [%s] %s:%d Reference window centered at %d  [%d %d]
 [%s] %s:%d Searching around %d [%d %d]
 [%s] %s:%d Wrote output [%d %d]
 [%s] %s:%d lastIdx:%d refIdx:%d Nin:%d
 [%s] %s:%d Wsola search stopped:%d off:%d offNext:%d inStep:%d Nwrit:%d
 [%s] %s:%d Wsola output size: %d =========
 [%s] %s:%d Unsupported warp frame size
 [%s] %s:%d Failed to initialize the warp converters
 [%s] %s:%d Output buffer size %d is insufficient to hold data
 [%s] %s:%d Copied Output: %d
 [%s] %s:%d Forcing WSOLA, time since silence: %f, Adjust = %f, time since low adjust: %f
 [%s] %s:%d Failed to initialize the float converter
 [%s] %s:%d Failed to initialize the int converter
 [%s] %s:%d WSOLA WARP, scale = %f, in size = %u, out size = %u
 [%s] %s:%d Extracted WSOLA tail, size=%u
 [%s] %s:%d Invalid clientStreamMode=%d
 [%s] %s:%d %@ set. Setting _pixelFormat to 444f
 [%s] %s:%d [%@] set. Setting _pixelFormat to 444f 10-bit
 [%s] %s:%d %@ set. Setting _pixelFormat to 420f
 [%s] %s:%d /Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference.subproj/Sources/AVCMediaStreamConfig.m:%d: Unexpected pixel format type: %d
 [%s] %s:%d Unexpected codec type: %d
 [%s] %s:%d %@(%p) Unexpected codec type: %d
 [%s] %s:%d Invalid parameters passed to parseMediaLineHeader
 [%s] %s:%d Corrupted media line header
 [%s] %s:%d Failed to match the media line type
 [%s] %s:%d iceNewNominationBlock didn't exist
 [%s] %s:%d iceRemoveIPPortBlock didn't exist
 [%s] %s:%d Invalid parameters in callback
 [%s] %s:%d Invalid minQSize=%p or maxQSize=%p
 [%s] %s:%d Failed to allocate the JitterBuffer memory
 [%s] %s:%d Failed to initialize the lag processor
 [%s] %s:%d VCJitterBuffer[%p] Jitter buffer configured with minQSize=%f maxQSize=%f highStartQSize=%f highStartMode=%d targetPercentileToCover=%f shortTermWindowSize=%f longTermWindowSize=%f filterDRXBundleEnabled=%d minQSize5G=%f targetSynchronizer=%p spikeManagement=%d, skipDecodeOnSilence=%d
 [%s] %s:%d Failed to initialize the target estimator
 [%s] %s:%d Failed to allocate the JitterBuffer
 [%s] %s:%d Invalid JitterBuffer handle (nil)
 [%s] %s:%d Cleaning up JitterBuffer (0x%p)
 [%s] %s:%d Could not retrieve VCJitterBuffer
 [%s] %s:%d [%p] redAudioDelayInSamples:%d
 [%s] %s:%d [%p] state Reset dropping packet
 [%s] %s:%d [%p] Setting state Reset, jqRequested[%d] packetNewStream[%d]
 [%s] %s:%d [%p] JBState NEWSTREAM -> SETTLE
 [%s] %s:%d [%p] JBState[%d] payloadType[%d] bytes[%d] SeqNumber[%d]
 [%s] %s:%d [%p] Playback get samples
 [%s] %s:%d [%p] JBState[%d] sampleCount[%d] timestamp[%d] isSilence[%d] consecutiveSilenceCount[%d]
 [%s] %s:%d [%p] AWD Metrics: underflowRate[%f] frameErasureRate[%f] totalQueueSizeSamples[%d]
 [%s] %s:%d [%p] WRM Metrics: playbackCount[%d] playbackCountSpeech[%d] erasureCount[%d] erasureSilence[%d] nominalJitterBufferDelay[%llu] targetJitterQueueSize(Audio)[%llu]
 [%s] %s:%d [%p] VRDB Playback Metrics: avgLossRate[%f] lastAvgMissPercent[%f] averageJitter[%f] maxJitterForWindow[%f]
 [%s] %s:%d [%p] VRDB RED Playback Metrics: totalFrameErasureRate[%f] redErasureCompensationRate[%f] redAudioFramesPlayed[%d] redAudioBytesPlayed[%d] totalFramesPlayed[%d] totalSpeechErasureRate[%f] totalWindowedErasureRate[%f] maxConsecutiveAudioErasures[%d], totalErasureCount[%u]
 [%s] %s:%d [%p] VRDB Timescale Metrics: totalTimescaleCount=%d silenceTimescaleCount=%d speechTimescaleCount=%d expandTimescaleCount=%d compressTimescaleCount=%d totaltimescaleRate=%f silenceTimescaleRate=%f speechTimescaleRate=%f
 [%s] %s:%d isCellular[%d] localCellTech[%d] remoteCellTech[%d]
 [%s] %s:%d VCJitterBuffer[%p] Network Notification timestamp=%llu intermittentState=%u estimatedIntermittentPeriod=%u singleOutagePeriod=%u NWNotificationTarget=%f targetJBSize=%f
 [%s] %s:%d VCJitterBuffer[%p] Cellular Network Notification: timestamp=%llu radioAccessTechnology=%u outageState=%u estimatedOutagePeriod=%u signalQuality=%d dlBLER=%u cdrxCycleLength=%u targetJBSize=%f
 [%s] %s:%d VCJitterBuffer[%p] skipDecodeOnSilence=%d
 [%s] %s:%d JB Min Queue Size for 5G is overriden with server bag value %f
 [%s] %s:%d Configuring queue discard threshold=%f
 [%s] %s:%d [%p] Dequeue packet, is audio packet null:%d, state %d
 [%s] %s:%d [%p] JBState[%d] packetDequeue[%d]
 [%s] %s:%d Red frame inserted, updating time red frame was used. lastRedAudioArrivalTime=%f
 [%s] %s:%d Applying queue steering correction. jitterQueueOffset=%f
 [%s] %s:%d Overriding Desired QueueSize based on network notification
 [%s] %s:%d Red overhead is enabled. elapsedTimeSinceLastUsedRedFrame=%f, sharedRedAudioDelayInSamples=%d
 [%s] %s:%d Red overhead is disabled. elapsedTimeSinceLastUsedRedFrame=%f, sharedRedAudioDelayInSamples=%d
 [%s] %s:%d Please file a radar on AVConference Media | All. Average JB queue size is negative! Current size: %f, new size: %f, jitter samples: %d, total samples: %f
AVCAudioClient [%s] %s:%d Failed to initialize the session queue. processId=%d
@:@ AVAudioClient-initializeAudioSessionQ
AVCAudioClient [%s] %s:%d @:@ AVAudioClient-initializeAudioSessionQ (%p)
@:@ AVAudioClient-initSharedInstance
AVCAudioClient [%s] %s:%d @:@ AVAudioClient-initSharedInstance (%p)
@:@ AVAudioClient-init
AVCAudioClient [%s] %s:%d @:@ AVAudioClient-init (%p)
@:@ AVAudioClient-dealloc
AVCAudioClient [%s] %s:%d @:@ AVAudioClient-dealloc (%p)
AVCAudioClient [%s] %s:%d Not supported. processId=%d
AVCAudioClient [%s] %s:%d processId=%d
AVCAudioClient [%s] %s:%d ignoring, isMixingVoiceWithMediaEnabled already set to %d
AVCAudioClient [%s] %s:%d Invalid input device. inputDevice=%@ UID=%@
AVCAudioClient [%s] %s:%d Invalid output device. outputDevice=%@ UID=%@
AVCAudioClient [%s] %s:%d Invalid handler
AVCAudioClient [%s] %s:%d Muted talker handler is already registered. processId=%d
AVCAudioClient [%s] %s:%d Failed to register the muted talker notification block. processId=%d error=%@
AVCAudioClient [%s] %s:%d Muted talker handler is not registered. processId=%d
AVCAudioClient [%s] %s:%d Failed to unregister the muted talker notification block. processId=%d error=%@
AVCAudioClient [%s] %s:%d Notification received but handler is not registered processId=%d notificationType=%@
AVCAudioClient [%s] %s:%d MutedTalkerNotificationHandler Begin
AVCAudioClient [%s] %s:%d MutedTalkerNotificationHandler End
AVCAudioClient [%s] %s:%d Unknown notification type. processId=%d notificationType=%@
@:@ AVAudioClient-start
AVCAudioClient [%s] %s:%d @:@ AVAudioClient-start (%p)
@:@ AVAudioClient-startAudioSession
AVCAudioClient [%s] %s:%d @:@ AVAudioClient-startAudioSession (%p)
@:@ AVAudioClient-setAudioSessionProperties
AVCAudioClient [%s] %s:%d @:@ AVAudioClient-setAudioSessionProperties (%p) audioParams=%@
@:@ AVAudioClient-stop
AVCAudioClient [%s] %s:%d @:@ AVAudioClient-stop (%p)
@:@ AVAudioClient-resetAudioSessionOutputPortOverride
AVCAudioClient [%s] %s:%d @:@ AVAudioClient-resetAudioSessionOutputPortOverride (%p)
@:@ AVAudioClient-setMicrophoneMuted
AVCAudioClient [%s] %s:%d @:@ AVAudioClient-setMicrophoneMuted (%p) isMuted=%d
@:@ AVAudioClient-isMicrophoneMuted
AVCAudioClient [%s] %s:%d @:@ AVAudioClient-isMicrophoneMuted (%p)
@:@ AVAudioClient-setMixingVoiceWithMediaEnabled
AVCAudioClient [%s] %s:%d @:@ AVAudioClient-setMixingVoiceWithMediaEnabled (%p) isMixingVoiceWithMediaEnabled=%d
@:@ AVAudioClient-isMixingVoiceWithMediaEnabled
AVCAudioClient [%s] %s:%d @:@ AVAudioClient-isMixingVoiceWithMediaEnabled (%p)
@:@ AVAudioClient-currentInputDevice
AVCAudioClient [%s] %s:%d @:@ AVAudioClient-currentInputDevice (%p)
@:@ AVAudioClient-currentOutputDevice
AVCAudioClient [%s] %s:%d @:@ AVAudioClient-currentOutputDevice (%p)
@:@ AVAudioClient-setInputDevice
AVCAudioClient [%s] %s:%d @:@ AVAudioClient-setInputDevice (%p) inputDevice=%@
@:@ AVAudioClient-setOutputDevice
AVCAudioClient [%s] %s:%d @:@ AVAudioClient-setOutputDevice (%p) outputDevice=%@
@:@ AVAudioClient-setFollowSystemInputEnabled
AVCAudioClient [%s] %s:%d @:@ AVAudioClient-setFollowSystemInputEnabled (%p) enabled=%d
@:@ AVAudioClient-setFollowSystemOutputEnabled
AVCAudioClient [%s] %s:%d @:@ AVAudioClient-setFollowSystemOutputEnabled (%p) enabled=%d
@:@ AVAudioClient-registerForMutedTalkerNotifications
AVCAudioClient [%s] %s:%d @:@ AVAudioClient-registerForMutedTalkerNotifications (%p)
@:@ AVAudioClient-unregisterFromMutedTalkerNotifications
AVCAudioClient [%s] %s:%d @:@ AVAudioClient-unregisterFromMutedTalkerNotifications (%p)
@:@ AVAudioClient-registerSecureMicrophoneEngagedHandler
AVCAudioClient [%s] %s:%d @:@ AVAudioClient-registerSecureMicrophoneEngagedHandler (%p)
@:@ AVAudioClient-setChangeListener
AVCAudioClient [%s] %s:%d @:@ AVAudioClient-setChangeListener (%p)
AVCAudioClient [%s] %s:%d %s %s
}$"
VCMediaNegotiatorV2
VCMediaNegotiationBlobMultiwayVideoStream
NSCopying
VCAudioManager
VCAudioIOControllerControl
VCBasebandCodecNotifications
NSObject
VCAudioSessionDelegate
VCServerDelegate
AVCRateController
VCRateSharingClient
VCNWConnectionCongestionDetector
AVCRateControlFeedbackController
VCMediaNegotiatorBandwidthConfiguration
AVConferenceCallState
AVConference
Private
VCMediaNegotiationBlobV2VideoPayload
VCMediaNegotiatorBase
VCMediaNegotiatorProtocol
VCHardwareSettingsMac
VCHardwareSettingsMacProtocol
VCHardwareSettingsProtocol
VCAudioPowerSpectrum
VCAudioPowerSpectrumProtocol
AVCStatisticsCollector
VCVideoStreamOWRDLossEventRateControl
VCVideoStreamRateControlProtocol
VCMediaNegotiationBlobMultiwayAudioStream
GK_NSDictionaryDeepMutableCopy
GKNATObserver_SCContext
GKNATObserver
GKNATObserverInternal
VCAudioStreamReceiveGroup
VCAudioStreamGroup
VCAudioRelay
VCSessionConfiguration
VCVideoRuleCollectionsRemoteCameraEmbedded
VCAudioStreamCodecConfig
AVCRTCPPacket
AVCRTCPSenderReport
AVCRTCPReceiverReport
AVCRTCPSourceDescription
VCAudioPowerSpectrumSource
VCAudioIOSink
GKRingBuffer
NSDictionaryCopy_AVConference
IPPortWrapper
IPv6PrefixWrapper
GKSConnectivitySettings
VCRedundancyControlAlgorithmVideo
VCRedundancyControlAlgorithm
VCMediaNegotiatorMultiwayMediaStream
GKVoiceChatError
VCVideoStreamNOWRDLossEventRateControl
VCTransportSessionNW
VCAudioStreamGroupCommon
VCMediaCaptureController
VCAudioPowerSpectrumSourceDelegate
VCAudioIODelegate
GKInterfaceListener
VCRedundancyControlAlgorithmVideoIpadCompanion
VCMediaNegotiationBlobBandwidthSettings
VCRateControlUtil
ICEResultQuery
ICEResultWaitQueue
VCMomentsHistory
VCMomentsHistoryBufferDelegate
VCEmulatedNetworkAlgorithmQueueBandwidth
VCEmulatedNetworkAlgorithm
VCMediaNegotiatorResultsFaceTimeSettings
VCMediaNegotiationBlobMomentsSettings
VCRateControlAlgorithmSparseNOWRD
VCTextStream
VCTextSender
VCTextReceiverDelegate
LoopbackSocketTunnel
VCMediaNegotiationBlobAudioSettings
VCRateControlShareProfile
VCRateControllerManager
VCIDRSchedulerItem
VCRedundancyControllerVideo
VCRedundancyControllerProtocol
VCMediaKeyIndex
VCCryptoInfo
Encryption
VCEmulatedNetwork
VCVideoStreamTransmitter
VCCaptionsClientContext
VCCaptionsManagerStreamTokenClientList
VCCaptionsManager
VCCaptionsSourceDelegate
AVCEffects
VCSessionUplinkVideoStreamController
AVCPacketFilter
AVCPacketFilterRTP
VCAudioRuleCollection
VCPayloadUtils
VCAudioPowerSpectrumManager
VCAudioPowerSpectrumMeterDelegate
VCSessionParticipantAudioStreamConfig
VCDatagramChannelManager
VCSessionMediaStreamPresenceConfigurationProvider
VCDispatchTimer
VCAudioStream
VCMediaStreamSyncSource
VCTelephonyInterfaceDelegate
VCMediaStreamRateAdaptationDelegate
VCMediaNegotiationBlobV2
VCStreamIOAudioController
VCStreamOutputSource
AVCDaemonProcessInfo
VCCoreMotionManager
VCDatagramChannelIDS
VCStatsRecorder
VCMediaNegotiationBlobV2MomentsSettings
VCEmulatedNetworkDoubleQueue
VCRateControlOWRDEstimator
VCControlChannelMessageProtocol
VCAudioStreamSendGroupConfig
VCAudioStreamGroupConfig
VCDispatchQueue
VCEmulatedNetworkElement
VCMomentsHistoryBuffer
VCCellularAudioTapIO
VCMediaStreamSyncDestination
VCMediaStreamManager
VCMediaStreamDelegate
VCMediaNegotiatorStreamGroupStreamConfiguration
VCDaemonProcessInfoManager
VCMediaNegotiationBlobV2StreamGroup
VCVideoRule
VCVideoStreamRTTPLRRateControl
VCEmulatedPacket
VCConnectionLegacy
VCConnectionProtocol
Utils
VCMediaNegotiatorStreamGroupConfiguration
VCAudioUnitSpatialContext
VCImageRotationConverter
VCVideoStreamSendGroupConfig
VCControlChannelFaceTime
VCMediaNegotiatorResultsMoments
VCVideoSourceTokenManager
VCSystemAudioCaptureController
VCWifiAssistManager
VCMoments
VCMomentsMessenger
VCAudioRedBuilder
helper
SDPMini
SDPComposing
SDPParsing
mediaParameters
VCMediaNegotiatorLocalConfiguration
SenderLargeFrameInfo
VCRateControlMediaController
VCEmulatedNetworkAlgorithmQueueDelay
VCConnection
VCMediaNegotiatorStreamGroupU1Configuration
VCCaptionsTranscriptionSegment
NSCoding
NSSecureCoding
VCIDRScheduler
VCCaptionsTranscriptionBlob
VCConnectionManagerLegacy
VCRateControlAlgorithmLowLatencyNOWRD
VCImageConverterBase
AVCVideoFrame
VCConnectionSelector
VCControlChannelDialog
VCSessionManager
VCSessionDelegate
VCRateAdaptationDelegate
VCSessionUplinkBandwidthAllocatorMultiway
VCSessionUplinkBandwidthAllocator
VCSessionMediaNegotiator
VCDatagramChannelIDSEmulated
VCMediaControlInfoGenerator
VCMediaControlInfoDelegate
VCAudioPowerSpectrumMeter
VCMediaStreamReceiveGroup
VCQoSReportSource
VCQoSMonitorManager
VCMomentsClientContext
VCMomentsManagerStreamTokenClientList
VCMomentsManager
VCMomentsMessengerDelegate
VCMomentsCollector
VCMomentsCollectorDelegate
VCWRMHandler
AVCScreenCaptureConfiguration
VCAudioPowerLevelMonitor
VCVideoStreamReceiver
VCSessionParticipantRemote
VCSessionDownlinkBandwidthAllocatorClient
VCTransportSessionIDS
AVCCameraTestUtils
VCVideoReceiverBase
VCConnectionChangedHandler
VCMediaStreamGroupConfig
VCMovieWriterUtil
VCMediaNegotiationBlobVideoSettings
VCKeyedArchiverExtensions
VCStreamInputVideo
VCVideoStreamRateAdaptation
VCVideoRuleCollectionsScreenAirplayMac
VCAudioRelayIO
VCAudioIOSource
VCDisplayLink
VCStreamOutput
VCStreamSychronizationDelegate
VCRemoteVideoManagerStreamOutputDelegate
VCCaptionsTranscription
VCMediaStreamStats
VCSessionErrorUtils
AVCScreenCaptureTestDelegate
AVCScreenCaptureDelegate
VCImageMirroringConverter
VCMediaNegotiationBlobV2GeneralInfo
VCVideoReceiverDefault
VCStreamInputManager
VCStreamInputDelegate
VCConnectionManager
VCConnectionHealthMonitorDelegate
VCWifiAssistManagerDelegate
VCLinkProbingHandlerDelegate
VCCoreMotionManagerDelegate
VCVTPWrapper
VCRecommendedNetworkSettings
VCNetworkFeedbackController
WCMClientDelegate
WRMClientDelegate
VCAudioClient
VCAudioStreamSendGroup
VCRedundancyControllerDelegate
VCMediaNegotiatorResultsAudio
VideoUtil
VCVideoRuleCollectionsScreenSecondary
VCBasebandMetrics
AVCBasebandCongestionDetector
VCSessionBandwidthAllocationTableEntry
VCSessionUplinkBandwidthAllocatorOneToOne
VCCCMessage
TCPTunnelClient
VideoConferenceRealTimeChannel
TCPBufferPool
VCCallSession
VCSecureDataChannelDelegate
VCCaptionsReceiverDelegate
Callbacks
PrivateMethods
Messages
VCTransportSessionLegacyDelegate
AVCRateControllerDelegate
VCRateControlMediaControllerDelegate
VCCallLinkCongestionDetector
SessionDelegate
VCCapabilities
HandleWrapper
VideoConference
VCAudioPowerLevelMonitorDelegate
VCMomentTransportDelegate
AudioProcessing
SIPDispatch
SessionInfo
VCCallSessionDelegate
VideoProcessing
VCVideoSink
VCVideoCaptureClient
NATDelegate
GKNATObserverDelegate
VCRateControlAlgorithmBase
VCRateControlAlgorithm
VCCaptionsSegmentBlob
VCTransportSessionLegacy
LoopbackSocketTunnelDelegate
InterfaceListenerDelegate
VCConnectionManagerDelegate
VCAudioUnitProperties
VCTextReceiver
VCTextFrameReceiver
VideoConferenceManager
VideoConferenceDelegate
VCControlChannelMessageOptions
VCControlChannelTransaction
VCBTNotificationMonitor
VCMediaNegotiationBlob
VCRateControlAlgorithmTelephony
VCVideoTransmitterDefault
VCVideoReceiverFeedbackDelegate
VCRedundancyControlAlgorithmVideoMultiway
SDPMediaLine
VCSession
VCSessionParticipantStreamDelegate
RTCPReportProvider
VCSecurityEventHandler
VCSessionParticipantDelegate
VCNetworkFeedbackControllerDelegate
VCSessionStatsControllerDelegate
VCSessionParticipantLocalVideoStreamDelegate
AVCScreenCapture
VCAudioRelayIOControllerSettings
VCAudioRelayIOController
VCSystemAudioCaptureSession
VCMediaNegotiatorMultiwayVideoStream
VCCCMessageAcknowledgment
VCConnectionIDS
VideoAttributes
VCSessionParticipantVideoStreamConfig
VCAudioStreamGroupCommonConfig
VCRateControlAlgorithmStabilizedNOWRD
VCAudioRule
VCTextTransmitter
VCMediaNegotiatorMultiwayAudioStream
VCEmulatedNetworkDoubleQueueReorder
VCMediaNegotiationBlobV2SettingsU1
VCSessionParticipantLocal
VCIDSStreamIDGenerator
VCSessionUplinkBandwidthAllocatorClient
VCSessionBitrateArbiter
VCTransportSessionSocket
AVConferenceError
VCAudioIO
VCAudioIOControllerDelegate
VCStatisticsCollectorQueue
VCAudioCaptionsBufferInfo
VCAudioCaptionsBufferInfoCollection
VCPixelTransferSession
AVCStreamInput
VCVideoStreamRateAdaptationFeedbackOnly
VCEmulatedNetworkQueue
AVCCaptionsClient
VCScreenCaptureManager
VCStreamInput
VCStreamInputCaptureSourceDelegate
VCAudioIOControllerClient
AVAudioDevice
AVInternalDeviceList
AVAudioDeviceList
VCEmulatedNetworkAlgorithmQueueLoss
VCSessionParticipantOneToOneConfig
VCRedundancyControlAlgorithmAudioMultiWay
AVCSessionParticipant
AVCSessionParticipantControlProtocol
AVCStreamOutput
AVCMediaStreamNegotiatorSettings
AVCMediaStreamNegotiatorSettingsRemoteMic
AVCMediaStreamNegotiatorSettingsRemoteCamera
AVCMediaStreamNegotiatorSettingsiPadCompanion
AVCMediaStreamNegotiatorSettingsAirplayMirroring
AVCMediaStreamNegotiatorSettingsCoreDeviceSystemAudio
VCTransportSession
VCVideoTransmitterConfig
AVCQoSMonitor
VCVisualAlert
VCRemoteVideoState
VCRemoteVideoManager
VCRemoteVideoManagerDelegate
VCCellularAudioTap
AVCAudioPowerSpectrumChannel
VCPrivateAccess
VCNetworkSimulator
VCCaptionsUtilities
VCMediaNegotiationBlobCaptionsSettings
VCMediaStream
VCMediaStreamProtocol
VCVideoStreamReceiveGroupConfig
VCVideoRuleCollectionsMoments
VCVideoRuleCollectionsMomentsMac
VCVideoRuleCollectionsMomentsEmbeded
WRMClient
VCVideoRuleCollectionsScreenSecondaryMac
AVCCaptionsToken
AVCCaptionsResult
AVCCaptionsConfig
VCImageResizingConverter
VCHardwareSettingsEmbedded
VCHardwareSettingsEmbeddedProtocol
VCSwitchManager
VCVideoRuleCollectionsRemoteCamera
VCConnectionManagerIDS
VCIDRSchedulerStream
VCSessionMediaTypeSettings
VCMediaStreamSendGroupConfig
VCMediaStreamSendGroup
VCMediaNegotiationBlobV2CameraSettingsU1
VCMediaNegotiationBlobVideoPayloadSettings
XPCClientUser
AVConferenceXPCClient
VCVideoRuleCollectionsCameraMac
VCStreamOutputManager
VCSecurityKeyManager
VCMediaNegotiationBlobV2BandwidthSettings
VCMediaNegotiator
VCVideoCaptureConverter
VCStringUtils
VCConnectionHealthMonitor
VCSessionMediaStreamConfigurationProvider
VCPixelBufferOverlay
VCVideoRuleCollectionsRemoteCameraMac
VCVirtualTextDevice
VCMediaStreamTransport
VCXPCConnection
VCXPCServerUser
AVConferenceXPCServer
XPCManagement
VCMediaNegotiatorResultsCaptions
VCVideoRuleCollectionsCamera
VCMediaStreamMultiwayConfigVideo
VCVideoStreamConfig
VCMediaNegotiatorStreamGroupCodecConfiguration
VCXPCClientShared
VCEffects
AVCMediaStreamNegotiatorSettingsCoreDeviceScreenSharing
AVCTestMonitorReport
AVCTestMonitorInjectAudioConfig
AVCTestMonitor
BitrateLimits
VCAudioTierPicker
VCMediaNegotiatorResults
VCStreamInputAudio
VCVideoRuleCollectionsCameraEmbedded
VCMediaNegotiatorResultsVideo
VCControlChannelDialogV2
VCImageAttributeRules
VCVideoStreamRateController
VCControlChannelMultiWay
VCControlChannelTransactionDelegate
SnapshotTimer
VCPositionalInfo
VCTextJitterBuffer
VCVideoStreamReceiveGroup
VCPacketBundler
VCVideoQualityInfo
VCMediaNegotiatorAudioConfiguration
AVCAudioStream
VCNWConnectionCongestionDetectorBaseband
VCEmulatedNetworkSingleQueue
VCSessionDownlinkBandwidthAllocator
VCMockIDSDataChannelLinkContext
VCMockIDSDatagramChannel
VCMockIDSDatagramChannelController
VCMockIDSDatagramChannelSocket
VCNetworkAgent
AVConferencePreviewClientDelegate
AVConferencePreview
DTMFEventHandler
VCWiFiUtils
VCSessionParticipantConfig
VCDuplicationHandler
VCSecureDataChannel
VCIDSSessionInfoSynchronizer
VCSessionStatsController
AVCPacketRelaySocketConnection
AVCPacketRelayConnectionProtocol
AVCPacketRelayIDSConnection
AVCPacketRelayConnection
AVCPacketRelay
utils
AVCMediaStreamNegotiator
VCMediaStreamSynchronizer
VCMediaStreamSyncSourceDelegate
AVCTextStream
VCCCMessageWrapper
SuddenChangeParameters
VCRateControlBandwidthEstimator
VCRateControlBandwidthEstimatorMap
VCMediaNegotiationBlobV2StreamGroupPayload
VCRateControlServerBag
AVCAudioPowerSpectrumBin
VCMediaNegotiationBlobV2MicrophoneSettingsU1
VCAudioClientManager
VCTransportSessionProxy
VCVideoTransmitterBase
VCClientRelay
VCVideoFrameUtil
VideoRules
AudioRules
BandwidthSettings
MultiwayAudioStream
MultiwayVideoStream
MomentsSettings
FaceTimeSettings
VCVirtualTTYDevice
AVCMoments
VCNetworkAgentCell
VCMediaNegotiationBlobVideoRuleCollection
VCVideoRuleCollectionsScreenAirplayEmbedded
VCVideoRuleCollectionsScreen
NetworkUtils
VCVideoCapture
VCTransportSessionIDSMultiLink
VCIDSSessionInfoSynchronizerDelegate
VCMovieWriter
VCMovieWriterProtocol
WRMReporting
VCAudioStreamTransport
VCAudioPowerSpectrumBin
VCSystemAudioCapture
VCAudioPayload
VCVideoStream
VCVideoReceiverDelegate
VCMediaNegotiationBlobV2CodecFeatures
VCMediaStreamGroup
VCMediaStreamNotification
StateTransitions
VCAudioTier
VCSessionMessaging
VCControlChannelDelegate
VCNetworkAddress
VCMediaStreamMultiwayConfig
VCMediaStreamRateControlConfig
VCMediaStreamConfig
AVCVideoDataOutput
AVCStreamOutputDelegate
VCLinkProbingResult
VCVideoFeatureListStringHelper
OneToOne
SIPClientDataDictionary
VCSessionMessageTopic
VCRedundancyControlAlgorithmAudioLegacy
AVCAudioPowerSpectrum
VCLinkProbingHandler
VideoScaler
VCSessionParticipantMediaStreamInfo
VCCallInfo
VCCameraPreview
AVCAudioPowerSpectrumMeter
VCMediaStreamRateAdaptation
VCServerBag
VCRedundancyControlAlgorithmAudio
VCIDRSchedulerPeriodGroup
Messaging
VCAudioTransmitterConfig
AVCMomentsRequest
VCMediaStreamMultiwayConfigAudio
VCAudioStreamConfig
VCVideoStreamSendGroup
VCSessionUplinkVideoStreamControllerDelegate
VCMediaStreamSendSyncSourceDelegate
VCTestMonitorManager
VCCaptionsReceiver
VCImageRotationConverterBase
VCRedundancyControllerAudio
VCControlChannelDialogV1
VCCALayerHost
AVCRemoteVideoClient
VCBitrateRule
VCBitrateArbiter
AVCPacketRelayDriver
VCScreenShare
VCMediaNegotiationFaceTimeSettings
VCStatisticsHistory
LogDumpUtility
VCSessionPresentationInfo
AVCSessionConfiguration
VCVideoFrameBufferPool
Checkpoint
VCMediaNegotiationBlobV2StreamGroupStream
VCAudioTransmitter
VCCallInfoBlob
VCEmulatedOutputQueue
VCTelephonyInterface
AVCVirtualTTYDevice
VCAudioPayloadConfig
VCTransportStreamGFT
VCSessionBandwidthAllocationTableStreamInfo
VCSessionBandwidthAllocationTable
VCEffectsManager
VCDefaults
VCControlChannel
VCMediaControlInfo
VCMediaControlInfoIPCamera
VCMediaControlInfoFaceTimeAudio
VCMediaControlInfoFaceTimeVideo
VCMediaControlInfoMultiwayAudio
VCVideoRuleCollectionsScreenSecondaryEmbedded
VideoConferencing
AVCSession
AVCSessionParticipantDelegate
VCStreamInputCaptureSource
VCVideoCaptureServer
AVCVideoStream
VCAudioStreamReceiveGroupConfig
VCTextStreamConfig
VCObject
VCHardwareOperatingModeSettings
VCHardwareSettings
VCVideoRuleCollectionKey
VCVideoRuleCollections
VCSessionParticipant
VCMediaStreamGroupDelegate
VCAudioSessionMediaProperties
VCTransportSessionIDSSingleLink
AVCNetworkAddress
AVCMediaStreamConfig
AVCAudioStreamConfig
AVCVideoStreamConfig
AVCTextStreamConfig
VCWCMClient
SDPParser
VCTransport
VCVideoRuleCollectionsScreenAirplay
AVAudioClient
AVConferenceOperatingModeWithAVCMediaStreamMode:
RATType
AVConferenceServiceError:detailCode:description:
StringAsConfigurationExtension:
AVConferenceServiceError:detailedCode:returnCode:filePath:description:reason:
T@"<InterfaceListenerDelegate>"
AVConferenceXPCServerSingleton
T@"<VCRedundancyControllerProtocol>",&,N,V_redundancyController
CMTimeFromXPCDictionary:
T@"IDSDataChannelLinkContext",R
DataOnlyVCCapabilities
T@"NSArray",C,N,V_streamIDsCell
H264PacketizationMode
T@"NSArray",R,N
HTTPSCheckWithIPPort:ipv6Prefix:useCache:
T@"NSArray",R,N,V_streamConfigs
IPPortForNWConnection:
T@"NSMutableArray",R,N,V_meters
JSONObjectWithData:options:error:
T@"NSObject<OS_dispatch_queue>",R,N,V_delegateNotificationQueue
NATTypeDictionaryUpdated:
T@"NSObject<VideoConferenceSpeakingDelegate>",VspeakingDelegate
NTPLeastSignificantWord
T@"NSString",&,N,V_profileLevel
OSVersion
T@"NSString",C,N,VparticipantID
QRSessionID
T@"VCAudioTier",R,V_defaultTier
SDPUsername
T@"VCMediaNegotiationBlobMomentsSettings",&,N,V_momentsSettings
SIPHandle
T@"VCMediaNegotiatorResultsVideo",R,N,V_negotiatedVideoSettings
SRTPCipherSuiteForVCMediaStreamCipherSuite:
T@"VCSystemAudioCaptureSession",&,N,V_systemAudioCaptureSession
StringAsConfiguration:
T@?,C,N
StringAsOperation:
T@?,C,V_handler
T#,R
TB,N,GisDTXEnabled,V_dtxEnabled
T(tagNTP=Q{?=II}),N,V_remoteBlobCreationTime
TB,N,GisRedEnabled,V_redEnabled
T(tagNTP=Q{?=II}),R,N,V_creationTime
TB,N,SsetPreferRelayOverP2PEnabled:,V_preferRelayOverP2PEnabled
T@"<AVCAudioPowerSpectrumMeterDelegate>",R,N,V_delegate
TB,N,V_includeRedSequenceOffset
T@"<AVCCaptionsClientDelegate>",R
TB,N,V_isPaused
T@"<AVCMomentsDelegate>",R,N,V_delegate
TB,N,V_remoteCanDisplayCaptions
T@"<AVCPacketRelayDelegate>",N,V_delegate
TB,N,V_targetBitrateIsAudioOnly
T@"<AVCScreenCaptureDelegate>",R,N,V_delegate
TB,N,VsupportsDynamicMaxBitrate
T@"<AVCSessionParticipantDelegate>",N
TB,R,N,V_isFull
T@"<AVCTextStreamDelegate>",N,V_delegate
TB,R,N,V_isRemoteCodecInfoValid
T@"<AVCVideoStreamDelegate>",N,V_delegate
TB,R,N,V_vcpSupportsHEVCEncoder
T@"<RTCPReportProvider>",N
TC,N,Vu8Version
T@"<VCAudioTransmitterDelegate>"
TI,N,V_localBandwidthEstimation
T@"<VCCaptionsReceiverDelegate>",R,V_delegate
TI,N,V_metadata
T@"<VCConnectionHealthMonitorDelegate>",V_delegate
TI,N,V_redundancyControllerMode
T@"<VCConnectionProtocol>",&,N,V_connectionForDuplication
TI,N,V_switches
T@"<VCConnectionProtocol>",&,N,V_currentActiveConnection
TI,R,N,V_basebandAverageBitrate
T@"<VCConnectionProtocol>",&,N,V_pendingPrimaryConnection
TI,R,N,V_screenCaptureDisplayID
T@"<VCConnectionProtocol>",&,N,V_primaryConnection
TI,R,V_streamID
T@"<VCConnectionProtocol>",&,N,V_secondaryConnection
TS,N,V_streamID
T@"<VCLinkProbingHandlerDelegate>"
T@"<VCMediaCaptureController>",N
T^v,R,N
T@"<VCMediaStreamDelegate>",N
T^{__CVBuffer=},N,V_pixelBuffer
T@"<VCMediaStreamNotification>",N
T^{tagHANDLE=i},R,N,V_rtpHandle
T@"<VCMomentsCollectorDelegate>",N,V_momentsCollectorDelegate
Td,N,VstartTime
T@"<VCMomentsMessengerDelegate>",N,V_delegate
Tf,N,V_priority
T@"<VCRemoteVideoManagerStreamOutputDelegate>",N,V_streamOutputDelegate
Tf,R,N,V_volume
T@"<VCServerDelegate>",N,V_delegate
Ti,R,N,V_height
T@"<VCSessionDownlinkBandwidthAllocatorClient>",R,V_client
Ti,V_deviceRole
T@"<VCSessionParticipantLocalVideoStreamDelegate>",N,V_videoStreamDelegate
T{VoiceIOFarEndVersionInfo=[64C][64C]I},R,N,V_farEndVersionInfo
T@"<VCSessionUplinkBandwidthAllocatorClient>",R,V_uplinkClient
_activeStreamID
T@"<VCTelephonyInterfaceDelegate>"
_addCarrierFlag
T@"<VCTransportSessionLegacyDelegate>"
_allPayloadsLocalFeaturesString
T@"<VCVideoReceiverFeedbackDelegate>",N,GgetVideoReceiverFeedbackDelegate
_allowRequestForWRMNotification
T@"<WRMClientDelegate>"
_allowSwitching
T@"AVAudioDevice",&,V_inputDevice
_alwaysOnAudioRedundancyEnabled
T@"AVAudioDevice",R,N
_audioMediaControlInfoGenerator
T@"AVCAudioStreamConfig",&,N,V_audio
_audioSessionId
T@"AVCMediaStreamConfig",&,N,V_configuration
_audioUnitModel
T@"AVCNetworkAddress",&,N,V_remoteAddress
_avConferenceScreenCaptureQueue
T@"AVCPacketFilter",&,V_packetFilter
_basebandNormalizedQueuingDelay
T@"AVCRateControlFeedbackController",&,N,V_feedbackController
_bitrateArbiter
T@"AVCSessionConfiguration",&,N,V_configuration
_budgetConsumingCellularRxBytes
T@"AVCStatisticsCollector",&,N,V_statisticsCollector
_buffer
T@"AVCTextStreamConfig",&,N,V_text
_bundlingScheme
T@"CALayer",&,VnetworkQualityGraphLayer_
_callID
T@"GKRingBuffer",&,N,VringBuf
_capLTE
T@"NSArray",&,N,V_payloadPreference
_checkTCPAndSSL
T@"NSArray",&,N,V_supportedBandwidths
_client
T@"NSArray",&,N,V_supportedNumRedundantPayload
_codecs
T@"NSArray",&,N,V_videoParameterSet
_config
T@"NSArray",&,V_connections
_controlChannel
T@"NSArray",C,N,V_peerSubscribedStreams
_controlInfoFEC
T@"NSArray",C,V_compoundStreamIDs
_controlInfoMKI
T@"NSArray",R,N,V_attributes
_conversationID
T@"NSArray",R,N,V_bins
_currentMsgType
T@"NSArray",R,N,V_clientContextList
_currentScreenEncoderGroupCount
T@"NSArray",R,N,V_fecLevelPerFrameSizeVector
_currentlyReadingDataGoalLength
T@"NSArray",R,N,V_mediaStreams
_destroyHandler
T@"NSArray",R,N,V_payloads
_dtmfSampleRate
T@"NSArray",R,N,V_rules
_effectsApplied
T@"NSArray",R,N,V_segments
_encoderGroupID
T@"NSArray",R,N,V_subStreamConfigs
_featureStrings
T@"NSArray",R,N,V_supportedBitrates
_forceFramerate
T@"NSArray",R,N,V_transportArray
_format
T@"NSArray",R,N,Vlimits
_frameFormatMic
T@"NSData",&,N
_generatedSSRCs
T@"NSData",&,N,V_packedPayload
_headerFullOnly
T@"NSData",&,N,V_payload
_highFecEnabled
T@"NSData",&,N,V_remoteRelayConnectionData
_idsDestination
T@"NSData",&,N,V_sendMediaKey
_inVideoBitrate
T@"NSData",&,N,VtokenData
_inputAvailable
T@"NSData",&,V_imageData
T@"NSData",&,V_localRelayConnectionData
_isAudioSending
T@"NSData",&,VsrtpKeyBytes
_isChannelBound
T@"NSData",R,N
_isFull
T@"NSData",R,N,V_frequencyLevels
_isIdle
T@"NSData",R,N,V_opaqueData
_isInterrupting
T@"NSDate",C,N,V_conversationTimeBase
_isMachineNewerThanSandybridge:
T@"NSDictionary",&,N,V_capabilities
_isOWRDConstant
T@"NSDictionary",&,N,V_localRelayUpdate
_isRelayRunning
T@"NSDictionary",&,N,V_parameterSets
_isSourceTimestampInfoAvailable
T@"NSDictionary",&,N,V_videoFeatureStrings
_isVideoStarted
T@"NSDictionary",&,N,VfeatureListDict
_lastDroppedFromImageQueueCount
T@"NSDictionary",N,V_colorInfo
_lastNoVoiceActivityPacketCount
T@"NSDictionary",R,N
_lastRampUpTime
T@"NSDictionary",R,N,V_audioVideoBitrateToStreamIDsTable
_lastReportingCallbackTimeShort
T@"NSDictionary",R,N,V_customFeatureListStrings
_lastUpdateTime
T@"NSDictionary",R,N,V_participantStreamTokens
_localAlertInfo
T@"NSDictionary",R,N,V_rxPayloadMap
_localLanguages
T@"NSDictionary",R,N,V_txCodecFeatureListStrings
_locale
T@"NSDictionary",R,N,V_videoOnlyBitrateToStreamIDsTable
_mapKey
T@"NSDictionary",R,V_rules
_maxAllowedRedundancyPercentage
T@"NSLocale",&,N,V_locale
_maxAllowedScreenShareBitrate3G
T@"NSMutableArray",&,N,V_bandwidthSettings
_maxBitrateNonExpensiveDownlink
T@"NSMutableArray",&,N,V_multiwayVideoStreams
_maxPacketCount
T@"NSMutableArray",&,N,V_segments
_memoryPoolSize
T@"NSMutableArray",&,N,V_streams
_meters
T@"NSMutableArray",&,N,V_videoRuleCollections
_mismatchedLandscapeAspectRatio
T@"NSMutableArray",R,N,V_moitors
_moreThanOneConnectionAvailable
T@"NSMutableArray",R,N,VsecondaryAudioPayloads
_mutedTalkerNotificationHandler
T@"NSMutableArray",R,VvcList
_networkPayload
T@"NSMutableDictionary",&,N,V_remoteParticipantsMapByServerID
_nextWakeUpTime
T@"NSMutableDictionary",&,N,V_sessionDict
_nwConnectionCongestionDetector
T@"NSMutableDictionary",&,V_optInDictionary
_oneToOneConfig
T@"NSMutableDictionary",R,N,V_participantsToAdd
_outputAudioPowerSpectrumSource
T@"NSMutableDictionary",R,N,V_registeredUUIDServiceBlocks
_packetLossRate
T@"NSMutableDictionary",R,N,V_sessions
_parentStreamID
T@"NSMutableDictionary",R,VregisteredBlocks
_paused
T@"NSMutableOrderedSet",&,N,V_multiwayVideoStreams
_pidReceiveProc
T@"NSNumber",&,N,V_activeStreamID
_primaryPayload
T@"NSNumber",&,N,V_targetStreamID
_rampDownStatus
T@"NSNumber",&,N,VanswerBandwidth
_rateAdaptation
T@"NSNumber",&,N,VaudioRTPPort
_receiverReport
T@"NSNumber",&,N,VbasebandCodecSampleRate
_recommendedMTU
T@"NSNumber",R,&
_redPayloadType
T@"NSNumber",R,N,V_deviceID
_redundancyMode
T@"NSNumber",R,N,V_sendingStreamID
_remoteSwitches
T@"NSNumber",R,V_expMovMeanRTT
_reportNATQueue
T@"NSNumber",R,V_plrTier
_reportingDefaultRealtimePeriod
T@"NSObject",&,N,V_connectionSetupPiggybackBlob
_resetRemoteAudioPacketReceived
T@"NSObject<AVCMomentsRequestDelegate>",N,V_delegate
_resize
T@"NSObject<AVConferencePreviewClientDelegate>",&,N,Vdelegate
_rtcpRemotePort
T@"NSObject<NSCopying>",&,N,V_reportingHierarchyToken
_schedulerItems
T@"NSObject<OS_dispatch_queue>",&,N
_screenSubLayer
T@"NSObject<OS_dispatch_queue>",&,N,V_internalReceiverQueue
_selectedMediaEntriesForClients
T@"NSObject<OS_dispatch_queue>",N
_sendSuccessCountSinceLastCheck
T@"NSObject<OS_dispatch_queue>",R,N,V_handlerQueue
_sentFrameCount
T@"NSObject<OS_dispatch_queue>",R,V_xpcQueue
_serializedSize
T@"NSObject<OS_dispatch_source>",R,V_periodicHealthPrintDispatchSource
_sharingEnabled
T@"NSObject<OS_nw_activity>",N,SsetParentNWActivity:,V_parentNWActivity
_sinkArrayMutex
T@"NSObject<OS_xpc_object>",R,Vconnection
_socket
T@"NSObject<VCAudioPowerLevelMonitorDelegate>",N,Vdelegate
_sourceDelegate
T@"NSObject<VCMediaStreamDelegate>",N
_speakerContext
T@"NSObject<VCMediaStreamSyncSourceDelegate>",N,VsyncSourceDelegate
_statsCollector
T@"NSObject<VCVideoCaptureServer>",R
_stillImageTime
T@"NSObject<VideoConferenceDelegate>",N
_stream
T@"NSOrderedSet",R,N,V_streamConfigs
_streamGroupIDs
T@"NSSet",&,N,V_bandwidthConfigurations
_streamToResume
T@"NSSet",&,N,V_captionsSenderLanguages
_strongDelegate
T@"NSSet",&,N,V_localLanguages
_sumWorstRecentRTTInMillisecond
T@"NSSet",&,N,V_momentsVideoCodecs
_switchFromGFTToOneToOneEnabled
T@"NSSet",&,N,V_supportedAudioPayloads
_targetStreamID
T@"NSSet",R,N,V_audioPayloadTypes
_timestampQueue
T@"NSSet",R,N,V_bandwidthConfigurations
_totalBandwidth
T@"NSSet",R,N,V_payloads
_transportArray
T@"NSSet",R,N,V_pixelFormats
_tunnel
T@"NSSet",R,N,V_streamGroupConfigurations
_useRateControl
T@"NSSet",R,N,V_videoPayloadTypes
_vcStreamOutput
T@"NSString",&,N,V_basebandCodec
_videoMediaControlInfoGenerator
T@"NSString",&,N,V_deviceType
_videoStreamConfigurationsCount
T@"NSString",&,N,V_featureString
_volume
T@"NSString",&,N,V_idsDestination
_vtpDestination
T@"NSString",&,N,V_logPrefix
_writer
T@"NSString",&,N,V_participantId
_wrmRequestNotificationCallback
T@"NSString",&,N,V_remoteBasebandCodec
addCodecConfig:
T@"NSString",&,N,V_remoteUserAgent
addParticipant:
T@"NSString",&,N,V_selectiveScreenUUID
addToSentStats:
T@"NSString",&,N,V_sessionUUID
allKeys
T@"NSString",&,N,V_topic
allowConcurrent
T@"NSString",&,N,V_userAgent
appendCodecFeaturesToMediaBlob:
T@"NSString",&,N,Vorigin
applyControllerFormatToClients:
T@"NSString",&,N,VsessionIP
applyNegotiatedFaceTimeSettings
T@"NSString",C,N,V_connectionTypeString
arrayHasObject:withPayloadType:
T@"NSString",C,N,V_deviceType
assign:
T@"NSString",C,N,V_interfaceName
audioIO
T@"NSString",C,N,V_localInterfaceType
audioStreamMode
T@"NSString",C,N,V_relayConnectionID
audioUnitNumber
T@"NSString",C,N,V_selectiveScreenUUID
awdTime
T@"NSString",C,N,VbasebandCodecType
basePeriodCount
T@"NSString",C,N,Vip
builtinMicCount
T@"NSString",C,N,VpeerReportingID
cString
T@"NSString",C,V_localParticipantID
cameraSwitching
T@"NSString",C,V_remoteParticipantID
cancel:
T@"NSString",N,V_audioFileName
capWifi
T@"NSString",R,C
captionsEnabled
T@"NSString",R,N,V_UID
captureSourceID
T@"NSString",R,N,V_featureListStringH264
checkAndUpdatePrimaryConnection
T@"NSString",R,N,V_fieldName
checkStreamsForAdditionalOptIn:
T@"NSString",R,N,V_idsDestination
cleanUpVideoRTP
T@"NSString",R,N,V_requesteeID
cleanupDelegate
T@"NSString",R,N,V_text
cleanupSession:didRemoteCancel:
T@"NSString",R,N,V_uuid
clientStreamModeWithStreamMode:
T@"NSString",R,V_destination
codecSampleRate
T@"NSURL",&,N
collectVideoStreamStartMetrics:
T@"NSUUID",R
configToString:
T@"TimingCollection",&,N,V_perfTimings
connect
T@"VCAudioIO",&,N,V_audioIO
connectionQueue
T@"VCAudioIO",R,V_audioIO
containsString:
T@"VCAudioPayload",&,N,V_chosenAudioPayload
context
T@"VCAudioPayloadConfig",R,N
copyProcessInfo
T@"VCAudioPayloadConfig",R,VpayloadConfig
createAudioConvertersWithError:
T@"VCAudioRelayIO",C,N,V_clientIO
createNWMonitor
T@"VCAudioRuleCollection",&,N,V_audioRules
createUplinkBandwidthAllocators
T@"VCAudioRuleCollection",R,N,V_supportedAudioRules
currentCalendar
T@"VCAudioStreamGroupCommon",R,V_common
datagramChannel
T@"VCAudioStreamGroupCommonConfig",&,V_audioStreamGroupConfig
dealloc
T@"VCAudioTierPicker",&,N,V_audioTierPicker
deleteTCPTunnel
T@"VCAudioUnitProperties",&,N,V_currentAudioUnitProperties
deregisterCallbacksWithContext:
T@"VCCCMessage",&,N,V_message
dialogs
T@"VCCallInfoBlob",R,V_callInfoBlob
didGetSnapshot:
T@"VCCapabilities",&,N,V_capabilities
didReceiveText:
T@"VCConnectionHealthMonitor",&,N,V_connectionHealthMonitor
didSessionPause
T@"VCConnectionManager",&,VconnectionManager
didStartPreview
T@"VCDatagramChannelIDS",R,V_datagramChannel
didStopStreamInputCaptureSource
T@"VCIDSSessionInfoSynchronizer",R,N,V_sessionInfoSynchronizer
dispatchedSetRemoteVideoPaused:
T@"VCImageAttributeRules",&,N,VimageAttributeRules
dispatchedUpdateProbingResults:
T@"VCMediaNegotiationBlobCaptionsSettings",&,N,V_captionsSettings
displayLinkWithTarget:selector:
T@"VCMediaNegotiationBlobV2CameraSettingsU1",&,N,V_cameraU1
dtmfPayloadType
T@"VCMediaNegotiationBlobV2GeneralInfo",&,N,V_generalInfo
effectsMetadata
T@"VCMediaNegotiationBlobV2MomentsSettings",&,N,V_momentsSettings
enableCaptions:
T@"VCMediaNegotiationBlobVideoSettings",&,N,V_screenSettings
endRTPTimeStamp
T@"VCMediaNegotiationFaceTimeSettings",&,N,V_faceTimeSettings
expectedBitrate
T@"VCMediaNegotiatorAudioConfiguration",&,N,V_systemAudioConfiguration
fecMode
T@"VCMediaNegotiatorLocalConfiguration",R,N
forceWifiAssist
T@"VCMediaNegotiatorResults",R,N
formats
T@"VCMediaNegotiatorResultsAudio",R,N
frequencyLevels
T@"VCMediaNegotiatorResultsFaceTimeSettings",R,N
getCachedIPPort
T@"VCMediaNegotiatorResultsMoments",R,N
getConnectionTypeForStreamMode:
T@"VCMediaNegotiatorResultsVideo",R,N
getIsSendingAudio:callID:error:
T@"VCMediaNegotiatorStreamGroupU1Configuration",&,N,V_u1Config
handleCodecModeChangeEvent:didUpdateBandwidth:didUpdateBitrate:
T@"VCMediaStreamConfig",R,N
handleLinkDisconnectedWithInfo:
T@"VCMediaStreamMultiwayConfig",&,N,V_multiwayConfig
handlePrimaryConnectionChanged:
T@"VCMediaStreamTransport",R,N
hasCapabilities
T@"VCMoments",R,N,V_vcMoments
hasEncoderUsage
T@"VCNetworkAddress",&,N,V_localAddress
hasLinkProbingCapabilityVersion
T@"VCPacketBundler",R,N,V_audioBundler
hasParameterSet
T@"VCRateControlMediaController",&,N
hasQualityIndex
T@"VCRateControlServerBag",&,N,V_serverBag
hasVideoPayload
T@"VCSessionMediaNegotiator",&,N,V_mediaNegotiator
iHeight
T@"VCSessionMessaging",&,N,V_sessionMessaging
idsUPlusOneMode
T@"VCSessionParticipantMediaStreamInfo",R,N
initWithCallID:
T@"VCSessionParticipantRemote",R,N
initWithConfig:
T@"VCSessionUplinkVideoStreamController",&,N,V_uplinkVideoStreamController
initWithDouble:
T@"VCStreamOutput",&
initWithFormat:
T@"VCTransportSession",R,N,V_transportSession
initWithMode:error:streamToken:
T@"VCVideoRule",R,N,VconferenceCaptureRule
initWithObject:
T@"VCVideoRuleCollections",&,N,V_screenRuleCollections
initWithRelevantStorebagEntries
T@"VCVideoRuleCollections",R,N
initWithString:
T@"VCVideoRuleCollections",R,N,V_videoRuleCollections
initializeServerSideInputStream
T@"VCXPCClientShared",&,N
inputSampleRate
T@"VideoAttributes",&,N,V_remoteScreenAttributes
internalSampleRateForCodecType:
T@"VideoAttributes",&,N,VremoteVideoAttributes
ipportToString:
T@"VideoAttributes",&,V_remoteVideoAttributes
isBuiltInDevice
T@"VideoConference"
isEqualBandwidthConfigurations:
T@,N
isFinal
T@,R
isHistoryImproved:currentIndex:
T@?,C
isInputFrequencyMeteringEnabled
T@?,C,N,V_eventHandler
isLocal
T@?,C,N,V_peerSubscribedStreamCallback
isLowestQuality
T@?,C,N,V_processCompleteHandler
isOctectAligned
T@?,C,V_allocationResponseHandler
isQueryAnswered
T@?,C,V_destroyHandler
isRTCPXREnabled
T@?,C,V_readHandler
isRelay
T@?,C,V_terminationHandler
isRemoteOnPeace
T@?,R,N,V_callbackBlock
isScreenConfig:
TB,GisPersistent
isSendingMedia:
TB,GisSubscribedTo,V_subscribedTo
isStartOnDemand
TB,N
isTransportIPv6
TB,N,GisAudioEnabled,V_audioEnabled
isValidContext:
TB,N,GisAudioPaused
isVideoExpected
TB,N,GisAudioPaused,V_audioPaused
lastSRTimestamp
TB,N,GisCNEnabled,V_cnEnabled
layoutSublayers
TB,N,GisDTMF,V_dtmf
localFrameWidth
TB,N,GisDecryptionTimeoutEnabled
lookupCachedNATFlagsForNetwork:
TB,N,GisFollowSystemOutputEnabled,V_followSystemOutput
manager
TB,N,GisInputFrequencyMeteringEnabled
maxMediaBitrate
TB,N,GisInputMeteringEnabled,V_isInputMeteringEnabled
maxPacketLength
TB,N,GisLatencySensitiveMode,V_latencySensitiveMode
mediaNegotiator
TB,N,GisLocalOnWiFi,V_localOnWiFi
microphoneGroup
TB,N,GisMicrophoneMuted,V_isMicrophoneMuted
minSamplesCount
TB,N,GisMixingVoiceWithMediaEnabled
moments
TB,N,GisMixingVoiceWithMediaEnabled,V_mixingVoiceWithMediaEnabled
momentsDelegate
TB,N,GisOctectAligned,V_octetAligned
multiwayToOneToOneSwitchSuspend
TB,N,GisOneToOneEnabled
natType
TB,N,GisOneToOneModeEnabled,V_oneToOneModeEnabled
negotiatedVideoSettingsForGroupID:localU1Config:remoteU1Config:
TB,N,GisOutputFrequencyMeteringEnabled
negotiationData
TB,N,GisPaused
network
TB,N,GisRTCPEnabled
newImageTypeSet
TB,N,GisRTCPTimeOutEnabled
newPackedMessageFromDictionary:
TB,N,GisRTCPTimeoutEnabled
notifyCodecModeChangeEvent:didUpdateBandwidth:didUpdateBitrate:
TB,N,GisRTPTimeOutEnabled
ntpTime
TB,N,GisRTPTimeoutEnabled
numberWithChar:
TB,N,GisRedundancyEnabled
onCallIDChanged
TB,N,GisRemoteAudioEnabled,V_remoteAudioEnabled
oneToOneEnabled
TB,N,GisRemoteMuted
optInDictionary
TB,N,GisRemoteScreenEnabled,V_remoteScreenEnabled
optedInStreamID
TB,N,GisRemoteVideoPaused,V_remoteVideoPaused
outMessageQueue
TB,N,GisScreenEnabled,V_screenEnabled
packetDropCount
TB,N,GisSpeakerPhoneEnabled,V_isSpeakerPhoneEnabled
parseBandwidth:
TB,N,GisVideoEnabled
participantData
TB,N,GisVideoPaused
payload
TB,N,GisVideoPaused,V_videoPaused
peerReportingID
TB,N,SsetCurrentDTXEnabled:,V_isCurrentDTXEnabled
plrTier
TB,N,SsetMuted:,V_isMuted
preferredDevice
TB,N,SsetiRATDuplicationEnabled:,V_iRATDuplicationEnabled
primaryConnectionChanged:oldPrimaryConnection:activeConnection:
TB,N,V_H264PacketizationMode
processOptions:
TB,N,V_allowAudioRecording
processVideoRTP
TB,N,V_allowDynamicMaxBitrate
qualityDelegate
TB,N,V_allowRTCPFB
queryProbingResultsWithOptions:
TB,N,V_allowSwitching
readUint32FromConfig:key:value:
TB,N,V_allowsContentsChangeWithAspectPreservation
receiveDelegate
TB,N,V_alwaysOnAudioRedundancyEnabled
redMaxDelay20ms
TB,N,V_audioDumpEnabled
relaySessionKey
TB,N,V_audioIssueDetectorEnabled
release
TB,N,V_audioPaused
releaseSession:
TB,N,V_cellularAllowRedLowBitratesEnabled
remoteCodecType
TB,N,V_didMBLRampDown
remoteLanguages
TB,N,V_didReceiveVideo
remoteParticipantsMapByServerID
TB,N,V_duplicateImportantPktsEnabled
remoteUserAgent
TB,N,V_effectsApplied
removeDelegate:
TB,N,V_enableAudioPowerSpectrumReport
reportImmediateWRMMetric:value:
TB,N,V_enableDNNVAD
reportingAlgosAudioStreamEvent:
TB,N,V_enableMaxBitrateOnNoChangeCMR
requireReliable
TB,N,V_enableVADFiltering
reservedBitrate
TB,N,V_evsHeaderFullOnly
resetPerfTimers
TB,N,V_fastMediaDuplicationEnabled
restart
TB,N,V_fecHeaderV1Enabled
rtcpPSFBForLTRAckStoreBagConfig
TB,N,V_forceFullBandwidth
rtpPort
TB,N,V_hasPendingChanges
rtpSampleRateWithStreamGroupID:
TB,N,V_hasReceivedLastFrame
samplesPerBlock
TB,N,V_hasSpaceAfter
TB,N,V_iRATRtpEnabled
screenDisplayID
TB,N,V_ignoreSilence
selectPreferredRule:screenSize:
TB,N,V_isAudioOnly
sendReliableMessage:withTopic:participantID:timeout:completion:
TB,N,V_isDefaultMode
sendingStreamID
TB,N,V_isDroppedByAQM
serviceHandlerStreamOutputSetTimeSyncOffsetWithArguments:error:
TB,N,V_isEndToEndBasedBandwidthProbingEnabled
session:withCallID:networkHint:
TB,N,V_isFecGeneratorEnabled
sessionInfoSynchronizerDelegate
TB,N,V_isFinal
setARPLHandler:
TB,N,V_isGKVoiceChat
setAllowsRelay:
TB,N,V_isInCanvas
setArrivalTime:
TB,N,V_isLocal
setBlobVersion:
TB,N,V_isLost
setCellularMTU:
TB,N,V_isLowLatencyAudio
setConnections:
TB,N,V_isMuted
setCustomWidth:
TB,N,V_isOneToOne
setDefaultLink:
TB,N,V_isOneToOneRemoteMediaStalling
setDynamicVideoPriorityEnabled:
TB,N,V_isOpusInBandFecEnabled
setEffectsMode:
TB,N,V_isRTCPForLossFeedbackEnabled
setFormatsExt1:
TB,N,V_isRateLimitedMaxTimeExceeded
setHMediaQueue:
TB,N,V_isRemoteAudioPaused
setHasPayloads:
TB,N,V_isRemoteMediaStalled
setHasSwitches:
TB,N,V_isSenderProbingEnabled
setInputDevice:
TB,N,V_isServerPacketRetransmissionEnabled
setIsAudioOnly:
TB,N,V_isStalled
setIsPreLionOS:
TB,N,V_isSubstream
setIsSubstream:
TB,N,V_isSuspended
setIsSuspended:
TB,N,V_isTemporalStream
setLatencySensitiveModeEnabled:
TB,N,V_isVariableSliceModeEnabled
setLocalOnWiFi:
TB,N,V_isVideoPaused
setMediaStates:
TB,N,V_isVideoQualityNearDegraded
setMicPowerRMS:
TB,N,V_isVisible
setNeedsDisplay
TB,N,V_lowFpsVideoEnabled
setNumberStyle:
TB,N,V_needsPacketThread
setOrientation:
TB,N,V_negotiatedVideoEnabled
setPause:withCompletionHandler:
TB,N,V_oneToOneModeSupported
setPendingVideoStreamsInternal:
TB,N,V_rampDownBWDropEnabled
setPid:
TB,N,V_remoteFaceTimeSwitchesAvailable
setPixelFormat:
TB,N,V_remoteScreenEnabled
setReadHandler:
TB,N,V_resetSendRTPTimestampOnStop
setRemoteMuted:
TB,N,V_rtcpPSFB_LTRAckEnabled
setRtcpEnabled:
TB,N,V_rtcpRTPFB_GNACKEnabled
setSIPDisabled:
TB,N,V_screenEnabled
setScreenToken:
TB,N,V_sendActiveVoiceOnly
setServiceName:
TB,N,V_shouldApplyRedAsBoolean
setSessionMode:
TB,N,V_shouldCreateRedundancyController
setShouldDisplayVideoInfoLayer:
TB,N,V_shouldDisplayVideoInfoLayer
setStreamCount:
TB,N,V_shouldEnableMLEnhance
setStreamIndex:
TB,N,V_shouldRegisterMediaControlInfoGeneratorCallbacks
setSuspendAudio
TB,N,V_shouldSkipIDRScheduler
setSyncGroupID:
TB,N,V_shouldUpdateRemoteScreenAttributes
setTransmitROC:
TB,N,V_startConnectionHealthMonitoring
setTxCodecType:
TB,N,V_supportsAdaptation
setUseCompressedConnectionData:
TB,N,V_supportsDynamicMaxBitrate
setVideoSource:
TB,N,V_transmitROC
setupAndStartOutputClientThread
TB,N,V_useCompressedConnectionData
setupCallerRTPChannelWithError:
TB,N,V_useInBandFec
setupDatagramChannel:eventHandler:writeCompletionHandler:error:
TB,N,V_useRateControl
setupRTPForIDS:
TB,N,V_useVideoJitterForVideoPlayout
setupRxPayloads:featureStrings:
TB,N,V_useWifiTiers
setupTxPayloads:featureStrings:
TB,N,V_videoIsExpected
sharedDigestKey
TB,N,V_vpEnableSpatialChat
shouldOverrideEffectsFramerate:
TB,N,V_wifiAllowRedLowBitratesEnabled
shouldSendAudio
TB,N,VallowRTCPFB
silenceLevelMovingAveragePeriod
TB,N,VallowsDynamicMaxBitrate
sipLock
TB,N,VinitialSecondaryRelaySetupDone
sourceFramerate
TB,N,VisGKVoiceChat
spatialMetadata
TB,N,VisLargeFrameRequestDisabled
speakerPowerRMS
TB,N,VisLinkCongested
startPrivacyAccountingInternval
TB,N,VisRTCPFBEnabled
started
TB,N,VisValid
statsForCallID:
TB,N,VrequiresWifi
stopConnectivityCheckForCallID:
TB,N,VshouldSendAudio
stopRelayThread
TB,N,VtaskIsComplete
stopVTP
TB,N,VuseRateControl
streamDirection
TB,N,VvideoIsPaused
streamModeWithClientStreamMode:
TB,N,VvideoSourceScreen
streamsAtIndex:
TB,R,GisStartOnDemand,V_startOnDemand
supportImage:width:height:rate:
TB,R,N,GisPreferredDevice,V_preferredDevice
targetFramerate
TB,R,N,GisRTCPXREnabled
treatAsCellular
TB,R,N,V_allowRTCPFB
uiState
TB,R,N,V_didReceiveServerStatsResponse
updateConnectionInfoWithLocalInterfaceType:remoteInterfaceType:
TB,R,N,V_forcingBitrate
updateLinkStatsWithArrivingNewValueMeanRTT:arrivingNewValuePLR:
TB,R,N,V_hasRepairedStreams
updateMaxAllowedBitrate:key:type:isAudio:carrierBundleBitrates:
TB,R,N,V_inputAvailable
updateVCIDSSessionInfoResponse:
TB,R,N,V_isCellular16x9Capable
updateWRMDuplicationForHandover
TB,R,N,V_isCongested
usePacketThread
TB,R,N,V_isEncodingSqaures
utteranceNumber
TB,R,N,V_isFirstInitialRampUpDone
vcrcServerBagWithOperatingMode:
TB,R,N,V_isNewRateSentOut
videoAsyncQueue
TB,R,N,V_isOperatingAtMinBitrate
videoCodecsWithSupportedCodecs:
TB,R,N,V_isRedEnabled
videoPayloadCollectionsAtIndex:
TB,R,N,V_isRunning
videoResolutionForWidth:height:
TB,R,N,V_isSendBitrateLimited
videoStreamRateControlAlgorithm
TB,R,N,V_isTemporalScalingEnabled
vpOperatingMode
TB,R,N,V_isWindowed
wifiAssistState
TB,R,N,V_outputAvailable
AVCVideoStreamModeWithAVCMediaStreamMode:
NATType
AVConferencePreviewSingleton
SRTPCipherSuite
AVConferenceServiceError:detailedCode:filePath:description:reason:
T@"<AVCQoSMonitorDelegate>",W,N
AVConferenceXPCClientSingleton
T@"<VCMediaStreamSyncSource>",R
AudioOnlyVCCapabilities
T@"AVCRateControlFeedbackController",R,&,N,V_feedbackController
Conference_SetBWEstMode:bFakeLargeFrameMode:
T@"NSArray",&,N,V_videoPayloads
H264LevelAsymmetryAllowed
T@"NSArray",C,N,V_streamIDsWifi
HTTPCheckWithIPPort:ipv6Prefix:useCache:
T@"NSArray",R,N,V_sortedEntries
IOBufferDuration
T@"NSData",&,N,V_positionalInfo
IPPortForPrimaryConnectionOnLocalInterface:
T@"NSNumber",&,N,VaudioRTCPPort
NATCheckWithIPPort:ipv6Prefix:useCache:
T@"NSObject<OS_xpc_object>",&,N
NATTypeDidChange:
T@"NSSet",&,N,V_remoteLanguages
NTPMostSignificantWord
T@"NSString",C,N,VinterfaceName
OWRDList
T@"NSUUID",C,N,V_conversationID
RTPTimestamp
T@"VCCallInfo",R,VlocalCallInfo
SIPDisabled
T@"VCMediaNegotiatorResultsAudio",R,N,V_negotiatedAudioSettings
SRTCPCipherSuite
T@"VCNetworkFeedbackController",&,N,V_networkFeedbackController
SSRC
T@,&,N,Vcontext
StringAsContent:
T@?,C,N,V_pushCompletionHandler
StringAsTransport:
TB,N,GisAudioMuted,V_audioMuted
T(tagNTP=Q{?=II}),N,V_creationTime
TB,N,GisRTCPReceiveCallbackEnabled,V_rtcpReceiveCallbackEnabled
T(tagNTP=Q{?=II}),R,N
TB,N,SsetMuted:
T*,R,N
TB,N,V_frequencyMeteringEnabled
T@"<AVCAudioStreamDelegate>",N,V_delegate
TB,N,V_isCaller
T@"<AVCEffectsDelegate>",N,V_delegate
TB,N,V_isUseCaseWatchContinuity
T@"<AVCPacketRelayConnectionProtocol>",&,V_multiplexedConnection
TB,N,V_shouldScheduleMediaQueue
T@"<AVCRemoteVideoClientDelegate>",R,N,V_delegate
TB,N,VisStarted
T@"<AVCSessionDelegate>",N
TB,R,N,V_encryptionInfoReceived
T@"<AVCStreamOutputDelegate>",N,V_delegate
TB,R,N,V_isOpusInBandFecEnabled
T@"<AVCVideoDataOutputDelegate>",N,V_delegate
TB,R,N,V_isVideoQualityDegraded
T@"<AVCVirtualTTYDeviceDelegate>",N
TB,VallowsRelay
T@"<VCAudioIOControllerDelegate>",R,N
TC,V_inputMeter
T@"<VCBasebandCodecNotifications>"
TI,N,V_maxDelay
T@"<VCCaptionsSource>",R,N,V_captionsSource
TI,N,V_payloads
T@"<VCConnectionManagerDelegate>"
TI,N,V_streamID
T@"<VCConnectionProtocol>",&,N,V_connectionForDuplicationNonProbingVersion
TI,N,VprobingSequencePacketSize
T@"<VCConnectionProtocol>",&,N,V_lastPrimaryConnectionInUse
TI,R,N,V_height
T@"<VCConnectionProtocol>",&,N,V_pendingSecondaryConnection
TI,R,V_maxAllowedBitrateHighRat
T@"<VCConnectionProtocol>",&,N,V_registeredConnection
TQ,N,V_maxPtime
T@"<VCEffectsManagerDelegate>",N,V_delegate
T@"<VCMediaCaptureController>",&,N,V_captureController
T^v,N,V_context
T@"<VCMediaControlInfoDelegate>",V_delegate
T^{_VCAudioPowerSpectrumSourceRealtimeContext={_VCSingleLinkedList=^{_VCSingleLinkedListEntry}B^?Q}^{opaqueCMSimpleQueue}@},R,N
T@"<VCMediaStreamGroupDelegate>",&,N,V_delegate
T^{tagHANDLE=i},N,V_hMediaQueue
T@"<VCMediaStreamSyncSource>",N,V_syncSource
Td,N,VdurationThresholdDownward
T@"<VCMomentsMessenger>",R,N,V_messenger
Td,R,N,V_expectedProcessEndTime
T@"<VCRemoteVideoManagerDelegate>",N,V_delegate
Tf,N,VpacketLateAndMissingRatio
T@"<VCSecureDataChannelDelegate>",N
Ti,R,N,V_format
T@"<VCSessionDelegate>",R,N
Ti,R,V_dataPath
T@"<VCSessionParticipantDelegate>",R,N
Tq,N,V_powerSpectrumStreamToken
T@"<VCSessionParticipantStreamDelegate>",N
T@"<VCStreamSychronizationDelegate>",N
_adaptationTime
T@"<VCTextReceiverDelegate>",N
_addInRangeFlag
T@"<VCVideoReceiverDelegate>",N,V_delegate
_allowRecording
T@"<WCMClientDelegate>",&,N,VwcmClientDelegate
_allowSuspendProvisionedStreams
T@"AVAudioDevice",&,N
_allowVideoStop
T@"AVAudioDevice",&,V_outputDevice
_answer
T@"AVAudioDeviceList",&,N,VdeviceList
_audioSessionID
T@"AVCBasebandCongestionDetector",&,N,V_basebandCongestionDetector
_audioTxBitrate
T@"AVCNetworkAddress",&,N,V_localAddress
_audioVoiceDetectionSensitivity
T@"AVCPacketFilter",&
_averageBitrate
T@"AVCRTCPReceiverReport",&,N,V_receiverReport
_bitmap
T@"AVCRateController",R,N,V_downlinkRateController
_blockBufferMemoryPoolAllocator
T@"AVCSessionParticipant",R,N,V_localParticipant
_budgetConsumingCellularTxBytes
T@"AVCStatisticsCollector",R,N,V_statisticsCollector
_bundledPackets
T@"AVCVideoStreamConfig",&,N,V_video
_cachedMessages
T@"GKNATObserverInternal",N,Vobserver_
_canUseP2PLinks
T@"ICEResultWaitQueue",R,VresultQueue
_captionsSource
T@"NSArray",&,N,V_streamIDs
_chipId
T@"NSArray",&,N,V_supportedModes
_clientUplinkPowerMovingAverage
T@"NSArray",&,N,V_supportedPayloads
_common
T@"NSArray",&,N,VmutedPeers
_connectionType
T@"NSArray",C,N,V_linkPreferenceOrder
_controlInfoCVO
T@"NSArray",C,N,V_remoteParticipants
_controlInfoIsReceivedOnPrimary
T@"NSArray",R
_controlInfoROC
T@"NSArray",R,N,V_audioStreamConfigurations
_currentDetails
T@"NSArray",R,N,V_channels
_currentPadding
T@"NSArray",R,N,V_codecs
_currentSendMKI
T@"NSArray",R,N,V_mediaStreamInfoArray
_cvoExtensionID
T@"NSArray",R,N,V_negotiatedStreamGroups
_didMBLRampDown
T@"NSArray",R,N,V_registeredStreamTokens
_dumpID
T@"NSArray",R,N,V_secondaryPayloads
_enableAudioPowerSpectrumReport
T@"NSArray",R,N,V_streams
_encodingHeight
T@"NSArray",R,N,V_supportedBandwidths
_forceDisableEffectsHealthCheck
T@"NSArray",R,N,V_tokens
_forcingBitrate
T@"NSArray",R,N,V_videoStreamConfigurations
_frameAllocator
T@"NSArray",R,V_supportedPayloads
_frequencyRange
T@"NSData",&,N,V_optionalPackedPayload
_handlerContext
T@"NSData",&,N,V_participantData
_height
T@"NSData",&,N,V_receiveMediaKey
_iRATRtpEnabled
T@"NSData",&,N,V_requiredPackedPayload
_inAudioBitrate
T@"NSData",&,N,V_videoFeatures
_initialBitrate
T@"NSData",&,V_effectsMetadata
_instantBitrate
T@"NSData",&,V_localConnectionData
_ipport
T@"NSData",&,V_remoteConnectionData
_isAudioStalled
T@"NSData",R
_isDroppedByAQM
T@"NSData",R,N,V_answer
_isIPv6
T@"NSData",R,N,V_offer
_isInitialConnectionEstablished
T@"NSData",R,N,V_participantData
_isLost
T@"NSDate",C,N,V_conversationTimeBaseTruncated
_isMediaStalled
T@"NSDictionary",&,N,V_featureStrings
_isRTTBasedFIRThrottlingEnabled
T@"NSDictionary",&,N,V_mediaStates
_isSharedSocket
T@"NSDictionary",&,N,V_remoteRelayUpdate
_isVideoJitterForPlayoutEnabled
T@"NSDictionary",&,N,V_vpOperatingModeToAudioSessionMediaFormatMapping
_lastBufferTime
T@"NSDictionary",C,N,V_pendingVideoStreams
_lastLocalAudioPresentationTime
T@"NSDictionary",R
_lastParticipantMKMRecoveryTime
T@"NSDictionary",R,N,V_audioOnlyBitrateToStreamIDsTable
_lastReceivedVideoRTPPacketTime
T@"NSDictionary",R,N,V_codecConfigurations
_lastTierSwitch
T@"NSDictionary",R,N,V_groupEntries
_lineEnumerator
T@"NSDictionary",R,N,V_rxCodecFeatureListStrings
_localCameraUID
T@"NSDictionary",R,N,V_streamIDToMediaStreamMap
_localU8Version
T@"NSDictionary",R,N,V_txPayloadMap
_longAverageLag
T@"NSDictionary",R,N,V_videoStreamIdToRepairStreamIdMap
_maxAllowedAudioOnlyBitrateWifi
T@"NSDictionary",R,V_transactions
_maxAllowedScreenShareBitrate2G
T@"NSMutableArray",&,N,V_audioPayloads
_maxBitrateKbps
T@"NSMutableArray",&,N,V_multiwayAudioStreams
_maxBufferCount
T@"NSMutableArray",&,N,V_payloads
_maxScreenEncodingSizeSupported
T@"NSMutableArray",&,N,V_streamGroups
_messageHandler
T@"NSMutableArray",&,N,V_videoPayloadCollections
_minBitrateKbps
T@"NSMutableArray",&,V_effectsArray
_momentsHistory
T@"NSMutableArray",R,N,VaudioPayloads
_multiwayConfig
T@"NSMutableArray",R,V_requestTimestampAndRTTList
_networkClockID
T@"NSMutableDictionary",&,N,V_imageAttributeRules
_newCarrierType
T@"NSMutableDictionary",&,N,V_remoteRelayRequestResponse
_normalizedBDCD
T@"NSMutableDictionary",&,V_localRelayRequestResponse
_nwConnectionPacketLossPerFrame
T@"NSMutableDictionary",R,N,V_dialogs
_optionalTopics
T@"NSMutableDictionary",R,N,V_qualityIndexToTableEntry
_outputFFTMeter
T@"NSMutableDictionary",R,N,V_remoteParticipants
_packetLossRateAvgLongAtLBAExit
T@"NSMutableDictionary",R,N,V_sources
_pauseStartTime
T@"NSMutableOrderedSet",&,N,V_multiwayAudioStreams
_payloadHistory
T@"NSNumber",&,N
_positionalInfo
T@"NSNumber",&,N,V_clientPID
_profileLevelId
T@"NSNumber",&,N,VaacBlockSize
_rampUpNoLossEventDurationRatio
T@"NSNumber",&,N,VaudioRTPID
_rateController
T@"NSNumber",&,N,VaudioUnitModel
_receiverThread
T@"NSNumber",&,N,VmaxBandwidth
_redNumPayloads
T@"NSNumber",R,N
_redundancyControllerFECVersion
T@"NSNumber",R,N,V_optedInStreamID
_remoteCellTech
T@"NSNumber",R,N,V_streamInputID
_repairStreamID
T@"NSNumber",R,V_plrEnvelopeValue
_reportingAgent
T@"NSNumber",R,V_streamToken
_reportingQueue
T@"NSObject",VoptionalArg
_resetRequested
T@"NSObject<AVConferenceDelegate>",N
_rtcpConnection
T@"NSObject<GKNATObserverDelegate>"
_rtpVFD
T@"NSObject<NSCopying>",C,N,V_reportingHierarchyToken
_screenSettings
T@"NSObject<OS_dispatch_queue>",&,N,V_delegateQueue
_secondaryFlags
T@"NSObject<OS_dispatch_queue>",&,N,Vqueue
_sendFailureCountSinceLastCheck
T@"NSObject<OS_dispatch_queue>",R,N,V_delegateQueue
_sentAudioBytes
T@"NSObject<OS_dispatch_queue>",R,N,V_registeredBlocksQueue
_sequenceNumber
T@"NSObject<OS_dispatch_queue>",R,VconnectionQueue
_sharedRemoteEstimatedBandwidth
T@"NSObject<OS_nw_activity>",&,N,V_nwActivity
_shouldConsiderVideoInLossEvent
T@"NSObject<OS_nw_activity>",N,V_nwActivity
_sinkIO
T@"NSObject<OS_xpc_object>",R,Vlistener
_source
T@"NSObject<VCCallSessionDelegate>",&,Vdelegate
_spatialContext
T@"NSObject<VCMediaStreamDelegate>",N,Vdelegate
_speechDetected
T@"NSObject<VCRedundancyControllerProtocol>",&,N,V_redundancyController
_status
T@"NSObject<VideoConferenceChannelQualityDelegate>"
_stillImageURLs
T@"NSOrderedSet",R,N,V_codecConfigs
_streamDelegate
T@"NSSet",&,N,V_audioPayloads
_streamResetIDR
T@"NSSet",&,N,V_captionsReceiverLanguages
_streamsUseRTCP
T@"NSSet",&,N,V_hdrModesSupported
_sumPLR
T@"NSSet",&,N,V_momentsImageTypes
_supportedModes
T@"NSSet",&,N,V_pixelFormats
_syncDestinationChangeEventPool
T@"NSSet",R,N
_thread
T@"NSSet",R,N,V_audioPayloads
_tokens
T@"NSSet",R,N,V_hdrModesNegotiated
_totalBytesSent
T@"NSSet",R,N,V_pixelFormatCollections
_transportToken
T@"NSSet",R,N,V_streamGroupConfigs
_useMarkovModel
T@"NSSet",R,N,V_streamInputConfigurations
_useSBR
T@"NSSet",R,V_activelyProbingLinkIDs
_videoCodecType
T@"NSString",&,N,V_cname
_videoSinkState
T@"NSString",&,N,V_emulatedNetworkConfigPath
_videoStreamRateControllerQueue
T@"NSString",&,N,V_frameworkVersion
_vplrFecEnabled
T@"NSString",&,N,V_lastCalledApiName
_wifiAllowRedLowBitratesEnabled
T@"NSString",&,N,V_osVersion
_writingStarted
T@"NSString",&,N,V_participantUUID
acknowledgement
T@"NSString",&,N,V_remoteDeviceName
addConnectionToConnectionArray:
T@"NSString",&,N,V_rxCodecFeatureListString
addRemoteAudioSample:timestamp:
T@"NSString",&,N,V_sessionId
algorithmConfig
T@"NSString",&,N,V_text
allocTextPacket
T@"NSString",&,N,V_txCodecFeatureListString
answerBandwidth
T@"NSString",&,N,V_uuid
appendStreamGroupsMediaEntries:
T@"NSString",&,N,VsdpString
applyNegotiatedCaptionsSettings
T@"NSString",C,N,V_cName
applyServerBagFastRampUpConfig:
T@"NSString",C,N,V_destination
arrayWithArray:
T@"NSString",C,N,V_frameworkVersion
attachMetadata:toCVPixelBuffer:
T@"NSString",C,N,V_ip
audioStreamConfigs:configCount:
T@"NSString",C,N,V_osVersion
audioTierPicker
T@"NSString",C,N,V_remoteInterfaceType
avConferenceScreenCaptureError:
T@"NSString",C,N,V_serviceName
bBWEstFakeLargeFrameModeEnabled
T@"NSString",C,N,VcurrentFocus
bitrate
T@"NSString",C,N,VpeerCN
bundleForClass:
T@"NSString",C,N,VsessionID
callEventHandlerWithEvent:info:
T@"NSString",C,V_participantID
canProcessAudio
T@"NSString",C,V_sessionID
cancelRequestWithTransactionID:
T@"NSString",R
capabilitiesWithMomentSettings:
T@"NSString",R,N
captureAsFocus:
T@"NSString",R,N,V_deviceName
captureSourcePositionDidChange:
T@"NSString",R,N,V_featureListStringHEVC
checkKeysAgainstHardcodedPrefs:
T@"NSString",R,N,V_fieldValue
chooseVideoPayloadForInterface:
T@"NSString",R,N,V_participantID
cleanup
T@"NSString",R,N,V_requesterID
cleanupOneToOne
T@"NSString",R,N,V_transactionID
clearAudioRules
T@"NSString",R,N,VtopicKey
closeRecordings
T@"NSTimer",&,VnetworkQualityUpdateTimer_
collectChannelMetrics:interval:
T@"NSURL",&,N,V_outputURL
computeRedundancyWithBurstyLoss
T@"SDPMini",&,N,Vsdp
configurationExtensionAsString:
T@"VCAudioCaptionsCoordinator",&,N,V_captionsCoordinator
connectionCount
T@"VCAudioIO",&,V_audioIO
containsObject:
T@"VCAudioIOControllerClient",&,V_runningClient
content
T@"VCAudioPayload",&,N,V_chosenDTXPayload
copyNatTypeCache_OSXGamedScheme
T@"VCAudioPayloadConfig",R,N,V_config
copyTo:
T@"VCAudioPowerSpectrumSource",R,N,V_powerSpectrumSource
createConverterForSource:error:
T@"VCAudioRelayIO",C,N,V_remoteIO
createSupportedBitratesForAMR8k
T@"VCAudioRuleCollection",&,N,V_audioRulesNegotiated
currentAudioCap
T@"VCAudioSessionMediaProperties",&,N,V_currentAudioSessionMediaProperties
currentPayloadUsed:payloadUsed:
T@"VCAudioStreamGroupCommonConfig",&
datagramChannelRequiresOptions:
T@"VCAudioTier",R,N,V_currentAudioTier
defaultPayload:
T@"VCAudioTransmitter",&,V_audioTransmitter
dequeueOneFrame
T@"VCAudioUnitSpatialContext",&,N,V_spatialContext
devices
T@"VCCCMessageAcknowledgment",&,N,V_acknowledgement
didChangeLocalScreenAttributes:
T@"VCCapabilities",&
didPausePreview
T@"VCCaptionsTranscription",&,N,V_currentTranscription
didReceiveVideo
T@"VCConnectionHealthMonitor",R,N,V_connectionHealthMonitor
didStart:error:
T@"VCConnectionManager",R,N,V_connectionManager
didStop
T@"VCEmulatedNetwork",R,N,V_network
dispatchedSetRemoteAudioPaused:
T@"VCImageAttributeRules",&,N,V_imageAttributeRules
dispatchedStart
T@"VCMediaNegotiationBlobAudioSettings",&,N,V_audioSettings
display
T@"VCMediaNegotiationBlobV2BandwidthSettings",&,N,V_bandwidthSettings
dispose
T@"VCMediaNegotiationBlobV2CodecFeatures",&,N,V_codecSupport
dupRTPNWConnectionBackingSocket
T@"VCMediaNegotiationBlobV2MicrophoneSettingsU1",&,N,V_microphoneU1
enableAggressiveProbingSequence
T@"VCMediaNegotiationBlobV2SettingsU1",&,N,V_settingsU1
encoderBitrateAveragingInterval
T@"VCMediaNegotiationBlobVideoSettings",&,N,V_videoSettings
endTime
T@"VCMediaNegotiatorAudioConfiguration",&,N,V_audioConfiguration
featureListDict
T@"VCMediaNegotiatorAudioConfiguration",R,N,V_audioConfiguration
forceWiFiAssist
T@"VCMediaNegotiatorLocalConfiguration",R,N,V_localSettings
forceZeroRegionOfInterestOrigin
T@"VCMediaNegotiatorResults",R,N,V_negotiatedSettings
formattedTextWithTranscription:
T@"VCMediaNegotiatorResultsCaptions",R,N,V_negotiatedCaptionsSettings
getBytes:range:
T@"VCMediaNegotiatorResultsFaceTimeSettings",R,N,V_negotiatedFaceTimeSettings
getCodecConfigForPayload:block:
T@"VCMediaNegotiatorResultsMoments",R,N,V_negotiatedMomentsSettings
getFeatureListStringForPayload:
T@"VCMediaNegotiatorResultsVideo",R,N,V_negotiatedScreenSettings
groupID
T@"VCMediaStream",&,N,V_stream
handleIncomingWithCallID:msgIn:msgOut:optional:confIndex:error:
T@"VCMediaStreamConfig",R,N,V_streamConfig
handleNWConnectionNotification:
T@"VCMediaStreamRateControlConfig",&,N,V_rateControlConfig
handleReceivedPiggybackBlobIDS:
T@"VCMoments",&,N,V_moments
hasCodecSupport
T@"VCNWConnectionCongestionDetector",&,N,V_nwConnectionCongestionDetector
hasKey:
T@"VCNetworkAddress",&,N,V_remoteAddress
hasMicrophoneU1
T@"VCPositionalInfo",R,N,V_positionalInfo
hasPixelFormats
T@"VCRateControlMediaController",&,N,V_mediaController
hasText
T@"VCSecurityKeyManager",&,N,V_securityKeyManager
hdrMode
T@"VCSessionMediaNegotiator",R,N,V_mediaNegotiator
iRemoteRTCPPort
T@"VCSessionParticipant",R,N,V_localParticipant
initAudioValues
T@"VCSessionParticipantOneToOneConfig",&,N,V_oneToOneConfig
initWithCapacity:bytesPerFrame:
T@"VCSessionStatsController",R,N,V_sessionStatsController
initWithDeviceRole:callLogFile:
T@"VCStatsRecorder",R,N,V_statsRecorder
initWithDumpID:
T@"VCTransportSession",&,N,V_transportSession
initWithLength:
T@"VCVideoReceiverBase",R,V_videoReceiver
initWithNSUUID:
T@"VCVideoRule",R,N,VlimitingRule
initWithPrefix:
T@"VCVideoRuleCollections",&,N,V_videoRuleCollections
initWithResult:
T@"VCVideoRuleCollections",R,N,V_screenRuleCollections
initializeFormatContextPointers
T@"VCVideoTransmitterBase",R,V_videoTransmitter
inputMeterLevel
T@"VCXPCClientShared",R,N,V_connection
internalBundleFactorForPayload:
T@"VideoAttributes",&,N,V_remoteVideoAttributes
ipPortStillExists:requiresWifi:
T@"VideoAttributes",&,V_remoteScreenAttributes
isAudioExpected
T@"VideoAttributes",&,VremoteVideoAttributes
isDuplicationDueToWRMSuggestion
T@"VideoConference",VactiveConference
isEqualToArray:
T@,N,V_messageReceivedDelegate
isFocus
T@,R,V_reportingAgent
isHistoryValid:
T@?,C,N,V_errorReponseCallback
isLinkCongested
T@?,C,N,V_peerPublishedStreamCallback
isLocalCellular
T@?,C,N,V_popCompletionHandler
isMuted
T@?,C,N,Vblock
isProxy
T@?,C,V_bindingResponseHandler
isRTCPFBEnabled
T@?,C,V_messageHandler
isRedundancyEnabledFor720Stream
T@?,C,V_startCompletionHandler
isRemoteIPPort:
T@?,N
isRemotePreAzul
isScreenEnabled
TB,GisSpeakerPhoneEnabled
isSessionActive
TB,GisUsingViceroyBlobFormat
isThreadRunning
TB,N,GisAudioEnabled
isValid
TB,N,GisAudioMuted
isVideoDegraded
TB,N,GisAudioPaused,V_audioIsPaused
lastReceivedVideoRTCPPacketTime
TB,N,GisAudioSending,V_isAudioSending
lastVoiceActive
TB,N,GisCurrentDTXEnabled,V_currentDTXEnable
localDataSoMask
TB,N,GisDecryptionTimeOutEnabled,V_decryptionTimeOutEnabled
localScreenLandscapeAspectRatio
TB,N,GisFollowSystemInputEnabled,V_followSystemInput
lowercaseString
TB,N,GisHeaderFullOnly,V_headerFullOnly
markPacketLoss:
TB,N,GisInputMeteringEnabled
maxOWRD
TB,N,GisLTRPEnabled,V_ltrpEnabled
mediaController
TB,N,GisLatencySensitiveModeEnabled,V_latencySensitiveModeEnabled
message
TB,N,GisMicrophoneMuted
microphoneMuted
TB,N,GisMicrophoneMuted,V_microphoneMuted
moitors
TB,N,GisMixingVoiceWithMediaEnabled,V_isMixingVoiceWithMediaEnabled
moments:didFinishRequest:error:
TB,N,GisMuted,V_isMuted
momentsSettings
TB,N,GisOctetAligned,V_octetAligned
multiwayVideoStreamNegotiatorConfigForStreamConfig:isSubstream:
TB,N,GisOneToOneEnabled,V_oneToOneEnabled
negotiatedAudioSettingsForGroupID:localU1Config:remoteU1Config:
TB,N,GisOuputMeteringEnabled,V_isOutputMeteringEnabled
negotiationCipherSuiteAsString:
TB,N,GisOutputMeteringEnabled
negotiationMode
TB,N,GisPaused,V_paused
newCorrectedVideoRules:payload:
TB,N,GisRTCPEnabled,V_rtcpEnabled
newLocalFeaturesStringWithType:
TB,N,GisRTCPTimeOutEnabled,V_rtcpTimeOutEnabled
newResponseBlob
TB,N,GisRTCPXREnabled,V_rtcpXREnabled
notifyCodecModeChangeEventToCT:
TB,N,GisRTPTimeOutEnabled,V_rtpTimeOutEnabled
numberWithBool:
TB,N,GisRateAdaptationEnabled,V_rateAdaptationEnabled
numberWithLong:
TB,N,GisRedundancyEnabledFor720Stream
onStart
TB,N,GisRemoteAudioPaused,V_remoteAudioPaused
oneToOneToMultiwaySwitchSuspend
TB,N,GisRemoteScreenEnabled
optInStreamIDs:
TB,N,GisRemoteVideoEnabled,V_remoteVideoEnabled
orientationMismatchDisplayRatio
TB,N,GisScreenEnabled
outputAvailable
TB,N,GisSessionActive,V_sessionActive
parseAttribute:
TB,N,GisStarted,V_isStarted
parseMediaLine:
TB,N,GisVideoEnabled,V_videoEnabled
participantUUID
TB,N,GisVideoPaused,V_isVideoPaused
payloadBitmapWithAudioPayloads:
TB,N,SsetCallActive:
TB,N,SsetIsSendingEnabled:,VisSendingEnabled
pointerAtIndex:
TB,N,SsetVADFilteringEnabled:,V_isVADFilteringEnabled
preferredFormat
TB,N,V_H264LevelAsymmetryAllowed
probingInterval
TB,N,V_SIPDisabled
processRTCPTimeoutSettingChange
TB,N,V_allowAudioSwitching
prominenceIndex
TB,N,V_allowLargePackets
qualityTierTableForStreamToken:
TB,N,V_allowRecording
ratType
TB,N,V_allowVideoStop
realtimeContext
TB,N,V_alwaysOnAudRedEnabled
receiveMediaKey
TB,N,V_anbrEnabled
registerService:weakSelf:block:
TB,N,V_audioEnabled
relaySetupTimer
TB,N,V_audioMuted
releasePTPClock
TB,N,V_canDisplayCaptions
remoteCodecInfo
TB,N,V_configurationInProgress
remoteFaceTimeSwitchesAvailable
TB,N,V_didReceiveFirstFrame
remoteLinkFlags
TB,N,V_dtmfTonePlaybackEnabled
remoteScreenPortraitAspectRatio
TB,N,V_dynamicVideoPriorityEnabled
removeAssertion
TB,N,V_enableAggressiveProbingSequence
removeObserver:
TB,N,V_enableCVO
reportNetworkConditionsDegraded
TB,N,V_enableLoopbackInterface
reportingAlgosVideoStreamEvent:
TB,N,V_enableOneToOneMode
resCond
TB,N,V_encryptionInfoReceived
resetConnection
TB,N,V_faceMeshTrackingEnabled
resetStatsForPeriodicTaskReport
TB,N,V_fastSuddenBandwidthDetectionEnabled
ringBuf
TB,N,V_forceEVSWideBand
rtcpSendEnabled
TB,N,V_forceZeroRegionOfInterestOrigin
rtpSSRC
TB,N,V_hasReceivedFirstFrame
rulesFramerate:
TB,N,V_hasRepairedStreamID
samplesPerFrame
TB,N,V_highFecEnabled
schedulerStreamWithVideoStream:
TB,N,V_idsUPlusOneMode
TB,N,V_initUsingWifiTiers
sendData:messageType:encrypted:
TB,N,V_isAudioStalled
senderLanguages
TB,N,V_isDegraded
seperateString:
TB,N,V_isDuplicationAllowed
session:cleanUpWithDelay:error:
TB,N,V_isExtraDelayForPacketRetransmissionsEnabled
sessionForUUID:
TB,N,V_isFeedbackReceived
TB,N,V_isFirstTimestampArrived
setAllowRTCPFB:
TB,N,V_isIPv6
setAnbrEnabled:
TB,N,V_isInDaemon
setAudioPaused:
TB,N,V_isLocalCellular
setCallLogFile:
TB,N,V_isLowLatency
setCipherSuite:
TB,N,V_isMediaStalled
setCurrentOutputDeviceInternal:
TB,N,V_isMutedTalkerNotificationRegistered
setDay:
TB,N,V_isOneToOneModeEnabled
setDestination:
TB,N,V_isOneToOneScreenEnabled
setEVSRFParams:
TB,N,V_isRTCPFBEnabled
setFastMediaDuplicationEnabled:
TB,N,V_isRTPFlushBasebandFromVCRateControl
setGeneralInfo:
TB,N,V_isRedundancyControlEnabled
setHasMetadata:
TB,N,V_isRemoteMediaQualityDegraded
setHasStreamID:
TB,N,V_isRemoteOnPeace
setIdsStreamID:
TB,N,V_isServerBasedBandwidthProbingEnabled
setInputFormat:
TB,N,V_isServerRTxEnabled
setIsLargeFrameRequestDisabled:
TB,N,V_isSubStream
setIsSubStream:
TB,N,V_isSupported
setIsSupported:
TB,N,V_isTargetBitrateStabilized
setKey:
TB,N,V_isValid
setLocalCamera:
TB,N,V_isVideoDegraded
setLtrpEnabled:
TB,N,V_isVideoProtected
setMicCallback:
TB,N,V_isVideoSuspended
setMixingVoiceWithMediaEnabled:
TB,N,V_isWindowed
setNumPayloads:
TB,N,V_ltrpEnabled
setOptionalArg:
TB,N,V_negotiatedScreenEnabled
setPacketsSent:
TB,N,V_oneToOneModeEnabled
setPeerPublishedStreamCallback:
TB,N,V_preWarmCellEnabled
setPerfTimings:
TB,N,V_reinitEncoderOnFrameSizeChangeEnabled
setPixelBuffer:
TB,N,V_remotePreWarmStateEnabled
setPreferredModeWithClientMode:
TB,N,V_requiresWiFi
setRealRATType:
TB,N,V_rtcpPSFB_FIREnabled
setResetSendRTPTimestampOnStop:
TB,N,V_rtcpPSFB_PLIEnabled
setRxCodecType:
TB,N,V_rtcpSREnabled
setScaleFactor:
TB,N,V_secureMessagingRequired
setSdp:
TB,N,V_sharingEnabled
setSessionDict:
TB,N,V_shouldCreateMediaControlInfoGenerator
setSessionUUID:
TB,N,V_shouldDisableLargeFrameRequestsWhenInitialRampUp
setSourceToken:
TB,N,V_shouldEnableFaceZoom
setStreamGroup:
TB,N,V_shouldIgnoreRTPHeaderExtensions
setStreamToken:
TB,N,V_shouldSetupNWMonitor
setSuspendVideo
TB,N,V_shouldSynchronizeWithSourceRTPTimestamps
setToVideoRule:
TB,N,V_spatialAudioDisabled
setTransportSessionEventHandler
TB,N,V_startOnDemand
setUplinkVideoStreamController:
TB,N,V_supportsCodecBandwidthUpdate
setVideoPaused:
TB,N,V_temporalScalingEnabled
setWithObjects:
TB,N,V_useChannelDataFormat
setupAudioRulesWithPList:audioStreamConfig:supportedAudioRules:
TB,N,V_useInBandFEC
setupCodecWithClientDictionary:
TB,N,V_useMediaDrivenDuplication
setupKeyFrameGenerationMessages
TB,N,V_useSBR
setupRTPWithNWConnection:error:
TB,N,V_useWiFiTiers
setupStreamRTP:
TB,N,V_videoEnabled
setupWRMAlertStateUpdateMessage
TB,N,V_videoPaused
shouldIgnoreRTPHeaderExtensions
TB,N,V_vplrFecEnabled
shouldRampDownDueToNWConnection
TB,N,VallowAudioRecording
shouldUnblockRampUpAfterTimeOut
TB,N,VallowsContentsChangeWithAspectPreservation
sipCallbackNotification:callID:msgIn:msgOut:optional:confIndex:
TB,N,VcameraSwitching
sleepUntilDate:
TB,N,VisFocus
sources
TB,N,VisIPv6
speakerCallback
TB,N,VisLastFrameProbingSequence
startConnectionHealthMonitoring
TB,N,VisPreLionOS
startWithError:
TB,N,VisUsingSuppression
stateForCallID:
TB,N,VisVideoQualityDegraded
stopAudioWithCompletionHandler:
TB,N,VshouldPrioritizeParticipantIDForSIPInvite
stopMediaQueue:
TB,N,VsupportsSKEOptimization
stopScreenGroup
TB,N,VuseCompressedConnectionData
stopWRM
TB,N,VuseViceroyBlobFormat
streamGroupMode
TB,N,VvideoMirrored
streams
TB,R
stringByAppendingPathComponent:
TB,R,N
supportedCodecs
TB,R,N,GisRTCPSendEnabled
targetTimestamp
TB,R,N,GisRedEnabled,V_redEnabled
typeForRequest:
TB,R,N,V_basebandAdaptationEnabled
unregisterListenerWithCellularTapType:powerSpectrumMeter:error:
TB,R,N,V_evsHeaderFullOnly
updateDuplicationStateForMediaHealthUnrecoverable:updateResult:
TB,R,N,V_hasPendingChanges
updateLossEvent
TB,R,N,V_ignoreSilence
updateOneToOneBandwidthAllocationTable:mediaType:streamGroupID:
TB,R,N,V_isActive
updateVideoQualityNotification:
TB,R,N,V_isCompoundStreamIDsIncreased
useAFRC
TB,R,N,V_isDTXEnabled
useVCRC
TB,R,N,V_isFarEndVersionInfoValid
vcSession:participantID:remoteMediaStateDidChange:forMediaType:
TB,R,N,V_isInThrottlingMode
version
TB,R,N,V_isOperatingAtMaxBitrate
videoAttributes
TB,R,N,V_isPrewarmingClient
videoIsExpected
TB,R,N,V_isRemoteVersionInfoValid
videoResolution
TB,R,N,V_isSecondary
videoStreamMode
TB,R,N,V_isStarted
visibilityIndex
TB,R,N,V_isVideoStoppedByVCRateControl
wcmGetCallConfig:targetBitrate:
TB,R,N,V_muted
wrmInfo
TB,R,N,V_parsingDone
TB,R,N,V_payloadOctetAligned
TB,R,N,V_running
TB,R,N,V_sbr
TB,R,N,V_supportVCPDecoderHEVC
TB,R,N,V_supportVCPEncoderHEVC
TB,R,N,V_useExternalIO
TB,R,N,V_usePreNegotiation
TB,R,N,V_utteranceComplete
TB,R,N,V_vcpInitializedForHEVC
TB,R,N,VisIOS
TB,R,N,VsupportsSpecialAACBundle
TB,R,N,VuseNewPLCalc
TB,R,N,VusesInitialFECImplementation
TB,R,V_cellularAssertionActive
TB,R,V_forceWiFiAssist
TB,R,V_forceWiFiAssistOutOfBudget
TB,R,V_hasRepairStreamID
TB,R,V_isClientInProcess
TB,R,V_isEncryptionEnabled
TB,R,V_isFECVersion2Enabled
TB,R,V_isLocalDelegated
TB,R,V_isPreWarmStateEnabled
TB,R,V_isRTPFilter
TB,R,V_isRelayRunning
TB,R,V_isRemoteDelegated
TB,R,V_isRemoteDuplicating
TB,R,V_isRunning
TB,R,V_isThreadRunning
TB,R,V_isVirtualRelayLink
TB,R,V_stopVTPReceiveThread
TB,R,VaudioIsPaused
TB,R,VisAudioRunning
TB,R,VisLocalConstrained
TB,R,VisLocalDelegated
TB,R,VisLocalExpensive
TB,R,VisLocalOn5G
TB,R,VisRemoteConstrained
TB,R,VisRemoteDelegated
TB,R,VisRemoteExpensive
TB,R,VisRemoteMediaStalled
TB,R,VisRemoteOn5G
TB,R,VisVirtualRelayLink
TB,SsetPowerSpectrumEnabled:
TB,V_allowDuplication
TB,V_canUseP2PLinks
TB,V_cellPrimaryInterfaceChangeEnabled
TB,V_duplicateImportantPktsEnabled
TB,V_duplicateMessageOnServerLink
TB,V_duplicationEnhancementEnabled
TB,V_fastMediaDuplicationEnabled
TB,V_forceNetworkCellular
TB,V_hasReceivedFirstFrame
TB,V_iRATDuplicationEnabled
TB,V_isAudioOnly
TB,V_isCaller
TB,V_isCellUp
TB,V_isDemuxNeeded
TB,V_isDuplicationEnabled
TB,V_isLowestQuality
TB,V_isMediaStalled
TB,V_isRemotePreAzul
TB,V_isResumed
TB,V_isVideoDegraded
TB,V_isVideoPaused
TB,V_isVideoSuspended
TB,V_isWifiUp
TB,V_lowNetworkModeEnabled
TB,V_optIntoExistingSubscribedStreams
TB,V_periodicReportingEnabled
TB,V_shouldSendFeedbackControllerReport
TB,V_supportDuplication
TB,V_toneInjectionEnabled
TB,V_usePacketThread
TB,V_usingServerBasedLinks
TB,V_videoEnabled
TB,V_waitToBeNominated
TB,VconnectionPersists
TB,VdidSend200OK
TB,VdisableVAD
TB,VisAudioEnabled
TB,VisAudioPausedToStart
TB,VisDTLSEnabled
TB,VisDuplexAudioOnly
TB,VisDuplexVideoOnly
TB,VisHalfDuplexAudio
TB,VisKeyExchangeEnabled
TB,VisQueryAnswered
TB,VisRelayEnabled
TB,VisRelayForced
TB,VisValid
TB,VisVideoEnabled
TB,VisVideoPausedToStart
TB,VisVideoSourceScreen
TB,VisWaitingForICEResult
TB,VreceivedSIPInvite
TB,VrequiresWifi
TB,VshouldDisplayNetworkQualityGraph_
TB,VshouldTimeoutPackets
TB,VuseControlByte
TB,VuseUEP
TC,N
TC,N,V_direction
TC,N,V_fractionLost
TC,N,V_linkProbingCapabilityVersion
TC,N,V_mediaControlInfoFECFeedbackVersion
TC,N,V_mediaControlInfoVersion
TC,N,V_mode
TC,N,V_numRedundantPayloads
TC,N,V_packetType
TC,N,V_packetsPerBundle
TC,N,V_presentationState
TC,N,V_redundancyControllerFECVersion
TC,N,V_remoteLinkProbingCapabilityVersion
TC,N,V_streamIndex
TC,N,V_type
TC,N,V_videoQuality
TC,R
TC,R,N
TC,R,N,V_encodingType
TC,R,N,V_fieldType
TC,R,N,V_mediaType
TC,R,N,V_priority
TC,R,N,V_transportType
TC,R,N,V_uiState
TC,R,V_duplicationReason
TC,R,V_linkProbingCapabilityVersion
TC,R,V_type
TC,R,V_version
TC,R,V_wifiAssistState
TC,R,V_writerMode
TC,V_fecFeedbackVersion
TC,V_linkProbingCapabilityVersion
TC,V_preferredLocalInterfaceForDuplication
TC,V_preferredRemoteInterfaceForDuplication
TC,V_version
TI,N
TI,N,V_NTPLeastSignificantWord
TI,N,V_NTPMostSignificantWord
TI,N,V_RTPTimestamp
TI,N,V_SSRC
TI,N,V_abSwitches
TI,N,V_accessNetworkType
TI,N,V_afrcRemoteEstimatedBandwidth
TI,N,V_audioChannelCount
TI,N,V_audioChannelIndex
TI,N,V_audioFeatures
TI,N,V_audioIOSampleRate
TI,N,V_audioSendingBitrate
TI,N,V_audioSessionID
TI,N,V_audioSessionId
TI,N,V_audioUnitModel
TI,N,V_audioUnitNumber
TI,N,V_audioUnitType
TI,N,V_basebandCodecSampleRate
TI,N,V_blobVersion
TI,N,V_budgetInCaptureFrames
TI,N,V_callID
TI,N,V_cap2G
TI,N,V_cap3G
TI,N,V_cap5G
TI,N,V_capLTE
TI,N,V_capWifi
TI,N,V_capabilities
TI,N,V_cellularUniqueTag
TI,N,V_channelCount
TI,N,V_channelIndex
TI,N,V_cipherSuite
TI,N,V_clientVersion
TI,N,V_codecBandwidthMask
TI,N,V_codecRateModeMask
TI,N,V_codecType
TI,N,V_confidence
TI,N,V_coordinateSystem
TI,N,V_cumulativePacketsLost
TI,N,V_currentUplinkTargetBitrate
TI,N,V_currentUplinkTotalBitrate
TI,N,V_customHeight
TI,N,V_customVideoHeight
TI,N,V_customVideoWidth
TI,N,V_customWidth
TI,N,V_decodeFormats
TI,N,V_delaySinceLastSR
TI,N,V_destinationFramerate
TI,N,V_downlinkTargetBitrate
TI,N,V_downlinkTargetCellBitrateCap
TI,N,V_dtmfSampleRate
TI,N,V_encodeFormats
TI,N,V_encoderBitrateAveragingInterval
TI,N,V_encoderUsage
TI,N,V_estimatedBandwidthCap
TI,N,V_expectedBitrate
TI,N,V_extendedHighestSequenceNumber
TI,N,V_faceTimeSwitches
TI,N,V_formats
TI,N,V_formatsExt1
TI,N,V_framePosition
TI,N,V_frameRate
TI,N,V_framerate
TI,N,V_framesPerIdrPeriod
TI,N,V_groupID
TI,N,V_hdrModesSupported
TI,N,V_height
TI,N,V_interarrivalJitter
TI,N,V_jitterBufferMode
TI,N,V_keyFrameInterval
TI,N,V_landscapeAspectRatioX
TI,N,V_landscapeAspectRatioY
TI,N,V_lastNoVoiceActivityPacketCount
TI,N,V_lastSRTimestamp
TI,N,V_linkProbingCapabilityVersion
TI,N,V_localSSRC
TI,N,V_maxBandwidth
TI,N,V_maxBitrateKbps
TI,N,V_maxChannelCountMic
TI,N,V_maxChannelCountSpeaker
TI,N,V_maxIDSStreamIdCount
TI,N,V_maxMediaBitrate
TI,N,V_maxNetworkBitrate
TI,N,V_maxPacketsPerSecond
TI,N,V_maxRedundancyPercentage
TI,N,V_maxSupportedTemporalLayers
TI,N,V_mediaControlInfoGeneratorOptions
TI,N,V_mediaControlInfoGeneratorType
TI,N,V_mediaControlInfoSubVersion
TI,N,V_mediaControlInfoVersion
TI,N,V_mediaFlags
TI,N,V_mediaState
TI,N,V_mediaSubtype
TI,N,V_mediaType
TI,N,V_minBitrateKbps
TI,N,V_minTargetBitrate
TI,N,V_mismatchedDisplayAspectRatioX
TI,N,V_mismatchedDisplayAspectRatioY
TI,N,V_mode
TI,N,V_multiwayCapabilities
TI,N,V_nackGeneratorStorebagConfigVersion
TI,N,V_negotiationProtocolMask
TI,N,V_networkPayload
TI,N,V_numPayloads
TI,N,V_octetsSent
TI,N,V_pTime
TI,N,V_packetExpirationTime
TI,N,V_packetsSent
TI,N,V_parameterSet
TI,N,V_parameterSets
TI,N,V_payload
TI,N,V_payloadFlags
TI,N,V_payloadSpecOrPayloads
TI,N,V_pixelFormat
TI,N,V_pixelFormats
TI,N,V_portraitAspectRatioX
TI,N,V_portraitAspectRatioY
TI,N,V_preferredFormat
TI,N,V_preferredFormatExt1
TI,N,V_preferredIOSampleRate
TI,N,V_preferredIOSamplesPerFrame
TI,N,V_preferredMediaBitRate
TI,N,V_preferredMediaBitrate
TI,N,V_profileLevelId
TI,N,V_prominenceIndex
TI,N,V_qualityIndex
TI,N,V_radioAccessTechnology
TI,N,V_rateChangeCounter
TI,N,V_rateSharingCount
TI,N,V_redMaxDelay20ms
TI,N,V_redNumPayloads
TI,N,V_redundancyMode
TI,N,V_redundancyPercentage
TI,N,V_remoteBasebandCodecSampleRate
TI,N,V_remoteBlobVersion
TI,N,V_remoteCodecType
TI,N,V_remoteMediaState
TI,N,V_remoteSSRC
TI,N,V_repairedMaxNetworkBitrate
TI,N,V_repairedStreamID
TI,N,V_reportedSourceSSRC
TI,N,V_reservedBitrate
TI,N,V_rtcpFlags
TI,N,V_rtpId
TI,N,V_rtpPayload
TI,N,V_rtpSSRC
TI,N,V_rtpSampleRate
TI,N,V_rtpTimestampRate
TI,N,V_screenCaptureDisplayID
TI,N,V_screenDisplayID
TI,N,V_screenPixelCount
TI,N,V_screenRes
TI,N,V_screenSSRC
TI,N,V_secondaryFlags
TI,N,V_selectiveSharingPort
TI,N,V_senderLanguages
TI,N,V_sequenceNumber
TI,N,V_size
TI,N,V_sourceFramerate
TI,N,V_ssrc
TI,N,V_status
TI,N,V_streamGroup
TI,N,V_streamGroupID
TI,N,V_streamGroupMode
TI,N,V_streamIndex
TI,N,V_supportFlags
TI,N,V_supportedCodecs
TI,N,V_supportedImageTypes
TI,N,V_supportedPayloads
TI,N,V_supportedVideoCodecs
TI,N,V_supportedVideoFormats
TI,N,V_syncGroupID
TI,N,V_targetBitrate
TI,N,V_targetBitrateCap
TI,N,V_targetBitrateChangeCounter
TI,N,V_tierNetworkBitrate
TI,N,V_tilesPerFrame
TI,N,V_tilesPerVideoFrame
TI,N,V_timestamp
TI,N,V_transportSessionID
TI,N,V_transportType
TI,N,V_updateNumber
TI,N,V_uplinkBitrateCapCell
TI,N,V_uplinkBitrateCapWifi
TI,N,V_utteranceNumber
TI,N,V_videoPayload
TI,N,V_videoSSRC
TI,N,V_videoSendingBitrate
TI,N,V_visibilityIndex
TI,N,V_vpOperatingMode
TI,N,V_weightFactor
TI,N,V_width
TI,N,VauNumber
TI,N,VcellBandwidth
TI,N,VlargeFrameSizeAtCurrentBandwidth
TI,N,VlargeFrameSizeRequested
TI,N,VmaxBandwidth
TI,N,VpreferredCodec
TI,N,VprobingSequencePacketCount
TI,N,VvisibleRectCropping
TI,R
TI,R,N
TI,R,N,V_actualBitrate
TI,R,N,V_audioSessionId
TI,R,N,V_basePeriodCount
TI,R,N,V_basePeriodMs
TI,R,N,V_basebandNotificationRegistrationToken
TI,R,N,V_basebandQueueDepth
TI,R,N,V_basebandTxBitrate
TI,R,N,V_bitrate
TI,R,N,V_blockSize
TI,R,N,V_bundleHeaderBytes
TI,R,N,V_bundledPackets
TI,R,N,V_capabilities
TI,R,N,V_captureFramerate
TI,R,N,V_codecSampleRate
TI,R,N,V_confidence
TI,R,N,V_countOfLowPrioritySamples
TI,R,N,V_evsSIDPeriod
TI,R,N,V_frameRate
TI,R,N,V_inputSampleRate
TI,R,N,V_inputSamplesPerFrame
TI,R,N,V_internalBundleFactor
TI,R,N,V_lastSentAudioSampleTime
TI,R,N,V_localSSRC
TI,R,N,V_maxBitrate
TI,R,N,V_maxTargetBitrate
TI,R,N,V_mediaControlInfoGeneratorType
TI,R,N,V_mediaType
TI,R,N,V_minBitrate
TI,R,N,V_minTargetBitrate
TI,R,N,V_mostBurstLoss
TI,R,N,V_numberOfPacketsInOutputQueue
TI,R,N,V_numberOfPacketsWaitingInOutputQueue
TI,R,N,V_nwNotificationProcessed
TI,R,N,V_operatingBitrate
TI,R,N,V_packetID
TI,R,N,V_probingLargeFrameSize
TI,R,N,V_probingSequencePacketCount
TI,R,N,V_probingSequencePacketSize
TI,R,N,V_rateChangeCounter
TI,R,N,V_redundancyPercentage
TI,R,N,V_reliableMessageResendInterval
TI,R,N,V_remoteBandwidthEstimation
TI,R,N,V_remoteCodecType
TI,R,N,V_rtpTimestampRate
TI,R,N,V_samplesPerBlock
TI,R,N,V_selectiveSharingPort
TI,R,N,V_sendTmmbrBitrate
TI,R,N,V_sessionToken
TI,R,N,V_sharedEstimatedBandwidth
TI,R,N,V_sharedEstimatedBandwidthUncapped
TI,R,N,V_sharedRemoteEstimatedBandwidth
TI,R,N,V_state
TI,R,N,V_streamGroupID
TI,R,N,V_targetBitrate
TI,R,N,V_tilesPerVideoFrame
TI,R,N,V_totalPacketReceived
TI,R,N,V_transportSessionID
TI,R,N,V_updateNumber
TI,R,N,V_usageMode
TI,R,N,V_utteranceNumber
TI,R,N,V_width
TI,R,N,V_worstRecentBurstLoss
TI,R,V_averagePacketDelayMs
TI,R,V_averageThroughputBps
TI,R,V_blocksRelayedCount
TI,R,V_datagramChannelToken
TI,R,V_encoderGroupID
TI,R,V_encodingHeight
TI,R,V_encodingWidth
TI,R,V_maxAllowedBitrate
TI,R,V_maxAllowedBitrate2G
TI,R,V_maxAllowedBitrate3G
TI,R,V_maxAllowedBitrateLTE
TI,R,V_maxAllowedBitrateP2P
TI,R,V_maxAllowedBitrateTCPRelay
TI,R,V_maxAllowedBitrateUSB
TI,R,V_maxAllowedBitrateWifi
TI,R,V_maxBitrate2GDownlink
TI,R,V_maxBitrate2GUplink
TI,R,V_maxBitrate3GDownlink
TI,R,V_maxBitrate3GUplink
TI,R,V_maxBitrateExpensiveDownlink
TI,R,V_maxBitrateExpensiveUplink
TI,R,V_maxBitrateNonExpensiveDownlink
TI,R,V_maxBitrateNonExpensiveUplink
TI,R,V_maxBitrateWiFiDownlink
TI,R,V_maxBitrateWiFiUplink
TI,R,V_maxMediaBitrate
TI,R,V_maxNetworkBitrate
TI,R,V_minNetworkBitrate
TI,R,V_packetDropCount
TI,R,V_qualityIndex
TI,R,V_receivedResponseCount
TI,R,V_reorderedPacketsCount
TI,R,V_repairMaxNetworkBitrate
TI,R,V_repairStreamID
TI,R,V_sentRequestCount
TI,R,V_streamGroupID
TI,R,V_targetBitrateCap
TI,R,V_targetFramerate
TI,R,V_token
TI,R,V_type
TI,R,VaudioCodecBitrate
TI,R,VconferenceID
TI,R,VnetworkBitrate
TI,R,VpacketsPerBundle
TI,R,VredMaxDelay20ms
TI,R,VredNumPayloads
TI,V_actualNetworkBitrate
TI,V_audioChannelIndex
TI,V_bitrate
TI,V_callID
TI,V_captureFrameRate
TI,V_clientTargetBitrate
TI,V_clientTargetBitrateCap
TI,V_downlinkBitrateCap
TI,V_endRTPTimeStamp
TI,V_lastSentAudioSampleTime
TI,V_localSwitches
TI,V_maxAveragePacketDelayMs
TI,V_micTimestamp
TI,V_negotiatedSwitches
TI,V_packetCountInNetworkQueue
TI,V_realRATType
TI,V_remoteCallID
TI,V_remoteSwitches
TI,V_speakerTimestamp
TI,V_startRTPTimeStamp
TI,V_timestamp
TI,V_uplinkAudioBitrateCapOneToOne
TI,V_uplinkBitrateCap
TI,V_uplinkBitrateCapOneToOne
TI,VactualAudioCodec
TI,VactualVideoCodec
TI,VcallID
TI,VlastActiveCall
TI,VlastReceived
TI,VpreferredAudioCodec
TI,VpreferredVideoCodec
TI,VremoteFrameHeight
TI,VremoteFrameWidth
TI,VtalkingPeersLimit
TQ,N,V_channelAwareOffset
TQ,N,V_cnPayloadType
TQ,N,V_customHeight
TQ,N,V_customWidth
TQ,N,V_cvoExtensionID
TQ,N,V_dtmfPayloadType
TQ,N,V_dtmfTimestampRate
TQ,N,V_fixedJitterBufferSize
TQ,N,V_framerate
TQ,N,V_hdrMode
TQ,N,V_idsParticipantID
TQ,N,V_initialMemoryUsageMB
TQ,N,V_keyFrameInterval
TQ,N,V_maxEncoderPixels
TQ,N,V_maxUDPPayloadSize
TQ,N,V_memoryUsageMB
TQ,N,V_networkAgentRefCount
TQ,N,V_networkClockID
TQ,N,V_ntpTime
TQ,N,V_numRedundantPayloads
TQ,N,V_pTime
TQ,N,V_preferredMediaBitRate
TQ,N,V_profileLevelId
TQ,N,V_ptime
TQ,N,V_recommendedMTU
TQ,N,V_remoteIDSParticipantID
TQ,N,V_rxMaxBitrate
TQ,N,V_rxMinBitrate
TQ,N,V_rxPayloadType
TQ,N,V_rxRedPayloadType
TQ,N,V_screenDisplayID
TQ,N,V_serializedSize
TQ,N,V_sourceFramerate
TQ,N,V_spatialAudioSourceID
TQ,N,V_statisticsID
TQ,N,V_tilesPerFrame
TQ,N,V_transactionID
TQ,N,V_txInitialBitrate
TQ,N,V_txMaxBitrate
TQ,N,V_txMinBitrate
TQ,N,V_txPayloadType
TQ,N,V_txRedPayloadType
TQ,R
TQ,R,N
TQ,R,N,V_idsParticipantID
TQ,R,N,V_spatialToken
TQ,R,V_budgetConsumingCellularRxBytes
TQ,R,V_budgetConsumingCellularTxBytes
TQ,R,V_mediaCellularRxBytes
TQ,R,V_mediaCellularTxBytes
TQ,R,V_mediaExcessiveCellularRxBytes
TQ,R,V_mediaExcessiveCellularTxBytes
TQ,R,V_mediaWifiRxBytes
TQ,R,V_mediaWifiTxBytes
TQ,R,V_serializedSize
TQ,R,V_signalingExcessiveCellularRxBytes
TQ,R,V_signalingExcessiveCellularTxBytes
TS,N,V_evsChannelAwareOffset
TS,N,V_idsStreamID
TS,N,V_ipVersion
TS,N,V_maxFrameDurationMillis
TS,N,V_parentStreamID
TS,N,V_port
TS,N,V_repairedStreamID
TS,N,V_rtcpRemotePort
TS,N,Vport
TS,R
TS,R,N
TS,R,N,V_connectionStatsStreamID
TS,R,N,V_evsChannelAwareIndicator
TS,R,N,V_evsChannelAwareOffset
TS,VmaxPacketLength
T^?,N,V_callback
T^?,N,V_didProcessSamplesCallback
T^?,V_updateRemoteCodecInfoCallback
T^AC,N,V_videoPriorityPointer
T^v,N
T^v,N,V_audioMediaControlInfoGenerator
T^v,N,V_callLogFile
T^v,N,V_controlInfoGenerator
T^v,N,V_didProcessSamplesCallbackContext
T^v,N,V_mediaControlInfoGenerator
T^v,N,V_metaData
T^v,N,V_videoMediaControlInfoGenerator
T^v,R,N,V_mediaControlInfoGenerator
T^v,V_updateRemoteCodecInfoContext
T^{?=^v^?^?},R,V_wrmContext
T^{OpaqueAudioConverter=},R,V_clientToRemoteConverter
T^{OpaqueAudioConverter=},R,V_remoteToClientConverter
T^{OpaqueCMBlockBuffer=},N
T^{PacketThread_s=},R,V_packetThread
T^{_VCAudioIOControllerClientIO=^v^?@III^{opaqueVCAudioBufferList}},R,N
T^{_VCAudioIOControllerIOState=BdIIdQ{_VCSingleLinkedList=^{_VCSingleLinkedListEntry}B^?Q}^{opaqueCMSimpleQueue}^{opaqueVCAudioLimiter}^{opaqueVCAudioBufferList}^{opaqueVCAudioBufferList}IQQ[40c]},R,N
T^{__CFDictionary=},N
T^{__CFString=},R,N
T^{__CVBuffer=},N,V_depthPixelBuffer
T^{opaqueRTCReporting=},N
T^{opaqueRTCReporting=},N,V_reportingAgent
T^{opaqueRTCReporting=},R,N
T^{opaqueVCAudioBufferList=},R,N,V_micBuffer
T^{opaqueVCAudioBufferList=},R,N,V_speakerBuffer
T^{opaqueVCRemoteImageQueue=},R,N,V_senderQueue
T^{tagCONNRESULT=IiiIiiSS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}IiiiiSiii^{tagCONNRESULT}i}
T^{tagCONNRESULT=IiiIiiSS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}IiiiiSiii^{tagCONNRESULT}i},R,V_connectionResult
T^{tagHANDLE=i},N,V_afrcHandle
T^{tagHANDLE=i},N,V_mediaQueue
T^{tagHANDLE=i},N,V_rtpHandle
T^{tagHANDLE=i},N,V_rtpVideo
T^{tagHANDLE=i},R,V_videoTransmitterHandle
T^{tagHANDLE=i},VhAFRC
T^{tagHANDLE=i},VhMediaQueue
T^{tagHANDLE=i},Vhandle
T^{tagHANDLE=i},VrtpHandle
T^{tagIPPORT=i[16c](?=I[16C])S},V_ipport
T^{tagSRTPINFO=ii{_opaque_pthread_mutex_t=q[56c]}{_opaque_pthread_cond_t=q[40c]}IISSIIQii[32C][14C][32C][14C][20C]{_opaque_pthread_mutex_t=q[56c]}^v^vII{os_unfair_lock_s=I}{tagSRTPCryptContext=^{_CCCryptor}}{tagSRTPTransformPolicy=iiiiiii}IB},R
T^{tagVCAudioFrameFormat={AudioStreamBasicDescription=dIIIIIIII}I},R,N
T^{tagVCAudioReceiver={tagVCAudioReceiverConfig=I[4{tagVCAudioReceiverStream=^{tagHANDLE}SBB^{tagVCCryptor}iB^{tagVCAudioReceiver}^v^v}]^vIiIiiB^{opaqueRTCReporting}iB^{__CFString}^{__CFString}SBBBBBiB^v^?^?^?^{tagVCJBTargetEstimatorSynchronizer}^v^vIBIiBBQB}^v^{opaqueVCJitterBuffer}B{tagVCAudioFrameFormat={AudioStreamBasicDescription=dIIIIIIII}I}d{?=qiIq}^{tagVCRealTimeThread}{tagVCAudioReceiverReportingTask=^{opaqueRTCReporting}i^{tagHANDLE}}BB{_opaque_pthread_mutex_t=q[56c]}{_opaque_pthread_mutex_t=q[56c]}{tagVCAudioDecoderList=^{tagDecoderSettings}I}I{tagVCAudioReceiverStatistics=AIIIIf}^{tagWRMMetricsInfo}^?{tagVCAudioReceiverCallbackContext=^v^?^?}^?{tagVCAudioReceiverCallbackContext=^v^?^?}I[2{_RTCPPacketList=(tagNTP=Q{?=II})C[10^{tagRTCPPACKET}]^{OpaqueCMBlockBuffer}*QI[1472C][12S]CBQ{?=^{_RTCPPacketList}}}]dI[300{tagPacketHistoryInfo=ISIBB}]SS{_opaque_pthread_mutex_t=q[56c]}^{tagVCAudioReceiverStream}SSdBSS{_VCAudioCodecModeChangeEvent=iiiI{EVSRFParams=II}}BSSSIBBQB^v^?^?^?^{tagVCJBTargetEstimatorSynchronizer}{tagVCJitterBufferWRMReportingMetrics=IIIIQQII}^vBdiddId^{tagVCAudioIssueDetector}iiIi^{tagVCAudioDump}{tagVCAudioDumpPayloadInfo=BiBB^{AudioStreamBasicDescription}}},R,VaudioReceiver
T^{tagVCAudioStreamGroupStream=^{tagVCAudioStreamGroupStream}BB^v^?S@II},R
T^{tagVCCellularAudioTapIORealtimeContext=q^{_VCAudioPowerSpectrumSourceRealtimeContext}},R,N
T^{tagVCCryptor=},N,V_sframeCryptor
T^{tagVCCryptor=},R,N,V_receiverSframeCryptor
T^{tagVCCryptor=},R,N,V_transmitterSframeCryptor
T^{tagVCJBTargetEstimatorSynchronizer=},N
T^{tagVCMediaQueue=},N,V_mediaQueue
T^{tagVCMediaQueue=},N,V_vcMediaQueue
T^{tagVCNWConnectionMonitor=},R,N,V_monitor
T^{tagVCSecurityKeyHolder=},N,V_securityKeyHolder
T^{tagVCVideoTransmitterStreamConfig=^{tagHANDLE}SiI^{tagVCCryptor}},R,N,V_streamConfigs
T^{tagWRMMetricsInfo=B^{tagHANDLE}IIIIIIIIIIIIQQQi^?{?=^v^?^?}{_opaque_pthread_mutex_t=q[56c]}IIIIIIIIIQIIIIII},R,V_wrmInfo
Td,N
Td,N,V_amplitude
Td,N,V_arrivalTime
Td,N,V_decryptionMKMRecoveryInterval
Td,N,V_decryptionTimeOutInterval
Td,N,V_departureTime
Td,N,V_emulatedRxPLR
Td,N,V_estimatedBandwidth
Td,N,V_estimatedBandwidthUncapped
Td,N,V_lastBasebandFlushCountChangeTime
Td,N,V_lastReceivedRTCPPacketTime
Td,N,V_lastReceivedRTPPacketTime
Td,N,V_loopLength
Td,N,V_maxFramerate
Td,N,V_maxOWRD
Td,N,V_mediaQueueThrottlingInterval
Td,N,V_minFramerate
Td,N,V_networkServiceTime
Td,N,V_preferredBlockSize
Td,N,V_preferredSampleRate
Td,N,V_rateControlInterval
Td,N,V_remoteCodecSampleRate
Td,N,V_rtcpSendInterval
Td,N,V_rtcpTimeOutInterval
Td,N,V_rtpTimeOutInterval
Td,N,V_startHostTime
Td,N,V_statsReportingInterval
Td,N,VdurationThresholdUpward
Td,N,VlastProbingSequenceTimeActual
Td,N,VlastProbingSequenceTimeExpect
Td,N,VnetworkConditionsTimeoutInSeconds
Td,N,VpacketLossRate
Td,N,VpacketLossRate5Secs
Td,N,Vpercentage
Td,N,VroundTripTime
Td,R
Td,R,N
Td,R,N,V_basebandExpectedQueuingDelay
Td,R,N,V_confidence
Td,R,N,V_lastVideoKeyFrameTime
Td,R,N,V_lastVideoRefreshFrameTime
Td,R,N,V_nowrd
Td,R,N,V_nowrdAcc
Td,R,N,V_nowrdShort
Td,R,N,V_owrd
Td,R,N,V_packetLossPercentage
Td,R,N,V_packetLossRate
Td,R,N,V_packetLossRateAudio
Td,R,N,V_packetLossRateVideo
Td,R,N,V_redundancyInterval
Td,R,N,V_referencePacketArrivalTime
Td,R,N,V_remoteCodecSampleRate
Td,R,N,V_roundTripTime
Td,R,N,V_tmmbRTT
Td,R,N,V_worstRecentRoundTripTime
Td,R,V_IOBufferDuration
Td,R,V_lastReceivedVideoRTCPPacketTime
Td,R,V_lastReceivedVideoRTPPacketTime
Td,R,V_noRemotePacketInterval
Td,R,V_remoteNoRemotePacketInterval
Td,V_lastDecodedFrameTime
Td,V_lastKeyFrameSentTime
Td,V_lastSentAudioHostTime
Td,V_localLinkTypeSuggestionChangeTime
Td,V_noRemoteDuplicationThresholdFast
Td,V_primaryConnHealthAllowedDelay
Td,V_roundTripTime
Tf,N
Tf,N,V_audioPosition
Tf,N,V_currentFrameTime
Tf,N,V_maxPacketsPerSecond
Tf,N,V_powerLevel
Tf,N,V_synchronizationTimeOffset
Tf,N,V_txIntervalMin
Tf,N,V_volume
Tf,N,VscaleFactor
Tf,R
Tf,R,N
Tf,R,N,V_audioPosition
Tf,R,N,V_frameRate
Tf,R,N,V_maxFrequency
Tf,R,N,V_minFrequency
Tf,R,N,V_powerLevel
Tf,R,V_clientDownlinkPowerMovingAverage
Tf,R,V_clientUplinkPowerMovingAverage
Tf,R,V_lastLastVideoStallDuration
Tf,V_micPowerRMS
Tf,V_renderProcessTime
Tf,V_speakerPowerRMS
Ti,N
Ti,N,V_aacBlockSize
Ti,N,V_accessNetworkType
Ti,N,V_audioFractionTier
Ti,N,V_basebandFlushCount
Ti,N,V_bundlingScheme
Ti,N,V_captureFrameRate
Ti,N,V_captureSource
Ti,N,V_captureSourceID
Ti,N,V_chosenRedPayloadType
Ti,N,V_configuration
Ti,N,V_configurationExtension
Ti,N,V_connectionType
Ti,N,V_content
Ti,N,V_controlChannelVersion
Ti,N,V_deviceRole
Ti,N,V_dtxPayload
Ti,N,V_effectType
Ti,N,V_effectsMode
Ti,N,V_encoderUsage
Ti,N,V_encodingMode
Ti,N,V_eventLogLevel
Ti,N,V_forcedCapBitrate
Ti,N,V_forcedTargetBitrate
Ti,N,V_hdrMode
Ti,N,V_imageType
Ti,N,V_injectAudioConfigType
Ti,N,V_jitterBufferMode
Ti,N,V_ltrAckFeedbackType
Ti,N,V_mode
Ti,N,V_oneToOneOperatingMode
Ti,N,V_operatingMode
Ti,N,V_operation
Ti,N,V_payload
Ti,N,V_preferredAudioCodec
Ti,N,V_preferredMode
Ti,N,V_primaryPayload
Ti,N,V_processID
Ti,N,V_processId
Ti,N,V_qualityIndicator
Ti,N,V_ratType
Ti,N,V_redPayload
Ti,N,V_remoteVideoInitialOrientation
Ti,N,V_reportingClientType
Ti,N,V_reportingParentID
Ti,N,V_sframeCipherSuite
Ti,N,V_signalStrengthBars
Ti,N,V_signalStrengthDisplayBars
Ti,N,V_signalStrengthMaxDisplayBars
Ti,N,V_socket
Ti,N,V_streamCount
Ti,N,V_tilesPerFrame
Ti,N,V_transport
Ti,N,V_transportProtocolType
Ti,N,V_vfdCancel
Ti,N,V_vfdMessage
Ti,N,V_videoCodec
Ti,N,V_videoPayload
Ti,N,V_videoSource
Ti,N,Vcamera
Ti,N,VchatMode
Ti,N,VdeviceRole
Ti,N,Vmargin
Ti,N,VminMarginRequired
Ti,N,VminSamplesCount
Ti,N,VminSamplesCountFastBandwidthEstimation
Ti,N,VnatType
Ti,N,VoperatingMode
Ti,N,Vorientation
Ti,N,VpacketsPerBundle
Ti,N,VpendingRelayCount
Ti,N,VprobingSequenceCount
Ti,N,VtotalLargeFrameWaste
Ti,R
Ti,R,N
Ti,R,N,V_actualAudioSendingBitrate
Ti,R,N,V_audioTxBitrate
Ti,R,N,V_bandwidth
Ti,R,N,V_bandwidthEstimationState
Ti,R,N,V_basebandFlushedAudioCount
Ti,R,N,V_basebandFlushedVideoCount
Ti,R,N,V_clientPid
Ti,R,N,V_currentActiveRequestsCount
Ti,R,N,V_currentPendingRequestsCount
Ti,R,N,V_deviceRole
Ti,R,N,V_payload
Ti,R,N,V_processId
Ti,R,N,V_redPayloadType
Ti,R,N,V_reportingClientType
Ti,R,N,V_reportingModuleID
Ti,R,N,V_rtcpPort
Ti,R,N,V_rtpPort
Ti,R,N,V_state
Ti,R,N,V_width
Ti,R,V_deviceRole
Ti,R,V_localWRMLinkTypeSuggestion
Ti,R,V_remoteWRMLinkTypeSuggestion
Ti,R,VlocalFrameHeight
Ti,R,VlocalFrameWidth
Ti,V_NATType
Ti,V_connectionType
Ti,V_maxConnectionMTU
Ti,V_mediaControlInfoVersion
Ti,V_operatingMode
Ti,V_priority
Ti,V_relayServerProvider
Ti,V_remoteVideoOrientation
Ti,VbandwidthDownstream
Ti,VbandwidthUpstream
Ti,VdeviceRole
Ti,VdownstreamBandwidth
Ti,VmaxConnectionMTU
Ti,VpreferredAudioCodec
Ti,VupstreamBandwidth
Tq,N
Tq,N,V_SRTCPCipherSuite
Tq,N,V_SRTPCipherSuite
Tq,N,V_accessNetworkType
Tq,N,V_audioStreamMode
Tq,N,V_captureSource
Tq,N,V_codecType
Tq,N,V_direction
Tq,N,V_preferredCodecRateMode
Tq,N,V_resolution
Tq,N,V_rxCodecType
Tq,N,V_screenToken
Tq,N,V_sessionMode
Tq,N,V_sourceToken
Tq,N,V_streamInputID
Tq,N,V_streamToken
Tq,N,V_subscriptionSlot
Tq,N,V_synchronizationSourceStreamToken
Tq,N,V_transportProtocolType
Tq,N,V_txCodecType
Tq,N,V_type
Tq,N,V_videoResolution
Tq,N,V_videoStreamMode
Tq,N,V_videoToken
Tq,R,N
Tq,R,N,V_accessNetworkType
Tq,R,N,V_codecType
Tq,R,N,V_highestEncodingResolution
Tq,R,N,V_inputAudioPowerSpectrumToken
Tq,R,N,V_negotiationMode
Tq,R,N,V_outputAudioPowerSpectrumToken
Tq,R,N,V_sessionToken
Tq,R,N,V_sourceType
Tq,R,N,V_streamInputID
Tq,R,N,V_streamToken
Tq,R,N,V_token
Tq,R,V_inputAudioPowerSpectrumToken
Tq,R,V_outputAudioPowerSpectrumToken
Tq,R,V_streamToken
Tq,V_sipState
Tq,VconnectionChangeState
Tq,VsampleRate
Tq,Vstate
Tq,VvideoPayload
Tr^{?=i[12C]},R,V_ipv6Prefix
Tr^{_VCRemoteCodecInfo=Id},N
Tr^{_VCRemoteCodecInfo=Id},R,N
Tr^{__CFAllocator=},R,N,V_sampleBufferAllocator
Tr^{__CFAllocator=},R,V_backingBufferAllocator
Tr^{opaqueCMFormatDescription=},R,N,V_formatDescription
Tr^{tagVCAudioFrameFormat={AudioStreamBasicDescription=dIIIIIIII}I},N
Tr^{tagVCAudioFrameFormat={AudioStreamBasicDescription=dIIIIIIII}I},R
Tr^{tagVCAudioFrameFormat={AudioStreamBasicDescription=dIIIIIIII}I},R,N
Tr^{tagVCAudioRelayIOContext=^{tagVCAudioFrameFormat}^{tagVCAudioFrameFormat}^?^v^{opaqueVCAudioBufferList}f{tagVCAudioClientControllerTimeInfo=IIBBdIIQ}},R
Tr^{tagVCSpatialAudioMetadataGlobalInfo=IffffffII},R,N
Tr^{tagVCSpatialAudioMetadataPositionalInfo=fffIII},R,N
T{?=@@},R,V_serverLinks
T{?=@},N,V_videoAttributes
T{?=I[5I]Id{CGSize=dd}dIdII},N,V_currentChannelMetrics
T{?=i^{__CFArray}^{__CFArray}^{__CFArray}IBBIBBB},V_config
T{?=qiIq},N,VframePresentationTime
T{?=qiIq},V_latestSampleBufferTimestamp
T{?=qiIq},V_time
T{AVCRateControlConfig=IIIIIIB^{tagVCRateControlAlgorithmConfig}I},R,N,V_configuration
T{AudioStreamBasicDescription=dIIIIIIII},N,V_inputFormat
T{AudioStreamBasicDescription=dIIIIIIII},N,V_outputFormat
T{AudioStreamBasicDescription=dIIIIIIII},R,N,V_format
T{CGRect={CGPoint=dd}{CGSize=dd}},N,VcontentsRect
T{CGSize=dd},N,V_resolution
T{CGSize=dd},N,V_size
T{CGSize=dd},N,Vratio
T{CGSize=dd},R,N
T{CGSize=dd},R,N,V_aspectRatioLandscape
T{CGSize=dd},R,N,V_aspectRatioPortrait
T{CGSize=dd},R,N,V_orientationMismatchAspectRatioLandscape
T{CGSize=dd},R,N,V_screenSize
T{VCInfoDetails=Bff{CGSize=dd}^{__CFDictionary}q@{VCOverlayAudioInfo=iiii}{VCOverlayVideoInfo=iiiiii}},V_currentDetails
T{VoiceIOFarEndVersionInfo=[64C][64C]I},N
T{_NSRange=QQ},R,N
T{_NSRange=QQ},R,N,V_range
T{_VCRange=ff},N,V_frequencyRange
T{_VCRange=ff},R,N
T{_VCSessionParticipantCapabilities=BIiB},N,V_capabilities
T{_VCSessionParticipantLocalOneToOneSettings=@@@@IIB},R,N,V_oneToOneSettings
T{tagAVCPositionalInfo=I{CGSize=dd}ddd},N
T{tagAVCRateControlExperimentConfig=ii},R,N
T{tagAVCSessionPresentationInfo={CGRect={CGPoint=dd}{CGSize=dd}}IIC},N
T{tagVCAudioFrameFormat={AudioStreamBasicDescription=dIIIIIIII}I},N,V_inputFormat
T{tagVCRateControlAlgorithmConfig=I^Iiii[2i]iiiiiiiiiiiddddddddddddddiiidddddddddddIIIIIBBBBBBBBBBBiBddididddidiiddidddddddddddddddddBdiiBiddddddIIdd},R,N
T{tagVCRateControlAlgorithmConfig=I^Iiii[2i]iiiiiiiiiiiddddddddddddddiiidddddddddddIIIIIBBBBBBBBBBBiBddididddidiiddidddddddddddddddddBdiiBiddddddIIdd},R,N,V_config
T{tagVCVideoReceiverConfig=I[9{tagVCVideoReceiverStreamConfig={tagVCVideoReceiverStreamIDInfo=SSSI[9S][9S]}^{tagHANDLE}^{__CFDictionary}BSCBB^{tagVCCryptor}^v^viBBBi}]iiqiiiIiiiiiiBBBBd^v^?^?^?^?^?^?^?QBSB^{tagWRMMetricsInfo}IBBBBBBBBBBBBB^vBBIBBS^{tagVCJBTargetEstimatorSynchronizer}^{__CFString}^{__CFString}IBBBiBB{tagVCNACKGeneratorStoreBagsConfig=CffB[4f][4f]}B},V_videoReceiverConfig
URLByAppendingPathExtension:
UTF8String
UUID
UUIDString
VCCCData
VCCCGetBytes:size:
VCCCLength
VCCCPayloadKey
VCCCString
VCIDSSessionInfoSynchronizer:sendVCIDSSessionInfoRequest:
VCSessionCaptionsErrorEvent:errorPath:returnCode:
VCSessionErrorEvent:errorPath:returnCode:
VCSessionParticipantErrorEvent:errorPath:
VCTransportStreamSendPacket:
VCTransportStreamUnblock
VCVideoFeatureListStringTypeWithAVCMediaStreamMode:
VTPConnectionContext
VideoOnlyVCCapabilities
_CFAvailable
_H264LevelAsymmetryAllowed
_H264PacketizationMode
_IOBufferDuration
_MKI
_NATCheckRetryCount
_NATCheckRetryDelay
_NATType
_NTPLeastSignificantWord
_NTPMostSignificantWord
_RTPTimestamp
_SIPDisabled
_SIPHandle
_SRTCPCipherSuite
_SRTPCipherSuite
_SRTPInfo
_SSRC
_UID
_WCMClient
_WRMClient
_WRMNotificationRequestTime
__imHexString
_aacBlockSize
_abSwitches
_abnormalNetworkDetected
_abnormalOWRDCount
_abnormalOWRDSampleCount
_accessNetworkType
_accessUnitDataSectionSize
_accessUnitHeaderInfo
_accumulatedTargetDataSize
_acknowledgement
_activeConfigurationCount
_activeNegotiator
_activeParticipants
_activeSize
_activeTemporalTierBitmap
_activeVideoMode
_activeVideoStreams
_activelyProbingLinkIDs
_actualAudioSendingBitrate
_actualBitrate
_actualNetworkBitrate
_actualSendBitrate
_adapter
_addWVGAEncodingRules
_adjustTimestamp
_afrc
_afrcHandle
_afrcRemoteEstimatedBandwidth
_aggregateStallTimeDuration
_aggregatedProbingResults
_algorithm
_algorithmConfigCache
_allClients
_allocateReq
_allocatedMediaEntriesForClients
_allocatedStreamIDs
_allocationResponseHandler
_allocationTimestamp
_allowAudioRecording
_allowAudioSwitching
_allowDuplication
_allowDynamicMaxBitrate
_allowLargePackets
_allowListedXPCObjects
_allowRTCPFB
_allowsContentsChangeWithAspectPreservation
_almostFullQueueSize
_alwaysOnAudRedEnabled
_amplitude
_anbrActive
_anbrEnabled
_appWindowRect
_areStatisticsRegistered
_areStreamsSuspended
_arrivalTime
_aspectRatioLandscape
_aspectRatioPortrait
_assertionRefCount
_assetWriter
_asyncProcessingQueue
_attachments
_attributes
_audio
_audioBasicDescription
_audioBasicDescriptionAudioCapture
_audioBasicDescriptionAudioQueue
_audioBufferAppendList
_audioBufferOutputList
_audioBundlePool
_audioBundler
_audioChannelCount
_audioChannelIndex
_audioConfiguration
_audioDucker
_audioDumpEnabled
_audioEnabled
_audioFeatures
_audioFileName
_audioFormat
_audioFractionTier
_audioFrameCounter
_audioHeaderSize
_audioIO
_audioIOController
_audioIOSampleRate
_audioInterval
_audioIsPaused
_audioIssueDetector
_audioIssueDetectorEnabled
_audioManager
_audioMuted
_audioOnlyBitrateToStreamIDsTable
_audioParameters
_audioPaused
_audioPausedToStart
_audioPayloadTypes
_audioPayloads
_audioPosition
_audioPowerSpectrumSource
_audioPriorityDecayFast
_audioPriorityDecaySlow
_audioPriorityRampUp
_audioRecorderQueue
_audioRedundancyChangeEventQueue
_audioRedundancyEventPool
_audioRules
_audioRulesNegotiated
_audioSampleBufferAllocator
_audioSendingBitrate
_audioSession
_audioSessionSinkMuted
_audioSettings
_audioSilencePowerAverageMultiplier
_audioSpectrumBinCount
_audioSpectrumRefreshRate
_audioStallBitrate
_audioStreamConfigurations
_audioStreamGroupConfig
_audioStreamMode
_audioStreamUpdateEventQueue
_audioStreamUpdatePool
_audioStreams
_audioTapIOMap
_audioTierChangeRequestCount
_audioTierHysteresis
_audioTierPicker
_audioTimestampRWLock
_audioTimestampRate
_audioTransmitter
_audioType
_audioUnitNumber
_audioUnitType
_audioVideoBitrateToStreamIDsTable
_avConferenceEffectsQueue
_avcOperatingMode
_avcRemoteVideoQueue
_averageBitrateLong
_averageBitrateMovingAverageFactor
_averageBitrateShort
_averageBitrateWindowDuration
_averageInputPower
_averageInterCallbackDuration
_averageOutputPower
_averagePacketDelayMs
_averageQueueDepth
_averageReceiveInterval
_averageReceivedBitrate
_averageRoundTripTime
_averageSendInterval
_averageSilenceAudioPower
_averageTargetBitrate
_averageThroughputBps
_awdTimeTransmitter
_backingBufferAllocator
_bandwidth
_bandwidthConfigurations
_bandwidthDivergeCount
_bandwidthEstimationState
_bandwidthEstimatorMap
_bandwidthSettings
_bandwithAllocationTable
_basePeriodCount
_basePeriodMs
_baseQualityIndex
_basebandAdaptationEnabled
_basebandAdditionalTiersForRampUp
_basebandAverageBitrate
_basebandAverageBitrateShort
_basebandCodec
_basebandCodecSampleRate
_basebandCongestionDetector
_basebandExpectedQueuingDelay
_basebandFlushCount
_basebandFlushTransactionID
_basebandFlushableQueueDepth
_basebandFlushedAudioCount
_basebandFlushedVideoCount
_basebandLTEOrGreaterRATSwitchTime
_basebandMetrics
_basebandNBDCD
_basebandNormalizedBDCD
_basebandNotificationArrivalTime
_basebandNotificationRegistrationToken
_basebandQueueDepth
_basebandRadioTechnology
_basebandTotalQueueDepth
_basebandTxBitrate
_bdcd
_bdcdList
_belowNoRampUpBandwidth
_bindingResponseHandler
_bins
_bitmapContext
_bitrate
_bitrateLimits
_blobVersion
_blockBufferMemoryPool
_blockSeconds
_blockSettingLock
_blockSize
_blocksRelayedCount
_boardId
_btNotificationHandlerIndex
_btNotificationHandlerLock
_budgentBufferIndex
_budgetBufferPktSize
_budgetBufferPktTime
_budgetBufferSize
_budgetInCaptureFrames
_bufferInfos
_bufferLength
_bufferPool
_bufferPoolDictionary
_bufferPoolResolution
_bufferQueue
_bufferQueueSemaphore
_bufferSize
_bundleHeaderBytes
_bundlingAppliedByCodec
_burstLossPacketCount
_burstPacketLoss
_burstyLoss
_burstyLossArrayIndex
_burstyLossArraySize
_bytesReceived
_bytesReceivedToReport
_bytesSent
_bytesSentToReport
_cName
_caDisplayLink
_caLayerHost
_cachedActiveVideoStreams
_cachedError
_cachedNegotiationData
_cachedRemoteVideoFrame
_callInfoBlob
_callLogFile
_callback
_callbackBlock
_callbackContext
_callbackDictLock
_callbackQueue
_callbacksDict
_cameraU1
_canDisplayCaptions
_canLocalResizePIP
_canRemoteResizePIP
_canSendPacket
_cannedVideoCapture
_cannedVideoHeight
_cannedVideoWidth
_cap2G
_cap3G
_cap5G
_capWifi
_capabilities
_captionsCoordinator
_captionsDecoder
_captionsDelegate
_captionsLastUpdateNumber
_captionsLastUtteranceNumber
_captionsReceiver
_captionsReceiverLanguages
_captionsSenderLanguages
_captionsSettings
_captureController
_captureConverter
_captureFrameRate
_captureFramerate
_captureHeight
_captureServer
_captureSource
_captureSourceID
_captureVideoRule
_captureWidth
_cdrxBundleInfoRef
_cellPrimaryInterfaceChangeEnabled
_cellularAllowRedLowBitratesEnabled
_cellularAssertionActive
_cellularAudioTap
_cellularTapTypeToStreamTokenMap
_cellularUniqueTag
_channelAwareOffset
_channelBReq
_channelCount
_channelIndex
_channelNumber
_channelSequenceCountWithInactiveSlots
_channels
_charQueue
_characterPool
_chosenAudioPayload
_chosenDTXPayload
_chosenRedPayloadType
_cipherSuite
_cleanupDeadClients
_cleanupDone
_clientAudioSessionQueue
_clientCaptureController
_clientContextList
_clientDirection
_clientDownlinkPowerMovingAverage
_clientFormat
_clientIO
_clientIOInfo
_clientList
_clientPID
_clientPid
_clientProcessID
_clientQueue
_clientTargetBitrate
_clientTargetBitrateCap
_clientToRemoteConverter
_clientUUID
_clientVersion
_clients
_cnEnabled
_cnPayloadType
_cname
_codec
_codecBandwidthMask
_codecConfigs
_codecConfigurations
_codecRateModeMask
_codecSampleRate
_codecSamplesPerFrame
_codecSupport
_codecType
_colorInfo
_completionHandler
_completionHandlers
_compoundStreamIDs
_computeInternalFormatForStreamConfigurations:
_confidence
_configuration
_configurationExtension
_configurationInProgress
_connectState
_connectedFD
_connection
_connectionArray
_connectionAttempts
_connectionDataTimeoutCondVar
_connectionForDuplication
_connectionForDuplicationNonProbingVersion
_connectionHealthMonitor
_connectionMTU
_connectionManager
_connectionQueue
_connectionResult
_connectionSelectionPolicy
_connectionSelectionPriorities
_connectionSelectionVersion
_connectionSelector
_connectionSetupPiggybackBlob
_connectionSetupRTTEstimate
_connectionStatsStreamID
_connectionTypeString
_connections
_consecutiveDroppedFrameCount
_consecutiveIdenticalQueryResultCount
_consecutiveIdenticalQueryResultMax
_consecutiveRampDown
_contectRect
_content
_context
_controlChannelVersion
_controlFeedbackParameter
_controlInfoArrivalTime
_controlInfoAudioPacketSize
_controlInfoAudioTimestamp
_controlInfoCameraStatus
_controlInfoFECLength
_controlInfoFrameExtensionData
_controlInfoGenerator
_controlInfoIsDuplicatePacket
_controlInfoLTRBits
_controlInfoLTRTimestamp
_controlInfoPool
_controlInfoPoolLock
_controlInfoProbe
_controlInfoReceivedKbits
_controlInfoReceivedPackets
_controlInfoSequenceNumber
_controlInfoVideoArrivalTime
_controlInfoVideoPacketSize
_controlInfoVideoTimestamp
_controllerClient
_controllerFormat
_conversationTimeBase
_conversationTimeBaseTruncated
_conversionRatio
_convertedFrameHandler
_convertedFrameHandlerContext
_coordinateSystem
_copyInputBytes:numInputBytes:payloadType:timestamp:
_copyPool
_copyTransferSession
_coreMotionManager
_coreMotionManagerDelegate
_correlation
_countOfLowPrioritySamples
_countPeriodicTaskUpdate
_cpuFamily
_cpuType
_creationTime
_cryptors
_cumulativePacketsLost
_currentActiveConnection
_currentActiveEstimatorID
_currentActiveRequestsCount
_currentActiveScreenShare
_currentAudioCap
_currentAudioPayload
_currentAudioSessionMediaProperties
_currentAudioTier
_currentAudioUnitProperties
_currentBundleVoiceActivity
_currentChannelMetrics
_currentConnectionType
_currentDTXEnable
_currentDTXPayload
_currentDuplication
_currentEncodeRule
_currentEventState
_currentFrameTime
_currentHistoryIndex
_currentHistorySize
_currentIndexForAQMRate
_currentIndexForDelay
_currentIndexForDelayDistribution
_currentIndexForLossPattern
_currentIndexForLossRate
_currentIndexForQueueSize
_currentIndexForServiceRate
_currentIndexForServiceRateDistribution
_currentLinkID
_currentLocalStatsIndex
_currentLossPatternShift
_currentMediaTimestamp
_currentNetworkNames
_currentParticipantGenerationCounter
_currentPauseCompleteTimestamp
_currentPayloadType
_currentPendingRequestsCount
_currentRSRP
_currentRateChangeCounter
_currentReceiveMKI
_currentReceivingStats
_currentRedPayloadType
_currentRedundancyInterval
_currentRedundancyPercentage
_currentSettings
_currentSpatialContext
_currentStatsHistoryIndex
_currentStreamID
_currentStreamSchedule
_currentTable
_currentTargetBitrate
_currentTierIndex
_currentTime
_currentTimestamp
_currentTranscription
_currentUplinkBLER
_currentUplinkTargetBitrate
_currentUplinkTotalBitrate
_currentVideoCaptureFrameRate
_currentZoomFactor
_currentlyReadingMessage
_customFeatureListStrings
_customHeight
_customVideoHeight
_customVideoWidth
_customWidth
_dataPath
_dataReceivedDelegate
_dataSessionID
_datagram
_datagramChannel
_datagramChannelToken
_datagramChannels
_datagramMetaDataPool
_datagramOptionsCached
_datagramPacketAllocator
_datagramPacketNextSequenceNumber
_datagramPackets
_datagramPacketsDirectIDSPath
_decodeFormats
_decodeHighDef
_decodeScore
_decoder
_decompressionSession
_decompressionSessionMutex
_decryptionErrorStartTime
_decryptionMKMRecoveryInterval
_decryptionTimeOutEnabled
_decryptionTimeOutInterval
_decryptionTimeoutEnabledTime
_defaultEstimator
_defaultTier
_delaySinceLastSR
_delegate
_delegateNotificationQueue
_delegateQueue
_delegateWeak
_departureTime
_depthPixelBuffer
_description
_destination
_destinationFramerate
_destinationHandler
_destinations
_deviationChangeCount
_deviceClass
_deviceID
_deviceName
_deviceRole
_deviceType
_dialogs
_didCacheAlgorithmConfig
_didConfigured
_didInitializeSuccessfully
_didProcessSamplesCallback
_didProcessSamplesCallbackContext
_didPullSamplesCallback
_didPullSamplesCallbackContext
_didReceiveFirstFrame
_didReceivePiggybackBlob
_didReceiveServerStatsResponse
_didReceiveVideo
_didRegisterPacketReceivedHandler
_didReportExtendedPoorConnection
_didScheduleReceive
_didSendCongestionEvent
_didServerDie
_didSubmitCCReliableDataNotReceivedSymptom
_didVideoStall
_directPathRTXQueue
_directPathReadQueue
_direction
_disableRemoteInterfaceInference
_dispatchQueue
_displayID
_displayLink
_displaySize
_doNotDropNackOrRetransmitted
_doRateControlCounter
_downlinkBandwidthAllocator
_downlinkBitrateCap
_downlinkCryptor
_downlinkMostRecentSendTimestamp
_downlinkQualityDidChange
_downlinkRateController
_downlinkServerStatsByteUsed
_downlinkStatisticsCollector
_downlinkTargetBitrate
_downlinkTargetCellBitrateCap
_dpiFactor
_dropLinkRecommendation
_droppedFrameCount
_dtmf
_dtmfPayloadType
_dtmfTimestampRate
_dtmfTonePlaybackEnabled
_dtxEnabled
_dtxPayload
_duplicateImportantPktsEnabled
_duplicateMessageOnServerLink
_duplicationCallback
_duplicationContext
_duplicationEnhancementEnabled
_duplicationHandler
_duplicationLinkID
_duplicationPending
_duplicationReason
_duplicationState
_dwRefreshFrameCounter
_dynamicStore
_dynamicVideoPriorityEnabled
_earlyBytesInProbingSequence
_earlyPacketsInProbingSequence
_earlyProbingPacketArrivalTime
_echoedTimestamp
_effectType
_effectsArray
_effectsMetadata
_effectsMode
_effectsRegistered
_emptyFramesToBeSent
_emulatedNetworkConfigPath
_emulatedRxPLR
_enableAggressiveProbingSequence
_enableAudioPowerSpectrum
_enableCVO
_enableCoreMotionDetection
_enableDNNVAD
_enableDuplication
_enableLocalVideoRecording
_enableLoopbackInterface
_enableMaxBitrateOnNoChangeCMR
_enableOneToOneMode
_enableReceiveBitstreamDump
_enableRedundancy
_enableStatsReceiveThread
_enableStatsReporting
_enableVADFiltering
_encodeBuffer
_encodeFormats
_encodeHighDef
_encodeScore
_encodedBufferSize
_encodedBytes
_encoder
_encoderBitrateAveragingInterval
_encoderInAudioDump
_encoderOutAudioDump
_encoderThread
_encoderUsage
_encodingArgPool
_encodingMode
_encodingType
_encodingWidth
_encryptionInfoReceived
_encryptionKeyRollTimer
_endRTPTimeStamp
_endToEndConnectionStatisticsHandlerIndex
_endToEndLinks
_errorDetailCode
_errorReponseCallback
_estimateTxAudioBytes
_estimatedBandwidth
_estimatedBandwidthCap
_estimatedBandwidthUncapped
_estimatedDataRate
_estimatedJitter
_estimatorMap
_eventHandler
_eventLogLevel
_evsChannelAwareIndicator
_evsChannelAwareOffset
_evsHeaderFullOnly
_evsSIDPeriod
_expMovMeanFactor
_expMovMeanRTT
_expectedBitrate
_expectedProcessEndTime
_expectedQueuingDelay
_expectedQueuingDelayLong
_experimentEnabled
_experimentGroupIndex
_extendedHighestSequenceNumber
_extendedRampUpFrozenExitTime
_externalIOFormat
_fNATCheckInProgress
_fNATCheckQueued
_fTimeout
_faceMeshTrackingEnabled
_faceTimeSettings
_faceTimeSwitches
_failedFrameCount
_fallbackTier
_farEndVersionInfo
_fastMediaDuplicationEnabled
_fastRampDownBitrateRange
_fastSuddenBandwidthDetectionEnabled
_favorNonCarrier
_featureListStringH264
_featureListStringHEVC
_featureString
_fecFeedbackVersion
_fecHeaderV1Enabled
_fecLevelPerFrameSizeVector
_fecRatio
_feedbackAnalyzer
_feedbackController
_feedbackMessageCount
_feedbackOutOfOrderTotalCount
_fieldName
_fieldNameMap
_fieldType
_fieldValue
_firSequenceNumber
_firstAudioBufferReceived
_firstBelowNoRampUpBandwidthTime
_firstDegradedMeasure
_firstDivergeTime
_firstFrameReceived
_firstLossEventRampDownTime
_firstMediaFrameGapDetected
_firstMediaKeyIndex
_firstMediaKeyIndexTime
_firstMediaPacketTime
_firstMessageIndex
_firstOWRDFrozenTime
_firstPacketReceived
_firstReceiveTime
_firstReceiveTimestamp
_firstSendTime
_firstSendTimestamp
_fixedJitterBufferSize
_flushDatagramPacketsLock
_followSystemInput
_followSystemOutput
_forceBitrate
_forceCaptureHeight
_forceCaptureWidth
_forceDisableBitrateCap
_forceDisableDuplication
_forceDisableMediaPriority
_forceEVSWideBand
_forceEncodeFramerate
_forceEncodeHeight
_forceEncodeWidth
_forceFixedEncryptionLabel
_forceFullBandwidth
_forceHandoverToCell
_forceKeyFrameInterval
_forceMinBitrate
_forceNetworkCellular
_forceQueueWaitTimeMs
_forceRecvVideoPayload
_forceRedundancyPercentage
_forceRemoteMKMMissing
_forceVideoPayload
_forceWiFiAssist
_forceWiFiAssistOutOfBudget
_forceZeroRegionOfInterestOrigin
_forcedAudioPriorityEnabled
_forcedAudioPriorityLastUpdateTime
_forcedAudioPriorityValue
_forcedCapBitrate
_forcedMaxBitrate
_forcedMaxBitrateFromTestMonitor
_forcedTargetBitrate
_forcedTargetBitrateFromTestMonitor
_formatDescription
_formatType
_formats
_formatsExt1
_formattedText
_fractionLost
_frameBuffer
_frameFormatSpeaker
_framePosition
_frameRate
_framerate
_framesPerBasePeriod
_framesPerIdrPeriod
_frameworkVersion
_freezeReason
_frequencyLevels
_frequencyMeteringEnabled
_gap
_generalInfo
_generateRequest:requestState:transactionID:timestamp:
_generatedStreamIDs
_getActiveWriters
_getCPUFamilyType
_getCPUTypeStringForMachineType:
_groupEntries
_groupID
_hAUIO
_hMediaQueue
_hRTP
_handler
_handlerArray
_handlerQueue
_handshakeEnabled
_handshakeOperationQueue
_handshakeStartTime
_hardwareScore
_hardwareSettings
_hardwareUsageModeSettings
_has
_hasAppleNeuralEngine
_hasAssertedCell
_hasBaseband
_hasBasebandInitialized
_hasNATCheckEnded
_hasNATCheckStarted
_hasPeerSubscribedStreams
_hasPendingChanges
_hasReceivedFirstFrame
_hasReceivedLastFrame
_hasRepairStreamID
_hasRepairedStreamID
_hasRepairedStreams
_hasSpaceAfter
_hash
_haveReportedPerfTimers
_hdrColorInfo
_hdrMode
_hdrModePixelFormats
_hdrModesNegotiated
_hdrModesSupported
_head
_headerSize
_healthStats
_heartbeat
_hiDefEncoding
_highestEncodingResolution
_history
_hostTime
_iRATDuplicationEnabled
_iRATNotificationRequestTime
_iSMBCount
_identifierSeeds
_identity
_idleDuration
_idsChannel
_idsChannelDataFormat
_idsParticipantID
_idsReadQueue
_idsReadSource
_idsSocket
_idsStreamID
_idsUPlusOneMode
_ignoreCarrierBundle
_ignoreNWConnectionMonitorNotification
_ignoreNatTypeCache
_ignoreSilence
_imageAttributeRules
_imageData
_imageType
_includeRedSequenceOffset
_includeSequenceOffset
_infoList
_initTime
_initUsingWifiTiers
_initialMemoryUsage
_initialMemoryUsageMB
_initialRampUpDeltaReported
_initialRampUpStartTime
_initialReceivedBytes
_initialSentBytes
_initialTargetBitrate
_initializeScreenDimension
_initializingParticipants
_injectAudioConfigType
_inputAudioPowerSpectrumSource
_inputAudioPowerSpectrumToken
_inputDevice
_inputDeviceMutex
_inputFFTMeter
_inputFormat
_inputMeter
_inputSampleRate
_inputSamples
_inputSamplesPerFrame
_interarrivalJitter
_interfaceInfoDictionary
_interfaceListener
_interfaceListenerDelegate
_interfaceName
_internalAudioPacketsPerSecond
_internalBundleFactor
_internalList
_internalReceiverQueue
_interruptThread
_interruptThreadClient
_interruptThreadState
_interruptingMutex
_intervalMilliseconds
_inviteDataRequested
_ipVersion
_ipv6Prefix
_isActive
_isAudioOnly
_isAudioStall
_isBDCDListReady
_isBWEDumpFileEnabled
_isBasebandEnabled
_isBasebandFlushing
_isBasebandQueuingDelayHigh
_isBluetoothDevice
_isCallActive
_isCaller
_isCellUp
_isCellular16x9Capable
_isClientInProcess
_isClientRegistered
_isCompoundStreamIDsIncreased
_isConfirmed
_isCongested
_isConnectedOnIPv6_LowestConnectionQuality
_isConnectedSocket
_isConnectionResultSet
_isControllerAudioFormatValid
_isControllerReset
_isCurrentDTXEnabled
_isDTXEnabled
_isDefaultMode
_isDegraded
_isDemuxNeeded
_isDuplicationAllowed
_isDuplicationAllowedForMediaDegraded
_isDuplicationEnabled
_isEffectsApplied
_isEncodingSqaures
_isEncryptionEnabled
_isEndRTPTimestampSet
_isEndToEndBasedBandwidthProbingEnabled
_isExtraDelayForPacketRetransmissionsEnabled
_isFECVersion2Enabled
_isFaceMeshTrackingEnabled
_isFarEndVersionInfoValid
_isFecGeneratorEnabled
_isFeedbackReceived
_isFinal
_isFirstBWEstimationReleased
_isFirstFrame
_isFirstInitialRampUpDone
_isFirstTimestampArrived
_isFlushed
_isForSimulation
_isG5
_isGKVoiceChat
_isGVAEncoderAvailable
_isGVAEncoderAvailableInitialized
_isHEIFAndHEVCFormatEnabled
_isHandshakeCommenced
_isHandshakeMode
_isInCanvas
_isInDaemon
_isInProcess
_isInThrottlingMode
_isInitialized
_isInputMeteringEnabled
_isLineIn
_isLocal
_isLocalCellular
_isLocalCellular_LowestConnectionQuality
_isLocalDelegated
_isLowLatency
_isLowLatencyAudio
_isLowestQuality
_isMapped
_isMediaPlaybackOnExternalDevice
_isMediaSuspended
_isMicrophoneMuted
_isMixingSystemAudio
_isMixingVoiceWithMediaEnabled
_isModel:
_isMultiwaySession
_isMuted
_isMutedTalkerNotificationRegistered
_isNWConnectionEnabled
_isNWConnectionMonitorEnabled
_isNWMonitorSignalEnabled
_isNackEnabled
_isNetworkCongested
_isNewRateSentOut
_isNoServerStatsIdleActivityReported
_isOWRDListReady
_isOffChannelActivityHigh
_isOnHold
_isOneToOne
_isOneToOneInitiator
_isOneToOneModeEnabled
_isOneToOneRemoteMediaStalling
_isOneToOneScreenEnabled
_isOperatingAtMaxBitrate
_isOperatingAtMinBitrate
_isOpusInBandFecEnabled
_isOutputMeteringEnabled
_isOvershoot
_isPacketLossIncreasing
_isPaused
_isPeriodicLoggingEnabled
_isPersistent
_isPowerSpectrumEnabled
_isPreWarmStateEnabled
_isPreviewRunning
_isPrewarmingClient
_isPrimaryLinkUsable
_isPrimaryLocalUsingCell
_isProbingLockedOut
_isProcessingVideoOptIn
_isQueueEmpty
_isRTCPFBEnabled
_isRTCPForLossFeedbackEnabled
_isRTCPUsable
_isRTPFilter
_isRTPFlushBasebandFromVCRateControl
_isRTPUsable
_isRampUpSettling
_isRateControlDumpFileEnabled
_isRateLimitedMaxTimeExceeded
_isReceiveKeysCleanUpPending
_isReconnectPending
_isRedEnabled
_isRedundancyControlEnabled
_isRedundancyEnabled
_isRedundancyRequested
_isRedundancyStrategyResetPending
_isRegisteredForRateSharing
_isRemoteAudioPaused
_isRemoteBandwidthEstimationStable
_isRemoteCellular_LowestConnectionQuality
_isRemoteCodecInfoValid
_isRemoteDelegated
_isRemoteDuplicating
_isRemoteMediaQualityDegraded
_isRemoteMediaStalled
_isRemoteMediaStalledShort
_isRemoteOSPreLion
_isRemoteOnPeace
_isRemotePreAzul
_isRemotePresentationLarge
_isRemoteVersionInfoValid
_isReportingAgentOwner
_isResumed
_isRunning
_isSRTPInitialized
_isSSRCCollisionDetectionEnabled
_isSecondary
_isSendBitrateLimited
_isSendKeysCleanUpPending
_isSenderProbingEnabled
_isServerBasedBandwidthProbingEnabled
_isServerPacketRetransmissionEnabled
_isServerPacketRetransmissionForVideoEnabled
_isServerRTxEnabled
_isServerStatsCached
_isSharedConnection
_isSiriVoicePlayoutSupported
_isSiriVoiceTapSupported
_isSourceParticipantIDOnFanOutPacketsEnabled
_isSpeakerPhoneEnabled
_isStable
_isStalled
_isStarted
_isStatisticChangeHandlerDictionaryModified
_isStreamInputCaptureSource
_isSubStream
_isSubstream
_isSupported
_isSuspended
_isTargetBitrateOscillating
_isTargetBitrateStabilized
_isTelephony
_isTemporalScalingEnabled
_isTemporalStream
_isThreadRunning
_isThrottling
_isUplink
_isUplinkRecentlyCongested
_isUseCaseWatchContinuity
_isUsingFrontCamera
_isUsingInternalStatisticsCollector
_isVADFilteringEnabled
_isVCMediaQueueScheduledForServerBasedStreams
_isValid
_isVariableSliceModeEnabled
_isVideoCaptureRegistered
_isVideoDegraded
_isVideoDegradedStartTime
_isVideoExpected
_isVideoPaused
_isVideoPausedByUser
_isVideoProtected
_isVideoQualityDegraded
_isVideoQualityNearDegraded
_isVideoStoppedByBaseband
_isVideoStoppedByVCRateControl
_isVideoSuspended
_isVirtualRelayLink
_isVisible
_isWRMNotificationPending
_isWRMinitialized
_isWaitingForBasebandRampDown
_isWarmedUp
_isWiFiAssistActive
_isWifiUp
_isWindowed
_isWrongParticipantIDOnFanOutPacketsEnabled
_jbSynchronizerPerSyncGroupID
_jbTargetEstimatorSynchronizer
_jitterBuffer
_jitterBufferMode
_jitterBufferModeSet
_jitterQueue
_keyFrameInterval
_keyFrameIntervalDuration
_keyIndexNotReceived
_keyManagerQueue
_keyMaterialNotUsedTimeout
_landscapeAspectRatioX
_landscapeAspectRatioY
_lastAbnormalOWRDVerificationTime
_lastActivePrimaryConnection
_lastAllowRampUpTime
_lastAudioEnoughRateTime
_lastAudioFractionChangeTime
_lastAudioPriority
_lastAudioSessionStart
_lastAudioStallFlushTime
_lastAveragedTime
_lastBadVideoQualityTime
_lastBasebandFlushAudioTime
_lastBasebandFlushCountChangeTime
_lastBasebandFlushVideoTime
_lastBasebandHighNBDCDTime
_lastBasebandNotification
_lastBasebandRampDownTime
_lastBundleVoiceActivity
_lastCalledApiName
_lastCameraStatusBits
_lastCongestionTime
_lastConnectionUnstableTime
_lastDecodedFrameQueue
_lastDecodedFrameTime
_lastDecodedVideoFrameTime
_lastDecryptionMKMRecoveryTime
_lastDecryptionTimeoutReportTime
_lastDefaultCheckTime
_lastDefaultSettingLoadingTime
_lastDefaultsReadTime
_lastDestinationFrameCount
_lastDisplayTime
_lastDisplayedFromImageQueueCount
_lastEmergencyBasebandRampDownTime
_lastEnqueuedStreamUpdateEventWasEmpty
_lastFIRArrivalTime
_lastFrameTime
_lastGoodVideoQualityTime
_lastHealthPrintTime
_lastHighNBDCDTime
_lastHistoryNotEnoughLogTime
_lastHostTime
_lastInputSampleBuffer
_lastInputSampleBufferSize
_lastIsTalking
_lastKeyFrameRequestStreamID
_lastKeyFrameRequestTime
_lastKeyFrameSampleBufferSize
_lastKeyFrameSentTime
_lastKeyIndexNotReceived
_lastLastVideoStallDuration
_lastLinkPreferenceUpdateNotificationTime
_lastLocalPortrait
_lastLossEventRampDownTime
_lastLossEventTime
_lastMediaPriority
_lastMediaStallReportTime
_lastMediaStallStartTime
_lastNWConnectionNotification
_lastNWStatistics
_lastNetworkHealthPrintTime
_lastNetworkQueueAQMRateLoadTime
_lastNetworkQueueDelayDistributionLoadTime
_lastNetworkQueueDelayLoadTime
_lastNetworkQueueLossPatternLoadTime
_lastNetworkQueueLossRateLoadTime
_lastNetworkQueueServiceRateDistributionLoadTime
_lastNetworkQueueServiceRateLoadTime
_lastNetworkQueueSizeLoadTime
_lastNetworkUnstableTime
_lastNoOvershootBWEstimationTime
_lastOWRDChangeTime
_lastPacketInProbingSequenceArrivalTime
_lastPacketReceiveCallbackTime
_lastPercentageChange
_lastPolicyLoadingTime
_lastPositiveOWRDTime
_lastPrimaryConnectionInUse
_lastPrintTimestamp
_lastProbingSequenceReferenceTimestamp
_lastProbingSequenceTimestamp
_lastProcessedBytesReceived
_lastProcessedBytesSent
_lastRTCPTimeoutReportTime
_lastRTPTimeoutReportTime
_lastRampDownTime
_lastRampDownTimeDueToBaseband
_lastRampDownTimeDueToFeedback
_lastRateChangeCounter
_lastReceivedDepthBuffer
_lastReceivedMKI
_lastReceivedPixelBuffer
_lastReceivedRTCPPacketTime
_lastReceivedRTPPacketTime
_lastReceivedTimestamp
_lastReceivedVideoRTCPPacketTime
_lastRecordedTargetBitrate
_lastRecordingTime
_lastRemoteAudioPresentationTime
_lastRemotePortrait
_lastReportFlushedAudioPacketCount
_lastReportFlushedVideoPacketCount
_lastReportedBandwidthEstimation
_lastReportedCarrierNATType
_lastReportedIndex
_lastReportedNATType
_lastReportedNonCarrierNATType
_lastReportingCallbackTime
_lastRequest
_lastSRTimestamp
_lastSampleBufferTime
_lastSampleCount
_lastSendDataTime
_lastSentAudioHostTime
_lastSentAudioSampleTime
_lastSentFrameHostTimeBeforeStop
_lastSentFrameRTPTimestampBeforeStop
_lastSentSourceHostTime
_lastSentSourceSampleTime
_lastSentTimestamp
_lastSentVideoHostTime
_lastSequenceNumber
_lastStatisticsCollectorVideoStallTotalUpdateTime
_lastStats
_lastStatsReportTime
_lastTimeBLERAboveRampUpThreshold
_lastTimeBLERBelowRampDownThreshold
_lastTimeDetectNoOscillation
_lastTimeReceiveStatsFailed
_lastTimeServerStatsActivityRecorded
_lastTimeStartRampingDown
_lastTimeSustainedHighDownlinkPacketLossReported
_lastTimeSustainedHighUplinkPacketLossReported
_lastTimeTargetBitrateOvershootRecorded
_lastTimeUnexpectedLowTargetBitrateRecorded
_lastTimeUnexpectedRampUpFrozenRecorded
_lastTimestamp
_lastTimestampForRemoteSendingFromNonPrimary
_lastTimestampPreferredRemoteInterfaceUpdated
_lastTimestampReceiveTime
_lastTimestampWithPacketDrop
_lastTransitTime
_lastTransitionToFECTime
_lastTriggerRateControlTime
_lastUpdateQualityIndicator
_lastUpdateTimestamp
_lastVideoEnabledChangedTime
_lastVideoExpectationSwitch
_lastVideoKeyFrameTime
_lastVideoPresentationTime
_lastVideoPriority
_lastVideoQualityDegradedSwitchTime
_lastVideoRefreshFrameTime
_lastVideoTimestamp
_lastiRATCheckTime
_latencySensitiveMode
_latencySensitiveModeEnabled
_latestPrimaryPayload
_latestReceiveKeyIndex
_latestSampleBufferTimestamp
_latestSendKeyIndex
_layerHostMode
_lines
_linkConfidenceScore
_linkContext
_linkFlags
_linkIPPreference
_linkPreferDecision
_linkPreferSuggestion
_linkPreferSuggestionFromDefaults
_linkPreferenceOrder
_linkProbingCapabilityVersion
_linkProbingConnectionLockdownPeriod
_linkProbingDuplicationWaitTimeout
_linkProbingHandler
_linkProbingHandlerDelegate
_linkProbingInterval
_linkProbingLockdownPeriod
_linkProbingQueryResultsInterval
_linkProbingResultConfig
_linkProbingState
_linkProbingTimeout
_localAddress
_localAudioBuffer
_localAudioInput
_localAudioQueue
_localBandwidthEstimation
_localCallID
_localCellTech
_localConnectionData
_localConnectionStats
_localFormat
_localFrameworkVersion
_localInterfaceType
_localLinkTypeSuggestionChangeTime
_localOnWiFi
_localParticipant
_localParticipantID
_localPublishedStreams
_localRATTypeOverride
_localRelayConnectionData
_localRelayRequestResponse
_localRelayUpdate
_localSSRC
_localSessionStatsTimemoutSource
_localSettings
_localSourceNeedsReset
_localStats
_localSwitches
_localVideoAttributes
_localWRMAlertFromDefaults
_localWRMLinkTypeFromDefaults
_localWRMLinkTypeSuggestion
_lock
_logBWEDump
_logBasebandDump
_logDump
_logFeedbackDump
_logNWDump
_logPrefix
_loggingLock
_loopLength
_loopbackConnection
_lossEventBandwidthConfidence
_lossEventBandwidthLimit
_lossEventBuffer
_lossEventBufferIndex
_lowFpsVideoEnabled
_lowNetworkModeEnabled
_ltrAckFeedbackType
_ltrpEnabled
_machineName
_machineType
_marketingName
_masterTransactionID
_maxActiveScreenEncoders
_maxAllowedAudioOnlyBitrate2G
_maxAllowedAudioOnlyBitrate3G
_maxAllowedAudioOnlyBitrateLTE
_maxAllowedBitrate
_maxAllowedBitrate2G
_maxAllowedBitrate3G
_maxAllowedBitrateHighRat
_maxAllowedBitrateIPadCompanionUSB
_maxAllowedBitrateLTE
_maxAllowedBitrateP2P
_maxAllowedBitrateTCPRelay
_maxAllowedBitrateUSB
_maxAllowedBitrateWifi
_maxAllowedScreenShareBitrateLTE
_maxAllowedScreenShareBitrateWifi
_maxAudioLocalBurstyLoss
_maxAveragePacketDelayMs
_maxBandwidth
_maxBitrate
_maxBitrate2GDownlink
_maxBitrate2GUplink
_maxBitrate3GDownlink
_maxBitrate3GUplink
_maxBitrateExpensiveDownlink
_maxBitrateExpensiveUplink
_maxBitrateNonExpensiveUplink
_maxBitrateWiFiDownlink
_maxBitrateWiFiUplink
_maxBurstyLoss
_maxChannelCount
_maxChannelCountMic
_maxChannelCountSpeaker
_maxConcurrentVideoClients
_maxConnectionMTU
_maxDelay
_maxDetectableBandwidth
_maxEncoderPixels
_maxFrameDurationMillis
_maxFramerate
_maxFrequency
_maxIDSStreamIdCount
_maxMediaBitrate
_maxMediaStallTime
_maxNetworkBitrate
_maxOWRD
_maxOverRangePacketsCount
_maxPacketSize
_maxPacketsPerSecond
_maxPtime
_maxQueueSize
_maxReceivedRate
_maxRedundancyPercentage
_maxScreenCaptureSize
_maxSentRate
_maxStatsTransportStreamQueueTime
_maxSupportedCaptureFrameRate
_maxSupportedMultiwayCameraFrameRate
_maxSupportedMultiwayVideoResolution
_maxSupportedTemporalLayers
_maxTargetBitrate
_maxTierIndex
_maxUDPPayloadSize
_maxVideoLocalBurstyLoss
_maxZoomFactor
_maxiBitrateIPadCompanionP2P
_mediaBlobCompressed
_mediaBlobNegotiated
_mediaCellularRxBytes
_mediaCellularTxBytes
_mediaControlInfoCallbacksRegistered
_mediaControlInfoFECFeedbackVersion
_mediaControlInfoGenerator
_mediaControlInfoGeneratorOptions
_mediaControlInfoGeneratorType
_mediaControlInfoSubVersion
_mediaControlInfoVersion
_mediaController
_mediaControllerDelegate
_mediaDegradedHistories
_mediaDegradedHistoryIndices
_mediaDegradedThreshold
_mediaExcessiveCellularRxBytes
_mediaExcessiveCellularTxBytes
_mediaFlags
_mediaHealthStatisticsHandlerIndex
_mediaLines
_mediaNegotiator
_mediaNegotiatorMap
_mediaPriorityInfo
_mediaQueue
_mediaQueueThrottlingInterval
_mediaStallCount
_mediaStallTotalTime
_mediaState
_mediaStateMutex
_mediaStates
_mediaStreamAccessNetworkType
_mediaStreamDelegate
_mediaStreamDelegateQueue
_mediaStreamInfoArray
_mediaStreamMode
_mediaStreamSynchronizer
_mediaStreamSynchronizerQueue
_mediaStreamTransportProtocolType
_mediaStreamTransportType
_mediaStreams
_mediaSubtype
_mediaTable
_mediaType
_mediaTypeForBuffer:
_mediaTypeSettingsDict
_mediaTypeToSpatialAudioMetadataEntryMap
_mediaTypeToSpatialMetadataEntryMap
_mediaTypeToSpatialSourceIDMap
_mediaWifiRxBytes
_mediaWifiTxBytes
_memoryUsageMB
_message
_messageQueue
_messageReceivedDelegate
_messenger
_metaData
_metadata
_metadataGlobalInfo
_metadataInput
_metadataPositionalInfo
_metricsConfig
_mhrtz
_micBuffer
_micContext
_micPowerRMS
_micStreamGroups
_micTimestamp
_microphoneMuted
_microphoneU1
_minBitrate
_minEstimationWindowDuration
_minFramerate
_minFrequency
_minNetworkBitrate
_minPacketsCount
_minProbingSequenceSize
_minProbingSpacingAggressive
_minReceivedRate
_minSentRate
_minSentRequestCountThreshold
_minTargetBitrate
_minTierIndex
_mismatchedDisplayAspectRatioX
_mismatchedDisplayAspectRatioY
_mixingVoiceWithMediaEnabled
_mode
_modelName
_modelRevision
_modelVersion
_moitors
_moments
_momentsCollectorDelegate
_momentsImageTypes
_momentsQueue
_momentsSettings
_momentsVideoCodecs
_monitor
_monitoringAvailable
_monitors
_mostBurstLoss
_mostRecentTimestamp
_multiplexedConnection
_multiwayAudioStreams
_multiwayBitrateArbiter
_multiwayCapabilities
_multiwayVideoStreams
_muted
_mutex
_nackGeneratorStorebagConfigVersion
_natCheckGroup
_natCheckNetNameSema
_natCheckQueue
_needsPacketThread
_negotiatedAudioSettings
_negotiatedCaptionsSettings
_negotiatedFaceTimeSettings
_negotiatedMomentsSettings
_negotiatedScreenEnabled
_negotiatedScreenSettings
_negotiatedSettings
_negotiatedStreamGroups
_negotiatedSwitches
_negotiatedSystemAudioResults
_negotiatedVideoEnabled
_negotiatedVideoSettings
_negotiationDone
_negotiationMode
_negotiationProtocolMask
_negotiatorSettings
_network
_networkAgent
_networkAgentRefCount
_networkElementQueue
_networkFeedbackController
_networkInterfaceName
_networkInterfaceType
_networkMTU
_networkQueue
_networkQueueA
_networkQueueAQMRate
_networkQueueB
_networkQueueDelay
_networkQueueDelayMean
_networkQueueDelayStdDev
_networkQueueLossPattern
_networkQueueLossRate
_networkQueueMaxSize
_networkQueueServiceRate
_networkQueueServiceRateMean
_networkQueueServiceRateStdDev
_networkReceiveThread
_networkServiceTime
_networkStatisticsType
_newOWRDSampleCollected
_nextExpectedSampleTime
_nextMessageIndex
_nextToken
_nextWakeUpHostMachTime
_nextWakeUpInterval
_noRemoteDuplicationThresholdFast
_noRemotePacketInterval
_noServerStatsDownlinkNwActivity
_noServerStatsUplinkNwActivity
_nonCarrierInterfacesOnly
_normalizedDelay
_notificationArrivalTime
_notificationDelegate
_notificationHandler
_notificationMutex
_notificationQueue
_notifyDelegateVideoAttributeChanges
_notifyToken
_nowrd
_nowrdAcc
_nowrdAccRampDownThreshold
_nowrdAccRampUpThreshold
_nowrdRampDownThreshold
_nowrdRampUpThreshold
_nowrdShort
_ntpTime
_numBufferedSamples
_numPayloads
_numProcessors
_numRedundantPayloads
_numStatsDroppedDueToLinkID
_numStatsDroppedDueToStatsID
_numStatsDroppedDueToTooLate
_numStatsProcessed
_numStatsTriggeredForDownlink
_numStatsTriggeredForUplink
_numberOfPacketsInOutputQueue
_numberOfPacketsWaitingInOutputQueue
_nwActivity
_nwActivityActiveSession
_nwConnectionAvgDelay
_nwConnectionAvgThroughput
_nwConnectionMaxThroughput
_nwConnectionMonitorQueue
_nwConnectionOverDelayThresholdCount
_nwConnectionRateTrendSuggestion
_nwMonitor
_nwMonitorHandlerIndex
_nwMonitorInterfaceName
_nwMonitorLock
_nwNotificationProcessed
_octetAligned
_octetsSent
_offChannelTimeRatio
_offer
_onDemand
_oneToOneBitrateArbiter
_oneToOneControlInfoGenerator
_oneToOneEnabled
_oneToOneFeedbackController
_oneToOneModeEnabled
_oneToOneModeSupported
_oneToOneOperatingMode
_oneToOneSettings
_oneToOneSwitchStartTime
_oneToOneVideoEnabled
_opaqueData
_opaqueStream
_operatingBitrate
_operatingMode
_operatingTierIndex
_operation
_optInDictionary
_optIntoExistingSubscribedStreams
_optedInStreamID
_optionBitmap
_optionalPackedPayload
_orientationMismatchAspectRatioLandscape
_osVersion
_outAudioBitrate
_outOfOrderCount
_outVideoBitrate
_outputAudioPowerSpectrumToken
_outputAvailable
_outputDevice
_outputDeviceMutex
_outputFormat
_outputHeight
_outputQueue
_outputThread
_outputThreadClient
_outputURL
_outputWidth
_overRangePacketsCount
_owrd
_owrdEstimator
_owrdList
_pTime
_packedPayload
_packetBuffer
_packetBufferDataSize
_packetBurstLoss
_packetCount
_packetCountInNetworkQueue
_packetDatagramOptions
_packetDriver
_packetDropCount
_packetDropCountPerFrame
_packetEventHandler
_packetExpirationTime
_packetExpirationTimeInMillisecond
_packetFilter
_packetFlags
_packetHandler
_packetHandlerContext
_packetID
_packetLossPercentage
_packetLossPercentageAudio
_packetLossPercentageDecreaseThresholds
_packetLossPercentageIncreaseThresholds
_packetLossPercentageThreshold
_packetLossPercentageVideo
_packetLossRate5Secs
_packetLossRateAccum
_packetLossRateAudio
_packetLossRateAvgLong
_packetLossRateAvgLongAtLBAStart
_packetLossRateAvgLongPrevious
_packetLossRateBadTrendCount
_packetLossRateCount
_packetLossRateThreshold
_packetLossRateVideo
_packetPushedCondition
_packetReceivedOWRD
_packetReceivedVideo
_packetRelayService
_packetSizes
_packetThread
_packetThreadStartWithClientFormat:
_packetThreadStop
_packetType
_packetTypeForNetworkQueueLossPattern
_packetsPerBundle
_packetsSent
_parameterSet
_parameterSets
_parentNWActivity
_parsingDone
_participantConfig
_participantData
_participantGenerationCounter
_participantID
_participantId
_participantInfo
_participantMKMRecoveryTimeout
_participantMediaStallNwActivity
_participantPoorConnectionNwActivity
_participantQueue
_participantStreamTokens
_participantUUID
_participantsToAdd
_payload
_payloadBufferHistory
_payloadBufferHistoryIndex
_payloadFlags
_payloadHistoryCount
_payloadInfo
_payloadOctetAligned
_payloadPreference
_payloadSize
_payloadSpecOrPayloads
_payloadType
_payloadUsed
_payloads
_peerProtocolVersion
_peerPublishedStreamCallback
_peerPublishedStreams
_peerStateRWLock
_peerStatsHistory
_peerSubscribedStreamCallback
_peerSubscribedStreams
_pendingActiveUplinkStreams
_pendingKeyFrameGenerationStartTime
_pendingPrimaryConnection
_pendingRequests
_pendingSecondaryConnection
_pendingStreamsUpdated
_pendingVideoAttributesUpdateOnModeChange
_pendingVideoStreams
_perfTimers
_perfTimings
_periodicHealthPrintDispatchSource
_periodicReportingEnabled
_pid
_pixelBuffer
_pixelFormat
_pixelFormatCollections
_pixelFormats
_pixelTransferSession
_playbackMode
_plrBuckets
_plrEnvelope
_plrEnvelopeAttackFactor
_plrEnvelopeDecayFactor
_plrEnvelopeValue
_plrTier
_policies
_poolQueue
_popCompletionHandler
_port
_portraitAspectRatioX
_portraitAspectRatioY
_powerLevel
_powerSpectrumMeter
_powerSpectrumMetersForCellularTapType
_powerSpectrumSource
_powerSpectrumStreamToken
_preWarmCellEnabled
_preferRelayOverP2PEnabled
_preferRelayOverP2PReason
_preferredAudioCodec
_preferredAudioPayload
_preferredBlockSize
_preferredCodecRateMode
_preferredDevice
_preferredFormat
_preferredFormatExt1
_preferredIOSampleRate
_preferredIOSamplesPerFrame
_preferredLocalInterfaceForDuplication
_preferredMediaBitRate
_preferredMediaBitrate
_preferredMode
_preferredRemoteInterfaceForDuplication
_preferredSampleRate
_preloadQueue
_presentationInfo
_presentationState
_prevOperatingTierIndex
_previousAverageBitrate
_previousNOWRD
_previousNoRemoteInProgress
_previousOptedInStreamID
_previousPacketLossRate
_previousProcessTime
_previousRTPTimestamp
_previousReceiveTimestamp
_previousReceiveTimestampDiff
_previousRoundTripTime
_previousSendTimestamp
_previousSendTimestampDiff
_previousStatistics
_previousStatisticsArrivalTime
_previousTierIndex
_previousTimestamp
_previousTimestampDiff
_previousTotalPacketReceived
_previousTotalPacketSent
_primaryCameraLayer
_primaryCameraSubLayer
_primaryConnHealthAllowedDelay
_primaryConnection
_primaryLinkID
_printSampleBufferDetailsEnabled
_priority
_probability
_probingLargeFrameSize
_probingLargeFrameSizeCap
_probingLockdownTimer
_probingLockoutStartTime
_probingSequencePacketCount
_probingSequencePacketSize
_probingStartTime
_processCompleteHandler
_processID
_processId
_processedFramesCount
_productType
_profileLevel
_prominenceIndex
_prunePendingReceiveKeys
_pruneTimer
_ptime
_ptpWakeUpTime
_publishedStreams
_pullAudioSamplesCount
_pushCompletionHandler
_qualityIndex
_qualityIndexToTableEntry
_qualityIndicator
_queryProbingResultsTimer
_queue
_queueBandwidthAlgorithm
_queueDelayAlgorithm
_queueEmptyCondition
_queueFullCounter
_queueLossAlgorithm
_queueMutex
_queueNotEmptyCondition
_queueNotFullCondition
_queueProcessWaitTimeMs
_queuesForStreamTokenDict
_queuingDelayTimestamp
_radioAccessTechnology
_rampDownBWDropEnabled
_rampDownLossEventBitrateThreshold
_rampDownLossEventCountThreshold
_rampDownLossRateThreshold
_rampDownOWRDThreshold
_rampDownPacketLossRate
_rampDownRoundTripTime
_rampDownSuppressionBitrateThreshold
_rampUpFrozenDuration
_rampUpFrozenTime
_rampUpPacketLossRate
_rampUpSettleDuration
_rampUpStatus
_rampUpStatusRateLimitedThreshold
_range
_ratType
_rateAdaptationEnabled
_rateChangeCounter
_rateChangeSystemTime
_rateControl
_rateControlAlgorithm
_rateControlConfig
_rateControlCounter
_rateControlFeedbackSource
_rateControlInterval
_rateControlTime
_rateControllerDelegate
_rateControllerDelegateWeak
_rateSharingClientMap
_rateSharingCount
_readFDsForCallback
_readHandler
_readHandlerWithOptions
_readSource
_readyToReadBlock
_realRATType
_realtimeContext
_realtimeSPI
_receiveDelegate
_receiveKeys
_receiveMediaKey
_receiveTimestamp
_receiveTimestampSpikeDetected
_receiveTimestampWrappedAround
_receivedByteCount
_receivedBytes
_receivedFirstFrame
_receivedFirstPacket
_receivedFirstRemoteFrame
_receivedFrameCount
_receivedPacketCount
_receivedResponseCount
_receivedTmmbnBitrate
_receiverQueue
_receiverSframeCryptor
_receivingEndToEndStream
_recentAverageTier
_recentTierWindow
_recentTierWindowIndex
_recentTierWindowSize
_recommendedSettings
_recomputeCurrentTable
_redBuilder
_redEnabled
_redMaxDelay20ms
_redPayload
_redPayloadBufferToSend
_redPayloadToSend
_redundancyController
_redundancyControllerDelegate
_redundancyControllerMaxDelay20ms
_redundancyControllerMode
_redundancyControllerNumPayloads
_redundancyEnabled
_redundancyEnabledFor720Stream
_redundancyInterval
_redundancyPercentage
_referencePacketArrivalTime
_referencePacketDataSize
_registeredBlocksQueue
_registeredConnection
_registeredStreamTokens
_registeredUUIDServiceBlocks
_registrationLock
_reinitEncoderOnFrameSizeChangeEnabled
_relay
_relayConnectionID
_relayFormat
_relayIOType
_relayLock
_relayServerProvider
_relayThread
_relayType
_relayUpdateDict
_reliableMessageResendInterval
_remoteAddress
_remoteAlertInfo
_remoteAudioBuffer
_remoteAudioEnabled
_remoteAudioInput
_remoteAudioPaused
_remoteAudioPowerLevelMonitor
_remoteAudioQueue
_remoteBandwidthEstimation
_remoteBasebandCodec
_remoteBasebandCodecSampleRate
_remoteBlobCreationTime
_remoteBlobVersion
_remoteCallID
_remoteCallInfoBlob
_remoteCanDisplayCaptions
_remoteCodecInfo
_remoteCodecSampleRate
_remoteCodecType
_remoteConnectionData
_remoteConnectionStats
_remoteDeviceName
_remoteEndpointInfo
_remoteExpectedLandscapeAspectRatio
_remoteExpectedPortraitAspectRatio
_remoteFaceTimeSwitchesAvailable
_remoteFormat
_remoteFrameworkVersion
_remoteIDSParticipantID
_remoteIO
_remoteIOInfo
_remoteIPPort
_remoteIPPortLength
_remoteInterfaceType
_remoteLanguages
_remoteLinkFlags
_remoteLinkProbingCapabilityVersion
_remoteMediaStallDisconnectTimeout
_remoteMediaStallReconnectTimeout
_remoteMediaStallTimeout
_remoteMediaState
_remoteMediaStates
_remoteNoRemotePacketInterval
_remotePacketReceivedAudio
_remotePacketReceivedVideo
_remoteParticipantID
_remoteParticipants
_remoteParticipantsMapByServerID
_remoteParticipantsMapByUUID
_remotePreWarmStateEnabled
_remotePresentationState
_remoteQueue
_remoteRelayConnectionData
_remoteRelayRequestResponse
_remoteRelayUpdate
_remoteSSRC
_remoteScreenAttributes
_remoteScreenEnabled
_remoteScreenEnabledStateChanged
_remoteScreenLandscapeAspectRatio
_remoteScreenPortraitAspectRatio
_remoteStats
_remoteStreamGroupStateUpdateTimer
_remoteSupportsExpectedAspectRatio
_remoteSystemAudioPaused
_remoteToClientConverter
_remoteUserAgent
_remoteVideoAttributes
_remoteVideoCamera
_remoteVideoEnabled
_remoteVideoInitialOrientation
_remoteVideoMirrored
_remoteVideoOrientation
_remoteVideoPaused
_remoteWRMLinkTypeSuggestion
_removeRulesGreaterThan720p
_removeRulesGreaterThanVGA
_renderProcessTime
_reorderGap
_reorderedPacketsCount
_repairMaxNetworkBitrate
_repairMediaTable
_repairedMaxNetworkBitrate
_repairedStreamID
_reportLinkPreferSuggestion
_reportReportFrequency
_reportToken
_reportUpdateInterval
_reportedSourceSSRC
_reportingAgentStrong
_reportingAgentWeak
_reportingClientType
_reportingHierarchyToken
_reportingInterval
_reportingIntervalStartTime
_reportingIntervals
_reportingLastUpdateTime
_reportingModuleID
_reportingParentID
_reportingSSRCCount
_reportingSSRCList
_reqRespDict
_requestTimestampAndRTTList
_requestedAudioTier
_requestedSettings
_requesteeID
_requesterID
_requests
_requireEncryptionInfo
_requireTileIndexAttachment
_requiredPackedPayload
_requiresWiFi
_reservedBitrate
_resetAverageBitrateLong
_resetJ92EncodingRulesForCameraIsHD:isWVGA:is1080:
_resetMediaHealthStats
_resetSendRTPTimestampOnStop
_resolution
_retainPixelBufferEnabled
_rootQueues
_rotationAngle
_rotationSession
_roundTripTime
_roundTripTimeMilliseconds
_roundTripTimeMinEnvelope
_roundTripTimeTick
_rssiThreshold
_rtcpConnectionID
_rtcpContext
_rtcpEnabled
_rtcpEnabledBeforeInterrupt
_rtcpFlags
_rtcpHeartbeatCancelled
_rtcpIPPort
_rtcpIPPortLength
_rtcpPSFB_FIREnabled
_rtcpPSFB_LTRAckEnabled
_rtcpPSFB_PLIEnabled
_rtcpPacketsCallback
_rtcpPort
_rtcpRTPFB_GNACKEnabled
_rtcpReceiveCallbackEnabled
_rtcpReportProvider
_rtcpSREnabled
_rtcpSendHeartbeat
_rtcpSendInterval
_rtcpTimeOutEnabled
_rtcpTimeOutInterval
_rtcpTimeoutEnabledTime
_rtcpVFD
_rtcpXREnabled
_rtpConnection
_rtpConnectionID
_rtpEnabledBeforeInterrupt
_rtpEventDuration
_rtpHandle
_rtpIPPort
_rtpIPPortLength
_rtpId
_rtpPayload
_rtpPort
_rtpSSRC
_rtpSampleRate
_rtpTimeOutEnabled
_rtpTimeOutInterval
_rtpTimeoutEnabledTime
_rtpTimestampBase
_rtpTimestampRate
_rtpVideo
_rttMonitorHandlerIndex
_rules
_runLoop
_runNetworkReceiveThread
_running
_runningClient
_rxCodecFeatureListString
_rxCodecFeatureListStrings
_rxCodecType
_rxMaxBitrate
_rxMinBitrate
_rxPayloadMap
_rxPayloadType
_rxRedPayloadType
_sRecvReset
_sampleBuffer
_sampleBufferAllocator
_sampleBufferCount
_sampleBufferDelegateCallback
_sampleBufferDelegateCallbackContext
_sampleBufferDelegateCallbackLock
_sampleBufferHandler
_sampleMap
_sampleRate
_samplesPerBlock
_samplesPerFrame
_savedWRMNotification
_sbr
_sccontext
_schedulerCell
_schedulerGroups
_schedulerWifi
_screenCaptureClients
_screenCaptureDisplayID
_screenDisplayID
_screenEnabled
_screenHeight
_screenLayer
_screenPixelCount
_screenRes
_screenRuleCollections
_screenSSRC
_screenSize
_screenToken
_screenWidth
_sdpUsername
_secondaryCameraLayer
_secondaryCameraSubLayer
_secondaryConnReceivedSequenceNumberStats
_secondaryConnection
_secondaryPayloads
_secureMessagingRequired
_securityKeyHolder
_securityKeyManager
_segments
_selectedRedPayloads
_selectedSettings
_selectiveScreenUUID
_selectiveSharingPort
_sendActiveVoiceOnly
_sendBitrateLimitedStartTime
_sendBitrateStartTime
_sendDelegate
_sendGroupConfigForMode
_sendHistory
_sendKeys
_sendMediaKey
_sendTimestampSpikeDetected
_sendTimestampWrappedAround
_sendTmmbrBitrate
_senderLanguages
_senderLargeFrameInfo
_senderQueue
_sendingStreamID
_sentAudioBytesShort
_sentByteCount
_sentBytes
_sentPacketCount
_sentRequestCount
_sequenceNumberOutOfOrder
_sequentialKeyMaterialQueue
_serialQueue
_serializationQueue
_serverBag
_serverBagDict
_serverBasedConnectionStatisticsHandlerIndex
_serverIPPort
_serverLinks
_serviceName
_sessionActive
_sessionArray
_sessionDict
_sessionID
_sessionId
_sessionInfoRequestBytesUsed
_sessionInfoResponseBytesUsed
_sessionInfoSynchronizer
_sessionMessaging
_sessionMode
_sessionQueue
_sessionStartTime
_sessionStatsController
_sessionToken
_sessionUUID
_sessions
_settingsU1
_sframeCipherSuite
_sframeCryptor
_shareProfileDictionary
_sharedEstimatedBandwidth
_sharedEstimatedBandwidthUncapped
_sharedWriteCompletionHandler
_shortAverageLag
_shouldApplyRedAsBoolean
_shouldBlockRampUpForNWConnection
_shouldBlockWhenFull
_shouldConvertSourceRTPTimestamp
_shouldCreateMediaControlInfoGenerator
_shouldCreateRedundancyController
_shouldDisableLargeFrameRequestsWhenInitialRampUp
_shouldDisplayVideoInfoLayer
_shouldEnableFaceZoom
_shouldEnableMLEnhance
_shouldFinishHandshake
_shouldGenerateKeyFrame
_shouldIgnoreRTPHeaderExtensions
_shouldProcessMessageImmediately
_shouldProcessMessageOnExternalThread
_shouldRegisterMediaControlInfoGeneratorCallbacks
_shouldReportWRMMetrics
_shouldReset
_shouldResize
_shouldScheduleMediaQueue
_shouldScreenCapEncoderCount
_shouldSendFeedbackControllerReport
_shouldSendPacket
_shouldSetupNWMonitor
_shouldSetupStreams
_shouldSkipIDRScheduler
_shouldSuppressRampDown
_shouldSynchronizeWithSourceRTPTimestamps
_shouldUpdateRemoteScreenAttributes
_shouldUseExitHysteresis
_shouldUseRedAsBoolean
_shouldUseXPC
_signalStrengthBars
_signalStrengthDisplayBars
_signalStrengthMaxDisplayBars
_signalingExcessiveCellularRxBytes
_signalingExcessiveCellularTxBytes
_silenceFrameCounter
_sinkBuffer
_sinkBufferMix
_sinkContext
_sinkCount
_sinkData
_sinkDelegate
_sinkList
_sinkMutex
_sinkProc
_sinkStarted
_sipState
_siriSpatialAudioSourceID
_size
_slotsForModes
_sortedEntries
_sortedEntriesForStreamToken
_sortedMediaEntries
_sourceBuffer
_sourceContext
_sourceData
_sourceFrameCount
_sourceFramerate
_sourceIO
_sourceNames
_sourcePlayoutHandler
_sourcePlayoutHandlerLock
_sourcePlayoutSampleRTPTimestamp
_sourcePlayoutSampleSystemTime
_sourceRTPTimestampWraps
_sourceSampleRate
_sourceStarted
_sourceState
_sourceTimestampRWLock
_sourceToken
_sourceType
_sourceUID
_sources
_spatialAudioDisabled
_spatialAudioDisabledLastUpdateTime
_spatialAudioRegistered
_spatialAudioSourceID
_spatialContexts
_spatialMetadata
_spatialMetadataEntry
_spatialMetadataEntryMap
_spatialStreamDescriptions
_spatialToken
_speakerBuffer
_speakerPowerRMS
_speakerProcsCalled
_speakerTimestamp
_ssrc
_stabilizationTime
_startCompletionBlock
_startCompletionHandler
_startConnectionHealthMonitoring
_startHostTime
_startOnDemand
_startRTPTimeStamp
_startTime
_startedSessions
_startingIOClients
_startingParticipants
_state
_stateCacheForCallID
_stateCacheForStreamTokenDict
_stateLock
_stateMutex
_stateQueue
_stateRWLock
_stateRWlock
_stateStrings
_statisticChangeHandlerDictionary
_statisticChangeHandlerDictionaryCache
_statisticRegistrationIndexNWConnection
_statisticRegistrationIndexNetwork
_statistics
_statisticsArrivalTime
_statisticsCollection
_statisticsCollectionLock
_statisticsCollector
_statisticsHandler
_statisticsID
_stats
_statsArrayIndex
_statsHistory
_statsHistorySize
_statsNoResponseCounter
_statsReceiveThread
_statsRecorder
_statsReportingInterval
_statsRequestCounter
_statsResponseCounter
_stopCompletedSemaphore
_stopCompletionBlock
_stopError
_stopVTPReceiveThread
_stoppingParticipants
_streamConfig
_streamConfigs
_streamCount
_streamGroup
_streamGroupConfigs
_streamGroupConfigurations
_streamGroupID
_streamGroupIDToStreamTokenMap
_streamGroupMode
_streamGroups
_streamID
_streamIDGenerator
_streamIDToEntryTable
_streamIDToMediaStreamMap
_streamIDs
_streamIDsCell
_streamIDsWifi
_streamIndex
_streamInfoMap
_streamInput
_streamInputCaptureSource
_streamInputConfigurations
_streamInputID
_streamInputIDString
_streamInputIDToCaptureSourceIDMap
_streamInputQueue
_streamInputs
_streamLock
_streamOutput
_streamOutputDelegate
_streamOutputLock
_streamOutputSourceForStreamToken
_streamOutputs
_streamScheduleCell
_streamScheduleWifi
_streamSubscriptionLock
_streamToActualNetworkBitrate
_streamToMaxNetworkBitrate
_streamToPause
_streamToken
_streamTokenEntries
_streamTokenList
_streamTokenToEnableMap
_streamTokenToTableEntryMap
_streams
_streamsPendingKeyFrameGeneration
_strictlyUnarchivedObjectOfClasses:fromData:error:
_subStreamConfigs
_subscribedStreams
_subscribedStreamsByParticipantID
_subscribedStreamsRetryCount
_subscribedTo
_subscriptionSlot
_suddenChangeBandwidthBuffer
_suddenChangeBandwidthBufferIndex
_suddenChangeParameters
_sumOverShootSendBitrate
_sumOverUtilizedBandwidth
_sumPLRVideo
_sumUnderShootSendBitrate
_sumUnderUtilizedBandwidth
_sumWorstRecentBurstLoss
_summerHandle
_supportDuplication
_supportFlags
_supportVCPDecoderHEVC
_supportVCPEncoder
_supportVCPEncoderHEVC
_supportVCPEncoderInitialized
_supportedAudioPayloads
_supportedAudioRules
_supportedBandwidths
_supportedBitrates
_supportedCodecs
_supportedImageTypes
_supportedNumRedundantPayload
_supportedPayloads
_supportedVideoCodecs
_supportedVideoFormats
_supportsAdaptation
_supportsCodecBandwidthUpdate
_supportsDynamicMaxBitrate
_switchManager
_switches
_syncDestinationChangeEventQueue
_syncDestinationList
_syncGroupID
_syncSource
_syncTargetCalled
_syncUpdateCalled
_synchronizationDelegate
_synchronizationSourceStreamToken
_synchronizationTimeOffset
_systemAudioCaptureSession
_systemAudioConfiguration
_table
_tail
_tapSettings
_targetBitrate
_targetBitrateCap
_targetBitrateChangeCounter
_targetBitrateContinuous
_targetBitrateIsAudioOnly
_targetFramerate
_tcpTunnelClient
_telephonyInterface
_tempReceivingStats
_temporalScalingBaseLayerStreamID
_temporalScalingEnabled
_temporalStreamsIDs
_temporaryMaximumBitrate
_terminateEncoderThread
_terminationHandler
_text
_textFramesSendQueue
_textFramesSendQueueLock
_textReceiver
_textStream
_textTransmitter
_thermalPressureLevel
_throttleRate
_tierNetworkBitrate
_tierTablesForRedNumPayloads
_tilesPerFrame
_tilesPerVideoFrame
_time
_timeLastPLR5Secs
_timeoutHeartbeat
_timeoutMutex
_timeoutTimer
_timeoutTimerContext
_timeoutTimerQueue
_timeoutTimerStarted
_timer
_timestamp
_timestampInitialized
_timestampWrapAroundCounter
_tmmbRTT
_tmmbnReceiveTime
_tmmbrSendTime
_token
_tokenManager
_tokenManagerQueue
_toneInjectionEnabled
_topic
_totalActualBitrate
_totalBytesInProbingSequence
_totalBytesReceived
_totalKeyFramesSent
_totalMBLRampDownCount
_totalNumFramesProcessed
_totalNumFramesReceived
_totalPacketReceived
_totalPacketSent
_totalPacketsInProbingSequence
_totalPacketsReceived
_totalPacketsSent
_totalStatsTransportStreamQueueTime
_totalSuddenBandwidthDropCount
_totalTierNumbersInWindow
_totalTime
_totalTxAudioBytes
_transaction
_transactionDone
_transactionID
_transactionLock
_transactions
_transferSession
_transmitROC
_transmitterMode
_transmitterQueue
_transmitterSframeCryptor
_transport
_transportDelegate
_transportProtocolType
_transportSession
_transportSessionID
_transportSetupInfo
_transportStream
_transportStreamInfo
_transportType
_txBitrate
_txCodecFeatureListString
_txCodecFeatureListStrings
_txCodecType
_txInitialBitrate
_txIntervalMin
_txMaxBitrate
_txMinBitrate
_txPayloadMap
_txPayloadType
_txRedPayloadType
_type
_u1Config
_uiLayout
_uiState
_unixSocket
_unknownKeyIndexList
_updateNumber
_updateRemoteCodecInfoCallback
_updateRemoteCodecInfoContext
_upgradeQualityTiers
_uplinkAudioBitrateCapOneToOne
_uplinkBandwidthAllocator
_uplinkBandwidthAllocators
_uplinkBitrateCap
_uplinkBitrateCapCell
_uplinkBitrateCapOneToOne
_uplinkBitrateCapWifi
_uplinkClient
_uplinkCryptor
_uplinkCryptorLock
_uplinkMediaController
_uplinkMostRecentSendTimestamp
_uplinkOperatingBitrate
_uplinkRateAdaptationMaxAllowedBitrate
_uplinkRateController
_uplinkServerStatsByteUsed
_uplinkStatisticsCollector
_uplinkTargetBitrate
_uplinkVideoStreamController
_usageMode
_use96Tier
_useAverageQueueDepthForDelay
_useBTNotificationMonitor
_useChannelDataFormat
_useCompressedConnectionData
_useExternalIO
_useExternalThread
_useFigRemoteQueue
_useIDSLinkSuggestionFeatureFlag
_useInBandFEC
_useInBandFec
_useLoopback
_useLowPrecisionEchoTimeStamp
_useMediaDrivenDuplication
_useMediaDrivenDuplicationFeatureFlag
_useNWConnectionNotification
_usePacketThread
_usePreNegotiation
_useRandomTS
_useReducedSizeRTCP
_useScreenCaptureKitForAudio
_useSineWave
_useUINT16
_useVideoJitterForVideoPlayout
_useWiFiTiers
_useWifiTiers
_userAgent
_usingOptions
_usingServerBasedLinks
_utteranceComplete
_utteranceNumber
_uuid
_vadSegmentCounter
_vcMediaCallback
_vcMediaQueue
_vcMoments
_vcMomentsCollectorDictionary
_vcWifiAssist
_vcpInitializedForHEVC
_vcpSupportsHEVCEncoder
_vcrcRateController
_version
_vfdCancel
_vfdMessage
_video
_videoAttributes
_videoCapture
_videoCaptureSource
_videoCodec
_videoDegradedThreshold
_videoEnabled
_videoEncoderType
_videoFeatureStrings
_videoFeatures
_videoFlushTransactionID
_videoFrozenDuration
_videoHDRMode
_videoHeight
_videoImprovedThreshold
_videoInput
_videoIsExpected
_videoMinFrameRate
_videoNearDegradedThreshold
_videoOnlyBitrateToStreamIDsTable
_videoPacketAllocator
_videoPacketBuffer
_videoParameterSet
_videoPaused
_videoPausedToStart
_videoPayload
_videoPayloadCollections
_videoPayloadType
_videoPayloadTypes
_videoPayloads
_videoPlayerHandle
_videoPositionalInfo
_videoPriority
_videoPriorityEnabled
_videoPriorityPointer
_videoQuality
_videoQueue
_videoRTP
_videoReceiver
_videoReceiverConfig
_videoReceiverHandle
_videoRedundancyChangeEventQueue
_videoRedundancyController
_videoRedundancyPool
_videoRefreshFramePacketCount
_videoRefreshFrameTimestamp
_videoResolution
_videoRule
_videoRuleCollections
_videoSSRC
_videoSendingBitrate
_videoSettings
_videoSinkDelegate
_videoSource
_videoSourceTokens
_videoStallDurationMillis
_videoStallStartTime
_videoStreamConfigurations
_videoStreamDelegate
_videoStreamGroups
_videoStreamIdToRepairStreamIdMap
_videoStreamMode
_videoStreamReceiverQueue
_videoStreams
_videoTimestampWrapCount
_videoToken
_videoTransmitter
_videoTransmitterHandle
_videoWidth
_visibilityIndex
_visibleHeight
_visibleWidth
_voiceDetector
_vpEnableSpatialChat
_vpOperatingMode
_vpOperatingModeToAudioSessionMediaFormatMapping
_vpioFormat
_vtableC
_vtpCallbackId
_vtpCancelSocket
_vtpDestinationLength
_vtpReceiveSocket
_vtpReceiveTID
_vtpSocket
_vtpWrapper
_waitCondition
_waitMutex
_waitToBeNominated
_waitToRunSemaphore
_wakeUpCondition
_wakeUpMutex
_weakDelegate
_weakSelf
_weakStream
_weakTransactionDelegate
_weightFactor
_width
_wifiAssistState
_wifiNonAVCTxMediaBitrate
_wifiTxMediaBitrate
_withBTCoex
_worstRecentBurstLoss
_worstRecentRoundTripTime
_writeBuf
_writeDatagramBlock
_writeDatagramsBlock
_writeDirectPathIDSLock
_writeSource
_writeSourceSuspended
_writerMode
_writers
_wrmCallbacksContext
_wrmClient
_wrmClientDelegate
_wrmContext
_wrmHandler
_wrmInfo
_wrmPendingBitrateCapDelta
_wrmReportingInterval
_wrmStatusUpdateCallback
_xMBs
_xNATCheck
_xpcCallbackQueue
_xpcCommandQueue
_xpcConnection
_xpcQueue
_xpc_add_connection_to_list:
_xpc_get_connection_from_list_for_connection:
_xpc_get_connection_from_list_for_context:
_xpc_get_connections_from_list_for_context:
_xpc_handle_incoming_request:
_xpc_remove_connection_from_list:
_xpc_remove_connections_from_list
_xpc_start_listening_for_connections
_zoomAvailable
aacBitrate
aacBlockSize
abSwitches
abnormalOWRDCount
accessNetworkType
accessUnitDataSectionHead
accessUnitHeaderSectionSize
accessUnitHeaderSectionSizeMaximum
accumulateStatsForPeriodicTaskUpdate
activate
activateBackground:
activateSpatialContext:shouldApplySpatialMetadata:
activateStartingClient:applyControllerFormat:
activeConference
activeConnectionRegistry
activeControlChannel
activeDownlinkStreamIDForStreamGroupID:
activeRequestCount
activeSize
activeStreamID
activeStreamKeys
activeVideoStreams
activelyProbingLinkIDs
actualAudioChannelCountWithDefaultConfig:
actualAudioCodec
actualAudioSendingBitrate
actualBitrate
actualMaxNetworkBitrateWithDefaultConfig:
actualMaxRepairedNetworkBitrateWithDefaultConfig:
actualMetadataWithDefaultConfig:
actualNetworkBitrate
actualNetworkBitrateForStreamGroup:
actualNetworkBitrateWithAudioBitrates:
actualQualityIndexWithDefaultConfig:
actualStreamIndex
actualVideoCodec
addActiveParticipant:participantUUID:withConfiguration:
addAssertion
addAttribute:
addAudioPayload:
addAudioPayload:isSecondary:
addAudioPayload:isSecondary:sbr:
addAudioRule:
addAudioRules:
addAudioTapForStreamToken:tapType:error:
addBDCDListWithNotificationArrivalTime:bdcd:queuingDelay:
addBandwidthAllocationTableEntry:
addBandwidthAllocationTableEntry:updateNow:
addBandwidthConfiguration:
addBandwidthConfigurations:
addBandwidthSettings:
addBandwidthSettingsForMediaBlob:operatingMode:connectionType:maxBitrate:
addCallInfoBlobToParticipantInfo:
addCellularAssertion
addClient:
addCodec:
addCodecConfiguration:
addCodecModesForPayload:toCodecConfig:
addConnection:
addCustomFeatureListString:payload:
addDatagramChannelWithDescriptor:eventHandler:error:
addDatagramChannelWithDescriptor:eventHandler:writeCompletionHandler:error:
addDatagramChannelWithDestination:eventHandler:dataPath:error:
addDatagramChannelWithDestination:eventHandler:error:
addDatagramChannelWithDestination:eventHandler:writeCompletionHandler:dataPath:error:
addDelegate:
addDuplicationConnectionUpdateTelemetryWithSuggestedLinkTypeCombo:payload:
addDuplicationSelectionLogicTelemetryForConnection:suggestedLinkTypeCombo:payload:
addEntriesFromDictionary:
addFeatureString:payload:
addFrame:time:
addGKSCallEvent:sessionID:
addHDRModeSpecificSettings:
addImageAttributeRules:transportType:payload:direction:attributeString:
addInfoListWithNotification:
addInput:
addLinkProbingTelemetry:
addLocalAudioSample:timestamp:
addLocalCallInfoBlobToOutgoingDictionary:
addLocalCallInfoToInviteDictionary:
addLocalVideoSampleBuffer:cameraStatusBits:timestamp:
addMediaControlInfoOption:
addMediaHealthStatsHistoryEntryForParticipantID:
addMediaInformationAssertion:
addMediaLine:mediaType:
addMediaPacketToBuffer:length:datagramOptions:
addMediaStreamInfo:
addMultiwayAudioStream:
addMultiwayAudioStreams:
addMultiwayVideoStream:
addNSError:toConferenceXPCArgumentDictionary:
addNSError:toXPCArgumentDictionary:
addNegotiatedHDRMode:
addNewKeyMaterial:
addNewRTT:packetLossRate:timestamp:
addObject:
addObjectsFromArray:
addObserver:forKeyPath:options:context:
addObserver:selector:name:object:
addObserverForName:object:queue:usingBlock:
addOneToOneParticipant:
addOneToOneStreamConfigToMediaStreamInfo:negotiatorStreamGroupConfig:
addOptionalTopic:
addPacketToBudgetBuffer:
addParameterSet:payload:
addParticipant:controlChannelProtocolVersion:
addParticipantConfigurations:
addParticipants:
addPayload:
addPayload:audioStreamConfig:supportedAudioRules:
addPayload:rtpMap:formatParameters:
addPayloads:
addPixelFormat
addPixelFormatSet:
addPointer:
addResult:forCallID:
addRuleForBitrate:connectionType:limitingRule:
addRuleForVideoPayload:withDirection:width:height:frameRate:priority:interface:
addRxCodecFeatureListString:codecType:
addRxPayloadType:
addRxPayloadType:networkPayload:
addScreenConfigToSDP:
addSecondaryPayload:
addSecurityKeyMaterial:
addSegment:
addSegments:
addSink:
addStartingClient:controllerSettings:
addStickerWithURL:isFaceSticker:atPosition:identifier:
addStream:
addStreamConfig:
addStreamGroupConfig:
addStreamGroupID:
addStreamGroups:
addStreams:
addSubStreamConfig:
addSublayer:
addSupportedNumRedundantPayload:
addSupportedPayload:
addSyncDestination:
addSyncDestination:shouldSchedule:
addSyncSourceToVideoStreamConfig:sourceStreamToken:error:
addTableEntry:
addTelemetryForConnection:dictionary:
addTimer:forMode:
addToReceivedStats:
addToRunLoop:forMode:
addTokenWithString:confidence:range:
addTopic:associatedStrings:allowConcurrent:receiveHandler:
addTopic:associatedStrings:allowConcurrent:requireReliable:sendMessageDictionaryCompletionHandler:receiveMessageDictionaryHandler:
addTopic:associatedStrings:allowConcurrent:sendCompletionHandler:receiveHandler:
addTopic:associatedStrings:allowConcurrent:sendMessageDictionaryCompletionHandler:receiveMessageDictionaryHandler:
addTxCodecFeatureListString:codecType:
addTxPayloadType:
addTxPayloadType:networkPayload:
addUUIDToMutableData:fromUUIDString:
addVideoConference:
addVideoImageAttr:ForPayload:
addVideoPayloadCollections:
addVideoRuleCollections:
addVideoRules:encodingType:payload:videoRuleCollections:
addVideoRules:transportType:payload:encodingType:
addWifiRules:cellularRules:payload:direction:
additionalFlushCountToOneToOneRateController:
addressPointerFromBlob:
adjustBitrateForConnectionType
adjustFaceBounds:fromOriginalBufferSize:toCroppedBufferSize:
adjustFaceMetadataForPixelBuffer:originalWidth:originalHeight:
adjustInfoSubLayerBounds:forSuperLayer:
afrcHandle
afrcRemoteEstimatedBandwidth
agentDomain
agentFromData:
agentType
aggregateStallTimeDuration:idsParticipantID:
alertStateUpdated:isLocal:
allAudioTiers
allCalls
allKeysForObject:
allObjects
allParticipantStreamInfo
allPayloadsLocalFeaturesString
allPossibleCombinations:supportedPacketsPerBundle:redNumPayloads:headerSize:tierPickerMode:usingCellular:useCaseWatchContinuity:
allSinksSuspended
allValues
allocDeviceControlListAndSize:
allocDispatchedStreamOutputWithStreamToken:clientPid:options:errorCode:
allocEncryptedPayloadFromPayloadData:
allocFrameWithPacket:data:dataLength:timestamp:
allocMessageFromPayload:forTopic:participantID:
allocPayoadDataFromVTPPacket:vpktFlags:channelDataFormat:
allocStreamOutputWithStreamToken:clientPid:options:errorCode:
allocTextFrame
allocWithZone:
allocateBundleBuffer:
allocateLastInputSampleBuffer:
allocationResponseHandler
allowAudioRecording
allowAudioSwitching
allowDuplication
allowDynamicMaxBitrate
allowLargePackets
allowRTCPFB
allowRampUpWithContinuousTargetBitrate
allowRecording
allowSwitching
allowVideoStop
allowedBitratesForPayload:supportedBitrates:supportedBandwidths:
allowsContentsChangeWithAspectPreservation
allowsDynamicMaxBitrate
allowsRelay
alwaysOnAudRedEnabled
alwaysOnAudioRedundancyEnabled
amplitude
anbrEnabled
anchorStreamIDWithCappedVideoStreamIDs:
answer
anyObject
appendAudioSampleBuffer:mediaType:
appendBandwidthSettingsToMediaBlob:
appendBytes:length:
appendCameraOneToOneSettingsToMediaBlob:
appendConfigurationToXPCArguments:
appendConfigurationToXPCConfiguration:
appendContextToDictionary:forConnection:
appendData:
appendEntry:streamTokenEntries:currentNetworkBitrate:shouldUseRepairBitrate:screenEncoderGroups:
appendFieldName:codecs:outString:
appendFormat:
appendGeneralInfoToMediaBlob:
appendMetaData
appendMetadata:toString:
appendMicrophoneOneToOneSettingsToMediaBlob:
appendMomentsSettingsToMediaBlob:
appendOptedInStreamID:toOptInStreamsIDs:targetBandwidthEntry:forceSeamlessTransition:
appendPIDToDictionary:pid:
appendPayload:dimensions:direction:attributeString:
appendPayloadsSpecsToString:streamConfig:
appendPayloadsToString:streamConfig:
appendSampleBuffer:
appendSampleWithWriter:buffer:sample:
appendStreamGroup:maxBitrate:mediaEntries:
appendStreamGroupsToMediaBlob:
appendStreamsToStreamGroupConfig:streamGroupID:rtpSampleRates:
appendString:
appendTimedMetadataGroup:
appendVideoRules:transportType:payload:encodingType:
appendVideoSampleBuffer:cameraStatus:mediaType:
applyAudioSessionMute
applyCachedAlgorithmConfig:
applyCachedMediaStreams:toMultiwayConfig:
applyCachedMediaStreamsWithStreamConfigurations:mediaNegotiatorConfig:
applyCachedStreamGroupMediaStreams:toMultiwayConfig:
applyCellularPreferredRule:
applyChannelBins:binCount:
applyChannelBins:binCount:channelID:
applyCipherSuiteOnMediaStreamConfig:codecConfigs:
applyConfigurationUsingClientDict:
applyFeatureListStringForPayload:
applyLinkConstrains:
applyLinkFlags:isCellular:
applyLinkRecommendation
applyMediaState:forMediaType:
applyMediaStreamClientDictionary:
applyNegotiatedAudioSettings:
applyNegotiatedMomentsSettings
applyNegotiatedOneToOneFaceTimeSettings
applyNegotiatedSettings
applyNegotiatedVideoSettings:
applyNegotiationRulesUsingLocalSwitches:negotiatedSwitches:
applyRemoteLinkConstrains:
applyRemoteLinkFlags:isCellular:
applyScreenEnabledSetting:
applyServerBagEmergencyTierConfig:
applyServerBagGroupConfig:
applyServerBagLossBasedAdaptationConfig:
applyServerBagMainControlConfig:
applyServerBagNoRampUpGroupConfig:
applyServerBagNotificationGroupConfig:
applyServerBagOscillationAvoidanceConfig:
applyServerBagPauseResumeConfig:
applyServerBagProfileConfig:
applyServerBagRampDownGroupConfig:
applySessionContextToAudioUnitProperties:preferredClient:
applySpatialMetadata
applySpatialMetadata:
applyVideoEnabledSetting:
applyVideoNegotiatedSettings:toStreamConfiguration:withFeatureStringDictionary:
applyVideoStreamClientDictionary:
archiveMediaStates:
archivedDataWithRootObject:requiringSecureCoding:error:
areAllLinkProbingTriggersInactive
areCodecsEqualTo:
array
arrayByAddingObject:
arrayWithCapacity:
arrayWithObject:
arrayWithObjects:
arrayWithObjects:count:
arrivalTime
aspectRatioLandscape
aspectRatioPortrait
aspectRatioPortrait:aspectRatioLandscape:orientationMismatchAspectRatioLandscape:orientationMismatchAspectRatioPortrait:screenSize:
aspectRatioPortrait:landscape:isMismatchedOrientation:
assetWriterInput
associateMKI:withClientID:
associatedStrings
attributes
attributesOfFileSystemForPath:error:
attributesOfItemAtPath:error:
auNumber
audio
audioBundler
audioChannelCount
audioChannelCountForMode:
audioChannelIndex
audioCodecBandwidthForVCAudioCodecBandwidth:
audioCodecBitrate
audioCodecTypeForPayload:
audioConfig:supportsDeviceClass:
audioConfiguration
audioDumpEnabled
audioEnabled
audioFeatures
audioFileName
audioFormat
audioFractionTier
audioGroup
audioIOConfigWithAudioType:realtimeContext:
audioIODirectionWithMediaStreamDirection:
audioIOFormat
audioIOSampleRate
audioIOTypeForMode:
audioIOTypeFromTapType:
audioIsPaused
audioIssueDetectorCreateAndConfigure
audioIssueDetectorEnabled
audioIssueDetectorStopAndFinalize
audioLowPowerTimeInterval
audioMediaControlInfoGenerator
audioMuted
audioOnlyBitrateToStreamIDsTable
audioPacketLossConcealmentAlgorithmAACELD
audioPaused
audioPayloadTypes
audioPayloads
audioPosition
audioPowerMovingAverageCoefficient
audioPowerSpectrumMeter:didUpdateAudioPowerSpectrums:
audioPowerSpectrumSinkDidRegister
audioPowerSpectrumSinkDidUnregister
audioPowerThreshold
audioPriorityDecayFast
audioPriorityDecaySlow
audioPriorityRampUpSpeed
audioQueue
audioRTCPPort
audioRTPID
audioRTPPort
audioReceiver
audioReceivingBitrateKbps
audioRecordingEnabled
audioRuleCollectionWithAudioConfig:supportedAudioRules:
audioRuleCollectionWithAudioStreamConfig:
audioRules
audioRulesNegotiated
audioSendingBitrate
audioSessionID
audioSessionId
audioSettings
audioStreamConfigurations
audioStreamGroupConfig
audioStreamModeWithMediaStreamMode:
audioStreams
audioTapSessionTypeForInternalSessionType:
audioTierAudioCodecBitrate
audioTierNetworkBitrate
audioTierPacketsPerBundle
audioTierPayload
audioTierRedNumPayloads
audioTransmitter
audioTransmittingBitrateKbps
audioTxBitrate
audioTypeForCaptureSource:
audioUnitModel
audioUnitType
audioVersionInfo:
audioVideoBitrateToStreamIDsTable
audioVoiceDetectionSensitivity
authorizedTokenData
autorelease
avConferencePreviewError:
avConferencePreviewNotificationQueue
avConferencePreviewQueue
avail
avcLayoutWithLayout:
avcMomentsCapabilitiesForMultiwayMomentsCapabilities:
avcMomentsRequestDidEndRequest:withError:
avcMomentsRequestDidRejectRequest:withError:
avcMomentsRequestDidStartRequest:withError:
avcPositionalInfo
avcSessionPresentationInfo
avcUIStateWithUIState:
avcVideoFrameDidRelease:
averagePacketDelayMs
averageReceivedBitrate
averageThroughputBps
awdCallNonce
bBWEstActiveProbingSenderLog
bBWEstNewBWEstModeEnabled
bBWEstOperatingModeInitialized
backingBufferAllocator
bandwidth
bandwidthConfigurationWithOperatingMode:connectionType:
bandwidthConfigurations
bandwidthDownstream
bandwidthEstimationDumpEnabled
bandwidthEstimationState
bandwidthSettings
bandwidthSettingsAtIndex:
bandwidthSettingsCount
bandwidthSettingsType
bandwidthUpstream
base64EncodedDataWithOptions:
baseNetworkBitrateSplitForTargetBitrate:baseNetworkBitrate:
basePeriodMs
basebandAdaptationEnabled
basebandAdditionalTiersForRampUp
basebandAverageBitrate
basebandCodec
basebandCodecSampleRate
basebandCodecType
basebandCongestionDetector
basebandExpectedQueuingDelay
basebandFlushCount
basebandFlushedAudioCount
basebandFlushedVideoCount
basebandNotificationRegistrationToken
basebandQueueDepth
basebandTxBitrate
bdatGroupDisabled
bdatOldGroupDisabled
begin
beginPIPToPreviewAnimation
beginParticipantConfiguration
beginPreviewToPIPAnimation
bestCameraCaptureFrameRate
bestVideoRuleForEncodingType:aspectRatio:
bestVideoRuleForEncodingType:aspectRatio:payload:
bindingResponseHandler
bins
bitrateConfiguration
bitrateForAMRCodecMode:
bitrateForAMRWBCodecMode:
bitrateForCodecType:mode:
bitrateForEVSCodecMode:
bitrateForStoreBagKey:connectionType:currentBitrate:isExpensive:
bitrateIsAudioOnly
bitrateKbps
blobCapabilitiesWithOneToOneCapabilities:multiwayCapabilities:
blobVersion
block
blockSize
blocksRelayedCount
boolValue
booleanValueForKey:
booleanValueForKey:defaultValue:
bounds
broadcastCellTechChange:cellularMaxPktLen:
broadcastInitialMediaState
broadcastMediaStateUpdateMessage
broadcastMessage:withTopic:
broadcastMessageDictionary:withTopic:
broadcastMessageDictionary:withTopic:toVersion:
broadcastSingleStateMessage:withTopic:
budgetConsumingCellularRxBytes
budgetConsumingCellularTxBytes
budgetInCaptureFrames
buildRedPayloadWithPrimaryPayload:redPayloads:
bundleAudio
bundleAudioLegacy:numInputBytes:payloadType:timestamp:
bundleAudioRFC3640:numInputBytes:payloadType:timestamp:
bundleBufferSizeWidthMaxPacketSize:maxPacketCount:
bundleHeaderBytes
bundledPackets
bundlingAppliedByCodecForPayload:mode:
bundlingScheme
bundlingSchemeForAudioStreamMode:payloadType:
bweOperatingModeInitialized
bytes
bytesPerFrame
cName
cStringUsingEncoding:
caLayerBack
caLayerFront
cacheNATFlags:forNetwork:
cacheOutgoingMessage:topic:timeout:withOptions:
cacheRemoteVideoFrame:
calculateBitratesAndDelaysWithTotalQueueDepth:
calculateCongestionMetricsFromOWRD:time:
calculateCongestionMetricsFromOWRDList:owrd:time:config:isInitialRampUp:
calculateExpectedTotalNetworkBitrateDownlink
calculateExpectedTotalNetworkBitrateUplink
calculateInterCallbackDurationWithTime:
calculateMixingArrays:talkingMask:
calculateNOWRD:time:
calculateNOWRDAccWithOWRDList:config:
calculateNOWRDShortWithOWRDList:config:isInitialRampUp:
calculateNOWRDWithDuration:owrdList:historySize:minHistorySize:initalRampUpReadyDuration:isInitialRampUp:
calculateNOWRDWithOWRDList:config:isInitialRampUp:
calculateOWRDWithSendTime:receiveTime:roundTripTime:
calculateOWRDWithTimestamp:sampleRate:time:
calculatePacketLossWithReceivedPacketCount:receivedPacketCountVideo:packetBurstLoss:packetLossSample:
calculateRoundTripTimeWithSample:
calculateSIPEndAction:currentState:error:
calculateSummmaryNATType:andCarrierNATType:andNonCarrierNATType:copyInterfaceInfoDictionary:
calculateTalkingMaskAtTimeStamp:
calculateUplinkTotalBitrateForMediaStreams:
calculateVisibleAreaWithVisibleRect:cameraStatusBit:
calculateWiFiNonAVCTxBitrateWithStatistics:
callAlarmsWithRTPTimeStamp:
callCommNATTestFromIPPort:ipv6Prefix:
callDelegateWithBlock:
callHTTPTestFromIPPort:ipv6Prefix:ToServer:isSSL:
callID
callIDForOpenSessionWithParticipantID:
callInfoBlob
callLogFile
callMetadata
callMetadataForCallID:
callSessionBitrate
callSessionBitrateArbiter
callStateForCallID:
callStreamDelegateWithBlock:
callback
callbackBlock
callerPreEmptiveTimeoutInSecs
camera
cameraAvailabilityDidChange:
cameraCFramingAvailabilityDidChange:
cameraCinematicFramingAvailabilityDidChange:
cameraDidBecomeAvailableForUniqueID:
cameraDidBecomeInterruptedForForUniqueID:reason:
cameraGroups
cameraStreamInfo
cameraU1
cameraUIDForVideoAttributeCamera:
cameraVideoStablization
cameraZoomAvailabilityDidChange:
cameraZoomAvailabilityDidChange:currentZoomFactor:maxZoomFactor:
canBundleExternallyForPayload:forBundlingScheme:operatingMode:
canDecodeHD
canDequeue:forTimestamp:
canDisplayCaptions
canDo1080p
canDoHEVC
canDoHiDefDecoding
canDoHiDefEncoding
canLocalResizePIP
canNegotiateVideoPayload:supportedPayloads:isLocalOnCellular:isRemoteOnCellular:
canOptOutAllStreamsForConnection:
canRemoteResizePIP
canSendSIPInviteWithError:
canSetBitrateForPayload:
canSetDirection:
canSetPropertyWithError:
canUseP2PLinks
cancelAndReleaseFetchTimer
cancelCallID:
cancelCallID:error:
cancelConnectionTimeoutTimer
cancelFirstRemoteFrameTimer
cap2G
cap3G
cap5G
capDefaultValues:
capLTE
capabilities
capabilitiesBitmapWithCapabilities:
capabilitiesForCallID:
capabilitiesMultiway
capabilitiesOneToOne
capabilitiesWithBlobCapabilities:
capacity
cappedVideoQualityWithShouldLimitCameraQualityForPIP:
caps
captionsCoordinator
captionsGroup
captionsReceiverLanguages
captionsSenderLanguages
captionsSettings
captionsSource
captionsSourceFromClientContext:
captionsSupported
captureAsFocusClient:
captureCapabilities
captureConfigForScreenShare
captureController
captureEncodingSize
captureFrameRate
captureFramerate
captureMeshMode:
captureServer
captureServerConfigForAudioConfig:forClient:
captureSource
captureSourceCenterStageEnabledDidChange:
captureSourceForSystemAudioCaptureControllerConfig:
captureSourceForTypePreSpatialSessionType:
captureSourceForTypeProcessID:
captureSourceIDFromStreamGroupConfig:
captureSourceIDFromStreamGroupID:
captureSourcePortraitBlurEnabledDidChange:
capturedPixelBuffer:depthBuffer:time:imageData:toClient:
capturedPixelBuffer:depthDataPixelBuffer:time:imageData:
carrierBitrateCap
caseInsensitiveCompare:
cellBandwidth
cellPrimaryInterfaceChangeEnabled
cellTechChangeSource
cellTechForSoMask:fallbackTo:
cellTechQueue
cellularAllowRedLowBitratesEnabled
cellularAssertionActive
cellularMTU
cellularTapTypeWithClientCellularTapType:
cellularUniqueTag
centerStageEnabledDidChange:
changeListener
channelAwareOffset
channelCount
channelIndex
channels
channelsPerFrame
characterAtIndex:
characterSetWithCharactersInString:
chatMode
checkAbnormalNetworkCondition
checkAbnormalOWRDAndResetLagReference
checkActivelyRequestWRMRecommendation:isLocalUsingCellular:
checkActualBitrates
checkAndInsertRuleWithWidth:height:framerate:payload:priority:negotiationBitfield:negotiationBit:rules:isCellular16x9Capable:
checkAndReportAbnormalSymptoms
checkBandwidthOvershootWithRemoteBandwidthEstimation:
checkCongestionStatus
checkDecryptionTimeoutAgainstTime:decryptionErrorStartTime:
checkDecryptionTimeoutForMKMRecoveryAgainstTime:decryptionErrorStartTime:
checkEffectsHealth
checkEncoderSupportForCodecType:
checkEncoderSupportForConfig:
checkForCachedWRMNotification
checkForDecryptionTimeout
checkForExtendedPoorConnection
checkForRedundancyFreeze:
checkForSignificantHandshakeDelayWithDelegate:
checkMediaQualityDegradedForParticipantID:
checkMediaQueueBitrates
checkNetworkSaturationWithRoundTripTime:minRoundTripTime:packetLossRate:owrd:
checkNumChannels:
checkOffChannelActivityWithStatistics:
checkPaused
checkRTCPPacketTimeoutAgainstTime:lastReceivedPacketTime:
checkRTPPacketTimeoutAgainstTime:lastReceivedPacketTime:
checkRampUpSettlingStatus
checkStabilizationWithEchoedTimestamp:queuingDelay:
checkSubscribedStreamsConsistency:
checkSubstreams:forLowerQualityIndex:
checkTargetBitrateOscillation
checkVCIDSSessionInfoNeedUpdate:
checkWRMSuggestionDefaultValue
checkinWithTimeout:forTask:
checklocalRATTypeOverrideDefaultValue:
checkout
checkpointPrimaryConnection:
chipId
chooseAudioNetworkBitrate
chooseDTXPayloads:
chooseMultiwayAudioTierForRedPayload:
choosePayload:
chooseSecondaryPayloads:
chooseVideoPayload:operatingMode:isLocalOnCellular:isRemoteOnCellular:
chosenAudioPayload
chosenDTXPayload
chosenRedPayloadType
cipherSuite
cipherSuiteWithClientCipherSuite:
cipherSuiteWithNegotiationCipherSuite:
class
className
cleanUpDisplayLink
cleanUpOneToOneVideoStreamDelegate
cleanUpVideoReceiver
cleanUpVideoTransmitter
cleanupActiveRequests
cleanupAudio
cleanupAudioPowerSpectrumSinks
cleanupBeforeReconfigure:
cleanupControlChannelParticipantConfig:
cleanupDatagramChannel
cleanupDictionaries
cleanupIOEventQueues
cleanupInterruptThread
cleanupLayerHost
cleanupManager
cleanupMedia
cleanupMutedTalkerNotificationHandler
cleanupNWConnection:
cleanupNwActivity
cleanupOneToOneDelegates
cleanupOneToOneMediaQueue
cleanupOneToOneVideoReceiverDelegate
cleanupOutputThread
cleanupPowerSpectrumMeter
cleanupPowerSpectrumSetForCellularTapType:
cleanupPowerSpectrumSource
cleanupProc:
cleanupQueue:
cleanupQueues
cleanupRateControllerOneToOne
cleanupRedundancySettings
cleanupSecureMicrophoneEngagedHandler
cleanupSession:withDelay:
cleanupSinkEntry:
cleanupSpatialAudio
cleanupSpatialAudioForCallID:
cleanupStreamInputs
cleanupStreamOutput
cleanupStreamOutput:
cleanupStreamTokenEntries:currentNetworkBitrate:isRedundancyEnabled:screenEncoderGroups:
cleanupStreams
cleanupSubLayerForMode:
cleanupSyncDestinations
cleanupTransferSession
cleanupVCRC
cleanupVTP
cleanupVideoLayerForAllModes
cleanupWCMClient
cleanupWRMClient
cleanupWRMData
cleanupXPCConnection
clearAllSettingsWithRefreshIntervalInSeconds:
clearAllStickers:
clearBagWithRefreshIntervalInSeconds:
clearBandwidthSettings
clearHistoryBuffer
clearMediaInformationAssertion
clearMultiwayAudioStreams
clearMultiwayVideoStreams
clearOneofValuesForContent
clearPayloads
clearRetries
clearSegments
clearSendHistory
clearStreamGroups
clearStreams
clearTransactionCacheForParticipant:
clearVideoPayloadCollections
clearVideoRuleCollections
cleaunpReceiverConfig:
client
client:didActualNetworkBitrateChangeForStreamGroupID:
clientAccessNetworkType:
clientCaptureRule
clientCipherSuiteWithCipherSuite:
clientCodecBandwidthMaskForCodecBandwidth:
clientCodecRateMaskForCodecRateMode:
clientCodecRateModeForCodecRateMode:
clientCodecTypeWithCodecType:
clientConnections
clientConnectionsQueue
clientContextList
clientDownlinkPowerMovingAverage
clientFormat
clientIO
clientPID
clientPid
clientProcessDiedWithXPCArguments:result:error:
clientSessionModeWithSessionMode:
clientStreamDirectionWithDirection:
clientTargetBitrate
clientTargetBitrateCap
clientToRemoteConverter
clientUplinkPowerMovingAverage
clientVersion
clientVideoCaptureSourceFromCaptureSource:
clientVideoResolutionFromResolution:
clientVideoStreamModeFromVideoStreamType:
clientWantsPreview
closeConnectionToServer
closeTunnelSocket
cnEnabled
cnPayloadType
cname
code
codecBandwidthForPayload:
codecBandwidthMask
codecBandwidthMaskForClientCodecBandwidth:
codecBitmapForPayloads:
codecConfigs
codecConfigurations
codecModesForAMR16kHz
codecModesForAMR8kHz
codecModesForEVS16kHz
codecModesForEVS32kHz
codecModesForEVS8kHz
codecRateMaskForClientCodecRateMode:
codecRateModeForClientCodecRateMode:
codecRateModeForDesiredANBR:payload:supportedBitrates:supportedBandwidths:
codecRateModeMask
codecSamplesPerFrameForPayload:blockSize:
codecSupport
codecType
codecTypeForPayload:
codecTypeWithClientCodecType:
codecTypeWithNegotiationCodecType:
codecs
collectAndLogChannelMetrics:
collectAndLogChannelMetrics:averagePower:
collectAudioChannelMetrics:
collectChannelSequenceMetrics:
collectImageQueuePerformanceMetrics:
collectRxChannelMetrics:
collectRxChannelMetrics:interval:
collectSessionEventKeyFields:eventType:withParticipant:keyChangeReason:newMKI:withStreamID:
collectTxChannelMetrics:
collectVideoChannelMetrics:
collectVideoConfigMetrics:
colorInfo
commit
common
compare:
compare:isPrimary:selectionPolicy:
compare:options:
compare:options:range:
compareAudioEntry:audioEntry:
compareAudioEntry:videoEntry:
compareBudget:
compareByPref:
compareConnectionTypePriority:selectionPolicy:
compareE2EPriority:selectionPolicy:
compareInterfacePriority:isPrimary:
compareIpVersionPriority:selectionPolicy:
compareVideoAspectRatioSizeA:toSizeB:
compareVideoEntry:videoEntry:
compareVpnPriority:selectionPolicy:
compareWeightFactor:
completeAndReleaseNwActivity:withReason:
completeAudioEnabled:didSucceed:error:
completeAudioPaused:didSucceed:error:
completeScreenEnabled:didSucceed:error:
completeSetMediaState:forMediaType:didSucceed:error:
completeStartForAllStartingClients
completeStreamSetup:
completeTransitionToOneToOneEnabled:
completeVideoEnabled:didSucceed:error:
completeVideoPaused:didSucceed:error:
completionHandlerOneToOneEnabled:didSucceed:
componentsJoinedByString:
componentsSeparatedByString:
composeAudioFMTPForPayload:
composeAudioString
composeBandwidthString
composeControlChannelParticipantConfig:withRemoteParticipant:
composeFLSString
composeSessionString
compoundStreamIDs
compressWithConfig:
computeAllowAudioRecordingWithPreferredClient:
computeBasePeriod
computeCaptureFramerate
computeConversationTimeBaseTruncated
computeDecodingScore
computeEncodingScore
computeFormatDescription:withPreferredClient:
computeGcdForX:y:
computeGroupList
computeHardwarePreferences
computeMaxNetworkBitrate:maxMediaBitrate:maxPacketsPerSecond:audioStreamIndex:internalPacketsPerSecond:
computeMaxNetworkBitrate:maxMediaBitrate:maxPacketsPerSecond:maxIDSStreamIDCount:internalPacketsPerSecond:audioConfig:
computeMaxScreenCaptureSize
computeNWConnectionDelayThresholdForRampDown:
computeNetworkDelay
computeNetworkServiceRate
computeNextTimoutWithEnabledTime:timeoutInterval:lastReceivedPacketTime:currentTime:lastTimeoutReportTime:
computePacketLossWithRemoteInfo:
computePacketTimestampWithInputTimestamp:numSamples:hostTime:
computeRedundancyInfo
computeRedundancyWithLossPercentage
computeResolutionForMainDisplayWithMaxScreenPixelCount:
computeSamplePerFrameWithControllerSampleRate:
computeSamplePerFrameWithPreferredClient:sampleRate:
computeScheduleItemList
computeSchedulerItemList
computeSchedulerItemsBudget
computeSchedulerItemsPosition
computeStreamsIDRPosition
computeVisibleAspectRatioWithRemoteScreenAspectRatio:remoteExpectedAspectRatio:encodeWidth:encodeHeight:
conference:cancelRelayRequest:requestDict:
conference:closeConnectionForCallID:
conference:didChangeLocalVariablesForCallID:
conference:didReceiveARPLData:withCallID:
conference:didReceiveData:forCallID:
conference:didStartSession:withCallID:error:
conference:didStartSession:withUserInfo:
conference:didStopWithCallID:error:
conference:didStopWithCallID:error:callMetadata:
conference:inititiateRelayRequest:requestDict:
conference:isRemoteAudioBelowThreshold:
conference:localAudioEnabled:forCallID:error:
conference:localIPChange:withCallID:
conference:receivedFirstRemoteFrameForCallID:
conference:reinitializeCallForCallID:
conference:remoteAudioEnabled:forCallID:
conference:remoteAudioPaused:callID:
conference:remoteCallingModeChanged:forCallID:
conference:remoteScreenAttributesChanged:callID:
conference:remoteVideoAttributesChanged:callID:
conference:remoteVideoPaused:callID:
conference:sendRelayUpdate:updateDict:
conference:updateInputFrequencyLevel:
conference:updateInputMeterLevel:
conference:updateOutputFrequencyLevel:
conference:updateOutputMeterLevel:
conference:videoQualityNotificationForCallID:isDegraded:isRemote:
conference:withCallID:didPauseAudio:error:
conference:withCallID:didPauseVideo:error:
conference:withCallID:isSendingAudio:error:
conference:withCallID:networkHint:
conference:withCallID:remoteMediaStalled:
conferenceCaptureRule
conferenceForCallID:
conferenceForParticipantID:
conferenceForSourceDestinationInfo:
conferenceID
conferenceMatchesSourceDestinationInfo:
conferenceOperatingMode
conferenceVolume
conferenceWithMic
confidence
config
configForPayloadType:
configWithQualityIndex:nwBitrate:mediaBitrate:maxPacketsPerSecond:repairedNwBitrate:keyFrameInterval:framerate:rtpSampleRate:isTemporal:isSubStream:metadata:payloads:codecs:width:height:audioChannelCount:streamIndex:coordinateSystem:
configuration
configurationAsString:
configurationExtension
configurationInProgress
configurationSpecificReportingServiceName
configurationWithSessionMode:
configure:
configure:error:
configure:restartRequired:
configureAlgorithmWithRestart:
configureAudioIOWithDeviceRole:operatingMode:
configureAudioJBAlgos:
configureAudioStreams:deviceRole:operatingMode:
configureCaptions:
configureInProcess:error:
configureInternal:
configureLegacyTransportWithInviteInfo:error:
configureLocalParticipantWithOneToOneRemoteParticipant:isInitialConfiguration:
configureMultiwayStreamGroups
configureNWConnectionMonitor:
configureNetworkSampleRateScaleForStream:transport:
configureOneToOneAudioStreamsWithDeviceRole:
configureOneToOneAudioStreamsWithDeviceRole:streamInfoArray:
configureOneToOneRateController:isUsingCamera:isUsingScreen:
configureOneToOneReportingOnVideoEnabled
configureOneToOneVideoStreamsWithDeviceRole:
configureOneToOneVideoStreamsWithDeviceRole:streamInfoArray:
configureOneToOneWithConfig:
configureOutOfProcess:error:
configureParamatersForStreamType:socket:packetType:remoteIP:remoteIPLength:
configurePowerSpectrumSource
configureRateController
configureRateControllerWithConfig:
configureRemoteParticipant:withConfig:
configureRemoteParticipantForOneToOne:
configureStreamInfosForMultiway:streamGroupID:
configureStreamInputCaptureSourceWithStreamInputID:frameRate:
configureStreams
configureStreams:withRateControlConfig:
configureVCRateControlAlgorithmWithConfiguration:
configureWithBuffer:length:optionalControlInfo:
configureWithDeviceRole:negotiatedVideoEnabled:negotiatedScreenEnabled:operatingMode:
configureWithOneToOneParticipantConfig:operatingMode:
configureWithOneToOneParticipantConfig:shouldConfigureGFTStreams:
configureWithOperatingMode:isLocalCellular:localCellTech:isRemoteCellular:remoteCellTech:bitrateCapKbps:isTrafficBursty:featureFlags:
configureWithStreamConfig:setupInfo:reducedSizeRTCPPackets:hopByHopEncryptRTCPPackets:statisticsCollector:basebandCongestionDetector:error:
confirmTransaction:
confirmedTransactionByParticipantID:sessionID:
conformsToProtocol:
congestionDetector
connectFrom:
connectLayer:withSlot:
connectSocket:remoteAddress:storage:
connectTo:
connectedLinks
connectedPeers
connectedSocketWithIPAddress:srcPort:error:
connection
connectionAttempts
connectionBlobForParticipantID:callID:block:queue:caller:
connectionBlobForParticipantID:callID:error:
connectionCallback:isInitialConnection:
connectionChangeQueue
connectionChangeState
connectionContext
connectionData:connectionDataSizeInBytes:shouldUseRelay:
connectionDataUsingRelay:isInitialRelay:nonCellularCandidateTimeout:error:
connectionDidChangeWithLocalInterfaceType:remoteInterfaceType:streamToken:
connectionForDuplication
connectionForDuplicationNonProbingVersion
connectionForQualityInternal:
connectionHealthDidUpdate:isLocalConnection:
connectionHealthMonitor
connectionId
connectionMTU
connectionManager
connectionPersists
connectionQRSessionID
connectionResult
connectionResultCallback:didReceiveICEPacket:didUseRelay:secretKey:skeResult:
connectionSetupPiggybackBlob
connectionSetupRTTEstimate
connectionStatsStreamID
connectionTimeoutSource
connectionType
connectionTypeForConnectionResult:
connectionTypeString
connectionUUID
connectionWithIDSDestination:
connectionWithIDSSocketDescriptor:
connectionWithSocket:
connectionWithSocket:remoteAddress:
connectionWithSocket:remoteAddress:packetFilter:
connections
constructDTMFEventPacketWithEvent:volume:durationCounter:dataBuffer:isEnd:
constructPacket:datagram:datagramSize:datagramOptions:
containsAllSecondaryKeysWithPrimaryKey:
containsObject:matchingComparison:
containsStreamWithIDSStreamID:
containsStreamWithSSRC:
containsValueForKey:
contentAsString:
contentsOfDirectoryAtPath:error:
contentsRect
contextIdForStreamTokenWithArguments:error:
controlChannel
controlChannel:clearTransactionCacheForParticipant:
controlChannel:receivedData:transactionID:fromParticipant:
controlChannel:receivedMessage:transactionID:fromParticipant:
controlChannel:sendReliableData:didSucceed:toParticipant:
controlChannel:sendReliableMessage:didSucceed:toParticipant:
controlChannel:topic:payload:transactionID:fromParticipant:
controlChannelVersion
controlChannelWeak
controlInfoGenerator
controller:didChangeActiveVideoStreams:
controllerForDeviceRole:audioType:direction:operatingMode:streamInputID:streamToken:networkClockID:
controllerFormat
controllerFormatChanged:
conversationID
conversationTimeBase
conversationTimeBaseTruncated
convertAndScalePixelBuffer:toWidth:toHeight:withPixelFormat:usingPixelBufferPool:andStoreTo:
convertBlobtoNewBlob:
convertBlobtoOldBlob:
convertData:toEncryptedData:encrypted:
convertEncryptedData:toData:encrypted:
convertPixelBuffer:toImageType:withAssetIdentifier:cameraStatusBits:allowTimeMetaData:
convertString:toFourcc:
convertVideoFormat:width:height:
coordinateSystem
copy
copyAWDLChannelSequence:twoPtFourGhzChannelCount:fiveGhzChannelCount:dfsChannelCount:inactiveSlotCount:
copyAgentData
copyConnection
copyConnectionForQuality:
copyConnectionWithSourceDestinationInfo:isPrimary:
copyDecryptedDataFromEncryptedPayload:
copyDelegate
copyDialogForParticipantID:
copyEncodedDictionary
copyGKSDeep
copyGKSDeepMutable
copyItemAtURL:toURL:error:
copyMKMWithPrefix:
copyNatTypeCache
copyNatTypeCachePlistScheme
copyObjectForKey:p2pID:
copyOnVideoFrameBlock
copyPacketFromPop
copyResultForCallID:
copyStreamIDArray:length:
copyStringValueForKey:
copyWithZone:
copyXpcSenderQueue
coreMotionManagerDelegate
count
countByEnumeratingWithState:objects:count:
countDeviationChangeInTierWindow
countForRequestType:
countOfLowPrioritySamples
countRateControllersForInterfaceType:
createAllocators
createAndAddRemoteQueueToXPCDictionary:
createAndConfigureVFDForSocket:packetType:remoteIP:remoteIPLength:vfd:
createAndResumeFetchTimer
createAndStartListener:withParameters:
createAnswer
createAudioBufferPool
createAudioBuffers
createAudioReceiver
createAudioTransmitter:
createAudioTransmitter:streamIDs:
createBWEDumpFile:
createBasebandLogDumpFile
createBuffersForIOContext:
createCALayerHostForRootLayer:withContextId:
createConnectionToServer
createDecodeSession:
createDefaultPolicies
createDirectory:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
createDispatchTimer:withDetailedError:
createEncoderWithInputFormat:
createFileListSortedByTimestamp:
createIOEventQueues
createInitiateRelayDictionary
createInitiateRelayDictionaryForCall:primaryConnection:
createInviteSDPWithError:
createJitterBufferTargetEstimatorSynchronizer:syncGroupID:
createLocalMediaControlInfoGeneratorWithType:version:
createLogDumpFile:
createLogDumpFiles:
createMediaQueue
createMediaQueueHandle:
createNWConnection:forConnectionID:
createNWConnectionLogDumpFile
createNWPathEvaluator:withIPAddress:localPort:remotePort:shouldRunInProcess:useBackingSocket:
createName
createNameForScope:
createOffer
createOpaqueData
createPacketThreadWithIOBufferDuration:name:error:
createParticipantInfo
createRTPHandleWithStreamConfig:payloadType:localSSRC:
createRTPHandles:
createReceiverQueue
createRecordingsWithName:
createRedundancyControllers
createRelayUpdateDictionary:
createRemoteQueue
createRemoteReceiveQueue:
createReportSSRCListWithStreamConfigs:
createSDP:audioPayloadCount:secondaryPayloadTypes:secondaryPayloadCount:videoPayloadTypes:videoPayloadCount:localFeatureList:answerBandwidth:maxBandwidth:imageSizesSend:imageSendCount:imageSizesRecv:imageRecvCount:sdp:numSDPBytes:error:
createSIPWithPacketMultiplexMode:
createSecondaryRelayDispatchTimer:callID:callerRequired:
createSessionMessaging
createSframeCryptorWithStreamConfig:ssrc:error:
createSocket
createSourceDestinationInfoListWithConfig:
createSupportedBitrateRuleSets
createSupportedBitrates
createSupportedBitratesForAACELD
createSupportedBitratesForAACELD48
createSupportedBitratesForAMR16k
createSupportedBitratesForEVS
createSupportedBitratesForOpus
createTCPTunnelForParticipantID:relayDictionary:didOriginateRequest:relayType:error:
createTimeoutTimer
createTransportStream:withType:options:
createTransportWithStreamConfig:
createTransportWithStreamConfig:ssrc:
createUID
createVCRateControlAlgorithmWithConfiguration:
createVFD:forStreamType:
createVFD:realSocket:sockAddr:length:isUsable:
createVideoImageAttr:direction:dimensions:count:
createtokenForDeviceName:sourceType:
creationTime
cumulativePacketsLost
currentActiveConnection
currentAudioAverage
currentAudioInputDevice
currentAudioOutputDevice
currentAudioPayload
currentAudioPayloadConfig
currentAudioSessionMediaProperties
currentAudioTier
currentAudioUnitProperties
currentChannelMetrics
currentDTXEnable
currentDTXPayload
currentDetails
currentDurationCounter
currentEndTimestamp
currentEvent
currentEventNeedsEndBlock
currentEventRetransmitFinalPacketCount
currentFocus
currentFocusSession
currentFrameTime
currentInputDevice
currentMode
currentNATType
currentOutputDevice
currentRunLoop
currentStartTimestamp
currentTranscription
currentUplinkTargetBitrate
currentUplinkTotalBitrate
currentVideoCaptureFrameRate
currentVolume
currentZoomFactor
customFeatureListStrings
customHeight
customPayloadConfigStateWithStreamGroupConfig:
customVideoHeight
customVideoWidth
customWidth
cvoExtensionID
dAudioHostTime
data
dataBuffer
dataFromPropertyList:format:errorDescription:
dataPath
dataReceivedDelegate
dataReceivedHandlerQueue
dataReceivedHandlers
dataRequiredPacketPayload
dataSourceControlID
dataUsingEncoding:
dataWithBytes:length:
dataWithBytesNoCopy:length:freeWhenDone:
dataWithCapacity:
dataWithContentsOfFile:options:error:
dataWithPropertyList:format:options:error:
datagramChannelForSessionDestination:error:
datagramChannelForSessionDestination:options:error:
datagramChannelForSocketDescriptor:error:
datagramChannelOptions
datagramChannelRequiresOptions:dataPath:
datagramChannelToken
datagramChannelWithChannelToken:
datagramChannelWithDestination:error:
date
dateByAddingComponents:toDate:options:
dateWithTimeIntervalSinceNow:
dateWithTimeIntervalSinceReferenceDate:
deactivate
debugDescription
decodeBoolForKey:
decodeFloatForKey:
decodeFormats
decodeFrame:showFrame:
decodeFromNSDictionary:
decodeInt32ForKey:
decodeInt64ForKey:
decodeIntForKey:
decodeObjectForKey:
decodeRectForKey:
decodeSizeForKey:
decodeVideoRules
decreaseFlushCount:
decryptMessageWithMKI:message:buffer:size:sequenceNumber:
decryptWithMKI:data:size:sequenceNumber:
decryptionMKMRecoveryInterval
decryptionStatusChanged:
decryptionTimeOutEnabled
decryptionTimeOutInterval
decryptionTimeoutEnabled
decryptionTimeoutInterval
defaultAccessNetworkType:
defaultCenter
defaultCleanupSession:
defaultControllerForAudioType:forDirection:forOperatingMode:
defaultDataCodecConfig
defaultDeviceOfType:
defaultFTXTCodecConfig
defaultInputDevice
defaultLink
defaultMMJIConfig
defaultManager
defaultMediaControlInfoFECFeedbackVersion
defaultMoCapConfig
defaultOneToOneTierTable:
defaultOutputDevice
defaultPayloadConfigurationsForStreamGroupID:
defaultRTPSampleRateForStreamGroupID:
defaultRemainingBitrateSplit:
defaultStateForMediaType:isLocal:
defaultStreamConfig
defaultTier
defaultTransport
defaultValue
defaultValue2G
defaultValueCellular
defaultValueForNetwork:
defaultVideoConferenceManager
defaultsForStreamGroup:
defaultsForStreamGroupCustom:
defaultsForStreamGroupID:streamIndex:
delaySinceLastSR
delegate
delegateNotificationQueue
delegateQueue
departureTime
depthFrameRateMultiplier
depthPixelBuffer
dequeueAndDecodeForTimestamp:
dequeueDatagramPacket:
dequeuePacket:time:
deregisterBlocksForDelegateNotifications
deregisterBlocksForNotifications
deregisterBlocksForService
deregisterBlocksForVCNotifications
deregisterClient
deregisterClientForScreenShare
deregisterCurrentStreamInputCaptureSource
deregisterForBandwidthAllocationWithClient:
deregisterForRateSharing
deregisterForScreenCapture
deregisterForVideoCapture
deregisterForVideoFramesWithDeviceRole:
deregisterFromNotifications
deregisterFromService:
deregisterNotificationForTransportStream:
deregisterPeriodicTask
deregisterRateSharingClient:
deregisterStreamOutputSourceForStreamToken:
deregisterWithUUID:service:
deriveAspectRatioFLS
deriveAspectRatioFLSWithPortraitRatio:landscapeRatio:expectedPortraitRatio:expectedLandscapeRatio:
description
deserializeNwActivity:
destination
destinationFramerate
destroyAudioConverters
destroyBuffers
destroyDispatchTimer
destroyHandler
destroyNWMonitor
destroyNWMonitorInternal
destroyPacketThread
destroySecondaryRelayDispatchTimer
destroySessionMessaging
destroyTimeoutTimer
destroyVideoModules
destroyVideoReceiver
destroyVideoTransmitter
detachNewThreadSelector:toTarget:withObject:
detailedErrorCode
detailedErrorCodeForConnectionWithCallID:
detectAbnormalOWRDWithRoundTripTime:
detectOutOfOrderAndSpikeWithReceiveTimestamp:
detectOutOfOrderAndSpikeWithSendTimestamp:
detectRemoteAveragePowerLevel:timestamp:
detectSSRCCollision:resetNeeded:
detectSSRCCollisionWithRemoteMediaStream:remoteBlobCreationTime:resetNeeded:
device:didReceiveCharacter:
device:didReceiveText:
device:didStart:error:
deviceClass
deviceDidStop:
deviceForDeviceID:
deviceForUID:
deviceFreeDiskSpace
deviceHasNonTapStreamsInStreamList:length:
deviceHasSufficientFreeSpace
deviceID
deviceList
deviceName
deviceNameForToken:
deviceRole
deviceRoleForSessionMode:
deviceType
dictionary
dictionaryForCommonStreamConfig:
dictionaryRepresentation
dictionaryWithCapacity:
dictionaryWithContentsOfFile:
dictionaryWithDictionary:
dictionaryWithObjects:forKeys:count:
dictionaryWithObjectsAndKeys:
didAddParticipantHandlerWithResult:
didAttemptSIPInvite
didChangeActualNetworkBitrateForStreamGroup:
didChangeLocalCameraUID:
didChangeLocalVariablesForSession:
didChangeLocalVideoAttributes:
didChangeReceivingStreamsForStreamGroup:
didChangeSendingStreamsForStreamGroup:
didChangeWifiAssistAvailable:reason:
didDecryptionTimeOutForMKMRecoveryForStreamGroup:
didDegrade:
didDetectMissingFrame
didEnableDuplication:activeConnection:
didEncryptionKeyRollTimeout
didEndProcessingRequestHelperWithResult:
didEnterState:oldState:
didFinishRequestHelperWithResult:
didInterruptionBeginHandler
didInterruptionEndHandler
didInvalidate
didLinkProbingLockdownEnd
didMBLRampDown
didMediaDecryptionTimeOutForStreamGroup:
didMediaGetFlushedWithPayloadType:transactionID:packetDropped:sequenceNumberArray:
didMediaQualityDegrade:
didNegotiateStreamGroupWithID:
didPause:
didPrepareSRTP
didProcessSamplesCallback
didProcessSamplesCallbackContext
didReceiveCaptions:
didReceiveCharacter:
didReceiveCommError
didReceiveCustomReportPacket:arrivalNTPTime:
didReceiveErrorFromCameraUniqueID:error:
didReceiveFirstFrame
didReceiveFirstFrameForStreamGroup:
didReceiveFirstPreviewFrameFromCamera:
didReceiveFirstPreviewFrameFromCameraUniqueID:
didReceiveFirstRemoteFrameForStreamToken:
didReceiveFrame:
didReceiveMomentsRequest:
didReceiveRTCPPackets:
didReceiveReport:
didReceiveReportPacket:arrivalNTPTime:
didReceiveSampleBuffer:
didReceiveServerStatsResponse
didReceivedSessionStatsAtTime:
didRemoveSpatialMetadataEntry
didReportAudioStall
didReportLongConnectionTime
didReportNoRemotePackets
didResume
didResumeAudioIO:
didResumeStreamInput:
didResumeStreamInputCaptureSource
didResumeVideoSink:
didSend200OK
didServerDie
didSessionBeginQuietTime
didSessionEnd
didSessionEndQuietTime
didSessionResume
didSessionSampleRateChange
didSessionStop
didStall:
didStart
didStartProcessingRequestHelperWithResult:
didStartSpeaking:
didStartStreamInput:
didStartStreamInputCaptureSource
didStop:error:
didStopPreview
didStopSpeaking:
didStopStreamInput:
didSuspend
didSuspend:
didSuspendAudioIO:
didSuspendStreamInput:
didSuspendStreamInputCaptureSource
didSuspendVideoSink:
didSwitchFromStreamID:toStreamID:
didUpdateAttachments:
didUpdateBasebandCodec:
didUpdateLinkPreferenceOrder:
didUpdatePreferredInterfaceForDuplication:notifyPeer:enableDuplication:isMediaUnrecoverableSignal:
direction
directorySize:
disableDuplication
disableMLScalarDuringSharing
disableRed
disableRemotePreferredInterfaceInference:
disableSessionHealthMonitor
disableVAD
disableViewPointCorrectionForSharing
discardConnection:
discardRelayBindingForCallID:
discardRelayBindingForCallID:withChannelNumber:
disconnect
disconnect:didRemoteCancel:
disconnectInternal:disconnectError:didRemoteCancel:
disconnectWithNoRemotePackets:
disconnectWithNoRemotePackets:timeoutUsed:
dispatchQueueNameWithConfig:
dispatchedAddParticipantConfigurations:
dispatchedAddParticipantWithConfig:
dispatchedCleanupStreamOutput:
dispatchedCompleteAudioEnabled:didSucceed:error:
dispatchedCompleteAudioPaused:didSucceed:error:
dispatchedCompleteScreenEnabled:didSucceed:error:
dispatchedCompleteVideoEnabled:didSucceed:error:
dispatchedCompleteVideoPaused:didSucceed:error:
dispatchedConfigureWithDeviceRole:negotiatedVideoEnabled:negotiatedScreenEnabled:operatingMode:
dispatchedConnectionDidChangeWithLocalInterfaceType:remoteInterfaceType:streamToken:
dispatchedDeregisterStreamOutputSourceForStreamToken:
dispatchedDidReceiveFirstRemoteFrameForStreamToken:
dispatchedHandleActiveConnectionChange:
dispatchedHandleActiveConnectionChangeForStreamGroups:
dispatchedLegacySetMediaState:forMediaType:
dispatchedMediaStateForMediaType:
dispatchedNotifyCachedStateForStreamToken:
dispatchedParticipant:didStart:error:
dispatchedParticipant:didStopWithError:
dispatchedProcessDatagramChannelEventInfo:
dispatchedRegisterStreamOutputSource:forStreamToken:
dispatchedRemoteMediaDidStall:streamToken:
dispatchedRemoteScreenAttributesDidChange:streamToken:
dispatchedRemoteVideoAttributesDidChange:streamToken:
dispatchedRemoteVideoDidDegrade:streamToken:
dispatchedRemoteVideoDidPause:streamToken:
dispatchedRemoteVideoDidSuspend:streamToken:
dispatchedRemoveParticipant:
dispatchedSetAudioEnabled:
dispatchedSetAudioPaused:
dispatchedSetMediaState:forMediaType:
dispatchedSetOneToOneModeEnabled:isLocal:
dispatchedSetRemoteAudioEnabled:
dispatchedSetRemoteScreenEnabled:
dispatchedSetRemoteSystemAudioPaused:
dispatchedSetRemoteVideoEnabled:
dispatchedSetScreenEnabled:
dispatchedSetSharingEnabled:
dispatchedSetVideoEnabled:
dispatchedSetVideoPaused:
dispatchedSetVideoReceiverFeedbackDelegate:
dispatchedStartClient:error:
dispatchedStartOneToOneStreams
dispatchedStop
dispatchedStopClient
dispatchedStopWithError:
dispatchedStopWithError:didRemoteCancel:
dispatchedTransportStop
dispatchedUpdateActiveMediaStreamIDs:withTargetBitrate:mediaBitrates:rateChangeCounter:
dispatchedUpdateConfiguration:
dispatchedUpdateUplinkTargetBitrate:rateChangeCounter:
displayLinkTick:
disposeControlInfo:
distributeBitrate:
distributeBitrateAndOptInToStreamIDsWithSeamlessTransition:
doBlockingConnectionCheck
doBlockingConnectionCheck:
doHandshakeWithMessage:topic:afterDelay:withOptions:
doRateControlWithBasebandStatistics:
doRateControlWithNWConnectionStatistics:
doRateControlWithNWStatistics:
doRateControlWithStatistics:
doRateControlWithTime:roundTripTime:packetLossRate:operatingBitrate:averageReceivedBitrate:
doRateControlWithTime:roundTripTime:packetLossRate:operatingTierIndex:averageReceivedBitrate:
doRateControlWithVCRCStatistics:
doSipEndAction:callID:error:
doSipEndProc:
doesNotRecognizeSelector:
doesQoSSourceExistForStreamToken:
doesQueueExistForStreamToken:
doesVideoPayloadMatchRemoteImageAttributeRules:
domain
doubleValue
downlinkBitrateCap
downlinkBitrateCapForConnection:
downlinkRateController
downlinkTargetBitrate
downlinkTargetCellBitrateCap
downstreamBandwidth
drain
drainAndReleasePackets
drainUnderlyingFileDescriptor
drawOverlayMessage:onPixelBuffer:attributes:
drawText:inSubLayer:
dtmf
dtmfEventHandler
dtmfEventQueue
dtmfQueue
dtmfSampleRate
dtmfTimestampRate
dtmfTonePlaybackEnabled
dtxEnabled
dtxMetrics
dtxPayload
dumpBlob:prefix:force:
dumpMediaBlob
dumpRemoteNegotiationData:forceFileDump:
dumpReport:
dupNWConnectionBackingSocket:
dupRTCPNWConnectionBackingSocket
dupRTPNWConnectionBackingSocketForNWConnection:
duplicateImportantPktsEnabled
duplicateMessageOnServerLink
duplicationEnhancementEnabled
duplicationLinkID
duplicationReason
duplicationStateUpdateWithEvent:
duration
durationThresholdDownward
durationThresholdUpward
dwAudioTS
dwRTT_ice
dynamicVideoPriorityEnabled
earlierDate:
effectType
effectsApplied
effectsArray
effectsMode
effectsRegistered:
emulatedNetworkConfigPath
emulatedRxPLR
enableAudio:
enableAudioDumpParticipantLocal:
enableAudioDumpParticipantRemote:
enableAudioPowerSpectrumReport
enableBWELogDump:
enableBasebandDump:
enableBasebandLogDump:
enableBitstreamCapture
enableCVO
enableDNNVAD
enableDuplication
enableGFTStatsReceiveThread
enableGFTStatsReporting
enableHEIFAndHEVCForMoments
enableLogDump:enablePeriodicLogging:
enableLoopbackInterface
enableMaxBitrateOnNoChangeCMR
enableNWLogDump:
enableOneToOneMode
enablePacketLogging
enableRateControlDump
enableRateControlFeebackInConfig:
enableRecvBitstreamDump
enableRedundancy:
enableRxDecodeYUVDump
enableSessionHealthMonitor
enableSpeakerPhone
enableTxBitstreamDump
enableTxSourceYuvDump
enableTxTimestampAlignmentLogs
enableVADFiltering
enableVPBLogging
enableiRATSuggestion
encodeAudio:numInputSamples:outputBytes:numOutputBytes:
encodeBool:forKey:
encodeFloat:forKey:
encodeFormats
encodeInt32:forKey:
encodeInt64:forKey:
encodeInt:forKey:
encodeObject:forKey:
encodeProcessedPixelBuffer:time:imageData:processTime:
encodeProcessedVideoFrame:
encodeRect:forKey:
encodeSize:forKey:
encodeVideoFrame:
encodeVideoRules
encodeWithCoder:
encodedBuffer
encodedBufferForRFC3640
encodedBufferSize
encodedBufferSizeForRFC3640
encodedBytes
encoderGroupID
encoderUsage
encoderUsageTypeWithOperatingMode:
encodingHeight
encodingMode
encodingScore
encodingType
encodingWidth
encryptData:size:sequenceNumber:
encryptMessage:buffer:size:sequenceNumber:transactionDelegate:
encryptionInfoForKey:
encryptionInfoReceived
endPIPToPreviewAnimation
endParticipantConfiguration
endPreviewToPIPAnimation
endPrivacyAccountingInterval
endRecording:timestamp:completionHandler:
endWithError:
enqueueAttributes:
enqueueDatagramPacket:datagramSize:options:error:
enqueuePacket:
enqueueSampleBuffer:time:
enqueueSyncDestinationChangeEvent:eventType:
enqueueWithSample:timestamp:
ensureBufferPoolSupportsOutputWidth:outputHeight:
ensureDisplayIsReady
ensureNatCachePathExists
enterStateStarted
entryForQualityIndex:
entryForStreamID:
entryTypeForMediaType:
enumerateKeysAndObjectsUsingBlock:
enumerateMatchesInString:options:range:usingBlock:
enumerateObjectsUsingBlock:
error
errorReponseCallback
errorWithDomain:code:userInfo:
establishSIPDialogWithSDP:error:
estimatedBandwidth
estimatedBandwidthCap
estimatedBandwidthUncapped
evaluateEnableRRx:
eventHandler
eventLogLevel
evsChannelAwareIndicator
evsChannelAwareOffset
evsHeaderFullOnly
evsSIDPeriod
exceptionWithName:reason:userInfo:
executeBlockForIDSDestination:blockToExecute:
expMovMeanRTT
expectedDecodeSize
expectedGFTResolutionForDevice:ratio:
expectedMessageType
expectedPreviewResolutionForDevice:width:height:
expectedProcessEndTime
experimentGroupIndex
experimentVersion
extendedHighestSequenceNumber
externalAddressForSelfConnectionBlob:
externalIOFormat
extraPayloads
extractAspectRatios:landscapeX:landscapeY:portraitX:portraitY:
extractAspectRatios:prefix:landscapeX:landscapeY:portraitX:portraitY:
extractClientDownlinkQualityInfoDictionary:
extractClientUplinkQualityInfoDictionary:
extractDimensionsForInterface:direction:
extractExpectedAspectRatios:expectedLandscapeX:expectedLandscapeY:expectedPortraitX:expectedPortraitY:
extractRTPData:ssrc:sequenceNumber:
fPref
fRate
faceMeshTrackingEnabled
faceTimeSettings
faceTimeSwitches
farEndVersionInfo
fastMediaDuplicationEnabled
fastSuddenBandwidthDetectionEnabled
fdatGroupDisabled
featureListString
featureListString:maxSize:payload:featureListStrings:
featureListString:removingPayload:andPayload:
featureListStringDict
featureListStringForH264:
featureListStringForHEVC:
featureListStringH264
featureListStringHEVC
featureString
featureStrings
fecFeedbackVersion
fecHeaderV1Enabled
fecLevelPerFrameSizeVector
fecRatio
feedbackController
feedbackSize
fetch:numSamples:timestamp:
fieldName
fieldType
fieldValue
fileExistsAtPath:
fileExistsAtPath:isDirectory:
fileSize
fileSize:
fileSystemRepresentation
fileURLWithPath:
fillImageArray:imageArray:
fillImageStruct:imageStruct:
fillImageStructWithDictionary:forInterface:imageStruct:
fillMediaControlInfo:
filterPendingTemporalStreams
filterRules:byBitrateRule:
filteredSetForOperatingMode:bandwidthConfigurations:
filteredSetUsingPredicate:
finalizeEncryption
finalizePerfTimersForFirstMediaFrameWithTime:
findAndSplitExtraBitrateFromCappedStreams:remainderBitrate:currentStreamGroupBitrate:streamToken:totalRemainderBitrateWeight:
findBitrateSplitForStreamToken:targetBitrate:
findConnectionToForwardData:size:
findExpectedFramerate:forDevice:
findFeatureString:value:valueLength:withPrefix:
findInfoSubLayerFromLayer:
finishEncoding
finishWritingWithCompletionHandler:
finishWritingWithHandler:
firstDegradedMeasure
firstExpirationTime
firstObject
firstRemoteFrameTimemoutSource
fixAudioStreamConfigurations
fixInvalidAspectRatioPortrait:landscape:
fixedJitterBufferSize
flagFromPayload:
flags
floatValue
flush
flushActiveMessages
flushActiveTransactions
flushAudioEventQueue
flushAudioRedundancyEventQueue
flushBasebandQueueWithPayloads:flushCount:
flushBasebandWithPayloads:
flushBuffer
flushDatagramPacketsList
flushDatagramPacketsListDIrectIDSPath
flushEventQueue:
flushHistoryBuffers
flushLinkProbingStatusWithOptions:
flushProbingResults:
flushRealTimeReportingStats
flushRemoteQueue
flushReportingStats
flushSyncDestinationUpdatesEventQueue
flushTransaction
flushVideoRedundancyEventQueue
followSystemCamera
followSystemInput
followSystemOutput
forceARCapture
forceAudioBitrate
forceAudioChannelCount
forceAudioHardwareSampleRate
forceAudioPacketsPerBundle
forceAudioPayload
forceAudioPowerThreshold
forceAudioPowerTimeInterval
forceAudioPriorityEnabled
forceAudioPriorityValue
forceBitrate
forceCaptureHeight
forceCaptureWidth
forceCleanup
forceDisableAudioPowerSpectrumRegister
forceDisableEffectsHealthCheck
forceDisableFaceZoom
forceDisableMediaEncryption
forceDisableMediaPriority
forceDisableMediaQueue
forceDisableMediaStalled
forceDisableMessageEncryption
forceDisableProcessSpecificRequirements
forceDisableReporting
forceDisableSSRCCollisionDetection
forceDisableThermal
forceDisableVideoDegraded
forceDisableVideoRuleCell720
forceDisableVideoRuleWiFi1080
forceDynamicEffectsFramerate
forceEVSWideBand
forceEnablePearlCamera
forceEncodeFramerate
forceEncodeHeight
forceEncodeWidth
forceFECRepairStream
forceFramerate
forceFullBandwidth
forceHWI
forceIPv6
forceKeyFrameInterval
forceKeyFrameProperties
forceMirroredCapture
forceMultiwayHWI
forceMuteAtStart
forceNetworkCellular
forceNetworkCellular:
forceNoICE
forceNoICE:
forceOneToOneMode
forceRecvVideoPayload
forceRedMaxDelay
forceRedNumPayloads
forceScreenHWI
forceThermalLevelFramerate:
forceUseFloat
forceUseInternalRTPThreadingWithDefaultValue:
forceVideoPayload
forceVideoStreamDisableBitrateCap
forceVideoStreamFramerate
forceVideoStreamKeyFrameInterval
forceVideoStreamLowLatency
forceVideoStreamPayload
forceVideoStreamResolution
forceVideoStreamRxMaxBitrate
forceVideoStreamRxMinBitrate
forceVideoStreamTxMaxBitrate
forceVideoStreamTxMinBitrate
forceVisibilityIndex
forceWiFiAssistOutOfBudget
forceWifiAssistOutOfBudget
forcedCapBitrate
forcedTargetBitrate
forcingBitrate
foregroundCameraOneToOneTierTable:
foregroundCameraRemainingBitrateSplit:
format
formatBandwidthConfig:maxBanxwidth:bandwidthString:
formatDescription
formatDescriptionString
formatsExt1
formattedText
forwardSamplesFromIO:toIO:withConverter:withHostTime:
foundVTPIP
fractionLost
frame
frameFormatMic
frameFormatSpeaker
framePosition
framePresentationTime
frameRate
frameRateIsBeingThrottled:thermalLevelDidChange:powerLevelDidChange:
framerate
framesPerIdrPeriod
frameworkVersion
frequencyMeteringEnabled
frequencyRange
frontCameraOffsetFromDisplayCenter
ftxtGroupDisabled
ftxtOldGroupDisabled
fullKeyBytes:
gatherRealtimeStats:
generalInfo
generateBandwidthAllocationTableWithTierTables:qualityIndices:qualityIndexToStreamToken:
generateConnectionData:forCallID:connectionDataSize:nonCellularCandidateTimeout:
generateEncryptionKey
generateIDSStreamID
generateInvalidStreamTokenWithError:
generateKeyFrameWithFIRType:
generateKeyFrameWithReceivedMessage:forParticipant:
generateKeyFrameWithStreamID:firType:
generateKeyFrameWithStreamID:streamGroupID:firType:
generateMediaStateEntryForMediaType:
generateMediaStreamConfigurationWithError:
generateMediaStreamInitOptionsWithError:
generateRTCPXRSummaryReport:reportCount:
generateRTCPXRSummaryReports:reportCount:
generateRTCPXRVoIPMetricsReport:reportCount:
generateRTCPXRVoIPMetricsReports:reportCount:
generateReceptionReport:reportCount:
generateReceptionReportList:reportCount:
generateReportDictionary:
generateSSRC
generateSSRC:streamID:repairStreamID:
generateStatsBlob
getAbTestMasterLocalSwitches
getAbTestingState
getAdaptiveLearningA
getAdaptiveLearningB
getAdaptiveLearningState
getAddressForService:
getAdjustmentFactorA
getAdjustmentFactorB
getAdjustmentFactorC
getAllCompatibleVideoPayloads:forMediaType:
getAllPayloadsForAudio:count:secondaryPayloads:secondaryCount:
getAllPayloadsForScreen:count:
getAllPayloadsForVideo:count:
getAllSettings
getAnbrActivationStateWithCompletionHandler:
getAudioDumpName
getAudioFormatDescriptionForStreamGroupID:
getAudioTxBitrate
getBasebandCodecType:sampleRate:
getBasebandMetricsWithNotification:
getBestCaptureSizeForEncodingSize:
getBestFrameWidth:frameHeight:frameRate:
getBitrateKbpsSinceTime:
getBitrateToStreamTable
getBufferFromPool:
getBurstyLossAtTime:inMostRecentDuration:withPercentile:
getByteCountWithIndex:isOutgoing:
getBytes:length:
getCFRunLoop
getCString:maxLength:encoding:
getCachesDirectoryPath
getCaptionsFormatDescription
getCaptureEncodingSize
getCaptureFrameRateForSource:
getCarrierBundleValue:forKey:
getCellularMTUForActiveConnectionWithQuality:
getCellularTechForActiveConnectionWithQuality:forLocalInterface:
getCharTimestampForSystemTime:
getClientOption:
getClientSpecificUserInfo
getClientSpecificUserInfo:
getClientUUID:
getClosestSampleForTimestamp:
getCompatibleLocalFeatureListForPayloads:count:
getConnectionDataForCallID:version:useCompressedData:pConnectionData:connectDataSizeInBytes:relayDictionary:interfaceUpdate:nonCellularCandidateTimeout:
getConnectionDataUsingRelay:isInitialRelay:nonCellularCandidateTimeout:queue:completionHandler:
getConnectionSelectionPolicy
getConnectionSelectionPriorities
getConnectionSelectionVersionFromFrameworkVersion:
getConnectionSetupData:withOptions:error:
getConnectionStatsBlob
getConnectionTypeForActiveConnectionWithQuality:forLocalInterface:
getCount
getCryptoSet:withMediaKey:
getCurrentAudioDeviceWithType:
getCurrentEnabledTierTables:qualityIndices:qualityIndexToStreamToken:
getCustomRootQueueWithPriority:isFixedPriority:
getDaemonProcessInfo
getDataSourceControlID
getDecodePayloadTypes:secondaryPayloadTypes:
getDecryptionMKMRecoveryInterval
getDecryptionTimeoutInterval
getDefaultLogDumpPath
getDoubleTimeFromTimestamp:timestampTick:wrapAroundCounter:
getDoubleValueForKey:defaultValue:
getErrorDictionaryFromError:
getExperimentConfig:defaultValue:
getExperimentValueForKey:
getExtendedSequenceNumberForSequenceNumber:
getFeatureFlagForStorebagKey:userDefaultKey:featureFlagDomain:featureFlagName:
getFecLevelPerFrameSizeVector
getFeedbackMessage:type:metaData:error:
getFilePathWithTransactionID:type:
getForcedPayload
getFramerateSinceTime:
getIPPort:
getIPPortForService:
getInfo:bufferLength:infoSize:type:
getInfoUnserialized:type:
getInfraChannelNumber:is5Ghz:
getInitialRemoteScreenAttributes:
getInvalidParamErrorForSetPause:didSucceed:
getIsAudioPaused:callID:error:
getIsVideoPaused:callID:error:
getKeepAliveTimeoutFromCarrierBundle
getKeyDerivationCryptoSet:withKeyMaterial:derivedSSRC:
getLatestRecvKeyMaterial
getLatestSendKeyMaterial
getLivePhotoWithTransactionID:timestamp:completionHandler:
getLocalStats:localSessionStats:
getLongTermHistoryLength
getLongTermValueWeightA
getLongTermValueWeightB
getLongTermValueWeightC
getLoopbackIP:
getMagicCookie:withLength:
getMajorVersionNumber
getMaxTemporalBitrateForStreamIDs:
getMediaLineForType:
getMediaQueueInVideoBitrate:outVideoBitrate:inAudioBitrate:outAudioBitrate:
getMediaQueueRateChangeCounter:rateChangeTime:
getMediaStreamConfigForControlInfoGenerator:
getMetaDataArrayWithIndentifier:
getMomentsCapabilities
getMomentsImageTypes
getMomentsVideoCodecs
getMostRecentLocalStats
getMultiwayConfigForStreamID:
getNATTypeFromCarrierBundle
getNSError:code:detailedCode:filePath:description:reason:
getNSError:code:detailedCode:returnCode:filePath:description:reason:
getNegotiatedResolutionForPayload:forInterface:withRule:direction:result:remoteSupportsHD:screenSharing:
getNetworkAgentRefCount
getNewSessionJoiningInterval
getNextBestCandidate:callID:isLocal:IPPortToExclude:
getNoRemoteDuplicationThresholdFast
getNotUsedTimeout
getNumberOfConnectionsInternal
getPLRTierFromPLREnvelope:
getPacketCountWithIndex:isOutgoing:
getPacketLossRateAtTime:inMostRecentDuration:
getPacketsPerBundleForStreamConfig:
getPayloadSettingsForPayload:
getPhotoWithTransactionID:timestamp:completionHandler:
getPixelFormat
getPreferredFormat:blockSize:vpOperatingMode:forOperatingMode:deviceRole:suggestedFormat:
getPreferredScreenPayloadList
getPreferredVideoPayloadList:localSupportedPayloads:
getPrimaryConnectionToBeCompared
getProbingResultsForLinkID:
getQueueForStreamToken:videoMode:
getRTCPReportNTPTimeMiddle32ForReportId:
getRampDownSuppressionBitrateThresholdWithRTT
getRampUpFrozenDuration
getRampUpSettleDuration
getRateControlFeedbackMessage:type:metaData:error:
getRateControllerType
getRealTimeStats:
getRealTimeStatsForServerBasedRxOnly:
getRealTimeStatsForServerBasedTxOnly:
getRealTimeStatsForiPadCompanion:
getReceiveStatsCollectorWithStreamConfig:
getReceivingBitrateAtTime:inMostRecentDuration:
getRecvKeyMaterialWithIndex:
getRemainingAQMBudgetWithPacket:
getRemoteCIDForDstIPPort:callID:
getRemoteICEVersion:remoteICEVersion:
getRemoteMediaStallTimeout
getReportingClientName
getReportingClientType
getReportingServiceID
getRoundTripTimeWithPacketId:time:
getSRTPMediaKeyLength:
getSecondaryConnectionToBeCompared
getSendKeyMaterialWithIndex:
getSendingBitrateAtTime:inMostRecentDuration:
getSentBytes:receivedBytes:
getServerPidWithXPCArguments:result:error:
getServerStatsBitrateAtTime:inMostRecentDuration:
getShortTermHistoryLength
getShortTermValueWeightA
getShortTermValueWeightB
getShortTermValueWeightC
getSnapshot
getSockaddrStorage:size:
getSourceDestinationInfo:
getStatistics:
getStats
getStatsHistoryElementIndex:time:inMostRecentDuration:
getStorebagValueForStorebagKey:userDefaultKey:defaultValue:isDoubleType:
getStorebagValueStorebagKey:defaultValue:
getStreamGroupConfig:
getStreamGroupPayload:
getSupportedPayloads
getSyncSourceSampleRate
getTestGroupPermutations:
getThresholdForSwitch:
getTimestampFromMicroTime:
getTopic:message:fromPayload:
getTransmitMediaControllerWithStreamConfig:
getTransmitStatsCollectorWithStreamConfig:
getUUIDBytes:
getUpdatedTimestampWithTimestamp:
getUseSbr:blockSize:forAACFormat:
getVCCurrentVersion
getVCRCSeverBagConfigWithKey:
getVCStatisticsFeedbackMessage:time:
getVCStatisticsWithType:time:
getVTPIPPort:
getValue:
getVideoCodecConfigFromStreamConfigPList:
getVideoCodecFromStreamCodecPList:
getVideoReceiverFeedbackDelegate
getVideoRecvImages:
getVideoRuleForVideoMode:interface:sessionBitrate:
getVideoRulesForTransport:payload:encodingType:
getVideoSendImages:
getVideoSettings:forInterface:payload:width:height:framerate:bitRate:
getWRMRSSIThresholdValue:
getWRMSubscribeVersion
groupEntries
groupKeysWithMode:primaryKey:
hAFRC
hMediaQueue
hSIP
hVideoReceiver
hVideoTransmitter
handle
handleANBR:forDirection:
handleAbnormalRateAdaptationSymptomReport:
handleActiveConnectionChange:
handleActiveConnectionChangeForMultiway:
handleActiveConnectionChangeForOneToOne:
handleAlarmForTimeStamp:
handleCaptureEvent:
handleCaptureEvent:subType:
handleCaptureSourcePositionDidChange:
handleCellTechChange:
handleCellTechChange:cellularMaxPktLen:
handleCellTechChange:connection:
handleCellularMTUChanged:
handleCellularMTUChanged:connection:
handleCellularSoMaskChanged:
handleChannelInfoReport:
handleCodecModeChangeEvent:
handleConnectionSetupDataChangeMessageDelivered
handleControlConfigMessage:forParticipantId:
handleDefaultLinkUpdatedWithInfo:
handleDownlinkANBR:
handleDuplicationEnabled:activeConnection:
handleDuplicationStateUpdateEvent:
handleEncryptionInfoChange:
handleEncryptionInfoEvent:
handleExchangedKey:result:
handleFirstConnectionSetup:
handleGKSConnectivitySettingsUpdate:
handleIDSEncryptionInfoEvent:
handleIDSMembershipChangeInfoEvent:
handleInsufficientFreeSpaceWithRequest:delegate:
handleKeyExchangeCompleted
handleKeyFrameRequestWithSizeAndFistMBs:count:didReceiveRTCPFB:didReceiveFIR:
handleLegacyTransitionsForMediaType:mediaState:previousState:didSucceed:error:
handleLinkConnectedWithInfo:
handleLinkConstrainsChanged:
handleLinkPreferSuggestion:
handleMediaCallbackNotification:inData:outData:
handleMediaQueueSizeExceedThresholdWithQueueSize:mediaQueueStreamId:type:
handleMediaReceivedOverPeerToPeerLinkWithConnectionId:
handleMediaReceivedOverRelayLinkWithConnectionId:
handleMembershipChangeInfoEvent:
handleMutedTalkerNotification:
handleMutedTalkerNotificationWithXPCArguments:
handleNWConnectionPacketEvent:eventType:
handleNewCandidates:version:
handleNewConnectionSetup:isInitialConnection:
handleNoServerStatsSymptomReport:
handleOptionalControlInfo:
handlePacket:packetHandler:shouldDropThisPacket:
handlePendingPrimaryConnectionChange
handlePendingRequestSuccessWithSourceURL:
handlePendingRequestWithError:
handlePendingRequestsWithSourceURL:error:
handlePreConnectionDataReceived:
handlePreferredInterfaceForDuplicationUpdate:notifyPeer:enableDuplication:isMediaUnrecoverableSignal:
handlePrimaryConnectionChanged:oldPrimaryConnection:
handlePrimaryConnectionRemoved
handleProbingResponse:
handlePruneTimerEventAndReschedule
handleRATChanged:
handleReceivedPiggybackBlobLegacy:
handleRemoteFrame:timestamp:cameraStatusBits:
handleRemoteOneToOneSwitchWithStreamGroup:fromStreamID:toStreamID:
handleRemoteSessionStats:
handleRemoteVideoAttributesChange:
handleReportingBlob:
handleRequestingKeyFrameGenerationWithStreamID:firType:
handleSampleBuffer:
handleSecondaryConnectionRemoved
handleSendMessageDidSucceed:message:participantID:
handleSessionInfoResponse:
handleSignificantPacketLossSymptomReport:
handleSinglePendingRequestWithTransactionID:sourceURL:
handleStartDidSucceed:withError:
handleStateChanges:error:semaphore:operationResult:
handleStreamGroupsActiveConnectionChange:
handleStreamsPendingKeyFrameGeneration
handleStreamsResetIDR
handleSymptomReportForDecryptionError
handleTelephonyNotification:withInfo:
handleThermalLevelChange:
handleTransitionPrepareToStarting
handleTransportSessionEvent:info:
handleTransportStreamDeactivated:
handleUplinkANBR:
handleVTPSendFailedWithData:
handleVocoderNotificationWithInfo:
handleWaitToRunTimeout
hardwareConfigurationForPayload:transportType:
hardwareScore
hasAbSwitches
hasAccessNetworkType
hasAcknowledgement
hasActiveAudioSession
hasAllowDynamicMaxBitrate
hasAllowsContentsChangeWithAspectPreservation
hasAppleNeuralEngine
hasAudioChannelCount
hasAudioFeatures
hasAudioSettings
hasAudioUnitModel
hasBandwidthSettings
hasBaseband
hasBasebandCodec
hasBasebandCodecSampleRate
hasBlobVersion
hasCameraU1
hasCanDisplayCaptions
hasCap2G
hasCap3G
hasCap5G
hasCapLTE
hasCapWifi
hasCaptionsSettings
hasCipherSuite
hasCname
hasCodecType
hasConfidence
hasConfigurationExtension
hasConnectionWithWifi:cell:
hasContent
hasCoordinateSystem
hasCustomVideoHeight
hasCustomVideoWidth
hasDecodeFormats
hasEncodeFormats
hasFaceTimeSettings
hasFormatsExt1
hasGeneralInfo
hasHasSpaceAfter
hasHdrModesSupported
hasIdsStreamID
hasInfoType:
hasIsFinal
hasIsLocal
hasLandscapeAspectRatioX
hasLandscapeAspectRatioY
hasLtrpEnabled
hasMaxIDSStreamIdCount
hasMaxMediaBitrate
hasMaxNetworkBitrate
hasMaxPacketsPerSecond
hasMediaControlInfoSubVersion
hasMediaControlInfoVersion
hasMediaFlags
hasMessage
hasMetadata
hasMic
hasMismatchedDisplayAspectRatioX
hasMismatchedDisplayAspectRatioY
hasMomentsSettings
hasMultiwayCapabilities
hasNtpTime
hasOneToOneModeSupported
hasOptionalPackedPayload
hasPTime
hasPackedPayload
hasPayload
hasPayloadSpecOrPayloads
hasPayloads
hasPendingChanges
hasPortraitAspectRatioX
hasPortraitAspectRatioY
hasPreferredFormat
hasPreferredFormatExt1
hasPrefix:
hasProfileLevelId
hasRealInputStream
hasReceivedFirstFrame
hasReceivedLastFrame
hasRepairStreamID
hasRepairedMaxNetworkBitrate
hasRepairedStreamID
hasRepairedStreams
hasRequiredPackedPayload
hasRtcpFlags
hasRtpPayload
hasRtpSSRC
hasRtpSampleRate
hasScreenRes
hasScreenSettings
hasSenderLanguages
hasSessionWaitingForSIPInvite
hasSettingsU1
hasSpaceAfter
hasStatus
hasStreamGroup
hasStreamID
hasStreamIndex
hasSuffix:
hasSupportedCodecs
hasSupportedImageTypes
hasSupportedPayloads
hasSupportedVideoCodecs
hasSwitches
hasTilesPerFrame
hasUserAgent
hasVideoConference:
hasVideoFeatures
hasVideoSettings
hash
hdBufferPool
hdTransferSession
hdrModePixelFormats
hdrModeWithOptions:
hdrModesBitmapWithSupportedModes:
hdrModesNegotiated
hdrModesSupported
head
headerFullOnly
healthPrint:isSend:
healthPrintForServerStats
heartbeat
height
highFecEnabled
highestEncodingResolution
historyBuffer:didDequeueSample:timestamp:
hwEncoderEnterBitrate
hwEncoderExitBitrate
iPayload
iRATDuplicationEnabled
iRATRtpEnabled
iRATSuggestionEnabled
iRemoteRTPPort
iWidth
iceBlocks
iceConnectedForCallID:result:didReceivePacket:useRelay:secretKey:skeResult:
iceNewCandidatesForCallID:blob:size:newCandidateVersion:
iceRemoveIPPort:forCallID:isLocalInterface:
iceShouldNominateNewCandidate:forCallID:interfaceMask:nominated:demote:connectionPriority:replaceOnly:
iceTimeoutInSeconds:
idsDestination
idsParticipantID
idsStreamID
idsStreamId
ignoreSilence
imageAttributeRules
imageData
imageType
imageTypes
imageTypesWithSupportedCodecs:
inMessageQueue
includeRedSequenceOffset
incomingMessageQueue
increaseBasebandFlushCountInternallyWithSuggestion:
increaseCapacity:
increaseFlushCountForVideoRefresh:transactionID:
indexOfCodecConfig:
indexOfObject:
indexOfObject:inSortedRange:options:usingComparator:
indexesOfObjectsPassingTest:
indicatorFromRadioTech:
infoDictionary
init
initCreateSocketRequiresOptions:dataPath:
initForMacDecodingOnly
initForSimulation:useExternalThread:
initForWritingWithMutableData:
initLock
initNegotiatorLocalConfiguration:options:
initPreSpatialSceneIdentifierTapWithFormat:sceneIdentifier:
initPreSpatialSessionTypeTapWithFormat:sessionType:
initPrimaryPayload:dtxPayload:redPayload:secondaryPayloads:allowAudioSwitching:sbr:aacBlockSize:
initPrivateWithTransportToken:configuration:negotiationData:delegate:queue:
initProcessTapWithFormat:PID:
initRequiresOptions:
initRequiresOptions:localIP:localPort:remoteIP:remotePort:
initSSRC:
initSharedInstance
initStreamGroupU1ConfigForGroupId:withLocalConfig:
initSupportedPayloads
initSystemTapWithFormat:
initUsingWifiTiers
initVideoCompressionWithWidth:height:bitrate:keyFrameIntervalDuration:
initVideoTransmitter
initWithAllowAudioRecording:videoFeatures:
initWithAllowAudioSwitching:allowAudioRecording:useSBR:ssrc:audioUnitNumber:
initWithAllowAudioSwitching:allowAudioRecording:useSBR:ssrc:audioUnitNumber:audioRuleCollection:
initWithArray:
initWithAssetWriterInput:
initWithAudioConfiguration:
initWithAudioFormat:remoteCodecInfo:
initWithAudioSessionId:maxChannelCountMic:maxChannelCountSpeaker:spatialMetadata:
initWithAudioSessionMode:
initWithBandwidthConfigurations:
initWithBase64EncodedString:options:
initWithBinCount:refreshRate:delegate:
initWithBinCount:streamToken:sinkContext:sinkCallback:
initWithBitrate:connectionType:limitingRule:
initWithBitrateArbiter:
initWithBool:
initWithBuffer:length:optionalControlInfo:version:
initWithBufferLength:
initWithBytes:bufferSize:
initWithBytes:length:
initWithBytes:length:encoding:
initWithCString:encoding:
initWithCallID:reportingAgent:
initWithCallID:requireEncryptionInfo:reportingAgent:notificationQueue:
initWithCallID:requireEncryptionInfo:reportingAgent:notificationQueue:dataPath:
initWithCallID:requireEncryptionInfo:reportingAgent:notificationQueue:isMultiwaySession:
initWithCallID:requireEncryptionInfo:reportingAgent:notificationQueue:isMultiwaySession:dataPath:
initWithCameraStatusBits:aspectRatio:contentsRect:scaleFactor:
initWithCandidatePair:
initWithCapacity:
initWithCapacity:utteranceComplete:utteranceNumber:updateNumber:
initWithCaptureServer:
initWithCaptureSourceID:configuration:
initWithClient:type:streamToken:minNetworkBitrate:maxNetworkBitrate:mediaBitrate:qualityIndex:streamID:hasRepairStreamID:repairStreamID:repairMaxNetworkBitrate:subscribedTo:startOnDemand:streamGroupID:encoderGroupID:
initWithClient:type:streamToken:networkBitrate:mediaBitrate:qualityIndex:streamID:streamGroupID:
initWithClient:type:streamToken:streamID:streamGroupID:
initWithClientDictionary:
initWithClientPid:
initWithClientPid:ssrc:
initWithClientPid:ssrc:transportSessionID:
initWithClientUUID:
initWithClientUUID:transportType:
initWithCodecType:
initWithCoder:
initWithConfidence:text:range:
initWithConfig:audioCallback:context:audioDirection:
initWithConfig:delegate:
initWithConfig:delegate:queue:
initWithConfig:delegate:reportingAgent:statisticsCollector:transmitterHandle:
initWithConfig:pid:
initWithConfigDict:
initWithConfiguration:
initWithConfigurationType:supportedAudioRules:streamIDGenerator:
initWithConnection:connection:error:
initWithConnectionResult:type:
initWithConnectionType:maxBandwidth:
initWithConnections:multiplexedConnection:error:
initWithContentsOfFile:
initWithControlChannel:remoteVersion:
initWithConvertedFrameHandler:context:
initWithCreationTime:screenResolution:abSwitches:
initWithData:
initWithData:encoding:
initWithDelegate:
initWithDelegate:audioSessionId:channelIndex:sourceContext:sourceProcess:sinkContext:sinkProcess:clientPid:isPrewarmingClient:spatialToken:
initWithDelegate:bufferLength:dispatchQueue:
initWithDelegate:connectionManager:
initWithDelegate:connectionManager:reportingAgent:
initWithDelegate:connectionManager:uplinkStatsCollector:downlinkStatsCollector:reportingAgent:transportSessionID:streamID:mediaQueue:
initWithDelegate:delegateQueue:format:options:error:
initWithDelegate:dumpID:isUplink:reportingAgent:
initWithDelegate:mode:parameters:
initWithDelegate:params:
initWithDelegate:queue:
initWithDelegate:statisticsCollector:mode:
initWithDelegate:streamToken:
initWithDelegate:withConfig:
initWithDestination:token:dataPath:error:
initWithDeviceID:
initWithDeviceRole:transportType:isGKVoiceChat:reportingHierarchyToken:
initWithDictionary:
initWithDomain:code:userInfo:
initWithDummyInformation
initWithEncodedDictionary:
initWithFloat:
initWithFormatType:
initWithFrameWidth:frameHeight:frameRate:
initWithFrameWidth:frameHeight:frameRate:payload:
initWithFrameWidth:frameHeight:frameRate:payload:priority:
initWithFrequencyRange:
initWithGroupID:mediaType:subtype:syncGroupID:
initWithGroupID:mediaType:subtype:syncGroupID:cipherSuite:
initWithHandle:callId:localSSRC:
initWithHandle:callId:localSSRC:enableNetworkMonitor:
initWithHandle:localSSRC:
initWithHandler:
initWithHandler:threadPriority:threadOptions:threadIdentifier:
initWithHardwareSettings:
initWithHeight:width:framerate:screenCaptureDisplayID:
initWithIDSDatagramChannel:mode:
initWithIDSDestination:
initWithIDSDestination:callID:error:
initWithIDSDestination:configurationDict:negotiationData:delegate:processId:isGKVoiceChat:
initWithIDSDestination:isOriginator:callID:error:
initWithIDSDestination:isOriginator:error:
initWithIDSSocket:
initWithIDSSocketDescriptor:
initWithIncomingSSRC:acceptPacketType:
initWithInt:
initWithInteger:
initWithIntervalMilliseconds:callbackBlock:
initWithIntervalMilliseconds:callbackBlock:clientQueue:
initWithIntervalSeconds:callbackBlock:
initWithIntervalSeconds:callbackBlock:clientQueue:
initWithItems:timeRange:
initWithKeyFrameInterval:framerate:weightFactor:
initWithLinkContext:dataChannelToken:
initWithLocalAddress:callID:error:
initWithLocalAddress:error:
initWithLocalAddress:isOriginator:callID:error:
initWithLocalAddress:isOriginator:error:
initWithLocalAddress:networkSockets:IDSDestination:connectionClientID:callID:options:error:
initWithLocalAddress:networkSockets:IDSDestination:rtpConnectionClientID:rtcpConnectionClientID:callID:options:error:
initWithLocalCallID:remoteCallID:isCaller:sharedSecret:error:
initWithLocalConfiguration:
initWithLocalSettings:
initWithMediaQueue:delegate:
initWithMediaType:
initWithMediaType:outputSettings:
initWithMediaType:outputSettings:sourceFormatHint:
initWithMediaType:requesterID:requesteeID:
initWithMediaType:requesterID:requesteeID:transactionID:
initWithMicContext:speakerContext:
initWithMode:
initWithMode:clientPid:
initWithMode:connectionType:maxBandwidth:
initWithMode:error:
initWithMode:localSettings:
initWithMode:options:error:
initWithMode:serverBagDict:
initWithMultiwayEnabled:
initWithNWConnectionClientID:options:error:
initWithNetworkBitrate:bundlingAppliedByCodec:audioCodecBitrate:packetsPerBundle:redNumPayloads:payloadSize:headerSize:payloadConfig:
initWithNetworkSockets:callID:error:
initWithNetworkSockets:isOriginator:callID:error:
initWithNetworkSockets:isOriginator:error:
initWithNetworkSockets:options:error:
initWithNotificationQueue:reportingAgent:
initWithNotificationQueue:reportingAgent:notificationHandler:eventHandler:handlerQueue:context:
initWithObjects:
initWithObjectsAndKeys:
initWithOffer:error:
initWithOffer:options:error:
initWithOperatingMode:bundlingScheme:packetHandler:packetHandlerContext:
initWithOperatingMode:withBitrateCap:useCaseWatchContinuity:
initWithOptions:
initWithOptions:deviceRole:error:
initWithOutputURL:transactionID:videoCodec:
initWithOutputWidth:outputHeight:formatType:
initWithPacketID:
initWithPacketID:datagram:datagramSize:
initWithParser:rtpPort:payloads:
initWithParticipantID:data:delegate:queue:
initWithPattern:options:error:
initWithPayload:encodeVideoRules:decodeVideoRules:videoParameterSupport:
initWithPayload:isSecondary:sbr:samplesPerBlock:
initWithPayload:transportType:encodingType:
initWithPayloadConfig:index:rtpSampleRate:streamGroupID:
initWithPayloadConfig:rtpSampleRate:
initWithPeriodCount:framesPerBasePeriod:
initWithPhoneContinuity:allowAudioSwitching:sbr:aacBlockSize:
initWithPhoneContinuity:allowAudioSwitching:sbr:aacBlockSize:isLowLatencyAudio:
initWithPixelBuffer:depthPixelBuffer:time:imageData:delegate:
initWithPixelBuffer:time:imageData:
initWithPolicies:
initWithPort:delegate:error:
initWithProbingResults:linkProbingResultConfig:
initWithProcessId:
initWithProcessId:delegate:delegateQueue:
initWithQueueSize:shouldBlockWhenFull:queueWaitTimeMs:useExternalThread:
initWithRTCPPacket:
initWithRTPHandle:reportingAgent:receiverStats:dumpID:reportingParentID:
initWithRTPHandle:reportingAgent:receiverStats:dumpID:reportingParentID:statisticsCollector:lowTimestampPrecision:
initWithRTPNWConnectionClientID:rtcpNWConnectionClientID:options:error:
initWithRTPNWConnectionID:RTCPNWConnectionID:handlerQueue:context:notificationHandler:eventHandler:
initWithRTPSocket:RTCPSocket:
initWithRTPSocket:RTCPSocket:notificationHandler:eventHandler:handlerQueue:context:
initWithRTTThreshold:lossRateThreshold:
initWithRedPayloadType:sampleRate:samplesPerFrame:numPayloads:maxDelay:includeSequenceOffset:
initWithRedundancyControllerMode:maxAllowedRedundancyPercentage:mediaControlInfoFECFeedbackVersion:
initWithRelayRequestDictionary:withCallID:relayType:errorCode:
initWithRelayType:relayIOType:
initWithRemoteVideoClient:
initWithReportingAgent:
initWithRotationAngle:formatType:
initWithRotationAngle:width:height:formatType:
initWithSFTranscription:utteranceNumber:updateNumber:isLocal:isFinal:streamToken:
initWithSRTPInfo:
initWithSSRC:
initWithSSRC:allowRTCPFB:videoRuleCollections:featureStrings:isCellular16x9Capable:tilesPerFrame:ltrpEnabled:
initWithSSRC:audioPayloads:
initWithSSRC:videoRuleCollections:screenSize:aspectRatioPortrait:aspectRatioLandscape:orientationMismatchAspectRatioLandscape:
initWithScreenSSRC:allowRTCPFB:videoRuleCollections:featureStrings:isCellular16x9Capable:customVideoWidth:customVideoHeight:tilesPerFrame:ltrpEnabled:pixelFormats:hdrModesSupported:
initWithSendDelegate:clientPid:delegate:delegateQueue:
initWithService:
initWithSessionID:participantID:participantUUID:optionalTopics:participantConfig:transactionDelegate:
initWithSessionID:participantID:participantUUID:participantConfig:transactionDelegate:
initWithSharedSocket:
initWithSocket:remoteAddress:packetFilter:
initWithSocketDescriptor:
initWithSocketDescriptor:token:error:
initWithSocketDictionary:notificationHandler:eventHandler:handlerQueue:context:
initWithSourceSampleRate:destinationSampleRate:
initWithStatisticsCollector:
initWithStreamConfig:
initWithStreamConfig:payloadConfigs:streamGroupID:
initWithStreamConfig:payloadConfigs:streamGroupID:defaultConfig:
initWithStreamDescription:
initWithStreamGroupConfig:
initWithStreamGroupConfig:defaultConfig:
initWithStreamIDGenerator:sessionMode:supportedAudioRules:
initWithStreamInputID:format:delegate:delegateQueue:remoteQueue:
initWithStreamInputID:streamToken:networkClockID:
initWithStreamToken:
initWithStreamToken:captionsSource:
initWithStreamToken:clientProcessID:synchronizationDelegate:delegate:delegateQueue:
initWithStreamToken:delegate:
initWithStreamToken:delegate:queue:error:
initWithStreamToken:error:
initWithStreamToken:format:bufferLength:
initWithStreamToken:messenger:
initWithStreamToken:powerSpectrumSource:
initWithStreamToken:queue:error:
initWithStreamToken:requesterID:delegate:dispatchQueue:
initWithStreams:captureFramerate:
initWithTapDescription:
initWithTargetBitrateCap:
initWithTelephonySubscriptionSlot:
initWithText:confidence:range:
initWithTimeIntervalSinceNow:
initWithTopicKey:strings:allowConcurrent:controlChannel:sendCompletionHandler:receiveHandler:
initWithTopicKey:strings:allowConcurrent:requireReliable:controlChannel:sendCompletionHandler:receiveHandler:sendMessageDataCompletionHandler:receiveMessageDictionaryHandler:
initWithTopicKey:strings:allowConcurrent:requireReliable:controlChannel:sendMessageDataCompletionHandler:receiveMessageDictionaryHandler:
initWithTransportSessionID:
initWithTransportSessionID:idsParticipantID:ssrc:streamToken:
initWithTransportSessionID:localSSRC:
initWithTransportSessionID:options:
initWithTransportSessionID:participantID:transactionID:transactionDelegate:
initWithTransportSessionID:reportingAgent:
initWithTransportSessionID:reportingAgent:mode:
initWithTransportToken:configuration:delegate:queue:
initWithTransportToken:configuration:negotiationData:delegate:queue:
initWithType:
initWithType:version:
initWithU1Config:
initWithURL:fileType:error:
initWithUTF8String:
initWithUUID:
initWithUUIDBytes:
initWithUUIDString:
initWithUnsignedChar:
initWithUnsignedInt:
initWithUnsignedInteger:
initWithUnsignedShort:
initWithUtteranceNumber:updateNumber:isLocal:isFinal:streamToken:
initWithVideoCodecs:imageTypes:capabilities:multiwayCapabilities:
initWithVideoCodecs:imageTypes:capabilitiesOneToOne:capabilitiesMultiway:
initWithVideoStreams:streamInfos:reportingAgent:delegate:
initWithWidth:height:formatType:
initXPCCommandQueue
initialBitrateTierFromLearntBitrateWithLocalTechnology:remoteTech:defaultTier:
initialMemoryUsageMB
initialReceivedBytes
initialSecondaryRelaySetupDone
initialSentBytes
initialTierIndexForFaceTimeWithMaxTierIndex:
initializeAudioStreamWithConfig:maxIDSStreamIDCount:supportedAudioRules:isLowestQualityAudio:
initializeAudioStreamsWithSupportedRules:
initializeDisplayLink
initializeEncryption
initializeInterfaceType
initializeInterfaceTypeWithSocket:
initializeIsIPv6
initializeLocalConfiguration:negotiationData:deviceRole:preferredAudioPayload:
initializeLocalSwitches
initializeMediaNegotiator
initializeMultiwayAudioStreamGroup:forLocalConfig:
initializeMultiwayVideoStreamGroup:forLocalConfig:
initializeNetworkInfoWithSocket:
initializeNetworkMTU
initializeNewCall
initializeNewCallWithDeviceRole:
initializeNewCallWithDeviceRole:reportingHierarchyToken:
initializeOneToOneStreamGroup:forLocalConfig:
initializeParameterSets
initializeParticipantType
initializeReceiveQueue:error:
initializeSRTPInfo:
initializeStateStrings
initializeStreamGroupsForLocalConfig:
initializeStreamInputWithXPCArguments:result:error:
initializeStreamsWithSupportedAudioRules:
initializeTextPacket:withMediaPacket:
initializeTransportSessionWithIDSDestination:error:
initializeTransportSessionWithRTPNWConnectionID:rtcpNWConnectionID:error:
initializeTransportSessionWithSocketDictionary:error:
initializeTransportSetupInfoWithIDSDestination:error:
initializeTransportSetupInfoWithRTPSocket:RTCPSocket:
initializeTransportSetupInfoWithSocketDictionary:
initializeTransportSetupInfoWithTransportSession:
initializeVideoReceiver:reportingAgent:fecHeaderV1Enabled:videoJBEnabled:
initializeVideoStreamWithConfig:streamIndex:
initializeVideoStreamWithDefaults
initializeVideoStreams
initializeVideoTransmitter:videoRules:unpausing:reportingAgent:fecHeaderV1Enabled:isFECGeneratorEnabled:
initializeWRMInfo
initializeWRMUsingRtpHandle:
initiateRelayRequest
initiateResolutionChangeToWidth:height:rate:
initilizeStreamInfoMapWithStreamInfos:
injectAudioConfigType
inputAudioPowerSpectrumToken
inputAvailable
inputDevice
inputDevices
inputFormat
inputFrequencyMeteringEnabled
inputMeter
inputMeteringEnabled
insertInfoSubLayerIntoLayer:videoMode:
insertObject:atIndex:
insertStartBlockWithEvent:volume:timestamp:
insertStopBlockWithEndTimestamp:withPauseCompleteTimestamp:
insertSubLayerInLayer:videoMode:videoSlot:
insertionIndex:forValue:
intValue
integerValue
integerValueForKey:
integerValueForKey:defaultValue:
interarrivalJitter
interfaceForCurrentCall
interfaceKey:forInterface:directionKey:forDirection:
interfaceListenerDelegate
interfaceName
interfaceStateDidChangeWithWifiUp:cellUp:
internalBundleFactor
internalPushAudioSamples:
internalReceiverQueue
internalStopRelayThread
internalUpdateOneToOneBitrateCapsForConnection:
intersectSet:
intersectsSet:
invalidate
inviteDataForParticipantID:callID:remoteInviteData:nonCellularCandidateTimeout:block:queue:caller:
inviteDataForParticipantID:callID:remoteInviteData:nonCellularCandidateTimeout:error:
inviteDictionaryForCallID:remoteInviteDictionary:nonCellularCandidateTimeout:block:queue:
ioBufferDurationWithFirstIO:secondIO:
ipVersion
ipport
ipv6Prefix
is4x
isAMRCodecModeSupported:forBandwidth:
isActive
isActiveMediaType:
isAggregableDevice
isAllConnectionTypeValid:
isAppleSiliconMac
isAudioActive
isAudioCodecMaskValid
isAudioCodecValid
isAudioEnabled
isAudioMuted
isAudioOnly
isAudioPaused
isAudioPausedToStart
isAudioPayloadSupported:
isAudioPowerBelowThreshold
isAudioPowerMovingAverage
isAudioRunning
isAudioSending
isAudioStalled
isAudioStream:
isAudioStreamOnDemand:isLowestQualityAudio:
isAvailable
isBasebandNotificationOutOfKeyFrameCoolDownTime
isBasebandRATGreaterOrSameAsLTE:
isBetterConnection:asPrimary:
isBetterForSIPInviteWithSourceDestinationInfo:thanSession:
isBetterPrimaryConnectionAvailable
isBitrateOscillatingWithCurrentTierIndex:
isBluetoothDevice
isCNEnabled
isCNValid
isCallActive
isCallOngoing
isCaller
isCameraZoomAvailable
isCaptioningSupported
isCaptionsSupported
isCaptureSIFRPreferred
isCellular16x9Capable
isCellular16x9EncodeCapable
isCellularTappingSupported
isClientInProcess
isClientSpecificUserInfoSupported
isClientSpecificUserInfoSupported:
isCodecModeChangeRequestValid:
isCodecModeSupported:forBandwidth:withPayload:
isComfortNoise
isCompoundStreamIDsIncreased
isCongested
isConnectedAndAllowAdditionalConnection
isConnectedOnIPv6ForActiveConnectionWithQuality:
isConnectedOnRelayForActiveConnectionWithQuality:
isConnectedToSession
isControlChannelDatagram:
isCurrentDTXEnabled
isCurrentNetworkBad
isCurrentPayloadTypeValid
isDTLSEnabled
isDTMF
isDTMFValid
isDTXEmptyPacket:
isDTXEnabled
isDecodeSupported
isDecryptionTimeOutEnabled
isDecryptionTimeoutEnabled
isDefaultMode
isDefaultPayloadConfig:index:rtpSampleRate:streamGroupID:
isDefaultPayloadConfigsWithStreamConfig:payloadConfigs:streamGroupID:
isDefaultPayloadConfigsWithStreamGroupConfig:
isDefaultSettings
isDegraded
isDemuxNeeded
isDeviceLargeScreen
isDisplayPortrait
isDroppedByAQM
isDuplexAudioOnly
isDuplexVideoOnly
isDuplicateMessageID:messageHistory:participantID:
isDuplicationAllowed
isDuplicationAllowedForParticipantID:bucketsToSum:threshold:
isDuplicationConnectionCandidate:
isDuplicationEnabled
isDuplicationPending
isEVSCodecModeSupported:forBandwidth:
isEVSPayload:
isEffectsOn
isEnabledMediaType:
isEnabledStreamToken:
isEncodeSupported
isEncodingSqaures
isEncryptionEnabled
isEndToEndBasedBandwidthProbingEnabled
isEndToEndLink
isEqual:
isEqualFaceTimeSettings:
isEqualFeatureStrings:
isEqualFormat:
isEqualMomentsImageTypes:
isEqualMomentsVideoCodecs:
isEqualMultiwayAudioStreamSet:
isEqualMultiwayVideoStreamSet:
isEqualPayloads:
isEqualStreamGroupConfigs:
isEqualTo:
isEqualToData:
isEqualToDictionary:
isEqualToNumber:
isEqualToRelayIO:
isEqualToSet:
isEqualToString:
isEqualToVideoAttributes:
isExtraDelayForPacketRetransmissionsEnabled
isFECGeneratorEnabled
isFECVersion2Enabled
isFaceMeshTrackingEnabled
isFallbackStreamWithStreamGroupID:streamConfig:
isFarEndVersionInfoValid
isFeatureListStringExpectedForStreamType:
isFecGeneratorEnabled
isFeedbackReceived
isFirstInitialRampUpDone
isFirstTimestampArrived
isFollowSystemInputEnabled
isFollowSystemOutputEnabled
isFrequencyMeteringEnabled:
isFull
isGKVoiceChat
isGVAEncoderAvailable
isHDVideoSupported
isHEVC444DecodeSupported
isHalfDuplexAudio
isHandoverSupported
isHeaderFullOnly
isHiDefCapable
isHighPriorityAudioWithPower:voiceActive:
isHistorySupported
isIMac
isIMacPro
isIOS
isIPv6
isInCanvas
isInDaemon
isInThrottlingMode
isInitialized
isInitiator
isInputMeteringEnabled
isInterfaceOnCellularForActiveConnectionWithQuality:forLocalInterface:
isJitterBufferModeValid
isKeyExchangeEnabled
isKeyFrame:
isKindOfClass:
isLTRPEnabled
isLargeFrameRequestDisabled
isLastFrameProbingSequence
isLatencySensitiveMode
isLatencySensitiveModeEnabled
isLinkProbingActive
isLoaded
isLoadedCondition
isLoadedMutex
isLocalCellularInterfaceUsed
isLocalConstrained
isLocalDelegated
isLocalExpensive
isLocalIPPort:
isLocalOn5G
isLocalOnCellular
isLocalOnWiFi
isLocalOrRemoteOnCellular
isLocalSwitchEnabled:
isLossBasedAdaptationOn
isLost
isLowBitrateCodecPreferred:
isLowLatency
isLowLatencyAudio
isLowLatencyStreamType
isLowLatencyStreamType:
isMacBookAir
isMacBookWVGA
isMacPro
isMacmini
isMainThread
isMatchedPacket:size:
isMediaPacket:length:
isMediaStalled
isMediaStateAPISupportedForMediaType:
isMemberOfClass:
isMicrophoneMuted
isMixingVoiceWithMediaEnabled
isMutedTalkerNotificationRegistered
isNACKPacket:length:
isNegotiationCodecTypeAudio:
isNetworkSaturated
isNewRateSentOut
isOctetAligned
isOfferSupported
isOnSameIPPortWithConnection:
isOnSameInterfacesAndQRSessionWithConnection:
isOnSameInterfacesWithConnection:
isOnSameQRSessionWithConnection:
isOneToOne
isOneToOneEnabled
isOneToOneModeEnabled
isOneToOneRemoteMediaStalling
isOneToOneRemoteParticipantUsingScreen
isOneToOneScreenEnabled
isOneToOneStreamGroup:
isOneToOneTemporalSupportedForSettings:streamDirection:
isOneToOneUsingScreen
isOneToOneUsingVideo
isOperatingAtMaxBitrate
isOperatingAtMinBitrate
isOptimalConnection:asPrimary:interfaceMask:
isOpusInBandFecEnabled
isOuputMeteringEnabled
isOutputFrequencyMeteringEnabled
isOutputMeteringEnabled
isPTimePackable:
isParticipantActive:
isParticipantPeace:
isPaused
isPausedMediaType:
isPayloadAssociated:
isPayloadSupported:
isPayloadSupportedInFaceTime:
isPayloadTimestampWithinThreshold:forTimestamp:
isPayloadTypeMatched:
isPersistent
isPixelFormatAvailable
isPixelFormatValid:hdrMode:
isPowerSpectrumEnabled
isPreLionOS
isPreWarmStateEnabled
isPreferredDevice
isPreferredVideoRule:preferredFormat:
isPreviewRunning
isPrewarmingClient
isPrimaryConnectionImprovedFromHistory:withIndex:remoteStatsHistory:
isPrimaryConnectionSameAsConnection:
isProbingLargeFrameRequiredAtTime:
isRTCPEnabled
isRTCPForLossFeedbackEnabled
isRTCPPacket:length:
isRTCPPayload:
isRTCPReceiveCallbackEnabled
isRTCPSendEnabled
isRTCPTimeOutEnabled
isRTCPTimeoutEnabled
isRTPFilter
isRTPFlushBasebandFromVCRateControl
isRTPTimeOutEnabled
isRTPTimeoutEnabled
isRadioAccessTechnologyOnCellular:
isRadioTechnologyOnCellular:
isRadioTechnologyOnNewerThanLTE:
isRadioTechnologyOnWiFiOrLTEAndNewer:
isRateAdaptationEnabled
isRateLimitedMaxTimeExceeded
isReadyForMoreMediaData
isRedEnabled
isRedValid
isRedundancyControlEnabled
isRedundancyEnabled
isRedundancyStrategyResetPending
isRelayEnabled
isRelayForced
isRelayRunning
isRemoteAudioEnabled
isRemoteAudioPaused
isRemoteCameraSenderSupported
isRemoteCodecInfoValid
isRemoteConstrained
isRemoteDelegated
isRemoteDuplicating
isRemoteExpensive
isRemoteMediaQualityDegraded
isRemoteMediaStalled
isRemoteMuted
isRemoteOSPreLion
isRemoteOn5G
isRemoteOnCellular
isRemoteOnWiFi
isRemotePresentationLarge:
isRemoteScreenEnabled
isRemoteSessionStatsTooLateWithStatsId:
isRemoteVersionInfoValid
isRemoteVideoEnabled
isRemoteVideoPaused
isReplaceOnly
isResumed
isRoundTripTimeDecreasingOrLessThanMinEnvelope
isRunning
isSIPEnabled
isSIPHandleValid:
isSKEOptimizationEnabled
isSameAsConnection:
isSameSRTPConfig:
isSameSRTPKey:newKey:
isScreenActive
isSeamlessTransitionSupportedForStreamGroup:
isSecondDisplaySupportEnabled
isSecondary
isSecondaryPayload:
isSecureMessagingRequired
isSendBitrateLimited
isSenderProbingEnabled
isSendingEnabled
isSendingMedia
isServerBasedBandwidthProbingEnabled
isServerPacketRetransmissionEnabled
isServerPacketRetransmissionEnabledForVideo
isServerRTxEnabled
isSiriVoicePlayoutSupported
isSiriVoiceTapSupported
isSomethingConnectedToJack
isSpatialAudioSupported
isSpatialAudioSupportedIPad
isSpatialAudioSupportedIPhone
isSpatialAudioSupportedIPod
isSpeakerPhoneEnabled
isStalled
isStarted
isStartingWithPrefix:
isStreamAvailableForScope:
isStreamGroupActive:
isStreamGroupEnabled:
isStreamInputIDValid
isSubStream
isSubscribedTo
isSubsetOfSet:
isSubstream
isSupported
isSupportedChipID
isSupportedDeviceClass
isSupportedDirection:
isSupportedPayload:
isSuspended
isSwitchEnabled:
isTalkSpurtStart
isTalking
isTargetBitrateStabilized
isTelephony:
isTemporalScalingEnabled
isTemporalStream
isTunnelSocketClosed
isUpgraded
isUseCaseWatchContinuity
isUseCaseWatchContinuity:primaryPayload:
isUsedPayloadConfigAtIndex:streamGroupConfig:rtpTimestampRate:
isUsingSuppression
isUsingViceroyBlobFormat
isVADFilteringEnabled
isVPN
isVTPInitialized
isValidAudioConfig
isValidConfiguration:
isValidDevice
isValidForDirection:
isValidInputDevice
isValidProbingResult:
isValidStreamGroupIDFromConfig:defaultConfig:
isValidTextConfig
isValidTimingForKey:
isValidVideoConfig
isValidVideoPayloadOverride:
isVariableSliceModeEnabled
isVideoEnabled
isVideoFullHD
isVideoPaused
isVideoPausedToStart
isVideoProtected
isVideoQualityDegraded
isVideoQualityNearDegraded
isVideoRenderingSupported
isVideoRunning
isVideoSourceScreen
isVideoStopped
isVideoStoppedByVCRateControl
isVideoStream:
isVideoStreamOnDemand:
isVideoStreamSupported:
isVideoSuspended
isViewPointCorrectionSupported
isVirtualRelayLink
isVisible
isVoLTE:
isVoLTERateAdaptationEnabled
isWaitingForICEResult
isWifiToWifi
isWindowed
jbTargetEstimatorSynchronizer
jitterBufferMode
jitterBufferModeFromAVCJitterBufferMode:
jitterQueuePushPacket:
keepOvershootingRampDownBandwidth
keyFrameInterval
keyPathsForValuesAffectingNetworkQuality
keysSortedByValueUsingComparator:
keysWithMode:
landscapeAspectRatioX
landscapeAspectRatioY
largeFrameSizeAtCurrentBandwidth
largeFrameSizeRequested
lastActiveCall
lastActiveCallID
lastBasebandFlushCountChangeTime
lastCalledApiName
lastDecodedFrameTime
lastDisplayedFrameRTPTimestamp
lastFrameTime
lastInputAudioTimeStamp
lastKeyFrameSentTime
lastLastVideoStallDuration
lastNoVoiceActivityPacketCount
lastObject
lastPrimaryConnectionInUse
lastProbingArrivalTime
lastProbingSequenceTimeActual
lastProbingSequenceTimeExpect
lastRTPTimestamp
lastReceived
lastReceivedPacketTimestamp
lastReceivedRTCPPacketTime
lastReceivedRTPPacketTime
lastReceivedVideoRTPPacketTime
lastSentAudioHostTime
lastSentAudioSampleTime
lastUsedMKIBytes
lastVideoCallAlarmTime
lastVideoKeyFrameTime
lastVideoQualityNotificationUpdate
lastVideoRefreshFrameTime
latencySensitiveMode
latencySensitiveModeEnabled
latestOutgoingMessageIndex
layer
layoutWithAVCLayout:
learntBitrateForSegment:defaultValue:
length
lengthOfBytesUsingEncoding:
limitCameraDownlinkBitrateDuringSharing
limitRulesFromVideoRules:frameHeight:videoRules:
limitVideoRulesToMaxWidth:maxHeight:transportType:
limitingRule
limits
linkID
linkPreferenceOrder
linkProbingCapabilityVersion
linkProbingHandlerDelegate
linkUUID
listLock
listenForNotifications
listener
loadCannedVideoReplay
loadDefaultSettings
loadDefaultVCRCFeatureFlags:
loadPoliciesFromJsonFile
loadRelay
loadSessionConfigurationWithResourceName:
loadStorebagValues
localAddress
localBandwidthEstimation
localBitrateForCallID:
localCallInfo
localCamera
localCameraUID
localCellTech
localConfigurationWithData:deviceRole:preferredAudioPayload:
localConnectionData
localConnectionType
localFrameHeight
localFramerateForCallID:
localInterfaceName
localInterfaceType
localInterfaceTypeString
localLanguages
localLinkFlags
localLinkTypeSuggestionChangeTime
localOnWiFi
localPacketLossRateForCallID:
localParticipant
localParticipantID
localRATTypeOverride
localRelayConnectionData
localRelayRequestResponse
localRelayUpdate
localSSRC
localScreenAttributesForVideoAttributes:
localScreenPortraitAspectRatio
localSettings
localSwitches
localVideoAttributes
localVideoLayer:
localWRMLinkType
localWRMLinkTypeSuggestion
locale
localeWithLocaleIdentifier:
localeWithMediaBlobLanguage:
localizedCaseInsensitiveCompare:
localizedDescription
localizedFailureReason
lock
logAllStreamTokens
logConnectionSuccess
logDetailedNetworkInformation
logFilename:dumpID:logNameType:prefix:suffix:
logIdentity:
logPerfTimings
logPrefix
logRemoteParticipantInfo:
logSignalStrength
logTierInfo:
logTierPickerConfig:
logToDumpFilesWithString:
longLongValue
longTerm
longValue
loopLength
loopbackNegotiationDataWithData:
loopbackSessionWaitingForSIPInvite
loopbackSocketTunnel:receivedData:from:
lossEventCount
lossEventCountThresholdForBitrate:
lossEventIncreasingCount
lossEventOverThresholdRatio
lossRate:forParticipantID:
lossRateThreshold
lowFpsVideoEnabled
lowNetworkModeEnabled
ltrAckFeedbackType
ltrpEnabled
machineName
mainBundle
mainDisplay
mainRunLoop
makeInvalidKey
mapPacketMultiplexModeToRTPMode:
mapPacketMultiplexModeToSIPMode:
mappedKeyBytes:size:
mappedKeySize
mappedRemoteQualityIndexForQualityIndex:
margin
markAsFinished
markUnfinishedSessions
marketingName
matchedFeaturesStringForPayload:
matchesCallID:
matchesChannelTokenWithSourceDestinationInfo:
matchesOpenSessionForParticipantID:
matchesParticipantID:
matchesSourceDestinationInfo:
max2GRate
maxActiveScreenEncoders
maxActiveVideoDecoders
maxActiveVideoEncoders
maxAllowedAudioOnlyBitrateForConnection:
maxAllowedBitrate
maxAllowedBitrate2G
maxAllowedBitrate3G
maxAllowedBitrateForConnectionType:
maxAllowedBitrateForConnectionType:operatingMode:
maxAllowedBitrateForVCConnection:forLocalInterface:
maxAllowedBitrateForVCConnection:forLocalInterface:encodeRule:
maxAllowedBitrateForVCConnection:forLocalInterface:operatingMode:encodeRule:
maxAllowedBitrateHighRat
maxAllowedBitrateLTE
maxAllowedBitrateP2P
maxAllowedBitrateRuleForConnection:
maxAllowedBitrateTCPRelay
maxAllowedBitrateUSB
maxAllowedBitrateWifi
maxAllowedCellularBitrate
maxAllowedScreenShareBitrateForConnection:
maxAllowedScreenShareCellularBitrate
maxAudioNetworkBitrateForLocalInterfaceOnWiFi:isLowLatencyAudio:
maxAveragePacketDelayMs
maxBandwidth
maxBandwidthWithOperatingMode:connectionType:
maxBdatNetworkBitrateForVideoQuality:isLocalOnWiFi:isRedundancyRequested:
maxBitrate
maxBitrate2GDownlink
maxBitrate2GUplink
maxBitrate3GDownlink
maxBitrate3GUplink
maxBitrateExpensiveDownlink
maxBitrateExpensiveUplink
maxBitrateForConnectionType
maxBitrateKbps
maxBitrateNonExpensiveDownlink
maxBitrateNonExpensiveUplink
maxBitrateWiFiDownlink
maxBitrateWiFiUplink
maxCameraNetworkBitrateForVideoQuality:isLocalOnWiFi:isRedundancyRequested:isSharingEnabled:
maxCaptureCameraFrameRate
maxCaptureCameraFrameRateForMode:
maxCaptureFrameRateForMode:
maxCaptureResolution
maxChannelCountMic
maxChannelCountSpeaker
maxConnectionMTU
maxDelay
maxDisplayRefreshRate
maxEncoderPixels
maxEncryptedDataSize
maxFdatNetworkBitrateForVideoQuality:isLocalOnWiFi:isRedundancyRequested:
maxFpsCameraCaptureDuringSharing
maxFrameDurationMillis
maxFrameRateSupportedBackgroundBlur
maxFrameRateSupportedScreenShare
maxFramerate
maxFramerateFromStreamConfigs:
maxFrequency
maxFtxtNetworkBitrateForVideoQuality:isLocalOnWiFi:isRedundancyRequested:
maxIDSStreamIdCount
maxMTU
maxMultiwayFramerateSupported
maxNetworkBitrate
maxNetworkBitrateForStreamGroupID:videoQuality:isLocalOnWiFi:isRedundancyRequested:isSharingEnabled:
maxNetworkBitrateMultiwayAudioOnWifi:isLowLatencyAudio:
maxNetworkBitrateMultiwayVideoOnWifi:
maxOneToOneFramerateSupported
maxPacketSize
maxPacketsPerSecond
maxPtime
maxRedundancyPercentage
maxRemoteParticipants30fps
maxScreenEncodingSizeSupported
maxStreamFrameRate
maxSupportedTemporalLayers
maxTargetBitrate
maxTierBelowBitrate:maxTierIndex:minTierIndex:
maxTierIndex:
maxUDPPayloadSize
maxUnencryptedDataSize
maxVCPSupportedTemporalLayers
maxZoomFactor
maximumLengthOfBytesUsingEncoding:
maximumSamplesPerFrame
mediaBitratesForStreamToken:targetNetworkBitrate:
mediaBlobForVersion:negotiationData:
mediaBlobLanguageWithLocale:
mediaCellularRxBytes
mediaCellularTxBytes
mediaControlInfoFECFeedbackVersion
mediaControlInfoGenerator
mediaControlInfoGeneratorOptions
mediaControlInfoGeneratorType
mediaControlInfoSubVersion
mediaControlInfoVersion
mediaController:mediaSuggestionDidChange:
mediaEntries
mediaExcessiveCellularRxBytes
mediaExcessiveCellularTxBytes
mediaFlags
mediaFlagsWithPayloadConfig:
mediaNegotiatorVersionWithNegotiationProtocolVersion:
mediaQualityDegraded:
mediaQueue
mediaQueueDumpEnabled
mediaQueueThrottlingInterval
mediaState
mediaStateChangedForParticipant:
mediaStateForMediaStateMessageValue:
mediaStateForMediaType:
mediaStateMessageKeyForMediaType:
mediaStateMessageStreamGroupKeysForMediaType:
mediaStateMessageValueForMediaState:
mediaStates
mediaStream:didReceiveFlushRequestWithPayloads:
mediaStream:didReceiveNewMediaKeyIndex:
mediaStream:didReceiveRTPGapForMediaKeyIndex:
mediaStreamDelegate
mediaStreamDelegateQueue
mediaStreamGroupCoordinateSystem
mediaStreamGroupStateToVCStreamGroupState:
mediaStreamInfoArray
mediaStreams
mediaSubtype
mediaType
mediaTypeForMediaStateMessageKey:
mediaTypeToString:
mediaTypesFromStreamGroupID:
mediaWifiRxBytes
mediaWifiTxBytes
memoryUsageMB
mergeFrom:
mergeProbingResults:
messageExistingParticipantsPostUpgrade
messageForCommand:
messageHandler
messageMediaInitialStateToParticipant:
messageReceived:participantInfo:
messageReceivedDelegate
messageVCMomentsRequest:
messaging
messenger
messengerFromClientContext:
metaData
metadata
metadataGlobalInfo
metadataPositionalInfo
metadataSateWithUIState:
metadataWithStreamConfig:
meterServerDidDisconnect
meterServerDidDisconnect:
meterSpectrumCaptureWasInterrupted:
meterWithType:
meters
micBuffer
micCallback
micCallbackContext
micContext
micPowerRMS
micStreamInfo
micTimestamp
microphoneOnlyTierTable
microphoneU1
minBandwidth
minBitrate
minBitrateKbps
minFramerate
minFrequency
minKeyFrameGenerationIntervalForMode:
minMarginRequired
minNetworkBitrate
minParticipantCountSendVoiceActiveOnly
minSamplesCountFastBandwidthEstimation
minTargetBitrate
minTierAboveBitrate:maxTierIndex:minTierIndex:
minTierIndex:
minusSet:
mismatchedDisplayAspectRatioX
mismatchedDisplayAspectRatioY
mixingVoiceWithMediaEnabled
mode
moments:capabilitiesDidChange:
moments:didEndProcessingRequest:stillImageURL:movieURL:error:
moments:didStartProcessingRequest:error:
moments:shouldProcessRequest:recipientID:
momentsCapabilitiesWithNegotiationBlobMomentsSettings_Capabilities:
momentsCollectorDelegate
momentsImageTypes
momentsServerDidDisconnect:
momentsUseBestVideoRule
momentsUserPreferenceEnabled
momentsVideoCodecs
monitorBufferPool
mostBurstLoss
mostRecentStartedCall
multiplexedConnection
multiwayAudioNetworkBitrateCapCellular
multiwayAudioNetworkBitrateCapWifi
multiwayAudioStreamNegotiatorConfigForStreamConfig:
multiwayAudioStreams
multiwayAudioStreamsAtIndex:
multiwayAudioStreamsCount
multiwayAudioStreamsType
multiwayCapabilities
multiwayCapabilitiesWithBlobCapabilities:
multiwayConfig
multiwayMaxTierFromServerBag
multiwayToOneToOneSwitchConfigure
multiwayToOneToOneSwitchResume
multiwayVideoNetworkBitrateCapCellular
multiwayVideoNetworkBitrateCapWifi
multiwayVideoStreamAtIndex:
multiwayVideoStreamType
multiwayVideoStreams
multiwayVideoStreamsCount
mutableCopy
muteWithError:
muted
mutedPeers
mutex
nackGeneratorStorebagConfigVersion
name
nameForNetworkWithIPPort:interfaceName:
natMutex
natObserver
natTypeDictionary
natTypeForCallSessions:
natTypeForCommNATFlags:isCarrier:
nativeParticipantSupportsStreamGroupID:
nearestRedPayloadForTimestamp:
needsNewNumSamples:timestamp:
needsPacketThread
negotiateAudioAllowRecording:
negotiateAudioDTXPayload:
negotiateAudioPrimaryPayload:
negotiateAudioREDPayload:
negotiateAudioRules:
negotiateAudioSecondaryPayloads:
negotiateAudioSettings:
negotiateAudioUseSBR:
negotiateCaptionsWithCaptionsSettings:
negotiateFaceTimeSettings:
negotiateFeaturesString:forPayload:
negotiateHDRMode:videoResults:
negotiateMaxBandwidth:
negotiateMediaMaxBandwidth
negotiateMomentsWithMomentsSettings:
negotiateMultiwayAudioStreams:
negotiateMultiwayVideoStreams:
negotiateOneToOne:
negotiateOneToOneWithRemoteParticipant:
negotiatePayloads:withError:
negotiateRTCPFB:
negotiateScreenSettings:
negotiateStreamGroupConfig:remoteInviteBlob:
negotiateSwitches
negotiateSwitchesForIsCaller:
negotiateTilesPerFrame:negotiatedSettings:
negotiateU1SettingsForStreamGroup:
negotiateVideoMaxResolutionWithEncodeRules:decodeRules:isEncoder:
negotiateVideoSettings:
negotiatedAudioPayloadTypes
negotiatedAudioPayloads
negotiatedAudioSettings
negotiatedCameraSettingsBetweenLocalU1Config:remoteU1Config:
negotiatedCaptionsSettings
negotiatedFaceTimeSettings
negotiatedFeaturesStringWithLocalFeaturesString:remoteFeaturesString:
negotiatedMicrophoneSettingsBetweenLocalU1Config:remoteU1Config:
negotiatedMomentsSettings
negotiatedReceivingFramerate
negotiatedResultsForGroupID:
negotiatedResultsForGroupID:localU1Config:remoteU1Config:
negotiatedScreenEnabled
negotiatedScreenSettings
negotiatedScreenSettingsBetweenLocalU1Config:remoteU1Config:
negotiatedSettings
negotiatedStreamGroupConfigForGroupID:negotiatedStreamGroupConfigs:
negotiatedStreamGroups
negotiatedSwitches
negotiatedSystemAudioSettingsBetweenLocalU1Config:remoteU1Config:
negotiatedVideoEnabled
negotiatedVideoSettings
negotiationBlobFromData:
negotiationCipherSuiteWithCipherSuite:
negotiationCodecTypeWithCodecType:
negotiationDataForLoopbackParticipant
negotiationDataForProtocolVersion:
negotiationDataWithVersion1:version2:
negotiationDataWithVersion:mediaBlob:
negotiationPackedPTimeWithPTime:
negotiationPackedRtpSampleRateWithRTPSampleRate:
negotiationPayloadFromPayload:
negotiationProtocolMask
negotiatorCipherSuite:fromMediaStreamConfig:
negotiatorSettingsForMode:deviceRole:options:errorString:
networkAgentRefCount
networkBitrate
networkClockID
networkConditionsTimeoutInSeconds
networkFeedbackController
networkInterfaceType
networkMTU
networkOverheadInBytesWithNumOfStreamId:isPriorityIncluded:
networkPayload
networkQuality
networkQualityForCallID:
networkQualityGraphLayer
networkQualityGraphLayer_
networkQualityUpdateTimer
networkQualityUpdateTimer_
networkReceivePackets
networkServiceTime
networkStateDidChange
networkType
newAggregatedBandwidthTableWithRedundancy:redundancyEnabledFor720Stream:enableMap:
newArrayOfStreamIdsForPacket:
newAudioConverterWithInputFormat:outputFormat:withError:
newAudioMultiwayConfigWithPList:audioRules:maxIDSStreamIDCount:streamIDGenerator:ssrc:
newAudioObjectStringPropertyWithSelector:scope:element:
newAudioRateControlConfigWithMediaControlInfoVersion:enableFeedbackController:isOneToOne:
newAudioSendGroupConfigWithStreamGroupID:streamGroupConfiguration:
newAudioSessionMediaPropertiesForSystemAudioWithPreferredClient:audioUnitProperties:
newAudioSessionMediaPropertiesWithPreferredClient:audioUnitProperties:
newAudioStreamGroupStreamConfigWithPList:supportedAudioRules:maxIDSStreamIDCount:streamIDGenerator:ssrc:groupID:
newAudioStreamOneToOneConfigurationWithStreamGroupId:
newAudioStreamSendGroupWithConfig:streamGroupID:
newAudioTapWithAudioStreamBasicDescription:
newAudioTapWithCaptureContext:audioFormat:
newAudioTapWithProcessID:audioFormat:
newAudioTapWithSessionType:audioFormat:
newAudioTierForPayloadConfig:bundlingAppliedByCodec:audioCodecBitrate:packetsPerBundle:redNumPayloads:headerSize:
newAudioUnitPropertiesForSystemAudioWithPreferredClient:
newAudioUnitPropertiesWithPreferredClient:
newBandwidthConfigurations
newCVPixelBufferFromXPCDictionary:isDepth:
newClientDiedDictionary
newCompactPayloadWithPayloadConfig:rtpSampleRate:
newCompressedBlob:
newConfigForPayloadType:
newContext
newControlInfo
newControlInfoFromPool
newControlInfoWithBuffer:length:optionalControlInfo:
newControllerSettingsWithNewClient:
newDataFromMessage:topic:transactionID:isReliable:transactionDelegate:
newDataStreamInputConfigurationWithPList:
newDecompressedBlob:
newDeviceList
newDictionaryForRequest:
newDictionaryFromUnpackedMessage:
newDictionaryFromUnpackedMessage:forTopic:controlChannelVersion:
newDictionaryFromUnpackedMessageV2:
newDictionaryFromUnpackedMomentsMessage:
newEmptyFeatureString
newEmptyFeatureStringWithPayload:
newEncodedCFDictionary
newEncodedDictionary
newEncryptedMessageFromMessage:sequenceNumber:transactionDelegate:
newEncryptionInfoWithMediaKeyIndex:
newEncryptionLabelWithLocalUUID:remoteUUID:
newFeatureListStringsDictForGroupID:isOneToOne:
newFeatureListStringsWithConfiguration:
newFeatureStrings
newFormatDescriptionForCaptureSource:
newLocalFeaturesStringWithType:aspectRatioFLS:
newMKIWithBytes:bufferSize:
newMediaBlobWithRemoteMediaBlob:localCallID:isLowBitrateCodecPreferred:
newMediaControlInfo
newMediaControlInfoWithBuffer:length:optionalControlInfo:
newMediaNegotiatorAudioConfiguration
newMediaNegotiatorAudioConfigurationForMediaType:
newMediaNegotiatorAudioConfigurationWithAllowAudioSwitching:useSBR:aacBlockSize:
newMediaStreamConfigWithStreamConfig:streamGroupConfig:maxIDSStreamIDCount:
newMediaStreamConfigWithStreamGroupConfig:streamConfig:rateControlConfig:multiwayConfig:
newMediaStreamInfoWithNegotiationConfig:streamToken:
newMediaStreamWithNegotiationConfig:streamToken:
newMultiwayAudioStream
newMultiwayConfigWithStreamGroupStreamConfig:maxIDSStreamIDCount:groupID:
newMultiwayVideoStream
newNSDictionaryFromNSDictionary:
newNSDictionaryFromNSError:
newNSDictionaryFromXPCDictionary:
newNSDictionaryWidthNSDictionary:
newNSErrorFromNSDictionary:
newNSErrorWithErrorDictionary:
newNWConnectionWithIPAddress:srcPort:
newNegotiatedSystemAudioResultsWithRemoteMediaBlob:
newNegotiatorForOneToOneWithRemoteParticipant:
newNetworkBitrateString:
newOneToOneAudioStreamConfigWithAudioSettings:streamDirection:streamGroupId:streamSsrc:
newOneToOneVideoStreamConfigWithStreamDirection:streamGroupId:streamSsrc:encodingType:videoSettings:
newOneToOneVideoStreamMultiwayConfiguration:streamGroupId:videoSettings:streamDirection:
newPackedMessageFromDictionary:forTopic:controlChannelVersion:
newPackedMessageFromDictionaryV2:
newPackedMessageFromMomentsDictionary:
newPacketWithRTCPPacket:packetLength:
newParticipantOneToOneConfigWithIDSParticipantID:isLocal:mediaControlInfoVersion:videoEnabled:screenEnabled:remoteParticipant:
newPayloadConfigForCodecConfig:streamConfig:inputSampleRate:
newPowerSpectrumMeterWithBinCount:refreshRate:delegate:error:
newQueueForStreamToken:videoMode:
newQueueForStreamToken:videoMode:imageQueueProtected:
newRTPSocketDictionary:rtpSourcePort:
newRandomParticipantID
newRelayIOWithCompletionHandler:
newRemoteQueueWithServerPid:
newRemoteScreenAttributesForOrientation:
newRequestWithArguments:state:
newRequestWithMediaType:mode:requesteeID:
newRequestWithMediaType:requesteeID:
newSKEBlobWithRemoteSKEBlob:
newScreenFeatureString
newSecureArchivedDataWithRootObject:
newServerDiedDictionary
newSessionWithDeviceRole:reportingHierarchyToken:
newStreamConfigFromMultiwayAudioStream:
newStreamConfigFromMultiwayVideoStream:
newStreamGroupCodecConfigForPayload:
newStreamGroupConfigWithNegotiationConfig:
newStreamGroupConfigurationWithPList:supportedAudioRules:streamIDGenerator:
newStreamGroupConfigurationsWithSupportedAudioRules:streamIDGenerator:
newStreamGroupNegotiationConfigForStreamGroup:
newStreamInfoWithAudioStreamWithConfiguration:idsDestination:isMultiway:streamGroupID:
newStreamInfoWithAudioStreamWithConfiguration:streamToken:isMultiway:streamGroupID:
newStreamInfoWithVideoStreamWithConfiguration:idsDestination:groupID:
newStreamInfoWithVideoStreamWithConfiguration:streamGroupID:
newStreamInputConfigurations
newStreamInputID
newTimeoutDictionary
newUnserializedMediaBlob:
newVideoCodecSet
newVideoMultiwayConfigWithPList:codecType:streamIDGenerator:ssrc:
newVideoPacketBufferConfig:
newVideoRateControlConfigWithMediaControlInfoVersion:enableMediaControlInfoGenerator:enableFeedbackController:isOneToOne:
newVideoRuleCollectionsForScreen:isCellular16x9Capable:isLocalConfig:
newVideoSendGroupConfigWithStreamGroupID:streamGroupConfiguration:
newVideoStreamGroupStreamConfigWithPList:streamIDGenerator:ssrc:groupID:shouldSkip:
newVideoStreamGroupWithStreamGroupConfig:
newVideoStreamInputConfigurationWithPList:
newVideoStreamKeyFrameScheduleWithStreamIDs:
newVideoStreamOneToOneConfigurationWithStreamGroupId:
newVideoStreamWithConfig:groupID:
newVideoTransmitterConfigWithVideoStreamConfig:
newXPCDictionaryFromNSDictionary:error:
newXPCDictionaryFromNSDictionary:forEvent:
newXPCDictionaryWithCVPixelBuffer:depthPixelBuffer:time:
nextAudioInterval:
nextLine
nextObject
nextTransactionID
noRemoteDuplicationThresholdFast
noRemotePacketInterval
noRemotePacketsTimeout
noServerStatsActivityDetected
nofityDelegateReceivedRemoteFrame:frameTime:cameraStatusBits:newRemoteVideoAttributes:remoteScreenAttributes:
nominateConnection:asPrimary:interfaceMask:demote:connectionPriority:replaceOnly:
nonConnectedSocketWithIPAddress:srcPort:error:
normalizeBDCD:
notANumber
notificationDelegate
notifyCachedStateForStreamToken:
notifyChangeInActiveMediaBitrateTo:from:
notifyClientsWithStreamToken:service:arguments:
notifyCodecModeChangeToCT:
notifyDelegateActiveConnectionDidChange
notifyDelegateAndEndCall:didRemoteCancel:error:
notifyDelegateDidReceiveRTCPPackets:
notifyDelegateOfLocalVariablesChange
notifyDelegateSessionStarted
notifyDelegateToCancelRelay
notifyDeviceListChanged
notifyFinishWithRequest:didSucceed:fileSize:
notifyLocalFinishWithRequest:didSucceed:
notifyRemoteFinishWithRequest:didSucceed:fileSize:
notifyRemoteOfCellTechChange:remoteParticipant:
nowrd
nowrdAcc
nowrdShort
null
numBufferBytesAvailable
numPacketReceived
numPacketSent
numPayloads
numRedundantPayloads
numTilesPerVideoFrameForHDRMode:
numberFromString:
numberOfMatchesInString:options:range:
numberOfPacketsInOutputQueue
numberOfPacketsWaitingInOutputQueue
numberWithDouble:
numberWithFloat:
numberWithInt:
numberWithInteger:
numberWithLongLong:
numberWithShort:
numberWithUnsignedChar:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedLong:
numberWithUnsignedLongLong:
numberWithUnsignedShort:
nwActivity
nwConnectionCongestionDetector
nwMonitor
nwMonitorEventHandlerQueue
nwNotificationProcessed
objectAtIndex:
objectAtIndexedSubscript:
objectEnumerator
objectForKey:
objectForKeyedSubscript:
objectForSlot:
objectsAtIndexes:
observeValueForKeyPath:ofObject:change:context:
observer
observer_
octetAligned
octetsSent
offer
onCaptureFrame:audioTS:audioHT:videoHT:cameraBits:
onCaptureScreenFrame:frameTime:orientation:
onCaptureVideoFrame:frameTime:switching:camera:videoMirrored:
onConfigureStreamWithConfiguration:error:
onDidResumeAudio
onPauseAudioStreams
onPauseWithCompletionHandler:
onPlayVideo:frameTime:cameraStatusBits:
onRTCPTimeout
onRTPTimeout
onResumeWithCompletionHandler:
onSendRTCPPacket
onStartAudioIO
onStartWithCompletionHandler:
onStop
onStopWithCompletionHandler:
onVideoFrame:frameTime:attribute:
oneToOneBitrateCapForConnectionWithType:
oneToOneConfig
oneToOneIsSupportedAudioStreamGroup:
oneToOneIsSupportedVideoStreamGroup:
oneToOneModeEnabled
oneToOneModeSupported
oneToOneOperatingMode
oneToOneRemoteParticipant
oneToOneSettings
oneToOneStreamConfig
oneToOneStreamIndex
oneToOneTierTableForStreamGroupID:splitType:
oneToOneToMultiwaySwitchConfigure
oneToOneToMultiwaySwitchResume
oneToOneVideoStreamRedundancyMode
oneToOneVideoStreamRedundancyPercentage
opaqueConf
opaqueData
openSessionForParticipant:
operatingBitrate
operatingMode
operatingModeForAudioStreamMode:
operatingModeForVideoStreamType:
operatingModeToTierPickerMode:
operation
operationAsString:
optInAllStreamsForConnection:
optInStreamIDsForConnection:
optInStreamIDsForNewPrimaryConnection:oldPrimaryConnection:
optInStreamWithIDSStreamIDs:
optIntoExistingSubscribedStreams
optIntoExistingSubscribedStreamsForConnection:
optOutAllStreamsForConnection:
optOutAllStreamsForNonPrimaryConnections
optOutStreamIDs:
optOutStreamIDsForNonPrimaryConnection:sentOnConnection:
optOutStreamWithIDSStreamIDs:
optedInAudioStreamID
optedInNetworkBitrateForStreamGroup:
optedInStreamIDForStreamGroupID:
optedInVideoStreamID
optionalArg
optionalPackedPayloaWithDefaultConfig:
optionalPackedPayload
optionalPayloadCompressWithConfig:
orientation
orientationMismatchAspectRatioLandscape
origin
osChannelInfoLog
osVersion
outgoingMessageQueue
outputAudioPowerSpectrumToken
outputDevice
outputDevices
outputFormat
outputFrequencyMeteringEnabled
outputMeterLevel
outputMeteringEnabled
outputURL
overrideConfigWithDefaults
overrideVideoStreamConfigWithDefaults:streamGroupID:
owrd
pTime
pTimeWithNegotiationPackedPTime:
packMeters:withLength:
packedPayload
packetCountInNetworkQueue
packetExpirationTime
packetFilter
packetID
packetLateAndMissingRatio
packetLossPercentage
packetLossRate
packetLossRate5Secs
packetLossRateAccum
packetLossRateAudio
packetLossRateCount
packetLossRateForCallID:
packetLossRateVideo
packetMultiplexMode
packetRelay:didStart:error:
packetRelay:didStop:error:
packetThread
packetType
packetsPerBundle
packetsSent
packetsSinceShortMediaStall
packetsSinceStall
parameterSet
parameterSetForPayload:
parameterSetStringFromPayloadSettings:
parameterSets
parentNWActivity
parentStreamID
parseAudioFormatAttribute:
parseAudioMediaAttributes:
parseIP:
parseImageAttributeRules:
parseMediaLineHeader:mediaType:supportedPayloads:rtpPort:
parsePacket:
parseRTCPPort:
parseRTPID:
parseSDPFromString:
parseSessionAttributes:
parsingDone
participant:audioEnabled:didSucceed:error:
participant:audioPaused:didSucceed:error:
participant:frequencyLevelsDidChange:
participant:mediaPrioritiesDidChange:
participant:mediaStateDidChange:forMediaType:didSucceed:error:
participant:remoteAudioEnabledDidChange:
participant:remoteAudioPausedDidChange:
participant:remoteMediaStateDidChange:forMediaType:
participant:remoteScreenEnabledDidChange:
participant:remoteVideoEnabledDidChange:
participant:remoteVideoPausedDidChange:
participant:screenEnabled:didSucceed:error:
participant:spatialAudioSourceIDDidChange:
participant:videoEnabled:didSucceed:error:
participant:videoPaused:didSucceed:error:
participantConfigFromXPCDictionary:
participantDataWithMediaNegotiatorVersion:participantData:
participantDataWithParticipantData:isReinit:
participantDataWithParticipantInfo:
participantForID:
participantID
participantId
participantInfoWithParticipantData:
participantMicrophoneToken
participantScreenToken
participantSpatialAudioSourceIDs
participantStateToString:
participantStreamTokens
participantVideoToken
participants
participantsToAdd
participantsToString
passMediaControlInfo:isFillBlobCallback:
passMessage:sequence:fromParticipant:
path
pathExtension
pathForResource:ofType:
pause
pauseAudioStreams:
pauseHeartbeatInterval
pauseLock
pauseMediaStreams
pausePreview
pauseStreams
pauseStreams:
pauseVideo
pauseVideo:
pauseVideoByUser:
pauseVideoConferences:
paused
pausedAudioHeartBeat
payloadConfig
payloadConfigurationWithPayloadConfig:
payloadConfigurationWithStreamGroupID:index:
payloadFlagWithPayload:
payloadFlags
payloadForCodecType:
payloadForVideoPayload:
payloadFromFlag:
payloadFromNegotiationPayload:
payloadHistoryDescription
payloadOctetAligned
payloadPreference
payloadSpecOrPayloads
payloadSpecWithStreamConfig:payloadConfigs:payloadSpecs:
payloadWithRTPPayload:
payloads
payloadsAtIndex:
payloadsCount
payloadsType
payloadsWithPayloadBit:
payloadsWithStreamConfig:payloadBitmap:
peerCN
peerPublishedStreamCallback
peerSubscribedStreamCallback
peerSubscribedStreams
peerSubscription:streamID:
pendingPrimaryConnection
pendingRelayCount
pendingRequestCount
pendingSecondaryConnection
pendingVideoStreams
percentage
perfTimers
perfTimings
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
periodicHealthPrintDispatchSource
periodicReportingEnabled
periodicTask:
persistent
pickBestHDRMode:
pickBestPixelFormatFromSet:
pickBestPixelFormatFromSet:preferenceList:count:acceptDefault:
pickFeaturesStringForPayload:featureListDict:remote:
pixelBuffer
pixelFormat
pixelFormatCollections
pixelFormats
placeRemainingItems:placedItems:leftItem:rightItem:
plrEnvelopeValue
pointerValue
poolLock
poolSize
popCompletionHandler
port
portraitAspectRatioX
portraitAspectRatioY
portraitBlurEnabledDidChange:
positionalInfo
postNotificationName:object:
powerFloatToInt:
powerIntToFloat:
powerLevel
powerSpectrumMetersForCellularTapType:
powerSpectrumSource
powerSpectrumStreamToken
preWarmCellEnabled
preWarmStateChanged:
predicateWithFormat:
preferPresentationTimestamp
preferRelayOverP2PEnabled
preferredAspectRatio
preferredAudioBitrateForPayload:
preferredAudioCodec
preferredBlockSize
preferredClientWithNewClient:
preferredCodec
preferredCodecRateMode
preferredFormatExt1
preferredIODuration
preferredIOSampleRate
preferredIOSampleRateForGroupID:
preferredIOSamplesPerFrame
preferredIOSamplesPerFrameForGroupID:
preferredLocalInterfaceForDuplication
preferredMediaBitRate
preferredMediaBitrate
preferredMode
preferredRTPTimestampRateForGroupID:
preferredRemoteInterfaceForDuplication
preferredSampleRate
preferredVideoCodec
prefixForMode:
prepareAudio
prepareFormatString:format:formatIndex:preferredFormat:
prepareOWRDList:owrd:time:config:
prepareSRTPWithError:
prependSPSPPS:dataPointer:sampleBuffer:
presentationInfo
presentationState
previewPreferredAspectRatio
previousNoRemoteInProgress
prewarmingClientOperatingMode
primaryConnHealthAllowedDelay
primaryConnection
primaryConnectionChanged:oldPrimaryConnection:
primaryConnectionDidChangeTo:oldConnection:
primaryConnectionType
primaryLinkID
primaryPayload
primaryTxCodecType
printBandwidthSettingsWithLogFile:
printBasebandNotificationStatistics:
printCaptionsSettingsWithLogFile:
printCreatedAudioTiers:
printDroppedPacketInfo:
printFeedbackMessage:
printFlushAckToBasebandDump:transactionID:packetDropped:sequenceNumberArray:
printLargeFrameStatsAtTime:timestamp:timeSinceLastProbingSequence:frameSize:wastedBytes:fecRatio:isFrameRequested:
printMediaStates
printMomentsSettingsWithLogFile:
printMultiwayAudioStreamsWithLogFile:
printMultiwayVideoStreamsWithLogFile:
printNWConnectionStatistics:
printPendingKeyFrameWarningOnThresholdTimeElapsedWithCurrentFrameTime:
printRateControlFullInfoWithLogDump:time:videoStall:videoFrozenDuration:averageTargetBitrate:
printRateControlInfoToLogDump
printRateControllerHealthPrint
printScreenWithLogFile:
printStreamFormats
printTable:
printVideoWithLogFile:
printWithLogFile:
printWithLogFile:prefix:
printWithLogFile:prefix:payloadConfig:
printWithLogFile:prefix:screenSize:
printWithLogFile:prefix:streamConfig:
printWithTitle:blobSize:logFile:
printWithTitle:logFile:
priority
probingLargeFrameSize
probingLockdownEnded
probingSequenceCount
probingSequencePacketCount
probingSequencePacketSize
process:
processAnswerWithError:errorReason:
processAnswererInitOptions:errorReason:
processBTNotification:
processBasebandAck:
processBasebandNotification:arrivalTime:error:
processBasebandNotification:metaData:error:
processBlackFrame:
processCachedParticipantData:
processCancelRelayRequest:cancelDict:didOriginateRequest:
processCancelRelayRequest:didOriginateRequest:
processCaptionsData:
processClientRequest:error:
processCompleteHandler
processConnectionHealthFromControlInfo:
processDatagramChannelEventInfo:
processDatagramForDirectIDSDataPath:datagramSize:datagramOptions:error:
processDecryptionTimeoutSettingChange
processDidStop
processDuplicationStateUpdateEvent:didLocalHandover:timeDurationMs:linkType:wrmCallbackScenario:
processEncryptedPayload:isData:topic:sequenceNumber:MKIData:participantID:
processEventQueue:clientList:
processFeedbackMessage:type:metaData:error:
processFormat:
processFrame:
processID
processId
processIdentifier
processInfo
processLocalWRMNotification:isAudioOnly:
processMediaControlInfo:isAudio:
processMediaStateMessage:remoteParticipantID:
processMediaTypeStatesWithMessage:mediaTypeStates:
processMessageData:participantID:topic:transactionID:messageStatus:isInternalMessage:
processMessageFromParticipant:transactionID:messageType:sessionID:transactionDelegate:
processMessageFromParticipant:transactionID:messageType:transactionDelegate:
processNWConnectionNotification:
processNWConnectionPacketEvent:eventType:
processNWConnectionStatistics:
processNetwork
processNotificationList:
processOfferWithError:errorReason:
processOffererInitOptions:errorReason:
processPacket:packetHandler:
processParameterSets:videoResults:
processParticipantInfo
processParticipantRemoval:
processPeerStatsBlob:
processPixelFormats:videoResults:
processRCNetworkStatistics:
processRTCPPSFBStatistics:
processRTCPPacket
processRTPPacket
processRTPTimeoutSettingChange
processRateControlProbingMessage:type:error:
processReceptionReportBlock:blockCount:arrivalNTPTime:
processRelayRequestResponse:didOriginateRequest:
processRelayRequestResponse:responseDict:didOriginateRequest:
processRelayRequestResponseDict:didOriginateRequest:
processRelayUpdate:didOriginateRequest:
processRelayUpdate:updateDict:didOriginateRequest:
processRelayUpdateDict:didOriginateRequest:
processRemoteIPChange:
processRemoteIPChange:callID:
processRemoteIPChange:dataLength:remoteCandidateVersion:
processRemoteInterfaceChangeMessageWithLocalCallID:remoteCallID:remoteData:remoteLen:remoteCandidateVersion:
processRemoteLivePhotoRequest:
processRemoteNegotiationData:
processRemotePhotoRequest:
processRemoteRequest:withMediaType:
processRemoteWRMSuggestion:isRemoteDuplicating:
processRequest:isRemote:
processResolutionChangeToVideoRule:captureRule:featureListString:
processResponseBlob:
processSIPMessage:msgOut:optional:confIndex:
processSampleQueue:input:lastPresentationTime:
processSocketRead
processSocketReadSSL
processSocketWrite:
processStreamGroupStateMessageKey:value:mediaTypeStates:
processSymptomFromMessage:participantID:isLocalInitiated:isLocalSideOnly:
processVTPPacket:
processVideoRTCP
processWRMCoexMetrics:
processWRMCoexMetrics:isAlertedMode:
processWRMNotification:
processWriteCompletionCallback:forDatagramWithSize:error:
profileLevel
profileLevelId
profileLevelIdForString:
profileLevelStringForId:
profileNumberKeyWithMode:
prominenceActiveAccumulationThreshold
prominenceActiveProbabilityThreshold
prominenceInactiveAccumulationThreshold
prominenceInactiveProbabilityThreshold
promoteSecondaryConnectionToPrimary:
propertyList:isValidForFormat:
propertyListFromData:mutabilityOption:format:errorDescription:
propertyListWithData:options:format:error:
protocolVersionforParticipantID:
pruneAllExpiredKeys
pruneQuietestPeers:talking:mask:meters:
pruneRecvKeyMaterialWithDelay:
pruneSendKeyMaterialWithDelay:
ptime
publicSessionConfigurationForType:
pullAudioSamples:
pullAudioSamples:rtpTimestamp:lastReceivedAudioTime:padding:paddingLength:silence:
pullAudioSamplesCount
pullDecodedAsFocus:
pullDecodedAsFocusClient:
pullDecodedMeshMode:
pullSamplesCallback
pullStoreBagKeys
purgeExpiredEntries:messageHistory:participantID:
push:
pushAudioSamples:
pushCompletionHandler
pushEventToNwActivity:started:
pushNoServerStatsToNwActivity:
pushSampleBuffer:error:
pushSampleBufferWithXPCArguments:result:error:
qosMonitor:didReceiveReport:streamToken:
qosMonitorServerDidDie:
qualityDelegateLock
qualityForBitRate:
qualityForPayload:forBitrate:
qualityIndex
qualityIndex:isFallbackStream:forStreamGroupID:streamIndex:
qualityIndexToTableEntry
qualityIndicator
qualityQueue
queryAnbrBitrate:forDirection:
queryAnbrBitrateRecommendation:direction:completionHandler:
queryBoardId
queryList
queryProbingResults
queryStatusWithOptions:
queue
queueExistsForStreamToken:
radioAccessTechnology
radioAccessTechnologyFromAVConferenceCellTech:isCellular:
rampDownAudioFraction
rampDownBWDropEnabled
rampDownTier
rampDownTierDueToBaseband
rampDownTierDueToBaseband:
rampDownTierDueToNWConnection
rampUpAudioFraction
rampUpTargetBitrateContinuousWithBandwidthDiff:
rampUpTier
range
rangeAtIndex:
rangeCheck:
rangeOfCharacterFromSet:
rangeOfString:
rangeOfString:options:
rateAdaptation:targetBitrateDidChange:rateChangeCounter:
rateAdaptationEnabled
rateChangeCounter
rateControlAllowBurstyLossRampDown
rateControlAllowVideoStop
rateControlBasebandSlowDownFactor
rateControlConfig
rateControlDumpEnabled
rateControlExperimentConfig
rateControlForceRxCap
rateControlForceRxRate
rateControlForceTxCap
rateControlForceTxRate
rateControlInterval
rateControlLogEnabled
rateControlModeFromAVConferenceOperatingMode:
rateControlStatisticsQueueWaitTime
rateController:targetBitrateDidChange:rateChangeCounter:
rateControllerType
rateSharingCount
ratio
rcvdFirstRemoteFrame
rdlock
readCarrierBundleValues
readDatagram:datagramSize:datagramOptions:
readDatagramWithCompletionHandler:
readDatagramsWithCompletionHandler:
readFrom:
readHandler
readHardwareValues
readIntegerFromConfig:key:value:
readOptionalPacketPayload:
readRequiredPacketPayloadWithStreamConfig:
readServerPacketRetransmissionsForVideoStoreBagConfig:
readStoreBagValues
readStoreBagValues:
readUint32WithPList:key:defaultValue:
readyToRead
realRATType
realignStreams
reallocateBufferWithMaxPacketSize:maxPacketCount:
realtimeSourceContext
reasonStringWithDuplicationReason:
receiveDataOnSocket:
receiveHandler
receiveMasterKey
receiveMessageBlock
receiveMessageDictionaryBlock
receivePacket:
receivedControlData:
receivedDataPacket:length:forCallID:encrypted:OFTType:
receivedFirstRemoteFrame
receivedRealTimeData:fromParticipantID:
receivedResponseCount
receivedSIPInvite
receivedSSLConnectionData:recordType:
receivedTMMBN:
receiverReport
receiverSframeCryptor
receiverThreadCallback:
recentlyGoAboveRampUpBandwidth
recommendedMTU
recommendedSettingsChanged:
recommendedStreamIDsForSelectedMediaEntries:forceSeamlessTransition:
recommendedTargetBitrateCap
recomputeAllocationTableIfRequired
reconfigureAudioIOForVideoEnabled:error:
reconfigureAudioIOIfNeededWithDeviceRole:operatingMode:
reconfigureOneToOneAudioStream:error:
reconfigureTierPicker:
reconfigureWithOperatingMode:deviceRole:direction:streamInputID:streamToken:allowAudioRecording:networkClockID:channelIndex:
recordDataWithSize:atTime:
recordVideoRefreshFrameWithTimestamp:payloadType:packetCount:isKeyFrame:
recvRTPTimeStamp
recvSamplesForSession:sampleBuffer:
redEnabled
redNumPayloads
redOverheadForNumPayloads:
redPayload
redPayloadDescription:
redPayloadForPrimaryPayload:
redPayloadSize
redPayloadType
redundancyControlForceVideoRedundancyPercentage
redundancyController
redundancyController:redundancyIntervalDidChange:
redundancyController:redundancyPercentageDidChange:
redundancyController:redundancyVectorDidChange:
redundancyControllerFECVersion
redundancyControllerMode
redundancyControllerModeForOperatingMode:isRedEnabled:
redundancyEnabled
redundancyEnabledFor720Stream
redundancyInterval
redundancyMode
redundancyPercentage
redundantPayloads:containsPointer:
redundantPayloadsDescription:
refreshInputMetering
refreshLoggingParameters
refreshOutputMetering
refreshRate
refreshRemoteCodecType:sampleRate:
registerActiveAudioStreamChangeNotifications
registerAudioPowerMeterSource:
registerAudioSessionId:maxChannelCountMic:maxChannelCountSpeaker:spatialMetadata:
registerAudioTapForStreamToken:tapType:
registerBTNotificationHandler:
registerBlockForService:block:
registerBlockForService:block:queue:
registerBlockForService:block:queue:eventLogLevel:
registerBlockWithUUID:service:block:
registerBlocksForConference
registerBlocksForDelegateNotifications
registerBlocksForNotification
registerBlocksForNotifications
registerBlocksForService
registerBlocksForVCNotifications
registerCallbacksForMediaControlInfoGenerator:forDirection:options:
registerCaptionsEventDelegate:
registerCaptionsSource:streamToken:
registerClient
registerClientForScreenShare
registerClientIO:controllerIO:
registerCodecRateModeChangeNotifications
registerConfigForScreenShare
registerDarwinNotification:
registerDataReceivedHandler:forCallID:
registerDidClientDieBlock:
registerDidServerDieBlock:
registerDirectoryWithFilePath:
registerFillBlobCallback:processBlobCallback:context:
registerForBandwidthAllocationWithClient:
registerForBluetoothImmediateNotifications
registerForCameraCaptureWithConfig:
registerForMutedTalkerNotfications
registerForMutedTalkerNotification:
registerForMutedTalkerNotificationWithAUIO:
registerForMutedTalkerNotifications:
registerForNetworkChanges
registerForNotifications
registerForRateSharing:
registerForScreenCapture
registerForVideoCapture
registerForVideoCapture:
registerForVideoFramesWithDeviceRole:captureRule:isUnpausing:
registerICEBlockForCallID:connectedBlock:newCandidatesBlock:newNominationBlock:removeIPPortBlock:
registerListenerWithCellularTapType:clientProcessId:powerSpectrumMeter:powerSpectrumMeterKey:error:
registerListenerWithStreamToken:powerSpectrumKey:powerSpectrumMeter:error:
registerMediaControlInfoGeneratorWithConfigs:
registerMediaStreamNotificationDelegate
registerMomentsMessenger:withStreamToken:
registerNewAudioPowerSpectrumForStreamToken:powerSpectrumKey:spectrumSource:
registerPacketCallbackContext:callback:
registerPeriodicTask
registerPowerSpectrumForCellularTapType:error:
registerPowerSpectrumForStreamToken:
registerQoSReportingSourceForToken:
registerRTPPayloadMappings
registerRateSharingClient:forInterfaceType:
registerRemoteParticipantToSession:
registerReportingTask
registerSampleBufferCallback:context:
registerSecureMicrophoneEngagedHandler:
registerService:weakSelf:eventLogLevel:block:
registerStatistics:
registerStatisticsChangeHandlerWithType:handler:
registerStatisticsChangeHandlers
registerStatisticsHandler:statisticType:
registerStatisticsHandlers
registerStreamOutputSource:forStreamToken:
registerStreamToken:
registerStreamTokenForCellularTapType:clientProcessId:error:
registerVideoSink:withCaptureSource:
registeredBlocks
registeredBlocksQueue
registeredConnection
registeredUUIDServiceBlocks
regularExpressionWithPattern:options:error:
reinitEncoderOnFrameSizeChangeEnabled
rejectWithError:
relativeReceiveTimeWithTimestamp:timestampRate:
relativeSendTimeWithTimestamp:timestampRate:
relay
relayCallback
relayChannelNumber
relayConnectionID
relayFormat
relayIDSPacket
relayProcessSamples
relayServerProvider
relaySessionToken
relayState
relayVTPPacket
releaseAllLogDumpFiles
releaseAllocators
releaseAudioPowerSpectrumForStreamToken:
releaseConverters
releaseFrameWithTime:
releaseLogDumpFile
releaseLogDumpFile:
releaseQueueForStreamToken:
releaseRTPHandles
releaseServiceConnection
releaseTextFrame:
releaseTextPacket:
releaseTimers
reliableMessageResendInterval
remainderBitrateSplitForStreamToken:
remainingBitrateSplitQualityIndexForStreamGroup:splitType:
remoteAddress
remoteAudioDidPause:callID:
remoteAudioEnabled
remoteAudioPaused
remoteBandwidthEstimation
remoteBasebandCodec
remoteBasebandCodecSampleRate
remoteBitrateForCallID:
remoteBlobCreationTime
remoteBlobVersion
remoteCallID
remoteCallInfo
remoteCanDisplayCaptions
remoteCancelledCallID:
remoteCellTech
remoteCellTechStateUpdate:maxRemoteBitrate:
remoteCodecSampleRate
remoteConnectionData
remoteConnectionType
remoteDataSoMask
remoteDeviceName
remoteDeviceVersionIDS
remoteExpectedLandscapeAspectRatio
remoteExpectedPortraitAspectRatio
remoteFeatureStringWithRemoteMediaBlob:
remoteFrameHeight
remoteFrameHeightForCallID:
remoteFrameSizeForCallID:
remoteFrameWidth
remoteFrameWidthForCallID:
remoteFramerateForCallID:
remoteIDSParticipantID
remoteIO
remoteInterfaceType
remoteInterfaceTypeString
remoteLinkProbingCapabilityVersion
remoteMaxBandwidthForOperatingMode:connectionType:
remoteMediaDidStall:streamToken:
remoteMediaStallTimeout
remoteMediaState
remoteMediaStateForMediaType:
remoteMuted
remoteNetworkType
remoteNoRemotePacketInterval
remotePacketLossRateForCallID:
remoteParticipantID
remoteParticipantIDFromChannelDataFormat:
remoteParticipants
remoteParticipantsMap
remoteParticipantsSupportStreamGroupID:
remotePauseDidChangeToState:forVideo:
remotePreWarmStateEnabled
remoteQueueOperationHandlerWithError:operation:
remoteRATType
remoteRelayConnectionData
remoteRelayRequestResponse
remoteRelayUpdate
remoteSSRC
remoteScreenAttributes
remoteScreenAttributesDidChange:
remoteScreenAttributesDidChange:streamToken:
remoteScreenEnabled
remoteScreenLandscapeAspectRatio
remoteSupportsExpectedAspectRatio
remoteSupportsVisibleRect
remoteSwitches
remoteToClientConverter
remoteVideoAttributes
remoteVideoAttributesDidChange:streamToken:
remoteVideoBackLayer
remoteVideoClient
remoteVideoClient:remoteMediaDidStall:
remoteVideoClient:remoteScreenAttributesDidChange:
remoteVideoClient:remoteVideoAttributesDidChange:
remoteVideoClient:remoteVideoDidPause:
remoteVideoClient:videoDidDegrade:
remoteVideoClient:videoDidSuspend:
remoteVideoClientDidReceiveFirstFrame:
remoteVideoClientDidReceiveLastFrame:
remoteVideoDidDegrade:streamToken:
remoteVideoDidPause:callID:
remoteVideoDidPause:streamToken:
remoteVideoDidSuspend:streamToken:
remoteVideoEnabled
remoteVideoInitialOrientation
remoteVideoLayer
remoteVideoOrientation
remoteVideoPaused
remoteVideoServerDidDie
remoteVideoServerDidDie:
remoteWRMLinkTypeSuggestion
removeActiveParticipant:
removeAllActiveParticipants
removeAllClientsForIO:
removeAllObjects
removeAudioTapForStreamToken:error:
removeCellularAssertion
removeClient:
removeCodec:
removeConnection:
removeConnectionWithIPPort:isLocalInterface:
removeConnectionWithIPPortInternal:isLocalInterface:
removeContext:
removeDatagramChannel:
removeDelegatesForRemoteParticipant:
removeFilesInDirectory:olderThan:
removeFirstObject
removeFromConnectionArray:
removeFromSuperlayer
removeItemAtPath:error:
removeItemAtURL:error:
removeLastObject
removeMediaHealthStatsHistoryEntryForParticipantID:
removeObject:
removeObjectAtIndex:
removeObjectForKey:
removeObjectIdenticalTo:
removeObjectsForKeys:
removeObjectsInArray:
removeObjectsInRange:
removeObserver:forKeyPath:
removeOldFilesInDefaultLogDumpPath
removeParticipant:
removeParticipants:
removeProbingResultsForLinks:
removeSink:
removeStreamConfigs:
removeSyncDestination:
removeSyncDestination:shouldSchedule:
removeTimingForKey:
removeTransactionForTransactionID:
removeUnusedAudioPayloads
removeVideoConference:
removeVideoRulesWithWidth:height:transportType:encodingType:
renderPixelBuffer:time:
renderProcessTime
renewNWMonitor
renewOneToOneMediaQueue
reorderedPacketsCount
repairMaxNetworkBitrate
repairStreamID
repairStreamIDsForStreamToken:
repairedMaxNetworkBitrate
repairedStreamID
replaceMatchesInString:options:range:withTemplate:
replaceObjectAtIndex:withObject:
replaceTag:
replyQueue
reportActiveConnectionOneToOne
reportActiveConnectionOneToOne:isAudioOnly:
reportCompletedSwitchingToOneToOne:
reportConnection:isInitialConnection:
reportConnectionHealthWithStatsHistory:index:isPeerStats:
reportConnectionUpdateWithRespCode:
reportConnectionUpdateWithResponseCode:delay:
reportCurrentPrimaryConnection
reportDashboardEndResult:
reportErrorAndTerminate:detail:returnCode:description:reason:
reportExistingParticipantsAnew
reportFailedToRegisterVideoFramesFromSource:width:height:frameRate:
reportFirstActiveConnectionOneToOne:remoteOSVersion:redState:isAudioOnly:
reportFirstPacketTimeForMKI:
reportHandoverResultsWithDictionary:localBitrateCap:remoteBitrateCap:
reportImmediateMetric:value:
reportInitialRampUpDeltas
reportLinkProbingStatsWithDuplicationJustStarted:
reportLinkSuggestion
reportMetricsFaceTimeCalling:
reportMetricsWifiCalling:
reportNATType
reportNetworkStatisticsWithArrivalTime:
reportNoPacketUpdateUsingCurrentTime:lastReceivedPacketTime:
reportOperatingMode
reportParticipantsPerfTimingsOnce
reportRTCPPacket
reportRateControlExperiment
reportRedundancyConfigChange
reportRedundancyPercentage:redundancyInterval:
reportScreenShareIsStarting:
reportSessionMediaDaemonStats:
reportSignificantHandshakeDelaySymptomForParticipantID:
reportStartedSwitchingToOneToOne:
reportSwitchingError:errorEvent:
reportSymptom:
reportTargetBitrateChange:rateChangeCounter:
reportTransportInfo
reportVideoEnabledStatsWithVideoEnabled:
reportVideoStreamType
reportWRMMetrics:
reportWRMSuggestion:
reportedSourceSSRC
reportingAgent
reportingAudioStreamEvent:
reportingClientType
reportingClientTypeForStreamType:
reportingHierarchyToken
reportingIPVersion
reportingIntervalChanged:
reportingIntervalForStreamToken:
reportingModuleID
reportingMomentsToGreenTeaWithRequest:
reportingMomentsWithRequest:
reportingMomentsWithRequest:recipientID:
reportingParentID
reportingSessionDownlinkOptInEvent:selectedMediaEntriesForParticipants:
reportingSessionParticipantEvent:keyChangeReason:newMKI:
reportingSessionParticipantEvent:withParticipant:
reportingSessionParticipantEvent:withParticipant:keyChangeReason:newMKI:
reportingSessionParticipantEvent:withParticipant:keyChangeReason:newMKI:withStreamID:
reportingSessionParticipantEvent:withStreamID:
reportingSessionParticipantEventBitrateChanged:optedInNetworkBitrate:actualNetworkBitrate:optedInStreamID:actualStreamID:
reportingSessionRemoteParticipantEvent:withParticipant:value:
reportingSessionStopEventWithError:
reportingSetUserInfo
reportingStats
reportingVideoStreamEvent:
reportingVideoStreamEvent:newVideoAttributes:
reportingVideoStreamEvent:newVideoAttributes:currentStreamID:
requestLastDecodedFrame
requestMediaDataWhenReadyOnQueue:usingBlock:
requestNotificationFaceTimeCalling
requestQoSReport
requestSessionInfoWithOptions:
requestSessionMediaDaemonStatsReport
requestTimestampAndRTTList
requestWRMNotification
requestedCameraType
requestedTimeoutRelay
requesteeID
requesterID
requiredAudioBitrate:highestAudioBitrates:
requiredPackedPayload
requiredPayloadCompressWithConfig:
requiresImplicitFeatureString
requiresWiFi
requiresWifi
reregisterMutedTalkerNotificationOverXPC
resMutex
reselectPrimaryConnection
reserveAudioChannelForMediaType:spatialAudioSourceID:
reset
resetAUIOWithProperties:
resetActiveConnection
resetAggregatedProbingResults
resetAudioBufferPool
resetAudioLimiterWithProperties:
resetAudioSessionOutputPortOverride
resetAudioSessionOutputPortOverride:
resetAudioSessionWithProperties:interruptSuccessful:
resetAudioTimestamps
resetBBNoteHistoryList
resetBDCDList
resetBuffer
resetBurstyLossStatistics
resetChannelMask
resetCodecs
resetConnectionStatTimers
resetConnectionStats:
resetDecryptionTimeout
resetDidReceiveFirstFrame
resetEffectsLogging
resetEncoder
resetEncoderWithSampleBuffer:numBytes:
resetEncodingRulesForCameraIsHD:isWVGA:is1080:
resetHandshake
resetHealthPrintCounters
resetHistory:
resetICETimeoutToLongTimeout
resetLastGoodVideoQualityTime:
resetLocalCameraAfterServerDisconnect
resetLoopback
resetLossEventBandwidthLimit
resetLossEventBuffer
resetMediaByteCounters
resetMediaHealthStats
resetOWRDEstimation
resetOneToOneSettings
resetOscillationDetection
resetOutputPayload:
resetPacketCountAndByteCountWithConnection:
resetParticipantGenerationCounter
resetPayloadHistory
resetPayloadMapping
resetPayloads
resetRTCPSendHeartbeatTimer:
resetRampingStatus
resetRedundancyStrategy:
resetRemoteMediaStalled
resetSendRTPTimestampOnStop
resetState
resetStats
resetStreamGroups
resetTimeoutHeartbeatTimer:
resetTimeoutHeartbeatWithRTPTimeout:rtcpTimeout:decryptionTimeout:currentTime:
resetVideoRulesForInterface:videoReportingDictionary:
resetXPCConnection
resolution
resourceNameForConfigurationType:
respondsToSelector:
result
resultQueue
resume
resumeMediaStreams
resumeStreams
resumeStreamsOnOneToOneModeSwitch
resumeVideoByVCRateControl
retain
retainCount
retainPixelBufferForMomentsEnabled
retrieveAndProcesOnePacket:seq:count:index:
retrieveAndProcessMediaPacketsFromBuffer:packetHandler:
retrieveBag
retrieveIdentity
retrieveRTPPacket:
retrieveRawFeaturesStringWithType:
retryCountUsingFastRetries:
retryTimeoutForRetryAttempt:usingFastRetries:
retryVCIDSSessionInfoSubscribedStreamIDs
returnBufferToPool:
reverseObjectEnumerator
reverseString:
rewriteMovieMetadataWithURL:transactionID:
ringBufRef
rmsPowerOfBuffer:numSamples:
roundTripTime
roundTripTimeForCallID:
rtChannel
rtcpEnabled
rtcpFlagStringWithPayloadConfig:
rtcpFlags
rtcpFlagsWithPayloadConfig:
rtcpHeartbeatLeeway
rtcpPSFBForFeedbackStoreBagConfig
rtcpPSFB_FIREnabled
rtcpPSFB_LTRAckEnabled
rtcpPSFB_PLIEnabled
rtcpPort
rtcpRTPFB_GNACKEnabled
rtcpReceiveCallbackEnabled
rtcpRemotePort
rtcpReportProvider
rtcpSREnabled
rtcpSendHeartbeat
rtcpSendInterval
rtcpSendIntervalElapsed
rtcpSendIntervalSec
rtcpTimeOutEnabled
rtcpTimeOutInterval
rtcpTimeOutIntervalSec
rtcpTimeoutEnabled
rtcpTimeoutInterval
rtcpXREnabled
rtpHandle
rtpId
rtpPayload
rtpPayloadWithPayload:
rtpSampleRate
rtpSampleRateWithNegotiationPackedSampleRate:
rtpTimeOutEnabled
rtpTimeOutInterval
rtpTimeOutIntervalSec
rtpTimeoutEnabled
rtpTimeoutInterval
rtpTimestampRate
rtpVideo
rttThreshold
rules
rulesForEncodeType:paylaod:videoRuleCollection:
rulesImageSizeForExternalPayload:pWidth:pHeight:
runDisplayLinkThreadWithStopRequested:
runRateControlStateTransition
runUntilTime:
runVideoStreamRateAdaptation
runningClient
rxCodecFeatureListString
rxCodecFeatureListStrings
rxCodecType
rxMaxBitrate
rxMinBitrate
rxNetworkPayloads
rxPayloadMap
rxPayloadType
rxRedPayloadType
sampleBufferAllocator
sampleLogCount
sampleRate
sampleRateForCodecBandwidth:
sampleRateForPayload:
saveImage:movie:
saveRemoteBandwidthSettingsWithMediaBlob:
scaleFactor
scheduleAfter:block:
scheduleDecodeForFrameWithBuffer:timestamp:hostTime:showFrame:
scheduleDecodeForTimestamp:
scheduleEncryptionRollTimerWithDelay:
schedulePrimaryConnectionChange:oldConnection:
scheduleProbingSequenceAtTime:
scheduleProbingSequenceWithFrameSize:paddingBytes:timestamp:fecRatio:isProbingSequenceScheduled:
schedulePruneTimer:
scheduleTMMBR:
scheduleVideoDecode:
schedulerStreamWithKeyFrameInterval:framerate:weightFactor:
screenCapture:didStart:withError:
screenCapture:didStop:withError:
screenCaptureDisplayID
screenCaptureStartFor:didSucceed:withError:
screenCaptureStopFor:didSucceed:withError:
screenEnabled
screenGroup
screenHeight
screenHeightForDisplayID:
screenPayload
screenPixelCount
screenRes
screenResolution
screenRuleCollections
screenSSRC
screenSettings
screenShareCapabilities
screenShareCapabilitiesIPad
screenShareCapabilitiesIPhone
screenShareCapabilitiesIPod
screenShareDictionary:
screenSharingVCCapabilities
screenSize
screenStreamBaseTierFramerate
screenStreamInfo
screenToken
screenWidth
screenWidthForDisplayID:
sdpString
searchMatchingTopic:payload:transactionID:fromParticipant:
secondaryAudioPayloads
secondaryConnection
secondaryFlags
secondaryPayloads
secretKey
secureControlChannel
secureDataChannel
secureMessagingRequired
secureMicrophoneEngagedNotification
securityKeyHolder
securityKeyHolderUsageForStreamConfigDirection:
securityKeyManager
securityKeyMaterialWithMediaKeyIndex:
segments
segmentsAtIndex:
segmentsCount
segmentsType
selectBestDecodeVideoRuleForTransport:payload:localVideoRuleCollection:remoteVideoRuleCollection:
selectBestScreenRule:preferredPayloadOrder:
selectBestVideoRuleForTransport:payload:encodingType:localVideoRuleCollection:remoteVideoSettings:negotiatedVideoSettings:isScreen:
selectBestVideoRuleForTransport:payload:encodingType:videoSettings:localVideoRuleCollection:remoteVideoRuleCollection:
selectCodecBandwidthForCodecRateMode:
selectConnectionForGroupType:fromConnectionArray:asPrimary:
selectDataPath
selectHighestQualityAudioTiers:forBitrateLimits:isHardLimit:
selectPrimaryAndSecondaryWithConnection:isEndToEnd:
selectRedPayloadsForPrimaryPayload:
selectVideoFeatureString:selectedPayload:
selectVideoStreamForVideoPriority
selectiveScreenUUID
selectiveSharingPort
self
selfTerminateDueToTimeout:
sendARPLData:toCallID:
sendActiveVoiceOnly
sendAllCachedMessagesAndDisableHandshakeWhenDone
sendAllocateMsg:
sendAudioPowerSpectrumSourceRegistration:
sendBasebandCodecMessage
sendCallingModeMessage
sendChannelBindingMsgWithDict:error:
sendCharacter:
sendCodecModeChangeEvent:
sendConfirmationToParticipantID:transactionID:sessionID:transactionDelegate:
sendCongestionEventWithTimestamp:
sendControlPacketWithParameters:
sendDTMFDigitString:withVolume:duration:interval:
sendDTMFEvent:
sendDTMFEvent:atTimestamp:withSampleRate:
sendData:forCallID:encrypted:
sendData:localCallID:remoteCallID:encrypted:OFTType:
sendData:size:error:
sendData:toCallID:encrypted:
sendDelegate
sendFailureCountSinceLastCheck
sendFeedbackControllerReport:
sendIntervalDidElapse:remainingTime:
sendLastRemoteVideoFrame:
sendLocalStats
sendMasterKey
sendMediaKey
sendMediaStateUpdateMessageToRemoteParticipant:
sendMessage:
sendMessage:participantID:
sendMessage:participantID:withSequence:numRetries:
sendMessage:withTopic:
sendMessage:withTopic:participantID:
sendMessageAsync:
sendMessageAsync:arguments:
sendMessageAsync:arguments:context:
sendMessageAsync:arguments:reply:
sendMessageAsync:arguments:reply:queue:
sendMessageAsync:arguments:toAllClientsWithContext:
sendMessageAsync:arguments:xpcArguments:context:
sendMessageAsync:arguments:xpcArguments:reply:
sendMessageAsync:arguments:xpcArguments:reply:queue:
sendMessageAsync:arguments:xpcArguments:reply:queue:replyLogLevel:
sendMessageCompletionBlock
sendMessageDataCompletionBlock
sendMessageDictionary:withTopic:participantID:
sendMessageSync:
sendMessageSync:arguments:
sendMessageSync:arguments:xpcArguments:
sendPacketToVTP:
sendProcessInfoWithProcessID:
sendProtobuf:withType:forCallID:
sendRateControlConfigToRemoteParticipant:
sendRateControlFeedback
sendRefreshMsg:error:
sendReliableMessage:participantID:withOptions:completion:
sendReliableMessage:sessionID:participantID:timeout:useFastRetries:withOptions:
sendReliableMessage:withTopic:
sendReliableMessage:withTopic:participantID:
sendReliableMessage:withTopic:participantID:timeout:withOptions:completion:
sendReliableMessage:withTopic:participantID:withOptions:completion:
sendReliableMessage:withTopic:timeout:withOptions:
sendReliableMessageAndWait:withTopic:
sendReliableMessageAndWait:withTopic:participantID:
sendReliableMessageAndWait:withTopic:participantID:timeout:withOptions:
sendReliableMessageInternal:withTopic:timeout:useFastRetries:withOptions:
sendReport:
sendSIPInviteWithError:
sendSampleBufferOverXPC:error:
sendStatusUpdate:
sendStatusUpdateFaceTimeCalling:
sendStatusUpdateInfoFaceTimeCalling:
sendStreamGroupStateToParticipant:
sendSubscriptionInfoFaceTimeCalling
sendSuccessCountSinceLastCheck
sendSymptomToRemote:groupID:
sendSymptomsToRemoteParticipants:symptom:groupID:
sendTCPData:bufSize:
sendText:
sendTextFrameWithRedundancy:marker:
sendTimings
sendTmmbrBitrate
sendUDPPacketReliableEncrypted:localIPPort:destinationIPPort:oftType:
sendUnreliableMessage:sessionID:participantID:transactionID:transactionDelegate:withOptions:
sendUnreliableMessage:withTopic:participantID:
sendUnreliableMessage:withTopic:sessionID:participantID:transactionDelegate:
sendUnsubscriptionInfoFaceTimeCalling
sendVCIDSSessionInfoSubscribedStreamIDs:
sendWRMStatusUpdate:
senderQueue
sendingDTMFEventWithTimeStamp:interval:RTPHandle:
sentAudioBytes
sentAudioBytesShort
sentClientSuccessfulDidStart
sentRequestCount
sequenceNumber
serializationClasses
serialize
serializeNegotiationData:
serializeNwActivity:
serializeToBuffer:bufferLength:blobLength:
serializedSize
serverBag
serverDidDie
serverDidDisconnect:
serverDied
serverDiedForConference:
serverIsDegraded
serverLinks
serverLoopProc
serverReconnected
serverStatsSizeInByteForUplink:connection:
serviceHandlerDidDegradeWithArguments:error:
serviceHandlerDidDieWithArguments:error:
serviceHandlerDidPauseWithArguments:error:
serviceHandlerDidReceiveFrameWithArguments:error:
serviceHandlerDidReleaseOutputQueueWithArguments:error:
serviceHandlerDidStallWithArguments:error:
serviceHandlerDidSuspendWithArguments:error:
serviceHandlerPowerMeterInitializeWithArguments:error:
serviceHandlerPowerMeterTerminateWithArguments:error:
serviceHandlerRegisterCellularTapWithArguments:error:
serviceHandlerRegisterListenerWithArguments:error:
serviceHandlerStreamOutputInitializeWithArguments:error:
serviceHandlerStreamOutputNotifyCacheWithArguments:error:
serviceHandlerStreamOutputTerminateWithArguments:error:
serviceHandlerUnregisterCellularTagWithArguments:error:
serviceHandlerUnregisterListenerWithArguments:error:
serviceName
session:addParticipant:didSucceed:error:
session:audioEnabled:didSucceed:error:
session:audioPaused:didSucceed:error:
session:cancelRelayRequest:
session:changeVideoRulesToCaptureRule:encodeRule:featureListString:
session:connectionDidChangeWithLocalInterfaceType:remoteInterfaceType:callID:
session:didChangeRemoteScreenAttributes:
session:didChangeVideoRule:
session:didDetectError:
session:didPauseAudio:error:
session:didPauseVideo:error:
session:didReceiveARPLData:fromCallID:
session:didReceiveData:messageType:withCallID:
session:didReceiveMomentsRequest:
session:didStart:connectionType:localInterfaceType:remoteInterfaceType:error:
session:didStart:error:
session:didStopVideoIO:error:
session:didStopWithError:
session:didStopWithError:metadata:
session:didUpdate:configuration:error:
session:downlinkRateAdaptationInfoDidChange:
session:frequencyLevelsDidChange:
session:initiateRelayRequest:
session:isSendingAudio:error:
session:localAudioEnabled:withCallID:error:
session:localIPChange:withCallID:
session:mediaPrioritiesDidChange:
session:mediaStateDidChange:forMediaType:didSucceed:error:
session:oneToOneEnabled:didSucceed:error:
session:packMeters:withLength:
session:receivedNoPacketsForSeconds:
session:receivedRemoteFrame:atTime:withScreenAttributes:videoAttributes:isFirstFrame:isVideoPaused:
session:remoteAudioEnabled:withCallID:
session:remoteCallingModeChanged:withCallID:
session:remoteMediaStalled:
session:removeParticipant:didSucceed:error:
session:screenEnabled:didSucceed:error:
session:sendRelayResponse:
session:setMomentsCapabilities:imageType:videoCodec:
session:setRemoteBasebandCodecType:sampleRate:
session:startAudioWithFarEndVersionInfo:internalFrameFormat:completionHandler:
session:startVideoReceive:
session:startVideoSend:captureRuleWifi:captureRuleCell:interface:isUnpausing:
session:stopAudioWithCompletionHandler:
session:stopVideoReceive:isPausing:
session:uplinkRateAdaptationInfoDidChange:
session:videoEnabled:didSucceed:error:
session:videoPaused:didSucceed:error:
session:withCallID:videoIsDegraded:isRemote:
sessionActive
sessionConfigurationForType:
sessionDict
sessionForIncomingParticipantID:
sessionForParticipantID:
sessionForSourceDestinationInfo:
sessionForStreamToken:
sessionHealthMonitor
sessionID
sessionIP
sessionId
sessionInfoSynchronizer
sessionLock
sessionMessaging
sessionMode
sessionModeWithClientSessionMode:
sessionReceivingBitrate
sessionReceivingFramerate
sessionServerDidDisconnect:
sessionShouldReconnect:
sessionStateToString:
sessionStatsController
sessionToken
sessionTransmittingBitrate
sessionTransmittingFramerate
sessionUUID
sessions
setAacBlockSize:
setAbSwitches:
setAccessNetworkType:
setAcknowledgement:
setActive:
setActiveConference:
setActiveConnection:uplinkBitrateCap:activeMediaStreamIDs:mediaBitrates:rateChangeCounter:
setActiveLinkProbingEnabled:
setActiveSize:
setActiveStreamID:
setActiveStreamIDs:
setActiveVideoLayerForMode:
setActualAudioCodec:
setActualBitrateForOptedInStreamWithActiveStreamID:
setActualNetworkBitrate:
setActualVideoCodec:
setAddress:forService:
setAfrcHandle:
setAfrcRemoteEstimatedBandwidth:
setAlignmentMode:
setAllSubscribedStreamIDsOnOptions:
setAllocationResponseHandler:
setAllowAudioRecording:
setAllowAudioSwitching:
setAllowDuplication:
setAllowDynamicMaxBitrate:
setAllowLargePackets:
setAllowRecording:
setAllowSwitching:
setAllowVideoStop:
setAllowsContentsChangeWithAspectPreservation:
setAllowsDynamicMaxBitrate:
setAllowsHitTesting:
setAlwaysOnAudRedEnabled:
setAlwaysOnAudioRedundancyEnabled:
setAmplitude:
setAnimoji:
setAnswer:withError:
setAnswerBandwidth:
setArray:
setAuNumber:
setAudio:
setAudioChannelCount:
setAudioChannelIndex:
setAudioConfiguration:
setAudioDumpEnabled:
setAudioEnabled:
setAudioFeatures:
setAudioFileName:
setAudioFractionTier:
setAudioIO:
setAudioIOSampleRate:
setAudioInputDevice:
setAudioIsPaused:
setAudioIssueDetectorEnabled:
setAudioMediaControlInfoGenerator:
setAudioMuted:
setAudioOutputDevice:
setAudioPayloads:
setAudioPosition:
setAudioRTCPPort:
setAudioRTCPStreamParamatersForSocket:packetType:remoteIP:remoteIPLength:
setAudioRTPID:
setAudioRTPPort:
setAudioRTPStreamParamatersForSocket:packetType:remoteIP:remoteIPLength:
setAudioRules:
setAudioRulesNegotiated:
setAudioSendingBitrate:
setAudioSessionID:
setAudioSessionId:
setAudioSessionProperties:
setAudioSettings:
setAudioStreamGroupConfig:
setAudioStreamGroupsPaused:
setAudioStreamMode:
setAudioTierPicker:
setAudioTransmitter:
setAudioUnitModel:
setAudioUnitNumber:
setAudioUnitType:
setAvcPositionalInfo:
setAvcSessionPresentationInfo:
setBWEOptions:UseNewBWEMode:FakeLargeFrameMode:ProbingSenderLog:
setBackgroundColor:
setBandwidth:
setBandwidthConfigurations:
setBandwidthDownstream:
setBandwidthSettings:
setBandwidthUpstream:
setBasebandCodec:
setBasebandCodecSampleRate:
setBasebandCodecType:
setBasebandCodecType:sampleRate:
setBasebandCongestionDetector:
setBasebandFlushCount:
setBasebandNotificationStreamParamatersForSocket:packetType:remoteIP:remoteIPLength:
setBindingResponseHandler:
setBitrate:
setBitrateUnstable
setBlock:
setBounds:
setBtNotificationMonitor
setBudgetInCaptureFrames:
setBundlingScheme:
setByAddingObjectsFromArray:
setCFAvailabilityChange:
setCName:
setCachedActiveVideoStreams:
setCallActive:
setCallID:
setCallReport:withReport:
setCallReportProtobuf:withProtobufData:forMetricID:
setCallState:forCallID:
setCallback:
setCamera:
setCameraStreamGroupsPaused:
setCameraSwitching:
setCameraU1:
setCameraZoomAvailable:currentZoomFactor:maxZoomFactor:
setCameraZoomFactor:
setCameraZoomFactor:withRate:
setCanDisplayCaptions:
setCanProcessAudio:
setCanUseP2PLinks:
setCap2G:
setCap3G:
setCap5G:
setCapLTE:
setCapWifi:
setCapabilities:
setCaptionsCoordinator:
setCaptionsReceiverLanguages:
setCaptionsSenderLanguages:
setCaptionsSettings:
setCaptureController:
setCaptureFrameRate:
setCaptureSource:
setCaptureSourceID:
setCellBandwidth:
setCellPrimaryInterfaceChangeEnabled:
setCellTech:remoteCellular:isIPV6:audioCap:
setCellularAllowRedLowBitratesEnabled:
setCellularUniqueTag:
setChangeListener:
setChannelAwareOffset:
setChannelCount:
setChannelIndex:
setChannelPreferences:
setChatMode:
setChosenAudioPayload:
setChosenDTXPayload:
setChosenRedPayloadType:
setCinematicFramingEnabled:
setClientFormat:
setClientIO:
setClientIO:withError:
setClientOptions:
setClientPID:
setClientTargetBitrate:
setClientTargetBitrateCap:
setClientVersion:
setCnEnabled:
setCnPayloadType:
setCname:
setCodecBandwidthMask:
setCodecModeRequest:
setCodecRateModeMask:
setCodecSupport:
setCodecType:
setColorInfo:
setCommNATFlags:forInterface:isCached:
setCompeletionHandler:forTransactionID:
setCompoundStreamIDs:
setConferenceOperatingMode:
setConferenceState:forCallID:
setConferenceVisualRectangle:forCallID:
setConferenceVolume:
setConferenceWithMic:
setConfidence:
setConfig:
setConfig:pid:
setConfiguration:
setConfigurationExtension:
setConfigurationInProgress:
setConnection:
setConnectionChangeState:
setConnectionForDuplication:
setConnectionForDuplicationNonProbingVersion:
setConnectionHealthMonitor:
setConnectionHealthOnControlInfo:
setConnectionMTU:
setConnectionManager:
setConnectionPause:isLocalConnection:
setConnectionPersists:
setConnectionResult:
setConnectionSelectionVersionWithLocalFrameworkVersion:remoteFrameworkVersion:
setConnectionSetupPiggybackBlob:
setConnectionSetupTime
setConnectionType:
setConnectionTypeString:
setContent:
setContents:
setContentsGravity:
setContentsRect:
setContext:
setContextId:
setContinuousCorners:
setControlChannelVersion:
setControlInfoGenerator:
setControllerFormat:
setConversationID:
setConversationTimeBase:
setConversationTimeBaseTruncated:
setCoordinateSystem:
setCoreMotionManagerDelegate:
setCount:
setCreationTime:
setCumulativePacketsLost:
setCurrentActiveConnection:
setCurrentAudioDevice:type:
setCurrentAudioSessionMediaProperties:
setCurrentAudioUnitProperties:
setCurrentChannelMetrics:
setCurrentDTXEnable:
setCurrentDTXEnabled:
setCurrentDetails:
setCurrentEncodeRule:
setCurrentFocus:
setCurrentFrameTime:
setCurrentInputDevice:
setCurrentInputDeviceInternal:
setCurrentOutputDevice:
setCurrentSendMKIWithKeyMaterial:
setCurrentTranscription:
setCurrentUplinkTargetBitrate:
setCurrentUplinkTotalBitrate:
setCurrentVideoCaptureFrameRate:
setCustomHeight:
setCustomVideoHeight:
setCustomVideoWidth:
setCvoExtensionID:
setDTMFRTPEventDuration:withPayload:
setDTXPayload:
setDataReceivedDelegate:
setDataType:
setDecodeFormats:
setDecryptionMKMRecoveryInterval:
setDecryptionTimeOutEnabled:
setDecryptionTimeOutInterval:
setDecryptionTimeoutEnabled:
setDecryptionTimeoutInterval:
setDefaultAlgorithmConfiguration:
setDefaultLinkProbingCapabilityVersionForDeviceRole:
setDelaySinceLastSR:
setDelegate:
setDelegateQueue:
setDelegatesForRemoteParticipant:
setDepartureTime:
setDepthPixelBuffer:
setDestinationFramerate:
setDestroyHandler:
setDeviceList:
setDeviceRole:
setDeviceRole:operatingMode:
setDeviceRoleForAudioStreamMode:direction:
setDeviceType:
setDidMBLRampDown:
setDidProcessSamplesCallback:
setDidProcessSamplesCallbackContext:
setDidReceiveFirstFrame:
setDidReceiveVideo:
setDidSend200OK:
setDirection:
setDisableActions:
setDisableVAD:
setDisplayID:
setDownlinkBitrateCap:
setDownlinkTargetBitrate:
setDownlinkTargetCellBitrateCap:
setDownstreamBandwidth:
setDtmf:
setDtmfPayloadType:
setDtmfSampleRate:
setDtmfTimestampRate:
setDtmfTonePlaybackEnabled:
setDtxEnabled:
setDtxPayload:
setDuplicateImportantPktsEnabled:
setDuplicateMessageOnServerLink:
setDuplicationCallback:withContext:
setDuplicationDownlinkCellBitrateCap:currentBitrate:
setDuplicationEnabled:
setDuplicationEnabledInternal:
setDuplicationEnhancementEnabled:
setDuplicationFlag:withPreferredLocalLinkTypeForDuplication:notifyPeer:
setDuplicationLinkID:
setDurationThresholdDownward:
setDurationThresholdUpward:
setEffectType:
setEffectsApplied:
setEffectsArray:
setEffectsMetadata:
setEmulatedNetworkConfigPath:
setEmulatedNetworkConfigurationPath:
setEmulatedRxPLR:
setEnableAggressiveProbingSequence:
setEnableAudioPowerSpectrumReport:
setEnableCVO:
setEnableCVO:cvoExtensionID:
setEnableDNNVAD:
setEnableLoopbackInterface:
setEnableMaxBitrateOnNoChangeCMR:
setEnableOneToOneMode:
setEnableRateAdaptation:maxBitrate:minBitrate:adaptationInterval:
setEnableSpeakerPhone:
setEnableVADFiltering:
setEncodeFormats:
setEncoderBitrateAveragingInterval:
setEncoderUsage:
setEncodingMode:
setEncryptionInfoReceived:
setEncryptionWithEncryptionMaterial:
setEndRTPTimeStamp:
setEndRTPTimestampWithTimestamp:
setErrorReponseCallback:
setErrorResponseCallback:
setEstimatedBandwidth:
setEstimatedBandwidthCap:
setEstimatedBandwidthUncapped:
setEventHandler:
setEventLogLevel:
setEvsChannelAwareOffset:
setEvsHeaderFullOnly:
setExpectedBitrate:
setExpectsMediaDataInRealTime:
setExtendedHighestSequenceNumber:
setExternalIOFormat:
setFECRatio:
setFECRedundancyVector:
setFPref:
setFaceMeshTrackingEnabled:
setFaceTimeSettings:
setFaceTimeSwitches:
setFarEndVersionInfo:
setFastSuddenBandwidthDetectionEnabled:
setFeatureListDict:
setFeatureString:
setFeatureStrings:
setFecFeedbackVersion:
setFecHeaderV1Enabled:
setFecRatio:
setFeedbackController:
setFeedbackDelegate:
setFirstMKIToFirstMediaReceivedTimerForMKIReceivedTime
setFixedJitterBufferSize:
setFlags:forInterface:isCached:isCachedKey:mask:
setFollowSystemCamera:
setFollowSystemCameraEnabled:
setFollowSystemInput:
setFollowSystemInputEnabled:
setFollowSystemOutput:
setFollowSystemOutputEnabled:
setFontSize:
setForceEVSWideBand:
setForceFullBandwidth:
setForceIPv6ForCallID:
setForceNetworkCellular:
setForceRelay
setForceRelayForCallID:
setForceZeroRegionOfInterestOrigin:
setForcedCapBitrate:
setForcedTargetBitrate:
setForegroundColor:
setFormats:
setFractionLost:
setFrame:
setFramePosition:
setFramePresentationTime:
setFrameRate:
setFrameWidth:frameHeight:frameRate:
setFramerate:
setFramesPerIdrPeriod:
setFrameworkVersion:
setFrequencyMeteringEnabled:
setFrequencyMeteringEnabled:meterType:
setFrequencyRange:
setGeometryFlipped:
setGroupID:
setH264LevelAsymmetryAllowed:
setH264PacketizationMode:
setHAFRC:
setHandle:
setHasAbSwitches:
setHasAccessNetworkType:
setHasAllowDynamicMaxBitrate:
setHasAllowsContentsChangeWithAspectPreservation:
setHasAudioChannelCount:
setHasAudioFeatures:
setHasAudioUnitModel:
setHasBasebandCodecSampleRate:
setHasBlobVersion:
setHasCanDisplayCaptions:
setHasCap2G:
setHasCap3G:
setHasCap5G:
setHasCapLTE:
setHasCapWifi:
setHasCapabilities:
setHasCipherSuite:
setHasCodecType:
setHasConfidence:
setHasConfigurationExtension:
setHasContent:
setHasCoordinateSystem:
setHasCustomVideoHeight:
setHasCustomVideoWidth:
setHasDecodeFormats:
setHasEncodeFormats:
setHasEncoderUsage:
setHasFormatsExt1:
setHasHasSpaceAfter:
setHasHdrModesSupported:
setHasIsFinal:
setHasIsLocal:
setHasLandscapeAspectRatioX:
setHasLandscapeAspectRatioY:
setHasLinkProbingCapabilityVersion:
setHasLtrpEnabled:
setHasMaxMediaBitrate:
setHasMaxNetworkBitrate:
setHasMaxPacketsPerSecond:
setHasMediaControlInfoSubVersion:
setHasMediaControlInfoVersion:
setHasMediaFlags:
setHasMic:
setHasMismatchedDisplayAspectRatioX:
setHasMismatchedDisplayAspectRatioY:
setHasMultiwayCapabilities:
setHasNtpTime:
setHasOneToOneModeSupported:
setHasPTime:
setHasParameterSet:
setHasPayloadSpecOrPayloads:
setHasPendingChanges:
setHasPixelFormats:
setHasPortraitAspectRatioX:
setHasPortraitAspectRatioY:
setHasPreferredFormat:
setHasPreferredFormatExt1:
setHasProfileLevelId:
setHasQualityIndex:
setHasReceivedFirstFrame:
setHasReceivedLastFrame:
setHasRepairedMaxNetworkBitrate:
setHasRepairedStreamID:
setHasRtcpFlags:
setHasRtpPayload:
setHasRtpSSRC:
setHasRtpSampleRate:
setHasScreenRes:
setHasSenderLanguages:
setHasSpaceAfter:
setHasStatus:
setHasStreamGroup:
setHasStreamIndex:
setHasSupportedCodecs:
setHasSupportedImageTypes:
setHasSupportedPayloads:
setHasSupportedVideoCodecs:
setHasTilesPerFrame:
setHasVideoPayload:
setHdrMode:
setHdrModesSupported:
setHeaderFullOnly:
setHeight:
setHidden:
setHighFecEnabled:
setHighestActiveQualityIndex:
setICETimeout:
setIOBufferDuration:withError:
setIRATDuplicationEnabled:
setIRATRtpEnabled:
setIdentity:
setIdsDestination:
setIdsParticipantID:
setIdsUPlusOneMode:
setIgnoreSilence:
setImageAttributeRules:
setImageData:
setImageType:
setIncludeRedSequenceOffset:
setInfo:size:type:
setInfoUnserialized:type:
setInitUsingWifiTiers:
setInitialMemoryUsageMB:
setInitialSecondaryRelaySetupDone:
setInjectAudioConfigType:
setInputFrequencyMeteringEnabled:
setInputMeter:
setInputMetering
setInputMeteringEnabled:
setInterarrivalJitter:
setInterfaceListenerDelegate:
setInterfaceName:
setInternalReceiverQueue:
setIp:
setIpVersion:
setIpport:
setIsAudioEnabled:
setIsAudioPausedToStart:
setIsAudioSending:
setIsAudioStalled:
setIsCaller:
setIsDTLSEnabled:
setIsDefaultMode:
setIsDegraded:
setIsDemuxNeeded:
setIsDroppedByAQM:
setIsDuplexAudioOnly:
setIsDuplexVideoOnly:
setIsDuplicationAllowed:
setIsDuplicationEnabled:
setIsEndToEndBasedBandwidthProbingEnabled:
setIsExtraDelayForPacketRetransmissionsEnabled:
setIsFecGeneratorEnabled:
setIsFeedbackReceived:
setIsFinal:
setIsFirstTimestampArrived:
setIsFocus:
setIsGKVoiceChat:
setIsHalfDuplexAudio:
setIsHopByHopEncryptedOnOptions:
setIsIPv6:
setIsInCanvas:
setIsInDaemon:
setIsKeyExchangeEnabled:
setIsLastFrameProbingSequence:
setIsLinkCongested:
setIsLocal:
setIsLocalCellular:
setIsLocalOnCellular:cappedVideoStreamIDs:
setIsLost:
setIsLowLatency:
setIsLowLatencyAudio:
setIsLowestQuality:
setIsMediaStalled:
setIsMuted:
setIsMutedTalkerNotificationRegistered:
setIsOneToOne:
setIsOneToOneModeEnabled:
setIsOneToOneRemoteMediaStalling:
setIsOneToOneScreenEnabled:
setIsOpusInBandFecEnabled:
setIsPaused:
setIsQueryAnswered:
setIsRTCPFBEnabled:
setIsRTCPForLossFeedbackEnabled:
setIsRTPFlushBasebandFromVCRateControl:
setIsRateLimitedMaxTimeExceeded:
setIsRedundancyControlEnabled:
setIsRedundancyStrategyResetPending:
setIsRelayEnabled:
setIsRelayForced:
setIsRemoteAudioPaused:
setIsRemoteMediaQualityDegraded:
setIsRemoteMediaStalled:
setIsRemoteOnPeace:
setIsRemotePreAzul:
setIsResumed:
setIsSenderProbingEnabled:
setIsSendingEnabled:
setIsServerBasedBandwidthProbingEnabled:
setIsServerPacketRetransmissionEnabled:
setIsServerRTxEnabled:
setIsStalled:
setIsStarted:
setIsTargetBitrateStabilized:
setIsTemporalStream:
setIsUseCaseWatchContinuity:
setIsUsingSuppression:
setIsValid:
setIsVariableSliceModeEnabled:
setIsVideoDegraded:
setIsVideoEnabled:
setIsVideoPaused:
setIsVideoPausedToStart:
setIsVideoProtected:
setIsVideoQualityDegraded:
setIsVideoQualityNearDegraded:
setIsVideoSourceScreen:
setIsVideoSuspended:
setIsVisible:
setIsWaitingForICEResult:
setIsWindowed:
setJbTargetEstimatorSynchronizer:
setJitterBufferMode:
setKeyFrameInterval:
setKeyFrameOnlyStreamID:
setKeySpace:
setLandscapeAspectRatioX:
setLandscapeAspectRatioY:
setLargeFrameSizeAtCurrentBandwidth:
setLargeFrameSizeRequested:
setLastActiveCall:
setLastActiveCallID:
setLastBasebandFlushCountChangeTime:
setLastCalledApiName:
setLastDecodedFrameTime:
setLastFrameTime:
setLastKeyFrameSentTime:
setLastNoVoiceActivityPacketCount:
setLastPrimaryConnectionInUse:
setLastProbingSequenceTimeActual:
setLastProbingSequenceTimeExpect:
setLastRTPTimestamp:
setLastReceived:
setLastReceivedRTCPPacketTime:
setLastReceivedRTPPacketTime:
setLastSRTimestamp:
setLastSentAudioHostTime:
setLastSentAudioSampleTime:
setLatencySensitiveMode:
setLayerBoundsForStreamTokenWithArguments:error:
setLayerHostBounds:
setLength:
setLinkFlags:
setLinkPreferenceOrder:
setLinkProbingCapabilityVersion:
setLinkProbingHandlerDelegate:
setLinkProbingResultConfig
setLocalAddress:
setLocalBandwidthEstimation:
setLocalCameraWithUID:
setLocalCellTech:
setLocalConnectionData:
setLocalIdentityForKeyExchange
setLocalInterfaceType:
setLocalLanguages:
setLocalLinkTypeSuggestionChangeTime:
setLocalParticipantID:
setLocalParticipantInfo:networkSockets:withError:
setLocalRelayConnectionData:
setLocalRelayRequestResponse:
setLocalRelayUpdate:
setLocalSSRC:
setLocalScreenAttributes:
setLocalSwitches:
setLocalVideoAttributes:
setLocalVideoLayer:front:
setLocale:
setLogPrefix:
setLoopLength:
setLowFpsVideoEnabled:
setLowNetworkModeEnabled:
setLtrAckFeedbackType:
setMapKey:
setMapping:
setMargin:
setMasksToBounds:
setMatchedFeaturesString:localFeaturesString:remoteFeaturesString:
setMaxAveragePacketDelayMs:
setMaxBandwidth:
setMaxBitrateKbps:
setMaxChannelCountMic:
setMaxChannelCountSpeaker:
setMaxConnectionMTU:
setMaxDelay:
setMaxEncoderPixels:
setMaxFrameDurationMillis:
setMaxFramerate:
setMaxIDSStreamIdCount:
setMaxMediaBitrate:
setMaxNetworkBitrate:
setMaxOWRD:
setMaxPacketLength:
setMaxPacketSize:
setMaxPacketsPerSecond:
setMaxPtime:
setMaxRedundancyPercentage:
setMaxSupportedTemporalLayers:
setMaxTargetBitrate:minTargetBitrate:
setMaxTierIndex:minTierIndex:
setMaxUDPPayloadSize:
setMediaControlInfoFECFeedbackVersion:
setMediaControlInfoGenerator:
setMediaControlInfoGeneratorOptions:
setMediaControlInfoGeneratorType:
setMediaControlInfoSubVersion:
setMediaControlInfoVersion:
setMediaController:
setMediaFlags:
setMediaNegotiator:
setMediaPlaybackOnExternalDevice:
setMediaQueue:
setMediaQueuePeakBitrateWithTargetBitrate:
setMediaQueueStreamSettings
setMediaQueueThrottlingInterval:
setMediaState:
setMediaState:forMediaType:
setMediaStreamDelegate:
setMediaStreamDelegateQueue:
setMediaSubtype:
setMediaSuggestion:
setMediaSuspended:forStreamToken:
setMediaType:
setMediaType:enabled:mediaString:xpcMessageKey:xpcOperationKey:completionBlock:
setMediaType:paused:mediaString:xpcMessageKey:xpcOperationKey:completionBlock:
setMediaTypeToSpatialSourceIDMap:
setMemoji:
setMemoryUsageMB:
setMessage:
setMessageHandler:
setMessageReceivedDelegate:
setMetaData:
setMetadata:
setMicCallbackContext:
setMicTimestamp:
setMicrophoneMuted:
setMicrophoneU1:
setMinBitrateKbps:
setMinFramerate:
setMinMarginRequired:
setMinSamplesCount:
setMinSamplesCountFastBandwidthEstimation:
setMinTargetBitrate:
setMismatchedDisplayAspectRatioX:
setMismatchedDisplayAspectRatioY:
setMode:
setMoments:
setMomentsCollectorDelegate:
setMomentsDelegate:
setMomentsImageTypes:
setMomentsSettings:
setMomentsVideoCodecs:
setMultiplexedConnection:
setMultiwayAudioStreams:
setMultiwayCapabilities:
setMultiwayConfig:
setMultiwayVideoStreams:
setMute:forClient:
setMuteOnStreams
setMuted:
setMutedPeers:
setNATType:
setNTPLeastSignificantWord:
setNTPMostSignificantWord:
setNackGeneratorStorebagConfigVersion:
setName:
setNatType:
setNeedsPacketThread:
setNegotiatedCoordinateSystemFromCoordinateSystem:
setNegotiatedScreenEnabled:
setNegotiatedSwitches:
setNegotiatedVideoEnabled:
setNegotiationPackedPayloadWithStreamGroupPayload:
setNegotiationProtocolMask:
setNetworkAgentRefCount:
setNetworkClockID:
setNetworkClockID:withError:
setNetworkConditionsTimeoutInSeconds:
setNetworkFeedbackController:
setNetworkPayload:
setNetworkQualityGraphLayer:
setNetworkQualityUpdateTimer:
setNetworkServiceTime:
setNoRemoteDuplicationThresholdFast:
setNotificationDelegate:
setNtpTime:
setNumRedundantPayloads:
setNwActivity:
setNwConnectionCongestionDetector:
setOSVersion:
setObject:atIndexedSubscript:
setObject:forKey:
setObject:forKey:forP2PID:
setObject:forKeyedSubscript:
setObserver:
setOctetAligned:
setOctetsSent:
setOneToOneConfig:
setOneToOneConfigOnRemoteParticipant:
setOneToOneEnabled:
setOneToOneModeEnabled:
setOneToOneModeEnabled:isInitiator:
setOneToOneModeEnabledFromRemoteSignal:
setOneToOneModeSupported:
setOneToOneOperatingMode:
setOneToOneVideoStreamBandwidthProbing:
setOpaque:
setOperatingBitrate:
setOperatingMode:
setOperatingTierIndexWithBitrate:
setOperation:
setOptInDictionary:
setOptIntoExistingSubscribedStreams:
setOptedInStreamID:
setOptionalPackedPayload:
setOrigin:
setOsVersion:
setOutputDevice:
setOutputFormat:
setOutputFrequencyMeteringEnabled:
setOutputMetering
setOutputMeteringEnabled:
setOutputURL:
setPTime:
setPackedPayload:
setPacketCountInNetworkQueue:
setPacketExpirationTime:
setPacketFilter:
setPacketLateAndMissingRatio:
setPacketLossRate5Secs:
setPacketLossRate:
setPacketType:
setPacketsPerBundle:
setParameterSet:
setParameterSets:
setParentNWActivity:
setParentStreamID:
setParentStreamID:videoConfig:
setParticipantData:
setParticipantID:
setParticipantIDOnOptions:
setParticipantId:
setParticipantJoinedToFirstMKITimer
setParticipantUUID:
setPause:
setPauseAudio:
setPauseAudio:callID:error:
setPauseAudio:error:
setPauseAudio:force:error:
setPauseOnMediaStreams:
setPauseVideo:
setPauseVideo:callID:error:
setPauseVideo:error:
setPauseVideo:force:error:
setPaused:
setPaused:onStreamGroups:
setPayload:
setPayload:mediaLine:
setPayloadFlags:
setPayloadFlagsWithPayloads:
setPayloadPreference:
setPayloadSpecOrPayloads:
setPayloads:
setPeerCN:
setPeerCN:callID:
setPeerProtocolVersion:
setPeerProtocolVersion:forCallID:
setPeerReportingID:
setPeerReportingID:sessionID:callID:
setPeerReportingIdentifier:sessionIdentifier:forCallID:
setPeerSubscribedStreamCallback:
setPeerSubscribedStreamIDs:
setPeerSubscribedStreams:
setPendingPrimaryConnection:
setPendingRelayCount:
setPendingSecondaryConnection:
setPendingVideoStreams:
setPercentage:
setPeriodicReportingEnabled:
setPersistent:
setPiggybackBlobPreference
setPixelFormats:
setPopCompletionHandler:
setPort:
setPortraitAspectRatioX:
setPortraitAspectRatioY:
setPosition:
setPositionalInfo:
setPowerLevel:
setPowerSpectrumEnabled:
setPowerSpectrumStreamToken:
setPreWarmCellEnabled:
setPreWarmState:
setPreferRelayOverP2P:reason:
setPreferRelayOverP2PEnabled:
setPreferredAudioCodec:
setPreferredBlockSize:
setPreferredCodec:
setPreferredCodecRateMode:
setPreferredFormat:
setPreferredFormatExt1:
setPreferredIOSampleRate:
setPreferredIOSamplesPerFrame:
setPreferredLocalInterfaceForDuplication:
setPreferredMediaBitRate:
setPreferredMediaBitrate:
setPreferredMediaBitrateWithConfiguration:
setPreferredMode:
setPreferredRemoteInterfaceForDuplication:
setPreferredSampleRate:
setPreferredVideoCodec:
setPresentationInfo:
setPresentationState:
setPreservesFlip:
setPrimaryConnHealthAllowedDelay:
setPrimaryConnection:
setPrimaryLinkID:
setPrimaryPayload:
setPriority:
setProbingSequenceCount:
setProbingSequencePacketCount:
setProbingSequencePacketSize:
setProcessCompleteHandler:
setProcessID:
setProcessId:
setProfileLevel:
setProfileLevelId:
setProminenceIndex:
setPtime:
setPushCompletionHandler:
setQualityDelegate:
setQualityIndex:
setQualityIndicator:
setQueue:
setQuickRelayServerProvider:
setRSSIThresholdEnabled:
setRTPPayloads:numPayloads:withError:
setRTPPayloads:withError:
setRTPTimestamp:
setRadioAccessTechnology:
setRampDownBWDropEnabled:
setRatType:
setRateAdaptationEnabled:
setRateChangeCounter
setRateChangeCounter:
setRateControlConfig:
setRateControlInterval:
setRateSharingCount:
setRatio:
setReadHandlerWithOptions:
setReadyToReadBlock:
setReceiveDelegate:
setReceiveHandler:
setReceiveMasterKey:
setReceiveMediaKey:
setReceivedSIPInvite:
setReceiverPayloads
setReceiverReport:
setRecommendedMTU:
setRedEnabled:
setRedMaxDelay20ms:
setRedNumPayloads:
setRedNumPayloads:withMaxDelay:shouldResetHistory:
setRedPayload:
setRedundancyController:
setRedundancyControllerFECVersion:
setRedundancyControllerMode:
setRedundancyEnabled:
setRedundancyEnabledFor720Stream:
setRedundancyMode:
setRedundancyPercentage:
setRegisteredConnection:
setReinitEncoderOnFrameSizeChangeEnabled:
setRelay:
setRelayConnectionID:
setRelayServerProvider:
setRemoteAddress:
setRemoteAddress:remoteRTCPPort:
setRemoteAudioEnabled:
setRemoteAudioPaused:
setRemoteBasebandCodec:
setRemoteBasebandCodecSampleRate:
setRemoteBlobCreationTime:
setRemoteBlobVersion:
setRemoteCallID:
setRemoteCallInfoFromInviteDictionary:
setRemoteCanDisplayCaptions:
setRemoteCellTech:
setRemoteCodecInfo:
setRemoteCodecSampleRate:
setRemoteCodecType:
setRemoteCodecType:sampleRate:
setRemoteCodecTypeAndSampleRate:
setRemoteConnectionData:
setRemoteDeviceName:
setRemoteDeviceVersionIDS
setRemoteFaceTimeSwitchesAvailable:
setRemoteFrameHeight:
setRemoteFrameWidth:
setRemoteIDSParticipantID:
setRemoteIO:
setRemoteIO:withError:
setRemoteInterfaceType:
setRemoteLanguages:
setRemoteLinkFlags:
setRemoteLinkProbingCapabilityVersion:
setRemoteMediaStalled:
setRemoteMediaState:
setRemoteMediaState:forMediaType:
setRemoteParticipantID:
setRemoteParticipants:
setRemoteParticipantsMapByServerID:
setRemotePreWarmStateEnabled:
setRemoteRelayConnectionData:
setRemoteRelayRequestResponse:
setRemoteRelayUpdate:
setRemoteSSRC:
setRemoteScreenAttributes:
setRemoteScreenEnabled:
setRemoteSwitches:
setRemoteSwitches:isCaller:
setRemoteSystemAudioPaused:
setRemoteUserAgent:
setRemoteVideoAttributes:
setRemoteVideoBackLayer:
setRemoteVideoEnabled:
setRemoteVideoInitialOrientation:
setRemoteVideoLayer:
setRemoteVideoLayerBounds:
setRemoteVideoOrientation:
setRemoteVideoPaused:
setRenderProcessTime:
setRepairedMaxNetworkBitrate:
setRepairedStreamID:
setReportedSourceSSRC:
setReportingAgent:
setReportingClientType:
setReportingConfig:
setReportingHierarchyToken:
setReportingParentID:
setRequiredPackedPayload:
setRequiresSecureCoding:
setRequiresWiFi:
setRequiresWifi:
setReservedBitrate:
setResolution:
setResult:
setResumeAudio
setResumeVideo
setRingBuf:
setRootLayer:
setRoundTripTime:
setRtcpFlags:
setRtcpPSFB_FIREnabled:
setRtcpPSFB_LTRAckEnabled:
setRtcpPSFB_PLIEnabled:
setRtcpRTPFB_GNACKEnabled:
setRtcpReceiveCallbackEnabled:
setRtcpRemotePort:
setRtcpReportProvider:
setRtcpSREnabled:
setRtcpSendInterval:
setRtcpSendIntervalSec:
setRtcpTimeOutEnabled:
setRtcpTimeOutInterval:
setRtcpTimeOutIntervalSec:
setRtcpTimeoutEnabled:
setRtcpTimeoutInterval:
setRtcpXREnabled:
setRtpHandle:
setRtpId:
setRtpPayload:
setRtpSSRC:
setRtpSampleRate:
setRtpTimeOutEnabled:
setRtpTimeOutInterval:
setRtpTimeOutIntervalSec:
setRtpTimeoutEnabled:
setRtpTimeoutInterval:
setRtpTimestampRate:
setRtpVideo:
setRules:
setRunningClient:
setRxCodecFeatureListString:
setRxMaxBitrate:
setRxMinBitrate:
setRxPayloadList:withPayloadTypes:
setRxPayloadList:withPayloadTypes:isRedEnabled:
setRxPayloadType:
setRxRedPayloadType:
setSKEBlobOnTransportSession
setSKEState:forCallID:
setSRTCPCipherSuite:
setSRTPCipherSuite:
setSSLFlags:forInterface:isCached:
setSSRC:
setSampleRate:
setScreenCaptureDisplayID:
setScreenDisplayID:
setScreenEnabled:
setScreenPixelCount:
setScreenRes:
setScreenRuleCollections:
setScreenSSRC:
setScreenSettings:
setScreenSharingHost:
setSdpString:
setSecondaryConnection:
setSecondaryFlags:
setSecureMessagingRequired:
setSecurityKeyHolder:
setSecurityKeyManager:
setSegments:
setSelectiveScreenUUID:
setSelectiveSharingPort:
setSendActiveVoiceOnly:
setSendAudio:forCallID:
setSendMasterKey:
setSendMediaKey:
setSenderLanguages:
setSendingAudio:callID:error:
setSequenceNumber:
setSerializedSize:
setServerAddresses:
setServerBag:
setServerInfo:
setSessionActive:
setSessionConferenceState:callID:
setSessionConferenceVisualRectangle:callID:
setSessionID:
setSessionID:callID:
setSessionIP:
setSessionId:
setSessionInfoSynchronizerCallbacks
setSessionInfoSynchronizerErrorResponseCallback
setSessionInfoSynchronizerPeerSubscribedStreamsCallback
setSessionMessaging:
setSetSessionID:forCallID:
setSettingsU1:
setSframeCipherSuite:
setSframeCryptor:
setShareProfile:
setSharedXPCConnection:
setSharingEnabled:
setShouldApplyRedAsBoolean:
setShouldCreateMediaControlInfoGenerator:
setShouldCreateRedundancyController:
setShouldDisableLargeFrameRequestsWhenInitialRampUp:
setShouldDisplayNetworkQualityGraph:
setShouldEnableFaceZoom:
setShouldEnableMLEnhance:
setShouldIgnoreRTPHeaderExtensions:
setShouldPrioritizeParticipantIDForSIPInvite:
setShouldRegisterMediaControlInfoGeneratorCallbacks:
setShouldScheduleMediaQueue:
setShouldSendAudio:
setShouldSendFeedbackControllerReport:
setShouldSetupNWMonitor:
setShouldSkipIDRScheduler:
setShouldSynchronizeWithSourceRTPTimestamps:
setShouldTimeoutPackets:
setShouldUpdateRemoteScreenAttributes:
setSignalStrengthBars:
setSignalStrengthDisplayBars:
setSignalStrengthMaxDisplayBars:
setSipState:
setSize:
setSocket:
setSourceFramerate:
setSpatialAudioDisabled:
setSpatialAudioSourceID:
setSpatialContext:
setSpatialMetadata:
setSpatialMetadata:audioSessionId:completionHandler:
setSpatialMetadataEntryMap:
setSpeakerCallback:
setSpeakerCallbackContext:
setSpeakerPhoneEnabled:
setSpeakerPowerRMS:
setSpeakerTimestamp:
setSpeakingDelegate:
setSrtpKeyBytes:
setSsrc:
setStartCompletionHandler:
setStartConnectionHealthMonitoring:
setStartHostTime:
setStartOnDemand:
setStartRTPTimeStamp:
setStartTime:
setStartTime:forKey:
setStarted:
setState:
setStateChangeHandlerForConnection:result:semaphore:
setStateQueue:
setStatistics:
setStatisticsCollector:
setStatisticsID:
setStatsReportingInterval:
setStatus:
setStillImageTime:
setStopTime:forKey:
setStream:
setStreamConfig:withError:
setStreamDelegate:
setStreamDirection:
setStreamGroupID:
setStreamGroupMode:
setStreamGroups:
setStreamID:
setStreamIDs:
setStreamIDs:numOfStreamIDs:repairedStreamIDs:numOfRepairedStreamIDs:
setStreamIDs:repairStreamIDs:
setStreamIDsCell:
setStreamIDsWifi:
setStreamInputID:
setStreamOutput:
setStreamOutputDelegate:
setStreamTokens:
setStreams:
setStreamsUseRTCPWithStreamInfos:
setString:
setSubscribedTo:
setSubscriptionSlot:
setSupportDuplication:
setSupportFlags:
setSupportedAudioPayloads:
setSupportedBandwidths:
setSupportedCodecs:
setSupportedImageTypes:
setSupportedModes:
setSupportedNumRedundantPayload:
setSupportedPayloads:
setSupportedVideoCodecs:
setSupportedVideoFormats:
setSupportsAdaptation:
setSupportsCodecBandwidthUpdate:
setSupportsDynamicMaxBitrate:
setSupportsSKEOptimization:
setSwitches:
setSyncSource:
setSyncSourceDelegate:
setSynchronizationDelegate:
setSynchronizationSourceStreamToken:
setSynchronizationTimeOffset:
setSynchronizer:
setSystemAudioCaptureSession:
setSystemAudioConfiguration:
setTCPFlags:forInterface:isCached:
setTalkingPeersLimit:
setTargetBitrate:
setTargetBitrate:rateChangeCounter:
setTargetBitrateCap:
setTargetBitrateChangeCounter:
setTargetBitrateIsAudioOnly:
setTargetMediaBitrate:
setTargetStreamID:
setTaskIsComplete:
setTemporalBitrateArray:
setTemporalScalingEnabled:
setTemporaryMaximumBitrate:
setTerminationHandler:
setText:
setThrottlingInterval:
setTierNetworkBitrate:
setTilesPerFrame:
setTilesPerVideoFrame:
setTime:
setTimestamp:
setTiming:forKey:
setTokenData:
setToneInjectionEnabled:
setTopic:
setTotalLargeFrameWaste:
setTotalMediaStallSaveIntervalWithTime:
setTransactionID:
setTransform:
setTransitionToDisabled:
setTransitionToEnabled:
setTransitionToPaused:
setTransmitterStreamIDs:repairStreamIDs:
setTransport:
setTransportConnectionSelectionVersionWithLocalFrameWorkVersion:remoteFrameworkVersion:
setTransportDelegate:
setTransportProtocolType:
setTransportSession:
setTransportSessionID:
setTransportType:
setTxCodecFeatureListString:
setTxInitialBitrate:
setTxIntervalMin:
setTxMaxBitrate:
setTxMinBitrate:
setTxPayloadType:
setTxRedPayloadType:
setType:
setU1Config:
setU8Version:
setUPlusOneMode:isInitiator:
setUniquePIDOnParameters:shouldRunInProcess:
setUp1080pRules:
setUpAspectRatios:
setUpAspectRatiosFromFeatureListString:
setUpAudioIO:callID:
setUpBufferPoolForOutputWidth:outputHeight:
setUpFirstRemoteFrameTimer
setUpRemoteAspectRatios
setUpRemoteAspectRatiosForPayload:
setUpRemoteAspectRatiosFromFreatureListString:
setUpWithDictionary:
setUpdateNumber:
setUpdateRemoteCodecInfoCallback:
setUpdateRemoteCodecInfoContext:
setUplinkAudioBitrateCapOneToOne:
setUplinkBitrateCap:
setUplinkBitrateCapCell:
setUplinkBitrateCapOneToOne:
setUplinkBitrateCapWifi:
setUpstreamBandwidth:
setUseChannelDataFormat:
setUseControlByte:
setUseInBandFEC:
setUseInBandFec:
setUseMediaDrivenDuplication:
setUsePacketThread:
setUseRateControl:
setUseSBR:
setUseSbr:blockSize:forAACFormat:
setUseUEP:
setUseViceroyBlobFormat:
setUseVideoJitterForVideoPlayout:
setUseWiFiTiers:
setUseWifiTiers:
setUserAgent:
setUsingServerBasedLinks:
setUtteranceNumber:
setUuid:
setVADFilteringEnabled:
setVCIDSSessionInfoPublishedStreamIDs:
setVCIDSSessionInfoSubscribedStreamIDs:
setVCNWConnectionMonitorStatisticsHandler
setVCStatistics:
setVTPIP:
setValue:
setValue:forKey:
setVcMediaQueue:
setVersion:
setVfdCancel:
setVfdMessage:
setVideo:
setVideoAttributes:
setVideoCodec:
setVideoDegraded:
setVideoEnabled:
setVideoFeatureStrings:
setVideoFeatures:
setVideoIsExpected:
setVideoIsPaused:
setVideoLayer:forMode:
setVideoLayerHost:forMode:
setVideoMediaControlInfoGenerator:
setVideoMirrored:
setVideoParameterSet:
setVideoPayload:
setVideoPayloadCollections:
setVideoPayloads:
setVideoPayloads:count:
setVideoPositionalInfo:
setVideoPriorityPointer:
setVideoQuality:
setVideoRTCPFB:useNACK:
setVideoRTCPStreamParamatersForSocket:packetType:remoteIP:remoteIPLength:
setVideoRTPStreamParamatersForSocket:packetType:remoteIP:remoteIPLength:
setVideoReceiverConfig:
setVideoReceiverFeedbackDelegate:
setVideoResolution:
setVideoRuleCollections:
setVideoRuleCollections:featureStrings:isScreen:isCellular16x9Capable:
setVideoSSRC:
setVideoSendingBitrate:
setVideoSettings:
setVideoSourceScreen:
setVideoStreamDelegate:
setVideoStreamMode:
setVideoToken:
setVisibilityIndex:
setVisibleRectCropping:
setVolume:
setVolume:withRampTime:
setVpEnableSpatialChat:
setVpOperatingMode:
setVpOperatingModeToAudioSessionMediaFormatMapping:
setVplrFecEnabled:
setWRMCallId:
setWRMCoexMetrics:
setWRMMetricConfig:
setWRMNotification:
setWRMUpdateCallback:requestNotificationCallback:withContext:completionHandler:
setWaitToBeNominated:
setWcmClientDelegate:
setWeightFactor:
setWiFiAssist:
setWidth:
setWidth:height:frameRate:
setWifiAllowRedLowBitratesEnabled:
setWithArray:
setWithCapacity:
setWithObject:
setWithSet:
setWrapped:
setWriteCompletionHandler:
setWriteDatagramBlock:
setWriteDatagramsBlock:
set_isCellUp:
set_isWifiUp:
setiRATDuplicationEnabled:
settingsU1
settingsWithMediaType:
setupAACELDPayload:
setupABTesting
setupAMRModesWithClientModeMask:
setupAMRWBModesWithClientModeMask:
setupAlwaysOnRedTiersForSupportedRed:usingCellular:
setupAssetWriterWithWidth:height:transactionID:
setupAudio:
setupAudioCodecWithPayload:
setupAudioCookies
setupAudioEnabledMessages
setupAudioEncoders
setupAudioHeaderSize
setupAudioIOWithConfig:
setupAudioOnOffStateMessages
setupAudioPauseMessages
setupAudioPausedHBMessages
setupAudioPausedMessages
setupAudioPowerSpectrum
setupAudioRedWithPlist:audioStreamConfig:supportedAudioRules:
setupAudioRulesWithSBR:isContinuity:
setupAudioStreamConfiguration:audioRules:
setupAudioStreamConfiguration:errorReason:
setupAudioStreamConfiguration:withStreamGroupConfig:streamGroupStreamConfig:
setupAudioStreamGroupStreams:streamGroupConfig:supportedAudioRules:streamIDGenerator:
setupAudioStreamGroupWithStreamConfigs:negotiatorConfig:streamGroupConfiguration:
setupAudioStreamInProcessWithClientArgs:networkSockets:error:
setupAudioStreamOutOfProcessWithClientArgs:networkSockets:error:
setupAudioStreamWithClientPid:enableAudioPowerSpectrum:
setupAudioStreamsWithStreamConfiguration:streamGroupConfiguration:
setupAudioStreamsWithStreamConfigurations:mediaNegotiatorConfig:streamGroupConfiguration:
setupAudioTierPicker
setupAudioWithNegotiatedSettings:
setupBTEventHandler
setupBandwidthAllocationTableForMediaStreamConfigs:streamGroupID:entryType:
setupBandwidthConfigurationsWithArbiter:
setupBandwidthEstimationOptions:featureString:
setupBandwidthExtensionConfiguration:
setupBandwidthSettingsForMediaBlob:
setupBasebandCodecInfoMessages
setupBitrateNegotiation
setupBufferPool:width:height:
setupCNCodecWithClientDictionary:
setupCallbacksWithNWConnectionMonitor:
setupCalleeSIPStartTimeout:
setupCallingModeMessages
setupCameraStreamGroupWithStreamConfigs:negotiatorConfig:streamGroupConfiguration:
setupCannedAudioInjection
setupCap2G:
setupCap3G:
setupCap5G:
setupCapForBandwidthConfiguration:
setupCapLTE:
setupCapWifi:
setupCaptionsForMediaBlob:
setupCellTechChangeMessages
setupClientFormatWithConfiguration:
setupCodecBandwidthsWithClientBandwidthMask:
setupColorInfo
setupCompoundStreamIDsWithStreamIDs:
setupConfig
setupConnectionHealthMonitor
setupConnectionHealthMonitorMultiway
setupConnectionTimeoutTimerWithErrorCode:detailedCode:description:reason:
setupContectRect:withCaptureHeight:
setupDTLSDefaults
setupDTLSSecurity:connectionResult:completionHandler:
setupDTMFCodecWithClientDictionary:
setupDataFormatWithConfiguration:
setupDelegate:delegateQueue:
setupDelegateQueue:
setupDisconnectMessage
setupDynamicDuckingVolumeHandlerForAUIO:
setupEVSModesWithClientModeMask:
setupEmulatedDatagramChannelWithDestination:datagramChannel:
setupEmulatedNetwork
setupEncode:videoRules:
setupEncodeProperties:
setupEncoderBuffer
setupEncodingModeWithVideoStreamConfig:
setupEncryptionWithKey:confIndex:
setupFaceTimeSettingsForMediaBlob:isResponse:
setupFeatureListStringsForReceiverConfig:streamConfig:
setupFeedbackAnalyzerConfig
setupFormatWithConfiguration:
setupH264CellularRules
setupH264Rules
setupH264WifiRules
setupHEVCRules
setupHandoverCandidateChangeMessage
setupIDSConnectionForCallID:destination:socket:error:
setupIODevicesForAUIO:
setupInitialSecondaryRelayWithCallbackRelayFlag:callID:connectionId:
setupInput:queue:dispatchGroup:lastPresentationTime:
setupInputs
setupInternalRedundancyControllerWithStreamConfig:
setupInterruptThread
setupJBTargetSynchronizers
setupLinkConstrainsChangedMessages
setupLocalABTestSwitches
setupLocalAudioTestGroupSwitches
setupLocalDuplicationTestGroupSwitches
setupLocalNetworkTestGroupSwitches
setupLocalOnOffSwitches
setupLocalOnOffSwitchesFromMasterSwitch
setupLocalRateControlTestGroupSwitches
setupLocalSwitchesIndividually
setupLocalVideoTestGroupSwitches
setupLogPrefixWithConfig:
setupLoopbackWithConnectionType:
setupMacDecodingOnlyRules
setupMachineName
setupMaxBitrateMap
setupMediaQualityDegradedMessage
setupMediaStateUpdateMessage
setupMediaStates
setupMediaStream
setupMediaStreamConfig
setupMediaStreamGroupConfig:withNegotiationConfig:
setupMediaSyncForStreamGroup:
setupMediaTypeSettingsWithConfig:
setupMessaging
setupMockIDSDatagramChannelRequiresOptions:
setupModesWithClientModeMask:
setupMomentsForMediaBlob:
setupMomentsMessages
setupMultiwayABTesting
setupMultiwayAudioStreamsForMediaBlob:
setupMultiwayVideoReceiverConfig:forTransportStream:
setupMultiwayVideoReceiverStreamSwitchInfo:forTransportStream:
setupMultiwayVideoReceiverTemporalScalingConfig:forTransportStream:
setupMultiwayVideoStreamsForMediaBlob:
setupNATObserver
setupNWConnection:
setupNWConnectionWithID:
setupNWMonitor
setupNWMonitorNotificationHandler
setupNWMonitorPacketEventHandler
setupNegotiatedAudioPayloads:negotiatedAudioSettings:primaryPayloadPreference:
setupNegotiatedAudioResultsWithRemoteMediaBlob:
setupNegotiatedFaceTimeSettingsWithRemoteMediaBlob:
setupNegotiatedMomentsResultsWithRemoteMediaBlob:
setupNegotiatedResultsWithRemoteMediaBlob:
setupNegotiatedVideoSettingsWithRemoteMediaBlob:
setupNetwork
setupNetworkAddressesForMediaConfig:
setupNotificationQueue:
setupOneToOne
setupOneToOneABTesting
setupOneToOneAdaptiveLearning
setupOneToOneAudioStreamWithConfig:streamGroupID:
setupOneToOneEnabledMessages
setupOneToOneEncryptionInfoWithConfiguration:
setupOneToOneMediaControlInfoGeneratorsWithVersion:oneToOneConfig:videoEnabled:
setupOneToOneMediaQueue
setupOneToOneVideoReceiverDelegate
setupOneToOneVideoStreamDelegate
setupOneToOneVideoStreamWithConfig:streamGroupID:
setupPayloadTypes
setupPayloads
setupPayloadsWithGroupConfig:
setupPeerInfo:usingInviteData:isCaller:capabilities:
setupPendingSecondaryRelayWithNewPrimary:
setupPerfTimersWithMediaKeyIndex:perfTimerIndexToStart:
setupPeriodicReporting
setupPiPStateChangeMessage
setupPowerSpectrumMeter
setupPreferredIOSettings
setupPreferredInterfaceMessage
setupRTPForIDS
setupRTPWithIDSDestination:error:
setupRTPWithIPInfo:error:
setupRTPWithLocalParticipantInfo:error:
setupRTPWithSocketDictionary:error:
setupRTPWithSockets:error:
setupRTPWithTransportSetupInfo:error:
setupRTPWithTransportStreams
setupRateControlConfigMessage
setupRateControllerOneToOne
setupRateControllersMultiway
setupRedFactorsWithPList:audioStreamConfig:
setupRedWithRxPayload:txPayload:
setupRedundancyController
setupRedundancyControllerForMode:
setupRedundancySettings
setupRemoteQueueWithSenderQueue:
setupRemoteReceiverQueueWithSenderQueue:
setupReportingAgent
setupReportingAgent:
setupResizingSessionsWithVisibleRect:cameraStatusBit:
setupRules
setupSRTP
setupScreenWithNegotiatedSettings:
setupSecondaryRelayForCall:callerRequired:
setupSecureDataChannel
setupSecurityKeyHolderForStreamConfig:
setupServiceConnection
setupSframeCryptorsWithError:
setupSiriSupport
setupSourceTransport:
setupSpatialAudio
setupSpatialAudioWithCallID:
setupSpatialAudioWithMetadata:spatialMetadataEntryMap:
setupSpatialInfoForStreamGroupConfig:
setupStillImageWithTimestamp:transactionID:visibleRect:cameraStatusBit:imageType:
setupStreamConfigWithCodecs:streamConfig:codecConfigs:featureStringsDict:
setupStreamGroupMediaSync
setupStreamGroupStateFetchMessage
setupStreamGroupWithConfig:
setupStreamGroupWithStreamGroupConfig:negotiatorConfig:
setupStreamGroups
setupStreamGroupsWithConfig:negotiatorConfig:
setupStreamGroupsWithRemoteMediaBlob:
setupStreamInputsWithConfig:
setupStreams
setupStreamsWithConfig:
setupStreamsWithGroupConfig:
setupStreamsWithStreamInfos:
setupSymptomEnabledMessage
setupSymptomEnabledMessages
setupSystemAudioCapture
setupTextReceiverWithError:
setupTextTransmitter
setupTierPickerForConfig:
setupTransport
setupTransportSessionWithDestination:
setupUplinkBitrateCaps
setupVCMediaStreamRateAdaptationConfig:
setupVTPCallback
setupVTPSocket
setupVTPSocketWithFileDescriptor:
setupVideoEnabledMessages
setupVideoFormatWithConfiguration:
setupVideoMediaStreamsWithStreamGroupConfiguration:streamGroupConfig:streamGroupID:mediaType:
setupVideoParameterSupport:
setupVideoPauseMessages
setupVideoPausedMessages
setupVideoPriority
setupVideoReceiver:withTransmitterHandle:
setupVideoRedundancyMessages
setupVideoRuleCollection:
setupVideoRulesForPayload:transportType:encodingType:formatList:formatListCount:preferredFormat:supportsHighDef:
setupVideoStream
setupVideoStreamConfiguration:errorReason:
setupVideoStreamConfiguration:withStreamGroupStreamConfig:codecConfigs:multiwayConfig:groupID:
setupVideoStreamGroupStreams:streamGroupConfig:streamIDGenerator:
setupVideoStreamsWithStreamConfiguration:streamGroupConfiguration:
setupVideoStreamsWithStreamConfigurations:mediaNegotiatorConfig:streamGroupConfiguration:
setupVideoWithNegotiatedSettings:
setupWCMClient
setupWRMAlertUpdateMessage
setupWRMClient
setupWRMClientWithMetricsConfig:
setupWRMCoexMetricsMessage
setupWithSharedSecret:isCaller:error:
setupWriterWithMode:
setupWriterWithTransactionID:filePath:stillImageTime:visibleRect:cameraStatusBit:
setupXPCConnection
setupXPCQueue
sframeCipherSuite
sframeCryptor
shareLocalInterfacePreferenceWithPeerDuringActiveDuplicationForEvent:updateResult:
sharedEstimatedBandwidth
sharedEstimatedBandwidthUncapped
sharedIDSService
sharedInstance
sharedInstanceClientFacing
sharedInstanceRemoteFacing
sharedInstanceSafeViewClientFacing
sharedInstanceSafeViewRemoteFacing
sharedManager
sharedRemoteEstimatedBandwidth
sharedSystemAudioInstance
sharedVoiceChatInstance
sharedXPCConnection
sharingEnabled
shortTerm
shortValue
shouldAcceptDataFromSourceDestinationInfo:
shouldAddBackupEntry:referenceTable:referenceQualityIndices:
shouldAdjustForLastPauseCompleteTimestamp:
shouldAppendEntry:screenEncoderGroups:
shouldAppendSampleBuffer:RTPtimeStamp:mediaType:
shouldApplyRedAsBoolean
shouldBlockRampUpDueToLossEventThreshold
shouldBlockRampUpDueToNetworkUnstable
shouldBlockRampUpDueToRecentLossEvent
shouldCapStream:cappedBitrate:
shouldCleanupFiles
shouldCompoundListIgnoreStream:streamConfig:activeStreamIds:
shouldCreateMediaControlInfoGenerator
shouldCreateRedundancyController
shouldDisableLargeFrameRequestsWhenInitialRampUp
shouldDisplayNetworkQualityGraph
shouldDisplayNetworkQualityGraph_
shouldDisplayVideoInfoLayer
shouldDropCurrentPrimaryConnectionWithConnectionStats:
shouldDropPacketWithCurrentAQMBudget:
shouldDuplicatePacket:
shouldEnableBasebandAdaptationWithBasebandStatistics:previousBasebandRAT:
shouldEnableFaceZoom
shouldEnableMLEnhance
shouldEnablePacketRetransmissionForStreamGroupID:
shouldEnablePacketSizeLimitForPayload:
shouldEnableRateControlForStreamType:
shouldEncodeTopicKeyInMessage
shouldEnforceScreenFrameRateLimit
shouldFastRampUp
shouldFilterTierForPayloadConfig:bitRate:packetsPerBundle:mode:redNumPayloads:cellular:
shouldFinishWritingSampleBuffer:RTPtimeStamp:mediaType:
shouldForceWRMRecommendationUsingUserDefaults
shouldGenerateIDRWithStreamSchedule:
shouldKeepAllConnections
shouldNominateCandidatePair:interfaceMask:nominated:demote:connectionPriority:replaceOnly:
shouldNominateCandidatePairInternal:interfaceMask:nominated:demote:connectionPriority:replaceOnly:
shouldNominateConnection:
shouldNotifyDelegateDidStartBeforeAudioSetup
shouldOverrideGPUMuxing
shouldPrioritizeParticipantIDForSIPInvite
shouldProcessAtTime:
shouldRampDown
shouldRampDownDueToBaseband
shouldRampDownDueToConsecutiveLoss
shouldRampDownDueToLossEvent
shouldRampDownDueToLossThreshold
shouldRampDownDueToNOWRD
shouldRampDownDueToNOWRDAcc
shouldRampUp
shouldRampUpDueToBaseband
shouldRampUpDueToNWConnection
shouldReadPacket:
shouldRegisterMediaControlInfoGeneratorCallbacks
shouldRegisterReportingForStreamType:
shouldRegisterReportingPeriodicTask
shouldReinitializeCallWithDuration:forCallID:
shouldReplaceConnection:withConnection:
shouldReportNetworkInterfaceType
shouldRequestWRMNotificationWithDuplicationReason:isDuplicationEnabled:isLocalUsingCellular:atTime:
shouldResetAudioSessionWithProperties:
shouldResetAudioUnitWithProperties:
shouldResetRTPTimestampOnStart
shouldResumeAudio
shouldResumeVideo
shouldRunInProcessWithOptions:
shouldScheduleMediaQueue
shouldSendAudioForCallID:
shouldSendBlackFrame
shouldSendBlackFrame:
shouldSendBlackFrame:callID:
shouldSendBlackFrames:callID:
shouldSendFeedbackControllerReport
shouldSendPacketImmediatelyMM
shouldSetPause:onStream:
shouldSetupNWMonitor
shouldSetupStreamGroupWithID:
shouldSkipIDRScheduler
shouldStopReportingTimer
shouldSubscribeToStreamID:peerSubscribedStreams:
shouldSynchronizeWithSourceRTPTimestamps
shouldTimeoutPackets
shouldTransmitDTMFWithTimestamp:
shouldTryNATCheck
shouldUpdateCodecBandwidth:
shouldUpdateCodecBitrate:
shouldUpdateLastReceivedPacketTimestamp
shouldUpdateRemoteScreenAttributes
shouldUpdateServerBasedConnection:
shouldUseAACELDSBRForMode:
shouldUseCookieForPayload:
shouldUseMinMicBitrate:streamToken:remainderBitrate:
shouldUseMultipleStreamGroupAlgorithm
shouldUseNWConnectionBackingSocket
shouldUseRandomRTPTimestampForMode:
shouldUseRandomRTPTimestampWithType:
shouldUseRepairBitrateForEntry:isRedundancyEnabled:isRedundancyEnabledFor720Stream:
shouldUseServerBasedConnection:isEndToEnd:
showDecodedFrame:atTime:
shutdownSocket
shutdownVoiceChatFromRemoteSIPSignal:withReason:
signal
signalStrengthBars
signalStrengthDisplayBars
signalStrengthMaxDisplayBars
signalUnderlyingFileDescriptor
signalingExcessiveCellularRxBytes
signalingExcessiveCellularTxBytes
simultaneousTalkers
sinkCount
sinkIO
sipCallback:callID:msgIn:msgOut:optional:confIndex:
sipConnectThreadProc:
sipConnectWithError:
sipRefCount
sipState
size
sizeForVideoResolution:
skeState
skipBandWidthCheckForCodecRateModes:supportedBitrates:
sleepForTime:
slotForMode:
slotForStreamToken:videoMode:
sockFD
socket
socketWithIPAddress:srcPort:error:
socketWithIPAddress:srcPort:shouldConnect:error:
sortMediaEntries
sortMediaEntriesGroupIds:
sortUsingComparator:
sortUsingFunction:context:
sortUsingSelector:
sortedArrayUsingSelector:
sortedEntries
sourceDestinationInfo:isSourceOnCellular:isSourceIPv6:
sourceExistsForStreamToken:
sourceFrameRateDidChange:
sourceIO
sourceSampleRate
sourceToken
sourceType
spatialAudioDisabled
spatialAudioSourceID
spatialAudioSourceIDForMediaType:
spatialChannelIndex:spatialAudioSourceID:forMediaType:
spatialContext
spatialMetadataEntryForMediaType:
spatialMetadataEntryMap
spatialToken
speakerBuffer
speakerCallbackContext
speakerContext
speakerPhoneEnabled
speakerTimestamp
speakingArray
speakingDelegate
splitPacket:packetArray:
srtpKeyBytes
srtpLock
ssrc
ssrcForStreamGroup:localConfig:ssrc:
standardUserDefaults
start
startAFRC:
startAUIOWithProperties:
startAWDStats
startActiveProbingOnLinks:
startActiveProbingWithOptions:
startAllConnections
startAudioDump
startAudioIO
startAudioIOWithCompletionHandler:
startAudioSession
startAudioSessionWithCompletionHandler:
startAudioSessionWithError:
startAudioSessionWithProperties:
startAudioWithCompletionHandler:
startBagLoad
startCameraStreamGroups
startCapture
startChangeListener
startClient:
startClientIO
startCompletionHandler
startConnectionCheckForCallID:remoteConnectionDataBlob:relayDictionary:iceTimeout:securityIdentity:skeState:usedRelay:
startConnectionWithBlob:useRelay:isInitialRelay:error:
startConnectionWithCallID:inviteData:isCaller:capabilities:destination:error:
startConnectionWithCallID:oldCallID:usingInviteData:isCaller:relayResponseDict:didOriginateRelayRequest:capabilities:error:
startConnectionWithCallID:oldCallID:usingInviteData:isCaller:relayResponseDict:didOriginateRelayRequest:capabilities:idsSocket:destination:error:
startConnectionWithCallID:oldCallID:usingInviteData:isCaller:relayResponseDict:didOriginateRelayRequest:capabilities:idsSocket:error:
startConnectionWithCallID:usingInviteData:isCaller:relayResponseDict:didOriginateRelayRequest:capabilities:error:
startConnectionWithCallID:usingInviteData:isCaller:relayResponseDict:didOriginateRelayRequest:capabilities:idsSocket:error:
startConnectionWithParticipantID:callID:oldCallID:usingInviteData:isCaller:relayResponseDict:didOriginateRelayRequest:capabilities:idsSocket:destination:error:
startConnectionWithParticipantID:callID:usingInviteData:isCaller:capabilities:idsSocket:destination:error:
startConnectionWithParticipantID:callID:usingInviteData:isCaller:relayResponseDict:didOriginateRelayRequest:capabilities:idsSocket:destination:error:
startContinuousDTMFWithDigit:volume:
startDeallocTimer
startDeallocTimerWithTimeout:
startDetectRemoteAudioLowPowerTime
startDynamicDucker
startFeedbackSource
startHandshakeWithMessage:topic:withOptions:
startHeartbeat
startHostTime
startInputForClient:error:
startInterruptThread
startLocalSessionStatsReceive
startLocalSessionStatsSend
startLocalSessionStatsUpdate
startMKMRecoveryForParticipantIDs:
startMediaQueue:
startMediaStreams
startMediaStreams:
startMediaTransportsWithError:
startMediaWithPreNegotiatedSettings:
startMessaging
startMicStreamGroups
startMonitoringFileDescriptor:forConnection:
startMonitoringMotionActivity
startMultiwayStreams
startNetworkQualityUpdateTimer
startNetworkReceiveThread
startOnDemand
startOneToOne
startOneToOneStreams
startOutputForClient:error:
startPausedHeartbeat
startPeriodicHealthPrint
startPreview
startPreviewUnpausing:
startRTCPSendHeartbeat
startRTPTimeStamp
startRateControl:
startRateControllerOneToOne
startRateControllersMultiwayFromOneToOne:
startRecording:transactionID:timestamp:completionHandler:
startRelay
startRelayIO:
startRelayIO:otherRelayIO:
startRelayThreadWithError:
startRemoteIO
startReportingForOneToOneEnabled:
startRoutingChangeListener
startSIPWithPacketMultiplexMode:transportType:
startScreenGroup
startSessionAtSourceTime:
startSessionMessaging
startStreamGroups
startStreamGroups:
startSynchronization:
startSynchronizeWithStream:
startSystemAudioCapture
startTerminationTimer:terminationType:
startTime
startTimeoutHeartbeat
startTimeoutTimer
startTimers
startTimingForKey:
startVCRC:
startVCRCWithStreamConfig:
startVTP
startVideo
startVideo:error:
startVideoReceive:
startVideoSend:error:
startVoiceActivityDetection
startWCMClient
startWRM
startWRMClientWithMode:metricsConfig:
startWithCompletionHandler:
startWithMetricsConfig:
startWriting
startWritingAtTime:
state
stateChange:
stateChangeTo:
stateEnter
stateExit
stateFrozen:
stateIdleWithAudioUnitProperties:sessionProperties:client:newState:
stateIdleWithControllerSettings:client:newState:
stateInterruptedShouldGoToRunning:
stateInterruptedShouldGoToStarted:
stateInterruptedWithAudioUnitProperties:sessionProperties:client:newState:
stateLock
stateMessageDictionary
statePrepareWithControllerSettings:client:newState:
stateQueue
stateRunning:
stateRunningShouldTransitionToInterrupted:
stateRunningShouldTransitionToStarted:
stateRunningToSessionStarted
stateRunningWithAudioUnitProperties:sessionProperties:client:newState:
stateRunningWithControllerSettings:client:newState:
stateSessionStartedWithAudioUnitProperties:sessionProperties:client:newState:
stateStartingWithControllerSettings:client:newState:
stateTransitionForMediaType:mediaState:previousState:didSucceed:error:
stateTransitionInterruptedToRunning
stateTransitionInterruptedToStarted
stateTransitionRunningToInterrupted
statisticsCollector
statisticsID
statsReceiveStatsPayload
statsRecorder
statsReportingInterval
status
stillWantsToRelay
stop
stop:
stopAUIO
stopActiveProbingOnLinks:resetStats:
stopActiveProbingWithOptions:
stopAllCalls:
stopAllConnections
stopAllParticipants
stopAudioDump
stopAudioIO
stopAudioIO:
stopAudioIOCompletion
stopAudioIOWithCompletionHandler:
stopAudioSession
stopAudioSessionWithError:
stopAudioStreams
stopCallID:
stopCallID:didRemoteCancel:error:
stopCapture
stopChangeListener
stopClient:
stopClientIO
stopContinuousDTMF
stopDTMFEventAtTimestamp:withSampleRate:
stopDynamicDucker
stopFeedbackSource
stopHeartbeat
stopInternal
stopInternalWithHandler:
stopInterruptThread
stopListeningForNotifications
stopLocalSessionStatsUpdate
stopLoopback
stopLoopbackProc:
stopMediaQueueOneToOne
stopMediaStreams
stopMediaStreams:
stopMediaTransports
stopMessaging
stopMicStreamGroups
stopMonitoringFileDescriptor:
stopMonitoringMotionActivity
stopMultiwayStreams
stopNetworkQualityUpdateTimer
stopNetworkReceiveThread
stopOneToOneStreams
stopPausedHeartbeat
stopPreview
stopRTCPSendHeartbeat
stopRateControl:
stopRateControllerOneToOne
stopRelay
stopRelayIO:otherRelayIO:
stopRemoteDuplicationAndUpdateResult:updateAlertState:
stopRemoteIO
stopRoutingChangeListener
stopSIPWithTransportType:
stopSecureControlChannel:
stopSendDTMFEvent
stopSessionMessaging
stopStream:
stopStreamGroups
stopStreamGroups:
stopSynchronization
stopSystemAudioCapture
stopTerminationTimer
stopThread
stopTimeoutHeartbeat
stopTimeoutTimer
stopTimers
stopTimingForKey:
stopVCRC
stopVTPReceiveThread
stopVideo
stopVideo:error:
stopVideoByVCRateControl
stopVideoCaptureClient
stopVideoReceive:isPausing:
stopVideoSend:error:
stopVoiceActivityDetection
stopWCMClient
stopWRMClient
stopWithCompletionHandler:
stopWithCompletionHandlerInternal:
stopWithError:
stopWithError:didRemoteCancel:
store:numSamples:timestamp:
storeBagBitrateForKey:
storeDelegate:delegateQueue:
storeHardwareSettingsForAllOperatingModes
storeMediaState:forMediaType:
storePixelFormatsInBitMap:
storeSpatialAudioMetadataEntry:forMediaType:
stream
stream:addAudioSampleBuffer:timestamp:
stream:addVideoSampleBuffer:cameraStatusBits:timestamp:
stream:didGetLastDecodedFrame:
stream:didPause:error:
stream:didReceiveDTMFEventWithDigit:
stream:didReceiveRTCPPackets:
stream:didResume:error:
stream:didStart:error:
stream:didStartSynchronizer:error:
stream:didUpdateVideoConfiguration:error:
stream:downlinkQualityDidChange:
stream:updateInputFrequencyLevel:
stream:updateOutputFrequencyLevel:
stream:uplinkQualityDidChange:
streamArray
streamConfig
streamConfigWithPayloadConfigs:payloadConfigSampleRates:streamGroupID:
streamConfigs
streamCount
streamDelegate
streamDescription
streamDescriptionForMediaStreamConfig:
streamDidInterruptionBegin:
streamDidInterruptionEnd:
streamDidRTCPTimeOut:
streamDidRTPTimeOut:
streamDidServerDie:
streamDidStop:
streamDirectionWithClientDirection:
streamFormat
streamGroup
streamGroup:didChangeMediaPriority:
streamGroup:didChangePlayoutRTPTime:
streamGroup:didChangeState:
streamGroup:didRemoteEnableChange:
streamGroup:didRemotePauseChange:
streamGroup:didRequestRedundancy:
streamGroup:didSuspendStreams:
streamGroup:didSwitchFromStreamID:toStreamID:
streamGroup:remoteMediaStalled:duration:
streamGroup:requestKeyFrameGenerationWithStreamID:firType:
streamGroupConfigForMode:
streamGroupConfigWithGroupID:mediaType:subtype:syncGroupID:cipherSuite:
streamGroupConfigs
streamGroupConfigurations
streamGroupFromStreamGroupID:
streamGroupID
streamGroupIDFromStreamGroup:
streamGroupIDs
streamGroupIDsFromParticipantData:
streamGroupIDsWithMediaBlob:
streamGroupNegotiationVideoConfigForStreamGroup:streamConfig:mediaConfig:
streamGroupStateFromStreamGroupID:
streamGroupWithID:
streamGroups
streamGroupsAtIndex:
streamGroupsCount
streamGroupsForIDs:
streamGroupsForMediaType:
streamGroupsType
streamID
streamIDToMediaStreamMap
streamIDs
streamIDsCell
streamIDsForStreamToken:
streamIDsForStreamToken:targetBitrate:
streamIDsForStreamToken:targetBitrateCap:
streamIDsFromTransport
streamIDsIfStreamTokenIsEnabled:
streamIDsIfStreamTokenIsPresent:
streamIDsWifi
streamIds
streamIndex
streamIndex:forStreamGroupID:qualityIndex:isFallbackStream:
streamInputConfigurations
streamInputID
streamInputWithID:
streamOutput
streamOutput:didDegrade:
streamOutput:didPause:
streamOutput:didReceiveSampleBuffer:
streamOutput:didStall:
streamOutput:didSuspend:
streamOutputDelegate
streamOutputDidBecomeInvalid:
streamOutputServerDidDie:
streamPayloadFromProviderConfig:
streamSSRCForStreamGroupID:streamIndex:
streamStateToString:
streamToken
streamToken:didDisableCaptions:error:
streamToken:didEnableCaptions:error:
streamToken:didEndProcessingRequest:stillImageURL:movieURL:error:
streamToken:didFinishRequest:didSucceed:
streamToken:didStartCaptioningWithReason:
streamToken:didStartProcessingRequest:error:
streamToken:didStopCaptioningWithReason:
streamToken:didUpdateCapabilities:
streamToken:didUpdateCaptions:
streamToken:enabled:
streamTokenDidCleanupAllRequests:
streamTokenForStreamGroupID:
streamTokenFromClientContext:
streamTokens
streamsCount
streamsType
string
stringByAppendingFormat:
stringByAppendingString:
stringByDeletingLastPathComponent
stringByPaddingToLength:withString:startingAtIndex:
stringByReplacingOccurrencesOfString:withString:
stringByReplacingOccurrencesOfString:withString:options:range:
stringByTrimmingCharactersInSet:
stringForCheckpoint
stringToMediaType:
stringValue
stringWithCString:encoding:
stringWithCharacters:length:
stringWithFormat:
stringWithString:
stringWithUTF8String:
strong
strongDelegate
subLayerForMode:
subLayerRefForMode:
subStreamConfigs
subarrayWithRange:
subdataWithRange:
sublayers
submitStatisticsCollectorVideoStallUpdateWithTime:
submitStatisticsCollectorVideoStallUpdateWithType:currentTime:stallDuration:idsParticipantID:
subpathsOfDirectoryAtPath:error:
subscribedTo
subscriptionSlot
substring
substringFromIndex:
substringRange
substringToIndex:
substringWithRange:
suggestedLinkTypeCombo
superclass
superlayer
supportDuplication
supportFlags
supportSDPCompression
supportVCPDecoderHEVC
supportVCPEncoderHEVC
supportedAudioPayloads
supportedAudioRules
supportedBandwidths
supportedBitrateRules
supportedBitrates
supportedCodecModesForBandwidth:payload:
supportedCodecsWithVideoCodecs:imageTypes:
supportedImageTypes
supportedModes
supportedNumRedundantPayload
supportedPayloads
supportedPixelFormats
supportedTransportTypes
supportedVideoCodecs
supportedVideoFormats
supportedVideoPayloads
supportedVideoRulesForBitrate:transportType:payload:encodingType:
supportedVideoRulesSizesForBitrate:transportType:payload:encodingType:
supportedVideoRulesSyncForTransportType:payload:encodingType:
supportedVideoSizesForKey:
supportiRATRecommendation
supports1080pDecoding
supports1080pEncoding
supportsAVFCapture
supportsAdaptation
supportsCodecBandwidthUpdate
supportsCodecBandwidthUpdateForCodecType:
supportsCodecRateModesForCodecType:
supportsDedicatedSystemAudioStream
supportsDynamicContentsRectWithAspectPreservation
supportsDynamicMaxBitrate
supportsEVSCodec
supportsGFTSwitchToOneToOne
supportsHEIFEncoding
supportsHEVCDecoding
supportsHEVCEncoding
supportsMultiway720pStream
supportsNegotiatedCoordinateSystem
supportsOneToOneMode
supportsPortraitCameraCapture
supportsRedAudio
supportsSKEOptimization
supportsSecureCoding
supportsSpecialAACBundle
suspendStreamsOnOneToOneModeSwitch
swapScreenStreamGroupSyncSourceWithState:
swapSendAndReceiveRules
switchFromMultiwayToOneToOne
switchFromOneToOneToMultiway
switches
syncGroupID
syncSource
syncSourceDelegate
synchronizationDelegate
synchronizationSourceStreamToken
synchronizationTimeOffset
synchronize
synchronizeParticipantGenerationCounter:
systemAudioCaptureSession
systemAudioConfiguration
systemAudioGroup
tableEntriesForStreamToken:
tableEntriesForStreamToken:targetBitrate:remainingBitrate:isLastEntryForStreamToken:
tail
takeSnapshotForTask:
talkTime
talkingPeersLimit
targetBitrate
targetBitrateCap
targetBitrateChangeCounter
targetBitrateIsAudioOnly
targetMediaBitrate
targetQueue
targetStreamID
taskIsComplete
tearDown
tearDownConnectionWithTerminateMessage:
tearDownRemoteQueue
tearDownRemoteQueues
teardownDecodeSession:
telephonyInterface:anbrActivationUpdate:
telephonyInterface:anbrRecommendation:forDirection:
telephonyInterface:vocoderInfoChangedToType:sampleRate:
temporalScalingEnabled
terminateConnection
terminatePowerSpectrumMeter:
terminateProcess:terminateSource:agent:
terminateSession
terminateStreamInputWithXPCArguments:result:error:
terminationHandler
text
textStreamWithStreamToken:
textString:
textStringLength:
thermalLevelDidChange:
threadSafeCleanupSession:
throwNotSupportedExceptionForMethod:
tierForAudioBitrate:withRedNumPayloads:
tierForNetworkBitrate:withLegacyDuplication:
tierForNetworkBitrate:withRedNumPayloads:
tierNetworkBitrate
tierPickerModeToAVConferenceOperatingMode:
tilesPerFrame
tilesPerFrame:
tilesPerFrame:hdrMode:
tilesPerVideoFrame
tilesPerVideoFrame:
tilesPerVideoFrame:hdrMode:
time
timeIntervalSinceReferenceDate
timeLastCheckedNetworkConditions
timeLastKnowGoodNetworkPLR
timeLastKnowGoodNetworkRTT
timeLastPLR5Secs
timeSinceLastReportedNoPackets
timeStampUpdateCounter
timeoutHeartbeat
timeoutUnfinishedConnection
timerWithTimeInterval:target:selector:userInfo:repeats:
timestamp
timestampQueue
timingForKey:
tlsRecord
toBeChangedPrimaryConnection
toStringWithVideoEnabled:
token
tokenData
tokenForDeviceName:sourceType:
tokens
toneInjectionEnabled
topic
topicKey
topics
totalLargeFrameWaste
totalPacketReceived
tpHandle
trafficClassForStreamType:
transactionCache
transactionID
transactions
translateRateControlDataWithFeedbackMessage:
translateTimestampFromMicro:
translateVocoderTypeToCoreAudioType:
transmitEncodedVideoFrame:cameraStatusBits:
transmitEncodedVideoFrame:size:timestamp:hostTime:cameraStatusBits:
transmitFrameInGroups:numOfPackets:timestamp:hostTime:cameraStatusBits:
transmitROC
transmitVideoPackets:packetSizes:startPacket:packetCount:lastGroup:timestamp:hostTime:cameraStatusBits:bytesSent:
transmitterSframeCryptor
transport
transportArray
transportAsString:
transportDelegate
transportMetadata
transportProtocolType
transportSession
transportSession:cancelRelayRequest:
transportSession:connectionSetupDataDidChange:
transportSession:initiateRelayRequest:
transportSession:sendRelayResponse:
transportSessionID
transportType
triggerInterfaceChange
triggerRateControlWithLocalSessionStats:time:forUplink:forDownlink:fromVCRCExternalThread:
tryNATCheckWithDelay:
tryrdlock
txCodecFeatureListString
txCodecFeatureListStrings
txCodecType
txInitialBitrate
txIntervalMin
txMaxBitrate
txMinBitrate
txPayloadMap
txPayloadType
txRedPayloadType
type
typeIdentifierForImageType:
u1Config
u8Version
uiStateWithAVCUIState:
unarchiveMediaStatesWithData:
unarchivedObjectOfClass:fromData:error:
unarchivedObjectOfClasses:fromData:error:
unbindChannel
underlyingFileDescriptor
unionSet:
unloadRelay
unlock
unmuteWithError:
unregisterAllBTNotificationHandlers
unregisterAllStatisticsChangeHandlers
unregisterAllStreams
unregisterAudioPowerSpectrumSourceForStreamToken:
unregisterAudioSessionId:
unregisterAudioTapForStreamToken:
unregisterBTNotificationHandler:
unregisterBlocksForDelegateNotifications
unregisterBlocksForService
unregisterBluetoothImmediateNotifications
unregisterCaptionsSourceWithStreamToken:
unregisterClientIO:controllerIO:
unregisterCodecRateModeChangeNotifications
unregisterDarwinNotification:
unregisterForMutedTalkerNotificationWithAUIO:
unregisterForNotifications
unregisterFromMutedTalkerNotfications
unregisterFromMutedTalkerNotification
unregisterFromMutedTalkerNotifications
unregisterListenerWithStreamToken:powerSpectrumMeter:error:
unregisterMediaControlInfoGenerator
unregisterMediaStreamNotificationDelegate
unregisterMomentsMessengerWithStreamToken:
unregisterPacketCallback
unregisterPowerSpectrumForCellularTapType:error:
unregisterPowerSpectrumForStreamToken:
unregisterQoSReportingSourceForToken:
unregisterRemoteParticipantFromSession:
unregisterReportingTask
unregisterStatistics
unregisterStatisticsChangeHandlerWithType:handlerIndex:
unregisterStatisticsHandlers
unregisterVideoSink:withCaptureSource:
unregisterWRMCallback
unserialize:
unserializeNegotiationData:
unsignedCharValue
unsignedIntValue
unsignedIntegerValue
unsignedLongLongValue
unsignedLongValue
unsignedShortValue
updateActiveMediaStreamIDs:withTargetBitrate:mediaBitrates:rateChangeCounter:
updateActiveStateForStreamGroup:
updateActiveStatus
updateActiveStreamsCount:
updateActiveVoiceOnly
updateActiveVoiceOnly:
updateAllBitrateCapsForConnection:
updateAllBitrateCapsForConnectionInternal:
updateAndHandleVideoMediaStall:isOneToOneStream:
updateAudioBuffer:WithSample:timestamp:
updateAudioInjectConfig:
updateAudioPriorityWithSampleBuffer:
updateAudioSpectrumState
updateAudioStallInMediaSuggestion:isSuggestionNeeded:atTime:
updateAudioTimestampsForSession:withNewSampleTime:hostTime:numSamples:
updateAudioTxBitrate
updateAudioTxRate
updateAverageTargetBitrate:interval:
updateBandwidthAllocator:activeStream:peerSubscribedStreams:streamGroup:
updateBasebandSuggestionWithStatistics:
updateBufferWithSample:timestamp:
updateBurstyLoss:
updateCachedConnectionState
updateCameraStatusBits:
updateCameraU1Config:forNegotiationBlob:localSupportedVideoPayloads:
updateCameraU1Config:localConfig:
updateCapabilities:
updateCapabilities:forCallID:
updateCapabilities:forSession:
updateCellularExcessiveBytesWithSourceDestinationInfo:bytes:isMediaData:isOutgoing:
updateCellularMTU:
updateCellularTech:forLocalInterface:
updateClient:direction:
updateCodecPayloadAndBitrateForStartEvent:bitrate:
updateCommonNegotiatedVideoSettings:localU1Config:remoteU1Config:
updateConfig:forMode:
updateConfiguration:
updateConfigurationWithDeviceRole:
updateCongestionStatusWhenRampDown:
updateCongestionStatusWhenRampUp
updateConnectionForDuplication
updateConnectionForDuplicationForDuplicationReason:duplicationEnhancementEnabled:preferredLocalInterfaceForDuplication:preferredRemoteInterfaceForDuplication:connectionArray:
updateConnectionHealthWithVCStatisticsMessage:
updateConnectionSelectionPolicyWithPreferE2E:
updateConnectionSelectionPolicyWithPreferRelayOverP2P:preferNonVPN:preferE2E:
updateConnectionStatsWithIndicatorNoPacket:
updateConnectionStatsWithIndicatorNone:
updateConnectionStatsWithIndicatorOnlyPrimaryNoPacket:
updateConnectionStatsWithIndicatorPrimaryImproved:
updateCurrentInputDevice:
updateCurrentOutputDevice:
updateDefaultPayloadConfigsWithConfig:rtpSampleRates:
updateDemuxPacketStatsWithPacketFilterPacketType:
updateDeviceRole:
updateDownlinkBandwithAllocatorClientConfigurations:
updateDuplicationEnhancementSwitches
updateDuplicationStateForAlertStateUpdatedEvent:updateResult:
updateDuplicationStateForConnectionArrayUpdatedEvent:updateResult:
updateDuplicationStateForLocalWRMSuggestingCellularEvent:updateResult:
updateDuplicationStateForLocalWRMSuggestingWiFiEvent:updateResult:
updateDuplicationStateForMediaHealthRecovered:updateResult:
updateDuplicationStateForMissingPacketsUpdateEvent:updateResult:
updateDuplicationStateForReceivingPacketsUpdateEvent:updateResult:
updateDuplicationStateForRemoteDuplicationChanged:updateResult:updateAlertState:
updateDuplicationStateForRemoteWRMSuggestingWiFiEvent:updateResult:
updateDuplicationStateForTurnOffDuplicationForHandoverEvent:updateResult:
updateDuplicationStateForTurnOnDuplicationForHandoverEvent:updateResult:
updateDuplicationStateWithAlertInfo:
updateDuplicationStateWithConnectionOperation:isLocalOnWiFi:isRemoteOnWiFi:
updateDuplicationStateWithEventType:
updateEnabledState
updateEncryption:derivedSSRC:
updateEncryptionInformationWithConfig:
updateEncryptionWithEncryptionMaterial:
updateEncryptionWithKeyMaterial:
updateGKSConnectivitySettings
updateHighestAudioBitrates:bitrate:
updateICERoleForCallID:role:remoteCallID:sessionID:
updateInitialBitrateFromDefaultWithAlgorithmConfig:
updateInterfaceList:shouldFilterCellInterface:isUpdateNeeded:
updateInternalStatistics:
updateInternalStats
updateInternalStatus
updateLargeFrameSizeWithBandwidth:
updateLastEmergencyBasebandRampDownTimeWithTierIndex:
updateLastGeneratedKeyMaterial
updateLastReceivedAudioTime
updateLastReceivedPacket:packetType:
updateLastReceivedPacketWithTimestamp:packetType:
updateLegacyStates
updateLinkPreferSuggestion:
updateLinkPreferenceOrder
updateLocalStreamConfiguration
updateLocalVideoCaptureFrameRate
updateLossEventBandwidthLimit:
updateMaxAllowedBitratePerConnection:connectionType:negotiatedSettings:
updateMaxConnectionMTU:
updateMaxPktLength
updateMediaDegradedHistoryWithCurrentAudioErasure:idsParticipantID:
updateMediaDegradedHistoryWithCurrentVideoStallDuration:idsParticipantID:
updateMediaDegradedHistoryWithValue:idsParticipantID:
updateMediaHealthStats:idsParticipantID:
updateMediaSettingsWithConfig:
updateMediaState:forStreamGroup:
updateMediaState:forStreamGroups:
updateMediaStatesWithConfig:
updateMediaStreamsForStreamGroup:uplinkBitrateCap:rateChangeCounter:
updateMeter:forParticipant:atIndex:
updateMeters:
updateMetricsConfig:
updateMinMaxSinceTime:
updateMomentsCapabillities:imageType:videoCodec:
updateMultiwayBandwithAllocationTable:mediaType:streamGroupID:encoderGroupID:minNetworkBitrate:maxNetworkBitrate:
updateMultiwayRateControllerWithActiveConnection:isScreenEnabled:isLocal:
updateNatTypeCache:
updateNatTypeCache_CachePlistScheme:
updateNatTypeCache_OSXGamedScheme:
updateNegotiatedSettings:
updateNegotiatedSettingsOnetoOne:
updateNetworkCheckHint:
updateNetworkFeedbackControllerReport:
updateNetworkQualityGraph
updateNumber
updateOneToOneAudioPositionalInfo:
updateOneToOneBitrateCapsForConnection:
updateOneToOneModeEnabled:
updateOneToOneRateControllerForVideoEnabled:
updateOneToOneRateControllerForVideoEnabled:screenEnabled:
updateOneToOneVideoStreamCustomResolution:videoSettings:
updateOverlayWithPixelBuffer:
updatePacketCountAndByteCountWithIndex:packetSize:numOfStreamId:isPriorityIncluded:isOutgoing:
updatePacketLossRate:time:
updateParametersForRampDownSuppression
updateParentStreamIDForGroupConfig:
updateParticipantConfigurations:
updateParticipantGenerationCounter:
updateParticipantWindowState
updatePayloadConfigsWithStreamGroupConfig:rtpSampleRates:
updatePayloadHistory:timestamp:payloadType:payload:payloadLength:
updatePayloadSpecsForConfig:defaultConfig:
updatePayloadSpecsForConfig:defaultConfig:payloadConfigs:
updatePayloadTypesWithAudioConfigs:
updatePayloadTypesWithVideoConfigs:
updatePeerSubscribedStreams:containsRepairStreams:
updatePeerSubscribedStreams:streamGroup:
updatePositionalInfo:shouldReapply:
updatePresentationInfo:
updatePrimaryWithConnection:
updateProbingLargeFrameSizeCap
updateProbingResult:initialResult:
updateProbingResults:
updateQoS:
updateQoSReport:toClientsWithToken:
updateQualificationParameters
updateRTPReceiveWithTimestamp:sampleRate:time:
updateRTPReceiveWithTimestamp:sampleRate:time:size:endOfFrame:
updateRateAdaptationWithNetworkNotification:
updateRateControlInfoWithStatisticsMessage:
updateRateControlWithNetworkNotification:
updateRatiosForHistory:withIndex:
updateRealTimeStats
updateReceiveStats
updateReceivedBytes:isOnCell:isIPv6:
updateReceivedExcessiveBytes:isMediaData:isIPv6:
updateReceivedPacketsAndBytesWithSourceDestinationInfo:bytesReceived:isMediaData:shouldCountPacket:numOfStreamId:isPriorityIncluded:
updateRecentTierWindow
updateRedundancyPercentage
updateRedundancyPercentageWithPLRThresholds:
updateRedundancyStrategyWithNetworkStatistics:
updateRemoteAddressWithConfig:error:
updateRemoteCodecInfo:
updateRemoteCodecInfoCallback
updateRemoteCodecInfoContext
updateRemoteMediaStallState:
updateRemoteMediaStallStateReporting:
updateRemoteScreenAttributes:
updateRemoteSessionStats:
updateScreenCaptureWithConfig:
updateScreenRuleCollections:size:
updateScreenShareWith:pid:
updateScreenStreamConfigurationWithStreamGroupResult:multiwayConfig:screenStreamConfig:
updateScreenU1Config:localConfig:
updateScreenU1ConfigWithStreamGroupConfig:forNegotiationBlob:localSupportedVideoPayloads:
updateSecondaryWithConnection:
updateSelectedConnectionsForGroupType:connectionAdded:
updateSelectedConnectionsForGroupType:connectionRemoved:connectionArray:
updateSelectedMediaEntriesForClientWithUUID:
updateSendBitrateAndCheckIdlePeriod:instantBitrate:
updateSendSampleRTPTimestamp:sampleRate:systemTime:
updateSendStatisticsWithTimestamp:frameSize:packetsInFrame:
updateSequenceNumber:
updateSessionStats:
updateSessionStats:connection:totalPacketSent:totalPacketReceived:
updateSettingsAtTime:
updateSettingsAtTime:impairments:
updateShareProfileForInterfaceType:
updateShouldEnableFaceZoom
updateShouldEnableMLEnhance
updateSourcePlayoutTimestamp:
updateSpeaking:timeStamp:
updateStateWithAudioIOClient:
updateStateWithClient:
updateStateWithCurrentConnection:asPrimary:interfaceMask:demote:replaceOnly:
updateStatistics:
updateStatsHistory
updateStreamConfig:forPayload:networkPayload:groupID:
updateStreamConfig:withMetadata:
updateStreamGroupU1Config:forGroupId:withNegotiationBlob:localSupportedVideoPayloads:
updateStreamGroups:
updateStreamIDCompoundingWithBlock:activeStreamIds:
updateSupportedAudioRules:
updateSuspendedState
updateTargetBitrateOneToOne:rateChangeCounter:
updateThermalLevel:
updateThrottleRate
updateTotalQueueDepth:
updateTransactionIDWithKeyMaterial:
updateTransmittedBytes:isOnCell:isIPv6:
updateTransmittedExcessiveBytes:isMediaData:isIPv6:
updateTransmittedPacketsAndBytesWithSourceDestinationInfo:bytesSent:isMediaData:shouldCountPacket:numOfStreamId:isPriorityIncluded:
updateTransportStream:
updateUplinkBitrateCapCell:activeStreamIDs:
updateUplinkBitrateCapWifi:activeStreamIDs:
updateUplinkStreamsForPeerSubscribedStreams:
updateUplinkStreamsForPeerSubscribedStreams:streamGroup:uplinkBandwidthAllocator:
updateUplinkTargetBitrate:rateChangeCounter:
updateUplinkTargetBitrateForStreamGroups
updateVCMomentsMode
updateVCRateControlHistory
updateVCRateControlWRMMetrics:
updateVideoBuffer:withPresentationTime:sampleBufferCopy:cameraStatusBits:timestamp:
updateVideoConfig:
updateVideoConfiguration:
updateVideoExpected
updateVideoMultiwayConfig:withStreamGroupStreamConfig:
updateVideoPaused:
updateVideoPriority:
updateVideoQualityStatusWithTime:isRemote:
updateVideoReceiver:
updateVideoStall:withStallDuration:
updateVideoStallStatus:
updateWRMNotificationRequestTime:
updateWindowState:isLocal:windowRect:
updateWithClientDictionary:
updateWithCurrentFramerate:bitrate:time:
updateWithLastDecodedFrameTime:time:
updateWithRemoteMediaHealthDuplication:
updatedConnectedPeers:
updatedMutedPeers:forParticipantID:
uplinkAudioBitrateCapOneToOne
uplinkAudioOnlyBitrateCapOneToOne:
uplinkBitrateCap
uplinkBitrateCapCell
uplinkBitrateCapForConnection:
uplinkBitrateCapOneToOne
uplinkBitrateCapOneToOne:
uplinkBitrateCapWifi
uplinkClient
uplinkVideoStreamController
uplinkVideoStreamControllerForMode:
upstreamBandwidth
usageMode
useActiveProbingSenderLog
useAudioPayload:withBitrate:
useAudioTier:
useCellPrimayInterface:
useChannelDataFormat
useCompressedConnectionData
useConnectionAsPrimary:
useControlByte
useExternalIO
useFakeLargeFrameMode
useInBandFEC
useInBandFec
useMediaDrivenDuplication
useNewBWEMode
useNewPLCalc
usePayloadSpecWithGroupID:qualityIndexForPayloadSpecIndex:defaultPayloadSpecsForQualityIndex:
usePreNegotiation
useRateControl
useSBR
useServer
useSoftFramerateSwitching
useUEP
useUEPForVideoConfig:
useViceroyBlobFormat
useVideoJitterForVideoPlayout
useWiFiTiers
useWifiTiers
userAgent
userInfo
usesInitialFECImplementation
usesPayloadConfigsWithGroupID:
usingServerBasedLinks
utteranceComplete
uuid
validateAndEnqueuePackets:
validateAudioStreamConfigurations:
validateCarrierBundleConfigParameters:forKey:defaultValue:minValue:maxValue:
validateClientDictionary:
validateIncomingRequest:isRemote:
validateInitializeConnectionResult:
validateLocalConfiguration:
validateMediaEntries:
validateMultiwayAudioStreamConfigurations:
validateMultiwayVideoStreamConfigurations:
validateNumberOfRequestsWithError:
validateParticipantConfiguration
validateParticipantToAdd:
validateParticipantToRemove:
validateStreamConfiguration:error:
validateStreamGroup:state:
validateVideoStreamConfigurations:
validateWithError:
value:withObjCType:
valueForKey:
valueForNetworkBitrate:networkBitrate:
valueForSecondaryKeyWithPrimaryKey:secondaryKey:type:
valueForType:value:
valueWithPointer:
vcArg:sendControlData:isTypeSSL:withTimeout:withDetail:
vcArg:sendRealTimeData:toParticipantID:
vcAudioCodecBandwidthForAudioCodecBandwidth:
vcAudioPowerLevelMonitor:isAudioBelowThreshold:
vcList
vcMediaQueue
vcMediaStream:didPauseStream:error:
vcMediaStream:didReceiveDTMFEventWithDigit:
vcMediaStream:didReceiveFirstFrameWithTime:
vcMediaStream:didReceiveRTCPPackets:
vcMediaStream:didReceiveTTYCharacter:
vcMediaStream:didReceiveText:
vcMediaStream:didResumeStream:error:
vcMediaStream:didStartStream:error:
vcMediaStream:didSwitchFromStreamID:toStreamID:
vcMediaStream:didSwitchToAudioStreamWithID:
vcMediaStream:didUpdateVideoConfiguration:error:dictionary:
vcMediaStream:downlinkQualityDidChange:
vcMediaStream:priorityDidChange:
vcMediaStream:remoteMediaStalled:duration:
vcMediaStream:requestKeyFrameGenerationWithStreamID:firType:
vcMediaStream:updateFrequencyLevel:isInputMeter:
vcMediaStream:updateInputFrequencyLevel:
vcMediaStream:updateOutputFrequencyLevel:
vcMediaStream:uplinkQualityDidChange:
vcMediaStreamDidDecryptionTimeOut:
vcMediaStreamDidDecryptionTimeOutForMKMRecovery:
vcMediaStreamDidInterruptionBegin:
vcMediaStreamDidInterruptionEnd:
vcMediaStreamDidRTCPTimeOut:
vcMediaStreamDidRTPTimeOut:
vcMediaStreamDidStop:
vcMediaStreamServerDidDie:
vcMoments
vcSecureDataChannel:messageType:receivedData:
vcSession:addParticipantWithID:didSucceed:error:
vcSession:didStart:error:
vcSession:didStopWithError:
vcSession:downlinkRateAdaptationDidChangeWithInfo:
vcSession:oneToOneModeEnabled:didSucceed:error:
vcSession:participantID:audioEnabled:didSucceed:error:
vcSession:participantID:audioPaused:didSucceed:error:
vcSession:participantID:didChangeMediaPriority:description:
vcSession:participantID:didDetectError:
vcSession:participantID:mediaStateDidChange:forMediaType:didSucceed:error:
vcSession:participantID:remoteAudioEnabledDidChange:
vcSession:participantID:remoteAudioPausedDidChange:
vcSession:participantID:remoteScreenEnabledDidChange:
vcSession:participantID:remoteVideoEnabledDidChange:
vcSession:participantID:remoteVideoPausedDidChange:
vcSession:participantID:screenEnabled:didSucceed:error:
vcSession:participantID:videoEnabled:didSucceed:error:
vcSession:participantID:videoPaused:didSucceed:error:
vcSession:removeParticipantWithID:didSucceed:error:
vcSession:updateConfiguration:didSucceed:error:
vcSession:uplinkRateAdaptationDidChangeWithInfo:
vcSessionParticipant:audioEnabled:didSucceed:error:
vcSessionParticipant:audioPaused:didSucceed:error:
vcSessionParticipant:didChangeActualNetworkBitrateForStreamGroupID:
vcSessionParticipant:didChangeMediaPriority:description:
vcSessionParticipant:didDetectError:
vcSessionParticipant:didRequestVideoRedundancy:
vcSessionParticipant:didStart:error:
vcSessionParticipant:didStopWithError:
vcSessionParticipant:didSwitchFromStreamID:toStreamID:
vcSessionParticipant:mediaStateDidChange:forMediaType:didSucceed:error:
vcSessionParticipant:oneToOneModeDidChange:
vcSessionParticipant:remoteAudioEnabledDidChange:
vcSessionParticipant:remoteAudioPausedDidChange:
vcSessionParticipant:remoteMediaStateDidChange:forMediaType:
vcSessionParticipant:remoteScreenEnabledDidChange:
vcSessionParticipant:remoteVideoEnabledDidChange:
vcSessionParticipant:remoteVideoPausedDidChange:
vcSessionParticipant:requestKeyFrameGenerationWithStreamID:streamGroupID:firType:
vcSessionParticipant:screenEnabled:didSucceed:error:
vcSessionParticipant:videoEnabled:didSucceed:error:
vcSessionParticipant:videoPaused:didSucceed:error:
vcSessionParticipantDidChangeReceivingStreams:
vcSessionParticipantDidChangeSendingStreams:
vcSessionParticipantDidMediaDecryptionTimeOut:
vcSessionParticipantDidMediaDecryptionTimeOutForMKMRecovery:
vcSessionParticipantDidRemoteMediaStallTimeout:duration:
vcSessionParticipantFetchStreamGroupState:
vcSessionShouldReconnect:
vcVideoReceiver:didReceiveSampleBuffer:isFirstFrame:
vcVideoReceiver:didSwitchFromStreamID:toStreamID:
vcVideoReceiver:downlinkQualityDidChange:
vcVideoReceiver:receivedTMMBR:
vcVideoReceiver:requestKeyFrameGenerationWithStreamID:firType:
vcVideoReceiverRequestKeyFrame:rtcpPSFBType:
vcWCMClient
vcWRMClient
vcpInitializedForHEVC
vcpSupportsHEVCEncoder
vcrcServerBag
vcrcServerBagProfileNumber
verifyRequiredKeys:
verifyRequiredKeys:withError:
verifyRequiredVoiceChatKeys:
vfdCancel
vfdMessage
video
videoAttributeCameraForCameraUID:
videoAttributesWithVideoAttributes:
videoCallMicrophoneTierTable
videoCaptureSourceFromClientCaptureSource:
videoCodec
videoCodecForPayload:
videoCodecs
videoConference:cancelRelayRequest:requestDict:
videoConference:closeConnectionForCallID:
videoConference:didChangeLocalVariablesForCallID:
videoConference:didReceiveARPLData:forCallID:
videoConference:didReceiveARPLData:fromCallID:
videoConference:didReceiveData:forCallID:
videoConference:didReceiveFirstRemoteFrameForCallID:
videoConference:didRemoteScreenAttributesChange:forCallID:
videoConference:didRemoteVideoAttributesChange:forCallID:
videoConference:didStartSession:withCallID:error:
videoConference:didStartSession:withCallID:withUserInfo:error:
videoConference:didStopWithCallID:error:
videoConference:didStopWithCallID:error:callMetadata:
videoConference:inititiateRelayRequest:requestDict:
videoConference:isRemoteAudioBelowThreshold:
videoConference:localAudioEnabled:forCallID:error:
videoConference:localIPChange:withCallID:
videoConference:receivedNoRemotePacketsForTime:callID:
videoConference:reinitializeCallForCallID:
videoConference:remoteAudioEnabled:forCallID:
videoConference:remoteAudioPaused:callID:
videoConference:remoteCallingModeChanged:forCallID:
videoConference:remoteMediaStalled:callID:
videoConference:remoteVideoPaused:callID:
videoConference:sendRelayUpdate:updateDict:
videoConference:updateInputFrequencyLevel:
videoConference:updateInputMeterLevel:
videoConference:updateOutputFrequencyLevel:
videoConference:updateOutputMeterLevel:
videoConference:videoQualityNotificationForCallID:isDegraded:isRemote:
videoConference:withCallID:didPauseAudio:error:
videoConference:withCallID:didPauseVideo:error:
videoConference:withCallID:isSendingAudio:error:
videoConference:withCallID:networkHint:
videoDataOutput:mediaDidStall:
videoDataOutput:videoDidDegrade:
videoDataOutput:videoDidPause:
videoDataOutput:videoDidSuspend:
videoDataOutputDidBecomeInvalid:
videoDataOutputServerDidDie:
videoDegradedThreshold
videoDisplayAttribute:withHeight:
videoEnabled
videoEncoderType
videoFeatureStrings
videoFeatures
videoFormatForWidth:height:
videoGroup
videoImageAttributes:
videoIsPaused
videoMediaControlInfoGenerator
videoMirrored
videoOnlyBitrateToStreamIDsTable
videoParameterSet
videoParameterSupport
videoPaused
videoPayload
videoPayloadCollections
videoPayloadCollectionsCount
videoPayloadCollectionsType
videoPayloadForPayload:
videoPayloadTypes
videoPayloads
videoPositionalInfo
videoPriorityPointer
videoQuality
videoQueue
videoRTPID
videoReceiver
videoReceiver:didReceiveRemoteFrame:atTime:remoteVideoAttributes:remoteScreenAttributes:isFirstFrame:
videoReceiverConfig
videoReceiverConfigWithVideoStreamConfig:
videoReceiverFeedbackDelegate
videoResolutionFromClientResolution:
videoRuleCollections
videoRuleCollectionsAtIndex:
videoRuleCollectionsCount
videoRuleCollectionsType
videoRulesCollectionsByRemovingPayload:andPayload:removeCellular:
videoRulesWithBitmap:
videoSSRC
videoSendingBitrate
videoSettings
videoSource
videoSourceScreen
videoStreamConfigurations
videoStreamDelegate
videoStreamIdToRepairStreamIdMap
videoStreamPendingKeyFrameGenerationWithStreamID:shouldRemoveFromPendingArray:
videoStreamRateControlDumpEnabled
videoStreamReceiverConfigWithDumpID:reportingAgent:
videoStreamTokenForCallID:
videoStreamTypeFromClientVideoStreamMode:
videoStreamWithSyncToken:
videoThrottlingTimeout
videoToken
videoTransmitter
videoTransmitterHandle
visibleRectCropping
volume
vpEnableSpatialChat
vpOperatingModeToAudioSessionMediaFormatMapping
vpOperationModeForConferenceOperatingMode:deviceRole:
vplrFecEnabled
vtpPacketTypeForStreamType:
vtpSA
waitForBagLoad
waitForCondition:withTimeout:conditionPredicate:
waitIdleForClient:
waitToBeNominated
waitUntilDate:
warmupForCall
wcmClientDelegate
wcmSetCallConfig:interferenceLevel:
weak
weakObjectHolderWithObject:
webParticipantSupportsStreamGroupID:
weightFactor
whitespaceCharacterSet
width
wifiAllowRedLowBitratesEnabled
willExitState:newState:
willStart
willStop
worstCaseNetworkOverheadInBytesWithNumOfStreamId:isPriorityIncluded:
worstRecentBurstLoss
worstRecentRoundTripTime
write:
writeDatagram:datagramSize:
writeDatagram:datagramSize:datagramInfo:options:completionHandler:
writeDatagram:datagramSize:flags:completionHandler:
writeDatagrams:datagramsSize:datagramsInfo:datagramsCount:options:completionHandler:
writeTo:
writeToEmulatedNetworkWithDatagram:datagramSize:datagramInfo:options:
writeToFile:atomically:
writeToFileWithTimestamp:transactionID:URL:imageType:
writeToLivePhotoToFileWithFrame:transactionID:URL:imageType:cameraStatusBits:
writerMode
wrlock
wrmClient
wrmContext
xAudioTS
xRemoteLayer
xpcConnection
xpcQueue
zone
@24@0:8@16
B40@0:8@16@24i32i36
v28@0:8@16B24
I24@0:8@16
B44@0:8@16I24@28@36
B40@0:8@16@24@32
@16@0:8
B24@0:8@16
I24@0:8i16i20
v24@0:8@16
B40@0:8C16i20@24@32
B32@0:8@16@24
@24@0:8^{_NSZone=}16
v20@0:8I16
v20@0:8B16
B16@0:8
Q16@0:8
I16@0:8
{?="maxMediaBitrate"b1"maxNetworkBitrate"b1"maxPacketsPerSecond"b1"metadata"b1"repairedMaxNetworkBitrate"b1"repairedStreamID"b1}
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8r^{_VCRemoteCodecInfo=Id}16
v28@0:8@16C24
v16@0:8
v28@0:8I16d20
v28@0:8B16@20
v24@0:8@"VCAudioIOControllerClient"16
v28@0:8@"VCAudioIOControllerClient"16C24
v28@0:8B16@"VCAudioIOControllerClient"20
@"NSDictionary"16@0:8
^{_VCAudioIOControllerIOState=BdIIdQ{_VCSingleLinkedList=^{_VCSingleLinkedListEntry}B^?Q}^{opaqueCMSimpleQueue}^{opaqueVCAudioLimiter}^{opaqueVCAudioBufferList}^{opaqueVCAudioBufferList}IQQ[40c]}16@0:8
v56@0:8^{AudioStreamBasicDescription=dIIIIIIII}16^d24^I32i40i44^{AudioStreamBasicDescription=dIIIIIIII}48
@20@0:8i16
i16@0:8
v24@0:8^{opaqueCMSimpleQueue=}16
v24@0:8^{_VCAudioIOControllerIOState=BdIIdQ{_VCSingleLinkedList=^{_VCSingleLinkedListEntry}B^?Q}^{opaqueCMSimpleQueue}^{opaqueVCAudioLimiter}^{opaqueVCAudioBufferList}^{opaqueVCAudioBufferList}IQQ[40c]}16
v32@0:8^{AudioStreamBasicDescription=dIIIIIIII}16@24
I28@0:8@16I24
@32@0:8@16@24
v24@0:8^{tagHANDLE=i}16
v32@0:8^{_VCAudioIOControllerClientIO=^v^?@III^{opaqueVCAudioBufferList}}16^{_VCAudioIOControllerIOState=BdIIdQ{_VCSingleLinkedList=^{_VCSingleLinkedListEntry}B^?Q}^{opaqueCMSimpleQueue}^{opaqueVCAudioLimiter}^{opaqueVCAudioBufferList}^{opaqueVCAudioBufferList}IQQ[40c]}24
i24@0:8^{tagHANDLE=i}16
i24@0:8@?16
i36@0:8I16I20I24^{OpaqueCMBlockBuffer=}28
v36@0:8^{OpaqueCMBlockBuffer=}16I24@?28
v32@0:8@16@24
v24@0:8^{OpaqueCMBlockBuffer=}16
B48@0:8@16@24@32^I40
v32@0:8@16^B24
i24@0:8f16f20
^{tagHANDLE=i}
@"NSObject<OS_dispatch_queue>"
@"VCAudioSessionMediaProperties"
@"VCAudioUnitProperties"
@"NSDictionary"
@"NSMutableArray"
@"AVAudioDevice"
{_VCAudioIOControllerIOState="timestampInitialized"B"lastHostTime"d"lastInputTimestamp"I"lastInputSampleCount"I"lastBlockSize"d"lastTimestamp"Q"clientIOList"{_VCSingleLinkedList="head"^{_VCSingleLinkedListEntry}"initialized"B"compare"^?"countEntries"Q}"eventQueue"^{opaqueCMSimpleQueue}"audioLimiter"^{opaqueVCAudioLimiter}"secondarySampleBuffer"^{opaqueVCAudioBufferList}"interruptMixDownSampleBuffer"^{opaqueVCAudioBufferList}"audioSessionId"I"channelStateBitmap"Q"prevUsedChannelStateBitmap"Q"logPrefix"[40c]}
@"VCAudioRelay"
@"VCAudioRelayIO"
{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}
@"NSMutableDictionary"
@"VCAudioUnitSpatialContext"
@"NSArray"
@"ATSpatialStreamDescriptions"
v24@0:8@"VCRateControlShareProfile"16
@44@0:8@16@24B32@36
@32@0:8@16r^{tagVCRateControlParams=@BB@@B@B}24
v28@0:8@16i24
v64@0:8{AVCRateControlConfig=IIIIIIB^{tagVCRateControlAlgorithmConfig}I}16
{tagAVCRateControlExperimentConfig=ii}16@0:8
{tagVCRateControlAlgorithmConfig=I^Iiii[2i]iiiiiiiiiiiddddddddddddddiiidddddddddddIIIIIBBBBBBBBBBBiBddididddidiiddidddddddddddddddddBdiiBiddddddIIdd}16@0:8
v24@0:8^v16
v24@0:8^{__CFDictionary=}16
v48@0:8i16B20i24B28i32I36B40I44
I20@0:8I16
I20@0:8i16
I24@0:8i16B20
@20@0:8I16
B20@0:8I16
i28@0:8I16I20i24
i20@0:8i16
v24@0:8^{tagVCRateControlAlgorithmConfig=I^Iiii[2i]iiiiiiiiiiiddddddddddddddiiidddddddddddIIIIIBBBBBBBBBBBiBddididddidiiddidddddddddddddddddBdiiBiddddddIIdd}16
v704@0:8{tagVCRateControlAlgorithmConfig=I^Iiii[2i]iiiiiiiiiiiddddddddddddddiiidddddddddddIIIIIBBBBBBBBBBBiBddididddidiiddidddddddddddddddddBdiiBiddddddIIdd}16
v184@0:8{tagVCStatisticsMessage=iidBBBB(?={?=IIIIIIddddd[64c]i}{?=IIIIIIIIIIIIddIIdIB{?=iIIIdddII}{?=SBBI}}{?=dddIIIIIQI}{?=IBBBIIdIB{?=iIIIdddII}}{?=CIIIIIIIIIddddIIII}{?=IIId}{?=iIIIdddII}{?=IIII}{?=IIIIIIBI}{?=IIIIfBBddIIIQ}{?=CCCQQQIIIQiI(?={?=CCSSCCCCCCCfBS[6I]}{?=CsscCCCCSSC})}{tagVCStatisticsVideoLossFeedback=ISCC})}16
v24@0:8d16
v24@0:8I16I20
i28@0:8I16i20i24
v24@0:8^^v16
{AVCRateControlConfig=IIIIIIB^{tagVCRateControlAlgorithmConfig}I}16@0:8
^{OpaqueFigCFWeakReference=}
@"<AVCRateControllerDelegate>"
@"AVCStatisticsCollector"
@"AVCRateControlFeedbackController"
@"AVCBasebandCongestionDetector"
@"VCNWConnectionCongestionDetector"
@"VCRateControlMediaController"
{AVCRateControlConfig="mode"I"localRadioAccessTechnology"I"remoteRadioAccessTechnology"I"maxBitrate"I"minBitrate"I"initialBitrate"I"isTrafficBursty"B"algorithmConfig"^{tagVCRateControlAlgorithmConfig}"featureFlags"I}
{tagVCRateControlAlgorithmConfig="serverBagProfileNumber"I"tierBitrates"^I"initialTierIndex"i"maxTierIndex"i"minTierIndex"i"softMaxTierIndex"[2i]"lowestNonEmergencyTierIndex"i"lowestNonEmergencyTierIndexWiFi"i"lowestEffectiveBWETierIndex"i"lowestTierIndexReactToNoServerActivity"i"rampUpTierNumber"i"rampDownTierNumber"i"rampUpAdditionalTierAtInitial"i"rampDownAdditionalTierAtInitial"i"rampDownBurstyLossThreshold"i"lowestTierForBurstyLossRampDown"i"lowestTierToDisableRateLimited"i"rampDownNOWRDThreshold"d"rampDownNOWRDAccThreshold"d"rampDownAggressiveNOWRDThreshold"d"rampDownAggressiveNOWRDAccThreshold"d"rampDownConstantOWRDDuration"d"rampDownOvershootDuration"d"rampDownOvershootNextTierRatio"d"rampUpFrozenDuration"d"rampUpSettleDuration"d"rampUpOWRDThreshold"d"rampUpNOWRDThreshold"d"rampUpNOWRDAccThreshold"d"rampUpOverBandwidthCalmDuration"d"rampUpBlockedTimeout"d"rampUpOverBandwidthTierNumber"i"rampDownLossEventThreshold"i"rampDownLossEventBadTrendThreshold"i"rampDownLossEventThresholdRatio"d"rampDownLossEventWindowDuration"d"rampDownLossEventNOWRDThreshold"d"rampUpFrozenPLRThreshold"d"rampUpRateLimitedRatio"d"unstableRateLimitedDuration"d"congestionWaitDuration"d"owrdWindowDuration"d"owrdShortWindowDuration"d"minimumNOWRDTimeDifference"d"owrdInitialRampUpReadyDuration"d"owrdHistorySize"I"owrdMininumHistorySize"I"fastRampDownBitrateRange"I"fastRampUpBitrateRange"I"consecutiveRampDownThresholdForCongestion"I"receivedBandwidthEstimationEnabled"B"basebandAdaptationEnabled"B"rateLimitedEnabled"B"randomRampUpFrozenDurationEnabled"B"oscillationAvoidanceEnabled"B"fastRampUpEnabled"B"blockRampUpInSaturatedNetworkEnabled"B"blockRampUpInBluetoothCoexEnabled"B"wifiEmergencyTiersEnabled"B"burstyTrafficEnabled"B"rampDownToActualSendBitrate"B"rampDownToActualSendBitrateMinTier"i"rampDownSuppressionEnabled"B"rampDownSuppressionMinRTT"d"rampDownSuppressionFactor"d"fastRampUpHighestTier"i"fastRampUpRTTRatio"d"fastRampUpTierGap"i"fastRampUpNetworkStableDuration"d"networkSaturatedRTTToMinRTTRatio"d"networkSaturatedOWRDToMinRTTRatio"d"networkSaturatedPersistFeedbackNumber"i"networkSaturatedRTTDecreasingThreshold"d"oscillationAvoidanceTierChangeThreshold"i"oscillationAvoidanceTiersHitThreshold"i"oscillationAvoidanceDurationRatio"d"oscillationAvoidanceDurationRatioAggressive"d"stabilizationScheme"i"rampDownNBDCDThreshold"d"rampDownAggressiveNBDCDThreshold"d"rampDownNormalizedQueuingDelayThreshold"d"rampDownMediumQueuingDelayThreshold"d"rampDownHighQueuingDelayThreshold"d"rampDownEmergencyTierCoolDownTime"d"rampDownWiFiEmergencyTierCoolDownTime"d"rampUpNBDCDThreshold"d"rampUpQueuingDelayThreshold"d"rampUpNBDCDCoolDownTime"d"rampUpAudioFractionCoolDownTime"d"basebandRATSwitchCoolDownTime"d"basebandAdaptationCrossTrafficRatio"d"rampUpNetworkUnstableCoolDownTime"d"autoResumeDurationAfterPaused"d"pauseOffChannelHighRatio"d"unpauseOffChannelLowRatio"d"oscillationDetectionEnabled"B"oscillationCoolDownTime"d"oscillationDeviationTierNumber"i"oscillationDeviationCountThreshold"i"preventBasebandRampDownCloseToKeyFrame"B"basebandRampDownSlowDownFactor"i"networkUnstableRTTThreshold"d"networkUnstablePLRThreshold"d"packetLossRateThresholdInitial"d"packetLossRateThresholdMin"d"packetLossRateThresholdMax"d"packetLossRateThresholdTarget"d"rampUpUplinkBLERThreshold"I"rampDownUplinkBLERThreshold"I"rampUpUplinkBLERDuration"d"rampDownUplinkBLERDuration"d}
@"NSString"
^{opaqueRTCReporting=}
@"VCRateControlServerBag"
@"NSObject<OS_nw_activity>"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"<VCRateControlAlgorithm>"
B24@0:8^{ifnet_interface_advisory=(?={?=CCSiQQQQIIICCSSCCCC}{?={ifnet_interface_advisory_header=CCCC}{ifnet_interface_advisory_capacity=iQQQQIII}(?={ifnet_interface_advisory_wifi_context=CCSSCCCCCS[6I]}{ifnet_interface_advisory_cell_context=CsscCCCCSSCC})})}16
B28@0:8^{packet_id=CCSIII}16i24
{tagVCStatisticsMessage="type"i"priority"i"arrivalTime"d"isVCRCInternal"B"shouldFlushAndProcess"B"shouldDrainAndProcess"B"statisticsUpdateOnly"B""(?="baseband"{?="queueDepth1"I"queueDepth2"I"txBitrate"I"averageBitrate"I"averageBitrateShort"I"averageBitrateLong"I"averageQueueDepth"d"expectedQueuingDelay"d"bdcd"d"normalizedBDCD"d"normalizedDelay"d"bbString"[64c]"radioTechnology"i}"feedback"{?="sendTimestamp"I"queuingDelay"I"remoteBWEstimation"I"remoteBWEStability"I"maxVideoBurstyLoss"I"audioConsecutiveLoss"I"mostBurstyLoss"I"audioReceivedPackets"I"videoReceivedPackets"I"totalSentPackets"I"echoedSendTimestamp"I"mediaTimestamp"I"owrd"d"packetLossRate"d"actualBitrate"I"instantBitrate"I"roundTripTime"d"receiveQueueTarget"I"isPacketReceivedValid"B"packetReceived"{?="packetType"i"packetId"I"sampleRate"I"totalPacketsReceived"I"receiveTimestamp"d"owrd"d"targetJitterQueueSize"d"bandwidthEstimation"I"localBurstyLoss"I}"connectionStats"{?="sequenceNumber"S"isDuplicatePacket"B"isReceivedOnPrimary"B"connectionStatsBuffer"I}}"network"{?="packetLossPercentage"d"packetLossPercentageAudio"d"packetLossPercentageVideo"d"burstPacketLoss"I"roundTripTimeMilliseconds"I"isNetworkCongested"I"owrd"I"targetBitrate"I"statisticsID"Q"videoPacketsReceived"I}"probing"{?="estimatorID"I"deregisterEstimator"B"isProbingSequence"B"isEndOfProbingSequence"B"probingSequenceID"I"messageLength"I"arrivalTime"d"mediaTimestamp"I"isPacketReceivedValid"B"packetReceived"{?="packetType"i"packetId"I"sampleRate"I"totalPacketsReceived"I"receiveTimestamp"d"owrd"d"targetJitterQueueSize"d"bandwidthEstimation"I"localBurstyLoss"I}}"serverStats"{?="linkID"C"sendTimestamp"I"receiveTimestamp"I"totalPacketSent"I"totalPacketReceived"I"totalByteSent"I"totalByteReceived"I"serverStatsByteUsed"I"bandwidthSample"I"bandwidthEstimation"I"roundTripTime"d"owrd"d"packetLossRate"d"packetLossRateShortWindow"d"actualBitrate"I"instantBitrate"I"serverStatsBitrate"I"expectedBitrate"I}"packetSent"{?="packetId"I"totalPacketsSent"I"totalBytesSent"I"sendTimestamp"d}"packetReceived"{?="packetType"i"packetId"I"sampleRate"I"totalPacketsReceived"I"receiveTimestamp"d"owrd"d"targetJitterQueueSize"d"bandwidthEstimation"I"localBurstyLoss"I}"rtcpRR"{?="ssrc"I"packetLossPercentage"I"lastSequenceNumber"I"roundTripTimeMilliseconds"I}"config"{?="mode"I"remoteRadioAccessTechnology"I"localRadioAccessTechnology"I"maxBitrate"I"minBitrate"I"initialBitrate"I"isTrafficBursty"B"featureFlags"I}"mediaEvent"{?="mediaEventType"I"additionalFlushCount"I"transactionID"I"audioStallBitrate"I"audioErasure"f"isKeyFrame"B"isTransitionToFEC"B"videoStallTimeDelta"d"videoStallTimeTotal"d"refreshFrameTimestamp"I"refreshFramePayloadType"I"refreshFramePacketCount"I"idsParticipantID"Q}"nwConnection"{?="version"C"direction"C"interfaceType"C"timestamp"Q"maxThroughputBps"Q"totalByteCount"Q"flushableQueueSize"I"nonFlushableQueueSize"I"averageDelayMillisecond"I"averageThroughputBps"Q"rateTrendSuggestion"i"packetLossPerFrame"I""(?="wifi"{?="frequencyBand"C"intermittentState"C"estimatedIntermittentPeriod"S"singleOutagePeriod"S"btCoex"C"radioCoex"C"qualityScoreDelayRx"C"qualityScoreDelayTx"C"qualityScoreLossRx"C"qualityScoreLossTx"C"qualityScoreChannel"C"offChannelTimeRatio"f"detectedFrequentOffChannelActivity"B"wlanDutyCycle"S"wifiObservedTxBitrate"[6I]}"baseband"{?="radioAccessTechnology"C"referenceSignalLevel"s"signalLevel"s"signalQuality"c"uplinkBLER"C"downlinkBLER"C"bandwidthLimitationIndication"C"cdrxState"C"cdrxCycle"S"estimatedOutagePeriod"S"outageState"C})}"videoLossFeedback"{tagVCStatisticsVideoLossFeedback="frameRTPTimestamp"I"packetsReceived"S"frameSize"C"packetsLost"C})}
B44@0:8^@16I24^@28^@36
B44@0:8@16I24@28^@36
B32@0:8^{tagVCStatisticsMessage=iidBBBB(?={?=IIIIIIddddd[64c]i}{?=IIIIIIIIIIIIddIIdIB{?=iIIIdddII}{?=SBBI}}{?=dddIIIIIQI}{?=IBBBIIdIB{?=iIIIdddII}}{?=CIIIIIIIIIddddIIII}{?=IIId}{?=iIIIdddII}{?=IIII}{?=IIIIIIBI}{?=IIIIfBBddIIIQ}{?=CCCQQQIIIQiI(?={?=CCSSCCCCCCCfBS[6I]}{?=CsscCCCCSSC})}{tagVCStatisticsVideoLossFeedback=ISCC})}16d24
B108@0:8{?=IBBBIIdIB{?=iIIIdddII}}16I96^@100
@160@0:8{?=IIIIIIIIIIIIddIIdIB{?=iIIIdddII}{?=SBBI}}16
@"VCConnectionHealthMonitor"
@24@0:8i16I20
@28@0:8i16i20I24
v20@0:8i16
@"VCCapabilities"
s24@0:8@16
v24@0:8@?16
I20@0:8B16
@28@0:8@16I24
q16@0:8
q20@0:8i16
q28@0:8i16@20
v32@0:8@16q24
v36@0:8@16q24B32
v56@0:8q16@24d32@?40@48
@24@0:8q16
v40@0:8@16@24q32
d24@0:8q16
B84@0:8q16q24@32B40@44B52@56i64@68^@76
B76@0:8q16q24@32B40@44B52@56i64^@68
B60@0:8q16@24B32@36@44^@52
B68@0:8q16@24B32@36B44@48i56^@60
B72@0:8q16q24@32B40@44B52@56^@64
B64@0:8q16@24B32@36B44@48^@56
v24@0:8q16
v40@0:8@16q24q32
v32@0:8q16@24
B20@0:8B16
f16@0:8
B40@0:8^B16q24^@32
^v16@0:8
q24@0:8q16
i24@0:8q16
B36@0:8B16q20^@28
v40@0:8@16B24I28@32
v48@0:8@16B24I28@32@40
v36@0:8@16I24@28
v44@0:8@16q24B32@36
v44@0:8@16I24@28@36
v36@0:8@16@24I32
v32@0:8@16B24I28
v28@0:8@16I24
v28@0:8@16f24
v36@0:8@16I24B28B32
v32@0:8@16I24B28
v32@0:8@16I24I28
v36@0:8q16@24B32
v28@0:8B16q20
v28@0:8I16q20
v56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48
@"AVConferenceXPCClient"
@"NSTimer"
@"CALayer"
{?="decodeFormats"b1"encodeFormats"b1"parameterSet"b1"videoPayload"b1}
@36@0:8@16@24B32
B52@0:8C16i20C24@28@36@44
v40@0:8@16{CGSize=dd}24
v40@0:8@16@24@32
@"NSData"16@0:8
B24@0:8@"NSData"16
@"VCMediaNegotiatorLocalConfiguration"16@0:8
@"VCMediaNegotiatorResults"16@0:8
@"VCMediaNegotiatorResultsAudio"16@0:8
@"VCMediaNegotiatorResultsVideo"16@0:8
@"VCMediaNegotiatorResultsMoments"16@0:8
@"VCMediaNegotiatorResultsFaceTimeSettings"16@0:8
@"NSArray"16@0:8
@"NSSet"24@0:8@"NSData"16
B40@0:8@"VCMediaNegotiatorLocalConfiguration"16@"NSData"24i32i36
@28@0:8I16@20
@36@0:8I16@20@28
@"VCMediaNegotiatorLocalConfiguration"
@"VCMediaNegotiatorResults"
@"VCMediaNegotiatorResultsAudio"
@"VCMediaNegotiatorResultsVideo"
@"VCMediaNegotiatorResultsMoments"
@"VCMediaNegotiatorResultsFaceTimeSettings"
B20@0:8i16
d16@0:8
@"NSData"
@44@0:8I16q20^v28^?36
{_VCRange=ff}16@0:8
{_VCAudioPowerSpectrumRealtimeContext="powerSpectrumConfigured"B"format"{AudioStreamBasicDescription="mSampleRate"d"mFormatID"I"mFormatFlags"I"mBytesPerPacket"I"mFramesPerPacket"I"mBytesPerFrame"I"mChannelsPerFrame"I"mBitsPerChannel"I"mReserved"I}"frequencyRange"{_VCRange="min"f"max"f}"sampleRate"I"fftSampleCount"I"hanningWindow"^f"octave2IndexTable6"^I"octave2IndexTable6Count"I"outputBinCount"I"lerpIdxs"^f"fftNormFactor"f"streamToken"q"averageLevel"f"sampleBuffer"^{opaqueVCAudioBufferList}"channels"^{_VCAudioPowerSpectrumChannel}"sinkContext"^v"sinkCallback"^?}
@24@0:8B16B20
i28@0:8i16@?20
B24@0:8i16i20
B24@0:8d16
{tagVCStatisticsMessage=iidBBBB(?={?=IIIIIIddddd[64c]i}{?=IIIIIIIIIIIIddIIdIB{?=iIIIdddII}{?=SBBI}}{?=dddIIIIIQI}{?=IBBBIIdIB{?=iIIIdddII}}{?=CIIIIIIIIIddddIIII}{?=IIId}{?=iIIIdddII}{?=IIII}{?=IIIIIIBI}{?=IIIIfBBddIIIQ}{?=CCCQQQIIIQiI(?={?=CCSSCCCCCCCfBS[6I]}{?=CsscCCCCSSC})}{tagVCStatisticsVideoLossFeedback=ISCC})}28@0:8i16d20
C16@0:8
v20@0:8C16
^{tagVCStatisticsCollection={?=IIIIIIIIIIIIddIIdIB{?=iIIIdddII}{?=SBBI}}{?=dddIIIIIQI}{?=CIIIIIIIIIddddIIII}{?=IIId}{?=iIIIdddII}{?=iIIIdddII}{?=IIIIfBBddIIIQ}{tagVCStatisticsVideoLossFeedback=ISCC}}
@"VCRateControlBandwidthEstimatorMap"
@"VCRateControlOWRDEstimator"
@"VCStatisticsHistory"
@"VCStatisticsCollectorQueue"
{_opaque_pthread_rwlock_t="__sig"q"__opaque"[192c]}
v48@0:8d16d24d32S40I44
v32@0:8I16I20d24
v24@0:8S16S20
v48@0:8^v16d24B32d36I44
S16@0:8
v32@0:8d16d24
i20@0:8I16
[4B]
v20@0:8f16
{?="maxMediaBitrate"b1"maxNetworkBitrate"b1"maxPacketsPerSecond"b1"repairedMaxNetworkBitrate"b1"repairedStreamID"b1"supportedPayloads"b1}
@"GKNATObserverInternal"
i24@0:8I16B20
I44@0:8I16@20B28@32I40
I32@0:8I16@20B28
v48@0:8^i16^i24^i32^@40
^{tagCommNATInfo=II[3S]I}32@0:8^{tagIPPORT=i[16c](?=I[16C])S}16r^{?=i[12C]}24
i44@0:8^{tagIPPORT=i[16c](?=I[16C])S}16r^{?=i[12C]}24@32B40
v36@0:8^{tagIPPORT=i[16c](?=I[16C])S}16r^{?=i[12C]}24B32
@32@0:8^{tagIPPORT=i[16c](?=I[16C])S}16@24
^{__SCDynamicStore=}
@"NSRecursiveLock"
@"NSObject<OS_dispatch_group>"
@"NSObject<OS_dispatch_semaphore>"
@"GKNATObserver_SCContext"
v24@0:8^{?=I[5I]Id{CGSize=dd}dIdII}16
v24@0:8^{opaqueRTCReporting=}16
v36@0:8@16B24d28
v28@0:8@16S24
v48@0:8@16{?=qiIq}24
@"VCAudioStreamGroupCommon"
{tagVCAudioStreamGroupPriorityInfo="isAudioActive"B"audioActiveProbabilityThreshold"I"audioInactiveProbabilityThreshold"I"audioActiveAccumulationThreshold"I"audioInactiveAccumulationThreshold"I"audioActiveCount"I"lastAudioPriority"I"refreshCounter"I}
@"VCAudioCaptionsCoordinator"
B32@0:8d16^@24
d32@0:8@16@24
B32@0:8@16^@24
B24@0:8^@16
B32@0:8^{tagVCAudioRelayIOInfo=@{_opaque_pthread_mutex_t=q[56c]}@@}16^{tagVCAudioRelayIOInfo=@{_opaque_pthread_mutex_t=q[56c]}@@}24
v32@0:8^{tagVCAudioRelayIOInfo=@{_opaque_pthread_mutex_t=q[56c]}@@}16^{tagVCAudioRelayIOInfo=@{_opaque_pthread_mutex_t=q[56c]}@@}24
B32@0:8Q16^@24
^{OpaqueAudioConverter=}40@0:8^{AudioStreamBasicDescription=dIIIIIIII}16^{AudioStreamBasicDescription=dIIIIIIII}24^@32
f28@0:8^f16I24
v48@0:8@16@24^{OpaqueAudioConverter=}32d40
v24@0:8^{timespec=qq}16
^{OpaqueAudioConverter=}16@0:8
^{OpaqueFigThread=}
{_opaque_pthread_cond_t="__sig"q"__opaque"[40c]}
^{OpaqueAudioConverter=}
{tagVCAudioRelayIOInfo="relayIO"@"VCAudioRelayIO""lock"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}"ioFriendlyName"@"NSString""audioRecordingFileName"@"NSString"}
@"NSObject<OS_dispatch_source>"
{_VCRemoteCodecInfo="codecType"I"sampleRate"d}
{timespec="tv_sec"q"tv_nsec"q}
@"NSObject<NSCopying>"
@"NSUUID"
@"NSDate"
@"<VCHardwareSettingsEmbeddedProtocol>"
v20@0:8S16
v24@0:8Q16
@32@0:8^{tagRTCPPACKET={tagRTCPCOMMON=b5b1b2b8S}(?={tagSR_RTCP=IIIIII[1{tagRTCP_RRB=Ib8b24IIII}]}{tagRR_RTCP=I[1{tagRTCP_RRB=Ib8b24IIII}]}{tagSDES_RTCP=I{tagRTCPSDES=CC[258c]}}{tagBYE_RTCP=I}{tagRTCP_APP=II}{tagRTCP_APP_LTRP={tagRTCP_APP=II}I}{tagFIR_RTCP=I[10S]}{tagNACK_RTCP=ISS}{tagRTCP_PSFB_PLI={tagRTCP_FBCOMMON=II}}{tagRTCP_PSFB_SLI={tagRTCP_FBCOMMON=II}I}{tagRTCP_PSFB_FIR={tagRTCP_FBCOMMON=II}IC[3C]}{tagRTCP_PSFB_TST={tagRTCP_FBCOMMON=II}II}{tagRTCP_PSFB_TST={tagRTCP_FBCOMMON=II}II}{tagRTCP_PSFB_ALFB_HEADER={tagRTCP_FBCOMMON=II}I}{tagRTCP_PSFB_LOSSFB={tagRTCP_PSFB_ALFB_HEADER={tagRTCP_FBCOMMON=II}I}{tagRTCP_CUSTOM_PSFB_LOSS_FB_INFO=ISCC}}{tagRTCP_PSFB_LTRACK={tagRTCP_PSFB_ALFB_HEADER={tagRTCP_FBCOMMON=II}I}I}{tagRTCP_RTPFB_GNACK={tagRTCP_FBCOMMON=II}SS}{tagRTCP_RTPFB_TMMB={tagRTCP_FBCOMMON=II}II}{tagRTCP_RTPFB_TMMB={tagRTCP_FBCOMMON=II}II}{tagVCRTCPXR=I[0I]}{tagRTCP_CUSTOM_SR={tagRTCP_APP=II}I{tagRTCP_CUSTOM_SENDER_INFO=IIIIb4b4}[1{tagRTCP_CUSTOM_RECEPTION_REPORT=Ib4b12SSCC}]}{tagRTCP_CUSTOM_RR={tagRTCP_APP=II}I{tagRTCP_CUSTOM_RECEIVER_INFO=b4b4}[1{tagRTCP_CUSTOM_RECEPTION_REPORT=Ib4b12SSCC}]}{tagRTCP_CUSTOM_RCTL={tagRTCP_APP=II}{tagRTCP_CUSTOM_RATE_CONTROL_INFO=[20C]}})}16Q24
@24@0:8^{tagRTCPPACKET={tagRTCPCOMMON=b5b1b2b8S}(?={tagSR_RTCP=IIIIII[1{tagRTCP_RRB=Ib8b24IIII}]}{tagRR_RTCP=I[1{tagRTCP_RRB=Ib8b24IIII}]}{tagSDES_RTCP=I{tagRTCPSDES=CC[258c]}}{tagBYE_RTCP=I}{tagRTCP_APP=II}{tagRTCP_APP_LTRP={tagRTCP_APP=II}I}{tagFIR_RTCP=I[10S]}{tagNACK_RTCP=ISS}{tagRTCP_PSFB_PLI={tagRTCP_FBCOMMON=II}}{tagRTCP_PSFB_SLI={tagRTCP_FBCOMMON=II}I}{tagRTCP_PSFB_FIR={tagRTCP_FBCOMMON=II}IC[3C]}{tagRTCP_PSFB_TST={tagRTCP_FBCOMMON=II}II}{tagRTCP_PSFB_TST={tagRTCP_FBCOMMON=II}II}{tagRTCP_PSFB_ALFB_HEADER={tagRTCP_FBCOMMON=II}I}{tagRTCP_PSFB_LOSSFB={tagRTCP_PSFB_ALFB_HEADER={tagRTCP_FBCOMMON=II}I}{tagRTCP_CUSTOM_PSFB_LOSS_FB_INFO=ISCC}}{tagRTCP_PSFB_LTRACK={tagRTCP_PSFB_ALFB_HEADER={tagRTCP_FBCOMMON=II}I}I}{tagRTCP_RTPFB_GNACK={tagRTCP_FBCOMMON=II}SS}{tagRTCP_RTPFB_TMMB={tagRTCP_FBCOMMON=II}II}{tagRTCP_RTPFB_TMMB={tagRTCP_FBCOMMON=II}II}{tagVCRTCPXR=I[0I]}{tagRTCP_CUSTOM_SR={tagRTCP_APP=II}I{tagRTCP_CUSTOM_SENDER_INFO=IIIIb4b4}[1{tagRTCP_CUSTOM_RECEPTION_REPORT=Ib4b12SSCC}]}{tagRTCP_CUSTOM_RR={tagRTCP_APP=II}I{tagRTCP_CUSTOM_RECEIVER_INFO=b4b4}[1{tagRTCP_CUSTOM_RECEPTION_REPORT=Ib4b12SSCC}]}{tagRTCP_CUSTOM_RCTL={tagRTCP_APP=II}{tagRTCP_CUSTOM_RATE_CONTROL_INFO=[20C]}})}16
@"AVCRTCPReceiverReport"
v24@0:8^{opaqueVCAudioBufferList=}16
@32@0:8q16@24
v24@0:8^^{opaqueCMSimpleQueue}16
^{_VCAudioPowerSpectrumSourceRealtimeContext={_VCSingleLinkedList=^{_VCSingleLinkedListEntry}B^?Q}^{opaqueCMSimpleQueue}@}16@0:8
{_VCAudioPowerSpectrumSourceRealtimeContext="powerSpectrumSinks"{_VCSingleLinkedList="head"^{_VCSingleLinkedListEntry}"initialized"B"compare"^?"countEntries"Q}"eventQueue"^{opaqueCMSimpleQueue}"powerSpectrumSourceDelegate"@}
@24@0:8I16I20
B32@0:8*16I24I28
i24@0:8I16I20
i32@0:8*16I24I28
^{tagIPPORT=i[16c](?=I[16C])S}16@0:8
v24@0:8^{tagIPPORT=i[16c](?=I[16C])S}16
^{tagIPPORT=i[16c](?=I[16C])S}
@24@0:8^{?=i[12C]}16
r^{?=i[12C]}16@0:8
^{?=i[12C]}
^{tagIPPORT=i[16c](?=I[16C])S}24@0:8@16
d20@0:8I16
@20@0:8C16
@44@0:8@16^{__CFString=}24@32B40
B48@0:8@16^{__CFString=}24*32*40
{?=S[32{?=CC}]}16@0:8
@28@0:8I16I20C24
{?=ddidd}16@0:8
[8I]
^{OpaqueVCFECFeedbackAnalyzer=}
B72@0:8^@16q24q32q40@48@56@64
B64@0:8^@16q24q32@40@48@56
{OWRDList="time"[100d]"owrd"[100d]"frontIndex"i"rearIndex"i"size"i}
@64@0:8@16@24@32^v40^?48^?56
v32@0:8^@16@24
v44@0:8i16@20@28^B36
B40@0:8@16^B24@32
i28@0:8^i16I24
^{tagVCNWConnectionMonitor=}16@0:8
i24@0:8@16
@"NSObject<OS_nw_connection>"
B20@0:8C16
@"NSError"16@0:8
v24@0:8@"VCAudioIO"16
@44@0:8@16^?24^v32C40
^{tagVCAudioStreamGroupStream=^{tagVCAudioStreamGroupStream}BB^v^?S@II}16@0:8
B28@0:8@16B24
v28@0:8^{?=I[5I]Id{CGSize=dd}dIdII}16f24
B28@0:8@16i24
^?16@0:8
v24@0:8^?16
^{tagVCAudioStreamGroupStream=^{tagVCAudioStreamGroupStream}BB^v^?S@II}
^{opaqueVCAudioBufferList=}
{VCAudioStreamGroupSyncDestinationList="slh_first"^{tagVCAudioStreamGroupSyncDestination}}
@"VCAudioIO"
@"VCAudioPowerSpectrumSource"
^{opaqueCMSimpleQueue=}
^{tagVCMemoryPool={?=^vq}Q}
v32@0:8^B16^B24
[500I]
{?="configurationExtension"b1}
B732@0:8^{?=[100d][100d]iiIdddB}16d24d32{tagVCRateControlAlgorithmConfig=I^Iiii[2i]iiiiiiiiiiiddddddddddddddiiidddddddddddIIIIIBBBBBBBBBBBiBddididddidiiddidddddddddddddddddBdiiBiddddddIIdd}40B728
B728@0:8^{?=[100d][100d]iiIdddB}16d24d32{tagVCRateControlAlgorithmConfig=I^Iiii[2i]iiiiiiiiiiiddddddddddddddiiidddddddddddIIIIIBBBBBBBBBBBiBddididddidiiddidddddddddddddddddBdiiBiddddddIIdd}40
v716@0:8^{?=[100d][100d]iiIdddB}16{tagVCRateControlAlgorithmConfig=I^Iiii[2i]iiiiiiiiiiiddddddddddddddiiidddddddddddIIIIIBBBBBBBBBBBiBddididddidiiddidddddddddddddddddBdiiBiddddddIIdd}24B712
d52@0:8d16^{?=[100d][100d]iiIdddB}24I32I36d40B48
v712@0:8^{?=[100d][100d]iiIdddB}16{tagVCRateControlAlgorithmConfig=I^Iiii[2i]iiiiiiiiiiiddddddddddddddiiidddddddddddIIIIIBBBBBBBBBBBiBddididddidiiddidddddddddddddddddBdiiBiddddddIIdd}24
@24@0:8^{tagCONNRESULT=IiiIiiSS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}IiiiiSiii^{tagCONNRESULT}i}16
v24@0:8^{tagCONNRESULT=IiiIiiSS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}IiiiiSiii^{tagCONNRESULT}i}16
^{tagCONNRESULT=IiiIiiSS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}IiiiiSiii^{tagCONNRESULT}i}16@0:8
^{tagCONNRESULT=IiiIiiSS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}IiiiiSiii^{tagCONNRESULT}i}
v28@0:8^{tagCONNRESULT=IiiIiiSS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}IiiiiSiii^{tagCONNRESULT}i}16I24
v36@0:8@16^{opaqueCMSampleBuffer=}24I32
v36@0:8@"VCMomentsHistoryBuffer"16^{opaqueCMSampleBuffer=}24I32
v28@0:8^{opaqueVCAudioBufferList=}16I24
v32@0:8^{opaqueCMSampleBuffer=}16C24I28
v36@0:8@16I24@?28
v40@0:8C16@20I28@?32
B40@0:8I16@20^@28i36
B48@0:8^{__CVBuffer=}16@24^@32i40C44
{?=qiIq}48@0:8I16@20^{CGRect={CGPoint=dd}{CGSize=dd}}28*36i44
v52@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16C48
{CGSize=dd}52@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16C48
v92@0:8@16@24{?=qiIq}32{CGRect={CGPoint=dd}{CGSize=dd}}56C88
@28@0:8@16C24
i32@0:8@16@24
v64@0:8^{__CVBuffer=}16{?=qiIq}24^{opaqueCMSampleBuffer=}48C56I60
C24@0:8@16
v40@0:8@16@24^{opaqueCMSampleBuffer=}32
v32@0:8@?16@24
@"NSObject<VCMovieWriterProtocol>"
@"VCMomentsHistoryBuffer"
@"VideoAttributes"
^{__CVPixelBufferPool=}
{CGSize="width"d"height"d}
^{OpaqueVTPixelTransferSession=}
^{__CFAllocator=}
{tagVCMomentsHistoryAudioFormat="figFormat"^{opaqueCMFormatDescription}"basicFormat"{AudioStreamBasicDescription="mSampleRate"d"mFormatID"I"mFormatFlags"I"mBytesPerPacket"I"mFramesPerPacket"I"mBytesPerFrame"I"mChannelsPerFrame"I"mBitsPerChannel"I"mReserved"I}}
v32@0:8d16@24
v24@0:8@"VCEmulatedPacket"16
v32@0:8d16@"NSDictionary"24
[4096d]
{?="multiwayCapabilities"b1"supportedImageTypes"b1"supportedVideoCodecs"b1}
v708@0:8{tagVCRateControlAlgorithmConfig=I^Iiii[2i]iiiiiiiiiiiddddddddddddddiiidddddddddddIIIIIBBBBBBBBBBBiBddididddidiiddidddddddddddddddddBdiiBiddddddIIdd}16B704
B184@0:8{tagVCStatisticsMessage=iidBBBB(?={?=IIIIIIddddd[64c]i}{?=IIIIIIIIIIIIddIIdIB{?=iIIIdddII}{?=SBBI}}{?=dddIIIIIQI}{?=IBBBIIdIB{?=iIIIdddII}}{?=CIIIIIIIIIddddIIII}{?=IIId}{?=iIIIdddII}{?=IIII}{?=IIIIIIBI}{?=IIIIfBBddIIIQ}{?=CCCQQQIIIQiI(?={?=CCSSCCCCCCCfBS[6I]}{?=CsscCCCCSSC})}{tagVCStatisticsVideoLossFeedback=ISCC})}16
[256i]
v40@0:8@16@24^{opaqueRTCReporting=}32
v24@0:8@"NSString"16
@"VCTextReceiver"
@"VCTextTransmitter"
@"<VCTextReceiverDelegate>"
@36@0:8S16@20^@28
{sockaddr_in="sin_len"C"sin_family"C"sin_port"S"sin_addr"{in_addr="s_addr"I}"sin_zero"[8c]}
@"NSObject"
@"NSObject<LoopbackSocketTunnelDelegate>"
{?="audioUnitModel"b1}
B28@0:8@16I24
q24@0:8@16
@44@0:8@16I24{VCRedundancyControllerVideoParameters_t=@IBC}28
v24@0:8^{?=*Q}16
@"<VCRedundancyControlAlgorithm>"
@28@0:8*16I24
@24@0:8[16C]16
r*16@0:8
v24@0:8[16C]16
I28@0:8*16I24
[16C]
@24@0:8^{tagSRTPINFO=ii{_opaque_pthread_mutex_t=q[56c]}{_opaque_pthread_cond_t=q[40c]}IISSIIQii[32C][14C][32C][14C][20C]{_opaque_pthread_mutex_t=q[56c]}^v^vII{os_unfair_lock_s=I}{tagSRTPCryptContext=^{_CCCryptor}}{tagSRTPTransformPolicy=iiiiiii}IB}16
^{tagSRTPINFO=ii{_opaque_pthread_mutex_t=q[56c]}{_opaque_pthread_cond_t=q[40c]}IISSIIQii[32C][14C][32C][14C][20C]{_opaque_pthread_mutex_t=q[56c]}^v^vII{os_unfair_lock_s=I}{tagSRTPCryptContext=^{_CCCryptor}}{tagSRTPTransformPolicy=iiiiiii}IB}16@0:8
{tagSRTPINFO="fSRTPInitialized"i"fCancelled"i"xWait"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}"cWait"{_opaque_pthread_cond_t="__sig"q"__opaque"[40c]}"dwSSRC"I"dwRTPROC"I"wFirstRTPSeq"S"wHighestRTPSeq"S"dwFirstRTCPSeq"I"dwHighestRTCPSeq"I"SRTPIndex"Q"mediaKeyLength"i"sessionKeyLength"i"MediaKey"[32C]"MasterSalt"[14C]"SessionKey"[32C]"SessionSalt"[14C]"SessionAuthenticationKey"[20C]"MKIAccess"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}"mediaKeyIndex"^v"mediaKeyIndexInPacket"^v"SRTCPIndex"I"dwDerivationRate"I"cryptContextLock"{os_unfair_lock_s="_os_unfair_lock_opaque"I}"cryptContext"{tagSRTPCryptContext="ccCryptorRef"^{_CCCryptor}}"policy"{tagSRTPTransformPolicy="cipherMode"i"mediaKeyLength"i"sessionKeyLength"i"sessionSaltLength"i"authenticationMode"i"sessionAuthenticationKeyLength"i"sessionAuthenticationTagLength"i}"operatingMode"I"enableEncryptionDebug"B}
v24@0:8^{tagSRTPINFO=ii{_opaque_pthread_mutex_t=q[56c]}{_opaque_pthread_cond_t=q[40c]}IISSIIQii[32C][14C][32C][14C][20C]{_opaque_pthread_mutex_t=q[56c]}^v^vII{os_unfair_lock_s=I}{tagSRTPCryptContext=^{_CCCryptor}}{tagSRTPTransformPolicy=iiiiiii}IB}16
v24@0:8^{?={tagSRTPExchangeInfo=[65c][29c]^v}I{tagSRTPExchangeInfo=[65c][29c]^v}Iii}16
i40@0:8^{?=[65c]i[65c]i^v}16@24^I32
i28@0:8^{?=[65c]i[65c]i^v}16I24
B32@0:8*16i24S28
B40@0:8^v16*24i32S36
@?16@0:8
@"VCEmulatedOutputQueue"
v40@0:8^S16C24^S28C36
v24@0:8r^{?=S[32{?=CC}]}16
v24@0:8^{VCRateControlMediaSuggestion=BBBBBBB}16
v56@0:8i16B20{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8I16I20I24I28
^{__CFDictionary=}16@0:8
v24@0:8^{opaqueCMSampleBuffer=}16
B40@0:8^Q16*24^{opaqueCMSampleBuffer=}32
B24@0:8^{opaqueCMSampleBuffer=}16
v28@0:8^{opaqueCMSampleBuffer=}16C24
i48@0:8*16Q24I32d36C44
i44@0:8*16i24I28d32C40
i68@0:8r*16^i24i32i36i40I44d48C56^i60
v28@0:8I16I20I24
^{tagVCRealTimeThread=II{_opaque_pthread_mutex_t=q[56c]}@^?^v^{OpaqueFigThread}i[60c]II}
^{opaqueCMBufferQueue=}
@"VCMediaStreamStats"
{?="encoderVTable"^{?}"type"i"encoderHandle"^{tagHANDLE}}
@"<VCCaptionsSource>"
v36@0:8q16B24@28
v28@0:8q16C24
v36@0:8q16B24@"NSError"28
v32@0:8q16@"VCCaptionsTranscription"24
v40@0:8q16*24@32
B48@0:8^{__CVBuffer=}16{?=qiIq}24
@48@0:8@16@24^{opaqueRTCReporting=}32@40
@32@0:8@16^B24
@"NSMutableSet"
@"VCIDRScheduler"
B28@0:8r^v16i24
@24@0:8I16C20
B20@0:8S16
@32@0:8B16B20B24i28
@36@0:8B16B20B24i28B32
@48@0:8i16i20i24@28B36B40i44
v28@0:8i16B20B24
v24@0:8B16B20
I28@0:8i16d20
@24@0:8i16i20
@36@0:8i16@20@28
i40@0:8I16i20@24@32
B28@0:8i16i20i24
B28@0:8i16@20
f24@0:8i16I20
I28@0:8q16i24
B24@0:8q16
v32@0:8@"VCAudioPowerSpectrumMeter"16@"NSDictionary"24
@44@0:8S16d20@28^@36
B48@0:8@16@24@32^@40
B40@0:8@16@24^@32
@36@0:8@16i24^@28
B56@0:8@16@24@32@40^@48
@32@0:8@16^@24
@"VCCellularAudioTap"
@"VCAudioRuleCollection"
@36@0:8i16@?20^@28
@44@0:8i16@?20@?28^@36
@40@0:8@16@?24^@32
@44@0:8@16@?24i32^@36
@52@0:8@16@?24@?32i40^@44
B48@0:8@16@?24@?32^@40
v32@0:8@16@?24
I24@0:8I16i20
I36@0:8@16@24I32
I24@0:8I16I20
@44@0:8@16q24@32I40
v36@0:8@16i24I28I32
@48@0:8@16@24I32I36^B40
S28@0:8S16@20
B36@0:8i16@20@28
@48@0:8@16@24I32@36I44
@52@0:8@16@24I32@36I44I48
B48@0:8@16@24@32@40
@40@0:8@16@24@32
@"NSSet"
@28@0:8I16@?20
@36@0:8I16@?20@28
I24@0:8q16
@36@0:8@16@24I32
C24@0:8q16
v24@0:8@"<VCMediaStreamSyncSourceDelegate>"16
v36@0:8@16I24q28
v40@0:8@"VCTelephonyInterface"16@"NSString"24@"NSNumber"32
v28@0:8@"VCTelephonyInterface"16B24
v36@0:8@"VCTelephonyInterface"16I24q28
v32@0:8@"VCMediaStreamRateAdaptation"16I24I28
I32@0:8I16i20d24
B32@0:8^{tagVCRTCPXRSummaryReport=BBBiISSIIiiiiCCCC}16*24
B32@0:8^{tagVCRTCPXRVoIPMetricsReport=CCCCSSSSCCCCCCCCCSSS}16*24
v28@0:8i16@?20
v24@0:8i16i20
v32@0:8q16q24
@28@0:8i16I20I24
@40@0:8@16@24^@32
B24@0:8i16B20
v24@0:8^{tagVCAudioReceiverConfig=I[4{tagVCAudioReceiverStream=^{tagHANDLE}SBB^{tagVCCryptor}iB^{tagVCAudioReceiver}^v^v}]^vIiIiiB^{opaqueRTCReporting}iB^{__CFString}^{__CFString}SBBBBBiB^v^?^?^?^{tagVCJBTargetEstimatorSynchronizer}^v^vIBIiBBQB}16
B32@0:8q16@24
^{_METER_INFO=B^{opaqueVCFFTMeter}}20@0:8i16
v24@0:8B16i20
B32@0:8^{_RTCP_RECEPTION_REPORT=IIIIIIIIC}16*24
v24@0:8^{ifnet_interface_advisory=(?={?=CCSiQQQQIIICCSSCCCC}{?={ifnet_interface_advisory_header=CCCC}{ifnet_interface_advisory_capacity=iQQQQIII}(?={ifnet_interface_advisory_wifi_context=CCSSCCCCCS[6I]}{ifnet_interface_advisory_cell_context=CsscCCCCSSCC})})}16
^{__CFDictionary=}24@0:8@16
^{__CFString=}16@0:8
v32@0:8^i16^I24
v40@0:8{_VCAudioCodecModeChangeEvent=iiiI{EVSRFParams=II}}16
v48@0:8{_VCAudioCodecModeChangeEvent=iiiI{EVSRFParams=II}}16B40B44
{tagVCAudioFrameFormat="format"{AudioStreamBasicDescription="mSampleRate"d"mFormatID"I"mFormatFlags"I"mBytesPerPacket"I"mFramesPerPacket"I"mBytesPerFrame"I"mChannelsPerFrame"I"mBitsPerChannel"I"mReserved"I}"samplesPerFrame"I}
@"DTMFEventHandler"
@"WRMClient"
@"VCAudioPayload"
@"VCAudioTransmitter"
@"VCTelephonyInterface"
@"NSNumber"
{_VCAudioStreamSinkContext="soundMeter"{_METER_INFO="frequencyMeteringEnabled"B"fftMeter"^{opaqueVCFFTMeter}}}
{_VCAudioStreamSourceContext="isRemoteMuted"B"soundMeter"{_METER_INFO="frequencyMeteringEnabled"B"fftMeter"^{opaqueVCFFTMeter}}"audioReceiver"^{tagVCAudioReceiver}"framesProcessed"I"volume"f"shouldPostProcessSamples"B"isSendOnly"B"isRemoteMediaStalled"B"lastReceivedAudioTimestamp"d"packetsSinceStallCount"i"remoteMediaStallTimeout"d"awdTimeReceiver"I"stallReportCount"C"transports"{_VCSingleLinkedList="head"^{_VCSingleLinkedListEntry}"initialized"B"compare"^?"countEntries"Q}"oneToOneStreamID"S"oneToOneStatisticsCollector"@"AVCStatisticsCollector""isMultiwayConfig"B"targetBitrate"I"delegate"@"<VCMediaStreamDelegate>""self"@"VCAudioStream""syncSourceDelegate"@"<VCMediaStreamSyncSourceDelegate>""momentsCollectorDelegate"@"<VCMomentsCollectorDelegate>""wrmInfo"^{tagWRMMetricsInfo}"defaultRtpHandle"^{tagHANDLE}}
{ifnet_interface_advisory=""(?=""{?="version"C"direction"C"_reserved"S"rate_trend_suggestion"i"timestamp"Q"max_bandwidth"Q"total_byte_count"Q"average_throughput"Q"flushable_queue_size"I"non_flushable_queue_size"I"average_delay"I"frequency_band"C"intermittent_state"C"estimated_intermittent_period"S"single_outage_period"S"bt_coex"C"quality_score_delay"C"quality_score_loss"C"quality_score_channel"C}""{?="header"{ifnet_interface_advisory_header="version"C"direction"C"interface_type"C"reserved"C}"capacity"{ifnet_interface_advisory_capacity="rate_trend_suggestion"i"timestamp"Q"max_bandwidth"Q"total_byte_count"Q"average_throughput"Q"flushable_queue_size"I"non_flushable_queue_size"I"average_delay"I}""(?="wifi_context"{ifnet_interface_advisory_wifi_context="frequency_band"C"intermittent_state"C"estimated_intermittent_period"S"single_outage_period"S"bt_coex"C"quality_score_delay"C"quality_score_loss"C"quality_score_channel"C"radio_coex"C"wlan_duty_cycle"S"wifi_observed_tx_bitrate"[6I]}"cell_context"{ifnet_interface_advisory_cell_context="radio_access_technology"C"reference_signal_level"s"signal_level"s"signal_quality"c"uplink_bler"C"downlink_bler"C"bandwidth_limitation_indication"C"cdrx_state"C"cdrx_cycle"S"estimated_outage_period"S"outage_state"C"__pad"C})})}
@24@0:8Q16
@"VCMediaNegotiationBlobV2BandwidthSettings"
@"VCMediaNegotiationBlobV2CameraSettingsU1"
@"VCMediaNegotiationBlobV2CodecFeatures"
@"VCMediaNegotiationBlobV2GeneralInfo"
@"VCMediaNegotiationBlobV2MicrophoneSettingsU1"
@"VCMediaNegotiationBlobV2MomentsSettings"
@"<VCStreamSychronizationDelegate>"16@0:8
v24@0:8@"<VCStreamSychronizationDelegate>"16
@"VCStreamOutput"16@0:8
v24@0:8@"VCStreamOutput"16
@40@0:8q16q24Q32
B24@0:8r^{tagVCAudioFrameFormat={AudioStreamBasicDescription=dIIIIIIII}I}16
@"VCStreamInputAudio"
@"VCAudioIOControllerClient"
^{PacketThread_s=}
@"VCStreamOutput"
^{_VCAudioIOControllerClientIO=^v^?@III^{opaqueVCAudioBufferList}}
{?="value"q"timescale"i"flags"I"epoch"q}
@"<VCCoreMotionManagerDelegate>"
@40@0:8@16I24i28^@32
@32@0:8i16I20^@24
v54@0:8r^v16I24{?=cSCSC}28^{?=IQSCc[12S]CS{?=SSSSS}dQBQ[16C]BB}38@?46
v60@0:8r^^v16^I24^{?=cSCSC}32i40^^{?}44@?52
@"IDSDatagramChannel"
v36@0:8S16@20I28I32
v28@0:8S16^{?=dCSIII}20
{?=dCSIII}16@0:8
i28@0:8B16@20
[128{?="requestTime"d"linkID"C"statsIdentifier"S"totalLocalMediaPacketSent"I"totalLocalMediaPacketReceived"I"totalServerStatsByteUsed"I}]
{?="capabilities"b1"supportedCodecs"b1}
@"VCEmulatedNetworkQueue"
d24@0:8I16I20
v40@0:8d16d24d32
B28@0:8*16I24
@"VCAudioStreamGroupCommonConfig"16@0:8
v24@0:8@"VCAudioStreamGroupCommonConfig"16
@"VCAudioStreamGroupCommonConfig"
@"VCSystemAudioCaptureSession"
@24@0:8i16B20
@36@0:8@16i24@28
v28@0:8^{opaqueCMSampleBuffer=}16I24
^{opaqueCMSampleBuffer=}20@0:8I16
^{tagVCCellularAudioTapIORealtimeContext=q^{_VCAudioPowerSpectrumSourceRealtimeContext}}16@0:8
{tagVCCellularAudioTapIORealtimeContext="streamToken"q"powerSpectrumSourceRealtimeContext"^{_VCAudioPowerSpectrumSourceRealtimeContext}}
B24@0:8@"<VCMediaStreamSyncSource>"16
v28@0:8@16c24
v36@0:8@16@24B32
v44@0:8@16B24@28@36
v32@0:8@16S24S28
v32@0:8@16S24i28
v24@0:8@"<VCMediaStreamProtocol>"16
v36@0:8@"<VCMediaStreamProtocol>"16B24d28
v32@0:8@"<VCMediaStreamProtocol>"16@"NSArray"24
v28@0:8@"<VCMediaStreamProtocol>"16c24
v36@0:8@"<VCMediaStreamProtocol>"16@"NSData"24B32
v28@0:8@"<VCMediaStreamProtocol>"16S24
v32@0:8@"<VCMediaStreamProtocol>"16@"NSString"24
v32@0:8@"<VCMediaStreamProtocol>"16@"NSDictionary"24
v44@0:8@"<VCMediaStreamProtocol>"16B24@"NSError"28@"NSDictionary"36
v28@0:8@"<VCMediaStreamProtocol>"16C24
v48@0:8@"<VCMediaStreamProtocol>"16{?=qiIq}24
v32@0:8@"<VCMediaStreamProtocol>"16S24S28
v32@0:8@"<VCMediaStreamProtocol>"16S24i28
B40@0:8@16q24^@32
@96@0:8I16I20I24I28I32I36I40I44B48B52I56@60@68I76I80I84C88I92
{CGSize=dd}16@0:8
v32@0:8{CGSize=dd}16
@"VCMediaNegotiationBlobV2SettingsU1"
{?="streamGroup"b1}
@36@0:8i16i20f24i28f32
@28@0:8i16i20f24
@32@0:8i16i20f24i28
v28@0:8i16i20f24
@32@0:8I16*20I28
[1500C]
v24@0:8^{tagVCSourceDestinationInfo=i(?={?={tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{?=BS}}{?=ii{tagIPPORT=i[16c](?=I[16C])S}i}{?=I{?=cSCSC}B}{?=@})I^{tagVCSourceDestinationInfo}^v}16
B24@0:8^{tagVCSourceDestinationInfo=i(?={?={tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{?=BS}}{?=ii{tagIPPORT=i[16c](?=I[16C])S}i}{?=I{?=cSCSC}B}{?=@})I^{tagVCSourceDestinationInfo}^v}16
q36@0:8@16B24^{?=BBBBB}28
S20@0:8S16
B24@0:8@"<VCConnectionProtocol>"16
q36@0:8@"<VCConnectionProtocol>"16B24^{?=BBBBB}28
@"NSUUID"16@0:8
@28@0:8^{tagCONNRESULT=IiiIiiSS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}IiiiiSiii^{tagCONNRESULT}i}16I24
@24@0:8^{tagCANDIDATEPAIR={tagCANDIDATE=iiI[8C]SS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}I}{tagCANDIDATE=iiI[8C]SS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}I}iSS[8C]{tagIPPORT=i[16c](?=I[16C])S}Iiiiiiiii^{tagCANDIDATEPARIR}}16
B24@0:8^{tagIPPORT=i[16c](?=I[16C])S}16
@24@0:8^{tagIPPORT=i[16c](?=I[16C])S}16
{tagIPPORT=i[16c](?=I[16C])S}24@0:8@16
@44@0:8@16@24I32@36
v36@0:8I16@20@28
B24@0:8^{tagStreamGroupStreamOptionalPackedPayload=SSC}16
v40@0:8^v16@24@32
B36@0:8@16@24I32
B36@0:8*16I24I28B32
B40@0:8^I16^B24I32C36
B28@0:8I16@20
B32@0:8@16^I24
B40@0:8@16@24^I32
v28@0:8I16@20
@36@0:8I16I20I24I28I32
@32@0:8I16I20I24I28
Q24@0:8@16
v32@0:8{_NSRange=QQ}16
@"VCMediaNegotiatorStreamGroupU1Configuration"
@"NSMutableOrderedSet"
@36@0:8I16I20I24^{OpaqueCMBlockBuffer=}28
^{OpaqueCMBlockBuffer=}16@0:8
^{OpaqueCMBlockBuffer=}
@40@0:8I16Q20Q28I36
@"VCSessionUplinkVideoStreamController"
@28@0:8I16^{opaqueRTCReporting=}20
{_VCVideoSourceToken=(?={?=b24b8}I)}28@0:8@16i24
@20@0:8{_VCVideoSourceToken=(?={?=b24b8}I)}16
@"VCVideoSourceTokenManager"
[4Q]
B24@0:8r^{tagVCSystemAudioCaptureControllerConfig={tagVCSystemAudioCaptureTapSettings=I(?=iI)^{__CFString}I}}16
@32@0:8^{tagVCSystemAudioCaptureControllerConfig={tagVCSystemAudioCaptureTapSettings=I(?=iI)^{__CFString}I}}16@24
i24@0:8^{tagVCSystemAudioCaptureControllerConfig={tagVCSystemAudioCaptureTapSettings=I(?=iI)^{__CFString}I}}16
@24@0:8r^{tagVCSystemAudioCaptureControllerConfig={tagVCSystemAudioCaptureTapSettings=I(?=iI)^{__CFString}I}}16
v24@0:8r^{tagVCSystemAudioCaptureControllerConfig={tagVCSystemAudioCaptureTapSettings=I(?=iI)^{__CFString}I}}16
{tagVCSystemAudioCaptureControllerConfig="tapSettings"{tagVCSystemAudioCaptureTapSettings="tapType"I""(?="audioProcessIdToTap"i"sessionTypeToTap"I)"captureContext"^{__CFString}"source"I}}
Q20@0:8i16
v24@0:8@"<VCMomentsMessengerDelegate>"16
B32@0:8@"NSDictionary"16^@24
v36@0:8C16C20@24I32
v36@0:8@16B24q28
@"VCMomentsHistory"
^{tagVCAudioRedPayload=i*iIBCCC}32@0:8^{tagVCAudioRedPayload=i*iIBCCC}16@24
B28@0:8^{tagVCAudioRedPayload=i*iIBCCC}16I24
*24@0:8^{tagVCAudioRedPayload=i*iIBCCC}16
^{tagVCAudioRedPayload=i*iIBCCC}20@0:8I16
@24@0:8^{tagVCAudioRedPayload=i*iIBCCC}16
B32@0:8@16^v24
^{tagVCAudioRedPayload=i*iIBCCC}24@0:8^{tagVCAudioRedPayload=i*iIBCCC}16
@40@0:8i16I20I24I28I32B36
{tagVCAudioRedPayload="payloadType"i"buffer"*"bufferLength"i"timestamp"I"isRedAudio"B"redCount"C"sequenceOffset"C"priority"C}
@"NSPointerArray"
[1472C]
[9{tagVCAudioRedPayload="payloadType"i"buffer"*"bufferLength"i"timestamp"I"isRedAudio"B"redCount"C"sequenceOffset"C"priority"C}]
B28@0:8^i16i24
@20@0:8B16
B32@0:8^@16^@24
v36@0:8i16i20^{imageTag=iiiiiiifi}24i32
v52@0:8i16i20@24i32^{imageTag=iiiiiiifi}36B44B48
v36@0:8i16^i20^i28
v28@0:8B16i20i24
B36@0:8^B16^i24i32
(tagNTP=Q{?=II})16@0:8
v24@0:8(tagNTP=Q{?=II})16
@"VCMediaNegotiatorAudioConfiguration"
@"VCVideoRuleCollections"
(tagNTP="wide"Q"time"{?="frac"I"sec"I})
@32@0:8^{tagHANDLE=i}16@24
v48@0:8^d16^d24^d32^d40
v32@0:8^I16^d24
v24@0:8^{VCRCMediaPLPFromRemoteInfo=SIII^I^d^d^d}16
v40@0:8^{VCRateControlMediaSuggestion=BBBBBBB}16^B24d32
B36@0:8C16S20S24^S28
v44@0:8I16I20I24d28^B36
v32@0:8I16C20I24B28
B24@0:8i16S20
v56@0:8d16I24d28I36I40d44B52
^{tagHANDLE=i}16@0:8
^{tagVCMediaQueue=}16@0:8
v24@0:8^{tagVCMediaQueue=}16
^{tagVCMediaQueue=}
@"SenderLargeFrameInfo"
q28@0:8@16B24
q32@0:8@16^{?=BBBBB}24
B36@0:8I16@20^I28
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
{_NSRange=QQ}16@0:8
@44@0:8I16@20{_NSRange=QQ}28
{_NSRange="location"Q"length"Q}
v48@0:8@16@24@32@40
{?="isFinal"b1"isLocal"b1}
i60@0:8^{tagCANDIDATEPAIR={tagCANDIDATE=iiI[8C]SS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}I}{tagCANDIDATE=iiI[8C]SS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}I}iSS[8C]{tagIPPORT=i[16c](?=I[16C])S}Iiiiiiiii^{tagCANDIDATEPARIR}}16i24^i28^i36^i44^i52
i28@0:8^{tagIPPORT=i[16c](?=I[16C])S}16B24
i56@0:8@16B24i28^i32^i40^i48
i48@0:8@16B24i28^i32^i40
v24@0:8i16B20
v40@0:8^{tagVCSourceDestinationInfo=i(?={?={tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{?=BS}}{?=ii{tagIPPORT=i[16c](?=I[16C])S}i}{?=I{?=cSCSC}B}{?=@})I^{tagVCSourceDestinationInfo}^v}16^B24^B32
@32@0:8^{tagVCSourceDestinationInfo=i(?={?={tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{?=BS}}{?=ii{tagIPPORT=i[16c](?=I[16C])S}i}{?=I{?=cSCSC}B}{?=@})I^{tagVCSourceDestinationInfo}^v}16^B24
v36@0:8C16i20i24B28B32
I24@0:8C16B20
@"<VCConnectionProtocol>"
d20@0:8B16
B32@0:8Q16Q24
@56@0:8^{__CVBuffer=}16{?=qiIq}24@48
@72@0:8^{__CVBuffer=}16^{__CVBuffer=}24{?=qiIq}32@56@64
v24@0:8^{__CVBuffer=}16
^{__CVBuffer=}16@0:8
{?=qiIq}16@0:8
v40@0:8{?=qiIq}16
^{__CVBuffer=}
v40@0:8C16B20C24C28@32
^{?=BBBBB}16@0:8
v28@0:8B16B20B24
v28@0:8C16@20
v36@0:8C16@20@28
v32@0:8C16@20B28
{?=@@}16@0:8
{?="preferRelayOverP2P"B"preferIPv6OverIPv4"B"preferNonVPN"B"e2eCriteriaEnabled"B"preferE2E"B}
{?="primaryConnection"@"<VCConnectionProtocol>""secondaryConnection"@"<VCConnectionProtocol>"}
@52@0:8I16@20@28^{?=i^{tagVCSecurityKeyHolder}^{tagVCSecurityKeyHolder}^{__CFData}^{__CFData}B}36@44
@64@0:8@16@24^@32^@40^I48^B56
v48@0:8@16@24d32@40
B52@0:8@16@24@32B40@44
B52@0:8@16@24I32@36@44
@52@0:8@16@24Q32B40@44
@"<VCControlChannelTransactionDelegate>"
v32@0:8@16^v24
v32@0:8@"VCSession"16@"NSDictionary"24
v36@0:8@16B24@28
v44@0:8@16@24B32@36
v40@0:8@16B24B28@32
v48@0:8@16@24B32B36@40
v52@0:8@16@24I32I36B40@44
v40@0:8@16@24I32I36
v44@0:8@16@24C32@36
v36@0:8@"VCSession"16B24@"NSError"28
v32@0:8@"VCSession"16@"NSError"24
v44@0:8@"VCSession"16@"NSString"24B32@"NSError"36
v44@0:8@"VCSession"16@"NSDictionary"24B32@"NSError"36
v40@0:8@"VCSession"16B24B28@"NSError"32
v48@0:8@"VCSession"16@"NSString"24B32B36@"NSError"40
v52@0:8@"VCSession"16@"NSString"24I32I36B40@"NSError"44
v40@0:8@"VCSession"16@"NSString"24I32I36
v36@0:8@"VCSession"16@"NSString"24B32
v44@0:8@"VCSession"16@"NSString"24C32@"NSString"36
v40@0:8@"VCSession"16@"NSString"24@"NSError"32
v24@0:8@"VCSession"16
@28@0:8q16I24
v28@0:8q16B24
B24@0:8B16S20
v28@0:8@"VCSessionBandwidthAllocationTableEntry"16B24
@"NSMutableArray"28@0:8q16I24
@"NSArray"24@0:8q16
@44@0:8q16I24^I28^B36
@"VCSessionBandwidthAllocationTable"
@28@0:8i16@20
@"<VCMediaNegotiatorProtocol>"
@32@0:8@16q24
B46@0:8r^v16I24{?=cSCSC}28^{?=IQSCc[12S]CS{?=SSSSS}dQBQ[16C]BB}38
@"VCDatagramChannelIDS"
@"VCEmulatedNetwork"
v24@0:8@"VCMediaControlInfo"16
i40@0:8^?16^?24^v32
i24@0:8^v16
^v40@0:8r*16Q24^{?=diIIIIISBB}32
^{__CFDictionary=}
@36@0:8S16d20@28
{_VCAudioPowerSpectrumMeterRealtimeContext="streams"{_VCSingleLinkedList="head"^{_VCSingleLinkedListEntry}"initialized"B"compare"^?"countEntries"Q}"eventQueue"^{opaqueCMSimpleQueue}"nextDeliveryTime"d"audioSpectrumRefreshRate"d"isProcessingOutput"{atomic_flag="_Value"AB}"nextHeatlhPrintTime"d"outputPowerSpectrums"^{__CFDictionary}"powerSpectrumMeterDelegate"@"powerSpectrumMeterDelegateContext"^v}
@"<VCMomentsMessenger>"
v40@0:8q16@24@32
v56@0:8q16@24@32@40@48
v28@0:8q16I24
v40@0:8q16@"NSDictionary"24@"NSError"32
v56@0:8q16@"NSDictionary"24@"NSURL"32@"NSURL"40@"NSError"48
v36@0:8q16@"NSDictionary"24B32
v40@0:8@16^{opaqueCMSampleBuffer=}24C32I36
v36@0:8@16^{opaqueVCAudioBufferList=}24I32
v40@0:8@"VCMediaStream"16^{opaqueCMSampleBuffer=}24C32I36
v36@0:8@"VCMediaStream"16^{opaqueVCAudioBufferList=}24I32
@"VCMoments"
B36@0:8C16B20B24d28
C28@0:8^{?=iiQ[128c]QQ}16B24
C24@0:8i16B20
v24@0:8f16I20
@"NSObject<VCAudioPowerLevelMonitorDelegate>"
@24@0:8^{tagVCVideoStreamReceiverConfig=^{tagHANDLE}@^{opaqueRTCReporting}Ii@B^v^?}16
v28@0:8B16Q20
v36@0:8B16I20I24d28
v24@0:8^{?=qiIq}16
{tagVCVideoPacketBufferConfig=SIii[200c]iBB^{__CFAllocator}BBB{tagVCVideoPacketBufferFrameDecryptionCallbackContext=^v^?}{tagVCVideoPacketBufferEnqueueFailedFrameToJitterBufferCallbackContext=^v^?}B^{tagVCNACKGenerator}{tagVCNACKGeneratorStoreBagsConfig=CffB[4f][4f]}}24@0:8^{_RTPMediaPacket=iiiSIISBdBBBQ[12S]CC{?=iiBQ}Q{VCBlockBuffer_t=^{OpaqueCMBlockBuffer}Q*}{VCBlockBuffer_t=^{OpaqueCMBlockBuffer}Q*}{VCBlockBuffer_t=^{OpaqueCMBlockBuffer}Q*}BBB}16
v36@0:8^{tagRTCP_RRB=Ib8b24IIII}16I24(tagNTP=Q{?=II})28
i40@0:8^{VCVideoReceiverSampleBuffer_t=^{__CFAllocator}{tagVCVideoDecodingArgs=iiISCBSBdiSBBSdBidBBBBQBI}^{OpaqueCMBlockBuffer}Q^{OpaqueCMBlockBuffer}{VCBlockBuffer_t=^{OpaqueCMBlockBuffer}Q*}{VCBlockBuffer_t=^{OpaqueCMBlockBuffer}Q*}{VCBlockBuffer_t=^{OpaqueCMBlockBuffer}Q*}{VCBlockBuffer_t=^{OpaqueCMBlockBuffer}Q*}i}16I24d28B36
v24@0:8^{opaqueCMFormatDescription=}16
i28@0:8^{opaqueCMSampleBuffer=}16B24
B28@0:8^{opaqueCMBufferQueue=}16I24
B24@0:8^{__CVBuffer=}16
i48@0:8^{__CVBuffer=}16{?=qiIq}24
^{OpaqueCMMemoryPool=}
^{OpaqueVTDecompressionSession=}
@"VCVideoStreamRateAdaptation"
^{opaqueCMFormatDescription=}
^{VideoPacketBuffer_t=}
^{OpaqueVCTransportStreamRunLoop=}
I24@0:8B16B20
I32@0:8C16B20B24B28
I28@0:8C16B20B24
I36@0:8I16C20B24B28B32
@"NSNumber"20@0:8I16
v28@0:8B16@"NSNumber"20
i32@0:8^v16^{__CFDictionary=}24
^v20@0:8I16
i28@0:8^v16I24
v24@0:8r^{tagVCSpatialAudioMetadataPositionalInfo=fffIII}16
B32@0:8@16I24C28
v44@0:8@16@24@32B40
@28@0:8@16B24
{_VCSessionParticipantCapabilities=BIiB}16@0:8
v32@0:8@16d24
C20@0:8B16
@32@0:8@16I24I28
B52@0:8@16@24@32@40I48
@48@0:8@16@24@32@40
i36@0:8^I16^Q24I32
v28@0:8^^{tagVCJBTargetEstimatorSynchronizer}16I24
v32@0:8{_VCSessionParticipantCapabilities=BIiB}16
@"TimingCollection"
{_VCSessionParticipantCapabilities="isPeace"B"participantType"I"controlChannelVersion"i"supportsGFTSwitchToOneToOne"B}
@"VCPositionalInfo"
@40@0:8I16B20@24@32
@44@0:8I16B20@24@32i40
B40@0:8^@16@24^@32
B40@0:8@16^i24^i32
B32@0:8^f16@24
B32@0:8@16^{CGSize=dd}24
v24@0:8@"<VCConnectionProtocol>"16
@"<VCVideoReceiverDelegate>"
@"<VCMediaStreamSyncSource>"
@"VCMediaStreamSynchronizer"
^{tagVCJBTargetEstimatorSynchronizer=}16@0:8
v24@0:8^{tagVCJBTargetEstimatorSynchronizer=}16
@"<VCMediaStreamGroupDelegate>"
@"<VCMediaCaptureController>"
@"VCSecurityKeyManager"
^{tagVCJBTargetEstimatorSynchronizer=}
@"VCNetworkFeedbackController"
{?="customVideoHeight"b1"customVideoWidth"b1"hdrModesSupported"b1"pixelFormats"b1"tilesPerFrame"b1"ltrpEnabled"b1}
@56@0:8@16^{opaqueCMFormatDescription=}24@32@40@48
@"VCVideoCapture"
@48@0:8^{tagHANDLE=i}16^{opaqueRTCReporting=}24@32I40i44
v24@0:8B16I20
v40@0:8I16I20d24I32B36
@"VCVideoStreamRateController"
I28@0:8i16Q20
@"<VCHardwareSettingsMacProtocol>"
@32@0:8r^{tagVCAudioRelayIOContext=^{tagVCAudioFrameFormat}^{tagVCAudioFrameFormat}^?^v^{opaqueVCAudioBufferList}f{tagVCAudioClientControllerTimeInfo=IIBBdIIQ}}16r^{tagVCAudioRelayIOContext=^{tagVCAudioFrameFormat}^{tagVCAudioFrameFormat}^?^v^{opaqueVCAudioBufferList}f{tagVCAudioClientControllerTimeInfo=IIBBdIIQ}}24
r^{_VCRemoteCodecInfo=Id}16@0:8
v24@0:8^{tagVCAudioRelayIOContext=^{tagVCAudioFrameFormat}^{tagVCAudioFrameFormat}^?^v^{opaqueVCAudioBufferList}f{tagVCAudioClientControllerTimeInfo=IIBBdIIQ}}16
r^{tagVCAudioRelayIOContext=^{tagVCAudioFrameFormat}^{tagVCAudioFrameFormat}^?^v^{opaqueVCAudioBufferList}f{tagVCAudioClientControllerTimeInfo=IIBBdIIQ}}16@0:8
r^{tagVCAudioFrameFormat={AudioStreamBasicDescription=dIIIIIIII}I}16@0:8
v24@0:8r^{tagVCAudioFrameFormat={AudioStreamBasicDescription=dIIIIIIII}I}16
B40@0:8d16@24^@32
^{opaqueVCAudioBufferList=}16@0:8
^{PacketThread_s=}16@0:8
{tagVCAudioRelayIOContext="clientFormat"^{tagVCAudioFrameFormat}"relayFormat"^{tagVCAudioFrameFormat}"callback"^?"callbackContext"^v"sampleBuffer"^{opaqueVCAudioBufferList}"powerRMS"f"timeInfo"{tagVCAudioClientControllerTimeInfo="clientSampleRate"I"controllerSampleRate"I"didHostTimeReferenceChange"B"isLastHostTimeValid"B"lastHostTime"d"lastClientTimestamp"I"timestampOffset"I"controllerTimestamp"Q}}
@24@0:8@?16
@40@0:8@?16I24I28@32
v24@0:8^B16
v48@0:8@16@24@32^v40
@"CADisplayLink"
@"NSRunLoop"
@52@0:8q16i24@28@36@44
B24@0:8^{__CFDictionary=}16
r^{__CFAllocator=}16@0:8
^{opaqueVCRemoteImageQueue=}
r^{__CFAllocator=}
v32@0:8^v16@24
@40@0:8I16I20B24B28q32
@48@0:8@16I24I28B32B36q40
@"NSMutableString"
d24@0:8d16
I24@0:8d16
@36@0:8I16@20q28
v36@0:8@"AVCScreenCapture"16B24@"NSError"28
v24@0:8@"AVCScreenCapture"16
@36@0:8Q16Q24I32
{?="ntpTime"b1"abSwitches"b1"screenRes"b1}
@56@0:8^{tagVCVideoReceiverConfig=I[9{tagVCVideoReceiverStreamConfig={tagVCVideoReceiverStreamIDInfo=SSSI[9S][9S]}^{tagHANDLE}^{__CFDictionary}BSCBB^{tagVCCryptor}^v^viBBBi}]iiqiiiIiiiiiiBBBBd^v^?^?^?^?^?^?^?QBSB^{tagWRMMetricsInfo}IBBBBBBBBBBBBB^vBBIBBS^{tagVCJBTargetEstimatorSynchronizer}^{__CFString}^{__CFString}IBBBiBB{tagVCNACKGeneratorStoreBagsConfig=CffB[4f][4f]}B}16@24^{opaqueRTCReporting=}32@40^{tagHANDLE=i}48
v24@0:8r*16
v52@0:8^{__CVBuffer=}16{?=qiIq}24C48
v24@0:8S16i20
v36@0:8^S16i24B28B32
{tagVCVideoReceiverConfig=I[9{tagVCVideoReceiverStreamConfig={tagVCVideoReceiverStreamIDInfo=SSSI[9S][9S]}^{tagHANDLE}^{__CFDictionary}BSCBB^{tagVCCryptor}^v^viBBBi}]iiqiiiIiiiiiiBBBBd^v^?^?^?^?^?^?^?QBSB^{tagWRMMetricsInfo}IBBBBBBBBBBBBB^vBBIBBS^{tagVCJBTargetEstimatorSynchronizer}^{__CFString}^{__CFString}IBBBiBB{tagVCNACKGeneratorStoreBagsConfig=CffB[4f][4f]}B}16@0:8
v1336@0:8{tagVCVideoReceiverConfig=I[9{tagVCVideoReceiverStreamConfig={tagVCVideoReceiverStreamIDInfo=SSSI[9S][9S]}^{tagHANDLE}^{__CFDictionary}BSCBB^{tagVCCryptor}^v^viBBBi}]iiqiiiIiiiiiiBBBBd^v^?^?^?^?^?^?^?QBSB^{tagWRMMetricsInfo}IBBBBBBBBBBBBB^vBBIBBS^{tagVCJBTargetEstimatorSynchronizer}^{__CFString}^{__CFString}IBBBiBB{tagVCNACKGeneratorStoreBagsConfig=CffB[4f][4f]}B}16
{tagVCVideoReceiverConfig="streamCount"I"streamConfigs"[9{tagVCVideoReceiverStreamConfig="streamInfo"{tagVCVideoReceiverStreamIDInfo="streamID"S"repairStreamID"S"baseStreamID"S"subStreamCount"I"subStreamIDs"[9S]"subStreamRepairIDs"[9S]}"rtpHandle"^{tagHANDLE}"featureListStrings"^{__CFDictionary}"onDemandIDR"B"framerate"S"tileIndex"C"isOneToOne"B"isTemporalScalingEnabled"B"sframeCryptor"^{tagVCCryptor}"mediaControlInfoGenerator"^v"statisticsCollector"^v"mode"i"isLTRPEnabled"B"isRTCPForLossFeedbackEnabled"B"isRTCPForLTRPAckEnabled"B"ltrAckRTCPPacketType"i}]"mode"i"jitterBufferMode"i"streamToken"q"audioTSRate"i"videoTSRate"i"enableVPBLogging"i"dumpID"I"enableControlByte"i"enableBitstreamCapture"i"enableRxDecodeYUVDump"i"enableUEP"i"enableRecvBitstreamDump"i"reportingParentID"i"shouldEnableFaceZoom"B"shouldEnableMLEnhance"B"useDisplayLink"B"enableDeferredAssembly"B"deferredAssemblyOffset"d"callbackContext"^v"remoteFrameCallback"^?"sampleBufferCallback"^?"streamSwitchCallback"^?"keyFrameGenerationCallback"^?"sendLTRAckCallback"^?"ackLTRFrameCallback"^?"modeSwitchCallback"^?"idsParticipantID"Q"triggerSoundAlarmOnRTPReceive"B"decoderNumOfTiles"S"useInternalRTPThreading"B"wrmInfo"^{tagWRMMetricsInfo}"maxDisplayRefreshRate"I"enableJitterBufferInReceiver"B"enableJitterBufferInPlayer"B"enableImmediateDecode"B"isLTRPEnabled"B"isAsyncDecodingEnabled"B"isReceiverSideVCRCFeedbackEnabled"B"isVCRCStatsOnlyVideoBased"B"fecHeaderV1Enabled"B"enableQueueAlarmForDisplay"B"useRTCPForFIR"B"sendRTCP_PSFB_FIR"B"enableJBDynamicModeSwitch"B"useInternalClockForPresentation"B"mediaControlInfoGenerator"^v"isVariableSliceModeEnabled"B"streamSwitchEnabled"B"cvoExtensionID"I"videoJBEnabled"B"enableAVLooseSync"B"targetDisplayAlarmCount"S"jbTargetEstimatorSynchronizer"^{tagVCJBTargetEstimatorSynchronizer}"participantId"^{__CFString}"sessionId"^{__CFString}"streamGroupID"I"isReferenceFrameEnabled"B"isLateFrameRecoveryEnabled"B"enableHighWatermarkQueueDiscard"B"externalPresentationClockType"i"isServerPacketRetransmissionEnabled"B"isRTTBasedFIRThrottlingEnabled"B"nackGeneratorStoreBagsConfig"{tagVCNACKGeneratorStoreBagsConfig="nackGeneratorStorebagConfigVersion"C"nackSeqNumAgingDuration"f"nackThrottlingBitRateLimitingMaxRatio"f"isExtraDelayForPacketRetransmissionsEnabled"B"nackThrottlingFactorBuckets"[4f]"nackThrottlingPlrBuckets"[4f]}"forceZeroRegionOfInterestOrigin"B}
@"VCVideoStreamRateAdaptationFeedbackOnly"
@"VCDisplayLink"
v24@0:8@"VCStreamInput"16
B40@0:8@16^@24^@32
v40@0:8*16@24@?32
v44@0:8*16@24i32@?36
v24@0:8B16C20
v24@0:8@"NSDictionary"16
v24@0:8@"NSArray"16
v32@0:8^?16^v24
r*20@0:8C16
i48@0:8^?16^?24^v32@?40
{?=BBi}48@0:8{?=CBBBBBBBiBB}16B32I36i40C44
i24@0:8^{?=iiQ[128c]QQ}16
i24@0:8i16B20
v24@0:8^{?=iiQ[128c]QQ}16
v32@0:8^q16^q24
v44@0:8^{tagVCSourceDestinationInfo=i(?={?={tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{?=BS}}{?=ii{tagIPPORT=i[16c](?=I[16C])S}i}{?=I{?=cSCSC}B}{?=@})I^{tagVCSourceDestinationInfo}^v}16i24B28B32i36B40
v40@0:8@16@24B32B36
v32@0:8{?=CBBBBBBBiBB}16
v32@0:8^{?=dBdd}16@24
B36@0:8@16i24d28
B32@0:8@16B24i28
^{tagVCSourceDestinationInfo=i(?={?={tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{?=BS}}{?=ii{tagIPPORT=i[16c](?=I[16C])S}i}{?=I{?=cSCSC}B}{?=@})I^{tagVCSourceDestinationInfo}^v}24@0:8r^{tagVCCMSourceDestinationInfoConfig=BBB}16
v28@0:8d16B24
v28@0:8S16d20
v36@0:8^{tagVCSourceDestinationInfo=i(?={?={tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{?=BS}}{?=ii{tagIPPORT=i[16c](?=I[16C])S}i}{?=I{?=cSCSC}B}{?=@})I^{tagVCSourceDestinationInfo}^v}16i24B28B32
v24@0:8^{?=dddddBi}16
B24@0:8^{?=dddddBi}16
v24@0:8S16B20
@"VCWifiAssistManager"
{?="lastReceivedPacketTime"d"lastReceivedPacketOnPrimaryTime"d"lastReportTime"d"maxPrimaryNoPacketInterval"d"noPacketInterval"d"isConnectionPaused"B"type"i}
@"VCWRMHandler"
@"VCDuplicationHandler"
@"VCConnectionSelector"
@"VCStatsRecorder"
@"VCLinkProbingHandler"
^{tagVCNWConnectionMonitor=}
@"VCCoreMotionManager"
{?="version"C"direction"C"interfaceType"C"timestamp"Q"maxThroughputBps"Q"totalByteCount"Q"flushableQueueSize"I"nonFlushableQueueSize"I"averageDelayMillisecond"I"averageThroughputBps"Q"rateTrendSuggestion"i"packetLossPerFrame"I""(?="wifi"{?="frequencyBand"C"intermittentState"C"estimatedIntermittentPeriod"S"singleOutagePeriod"S"btCoex"C"radioCoex"C"qualityScoreDelayRx"C"qualityScoreDelayTx"C"qualityScoreLossRx"C"qualityScoreLossTx"C"qualityScoreChannel"C"offChannelTimeRatio"f"detectedFrequentOffChannelActivity"B"wlanDutyCycle"S"wifiObservedTxBitrate"[6I]}"baseband"{?="radioAccessTechnology"C"referenceSignalLevel"s"signalLevel"s"signalQuality"c"uplinkBLER"C"downlinkBLER"C"bandwidthLimitationIndication"C"cdrxState"C"cdrxCycle"S"estimatedOutagePeriod"S"outageState"C})}
{?="applicationType"i"linkTypeSuggestion"i"linkTypeChangeReasonCode"Q"linkTypeChangeReasonString"[128c]"linkBandwidthMin"Q"linkBandwidthMax"Q}
v32@0:8^I16^I24
v24@0:8^{?=Q}16
v19@0:8{?=BBB}16
v52@0:8{?=IIIIIIIII}16
v24@0:8r^{?=iiiI}16
v28@0:8i16Q20
v24@0:8r^{?=QQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ}16
^{tagWRMMetricsInfo=B^{tagHANDLE}IIIIIIIIIIIIQQQi^?{?=^v^?^?}{_opaque_pthread_mutex_t=q[56c]}IIIIIIIIIQIIIIII}16@0:8
^{?=^v^?^?}16@0:8
@"<VCNetworkFeedbackControllerDelegate>"
@"VCWCMClient"
@"VCConnectionManager"
@"VCRecommendedNetworkSettings"
^{tagWRMMetricsInfo=B^{tagHANDLE}IIIIIIIIIIIIQQQi^?{?=^v^?^?}{_opaque_pthread_mutex_t=q[56c]}IIIIIIIIIQIIIIII}
^{?=^v^?^?}
{VCAudioClientSettings="isValid"B"enableAudioPreWarming"B"operatingMode"i"deviceRole"i}
@"VCAudioManager"
v90@0:8@16{?=S[32{?=CC}]}24
v28@0:8@"<VCRedundancyControllerProtocol>"16I24
v32@0:8@"<VCRedundancyControllerProtocol>"16d24
v90@0:8@"<VCRedundancyControllerProtocol>"16{?=S[32{?=CC}]}24
B32@0:8@16i24i28
v40@0:8@16I24@28I36
v32@0:8^{tagRTCPPACKET={tagRTCPCOMMON=b5b1b2b8S}(?={tagSR_RTCP=IIIIII[1{tagRTCP_RRB=Ib8b24IIII}]}{tagRR_RTCP=I[1{tagRTCP_RRB=Ib8b24IIII}]}{tagSDES_RTCP=I{tagRTCPSDES=CC[258c]}}{tagBYE_RTCP=I}{tagRTCP_APP=II}{tagRTCP_APP_LTRP={tagRTCP_APP=II}I}{tagFIR_RTCP=I[10S]}{tagNACK_RTCP=ISS}{tagRTCP_PSFB_PLI={tagRTCP_FBCOMMON=II}}{tagRTCP_PSFB_SLI={tagRTCP_FBCOMMON=II}I}{tagRTCP_PSFB_FIR={tagRTCP_FBCOMMON=II}IC[3C]}{tagRTCP_PSFB_TST={tagRTCP_FBCOMMON=II}II}{tagRTCP_PSFB_TST={tagRTCP_FBCOMMON=II}II}{tagRTCP_PSFB_ALFB_HEADER={tagRTCP_FBCOMMON=II}I}{tagRTCP_PSFB_LOSSFB={tagRTCP_PSFB_ALFB_HEADER={tagRTCP_FBCOMMON=II}I}{tagRTCP_CUSTOM_PSFB_LOSS_FB_INFO=ISCC}}{tagRTCP_PSFB_LTRACK={tagRTCP_PSFB_ALFB_HEADER={tagRTCP_FBCOMMON=II}I}I}{tagRTCP_RTPFB_GNACK={tagRTCP_FBCOMMON=II}SS}{tagRTCP_RTPFB_TMMB={tagRTCP_FBCOMMON=II}II}{tagRTCP_RTPFB_TMMB={tagRTCP_FBCOMMON=II}II}{tagVCRTCPXR=I[0I]}{tagRTCP_CUSTOM_SR={tagRTCP_APP=II}I{tagRTCP_CUSTOM_SENDER_INFO=IIIIb4b4}[1{tagRTCP_CUSTOM_RECEPTION_REPORT=Ib4b12SSCC}]}{tagRTCP_CUSTOM_RR={tagRTCP_APP=II}I{tagRTCP_CUSTOM_RECEIVER_INFO=b4b4}[1{tagRTCP_CUSTOM_RECEPTION_REPORT=Ib4b12SSCC}]}{tagRTCP_CUSTOM_RCTL={tagRTCP_APP=II}{tagRTCP_CUSTOM_RATE_CONTROL_INFO=[20C]}})}16(tagNTP=Q{?=II})24
^{opaqueVCVoiceDetector=}
^{tagVCAudioDucker=}
@44@0:8^{__CVBuffer=}16i24@28C36B40
{CGSize=dd}24@0:8q16
{CGSize=dd}32@0:8{CGSize=dd}16
q24@0:8i16i20
v40@0:8^{__CVBuffer=}16Q24Q32
{CGRect={CGPoint=dd}{CGSize=dd}}80@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGSize=dd}48{CGSize=dd}64
i40@0:8^^{__CVPixelBufferPool}16d24d32
q48@0:8{CGSize=dd}16{CGSize=dd}32
^{__CFString=}20@0:8i16
{CGSize=dd}56@0:8{CGSize=dd}16{CGSize=dd}32i48i52
v32@0:8@16^{__CVBuffer=}24
{CGSize=dd}24@0:8Q16
{tagVCStatisticsMessage=iidBBBB(?={?=IIIIIIddddd[64c]i}{?=IIIIIIIIIIIIddIIdIB{?=iIIIdddII}{?=SBBI}}{?=dddIIIIIQI}{?=IBBBIIdIB{?=iIIIdddII}}{?=CIIIIIIIIIddddIIII}{?=IIId}{?=iIIIdddII}{?=IIII}{?=IIIIIIBI}{?=IIIIfBBddIIIQ}{?=CCCQQQIIIQiI(?={?=CCSSCCCCCCCfBS[6I]}{?=CsscCCCCSSC})}{tagVCStatisticsVideoLossFeedback=ISCC})}24@0:8^{?=iSd(?={?=SCSCcIIII}{?=SSS[6{?=CS[500S]}]}{?=SS})}16
v24@0:8^{?=iSd(?={?=SCSCcIIII}{?=SSS[6{?=CS[500S]}]}{?=SS})}16
{?="type"i"version"S"arrivalTime"d"notes"(?="report"{?="radioTechnology"S"transmissionAntenna"C"numberOfFlows"S"flowType"C"transmissionPower"c"queueDepth1"I"queueDepth2"I"basebandTransmissionBytes"I"lastTransmissionTimestamp"I}"dropAck"{?="transactionID"S"totalNumDropped"S"numberOfPayloadTypes"S"PTSpecific"[6{?="payloadType"C"numberOfPacketDropped"S"awDroppedSN"[500S]}]}"codecRateChange"{?="currentBitrate"S"suggestedBitrate"S})}
{?="time"[15d]"bdcd"[15d]"delay"[15d]"frontIndex"i"rearIndex"i"size"I}
{?="time"[15d]"transmittedBytes"[15I]"nonFlushableQueueDepth"[15I]"frontIndex"i"rearIndex"i"size"I}
B40@0:8^{?=iSd(?={?=SCSCcIIII}{?=SSS[6{?=CS[500S]}]}{?=SS})}16d24^@32
v36@0:8C16S20S24^S28
@"VCBasebandMetrics"
C20@0:8I16
q32@0:8@16@24
@56@0:8@16C24q28I36I40I44I48I52
@84@0:8@16C24q28I36I40I44I48I52B56I60I64B68B72I76I80
@44@0:8@16C24q28I36I40
@"<VCSessionDownlinkBandwidthAllocatorClient>"
@"<VCSessionUplinkBandwidthAllocatorClient>"
Q32@0:8@16@24
Q56@0:8@16q24Q32q40Q48
B40@0:8Q16q24q32
@28@0:8I16^Q20
v40@0:8@16@"NSData"24@"NSString"32
v56@0:8q16q24q32@40@48
v28@0:8f16q20
v28@0:8r^v16i24
v48@0:8@16@24B32f36q40
@40@0:8@16I24C28^i32
B28@0:8I16^@20
{tagIPPORT="iFlags"i"szIfName"[16c]"IP"(?="dwIPv4"I"abIPv6"[16C])"wPort"S}
@"NSMutableData"
@"TCPBufferPool"
*20@0:8i16
v24@0:8*16
^{tagBufferNode=*ii^{tagBufferNode}}
@36@0:8i16I20B24@28
B32@0:8^{tagVCSourceDestinationInfo=i(?={?={tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{?=BS}}{?=ii{tagIPPORT=i[16c](?=I[16C])S}i}{?=I{?=cSCSC}B}{?=@})I^{tagVCSourceDestinationInfo}^v}16@24
B24@0:8^i16
v32@0:8@16i24i28
v24@0:8i16I20
@36@0:8Q16i24^i28
v28@0:8i16@20
v28@0:8d16i24
v40@0:8i16i20@24@32
v24@0:8^{tagWRMMetricsInfo=B^{tagHANDLE}IIIIIIIIIIIIQQQi^?{?=^v^?^?}{_opaque_pthread_mutex_t=q[56c]}IIIIIIIIIQIIIIII}16
B68@0:8@16I24@28B36@40i48@52^@60
@28@0:8B16B20I24
@32@0:8@16I24B28
@56@0:8@16^I24@32d40^@48
B32@0:8B16B20^@24
B28@0:8B16^@20
B64@0:8^{opaqueVCAudioBufferList=}16^I24^d32*40*48^i56
^{opaqueRTCReporting=}16@0:8
v52@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16I48
^{tagVCAudioReceiver={tagVCAudioReceiverConfig=I[4{tagVCAudioReceiverStream=^{tagHANDLE}SBB^{tagVCCryptor}iB^{tagVCAudioReceiver}^v^v}]^vIiIiiB^{opaqueRTCReporting}iB^{__CFString}^{__CFString}SBBBBBiB^v^?^?^?^{tagVCJBTargetEstimatorSynchronizer}^v^vIBIiBBQB}^v^{opaqueVCJitterBuffer}B{tagVCAudioFrameFormat={AudioStreamBasicDescription=dIIIIIIII}I}d{?=qiIq}^{tagVCRealTimeThread}{tagVCAudioReceiverReportingTask=^{opaqueRTCReporting}i^{tagHANDLE}}BB{_opaque_pthread_mutex_t=q[56c]}{_opaque_pthread_mutex_t=q[56c]}{tagVCAudioDecoderList=^{tagDecoderSettings}I}I{tagVCAudioReceiverStatistics=AIIIIf}^{tagWRMMetricsInfo}^?{tagVCAudioReceiverCallbackContext=^v^?^?}^?{tagVCAudioReceiverCallbackContext=^v^?^?}I[2{_RTCPPacketList=(tagNTP=Q{?=II})C[10^{tagRTCPPACKET}]^{OpaqueCMBlockBuffer}*QI[1472C][12S]CBQ{?=^{_RTCPPacketList}}}]dI[300{tagPacketHistoryInfo=ISIBB}]SS{_opaque_pthread_mutex_t=q[56c]}^{tagVCAudioReceiverStream}SSdBSS{_VCAudioCodecModeChangeEvent=iiiI{EVSRFParams=II}}BSSSIBBQB^v^?^?^?^{tagVCJBTargetEstimatorSynchronizer}{tagVCJitterBufferWRMReportingMetrics=IIIIQQII}^vBdiddId^{tagVCAudioIssueDetector}iiIi^{tagVCAudioDump}{tagVCAudioDumpPayloadInfo=BiBB^{AudioStreamBasicDescription}}}16@0:8
@"NSObject<VCCallSessionDelegate>"
@"VCCallInfo"
@"VCMediaNegotiator"
@"VCSwitchManager"
@"VCVideoRule"
@"VCImageAttributeRules"
@"AVCRateController"
@"GKRingBuffer"
@"NSObject<VideoConferenceChannelQualityDelegate>"
@"VCCallLinkCongestionDetector"
@"VCSessionMessaging"
@"VCControlChannel"
@"VCControlChannelMultiWay"
@"VCBitrateArbiter"
^{tagVCAudioReceiver={tagVCAudioReceiverConfig=I[4{tagVCAudioReceiverStream=^{tagHANDLE}SBB^{tagVCCryptor}iB^{tagVCAudioReceiver}^v^v}]^vIiIiiB^{opaqueRTCReporting}iB^{__CFString}^{__CFString}SBBBBBiB^v^?^?^?^{tagVCJBTargetEstimatorSynchronizer}^v^vIBIiBBQB}^v^{opaqueVCJitterBuffer}B{tagVCAudioFrameFormat={AudioStreamBasicDescription=dIIIIIIII}I}d{?=qiIq}^{tagVCRealTimeThread}{tagVCAudioReceiverReportingTask=^{opaqueRTCReporting}i^{tagHANDLE}}BB{_opaque_pthread_mutex_t=q[56c]}{_opaque_pthread_mutex_t=q[56c]}{tagVCAudioDecoderList=^{tagDecoderSettings}I}I{tagVCAudioReceiverStatistics=AIIIIf}^{tagWRMMetricsInfo}^?{tagVCAudioReceiverCallbackContext=^v^?^?}^?{tagVCAudioReceiverCallbackContext=^v^?^?}I[2{_RTCPPacketList=(tagNTP=Q{?=II})C[10^{tagRTCPPACKET}]^{OpaqueCMBlockBuffer}*QI[1472C][12S]CBQ{?=^{_RTCPPacketList}}}]dI[300{tagPacketHistoryInfo=ISIBB}]SS{_opaque_pthread_mutex_t=q[56c]}^{tagVCAudioReceiverStream}SSdBSS{_VCAudioCodecModeChangeEvent=iiiI{EVSRFParams=II}}BSSSIBBQB^v^?^?^?^{tagVCJBTargetEstimatorSynchronizer}{tagVCJitterBufferWRMReportingMetrics=IIIIQQII}^vBdiddId^{tagVCAudioIssueDetector}iiIi^{tagVCAudioDump}{tagVCAudioDumpPayloadInfo=BiBB^{AudioStreamBasicDescription}}}
@"VCCaptionsReceiver"
@"VCRedundancyControllerVideo"
^{SKEStateOpaque=}
^{__CFData=}
@"VCSecureDataChannel"
@"VCTransportSession"
v36@0:8@"VCSecureDataChannel"16I24@"NSData"28
v24@0:8@"VCCaptionsTranscription"16
i56@0:8i16I20r*24*32^v40^i48
i32@0:8@16^I24
B40@0:8I16@20i28^@32
i32@0:8r^^{__CFData}16^i24
^{__SecIdentity=}16@0:8
q36@0:8B16q20@28
v48@0:8*16*24^v32^i40
B124@0:8^i16i24^i28i36^i40i48@52i60i64^^{imageTag}68^i76^^{imageTag}84^i92*100^i108^@116
i60@0:8I16r*20*28^v36^i44^@52
v48@0:8^^i16^i24^^i32^i40
v32@0:8^^i16^i24
@24@0:8^@16
i28@0:8^v16B24
B36@0:8i16@20B28B32
B36@0:8@16i24B28B32
i28@0:8^^i16i24
@28@0:8^i16i24
B28@0:8^@16B24
B60@0:8i16i20i24^i28^i36^i44^i52
v28@0:8i16r*20
v32@0:8q16d24
v32@0:8i16I20@24
i24@0:8B16B20
v24@0:8^{__SecIdentity=}16
@32@0:8i16@20B28
B40@0:8*16@24@32
r*20@0:8i16
v28@0:8B16i20B24
B32@0:8B16@20B28
i32@0:8^{tagHANDLE=i}16@24
i36@0:8^{tagHANDLE=i}16@24B32
v44@0:8@16@24I32@36
v32@0:8@"VCTransportSessionLegacy"16@"NSData"24
v32@0:8@"VCTransportSessionLegacy"16@"NSDictionary"24
i28@0:8@16i24
v32@0:8@"AVCRateController"16I24I28
i28@0:8@"NSString"16i24
v31@0:8^v16{VCRateControlMediaSuggestion=BBBBBBB}24
@32@0:8d16d24
v32@0:8*16*24
v28@0:8@"VCAudioPowerLevelMonitor"16B24
v40@0:8@"VCMoments"16@"NSDictionary"24@"NSString"32
I28@0:8i16@20
v68@0:8@16I24@28Q36@?44@52@60
v52@0:8@16I24@?28@36@44
@40@0:8@16^I24^@32
i24@0:8r*16
B36@0:8^B16I24^@28
B32@0:8B16I20^@24
B28@0:8d16I24
B84@0:8@16I24I28@32B40@44B52@56i64@68^@76
B80@0:8@16I24@28B36@40B48@52i60@64^@72
v36@0:8I16@20q28
{CGSize=dd}20@0:8I16
v32@0:8I16@20B28
v24@0:8i16S20
C20@0:8f16
f20@0:8C16
@"VideoConferenceManager"
^{opaqueVCFFTMeter=}
@"VCCallSession"
@"NSObject<VideoConferenceSpeakingDelegate>"
@"VCAudioPowerLevelMonitor"
@"GKNATObserver"
B24@0:8I16I20
I36@0:8I16I20I24*28
v28@0:8^I16I24
v40@0:8@16I24d28i36
v32@0:8C16@20I28
B32@0:8@16^{opaqueVCAudioBufferList=}24
i24@0:8^{opaqueVCAudioBufferList=}16
@24@0:8^{tagVCSourceDestinationInfo=i(?={?={tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{?=BS}}{?=ii{tagIPPORT=i[16c](?=I[16C])S}i}{?=I{?=cSCSC}B}{?=@})I^{tagVCSourceDestinationInfo}^v}16
v32@0:8I16B20@24
v32@0:8@16Q24
v44@0:8@16@24@32I40
v56@0:8@16B24I28@32@40@48
v40@0:8@16q24@32
v40@0:8@16*24*32
B80@0:8@16^{__CVBuffer=}24{?=qiIq}32@56@64B72B76
B56@0:8@16^@24@32@40i48B52
B32@0:8i16@20B28
B36@0:8@16^@24B32
B36@0:8@16B24^@28
v32@0:8B16B20B24B28
v48@0:8@16^{VoiceIOFarEndVersionInfo=[64C][64C]I}24r^{tagVCAudioFrameFormat={AudioStreamBasicDescription=dIIIIIIII}I}32@?40
v36@0:8@16I24d28
{AudioStreamBasicDescription=dIIIIIIII}16@0:8
v36@0:8@16I24i28i32
v56@0:8@"VCCallSession"16B24I28@"NSString"32@"NSString"40@"NSError"48
v40@0:8@"VCCallSession"16q24@"NSError"32
v32@0:8@"VCCallSession"16@"NSError"24
B80@0:8@"VCCallSession"16^{__CVBuffer=}24{?=qiIq}32@"VideoAttributes"56@"VideoAttributes"64B72B76
B36@0:8@"VCCallSession"16B24^@28
v36@0:8@"VCCallSession"16B24@"NSError"28
v32@0:8@"VCCallSession"16@"NSDictionary"24
v32@0:8@"VCCallSession"16d24
v28@0:8@"VCCallSession"16B24
v40@0:8@"VCCallSession"16*24*32
v32@0:8@"VCCallSession"16@"VideoAttributes"24
v36@0:8@"VCCallSession"16I24B28B32
v32@0:8@"VCCallSession"16I24B28
v32@0:8@"VCCallSession"16@"VCVideoRule"24
v36@0:8@"VCCallSession"16@"NSData"24I32
v44@0:8@"VCCallSession"16@"NSString"24@"NSString"32I40
v48@0:8@"VCCallSession"16@"VCVideoRule"24@"VCVideoRule"32@"NSString"40
v40@0:8@"VCCallSession"16@"NSData"24I32I36
v24@0:8@"VCCallSession"16
v32@0:8@"VCCallSession"16B24I28
v40@0:8@"VCCallSession"16B24I28@"NSError"32
v32@0:8@"VCCallSession"16I24I28
B56@0:8@"VCCallSession"16^@24@"VCVideoRule"32@"VCVideoRule"40i48B52
B32@0:8@"VCCallSession"16^@24
B36@0:8@"VCCallSession"16^@24B32
v48@0:8@"VCCallSession"16^{VoiceIOFarEndVersionInfo=[64C][64C]I}24r^{tagVCAudioFrameFormat={AudioStreamBasicDescription=dIIIIIIII}I}32@?<v@?B@"NSError">40
v32@0:8@"VCCallSession"16@?<v@?B@"NSError">24
v36@0:8@"VCCallSession"16I24d28
v36@0:8@"VCCallSession"16I24i28i32
B68@0:8^{opaqueCMSampleBuffer=}16{?=qiIq}24{?=BBiBBiC}48
@?<B@?^{opaqueCMSampleBuffer=}{?=qiIq}^{?=BBiBBiC}>16@0:8
@"VCVideoRule"16@0:8
v28@0:8^v16B24
@"VCRateControlMediaController"16@0:8
v24@0:8@"VCRateControlMediaController"16
d28@0:8I16I20I24
S24@0:8d16
d20@0:8i16
{?="time"[100d]"owrd"[100d]"frontIndex"i"rearIndex"i"size"I"nowrd"d"nowrdShort"d"nowrdAcc"d"isOWRDListTooShortDuringInitialRampUp"B}
[64{?="time"d"packetLossRate"d"packetLossRateVideo"d"isLossIncreasing"B}]
{?="confidence"b1"hasSpaceAfter"b1}
v40@0:8@16@24^{tagIPPORT=i[16c](?=I[16C])S}32
v40@0:8@"LoopbackSocketTunnel"16@"NSData"24^{tagIPPORT=i[16c](?=I[16C])S}32
v32@0:8C16B20B24B28
v40@0:8@"<VCConnectionProtocol>"16@"<VCConnectionProtocol>"24@"<VCConnectionProtocol>"32
v28@0:8@"<VCConnectionProtocol>"16B24
v28@0:8B16@"<VCConnectionProtocol>"20
v24@0:8@"NSNumber"16
B40@0:8@16B24B28^@32
v28@0:8f16I20B24
v24@0:8I16B20
v28@0:8B16I20i24
v32@0:8*16i24S28
v44@0:8^{tagCONNRESULT=IiiIiiSS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}IiiiiSiii^{tagCONNRESULT}i}16B24B28@32i40
B48@0:8@16@24B32C36^@40
@28@0:8I16^{tagCONNRESULT=IiiIiiSS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}IiiiiSiii^{tagCONNRESULT}i}20
v48@0:8B16B20d24@32@?40
@32@0:8*16i24B28
@40@0:8B16B20d24^@32
i44@0:8^*16I24^i28d36
{tagIPPORT=i[16c](?=I[16C])S}20@0:8B16
I24@0:8^{tagCONNRESULT=IiiIiiSS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}IiiiiSiii^{tagCONNRESULT}i}16
@"VCTransport"
^{__SecIdentity=}
@"TCPTunnelClient"
@"NSObject<VideoConferenceRealTimeChannel>"
@"LoopbackSocketTunnel"
@"NSCondition"
@"GKInterfaceListener"
{VoiceIOFarEndVersionInfo=[64C][64C]I}16@0:8
v148@0:8{VoiceIOFarEndVersionInfo=[64C][64C]I}16
^{tagVCAudioFrameFormat={AudioStreamBasicDescription=dIIIIIIII}I}16@0:8
{VoiceIOFarEndVersionInfo="farEndHwModel"[64C]"farEndOSVersion"[64C]"farEndAUVersion"I}
v24@0:8^{tagAudioFrame=iiBSI[800C]ii[16C]Ciidii^?^v^{tagDecoderSettings}BICS^{tagAudioFrame}^{tagAudioFrame}I}16
@24@0:8^{_VCTextReceiverConfiguration=^{tagHANDLE}IB}16
v32@0:8^{tagAudioPacket=iiiBSIiidi[1472C]i[256C]C[4^{tagAudioFrame}]idi^{tagDecoderSettings}BICS}16^{_RTPMediaPacket=iiiSIISBdBBBQ[12S]CC{?=iiBQ}Q{VCBlockBuffer_t=^{OpaqueCMBlockBuffer}Q*}{VCBlockBuffer_t=^{OpaqueCMBlockBuffer}Q*}{VCBlockBuffer_t=^{OpaqueCMBlockBuffer}Q*}BBB}24
i24@0:8^{tagAudioPacket=iiiBSIiidi[1472C]i[256C]C[4^{tagAudioFrame}]idi^{tagDecoderSettings}BICS}16
v24@0:8^{tagVCRealTimeThreadParameters=i}16
v24@0:8^{tagAudioPacketArray=[100^{tagAudioPacket}]II}16
v32@0:8^{tagAudioPacket=iiiBSIiidi[1472C]i[256C]C[4^{tagAudioFrame}]idi^{tagDecoderSettings}BICS}16^{tagAudioPacketArray=[100^{tagAudioPacket}]II}24
^{tagAudioFrame=iiBSI[800C]ii[16C]Ciidii^?^v^{tagDecoderSettings}BICS^{tagAudioFrame}^{tagAudioFrame}I}40@0:8^{tagAudioPacket=iiiBSIiidi[1472C]i[256C]C[4^{tagAudioFrame}]idi^{tagDecoderSettings}BICS}16*24i32I36
B24@0:8^{tagAudioPacket=iiiBSIiidi[1472C]i[256C]C[4^{tagAudioFrame}]idi^{tagDecoderSettings}BICS}16
@"VCTextJitterBuffer"
v40@0:8@16I24B28@32
v36@0:8@16d24I32
v40@0:8@"VideoConference"16B24I28@"NSError"32
v36@0:8@"VideoConference"16I24@"NSError"28
v44@0:8@"VideoConference"16I24@"NSError"28@"NSDictionary"36
v48@0:8@"VideoConference"16B24I28@"NSDictionary"32@"NSError"40
v40@0:8@"VideoConference"16I24B28@"NSError"32
v36@0:8@"VideoConference"16d24I32
v32@0:8@"VideoConference"16B24I28
v28@0:8@"VideoConference"16I24
v36@0:8@"VideoConference"16@"VideoAttributes"24I32
v32@0:8@"VideoConference"16@"NSData"24
v28@0:8@"VideoConference"16f24
v28@0:8@"VideoConference"16B24
v36@0:8@"VideoConference"16I24@"NSDictionary"28
v36@0:8@"VideoConference"16I24B28B32
v32@0:8@"VideoConference"16I24B28
v36@0:8@"VideoConference"16@"NSData"24I32
v32@0:8@"VideoConference"16I24I28
B24@0:8^{tagHANDLE=i}16
@"VideoConference"
@"ICEResultWaitQueue"
B60@0:8@16I24@28@36@44@52
@44@0:8I16@20Q28@36
f24@0:8I16B20
B56@0:8@16I24@28@36B44@48
@"VCMediaNegotiationBlobAudioSettings"
@"VCMediaNegotiationBlobCaptionsSettings"
@"VCMediaNegotiationFaceTimeSettings"
@"VCMediaNegotiationBlobMomentsSettings"
@"VCMediaNegotiationBlobVideoSettings"
{?="ntpTime"b1"accessNetworkType"b1"basebandCodecSampleRate"b1"blobVersion"b1"mediaControlInfoVersion"b1"allowDynamicMaxBitrate"b1"allowsContentsChangeWithAspectPreservation"b1}
@40@0:8i16@20@28I36
B28@0:8B16@20
v32@0:8^{tagBWEOPTION=iiii}16@24
v36@0:8@16i24^{imageTag=iiiiiiifi}28
v32@0:8@16^{imageTag=iiiiiiifi}24
v36@0:8i16@20@28
v40@0:8i16^{imageTag=iiiiiiifi}20i28@32
v44@0:8@16C24i28i32@36
v40@0:8@16@24i32i36
B36@0:8@16i24i28i32
B32@0:8^i16^i24
v24@0:8^{?=i^{tagVCSecurityKeyHolder}^{tagVCSecurityKeyHolder}^{__CFData}^{__CFData}B}16
v36@0:8@"VCSessionParticipant"16B24@"NSError"28
v32@0:8@"VCSessionParticipant"16@"NSError"24
I20@0:8C16
I20@0:8S16
B24@0:8@"NSDictionary"16
v44@0:8@16I24I28B32@36
v36@0:8@16C24@28
v36@0:8@16S24I28i32
v40@0:8@"VCSessionParticipant"16B24B28@"NSError"32
v28@0:8@"VCSessionParticipant"16B24
v44@0:8@"VCSessionParticipant"16I24I28B32@"NSError"36
v32@0:8@"VCSessionParticipant"16I24I28
v36@0:8@"VCSessionParticipant"16C24@"NSString"28
v28@0:8@"VCSessionParticipant"16I24
v36@0:8@"VCSessionParticipant"16S24I28i32
v32@0:8@"VCSessionParticipant"16S24S28
v24@0:8@"VCSessionParticipant"16
v32@0:8@"VCSessionParticipant"16d24
v24@0:8@"VCRecommendedNetworkSettings"16
v24@0:8@"VideoAttributes"16
@56@0:8@16@24@32@40i48B52
v24@0:8^{?=I^{__CFString}^{__CFDate}iB^v@^{__CFString}^{__CFString}^{__CFDictionary}@?}16
*20@0:8I16
v28@0:8S16@20
v24@0:8^{?=IIIIIIIII}16
i28@0:8I16Q20
v32@0:8@16B24B28
v32@0:8d16I24i28
B32@0:8@16^B24
B40@0:8@16(tagNTP=Q{?=II})24^B32
B32@0:8^{?=i^{tagVCSecurityKeyHolder}^{tagVCSecurityKeyHolder}^{__CFData}^{__CFData}B}16@24
v36@0:8S16@20@28
v44@0:8S16@20@28@36
v48@0:8S16@20@28@36S44
v56@0:8^{__CFDictionary=}16S24@28@36@44S52
@24@0:8r^{?=I[5I]Id{CGSize=dd}dIdII}16
v28@0:8I16i20i24
@"<VCSessionDelegate>"
@"VCSessionConfiguration"
@"VCSessionParticipantLocal"
@"VCSessionStatsController"
{_VCSessionOneToOneSettings="rateController"@"AVCRateController""mediaController"@"VCRateControlMediaController""mediaQueue"^{tagHANDLE}"vcMediaQueue"^{tagVCMediaQueue}"receivedFirstConnection"B"startedOneToOne"B}
@"VCSessionDownlinkBandwidthAllocator"
@"NSError"
@"VCSessionPresentationInfo"
@"VCSessionBitrateArbiter"
@32@0:8r^{tagVCAudioFrameFormat={AudioStreamBasicDescription=dIIIIIIII}I}16r^{_VCRemoteCodecInfo=Id}24
v32@0:8^{AudioEventQueue_t=}16@24
@"VCAudioRelayIOControllerSettings"
@24@0:8^{?=i{tagVCAudioFrameFormat={AudioStreamBasicDescription=dIIIIIIII}I}iiIi}16
B24@0:8^{?=i{tagVCAudioFrameFormat={AudioStreamBasicDescription=dIIIIIIII}I}iiIi}16
{AudioStreamBasicDescription="mSampleRate"d"mFormatID"I"mFormatFlags"I"mBytesPerPacket"I"mFramesPerPacket"I"mBytesPerFrame"I"mChannelsPerFrame"I"mBitsPerChannel"I"mReserved"I}
{?="status"b1}
i24@0:8I16i20
@"IDSDataChannelLinkContext"
@72@0:8C16{CGSize=dd}20{CGRect={CGPoint=dd}{CGSize=dd}}36f68
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
B156@0:8{?=IIIIIIddddd[64c]i}16i152
i24@0:8d16
B48@0:8d16d24d32d40
v36@0:8I16I20S24d28
[500{?="owrd"d"roundTripTime"d"roundTripTimeMinEnvelope"d"packetLossRate"d"tierIndex"i}]
@32@0:8i16B20B24I28
@24@0:8^{_VCTextTransmitterConfiguration=^{tagHANDLE}IBIf}16
v52@0:8@16I24^i28^*36^i44
{_VCTextTransmitterConfiguration="rtpHandle"^{tagHANDLE}"sampleRate"I"isRedEnabled"B"numRedundantPayloads"I"txIntervalMin"f}
@"VCAudioRedBuilder"
@"NSLock"
{?="rtpSSRC"b1}
B32@0:8^I16@24
{tagVCNetworkStreamIdentifiers=ISS}28@0:8B16B20B24
B32@0:8q16^I24
@"NSDictionary"24@0:8q16
^{opaqueCMFormatDescription=}20@0:8I16
^{opaqueCMFormatDescription=}16@0:8
B40@0:8@16@24I32I36
v44@0:8@16I24I28I32I36I40
@40@0:8@16q24B32I36
@32@0:8@16i24i28
v32@0:8@16C24I28
B48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
B24@0:8f16B20
@40@0:8@16@24B32I36
v32@0:8@16I24i28
{_VCSessionParticipantLocalOneToOneSettings=@@@@IIB}16@0:8
@"<VCSessionUplinkBandwidthAllocator>"
{_VCSessionParticipantLocalOneToOneSettings="audioRedundancyController"@"VCRedundancyControllerAudio""videoRedundancyController"@"VCRedundancyControllerVideo""streamInfo"@"NSMutableDictionary""switchManager"@"VCSwitchManager""targetBitrate"I"rateChangeCounter"I"endToEndConnectionReceived"B}
I36@0:8@16i24I28B32
@56@0:8@16^?24^?32@40^v48
@56@0:8i16i20^?24^?32@40^v48
i52@0:8^i16i24^{sockaddr_storage=CC[6c]q[112c]}28^I36^B44
i24@0:8^{OpaqueVCTransportStream=}16
i36@0:8i16@20^{sockaddr_storage=CC[6c]q[112c]}28
i48@0:8^i16^i24^{sockaddr_storage=CC[6c]q[112c]}32^I40
i52@0:8I16^i20^i28^{sockaddr_storage=CC[6c]q[112c]}36^I44
i44@0:8i16i20^{sockaddr_storage=CC[6c]q[112c]}24I32^i36
{sockaddr_storage="ss_len"C"ss_family"C"__ss_pad1"[6c]"__ss_align"q"__ss_pad2"[112c]}
@"VCNetworkAddress"
[16c]
@56@0:8q16q24@32@40@48
@64@0:8q16q24q32@40@48@56
@40@0:8q16q24@32
@28@0:8I16C20i24
@56@0:8i16I20C24i28q32q40Q48
v28@0:8B16@"NSError"20
@24@0:8^{_VCAudioIOInitConfiguration=IIiiICB@i@^?^v@^?^vIIBQIqqQ}16
v24@0:8^{_VCAudioIOInitConfiguration=IIiiICB@i@^?^v@^?^vIIBQIqqQ}16
B60@0:8i16i20C24q28q36B44Q48I56
v24@0:8^{VoiceIOFarEndVersionInfo=[64C][64C]I}16
@"<VCAudioIOControllerControl>"
{_VCAudioEndpointData="converter"^{SoundDec_t}"isConverterNeeded"B"isAccumulatorNeeded"B"samplesPerFrame"I"sampleBuffer"^{opaqueVCAudioBufferList}"clientBuffer"^{opaqueVCAudioBufferList}"controllerBuffer"^{opaqueVCAudioBufferList}"isLastHostTimeValid"B"lastHostTime"d"lastTimestamp"I"timestampOffset"I"controllerChanged"B"isMuted"B"framesProcessed"I"delegate"@"<VCAudioIOSink><VCAudioIOSource>""clientCallback"^?"clientContext"^v}
@32@0:8i16B20I24B28
[300{tagVCStatisticsMessage="type"i"priority"i"arrivalTime"d"isVCRCInternal"B"shouldFlushAndProcess"B"shouldDrainAndProcess"B"statisticsUpdateOnly"B""(?="baseband"{?="queueDepth1"I"queueDepth2"I"txBitrate"I"averageBitrate"I"averageBitrateShort"I"averageBitrateLong"I"averageQueueDepth"d"expectedQueuingDelay"d"bdcd"d"normalizedBDCD"d"normalizedDelay"d"bbString"[64c]"radioTechnology"i}"feedback"{?="sendTimestamp"I"queuingDelay"I"remoteBWEstimation"I"remoteBWEStability"I"maxVideoBurstyLoss"I"audioConsecutiveLoss"I"mostBurstyLoss"I"audioReceivedPackets"I"videoReceivedPackets"I"totalSentPackets"I"echoedSendTimestamp"I"mediaTimestamp"I"owrd"d"packetLossRate"d"actualBitrate"I"instantBitrate"I"roundTripTime"d"receiveQueueTarget"I"isPacketReceivedValid"B"packetReceived"{?="packetType"i"packetId"I"sampleRate"I"totalPacketsReceived"I"receiveTimestamp"d"owrd"d"targetJitterQueueSize"d"bandwidthEstimation"I"localBurstyLoss"I}"connectionStats"{?="sequenceNumber"S"isDuplicatePacket"B"isReceivedOnPrimary"B"connectionStatsBuffer"I}}"network"{?="packetLossPercentage"d"packetLossPercentageAudio"d"packetLossPercentageVideo"d"burstPacketLoss"I"roundTripTimeMilliseconds"I"isNetworkCongested"I"owrd"I"targetBitrate"I"statisticsID"Q"videoPacketsReceived"I}"probing"{?="estimatorID"I"deregisterEstimator"B"isProbingSequence"B"isEndOfProbingSequence"B"probingSequenceID"I"messageLength"I"arrivalTime"d"mediaTimestamp"I"isPacketReceivedValid"B"packetReceived"{?="packetType"i"packetId"I"sampleRate"I"totalPacketsReceived"I"receiveTimestamp"d"owrd"d"targetJitterQueueSize"d"bandwidthEstimation"I"localBurstyLoss"I}}"serverStats"{?="linkID"C"sendTimestamp"I"receiveTimestamp"I"totalPacketSent"I"totalPacketReceived"I"totalByteSent"I"totalByteReceived"I"serverStatsByteUsed"I"bandwidthSample"I"bandwidthEstimation"I"roundTripTime"d"owrd"d"packetLossRate"d"packetLossRateShortWindow"d"actualBitrate"I"instantBitrate"I"serverStatsBitrate"I"expectedBitrate"I}"packetSent"{?="packetId"I"totalPacketsSent"I"totalBytesSent"I"sendTimestamp"d}"packetReceived"{?="packetType"i"packetId"I"sampleRate"I"totalPacketsReceived"I"receiveTimestamp"d"owrd"d"targetJitterQueueSize"d"bandwidthEstimation"I"localBurstyLoss"I}"rtcpRR"{?="ssrc"I"packetLossPercentage"I"lastSequenceNumber"I"roundTripTimeMilliseconds"I}"config"{?="mode"I"remoteRadioAccessTechnology"I"localRadioAccessTechnology"I"maxBitrate"I"minBitrate"I"initialBitrate"I"isTrafficBursty"B"featureFlags"I}"mediaEvent"{?="mediaEventType"I"additionalFlushCount"I"transactionID"I"audioStallBitrate"I"audioErasure"f"isKeyFrame"B"isTransitionToFEC"B"videoStallTimeDelta"d"videoStallTimeTotal"d"refreshFrameTimestamp"I"refreshFramePayloadType"I"refreshFramePacketCount"I"idsParticipantID"Q}"nwConnection"{?="version"C"direction"C"interfaceType"C"timestamp"Q"maxThroughputBps"Q"totalByteCount"Q"flushableQueueSize"I"nonFlushableQueueSize"I"averageDelayMillisecond"I"averageThroughputBps"Q"rateTrendSuggestion"i"packetLossPerFrame"I""(?="wifi"{?="frequencyBand"C"intermittentState"C"estimatedIntermittentPeriod"S"singleOutagePeriod"S"btCoex"C"radioCoex"C"qualityScoreDelayRx"C"qualityScoreDelayTx"C"qualityScoreLossRx"C"qualityScoreLossTx"C"qualityScoreChannel"C"offChannelTimeRatio"f"detectedFrequentOffChannelActivity"B"wlanDutyCycle"S"wifiObservedTxBitrate"[6I]}"baseband"{?="radioAccessTechnology"C"referenceSignalLevel"s"signalLevel"s"signalQuality"c"uplinkBLER"C"downlinkBLER"C"bandwidthLimitationIndication"C"cdrxState"C"cdrxCycle"S"estimatedOutagePeriod"S"outageState"C})}"videoLossFeedback"{tagVCStatisticsVideoLossFeedback="frameRTPTimestamp"I"packetsReceived"S"frameSize"C"packetsLost"C})}]
@72@0:8q16{AudioStreamBasicDescription=dIIIIIIII}24d64
@24@0:8d16
@56@0:8@16@24^{opaqueCMFormatDescription=}32@40^@48
i24@0:8^{opaqueCMFormatDescription=}16
B32@0:8^{opaqueCMSampleBuffer=}16^@24
r^{opaqueCMFormatDescription=}16@0:8
[20c]
@60@0:8^{tagHANDLE=i}16^{opaqueRTCReporting=}24@32I40i44@48B56
i32@0:8@16d24
@"VCEmulatedNetworkAlgorithmQueueBandwidth"
@"VCEmulatedNetworkAlgorithmQueueLoss"
@"VCEmulatedNetworkAlgorithmQueueDelay"
@"VCScreenShare"
B24@0:8^{opaqueCMFormatDescription=}16
@"<VCStreamInputDelegate>"
@80@0:8@16I24I28^v32^?40^v48^?56i64B68Q72
^{_VCAudioIOControllerClientIO=^v^?@III^{opaqueVCAudioBufferList}}16@0:8
{_VCAudioIOControllerClientIO="processSamplesContext"^v"processSamples"^?"runLock"@"NSObject<OS_dispatch_semaphore>""audioSessionId"I"channelIndex"I"channelCount"I"controllerAudioBuffer"^{opaqueVCAudioBufferList}}
@28@0:8I16I20I24
B32@0:8^^I16^I24
B28@0:8^I16I24
^I24@0:8^I16
@"AVInternalDeviceList"
I24@0:8^I16
[3I]
I24@0:8I16B20
@48@0:8Q16@24@32@40
{tagAVCPositionalInfo=I{CGSize=dd}ddd}16@0:8
v64@0:8{tagAVCPositionalInfo=I{CGSize=dd}ddd}16
v36@0:8I16I20B24@28
v40@0:8I16I20I24B28@32
v56@0:8I16B20r*24*32@40@?48
v32@0:8B16B20@24
q20@0:8I16
Q20@0:8I16
@"VCXPCClientShared"
@48@0:8q16@24@32^@40
v28@0:8i16^{FigRemoteOperation=iiQ^{__CFString}(?={?=^{__CFDictionary}^{__CFDictionary}}{?=^v^{__IOSurface}^{__IOSurface}}{?=^{opaqueCMSampleBuffer}Q}{?=^{opaqueCMFormatDescription}}{?=q^{opaqueCMFormatDescription}})}20
@"VCWeakObjectHolder"
@44@0:8q16C24@28^@36
@36@0:8@16C24^@28
@32@0:8@16^{opaqueRTCReporting=}24
@64@0:8@16^{opaqueRTCReporting=}24^?32^?40@48^v56
v24@0:8^{OpaqueVCTransportStream=}16
i36@0:8^^{OpaqueVCTransportStream}16I24@28
^AC16@0:8
v24@0:8^AC16
^{tagVCVideoTransmitterStreamConfig=^{tagHANDLE}SiI^{tagVCCryptor}}16@0:8
^{tagVCCryptor=}16@0:8
v24@0:8^{tagVCCryptor=}16
^{tagVCVideoTransmitterStreamConfig=^{tagHANDLE}SiI^{tagVCCryptor}}
^{tagVCCryptor=}
@40@0:8q16@24^@32
@"<AVCQoSMonitorDelegate>"
v32@0:8@"VideoAttributes"16q24
v40@0:8@"NSString"16@"NSString"24q32
@28@0:8q16i24
@32@0:8q16i24B28
@24@0:8I16i20
@"<VCRemoteVideoManagerDelegate>"
B36@0:8q16I24^@28
B32@0:8q16^@24
i28@0:8q16I24
{_VCAudioIOInitConfiguration=IIiiICB@i@^?^v@^?^vIIBQIqqQ}28@0:8I16^v20
@"<VCServerDelegate>"
v28@0:8^{_VCAudioPowerSpectrumEntry={_VCRange=ff}f}16I24
i40@0:8^{_opaque_pthread_cond_t=q[40c]}16d24^B32
{?="senderLanguages"b1"canDisplayCaptions"b1}
B32@0:8@"NSArray"16^@24
@"NSError"20@0:8B16
@"NSDictionary"32@0:8@"NSString"16^@24
@"NSDictionary"32@0:8@"NSObject<OS_xpc_object>"16^@24
@"NSDictionary"40@0:8@"NSDictionary"16@"NSObject<OS_xpc_object>"24^@32
v24@0:8^@16
v24@0:8^i16
v24@0:8^{tagVCNWConnectionMonitor=}16
^{tagHANDLE=i}32@0:8@16i24I28
v24@0:8I16C20
v36@0:8^v16q24I32
v24@0:8^{_RTCPPacketList=(tagNTP=Q{?=II})C[10^{tagRTCPPACKET}]^{OpaqueCMBlockBuffer}*QI[1472C][12S]CBQ{?=^{_RTCPPacketList}}}16
v28@0:8B16@?20
v24@0:8^{_RTCP_SEND_CONTROL_PARAMETERS=Ii*QC^SiSSI^{_RTCP_RECEPTION_REPORT}C^{tagRTCP_CUSTOM_RATE_CONTROL_INFO}^{tagVCRTCPXRSummaryReport}C^{tagVCRTCPXRVoIPMetricsReport}C[12S]CBQB^{tagRTCP_CUSTOM_PSFB_LOSS_FB_INFO}I}16
v48@0:8d16d24d32d40
d56@0:8d16d24d32d40d48
i36@0:8i16^v20^v28
@"<VCMediaStreamDelegate>"
@"<VCMomentsCollectorDelegate>"
{_VCMediaStreamTransportSetupInfo="setupType"C""(?="socketInfo"{?="rtpSocket"i"rtcpSocket"i}"ipInfo"{?="srcIPPORT"{tagIPPORT="iFlags"i"szIfName"[16c]"IP"(?="dwIPv4"I"abIPv6"[16C])"wPort"S}"srcRTPIPPort"{tagIPPORT="iFlags"i"szIfName"[16c]"IP"(?="dwIPv4"I"abIPv6"[16C])"wPort"S}}"transportStreamInfo"{?="context"^v"creationCallback"^?"isReceiveExternallyScheduled"B}"nwConnection"@"NSObject<OS_nw_connection>")"sourceRate"I"datagramChannelToken"I"isSessionIDValid"B}
@"VCMediaKeyIndex"
@"VCCallInfoBlob"
@"VCMediaStreamRateAdaptation"
v23@0:8i16{?=BBB}20
@"NSObject<OS_xpc_object>"
{?="reportImmediateMetricsEnabled"B"reportRtpErasureMetricsEnabled"B"allowPreWarmCellEnabled"B}
@48@0:8@16d24{_NSRange=QQ}32
@36@0:8q16B24I28I32
B48@0:8@16d24{_NSRange=QQ}32
@"NSLocale"
i24@0:8^@16
B36@0:8@16I24@28
[256I]
@"NSObject<VCRedundancyControllerProtocol>"
v48@0:8@16I24@28@36I44
@"<VCRedundancyControllerProtocol>"
{?="landscapeAspectRatioX"b1"landscapeAspectRatioY"b1"mismatchedDisplayAspectRatioX"b1"mismatchedDisplayAspectRatioY"b1"portraitAspectRatioX"b1"portraitAspectRatioY"b1"rtpSSRC"b1}
v32@0:8*16@24
v48@0:8*16@24@?32@40
v48@0:8*16@24@32@?40
v56@0:8*16@24@32@?40@48
v60@0:8*16@24@32@?40@48i56
@24@0:8*16
@32@0:8*16@24
@40@0:8*16@24@32
v32@0:8*16@?24
v40@0:8*16@?24@32
v44@0:8*16@?24@32i40
@44@0:8q16i24@28^i36
{?="cap2G"b1"cap3G"b1"cap5G"b1"capLTE"b1"capWifi"b1}
B36@0:8@16i24i28I32
@28@0:8@16i24
B56@0:8C16i20C24@28@36@44B52
@"VCMediaNegotiatorResultsCaptions"
@32@0:8^?16@24
v24@0:8^{ConnectionStatsHistory=C[5C][2[5C]][2[5C]]}16
v32@0:8^{ConnectionStatsHistory=C[5C][2[5C]][2[5C]]}16i24B28
v28@0:8^{ConnectionStatsHistory=C[5C][2[5C]][2[5C]]}16i24
B24@0:8*16
B28@0:8*16i24
B36@0:8^{ConnectionStatsHistory=C[5C][2[5C]][2[5C]]}16i24^{ConnectionStatsHistory=C[5C][2[5C]][2[5C]]}28
{ConnectionStatsHistory="latestConnectionStatsIndex"C"totalPacketsReceived"[5C]"connectionStats"[2[5C]]"connectionStatsRatio"[2[5C]]}
{ConnectionStats="totalPacketsReceived"C"connectionStats"[2C]"currentIndex"C"startTime"d}
[1024{ConnectionStatsSequenceNumberData="seqNumber"S"receivedTimestamp"d}]
B32@0:8^{_VCMediaStreamConfigurationProviderAudio=II{_VCMediaStreamConfigurationProviderAudioBitrateInfo=iIII}I[4{_VCMediaStreamConfigurationProviderAudioPayload=qi}]I[4I]iBIII[9q]}16q24
v48@0:8^I16^I24^f32I40I44
v56@0:8^I16^I24^f32I40I44^{_VCMediaStreamConfigurationProviderAudio=II{_VCMediaStreamConfigurationProviderAudioBitrateInfo=iIII}I[4{_VCMediaStreamConfigurationProviderAudioPayload=qi}]I[4I]iBIII[9q]}48
B28@0:8^{_VCMediaStreamConfigurationProviderAudio=II{_VCMediaStreamConfigurationProviderAudioBitrateInfo=iIII}I[4{_VCMediaStreamConfigurationProviderAudioPayload=qi}]I[4I]iBIII[9q]}16B24
B24@0:8^{_VCMediaStreamConfigurationProviderVideo=qIIIIIiIBI}16
@40@0:8@16q24@32
i24@0:8^{_VCMediaStreamConfigurationProviderVideo=qIIIIIiIBI}16
B28@0:8^{_VCMediaStreamConfigurationProviderVideo=qIIIIIiIBI}16I24
v32@0:8^^{_VCMediaStreamConfigurationProviderAudio}16^I24
B40@0:8^{_VCMediaStreamConfigurationProviderAudio=II{_VCMediaStreamConfigurationProviderAudioBitrateInfo=iIII}I[4{_VCMediaStreamConfigurationProviderAudioPayload=qi}]I[4I]iBIII[9q]}16I24@28B36
@32@0:8^{_VCMediaStreamConfigurationProviderAudio=II{_VCMediaStreamConfigurationProviderAudioBitrateInfo=iIII}I[4{_VCMediaStreamConfigurationProviderAudioPayload=qi}]I[4I]iBIII[9q]}16@24
@"<VCIDSStreamIDGenerator>"
v40@0:8@16^{__CVBuffer=}24^{__CFDictionary=}32
{VCInfoDetails=Bff{CGSize=dd}^{__CFDictionary}q@{VCOverlayAudioInfo=iiii}{VCOverlayVideoInfo=iiiiii}}16@0:8
v112@0:8{VCInfoDetails=Bff{CGSize=dd}^{__CFDictionary}q@{VCOverlayAudioInfo=iiii}{VCOverlayVideoInfo=iiiiii}}16
^{CGContext=}
{VCInfoDetails="isLocalVideo"B"averageFrameRate"f"currentFrameRate"f"currentDimensions"{CGSize="width"d"height"d}"storedAttributes"^{__CFDictionary}"streamToken"q"streamOutput"@"VCStreamOutput""audioInfo"{VCOverlayAudioInfo="bitrateTotal"i"birateMedia"i"codec"i"streamID"i}"videoInfo"{VCOverlayVideoInfo="fps"i"bitrateTotal"i"birateMedia"i"currentFECLevel"i"codec"i"streamID"i}}
@44@0:8@16i24@28@36
@28@0:8^{tagHANDLE=i}16I24
B64@0:8@16^{_VCMediaStreamTransportSetupInfo=C(?={?=ii}{?={tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}}{?=^v^?B}@)IIB}24B32B36@40@48^@56
^{tagVCCryptor=}36@0:8@16I24^@28
i32@0:8^{tagSRTPExchangeInfo=[65c][29c]^v}16@24
B32@0:8^{_VCMediaStreamTransportSetupInfo=C(?={?=ii}{?={tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}}{?=^v^?B}@)IIB}16^@24
B32@0:8^i16^d24
@"VCMediaStreamConfig"
{?="context"^v"creationCallback"^?"isReceiveExternallyScheduled"B}
@"NSObject<OS_os_transaction>"
^{OpaqueFigCFWeakReferenceHolder=}
v48@0:8*16@24@32@40
v40@0:8*16@24@32
@32@0:8C16d20i28
@28@0:8C16d20
B40@0:8^i16^i24^f32
^{_VCBitrateConfiguration=SSSSS}16@0:8
v40@0:8@16*24@?32
v32@0:8@16*24
B32@0:8^{__CVBuffer=}16q24
@"VCVideoFrameBufferPool"
@32@0:8i16Q20B28
Q20@0:8B16
@52@0:8@16@24I32I36i40B44B48
B44@0:8@16I24I28i32I36B40
@64@0:8{?=i^{__CFArray}^{__CFArray}^{__CFArray}IBBIBBB}16
B64@0:8{?=i^{__CFArray}^{__CFArray}^{__CFArray}IBBIBBB}16
v64@0:8{?=i^{__CFArray}^{__CFArray}^{__CFArray}IBBIBBB}16
@28@0:8Q16i24
@32@0:8Q16Q24
{?=i^{__CFArray}^{__CFArray}^{__CFArray}IBBIBBB}16@0:8
@"VCAudioTier"
@"BitrateLimits"
{?="mode"i"supportedAudioPayloadConfigs"^{__CFArray}"supportedPacketsPerBundle"^{__CFArray}"supportedRedNumPayloads"^{__CFArray}"headerSize"I"usingCellular"B"isUseCaseWatchContinuity"B"defaultMaxCap"I"alwaysOnAudioRedundancyEnabled"B"cellularAllowRedLowBitratesEnabled"B"wifiAllowRedLowBitratesEnabled"B}
^{_VCHardwareConfiguration=q{_VCVideoFormat=III}I^{_VCVideoFormat}I^{_VCVideoFormat}{_VCBitrateConfiguration=SSSSS}}24@0:8i16C20
B56@0:8i16C20C24^{_VCVideoFormat=III}28I36@40^B48
v36@0:8@16C24i28C32
v44@0:8i16i20i24i28i32i36i40
v40@0:8^@16i24^@28i36
v48@0:8d16d24d32I40I44
S20@0:8I16
@"<VCVideoStreamRateControlProtocol>"
@40@0:8^{VCBlockBuffer_t=^{OpaqueCMBlockBuffer}Q*}16^{tagVPKTFLAG=iIIBBBBii{tagVCSourceDestinationInfo=i(?={?={tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{?=BS}}{?=ii{tagIPPORT=i[16c](?=I[16C])S}i}{?=I{?=cSCSC}B}{?=@})I^{tagVCSourceDestinationInfo}^v}CiiiiiBBB{tagVCIDSChannelDataFormat=[12S]CBSCBBQBBBS{?=SSSSS}BBBQBSBBB}{tagPKT_TAG=[4Q]}I[16C]BB}24^^{tagVCIDSChannelDataFormat}32
B24@0:8Q16
v28@0:8I16@?20
v28@0:8I16@?<v@?>20
i24@0:8@"NSNumber"16
@32@0:8I16^{opaqueRTCReporting=}20i28
@24@0:8^{tagVCIDSChannelDataFormat=[12S]CBSCBBQBBBS{?=SSSSS}BBBQBSBBB}16
v32@0:8@16^{tagVCIDSChannelDataFormat=[12S]CBSCBBQBBBS{?=SSSSS}BBBQBSBBB}24
B40@0:8@16@24Q32
B56@0:8@16@24Q32@40@48
B52@0:8@16@24Q32I40@?44
B60@0:8@16@24Q32I40@44@?52
v40@0:8@16@24Q32
B40@0:8Q16@24^{?=i^{tagVCSecurityKeyHolder}^{tagVCSecurityKeyHolder}^{__CFData}^{__CFData}B}32
^{_opaque_pthread_t=q^{__darwin_pthread_handler_rec}[8176c]}
@92@0:8I16@20{CGSize=dd}28{CGSize=dd}44{CGSize=dd}60{CGSize=dd}76
v64@0:8^{CGSize=dd}16^{CGSize=dd}24^{CGSize=dd}32^{CGSize=dd}40{CGSize=dd}48
B40@0:8@16C24i28@32
v48@0:8^v16@24{CGSize=dd}32
@32@0:8C16i20@24
r^{tagVCSpatialAudioMetadataPositionalInfo=fffIII}16@0:8
{tagVCSpatialAudioMetadataPositionalInfo="positionX"f"positionY"f"positionZ"f"prominence"I"isVisible"I"isInCanvas"I}
@24@0:8^{tagVCTextJitterBufferConfiguration=I@}16
^{tagAudioPacket=iiiBSIiidi[1472C]i[256C]C[4^{tagAudioFrame}]idi^{tagDecoderSettings}BICS}16@0:8
v24@0:8^{tagAudioPacket=iiiBSIiidi[1472C]i[256C]C[4^{tagAudioFrame}]idi^{tagDecoderSettings}BICS}16
^{tagAudioFrame=iiBSI[800C]ii[16C]Ciidii^?^v^{tagDecoderSettings}BICS^{tagAudioFrame}^{tagAudioFrame}I}16@0:8
{tagVCTextJitterBufferConfiguration="sampleRate"I"delegate"@"<VCTextFrameReceiver>"}
^{JitterPreloadQueue_t=}
^{JitterQueue_t=}
@40@0:8i16i20^?24^v32
*16@0:8
B36@0:8^v16I24i28I32
{tagAccessUnitHeaderInfo="accessUnitCount"S"accessUnitSize"[3S]}
^{opaqueVCPacketBundlerCdrxBundleInfo=[2{tagVCPacketBundlerPacketInfo=iIIIB}]B{tagVCAudioPacketBundlerCDRXStateParameters=[8{tagVCAudioPacketBundlerCDRXInfo=CS}]C}^{opaqueCMSimpleQueue}}
B40@0:8d16d24d32
@36@0:8B16B20B24I28I32
@44@0:8B16B20B24I28I32@36
@36@0:8@16B24^@28
@44@0:8@16B24@28^@36
@48@0:8@16@24@32^@40
@80@0:8@16@24@32@40@48@56@64^@72
v36@0:8@16C24S28S32
v24@0:8c16C20
@"VCAudioStream"
@"AVCMediaStreamConfig"
@24@0:8^{opaqueRTCReporting=}16
I28@0:8I16@20
v48@0:8@16I24I28@32@40
v40@0:8*16^I24^S32
@24@0:8B16i20
v36@0:8r^v16I24^{?=IQSCc[12S]CS{?=SSSSS}dQBQ[16C]BB}28
B44@0:8r^v16I24^{?=IQSCc[12S]CS{?=SSSSS}dQBQ[16C]BB}28^@36
B24@0:8^{_VCMockIDSDatagramChannelPacket={_VCSingleLinkedListEntry=^{_VCSingleLinkedListEntry}}[1500C]QB{?=IQSCc[12S]CS{?=SSSSS}dQBQ[16C]BB}Q}16
@24@0:8^{_VCMockIDSDatagramChannelPacket={_VCSingleLinkedListEntry=^{_VCSingleLinkedListEntry}}[1500C]QB{?=IQSCc[12S]CS{?=SSSSS}dQBQ[16C]BB}Q}16
B32@0:8*16Q24
v40@0:8@?16Q24@32
v46@0:8r^v16I24{?=cSCSC}28@?38
^{_VCMockIDSDatagramChannelPacket={_VCSingleLinkedListEntry=^{_VCSingleLinkedListEntry}}[1500C]QB{?=IQSCc[12S]CS{?=SSSSS}dQBQ[16C]BB}Q}44@0:8^{_VCMockIDSDatagramChannelPacket={_VCSingleLinkedListEntry=^{_VCSingleLinkedListEntry}}[1500C]QB{?=IQSCc[12S]CS{?=SSSSS}dQBQ[16C]BB}Q}16r^v24I32^{?=IQSCc[12S]CS{?=SSSSS}dQBQ[16C]BB}36
v24@0:8^{_VCMockIDSDatagramChannelPacket={_VCSingleLinkedListEntry=^{_VCSingleLinkedListEntry}}[1500C]QB{?=IQSCc[12S]CS{?=SSSSS}dQBQ[16C]BB}Q}16
v32@0:8^{_VCMockIDSDatagramChannelPacket={_VCSingleLinkedListEntry=^{_VCSingleLinkedListEntry}}[1500C]QB{?=IQSCc[12S]CS{?=SSSSS}dQBQ[16C]BB}Q}16@?24
v152@0:8*16Q24{?=IQSCc[12S]CS{?=SSSSS}dQBQ[16C]BB}32
v32@0:8I16S20i24i28
v32@0:8^{tagRTCPPACKET={tagRTCPCOMMON=b5b1b2b8S}(?={tagSR_RTCP=IIIIII[1{tagRTCP_RRB=Ib8b24IIII}]}{tagRR_RTCP=I[1{tagRTCP_RRB=Ib8b24IIII}]}{tagSDES_RTCP=I{tagRTCPSDES=CC[258c]}}{tagBYE_RTCP=I}{tagRTCP_APP=II}{tagRTCP_APP_LTRP={tagRTCP_APP=II}I}{tagFIR_RTCP=I[10S]}{tagNACK_RTCP=ISS}{tagRTCP_PSFB_PLI={tagRTCP_FBCOMMON=II}}{tagRTCP_PSFB_SLI={tagRTCP_FBCOMMON=II}I}{tagRTCP_PSFB_FIR={tagRTCP_FBCOMMON=II}IC[3C]}{tagRTCP_PSFB_TST={tagRTCP_FBCOMMON=II}II}{tagRTCP_PSFB_TST={tagRTCP_FBCOMMON=II}II}{tagRTCP_PSFB_ALFB_HEADER={tagRTCP_FBCOMMON=II}I}{tagRTCP_PSFB_LOSSFB={tagRTCP_PSFB_ALFB_HEADER={tagRTCP_FBCOMMON=II}I}{tagRTCP_CUSTOM_PSFB_LOSS_FB_INFO=ISCC}}{tagRTCP_PSFB_LTRACK={tagRTCP_PSFB_ALFB_HEADER={tagRTCP_FBCOMMON=II}I}I}{tagRTCP_RTPFB_GNACK={tagRTCP_FBCOMMON=II}SS}{tagRTCP_RTPFB_TMMB={tagRTCP_FBCOMMON=II}II}{tagRTCP_RTPFB_TMMB={tagRTCP_FBCOMMON=II}II}{tagVCRTCPXR=I[0I]}{tagRTCP_CUSTOM_SR={tagRTCP_APP=II}I{tagRTCP_CUSTOM_SENDER_INFO=IIIIb4b4}[1{tagRTCP_CUSTOM_RECEPTION_REPORT=Ib4b12SSCC}]}{tagRTCP_CUSTOM_RR={tagRTCP_APP=II}I{tagRTCP_CUSTOM_RECEIVER_INFO=b4b4}[1{tagRTCP_CUSTOM_RECEPTION_REPORT=Ib4b12SSCC}]}{tagRTCP_CUSTOM_RCTL={tagRTCP_APP=II}{tagRTCP_CUSTOM_RATE_CONTROL_INFO=[20C]}})}16@?24
v36@0:8^{_VCMockIDSDatagramChannelPacket={_VCSingleLinkedListEntry=^{_VCSingleLinkedListEntry}}[1500C]QB{?=IQSCc[12S]CS{?=SSSSS}dQBQ[16C]BB}Q}16@?24B32
v24@0:8^{?=IQSCc[12S]CS{?=SSSSS}dQBQ[16C]BB}16
@"VCMockIDSDataChannelLinkContext"
{_VCSingleLinkedList="head"^{_VCSingleLinkedListEntry}"initialized"B"compare"^?"countEntries"Q}
[2048[1500C]]
[2048S]
[2048{?="options_flags"I"participantID"Q"probeGroupID"S"channelPriority"C"streamIDCount"c"streamIDs"[12S]"generationCounterLSB"C"statsID"S"statsPayload"{?="serverTimestamp"S"serverPacketInterval"S"totalServerPacketReceived"S"totalServerPacketSent"S"uplinkBandwidth"S}"arrivalTime"d"expireTimestamp"Q"encryptedHBH"B"encryptionSequenceNumber"Q"packetUUID"[16C]"retransmittedPacket"B"nonRetransmittablePacket"B}]
{?="options_flags"I"participantID"Q"probeGroupID"S"channelPriority"C"streamIDCount"c"streamIDs"[12S]"generationCounterLSB"C"statsID"S"statsPayload"{?="serverTimestamp"S"serverPacketInterval"S"totalServerPacketReceived"S"totalServerPacketSent"S"uplinkBandwidth"S}"arrivalTime"d"expireTimestamp"Q"encryptedHBH"B"encryptionSequenceNumber"Q"packetUUID"[16C]"retransmittedPacket"B"nonRetransmittablePacket"B}
@"VCMockIDSDatagramChannel"
@44@0:8B16@20s28@32s40
v28@0:8r^v16I24
r*24@0:8@16
v36@0:8B16d20d28
v32@0:8@"NSString"16@"NSError"24
v24@0:8@"NSData"16
v32@0:8@"NSString"16q24
v52@0:8@16B24{CGPoint=dd}28@44
@"NSObject<AVConferencePreviewClientDelegate>"
v24@0:8I16i20
B28@0:8C16C20I24
v32@0:8I16I20^{tagHANDLE=i}24
i40@0:8C16C20I24*28B36
B24@0:8^I16
B32@0:8^i16^B24
B56@0:8^@16^i24^i32^i40^i48
@44@0:8(tagNTP=Q{?=II})16{CGSize=dd}24I40
v24@0:8^{tagStreamGroupPayload=CCCCC(?={?=CC}{?=IC})}16
@36@0:8@16I24I28I32
B36@0:8@16I24I28I32
@"VCSessionMediaNegotiator"
{?=BBi}32@0:8{?=CBBBBBBBiBB}16
v40@0:8{?=CBBBBBBBiBB}16^{?=BBi}32
v28@0:8^{?=BBi}16B24
v44@0:8{?=CBBBBBBBiBB}16^{?=BBi}32B40
{?="isAlertEnabled"B"connectionWiFiCount"C"connectionCellCount"C"isDuplicationDisabledDueToAlert"B}
@44@0:8I16I20B24@28^@36
i36@0:8@16B24^@28
i32@0:8@16I24B28
i36@0:8@16^@24B32
^{_tls_record_s=}
@72@0:8@16@24@32@40^{opaqueRTCReporting=}48I56S60^{tagVCMediaQueue=}64
v40@0:8{?=dCSSSSSS}16
v60@0:8{?=dCSIII}16d40B48B52B56
v24@0:8^{?=Cd[1472C]ii{tagVCIDSChannelDataFormat=[12S]CBSCBBQBBBS{?=SSSSS}BBBQBSBBB}}16
@"<VCSessionStatsControllerDelegate>"
{?="responseTime"d"linkID"C"statsIdentifier"S"remoteTimestamp"S"serverPacketInterval"S"uplinkBandwidthSample"S"totalRemoteMediaPacketSent"S"totalRemoteMediaPacketReceived"S}
@"VCTransportStreamGFT"
B36@0:8r^v16I24^@28
@?<v@?^vIB@"NSError">16@0:8
v24@0:8@?<v@?^vIB@"NSError">16
@"AVCPacketFilter"16@0:8
v24@0:8@"AVCPacketFilter"16
@36@0:8S16@20@28
{sockaddr="sa_len"C"sa_family"C"sa_data"[14c]}
@"AVCPacketFilter"
@20@0:8S16
@"IDSService"
@28@0:8S16@20
@28@0:8r^v16i24
v28@0:8Q16B24
@"AVCPacketRelayDriver"
@"<AVCPacketRelayDelegate>"
@"<AVCPacketRelayConnectionProtocol>"
{_AVCPacketRelayHealthStats="demuxPacketStats"{_AVCPacketRelayDemuxPacketHealthStats="rtpAndRTCPPacketCount"I"rtpPacketCount"I"rtcpPacketCount"I"droppedPacketCount"I}"sendPacketCount"I"sendByteCount"I"receivePacketCount"I"receiveByteCount"I"lastSendTimePrint"d"lastReceiveTimePrint"d}
B32@0:8^@16@24
@32@0:8q16^@24
v32@0:8@16^@24
I40@0:8@16^I24i32B36
@"AVCMediaStreamNegotiatorSettings"
{tagVCMediaStreamSyncTime="ntpTime"d"sampleRate"q"rtpTimestampOfNTP"I}
@"VCTextStream"
@"VCCCMessageAcknowledgment"
@"VCCCMessage"
{?="content"b1}
[30d]
@"SuddenChangeParameters"
@"VCRateControlBandwidthEstimator"
{?="cipherSuite"b1"codecType"b1"encoderUsage"b1"mediaFlags"b1"pTime"b1"profileLevelId"b1"rtcpFlags"b1"rtpPayload"b1"rtpSampleRate"b1}
@36@0:8@16@24i32
@28@0:8C16@20
v24@0:8r^{_VCAudioPowerSpectrumEntry={_VCRange=ff}f}16
{?="payloads"b1"rtpSSRC"b1}
{tagVCVideoTransmitterRealtimeSPI="setFECRatio"^?"enqueueVideoFrame"^?}
{tagCONNRESULT="dwCallID"I"iResultCount"i"iRole"i"dwRemoteCallID"I"proto"i"bIfRelay"i"wRelayServType"S"wChannelNumber"S"mbLocal"{tagIPPORT="iFlags"i"szIfName"[16c]"IP"(?="dwIPv4"I"abIPv6"[16C])"wPort"S}"mbRemote"{tagIPPORT="iFlags"i"szIfName"[16c]"IP"(?="dwIPv4"I"abIPv6"[16C])"wPort"S}"mbSrc"{tagIPPORT="iFlags"i"szIfName"[16c]"IP"(?="dwIPv4"I"abIPv6"[16C])"wPort"S}"mbDst"{tagIPPORT="iFlags"i"szIfName"[16c]"IP"(?="dwIPv4"I"abIPv6"[16C])"wPort"S}"mbRemoteSrc"{tagIPPORT="iFlags"i"szIfName"[16c]"IP"(?="dwIPv4"I"abIPv6"[16C])"wPort"S}"mbRelayExt"{tagIPPORT="iFlags"i"szIfName"[16c]"IP"(?="dwIPv4"I"abIPv6"[16C])"wPort"S}"dwRTT"I"bIfLocalCellularQoS"i"bIfRemoteCellularQoS"i"iLocalCellTech"i"iRemoteCellTech"i"wCellularMTU"S"bIfUpgrade"i"bIfPrimary"i"bIfReplaceOnly"i"next"^{tagCONNRESULT}"channelID"i}
@56@0:8^{__CVBuffer=}16^{__CVBuffer=}24{?=qiIq}32
^{__CVBuffer=}28@0:8@16B24
{?=qiIq}24@0:8@16
v36@0:8@16I24^v28
@52@0:8I16B20@24@32B40I44B48
@76@0:8I16B20@24@32B40I44I48I52B56@60@68
B40@0:8@16@24B32B36
v64@0:8I16I20i24i28d32^I40I48@52B60
@28@0:8B16B20B24
i24@0:8i16i20
B36@0:8i16^i20^i28
@40@0:8@16@24C32C36
@"NSObject<VCMediaStreamDelegate>"
^{SoundDec_t={AudioStreamBasicDescription=dIIIIIIII}{AudioStreamBasicDescription=dIIIIIIII}ii^{OpaqueAudioConverter}*i{AudioStreamPacketDescription=qII}^{AudioBufferList}^{AudioBufferList}**iiiiCiiII{CMRData=II{EVSRFParams=II}}BCBCiB{EVSRFParams=II}{EVSRFParams=II}}
@48@0:8q16@24@32@40
@32@0:8C16C20@24
{?="formatsExt1"b1"preferredFormat"b1"preferredFormatExt1"b1}
B52@0:8^@16@24^i32i40B44B48
@28@0:8@16s24
i36@0:8@16s24^@28
i40@0:8@16s24B28^@32
@24@0:8B16s20
v24@0:8^{tagVCVideoCaptureSinkEntry={_VCSingleLinkedListEntry=^{_VCSingleLinkedListEntry}}@@?}16
v32@0:8^v16@"NSDictionary"24
@44@0:8I16B20@24@32B40
@48@0:8I16B20@24@32B40i44
@"VCIDSSessionInfoSynchronizer"
v32@0:8^{opaqueCMSampleBuffer=}16C24C28
B32@0:8^{opaqueCMSampleBuffer=}16I24C28
@36@0:8@"NSURL"16@"NSString"24I32
v24@0:8@?<v@?@"NSURL"@"NSError">16
@"NSURL"16@0:8
v24@0:8@"NSURL"16
v52@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16i48
@32@0:8i16i20@24
v48@0:8@16^{opaqueCMBufferQueue=}24@32^{?=qiIq}40
v40@0:8^{opaqueCMBufferQueue=}16@24^{?=qiIq}32
@"AVAssetWriter"
@"AVAssetWriterInput"
@"AVAssetWriterInputMetadataAdaptor"
@"NSURL"
@32@0:8^{tagHANDLE=i}16I24I28
@36@0:8^{tagHANDLE=i}16I24I28B32
{_VCAudioStreamTransportRealtimeContext="wrmInfo"{tagWRMMetricsInfo="bInitialized"B"hRTPHandle"^{tagHANDLE}"dwReportInterval"I"dwWrmTime"I"dwPlaybackCount"I"dwPlaybackCountSpeech"I"dwErasureCount"I"dwErasureSilence"I"videoFrameErasureCount"I"dwTimeOfLastRRPacket"I"dwEstimatedRTTMilliSeconds"I"dwJitter"I"dwTotalPacketRecv"I"dwDTXPacketRecv"I"callId"Q"nominalJitterBufferDelay"Q"targetJitterQueueSize"Q"nFraction"i"reportWRMMetricsCallback"^?"wrmMetricsReportingContext"{?="info"^v"retain"^?"release"^?}"wrmMetricsReportingLock"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}"dwInternalTSRate"I"dwPacketSent"I"isCallAudioOnly"I"bwEstimation"I"targetBitrate"I"oneWayRelativeDelay"I"adaptationPacketLossPercentage"I"isLocalCellular"I"isVideoPaused"I"linkType"Q"primaryVideoPacketReceived"I"primaryAudioPacketReceived"I"totalVideoPacketReceived"I"totalAudioPacketReceived"I"totalVideoPacketExpected"I"totalAudioPacketExpected"I}"rtpHandle"^{tagHANDLE}}
@24@0:8{_VCRange=ff}16
v24@0:8{_VCRange=ff}16
{_VCRange="min"f"max"f}
B24@0:8^{?={tagVCAudioFrameFormat={AudioStreamBasicDescription=dIIIIIIII}I}^v^?{tagVCSystemAudioCaptureTapSettings=I(?=iI)^{__CFString}I}}16
@32@0:8^{__CFString=}16@24
@24@0:8^{?={tagVCAudioFrameFormat={AudioStreamBasicDescription=dIIIIIIII}I}^v^?{tagVCSystemAudioCaptureTapSettings=I(?=iI)^{__CFString}I}}16
@24@0:8^{AudioStreamBasicDescription=dIIIIIIII}16
^{?=^{OpaqueAudioQueue}{AudioStreamBasicDescription=dIIIIIIII}[10^{AudioQueueBuffer}]Ii}
{tagVCSystemAudioCaptureTapSettings="tapType"I""(?="audioProcessIdToTap"i"sessionTypeToTap"I)"captureContext"^{__CFString}"source"I}
i40@0:8^{opaqueVCAudioBufferList=}16i24^v28i36
v28@0:8*16i24
B24@0:8^{EVSRFParams=II}16
B40@0:8{_VCAudioCodecModeChangeEvent=iiiI{EVSRFParams=II}}16
B32@0:8*16^I24
@"VCAudioPayloadConfig"
B76@0:8@16^{__CVBuffer=}24{?=qiIq}32@56@64B72
B36@0:8@16^{opaqueCMSampleBuffer=}24B32
B76@0:8@"VCVideoReceiverBase"16^{__CVBuffer=}24{?=qiIq}32@"VideoAttributes"56@"VideoAttributes"64B72
v32@0:8@"VCVideoReceiverBase"16S24i28
B36@0:8@"VCVideoReceiverBase"16^{opaqueCMSampleBuffer=}24B32
v28@0:8@"VCVideoReceiverBase"16I24
v32@0:8@"VCVideoReceiverBase"16@"NSDictionary"24
I28@0:8@"VCVideoReceiverBase"16I24
v32@0:8@"VCVideoReceiverBase"16S24S28
v32@0:8^{tagVCVideoReceiverStreamConfig={tagVCVideoReceiverStreamIDInfo=SSSI[9S][9S]}^{tagHANDLE}^{__CFDictionary}BSCBB^{tagVCCryptor}^v^viBBBi}16@24
v32@0:8^{tagVCVideoReceiverConfig=I[9{tagVCVideoReceiverStreamConfig={tagVCVideoReceiverStreamIDInfo=SSSI[9S][9S]}^{tagHANDLE}^{__CFDictionary}BSCBB^{tagVCCryptor}^v^viBBBi}]iiqiiiIiiiiiiBBBBd^v^?^?^?^?^?^?^?QBSB^{tagWRMMetricsInfo}IBBBBBBBBBBBBB^vBBIBBS^{tagVCJBTargetEstimatorSynchronizer}^{__CFString}^{__CFString}IBBBiBB{tagVCNACKGeneratorStoreBagsConfig=CffB[4f][4f]}B}16@24
v24@0:8^{tagVCVideoReceiverConfig=I[9{tagVCVideoReceiverStreamConfig={tagVCVideoReceiverStreamIDInfo=SSSI[9S][9S]}^{tagHANDLE}^{__CFDictionary}BSCBB^{tagVCCryptor}^v^viBBBi}]iiqiiiIiiiiiiBBBBd^v^?^?^?^?^?^?^?QBSB^{tagWRMMetricsInfo}IBBBBBBBBBBBBB^vBBIBBS^{tagVCJBTargetEstimatorSynchronizer}^{__CFString}^{__CFString}IBBBiBB{tagVCNACKGeneratorStoreBagsConfig=CffB[4f][4f]}B}16
{tagVCVideoStreamReceiverConfig=^{tagHANDLE}@^{opaqueRTCReporting}Ii@B^v^?}28@0:8I16^{opaqueRTCReporting=}20
{tagVCVideoReceiverConfig=I[9{tagVCVideoReceiverStreamConfig={tagVCVideoReceiverStreamIDInfo=SSSI[9S][9S]}^{tagHANDLE}^{__CFDictionary}BSCBB^{tagVCCryptor}^v^viBBBi}]iiqiiiIiiiiiiBBBBd^v^?^?^?^?^?^?^?QBSB^{tagWRMMetricsInfo}IBBBBBBBBBBBBB^vBBIBBS^{tagVCJBTargetEstimatorSynchronizer}^{__CFString}^{__CFString}IBBBiBB{tagVCNACKGeneratorStoreBagsConfig=CffB[4f][4f]}B}24@0:8@16
{tagVCNACKGeneratorStoreBagsConfig=CffB[4f][4f]}24@0:8@16
v32@0:8@16^{tagHANDLE=i}24
v28@0:8^{packet_id=CCSIII}16i24
B36@0:8^i16i24^@28
@40@0:8I16Q20I28q32
v44@0:8i16d20d28Q36
B28@0:8q16I24
v32@0:8i16i20i24i28
@"VCVideoTransmitterBase"
@"VCVideoReceiverBase"
@"VCVideoCaptureConverter"
@"<VCSessionParticipantLocalVideoStreamDelegate>"
{?="audioFeatures"b1}
v32@0:8@"VCMediaStream"16@"VCMediaKeyIndex"24
v32@0:8@"VCMediaStream"16@"NSArray"24
@28@0:8B16@20
@44@0:8@16B24I28I32I36I40
@52@0:8I16B20I24I28I32I36I40@44
v52@0:8@16@24@32I40@44
v44@0:8@"VCControlChannel"16@"NSString"24I32@"NSNumber"36
v52@0:8@"VCControlChannel"16@"NSString"24@"NSData"32I40@"NSNumber"44
v44@0:8@"VCControlChannel"16@"NSString"24B32@"NSNumber"36
v32@0:8@"VCControlChannel"16@"NSNumber"24
v44@0:8@16@24B32@?36
v52@0:8@16@24B32@?36@?44
v56@0:8@16@24B32B36@?40@?48
B56@0:8@16@24Q32@40@?48
i32@0:8^{sockaddr_storage=CC[6c]q[112c]}16^Q24
{?="maxNetworkBitrate"b1"maxMediaBitrate"b1"maxPacketsPerSecond"b1"idsStreamID"b1"qualityIndex"b1"maxIDSStreamIdCount"b1"repairedStreamID"b1"repairedMaxNetworkBitrate"b1}
v24@0:8^{tagVCSecurityKeyHolder=}16
^{tagVCSecurityKeyHolder=}16@0:8
^{tagVCSecurityKeyHolder=}
@"VCMediaStreamMultiwayConfig"
@"VCMediaStreamRateControlConfig"
v32@0:8@16^{opaqueCMSampleBuffer=}24
v32@0:8@"AVCStreamOutput"16^{opaqueCMSampleBuffer=}24
v24@0:8@"AVCStreamOutput"16
v28@0:8@"AVCStreamOutput"16B24
{?=@}16@0:8
v24@0:8{?=@}16
@"AVCStreamOutput"
{?="videoAttributes"@"VideoAttributes"}
@64@0:8@16{?=CIddd@}24
C24@0:8d16
{?="linkProbingCapabilityVersion"C"linkProbingQueryResultsInterval"I"expMovMeanFactor"d"envelopeAttackFactor"d"envelopeDecayFactor"d"plrBuckets"@"NSArray"}
v32@0:8^{CGSize=dd}16^{CGSize=dd}24
v36@0:8^{CGSize=dd}16^{CGSize=dd}24B32
@80@0:8{CGSize=dd}16{CGSize=dd}32{CGSize=dd}48{CGSize=dd}64
B48@0:8r*16*24Q32r*40
B64@0:8r*16r*24^i32^i40^i48^i56
B56@0:8r*16^i24^i32^i40^i48
i24@0:8^{__CFDictionary=}16
B44@0:8*16q24i32^{__CFDictionary=}36
@24@0:8I16B20
i32@0:8C16@20B28
@48@0:8Q16B24C28B32B36@40
@60@0:8@16@24B32@36@?44@?52
@64@0:8@16@24B32B36@40@?48@?56
@80@0:8@16@24B32B36@40@?48@?56@?64@?72
v36@0:8B16@20@28
B48@0:8@16Q24@32@?40
v48@0:8@16Q24q32q40
v40@0:8d16@24@32
v36@0:8@16i24@28
v32@0:8^{_VCAudioPowerSpectrumEntry={_VCRange=ff}f}16I24S28
@"<VCLinkProbingHandlerDelegate>"
@"VCDispatchTimer"
i52@0:8^{__CVBuffer=}16i24i28I32^{__CVPixelBufferPool=}36^^{__CVBuffer}44
@"VCPixelTransferSession"
@"VCMediaStream"
B32@0:8d16d24
{VoiceIOFarEndVersionInfo=[64C][64C]I}20@0:8B16
@"SDPMini"
@56@0:8{_AVCAudioPowerSpectrumMeterConfig=qISd}16@40@48
@"VCAudioPowerSpectrumMeter"
@72@0:8@16{tagVCMediaStreamRateAdaptationParams=@^{opaqueRTCReporting}i{tagVCMediaStreamRateAdaptationConfig=q(tagVCMediaStreamRateAdaptationAlgorithmConfig={tagVCMediaStreamRateAdaptationConfigTelephonyUplink=IIII})}}24
v24@0:8^{tagVCMediaStreamRateAdaptationConfig=q(tagVCMediaStreamRateAdaptationAlgorithmConfig={tagVCMediaStreamRateAdaptationConfigTelephonyUplink=IIII})}16
@"<VCMediaStreamRateAdaptationDelegate>"
I24@0:8^d16
[3d]
v36@0:8@16@24i32
{tagVCAudioFrameFormat={AudioStreamBasicDescription=dIIIIIIII}I}16@0:8
v64@0:8{tagVCAudioFrameFormat={AudioStreamBasicDescription=dIIIIIIII}I}16
@36@0:8C16@20@28
@44@0:8C16@20@28@36
@"NSObject<AVCMomentsRequestDelegate>"
i28@0:8q16i24
v32@0:8@"VCSessionUplinkVideoStreamController"16@"NSDictionary"24
v36@0:8I16d20d28
@"VCCaptionsTranscription"
^{opaqueVCCaptionsDecoder=}
^{OpaqueVTPixelRotationSession=}
B48@0:8@16*24I32S36@40
@36@0:8@16S24@28
B48@0:8@16@24I32I36@40
@60@0:8I16@20@28@36^{?=i^{tagVCSecurityKeyHolder}^{tagVCSecurityKeyHolder}^{__CFData}^{__CFData}B}44@52
B44@0:8@16@24I32@36
B48@0:8^v16@24*32I40S44
@60@0:8@16B24^@28@36@44@52
v40@0:8^@16^@24@32
@"AVCRemoteVideoClient"
^@20@0:8i16
v56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
@"VCCALayerHost"
@32@0:8I16i20@24
v36@0:8^I16i24@28
@28@0:8i16^v20
v32@0:8I16i20@24
v52@0:8^I16^{__CFString=}24@32B40^{__CFDictionary=}44
I28@0:8@16B24
I36@0:8@16B24@28
I40@0:8@16B24i28@32
{?="capabilities"b1"linkProbingCapabilityVersion"b1"mediaControlInfoSubVersion"b1"switches"b1"oneToOneModeSupported"b1}
d32@0:8d16d24
i40@0:8d16d24d32
d28@0:8I16d20
B40@0:8^i16d24d32
[500{VCStatisticsStatsHistoryElement="linkID"C"statsUpdateTime"d"statsTimestamp"I"totalPacketSent"I"totalPacketReceived"I"totalByteSent"Q"totalByteReceived"Q"totalByteServerStatsUsed"Q"maxBurstyLoss"I}]
{VCStatisticsStatsHistoryElement="linkID"C"statsUpdateTime"d"statsTimestamp"I"totalPacketSent"I"totalPacketReceived"I"totalByteSent"Q"totalByteReceived"Q"totalByteServerStatsUsed"Q"maxBurstyLoss"I}
^{VCStatisticsSendHistoryElement=IdIQ^{VCStatisticsSendHistoryElement}^{VCStatisticsSendHistoryElement}}
I32@0:8@16@24
I24@0:8C16C20
@48@0:8i16@20i28@32@40
C20@0:8C16
{tagAVCSessionPresentationInfo={CGRect={CGPoint=dd}{CGSize=dd}}IIC}16@0:8
v64@0:8{tagAVCSessionPresentationInfo={CGRect={CGPoint=dd}{CGSize=dd}}IIC}16
r^{tagVCSpatialAudioMetadataGlobalInfo=IffffffII}16@0:8
{tagVCSpatialAudioMetadataGlobalInfo="displayID"I"displayWidth"f"displayHeight"f"appWindowWidth"f"appWindowHeight"f"appWindowPositionX"f"appWindowPositionY"f"uiLayout"I"uiState"I}
{?="audioChannelCount"b1"coordinateSystem"b1"maxNetworkBitrate"b1"metadata"b1"payloadSpecOrPayloads"b1"qualityIndex"b1"repairedMaxNetworkBitrate"b1"rtpSSRC"b1"streamID"b1"streamIndex"b1}
v56@0:8{_VCAudioCodecModeChangeEvent=iiiI{EVSRFParams=II}}16^B40^B48
v32@0:8i16i20i24I28
f20@0:8i16
v28@0:8i16i20B24
{?=I[5I]Id{CGSize=dd}dIdII}16@0:8
v104@0:8{?=I[5I]Id{CGSize=dd}dIdII}16
@"VCPacketBundler"
@"VCRedundancyControllerAudio"
@"VCAudioTierPicker"
{?="averageNetworkBitrate"I"networkBitrate"[5I]"averageMediaBitrate"I"averageFramerate"d"frameResolution"{CGSize="width"d"height"d}"lastAudioHostTime"d"lastAudioSampleTime"I"lastVideoHostTime"d"lastVideoSampleTime"I"noVoiceActivityPacketCount"I}
{tagVCIDSChannelDataFormat="streamIDs"[12S]"numOfStreamIDs"C"probingGroupIDIsSet"B"probingGroupID"S"priority"C"pktCountingFlag"B"participantIDIsSet"B"participantID"Q"participantGenerationCounterIsSet"B"ignorePriority"B"statsIDIsSet"B"statsID"S"statsPayload"{?="serverTimestamp"S"serverPacketInterval"S"totalServerPacketReceived"S"totalServerPacketSent"S"uplinkBandwidthEstimate"S}"isTransitionPacket"B"isHopByHopEncrypted"B"encryptionSequenceNumberIDIsSet"B"encryptionSequenceNumber"Q"baseLayerStreamIdIsSet"B"baseLayerStreamId"S"isRetransmitted"B"isHighlyBurstyTraffic"B"requireOneToOneProbingSequence"B}
^{tagVCAudioIssueDetector=}
^{tagVCAudioDump=}
{tagVCAudioDumpPayloadInfo="audioDumpEnabled"B"payloadType"i"isOctetAligned"B"isEVSHeaderFull"B"format"^{AudioStreamBasicDescription}}
I44@0:8@16@24I32I36I40
v36@0:8I16q20@?28
@40@0:8q16^@24q32
f20@0:8I16
i24@0:8^{?=Cd[1472C]ii{tagVCIDSChannelDataFormat=[12S]CBSCBBQBBBS{?=SSSSS}BBBQBSBBB}}16
i32@0:8^v16@?24
v24@0:8^{_VTPPacket=d{sockaddr_storage=CC[6c]q[112c]}I{tagIPPORT=i[16c](?=I[16C])S}{tagVPKTFLAG=iIIBBBBii{tagVCSourceDestinationInfo=i(?={?={tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{?=BS}}{?=ii{tagIPPORT=i[16c](?=I[16C])S}i}{?=I{?=cSCSC}B}{?=@})I^{tagVCSourceDestinationInfo}^v}CiiiiiBBB{tagVCIDSChannelDataFormat=[12S]CBSCBBQBBBS{?=SSSSS}BBBQBSBBB}{tagPKT_TAG=[4Q]}I[16C]BB}{VCBlockBuffer_t=^{OpaqueCMBlockBuffer}Q*}}16
{fd_set="fds_bits"[32i]}
B32@0:8@16B24B28
@32@0:8B16B20@24
v44@0:8@16^I24B32@36
v52@0:8@16@24^I32B40@44
v64@0:8^{__CVBuffer=}16^{__CVBuffer=}24{?=qiIq}32@56
v48@0:8^{__CVBuffer=}16{?=qiIq}24
v72@0:8^{__CVBuffer=}16^{__CVBuffer=}24{?=qiIq}32@56@64
v64@0:8^{__CVBuffer=}16{?=qiIq}24@48@56
^{opaqueVCRemoteImageQueue=}16@0:8
d32@0:8^{__CFString=}16d24
q24@0:8^{__CFString=}16
q32@0:8^{__CFString=}16q24
B24@0:8^{__CFString=}16
B28@0:8^{__CFString=}16B24
@24@0:8^{__CFString=}16
@44@0:8r*16Q24^{?=diIIIIISBB}32C40
i40@0:8r*16Q24^{?=diIIIIISBB}32
i36@0:8^v16Q24I32
i28@0:8^{?=SSSSSSIIISII}16I24
i44@0:8^v16Q24^Q32I40
i40@0:8*16Q24^Q32
@"<VCMediaControlInfoDelegate>"
{tagVCMediaControlVTableC="serializedSize"^?"serialize"^?}
[8C]
i24@0:8^{?=diIIIIISBB}16
{?="timeStamp"S"bandwithEstimation"S"videoBurstLoss"S"videoReceviedPkts"S"audioBurstLoss"S"audioReceviedPkts"S"totalReceviedKbits"I"receiveQueueTarget"I"queuingDelay"I"sendTimestamp"S"owrd"I"connectionStatsBuffer"I}
{?="totalPacketsPerFrame"S"frameSequenceNumber"S}
[36C]
B64@0:8^{opaqueCMSampleBuffer=}16I24d28{?=qiIq}36C60
v68@0:8^{__CVBuffer=}16{?=qiIq}24C48@52@60
B52@0:8^@16^{VCCSVideoTransmitterVideoRules_t=@@@}24B32^{opaqueRTCReporting=}36B44B48
B40@0:8^@16^{opaqueRTCReporting=}24B32B36
v40@0:8@"AVCSessionParticipant"16B24B28@"NSError"32
v28@0:8@"AVCSessionParticipant"16B24
v32@0:8@"AVCSessionParticipant"16@"NSDictionary"24
v44@0:8@"AVCSessionParticipant"16I24I28B32@"NSError"36
v32@0:8@"AVCSessionParticipant"16I24I28
v32@0:8@"AVCSessionParticipant"16Q24
@56@0:8@16@24@32@40@48
@"AVCSessionParticipant"
@"AVCSessionConfiguration"
B40@0:8@16@24^q32
v60@0:8^{opaqueCMSampleBuffer=}16{?=qiIq}24B48i52B56
v52@0:8^{opaqueCMSampleBuffer=}16{?=qiIq}24i48
^{opaqueCMFormatDescription=}20@0:8i16
v32@0:8@"NSString"16@"NSString"24
v28@0:8@"<VCVideoSink>"16i24
@"<VCVideoSource>"
@40@0:8[16C]16@24^@32
@72@0:8@16@24@32@40@48@56^@64
@"VCVideoStream"
I24@0:8Q16
{CGPoint=dd}16@0:8
@28@0:8i16C20C24
@28@0:8C16i20C24
@36@0:8@16C24i28C32
v32@0:8i16i20C24C28
v32@0:8i16i20@24
v28@0:8i16i20C24
@28@0:8i16i20B24
v28@0:8@"VCMediaStreamGroup"16C24
v48@0:8@"VCMediaStreamGroup"16{?=qiIq}24
v24@0:8@"VCMediaStreamGroup"16
v28@0:8@"VCMediaStreamGroup"16B24
v32@0:8@"VCMediaStreamGroup"16S24S28
v32@0:8@"VCMediaStreamGroup"16S24i28
v36@0:8@"VCMediaStreamGroup"16B24d28
v28@0:8@"VCMediaStreamGroup"16I24
B32@0:8@16q24
@40@0:8C16I20@24q32
@40@0:8@16q24I32I36
@44@0:8q16I24I28C32@36
@32@0:8C16B20B24B28
@28@0:8C16B20B24
B32@0:8i16B20B24i28
B20@0:8f16
@"VCSessionParticipantOneToOneConfig"
v56@0:8{AudioStreamBasicDescription=dIIIIIIII}16
@"AVCNetworkAddress"
@"AVCAudioStreamConfig"
@"AVCVideoStreamConfig"
@"AVCTextStreamConfig"
B28@0:8I16Q20
@"NSObject<WCMClientDelegate>"
B48@0:8@16^i24@32^i40
@"NSEnumerator"
v52@0:8I16@?20@?28@?36@?44
i32@0:8I16B20^i24
v48@0:8I16^{tagCONNRESULT=IiiIiiSS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}IiiiiSiii^{tagCONNRESULT}i}20i28i32^{__CFData=}36i44
v36@0:8I16*20i28S32
v64@0:8^{tagCANDIDATEPAIR={tagCANDIDATE=iiI[8C]SS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}I}{tagCANDIDATE=iiI[8C]SS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}I}iSS[8C]{tagIPPORT=i[16c](?=I[16C])S}Iiiiiiiii^{tagCANDIDATEPARIR}}16I24i28^i32^i40^i48^i56
v32@0:8^{tagIPPORT=i[16c](?=I[16C])S}16I24B28
v28@0:8@?16I24
v40@0:8*16i24I28B32i36
@28@0:8^{tagIPPORT=i[16c](?=I[16C])S}16I24
i40@0:8^{tagCANDIDATE=iiI[8C]SS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}I}16I24i28^{tagIPPORT=i[16c](?=I[16C])S}32
i64@0:8I16C20B24^^v28^i36^{__CFDictionary=}44B52d56
i36@0:8I16^{tagCONNRESULT=IiiIiiSS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}IiiiiSiii^{tagCONNRESULT}i}20@?28
i68@0:8I16@20@28d36^{__SecIdentity=}44^{SKEStateOpaque=}52^i60
B28@0:8^{tagIPPORT=i[16c](?=I[16C])S}16B24
i44@0:8@16^{tagIPPORT=i[16c](?=I[16C])S}24^{tagIPPORT=i[16c](?=I[16C])S}32i40
i40@0:8@16I24I28B32i36
i36@0:8I16i20I24^{__CFString=}28
i28@0:8^{SKEStateOpaque=}16I24
i20@0:8B16
i24@0:8^{tagIPPORT=i[16c](?=I[16C])S}16
i40@0:8I16I20^v24i32S36
i28@0:8I16^I20
@"AVAudioDeviceList"
identity
deflate
gzip
rcim
emac
v024
f024
ediv
atem
f024
wmac
wcim
rcim
ercs
emac
tpac
emac
rcim
emac
ercs
emac
44fx
v024
f024
f024
v024
f444
v444
024x
44fx
rcim
emac
rcim
wcim
emac
wmac
 caa
emac
ercs
rcim
emac
ercs
UUUUUU
ffffff
#!rtpplay1.0 2a01:4c8:f000:f43::12/61324
v024f444f02444fxf444f024f024024x
