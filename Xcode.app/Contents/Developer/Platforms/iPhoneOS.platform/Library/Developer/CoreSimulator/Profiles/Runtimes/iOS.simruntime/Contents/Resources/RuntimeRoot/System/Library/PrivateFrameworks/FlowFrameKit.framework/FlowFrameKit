@(#)PROGRAM:FlowFrameKit  PROJECT:SiriKitExecutor-1
Argument
ArgumentArrayParsingStrategy
ParsableCommand
CommandConfiguration
HelpGenerator
Usage
Section
Element
Header
DiscussionSection
Tree
InitializationError
ArgumentSet
ExpressibleByArgument
FlowFrameKit
ParsableArgumentsValidator
ValidatorErrorKind
ParsableArgumentsValidatorError
ParsableArgumentsValidationError
PositionalArgumentsValidator
Error
ParsableArgumentsCodingKeyValidator
ParsableArgumentsUniqueNamesValidator
NonsenseFlagsValidator
ValidationResult
Validator
Node
NodeIterator
OrderedForest
FlowFrameFactoryLoaderProtocol
Input
FlowFrameFactoryProtocol
Input Controller ResponseRenderer
AnyFlowFrameFactory
CompletionShell
CompletionsGenerator
MessageInfo
DecodedArguments
ArgumentDecoder
Error
ParsedArgumentsContainer
SingleValueDecoder
SingleValueContainer
UnkeyedContainer
ArrayWrapperProtocol
ArrayWrapper
FishCompletionsGenerator
InputOrigin
Element
ParsableArguments
_WrappedParsableCommand
StandardError
ArgumentSetProvider
CodingKeys
ValidationError
ExitCode
CleanExit
FrameOperationType
FrameOperation
AnyChildCompletion
help
HelpCommand
CodingKeys
ParsedArgument
SplitArguments
Element
Value
InputIndex
SubIndex
Index
MegaFrame
CancellableStack
InstrumentedCancellableStack
RuntimeConfiguration
FlowFrameRuntime
TrackedFrame
NameSpecification
Element
CommandError
HelpRequested
CommandParser
GenerateCompletions
AutodetectedGenerateCompletions
CodingKeys
CompletionKind
Kind
IllegalStateError
NonUnderstanding
TimedOutError
CancelledError
UsageGenerator
ErrorMessageGenerator
OptionGroup
ArgumentHelp
Logger
LogConst
FlowFrameKitSignpost
Understandable
AnyFrame
FlowFrameProtocol
Input Controller ResponseRenderer ActionArguments ExitValue
Flag
FlagInversion
FlagExclusivity
Name
BashCompletionsGenerator
ParserError
InternalParseError
Parsed
ParsedWrapper
Value
DecodableParsedWrapper
ArgumentDefinition
Update
Kind
Help
Options
ParsingStrategy
ArgumentHelpOptionProvider
InputKey
ParsedValues
Element
EnumerableFlag
Option
SingleValueParsingStrategy
ArrayParsingStrategy
ZshCompletionsGenerator
qd__
qd__Sg
$s12FlowFrameKit13ParsedWrapperP
Sayqd__GSg
SSqd__
_pIeggrzo_
Sayqd__G
_pIeggrzo_
qd__XMT
SaySsG
SaySSG
_SStG
_SSt
ySi_
SaySSG_SSt
ySaySSG_SStG
ySSG
_SitG
_Sit
_pXpG
_pXpGG
_pXpG
ySiG
SaySiG
ySaySiGG
ySsG
$s12FlowFrameKit15ParsableCommandP
SSSg
_pXpG
_pXpSg
ySSSgG
ySiG
yxGABG
G0R0_
yxGABSgIeggo_
yxGSgXw
yxGG
_pXp
_pXpGACG
_pXpGACSgIeggo_
_pXpGACSgIegnr_
_pXpGADG
SSxSgIeggr_
ySay
$sST
ySSSiG
_ypt
_SStSg
Sbz_Xx
SbSg
_pXpGG
xXMT
$s12FlowFrameKit21ExpressibleByArgumentP
_pXpG
_pSg
SSSg5label_yp5valuet
_pSg
$s12FlowFrameKit26ParsableArgumentsValidator33_97568CBA7AB35E6D179FF06FD8B18D29LLP
$s12FlowFrameKit31ParsableArgumentsValidatorErrorP
_pXp
SDySSSiG
$sSt
yxGSgXw
yxGG
yxGSg
$s12FlowFrameKit0aB21FactoryLoaderProtocolP
$s12FlowFrameKit0aB15FactoryProtocolP
Sbxc
yxGSgxc
ypyc
$sSY
$ss12CaseIterableP
SS4text_t
SS7message_SS5usaget
SS7message_
8exitCodet
SayypG
yypG
ypSg
$ss30KeyedDecodingContainerProtocolP
_pXp_AA_pXpt
$s12FlowFrameKit20ArrayWrapperProtocolP
SayxG
ySSG
$ss25ExpressibleByArrayLiteralP
ySnySiGG
yypG
$s12FlowFrameKit17ParsableArgumentsP
$s12FlowFrameKit19ArgumentSetProviderP
xq_Iegnn_
yxGSg
yyp_yptc
SaySSGSg
ySaySSGG
_SSt
_pGSg
_pGSgz_Xx
G0R1_
_pGSg
_pGSgz_Xx
_pGSg
_pGSgz_x_qd__r__lXX
yxq_G
_pGIegn_
G1R1_
G1R0_
So21OS_dispatch_semaphoreC
yxGG
yx_GG
5Input
yxGSg
GSpySo8NSObjectCGSgSpyypGSgytIeglllr_
SS_Sb14withSingleDasht
ySSG
ySbG
SSXMT
S2SSgIeggr_
_pSg
SaySSG10extensions_t
SaySSGAAc
$ss32ExpressibleByStringInterpolationP
$ss26ExpressibleByStringLiteralP
$ss43ExpressibleByExtendedGraphemeClusterLiteralP
$ss33ExpressibleByUnicodeScalarLiteralP
xIegn_
_pSg
yyp_xy
_pGctc
yyp_y
_pGctc
yyp_ypy
_pGctc
ypypc
$s12FlowFrameKit0aB8ProtocolP
_pGIegn_
SSSg5shell_t
_SStG
8previous_AA9duplicateSaySSG13originalInputt
6forKey_t
SgSS
6forKey
_pSg13originalErrort
6forKeyt
Si_Sit
$s12FlowFrameKit22DecodableParsedWrapperP
5Value
$ss9OptionSetP
$ss10SetAlgebraP
ztKc
ztKc
SgSS
ztKc
$s12FlowFrameKit26ArgumentHelpOptionProviderP
_pIegnlrzo_
_pIegglzo_
$s12FlowFrameKit14EnumerableFlagP
FlowFrameKit/Argument.swift
--------------------------------------------------------------------
Can't read a value from a parsable
argument definition.
This error indicates that a property declared with an `@Argument`,
`@Option`, `@Flag`, or `@OptionGroup` property wrapper was neither
initialized to a value nor decoded from command-line arguments.
To get a valid value, either call one of the static parsing methods
(`parse`, `parseAsRoot`, or `main`) or define an initializer that
initializes _every_ property of your parsable type.
--------------------------------------------------------------------
Argument(*definition*)
 <subcommand>' for detailed help.
Show the version.
Show help information.
FlowFrameKit/HelpGenerator.swift
element
parent
children
Validation failed for `
Can't have a positional argument `
` following an array of positional arguments `
` is defined without a corresponding `CodingKey`.
 are defined without corresponding `CodingKey`s.
FlowFrameKit/ParsableArgumentsValidation.swift
Unexpected validation error: 
The validator should always throw.
One or more Boolean flags is declared with an initial value of `true`.
This results in the flag always being `true`, no matter whether the user
specifies the flag or not. To resolve this error, change the default to
`false`, provide a value for the `inversion:` parameter, or remove the
`@Flag` property wrapper altogether.
Affected flag(s):
) `Option` or `Flag` arguments are named "
value
prev
next
head
tail
count
namespace
wrappedHasFrameAbleToHandle
wrappedMakeFrameAbleToHandle
anyController
anyRenderer
SHELL
FlowFrameKit/CompletionsGenerator.swift
Fatal error
Invalid CompletionShell: 
 --help' for more information.
Unspecified version
FlowFrameKit/ArgumentDecoder.swift
_TtC12FlowFrameKit15ArgumentDecoder
values
usedOrigins
nextCommandIndex
previouslyDecoded
codingPath
userInfo
decoder
function __fish_
_using_command
    set cmd (commandline -opc)
    if [ (count $cmd) -eq (count $argv) ]
        for i in (seq (count $argv))
            if [ $cmd[$i] != $argv[$i] ]
                return 1
            end
        end
        return 0
    end
    return 1
-f -a '(command 
 -- --custom (commandline -opc)[1..-1])'
-f -a '(__fish_complete_directories)'
-f -a '(for i in 
_TtC12FlowFrameKit18AnyChildCompletion
completion
FlowFrameKit/FlowFrameOperation.swift
Expected controller of type 
 and exitValue of type 
 but instead got 
Show subcommand help information.
MegaFrame.onInput result not set
MegaFrame.onInput result not set.
 MegaFrame.onInput Cancelled after.
FlowFrameRuntime MegaFrame.onInput Cancelled after.
 onInput() timed out.
FlowFrameRuntime MegaFrame.onInput wait timeout.
FlowFrameRuntime MegaFrame.onInput wait.
 MegaFrame.onInput Cancelled before.
MegaFrame.onInput Cancelled before.
FlowFrameRuntime MegaFrame.onInput. %s
MegaFrame.execute result not set
MegaFrame.execute result not set.
FlowFrameRuntime MegaFrame.execute wait complete.
 MegaFrame.execute Cancelled after.
FlowFrameRuntime MegaFrame.execute Cancelled after.
 execute() timed out.
FlowFrameRuntime MegaFrame.execute wait timeout.
FlowFrameRuntime MegaFrame.execute wait.
 MegaFrame.execute Cancelled before.
MegaFrame.execute Cancelled before.
FlowFrameRuntime MegaFrame.execute. %s
MegaFrame.action result not set
MegaFrame.action result not set.
MegaFrame.action Cancelled after.
FlowFrameRuntime MegaFrame.action wait.
 MegaFrame.action Cancelled before.
MegaFrame.action Cancelled before.
FlowFrameRuntime MegaFrame.action. %s
FlowFrameRuntime MegaFrame.exit. %s
FlowFrameRuntime MegaFrame.cancel. %s
MegaFrame(namespace: 
FlowFrameRuntime is blocked: attempting to reset it.
FlowFrameRuntime reset finished.
FlowFrameRuntime reset, clear stack.
ResetStackLockFatal
Timeout waiting to reset. Semaphore lock.
FlowFrameRuntime reset semaphone locked. Unable to continue.
'%s' is stuck on the stack! This flow may not have exited properly by calling its completion handler
FlowFrameRuntime reset semaphone locked. Attempting cancel.
FlowFrameRuntime reset, cancel stack.
v8@?0
FlowFrameRuntime handle.
frame
frameCompletion
timeout
isCancelled
semaphoreExecute
semaphoreOnInput
semaphoreAction
trackedFrames
frameFactoryLoader
semaphore
stack
configuration
currentFrame
FlowFrameRuntime action complete.
FlowFrameRuntime action activeFrame.action pushing next frame. %s
FlowFrameRuntime action active frame. %s
FlowFrameRuntime action with understandableFrames count %ld.
FlowFrameRuntime frameFactoryLoader.loadFactory failed.
FlowFrameRuntime factory.makeFrameAbleToHandle failed.
FlowFrameRuntime frame created handle input does not understand input.
FlowFrameRuntime frame created handle input understands input.
FlowFrameRuntime error calling onInput for new frame. %s
FlowFrameRuntime created frame to handle input.
FlowFrameRuntime found no frames supporting input. Clearing existing stack frames.
FlowFrameRuntime found Understandable frame. %s
FlowFrameRuntime onInput. Stack size %ld
Frame
END id=%{public}s
START ns=%{public}s name=%{public}s depth=%llu id=%{public}s parentId=%{public}s frameTypeId=%llu
No frame understands the given input
, parent: {namespace: 
MegaFrame.%s repeated completion invocation. Logging %ld callstack symbols.
FlowFrameKit/NameSpecification.swift
' has not characters to form short option name.
FlowFrameKit/Flag.swift
FlowFrameKit/Option.swift
generateCompletionScript
FlowFrameKit/CommandParser.swift
Unexpected error: 
The ParsableCommand "
" can't have itself as its own subcommand.
Missing required subcommand.
Invalid option: -
Invalid option: 
' does not take any value, but '
' was specified.
Internal error. Invalid state while parsing command-line arguments.
Internal error. Parsing command-line arguments hit unimplemented code path.
Missing one of: '
Missing expected argument '
No value set for non-argument var 
. Replace with a static variable, or let constant.
Can't generate completion scripts for '
Please use --generate-completion-script=<shell> with one of:
    
Can't autodetect a supported shell.
Please use --generate-completion-script=<shell> with one of:
    
Unknown option '
'. Did you mean '
Missing value for '
 unexpected arguments: '
Unexpected argument '
Value to be set with 
 had already been set with 
' is invalid for '
' is invalid for '<
FlowFrameKit/OptionGroup.swift
OptionGroup(*definition*)
com.apple.siri.sirikit
AnyFrame(frameTypeName: 
wrappedOnInput
wrappedExecute
wrappedAction
wrappedExit
frameTypeName
underlyingFrame
Controller is of wrong type
Flag(*definition*)
offset element 
    opts="$opts 
    if [[ $COMP_CWORD == "
" ]]; then
        COMPREPLY=( $(compgen -W "$opts" -- "$cur") )
        return
    fi
    case ${COMP_WORDS[
    return
    ;;
    COMPREPLY=( $(compgen -W "$opts" -- "$cur") )
cur="${COMP_WORDS[COMP_CWORD]}"
prev="${COMP_WORDS[COMP_CWORD-1]}"
COMPREPLY=()
COMPREPLY=( $(compgen -W "$(
 "$COMP_WORDS")" -- "$cur") )
COMPREPLY=( $(compgen -W "
COMPREPLY=( $(compgen -d -- "$cur") )
COMPREPLY=( $(compgen -f -- "$cur") )
FlowFrameKit/Parsed.swift
Trying to get the argument set from a resolved/parsed property.
Option(*definition*)
local context state state_descr line
_commandname=$words[1]
typeset -A opt_args
_custom_completion() {
    local completions=("${(@f)$($*)}")
    _describe '' completions
'(-h --help)'{-h,--help}'[Print help information.]'
'(-): :->command'
case $state in
    (command)
        local subcommands
        subcommands=(
        )
        _describe "subcommand" subcommands
        ;;
    (arg)
        case ${words[1]} in
        esac
        ;;
esac
() {
    integer ret=1
    local -a args
    args+=(
    )
    _arguments -w -s -S $args[@] && ret=0
    return ret
{_custom_completion $_
{local -a list; list=(${(f)"$(
)"}); _describe '''' list}
Value
_parsedValue
remaining
unconditionalRemaining
commandName
_superCommandName
abstract
discussion
version
shouldDisplay
subcommands
defaultSubcommand
helpNames
commandStack
abstract
usage
sections
discussionSections
components
header
elements
discussion
isSubcommands
label
positionalArguments
subcommands
options
title
content
element
parent
children
recursiveSubcommand
Element
Iterator
content
namePositions
warning
failure
parsableArgumentsType
underlayingErrors
repeatedPositionalArgument
positionalArgumentFollowingRepeated
missingCodingKeys
duplicateNames
names
argumentKeys
codingPath
userInfo
success
Element
Iterator
value
parent
children
prev
next
currentNode
head
tail
count
namespace
wrappedHasFrameAbleToHandle
wrappedMakeFrameAbleToHandle
anyController
anyRenderer
RawValue
AllCases
rawValue
shell
command
help
validation
other
type
value
values
usedOrigins
nextCommandIndex
previouslyDecoded
codingPath
userInfo
wrongKeyType
topLevelHasNoUnkeyedContainer
topLevelHasNoSingleValueContainer
singleValueDecoderHasNoContainer
decoder
underlying
parsedElement
array
base
currentIndex
ArrayLiteralElement
_elements
argumentIndex
_options
options
RawValue
message
rawValue
helpRequest
ongoing
complete
replan
type
next
requireInput
onChildFrameCompletion
completion
_subcommands
commandStack
subcommands
RawValue
name
nameWithValue
_elements
firstUnused
originalInput
value
index
option
terminator
rawValue
complete
inputIndex
subIndex
frame
frameCompletion
timeout
isCancelled
semaphoreExecute
semaphoreOnInput
semaphoreAction
trackedFrames
perFrameOperationTimeout
frameFactoryLoader
semaphore
stack
configuration
currentFrame
parentId
namespace
typeName
depth
signpostId
ArrayLiteralElement
elements
customLong
customShort
long
short
commandStack
parserError
commandTree
currentNode
decodedArguments
_generateCompletionScript
generateCompletionScript
kind
list
file
shellCommand
custom
default
directory
message
input
toolName
definition
arguments
error
Value
_parsedValue
StringInterpolation
StringLiteralType
ExtendedGraphemeClusterLiteralType
UnicodeScalarLiteralType
abstract
discussion
valueName
shouldDisplay
namespace
wrappedOnInput
wrappedExecute
wrappedAction
wrappedExit
frameTypeName
underlyingFrame
Value
_parsedValue
prefixedNo
prefixedEnableDisable
exclusive
chooseFirst
chooseLast
long
short
longWithSingleDash
completionScriptRequested
completionScriptCustomResponse
unsupportedShell
unknownOption
invalidOption
nonAlphanumericShortOption
missingValueForOption
unexpectedValueForOption
unexpectedExtraValues
duplicateExclusiveValues
noValue
unableToParseValue
userValidationError
noArguments
helpRequested
versionRequested
notImplemented
invalidState
missingSubcommand
wrongType
subcommandLevelMismatch
subcommandLevelMissing
subcommandLevelDuplicated
subcommandNameMismatch
expectedCommandButNoneFound
value
definition
Element
RawValue
ArrayLiteralElement
kind
help
completion
parsingStrategy
update
initial
nullary
unary
named
positional
options
discussion
defaultValue
keys
allValues
isComposite
rawValue
nextAsValue
scanningForValue
unconditional
upToNextOption
allRemainingInput
RawValue
rawValue
elements
originalInput
value
inputOrigin
shouldClearArrayIfParsed
Value
_parsedValue
next
unconditional
scanningForValue
singleValue
unconditionalSingleValue
upToNextOption
remaining
callStackSymbols
bash
fish
FlowFrameKit
__terminator
