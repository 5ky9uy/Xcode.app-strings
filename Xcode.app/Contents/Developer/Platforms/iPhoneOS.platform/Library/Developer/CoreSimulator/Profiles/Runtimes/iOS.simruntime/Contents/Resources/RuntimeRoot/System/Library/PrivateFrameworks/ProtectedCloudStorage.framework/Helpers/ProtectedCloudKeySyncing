@(#)PROGRAM:ProtectedCloudKeySyncing  PROJECT:ProtectedCloudStorage-867.40.10
33333
URKey
PCSUserRegistry
PCSUserRegistryMobileBackup
PCSUserRegistrySubscription
doneSubscription
publicKey
escrow
firstSeen
identity
keyStatus
serverChangeToken
MBserverChangeToken
com.apple.ProtectedCloudStorage
UserRegistry
PCS-APS
v8@?0
Failed to initalize UserRegistryDB
flushStats
v24@?0q8@"NSError"16
com.apple.icloud-container.
com.apple.protectedcloudstorage.protectedcloudkeysyncing
v24@?0@"NSString"8@"NSError"16
done
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
v32@?0@"CKRecordID"8@"CKRecord"16@"NSError"24
v24@?0@"CKRecordID"8@"NSString"16
v44@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24B32@"NSError"36
v16@?0@"NSError"8
clearPendingVariables
v24@?0@"CKAccountInfo"8@"NSError"16
No iCloud account
record
UserRegistryStats
MobileBackup
v16@?0r^v8
v16@?0^{__CFString=}8
TRUEPREDICATE
v24@?0@"NSArray"8@"NSError"16
%@-%@%@
Timed out waiting for a reply to %@ message with ID %@
com.apple.ProtectedCloudStorage.MessagerRegistration
com.apple.ProtectedCloudStorage.IDSMessaging
-[PCSIDSTransport setDeviceManager:]_block_invoke
PCSIDSTransport.m
self.service
deviceManager
com.apple.ProtectedCloudStorage.outstandingReply
com.apple.ProtectedCloudStorage.device_internal_queue
%@%@
38mm
42mm
Unknown
Unhandled
com.apple.pairedsync.protectedcloudkeysyncing
com.apple.appconduitd.PCSDeviceManager.internal
%@(%@,%@)
%@(%@)
finished 
cancelled
executing
ready
pending
<%@: %@ error:%@>
<%@: %@%@>
 dep:
<%@ (%p): %@ error:%@>
<%@ (%p): %@%@>
B32@?0@8Q16^B24
<PCSRegistryOperationPair: %@, %@>
PCSIDSSyncing
v16@?0@"PCSPeerSyncing"8
force
%@ - %@
com.apple.private.alloy.pcskey.sync
inital sync
Current
Keys
iCDPFlag
v24@?0@"PCSIDSMessage"8@"NSError"16
v32@?0@"NSString"8Q16^B24
reply
nextRegistrySync
registrySyncIdentifier
v28@?0B8@"PCSMTT"12@"NSError"20
trigger
PCSDelayedActionQueue
com.apple.security.PCSIdentityBackup
lastSeen
lastHash
name
lastSent
failures
numberHandshakes
buildVersion
firstSync
protocol
dsid
iCDP2
circle2
v32@?0@?<v@?@"NSString">8Q16^B24
clients
v32@?0@8@16^B24
nextRegistrySyncEnterprise
starting IDS
testRollEpoch
PCSWatchSyncing
com.apple.ProtectedCloudStorage.scheduledKeyroll
v16@?0@"NSObject<OS_xpc_object>"8
PCS-healthSummary
shouldRoll
roll
@"NSDictionary"8@?0
notifyKeyRegistry
com.apple.ProtectedCloudStorage.triggerWatchSyncing
v24@?0@"NSDictionary"8@"NSError"16
com.apple.ProtectedCloudStorage.test.mobileBackupStateChange
com.apple.nanoregistry.paireddevicedidchangeversion
com.apple.pairedsync.syncDidComplete
com.apple.ProtectedCloudStorage.updatedKeys
com.apple.security.view-change.PCS
com.apple.security.secureobjectsync.circlechanged
com.apple.ProtectedCloudStorage.mobileBackupStateChange
com.apple.ProtectedCloudStorage.PendingKeyRoll
BYSetupAssistantFinishedDarwinNotification
lastMobileBackupStatus
No last mobile backup status, but have a keyroll epoch time (%@)
False alarm check for backup state change
v48@?0I8^{__CFString=}12B20B24i28^{__CFString=}32^{__CFString=}40
v20@?0@"NSString"8B16
v32@?0@"NSData"8@"PCSMTT"16@"NSError"24
com.apple.ProtectedCloudStorage.test.mobileBackupStateChange.success
Failed keyroll operations for  %d of %d keys
Skipping escrow proxy sync, could not determine dsid and/or identifier: %@
v20@?0B8@"NSError"12
unsupported service
cannot create identity set
No ServiceName Specified
Failed getting dsid: %@
CDP not supported on this account: %@
Manatee not supported on this device
v40@?0@"NSNumber"8@"NSNumber"16@"NSNumber"24@"NSError"32
v44@?0^{_PCSIdentityData=}8@"NSData"16@"PCSMTT"24B32@"NSError"36
request already pending
Mobile backup is disabled
v32@?0@8Q16^B24
No user registry
test
restore
DSID missing
Failed to get identities
Would Be
reportStatus
view
global
currentTLK
keystate
become_ready
readypendingunlock
waitforunlock
error
initializing
initialized
fetchcomplete
begin_fetch
waitfortlkcreation
waitfortlkupload
badcurrentpointers
waitfortrust
needrefetch
newtlksfailed
fetching
tlkmissing
waitfortlk
unhealthy
healtlkshares
healtlksharesfailed
waitforfixupoperation
resetzone
com.apple.private.protectedcloudstorage.keysyncing
PCSSync
com.apple.ProtectedCloudStorage.fortnightly
com.apple.notifyd.matching
init
containerWithIdentifier:
initWithZoneName:ownerName:
defaultAccountsModel
initWithDelay:operationQueue:
syncUserRegistry
setAction:
setHoldTransaction:
setupSubscriptions
ensureUserRegistryDbLoaded:
oslog
userdb
dsid
initWithDSID:
setUserdb:
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
cacheUserRegistryStats
stats
stats_dirty
setStats_dirty:
queue
_onqueueSaveUserRegistryStats
setDiscretionaryNetworkBehavior:
setAutomaticallyRetryNetworkFailures:
setTimeoutIntervalForResource:
setIsCloudKitSupportOperation:
container
lastfetchRecordZoneChangesAtStart
accountStatusWithCompletionHandler:
defaultCenter
checkAccountStatus:
addObserver:selector:name:object:
initWithEnvironmentName:namedDelegatePort:queue:
setDelegate:
stringByAppendingString:
arrayWithObjects:count:
_setEnabledTopics:
serverPreferredPushEnvironmentWithCompletionHandler:
subscribeAction
trigger
getConfigData:
initWithSubscriptionID:
setNotificationInfo:
initWithSubscriptionsToSave:subscriptionIDsToDelete:
cloudKitRateLimitedOp
addDependency:
dataWithBytes:length:
replaceConfigRecord:data:
deleteRecordID:
checkErrorForRetryPause:
setModifySubscriptionsCompletionBlock:
defaultCKConfiguration
setConfiguration:
addDatabaseOperation:
pushNotifications
setPushNotifications:
flushStats
_onqueueDeleteServerChangeToken:
clearCloudKitCache
zoneReset
setZoneReset:
createPendingSyncOperation:
setCurrentSyncOperations:
mainOperationQueue
actualOperation
addOperation:
setError:
getServerChangeToken:
setPreviousServerChangeToken:
previousServerChangeToken
initWithRecordZoneIDs:configurationsByRecordZoneID:
setFetchAllChanges:
recordName
zoneID
mobileBackupRecordZoneID
isEqual:
saveEscrowChange:
setRecordWasChangedBlock:
deleteEscrowID:
setRecordWithIDWasDeletedBlock:
domain
isEqualToString:
saveServerChangeToken:forKey:
setRecordZoneFetchCompletionBlock:
fetchRecordZoneChanges
setFetchRecordZoneChanges:
setLastfetchRecordZoneChangesAtStart:
setFetchRecordZoneChangesCompletionBlock:
privateDatabase
pendingSyncOperations
finishOperation
currentSyncOperations
setPendingSyncOperations:
init:finish:
error
addExecutionBlock:
accountInfoWithCompletionHandler:
accountStatus
hasValidCredentials
accounts
setDsid:
createZone:withName:
fetchAllChanges:
errorShouldCauseReset:
resyncDatabase:
resyncRegistryAction
mobileBackup
isBackupEnabled
startBackupOfNewMobileBackupIdentities
blockOperationWithBlock:
initRequiringSecureCoding:
encodeObject:forKey:
recordType
objectForKeyedSubscript:
recordID
encodedData
replaceRecordID:data:publicKey:
initForReadingFromData:error:
decodeObjectOfClass:forKey:
setStats:
recordFetch
setRecordFetch:
recordModify
setRecordModify:
deleteRecordAll
privateCloudDatabase
code
userInfo
allValues
countByEnumeratingWithState:objects:count:
doubleValue
setCloudKitRateLimitedOp:
initWithZoneName:
initWithRecordZonesToSave:recordZoneIDsToDelete:
setModifyRecordZonesCompletionBlock:
setEscrowKey:escrowBlob:
deleteEscrowKey:
queryEscrowKey:
queryEscrowName:
count
mutableCopy
removeObjectsInRange:
arrayWithArray:
subarrayWithRange:
statModify
initWithRecordsToSave:recordIDsToDelete:
setSavePolicy:
cancel
pushMobileBackupRecordsToCloudKit:removeObjects:
setModifyRecordsCompletionBlock:
setObject:forKeyedSubscript:
initWithRecordName:zoneID:
initWithRecordType:recordID:
date
identityCopySet
mobileBackupKeyRecordIdentity:version:
etag
keyRecord:withName:zone:
updateEscrowData:escrowIdentity:identity:
addObject:
scanPCSIdentitiesForNewMobileBackupRecords
array
lastError
longValue
copy
setData:
setFlags:
queryEscrowKeys
loadMobileBackupKeysFromDB
extractMobilebackupKeyEscrow:
predicateWithFormat:
initWithRecordType:predicate:
performQuery:inZoneWithID:completionHandler:
queryMobileBackupKeysFromCloudKit:
ckRecordListToRecordIDs:
allKeys
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveToken:forInfo:
connection:didReceiveURLToken:forInfo:
connection:didReceiveURLTokenError:forInfo:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
connection:channelSubscriptionsFailedWithFailures:
initWithBackup:
setupStatCache
setupCloudKitSyncing
registerCloudKitNotifications
saveRecord:
statFetch
deleteMobileBackupZone
queryEscrowID:
keyRecordIdentity:device:version:
checkRegistry:
allMobileBackupKeys
allMobileBackupPublicKeys
fetchMobileBackupRecordIDsWithError:
userDBBackupRecordIDsWithError:
setMainOperationQueue:
setResyncRegistryAction:
setSubscribeAction:
setContainer:
setMobileBackup:
recordZoneID
setRecordZoneID:
setMobileBackupRecordZoneID:
setAccounts:
setOslog:
resubmitSyncing
setResubmitSyncing:
setQueue:
.cxx_destruct
_resubmitSyncing
_stats_dirty
_stats
_mainOperationQueue
_resyncRegistryAction
_subscribeAction
_container
_mobileBackup
_recordZoneID
_mobileBackupRecordZoneID
_accounts
_oslog
_userdb
_queue
_currentSyncOperations
_pendingSyncOperations
_cloudKitRateLimitedOp
T@"NSOperationQueue",&,V_mainOperationQueue
T@"PCSDelayedAction",&,V_resyncRegistryAction
T@"PCSDelayedAction",&,V_subscribeAction
T@"CKContainer",&,V_container
T@"PCSMobileBackup",&,V_mobileBackup
T@"CKRecordZoneID",&,V_recordZoneID
T@"CKRecordZoneID",&,V_mobileBackupRecordZoneID
T@"PCSAccountsModel",&,V_accounts
T@"NSObject<OS_os_log>",&,V_oslog
T@"UserRegistryDB",&,V_userdb
TB,V_resubmitSyncing
T@"NSObject<OS_dispatch_queue>",&,V_queue
TB,V_stats_dirty
T@"PCSRegistryOperationPair",&,V_currentSyncOperations
T@"PCSRegistryOperationPair",&,V_pendingSyncOperations
T@"NSOperation",&,V_cloudKitRateLimitedOp
T@"UserRegistryStats",&,V_stats
stringWithFormat:
UTF8String
setReplyBlock:
setCompletion:
runReplyHandlerWithMessage:error:
setTimeoutTimer:
replyBlock
completion
timeoutTimer
initWithTimeout:queue:logDescription:sentID:replyHandler:completion:
_timeoutTimer
_replyBlock
_completion
T@"NSObject<OS_dispatch_source>",&,V_timeoutTimer
T@?,C,V_replyBlock
T@?,C,V_completion
initWithServiceName:
initWithService:
service
internalQueue
addDelegate:queue:
serviceDelegateSet
setServiceDelegateSet:
sharedInstance
getPairedDevices
initForSimulatorWithNRDevice:
setSimulatedDevices:
idsDeviceIdentifier
setWithObject:
numberWithDouble:
numberWithBool:
sendMessage:toDestinations:priority:options:identifier:error:
pendingReplies
removeObjectForKey:
setTransaction:
idsContext
expectsPeerResponse
message
fromID
outgoingResponseIdentifier
incomingResponseIdentifier
initWithMessage:idsContext:fromID:
delegate
incomingMessage:fromDevice:
transportWithIDSServiceName:
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:linkedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantUpdate:context:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
setDeviceManager:
sendMessage:toDevice:withPriority:timeout:logDescription:handleReply:
sendResponse:toMessage:withPriority:timeout:logDescription:
copyLocalPairedDevices
transaction
deviceManager
_serviceDelegateSet
_delegate
_pendingReplies
_internalQueue
_service
_transaction
_deviceManager
T@"NSMutableDictionary",R,V_pendingReplies
T@"NSObject<OS_dispatch_queue>",R,V_internalQueue
T@"IDSService",R,V_service
TB,V_serviceDelegateSet
T@"NSObject<OS_os_transaction>",&,V_transaction
T@"<PCSIDSMessagingDeviceManager>",W,N,V_deviceManager
T@"<PCSIDSMessagingDelegate>",W,N,V_delegate
weakObjectsHashTable
nrDevice
valueForProperty:
boolValue
setIsConnected:
setIsActivePairedDevice:
UUIDString
observers
removeObject:
isConnected
isActivePairedDevice
_onQueue_isReachable
length
addObserver:
removeObserver:
pairingID
supportsPCSKeySync
supportsNewProtocol
isReachable
model
watchSize
buildVersion
osVersion
serialNumber
UUID
isTombstone
setIsTombstone:
syncingIsRestricted
setSyncingIsRestricted:
_isActivePairedDevice
_isConnected
_isTombstone
_syncingIsRestricted
_nrDevice
_idsDeviceIdentifier
_observers
TB,V_isConnected
TB,V_isActivePairedDevice
TB,V_isTombstone
TB,V_syncingIsRestricted
T@"NSHashTable",R,V_observers
T@"NRDevice",R,V_nrDevice
T@"NSString",R,V_idsDeviceIdentifier
T@"NSUUID",R
TB,R
T@"NSString",R
completionBlockWithError
main
setCompletionBlockWithError:
_completionBlockWithError
_dsid
T@"NSString",&,V_dsid
T@?,C,V_completionBlockWithError
syncCoordinatorWithServiceName:
initWithDelegate:
syncSessionType
sharedManager
pairedDevice
deviceForNRDevice:
defaultSyncingManager
getClientWithIdentifier:
isNewWatch
updateProtocolVersionIfNeeded:
defaultPCSSyncing
checkSyncingForPeer:force:
syncDidComplete
sharedSyncDelegate
syncCoordinator:beginSyncSession:
syncCoordinator:didInvalidateSyncSession:
syncCoordinatorDidChangeSyncRestriction:
supportsMigrationSync
syncCoordinatorDidReceiveStartSyncCommand:
initialSyncStateObserver:initialSyncDidCompleteForPairingIdentifier:
initialSyncStateObserver:syncDidResetForPairingIdentifier:
initialSyncStateObserver:syncDidCompleteForPairingIdentifier:
initialSyncStateObserverClientCanRetryFailedRequests:
syncingIsRestrictedForPairingID:
coordinator
stateObserver
_coordinator
_stateObserver
T@"PSYSyncCoordinator",R,V_coordinator
T@"PSYInitialSyncStateObserver",R,V_stateObserver
activePairedDevice
devices
deviceForPairingID:
setActivePairedDevice:
newDevices:removedDevices:
currentActivePairedDevice
deviceForIDSIdentifier:
allDevices
_devices
_activePairedDevice
T@"NSMutableDictionary",R,V_devices
T@"PCSDevice",&,V_activePairedDevice
T@"<PCSDeviceManagerDelegate>",W,V_delegate
T@"NSArray",R
name
operationUUID
isFinished
isCancelled
isExecuting
isReady
operationStateString
selfname
pendingDependenciesString:
dependencies
indexesOfObjectsPassingTest:
objectsAtIndexes:
componentsJoinedByString:
setOperationUUID:
_error
_operationUUID
T@"NSString",&,V_operationUUID
T@"NSError",&,V_error
setActualOperation:
setFinishOperation:
_actualOperation
_finishOperation
T@"PCSRegistryOperation",&,V_actualOperation
T@"PCSRegistryOperation",&,V_finishOperation
_message
_idsContext
_fromID
T@"NSDictionary",R,V_message
T@"IDSMessageContext",R,V_idsContext
T@"NSString",R,V_fromID
dictionary
transport
handleIncomingMessage:
connectionForDevice:complete:
syncingQueue
peers
manager
initWithDevice:syncingManager:
setObject:forKey:
updateLastSeen
addOperationWithBlock:
checkSyncing:
setName:
saveClient:
initWithManager:transport:serialQueue:
havePeers
triggerIDSSyncing:
devicesAreNowNearby:
devicesAreNoLongerNearby:
setTransport:
setManager:
setPeers:
setSyncingQueue:
_transport
_manager
_peers
_syncingQueue
T@"PCSIDSTransport",&,V_transport
T@"PCSKeySyncing",&,V_manager
T@"NSMutableDictionary",&,V_peers
T@"NSObject<OS_dispatch_queue>",&,V_syncingQueue
T@"NSOperationQueue",&,V_queue
device
client
setLastSeen:
numberWithUnsignedInt:
lastSent
timeIntervalSinceDate:
lastSeen
failures
checkRatelimit:
timeUntilSyncing
lastHash
isEqualToData:
updateClient:
protocolVersion
sendKeys
copyAllPCSKeys:
copySHA256Hash:
checkHashWithRateLimit:
ratelimitClientSyncing
pendingRequest
setKeys:
setPendingRequest:
numberHandshakes
setNumberHandshakes:
setLastSent:
keyFailure:
intValue
setClientVersion:
haveKeys:
sendKeysOld
syncingManager
setProtocolVersion:
sendCommand:data:dsid:handleReply:
keys
signalComplete:
pcsKeyData:
enumerateObjectsUsingBlock:
updateSyncedKeysToDevice:type:keys:
sendSomeKeys:dsid:
sendCurrentKeys:
sendKeys:dsid:handleReply:
copyIdentitySet
sendCurrents:dsid:handleReply:
outStandingPCSKeys:
iCDPStatus
companionCircleMember
iCDP
circle
setPeeriCDPStatus:
setPeerCircleStatus:
sendiCDPStatus:circleStatus:handleReply:
setBuildVersion:
setFailures:
firstSync
setFirstSync:
data
setLastHash:
setICDP:
setCircle:
numberWithInt:
numberWithInteger:
sendReply:error:toMessage:
identifier
settingsKeyForKey:error:
triggerSyncingWithEscrowProxy:dsid:accountIdentifier:accountLastError:settingsKeyExpirationDate:settingsKeyIdentifier:complete:
uuid
setDevice:
clientVersion
setClient:
setSyncingManager:
_pendingRequest
_clientVersion
_device
_keys
_client
_syncingManager
T@"PCSDevice",&,V_device
T@"NSData",&,V_keys
TB,V_pendingRequest
Ti,V_clientVersion
T@"PCSKeyClient",&,V_client
T@"PCSKeySyncing",&,V_syncingManager
actionOnTrigger
setActionOnTrigger:
delayInSeconds
setDelayInSeconds:
operationQueue
setOperationQueue:
waitSource
setWaitSource:
pendingTransaction
setPendingTransaction:
noTransaction
setNoTransaction:
running
setRunning:
_running
_actionOnTrigger
_delayInSeconds
_operationQueue
_waitSource
_pendingTransaction
_noTransaction
T@?,C,V_actionOnTrigger
TQ,V_delayInSeconds
T@"NSOperationQueue",&,V_operationQueue
T@"NSObject<OS_dispatch_source>",&,V_waitSource
T@"NSObject<OS_os_transaction>",&,V_pendingTransaction
Tq,V_noTransaction
TB,V_running
setUuid:
updateWithValues:dsid:
setIsNewWatch:
numberWithLong:
dictionaryWithDictionary:
initWithName:values:dsid:
getValues:
_iCDP
_circle
_isNewWatch
_failures
_uuid
_buildVersion
_firstSync
_lastSeen
_lastHash
_name
_lastSent
_protocolVersion
_numberHandshakes
T@"NSString",&,V_uuid
T@"NSString",&,V_buildVersion
T@"NSDate",&,V_firstSync
T@"NSDate",&,V_lastSeen
T@"NSData",&,V_lastHash
T@"NSString",&,V_name
Ti,V_failures
T@"NSDate",&,V_lastSent
Tq,V_protocolVersion
TB,V_iCDP
TB,V_circle
TB,V_isNewWatch
Tq,V_numberHandshakes
setSettings:
userRegistry
deleteMirrorKeys:
beginExclusiveTransaction
markMirrorKey:type:
setMirrorKey:service:type:publicIdentity:
updateMirrorKey:service:type:newType:current:
endTransaction:
updateSyncDevice:seen:version:
syncedKeyToDevice:type:device:
syncDevices
missingKeysFromDevice:type:
dataWithLength:
bytes
mutableBytes
settings
dictionaryForKey:
updateSyncDevice:version:
enumerateKeysAndObjectsUsingBlock:
addUpdateNotify:
storePCSKeyData:current:
setiCDPStatus:
setCompanionCircleMember:
syncKeysWithDatabase
allClients
database
setDatabase:
notifyHooks
setNotifyHooks:
_settings
_database
_notifyHooks
T@"NSUserDefaults",&,V_settings
T@"UserRegistryDB",&,V_database
T@"NSMutableArray",&,V_notifyHooks
initWithPCSKeySyncing:
setupMetrics
setInternalQueue:
setMaxConcurrentOperationCount:
setKeyrollSchedulerSource:
keyrollSchedulerSource
actuallyScheduleRollAttempt
setSyncing:
defaultMobileBackup
setRegistry:
registry
setRegistryQueue:
setTriggerWatchSyncingAction:
triggerWatchSyncingAction
triggerWatchSyncing:
setupActivity
setScheduledKeyrollActivity:
triggerKeyRolling
logger
shouldRoll
getRollEpoch
fuzzyDaysSinceDate:
AddMultiSamplerForName:withTimeInterval:block:
queuedCheckRegistry:withReply:
syncing
syncKeys:withReply:
setWithArray:
containsObject:
boolForKey:
setBool:forKey:
recordEpochForKeyroll
logSuccessForEvent:
checkForBackupStateChange
notifyKeyRegistry
clearNextSyncNegativeCache
objectForKey:
compare:
timeIntervalSince1970
serialOperationQueue
logRecoverableError:forEvent:withAttributes:
shouldRollStingray
distantPast
timeIntervalSinceNow
attemptTimer
scheduledKeyrollActivity
identityCopySet:
dateWithTimeIntervalSince1970:
getServicesToRoll:handler:
scheduleRollAttempt
rollingComplete:
createIdentity:dsid:roll:sync:complete:
fetchWithTimeout:error:
stringForKey:
dateByAddingTimeInterval:
currentPersonaSupportsPrimaryAccount:
ensureMKExists:error:
triggerCKKSSyncForService:dsid:complete:
triggerEscrowSyncWithDSID:accountIdentifier:accountLastError:settingsKeyExpirationDate:settingsKeyIdentifier:complete:
initWithIdentitySet:dsid:
restoreMobileBackup:dsid:withReply:
createNewIdentity:roll:sync:complete:
triggerWatchSyncing
accountForCurrentPersona
aa_personID
notifyInternalEvent:
registryQueue
notifyDailyEvent
waitUntilFinished
initWithInt:
aa_altDSID
setAltDSID:
setContext:
initWithContextData:
setUseCachedAccountStatus:
fetchCliqueStatus:error:
controlObject:
rpcStatus:reply:
getAllClients:
requestKeys:withReply:
triggerDaily:withReply:
setupIdentitiesForAccount:withParameters:optional:
migrateToiCDPForAccount:withParameters:complete:
manateeStatus:complete:
keyRollPending:complete:
fetchAllDeviceKeys:withReply:
triggerUserRegistryCheck:withReply:
mobileBackupRecordIDsWithReply:
userDBBackupRecordIDsWithReply:
fetchStats:
mobileBackupStatus:
initForTesting
notifyEvent:
setSerialOperationQueue:
_registry
_registryQueue
_triggerWatchSyncingAction
_serialOperationQueue
_syncing
_keyrollSchedulerSource
_scheduledKeyrollActivity
T@"NSObject<OS_dispatch_queue>",&,V_internalQueue
T@"PCSUserRegistry",&,V_registry
T@"NSObject<OS_dispatch_queue>",&,V_registryQueue
T@"PCSDelayedAction",&,V_triggerWatchSyncingAction
T@"NSOperationQueue",&,V_serialOperationQueue
T@"PCSIDSSyncing",&,V_syncing
T@"NSObject<OS_dispatch_source>",&,V_keyrollSchedulerSource
T@"NSObject<OS_xpc_object>",&,V_scheduledKeyrollActivity
valueForEntitlement:
processIdentifier
interfaceWithProtocol:
setExportedInterface:
exportedInterface
setExportedObject:
resume
listener:shouldAcceptNewConnection:
initWithMachServiceName:
stringWithUTF8String:
currentRunLoop
Failed to initalize UserRegistryDB: %@
Failed to initalize UserRegistryDB
accountStatusWithCompletionHandler: %d error: %@
Starting to sync
Stoping syncing
setupCloudKitSyncing: Failed to initalize UserRegistryDB: %@
setupSubscriptions: Failed to initalize UserRegistryDB: %@
attempting to subscribe to CK zone changes
setupSubscriptions: rate-limited by CloudKit
subscription completed
Couldn't create database subscription; syncing is severely degraded: %@
didReceiveToken: %@, triggering syncing
Creating resyncing operation, finishing with %@
fetchAllChanges: Failed to initalize UserRegistryDB: %@
Fetching changes after change token %@
received new record(%@) for: %@
Got CloudKit error: %@
got update for unknown zone: %@
Record deleted: %@
got delete for unknown zone: %@
Got CloudKit error while fetching: %@ for zone:%@
Got other error: %@for zone:%@
Finished fetching changes for %@ with change token %@
fetchRecordzoneChangesCompletionBlock error: %@
Finished fetching changes with error: %@
syncUserRegistry: Failed to initalize UserRegistryDB: %@
Creating new syncing operation, after %@
Returning pending syncing operation: %@
rate-limited by CloudKit
Beginning syncing operation %@
syncing operation (%@) no longer pending
Finished syncing operation %@: (%@)
Not logged into iCloud (%@)
iCloud account in grey mode (%@)
Caching DSID from Accounts
No DSID available. Quitting sync.
Creating zone before syncing
Zone creation failed for some reason: (%@), stopping MobileBackup sync
Fetch failed for some terrible reason: (%@), restarting entire sync process
Fetching failed for some reason: (%@), scheduling sync restart
MobileBackup is off; not pushing data to CloudKit
startBackupOfNewMobileBackupIdentities as part of syncing done: (%@)
Pushing new changes failed for some reason: (%@), scheduling retry
No new items to push; finishing
Created new pending syncing operation: %@
saveRecord: Failed to initalize UserRegistryDB: %@
CloudKit timeout complete
Delaying %.1f seconds for CK operations
Error creating zone (%@): %@
Created zones: %@
Error deleting zone (%@): %@
Deleted zones: %@
pushMobileBackupRecordsToCloudKit Starting
updating %u records, removing %u records
Finished uploading registry records (%@)
Stored record, saving in cache: %@
Retriggering syncing due to error (%@)
Failed to create escrow identity: %@
checkRegistry: Failed to initalize UserRegistryDB: %@
MobileBackup is off; no new records!
No PCSIdentities to Escrow to MobileBackup
Skipping MobileBackup Escrow: %@
No escrow identity
Will store %@ as (%@)
Couldn't escrow identity %@ (%@); skipping
Already stored %@ as (%@); skipping
No identities for %@
Not doing MobileBackup for %@
Harvested %lu records for MobileBackup escrow from Local PCS
Starting startBackupOfNewMobileBackupIdentities
startBackupOfNewMobileBackupIdentities - pushing new keys to cloudKit
No local mobile backup key changes
Fail getting dsid: %@
Failed to get PCS identities: %@
Converting CKRecords to PCSKeybagKeys
Converted %lu CKRecords to PCSKeybagKeys
loadMobileBackupKeysFromDB returning (count %lu)
allMobileBackupKeys: Failed to initalize UserRegistryDB: %@
Record %@ missing public key
queryMobileBackupKeysFromCloudKit
queryMobileBackupKeysFromCloudKit: error: %@
queryMobileBackupKeysFromCloudKit got keys (count %lu)
queryMobileBackupKeysFromCloudKit returning (count %lu)
fetchMobileBackupRecordIDsWithError: Failed to initalize UserRegistryDB: %@
userDBBackupRecordIDsWithError: Failed to initalize UserRegistryDB: %@
Failed to create IDSService for %@
NanoRegistry returned nil from getPairedDevices
NanoRegistry returned an empty array from getPairedDevices
Sent %@ message with IDS UUID %@
Error occurred sending %@ message with no replyHandler: %@
Reply attempted to message that did not expect peer response: %@ -> %@
Failed to get response ID from original message id %@; dropping reply
Failed to send response with ID %@ to message with ID %@
Received reply for message ID %@ with ID %@
Got message with ID %@ with response ID %@, but no reply handler available
Received message with ID %@
Got message from %@ with id %@ with no delegate set
Error occurred sending message %@: %@
Synchronize keys with escrow proxy
Current persona doesn't match dsid
Fail to synchronize keys: %@
Synchronize keys complete
Beginning %@ sync session
Found watch: %@ new: %d
No active paired device
No IDS Device registered with identifier %@
Failed to find device with pairing ID %@
Failed to get pairing ID from device %@
Failed to get PCSDevice for identifier %@; dropping message.
Failed to get sync connection for IDS device %@; dropping message
syncing  with: %@
Device %@ has disappeared
Device %@ appeared. isActive:%d, isConnected:%d
Device %@ is now nearby (isActive:%d)
Device %@ is no longer nearby (isActive:%d)
sending message: %d to peer: %@
sending keys to peer: %@
Device %@ checking if syncing needed
Can't get initial data: %@
Can't get initial hash: %@
Client %@ already have uptodate keys
Client %@ have same os version: %@
Ratelimit sending to device %@
initial request to device %@ already pending
Sending inital check-in to device %@ hash: %@
reply from initital checkin: %@ error: %@
Client have keys: %@
Client requests updating keys: have %@
Client requests new protocol
sendKeys request to device %@ already pending
Can't get dsid
Sending keys to device %@ hash:%@
reply from send key: %@ error: %@
client confirms it have key: %@
client failed
No key to send [to device: %@
sending %lu (%lu left) keys to
client confirms stored keys: %u
device: %@ type: 1 keys: %@
client failed: %d
set current: %@
Can't get pending keys
local iCDP: %d, cached peer iCDP status: %d
local circle: %d, cached peer circle status: %d
Setting peer iCDP status to: %d and circle to: %d
Failed to send message to peer: %@, trying later
Peer confirmed iCDP state too: %d
Other failure to store iCDP state: %d, trying later
handleIncomingMessage watch requested keys: %@
handleIncomingMessage sync with escrow proxy: %@
sync with escrow proxy for service %@
Failed to get key: %@
handleIncomingMessage unknown command %d from device: %@
Failed to fetch dsid from accounts: %@
Failed to get identity set for pcsKey extraction
Failed to get identity for public key %@
Failed to get exported data for identity %@: %@
Failed to parse key data: %@
Failed to store identity %@: %@
Already have a local copy of: %@
Failed to get iCDP: %@
Failed to set iCDP: %@
PERF: Syncing with device older than watchOS 4 / iOS 11
Failed to get database
Updating service %@
Skipping identities for service %@
Failed to remove MirrorKeys from registry for %@
Failed to get copy of identities of service type: %@
failed to open database transaction
Syncing %lu identities %@ with database
updating protocol for client %@
Error checking registry (%@)
Trigger syncing with watches
No peers, not doing any syncing with watches
Catching up local database changes from keychain
Trigger syncing to watches
notify sync key complete: %@: error: %@
Got darwin notification %@
MOBSTATE Got notification that mobile backup state changed.
failed to fetch appropriate key: %@
MOBSTATE Notifying registry.
There is a pending keyRoll for epoch %@
getServicesToRoll: no identity set
Unexpected error finding current identity for %@: %d
Keyrolling service %@ due to existing backup
Keyroll triggered but there is no self
Keyroll triggered, but DSID is unknown; will retry later
Keyroll triggered but we've already completed rolling (defer: %d)
PCSCKKSRollAndSync
CKKS registry roll & sync for all eligible services
CKKS registry roll & sync failed for service %@ with: %{public}@ (mtt: %@)
CKKS registry roll & sync for service %@ completed: %@
Successfully completed keyroll operations for  %d keys
Failed keyroll operations for  %d keys
Trigger syncing with escrow proxy on behalf of cloudd: next sync: %{public}@
skipping sync due to ratelimiting
setting cloudd expiration to: %@
Escrow proxy sync reported: %d: %{public}@
PCSCKKSRegistrySync
Manatee sync with CKKS registry for service %{public}@
CKKS registry sync failed with: %{public}@ (mtt: %@)
CKKS registry sync completed: %@
Failed to get W status: %@
setupIdentitiesForAccount: account %@ is already setup, ignoring request
setupIdentitiesForAccount: PCSIdentitySetup failed: %@
Completed best-effort mobile backup restore with recoverIssue:%@ missing:%@ present:%@ error:%@
Timeout expired for best-effort backup recovery. Continuing with CKKS sync.
Kicking off user registry sync due to new messages3 identity
Fail getting dsid, error: %@
dsid is nil
Already a request (recently) pending, returning early
Allowing checkRegistry calls again
Requsted keys sync
Fetching all device keys
PCSRestoreCKBackupWithCompletion: %s
restoreMobileBackup: sync finished with: %@
restoreMobileBackup: got reply from server
PCSRestoreCKBackupWithCompletion failed with: %@
%@ Adding missing identity
Already have identity
recover stats: Recovered: %d AlreadyPresent: %d RecoveryIssue: %d
PCSReportManateeStatus otStatus: %@
PCSReportManateeStatus rpcStatus: %@
PCSReportManateeStatus rpcStatus reply: %@
PCSReportManateeStatus %@ rpcStatus: %d
Client pid: %d doesn't have entitlement: %@
PCSUserRegistry
APSConnectionDelegate
NSObject
PCSIDSReplyContext
PCSIDSTransport
IDSServiceDelegate
PCSDevice
EscrowProxySyncOperation
PCSPairedSyncDelegate
PSYSyncCoordinatorDelegate
PSYInitialSyncStateObserverDelegate
PCSDeviceManager
PCSIDSMessagingDeviceManager
PCSRegistryOperation
PCSRegistryOperationPair
PCSIDSMessage
PCSIDSSyncing
PCSIDSMessagingDelegate
PCSPeerSyncing
PCSDelayedAction
PCSKeyClient
PCSKeySyncing
PCSSyncing
PCSSyncingProtocol
ServiceDelegate
NSXPCListenerDelegate
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
v48@0:8@16@24@32@40
v40@0:8@16@24@32
v28@0:8@16B24
v24@0:8@16
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v40@0:8@"APSConnection"16@"NSData"24@"APSAppTokenInfo"32
v40@0:8@"APSConnection"16@"APSURLToken"24@"APSURLTokenInfo"32
v40@0:8@"APSConnection"16@"NSError"24@"APSURLTokenInfo"32
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
@24@0:8@16
B24@0:8^@16
v16@0:8
@32@0:8@16@24
B40@0:8@16^{_PCSIdentityData=}24^{_PCSIdentityData=}32
@40@0:8^{_PCSIdentityData=}16@24@32
@32@0:8^{_PCSIdentityData=}16@24
B24@0:8@?16
^{_PCSIdentitySetData=}16@0:8
@24@0:8^@16
v20@0:8B16
@"UserRegistryStats"
@"NSOperationQueue"
@"PCSDelayedAction"
@"CKContainer"
@"PCSMobileBackup"
@"CKRecordZoneID"
@"PCSAccountsModel"
@"NSObject<OS_os_log>"
@"UserRegistryDB"
@"NSObject<OS_dispatch_queue>"
@"PCSRegistryOperationPair"
@"NSOperation"
@64@0:8d16@24@32@40@?48@?56
@?16@0:8
v24@0:8@?16
@"NSObject<OS_dispatch_source>"
v64@0:8@16@24@32@40@48@56
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v40@0:8@16@24@?32
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32@"IDSMessageContext"40
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v64@0:8@16@24q32d40@48@?56
v56@0:8@16@24q32d40@48
@"<PCSIDSMessagingDelegate>"
@"NSMutableDictionary"
@"IDSService"
@"NSObject<OS_os_transaction>"
@"<PCSIDSMessagingDeviceManager>"
@"NRDevice"
@"NSString"
@"NSHashTable"
v32@0:8@"PSYSyncCoordinator"16@"PSYServiceSyncSession"24
v24@0:8@"PSYSyncCoordinator"16
v32@0:8@"PSYInitialSyncStateObserver"16@"NSUUID"24
v24@0:8@"PSYInitialSyncStateObserver"16
@"PSYSyncCoordinator"
@"PSYInitialSyncStateObserver"
v24@0:8@"NSArray"16
@"<PCSDeviceManagerDelegate>"
@"PCSDevice"
@"NSError"
@"PCSRegistryOperation"
@40@0:8@16@24@32
@"NSDictionary"
@"IDSMessageContext"
v32@0:8@"PCSIDSMessage"16@"NSString"24
v32@0:8@16@?24
@"PCSIDSTransport"
@"PCSKeySyncing"
v44@0:8I16@20@28@?36
v32@0:8B16B20@?24
d24@0:8d16
d16@0:8
v36@0:8i16@20@28
i16@0:8
v20@0:8i16
@"NSData"
@"PCSKeyClient"
@32@0:8Q16@24
v24@0:8Q16
q16@0:8
v24@0:8q16
@"NSDate"
B28@0:8@16B24
B20@0:8B16
B32@0:8@16@24
B36@0:8@16i24@28
@"NSUserDefaults"
@"NSMutableArray"
v72@0:8@16@24@32@40@48@56@?64
v36@0:8@16@24B32
v48@0:8@16@24B32B36@?40
v36@0:8B16@20@?28
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
v32@0:8@"NSDictionary"16@?<v@?@"NSDictionary"@"NSError">24
v24@0:8@?<v@?>16
v72@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40@"NSString"48@"NSString"56@?<v@?B@"PCSMTT"@"NSError">64
v36@0:8@"NSString"16@"NSDictionary"24B32
v40@0:8@"NSString"16@"NSDictionary"24@?<v@?B@"NSError">32
v48@0:8@"NSString"16@"NSString"24B32B36@?<v@?@"NSData"@"PCSMTT"@"NSError">40
v32@0:8@"NSString"16@?<v@?I>24
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v32@0:8@"NSDictionary"16@?<v@?@"NSString"@"NSData"@"NSData"@"NSArray"@"NSError">24
v32@0:8@"NSDictionary"16@?<v@?@"NSError">24
v24@0:8@?<v@?@"NSArray"@"NSError">16
v36@0:8B16@"NSString"20@?<v@?@"NSNumber"@"NSNumber"@"NSNumber"@"NSError">28
v24@0:8@?<v@?@"UserRegistryStats">16
v24@0:8@?<v@?B@"NSError">16
B32@0:8@16@?24
B32@0:8^{_PCSIdentitySetData=}16^^{__CFError}24
v64@0:8@16@24@32@40@48@?56
^{_PCSIdentitySetData=}24@0:8@16
@"PCSUserRegistry"
@"PCSIDSSyncing"
@"NSObject<OS_xpc_object>"
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>20A241133</string>
<key>CFBundleDevelopmentRegion</key>
<string>en</string>
<key>CFBundleDisplayName</key>
<string>ProtectedCloudKeySyncing</string>
<key>CFBundleExecutable</key>
<string>ProtectedCloudKeySyncing</string>
<key>CFBundleIdentifier</key>
<string>com.apple.protectedcloudstorage.protectedcloudkeysyncing</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>ProtectedCloudKeySyncing</string>
<key>CFBundleShortVersionString</key>
<string>1.0</string>
<key>CFBundleSignature</key>
<string>????</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>14A5270i</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>16.1</string>
<key>DTSDKBuild</key>
<string>20B65</string>
<key>DTSDKName</key>
<string>iphonesimulator16.1.internal</string>
<key>DTXcode</key>
<string>1400</string>
<key>DTXcodeBuild</key>
<string>14A5270i</string>
<key>MinimumOSVersion</key>
<string>16.1</string>
<key>NSHumanReadableCopyright</key>
<string>Copyright 
 2015 - 2016 Apple. All rights reserved.</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.protectedcloudstorage.protectedcloudkeysyncing</string>
<key>aps-connection-initiate</key>
<true/>
<key>aps-environment</key>
<string>serverPreferred</string>
<key>backupd-connection-initiate</key>
<true/>
<key>com.apple.application-identifier</key>
<string>com.apple.protectedcloudstorage.protectedcloudkeysyncing</string>
<key>com.apple.developer.aps-environment</key>
<string>serverPreferred</string>
<key>com.apple.developer.icloud-container-environment</key>
<string>Production</string>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudKit</string>
</array>
<key>com.apple.keystore.access-keychain-keys</key>
<true/>
<key>com.apple.keystore.lockassertion</key>
<true/>
<key>com.apple.nano.nanoregistry</key>
<true/>
<key>com.apple.private.MobileGestalt.AllowedProtectedKeys</key>
<string>UniqueDeviceID</string>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.appleaccount.app-hidden-from-icloud-settings</key>
<true/>
<key>com.apple.private.aps-connection-initiate</key>
<true/>
<key>com.apple.private.ckks</key>
<true/>
<key>com.apple.private.ckks.currentitempointers_read</key>
<true/>
<key>com.apple.private.ckks.currentitempointers_write</key>
<true/>
<key>com.apple.private.ckks.plaintextfields</key>
<true/>
<key>com.apple.private.cloudkit.buddyAccess</key>
<true/>
<key>com.apple.private.cloudkit.packages</key>
<true/>
<key>com.apple.private.cloudkit.spi</key>
<true/>
<key>com.apple.private.cloudkit.supportservice</key>
<true/>
<key>com.apple.private.cloudkit.systemService</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.pcskey.sync</string>
</array>
<key>com.apple.private.octagon</key>
<true/>
<key>com.apple.private.octagon.walrus</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceLiverpool</string>
</array>
<key>com.apple.securebackupd.access</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>com.apple.ProtectedCloudStorage.KTAccountKey</string>
<string>com.apple.ProtectedCloudStorage.backup</string>
<string>com.apple.ProtectedCloudStorage</string>
</array>
<key>keychain-cloud-circle</key>
<true/>
</dict>
</plist>
@(#)PROGRAM:ProtectedCloudKeySyncing  PROJECT:ProtectedCloudStorage-867.40.10
33333
URKey
PCSUserRegistry
PCSUserRegistryMobileBackup
PCSUserRegistrySubscription
doneSubscription
publicKey
escrow
firstSeen
identity
keyStatus
serverChangeToken
MBserverChangeToken
com.apple.ProtectedCloudStorage
UserRegistry
PCS-APS
v8@?0
Failed to initalize UserRegistryDB
flushStats
v24@?0q8@"NSError"16
com.apple.icloud-container.
com.apple.protectedcloudstorage.protectedcloudkeysyncing
v24@?0@"NSString"8@"NSError"16
done
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
v32@?0@"CKRecordID"8@"CKRecord"16@"NSError"24
v24@?0@"CKRecordID"8@"NSString"16
v44@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24B32@"NSError"36
v16@?0@"NSError"8
clearPendingVariables
v24@?0@"CKAccountInfo"8@"NSError"16
No iCloud account
record
UserRegistryStats
MobileBackup
v16@?0r^v8
v16@?0^{__CFString=}8
TRUEPREDICATE
v24@?0@"NSArray"8@"NSError"16
%@-%@%@
Timed out waiting for a reply to %@ message with ID %@
com.apple.ProtectedCloudStorage.MessagerRegistration
com.apple.ProtectedCloudStorage.IDSMessaging
-[PCSIDSTransport setDeviceManager:]_block_invoke
PCSIDSTransport.m
self.service
deviceManager
com.apple.ProtectedCloudStorage.outstandingReply
com.apple.ProtectedCloudStorage.device_internal_queue
%@%@
38mm
42mm
Unknown
Unhandled
com.apple.pairedsync.protectedcloudkeysyncing
com.apple.appconduitd.PCSDeviceManager.internal
%@(%@,%@)
%@(%@)
finished 
cancelled
executing
ready
pending
<%@: %@ error:%@>
<%@: %@%@>
 dep:
<%@ (%p): %@ error:%@>
<%@ (%p): %@%@>
B32@?0@8Q16^B24
<PCSRegistryOperationPair: %@, %@>
PCSIDSSyncing
v16@?0@"PCSPeerSyncing"8
force
%@ - %@
com.apple.private.alloy.pcskey.sync
inital sync
Current
Keys
iCDPFlag
v24@?0@"PCSIDSMessage"8@"NSError"16
v32@?0@"NSString"8Q16^B24
reply
nextRegistrySync
registrySyncIdentifier
v28@?0B8@"PCSMTT"12@"NSError"20
trigger
PCSDelayedActionQueue
com.apple.security.PCSIdentityBackup
lastSeen
lastHash
name
lastSent
failures
numberHandshakes
buildVersion
firstSync
protocol
dsid
iCDP2
circle2
v32@?0@?<v@?@"NSString">8Q16^B24
clients
v32@?0@8@16^B24
nextRegistrySyncEnterprise
starting IDS
testRollEpoch
PCSWatchSyncing
com.apple.ProtectedCloudStorage.scheduledKeyroll
v16@?0@"NSObject<OS_xpc_object>"8
PCS-healthSummary
shouldRoll
roll
@"NSDictionary"8@?0
notifyKeyRegistry
com.apple.ProtectedCloudStorage.triggerWatchSyncing
v24@?0@"NSDictionary"8@"NSError"16
com.apple.ProtectedCloudStorage.test.mobileBackupStateChange
com.apple.nanoregistry.paireddevicedidchangeversion
com.apple.pairedsync.syncDidComplete
com.apple.ProtectedCloudStorage.updatedKeys
com.apple.security.view-change.PCS
com.apple.security.secureobjectsync.circlechanged
com.apple.ProtectedCloudStorage.mobileBackupStateChange
com.apple.ProtectedCloudStorage.PendingKeyRoll
BYSetupAssistantFinishedDarwinNotification
lastMobileBackupStatus
No last mobile backup status, but have a keyroll epoch time (%@)
False alarm check for backup state change
v48@?0I8^{__CFString=}12B20B24i28^{__CFString=}32^{__CFString=}40
v20@?0@"NSString"8B16
v32@?0@"NSData"8@"PCSMTT"16@"NSError"24
com.apple.ProtectedCloudStorage.test.mobileBackupStateChange.success
Failed keyroll operations for  %d of %d keys
Skipping escrow proxy sync, could not determine dsid and/or identifier: %@
v20@?0B8@"NSError"12
unsupported service
cannot create identity set
No ServiceName Specified
Failed getting dsid: %@
CDP not supported on this account: %@
Manatee not supported on this device
v40@?0@"NSNumber"8@"NSNumber"16@"NSNumber"24@"NSError"32
v44@?0^{_PCSIdentityData=}8@"NSData"16@"PCSMTT"24B32@"NSError"36
request already pending
Mobile backup is disabled
v32@?0@8Q16^B24
No user registry
test
restore
DSID missing
Failed to get identities
Would Be
reportStatus
view
global
currentTLK
keystate
become_ready
readypendingunlock
waitforunlock
error
initializing
initialized
fetchcomplete
begin_fetch
waitfortlkcreation
waitfortlkupload
badcurrentpointers
waitfortrust
needrefetch
newtlksfailed
fetching
tlkmissing
waitfortlk
unhealthy
healtlkshares
healtlksharesfailed
waitforfixupoperation
resetzone
com.apple.private.protectedcloudstorage.keysyncing
PCSSync
com.apple.ProtectedCloudStorage.fortnightly
com.apple.notifyd.matching
defaultCenter
initWithInt:
updateMirrorKey:service:type:newType:current:
identifier
length
distantPast
addOperationWithBlock:
pairedDevice
setTimeoutIntervalForResource:
copy
lastfetchRecordZoneChangesAtStart
setData:
initWithIdentitySet:dsid:
interfaceWithProtocol:
fetchCliqueStatus:error:
dictionaryWithObjects:forKeys:count:
controlObject:
AddMultiSamplerForName:withTimeInterval:block:
syncedKeyToDevice:type:device:
outgoingResponseIdentifier
addOperation:
defaultAccountsModel
dictionaryWithDictionary:
containsObject:
initWithEnvironmentName:namedDelegatePort:queue:
setContext:
intValue
decodeObjectOfClass:forKey:
addObserver:selector:name:object:
resume
dictionaryForKey:
setIsCloudKitSupportOperation:
dateWithTimeIntervalSince1970:
syncSessionType
initWithZoneName:ownerName:
containerWithIdentifier:
queryEscrowKeys
dictionary
addObject:
setConfiguration:
initWithDelegate:
dateByAddingTimeInterval:
sendMessage:toDestinations:priority:options:identifier:error:
setObject:forKeyedSubscript:
initWithZoneName:
lastError
queryEscrowKey:
addExecutionBlock:
sharedInstance
zoneReset
exportedInterface
cancel
mutableCopy
setObject:forKey:
mutableBytes
hasValidCredentials
pushNotifications
addDependency:
date
zoneID
replaceRecordID:data:publicKey:
componentsJoinedByString:
dataWithLength:
syncDidComplete
expectsPeerResponse
initWithSubscriptionsToSave:subscriptionIDsToDelete:
initWithContextData:
addDelegate:queue:
bytes
weakObjectsHashTable
replaceConfigRecord:data:
etag
initWithSubscriptionID:
setNotificationInfo:
waitUntilFinished
dataWithBytes:length:
setFlags:
removeObjectsInRange:
processIdentifier
objectsAtIndexes:
syncCoordinatorWithServiceName:
errorWithDomain:code:userInfo:
data
setSavePolicy:
boolValue
valueForProperty:
compare:
removeObjectForKey:
initRequiringSecureCoding:
initWithService:
objectForKeyedSubscript:
setModifySubscriptionsCompletionBlock:
isReady
valueForEntitlement:
boolForKey:
removeObject:
objectForKey:
setFetchRecordZoneChangesCompletionBlock:
currentRunLoop
initWithRecordsToSave:recordIDsToDelete:
setModifyRecordsCompletionBlock:
setBool:forKey:
dependencies
privateCloudDatabase
blockOperationWithBlock:
setFetchRecordZoneChanges:
initForReadingFromData:error:
missingKeysFromDevice:type:
settingsKeyForKey:error:
currentPersonaSupportsPrimaryAccount:
initWithRecordZonesToSave:recordZoneIDsToDelete:
setModifyRecordZonesCompletionBlock:
code
enumerateObjectsUsingBlock:
numberWithUnsignedInt:
getPairedDevices
previousServerChangeToken
setAutomaticallyRetryNetworkFailures:
beginExclusiveTransaction
setFetchAllChanges:
deleteRecordID:
setAltDSID:
enumerateKeysAndObjectsUsingBlock:
numberWithLong:
subarrayWithRange:
initWithRecordZoneIDs:configurationsByRecordZoneID:
isFinished
predicateWithFormat:
setRecordZoneFetchCompletionBlock:
getConfigData:
accountStatusWithCompletionHandler:
markMirrorKey:type:
stringWithUTF8String:
deleteRecordAll
setZoneReset:
setMirrorKey:service:type:publicIdentity:
numberWithInteger:
isExecuting
initWithRecordType:recordID:
setExportedObject:
performQuery:inZoneWithID:completionHandler:
deleteMirrorKeys:
accountStatus
setRecordWithIDWasDeletedBlock:
indexesOfObjectsPassingTest:
setWithObject:
userInfo
recordType
arrayWithObjects:count:
setMaxConcurrentOperationCount:
createNewIdentity:roll:sync:complete:
numberWithInt:
initWithRecordType:predicate:
fuzzyDaysSinceDate:
stringWithFormat:
UTF8String
setExportedInterface:
accountInfoWithCompletionHandler:
isEqualToString:
setRecordWasChangedBlock:
setWithArray:
incomingResponseIdentifier
arrayWithArray:
stringForKey:
deleteEscrowKey:
recordName
accountForCurrentPersona
endTransaction:
numberWithDouble:
initWithRecordName:zoneID:
isEqualToData:
setRecordModify:
longValue
array
setEscrowKey:escrowBlob:
recordModify
numberWithBool:
aa_personID
encodedData
timeIntervalSinceNow
stringByAppendingString:
setLastfetchRecordZoneChangesAtStart:
logger
countByEnumeratingWithState:objects:count:
setRecordFetch:
allValues
recordID
aa_altDSID
encodeObject:forKey:
timeIntervalSinceDate:
setUseCachedAccountStatus:
count
logSuccessForEvent:
recordFetch
timeIntervalSince1970
UUIDString
isCancelled
setPushNotifications:
serverPreferredPushEnvironmentWithCompletionHandler:
_setEnabledTopics:
logRecoverableError:forEvent:withAttributes:
updateSyncDevice:seen:version:
setDiscretionaryNetworkBehavior:
fetchWithTimeout:error:
doubleValue
defaultMobileBackup
isBackupEnabled
initWithMachServiceName:
allKeys
rpcStatus:reply:
domain
fetchRecordZoneChanges
setPreviousServerChangeToken:
init
checkAccountStatus:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveToken:forInfo:
connection:didReceiveURLToken:forInfo:
connection:didReceiveURLTokenError:forInfo:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
connection:channelSubscriptionsFailedWithFailures:
initWithBackup:
ensureUserRegistryDbLoaded:
setupStatCache
flushStats
defaultCKConfiguration
setupCloudKitSyncing
registerCloudKitNotifications
setupSubscriptions
resyncDatabase:
fetchAllChanges:
syncUserRegistry
createPendingSyncOperation:
saveRecord:
saveServerChangeToken:forKey:
_onqueueDeleteServerChangeToken:
getServerChangeToken:
cacheUserRegistryStats
_onqueueSaveUserRegistryStats
statFetch
statModify
clearCloudKitCache
privateDatabase
addDatabaseOperation:
errorShouldCauseReset:
checkErrorForRetryPause:
createZone:withName:
deleteMobileBackupZone
saveEscrowChange:
deleteEscrowID:
queryEscrowName:
queryEscrowID:
pushMobileBackupRecordsToCloudKit:removeObjects:
updateEscrowData:escrowIdentity:identity:
keyRecordIdentity:device:version:
mobileBackupKeyRecordIdentity:version:
keyRecord:withName:zone:
checkRegistry:
scanPCSIdentitiesForNewMobileBackupRecords
startBackupOfNewMobileBackupIdentities
identityCopySet
extractMobilebackupKeyEscrow:
loadMobileBackupKeysFromDB
allMobileBackupKeys
allMobileBackupPublicKeys
queryMobileBackupKeysFromCloudKit:
ckRecordListToRecordIDs:
fetchMobileBackupRecordIDsWithError:
userDBBackupRecordIDsWithError:
stats
setStats:
mainOperationQueue
setMainOperationQueue:
resyncRegistryAction
setResyncRegistryAction:
subscribeAction
setSubscribeAction:
container
setContainer:
mobileBackup
setMobileBackup:
recordZoneID
setRecordZoneID:
mobileBackupRecordZoneID
setMobileBackupRecordZoneID:
accounts
setAccounts:
oslog
setOslog:
userdb
setUserdb:
resubmitSyncing
setResubmitSyncing:
queue
setQueue:
stats_dirty
setStats_dirty:
currentSyncOperations
setCurrentSyncOperations:
pendingSyncOperations
setPendingSyncOperations:
cloudKitRateLimitedOp
setCloudKitRateLimitedOp:
.cxx_destruct
_resubmitSyncing
_stats_dirty
_stats
_mainOperationQueue
_resyncRegistryAction
_subscribeAction
_container
_mobileBackup
_recordZoneID
_mobileBackupRecordZoneID
_accounts
_oslog
_userdb
_queue
_currentSyncOperations
_pendingSyncOperations
_cloudKitRateLimitedOp
T@"NSOperationQueue",&,V_mainOperationQueue
T@"PCSDelayedAction",&,V_resyncRegistryAction
T@"PCSDelayedAction",&,V_subscribeAction
T@"CKContainer",&,V_container
T@"PCSMobileBackup",&,V_mobileBackup
T@"CKRecordZoneID",&,V_recordZoneID
T@"CKRecordZoneID",&,V_mobileBackupRecordZoneID
T@"PCSAccountsModel",&,V_accounts
T@"NSObject<OS_os_log>",&,V_oslog
T@"UserRegistryDB",&,V_userdb
TB,V_resubmitSyncing
T@"NSObject<OS_dispatch_queue>",&,V_queue
TB,V_stats_dirty
T@"PCSRegistryOperationPair",&,V_currentSyncOperations
T@"PCSRegistryOperationPair",&,V_pendingSyncOperations
T@"NSOperation",&,V_cloudKitRateLimitedOp
T@"UserRegistryStats",&,V_stats
initWithTimeout:queue:logDescription:sentID:replyHandler:completion:
runReplyHandlerWithMessage:error:
timeoutTimer
setTimeoutTimer:
replyBlock
setReplyBlock:
completion
setCompletion:
_timeoutTimer
_replyBlock
_completion
T@"NSObject<OS_dispatch_source>",&,V_timeoutTimer
T@?,C,V_replyBlock
T@?,C,V_completion
transportWithIDSServiceName:
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:linkedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantUpdate:context:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
initWithServiceName:
setDelegate:
setDeviceManager:
sendMessage:toDevice:withPriority:timeout:logDescription:handleReply:
sendResponse:toMessage:withPriority:timeout:logDescription:
copyLocalPairedDevices
delegate
pendingReplies
internalQueue
service
serviceDelegateSet
setServiceDelegateSet:
transaction
setTransaction:
deviceManager
_serviceDelegateSet
_delegate
_pendingReplies
_internalQueue
_service
_transaction
_deviceManager
T@"NSMutableDictionary",R,V_pendingReplies
T@"NSObject<OS_dispatch_queue>",R,V_internalQueue
T@"IDSService",R,V_service
TB,V_serviceDelegateSet
T@"NSObject<OS_os_transaction>",&,V_transaction
T@"<PCSIDSMessagingDeviceManager>",W,N,V_deviceManager
T@"<PCSIDSMessagingDelegate>",W,N,V_delegate
initForSimulatorWithNRDevice:
addObserver:
removeObserver:
pairingID
supportsPCSKeySync
supportsNewProtocol
_onQueue_isReachable
isReachable
model
watchSize
buildVersion
osVersion
serialNumber
UUID
nrDevice
idsDeviceIdentifier
isActivePairedDevice
setIsActivePairedDevice:
isConnected
setIsConnected:
isTombstone
setIsTombstone:
syncingIsRestricted
setSyncingIsRestricted:
observers
_isActivePairedDevice
_isConnected
_isTombstone
_syncingIsRestricted
_nrDevice
_idsDeviceIdentifier
_observers
TB,V_isConnected
TB,V_isActivePairedDevice
TB,V_isTombstone
TB,V_syncingIsRestricted
T@"NSHashTable",R,V_observers
T@"NRDevice",R,V_nrDevice
T@"NSString",R,V_idsDeviceIdentifier
T@"NSUUID",R
TB,R
T@"NSString",R
initWithDSID:
main
completionBlockWithError
setCompletionBlockWithError:
dsid
setDsid:
_completionBlockWithError
_dsid
T@"NSString",&,V_dsid
T@?,C,V_completionBlockWithError
sharedSyncDelegate
syncCoordinator:beginSyncSession:
syncCoordinator:didInvalidateSyncSession:
syncCoordinatorDidChangeSyncRestriction:
supportsMigrationSync
syncCoordinatorDidReceiveStartSyncCommand:
initialSyncStateObserver:initialSyncDidCompleteForPairingIdentifier:
initialSyncStateObserver:syncDidResetForPairingIdentifier:
initialSyncStateObserver:syncDidCompleteForPairingIdentifier:
initialSyncStateObserverClientCanRetryFailedRequests:
syncingIsRestrictedForPairingID:
coordinator
stateObserver
_coordinator
_stateObserver
T@"PSYSyncCoordinator",R,V_coordinator
T@"PSYInitialSyncStateObserver",R,V_stateObserver
sharedManager
setSimulatedDevices:
currentActivePairedDevice
deviceForIDSIdentifier:
deviceForPairingID:
deviceForNRDevice:
allDevices
devices
activePairedDevice
setActivePairedDevice:
_devices
_activePairedDevice
T@"NSMutableDictionary",R,V_devices
T@"PCSDevice",&,V_activePairedDevice
T@"<PCSDeviceManagerDelegate>",W,V_delegate
T@"NSArray",R
selfname
operationStateString
pendingDependenciesString:
error
setError:
operationUUID
setOperationUUID:
_error
_operationUUID
T@"NSString",&,V_operationUUID
T@"NSError",&,V_error
init:finish:
actualOperation
setActualOperation:
finishOperation
setFinishOperation:
_actualOperation
_finishOperation
T@"PCSRegistryOperation",&,V_actualOperation
T@"PCSRegistryOperation",&,V_finishOperation
initWithMessage:idsContext:fromID:
message
idsContext
fromID
_message
_idsContext
_fromID
T@"NSDictionary",R,V_message
T@"IDSMessageContext",R,V_idsContext
T@"NSString",R,V_fromID
incomingMessage:fromDevice:
initWithManager:transport:serialQueue:
connectionForDevice:complete:
havePeers
checkSyncingForPeer:force:
triggerIDSSyncing:
newDevices:removedDevices:
devicesAreNowNearby:
devicesAreNoLongerNearby:
transport
setTransport:
manager
setManager:
peers
setPeers:
syncingQueue
setSyncingQueue:
_transport
_manager
_peers
_syncingQueue
T@"PCSIDSTransport",&,V_transport
T@"PCSKeySyncing",&,V_manager
T@"NSMutableDictionary",&,V_peers
T@"NSObject<OS_dispatch_queue>",&,V_syncingQueue
T@"NSOperationQueue",&,V_queue
initWithDevice:syncingManager:
uuid
updateLastSeen
sendCommand:data:dsid:handleReply:
sendCurrents:dsid:handleReply:
sendKeys:dsid:handleReply:
sendiCDPStatus:circleStatus:handleReply:
checkRatelimit:
timeUntilSyncing
ratelimitClientSyncing
checkHashWithRateLimit:
checkSyncing:
sendKeysOld
sendSomeKeys:dsid:
sendCurrentKeys:
sendKeys
haveKeys:
setPeeriCDPStatus:
setPeerCircleStatus:
keyFailure:
sendReply:error:toMessage:
handleIncomingMessage:
device
setDevice:
keys
setKeys:
pendingRequest
setPendingRequest:
clientVersion
setClientVersion:
client
setClient:
syncingManager
setSyncingManager:
_pendingRequest
_clientVersion
_device
_keys
_client
_syncingManager
T@"PCSDevice",&,V_device
T@"NSData",&,V_keys
TB,V_pendingRequest
Ti,V_clientVersion
T@"PCSKeyClient",&,V_client
T@"PCSKeySyncing",&,V_syncingManager
initWithDelay:operationQueue:
setAction:
setHoldTransaction:
trigger
actionOnTrigger
setActionOnTrigger:
delayInSeconds
setDelayInSeconds:
operationQueue
setOperationQueue:
waitSource
setWaitSource:
pendingTransaction
setPendingTransaction:
noTransaction
setNoTransaction:
running
setRunning:
_running
_actionOnTrigger
_delayInSeconds
_operationQueue
_waitSource
_pendingTransaction
_noTransaction
T@?,C,V_actionOnTrigger
TQ,V_delayInSeconds
T@"NSOperationQueue",&,V_operationQueue
T@"NSObject<OS_dispatch_source>",&,V_waitSource
T@"NSObject<OS_os_transaction>",&,V_pendingTransaction
Tq,V_noTransaction
TB,V_running
initWithName:values:dsid:
updateWithValues:dsid:
getValues:
setUuid:
setBuildVersion:
firstSync
setFirstSync:
lastSeen
setLastSeen:
lastHash
setLastHash:
name
setName:
failures
setFailures:
lastSent
setLastSent:
protocolVersion
setProtocolVersion:
iCDP
setICDP:
circle
setCircle:
isNewWatch
setIsNewWatch:
numberHandshakes
setNumberHandshakes:
_iCDP
_circle
_isNewWatch
_failures
_uuid
_buildVersion
_firstSync
_lastSeen
_lastHash
_name
_lastSent
_protocolVersion
_numberHandshakes
T@"NSString",&,V_uuid
T@"NSString",&,V_buildVersion
T@"NSDate",&,V_firstSync
T@"NSDate",&,V_lastSeen
T@"NSData",&,V_lastHash
T@"NSString",&,V_name
Ti,V_failures
T@"NSDate",&,V_lastSent
Tq,V_protocolVersion
TB,V_iCDP
TB,V_circle
TB,V_isNewWatch
Tq,V_numberHandshakes
defaultSyncingManager
userRegistry
addUpdateNotify:
signalComplete:
copyIdentitySet
pcsKeyData:
storePCSKeyData:current:
iCDPStatus
setiCDPStatus:
companionCircleMember
setCompanionCircleMember:
copyAllPCSKeys:
syncKeysWithDatabase
updateSyncDevice:version:
updateSyncedKeysToDevice:type:keys:
syncDevices
outStandingPCSKeys:
copySHA256Hash:
getClientWithIdentifier:
updateClient:
saveClient:
updateProtocolVersionIfNeeded:
allClients
settings
setSettings:
database
setDatabase:
notifyHooks
setNotifyHooks:
_settings
_database
_notifyHooks
T@"NSUserDefaults",&,V_settings
T@"UserRegistryDB",&,V_database
T@"NSMutableArray",&,V_notifyHooks
defaultPCSSyncing
getAllClients:
syncKeys:withReply:
requestKeys:withReply:
triggerDaily:withReply:
triggerWatchSyncing:
triggerSyncingWithEscrowProxy:dsid:accountIdentifier:accountLastError:settingsKeyExpirationDate:settingsKeyIdentifier:complete:
setupIdentitiesForAccount:withParameters:optional:
migrateToiCDPForAccount:withParameters:complete:
createIdentity:dsid:roll:sync:complete:
manateeStatus:complete:
keyRollPending:complete:
fetchAllDeviceKeys:withReply:
triggerUserRegistryCheck:withReply:
mobileBackupRecordIDsWithReply:
userDBBackupRecordIDsWithReply:
restoreMobileBackup:dsid:withReply:
fetchStats:
mobileBackupStatus:
triggerKeyRolling
checkForBackupStateChange
shouldRoll
initForTesting
initWithPCSKeySyncing:
setupActivity
setupMetrics
triggerWatchSyncing
notifyKeyRegistry
notifyInternalEvent:
clearNextSyncNegativeCache
getRollEpoch
recordEpochForKeyroll
shouldRollStingray
attemptTimer
scheduleRollAttempt
actuallyScheduleRollAttempt
getServicesToRoll:handler:
rollingComplete:
ensureMKExists:error:
triggerEscrowSyncWithDSID:accountIdentifier:accountLastError:settingsKeyExpirationDate:settingsKeyIdentifier:complete:
triggerCKKSSyncForService:dsid:complete:
identityCopySet:
notifyDailyEvent
notifyEvent:
queuedCheckRegistry:withReply:
setInternalQueue:
registry
setRegistry:
registryQueue
setRegistryQueue:
triggerWatchSyncingAction
setTriggerWatchSyncingAction:
serialOperationQueue
setSerialOperationQueue:
syncing
setSyncing:
keyrollSchedulerSource
setKeyrollSchedulerSource:
scheduledKeyrollActivity
setScheduledKeyrollActivity:
_registry
_registryQueue
_triggerWatchSyncingAction
_serialOperationQueue
_syncing
_keyrollSchedulerSource
_scheduledKeyrollActivity
T@"NSObject<OS_dispatch_queue>",&,V_internalQueue
T@"PCSUserRegistry",&,V_registry
T@"NSObject<OS_dispatch_queue>",&,V_registryQueue
T@"PCSDelayedAction",&,V_triggerWatchSyncingAction
T@"NSOperationQueue",&,V_serialOperationQueue
T@"PCSIDSSyncing",&,V_syncing
T@"NSObject<OS_dispatch_source>",&,V_keyrollSchedulerSource
T@"NSObject<OS_xpc_object>",&,V_scheduledKeyrollActivity
listener:shouldAcceptNewConnection:
Failed to initalize UserRegistryDB: %@
Failed to initalize UserRegistryDB
accountStatusWithCompletionHandler: %d error: %@
Starting to sync
Stoping syncing
setupCloudKitSyncing: Failed to initalize UserRegistryDB: %@
setupSubscriptions: Failed to initalize UserRegistryDB: %@
attempting to subscribe to CK zone changes
setupSubscriptions: rate-limited by CloudKit
subscription completed
Couldn't create database subscription; syncing is severely degraded: %@
didReceiveToken: %@, triggering syncing
Creating resyncing operation, finishing with %@
fetchAllChanges: Failed to initalize UserRegistryDB: %@
Fetching changes after change token %@
received new record(%@) for: %@
Got CloudKit error: %@
got update for unknown zone: %@
Record deleted: %@
got delete for unknown zone: %@
Got CloudKit error while fetching: %@ for zone:%@
Got other error: %@for zone:%@
Finished fetching changes for %@ with change token %@
fetchRecordzoneChangesCompletionBlock error: %@
Finished fetching changes with error: %@
syncUserRegistry: Failed to initalize UserRegistryDB: %@
Creating new syncing operation, after %@
Returning pending syncing operation: %@
rate-limited by CloudKit
Beginning syncing operation %@
syncing operation (%@) no longer pending
Finished syncing operation %@: (%@)
Not logged into iCloud (%@)
iCloud account in grey mode (%@)
Caching DSID from Accounts
No DSID available. Quitting sync.
Creating zone before syncing
Zone creation failed for some reason: (%@), stopping MobileBackup sync
Fetch failed for some terrible reason: (%@), restarting entire sync process
Fetching failed for some reason: (%@), scheduling sync restart
MobileBackup is off; not pushing data to CloudKit
startBackupOfNewMobileBackupIdentities as part of syncing done: (%@)
Pushing new changes failed for some reason: (%@), scheduling retry
No new items to push; finishing
Created new pending syncing operation: %@
saveRecord: Failed to initalize UserRegistryDB: %@
CloudKit timeout complete
Delaying %.1f seconds for CK operations
Error creating zone (%@): %@
Created zones: %@
Error deleting zone (%@): %@
Deleted zones: %@
pushMobileBackupRecordsToCloudKit Starting
updating %u records, removing %u records
Finished uploading registry records (%@)
Stored record, saving in cache: %@
Retriggering syncing due to error (%@)
Failed to create escrow identity: %@
checkRegistry: Failed to initalize UserRegistryDB: %@
MobileBackup is off; no new records!
No PCSIdentities to Escrow to MobileBackup
Skipping MobileBackup Escrow: %@
No escrow identity
Will store %@ as (%@)
Couldn't escrow identity %@ (%@); skipping
Already stored %@ as (%@); skipping
No identities for %@
Not doing MobileBackup for %@
Harvested %lu records for MobileBackup escrow from Local PCS
Starting startBackupOfNewMobileBackupIdentities
startBackupOfNewMobileBackupIdentities - pushing new keys to cloudKit
No local mobile backup key changes
Fail getting dsid: %@
Failed to get PCS identities: %@
Converting CKRecords to PCSKeybagKeys
Converted %lu CKRecords to PCSKeybagKeys
loadMobileBackupKeysFromDB returning (count %lu)
allMobileBackupKeys: Failed to initalize UserRegistryDB: %@
Record %@ missing public key
queryMobileBackupKeysFromCloudKit
queryMobileBackupKeysFromCloudKit: error: %@
queryMobileBackupKeysFromCloudKit got keys (count %lu)
queryMobileBackupKeysFromCloudKit returning (count %lu)
fetchMobileBackupRecordIDsWithError: Failed to initalize UserRegistryDB: %@
userDBBackupRecordIDsWithError: Failed to initalize UserRegistryDB: %@
Failed to create IDSService for %@
NanoRegistry returned nil from getPairedDevices
NanoRegistry returned an empty array from getPairedDevices
Sent %@ message with IDS UUID %@
Error occurred sending %@ message with no replyHandler: %@
Reply attempted to message that did not expect peer response: %@ -> %@
Failed to get response ID from original message id %@; dropping reply
Failed to send response with ID %@ to message with ID %@
Received reply for message ID %@ with ID %@
Got message with ID %@ with response ID %@, but no reply handler available
Received message with ID %@
Got message from %@ with id %@ with no delegate set
Error occurred sending message %@: %@
Synchronize keys with escrow proxy
Current persona doesn't match dsid
Fail to synchronize keys: %@
Synchronize keys complete
Beginning %@ sync session
Found watch: %@ new: %d
No active paired device
No IDS Device registered with identifier %@
Failed to find device with pairing ID %@
Failed to get pairing ID from device %@
Failed to get PCSDevice for identifier %@; dropping message.
Failed to get sync connection for IDS device %@; dropping message
syncing  with: %@
Device %@ has disappeared
Device %@ appeared. isActive:%d, isConnected:%d
Device %@ is now nearby (isActive:%d)
Device %@ is no longer nearby (isActive:%d)
sending message: %d to peer: %@
sending keys to peer: %@
Device %@ checking if syncing needed
Can't get initial data: %@
Can't get initial hash: %@
Client %@ already have uptodate keys
Client %@ have same os version: %@
Ratelimit sending to device %@
initial request to device %@ already pending
Sending inital check-in to device %@ hash: %@
reply from initital checkin: %@ error: %@
Client have keys: %@
Client requests updating keys: have %@
Client requests new protocol
sendKeys request to device %@ already pending
Can't get dsid
Sending keys to device %@ hash:%@
reply from send key: %@ error: %@
client confirms it have key: %@
client failed
No key to send [to device: %@
sending %lu (%lu left) keys to
client confirms stored keys: %u
device: %@ type: 1 keys: %@
client failed: %d
set current: %@
Can't get pending keys
local iCDP: %d, cached peer iCDP status: %d
local circle: %d, cached peer circle status: %d
Setting peer iCDP status to: %d and circle to: %d
Failed to send message to peer: %@, trying later
Peer confirmed iCDP state too: %d
Other failure to store iCDP state: %d, trying later
handleIncomingMessage watch requested keys: %@
handleIncomingMessage sync with escrow proxy: %@
sync with escrow proxy for service %@
Failed to get key: %@
handleIncomingMessage unknown command %d from device: %@
Failed to fetch dsid from accounts: %@
Failed to get identity set for pcsKey extraction
Failed to get identity for public key %@
Failed to get exported data for identity %@: %@
Failed to parse key data: %@
Failed to store identity %@: %@
Already have a local copy of: %@
Failed to get iCDP: %@
Failed to set iCDP: %@
PERF: Syncing with device older than watchOS 4 / iOS 11
Failed to get database
Updating service %@
Skipping identities for service %@
Failed to remove MirrorKeys from registry for %@
Failed to get copy of identities of service type: %@
failed to open database transaction
Syncing %lu identities %@ with database
updating protocol for client %@
Error checking registry (%@)
Trigger syncing with watches
No peers, not doing any syncing with watches
Catching up local database changes from keychain
Trigger syncing to watches
notify sync key complete: %@: error: %@
Got darwin notification %@
MOBSTATE Got notification that mobile backup state changed.
failed to fetch appropriate key: %@
MOBSTATE Notifying registry.
There is a pending keyRoll for epoch %@
getServicesToRoll: no identity set
Unexpected error finding current identity for %@: %d
Keyrolling service %@ due to existing backup
Keyroll triggered but there is no self
Keyroll triggered, but DSID is unknown; will retry later
Keyroll triggered but we've already completed rolling (defer: %d)
PCSCKKSRollAndSync
CKKS registry roll & sync for all eligible services
CKKS registry roll & sync failed for service %@ with: %{public}@ (mtt: %@)
CKKS registry roll & sync for service %@ completed: %@
Successfully completed keyroll operations for  %d keys
Failed keyroll operations for  %d keys
Trigger syncing with escrow proxy on behalf of cloudd: next sync: %{public}@
skipping sync due to ratelimiting
setting cloudd expiration to: %@
Escrow proxy sync reported: %d: %{public}@
PCSCKKSRegistrySync
Manatee sync with CKKS registry for service %{public}@
CKKS registry sync failed with: %{public}@ (mtt: %@)
CKKS registry sync completed: %@
Failed to get W status: %@
setupIdentitiesForAccount: account %@ is already setup, ignoring request
setupIdentitiesForAccount: PCSIdentitySetup failed: %@
Completed best-effort mobile backup restore with recoverIssue:%@ missing:%@ present:%@ error:%@
Timeout expired for best-effort backup recovery. Continuing with CKKS sync.
Kicking off user registry sync due to new messages3 identity
Fail getting dsid, error: %@
dsid is nil
Already a request (recently) pending, returning early
Allowing checkRegistry calls again
Requsted keys sync
Fetching all device keys
PCSRestoreCKBackupWithCompletion: %s
restoreMobileBackup: sync finished with: %@
restoreMobileBackup: got reply from server
PCSRestoreCKBackupWithCompletion failed with: %@
%@ Adding missing identity
Already have identity
recover stats: Recovered: %d AlreadyPresent: %d RecoveryIssue: %d
PCSReportManateeStatus otStatus: %@
PCSReportManateeStatus rpcStatus: %@
PCSReportManateeStatus rpcStatus reply: %@
PCSReportManateeStatus %@ rpcStatus: %d
Client pid: %d doesn't have entitlement: %@
PCSUserRegistry
APSConnectionDelegate
NSObject
PCSIDSReplyContext
PCSIDSTransport
IDSServiceDelegate
PCSDevice
EscrowProxySyncOperation
PCSPairedSyncDelegate
PSYSyncCoordinatorDelegate
PSYInitialSyncStateObserverDelegate
PCSDeviceManager
PCSIDSMessagingDeviceManager
PCSRegistryOperation
PCSRegistryOperationPair
PCSIDSMessage
PCSIDSSyncing
PCSIDSMessagingDelegate
PCSPeerSyncing
PCSDelayedAction
PCSKeyClient
PCSKeySyncing
PCSSyncing
PCSSyncingProtocol
ServiceDelegate
NSXPCListenerDelegate
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
v48@0:8@16@24@32@40
v40@0:8@16@24@32
v28@0:8@16B24
v24@0:8@16
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v40@0:8@"APSConnection"16@"NSData"24@"APSAppTokenInfo"32
v40@0:8@"APSConnection"16@"APSURLToken"24@"APSURLTokenInfo"32
v40@0:8@"APSConnection"16@"NSError"24@"APSURLTokenInfo"32
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
@24@0:8@16
B24@0:8^@16
v16@0:8
@32@0:8@16@24
B40@0:8@16^{_PCSIdentityData=}24^{_PCSIdentityData=}32
@40@0:8^{_PCSIdentityData=}16@24@32
@32@0:8^{_PCSIdentityData=}16@24
B24@0:8@?16
^{_PCSIdentitySetData=}16@0:8
@24@0:8^@16
v20@0:8B16
@"UserRegistryStats"
@"NSOperationQueue"
@"PCSDelayedAction"
@"CKContainer"
@"PCSMobileBackup"
@"CKRecordZoneID"
@"PCSAccountsModel"
@"NSObject<OS_os_log>"
@"UserRegistryDB"
@"NSObject<OS_dispatch_queue>"
@"PCSRegistryOperationPair"
@"NSOperation"
@64@0:8d16@24@32@40@?48@?56
@?16@0:8
v24@0:8@?16
@"NSObject<OS_dispatch_source>"
v64@0:8@16@24@32@40@48@56
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v40@0:8@16@24@?32
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32@"IDSMessageContext"40
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v64@0:8@16@24q32d40@48@?56
v56@0:8@16@24q32d40@48
@"<PCSIDSMessagingDelegate>"
@"NSMutableDictionary"
@"IDSService"
@"NSObject<OS_os_transaction>"
@"<PCSIDSMessagingDeviceManager>"
@"NRDevice"
@"NSString"
@"NSHashTable"
v32@0:8@"PSYSyncCoordinator"16@"PSYServiceSyncSession"24
v24@0:8@"PSYSyncCoordinator"16
v32@0:8@"PSYInitialSyncStateObserver"16@"NSUUID"24
v24@0:8@"PSYInitialSyncStateObserver"16
@"PSYSyncCoordinator"
@"PSYInitialSyncStateObserver"
v24@0:8@"NSArray"16
@"<PCSDeviceManagerDelegate>"
@"PCSDevice"
@"NSError"
@"PCSRegistryOperation"
@40@0:8@16@24@32
@"NSDictionary"
@"IDSMessageContext"
v32@0:8@"PCSIDSMessage"16@"NSString"24
v32@0:8@16@?24
@"PCSIDSTransport"
@"PCSKeySyncing"
v44@0:8I16@20@28@?36
v32@0:8B16B20@?24
d24@0:8d16
d16@0:8
v36@0:8i16@20@28
i16@0:8
v20@0:8i16
@"NSData"
@"PCSKeyClient"
@32@0:8Q16@24
v24@0:8Q16
q16@0:8
v24@0:8q16
@"NSDate"
B28@0:8@16B24
B20@0:8B16
B32@0:8@16@24
B36@0:8@16i24@28
@"NSUserDefaults"
@"NSMutableArray"
v72@0:8@16@24@32@40@48@56@?64
v36@0:8@16@24B32
v48@0:8@16@24B32B36@?40
v36@0:8B16@20@?28
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
v32@0:8@"NSDictionary"16@?<v@?@"NSDictionary"@"NSError">24
v24@0:8@?<v@?>16
v72@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40@"NSString"48@"NSString"56@?<v@?B@"PCSMTT"@"NSError">64
v36@0:8@"NSString"16@"NSDictionary"24B32
v40@0:8@"NSString"16@"NSDictionary"24@?<v@?B@"NSError">32
v48@0:8@"NSString"16@"NSString"24B32B36@?<v@?@"NSData"@"PCSMTT"@"NSError">40
v32@0:8@"NSString"16@?<v@?I>24
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v32@0:8@"NSDictionary"16@?<v@?@"NSString"@"NSData"@"NSData"@"NSArray"@"NSError">24
v32@0:8@"NSDictionary"16@?<v@?@"NSError">24
v24@0:8@?<v@?@"NSArray"@"NSError">16
v36@0:8B16@"NSString"20@?<v@?@"NSNumber"@"NSNumber"@"NSNumber"@"NSError">28
v24@0:8@?<v@?@"UserRegistryStats">16
v24@0:8@?<v@?B@"NSError">16
B32@0:8@16@?24
B32@0:8^{_PCSIdentitySetData=}16^^{__CFError}24
v64@0:8@16@24@32@40@48@?56
^{_PCSIdentitySetData=}24@0:8@16
@"PCSUserRegistry"
@"PCSIDSSyncing"
@"NSObject<OS_xpc_object>"
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>20A241133</string>
<key>CFBundleDevelopmentRegion</key>
<string>en</string>
<key>CFBundleDisplayName</key>
<string>ProtectedCloudKeySyncing</string>
<key>CFBundleExecutable</key>
<string>ProtectedCloudKeySyncing</string>
<key>CFBundleIdentifier</key>
<string>com.apple.protectedcloudstorage.protectedcloudkeysyncing</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>ProtectedCloudKeySyncing</string>
<key>CFBundleShortVersionString</key>
<string>1.0</string>
<key>CFBundleSignature</key>
<string>????</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>14A5270i</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>16.1</string>
<key>DTSDKBuild</key>
<string>20B65</string>
<key>DTSDKName</key>
<string>iphonesimulator16.1.internal</string>
<key>DTXcode</key>
<string>1400</string>
<key>DTXcodeBuild</key>
<string>14A5270i</string>
<key>MinimumOSVersion</key>
<string>16.1</string>
<key>NSHumanReadableCopyright</key>
<string>Copyright 
 2015 - 2016 Apple. All rights reserved.</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.protectedcloudstorage.protectedcloudkeysyncing</string>
<key>aps-connection-initiate</key>
<true/>
<key>aps-environment</key>
<string>serverPreferred</string>
<key>backupd-connection-initiate</key>
<true/>
<key>com.apple.application-identifier</key>
<string>com.apple.protectedcloudstorage.protectedcloudkeysyncing</string>
<key>com.apple.developer.aps-environment</key>
<string>serverPreferred</string>
<key>com.apple.developer.icloud-container-environment</key>
<string>Production</string>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudKit</string>
</array>
<key>com.apple.keystore.access-keychain-keys</key>
<true/>
<key>com.apple.keystore.lockassertion</key>
<true/>
<key>com.apple.nano.nanoregistry</key>
<true/>
<key>com.apple.private.MobileGestalt.AllowedProtectedKeys</key>
<string>UniqueDeviceID</string>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.appleaccount.app-hidden-from-icloud-settings</key>
<true/>
<key>com.apple.private.aps-connection-initiate</key>
<true/>
<key>com.apple.private.ckks</key>
<true/>
<key>com.apple.private.ckks.currentitempointers_read</key>
<true/>
<key>com.apple.private.ckks.currentitempointers_write</key>
<true/>
<key>com.apple.private.ckks.plaintextfields</key>
<true/>
<key>com.apple.private.cloudkit.buddyAccess</key>
<true/>
<key>com.apple.private.cloudkit.packages</key>
<true/>
<key>com.apple.private.cloudkit.spi</key>
<true/>
<key>com.apple.private.cloudkit.supportservice</key>
<true/>
<key>com.apple.private.cloudkit.systemService</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.pcskey.sync</string>
</array>
<key>com.apple.private.octagon</key>
<true/>
<key>com.apple.private.octagon.walrus</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceLiverpool</string>
</array>
<key>com.apple.securebackupd.access</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>com.apple.ProtectedCloudStorage.KTAccountKey</string>
<string>com.apple.ProtectedCloudStorage.backup</string>
<string>com.apple.ProtectedCloudStorage</string>
</array>
<key>keychain-cloud-circle</key>
<true/>
</dict>
</plist>
