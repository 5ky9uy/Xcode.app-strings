@(#)PROGRAM:ProtectedCloudKeySyncing  PROJECT:ProtectedCloudStorage-868.102.2
URKey
PCSUserRegistry
PCSUserRegistryMobileBackup
PCSUserRegistrySubscription
doneSubscription
publicKey
escrow
firstSeen
identity
keyStatus
serverChangeToken
MBserverChangeToken
com.apple.ProtectedCloudStorage
UserRegistry
PCS-APS
resyncRegistryAction
v8@?0
subscribeAction
Failed to initalize UserRegistryDB
flushStats
v24@?0q8@"NSError"16
com.apple.icloud-container.
com.apple.protectedcloudstorage.protectedcloudkeysyncing
v24@?0@"NSString"8@"NSError"16
done
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
v32@?0@"CKRecordID"8@"CKRecord"16@"NSError"24
v24@?0@"CKRecordID"8@"NSString"16
v44@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24B32@"NSError"36
v16@?0@"NSError"8
clearPendingVariables
v24@?0@"CKAccountInfo"8@"NSError"16
No iCloud account
record
UserRegistryStats
MobileBackup
v16@?0r^v8
v16@?0^{__CFString=}8
TRUEPREDICATE
v24@?0@"NSArray"8@"NSError"16
%@-%@%@
Timed out waiting for a reply to %@ message with ID %@
com.apple.ProtectedCloudStorage.MessagerRegistration
com.apple.ProtectedCloudStorage.IDSMessaging
-[PCSIDSTransport setDeviceManager:]_block_invoke
PCSIDSTransport.m
self.service
deviceManager
com.apple.ProtectedCloudStorage.outstandingReply
com.apple.ProtectedCloudStorage.device_internal_queue
%@%@
38mm
42mm
Unknown
Unhandled
com.apple.pairedsync.protectedcloudkeysyncing
com.apple.appconduitd.PCSDeviceManager.internal
%@(%@,%@)
%@(%@)
finished 
cancelled
executing
ready
pending
<%@: %@ error:%@>
<%@: %@%@>
 dep:
<%@ (%p): %@ error:%@>
<%@ (%p): %@%@>
B32@?0@8Q16^B24
<PCSRegistryOperationPair: %@, %@>
PCSIDSSyncing
v16@?0@"PCSPeerSyncing"8
force
%@ - %@
com.apple.private.alloy.pcskey.sync
inital sync
Current
Keys
iCDPFlag
v24@?0@"PCSIDSMessage"8@"NSError"16
v32@?0@"NSString"8Q16^B24
reply
nextRegistrySync
registrySyncIdentifier
v28@?0B8@"PCSMTT"12@"NSError"20
PCSDelayedActionQueue
timestampWEnable
timestampWDisable
timestampKeyrollAttempted
timestampKeyrollSuccess
timestampObserveWEnable
timestampObserveWDisable
initialWState
knownWState
PCSMetrics
wEnableThisDeviceDays
wDisableThisDeviceDays
keyrollSucceededDays
keyrollAttemptedDays
wEnableObservedDays
wDisableObservedDays
wState
keycount_%u
currentInStingray
currentMarkedForRolling
currentWasMarkedForRolling
v24@?0r^v8r^v16
v24@?0^{__CFString=}8^{__CFDictionary=}16
v20@?0^{__CFString=}8I16
metrics.db
PRAGMA journal_mode = WAL;CREATE TABLE IF NOT EXISTS keys(    dsid TEXT NOT NULL,    service INTEGER NOT NULL,    pubkey TEXT NOT NULL,    marked INTEGER NOT NULL DEFAULT 0,    PRIMARY KEY (dsid, service, pubkey));
INSERT OR IGNORE INTO keys (dsid, service, pubkey) VALUES (?, ?, ?);
UPDATE keys SET marked=? WHERE dsid=? AND service=?;
SELECT marked FROM keys WHERE dsid=? AND service=? AND pubkey=?;
com.apple.security.PCSIdentityBackup
lastSeen
lastHash
name
lastSent
failures
numberHandshakes
buildVersion
firstSync
protocol
dsid
iCDP2
circle2
v32@?0@?<v@?@"NSString">8Q16^B24
clients
v32@?0@8@16^B24
nextRegistrySyncEnterprise
starting IDS
testRollEpoch
triggerWatchSyncing
PCSWatchSyncing
com.apple.ProtectedCloudStorage.scheduledKeyroll
v16@?0@"NSObject<OS_xpc_object>"8
PCS-healthSummary
@"NSDictionary"8@?0
version
noDSID
noIdentitySet
shouldRoll
roll
keyrollScheduled
notifyKeyRegistry
com.apple.ProtectedCloudStorage.triggerWatchSyncing
v24@?0@"NSDictionary"8@"NSError"16
com.apple.ProtectedCloudStorage.test.mobileBackupStateChange
com.apple.nanoregistry.paireddevicedidchangeversion
com.apple.pairedsync.syncDidComplete
com.apple.ProtectedCloudStorage.updatedKeys
com.apple.security.view-change.PCS
com.apple.security.secureobjectsync.circlechanged
com.apple.ProtectedCloudStorage.mobileBackupStateChange
_CDPWalrusStateChangeDarwinNotification
com.apple.ProtectedCloudStorage.PendingKeyRoll
BYSetupAssistantFinishedDarwinNotification
lastMobileBackupStatus
No last mobile backup status, but have a keyroll epoch time (%@)
False alarm check for backup state change
ProtectedCloudStorage
ShorterRollInterval
v48@?0I8^{__CFString=}12B20B24i28^{__CFString=}32^{__CFString=}40
v20@?0@"NSString"8B16
v32@?0@"NSData"8@"PCSMTT"16@"NSError"24
com.apple.ProtectedCloudStorage.test.mobileBackupStateChange.success
attemptedRoll
successfulRoll
Skipping escrow proxy sync, could not determine dsid and/or identifier: %@
v20@?0B8@"NSError"12
unsupported service
cannot create identity set
No ServiceName Specified
Failed getting dsid: %@
CDP not supported on this account: %@
Manatee not supported on this device
v40@?0@"NSNumber"8@"NSNumber"16@"NSNumber"24@"NSError"32
v44@?0^{_PCSIdentityData=}8@"NSData"16@"PCSMTT"24B32@"NSError"36
RepairWalrus
request already pending
Mobile backup is disabled
v32@?0@8Q16^B24
No user registry
test
restore
DSID missing
Failed to get identities
Would Be
reportStatus
view
global
currentTLK
keystate
become_ready
readypendingunlock
waitforunlock
error
initializing
initialized
fetchcomplete
begin_fetch
waitfortlkcreation
waitfortlkupload
badcurrentpointers
waitfortrust
needrefetch
newtlksfailed
fetching
tlkmissing
waitfortlk
unhealthy
healtlkshares
healtlksharesfailed
waitforfixupoperation
resetzone
com.apple.private.protectedcloudstorage.keysyncing
PCSSync
com.apple.ProtectedCloudStorage.fortnightly
com.apple.notifyd.matching
T@"NSObject<OS_os_log>",&,V_log
AddMultiSamplerForName:withTimeInterval:block:
T@"UserRegistryDB",&,V_database
T@"<PCSDeviceManagerDelegate>",W,V_delegate
TB,V_isNewWatch
T@"<PCSIDSMessagingDeviceManager>",W,N,V_deviceManager
_circle
T@"CKRecordZoneID",&,V_mobileBackupRecordZoneID
T@"IDSMessageContext",R,V_idsContext
_device
T@"NRDevice",R,V_nrDevice
_operationQueue
T@"NSData",&,V_keys
_pendingRequest
T@"NSDate",&,V_firstSync
_userdb
T@"NSDate",&,V_lastSent
actualOperation
T@"NSError",&,V_error
arrayWithArray:
T@"NSMutableArray",&,V_notifyHooks
containsObject:
T@"NSMutableDictionary",R,V_devices
copyIdentitySet
T@"NSObject<OS_dispatch_queue>",&,V_internalQueue
dataWithLength:
T@"NSObject<OS_dispatch_queue>",&,V_registryQueue
deleteEscrowID:
T@"NSObject<OS_dispatch_queue>",R,V_internalQueue
deleteRecordID:
T@"NSObject<OS_dispatch_source>",&,V_timeoutTimer
endTransaction:
T@"NSObject<OS_os_log>",&,V_oslog
identityCopySet
T@"NSObject<OS_os_transaction>",&,V_transaction
isBackupEnabled
T@"NSOperation",&,V_cloudKitRateLimitedOp
isReady
T@"NSOperationQueue",&,V_operationQueue
manager
T@"NSOperationQueue",&,V_serialOperationQueue
metrics
T@"NSString",&,V_dsid
T@"NSString",&,V_name
numberWithLong:
T@"NSString",&,V_uuid
protocolVersion
T@"NSString",R,C
queryEscrowKeys
T@"NSString",R,V_idsDeviceIdentifier
removeObserver:
T@"PCSAccountsModel",&,V_accounts
resubmitSyncing
T@"PCSDelayedAction",&,V_subscribeAction
T@"PCSDevice",&,V_activePairedDevice
service
T@"PCSIDSSyncing",&,V_syncing
setBool:forKey:
T@"PCSKeyClient",&,V_client
setIsTombstone:
T@"PCSKeySyncing",&,V_syncingManager
setMarkKeyStmt:
T@"PCSRegistryOperation",&,V_actualOperation
setNotifyHooks:
T@"PCSRegistryOperationPair",&,V_currentSyncOperations
setRecordWithIDWasDeletedBlock:
T@"PCSUserRegistry",&,V_registry
setTransaction:
T@"PSYSyncCoordinator",R,V_coordinator
subscribeAction
T@?,C,V_actionOnTrigger
syncDidComplete
T@?,C,V_completionBlockWithError
syncing
TB,R
triggerSyncingWithEscrowProxy:dsid:accountIdentifier:accountLastError:settingsKeyExpirationDate:settingsKeyIdentifier:complete:
TB,V_iCDP
userDBBackupRecordIDsWithReply:
.cxx_destruct
T@"NSUserDefaults",&,V_settings
T#,R
T@"UserRegistryStats",&,V_stats
T@"<PCSIDSMessagingDelegate>",W,N,V_delegate
T^{sqlite3_stmt=},V_markKeyStmt
T@"CKContainer",&,V_container
_client
T@"CKRecordZoneID",&,V_recordZoneID
_delayInSeconds
T@"IDSService",R,V_service
_fromID
T@"NSArray",R
_pendingReplies
T@"NSData",&,V_lastHash
_syncingManager
T@"NSDate",&,V_lastSeen
actionOnTrigger
T@"NSDictionary",R,V_message
allKeys
T@"NSHashTable",R,V_observers
checkRatelimit:
T@"NSMutableDictionary",&,V_peers
copyAllPCSKeys:
T@"NSMutableDictionary",R,V_pendingReplies
copySHA256Hash:
T@"NSObject<OS_dispatch_queue>",&,V_queue
dealloc
T@"NSObject<OS_dispatch_queue>",&,V_syncingQueue
deleteRecordAll
T@"NSObject<OS_dispatch_source>",&,V_keyrollSchedulerSource
devices
T@"NSObject<OS_dispatch_source>",&,V_waitSource
finishOperation
T@"NSObject<OS_os_transaction>",&,V_pendingTransaction
initWithBackup:
T@"NSObject<OS_xpc_object>",&,V_scheduledKeyrollActivity
isProxy
T@"NSOperationQueue",&,V_mainOperationQueue
T@"NSOperationQueue",&,V_queue
message
T@"NSString",&,V_buildVersion
mobileBackupRecordIDsWithReply:
T@"NSString",&,V_label
numberWithBool:
T@"NSString",&,V_operationUUID
privateDatabase
T@"NSString",R
queryEscrowKey:
T@"NSString",R,V_fromID
release
T@"NSUUID",R
replaceRecordID:data:publicKey:
T@"PCSDelayedAction",&,V_resyncRegistryAction
resyncDatabase:
T@"PCSDelayedAction",&,V_triggerWatchSyncingAction
running
T@"PCSDevice",&,V_device
serviceSpaceDidBecomeAvailable:
T@"PCSIDSTransport",&,V_transport
setIsConnected:
T@"PCSKeySyncing",&,V_manager
setLog:
T@"PCSMobileBackup",&,V_mobileBackup
setMaxConcurrentOperationCount:
T@"PCSRegistryOperation",&,V_finishOperation
setRecordFetch:
T@"PCSRegistryOperationPair",&,V_pendingSyncOperations
setStats_dirty:
T@"PSYInitialSyncStateObserver",R,V_stateObserver
signalComplete:
T@"UserRegistryDB",&,V_userdb
syncCoordinatorWithServiceName:
T@?,C,V_completion
syncSessionType
T@?,C,V_replyBlock
trigger
TB,V_circle
userDBBackupRecordIDsWithError:
TB,V_isActivePairedDevice
TB,V_isConnected
TB,V_isTombstone
TB,V_pendingRequest
TB,V_resubmitSyncing
TB,V_running
TB,V_serviceDelegateSet
TB,V_stats_dirty
TB,V_syncingIsRestricted
TQ,R
TQ,V_delayInSeconds
T^{sqlite3=},V_db
T^{sqlite3_stmt=},V_addKeyStmt
T^{sqlite3_stmt=},V_getKeyStmt
Ti,V_clientVersion
Ti,V_failures
Tq,V_noTransaction
Tq,V_numberHandshakes
Tq,V_protocolVersion
URLByAppendingPathComponent:
URLForDirectory:inDomain:appropriateForURL:create:error:
UTF8String
UUID
UUIDString
_accounts
_actionOnTrigger
_activePairedDevice
_actualOperation
_addKeyStmt
_buildVersion
_clientVersion
_cloudKitRateLimitedOp
_completion
_completionBlockWithError
_container
_coordinator
_currentSyncOperations
_database
_delegate
_deviceManager
_devices
_dsid
_error
_failures
_finishOperation
_firstSync
_getKeyStmt
_iCDP
_idsContext
_idsDeviceIdentifier
_internalQueue
_isActivePairedDevice
_isConnected
_isNewWatch
_isTombstone
_keyrollSchedulerSource
_keys
_label
_lastHash
_lastSeen
_lastSent
_log
_mainOperationQueue
_manager
_markKeyStmt
_message
_mobileBackup
_mobileBackupRecordZoneID
_name
_noTransaction
_notifyHooks
_nrDevice
_numberHandshakes
_observers
_onQueue_isReachable
_onqueueDeleteServerChangeToken:
_onqueueSaveUserRegistryStats
_operationUUID
_oslog
_peers
_pendingSyncOperations
_pendingTransaction
_protocolVersion
_queue
_recordZoneID
_registry
_registryQueue
_replyBlock
_resubmitSyncing
_resyncRegistryAction
_running
_scheduledKeyrollActivity
_serialOperationQueue
_service
_serviceDelegateSet
_setEnabledTopics:
_settings
_stateObserver
_stats
_stats_dirty
_subscribeAction
_syncing
_syncingIsRestricted
_syncingQueue
_timeoutTimer
_transaction
_transport
_triggerWatchSyncingAction
_uuid
_waitSource
aa_altDSID
aa_personID
accountForCurrentPersona
accountInfoWithCompletionHandler:
accountStatus
accountStatusWithCompletionHandler:
accounts
activePairedDevice
actuallyScheduleRollAttempt
addDatabaseOperation:
addDelegate:queue:
addDependency:
addExecutionBlock:
addIdentityInfoToHealthSummary:dsid:wState:
addKeyStmt
addKeyWithDSID:service:publicKey:
addMetricsToHealthSummary:withIdentitySet:
addObject:
addObserver:
addObserver:selector:name:object:
addOperation:
addOperationWithBlock:
addUpdateNotify:
allClients
allDevices
allMobileBackupKeys
allMobileBackupPublicKeys
allValues
array
arrayWithObjects:count:
attemptTimer
autorelease
beginExclusiveTransaction
blockOperationWithBlock:
boolForKey:
boolValue
buildVersion
bytes
cacheUserRegistryStats
cancel
checkAccountStatus:
checkErrorForRetryPause:
checkForBackupStateChange
checkHashWithRateLimit:
checkRegistry:
checkSyncing:
checkSyncingForPeer:force:
circle
ckRecordListToRecordIDs:
class
clearCloudKitCache
clearNextSyncNegativeCache
client
clientVersion
cloudKitRateLimitedOp
code
companionCircleMember
compare:
completion
completionBlockWithError
componentsJoinedByString:
conformsToProtocol:
connection:channelSubscriptionsFailedWithFailures:
connection:didChangeConnectedStatus:
connection:didFailToSendOutgoingMessage:error:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didReceivePublicToken:
connection:didReceiveToken:forInfo:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveURLToken:forInfo:
connection:didReceiveURLTokenError:forInfo:
connection:didSendOutgoingMessage:
connectionDidReconnect:
connectionForDevice:complete:
container
containerWithIdentifier:
controlObject:
coordinator
copy
copyLocalPairedDevices
count
countByEnumeratingWithState:objects:count:
createIdentity:dsid:roll:sync:complete:
createNewIdentity:roll:sync:complete:
createPendingSyncOperation:
createZone:withName:
currentActivePairedDevice
currentPersonaSupportsPrimaryAccount:
currentRunLoop
currentSyncOperations
data
dataWithBytes:length:
database
databaseURL
date
dateByAddingTimeInterval:
dateForKey:
dateWithTimeIntervalSince1970:
debugDescription
decodeObjectOfClass:forKey:
defaultAccountsModel
defaultCKConfiguration
defaultCenter
defaultManager
defaultMobileBackup
defaultPCSSyncing
defaultSyncingManager
delayInSeconds
delegate
deleteEscrowKey:
deleteMirrorKeys:
deleteMobileBackupZone
dependencies
description
device
deviceForIDSIdentifier:
deviceForNRDevice:
deviceForPairingID:
deviceManager
devicesAreNoLongerNearby:
devicesAreNowNearby:
dictionary
dictionaryForKey:
dictionaryWithDictionary:
dictionaryWithObjects:forKeys:count:
disableWalrusForAccount:withParameters:complete:
distantPast
domain
doubleValue
dsid
enableWalrusForAccount:withParameters:complete:
encodeObject:forKey:
encodedData
ensureMKExists:error:
ensureUserRegistryDbLoaded:
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
error
errorShouldCauseReset:
errorWithDomain:code:userInfo:
etag
expectsPeerResponse
exportedInterface
extractMobilebackupKeyEscrow:
failures
fetchAllChanges:
fetchAllDeviceKeys:withReply:
fetchCliqueStatus:error:
fetchMobileBackupRecordIDsWithError:
fetchRecordZoneChanges
fetchStats:
fetchWithTimeout:error:
fileSystemRepresentation
firstSync
flushStats
fromID
fuzzyDaysSinceDate:
fuzzyDaysSinceKey:
getAllClients:
getClientWithIdentifier:
getConfigData:
getHealthSummary:
getKeyInfoWithDSID:service:publicKey:
getKeyStmt
getPairedDevices
getRollEpoch
getServerChangeToken:
getServicesToRoll:handler:
getValues:
handleIncomingMessage:
hasValidCredentials
hash
haveKeys:
havePeers
healthSummary
iCDP
iCDPStatus
identifier
identityCopySet:
idsContext
idsDeviceIdentifier
incomingMessage:fromDevice:
incomingResponseIdentifier
indexesOfObjectsPassingTest:
init
init:finish:
initForReadingFromData:error:
initForSimulatorWithNRDevice:
initForTesting
initRequiringSecureCoding:
initWithContextData:
initWithDSID:
initWithDelegate:
initWithDevice:syncingManager:
initWithEnvironmentName:namedDelegatePort:queue:
initWithIdentitySet:dsid:
initWithInt:
initWithLabel:delay:operationQueue:
initWithMachServiceName:
initWithManager:transport:serialQueue:
initWithMessage:idsContext:fromID:
initWithName:values:dsid:
initWithPCSKeySyncing:
initWithRecordName:zoneID:
initWithRecordType:predicate:
initWithRecordType:recordID:
initWithRecordZoneIDs:configurationsByRecordZoneID:
initWithRecordZonesToSave:recordZoneIDsToDelete:
initWithRecordsToSave:recordIDsToDelete:
initWithService:
initWithServiceName:
initWithSubscriptionID:
initWithSubscriptionsToSave:subscriptionIDsToDelete:
initWithTimeout:queue:logDescription:sentID:replyHandler:completion:
initWithZoneName:
initWithZoneName:ownerName:
initialSyncStateObserver:initialSyncDidCompleteForPairingIdentifier:
initialSyncStateObserver:syncDidCompleteForPairingIdentifier:
initialSyncStateObserver:syncDidResetForPairingIdentifier:
initialSyncStateObserverClientCanRetryFailedRequests:
intValue
interfaceWithProtocol:
internalQueue
isActivePairedDevice
isCancelled
isConnected
isEqual:
isEqualToData:
isEqualToString:
isExecuting
isFinished
isKindOfClass:
isMemberOfClass:
isNewWatch
isReachable
isTombstone
keyFailure:
keyRecord:withName:zone:
keyRecordIdentity:device:version:
keyRegistryCallback
keyRollPending:complete:
keyrollSchedulerSource
keys
label
lastError
lastHash
lastSeen
lastSent
lastfetchRecordZoneChangesAtStart
length
listener:shouldAcceptNewConnection:
loadMobileBackupKeysFromDB
logRecoverableError:forEvent:withAttributes:
logSuccessForEvent:
logger
longValue
main
mainOperationQueue
manateeStatus:complete:
markKeyNegativeWithDSID:service:
markKeyStmt
markMirrorKey:type:
markNegativeCallback
migrateToiCDPForAccount:withParameters:complete:
missingKeysFromDevice:type:
mobileBackup
mobileBackupKeyRecordIdentity:version:
mobileBackupRecordZoneID
mobileBackupStatus:
model
mutableBytes
mutableCopy
name
newDevices:removedDevices:
noTransaction
notifyDailyEvent
notifyEvent:
notifyHooks
notifyInternalEvent:
notifyKeyRegistry
nrDevice
numberHandshakes
numberWithDouble:
numberWithInt:
numberWithInteger:
numberWithUnsignedInt:
numberWithUnsignedLong:
objectForKey:
objectForKeyedSubscript:
objectsAtIndexes:
observers
operationQueue
operationStateString
operationUUID
osVersion
oslog
outStandingPCSKeys:
outgoingResponseIdentifier
pairedDevice
pairingID
pcsKeyData:
peers
pendingDependenciesString:
pendingReplies
pendingRequest
pendingSyncOperations
pendingTransaction
performQuery:inZoneWithID:completionHandler:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
predicateWithFormat:
previousServerChangeToken
privateCloudDatabase
processIdentifier
pushMobileBackupRecordsToCloudKit:removeObjects:
pushNotifications
queryEscrowID:
queryEscrowName:
queryMobileBackupKeysFromCloudKit:
queue
queuedCheckRegistry:withReply:
ratelimitClientSyncing
recordEpochForKeyroll
recordFetch
recordID
recordModify
recordName
recordType
recordZoneID
registerCloudKitNotifications
registry
registryQueue
removeObject:
removeObjectForKey:
removeObjectsInRange:
repairWalrus
replaceConfigRecord:data:
replyBlock
requestKeys:withReply:
respondsToSelector:
restoreMobileBackup:dsid:withReply:
resume
resyncRegistryAction
retain
retainCount
rollingComplete:
rpcStatus:reply:
runReplyHandlerWithMessage:error:
saveClient:
saveEscrowChange:
saveRecord:
saveServerChangeToken:forKey:
scanPCSIdentitiesForNewMobileBackupRecords
scheduleRollAttempt
scheduledKeyrollActivity
self
selfname
sendCommand:data:dsid:handleReply:
sendCurrentKeys:
sendCurrents:dsid:handleReply:
sendKeys
sendKeys:dsid:handleReply:
sendKeysOld
sendMessage:toDestinations:priority:options:identifier:error:
sendMessage:toDevice:withPriority:timeout:logDescription:handleReply:
sendReply:error:toMessage:
sendResponse:toMessage:withPriority:timeout:logDescription:
sendSomeKeys:dsid:
sendiCDPStatus:circleStatus:handleReply:
serialNumber
serialOperationQueue
serverPreferredPushEnvironmentWithCompletionHandler:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:sentBytes:totalBytes:
service:account:incomingData:fromID:context:
service:account:incomingMessage:fromID:context:
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:receivedGroupSessionParticipantDataUpdate:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantUpdate:context:
service:activeAccountsChanged:
service:connectedDevicesChanged:
service:devicesChanged:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:didSwitchActivePairedDevice:acknowledgementBlock:
service:linkedDevicesChanged:
service:nearbyDevicesChanged:
serviceAllowedTrafficClassifiersDidReset:
serviceDelegateSet
setAccounts:
setAction:
setActionOnTrigger:
setActivePairedDevice:
setActualOperation:
setAddKeyStmt:
setAltDSID:
setAutomaticallyRetryNetworkFailures:
setBuildVersion:
setCircle:
setClient:
setClientVersion:
setCloudKitRateLimitedOp:
setCompanionCircleMember:
setCompletion:
setCompletionBlockWithError:
setConfiguration:
setContainer:
setContext:
setCurrentSyncOperations:
setData:
setDatabase:
setDb:
setDelayInSeconds:
setDelegate:
setDevice:
setDeviceManager:
setDiscretionaryNetworkBehavior:
setDsid:
setError:
setEscrowKey:escrowBlob:
setExportedInterface:
setExportedObject:
setFailures:
setFetchAllChanges:
setFetchRecordZoneChanges:
setFetchRecordZoneChangesCompletionBlock:
setFinishOperation:
setFirstSync:
setFlags:
setGetKeyStmt:
setHoldTransaction:
setICDP:
setInternalQueue:
setIsActivePairedDevice:
setIsCloudKitSupportOperation:
setIsNewWatch:
setKeyrollSchedulerSource:
setKeys:
setLabel:
setLastHash:
setLastSeen:
setLastSent:
setLastfetchRecordZoneChangesAtStart:
setMainOperationQueue:
setManager:
setMirrorKey:service:type:publicIdentity:
setMobileBackup:
setMobileBackupRecordZoneID:
setModifyRecordZonesCompletionBlock:
setModifyRecordsCompletionBlock:
setModifySubscriptionsCompletionBlock:
setName:
setNoTransaction:
setNotificationInfo:
setNumberHandshakes:
setObject:forKey:
setObject:forKeyedSubscript:
setOperationQueue:
setOperationUUID:
setOslog:
setPeerCircleStatus:
setPeeriCDPStatus:
setPeers:
setPendingRequest:
setPendingSyncOperations:
setPendingTransaction:
setPreviousServerChangeToken:
setProtocolVersion:
setPushNotifications:
setQueue:
setRecordModify:
setRecordWasChangedBlock:
setRecordZoneFetchCompletionBlock:
setRecordZoneID:
setRegistry:
setRegistryQueue:
setReplyBlock:
setResubmitSyncing:
setResyncRegistryAction:
setRunning:
setSavePolicy:
setScheduledKeyrollActivity:
setSerialOperationQueue:
setServiceDelegateSet:
setSettings:
setSimulatedDevices:
setStats:
setSubscribeAction:
setSyncing:
setSyncingIsRestricted:
setSyncingManager:
setSyncingQueue:
setTimeoutIntervalForResource:
setTimeoutTimer:
setTransport:
setTriggerWatchSyncingAction:
setUseCachedAccountStatus:
setUserdb:
setUuid:
setWaitSource:
setWithArray:
setWithObject:
setZoneReset:
setiCDPStatus:
settings
settingsKeyForKey:error:
setupActivity
setupCloudKitSyncing
setupDatabase
setupIdentitiesForAccount:withParameters:optional:
setupMetrics
setupStatCache
setupSubscriptions
sharedInstance
sharedManager
sharedSyncDelegate
shouldRoll
shouldRollStingray
startBackupOfNewMobileBackupIdentities
statFetch
statModify
stateObserver
stats
stats_dirty
storeEventTimestamp:
storePCSKeyData:current:
stringByAppendingString:
stringForKey:
stringWithFormat:
stringWithUTF8String:
subarrayWithRange:
superclass
supportsMigrationSync
supportsNewProtocol
supportsPCSKeySync
syncCoordinator:beginSyncSession:
syncCoordinator:didInvalidateSyncSession:
syncCoordinatorDidChangeSyncRestriction:
syncCoordinatorDidReceiveStartSyncCommand:
syncDevices
syncKeys:withReply:
syncKeysWithDatabase
syncUserRegistry
syncedKeyToDevice:type:device:
syncingIsRestricted
syncingIsRestrictedForPairingID:
syncingManager
syncingQueue
timeIntervalSince1970
timeIntervalSinceDate:
timeIntervalSinceNow
timeUntilSyncing
timeoutTimer
transaction
transport
transportWithIDSServiceName:
triggerCKKSSyncForService:dsid:complete:
triggerDaily:withReply:
triggerEscrowSyncWithDSID:accountIdentifier:accountLastError:settingsKeyExpirationDate:settingsKeyIdentifier:complete:
triggerIDSSyncing:
triggerKeyRolling
triggerUserRegistryCheck:withReply:
triggerWatchSyncing
triggerWatchSyncing:
triggerWatchSyncingAction
tristateForBoolKey:
updateClient:
updateCurrentWState:
updateEscrowData:escrowIdentity:identity:
updateLastSeen
updateMirrorKey:service:type:newType:current:
updateProtocolVersionIfNeeded:
updateSyncDevice:seen:version:
updateSyncDevice:version:
updateSyncedKeysToDevice:type:keys:
updateWithValues:dsid:
userInfo
userRegistry
userdb
uuid
valueForEntitlement:
valueForProperty:
wStateChanged
waitSource
waitUntilFinished
watchSize
weakObjectsHashTable
zone
zoneID
zoneReset
Failed to initalize UserRegistryDB: %@
Failed to initalize UserRegistryDB
accountStatusWithCompletionHandler: %d error: %@
Starting to sync
Stoping syncing
setupCloudKitSyncing: Failed to initalize UserRegistryDB: %@
setupSubscriptions: Failed to initalize UserRegistryDB: %@
attempting to subscribe to CK zone changes
setupSubscriptions: rate-limited by CloudKit
subscription completed
Couldn't create database subscription; syncing is severely degraded: %@
didReceiveToken: %@, triggering syncing
Creating resyncing operation, finishing with %@
fetchAllChanges: Failed to initalize UserRegistryDB: %@
Fetching changes after change token %@
received new record(%@) for: %@
Got CloudKit error: %@
got update for unknown zone: %@
Record deleted: %@
got delete for unknown zone: %@
Got CloudKit error while fetching: %@ for zone:%@
Got other error: %@for zone:%@
Finished fetching changes for %@ with change token %@
fetchRecordzoneChangesCompletionBlock error: %@
Finished fetching changes with error: %@
syncUserRegistry: Failed to initalize UserRegistryDB: %@
Creating new syncing operation, after %@
Returning pending syncing operation: %@
rate-limited by CloudKit
Beginning syncing operation %@
syncing operation (%@) no longer pending
Finished syncing operation %@: (%@)
Not logged into iCloud (%@)
iCloud account in grey mode (%@)
Caching DSID from Accounts
No DSID available. Quitting sync.
Creating zone before syncing
Zone creation failed for some reason: (%@), stopping MobileBackup sync
Fetch failed for some terrible reason: (%@), restarting entire sync process
Fetching failed for some reason: (%@), scheduling sync restart
MobileBackup is off; not pushing data to CloudKit
startBackupOfNewMobileBackupIdentities as part of syncing done: (%@)
Pushing new changes failed for some reason: (%@), scheduling retry
No new items to push; finishing
Created new pending syncing operation: %@
saveRecord: Failed to initalize UserRegistryDB: %@
CloudKit timeout complete
Delaying %.1f seconds for CK operations
Error creating zone (%@): %@
Created zones: %@
Error deleting zone (%@): %@
Deleted zones: %@
pushMobileBackupRecordsToCloudKit Starting
updating %u records, removing %u records
Finished uploading registry records (%@)
Stored record, saving in cache: %@
Retriggering syncing due to error (%@)
Failed to create escrow identity: %@
checkRegistry: Failed to initalize UserRegistryDB: %@
MobileBackup is off; no new records!
No PCSIdentities to Escrow to MobileBackup
Skipping MobileBackup Escrow: %@
No escrow identity
Will store %@ as (%@)
Couldn't escrow identity %@ (%@); skipping
Already stored %@ as (%@); skipping
No identities for %@
Not doing MobileBackup for %@
Harvested %lu records for MobileBackup escrow from Local PCS
Starting startBackupOfNewMobileBackupIdentities
startBackupOfNewMobileBackupIdentities - pushing new keys to cloudKit
No local mobile backup key changes
Fail getting dsid: %@
Failed to get PCS identities: %@
Converting CKRecords to PCSKeybagKeys
Converted %lu CKRecords to PCSKeybagKeys
loadMobileBackupKeysFromDB returning (count %lu)
allMobileBackupKeys: Failed to initalize UserRegistryDB: %@
Record %@ missing public key
queryMobileBackupKeysFromCloudKit
queryMobileBackupKeysFromCloudKit: error: %@
queryMobileBackupKeysFromCloudKit got keys (count %lu)
queryMobileBackupKeysFromCloudKit returning (count %lu)
fetchMobileBackupRecordIDsWithError: Failed to initalize UserRegistryDB: %@
userDBBackupRecordIDsWithError: Failed to initalize UserRegistryDB: %@
Failed to create IDSService for %@
NanoRegistry returned nil from getPairedDevices
NanoRegistry returned an empty array from getPairedDevices
Sent %@ message with IDS UUID %@
Error occurred sending %@ message with no replyHandler: %@
Reply attempted to message that did not expect peer response: %@ -> %@
Failed to get response ID from original message id %@; dropping reply
Failed to send response with ID %@ to message with ID %@
Received reply for message ID %@ with ID %@
Got message with ID %@ with response ID %@, but no reply handler available
Received message with ID %@
Got message from %@ with id %@ with no delegate set
Error occurred sending message %@: %@
Synchronize keys with escrow proxy
Current persona doesn't match dsid
Fail to synchronize keys: %@
Synchronize keys complete
Beginning %@ sync session
Found watch: %@ new: %d
No active paired device
No IDS Device registered with identifier %@
Failed to find device with pairing ID %@
Failed to get pairing ID from device %@
Failed to get PCSDevice for identifier %@; dropping message.
Failed to get sync connection for IDS device %@; dropping message
syncing  with: %@
Device %@ has disappeared
Device %@ appeared. isActive:%d, isConnected:%d
Device %@ is now nearby (isActive:%d)
Device %@ is no longer nearby (isActive:%d)
sending message: %d to peer: %@
sending keys to peer: %@
Device %@ checking if syncing needed
Can't get initial data: %@
Can't get initial hash: %@
Client %@ already have uptodate keys
Client %@ have same os version: %@
Ratelimit sending to device %@
initial request to device %@ already pending
Sending inital check-in to device %@ hash: %@
reply from initital checkin: %@ error: %@
Client have keys: %@
Client requests updating keys: have %@
Client requests new protocol
sendKeys request to device %@ already pending
Can't get dsid
Sending keys to device %@ hash:%@
reply from send key: %@ error: %@
client confirms it have key: %@
client failed
No key to send [to device: %@
sending %lu (%lu left) keys to
client confirms stored keys: %u
device: %@ type: 1 keys: %@
client failed: %d
set current: %@
Can't get pending keys
local iCDP: %d, cached peer iCDP status: %d
local circle: %d, cached peer circle status: %d
Setting peer iCDP status to: %d and circle to: %d
Failed to send message to peer: %@, trying later
Peer confirmed iCDP state too: %d
Other failure to store iCDP state: %d, trying later
handleIncomingMessage watch requested keys: %@
handleIncomingMessage sync with escrow proxy: %@
sync with escrow proxy for service %@
Failed to get key: %@
handleIncomingMessage unknown command %d from device: %@
failed to locate Application Support directory: %@
opening %@ failed: %s
_sqlite3_maintain_load_factor for %@ failed: %d
table create for %@ failed: %s
Failed to fetch dsid from accounts: %@
Failed to get identity set for pcsKey extraction
Failed to get identity for public key %@
Failed to get exported data for identity %@: %@
Failed to parse key data: %@
Failed to store identity %@: %@
Already have a local copy of: %@
Failed to get iCDP: %@
Failed to set iCDP: %@
PERF: Syncing with device older than watchOS 4 / iOS 11
Failed to get database
Updating service %@
Skipping identities for service %@
Failed to remove MirrorKeys from registry for %@
Failed to get copy of identities of service type: %@
failed to open database transaction
Syncing %lu identities %@ with database
updating protocol for client %@
Error checking registry (%@)
Trigger syncing with watches
No peers, not doing any syncing with watches
Catching up local database changes from keychain
Trigger syncing to watches
notify sync key complete: %@: error: %@
Got darwin notification %@
MOBSTATE Got notification that mobile backup state changed.
failed to fetch appropriate key: %@
MOBSTATE Notifying registry.
There is a pending keyRoll for epoch %@
Insufficient time elapsed since previous Stingray key roll attempt (%{public}@)
Stingray key roll not required
No identity key roll is required, not scheduling.
Identity key roll is already scheduled.
Scheduled an identity key roll attempt to occur in %lld seconds.
getServicesToRoll: no identity set
Unexpected error finding current identity for %@: %d
Keyrolling service %@ due to existing backup
Keyroll triggered but there is no self
Keyroll triggered, but DSID is unknown; will retry later
Keyroll triggered but we've already completed rolling (defer: %d)
PCSCKKSRollAndSync
CKKS registry roll & sync for all eligible services (%d)
CKKS registry roll & sync failed for service %@ with: %{public}@ (mtt: %@)
CKKS registry roll & sync for service %@ completed: %@
Successfully completed keyroll operations for  %d keys
Failed keyroll operations for  %d keys
Trigger syncing with escrow proxy on behalf of cloudd: next sync: %{public}@
skipping sync due to ratelimiting
setting cloudd expiration to: %@
Escrow proxy sync reported: %d: %{public}@
PCSCKKSRegistrySync
Manatee sync with CKKS registry for service %{public}@
CKKS registry sync failed with: %{public}@ (mtt: %@)
CKKS registry sync completed: %@
Failed to get W status: %@
setupIdentitiesForAccount: account %@ is already setup, ignoring request
setupIdentitiesForAccount: PCSIdentitySetup failed: %@
Completed best-effort mobile backup restore with recoverIssue:%@ missing:%@ present:%@ error:%@
Timeout expired for best-effort backup recovery. Continuing with CKKS sync.
Kicking off user registry sync due to new messages3 identity
Fail getting dsid, error: %@
repairWalrus: no identity set
repairWalrus: failed to get walrus status: %@
repair migrate result: %@
dsid is nil
Already a request (recently) pending, returning early
Allowing checkRegistry calls again
Requsted keys sync
Fetching all device keys
PCSRestoreCKBackupWithCompletion: %s
restoreMobileBackup: sync finished with: %@
restoreMobileBackup: got reply from server
PCSRestoreCKBackupWithCompletion failed with: %@
%@ Adding missing identity
Already have identity
recover stats: Recovered: %d AlreadyPresent: %d RecoveryIssue: %d
PCSReportManateeStatus otStatus: %@
PCSReportManateeStatus rpcStatus: %@
PCSReportManateeStatus rpcStatus reply: %@
PCSReportManateeStatus %@ rpcStatus: %d
Client pid: %d doesn't have entitlement: %@
PCSUserRegistry
APSConnectionDelegate
NSObject
PCSIDSReplyContext
PCSIDSTransport
IDSServiceDelegate
PCSDevice
EscrowProxySyncOperation
PCSPairedSyncDelegate
PSYSyncCoordinatorDelegate
PSYInitialSyncStateObserverDelegate
PCSDeviceManager
PCSIDSMessagingDeviceManager
PCSRegistryOperation
PCSRegistryOperationPair
PCSIDSMessage
PCSIDSSyncing
PCSIDSMessagingDelegate
PCSPeerSyncing
PCSDelayedAction
DateHandling
PCSMetrics
PCSKeyClient
PCSKeySyncing
PCSSyncing
PCSSyncingProtocol
ServiceDelegate
NSXPCListenerDelegate
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
v48@0:8@16@24@32@40
v40@0:8@16@24@32
v28@0:8@16B24
v24@0:8@16
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v40@0:8@"APSConnection"16@"NSData"24@"APSAppTokenInfo"32
v40@0:8@"APSConnection"16@"APSURLToken"24@"APSURLTokenInfo"32
v40@0:8@"APSConnection"16@"NSError"24@"APSURLTokenInfo"32
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
@24@0:8@16
B24@0:8^@16
v16@0:8
@32@0:8@16@24
B40@0:8@16^{_PCSIdentityData=}24^{_PCSIdentityData=}32
@40@0:8^{_PCSIdentityData=}16@24@32
@32@0:8^{_PCSIdentityData=}16@24
B24@0:8@?16
^{_PCSIdentitySetData=}16@0:8
@24@0:8^@16
v20@0:8B16
@"UserRegistryStats"
@"NSOperationQueue"
@"PCSDelayedAction"
@"CKContainer"
@"PCSMobileBackup"
@"CKRecordZoneID"
@"PCSAccountsModel"
@"NSObject<OS_os_log>"
@"UserRegistryDB"
@"NSObject<OS_dispatch_queue>"
@"PCSRegistryOperationPair"
@"NSOperation"
@64@0:8d16@24@32@40@?48@?56
@?16@0:8
v24@0:8@?16
@"NSObject<OS_dispatch_source>"
v64@0:8@16@24@32@40@48@56
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v40@0:8@16@24@?32
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32@"IDSMessageContext"40
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v64@0:8@16@24q32d40@48@?56
v56@0:8@16@24q32d40@48
@"<PCSIDSMessagingDelegate>"
@"NSMutableDictionary"
@"IDSService"
@"NSObject<OS_os_transaction>"
@"<PCSIDSMessagingDeviceManager>"
@"NRDevice"
@"NSString"
@"NSHashTable"
v32@0:8@"PSYSyncCoordinator"16@"PSYServiceSyncSession"24
v24@0:8@"PSYSyncCoordinator"16
v32@0:8@"PSYInitialSyncStateObserver"16@"NSUUID"24
v24@0:8@"PSYInitialSyncStateObserver"16
@"PSYSyncCoordinator"
@"PSYInitialSyncStateObserver"
v24@0:8@"NSArray"16
@"<PCSDeviceManagerDelegate>"
@"PCSDevice"
@"NSError"
@"PCSRegistryOperation"
@40@0:8@16@24@32
@"NSDictionary"
@"IDSMessageContext"
v32@0:8@"PCSIDSMessage"16@"NSString"24
v32@0:8@16@?24
@"PCSIDSTransport"
@"PCSKeySyncing"
v44@0:8I16@20@28@?36
v32@0:8B16B20@?24
d24@0:8d16
d16@0:8
v36@0:8i16@20@28
i16@0:8
v20@0:8i16
@"NSData"
@"PCSKeyClient"
@40@0:8@16Q24@32
v24@0:8Q16
q16@0:8
v24@0:8q16
i24@0:8@16
v32@0:8@16^{_PCSIdentitySetData=}24
v36@0:8@16@24i32
i24@0:8^{_PCSIdentitySetData=}16
B36@0:8@16I24@28
B28@0:8@16I24
I36@0:8@16I24@28
^{sqlite3=}16@0:8
v24@0:8^{sqlite3=}16
^{sqlite3_stmt=}16@0:8
v24@0:8^{sqlite3_stmt=}16
@"NSUserDefaults"
^{sqlite3=}
^{sqlite3_stmt=}
@"NSDate"
B28@0:8@16B24
B20@0:8B16
B32@0:8@16@24
B36@0:8@16i24@28
@"NSMutableArray"
v72@0:8@16@24@32@40@48@56@?64
v36@0:8@16@24B32
v48@0:8@16@24B32B36@?40
v36@0:8B16@20@?28
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
v32@0:8@"NSDictionary"16@?<v@?@"NSDictionary"@"NSError">24
v24@0:8@?<v@?>16
v72@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40@"NSString"48@"NSString"56@?<v@?B@"PCSMTT"@"NSError">64
v36@0:8@"NSString"16@"NSDictionary"24B32
v40@0:8@"NSString"16@"NSDictionary"24@?<v@?B@"NSError">32
v48@0:8@"NSString"16@"NSString"24B32B36@?<v@?@"NSData"@"PCSMTT"@"NSError">40
v32@0:8@"NSString"16@?<v@?I>24
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v32@0:8@"NSDictionary"16@?<v@?@"NSString"@"NSData"@"NSData"@"NSArray"@"NSError">24
v32@0:8@"NSDictionary"16@?<v@?@"NSError">24
v24@0:8@?<v@?@"NSArray"@"NSError">16
v36@0:8B16@"NSString"20@?<v@?@"NSNumber"@"NSNumber"@"NSNumber"@"NSError">28
v24@0:8@?<v@?@"UserRegistryStats">16
v24@0:8@?<v@?B@"NSError">16
B32@0:8@16@?24
B32@0:8^{_PCSIdentitySetData=}16^^{__CFError}24
v64@0:8@16@24@32@40@48@?56
^{_PCSIdentitySetData=}24@0:8@16
@"PCSUserRegistry"
@"PCSIDSSyncing"
@"NSObject<OS_xpc_object>"
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>22A380007</string>
<key>CFBundleDevelopmentRegion</key>
<string>en</string>
<key>CFBundleDisplayName</key>
<string>ProtectedCloudKeySyncing</string>
<key>CFBundleExecutable</key>
<string>ProtectedCloudKeySyncing</string>
<key>CFBundleIdentifier</key>
<string>com.apple.protectedcloudstorage.protectedcloudkeysyncing</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>ProtectedCloudKeySyncing</string>
<key>CFBundleShortVersionString</key>
<string>1.0</string>
<key>CFBundleSignature</key>
<string>????</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>20E5229e</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>16.4</string>
<key>DTSDKBuild</key>
<string>20E5229e</string>
<key>DTSDKName</key>
<string>iphonesimulator16.4.internal</string>
<key>DTXcode</key>
<string>1430</string>
<key>DTXcodeBuild</key>
<string>14E6097d</string>
<key>MinimumOSVersion</key>
<string>16.4</string>
<key>NSHumanReadableCopyright</key>
<string>Copyright 
 2015 - 2016 Apple. All rights reserved.</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.protectedcloudstorage.protectedcloudkeysyncing</string>
<key>aps-connection-initiate</key>
<true/>
<key>aps-environment</key>
<string>serverPreferred</string>
<key>backupd-connection-initiate</key>
<true/>
<key>com.apple.application-identifier</key>
<string>com.apple.protectedcloudstorage.protectedcloudkeysyncing</string>
<key>com.apple.developer.aps-environment</key>
<string>serverPreferred</string>
<key>com.apple.developer.icloud-container-environment</key>
<string>Production</string>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudKit</string>
</array>
<key>com.apple.keystore.access-keychain-keys</key>
<true/>
<key>com.apple.keystore.lockassertion</key>
<true/>
<key>com.apple.nano.nanoregistry</key>
<true/>
<key>com.apple.private.MobileGestalt.AllowedProtectedKeys</key>
<string>UniqueDeviceID</string>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.appleaccount.app-hidden-from-icloud-settings</key>
<true/>
<key>com.apple.private.aps-connection-initiate</key>
<true/>
<key>com.apple.private.ckks</key>
<true/>
<key>com.apple.private.ckks.currentitempointers_read</key>
<true/>
<key>com.apple.private.ckks.currentitempointers_write</key>
<true/>
<key>com.apple.private.ckks.plaintextfields</key>
<true/>
<key>com.apple.private.cloudkit.buddyAccess</key>
<true/>
<key>com.apple.private.cloudkit.packages</key>
<true/>
<key>com.apple.private.cloudkit.spi</key>
<true/>
<key>com.apple.private.cloudkit.supportservice</key>
<true/>
<key>com.apple.private.cloudkit.systemService</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.pcskey.sync</string>
</array>
<key>com.apple.private.octagon</key>
<true/>
<key>com.apple.private.octagon.walrus</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceLiverpool</string>
</array>
<key>com.apple.securebackupd.access</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>com.apple.ProtectedCloudStorage.KTAccountKey</string>
<string>com.apple.ProtectedCloudStorage.backup</string>
<string>com.apple.ProtectedCloudStorage</string>
<string>com.apple.ProtectedCloudStorage.groupkit.groupaccesskeys</string>
</array>
<key>keychain-cloud-circle</key>
<true/>
</dict>
</plist>
application-identifier8com.apple.protectedcloudstorage.protectedcloudkeysyncing0
aps-connection-initiate
aps-environment
serverPreferred0 
backupd-connection-initiate
0\ com.apple.application-identifier8com.apple.protectedcloudstorage.protectedcloudkeysyncing06#com.apple.developer.aps-environment
serverPreferred0>0com.apple.developer.icloud-container-environment
Production01#com.apple.developer.icloud-services0
CloudKit0,'com.apple.keystore.access-keychain-keys
0% com.apple.keystore.lockassertion
com.apple.nano.nanoregistry
0F4com.apple.private.MobileGestalt.AllowedProtectedKeys
UniqueDeviceID0+&com.apple.private.accounts.allaccounts
0C>com.apple.private.appleaccount.app-hidden-from-icloud-settings
0.)com.apple.private.aps-connection-initiate
com.apple.private.ckks
04/com.apple.private.ckks.currentitempointers_read
050com.apple.private.ckks.currentitempointers_write
0+&com.apple.private.ckks.plaintextfields
0+&com.apple.private.cloudkit.buddyAccess
0(#com.apple.private.cloudkit.packages
com.apple.private.cloudkit.spi
0.)com.apple.private.cloudkit.supportservice
0-(com.apple.private.cloudkit.systemService
com.apple.private.ids.messaging0%#com.apple.private.alloy.pcskey.sync0
com.apple.private.octagon
0% com.apple.private.octagon.walrus
com.apple.private.tcc.allow0
kTCCServiceLiverpool0#
com.apple.securebackupd.access
keychain-access-groups0
,com.apple.ProtectedCloudStorage.KTAccountKey&com.apple.ProtectedCloudStorage.backup
com.apple.ProtectedCloudStorage8com.apple.ProtectedCloudStorage.groupkit.groupaccesskeys0
keychain-cloud-circle
@(#)PROGRAM:ProtectedCloudKeySyncing  PROJECT:ProtectedCloudStorage-868.102.2
URKey
PCSUserRegistry
PCSUserRegistryMobileBackup
PCSUserRegistrySubscription
doneSubscription
publicKey
escrow
firstSeen
identity
keyStatus
serverChangeToken
MBserverChangeToken
com.apple.ProtectedCloudStorage
UserRegistry
PCS-APS
resyncRegistryAction
v8@?0
subscribeAction
Failed to initalize UserRegistryDB
flushStats
v24@?0q8@"NSError"16
com.apple.icloud-container.
com.apple.protectedcloudstorage.protectedcloudkeysyncing
v24@?0@"NSString"8@"NSError"16
done
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
v32@?0@"CKRecordID"8@"CKRecord"16@"NSError"24
v24@?0@"CKRecordID"8@"NSString"16
v44@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24B32@"NSError"36
v16@?0@"NSError"8
clearPendingVariables
v24@?0@"CKAccountInfo"8@"NSError"16
No iCloud account
record
UserRegistryStats
MobileBackup
v16@?0r^v8
v16@?0^{__CFString=}8
TRUEPREDICATE
v24@?0@"NSArray"8@"NSError"16
%@-%@%@
Timed out waiting for a reply to %@ message with ID %@
com.apple.ProtectedCloudStorage.MessagerRegistration
com.apple.ProtectedCloudStorage.IDSMessaging
-[PCSIDSTransport setDeviceManager:]_block_invoke
PCSIDSTransport.m
self.service
deviceManager
com.apple.ProtectedCloudStorage.outstandingReply
com.apple.ProtectedCloudStorage.device_internal_queue
%@%@
38mm
42mm
Unknown
Unhandled
com.apple.pairedsync.protectedcloudkeysyncing
com.apple.appconduitd.PCSDeviceManager.internal
%@(%@,%@)
%@(%@)
finished 
cancelled
executing
ready
pending
<%@: %@ error:%@>
<%@: %@%@>
 dep:
<%@ (%p): %@ error:%@>
<%@ (%p): %@%@>
B32@?0@8Q16^B24
<PCSRegistryOperationPair: %@, %@>
PCSIDSSyncing
v16@?0@"PCSPeerSyncing"8
force
%@ - %@
com.apple.private.alloy.pcskey.sync
inital sync
Current
Keys
iCDPFlag
v24@?0@"PCSIDSMessage"8@"NSError"16
v32@?0@"NSString"8Q16^B24
reply
nextRegistrySync
registrySyncIdentifier
v28@?0B8@"PCSMTT"12@"NSError"20
PCSDelayedActionQueue
timestampWEnable
timestampWDisable
timestampKeyrollAttempted
timestampKeyrollSuccess
timestampObserveWEnable
timestampObserveWDisable
initialWState
knownWState
PCSMetrics
wEnableThisDeviceDays
wDisableThisDeviceDays
keyrollSucceededDays
keyrollAttemptedDays
wEnableObservedDays
wDisableObservedDays
wState
keycount_%u
currentInStingray
currentMarkedForRolling
currentWasMarkedForRolling
v24@?0r^v8r^v16
v24@?0^{__CFString=}8^{__CFDictionary=}16
v20@?0^{__CFString=}8I16
metrics.db
PRAGMA journal_mode = WAL;CREATE TABLE IF NOT EXISTS keys(    dsid TEXT NOT NULL,    service INTEGER NOT NULL,    pubkey TEXT NOT NULL,    marked INTEGER NOT NULL DEFAULT 0,    PRIMARY KEY (dsid, service, pubkey));
INSERT OR IGNORE INTO keys (dsid, service, pubkey) VALUES (?, ?, ?);
UPDATE keys SET marked=? WHERE dsid=? AND service=?;
SELECT marked FROM keys WHERE dsid=? AND service=? AND pubkey=?;
com.apple.security.PCSIdentityBackup
lastSeen
lastHash
name
lastSent
failures
numberHandshakes
buildVersion
firstSync
protocol
dsid
iCDP2
circle2
v32@?0@?<v@?@"NSString">8Q16^B24
clients
v32@?0@8@16^B24
nextRegistrySyncEnterprise
starting IDS
testRollEpoch
triggerWatchSyncing
PCSWatchSyncing
com.apple.ProtectedCloudStorage.scheduledKeyroll
v16@?0@"NSObject<OS_xpc_object>"8
PCS-healthSummary
@"NSDictionary"8@?0
version
noDSID
noIdentitySet
shouldRoll
roll
keyrollScheduled
notifyKeyRegistry
com.apple.ProtectedCloudStorage.triggerWatchSyncing
v24@?0@"NSDictionary"8@"NSError"16
com.apple.ProtectedCloudStorage.test.mobileBackupStateChange
com.apple.nanoregistry.paireddevicedidchangeversion
com.apple.pairedsync.syncDidComplete
com.apple.ProtectedCloudStorage.updatedKeys
com.apple.security.view-change.PCS
com.apple.security.secureobjectsync.circlechanged
com.apple.ProtectedCloudStorage.mobileBackupStateChange
_CDPWalrusStateChangeDarwinNotification
com.apple.ProtectedCloudStorage.PendingKeyRoll
BYSetupAssistantFinishedDarwinNotification
lastMobileBackupStatus
No last mobile backup status, but have a keyroll epoch time (%@)
False alarm check for backup state change
ProtectedCloudStorage
ShorterRollInterval
v48@?0I8^{__CFString=}12B20B24i28^{__CFString=}32^{__CFString=}40
v20@?0@"NSString"8B16
v32@?0@"NSData"8@"PCSMTT"16@"NSError"24
com.apple.ProtectedCloudStorage.test.mobileBackupStateChange.success
attemptedRoll
successfulRoll
Skipping escrow proxy sync, could not determine dsid and/or identifier: %@
v20@?0B8@"NSError"12
unsupported service
cannot create identity set
No ServiceName Specified
Failed getting dsid: %@
CDP not supported on this account: %@
Manatee not supported on this device
v40@?0@"NSNumber"8@"NSNumber"16@"NSNumber"24@"NSError"32
v44@?0^{_PCSIdentityData=}8@"NSData"16@"PCSMTT"24B32@"NSError"36
RepairWalrus
request already pending
Mobile backup is disabled
v32@?0@8Q16^B24
No user registry
test
restore
DSID missing
Failed to get identities
Would Be
reportStatus
view
global
currentTLK
keystate
become_ready
readypendingunlock
waitforunlock
error
initializing
initialized
fetchcomplete
begin_fetch
waitfortlkcreation
waitfortlkupload
badcurrentpointers
waitfortrust
needrefetch
newtlksfailed
fetching
tlkmissing
waitfortlk
unhealthy
healtlkshares
healtlksharesfailed
waitforfixupoperation
resetzone
com.apple.private.protectedcloudstorage.keysyncing
PCSSync
com.apple.ProtectedCloudStorage.fortnightly
com.apple.notifyd.matching
T@"NSObject<OS_os_log>",&,V_log
AddMultiSamplerForName:withTimeInterval:block:
T@"UserRegistryDB",&,V_database
T@"<PCSDeviceManagerDelegate>",W,V_delegate
TB,V_isNewWatch
T@"<PCSIDSMessagingDeviceManager>",W,N,V_deviceManager
_circle
T@"CKRecordZoneID",&,V_mobileBackupRecordZoneID
T@"IDSMessageContext",R,V_idsContext
_device
T@"NRDevice",R,V_nrDevice
_operationQueue
T@"NSData",&,V_keys
_pendingRequest
T@"NSDate",&,V_firstSync
_userdb
T@"NSDate",&,V_lastSent
actualOperation
T@"NSError",&,V_error
arrayWithArray:
T@"NSMutableArray",&,V_notifyHooks
containsObject:
T@"NSMutableDictionary",R,V_devices
copyIdentitySet
T@"NSObject<OS_dispatch_queue>",&,V_internalQueue
dataWithLength:
T@"NSObject<OS_dispatch_queue>",&,V_registryQueue
deleteEscrowID:
T@"NSObject<OS_dispatch_queue>",R,V_internalQueue
deleteRecordID:
T@"NSObject<OS_dispatch_source>",&,V_timeoutTimer
endTransaction:
T@"NSObject<OS_os_log>",&,V_oslog
identityCopySet
T@"NSObject<OS_os_transaction>",&,V_transaction
isBackupEnabled
T@"NSOperation",&,V_cloudKitRateLimitedOp
isReady
T@"NSOperationQueue",&,V_operationQueue
manager
T@"NSOperationQueue",&,V_serialOperationQueue
metrics
T@"NSString",&,V_dsid
T@"NSString",&,V_name
numberWithLong:
T@"NSString",&,V_uuid
protocolVersion
T@"NSString",R,C
queryEscrowKeys
T@"NSString",R,V_idsDeviceIdentifier
removeObserver:
T@"PCSAccountsModel",&,V_accounts
resubmitSyncing
T@"PCSDelayedAction",&,V_subscribeAction
T@"PCSDevice",&,V_activePairedDevice
service
T@"PCSIDSSyncing",&,V_syncing
setBool:forKey:
T@"PCSKeyClient",&,V_client
setIsTombstone:
T@"PCSKeySyncing",&,V_syncingManager
setMarkKeyStmt:
T@"PCSRegistryOperation",&,V_actualOperation
setNotifyHooks:
T@"PCSRegistryOperationPair",&,V_currentSyncOperations
setRecordWithIDWasDeletedBlock:
T@"PCSUserRegistry",&,V_registry
setTransaction:
T@"PSYSyncCoordinator",R,V_coordinator
subscribeAction
T@?,C,V_actionOnTrigger
syncDidComplete
T@?,C,V_completionBlockWithError
syncing
TB,R
triggerSyncingWithEscrowProxy:dsid:accountIdentifier:accountLastError:settingsKeyExpirationDate:settingsKeyIdentifier:complete:
TB,V_iCDP
userDBBackupRecordIDsWithReply:
.cxx_destruct
T@"NSUserDefaults",&,V_settings
T#,R
T@"UserRegistryStats",&,V_stats
T@"<PCSIDSMessagingDelegate>",W,N,V_delegate
T^{sqlite3_stmt=},V_markKeyStmt
T@"CKContainer",&,V_container
_client
T@"CKRecordZoneID",&,V_recordZoneID
_delayInSeconds
T@"IDSService",R,V_service
_fromID
T@"NSArray",R
_pendingReplies
T@"NSData",&,V_lastHash
_syncingManager
T@"NSDate",&,V_lastSeen
actionOnTrigger
T@"NSDictionary",R,V_message
allKeys
T@"NSHashTable",R,V_observers
checkRatelimit:
T@"NSMutableDictionary",&,V_peers
copyAllPCSKeys:
T@"NSMutableDictionary",R,V_pendingReplies
copySHA256Hash:
T@"NSObject<OS_dispatch_queue>",&,V_queue
dealloc
T@"NSObject<OS_dispatch_queue>",&,V_syncingQueue
deleteRecordAll
T@"NSObject<OS_dispatch_source>",&,V_keyrollSchedulerSource
devices
T@"NSObject<OS_dispatch_source>",&,V_waitSource
finishOperation
T@"NSObject<OS_os_transaction>",&,V_pendingTransaction
initWithBackup:
T@"NSObject<OS_xpc_object>",&,V_scheduledKeyrollActivity
isProxy
T@"NSOperationQueue",&,V_mainOperationQueue
T@"NSOperationQueue",&,V_queue
message
T@"NSString",&,V_buildVersion
mobileBackupRecordIDsWithReply:
T@"NSString",&,V_label
numberWithBool:
T@"NSString",&,V_operationUUID
privateDatabase
T@"NSString",R
queryEscrowKey:
T@"NSString",R,V_fromID
release
T@"NSUUID",R
replaceRecordID:data:publicKey:
T@"PCSDelayedAction",&,V_resyncRegistryAction
resyncDatabase:
T@"PCSDelayedAction",&,V_triggerWatchSyncingAction
running
T@"PCSDevice",&,V_device
serviceSpaceDidBecomeAvailable:
T@"PCSIDSTransport",&,V_transport
setIsConnected:
T@"PCSKeySyncing",&,V_manager
setLog:
T@"PCSMobileBackup",&,V_mobileBackup
setMaxConcurrentOperationCount:
T@"PCSRegistryOperation",&,V_finishOperation
setRecordFetch:
T@"PCSRegistryOperationPair",&,V_pendingSyncOperations
setStats_dirty:
T@"PSYInitialSyncStateObserver",R,V_stateObserver
signalComplete:
T@"UserRegistryDB",&,V_userdb
syncCoordinatorWithServiceName:
T@?,C,V_completion
syncSessionType
T@?,C,V_replyBlock
trigger
TB,V_circle
userDBBackupRecordIDsWithError:
TB,V_isActivePairedDevice
TB,V_isConnected
TB,V_isTombstone
TB,V_pendingRequest
TB,V_resubmitSyncing
TB,V_running
TB,V_serviceDelegateSet
TB,V_stats_dirty
TB,V_syncingIsRestricted
TQ,R
TQ,V_delayInSeconds
T^{sqlite3=},V_db
T^{sqlite3_stmt=},V_addKeyStmt
T^{sqlite3_stmt=},V_getKeyStmt
Ti,V_clientVersion
Ti,V_failures
Tq,V_noTransaction
Tq,V_numberHandshakes
Tq,V_protocolVersion
URLByAppendingPathComponent:
URLForDirectory:inDomain:appropriateForURL:create:error:
UTF8String
UUID
UUIDString
_accounts
_actionOnTrigger
_activePairedDevice
_actualOperation
_addKeyStmt
_buildVersion
_clientVersion
_cloudKitRateLimitedOp
_completion
_completionBlockWithError
_container
_coordinator
_currentSyncOperations
_database
_delegate
_deviceManager
_devices
_dsid
_error
_failures
_finishOperation
_firstSync
_getKeyStmt
_iCDP
_idsContext
_idsDeviceIdentifier
_internalQueue
_isActivePairedDevice
_isConnected
_isNewWatch
_isTombstone
_keyrollSchedulerSource
_keys
_label
_lastHash
_lastSeen
_lastSent
_log
_mainOperationQueue
_manager
_markKeyStmt
_message
_mobileBackup
_mobileBackupRecordZoneID
_name
_noTransaction
_notifyHooks
_nrDevice
_numberHandshakes
_observers
_onQueue_isReachable
_onqueueDeleteServerChangeToken:
_onqueueSaveUserRegistryStats
_operationUUID
_oslog
_peers
_pendingSyncOperations
_pendingTransaction
_protocolVersion
_queue
_recordZoneID
_registry
_registryQueue
_replyBlock
_resubmitSyncing
_resyncRegistryAction
_running
_scheduledKeyrollActivity
_serialOperationQueue
_service
_serviceDelegateSet
_setEnabledTopics:
_settings
_stateObserver
_stats
_stats_dirty
_subscribeAction
_syncing
_syncingIsRestricted
_syncingQueue
_timeoutTimer
_transaction
_transport
_triggerWatchSyncingAction
_uuid
_waitSource
aa_altDSID
aa_personID
accountForCurrentPersona
accountInfoWithCompletionHandler:
accountStatus
accountStatusWithCompletionHandler:
accounts
activePairedDevice
actuallyScheduleRollAttempt
addDatabaseOperation:
addDelegate:queue:
addDependency:
addExecutionBlock:
addIdentityInfoToHealthSummary:dsid:wState:
addKeyStmt
addKeyWithDSID:service:publicKey:
addMetricsToHealthSummary:withIdentitySet:
addObject:
addObserver:
addObserver:selector:name:object:
addOperation:
addOperationWithBlock:
addUpdateNotify:
allClients
allDevices
allMobileBackupKeys
allMobileBackupPublicKeys
allValues
array
arrayWithObjects:count:
attemptTimer
autorelease
beginExclusiveTransaction
blockOperationWithBlock:
boolForKey:
boolValue
buildVersion
bytes
cacheUserRegistryStats
cancel
checkAccountStatus:
checkErrorForRetryPause:
checkForBackupStateChange
checkHashWithRateLimit:
checkRegistry:
checkSyncing:
checkSyncingForPeer:force:
circle
ckRecordListToRecordIDs:
class
clearCloudKitCache
clearNextSyncNegativeCache
client
clientVersion
cloudKitRateLimitedOp
code
companionCircleMember
compare:
completion
completionBlockWithError
componentsJoinedByString:
conformsToProtocol:
connection:channelSubscriptionsFailedWithFailures:
connection:didChangeConnectedStatus:
connection:didFailToSendOutgoingMessage:error:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didReceivePublicToken:
connection:didReceiveToken:forInfo:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveURLToken:forInfo:
connection:didReceiveURLTokenError:forInfo:
connection:didSendOutgoingMessage:
connectionDidReconnect:
connectionForDevice:complete:
container
containerWithIdentifier:
controlObject:
coordinator
copy
copyLocalPairedDevices
count
countByEnumeratingWithState:objects:count:
createIdentity:dsid:roll:sync:complete:
createNewIdentity:roll:sync:complete:
createPendingSyncOperation:
createZone:withName:
currentActivePairedDevice
currentPersonaSupportsPrimaryAccount:
currentRunLoop
currentSyncOperations
data
dataWithBytes:length:
database
databaseURL
date
dateByAddingTimeInterval:
dateForKey:
dateWithTimeIntervalSince1970:
debugDescription
decodeObjectOfClass:forKey:
defaultAccountsModel
defaultCKConfiguration
defaultCenter
defaultManager
defaultMobileBackup
defaultPCSSyncing
defaultSyncingManager
delayInSeconds
delegate
deleteEscrowKey:
deleteMirrorKeys:
deleteMobileBackupZone
dependencies
description
device
deviceForIDSIdentifier:
deviceForNRDevice:
deviceForPairingID:
deviceManager
devicesAreNoLongerNearby:
devicesAreNowNearby:
dictionary
dictionaryForKey:
dictionaryWithDictionary:
dictionaryWithObjects:forKeys:count:
disableWalrusForAccount:withParameters:complete:
distantPast
domain
doubleValue
dsid
enableWalrusForAccount:withParameters:complete:
encodeObject:forKey:
encodedData
ensureMKExists:error:
ensureUserRegistryDbLoaded:
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
error
errorShouldCauseReset:
errorWithDomain:code:userInfo:
etag
expectsPeerResponse
exportedInterface
extractMobilebackupKeyEscrow:
failures
fetchAllChanges:
fetchAllDeviceKeys:withReply:
fetchCliqueStatus:error:
fetchMobileBackupRecordIDsWithError:
fetchRecordZoneChanges
fetchStats:
fetchWithTimeout:error:
fileSystemRepresentation
firstSync
flushStats
fromID
fuzzyDaysSinceDate:
fuzzyDaysSinceKey:
getAllClients:
getClientWithIdentifier:
getConfigData:
getHealthSummary:
getKeyInfoWithDSID:service:publicKey:
getKeyStmt
getPairedDevices
getRollEpoch
getServerChangeToken:
getServicesToRoll:handler:
getValues:
handleIncomingMessage:
hasValidCredentials
hash
haveKeys:
havePeers
healthSummary
iCDP
iCDPStatus
identifier
identityCopySet:
idsContext
idsDeviceIdentifier
incomingMessage:fromDevice:
incomingResponseIdentifier
indexesOfObjectsPassingTest:
init
init:finish:
initForReadingFromData:error:
initForSimulatorWithNRDevice:
initForTesting
initRequiringSecureCoding:
initWithContextData:
initWithDSID:
initWithDelegate:
initWithDevice:syncingManager:
initWithEnvironmentName:namedDelegatePort:queue:
initWithIdentitySet:dsid:
initWithInt:
initWithLabel:delay:operationQueue:
initWithMachServiceName:
initWithManager:transport:serialQueue:
initWithMessage:idsContext:fromID:
initWithName:values:dsid:
initWithPCSKeySyncing:
initWithRecordName:zoneID:
initWithRecordType:predicate:
initWithRecordType:recordID:
initWithRecordZoneIDs:configurationsByRecordZoneID:
initWithRecordZonesToSave:recordZoneIDsToDelete:
initWithRecordsToSave:recordIDsToDelete:
initWithService:
initWithServiceName:
initWithSubscriptionID:
initWithSubscriptionsToSave:subscriptionIDsToDelete:
initWithTimeout:queue:logDescription:sentID:replyHandler:completion:
initWithZoneName:
initWithZoneName:ownerName:
initialSyncStateObserver:initialSyncDidCompleteForPairingIdentifier:
initialSyncStateObserver:syncDidCompleteForPairingIdentifier:
initialSyncStateObserver:syncDidResetForPairingIdentifier:
initialSyncStateObserverClientCanRetryFailedRequests:
intValue
interfaceWithProtocol:
internalQueue
isActivePairedDevice
isCancelled
isConnected
isEqual:
isEqualToData:
isEqualToString:
isExecuting
isFinished
isKindOfClass:
isMemberOfClass:
isNewWatch
isReachable
isTombstone
keyFailure:
keyRecord:withName:zone:
keyRecordIdentity:device:version:
keyRegistryCallback
keyRollPending:complete:
keyrollSchedulerSource
keys
label
lastError
lastHash
lastSeen
lastSent
lastfetchRecordZoneChangesAtStart
length
listener:shouldAcceptNewConnection:
loadMobileBackupKeysFromDB
logRecoverableError:forEvent:withAttributes:
logSuccessForEvent:
logger
longValue
main
mainOperationQueue
manateeStatus:complete:
markKeyNegativeWithDSID:service:
markKeyStmt
markMirrorKey:type:
markNegativeCallback
migrateToiCDPForAccount:withParameters:complete:
missingKeysFromDevice:type:
mobileBackup
mobileBackupKeyRecordIdentity:version:
mobileBackupRecordZoneID
mobileBackupStatus:
model
mutableBytes
mutableCopy
name
newDevices:removedDevices:
noTransaction
notifyDailyEvent
notifyEvent:
notifyHooks
notifyInternalEvent:
notifyKeyRegistry
nrDevice
numberHandshakes
numberWithDouble:
numberWithInt:
numberWithInteger:
numberWithUnsignedInt:
numberWithUnsignedLong:
objectForKey:
objectForKeyedSubscript:
objectsAtIndexes:
observers
operationQueue
operationStateString
operationUUID
osVersion
oslog
outStandingPCSKeys:
outgoingResponseIdentifier
pairedDevice
pairingID
pcsKeyData:
peers
pendingDependenciesString:
pendingReplies
pendingRequest
pendingSyncOperations
pendingTransaction
performQuery:inZoneWithID:completionHandler:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
predicateWithFormat:
previousServerChangeToken
privateCloudDatabase
processIdentifier
pushMobileBackupRecordsToCloudKit:removeObjects:
pushNotifications
queryEscrowID:
queryEscrowName:
queryMobileBackupKeysFromCloudKit:
queue
queuedCheckRegistry:withReply:
ratelimitClientSyncing
recordEpochForKeyroll
recordFetch
recordID
recordModify
recordName
recordType
recordZoneID
registerCloudKitNotifications
registry
registryQueue
removeObject:
removeObjectForKey:
removeObjectsInRange:
repairWalrus
replaceConfigRecord:data:
replyBlock
requestKeys:withReply:
respondsToSelector:
restoreMobileBackup:dsid:withReply:
resume
resyncRegistryAction
retain
retainCount
rollingComplete:
rpcStatus:reply:
runReplyHandlerWithMessage:error:
saveClient:
saveEscrowChange:
saveRecord:
saveServerChangeToken:forKey:
scanPCSIdentitiesForNewMobileBackupRecords
scheduleRollAttempt
scheduledKeyrollActivity
self
selfname
sendCommand:data:dsid:handleReply:
sendCurrentKeys:
sendCurrents:dsid:handleReply:
sendKeys
sendKeys:dsid:handleReply:
sendKeysOld
sendMessage:toDestinations:priority:options:identifier:error:
sendMessage:toDevice:withPriority:timeout:logDescription:handleReply:
sendReply:error:toMessage:
sendResponse:toMessage:withPriority:timeout:logDescription:
sendSomeKeys:dsid:
sendiCDPStatus:circleStatus:handleReply:
serialNumber
serialOperationQueue
serverPreferredPushEnvironmentWithCompletionHandler:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:sentBytes:totalBytes:
service:account:incomingData:fromID:context:
service:account:incomingMessage:fromID:context:
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:receivedGroupSessionParticipantDataUpdate:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantUpdate:context:
service:activeAccountsChanged:
service:connectedDevicesChanged:
service:devicesChanged:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:didSwitchActivePairedDevice:acknowledgementBlock:
service:linkedDevicesChanged:
service:nearbyDevicesChanged:
serviceAllowedTrafficClassifiersDidReset:
serviceDelegateSet
setAccounts:
setAction:
setActionOnTrigger:
setActivePairedDevice:
setActualOperation:
setAddKeyStmt:
setAltDSID:
setAutomaticallyRetryNetworkFailures:
setBuildVersion:
setCircle:
setClient:
setClientVersion:
setCloudKitRateLimitedOp:
setCompanionCircleMember:
setCompletion:
setCompletionBlockWithError:
setConfiguration:
setContainer:
setContext:
setCurrentSyncOperations:
setData:
setDatabase:
setDb:
setDelayInSeconds:
setDelegate:
setDevice:
setDeviceManager:
setDiscretionaryNetworkBehavior:
setDsid:
setError:
setEscrowKey:escrowBlob:
setExportedInterface:
setExportedObject:
setFailures:
setFetchAllChanges:
setFetchRecordZoneChanges:
setFetchRecordZoneChangesCompletionBlock:
setFinishOperation:
setFirstSync:
setFlags:
setGetKeyStmt:
setHoldTransaction:
setICDP:
setInternalQueue:
setIsActivePairedDevice:
setIsCloudKitSupportOperation:
setIsNewWatch:
setKeyrollSchedulerSource:
setKeys:
setLabel:
setLastHash:
setLastSeen:
setLastSent:
setLastfetchRecordZoneChangesAtStart:
setMainOperationQueue:
setManager:
setMirrorKey:service:type:publicIdentity:
setMobileBackup:
setMobileBackupRecordZoneID:
setModifyRecordZonesCompletionBlock:
setModifyRecordsCompletionBlock:
setModifySubscriptionsCompletionBlock:
setName:
setNoTransaction:
setNotificationInfo:
setNumberHandshakes:
setObject:forKey:
setObject:forKeyedSubscript:
setOperationQueue:
setOperationUUID:
setOslog:
setPeerCircleStatus:
setPeeriCDPStatus:
setPeers:
setPendingRequest:
setPendingSyncOperations:
setPendingTransaction:
setPreviousServerChangeToken:
setProtocolVersion:
setPushNotifications:
setQueue:
setRecordModify:
setRecordWasChangedBlock:
setRecordZoneFetchCompletionBlock:
setRecordZoneID:
setRegistry:
setRegistryQueue:
setReplyBlock:
setResubmitSyncing:
setResyncRegistryAction:
setRunning:
setSavePolicy:
setScheduledKeyrollActivity:
setSerialOperationQueue:
setServiceDelegateSet:
setSettings:
setSimulatedDevices:
setStats:
setSubscribeAction:
setSyncing:
setSyncingIsRestricted:
setSyncingManager:
setSyncingQueue:
setTimeoutIntervalForResource:
setTimeoutTimer:
setTransport:
setTriggerWatchSyncingAction:
setUseCachedAccountStatus:
setUserdb:
setUuid:
setWaitSource:
setWithArray:
setWithObject:
setZoneReset:
setiCDPStatus:
settings
settingsKeyForKey:error:
setupActivity
setupCloudKitSyncing
setupDatabase
setupIdentitiesForAccount:withParameters:optional:
setupMetrics
setupStatCache
setupSubscriptions
sharedInstance
sharedManager
sharedSyncDelegate
shouldRoll
shouldRollStingray
startBackupOfNewMobileBackupIdentities
statFetch
statModify
stateObserver
stats
stats_dirty
storeEventTimestamp:
storePCSKeyData:current:
stringByAppendingString:
stringForKey:
stringWithFormat:
stringWithUTF8String:
subarrayWithRange:
superclass
supportsMigrationSync
supportsNewProtocol
supportsPCSKeySync
syncCoordinator:beginSyncSession:
syncCoordinator:didInvalidateSyncSession:
syncCoordinatorDidChangeSyncRestriction:
syncCoordinatorDidReceiveStartSyncCommand:
syncDevices
syncKeys:withReply:
syncKeysWithDatabase
syncUserRegistry
syncedKeyToDevice:type:device:
syncingIsRestricted
syncingIsRestrictedForPairingID:
syncingManager
syncingQueue
timeIntervalSince1970
timeIntervalSinceDate:
timeIntervalSinceNow
timeUntilSyncing
timeoutTimer
transaction
transport
transportWithIDSServiceName:
triggerCKKSSyncForService:dsid:complete:
triggerDaily:withReply:
triggerEscrowSyncWithDSID:accountIdentifier:accountLastError:settingsKeyExpirationDate:settingsKeyIdentifier:complete:
triggerIDSSyncing:
triggerKeyRolling
triggerUserRegistryCheck:withReply:
triggerWatchSyncing
triggerWatchSyncing:
triggerWatchSyncingAction
tristateForBoolKey:
updateClient:
updateCurrentWState:
updateEscrowData:escrowIdentity:identity:
updateLastSeen
updateMirrorKey:service:type:newType:current:
updateProtocolVersionIfNeeded:
updateSyncDevice:seen:version:
updateSyncDevice:version:
updateSyncedKeysToDevice:type:keys:
updateWithValues:dsid:
userInfo
userRegistry
userdb
uuid
valueForEntitlement:
valueForProperty:
wStateChanged
waitSource
waitUntilFinished
watchSize
weakObjectsHashTable
zone
zoneID
zoneReset
Failed to initalize UserRegistryDB: %@
Failed to initalize UserRegistryDB
accountStatusWithCompletionHandler: %d error: %@
Starting to sync
Stoping syncing
setupCloudKitSyncing: Failed to initalize UserRegistryDB: %@
setupSubscriptions: Failed to initalize UserRegistryDB: %@
attempting to subscribe to CK zone changes
setupSubscriptions: rate-limited by CloudKit
subscription completed
Couldn't create database subscription; syncing is severely degraded: %@
didReceiveToken: %@, triggering syncing
Creating resyncing operation, finishing with %@
fetchAllChanges: Failed to initalize UserRegistryDB: %@
Fetching changes after change token %@
received new record(%@) for: %@
Got CloudKit error: %@
got update for unknown zone: %@
Record deleted: %@
got delete for unknown zone: %@
Got CloudKit error while fetching: %@ for zone:%@
Got other error: %@for zone:%@
Finished fetching changes for %@ with change token %@
fetchRecordzoneChangesCompletionBlock error: %@
Finished fetching changes with error: %@
syncUserRegistry: Failed to initalize UserRegistryDB: %@
Creating new syncing operation, after %@
Returning pending syncing operation: %@
rate-limited by CloudKit
Beginning syncing operation %@
syncing operation (%@) no longer pending
Finished syncing operation %@: (%@)
Not logged into iCloud (%@)
iCloud account in grey mode (%@)
Caching DSID from Accounts
No DSID available. Quitting sync.
Creating zone before syncing
Zone creation failed for some reason: (%@), stopping MobileBackup sync
Fetch failed for some terrible reason: (%@), restarting entire sync process
Fetching failed for some reason: (%@), scheduling sync restart
MobileBackup is off; not pushing data to CloudKit
startBackupOfNewMobileBackupIdentities as part of syncing done: (%@)
Pushing new changes failed for some reason: (%@), scheduling retry
No new items to push; finishing
Created new pending syncing operation: %@
saveRecord: Failed to initalize UserRegistryDB: %@
CloudKit timeout complete
Delaying %.1f seconds for CK operations
Error creating zone (%@): %@
Created zones: %@
Error deleting zone (%@): %@
Deleted zones: %@
pushMobileBackupRecordsToCloudKit Starting
updating %u records, removing %u records
Finished uploading registry records (%@)
Stored record, saving in cache: %@
Retriggering syncing due to error (%@)
Failed to create escrow identity: %@
checkRegistry: Failed to initalize UserRegistryDB: %@
MobileBackup is off; no new records!
No PCSIdentities to Escrow to MobileBackup
Skipping MobileBackup Escrow: %@
No escrow identity
Will store %@ as (%@)
Couldn't escrow identity %@ (%@); skipping
Already stored %@ as (%@); skipping
No identities for %@
Not doing MobileBackup for %@
Harvested %lu records for MobileBackup escrow from Local PCS
Starting startBackupOfNewMobileBackupIdentities
startBackupOfNewMobileBackupIdentities - pushing new keys to cloudKit
No local mobile backup key changes
Fail getting dsid: %@
Failed to get PCS identities: %@
Converting CKRecords to PCSKeybagKeys
Converted %lu CKRecords to PCSKeybagKeys
loadMobileBackupKeysFromDB returning (count %lu)
allMobileBackupKeys: Failed to initalize UserRegistryDB: %@
Record %@ missing public key
queryMobileBackupKeysFromCloudKit
queryMobileBackupKeysFromCloudKit: error: %@
queryMobileBackupKeysFromCloudKit got keys (count %lu)
queryMobileBackupKeysFromCloudKit returning (count %lu)
fetchMobileBackupRecordIDsWithError: Failed to initalize UserRegistryDB: %@
userDBBackupRecordIDsWithError: Failed to initalize UserRegistryDB: %@
Failed to create IDSService for %@
NanoRegistry returned nil from getPairedDevices
NanoRegistry returned an empty array from getPairedDevices
Sent %@ message with IDS UUID %@
Error occurred sending %@ message with no replyHandler: %@
Reply attempted to message that did not expect peer response: %@ -> %@
Failed to get response ID from original message id %@; dropping reply
Failed to send response with ID %@ to message with ID %@
Received reply for message ID %@ with ID %@
Got message with ID %@ with response ID %@, but no reply handler available
Received message with ID %@
Got message from %@ with id %@ with no delegate set
Error occurred sending message %@: %@
Synchronize keys with escrow proxy
Current persona doesn't match dsid
Fail to synchronize keys: %@
Synchronize keys complete
Beginning %@ sync session
Found watch: %@ new: %d
No active paired device
No IDS Device registered with identifier %@
Failed to find device with pairing ID %@
Failed to get pairing ID from device %@
Failed to get PCSDevice for identifier %@; dropping message.
Failed to get sync connection for IDS device %@; dropping message
syncing  with: %@
Device %@ has disappeared
Device %@ appeared. isActive:%d, isConnected:%d
Device %@ is now nearby (isActive:%d)
Device %@ is no longer nearby (isActive:%d)
sending message: %d to peer: %@
sending keys to peer: %@
Device %@ checking if syncing needed
Can't get initial data: %@
Can't get initial hash: %@
Client %@ already have uptodate keys
Client %@ have same os version: %@
Ratelimit sending to device %@
initial request to device %@ already pending
Sending inital check-in to device %@ hash: %@
reply from initital checkin: %@ error: %@
Client have keys: %@
Client requests updating keys: have %@
Client requests new protocol
sendKeys request to device %@ already pending
Can't get dsid
Sending keys to device %@ hash:%@
reply from send key: %@ error: %@
client confirms it have key: %@
client failed
No key to send [to device: %@
sending %lu (%lu left) keys to
client confirms stored keys: %u
device: %@ type: 1 keys: %@
client failed: %d
set current: %@
Can't get pending keys
local iCDP: %d, cached peer iCDP status: %d
local circle: %d, cached peer circle status: %d
Setting peer iCDP status to: %d and circle to: %d
Failed to send message to peer: %@, trying later
Peer confirmed iCDP state too: %d
Other failure to store iCDP state: %d, trying later
handleIncomingMessage watch requested keys: %@
handleIncomingMessage sync with escrow proxy: %@
sync with escrow proxy for service %@
Failed to get key: %@
handleIncomingMessage unknown command %d from device: %@
failed to locate Application Support directory: %@
opening %@ failed: %s
_sqlite3_maintain_load_factor for %@ failed: %d
table create for %@ failed: %s
Failed to fetch dsid from accounts: %@
Failed to get identity set for pcsKey extraction
Failed to get identity for public key %@
Failed to get exported data for identity %@: %@
Failed to parse key data: %@
Failed to store identity %@: %@
Already have a local copy of: %@
Failed to get iCDP: %@
Failed to set iCDP: %@
PERF: Syncing with device older than watchOS 4 / iOS 11
Failed to get database
Updating service %@
Skipping identities for service %@
Failed to remove MirrorKeys from registry for %@
Failed to get copy of identities of service type: %@
failed to open database transaction
Syncing %lu identities %@ with database
updating protocol for client %@
Error checking registry (%@)
Trigger syncing with watches
No peers, not doing any syncing with watches
Catching up local database changes from keychain
Trigger syncing to watches
notify sync key complete: %@: error: %@
Got darwin notification %@
MOBSTATE Got notification that mobile backup state changed.
failed to fetch appropriate key: %@
MOBSTATE Notifying registry.
There is a pending keyRoll for epoch %@
Insufficient time elapsed since previous Stingray key roll attempt (%{public}@)
Stingray key roll not required
No identity key roll is required, not scheduling.
Identity key roll is already scheduled.
Scheduled an identity key roll attempt to occur in %lld seconds.
getServicesToRoll: no identity set
Unexpected error finding current identity for %@: %d
Keyrolling service %@ due to existing backup
Keyroll triggered but there is no self
Keyroll triggered, but DSID is unknown; will retry later
Keyroll triggered but we've already completed rolling (defer: %d)
PCSCKKSRollAndSync
CKKS registry roll & sync for all eligible services (%d)
CKKS registry roll & sync failed for service %@ with: %{public}@ (mtt: %@)
CKKS registry roll & sync for service %@ completed: %@
Successfully completed keyroll operations for  %d keys
Failed keyroll operations for  %d keys
Trigger syncing with escrow proxy on behalf of cloudd: next sync: %{public}@
skipping sync due to ratelimiting
setting cloudd expiration to: %@
Escrow proxy sync reported: %d: %{public}@
PCSCKKSRegistrySync
Manatee sync with CKKS registry for service %{public}@
CKKS registry sync failed with: %{public}@ (mtt: %@)
CKKS registry sync completed: %@
Failed to get W status: %@
setupIdentitiesForAccount: account %@ is already setup, ignoring request
setupIdentitiesForAccount: PCSIdentitySetup failed: %@
Completed best-effort mobile backup restore with recoverIssue:%@ missing:%@ present:%@ error:%@
Timeout expired for best-effort backup recovery. Continuing with CKKS sync.
Kicking off user registry sync due to new messages3 identity
Fail getting dsid, error: %@
repairWalrus: no identity set
repairWalrus: failed to get walrus status: %@
repair migrate result: %@
dsid is nil
Already a request (recently) pending, returning early
Allowing checkRegistry calls again
Requsted keys sync
Fetching all device keys
PCSRestoreCKBackupWithCompletion: %s
restoreMobileBackup: sync finished with: %@
restoreMobileBackup: got reply from server
PCSRestoreCKBackupWithCompletion failed with: %@
%@ Adding missing identity
Already have identity
recover stats: Recovered: %d AlreadyPresent: %d RecoveryIssue: %d
PCSReportManateeStatus otStatus: %@
PCSReportManateeStatus rpcStatus: %@
PCSReportManateeStatus rpcStatus reply: %@
PCSReportManateeStatus %@ rpcStatus: %d
Client pid: %d doesn't have entitlement: %@
PCSUserRegistry
APSConnectionDelegate
NSObject
PCSIDSReplyContext
PCSIDSTransport
IDSServiceDelegate
PCSDevice
EscrowProxySyncOperation
PCSPairedSyncDelegate
PSYSyncCoordinatorDelegate
PSYInitialSyncStateObserverDelegate
PCSDeviceManager
PCSIDSMessagingDeviceManager
PCSRegistryOperation
PCSRegistryOperationPair
PCSIDSMessage
PCSIDSSyncing
PCSIDSMessagingDelegate
PCSPeerSyncing
PCSDelayedAction
DateHandling
PCSMetrics
PCSKeyClient
PCSKeySyncing
PCSSyncing
PCSSyncingProtocol
ServiceDelegate
NSXPCListenerDelegate
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
v48@0:8@16@24@32@40
v40@0:8@16@24@32
v28@0:8@16B24
v24@0:8@16
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v40@0:8@"APSConnection"16@"NSData"24@"APSAppTokenInfo"32
v40@0:8@"APSConnection"16@"APSURLToken"24@"APSURLTokenInfo"32
v40@0:8@"APSConnection"16@"NSError"24@"APSURLTokenInfo"32
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
@24@0:8@16
B24@0:8^@16
v16@0:8
@32@0:8@16@24
B40@0:8@16^{_PCSIdentityData=}24^{_PCSIdentityData=}32
@40@0:8^{_PCSIdentityData=}16@24@32
@32@0:8^{_PCSIdentityData=}16@24
B24@0:8@?16
^{_PCSIdentitySetData=}16@0:8
@24@0:8^@16
v20@0:8B16
@"UserRegistryStats"
@"NSOperationQueue"
@"PCSDelayedAction"
@"CKContainer"
@"PCSMobileBackup"
@"CKRecordZoneID"
@"PCSAccountsModel"
@"NSObject<OS_os_log>"
@"UserRegistryDB"
@"NSObject<OS_dispatch_queue>"
@"PCSRegistryOperationPair"
@"NSOperation"
@64@0:8d16@24@32@40@?48@?56
@?16@0:8
v24@0:8@?16
@"NSObject<OS_dispatch_source>"
v64@0:8@16@24@32@40@48@56
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v40@0:8@16@24@?32
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32@"IDSMessageContext"40
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v64@0:8@16@24q32d40@48@?56
v56@0:8@16@24q32d40@48
@"<PCSIDSMessagingDelegate>"
@"NSMutableDictionary"
@"IDSService"
@"NSObject<OS_os_transaction>"
@"<PCSIDSMessagingDeviceManager>"
@"NRDevice"
@"NSString"
@"NSHashTable"
v32@0:8@"PSYSyncCoordinator"16@"PSYServiceSyncSession"24
v24@0:8@"PSYSyncCoordinator"16
v32@0:8@"PSYInitialSyncStateObserver"16@"NSUUID"24
v24@0:8@"PSYInitialSyncStateObserver"16
@"PSYSyncCoordinator"
@"PSYInitialSyncStateObserver"
v24@0:8@"NSArray"16
@"<PCSDeviceManagerDelegate>"
@"PCSDevice"
@"NSError"
@"PCSRegistryOperation"
@40@0:8@16@24@32
@"NSDictionary"
@"IDSMessageContext"
v32@0:8@"PCSIDSMessage"16@"NSString"24
v32@0:8@16@?24
@"PCSIDSTransport"
@"PCSKeySyncing"
v44@0:8I16@20@28@?36
v32@0:8B16B20@?24
d24@0:8d16
d16@0:8
v36@0:8i16@20@28
i16@0:8
v20@0:8i16
@"NSData"
@"PCSKeyClient"
@40@0:8@16Q24@32
v24@0:8Q16
q16@0:8
v24@0:8q16
i24@0:8@16
v32@0:8@16^{_PCSIdentitySetData=}24
v36@0:8@16@24i32
i24@0:8^{_PCSIdentitySetData=}16
B36@0:8@16I24@28
B28@0:8@16I24
I36@0:8@16I24@28
^{sqlite3=}16@0:8
v24@0:8^{sqlite3=}16
^{sqlite3_stmt=}16@0:8
v24@0:8^{sqlite3_stmt=}16
@"NSUserDefaults"
^{sqlite3=}
^{sqlite3_stmt=}
@"NSDate"
B28@0:8@16B24
B20@0:8B16
B32@0:8@16@24
B36@0:8@16i24@28
@"NSMutableArray"
v72@0:8@16@24@32@40@48@56@?64
v36@0:8@16@24B32
v48@0:8@16@24B32B36@?40
v36@0:8B16@20@?28
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
v32@0:8@"NSDictionary"16@?<v@?@"NSDictionary"@"NSError">24
v24@0:8@?<v@?>16
v72@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40@"NSString"48@"NSString"56@?<v@?B@"PCSMTT"@"NSError">64
v36@0:8@"NSString"16@"NSDictionary"24B32
v40@0:8@"NSString"16@"NSDictionary"24@?<v@?B@"NSError">32
v48@0:8@"NSString"16@"NSString"24B32B36@?<v@?@"NSData"@"PCSMTT"@"NSError">40
v32@0:8@"NSString"16@?<v@?I>24
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v32@0:8@"NSDictionary"16@?<v@?@"NSString"@"NSData"@"NSData"@"NSArray"@"NSError">24
v32@0:8@"NSDictionary"16@?<v@?@"NSError">24
v24@0:8@?<v@?@"NSArray"@"NSError">16
v36@0:8B16@"NSString"20@?<v@?@"NSNumber"@"NSNumber"@"NSNumber"@"NSError">28
v24@0:8@?<v@?@"UserRegistryStats">16
v24@0:8@?<v@?B@"NSError">16
B32@0:8@16@?24
B32@0:8^{_PCSIdentitySetData=}16^^{__CFError}24
v64@0:8@16@24@32@40@48@?56
^{_PCSIdentitySetData=}24@0:8@16
@"PCSUserRegistry"
@"PCSIDSSyncing"
@"NSObject<OS_xpc_object>"
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>22A380007</string>
<key>CFBundleDevelopmentRegion</key>
<string>en</string>
<key>CFBundleDisplayName</key>
<string>ProtectedCloudKeySyncing</string>
<key>CFBundleExecutable</key>
<string>ProtectedCloudKeySyncing</string>
<key>CFBundleIdentifier</key>
<string>com.apple.protectedcloudstorage.protectedcloudkeysyncing</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>ProtectedCloudKeySyncing</string>
<key>CFBundleShortVersionString</key>
<string>1.0</string>
<key>CFBundleSignature</key>
<string>????</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>20E5229e</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>16.4</string>
<key>DTSDKBuild</key>
<string>20E5229e</string>
<key>DTSDKName</key>
<string>iphonesimulator16.4.internal</string>
<key>DTXcode</key>
<string>1430</string>
<key>DTXcodeBuild</key>
<string>14E6097d</string>
<key>MinimumOSVersion</key>
<string>16.4</string>
<key>NSHumanReadableCopyright</key>
<string>Copyright 
 2015 - 2016 Apple. All rights reserved.</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.protectedcloudstorage.protectedcloudkeysyncing</string>
<key>aps-connection-initiate</key>
<true/>
<key>aps-environment</key>
<string>serverPreferred</string>
<key>backupd-connection-initiate</key>
<true/>
<key>com.apple.application-identifier</key>
<string>com.apple.protectedcloudstorage.protectedcloudkeysyncing</string>
<key>com.apple.developer.aps-environment</key>
<string>serverPreferred</string>
<key>com.apple.developer.icloud-container-environment</key>
<string>Production</string>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudKit</string>
</array>
<key>com.apple.keystore.access-keychain-keys</key>
<true/>
<key>com.apple.keystore.lockassertion</key>
<true/>
<key>com.apple.nano.nanoregistry</key>
<true/>
<key>com.apple.private.MobileGestalt.AllowedProtectedKeys</key>
<string>UniqueDeviceID</string>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.appleaccount.app-hidden-from-icloud-settings</key>
<true/>
<key>com.apple.private.aps-connection-initiate</key>
<true/>
<key>com.apple.private.ckks</key>
<true/>
<key>com.apple.private.ckks.currentitempointers_read</key>
<true/>
<key>com.apple.private.ckks.currentitempointers_write</key>
<true/>
<key>com.apple.private.ckks.plaintextfields</key>
<true/>
<key>com.apple.private.cloudkit.buddyAccess</key>
<true/>
<key>com.apple.private.cloudkit.packages</key>
<true/>
<key>com.apple.private.cloudkit.spi</key>
<true/>
<key>com.apple.private.cloudkit.supportservice</key>
<true/>
<key>com.apple.private.cloudkit.systemService</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.pcskey.sync</string>
</array>
<key>com.apple.private.octagon</key>
<true/>
<key>com.apple.private.octagon.walrus</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceLiverpool</string>
</array>
<key>com.apple.securebackupd.access</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>com.apple.ProtectedCloudStorage.KTAccountKey</string>
<string>com.apple.ProtectedCloudStorage.backup</string>
<string>com.apple.ProtectedCloudStorage</string>
<string>com.apple.ProtectedCloudStorage.groupkit.groupaccesskeys</string>
</array>
<key>keychain-cloud-circle</key>
<true/>
</dict>
</plist>
application-identifier8com.apple.protectedcloudstorage.protectedcloudkeysyncing0
aps-connection-initiate
aps-environment
serverPreferred0 
backupd-connection-initiate
0\ com.apple.application-identifier8com.apple.protectedcloudstorage.protectedcloudkeysyncing06#com.apple.developer.aps-environment
serverPreferred0>0com.apple.developer.icloud-container-environment
Production01#com.apple.developer.icloud-services0
CloudKit0,'com.apple.keystore.access-keychain-keys
0% com.apple.keystore.lockassertion
com.apple.nano.nanoregistry
0F4com.apple.private.MobileGestalt.AllowedProtectedKeys
UniqueDeviceID0+&com.apple.private.accounts.allaccounts
0C>com.apple.private.appleaccount.app-hidden-from-icloud-settings
0.)com.apple.private.aps-connection-initiate
com.apple.private.ckks
04/com.apple.private.ckks.currentitempointers_read
050com.apple.private.ckks.currentitempointers_write
0+&com.apple.private.ckks.plaintextfields
0+&com.apple.private.cloudkit.buddyAccess
0(#com.apple.private.cloudkit.packages
com.apple.private.cloudkit.spi
0.)com.apple.private.cloudkit.supportservice
0-(com.apple.private.cloudkit.systemService
com.apple.private.ids.messaging0%#com.apple.private.alloy.pcskey.sync0
com.apple.private.octagon
0% com.apple.private.octagon.walrus
com.apple.private.tcc.allow0
kTCCServiceLiverpool0#
com.apple.securebackupd.access
keychain-access-groups0
,com.apple.ProtectedCloudStorage.KTAccountKey&com.apple.ProtectedCloudStorage.backup
com.apple.ProtectedCloudStorage8com.apple.ProtectedCloudStorage.groupkit.groupaccesskeys0
keychain-cloud-circle
