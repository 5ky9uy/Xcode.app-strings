@(#)PROGRAM:SiriUIActivation  PROJECT:AssistantUI-1
%s #orbView Creating temporary orbView for prewarming
%s #activation  _prewarmSiriVideoFlowDelegatePlugin
%s #activation _prewarmSiriVideoFlowDelegatePlugin successful
%s #activation _prewarmSiriVideoFlowDelegatePlugin failed with error: %@
%s %@
%s #activation Should start Dictation - %@
%s #activation sending command to warm up VideoFlowDelegatePlugin
%s #activation #locks #noisy _dictationInProgressLock about to lock with qos: %ld
%s #activation #locks #noisy _dictationInProgressLock successfully locked
%s #activation #locks #noisy _dictationInProgressLock unlocked
%s #activation #locks #noisy strongSelf->_dictationInProgressLock about to lock with qos: %ld
%s #activation #locks #noisy strongSelf->_dictationInProgressLock successfully locked
%s #activation Forwarded Dictation Start Event to BackBoard
%s #activation #locks #noisy strongSelf->_dictationInProgressLock unlocked
%s #activation Forwarding Dictation stop event to BackBoard
%s #activation Keyboard Ready to Start Dictation
%s #activation Scene Activated & ready to start dictation
%s #activation Launch time (button.down - listening): %@
%s #activation Triggering ABC for launch time >= 2.5 seconds
%s #compact: Telling SpringBoard that the Home Gesture is %@ with Siri
%s SiriPresentationViewController connection invalidated
%s SiriPresentationViewController connection interrupted. Reactivating...
%s #pingpong received ping
%s #pingpong on main thread
%s #activation presentationRequestedWithPresentationOptions:%@ requestOptions:%@
%s #activation Setting screen off during activation: %{BOOL}i
%s #activation showing setup view controller
%s #activation presenting Siri view controller
%s #myriadUI Wake Screen was requested when _wasScreenOffDuringActivation was %@ and _shouldDeferOSiriActWake was %@
%s #myriadUI Asking presentationControllerDelegate to wake screen
%s #SiriPocketStateManager: Tried to turn the screen on but it wasn't kept off at activation.
%s #myriadUI Device won myriad Election, hiding VoiceActivationMAskView
%s #myriadUI Pocket determined should cancel screen wake - %@
%s PresentationViewController created without specifying a presentation frame, falling back to %@
%s #activation Not requesting presentation for %@, handling request directly
%s #activation #locks #noisy self->_presentationStateProcessingLock about to lock with qos: %ld
%s #activation #locks #noisy self->_presentationStateProcessingLock successfully locked
%s #activation #locks #noisy self->_presentationStateProcessingLock unlocked
%s #myriadUI Waking screen
%s #activation Device is locked during handoff; presenting passcode unlock screen.
%s #activation Device is now unlocked; proceeding with the handoff request.
%s #activation Device unlock aborted with result = %ld
%s #activation #locks #noisy strongSelf->_presentationStateProcessingLock about to lock with qos: %ld
%s #activation #locks #noisy strongSelf->_presentationStateProcessingLock successfully locked
%s #activation #locks #noisy strongSelf->_presentationStateProcessingLock unlocked
%s #activation There was a pending dismissal when Siri tried to present. Rejecting presentation
%s #activation creating new AFUISiriViewController
%s #activation reusing AFUISiriViewController. This is currently not supported!
%s #activation Device not unlocked since boot; presenting passcode unlock screen
%s #activation Device is now unlocked; proceeding with the request.
%s #activation unknown presentationIdentifier %@
%s #activation: Returning SiriUIViewMode:%@
%s #punchout Activating while _delaySessionEndForTTS is still set from prior request. Resetting to NO.
%s #activation #locks #noisy _presentationStateProcessingLock about to lock with qos: %ld
%s #activation #locks #noisy _presentationStateProcessingLock successfully locked
%s #activation #locks #noisy _presentationStateProcessingLock unlocked
%s #activation requesting presentation for new request.
%s #activation ignoring starting a new request.
%s #activation %@
%s #activation isDismissing:YES
%s #activation presentation dismissal requested while another dismissal in progress
%s #activation options:%@ _isDelayingSessionEnd:%@
%s #activation #noisy delaying session end, did not send willDismiss before dismissal
%s #cancellationReason: Passing through cancellationReason
%s #activation handler for siriPresentation:requestsDismissalWithOptions:WithHandler:
%s #activation #noisy delaying session end, did not send didDismiss on dismissal
%s #activation #locks #noisy innerStrongSelf->_presentationStateProcessingLock about to lock with qos: %ld
%s #activation #locks #noisy innerStrongSelf->_presentationStateProcessingLock successfully locked
%s #myriadUI Resetting shouldDeferWake - %@
%s #activation handler for siriPresentation:requestsDismissalWithOptions:WithHandler: returned success:%@ error:%@. Aborting dismissal and calling resetSiriToActive to reset state.
%s #activation isDismissing:NO
%s #activation #locks #noisy innerStrongSelf->_presentationStateProcessingLock unlocked
%s #activation #myriadUI : Animating Orb before requesting dismissal
%s #activation _unownedConnection: %@ , siriViewControllerConfigured: %@
%s #activation created new _unownedConnection: %@
%s #activation Activation service requests preheat
%s #activation preheated _unownedConnection: %@
%s #activation Cancel preheat
%s handleButtonDownFromButtonIdentifier:%@ timestamp:%@
%s #activation button pressed, but AFUISiriViewController is not set up, returning early.
%s #activation Started Car Siri button long press timer (%@) for %f seconds
%s handleButtonUpFromButtonIdentifier:%@ deviceIdentifier:%@ timestamp:%@
%s Stopping request due to wired mic tap
%s #activation handleButtonTapFromButtonIdentifier:%@
%s #activation handled for %@
%s #activation #punchout Received button event while _delaySessionEndForTTS = YES. Dismissing Siri with SASDismissalReasonButtonEventWhileDelaySessionEndForTTS
%s #activation handleButtonLongPressFromIdentifier:%@ whileListening:NO Starting a new request
%s #activation handleButtonLongPressFromIdentifier:%@ whileListening:YES Ignoring
%s #activation _handleTapButtonBehavior:%@
%s Turning on the screen because pocket state kept the screen off during activation
%s Dismissing Siri setup due to button tap
%s Dismissing Siri due to button tap
%s #punchout resetting _delaySessionEndForTTS because we were requested to dismiss.
%s Not handled: _activationHandled=%d [_siriViewController isVisible]=%d
%s #activation Lock state in SiriPresentationViewController updated to %zd
%s wantsDismissal
%s #activation Starting new Speech Request due to Car Siri button long press timer
%s cancelPendingActivationEventWithReason:%@
%s cancelReason=%@
%s #activation tried to cancel pending activation but it already finished.
%s #PhoneCallAudioSessionHandler Extending audio session for imminent phone call. Setting _waitingForTelephonyToStart:YES
%s #PhoneCallAudioSessionHandler stop extending audio session while visible: %@
%s #activation Attempting to use siriViewController, but one does not exist. Backtrace: %@
%s #activation Creating new view controller with connection: %@, configuration: %@, requestSource: %@
%s #activation #carPlay #carDnd #eyesFree isForStark: %@, carDNDStatus: %@, eyesFree: %@
%s #activation delay: %@
%s #activation
%s #activation _unownedConnection: %@
%s #activation _clearSiriViewController
%s #activation calling didDismiss from inside clearSiriViewControllerTimer
%s #activation _finishClearingSiriViewController
%s #activation clearSiriViewControllerTimer was invalidated
%s Attempting to enable the SpringBoard idle timer because we are losing the SiriViewController
%s #activation Invalidating _carSiriButtonHoldToTalkTimer (%@)
%s Triggerless request, dont clear Siri context
%s Attempting to enable the SpringBoard idle timer because we are losing the setupViewController
%s _buttonTrigger=%@
%s Siri enabled SpringBoard idle timer
%s #activation Siri encountered an unexpected error; dismissing Siri: %{public}@
%s Reporting Automatic Bug Capture of type - %@
%s #activation siriViewControllerDidFinishDismissing: %@
%s #punchout #activation %@ %@
%s #punchout Resetting _delaySessionEndForTTS=NO. TTS finished speaking, proceeding to dismiss
%s #punchout shouldEnd:%@ waitingForTelephonyToStart:%i delaySessionEndForTTS:%i
%s #myriadUI Setting wasScreenOffDuringActivation to %@
%s #punchout 2 bundleId:%@ inPlace:%@ url:%@
%s #punchout 3 %@ %@
%s #punchout 4 succeeded, extending our UI for TTS. Deactivating the scene.
%s #Compact: Not showing Home Affordance as we are showing voiceActivationMask, Returning
%s #Compact: Telling SpringBoard that the Siri Home affordance state is %@
%s #activation siriPresentationControllerDelegate called
%s #punchout Resetting _delaySessionEndForTTS to NO because Siri was requested to present.
%s #activation dismissal requested %@
%s Speech request was started from Siri orb button press %@
%s Speech request was cancelled from Siri orb button press %@
%s Checking for guide updates
%s #PhoneCallAudioSessionHandler we are waiting for telephony to start, so cancelling pending phone call
%s #PhoneCallAudioSessionHandler setting _waitingForTelephonyToStart:%@
%s #PhoneCallAudioSessionHandler requesting dismissal
%s #PhoneCallAudioSessionHandler Setting %@ second audio session extension timer, if the timer fires, we'll stop extending the audio session
%s #PhoneCallAudioSessionHandler %@ posted: ending audio session
%s #activation Requesting dismissal for outgoing phone call
%s #activation Siri supported but not enabled, presenting an AFUISiriSetupViewController
%s #activation _removeSetupViewControllerIfNecessary
%s #activation #myriadUI - Trying to start animation dismissal timer when one already exists
%s #activation #myriadUI - Animation did not call completion, watchdogTimer cleaning up & continuing with dismissal
%s #activation #myriadUI - Starting animation dismissal watchdog timer for %f seconds
%s #activation #myriadUI - Animation dismissal watchdog timer request stopping
%s #activation #myriadUI - Animation dismissal watchdog timer request stopping, but not needed
%s #pingpong
%s #pingpong sending pong and waiting for ping - connection: %@ | remoteTarget: %@
%s #pingpong tried to send pong but _shouldKeepPonging == NO
%s #pingpong timed out waiting for ping
%s #activation updating presentation state from %@ to %@
-[SiriPresentationViewController(SUIC) prewarmOrbViewShaders]
v8@?0
IsSimulator
com.apple.siri.VideoFlowDelegatePlugin
-[SiriPresentationPineBoardMainScreenViewController _prewarmSiriVideoFlowDelegatePlugin]
v20@?0B8@"NSError"12
-[SiriPresentationPineBoardMainScreenViewController _prewarmSiriVideoFlowDelegatePlugin]_block_invoke
-[SiriPresentationPineBoardMainScreenViewController siriViewController:willStartRequestWithOptions:]
-[SiriPresentationPineBoardMainScreenViewController siriViewController:willStartRequestWithOptions:]_block_invoke
-[SiriPresentationPineBoardMainScreenViewController siriViewController:didReceiveButtonUpWithRequestOptions:]
-[SiriPresentationPineBoardMainScreenViewController siriViewControllerDidPresentKeyboard:]
-[SiriPresentationPineBoardMainScreenViewController siriViewController:sceneDidActivateWithIdentifier:]
-[SiriPresentationPineBoardMainScreenViewController siriViewControllerDidChangeToListeningMode:]
tvos_launch_performance
tvos_long_launch_time
-[SiriPresentationPineBoardMainScreenViewController setNextVoiceRecognitionAudioInputPaths:]
-[SiriPresentationPineBoardMainScreenViewController setNextAssistantRecognitionStrings:]
-[SiriPresentationPineBoardMainScreenViewController _getValueForShouldRequestDictation]
SiriUI
persistent_phone
v16@?0q8
-[SiriPresentationSpringBoardMainScreenViewController setShareHomeGesture:]_block_invoke
shared
not shared
v12@?0B8
com.apple.siri.activation
com.apple.siri.EyesFree
com.apple.siri.Compact
com.apple.siri.Siriland
com.apple.siri.CarDisplay
com.apple.siri.CarDisplay.UIFree
com.apple.siri.UIFree
com.apple.siri.SiriTVPresentation
telemergency
telemergencycall
NumberOfTimesSetupSiriShown
com.apple.LaunchServices.applicationRegistered
com.apple.LaunchServices.applicationUnregistered
-[SiriPresentationViewController initWithIdentifier:hostedPresentationFrame:]_block_invoke_2
v16@?0@"BSServiceConnection"8
-[SiriPresentationViewController initWithIdentifier:hostedPresentationFrame:]_block_invoke
v16@?0@"<BSServiceConnectionConfiguring>"8
Animation Dismissal watchdog queue
-[SiriPresentationViewController ping]
-[SiriPresentationViewController ping]_block_invoke
reason
Presentation rejected activation without error
-[SiriPresentationViewController _presentationRequestedWithPresentationOptions:requestOptions:]
-[SiriPresentationViewController wakeScreenAfterActivationWithReason:]
-[SiriPresentationViewController deviceWonMyriadElection]
-[SiriPresentationViewController activationDeterminedShouldDeferWake:]
-[SiriPresentationViewController _updateHostedPresentationFrame]
-[SiriPresentationViewController _presentSiriViewControllerWithPresentationOptions:requestOptions:]
-[SiriPresentationViewController _presentSiriViewControllerWithPresentationOptions:requestOptions:]_block_invoke_2
MyriadUI
-[SiriPresentationViewController _presentSiriViewControllerWithPresentationOptions:requestOptions:]_block_invoke
-[SiriPresentationViewController _requestPresentationWithOptions:completion:]
-[SiriPresentationViewController _requestPresentationWithOptions:completion:]_block_invoke
-[SiriPresentationViewController _shouldProceedPresentingSiriViewController]
-[SiriPresentationViewController _prepareSiriViewControllerWithRequestOptions:]
Reusing AFUISiriViewController is currently unsupported.
If this call is necessary, use siriViewControllerConfigured to check if it is ready to use
-[SiriPresentationViewController _presentationRequestedHandlerWithRequestOptions:]
-[SiriPresentationViewController _presentationRequestedHandlerWithRequestOptions:]_block_invoke
-[SiriPresentationViewController _viewModeForRequestOptions:]
-[SiriPresentationViewController activateWithSource:requestOptions:timestamp:]
-[SiriPresentationViewController _startRequestWithOptions:]
-[SiriPresentationViewController _presentationDismissalRequestedWithOptions:withCompletion:]
#activation dismissal reason: %@
-[SiriPresentationViewController _presentationDismissalRequestedWithOptions:withCompletion:]_block_invoke_2
-[SiriPresentationViewController _presentationDismissalRequestedWithOptions:withCompletion:]_block_invoke
-[SiriPresentationViewController _setUpUnownedConnectionIfNecessary]
-[SiriPresentationViewController preheat]
-[SiriPresentationViewController preheat]_block_invoke
-[SiriPresentationViewController cancelPreheat]
-[SiriPresentationViewController handleButtonDownFromButtonIdentifier:timestamp:]
-[SiriPresentationViewController handleButtonDownFromButtonIdentifier:timestamp:]_block_invoke
v16@?0@"NSTimer"8
-[SiriPresentationViewController handleButtonUpFromButtonIdentifier:deviceIdentifier:timestamp:]
-[SiriPresentationViewController handleButtonUpFromButtonIdentifier:deviceIdentifier:timestamp:]_block_invoke
-[SiriPresentationViewController handleButtonTapFromButtonIdentifier:]
eventSource
-[SiriPresentationViewController handleButtonTapFromButtonIdentifier:]_block_invoke
-[SiriPresentationViewController handleButtonLongPressFromButtonIdentifier:deviceIdentifier:timestamp:]_block_invoke
-[SiriPresentationViewController _handleTapButtonBehavior:]
PocketStateFetch
-[SiriPresentationViewController _handleTapDismissal:]
-[SiriPresentationViewController setCurrentLockState:]
-[SiriPresentationViewController _requestDismissalWithOptions:]
-[SiriPresentationViewController _carSiriButtonHoldToTalkIntervalFiredWithButtonIdentifier:]
-[SiriPresentationViewController cancelPendingActivationEventWithReason:]
-[SiriPresentationViewController _cancelPendingActivationWithReason:]
cancelReason
-[SiriPresentationViewController siriSessionShouldExtendAudioSessionForImminentPhoneCall]
-[SiriPresentationViewController siriSessionShouldEndExtendAudioSessionForImminentPhoneCall]
-[SiriPresentationViewController siriViewController]
-[SiriPresentationViewController _createSiriViewControllerWithRequestOptions:]
-[SiriPresentationViewController _scheduleConnectionHouseKeepingAfterDelay:]
-[SiriPresentationViewController _processConnectionHouseKeeping]
-[SiriPresentationViewController _cleanupUnownedConnection]
-[SiriPresentationViewController _clearSiriViewControllerWithCompletion:]_block_invoke
-[SiriPresentationViewController _finishClearingSiriViewController:]
-[SiriPresentationViewController _invalidateCarSiriButtonHoldToTalkTimer]
-[SiriPresentationViewController _handleContextClearForRequestOptions:]
-[SiriPresentationViewController _wasDismissedWithCompletion:]
-[SiriPresentationViewController _releaseExistingTrigger]
-[SiriPresentationViewController _enableSpringBoardIdleTimer]
-[SiriPresentationViewController _dismissDueToUnexpectedError:]
-[SiriPresentationViewController _logSignatureWithType:subType:context:]
-[SiriPresentationViewController siriViewControllerDidFinishDismissing:]
-[SiriPresentationViewController dismissSiriViewController:withReason:]
-[SiriPresentationViewController siriViewControllerShouldEndSession:]
-[SiriPresentationViewController _setScreenOffDuringActivation:]
-[SiriPresentationViewController openURL:bundleId:inPlace:completion:]
v24@?0@"LSAppLink"8@"NSError"16
-[SiriPresentationViewController _punchout:completion:]_block_invoke_2
Completed
-[SiriPresentationViewController _punchout:completion:]_block_invoke
type_to_compact_siri
-[SiriPresentationViewController _requestHomeAffordanceSuppression:]
-[SiriPresentationViewController siriViewController:requestsPresentation:]
-[SiriPresentationViewController siriViewController:requestsDismissalWithReason:withCompletion:]
-[SiriPresentationViewController bulletinsForSiriViewController:]
-[SiriPresentationViewController siriViewControllerSpeechRequestStartedFromSiriOrb]
-[SiriPresentationViewController siriViewControllerSpeechRequestCancelledFromSiriOrb]
-[SiriPresentationViewController _checkForGuideUpdatesIfNecessary]
-[SiriPresentationViewController _cancelPendingPhoneCall]
-[SiriPresentationViewController _setWaitingForTelephonyToStart:]
-[SiriPresentationViewController _sendTelephonyHasStartedAfterDelay:]
-[SiriPresentationViewController _callIsActiveDidChangeNotification:]
-[SiriPresentationViewController callStateChangedToIsActive:isOutgoing:]
-[SiriPresentationViewController _showSetupViewControllerIfNecessary]
-[SiriPresentationViewController _removeSetupViewControllerIfNecessary]
-[SiriPresentationViewController _watchdogQueue_startAnimationDismissalWatchdogTimerWithTimeoutHandler:shouldTurnScreenOff:]
-[SiriPresentationViewController _watchdogQueue_startAnimationDismissalWatchdogTimerWithTimeoutHandler:shouldTurnScreenOff:]_block_invoke
AnimationDismissalWatchdogTimerFired
-[SiriPresentationViewController _watchdogQueue_stopAnimationDismissalWatchdogTimerIfNeededThen:onQueue:]
-[SiriPresentationViewController _setupPongTimer]
-[SiriPresentationViewController _setupPongTimer]_block_invoke
-[SiriPresentationViewController _waitForPing]
-[SiriPresentationViewController _waitForPing]_block_invoke
SiriPresentationViewController expected ping from SiriActivationService but timed out.
-[SiriPresentationViewController _teardownPongTimer]
-[SiriPresentationViewController _teardownPongTimer]_block_invoke
-[SiriPresentationViewController setPresentationState:]
com.apple.siri.SASHIDGenerator
keepPreviousConversation
Audio Injection Enabled
com.apple.voicetrigger
Audio Injection File Path
JwLB44/jEB8aFDpXQ16Tuw
-[SASGuideMonitor checkForGuideUpdatesIfNecessary]
SUIC
SiriPresentationPineBoardMainScreenViewControllerDelegate
SiriPresentationControllerDelegate
NSObject
SiriPresentationPineBoardMainScreenViewController
SiriPresentationSpringBoardMainScreenViewController
SiriPresentationSpringBoardMainScreenViewControllerDelegate
SiriPresentationViewController
SASStateChangeListener
AFUISiriLanguageDelegate
AFUISiriViewControllerDelegate
AFUISiriViewControllerDataSource
AFUISiriSetupViewControllerDelegate
SiriPresentation
BSInvalidatable
SASHIDGenerator
Testing
SASGuideMonitor
CarPlay
initWithFrame:
begin
prewarmOrb
invalidate
commit
prewarmOrbViewShaders
preferredFlamesViewFidelity
initWithIdentifier:hostedPresentationFrame:
_prewarmFlamesWithPresentationFrame:
initWithBundleIdentifier:
UUID
UUIDString
setAceId:
handleCommand:commandHandler:completion:
siriPresentationControllerDelegate
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
siriPresentation:requestsPresentationWithOptions:withHandler:
siriPresentation:requestsDismissalWithOptions:withHandler:
siriPresentation:isEnabledDidChange:
siriPresentation:setShowsHomeAffordance:
siriPresentation:setHomeAffordanceSuppression:
siriPresentation:requestsPunchout:withHandler:
siriPresentation:didChangePresentationPeekMode:
siriPresentation:sceneDidActivateWithIdentifier:
siriPresentationDidDeactivateScene:
setUseAutomaticEndpointing:
setUseStreamingDictation:
setReleaseAudioSessionOnRecordingCompletion:
_updateRequestOptionsWithTestingInput:
activationDeviceIdentifier
currentThread
qualityOfService
inputType
isShortButtonPressAction
requestSource
length
_prewarmSiriVideoFlowDelegatePlugin
isInitialBringUp
longLongValue
_forwardHIDButtonEventWithUsagePage:usage:type:senderID:
_buttonDownTimestamp
numberWithDouble:
_thresholdForTriggeringABCInLaunch
_logSignatureWithType:subType:context:
_clearAllTestingInputs
countByEnumeratingWithState:objects:count:
fileURLWithPath:
setType:
setRecordedSpeechURL:
_enqueueTestInput:
setText:
keyboardFocusEnvironment
_shouldShowSetupViewController
siriViewController:didChangePresentationPeekMode:
siriViewController:willStartRequestWithOptions:
siriViewController:didReceiveButtonUpWithRequestOptions:
siriViewControllerDidPresentKeyboard:
siriViewController:sceneDidActivateWithIdentifier:
siriViewControllerDidDeactivateScene:
siriViewControllerDidChangeToListeningMode:
setNextVoiceRecognitionAudioInputPaths:
setNextAssistantRecognitionStrings:
_getValueForShouldRequestDictation
_setButtonDownTimestamp:
clientLite
setClientLite:
.cxx_destruct
_requestDictationFromSiriGroup
_dictationInProgressLock
_didRequestDictationStart
_shouldListenForSceneActivation
_shouldRequestDictation
_clientLite
buttonDownTimestamp
Td,N,G_buttonDownTimestamp,S_setButtonDownTimestamp:,V_buttonDownTimestamp
T@"AFClientLite",&,N,V_clientLite
T@"<SiriPresentationPineBoardMainScreenViewControllerDelegate>",W,D,N
init
resetGestureBehaviors
setShouldDismissForTapOutsideContent:
setShouldDismissForTapsOutsideContent:
setShouldDismissForSwipesOutsideContent:
setShouldPassTouchesThroughToSpringBoard:
setShareHomeGesture:
setOpaque:
setView:
siriViewController
handlePasscodeUnlockWithCompletion:
requestStatusBarVisible:animated:completion:
setFluidDismissalState:
siriPresentation:didUpdateShouldDismissForTapOutsideContentTo:
siriPresentation:didUpdateShouldDismissForTapsOutsideContent:
siriPresentation:didUpdateShouldDismissForSwipesOutsideContent:
siriPresentation:didUpdateShouldPassTouchesThroughToSpringBoard:
siriPresentation:didUpdateHomeGestureSharing:
hasContentAtPoint:completion:
showAppsBehindSiri
view
convertRect:toView:
setDockFrame:
sharedPreferences
alwaysObscureBackgroundContentWhenActive
initWithIdentifier:
loadView
requestPasscodeUnlockWithCompletion:
setShowsStatusBar:
shouldDismissForTapOutsideContent
shouldDismissForTapsOutsideContent
updateHomeGestureSharingForSiriSetup:
_canShowWhileLocked
tapsOutsideContentDismissAssistant
shouldPassTapsThrough
shouldPassTouchesThroughToSpringBoard
shouldDismissForSwipesOutsideContent
shareHomeGesture
_shouldDismissForTapOutsideContent
_shouldDismissForTapsOutsideContent
_tapsOutsideContentDismissAssistant
_shouldPassTapsThrough
_shouldPassTouchesThroughToSpringBoard
_shouldDismissForSwipesOutsideContent
_shareHomeGesture
T@"<SiriPresentationSpringBoardMainScreenViewControllerDelegate>",W,D,N
TB,R,N,V_tapsOutsideContentDismissAssistant
TB,R,N,V_shouldPassTapsThrough
TB,R,N,V_shouldPassTouchesThroughToSpringBoard
TB,R,N,V_shouldDismissForSwipesOutsideContent
TB,R,N,V_shareHomeGesture
initWithDelegate:
_updateLanguageCode
setHostedPresentationFrame:
setLock:
date
_setShouldDeferWake:
sharedSystemState
addStateChangeListener:
configuration
machServiceIdentifier
identifierForService:
endpointForMachName:service:instance:
connectionWithEndpoint:
setConnection:
connection
serviceQuality
setServiceQuality:
interface
setInterface:
setInterfaceTarget:
remoteTarget
identifier
initWithSiriPresentationIdentifier:
unregisterPresentationIdentifier:
setInvalidationHandler:
activate
setInterruptionHandler:
registerPresentationIdentifier:
setActivationHandler:
configureConnection:
userContext
keyPathForSiriActiveStatus
setObject:forKeyedSubscript:
_invalidateCarSiriButtonHoldToTalkTimer
removeStateChangeListener:
dealloc
siriViewControllerConfigured
initWithDeactivationOptions:animated:
dismissWithOptions:
presentationDismissalRequestedWithOptions:
siriIsSupported
siriIsEnabled
_requestHomeAffordanceSuppression:
animatedAppearanceWithFactory:completion:
animatedDisappearanceWithFactory:completion:
_setupPongTimer
_shouldProceedPresentingSiriViewController
_presentationRequestedWithPresentationOptions:requestOptions:
initWithDomain:code:userInfo:
failedToPresentSiriWithError:
wakeScreen
_setScreenOffDuringActivation:
currentLockState
setCurrentLockState:
_processIncomingRequestOptionsForTestingPayload:
_showSetupViewControllerIfNecessary
_removeSetupViewControllerIfNecessary
_presentSiriViewControllerWithPresentationOptions:requestOptions:
assistantIsEnabled
_wasScreenOffDuringActivation
screenWakeRequested
screenWakeIdleTimerResetRequested
siriPresentation:requestsDeviceUnlockWithPassword:
siriPresentation:didUpdateAudioCategoriesDisablingVolumeHUD:
_analytics
dictionaryWithObjects:forKeys:count:
logEventWithType:context:
hideVoiceActivationMaskViewIfNecessary
boolValue
_fallbackScreenForIdentifier:
hostedPresentationFrame
_fallbackFrameForScreen:withIdentifier:
_prepareSiriViewControllerWithRequestOptions:
_shouldAvoidPresentation:
uiPresentationIdentifier
setPresentationState:
_updateAnnouncementRequestsPermittedWhilePresentationActive:
_showPresentationAndActivateWithRequestOptions:
_presentationRequestedHandlerWithRequestOptions:
wakeScreenAfterActivationWithReason:
_requestPresentationWithOptions:completion:
requestInfo
requiresUserInteraction
initWithDeactivationOptions:animated:dismissalReason:
showPasscodeUnlockScreenForRequest:unlockCompletion:
setAnnouncementRequestsPermittedWhilePresentationActive:
numberWithInteger:
setObject:forKey:
activationEvent
_createPresentationPropertiesWithRequestOptions:
showPresentationWithIdentifier:properties:lockState:
activateWithRequestOptions:
isForUIFree
isForEyesFree
_updateHostedPresentationFrame
_createSiriViewControllerWithRequestOptions:
addChildViewController:
setFrame:
addSubview:
didMoveToParentViewController:
errorWithDomain:code:userInfo:
_dismissDueToUnexpectedError:
contextAppInfosForSiriViewController
setContextAppInfosForSiriViewController:
_handleContextClearForRequestOptions:
siriWillActivateFromSource:
isForStark
setStatusBarEnabled:
didPresentSiri
siriDidActivateFromSource:
availabilityState
presentRemoteViewControllerIfNecessary
initWithRequestSource:
activateWithSource:requestOptions:timestamp:
isEqualToString:
_uiPresentationIdentifier
initWithRequestSource:uiPresentationIdentifier:
_releaseExistingTrigger
_setButtonDownEventDidOccur:
initWithRequestOptions:updateHandle:
timeInterval
setTimestamp:
shortTapActionWithRequestOptions:
startRequestWithActivationTrigger:
_startRequestWithOptions:
currentRequestOptions
_shouldRequestPresentationForState:forNewRequest:currentRequest:
_shouldHandleNewRequestWithOptions:currentRequest:
isRequestForAnnounceNotification:
isRequestForMessageReadBannerTap:
emitInstrumentationEvent:
startRequestWithOptions:
shouldPresentForNewRequest:duringCurrentRequest:
shouldStartNewRequest:duringCurrentRequest:
isRemotePresentationBringUp
bounds
_carScreen
mainScreen
_updateDismissalOptionsIfNecessary:
_presentationDismissalRequestedWithOptions:withCompletion:
dismissalReason
deactivationOptions
animated
reason
initWithDeactivationOptions:animated:requestCancellationReason:dismissalReason:shouldTurnScreenOff:
presentationState
_isDelayingSessionEnd
willDismiss
setSiriRequestCancellationReason:
_instrumentSuccessfulAppLaunchIfNecessary
viewMode
_dismissalReasonForDismissalWithOptions:
_logDismissalRequestedForViewMode:withDismissalReason:
stringWithFormat:
siriWillBeginTearDownForDismissalReason:
didDismiss
_teardownPongTimer
_wasDismissedWithCompletion:
numberWithBool:
resetSiriToActive
currentViewMode
shouldTurnScreenOff
startAnimationDismissalWatchdogTimerWithTimeoutHandler:shouldTurnScreenOff:
stopAnimationDimissalWatchdogTimerIfNeededThen:onQueue:
animateOrbViewDismissalIfNecessaryWithCompletion:
_scheduleConnectionHouseKeepingAfterDelay:
_setUpUnownedConnectionIfNecessary
preheatWithStyle:
_cleanupUnownedConnection
siriButtonIdentifier
_cancelPendingPhoneCall
requestSourceForButtonIdentifier:
activateWithSource:timestamp:
isVisible
isListening
clearSiriViewControllerTimer
_setCarSiriButtonTimeInterval:
_carSiriButtonHoldToTalkIntervalFiredWithButtonIdentifier:
scheduledTimerWithTimeInterval:repeats:block:
_setCarSiriButtonHoldToTalkTimer:
_carSiriButtonHoldToTalkTimer
_buttonIdentifierIsHoldToTalkTrigger:
setActivationDeviceIdentifier:
stopRequestWithOptions:
didReceiveButtonUpWithRequestOptions:
stringWithSiriButtonIdentifier:
sharedAnalytics
logEvent:
_handleTapButtonBehavior:
siriViewController:requestsDismissalWithReason:withCompletion:
_handleTapDismissal:
_dismissSiriSetup
_requestDismissalWithOptions:
SiriUILockState
setLockState:
_carSiriButtonTimeInterval
cancelReason
_cancelPendingActivationWithReason:
stringWithSiriPresentationActivationCancelReason:
_requestDismissal
setAlertContext
_setWaitingForTelephonyToStart:
_telephonyHasStarted
cancelPreviousPerformRequestsWithTarget:selector:object:
callStackSymbols
_viewModeForRequestOptions:
_shouldAllowResizingBetweenModesForViewMode:
initWithFlamesViewFidelity:isSystemHostedPresentation:allowResizingBetweenModes:siriViewMode:
initWithConnection:configuration:requestSource:
setDataSource:
setDelegate:
setEyesFree:
setDeviceInStarkMode:
isForCarDND
setCarDNDActive:
directActionEvent
setDirectActionEvent:
carDNDStatus
_processConnectionHouseKeeping
performSelector:withObject:afterDelay:
cancelRequest
endSession
setSpeechDelegate:
_finishClearingSiriViewController:
setClearSiriViewControllerTimer:
siriDidDeactivate
underlyingConnection
willMoveToParentViewController:
removeFromSuperview
removeFromParentViewController
setSiriViewController:
isMainThread
_enableSpringBoardIdleTimer
resetContextTypes:
setSiriSetupNavigationController:
setSiriSetupViewController:
dismissViewControllerAnimated:completion:
_checkForGuideUpdatesIfNecessary
_siriView
setMode:
cancelSpeechRecordingIfNecessary
_clearSiriViewControllerWithCompletion:
_startGuidedAccessOnDismissal
_setStartGuidedAccessOnDismissal:
presentationHostedInSpringBoard
_setSpringBoardIdleTimerDisabled:
_emitInstrumentationDismissalStateWithReason:
setAppID:
emitUIStateTransitionForSiriDismissalWithReason:
_resetStateForInstrumentation
_impliedDismissalReasonFromState
sharedInstance
processInfo
processIdentifier
reportIssueForType:subType:context:processIdentifier:walkboutStatus:
requestCompletionOptions
_hasTestingInput
_dequeueTestingInput
type
text
recordedSpeechURL
setSpeechFileURL:
defaultBrowserBundleIdentifier
setPunchoutStyle:
setBundleIdentifier:
_punchout:completion:
targetApplicationProxy
bundleIdentifier
setUrl:
getAppLinkWithURL:completionHandler:
punchoutStyle
localizedDescription
deactivateSceneForExtendingTTSInBackground
telephonyRequestCompleted
stringWithSiriHomeAffordanceSuppression:
carDNDActive
currentSource
setVoiceRequestMadeWhileInCarDND:
intentUsageDelegate
activeIntentWithBundleId:
array
lockStateMonitor
lockState
bulletinsOnLockScreen
allBulletins
isRead
addObject:
speechRequestStartedFromSiriOrb
speechRequestCancelledFromSiriOrb
_setVoiceActivationMaskShown:
bulletinForIdentifier:
currentCarPlaySupportedOEMAppIdList
starkAppBundleIdentifierContext
safeAreaInsets
additionalSafeAreaInsets
dateByAddingTimeInterval:
compare:
sharedManager
cachedGuideSnippet
shouldCheckForUpdateWithLastAppUpdateTime:
checkGuideUpdate
_isWaitingForTelephonyToStart
setWaitingForTelephonyToStart:
defaultCenter
sharedAVSystemController
arrayWithObjects:count:
setAttribute:forKey:error:
_callIsActiveDidChangeNotification:
addObserver:selector:name:object:
_sendTelephonyHasStartedAfterDelay:
removeObserver:name:object:
setReceivedIncomingPhoneCall:
initWithRootViewController:
presentationController
setModalPresentationStyle:
initWithSuiteName:
integerForKey:
setLastTimeShown:
setInteger:forKey:
synchronize
siriSetupNavigationController
presentViewController:animated:completion:
_setupSiriViewControllerPresentedSuccessHandler
siriViewController:requestsPresentation:
openURL:bundleId:inPlace:completion:
presentationRequestedWithPresentationOptions:requestOptions:
setBackdropVisible:
_fullSiriView
_watchdogQueue_startAnimationDismissalWatchdogTimerWithTimeoutHandler:shouldTurnScreenOff:
animationDismissalTimer
cancelIfNotAlreadyCanceled
setAnimationDismissalTimer:
initWithTimeoutInterval:onQueue:timeoutHandler:
start
_watchdogQueue_stopAnimationDismissalWatchdogTimerIfNeededThen:onQueue:
_language
spokenLanguageCode
shouldAutorotate
supportedInterfaceOrientations
_shouldKeepPonging
pong
_waitForPing
timerWithTimeInterval:repeats:block:
pongTimer
setPongTimer:
currentRunLoop
addTimer:forMode:
presentationStateUpdatedFromPresentationState:toPresentationState:
callStateChangedToIsActive:isOutgoing:
siriLanguageSpokenLanguageCodeDidChange:
siriViewController:didEncounterUnexpectedError:
startGuidedAccessForSiriViewController:
userRelevantEventDidOccurInSiriViewController:
siriViewControllerShouldEndSession:
siriViewControllerDidChangeVisibility:
siriViewControllerSessionDidResetContext:
siriViewController:siriIdleAndQuietStatusDidChange:
siriViewController:attemptUnlockWithPassword:
siriViewController:didHideStatusView:
siriViewControllerShouldSupportTextInput:
siriViewController:updateHomeAffordanceForBlurVisibilty:
siriViewController:onboardingScreenContinueButtonTappedWithRequestOptions:
siriViewController:didUpdateAudioCategoriesDisablingVolumeHUD:
siriViewControllerDidFinishDismissing:
siriViewController:presentedIntentWithBundleId:
dismissSiriViewController:withReason:
siriViewController:didEndSession:
siriViewController:didCompleteRequestWithError:
siriSessionShouldExtendAudioSessionForImminentPhoneCall
siriSessionShouldEndExtendAudioSessionForImminentPhoneCall
siriViewController:willStartTest:
siriViewController:didFinishTest:
siriViewController:failTest:withReason:
siriViewController:willProcessAppLaunchWithBundleIdentifier:
siriViewController:failedToLaunchAppWithBundleIdentifier:
siriViewControllerSpeechRequestStartedFromSiriOrb
siriViewControllerSpeechRequestCancelledFromSiriOrb
siriViewController:voiceActivationMaskViewIsVisible:
bulletinsForSiriViewController:
siriViewController:bulletinWithIdentifier:
lockStateForSiriViewController:
contextAppInfosForSiriViewController:
safeAreaInsetsForSceneCreationInSiriViewController:
starkAppBundleIdentifierContextForSiriViewController:
currentCarPlaySupportedOEMAppsForSiriViewController:
dismissSiriSetupViewController:
siriSetupViewController:openURL:
disableSiriActivationRequestedBySiriSetupViewController:
openSiriRequestedBySiriSetupViewController:
isEnabled
dismiss
setSiriPresentationControllerDelegate:
Tq,R,N
T@"<SiriPresentationControllerDelegate>",W,N
ping
presentationisIdleAndQuiet
deviceWonMyriadElection
activationDeterminedShouldDeferWake:
handleRequestWithOptions:
preheat
cancelPreheat
handleButtonDownFromButtonIdentifier:timestamp:
handleButtonUpFromButtonIdentifier:deviceIdentifier:timestamp:
handleButtonTapFromButtonIdentifier:
handleButtonLongPressFromButtonIdentifier:deviceIdentifier:timestamp:
updateCurrentLockState:
cancelPendingActivationEventWithReason:
bulletinManagerDidChangeBulletins
_siriDidOpenURL:
_isDeviceButton:
siriViewController:didStopRequestWithOptions:
_applicationsDidChange
viewWillLayoutSubviews
lock
unownedConnection
setUnownedConnection:
_lastAppUpdateTimestamp
_setLastAppUpdateTimestamp:
_isSpringBoardIdleTimerDisabled
_isVoiceActivationMaskShown
_buttonDownEventDidOccur
_shouldDeferWake
setCurrentCarPlaySupportedOEMAppIdList:
setStarkAppBundleIdentifierContext:
predictedRecordRouteIsZLL
setPredictedRecordRouteIsZLL:
setIntentUsageDelegate:
setCurrentViewMode:
siriSetupViewController
_testInputQueue
setTestInputQueue:
_instrumentationDismissalState
_identifier
_delaySessionEndForTTS
_lastGuideCheck
_completionOptions
_activeScreen
_activationHandled
_isIdleAndQuiet
_buttonTrigger
_receivedIncomingPhoneCall
_watchdogQueue
_presentationStateProcessingLock
_dismissalCompletion
_springBoardIdleTimerDisabled
_waitingForTelephonyToStart
_predictedRecordRouteIsZLL
_lock
_connection
_unownedConnection
_contextAppInfosForSiriViewController
_currentCarPlaySupportedOEMAppIdList
_starkAppBundleIdentifierContext
_currentLockState
_animationDismissalTimer
_intentUsageDelegate
_clearSiriViewControllerTimer
_currentViewMode
_pongTimer
_presentationState
_siriViewController
_siriSetupViewController
_siriSetupNavigationController
_hostedPresentationFrame
T{os_unfair_lock_s=I},N,V_lock
T@"BSServiceConnection",&,N,V_connection
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_hostedPresentationFrame
T@"AFConnection",&,N,V_unownedConnection
lastAppUpdateTimestamp
T@"NSDate",&,N,G_lastAppUpdateTimestamp,S_setLastAppUpdateTimestamp:,V_lastAppUpdateTimestamp
springBoardIdleTimerDisabled
TB,N,G_isSpringBoardIdleTimerDisabled,S_setSpringBoardIdleTimerDisabled:,V_springBoardIdleTimerDisabled
waitingForTelephonyToStart
TB,N,G_isWaitingForTelephonyToStart,S_setWaitingForTelephonyToStart:,V_waitingForTelephonyToStart
startGuidedAccessOnDismissal
TB,N,G_startGuidedAccessOnDismissal,S_setStartGuidedAccessOnDismissal:,V_startGuidedAccessOnDismissal
wasScreenOffDuringActivation
TB,N,G_wasScreenOffDuringActivation,S_setScreenOffDuringActivation:,V_wasScreenOffDuringActivation
isVoiceActivationMaskShown
TB,N,G_isVoiceActivationMaskShown,S_setVoiceActivationMaskShown:,V_isVoiceActivationMaskShown
buttonDownEventDidOccur
TB,N,G_buttonDownEventDidOccur,S_setButtonDownEventDidOccur:,V_buttonDownEventDidOccur
carSiriButtonHoldToTalkTimer
T@"NSTimer",&,N,G_carSiriButtonHoldToTalkTimer,S_setCarSiriButtonHoldToTalkTimer:,V_carSiriButtonHoldToTalkTimer
carSiriButtonTimeInterval
Td,N,G_carSiriButtonTimeInterval,S_setCarSiriButtonTimeInterval:,V_carSiriButtonTimeInterval
shouldDeferWake
TB,G_shouldDeferWake,S_setShouldDeferWake:,V_shouldDeferWake
T@"NSArray",&,N,V_contextAppInfosForSiriViewController
T@"NSArray",&,N,V_currentCarPlaySupportedOEMAppIdList
T@"NSArray",&,N,V_starkAppBundleIdentifierContext
TB,N,V_predictedRecordRouteIsZLL
TQ,N,V_currentLockState
T@"AFWatchdogTimer",&,N,V_animationDismissalTimer
language
T@"AFUISiriLanguage",R,N,G_language,V_language
T@"<SiriPresentationIntentUsageDelegate>",&,N,V_intentUsageDelegate
T@"NSTimer",&,N,V_clearSiriViewControllerTimer
Tq,N,V_currentViewMode
T@"NSTimer",&,N,V_pongTimer
Tq,N,V_presentationState
T@"AFUISiriViewController",&,N,V_siriViewController
T@"AFUISiriSetupViewController",&,N,V_siriSetupViewController
T@"UINavigationController",&,N,V_siriSetupNavigationController
testInputQueue
T@"AFQueue",C,N,G_testInputQueue,V_testInputQueue
Tq,R,N,Videntifier
T@"<SiriPresentationControllerDelegate>",W,N,VsiriPresentationControllerDelegate
hasTelephonyScheme
isFaceTimeURL
isFaceTimeAudioURL
scheme
lowercaseString
_sendHIDHoldHomeButton
_sendHIDHoldLockButton
_sendHIDEvent:
sendHoldHomeButtonHIDEvents
sendHoldLockButtonHIDEvents
_ioSystemClient
_generatorQueue
objectForKey:
testingContext
extractTestingInputsFromContext:
dequeueAllObjects
enqueueObject:
frontObject
dequeueObject
startUIRequest:
barrier
objectForKeyedSubscript:
removeConversationWithIdentifier:completionBlock:
_enableAudioInjection:audioFiles:
_runSyntheticButtonActivationTest
_startUIRequestWithText:testName:
_removePreviousConversationIfNeededWithTestName:testOptions:
_removePreviousInjectAudioSettings
checkForGuideUpdatesIfNecessary
monitor
setLastAppUpdateTimestamp:
lastGuideCheck
setLastGuideCheck:
T@"NSDate",&,N,V_lastAppUpdateTimestamp
T@"NSDate",&,N,V_lastGuideCheck
T@"<SiriPresentationIntentUsageDelegate>",&,D,N
v16@0:8
q16@0:8
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v40@0:8@16@24@?32
v28@0:8@16B24
v32@0:8@16q24
v40@0:8@"<SiriPresentation>"16@"SiriPresentationOptions"24@?<v@?B@"NSError">32
v40@0:8@"<SiriPresentation>"16@"SiriDismissalOptions"24@?<v@?B@"NSError">32
v28@0:8@"<SiriPresentation>"16B24
v32@0:8@"<SiriPresentation>"16q24
v40@0:8@"<SiriPresentation>"16@"SiriPunchoutRequest"24@?<v@?B@"NSError">32
v32@0:8@16Q24
v32@0:8@16@24
v24@0:8@16
v32@0:8@"<SiriPresentation>"16Q24
v32@0:8@"<SiriPresentation>"16@"NSString"24
v24@0:8@"<SiriPresentation>"16
@56@0:8q16{CGRect={CGPoint=dd}{CGSize=dd}}24
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@32@0:8@16@24
d16@0:8
v40@0:8I16I20q24Q32
v24@0:8d16
@"NSObject<OS_dispatch_group>"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"AFClientLite"
@24@0:8q16
v24@0:8@?16
v20@0:8B16
v32@0:8B16B20@?24
v40@0:8{CGPoint=dd}16@?32
B32@0:8@16@24
B32@0:8@"<SiriPresentation>"16@"NSString"24
v28@0:8@"SiriPresentationSpringBoardMainScreenViewController"16B24
v32@0:8@"<SiriPresentation>"16@"NSArray"24
v24@0:8B16B20
v24@0:8@"AFUISiriLanguage"16
v44@0:8@16@24B32@?36
v32@0:8@16@?24
v40@0:8@16Q24@?32
v40@0:8@16@24@32
v32@0:8@"AFUISiriViewController"16@"NSError"24
v24@0:8@"AFUISiriViewController"16
@"SASRequestOptions"32@0:8@"AFUISiriViewController"16@"SASRequestOptions"24
B24@0:8@"AFUISiriViewController"16
v28@0:8@"AFUISiriViewController"16B24
B32@0:8@"AFUISiriViewController"16@"NSString"24
v32@0:8@"AFUISiriViewController"16Q24
v32@0:8@"AFUISiriViewController"16@"SASRequestOptions"24
v44@0:8@"NSURL"16@"NSString"24B32@?<v@?B>36
v32@0:8@"AFUISiriViewController"16@"NSArray"24
v32@0:8@"AFUISiriViewController"16@"NSString"24
v32@0:8@"AFUISiriViewController"16@?<v@?B>24
v40@0:8@"AFUISiriViewController"16Q24@?<v@?B>32
v32@0:8@"AFUISiriViewController"16@"AFUISiriSession"24
v40@0:8@"AFUISiriViewController"16@"NSString"24@"NSString"32
@24@0:8@16
Q24@0:8@16
{UIEdgeInsets=dddd}24@0:8@16
@"NSArray"24@0:8@"AFUISiriViewController"16
@"AFBulletin"32@0:8@"AFUISiriViewController"16@"NSString"24
Q24@0:8@"AFUISiriViewController"16
{UIEdgeInsets=dddd}24@0:8@"AFUISiriViewController"16
v24@0:8@"AFUISiriSetupViewController"16
B32@0:8@"AFUISiriSetupViewController"16@"NSURL"24
v24@0:8@"SiriDismissalOptions"16
@"<SiriPresentationControllerDelegate>"16@0:8
v24@0:8@"<SiriPresentationControllerDelegate>"16
Vv32@0:8@16@24
Vv24@0:8@16
v32@0:8q16@24
q24@0:8@16
v40@0:8q16@24@32
B40@0:8q16@24@32
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8@16q24
Vv40@0:8@16@24@32
B24@0:8q16
v24@0:8Q16
v24@0:8q16
v32@0:8q16Q24
v28@0:8@?16B24
v32@0:8@?16@24
{os_unfair_lock_s=I}16@0:8
v20@0:8{os_unfair_lock_s=I}16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
{InstrumentationDismissalState="fluidDismissalSet"B"punchedOut"B"incomingPhoneCallDetected"B"outgoingPhoneCallDetected"B"attemptedAppLaunchIdentifier"@"NSString"}
@"NSDate"
@"AFRequestCompletionOptions"
@"UIScreen"
@"NSObject<OS_dispatch_queue>"
@"<SiriPresentationControllerDelegate>"
@"BSServiceConnection"
@"AFConnection"
@"NSTimer"
@"NSArray"
@"AFWatchdogTimer"
@"AFUISiriLanguage"
@"<SiriPresentationIntentUsageDelegate>"
@"AFUISiriViewController"
@"AFUISiriSetupViewController"
@"UINavigationController"
@"AFQueue"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
v24@0:8^{__IOHIDEvent=}16
^{__IOHIDEventSystemClient=}
v28@0:8B16@20
