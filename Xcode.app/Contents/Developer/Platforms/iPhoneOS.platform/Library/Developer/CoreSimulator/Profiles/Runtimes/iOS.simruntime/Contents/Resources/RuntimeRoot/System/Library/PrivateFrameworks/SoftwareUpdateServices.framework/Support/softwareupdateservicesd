initWithGlobalOptions:
init
setGlobalOptions:
globalOptions
updateMetricEventFields
cacheDeleteUrgency
_stringForBool:
checkAvailableSpace
updateMetricContext
stringWithFormat:
description
.cxx_destruct
_globalOptions
T@"SUPolicyGlobalOptions",&,N,V_globalOptions
Ti,R,N
TB,R,N
T@"NSDictionary",R,N
T@"NSString",R,N
decodeInt64ForKey:
setNeededBytes:
decodeBoolForKey:
setEnableCacheDelete:
setEnableAppOffload:
decodeIntForKey:
setCacheDeleteUrgency:
decodeIntegerForKey:
setAppOffloadUrgency:
decodeObjectOfClass:forKey:
setCacheDeleteVolume:
setAppOffloadVolume:
encodeInt64:forKey:
encodeBool:forKey:
encodeInt:forKey:
encodeInteger:forKey:
encodeObject:forKey:
setCompletionQueue:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
copyWithZone:
completionQueue
neededBytes
enableCacheDelete
enableAppOffload
appOffloadUrgency
cacheDeleteVolume
appOffloadVolume
_completionQueue
_neededBytes
_enableCacheDelete
_enableAppOffload
_cacheDeleteVolume
_appOffloadVolume
_cacheDeleteUrgency
_appOffloadUrgency
T@"NSObject<OS_dispatch_queue>",&,N,V_completionQueue
TQ,N,V_neededBytes
TB,N,V_enableCacheDelete
T@"NSString",&,N,V_cacheDeleteVolume
Ti,N,V_cacheDeleteUrgency
TB,N,V_enableAppOffload
T@"NSString",&,N,V_appOffloadVolume
Tq,N,V_appOffloadUrgency
dictionaryWithObjects:forKeys:count:
initWithDictionary:
addEntriesFromDictionary:
appendUpdateMetricEventFields:
setUpdateMetricEventFields:
_updateMetricEventFields
T@"NSDictionary",&,N,V_updateMetricEventFields
setAsset:
setReleaseDate:
setSessionID:
setScanOptions:
setDownloadOptions:
setInstallOptions:
setInstallTonightConfig:
setCoreDescriptor:
setAtPhase:
asset
releaseDate
sessionID
scanOptions
downloadOptions
installTonightConfig
atPhase
phaseToString:
coreDescriptor
initWithFormat:
initWithAsset:releaseDate:sessionID:scanOptions:downloadOptions:installTonightConfig:coreDescriptor:downloadAtPhase:
summary
resetPhase
armInstall:
disarmInstall
installOptions
_asset
_releaseDate
_sessionID
_scanOptions
_downloadOptions
_installOptions
_installTonightConfig
_coreDescriptor
_atPhase
T@"MAAsset",&,N,V_asset
T@"NSDate",&,N,V_releaseDate
T@"NSString",&,N,V_sessionID
T@"SUScanOptions",&,N,V_scanOptions
T@"SUDownloadOptions",&,N,V_downloadOptions
T@"SUInstallOptions",&,N,V_installOptions
T@"NSString",&,N,V_installTonightConfig
T@"SUCoreDescriptor",&,N,V_coreDescriptor
Tq,N,V_atPhase
setIsDaemon:
sharedInstance
stringWithUTF8String:
mainWorkQueue
handleXPCEvent:
runUntilIdleExit
initWithScanOptions:
sharedConnection
isSupervised
initWithScanOption:
assetType
discretionary
mdmOptions
_mdmScanOption
T@"SUMDMScanOptions",R,&,N
isForced
forceFullReplacement
allowSameBuildUpdates
currentReleaseTypeIsInternal
allowsCellular
requiresPowerPluggedIn
restrictToIncremental
restrictToFull
allowSameVersion
downloadTimeoutSecs
scanType
T@"NSString",R,&,N
dealloc
isAlive
setAlive:
message
setMessage:
messageType
setMessageType:
_alive
_messageType
_message
alive
TB,N,GisAlive,V_alive
Ti,N,V_messageType
T@"NSString",&,N,V_message
isHRNMode
skipActivationCheck
activationRecord
objectForKeyedSubscript:
integerValue
currentNetworkType
assignError:withCode:
_createRequest:
sleepForTimeInterval:
_logIPAddressIfNecessary
sendSynchronousRequest:allowRedirects:returningResponse:error:
_parseResponse:error:
errorWithCode:
assignError:withError:translate:
serialNumber
hasCellularRadio
safeObjectForKey:ofClass:
dictionary
numberWithInt:
setObject:forKey:
errorWithDomain:code:userInfo:
setSafeObject:forKey:
dataWithPropertyList:format:options:error:
URLWithString:
initWithURL:
setHTTPMethod:
setHTTPBody:
setValue:forHTTPHeaderField:
setCachePolicy:
setTimeoutInterval:
initWithData:encoding:
isEqualToString:
propertyListWithData:options:format:error:
_createHealthcheckResponseFromDictionary:
hostWithName:
addresses
count
countByEnumeratingWithState:objects:count:
shouldPerformActivationCheck:
checkActivationServerStatus:
isAutoDownload
isEnabledForCellular
isEnabledForExpensiveNetwork
initWithDownloadOptions:
allowExpensiveNetwork
currentState
mdmDelay
initWithDelay:
lastAssetAudience
registerProfileChangeListener
unregisterProfileChangeListener
UTF8String
profileChanged
refreshDelayedState
setAssetAudience:
setLastAssetAudience:
save
assetAudienceChanged:
isSoftwareUpdateResisted
shouldDelayUpdates
enforcedSoftwareUpdateDelayInDays
delayPeriod
setDelayPeriod:
isDelayed
setIsDelayed:
setMdmDelay:
managedDeviceDelayPeriodChanged:
date
delayedStartDate
isEqualToDate:
prettyPrintDate:
setDelayedStartDate:
delayUnit
laterDate:
startDelayWindow:
mdmDelayInterval
updateDelayInterval
unsignedLongLongValue
timeIntervalSinceNow
delayEndDate
softwareUpdatePath
MCPathToSUMDMPath:
MDMSoftwareUpdatePath
intValue
refreshAssetAudience
shouldDelayUpdate:
softwareUpdatePathRestriction
delegate
setDelegate:
_delegate
_assetAudience
_notifyToken
_workQueue
_mdmDelay
T@"SUManagedDeviceUpdateDelay",&,N,V_mdmDelay
T@"<SUManagedDeviceManagerDelegate>",&,N,V_delegate
registerInstallAlertConditionsWithHandler:
scheduleAlarm:date:
cancelAlarm:
unregisterInstallationAlertAction
timeIntervalSince1970
scheduleInstallAlertAlarm:
cancelInstallAlertAlarm
_csScheduler
containsType:
types
isSplatScan
deviceIsSupervised
skipPhase
additionalOptions
_additionalOptions
T@"NSDictionary",R,&,N,V_additionalOptions
underExclusiveControl
defaultCenter
_clientMessagabilityDidChange:
addObserver:selector:name:object:
_clientForegroundnessDidChange:
addObserver:
manager
initWithManager:
defaultManager
fileExistsAtPath:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
initWithPath:
removeObserver:
identifier
_clientForCurrentConnection
isScanning
handleClientRequest:client:withRequestCallBack:withErrorCallBack:
scanForUpdates:complete:
autoScanAndDownloadIfAvailable:withResult:
isClearingSpace
isDownloading
startDownload:
startDownloadWithOptions:withResult:
startDownloadWithMetadata:withResult:
cancelDownloadUserRequested:withResult:
purgeDownloadUserRequested:withResult:
pauseDownload:
resumeDownload:
updateDownloadMetadata:withResult:
updateDownloadOptions:withResult:
download
installPolicy
autoInstallManager
currentAutoInstallOperationCreatingIfNecessary:error:
updatesDownloadableWithOptions:alternateDownloadOptions:replyHandler:
deviceHasSufficientSpaceForDownloadsIncludeAppPurging:replyHandler:
deviceHasSufficientSpaceForDownloadIncludeAppPurging:replyHandler:
descriptor
deviceHasSufficientSpaceForDownloadIncludeAppPurging:descriptor:replyHandler:
installationKeybagStateForDescriptor:
isUpdateReadyForInstallationWithOptions:withResult:
installUpdateWithOptions:withResult:
setDarkBoot:
setRequired:
setClientName:
operationModel
agreementStatus
forecast
suEndDate
compare:
trySchedulingAnotherTimeInInstallWindow:
installUpdateWithInstallOptions:withResult:
slaVersion
errorWithCode:originalError:
isDelayingUpdates
setMandatoryUpdateDictionary:
mandatoryUpdateDictionary
cancelAutoInstallOperation:
consentToAutoInstallOperation:
passcodePolicy
currentPolicyType
isAutoUpdateEnabled
isInstallTonightScheduled
fastWorkQueue
enableAutomaticUpdateV2:
cancelAllAutoInstallTasks
isAutomaticUpdateV2Enabled
enableAutomaticDownload:
autoScanAndDownloadIfAvailable:
cancelAllAutodownloadTasks
isAutomaticDownloadEnabled
cancelInstallAlertRegistration
scheduleInstallAlertRegistration:
presentAutoUpdateBanner:
rollbackUpdateWithOptions:withResult:
rollbackRebootLaterTime
scheduleRollbackReboot:
createInstallationKeybag:withResult:
destroyInstallationKeybag
goUnderExclusiveControl
exitExclusiveControl
coreAnalyticsManager
setEvent:
eventName
submitEvent:
submitAllEvents
submitEventsWithName:
proxy
downloadProgressDidChange:
object
isMessagable
_sendLatestStatusForClient:
isForeground
runOnClientsUntilStop:
setForeground:
_evaluateForegroundness
cancelPreviousPerformRequestsWithTarget:selector:object:
performSelector:withObject:afterDelay:
copy
setUnderExclusiveControl:
addObject:
invalidate
removeObject:
setType:
scanRequestDidStartForOptions:
runOnClients:
scanRequestDidFinishForOptions:results:error:
scanDidCompleteForOptions:results:error:
scanRequestDidFinishForOptions:update:error:
scanDidCompleteWithNewUpdateAvailable:error:
wakeupIfNecessary
automaticDownloadDidFailToStartForNewUpdateAvailable:withError:
downloadDidStart:
downloadDidFail:withError:
downloadDidFinish:
downloadDidFinish:withInstallPolicy:
downloadWasInvalidatedForNewUpdateAvailable:
clearingSpaceForDownload:clearing:
installDidStart:
noteInstallDidFail:withError:
installDidFail:withError:
writeKeepAliveFile
noteInstallDidFinish:
installDidFinish:
installPolicyDidChange:
managedInstallationRequested:
installTonightScheduled:operationID:
autoInstallOperationDidConsent:
autoInstallOperationWasCancelled:
autoInstallOperationDidExpire:withError:
domain
code
autoInstallOperationIsReadyToInstall:withResult:
autoInstallOperationPasscodePolicyChanged:passcodePolicyType:
isScanning:
scanForUpdates:withResult:
descriptor:
descriptors:
isClearingSpaceForDownload:
isDownloading:
cancelDownload:
purgeDownload:
downloadAndInstallState:
deviceHasSufficientSpaceForDownloads:
deviceHasSufficientSpaceForDownload:
extraSpaceNeededForDownloadWithoutAppPurging:
eligibleRollbackWithOptions:withResult:
previousRollback:withResult:
isRollingBack:
scheduleRollbackRebootForLater:
currentAutoInstallOperation:withResult:
cancelAutoInstallOperation:withResult:
consentToAutoInstallOperation:withResult:
currentPasscodePolicy:
isAutoUpdateEnabled:
isAutoUpdateScheduled:
isInstallationKeybagRequired:
isInstallationKeybagRequiredForDescriptor:result:
isUpdateReadyForInstallation:
installUpdate:
setClientType:withResult:
slaVersion:
softwareUpdatePathRestriction:
isDelayingUpdates:
delayEndDate:
setMandatorySoftwareUpdateDictionary:
getMandatorySoftwareUpdateDictionary:
isAutomaticUpdateV2Enabled:
isAutomaticDownloadEnabled:
registerCSInstallPredicatesOnDate:
installServerConfiguration
setExclusiveControl:
recordSUAnalyticsEvent:
submitSUAnalyticsEvent:
submitAllSUAnalyticsEvents
submitSUAnalyticsEventsWithName:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
downloadWasInvalidatedForNewUpdatesAvailable:
rollbackReadyToStart:options:completion:
rollbackDidStart:
rollbackDidFail:withError:
rollbackSucceeded:
rollbackReadyForReboot:
installTonightScheduled:
newOSDetected:
autoInstallManager:operationWasConsented:
autoInstallManager:didCancelOperation:
autoInstallManager:didExpireOperation:withError:
autoInstallManager:isReadyToInstall:
autoInstallManager:passcodePolicyChanged:forOperation:
downloadWasInvalidated:
unattendedInstallationKeybagCreated
clients
addClient:
removeClient:
_autoInstallManager
_coreAnalyticsManager
_manager
_clients
_followUpController
_clientQueue
_underExclusiveControl
TB,V_underExclusiveControl
attributesOfItemAtPath:error:
dataWithContentsOfFile:options:error:
unarchivedObjectOfClass:fromData:error:
eventUUID
stringByAppendingPathComponent:
archivedDataWithRootObject:requiringSecureCoding:error:
writeToFile:atomically:
saveEventToDisk:
removeItemAtPath:error:
savePath
enumeratorAtPath:
hasSuffix:
copyEventFromPath:
_queue_setEvent:
_queue_submitEvent:
_queue_submitAllEvents
removeEvent:
removeEventsWithName:
removeAllEvents
events
_stateQueue
_savePath
T@"NSDictionary",R,&,N
T@"NSString",R,&,N,V_savePath
cancelActiveUpdate
initWithRollbackOptions:
rollbackOptions
_rollbackOptions
T@"SURollbackOptions",R,&,N
initWithInstallOptions:
T@"SUInstallOptions",R,&,N
_notifyServerStart
loadPlugin:
resumeOrResetIfNecessary
resumeOrResetStateIfNecessary
scheduleStartupTasksIfNecessary
setKeepAliveClearable:
clearKeepAliveIfNecessary:
isKeepAliveEnabled
enableTransactions
initWithMachServiceName:
_setQueue:
resume
beginTransaction:
endTransaction:
serverInitAndResumeWork
_run
copyTransactions
currentConnection
userInfo
valueForEntitlement:
boolValue
auditToken
initWithConnection:
setInterruptionHandler:
setInvalidationHandler:
rollbackDidFinish:
interfaceWithProtocol:
setRemoteObjectInterface:
setExportedInterface:
setExportedObject:
setUserInfo:
connectionQueue
listener:shouldAcceptNewConnection:
hasSufficientFreeSpace
setHasSufficientFreeSpace:
needsCacheDelete
setNeedsCacheDelete:
needsAppOffload
setNeedsAppOffload:
additionalBytesRequired
setAdditionalBytesRequired:
_hasSufficientFreeSpace
_needsCacheDelete
_needsAppOffload
_additionalBytesRequired
TB,N,V_hasSufficientFreeSpace
TB,N,V_needsCacheDelete
TB,N,V_needsAppOffload
TQ,N,V_additionalBytesRequired
hasSufficientSpaceWithOptions:withCompletion:
makeRoomForUpdate:completion:
fileSystemRepresentation
hasSufficientSpaceWithOptions:error:
makeRoomForUpdate:error:
currentFreeSpaceForVolume:
options
setOptions:
callback
setCallback:
results
setResults:
error
setError:
_options
_callback
_results
_error
T@"SUScanOptions",&,N,V_options
T@?,C,N,V_callback
T@"SUCoreScanResults",&,N,V_results
T@"NSError",&,N,V_error
_queue
arrayWithObject:
initWithBundleIDs:states:
mostElevatedApplicationStateForPID:
_isStateMessagable:
_applicationStateChanged:
setHandler:
remoteObjectProxy
postNotificationName:object:
_isStateForeground:
objectForKey:
hasPrefix:
_evaluateMessagability
type
isApplication
connection
isExclusiveClient
setIsExclusiveClient:
_appStateMonitor
_lastAppState
_type
_pid
_identifier
_isApplication
_isMessagable
_isForeground
_connection
_isExclusiveClient
T@"NSXPCConnection",R,N,V_connection
Ti,N,V_type
TB,N,V_isExclusiveClient
T@"NSString",R,N,V_identifier
Ti,R,N,V_pid
TB,R,N,V_isApplication
TB,R,N,V_isMessagable
TB,R,N,V_isForeground
T@"<SUManagerClientInterface>",R,D,N
_activityNameHandlerMap
scheduleBackgroundScanIfNecessary:scanType:
scheduleAutodownloadIfNecessary
scheduleAnalyticsSubmissionIfNecessary
cancelAllAutoscanTasks
cancelAutodownloadTask
cancelAllBackgroundScans
cancelAllEmergencyBackgroundScans
scheduleAutoInstallExpirationTask:
scheduleAutoInstallUnlockWindowStartTask:
scheduleAutoInstallStartInstallTask:
cancelAutoInstallWindowExpirationTask
cancelAutoInstallUnlockWindowStartTask
cancelAutoInstallStartInstallTask
cancelPresentAutoUpdateBanner
_activityIsScheduled:cancelIfExpired:
_randomizedAutoScanDelayForType:
dateWithTimeIntervalSinceNow:
scheduleBackgroundScan:scanDate:
scheduleAutoDownload
scheduleAutoDownloadWithDate:
_queue_cancelAutoInstallStartInstallTask
_queue_setAutoinstallActivity:
currentReleaseType
analyticsSubmissionIntervalOverride
unsignedIntValue
randomIntWithMinVal:maxVal:
scheduleAnalyticsSubmission:
_queue_handleAutoScan:info:rescheduler:
_queue_handleAutoDownload:info:
_queue_handleAutoInstallStart:info:
_queue_handleAutoInstallEnd:info:
_queue_handleAutoInstallUnlock:info:
_queue_handleInstallAlert:info:
_queue_handlePresentBanner:info:
_queue_handleServerConfigScan:info:
_queue_handleAnalyticsSubmission:info:
_queue_handleRollbackReboot:info:
_queue_handleActivity:info:
beginTransaction:keepAlive:
_autoScanTimeIntervalForType:
splatScanInterval
doubleValue
scanWeeklyInternally
nextScheduledAutoScan
scheduleBackgroundScan:
noteAutoInstallOperationWantsToBegin
noteAutoInstallOperationDidExpire
noteAutoInstallOperationUnlockWindowDidBegin
dataWithContentsOfFile:
initWithEventName:
currentCalendar
components:fromDate:toDate:options:
numberWithInteger:
setEventPayloadEntry:numberValue:
autoUpdateForceOn
autoUpdateForceOff
setEventPayloadEntry:boolValue:
autoInstallSystemAndDataFiles
autoInstallSystemDataFilesForceOn
rollbackReadyForReboot
cancelAllStartupTasks
scheduleAllAutoInstallUpdateTasks:
scheduleSplatBackgroundScan:
scheduleDelayEndAutoScan:
scheduleAutoInstallStartInstallTaskWithDate:
setAutoInstallActivityStateDone
schedulePresentAutoUpdateBanner
cancelRollbackReboot
setAutoinstallActivity:
_queue_handleScanIntervalConfigChange:
scanTypeForActivityName:
_queue_handleCancelPresentBannerOnUnlock
_schedulerQueue
_autoInstallActivity
preferredDescriptor
alternateDescriptor
initWithPreferredDescriptor:alternateDescriptor:
latestUpdate
setPreferredDescriptor:
setAlternateDescriptor:
_preferredDescriptor
_alternateDescriptor
T@"SUCoreDescriptor",&,N,V_preferredDescriptor
T@"SUCoreDescriptor",&,N,V_alternateDescriptor
allKeys
_hasOpenTransactionForName:
stringWithString:
appendString:
_toggleKeepAliveStatus
removeObjectForKey:
containsObject:
_isKeepAliveEnabled:
_setKeepAlive:
hasOpenTransactionForName:
_openTransactions
_keepAliveTransactions
_keepAliveClearable
setPasscodePolicy:
sharedController
_queue_resumeOrResetStateIfNecessary
lastAutoInstallOperationModel
lastProductBuild
lastProductVersion
currentProductBuild
currentProductVersion
progress
isDone
setCurrentPolicyType:
dismissAutoUpdateBanner
setLastAutoInstallOperationModel:
_queue_currentAutoInstallOperationCreatingIfNecessary:notifyIfExpired:error:
setIsInstallTonightScheduled:
unlockStartDate
metadata
isCurrentUpdateAutoUpdate
isAutoSUDisabled
_queue_isExpired
_queue_noteAutoInstallOperationDidExpire
_createOperationModel
_queue_cancelAutoInstallOperation:
_queue_clearAutoInstallOperationForReason:disableKeybagStash:
_queue_consentToAutoInstallOperation:
setAgreementStatus:
unlockEndDate
persistStashOnUnlock
hasPasscodeSet
_queue_trySchedulingAnotherTimeInInstallWindow:
_queue_isAutoInstallOperationReadyToBegin
_queue_noteAutoInstallOperationWantsToBegin
setIsInstallTonight:
isAutoInstallOperationReadyToBegin
isCurrentlyPresentingFollowUpType:
autoSUFailedWithError:
isUpdateReadyForInstallationWithReplyHandler:
addUnlockCallback:forKey:
_installAttemptDone
badgeSettingsForManualSoftwareUpdate:
_createForecast
setForecast:
UUID
setId:
passcodePolicyInterface:passcodePolicyTypeChanged:
state
followUpController
_state
_operationModel
_passcodePolicy
_autoInstallAttempted
T@"<SUAutoInstallManagerDelegate>",N,V_delegate
T@"_SUAutoInstallOperationModel",R,&,N,V_operationModel
T@"SUState",R,&,N,V_state
T@"SUAutoUpdatePasscodePolicy",R,&,N,V_passcodePolicy
T@"SUSFollowUpController",R,&,N,V_followUpController
setRequest:
initWithRequest:delegate:startImmediately:
_finished
setData:
setResponse:
cancel
mutableCopy
HTTPBody
HTTPMethod
cachePolicy
HTTPShouldHandleCookies
setHTTPShouldHandleCookies:
HTTPShouldUsePipelining
setHTTPShouldUsePipelining:
timeoutInterval
allHTTPHeaderFields
setAllHTTPHeaderFields:
setURL:
statusCode
length
initWithData:
appendData:
connection:didFailWithError:
connectionShouldUseCredentialStorage:
connection:willSendRequestForAuthenticationChallenge:
connection:canAuthenticateAgainstProtectionSpace:
connection:didReceiveAuthenticationChallenge:
connection:didCancelAuthenticationChallenge:
connection:willSendRequest:redirectResponse:
connection:didReceiveResponse:
connection:didReceiveData:
connection:needNewBodyStream:
connection:didSendBodyData:totalBytesWritten:totalBytesExpectedToWrite:
connection:willCacheResponse:
connectionDidFinishLoading:
initWithRequest:
main
request
response
data
allowRedirects
setAllowRedirects:
setStatusCode:
_request
_data
_response
_statusCode
_allowRedirects
_done
_saveData
T@"NSURLRequest",&,N,V_request
T@"NSMutableData",&,N,V_data
T@"NSURLResponse",&,N,V_response
Tq,N,V_statusCode
TB,N,V_allowRedirects
addOperation:
waitUntilAllOperationsAreFinished
core
setCore:
_core
_rollingBack
T@"SUManagerCore",W,N,V_core
            cacheDeleteUrgency: %@
            checkAvailableSpace: %@
            updateMetricContext: %@
            updateMetricEventFields: %@
/private/var
neededBytes
enableCachDelete
enableAppOffload
cacheDeleteUrgency
appOffloadUrgency
cachDeleteVolume
appOffloadVolume
controllerVersion
context
            updateMetricEventFields: %@
DownloadPhaseUnknown
DownloadPhaseBegin
DownloadPhaseDownloading
DownloadPhaseDownloaded
DownloadPhasePrepared
DownloadPhaseInstalling
DownloadPhaseUndefined
asset:%@ releaseDate:%@ sessionID:%@ scanOptions:%@ downloadOptions:%@ installTonightConfig:%@ atPhase:%@, coreDescriptor:%@
SoftwareUpdateServices launched
com.apple.notifyd.matching
v16@?0@"NSObject<OS_xpc_object>"8
Daemon recived notification: %@
Daemon handling notification: %@
v8@?0
            assetType:%@
            discretionary: %@
            allowsCellular: %@
            requiresPowerPluggedIn: %@
            restrictToIncremental: %@
            restrictToFull: %@
            allowSameVersion: %@
            sessionID: %@
            downloadTimeoutSecs: %d
DeviceConfigurationFlags
isAlive: %@
              Message: %@
              MessageType: %@
HRN mode enabled in activation record. Should not perform activation check
DeviceManagementClient
HRN mode enabled with feature flag. Should not perform activation check
Skipping activation check due to install options
Activation record: %@
No cloud configuration flags found in activation record
Failed to copy activation record. Error: %@
Attempting activation healthcheck: #%d...
Successfully connected for the healthcheck, but failed to parse the result: %@
Unable to contact the activation healthcheck after %d attempts: %@
Unable to create request for activation healthcheck: %@
CTErrorCode
Unable to retrieve telephony properties: %@
Unable to create connection to telephony.
SerialNumber
IMEI
ICCID
IMSI
MEID
https://albert.apple.com/WebObjects/ALUnbrick.woa/wa/ALActivationMonitor/checkUnbrickHealth
POST
iOS/SoftwareUpdate
User-Agent
Sending activation healthcheck request: %@
Status
Message
MessageType
WARN
ERROR
Unable to parse result from albert healthcheck: %@
Albert healthcheck result was not a dictionary: %@
albert.apple.com
Found IP address for activation healthcheck server: %@
No IP address found for activation healthcheck server.
com.apple.softwareupdateservices.mdmWorkQueue
Received profile change notification in registerProfileChangeListener
v12@?0i8
recived profile change notification
Asset audience changed from:%@ to:%@
Overridding shouldDelay to YES
delay interval is outside valid range. Defaulting to %d day delay interval
Setting delay period to %lu days
Setting isDelayed to %d
Setting delayedStartTime to %@
Delayed updates not set in profile
delayedStartDate is nil. Not delaying
delayedStartDate is in the future. Resetting to now
Overriding delay interval via asset XML:  %llu
Overriding delay interval with CFPrefereneces setting:  %llu
Time delayed:  %llu
Time to delay: %llu
Delay timer has expired. No longer delaying update
Delay timer still active. Delaying update
ShouldDelay = %d
com.apple.alarm
Handling wakeup alarm
No event name
installAlertAlarmName
Registering ContextStore Predicates
B16@?0@"NSString"8
ContextStore reports ready for installation UI
Scheduling alarm: %@
Date
Canceling alarm: %@
            discretionary: %@
            allowsCellular: %@
            requiresPowerPluggedIn: %@
            downloadTimeoutSecs: %d
            supervised: %@
com.apple.softwareupdateservicesd.clientQueue
/var/MobileSoftwareUpdate/Controller/SUCoreAnalytics/
Failed to create directory %@ for SUCoreAnalytics: %@
client %@ called %s
-[SUManagerServer isScanning:]_block_invoke
v16@?0@"NSError"8
-[SUManagerServer scanForUpdates:withResult:]_block_invoke
v24@?0@"SUScanResults"8@"NSError"16
-[SUManagerServer autoScanAndDownloadIfAvailable:]_block_invoke
-[SUManagerServer isClearingSpaceForDownload:]_block_invoke
-[SUManagerServer isDownloading:]_block_invoke
-[SUManagerServer startDownload:]_block_invoke
-[SUManagerServer startDownloadWithOptions:withResult:]_block_invoke
-[SUManagerServer startDownloadWithMetadata:withResult:]_block_invoke
-[SUManagerServer cancelDownload:]_block_invoke
-[SUManagerServer purgeDownload:]_block_invoke
-[SUManagerServer pauseDownload:]_block_invoke
-[SUManagerServer resumeDownload:]_block_invoke
-[SUManagerServer updateDownloadMetadata:withResult:]_block_invoke
-[SUManagerServer updateDownloadOptions:withResult:]_block_invoke
-[SUManagerServer downloadAndInstallState:]_block_invoke
-[SUManagerServer updatesDownloadableWithOptions:alternateDownloadOptions:replyHandler:]_block_invoke
-[SUManagerServer deviceHasSufficientSpaceForDownloads:]_block_invoke
device does%@ have enough space for preferred update download, and does%@ have enough space for alternate update download
 not
v48@?0B8B12@"NSNumber"16@"NSNumber"24@"NSError"32@"NSError"40
-[SUManagerServer deviceHasSufficientSpaceForDownload:]_block_invoke
device does%@ have enough space for download
v28@?0B8@"NSNumber"12@"NSError"20
-[SUManagerServer extraSpaceNeededForDownloadWithoutAppPurging:]_block_invoke
-[SUManagerServer isInstallationKeybagRequired:]_block_invoke
-[SUManagerServer isInstallationKeybagRequiredForDescriptor:result:]_block_invoke
-[SUManagerServer isUpdateReadyForInstallationWithOptions:withResult:]_block_invoke
v24@?0B8B12@"NSError"16
-[SUManagerServer installUpdateWithOptions:withResult:]_block_invoke
Install Update Failed on AutoSU. Going to schedule retry
v20@?0B8@"NSError"12
-[SUManagerServer installUpdateWithInstallOptions:withResult:]_block_invoke
-[SUManagerServer slaVersion:]_block_invoke
-[SUManagerServer softwareUpdatePathRestriction:]_block_invoke
-[SUManagerServer isDelayingUpdates:]_block_invoke
-[SUManagerServer delayEndDate:]_block_invoke
-[SUManagerServer setMandatorySoftwareUpdateDictionary:]_block_invoke
-[SUManagerServer getMandatorySoftwareUpdateDictionary:]_block_invoke
-[SUManagerServer currentAutoInstallOperation:withResult:]_block_invoke
-[SUManagerServer cancelAutoInstallOperation:withResult:]_block_invoke
-[SUManagerServer consentToAutoInstallOperation:withResult:]_block_invoke
-[SUManagerServer currentPasscodePolicy:]_block_invoke
-[SUManagerServer isAutoUpdateEnabled:]_block_invoke
-[SUManagerServer isAutoUpdateScheduled:]_block_invoke
-[SUManagerServer enableAutomaticUpdateV2:]_block_invoke
AutomaticUpdateV2 enabled : %d
Scheduled auto install operation: %@
Error scheduling auto install operation: %@
-[SUManagerServer isAutomaticUpdateV2Enabled:]_block_invoke
-[SUManagerServer enableAutomaticDownload:]_block_invoke
Setting automatic download enabled : %@
-[SUManagerServer isAutomaticDownloadEnabled:]_block_invoke
-[SUManagerServer registerCSInstallPredicatesOnDate:]_block_invoke
-[SUManagerServer presentAutoUpdateBanner:]_block_invoke
-[SUManagerServer rollbackUpdateWithOptions:withResult:]_block_invoke
-[SUManagerServer scheduleRollbackRebootForLater:]_block_invoke
-[SUManagerServer createInstallationKeybag:withResult:]_block_invoke
-[SUManagerServer destroyInstallationKeybag]_block_invoke
-[SUManagerServer setExclusiveControl:]_block_invoke
Saving event %@
Submitting event %@
Submitting all CoreAnalytics events
Submitting all CoreAnalytics events matching name %@
v24@?0@"SUManagerServerClient"8^B16
%s exiting exclusive control
-[SUManagerServer exitExclusiveControl]
Added client: %@, count: %lu
Removed client: %@, count: %lu
v16@?0@"SUManagerServerClient"8
Auto install operation cancelled..Dismissing AutoUpdateBanner
isReadyToInstall (SUS) Returned NO
isReadyToInstall (SB) Returned NO. Error: %@
isReadyToInstall Returned YES
com.apple.SUServices.SUCoreAnalyticsManagerQueue
Invalid file type found for even at path: %@ [%@] (skipping)
Unknown error
Failed to read contents of event file: %@ (%@)
Invalid event data for :%@ (%@)
Save called on object with no path specified
Invalid event passed to saveEvent.Skipping
%@_%@%s
.suanalytics
Saving event %@:%@ to %@
Unable to save SU coreanalytics event(%@)
Unknown Archiver Error
Successfully saved event
Unable to remove event %@ : %@ : %@
Unable to remove event file %@: %@
Unknown Error
Succssfully removed event file %@
Successfully removed event file %@
Submitted event %@
Unable to find/reconstruct stashed event for event %@ with uuid %@
Failed to remove event file after event submission %@: %@
Event %@ with uuid %@ does not exist
Invalid event name passed to submitEventWithName
Failed to remove event file %@: %@
Unable to read event at %@ for submission..Removing and moving on
Notifying observers of start
/System/Library/PrivateFrameworks/SoftwareUpdateServicesUI.framework/Plugins/SoftwareUpdateServicesUIPlugin.servicebundle
Starting the server: keepAlive = %@
ENABLED
DISABLED
Starting the server.
com.apple.softwareupdateservices.connectionQueue
SUMinimumLaunchTransaction
Software update daemon continuing to run - transactions: %@
Software update daemon continuing to run - busy.
com.apple.softwareupdateservices.client.allowed
connection refused for unentitled client %@
SUAddClientTransaction
v24@?0@"SUSpaceCheckResults"8@"NSError"16
SUClientMessagabilityChangedNotification
SUClientForegroundnessChangedNotification
v16@?0@"NSDictionary"8
initiated client %@
com.apple.softwareupdateservicesd.wakeup
Trying to waking up client...: %@
Unable to wakeup client: %@
Client [%@:<%p>] - messagability changed: isMessagable? %@
Client [%@:<%p>] - foregroundness changed: isForeground? %@
Client <%p>:
            
type: %@
            
pid: %@
            
bundle ID: %@
            
application? %@
            
messagable? %@
            
foreground? %@
            
isExclusiveClient? %@
unlockCallbackPersistStash
com.apple.softwareupdateservicesd.activity.autoScan
com.apple.softwareupdateservicesd.activity.emergencyAutoScan
com.apple.softwareupdateservicesd.activity.splatAutoScan
com.apple.softwareupdateservicesd.activity.delayEndScan
com.apple.softwareupdateservicesd.activity.autoDownload
com.apple.softwareupdate.autoinstall.startInstall
com.apple.softwareupdateservicesd.activity.autoInstallEnd
com.apple.softwareupdateservicesd.activity.autoInstallUnlock
com.apple.softwareupdateservicesd.activity.presentBanner
com.apple.softwareupdateservicesd.activity.installAlert
com.apple.softwareupdateservicesd.activity.analyticsSubmission
com.apple.softwareupdateservicesd.SUCoreConfigScheduledScan
com.apple.softwareupdateservicesd.activity.rollbackReboot
com.apple.softwareupdateservicesd.scheduler
Expired or no background scan activity found. Rescheduling for %@
Not scheduling auto download: Currently Downloading
Failed to set %@ activity state to XPC_ACTIVITY_STATE_DONE
Internal
Setting analytics submission delay to %u
Expired or no analytics submission scheduled. Rescheduling for %@
Analytics event already scheduled
v24@?0@"NSString"8@"NSDictionary"16
Received activity: %@: %@
schedulerAction
No handler block found for activity Name: %@
Scan interval server configuration changed
updateDate
Determining days since update
Unable to read updateDate file..bailing
%ld(bucketed) days since last successful ota
Failed to read valid update date
Submitting SU Coreanalytics events
            Preferred Descriptor: %@
            Alternate Descriptor: %@
com.apple.softwareupdateservicesd.SUTransactionManager
Beginning transaction: %@%@
 (with keepAlive)
com.apple.SoftwareUpdateServices.
ERROR: trying to start a transaction with already used name %@%@
Ended transaction: %@
ERROR: trying to end a non existent transaction with name %@
Keep alive status: %@
Enabled
Disabled
softwareupdateservicesd could not toggle keep alive status to launchd.
softwareupdateservicesd could not read keep alive status from launchd.
com.apple.softwareupdateservices.autoInstallManager.stateQueue
New OS detected. Clearing last SUAutoInstallOperation
Saved SUAutoInstallOperation is expired
There is no downloaded asset. Clearing last SUAutoInstallOperation
resumeOrResetStateIfNecessary: Dismissing AutoUpdateBanner if present
Last AutoInstall operation found
Error creating new autoInstallOperationModel: %@
Unlock window passed. Firing unlock window timer manually
AutoSU disabled. Not scheduling AutoSU timers
Cancel
AutoSU consented
User consented during unlock window. Persisting stash
Auto update consented and no passcode set. Displaying banner
Window ending at %@, attempting to reschedule auto install for date %@
Unlock window did begin
Ready to install timer fired, but operation model is nil
Ready to install timer fired, but operation was not agreed to
Not ready to begin AutoInstall operation. Is update ready for install? %@
Could not install due to %@, retrying in 15 mins.
Could not install due to %@, and should not retry. Canceling auto install
AutoUpdate cannot be installed and user has been informed of the update..Presenting error alert
AutoUpdate cannot be installed, but user is not yet aware of the same..NOT presenting error alert
AutoInstallOperation expired
unattendedInstallationKeybagCreated: isAutoUpdate and isAutoDownload are true..Scheduling presentation of AutoUpdateBanner
clearing autoInstallOperation for reason: %@
Setting isInstallTonightScheduled to NO
Connection completed successfully.
Connection failed with error: %@
Connection received redirect request to: %@
Connection received response: %d
Connection received %d bytes of data.
SUPolicyGlobal
SUSpacePurgeOptions
NSSecureCoding
NSCoding
NSCopying
SUPolicyGlobalOptions
SUManagerEngineDownloadDescriptor
SUSFollowUpController
SUSFollowUpUpdateAvailable
SUPolicyScanBrain
SUPolicyScan
SUActivationStatusResponse
SUActivationService
SUPolicyDownload
SUManagedDeviceManager
SUSFollowUpRollbackDetected
SUXPCAlarm
SUSFollowUpAutoUpdate
SUPolicyScanSoftwareUpdate
SUSFollowUp
SUPolicy
SUManagerServer
SUManagerServerInterface
SUManagerDelegate
NSObject
SUAutoInstallManagerDelegate
SUManagerObserver
SUAnalyticsManager
SUPolicyRollback
SUSFollowUpBadgeOnly
SUPolicyApply
SUManagerClientInterface
Daemon
SUSpaceCheckResults
SUSpace
SUManagerScanRequest
SUManagerServerClient
SUManagerInterfaceFactory
SUScheduler
SUPolicyDocumentationDownload
SUCoreScanResults
SUTransactionManager
SUPolicyScanSUDocumentation
SUAutoInstallManager
SUAutoUpdatePasscodePolicyObserver
SUHttpOperation
NSURLConnectionDataDelegate
NSURLConnectionDelegate
SURollbackController
@16@0:8
@24@0:8@16
i16@0:8
B16@0:8
@20@0:8B16
v24@0:8@16
v16@0:8
@"SUPolicyGlobalOptions"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^{_NSZone=}16
Q16@0:8
v24@0:8Q16
v20@0:8B16
v20@0:8i16
q16@0:8
v24@0:8q16
@"NSObject<OS_dispatch_queue>"
@"NSString"
@"NSDictionary"
@24@0:8q16
@80@0:8@16@24@32@40@48@56@64q72
B24@0:8@16
@"MAAsset"
@"NSDate"
@"SUScanOptions"
@"SUDownloadOptions"
@"SUInstallOptions"
@"SUCoreDescriptor"
@"SUMDMScanOptions"
@24@0:8^@16
@32@0:8@16^@24
Q24@0:8q16
@"SUManagedDeviceUpdateDelay"
@"<SUManagedDeviceManagerDelegate>"
v32@0:8@16@24
@"SUCSScheduler"
v24@0:8@?16
v32@0:8@16@?24
v40@0:8@16@24@?32
v28@0:8B16@?20
v28@0:8i16@?20
v24@0:8@?<v@?B@"NSError">16
v32@0:8@"SUScanOptions"16@?<v@?@"SUScanResults"@"NSError">24
v24@0:8@?<v@?@"SUScanResults"@"NSError">16
v24@0:8@?<v@?@"SUDescriptor"@"NSError">16
v32@0:8@"SUDownloadOptions"16@?<v@?B@"NSError">24
v32@0:8@"SUDownloadMetadata"16@?<v@?B@"NSError">24
v24@0:8@?<v@?@"SUDownload"@"SUInstallPolicy"@"_SUAutoInstallOperationModel"@"NSError">16
v40@0:8@"SUDownloadOptions"16@"SUDownloadOptions"24@?<v@?BB@"NSError"@"NSError">32
v24@0:8@?<v@?BB@"NSError"@"NSError">16
v24@0:8@?<v@?@"NSNumber"@"NSError">16
v32@0:8@"SURollbackOptions"16@?<v@?@"SURollbackDescriptor"@"NSError">24
v32@0:8@"SURollbackOptions"16@?<v@?B@"SURollbackDescriptor"@"NSError">24
v24@0:8@?<v@?B@"SURollbackDescriptor"@"NSError">16
v28@0:8B16@?<v@?@"_SUAutoInstallOperationModel"@"NSError">20
v32@0:8@"NSUUID"16@?<v@?B@"NSError">24
v24@0:8@?<v@?Q@"NSError">16
v32@0:8@"SUDescriptor"16@?<v@?B@"NSError">24
v32@0:8@"SUInstallOptions"16@?<v@?B@"NSError">24
v32@0:8@"NSArray"16@?<v@?B@"NSError">24
v28@0:8i16@?<v@?B@"NSError">20
v24@0:8@?<v@?@"NSDate"@"NSError">16
v24@0:8@"NSDictionary"16
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
v32@0:8@"SUKeybagOptions"16@?<v@?B@"NSError">24
v24@0:8@"NSDate"16
v24@0:8@"SUAnalyticsEvent"16
v24@0:8@"NSString"16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v40@0:8@16@24@32
v28@0:8@16B24
v24@0:8@"SUScanOptions"16
v40@0:8@"SUScanOptions"16@"SUScanResults"24@"NSError"32
v32@0:8@"SUDescriptor"16@"NSError"24
v40@0:8@"SUScanOptions"16@"SUDescriptor"24@"NSError"32
v24@0:8@"SUDownload"16
v32@0:8@"SUDownload"16@"NSError"24
v32@0:8@"SUDownload"16@"SUInstallPolicy"24
v24@0:8@"SUDescriptor"16
v24@0:8@"SUCoreScanResults"16
v28@0:8@"SUDownload"16B24
v24@0:8@"SUInstallPolicy"16
v40@0:8@"SUCoreRollbackDescriptor"16@"SURollbackOptions"24@?<v@?B@"SURollbackDescriptor"@"NSError">32
v24@0:8@"SUCoreRollbackDescriptor"16
v32@0:8@"SUCoreRollbackDescriptor"16@"NSError"24
v40@0:8@16Q24@32
v32@0:8@"SUAutoInstallManager"16@"_SUAutoInstallOperationModel"24
v40@0:8@"SUAutoInstallManager"16@"_SUAutoInstallOperationModel"24@"NSError"32
v40@0:8@"SUAutoInstallManager"16Q24@"_SUAutoInstallOperationModel"32
v48@0:8r*16@24@?32@?40
v36@0:8B16@20@?28
@"SUAutoInstallManager"
@"SUAnalyticsManager"
@"<SUManagerInterface>"
@"NSMutableArray"
@"SUSFollowUpController"
@"SURollbackOptions"
v32@0:8@16Q24
v28@0:8B16@20
v24@0:8@"SUScanResults"16
v40@0:8@"SURollbackDescriptor"16@"SURollbackOptions"24@?<v@?B@"SURollbackDescriptor"@"NSError">32
v24@0:8@"SURollbackDescriptor"16
v32@0:8@"SURollbackDescriptor"16@"NSError"24
v24@0:8@"NSUUID"16
v32@0:8@"NSUUID"16@"NSError"24
v32@0:8@"NSUUID"16Q24
v28@0:8B16@"NSUUID"20
B32@0:8@16@24
B32@0:8@16^@24
Q24@0:8@16
@?16@0:8
@"SUCoreScanResults"
@"NSError"
B20@0:8I16
@"BKSApplicationStateMonitor"
@"NSXPCConnection"
v32@0:8@16^i24
d20@0:8i16
B28@0:8@16B24
v36@0:8@16@24B32
i24@0:8@16
@"NSObject<OS_xpc_object>"
@32@0:8@16@24
B24@0:8^@16
@"NSMutableDictionary"
@"NSMutableSet"
v32@0:8@"SUAutoUpdatePasscodePolicy"16Q24
@28@0:8B16^@20
@32@0:8B16B20^@24
v24@0:8d16
@"<SUAutoInstallManagerDelegate>"
@"SUState"
@"_SUAutoInstallOperationModel"
@"SUAutoUpdatePasscodePolicy"
v32@0:8@"NSURLConnection"16@"NSError"24
B24@0:8@"NSURLConnection"16
v32@0:8@"NSURLConnection"16@"NSURLAuthenticationChallenge"24
B32@0:8@"NSURLConnection"16@"NSURLProtectionSpace"24
@40@0:8@16@24@32
v48@0:8@16q24q32q40
@"NSURLRequest"40@0:8@"NSURLConnection"16@"NSURLRequest"24@"NSURLResponse"32
v32@0:8@"NSURLConnection"16@"NSURLResponse"24
v32@0:8@"NSURLConnection"16@"NSData"24
@"NSInputStream"32@0:8@"NSURLConnection"16@"NSURLRequest"24
v48@0:8@"NSURLConnection"16q24q32q40
@"NSCachedURLResponse"32@0:8@"NSURLConnection"16@"NSCachedURLResponse"24
v24@0:8@"NSURLConnection"16
@"NSURLConnection"
@"NSURLRequest"
@"NSMutableData"
@"NSURLResponse"
@44@0:8@16B24^@28^@36
@"SUManagerCore"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>CFBundleAllowMixedLocalizations</key>
<true/>
<key>CFBundleDevelopmentRegion</key>
<string>English</string>
<key>CFBundleIdentifier</key>
<string>com.apple.softwareupdateservicesd</string>
<key>CFBundleName</key>
<string>${PRODUCT_NAME}</string>
<key>CFBundleExecutable</key>
<string>${EXECUTABLE_NAME}</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleVersion</key>
<string>1</string>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>allow-softwareupdated</key>
<true/>
<key>application-identifier</key>
<string>com.apple.softwareupdateservicesd</string>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>spi</string>
<string>identity</string>
</array>
<key>com.apple.appstored.private</key>
<true/>
<key>com.apple.coreduetd.allow</key>
<true/>
<key>com.apple.coreduetd.context</key>
<true/>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.frontboard.shutdown</key>
<true/>
<key>com.apple.frontboardservices.display-layout-monitor</key>
<true/>
<key>com.apple.keystore.device</key>
<true/>
<key>com.apple.keystore.lockassertion</key>
<true/>
<key>com.apple.keystore.stash.access</key>
<true/>
<key>com.apple.keystore.stash.persist</key>
<true/>
<key>com.apple.mobile.deleted.AllowFreeSpace</key>
<true/>
<key>com.apple.private.CacheDelete</key>
<array>
<string>PURGE_SPECIAL_CASE_ENTITLEMENT</string>
<string>PURGE_ENTITLEMENT</string>
<string>CLIENT_ENTITLEMENT</string>
<string>PURGEABLE_ENTITLEMENT</string>
<string>SERVICE_REQUEST_ENTITLEMENT</string>
<string>DEMOTABLE_APPS_ENTITLEMENT</string>
<string>DEMOTE_APPS_ENTITLEMENT</string>
</array>
<key>com.apple.private.assets.accessible-asset-types</key>
<array>
<string>com.apple.MobileAsset.SplatSoftwareUpdate</string>
<string>com.apple.MobileAsset.SoftwareUpdateConfiguration</string>
<string>com.apple.MobileAsset.VoiceServicesVocalizerVoice</string>
<string>com.apple.MobileAsset.VoiceServices.CustomVoice</string>
<string>com.apple.MobileAsset.VoiceServices.GryphonVoice</string>
<string>com.apple.MobileAsset.SoftwareUpdate</string>
<string>com.apple.MobileAsset.SoftwareUpdateDocumentation</string>
</array>
<key>com.apple.private.assets.change-daemon-config</key>
<true/>
<key>com.apple.private.followup</key>
<true/>
<key>com.apple.private.kernel.darkboot</key>
<true/>
<key>com.apple.private.network.socket-delegate</key>
<true/>
<key>com.apple.private.networkextension.configuration</key>
<true/>
<key>com.apple.rootless.storage.coreduet_knowledge_store</key>
<true/>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.coreduetd.context</string>
</array>
<key>com.apple.security.iokit-user-client-class</key>
<array>
<string>AGXDevice</string>
<string>AGXDeviceUserClient</string>
<string>AGXSharedUserClient</string>
<string>AGXCommandQueue</string>
<string>IOAVControllerConcreteUserClient</string>
<string>IOMobileFramebufferUserClient</string>
<string>IOSurfaceRootUserClient</string>
<string>RootDomainUserClient</string>
</array>
<key>com.apple.security.system-container</key>
<true/>
<key>com.apple.springboard-ui.client</key>
<true/>
<key>com.apple.springboard.activateRemoteAlert</key>
<true/>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>com.apple.springboard.remote-alert</key>
<true/>
<key>com.apple.springboard.software-update-service.passcode-policy</key>
<true/>
<key>com.apple.telephonyutilities.callservicesd</key>
<array>
<string>access-calls</string>
</array>
<key>com.apple.wifi.manager-access</key>
<true/>
</dict>
</plist>
writeToFile:atomically:
writeKeepAliveFile
waitUntilAllOperationsAreFinished
valueForEntitlement:
userInfo
updateDelayInterval
unsignedLongLongValue
unsignedIntValue
unregisterInstallationAlertAction
unlockStartDate
unlockEndDate
unarchivedObjectOfClass:fromData:error:
types
timeoutInterval
timeIntervalSinceNow
timeIntervalSince1970
suEndDate
stringWithUTF8String:
stringWithString:
stringWithFormat:
stringByAppendingPathComponent:
splatScanInterval
softwareUpdatePath
sleepForTimeInterval:
slaVersion
skipActivationCheck
shouldDelayUpdates
sharedController
sharedConnection
setValue:forHTTPHeaderField:
setUserInfo:
setURL:
setTimeoutInterval:
setSafeObject:forKey:
setRequired:
setRemoteObjectInterface:
setPasscodePolicy:
setObject:forKey:
setMandatoryUpdateDictionary:
setLastAutoInstallOperationModel:
setLastAssetAudience:
setIsInstallTonightScheduled:
setIsInstallTonight:
setIsDelayed:
setIsDaemon:
setInvalidationHandler:
setInterruptionHandler:
setId:
setHandler:
setHTTPShouldUsePipelining:
setHTTPShouldHandleCookies:
setHTTPMethod:
setHTTPBody:
setForeground:
setForecast:
setExportedObject:
setExportedInterface:
setEventPayloadEntry:numberValue:
setEventPayloadEntry:boolValue:
setDelayedStartDate:
setDelayPeriod:
setDarkBoot:
setCurrentPolicyType:
setClientName:
setCachePolicy:
setAllHTTPHeaderFields:
setAgreementStatus:
serialNumber
scanWeeklyInternally
scanForUpdates:complete:
save
safeObjectForKey:ofClass:
rollbackReadyForReboot
resumeOrResetIfNecessary
resume
removeObserver:
removeObjectForKey:
removeObject:
removeItemAtPath:error:
remoteObjectProxy
registerInstallAlertConditionsWithHandler:
randomIntWithMinVal:maxVal:
purgeDownloadUserRequested:withResult:
propertyListWithData:options:format:error:
progress
prettyPrintDate:
postNotificationName:object:
performSelector:withObject:afterDelay:
objectForKeyedSubscript:
objectForKey:
object
numberWithInteger:
numberWithInt:
mutableCopy
mostElevatedApplicationStateForPID:
metadata
mdmDelayInterval
mandatoryUpdateDictionary
mainWorkQueue
loadPlugin:
length
laterDate:
lastProductVersion
lastProductBuild
lastAutoInstallOperationModel
lastAssetAudience
isUpdateReadyForInstallationWithReplyHandler:
isSupervised
isSoftwareUpdateResisted
isScanning
isInstallTonightScheduled
isForced
isEqualToString:
isEqualToDate:
isEnabledForExpensiveNetwork
isEnabledForCellular
isDownloading
isDone
isDelayingUpdates
isCurrentlyPresentingFollowUpType:
isClearingSpace
isAutomaticUpdateV2Enabled
isAutomaticDownloadEnabled
isAutoSUDisabled
interfaceWithProtocol:
integerValue
intValue
installationKeybagStateForDescriptor:
installPolicy
initWithURL:
initWithScanOption:
initWithRequest:delegate:startImmediately:
initWithMachServiceName:
initWithFormat:
initWithEventName:
initWithDictionary:
initWithDelay:
initWithData:encoding:
initWithData:
initWithBundleIDs:states:
hostWithName:
hasSuffix:
hasPrefix:
hasPasscodeSet
hasCellularRadio
forecast
forceFullReplacement
fileSystemRepresentation
fileExistsAtPath:
fastWorkQueue
eventUUID
eventName
errorWithDomain:code:userInfo:
errorWithCode:originalError:
errorWithCode:
enumeratorAtPath:
enforcedSoftwareUpdateDelayInDays
encodeObject:forKey:
encodeInteger:forKey:
encodeInt:forKey:
encodeInt64:forKey:
encodeBool:forKey:
enableTransactions
download
doubleValue
domain
dismissAutoUpdateBanner
dictionaryWithObjects:forKeys:count:
dictionary
descriptor
delayedStartDate
delayUnit
defaultManager
defaultCenter
decodeObjectOfClass:forKey:
decodeIntegerForKey:
decodeIntForKey:
decodeInt64ForKey:
decodeBoolForKey:
dateWithTimeIntervalSinceNow:
date
dataWithPropertyList:format:options:error:
dataWithContentsOfFile:options:error:
dataWithContentsOfFile:
currentState
currentReleaseTypeIsInternal
currentReleaseType
currentProductVersion
currentProductBuild
currentPolicyType
currentNetworkType
currentConnection
currentCalendar
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
countByEnumeratingWithState:objects:count:
count
copy
containsType:
containsObject:
components:fromDate:toDate:options:
compare:
code
cancelPreviousPerformRequestsWithTarget:selector:object:
cancelDownloadUserRequested:withResult:
cancel
cachePolicy
boolValue
badgeSettingsForManualSoftwareUpdate:
autoUpdateForceOn
autoUpdateForceOff
autoScanAndDownloadIfAvailable:withResult:
autoSUFailedWithError:
autoInstallSystemDataFilesForceOn
autoInstallSystemAndDataFiles
auditToken
attributesOfItemAtPath:error:
assignError:withError:translate:
assignError:withCode:
arrayWithObject:
archivedDataWithRootObject:requiringSecureCoding:error:
appendString:
appendData:
analyticsSubmissionIntervalOverride
allowSameBuildUpdates
allKeys
allHTTPHeaderFields
agreementStatus
addresses
addUnlockCallback:forKey:
addOperation:
addObserver:selector:name:object:
addObserver:
addObject:
addEntriesFromDictionary:
_setQueue:
_queue
UUID
UTF8String
URLWithString:
MDMSoftwareUpdatePath
HTTPShouldUsePipelining
HTTPMethod
HTTPShouldHandleCookies
HTTPBody
init
initWithGlobalOptions:
cacheDeleteUrgency
checkAvailableSpace
updateMetricEventFields
updateMetricContext
_stringForBool:
description
globalOptions
setGlobalOptions:
.cxx_destruct
_globalOptions
T@"SUPolicyGlobalOptions",&,N,V_globalOptions
Ti,R,N
TB,R,N
T@"NSDictionary",R,N
T@"NSString",R,N
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
copyWithZone:
completionQueue
setCompletionQueue:
neededBytes
setNeededBytes:
enableCacheDelete
setEnableCacheDelete:
enableAppOffload
setEnableAppOffload:
setCacheDeleteUrgency:
appOffloadUrgency
setAppOffloadUrgency:
cacheDeleteVolume
setCacheDeleteVolume:
appOffloadVolume
setAppOffloadVolume:
_completionQueue
_neededBytes
_enableCacheDelete
_enableAppOffload
_cacheDeleteVolume
_appOffloadVolume
_cacheDeleteUrgency
_appOffloadUrgency
T@"NSObject<OS_dispatch_queue>",&,N,V_completionQueue
TQ,N,V_neededBytes
TB,N,V_enableCacheDelete
T@"NSString",&,N,V_cacheDeleteVolume
Ti,N,V_cacheDeleteUrgency
TB,N,V_enableAppOffload
T@"NSString",&,N,V_appOffloadVolume
Tq,N,V_appOffloadUrgency
appendUpdateMetricEventFields:
setUpdateMetricEventFields:
_updateMetricEventFields
T@"NSDictionary",&,N,V_updateMetricEventFields
phaseToString:
initWithAsset:releaseDate:sessionID:scanOptions:downloadOptions:installTonightConfig:coreDescriptor:downloadAtPhase:
summary
resetPhase
armInstall:
disarmInstall
asset
setAsset:
releaseDate
setReleaseDate:
sessionID
setSessionID:
scanOptions
setScanOptions:
downloadOptions
setDownloadOptions:
installOptions
setInstallOptions:
installTonightConfig
setInstallTonightConfig:
coreDescriptor
setCoreDescriptor:
atPhase
setAtPhase:
_asset
_releaseDate
_sessionID
_scanOptions
_downloadOptions
_installOptions
_installTonightConfig
_coreDescriptor
_atPhase
T@"MAAsset",&,N,V_asset
T@"NSDate",&,N,V_releaseDate
T@"NSString",&,N,V_sessionID
T@"SUScanOptions",&,N,V_scanOptions
T@"SUDownloadOptions",&,N,V_downloadOptions
T@"SUInstallOptions",&,N,V_installOptions
T@"NSString",&,N,V_installTonightConfig
T@"SUCoreDescriptor",&,N,V_coreDescriptor
Tq,N,V_atPhase
initWithScanOptions:
assetType
discretionary
mdmOptions
_mdmScanOption
T@"SUMDMScanOptions",R,&,N
scanType
restrictToIncremental
restrictToFull
allowSameVersion
downloadTimeoutSecs
T@"NSString",R,&,N
dealloc
isAlive
setAlive:
message
setMessage:
messageType
setMessageType:
_alive
_messageType
_message
alive
TB,N,GisAlive,V_alive
Ti,N,V_messageType
T@"NSString",&,N,V_message
shouldPerformActivationCheck:
isHRNMode
activationRecord
checkActivationServerStatus:
_createRequest:
_createHealthcheckResponseFromDictionary:
_parseResponse:error:
_logIPAddressIfNecessary
initWithDownloadOptions:
allowsCellular
allowExpensiveNetwork
assetAudienceChanged:
managedDeviceDelayPeriodChanged:
sharedInstance
registerProfileChangeListener
unregisterProfileChangeListener
profileChanged
setAssetAudience:
refreshAssetAudience
refreshDelayedState
startDelayWindow:
shouldDelayUpdate:
delayEndDate
isDelayed
delayPeriod
softwareUpdatePathRestriction
MCPathToSUMDMPath:
mdmDelay
setMdmDelay:
delegate
setDelegate:
_delegate
_assetAudience
_notifyToken
_workQueue
_mdmDelay
T@"SUManagedDeviceUpdateDelay",&,N,V_mdmDelay
T@"<SUManagedDeviceManagerDelegate>",&,N,V_delegate
scheduleInstallAlertAlarm:
cancelInstallAlertAlarm
scheduleAlarm:date:
cancelAlarm:
_csScheduler
isSplatScan
requiresPowerPluggedIn
skipPhase
deviceIsSupervised
additionalOptions
_additionalOptions
T@"NSDictionary",R,&,N,V_additionalOptions
_clientMessagabilityDidChange:
_clientForegroundnessDidChange:
_evaluateForegroundness
isScanning:
scanForUpdates:withResult:
autoScanAndDownloadIfAvailable:
descriptor:
descriptors:
isClearingSpaceForDownload:
isDownloading:
startDownload:
startDownloadWithOptions:withResult:
startDownloadWithMetadata:withResult:
cancelDownload:
purgeDownload:
pauseDownload:
resumeDownload:
updateDownloadMetadata:withResult:
updateDownloadOptions:withResult:
downloadAndInstallState:
updatesDownloadableWithOptions:alternateDownloadOptions:replyHandler:
deviceHasSufficientSpaceForDownloads:
deviceHasSufficientSpaceForDownload:
extraSpaceNeededForDownloadWithoutAppPurging:
eligibleRollbackWithOptions:withResult:
rollbackUpdateWithOptions:withResult:
previousRollback:withResult:
isRollingBack:
scheduleRollbackRebootForLater:
currentAutoInstallOperation:withResult:
cancelAutoInstallOperation:withResult:
consentToAutoInstallOperation:withResult:
currentPasscodePolicy:
isAutoUpdateEnabled:
isAutoUpdateScheduled:
presentAutoUpdateBanner:
isInstallationKeybagRequired:
isInstallationKeybagRequiredForDescriptor:result:
isUpdateReadyForInstallation:
isUpdateReadyForInstallationWithOptions:withResult:
installUpdate:
installUpdateWithInstallOptions:withResult:
installUpdateWithOptions:withResult:
setClientType:withResult:
slaVersion:
softwareUpdatePathRestriction:
isDelayingUpdates:
delayEndDate:
setMandatorySoftwareUpdateDictionary:
getMandatorySoftwareUpdateDictionary:
createInstallationKeybag:withResult:
destroyInstallationKeybag
enableAutomaticUpdateV2:
isAutomaticUpdateV2Enabled:
enableAutomaticDownload:
isAutomaticDownloadEnabled:
registerCSInstallPredicatesOnDate:
installServerConfiguration
setExclusiveControl:
recordSUAnalyticsEvent:
submitSUAnalyticsEvent:
submitAllSUAnalyticsEvents
submitSUAnalyticsEventsWithName:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
scanRequestDidStartForOptions:
scanRequestDidFinishForOptions:results:error:
scanDidCompleteForOptions:results:error:
automaticDownloadDidFailToStartForNewUpdateAvailable:withError:
scanRequestDidFinishForOptions:update:error:
scanDidCompleteWithNewUpdateAvailable:error:
downloadDidStart:
downloadProgressDidChange:
downloadDidFail:withError:
downloadDidFinish:
downloadDidFinish:withInstallPolicy:
downloadWasInvalidatedForNewUpdateAvailable:
downloadWasInvalidatedForNewUpdatesAvailable:
clearingSpaceForDownload:clearing:
installDidStart:
installDidFail:withError:
installDidFinish:
installPolicyDidChange:
rollbackReadyToStart:options:completion:
rollbackDidStart:
rollbackDidFail:withError:
rollbackSucceeded:
rollbackReadyForReboot:
installTonightScheduled:
managedInstallationRequested:
newOSDetected:
autoInstallManager:operationWasConsented:
autoInstallManager:didCancelOperation:
autoInstallManager:didExpireOperation:withError:
autoInstallManager:isReadyToInstall:
autoInstallManager:passcodePolicyChanged:forOperation:
downloadWasInvalidated:
unattendedInstallationKeybagCreated
manager
autoInstallManager
coreAnalyticsManager
runOnClients:
runOnClientsUntilStop:
handleClientRequest:client:withRequestCallBack:withErrorCallBack:
deviceHasSufficientSpaceForDownloadsIncludeAppPurging:replyHandler:
deviceHasSufficientSpaceForDownloadIncludeAppPurging:replyHandler:
deviceHasSufficientSpaceForDownloadIncludeAppPurging:descriptor:replyHandler:
_sendLatestStatusForClient:
clients
goUnderExclusiveControl
exitExclusiveControl
addClient:
removeClient:
underExclusiveControl
setUnderExclusiveControl:
_autoInstallManager
_coreAnalyticsManager
_manager
_clients
_followUpController
_clientQueue
_underExclusiveControl
TB,V_underExclusiveControl
initWithPath:
copyEventFromPath:
saveEventToDisk:
setEvent:
removeEvent:
removeEventsWithName:
removeAllEvents
submitEvent:
submitEventsWithName:
submitAllEvents
events
_queue_setEvent:
_queue_submitAllEvents
_queue_submitEvent:
savePath
_stateQueue
_savePath
T@"NSDictionary",R,&,N
T@"NSString",R,&,N,V_savePath
initWithRollbackOptions:
cancelActiveUpdate
rollbackOptions
_rollbackOptions
T@"SURollbackOptions",R,&,N
initWithInstallOptions:
T@"SUInstallOptions",R,&,N
rollbackDidFinish:
autoInstallOperationWasCancelled:
autoInstallOperationDidExpire:withError:
autoInstallOperationDidConsent:
autoInstallOperationIsReadyToInstall:withResult:
autoInstallOperationPasscodePolicyChanged:passcodePolicyType:
installTonightScheduled:operationID:
connectionQueue
serverInitAndResumeWork
runUntilIdleExit
_run
_clientForCurrentConnection
listener:shouldAcceptNewConnection:
_notifyServerStart
hasSufficientFreeSpace
setHasSufficientFreeSpace:
needsCacheDelete
setNeedsCacheDelete:
needsAppOffload
setNeedsAppOffload:
additionalBytesRequired
setAdditionalBytesRequired:
_hasSufficientFreeSpace
_needsCacheDelete
_needsAppOffload
_additionalBytesRequired
TB,N,V_hasSufficientFreeSpace
TB,N,V_needsCacheDelete
TB,N,V_needsAppOffload
TQ,N,V_additionalBytesRequired
hasSufficientSpaceWithOptions:error:
hasSufficientSpaceWithOptions:withCompletion:
makeRoomForUpdate:error:
makeRoomForUpdate:completion:
currentFreeSpaceForVolume:
options
setOptions:
callback
setCallback:
results
setResults:
error
setError:
_options
_callback
_results
_error
T@"SUScanOptions",&,N,V_options
T@?,C,N,V_callback
T@"SUCoreScanResults",&,N,V_results
T@"NSError",&,N,V_error
initWithConnection:
invalidate
proxy
setType:
wakeupIfNecessary
_isStateForeground:
_isStateMessagable:
_evaluateMessagability
_applicationStateChanged:
type
identifier
isApplication
isMessagable
isForeground
connection
isExclusiveClient
setIsExclusiveClient:
_appStateMonitor
_lastAppState
_type
_pid
_identifier
_isApplication
_isMessagable
_isForeground
_connection
_isExclusiveClient
T@"NSXPCConnection",R,N,V_connection
Ti,N,V_type
TB,N,V_isExclusiveClient
T@"NSString",R,N,V_identifier
Ti,R,N,V_pid
TB,R,N,V_isApplication
TB,R,N,V_isMessagable
TB,R,N,V_isForeground
T@"<SUManagerClientInterface>",R,D,N
scheduleStartupTasksIfNecessary
cancelAllStartupTasks
cancelAllAutoscanTasks
cancelAllAutodownloadTasks
scheduleAllAutoInstallUpdateTasks:
cancelAllAutoInstallTasks
scheduleBackgroundScanIfNecessary:scanType:
scheduleBackgroundScan:scanDate:
scheduleBackgroundScan:
scheduleSplatBackgroundScan:
scheduleDelayEndAutoScan:
cancelAllBackgroundScans
cancelAllEmergencyBackgroundScans
scheduleAutodownloadIfNecessary
scheduleAutoDownload
scheduleAutoDownloadWithDate:
cancelAutodownloadTask
scheduleAutoInstallExpirationTask:
cancelAutoInstallWindowExpirationTask
scheduleAutoInstallUnlockWindowStartTask:
cancelAutoInstallUnlockWindowStartTask
scheduleAutoInstallStartInstallTask:
scheduleAutoInstallStartInstallTaskWithDate:
setAutoInstallActivityStateDone
cancelAutoInstallStartInstallTask
_queue_cancelAutoInstallStartInstallTask
schedulePresentAutoUpdateBanner
cancelPresentAutoUpdateBanner
scheduleRollbackReboot:
cancelRollbackReboot
scheduleInstallAlertRegistration:
cancelInstallAlertRegistration
scheduleAnalyticsSubmissionIfNecessary
scheduleAnalyticsSubmission:
_activityNameHandlerMap
handleXPCEvent:
_queue_handleActivity:info:
_randomizedAutoScanDelayForType:
_autoScanTimeIntervalForType:
_activityIsScheduled:cancelIfExpired:
nextScheduledAutoScan
_queue_setAutoinstallActivity:
setAutoinstallActivity:
_queue_handleScanIntervalConfigChange:
_queue_handleAutoScan:info:rescheduler:
scanTypeForActivityName:
_queue_handleAutoDownload:info:
_queue_handleAutoInstallStart:info:
_queue_handleAutoInstallEnd:info:
_queue_handleAutoInstallUnlock:info:
_queue_handleInstallAlert:info:
_queue_handlePresentBanner:info:
_queue_handleServerConfigScan:info:
_queue_handleAnalyticsSubmission:info:
_queue_handleCancelPresentBannerOnUnlock
_queue_handleRollbackReboot:info:
_schedulerQueue
_autoInstallActivity
initWithPreferredDescriptor:alternateDescriptor:
latestUpdate
preferredDescriptor
setPreferredDescriptor:
alternateDescriptor
setAlternateDescriptor:
_preferredDescriptor
_alternateDescriptor
T@"SUCoreDescriptor",&,N,V_preferredDescriptor
T@"SUCoreDescriptor",&,N,V_alternateDescriptor
beginTransaction:
beginTransaction:keepAlive:
endTransaction:
hasOpenTransactionForName:
copyTransactions
setKeepAliveClearable:
isKeepAliveEnabled
clearKeepAliveIfNecessary:
_hasOpenTransactionForName:
_toggleKeepAliveStatus
_setKeepAlive:
_isKeepAliveEnabled:
_openTransactions
_keepAliveTransactions
_keepAliveClearable
persistStashOnUnlock
rollbackRebootLaterTime
passcodePolicyInterface:passcodePolicyTypeChanged:
initWithManager:
resumeOrResetStateIfNecessary
_queue_resumeOrResetStateIfNecessary
isAutoDownload
isAutoUpdateEnabled
isCurrentUpdateAutoUpdate
currentAutoInstallOperationCreatingIfNecessary:error:
_queue_currentAutoInstallOperationCreatingIfNecessary:notifyIfExpired:error:
cancelAutoInstallOperation:
_queue_cancelAutoInstallOperation:
consentToAutoInstallOperation:
_queue_consentToAutoInstallOperation:
trySchedulingAnotherTimeInInstallWindow:
_queue_trySchedulingAnotherTimeInInstallWindow:
noteAutoInstallOperationUnlockWindowDidBegin
isAutoInstallOperationReadyToBegin
_queue_isAutoInstallOperationReadyToBegin
noteAutoInstallOperationWantsToBegin
_queue_noteAutoInstallOperationWantsToBegin
noteAutoInstallOperationDidExpire
_queue_noteAutoInstallOperationDidExpire
noteInstallDidFinish:
noteInstallDidFail:withError:
_queue_isExpired
_queue_clearAutoInstallOperationForReason:disableKeybagStash:
_createOperationModel
_createForecast
operationModel
_installAttemptDone
state
passcodePolicy
followUpController
_state
_operationModel
_passcodePolicy
_autoInstallAttempted
T@"<SUAutoInstallManagerDelegate>",N,V_delegate
T@"_SUAutoInstallOperationModel",R,&,N,V_operationModel
T@"SUState",R,&,N,V_state
T@"SUAutoUpdatePasscodePolicy",R,&,N,V_passcodePolicy
T@"SUSFollowUpController",R,&,N,V_followUpController
connection:didFailWithError:
connectionShouldUseCredentialStorage:
connection:willSendRequestForAuthenticationChallenge:
connection:canAuthenticateAgainstProtectionSpace:
connection:didReceiveAuthenticationChallenge:
connection:didCancelAuthenticationChallenge:
connection:willSendRequest:redirectResponse:
connection:didReceiveResponse:
connection:didReceiveData:
connection:needNewBodyStream:
connection:didSendBodyData:totalBytesWritten:totalBytesExpectedToWrite:
connection:willCacheResponse:
connectionDidFinishLoading:
initWithRequest:
main
_finished
request
setRequest:
response
setResponse:
data
setData:
allowRedirects
setAllowRedirects:
statusCode
setStatusCode:
_request
_data
_response
_statusCode
_allowRedirects
_done
_saveData
T@"NSURLRequest",&,N,V_request
T@"NSMutableData",&,N,V_data
T@"NSURLResponse",&,N,V_response
Tq,N,V_statusCode
TB,N,V_allowRedirects
sendSynchronousRequest:allowRedirects:returningResponse:error:
core
setCore:
_core
_rollingBack
T@"SUManagerCore",W,N,V_core
            cacheDeleteUrgency: %@
            checkAvailableSpace: %@
            updateMetricContext: %@
            updateMetricEventFields: %@
/private/var
neededBytes
enableCachDelete
enableAppOffload
cacheDeleteUrgency
appOffloadUrgency
cachDeleteVolume
appOffloadVolume
controllerVersion
context
            updateMetricEventFields: %@
DownloadPhaseUnknown
DownloadPhaseBegin
DownloadPhaseDownloading
DownloadPhaseDownloaded
DownloadPhasePrepared
DownloadPhaseInstalling
DownloadPhaseUndefined
asset:%@ releaseDate:%@ sessionID:%@ scanOptions:%@ downloadOptions:%@ installTonightConfig:%@ atPhase:%@, coreDescriptor:%@
SoftwareUpdateServices launched
com.apple.notifyd.matching
v16@?0@"NSObject<OS_xpc_object>"8
Daemon recived notification: %@
Daemon handling notification: %@
v8@?0
            assetType:%@
            discretionary: %@
            allowsCellular: %@
            requiresPowerPluggedIn: %@
            restrictToIncremental: %@
            restrictToFull: %@
            allowSameVersion: %@
            sessionID: %@
            downloadTimeoutSecs: %d
DeviceConfigurationFlags
isAlive: %@
              Message: %@
              MessageType: %@
HRN mode enabled in activation record. Should not perform activation check
DeviceManagementClient
HRN mode enabled with feature flag. Should not perform activation check
Skipping activation check due to install options
Activation record: %@
No cloud configuration flags found in activation record
Failed to copy activation record. Error: %@
Attempting activation healthcheck: #%d...
Successfully connected for the healthcheck, but failed to parse the result: %@
Unable to contact the activation healthcheck after %d attempts: %@
Unable to create request for activation healthcheck: %@
CTErrorCode
Unable to retrieve telephony properties: %@
Unable to create connection to telephony.
SerialNumber
IMEI
ICCID
IMSI
MEID
https://albert.apple.com/WebObjects/ALUnbrick.woa/wa/ALActivationMonitor/checkUnbrickHealth
POST
iOS/SoftwareUpdate
User-Agent
Sending activation healthcheck request: %@
Status
Message
MessageType
WARN
ERROR
Unable to parse result from albert healthcheck: %@
Albert healthcheck result was not a dictionary: %@
albert.apple.com
Found IP address for activation healthcheck server: %@
No IP address found for activation healthcheck server.
com.apple.softwareupdateservices.mdmWorkQueue
Received profile change notification in registerProfileChangeListener
v12@?0i8
recived profile change notification
Asset audience changed from:%@ to:%@
Overridding shouldDelay to YES
delay interval is outside valid range. Defaulting to %d day delay interval
Setting delay period to %lu days
Setting isDelayed to %d
Setting delayedStartTime to %@
Delayed updates not set in profile
delayedStartDate is nil. Not delaying
delayedStartDate is in the future. Resetting to now
Overriding delay interval via asset XML:  %llu
Overriding delay interval with CFPrefereneces setting:  %llu
Time delayed:  %llu
Time to delay: %llu
Delay timer has expired. No longer delaying update
Delay timer still active. Delaying update
ShouldDelay = %d
com.apple.alarm
Handling wakeup alarm
No event name
installAlertAlarmName
Registering ContextStore Predicates
B16@?0@"NSString"8
ContextStore reports ready for installation UI
Scheduling alarm: %@
Date
Canceling alarm: %@
            discretionary: %@
            allowsCellular: %@
            requiresPowerPluggedIn: %@
            downloadTimeoutSecs: %d
            supervised: %@
com.apple.softwareupdateservicesd.clientQueue
/var/MobileSoftwareUpdate/Controller/SUCoreAnalytics/
Failed to create directory %@ for SUCoreAnalytics: %@
client %@ called %s
-[SUManagerServer isScanning:]_block_invoke
v16@?0@"NSError"8
-[SUManagerServer scanForUpdates:withResult:]_block_invoke
v24@?0@"SUScanResults"8@"NSError"16
-[SUManagerServer autoScanAndDownloadIfAvailable:]_block_invoke
-[SUManagerServer isClearingSpaceForDownload:]_block_invoke
-[SUManagerServer isDownloading:]_block_invoke
-[SUManagerServer startDownload:]_block_invoke
-[SUManagerServer startDownloadWithOptions:withResult:]_block_invoke
-[SUManagerServer startDownloadWithMetadata:withResult:]_block_invoke
-[SUManagerServer cancelDownload:]_block_invoke
-[SUManagerServer purgeDownload:]_block_invoke
-[SUManagerServer pauseDownload:]_block_invoke
-[SUManagerServer resumeDownload:]_block_invoke
-[SUManagerServer updateDownloadMetadata:withResult:]_block_invoke
-[SUManagerServer updateDownloadOptions:withResult:]_block_invoke
-[SUManagerServer downloadAndInstallState:]_block_invoke
-[SUManagerServer updatesDownloadableWithOptions:alternateDownloadOptions:replyHandler:]_block_invoke
-[SUManagerServer deviceHasSufficientSpaceForDownloads:]_block_invoke
device does%@ have enough space for preferred update download, and does%@ have enough space for alternate update download
 not
v48@?0B8B12@"NSNumber"16@"NSNumber"24@"NSError"32@"NSError"40
-[SUManagerServer deviceHasSufficientSpaceForDownload:]_block_invoke
device does%@ have enough space for download
v28@?0B8@"NSNumber"12@"NSError"20
-[SUManagerServer extraSpaceNeededForDownloadWithoutAppPurging:]_block_invoke
-[SUManagerServer isInstallationKeybagRequired:]_block_invoke
-[SUManagerServer isInstallationKeybagRequiredForDescriptor:result:]_block_invoke
-[SUManagerServer isUpdateReadyForInstallationWithOptions:withResult:]_block_invoke
v24@?0B8B12@"NSError"16
-[SUManagerServer installUpdateWithOptions:withResult:]_block_invoke
Install Update Failed on AutoSU. Going to schedule retry
v20@?0B8@"NSError"12
-[SUManagerServer installUpdateWithInstallOptions:withResult:]_block_invoke
-[SUManagerServer slaVersion:]_block_invoke
-[SUManagerServer softwareUpdatePathRestriction:]_block_invoke
-[SUManagerServer isDelayingUpdates:]_block_invoke
-[SUManagerServer delayEndDate:]_block_invoke
-[SUManagerServer setMandatorySoftwareUpdateDictionary:]_block_invoke
-[SUManagerServer getMandatorySoftwareUpdateDictionary:]_block_invoke
-[SUManagerServer currentAutoInstallOperation:withResult:]_block_invoke
-[SUManagerServer cancelAutoInstallOperation:withResult:]_block_invoke
-[SUManagerServer consentToAutoInstallOperation:withResult:]_block_invoke
-[SUManagerServer currentPasscodePolicy:]_block_invoke
-[SUManagerServer isAutoUpdateEnabled:]_block_invoke
-[SUManagerServer isAutoUpdateScheduled:]_block_invoke
-[SUManagerServer enableAutomaticUpdateV2:]_block_invoke
AutomaticUpdateV2 enabled : %d
Scheduled auto install operation: %@
Error scheduling auto install operation: %@
-[SUManagerServer isAutomaticUpdateV2Enabled:]_block_invoke
-[SUManagerServer enableAutomaticDownload:]_block_invoke
Setting automatic download enabled : %@
-[SUManagerServer isAutomaticDownloadEnabled:]_block_invoke
-[SUManagerServer registerCSInstallPredicatesOnDate:]_block_invoke
-[SUManagerServer presentAutoUpdateBanner:]_block_invoke
-[SUManagerServer rollbackUpdateWithOptions:withResult:]_block_invoke
-[SUManagerServer scheduleRollbackRebootForLater:]_block_invoke
-[SUManagerServer createInstallationKeybag:withResult:]_block_invoke
-[SUManagerServer destroyInstallationKeybag]_block_invoke
-[SUManagerServer setExclusiveControl:]_block_invoke
Saving event %@
Submitting event %@
Submitting all CoreAnalytics events
Submitting all CoreAnalytics events matching name %@
v24@?0@"SUManagerServerClient"8^B16
%s exiting exclusive control
-[SUManagerServer exitExclusiveControl]
Added client: %@, count: %lu
Removed client: %@, count: %lu
v16@?0@"SUManagerServerClient"8
Auto install operation cancelled..Dismissing AutoUpdateBanner
isReadyToInstall (SUS) Returned NO
isReadyToInstall (SB) Returned NO. Error: %@
isReadyToInstall Returned YES
com.apple.SUServices.SUCoreAnalyticsManagerQueue
Invalid file type found for even at path: %@ [%@] (skipping)
Unknown error
Failed to read contents of event file: %@ (%@)
Invalid event data for :%@ (%@)
Save called on object with no path specified
Invalid event passed to saveEvent.Skipping
%@_%@%s
.suanalytics
Saving event %@:%@ to %@
Unable to save SU coreanalytics event(%@)
Unknown Archiver Error
Successfully saved event
Unable to remove event %@ : %@ : %@
Unable to remove event file %@: %@
Unknown Error
Succssfully removed event file %@
Successfully removed event file %@
Submitted event %@
Unable to find/reconstruct stashed event for event %@ with uuid %@
Failed to remove event file after event submission %@: %@
Event %@ with uuid %@ does not exist
Invalid event name passed to submitEventWithName
Failed to remove event file %@: %@
Unable to read event at %@ for submission..Removing and moving on
Notifying observers of start
/System/Library/PrivateFrameworks/SoftwareUpdateServicesUI.framework/Plugins/SoftwareUpdateServicesUIPlugin.servicebundle
Starting the server: keepAlive = %@
ENABLED
DISABLED
Starting the server.
com.apple.softwareupdateservices.connectionQueue
SUMinimumLaunchTransaction
Software update daemon continuing to run - transactions: %@
Software update daemon continuing to run - busy.
com.apple.softwareupdateservices.client.allowed
connection refused for unentitled client %@
SUAddClientTransaction
v24@?0@"SUSpaceCheckResults"8@"NSError"16
SUClientMessagabilityChangedNotification
SUClientForegroundnessChangedNotification
v16@?0@"NSDictionary"8
initiated client %@
com.apple.softwareupdateservicesd.wakeup
Trying to waking up client...: %@
Unable to wakeup client: %@
Client [%@:<%p>] - messagability changed: isMessagable? %@
Client [%@:<%p>] - foregroundness changed: isForeground? %@
Client <%p>:
            
type: %@
            
pid: %@
            
bundle ID: %@
            
application? %@
            
messagable? %@
            
foreground? %@
            
isExclusiveClient? %@
unlockCallbackPersistStash
com.apple.softwareupdateservicesd.activity.autoScan
com.apple.softwareupdateservicesd.activity.emergencyAutoScan
com.apple.softwareupdateservicesd.activity.splatAutoScan
com.apple.softwareupdateservicesd.activity.delayEndScan
com.apple.softwareupdateservicesd.activity.autoDownload
com.apple.softwareupdate.autoinstall.startInstall
com.apple.softwareupdateservicesd.activity.autoInstallEnd
com.apple.softwareupdateservicesd.activity.autoInstallUnlock
com.apple.softwareupdateservicesd.activity.presentBanner
com.apple.softwareupdateservicesd.activity.installAlert
com.apple.softwareupdateservicesd.activity.analyticsSubmission
com.apple.softwareupdateservicesd.SUCoreConfigScheduledScan
com.apple.softwareupdateservicesd.activity.rollbackReboot
com.apple.softwareupdateservicesd.scheduler
Expired or no background scan activity found. Rescheduling for %@
Not scheduling auto download: Currently Downloading
Failed to set %@ activity state to XPC_ACTIVITY_STATE_DONE
Internal
Setting analytics submission delay to %u
Expired or no analytics submission scheduled. Rescheduling for %@
Analytics event already scheduled
v24@?0@"NSString"8@"NSDictionary"16
Received activity: %@: %@
schedulerAction
No handler block found for activity Name: %@
Scan interval server configuration changed
updateDate
Determining days since update
Unable to read updateDate file..bailing
%ld(bucketed) days since last successful ota
Failed to read valid update date
Submitting SU Coreanalytics events
            Preferred Descriptor: %@
            Alternate Descriptor: %@
com.apple.softwareupdateservicesd.SUTransactionManager
Beginning transaction: %@%@
 (with keepAlive)
com.apple.SoftwareUpdateServices.
ERROR: trying to start a transaction with already used name %@%@
Ended transaction: %@
ERROR: trying to end a non existent transaction with name %@
Keep alive status: %@
Enabled
Disabled
softwareupdateservicesd could not toggle keep alive status to launchd.
softwareupdateservicesd could not read keep alive status from launchd.
com.apple.softwareupdateservices.autoInstallManager.stateQueue
New OS detected. Clearing last SUAutoInstallOperation
Saved SUAutoInstallOperation is expired
There is no downloaded asset. Clearing last SUAutoInstallOperation
resumeOrResetStateIfNecessary: Dismissing AutoUpdateBanner if present
Last AutoInstall operation found
Error creating new autoInstallOperationModel: %@
Unlock window passed. Firing unlock window timer manually
AutoSU disabled. Not scheduling AutoSU timers
Cancel
AutoSU consented
User consented during unlock window. Persisting stash
Auto update consented and no passcode set. Displaying banner
Window ending at %@, attempting to reschedule auto install for date %@
Unlock window did begin
Ready to install timer fired, but operation model is nil
Ready to install timer fired, but operation was not agreed to
Not ready to begin AutoInstall operation. Is update ready for install? %@
Could not install due to %@, retrying in 15 mins.
Could not install due to %@, and should not retry. Canceling auto install
AutoUpdate cannot be installed and user has been informed of the update..Presenting error alert
AutoUpdate cannot be installed, but user is not yet aware of the same..NOT presenting error alert
AutoInstallOperation expired
unattendedInstallationKeybagCreated: isAutoUpdate and isAutoDownload are true..Scheduling presentation of AutoUpdateBanner
clearing autoInstallOperation for reason: %@
Setting isInstallTonightScheduled to NO
Connection completed successfully.
Connection failed with error: %@
Connection received redirect request to: %@
Connection received response: %d
Connection received %d bytes of data.
SUPolicyGlobal
SUSpacePurgeOptions
NSSecureCoding
NSCoding
NSCopying
SUPolicyGlobalOptions
SUManagerEngineDownloadDescriptor
SUSFollowUpController
SUSFollowUpUpdateAvailable
SUPolicyScanBrain
SUPolicyScan
SUActivationStatusResponse
SUActivationService
SUPolicyDownload
SUManagedDeviceManager
SUSFollowUpRollbackDetected
SUXPCAlarm
SUSFollowUpAutoUpdate
SUPolicyScanSoftwareUpdate
SUSFollowUp
SUPolicy
SUManagerServer
SUManagerServerInterface
SUManagerDelegate
NSObject
SUAutoInstallManagerDelegate
SUManagerObserver
SUAnalyticsManager
SUPolicyRollback
SUSFollowUpBadgeOnly
SUPolicyApply
SUManagerClientInterface
Daemon
SUSpaceCheckResults
SUSpace
SUManagerScanRequest
SUManagerServerClient
SUManagerInterfaceFactory
SUScheduler
SUPolicyDocumentationDownload
SUCoreScanResults
SUTransactionManager
SUPolicyScanSUDocumentation
SUAutoInstallManager
SUAutoUpdatePasscodePolicyObserver
SUHttpOperation
NSURLConnectionDataDelegate
NSURLConnectionDelegate
SURollbackController
@16@0:8
@24@0:8@16
i16@0:8
B16@0:8
@20@0:8B16
v24@0:8@16
v16@0:8
@"SUPolicyGlobalOptions"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^{_NSZone=}16
Q16@0:8
v24@0:8Q16
v20@0:8B16
v20@0:8i16
q16@0:8
v24@0:8q16
@"NSObject<OS_dispatch_queue>"
@"NSString"
@"NSDictionary"
@24@0:8q16
@80@0:8@16@24@32@40@48@56@64q72
B24@0:8@16
@"MAAsset"
@"NSDate"
@"SUScanOptions"
@"SUDownloadOptions"
@"SUInstallOptions"
@"SUCoreDescriptor"
@"SUMDMScanOptions"
@24@0:8^@16
@32@0:8@16^@24
Q24@0:8q16
@"SUManagedDeviceUpdateDelay"
@"<SUManagedDeviceManagerDelegate>"
v32@0:8@16@24
@"SUCSScheduler"
v24@0:8@?16
v32@0:8@16@?24
v40@0:8@16@24@?32
v28@0:8B16@?20
v28@0:8i16@?20
v24@0:8@?<v@?B@"NSError">16
v32@0:8@"SUScanOptions"16@?<v@?@"SUScanResults"@"NSError">24
v24@0:8@?<v@?@"SUScanResults"@"NSError">16
v24@0:8@?<v@?@"SUDescriptor"@"NSError">16
v32@0:8@"SUDownloadOptions"16@?<v@?B@"NSError">24
v32@0:8@"SUDownloadMetadata"16@?<v@?B@"NSError">24
v24@0:8@?<v@?@"SUDownload"@"SUInstallPolicy"@"_SUAutoInstallOperationModel"@"NSError">16
v40@0:8@"SUDownloadOptions"16@"SUDownloadOptions"24@?<v@?BB@"NSError"@"NSError">32
v24@0:8@?<v@?BB@"NSError"@"NSError">16
v24@0:8@?<v@?@"NSNumber"@"NSError">16
v32@0:8@"SURollbackOptions"16@?<v@?@"SURollbackDescriptor"@"NSError">24
v32@0:8@"SURollbackOptions"16@?<v@?B@"SURollbackDescriptor"@"NSError">24
v24@0:8@?<v@?B@"SURollbackDescriptor"@"NSError">16
v28@0:8B16@?<v@?@"_SUAutoInstallOperationModel"@"NSError">20
v32@0:8@"NSUUID"16@?<v@?B@"NSError">24
v24@0:8@?<v@?Q@"NSError">16
v32@0:8@"SUDescriptor"16@?<v@?B@"NSError">24
v32@0:8@"SUInstallOptions"16@?<v@?B@"NSError">24
v32@0:8@"NSArray"16@?<v@?B@"NSError">24
v28@0:8i16@?<v@?B@"NSError">20
v24@0:8@?<v@?@"NSDate"@"NSError">16
v24@0:8@"NSDictionary"16
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
v32@0:8@"SUKeybagOptions"16@?<v@?B@"NSError">24
v24@0:8@"NSDate"16
v24@0:8@"SUAnalyticsEvent"16
v24@0:8@"NSString"16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v40@0:8@16@24@32
v28@0:8@16B24
v24@0:8@"SUScanOptions"16
v40@0:8@"SUScanOptions"16@"SUScanResults"24@"NSError"32
v32@0:8@"SUDescriptor"16@"NSError"24
v40@0:8@"SUScanOptions"16@"SUDescriptor"24@"NSError"32
v24@0:8@"SUDownload"16
v32@0:8@"SUDownload"16@"NSError"24
v32@0:8@"SUDownload"16@"SUInstallPolicy"24
v24@0:8@"SUDescriptor"16
v24@0:8@"SUCoreScanResults"16
v28@0:8@"SUDownload"16B24
v24@0:8@"SUInstallPolicy"16
v40@0:8@"SUCoreRollbackDescriptor"16@"SURollbackOptions"24@?<v@?B@"SURollbackDescriptor"@"NSError">32
v24@0:8@"SUCoreRollbackDescriptor"16
v32@0:8@"SUCoreRollbackDescriptor"16@"NSError"24
v40@0:8@16Q24@32
v32@0:8@"SUAutoInstallManager"16@"_SUAutoInstallOperationModel"24
v40@0:8@"SUAutoInstallManager"16@"_SUAutoInstallOperationModel"24@"NSError"32
v40@0:8@"SUAutoInstallManager"16Q24@"_SUAutoInstallOperationModel"32
v48@0:8r*16@24@?32@?40
v36@0:8B16@20@?28
@"SUAutoInstallManager"
@"SUAnalyticsManager"
@"<SUManagerInterface>"
@"NSMutableArray"
@"SUSFollowUpController"
@"SURollbackOptions"
v32@0:8@16Q24
v28@0:8B16@20
v24@0:8@"SUScanResults"16
v40@0:8@"SURollbackDescriptor"16@"SURollbackOptions"24@?<v@?B@"SURollbackDescriptor"@"NSError">32
v24@0:8@"SURollbackDescriptor"16
v32@0:8@"SURollbackDescriptor"16@"NSError"24
v24@0:8@"NSUUID"16
v32@0:8@"NSUUID"16@"NSError"24
v32@0:8@"NSUUID"16Q24
v28@0:8B16@"NSUUID"20
B32@0:8@16@24
B32@0:8@16^@24
Q24@0:8@16
@?16@0:8
@"SUCoreScanResults"
@"NSError"
B20@0:8I16
@"BKSApplicationStateMonitor"
@"NSXPCConnection"
v32@0:8@16^i24
d20@0:8i16
B28@0:8@16B24
v36@0:8@16@24B32
i24@0:8@16
@"NSObject<OS_xpc_object>"
@32@0:8@16@24
B24@0:8^@16
@"NSMutableDictionary"
@"NSMutableSet"
v32@0:8@"SUAutoUpdatePasscodePolicy"16Q24
@28@0:8B16^@20
@32@0:8B16B20^@24
v24@0:8d16
@"<SUAutoInstallManagerDelegate>"
@"SUState"
@"_SUAutoInstallOperationModel"
@"SUAutoUpdatePasscodePolicy"
v32@0:8@"NSURLConnection"16@"NSError"24
B24@0:8@"NSURLConnection"16
v32@0:8@"NSURLConnection"16@"NSURLAuthenticationChallenge"24
B32@0:8@"NSURLConnection"16@"NSURLProtectionSpace"24
@40@0:8@16@24@32
v48@0:8@16q24q32q40
@"NSURLRequest"40@0:8@"NSURLConnection"16@"NSURLRequest"24@"NSURLResponse"32
v32@0:8@"NSURLConnection"16@"NSURLResponse"24
v32@0:8@"NSURLConnection"16@"NSData"24
@"NSInputStream"32@0:8@"NSURLConnection"16@"NSURLRequest"24
v48@0:8@"NSURLConnection"16q24q32q40
@"NSCachedURLResponse"32@0:8@"NSURLConnection"16@"NSCachedURLResponse"24
v24@0:8@"NSURLConnection"16
@"NSURLConnection"
@"NSURLRequest"
@"NSMutableData"
@"NSURLResponse"
@44@0:8@16B24^@28^@36
@"SUManagerCore"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>CFBundleAllowMixedLocalizations</key>
<true/>
<key>CFBundleDevelopmentRegion</key>
<string>English</string>
<key>CFBundleIdentifier</key>
<string>com.apple.softwareupdateservicesd</string>
<key>CFBundleName</key>
<string>${PRODUCT_NAME}</string>
<key>CFBundleExecutable</key>
<string>${EXECUTABLE_NAME}</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleVersion</key>
<string>1</string>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>allow-softwareupdated</key>
<true/>
<key>application-identifier</key>
<string>com.apple.softwareupdateservicesd</string>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>spi</string>
<string>identity</string>
</array>
<key>com.apple.appstored.private</key>
<true/>
<key>com.apple.coreduetd.allow</key>
<true/>
<key>com.apple.coreduetd.context</key>
<true/>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.frontboard.shutdown</key>
<true/>
<key>com.apple.frontboardservices.display-layout-monitor</key>
<true/>
<key>com.apple.keystore.device</key>
<true/>
<key>com.apple.keystore.lockassertion</key>
<true/>
<key>com.apple.keystore.stash.access</key>
<true/>
<key>com.apple.keystore.stash.persist</key>
<true/>
<key>com.apple.mobile.deleted.AllowFreeSpace</key>
<true/>
<key>com.apple.private.CacheDelete</key>
<array>
<string>PURGE_SPECIAL_CASE_ENTITLEMENT</string>
<string>PURGE_ENTITLEMENT</string>
<string>CLIENT_ENTITLEMENT</string>
<string>PURGEABLE_ENTITLEMENT</string>
<string>SERVICE_REQUEST_ENTITLEMENT</string>
<string>DEMOTABLE_APPS_ENTITLEMENT</string>
<string>DEMOTE_APPS_ENTITLEMENT</string>
</array>
<key>com.apple.private.assets.accessible-asset-types</key>
<array>
<string>com.apple.MobileAsset.SplatSoftwareUpdate</string>
<string>com.apple.MobileAsset.SoftwareUpdateConfiguration</string>
<string>com.apple.MobileAsset.VoiceServicesVocalizerVoice</string>
<string>com.apple.MobileAsset.VoiceServices.CustomVoice</string>
<string>com.apple.MobileAsset.VoiceServices.GryphonVoice</string>
<string>com.apple.MobileAsset.SoftwareUpdate</string>
<string>com.apple.MobileAsset.SoftwareUpdateDocumentation</string>
</array>
<key>com.apple.private.assets.change-daemon-config</key>
<true/>
<key>com.apple.private.followup</key>
<true/>
<key>com.apple.private.kernel.darkboot</key>
<true/>
<key>com.apple.private.network.socket-delegate</key>
<true/>
<key>com.apple.private.networkextension.configuration</key>
<true/>
<key>com.apple.rootless.storage.coreduet_knowledge_store</key>
<true/>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.coreduetd.context</string>
</array>
<key>com.apple.security.iokit-user-client-class</key>
<array>
<string>AGXDevice</string>
<string>AGXDeviceUserClient</string>
<string>AGXSharedUserClient</string>
<string>AGXCommandQueue</string>
<string>IOAVControllerConcreteUserClient</string>
<string>IOMobileFramebufferUserClient</string>
<string>IOSurfaceRootUserClient</string>
<string>RootDomainUserClient</string>
</array>
<key>com.apple.security.system-container</key>
<true/>
<key>com.apple.springboard-ui.client</key>
<true/>
<key>com.apple.springboard.activateRemoteAlert</key>
<true/>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>com.apple.springboard.remote-alert</key>
<true/>
<key>com.apple.springboard.software-update-service.passcode-policy</key>
<true/>
<key>com.apple.telephonyutilities.callservicesd</key>
<array>
<string>access-calls</string>
</array>
<key>com.apple.wifi.manager-access</key>
<true/>
</dict>
</plist>
