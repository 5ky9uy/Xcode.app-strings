initWithHealthStore:
validateRecalibrateEstimatesRequestRecord:error:
_finishRequestWithError:
_configureApplicationStateMonitor
source
name
sampleType
effectiveDate
_configureAlertControllerWithSourceName:sampleType:effectiveDate:
_hostDidTerminate
_hostApplicationBundleIdentifier
arrayWithObjects:count:
initWithBundleIDs:states:
objectForKeyedSubscript:
integerValue
_hostApplicationStateDidChange:
setHandler:
errorWithDomain:code:userInfo:
viewWillAppear:
presentingViewController
presentViewController:animated:completion:
viewDidDisappear:
code
stringByAppendingString:
localizedStringForKey:value:table:
stringWithFormat:
alertControllerWithTitle:message:preferredStyle:
hk_error:description:
_finishWithError:
actionWithTitle:style:handler:
addAction:
recalibrateEstimatesForSampleType:effectiveDate:completion:
isViewLoaded
_healthPrivacyHostViewController
didFinishWithError:
_remoteViewControllerProxy
_remoteViewControllerInterface
_exportedInterface
setRequestRecord:completion:
authorizationStore
setAuthorizationStore:
alertViewController
setAlertViewController:
transactionError
setTransactionError:
requestCompletion
setRequestCompletion:
applicationStateMonitor
setApplicationStateMonitor:
.cxx_destruct
_authorizationStore
_alertViewController
_transactionError
_requestCompletion
_applicationStateMonitor
T@"HKAuthorizationStore",&,N,V_authorizationStore
T@"UIAlertController",&,N,V_alertViewController
T@"NSError",&,N,V_transactionError
T@?,C,N,V_requestCompletion
T@"BKSApplicationStateMonitor",&,N,V_applicationStateMonitor
hk_appTintColor
appearance
setTintColor:
processInfo
processName
initWithNibName:bundle:
fetchAuthorizationContextForPromptSession:error:
sessionIdentifier
samplesRequiringAuthorization
metadata
_beginAuthorizationSessionWithIdentifier:
_pickerControllerForDocuments
_pickerControllerForSignedClinicalData
initWithDocuments:presentationStyle:
setDelegate:
setSource:
relevantDate
compare:
sortedArrayUsingComparator:
signedRecordsForClinicalRecords:
recordTypes
initWithClinicalRecords:signedRecords:recordTypes:
setSessionIdentifier:
firstObject
expectedObjectType
_pickerControllerForObjectType:
identifier
hk_error:format:
initWithRootViewController:
setModalPresentationStyle:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
isEqual:
_configureNavigationController
beginAuthorizationDelegateTransactionWithSessionIdentifier:sourceHandler:errorHandler:
endAuthorizationDelegateTransactionWithSessionIdentifier:error:
countByEnumeratingWithState:objects:count:
signedClinicalDataRecordForVerifiableClinicalRecord:
originIdentifier
setObject:forKeyedSubscript:
copy
signedClinicalDataRecordType
predicateForMedicalRecordsWithSignedClinicalDataOriginIdentifier:
initWithSampleType:predicate:
_queryMedicalRecordsWithQueryDescriptors:completion:
initWithQueryDescriptors:limit:resultsHandler:
healthStore
executeQuery:
vaccinationRecordType
diagnosticTestReportType
diagnosticTestResultType
addObject:
presentedViewController
allSamples
UUID
enabledSamples
bundleIdentifier
setObjectAuthorizationStatuses:forBundleIdentifier:sessionIdentifier:completion:
dismissViewControllerAnimated:completion:
setPromptSession:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
pickerControllerDidFinish:error:
medicalRecordsForVerifiableClinicalRecord:
setHealthStore:
pickerController
setPickerController:
promptSession
currentSource
setCurrentSource:
setSamplesRequiringAuthorization:
setMetadata:
_healthStore
_pickerController
_promptSession
_sessionIdentifier
_currentSource
_samplesRequiringAuthorization
_metadata
T@"HKHealthStore",&,N,V_healthStore
T@"UIViewController<HKHealthPrivacyServicePickerController>",&,N,V_pickerController
T@"HKObjectAuthorizationPromptSession",&,N,V_promptSession
T@"NSUUID",C,N,V_sessionIdentifier
T@"HKSource",C,N,V_currentSource
T@"NSArray",C,N,V_samplesRequiringAuthorization
T@"HKObjectAuthorizationPromptSessionMetadata",C,N,V_metadata
viewDidLoad
show
hk_allElementsUnique
count
setRequestRecord:
setPresentationRequests:
currentTransactionSource
requestRecord
presentationRequests
_presentRequestIfNeeded:
currentTransactionSessionIdentifier
setPresentedRequest:
_promptControllerForPresentationRequest:source:
shouldPresent
_didFinishPresentingRequestWithError:
presentedRequest
lastObject
_isPresentingLastRequest
indexOfObject:
objectAtIndexedSubscript:
_presentNextRequest
type
_promptControllerForClinicalHealthRecordsPresentationRequest:source:
_promptControllerForHealthDataPresentationRequest:source:
healthRecordsStore
typesRequiringReadAuthorization
initWithHealthStore:healthRecordsStore:source:typesRequestedForReading:
setAuthorizationController:
readUsageDescription
setReadUsageDescription:
initWithContext:style:
initWithContext:viewController:
setTitle:
initWithFormat:
setHeaderText:
setButtonText:
hk_sequencingButtonWithTitle:accessibilityFormatString:
setNavigationButton:
delegate
initWithHealthStore:style:
setTypesToRead:
typesRequiringShareAuthorization
setTypesToShare:
shareUsageDescription
setUpdateDescription:
setShareDescription:
researchStudyUsageDescription
setResearchStudyUsageDescription:
shouldDismissWhenBackgrounded
_appStateTerminationUpperBound
setCurrentTransactionSessionIdentifier:
setCurrentTransactionSource:
setRequestRecord:presentationRequests:
promptControllerDidFinish:error:
navigationController
setNavigationController:
_showAtViewLoad
_showAtNextSourceFetch
_healthRecordsStore
_navigationController
_requestRecord
_presentationRequests
_currentTransactionSessionIdentifier
_currentTransactionSource
_presentedRequest
T@"<HKHealthPrivacyHostRemoteViewController>",R,N
T@"HKHealthStore",R,N,V_healthStore
T@"HKHealthRecordsStore",R,N,V_healthRecordsStore
T@"HKNavigationController",&,N,V_navigationController
T@"HKAuthorizationRequestRecord",&,N,V_requestRecord
T@"NSArray",C,N,V_presentationRequests
T@"NSUUID",C,N,V_currentTransactionSessionIdentifier
T@"HKSource",C,N,V_currentTransactionSource
T@"HKAuthorizationPresentationRequest",&,N,V_presentedRequest
Host application state changed to %ld, terminating recalibrate estimates session.
%{public}@ exiting
Failed to locate context to authorize session %{public}@: %{public}@
Host application state changed to %ld, terminating authorization session.
%{public}@: beginning authorization delegate transaction
%{public}@: finishing authorization delegate transaction
%{public}@: Timed out waiting for signed clinical data record
%{public}@: Unable to find HKSignedClinicalDataRecord associated with sync identifier %@, error: %@
%{public}@: Timed out waiting for medical records
%{public}@: Unable to find HKMedicalRecords associated with sync identifier %@, error: %@
Successfully selected authorization for object picker.
Finished setting status with error: %@.
Object selection failed with error: %@.
%@: beginning authorization delegate transaction with identifier %{public}@
v8@?0
v16@?0@"NSDictionary"8
6MWD
RECALIBRATE_ESTIMATES_ALERT_TITLE_%@_
HealthUI-Localizable
RECALIBRATE_ESTIMATES_ALERT_MESSAGE_%@_
RECALIBRATE_ESTIMATES_ALERT_CANCEL
The user canceled request to recalibrate estimates.
v16@?0@"UIAlertAction"8
RECALIBRATE_ESTIMATES_ALERT_RESET
v20@?0B8@"NSError"12
q24@?0@"HKVerifiableClinicalRecord"8@"HKVerifiableClinicalRecord"16
No picker view controller for object type: %@
HKHealthPrivacyServiceObjectPickerViewController.m
Invalid parameter not satisfying: %@
sessionIdentifier != nil
_sessionIdentifier == nil
v16@?0@"NSError"8
v16@?0@"HKSource"8
v24@?0@"NSArray"8@"NSError"16
v32@?0@"HKSampleQuery"8@"NSArray"16@"NSError"24
HKHealthPrivacyServiceAuthorizationViewController.m
[presentationRequests hk_allElementsUnique]
presentationRequests.count > 0
requestRecord != nil
presentationRequests != nil
self.currentTransactionSessionIdentifier != nil
source != nil
presentedRequest != nil
[self _isPresentingLastRequest] == NO
request.type == HKAuthorizationPresentationTypeClinicalHealthRecords
HEALTH_RECORDS_TITLE
APP_%@_ACCESS_REQUEST_INTRO
INTRO_VIEW_HEALTH_RECORDS_BUTTON_TITLE
IN_APP_SEQUENCE_TITLE_INTRO
IN_APP_SEQUENCE_TITLE_ACCESSIBILITY_%@
request.type == HKAuthorizationPresentationTypeHealthData
self.currentTransactionSessionIdentifier == nil
HKHealthPrivacyServiceRecalibrateEstimatesViewController
HKHealthPrivacyServiceRemoteRecalibrateEstimatesViewController
HKHealthPrivacyServiceObjectPickerViewController
HKHealthPrivacyServiceRemoteObjectPickerViewController
HKHealthPrivacyServicePickerControllerDelegate
NSObject
HKHealthPrivacyServiceAuthorizationViewController
HKHealthPrivacyServiceRemoteAuthorizationViewController
HKHealthPrivacyServicePromptControllerDelegate
@16@0:8
v32@0:8@16@?24
v32@0:8@"HKRecalibrateEstimatesRequestRecord"16@?<v@?B@"NSError">24
v20@0:8I16
v16@0:8
v20@0:8B16
v40@0:8@16@24@32
v24@0:8@16
@?16@0:8
v24@0:8@?16
@"HKAuthorizationStore"
@"UIAlertController"
@"NSError"
@"BKSApplicationStateMonitor"
v24@0:8@"HKObjectAuthorizationPromptSession"16
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
@24@0:8@16
v32@0:8@"<HKHealthPrivacyServicePickerController>"16@"NSError"24
@"NSArray"24@0:8@"HKVerifiableClinicalRecord"16
@32@0:8@16@24
@"HKHealthStore"
@"UIViewController<HKHealthPrivacyServicePickerController>"
@"HKObjectAuthorizationPromptSession"
@"NSUUID"
@"HKSource"
@"NSArray"
@"HKObjectAuthorizationPromptSessionMetadata"
v32@0:8@"HKAuthorizationRequestRecord"16@"NSArray"24
v32@0:8@"<HKHealthPrivacyServicePromptController>"16@"NSError"24
I16@0:8
@"HKHealthRecordsStore"
@"HKNavigationController"
@"HKAuthorizationRequestRecord"
@"HKAuthorizationPresentationRequest"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.HealthPrivacyService</string>
<key>com.apple.UIKit.vends-view-services</key>
<true/>
<key>com.apple.developer.healthkit</key>
<true/>
<key>com.apple.duet.activityscheduler.allow</key>
<true/>
<key>com.apple.private.applemediaservices</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.healthkit</key>
<true/>
<key>com.apple.private.healthkit.authorization_bypass</key>
<true/>
<key>com.apple.private.healthkit.authorization_manager</key>
<array>
<string>read</string>
<string>write</string>
<string>reset</string>
</array>
<key>com.apple.private.security.container-required</key>
<true/>
</dict>
</plist>
