MbP?
_SVXServiceCommandHandlerPlayVoiceMail.m
Invalid parameter not satisfying: %@
sessionManager != nil
module != nil
com.apple.SiriVOXService.service-command.%@
Failed to playback audio for command %@.
-[_SVXServiceCommandHandlerPlayVoiceMail handleCommand:withContext:taskTracker:completion:]_block_invoke_3
v24@?0d8@"NSError"16
v16@?0@"SVXSession"8
Failed to acquire audio for command %@.
v20@?0B8@"NSData"12
-[_SVXServiceCommandHandlerPlayVoiceMail _markVoiceMailAsRead:forRemoteDevice:]
v20@?0B8@"NSError"12
-[_SVXServiceCommandHandlerPlayVoiceMail _markVoiceMailAsRead:forRemoteDevice:]_block_invoke
v8@?0
-[SVXServiceCommandHandler startWithModuleInstanceProvider:platformDependencies:]
-[SVXServiceCommandHandler _reset]
v16@?0@"SVXServiceCommandResult"8
v24@?0q8@"NSString"16
v16@?0@"AceObject<SAAceCommand>"8
SVXServiceCommandHandlerPreSynthesizeTTS.m
[command isKindOfClass:[SAPreSynthesizeTTS class]]
v16@?0@"SVXSpeechSynthesisResult"8
-[SVXServiceCommandHandlerPreSynthesizeTTS handleCommand:withContext:taskTracker:completion:]_block_invoke_2
v32@?0@"NSString"8Q16^B24
unspecified
siriIntro
tryHeySiriCapabilities
siriCapabilities
tryHeySiriMusic
siriOutro
siriCapabilitiesHomeNewsWeather
siriCapabilitiesHomeWeatherClock
tryHeySiriNews
tryHeySiriWeather
(unknown)
-[SVXClientSessionStateService handleWillChangeSessionStateFrom:to:]
-[SVXClientSessionStateService handleDidChangeSessionStateFrom:to:]
-[SVXClientSessionStateService handleDidChangeSessionStateFrom:to:]_block_invoke
-[SVXClientSessionStateService fetchStateWithCompletion:]
v24@?0q8@"NSError"16
v16@?0@"<SVXClientService>"8
-[SVXClientSessionStateService fetchStateWithCompletion:]_block_invoke
v16@?0@"NSError"8
-[SVXClientSessionStateService _setCurrentState:]
twoShot
sessionInactive
tapToSiri
deviceSetupIntro
deviceSetupOutro
phatic
timestamp
options
flowScene
beginDate
endDate
%@ {%@}
timestamp = %@
options = %@
flowScene = %@
beginDate = %@
endDate = %@
SVXDeviceSetupContext::timestamp
SVXDeviceSetupContext::options
SVXDeviceSetupContext::flowScene
SVXDeviceSetupContext::beginDate
SVXDeviceSetupContext::endDate
SVXAnnouncer.m
Announcer class %@ is expected to override +[SVXAnnouncer protocol] method and return a non null protocol.
Announcer class %@ is expected to conform to protocol %@.
-[SVXAnnouncer addListener:]
-[SVXAnnouncer removeListener:]
-[SVXAnnouncer forwardInvocation:]_block_invoke
v16@?0@"NSSet"8
Subclass Responsibility: Announcer class %@ is expected to override +[SVXAnnouncer protocol] method and return a non null protocol.
itemURL = %@
numberOfLoops = %@
fadeInDuration = %@
fadeOutDuration = %@
SVXUserFeedbackAudioContent::itemURL
SVXUserFeedbackAudioContent::numberOfLoops
SVXUserFeedbackAudioContent::fadeInDuration
SVXUserFeedbackAudioContent::fadeOutDuration
_SVXExpressionParser.m
parsingService != nil
preferences != nil
%@ {identifier = %@, queue = %@, options = (%@)}
Main Queue Performer
SVXSpeechSynthesisRequest *SVXAlarmAndTimerFiringContextCreateSpeechSynthesisRequest(SVXAlarmAndTimerFiringContext *__strong, AFInstanceContext *__strong)
SVXAlarmAndTimerUtils.m
instanceContext != nil
SVXAlarmAndTimerFiringContextCreateSpeechSynthesisRequest
@"NSLocale"8@?0
@"NSCalendar"8@?0
@"NSDateFormatter"8@?0
SIRI_VOX_FIRING_ALARM_OR_TIMER_ANNOUNCEMENT_CONCATENATION
 @{tts#
\pause=150\} 
v32@?0@"AFClockTimer"8Q16^B24
SIRI_VOX_FIRING_TIMER_ANNOUNCEMENT_MULTI
SIRI_VOX_FIRING_TITLED_TIMER_ANNOUNCEMENT_SINGLE
SIRI_VOX_FIRING_UNTITLED_TIMER_ANNOUNCEMENT_SINGLE
 @{tts#
\pause=500\} 
v32@?0@"AFClockAlarm"8Q16^B24
SIRI_VOX_FIRING_ALARM_ANNOUNCEMENT_MULTI
SIRI_VOX_FIRING_TITLED_ALARM_ANNOUNCEMENT_SINGLE
SIRI_VOX_FIRING_UNTITLED_ALARM_ANNOUNCEMENT_SINGLE
SVXSpeechSynthesisErrorDomain
-[SVXDeviceSetupManager prepareForSetupWithContext:completion:]
-[SVXDeviceSetupManager setContext:forUUID:]
-[SVXDeviceSetupManager sessionManager:didActivateWithContext:]_block_invoke
-[SVXDeviceSetupManager _prepareForSetupWithContext:completion:]
RegionCode
-[SVXDeviceSetupManager _prepareForSetupWithContext:completion:]_block_invoke
v24@?0@"SVXDeviceSetupFlowScene"8@"NSError"16
v16@?0@"<SVXDeviceSetupFlowSiriCapabilitiesHintMutating>"8
-[SVXDeviceSetupManager _prepareForSetupWithContext:completion:]_block_invoke_3
v16@?0B8B12
-[SVXDeviceSetupManager _prepareForSetupWithContext:completion:]_block_invoke_2
143465
143463
HomePod Siri Device Setup Flow (Build %@)
-[SVXDeviceSetupManager _prepareSiriIntroSceneWithLanguageCode:gender:completion:]
-[SVXDeviceSetupManager _prepareSiriIntroSceneWithLanguageCode:gender:completion:]_block_invoke
-[SVXDeviceSetupManager _prepareTryHeySiriCapabilitiesSceneWithLanguageCode:gender:completion:]
-[SVXDeviceSetupManager _prepareTryHeySiriCapabilitiesSceneWithLanguageCode:gender:completion:]_block_invoke
v32@?0@"SVXSpeechSynthesisWordTiming"8Q16^B24
-[SVXDeviceSetupManager _prepareSiriCapabilitiesSceneWithID:languageCode:gender:hint:completion:]
zh-CN
yue-CN
zh-HK
-[SVXDeviceSetupManager _prepareSiriCapabilitiesSceneWithID:languageCode:gender:hint:completion:]_block_invoke
-[SVXDeviceSetupManager _prepareTryHeySiriMusicSceneWithLanguageCode:gender:completion:]
-[SVXDeviceSetupManager _prepareTryHeySiriMusicSceneWithLanguageCode:gender:completion:]_block_invoke
-[SVXDeviceSetupManager _prepareTryHeySiriNewsSceneWithLanguageCode:gender:completion:]
-[SVXDeviceSetupManager _prepareTryHeySiriNewsSceneWithLanguageCode:gender:completion:]_block_invoke
-[SVXDeviceSetupManager _prepareTryHeySiriNewsSceneWithLanguageCode:gender:completion:]_block_invoke_2
-[SVXDeviceSetupManager _prepareTryHeySiriWeatherSceneWithLanguageCode:gender:completion:]
-[SVXDeviceSetupManager _prepareTryHeySiriWeatherSceneWithLanguageCode:gender:completion:]_block_invoke
-[SVXDeviceSetupManager _prepareTryHeySiriWeatherSceneWithLanguageCode:gender:completion:]_block_invoke_2
-[SVXDeviceSetupManager _setContext:forUUID:]
-[SVXDeviceSetupManager _setContext:forUUID:]_block_invoke
v32@?0@"NSUUID"8@"SVXDeviceSetupContext"16^B24
-[SVXDeviceSetupManager _updateEffectiveContext]
v16@?0@"<SVXDeviceSetupContextMutating>"8
-[SVXDeviceSetupManager _setEffectiveContext:]
-[SVXDeviceSetupManager _evictCachedContents]
%@:%@
/System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices
ACAccountStore
/System/Library/Frameworks/Accounts.framework/Accounts
SVXStoreDemoGetLocalizationKey
priority
speakableText
speakableContext
localizationKey
presynthesizedAudio
streamID
priority = %ld (%@)
options = %lu [%@]
speakableText = %@
speakableContext = %@
localizationKey = %@
presynthesizedAudio = %@
streamID = %@
SVXSpeechSynthesisRequest::priority
SVXSpeechSynthesisRequest::options
SVXSpeechSynthesisRequest::speakableText
SVXSpeechSynthesisRequest::speakableContext
SVXSpeechSynthesisRequest::localizationKey
SVXSpeechSynthesisRequest::presynthesizedAudio
SVXSpeechSynthesisRequest::streamID
text
text = %@
isPhonetic = %@
SVXUserFeedbackVoiceContent::text
SVXUserFeedbackVoiceContent::isPhonetic
-[SVXClientAudioSystemService handleAudioSessionWillBecomeActive:activationContext:deactivationContext:]_block_invoke
-[SVXClientAudioSystemService handleAudioSessionDidBecomeActive:activationContext:deactivationContext:]_block_invoke
medium
high
SVXServiceCommandHandlerUICloseAssistant.m
[command isKindOfClass:[SAUICloseAssistant class]]
-[SVXClientSessionService handleWillChangeStateFrom:to:]
-[SVXClientSessionService handleDidChangeStateFrom:to:]
-[SVXClientSessionService handleDidChangeStateFrom:to:]_block_invoke
-[SVXClientSessionService handleWillPresentFeedbackWithDialogIdentifier:]
-[SVXClientSessionService handleWillStartSoundWithID:]
-[SVXClientSessionService handleDidStartSoundWithID:]
-[SVXClientSessionService handleDidStopSoundWithID:error:]
-[SVXClientSessionService handleWillBecomeActiveWithActivationContext:]
-[SVXClientSessionService handleWillBecomeActiveWithActivationContext:]_block_invoke
-[SVXClientSessionService handleDidBecomeActiveWithActivationContext:]
-[SVXClientSessionService handleDidBecomeActiveWithActivationContext:]_block_invoke
-[SVXClientSessionService handleWillResignActiveWithOptions:duration:]
-[SVXClientSessionService handleWillResignActiveWithOptions:duration:]_block_invoke
-[SVXClientSessionService handleDidResignActiveWithDeactivationContext:]
-[SVXClientSessionService handleDidResignActiveWithDeactivationContext:]_block_invoke
v12@?0B8
-[SVXClientSessionService clientServiceDidChange:]_block_invoke_2
-[SVXClientSessionService clientServiceDidChange:]_block_invoke
-[SVXClientSessionService fetchStateWithCompletion:]
-[SVXClientSessionService fetchStateWithCompletion:]_block_invoke
-[SVXClientSessionService fetchAlarmAndTimerFiringContextWithCompletion:]
-[SVXClientSessionService fetchAlarmAndTimerFiringContextWithCompletion:]_block_invoke_2
-[SVXClientSessionService fetchAlarmAndTimerFiringContextWithCompletion:]_block_invoke
v24@?0@"SVXAlarmAndTimerFiringContext"8@"NSError"16
-[SVXClientSessionService _setCurrentState:]
ready
inProgress
done
SiriVOX
\ESC
com.apple.%@
/System/Library/PrivateFrameworks/%@.framework
/System/Library/Frameworks/%@.framework
true
false
SVXModule.m
identifier != nil
instanceClass != Nil
analytics != nil
performer != nil
%@ {identifier = %@, instanceClass = %@, instanceContext = %@, performer = %@}
isFixingProblems = %@
problems = %lu [%@]
SVXDeviceProblemsState::isFixingProblems
SVXDeviceProblemsState::problems
v16@?0@"<SVXActivationContextMutating>"8
v16@?0@"<SVXDeactivationContextMutating>"8
origin
sessionUUID
requestUUID
aceId
refId
dialogIdentifier
dialogPhase
isUUFR
listensAfterSpeaking
listenAfterSpeakingBehavior
activationContext
deactivationContext
error
origin = %ld (%@)
sessionUUID = %@
requestUUID = %@
aceId = %@
refId = %@
dialogIdentifier = %@
dialogPhase = %@
isUUFR = %@
listensAfterSpeaking = %@
listenAfterSpeakingBehavior = %@
activationContext = %@
deactivationContext = %@
error = %@
SVXTaskContext::origin
SVXTaskContext::timestamp
SVXTaskContext::sessionUUID
SVXTaskContext::requestUUID
SVXTaskContext::aceId
SVXTaskContext::refId
SVXTaskContext::dialogIdentifier
SVXTaskContext::dialogPhase
SVXTaskContext::isUUFR
SVXTaskContext::listensAfterSpeaking
SVXTaskContext::listenAfterSpeakingBehavior
SVXTaskContext::activationContext
SVXTaskContext::deactivationContext
SVXTaskContext::error
female
male
com.apple.SiriVOXService.client-service
com.apple.SiriVOXService.device-setup
com.apple.SiriVOXService.now-playing-observation
com.apple.SiriVOXService.service-command
com.apple.SiriVOXService.session-manager
com.apple.SiriVOXService.speech-synthesis
com.apple.SiriVOXService.system-observation
com.apple.SiriVOXService.user-feedback
sceneID
displayKeyFrames
siriCapabilitiesHint
sceneID = %ld (%@)
displayKeyFrames = %@
siriCapabilitiesHint = %@
SVXDeviceSetupFlowScene::sceneID
SVXDeviceSetupFlowScene::speakableText
SVXDeviceSetupFlowScene::displayKeyFrames
SVXDeviceSetupFlowScene::siriCapabilitiesHint
synthesizing
speaking
%@ {instanceContext = %@}
-[SVXVirtualDevice initWithInstanceContext:]
SVXVirtualDevice.m
_instanceContext != nil
v32@?0@"NSString"8@"SVXModule"16^B24
waitsUntilDone
allowsFastPath
orderedFiringAlarms
orderedFiringTimers
hasOtherRunningTimers
orderedFiringAlarms = %@
orderedFiringTimers = %@
hasOtherRunningTimers = %@
SVXAlarmAndTimerFiringContext::orderedFiringAlarms
SVXAlarmAndTimerFiringContext::orderedFiringTimers
SVXAlarmAndTimerFiringContext::hasOtherRunningTimers
idle
listening
thinking
presenting
SVXServiceCommandHandlerClientCoordinationPhoneCall.m
[command isKindOfClass:[SAPhoneClientCoordinationPhoneCall class]]
unsupported type
-[_SVXRemoteExpressionParsingService parseExpressions:targetDevice:reply:]_block_invoke
v16@?0@"SABaseCommand"8
-[_SVXRemoteExpressionParsingService parseExpressions:targetDevice:reply:]
type
type = %ld (%@)
SVXButtonEvent::type
SVXButtonEvent::timestamp
playsSound
audio
voice
button
client
myriad
server
adBlocker
SVXClientServiceServerConnection.m
xpcConnection != nil
delegate != nil
%@ {uuid = %@, xpcConnection = %@, instanceInfo = %@}
-[SVXClientServiceServerConnection pingWithReply:]
-[SVXClientServiceServerConnection pingWithReply:]_block_invoke_2
-[SVXClientServiceServerConnection pingWithReply:]_block_invoke
-[SVXClientServiceServerConnection fetchSessionStateWithCompletion:]
-[SVXClientServiceServerConnection fetchSessionStateWithCompletion:]_block_invoke_3
v16@?0q8
-[SVXClientServiceServerConnection fetchSessionStateWithCompletion:]_block_invoke
-[SVXClientServiceServerConnection fetchSessionActivityStateWithCompletion:]
-[SVXClientServiceServerConnection fetchSessionActivityStateWithCompletion:]_block_invoke_3
-[SVXClientServiceServerConnection fetchSessionActivityStateWithCompletion:]_block_invoke
-[SVXClientServiceServerConnection fetchAlarmAndTimerFiringContextWithCompletion:]
-[SVXClientServiceServerConnection fetchAlarmAndTimerFiringContextWithCompletion:]_block_invoke_3
v16@?0@"SVXAlarmAndTimerFiringContext"8
-[SVXClientServiceServerConnection fetchAlarmAndTimerFiringContextWithCompletion:]_block_invoke
-[SVXClientServiceServerConnection preheatWithActivationSource:]
-[SVXClientServiceServerConnection preheatWithActivationSource:]_block_invoke_2
-[SVXClientServiceServerConnection prewarmWithContext:completion:]
-[SVXClientServiceServerConnection prewarmWithContext:completion:]_block_invoke_2
-[SVXClientServiceServerConnection activateWithContext:completion:]
-[SVXClientServiceServerConnection activateWithContext:completion:]_block_invoke_2
-[SVXClientServiceServerConnection deactivateWithContext:completion:]
-[SVXClientServiceServerConnection deactivateWithContext:completion:]_block_invoke_2
-[SVXClientServiceServerConnection performManualEndpointing]
-[SVXClientServiceServerConnection performManualEndpointing]_block_invoke_3
-[SVXClientServiceServerConnection performManualEndpointing]_block_invoke
-[SVXClientServiceServerConnection transitToAutomaticEndpointing]
-[SVXClientServiceServerConnection transitToAutomaticEndpointing]_block_invoke_3
-[SVXClientServiceServerConnection transitToAutomaticEndpointing]_block_invoke
-[SVXClientServiceServerConnection fetchAudioPowerWithType:completion:]
-[SVXClientServiceServerConnection fetchAudioPowerWithType:completion:]_block_invoke_3
v16@?0@"AFXPCWrapper"8
-[SVXClientServiceServerConnection fetchAudioPowerWithType:completion:]_block_invoke
-[SVXClientServiceServerConnection prewarmRequest:]
-[SVXClientServiceServerConnection prewarmRequest:]_block_invoke_2
-[SVXClientServiceServerConnection synthesizeRequest:handlerUUID:completion:]
-[SVXClientServiceServerConnection synthesizeRequest:handlerUUID:completion:]_block_invoke_3
-[SVXClientServiceServerConnection synthesizeRequest:handlerUUID:completion:]_block_invoke
-[SVXClientServiceServerConnection synthesizeRequest:handlerUUID:completion:]_block_invoke_2
v24@?0@"VSAudioData"8Q16
-[SVXClientServiceServerConnection enqueueSpeechSynthesisRequest:completion:]
-[SVXClientServiceServerConnection enqueueSpeechSynthesisRequest:completion:]_block_invoke_3
-[SVXClientServiceServerConnection enqueueSpeechSynthesisRequest:completion:]_block_invoke
-[SVXClientServiceServerConnection cancelPendingSpeechSynthesisRequest:]
-[SVXClientServiceServerConnection cancelPendingSpeechSynthesisRequest:]_block_invoke_2
-[SVXClientServiceServerConnection stopSpeechSynthesisRequest:]
-[SVXClientServiceServerConnection stopSpeechSynthesisRequest:]_block_invoke_2
-[SVXClientServiceServerConnection setDeviceSetupContext:]
-[SVXClientServiceServerConnection setDeviceSetupContext:]_block_invoke_2
-[SVXClientServiceServerConnection prepareForDeviceSetupWithContext:completion:]
-[SVXClientServiceServerConnection prepareForDeviceSetupWithContext:completion:]_block_invoke_3
v24@?0@"SVXDeviceSetupFlow"8@"NSError"16
-[SVXClientServiceServerConnection prepareForDeviceSetupWithContext:completion:]_block_invoke
-[SVXClientServiceServerConnection sessionManager:willActivateWithContext:]
-[SVXClientServiceServerConnection sessionManager:willActivateWithContext:]_block_invoke_2
-[SVXClientServiceServerConnection sessionManager:didActivateWithContext:]
-[SVXClientServiceServerConnection sessionManager:didActivateWithContext:]_block_invoke_2
-[SVXClientServiceServerConnection sessionManager:didNotActivateWithContext:error:]
-[SVXClientServiceServerConnection sessionManager:didNotActivateWithContext:error:]_block_invoke_2
-[SVXClientServiceServerConnection sessionManager:willDeactivateWithContext:]
-[SVXClientServiceServerConnection sessionManager:willDeactivateWithContext:]_block_invoke_2
-[SVXClientServiceServerConnection sessionManager:didDeactivateWithContext:]
-[SVXClientServiceServerConnection sessionManager:didDeactivateWithContext:]_block_invoke_2
-[SVXClientServiceServerConnection audioPowerWillBeginUpdateForType:wrapper:]
-[SVXClientServiceServerConnection audioPowerWillBeginUpdateForType:wrapper:]_block_invoke_2
-[SVXClientServiceServerConnection audioPowerDidEndUpdateForType:]
-[SVXClientServiceServerConnection audioPowerDidEndUpdateForType:]_block_invoke_2
-[SVXClientServiceServerConnection sessionWillChangeFromState:toState:]
-[SVXClientServiceServerConnection sessionWillChangeFromState:toState:]_block_invoke_2
-[SVXClientServiceServerConnection sessionDidChangeFromState:toState:]
-[SVXClientServiceServerConnection sessionDidChangeFromState:toState:]_block_invoke_2
-[SVXClientServiceServerConnection sessionWillPresentFeedbackWithDialogIdentifier:]
-[SVXClientServiceServerConnection sessionWillPresentFeedbackWithDialogIdentifier:]_block_invoke_2
-[SVXClientServiceServerConnection sessionWillStartSoundWithID:]
-[SVXClientServiceServerConnection sessionWillStartSoundWithID:]_block_invoke_2
-[SVXClientServiceServerConnection sessionDidStartSoundWithID:]
-[SVXClientServiceServerConnection sessionDidStartSoundWithID:]_block_invoke_2
-[SVXClientServiceServerConnection sessionDidStopSoundWithID:error:]
-[SVXClientServiceServerConnection sessionDidStopSoundWithID:error:]_block_invoke_2
-[SVXClientServiceServerConnection sessionWillBecomeActiveWithActivationContext:]
-[SVXClientServiceServerConnection sessionWillBecomeActiveWithActivationContext:]_block_invoke_2
-[SVXClientServiceServerConnection sessionDidBecomeActiveWithActivationContext:]
-[SVXClientServiceServerConnection sessionDidBecomeActiveWithActivationContext:]_block_invoke_2
-[SVXClientServiceServerConnection sessionWillResignActiveWithOptions:duration:]
-[SVXClientServiceServerConnection sessionWillResignActiveWithOptions:duration:]_block_invoke_2
-[SVXClientServiceServerConnection sessionDidResignActiveWithDeactivationContext:]
-[SVXClientServiceServerConnection sessionDidResignActiveWithDeactivationContext:]_block_invoke_2
-[SVXClientServiceServerConnection audioSessionWillBecomeActive:activationContext:deactivationContext:]
-[SVXClientServiceServerConnection audioSessionWillBecomeActive:activationContext:deactivationContext:]_block_invoke_2
-[SVXClientServiceServerConnection audioSessionDidBecomeActive:activationContext:deactivationContext:]
-[SVXClientServiceServerConnection audioSessionDidBecomeActive:activationContext:deactivationContext:]_block_invoke_2
-[SVXClientServiceServerConnection _remoteServiceDelegateWithErrorHandler:]
-[SVXClientServiceServerConnection _connectionInterrupted]
-[SVXClientServiceServerConnection _connectionInvalidated]
-[SVXClientServiceServerConnection _cleanUpXPCConnection]
-[SVXClientServiceServerConnection _getInstanceInfoWithCompletion:]
-[SVXClientServiceServerConnection _getInstanceInfoWithCompletion:]_block_invoke_2
-[SVXClientServiceServerConnection _getInstanceInfoWithCompletion:]_block_invoke
v24@?0@"AFInstanceInfo"8@"NSError"16
-[SVXClientServiceServerConnection _updateInstanceInfo:]
homeNewsWeather
homeWeatherClock
homeClockWeather
homeClockMusic
SVXAudioServicesActivateWithTimeout
sampleRate = %@
formatID = %@
formatFlags = %@
bytesPerPacket = %@
framesPerPacket = %@
bytesPerFrame = %@
channelsPerFrame = %@
bitsPerChannel = %@
reserved = %@
SVXAudioStreamBasicDescription::sampleRate
SVXAudioStreamBasicDescription::formatID
SVXAudioStreamBasicDescription::formatFlags
SVXAudioStreamBasicDescription::bytesPerPacket
SVXAudioStreamBasicDescription::framesPerPacket
SVXAudioStreamBasicDescription::bytesPerFrame
SVXAudioStreamBasicDescription::channelsPerFrame
SVXAudioStreamBasicDescription::bitsPerChannel
SVXAudioStreamBasicDescription::reserved
com.apple.SiriVOXService.client
iCloud
iTunes
HomeKit
wiFi
wiFiPerformance
internet
hardware
bluetooth
thermal
recovery
stereoNotFound
stereoVersion
stereoError
WiFi8021x
networkProfile
networkNotShareable
networkProfileRequired
SVXServiceCommandHandlerUIAddViews.m
speechSynthesizer != nil
[command isKindOfClass:[SAUIAddViews class]]
v20@?0B8@"SAUIAddViews"12
v16@?0@"<SVXTaskContextMutating>"8
-[SVXServiceCommandHandlerUIAddViews handleCommand:withContext:taskTracker:completion:]
-[SVXServiceCommandHandlerUIAddViews handleCommand:withContext:taskTracker:completion:]_block_invoke
-[SVXServiceCommandHandlerUIAddViews handleAceView:isExpository:taskTracker:completion:]
-[SVXServiceCommandHandlerUIAddViews handleAceView:isExpository:taskTracker:completion:]_block_invoke
_SVXServiceCommandHandlerUIAddViewsGetSpeakableTextFromAceView
_SVXServiceCommandHandlerUIAddViewsGetSpeakableTextFromAceView_block_invoke
v32@?0@"SAUIListItem"8Q16^B24
activation
deactivation
identifier
identifier = %@
contentType = %ld (%@)
audioContent = %@
voiceContent = %@
SVXUserFeedback::identifier
SVXUserFeedback::contentType
SVXUserFeedback::audioContent
SVXUserFeedback::voiceContent
-[SVXClientServiceConnection initWithComponents:instanceContext:delegate:]
Client Service Connection
-[SVXClientServiceConnection initWithQueuePerformer:activationService:audioSystemService:deviceService:inputAudioPowerService:outputAudioPowerService:sessionService:speechSynthesisService:keepAliveService:instanceContext:delegate:]
-[SVXClientServiceConnection pingWithReply:]
-[SVXClientServiceConnection pingWithReply:]_block_invoke_2
-[SVXClientServiceConnection activateWithContext:completion:]
-[SVXClientServiceConnection activateWithContext:completion:]_block_invoke_2
-[SVXClientServiceConnection deactivateWithContext:completion:]
-[SVXClientServiceConnection deactivateWithContext:completion:]_block_invoke_2
-[SVXClientServiceConnection performManualEndpointing]
-[SVXClientServiceConnection performManualEndpointing]_block_invoke_2
-[SVXClientServiceConnection transitToAutomaticEndpointing]
-[SVXClientServiceConnection transitToAutomaticEndpointing]_block_invoke_2
-[SVXClientServiceConnection fetchSessionStateWithCompletion:]
-[SVXClientServiceConnection fetchSessionStateWithCompletion:]_block_invoke_2
-[SVXClientServiceConnection fetchSessionActivityStateWithCompletion:]
-[SVXClientServiceConnection fetchSessionActivityStateWithCompletion:]_block_invoke_2
-[SVXClientServiceConnection fetchAlarmAndTimerFiringContextWithCompletion:]_block_invoke_2
-[SVXClientServiceConnection preheatWithActivationSource:]
-[SVXClientServiceConnection preheatWithActivationSource:]_block_invoke_2
-[SVXClientServiceConnection prewarmWithContext:completion:]
-[SVXClientServiceConnection prewarmWithContext:completion:]_block_invoke_2
-[SVXClientServiceConnection fetchAudioPowerWithType:completion:]
-[SVXClientServiceConnection fetchAudioPowerWithType:completion:]_block_invoke_2
-[SVXClientServiceConnection prewarmRequest:]
-[SVXClientServiceConnection prewarmRequest:]_block_invoke_2
-[SVXClientServiceConnection synthesizeRequest:handlerUUID:completion:]
-[SVXClientServiceConnection synthesizeRequest:handlerUUID:completion:]_block_invoke_2
-[SVXClientServiceConnection enqueueSpeechSynthesisRequest:completion:]
-[SVXClientServiceConnection enqueueSpeechSynthesisRequest:completion:]_block_invoke_2
-[SVXClientServiceConnection cancelPendingSpeechSynthesisRequest:]
-[SVXClientServiceConnection cancelPendingSpeechSynthesisRequest:]_block_invoke_2
-[SVXClientServiceConnection stopSpeechSynthesisRequest:]
-[SVXClientServiceConnection stopSpeechSynthesisRequest:]_block_invoke_2
-[SVXClientServiceConnection setDeviceSetupContext:]
-[SVXClientServiceConnection setDeviceSetupContext:]_block_invoke_2
-[SVXClientServiceConnection prepareForDeviceSetupWithContext:completion:]
-[SVXClientServiceConnection prepareForDeviceSetupWithContext:completion:]_block_invoke_2
-[SVXClientServiceConnection getInstanceInfoWithCompletion:]
-[SVXClientServiceConnection requestPermissionToActivateWithContext:completion:]
-[SVXClientServiceConnection notifyWillActivateWithContext:]
-[SVXClientServiceConnection notifyDidActivateWithContext:]
-[SVXClientServiceConnection notifyDidNotActivateWithContext:error:]
-[SVXClientServiceConnection notifyWillDeactivateWithContext:]
-[SVXClientServiceConnection notifyDidDeactivateWithContext:]
-[SVXClientServiceConnection notifyWillChangeSessionStateFrom:to:]
-[SVXClientServiceConnection notifyDidChangeSessionStateFrom:to:]
-[SVXClientServiceConnection notifySessionWillPresentFeedbackWithDialogIdentifier:]
-[SVXClientServiceConnection notifySessionWillStartSoundWithID:]
-[SVXClientServiceConnection notifySessionDidStartSoundWithID:]
-[SVXClientServiceConnection notifySessionDidStopSoundWithID:error:]
-[SVXClientServiceConnection notifySessionWillBecomeActiveWithActivationContext:]
-[SVXClientServiceConnection notifySessionDidBecomeActiveWithActivationContext:]
-[SVXClientServiceConnection notifySessionWillResignActiveWithOptions:duration:]
-[SVXClientServiceConnection notifySessionDidResignActiveWithDeactivationContext:]
-[SVXClientServiceConnection notifyWillBeginUpdateAudioPowerWithType:wrapper:]
-[SVXClientServiceConnection notifyDidEndUpdateAudioPowerWithType:]
-[SVXClientServiceConnection notifyAudioSessionWillBecomeActive:activationContext:deactivationContext:]
-[SVXClientServiceConnection notifyAudioSessionDidBecomeActive:activationContext:deactivationContext:]
-[SVXClientServiceConnection handleSpeechSynthesisSynthesizedBufferForHandlerUUID:audioChunkData:audioChunkIndex:reply:]
-[SVXClientServiceConnection connectionInterrupted]
-[SVXClientServiceConnection connectionInvalidated]
-[SVXClientServiceConnection connectionInvalidated]_block_invoke
-[SVXClientServiceConnection connectionInvalidated]_block_invoke_2
%@ {reason = %@, audioSessionID = %lu, taskTracker = %@}
-[SVXAudioSessionAssertion dealloc]
-[SVXAudioSessionAssertion initWithReason:audioSessionID:taskTracker:relinquishHandler:]
-[SVXAudioSessionAssertion relinquish]
-[SVXDaemon startWithPlatformDependencies:]
-[SVXDaemon startWithPlatformDependencies:]_block_invoke
-[SVXDaemon stop]
-[SVXDaemon stop]_block_invoke
-[SVXDaemon listener:shouldAcceptNewConnection:]
-[SVXDaemon handleClientServiceXPCConnection:]
-[SVXDaemon handleClientServiceXPCConnection:]_block_invoke_2
-[SVXDaemon handleClientServiceXPCConnection:]_block_invoke
v16@?0@"SVXVirtualDevice"8
v16@?0@"AFInstanceInfo"8
-[SVXDaemon siriActivationListener:prewarmWithRequestInfo:context:completion:]
-[SVXDaemon siriActivationListener:prewarmWithRequestInfo:context:completion:]_block_invoke_2
-[SVXDaemon siriActivationListener:prewarmWithRequestInfo:context:completion:]_block_invoke
-[SVXDaemon siriActivationListener:activateWithRequestInfo:context:completion:]
-[SVXDaemon siriActivationListener:activateWithRequestInfo:context:completion:]_block_invoke_2
-[SVXDaemon siriActivationListener:activateWithRequestInfo:context:completion:]_block_invoke
-[SVXDaemon siriActivationListener:deactivateForReason:options:context:completion:]
-[SVXDaemon siriActivationListener:deactivateForReason:options:context:completion:]_block_invoke_2
-[SVXDaemon siriActivationListener:deactivateForReason:options:context:completion:]_block_invoke
-[SVXDaemon siriActivationListener:myriadEventWithRequestInfo:context:completion:]
-[SVXDaemon siriActivationListener:myriadEventWithRequestInfo:context:completion:]_block_invoke_2
-[SVXDaemon siriActivationListener:myriadEventWithRequestInfo:context:completion:]_block_invoke
-[SVXDaemon clientServiceServerConnectionDidInvalidate:]
-[SVXSessionManager preheatWithActivationSource:]
-[SVXSessionManager deviceLostMyriadElection]
-[SVXSessionManager deviceLostMyriadElection]_block_invoke
-[SVXSessionManager deviceLostMyriadElection]_block_invoke_2
-[SVXSessionManager deviceWonMyriadElection]
-[SVXSessionManager deviceWonMyriadElection]_block_invoke
-[SVXSessionManager unduckDevice]
-[SVXSessionManager unduckDevice]_block_invoke
v16@?0@"SVXDeviceSetupContext"8
v16@?0@"AFDeviceContext"8
-[SVXSessionManager notifyObserver:didChangeStateFrom:to:]
-[SVXSessionManager prewarmWithContext:completion:]
-[SVXSessionManager activateWithContext:completion:]
-[SVXSessionManager deactivateWithContext:completion:]
-[SVXSessionManager queue:didEnqueueObjects:]_block_invoke
-[SVXSessionManager _currentSession:]
-[SVXSessionManager _processNextOperations]
-[SVXSessionManager _processNextOperations]_block_invoke
v24@?0@"SVXActivationContext"8@?<v@?@"NSError">16
v24@?0@"SVXDeactivationContext"8@?<v@?>16
-[SVXSessionManager _preheatWithActivationSource:]
-[SVXSessionManager _prewarmWithContext:completion:]
-[SVXSessionManager _activateWithContext:activityState:completion:]
-[SVXSessionManager _deactivateWithContext:completion:]
unknown
activityUUID
com.apple.siri.ui.begin
com.apple.siri.ui.end
-[SVXSessionManager _fetchStereoPartnerLastMyriadWinDate]
-[SVXSessionManager _fetchStereoPartnerLastMyriadWinDate]_block_invoke
v24@?0@"NSDate"8@"NSError"16
-[SVXSessionManager _handleFetchedStereoPartnerLastMyriadWinDate:]
-[SVXSessionManager _fetchStereoPairStateWithCompletion:]
-[SVXSessionManager _fetchStereoPairStateWithCompletion:]_block_invoke
-[SVXSessionManager _handleSpeechSynthesizer:willStartRequest:taskTracker:]
-[SVXSessionManager _handleSpeechSynthesizer:didStartRequest:record:taskTracker:]
-[SVXSessionManager _handleSpeechSynthesizer:didFinishRequest:utteranceInfo:record:taskTracker:]
-[SVXSessionManager _handleSpeechSynthesizer:didCancelRequest:taskTracker:]
-[SVXSessionManager _handleSpeechSynthesizer:didInterruptRequest:taskTracker:]
-[SVXSessionManager _handleSpeechSynthesizer:didFailRequest:taskTracker:error:]
-[SVXSessionManager _handleDeviceProblemsStateChanged:]
-[SVXSessionManager _handleDeviceSetupContextChanged:]
-[SVXSessionManager _handleLocalDeviceContextChanged:]
-[SVXSessionManager _handleMyriadForActivationContext:]
heySiriCapabilities
siriCapabilityHome
siriCapabilityNews
siriCapabilityWeather
heySiriMusic
siriCapabilityClock
heySiriNews
siriCapabilityMusic
heySiriWeather
SVXServiceCommandHandlerUISayIt.m
[command isKindOfClass:[SAUISayIt class]]
v20@?0B8@"NSArray"12
-[SVXServiceCommandHandlerUISayIt handleCommand:withContext:taskTracker:completion:]_block_invoke
-[SVXServiceCommandHandlerUISayIt handleCommand:withContext:taskTracker:completion:]
TwoShot-b238.wav
SessionInactive-b238.wav
Phatic
_SVXSoundID
AFAudioPlaybackRequest *SVXSessionSoundCreateAudioPlaybackRequestFromID(SVXSoundID, AFPreferences *__strong)
SVXSoundUtils.m
%@-%@-%@
Female
Male
v32@?0@"NSURL"8Q16^B24
en_US
inactive
resigningActive
becomingActive
active
immediate
afterNextWord
-[SVXClientAudioPowerService handleWillBeginUpdateAudioPowerWithProvider:]
-[SVXClientAudioPowerService handleDidEndUpdateAudioPower]
v24@?0@"AFXPCWrapper"8@"NSError"16
-[SVXClientAudioPowerService clientServiceDidChange:]_block_invoke
-[SVXClientAudioPowerService beginUpdateWithFrequency:]
-[SVXClientAudioPowerService endUpdate]
com.apple.SiriVOX.client.audio-power-updater
-[SVXSpeechSynthesizer beginUpdateAudioPowerWithCompletion:]
-[SVXSpeechSynthesizer endUpdateAudioPower]
-[SVXSpeechSynthesizer outputVoiceChanged:]
-[SVXSpeechSynthesizer languageCodeChanged:]
-[SVXSpeechSynthesizer speechSynthesizer:didStartSpeakingRequest:]
-[SVXSpeechSynthesizer speechSynthesizer:didFinishSpeakingRequest:withInstrumentMetrics:]
-[SVXSpeechSynthesizer speechSynthesizer:didFinishSpeakingRequest:successfully:withError:]
-[SVXSpeechSynthesizer speechSynthesizer:didStartPresynthesizedAudioRequest:]
-[SVXSpeechSynthesizer speechSynthesizer:didStopPresynthesizedAudioRequest:atEnd:error:]
-[SVXSpeechSynthesizer speechSynthesizer:didFinishPresynthesizedAudioRequest:withInstrumentMetrics:error:]
-[SVXSpeechSynthesizer speechSynthesizer:withRequest:didReceiveTimingInfo:]
-[SVXSpeechSynthesizer speechSynthesizer:withRequest:didReceiveTimingInfo:]_block_invoke
-[SVXSpeechSynthesizer speechSynthesizer:withSynthesisRequest:didGenerateAudioChunk:]
-[SVXSpeechSynthesizer speechSynthesizer:didFinishSynthesisRequest:withInstrumentMetrics:error:]
-[SVXSpeechSynthesizer _configuredSpeechRequestForContext:]
-[SVXSpeechSynthesizer _prewarm]
-[SVXSpeechSynthesizer _prewarmWithContext:]
-[SVXSpeechSynthesizer _configureWithConfiguration:]
-[SVXSpeechSynthesizer _configureSpeechSynthesizerWithAudioSessionID:]
-[SVXSpeechSynthesizer _handleDidStartSpeakingWithSpeechRequest:timestamp:]
-[SVXSpeechSynthesizer _handleDidFinishSpeakingWithSpeechRequest:instrumentMetrics:]
utterance
speechEstimatedOutputBeginTimestamp
-[SVXSpeechSynthesizer _handleDidFinishSpeakingWithSpeechRequest:success:error:]
-[SVXSpeechSynthesizer _handleDidStartPresynthesizedAudioRequest:timestamp:]
-[SVXSpeechSynthesizer _handleDidStopPresynthesizedAudioRequest:success:error:]
-[SVXSpeechSynthesizer _handleDidFinishPresynthesizedAudioRequest:instrumentMetrics:error:]
-[SVXSpeechSynthesizer _handleDidReceiveSpeechWordTimingInfoArray:forSpeechRequest:]
-[SVXSpeechSynthesizer _handleDidGenerateAudioChunkData:forSpeechRequest:]
-[SVXSpeechSynthesizer _handleDidFinishSynthesizingForSpeechRequest:instrumentMetrics:error:]
B24@?0@"SVXSpeechSynthesisContext"8^B16
character_count
voice_asset_key
is_warm_start
is_cache_hit_from_disk
is_server_tts
tts_synthesis_latency
tts_total_latency
audio_queue_latency
synthesis_to_speech_time
wait_for_synthesis_to_finish_time
audio_duration
is_speech_request
is_cache_hit_from_memory
synthesis_to_speech_time_gap
audio_start_timestamp_diffs
-[SVXSpeechSynthesizer _enqueueContext:]
-[SVXSpeechSynthesizer _enqueueContext:]_block_invoke
v32@?0@"SVXSpeechSynthesisContext"8Q16^B24
-[SVXSpeechSynthesizer _processPendingContexts]
-[SVXSpeechSynthesizer _processPendingContexts]_block_invoke
-[SVXSpeechSynthesizer _startContext:]
Speech Synthesis
-[SVXSpeechSynthesizer _startContext:]_block_invoke_2
-[SVXSpeechSynthesizer _startContext:]_block_invoke
v24@?0@"SVXAudioSessionAssertion"8@"NSError"16
v16@?0@"<SVXAudioSessionProviding>"8
-[SVXSpeechSynthesizer _continueContext:error:]
-[SVXSpeechSynthesizer _startPresynthesizedAudioRequestForContext:error:]
-[SVXSpeechSynthesizer _startSpeechRequestForContext:error:]
-[SVXSpeechSynthesizer _cancelPendingContextsAtIndexes:]
v16@?0@"SVXSpeechSynthesisContext"8
-[SVXSpeechSynthesizer _stopCurrentSpeakingContextWithInterruptionBehavior:]
B32@?0@"SVXSpeechSynthesisContext"8Q16^B24
-[SVXSpeechSynthesizer _finalizeContext:withResultType:utterance:error:]
sessionListening
sessionThinking
sessionPresenting
sessionBecomeActive
sessionResignActive
requestBegin
requestEnd
speechTwoShot
serviceCommand
audioSessionAcquisition
allowsSynthesizingOnServer
-[SVXClientKeepAliveService connectWithCompletion:]
-[SVXClientKeepAliveService connectWithCompletion:]_block_invoke_2
-[SVXClientKeepAliveService connectWithCompletion:]_block_invoke
-[SVXClientKeepAliveService _connectWithRetryCount:completion:]
-[SVXClientKeepAliveService _connectWithRetryCount:completion:]_block_invoke
\mrk=play=phat\
SVXSpeechSynthesisCreateLocaleFromLanguageCode
NSLocale *SVXSpeechSynthesisGetLocale(BOOL, AFPreferences *__strong)
SVXSpeechSynthesisUtils.m
SVXSpeechSynthesisGetLocale
AFVoiceInfo *SVXSpeechSynthesisGetOutputVoiceInfo(BOOL, AFPreferences *__strong)
SVXSpeechSynthesisGetOutputVoiceInfo
%@ {context = %@, instrumentationContext = %@}
source
buttonEvent
clientInfo
userInfo
source = %ld (%@)
buttonEvent = %@
clientInfo = %@
userInfo = %@
SVXDeactivationContext::source
SVXDeactivationContext::timestamp
SVXDeactivationContext::buttonEvent
SVXDeactivationContext::clientInfo
SVXDeactivationContext::userInfo
SVXDeactivationContext::options
clearsContext
underlyingRequestNotFound
platformNotSupported
operationTypeNotSupported
noSpeakableText
noParsedSpeakableUtterance
systemEvent
requestInfo
systemEvent = %@
requestInfo = %@
SVXActivationContext::source
SVXActivationContext::timestamp
SVXActivationContext::buttonEvent
SVXActivationContext::systemEvent
SVXActivationContext::clientInfo
SVXActivationContext::requestInfo
SVXActivationContext::userInfo
style
style = %ld (%@)
SVXDeviceSetupFlowSiriCapabilitiesHint::style
-[SVXTaskTrackingCenter beginTrackingTaskWithContext:instrumentationContext:]
-[SVXTaskTrackingCenter endTrackingTaskWithContext:]
-[SVXTaskTrackingCenter endTrackingTasksPassingTest:]
-[SVXTaskTrackingCenter endTrackingAllTasks]
-[SVXTaskTrackingCenter taskTracker:childWillBegin:]
-[SVXTaskTrackingCenter taskTrackerDidEnd:]
-[SVXTaskTrackingCenter _beginContext:]
-[SVXTaskTrackingCenter _endContext:]
-[SVXTaskTrackingCenter _endContextsPassingTest:]
utteranceInfo
utteranceInfo = %@
SVXSpeechSynthesisResult::type
SVXSpeechSynthesisResult::utteranceInfo
SVXSpeechSynthesisResult::error
processIdentifier
processName
processIdentifier = %@
processName = %@
SVXClientInfo::processIdentifier
SVXClientInfo::processName
com.apple.SiriVOXService.service-command.fallback
-[SVXServiceCommandHandlerFallback handleCommand:withContext:taskTracker:completion:]
Localizable
Clock
DeviceSetup
Errors
Interstitials
StoreDemo
_FEMALE
_MALE
en-US
strings
v32@?0@"NSString"8@"NSString"16^B24
%@_%@
FEMALE
MALE
languageCode
gender
hasActiveAccount
isNewsRestricted
languageCode = %@
gender = %ld (%@)
hasActiveAccount = %ld (%@)
isNewsRestricted = %ld (%@)
SVXDeviceSetupOptions::languageCode
SVXDeviceSetupOptions::gender
SVXDeviceSetupOptions::hasActiveAccount
SVXDeviceSetupOptions::isNewsRestricted
SVXServiceCommandHandlerUIDelayedActionCommand.m
[command isKindOfClass:[SAUIDelayedActionCommand class]]
finished
canceled
interrupted
failed
transcriptID
outputVolume
transcriptID = %ld (%@)
outputVolume = %@
SVXStoreDemo::transcriptID
SVXStoreDemo::languageCode
SVXStoreDemo::gender
SVXStoreDemo::outputVolume
%@ {operationType = %@, request = %@, languageCode = %@, gender = %@, name = %@, audioSessionID = %u, taskTracker = %@}
v32@?0@"NSUUID"8Q16^B24
duration
duration = %@
nodes = %@
SVXUserFeedbackScene::identifier
SVXUserFeedbackScene::duration
SVXUserFeedbackScene::nodes
assistant
notReachable
alreadyListening
unsupportedActivationContext
droppedActivationContext
invalidConnection
virtualDeviceUnavailable
prewarmHandlerUnavailable
activationHandlerUnavailable
deactivationHandlerUnavailable
clientDeviceServiceUnavailable
SVXServiceCommandHandlerUIAddDialogs.m
[command isKindOfClass:[SAUIAddDialogs class]]
-[SVXServiceCommandHandlerUIAddDialogs prepareToHandleCommand:completion:]
-[SVXServiceCommandHandlerUIAddDialogs prepareToHandleCommand:completion:]_block_invoke
v20@?0B8@"<NSCopying>"12
-[SVXServiceCommandHandlerUIAddDialogs handleCommand:withContext:taskTracker:completion:]
-[SVXServiceCommandHandlerUIAddDialogs handleCommand:withContext:taskTracker:completion:]_block_invoke
No appropriate handler for command
wordTimings
utterance = %@
wordTimings = %@
SVXSpeechSynthesisUtteranceInfo::utterance
SVXSpeechSynthesisUtteranceInfo::wordTimings
-[_SVXAddViewsExpressionParser parseAddViews:reply:]
-[_SVXAddViewsExpressionParser parseAddViews:reply:]_block_invoke
B32@?0@"SAAceView"8Q16^B24
SVXInstrumentationNextTurnBasedContextfromContext
SVXInstrumentationNewTurnBasedContext
SVXInstrumentationEmitInvocation
SVXInstrumentationEmitUIStateTransition
SVXInstrumentationEmitDismissalUIStateTransition
SVXInstrumentationEmitUUFRSaid
SVXInstrumentationEmitTextToSpeechRequestReceived
SVXInstrumentationConvertModeToResponseMode
SVXInstrumentationEmitUUFRSaidWithModeSupport
INVOCATIONSOURCE_UNKNOWN_INVOCATION_SOURCE
INVOCATIONSOURCE_HOME_BUTTON
INVOCATIONSOURCE_LOCK_BUTTON
INVOCATIONSOURCE_BLUETOOTH_HEADSET_BUTTON
INVOCATIONSOURCE_STEERING_WHEEL_BUTTON
INVOCATIONSOURCE_TOUCHBAR_BUTTON
INVOCATIONSOURCE_KEYBOARD_SHORTCUT
INVOCATIONSOURCE_APPLICATION_ICON
INVOCATIONSOURCE_RAISE_TO_SPEAK
INVOCATIONSOURCE_VOICE_TRIGGER
INVOCATIONSOURCE_HARDWARE_BUTTON
INVOCATIONSOURCE_HANDOFF
INVOCATIONSOURCE_TRANSCRIPT_ELEMENT
INVOCATIONSOURCE_BLUETOOTH_HEADSET_VOICE_TRIGGER
INVOCATIONSOURCE_MENU_BAR
INVOCATIONSOURCE_DOCK_ICON
INVOCATIONSOURCE_SPOTLIGHT_SUGGESTION
INVOCATIONSOURCE_SPOTLIGHT_ASK_SIRI
INVOCATIONSOURCE_SIRI_COMPLICATION
INVOCATIONSOURCE_TV_REMOTE_BUTTON
INVOCATIONSOURCE_NONAPPLE_REMOTE
INVOCATIONSOURCE_REMOTE_APP
INVOCATIONSOURCE_REMOTE_UI
INVOCATIONSOURCE_DICTATION_KEYBOARD_MIC_BUTTON
INVOCATIONSOURCE_SIRI_TRIGGERLESS
INVOCATIONSOURCE_SIRI_NOTIFICATION
INVOCATIONSOURCE_TEST_AUTOMATION
INVOCATIONSOURCE_WAVEFORM_GLYPH_BUTTON
INVOCATIONSOURCE_SIRI_AUTO_PROMPT
SIRIUISTATE_UNKNOWN_SIRI_UI_STATE
SIRIUISTATE_IDLE
SIRIUISTATE_LISTENING
SIRIUISTATE_THINKING
SIRIUISTATE_DISMISSED
SIRIUISTATE_SUCCESS
DISMISSALREASON_UNKNOWN_DISMISSAL_REASON
DISMISSALREASON_MYRIAD_ELECTION
DISMISSALREASON_SYSTEM_INTERRUPT
DISMISSALREASON_PHONE_CALL_INTERRUPT
DISMISSALREASON_AUTOMATIC_CLIENT
DISMISSALREASON_RAISE_TO_SPEAK_MITIGATION
DISMISSALREASON_ADVERTISEMENT_MITIGATION
DISMISSALREASON_VOICE_TRIGGER_MITIGATION
DISMISSALREASON_USER_HARDWARE_BUTTON
DISMISSALREASON_USER_UI_SWIPE
DISMISSALREASON_USER_GOODBYE_TRIGGER_PHRASE
feedback = %@
dependentNodes = %@
SVXUserFeedbackNode::identifier
SVXUserFeedbackNode::duration
SVXUserFeedbackNode::feedback
SVXUserFeedbackNode::dependentNodes
deactivationSource
-[SVXClientActivationService handleButtonEvent:]
-[SVXClientActivationService enqueueButtonEvent:]
-[SVXClientActivationService activateWithUserInfo:completion:]
-[SVXClientActivationService activateWithText:completion:]
-[SVXClientActivationService activateWithButtonEvent:userInfo:completion:]
-[SVXClientActivationService prewarmForSystemEvent:completion:]
-[SVXClientActivationService activateWithSystemEvent:userInfo:completion:]
-[SVXClientActivationService deactivateWithUserInfo:completion:]
-[SVXClientActivationService deactivateWithUserInfo:options:completion:]
-[SVXClientActivationService deactivateWithButtonEvent:userInfo:options:completion:]
-[SVXClientActivationService _enqueueButtonEvent:]
v32@?0@"SVXButtonEvent"8Q16^B24
-[SVXClientActivationService _processLastButtonActivationContext]
-[SVXClientActivationService _requestPermissionToActivateWithContext:]
-[SVXClientActivationService _prewarmWithContext:completion:]_block_invoke
-[SVXClientActivationService _activateWithContext:completion:]
-[SVXClientActivationService _activateWithContext:completion:]_block_invoke_2
-[SVXClientActivationService _activateWithContext:completion:]_block_invoke
-[SVXClientActivationService _deactivateWithContext:completion:]
-[SVXClientActivationService _deactivateWithContext:completion:]_block_invoke_2
-[SVXClientActivationService _deactivateWithContext:completion:]_block_invoke
-[SVXClientActivationService _performManualEndpointing]
-[SVXClientActivationService _performManualEndpointing]_block_invoke_2
-[SVXClientActivationService _transitToAutomaticEndpointing]
-[SVXClientActivationService _transitToAutomaticEndpointing]_block_invoke_2
-[SVXClientActivationService _preheatWithActivationSource:]
-[SVXClientActivationService _preheatWithActivationSource:]_block_invoke_2
-[SVXClientActivationService _startPreheatTimer]
-[SVXClientActivationService _stopPreheatTimer]
-[SVXClientActivationService _preheatTimerArrivedWithToken:]
_SVXClientActivationServiceValidateButtonEventForActivation
_SVXClientActivationServiceValidateSystemEventForActivation
SiriVOXErrorDomain
SVXServiceCommandHandlerUIDelayedActionCancelCommand.m
[command isKindOfClass:[SAUIDelayedActionCancelCommand class]]
Unable to find the delayed action cached locally to cancel.
deviceSetupFlowScene
storeDemo
orderedAlarmAndTimerIDs
speechSynthesisRequest
audioSessionID
deviceSetupFlowScene = %@
storeDemo = %@
orderedAlarmAndTimerIDs = %@
speechSynthesisRequest = %@
audioSessionID = %@
SVXSystemEvent::type
SVXSystemEvent::timestamp
SVXSystemEvent::deviceSetupFlowScene
SVXSystemEvent::storeDemo
SVXSystemEvent::orderedAlarmAndTimerIDs
SVXSystemEvent::speechSynthesisRequest
SVXSystemEvent::audioSessionID
system
continuity
data = (%ld bytes)
decoderASBD = %@
playerASBD = %@
SVXSpeechSynthesisAudio::data
SVXSpeechSynthesisAudio::decoderASBD
SVXSpeechSynthesisAudio::playerASBD
-[SAUIAssistantUtteranceView(SiriVOX) svx_parseableExpression]
-[_SVXPlayVoicemailExpressionParser parsePlayVoicemail:reply:]
-[_SVXPlayVoicemailExpressionParser parsePlayVoicemail:reply:]_block_invoke
_SVXServiceCommandHandlerSmsPlayAudio.m
-[SVXClientServiceServer addConnection:]
-[SVXClientServiceServer removeConnection:]
-[SVXClientServiceServer startWithModuleInstanceProvider:platformDependencies:]
-[SVXClientServiceServer stopWithModuleInstanceProvider:]
-[SVXClientServiceServer _addConnection:]
-[SVXClientServiceServer _removeConnection:]
v32@?0@"NSUUID"8@"SVXClientServiceServerConnection"16^B24
-[SVXClientServiceServer _removeAllConnections]_block_invoke
earlyDetect
borealisTrigger
-[SVXMyriadWiFiAssertion _releaseAssertion]
-[SVXMyriadWiFiAssertion acquireHomeKitAccessoryWiFiAssertionWithTimeout:]_block_invoke
-[SVXSystemObserver _startObservingInfo]
-[SVXSystemObserver deviceContextConnectionDidInvalidate:]
-[SVXSystemObserver deviceContextConnectionDidInvalidate:]_block_invoke
-[SVXSystemObserver deviceContextConnection:didUpdateLocalDeviceContext:]
-[SVXSystemObserver deviceContextConnection:didUpdateLocalDeviceContext:]_block_invoke
com.apple.SiriHeadlessService.myriadproxy
com.apple.SiriHeadlessService.myriadproxy.analytics
-[SVXMyriadDeviceManager _initializeMyriadDeviceWithInstanceContext:analytics:preferences:delegate:workQueue:analyticsQueue:]
-[SVXMyriadDeviceManager startAdvertising:withMyriadGoodnessScoreContext:withMyriadAudioContext:completion:]
-[SVXMyriadDeviceManager preheatMyriad]
-[SVXMyriadDeviceManager resetMyriad]
-[SVXMyriadDeviceManager setupEnabled:]
NSString *SVXDeviceSetupGetLocalizationLanguageCodeOverride(NSString *__strong, AFPreferences *__strong)
SVXDeviceSetupUtils.m
SVXDeviceSetupCreateSpeechSynthesisRequestForSiriIntroScene
SVXDeviceSetupCreateSpeechSynthesisRequestForTryHeySiriCapabilitiesScene
SVXDeviceSetupCreateSpeechSynthesisRequestForSiriCapabilitiesScene
SVXDeviceSetupCreateSpeechSynthesisRequestForTryHeySiriMusicScene
SVXDeviceSetupCreateSpeechSynthesisRequestForTryHeySiriNewsScene
SVXDeviceSetupCreateSpeechSynthesisRequestForTryHeySiriWeatherScene
SVXDeviceSetupCreateSpeechSynthesisRequestForSiriOutroScene
v16@?0@"<SVXDeviceSetupOptionsMutating>"8
-[SVXClientDeviceService prepareForSetupWithContext:completion:]
-[SVXClientDeviceService beginSetupWithContext:]
-[SVXClientDeviceService endSetup]
-[SVXClientDeviceService _prepareForSetupWithContext:completion:]
-[SVXClientDeviceService _prepareForSetupWithContext:completion:]_block_invoke_2
-[SVXClientDeviceService _prepareForSetupWithContext:completion:]_block_invoke
-[SVXClientDeviceService _updateSetupContext]
-[SVXClientDeviceService _updateSetupContext]_block_invoke
SIRI_VOX_NETWORK_ERROR_0
SIRI_VOX_WIFI_ERROR_0
SIRI_VOX_WIFI_ERROR_1
SIRI_VOX_DEVICE_PROBLEM_NETWORK_0
SIRI_VOX_DEVICE_PROBLEM_NETWORK_1
SIRI_VOX_DEVICE_PROBLEM_NETWORK_2
SIRI_VOX_AUDIO_PASSCODE_INSTRUCTION
SIRI_VOX_SYSTEM_FACTORY_RESET_CONFIRMATION
SIRI_VOX_STORE_DEMO_STYLE_1_INTRO_VERSION_1
SIRI_VOX_STORE_DEMO_STYLE_1_STAGE_1_VERSION_1
SIRI_VOX_STORE_DEMO_STYLE_1_STAGE_2_VERSION_1
SIRI_VOX_STORE_DEMO_STYLE_1_OUTRO_VERSION_1
SIRI_VOX_STORE_DEMO_STYLE_1_STAGE_1_VERSION_2
SIRI_VOX_STORE_DEMO_STYLE_1_STAGE_2_VERSION_2
SIRI_VOX_STORE_DEMO_STYLE_1_STAGE_3_VERSION_1
SIRI_VOX_STORE_DEMO_STYLE_1_STAGE_3_VERSION_2
SIRI_VOX_STORE_DEMO_STYLE_1_STAGE_3_VERSION_3
SIRI_VOX_STORE_DEMO_STYLE_2_INTRO_VERSION_1
SIRI_VOX_STORE_DEMO_STYLE_2_STAGE_1_VERSION_1
SIRI_VOX_STORE_DEMO_STYLE_2_STAGE_2_VERSION_1
SIRI_VOX_STORE_DEMO_STYLE_2_STAGE_3_VERSION_1
SIRI_VOX_STORE_DEMO_STYLE_2_STAGE_3_VERSION_2
SIRI_VOX_STORE_DEMO_STYLE_2_STAGE_3_VERSION_3
SIRI_VOX_STORE_DEMO_STYLE_2_OUTRO_VERSION_1
%@ {type = %@, context = %@}
%@ {type = %@}
down
serviceCommandHandler
activityListener
audioPowerUpdateListener
siriModesManager
audioStreamingListener
sessionDataSource
%@ {command = %@, handlers = %@, taskTracker = %@}
Service command handling context deallocated for command %@.
-[SVXServiceCommandTransaction _removeBlockingTransaction:]
-[SVXServiceCommandTransaction _prepare]
-[SVXServiceCommandTransaction _handler:didPrepareSuccessfully:context:completion:]
-[SVXServiceCommandTransaction _didPrepareAll]
-[SVXServiceCommandTransaction _handle]
Failed to prepare command %@.
-[SVXServiceCommandTransaction _handler:didHandleWithResult:completion:]
-[SVXServiceCommandTransaction _didHandleAll]
-[SVXServiceCommandTransaction _invalidate]
Service command handling context invalidated for command %@.
%@ {timestamp = %llu, session = %@}
%@ {sessionUUID = %@, instanceContext = %@}
-[SVXSession dealloc]
SVXSession.m
serviceCommandHandler != nil
-[SVXSession initWithPerformer:serviceCommandHandler:speechSynthesizer:instanceContext:preferences:analytics:delegate:]
SIRI_VOX_SYSTEM_DEVICE_SETUP_COMPLETION
-[SVXSession activateWithContext:options:deviceSetupContext:deviceProblemsState:localDeviceContext:speechSynthesisRecord:speechSynthesisState:speechRecordingAlertPolicy:completion:]
-[SVXSession updateDeviceProblemsState:]
-[SVXSession updateDeviceSetupContext:]
-[SVXSession updateLocalDeviceContext:]
-[SVXSession assistantConnectionSpeechRecordingWillBegin:]
-[SVXSession assistantConnection:speechRecordingWillBeginWithInputAudioPowerXPCWrapper:]
-[SVXSession assistantConnection:speechRecordingDidBeginOnAVRecordRoute:audioSessionID:]
-[SVXSession assistantConnection:speechRecordingDidChangeAVRecordRoute:]
-[SVXSession assistantConnectionSpeechRecordingDidDetectStartpoint:]
-[SVXSession assistantConnection:speechRecordingPerformTwoShotPromptWithType:completion:]
-[SVXSession assistantConnectionSpeechRecordingDidEnd:]
-[SVXSession assistantConnectionSpeechRecordingDidCancel:]
-[SVXSession assistantConnection:speechRecordingDidFail:]
-[SVXSession assistantConnection:speechRecognitionDidFail:]
-[SVXSession assistantConnection:speechRecognized:]
-[SVXSession assistantConnection:speechRecognizedPartialResult:]
-[SVXSession assistantConnection:recognizedAdditionalSpeechInterpretation:refId:]
-[SVXSession assistantConnection:recognitionUpdateWithPhrases:utterances:refId:]
-[SVXSession assistantConnectionRequestWillStart:]
-[SVXSession assistantConnectionDismissAssistant:]
-[SVXSession assistantConnectionRequestFinished:]
-[SVXSession assistantConnection:receivedCommand:completion:]
-[SVXSession assistantConnection:requestFailedWithError:requestClass:]
-[SVXSession assistantConnection:shouldSpeak:]
-[SVXSession assistantConnection:didChangeAudioSessionID:]
-[SVXSession assistantConnectionAudioSessionDidBeginInterruption:]
-[SVXSession assistantConnectionAudioSessionDidEndInterruption:shouldResume:]
-[SVXSession assistantConnection:setUserActivtiyInfoAndMakeCurrent:webpageURL:]
-[SVXSession assistantConnection:willStartAudioPlaybackRequest:]
-[SVXSession assistantConnection:didStartAudioPlaybackRequest:]
-[SVXSession assistantConnection:didStopAudioPlaybackRequest:error:]
-[SVXSession assistantConnection:didHandleQuickStopWithAction:]
-[SVXSession assistantConnection:willProcessStartPlayback:intent:completion:]
-[SVXSession assistantConnection:startPlaybackDidFail:]
-[SVXSession assistantConnection:audioSessionWillBecomeActive:]
-[SVXSession assistantConnection:audioSessionDidBecomeActive:]
-[SVXSession assistantConnection:startUIRequestWithText:completion:]
-[SVXSession assistantConnection:startUIRequestWithInfo:completion:]
-[SVXSession acquireAudioSessionForReason:completion:]
v16@?0@"<AFSetAudioSessionActiveContextMutating>"8
-[SVXSession acquireAudioSessionForReason:completion:]_block_invoke
v24@?0@"AFSetAudioSessionActiveResult"8@?<v@?>16
-[SVXSession speechSynthesizerDidBecomeBusy:]
-[SVXSession speechSynthesizerDidBecomeIdle:]
-[SVXSession speechSynthesizer:willEnqueueRequest:taskTracker:]
-[SVXSession speechSynthesizer:willStartRequest:taskTracker:]
-[SVXSession speechSynthesizer:didStartRequest:record:taskTracker:]
-[SVXSession speechSynthesizer:didFinishRequest:utteranceInfo:record:taskTracker:]
-[SVXSession speechSynthesizer:didCancelRequest:taskTracker:]
-[SVXSession speechSynthesizer:didInterruptRequest:taskTracker:]
-[SVXSession speechSynthesizer:didFailRequest:taskTracker:error:]
-[SVXSession taskTrackingCenterWillBecomeBusy:]
-[SVXSession taskTrackingCenter:didBeginTrackingTaskWithContext:]
-[SVXSession taskTrackingCenter:didEndTrackingTaskWithContext:]
-[SVXSession taskTrackingCenterDidBecomeIdle:]
-[SVXSession _activateWithContext:options:deviceSetupContext:deviceProblemsState:localDeviceContext:speechSynthesisRecord:speechSynthesisState:speechRecordingAlertPolicy:taskTracker:completion:]
-[SVXSession _activateWithContext:options:deviceSetupContext:deviceProblemsState:localDeviceContext:speechSynthesisRecord:speechSynthesisState:speechRecordingAlertPolicy:taskTracker:completion:]_block_invoke
Rejected alarms and timers announcement activation because there's an ongoing speech request.
isDeviceInSetupFlow
-[SVXSession _deactivateWithContext:completion:]
-[SVXSession _preheatWithStyle:]
-[SVXSession _startSpeechRequestWithOptions:clearsContext:deviceSetupContext:deviceProblemsState:localDeviceContext:taskTracker:completion:]
-[SVXSession _stopSpeech]
-[SVXSession _stopSpeechWithCurrentSpeechRequestOptions]
-[SVXSession _transitSpeechToManualEndpointing]
-[SVXSession _transitSpeechToAutomaticEndpointing]
-[SVXSession _updateSpeechEndpointerOperationMode:]
-[SVXSession _startRequestWithInfo:clearsContext:deviceSetupContext:taskTracker:completion:]
-[SVXSession _startSpeechSynthesisRequest:languageCode:voiceName:gender:audioSessionID:introductionSoundID:conclusionSoundID:taskTracker:postActivationHandler:completion:]
v24@?0q8@?<v@?>16
Start Speech Synthesis Request (External)
-[SVXSession _startSpeechSynthesisRequest:languageCode:voiceName:gender:audioSessionID:introductionSoundID:conclusionSoundID:taskTracker:postActivationHandler:completion:]_block_invoke
v20@?0I8@"NSError"12
-[SVXSession _startActiveAudioSessionRequestForType:taskTracker:completion:]
v16@?0@"<AFAssertionContextMutating>"8
v24@?0@"AFAssertionContext"8@"NSError"16
-[SVXSession _startActiveAudioSessionRequestForType:taskTracker:completion:]_block_invoke
-[SVXSession beginWaitingForMyriadDecision]
-[SVXSession endWaitingForMyriadDecisionWithToken:result:]
-[SVXSession _beginWaitingForMyriadDecisionWithToken:]
-[SVXSession _endWaitingForMyriadDecisionWithToken:state:]
-[SVXSession _resetMyriadDecision]
-[SVXSession _cancelRequestWithOptions:keepTaskTracker:]
B24@?0@"SVXTaskContext"8^B16
-[SVXSession _dismiss]
-[SVXSession _setCurrentState:]
-[SVXSession _continuePendingSpeechRequest:]
-[SVXSession _clearContext]
-[SVXSession _setApplicationContext:]
-[SVXSession _addRequestBarrier:]
-[SVXSession _performNextPendingRequestBarrier]
-[SVXSession _discardPendingRequestBarriers]
-[SVXSession _setInputAudioPowerWrapper:]
-[SVXSession _setOutputAudioPowerWrapper:]
-[SVXSession _forceAudioSessionActiveWithOptions:reason:completion:]
-[SVXSession _forceAudioSessionActiveWithOptions:reason:completion:]_block_invoke
-[SVXSession _forceAudioSessionInactiveWithReason:completion:]
-[SVXSession _forceAudioSessionInactiveWithReason:completion:]_block_invoke
-[SVXSession _setAudioSessionID:]
-[SVXSession _getAlarmAndTimerFiringContextWithCompletion:]
q24@?0@"AFClockAlarm"8@"AFClockAlarm"16
q24@?0@"AFClockTimer"8@"AFClockTimer"16
v16@?0@"<SVXAlarmAndTimerFiringContextMutating>"8
-[SVXSession _currentAccessoryInfo]_block_invoke
v16@?0@"AFHomeAccessoryInfo"8
-[SVXSession _checkIsActiveWithCompletion:]
-[SVXSession _checkIsActiveWithCompletion:]_block_invoke
-[SVXSession _checkIsActiveWithCompletion:]_block_invoke_2
-[SVXSession _resignActiveForReason:]
-[SVXSession _resignActiveForReason:]_block_invoke
v16@?0@?<v@?>8
-[SVXSession _resignActiveForReason:]_block_invoke_2
-[SVXSession _invalidate]
-[SVXSession _requestWillBeginWithTaskTracker:]
-[SVXSession _requestDidEndWithOptions:error:]
%@ %@
-[SVXSession _handleSpeechRecordingWillBeginWithInputAudioPowerXPCWrapper:]
-[SVXSession _handleSpeechRecordingDidBeginOnAVRecordRoute:]
-[SVXSession _handleSpeechRecordingDidChangeAVRecordRoute:]
-[SVXSession _handleSpeechRecordingDidDetectStartpoint]
-[SVXSession _handleSpeechRecordingPerformTwoShotPromptWithType:completion:]
Current activation context does not allow speech recording.
Failed to play phatic prompt.
Unsupported Two-Shot prompt type %ld.
-[SVXSession _handleSpeechRecordingDidEnd]
-[SVXSession _handleSpeechRecordingDidCancel]
-[SVXSession _handleSpeechRecordingDidFailWithError:]
-[SVXSession _handleSpeechRecognitionDidFailWithError:]
-[SVXSession _handleSpeechRecognized:]
-[SVXSession _handleSpeechRecognizedPartialResult:]
-[SVXSession _handleRequestWillStart]
-[SVXSession _handleDismissAssistant]
-[SVXSession _handleRequestFinished]
-[SVXSession _handleReceivedCommand:completion:]
-[SVXSession _handleRequestFailedWithError:]
-[SVXSession _handleShouldSpeak:]
-[SVXSession _handleDidChangeAudioSessionID:]
-[SVXSession _handleAudioSessionDidBeginInterruption]
-[SVXSession _handleAudioSessionDidEndInterruption:]
-[SVXSession _handleWillStartAudioPlaybackRequest:]
-[SVXSession _handleDidStartAudioPlaybackRequest:]
-[SVXSession _handleDidStopAudioPlaybackRequest:error:]
-[SVXSession _handleDidHandleQuickStopWithActions:]
-[SVXSession _handleWillProcessStartPlaybackWithDestination:intent:completion:]
-[SVXSession _handleDidFailStartPlaybackWithDestination:]
-[SVXSession _handleAudioSessionWillBecomeActive:]
-[SVXSession _handleAudioSessionDidBecomeActive:]
-[SVXSession _willChangeFromState:toState:]
-[SVXSession _didChangeFromState:toState:]
-[SVXSession _beginThinking]
-[SVXSession _endThinking]
-[SVXSession _handleSpeechSynthesizerWillBecomeBusy]
-[SVXSession _handleSpeechSynthesizerDidBecomeIdle]
-[SVXSession _handleSpeechSynthesizerWillStartRequest:taskTracker:]
-[SVXSession _handleSpeechSynthesizerDidStartRequest:record:taskTracker:]
-[SVXSession _handleSpeechSynthesizerDidFinishRequest:record:taskTracker:]
-[SVXSession _handleSpeechSynthesizerDidFinishRequest:record:taskTracker:]_block_invoke
-[SVXSession _handleSpeechSynthesizerDidCancelRequest:taskTracker:]
-[SVXSession _handleSpeechSynthesizerDidInterruptRequest:taskTracker:]
-[SVXSession _handleSpeechSynthesizerDidFailRequest:taskTracker:error:]
-[SVXSession _presentError:taskTracker:completion:]
SIRI_VOX_TIMEOUT_ERROR_%u
client#errorTimeout
SIRI_VOX_DEVICE_PROBLEM_NETWORK_%u
client#errorNetworkProblems
SIRI_VOX_%@_ERROR_%u
WLAN
WIFI
client#errorWiFi
SIRI_VOX_NETWORK_ERROR_%u
client#errorNetwork
SIRI_VOX_GENERIC_ERROR_%u
client#errorGeneric
SIRI_VOX_DEVICE_PROBLEM_FIXING_%u
client#errorTryAgain
SIRI_VOX_DEVICE_PROBLEM_HARDWARE%@_%u
client#errorHardwareProblems
SIRI_VOX_DEVICE_PROBLEM_THERMAL%@_%u
client#errorThermalProblems
-[SVXSession _presentError:taskTracker:completion:]_block_invoke
-[SVXSession _presentError:taskTracker:completion:]_block_invoke_2
-[SVXSession _handleCommand:taskTracker:completion:]
-[SVXSession _handleCommand:taskTracker:completion:]_block_invoke_2
-[SVXSession _connection:]
-[SVXSession _invalidateConnection]
-[SVXSession _startSessionIdleTimerWithTimeInterval:]
-[SVXSession _stopSessionIdleTimer]
-[SVXSession _sessionIdleFiredWithAssertion:]
-[SVXSession _sessionIdleFiredWithAssertion:]_block_invoke
UAUserActivityTypeSiri
/System/Library/PrivateFrameworks/UserActivity.framework/UserActivity
SiriVOXService
com.apple.SiriVOXService
v16@?0@"<AFClientConfigurationMutating>"8
v16@?0@"<AFSpeechRecordingAlertPolicyMutating>"8
v16@?0@"<AFSpeechRecordingAlertBehaviorMutating>"8
keyFrameID
offset
keyFrameID = %ld (%@)
offset = %@
SVXDeviceSetupFlowDisplayKeyFrame::keyFrameID
SVXDeviceSetupFlowDisplayKeyFrame::text
SVXDeviceSetupFlowDisplayKeyFrame::offset
SVXDeviceSetupFlowDisplayKeyFrame::duration
scenes
scenes = %@
SVXDeviceSetupFlow::identifier
SVXDeviceSetupFlow::languageCode
SVXDeviceSetupFlow::gender
SVXDeviceSetupFlow::scenes
-[SVXMyriadHostDevice startAdvertising:withMyriadGoodnessScoreContext:withMyriadAudioContext:completion:]_block_invoke
-[SVXMyriadHostDevice _armEmergencyDispatchTimerFor:toExecute:]
-[SVXMyriadHostDevice _disarmMyriadEmergencyTimer]_block_invoke
-[SVXMyriadHostDevice _startAdvertisingEmergency:]
-[SVXMyriadHostDevice _signalEmergencyCallHandledStatus:]_block_invoke
Myriad failed to handle emergency
-[SVXMyriadHostDevice myriadCoordinatorDidHandleEmergency:]
SIRI_VOX_FIRING_TIMER_ANNOUNCEMENT_DURATION_UNIT_HOUR_%@
SIRI_VOX_FIRING_TIMER_ANNOUNCEMENT_DURATION_UNIT_MINUTE_%@
SIRI_VOX_FIRING_TIMER_ANNOUNCEMENT_DURATION_UNIT_SECOND_%@
SIRI_VOX_FIRING_TIMER_ANNOUNCEMENT_DURATION_HOURS_MINUTES_SECONDS
SIRI_VOX_FIRING_TIMER_ANNOUNCEMENT_DURATION_HOURS_MINUTES
SIRI_VOX_FIRING_TIMER_ANNOUNCEMENT_DURATION_HOURS_SECONDS
SIRI_VOX_FIRING_TIMER_ANNOUNCEMENT_DURATION_MINUTES_SECONDS
SVXServiceCommandHandlerUIRepeatIt.m
[command isKindOfClass:[SAUIRepeatIt class]]
-[SVXServiceCommandHandlerUIRepeatIt handleCommand:withContext:taskTracker:completion:]_block_invoke
deviceSetupCompletion
deviceFactoryResetConfirmation
deviceAudioDuckingCoordination
alarmFired
alarmSnoozed
alarmDismissed
timerFired
timerSnoozed
timerDismissed
alarmsAndTimersAnnouncement
speechSynthesis
30Hertz
60Hertz
120Hertz
input
output
audioSessionDeactivationDelay
audioSessionDeactivationDelay = %@
SVXDeactivationOptions::audioSessionDeactivationDelay
approved
declined
-[SVXClientSpeechSynthesisService prewarmRequest:]_block_invoke
-[SVXClientSpeechSynthesisService synthesizeRequest:completion:]_block_invoke
-[SVXClientSpeechSynthesisService synthesizeRequest:audioChunkHandler:completion:]_block_invoke
-[SVXClientSpeechSynthesisService enqueueRequest:completion:]_block_invoke_4
-[SVXClientSpeechSynthesisService cancelPendingRequest:]_block_invoke_2
-[SVXClientSpeechSynthesisService stopRequest:]_block_invoke_2
-[SVXClientSpeechSynthesisService _addAudioChunkHandler:forUUID:]
-[SVXClientSpeechSynthesisService _removeAudioChunkHandlerForUUID:]
-[SVXClientSpeechSynthesisService _handleSynthesizedBufferForHandlerUUID:audioChunkData:audioChunkIndex:]
-[_SVXPlayAudioExpressionParser parsePlayAudio:reply:]
-[_SVXPlayAudioExpressionParser parsePlayAudio:reply:]_block_invoke
range
timeInterval
range = %@
timeInterval = %@
SVXSpeechSynthesisWordTiming::range
SVXSpeechSynthesisWordTiming::timeInterval
intro
stage1
stage2
outro
style1Stage1Version2
style1Stage2Version2
style1Stage3Version1
style1Stage3Version2
style1Stage3Version3
style2IntroVersion1
style2Stage1Version1
style2Stage2Version1
style2Stage3Version1
style2Stage3Version2
style2Stage3Version3
style2OutroVersion1
NSString *SVXSessionGetLanguageCode(BOOL, AFPreferences *__strong)
SVXSessionUtils.m
SVXSessionGetLanguageCode
%s Voicemail did not play long enough to be marked as read
%s Error marking voicemail as read: %@
%s Serialization failed: %@
%s More than one platform dependency of type SVXPlatformDependencyTypeSiriModesManager has been provided. Will pick the last one in the array.
%s Invalidating %tu transactions...
%s Removing %tu transactions...
%s PreSynthesis failed: %@
%s fromState = %@, toState = %@
%s _currentState = %@
%s currentState = %@
%s listener %@ does NOT conform to protocol %@
%s listener %@
%s Announcing %@ to %tu listeners.
%s outputVoiceInfo = %@
%s context = %@
%s context = %@, uuid = %@
%s activatedDeviceSetupFlowScene = %@
%s deviceRegionCode = %@
%s activeAccount = %@
%s activeAccount.storeFrontIdentifier = %@
%s Unable to load active store front due to an error.
%s Unable to load active store front because the user is not signed in.
%s currentLocalAccount = %@
%s localAccount.storeFrontIdentifier = %@
%s Unable to load local store front due to an error.
%s AppleMediaServices is not available on this platform.
%s languageCode = %@
%s languageCode = %@ (override)
%s gender = %@
%s siriIntroScene = %@
%s tryHeySiriCapabilitiesScene = %@
%s siriCapabilitiesScene = %@
%s tryHeySiriMusicOrNewsOrWeatherScene = %@
%s hasActiveAccount = %d
%s hasActiveAccount = %d (override)
%s isNewsRestricted = %d
%s isNewsRestricted = %d (override)
%s languageCode = %@, gender = %@
%s request = %@
%s result = %@
%s heySiriCapabilitiesRange = %@
%s heySiriCapabilitiesString = %@
%s sceneID = %@, languageCode = %@, gender = %@, hint = %@
%s siriCapabilityHomeRange = %@
%s siriCapabilityHomeString = %@
%s siriCapabilityNewsRange = %@
%s siriCapabilityNewsString = %@
%s siriCapabilityWeatherRange = %@
%s siriCapabilityWeatherString = %@
%s siriCapabilityClockRange = %@
%s siriCapabilityClockString = %@
%s siriCapabilityMusicRange = %@
%s scene = %@
%s heySiriMusicRange = %@
%s heySiriMusicString = %@
%s heySiriNewsRange = %@
%s heySiriNewsString = %@
%s heySiriWeatherRange = %@
%s heySiriWeatherString = %@
%s Begin device setup at %@.
%s End device setup at %@.
%s contextsByUUID = %@
%s beginDate = %@ (actual), beginDate = %@ (expected)
%s endDate = %@ (actual), endDate = %@ (expected)
%s Clean up device setup.
%s No need to clean up device setup.
%s needsUpdate = %d
%s latestContext = %@
%s effectiveContext = %@
%s %@ -> %@
%s SVXStoreDemoTranscriptID = %lu
%s flag = %d, activationContext = %@, deactivationContext = %@
%s _isAudioSessionActive = %d, no need to deliver the delegate callbacka again.
%s dialogIdentifier = %@
%s soundID = %@
%s soundID = %@, error = %@
%s activationContext = %@
%s Client session activity state is active when begin becoming active.
%s Client session activity state is active when end becoming active.
%s options = %@, duration = %f
%s Client session activity state is inactive when begin resigning active.
%s deactivationContext = %@
%s Client session activity state is inactive when end resigning active.
%s alarmAndTimerFiringContext = %@
%s Got an unknown response %@ when attempting to parse expressions. Bailing
%s No parseable expressions - parsing failed
%s reply
%s %@ is not configured or already invalidated.
%s isActive = %d
%s activationSource = %@
%s session = %@
%s type = %@
%s wrapper = %@
%s request = %@, handlerUUID = %@
%s Not sending audio chunks to client because the handler UUID is nil.
%s handlerUUID = %@, audioChunkIndex = %tu, audioChunkData = %@
%s error = %@
%s handled = %d
%s Waiting for pending audio chunks to be sent to the client and acknowledged by the client...
%s Finished waiting for pending audio chunks to be sent to the client and acknowledged by the client.
%s flow = %@, error = %@
%s context = %@, error = %@
%s type = %@, wrapper = %@
%s %@ is already invalidated.
%s %@
%s instanceInfo: %@ -> %@
%s Activating audio services with timeout...
%s Activated audio services with timeout.
%s Failed to activate audio services with timeout. (result = %d)
%s preparedAddViews = %@
%s Begin TTS request group %@ for %@.
%s End TTS request group %@ for %@.
%s AceView has an SADialog...using the identifier for that: %@
%s Overriding listenAfterSpeaking due to defaults
%s speakableText = %@
%s Begin TTS request %@ for %@.
%s End TTS request %@ for %@ with result %@.
%s speakablePrefix = %@
%s speakableDelimiter = %@
%s speakableFinalDelimiter = %@
%s disambiguationListItems[%tu].speakableText = %@
%s speakableSuffix = %@
%s components = %lu
%s KeepAlive
%s Failed KeepAlive (error = %@)
%s Done KeepAlive
%s Invalidate
%s %@ is released without explicitly calling -relinquish.
%s Starting SiriVOX service in %@ (pid=%d) on %@...
%s Started SiriVOX service in %@ (pid=%d) on %@.
%s Stopping SiriVOX service in %@ (pid=%d) on %@...
%s Stopped SiriVOX service in %@ (pid=%d) on %@.
%s Ignored because the XPC listener is unexpected.
%s Checking entitlement %@ on %@...
%s Entitlement value of SVXMachServiceEntitlements.clientService is expected to be an NSNumber.
%s Entitlement value of SVXMachServiceEntitlements.clientService is expected to be true.
%s Connected to %@.
%s Checking instance info on %@...
%s Instance info on %@ is %@.
%s Virtual device for %@ is %@.
%s Virtual device for %@ is unavailable. Disconnect now.
%s Instance info on %@ is unavailable. Disconnect now.
%s requestInfo = %@, context = %@
%s Unable to find a virtual device for context %@.
%s Unable to get the prewarm handler from virtual device %@.
%s Prewarming %@...
%s Prewarmed %@.
%s Unable to get the activation handler from virtual device %@.
%s Activating %@...
%s Failed to activate %@. (error = %@)
%s Activated %@.
%s Unable to activate with context %@ for virtual device %@.
%s reason = %@, options = %@, context = %@
%s Unable to get the deactivation handler from virtual device %@.
%s Deactivating %@...
%s Deactivated %@.
%s Unable to get the myriad event handler from virtual device %@.
%s Handling continuous voice trigger %@...
%s Continuous voice trigger handled %@.
%s Unknown myriad source %ld or event %@...
%s connection = %@
%s BTLE Device should abort session
%s End waiting for Myriad token %@ as lost.
%s BTLE willObtainTracker
%s BTLE released audio session tracker (error = %@)
%s BTLE didObtainTracker = %@
%s BTLE deactivate
%s BTLE Device continues to interact
%s End waiting for Myriad token %@ as won.
%s BTLE Device should unduck audio
%s BTLE released audio session tracker
%s notifyObserver = %@, fromState = %llu, toState = %llu
%s numberOfQueuedOperations = %lu
%s Creating new session...
%s New session %@ created with (%@, %@, %@), configuring...
%s New session %@ configured with (%@, %@, %@) and is ready to go.
%s dequeuedOperation = %@
%s currentSession = %@
%s activityState = %@
%s Ignored because activation source %@ does not support preheat.
%s context = %@, activityState = %ld
%s lastWin = %@
%s speechSynthesisState = %@
%s speechSynthesisRecord = %@
%s deviceProblemsState = %@
%s deviceSetupContext = %@
%s localDeviceContext = %@
%s Ignored because Myriad behavior undefined for Unspecified Activation Source: %@
%s Myriad configured for Direct Trigger with context %@.
%s Begin waiting for Myriad token %@.
%s Myriad configured for Voice Trigger with goodness score context %@ and myriad context %@.
%s preparedSpeakableText = %@
%s presynthesizedAudio = %@
%s provider = %@
%s frequency = %@
TextToSpeech
%s speechSynthesizer = %@, request = %@
%s speechSynthesizer = %@, request = %@, finishedSpeaking = %d, error = %@
%s speechSynthesizer = %@, request = %@, atEnd = %d, error = %@
%s speechSynthesizer = %@, request = %@, instrumentMetrics = %@, error = %@
%s speechSynthesizer = %@, request = %@, timingInfo.count = %tu
%s %@ {textRange = %@, startTime = %f}
%s speechSynthesizer = %@, request = %@, audio = %@
%s languageCode: %@, gender: %ld, outputVoiceInfo: %@
%s Using voice name %@ for %@, %ld
%s Using fallback voice name %@ for language code: %@ outputLanguageCode: %@, %ld
%s Voice name %@ for %@, %ld
%s audioSessionID = %lu
%s Skipped prewarming because audio session ID is unknown.
%s locale changed from %@ to %@.
%s outputVoiceInfo changed from %@ to %@.
%s audioSessionID changed from %lu to %lu.
%s %@ -useSpecificAudioSession: %lu
%s speechRequest = %@
%s Started TTS for current speaking context. (_currentSpeakingContext = %@)
%s Emit instrumentation: %@
%s speechRequest = %@, success = %d, error = %@
%s Stopped TTS for current speaking context. (_currentSpeakingContext = %@)
%s presynthesizedAudioRequest = %@
%s Started TTS with presynthesized audio for current speaking context. (_currentSpeakingContext = %@)
%s presynthesizedAudioRequest = %@, success = %d, error = %@
%s Stopped TTS with presynthesized audio for current speaking context. (_currentSpeakingContext = %@)
%s presynthesizedAudioRequest = %@, instrumentMetrics = %@, error = %@
%s speechRequest = %@, speechWordTimingInfoArray = %@
%s speechRequest = %@, audioChunkData = %@
%s speechRequest = %@, instrumentMetrics = %@, error = %@
%s Ignored because current speaking context (%@) has a higher priority.
%s Ignored because pending speaking context (%@) has a higher priority.
%s Ignored because no priority is specified.
%s (numberOfContexts: %tu -> %tu)
%s Skipped prewarming because there's no audio session ID configured.
%s Skipped processing next pending context because there is no pending context.
%s Skipped processing pending contexts because there's no suitable pending context.
%s Dequeued %tu pending contexts to process.
%s Dequeued[%tu] = %@
%s There's no context to start.
%s TTS is disabled. Cancel speaking context %@.
%s Attempted to start a new speaking context when the current speaking context still exists. (_currentSpeakingContext = %@)
%s Setting current speaking context. (_currentSpeakingContext = %@)
%s Acquiring active audio session...
%s Failed to acquire active audio session. (error = %@)
%s Acquired active audio session. (assertion = %@)
%s There's no context to continue.
%s Unable to continue context (context = %@, error = %@).
%s Unable to continue context (context = %@).
%s streamID = %@
%s Caching presynthesized audio... (speechSynthesizer = %@, presynthesizedAudioRequest = %@)
%s Speech synthesizer failed to cache presynthesized audio. (error = %{public}@)
%s Cached presynthesized audio. (speechSynthesizer = %@, presynthesizedAudioRequest = %@)
%s Speakable utterance parser failed to parse speakable text. (speakableText = %{public}@, speakableUtteranceParser = %{public}@, error = %{public}@)
%s Starting TTS with presynthesized audio for speaking context... (speechSynthesizer = %@, presynthesizedAudioRequest = %@)
%s Speech synthesizer failed to start TTS with presynthesized audio. (error = %{public}@)
%s Started TTS with presynthesized audio for speaking context. (speechSynthesizer = %@, presynthesizedAudioRequest = %@)
%s Speech synthesizer failed. (error = %{public}@)
%s containsPrivacySensitiveContents = %d
%s Starting synthesizing context... (speechSynthesizer = %@, speechRequest = %@)
%s Speech synthesizer failed to start synthesizing. (error = %{public}@)
%s Started synthesizing context. (speechSynthesizer = %@, speechRequest = %@)
%s Starting TTS for speaking context... (speechSynthesizer = %@, speechRequest = %@)
%s Speech synthesizer failed to start TTS. (error = %{public}@)
%s Started TTS for speaking context... (speechSynthesizer = %@, speechRequest = %@)
%s There's no pending context to cancel.
%s (_currentSpeakingContext = %@, interruptionBehavior = %@)
%s There's no current speaking context to stop.
%s Current speaking context does NOT have an underlying speech request or presynthesized audio request when attempted to stop TTS. (_currentSpeakingContext = %@)
%s Stopping TTS for current speaking request... (speechSynthesizer = %@, speechRequest = %@, speechBoundary = %ld)
%s Speech synthesizer failed to stop TTS. (error = %{public}@)
%s Stopping TTS with presynthesized audio for current request... (speechSynthesizer = %@, presynthesizedAudioRequest = %@)
%s Speech synthesizer failed to stop TTS with presynthesized audio. (error = %{public}@)
%s context = %@, resultType = %@, utterance = %@, error = %@
%s Connecting...
%s Failed to connect due to error %@.
%s Connected.
%s retryCount = %tu
%s Canonical locale identifier is nil, fallback to use language code %@ directly.
%s No language code.
%s Locale is nil. (Siri language code is %@)
%s Resolved locale is %@.
%s Output voice info is nil.
%s Output voice info does not have language code.
%s Siri language code is %@.
%s Output voice language code is %@.
%s Resolved output voice info is %@.
%s taskTracker = %@, childTaskTracker = %@
%s taskTracker = %@
%s %@ will become busy.
%s Adding %@.
%s Added %@.
%s numberOfContexts = %tu
%s Removing %@.
%s Removed %@.
%s %@ did become idle.
%s numberOfContextsToEnd = %tu
%s Service command handler is missing for %@. Please file a radar.
%s AddDialogs transformed into commands: %@
%s AddDialogs handler delegating command handling for command %@
%s AddDialogs handler successfully prepared context for command %@
%s AddDialogs handler preparing context failed for command %@
%s AddDialogs could not find an handler for command: %@ with handlers: %@
%s AddDialogs handler finished preparing commands with %tu command/context pairs and %tu failed commands
%s AddDialogs handler retrieved %tu command/context pairs from context
%s AddDialogs handler received a result command handling for command %@
%s Looking for parseable expressions in command %@
%s Expression doesn't require remote parse: %@
%s Successfully parsed expressions for command: %@
    Parsed expressions: %@
%s Applying parsed expression %@ to view %@
    Parsed expression: %@
    View: %@
%s Splicing in applied parsed expression
    Original views: %@
    Updated views: %@
%s Failed splicing updated view for view in array
    Updated ace view: %@
    Original ace view: %@
    Updated views array: %@
%s Found no parseable expressions in command %@
%s #SVXInstrumentation - Start new turn (for analytics %@) because current turn is nil
%s #SVXInstrumentation - Start turn (for analytics %@) from current turn (%@)
%s #SVXInstrumentation - Start new turn for analytics (%@)
%s #SVXInstrumentation - Emit invocation event (source %@)
%s Emitting unknown UIStateTransition; this implies there are unaccounted session state transitions, add them here
%s #SVXInstrumentation - Emit state transition event (current: %@, next: %@)
%s #SVXInstrumentation - Emit state transition (dismissed) event (current: %@, dismissalReason: %@)
%s #SVXInstrumentation - Emit state transition (idle) event
%s #SVXInstrumentation - Emit UUFR said event (dialogIdentifier: %@, dialogPhase: %@)
%s #SVXInstrumentation - Emit TTS Request Received event
%s #SVXInstrumentation - Unable to convert. Using unknown MDMode.
%s #SVXInstrumentation - Emit UUFR said event (dialogIdentifier: %@, dialogPhase: %@, mode: %@)
%s This SPI has been deprecated, please use -enqueueButtonEvent: instead.
%s buttonEvent = %@
%s userInfo = %@
%s text = %@
%s buttonEvent = %@, userInfo = %@
%s systemEvent = %@
%s systemEvent = %@, userInfo = %@
%s Deprecated. Please use -deactivateWithUserInfo:options:completion: or -deactiateWithButtonEvent:userInfo:options:completion:
%s userInfo = %@, options = %@
%s buttonEvent = %@, userInfo = %@, options = %@
%s type = %@, timestamp = %llu
%s Ignored because the last button activation context is nil.
%s Ignored because the source of the last button activation context is not button. (_lastButtonActivationContext = %@)
%s Ignored because the type of the button event in last button activation context is not down. (_lastButtonActivationContext = %@)
%s Ignored because the timestamp of the button event in last button activation context is 0. (_lastButtonActivationContext = %@)
%s Ignored because no matching button up event can be found in the button event queue. (_lastButtonActivationContext = %@, _queuedButtonEvents = %@)
%s Matched button up event %@ for button down event %@ of last button activation context %@.
%s buttonHoldDuration = %f
%s done (context = %@, error = %@)
%s _lastButtonActivationContext = %@
%s done (context = %@)
%s Started preheat timer for %f seconds.
%s Stopped preheat timer.
%s Preheat timer fired!
%s Validating button event %@ for activation...
%s Rejected button event for activation because it is nil.
%s Rejected button event for activation because the type is %@.
%s Rejected button event for activation because the timestamp is %llu.
%s Validating system event %@ for activation...
%s Rejected system event for activation because it is nil.
%s Rejected system event for activation because the type is %@, but the deviceSetupFlowScene is nil.
%s Rejected system event for activation because the type is %@, but the storeDemo is nil.
%s Rejected system event for activation because the type is %@, but speechSynthesisRequest is nil.
%s Rejected system event for activation because the type is %@.
%s Don't know how to generate a parseable expression for context object: %@
%s Parsing expression with parsing service: %@
%s Service successfully parsed expression: %@
%s Parsed expression has no data: %@
%s Service failed to parse expression: %@
%s No expression to parse for PlayVoicemail: %@
%s Acquiring assertion with timeout time: %f seconds
%s SoundAutoConfig is not available on this platform.
%s deviceContextConnection = %@
%s Ignored becuase the device context connection is %@, not %@.
%s deviceContextConnection = %@, localDeviceContext = %@
%s #myriad Initializing Myriad on host device
%s #myriad
%s languageCode = %@, gender = %@, hint = %@
%s Backward Compatibility: Mapped sceneID %@ to style %@.
%s flow = %@
%s _currentSetupContext = %@
%s %@ is no longer blocked by %@.
%s Ignored because state is %ld.
%s Ignored because blocked by %@.
%s performer = %@, serviceCommandHandler = %@, speechSynthesizer = %@, instanceContext = %@, preferences = %@, analytics = %@, delegate = %@
%s sessionUUID = %@
%s TurnID = %@, previousTurnID = %@
%s connection = %@, wrapper = %@
%s connection = %@, route = %@, audioSessionID = %lu
%s connection = %@, route = %@
%s connection = %@, type = %ld
%s connection = %@, error = %@
%s connection = %@, speechRecognized = %@, text = %@
%s connection = %@, partialResult = %@, text = %@
%s connection = %@, interpretation = %@, refId = %@
%s connection = %@, phrases = %@, utterances = %@, refId = %@
%s connection = %@, command = %@
%s connection = %@, error = %@, requestClass = %@
%s connection = %@, shouldSpeak = %d
%s connection = %@, sessionID = %lu
%s connection = %@, shouldResume = %d
%s connection = %@, info = %@, url = %@
%s connection = %@, request = %@
%s connection = %@, request = %@, error = %@
%s connection = %@, actions = %tu
%s connection = %@, playbackType = %ld, intent = %@
%s connection = %@, playbackType = %ld
%s connection = %@, flag = %d
%s connection = %@, text = %@
%s connection = %@, info = %@
%s reason = %@
%s BEGIN -acquireAudioSession (context = %@)
%s END -acquireAudioSession (context = %@, duration = %f, result = %@)
%s SESSION IS ACTIVE (%@)
%s speechSynthesizer = %@
%s speechSynthesizer = %@, request = %@, taskTracker = %@
%s speechSynthesizer = %@, request = %@, record = %@, taskTracker = %@
%s speechSynthesizer = %@, request = %@, utteranceInfo = %@, record = %@, taskTracker = %@
%s speechSynthesizer = %@, request = %@, taskTracker = %@, error = %@
%s taskTrackingCenter = %@
%s taskTrackingCenter = %@, context = %@
%s context = %@, options = %@, taskTracker = %@
%s deviceSetupContext = %@, deviceProblemsState = %@
%s speechSynthesisRecord = %@, speechSynthesisState = %@
%s speechRecordingAlertPolicy = %@
%s Siri is not enabled.
%s Siri is not reachable.
%s Presenting error %d for task tracker %@
%s Starting active audio session request for Myriad...
%s Starting active audio session request for Audio Ducking Coordination...
%s deviceSetupFlowSceneID = %@, introductionSoundID = %@, conclusionSoundID = %@, deviceSetupFlowSiriCapabilitiesHint = %@
%s storeDemo = %@
%s No valid localizationKey
%s Unable to activate with context %@ because the current activation context %@ is a speech request.
%s speechSynthesisRequest = %@
%s requestInfo = %@
%s Siri is in device setup mode and is active.
%s Barged-in over Siri request.
%s Barged-in over Siri voice output.
%s Barged-in over home announcement playback.
%s Barged-in over media playback.
%s Barged-in over firing alarms.
%s Barged-in over firing timers.
%s Disabled input and output audio power updates.
%s speechRequestOptions.activationEvent = %@
%s speechRequestOptions.activationEventTime = %f
%s speechRequestOptions.activationEventMachAbsoluteTime = %llu
%s speechRequestOptions.bargeInOptions = %lu
%s speechRequestOptions.disableInputAudioPowerUpdate = %d
%s speechRequestOptions.disableOutputAudioPowerUpdate = %d
%s speechRequestOptions.endpointerOperationMode = %@
%s speechRequestOptions.homeButtonDownEventTime = %f
%s speechRequestOptions.homeButtonDownEventMachAbsoluteTime = %llu
%s speechRequestOptions.isMediaPlaying = %d
%s speechRequestOptions.speechSynthesisRecord = %@
%s speechRequestOptions.recordingAlertPolicy = %@
%s speechRequestOptions.reloadSmartSiriVolume = %d
%s Unable to activate with context %@.
%s Rejected Myriad deactivation because the current activation context is %@.
%s Rejected Myriad deactivation because the current activation timestamp is %llu.
%s style = %ld
%s options = %@, clearsContext = %d, taskTracker = %@
%s Attempting to start a new speech request during an existing speech recording.
%s clearContext
%s setApplicationContext: %@
%s Ignored because _currentRequestUUID is nil.
%s Ignored because _currentSpeechRequestOptions is nil.
%s speechEndpointerOperationMode = %@
%s requestInfo = %@, clearsContext = %d, deviceSetupContext = %@, taskTracker = %@
%s speechSynthesisRequest = %@, languageCode = %@, name = %@, gender = %@, introductionSoundID = %@, conclusionSoundID = %@, taskTracker = %@
%s SESSION IS ACTIVE (%@) (with external audio session %u) 
%s type = %zd, taskTracker = %@
%s Acquiring audio ducking coordination assertion...
%s Relinquished audio ducking coordination assertion with error %@.
%s Relinquished audio ducking coordination assertion with context %@.
%s Acquired audio ducking coordination assertion %@.
%s token = %@
%s token = %@, result = %d
%s _myriadState (%ld -> %ld)
%s _myriadToken (%@ -> %@)
%s state = %ld, token = %@
%s Ignored because input token (%@) does not match _myriadToken (%@).
%s result = %d
%s success = %d
%s Ignored because _currentRequestUUID is not nil.
%s Input audio power updater not supported.
%s Input audio power updater disabled by current speech request options %@.
%s Output audio power updater not supported.
%s Output audio power updater disabled by current speech request options %@.
%s BEGIN -forceAudioSessionActive (options = %lu, reason = %ld)
%s END -forceAudioSessionActive (options = %lu, reason = %ld, duration = %f, audioSessionID = %lu, error = %@)
%s END -forceAudioSessionActive (options = %lu, reason = %ld, duration = %f, audioSessionID = %lu)
%s BEGIN -forceAudioSessionInactive (reason = %@)
%s END -forceAudioSessionInactive (reason = %@, duration = %f)
%s Relinquishing audio ducking coordination assertion %@...
%s No clock alarm snapshot.
%s clockAlarmSnapshot = %@
%s No clock timer snapshot.
%s clockTimerSnapshot = %@
%s orderedFiringAlarms = %@
%s orderedFiringTimers = %@
%s hasOtherRunningTimers = %d
%s currentAccessoryInfo = %@
%s %@ is active. (_currentRequestUUID = %@)
%s %@ is active. (_audioSessionAssertions.count = %tu)
%s _audioSessionAssertions = (
%s     %@
%s )
%s %@ is active. (_taskTrackingCenter.contextsOfAllTrackedTasks.count = %tu)
%s _taskTrackingCenter.contextsOfAllTrackedTasks = (
%s %@ is NOT active.
%s Ignored because session is still active.
%s audioSessionDeactivationDelay = %f
%s SESSION IS INACTIVE (%@)
%s Force audio session inactive now...
%s Done force audio session inactive.
%s Force audio session inactive in %f seconds.
%s Skipped force audio session inactive after %f seconds delay, becuase sessino is active again.
%s Skipped force audio session inactive after %f seconds delay, becuase activity state is %@.
%s Skipped force audio session inactive after %f seconds delay, becuase deactivation context changed from %@ to %@ while waiting.
%s Session unspecified.
%s Session is already inactive.
%s Session is already resigning active.
%s Session is ready to resign active.
%s SESSION GOING INACTIVE (%@)
%s SESSION GOING ACTIVE (%@)
%s BEGIN REQUEST (_currentRequestUUID = %@)
%s options = %tu, error = %@
%s options = %tu
%s Ignored presenting %@ because request ending options = %tu.
%s Ignored presenting %@ because UUFR was presented.
%s Using built-in error dialogs.
%s END REQUEST (_currentRequestUUID = %@)
%s Ignored resign active because request ending options = %tu
%s _currentActivationContext does not allow speech recording. (_currentActivationContext = %@)
%s recordRoute = %@
%s type = %ld
%s Failing with invalid times because _currentRequestUUID is nil.
%s _currentState is expected to be %@ when the speech recording is ended. (_currentState = %@)
%s _currentState is expected to be %@ when the speech recording is canceled. (_currentState = %@)
%s _currentState is expected to be %@ when the speech recording is failed. (_currentState = %@)
%s _currentActivationContext does not allow speech recording and recognition. (_currentActivationContext = %@)
%s speechRecognized = %@
%s partialResult = %@
%s command = %@
%s Ignoring as current activation context is from %@
%s Ignored %@ because it does not contain speakable texts.
%s Ignored %@ because it is expository and UUFR has already been presented.
%s Ignored %@ because it is expository and UUFR is going to be presented.
%s shouldSpeak = %d
%s shouldResume = %d
%s updating start time for request: %@
%s updating finish time for request: %@
%s actions = %tu
%s destination = %ld, intent = %@
%s Failing without setting flags because _currentRequestUUID is nil (mostly likely a -prepareForAudioHandoffWithCompletion: call is happening outside of a request.
%s destination = %ld
%s flag = %d
%s request = %@, record = %@
%s listensAfterSpeaking = YES
%s listensAfterSpeaking: Scheduled activation context %@ in request barrier.
%s listensAfterSpeaking: Executing request barrier with activation context %@.
%s listensAfterSpeaking: Cancelled request barrier with activation context %@.
%s request = %@, error = %@
%s Begin waiting for Myriad decision...
%s End waiting for Myriad decision with result %d.
%s Begin presenting error %@...
%s End presented error %@.
%s The error %@ is not presented because of Myriad decision.
%s The error %@ is not presented because it is suppressed.
%s The error %@ is not presented. Please take a sysdiagnose and file a radar.
%s command = %@, taskTracker = %@
%s UUFR PRESENT
%s Begin handle command %@ with task tracker %@.
%s End handle command %@ with task tracker %@ and response %@.
%s createIfAbsent = %d
%s Set up %@
%s Tear down %@
%s Started session idle timer for %f seconds (assertion = %@).
%s Stopped all session idle timers (assertions = %@).
%s Fired session idle timer (assertion = %@), but there are still other active timers (assertions = %@).
%s Fired last session idle timer (assertion = %@).
%s _currentSpeechRequestOptions = %@
%s _currentSpeechRequestContinueBlock = %@
%s _currentSpeechRequestPendingBlocks = %@
%s Ignored because session is active.
%s _activityState = %lu
%s #myriad advertisementType:%lu, context=%@, goodnessScoreContext=%@
%s #myriad Myriad emergency timer armed
%s #myriad Myriad emergency timer disarmed
%s #myriad Begin Emergency Call
%s #myriad Emergency call handled status: %d
%s handlerUUID = %@
%s Audio chunk handler UUID is nil.
%s Audio chunk handler is nil.
%s No expression to parse for PlayAudio: %@
%s Siri language code is nil.
%s Best supported Siri language is nil.
%s Default Siri language is %@.
%s Best supported Siri language is %@.
%s Resolved Siri language code is %@.
_SVXServiceCommandHandlerPlayVoiceMail
SVXServiceCommandHandling
NSObject
SVXClientServiceManager
SVXClientServiceConnectionDelegate
SVXClientServiceProviding
SVXServiceCommandHandler
SVXModuleInstance
SVXServiceCommandHandlerPreSynthesizeTTS
SVXClientSessionStateService
SVXClientServiceConsuming
SVXClientSessionStateServicing
SVXDeviceSetupContext
NSCopying
NSSecureCoding
NSCoding
_SVXDeviceSetupContextMutation
SVXDeviceSetupContextMutating
SVXDeviceSetupContextMutability
SVXSpeechSynthesisListening
SVXSpeechSynthesisAnnouncer
SVXPlatformDependency
SVXAnnouncer
SubclassResponsibility
SVXUserFeedbackAudioContent
_SVXUserFeedbackAudioContentMutation
SVXUserFeedbackAudioContentMutating
SVXUserFeedbackAudioContentMutability
_SVXExpressionParser
SVXQueuePerformer
SVXPerforming
_SVXMainQueuePerformer
SVXServiceCommandDelayedActionStore
SVXDeviceSetupManager
SVXSessionActivationListening
AFMemoryPressureListening
SVXModuleInstanceMap
SVXModuleInstanceProviding
SVXSpeechSynthesisRequest
_SVXSpeechSynthesisRequestMutation
SVXSpeechSynthesisRequestMutating
SVXSpeechSynthesisRequestMutability
SiriVOX
SVXUserFeedbackVoiceContent
_SVXUserFeedbackVoiceContentMutation
SVXUserFeedbackVoiceContentMutating
SVXUserFeedbackVoiceContentMutability
SVXClientAudioSystemService
SVXClientAudioSystemServicing
SVXServiceCommandHandlerUICloseAssistant
SVXClientSessionService
SVXClientSessionServicing
SVXServiceCommandDelayedAction
SVXModule
SVXDeviceProblemsState
_SVXDeviceProblemsStateMutation
SVXDeviceProblemsStateMutating
SVXDeviceProblemsStateMutability
SVXTaskContext
_SVXTaskContextMutation
SVXTaskContextMutating
SVXTaskContextMutability
SVXServiceCommandHandlerRegistry
SVXDeviceSetupFlowScene
_SVXDeviceSetupFlowSceneMutation
SVXDeviceSetupFlowSceneMutating
SVXDeviceSetupFlowSceneMutability
SVXAudioPowerUpdateListening
SVXAudioPowerUpdateAnnouncer
SVXVirtualDevice
SVXAlarmAndTimerFiringContext
_SVXAlarmAndTimerFiringContextMutation
SVXAlarmAndTimerFiringContextMutating
SVXAlarmAndTimerFiringContextMutability
SVXServiceCommandHandlerClientCoordinationPhoneCall
_SVXRemoteExpressionParsingService
SVXExpressionParsingServing
SVXButtonEvent
_SVXButtonEventMutation
SVXButtonEventMutating
SVXButtonEventMutability
SVXSessionActivityListening
SVXSessionActivityAnnouncer
SVXClientServiceServerConnection
SVXClientService
SVXAudioStreamBasicDescription
_SVXAudioStreamBasicDescriptionMutation
SVXAudioStreamBasicDescriptionMutating
SVXAudioStreamBasicDescriptionMutability
SVXServiceCommandHandlerUIAddViews
SVXUserFeedback
_SVXUserFeedbackMutation
SVXUserFeedbackMutating
SVXUserFeedbackMutability
SVXClientServiceConnection
SVXClientServiceDelegate
SVXAudioSessionAssertion
SVXDaemon
NSXPCListenerDelegate
AFSiriActivationListenerDelegate
SVXClientServiceServerConnectionDelegate
SVXSessionManager
SVXMyriadResponseDelegate
AFNotifyObserverDelegate
AFQueueDelegate
SVXSessionDelegate
SVXDeviceContextListening
SVXDeviceSetupListening
SVXPrewarmHandling
SVXActivationHandling
SVXDeactivationHandling
SVXMyriadEventHandling
SVXMyriadRequestHandling
SVXServiceCommandHandlerUISayIt
SVXTStubExpressionParsingService
SVXDeviceContextAnnouncer
SVXClientAudioPowerService
AFAudioPowerUpdaterDelegate
SVXClientAudioPowerServicing
SVXSpeechSynthesizer
VSSpeechSynthesizerDelegate
SVXClientKeepAliveService
SVXClientKeepAliveServicing
SVXTaskTracker
SVXTaskTracking
SVXDeactivationContext
_SVXDeactivationContextMutation
SVXDeactivationContextMutating
SVXDeactivationContextMutability
SVXActivationContext
_SVXActivationContextMutation
SVXActivationContextMutating
SVXActivationContextMutability
SVXDeviceSetupFlowSiriCapabilitiesHint
_SVXDeviceSetupFlowSiriCapabilitiesHintMutation
SVXDeviceSetupFlowSiriCapabilitiesHintMutating
SVXDeviceSetupFlowSiriCapabilitiesHintMutability
SVXTaskTrackingCenter
SVXTaskTrackingDelegate
SVXSpeechSynthesisResult
_SVXSpeechSynthesisResultMutation
SVXSpeechSynthesisResultMutating
SVXSpeechSynthesisResultMutability
SVXClientInfo
_SVXClientInfoMutation
SVXClientInfoMutating
SVXClientInfoMutability
SVXServiceCommandHandlerFallback
SVXSessionActivationAnnouncer
SVXDeviceSetupOptions
_SVXDeviceSetupOptionsMutation
SVXDeviceSetupOptionsMutating
SVXDeviceSetupOptionsMutability
SVXServiceCommandHandlerUIDelayedActionCommand
SVXStoreDemo
_SVXStoreDemoMutation
SVXStoreDemoMutating
SVXStoreDemoMutability
SVXSpeechSynthesisContext
SVXUserFeedbackScene
_SVXUserFeedbackSceneMutation
SVXUserFeedbackSceneMutating
SVXUserFeedbackSceneMutability
Convenience
SVXDeviceSetupFlowSceneBuilder
_AddDialogsContextPair
SVXServiceCommandHandlerUIAddDialogs
SVXSpeechSynthesisUtteranceInfo
_SVXSpeechSynthesisUtteranceInfoMutation
SVXSpeechSynthesisUtteranceInfoMutating
SVXSpeechSynthesisUtteranceInfoMutability
_SVXAddViewsExpressionParser
SVXUserFeedbackNode
_SVXUserFeedbackNodeMutation
SVXUserFeedbackNodeMutating
SVXUserFeedbackNodeMutability
SVXClientActivationService
SVXClientActivationServicing
SVXServiceCommandHandlerUIDelayedActionCancelCommand
SVXSystemEvent
_SVXSystemEventMutation
SVXSystemEventMutating
SVXSystemEventMutability
SVXSpeechSynthesisAudio
_SVXSpeechSynthesisAudioMutation
SVXSpeechSynthesisAudioMutating
SVXSpeechSynthesisAudioMutability
_SVXPlayVoicemailExpressionParser
_SVXServiceCommandHandlerSmsPlayAudio
SVXServiceCommandResult
SVXClientServiceServer
SVXMyriadWiFiAssertion
SVXSystemObserver
AFDeviceContextConnectionDelegate
SVXAceCommandHandling
SVXMyriadDeviceManager
SVXMyriadRequestDelegate
_SVXSpeakableNamespaceDomainOccurrenceProvider
AFSpeakableNamespaceProvider
SVXClientDeviceService
SVXClientDeviceServicing
SVXSessionOperation
SVXServiceCommandTransaction
SVXPlaybackRequestInfo
SVXSessionIdleAssertion
SVXSession
AFAssistantUIService
AFSpeechDelegate
SVXTaskTrackingCenterDelegate
SVXAudioSessionProviding
SVXDeviceSetupFlowDisplayKeyFrame
_SVXDeviceSetupFlowDisplayKeyFrameMutation
SVXDeviceSetupFlowDisplayKeyFrameMutating
SVXDeviceSetupFlowDisplayKeyFrameMutability
SVXDeviceSetupFlow
_SVXDeviceSetupFlowMutation
SVXDeviceSetupFlowMutating
SVXDeviceSetupFlowMutability
SVXMyriadHostDevice
AFMyriadDelegate
SVXSpeechSynthesis
SVXServiceCommandHandlerUIRepeatIt
SVXDeactivationOptions
_SVXDeactivationOptionsMutation
SVXDeactivationOptionsMutating
SVXDeactivationOptionsMutability
SVXClientSpeechSynthesisService
SVXClientSpeechSynthesisServicing
_SVXPlayAudioExpressionParser
SVXSpeechSynthesisWordTiming
_SVXSpeechSynthesisWordTimingMutation
SVXSpeechSynthesisWordTimingMutating
SVXSpeechSynthesisWordTimingMutability
SVXSpeechSynthesisConfiguration
SVXDeviceSetupAnnouncer
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
init
supportedCommandClass
initWithFormat:
resultIgnored
targetDevice
initWithAceHandler:
preferences
initWithParsingService:preferences:
_audioPlaybackDuration:
initWithItemURL:itemData:numberOfLoops:volume:fadeInDuration:fadeOutDuration:userInfo:
aceId
resultFailureWithErrorCode:reason:
resultSuccess
voiceMailId
_markVoiceMailAsRead:forRemoteDevice:
startAudioPlaybackRequest:options:completion:
getCurrentSessionUsingBlock:
parsePlayVoicemail:reply:
UUID
UUIDString
setAceId:
setIdentifier:
setObject:
dictionary
dataWithPropertyList:format:options:error:
setSerializedCommand:
setRemoteDevice:
handleCommand:afterCurrentRequest:commandHandler:completion:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
isCommandUUFR:
handleCommand:withContext:taskTracker:completion:
identifier
shouldDependOnCommand:
prepareToHandleCommand:completion:
T@"NSString",R,N
T#,R,N
initWithSessionManager:module:
.cxx_destruct
_sessionManager
_module
_identifier
T@"NSString",R,N,V_identifier
length
getBytes:range:
sharedMainQueuePerformer
sharedAnalytics
initWithClientServiceProvider:analytics:performer:
initWithType:clientServiceProvider:analytics:performer:
_connect
_connection
performBlock:
performBlock:withOptions:
currentContext
initWithQueuePerformer:activationService:audioSystemService:deviceService:inputAudioPowerService:outputAudioPowerService:sessionService:speechSynthesisService:keepAliveService:instanceContext:delegate:
sharedManager
clientServiceConnectionDidInvalidate:
clientServiceConnection:performerForComponent:
getClientServiceUsingBlock:errorHandler:
activationService
sessionStateService
sessionService
inputAudioPowerService
outputAudioPowerService
speechSynthesisService
deviceService
audioSystemService
keepAliveService
_performer
_analytics
_activationService
_sessionStateService
_sessionService
_inputAudioPowerService
_outputAudioPowerService
_speechSynthesisService
_deviceService
_audioSystemService
_keepAliveService
T@"<SVXClientKeepAliveServicing>",R,N,V_keepAliveService
T@"<SVXClientActivationServicing>",R,N,V_activationService
T@"<SVXClientSessionStateServicing>",R,N,V_sessionStateService
T@"<SVXClientSessionServicing>",R,N,V_sessionService
T@"<SVXClientAudioPowerServicing>",R,N,V_inputAudioPowerService
T@"<SVXClientAudioPowerServicing>",R,N,V_outputAudioPowerService
T@"<SVXClientSpeechSynthesisServicing>",R,N,V_speechSynthesisService
T@"<SVXClientDeviceServicing>",R,N,V_deviceService
T@"<SVXClientAudioSystemServicing>",R,N,V_audioSystemService
performer
_reset
handlersForCommand:
countByEnumeratingWithState:objects:count:
_handleCommand:taskTracker:completion:
initWithResult:
initWithFixedMode:
sessionManager
speechSynthesizer
count
type
serviceCommandHandler
addObject:
siriModesManager
modeProvider
initWithSpeechSynthesizer:module:modeProvider:
initWithSpeechSynthesizer:module:
arrayWithObjects:count:
initWithSpeechSynthesizer:
initWithHandlers:modeProvider:
initWithSessionManager:
initWithDelayedActionStore:performer:
initWithDelayedActionStore:sessionManager:performer:
initWithSpeechSynthesizer:performer:
arrayByAddingObjectsFromArray:
initWithHandlers:
invalidate
removeAllObjects
removeAllActions
copy
handleResult:forCommand:completion:
initWithPerformer:command:handlers:taskTracker:dependencies:completion:
setRefId:
setErrorCode:
setReason:
handleResultUsingIgnoredBlock:successBlock:failureBlock:commandBlock:
initWithModule:
startWithModuleInstanceProvider:platformDependencies:
stopWithModuleInstanceProvider:
reset
handleCommand:taskTracker:completion:
fallbackModeProvider
_handlerRegistry
_fallbackHandler
_delayedActionStore
_transactions
_fallbackModeProvider
dialogStrings
aceAudioData
streamIds
speakableContextInfo
objectAtIndex:
initWithPriority:options:speakableText:speakableContext:localizationKey:presynthesizedAudio:streamID:
error
synthesizeRequest:audioChunkHandler:taskTracker:analyticsContext:completion:
enumerateObjectsUsingBlock:
_speechSynthesizer
objectForKey:
integerValue
_setCurrentState:
sessionStateService:willChangeStateFrom:to:
sessionStateService:didChangeStateFrom:to:
fetchStateWithCompletion:
fetchSessionStateWithCompletion:
clientServiceDidChange:
currentState
delegate
setDelegate:
Tq,R,N
T@"<SVXClientSessionStateServiceDelegate>",W,N
handleWillChangeSessionStateFrom:to:
handleDidChangeSessionStateFrom:to:
_clientServiceProvider
_currentState
_delegate
Tq,R,N,V_currentState
T@"<SVXClientSessionStateServiceDelegate>",W,N,V_delegate
_descriptionWithIndent:
numberWithUnsignedLongLong:
componentsJoinedByString:
timestamp
options
flowScene
beginDate
endDate
decodeObjectOfClass:forKey:
unsignedLongLongValue
initWithTimestamp:options:flowScene:beginDate:endDate:
encodeObject:forKey:
supportsSecureCoding
copyWithZone:
encodeWithCoder:
initWithCoder:
TB,R
_timestamp
_options
_flowScene
_beginDate
_endDate
TQ,R,N,V_timestamp
T@"SVXDeviceSetupOptions",R,C,N,V_options
T@"SVXDeviceSetupFlowScene",R,C,N,V_flowScene
T@"NSDate",R,C,N,V_beginDate
T@"NSDate",R,C,N,V_endDate
initWithBaseModel:
setTimestamp:
setOptions:
setFlowScene:
setBeginDate:
setEndDate:
generate
_baseModel
_mutationFlags
mutatedCopyWithMutator:
newWithBuilder:
speechSynthesizerDidBecomeBusy:
speechSynthesizerDidBecomeIdle:
speechSynthesizer:willEnqueueRequest:taskTracker:
speechSynthesizer:willStartRequest:taskTracker:
speechSynthesizer:didStartRequest:record:taskTracker:
speechSynthesizer:didFinishRequest:utteranceInfo:record:taskTracker:
speechSynthesizer:didCancelRequest:taskTracker:
speechSynthesizer:didInterruptRequest:taskTracker:
speechSynthesizer:didFailRequest:taskTracker:error:
protocol
initWithServiceCommandHandler:
initWithSessionActivityListener:
initWithAudioPowerUpdateListener:
initWithSiriModesManager:
initWithAudioStreamingListener:
initWithSessionDataSource:
activityListener
audioPowerUpdateListener
audioStreamingListener
sessionDataSource
_type
_serviceCommandHandler
_activityListener
_audioPowerUpdateListener
_siriModesManager
_audioStreamingListener
_sessionDataSource
Tq,R,N,V_type
T@"<SVXServiceCommandHandling>",R,N,V_serviceCommandHandler
T@"<SVXSessionActivityListening>",R,N,V_activityListener
T@"<SVXAudioPowerUpdateListening>",R,N,V_audioPowerUpdateListener
T@"<SVXSiriModesManaging>",R,N,V_siriModesManager
T@"<SVXAudioStreamingListening>",R,N,V_audioStreamingListener
T@"<SVXSessionDataSource>",R,N,V_sessionDataSource
weakObjectsHashTable
dealloc
removeObject:
methodSignatureForSelector:
selector
invokeWithTarget:
_accessListenersUsingBlock:
doesNotRecognizeSelector:
setRepresentation
addListener:
removeListener:
removeAllListeners
forwardInvocation:
_protocolRequiredInstanceMethodSignaturesBySelector
_protocolOptionalInstanceMethodSignaturesBySelector
_listeners
raise:format:
signatureWithObjCTypes:
numberWithUnsignedInteger:
numberWithDouble:
numberOfLoops
fadeInDuration
fadeOutDuration
itemURL
unsignedIntegerValue
doubleValue
initWithItemURL:numberOfLoops:fadeInDuration:fadeOutDuration:
_itemURL
_numberOfLoops
_fadeInDuration
_fadeOutDuration
T@"NSURL",R,C,N,V_itemURL
TQ,R,N,V_numberOfLoops
Td,R,N,V_fadeInDuration
Td,R,N,V_fadeOutDuration
setItemURL:
setNumberOfLoops:
setFadeInDuration:
setFadeOutDuration:
parsingService
_parsingService
_preferences
T@"<SVXExpressionParsingServing>",R,N,V_parsingService
T@"AFPreferences",R,N,V_preferences
sampleRate
formatID
formatFlags
bytesPerPacket
framesPerPacket
bytesPerFrame
channelsPerFrame
bitsPerChannel
reserved
unsignedIntValue
initWithSampleRate:formatID:formatFlags:bytesPerPacket:framesPerPacket:bytesPerFrame:channelsPerFrame:bitsPerChannel:reserved:
UTF8String
_initWithIdentifier:queue:options:
_performBlock:withOptions:
_isExecutingInContext
performBlock:afterDelay:
performBlock:afterGroup:
initWithIdentifier:qosClass:relativePriority:options:
queue
_queue
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
orderedFiringAlarms
orderedFiringTimers
hasOtherRunningTimers
firstObject
title
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
initWithInstanceContext:
sharedPreferences
languageCode
gender
defaultGenderForOutputVoiceLanguageCode:
canonicalLocaleIdentifierFromString:
localeWithLocaleIdentifier:
currentCalendar
setLocale:
setCalendar:
setDateStyle:
setTimeStyle:
appendString:
svx_speakableDurationStringWithLanguageCode:gender:
appendFormat:
hour
setHour:
minute
setMinute:
dateFromComponents:
stringFromDate:
setObject:forKey:
removeObjectForKey:
actionForKey:
setAction:forKey:
removeActionForKey:
_actionsByKey
_prepareForSetupWithContext:completion:
_setContext:forUUID:
addActivationListener:
sharedObserver
removeActivationListener:
_evictCachedContents
systemEvent
deviceSetupFlowScene
_updateEffectiveContext
ams_sharedAccountStore
ams_activeiTunesAccount
ams_storefront
ams_localiTunesAccount
isEqualToString:
_cachedSceneWithID:forLanguageCode:andGender:siriCapabilitiesHint:
_prepareSiriIntroSceneWithLanguageCode:gender:completion:
_prepareTryHeySiriCapabilitiesSceneWithLanguageCode:gender:completion:
setStyle:
_prepareSiriCapabilitiesSceneWithID:languageCode:gender:hint:completion:
_prepareTryHeySiriMusicSceneWithLanguageCode:gender:completion:
_prepareTryHeySiriWeatherSceneWithLanguageCode:gender:completion:
_prepareTryHeySiriNewsSceneWithLanguageCode:gender:completion:
hasActiveAccount
caseInsensitiveCompare:
hasPrefix:
isNewsRestricted
initWithSceneID:speakableText:displayKeyFrames:siriCapabilitiesHint:
initWithIdentifier:languageCode:gender:scenes:
utteranceInfo
utterance
wordTimings
range
substringWithRange:
timeInterval
speakableText
initWithKeyFrameID:text:offset:duration:
_cacheScene:forLanguageCode:andGender:
date
enumerateKeysAndObjectsUsingBlock:
_setEffectiveContext:
deviceSetupManager:didUpdateContext:
style
sceneID
siriCapabilitiesHint
sessionManager:willActivateWithContext:
sessionManager:didActivateWithContext:
sessionManager:didNotActivateWithContext:error:
sessionManager:willDeactivateWithContext:
sessionManager:didDeactivateWithContext:
memoryPressureObserver:didChangeFromCondition:toCondition:
prepareForSetupWithContext:completion:
setContext:forUUID:
getContextWithCompletion:
_cachedSceneMapsByVoiceKey
_announcer
_contextsByUUID
_activatedDeviceSetupFlowScene
_effectiveContext
moduleInstanceWithIdentifier:
clientServiceServer
systemObserver
deviceSetupManager
T@"SVXClientServiceServer",R,N
T@"SVXServiceCommandHandler",R,N
T@"SVXSessionManager",R,N
T@"SVXSpeechSynthesizer",R,N
T@"SVXSystemObserver",R,N
T@"SVXDeviceSetupManager",R,N
initWithDictionaryRepresentation:
dictionaryRepresentation
_dictionaryRepresentation
T@"NSDictionary",R,C,N,V_dictionaryRepresentation
numberWithInteger:
priority
speakableContext
localizationKey
presynthesizedAudio
streamID
setWithObjects:
decodeObjectOfClasses:forKey:
_priority
_speakableText
_speakableContext
_localizationKey
_presynthesizedAudio
_streamID
Tq,R,N,V_priority
TQ,R,N,V_options
T@"NSString",R,C,N,V_speakableText
T@"NSDictionary",R,C,N,V_speakableContext
T@"NSString",R,C,N,V_localizationKey
T@"SVXSpeechSynthesisAudio",R,C,N,V_presynthesizedAudio
T@"NSString",R,C,N,V_streamID
setPriority:
setSpeakableText:
setSpeakableContext:
setLocalizationKey:
setPresynthesizedAudio:
setStreamID:
svx_parseableExpression
svx_applyParsedExpression:
numberWithBool:
isPhonetic
text
boolValue
initWithText:isPhonetic:
_isPhonetic
_text
T@"NSString",R,C,N,V_text
TB,R,N,V_isPhonetic
setText:
setIsPhonetic:
audioSystemService:audioSessionWillBecomeActive:
audioSystemService:audioSessionWillBecomeActiveWithActivationContext:
audioSystemService:audioSessionWillBecomeInactiveWithDeactivationContext:
audioSystemService:audioSessionDidBecomeActive:
audioSystemService:audioSessionDidBecomeActiveWithActivationContext:
audioSystemService:audioSessionDidBecomeInactiveWithDeactivationContext:
T@"<SVXClientAudioSystemServiceDelegate>",W,N
handleAudioSessionWillBecomeActive:activationContext:deactivationContext:
handleAudioSessionDidBecomeActive:activationContext:deactivationContext:
_isAudioSessionActive
T@"<SVXClientAudioSystemServiceDelegate>",W,N,V_delegate
initWithSource:timestamp:buttonEvent:clientInfo:userInfo:options:
deactivateWithContext:completion:
sessionService:willChangeStateFrom:to:
sessionService:didChangeStateFrom:to:
sessionService:willPresentFeedbackWithDialogIdentifier:
sessionService:willStartSoundWithID:
sessionService:didStartSoundWithID:
sessionService:didStopSoundWithID:error:
sessionService:willBecomeActiveWithActivationContext:
sessionService:didBecomeActiveWithActivationContext:
sessionService:willResignActiveWithOptions:duration:
sessionService:didResignActiveWithDeactivationContext:
sessionServiceDidResignActive:
fetchSessionActivityStateWithCompletion:
fetchAlarmAndTimerFiringContextWithCompletion:
T@"<SVXClientSessionServiceDelegate>",W,N
handleWillChangeStateFrom:to:
handleDidChangeStateFrom:to:
handleWillPresentFeedbackWithDialogIdentifier:
handleWillStartSoundWithID:
handleDidStartSoundWithID:
handleDidStopSoundWithID:error:
handleWillBecomeActiveWithActivationContext:
handleDidBecomeActiveWithActivationContext:
handleWillResignActiveWithOptions:duration:
handleDidResignActiveWithDeactivationContext:
_isActive
T@"<SVXClientSessionServiceDelegate>",W,N,V_delegate
initWithCommand:taskTracker:
command
taskTracker
_command
_taskTracker
T@"SAUIDelayedActionCommand",R,C,N,V_command
T@"<SVXTaskTracking>",R,N,V_taskTracker
sharedInstance
localizedStringForKey:table:bundle:languageCode:
bundleIdentifier
stringByReplacingOccurrencesOfString:withString:
bundleWithIdentifier:
bundleWithPath:
stringWithFormat:
initWithIdentifier:instanceClass:instanceContext:preferences:analytics:performer:
instanceClass
instanceContext
analytics
isActive
setIsActive:
_instanceClass
_instanceContext
TB,N,V_isActive
T@"NSString",R,C,N,V_identifier
T#,R,N,V_instanceClass
T@"AFInstanceContext",R,N,V_instanceContext
T@"AFAnalytics",R,N,V_analytics
T@"<SVXPerforming>",R,N,V_performer
isFixingProblems
problems
initWithIsFixingProblems:problems:
_isFixingProblems
_problems
TB,R,N,V_isFixingProblems
TQ,R,N,V_problems
setIsFixingProblems:
setProblems:
speechRequestOptions
activationEventMachAbsoluteTime
isSpeechRequest
setSource:
event
initWithType:timestamp:
setButtonEvent:
setRequestInfo:
userInfo
setUserInfo:
origin
isUUFR
listensAfterSpeaking
sessionUUID
requestUUID
refId
dialogIdentifier
dialogPhase
listenAfterSpeakingBehavior
activationContext
deactivationContext
initWithOrigin:timestamp:sessionUUID:requestUUID:aceId:refId:dialogIdentifier:dialogPhase:isUUFR:listensAfterSpeaking:listenAfterSpeakingBehavior:activationContext:deactivationContext:error:
_isUUFR
_listensAfterSpeaking
_origin
_sessionUUID
_requestUUID
_aceId
_refId
_dialogIdentifier
_dialogPhase
_listenAfterSpeakingBehavior
_activationContext
_deactivationContext
_error
Tq,R,N,V_origin
T@"NSUUID",R,C,N,V_sessionUUID
T@"NSUUID",R,C,N,V_requestUUID
T@"NSString",R,C,N,V_aceId
T@"NSString",R,C,N,V_refId
T@"NSString",R,C,N,V_dialogIdentifier
T@"NSString",R,C,N,V_dialogPhase
TB,R,N,V_isUUFR
TB,R,N,V_listensAfterSpeaking
T@"SAUIListenAfterSpeakingBehavior",R,C,N,V_listenAfterSpeakingBehavior
T@"SVXActivationContext",R,C,N,V_activationContext
T@"SVXDeactivationContext",R,C,N,V_deactivationContext
T@"NSError",R,C,N,V_error
setOrigin:
setSessionUUID:
setRequestUUID:
setDialogIdentifier:
setDialogPhase:
setIsUUFR:
setListensAfterSpeaking:
setListenAfterSpeakingBehavior:
setActivationContext:
setDeactivationContext:
setError:
allKeys
addObjectsFromArray:
_handlersByServiceCommandClassName
domain
code
displayKeyFrames
_sceneID
_displayKeyFrames
_siriCapabilitiesHint
Tq,R,N,V_sceneID
T@"NSArray",R,C,N,V_displayKeyFrames
T@"SVXDeviceSetupFlowSiriCapabilitiesHint",R,C,N,V_siriCapabilitiesHint
setSceneID:
setDisplayKeyFrames:
setSiriCapabilitiesHint:
audioPowerWillBeginUpdateForType:wrapper:
audioPowerDidEndUpdateForType:
defaultContext
initWithCapacity:
_startWithModuleInstanceMap:platformDependencies:
_stopWithModuleInstanceMap:
startWithPlatformDependencies:
stop
prewarmHandler
activationHandler
deactivationHandler
myriadEventHandler
_modulesByIdentifier
_moduleInstanceMap
T@"<SVXPrewarmHandling>",R,N
T@"<SVXActivationHandling>",R,N
T@"<SVXDeactivationHandling>",R,N
T@"<SVXMyriadEventHandling>",R,N
isDefault
initWithOrderedFiringAlarms:orderedFiringTimers:hasOtherRunningTimers:
_hasOtherRunningTimers
_orderedFiringAlarms
_orderedFiringTimers
T@"NSOrderedSet",R,C,N,V_orderedFiringAlarms
T@"NSOrderedSet",R,C,N,V_orderedFiringTimers
TB,R,N,V_hasOtherRunningTimers
setOrderedFiringAlarms:
setOrderedFiringTimers:
setHasOtherRunningTimers:
emergencyCall
initiateEmergency:
setExpressions:
setTargetDevice:
parsedExpressions
handleAceCommand:reply:
parseExpressions:targetDevice:reply:
aceHandler
setAceHandler:
_aceHandler
T@"<SVXAceCommandHandling>",&,N,V_aceHandler
setType:
sessionWillChangeFromState:toState:
sessionDidChangeFromState:toState:
sessionWillPresentFeedbackWithDialogIdentifier:
sessionWillStartSoundWithID:
sessionDidStartSoundWithID:
sessionDidStopSoundWithID:error:
sessionWillBecomeActiveWithActivationContext:
sessionDidBecomeActiveWithActivationContext:
sessionWillResignActiveWithOptions:duration:
sessionDidResignActiveWithDeactivationContext:
audioSessionWillBecomeActive:activationContext:deactivationContext:
audioSessionDidBecomeActive:activationContext:deactivationContext:
setRemoteObjectInterface:
setExportedObject:
setExportedInterface:
_connectionInterrupted
setInterruptionHandler:
_connectionInvalidated
setInvalidationHandler:
_getInstanceInfoWithCompletion:
addAudioPowerUpdateListener:
addActivityListener:
invokeWithSignal:
uuid
removeAudioPowerUpdateListener:
removeActivityListener:
_cleanUpXPCConnection
errorWithDomain:code:userInfo:
_performBlockAfterConfigure:
fetchCurrentStateWithCompletion:
fetchCurrentActivityStateWithCompletion:
fetchCurrentAlarmAndTimerFiringContextWithCompletion:
preheatWithActivationSource:
prewarmWithContext:completion:
activateWithContext:completion:
stopSpeech
transitSpeechToAutomaticEndpointing
fetchCurrentAudioPowerWithType:completion:
prewarmRequest:
initWithBlock:
_remoteServiceDelegateWithErrorHandler:
handleSpeechSynthesisSynthesizedBufferForHandlerUUID:audioChunkData:audioChunkIndex:reply:
initWithType:utteranceInfo:error:
enqueueRequest:languageCode:voiceName:gender:audioSessionID:preparation:finalization:taskTracker:analyticsContext:
cancelRequest:
stopRequest:withInterruptionBehavior:
notifyWillActivateWithContext:
notifyDidActivateWithContext:
notifyDidNotActivateWithContext:error:
notifyWillDeactivateWithContext:
notifyDidDeactivateWithContext:
notifyWillBeginUpdateAudioPowerWithType:wrapper:
notifyDidEndUpdateAudioPowerWithType:
notifyWillChangeSessionStateFrom:to:
notifyDidChangeSessionStateFrom:to:
notifySessionWillPresentFeedbackWithDialogIdentifier:
notifySessionWillStartSoundWithID:
notifySessionDidStartSoundWithID:
notifySessionDidStopSoundWithID:error:
notifySessionWillBecomeActiveWithActivationContext:
notifySessionDidBecomeActiveWithActivationContext:
notifySessionWillResignActiveWithOptions:duration:
notifySessionDidResignActiveWithDeactivationContext:
notifyAudioSessionWillBecomeActive:activationContext:deactivationContext:
notifyAudioSessionDidBecomeActive:activationContext:deactivationContext:
remoteObjectProxyWithErrorHandler:
clientServiceServerConnectionDidInvalidate:
_updateInstanceInfo:
getInstanceInfoWithCompletion:
pingWithReply:
performManualEndpointing
transitToAutomaticEndpointing
fetchAudioPowerWithType:completion:
synthesizeRequest:handlerUUID:completion:
enqueueSpeechSynthesisRequest:completion:
cancelPendingSpeechSynthesisRequest:
stopSpeechSynthesisRequest:
setDeviceSetupContext:
prepareForDeviceSetupWithContext:completion:
initWithXPCConnection:performer:delegate:
configureWithDeviceSetupManager:sessionManager:speechSynthesizer:
_xpcConnection
_instanceInfo
_isConfigured
_pendingBlocksAfterConfigure
_deviceSetupManager
_uuid
T@"NSUUID",R,C,N,V_uuid
svx_isDeferredExpressionContextObject
numberWithUnsignedInt:
_formatID
_formatFlags
_bytesPerPacket
_framesPerPacket
_bytesPerFrame
_channelsPerFrame
_bitsPerChannel
_reserved
_sampleRate
Td,R,N,V_sampleRate
TI,R,N,V_formatID
TI,R,N,V_formatFlags
TI,R,N,V_bytesPerPacket
TI,R,N,V_framesPerPacket
TI,R,N,V_bytesPerFrame
TI,R,N,V_channelsPerFrame
TI,R,N,V_bitsPerChannel
TI,R,N,V_reserved
setSampleRate:
setFormatID:
setFormatFlags:
setBytesPerPacket:
setFramesPerPacket:
setBytesPerFrame:
setChannelsPerFrame:
setBitsPerChannel:
setReserved:
af_dialogPhase
isExpository
currentMode
transformAddViews:forMode:
parseAddViews:reply:
context
beginChildWithContext:
views
handleAceView:isExpository:taskTracker:completion:
dialog
dictionaryWithObjects:forKeys:count:
listenAfterSpeaking
listenAfterSpeakingDisabled
instrumentationContext
canUseServerTTS
_modeProvider
items
speakableDelimiter
speakableFinalDelimiter
speakableSuffix
contentType
audioContent
voiceContent
initWithIdentifier:contentType:audioContent:voiceContent:
_contentType
_audioContent
_voiceContent
Tq,R,N,V_contentType
T@"SVXUserFeedbackAudioContent",R,C,N,V_audioContent
T@"SVXUserFeedbackVoiceContent",R,C,N,V_voiceContent
setContentType:
setAudioContent:
setVoiceContent:
_invalidate
initWithComponents:instanceContext:delegate:
_clientServiceDidChange:
_clientServiceWithErrorHandler:
info
handleRequestPermissionToActivateWithContext:completion:
handleWillActivateWithContext:
handleDidActivateWithContext:
handleDidNotActivateWithContext:error:
handleWillDeactivateWithContext:
handleDidDeactivateWithContext:
initWithXPCWrapper:
handleWillBeginUpdateAudioPowerWithProvider:
handleDidEndUpdateAudioPower
handleSynthesizedBufferForHandlerUUID:audioChunkData:audioChunkIndex:reply:
_cleanUpComponents
_cleanUpConnection
initWithMachServiceName:options:
_setQueue:
connectionInterrupted
connectionInvalidated
resume
connectWithCompletion:
requestPermissionToActivateWithContext:completion:
initWithComponents:delegate:
_queuePerformer
_isInvalid
T@"<SVXClientKeepAliveServicing>",R,N
T@"<SVXPerforming>",R,N
T@"<SVXClientActivationServicing>",R,N
T@"<SVXClientAudioSystemServicing>",R,N
T@"<SVXClientDeviceServicing>",R,N
T@"<SVXClientAudioPowerServicing>",R,N
T@"<SVXClientSessionServicing>",R,N
T@"<SVXClientSpeechSynthesisServicing>",R,N
initWithReason:audioSessionID:taskTracker:relinquishHandler:
relinquish
audioSessionID
reason
_relinquishHandler
_audioSessionID
_reason
TI,R,N,V_audioSessionID
T@"NSString",R,C,N,V_reason
initWithMachServiceName:
initWithServicePort:
processInfo
processName
processIdentifier
startWithDelegate:
suspend
handleClientServiceXPCConnection:
valueForEntitlement:
addConnection:
_getVirtualDeviceForInstanceInfo:completion:
_getVirtualDeviceForActivationContext:completion:
activationEvent
continuousVoiceTriggerDetectedWithCompletion:
source
removeConnection:
_enumerateVirtualDevicesUsingBlock:
deviceID
initWithUUIDString:
initialize
listener:shouldAcceptNewConnection:
siriActivationListener:handleIntent:inBackgroundAppWithBundleId:reply:
siriActivationListener:handleIntentForwardingAction:inBackgroundApplicationWithBundleIdentifier:completionHandler:
siriActivationListener:prewarmWithRequestInfo:context:completion:
siriActivationListener:activateWithRequestInfo:context:completion:
siriActivationListener:deactivateForReason:options:context:completion:
siriActivationListener:handleButtonEventFromContext:completion:
siriActivationListener:myriadEventWithRequestInfo:context:completion:
_isRunning
_clientServiceQueuePerformer
_clientServiceListener
_siriActivationListener
_platformDependencies
_hostVirtualDevice
logEventWithType:context:
_preheatWithActivationSource:
_fetchCurrentStateWithCompletion:
_fetchCurrentActivityStateWithCompletion:
_fetchCurrentAudioPowerWithType:completion:
_currentSession:
getAlarmAndTimerFiringContextWithCompletion:
endWaitingForMyriadDecisionWithToken:result:
initWithSource:timestamp:buttonEvent:systemEvent:clientInfo:requestInfo:userInfo:
_fetchStereoPartnerLastMyriadWinDate
initWithInstanceContext:analytics:preferences:delegate:
myriadDuckingEnabled
beginMonitoringAvailability
attachToTether
setAttachmentStatusChangedHandler:
_attachToTether
_handleDeviceSetupContextChanged:
addDeviceContextListener:
_handleLocalDeviceContextChanged:
getLocalDeviceContextWithCompletion:
dequeueAllObjects
_invalidateCurrentSession
removeDeviceContextListener:
stopMonitoringAvailability
_handleDeviceProblemsStateChanged:
_handleSession:willChangeFromState:toState:
_handleSession:didChangeFromState:toState:
_handleSession:willBeginUpdateAudioPowerWithType:wrapper:
_handleSession:didEndUpdateAudioPowerWithType:
_handleSession:willStartSoundWithID:
_handleSession:didStartSoundWithID:
_handleSession:didStopSoundWithID:error:
_handleSession:willBecomeActiveWithActivationContext:activityUUID:
_handleSession:didBecomeActiveWithActivationContext:activityUUID:
_handleSession:willResignActiveWithOptions:duration:activityUUID:
_handleSession:didResignActiveWithDeactivationContext:activityUUID:
_handleSession:willActivateWithContext:
_handleSession:didActivateWithContext:
_handleSession:didNotActivateWithContext:error:
_handleSession:willDeactivateWithContext:
_handleSession:didDeactivateWithContext:
_handleSession:audioSessionWillBecomeActive:activationContext:deactivationContext:
_handleSession:audioSessionDidBecomeActive:activationContext:deactivationContext:
_handleSessionDidInvalidate:
_prewarmWithContext:completion:
startAdvertising:withMyriadGoodnessScoreContext:withMyriadAudioContext:completion:
initWithBlock:defaultValue:
invokeWithValue:
initWithActivationContext:completion:
enqueueObject:
invoke
initWithDeactivationContext:completion:
_handleSpeechSynthesizer:willStartRequest:taskTracker:
_handleSpeechSynthesizer:didStartRequest:record:taskTracker:
_handleSpeechSynthesizer:didFinishRequest:utteranceInfo:record:taskTracker:
_handleSpeechSynthesizer:didCancelRequest:taskTracker:
_handleSpeechSynthesizer:didInterruptRequest:taskTracker:
_handleSpeechSynthesizer:didFailRequest:taskTracker:error:
_processNextOperations
initWithPerformer:serviceCommandHandler:speechSynthesizer:instanceContext:preferences:analytics:delegate:
updateDeviceProblemsState:
updateDeviceSetupContext:
updateLocalDeviceContext:
attach:
dequeueObject
_activateWithContext:activityState:completion:
_deactivateWithContext:completion:
handleOperationUsingActivationBlock:deactivationBlock:
getActivityStateWithCompletion:
preheatWithStyle:
preheatMyriad
systemUptime
activateWithContext:options:deviceSetupContext:deviceProblemsState:localDeviceContext:speechSynthesisRecord:speechSynthesisState:speechRecordingAlertPolicy:completion:
getStateWithCompletion:
getAudioPowerWithType:completion:
resetMyriad
_handleMyriadForActivationContext:
_handleFetchedStereoPartnerLastMyriadWinDate:
getStereoPartnerLastMyriadWinDate:
getStereoPairState:
setupEnabled:
requestInfo
myriadContext
isVoiceTrigger
beginWaitingForMyriadDecision
playbackStateSnapshot
playbackState
playbackStateMetadata
deliveryDate
timeIntervalSinceNow
alarmSnapshot
timerSnapshot
deviceWonMyriadElection
deviceLostMyriadElection
unduckDevice
notifyObserver:didReceiveNotificationWithToken:
notifyObserver:didChangeStateFrom:to:
queue:didEnqueueObjects:
session:willChangeFromState:toState:
session:didChangeFromState:toState:
session:willBeginUpdateAudioPowerWithType:wrapper:
session:didEndUpdateAudioPowerWithType:
session:willStartSoundWithID:
session:didStartSoundWithID:
session:didStopSoundWithID:error:
session:willBecomeActiveWithActivationContext:activityUUID:
session:didBecomeActiveWithActivationContext:activityUUID:
session:willResignActiveWithOptions:duration:activityUUID:
session:didResignActiveWithDeactivationContext:activityUUID:
session:willActivateWithContext:
session:didActivateWithContext:
session:didNotActivateWithContext:error:
session:willDeactivateWithContext:
session:didDeactivateWithContext:
session:audioSessionWillBecomeActive:activationContext:deactivationContext:
session:audioSessionDidBecomeActive:activationContext:deactivationContext:
sessionDidInvalidate:
localDeviceContextDidUpdate:
transitionToAutomaticEndpointing
getAudioSessionProviderWithCompletion:
_myriadStereoPartnerDataChanged
_fetchStereoPairStateWithCompletion:
_deviceProblemsNotifyObserver
_myriadToken
_myriadDeviceManager
_currentMyriadCoordinatedRequestAssertion
_myriadDuckingAllowed
_lastStereoPartnerMyriadWin
_tether
_currentSession
_activationAnnouncer
_audioPowerUpdateAnnouncer
_activityAnnouncer
_queuedOperations
_lastSessionResignActiveTimestamp
_deviceSetupContext
_speechSynthesisRecord
_speechSynthesisState
_deviceProblemsState
_localDeviceContext
_coreDuetQueue
_needsClearContext
initWithLocaleIdentifier:
initWithLocale:
groupIdentifier
providerForDomain:
registerProvider:forNamespace:
message
parseStringWithFormat:error:
setContext:
setExpressionString:
parseableExpression
parsedOutput
audioData
stringByDeletingPathExtension
pathExtension
URLForResource:withExtension:
URLsForResourcesWithExtension:subdirectory:
lastPathComponent
setHandleTTSCodes:
expressionString
setParseableExpression:
setParsedOutput:
_englishStubParser
_handleWillBeginUpdateAudioPowerWithProvider:
_handleDidEndUpdateAudioPower
_beginUpdateWithFrequency:
_endUpdate
audioPowerServiceDidUpdate:averagePower:peakPower:
_createUpdater
_destroyUpdater
audioPowerServiceWillBeginUpdate:
initWithProvider:queue:frequency:delegate:
beginUpdate
endUpdate
audioPowerServiceDidEndUpdate:
audioPowerUpdaterDidUpdate:averagePower:peakPower:
beginUpdateWithFrequency:
T@"<SVXClientAudioPowerServiceDelegate>",W,N
_wantsUpdate
_frequency
_provider
_updater
T@"<SVXClientAudioPowerServiceDelegate>",W,N,V_delegate
defaultCenter
removeObserver:
initWithOperationType:request:languageCode:voiceName:gender:audioSessionID:preparation:audioChunkHandler:finalization:taskTracker:analyticsContext:
_prewarmWithContext:
_enqueueContext:
_cancelPendingSpeakingContextWithRequest:
_stopCurrentSpeakingContextWithRequest:withInterruptionBehavior:
_cancelPendingContextsWithOperationType:
_stopCurrentSpeakingContextWithInterruptionBehavior:
initWithLocale:outputVoiceInfo:audioSessionID:
_configureWithConfiguration:
outputVoiceChanged:
addObserver:selector:name:object:
languageCodeChanged:
_prewarm
_beginUpdateAudioPowerWithCompletion:
_endUpdateAudioPower
configurationWithOutputVoiceInfo:
configurationWithLocale:
_handleDidStartSpeakingWithSpeechRequest:timestamp:
_handleDidFinishSpeakingWithSpeechRequest:instrumentMetrics:
_handleDidFinishSpeakingWithSpeechRequest:success:error:
_handleDidStartPresynthesizedAudioRequest:timestamp:
_handleDidStopPresynthesizedAudioRequest:success:error:
_handleDidFinishPresynthesizedAudioRequest:instrumentMetrics:error:
textRange
startTime
_handleDidReceiveSpeechWordTimingInfoArray:forSpeechRequest:
_handleDidGenerateAudioChunkData:forSpeechRequest:
_handleDidFinishSynthesizingForSpeechRequest:instrumentMetrics:error:
outputVoiceInfo
setLanguageCode:
setGender:
voiceName
name
voiceNamesForOutputLanguageCode:gender:
setVoiceName:
audioSessionAssertion
setAudioSessionID:
request
setContextInfo:
setShouldCache:
_configuredSpeechRequestForContext:
prewarmIfNeededWithRequest:
locale
_configureSpeechSynthesizerWithAudioSessionID:
_processPendingContexts
useSpecificAudioSession:
supportsAudioPowerUpdate
beginAudioPowerUpdateWithReply:
endAudioPowerUpdate
speechRequest
analyticsContext
initWithUtterance:beginTimestamp:endTimestamp:
setInstrumentMetrics:
dictionaryMetrics
mutableCopy
shouldLogForQA
requestCreatedTimestamp
logEventWithType:machAbsoluteTime:context:
speechBeginTimestamp
setAceID:
setAudioOutputRoute:
emitInstrumentation:machAbsoluteTime:
methodForSelector:
speechEndTimestamp
_continueContext:error:
_finalizeContext:withResultType:utterance:error:
presynthesizedAudioRequest
creationContextFromInstrumentMetrics:
setSpeechWordTimingInfoArray:
handleAudioChunkData:
objectsPassingTest:
minusSet:
synthesisBeginTimestamp
synthesisEndTimestamp
voiceAssetKey
isWarmStart
isCacheHitFromDisk
isServerTTS
ttsSynthesisLatency
timeToSpeakLatency
audioQueueLatency
eagerRequestTimeGap
audioDuration
isCacheHitFromMemory
audioStartTimestampDiffs
numberWithLongLong:
_numberOfContexts
operationType
_cancelPendingSpeakingContextsWithPriorityBelow:
addIndex:
objectsAtIndexes:
removeObjectsAtIndexes:
_startContext:
prepare
setAudioSessionAssertion:
acquireAudioSessionForReason:completion:
handledPresynthesizedAudioRequest
setHandledPresynthesizedAudioRequest:
_startPresynthesizedAudioRequestForContext:error:
handledSpeechRequest
setHandledSpeechRequest:
_startSpeechRequestForContext:error:
initWithDomain:code:userInfo:
data
decoderASBD
playerASBD
initWithAudioData:decoderStreamDescription:playerStreamDescription:
initWithIdentifier:
cachePresynthesizedAudioRequest:
setSiriRequestId:
startSpeakingPresynthesizedAudioRequest:
setPresynthesizedAudioRequest:
parseStringWithFormat:error:containsPrivacySensitiveContents:
setCanUseServerTTS:
startSynthesizingRequest:
startSpeakingRequest:
setSpeechRequest:
finalizeWithResultType:utteranceInfo:error:
enumerateObjectsAtIndexes:options:usingBlock:
stopSpeakingAtNextBoundary:synchronously:error:
stopSpeakingPresynthesizedAudioSynchronously:error:
indexesOfObjectsPassingTest:
_cancelPendingContextsAtIndexes:
speechWordTimingInfoArray
initWithRange:timeInterval:
initWithUtterance:wordTimings:
instrumentMetrics
speechSynthesizer:didStartSpeakingRequest:
speechSynthesizer:withRequest:didReceiveTimingInfo:
speechSynthesizer:didFinishSpeakingRequest:successfully:phonemesSpoken:withError:
speechSynthesizer:didFinishSpeakingRequest:withInstrumentMetrics:
speechSynthesizer:didPauseSpeakingRequest:
speechSynthesizer:didContinueSpeakingRequest:
speechSynthesizer:willSpeakRangeOfSpeechString:forRequest:
speechSynthesizer:withSynthesisRequest:didGenerateAudioChunk:
speechSynthesizer:didFinishSynthesisRequest:withInstrumentMetrics:error:
speechSynthesizer:didStartPresynthesizedAudioRequest:
speechSynthesizer:didStopPresynthesizedAudioRequest:atEnd:error:
speechSynthesizer:didFinishPresynthesizedAudioRequest:withInstrumentMetrics:error:
speechSynthesizer:didFinishPrewarmRequest:withError:
speechSynthesizer:didFinishSynthesisRequest:withError:
speechSynthesizerDidStartSpeaking:
speechSynthesizer:didFinishSpeaking:phonemesSpoken:withError:
speechSynthesizer:didFinishSpeaking:withError:
speechSynthesizer:didFinishSpeakingRequest:successfully:withError:
speechSynthesizerDidPauseSpeaking:
speechSynthesizerDidContinueSpeaking:
speechSynthesizer:willSpeakRangeOfSpeechString:
cancelPendingRequests
stopCurrentRequestWithInterruptionBehavior:
prewarm
updateWithConfiguration:
beginUpdateAudioPowerWithCompletion:
endUpdateAudioPower
_impl
_currentConfiguration
_currentSpeakingContext
_pendingContexts
_synthesizingContexts
_needsPrewarm
_ttsSignpostInterval
_connectWithRetryCount:completion:
currentLocale
outputVoice
initWithLanguageCode:gender:isCustom:name:footprint:contentVersion:masteredVersion:
audioBuffer
decoderStreamDescription
playerStreamDescription
initWithData:decoderASBD:playerASBD:
taskTrackerDidEnd:
initWithContext:instrumentationContext:delegate:
taskTracker:childWillBegin:
parent
T@"SVXTaskContext",R,C,N
T@"<SVXTaskTracking>",R,N
T@"AFAnalyticsTurnBasedInstrumentationContext",R,N
TQ,R,N
T@"NSUUID",R,N
TB,R,N
T@"SAUIListenAfterSpeakingBehavior",R,N
T@"SVXActivationContext",R,N
T@"SVXDeactivationContext",R,N
T@"NSError",R,N
_context
_parent
_instrumentationContext
T@"SVXTaskContext",R,C,N,V_context
T@"<SVXTaskTracking>",R,N,V_parent
T@"AFAnalyticsTurnBasedInstrumentationContext",R,N,V_instrumentationContext
buttonEvent
clientInfo
_source
_buttonEvent
_clientInfo
_userInfo
Tq,R,N,V_source
T@"SVXButtonEvent",R,C,N,V_buttonEvent
T@"SVXClientInfo",R,C,N,V_clientInfo
T@"NSDictionary",R,C,N,V_userInfo
T@"SVXDeactivationOptions",R,C,N,V_options
setClientInfo:
_systemEvent
_requestInfo
T@"SVXSystemEvent",R,C,N,V_systemEvent
T@"AFRequestInfo",R,C,N,V_requestInfo
setSystemEvent:
initWithStyle:
_style
Tq,R,N,V_style
_beginContext:
_endContext:
_endContextsPassingTest:
containsObject:
taskTrackingCenterWillBecomeBusy:
taskTrackingCenter:didBeginTrackingTaskWithContext:
taskTrackingCenter:didEndTrackingTaskWithContext:
taskTrackingCenterDidBecomeIdle:
initWithPerformer:delegate:
beginTrackingTaskWithContext:instrumentationContext:
endTrackingTaskWithContext:
endTrackingTasksPassingTest:
endTrackingAllTasks
getContextsOfAllTrackedTasksUsingBlock:
_contexts
_utteranceInfo
T@"SVXSpeechSynthesisUtteranceInfo",R,C,N,V_utteranceInfo
setUtteranceInfo:
numberWithInt:
intValue
initWithProcessIdentifier:processName:
_processIdentifier
_processName
Ti,R,N,V_processIdentifier
T@"NSString",R,C,N,V_processName
setProcessIdentifier:
setProcessName:
_result
localizations
URLForResource:withExtension:subdirectory:localization:
initWithContentsOfURL:
hasSuffix:
substringToIndex:
allObjects
compare:
sortedArrayUsingSelector:
localizedOOBStringForKey:language:gender:
interfaceWithProtocol:
initWithLanguageCode:gender:hasActiveAccount:isNewsRestricted:
_languageCode
_gender
_hasActiveAccount
_isNewsRestricted
T@"NSString",R,C,N,V_languageCode
Tq,R,N,V_gender
Tq,R,N,V_hasActiveAccount
Tq,R,N,V_isNewsRestricted
setHasActiveAccount:
setIsNewsRestricted:
timerValue
_performDelayedAction:
commands
handleCommand:taskTracker:
numberWithFloat:
transcriptID
outputVolume
floatValue
initWithTranscriptID:languageCode:gender:outputVolume:
_outputVolume
_transcriptID
Tq,R,N,V_transcriptID
Tf,R,N,V_outputVolume
setTranscriptID:
setOutputVolume:
_preparation
_audioChunkCount
_audioChunkHandler
_finalization
_handledPresynthesizedAudioRequest
_handledSpeechRequest
_operationType
_request
_voiceName
_analyticsContext
_presynthesizedAudioRequest
_speechRequest
_instrumentMetrics
_speechWordTimingInfoArray
_audioSessionAssertion
Tq,R,N,V_operationType
T@"SVXSpeechSynthesisRequest",R,C,N,V_request
T@"NSString",R,C,N,V_voiceName
T@"NSDictionary",R,C,N,V_analyticsContext
TB,N,V_handledPresynthesizedAudioRequest
TB,N,V_handledSpeechRequest
T@"VSPresynthesizedAudioRequest",&,N,V_presynthesizedAudioRequest
T@"VSSpeechRequest",&,N,V_speechRequest
T@"VSInstrumentMetrics",&,N,V_instrumentMetrics
T@"NSArray",C,N,V_speechWordTimingInfoArray
T@"SVXAudioSessionAssertion",&,N,V_audioSessionAssertion
alarmsByID
orderedSet
notifiedFiringAlarmIDs
objectForKeyedSubscript:
svx_notifiedFiringAlarms
timersByID
notifiedFiringTimerIDs
svx_notifiedFiringTimers
duration
nodes
initWithIdentifier:duration:nodes:
_duration
_nodes
Td,R,N,V_duration
T@"NSSet",R,C,N,V_nodes
setDuration:
setNodes:
initWithTimestamp:options:
initWithTimestamp:options:flowScene:
initWithTimestamp:
initWithTimestamp:presentsAlternativeFlowWhenStoreAccountIsUnavailable:
build
Tq,N,V_sceneID
initWithCommand:context:
T@"<SAAceCommand>",R,&,V_command
T@"<NSCopying>",R,&,V_context
dictionaryWithCapacity:
transformAddDialogs:forMode:
arrayWithCapacity:
array
resultWithResults:
_handlersByCommandType
_utterance
_wordTimings
T@"NSString",R,C,N,V_utterance
T@"NSArray",R,C,N,V_wordTimings
setUtterance:
setWordTimings:
indexOfObjectPassingTest:
replaceObjectAtIndex:withObject:
setViews:
ignoresLocallyParseableExpressions
setIgnoresLocallyParseableExpressions:
_ignoresLocallyParseableExpressions
TB,N,V_ignoresLocallyParseableExpressions
newTurnBasedInstrumentationContext
nextTurnBasedContextForAnalytics:
newTurnBasedContextWithPreviousTurnID:analytics:
setInvocationSource:
emitInstrumentation:
setPresentationType:
setPresenting:
setPreviousState:
setCurrentState:
setDismissalReason:
setDismissed:
setSiriResponseMode:
setSiriResponseContext:
setVoiceAssetKey:
voiceResourceAssetKey
setVoiceResourceAssetKey:
setIsWarmStart:
isSynthesisCached
setIsSynthesisCached:
sourceOfTTS
setSourceOfTTS:
errorCode
setSpeechError:
feedback
dependentNodes
initWithIdentifier:duration:feedback:dependentNodes:
_feedback
_dependentNodes
T@"SVXUserFeedback",R,C,N,V_feedback
T@"NSSet",R,C,N,V_dependentNodes
setFeedback:
setDependentNodes:
_requestPermissionToActivateWithContext:
_stopPreheatTimer
clientActivationService:willActivateWithContext:
clientActivationService:didActivateWithContext:
clientActivationService:didNotActivateWithContext:error:
clientActivationService:willDeactivateWithContext:
clientActivationService:didDeactivateWithContext:
_enqueueButtonEvent:
_activateWithContext:completion:
insertObject:atIndex:
removeLastObject
_startPreheatTimer
_processLastButtonActivationContext
_performManualEndpointing
_transitToAutomaticEndpointing
clientActivationService:shouldActivateWithContext:
_preheatTimerArrivedWithToken:
handleButtonEvent:
enqueueButtonEvent:
activateWithUserInfo:completion:
activateWithText:completion:
activateWithButtonEvent:userInfo:completion:
prewarmForSystemEvent:completion:
activateWithSystemEvent:userInfo:completion:
deactivateWithUserInfo:completion:
deactivateWithUserInfo:options:completion:
deactivateWithButtonEvent:userInfo:options:completion:
T@"<SVXClientActivationServiceDelegate>",W,N
_queuedButtonEvents
_lastButtonActivationContext
_preheatToken
T@"<SVXClientActivationServiceDelegate>",W,N,V_delegate
manualEndpointingThreshold
storeDemo
speechSynthesisRequest
delayedActionAceId
orderedAlarmAndTimerIDs
initWithType:timestamp:deviceSetupFlowScene:storeDemo:orderedAlarmAndTimerIDs:speechSynthesisRequest:audioSessionID:
_deviceSetupFlowScene
_storeDemo
_orderedAlarmAndTimerIDs
_speechSynthesisRequest
T@"SVXDeviceSetupFlowScene",R,C,N,V_deviceSetupFlowScene
T@"SVXStoreDemo",R,C,N,V_storeDemo
T@"NSArray",R,C,N,V_orderedAlarmAndTimerIDs
T@"SVXSpeechSynthesisRequest",R,C,N,V_speechSynthesisRequest
setDeviceSetupFlowScene:
setStoreDemo:
setOrderedAlarmAndTimerIDs:
setSpeechSynthesisRequest:
_data
_decoderASBD
_playerASBD
T@"NSData",R,C,N,V_data
T@"SVXAudioStreamBasicDescription",R,C,N,V_decoderASBD
T@"SVXAudioStreamBasicDescription",R,C,N,V_playerASBD
setData:
setDecoderASBD:
setPlayerASBD:
setAttachmentExpression:
attachment
parsePlayAudio:reply:
_initWithType:failureErrorCode:failureReason:command:results:
_optimalResult
resultWithCommand:
_failureErrorCode
_failureReason
_results
setMediaPlaybackInterruptedTime:
setReasons:
_removeAllConnections
_addConnection:
_removeConnection:
_connectionsByUUID
cancelIfNotAlreadyCanceled
myriadWiFiAssertionDidReleaseAssertion:
_releaseAssertion
initWithTimeoutInterval:onQueue:timeoutHandler:
start
myriadWiFiAssertionDidAcquireAssertion:
initWithQueue:delegate:
acquireHomeKitAccessoryWiFiAssertionWithTimeout:
releaseHomeKitAccessoryWiFiAssertion
workQueue
wifiAssertionAcquired
assertionWaitTimer
setAssertionWaitTimer:
_wifiAssertionAcquired
_workQueue
_assertionWaitTimer
T@"AFWatchdogTimer",&,N,V_assertionWaitTimer
T@"<SVXMyriadWiFiAssertionProtocol>",R,W,N,V_delegate
T@"NSObject<OS_dispatch_queue>",R,N,V_workQueue
TB,R,N,V_wifiAssertionAcquired
initWithQueue:instanceContext:delegate:
_startObservingInfo
_startObservingDeviceContext
_stopObservingInfo
_stopObservingDeviceContext
_logSnapshot
logEventWithType:context:contextNoCopy:
beginUpdateLocalDeviceContext
endUpdateLocalDeviceContext
deviceContextConnectionDidInvalidate:
deviceContextConnection:didUpdateLocalDeviceContext:
_deviceContextAnnouncer
_deviceContextConnection
_initializeMyriadDeviceWithInstanceContext:analytics:preferences:delegate:workQueue:analyticsQueue:
initWithDelegate:queue:
startAdvertisingEmergency
_device
_analyticsQueue
rangeOfString:
allVoicesForSiriSessionLanguage:
setDomain:
setDeferredMessageKeys:
deferredMessageKeys
stringForExpression:
stringForExpression:containsPrivacySensitiveContents:
initWithAceObject:
setAssistantBulletin:
attachmentURLForExpression:
setCount:
_domain
_count
_deferredMessageKeys
T@"NSString",C,N,V_domain
TQ,N,V_count
T@"NSSet",C,N,V_deferredMessageKeys
_updateSetupContext
_beginSetupWithContext:
_endSetup
beginSetupWithContext:
endSetup
_currentSetupContext
_activationCompletion
_deactivationCompletion
_dispatchCompletionWithResult:
addBlockedTransaction:
_prepare
_addBlockedTransaction:
_removeBlockingTransaction:
_handler:didPrepareSuccessfully:context:completion:
_handler:didHandleWithResult:completion:
removeBlockingTransaction:
_handle
handler:didPrepareSuccessfully:context:completion:
_didPrepareAll
handler:didHandleWithResult:completion:
_didHandleAll
allValues
_unblockDependentTransactions
_state
_preparedResultsByHandlerIdentifier
_preparedContextsByHandlerIdentifier
_handledResultsByHandlerIdentifier
_handlers
_completion
_blockingTransactions
_blockedTransactions
didStart
setDidStart:
didFinish
setDidFinish:
setStart:
finish
setFinish:
_didStart
_didFinish
_start
_finish
TB,N,V_didStart
TB,N,V_didFinish
Td,N,V_start
Td,N,V_finish
initWithTimestamp:session:
session
_session
T@"SVXSession",R,N,V_session
_preheatWithStyle:
turnIdentifier
_activateWithContext:options:deviceSetupContext:deviceProblemsState:localDeviceContext:speechSynthesisRecord:speechSynthesisState:speechRecordingAlertPolicy:taskTracker:completion:
_stopSpeech
_transitSpeechToAutomaticEndpointing
_transitSpeechToManualEndpointing
_cancelRequestWithOptions:keepTaskTracker:
_dismiss
_resignActiveForReason:
_getAlarmAndTimerFiringContextWithCompletion:
_connection:
stopAudioPlaybackRequest:immediately:
_addRequestBarrier:
setConfiguration:
_startSpeechRequestWithOptions:clearsContext:deviceSetupContext:deviceProblemsState:localDeviceContext:taskTracker:completion:
_handleSpeechRecordingWillBeginWithInputAudioPowerXPCWrapper:
_setAudioSessionID:
_handleSpeechRecordingDidBeginOnAVRecordRoute:
_handleSpeechRecordingDidChangeAVRecordRoute:
_handleSpeechRecordingDidDetectStartpoint
_handleSpeechRecordingPerformTwoShotPromptWithType:completion:
_handleSpeechRecordingDidEnd
_handleSpeechRecordingDidCancel
_handleSpeechRecordingDidFailWithError:
_handleSpeechRecognitionDidFailWithError:
af_bestTextInterpretation
_handleSpeechRecognized:
_handleSpeechRecognizedPartialResult:
_handleRequestWillStart
_handleDismissAssistant
_handleRequestFinished
_handleReceivedCommand:completion:
_handleRequestFailedWithError:
_handleShouldSpeak:
_handleDidChangeAudioSessionID:
_handleAudioSessionDidBeginInterruption
_handleAudioSessionDidEndInterruption:
resignCurrent
initWithActivityType:
setWebpageURL:
becomeCurrent
_handleWillStartAudioPlaybackRequest:
_handleDidStartAudioPlaybackRequest:
_handleDidStopAudioPlaybackRequest:error:
_handleDidHandleQuickStopWithActions:
_handleWillProcessStartPlaybackWithDestination:intent:completion:
_handleDidFailStartPlaybackWithDestination:
_handleAudioSessionWillBecomeActive:
_handleAudioSessionDidBecomeActive:
dispatchEvent:
initWithActivationEvent:
setSpeechRequestOptions:
acquireAudioSessionWithContext:completion:
_handleSpeechSynthesizerWillBecomeBusy
_handleSpeechSynthesizerDidBecomeIdle
_handleSpeechSynthesizerWillStartRequest:taskTracker:
_handleSpeechSynthesizerDidStartRequest:record:taskTracker:
_handleSpeechSynthesizerDidFinishRequest:record:taskTracker:
_handleSpeechSynthesizerDidCancelRequest:taskTracker:
_handleSpeechSynthesizerDidInterruptRequest:taskTracker:
_handleSpeechSynthesizerDidFailRequest:taskTracker:error:
_stopSessionIdleTimer
assistantIsEnabled
errorWithCode:
_resetMyriadDecision
isAvailable
_requestWillBeginWithTaskTracker:
_performBlockAfterResignActive:
_presentError:taskTracker:completion:
_waitForMyriadDecisionUsingHandler:
_requestDidEndWithOptions:error:
setHomeButtonDownEventTime:
setHomeButtonDownEventMachAbsoluteTime:
setActivationEventTime:
setActivationEventMachAbsoluteTime:
setSpeechSynthesisRecord:
endpointerOperationMode
setEndpointerOperationMode:
activationEventTime
_startActiveAudioSessionRequestForType:taskTracker:completion:
beginTimestamp
endTimestamp
setRecordingAlertPolicy:
_startSpeechSynthesisRequest:languageCode:voiceName:gender:audioSessionID:introductionSoundID:conclusionSoundID:taskTracker:postActivationHandler:completion:
homeAnnouncementSnapshot
state
hasFiringAlarms
hasFiringTimers
setBargeInOptions:
setDisableInputAudioPowerUpdate:
setDisableOutputAudioPowerUpdate:
setIsMediaPlaying:
setClientAnalyticsContext:
setReloadSmartSiriVolume:
bargeInOptions
disableInputAudioPowerUpdate
disableOutputAudioPowerUpdate
homeButtonDownEventTime
homeButtonDownEventMachAbsoluteTime
isMediaPlaying
speechSynthesisRecord
recordingAlertPolicy
reloadSmartSiriVolume
_startRequestWithInfo:clearsContext:deviceSetupContext:taskTracker:completion:
_clearContext
_startSessionIdleTimerWithTimeInterval:
isRecording
setTurnIdentifier:
startRecordingAndGetContinueBlockForPendingSpeechRequestWithOptions:
clearContext
setApplicationContext:
startAlertEnabled
_stopSpeechWithCurrentSpeechRequestOptions
_performBlockAfterContinueBlock:
stopSpeechWithOptions:
_updateSpeechEndpointerOperationMode:
updateSpeechOptions:
startRequestWithInfo:
_forceAudioSessionInactiveWithReason:completion:
_forceAudioSessionActiveWithOptions:reason:completion:
acquireAudioSessionAssertionWithContext:relinquishmentHandler:
_beginWaitingForMyriadDecisionWithToken:
_endWaitingForMyriadDecisionWithToken:state:
cancelRequest
rollbackRequest
_willChangeFromState:toState:
_didChangeFromState:toState:
_performNextPendingRequestBarrier
removeObjectAtIndex:
forceAudioSessionActiveWithOptions:reason:speechRequestOptions:completion:
relinquishWithContext:options:
forceAudioSessionInactiveWithOptions:completion:
configurationWithAudioSessionID:
firingAlarms
unionSet:
firedDate
sortUsingComparator:
firingTimers
getCurrentAccessoryInfoWithCompletion:
audioSessionDeactivationDelay
_checkIsActiveWithCompletion:
_invalidateConnection
_discardPendingRequestBarriers
_continuePendingSpeechRequest:
_setInputAudioPowerWrapper:
errorWithCode:description:underlyingError:
_setOutputAudioPowerWrapper:
_beginThinking
_endThinking
updateSpeechSynthesisRecord:
willPresentUsefulUserResultWithType:forCommand:
initWithTargetQueue:instanceContext:
setSpeechDelegate:
shouldSpeak
willPresentUI
didDismissUI
endSession
_sessionIdleFiredWithAssertion:
assistantConnectionRequestWillStart:
assistantConnectionDismissAssistant:
assistantConnectionRequestFinished:
assistantConnection:receivedCommand:completion:
assistantConnection:requestFailedWithError:requestClass:
assistantConnection:openURL:completion:
assistantConnection:openApplicationWithBundleID:URL:completion:
assistantConnection:shouldSpeak:
assistantConnection:didChangeAudioSessionID:
assistantConnectionAudioSessionDidBeginInterruption:
assistantConnectionAudioSessionDidBeginInterruption:userInfo:
assistantConnectionAudioSessionDidEndInterruption:shouldResume:
assistantConnectionAudioSessionDidEndInterruption:shouldResume:userInfo:
assistantConnectionWillStartAcousticIDRequest:
assistantConnectionDidDetectMusic:
assistantConnection:didFinishAcousticIDRequestWithSuccess:
assistantConnection:setUserActivtiyInfoAndMakeCurrent:webpageURL:
assistantConnectionInvalidateCurrentUserActivity:
assistantConnection:wantsToCacheImage:
assistantConnection:extensionRequestWillStartForApplication:
assistantConnection:extensionRequestFinishedForApplication:error:
assistantConnection:startUIRequestWithText:completion:
assistantConnection:startUIRequestWithInfo:completion:
assistantConnection:willStartAudioPlaybackRequest:
assistantConnection:didStartAudioPlaybackRequest:
assistantConnection:didStopAudioPlaybackRequest:error:
assistantConnection:didHandleQuickStopWithAction:
assistantConnection:willProcessStartPlayback:intent:completion:
assistantConnection:willProcessStartPlayback:
assistantConnection:startPlaybackDidFail:
assistantConnection:audioSessionWillBecomeActive:
assistantConnection:audioSessionDidBecomeActive:
assistantConnection:willProcessAppLaunchWithBundleIdentifier:
assistantConnection:appLaunchFailedWithBundleIdentifier:
assistantConnectionSpeechRecordingWillBegin:
assistantConnection:speechRecordingWillBeginWithInputAudioPowerXPCWrapper:
assistantConnection:speechRecordingDidBeginOnAVRecordRoute:
assistantConnection:speechRecordingDidBeginOnAVRecordRoute:audioSessionID:
assistantConnection:speechRecordingDidChangeAVRecordRoute:
assistantConnectionSpeechRecordingDidDetectStartpoint:
assistantConnection:speechRecordingPerformTwoShotPromptWithType:completion:
assistantConnectionSpeechRecordingDidEnd:
assistantConnectionSpeechRecordingDidCancel:
assistantConnection:speechRecordingDidFail:
assistantConnectionDidChangeAudioRecordingPower:
assistantConnection:speechRecognitionDidFail:
assistantConnection:speechRecognized:
assistantConnection:speechRecognizedPartialResult:
assistantConnection:recognizedAdditionalSpeechInterpretation:refId:
assistantConnection:recognitionUpdateWithPhrases:utterances:refId:
assistantConnection:recognitionUpdateWillBeginForTask:
transitSpeechToManualEndpointing
dismiss
addRequestBarrier:
activateWithSpeechRequestOptions:options:deviceSetupContext:deviceProblemsState:localDeviceContext:completion:
_setApplicationContext:
_currentAccessoryInfo
_activityState
_activityUUID
_postResignActiveBlock
_currentActivationContext
_currentDeactivationContext
_currentRequestUUID
_currentSpeechRequestOptions
_currentSpeechRequestDidStartBlock
_currentSpeechRequestPendingBlocks
_currentRequestWillPresentUUFR
_currentRequestDidPresentUUFR
_previousRequestInstrumentationContext
_currentRequestInstrumentationContext
_taskTrackingCenter
_sessionIdleAssertions
_inputAudioPowerWrapper
_outputAudioPowerWrapper
_audioSessionAssertions
_currentInstrumentationUIState
_pendingRequestBarriers
_isMostRecentRequestStartingMediaPlaybackLocally
_isMostRecentRequestSuppressedError
_setApplicationContext
_myriadState
_pendingMyriadDecisionHandlers
_playbackRequestInfo
_userActivity
_audioDuckingCoordinationAssertion
_client
T@"NSUUID",R,N,V_sessionUUID
setAppName:
setBundleId:
setAppIdentifyingInfo:
setSetupSceneId:
setOrderedContext:
setDeviceSetupFlowBeginDate:
setDeviceSetupFlowEndDate:
setTapToSiriAudioPlaybackRequest:
setTwoShotAudioPlaybackRequest:
startAlertSoundID
setBeepSoundID:
setStartingAlertBehavior:
keyFrameID
offset
_keyFrameID
_offset
Tq,R,N,V_keyFrameID
Td,R,N,V_offset
setKeyFrameID:
setOffset:
scenes
_scenes
T@"NSArray",R,C,N,V_scenes
setScenes:
initWithDelegate:
_initializeMyriadEmergencyTimer
preheatWiProx
endTask
_acquireWiFiAssertion
startAdvertisingFromVoiceTriggerWithGoodnessScoreContext:withContext:
startAdvertisingFromDirectTriggerWithContext:
startAdvertisingFromAlertFiringVoiceTriggerWithContext:
startAdvertisingFromInTaskVoiceTriggerWithContext:
_startAdvertisingEmergency:
_signalEmergencyCallHandledStatus:
_armEmergencyDispatchTimerFor:toExecute:
_disarmMyriadEmergencyTimer
_releaseWiFiAssertion
willStartWithSession:
willEndSession:
shouldAbortAnotherDeviceBetter:
shouldContinue:
shouldUnduck:
shouldHandleEmergency:
advertisingWillBeginWithDelay:advertisingInterval:
advertisingDidBegin:
advertisingDidEnd:
listeningDidBegin:
listeningDidEnd:
myriadCoordinatorWillHandleEmergency:
myriadCoordinatorDidHandleEmergency:
_myriadCoordinator
_emergencyContext
_wifiAssertion
contingency
_lastStartedRequest
initWithType:timestamp:deviceSetupFlowScene:storeDemo:orderedAlarmAndTimerIDs:audioSessionID:
initWithType:timestamp:alarm:
initWithType:timestamp:deviceSetupFlowScene:
initWithType:timestamp:storeDemo:
initWithType:timestamp:alarm:deviceSetupFlowScene:
initWithType:timestamp:timer:
initWithType:timestamp:deviceSetupFlowScene:storeDemo:orderedAlarmAndTimerIDs:
initWithAudioSessionDeactivationDelay:
_audioSessionDeactivationDelay
Td,R,N,V_audioSessionDeactivationDelay
setAudioSessionDeactivationDelay:
_handleSynthesizedBufferForHandlerUUID:audioChunkData:audioChunkIndex:
_addAudioChunkHandler:forUUID:
_removeAudioChunkHandlerForUUID:
synthesizeRequest:completion:
synthesizeRequest:audioChunkHandler:completion:
enqueueRequest:completion:
cancelPendingRequest:
stopRequest:
_audioChunkHandlersByUUID
valueWithRange:
rangeValue
_timeInterval
_range
T{_NSRange=QQ},R,N,V_range
Td,R,N,V_timeInterval
setRange:
setTimeInterval:
bestSupportedLanguageCodeForLanguageCode:
_outputVoiceInfo
_locale
T@"AFVoiceInfo",R,C,N,V_outputVoiceInfo
T@"NSLocale",R,C,N,V_locale
#16@0:8
B24@0:8@16
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v48@0:8@16@24@32@?40
v32@0:8@16@?24
B24@0:8@"AceObject<SAAceCommand>"16
v48@0:8@"AceObject<SAAceCommand>"16@"<NSCopying>"24@"<SVXTaskTracking>"32@?<v@?@"SVXServiceCommandResult">40
v32@0:8@"AceObject<SAAceCommand>"16@?<v@?B@"<NSCopying>">24
@32@0:8@16@24
d24@0:8@16
v32@0:8@16@24
v16@0:8
@"SVXSessionManager"
@"SVXModule"
@"NSString"
v24@0:8@16
@32@0:8@16q24
v24@0:8@"SVXClientServiceConnection"16
@"<SVXPerforming>"32@0:8@"SVXClientServiceConnection"16q24
v32@0:8@?16@?24
v32@0:8@?<v@?@"<SVXClientService>">16@?<v@?@"NSError">24
@"<SVXPerforming>"
@"AFAnalytics"
@"SVXClientServiceConnection"
@"<SVXClientActivationServicing>"
@"<SVXClientSessionStateServicing>"
@"<SVXClientSessionServicing>"
@"<SVXClientAudioPowerServicing>"
@"<SVXClientSpeechSynthesisServicing>"
@"<SVXClientDeviceServicing>"
@"<SVXClientAudioSystemServicing>"
@"<SVXClientKeepAliveServicing>"
@24@0:8@16
@24@0:8@"SVXModule"16
v32@0:8@"<SVXModuleInstanceProviding>"16@"NSArray"24
v24@0:8@"<SVXModuleInstanceProviding>"16
v40@0:8@16@24@?32
@"SVXServiceCommandHandlerRegistry"
@"SVXServiceCommandHandlerFallback"
@"SVXServiceCommandDelayedActionStore"
@"NSMutableSet"
@"MDFixedModeProvider"
@"SVXSpeechSynthesizer"
@40@0:8@16@24@32
v20@0:8B16
@40@0:8@"<SVXClientServiceProviding>"16@"AFAnalytics"24@"<SVXPerforming>"32
v24@0:8@?16
q16@0:8
v24@0:8@?<v@?q>16
@"<SVXClientSessionStateServiceDelegate>"16@0:8
v24@0:8@"<SVXClientSessionStateServiceDelegate>"16
v32@0:8q16q24
v24@0:8q16
@"<SVXClientServiceProviding>"
@"<SVXClientSessionStateServiceDelegate>"
@24@0:8^{_NSZone=}16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@56@0:8Q16@24@32@40@48
@24@0:8Q16
@"SVXDeviceSetupOptions"
@"SVXDeviceSetupFlowScene"
@"NSDate"
v24@0:8Q16
v24@0:8@"SVXDeviceSetupOptions"16
v24@0:8@"SVXDeviceSetupFlowScene"16
v24@0:8@"NSDate"16
@"SVXDeviceSetupContext"
{_mutationFlags="isDirty"b1"hasTimestamp"b1"hasOptions"b1"hasFlowScene"b1"hasBeginDate"b1"hasEndDate"b1}
@24@0:8@?16
v40@0:8@16@24@32
v48@0:8@16@24@32@40
v56@0:8@16@24@32@40@48
v24@0:8@"SVXSpeechSynthesizer"16
v40@0:8@"SVXSpeechSynthesizer"16@"SVXSpeechSynthesisRequest"24@"<SVXTaskTracking>"32
v48@0:8@"SVXSpeechSynthesizer"16@"SVXSpeechSynthesisRequest"24@"AFSpeechSynthesisRecord"32@"<SVXTaskTracking>"40
v56@0:8@"SVXSpeechSynthesizer"16@"SVXSpeechSynthesisRequest"24@"SVXSpeechSynthesisUtteranceInfo"32@"AFSpeechSynthesisRecord"40@"<SVXTaskTracking>"48
v48@0:8@"SVXSpeechSynthesizer"16@"SVXSpeechSynthesisRequest"24@"<SVXTaskTracking>"32@"NSError"40
@"<SVXServiceCommandHandling>"
@"<SVXSessionActivityListening>"
@"<SVXAudioPowerUpdateListening>"
@"<SVXSiriModesManaging>"
@"<SVXAudioStreamingListening>"
@"<SVXSessionDataSource>"
^{__CFDictionary=}
@"NSHashTable"
@48@0:8@16Q24d32d40
d16@0:8
@"NSURL"
v24@0:8d16
v24@0:8@"NSURL"16
@"SVXUserFeedbackAudioContent"
{_mutationFlags="isDirty"b1"hasItemURL"b1"hasNumberOfLoops"b1"hasFadeInDuration"b1"hasFadeOutDuration"b1}
@"<SVXExpressionParsingServing>"
@"AFPreferences"
v32@0:8@?16d24
v32@0:8@?16Q24
v32@0:8@?16@24
v24@0:8@?<v@?>16
v32@0:8@?<v@?>16d24
v32@0:8@?<v@?>16Q24
v32@0:8@?<v@?>16@"NSObject<OS_dispatch_group>"24
@40@0:8@16I24i28Q32
@40@0:8@16@24Q32
@"NSObject<OS_dispatch_queue>"
@"NSMutableDictionary"
v32@0:8@"SVXSessionManager"16@"SVXActivationContext"24
v40@0:8@"SVXSessionManager"16@"SVXActivationContext"24@"NSError"32
v32@0:8@"SVXSessionManager"16@"SVXDeactivationContext"24
v40@0:8@16q24q32
v40@0:8@"AFMemoryPressureObserver"16q24q32
v40@0:8@16q24@?32
v56@0:8q16@24q32@40@?48
@48@0:8q16@24q32@40
v40@0:8@16@24q32
@"SVXDeviceSetupAnnouncer"
@"<SVXModuleInstance>"24@0:8@"NSString"16
@"SVXClientServiceServer"16@0:8
@"SVXServiceCommandHandler"16@0:8
@"SVXSessionManager"16@0:8
@"SVXSpeechSynthesizer"16@0:8
@"SVXSystemObserver"16@0:8
@"SVXDeviceSetupManager"16@0:8
@"NSDictionary"
@72@0:8q16Q24@32@40@48@56@64
@"SVXSpeechSynthesisAudio"
v24@0:8@"NSString"16
v24@0:8@"NSDictionary"16
v24@0:8@"SVXSpeechSynthesisAudio"16
@"SVXSpeechSynthesisRequest"
{_mutationFlags="isDirty"b1"hasPriority"b1"hasOptions"b1"hasSpeakableText"b1"hasSpeakableContext"b1"hasLocalizationKey"b1"hasPresynthesizedAudio"b1"hasStreamID"b1}
@28@0:8@16B24
@"SVXUserFeedbackVoiceContent"
{_mutationFlags="isDirty"b1"hasText"b1"hasIsPhonetic"b1}
@"<SVXClientAudioSystemServiceDelegate>"16@0:8
v24@0:8@"<SVXClientAudioSystemServiceDelegate>"16
v36@0:8B16@20@28
@"<SVXClientAudioSystemServiceDelegate>"
v24@0:8@?<v@?@"SVXAlarmAndTimerFiringContext">16
@"<SVXClientSessionServiceDelegate>"16@0:8
v24@0:8@"<SVXClientSessionServiceDelegate>"16
v32@0:8q16@24
v32@0:8Q16d24
@"<SVXClientSessionServiceDelegate>"
@"SAUIDelayedActionCommand"
@"<SVXTaskTracking>"
@64@0:8@16#24@32@40@48@56
@"AFInstanceContext"
@28@0:8B16Q20
@"SVXDeviceProblemsState"
{_mutationFlags="isDirty"b1"hasIsFixingProblems"b1"hasProblems"b1}
@120@0:8q16Q24@32@40@48@56@64@72B80B84@88@96@104@112
@"NSUUID"
@"SAUIListenAfterSpeakingBehavior"
@"SVXActivationContext"
@"SVXDeactivationContext"
@"NSError"
v24@0:8@"NSUUID"16
v24@0:8@"SAUIListenAfterSpeakingBehavior"16
v24@0:8@"SVXActivationContext"16
v24@0:8@"SVXDeactivationContext"16
v24@0:8@"NSError"16
@"SVXTaskContext"
{_mutationFlags="isDirty"b1"hasOrigin"b1"hasTimestamp"b1"hasSessionUUID"b1"hasRequestUUID"b1"hasAceId"b1"hasRefId"b1"hasDialogIdentifier"b1"hasDialogPhase"b1"hasIsUUFR"b1"hasListensAfterSpeaking"b1"hasListenAfterSpeakingBehavior"b1"hasActivationContext"b1"hasDeactivationContext"b1"hasError"b1}
@48@0:8q16@24@32@40
@"NSArray"
@"SVXDeviceSetupFlowSiriCapabilitiesHint"
v24@0:8@"NSArray"16
v24@0:8@"SVXDeviceSetupFlowSiriCapabilitiesHint"16
{_mutationFlags="isDirty"b1"hasSceneID"b1"hasSpeakableText"b1"hasDisplayKeyFrames"b1"hasSiriCapabilitiesHint"b1}
v32@0:8q16@"AFXPCWrapper"24
@"SVXModuleInstanceMap"
@36@0:8@16@24B32
@"NSOrderedSet"
v24@0:8@"NSOrderedSet"16
@"SVXAlarmAndTimerFiringContext"
{_mutationFlags="isDirty"b1"hasOrderedFiringAlarms"b1"hasOrderedFiringTimers"b1"hasHasOtherRunningTimers"b1}
v40@0:8@"NSArray"16@"SARemoteDevice"24@?<v@?B@"NSArray">32
@"<SVXAceCommandHandling>"
@32@0:8q16Q24
@"SVXButtonEvent"
{_mutationFlags="isDirty"b1"hasType"b1"hasTimestamp"b1}
v32@0:8q16@"NSError"24
v36@0:8B16@"SVXActivationContext"20@"SVXDeactivationContext"28
Vv24@0:8@?16
Vv24@0:8q16
Vv32@0:8@16@?24
Vv32@0:8q16@?24
Vv24@0:8@16
Vv40@0:8@16@24@?32
Vv24@0:8@?<v@?@"NSError">16
Vv24@0:8@?<v@?q@"NSError">16
Vv24@0:8@?<v@?B@"NSError">16
Vv24@0:8@?<v@?@"SVXAlarmAndTimerFiringContext"@"NSError">16
Vv32@0:8@"SVXActivationContext"16@?<v@?>24
Vv32@0:8@"SVXActivationContext"16@?<v@?@"NSError">24
Vv32@0:8@"SVXDeactivationContext"16@?<v@?>24
Vv32@0:8q16@?<v@?@"AFXPCWrapper"@"NSError">24
Vv24@0:8@"SVXSpeechSynthesisRequest"16
Vv40@0:8@"SVXSpeechSynthesisRequest"16@"NSUUID"24@?<v@?@"SVXSpeechSynthesisResult">32
Vv32@0:8@"SVXSpeechSynthesisRequest"16@?<v@?@"SVXSpeechSynthesisResult">24
Vv24@0:8@"SVXDeviceSetupContext"16
Vv32@0:8@"SVXDeviceSetupContext"16@?<v@?@"SVXDeviceSetupFlow"@"NSError">24
@"NSXPCConnection"
@"<SVXClientServiceServerConnectionDelegate>"
@"AFInstanceInfo"
@"NSMutableArray"
@"SVXDeviceSetupManager"
@56@0:8d16I24I28I32I36I40I44I48I52
I16@0:8
v20@0:8I16
@"SVXAudioStreamBasicDescription"
{_mutationFlags="isDirty"b1"hasSampleRate"b1"hasFormatID"b1"hasFormatFlags"b1"hasBytesPerPacket"b1"hasFramesPerPacket"b1"hasBytesPerFrame"b1"hasChannelsPerFrame"b1"hasBitsPerChannel"b1"hasReserved"b1}
v44@0:8@16B24@28@?36
@"<MDModeProviding>"
@48@0:8@16q24@32@40
v24@0:8@"SVXUserFeedbackAudioContent"16
v24@0:8@"SVXUserFeedbackVoiceContent"16
@"SVXUserFeedback"
{_mutationFlags="isDirty"b1"hasIdentifier"b1"hasContentType"b1"hasAudioContent"b1"hasVoiceContent"b1}
Vv32@0:8@16@24
Vv32@0:8q16q24
Vv32@0:8q16@24
Vv32@0:8Q16d24
Vv36@0:8B16@20@28
Vv48@0:8@16@24Q32@?40
Vv24@0:8@?<v@?@"AFInstanceInfo"@"NSError">16
Vv32@0:8@"SVXActivationContext"16@?<v@?B@"NSError">24
Vv24@0:8@"SVXActivationContext"16
Vv32@0:8@"SVXActivationContext"16@"NSError"24
Vv24@0:8@"SVXDeactivationContext"16
Vv24@0:8@"NSString"16
Vv32@0:8q16@"NSError"24
Vv32@0:8q16@"AFXPCWrapper"24
Vv36@0:8B16@"SVXActivationContext"20@"SVXDeactivationContext"28
Vv48@0:8@"NSUUID"16@"VSAudioData"24Q32@?<v@?B>40
@32@0:8Q16@24
@40@0:8Q16@24@32
@104@0:8@16@24@32@40@48@56@64@72@80@88@96
@"SVXQueuePerformer"
@"<SVXClientServiceConnectionDelegate>"
@"SVXClientSessionService"
@"SVXClientActivationService"
@"SVXClientAudioPowerService"
@"SVXClientSpeechSynthesisService"
@"SVXClientDeviceService"
@"SVXClientAudioSystemService"
@"SVXClientKeepAliveService"
@44@0:8@16I24@28@?36
@"AFSafetyBlock"
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v56@0:8@16q24Q32@40@?48
v48@0:8@"AFSiriActivationListener"16@"INIntent"24@"NSString"32@?<v@?@"INIntentResponse"@"NSError">40
v48@0:8@"AFSiriActivationListener"16@"INIntentForwardingAction"24@"NSString"32@?<v@?@"INIntentForwardingActionResponse">40
v48@0:8@"AFSiriActivationListener"16@"AFRequestInfo"24@"AFSiriActivationContext"32@?<v@?@"NSError">40
v56@0:8@"AFSiriActivationListener"16q24Q32@"AFSiriActivationContext"40@?<v@?@"NSError">48
v40@0:8@"AFSiriActivationListener"16@"AFSiriActivationContext"24@?<v@?@"NSError">32
v24@0:8@"SVXClientServiceServerConnection"16
@"NSXPCListener"
@"AFSiriActivationListener"
@"SVXVirtualDevice"
v28@0:8@16i24
v40@0:8@16Q24Q32
v28@0:8@"AFNotifyObserver"16i24
v40@0:8@"AFNotifyObserver"16Q24Q32
v32@0:8@"AFQueue"16@"NSArray"24
v40@0:8@16q24@32
v32@0:8@16q24
v48@0:8@16Q24d32@40
v44@0:8@16B24@28@36
v40@0:8@"SVXSession"16q24q32
v40@0:8@"SVXSession"16q24@"AFXPCWrapper"32
v32@0:8@"SVXSession"16q24
v40@0:8@"SVXSession"16q24@"NSError"32
v40@0:8@"SVXSession"16@"SVXActivationContext"24@"NSUUID"32
v48@0:8@"SVXSession"16Q24d32@"NSUUID"40
v40@0:8@"SVXSession"16@"SVXDeactivationContext"24@"NSUUID"32
v32@0:8@"SVXSession"16@"SVXActivationContext"24
v40@0:8@"SVXSession"16@"SVXActivationContext"24@"NSError"32
v32@0:8@"SVXSession"16@"SVXDeactivationContext"24
v44@0:8@"SVXSession"16B24@"SVXActivationContext"28@"SVXDeactivationContext"36
v24@0:8@"SVXSession"16
v24@0:8@"AFDeviceContext"16
v32@0:8@"SVXDeviceSetupManager"16@"SVXDeviceSetupContext"24
v32@0:8@"SVXActivationContext"16@?<v@?>24
v32@0:8@"SVXActivationContext"16@?<v@?@"NSError">24
v32@0:8@"SVXDeactivationContext"16@?<v@?>24
v24@0:8@?<v@?@"SVXServiceCommandResult">16
v32@0:8q16@?24
@20@0:8B16
@"AFNotifyObserver"
@"SVXServiceCommandHandler"
@"SVXMyriadDeviceManager"
@"AFSiriTether"
@"SVXSession"
@"SVXSessionActivationAnnouncer"
@"SVXAudioPowerUpdateAnnouncer"
@"SVXSessionActivityAnnouncer"
@"AFQueue"
@"AFSpeechSynthesisRecord"
@"AFDeviceContext"
@"AFSpeakableUtteranceParser"
v32@0:8@16f24f28
v32@0:8@"AFAudioPowerUpdater"16f24f28
@"<SVXClientAudioPowerServiceDelegate>"16@0:8
v24@0:8@"<SVXClientAudioPowerServiceDelegate>"16
@"<AFAudioPowerProviding>"
@"AFAudioPowerUpdater"
@"<SVXClientAudioPowerServiceDelegate>"
v52@0:8@16@24B32@36@44
v48@0:8@16{_NSRange=QQ}24@40
v44@0:8@16@24B32@36
v36@0:8@16B24@28
v40@0:8@16{_NSRange=QQ}24
v32@0:8@"VSSpeechSynthesizer"16@"VSSpeechRequest"24
v40@0:8@"VSSpeechSynthesizer"16@"VSSpeechRequest"24@"NSArray"32
v52@0:8@"VSSpeechSynthesizer"16@"VSSpeechRequest"24B32@"NSString"36@"NSError"44
v40@0:8@"VSSpeechSynthesizer"16@"VSSpeechRequest"24@"VSInstrumentMetrics"32
v48@0:8@"VSSpeechSynthesizer"16{_NSRange=QQ}24@"VSSpeechRequest"40
v40@0:8@"VSSpeechSynthesizer"16@"VSSpeechRequest"24@"VSAudioData"32
v48@0:8@"VSSpeechSynthesizer"16@"VSSpeechRequest"24@"VSInstrumentMetrics"32@"NSError"40
v32@0:8@"VSSpeechSynthesizer"16@"VSPresynthesizedAudioRequest"24
v44@0:8@"VSSpeechSynthesizer"16@"VSPresynthesizedAudioRequest"24B32@"NSError"36
v48@0:8@"VSSpeechSynthesizer"16@"VSPresynthesizedAudioRequest"24@"VSInstrumentMetrics"32@"NSError"40
v40@0:8@"VSSpeechSynthesizer"16@"VSSpeechRequest"24@"NSError"32
v24@0:8@"VSSpeechSynthesizer"16
v44@0:8@"VSSpeechSynthesizer"16B24@"NSString"28@"NSError"36
v36@0:8@"VSSpeechSynthesizer"16B24@"NSError"28
v44@0:8@"VSSpeechSynthesizer"16@"VSSpeechRequest"24B32@"NSError"36
v40@0:8@"VSSpeechSynthesizer"16{_NSRange=QQ}24
v56@0:8@16@?24@32@40@?48
v84@0:8@16@24@32q40I48@?52@?60@68@76
v32@0:8@16Q24
B32@0:8@16^@24
v48@0:8@16q24@32@40
@"VSSpeechSynthesizer"
@"SVXSpeechSynthesisAnnouncer"
@"SVXSpeechSynthesisConfiguration"
@"SVXSpeechSynthesisContext"
v32@0:8Q16@?24
@"<SVXTaskTracking>"24@0:8@"SVXTaskContext"16
@"SVXTaskContext"16@0:8
@"<SVXTaskTracking>"16@0:8
@"AFAnalyticsTurnBasedInstrumentationContext"16@0:8
@"NSUUID"16@0:8
@"SAUIListenAfterSpeakingBehavior"16@0:8
@"SVXActivationContext"16@0:8
@"SVXDeactivationContext"16@0:8
@"NSError"16@0:8
@"<SVXTaskTrackingDelegate>"
@"AFAnalyticsTurnBasedInstrumentationContext"
@64@0:8q16Q24@32@40@48@56
@"SVXClientInfo"
@"SVXDeactivationOptions"
v24@0:8@"SVXButtonEvent"16
v24@0:8@"SVXClientInfo"16
v24@0:8@"SVXDeactivationOptions"16
{_mutationFlags="isDirty"b1"hasSource"b1"hasTimestamp"b1"hasButtonEvent"b1"hasClientInfo"b1"hasUserInfo"b1"hasOptions"b1}
@"SVXSystemEvent"
@"AFRequestInfo"
v24@0:8@"SVXSystemEvent"16
v24@0:8@"AFRequestInfo"16
{_mutationFlags="isDirty"b1"hasSource"b1"hasTimestamp"b1"hasButtonEvent"b1"hasSystemEvent"b1"hasClientInfo"b1"hasRequestInfo"b1"hasUserInfo"b1}
@24@0:8q16
{_mutationFlags="isDirty"b1"hasStyle"b1}
v32@0:8@"<SVXTaskTracking>"16@"<SVXTaskTracking>"24
v24@0:8@"<SVXTaskTracking>"16
@"<SVXTaskTrackingCenterDelegate>"
@40@0:8q16@24@32
@"SVXSpeechSynthesisUtteranceInfo"
v24@0:8@"SVXSpeechSynthesisUtteranceInfo"16
@"SVXSpeechSynthesisResult"
{_mutationFlags="isDirty"b1"hasType"b1"hasUtteranceInfo"b1"hasError"b1}
@28@0:8i16@20
i16@0:8
v20@0:8i16
{_mutationFlags="isDirty"b1"hasProcessIdentifier"b1"hasProcessName"b1}
@"SVXServiceCommandResult"
@48@0:8@16q24q32q40
{_mutationFlags="isDirty"b1"hasLanguageCode"b1"hasGender"b1"hasHasActiveAccount"b1"hasIsNewsRestricted"b1}
@44@0:8q16@24q32f40
f16@0:8
v20@0:8f16
@"SVXStoreDemo"
{_mutationFlags="isDirty"b1"hasTranscriptID"b1"hasLanguageCode"b1"hasGender"b1"hasOutputVolume"b1}
@100@0:8q16@24@32@40q48I56@?60@?68@?76@84@92
v40@0:8q16@24@32
@"VSPresynthesizedAudioRequest"
@"VSSpeechRequest"
@"VSInstrumentMetrics"
@"SVXAudioSessionAssertion"
@40@0:8@16d24@32
@"NSSet"
v24@0:8@"NSSet"16
@"SVXUserFeedbackScene"
{_mutationFlags="isDirty"b1"hasIdentifier"b1"hasDuration"b1"hasNodes"b1}
@28@0:8Q16B24
@"<SAAceCommand>"
@"<NSCopying>"
{_mutationFlags="isDirty"b1"hasUtterance"b1"hasWordTimings"b1}
@48@0:8@16d24@32@40
v24@0:8@"SVXUserFeedback"16
@"SVXUserFeedbackNode"
{_mutationFlags="isDirty"b1"hasIdentifier"b1"hasDuration"b1"hasFeedback"b1"hasDependentNodes"b1}
v32@0:8@"NSDictionary"16@?<v@?@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSError">24
v40@0:8@"SVXButtonEvent"16@"NSDictionary"24@?<v@?@"NSError">32
v32@0:8@"SVXSystemEvent"16@?<v@?>24
v40@0:8@"SVXSystemEvent"16@"NSDictionary"24@?<v@?@"NSError">32
v32@0:8@"NSDictionary"16@?<v@?>24
v40@0:8@"NSDictionary"16@"SVXDeactivationOptions"24@?<v@?>32
v48@0:8@"SVXButtonEvent"16@"NSDictionary"24@"SVXDeactivationOptions"32@?<v@?>40
@"<SVXClientActivationServiceDelegate>"16@0:8
v24@0:8@"<SVXClientActivationServiceDelegate>"16
@"<SVXClientActivationServiceDelegate>"
@68@0:8q16Q24@32@40@48@56I64
v24@0:8@"SVXStoreDemo"16
v24@0:8@"SVXSpeechSynthesisRequest"16
{_mutationFlags="isDirty"b1"hasType"b1"hasTimestamp"b1"hasDeviceSetupFlowScene"b1"hasStoreDemo"b1"hasOrderedAlarmAndTimerIDs"b1"hasSpeechSynthesisRequest"b1"hasAudioSessionID"b1}
@"NSData"
v24@0:8@"NSData"16
v24@0:8@"SVXAudioStreamBasicDescription"16
{_mutationFlags="isDirty"b1"hasData"b1"hasDecoderASBD"b1"hasPlayerASBD"b1}
@32@0:8q16@24
B48@0:8@?16@?24@?32@?40
@56@0:8q16q24@32@40@48
@"AceObject<SAAceCommand>"
@"<SVXMyriadWiFiAssertionProtocol>"
@"AFWatchdogTimer"
v24@0:8@"AFDeviceContextConnection"16
v32@0:8@"AFDeviceContextConnection"16@"AFDeviceContext"24
@"SVXDeviceContextAnnouncer"
@"AFDeviceContextConnection"
v32@0:8@"SABaseCommand"16@?<v@?@"SABaseCommand">24
v48@0:8Q16@24@32@?40
v48@0:8Q16@"AFMyriadGoodnessScoreContext"24@"AFMyriadContext"32@?<v@?@"SVXServiceCommandResult">40
@48@0:8@16@24@32@40
v64@0:8@16@24@32@40@48@56
@"<SVXMyriadRequestDelegate>"
@32@0:8@16^B24
@"NSString"24@0:8@"NSString"16
@"NSString"32@0:8@"NSString"16^B24
@24@0:8@"AceObject"16
v24@0:8@"AFBulletin"16
@"NSURL"24@0:8@"NSString"16
v32@0:8@"SVXDeviceSetupContext"16@?<v@?@"SVXDeviceSetupFlow"@"NSError">24
v24@0:8@"SVXDeviceSetupContext"16
@32@0:8@16@?24
B32@0:8@?16@?24
@64@0:8@16@24@32@40@48@?56
v28@0:8@16B24
v28@0:8@16I24
v48@0:8@16q24@32@?40
v24@0:8@"AFConnection"16
v40@0:8@"AFConnection"16@"AceObject<SAAceCommand>"24@?<v@?@"AceObject<SAAceCommand>">32
v40@0:8@"AFConnection"16@"NSError"24@"NSString"32
v40@0:8@"AFConnection"16@"NSURL"24@?<v@?B>32
v48@0:8@"AFConnection"16@"NSString"24@"NSURL"32@?<v@?B>40
v28@0:8@"AFConnection"16B24
v28@0:8@"AFConnection"16I24
v32@0:8@"AFConnection"16@"NSDictionary"24
v36@0:8@"AFConnection"16B24@"NSDictionary"28
v40@0:8@"AFConnection"16@"NSDictionary"24@"NSURL"32
v32@0:8@"AFConnection"16@"INImage"24
v32@0:8@"AFConnection"16@"NSString"24
v40@0:8@"AFConnection"16@"NSString"24@"NSError"32
v40@0:8@"AFConnection"16@"NSString"24@?<v@?B>32
v40@0:8@"AFConnection"16@"AFRequestInfo"24@?<v@?B>32
v32@0:8@"AFConnection"16@"AFAudioPlaybackRequest"24
v40@0:8@"AFConnection"16@"AFAudioPlaybackRequest"24@"NSError"32
v32@0:8@"AFConnection"16Q24
v48@0:8@"AFConnection"16q24@"INIntent"32@?<v@?BB>40
v32@0:8@"AFConnection"16q24
v36@0:8@16@24I32
v32@0:8@"AFConnection"16@"AFXPCWrapper"24
v36@0:8@"AFConnection"16@"NSString"24I32
v40@0:8@"AFConnection"16q24@?<v@?dd@"NSError">32
v32@0:8@"AFConnection"16@"NSError"24
v32@0:8@"AFConnection"16@"SASSpeechRecognized"24
v32@0:8@"AFConnection"16@"SASSpeechPartialResult"24
v40@0:8@"AFConnection"16@"AFSpeechInterpretation"24@"NSString"32
v48@0:8@"AFConnection"16@"NSArray"24@"NSArray"32@"NSString"40
v24@0:8@"SVXTaskTrackingCenter"16
v32@0:8@"SVXTaskTrackingCenter"16@"SVXTaskContext"24
v32@0:8@"NSString"16@?<v@?@"SVXAudioSessionAssertion"@"NSError">24
@72@0:8@16@24@32@40@48@56@64
@88@0:8@16Q24@32@40@48@56q64@72@?80
v40@0:8@16Q24@?32
v64@0:8@16Q24@32@40@48@?56
v96@0:8@16Q24@32@40@48@56q64@72@80@?88
v68@0:8@16B24@28@36@44@52@?60
v52@0:8@16B24@28@36@?44
v92@0:8@16@24@32q40I48q52q60@68@?76@?84
v40@0:8q16@24@?32
v32@0:8Q16@24
v40@0:8Q16q24@?32
@"AFConnection"
@"AFSpeechRequestOptions"
@"SVXTaskTrackingCenter"
@"AFXPCWrapper"
@"<SVXSessionDelegate>"
@"SASetApplicationContext"
@"AFHomeAccessoryInfo"
@"NSUserActivity"
@"<AFRelinquishableAssertion>"
@"SRSTClient"
@48@0:8q16@24d32d40
@"SVXDeviceSetupFlowDisplayKeyFrame"
{_mutationFlags="isDirty"b1"hasKeyFrameID"b1"hasText"b1"hasOffset"b1"hasDuration"b1}
@48@0:8@16@24q32@40
@"SVXDeviceSetupFlow"
{_mutationFlags="isDirty"b1"hasIdentifier"b1"hasLanguageCode"b1"hasGender"b1"hasScenes"b1}
v24@0:8f16f20
v24@0:8@"AFMyriadSession"16
v24@0:8@"AFMyriadCoordinator"16
v32@0:8d16@?24
@"AFMyriadCoordinator"
@"<SVXMyriadResponseDelegate>"
{?="completion"@?"timer"@"NSObject<OS_dispatch_source>"}
@"SVXMyriadWiFiAssertion"
@40@0:8q16Q24@32
@48@0:8q16Q24@32@40
@56@0:8q16Q24@32@40@48
@60@0:8q16Q24@32@40@48I56
@24@0:8d16
{_mutationFlags="isDirty"b1"hasAudioSessionDeactivationDelay"b1}
v40@0:8@16@?24@?32
v32@0:8@"SVXSpeechSynthesisRequest"16@?<v@?@"SVXSpeechSynthesisResult">24
v40@0:8@"SVXSpeechSynthesisRequest"16@?<v@?@"VSAudioData"Q>24@?<v@?@"SVXSpeechSynthesisResult">32
v48@0:8@16@24Q32@?40
B40@0:8@16@24Q32
@40@0:8{_NSRange=QQ}16d32
{_NSRange=QQ}16@0:8
{_NSRange="location"Q"length"Q}
v32@0:8{_NSRange=QQ}16
@"SVXSpeechSynthesisWordTiming"
{_mutationFlags="isDirty"b1"hasRange"b1"hasTimeInterval"b1}
@20@0:8I16
@36@0:8@16@24I32
@"AFVoiceInfo"
@"NSLocale"
