Can't open BMTL with version = %u
BMTL file is not compatible with the existing texture.
Texture OSType doesn't match the file OSType.
B64@?0*8Q16Q24Q32Q40Q48Q56
Can't save planar textures with BMTL version 1, please use at least version 2.
BMTL version 1 only supports saving non-planar 2D textures.
BMTL version %u not supported (please use anything between %d and %d
Something went wrong at row %ld
No kCVPixelFormatBitsPerBlock entry in the description of format %08x plane %ld
GetPixelSizeInBytes
CMIBareMetalTexture.m
( pixelSizeInBytes % 8 ) == 0
GetPixelBlockSizeInBytes
PixelBufferUtils.m
(pixelSizeInBytes % 8) == 0
B56@?0*8Q16Q24Q32Q40Q48
P5 %d %d 255
P5 %lu %lu 255
VISProcessorV%d
VISConfigurationV%d
%@/VideoStabilizationV%d.bundle
/System/Library/VideoProcessors/
<%@ %p>: maxInputDimensions:%dx%d inputPixelFormat:%@ maxOutputDimensions:%dx%d processorSpecificOptions:%@
%c%c%c%c
v8@?0
waitForIdle
waitForSchedule
prewarmInternal
mtlintercept.waitUntilCompleted
com.apple.coremedia
mtlintercept.waitUntilScheduled
(Error) %@
v16@?0@"<MTLCommandBuffer>"8
%@_%@
SIMDTextureReaderFunctionConstants::simdShuffleFillSupported
CMISharpnessScore::sharpnessScoreCalculatorFloat
CMISharpnessScore::sharpnessScoreCalculatorUInt
CMISharpnessScore::sumScoreStep1
CMISharpnessScore::sumScoreStep2
FigMetalAllocator_CMISharpnessScore
inputTexture%d
imageScore%d
<%@ %p>: %@: %lu (%lu MB) wireMemory:%d
FigMetalAllocatorTypeNoAliasing
FigMetalAllocatorTypeBuffer
FigMetalAllocatorTypeHeap
subAllocator ID: %i
mtlallocator.overrideStorageMode
E\:>~
y=&|%=c
N>fW
CMIBareMetalTexture
VISProvider
CMIExternalMemoryConfiguration
CMIExternalMemoryDescriptor
CMIExternalMemoryResource
FigMetalExecutionStatus
FigMetalContext
InterceptConfig
CMMTLDevice
MTLDeviceSPI
MTLDevice
NSObject
CMMTLCommandQueue
MTLCommandQueueSPI
MTLCommandQueue
CMMTLCommandBuffer
MTLCommandBufferSPI
MTLCommandBuffer
CMISharpnessScore
FigMetalAllocatorMetadata
MTLTexture
MTLResource
FigMetalUtils
FigMetalAllocatorDescriptor
FigMetalAllocatorBackendDescriptor
FigMetalTextureDescriptor
FigMetalBufferDescriptor
FigMetalNoAliasingAllocator
FigMetalAllocatorImpl
FigMetalBufferAllocator
FigMetalHeapAllocator
FigMetalAllocator
FigMetalAllocatorBackend
FigMetalTextureStub
pixelFormat
iosurface
dataWithContentsOfFile:
initWithData:device:
updateTextureDescriptor:
width
height
newTextureWithDescriptor:iosurface:plane:
newTextureWithDescriptor:
updateTextureContent:
updateTextureWithData:
bytes
setTextureType:
setWidth:
setHeight:
setDepth:
setArrayLength:
setPixelFormat:
textureType
depth
arrayLength
length
replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:
saveToFile:withBMTLversion:
initToFileAtPath:append:
open
streamStatus
write:maxLength:
dataWithLength:
mutableBytes
getBytes:bytesPerRow:bytesPerImage:fromRegion:mipmapLevel:slice:
close
initWithTexture:
initWithFile:device:
updateTextureWithFile:
saveToFile:
texture
.cxx_destruct
_textureDescriptor
_osType
_stride
_dataOffset
_texture
T@"<MTLTexture>",R,N,V_texture
device
dictionary
setObject:forKeyedSubscript:
numberWithInt:
numberWithUnsignedInt:
storageMode
mipmapLevelCount
setMipmapLevelCount:
setUsage:
newCommandQueue
commandBuffer
blitCommandEncoder
copyFromTexture:toTexture:
endEncoding
commit
waitUntilCompleted
stringWithCString:encoding:
pathExtension
getBytes:maxLength:usedLength:encoding:options:range:remainingRange:
stringWithUTF8String:
dataWithContentsOfFile:options:error:
initWithDictionary:
numberWithInteger:
_loadVISBundleForVersion:
stringWithFormat:
classNamed:
bundleWithPath:
loadAndReturnError:
VISProcessorForVersion:
VISConfigurationForVersion:
init
initWithMaxInputDimensions:inputPixelFormat:maxOutputDimensions:processorSpecificOptions:
description
maxInputDimensions
inputPixelFormat
maxOutputDimensions
processorSpecificOptions
_inputPixelFormat
_maxInputDimensions
_maxOutputDimensions
_processorSpecificOptions
T{?=ii},R,N,V_maxInputDimensions
TI,R,N,V_inputPixelFormat
T{?=ii},R,N,V_maxOutputDimensions
T@"NSDictionary",R,N,V_processorSpecificOptions
initWithMemSize:allocatorType:
memSize
setMemSize:
allocatorType
setAllocatorType:
_allocatorType
_memSize
TQ,N,V_memSize
Ti,N,V_allocatorType
allocatorBackend
setAllocatorBackend:
_allocatorBackend
T@"FigMetalAllocatorBackend",&,N,V_allocatorBackend
failedCommandBuffers
setFailedCommandBuffers:
status
setStatus:
completedCommandBuffersCount
setCompletedCommandBuffersCount:
_completedCommandBuffersCount
_failedCommandBuffers
_status
T@"NSMutableArray",&,N,V_failedCommandBuffers
TQ,N,V_status
Ti,N,V_completedCommandBuffersCount
initWithLevel:
commonInitWithOptionalCommandQueue:
newDefaultLibrary
newDefaultLibraryWithBundle:error:
newLibraryWithData:error:
createMetalDevice
setBackgroundGPUPriority:
initRangeVertex
executionStatus
setExecutionStatus:
newBufferWithBytes:length:options:
attributes
objectAtIndexedSubscript:
setFormat:
setBufferIndex:
setOffset:
layouts
setStride:
setStepFunction:
forceCommit
setLabel:
commitAndWait
waitUntilScheduled
setPipelineLibrary:
newFunctionWithName:constantValues:error:
newFunctionWithName:
newComputePipelineStateWithFunction:error:
insertDebugCaptureBoundary
setGPUPriority:
WriteMetalTextureToFile:texture:mipmapLevel:
getBytes:bytesPerRow:fromRegion:mipmapLevel:
ReadMetalTextureFromFile:texture:mipmapLevel:
replaceRegion:mipmapLevel:withBytes:bytesPerRow:
texture2DDescriptorWithPixelFormat:width:height:mipmapped:
bindPixelBufferToMTL2DTexture:pixelFormat:usage:plane:widthAlignmentFactor:heightAlignmentFactor:
bindIOSurfaceToMTL2DTexture:pixelFormat:usage:width:height:plane:
newBufferWithIOSurface:
buffer
resourceOptions
setResourceOptions:
bufferOffset
bufferBytesPerRow
newLinearTextureWithDescriptor:offset:bytesPerRow:bytesPerImage:
iosurfacePlane
setSize:
newHeapWithDescriptor:
countByEnumeratingWithState:objects:count:
intValue
makeAliasable
colorAttachments
setTexture:
renderCommandEncoderWithDescriptor:
newTextureWithDescriptor:offset:bytesPerRow:
initWithbundle:andOptionalCommandQueue:
initWithLibraryData:ofSize:andOptionalCommandQueue:
initWithoutLibraryUsingOptionalCommandQueue:
commandQueue
waitForIdle
waitForSchedule
computePipelineStateFor:constants:
setQueuePriority:
WriteMetalTextureToFile:texture:
ReadMetalTextureFromFile:texture:
CreateMetalTextureFromFile:pixelFormat:usage:width:height:
getPixelSizeInBytes:
bindPixelBufferToMTL2DTexture:pixelFormat:usage:plane:alignmentFactor:
bindPixelBufferToMTL2DTexture:pixelFormat:usage:plane:
bindPixelBufferToMTLBuffer:
bindPixelBufferToMTL2DTexture:pixelFormat:usage:textureSize:plane:
rebindTex:format:usage:plane:xFactor:
prewarmInternalMetalShadersForFormatsList:
create2DTextureFromBuffer:offset:width:height:format:usage:
setDevice:
setCommandQueue:
library
setLibrary:
setCommandBuffer:
pipelineLibrary
allocator
setAllocator:
allowCommandBufferCommitsOnlyByForceCommit
setAllowCommandBufferCommitsOnlyByForceCommit:
fullRangeVertexBuf
setFullRangeVertexBuf:
fullRangeVertexDesc
setFullRangeVertexDesc:
_allowCommandBufferCommitsOnlyByForceCommit
_device
_commandQueue
_library
_commandBuffer
_pipelineLibrary
_allocator
_fullRangeVertexBuf
_fullRangeVertexDesc
T@"<MTLDevice>",&,N,V_device
T@"<MTLCommandQueue>",&,N,V_commandQueue
T@"<MTLLibrary>",&,N,V_library
T@"<MTLCommandBuffer>",&,N,V_commandBuffer
T@"<MTLPipelineLibrarySPI>",&,N,V_pipelineLibrary
T@"FigMetalAllocator",&,N,V_allocator
T@"FigMetalExecutionStatus",&,N
TB,N,V_allowCommandBufferCommitsOnlyByForceCommit
T@"<MTLBuffer>",&,N,V_fullRangeVertexBuf
T@"MTLVertexDescriptor",&,N,V_fullRangeVertexDesc
setWaitUntilCompleted:
setWaitUntilScheduled:
loadExperimentsConfig
interceptLevel
setInterceptLevel:
_waitUntilCompleted
_waitUntilScheduled
_interceptLevel
_executionStatus
Ti,N,V_interceptLevel
T@"FigMetalExecutionStatus",&,N,V_executionStatus
TB,N,V_waitUntilCompleted
TB,N,V_waitUntilScheduled
initWithCMMTLDevice:
initWithCMMTLDevice:maxCommandBufferCount:
initWithCMMTLDevice:descriptor:
respondsToSelector:
selector
invokeWithTarget:
forwardInvocation:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
newCommandQueueWithMaxCommandBufferCount:
heapTextureSizeAndAlignWithDescriptor:
heapBufferSizeAndAlignWithLength:options:
newBufferWithLength:options:
newBufferWithBytesNoCopy:length:options:deallocator:
newDepthStencilStateWithDescriptor:
newSamplerStateWithDescriptor:
newLibraryWithFile:error:
newLibraryWithURL:error:
newLibraryWithSource:options:error:
newLibraryWithSource:options:completionHandler:
newLibraryWithStitchedDescriptor:error:
newLibraryWithStitchedDescriptor:completionHandler:
newRenderPipelineStateWithDescriptor:error:
newRenderPipelineStateWithDescriptor:options:reflection:error:
newRenderPipelineStateWithDescriptor:completionHandler:
newRenderPipelineStateWithDescriptor:options:completionHandler:
newComputePipelineStateWithFunction:options:reflection:error:
newComputePipelineStateWithFunction:completionHandler:
newComputePipelineStateWithFunction:options:completionHandler:
newComputePipelineStateWithDescriptor:options:reflection:error:
newComputePipelineStateWithDescriptor:options:completionHandler:
newFence
supportsFeatureSet:
supportsFamily:
supportsTextureSampleCount:
minimumLinearTextureAlignmentForPixelFormat:
minimumTextureBufferAlignmentForPixelFormat:
newRenderPipelineStateWithTileDescriptor:options:reflection:error:
newRenderPipelineStateWithTileDescriptor:options:completionHandler:
newRenderPipelineStateWithMeshDescriptor:options:reflection:error:
newRenderPipelineStateWithMeshDescriptor:options:completionHandler:
getDefaultSamplePositions:count:
newArgumentEncoderWithArguments:
supportsRasterizationRateMapWithLayerCount:
newRasterizationRateMapWithDescriptor:
newIndirectCommandBufferWithDescriptor:maxCommandCount:options:
newEvent
newSharedEvent
newSharedEventWithHandle:
newIOHandleWithURL:error:
newIOCommandQueueWithDescriptor:error:
newIOHandleWithURL:compressionMethod:error:
sparseTileSizeWithTextureType:pixelFormat:sampleCount:
sparseTileSizeInBytesForSparsePageSize:
sparseTileSizeWithTextureType:pixelFormat:sampleCount:sparsePageSize:
newCounterSampleBufferWithDescriptor:error:
sampleTimestamps:gpuTimestamp:
newArgumentEncoderWithBufferBinding:
supportsCounterSampling:
supportsVertexAmplificationCount:
newDynamicLibrary:error:
newDynamicLibraryWithURL:error:
newBinaryArchiveWithDescriptor:error:
accelerationStructureSizesWithDescriptor:
newAccelerationStructureWithSize:
newAccelerationStructureWithDescriptor:
heapAccelerationStructureSizeAndAlignWithSize:
heapAccelerationStructureSizeAndAlignWithDescriptor:
name
registryID
maxThreadsPerThreadgroup
isLowPower
isHeadless
isRemovable
hasUnifiedMemory
recommendedMaxWorkingSetSize
isDepth24Stencil8PixelFormatSupported
readWriteTextureSupport
argumentBuffersSupport
areRasterOrderGroupsSupported
supports32BitFloatFiltering
supports32BitMSAA
supportsQueryTextureLOD
supportsBCTextureCompression
supportsPullModelInterpolation
areBarycentricCoordsSupported
supportsShaderBarycentricCoordinates
currentAllocatedSize
maxThreadgroupMemoryLength
maxArgumentBufferSamplerCount
areProgrammableSamplePositionsSupported
sparseTileSizeInBytes
maxBufferLength
counterSets
supportsDynamicLibraries
supportsRenderDynamicLibraries
supportsRaytracing
supportsFunctionPointers
supportsFunctionPointersFromRender
supportsRaytracingFromRender
supportsPrimitiveMotionBlur
convertSparsePixelRegions:toTileRegions:withTileSize:alignmentMode:numRegions:
convertSparseTileRegions:toPixelRegions:withTileSize:numRegions:
T@"NSString",R
T{?=QQQ},R
lowPower
TB,R,GisLowPower
headless
TB,R,GisHeadless
removable
TB,R,GisRemovable
TB,R
depth24Stencil8PixelFormatSupported
TB,R,GisDepth24Stencil8PixelFormatSupported
rasterOrderGroupsSupported
TB,R,GareRasterOrderGroupsSupported
barycentricCoordsSupported
TB,R,GareBarycentricCoordsSupported
programmableSamplePositionsSupported
TB,R,GareProgrammableSamplePositionsSupported
T@"NSArray",R
reportLeaks
allowLibrariesFromOtherPlatforms
vendorName
familyName
productName
getMostCompatibleArchitecture:
compilerPropagatesThreadPriority:
_setDeviceWrapper:
_deviceWrapper
deviceSupportsFeatureSet:
deviceOrFeatureProfileSupportsFeatureSet:
minLinearTextureAlignmentForPixelFormat:
unloadShaderCaches
libraryCacheStats
pipelineCacheStats
copyShaderCacheToPath:
supportsSampleCount:
newCommandQueueWithDescriptor:
newIndirectArgumentBufferLayoutWithStructType:
newArgumentEncoderWithLayout:
supportsTextureWriteRoundingMode:
newIndirectCommandBufferWithDescriptor:maxCount:options:
newIndirectRenderCommandEncoderWithBuffer:
newIndirectComputeCommandEncoderWithBuffer:
newSharedEventWithMachPort:
setResourcesPurgeableState:newState:oldState:count:
newAccelerationStructureWithSize:resourceIndex:
isCompatibleWithAccelerationStructure:
newAccelerationStructureWithBuffer:offset:
newAccelerationStructureWithBuffer:offset:resourceIndex:
deserializePrimitiveAccelerationStructureFromBytes:withDescriptor:
deserializeInstanceAccelerationStructureFromBytes:primitiveAccelerationStructures:withDescriptor:
newAccelerationStructureWithSize:withDescriptor:
deserializePrimitiveAccelerationStructure:fromBytes:withDescriptor:
deserializeInstanceAccelerationStructure:fromBytes:primitiveAccelerationStructures:withDescriptor:
newDynamicLibrary:computeDescriptor:error:
validateDynamicLibraryDescriptor:error:
newDynamicLibraryWithDescriptor:error:
newDynamicLibraryWithURL:options:error:
newDynamicLibraryFromURL:error:
loadDynamicLibrariesForComputeDescriptor:error:
loadDynamicLibrariesForComputeDescriptor:options:error:
loadDynamicLibrariesForFunction:insertLibraries:error:
loadDynamicLibrariesForFunction:insertLibraries:options:error:
validateDynamicLibrary:state:error:
validateDynamicLibraryURL:error:
newBinaryLibraryWithOptions:url:error:
newVisibleFunctionTableWithDescriptor:
newIntersectionFunctionTableWithDescriptor:
newRenderPipelineStateWithMeshDescriptor:error:
newRenderPipelineStateWithMeshDescriptor:completionHandler:
newProfileWithExecutionSize:
supportsBufferlessClientStorageTexture
supportsComputeMemoryBarrier
supportsRenderMemoryBarrier
supportsArgumentBuffersTier2
supportsReadWriteTextureArgumentsTier2
supportsStreamingCodecSignaling
supportsProgrammableSamplePositions
supportsLargeFramebufferConfigs
supportsCustomBorderColor
supportsSamplerAddressModeClampToHalfBorder
supports3DBCTextures
supportsRGBA10A2Gamma
supportsBGR10A2
supportsPrimitiveRestartOverride
supportsGlobalVariableRelocation
supportsGlobalVariableRelocationRender
supportsGlobalVariableRelocationCompute
supportsTLS
supports32bpcMSAATextures
supportsVertexAmplification
supportsPlacementHeaps
supportsOpenCLTextureWriteSwizzles
supportsInt64
supportsFixedLinePointFillDepthGradient
supportsLateEvalEvent
supportsNonZeroTextureWriteLOD
supportsSharedTextureHandles
supportsBufferPrefetchStatistics
supportsLimitedYUVFormats
supportsNonPrivateDepthStencilTextures
supportsNonPrivateMSAATextures
supportsSharedStorageHeapResources
supportsSharedStorageTextures
supportsLinearTextureFromSharedBuffer
supportsPipelineLibraries
supportsFragmentOnlyEncoders
supportsBufferWithIOSurface
supportsProgrammableBlending
supportsRenderToLinearTextures
supportsMemorylessRenderTargets
supportsFastMathInfNaNPropagation
supportsInvariantVertexPosition
supportsShaderLODAverage
supportsRelaxedTextureViewRequirements
supportsSeparateDepthStencil
supportsGPUStatistics
supportsCompressedTextureViewSPI
supportsRenderTargetTextureRotation
supportsDynamicControlPointCount
supportsIABHashForTools
supportsBinaryArchives
supportsBinaryLibraries
supportsDeadlineProfile
supportsFillTexture
supportsSetThreadgroupPackingDisabled
supportsASTCTextureCompression
supportsExtendedYUVFormats
supportsPublicXR10Formats
supportsSRGBwrites
supportsDepthClipMode
supportsPacked32TextureBufferWrites
supports3DASTCTextures
supportsExtendedXR10Formats
supportsFragmentBufferWrites
supportsCountingOcclusionQuery
supportsBaseVertexInstanceDrawing
supportsIndirectDrawAndDispatch
supportsTessellation
supportsReadWriteBufferArguments
supportsArrayOfTextures
supportsArrayOfSamplers
supportsCombinedMSAAStoreAndResolveAction
supportsMutableTier1ArgumentBuffers
supportsSamplerCompareFunction
supportsMSAADepthResolve
supportsMSAAStencilResolve
supportsMSAADepthResolveFilter
supportsGFXIndirectCommandBuffers
supportsCMPIndirectCommandBuffers
supportsIndirectStageInRegion
supportsIndirectTextures
supportsNorm16BCubicFiltering
supportsTextureOutOfBoundsReads
supportsTextureSwizzle
supportsAlphaYUVFormats
supportsMemoryOrderAtomics
supportsQuadGroup
supportsRenderTextureWrites
supportsImageBlocks
supportsTileShaders
supportsImageBlockSampleCoverageControl
supportsNativeHardwareFP16
supportsPostDepthCoverage
supportsMipLevelsSmallerThanBlockSize
supportsNonUniformThreadgroupSize
supportsReadWriteTextureArguments
supportsReadWriteTextureCubeArguments
supportsTextureCubeArray
supportsQuadShufflesAndBroadcast
supportsConcurrentComputeDispatch
supportsRenderPassWithoutRenderTarget
supportsRasterOrderGroups
supportsRasterOrderGroupsColorAttachment
supportsLinearTexture2DArray
supportsNonSquareTileShaders
supportsSeparateVisibilityAndShadingRate
supports2DLinearTexArraySPI
supportsLayeredRendering
supportsViewportAndScissorArray
supportsIndirectTessellation
supportsMSAAStencilResolveFilter
supportsStencilFeedback
supportsFP32TessFactors
supportsUnalignedVertexFetch
supportsSIMDGroup
supportsShaderMinLODClamp
supportsSIMDShufflesAndBroadcast
supportsWritableArrayOfTextures
supportsVariableRateRasterization
supportsYCBCRFormats
supportsYCBCRFormatsPQ
supportsYCBCRFormats12
supportsYCBCRFormatsXR
supportsASTCHDRTextureCompression
supportsSparseTextures
supportsSparseHeaps
supportsIndirectWritableTextures
supportsStatefulDynamicLibraries
supportsSharedFunctionTables
supportsRayTracingExtendedVertexFormats
supportsHeapAccelerationStructureAllocation
supportsRayTracingPerPrimitiveData
supportsRayTracingBuffersFromTables
supportsRayTracingAccelerationStructureCPUDeserialization
supportsBlackOrWhiteSamplerBorderColors
supportsMirrorClampToEdgeSamplerMode
supportsSIMDReduction
supportsDepthClipModeClampExtended
supportsTexture2DMultisampleArray
supportsForceSeamsOnCubemaps
supportsFloat16BCubicFiltering
supportsFloat16InfNanFiltering
supportsRTZRounding
supportsAnisoSampleFix
supportsYCBCRPackedFormatsPQ
supportsYCBCRPackedFormats12
supportsYCBCRPackedFormatsXR
supportsBufferBoundsChecking
supportsForkJoin
supportsDevicePartitioning
supportsComputeCompressedTextureWrite
supportsSIMDGroupMatrix
supportsInterchangeTiled
supportsQuadReduction
supportsSIMDShuffleAndFill
supportsBfloat16Format
supportsSparseDepthAttachments
supportsLossyCompression
supportsMeshShaders
supportsFunctionPointersFromMesh
supportsMeshShadersInICB
supportsCommandBufferJump
supportsStackOverflowErrorCode
supportsRayTracingICBs
supportsExplicitVisibilityGroups
bufferRobustnessSupport
deviceCreationFlags
areGPUAssertionsEnabled
setGPUAssertionsEnabled:
commandBufferErrorOptions
setCommandBufferErrorOptions:
isBCTextureCompressionSupported
targetDeviceInfo
targetDeviceArchitecture
architecture
halfFPConfig
singleFPConfig
doubleFPConfig
metalAssertionsEnabled
setMetalAssertionsEnabled:
featureProfile
simulatorHostFeatureProfile
limits
maxFramebufferStorageBits
linearTextureArrayAlignmentBytes
linearTextureArrayAlignmentSlice
maxTileBuffers
maxTileTextures
maxTileSamplers
maxTileInlineDataSize
minTilePixels
maxColorAttachments
maxVertexAttributes
maxVertexBuffers
maxVertexTextures
maxVertexSamplers
maxVertexInlineDataSize
maxInterpolants
maxFragmentBuffers
maxFragmentTextures
maxFragmentSamplers
maxFragmentInlineDataSize
maxComputeBuffers
maxComputeTextures
maxComputeSamplers
maxComputeInlineDataSize
maxComputeLocalMemorySizes
maxTotalComputeThreadsPerThreadgroup
maxComputeThreadgroupMemory
maxLineWidth
maxPointSize
maxVisibilityQueryOffset
minConstantBufferAlignmentBytes
minBufferNoCopyAlignmentBytes
maxTextureWidth1D
maxTextureWidth2D
maxTextureHeight2D
maxTextureWidth3D
maxTextureHeight3D
maxTextureDepth3D
maxTextureDimensionCube
maxTextureLayers
linearTextureAlignmentBytes
iosurfaceTextureAlignmentBytes
iosurfaceReadOnlyTextureAlignmentBytes
deviceLinearTextureAlignmentBytes
deviceLinearReadOnlyTextureAlignmentBytes
maxFunctionConstantIndices
maxComputeThreadgroupMemoryAlignmentBytes
maxInterpolatedComponents
maxTessellationFactor
maxIndirectBuffers
maxIndirectTextures
maxIndirectSamplers
maxIndirectSamplersPerDevice
maxFenceInstances
maxIOCommandsInFlight
maxViewportCount
maxCustomSamplePositions
maxVertexAmplificationFactor
maxVertexAmplificationCount
maxTextureBufferWidth
maxComputeAttributes
maxPredicatedNestingDepth
maxConstantBufferArguments
supportPriorityBand
sharedMemorySize
dedicatedMemorySize
indirectArgumentBufferCapabilities
isFloat32FilteringSupported
isMsaa32bSupported
isRTZRoundingSupported
defaultTextureWriteRoundingMode
isAnisoSampleFixSupported
isFixedLinePointFillDepthGradientSupported
isLargeMRTSupported
maxRasterizationRateLayerCount
isPlacementHeapSupported
GPUBVHBuilder
requiresRaytracingEmulation
pluginData
setPluginData:
registerDevices
supportsPrimitiveType:
indirectArgumentBufferDecodingData
setIndirectArgumentBufferDecodingData:
setupMPSFunctionTable:
resourcePatchingTypeForResourceType:
reserveResourceIndicesForResourceType:indices:indexCount:
reserveGPUAddressRange:
newBufferWithLength:options:gpuAddress:
newBufferWithBytes:length:options:gpuAddress:
newBufferWithBytesNoCopy:length:options:gpuAddress:deallocator:
newBufferWithDescriptor:
newLateEvalEvent
mapShaderSampleBufferWithBuffer:capacity:size:
unmapShaderSampleBuffer
newComputePipelineStateWithDescriptor:error:
newComputePipelineStateWithDescriptor:completionHandler:
newRenderPipelineStateWithTileDescriptor:error:
newRenderPipelineStateWithTileDescriptor:completionHandler:
newFunctionWithGLCoreIR:functionType:
newFunctionWithGLCoreIR:inputsDescription:functionType:
newFunctionWithGLESIR:functionType:
newFunctionWithGLESIR:inputsDescription:functionType:
newFunctionWithGLIR:functionType:
newFunctionWithGLIR:inputsDescription:functionType:
getShaderCacheKeys
getBVHBuilderLock
getRawBVHBuilderPtr
setRawBVHBuilderPtr:
newIndirectArgumentEncoderWithArguments:
newComputePipelineStateWithImageFilterFunctionsSPI:imageFilterFunctionInfo:error:
newLibraryWithDAG:functions:error:
newLibraryWithGraphs:functions:error:
newLibraryWithGraphsSPI:functions:error:
newLibraryWithStitchedDescriptorSPI:error:
newLibraryWithDescriptor:error:
newLibraryWithDescriptor:completionHandler:
newLibraryWithDescriptorSPI:error:
newDagStringWithGraphs:
newLibraryWithImageFilterFunctionsSPI:imageFilterFunctionInfo:error:
newLibraryWithCIFilters:imageFilterFunctionInfo:error:
newLibraryWithCIFiltersForComputePipeline:imageFilterFunctionInfo:error:
newPipelineLibraryWithFilePath:error:
startCollectingPipelineDescriptors
startCollectingPipelineDescriptorsUsingPrefixForNames:
endCollectingPipelineDescriptors
serializeRenderPipelineDescriptor:
serializeComputePipelineDescriptor:
newRenderPipelineDescriptorWithSerializedData:deserializationContext:
newComputePipelineDescriptorWithSerializedData:deserializationContext:
serializeStructType:
serializeStructType:version:
newStructTypeWithSerializedData:
newTextureWithBytesNoCopy:length:descriptor:deallocator:
newTextureLayoutWithDescriptor:isHeapOrBufferBacked:
newIndirectArgumentEncoderWithLayout:
tileSizeWithSparsePageSize:textureType:pixelFormat:sampleCount:
compileVisibleFunction:withDescriptor:destinationBinaryArchive:error:
compileVisibleFunction:withDescriptor:error:
compileVisibleFunction:withDescriptor:completionHandler:
newResourceGroupFromResources:count:
deserializeCompileTimeStats:addToDictionary:
shaderDebugInfoCaching
setShaderDebugInfoCaching:
isQuadDataSharingSupported
sparseTexturesSupport
isRGB10A2GammaSupported
isCustomBorderColorSupported
isClampToHalfBorderSupported
TB,R,N
gpuAssertionsEnabled
TB,GareGPUAssertionsEnabled,SsetGPUAssertionsEnabled:
TQ,N
BCTextureCompressionSupported
TB,R,GisBCTextureCompressionSupported
Tr^{MTLTargetDeviceArch=QI*},R
T@"MTLTargetDeviceArchitecture",R
T@"MTLArchitecture",R
TB,N
Tr^{?=IIIIIIIIIIIIIIIIIIIIIIIIIIffIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIQ},R
Tf,R
T{IndirectArgumentBufferCapabilities=b1b1b1b29},R
quadDataSharingSupported
TB,R,GisQuadDataSharingSupported
float32FilteringSupported
TB,R,GisFloat32FilteringSupported
msaa32bSupported
TB,R,GisMsaa32bSupported
RTZRoundingSupported
TB,R,GisRTZRoundingSupported
Tq,R
AnisoSampleFixSupported
TB,R,GisAnisoSampleFixSupported
FixedLinePointFillDepthGradientSupported
TB,R,GisFixedLinePointFillDepthGradientSupported
largeMRTSupported
TB,R,GisLargeMRTSupported
RGB10A2GammaSupported
TB,R,GisRGB10A2GammaSupported
CustomBorderColorSupported
TB,R,GisCustomBorderColorSupported
ClampToHalfBorderSupported
TB,R,GisClampToHalfBorderSupported
placementHeapSupported
TB,R,GisPlacementHeapSupported
T@"MTLGPUBVHBuilder",R
T@"NSDictionary",C,N
forwardingTargetForSelector:
interceptConfig
setInterceptConfig:
_interceptConfig
T@"InterceptConfig",&,N,V_interceptConfig
initWithCMMTLCommandQueue:unretained:
commandBufferWithDescriptor:
commandBufferWithUnretainedReferences
label
T@"NSString",C
T@"<MTLDevice>",R
getGPUPriority
setGPUPriority:offset:
getBackgroundGPUPriority
setBackgroundGPUPriority:offset:
setSubmissionQueue:
setCompletionQueue:
finish
backgroundTrackingPID
setBackgroundTrackingPID:
maxCommandBufferCount
qosLevel
commitQueue
commitSynchronously
completionQueue
disableCrossQueueHazardTracking
skipRender
setSkipRender:
executionEnabled
setExecutionEnabled:
isOpenGLQueue
isProfilingEnabled
setProfilingEnabled:
getSPIStats
availableCounters
availableCountersAndDict
requestCounters:
requestCounters:withIndex:
getRequestedCounters
subdivideCounterList:
addPerfSampleHandler:
counterInfo
dispatchAvailableCompletionNotifications
isStatEnabled
setStatEnabled:
getStatOptions
setStatOptions:
getStatLocations
setStatLocations:
T@"NSObject<OS_dispatch_queue>",R
profilingEnabled
TB,GisProfilingEnabled
StatEnabled
TB,N,GisStatEnabled
StatOptions
TQ,N,GgetStatOptions
StatLocations
TQ,N,GgetStatLocations
_cmDevice
addObject:
error
localizedDescription
addCompletedHandler:
enqueue
addScheduledHandler:
presentDrawable:
presentDrawable:atTime:
computeCommandEncoderWithDescriptor:
blitCommandEncoderWithDescriptor:
computeCommandEncoder
computeCommandEncoderWithDispatchType:
encodeWaitForEvent:value:
encodeSignalEvent:value:
parallelRenderCommandEncoderWithDescriptor:
resourceStateCommandEncoder
resourceStateCommandEncoderWithDescriptor:
accelerationStructureCommandEncoder
accelerationStructureCommandEncoderWithDescriptor:
pushDebugGroup:
popDebugGroup
retainedReferences
errorOptions
kernelStartTime
kernelEndTime
logs
GPUStartTime
GPUEndTime
T@"<MTLCommandQueue>",R
Td,R
T@"<MTLLogContainer>",R
T@"NSError",R
encodeDashboardTagForResourceGroup:
encodeDashboardFinalizeForResourceGroup:dashboard:value:forIndex:
encodeDashboardFinalizeForResourceGroup:dashboard:values:indices:count:
addPurgedResource:
addPurgedHeap:
commitWithDeadline:
commitAndWaitUntilSubmittedWithDeadline:
setLogs:
presentDrawable:options:
profilingResults
userDictionary
deadlineProfile
debugBufferContentsWithLength:
sampledRenderCommandEncoderWithDescriptor:programInfoBuffer:capacity:
sampledComputeCommandEncoderWithProgramInfoBuffer:capacity:
sampledComputeCommandEncoderWithDispatchType:programInfoBuffer:capacity:
sampledComputeCommandEncoderWithDescriptor:programInfoBuffer:capacity:
debugCommandEncoder
commitAndHold
commitAndWaitUntilSubmitted
setProtectionOptions:
protectionOptions
encodeWaitForEvent:value:timeout:
setResourceGroups:count:
dropResourceGroups:count:
encodeCacheHintTag:resourceGroups:count:
encodeCacheHintFinalize:resourceGroups:count:
getListIndex
globalTraceObjectID
listIndex
TQ,R,N,GgetListIndex
T@"NSDictionary",R
T@"NSMutableDictionary",R,N
T@"<MTLDeadlineProfile>",R,&
_cmLabel
_cmCommandQueue
_unretained
substringToIndex:
bundleForClass:
setConstantValue:type:withName:
count
objectAtIndex:
floatValue
_getDefaultConvolutionWeights:
setConstantValue:type:atIndex:
setWireMemory:
initWithDevice:allocatorType:
setupWithDescriptor:allocatorBackend:
initWithOptionalCommandQueue:kernelWeights:
bytesRequiredForProcessingImageWith:height:
_calculateFromTexture:toImageScore:andFromRoi:toRoiScore:sourceComponent:binning:firstPixel:
calculateFromRawTexture:toImageScore:andFromRoi:toRoiScore:sourceComponent:isQuadra:firstPixel:
removeAllObjects
newTextureDescriptor
desc
_computeSharpnessScore:outputTexture:sourceComponent:binning:firstPixel:
_sumScoreForRoi:roiId:scoreTexture:output:
numberWithFloat:
replaceObjectAtIndex:withObject:
computePipelineFor:sourceComponent:
setComputePipelineState:
setTexture:atIndex:
setBytes:length:atIndex:
setImageblockWidth:height:
dispatchThreadgroups:threadsPerThreadgroup:
setBuffer:offset:atIndex:
contents
externalMemoryDescriptorForConfiguration:
initWithOptionalCommandQueue:externalMemoryResource:kernelWeights:
calculateFromTexture:toImageScore:andFromRoi:toRoiScore:sourceComponent:
calculateFromPixelBuffer:toImageScore:andFromRoi:toRoiScore:sourceComponent:
_metal
_kernelWeight
_sharpnessScoreCalculatorShaderFloat
_sharpnessScoreCalculatorShaderUInt
_sumScoreStep1Shader
_sumScoreStep2Shader
_counter
T@"FigMetalAllocator",&,N
initWithFigMetalAllocator:
_refCount
_size
setPurgeableState:
isAliasable
cpuCacheMode
hazardTrackingMode
heap
heapOffset
allocatedSize
T@"<MTLHeap>",R
newTextureViewWithPixelFormat:
newTextureViewWithPixelFormat:textureType:levels:slices:
newTextureViewWithPixelFormat:textureType:levels:slices:swizzle:
rootResource
parentTexture
parentRelativeLevel
parentRelativeSlice
sampleCount
usage
isFramebufferOnly
firstMipmapInTail
tailSizeInBytes
isSparse
allowGPUOptimizedContents
compressionType
gpuResourceID
swizzle
T@"<MTLResource>",R
T@"<MTLTexture>",R
T@"<MTLBuffer>",R
T^{__IOSurface=},R
framebufferOnly
TB,R,GisFramebufferOnly
T{MTLResourceID=Q},R
T{?=CCCC},R,N
makeTextureAliasable:
makeBufferAliasable:
computeLinearTextureStride:format:
initWithDevice:
texture2DFromBuffer:width:height:format:offset:usage:
T@"<MTLDevice>",R,N,V_device
wireMemory
allowFallback
setAllowFallback:
compressionLevel
setCompressionLevel:
externalBuffer
setExternalBuffer:
_wireMemory
_allowFallback
_compressionLevel
_label
_resourceOptions
_externalBuffer
T@"<MTLBuffer>",&,N,V_externalBuffer
T@"NSString",&,N,V_label
TQ,N,V_resourceOptions
TB,N,V_wireMemory
TB,N,V_allowFallback
Ti,N,V_compressionLevel
setSampleCount:
compressionMode
setCompressionMode:
compressionFootprint
setCompressionFootprint:
isLinear
setIsLinear:
initFromDescriptor:
setDesc:
_isLinear
_desc
TB,N,V_isLinear
T@"MTLTextureDescriptor",&,N,V_desc
setLength:
options
setOptions:
_length
_options
TQ,N,V_length
TQ,N,V_options
initWithMetalUtils:
setupWithDescriptor:
getSizeAndAlignForDescriptor:
getSizeAndAlignForBufferDescriptor:
newBufferWithDescriptor:offset:
newTextureWithDescriptor:offset:
textureOffset:
bufferOffset:
purgeResources
hasCreatedTexture:
hasCreatedBuffer:
alignment
utils
TQ,R,N
T@"FigMetalUtils",R,N
_alignment
_utils
TQ,R,N,V_alignment
TQ,R,N,V_memSize
T@"FigMetalUtils",R,N,V_utils
numberWithUnsignedLong:
dictionaryWithObjects:forKeys:count:
_buffer
setType:
newBufferWithLength:options:offset:
_heap
largestOccupiedOffset
maxContiguousFreeSize
reset
dealloc
copy
hasCreatedResource:
removeObject:
newBufferWithDescriptor:sizeAlign:
newBufferDescriptor
newTextureWithDescriptor:sizeAlign:
usedSize
usedSizeAll
setForceDisableCompression:
forceDisableCompression
newTextureDescriptor:
newBufferDescriptor:
addExternalMetalBuffer:atSubAllocatorID:
newTextureWithDescriptor:subAllocatorID:
newBufferWithDescriptor:subAllocatorID:
usedSize:
largestOccupiedOffset:
memSize:
reset:
purgeResources:
backendAllocator
_backendAllocator
_texDesc
_bufDesc
_isExternalMemory
_currentResources
subAllocator
_forceDisableCompression
_allowFallBack
TQ,R,N,VusedSize
Ti,R,N,V_allocatorType
TQ,R,N,V_resourceOptions
Ti,R,N,V_compressionLevel
T@"FigMetalAllocatorBackend",R,N,V_backendAllocator
compressionFeedback
_storage
_rangeAllocator
_largestOccupiedOffset
TQ,R,N,V_largestOccupiedOffset
initWithDescriptor:
offset
_offset
_width
_height
_depth
_usage
_textureType
_pixelFormat
_sampleCount
_arrayLength
_mipmapLevelCount
T@"NSString",C,V_label
TQ,N,V_offset
TQ,N,V_width
TQ,N,V_height
TQ,N,V_pixelFormat
TQ,N,V_usage
TQ,R,V_textureType
TQ,R,V_depth
TQ,R,V_mipmapLevelCount
TQ,R,V_sampleCount
TQ,R,V_arrayLength
@24@0:8@16
@32@0:8@16@24
B24@0:8@16
i24@0:8@16
B28@0:8@16I24
@16@0:8
v16@0:8
@"MTLTextureDescriptor"
@"<MTLTexture>"
@20@0:8I16
@44@0:8{?=ii}16I24{?=ii}28@36
{?=ii}16@0:8
I16@0:8
{?="width"i"height"i}
@"NSDictionary"
@28@0:8Q16i24
Q16@0:8
v24@0:8Q16
i16@0:8
v20@0:8i16
v24@0:8@16
@"FigMetalAllocatorBackend"
@"NSMutableArray"
@40@0:8*16Q24@32
i20@0:8i16
B32@0:8r*16@24
B36@0:8r*16@24i32
@56@0:8r*16Q24Q32Q40Q48
Q24@0:8Q16
@56@0:8^{__CVBuffer=}16Q24Q32Q40Q48
@64@0:8^{__CVBuffer=}16Q24Q32Q40Q48Q56
@48@0:8^{__CVBuffer=}16Q24Q32Q40
@24@0:8^{__CVBuffer=}16
@64@0:8^{__CVBuffer=}16Q24Q32{CGSize=dd}40Q56
@64@0:8^{__IOSurface=}16Q24Q32Q40Q48Q56
@48@0:8@16Q24Q32i40i44
@56@0:8@16Q24i32i36Q40Q48
B16@0:8
v20@0:8B16
@"<MTLDevice>"
@"<MTLCommandQueue>"
@"<MTLLibrary>"
@"<MTLCommandBuffer>"
@"<MTLPipelineLibrarySPI>"
@"FigMetalAllocator"
@"<MTLBuffer>"
@"MTLVertexDescriptor"
@20@0:8i16
@"FigMetalExecutionStatus"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8Q16
{?=QQ}24@0:8@16
{?=QQ}32@0:8Q16Q24
@32@0:8Q16Q24
@40@0:8r^v16Q24Q32
@48@0:8^v16Q24Q32@?40
@40@0:8@16^{__IOSurface=}24Q32
@32@0:8@16^@24
@40@0:8@16@24^@32
v40@0:8@16@24@?32
v32@0:8@16@?24
@48@0:8@16Q24^@32^@40
v40@0:8@16Q24@?32
B24@0:8Q16
B24@0:8q16
v32@0:8^{?=ff}16Q24
@40@0:8@16Q24Q32
@40@0:8@16q24^@32
{?=QQQ}40@0:8Q16Q24Q32
Q24@0:8q16
{?=QQQ}48@0:8Q16Q24Q32q40
v32@0:8^Q16^Q24
{?=QQQ}24@0:8@16
{?=QQ}24@0:8Q16
{?=QQQ}16@0:8
v72@0:8r^{?={?=QQQ}{?=QQQ}}16^{?={?=QQQ}{?=QQQ}}24{?=QQQ}32Q56Q64
v64@0:8r^{?={?=QQQ}{?=QQQ}}16^{?={?=QQQ}{?=QQQ}}24{?=QQQ}32Q56
@"<MTLCommandQueue>"16@0:8
@"<MTLCommandQueue>"24@0:8Q16
{?=QQ}24@0:8@"MTLTextureDescriptor"16
@"<MTLHeap>"24@0:8@"MTLHeapDescriptor"16
@"<MTLBuffer>"32@0:8Q16Q24
@"<MTLBuffer>"40@0:8r^v16Q24Q32
@"<MTLBuffer>"48@0:8^v16Q24Q32@?<v@?^vQ>40
@"<MTLDepthStencilState>"24@0:8@"MTLDepthStencilDescriptor"16
@"<MTLTexture>"24@0:8@"MTLTextureDescriptor"16
@"<MTLTexture>"40@0:8@"MTLTextureDescriptor"16^{__IOSurface=}24Q32
@"<MTLSamplerState>"24@0:8@"MTLSamplerDescriptor"16
@"<MTLLibrary>"16@0:8
@"<MTLLibrary>"32@0:8@"NSBundle"16^@24
@"<MTLLibrary>"32@0:8@"NSString"16^@24
@"<MTLLibrary>"32@0:8@"NSURL"16^@24
@"<MTLLibrary>"32@0:8@"NSObject<OS_dispatch_data>"16^@24
@"<MTLLibrary>"40@0:8@"NSString"16@"MTLCompileOptions"24^@32
v40@0:8@"NSString"16@"MTLCompileOptions"24@?<v@?@"<MTLLibrary>"@"NSError">32
@"<MTLLibrary>"32@0:8@"MTLStitchedLibraryDescriptor"16^@24
v32@0:8@"MTLStitchedLibraryDescriptor"16@?<v@?@"<MTLLibrary>"@"NSError">24
@"<MTLRenderPipelineState>"32@0:8@"MTLRenderPipelineDescriptor"16^@24
@"<MTLRenderPipelineState>"48@0:8@"MTLRenderPipelineDescriptor"16Q24^@32^@40
v32@0:8@"MTLRenderPipelineDescriptor"16@?<v@?@"<MTLRenderPipelineState>"@"NSError">24
v40@0:8@"MTLRenderPipelineDescriptor"16Q24@?<v@?@"<MTLRenderPipelineState>"@"MTLRenderPipelineReflection"@"NSError">32
@"<MTLComputePipelineState>"32@0:8@"<MTLFunction>"16^@24
@"<MTLComputePipelineState>"48@0:8@"<MTLFunction>"16Q24^@32^@40
v32@0:8@"<MTLFunction>"16@?<v@?@"<MTLComputePipelineState>"@"NSError">24
v40@0:8@"<MTLFunction>"16Q24@?<v@?@"<MTLComputePipelineState>"@"MTLComputePipelineReflection"@"NSError">32
@"<MTLComputePipelineState>"48@0:8@"MTLComputePipelineDescriptor"16Q24^@32^@40
v40@0:8@"MTLComputePipelineDescriptor"16Q24@?<v@?@"<MTLComputePipelineState>"@"MTLComputePipelineReflection"@"NSError">32
@"<MTLFence>"16@0:8
@"<MTLRenderPipelineState>"48@0:8@"MTLTileRenderPipelineDescriptor"16Q24^@32^@40
v40@0:8@"MTLTileRenderPipelineDescriptor"16Q24@?<v@?@"<MTLRenderPipelineState>"@"MTLRenderPipelineReflection"@"NSError">32
@"<MTLRenderPipelineState>"48@0:8@"MTLMeshRenderPipelineDescriptor"16Q24^@32^@40
v40@0:8@"MTLMeshRenderPipelineDescriptor"16Q24@?<v@?@"<MTLRenderPipelineState>"@"MTLRenderPipelineReflection"@"NSError">32
@"<MTLArgumentEncoder>"24@0:8@"NSArray"16
@"<MTLRasterizationRateMap>"24@0:8@"MTLRasterizationRateMapDescriptor"16
@"<MTLIndirectCommandBuffer>"40@0:8@"MTLIndirectCommandBufferDescriptor"16Q24Q32
@"<MTLEvent>"16@0:8
@"<MTLSharedEvent>"16@0:8
@"<MTLSharedEvent>"24@0:8@"MTLSharedEventHandle"16
@"<MTLIOFileHandle>"32@0:8@"NSURL"16^@24
@"<MTLIOCommandQueue>"32@0:8@"MTLIOCommandQueueDescriptor"16^@24
@"<MTLIOFileHandle>"40@0:8@"NSURL"16q24^@32
@"<MTLCounterSampleBuffer>"32@0:8@"MTLCounterSampleBufferDescriptor"16^@24
@"<MTLArgumentEncoder>"24@0:8@"<MTLBufferBinding>"16
@"<MTLDynamicLibrary>"32@0:8@"<MTLLibrary>"16^@24
@"<MTLDynamicLibrary>"32@0:8@"NSURL"16^@24
@"<MTLBinaryArchive>"32@0:8@"MTLBinaryArchiveDescriptor"16^@24
{?=QQQ}24@0:8@"MTLAccelerationStructureDescriptor"16
@"<MTLAccelerationStructure>"24@0:8Q16
@"<MTLAccelerationStructure>"24@0:8@"MTLAccelerationStructureDescriptor"16
{?=QQ}24@0:8@"MTLAccelerationStructureDescriptor"16
@"NSArray"16@0:8
@24@0:8^{__IOSurface=}16
{?=II}16@0:8
B44@0:8^@16Q24^Q32i40
B24@0:8{?=II}16
@32@0:8@16Q24
@32@0:8^v16@24
@40@0:8^v16@24@32
@32@0:8Q16@24
v40@0:8@16r^v24@32
v48@0:8@16r^v24@32@40
B32@0:8@16^@24
@40@0:8@16Q24^@32
@48@0:8@16@24Q32^@40
B36@0:8@16B24^@28
@40@0:8Q16@24^@32
r^{MTLTargetDeviceArch=QI*}16@0:8
r^{?=IIIIIIIIIIIIIIIIIIIIIIIIIIffIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIQ}16@0:8
f16@0:8
{IndirectArgumentBufferCapabilities=b1b1b1b29}16@0:8
q16@0:8
v24@0:8^{MPSFunctionTable=}16
v40@0:8Q16^Q24Q32
B32@0:8{_NSRange=QQ}16
@40@0:8Q16Q24Q32
@48@0:8r^v16Q24Q32Q40
@56@0:8^v16Q24Q32Q40@?48
B40@0:8^{?=III}16Q24Q32
@32@0:8^v16Q24
@40@0:8^v16@24Q32
^v16@0:8
^{os_unfair_lock_s=I}16@0:8
@40@0:8@16r^{?=BQ^{?}}24^@32
@28@0:8@16I24
@48@0:8^v16Q24@32@?40
@28@0:8@16B24
{?=QQQ}48@0:8q16Q24Q32Q40
v48@0:8@16@24@32^@40
v40@0:8@16@24^@32
@32@0:8r^@16Q24
v32@0:8@16@24
@"MTLArchitecture"24@0:8@"NSArray"16
v24@0:8@"<MTLDeviceSPI>"16
@"<MTLDevice>"16@0:8
@"<MTLBuffer>"24@0:8^{__IOSurface=}16
B24@0:8@"NSString"16
@"<MTLCommandQueue>"24@0:8@"MTLCommandQueueDescriptor"16
@"_MTLIndirectArgumentBufferLayout"24@0:8@"MTLStructType"16
@"<MTLArgumentEncoder>"24@0:8@"_MTLIndirectArgumentBufferLayout"16
@"<MTLBuffer>"40@0:8@"MTLIndirectCommandBufferDescriptor"16Q24Q32
@"<MTLIndirectRenderCommandEncoder>"24@0:8@"<MTLBuffer>"16
@"<MTLIndirectComputeCommandEncoder>"24@0:8@"<MTLBuffer>"16
@"<MTLSharedEvent>"20@0:8I16
@"<MTLAccelerationStructure>"32@0:8Q16Q24
@"<MTLAccelerationStructure>"32@0:8@"<MTLBuffer>"16Q24
@"<MTLAccelerationStructure>"40@0:8@"<MTLBuffer>"16Q24Q32
@"<MTLAccelerationStructure>"32@0:8^v16@"MTLAccelerationStructureDescriptor"24
@"<MTLAccelerationStructure>"40@0:8^v16@"NSArray"24@"MTLAccelerationStructureDescriptor"32
@"<MTLAccelerationStructure>"32@0:8Q16@"MTLAccelerationStructureAllocationDescriptor"24
v40@0:8@"<MTLAccelerationStructure>"16r^v24@"MTLAccelerationStructureDescriptor"32
v48@0:8@"<MTLAccelerationStructure>"16r^v24@"NSArray"32@"MTLAccelerationStructureDescriptor"40
@"<MTLDynamicLibrary>"40@0:8@"<MTLLibrary>"16@"MTLComputePipelineDescriptor"24^@32
B32@0:8@"MTLDynamicLibraryDescriptorSPI"16^@24
@"<MTLDynamicLibrary>"32@0:8@"MTLDynamicLibraryDescriptorSPI"16^@24
@"<MTLDynamicLibrary>"40@0:8@"NSURL"16Q24^@32
@"NSArray"32@0:8@"MTLComputePipelineDescriptor"16^@24
@"NSArray"40@0:8@"MTLComputePipelineDescriptor"16Q24^@32
@"NSArray"40@0:8@"MTLFunction"16@"NSArray"24^@32
@"NSArray"48@0:8@"MTLFunction"16@"NSArray"24Q32^@40
B36@0:8@"<MTLLibrary>"16B24^@28
B32@0:8@"NSURL"16^@24
@"<MTLBinaryArchive>"40@0:8Q16@"NSURL"24^@32
@"<MTLVisibleFunctionTable>"24@0:8@"MTLVisibleFunctionTableDescriptor"16
@"<MTLIntersectionFunctionTable>"24@0:8@"MTLIntersectionFunctionTableDescriptor"16
@"<MTLRenderPipelineState>"32@0:8@"MTLMeshRenderPipelineDescriptor"16^@24
v32@0:8@"MTLMeshRenderPipelineDescriptor"16@?<v@?@"<MTLRenderPipelineState>"@"NSError">24
@"<MTLDeadlineProfile>"24@0:8Q16
@"MTLTargetDeviceArchitecture"16@0:8
@"MTLArchitecture"16@0:8
@"MTLGPUBVHBuilder"16@0:8
@"NSDictionary"16@0:8
v24@0:8@"NSDictionary"16
@"NSObject<OS_dispatch_data>"16@0:8
v24@0:8@"NSObject<OS_dispatch_data>"16
@"<MTLBuffer>"40@0:8Q16Q24Q32
@"<MTLBuffer>"48@0:8r^v16Q24Q32Q40
@"<MTLBuffer>"56@0:8^v16Q24Q32Q40@?<v@?^vQ>48
@"<MTLBuffer>"24@0:8@"MTLBufferDescriptor"16
@"<MTLLateEvalEvent>"16@0:8
@"<MTLComputePipelineState>"32@0:8@"MTLComputePipelineDescriptor"16^@24
v32@0:8@"MTLComputePipelineDescriptor"16@?<v@?@"<MTLComputePipelineState>"@"NSError">24
@"<MTLRenderPipelineState>"32@0:8@"MTLTileRenderPipelineDescriptor"16^@24
v32@0:8@"MTLTileRenderPipelineDescriptor"16@?<v@?@"<MTLRenderPipelineState>"@"NSError">24
@"<MTLFunction>"32@0:8^v16Q24
@"<MTLFunction>"40@0:8^v16@"NSObject<OS_dispatch_data>"24Q32
v24@0:8@"MTLGPUBVHBuilder"16
@"<MTLIndirectArgumentEncoder>"24@0:8@"NSArray"16
@"<MTLComputePipelineState>"40@0:8@"NSArray"16r^{?=BQ^{?}}24^@32
@"<MTLLibrary>"40@0:8@"NSString"16@"NSArray"24^@32
@"<MTLLibrary>"40@0:8@"NSArray"16@"NSArray"24^@32
@"<MTLLibrary>"32@0:8@"MTLStitchedLibraryDescriptorSPI"16^@24
@"NSString"24@0:8@"NSArray"16
@"<MTLLibrary>"40@0:8@"NSArray"16r^{?=BQ^{?}}24^@32
@"<MTLPipelineLibrarySPI>"32@0:8@"NSString"16^@24
v24@0:8@"NSString"16
@"NSData"16@0:8
@"NSObject<OS_dispatch_data>"24@0:8@"MTLRenderPipelineDescriptor"16
@"NSObject<OS_dispatch_data>"24@0:8@"MTLComputePipelineDescriptor"16
@"MTLRenderPipelineDescriptor"32@0:8@"NSObject<OS_dispatch_data>"16@"<MTLDeserializationContext>"24
@"MTLComputePipelineDescriptor"32@0:8@"NSObject<OS_dispatch_data>"16@"<MTLDeserializationContext>"24
@"NSObject<OS_dispatch_data>"24@0:8@"MTLStructType"16
@"NSObject<OS_dispatch_data>"28@0:8@"MTLStructType"16I24
@"MTLStructType"24@0:8@"NSObject<OS_dispatch_data>"16
@"<MTLTexture>"48@0:8^v16Q24@"MTLTextureDescriptor"32@?<v@?^vQ>40
@"<MTLTextureLayout>"28@0:8@"MTLTextureDescriptor"16B24
@"<MTLIndirectArgumentEncoder>"24@0:8@"_MTLIndirectArgumentBufferLayout"16
v48@0:8@"<MTLFunction>"16@"MTLFunctionDescriptor"24@"<MTLBinaryArchive>"32^@40
v40@0:8@"<MTLFunction>"16@"MTLFunctionDescriptor"24^@32
v40@0:8@"<MTLFunction>"16@"MTLFunctionDescriptor"24@?<v@?@"NSError">32
@"<MTLResourceGroupSPI>"32@0:8r^@16Q24
v32@0:8@"NSObject<OS_dispatch_data>"16@"NSMutableDictionary"24
@"<MTLDeviceSPI>"
@"InterceptConfig"
@"<MTLCommandBuffer>"16@0:8
@"<MTLCommandBuffer>"24@0:8@"MTLCommandBufferDescriptor"16
B28@0:8Q16S24
i32@0:8@16Q24
v24@0:8@?16
v24@0:8@"NSObject<OS_dispatch_queue>"16
@"NSObject<OS_dispatch_queue>"16@0:8
@"MTLCommandQueueSPIStats"16@0:8
i24@0:8@"NSArray"16
i32@0:8@"NSArray"16Q24
@"NSArray"24@0:8@"NSArray"16
v24@0:8@?<v@?@"<MTLCommandBuffer>"@"NSData"Q>16
@"CMMTLDevice"
v32@0:8@16d24
v32@0:8@16Q24
d16@0:8
v24@0:8@?<v@?@"<MTLCommandBuffer>">16
v24@0:8@"<MTLDrawable>"16
v32@0:8@"<MTLDrawable>"16d24
@"<MTLBlitCommandEncoder>"16@0:8
@"<MTLRenderCommandEncoder>"24@0:8@"MTLRenderPassDescriptor"16
@"<MTLComputeCommandEncoder>"24@0:8@"MTLComputePassDescriptor"16
@"<MTLBlitCommandEncoder>"24@0:8@"MTLBlitPassDescriptor"16
@"<MTLComputeCommandEncoder>"16@0:8
@"<MTLComputeCommandEncoder>"24@0:8Q16
v32@0:8@"<MTLEvent>"16Q24
@"<MTLParallelRenderCommandEncoder>"24@0:8@"MTLRenderPassDescriptor"16
@"<MTLResourceStateCommandEncoder>"16@0:8
@"<MTLResourceStateCommandEncoder>"24@0:8@"MTLResourceStatePassDescriptor"16
@"<MTLAccelerationStructureCommandEncoder>"16@0:8
@"<MTLAccelerationStructureCommandEncoder>"24@0:8@"MTLAccelerationStructurePassDescriptor"16
@"<MTLLogContainer>"16@0:8
@"NSError"16@0:8
v48@0:8@16Q24Q32Q40
v56@0:8@16Q24r^Q32r^Q40Q48
^v24@0:8^Q16
@40@0:8@16^(?={?=b8b24IQQ}{?=b8b24IQQ})24Q32
@32@0:8^(?={?=b8b24IQQ}{?=b8b24IQQ})16Q24
@40@0:8Q16^(?={?=b8b24IQQ}{?=b8b24IQQ})24Q32
v36@0:8@16Q24I32
v32@0:8r^@16Q24
v40@0:8Q16r^@24Q32
v24@0:8@"<MTLResourceGroupSPI>"16
v48@0:8@"<MTLResourceGroupSPI>"16Q24Q32Q40
v56@0:8@"<MTLResourceGroupSPI>"16Q24r^Q32r^Q40Q48
v24@0:8@"<MTLResource>"16
v24@0:8@"<MTLHeap>"16
v24@0:8@"NSArray"16
v32@0:8@"<MTLDrawable>"16@"NSDictionary"24
@"NSMutableDictionary"16@0:8
@"<MTLDeadlineProfile>"16@0:8
@"<MTLRenderCommandEncoder>"40@0:8@"MTLRenderPassDescriptor"16^(?={?=b8b24IQQ}{?=b8b24IQQ})24Q32
@"<MTLComputeCommandEncoder>"32@0:8^(?={?=b8b24IQQ}{?=b8b24IQQ})16Q24
@"<MTLComputeCommandEncoder>"40@0:8Q16^(?={?=b8b24IQQ}{?=b8b24IQQ})24Q32
@"<MTLComputeCommandEncoder>"40@0:8@"MTLComputePassDescriptor"16^(?={?=b8b24IQQ}{?=b8b24IQQ})24Q32
@"<MTLDebugCommandEncoder>"16@0:8
v36@0:8@"<MTLEvent>"16Q24I32
@"NSMutableString"
@"CMMTLCommandQueue"
Q24@0:8i16i20
@40@0:8@16@24@32
i52@0:8@16^f24@32@40i48
i60@0:8@16^f24@32@40i48B52i56
i52@0:8^{__CVBuffer=}16^f24@32@40i48
i60@0:8@16^f24@32@40i48i52i56
i44@0:8@16@24i32i36i40
i68@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16i48@52^f60
v24@0:8^f16
@"FigMetalContext"
[25f]
[4@"<MTLComputePipelineState>"]
@"<MTLComputePipelineState>"
@"<MTLHeap>"16@0:8
v104@0:8^v16Q24Q32{?={?=QQQ}{?=QQQ}}40Q88Q96
v104@0:8{?={?=QQQ}{?=QQQ}}16Q64Q72r^v80Q88Q96
v88@0:8^v16Q24{?={?=QQQ}{?=QQQ}}32Q80
v88@0:8{?={?=QQQ}{?=QQQ}}16Q64r^v72Q80
@64@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48
@68@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48{?=CCCC}64
^{__IOSurface=}16@0:8
{MTLResourceID=Q}16@0:8
{?=CCCC}16@0:8
@"<MTLTexture>"24@0:8Q16
@"<MTLTexture>"64@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48
@"<MTLTexture>"68@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48{?=CCCC}64
@"<MTLResource>"16@0:8
@"<MTLTexture>"16@0:8
@"<MTLBuffer>"16@0:8
Q32@0:8Q16Q24
@64@0:8@16Q24Q32Q40Q48Q56
@"NSString"
Q24@0:8@16
@24@0:8@"FigMetalUtils"16
i24@0:8@"FigMetalAllocatorBackendDescriptor"16
{?=QQ}24@0:8@"FigMetalTextureDescriptor"16
{?=QQ}24@0:8@"FigMetalBufferDescriptor"16
@"<MTLBuffer>"32@0:8@"FigMetalBufferDescriptor"16Q24
@"<MTLTexture>"32@0:8@"FigMetalTextureDescriptor"16Q24
Q24@0:8@"<MTLTexture>"16
Q24@0:8@"<MTLBuffer>"16
B24@0:8@"<MTLTexture>"16
B24@0:8@"<MTLBuffer>"16
@"FigMetalUtils"16@0:8
@"FigMetalUtils"
@"<MTLHeap>"
@28@0:8@16i24
i32@0:8@16@24
v24@0:8^@16
i28@0:8@16I24
Q20@0:8I16
v20@0:8I16
@"FigMetalTextureDescriptor"
@"FigMetalBufferDescriptor"
@"NSMutableSet"
[5@"FigMetalAllocator"]
@32@0:8@16^{?=QQ}24
@"<FigMetalAllocatorImpl>"
{MTLRangeAllocator="elements"^{MTLRangeAllocatorElement}"numElements"I"capacity"Q"capacityIncrement"Q"defaultAlignmentMask"Q}
E\:>~
y=&|%=c
N>fW
Can't open BMTL with version = %u
BMTL file is not compatible with the existing texture.
Texture OSType doesn't match the file OSType.
B64@?0*8Q16Q24Q32Q40Q48Q56
Can't save planar textures with BMTL version 1, please use at least version 2.
BMTL version 1 only supports saving non-planar 2D textures.
BMTL version %u not supported (please use anything between %d and %d
Something went wrong at row %ld
No kCVPixelFormatBitsPerBlock entry in the description of format %08x plane %ld
GetPixelSizeInBytes
CMIBareMetalTexture.m
( pixelSizeInBytes % 8 ) == 0
GetPixelBlockSizeInBytes
PixelBufferUtils.m
(pixelSizeInBytes % 8) == 0
B56@?0*8Q16Q24Q32Q40Q48
P5 %d %d 255
P5 %lu %lu 255
VISProcessorV%d
VISConfigurationV%d
%@/VideoStabilizationV%d.bundle
/System/Library/VideoProcessors/
<%@ %p>: maxInputDimensions:%dx%d inputPixelFormat:%@ maxOutputDimensions:%dx%d processorSpecificOptions:%@
%c%c%c%c
v8@?0
waitForIdle
waitForSchedule
prewarmInternal
mtlintercept.waitUntilCompleted
com.apple.coremedia
mtlintercept.waitUntilScheduled
(Error) %@
v16@?0@"<MTLCommandBuffer>"8
%@_%@
SIMDTextureReaderFunctionConstants::simdShuffleFillSupported
CMISharpnessScore::sharpnessScoreCalculatorFloat
CMISharpnessScore::sharpnessScoreCalculatorUInt
CMISharpnessScore::sumScoreStep1
CMISharpnessScore::sumScoreStep2
FigMetalAllocator_CMISharpnessScore
inputTexture%d
imageScore%d
<%@ %p>: %@: %lu (%lu MB) wireMemory:%d
FigMetalAllocatorTypeNoAliasing
FigMetalAllocatorTypeBuffer
FigMetalAllocatorTypeHeap
subAllocator ID: %i
mtlallocator.overrideStorageMode
CMIBareMetalTexture
VISProvider
CMIExternalMemoryConfiguration
CMIExternalMemoryDescriptor
CMIExternalMemoryResource
FigMetalExecutionStatus
FigMetalContext
InterceptConfig
CMMTLDevice
MTLDeviceSPI
MTLDevice
NSObject
CMMTLCommandQueue
MTLCommandQueueSPI
MTLCommandQueue
CMMTLCommandBuffer
MTLCommandBufferSPI
MTLCommandBuffer
CMISharpnessScore
FigMetalAllocatorMetadata
MTLTexture
MTLResource
FigMetalUtils
FigMetalAllocatorDescriptor
FigMetalAllocatorBackendDescriptor
FigMetalTextureDescriptor
FigMetalBufferDescriptor
FigMetalNoAliasingAllocator
FigMetalAllocatorImpl
FigMetalBufferAllocator
FigMetalHeapAllocator
FigMetalAllocator
FigMetalAllocatorBackend
FigMetalTextureStub
write:maxLength:
attributes
bundleForClass:
bundleWithPath:
bytes
classNamed:
close
colorAttachments
compressionFeedback
compressionFootprint
compressionMode
contents
copy
copyFromTexture:toTexture:
count
countByEnumeratingWithState:objects:count:
dataWithContentsOfFile:
dataWithContentsOfFile:options:error:
dataWithLength:
dictionary
dictionaryWithObjects:forKeys:count:
dispatchThreadgroups:threadsPerThreadgroup:
endEncoding
floatValue
getBytes:maxLength:usedLength:encoding:options:range:remainingRange:
initToFileAtPath:append:
initWithDictionary:
intValue
invokeWithTarget:
layouts
loadAndReturnError:
localizedDescription
mutableBytes
newBufferWithLength:options:offset:
newFunctionWithName:
newFunctionWithName:constantValues:error:
newLinearTextureWithDescriptor:offset:bytesPerRow:bytesPerImage:
newTextureWithDescriptor:offset:bytesPerRow:
numberWithFloat:
numberWithInt:
numberWithInteger:
numberWithUnsignedInt:
numberWithUnsignedLong:
objectAtIndex:
objectAtIndexedSubscript:
open
pathExtension
removeAllObjects
removeObject:
replaceObjectAtIndex:withObject:
selector
setArrayLength:
setBuffer:offset:atIndex:
setBufferIndex:
setBytes:length:atIndex:
setCompressionFootprint:
setCompressionMode:
setComputePipelineState:
setConstantValue:type:atIndex:
setConstantValue:type:withName:
setDepth:
setFormat:
setImageblockWidth:height:
setMipmapLevelCount:
setObject:forKeyedSubscript:
setSampleCount:
setSize:
setStepFunction:
setStride:
setTexture:
setTexture:atIndex:
setTextureType:
setType:
streamStatus
stringWithCString:encoding:
stringWithFormat:
stringWithUTF8String:
substringToIndex:
texture2DDescriptorWithPixelFormat:width:height:mipmapped:
addObject:
initWithTexture:
initWithFile:device:
initWithData:device:
updateTextureWithFile:
updateTextureWithData:
updateTextureDescriptor:
updateTextureContent:
saveToFile:
saveToFile:withBMTLversion:
texture
.cxx_destruct
_textureDescriptor
_osType
_stride
_dataOffset
_texture
T@"<MTLTexture>",R,N,V_texture
VISProcessorForVersion:
VISConfigurationForVersion:
_loadVISBundleForVersion:
init
initWithMaxInputDimensions:inputPixelFormat:maxOutputDimensions:processorSpecificOptions:
description
maxInputDimensions
inputPixelFormat
maxOutputDimensions
processorSpecificOptions
_inputPixelFormat
_maxInputDimensions
_maxOutputDimensions
_processorSpecificOptions
T{?=ii},R,N,V_maxInputDimensions
TI,R,N,V_inputPixelFormat
T{?=ii},R,N,V_maxOutputDimensions
T@"NSDictionary",R,N,V_processorSpecificOptions
initWithMemSize:allocatorType:
memSize
setMemSize:
allocatorType
setAllocatorType:
_allocatorType
_memSize
TQ,N,V_memSize
Ti,N,V_allocatorType
allocatorBackend
setAllocatorBackend:
_allocatorBackend
T@"FigMetalAllocatorBackend",&,N,V_allocatorBackend
failedCommandBuffers
setFailedCommandBuffers:
status
setStatus:
completedCommandBuffersCount
setCompletedCommandBuffersCount:
_completedCommandBuffersCount
_failedCommandBuffers
_status
T@"NSMutableArray",&,N,V_failedCommandBuffers
TQ,N,V_status
Ti,N,V_completedCommandBuffersCount
createMetalDevice
initWithbundle:andOptionalCommandQueue:
initWithLibraryData:ofSize:andOptionalCommandQueue:
initWithoutLibraryUsingOptionalCommandQueue:
commonInitWithOptionalCommandQueue:
executionStatus
setExecutionStatus:
initRangeVertex
commandQueue
commandBuffer
commit
forceCommit
commitAndWait
waitForIdle
waitForSchedule
computePipelineStateFor:constants:
insertDebugCaptureBoundary
setQueuePriority:
WriteMetalTextureToFile:texture:
WriteMetalTextureToFile:texture:mipmapLevel:
ReadMetalTextureFromFile:texture:
ReadMetalTextureFromFile:texture:mipmapLevel:
CreateMetalTextureFromFile:pixelFormat:usage:width:height:
getPixelSizeInBytes:
bindPixelBufferToMTL2DTexture:pixelFormat:usage:plane:alignmentFactor:
bindPixelBufferToMTL2DTexture:pixelFormat:usage:plane:widthAlignmentFactor:heightAlignmentFactor:
bindPixelBufferToMTL2DTexture:pixelFormat:usage:plane:
bindPixelBufferToMTLBuffer:
bindPixelBufferToMTL2DTexture:pixelFormat:usage:textureSize:plane:
bindIOSurfaceToMTL2DTexture:pixelFormat:usage:width:height:plane:
rebindTex:format:usage:plane:xFactor:
prewarmInternalMetalShadersForFormatsList:
create2DTextureFromBuffer:offset:width:height:format:usage:
device
setDevice:
setCommandQueue:
library
setLibrary:
setCommandBuffer:
pipelineLibrary
setPipelineLibrary:
allocator
setAllocator:
allowCommandBufferCommitsOnlyByForceCommit
setAllowCommandBufferCommitsOnlyByForceCommit:
fullRangeVertexBuf
setFullRangeVertexBuf:
fullRangeVertexDesc
setFullRangeVertexDesc:
_allowCommandBufferCommitsOnlyByForceCommit
_device
_commandQueue
_library
_commandBuffer
_pipelineLibrary
_allocator
_fullRangeVertexBuf
_fullRangeVertexDesc
T@"<MTLDevice>",&,N,V_device
T@"<MTLCommandQueue>",&,N,V_commandQueue
T@"<MTLLibrary>",&,N,V_library
T@"<MTLCommandBuffer>",&,N,V_commandBuffer
T@"<MTLPipelineLibrarySPI>",&,N,V_pipelineLibrary
T@"FigMetalAllocator",&,N,V_allocator
T@"FigMetalExecutionStatus",&,N
TB,N,V_allowCommandBufferCommitsOnlyByForceCommit
T@"<MTLBuffer>",&,N,V_fullRangeVertexBuf
T@"MTLVertexDescriptor",&,N,V_fullRangeVertexDesc
loadExperimentsConfig
initWithLevel:
interceptLevel
setInterceptLevel:
waitUntilCompleted
setWaitUntilCompleted:
waitUntilScheduled
setWaitUntilScheduled:
_waitUntilCompleted
_waitUntilScheduled
_interceptLevel
_executionStatus
Ti,N,V_interceptLevel
T@"FigMetalExecutionStatus",&,N,V_executionStatus
TB,N,V_waitUntilCompleted
TB,N,V_waitUntilScheduled
respondsToSelector:
forwardInvocation:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
newCommandQueue
newCommandQueueWithMaxCommandBufferCount:
heapTextureSizeAndAlignWithDescriptor:
heapBufferSizeAndAlignWithLength:options:
newHeapWithDescriptor:
newBufferWithLength:options:
newBufferWithBytes:length:options:
newBufferWithBytesNoCopy:length:options:deallocator:
newDepthStencilStateWithDescriptor:
newTextureWithDescriptor:
newTextureWithDescriptor:iosurface:plane:
newSamplerStateWithDescriptor:
newDefaultLibrary
newDefaultLibraryWithBundle:error:
newLibraryWithFile:error:
newLibraryWithURL:error:
newLibraryWithData:error:
newLibraryWithSource:options:error:
newLibraryWithSource:options:completionHandler:
newLibraryWithStitchedDescriptor:error:
newLibraryWithStitchedDescriptor:completionHandler:
newRenderPipelineStateWithDescriptor:error:
newRenderPipelineStateWithDescriptor:options:reflection:error:
newRenderPipelineStateWithDescriptor:completionHandler:
newRenderPipelineStateWithDescriptor:options:completionHandler:
newComputePipelineStateWithFunction:error:
newComputePipelineStateWithFunction:options:reflection:error:
newComputePipelineStateWithFunction:completionHandler:
newComputePipelineStateWithFunction:options:completionHandler:
newComputePipelineStateWithDescriptor:options:reflection:error:
newComputePipelineStateWithDescriptor:options:completionHandler:
newFence
supportsFeatureSet:
supportsFamily:
supportsTextureSampleCount:
minimumLinearTextureAlignmentForPixelFormat:
minimumTextureBufferAlignmentForPixelFormat:
newRenderPipelineStateWithTileDescriptor:options:reflection:error:
newRenderPipelineStateWithTileDescriptor:options:completionHandler:
newRenderPipelineStateWithMeshDescriptor:options:reflection:error:
newRenderPipelineStateWithMeshDescriptor:options:completionHandler:
getDefaultSamplePositions:count:
newArgumentEncoderWithArguments:
supportsRasterizationRateMapWithLayerCount:
newRasterizationRateMapWithDescriptor:
newIndirectCommandBufferWithDescriptor:maxCommandCount:options:
newEvent
newSharedEvent
newSharedEventWithHandle:
newIOHandleWithURL:error:
newIOCommandQueueWithDescriptor:error:
newIOHandleWithURL:compressionMethod:error:
sparseTileSizeWithTextureType:pixelFormat:sampleCount:
sparseTileSizeInBytesForSparsePageSize:
sparseTileSizeWithTextureType:pixelFormat:sampleCount:sparsePageSize:
newCounterSampleBufferWithDescriptor:error:
sampleTimestamps:gpuTimestamp:
newArgumentEncoderWithBufferBinding:
supportsCounterSampling:
supportsVertexAmplificationCount:
newDynamicLibrary:error:
newDynamicLibraryWithURL:error:
newBinaryArchiveWithDescriptor:error:
accelerationStructureSizesWithDescriptor:
newAccelerationStructureWithSize:
newAccelerationStructureWithDescriptor:
heapAccelerationStructureSizeAndAlignWithSize:
heapAccelerationStructureSizeAndAlignWithDescriptor:
name
registryID
maxThreadsPerThreadgroup
isLowPower
isHeadless
isRemovable
hasUnifiedMemory
recommendedMaxWorkingSetSize
isDepth24Stencil8PixelFormatSupported
readWriteTextureSupport
argumentBuffersSupport
areRasterOrderGroupsSupported
supports32BitFloatFiltering
supports32BitMSAA
supportsQueryTextureLOD
supportsBCTextureCompression
supportsPullModelInterpolation
areBarycentricCoordsSupported
supportsShaderBarycentricCoordinates
currentAllocatedSize
maxThreadgroupMemoryLength
maxArgumentBufferSamplerCount
areProgrammableSamplePositionsSupported
sparseTileSizeInBytes
maxBufferLength
counterSets
supportsDynamicLibraries
supportsRenderDynamicLibraries
supportsRaytracing
supportsFunctionPointers
supportsFunctionPointersFromRender
supportsRaytracingFromRender
supportsPrimitiveMotionBlur
convertSparsePixelRegions:toTileRegions:withTileSize:alignmentMode:numRegions:
convertSparseTileRegions:toPixelRegions:withTileSize:numRegions:
T@"NSString",R
T{?=QQQ},R
lowPower
TB,R,GisLowPower
headless
TB,R,GisHeadless
removable
TB,R,GisRemovable
TB,R
depth24Stencil8PixelFormatSupported
TB,R,GisDepth24Stencil8PixelFormatSupported
rasterOrderGroupsSupported
TB,R,GareRasterOrderGroupsSupported
barycentricCoordsSupported
TB,R,GareBarycentricCoordsSupported
programmableSamplePositionsSupported
TB,R,GareProgrammableSamplePositionsSupported
T@"NSArray",R
reportLeaks
allowLibrariesFromOtherPlatforms
vendorName
familyName
productName
getMostCompatibleArchitecture:
compilerPropagatesThreadPriority:
_setDeviceWrapper:
_deviceWrapper
deviceSupportsFeatureSet:
deviceOrFeatureProfileSupportsFeatureSet:
minLinearTextureAlignmentForPixelFormat:
newBufferWithIOSurface:
unloadShaderCaches
libraryCacheStats
pipelineCacheStats
copyShaderCacheToPath:
supportsSampleCount:
newCommandQueueWithDescriptor:
newIndirectArgumentBufferLayoutWithStructType:
newArgumentEncoderWithLayout:
supportsTextureWriteRoundingMode:
newIndirectCommandBufferWithDescriptor:maxCount:options:
newIndirectRenderCommandEncoderWithBuffer:
newIndirectComputeCommandEncoderWithBuffer:
newSharedEventWithMachPort:
setResourcesPurgeableState:newState:oldState:count:
newAccelerationStructureWithSize:resourceIndex:
isCompatibleWithAccelerationStructure:
newAccelerationStructureWithBuffer:offset:
newAccelerationStructureWithBuffer:offset:resourceIndex:
deserializePrimitiveAccelerationStructureFromBytes:withDescriptor:
deserializeInstanceAccelerationStructureFromBytes:primitiveAccelerationStructures:withDescriptor:
newAccelerationStructureWithSize:withDescriptor:
deserializePrimitiveAccelerationStructure:fromBytes:withDescriptor:
deserializeInstanceAccelerationStructure:fromBytes:primitiveAccelerationStructures:withDescriptor:
newDynamicLibrary:computeDescriptor:error:
validateDynamicLibraryDescriptor:error:
newDynamicLibraryWithDescriptor:error:
newDynamicLibraryWithURL:options:error:
newDynamicLibraryFromURL:error:
loadDynamicLibrariesForComputeDescriptor:error:
loadDynamicLibrariesForComputeDescriptor:options:error:
loadDynamicLibrariesForFunction:insertLibraries:error:
loadDynamicLibrariesForFunction:insertLibraries:options:error:
validateDynamicLibrary:state:error:
validateDynamicLibraryURL:error:
newBinaryLibraryWithOptions:url:error:
newVisibleFunctionTableWithDescriptor:
newIntersectionFunctionTableWithDescriptor:
newRenderPipelineStateWithMeshDescriptor:error:
newRenderPipelineStateWithMeshDescriptor:completionHandler:
newProfileWithExecutionSize:
supportsBufferlessClientStorageTexture
supportsComputeMemoryBarrier
supportsRenderMemoryBarrier
supportsArgumentBuffersTier2
supportsReadWriteTextureArgumentsTier2
supportsStreamingCodecSignaling
supportsProgrammableSamplePositions
supportsLargeFramebufferConfigs
supportsCustomBorderColor
supportsSamplerAddressModeClampToHalfBorder
supports3DBCTextures
supportsRGBA10A2Gamma
supportsBGR10A2
supportsPrimitiveRestartOverride
supportsGlobalVariableRelocation
supportsGlobalVariableRelocationRender
supportsGlobalVariableRelocationCompute
supportsTLS
supports32bpcMSAATextures
supportsVertexAmplification
supportsPlacementHeaps
supportsOpenCLTextureWriteSwizzles
supportsInt64
supportsFixedLinePointFillDepthGradient
supportsLateEvalEvent
supportsNonZeroTextureWriteLOD
supportsSharedTextureHandles
supportsBufferPrefetchStatistics
supportsLimitedYUVFormats
supportsNonPrivateDepthStencilTextures
supportsNonPrivateMSAATextures
supportsSharedStorageHeapResources
supportsSharedStorageTextures
supportsLinearTextureFromSharedBuffer
supportsPipelineLibraries
supportsFragmentOnlyEncoders
supportsBufferWithIOSurface
supportsProgrammableBlending
supportsRenderToLinearTextures
supportsMemorylessRenderTargets
supportsFastMathInfNaNPropagation
supportsInvariantVertexPosition
supportsShaderLODAverage
supportsRelaxedTextureViewRequirements
supportsSeparateDepthStencil
supportsGPUStatistics
supportsCompressedTextureViewSPI
supportsRenderTargetTextureRotation
supportsDynamicControlPointCount
supportsIABHashForTools
supportsBinaryArchives
supportsBinaryLibraries
supportsDeadlineProfile
supportsFillTexture
supportsSetThreadgroupPackingDisabled
supportsASTCTextureCompression
supportsExtendedYUVFormats
supportsPublicXR10Formats
supportsSRGBwrites
supportsDepthClipMode
supportsPacked32TextureBufferWrites
supports3DASTCTextures
supportsExtendedXR10Formats
supportsFragmentBufferWrites
supportsCountingOcclusionQuery
supportsBaseVertexInstanceDrawing
supportsIndirectDrawAndDispatch
supportsTessellation
supportsReadWriteBufferArguments
supportsArrayOfTextures
supportsArrayOfSamplers
supportsCombinedMSAAStoreAndResolveAction
supportsMutableTier1ArgumentBuffers
supportsSamplerCompareFunction
supportsMSAADepthResolve
supportsMSAAStencilResolve
supportsMSAADepthResolveFilter
supportsGFXIndirectCommandBuffers
supportsCMPIndirectCommandBuffers
supportsIndirectStageInRegion
supportsIndirectTextures
supportsNorm16BCubicFiltering
supportsTextureOutOfBoundsReads
supportsTextureSwizzle
supportsAlphaYUVFormats
supportsMemoryOrderAtomics
supportsQuadGroup
supportsRenderTextureWrites
supportsImageBlocks
supportsTileShaders
supportsImageBlockSampleCoverageControl
supportsNativeHardwareFP16
supportsPostDepthCoverage
supportsMipLevelsSmallerThanBlockSize
supportsNonUniformThreadgroupSize
supportsReadWriteTextureArguments
supportsReadWriteTextureCubeArguments
supportsTextureCubeArray
supportsQuadShufflesAndBroadcast
supportsConcurrentComputeDispatch
supportsRenderPassWithoutRenderTarget
supportsRasterOrderGroups
supportsRasterOrderGroupsColorAttachment
supportsLinearTexture2DArray
supportsNonSquareTileShaders
supportsSeparateVisibilityAndShadingRate
supports2DLinearTexArraySPI
supportsLayeredRendering
supportsViewportAndScissorArray
supportsIndirectTessellation
supportsMSAAStencilResolveFilter
supportsStencilFeedback
supportsFP32TessFactors
supportsUnalignedVertexFetch
supportsSIMDGroup
supportsShaderMinLODClamp
supportsSIMDShufflesAndBroadcast
supportsWritableArrayOfTextures
supportsVariableRateRasterization
supportsYCBCRFormats
supportsYCBCRFormatsPQ
supportsYCBCRFormats12
supportsYCBCRFormatsXR
supportsASTCHDRTextureCompression
supportsSparseTextures
supportsSparseHeaps
supportsIndirectWritableTextures
supportsStatefulDynamicLibraries
supportsSharedFunctionTables
supportsRayTracingExtendedVertexFormats
supportsHeapAccelerationStructureAllocation
supportsRayTracingPerPrimitiveData
supportsRayTracingBuffersFromTables
supportsRayTracingAccelerationStructureCPUDeserialization
supportsBlackOrWhiteSamplerBorderColors
supportsMirrorClampToEdgeSamplerMode
supportsSIMDReduction
supportsDepthClipModeClampExtended
supportsTexture2DMultisampleArray
supportsForceSeamsOnCubemaps
supportsFloat16BCubicFiltering
supportsFloat16InfNanFiltering
supportsRTZRounding
supportsAnisoSampleFix
supportsYCBCRPackedFormatsPQ
supportsYCBCRPackedFormats12
supportsYCBCRPackedFormatsXR
supportsBufferBoundsChecking
supportsForkJoin
supportsDevicePartitioning
supportsComputeCompressedTextureWrite
supportsSIMDGroupMatrix
supportsInterchangeTiled
supportsQuadReduction
supportsSIMDShuffleAndFill
supportsBfloat16Format
supportsSparseDepthAttachments
supportsLossyCompression
supportsMeshShaders
supportsFunctionPointersFromMesh
supportsMeshShadersInICB
supportsCommandBufferJump
supportsStackOverflowErrorCode
supportsRayTracingICBs
supportsExplicitVisibilityGroups
bufferRobustnessSupport
deviceCreationFlags
areGPUAssertionsEnabled
setGPUAssertionsEnabled:
commandBufferErrorOptions
setCommandBufferErrorOptions:
isBCTextureCompressionSupported
targetDeviceInfo
targetDeviceArchitecture
architecture
halfFPConfig
singleFPConfig
doubleFPConfig
metalAssertionsEnabled
setMetalAssertionsEnabled:
featureProfile
simulatorHostFeatureProfile
limits
maxFramebufferStorageBits
linearTextureArrayAlignmentBytes
linearTextureArrayAlignmentSlice
maxTileBuffers
maxTileTextures
maxTileSamplers
maxTileInlineDataSize
minTilePixels
maxColorAttachments
maxVertexAttributes
maxVertexBuffers
maxVertexTextures
maxVertexSamplers
maxVertexInlineDataSize
maxInterpolants
maxFragmentBuffers
maxFragmentTextures
maxFragmentSamplers
maxFragmentInlineDataSize
maxComputeBuffers
maxComputeTextures
maxComputeSamplers
maxComputeInlineDataSize
maxComputeLocalMemorySizes
maxTotalComputeThreadsPerThreadgroup
maxComputeThreadgroupMemory
maxLineWidth
maxPointSize
maxVisibilityQueryOffset
minConstantBufferAlignmentBytes
minBufferNoCopyAlignmentBytes
maxTextureWidth1D
maxTextureWidth2D
maxTextureHeight2D
maxTextureWidth3D
maxTextureHeight3D
maxTextureDepth3D
maxTextureDimensionCube
maxTextureLayers
linearTextureAlignmentBytes
iosurfaceTextureAlignmentBytes
iosurfaceReadOnlyTextureAlignmentBytes
deviceLinearTextureAlignmentBytes
deviceLinearReadOnlyTextureAlignmentBytes
maxFunctionConstantIndices
maxComputeThreadgroupMemoryAlignmentBytes
maxInterpolatedComponents
maxTessellationFactor
maxIndirectBuffers
maxIndirectTextures
maxIndirectSamplers
maxIndirectSamplersPerDevice
maxFenceInstances
maxIOCommandsInFlight
maxViewportCount
maxCustomSamplePositions
maxVertexAmplificationFactor
maxVertexAmplificationCount
maxTextureBufferWidth
maxComputeAttributes
maxPredicatedNestingDepth
maxConstantBufferArguments
supportPriorityBand
sharedMemorySize
dedicatedMemorySize
indirectArgumentBufferCapabilities
isFloat32FilteringSupported
isMsaa32bSupported
isRTZRoundingSupported
defaultTextureWriteRoundingMode
isAnisoSampleFixSupported
isFixedLinePointFillDepthGradientSupported
isLargeMRTSupported
maxRasterizationRateLayerCount
isPlacementHeapSupported
GPUBVHBuilder
requiresRaytracingEmulation
pluginData
setPluginData:
registerDevices
supportsPrimitiveType:
indirectArgumentBufferDecodingData
setIndirectArgumentBufferDecodingData:
setupMPSFunctionTable:
resourcePatchingTypeForResourceType:
reserveResourceIndicesForResourceType:indices:indexCount:
reserveGPUAddressRange:
newBufferWithLength:options:gpuAddress:
newBufferWithBytes:length:options:gpuAddress:
newBufferWithBytesNoCopy:length:options:gpuAddress:deallocator:
newBufferWithDescriptor:
newLateEvalEvent
mapShaderSampleBufferWithBuffer:capacity:size:
unmapShaderSampleBuffer
newComputePipelineStateWithDescriptor:error:
newComputePipelineStateWithDescriptor:completionHandler:
newRenderPipelineStateWithTileDescriptor:error:
newRenderPipelineStateWithTileDescriptor:completionHandler:
newFunctionWithGLCoreIR:functionType:
newFunctionWithGLCoreIR:inputsDescription:functionType:
newFunctionWithGLESIR:functionType:
newFunctionWithGLESIR:inputsDescription:functionType:
newFunctionWithGLIR:functionType:
newFunctionWithGLIR:inputsDescription:functionType:
getShaderCacheKeys
getBVHBuilderLock
getRawBVHBuilderPtr
setRawBVHBuilderPtr:
newIndirectArgumentEncoderWithArguments:
newComputePipelineStateWithImageFilterFunctionsSPI:imageFilterFunctionInfo:error:
newLibraryWithDAG:functions:error:
newLibraryWithGraphs:functions:error:
newLibraryWithGraphsSPI:functions:error:
newLibraryWithStitchedDescriptorSPI:error:
newLibraryWithDescriptor:error:
newLibraryWithDescriptor:completionHandler:
newLibraryWithDescriptorSPI:error:
newDagStringWithGraphs:
newLibraryWithImageFilterFunctionsSPI:imageFilterFunctionInfo:error:
newLibraryWithCIFilters:imageFilterFunctionInfo:error:
newLibraryWithCIFiltersForComputePipeline:imageFilterFunctionInfo:error:
newPipelineLibraryWithFilePath:error:
startCollectingPipelineDescriptors
startCollectingPipelineDescriptorsUsingPrefixForNames:
endCollectingPipelineDescriptors
serializeRenderPipelineDescriptor:
serializeComputePipelineDescriptor:
newRenderPipelineDescriptorWithSerializedData:deserializationContext:
newComputePipelineDescriptorWithSerializedData:deserializationContext:
serializeStructType:
serializeStructType:version:
newStructTypeWithSerializedData:
newTextureWithBytesNoCopy:length:descriptor:deallocator:
newTextureLayoutWithDescriptor:isHeapOrBufferBacked:
newIndirectArgumentEncoderWithLayout:
tileSizeWithSparsePageSize:textureType:pixelFormat:sampleCount:
compileVisibleFunction:withDescriptor:destinationBinaryArchive:error:
compileVisibleFunction:withDescriptor:error:
compileVisibleFunction:withDescriptor:completionHandler:
newResourceGroupFromResources:count:
deserializeCompileTimeStats:addToDictionary:
shaderDebugInfoCaching
setShaderDebugInfoCaching:
isQuadDataSharingSupported
sparseTexturesSupport
isRGB10A2GammaSupported
isCustomBorderColorSupported
isClampToHalfBorderSupported
TB,R,N
gpuAssertionsEnabled
TB,GareGPUAssertionsEnabled,SsetGPUAssertionsEnabled:
TQ,N
BCTextureCompressionSupported
TB,R,GisBCTextureCompressionSupported
Tr^{MTLTargetDeviceArch=QI*},R
T@"MTLTargetDeviceArchitecture",R
T@"MTLArchitecture",R
TB,N
Tr^{?=IIIIIIIIIIIIIIIIIIIIIIIIIIffIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIQ},R
Tf,R
T{IndirectArgumentBufferCapabilities=b1b1b1b29},R
quadDataSharingSupported
TB,R,GisQuadDataSharingSupported
float32FilteringSupported
TB,R,GisFloat32FilteringSupported
msaa32bSupported
TB,R,GisMsaa32bSupported
RTZRoundingSupported
TB,R,GisRTZRoundingSupported
Tq,R
AnisoSampleFixSupported
TB,R,GisAnisoSampleFixSupported
FixedLinePointFillDepthGradientSupported
TB,R,GisFixedLinePointFillDepthGradientSupported
largeMRTSupported
TB,R,GisLargeMRTSupported
RGB10A2GammaSupported
TB,R,GisRGB10A2GammaSupported
CustomBorderColorSupported
TB,R,GisCustomBorderColorSupported
ClampToHalfBorderSupported
TB,R,GisClampToHalfBorderSupported
placementHeapSupported
TB,R,GisPlacementHeapSupported
T@"MTLGPUBVHBuilder",R
T@"NSDictionary",C,N
forwardingTargetForSelector:
interceptConfig
setInterceptConfig:
_interceptConfig
T@"InterceptConfig",&,N,V_interceptConfig
commandBufferWithDescriptor:
commandBufferWithUnretainedReferences
label
setLabel:
T@"NSString",C
T@"<MTLDevice>",R
getGPUPriority
setGPUPriority:
setGPUPriority:offset:
getBackgroundGPUPriority
setBackgroundGPUPriority:
setBackgroundGPUPriority:offset:
setSubmissionQueue:
setCompletionQueue:
finish
backgroundTrackingPID
setBackgroundTrackingPID:
maxCommandBufferCount
qosLevel
commitQueue
commitSynchronously
completionQueue
disableCrossQueueHazardTracking
skipRender
setSkipRender:
executionEnabled
setExecutionEnabled:
isOpenGLQueue
isProfilingEnabled
setProfilingEnabled:
getSPIStats
availableCounters
availableCountersAndDict
requestCounters:
requestCounters:withIndex:
getRequestedCounters
subdivideCounterList:
addPerfSampleHandler:
counterInfo
dispatchAvailableCompletionNotifications
isStatEnabled
setStatEnabled:
getStatOptions
setStatOptions:
getStatLocations
setStatLocations:
T@"NSObject<OS_dispatch_queue>",R
profilingEnabled
TB,GisProfilingEnabled
StatEnabled
TB,N,GisStatEnabled
StatOptions
TQ,N,GgetStatOptions
StatLocations
TQ,N,GgetStatLocations
initWithCMMTLDevice:
initWithCMMTLDevice:maxCommandBufferCount:
initWithCMMTLDevice:descriptor:
_cmDevice
enqueue
addScheduledHandler:
presentDrawable:
presentDrawable:atTime:
addCompletedHandler:
blitCommandEncoder
renderCommandEncoderWithDescriptor:
computeCommandEncoderWithDescriptor:
blitCommandEncoderWithDescriptor:
computeCommandEncoder
computeCommandEncoderWithDispatchType:
encodeWaitForEvent:value:
encodeSignalEvent:value:
parallelRenderCommandEncoderWithDescriptor:
resourceStateCommandEncoder
resourceStateCommandEncoderWithDescriptor:
accelerationStructureCommandEncoder
accelerationStructureCommandEncoderWithDescriptor:
pushDebugGroup:
popDebugGroup
retainedReferences
errorOptions
kernelStartTime
kernelEndTime
logs
GPUStartTime
GPUEndTime
error
T@"<MTLCommandQueue>",R
Td,R
T@"<MTLLogContainer>",R
T@"NSError",R
encodeDashboardTagForResourceGroup:
encodeDashboardFinalizeForResourceGroup:dashboard:value:forIndex:
encodeDashboardFinalizeForResourceGroup:dashboard:values:indices:count:
addPurgedResource:
addPurgedHeap:
commitWithDeadline:
commitAndWaitUntilSubmittedWithDeadline:
setLogs:
presentDrawable:options:
profilingResults
userDictionary
deadlineProfile
debugBufferContentsWithLength:
sampledRenderCommandEncoderWithDescriptor:programInfoBuffer:capacity:
sampledComputeCommandEncoderWithProgramInfoBuffer:capacity:
sampledComputeCommandEncoderWithDispatchType:programInfoBuffer:capacity:
sampledComputeCommandEncoderWithDescriptor:programInfoBuffer:capacity:
debugCommandEncoder
commitAndHold
commitAndWaitUntilSubmitted
setProtectionOptions:
protectionOptions
encodeWaitForEvent:value:timeout:
setResourceGroups:count:
dropResourceGroups:count:
encodeCacheHintTag:resourceGroups:count:
encodeCacheHintFinalize:resourceGroups:count:
getListIndex
globalTraceObjectID
listIndex
TQ,R,N,GgetListIndex
T@"NSDictionary",R
T@"NSMutableDictionary",R,N
T@"<MTLDeadlineProfile>",R,&
initWithCMMTLCommandQueue:unretained:
_cmLabel
_cmCommandQueue
_unretained
bytesRequiredForProcessingImageWith:height:
externalMemoryDescriptorForConfiguration:
initWithOptionalCommandQueue:kernelWeights:
initWithOptionalCommandQueue:externalMemoryResource:kernelWeights:
calculateFromTexture:toImageScore:andFromRoi:toRoiScore:sourceComponent:
calculateFromRawTexture:toImageScore:andFromRoi:toRoiScore:sourceComponent:isQuadra:firstPixel:
calculateFromPixelBuffer:toImageScore:andFromRoi:toRoiScore:sourceComponent:
_calculateFromTexture:toImageScore:andFromRoi:toRoiScore:sourceComponent:binning:firstPixel:
_computeSharpnessScore:outputTexture:sourceComponent:binning:firstPixel:
_sumScoreForRoi:roiId:scoreTexture:output:
computePipelineFor:sourceComponent:
_getDefaultConvolutionWeights:
_metal
_kernelWeight
_sharpnessScoreCalculatorShaderFloat
_sharpnessScoreCalculatorShaderUInt
_sumScoreStep1Shader
_sumScoreStep2Shader
_counter
T@"FigMetalAllocator",&,N
initWithFigMetalAllocator:
_refCount
_size
setPurgeableState:
makeAliasable
isAliasable
cpuCacheMode
storageMode
hazardTrackingMode
resourceOptions
heap
heapOffset
allocatedSize
T@"<MTLHeap>",R
getBytes:bytesPerRow:bytesPerImage:fromRegion:mipmapLevel:slice:
replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:
getBytes:bytesPerRow:fromRegion:mipmapLevel:
replaceRegion:mipmapLevel:withBytes:bytesPerRow:
newTextureViewWithPixelFormat:
newTextureViewWithPixelFormat:textureType:levels:slices:
newTextureViewWithPixelFormat:textureType:levels:slices:swizzle:
rootResource
parentTexture
parentRelativeLevel
parentRelativeSlice
buffer
bufferOffset
bufferBytesPerRow
iosurface
iosurfacePlane
textureType
pixelFormat
width
height
depth
mipmapLevelCount
sampleCount
arrayLength
usage
isFramebufferOnly
firstMipmapInTail
tailSizeInBytes
isSparse
allowGPUOptimizedContents
compressionType
gpuResourceID
swizzle
T@"<MTLResource>",R
T@"<MTLTexture>",R
T@"<MTLBuffer>",R
T^{__IOSurface=},R
framebufferOnly
TB,R,GisFramebufferOnly
T{MTLResourceID=Q},R
T{?=CCCC},R,N
initWithDevice:
computeLinearTextureStride:format:
texture2DFromBuffer:width:height:format:offset:usage:
T@"<MTLDevice>",R,N,V_device
setResourceOptions:
wireMemory
setWireMemory:
allowFallback
setAllowFallback:
compressionLevel
setCompressionLevel:
externalBuffer
setExternalBuffer:
_wireMemory
_allowFallback
_compressionLevel
_label
_resourceOptions
_externalBuffer
T@"<MTLBuffer>",&,N,V_externalBuffer
T@"NSString",&,N,V_label
TQ,N,V_resourceOptions
TB,N,V_wireMemory
TB,N,V_allowFallback
Ti,N,V_compressionLevel
initFromDescriptor:
isLinear
setIsLinear:
desc
setDesc:
_isLinear
_desc
TB,N,V_isLinear
T@"MTLTextureDescriptor",&,N,V_desc
length
setLength:
options
setOptions:
_length
_options
TQ,N,V_length
TQ,N,V_options
initWithMetalUtils:
setupWithDescriptor:
getSizeAndAlignForDescriptor:
getSizeAndAlignForBufferDescriptor:
newBufferWithDescriptor:offset:
newTextureWithDescriptor:offset:
textureOffset:
bufferOffset:
purgeResources
hasCreatedTexture:
hasCreatedBuffer:
alignment
utils
TQ,R,N
T@"FigMetalUtils",R,N
_alignment
_utils
TQ,R,N,V_alignment
TQ,R,N,V_memSize
T@"FigMetalUtils",R,N,V_utils
_buffer
_heap
dealloc
largestOccupiedOffset
maxContiguousFreeSize
initWithDevice:allocatorType:
reset
usedSize
setupWithDescriptor:allocatorBackend:
makeBufferAliasable:
makeTextureAliasable:
setForceDisableCompression:
forceDisableCompression
newTextureDescriptor
newBufferDescriptor
newTextureDescriptor:
newBufferDescriptor:
addExternalMetalBuffer:atSubAllocatorID:
newTextureWithDescriptor:subAllocatorID:
newBufferWithDescriptor:subAllocatorID:
usedSize:
largestOccupiedOffset:
memSize:
reset:
purgeResources:
usedSizeAll
backendAllocator
_backendAllocator
_texDesc
_bufDesc
_isExternalMemory
_currentResources
subAllocator
_forceDisableCompression
_allowFallBack
TQ,R,N,VusedSize
Ti,R,N,V_allocatorType
TQ,R,N,V_resourceOptions
Ti,R,N,V_compressionLevel
T@"FigMetalAllocatorBackend",R,N,V_backendAllocator
hasCreatedResource:
newBufferWithDescriptor:sizeAlign:
newTextureWithDescriptor:sizeAlign:
_storage
_rangeAllocator
_largestOccupiedOffset
TQ,R,N,V_largestOccupiedOffset
initWithDescriptor:
offset
setOffset:
setWidth:
setHeight:
setUsage:
setPixelFormat:
_offset
_width
_height
_depth
_usage
_textureType
_pixelFormat
_sampleCount
_arrayLength
_mipmapLevelCount
T@"NSString",C,V_label
TQ,N,V_offset
TQ,N,V_width
TQ,N,V_height
TQ,N,V_pixelFormat
TQ,N,V_usage
TQ,R,V_textureType
TQ,R,V_depth
TQ,R,V_mipmapLevelCount
TQ,R,V_sampleCount
TQ,R,V_arrayLength
@24@0:8@16
@32@0:8@16@24
B24@0:8@16
i24@0:8@16
B28@0:8@16I24
@16@0:8
v16@0:8
@"MTLTextureDescriptor"
@"<MTLTexture>"
@20@0:8I16
@44@0:8{?=ii}16I24{?=ii}28@36
{?=ii}16@0:8
I16@0:8
{?="width"i"height"i}
@"NSDictionary"
@28@0:8Q16i24
Q16@0:8
v24@0:8Q16
i16@0:8
v20@0:8i16
v24@0:8@16
@"FigMetalAllocatorBackend"
@"NSMutableArray"
@40@0:8*16Q24@32
i20@0:8i16
B32@0:8r*16@24
B36@0:8r*16@24i32
@56@0:8r*16Q24Q32Q40Q48
Q24@0:8Q16
@56@0:8^{__CVBuffer=}16Q24Q32Q40Q48
@64@0:8^{__CVBuffer=}16Q24Q32Q40Q48Q56
@48@0:8^{__CVBuffer=}16Q24Q32Q40
@24@0:8^{__CVBuffer=}16
@64@0:8^{__CVBuffer=}16Q24Q32{CGSize=dd}40Q56
@64@0:8^{__IOSurface=}16Q24Q32Q40Q48Q56
@48@0:8@16Q24Q32i40i44
@56@0:8@16Q24i32i36Q40Q48
B16@0:8
v20@0:8B16
@"<MTLDevice>"
@"<MTLCommandQueue>"
@"<MTLLibrary>"
@"<MTLCommandBuffer>"
@"<MTLPipelineLibrarySPI>"
@"FigMetalAllocator"
@"<MTLBuffer>"
@"MTLVertexDescriptor"
@20@0:8i16
@"FigMetalExecutionStatus"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8Q16
{?=QQ}24@0:8@16
{?=QQ}32@0:8Q16Q24
@32@0:8Q16Q24
@40@0:8r^v16Q24Q32
@48@0:8^v16Q24Q32@?40
@40@0:8@16^{__IOSurface=}24Q32
@32@0:8@16^@24
@40@0:8@16@24^@32
v40@0:8@16@24@?32
v32@0:8@16@?24
@48@0:8@16Q24^@32^@40
v40@0:8@16Q24@?32
B24@0:8Q16
B24@0:8q16
v32@0:8^{?=ff}16Q24
@40@0:8@16Q24Q32
@40@0:8@16q24^@32
{?=QQQ}40@0:8Q16Q24Q32
Q24@0:8q16
{?=QQQ}48@0:8Q16Q24Q32q40
v32@0:8^Q16^Q24
{?=QQQ}24@0:8@16
{?=QQ}24@0:8Q16
{?=QQQ}16@0:8
v72@0:8r^{?={?=QQQ}{?=QQQ}}16^{?={?=QQQ}{?=QQQ}}24{?=QQQ}32Q56Q64
v64@0:8r^{?={?=QQQ}{?=QQQ}}16^{?={?=QQQ}{?=QQQ}}24{?=QQQ}32Q56
@"<MTLCommandQueue>"16@0:8
@"<MTLCommandQueue>"24@0:8Q16
{?=QQ}24@0:8@"MTLTextureDescriptor"16
@"<MTLHeap>"24@0:8@"MTLHeapDescriptor"16
@"<MTLBuffer>"32@0:8Q16Q24
@"<MTLBuffer>"40@0:8r^v16Q24Q32
@"<MTLBuffer>"48@0:8^v16Q24Q32@?<v@?^vQ>40
@"<MTLDepthStencilState>"24@0:8@"MTLDepthStencilDescriptor"16
@"<MTLTexture>"24@0:8@"MTLTextureDescriptor"16
@"<MTLTexture>"40@0:8@"MTLTextureDescriptor"16^{__IOSurface=}24Q32
@"<MTLSamplerState>"24@0:8@"MTLSamplerDescriptor"16
@"<MTLLibrary>"16@0:8
@"<MTLLibrary>"32@0:8@"NSBundle"16^@24
@"<MTLLibrary>"32@0:8@"NSString"16^@24
@"<MTLLibrary>"32@0:8@"NSURL"16^@24
@"<MTLLibrary>"32@0:8@"NSObject<OS_dispatch_data>"16^@24
@"<MTLLibrary>"40@0:8@"NSString"16@"MTLCompileOptions"24^@32
v40@0:8@"NSString"16@"MTLCompileOptions"24@?<v@?@"<MTLLibrary>"@"NSError">32
@"<MTLLibrary>"32@0:8@"MTLStitchedLibraryDescriptor"16^@24
v32@0:8@"MTLStitchedLibraryDescriptor"16@?<v@?@"<MTLLibrary>"@"NSError">24
@"<MTLRenderPipelineState>"32@0:8@"MTLRenderPipelineDescriptor"16^@24
@"<MTLRenderPipelineState>"48@0:8@"MTLRenderPipelineDescriptor"16Q24^@32^@40
v32@0:8@"MTLRenderPipelineDescriptor"16@?<v@?@"<MTLRenderPipelineState>"@"NSError">24
v40@0:8@"MTLRenderPipelineDescriptor"16Q24@?<v@?@"<MTLRenderPipelineState>"@"MTLRenderPipelineReflection"@"NSError">32
@"<MTLComputePipelineState>"32@0:8@"<MTLFunction>"16^@24
@"<MTLComputePipelineState>"48@0:8@"<MTLFunction>"16Q24^@32^@40
v32@0:8@"<MTLFunction>"16@?<v@?@"<MTLComputePipelineState>"@"NSError">24
v40@0:8@"<MTLFunction>"16Q24@?<v@?@"<MTLComputePipelineState>"@"MTLComputePipelineReflection"@"NSError">32
@"<MTLComputePipelineState>"48@0:8@"MTLComputePipelineDescriptor"16Q24^@32^@40
v40@0:8@"MTLComputePipelineDescriptor"16Q24@?<v@?@"<MTLComputePipelineState>"@"MTLComputePipelineReflection"@"NSError">32
@"<MTLFence>"16@0:8
@"<MTLRenderPipelineState>"48@0:8@"MTLTileRenderPipelineDescriptor"16Q24^@32^@40
v40@0:8@"MTLTileRenderPipelineDescriptor"16Q24@?<v@?@"<MTLRenderPipelineState>"@"MTLRenderPipelineReflection"@"NSError">32
@"<MTLRenderPipelineState>"48@0:8@"MTLMeshRenderPipelineDescriptor"16Q24^@32^@40
v40@0:8@"MTLMeshRenderPipelineDescriptor"16Q24@?<v@?@"<MTLRenderPipelineState>"@"MTLRenderPipelineReflection"@"NSError">32
@"<MTLArgumentEncoder>"24@0:8@"NSArray"16
@"<MTLRasterizationRateMap>"24@0:8@"MTLRasterizationRateMapDescriptor"16
@"<MTLIndirectCommandBuffer>"40@0:8@"MTLIndirectCommandBufferDescriptor"16Q24Q32
@"<MTLEvent>"16@0:8
@"<MTLSharedEvent>"16@0:8
@"<MTLSharedEvent>"24@0:8@"MTLSharedEventHandle"16
@"<MTLIOFileHandle>"32@0:8@"NSURL"16^@24
@"<MTLIOCommandQueue>"32@0:8@"MTLIOCommandQueueDescriptor"16^@24
@"<MTLIOFileHandle>"40@0:8@"NSURL"16q24^@32
@"<MTLCounterSampleBuffer>"32@0:8@"MTLCounterSampleBufferDescriptor"16^@24
@"<MTLArgumentEncoder>"24@0:8@"<MTLBufferBinding>"16
@"<MTLDynamicLibrary>"32@0:8@"<MTLLibrary>"16^@24
@"<MTLDynamicLibrary>"32@0:8@"NSURL"16^@24
@"<MTLBinaryArchive>"32@0:8@"MTLBinaryArchiveDescriptor"16^@24
{?=QQQ}24@0:8@"MTLAccelerationStructureDescriptor"16
@"<MTLAccelerationStructure>"24@0:8Q16
@"<MTLAccelerationStructure>"24@0:8@"MTLAccelerationStructureDescriptor"16
{?=QQ}24@0:8@"MTLAccelerationStructureDescriptor"16
@"NSArray"16@0:8
@24@0:8^{__IOSurface=}16
{?=II}16@0:8
B44@0:8^@16Q24^Q32i40
B24@0:8{?=II}16
@32@0:8@16Q24
@32@0:8^v16@24
@40@0:8^v16@24@32
@32@0:8Q16@24
v40@0:8@16r^v24@32
v48@0:8@16r^v24@32@40
B32@0:8@16^@24
@40@0:8@16Q24^@32
@48@0:8@16@24Q32^@40
B36@0:8@16B24^@28
@40@0:8Q16@24^@32
r^{MTLTargetDeviceArch=QI*}16@0:8
r^{?=IIIIIIIIIIIIIIIIIIIIIIIIIIffIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIQ}16@0:8
f16@0:8
{IndirectArgumentBufferCapabilities=b1b1b1b29}16@0:8
q16@0:8
v24@0:8^{MPSFunctionTable=}16
v40@0:8Q16^Q24Q32
B32@0:8{_NSRange=QQ}16
@40@0:8Q16Q24Q32
@48@0:8r^v16Q24Q32Q40
@56@0:8^v16Q24Q32Q40@?48
B40@0:8^{?=III}16Q24Q32
@32@0:8^v16Q24
@40@0:8^v16@24Q32
^v16@0:8
^{os_unfair_lock_s=I}16@0:8
@40@0:8@16r^{?=BQ^{?}}24^@32
@28@0:8@16I24
@48@0:8^v16Q24@32@?40
@28@0:8@16B24
{?=QQQ}48@0:8q16Q24Q32Q40
v48@0:8@16@24@32^@40
v40@0:8@16@24^@32
@32@0:8r^@16Q24
v32@0:8@16@24
@"MTLArchitecture"24@0:8@"NSArray"16
v24@0:8@"<MTLDeviceSPI>"16
@"<MTLDevice>"16@0:8
@"<MTLBuffer>"24@0:8^{__IOSurface=}16
B24@0:8@"NSString"16
@"<MTLCommandQueue>"24@0:8@"MTLCommandQueueDescriptor"16
@"_MTLIndirectArgumentBufferLayout"24@0:8@"MTLStructType"16
@"<MTLArgumentEncoder>"24@0:8@"_MTLIndirectArgumentBufferLayout"16
@"<MTLBuffer>"40@0:8@"MTLIndirectCommandBufferDescriptor"16Q24Q32
@"<MTLIndirectRenderCommandEncoder>"24@0:8@"<MTLBuffer>"16
@"<MTLIndirectComputeCommandEncoder>"24@0:8@"<MTLBuffer>"16
@"<MTLSharedEvent>"20@0:8I16
@"<MTLAccelerationStructure>"32@0:8Q16Q24
@"<MTLAccelerationStructure>"32@0:8@"<MTLBuffer>"16Q24
@"<MTLAccelerationStructure>"40@0:8@"<MTLBuffer>"16Q24Q32
@"<MTLAccelerationStructure>"32@0:8^v16@"MTLAccelerationStructureDescriptor"24
@"<MTLAccelerationStructure>"40@0:8^v16@"NSArray"24@"MTLAccelerationStructureDescriptor"32
@"<MTLAccelerationStructure>"32@0:8Q16@"MTLAccelerationStructureAllocationDescriptor"24
v40@0:8@"<MTLAccelerationStructure>"16r^v24@"MTLAccelerationStructureDescriptor"32
v48@0:8@"<MTLAccelerationStructure>"16r^v24@"NSArray"32@"MTLAccelerationStructureDescriptor"40
@"<MTLDynamicLibrary>"40@0:8@"<MTLLibrary>"16@"MTLComputePipelineDescriptor"24^@32
B32@0:8@"MTLDynamicLibraryDescriptorSPI"16^@24
@"<MTLDynamicLibrary>"32@0:8@"MTLDynamicLibraryDescriptorSPI"16^@24
@"<MTLDynamicLibrary>"40@0:8@"NSURL"16Q24^@32
@"NSArray"32@0:8@"MTLComputePipelineDescriptor"16^@24
@"NSArray"40@0:8@"MTLComputePipelineDescriptor"16Q24^@32
@"NSArray"40@0:8@"MTLFunction"16@"NSArray"24^@32
@"NSArray"48@0:8@"MTLFunction"16@"NSArray"24Q32^@40
B36@0:8@"<MTLLibrary>"16B24^@28
B32@0:8@"NSURL"16^@24
@"<MTLBinaryArchive>"40@0:8Q16@"NSURL"24^@32
@"<MTLVisibleFunctionTable>"24@0:8@"MTLVisibleFunctionTableDescriptor"16
@"<MTLIntersectionFunctionTable>"24@0:8@"MTLIntersectionFunctionTableDescriptor"16
@"<MTLRenderPipelineState>"32@0:8@"MTLMeshRenderPipelineDescriptor"16^@24
v32@0:8@"MTLMeshRenderPipelineDescriptor"16@?<v@?@"<MTLRenderPipelineState>"@"NSError">24
@"<MTLDeadlineProfile>"24@0:8Q16
@"MTLTargetDeviceArchitecture"16@0:8
@"MTLArchitecture"16@0:8
@"MTLGPUBVHBuilder"16@0:8
@"NSDictionary"16@0:8
v24@0:8@"NSDictionary"16
@"NSObject<OS_dispatch_data>"16@0:8
v24@0:8@"NSObject<OS_dispatch_data>"16
@"<MTLBuffer>"40@0:8Q16Q24Q32
@"<MTLBuffer>"48@0:8r^v16Q24Q32Q40
@"<MTLBuffer>"56@0:8^v16Q24Q32Q40@?<v@?^vQ>48
@"<MTLBuffer>"24@0:8@"MTLBufferDescriptor"16
@"<MTLLateEvalEvent>"16@0:8
@"<MTLComputePipelineState>"32@0:8@"MTLComputePipelineDescriptor"16^@24
v32@0:8@"MTLComputePipelineDescriptor"16@?<v@?@"<MTLComputePipelineState>"@"NSError">24
@"<MTLRenderPipelineState>"32@0:8@"MTLTileRenderPipelineDescriptor"16^@24
v32@0:8@"MTLTileRenderPipelineDescriptor"16@?<v@?@"<MTLRenderPipelineState>"@"NSError">24
@"<MTLFunction>"32@0:8^v16Q24
@"<MTLFunction>"40@0:8^v16@"NSObject<OS_dispatch_data>"24Q32
v24@0:8@"MTLGPUBVHBuilder"16
@"<MTLIndirectArgumentEncoder>"24@0:8@"NSArray"16
@"<MTLComputePipelineState>"40@0:8@"NSArray"16r^{?=BQ^{?}}24^@32
@"<MTLLibrary>"40@0:8@"NSString"16@"NSArray"24^@32
@"<MTLLibrary>"40@0:8@"NSArray"16@"NSArray"24^@32
@"<MTLLibrary>"32@0:8@"MTLStitchedLibraryDescriptorSPI"16^@24
@"NSString"24@0:8@"NSArray"16
@"<MTLLibrary>"40@0:8@"NSArray"16r^{?=BQ^{?}}24^@32
@"<MTLPipelineLibrarySPI>"32@0:8@"NSString"16^@24
v24@0:8@"NSString"16
@"NSData"16@0:8
@"NSObject<OS_dispatch_data>"24@0:8@"MTLRenderPipelineDescriptor"16
@"NSObject<OS_dispatch_data>"24@0:8@"MTLComputePipelineDescriptor"16
@"MTLRenderPipelineDescriptor"32@0:8@"NSObject<OS_dispatch_data>"16@"<MTLDeserializationContext>"24
@"MTLComputePipelineDescriptor"32@0:8@"NSObject<OS_dispatch_data>"16@"<MTLDeserializationContext>"24
@"NSObject<OS_dispatch_data>"24@0:8@"MTLStructType"16
@"NSObject<OS_dispatch_data>"28@0:8@"MTLStructType"16I24
@"MTLStructType"24@0:8@"NSObject<OS_dispatch_data>"16
@"<MTLTexture>"48@0:8^v16Q24@"MTLTextureDescriptor"32@?<v@?^vQ>40
@"<MTLTextureLayout>"28@0:8@"MTLTextureDescriptor"16B24
@"<MTLIndirectArgumentEncoder>"24@0:8@"_MTLIndirectArgumentBufferLayout"16
v48@0:8@"<MTLFunction>"16@"MTLFunctionDescriptor"24@"<MTLBinaryArchive>"32^@40
v40@0:8@"<MTLFunction>"16@"MTLFunctionDescriptor"24^@32
v40@0:8@"<MTLFunction>"16@"MTLFunctionDescriptor"24@?<v@?@"NSError">32
@"<MTLResourceGroupSPI>"32@0:8r^@16Q24
v32@0:8@"NSObject<OS_dispatch_data>"16@"NSMutableDictionary"24
@"<MTLDeviceSPI>"
@"InterceptConfig"
@"<MTLCommandBuffer>"16@0:8
@"<MTLCommandBuffer>"24@0:8@"MTLCommandBufferDescriptor"16
B28@0:8Q16S24
i32@0:8@16Q24
v24@0:8@?16
v24@0:8@"NSObject<OS_dispatch_queue>"16
@"NSObject<OS_dispatch_queue>"16@0:8
@"MTLCommandQueueSPIStats"16@0:8
i24@0:8@"NSArray"16
i32@0:8@"NSArray"16Q24
@"NSArray"24@0:8@"NSArray"16
v24@0:8@?<v@?@"<MTLCommandBuffer>"@"NSData"Q>16
@"CMMTLDevice"
v32@0:8@16d24
v32@0:8@16Q24
d16@0:8
v24@0:8@?<v@?@"<MTLCommandBuffer>">16
v24@0:8@"<MTLDrawable>"16
v32@0:8@"<MTLDrawable>"16d24
@"<MTLBlitCommandEncoder>"16@0:8
@"<MTLRenderCommandEncoder>"24@0:8@"MTLRenderPassDescriptor"16
@"<MTLComputeCommandEncoder>"24@0:8@"MTLComputePassDescriptor"16
@"<MTLBlitCommandEncoder>"24@0:8@"MTLBlitPassDescriptor"16
@"<MTLComputeCommandEncoder>"16@0:8
@"<MTLComputeCommandEncoder>"24@0:8Q16
v32@0:8@"<MTLEvent>"16Q24
@"<MTLParallelRenderCommandEncoder>"24@0:8@"MTLRenderPassDescriptor"16
@"<MTLResourceStateCommandEncoder>"16@0:8
@"<MTLResourceStateCommandEncoder>"24@0:8@"MTLResourceStatePassDescriptor"16
@"<MTLAccelerationStructureCommandEncoder>"16@0:8
@"<MTLAccelerationStructureCommandEncoder>"24@0:8@"MTLAccelerationStructurePassDescriptor"16
@"<MTLLogContainer>"16@0:8
@"NSError"16@0:8
v48@0:8@16Q24Q32Q40
v56@0:8@16Q24r^Q32r^Q40Q48
^v24@0:8^Q16
@40@0:8@16^(?={?=b8b24IQQ}{?=b8b24IQQ})24Q32
@32@0:8^(?={?=b8b24IQQ}{?=b8b24IQQ})16Q24
@40@0:8Q16^(?={?=b8b24IQQ}{?=b8b24IQQ})24Q32
v36@0:8@16Q24I32
v32@0:8r^@16Q24
v40@0:8Q16r^@24Q32
v24@0:8@"<MTLResourceGroupSPI>"16
v48@0:8@"<MTLResourceGroupSPI>"16Q24Q32Q40
v56@0:8@"<MTLResourceGroupSPI>"16Q24r^Q32r^Q40Q48
v24@0:8@"<MTLResource>"16
v24@0:8@"<MTLHeap>"16
v24@0:8@"NSArray"16
v32@0:8@"<MTLDrawable>"16@"NSDictionary"24
@"NSMutableDictionary"16@0:8
@"<MTLDeadlineProfile>"16@0:8
@"<MTLRenderCommandEncoder>"40@0:8@"MTLRenderPassDescriptor"16^(?={?=b8b24IQQ}{?=b8b24IQQ})24Q32
@"<MTLComputeCommandEncoder>"32@0:8^(?={?=b8b24IQQ}{?=b8b24IQQ})16Q24
@"<MTLComputeCommandEncoder>"40@0:8Q16^(?={?=b8b24IQQ}{?=b8b24IQQ})24Q32
@"<MTLComputeCommandEncoder>"40@0:8@"MTLComputePassDescriptor"16^(?={?=b8b24IQQ}{?=b8b24IQQ})24Q32
@"<MTLDebugCommandEncoder>"16@0:8
v36@0:8@"<MTLEvent>"16Q24I32
@"NSMutableString"
@"CMMTLCommandQueue"
Q24@0:8i16i20
@40@0:8@16@24@32
i52@0:8@16^f24@32@40i48
i60@0:8@16^f24@32@40i48B52i56
i52@0:8^{__CVBuffer=}16^f24@32@40i48
i60@0:8@16^f24@32@40i48i52i56
i44@0:8@16@24i32i36i40
i68@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16i48@52^f60
v24@0:8^f16
@"FigMetalContext"
[25f]
[4@"<MTLComputePipelineState>"]
@"<MTLComputePipelineState>"
@"<MTLHeap>"16@0:8
v104@0:8^v16Q24Q32{?={?=QQQ}{?=QQQ}}40Q88Q96
v104@0:8{?={?=QQQ}{?=QQQ}}16Q64Q72r^v80Q88Q96
v88@0:8^v16Q24{?={?=QQQ}{?=QQQ}}32Q80
v88@0:8{?={?=QQQ}{?=QQQ}}16Q64r^v72Q80
@64@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48
@68@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48{?=CCCC}64
^{__IOSurface=}16@0:8
{MTLResourceID=Q}16@0:8
{?=CCCC}16@0:8
@"<MTLTexture>"24@0:8Q16
@"<MTLTexture>"64@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48
@"<MTLTexture>"68@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48{?=CCCC}64
@"<MTLResource>"16@0:8
@"<MTLTexture>"16@0:8
@"<MTLBuffer>"16@0:8
Q32@0:8Q16Q24
@64@0:8@16Q24Q32Q40Q48Q56
@"NSString"
Q24@0:8@16
@24@0:8@"FigMetalUtils"16
i24@0:8@"FigMetalAllocatorBackendDescriptor"16
{?=QQ}24@0:8@"FigMetalTextureDescriptor"16
{?=QQ}24@0:8@"FigMetalBufferDescriptor"16
@"<MTLBuffer>"32@0:8@"FigMetalBufferDescriptor"16Q24
@"<MTLTexture>"32@0:8@"FigMetalTextureDescriptor"16Q24
Q24@0:8@"<MTLTexture>"16
Q24@0:8@"<MTLBuffer>"16
B24@0:8@"<MTLTexture>"16
B24@0:8@"<MTLBuffer>"16
@"FigMetalUtils"16@0:8
@"FigMetalUtils"
@"<MTLHeap>"
@28@0:8@16i24
i32@0:8@16@24
v24@0:8^@16
i28@0:8@16I24
Q20@0:8I16
v20@0:8I16
@"FigMetalTextureDescriptor"
@"FigMetalBufferDescriptor"
@"NSMutableSet"
[5@"FigMetalAllocator"]
@32@0:8@16^{?=QQ}24
@"<FigMetalAllocatorImpl>"
{MTLRangeAllocator="elements"^{MTLRangeAllocatorElement}"numElements"I"capacity"Q"capacityIncrement"Q"defaultAlignmentMask"Q}
