CKiCloudSettingsPlugin
dataclasses request: kAccountDataclassMessages
actionsForDisablingDataclassOnAccount for dataclass: %@
com.apple.messages
actionsForEnablingDataclassOnAccount: %@
actionsForEnablingDataclassOnAccount
perform action: %@ for dataclass: %@
ACDataclassActionMergeLocalDataIntoSyncData action was called, requesting to enable Message in iCloud
ACDataclassActionMergeSyncDataIntoLocalData action was called requesting to disable Message in iCloud
Prompting user to ensure they really want to disable
DISABLE_MIC_TITLE
DISABLE_MIC_MESSAGE_FORMAT
DISABLE_MIC_CONFIRM
DISABLE_MIC_CANCEL
v16@?0@"IMUserNotification"8
Spinning runloop until user makes a selection
Finished Blocking, user has choosen to disable Messages in iCloud: %@
Alerting user that MOC is not available as iCloud and iMessage account do not match
MIC_ACCOUNT_MISMATCH
MIC_ACCOUNT_MISMATCH_MESSAGE
MIC_ACCOUNT_MISMATCH_DEFAULT_BUTTON
Not eligible as account does not support DeviceToDeviceEncryption, or iCloud & iMsg accounts do not match up
User has already purchased max quota tier, additional storage required: %llu
Additional storage required: %llu
Signal enable_semaphore, didSucceed: %d
Timeout enable_semaphore, didSucceed: %d
setCloudEnable: Did nothing as it was already enabled/disabled
performAdditionalStorageRequiredCheck
Signal has_storage_semaphore, additionalStorageRequired: %llu
Timeout storage_semaphore, additionalStorageRequired: %llu
Since we are not eligible, fetching security level to check we are up to date
Updated eligibility to %@
didPerformAdditionalStorageRequiredCheck with userInfo: %@
setEnabledDidReturned with result: %@
requestQuota %@
request quota returned: hasMaxTier: %d
request quota with error: %@
v32@?0@"AARequest"8@"AAResponse"16@"NSError"24
Signal has_max_tier_semaphore, hasMaxTier: %d
Timeout has_max_tier_semaphore, hasMaxTier: %d
account
T@"NSString",R,C
bundleForClass:
actionsForAddingAccount:forDataclass:
isProxy
actionsForDeletingAccount:forDataclass:
removeObserver:
actionsForDisablingDataclassOnAccount:forDataclass:
T#,R
actionWithType:
TQ,R
initDetailedRequestWithAccount:
actionsForAddingAccount:forDataclass:withError:
release
actionsForDeletingAccount:forDataclass:withError:
setCloudEnable:
actionsForDisablingDataclassOnAccount:forDataclass:withError:
actionsForEnablingDataclassOnAccount:forDataclass:
actionsForEnablingDataclassOnAccount:forDataclass:withError:
addObserver:selector:name:object:
addUserNotification:listener:completionHandler:
arrayWithObjects:count:
autorelease
boolValue
checkEligibilityWithError:
class
conformsToProtocol:
currentDevice
currentRunLoop
dataclasses
dateWithTimeIntervalSinceNow:
debugDescription
defaultCenter
description
dictionaryWithObjects:forKeys:count:
didPerformAdditionalStorageRequiredCheck:
eligibleToToggleMiCSwitch
error
errorWithDomain:code:userInfo:
fetchAccountStatusAndUpdateMiCSwitchEligibility
hasMaxTier
hash
isEnabled
isEqual:
isEqualToString:
isKindOfClass:
isMemberOfClass:
localizedModel
localizedStringForKey:value:table:
longLongValue
mocAccountsMatch
numberWithUnsignedLongLong:
objectForKeyedSubscript:
performAction:forAccount:withChildren:forDataclass:
performAction:forAccount:withChildren:forDataclass:withError:
performAdditionalStorageRequiredCheck
performRequestWithHandler:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
primaryAccount
promptUserAccountsDoNotMatchForMOC
promptUserIfTheyWantToDisableOrCancel
purchasedMaxQuotaTier
respondsToSelector:
response
retain
retainCount
runMode:beforeDate:
self
setEnabled:
setEnabledDidReturned:
sharedInstance
sharedManager
stringGUID
stringWithFormat:
superclass
type
userInfo
userNotificationWithIdentifier:title:message:defaultButton:alternateButton:otherButton:
zone
CKiCloudSettingsPlugin
ACDDataclassOwnerProtocol
NSObject
@16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@32@0:8@16@24
@40@0:8@16@24^@32
B56@0:8@16@24@32@40^@48
B48@0:8@16@24@32@40
@"NSArray"16@0:8
@"NSArray"32@0:8@"ACAccount"16@"NSString"24
@"NSArray"40@0:8@"ACAccount"16@"NSString"24^@32
B56@0:8@"ACDataclassAction"16@"ACAccount"24@"NSArray"32@"NSString"40^@48
B48@0:8@"ACDataclassAction"16@"ACAccount"24@"NSArray"32@"NSString"40
v16@0:8
B24@0:8^@16
B20@0:8B16
v24@0:8@16
CKiCloudSettingsPlugin
dataclasses request: kAccountDataclassMessages
actionsForDisablingDataclassOnAccount for dataclass: %@
com.apple.messages
actionsForEnablingDataclassOnAccount: %@
actionsForEnablingDataclassOnAccount
perform action: %@ for dataclass: %@
ACDataclassActionMergeLocalDataIntoSyncData action was called, requesting to enable Message in iCloud
ACDataclassActionMergeSyncDataIntoLocalData action was called requesting to disable Message in iCloud
Prompting user to ensure they really want to disable
DISABLE_MIC_TITLE
DISABLE_MIC_MESSAGE_FORMAT
DISABLE_MIC_CONFIRM
DISABLE_MIC_CANCEL
v16@?0@"IMUserNotification"8
Spinning runloop until user makes a selection
Finished Blocking, user has choosen to disable Messages in iCloud: %@
Alerting user that MOC is not available as iCloud and iMessage account do not match
MIC_ACCOUNT_MISMATCH
MIC_ACCOUNT_MISMATCH_MESSAGE
MIC_ACCOUNT_MISMATCH_DEFAULT_BUTTON
Not eligible as account does not support DeviceToDeviceEncryption, or iCloud & iMsg accounts do not match up
User has already purchased max quota tier, additional storage required: %llu
Additional storage required: %llu
Signal enable_semaphore, didSucceed: %d
Timeout enable_semaphore, didSucceed: %d
setCloudEnable: Did nothing as it was already enabled/disabled
performAdditionalStorageRequiredCheck
Signal has_storage_semaphore, additionalStorageRequired: %llu
Timeout storage_semaphore, additionalStorageRequired: %llu
Since we are not eligible, fetching security level to check we are up to date
Updated eligibility to %@
didPerformAdditionalStorageRequiredCheck with userInfo: %@
setEnabledDidReturned with result: %@
requestQuota %@
request quota returned: hasMaxTier: %d
request quota with error: %@
v32@?0@"AARequest"8@"AAResponse"16@"NSError"24
Signal has_max_tier_semaphore, hasMaxTier: %d
Timeout has_max_tier_semaphore, hasMaxTier: %d
account
T@"NSString",R,C
bundleForClass:
actionsForAddingAccount:forDataclass:
isProxy
actionsForDeletingAccount:forDataclass:
removeObserver:
actionsForDisablingDataclassOnAccount:forDataclass:
T#,R
actionWithType:
TQ,R
initDetailedRequestWithAccount:
actionsForAddingAccount:forDataclass:withError:
release
actionsForDeletingAccount:forDataclass:withError:
setCloudEnable:
actionsForDisablingDataclassOnAccount:forDataclass:withError:
actionsForEnablingDataclassOnAccount:forDataclass:
actionsForEnablingDataclassOnAccount:forDataclass:withError:
addObserver:selector:name:object:
addUserNotification:listener:completionHandler:
arrayWithObjects:count:
autorelease
boolValue
checkEligibilityWithError:
class
conformsToProtocol:
currentDevice
currentRunLoop
dataclasses
dateWithTimeIntervalSinceNow:
debugDescription
defaultCenter
description
dictionaryWithObjects:forKeys:count:
didPerformAdditionalStorageRequiredCheck:
eligibleToToggleMiCSwitch
error
errorWithDomain:code:userInfo:
fetchAccountStatusAndUpdateMiCSwitchEligibility
hasMaxTier
hash
isEnabled
isEqual:
isEqualToString:
isKindOfClass:
isMemberOfClass:
localizedModel
localizedStringForKey:value:table:
longLongValue
mocAccountsMatch
numberWithUnsignedLongLong:
objectForKeyedSubscript:
performAction:forAccount:withChildren:forDataclass:
performAction:forAccount:withChildren:forDataclass:withError:
performAdditionalStorageRequiredCheck
performRequestWithHandler:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
primaryAccount
promptUserAccountsDoNotMatchForMOC
promptUserIfTheyWantToDisableOrCancel
purchasedMaxQuotaTier
respondsToSelector:
response
retain
retainCount
runMode:beforeDate:
self
setEnabled:
setEnabledDidReturned:
sharedInstance
sharedManager
stringGUID
stringWithFormat:
superclass
type
userInfo
userNotificationWithIdentifier:title:message:defaultButton:alternateButton:otherButton:
zone
CKiCloudSettingsPlugin
ACDDataclassOwnerProtocol
NSObject
@16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@32@0:8@16@24
@40@0:8@16@24^@32
B56@0:8@16@24@32@40^@48
B48@0:8@16@24@32@40
@"NSArray"16@0:8
@"NSArray"32@0:8@"ACAccount"16@"NSString"24
@"NSArray"40@0:8@"ACAccount"16@"NSString"24^@32
B56@0:8@"ACDataclassAction"16@"ACAccount"24@"NSArray"32@"NSString"40^@48
B48@0:8@"ACDataclassAction"16@"ACAccount"24@"NSArray"32@"NSString"40
v16@0:8
B24@0:8^@16
B20@0:8B16
v24@0:8@16
