@(#)PROGRAM:VirtualGarage  PROJECT:Navigation-1
EVRoutingUseMapsSyncLiveUpdates
EVRoutingKeyNameForModelID
model_id
EVRoutingManifestKeyNameForSiriAllowlist
siri_allowlist
EVRoutingManifestKeyNameForSiriBundleID
app_bundle_id
EVRoutingManifestKeyNameForSiriAllowListedModelIDs
model_ids
EVRoutingManifestKeyNameForIApAllowlist
iap2_allowlist
EVRoutingManifestKeyNameForIApDenylist
iap2_denylist
EVRoutingManifestKeyNameForIApDenyListedModelID
EVRoutingManifestKeyNameForIApDenyListedFirmwareID
firmware_id
EVRoutingManifestKeyNameForIApDenyListedModel
model
EVRoutingManifestKeyNameForIApDenyListedYear
year
EVRoutingResourceNameForAllowAndDenylists
supportedEVInfo.json
EVRoutingForceShowLastSyncDate
EVRoutingOEMAppPullInterval
EVRoutingIntentsRequestTimeout
EVRoutingStreamUpdatesDuringNav
EVRoutingEnableAllowListing
EVRoutingDisabledApplications
EVRoutingSynchronousVehicleStateUpdate
EVRoutingEnableIAP2Onboarding
EVRoutingUseCarDisplaySimIdentifier
EVRoutingEnableAutomaticVehicleDeselection
AutomaticallyDeselectMissingVehicles
CapacityThresholdForVehicleStateComparison
TimeThresholdForVehicleStateComparison
__invalid__
+[VGVehicleDeduper actionForAddingNewVehicle:withExistingGarageVehicles:andUnpairedVehicles:]
newVehicle == nil
newVehicle cannot be nil
garageVehicles == nil
garageVehicles cannot be nil
unpairedVehicles == nil
unpairedVehicles cannot be nil
B32@?0@"VGVehicle"8Q16^B24
@"NSDictionary"16@?0@"NSData"8
_identifier
_iapIdentifier
_siriIntentsIdentifier
_creationDate
_lastStateUpdateDate
_displayName
_year
_manufacturer
_model
_colorHex
_headUnitIdentifier
_headUnitBluetoothIdentifier
_licensePlate
_lprVehicleType
_lprPowerType
_supportedConnectors
_powerByConnector
_currentVehicleState
_pairedAppIdentifier
_pairedAppInstallDeviceIdentifier
_pairedAppInstallSessionIdentifier
<%@:%p,
 identifier: %@,
 iapIdentifier: %@,
 siriIntentsIdentifier: %@,
 creationDate: %@,
 lastStateUpdateDate: %@,
 displayName: %@,
 year: %@,
 manufacturer: %@,
 model: %@,
 colorHex: %@,
 headUnitBluetoothIdentifier: %@,
 headUnitIdentifier: %@,
 license plate: %@,
 lprVehicleType: %@,
 lprPowerType: %@,
 supportedConnectors: %@,
 powerByConnector: %@,
 currentState: %@,
 pairedAppIdentifier: %@,
 pairedAppInstallDeviceIdentifier: %@,
 pairedAppInstallSessionIdentifier: %@
Unknown
iAP2
SiriIntents
%@ %@
identifier
dateOfUpdate
origin
batteryPercentage
currentEVRange
maxEVRange
minBatteryCapacity
currentBatteryCapacity
maxBatteryCapacity
consumptionArguments
chargingArguments
isCharging
activeConnector
pairedAppInstallSessionIdentifier
pairedAppInstallDeviceIdentifier
UNKNOWN
IAP2
SIRIINTENTS
(unknown: %i)
NONE
J1772
CCS1
CCS2
CHADEMO
GBT_AC
GBT_DC
TESLA
MENNEKES
VGDataCoordinatorDeviceIdentifierKey
VGDataCoordinator.WorkQueue
VGDataCoordinator.DelegateQueue
v8@?0
-[VGDataCoordinator forceFetchAllVehicles]_block_invoke
-[VGDataCoordinator _updateGarageWithVehicle:syncAcrossDevices:]
-[VGDataCoordinator _updateStateOfChargeForVehicle:syncAcrossDevices:completion:]_block_invoke
v24@?0@"VGVehicleState"8@"NSError"16
-[VGDataCoordinator finishOnboardingVehicle:]_block_invoke
-[VGDataCoordinator unpairVehicle:]_block_invoke
B32@?0@"VGOEMApplication"8Q16^B24
-[VGDataCoordinator startContinuousUpdatesForVehicle:]
vehicle == nil
can't start continuous updates with a nil vehicle.
-[VGDataCoordinator startContinuousUpdatesForVehicle:]_block_invoke
-[VGDataCoordinator endAllContinuousUpdates]_block_invoke
-[VGDataCoordinator _refreshStateForTrackedVehicles]_block_invoke
-[VGDataCoordinator _loadAllOEMVehiclesForApps:completion:]_block_invoke
v24@?0@"NSArray"8@"NSError"16
-[VGDataCoordinator vehicleStateUpdated:]_block_invoke
-[VGDataCoordinator accessoryUpdatedWithVehicle:]_block_invoke
-[VGDataCoordinator OEMAppsUpdated:]_block_invoke
-[VGDataCoordinator getLatestStateOfVehicle:withReply:]
Could not get latest state of vehicle.
-[VGDataCoordinator getLatestStateOfVehicle:withReply:]_block_invoke
Could not get latest state of vehicle, because the provider was nil.
%@ (empty)
%@ [%@]
%@<%p>
<nil>
%02lX%02lX%02lX%02lX
v8@?0
<%@:%p, _displayName=%@, _mapsDisplayName=%@>
VGExternalAccessory.WorkQueue
VGExternalAccessory.DelegateQueue
-[VGExternalAccessory _checkAvailableAccessoriesAndAttachIfNeeded]_block_invoke
-[VGExternalAccessory _accessoryDidConnect:]_block_invoke
-[VGExternalAccessory _accessoryDidDisconnect:]_block_invoke
-[VGExternalAccessory _accessoryDidUpdateVehicle:]_block_invoke
-[VGExternalAccessory _updateFromVehicleInfo:]_block_invoke
-[VGExternalAccessory _notifyDelegateWithCurrentVehicle]_block_invoke
CarDisplaySim
CarDisplaySimFirmware
-[VGExternalAccessory getStateOfChargeForVehicle:completion:]_block_invoke
-[VGExternalAccessory listCarsWithCompletion:]_block_invoke
CHAdeMO
Tesla
Mennekes
@"NSString"16@?0Q8
v24@?0Q8Q16
_dateOfUpdate
_origin
_batteryPercentage
_currentEVRange
_maxEVRange
_minBatteryCapacity
_currentBatteryCapacity
_maxBatteryCapacity
_consumptionArguments
_chargingArguments
_isCharging
_activeConnector
<%@:%p, identifier: %@, dateOfUpdate: %@, origin: %@, batteryCharge: %@, currentEVRange: %@, maxEVRange: %@, minBatteryCapacity: %@, currentBatteryCapacity: %@, maxBatteryCapacity: %@, consumptionArguments: %@, chargingArguments: %@, isCharging: %@, activeConnector: %@>
com.apple.navigation.VirtualGarage
Assert
ExternalAccessory
ExternalAccessoryModelFilter
DataCoordinator
OEMApplication
Persisting
UIHelper
VirtualGarage
B24@?0@"NSArray"8@"NSArray"16
<%@:%p, modelId: %@, firmwareIds: %@, years: %@, models: %@>
@"NSArray"16@?0@"NSDictionary"8
@40@?0@"NSString"8#16@"NSDictionary"24^B32
B16@?0@"NSArray"8
v32@?0@"NSNumber"8Q16^B24
v32@?0@"VGDenylistEntry"8Q16^B24
-[VGVirtualGarage initWithGaragePersister:]
persister == nil
Garage should be initialized with a persister.
-[VGVirtualGarage initWithGaragePersister:]_block_invoke
_vehicles
_selectedVehicleIdentifier
<%@:%p,
 _selectedVehicleIdentifier: %@,
 _vehicles: %@
B24@?0@"VGVehicle"8@"NSDictionary"16
v32@?0@"VGVehicle"8Q16^B24
v16@?0@"VGVirtualGarage"8
-[VGVirtualGarage virtualGarageGetLatestStateOfVehicleWithIdentifier:syncAcrossDevices:withReply:]
identifier == nil
vehicleIdentifier cannot be nil
reply == nil
reply block cannot be nil
v24@?0@"VGVehicle"8@"NSError"16
Could not fetch a vehicle.
Fetched vehicle is not an EV vehicle.
-[VGVirtualGarage virtualGarageGetLatestStateOfVehicleWithIdentifier:syncAcrossDevices:withReply:]_block_invoke
v24@?0@"VGVehicle"8@?<v@?@"VGVehicle"@"NSError">16
VGOEMApplicationFinderQueue
-[VGOEMApplicationFinder valueChangedForGEOConfigKey:]_block_invoke
-[VGOEMApplicationFinder findOEMApplications]_block_invoke
-[VGOEMApplicationFinder applicationsDidInstall:]_block_invoke
-[VGOEMApplicationFinder applicationsDidUninstall:]_block_invoke
VGOEMApplicationQueue
%@ (%@) 
<no color>
-[VGOEMApplication listCarsWithCompletion:]
completion == nil
Completion cannot be nil!
-[VGOEMApplication listCarsWithCompletion:]_block_invoke
v24@?0@"INListCarsIntentResponse"8@"INCExtensionError"16
v24@?0@"<INCExtensionProxy>"8@"NSError"16
-[VGOEMApplication getStateOfChargeForVehicle:completion:]
-[VGOEMApplication getStateOfChargeForVehicle:completion:]_block_invoke
Intents error with code: %ld
Intent response with unsupported code: %ld
Invalid Formula
v24@?0@"INGetCarPowerLevelStatusIntentResponse"8@"INCExtensionError"16
-[VGOEMApplication _createChargeStreamingConnectionIfNeededForVehicle:]
Vehicle cannot be nil
-[VGOEMApplication _createChargeStreamingConnectionIfNeededForVehicle:]_block_invoke
-[VGOEMApplication startSendingChargeUpdatesForVehicle:]
-[VGOEMApplication startSendingChargeUpdatesForVehicle:]_block_invoke
-[VGOEMApplication stopSendingChargeUpdatesForVehicle:]
-[VGOEMApplication stopSendingChargeUpdatesForVehicle:]_block_invoke
-[VGOEMApplication intentResponseDidUpdate:withSerializedCacheItems:]
-[VGOEMApplication intentResponseDidUpdate:withSerializedCacheItems:]_block_invoke
-[VGOEMApplication _connectionWithIntent:]_block_invoke
v16@?0@"NSError"8
Identifier: %@
com.apple.maps.virtualgarage.server.%@.%p
com.apple.maps.virtualgarage.server
-[VGVirtualGarageServer startWithPersister:]_block_invoke
-[VGVirtualGarageServer stop]_block_invoke
com.apple.maps.virtualgarage.vehicles
-[VGVirtualGarageServer listener:shouldAcceptNewConnection:]_block_invoke
-[VGVirtualGarageServer virtualGarageDidUpdate:]
-[VGVirtualGarageServer virtualGarageDidUpdate:]_block_invoke_3
-[VGVirtualGarageServer virtualGarage:didUpdateUnpairedVehicles:]
-[VGVirtualGarageServer virtualGarage:didUpdateUnpairedVehicles:]_block_invoke_2
v24@?0@"VGVirtualGarage"8@"NSError"16
com.apple.maps.virtualgarage.callbacks.%@.%p
com.apple.maps.virtualgarage.service.%p.isolater
com.apple.maps.virtualgarage.service.%@.%p
-[VGVirtualGarageService openForClient:]
client == nil
Can't call openForClient: with a nil client
-[VGVirtualGarageService closeForClient:]
Can't call closeForClient: with a nil client
-[VGVirtualGarageService _closeConnection]_block_invoke
VirtualGarage isn't enabled, service isn't able to call to server.
-[VGVirtualGarageService virtualGarageAddVehicle:]
-[VGVirtualGarageService virtualGarageRemoveVehicle:]
-[VGVirtualGarageService virtualGarageGetGarageWithReply:]
-[VGVirtualGarageService virtualGarageSelectVehicle:]
-[VGVirtualGarageService virtualGarageOnboardVehicle:]
-[VGVirtualGarageService virtualGarageSaveVehicle:]
-[VGVirtualGarageService virtualGarageStartContinuousUpdatesIfNeeded]
-[VGVirtualGarageService virtualGarageEndContinuousUpdates]
-[VGVirtualGarageService virtualGarageForceFetchAllVehicles]
-[VGVirtualGarageService virtualGarageGetListOfUnpairedVehiclesWithReply:]
-[VGVirtualGarageService virtualGarageGetLatestStateOfVehicleWithIdentifier:syncAcrossDevices:withReply:]
-[VGVirtualGarageService virtualGarageDidUpdate:]
-[VGVirtualGarageService virtualGarage:didUpdateUnpairedVehicles:]
invalid VirtualGarageConfig_ requested identifier %u
%{public}s forbids: %{public}s. %{public}s
Failed to load powerByConnector dictionary from MapsSyncVehicle: %@.
Failed to parse a powerByConnector dictionary from MapsSyncVehicle: %@.
Failed to load vehicleStateStorage from MapsSyncVehicle: %@.
Tried to update a vehicle %@, with an incompatible state: id: %@, origin: %@
Tried to pair a vehicle: (%@) to iapID: %@, bluetoothID: %@, but it was already paired.
Pairing vehicle to iapIdentifier: %@, bluetoothIdentifier: %@
Querried a vehicle for battery state that is not an EV. Vehicle: %@
Vehicle does not have a displayable battery percentage, fallback to `batteryPercentageBasedOfCapacity`.
Vehicle provided invalid battery state: %@
Loaded device id of invalid class: <%p:%@>
forceFetchAllVehicles: will reload all SI and iAP2 vehicles
strongSelf went away in %s line %d
forceFetchAllVehicles: finished reloading vehicles
_updateGarageWithState: tried to update garage with a nil vehicle. No action for the DataCoordinator.
strongDelegate went away in %s line %d
_updateGarageWithVehicle: No action to update the garage with.
_updateGarageWithVehicle: Updating a vehicle in VG :%@.
_updateGarageWithVehicle: didn't find an unpaired vehicle to update in _unpairedVehicles array: %@, vehicle: %@
_updateGarageWithVehicle: Replacing an upaired vehicle with an updated one. existing vehicle: %@, updated vehicle: %@
_updateGarageWithVehicle: Tried to add unpaired vehicle, but it already exists in the array: %@, vehicle: %@
_updateGarageWithVehicle: Found a new vehicle. Saving vehicle in dataCoordinator until it's onboarded through UI. Vehicle: :%@.
Will update SoC using %@ for vehicle: %@.
Couldn't update SoC for vehicle: %@, because there was no source.
strongSelf2 went away in %s line %d
Failed to get vehicleState for vehicle: %@. error: %@
Received vehicleState and will update vehicle. Source: %@ state: %@.
vehicleStateProvider: %@ does not conform to VGVehicleStateProviding
finishOnboardingVehicle: will update and remove vehicle: %@ from unpairedVehicles.
_removeUnpairedVehicle: Tried to remove unpaired vehicle: %@, but _unpairedVehicles don't contain that vehicle. %@
_removeUnpairedVehicle: removed vehicle: %@ from unpairedVehicles.
shouldUnpairVehicle: vehicle doesn't have a pairedAppId -> NO
shouldUnpairVehicle: this is not the primary device. vehicle.deviceId: %@, self.deviceId: %@ -> NO
shouldUnpairVehicle: this is a primary device and the OEM app is not installed -> YES
shouldUnpairVehicle: this is a primary device, the OEM app is installed, vehicle.installId: %@, oemApp.installId: %@ -> %@
Failed to load application record with error: %@
No matching application for vehicle: %@
No application associated with vehicle: %@
Ignoring, OEM Application not installed for vehicle: %@
unpairVehicle: Unpairing iAP2 only vehicle. Will reload unpaired iAP vehicles.
unpairVehicle: Tried to unpair a vehicle without iapIdentifier/siriIdentifier/pairedAppIdentifier -> ignoring the call.
unpairVehicle: Tried to unpair a vehicle %@, but _applications didn't contain the vehicle's paired app (%@). Not adding it back to unpaired vehicles.
unpairVehicle: will reload all vehicles for app: %@
Refresh timer ticked, pulling SoC for vehicles: %@
Invalidating refresh timer.
Starting refresh timer with interval: %ld
Requesting list of vehicles for %@
ListCars
Error Listing Cars from Intents: %@
Didn't receive any vehicles from %@, bailing.
Received Vehicles from %@: %@
Couldn't modify charge stream for vehicle, because EVRoutingStreamUpdatesDuringNav is false.
Couldn't modify charge stream for vehicle: %@. Underlying app was not found.
Will start charge stream for vehicle: %@.
Will stop charge stream for vehicle: %@.
SoC Streaming couldn't find vehicle for state: %@ in observed vehicles: %@
SoC Streaming will update vehicle: %@ with state: %@
accessoryUpdatedWithVehicle: not connected to an iAP2 EV vehicle. Will remove any unpaired vehicles if possible
accessoryUpdatedWithVehicle: accessory is connected to a disambiguated non-EV accessory.
accessoryUpdatedWithVehicle: accessory is connected to a vehicle that is not an EV and was not disambiguated. 
accessoryUpdatedWithVehicle: iAP2 onboarding is disabled. The dataCoordinator won't save the iAP2 vehicle.
accessoryUpdatedWithVehicle: accessory did update vehicle. Will update garage
_loadIapVehicles: iap2 onboarding is disabled. Will not load iap2 vehicles.
_loadIapVehicles: Loading iAP2 vehicles.
Will remove an existing unpaired iap2 vehicle: %@
Haven't found any iAP2 unpaired vehicles upon disconnecting from iAP2.
OEMAppsUpdated, reseting unpairedVehicles, updating apps from %@ to %@.
Started pulling all vehicles for apps: %@.
PullAllVehicles
Finished pulling all vehicles for apps: %@.
Tried to get SoC for vehicle, that is not saved in the garage.
getLatestStateOfVehicle: called for a vehicle (%@) that doesn't have a stateProvider. Make sure that the paired app is installed, otherwise there might be an issue in the VG logic.
getLatestStateOfVehicle: using %@ to fetch SoC.
getLatestStateOfVehicle: Tried to fetch SoC for %@, but failed with error: %@.
getLatestStateOfVehicle: Fetched latest vehicle state: %@
Color does not have 4 components
Color is not in RGB colorspace
Allowlisting enabled, will initialize model filter
Allowlisting disabled, will not initialize model filter
init: created new VGExternalAccessory: %p
dealloc: deallocating accessory: %p
init: will use accessory: %@ supportsCarPlay: %@, supportsWirelessCarPlay: %@. supportsUSBCarPlay: %@
init: skipping accessory as it doesn't support CarPlay: %p %@
_checkCurrentAccessoriesAndAttachIfNeeded: currently connected to %lu CarPlay accessories
_addNewCarPlayAccessory: tried to add an accessory, but it has an invalid key. %@, %lu
_addNewCarPlayAccessory: trying to add an accessory, it is already tracked -> replacing, name: %@ key: %@
_addNewCarPlayAccessory: added a new accessory: %@ key: %@.
_removeCarPlayAccessory: tried to remove an accessory that has an invalid key. %@, %lu
_removeCarPlayAccessory: tried to remove an accessory that was not tracked. %@, %@
_removeCarPlayAccessory: removing accessory with key. %@, %@
_removeCarPlayAccessory: currently not tracking any accessories. clearing tracked vehicle state
_isAccessoryTracked: tried to check status of accessory with an invalid key. %@ %lu
_accessoryDidConnect: received an unsupported accessory: %p, %@
_accessoryDidConnect: new accessory: %p, %@, supportsCarPlay: %@, supportsWirelessCarPlay: %@. supportsUSBCarPlay: %@
_accessoryDidDisconnect: disconnected accessory that is not tracked %@
_accessoryDidDisconnect: will disconnect a tracked accessory: %@
_accessoryDidUpdateVehicle: accessory %@ does not support CarPlay, ignoring update
_accessoryDidUpdateVehicle: received a vehicle update update for accessory %@ with userInfo: %@
_accessoryDidUpdateVehicle: accessory %@ that supports CarPlay sent us a vehicle update, but before a `didConnect` message. We'll start tracking it now as a fallback.
_updateFromVehicleInfo: tried to update from a nil vehicleInfo.
_updateFromVehicleInfo: did update accessoryState: %@ from vehicleInfo: %@
updated _currentVehicle: %@
notifying delegate with vehicle: %@
Connected vehicle is not allowlisted. consumption modelId: %@, charging modelId: %@, firmwareId: %@, year: %@, model: %@
Failed to parse arguments: %@
Failed to parse model id from arguments: %@
Vehicle does not have valid consumption or charging arguments. consumption: %@, charging: %@
Currently connected vehicle is an EV, but does is not allow listed. Onboarding won't be allowed
Either accessory is not connected or we don't have any _currentVehicleState yet.
SoC requested for %@ but the currently connected vehicle is %@
data is nil. Error parsing manifest resource: %@ while network was reachable.
data is nil. Error parsing manifest resource: %@ because network was not reachable.
Error parsing manifest resource. error: %@
Unexpected class type for allowlist payload: %@
Failed to recreate a dictionary from serialized arguments: %@, with error: %@, dictionary: dictionary: %@
Failed to recreate a dictionary from serialized arguments (wrong keys): %@, dictioanary: %@
Tried to get a string version of a multiple option bitmask: %lu. This is not supported.
isSignificantlyDifferentFromVehicleState: -> NO. chargingArgumentsAreDifferent: %@, consumptionArgumentsAreDifferent: %@
isSignificantlyDifferentFromVehicleState: -> %@.
Failed to load origin from protoOrigin: %@
Failed to load a single connector type from protoConnectorType: %@
Failed to persist origin from vgOrigin: %@
Failed to persist a single connector type from vgConnectorType: %@
Parsing of allowlist failed. Payload was nil.
Parsing of allowlist failed. allowlistedModelIds were in an unexpected format: %@
Encountered a non-number in payload: %@
Parsing of denylist failed. denylistedConfigurations were in an unexpected format: %@
Encountered a non-dictionary in payload: %@
Encountered an invalid value under key: %@ in payload: %@
Encountered malformed configuration: %@. Will skip it.
Encountered a configuration without any parameters: %@. Will skip it.
Adding new entry to iAP2 denylist: %@
allowsVehicleWithModelId: denied modelId: %@ as it is not in the allowlist: %@
allowsVehicleWithModelId: denied entry: %@ as it matches entry from denylist: %@
Creating new virtualGarage: %p with persister: %p
Failed to load virtual garage with error: %@
LoadVehicles
Garage did finish loading initial vehicles.
Deallocating virtualGarage: %p with persister: %p
Didn't find vehicle with identifier: %@ in vehicles: %@.
_persisterHasStaleStateForVehicle: Didn't find persisted vehicle for vehicle: %@
_updateDataCoordinatorAvailability: %@, evRoutingEnabled: %@, vehiclesLoaded: %@
Instantiated a new _dataCoordinator %@ for VirtualGarage
Will not use dataCoordinator, EV routing isn't enabled
addVehicle: tried to add a vehicle that is already in the garage.
Added vehicle: %@, vehicles.count: %lu
Default selecting new vehicle: %@
_saveVehicle: Vehicle with ID: %@ wasn't found, it was removed before _save was called. vehicles: %@
_saveVehicle: Vehicle was found, will replace it in local array: %@
_saveVehicle: Will force sync chargeState because persister has stale info for vehicle: %@
removeVehicle: tried to remove a vehicle that is not in the garage.
Removed vehicle: %@, vehicles.count: %lu
selectVehicle: tried to select a vehicle that is not in the garage.
Selected vehicle: %@
Tried to use a method (%s) that requires a dataCoordinator.
_onboardVehicle will onboard vehicle %@, but we didn't find exactly one match in unpairedVehicles: %@
Onboarding vehicle: %@ in virtual garage.
Unpairing vehicle: %@
Garage will not start continuous updates, because there is no selected vehicle
Garage will start continuous updates for vehicle: %@
Garage will end continuous updates.
EV Routing not enabled. Will strip EV vehicles from VG.
There are no queued completion handlers, nothing to do.
Will execute %lu queued completionHandlers with garage: %@.
Finished executing %lu queued completionHandlers
Will check for vehicles (%lu) that no longer have their paired apps.
The OEM app on the primary device was uninstalled. Will remove vehicle: %@
Tried to update local vehicles with nil vehicles.
Discarding vehicle with stale charge state: %@ in favor of: %@
Force updating local vehicles: %@, with following vehicles: %@
Forced vehicle update removed the selected vehicle. Will deselect
GeoConfig_EVRoutingUseMapsSyncLiveUpdates is not set, we're ignoring live updates.
garagePersister: %@ wants to update vehicles with vehicles: %@
GEOConfigs changed, isEVRoutingEnabled: %@
DataCoordinator wants to save vehicle: %@
DataCoordinator updated installed apps. Will try to remove vehicles that have no OEM app.
Garage hasn't finished loading vehicles from persistor. Once finished, reply block will be executed
GetVehicleState
Unable to fetch a state for vehicle. Error: %@
Failed to get the latest state of vehicle: %@. with error: %@
Received the latest state of vehicle: %@ through virtualGarageGetLatestStateOfVehicle. Will save the state.
Received the latest state of vehicle: %@ through virtualGarageGetLatestStateOfVehicle, but the underlying vehicle was removed from the garage before the callback returned.
Updated vehicle: %@ is the same as the existing one. Not saving the state.
EVRoutingSynchronousVehicleStateUpdate is on, will fetch SOC and wait before calling completion block.
EVRoutingSynchronousVehicleStateUpdate is off, getting latest SoC from what is currently in the garage.
No allowlisted apps. Returning.
Encountered a bundle that is malformed: %@
Error parsing manifest resource. Not having any allowlisted apps is a grave error.
Won't create an LSAppRecord for bundleId: %@ as we already have this app saved.
Failed making LSApplicationRecord for '%@': %@. App is not installed
allowlisted application '%@' doesn't support our required intents: %@
Added application: %@
Removed application: %@
FindOEMApplications
Allowlisted formula IDs do not contain the formula in the Consumption Arguments. Current formula: %@, Allowed formula IDs: %@
Failed to get an updateDate from components: %@
Assuming vehicle state response: %{private}@ was created now
Listing cars received a non-Success response code: %ld
_vehiclesFromListCarsIntentResponse color are: %@
Failed to extract power for connector type: %lu, from car array: %@.
Constructed powerByConnector dictionary: %@
Application %@ is not enabled returning no results
listCarsIntentSignpost
Returning because of a connection error: %@
strongSelf3 went away in %s line %d
Returning because of an underlying error in the connection: %@
Application %@ is not enabled returning existing SoC
stateOfChargeIntentSignpost
stateOfChargeIntent
error in handleIntentWithCompletionHandler: %@
Unsupported response code: %@
Received a vehicle state: %@ that doesn't apply to the provided vehicle: %@
getStateOfChargeForVehicle fetched %@
Started a new Intent %@ with %@
%@ starting updates
Connection error while receiving updates: %@
%@ stopping updates
strongChargeStreamingDelegate went away in %s line %d
%@ received INGetCarPowerLevelStatusResponse live update: %@
Received stream callback when disabled
Unexpected streaming response class. Received an %@ instance
chargeStreamingDelegate does not implement required method vehicleStateUpdated:
Unsupported response code: %ld
Formula from the response is invalid
Response failed to deserialize to a valid VGVehicleState %@
Creating connection for OEMApp: (%@), with timeout %.2f
Connection for OEMApp: (%@), timed out with error: %@
Tried to serialize nil arguments.
Failed to serialize VGVehicleArguments into a string. arguments: %@, error: %@
Serializing arguments as: %@
Started listening for connections: %@
Stopped virtualGarageServer
VGServer: GEOConfigs changed. VirtualGarageIsEnabled: %@
Unauthorized access from: %@ to VG XPC service from connection: %@
Service connection interrupted
Service connection invalidated
strongConnection went away in %s line %d
%s %@ %@
Tried to openForClient:, but virtual garage isn't enabled
Tried to open connection twice for client: %@.
Will openForClient: %@
Will closeForClient: %@
Tried to closeForClient: (%@) that wasn't in _clients and VG was enabled. Check if the feature flag changed during run time. If it hasn't, there is probably in issue in your open/close logic.
VGVirtualGarageService opening connection
Server connection interrupted
Server connection invalidated
VGVirtualGarageService closing connection
Registering observer: %@
Unregistering observer: %@
VirtualGarage isn't enabled, service isn't able to call to server.
%s %@
virtualGarageSetAssumesFullCharge: is only supported on macOS
%s %@, %@
VGVehicleDeduper
VGExtras
VGVehicle
NSCopying
NSSecureCoding
NSCoding
VGVehicleStateStorage
VGVehicleStateProviding
NSObject
VGDataCoordinator
VGOEMApplicationFinderUpdates
VGExternalAccessoryUpdating
VGOEMAppSOCStreaming
CarPlaySupport
VGExternalAccessoryState
VGExternalAccessory
VGVehicleState
VGDenylistEntry
VGExternalAccessoryModelFilter
VGVirtualGarage
VGDataCoordinatorDelegate
VGVirtualGaragePersistingDelegate
GEOConfigChangeListenerDelegate
VGVirtualGarageActions
VGOEMApplicationFinder
LSApplicationWorkspaceObserverProtocol
VGOEMApplicationFinding
VGOEMApplication
INIntentResponseObserver
VGVirtualGarageObserver
VGVirtualGarageServer
NSXPCListenerDelegate
VGVirtualGarageDelegate
VGVirtualGarageService
OEMAppsUpdated:
JSONObjectWithData:options:error:
T@"<VGExternalAccessoryUpdating>",W,N,V_accessoryUpdateDelegate
T#,R
T@"NSDate",R,C,N,V_creationDate
T@"<VGOEMAppSOCStreaming>",W,N,V_chargeStreamingDelegate
T@"NSString",C,N,V_licensePlate
T@"<VGOEMApplicationFinderUpdates>",W,N,V_delegate
T@"NSString",R,C,N,V_identifier
T@"<VGVirtualGarageObserver>",W,N,V_observer
Tq,R,N,V_origin
T@"LSApplicationRecord",R,N,V_applicationRecord
_accessoryState
T@"NSArray",&,N,V_denylist
_currentVehicle
T@"NSArray",R,C,N
_isolationQueue
T@"NSDate",R,C,N,V_lastStateUpdateDate
_models
T@"NSDictionary",&,N,V_allowlist
_origin
T@"NSDictionary",R,N,V_powerByConnector
_saveVehicle:syncAcrossDevices:
T@"NSMeasurement",&,N,V_currentEVRange
_unpairVehicle:
T@"NSMeasurement",&,N,V_maxEVRange
allKeys
T@"NSMeasurement",R,N,V_currentBatteryCapacity
closeForClient:
T@"NSMeasurement",R,N,V_maxBatteryCapacity
copyTo:
T@"NSMeasurement",R,N,V_minBatteryCapacity
dealloc
T@"NSMutableDictionary",&,N,V_applications
hasDateOfUpdate
T@"NSNumber",N,V_supportedConnectors
initWithIntent:
T@"NSNumber",R,N,V_batteryPercentage
isProxy
T@"NSSet",&,N,V_disabledAppIdentifiers
numberWithBool:
T@"NSString",&,N,V_colorHex
release
T@"NSString",&,N,V_iapIdentifier
selectedVehicle
T@"NSString",&,N,V_model
setDisplayName:
T@"NSString",&,N,V_pairedAppIdentifier
setWithObjects:
T@"NSString",&,N,V_siriIntentsIdentifier
underlyingError
T@"NSString",C,N,V_colorHex
.cxx_destruct
StringAsOrigin:
StringAsActiveConnector:
T@"NSArray",R,N
T@"<VGOEMAppSOCStreaming>",W,N
T@"NSString",&,N,V_manufacturer
T@"<VGOEMApplicationFinderUpdates>",W,N
T@"NSString",C,N,V_lprPowerType
T@"<VGVirtualGarageDelegate>",W,N,V_delegate
TB,N,GisEnabled
T@"LSApplicationRecord",R,N
_VGChargingConnectorTypeOptionsFromINCarChargingConnectorTypes:
T@"NSArray",&,N,V_allowedFormulaIDs
_currentEVRange
T@"NSArray",&,N,V_modelIdAllowlist
_garage
T@"NSData",&,N,V_pairedAppInstallSessionIdentifier
_lprVehicleType
T@"NSDate",R,N,V_dateOfUpdate
_openConnection
T@"NSDictionary",R,C,N,V_powerByConnector
_refreshStateForTrackedVehicles
T@"NSMeasurement",&,N,V_currentBatteryCapacity
_startContinuousUpdatesIfNeeded
T@"NSMeasurement",&,N,V_maxBatteryCapacity
activeConnector
T@"NSMeasurement",&,N,V_minBatteryCapacity
applicationsDidFailToUninstall:
T@"NSMeasurement",R,N,V_currentEVRange
containsObject:
T@"NSMeasurement",R,N,V_maxEVRange
currentCalendar
T@"NSMutableArray",&,N,V_activeConnections
enabled
T@"NSNumber",&,N,V_batteryCharge
initWithFormat:
T@"NSNumber",R,N,V_activeConnector
isLessThanOrEqualToMeasurement:
T@"NSObject<OS_dispatch_queue>",&,N,V_observerQueue
T@"NSString",&,N,V_chargingArguments
originAsString:
T@"NSString",&,N,V_consumptionArguments
removeObserver:
T@"NSString",&,N,V_identifier
T@"NSString",&,N,V_name
setRequiresTCC:
T@"NSString",&,N,V_pairedAppInstallDeviceIdentifier
supportsCarPlay
T@"NSString",&,N,V_year
unregisterForLocalNotifications
T@"NSString",C,N,V_displayName
T@"NSString",C,N,V_lprVehicleType
T@"NSString",C,V_activeVehicleIdentifier
T@"NSString",R,C
T@"NSString",R,C,N,V_headUnitBluetoothIdentifier
T@"NSString",R,C,N,V_headUnitIdentifier
T@"NSString",R,C,N,V_manufacturer
T@"NSString",R,C,N,V_model
T@"NSString",R,C,N,V_year
T@"NSString",R,N
T@"NSString",R,N,V_chargingArguments
T@"NSString",R,N,V_consumptionArguments
T@"NSString",R,N,V_identifier
T@"NSXPCConnection",&,N,V_connection
T@"NSXPCListener",&,N,V_listener
T@"VGVehicle",R,N
T@"VGVehicleState",R,N,V_currentVehicleState
T@"VGVirtualGarage",&,N,V_garage
TB,N
TB,N,GisEnabled,V_enabled
TB,N,V_hostsVirtualGarage
TB,N,V_isCharging
TB,N,V_shouldAssumeFullCharge
TB,R
TB,R,N
TB,R,N,V_isCharging
TQ,N,V_supportedConnectors
TQ,R
TQ,R,N,V_activeConnector
Td,N,V_batteryPercentage
Td,N,V_currentBatteryCapacity
Td,N,V_currentEVRange
Td,N,V_dateOfUpdate
Td,N,V_maxBatteryCapacity
Td,N,V_maxEVRange
Td,N,V_minBatteryCapacity
Ti,N,V_activeConnector
Ti,N,V_origin
UTF8String
UUID
UUIDString
_VGChargingConnectorTypeOptionFromINCarChargingConnectorType:
_accessory
_accessoryDidConnect:
_accessoryDidDisconnect:
_accessoryDidUpdateVehicle:
_accessoryUpdateDelegate
_activeConnections
_activeConnector
_activeVehicleIdentifier
_addNewCarPlayAccessory:
_addOEMApplicationForApplicationRecordIfNeeded:
_addVehicle:
_allowedFormulaIDs
_allowlist
_allowlistPayload
_applicationFinder
_applicationForVehicle:
_applicationRecord
_applicationRecordForBundleIdentifier:
_applicationRecordForVehicle:
_applications
_batteryCharge
_batteryPercentage
_bluetoothIdentifier
_callbackQueue
_canBeUpdatedFromState:
_chargeStreamingConnection
_chargeStreamingDelegate
_chargingArguments
_checkAvailableAccessoriesAndAttachIfNeeded
_cleanUp
_clearActiveVehicleIdentifierIfNeeded:
_clients
_clientsIsolater
_closeConnection
_colorHex
_connection
_connectionQueue
_connectionWithIntent:
_consumptionArguments
_createChargeStreamingConnectionIfNeededForVehicle:
_creationDate
_currentBatteryCapacity
_currentStatePassesEVRoutingRequirements
_currentVehicleState
_dataCoordinator
_dateOfUpdate
_delegate
_delegateQueue
_denylist
_disabledAppIdentifiers
_displayName
_enabled
_endContinuousUpdates
_executeQueuedCompletionHandlersIfNeeded
_finishedLoadingVehicles
_firmwareId
_firmwareIds
_forceUpdateWithVehicles:
_garageCopy
_has
_headUnitBluetoothIdentifier
_headUnitIdentifier
_hostsVirtualGarage
_iapIdentifier
_identifier
_identifierForVehicleStateOrigin:
_indexOfVehicleInUnpairedVehicles:
_initializeAllowAndDenylists
_invalidateRefreshTimer
_isAccessoryTracked:
_isCharging
_isConnectedToCarPlayAccessory
_isConnectedToElectricVehicle
_isConnectedVehicleAllowlisted
_isDataCoordinatorRunning
_isValidConsumptionModelForResponse:
_lastStateUpdateDate
_licensePlate
_listener
_loadAllOEMVehiclesForApps:completion:
_loadIapVehicles
_lprPowerType
_manufacturer
_mapsDisplayName
_maxBatteryCapacity
_maxEVRange
_minBatteryCapacity
_model
_modelFilter
_modelId
_modelIdAllowlist
_modelIdFromArguments:
_name
_notifyDelegateWithCurrentVehicle
_notifyObserversGarageDidUpdateVehicles
_observedVehicles
_observer
_observerQueue
_observers
_oemAppForChargeStreamForVehicle:
_onboardVehicle:
_pairedAppIdentifier
_pairedAppInstallDeviceIdentifier
_pairedAppInstallSessionIdentifier
_persister
_persisterHasStaleStateForVehicle:
_powerByConnector
_powerByConnectorDictionaryFromCar:
_queue
_queuedGetGarageCompletionHandlers
_removeCarPlayAccessory:
_removeOEMApplicationForBundleIdentifier:
_removeUnpairedIapVehicleIfNeeded
_removeVehicleWithIdentifier:
_removeVehiclesWithUninstalledAppsIfNeeded
_requiredIntents
_saveOnboardingInfoForVehicle:
_selectVehicleWithIdentifier:
_selectedVehicleIdentifier
_setDataCoordintorRunning:
_setLaunchId:
_setQueue:
_setVehicleState:
_setupTimerIfNeeded
_setupVirtualGarageHostingIfNeeded
_shouldAssumeFullCharge
_siriIntentsIdentifier
_startChargeStreamForVehicle:
_stopChargeStreamForVehicle:
_storage
_supportedConnectors
_trackedAccessoriesByConnectionId
_unpairedVehicles
_updateDataCoordinatorAvailability
_updateFromVehicleInfo:
_updateGarageWithVehicle:syncAcrossDevices:
_updateStateOfChargeForVehicle:syncAcrossDevices:completion:
_updateWithVehicleInfo:
_updateWithVehicleState:
_vehicleByUpdatingWithVehicle:
_vehicleForCurrentState
_vehicleMatchingVehicle:inArray:
_vehicleStateForCurrentState
_vehicleStateFromResponse:error:
_vehicleStateFromStorage:
_vehicleStateProviderForVehicle:
_vehicleStateRefreshInterval
_vehicleStateRefreshTimer
_vehicleWithIdentifier:
_vehicles
_vehiclesFromListCarsIntentResponse:
_vg_supportsCarPlay
_workQueue
_year
_years
accessoryUpdateDelegate
accessoryUpdatedWithVehicle:
actionForAddingNewVehicle:withExistingGarageVehicles:andUnpairedVehicles:
activeConnections
activeConnectorAsString:
activeVehicleIdentifier
addObject:
addObserver:
addObserver:selector:name:object:
addVehicle:
allObjects
allValues
allocWithZone:
allowedFormulaIDs
allowlist
allowsVehicleWithModelId:firmwareId:year:model:
appInfoWithApplicationRecord:
appendFormat:
appendString:
applicationIconDidChange:
applicationInstallsArePrioritized:arePaused:
applicationInstallsDidCancel:
applicationInstallsDidChange:
applicationInstallsDidPause:
applicationInstallsDidPrioritize:
applicationInstallsDidResume:
applicationInstallsDidStart:
applicationInstallsDidUpdateIcon:
applicationRecord
applicationStateDidChange:
applications
applicationsDidChangePersonas:
applicationsDidFailToInstall:
applicationsDidInstall:
applicationsDidUninstall:
applicationsWillInstall:
applicationsWillUninstall:
array
arrayWithCapacity:
arrayWithObjects:count:
autorelease
batteryCharge
batteryPercentage
batteryPercentageBasedOfCapacity
bluetoothIdentifier
boolValue
bundleIdentifier
canUseVirtualGarageXPCService
carIdentifier
cars
chargePercentRemaining
chargeStreamingDelegate
charging
chargingArguments
chargingFormulaArguments
class
code
color
colorHex
combinedDisplayName
compare:
componentsJoinedByString:
componentsSeparatedByString:
conformsToProtocol:
connectedAccessories
connection
connectionID
consumptionArguments
consumptionFormulaArguments
copy
copyWithZone:
count
countByEnumeratingWithState:objects:count:
creationDate
currentBatteryCapacity
currentEVRange
currentVehicleState
dataCoordinator:didUpdateUnpairedVehicles:
dataCoordinator:wantsToUpdateVehicle:syncAcrossDevices:
dataCoordinatorDidUpdateInstalledApps:
dataForResourceWithName:fallbackBundle:
dataUsingEncoding:
dataWithJSONObject:options:error:
databaseWasRebuilt
date
dateFromComponents:
dateOfLastStateUpdate
dateOfUpdate
dateOfVehicleIngestion
dateWithTimeIntervalSinceReferenceDate:
debugDescription
decodeBoolForKey:
decodeIntegerForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
defaultCenter
defaultWorkspace
delegate
denylist
description
deviceIdentifier
deviceManagementPolicyDidChange:
dictionary
dictionaryRepresentation
dictionaryWithObjects:forKeys:count:
disabledAppIdentifiers
displayName
displayedBatteryPercentage
distanceRemainingElectric
doubleValue
encodeBool:forKey:
encodeInteger:forKey:
encodeObject:forKey:
encodeWithCoder:
endAllContinuousUpdates
enumerateObjectsUsingBlock:
enumeratorWithOptions:
errorCode
errorWithDomain:code:userInfo:
filteredArrayUsingPredicate:
findOEMApplications
finishOnboardingVehicle:
firmwareRevision
firstObject
forceFetchAllVehicles
garage
garagePersister:wantsToUpdateVehicles:
getLatestStateOfVehicle:withReply:
getStateOfChargeForVehicle:completion:
getVehicleInfoData
handleIntentWithCompletionHandler:
hasActiveConnector
hasBatteryPercentage
hasChargingArguments
hasConsumptionArguments
hasCurrentBatteryCapacity
hasCurrentEVRange
hasIsCharging
hasMaxBatteryCapacity
hasMaxEVRange
hasMinBatteryCapacity
hasOrigin
hasPairedAppInstallDeviceIdentifier
hasPairedAppInstallSessionIdentifier
hash
headUnit
headUnitBluetoothIdentifier
headUnitIdentifier
headUnitMacAddress
helperPlaceholdersInstalled:
helperPlaceholdersUninstalled:
hostsVirtualGarage
iAP2Identifier
iapIdentifier
identifier
indexOfObjectPassingTest:
init
initWithApplicationFinder:externalAccessory:delegate:
initWithBundleIdentifier:allowPlaceholder:error:
initWithCapacity:
initWithCarName:
initWithCoder:
initWithData:
initWithData:encoding:
initWithDisplayName:year:manufacturer:model:colorHex:headUnitIdentifier:headUnitBluetoothIdentifier:supportedConnectors:powerByConnector:
initWithDoubleValue:unit:
initWithGaragePersister:
initWithIdentifier:applicationRecord:
initWithIdentifier:dateOfUpdate:origin:batteryPercentage:currentEVRange:maxEVRange:minBatteryCapacity:currentBatteryCapacity:maxBatteryCapacity:consumptionArguments:chargingArguments:isCharging:activeConnector:
initWithIdentifier:displayName:year:manufacturer:model:colorHex:licensePlate:lprVehicleType:lprPowerType:
initWithLicensePlate:lprVehicleType:lprPowerType:
initWithMachServiceName:
initWithMachServiceName:options:
initWithMapsSyncVehicle:
initWithModelId:firmwareIds:years:models:
initWithObjects:
initWithOptions:capacity:
initWithProtocol:queue:
initWithVocabularyIdentifier:spokenPhrase:pronunciationHint:
installSessionIdentifier
intent
intentResponseDidUpdate:
intentResponseDidUpdate:withSerializedCacheItems:
interfaceWithProtocol:
invalidate
isCharging
isConnected
isConnectedToAccessoryWithIdentifier:
isConnectedToVehicle:
isEnabled
isEqual:
isEqualToMeasurement:
isEqualToNumber:
isEqualToString:
isGreaterThanMeasurement:
isGreaterThanOrEqualToMeasurement:
isKindOfClass:
isLessThanMeasurement:
isMemberOfClass:
isNetworkReachable
isPureElectricVehicle
isSignificantlyDifferentFromVehicleState:
isSubsetOfSet:
isSupersetOfEntry:
kilometers
kilowattHours
lastStateUpdateDate
length
licensePlate
listCarsWithCompletion:
listener
listener:shouldAcceptNewConnection:
loadVehiclesWithCompletion:
localizedDescription
lprPowerType
lprVehicleType
macAddress
make
manufacturer
maxBatteryCapacity
maxEVRange
maximumBatteryCapacity
maximumDistanceElectric
maximumPowerForChargingConnectorType:
measurementByConvertingToUnit:
mergeFrom:
messageTargetWithErrorReply:
minBatteryCapacity
minimumBatteryCapacity
model
modelIdAllowlist
mutableCopy
mutableCopyWithZone:
name
networkUsageChanged:
nextObject
numberWithDouble:
numberWithUnsignedInteger:
objectAtIndex:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
observeLaunchProhibitedApps
observer
observerQueue
openForClient:
origin
pairToIapIdentifier:bluetoothIdentifier:
pairedAppIdentifier
pairedAppInstallDeviceIdentifier
pairedAppInstallSessionIdentifier
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
persistedVehicleForVehicle:
pluginsDidInstall:
pluginsDidUninstall:
pluginsWillUninstall:
powerByConnector
powerPerConnectors
predicateWithBlock:
processIdentifier
readFrom:
registerForLocalNotifications
registerObserver:
remoteObjectProxyWithErrorHandler:
removeAllObjects
removeObject:
removeObjectAtIndex:
removeObjectForKey:
removeVehicle:
replaceObjectAtIndex:withObject:
reset
respondsToSelector:
resume
resumeWithCompletionHandler:
retain
retainCount
saveVehicle:syncAcrossDevices:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
selectedVehicleIdentifier
self
serialNumber
setAccessoryUpdateDelegate:
setActiveConnections:
setActiveConnector:
setActiveVehicleIdentifier:
setAllowedFormulaIDs:
setAllowlist:
setApplications:
setBatteryCharge:
setBatteryPercentage:
setChargeStreamingDelegate:
setChargingArguments:
setClasses:forSelector:argumentIndex:ofReply:
setColorHex:
setConnection:
setConsumptionArguments:
setCurrentBatteryCapacity:
setCurrentEVRange:
setDateOfUpdate:
setDelegate:
setDenylist:
setDisabledAppIdentifiers:
setEnabled:
setExportedInterface:
setExportedObject:
setGarage:
setHasActiveConnector:
setHasBatteryPercentage:
setHasCurrentBatteryCapacity:
setHasCurrentEVRange:
setHasDateOfUpdate:
setHasIsCharging:
setHasMaxBatteryCapacity:
setHasMaxEVRange:
setHasMinBatteryCapacity:
setHasOrigin:
setHostsVirtualGarage:
setIapIdentifier:
setIdentifier:
setInterruptionHandler:
setInvalidationHandler:
setIsCharging:
setLicensePlate:
setListener:
setLprPowerType:
setLprVehicleType:
setManufacturer:
setMaxBatteryCapacity:
setMaxEVRange:
setMinBatteryCapacity:
setModel:
setModelIdAllowlist:
setName:
setObject:forKey:
setObject:forKeyedSubscript:
setObserver:
setObserverQueue:
setOrigin:
setPairedAppIdentifier:
setPairedAppInstallDeviceIdentifier:
setPairedAppInstallSessionIdentifier:
setRemoteObjectInterface:
setRequestTimeoutInterval:
setSelectedVehicleIdentifier:
setShouldAssumeFullCharge:
setSiriIntentsIdentifier:
setSupportedConnectors:
setTimeoutHandler:
setWithArray:
setYear:
sharedAccessoryManager
sharedManager
sharedNetworkObserver
sharedServer
sharedService
shouldAssumeFullCharge
shouldUnpairVehicle:
siriIntentsIdentifier
standardUserDefaults
startContinuousUpdatesForVehicle:
startSendingChargeUpdatesForVehicle:
startSendingUpdatesToObserver:
startWithPersister:
stop
stopSendingChargeUpdatesForVehicle:
stopSendingUpdates
stringByAppendingString:
stringByReplacingOccurrencesOfString:withString:
stringValue
stringWithFormat:
superclass
supportedChargingConnectors
supportedConnectors
supportedIntents
supportsSecureCoding
supportsUSBCarPlay
supportsWirelessCarPlay
timeIntervalSinceDate:
timeIntervalSinceReferenceDate
unarchivedObjectOfClasses:fromData:error:
unit
unpairVehicle:
unpairedVehicles
unregisterObserver:
unsignedIntegerValue
userInfo
valueChangedForGEOConfigKey:
valueForEntitlement:
vehicleIdentifier
vehicleInfoInitialData
vehicleStateUpdated:
vehicles
virtualGarage:didUpdateUnpairedVehicles:
virtualGarageAddVehicle:
virtualGarageDidUpdate:
virtualGarageEndContinuousUpdates
virtualGarageForceFetchAllVehicles
virtualGarageGetGarageWithReply:
virtualGarageGetLatestStateOfVehicleWithIdentifier:syncAcrossDevices:withReply:
virtualGarageGetListOfUnpairedVehiclesWithReply:
virtualGarageOnboardVehicle:
virtualGarageRemoveVehicle:
virtualGarageSaveVehicle:
virtualGarageSelectVehicle:
virtualGarageSetAssumesFullCharge:
virtualGarageStartContinuousUpdatesIfNeeded
watts
writeTo:
year
zone
q40@0:8^@16@24@32
@32@0:8@16@24
B24@0:8@16
q24@0:8@16
B16@0:8
@24@0:8^{_NSZone=}16
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@88@0:8@16@24@32@40@48@56@64Q72@80
@40@0:8@16@24@32
@88@0:8@16@24@32@40@48@56@64@72@80
v32@0:8@16@24
@24@0:8q16
@16@0:8
Q16@0:8
d16@0:8
v24@0:8Q16
v16@0:8
@"NSString"
@"NSDate"
@"NSDictionary"
@"VGVehicleState"
@"NSData"
v24@0:8d16
v20@0:8B16
i16@0:8
v20@0:8i16
@20@0:8i16
i24@0:8@16
{?="batteryPercentage"b1"currentBatteryCapacity"b1"currentEVRange"b1"dateOfUpdate"b1"maxBatteryCapacity"b1"maxEVRange"b1"minBatteryCapacity"b1"activeConnector"b1"origin"b1"isCharging"b1}
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@?16
v32@0:8@16@?24
v24@0:8@?<v@?@"NSArray"@"NSError">16
v32@0:8@"VGVehicle"16@?<v@?@"VGVehicleState"@"NSError">24
v24@0:8@"NSArray"16
v24@0:8@"VGVehicle"16
v24@0:8@"VGVehicleState"16
v28@0:8@16B24
v36@0:8@16B24@?28
Q24@0:8@16
@"<VGDataCoordinatorDelegate>"
@"NSObject<OS_dispatch_queue>"
@"<VGOEMApplicationFinding>"
@"NSArray"
@"VGExternalAccessory"
@"NSMutableArray"
@"NSTimer"
@"NSMutableSet"
@"NSMeasurement"
@"NSNumber"
B24@0:8@"VGVehicle"16
B24@0:8@"NSString"16
@"NSMutableDictionary"
@"VGExternalAccessoryState"
@"VGVehicle"
@"VGExternalAccessoryModelFilter"
@"<VGExternalAccessoryUpdating>"
@116@0:8@16@24q32@40@48@56@64@72@80@88@96B104Q108
q16@0:8
@48@0:8@16@24@32@40
B48@0:8@16@24@32@40
v36@0:8@16@24B32
v36@0:8@"VGDataCoordinator"16@"VGVehicle"24B32
v32@0:8@"VGDataCoordinator"16@"NSArray"24
v24@0:8@"VGDataCoordinator"16
@"VGVehicle"16@0:8
@"NSArray"16@0:8
v32@0:8@"<VGVirtualGaragePersisting>"16@"NSArray"24
v32@0:8{?=I^v}16
v24@0:8@?<v@?@"VGVirtualGarage"@"NSError">16
v36@0:8@"NSString"16B24@?<v@?@"VGVehicle"@"NSError">28
@"VGDataCoordinator"
@"<VGVirtualGaragePersisting>"
@"<VGVirtualGarageDelegate>"
v32@0:8@"NSArray"16@"NSArray"24
@"<VGOEMApplicationFinderUpdates>"16@0:8
v24@0:8@"<VGOEMApplicationFinderUpdates>"16
@"NSSet"
@"<VGOEMApplicationFinderUpdates>"
v32@0:8@"INIntentResponse"16@"NSSet"24
v24@0:8@"INIntentResponse"16
@32@0:8@"NSString"16@"LSApplicationRecord"24
@"LSApplicationRecord"16@0:8
@"<VGOEMAppSOCStreaming>"16@0:8
v24@0:8@"<VGOEMAppSOCStreaming>"16
@32@0:8@16^@24
@"INCExtensionConnection"
@"LSApplicationRecord"
@"<VGOEMAppSOCStreaming>"
v24@0:8@"VGVirtualGarage"16
v32@0:8@"VGVirtualGarage"16@"NSArray"24
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"<VGVirtualGarageObserver>"
@"VGVirtualGarage"
@"NSXPCListener"
@24@0:8@?16
@"NSHashTable"
@"geo_isolater"
@"GEOObserverHashTable"
@"NSXPCConnection"
@(#)PROGRAM:VirtualGarage  PROJECT:Navigation-1
"(.4:@FLR\ekquy
=N_p
EVRoutingUseMapsSyncLiveUpdates
EVRoutingKeyNameForModelID
model_id
EVRoutingManifestKeyNameForSiriAllowlist
siri_allowlist
EVRoutingManifestKeyNameForSiriBundleID
app_bundle_id
EVRoutingManifestKeyNameForSiriAllowListedModelIDs
model_ids
EVRoutingManifestKeyNameForIApAllowlist
iap2_allowlist
EVRoutingManifestKeyNameForIApDenylist
iap2_denylist
EVRoutingManifestKeyNameForIApDenyListedModelID
EVRoutingManifestKeyNameForIApDenyListedFirmwareID
firmware_id
EVRoutingManifestKeyNameForIApDenyListedModel
model
EVRoutingManifestKeyNameForIApDenyListedYear
year
EVRoutingResourceNameForAllowAndDenylists
supportedEVInfo.json
EVRoutingForceShowLastSyncDate
EVRoutingOEMAppPullInterval
EVRoutingIntentsRequestTimeout
EVRoutingStreamUpdatesDuringNav
EVRoutingEnableAllowListing
EVRoutingDisabledApplications
EVRoutingSynchronousVehicleStateUpdate
EVRoutingEnableIAP2Onboarding
EVRoutingUseCarDisplaySimIdentifier
EVRoutingEnableAutomaticVehicleDeselection
AutomaticallyDeselectMissingVehicles
CapacityThresholdForVehicleStateComparison
TimeThresholdForVehicleStateComparison
__invalid__
+[VGVehicleDeduper actionForAddingNewVehicle:withExistingGarageVehicles:andUnpairedVehicles:]
newVehicle == nil
newVehicle cannot be nil
garageVehicles == nil
garageVehicles cannot be nil
unpairedVehicles == nil
unpairedVehicles cannot be nil
B32@?0@"VGVehicle"8Q16^B24
@"NSDictionary"16@?0@"NSData"8
_identifier
_iapIdentifier
_siriIntentsIdentifier
_creationDate
_lastStateUpdateDate
_displayName
_year
_manufacturer
_model
_colorHex
_headUnitIdentifier
_headUnitBluetoothIdentifier
_licensePlate
_lprVehicleType
_lprPowerType
_supportedConnectors
_powerByConnector
_currentVehicleState
_pairedAppIdentifier
_pairedAppInstallDeviceIdentifier
_pairedAppInstallSessionIdentifier
<%@:%p,
 identifier: %@,
 iapIdentifier: %@,
 siriIntentsIdentifier: %@,
 creationDate: %@,
 lastStateUpdateDate: %@,
 displayName: %@,
 year: %@,
 manufacturer: %@,
 model: %@,
 colorHex: %@,
 headUnitBluetoothIdentifier: %@,
 headUnitIdentifier: %@,
 license plate: %@,
 lprVehicleType: %@,
 lprPowerType: %@,
 supportedConnectors: %@,
 powerByConnector: %@,
 currentState: %@,
 pairedAppIdentifier: %@,
 pairedAppInstallDeviceIdentifier: %@,
 pairedAppInstallSessionIdentifier: %@
Unknown
iAP2
SiriIntents
%@ %@
identifier
dateOfUpdate
origin
batteryPercentage
currentEVRange
maxEVRange
minBatteryCapacity
currentBatteryCapacity
maxBatteryCapacity
consumptionArguments
chargingArguments
isCharging
activeConnector
pairedAppInstallSessionIdentifier
pairedAppInstallDeviceIdentifier
UNKNOWN
IAP2
SIRIINTENTS
(unknown: %i)
NONE
J1772
CCS1
CCS2
CHADEMO
GBT_AC
GBT_DC
TESLA
MENNEKES
VGDataCoordinatorDeviceIdentifierKey
VGDataCoordinator.WorkQueue
VGDataCoordinator.DelegateQueue
v8@?0
-[VGDataCoordinator forceFetchAllVehicles]_block_invoke
-[VGDataCoordinator _updateGarageWithVehicle:syncAcrossDevices:]
-[VGDataCoordinator _updateStateOfChargeForVehicle:syncAcrossDevices:completion:]_block_invoke
v24@?0@"VGVehicleState"8@"NSError"16
-[VGDataCoordinator finishOnboardingVehicle:]_block_invoke
-[VGDataCoordinator unpairVehicle:]_block_invoke
B32@?0@"VGOEMApplication"8Q16^B24
-[VGDataCoordinator startContinuousUpdatesForVehicle:]
vehicle == nil
can't start continuous updates with a nil vehicle.
-[VGDataCoordinator startContinuousUpdatesForVehicle:]_block_invoke
-[VGDataCoordinator endAllContinuousUpdates]_block_invoke
-[VGDataCoordinator _refreshStateForTrackedVehicles]_block_invoke
-[VGDataCoordinator _loadAllOEMVehiclesForApps:completion:]_block_invoke
v24@?0@"NSArray"8@"NSError"16
-[VGDataCoordinator vehicleStateUpdated:]_block_invoke
-[VGDataCoordinator accessoryUpdatedWithVehicle:]_block_invoke
-[VGDataCoordinator OEMAppsUpdated:]_block_invoke
-[VGDataCoordinator getLatestStateOfVehicle:withReply:]
Could not get latest state of vehicle.
-[VGDataCoordinator getLatestStateOfVehicle:withReply:]_block_invoke
Could not get latest state of vehicle, because the provider was nil.
%@ (empty)
%@ [%@]
%@<%p>
<nil>
%02lX%02lX%02lX%02lX
v8@?0
<%@:%p, _displayName=%@, _mapsDisplayName=%@>
VGExternalAccessory.WorkQueue
VGExternalAccessory.DelegateQueue
-[VGExternalAccessory _checkAvailableAccessoriesAndAttachIfNeeded]_block_invoke
-[VGExternalAccessory _accessoryDidConnect:]_block_invoke
-[VGExternalAccessory _accessoryDidDisconnect:]_block_invoke
-[VGExternalAccessory _accessoryDidUpdateVehicle:]_block_invoke
-[VGExternalAccessory _updateFromVehicleInfo:]_block_invoke
-[VGExternalAccessory _notifyDelegateWithCurrentVehicle]_block_invoke
CarDisplaySim
CarDisplaySimFirmware
-[VGExternalAccessory getStateOfChargeForVehicle:completion:]_block_invoke
-[VGExternalAccessory listCarsWithCompletion:]_block_invoke
CHAdeMO
Tesla
Mennekes
@"NSString"16@?0Q8
v24@?0Q8Q16
_dateOfUpdate
_origin
_batteryPercentage
_currentEVRange
_maxEVRange
_minBatteryCapacity
_currentBatteryCapacity
_maxBatteryCapacity
_consumptionArguments
_chargingArguments
_isCharging
_activeConnector
<%@:%p, identifier: %@, dateOfUpdate: %@, origin: %@, batteryCharge: %@, currentEVRange: %@, maxEVRange: %@, minBatteryCapacity: %@, currentBatteryCapacity: %@, maxBatteryCapacity: %@, consumptionArguments: %@, chargingArguments: %@, isCharging: %@, activeConnector: %@>
com.apple.navigation.VirtualGarage
Assert
ExternalAccessory
ExternalAccessoryModelFilter
DataCoordinator
OEMApplication
Persisting
UIHelper
VirtualGarage
B24@?0@"NSArray"8@"NSArray"16
<%@:%p, modelId: %@, firmwareIds: %@, years: %@, models: %@>
@"NSArray"16@?0@"NSDictionary"8
@40@?0@"NSString"8#16@"NSDictionary"24^B32
B16@?0@"NSArray"8
v32@?0@"NSNumber"8Q16^B24
v32@?0@"VGDenylistEntry"8Q16^B24
-[VGVirtualGarage initWithGaragePersister:]
persister == nil
Garage should be initialized with a persister.
-[VGVirtualGarage initWithGaragePersister:]_block_invoke
_vehicles
_selectedVehicleIdentifier
<%@:%p,
 _selectedVehicleIdentifier: %@,
 _vehicles: %@
B24@?0@"VGVehicle"8@"NSDictionary"16
v32@?0@"VGVehicle"8Q16^B24
v16@?0@"VGVirtualGarage"8
-[VGVirtualGarage virtualGarageGetLatestStateOfVehicleWithIdentifier:syncAcrossDevices:withReply:]
identifier == nil
vehicleIdentifier cannot be nil
reply == nil
reply block cannot be nil
v24@?0@"VGVehicle"8@"NSError"16
Could not fetch a vehicle.
Fetched vehicle is not an EV vehicle.
-[VGVirtualGarage virtualGarageGetLatestStateOfVehicleWithIdentifier:syncAcrossDevices:withReply:]_block_invoke
v24@?0@"VGVehicle"8@?<v@?@"VGVehicle"@"NSError">16
VGOEMApplicationFinderQueue
-[VGOEMApplicationFinder valueChangedForGEOConfigKey:]_block_invoke
-[VGOEMApplicationFinder findOEMApplications]_block_invoke
-[VGOEMApplicationFinder applicationsDidInstall:]_block_invoke
-[VGOEMApplicationFinder applicationsDidUninstall:]_block_invoke
VGOEMApplicationQueue
%@ (%@) 
<no color>
-[VGOEMApplication listCarsWithCompletion:]
completion == nil
Completion cannot be nil!
-[VGOEMApplication listCarsWithCompletion:]_block_invoke
v24@?0@"INListCarsIntentResponse"8@"INCExtensionError"16
v24@?0@"<INCExtensionProxy>"8@"NSError"16
-[VGOEMApplication getStateOfChargeForVehicle:completion:]
-[VGOEMApplication getStateOfChargeForVehicle:completion:]_block_invoke
Intents error with code: %ld
Intent response with unsupported code: %ld
Invalid Formula
v24@?0@"INGetCarPowerLevelStatusIntentResponse"8@"INCExtensionError"16
-[VGOEMApplication _createChargeStreamingConnectionIfNeededForVehicle:]
Vehicle cannot be nil
-[VGOEMApplication _createChargeStreamingConnectionIfNeededForVehicle:]_block_invoke
-[VGOEMApplication startSendingChargeUpdatesForVehicle:]
-[VGOEMApplication startSendingChargeUpdatesForVehicle:]_block_invoke
-[VGOEMApplication stopSendingChargeUpdatesForVehicle:]
-[VGOEMApplication stopSendingChargeUpdatesForVehicle:]_block_invoke
-[VGOEMApplication intentResponseDidUpdate:withSerializedCacheItems:]
-[VGOEMApplication intentResponseDidUpdate:withSerializedCacheItems:]_block_invoke
-[VGOEMApplication _connectionWithIntent:]_block_invoke
v16@?0@"NSError"8
Identifier: %@
com.apple.maps.virtualgarage.server.%@.%p
com.apple.maps.virtualgarage.server
-[VGVirtualGarageServer startWithPersister:]_block_invoke
-[VGVirtualGarageServer stop]_block_invoke
com.apple.maps.virtualgarage.vehicles
-[VGVirtualGarageServer listener:shouldAcceptNewConnection:]_block_invoke
-[VGVirtualGarageServer virtualGarageDidUpdate:]
-[VGVirtualGarageServer virtualGarageDidUpdate:]_block_invoke_3
-[VGVirtualGarageServer virtualGarage:didUpdateUnpairedVehicles:]
-[VGVirtualGarageServer virtualGarage:didUpdateUnpairedVehicles:]_block_invoke_3
v24@?0@"VGVirtualGarage"8@"NSError"16
com.apple.maps.virtualgarage.callbacks.%@.%p
com.apple.maps.virtualgarage.service.%p.isolater
com.apple.maps.virtualgarage.service.%@.%p
-[VGVirtualGarageService openForClient:]
client == nil
Can't call openForClient: with a nil client
-[VGVirtualGarageService closeForClient:]
Can't call closeForClient: with a nil client
-[VGVirtualGarageService _closeConnection]_block_invoke
VirtualGarage isn't enabled, service isn't able to call to server.
-[VGVirtualGarageService virtualGarageAddVehicle:]
-[VGVirtualGarageService virtualGarageRemoveVehicle:]
-[VGVirtualGarageService virtualGarageGetGarageWithReply:]
-[VGVirtualGarageService virtualGarageSelectVehicle:]
-[VGVirtualGarageService virtualGarageOnboardVehicle:]
-[VGVirtualGarageService virtualGarageSaveVehicle:]
-[VGVirtualGarageService virtualGarageStartContinuousUpdatesIfNeeded]
-[VGVirtualGarageService virtualGarageEndContinuousUpdates]
-[VGVirtualGarageService virtualGarageForceFetchAllVehicles]
-[VGVirtualGarageService virtualGarageGetListOfUnpairedVehiclesWithReply:]
-[VGVirtualGarageService virtualGarageGetLatestStateOfVehicleWithIdentifier:syncAcrossDevices:withReply:]
-[VGVirtualGarageService virtualGarageDidUpdate:]
-[VGVirtualGarageService virtualGarage:didUpdateUnpairedVehicles:]
invalid VirtualGarageConfig_ requested identifier %u
%{public}s forbids: %{public}s. %{public}s
Failed to load powerByConnector dictionary from MapsSyncVehicle: %@.
Failed to parse a powerByConnector dictionary from MapsSyncVehicle: %@.
Failed to load vehicleStateStorage from MapsSyncVehicle: %@.
Tried to update a vehicle %@, with an incompatible state: id: %@, origin: %@
Tried to pair a vehicle: (%@) to iapID: %@, bluetoothID: %@, but it was already paired.
Pairing vehicle to iapIdentifier: %@, bluetoothIdentifier: %@
Querried a vehicle for battery state that is not an EV. Vehicle: %@
Vehicle does not have a displayable battery percentage, fallback to `batteryPercentageBasedOfCapacity`.
Vehicle provided invalid battery state: %@
Loaded device id of invalid class: <%p:%@>
forceFetchAllVehicles: will reload all SI and iAP2 vehicles
strongSelf went away in %s line %d
forceFetchAllVehicles: finished reloading vehicles
_updateGarageWithState: tried to update garage with a nil vehicle. No action for the DataCoordinator.
strongDelegate went away in %s line %d
_updateGarageWithVehicle: No action to update the garage with.
_updateGarageWithVehicle: Updating a vehicle in VG :%@.
_updateGarageWithVehicle: didn't find an unpaired vehicle to update in _unpairedVehicles array: %@, vehicle: %@
_updateGarageWithVehicle: Replacing an upaired vehicle with an updated one. existing vehicle: %@, updated vehicle: %@
_updateGarageWithVehicle: Tried to add unpaired vehicle, but it already exists in the array: %@, vehicle: %@
_updateGarageWithVehicle: Found a new vehicle. Saving vehicle in dataCoordinator until it's onboarded through UI. Vehicle: :%@.
Will update SoC using %@ for vehicle: %@.
Couldn't update SoC for vehicle: %@, because there was no source.
strongSelf2 went away in %s line %d
Failed to get vehicleState for vehicle: %@. error: %@
Received vehicleState and will update vehicle. Source: %@ state: %@.
vehicleStateProvider: %@ does not conform to VGVehicleStateProviding
finishOnboardingVehicle: will update and remove vehicle: %@ from unpairedVehicles.
_removeUnpairedVehicle: Tried to remove unpaired vehicle: %@, but _unpairedVehicles don't contain that vehicle. %@
_removeUnpairedVehicle: removed vehicle: %@ from unpairedVehicles.
shouldUnpairVehicle: vehicle doesn't have a pairedAppId -> NO
shouldUnpairVehicle: this is not the primary device. vehicle.deviceId: %@, self.deviceId: %@ -> NO
shouldUnpairVehicle: this is a primary device and the OEM app is not installed -> YES
shouldUnpairVehicle: this is a primary device, the OEM app is installed, vehicle.installId: %@, oemApp.installId: %@ -> %@
Failed to load application record with error: %@
No matching application for vehicle: %@
No application associated with vehicle: %@
Ignoring, OEM Application not installed for vehicle: %@
unpairVehicle: Unpairing iAP2 only vehicle. Will reload unpaired iAP vehicles.
unpairVehicle: Tried to unpair a vehicle without iapIdentifier/siriIdentifier/pairedAppIdentifier -> ignoring the call.
unpairVehicle: Tried to unpair a vehicle %@, but _applications didn't contain the vehicle's paired app (%@). Not adding it back to unpaired vehicles.
unpairVehicle: will reload all vehicles for app: %@
Refresh timer ticked, pulling SoC for vehicles: %@
Invalidating refresh timer.
Starting refresh timer with interval: %ld
Requesting list of vehicles for %@
ListCars
Error Listing Cars from Intents: %@
Didn't receive any vehicles from %@, bailing.
Received Vehicles from %@: %@
Couldn't modify charge stream for vehicle, because EVRoutingStreamUpdatesDuringNav is false.
Couldn't modify charge stream for vehicle: %@. Underlying app was not found.
Will start charge stream for vehicle: %@.
Will stop charge stream for vehicle: %@.
SoC Streaming couldn't find vehicle for state: %@ in observed vehicles: %@
SoC Streaming will update vehicle: %@ with state: %@
accessoryUpdatedWithVehicle: not connected to an iAP2 EV vehicle. Will remove any unpaired vehicles if possible
accessoryUpdatedWithVehicle: accessory is connected to a disambiguated non-EV accessory.
accessoryUpdatedWithVehicle: accessory is connected to a vehicle that is not an EV and was not disambiguated. 
accessoryUpdatedWithVehicle: iAP2 onboarding is disabled. The dataCoordinator won't save the iAP2 vehicle.
accessoryUpdatedWithVehicle: accessory did update vehicle. Will update garage
_loadIapVehicles: iap2 onboarding is disabled. Will not load iap2 vehicles.
_loadIapVehicles: Loading iAP2 vehicles.
Will remove an existing unpaired iap2 vehicle: %@
Haven't found any iAP2 unpaired vehicles upon disconnecting from iAP2.
OEMAppsUpdated, reseting unpairedVehicles, updating apps from %@ to %@.
Started pulling all vehicles for apps: %@.
PullAllVehicles
Finished pulling all vehicles for apps: %@.
Tried to get SoC for vehicle, that is not saved in the garage.
getLatestStateOfVehicle: called for a vehicle (%@) that doesn't have a stateProvider. Make sure that the paired app is installed, otherwise there might be an issue in the VG logic.
getLatestStateOfVehicle: using %@ to fetch SoC.
getLatestStateOfVehicle: Tried to fetch SoC for %@, but failed with error: %@.
getLatestStateOfVehicle: Fetched latest vehicle state: %@
Color does not have 4 components
Color is not in RGB colorspace
Allowlisting enabled, will initialize model filter
Allowlisting disabled, will not initialize model filter
init: created new VGExternalAccessory: %p
dealloc: deallocating accessory: %p
init: will use accessory: %@ supportsCarPlay: %@, supportsWirelessCarPlay: %@. supportsUSBCarPlay: %@
init: skipping accessory as it doesn't support CarPlay: %p %@
_checkCurrentAccessoriesAndAttachIfNeeded: currently connected to %lu CarPlay accessories
_addNewCarPlayAccessory: tried to add an accessory, but it has an invalid key. %@, %lu
_addNewCarPlayAccessory: trying to add an accessory, it is already tracked -> replacing, name: %@ key: %@
_addNewCarPlayAccessory: added a new accessory: %@ key: %@.
_removeCarPlayAccessory: tried to remove an accessory that has an invalid key. %@, %lu
_removeCarPlayAccessory: tried to remove an accessory that was not tracked. %@, %@
_removeCarPlayAccessory: removing accessory with key. %@, %@
_removeCarPlayAccessory: currently not tracking any accessories. clearing tracked vehicle state
_isAccessoryTracked: tried to check status of accessory with an invalid key. %@ %lu
_accessoryDidConnect: received an unsupported accessory: %p, %@
_accessoryDidConnect: new accessory: %p, %@, supportsCarPlay: %@, supportsWirelessCarPlay: %@. supportsUSBCarPlay: %@
_accessoryDidDisconnect: disconnected accessory that is not tracked %@
_accessoryDidDisconnect: will disconnect a tracked accessory: %@
_accessoryDidUpdateVehicle: accessory %@ does not support CarPlay, ignoring update
_accessoryDidUpdateVehicle: received a vehicle update update for accessory %@ with userInfo: %@
_accessoryDidUpdateVehicle: accessory %@ that supports CarPlay sent us a vehicle update, but before a `didConnect` message. We'll start tracking it now as a fallback.
_updateFromVehicleInfo: tried to update from a nil vehicleInfo.
_updateFromVehicleInfo: did update accessoryState: %@ from vehicleInfo: %@
updated _currentVehicle: %@
notifying delegate with vehicle: %@
Connected vehicle is not allowlisted. consumption modelId: %@, charging modelId: %@, firmwareId: %@, year: %@, model: %@
Failed to parse arguments: %@
Failed to parse model id from arguments: %@
Vehicle does not have valid consumption or charging arguments. consumption: %@, charging: %@
Currently connected vehicle is an EV, but does is not allow listed. Onboarding won't be allowed
Either accessory is not connected or we don't have any _currentVehicleState yet.
SoC requested for %@ but the currently connected vehicle is %@
data is nil. Error parsing manifest resource: %@ while network was reachable.
data is nil. Error parsing manifest resource: %@ because network was not reachable.
Error parsing manifest resource. error: %@
Unexpected class type for allowlist payload: %@
Failed to recreate a dictionary from serialized arguments: %@, with error: %@, dictionary: dictionary: %@
Failed to recreate a dictionary from serialized arguments (wrong keys): %@, dictioanary: %@
Tried to get a string version of a multiple option bitmask: %lu. This is not supported.
isSignificantlyDifferentFromVehicleState: -> NO. chargingArgumentsAreDifferent: %@, consumptionArgumentsAreDifferent: %@
isSignificantlyDifferentFromVehicleState: -> %@.
Failed to load origin from protoOrigin: %@
Failed to load a single connector type from protoConnectorType: %@
Failed to persist origin from vgOrigin: %@
Failed to persist a single connector type from vgConnectorType: %@
Parsing of allowlist failed. Payload was nil.
Parsing of allowlist failed. allowlistedModelIds were in an unexpected format: %@
Encountered a non-number in payload: %@
Parsing of denylist failed. denylistedConfigurations were in an unexpected format: %@
Encountered a non-dictionary in payload: %@
Encountered an invalid value under key: %@ in payload: %@
Encountered malformed configuration: %@. Will skip it.
Encountered a configuration without any parameters: %@. Will skip it.
Adding new entry to iAP2 denylist: %@
allowsVehicleWithModelId: denied modelId: %@ as it is not in the allowlist: %@
allowsVehicleWithModelId: denied entry: %@ as it matches entry from denylist: %@
Creating new virtualGarage: %p with persister: %p
LoadVehicles
Failed to load virtual garage with error: %@
Garage did finish loading initial vehicles.
Deallocating virtualGarage: %p with persister: %p
Didn't find vehicle with identifier: %@ in vehicles: %@.
_persisterHasStaleStateForVehicle: Didn't find persisted vehicle for vehicle: %@
_updateDataCoordinatorAvailability: %@, evRoutingEnabled: %@, vehiclesLoaded: %@
Instantiated a new _dataCoordinator %@ for VirtualGarage
Will not use dataCoordinator, EV routing isn't enabled
addVehicle: tried to add a vehicle that is already in the garage.
Added vehicle: %@, vehicles.count: %lu
Default selecting new vehicle: %@
_saveVehicle: Vehicle with ID: %@ wasn't found, it was removed before _save was called. vehicles: %@
_saveVehicle: Vehicle was found, will replace it in local array: %@
_saveVehicle: Will force sync chargeState because persister has stale info for vehicle: %@
removeVehicle: tried to remove a vehicle that is not in the garage.
Removed vehicle: %@, vehicles.count: %lu
selectVehicle: tried to select a vehicle that is not in the garage.
Selected vehicle: %@
Tried to use a method (%s) that requires a dataCoordinator.
_onboardVehicle will onboard vehicle %@, but we didn't find exactly one match in unpairedVehicles: %@
Onboarding vehicle: %@ in virtual garage.
Unpairing vehicle: %@
Garage will not start continuous updates, because there is no selected vehicle
Garage will start continuous updates for vehicle: %@
Garage will end continuous updates.
EV Routing not enabled. Will strip EV vehicles from VG.
There are no queued completion handlers, nothing to do.
Will execute %lu queued completionHandlers with garage: %@.
Finished executing %lu queued completionHandlers
Will check for vehicles (%lu) that no longer have their paired apps.
The OEM app on the primary device was uninstalled. Will remove vehicle: %@
Tried to update local vehicles with nil vehicles.
Discarding vehicle with stale charge state: %@ in favor of: %@
Force updating local vehicles: %@, with following vehicles: %@
Forced vehicle update removed the selected vehicle. Will deselect
GeoConfig_EVRoutingUseMapsSyncLiveUpdates is not set, we're ignoring live updates.
garagePersister: %@ wants to update vehicles with vehicles: %@
GEOConfigs changed, isEVRoutingEnabled: %@
DataCoordinator wants to save vehicle: %@
DataCoordinator updated installed apps. Will try to remove vehicles that have no OEM app.
Garage hasn't finished loading vehicles from persistor. Once finished, reply block will be executed
GetVehicleState
Unable to fetch a state for vehicle. Error: %@
Failed to get the latest state of vehicle: %@. with error: %@
Received the latest state of vehicle: %@ through virtualGarageGetLatestStateOfVehicle. Will save the state.
Received the latest state of vehicle: %@ through virtualGarageGetLatestStateOfVehicle, but the underlying vehicle was removed from the garage before the callback returned.
Updated vehicle: %@ is the same as the existing one. Not saving the state.
EVRoutingSynchronousVehicleStateUpdate is on, will fetch SOC and wait before calling completion block.
EVRoutingSynchronousVehicleStateUpdate is off, getting latest SoC from what is currently in the garage.
No allowlisted apps. Returning.
Encountered a bundle that is malformed: %@
Error parsing manifest resource. Not having any allowlisted apps is a grave error.
Won't create an LSAppRecord for bundleId: %@ as we already have this app saved.
Failed making LSApplicationRecord for '%@': %@. App is not installed
allowlisted application '%@' doesn't support our required intents: %@
Added application: %@
Removed application: %@
FindOEMApplications
Allowlisted formula IDs do not contain the formula in the Consumption Arguments. Current formula: %@, Allowed formula IDs: %@
Failed to get an updateDate from components: %@
Assuming vehicle state response: %{private}@ was created now
Listing cars received a non-Success response code: %ld
_vehiclesFromListCarsIntentResponse color are: %@
Failed to extract power for connector type: %lu, from car array: %@.
Constructed powerByConnector dictionary: %@
Application %@ is not enabled returning no results
listCarsIntentSignpost
Returning because of a connection error: %@
strongSelf3 went away in %s line %d
Returning because of an underlying error in the connection: %@
Application %@ is not enabled returning existing SoC
stateOfChargeIntentSignpost
stateOfChargeIntent
error in handleIntentWithCompletionHandler: %@
Unsupported response code: %@
Received a vehicle state: %@ that doesn't apply to the provided vehicle: %@
getStateOfChargeForVehicle fetched %@
Started a new Intent %@ with %@
%@ starting updates
Connection error while receiving updates: %@
%@ stopping updates
strongChargeStreamingDelegate went away in %s line %d
%@ received INGetCarPowerLevelStatusResponse live update: %@
Received stream callback when disabled
Unexpected streaming response class. Received an %@ instance
chargeStreamingDelegate does not implement required method vehicleStateUpdated:
Unsupported response code: %ld
Formula from the response is invalid
Response failed to deserialize to a valid VGVehicleState %@
Creating connection for OEMApp: (%@), with timeout %.2f
Connection for OEMApp: (%@), timed out with error: %@
Tried to serialize nil arguments.
Failed to serialize VGVehicleArguments into a string. arguments: %@, error: %@
Serializing arguments as: %@
Started listening for connections: %@
Stopped virtualGarageServer
VGServer: GEOConfigs changed. VirtualGarageIsEnabled: %@
Unauthorized access from: %@ to VG XPC service from connection: %@
Service connection interrupted
Service connection invalidated
strongConnection went away in %s line %d
%s %@
%s %@ %@
%s %@, %@
Tried to openForClient:, but virtual garage isn't enabled
Tried to open connection twice for client: %@.
Will openForClient: %@
Will closeForClient: %@
Tried to closeForClient: (%@) that wasn't in _clients and VG was enabled. Check if the feature flag changed during run time. If it hasn't, there is probably in issue in your open/close logic.
VGVirtualGarageService opening connection
Server connection interrupted
Server connection invalidated
VGVirtualGarageService closing connection
Registering observer: %@
Unregistering observer: %@
VirtualGarage isn't enabled, service isn't able to call to server.
virtualGarageSetAssumesFullCharge: is only supported on macOS
VGVehicleDeduper
VGExtras
VGVehicle
NSCopying
NSSecureCoding
NSCoding
VGVehicleStateStorage
VGVehicleStateProviding
NSObject
VGDataCoordinator
VGOEMApplicationFinderUpdates
VGExternalAccessoryUpdating
VGOEMAppSOCStreaming
CarPlaySupport
VGExternalAccessoryState
VGExternalAccessory
VGVehicleState
VGDenylistEntry
VGExternalAccessoryModelFilter
VGVirtualGarage
VGDataCoordinatorDelegate
VGVirtualGaragePersistingDelegate
GEOConfigChangeListenerDelegate
VGVirtualGarageActions
VGOEMApplicationFinder
LSApplicationWorkspaceObserverProtocol
VGOEMApplicationFinding
VGOEMApplication
INIntentResponseObserver
VGVirtualGarageObserver
VGVirtualGarageServer
NSXPCListenerDelegate
VGVirtualGarageDelegate
VGVirtualGarageService
OEMAppsUpdated:
JSONObjectWithData:options:error:
T@"<VGExternalAccessoryUpdating>",W,N,V_accessoryUpdateDelegate
T#,R
T@"NSDate",R,C,N,V_creationDate
T@"<VGOEMAppSOCStreaming>",W,N,V_chargeStreamingDelegate
T@"NSString",C,N,V_licensePlate
T@"<VGOEMApplicationFinderUpdates>",W,N,V_delegate
T@"NSString",R,C,N,V_identifier
T@"<VGVirtualGarageObserver>",W,N,V_observer
Tq,R,N,V_origin
T@"LSApplicationRecord",R,N,V_applicationRecord
_accessoryState
T@"NSArray",&,N,V_denylist
_currentVehicle
T@"NSArray",R,C,N
_isolationQueue
T@"NSDate",R,C,N,V_lastStateUpdateDate
_models
T@"NSDictionary",&,N,V_allowlist
_origin
T@"NSDictionary",R,N,V_powerByConnector
_saveVehicle:syncAcrossDevices:
T@"NSMeasurement",&,N,V_currentEVRange
_unpairVehicle:
T@"NSMeasurement",&,N,V_maxEVRange
allKeys
T@"NSMeasurement",R,N,V_currentBatteryCapacity
closeForClient:
T@"NSMeasurement",R,N,V_maxBatteryCapacity
copyTo:
T@"NSMeasurement",R,N,V_minBatteryCapacity
dealloc
T@"NSMutableDictionary",&,N,V_applications
hasDateOfUpdate
T@"NSNumber",N,V_supportedConnectors
initWithIntent:
T@"NSNumber",R,N,V_batteryPercentage
isProxy
T@"NSSet",&,N,V_disabledAppIdentifiers
numberWithBool:
T@"NSString",&,N,V_colorHex
release
T@"NSString",&,N,V_iapIdentifier
selectedVehicle
T@"NSString",&,N,V_model
setDisplayName:
T@"NSString",&,N,V_pairedAppIdentifier
setWithObjects:
T@"NSString",&,N,V_siriIntentsIdentifier
underlyingError
T@"NSString",C,N,V_colorHex
.cxx_destruct
StringAsOrigin:
StringAsActiveConnector:
T@"NSArray",R,N
T@"<VGOEMAppSOCStreaming>",W,N
T@"NSString",&,N,V_manufacturer
T@"<VGOEMApplicationFinderUpdates>",W,N
T@"NSString",C,N,V_lprPowerType
T@"<VGVirtualGarageDelegate>",W,N,V_delegate
TB,N,GisEnabled
T@"LSApplicationRecord",R,N
_VGChargingConnectorTypeOptionsFromINCarChargingConnectorTypes:
T@"NSArray",&,N,V_allowedFormulaIDs
_currentEVRange
T@"NSArray",&,N,V_modelIdAllowlist
_garage
T@"NSData",&,N,V_pairedAppInstallSessionIdentifier
_lprVehicleType
T@"NSDate",R,N,V_dateOfUpdate
_openConnection
T@"NSDictionary",R,C,N,V_powerByConnector
_refreshStateForTrackedVehicles
T@"NSMeasurement",&,N,V_currentBatteryCapacity
_startContinuousUpdatesIfNeeded
T@"NSMeasurement",&,N,V_maxBatteryCapacity
activeConnector
T@"NSMeasurement",&,N,V_minBatteryCapacity
applicationsDidFailToUninstall:
T@"NSMeasurement",R,N,V_currentEVRange
containsObject:
T@"NSMeasurement",R,N,V_maxEVRange
currentCalendar
T@"NSMutableArray",&,N,V_activeConnections
enabled
T@"NSNumber",&,N,V_batteryCharge
initWithFormat:
T@"NSNumber",R,N,V_activeConnector
isLessThanOrEqualToMeasurement:
T@"NSObject<OS_dispatch_queue>",&,N,V_observerQueue
T@"NSString",&,N,V_chargingArguments
originAsString:
T@"NSString",&,N,V_consumptionArguments
removeObserver:
T@"NSString",&,N,V_identifier
T@"NSString",&,N,V_name
setRequiresTCC:
T@"NSString",&,N,V_pairedAppInstallDeviceIdentifier
supportsCarPlay
T@"NSString",&,N,V_year
unregisterForLocalNotifications
T@"NSString",C,N,V_displayName
T@"NSString",C,N,V_lprVehicleType
T@"NSString",C,V_activeVehicleIdentifier
T@"NSString",R,C
T@"NSString",R,C,N,V_headUnitBluetoothIdentifier
T@"NSString",R,C,N,V_headUnitIdentifier
T@"NSString",R,C,N,V_manufacturer
T@"NSString",R,C,N,V_model
T@"NSString",R,C,N,V_year
T@"NSString",R,N
T@"NSString",R,N,V_chargingArguments
T@"NSString",R,N,V_consumptionArguments
T@"NSString",R,N,V_identifier
T@"NSXPCConnection",&,N,V_connection
T@"NSXPCListener",&,N,V_listener
T@"VGVehicle",R,N
T@"VGVehicleState",R,N,V_currentVehicleState
T@"VGVirtualGarage",&,N,V_garage
TB,N
TB,N,GisEnabled,V_enabled
TB,N,V_hostsVirtualGarage
TB,N,V_isCharging
TB,N,V_shouldAssumeFullCharge
TB,R
TB,R,N
TB,R,N,V_isCharging
TQ,N,V_supportedConnectors
TQ,R
TQ,R,N,V_activeConnector
Td,N,V_batteryPercentage
Td,N,V_currentBatteryCapacity
Td,N,V_currentEVRange
Td,N,V_dateOfUpdate
Td,N,V_maxBatteryCapacity
Td,N,V_maxEVRange
Td,N,V_minBatteryCapacity
Ti,N,V_activeConnector
Ti,N,V_origin
UTF8String
UUID
UUIDString
_VGChargingConnectorTypeOptionFromINCarChargingConnectorType:
_accessory
_accessoryDidConnect:
_accessoryDidDisconnect:
_accessoryDidUpdateVehicle:
_accessoryUpdateDelegate
_activeConnections
_activeConnector
_activeVehicleIdentifier
_addNewCarPlayAccessory:
_addOEMApplicationForApplicationRecordIfNeeded:
_addVehicle:
_allowedFormulaIDs
_allowlist
_allowlistPayload
_applicationFinder
_applicationForVehicle:
_applicationRecord
_applicationRecordForBundleIdentifier:
_applicationRecordForVehicle:
_applications
_batteryCharge
_batteryPercentage
_bluetoothIdentifier
_callbackQueue
_canBeUpdatedFromState:
_chargeStreamingConnection
_chargeStreamingDelegate
_chargingArguments
_checkAvailableAccessoriesAndAttachIfNeeded
_cleanUp
_clearActiveVehicleIdentifierIfNeeded:
_clients
_clientsIsolater
_closeConnection
_colorHex
_connection
_connectionQueue
_connectionWithIntent:
_consumptionArguments
_createChargeStreamingConnectionIfNeededForVehicle:
_creationDate
_currentBatteryCapacity
_currentStatePassesEVRoutingRequirements
_currentVehicleState
_dataCoordinator
_dateOfUpdate
_delegate
_delegateQueue
_denylist
_disabledAppIdentifiers
_displayName
_enabled
_endContinuousUpdates
_executeQueuedCompletionHandlersIfNeeded
_finishedLoadingVehicles
_firmwareId
_firmwareIds
_forceUpdateWithVehicles:
_garageCopy
_has
_headUnitBluetoothIdentifier
_headUnitIdentifier
_hostsVirtualGarage
_iapIdentifier
_identifier
_identifierForVehicleStateOrigin:
_indexOfVehicleInUnpairedVehicles:
_initializeAllowAndDenylists
_invalidateRefreshTimer
_isAccessoryTracked:
_isCharging
_isConnectedToCarPlayAccessory
_isConnectedToElectricVehicle
_isConnectedVehicleAllowlisted
_isDataCoordinatorRunning
_isValidConsumptionModelForResponse:
_lastStateUpdateDate
_licensePlate
_listener
_loadAllOEMVehiclesForApps:completion:
_loadIapVehicles
_lprPowerType
_manufacturer
_mapsDisplayName
_maxBatteryCapacity
_maxEVRange
_minBatteryCapacity
_model
_modelFilter
_modelId
_modelIdAllowlist
_modelIdFromArguments:
_name
_notifyDelegateWithCurrentVehicle
_notifyObserversGarageDidUpdateVehicles
_observedVehicles
_observer
_observerQueue
_observers
_oemAppForChargeStreamForVehicle:
_onboardVehicle:
_pairedAppIdentifier
_pairedAppInstallDeviceIdentifier
_pairedAppInstallSessionIdentifier
_persister
_persisterHasStaleStateForVehicle:
_powerByConnector
_powerByConnectorDictionaryFromCar:
_queue
_queuedGetGarageCompletionHandlers
_removeCarPlayAccessory:
_removeOEMApplicationForBundleIdentifier:
_removeUnpairedIapVehicleIfNeeded
_removeVehicleWithIdentifier:
_removeVehiclesWithUninstalledAppsIfNeeded
_requiredIntents
_saveOnboardingInfoForVehicle:
_selectVehicleWithIdentifier:
_selectedVehicleIdentifier
_setDataCoordintorRunning:
_setLaunchId:
_setQueue:
_setVehicleState:
_setupTimerIfNeeded
_setupVirtualGarageHostingIfNeeded
_shouldAssumeFullCharge
_siriIntentsIdentifier
_startChargeStreamForVehicle:
_stopChargeStreamForVehicle:
_storage
_supportedConnectors
_trackedAccessoriesByConnectionId
_unpairedVehicles
_updateDataCoordinatorAvailability
_updateFromVehicleInfo:
_updateGarageWithVehicle:syncAcrossDevices:
_updateStateOfChargeForVehicle:syncAcrossDevices:completion:
_updateWithVehicleInfo:
_updateWithVehicleState:
_vehicleByUpdatingWithVehicle:
_vehicleForCurrentState
_vehicleMatchingVehicle:inArray:
_vehicleStateForCurrentState
_vehicleStateFromResponse:error:
_vehicleStateFromStorage:
_vehicleStateProviderForVehicle:
_vehicleStateRefreshInterval
_vehicleStateRefreshTimer
_vehicleWithIdentifier:
_vehicles
_vehiclesFromListCarsIntentResponse:
_vg_supportsCarPlay
_workQueue
_year
_years
accessoryUpdateDelegate
accessoryUpdatedWithVehicle:
actionForAddingNewVehicle:withExistingGarageVehicles:andUnpairedVehicles:
activeConnections
activeConnectorAsString:
activeVehicleIdentifier
addObject:
addObserver:
addObserver:selector:name:object:
addVehicle:
allObjects
allValues
allocWithZone:
allowedFormulaIDs
allowlist
allowsVehicleWithModelId:firmwareId:year:model:
appInfoWithApplicationRecord:
appendFormat:
appendString:
applicationIconDidChange:
applicationInstallsArePrioritized:arePaused:
applicationInstallsDidCancel:
applicationInstallsDidChange:
applicationInstallsDidPause:
applicationInstallsDidPrioritize:
applicationInstallsDidResume:
applicationInstallsDidStart:
applicationInstallsDidUpdateIcon:
applicationRecord
applicationStateDidChange:
applications
applicationsDidChangePersonas:
applicationsDidFailToInstall:
applicationsDidInstall:
applicationsDidUninstall:
applicationsWillInstall:
applicationsWillUninstall:
array
arrayWithCapacity:
arrayWithObjects:count:
autorelease
batteryCharge
batteryPercentage
batteryPercentageBasedOfCapacity
bluetoothIdentifier
boolValue
bundleIdentifier
canUseVirtualGarageXPCService
carIdentifier
cars
chargePercentRemaining
chargeStreamingDelegate
charging
chargingArguments
chargingFormulaArguments
class
code
color
colorHex
combinedDisplayName
compare:
componentsJoinedByString:
componentsSeparatedByString:
conformsToProtocol:
connectedAccessories
connection
connectionID
consumptionArguments
consumptionFormulaArguments
copy
copyWithZone:
count
countByEnumeratingWithState:objects:count:
creationDate
currentBatteryCapacity
currentEVRange
currentVehicleState
dataCoordinator:didUpdateUnpairedVehicles:
dataCoordinator:wantsToUpdateVehicle:syncAcrossDevices:
dataCoordinatorDidUpdateInstalledApps:
dataForResourceWithName:fallbackBundle:
dataUsingEncoding:
dataWithJSONObject:options:error:
databaseWasRebuilt
date
dateFromComponents:
dateOfLastStateUpdate
dateOfUpdate
dateOfVehicleIngestion
dateWithTimeIntervalSinceReferenceDate:
debugDescription
decodeBoolForKey:
decodeIntegerForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
defaultCenter
defaultWorkspace
delegate
denylist
description
deviceIdentifier
deviceManagementPolicyDidChange:
dictionary
dictionaryRepresentation
dictionaryWithObjects:forKeys:count:
disabledAppIdentifiers
displayName
displayedBatteryPercentage
distanceRemainingElectric
doubleValue
encodeBool:forKey:
encodeInteger:forKey:
encodeObject:forKey:
encodeWithCoder:
endAllContinuousUpdates
enumerateObjectsUsingBlock:
enumeratorWithOptions:
errorCode
errorWithDomain:code:userInfo:
filteredArrayUsingPredicate:
findOEMApplications
finishOnboardingVehicle:
firmwareRevision
firstObject
forceFetchAllVehicles
garage
garagePersister:wantsToUpdateVehicles:
getLatestStateOfVehicle:withReply:
getStateOfChargeForVehicle:completion:
getVehicleInfoData
handleIntentWithCompletionHandler:
hasActiveConnector
hasBatteryPercentage
hasChargingArguments
hasConsumptionArguments
hasCurrentBatteryCapacity
hasCurrentEVRange
hasIsCharging
hasMaxBatteryCapacity
hasMaxEVRange
hasMinBatteryCapacity
hasOrigin
hasPairedAppInstallDeviceIdentifier
hasPairedAppInstallSessionIdentifier
hash
headUnit
headUnitBluetoothIdentifier
headUnitIdentifier
headUnitMacAddress
helperPlaceholdersInstalled:
helperPlaceholdersUninstalled:
hostsVirtualGarage
iAP2Identifier
iapIdentifier
identifier
indexOfObjectPassingTest:
init
initWithApplicationFinder:externalAccessory:delegate:
initWithBundleIdentifier:allowPlaceholder:error:
initWithCapacity:
initWithCarName:
initWithCoder:
initWithData:
initWithData:encoding:
initWithDisplayName:year:manufacturer:model:colorHex:headUnitIdentifier:headUnitBluetoothIdentifier:supportedConnectors:powerByConnector:
initWithDoubleValue:unit:
initWithGaragePersister:
initWithIdentifier:applicationRecord:
initWithIdentifier:dateOfUpdate:origin:batteryPercentage:currentEVRange:maxEVRange:minBatteryCapacity:currentBatteryCapacity:maxBatteryCapacity:consumptionArguments:chargingArguments:isCharging:activeConnector:
initWithIdentifier:displayName:year:manufacturer:model:colorHex:licensePlate:lprVehicleType:lprPowerType:
initWithLicensePlate:lprVehicleType:lprPowerType:
initWithMachServiceName:
initWithMachServiceName:options:
initWithMapsSyncVehicle:
initWithModelId:firmwareIds:years:models:
initWithObjects:
initWithOptions:capacity:
initWithProtocol:queue:
initWithVocabularyIdentifier:spokenPhrase:pronunciationHint:
installSessionIdentifier
intent
intentResponseDidUpdate:
intentResponseDidUpdate:withSerializedCacheItems:
interfaceWithProtocol:
invalidate
isCharging
isConnected
isConnectedToAccessoryWithIdentifier:
isConnectedToVehicle:
isEnabled
isEqual:
isEqualToMeasurement:
isEqualToNumber:
isEqualToString:
isGreaterThanMeasurement:
isGreaterThanOrEqualToMeasurement:
isKindOfClass:
isLessThanMeasurement:
isMemberOfClass:
isNetworkReachable
isPureElectricVehicle
isSignificantlyDifferentFromVehicleState:
isSubsetOfSet:
isSupersetOfEntry:
kilometers
kilowattHours
lastStateUpdateDate
length
licensePlate
listCarsWithCompletion:
listener
listener:shouldAcceptNewConnection:
loadVehiclesWithCompletion:
localizedDescription
lprPowerType
lprVehicleType
macAddress
make
manufacturer
maxBatteryCapacity
maxEVRange
maximumBatteryCapacity
maximumDistanceElectric
maximumPowerForChargingConnectorType:
measurementByConvertingToUnit:
mergeFrom:
messageTargetWithErrorReply:
minBatteryCapacity
minimumBatteryCapacity
model
modelIdAllowlist
mutableCopy
mutableCopyWithZone:
name
networkUsageChanged:
nextObject
numberWithDouble:
numberWithUnsignedInteger:
objectAtIndex:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
observeLaunchProhibitedApps
observer
observerQueue
openForClient:
origin
pairToIapIdentifier:bluetoothIdentifier:
pairedAppIdentifier
pairedAppInstallDeviceIdentifier
pairedAppInstallSessionIdentifier
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
persistedVehicleForVehicle:
pluginsDidInstall:
pluginsDidUninstall:
pluginsWillUninstall:
powerByConnector
powerPerConnectors
predicateWithBlock:
processIdentifier
readFrom:
registerForLocalNotifications
registerObserver:
remoteObjectProxyWithErrorHandler:
removeAllObjects
removeObject:
removeObjectAtIndex:
removeObjectForKey:
removeVehicle:
replaceObjectAtIndex:withObject:
reset
respondsToSelector:
resume
resumeWithCompletionHandler:
retain
retainCount
saveVehicle:syncAcrossDevices:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
selectedVehicleIdentifier
self
serialNumber
setAccessoryUpdateDelegate:
setActiveConnections:
setActiveConnector:
setActiveVehicleIdentifier:
setAllowedFormulaIDs:
setAllowlist:
setApplications:
setBatteryCharge:
setBatteryPercentage:
setChargeStreamingDelegate:
setChargingArguments:
setClasses:forSelector:argumentIndex:ofReply:
setColorHex:
setConnection:
setConsumptionArguments:
setCurrentBatteryCapacity:
setCurrentEVRange:
setDateOfUpdate:
setDelegate:
setDenylist:
setDisabledAppIdentifiers:
setEnabled:
setExportedInterface:
setExportedObject:
setGarage:
setHasActiveConnector:
setHasBatteryPercentage:
setHasCurrentBatteryCapacity:
setHasCurrentEVRange:
setHasDateOfUpdate:
setHasIsCharging:
setHasMaxBatteryCapacity:
setHasMaxEVRange:
setHasMinBatteryCapacity:
setHasOrigin:
setHostsVirtualGarage:
setIapIdentifier:
setIdentifier:
setInterruptionHandler:
setInvalidationHandler:
setIsCharging:
setLicensePlate:
setListener:
setLprPowerType:
setLprVehicleType:
setManufacturer:
setMaxBatteryCapacity:
setMaxEVRange:
setMinBatteryCapacity:
setModel:
setModelIdAllowlist:
setName:
setObject:forKey:
setObject:forKeyedSubscript:
setObserver:
setObserverQueue:
setOrigin:
setPairedAppIdentifier:
setPairedAppInstallDeviceIdentifier:
setPairedAppInstallSessionIdentifier:
setRemoteObjectInterface:
setRequestTimeoutInterval:
setSelectedVehicleIdentifier:
setShouldAssumeFullCharge:
setSiriIntentsIdentifier:
setSupportedConnectors:
setTimeoutHandler:
setWithArray:
setYear:
sharedAccessoryManager
sharedManager
sharedNetworkObserver
sharedServer
sharedService
shouldAssumeFullCharge
shouldUnpairVehicle:
siriIntentsIdentifier
standardUserDefaults
startContinuousUpdatesForVehicle:
startSendingChargeUpdatesForVehicle:
startSendingUpdatesToObserver:
startWithPersister:
stop
stopSendingChargeUpdatesForVehicle:
stopSendingUpdates
stringByAppendingString:
stringByReplacingOccurrencesOfString:withString:
stringValue
stringWithFormat:
superclass
supportedChargingConnectors
supportedConnectors
supportedIntents
supportsSecureCoding
supportsUSBCarPlay
supportsWirelessCarPlay
timeIntervalSinceDate:
timeIntervalSinceReferenceDate
unarchivedObjectOfClasses:fromData:error:
unit
unpairVehicle:
unpairedVehicles
unregisterObserver:
unsignedIntegerValue
userInfo
valueChangedForGEOConfigKey:
valueForEntitlement:
vehicleIdentifier
vehicleInfoInitialData
vehicleStateUpdated:
vehicles
virtualGarage:didUpdateUnpairedVehicles:
virtualGarageAddVehicle:
virtualGarageDidUpdate:
virtualGarageEndContinuousUpdates
virtualGarageForceFetchAllVehicles
virtualGarageGetGarageWithReply:
virtualGarageGetLatestStateOfVehicleWithIdentifier:syncAcrossDevices:withReply:
virtualGarageGetListOfUnpairedVehiclesWithReply:
virtualGarageOnboardVehicle:
virtualGarageRemoveVehicle:
virtualGarageSaveVehicle:
virtualGarageSelectVehicle:
virtualGarageSetAssumesFullCharge:
virtualGarageStartContinuousUpdatesIfNeeded
watts
writeTo:
year
zone
q40@0:8^@16@24@32
@32@0:8@16@24
B24@0:8@16
q24@0:8@16
B16@0:8
@24@0:8^{_NSZone=}16
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@88@0:8@16@24@32@40@48@56@64Q72@80
@40@0:8@16@24@32
@88@0:8@16@24@32@40@48@56@64@72@80
v32@0:8@16@24
@24@0:8q16
@16@0:8
Q16@0:8
d16@0:8
v24@0:8Q16
v16@0:8
@"NSString"
@"NSDate"
@"NSDictionary"
@"VGVehicleState"
@"NSData"
v24@0:8d16
v20@0:8B16
i16@0:8
v20@0:8i16
@20@0:8i16
i24@0:8@16
{?="batteryPercentage"b1"currentBatteryCapacity"b1"currentEVRange"b1"dateOfUpdate"b1"maxBatteryCapacity"b1"maxEVRange"b1"minBatteryCapacity"b1"activeConnector"b1"origin"b1"isCharging"b1}
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@?16
v32@0:8@16@?24
v24@0:8@?<v@?@"NSArray"@"NSError">16
v32@0:8@"VGVehicle"16@?<v@?@"VGVehicleState"@"NSError">24
v24@0:8@"NSArray"16
v24@0:8@"VGVehicle"16
v24@0:8@"VGVehicleState"16
v28@0:8@16B24
v36@0:8@16B24@?28
Q24@0:8@16
@"<VGDataCoordinatorDelegate>"
@"NSObject<OS_dispatch_queue>"
@"<VGOEMApplicationFinding>"
@"NSArray"
@"VGExternalAccessory"
@"NSMutableArray"
@"NSTimer"
@"NSMutableSet"
@"NSMeasurement"
@"NSNumber"
B24@0:8@"VGVehicle"16
B24@0:8@"NSString"16
@"NSMutableDictionary"
@"VGExternalAccessoryState"
@"VGVehicle"
@"VGExternalAccessoryModelFilter"
@"<VGExternalAccessoryUpdating>"
@116@0:8@16@24q32@40@48@56@64@72@80@88@96B104Q108
q16@0:8
@48@0:8@16@24@32@40
B48@0:8@16@24@32@40
v36@0:8@16@24B32
v36@0:8@"VGDataCoordinator"16@"VGVehicle"24B32
v32@0:8@"VGDataCoordinator"16@"NSArray"24
v24@0:8@"VGDataCoordinator"16
@"VGVehicle"16@0:8
@"NSArray"16@0:8
v32@0:8@"<VGVirtualGaragePersisting>"16@"NSArray"24
v32@0:8{?=I^v}16
v24@0:8@?<v@?@"VGVirtualGarage"@"NSError">16
v36@0:8@"NSString"16B24@?<v@?@"VGVehicle"@"NSError">28
@"VGDataCoordinator"
@"<VGVirtualGaragePersisting>"
@"<VGVirtualGarageDelegate>"
v32@0:8@"NSArray"16@"NSArray"24
@"<VGOEMApplicationFinderUpdates>"16@0:8
v24@0:8@"<VGOEMApplicationFinderUpdates>"16
@"NSSet"
@"<VGOEMApplicationFinderUpdates>"
v32@0:8@"INIntentResponse"16@"NSSet"24
v24@0:8@"INIntentResponse"16
@32@0:8@"NSString"16@"LSApplicationRecord"24
@"LSApplicationRecord"16@0:8
@"<VGOEMAppSOCStreaming>"16@0:8
v24@0:8@"<VGOEMAppSOCStreaming>"16
@32@0:8@16^@24
@"INCExtensionConnection"
@"LSApplicationRecord"
@"<VGOEMAppSOCStreaming>"
v24@0:8@"VGVirtualGarage"16
v32@0:8@"VGVirtualGarage"16@"NSArray"24
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"<VGVirtualGarageObserver>"
@"VGVirtualGarage"
@"NSXPCListener"
@24@0:8@?16
@"NSHashTable"
@"geo_isolater"
@"GEOObserverHashTable"
@"NSXPCConnection"
