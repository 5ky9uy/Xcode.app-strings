@333333
?333333
?es-8R
?ffffff
?333333
MbP?-C
?ffffff
>333?
__defaultValues
signature
archive
Concrete subclass must implement. Use either PHSettingsImplementRootSettings() or PHSettingsImplementChildSettings() macro for this.
PHSettings.m
%@: %ld assets [%ld]
 containing %ld containers with %ld total assets (last container index %ld)
Mismatched asset collections and asset fetch results
PLAssetContainerDataSource.m
PLCommentsFontCacheDidChangeNotification
RETAKE
CANCEL
CHOOSE_PHOTO_BUTTON
PREVIEW
CROP_OVERLAY_TITLE
MOTION_TOGGLE_ON
MOTION_TOGGLE_OFF
v16@?0@?<v@?@"NSArray">8
USE_VIDEO
SET_BOTH
SET_LOCK_SCREEN
SET_HOME_SCREEN
PLCameraPickerPause.png
PLCameraPickerPlay.png
FileSize
Done
Playback
Cancel
V:|[doCancelButton]-|
spacing
margin
H:|-(margin)-[doCancelButton]-(>=spacing)-%@-(margin)-|
doSetLockScreenButton
doSetHomeScreenButton
doSetBothScreenButton
motionToggle
doCancelButton
-(spacing)-
[motionToggle]
[doSetBothScreenButton]
[doSetHomeScreenButton]
[doSetLockScreenButton]
V:|[_doCancelButton]|
_doCancelButton
H:|[_doCancelButton][_separatorLine(==separatorWidth@999)][_doSetButton]|
_doCancelButton, _separatorLine, _doSetButton
separatorWidth
completionTarget
options
tile
com.apple.photos.plcropoverlay.save
Status shown while setting wallpaper
SAVING_PHOTO
should be able to make run loop source
PLDataArrayInputStream.m
sanity check for stream data
fadeInBorderForCollapse
collapseSingleImage
Contracted
Expanding
Complete Expand
Cancel Expand
Expanded
Contracting
Cancel Contract
Complete Contract
PLImageBorder
PLImageBorder@2x
ipad
_serverConnectionDiedNotification. Info -- notification=%@, AVPlayer = %@, currentTime = %.2f
GENERIC_COULD_NOT_LOAD_MOVIE
COULD_NOT_LOAD_MOVIE_ERROR_FMT
Error setting up TVOutWindow
Unable to start background task, TV Out window may not tear down.
readyForDisplay
externalPlaybackActive
status
rate
playbackLikelyToKeepUp
playbackBufferFull
playbackBufferEmpty
Could not load value for key %@:
duration
tracks
home-sharing://
http://
https://
PhotoKit Settings
Restore All Defaults
PhotoKit
resourceDownloadSettings
Resource Download Request
imageManagerSettings
Image Manager
PHPhotoLibrary *PLNavigationControllerInterfacePhotoLibrary(NSURL *)
Requested URL %@ does not match previous URL %@
PLNavigationControllerInterface.m
_UIImagePickerDebugSidecarFileURLs
v32@?0@"NSData"8@"PLImageDataInfo"16@"PLCPLDownloadContext"24
PUPhotoPickerOriginalImagePathSandboxExtensionToken
_UIImagePickerControllerPHAssetLocalIdentifier
NSDictionary *PLPhotoPickerDictionaryFromImage(NSDictionary *, PLPhotoTileViewController *, PLManagedAsset *, NSDictionary *, BOOL)
PLPhotoPickerDictionaryFromImage - _UIImagePickerControllerShowCameraControls may not be nil
PLPhotoPickerDictionaryFromImage - _UIImagePickerControllerReviewCapturedItem may not be nil
PLPhotoPickerDictionaryFromImage - UIImagePickerControllerSourceType may not be nil
_UIImagePickerControllerSourceType
PLPhotoPickerDictionaryFromImage - UIImagePickerSavingOptions may not be nil
_UIImagePickerSavingOptions
Loading_Error%@.png
_iPad
LOADING_PHOTO
Call -initWithFrame:photoTileController: or you get <rdar://problem/14272922> Comments using only half width of screen after swiping in landscape
PLPhotoTileViewController.m
BlueCheckSelected.png
BlueCheckUnselected.png
v36@?0@"NSData"8@"NSString"16I24@"NSDictionary"28
CAMImagePickerCameraViewController
v16@?0@"<UIViewControllerTransitionCoordinatorContext>"8
<%@ photo:%@
SelectedContentMode
notify_cancel() failed for Shared Photo Stream invitation failure activity notification. (%d)
notify_cancel() failed for kMSASStabilizedIdleStateDidChangeNotification. (%d)
notify_cancel() failed for kMSIdleStateDidChangeNotification. (%d)
failed to register for Shared Photo Stream invitation failure activity notification: %u
v12@?0i8
failed to register for Shared Photo Stream activity notification: %u
failed to register for Photo Stream activity notification: %u
0.0.0.0
MRMediaRemoteSetNowPlayingApplicationOverrideEnabled
void PLMRMediaRemoteSetNowPlayingApplicationOverrideEnabled(Boolean)
PLPhotosApplication.m
/System/Library/PrivateFrameworks/MediaRemote.framework/MediaRemote
/System/Library/PrivateFrameworks/MediaRemote.framework/Contents/MacOS/MediaRemote
void *MediaRemoteLibrary(void)
com.apple.mobileslideshow
com.apple.mobileslideshow.PreferenceChanged
LogJPEGDecodeTime
EnableIris
pLzf7OiX5nWAPUMj7BfI4Q
PLPhotosDefaultsDidChangeNotification
NowPlaying
FromIPhoto
SummarizeSections
validValues
Transition
items
plist
Photos
PLProgressHUDCheckmark
MEDIA_PROGRESS_NO_TIME_FORMAT
MEDIA_TIME_SECONDS_REMAINING_FORMAT
MEDIA_TIME_ONE_SECOND_REMAINING
COMPLETING_UPLOAD
MEDIA_TIME_MINUTES_REMAINING_FORMAT
MEDIA_TIME_ONE_MINUTE_REMAINING
MEDIA_PROGRESS_FORMAT
PLPublishingAgentFinishedPublishingNotification
PLPublishingAgentStartedPublishingNotification
PLPublishingAgentStartedRemakingNotification
PLPublishingAgentFinishedRemakingNotification
PLPublishingAgentRemakingDidSucceedKey
PLPublishingAgentDidCancelNotification
PLPublishingAgentsForcedCancelNotification
CLOSE
FAILED_PUBLISH_IMAGE
FAILED_PUBLISH_VIDEO
MEDIA_FAILURE_FORMAT
mailto:?subject=%@&body=%@
TELL_A_FRIEND
v16@?0@"UIAlertAction"8
VIEW_BUTTON_TITLE_FORMAT
PUBLISHED_IMAGE
PUBLISHED_VIDEO
PUBLISHED_MEDIA_FORMAT
SHARING_WAS_INTERRUPTED
SUBCLASS OVERRIDE
<override -[PLPublishingAgent serviceName]
PLPhotosApplication
MCFeatureCellularHDUploadsAllowed
NSString *getMCFeatureCellularHDUploadsAllowed(void)
PLPublishingAgent.m
/System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration
/System/Library/PrivateFrameworks/ManagedConfiguration.framework/Contents/MacOS/ManagedConfiguration
void *ManagedConfigurationLibrary(void)
MCProfileConnection
Class getMCProfileConnectionClass(void)_block_invoke
Unable to find class %s
%@.bundle
/System/Library/PublishingBundles/
B16@?0@"NSString"8
BLMigratingError
IPMS: failed adding %@ asset for %@ media to "%@" album (%@), asset may be hard to find!
IPMS: failed creating "%@" album (%@), album will be inexistent or incomplete after migration!
IPMS: failed backing up %@ to "%@", media may get duplicated during later migration attempts!
uuid
IPMS: failed correcting date for asset for %@ (%@)!
IPMS: failed updating asset for %@ (%@), asset will remain in iPhoto sandbox for later migration attempts!
IPMS: failed creating asset for %@, asset will remain in iPhoto sandbox for later migration attempts!
IPMS: failed creating asset for %@ (%@), asset will remain in iPhoto sandbox for later migration attempts!
longitude
latitude
IPMS: ignoring data for %@ (not migrating) because there is no image file!
IPMS: failed reading original data for %@, will use small rendered JPEG as original and drop adjustments!
IPMS: failed reading original data for %@, will use rendered JPEG as original and drop adjustments!
OriginalFullResolutionImage
AspectedThumbnail.jpeg
FullScreenImage.jpeg
mobileiphotomedia
dateCreated
%@ (%@)
fileName
rating
type
BLMigratingMediaFormat
Media.plist
title = %@
<IMPORTED FROM IPHOTO>
Media
library
Invalid parameter not satisfying: %@
PLiPhotoMigrationSupport.m
q24@?0@"NSDictionary"8@"NSDictionary"16
iPhotoMigratedData
iPhotoSandboxLibrary
IPMS: failed deleting iPhoto sandbox files of %@ (%@), will leave dangling files!
IPMS: failed creating "%@" (%@)!
'%@-%@'
iPhotoMigrationInFlight
v32@?0@"NSString"8Q16^B24
avAsset
PLPublishingMedia.m
managedAsset
[PLPublishingMedia isValidPublishingMedia:asset]
asset
v16@?0@"NSTimer"8
PLProgressIris%@-PhotoIris
-Compact
-Regular
v16@?0d8
PLSlalomGrabberHandle.png
Error: no external display attached in tv out mode
Restore Defaults
allowCaching
Caching
allowImageRequests
Image Requests
VIDEO_PLAYBACK_FAILED
VIDEO_TOO_LONG_TITLE
VIDEO_TOO_LONG_TITLE_IMAGE_PICKER
TRIM_FOR_PUBLISH_TITLE
TRIM_TITLE_IMAGE_PICKER
TRIM_VIDEO_NAV_TITLE
TRIM_VIDEO_NAV_TITLE_IMAGE_PICKER
_UIImagePickerControllerMaxZoomScaleOverride
_UIImagePickerControllerCustomBackgroundColor
_UIImagePickerControllerCancelButtonTitle
v24@?0@"UIImage"8@"NSDictionary"16
COMPRESSING_VIDEO
CHOOSE_VIDEO_TITLE
CHOOSE_PHOTO_TITLE
USE_PHOTO_BUTTON_TITLE
PLVideoOverlayGlyphMask
PLVideoOverlayBackgroundMask
aiff
3gp2
3gpp
v24@?0@"AVAssetExportSession"8@"NSError"16
PREPARING_VIDEO
TRIMMING_VIDEO
v40@?0@"AVAsset"8@"AVAudioMix"16@"AVVideoComposition"24@"NSError"32
media
PLVideoRemaker.m
fileLengthLimit
v8@?0
Video export failed for asset %@: %@
Failed to delete file at path %@: %@
Failed to write metadata to path %@
v20@?0B8@"NSError"12
Failed to commit adjustments with error: %@
v24@?0@"AVPlayerItem"8@"NSError"16
CANNOT_PLAY_STREAM_VIDEO_TITLE
Unable to copy CGImage at time:%f, error:[%@]
v16@?0@"PLManagedAsset"8
*** Error saving a copy trimmed video to the disk ... cleaning up state: %@
v32@?0@"NSDictionary"8@"NSURL"16@"NSError"24
*** Error generating video thumbnails ... cleaning up state: %@
Unable to assign data protection to "%@": %@
VIDEO_TOO_LONG_BODY
v80@?0{?=qiIq}8^{CGImage=}32{?=qiIq}40q64@"NSError"72
timestamps
v24@?0@"PHContentEditingInput"8@"NSDictionary"16
B16@?0@"PHAdjustmentData"8
v24@?0@"AVPlayerItem"8@"NSDictionary"16
<%@ path:%@>
com.apple.mobileslideshow.videoThumbnails
videoCameraImage must be either video or audio
simulateDownload == YES
simulateDownloadFailure
Simulate Download Failure
simulateDownload
Simulate Download
indexPath is out of range %@
UITableViewAdditions.m
v12@?0B8
opacity
(video-playback) setting buffering state to %lu
(video-playback) buffering state changed from %lu to %lu
(video-playback) calling _player pause in stop
(video-playback) calling _player pauseDueToInsufficientData
(video-playback) calling _player pause in pause
(video-playback) calling _player playDueToEnoughData
(video-playback) calling _player play in playFromBeginning
(video-playback) calling _player play
(video-playback) _playerRateDidChange %@
(video-playback) %@ observeValueForKeyPath %@ %@
PLNavigationControllerInterface unable to open system photo library: %@
CreateVideoDictionary
CreateImageDictionary
CreateMediaDictionary
CreateMultipleMediaDictionary
%{public}ld
Mis-matched image size and/or orientation for asset %@. PhotoKit: %.0f x %.0f (%ld). Data: %.0f x %.0f (%ld)
Will not begin new iPhoto migration; it appears a migration is already underway.
Video export failed for asset %@: %@
Marked temp file (%@) as purageble.
Unable to mark temp file (%@) purageble.
No PHAsset for committing pending adjustment changes
(video-playback) update poster frame visibility to %d
(video-playback) pause due to force stop
(video-playback) pause due to stop
(video-playback) pause due to video view pause
(video-playback) play in %@
Playing 360p video for cellular connection.
(streamed-video-playback) already have a cachedNonPersistedVideoPlaybackURL %@
(streamed-video-playback) will play streamed video using original video at path %@
(streamed-video-playback) will play video for %@
(video-playback) _verifyOrRestartPlayback playing %u didBuffer %u
(video-playback) _verifyOrRestartPlayback rate > 0
(video-playback) _verifyOrRestartPlayback telling movie player to play
(video-playback) pause due to reset
Failed to fetch playback objects for %@
(video-playback) moviePlayerPlaybackRateDidChange to 0
(video-playback) moviePlayerPlaybackRateDidChange to 1
(video-playback) play due to buffer state change
(video-playback) pauseDueToInsufficientData due to buffer state change
Clearing PLVideoView delegate before trim scrubber animation finished. Calling manually.
(video-playback) network reachability changes. Clears out cached video URL.
Requesting cleanupForStoreDemoMode
softlink:r:path:/System/Library/PrivateFrameworks/MediaRemote.framework/MediaRemote
softlink:r:path:/System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration
PHSettings
PLAVPlayerView
PLAssetContainerDataSource
PHAssetCollectionDataSource
NSObject
PLCAAnimationDelegate
CAAnimationDelegate
PLCGPathCache
PLCacheEntry
PLCache
PLCommentsFontCache
PLContactPhotoOverlay
PLCropOverlay
PLCropOverlayCropView
PLCropOverlayBottomBar
PLCropOverlayPreviewBottomBar
PLCropOverlayWallpaperBottomBar
PhotoSaving
PLDataArrayInputStream
PLExpandableImageView
PLExpandableView
PLImageScrollView
PLImageView
PLMoviePlayerController
PHRootSettings
PLMoviePlayerControllerManager
PLMoviePlayerView
PLNavigationControllerInterface
PLImagePickerUtils
PLPhotoTileCloudPlaceholderView
PLTilePlaceholderView
PLPhotoTilePlaceholderView
PLTileContainerView
PLPhotoTileViewController
PLPhotoTileCloudPlaceholderViewDelegate
UIGestureRecognizerDelegate
UIScrollViewDelegate
PLPhotosApplication
UIApplicationDelegate
PLPhotosDefaults
PLProgressHUD
PhotoLibrary
PLProgressView
PLPublishingAgent
PLDataArrayInputStreamProgressDelegate
PLPublishAlbum
PLiPhotoMigrationSupport
PLPublishingMedia
PLRoundProgressView
PLProgressArcLayer
PLSlalomRegionEditor
PLTVOutWindow
PLTiledLayer
PLTileableLayer
PLUIEditImageViewController
PHImageManagerSettings
PLUIView
PLUIEditVideoViewController
UINavigationControllerDelegate
UIImagePickerControllerDelegate
PLUIImageViewController
PLCropOverlayDelegate
PLPhotoTileViewControllerDelegate
PLVideoViewDelegate
PLFlatVideoOverlayButton
PLVideoOverlayButton
PLHighFidelityVideoOverlayButton
PLVideoRemaker
PLAssetImageGenerator
PLVideoPosterFrameView
PLVideoView
PLSlalomRegionEditorDelegate
PLMoviePlayerControllerDelegate
UIMovieScrubberDataSource
UIMovieScrubberDelegate
PLVideoEditingOverlayView
PHResourceDownloadSettings
PLWallpaperButton
_UIBackdropViewObserver
PhotosInternal
PhotoLibraryAdditions
T@"NSString",C,N
suiteName
setSuiteName:
sharedSettings
createSharedSettings
_userDefaults
_defaultsKey
_signatureDictionary
archiveDictionary
initWithDefaultValues
dictionary
standardUserDefaults
initWithSuiteName:
settingsFromArchiveDictionary:
isEqualToDictionary:
objectForKeyedSubscript:
handleFailureInMethod:object:file:lineNumber:description:
currentHandler
copy
parentSettings
save
synchronize
setObject:forKeyedSubscript:
dictionaryWithCapacity:
layer
T@"AVPlayerLayer",R,&,D,N
T@"AVPlayer",&,N
Tq,N,V_scaleMode
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
_scaleMode
initWithFrame:
player
setPlayer:
setScaleMode:
setScaleMode:duration:
videoRect
scaleMode
setVideoGravity:
setAnimationDuration:
setContentsOpaque:
layerClass
T@"PHFetchResult",R,N,V_assetCollectionsFetchResult
hash
TQ,R
superclass
T#,R
T@"NSString",R,C
debugDescription
_assetCollectionsFetchResult
_assetsFetchResultByAssetCollection
_allAssetsCount
_containerCounts
_cachedValuesNeedUpdate
_lastAssetCollectionIndex
T@"PHFetchResult",R,N
assetsInAssetCollection:
assetCollectionsFetchResult
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
description
initWithAssetCollectionsFetchResult:collectionsAssetsFetchResults:
dealloc
_updateCachedValues
_updateCachedCount:forContainerAtContainerIndex:
allAssetsCount
assetContainerForAsset:
assetContainerForAssetGlobalIndex:
globalIndexForIndexPath:
indexPathForGlobalIndex:
incrementGlobalIndex:insideCurrentAssetContainer:andWrap:
decrementGlobalIndex:insideCurrentAssetContainer:andWrap:
assetAtGlobalIndex:
globalIndexOfAsset:
indexOffsetForAssetContainerAtAssetIndex:
assetWithObjectID:
assetsInAssetCollectionAtIndex:
newAssetsFetchResults
assetAtIndexPath:
indexPathOfAsset:
assetContainerAtIndex:
indexOfContainer:
firstAssetIndexPath
lastAssetIndexPath
hasAssetAtIndexPath:
findNearestIndexPath:preferNext:
_indexOfNextNonEmptyAssetContainerAfterContainerIndex:wrap:
_indexOfPreviousNonEmptyAssetContainerBeforeContainerIndex:wrap:
incrementAssetIndexPath:insideCurrentAssetContainer:andWrap:
decrementAssetIndexPath:insideCurrentAssetContainer:andWrap:
assetCountForContainer:
assetCountForContainerAtIndex:
assetInAssetContainer:atIndex:
pl_fetchAllAssets
viewControllerPhotoLibraryDidChange:
countByEnumeratingWithState:objects:count:
appendFormat:
count
mutableCopy
allKeys
initWithCapacity:
hasIncrementalChanges
fetchAssetsInAssetCollection:options:
setIncludeHiddenAssets:
librarySpecificFetchOptions
photoLibrary
firstObject
removeObjectsForKeys:
removedObjects
insertedObjects
fetchResultAfterChanges
changeDetailsForFetchResult:
addObjectsFromArray:
pl_managedAssetsForAssets:
array
objectAtIndexedSubscript:
indexOfObject:
indexPathForItem:inSection:
item
section
objectAtIndex:
lastObject
fetchPHObjectsForOIDs:
arrayWithObjects:count:
objectIDAtIndex:
T@?,C,N,V_completion
T@?,C,N,V_start
_completion
_start
animationDidStart:
animationDidStop:finished:
completion
setCompletion:
start
setStart:
_pathCache
init
setPath:forKey:
pathForKey:
valueWithCGRect:
sharedPathCache
_object
_entry
setObject:
object
lruListEntry
_cacheEntries
_countLimit
_currentCount
_totalCostLimit
_currentCost
_lock
_lru
initWithCountLimit:totalCostLimit:
objectForKey:
setObject:forKey:
setObject:forKey:cost:
removeObjectForKey:
removeAllObjects
T@"UIFont",R,N
__shortCaptionFontDescriptor
__emphasizedShortCaptionFontDescriptor
__shortSubheadlineFontDescriptor
__bodyFontDescriptor
__emphasizedBodyFontDescriptor
__shortBodyFontDescriptor
_contentSizesDidChange:
_invalidateCache
_shortCaptionFontDescriptor
_emphasizedShortCaptionFontDescriptor
_shortSubheadlineFontDescriptor
_bodyFontDescriptor
_emphasizedBodyFontDescriptor
_shortBodyFontDescriptor
youLikeFont
likeFont
commentTextFont
commentAttributionDateFont
commentAttributionNameFont
commentEntryFont
commentSendButtonFont
fontWithDescriptor:size:
fontDescriptorWithSymbolicTraits:
preferredFontDescriptorWithTextStyle:addingSymbolicTraits:options:
postNotificationName:object:
defaultCenter
removeObserver:
addObserver:selector:name:object:
sharedCache
T@"UIImageView",R,N,V__avatarPreview
T@"CAShapeLayer",&,N,V_circularLayer
T@"UILabel",R,N,V_titleLabel
T{UIEdgeInsets=dddd},R,N
_titleLabel
__avatarPreview
_circularLayer
overlayEdgeInsets
_commonPLContactPhotoOverlayInitialization
initWithCoder:
layoutSubviews
inscribingBounds
beginAvatarTrackingFromImageView:
endAvatarTracking
titleLabel
_avatarPreview
circularLayer
setCircularLayer:
bounds
bringSubviewToFront:
addSublayer:
setFillColor:
CGColor
colorWithRed:green:blue:alpha:
setFillRule:
setPath:
CGPath
setUsesEvenOddFillRule:
appendPath:
bezierPathWithOvalInRect:
bezierPathWithRect:
sizeToFit
addSubview:
setTextColor:
whiteColor
setFont:
preferredFontDescriptorWithTextStyle:
setBackgroundColor:
clearColor
T@"PLCropOverlayBottomBar",R,N,V__bottomBar
T@"UIButton",R,N,V__cameraCancelButton
T@"PLContactPhotoOverlay",R,N,V_contactPhotoOverlay
T@"UIView",&,N
T@"PLCropOverlayWallpaperBottomBar",R,N
TB,N,V_motionToggleIsOn
TB,N,V_isEditingHomeScreen
TB,N,V_isEditingLockScreen
TB,N
displayedInPopover
TB,N,GisDisplayedInPopover,V_displayedInPopover
T@"NSString",C,N,V_defaultOKButtonTitle
T@"NSString",C,N,V_defaultCancelButtonTitle
T@"<PLCropOverlayDelegate>",W,N,V_delegate
_cropView
_shadowView
_overlayContainerView
_cropRect
_customToolbar
_topShineView
_hud
_statusBarHeight
_mode
_previewMode
_cropRectIsVisible
_offsetStatusBar
_tookPhoto
_showsCropRegion
_controlsAreVisible
_bottomShineView
_okButton
_wildcatPickerTopView
_wildcatPickerBottomView
_motionToggleIsOn
_isEditingHomeScreen
_isEditingLockScreen
_displayedInPopover
_contactPhotoOverlay
_defaultOKButtonTitle
_defaultCancelButtonTitle
_delegate
__bottomBar
__cameraCancelButton
initWithFrame:mode:offsettingStatusBar:
setDisplayedInPopover:
cameraBottomBar
setCameraBottomBar:
wallpaperBottomBar
controlsAreVisible
setControlsAreVisible:
overlayContainerView
setOverlayContainerView:
initWithFrame:mode:
_createCropView
insertIrisView:
bottomBar
bottomBarFrame
setCropRectVisible:duration:
_setMode:
didCapturePhoto
didCaptureVideo
didPlayVideo
didPauseVideo
mode
statusBarHeightDidChange:
setDelegate:
dismiss
_fadeOutCompleted:
cancelButtonClicked:
_tappedBottomBarCancelButton:
_tappedBottomBarDoneButton:
_tappedBottomBarSetHomeButton
_tappedBottomBarSetLockButton
_tappedBottomBarSetBothButton
_tappedBottomBarMotionToggle
_bottomBarFileSizeMenu
_bottomBarFileSizeMenuActions
setMotionToggleIsOn:
_updateMotionToggle
setIsEditingHomeScreen:
setIsEditingLockScreen:
_updateWallpaperBottomBarSettingButtons
setMotionToggleHidden:
motionToggleHidden
_tappedBottomBarPlaybackButton:
cropOverlayBottomBarPlayButtonClicked:
_playButtonPressed:
cropOverlayBottomBarPauseButtonClicked:
_pauseButtonPressed:
setEnabled:
hitTest:withEvent:
cropRect
setTitle:okButtonTitle:
setTitle:
titleRect
setOKButtonTitle:
setDefaultOKButtonTitle:
setDefaultCancelButtonTitle:
setOKButtonShowsCamera:
setCancelButtonTitle:
setShowProgress:title:
removeProgress
setProgressDone
setShowsCropRegion:
setTitleHidden:animationDuration:
setPreviewMode:
previewMode
_fileResizingButton
setFileResizingTitle:
setFileResizingHidden:
_updateTitle
_updateEditImageDoneButtonTitle
_updateEditImageCancelButtonTitle
_updateToolbarItems:
_updateCropRectInRect:
_newOverlayViewWithFrame:lighterEdgeOnTop:
isTelephonyUIMode:
isWallpaperUIMode:
contactPhotoOverlay
motionToggleIsOn
isEditingHomeScreen
isEditingLockScreen
isDisplayedInPopover
defaultOKButtonTitle
defaultCancelButtonTitle
delegate
_bottomBar
_cameraCancelButton
.cxx_destruct
resizableImageWithCapInsets:resizingMode:
colorWithWhite:alpha:
setItems:
arrayWithObjects:
initWithBarButtonSystemItem:target:action:
setTitle:forState:
length
setHidden:
setAlpha:
animateWithDuration:animations:
removeFromSuperview
setNeedsLayout
isEqualToString:
frame
isDescendantOfView:
menuWithTitle:children:
elementWithProvider:
animateWithDuration:animations:completion:
setFrame:
statusBarHeight
sharedApplication
userInterfaceIdiom
currentDevice
insertSubview:aboveSubview:
insertSubview:belowSubview:
setAutoresizingMask:
setOpaque:
setUserInteractionEnabled:
setCropRect:
_aboveCropView
_cropRectView
_belowCropView
_updateCropRectIfNeeded
_removeCropViews
setBorderWidth:
setBorderColor:
alpha
convertRect:fromView:
mainScreen
isStatusBarHidden
size
scale
safeAreaInsets
defaultHeight
lightGrayColor
setShowsMenuAsPrimaryAction:
setMenu:
setExclusiveTouch:
setTitleColor:forState:
buttonWithType:
addTarget:action:forControlEvents:
setShadowOffset:
setShadowColor:
setTextAlignment:
Tq,N,V_style
T@"UIView",&,N,V_cameraBottomBar
T@"PLCropOverlayPreviewBottomBar",&,N,V_previewBottomBar
T@"PLCropOverlayWallpaperBottomBar",&,N,V_wallpaperBottomBar
playingVideo
TB,N,GisPlayingVideo,V_playingVideo
inPopover
TB,N,GisInPopover,V_inPopover
_playingVideo
_inPopover
_style
_cameraBottomBar
_previewBottomBar
_wallpaperBottomBar
_commonPLCropOverlayBottomBarInitialization
setPreviewBottomBar:
setWallpaperBottomBar:
setStyle:
setStyle:animated:
setPlayingVideo:
togglePlaybackState
setInPopover:
_updateBottomBars
_updatePreviewBottomBarForPlaybackState
_isEditingStyle:
_updateStyle
style
previewBottomBar
isPlayingVideo
isInPopover
setImage:forState:
imageNamed:inBundle:
Tq,N,V_backgroundStyle
T@"UIButton",R,N,V_cancelButton
T@"UIButton",R,N,V_doneButton
T@"UIButton",R,N,V_playbackButton
T@"UIButton",R,N,V_fileResizingButton
_backgroundStyle
_cancelButton
_doneButton
_playbackButton
_commonPLCropOverlayEditPhotoBottomBarInitialization
safeAreaInsetsDidChange
setBackgroundStyle:
setBackgroundStyle:animated:
_updateBackgroundStyle
backgroundStyle
cancelButton
doneButton
playbackButton
fileResizingButton
textRectForBounds:limitedToNumberOfLines:
userInterfaceLayoutDirectionForSemanticContentAttribute:
semanticContentAttribute
setAdjustsFontSizeToFitWidth:
setAccessibilityIdentifier:
T@"_UILegibilityLabel",&,N,V_titleLabel
T@"UIView",&,N,V_separatorLine
T@"_UIBackdropView",&,N,V_backdropView
Td,N,V_maxToggleWidth
T@"PLWallpaperButton",R,&,N,V_doCancelButton
T@"PLWallpaperButton",R,&,N,V_doSetButton
T@"PLWallpaperButton",R,&,N,V_doSetHomeScreenButton
T@"PLWallpaperButton",R,&,N,V_doSetLockScreenButton
T@"PLWallpaperButton",R,&,N,V_doSetBothScreenButton
T@"PLWallpaperButton",R,&,N,V_motionToggle
TB,N,V_motionToggleHidden
TB,N,V_shouldOnlyShowLockScreenButton
TB,N,V_shouldOnlyShowHomeScreenButton
_motionToggleHidden
_shouldOnlyShowLockScreenButton
_shouldOnlyShowHomeScreenButton
_doCancelButton
_doSetButton
_doSetHomeScreenButton
_doSetLockScreenButton
_doSetBothScreenButton
_motionToggle
_separatorLine
_backdropView
_maxToggleWidth
_commonPLCropOverlayWallpaperBottomBarInitialization
_commonPLCropOverlayWallpaperBottomBarInitializationPhone
_commonPLCropOverlayWallpaperBottomBarInitializationPad
_layoutSubviewsPhone
_layoutSubviewsPad
widthForToggleText
setText:
_sizeForString:
sizeThatFits:
updateForChangedSettings:
doCancelButton
doSetButton
doSetHomeScreenButton
doSetLockScreenButton
doSetBothScreenButton
motionToggle
shouldOnlyShowLockScreenButton
setShouldOnlyShowLockScreenButton:
shouldOnlyShowHomeScreenButton
setShouldOnlyShowHomeScreenButton:
setTitleLabel:
separatorLine
setSeparatorLine:
backdropView
setBackdropView:
maxToggleWidth
setMaxToggleWidth:
string
sizeWithAttributes:
dictionaryWithObjects:forKeys:count:
font
setString:
sendSubviewToBack:
convertRect:fromCoordinateSpace:
activateConstraints:
constraintsWithVisualFormat:options:metrics:views:
stringWithFormat:
componentsJoinedByString:
addObject:
arrayWithCapacity:
initWithSettings:strength:string:font:
systemFontOfSize:
initWithContentColor:
addObserver:
initWithPrivateStyle:
setActive:
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:
numberWithDouble:
setTranslatesAutoresizingMaskIntoConstraints:
initWithUnsignedInt:
beginIgnoringInteractionEvents
initWithObjectsAndKeys:
cancelMouseTracking
_backgroundSavePhoto:cropRect:minimalCropDimension:
unsignedIntValue
_savePhotoFinished:
endIgnoringInteractionEvents
beginBackgroundSaveWithTile:progressTitle:completionCallbackTarget:options:
T@"<PLDataArrayInputStreamProgressDelegate>",N,V_progressDelegate
_dataArray
_bodyData
_dataCount
_dataLength
_dataOffset
_currentIndex
_currentOffset
_currentLength
_openEventSent
_streamStatus
_progressDelegate
_rls
_clientCallback
_clientContext
initWithDataArray:
_streamEventTrigger
_scheduleCallback
_scheduleInCFRunLoop:forMode:
_unscheduleFromCFRunLoop:forMode:
_setCFClientFlags:callback:context:
scheduleInRunLoop:forMode:
removeFromRunLoop:forMode:
open
close
streamError
streamStatus
_updateProgress
_scheduleProgressUpdate
read:maxLength:
totalBytes
bytesRead
hasBytesAvailable
getBuffer:length:
progressDelegate
setProgressDelegate:
bytes
performSelector:withObject:afterDelay:inModes:
arrayWithObject:
cancelPreviousPerformRequestsWithTarget:selector:object:
getCFRunLoop
stream:handleEvent:
T{CGSize=dd},R,N
T@"PLVideoView",&,N
TB,R,N
borderAndAccessoriesVisible
TB,N,GisBorderAndAccessoriesVisible
T@"PLManagedAsset",&,N,V_photo
_imageView
_imageID
_originalSize
_originalWidth
_originalAngle
_anchorPoint
_imageRotationAngle
_pinchWidth
_pinchAngle
_pinchScale
_initialExpandingFrame
_originalBounds
_currentAngle
_centerOffset
_photo
_exImageFlags
initWithFrame:frameStyle:withBorder:
initWithFrame:frameStyle:
pointInside:withEvent:
_currentScale
_expandedScale
_expansionFraction
_snappedExpandedFrame
stateDidChangeFrom:
_setOriginalSize:
beginTrackingPinch:
setSize:angle:
_borderAlphaForExpansionFraction:
_updateBorderAndAccessoriesAlpha
_updatePinchWidthAndScaleWithLeftPoint:rightPoint:
continueTrackingPinch:
_newSizeFromSize:
setTransformAndCenterForFrame:
completeTrackingPinch:toState:duration:
_bounceBack:finished:context:
_bounceToPlace:finished:context:
finishTransition
_contentView
setCenter:
setBorderAndAccessoriesVisible:
isBorderAndAccessoriesVisible
setImage:isFullscreen:
setImage:
image
setFullSizeImageJPEGData:size:orientation:
setName:
name
showsPlaceholder
setShowsPlaceholder:
imageView
imageSize
frameOfImage
videoView
setVideoView:
imageRotationAngle
setShadowEnabled:
isShadowEnabled
setTransitionProgress:
transitionProgress
isBeingManipulated
setTextBadgeString:
renderSnapshotInContext:
photo
setPhoto:
superview
layoutIfNeeded
center
layoutBelowIfNeeded
boolValue
commitAnimations
setAnimationDidStopSelector:
setAnimationDelegate:
setAnimationCurve:
beginAnimations:context:
performSelector:withObject:afterDelay:
setAnimationDelay:
setAnchorPoint:
convertPoint:toView:
velocity
setTransform:
locationOfTouch:inView:
convertRect:toView:
setBounds:
setEdgeAntialiasingMask:
imageBorderWidth
T{CGRect={CGPoint=dd}{CGSize=dd}},N
_collapsingCompletionHandler
_expansionCompletionHandler
_contractedFrame
_expandedFrame
_leftTouchLocation
_rightTouchLocation
_previousLeftLocation
_previousRightLocation
_leftTouchIndex
_rightTouchIndex
_pinchVelocity
_trackingTimeInterval
_expandFlags
_setAutorotationDisabled:
_notifyDidCompleteCollapsing
_notifyWillBeginExpanding
_notifyWillCancelCollapsingWithDuration:
_notifyWillCompleteCollapsingWithDuration:
_notifyWillCompleteExpandingWithDuration:
_notifyWillCancelExpandingWithDuration:
_notifyDidCompleteExpanding
_notifyWillBeginCollapsing
_notifyDidCancelExpanding
_notifyDidCancelCollapsing
_transitionFromContracted:withDuration:
_transitionFromExpanding:withDuration:
_transitionFromCompleteExpand:withDuration:
_transitionFromCancelExpand:withDuration:
_transitionFromExpanded:withDuration:
_transitionFromContracting:withDuration:
_transitionFromCancelContract:withDuration:
_transitionFromCompleteContract:withDuration:
setState:withDuration:
stateWillChangeTo:
willMoveToWindow:
didMoveToWindow
notifyExpansionFraction:force:
startedPinch:
continuedPinch:
finishedPinch:
canceledPinch:
finishTransitionToState:
snapState:
updatePinchState:
pinchRect:inView:insetTouches:
collapseWithAnimation:completion:
expandWithAnimation:completion:
setContractedFrame:
contractedFrame
setExpandedFrame:
expandedFrame
setAllowsExpansion:
allowsExpansion
state
previousState
setExpansionFraction:
expansionFraction
isTracking
_canPinch
canCollapse
expandableView:expansionFractionChanged:
expandableViewDidCancelCollapsing:
expandableView:willCancelCollapsingWithDuration:
expandableViewDidCompleteCollapsing:
expandableView:willCompleteCollapsingWithDuration:
expandableViewDidBeginCollapsing:
expandableViewDidCancelExpanding:
expandableView:willCancelExpandingWithDuration:
expandableViewDidCompleteExpanding:
expandableView:willCompleteExpandingWithDuration:
expandableViewWillBeginExpanding:
transform
numberOfTouches
_removeAllAnimations:
endDisablingInterfaceAutorotation
isInterfaceAutorotationDisabled
beginDisablingInterfaceAutorotation
TB,N,V_adjustZoomScaleAfterRotation
_adjustZoomScaleAfterRotation
willAnimateRotationToInterfaceOrientation:
adjustZoomScaleAfterRotation
setAdjustZoomScaleAfterRotation:
setContentOffset:
contentOffset
zoomScale
setDecelerationRate:
setScrollsToTop:
T@"NSString",C,N,V_name
dimmed
TB,N,GisDimmed
Tf,N
shadowEnabled
TB,N,GisShadowEnabled
Td,N,V_transitionProgress
T@"UIView",&,N,V_leftAccessoryView
T{CGSize=dd},N,V_leftAccessoryViewOffset
T@"UIView",&,N,V_bottomRightAccessoryView
Td,N,V_accessoryViewsAlpha
TB,R,N,V_showsPlaceholder
Td,N,V_placeholderScale
_name
_borderView
_videoView
_placeholderView
_leftAccessoryView
_bottomRightAccessoryView
_leftAccessoryViewOffset
_textBadge
_shadowEnabled
_suppressShadowDrawing
_borderViewIsVisible
_drawsBorder
_aspectRatio
_lastBorderAlphaTime
_lastShadowAlphaTime
_transitionProgress
_edgeAntialiasingEnabled
_fullSizeImageTiledLayer
_fullSizeImageOrientation
_showsPlaceholder
_accessoryViewsAlpha
_placeholderScale
sizeThatFits:allowRounding:
_leftAccessoryViewFrame
_bottomRightAccessoryViewFrame
_updateShadowPath
updateFullSizeImageVisibleArea
_transformForFullSizeImageTiledLayer
_setShadowEnabled:force:
parentDidLayout
setBorderAndAccessoriesAlpha:forced:
setBorderAndAccessoriesAlpha:
borderAndAccessoriesAlpha
setDrawsBorder:
drawsBorder
setDimmed:
isDimmed
setEdgeAntialiasingEnabled:
setPlaceholderScale:
placeholderSize
_updatePlaceholderLayout
_updatePlaceholderAlpha
textBadgeString
setLeftAccessoryView:
setLeftAccessoryView:animated:
setLeftAccessoryViewOffset:
setBottomRightAccessoryView:
setBottomRightAccessoryView:animated:
setAccessoryViewsAlpha:
leftAccessoryView
leftAccessoryViewOffset
bottomRightAccessoryView
accessoryViewsAlpha
placeholderScale
insertSubview:below:
setAllowsGroupOpacity:
textBadgeForString:photoSize:
text
opacity
setOpacity:
setContentsCenter:
setContentsScale:
setContents:
URLForResource:withExtension:
bundleForClass:
setShadowRadius:
setShadowOpacity:
shadowOpacity
convertRect:fromLayer:
removeFromSuperlayer
screen
setShadowPath:
commit
setValue:forKey:
begin
badgeOffset
renderInContext:
setAllowsDisplayCompositing:
setAllowsEdgeAntialiasing:
setContentMode:
initialize
shouldDrawShadows
setSize:
setCornerRadius:
setMinimumScaleFactor:
setBaselineAdjustment:
setLineBreakMode:
initWithWhite:alpha:
blackColor
TB,N,V_TVOutEnabled
TB,N,S_setForceDisableTVOut:,V_forceDisableTVOut
TB,N,V_isActiveController
T@"<PLMoviePlayerControllerDelegate>",N,V_delegate
T@"AVPlayer",R,&,N,V_player
T@"PLMoviePlayerView",R,&,N,V_view
Tf,R,N
TQ,R,N,V_playbackState
Td,R,N
Td,N
TQ,R,N,V_bufferingState
TB,R,N,V_isPreparedForPlayback
_playerItem
_player
_view
_tvOutWindow
_hasPendingTime
_pendingTime
_pendingTimeSnapOption
_forceUpdateCurrentTime
_isExternalPlayback
_exited
_lastSetCurrentTimeTime
_isSeeking
_backgroundTaskId
_audioSessionActive
_originalAudioCategory
_TVOutEnabled
_forceDisableTVOut
_isPreparedForPlayback
_isActiveController
_bufferingState
_playbackState
_registerForNotifications
_unregisterForNotifications
_playerKeysToObserve
_setupPlayer
_tearDownPlayer
_asset
setPlayerItem:startTime:
_setPlayerItem:
_loadAsset:
_didLoadValueOfKey:forAsset:
observeValueForKeyPath:ofObject:change:context:
_dispatchOnMainThreadWithBlock:
_playerRateDidChange:
play
playFromBeginning
playDueToEnoughData
pause
pauseDueToInsufficientData
stop
resetPlayer
setCurrentTime:
setCurrentTime:timeSnapOption:
setCurrentTime:timeSnapOption:forceUpdate:
_updateFromPendingTime
_delayedUpdateFromPendingTime
duration
playbackRate
currentTime
_streamBufferFull
_streamLikelyToKeepUp
_streamRanDry
_streamUnlikelyToKeepUp
_setBufferingState:
_setPlaybackState:
_simpleRemoteNotification:
_pausePlaybackForNotification
_willSuspendNotification:
_willBeginSuspendAnimationNotification:
_willResignNotification:
_didEnterBackgroundNotification:
_willEnterForegroundNotification:
_screenDidConnect:
_screenDidDisconnect:
videoOutActive
tearDownTVOutWindow
_setForceDisableTVOut:
_updateTVOutEnabled
_restoreTVOutVideoIfNecessary
_displayVideoView
_setupTVOutWindow
_tearDownTVOutWindow
_allowsExternalPlayback
_updateDisableAirPlayMirroringDuringPlayback
isExternalPlayback
externalPlaybackType
_updateBackgroundViewInformation
requestToBecomeActiveController
requestToResignAsActiveController
didBecomeActiveController
willResignAsActiveController
_playerItemDidReachEndNotification:
_playerItemFailedToPlayToEndNotification:
_playerItemFailedToPlayToEnd:
_playbackFailedWithError:
_exitPlayer:
_serverConnectionDidDie:
view
bufferingState
playbackState
TVOutEnabled
setTVOutEnabled:
forceDisableTVOut
isPreparedForPlayback
isActiveController
setIsActiveController:
error
addAction:
actionWithTitle:style:handler:
alertControllerWithTitle:message:preferredStyle:
localizedDescription
applicationState
domain
code
setUsesExternalPlaybackWhileExternalScreenIsActive:
setAllowsExternalPlayback:
endBackgroundTask:
_setCALayerDestinationIsTVOut:
isSuspendedUnderLock
beginBackgroundTaskWithExpirationHandler:
isExternalPlaybackActive
_isStreamableAsset:
rate
seekToTime:toleranceBefore:toleranceAfter:completionHandler:
floatValue
null
isMainThread
intValue
status
statusOfValueForKey:error:
loadValuesAsynchronouslyForKeys:completionHandler:
replaceCurrentItemWithPlayerItem:
addObserver:forKeyPath:options:context:
removeObserver:name:object:
removeObserver:forKeyPath:context:
seekToTime:toleranceBefore:toleranceAfter:
setActionAtItemEnd:
setExternalPlaybackVideoGravity:
setAudioSession:
setCategory:error:
auxiliarySession
endReceivingRemoteControlEvents
beginReceivingRemoteControlEvents
AVAssetURLWithPath:
_isNetworkSupportedPath:
compare:options:range:
absoluteString
URLFromPath:
settingsControllerModule
moduleWithTitle:contents:
sectionWithRows:
rowWithTitle:action:
actionWithSettingsKeyPath:
sectionWithRows:title:
rowWithTitle:childSettingsKeyPath:
T@"PHImageManagerSettings",R,N,V_imageManagerSettings
T@"PHResourceDownloadSettings",R,N,V_resourceDownloadSettings
_imageManagerSettings
_resourceDownloadSettings
imageManagerSettings
resourceDownloadSettings
_playerStack
moveControllerToTopOfStack:
removeControllerFromStack:
removeObject:
sharedInstance
T@"UIView",R,&,N
Tq,R,N,V_destinationPlaceholderStyle
destinationPlaceholderHidden
TB,N,GisDestinationPlaceholderHidden
_avPlayerView
_destinationPlaceholderHidden
_destinationPlaceholderStyle
reattachVideoView
isDestinationPlaceholderHidden
setDestinationPlaceholderHidden:
_installBackgroundView:
destinationPlaceholderStyle
insertSubview:atIndex:
parentViewController
uiipc_imagePickerController
CGImage
initWithCGImage:imageOrientation:
isMultiLibraryModeEnabled
initWithPhotoLibraryURL:
openAndWaitWithUpgrade:error:
sharedPhotoLibrary
_imagePickerSavingOptions
sourceType
_valueForProperty:
showsCameraControls
assetURLForPhoto:
identifier
localIdentifier
assetsdClient
debugClient
debugSidecarFileURLsForAsset:debugSidecarFileURLs:error:
sandboxExtensionToken
initWithData:
sharedAssetsSaver
objectID
defaultFormatChooser
fullScreenFormatForCurrentDevice
uiipc_useTelephonyUI
formatID
requestSynchronousImageForAssetOID:withFormat:allowPlaceholder:wantURLOnly:networkAccessAllowed:trackCPLDownload:outImageDataInfo:outCPLDownloadContext:
CGRectValue
fileExtension
preferredFileExtensionForType:
compare:options:
uiipc_filterForMediaTypes:
systemPhotoLibrary
assetURLForPhoto:extension:
numberWithInt:
_properties
_newOriginalImageForPickerFromCachedData
_imageOrientation
changeRequestForAsset:
incrementShareCount
performChanges:completionHandler:
pathManager
libraryURL
pl_PHAssetFromPhotoLibrary:
uiipc_imagePickerOptions
_imagePickerDidCompleteWithInfo:
pl_managedAsset
fileURLWithPath:isDirectory:
_imagePickerDidCompleteWithInfoArray:
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
integerValue
addEntriesFromDictionary:
_loadingIndicatorView
_loadingContainerView
_loadingErrorButton
_indicatorIsVisible
_showingError
_showingLoading
_imageRect
_toolbarVisible
_lastViewPhaseChangeDate
fadeOutSoonIfNeededAndRemoveFromSuperview:
showLoadingIndicatorWhenReady
showErrorIndicator
showLoadingIndicator
updateCloudDownloadProgress:
setImageRect:
setToolbarVisible:
setRetryDelegate:
_retryDownload
defaultHeightForBarSize:
statusBarOrientation
convertPoint:fromView:
animateWithDuration:delay:options:animations:completion:
setImageEdgeInsets:
timeIntervalSinceReferenceDate
_loadingLabel
boldSystemFontOfSize:
startAnimating
initWithActivityIndicatorStyle:
setClipsToBounds:
_photoTileController
initWithFrame:photoTileController:
willMoveToSuperview:
clearBackReference
canBecomeFirstResponder
_viewWillMoveToSuperView:
T@"UIView",&,N,S_setCustomCenterOverlay:,V__customCenterOverlay
T@"PHAsset",R,N
Ti,N,V_inflightFullSizeImageRequestID
T@"UIImage",&,N
T@"UIImage",&,N,V_unscaledImage
TB,N,V_centerContentVertically
T{UIEdgeInsets=dddd},N,V_overlayInsets
TB,N,V_forceNativeScreenScale
TB,N,V_force1XCroppedImage
T@"NSNumber",&,N,V_maxZoomScaleOverride
TB,N,V_wantsCompactLayout
TB,N,V_reviewing
TB,N,V_picked
TB,N,V_shouldHideProgressIndicator
TB,N,V_shouldSupressViewWillTransitionToSize
_image
_pendingImage
_unscaledImage
_modelPhoto
_scrollView
_gradientView
_reviewCheckmarkImageView
_currentTileDownloadFinished
_singleTapGestureRecognizer
_doubleTapGestureRecognizer
_tileDelegate
_imageSize
_tileFrame
_zoomToFillInsteadOfToFit
_useLessThanMinZoomForZoomedOutTest
_allowZoomToFill
_orientationDelegate
_cropRectZoomScale
_cropOverlayRect
_doubleTapZoomScale
_minZoomScale
_zoomToFillScale
_clientIsTemporarilyWallpaper
_userDidAdjustWallpaper
_wallpaperPortraitZoomScale
_wallpaperLandscapeZoomScale
_zoomScaleBeforeZooming
_cropRectBeforeDragging
_force1XCroppedImage
_forceNativeScreenScale
_centerContentVertically
_didEndZoomingBlock
_dispatchTimer
_dispatchStartTime
_dispatchTimeElapsed
_hasNotedZoom
_imageIsThumbnail
_isTVOut
_zooming
_autoZooming
_zoomGesturesEnabled
_userDidZoom
_ignoreZoomChange
_tileParentIsPageController
_lockedUnderCropOverlay
_viewDidAppear
_viewWillAppear
_didRequestFullSizeImage
_useZoomScaleForCropRect
_avalancheBadgeShouldBeHidden
_badgeShouldBeVisible
_containerView
__cachingImageManager
_fullSizeImageRequestID
_customCenterOverlayConstraints
_shouldUpdateBadgeViewOptimalLayout
_badgeViewOptimalLayoutLowestTop
_isLoadingFullSizeImage
_wantsCompactLayout
_reviewing
_picked
_shouldHideProgressIndicator
_shouldSupressViewWillTransitionToSize
_inflightFullSizeImageRequestID
_maxZoomScaleOverride
__customCenterOverlay
_overlayInsets
retryDownload
gestureRecognizerShouldBegin:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldReceivePress:
gestureRecognizer:shouldReceiveEvent:
scrollViewDidScroll:
scrollViewDidZoom:
scrollViewWillBeginDragging:
scrollViewWillEndDragging:withVelocity:targetContentOffset:
scrollViewDidEndDragging:willDecelerate:
scrollViewWillBeginDecelerating:
scrollViewDidEndDecelerating:
scrollViewDidEndScrollingAnimation:
viewForZoomingInScrollView:
scrollViewWillBeginZooming:withView:
scrollViewDidEndZooming:withView:atScale:
scrollViewShouldScrollToTop:
scrollViewDidScrollToTop:
scrollViewDidChangeAdjustedContentInset:
setOverlayInsets:
initWithModelPhoto:image:frame:isThumbnail:imageOrientation:allowZoomToFill:mode:
initForPageController
initWithModelPhoto:thumbnailImage:size:
cachingImageManager
_teardownDispatchTimer
_canShowWhileLocked
tileIsOnScreen
_setPhoto:
_updateVideoViewForModelPhoto
thumbnailImage
setThumbnailImage:
tileFrame
setTileFrame:
setZoomScale:
setCropOverlayRect:forCropRect:
setZoomingGesturesEnabled:
forceZoomingGesturesEnabled
expandableImageView
_newCGImageBackedUIImageFromImage:
scrollView
updateCenterOverlay
_setCustomCenterOverlay:
hideContentView
showContentView
tileDelegate
setTileDelegate:
isTVOut
setTVOut:
userDidAdjustWallpaper
_clientIsWallpaper
setClientIsWallpaper:
allowsEditing
gesturesEnabled
setGesturesEnabled:
_repositionBadgeView
photoShouldHaveHDRBadge
photoShouldHaveAvalancheBadge
setAvalancheBadgesHidden:
_setupBadgeView
_showBadgeViewIfAppropriate
setBadgeVisible:
setBadgeVisible:animated:
_configureViews
installVideoOverlay:
_installSubview:
_updateSubviewOrdering
_updatePlaceholderViewAnimated:
_centerImageInScrollView
_adjustScrollViewContentOffsetForInsets
_updateContentInset
_updatePlaceholderImageRect
_updatePlaceholderVisibility
setShouldHideProgressIndicator:
_updateModelPhotoWithImage:
_setImage:isThumbnail:preserveFrame:
refreshTileWithFullScreenImage:modelPhoto:
didLoadImage
_removePlaceholderView
showErrorPlaceholderView
setFullSizeImage:
hasFullSizeImage
cancelFullSizeImageRequest
loadView
viewDidDisappear:
updateForVisibleOverlays:
noteParentViewControllerDidDisappear
scrollView:contentSizeForZoomScale:withProposedSize:
shouldAutorotateToInterfaceOrientation:
viewWillTransitionToSize:withTransitionCoordinator:
_performRotationUpdatesWithDuration:size:
_resetZoomCommon
viewDidLayoutSubviews
viewSafeAreaInsetsDidChange
didMoveToParentViewController:
updateViewConstraints
resetZoom
viewWillAppear:
viewDidAppear:
applicationWillResignActive:
applicationDidBecomeActive:
ensureFullSizeImageLoaded
_handleSingleTap:
_requestFullSizeImage
_handleFullSizeImageRequestResult:dataUTI:orientation:
_handleDoubleTap:
newImageWithCropRect:minimalCropDimension:croppedImageData:fullScreenImageData:imageCropRect:intersectCropWithFullRect:
_getFullScreenImageData:forImage:fullSize:imageView:screenScaleTransform:
_newImageForAsset:targetSize:cropRect:fullSize:
dictionaryWithCroppedImageForRect:minimalCropDimension:withOptions:
zoomToScale:animated:completionBlock:
_setDidEndZoomingBlock:
_performDidEndZoomBlock
minRotatedScale
_calculateZoomScale:inView:
minZoomScale
zoomToFillScale
zoomToFitScale
defaultZoomScale
currentToMinZoomRatio
currentToDefaultZoomRatio
isZoomedOut
setOrientationDelegate:
_setDefaultZoomScale
reloadZoomScale
updateZoomScales
setAllowsZoomToFill:
imageOrientation
updateAfterCollapse
_adjustZoomForEnteringMode:
setLockedUnderCropOverlay:
_setupReviewCheckmark
setReviewing:
setReviewing:animated:
setPicked:
_updateReviewCheckmark
centerContentVertically
setCenterContentVertically:
unscaledImage
setUnscaledImage:
forceNativeScreenScale
setForceNativeScreenScale:
force1XCroppedImage
setForce1XCroppedImage:
inflightFullSizeImageRequestID
setInflightFullSizeImageRequestID:
overlayInsets
maxZoomScaleOverride
setMaxZoomScaleOverride:
wantsCompactLayout
setWantsCompactLayout:
reviewing
picked
shouldHideProgressIndicator
shouldSupressViewWillTransitionToSize
setShouldSupressViewWillTransitionToSize:
_customCenterOverlay
setHighlightedImage:
setZoomScale:animated:
setMinimumZoomScale:
setMaximumZoomScale:
cloudPlaceholderKind
isCloudSharedAsset
doubleValue
viewIfLoaded
statusBarFrame
statusBarStyle
keyWindow
isViewLoaded
requestImageForAsset:targetSize:contentMode:options:resultHandler:
defaultManager
setResizeMode:
setNormalizedCropRect:
setSynchronous:
zoomToRect:animated:
locationInView:
isUserInteractionEnabled
complete
pixelHeight
pixelWidth
conformsToType:
typeWithIdentifier:
requestImageDataAndOrientationForAsset:options:resultHandler:
setNetworkAccessAllowed:
setLoadingMode:
setDeliveryMode:
uuid
addConstraints:
transitionDuration
animateAlongsideTransition:completion:
targetTransform
visibleBounds
isDragging
setView:
cancelImageRequest:
isTimelapsePlaceholder
setContentInset:
contentSize
contentInset
isCloudPlaceholder
shouldShowPlaceholderForAsset:
addGestureRecognizer:
setContentInsetAdjustmentBehavior:
setBouncesZoom:
setShowsVerticalScrollIndicator:
setShowsHorizontalScrollIndicator:
setPreservesCenterDuringRotation:
setAlwaysBounceHorizontal:
setAlwaysBounceVertical:
setContentSize:
isAudio
isStreamedVideo
representsBurst
isMediaSubtype:
mediaType
setNeedsUpdateConstraints
removeGestureRecognizer:
removeFailureRequirement:
requireGestureRecognizerToFail:
windows
removeAllGestureRecognizers
removeTarget:action:
setNumberOfTapsRequired:
initWithTarget:action:
tileSize
tvOutTileSize
newPhotoTileViewControllerWithFrame:imageRef:imageOrientation:allowZoomToFill:mode:
newPhotoTileViewControllerWithFrame:image:allowZoomToFill:mode:
newPhotoTileViewControllerWithFrame:modelPhoto:mode:
_shouldForwardViewWillTransitionToSize
synchronousImageForAsset:targetSize:contentMode:options:
screens
orientedHeight
orientedWidth
localAvailability
masterThumbnailResource
TB,R,N,V_isReachable
TB,R,N,V_isOnWifi
T@"NSString",&,N,V_currentTestName
T@"NSDictionary",&,N,V_currentTestOptions
T@"NSSet",C,N,V_notificationSuppressionContexts
window
T@"UIWindow",&,N
_receivingRemoteControlEvents
_observeForRechabilityChanges
_isReachable
_isOnWifi
_photoStreamActivityToken
_sharedPhotoStreamActivityToken
_sharedPhotoStreamInvitationFailureToken
_currentTestName
_currentTestOptions
_notificationSuppressionContexts
applicationDidFinishLaunching:
application:willFinishLaunchingWithOptions:
application:didFinishLaunchingWithOptions:
application:handleOpenURL:
application:openURL:sourceApplication:annotation:
application:openURL:options:
applicationDidReceiveMemoryWarning:
applicationWillTerminate:
applicationSignificantTimeChange:
application:willChangeStatusBarOrientation:duration:
application:didChangeStatusBarOrientation:
application:willChangeStatusBarFrame:
application:didChangeStatusBarFrame:
application:didRegisterUserNotificationSettings:
application:didRegisterForRemoteNotificationsWithDeviceToken:
application:didFailToRegisterForRemoteNotificationsWithError:
application:didReceiveRemoteNotification:
application:didReceiveLocalNotification:
application:handleActionWithIdentifier:forLocalNotification:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:completionHandler:
application:handleActionWithIdentifier:forLocalNotification:withResponseInfo:completionHandler:
application:didReceiveRemoteNotification:fetchCompletionHandler:
application:performFetchWithCompletionHandler:
application:performActionForShortcutItem:completionHandler:
application:handleEventsForBackgroundURLSession:completionHandler:
application:handleWatchKitExtensionRequest:reply:
applicationShouldRequestHealthAuthorization:
application:handlerForIntent:
application:handleIntent:completionHandler:
applicationDidEnterBackground:
applicationWillEnterForeground:
applicationProtectedDataWillBecomeUnavailable:
applicationProtectedDataDidBecomeAvailable:
application:supportedInterfaceOrientationsForWindow:
application:shouldAllowExtensionPointIdentifier:
application:viewControllerWithRestorationIdentifierPath:coder:
application:shouldSaveSecureApplicationState:
application:shouldRestoreSecureApplicationState:
application:willEncodeRestorableStateWithCoder:
application:didDecodeRestorableStateWithCoder:
application:shouldSaveApplicationState:
application:shouldRestoreApplicationState:
application:willContinueUserActivityWithType:
application:continueUserActivity:restorationHandler:
application:didFailToContinueUserActivityWithType:error:
application:didUpdateUserActivity:
application:userDidAcceptCloudKitShareWithMetadata:
application:configurationForConnectingSceneSession:options:
application:didDiscardSceneSessions:
applicationShouldAutomaticallyLocalizeKeyCommands:
setWindow:
useCompatibleSuspensionAnimation
photosPreferencesChanged
_applicationWillEnterForeground:
prepareForApplicationWillEnterForeground
_applicationDidEnterBackground:
prepareForApplicationDidEnterBackground
_applicationDidBecomeActive:
prepareForApplicationDidBecomeActive
_updateSuspensionSettings
setReceivingRemoteControlEvents:
_networkReachabilityDidChange:
_startObservingReachabilityChanges
_stopObservingReachabilityChanges
enableNetworkObservation
disableNetworkObservation
_registerForPhotoStreamActivityNotifications
_unregisterForPhotoStreamActivityNotifications
handleImportCompleteAlertResponse:flags:
isReachable
isOnWifi
currentTestName
setCurrentTestName:
currentTestOptions
setCurrentTestOptions:
notificationSuppressionContexts
setNotificationSuppressionContexts:
unregisterIdleStateChangeObserverWithToken:
_displayAndRemovePhoneInvitationFailures
registerIdleStateChangeObserverWithToken:handler:
removeObserver:forHostname:
sharedNetworkObserver
addObserver:selector:forHostname:
postNotificationName:object:userInfo:
dictionaryWithObjectsAndKeys:
initWithBool:
updateSuspendedSettings:
shouldMakeUIForDefaultPNG
userDidLeavePhotosApplication
applicationIsInForeground:photoLibraryURL:
systemLibraryURL
setStatusBarShowsProgress:
clientApplicationWillEnterForeground
_setRotationDisabledDuringTouch:
registerDefaults:
sharedStreamsExplictlyDisabledForPhotoLibraryURL:
handlePossibleCoreDataError:
px_deprecated_appPhotoLibrary
_shouldPlayMusic
_summarizeMomentSections
_transition
_musicCollection
reloadPhotoDefaultValues
_reloadPhotoDefaultValuesAndNotify:
summarizeMomentSections
transitionForAnimationMovingForward:
transition
setTransition:
shouldPlayMusic
setShouldPlayMusic:
setMusicCollection:
musicCollection
randomTransition
numberWithBool:
valueForKeyPath:
valueForKey:
initWithContentsOfFile:
pathForResource:ofType:
mainBundle
_activityIndicatorView
_label
_checkmarkView
_isShowing
showInView:
hide
done
defaultSizeForStyle:
initWithImage:
_flatImageWithColor:
stopAnimating
setNeedsDisplay
contentView
_setBackdropMaskViewFlags:
resizableImageWithCapInsets:
bezierPathWithRoundedRect:byRoundingCorners:cornerRadii:
connectedScenes
activationState
isKeyWindow
pl_firstKeyWindow
T@"UIWindow",R,N
Tq,N,V_backgroundType
T@"UIView",&,N,V_backgroundView
T@"UIView",&,N,V_backgroundTintedView
T@"_UIBackdropView",&,N,V_backgroundBlurredView
TB,N,V_showsCancelButton
T@?,C,N,V_cancelationHandler
_labelView
_progressView
_topDivider
_didLayout
_didSetPermanantTextOnLabelView
_progressFormatter
_backgroundType
_backgroundView
_backgroundTintedView
_backgroundBlurredView
_showsCancelButton
_cancelationHandler
setBackgroundType:
_syncToBackgroundType
_installBackgroundView
_installBackgroundBlurredView
_removeBackgroundBlurredView
_installBackgroundTintedView
_removeBackgroundTintedView
updateUIForPublishingAgent:
setLabelText:
setPercentComplete:
percentComplete
_cancel:
setShowsCancelButton:
backgroundType
backgroundView
setBackgroundView:
backgroundTintedView
setBackgroundTintedView:
backgroundBlurredView
setBackgroundBlurredView:
showsCancelButton
cancelationHandler
setCancelationHandler:
setProgress:animated:
setNumberStyle:
setGeneratesDecimalNumbers:
setLocale:
currentLocale
initWithProgressViewStyle:
isHidden
T@"<PLPublishingAgentDelegate>",N,V_delegate
TB,N,V_ownerIsCamera
Tq,N,V_approximateHDUploadSize
Tq,N,V_approximateSDUploadSize
TB,N,V_mediaIsHDVideo
TB,N,V_enableHDUpload
TB,N,V_needsTrimming
Ti,N,V_remakerMode
Ti,N,V_selectedOption
Tf,N,V_progressMultiplier
TB,N,V_allowsHDOver3GUpload
TB,N,V_shouldCancelPublish
_userInfo
_mediaPath
_mediaData
_mimeType
_deleteAfterPublishing
_changeRate
_currentValue
_estimatedTimeRemaining
_maxValue
_normalizedCurrentValue
_normalizedMaxValue
_percentComplete
_remakingPercentComplete
_progressMultiplier
_snapshotTimes
_snapshotValues
_ownerIsCamera
_needsRemaking
_startTime
_endTime
_approximateHDUploadSize
_approximateSDUploadSize
_mediaIsHDVideo
_enableHDUpload
_needsTrimming
_allowsHDOver3GUpload
_selectedOption
_remaker
_remakerMode
_completionSelector
_remakingWasCancelled
_remaking
_publishing
_shouldCancelPublish
dataArrayInputStreamBytesWereRead:
allowsCellularAccessForRequests
_startNetworkObservation
_stopNetworkObservation
initWithMedia:
_setUpPublishingParams
mediaPath
setMediaPath:
setDeleteMediaFileAfterPublishing:
deleteMediaFileAfterPublishing
mediaData
setMediaData:
userInfo
setUserInfo:
isPublishing
setPublishing:
setRemakerMode:
setTrimStartTime:andEndTime:
_setApproximateVideoUploadSizes
resignPublishingSheetResponders
navigationController
cancelButtonClicked
doneButtonClicked
_agentIsReadyToPublish:
publish
serviceName
presentModalSheetInViewController:
willDismiss
mediaURL
mediaTitle
isVideoMedia
tellAFriendURL
tellAFriendSubject
tellAFriendBody
allowsTellingFriend
allowsViewingOnHost
maximumVideoDuration
setTotalBytesWritten:totalBytes:
snapshot
_updateStatisticsFromSnapshots
estimatedTimeRemaining
remakingPercentComplete
cancelRemaking
isRemaking
_cancelRemaking:
_transcodeVideo:
videoRemakerDidBeginRemaking:
_remakerDidFinish:
videoRemakerDidEndRemaking:temporaryPath:
videoRemaker:progressDidChange:
progressViewMessageDuringRemake
_remakerModeForSelectedOption
showAlertWithError:
ownerIsCamera
setOwnerIsCamera:
approximateHDUploadSize
setApproximateHDUploadSize:
approximateSDUploadSize
setApproximateSDUploadSize:
mediaIsHDVideo
setMediaIsHDVideo:
enableHDUpload
setEnableHDUpload:
needsTrimming
setNeedsTrimming:
remakerMode
selectedOption
setSelectedOption:
progressMultiplier
setProgressMultiplier:
allowsHDOver3GUpload
setAllowsHDOver3GUpload:
shouldCancelPublish
setShouldCancelPublish:
openSensitiveURL:withOptions:
defaultWorkspace
URLWithString:
stringByAddingPercentEncodingWithAllowedCharacters:
URLFragmentAllowedCharacterSet
publishingAgentDidEndRemaking:didSucceed:
publishingAgentDidStartRemaking:
longLongValue
initWithLongLong:
initWithDouble:
removeObjectAtIndex:
dismissViewControllerAnimated:completion:
presentingViewController
presentViewController:animated:completion:
setModalPresentationStyle:
publishingAgentWillBeDisplayed:
publishingAgentDidBeginPublishing:
defaultDurationForTransition:
publishingAgentDoneButtonClicked:
publishingAgentCancelButtonClicked:
canUploadHDVideoOverCellular
publishingAgentForBundleNamed:toPublishMedia:
effectiveBoolValueForSetting:
sharedConnection
principalClass
bundleWithPath:
stringByAppendingPathComponent:
stringByResolvingSymlinksInPath
stringByAppendingString:
T@"NSString",&,N,V_title
_title
compare:
title
localizedCaseInsensitiveCompare:
_inFlightMigrationCount
checkForUnmigratediPhotoContentWithCompletion:
migrateEachPreMigratediPhotoLibrary:completionHandler:
migrationWasInterrupted
_incrementInFlightMigrationCount
_decrementInFlightMigrationCount
_isMigrating
_inFlightMigrationMarkerFilePath
_validateUuid:
_displayableUuidWithUuid:
_firstFilePathWithAnyExtensionAtPath:extension:
_createParentDirectoryIfNecessaryWithPath:
_deleteiPhotoSubDirectoryWithDirectoryPath:subDirectoryName:description:
_preMigratediPhotoDir
_migratediPhotoDir
_iPhotoMediaDirUuidListSortedByDateCreatedWithDir:
_iPhotoToPhotosUuidMapTable
_migrateiPhotoLibraryWorkerWithProgressHandler:iPhotoLibraryDir:
fireMigrationOfiPhotoLibraryWithProgressHandler:
_migrateiPhotoLibraryWithProgressHandler:
moveiPhotoLibraryMediaWithReply:
migrationClient
pathToiPhotoLibraryMediaDir
systemLibraryPathManager
contentsOfDirectoryAtPath:error:
addAssets:
changeRequestForAssetCollection:
placeholderForCreatedAssetCollection
creationRequestForAssetCollectionWithTitle:
setCreationDate:
setFavorite:
placeholderForCreatedAsset
setLocation:
initWithLatitude:longitude:
creationRequestForAssetFromImageAtFileURL:
creationRequestForAssetFromVideoAtFileURL:
fetchAssetCollectionsWithLocalIdentifiers:options:
writeToFile:options:error:
dataWithPropertyList:format:options:error:
creationDate
setVersion:
performChangesAndWait:error:
canPerformEditOperation:
fetchAssetsWithLocalIdentifiers:options:
fetchOptionsWithInclusiveDefaultsForPhotoLibrary:
localIdentifierWithUUID:
fileExistsAtPath:isDirectory:
stringByAppendingPathExtension:
dateWithTimeIntervalSinceReferenceDate:
unsignedIntegerValue
dictionaryWithContentsOfFile:
date
fetchAssetCollectionsWithType:subtype:options:
setPredicate:
predicateWithFormat:
pathExtension
stringByDeletingPathExtension
nextObject
enumeratorAtPath:
sortedArrayUsingComparator:
photoDirectoryWithType:
removeItemAtPath:error:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
stringByDeletingLastPathComponent
lastPathComponent
substringFromIndex:
substringToIndex:
initWithUUIDString:
enumerateObjectsUsingBlock:
fileExistsAtPath:
T@,&,N,V_asset
TB,N,V_isVideo
T@"NSString",&,N,V_pathForVideoFile
T@"NSURL",&,N,V_assetURL
TB,N,V_isHDVideo
Td,N,V_duration
_isVideo
_isHDVideo
_pathForVideoFile
_assetURL
_duration
initWithAsset:
initWithManagedAsset:
initWithAVURLAsset:
asset
setAsset:
isVideo
setIsVideo:
pathForVideoFile
setPathForVideoFile:
assetURL
setAssetURL:
isHDVideo
setIsHDVideo:
setDuration:
naturalSize
tracksWithMediaType:
path
typeWithFilenameExtension:
durationForManagedAsset:applyVideoAdjustments:
assetWithURL:
isValidPublishingMedia:
T@"UIView",&,N,S_setContentView:,V__contentView
T@"CAShapeLayer",&,N,S_setSliceLayer:,V__sliceLayer
T@"CAShapeLayer",&,N,S_setCircleLayer:,V__circleLayer
T@"PLProgressArcLayer",&,N,S_setProgressArcLayer:,V__progressArcLayer
T@"CALayer",&,N,S_setIrisGlyphLayer:,V__irisGlyphLayer
Td,N,S_setContentsScale:,V__contentsScale
Tq,R,N,V_style
T@"UIColor",&,N,V_manualColor
TB,N,V_allowFake25PercentProgress
TB,N,V_skipResetOnRelayout
Td,N,V_progress
_pieCenter
_pieRadius
_progressTimer
_uiProgress
_realProgress
_increaseRate
_prevUpdateTime
_allowFake25PercentProgress
_skipResetOnRelayout
_manualColor
_progress
__contentView
__sliceLayer
__circleLayer
__progressArcLayer
__irisGlyphLayer
__contentsScale
initWithFrame:style:
_setContentsScale:
_setProgressArcLayer:
_updateSublayersContentsScale
_updateSubviews
setPieRadius:
stopProgressTimer
startProgressTimer
toRadian:
increaseUIProgress:
_updateUIProgress
setInitialIncreaseRatePerFrame:
recalculateIncreaseProgress:withTimeDiff:
setProgress:
resetProgress
traitCollectionDidChange:
setManualColor:
manualColor
allowFake25PercentProgress
setAllowFake25PercentProgress:
skipResetOnRelayout
setSkipResetOnRelayout:
progress
_setContentView:
_sliceLayer
_setSliceLayer:
_circleLayer
_setCircleLayer:
_progressArcLayer
_irisGlyphLayer
_setIrisGlyphLayer:
_contentsScale
hasDifferentColorAppearanceComparedToTraitCollection:
traitCollection
timeIntervalSinceDate:
setEndAngle:
setStartAngle:
scheduledTimerWithTimeInterval:repeats:block:
invalidate
setRadius:
setPosition:
Td,N,V_radius
Td,N,V_startAngle
Td,N,V_endAngle
Td,N,V_lineWidth
_radius
_startAngle
_endAngle
_lineWidth
drawInContext:
setLineWidth:
radius
startAngle
endAngle
lineWidth
setNeedsDisplayOnBoundsChange:
setStrokeColor:
setZPosition:
colorWithAlphaComponent:
getRed:green:blue:alpha:
labelColor
userInterfaceStyle
T@"<PLSlalomRegionEditorDelegate>",N,V_delegate
T{UIEdgeInsets=dddd},N,V_trackInsets
Td,N,V_trimHandleWidth
TQ,N,V_regionEditorStyle
Td,N,V_minValue
Td,N,V_maxValue
Td,N,V_startValue
Td,N,V_endValue
Td,N,V_zoomDelay
zoomAnimating
TB,N,GisZoomAnimating,SsetZoomAnimating:,V_zoomAnimating
_startHandleView
_endHandleView
_trackImageView
_trackSnapshotView
_draggingStart
_draggingEnd
_touchOffset
_zoomed
_trackingZoom
_touchLocationWhenTrackingZoomBegan
_forceLayout
_zoomMinValue
_zoomMaxValue
_zoomAnimating
_trimHandleWidth
_regionEditorStyle
_minValue
_startValue
_endValue
_zoomDelay
_trackInsets
intrinsicContentSize
setTrackInsets:
setMinValue:
setMaxValue:
setStartValue:
setStartValue:notify:
setEndValue:
setEndValue:notify:
setZoomMinValue:maxValue:
_isZoomed
setZoomAnimating:
setRegionEditorStyle:
startHandleFrame
endHandleFrame
_valueFromStartHandleFrame:
_valueFromEndHandleFrame:
_trackFrameNoZoom
_trackFrame
_trackScale
_handleFrameForValue:isStart:
_valueFromHandleFrame:isStart:
_isTouch:inHandleIsStart:outTouchOffset:
beginTrackingWithTouch:withEvent:
continueTrackingWithTouch:withEvent:
endTrackingWithTouch:withEvent:
cancelTrackingWithEvent:
_stopTrackingAndSendControlEvents:
_updateSlidersWithTouch:
_beginTrackingZoomWithTouch:
_cancelZoomTrackingIfNeccessaryWithTouch:
_cancelTrackingZoom
_zoomPressWasHeld
_cancelZoom
_updateTrack
_trackImageForZoom:
_tickColor
_trackColor
_handleTintColor
_drawCurveWithFlatEndsFromX:fromY:toX:toY:
_handleImage
trackInsets
trimHandleWidth
setTrimHandleWidth:
regionEditorStyle
minValue
maxValue
startValue
endValue
zoomDelay
setZoomDelay:
isZoomAnimating
imageWithRenderingMode:
setStroke
setFill
translationInView:
minimumNumberOfTouches
direction
numberOfTouchesRequired
sendActionsForControlEvents:
isEnabled
setTintColor:
_setupTargetScreen:
setCurrentMode:
availableModes
preferredMode
setOverscanCompensation:
setScreen:
T{CGSize=dd},R,N,V_jpegImageSize
_jpegImageSize
setVisibleRectangle:zoomScale:
initWithJPEGData:placeholderImage:screenSize:
flushCache
jpegImageSize
T@,N,V_delegate
Ti,N,V_mode
_saveOptions
setImageSavingOptions:
saveOptions
_contentAutoresizingMask
_tileAutoresizingMask
initWithPhoto:
cropOverlayWasOKed:
cropOverlay:didFinishSaving:
cropOverlayWasCancelled:
imageFormat
imageTile
cropOverlayMode
setMode:
editImageViewControllerDidCancel:
editImageViewController:didEditImageWithOptions:
TB,N,V_allowImageRequests
TB,N,V_allowCaching
_allowImageRequests
_allowCaching
setDefaultValues
allowImageRequests
setAllowImageRequests:
allowCaching
setAllowCaching:
rowWithTitle:valueKeyPath:
TB,N,V_disableViewInPopoverRule
_disableViewInPopoverRule
disableViewInPopoverRule
setDisableViewInPopoverRule:
viewControllerForView:
TB,N,V_parentInPopoverException
_options
_imagePicker
_navItem
_viewClass
_canCreateMetadata
_parentInPopoverException
navigationController:willShowViewController:animated:
navigationController:didShowViewController:animated:
navigationControllerSupportedInterfaceOrientations:
navigationControllerPreferredInterfaceOrientationForPresentation:
navigationController:interactionControllerForAnimationController:
navigationController:animationControllerForOperation:fromViewController:toViewController:
imagePickerController:didFinishPickingImage:editingInfo:
imagePickerController:didFinishPickingMediaWithInfo:
imagePickerControllerDidCancel:
_displaysFullScreen
_editingForThirdParty
_setupNavigationItemAndTrimTitle:
initWithPhoto:trimTitle:
initWithProperties:
initWithVideoURL:trimTitle:
navigationItem
setImagePickerOptions:
_trimMessage
setViewClass:
viewDidLoad
didChooseVideoAtURL:options:
_cancelTrim:
previewFrame
_trimVideo:
videoViewScrubberYOrigin:forOrientation:
videoViewCanCreateMetadata:
videoViewPlaybackDidFail:
parentInPopoverException
setParentInPopoverException:
errorWithDomain:code:userInfo:
editVideoViewController:didFailWithError:
editVideoViewControllerDidCancel:
dictionaryWithObject:forKey:
editVideoViewController:didTrimVideoWithOptions:
dictionaryWithDictionary:
toolbar
setScrollEdgeAppearance:
standardAppearance
navigationBar
initWithTitle:
setRightBarButtonItem:
setLeftBarButtonItem:
setExtendedLayoutIncludesOpaqueBars:
T@"NSString",R,N
_imageRef
_cropOverlay
_imageTile
_videoURL
_previousStatusBarStyle
_newStatusBarStyle
_allowEditing
_statusBarWasHidden
_isDisappearing
cropOverlayWasToggled:
cropOverlayPlay:
cropOverlayPause:
cropOverlayFileSizeMenuActions:
setImageAsHomeScreenClicked:
setImageAsLockScreenClicked:
setImageAsHomeScreenAndLockScreenClicked:
motionToggledManually:
photoTileViewControllerAllowsEditing:
isPhotoTileParentPageControllerAnimating:
photoTileViewControllerCanShowCenterOverlay:
photoTileViewControllerCustomCenterOverlay:
photoTileViewControllerTopLayoutGuide:
photoTileViewController:willAppear:
photoTileViewController:didAppear:
photoTileViewController:didDisappear:
photoTileViewControllerRequestsFullScreenImage:
photoTileViewControllerRequestsFullSizeImage:
photoTileViewControllerCancelImageRequests:
photoTileViewControllerSingleTap:
photoTileViewControllerDoubleTap:
photoTileViewControllerWillBeginGesture:
photoTileViewControllerDidEndGesture:
videoViewDidCreateAttachments:
videoViewScrubberWidth:
videoViewCanBeginPlayback:
videoViewIsReadyToBeginPlayback:
videoViewDidBeginPlayback:
videoViewDidPausePlayback:
videoViewDidEndPlayback:didFinish:
videoViewDidBeginScrubbing:
videoViewDidEndScrubbing:
videoViewDidBeginRemaking:
videoViewDidEndRemaking:didSucceed:
videoView:remakingProgressDidChange:
videoViewWillBeginEditing:
videoViewDidBeginEditing:
videoViewDidCancelEditing:
videoView:displayPlayOverlay:
videoViewShouldRespondToPlayOverlayTap:
videoViewRequestsPickedAirplayRoute:
initWithImage:cropRect:
initWithUIImage:cropRect:
initWithImageData:cropRect:
initWithVideoURL:
cropOverlay
setCropOverlayDone
_viewFrame
localizedUseButtonTitle
localizedTitle
clientIsWallpaper
wantsAutoloopUI
wantsLegacyImageUI
setupNavigationItem
viewWillLayoutSubviews
wantsStatusBarVisible
desiredStatusBarAnimation
prefersStatusBarHidden
preferredStatusBarUpdateAnimation
isDisplayedInPhotoPicker
_imagePickerStatusBarStyle
viewWillDisappear:
attachScrubberPalette
_removedAsTopViewController
setAllowsEditing:
_editabilityChanged:
_updateGestureSettings
_enableCropOverlayIfNecessary
_enableCropOverlay
_handleVideoSelected
beginDisplayingProgress
handleAutoloopSelected
videoView:scrubberWasCreated:slalomRegionEditor:
videoViewDidPausePlayback:didFinish:
photoTileViewControllerIsDisplayingLandscape:
handleMediaSelectionUsingTile:managedAsset:args:includeEditing:
handleVideoSelectionWithURL:args:
doNotTranscode
videoQuality
exportPreset
viewImageBeforeSelecting
videoMaximumDuration
disableVideoTrimMessage
chooseButtonTitle
cancelButtonTitle
customBackgroundColor
imagePickerAllowsEditing
imagePickerSavingOptions
layoutFrame
safeAreaLayoutGuide
mainFileURL
isFileURL
_imagePickerDidCancel
popViewControllerAnimated:
indexOfObjectIdenticalTo:
viewControllers
setScrollEnabled:
attachPalette:isPinned:
paletteForEdge:size:
existingPaletteForEdge:
isNavigationBarHidden
setNeedsStatusBarAppearanceUpdate
setBarStyle:
setNavigationBarHidden:
addChildViewController:
setEdgesForExtendedLayout:
photoFromAssetURL:photoLibrary:
setPreferredContentSize:
initWithTitle:style:target:action:
_target
_action
setTarget:action:
initWithStyle:
_handleTap:
_normalButtonImage
_highlightedButtonImage
_createOverlayImageWithBackgroundWhite:backgroundAlpha:glyphAlpha:
drawAtPoint:blendMode:alpha:
setDeliversTouchesForGesturesToSuperview:
_button
_overlayPlayBackground
_playButtonActivate:
_playButtonDeactivate:
_playButtonTapped:
updateMaskViewsForView:
pl_videoOverlayButtonWithStyle:
pl_videoOverlayButtonSize
T@"PFVideoAVObjectBuilder",R,&,N,V__videoAVObjectBuilder
T@"NSObject<PLVideoRemakerDelegate>",W,N,V_delegate
T@?,C,N,V_progressHandler
TB,N,V_shouldExportToPhotoDataDirectory
T@"NSString",C,N,V_exportPresetOverride
Td,N,V_trimStartTime
Td,N,V_trimEndTime
T@"NSString",C,N,V_customAccessibilityLabel
_trimmedPath
_trimStartTime
_trimEndTime
_exportSession
_shouldExportToPhotoDataDirectory
_progressHandler
_exportPresetOverride
_customAccessibilityLabel
__videoAVObjectBuilder
initWithPublishingMedia:
initWithAVAsset:
initWithManagedAsset:applyVideoAdjustments:
messageForRemakingProgress
progressView
_resetProgressTimer
_removeProgressTimer
_metadata
remake
_fileFormatForURL:
_didEndRemakingWithTemporaryPath:
cancel
_exportCompletedWithSuccess:
progressHandler
setProgressHandler:
shouldExportToPhotoDataDirectory
setShouldExportToPhotoDataDirectory:
exportPresetOverride
setExportPresetOverride:
trimStartTime
setTrimStartTime:
trimEndTime
setTrimEndTime:
customAccessibilityLabel
setCustomAccessibilityLabel:
_videoAVObjectBuilder
cancelExport
containsObject:
lowercaseString
exportAsynchronouslyWithCompletionHandler:
markPurgeableForFileAtURL:withUrgency:outInode:
setTimeRange:
setMetadata:
setOutputURL:
setOutputFileType:
setFileLengthLimit:
fileLengthLimitForRemakerMode:
requestExportSessionWithExportPreset:resultHandler:
tmpFileForVideoTranscodeToPhotoDataDirectory:withExtension:
addAccessibilityDescription:toAVMetadata:
metadata
videoAsset
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
requestAVAssetWithResultHandler:
videoAVObjectBuilderForManagedAsset:applyVideoAdjustments:
initWithVideoAsset:videoAdjustments:
maximumDurationForTrimMode:
approximateByteSizeForMode:duration:
getHDRemakerModeForMode:
getSDRemakerModeForMode:
estimatedOutputFileLengthForPreset:duration:properties:
maximumDurationForPreset:properties:
numberWithLongLong:
T@"AVAssetImageGenerator",&,N,V_imageGenerator
TB,N,V_inUse
_inUse
_imageGenerator
imageGenerator
setImageGenerator:
inUse
setInUse:
cancelAllCGImageGeneration
imageFrame
T@"NSString",R,&,N
TB,N,V__didInsertMoviePlayerView
TB,N,S_setDidEditSlalom:,V__didEditSlalom
T@"PFVideoAVObjectBuilder",R,N,V__videoAVObjectBuilder
TB,R,N,V__isFetchingVideo
TB,N,S_setLocalVideoUnavailable:,V__localVideoUnavailable
Tq,R,N,V__expectedNotificationsCount
T@"PFVideoAdjustments",R,N,V__adjustmentsToCommit
TB,N,S_setCanAttemptFetchingVideoDerivative:,V__canAttemptFetchingVideoDerivative
TB,N,S_setAttemptFetchingVideoDerivative:,V__attemptFetchingVideoDerivative
T@"PLProgressStack",&,N,V_trimProgressStack
TB,R,N,V__slalomRegionEditorCreatedForScrubber
T@"<PLVideoViewDelegate>",N
T@"PLPhotoTileViewController",N
T@"PLManagedAsset",R,N
T@"PLManagedAsset",&,N
TB,N,V_allowSlalomEditor
T@"UIView",R,N,V_scrubberBackgroundView
T@"UIImage",R,N
T@"PLVideoPosterFrameView",R,&,N,V_posterFrameView
editing
TB,N,GisEditing
T@"UIImageView",R,N
TB,N,V_prepareMoviePlayerForScrubberAutomatically
TB,N,V_shouldPlayVideoWhenViewAppears
Td,N,V_scrubberWidth
_videoCameraImage
_pathToOriginalVideo
_posterFrameView
_videoOverlayBackgroundView
_trimMessageView
_posterFrameImage
_snapshotImage
_scrubberWidth
_scrubberBackgroundView
_scrubberTitleView
_scrubberUpdateTimer
_thumbnailOptionsDict
_thumbnailSize
_bakedLandscapeThumbnails
_bakedPortraitThumbnails
_remakerStartTime
_remakerEndTime
_videoPathAfterTrim
_trimProgressTimer
_trimmedVideoClip
_trimProgressStack
_moviePlayer
_maximumTrimLength
_lastScrubbedValue
_lastActualValue
_cachedCurrentPlaybackTime
_imageGenerators
_thumbnailReqlock
_thumbnailReqQueue
_airplayExportSession
_isAirPlay
_showsPlayButton
_showsScrubber
_canEdit
_loadMediaImmediately
_scrubberIsSubview
_wasPlayingBeforeScrub
_playFromBeginning
_needsReloadScrubberThumbnails
_playing
_editing
_disableEditAfterTrim
_scrubbing
_scrubbingToRight
_deleteOriginalFile
_passthroughTrimming
_preparingMoviePlayer
_preparedMoviePlayer
_isMoviePlayerActive
_moviePlayerIsReady
_moviePlayerIsReadyForDisplay
_moviePlayerDidBuffer
_showingOverlay
_showingScrubber
_showScrubberWhenMovieIsReady
_playbackDidBegin
_loadScrubberThumbnails
_videoIsLandscape
_createPreviewPosterFrame
_isTrimming
_wasTrimmedInPlace
_remakingFailed
_summaryThumbnailRequestTimestamps
_detailThumbnailRequestTimestamps
_scrubber
_slalomRegionEditor
_cachedThumbnails
_landscapeSummaryThumbnailTimestamps
_portraitSummaryThumbnailTimestamps
_spinner
_shadowSpinner
_videoOverlayPlayButton
_useLandscapeCache
_videoStreamingStartTime
_allowSlalomEditor
_prepareMoviePlayerForScrubberAutomatically
_shouldPlayVideoWhenViewAppears
__didInsertMoviePlayerView
__didEditSlalom
__isFetchingVideo
__localVideoUnavailable
__canAttemptFetchingVideoDerivative
__attemptFetchingVideoDerivative
__slalomRegionEditorCreatedForScrubber
__expectedNotificationsCount
__adjustmentsToCommit
slalomRegionEditorDidBeginEditing:withStartHandle:
slalomRegionEditorDidEndEditing:
slalomRegionEditorStartValueChanged:
slalomRegionEditorEndValueChanged:
slalomRegionEditorRequestForceZoom:
slalomRegionEditorRequestForceUnzoom:
moviePlayerControllerDidBecomeActiveController:
moviePlayerControllerWillResignAsActiveController:
moviePlayerExitRequest:exitReason:
moviePlayerReadyToPlay:
moviePlayerReadyToDisplay:
moviePlayerBufferingStateDidChange:
moviePlayerPlaybackStateDidChange:fromPlaybackState:
moviePlayerPlaybackRateDidChange:
moviePlayerPlaybackDidEnd:
moviePlayerDurationAvailable:
moviePlayerUpdatedDestinationPlaceholder:
moviePlayerWasSuspendedDuringPlayback:
moviePlayerEncounteredAuthenticationError:
moviePlayerShouldNotifyOnPreparationError:
moviePlayerControllerShouldAllowExternalPlayback:
moviePlayerDidChangeExternalPlaybackType:
moviePlayerRequestsPickedAirplayRoute:
moviePlayerHeadsetPlayPausePressed:
moviePlayerHeadsetNextTrackPressed:
moviePlayerHeadsetPreviousTrackPressed:
movieScrubber:requestThumbnailImageForTimestamp:isSummaryThumbnail:
movieScrubberDuration:
movieScrubber:evenlySpacedTimestamps:startingAt:endingAt:
movieScrubberThumbnailAspectRatio:
movieScrubber:requestThumbnailImageForTimestamp:
movieScrubber:valueDidChange:
movieScrubber:editingStartValueDidChange:
movieScrubber:editingEndValueDidChange:
movieScrubberDidBeginScrubbing:withHandle:
movieScrubberDidEndScrubbing:withHandle:
movieScrubber:widthDelta:originXDelta:
movieScrubberWillBeginRequestingThumbnails:
movieScrubberDidFinishRequestingThumbnails:
movieScrubberWillBeginEditing:
movieScrubberDidBeginEditing:
movieScrubberDidCancelEditing:
movieScrubberEditingAnimationFinished:
movieScrubber:willZoomToMinimumValue:maximumValue:
movieScrubberDidBeginAnimatingZoom:
movieScrubberDidEndAnimatingZoom:
initWithFrame:videoCameraImage:orientation:
_initWithFrame:videoCameraImage:orientation:
_setupMoviePlayerIfNecessary
_insertMoviePlayerViewIfNecessary
_tearDownMoviePlayer
touchesEnded:withEvent:
_updateScrubberFrame
scrubberWidth
_scrubberBackgroundHeight
_createScrubberIfNeeded
_removeScrubber
_shouldShowSlalomEditor
_canAccessVideo
videoScrubber
slalomRegionEditor
videoOverlayPlayButton
_showVideoOverlay
_videoOverlayFadeOutDidFinish
_hideVideoOverlay:
removeVideoOverlay
_hideTrimMessageView:
updateScaleMode
_updateScaleModeForSize:
_setNeedsReloadScrubberThumbnails:
_reloadScrubberThumbnailsIfNeeded
_requestPreviewPosterFrameForVideoSize:
_savePreviewPosterFrameImage:
_prepareAndResumePlayback
_fetchNonlocalVideo
_fetchLocalContentEditingInput
_prepareMoviePlayerIfNeeded
_canHandleAdjustmentData:
_updateVideoAVObjectBuilderFromContentEditingInput:
_optionsForAVURLAsset
_assetForVideoPath:
_assetForVideoURL:
_configurePlayerForStreamedVideoIfNecessary
_updateScrubberForSlowMotion
_setMoviePlayerActive:
_playerIsAirplay
movieScrubber:timestampsStartingAt:endingAt:maxCount:
_saveCachedThumbnailsIfNecessary
_pathForOriginalFile
_pathForVideoPreviewFile
_pathForPrebakedLandscapeScrubberThumbnails
_pathForPrebakedPortraitScrubberThumbnails
_mediaIsPlayable
_mediaIsVideo
_mediaIsCloudSharedStreamedVideo
_shouldStreamCloudPhotoLibraryVideo
_shouldStreamVideo
_canPlayCloudSharedStreamedVideoWithLocalVideo
_didSetPhotoData
_loadThumbnailsIntoDictionary:isLandscape:aspectRatio:
_removeScrubberUpdateTimer
_resetScrubberUpdateTimer
_didScrubToValue:withHandle:
_addThumbnailRequestForTimestamp:isSummaryThumbnail:
_serviceImageGenerationRequests
_configureImageGenerator:thumbnailSize:forSummaryThumbnails:
_clearImageGenerators
setMaximumTrimLength:
showTrimMessage:withBottomY:
hideTrimMessage
setEditing:animated:
setEditing:
isEditing
_updateForEditing
_updateSlalomRegionEditorState
_setPlaying:
_setPlaybackDidBegin:
_reset
_scrubberAnimationFinished
_thumbnailsWereRegenerated:error:contextInfo:
importerFinishedProcessingTrimmedVideo:
_removeTrimProgressTimer
_resetTrimProgressTimer
_informDelegateAboutProgressChange:
_updateTrimProgress
isTrimming
cancelTrim
_scrubberStartTime
startTime
endTime
videoPathAfterTrim
trimmedVideoClip
setTrimmedVideoClip:
newPreviewImageData:
_videoSnapshot
previewImageView
videoCameraImage
setImageTile:
toggleScaleMode:
handleDoubleTap
isPlaying
_didBeginPlayback
_verifyOrRestartPlayback
playButtonClicked:
playingToAirTunes
playingToVideoOut
_displayPlaySpinner
_removePlaySpinner
forceStop
_updateScrubberVisibilityWithDuration:
viewDidAppear
viewDidDisappear
commitPendingUpdatesWithCompletionHandler:
applicationWillResignActive
applicationDidEnterBackground
didMoveToSuperview
setPosterFrameImage:
posterFrameImage
_updateSnapshotImage
_invalidateSnapshotImage
_updatePosterImageView
_updatePosterFrameVisibility
setShowsPlayOverlay:
showsPlayOverlay
setShowsScrubber:
setShowsScrubber:duration:
showsScrubber
prepareMoviePlayer
notifyRequiredResourcesDownloaded
setCanEdit:
_setLocalVideoUnavailable:
canEdit
_canEditDuration:
setScrubberIsSubview:
scrubberIsSubview
setLoadMediaImmediately:
loadMediaImmediately
_scrubToMovieTime:
notifyOfChange:shouldReloadBlock:
_scrubberTimeNeedsMapping
_movieScrubberDuration
_thumbnailSourceAsset
_thumbnailTimeFromScrubberTime:
_movieTimeFromScrubberTime:
_scrubberTimeFromMovieTime:
shouldShowCopyCalloutAtPoint:
_handleScreenConnectionChange:
_playbackFinished
_setDuration:
_updateSlalomRegionEditorRange
_updateScrubberValue
updateForRotationWithDuration:isLandscape:
_enqueueAdjustmentsForCommit
_commitPendingAdjustmentsUpdate
_cancelDelayedCommitPendingAdjustmentsUpdate
_commitPendingAdjustmentsUpdateAndWait:completionHandler:
_scrubToSlalomRegionEditorStartHandle:
_canAirPlayCurrentVideo
_shouldPlayFlattenedVideo
_isFlattenedVideoUpToDate
_metadataForFlattenedVideo
_readMetadataFromPath:
_writeMetadata:toPath:
_filePathForFlattenedVideo
_filePathForFlattenedVideoMetadata
_deleteFileAtPath:
_flattenVideoWithCompletionHandler:
_cancelAirplayExportSession
setScrubberWidth:
posterFrameView
trimProgressStack
setTrimProgressStack:
allowSlalomEditor
setAllowSlalomEditor:
scrubberBackgroundView
prepareMoviePlayerForScrubberAutomatically
setPrepareMoviePlayerForScrubberAutomatically:
shouldPlayVideoWhenViewAppears
setShouldPlayVideoWhenViewAppears:
_didInsertMoviePlayerView
set_didInsertMoviePlayerView:
_didEditSlalom
_setDidEditSlalom:
_isFetchingVideo
_localVideoUnavailable
_expectedNotificationsCount
_adjustmentsToCommit
_canAttemptFetchingVideoDerivative
_setCanAttemptFetchingVideoDerivative:
_attemptFetchingVideoDerivative
_setAttemptFetchingVideoDerivative:
_slalomRegionEditorCreatedForScrubber
removeItemAtURL:error:
propertyListDictionary
videoAdjustments
requestAVAssetForExport:withResultHandler:
forceUnzoom
forceZoom
setContentEditingOutput:
clearRenderedContentURL
setAdjustmentData:
initWithAdjustmentBaseVersion:mediaType:
initWithFormatIdentifier:formatVersion:data:
adjustmentData
adjustmentFormatVersion
adjustmentFormatIdentifier
requestPlayerItemWithResultHandler:
initWithSlowMotionTimeRange:rate:
slowMotionRate
slowMotionTimeRange
preferredTimeScale
setValue:animated:
hasSlowMotionAdjustments
setThumbIsVisible:
convertToOriginalTimeFromScaledTime:forExport:
convertToScaledTimeFromOriginalTime:forExport:
currentItem
assetContentChanged
changeDetailsForObject:
isRecognizedFormat
setValue:
newFullSizeImage
pathForVideoPreviewFile
setDataSource:
cancelPreviousPerformRequestsWithTarget:
setEditable:
setForwardPlaybackEndTime:
requestVideoPlaybackURLForAsset:videoType:completion:
isCellularConnection
cachedNonPersistedVideoPlaybackURL
setCachedNonPersistedVideoPlaybackURLError:
cachedNonPersistedVideoPlaybackURLError
setColor:
imageWithCGImage:
initWithCGImage:
copyCGImageAtTime:actualTime:error:
setAppliesPreferredTrackTransform:
setMaximumSize:
setApertureMode:
trimEndValue
trimStartValue
animateAfterEdit
saveCameraVideoAtPath:withMetadata:thumbnailImage:createPreviewWellImage:progressStack:isSlalom:assetAdjustments:videoHandler:requestEnqueuedBlock:completionBlock:
indexSheetImage
isMogul
dateCreated
numberWithShort:
orientation
nextAvailableFilePathInDirectory:withExtension:
eventAlbumContainingPhoto:
isCameraConnectionKitAsset
adjustTimeRange:forNewStartTime:endTime:
regenerateVideoThumbnailsForVideo:withCreationDate:progressStack:completionBlock:
attributesOfItemAtPath:error:
moveItemAtPath:toPath:error:
setAttributes:ofItemAtPath:error:
push:
totalProgress:
updateProgress:
initWithDelegate:
flush
value
insertSubview:above:
setBody:
_bodyLabel
setTextContainerInset:
setSelectable:
initWithFrame:textContainer:
setRequestedTimeToleranceAfter:
setRequestedTimeToleranceBefore:
generateCGImagesAsynchronouslyForTimes:completionHandler:
setThumbnailImage:forTimestamp:
valueWithCMTime:
CMTimeValue
portraitScrubberThumbnailFormat
landscapeScrubberThumbnailFormat
presentationSize
thumbnailImageAtIndex:
options
thumbnailsWithContentsOfFile:format:
isInFlight
debugAlwaysStreamSharedVideos
pathForPrebakedPortraitScrubberThumbnails
pathForPrebakedLandscapeScrubberThumbnails
pathForOriginalFile
saveToFile:
initWithImages:format:options:delegate:
isEqualToArray:
setCachedNonPersistedVideoPlaybackURLExpiration:
setCachedNonPersistedVideoPlaybackURL:
setExpectedAssetTypes:
URLAssetWithURL:options:
streamdVideoCache
initWithFormatIdentifier:formatVersion:data:baseVersion:editorBundleID:renderTypes:
data
formatVersion
formatIdentifier
audiovisualAsset
initWithObjects:
playerItemWithAsset:
requestContentEditingInputWithOptions:completionHandler:
isPlayable
setCanHandleAdjustmentData:
requestPlayerItemForVideo:options:resultHandler:
setVideoComplementAllowed:
setStreamingAllowed:
isReadyForDisplay
reloadData
_enqueueOverlayPlayButton:
_dequeueOverlayPlayButton
isPhotoIrisPlaceholder
setMinimumTrimLength:
setEdgeInset:
isEditable
defaultSizeForOrientation:
statusBarHeightForOrientation:ignoreHidden:
pathToOriginalVideoFile
raise:format:
videoViewForVideoFileAtURL:
TB,N,V_simulateDownload
TB,N,V_simulateDownloadFailure
_simulateDownload
_simulateDownloadFailure
simulateDownload
setSimulateDownload:
simulateDownloadFailure
setSimulateDownloadFailure:
conditionFormat:
T@"UIImageView",&,N,V_titleMaskImageView
_titleMaskImageView
backdropViewDidChange:
_updateContentEdgeInsets
_setupBackdropView
setHighlighted:
setSelected:
titleMaskImageView
setTitleMaskImageView:
legibleColor
outputSettings
applySettings:
computeOutputSettingsUsingModel:
restoreDefaultValues
inputSettings
isSelected
isHighlighted
setAppliesOutputSettingsAnimationDuration:
setContentEdgeInsets:
autoLayoutCommonWallpaperButton
autoLayoutCommonWallpaperButtonWithStyle:
setContentHuggingPriority:forAxis:
setContentCompressionResistancePriority:forAxis:
bundleIdentifier
legacySaveImageToCameraRoll:completionTarget:completionSelector:contextInfo:
legacySaveImageDataToCameraRoll:completionTarget:completionSelector:contextInfo:
legacySaveScreenshotToCameraRoll:completionTarget:completionSelector:contextInfo:
legacySaveVideoToCameraRoll:completionTarget:completionSelector:contextInfo:
canSaveVideoToLibrary:
demoClient
cleanupForStoreDemoMode
setDelaySuspend:
_setDelaySuspend:
localizedInfoDictionary
rectForRowAtIndexPath:
pl_indexPathForLastRow
pl_scrollToBottom:
scrollRectToVisible:animated:
scrollToRowAtIndexPath:atScrollPosition:animated:
pl_resetContentOffsetFromContentInsets
tableFooterView
numberOfRowsInSection:
indexPathsForVisibleRows
numberOfSections
indexPathForRow:inSection:
pl_scrollToVisibleRowAtIndexPath:animated:
pl_scrollToTop:
pl_lastRowIsVisible
pl_setHidden:delay:animated:
removeAnimationForKey:
pl_setHiddenAnimationDuration
pl_isOnScreen:
pl_drawBorderWithColor:width:
pl_setHidden:animated:
_isInPopoverPresentation
childViewControllers
pl_visitControllerHierarchyWithBlock:
pl_isInPopover
presentedViewController
arrayByAddingObject:
rootViewController
pl_presentViewController:animated:
@16@0:8
v24@0:8@16
v16@0:8
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v24@0:8q16
v32@0:8q16d24
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
q16@0:8
#16@0:8
@"PHFetchResult"
@"NSMutableDictionary"
@"PHFetchResult"24@0:8@"PHAssetCollection"16
@"PHFetchResult"16@0:8
@24@0:8@16
B24@0:8@16
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
@32@0:8@16@24
v32@0:8Q16Q24
@24@0:8Q16
Q24@0:8@16
Q32@0:8Q16B24B28
Q24@0:8Q16
@28@0:8@16B24
Q28@0:8Q16B24
@32@0:8@16B24B28
@32@0:8@16Q24
v24@0:8@"CAAnimation"16
v28@0:8@"CAAnimation"16B24
v28@0:8@16B24
@?16@0:8
v24@0:8@?16
^{__CFDictionary=}
v56@0:8^{CGPath=}16{CGRect={CGPoint=dd}{CGSize=dd}}24
^{CGPath=}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
^{lruEntry=@q{?=^{lruEntry}^^{lruEntry}}}
^{lruEntry=@q{?=^{lruEntry}^^{lruEntry}}}16@0:8
{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}
{entryList="tqh_first"^{lruEntry}"tqh_last"^^{lruEntry}}
@32@0:8q16q24
v32@0:8@16@24
v40@0:8@16@24q32
@"UIFontDescriptor"
@"UILabel"
@"UIImageView"
@"CAShapeLayer"
{UIEdgeInsets=dddd}16@0:8
@"PLCropOverlayCropView"
@"UIView"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@"UIToolbar"
@"PLProgressHUD"
@"UIButton"
@"PLContactPhotoOverlay"
@"NSString"
@"<PLCropOverlayDelegate>"
@"PLCropOverlayBottomBar"
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16i48B52
v20@0:8B16
@52@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16i48
v24@0:8B16f20
v20@0:8i16
i16@0:8
@40@0:8{CGPoint=dd}16@32
v28@0:8B16@20
v28@0:8B16d20
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@52@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16B48
B20@0:8i16
v24@0:8d16
@"PLCropOverlayPreviewBottomBar"
@"PLCropOverlayWallpaperBottomBar"
v28@0:8q16B24
B24@0:8q16
@"PLWallpaperButton"
@"_UILegibilityLabel"
@"_UIBackdropView"
d16@0:8
{CGSize=dd}24@0:8@16
{CGSize=dd}32@0:8{CGSize=dd}16
v44@0:8@16@24@32i40
v64@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24d56
@"NSArray"
@"NSMutableData"
@"<PLDataArrayInputStreamProgressDelegate>"
^{__CFRunLoopSource=}
{?="version"q"info"^v"retain"^?"release"^?"copyDescription"^?}
v32@0:8^{__CFRunLoop=}16^{__CFString=}24
B40@0:8Q16^?24^{?=q^v^?^?^?}32
q32@0:8*16Q24
B32@0:8^*16^Q24
@"PLImageView"
{CGSize="width"d"height"d}
{CGPoint="x"d"y"d}
@"PLManagedAsset"
{?="isRotating"b1"didTrack"b1"updateFrame"b1"didLayout"b1"alwaysDoLayout"b1"didComputeCenterOffset"b1"imageIsFullScreen"b1}
B40@0:8{CGPoint=dd}16@32
f16@0:8
v32@0:8{CGSize=dd}16
v36@0:8{CGSize=dd}16f32
f20@0:8f16
v48@0:8{CGPoint=dd}16{CGPoint=dd}32
f24@0:8@16
f36@0:8@16i24d28
v40@0:8@16@24^v32
v32@0:8{CGPoint=dd}16
v48@0:8@16{CGSize=dd}24q40
{CGSize=dd}16@0:8
v24@0:8^{CGContext=}16
@"<PLExpandableViewDelegate>"
{?="state"b3"prevState"b3"tracking"b1"autorotationDisabled"b1"animationDisabled"b1"updateContractedFrame"b1"updateExpandedFrame"b1"allowsExpansion"b1"delegateWillBeginExpanding"b1"delegateWillCompleteExpanding"b1"delegateDidCompleteExpanding"b1"delegateWillCancelExpanding"b1"delegateDidCancelExpanding"b1"delegateDidBeginCollapsing"b1"delegateWillCompleteCollapsing"b1"delegateDidCompleteCollapsing"b1"delegateWillCancelCollapsing"b1"delegateDidCancelCollapsing"b1"delegateExpandedFractionChanged"b1}
v28@0:8i16d20
v24@0:8f16B20
i20@0:8B16
{CGRect={CGPoint=dd}{CGSize=dd}}60@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48B56
v28@0:8B16@?20
@"PLVideoView"
@"PLPhotoTilePlaceholderView"
@"PLTiledLayer"
{CGSize=dd}36@0:8{CGSize=dd}16B32
{CGAffineTransform=dddddd}16@0:8
v24@0:8B16B20
v20@0:8f16
@40@0:8@16{CGSize=dd}24
@"AVPlayerItem"
@"AVPlayer"
@"PLMoviePlayerView"
@"PLTVOutWindow"
@"<PLMoviePlayerControllerDelegate>"
v32@0:8@16d24
v48@0:8@16@24@32^v40
v32@0:8d16Q24
v36@0:8d16Q24B32
v24@0:8Q16
@"PHImageManagerSettings"
@"PHResourceDownloadSettings"
@"NSMutableArray"
@"PLAVPlayerView"
i24@0:8@16
@"PLRoundProgressView"
@"<PLPhotoTileCloudPlaceholderViewDelegate>"
@"UIActivityIndicatorView"
@"PLPhotoTileViewController"
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
@"UIImage"
@"PHAsset"
@"PLImageScrollView"
@"PLExpandableImageView"
@"UIView<PLTilePlaceholderView>"
@"UIGestureRecognizer"
@"<PLPhotoTileViewControllerDelegate>"
@"NSObject<OS_dispatch_source>"
@"PLTileContainerView"
@"PHCachingImageManager"
@"NSNumber"
{UIEdgeInsets="top"d"left"d"bottom"d"right"d}
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
B32@0:8@"UIGestureRecognizer"16@"UIEvent"24
B32@0:8@16@24
v24@0:8@"UIScrollView"16
v48@0:8@"UIScrollView"16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@"UIScrollView"16B24
@"UIView"24@0:8@"UIScrollView"16
v32@0:8@"UIScrollView"16@"UIView"24
v40@0:8@"UIScrollView"16@"UIView"24d32
B24@0:8@"UIScrollView"16
v48@0:8@16{CGPoint=dd}24N^{CGPoint=dd}40
v40@0:8@16@24d32
v48@0:8{UIEdgeInsets=dddd}16
@80@0:8@16@24{CGRect={CGPoint=dd}{CGSize=dd}}32B64i68B72i76
@48@0:8@16@24{CGSize=dd}32
v80@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGRect={CGPoint=dd}{CGSize=dd}}48
v32@0:8@16B24B28
{CGSize=dd}48@0:8@16d24{CGSize=dd}32
v40@0:8{CGSize=dd}16@32
v40@0:8d16{CGSize=dd}24
@84@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16d48^@56^@64^{CGRect={CGPoint=dd}{CGSize=dd}}72B80
v104@0:8^@16@24{CGSize=dd}32@48{CGAffineTransform=dddddd}56
@88@0:8@16{CGSize=dd}24{CGRect={CGPoint=dd}{CGSize=dd}}40{CGSize=dd}72
@60@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16d48i56
v36@0:8d16B24@?28
f28@0:8B16@20
@72@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16^{CGImage=}48q56B64i68
@64@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48B56i60
@60@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48i56
@"NSDictionary"
@"NSSet"
v24@0:8@"UIApplication"16
B32@0:8@"UIApplication"16@"NSDictionary"24
B32@0:8@"UIApplication"16@"NSURL"24
B48@0:8@"UIApplication"16@"NSURL"24@"NSString"32@40
B40@0:8@"UIApplication"16@"NSURL"24@"NSDictionary"32
v40@0:8@"UIApplication"16q24d32
v32@0:8@"UIApplication"16q24
v56@0:8@"UIApplication"16{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8@"UIApplication"16@"UIUserNotificationSettings"24
v32@0:8@"UIApplication"16@"NSData"24
v32@0:8@"UIApplication"16@"NSError"24
v32@0:8@"UIApplication"16@"NSDictionary"24
v32@0:8@"UIApplication"16@"UILocalNotification"24
v48@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@"NSDictionary"40@?<v@?>48
v48@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@"NSDictionary"40@?<v@?>48
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?Q>32
v32@0:8@"UIApplication"16@?<v@?Q>24
v40@0:8@"UIApplication"16@"UIApplicationShortcutItem"24@?<v@?B>32
v40@0:8@"UIApplication"16@"NSString"24@?<v@?>32
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?@"NSDictionary">32
@32@0:8@"UIApplication"16@"INIntent"24
v40@0:8@"UIApplication"16@"INIntent"24@?<v@?@"INIntentResponse">32
Q32@0:8@"UIApplication"16@"UIWindow"24
B32@0:8@"UIApplication"16@"NSString"24
@"UIViewController"40@0:8@"UIApplication"16@"NSArray"24@"NSCoder"32
B32@0:8@"UIApplication"16@"NSCoder"24
v32@0:8@"UIApplication"16@"NSCoder"24
B40@0:8@"UIApplication"16@"NSUserActivity"24@?<v@?@"NSArray">32
v40@0:8@"UIApplication"16@"NSString"24@"NSError"32
v32@0:8@"UIApplication"16@"NSUserActivity"24
v32@0:8@"UIApplication"16@"CKShareMetadata"24
@"UISceneConfiguration"40@0:8@"UIApplication"16@"UISceneSession"24@"UISceneConnectionOptions"32
v32@0:8@"UIApplication"16@"NSSet"24
B24@0:8@"UIApplication"16
@"UIWindow"16@0:8
v24@0:8@"UIWindow"16
B48@0:8@16@24@32@40
B40@0:8@16@24@32
v40@0:8@16q24d32
v32@0:8@16q24
v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v40@0:8@16@24@?32
v32@0:8@16@?24
Q32@0:8@16@24
@40@0:8@16@24@32
B40@0:8@16@24@?32
v40@0:8@16@24@32
v32@0:8^{__CFUserNotification=}16Q24
@"MPMediaItemCollection"
@"UIProgressView"
@"NSNumberFormatter"
@"NSData"
@"PLVideoRemaker"
v24@0:8@"PLDataArrayInputStream"16
v32@0:8d16d24
v32@0:8q16q24
v28@0:8@16f24
q24@0:8@16
v32@0:8@?16@?24
@32@0:8@16^@24
v32@0:8@?16@24
@"NSURL"
@"NSTimer"
@"NSDate"
@"UIColor"
@"PLProgressArcLayer"
@"CALayer"
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48
d24@0:8d16
@"<PLSlalomRegionEditorDelegate>"
v28@0:8d16B24
d48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGRect={CGPoint=dd}{CGSize=dd}}28@0:8d16B24
d52@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16B48
B36@0:8@16B24^d28
@20@0:8B16
v48@0:8d16d24d32d40
v56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16d48
@48@0:8@16^{CGImage=}24{CGSize=dd}32
S16@0:8
@"UIImagePickerController"
@"UINavigationItem"
v36@0:8@"UINavigationController"16@"UIViewController"24B32
Q24@0:8@"UINavigationController"16
q24@0:8@"UINavigationController"16
@"<UIViewControllerInteractiveTransitioning>"32@0:8@"UINavigationController"16@"<UIViewControllerAnimatedTransitioning>"24
@"<UIViewControllerAnimatedTransitioning>"48@0:8@"UINavigationController"16q24@"UIViewController"32@"UIViewController"40
v36@0:8@16@24B32
@48@0:8@16q24@32@40
v40@0:8@"UIImagePickerController"16@"UIImage"24@"NSDictionary"32
v32@0:8@"UIImagePickerController"16@"NSDictionary"24
v24@0:8@"UIImagePickerController"16
v24@0:8#16
d32@0:8@16q24
^{CGImage=}
@"PLCropOverlay"
@"PLProgressView"
v24@0:8@"PLCropOverlay"16
@"NSArray"24@0:8@"PLCropOverlay"16
v28@0:8@"PLPhotoTileViewController"16B24
v24@0:8@"PLPhotoTileViewController"16
B24@0:8@"PLPhotoTileViewController"16
@"UIView"24@0:8@"PLPhotoTileViewController"16
@"<UILayoutSupport>"24@0:8@"PLPhotoTileViewController"16
v24@0:8@"PLVideoView"16
d32@0:8@"PLVideoView"16q24
d24@0:8@"PLVideoView"16
B24@0:8@"PLVideoView"16
v28@0:8@"PLVideoView"16B24
v28@0:8@"PLVideoView"16f24
v32@0:8@"PLVideoView"16@"UIView"24
@"NSDictionary"24@0:8@"PLVideoView"16
d24@0:8@16
@56@0:8^{CGImage=}16{CGRect={CGPoint=dd}{CGSize=dd}}24
@56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
v44@0:8@16@24@32B40
v32@0:8@16:24
@24@0:8q16
@40@0:8d16d24d32
@"AVAssetExportSession"
@"NSObject<PLVideoRemakerDelegate>"
@"PFVideoAVObjectBuilder"
q20@0:8i16
d20@0:8i16
q28@0:8i16d20
i20@0:8i16
@"AVAssetImageGenerator"
@"PLVideoPosterFrameView"
@"PLVideoEditingOverlayView"
@"PLPhotoBakedThumbnails"
@"PLProgressStack"
@"PLMoviePlayerController"
@"<PLVideoViewDelegate>"
@"NSLock"
@"NSObject<OS_dispatch_queue>"
@"UIMovieScrubber"
@"PLSlalomRegionEditor"
@"UIView<PLVideoOverlayButton>"
@"PFVideoAdjustments"
v28@0:8@"PLSlalomRegionEditor"16B24
v24@0:8@"PLSlalomRegionEditor"16
B24@0:8@"PLSlalomRegionEditor"16
v24@0:8@"PLMoviePlayerController"16
B28@0:8@"PLMoviePlayerController"16i24
v32@0:8@"PLMoviePlayerController"16Q24
B24@0:8@"PLMoviePlayerController"16
@"NSDictionary"24@0:8@"PLMoviePlayerController"16
B28@0:8@16i24
v32@0:8@16Q24
d24@0:8@"UIMovieScrubber"16
@"NSArray"44@0:8@"UIMovieScrubber"16i24@"NSNumber"28@"NSNumber"36
v32@0:8@"UIMovieScrubber"16@"NSNumber"24
v36@0:8@"UIMovieScrubber"16@"NSNumber"24B32
@44@0:8@16i24@28@36
v32@0:8@"UIMovieScrubber"16d24
v28@0:8@"UIMovieScrubber"16i24
v32@0:8@"UIMovieScrubber"16f24f28
v24@0:8@"UIMovieScrubber"16
v40@0:8@"UIMovieScrubber"16d24d32
v28@0:8@16i24
v32@0:8@16f24f28
v40@0:8@16d24d32
@64@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48q56
v24@0:8^{CGImage=}16
@44@0:8@16@24@32i40
@32@0:8@16B24f28
v28@0:8d16i24
v44@0:8@16{CGSize=dd}24B40
@24@0:8^@16
B24@0:8d16
B32@0:8{CGPoint=dd}16
@"UITextView"
v24@0:8@"_UIBackdropView"16
v32@0:8B16d20B28
B24@0:8@?16
?333333
?333333
?es-8R
?ffffff
?333333
MbP?-C
?ffffff
~?333?
__defaultValues
signature
archive
Concrete subclass must implement. Use either PHSettingsImplementRootSettings() or PHSettingsImplementChildSettings() macro for this.
PHSettings.m
%@: %ld assets [%ld]
 containing %ld containers with %ld total assets (last container index %ld)
Mismatched asset collections and asset fetch results
PLAssetContainerDataSource.m
PLCommentsFontCacheDidChangeNotification
RETAKE
CANCEL
CHOOSE_PHOTO_BUTTON
PREVIEW
CROP_OVERLAY_TITLE
MOTION_TOGGLE_ON
MOTION_TOGGLE_OFF
v16@?0@?<v@?@"NSArray">8
USE_VIDEO
SET_BOTH
SET_LOCK_SCREEN
SET_HOME_SCREEN
PLCameraPickerPause.png
PLCameraPickerPlay.png
FileSize
Done
Playback
Cancel
V:|[doCancelButton]-|
spacing
margin
H:|-(margin)-[doCancelButton]-(>=spacing)-%@-(margin)-|
doSetLockScreenButton
doSetHomeScreenButton
doSetBothScreenButton
motionToggle
doCancelButton
-(spacing)-
[motionToggle]
[doSetBothScreenButton]
[doSetHomeScreenButton]
[doSetLockScreenButton]
V:|[_doCancelButton]|
_doCancelButton
H:|[_doCancelButton][_separatorLine(==separatorWidth@999)][_doSetButton]|
_doCancelButton, _separatorLine, _doSetButton
separatorWidth
completionTarget
options
tile
com.apple.photos.plcropoverlay.save
Status shown while setting wallpaper
SAVING_PHOTO
should be able to make run loop source
PLDataArrayInputStream.m
sanity check for stream data
fadeInBorderForCollapse
collapseSingleImage
Contracted
Expanding
Complete Expand
Cancel Expand
Expanded
Contracting
Cancel Contract
Complete Contract
PLImageBorder
PLImageBorder@2x
ipad
_serverConnectionDiedNotification. Info -- notification=%@, AVPlayer = %@, currentTime = %.2f
GENERIC_COULD_NOT_LOAD_MOVIE
COULD_NOT_LOAD_MOVIE_ERROR_FMT
Error setting up TVOutWindow
Unable to start background task, TV Out window may not tear down.
readyForDisplay
externalPlaybackActive
status
rate
playbackLikelyToKeepUp
playbackBufferFull
playbackBufferEmpty
Could not load value for key %@:
duration
tracks
home-sharing://
http://
https://
PhotoKit Settings
Restore All Defaults
PhotoKit
resourceDownloadSettings
Resource Download Request
imageManagerSettings
Image Manager
PHPhotoLibrary *PLNavigationControllerInterfacePhotoLibrary(NSURL *)
Requested URL %@ does not match previous URL %@
PLNavigationControllerInterface.m
_UIImagePickerDebugSidecarFileURLs
v32@?0@"NSData"8@"PLImageDataInfo"16@"PLCPLDownloadContext"24
PUPhotoPickerOriginalImagePathSandboxExtensionToken
_UIImagePickerControllerPHAssetLocalIdentifier
NSDictionary *PLPhotoPickerDictionaryFromImage(NSDictionary *, PLPhotoTileViewController *, PLManagedAsset *, NSDictionary *, BOOL)
PLPhotoPickerDictionaryFromImage - _UIImagePickerControllerShowCameraControls may not be nil
PLPhotoPickerDictionaryFromImage - _UIImagePickerControllerReviewCapturedItem may not be nil
PLPhotoPickerDictionaryFromImage - UIImagePickerControllerSourceType may not be nil
_UIImagePickerControllerSourceType
PLPhotoPickerDictionaryFromImage - UIImagePickerSavingOptions may not be nil
_UIImagePickerSavingOptions
Loading_Error%@.png
_iPad
LOADING_PHOTO
Call -initWithFrame:photoTileController: or you get <rdar://problem/14272922> Comments using only half width of screen after swiping in landscape
PLPhotoTileViewController.m
BlueCheckSelected.png
BlueCheckUnselected.png
v36@?0@"NSData"8@"NSString"16I24@"NSDictionary"28
CAMImagePickerCameraViewController
v16@?0@"<UIViewControllerTransitionCoordinatorContext>"8
<%@ photo:%@
SelectedContentMode
notify_cancel() failed for Shared Photo Stream invitation failure activity notification. (%d)
notify_cancel() failed for kMSASStabilizedIdleStateDidChangeNotification. (%d)
notify_cancel() failed for kMSIdleStateDidChangeNotification. (%d)
failed to register for Shared Photo Stream invitation failure activity notification: %u
v12@?0i8
failed to register for Shared Photo Stream activity notification: %u
failed to register for Photo Stream activity notification: %u
0.0.0.0
MRMediaRemoteSetNowPlayingApplicationOverrideEnabled
void PLMRMediaRemoteSetNowPlayingApplicationOverrideEnabled(Boolean)
PLPhotosApplication.m
/System/Library/PrivateFrameworks/MediaRemote.framework/MediaRemote
/System/Library/PrivateFrameworks/MediaRemote.framework/Contents/MacOS/MediaRemote
void *MediaRemoteLibrary(void)
com.apple.mobileslideshow
com.apple.mobileslideshow.PreferenceChanged
LogJPEGDecodeTime
EnableIris
pLzf7OiX5nWAPUMj7BfI4Q
PLPhotosDefaultsDidChangeNotification
NowPlaying
FromIPhoto
SummarizeSections
validValues
Transition
items
plist
Photos
PLProgressHUDCheckmark
MEDIA_PROGRESS_NO_TIME_FORMAT
MEDIA_TIME_SECONDS_REMAINING_FORMAT
MEDIA_TIME_ONE_SECOND_REMAINING
COMPLETING_UPLOAD
MEDIA_TIME_MINUTES_REMAINING_FORMAT
MEDIA_TIME_ONE_MINUTE_REMAINING
MEDIA_PROGRESS_FORMAT
PLPublishingAgentFinishedPublishingNotification
PLPublishingAgentStartedPublishingNotification
PLPublishingAgentStartedRemakingNotification
PLPublishingAgentFinishedRemakingNotification
PLPublishingAgentRemakingDidSucceedKey
PLPublishingAgentDidCancelNotification
PLPublishingAgentsForcedCancelNotification
CLOSE
FAILED_PUBLISH_IMAGE
FAILED_PUBLISH_VIDEO
MEDIA_FAILURE_FORMAT
mailto:?subject=%@&body=%@
TELL_A_FRIEND
v16@?0@"UIAlertAction"8
VIEW_BUTTON_TITLE_FORMAT
PUBLISHED_IMAGE
PUBLISHED_VIDEO
PUBLISHED_MEDIA_FORMAT
SHARING_WAS_INTERRUPTED
SUBCLASS OVERRIDE
<override -[PLPublishingAgent serviceName]
PLPhotosApplication
MCFeatureCellularHDUploadsAllowed
NSString *getMCFeatureCellularHDUploadsAllowed(void)
PLPublishingAgent.m
/System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration
/System/Library/PrivateFrameworks/ManagedConfiguration.framework/Contents/MacOS/ManagedConfiguration
void *ManagedConfigurationLibrary(void)
MCProfileConnection
Class getMCProfileConnectionClass(void)_block_invoke
Unable to find class %s
%@.bundle
/System/Library/PublishingBundles/
B16@?0@"NSString"8
BLMigratingError
IPMS: failed adding %@ asset for %@ media to "%@" album (%@), asset may be hard to find!
IPMS: failed creating "%@" album (%@), album will be inexistent or incomplete after migration!
IPMS: failed backing up %@ to "%@", media may get duplicated during later migration attempts!
uuid
IPMS: failed correcting date for asset for %@ (%@)!
IPMS: failed updating asset for %@ (%@), asset will remain in iPhoto sandbox for later migration attempts!
IPMS: failed creating asset for %@, asset will remain in iPhoto sandbox for later migration attempts!
IPMS: failed creating asset for %@ (%@), asset will remain in iPhoto sandbox for later migration attempts!
longitude
latitude
IPMS: ignoring data for %@ (not migrating) because there is no image file!
IPMS: failed reading original data for %@, will use small rendered JPEG as original and drop adjustments!
IPMS: failed reading original data for %@, will use rendered JPEG as original and drop adjustments!
OriginalFullResolutionImage
AspectedThumbnail.jpeg
FullScreenImage.jpeg
mobileiphotomedia
dateCreated
%@ (%@)
fileName
rating
type
BLMigratingMediaFormat
Media.plist
title = %@
<IMPORTED FROM IPHOTO>
Media
library
Invalid parameter not satisfying: %@
PLiPhotoMigrationSupport.m
q24@?0@"NSDictionary"8@"NSDictionary"16
iPhotoMigratedData
iPhotoSandboxLibrary
IPMS: failed deleting iPhoto sandbox files of %@ (%@), will leave dangling files!
IPMS: failed creating "%@" (%@)!
'%@-%@'
iPhotoMigrationInFlight
v32@?0@"NSString"8Q16^B24
avAsset
PLPublishingMedia.m
managedAsset
[PLPublishingMedia isValidPublishingMedia:asset]
asset
v16@?0@"NSTimer"8
PLProgressIris%@-PhotoIris
-Compact
-Regular
v16@?0d8
PLSlalomGrabberHandle.png
Error: no external display attached in tv out mode
Restore Defaults
allowCaching
Caching
allowImageRequests
Image Requests
VIDEO_PLAYBACK_FAILED
VIDEO_TOO_LONG_TITLE
VIDEO_TOO_LONG_TITLE_IMAGE_PICKER
TRIM_FOR_PUBLISH_TITLE
TRIM_TITLE_IMAGE_PICKER
TRIM_VIDEO_NAV_TITLE
TRIM_VIDEO_NAV_TITLE_IMAGE_PICKER
_UIImagePickerControllerMaxZoomScaleOverride
_UIImagePickerControllerCustomBackgroundColor
_UIImagePickerControllerCancelButtonTitle
v24@?0@"UIImage"8@"NSDictionary"16
COMPRESSING_VIDEO
CHOOSE_VIDEO_TITLE
CHOOSE_PHOTO_TITLE
USE_PHOTO_BUTTON_TITLE
PLVideoOverlayGlyphMask
PLVideoOverlayBackgroundMask
aiff
3gp2
3gpp
v24@?0@"AVAssetExportSession"8@"NSError"16
PREPARING_VIDEO
TRIMMING_VIDEO
v40@?0@"AVAsset"8@"AVAudioMix"16@"AVVideoComposition"24@"NSError"32
media
PLVideoRemaker.m
fileLengthLimit
v8@?0
Video export failed for asset %@: %@
Failed to delete file at path %@: %@
Failed to write metadata to path %@
v20@?0B8@"NSError"12
Failed to commit adjustments with error: %@
v24@?0@"AVPlayerItem"8@"NSError"16
CANNOT_PLAY_STREAM_VIDEO_TITLE
Unable to copy CGImage at time:%f, error:[%@]
v16@?0@"PLManagedAsset"8
*** Error saving a copy trimmed video to the disk ... cleaning up state: %@
v32@?0@"NSDictionary"8@"NSURL"16@"NSError"24
*** Error generating video thumbnails ... cleaning up state: %@
Unable to assign data protection to "%@": %@
VIDEO_TOO_LONG_BODY
v80@?0{?=qiIq}8^{CGImage=}32{?=qiIq}40q64@"NSError"72
timestamps
v24@?0@"PHContentEditingInput"8@"NSDictionary"16
B16@?0@"PHAdjustmentData"8
v24@?0@"AVPlayerItem"8@"NSDictionary"16
<%@ path:%@>
com.apple.mobileslideshow.videoThumbnails
videoCameraImage must be either video or audio
simulateDownload == YES
simulateDownloadFailure
Simulate Download Failure
simulateDownload
Simulate Download
indexPath is out of range %@
UITableViewAdditions.m
v12@?0B8
opacity
(video-playback) setting buffering state to %lu
(video-playback) buffering state changed from %lu to %lu
(video-playback) calling _player pause in stop
(video-playback) calling _player pauseDueToInsufficientData
(video-playback) calling _player pause in pause
(video-playback) calling _player playDueToEnoughData
(video-playback) calling _player play in playFromBeginning
(video-playback) calling _player play
(video-playback) _playerRateDidChange %@
(video-playback) %@ observeValueForKeyPath %@ %@
PLNavigationControllerInterface unable to open system photo library: %@
CreateVideoDictionary
CreateImageDictionary
CreateMediaDictionary
CreateMultipleMediaDictionary
%{public}ld
Mis-matched image size and/or orientation for asset %@. PhotoKit: %.0f x %.0f (%ld). Data: %.0f x %.0f (%ld)
Will not begin new iPhoto migration; it appears a migration is already underway.
Video export failed for asset %@: %@
Marked temp file (%@) as purageble.
Unable to mark temp file (%@) purageble.
No PHAsset for committing pending adjustment changes
(video-playback) update poster frame visibility to %d
(video-playback) pause due to force stop
(video-playback) pause due to stop
(video-playback) pause due to video view pause
(video-playback) play in %@
Playing 360p video for cellular connection.
(streamed-video-playback) already have a cachedNonPersistedVideoPlaybackURL %@
(streamed-video-playback) will play streamed video using original video at path %@
(streamed-video-playback) will play video for %@
(video-playback) _verifyOrRestartPlayback playing %u didBuffer %u
(video-playback) _verifyOrRestartPlayback rate > 0
(video-playback) _verifyOrRestartPlayback telling movie player to play
(video-playback) pause due to reset
Failed to fetch playback objects for %@
(video-playback) moviePlayerPlaybackRateDidChange to 0
(video-playback) moviePlayerPlaybackRateDidChange to 1
(video-playback) play due to buffer state change
(video-playback) pauseDueToInsufficientData due to buffer state change
Clearing PLVideoView delegate before trim scrubber animation finished. Calling manually.
(video-playback) network reachability changes. Clears out cached video URL.
Requesting cleanupForStoreDemoMode
softlink:r:path:/System/Library/PrivateFrameworks/MediaRemote.framework/MediaRemote
softlink:r:path:/System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration
PHSettings
PLAVPlayerView
PLAssetContainerDataSource
PHAssetCollectionDataSource
NSObject
PLCAAnimationDelegate
CAAnimationDelegate
PLCGPathCache
PLCacheEntry
PLCache
PLCommentsFontCache
PLContactPhotoOverlay
PLCropOverlay
PLCropOverlayCropView
PLCropOverlayBottomBar
PLCropOverlayPreviewBottomBar
PLCropOverlayWallpaperBottomBar
PhotoSaving
PLDataArrayInputStream
PLExpandableImageView
PLExpandableView
PLImageScrollView
PLImageView
PLMoviePlayerController
PHRootSettings
PLMoviePlayerControllerManager
PLMoviePlayerView
PLNavigationControllerInterface
PLImagePickerUtils
PLPhotoTileCloudPlaceholderView
PLTilePlaceholderView
PLPhotoTilePlaceholderView
PLTileContainerView
PLPhotoTileViewController
PLPhotoTileCloudPlaceholderViewDelegate
UIGestureRecognizerDelegate
UIScrollViewDelegate
PLPhotosApplication
UIApplicationDelegate
PLPhotosDefaults
PLProgressHUD
PhotoLibrary
PLProgressView
PLPublishingAgent
PLDataArrayInputStreamProgressDelegate
PLPublishAlbum
PLiPhotoMigrationSupport
PLPublishingMedia
PLRoundProgressView
PLProgressArcLayer
PLSlalomRegionEditor
PLTVOutWindow
PLTiledLayer
PLTileableLayer
PLUIEditImageViewController
PHImageManagerSettings
PLUIView
PLUIEditVideoViewController
UINavigationControllerDelegate
UIImagePickerControllerDelegate
PLUIImageViewController
PLCropOverlayDelegate
PLPhotoTileViewControllerDelegate
PLVideoViewDelegate
PLFlatVideoOverlayButton
PLVideoOverlayButton
PLHighFidelityVideoOverlayButton
PLVideoRemaker
PLAssetImageGenerator
PLVideoPosterFrameView
PLVideoView
PLSlalomRegionEditorDelegate
PLMoviePlayerControllerDelegate
UIMovieScrubberDataSource
UIMovieScrubberDelegate
PLVideoEditingOverlayView
PHResourceDownloadSettings
PLWallpaperButton
_UIBackdropViewObserver
PhotosInternal
PhotoLibraryAdditions
T@"NSString",C,N
suiteName
setSuiteName:
sharedSettings
createSharedSettings
_userDefaults
_defaultsKey
_signatureDictionary
archiveDictionary
initWithDefaultValues
dictionary
standardUserDefaults
initWithSuiteName:
settingsFromArchiveDictionary:
isEqualToDictionary:
objectForKeyedSubscript:
handleFailureInMethod:object:file:lineNumber:description:
currentHandler
copy
parentSettings
save
synchronize
setObject:forKeyedSubscript:
dictionaryWithCapacity:
layer
T@"AVPlayerLayer",R,&,D,N
T@"AVPlayer",&,N
Tq,N,V_scaleMode
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
_scaleMode
initWithFrame:
player
setPlayer:
setScaleMode:
setScaleMode:duration:
videoRect
scaleMode
setVideoGravity:
setAnimationDuration:
setContentsOpaque:
layerClass
T@"PHFetchResult",R,N,V_assetCollectionsFetchResult
hash
TQ,R
superclass
T#,R
T@"NSString",R,C
debugDescription
_assetCollectionsFetchResult
_assetsFetchResultByAssetCollection
_allAssetsCount
_containerCounts
_cachedValuesNeedUpdate
_lastAssetCollectionIndex
T@"PHFetchResult",R,N
assetsInAssetCollection:
assetCollectionsFetchResult
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
description
initWithAssetCollectionsFetchResult:collectionsAssetsFetchResults:
dealloc
_updateCachedValues
_updateCachedCount:forContainerAtContainerIndex:
allAssetsCount
assetContainerForAsset:
assetContainerForAssetGlobalIndex:
globalIndexForIndexPath:
indexPathForGlobalIndex:
incrementGlobalIndex:insideCurrentAssetContainer:andWrap:
decrementGlobalIndex:insideCurrentAssetContainer:andWrap:
assetAtGlobalIndex:
globalIndexOfAsset:
indexOffsetForAssetContainerAtAssetIndex:
assetWithObjectID:
assetsInAssetCollectionAtIndex:
newAssetsFetchResults
assetAtIndexPath:
indexPathOfAsset:
assetContainerAtIndex:
indexOfContainer:
firstAssetIndexPath
lastAssetIndexPath
hasAssetAtIndexPath:
findNearestIndexPath:preferNext:
_indexOfNextNonEmptyAssetContainerAfterContainerIndex:wrap:
_indexOfPreviousNonEmptyAssetContainerBeforeContainerIndex:wrap:
incrementAssetIndexPath:insideCurrentAssetContainer:andWrap:
decrementAssetIndexPath:insideCurrentAssetContainer:andWrap:
assetCountForContainer:
assetCountForContainerAtIndex:
assetInAssetContainer:atIndex:
pl_fetchAllAssets
viewControllerPhotoLibraryDidChange:
countByEnumeratingWithState:objects:count:
appendFormat:
count
mutableCopy
allKeys
initWithCapacity:
hasIncrementalChanges
fetchAssetsInAssetCollection:options:
setIncludeHiddenAssets:
librarySpecificFetchOptions
photoLibrary
firstObject
removeObjectsForKeys:
removedObjects
insertedObjects
fetchResultAfterChanges
changeDetailsForFetchResult:
addObjectsFromArray:
pl_managedAssetsForAssets:
array
objectAtIndexedSubscript:
indexOfObject:
indexPathForItem:inSection:
item
section
objectAtIndex:
lastObject
fetchPHObjectsForOIDs:
arrayWithObjects:count:
objectIDAtIndex:
T@?,C,N,V_completion
T@?,C,N,V_start
_completion
_start
animationDidStart:
animationDidStop:finished:
completion
setCompletion:
start
setStart:
_pathCache
init
setPath:forKey:
pathForKey:
valueWithCGRect:
sharedPathCache
_object
_entry
setObject:
object
lruListEntry
_cacheEntries
_countLimit
_currentCount
_totalCostLimit
_currentCost
_lock
_lru
initWithCountLimit:totalCostLimit:
objectForKey:
setObject:forKey:
setObject:forKey:cost:
removeObjectForKey:
removeAllObjects
T@"UIFont",R,N
__shortCaptionFontDescriptor
__emphasizedShortCaptionFontDescriptor
__shortSubheadlineFontDescriptor
__bodyFontDescriptor
__emphasizedBodyFontDescriptor
__shortBodyFontDescriptor
_contentSizesDidChange:
_invalidateCache
_shortCaptionFontDescriptor
_emphasizedShortCaptionFontDescriptor
_shortSubheadlineFontDescriptor
_bodyFontDescriptor
_emphasizedBodyFontDescriptor
_shortBodyFontDescriptor
youLikeFont
likeFont
commentTextFont
commentAttributionDateFont
commentAttributionNameFont
commentEntryFont
commentSendButtonFont
fontWithDescriptor:size:
fontDescriptorWithSymbolicTraits:
preferredFontDescriptorWithTextStyle:addingSymbolicTraits:options:
postNotificationName:object:
defaultCenter
removeObserver:
addObserver:selector:name:object:
sharedCache
T@"UIImageView",R,N,V__avatarPreview
T@"CAShapeLayer",&,N,V_circularLayer
T@"UILabel",R,N,V_titleLabel
T{UIEdgeInsets=dddd},R,N
_titleLabel
__avatarPreview
_circularLayer
overlayEdgeInsets
_commonPLContactPhotoOverlayInitialization
initWithCoder:
layoutSubviews
inscribingBounds
beginAvatarTrackingFromImageView:
endAvatarTracking
titleLabel
_avatarPreview
circularLayer
setCircularLayer:
bounds
bringSubviewToFront:
addSublayer:
setFillColor:
CGColor
colorWithRed:green:blue:alpha:
setFillRule:
setPath:
CGPath
setUsesEvenOddFillRule:
appendPath:
bezierPathWithOvalInRect:
bezierPathWithRect:
sizeToFit
addSubview:
setTextColor:
whiteColor
setFont:
preferredFontDescriptorWithTextStyle:
setBackgroundColor:
clearColor
T@"PLCropOverlayBottomBar",R,N,V__bottomBar
T@"UIButton",R,N,V__cameraCancelButton
T@"PLContactPhotoOverlay",R,N,V_contactPhotoOverlay
T@"UIView",&,N
T@"PLCropOverlayWallpaperBottomBar",R,N
TB,N,V_motionToggleIsOn
TB,N,V_isEditingHomeScreen
TB,N,V_isEditingLockScreen
TB,N
displayedInPopover
TB,N,GisDisplayedInPopover,V_displayedInPopover
T@"NSString",C,N,V_defaultOKButtonTitle
T@"NSString",C,N,V_defaultCancelButtonTitle
T@"<PLCropOverlayDelegate>",W,N,V_delegate
_cropView
_shadowView
_overlayContainerView
_cropRect
_customToolbar
_topShineView
_hud
_statusBarHeight
_mode
_previewMode
_cropRectIsVisible
_offsetStatusBar
_tookPhoto
_showsCropRegion
_controlsAreVisible
_bottomShineView
_okButton
_wildcatPickerTopView
_wildcatPickerBottomView
_motionToggleIsOn
_isEditingHomeScreen
_isEditingLockScreen
_displayedInPopover
_contactPhotoOverlay
_defaultOKButtonTitle
_defaultCancelButtonTitle
_delegate
__bottomBar
__cameraCancelButton
initWithFrame:mode:offsettingStatusBar:
setDisplayedInPopover:
cameraBottomBar
setCameraBottomBar:
wallpaperBottomBar
controlsAreVisible
setControlsAreVisible:
overlayContainerView
setOverlayContainerView:
initWithFrame:mode:
_createCropView
insertIrisView:
bottomBar
bottomBarFrame
setCropRectVisible:duration:
_setMode:
didCapturePhoto
didCaptureVideo
didPlayVideo
didPauseVideo
mode
statusBarHeightDidChange:
setDelegate:
dismiss
_fadeOutCompleted:
cancelButtonClicked:
_tappedBottomBarCancelButton:
_tappedBottomBarDoneButton:
_tappedBottomBarSetHomeButton
_tappedBottomBarSetLockButton
_tappedBottomBarSetBothButton
_tappedBottomBarMotionToggle
_bottomBarFileSizeMenu
_bottomBarFileSizeMenuActions
setMotionToggleIsOn:
_updateMotionToggle
setIsEditingHomeScreen:
setIsEditingLockScreen:
_updateWallpaperBottomBarSettingButtons
setMotionToggleHidden:
motionToggleHidden
_tappedBottomBarPlaybackButton:
cropOverlayBottomBarPlayButtonClicked:
_playButtonPressed:
cropOverlayBottomBarPauseButtonClicked:
_pauseButtonPressed:
setEnabled:
hitTest:withEvent:
cropRect
setTitle:okButtonTitle:
setTitle:
titleRect
setOKButtonTitle:
setDefaultOKButtonTitle:
setDefaultCancelButtonTitle:
setOKButtonShowsCamera:
setCancelButtonTitle:
setShowProgress:title:
removeProgress
setProgressDone
setShowsCropRegion:
setTitleHidden:animationDuration:
setPreviewMode:
previewMode
_fileResizingButton
setFileResizingTitle:
setFileResizingHidden:
_updateTitle
_updateEditImageDoneButtonTitle
_updateEditImageCancelButtonTitle
_updateToolbarItems:
_updateCropRectInRect:
_newOverlayViewWithFrame:lighterEdgeOnTop:
isTelephonyUIMode:
isWallpaperUIMode:
contactPhotoOverlay
motionToggleIsOn
isEditingHomeScreen
isEditingLockScreen
isDisplayedInPopover
defaultOKButtonTitle
defaultCancelButtonTitle
delegate
_bottomBar
_cameraCancelButton
.cxx_destruct
resizableImageWithCapInsets:resizingMode:
colorWithWhite:alpha:
setItems:
arrayWithObjects:
initWithBarButtonSystemItem:target:action:
setTitle:forState:
length
setHidden:
setAlpha:
animateWithDuration:animations:
removeFromSuperview
setNeedsLayout
isEqualToString:
frame
isDescendantOfView:
menuWithTitle:children:
elementWithProvider:
animateWithDuration:animations:completion:
setFrame:
statusBarHeight
sharedApplication
userInterfaceIdiom
currentDevice
insertSubview:aboveSubview:
insertSubview:belowSubview:
setAutoresizingMask:
setOpaque:
setUserInteractionEnabled:
setCropRect:
_aboveCropView
_cropRectView
_belowCropView
_updateCropRectIfNeeded
_removeCropViews
setBorderWidth:
setBorderColor:
alpha
convertRect:fromView:
mainScreen
isStatusBarHidden
size
scale
safeAreaInsets
defaultHeight
lightGrayColor
setShowsMenuAsPrimaryAction:
setMenu:
setExclusiveTouch:
setTitleColor:forState:
buttonWithType:
addTarget:action:forControlEvents:
setShadowOffset:
setShadowColor:
setTextAlignment:
Tq,N,V_style
T@"UIView",&,N,V_cameraBottomBar
T@"PLCropOverlayPreviewBottomBar",&,N,V_previewBottomBar
T@"PLCropOverlayWallpaperBottomBar",&,N,V_wallpaperBottomBar
playingVideo
TB,N,GisPlayingVideo,V_playingVideo
inPopover
TB,N,GisInPopover,V_inPopover
_playingVideo
_inPopover
_style
_cameraBottomBar
_previewBottomBar
_wallpaperBottomBar
_commonPLCropOverlayBottomBarInitialization
setPreviewBottomBar:
setWallpaperBottomBar:
setStyle:
setStyle:animated:
setPlayingVideo:
togglePlaybackState
setInPopover:
_updateBottomBars
_updatePreviewBottomBarForPlaybackState
_isEditingStyle:
_updateStyle
style
previewBottomBar
isPlayingVideo
isInPopover
setImage:forState:
imageNamed:inBundle:
Tq,N,V_backgroundStyle
T@"UIButton",R,N,V_cancelButton
T@"UIButton",R,N,V_doneButton
T@"UIButton",R,N,V_playbackButton
T@"UIButton",R,N,V_fileResizingButton
_backgroundStyle
_cancelButton
_doneButton
_playbackButton
_commonPLCropOverlayEditPhotoBottomBarInitialization
safeAreaInsetsDidChange
setBackgroundStyle:
setBackgroundStyle:animated:
_updateBackgroundStyle
backgroundStyle
cancelButton
doneButton
playbackButton
fileResizingButton
textRectForBounds:limitedToNumberOfLines:
userInterfaceLayoutDirectionForSemanticContentAttribute:
semanticContentAttribute
setAdjustsFontSizeToFitWidth:
setAccessibilityIdentifier:
T@"_UILegibilityLabel",&,N,V_titleLabel
T@"UIView",&,N,V_separatorLine
T@"_UIBackdropView",&,N,V_backdropView
Td,N,V_maxToggleWidth
T@"PLWallpaperButton",R,&,N,V_doCancelButton
T@"PLWallpaperButton",R,&,N,V_doSetButton
T@"PLWallpaperButton",R,&,N,V_doSetHomeScreenButton
T@"PLWallpaperButton",R,&,N,V_doSetLockScreenButton
T@"PLWallpaperButton",R,&,N,V_doSetBothScreenButton
T@"PLWallpaperButton",R,&,N,V_motionToggle
TB,N,V_motionToggleHidden
TB,N,V_shouldOnlyShowLockScreenButton
TB,N,V_shouldOnlyShowHomeScreenButton
_motionToggleHidden
_shouldOnlyShowLockScreenButton
_shouldOnlyShowHomeScreenButton
_doCancelButton
_doSetButton
_doSetHomeScreenButton
_doSetLockScreenButton
_doSetBothScreenButton
_motionToggle
_separatorLine
_backdropView
_maxToggleWidth
_commonPLCropOverlayWallpaperBottomBarInitialization
_commonPLCropOverlayWallpaperBottomBarInitializationPhone
_commonPLCropOverlayWallpaperBottomBarInitializationPad
_layoutSubviewsPhone
_layoutSubviewsPad
widthForToggleText
setText:
_sizeForString:
sizeThatFits:
updateForChangedSettings:
doCancelButton
doSetButton
doSetHomeScreenButton
doSetLockScreenButton
doSetBothScreenButton
motionToggle
shouldOnlyShowLockScreenButton
setShouldOnlyShowLockScreenButton:
shouldOnlyShowHomeScreenButton
setShouldOnlyShowHomeScreenButton:
setTitleLabel:
separatorLine
setSeparatorLine:
backdropView
setBackdropView:
maxToggleWidth
setMaxToggleWidth:
string
sizeWithAttributes:
dictionaryWithObjects:forKeys:count:
font
setString:
sendSubviewToBack:
convertRect:fromCoordinateSpace:
activateConstraints:
constraintsWithVisualFormat:options:metrics:views:
stringWithFormat:
componentsJoinedByString:
addObject:
arrayWithCapacity:
initWithSettings:strength:string:font:
systemFontOfSize:
initWithContentColor:
addObserver:
initWithPrivateStyle:
setActive:
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:
numberWithDouble:
setTranslatesAutoresizingMaskIntoConstraints:
initWithUnsignedInt:
beginIgnoringInteractionEvents
initWithObjectsAndKeys:
cancelMouseTracking
_backgroundSavePhoto:cropRect:minimalCropDimension:
unsignedIntValue
_savePhotoFinished:
endIgnoringInteractionEvents
beginBackgroundSaveWithTile:progressTitle:completionCallbackTarget:options:
T@"<PLDataArrayInputStreamProgressDelegate>",N,V_progressDelegate
_dataArray
_bodyData
_dataCount
_dataLength
_dataOffset
_currentIndex
_currentOffset
_currentLength
_openEventSent
_streamStatus
_progressDelegate
_rls
_clientCallback
_clientContext
initWithDataArray:
_streamEventTrigger
_scheduleCallback
_scheduleInCFRunLoop:forMode:
_unscheduleFromCFRunLoop:forMode:
_setCFClientFlags:callback:context:
scheduleInRunLoop:forMode:
removeFromRunLoop:forMode:
open
close
streamError
streamStatus
_updateProgress
_scheduleProgressUpdate
read:maxLength:
totalBytes
bytesRead
hasBytesAvailable
getBuffer:length:
progressDelegate
setProgressDelegate:
bytes
performSelector:withObject:afterDelay:inModes:
arrayWithObject:
cancelPreviousPerformRequestsWithTarget:selector:object:
getCFRunLoop
stream:handleEvent:
T{CGSize=dd},R,N
T@"PLVideoView",&,N
TB,R,N
borderAndAccessoriesVisible
TB,N,GisBorderAndAccessoriesVisible
T@"PLManagedAsset",&,N,V_photo
_imageView
_imageID
_originalSize
_originalWidth
_originalAngle
_anchorPoint
_imageRotationAngle
_pinchWidth
_pinchAngle
_pinchScale
_initialExpandingFrame
_originalBounds
_currentAngle
_centerOffset
_photo
_exImageFlags
initWithFrame:frameStyle:withBorder:
initWithFrame:frameStyle:
pointInside:withEvent:
_currentScale
_expandedScale
_expansionFraction
_snappedExpandedFrame
stateDidChangeFrom:
_setOriginalSize:
beginTrackingPinch:
setSize:angle:
_borderAlphaForExpansionFraction:
_updateBorderAndAccessoriesAlpha
_updatePinchWidthAndScaleWithLeftPoint:rightPoint:
continueTrackingPinch:
_newSizeFromSize:
setTransformAndCenterForFrame:
completeTrackingPinch:toState:duration:
_bounceBack:finished:context:
_bounceToPlace:finished:context:
finishTransition
_contentView
setCenter:
setBorderAndAccessoriesVisible:
isBorderAndAccessoriesVisible
setImage:isFullscreen:
setImage:
image
setFullSizeImageJPEGData:size:orientation:
setName:
name
showsPlaceholder
setShowsPlaceholder:
imageView
imageSize
frameOfImage
videoView
setVideoView:
imageRotationAngle
setShadowEnabled:
isShadowEnabled
setTransitionProgress:
transitionProgress
isBeingManipulated
setTextBadgeString:
renderSnapshotInContext:
photo
setPhoto:
superview
layoutIfNeeded
center
layoutBelowIfNeeded
boolValue
commitAnimations
setAnimationDidStopSelector:
setAnimationDelegate:
setAnimationCurve:
beginAnimations:context:
performSelector:withObject:afterDelay:
setAnimationDelay:
setAnchorPoint:
convertPoint:toView:
velocity
setTransform:
locationOfTouch:inView:
convertRect:toView:
setBounds:
setEdgeAntialiasingMask:
imageBorderWidth
T{CGRect={CGPoint=dd}{CGSize=dd}},N
_collapsingCompletionHandler
_expansionCompletionHandler
_contractedFrame
_expandedFrame
_leftTouchLocation
_rightTouchLocation
_previousLeftLocation
_previousRightLocation
_leftTouchIndex
_rightTouchIndex
_pinchVelocity
_trackingTimeInterval
_expandFlags
_setAutorotationDisabled:
_notifyDidCompleteCollapsing
_notifyWillBeginExpanding
_notifyWillCancelCollapsingWithDuration:
_notifyWillCompleteCollapsingWithDuration:
_notifyWillCompleteExpandingWithDuration:
_notifyWillCancelExpandingWithDuration:
_notifyDidCompleteExpanding
_notifyWillBeginCollapsing
_notifyDidCancelExpanding
_notifyDidCancelCollapsing
_transitionFromContracted:withDuration:
_transitionFromExpanding:withDuration:
_transitionFromCompleteExpand:withDuration:
_transitionFromCancelExpand:withDuration:
_transitionFromExpanded:withDuration:
_transitionFromContracting:withDuration:
_transitionFromCancelContract:withDuration:
_transitionFromCompleteContract:withDuration:
setState:withDuration:
stateWillChangeTo:
willMoveToWindow:
didMoveToWindow
notifyExpansionFraction:force:
startedPinch:
continuedPinch:
finishedPinch:
canceledPinch:
finishTransitionToState:
snapState:
updatePinchState:
pinchRect:inView:insetTouches:
collapseWithAnimation:completion:
expandWithAnimation:completion:
setContractedFrame:
contractedFrame
setExpandedFrame:
expandedFrame
setAllowsExpansion:
allowsExpansion
state
previousState
setExpansionFraction:
expansionFraction
isTracking
_canPinch
canCollapse
expandableView:expansionFractionChanged:
expandableViewDidCancelCollapsing:
expandableView:willCancelCollapsingWithDuration:
expandableViewDidCompleteCollapsing:
expandableView:willCompleteCollapsingWithDuration:
expandableViewDidBeginCollapsing:
expandableViewDidCancelExpanding:
expandableView:willCancelExpandingWithDuration:
expandableViewDidCompleteExpanding:
expandableView:willCompleteExpandingWithDuration:
expandableViewWillBeginExpanding:
transform
numberOfTouches
_removeAllAnimations:
endDisablingInterfaceAutorotation
isInterfaceAutorotationDisabled
beginDisablingInterfaceAutorotation
TB,N,V_adjustZoomScaleAfterRotation
_adjustZoomScaleAfterRotation
willAnimateRotationToInterfaceOrientation:
adjustZoomScaleAfterRotation
setAdjustZoomScaleAfterRotation:
setContentOffset:
contentOffset
zoomScale
setDecelerationRate:
setScrollsToTop:
T@"NSString",C,N,V_name
dimmed
TB,N,GisDimmed
Tf,N
shadowEnabled
TB,N,GisShadowEnabled
Td,N,V_transitionProgress
T@"UIView",&,N,V_leftAccessoryView
T{CGSize=dd},N,V_leftAccessoryViewOffset
T@"UIView",&,N,V_bottomRightAccessoryView
Td,N,V_accessoryViewsAlpha
TB,R,N,V_showsPlaceholder
Td,N,V_placeholderScale
_name
_borderView
_videoView
_placeholderView
_leftAccessoryView
_bottomRightAccessoryView
_leftAccessoryViewOffset
_textBadge
_shadowEnabled
_suppressShadowDrawing
_borderViewIsVisible
_drawsBorder
_aspectRatio
_lastBorderAlphaTime
_lastShadowAlphaTime
_transitionProgress
_edgeAntialiasingEnabled
_fullSizeImageTiledLayer
_fullSizeImageOrientation
_showsPlaceholder
_accessoryViewsAlpha
_placeholderScale
sizeThatFits:allowRounding:
_leftAccessoryViewFrame
_bottomRightAccessoryViewFrame
_updateShadowPath
updateFullSizeImageVisibleArea
_transformForFullSizeImageTiledLayer
_setShadowEnabled:force:
parentDidLayout
setBorderAndAccessoriesAlpha:forced:
setBorderAndAccessoriesAlpha:
borderAndAccessoriesAlpha
setDrawsBorder:
drawsBorder
setDimmed:
isDimmed
setEdgeAntialiasingEnabled:
setPlaceholderScale:
placeholderSize
_updatePlaceholderLayout
_updatePlaceholderAlpha
textBadgeString
setLeftAccessoryView:
setLeftAccessoryView:animated:
setLeftAccessoryViewOffset:
setBottomRightAccessoryView:
setBottomRightAccessoryView:animated:
setAccessoryViewsAlpha:
leftAccessoryView
leftAccessoryViewOffset
bottomRightAccessoryView
accessoryViewsAlpha
placeholderScale
insertSubview:below:
setAllowsGroupOpacity:
textBadgeForString:photoSize:
text
opacity
setOpacity:
setContentsCenter:
setContentsScale:
setContents:
URLForResource:withExtension:
bundleForClass:
setShadowRadius:
setShadowOpacity:
shadowOpacity
convertRect:fromLayer:
removeFromSuperlayer
screen
setShadowPath:
commit
setValue:forKey:
begin
badgeOffset
renderInContext:
setAllowsDisplayCompositing:
setAllowsEdgeAntialiasing:
setContentMode:
initialize
shouldDrawShadows
setSize:
setCornerRadius:
setMinimumScaleFactor:
setBaselineAdjustment:
setLineBreakMode:
initWithWhite:alpha:
blackColor
TB,N,V_TVOutEnabled
TB,N,S_setForceDisableTVOut:,V_forceDisableTVOut
TB,N,V_isActiveController
T@"<PLMoviePlayerControllerDelegate>",N,V_delegate
T@"AVPlayer",R,&,N,V_player
T@"PLMoviePlayerView",R,&,N,V_view
Tf,R,N
TQ,R,N,V_playbackState
Td,R,N
Td,N
TQ,R,N,V_bufferingState
TB,R,N,V_isPreparedForPlayback
_playerItem
_player
_view
_tvOutWindow
_hasPendingTime
_pendingTime
_pendingTimeSnapOption
_forceUpdateCurrentTime
_isExternalPlayback
_exited
_lastSetCurrentTimeTime
_isSeeking
_backgroundTaskId
_audioSessionActive
_originalAudioCategory
_TVOutEnabled
_forceDisableTVOut
_isPreparedForPlayback
_isActiveController
_bufferingState
_playbackState
_registerForNotifications
_unregisterForNotifications
_playerKeysToObserve
_setupPlayer
_tearDownPlayer
_asset
setPlayerItem:startTime:
_setPlayerItem:
_loadAsset:
_didLoadValueOfKey:forAsset:
observeValueForKeyPath:ofObject:change:context:
_dispatchOnMainThreadWithBlock:
_playerRateDidChange:
play
playFromBeginning
playDueToEnoughData
pause
pauseDueToInsufficientData
stop
resetPlayer
setCurrentTime:
setCurrentTime:timeSnapOption:
setCurrentTime:timeSnapOption:forceUpdate:
_updateFromPendingTime
_delayedUpdateFromPendingTime
duration
playbackRate
currentTime
_streamBufferFull
_streamLikelyToKeepUp
_streamRanDry
_streamUnlikelyToKeepUp
_setBufferingState:
_setPlaybackState:
_simpleRemoteNotification:
_pausePlaybackForNotification
_willSuspendNotification:
_willBeginSuspendAnimationNotification:
_willResignNotification:
_didEnterBackgroundNotification:
_willEnterForegroundNotification:
_screenDidConnect:
_screenDidDisconnect:
videoOutActive
tearDownTVOutWindow
_setForceDisableTVOut:
_updateTVOutEnabled
_restoreTVOutVideoIfNecessary
_displayVideoView
_setupTVOutWindow
_tearDownTVOutWindow
_allowsExternalPlayback
_updateDisableAirPlayMirroringDuringPlayback
isExternalPlayback
externalPlaybackType
_updateBackgroundViewInformation
requestToBecomeActiveController
requestToResignAsActiveController
didBecomeActiveController
willResignAsActiveController
_playerItemDidReachEndNotification:
_playerItemFailedToPlayToEndNotification:
_playerItemFailedToPlayToEnd:
_playbackFailedWithError:
_exitPlayer:
_serverConnectionDidDie:
view
bufferingState
playbackState
TVOutEnabled
setTVOutEnabled:
forceDisableTVOut
isPreparedForPlayback
isActiveController
setIsActiveController:
error
addAction:
actionWithTitle:style:handler:
alertControllerWithTitle:message:preferredStyle:
localizedDescription
applicationState
domain
code
setUsesExternalPlaybackWhileExternalScreenIsActive:
setAllowsExternalPlayback:
endBackgroundTask:
_setCALayerDestinationIsTVOut:
isSuspendedUnderLock
beginBackgroundTaskWithExpirationHandler:
isExternalPlaybackActive
_isStreamableAsset:
rate
seekToTime:toleranceBefore:toleranceAfter:completionHandler:
floatValue
null
isMainThread
intValue
status
statusOfValueForKey:error:
loadValuesAsynchronouslyForKeys:completionHandler:
replaceCurrentItemWithPlayerItem:
addObserver:forKeyPath:options:context:
removeObserver:name:object:
removeObserver:forKeyPath:context:
seekToTime:toleranceBefore:toleranceAfter:
setActionAtItemEnd:
setExternalPlaybackVideoGravity:
setAudioSession:
setCategory:error:
auxiliarySession
endReceivingRemoteControlEvents
beginReceivingRemoteControlEvents
AVAssetURLWithPath:
_isNetworkSupportedPath:
compare:options:range:
absoluteString
URLFromPath:
settingsControllerModule
moduleWithTitle:contents:
sectionWithRows:
rowWithTitle:action:
actionWithSettingsKeyPath:
sectionWithRows:title:
rowWithTitle:childSettingsKeyPath:
T@"PHImageManagerSettings",R,N,V_imageManagerSettings
T@"PHResourceDownloadSettings",R,N,V_resourceDownloadSettings
_imageManagerSettings
_resourceDownloadSettings
imageManagerSettings
resourceDownloadSettings
_playerStack
moveControllerToTopOfStack:
removeControllerFromStack:
removeObject:
sharedInstance
T@"UIView",R,&,N
Tq,R,N,V_destinationPlaceholderStyle
destinationPlaceholderHidden
TB,N,GisDestinationPlaceholderHidden
_avPlayerView
_destinationPlaceholderHidden
_destinationPlaceholderStyle
reattachVideoView
isDestinationPlaceholderHidden
setDestinationPlaceholderHidden:
_installBackgroundView:
destinationPlaceholderStyle
insertSubview:atIndex:
parentViewController
uiipc_imagePickerController
CGImage
initWithCGImage:imageOrientation:
isMultiLibraryModeEnabled
initWithPhotoLibraryURL:
openAndWaitWithUpgrade:error:
sharedPhotoLibrary
_imagePickerSavingOptions
sourceType
_valueForProperty:
showsCameraControls
assetURLForPhoto:
identifier
localIdentifier
assetsdClient
debugClient
debugSidecarFileURLsForAsset:debugSidecarFileURLs:error:
sandboxExtensionToken
initWithData:
sharedAssetsSaver
objectID
defaultFormatChooser
fullScreenFormatForCurrentDevice
uiipc_useTelephonyUI
formatID
requestSynchronousImageForAssetOID:withFormat:allowPlaceholder:wantURLOnly:networkAccessAllowed:trackCPLDownload:outImageDataInfo:outCPLDownloadContext:
CGRectValue
fileExtension
preferredFileExtensionForType:
compare:options:
uiipc_filterForMediaTypes:
systemPhotoLibrary
assetURLForPhoto:extension:
numberWithInt:
_properties
_newOriginalImageForPickerFromCachedData
_imageOrientation
changeRequestForAsset:
incrementShareCount
performChanges:completionHandler:
pathManager
libraryURL
pl_PHAssetFromPhotoLibrary:
uiipc_imagePickerOptions
_imagePickerDidCompleteWithInfo:
pl_managedAsset
fileURLWithPath:isDirectory:
_imagePickerDidCompleteWithInfoArray:
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
integerValue
addEntriesFromDictionary:
_loadingIndicatorView
_loadingContainerView
_loadingErrorButton
_indicatorIsVisible
_showingError
_showingLoading
_imageRect
_toolbarVisible
_lastViewPhaseChangeDate
fadeOutSoonIfNeededAndRemoveFromSuperview:
showLoadingIndicatorWhenReady
showErrorIndicator
showLoadingIndicator
updateCloudDownloadProgress:
setImageRect:
setToolbarVisible:
setRetryDelegate:
_retryDownload
defaultHeightForBarSize:
statusBarOrientation
convertPoint:fromView:
animateWithDuration:delay:options:animations:completion:
setImageEdgeInsets:
timeIntervalSinceReferenceDate
_loadingLabel
boldSystemFontOfSize:
startAnimating
initWithActivityIndicatorStyle:
setClipsToBounds:
_photoTileController
initWithFrame:photoTileController:
willMoveToSuperview:
clearBackReference
canBecomeFirstResponder
_viewWillMoveToSuperView:
T@"UIView",&,N,S_setCustomCenterOverlay:,V__customCenterOverlay
T@"PHAsset",R,N
Ti,N,V_inflightFullSizeImageRequestID
T@"UIImage",&,N
T@"UIImage",&,N,V_unscaledImage
TB,N,V_centerContentVertically
T{UIEdgeInsets=dddd},N,V_overlayInsets
TB,N,V_forceNativeScreenScale
TB,N,V_force1XCroppedImage
T@"NSNumber",&,N,V_maxZoomScaleOverride
TB,N,V_wantsCompactLayout
TB,N,V_reviewing
TB,N,V_picked
TB,N,V_shouldHideProgressIndicator
TB,N,V_shouldSupressViewWillTransitionToSize
_image
_pendingImage
_unscaledImage
_modelPhoto
_scrollView
_gradientView
_reviewCheckmarkImageView
_currentTileDownloadFinished
_singleTapGestureRecognizer
_doubleTapGestureRecognizer
_tileDelegate
_imageSize
_tileFrame
_zoomToFillInsteadOfToFit
_useLessThanMinZoomForZoomedOutTest
_allowZoomToFill
_orientationDelegate
_cropRectZoomScale
_cropOverlayRect
_doubleTapZoomScale
_minZoomScale
_zoomToFillScale
_clientIsTemporarilyWallpaper
_userDidAdjustWallpaper
_wallpaperPortraitZoomScale
_wallpaperLandscapeZoomScale
_zoomScaleBeforeZooming
_cropRectBeforeDragging
_force1XCroppedImage
_forceNativeScreenScale
_centerContentVertically
_didEndZoomingBlock
_dispatchTimer
_dispatchStartTime
_dispatchTimeElapsed
_hasNotedZoom
_imageIsThumbnail
_isTVOut
_zooming
_autoZooming
_zoomGesturesEnabled
_userDidZoom
_ignoreZoomChange
_tileParentIsPageController
_lockedUnderCropOverlay
_viewDidAppear
_viewWillAppear
_didRequestFullSizeImage
_useZoomScaleForCropRect
_avalancheBadgeShouldBeHidden
_badgeShouldBeVisible
_containerView
__cachingImageManager
_fullSizeImageRequestID
_customCenterOverlayConstraints
_shouldUpdateBadgeViewOptimalLayout
_badgeViewOptimalLayoutLowestTop
_isLoadingFullSizeImage
_wantsCompactLayout
_reviewing
_picked
_shouldHideProgressIndicator
_shouldSupressViewWillTransitionToSize
_inflightFullSizeImageRequestID
_maxZoomScaleOverride
__customCenterOverlay
_overlayInsets
retryDownload
gestureRecognizerShouldBegin:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldReceivePress:
gestureRecognizer:shouldReceiveEvent:
scrollViewDidScroll:
scrollViewDidZoom:
scrollViewWillBeginDragging:
scrollViewWillEndDragging:withVelocity:targetContentOffset:
scrollViewDidEndDragging:willDecelerate:
scrollViewWillBeginDecelerating:
scrollViewDidEndDecelerating:
scrollViewDidEndScrollingAnimation:
viewForZoomingInScrollView:
scrollViewWillBeginZooming:withView:
scrollViewDidEndZooming:withView:atScale:
scrollViewShouldScrollToTop:
scrollViewDidScrollToTop:
scrollViewDidChangeAdjustedContentInset:
setOverlayInsets:
initWithModelPhoto:image:frame:isThumbnail:imageOrientation:allowZoomToFill:mode:
initForPageController
initWithModelPhoto:thumbnailImage:size:
cachingImageManager
_teardownDispatchTimer
_canShowWhileLocked
tileIsOnScreen
_setPhoto:
_updateVideoViewForModelPhoto
thumbnailImage
setThumbnailImage:
tileFrame
setTileFrame:
setZoomScale:
setCropOverlayRect:forCropRect:
setZoomingGesturesEnabled:
forceZoomingGesturesEnabled
expandableImageView
_newCGImageBackedUIImageFromImage:
scrollView
updateCenterOverlay
_setCustomCenterOverlay:
hideContentView
showContentView
tileDelegate
setTileDelegate:
isTVOut
setTVOut:
userDidAdjustWallpaper
_clientIsWallpaper
setClientIsWallpaper:
allowsEditing
gesturesEnabled
setGesturesEnabled:
_repositionBadgeView
photoShouldHaveHDRBadge
photoShouldHaveAvalancheBadge
setAvalancheBadgesHidden:
_setupBadgeView
_showBadgeViewIfAppropriate
setBadgeVisible:
setBadgeVisible:animated:
_configureViews
installVideoOverlay:
_installSubview:
_updateSubviewOrdering
_updatePlaceholderViewAnimated:
_centerImageInScrollView
_adjustScrollViewContentOffsetForInsets
_updateContentInset
_updatePlaceholderImageRect
_updatePlaceholderVisibility
setShouldHideProgressIndicator:
_updateModelPhotoWithImage:
_setImage:isThumbnail:preserveFrame:
refreshTileWithFullScreenImage:modelPhoto:
didLoadImage
_removePlaceholderView
showErrorPlaceholderView
setFullSizeImage:
hasFullSizeImage
cancelFullSizeImageRequest
loadView
viewDidDisappear:
updateForVisibleOverlays:
noteParentViewControllerDidDisappear
scrollView:contentSizeForZoomScale:withProposedSize:
shouldAutorotateToInterfaceOrientation:
viewWillTransitionToSize:withTransitionCoordinator:
_performRotationUpdatesWithDuration:size:
_resetZoomCommon
viewDidLayoutSubviews
viewSafeAreaInsetsDidChange
didMoveToParentViewController:
updateViewConstraints
resetZoom
viewWillAppear:
viewDidAppear:
applicationWillResignActive:
applicationDidBecomeActive:
ensureFullSizeImageLoaded
_handleSingleTap:
_requestFullSizeImage
_handleFullSizeImageRequestResult:dataUTI:orientation:
_handleDoubleTap:
newImageWithCropRect:minimalCropDimension:croppedImageData:fullScreenImageData:imageCropRect:intersectCropWithFullRect:
_getFullScreenImageData:forImage:fullSize:imageView:screenScaleTransform:
_newImageForAsset:targetSize:cropRect:fullSize:
dictionaryWithCroppedImageForRect:minimalCropDimension:withOptions:
zoomToScale:animated:completionBlock:
_setDidEndZoomingBlock:
_performDidEndZoomBlock
minRotatedScale
_calculateZoomScale:inView:
minZoomScale
zoomToFillScale
zoomToFitScale
defaultZoomScale
currentToMinZoomRatio
currentToDefaultZoomRatio
isZoomedOut
setOrientationDelegate:
_setDefaultZoomScale
reloadZoomScale
updateZoomScales
setAllowsZoomToFill:
imageOrientation
updateAfterCollapse
_adjustZoomForEnteringMode:
setLockedUnderCropOverlay:
_setupReviewCheckmark
setReviewing:
setReviewing:animated:
setPicked:
_updateReviewCheckmark
centerContentVertically
setCenterContentVertically:
unscaledImage
setUnscaledImage:
forceNativeScreenScale
setForceNativeScreenScale:
force1XCroppedImage
setForce1XCroppedImage:
inflightFullSizeImageRequestID
setInflightFullSizeImageRequestID:
overlayInsets
maxZoomScaleOverride
setMaxZoomScaleOverride:
wantsCompactLayout
setWantsCompactLayout:
reviewing
picked
shouldHideProgressIndicator
shouldSupressViewWillTransitionToSize
setShouldSupressViewWillTransitionToSize:
_customCenterOverlay
setHighlightedImage:
setZoomScale:animated:
setMinimumZoomScale:
setMaximumZoomScale:
cloudPlaceholderKind
isCloudSharedAsset
doubleValue
viewIfLoaded
statusBarFrame
statusBarStyle
keyWindow
isViewLoaded
requestImageForAsset:targetSize:contentMode:options:resultHandler:
defaultManager
setResizeMode:
setNormalizedCropRect:
setSynchronous:
zoomToRect:animated:
locationInView:
isUserInteractionEnabled
complete
pixelHeight
pixelWidth
conformsToType:
typeWithIdentifier:
requestImageDataAndOrientationForAsset:options:resultHandler:
setNetworkAccessAllowed:
setLoadingMode:
setDeliveryMode:
uuid
addConstraints:
transitionDuration
animateAlongsideTransition:completion:
targetTransform
visibleBounds
isDragging
setView:
cancelImageRequest:
isTimelapsePlaceholder
setContentInset:
contentSize
contentInset
isCloudPlaceholder
shouldShowPlaceholderForAsset:
addGestureRecognizer:
setContentInsetAdjustmentBehavior:
setBouncesZoom:
setShowsVerticalScrollIndicator:
setShowsHorizontalScrollIndicator:
setPreservesCenterDuringRotation:
setAlwaysBounceHorizontal:
setAlwaysBounceVertical:
setContentSize:
isAudio
isStreamedVideo
representsBurst
isMediaSubtype:
mediaType
setNeedsUpdateConstraints
removeGestureRecognizer:
removeFailureRequirement:
requireGestureRecognizerToFail:
windows
removeAllGestureRecognizers
removeTarget:action:
setNumberOfTapsRequired:
initWithTarget:action:
tileSize
tvOutTileSize
newPhotoTileViewControllerWithFrame:imageRef:imageOrientation:allowZoomToFill:mode:
newPhotoTileViewControllerWithFrame:image:allowZoomToFill:mode:
newPhotoTileViewControllerWithFrame:modelPhoto:mode:
_shouldForwardViewWillTransitionToSize
synchronousImageForAsset:targetSize:contentMode:options:
screens
orientedHeight
orientedWidth
localAvailability
masterThumbnailResource
TB,R,N,V_isReachable
TB,R,N,V_isOnWifi
T@"NSString",&,N,V_currentTestName
T@"NSDictionary",&,N,V_currentTestOptions
T@"NSSet",C,N,V_notificationSuppressionContexts
window
T@"UIWindow",&,N
_receivingRemoteControlEvents
_observeForRechabilityChanges
_isReachable
_isOnWifi
_photoStreamActivityToken
_sharedPhotoStreamActivityToken
_sharedPhotoStreamInvitationFailureToken
_currentTestName
_currentTestOptions
_notificationSuppressionContexts
applicationDidFinishLaunching:
application:willFinishLaunchingWithOptions:
application:didFinishLaunchingWithOptions:
application:handleOpenURL:
application:openURL:sourceApplication:annotation:
application:openURL:options:
applicationDidReceiveMemoryWarning:
applicationWillTerminate:
applicationSignificantTimeChange:
application:willChangeStatusBarOrientation:duration:
application:didChangeStatusBarOrientation:
application:willChangeStatusBarFrame:
application:didChangeStatusBarFrame:
application:didRegisterUserNotificationSettings:
application:didRegisterForRemoteNotificationsWithDeviceToken:
application:didFailToRegisterForRemoteNotificationsWithError:
application:didReceiveRemoteNotification:
application:didReceiveLocalNotification:
application:handleActionWithIdentifier:forLocalNotification:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:completionHandler:
application:handleActionWithIdentifier:forLocalNotification:withResponseInfo:completionHandler:
application:didReceiveRemoteNotification:fetchCompletionHandler:
application:performFetchWithCompletionHandler:
application:performActionForShortcutItem:completionHandler:
application:handleEventsForBackgroundURLSession:completionHandler:
application:handleWatchKitExtensionRequest:reply:
applicationShouldRequestHealthAuthorization:
application:handlerForIntent:
application:handleIntent:completionHandler:
applicationDidEnterBackground:
applicationWillEnterForeground:
applicationProtectedDataWillBecomeUnavailable:
applicationProtectedDataDidBecomeAvailable:
application:supportedInterfaceOrientationsForWindow:
application:shouldAllowExtensionPointIdentifier:
application:viewControllerWithRestorationIdentifierPath:coder:
application:shouldSaveSecureApplicationState:
application:shouldRestoreSecureApplicationState:
application:willEncodeRestorableStateWithCoder:
application:didDecodeRestorableStateWithCoder:
application:shouldSaveApplicationState:
application:shouldRestoreApplicationState:
application:willContinueUserActivityWithType:
application:continueUserActivity:restorationHandler:
application:didFailToContinueUserActivityWithType:error:
application:didUpdateUserActivity:
application:userDidAcceptCloudKitShareWithMetadata:
application:configurationForConnectingSceneSession:options:
application:didDiscardSceneSessions:
applicationShouldAutomaticallyLocalizeKeyCommands:
setWindow:
useCompatibleSuspensionAnimation
photosPreferencesChanged
_applicationWillEnterForeground:
prepareForApplicationWillEnterForeground
_applicationDidEnterBackground:
prepareForApplicationDidEnterBackground
_applicationDidBecomeActive:
prepareForApplicationDidBecomeActive
_updateSuspensionSettings
setReceivingRemoteControlEvents:
_networkReachabilityDidChange:
_startObservingReachabilityChanges
_stopObservingReachabilityChanges
enableNetworkObservation
disableNetworkObservation
_registerForPhotoStreamActivityNotifications
_unregisterForPhotoStreamActivityNotifications
handleImportCompleteAlertResponse:flags:
isReachable
isOnWifi
currentTestName
setCurrentTestName:
currentTestOptions
setCurrentTestOptions:
notificationSuppressionContexts
setNotificationSuppressionContexts:
unregisterIdleStateChangeObserverWithToken:
_displayAndRemovePhoneInvitationFailures
registerIdleStateChangeObserverWithToken:handler:
removeObserver:forHostname:
sharedNetworkObserver
addObserver:selector:forHostname:
postNotificationName:object:userInfo:
dictionaryWithObjectsAndKeys:
initWithBool:
updateSuspendedSettings:
shouldMakeUIForDefaultPNG
userDidLeavePhotosApplication
applicationIsInForeground:photoLibraryURL:
systemLibraryURL
setStatusBarShowsProgress:
clientApplicationWillEnterForeground
_setRotationDisabledDuringTouch:
registerDefaults:
sharedStreamsExplictlyDisabledForPhotoLibraryURL:
handlePossibleCoreDataError:
px_deprecated_appPhotoLibrary
_shouldPlayMusic
_summarizeMomentSections
_transition
_musicCollection
reloadPhotoDefaultValues
_reloadPhotoDefaultValuesAndNotify:
summarizeMomentSections
transitionForAnimationMovingForward:
transition
setTransition:
shouldPlayMusic
setShouldPlayMusic:
setMusicCollection:
musicCollection
randomTransition
numberWithBool:
valueForKeyPath:
valueForKey:
initWithContentsOfFile:
pathForResource:ofType:
mainBundle
_activityIndicatorView
_label
_checkmarkView
_isShowing
showInView:
hide
done
defaultSizeForStyle:
initWithImage:
_flatImageWithColor:
stopAnimating
setNeedsDisplay
contentView
_setBackdropMaskViewFlags:
resizableImageWithCapInsets:
bezierPathWithRoundedRect:byRoundingCorners:cornerRadii:
connectedScenes
activationState
isKeyWindow
pl_firstKeyWindow
T@"UIWindow",R,N
Tq,N,V_backgroundType
T@"UIView",&,N,V_backgroundView
T@"UIView",&,N,V_backgroundTintedView
T@"_UIBackdropView",&,N,V_backgroundBlurredView
TB,N,V_showsCancelButton
T@?,C,N,V_cancelationHandler
_labelView
_progressView
_topDivider
_didLayout
_didSetPermanantTextOnLabelView
_progressFormatter
_backgroundType
_backgroundView
_backgroundTintedView
_backgroundBlurredView
_showsCancelButton
_cancelationHandler
setBackgroundType:
_syncToBackgroundType
_installBackgroundView
_installBackgroundBlurredView
_removeBackgroundBlurredView
_installBackgroundTintedView
_removeBackgroundTintedView
updateUIForPublishingAgent:
setLabelText:
setPercentComplete:
percentComplete
_cancel:
setShowsCancelButton:
backgroundType
backgroundView
setBackgroundView:
backgroundTintedView
setBackgroundTintedView:
backgroundBlurredView
setBackgroundBlurredView:
showsCancelButton
cancelationHandler
setCancelationHandler:
setProgress:animated:
setNumberStyle:
setGeneratesDecimalNumbers:
setLocale:
currentLocale
initWithProgressViewStyle:
isHidden
T@"<PLPublishingAgentDelegate>",N,V_delegate
TB,N,V_ownerIsCamera
Tq,N,V_approximateHDUploadSize
Tq,N,V_approximateSDUploadSize
TB,N,V_mediaIsHDVideo
TB,N,V_enableHDUpload
TB,N,V_needsTrimming
Ti,N,V_remakerMode
Ti,N,V_selectedOption
Tf,N,V_progressMultiplier
TB,N,V_allowsHDOver3GUpload
TB,N,V_shouldCancelPublish
_userInfo
_mediaPath
_mediaData
_mimeType
_deleteAfterPublishing
_changeRate
_currentValue
_estimatedTimeRemaining
_maxValue
_normalizedCurrentValue
_normalizedMaxValue
_percentComplete
_remakingPercentComplete
_progressMultiplier
_snapshotTimes
_snapshotValues
_ownerIsCamera
_needsRemaking
_startTime
_endTime
_approximateHDUploadSize
_approximateSDUploadSize
_mediaIsHDVideo
_enableHDUpload
_needsTrimming
_allowsHDOver3GUpload
_selectedOption
_remaker
_remakerMode
_completionSelector
_remakingWasCancelled
_remaking
_publishing
_shouldCancelPublish
dataArrayInputStreamBytesWereRead:
allowsCellularAccessForRequests
_startNetworkObservation
_stopNetworkObservation
initWithMedia:
_setUpPublishingParams
mediaPath
setMediaPath:
setDeleteMediaFileAfterPublishing:
deleteMediaFileAfterPublishing
mediaData
setMediaData:
userInfo
setUserInfo:
isPublishing
setPublishing:
setRemakerMode:
setTrimStartTime:andEndTime:
_setApproximateVideoUploadSizes
resignPublishingSheetResponders
navigationController
cancelButtonClicked
doneButtonClicked
_agentIsReadyToPublish:
publish
serviceName
presentModalSheetInViewController:
willDismiss
mediaURL
mediaTitle
isVideoMedia
tellAFriendURL
tellAFriendSubject
tellAFriendBody
allowsTellingFriend
allowsViewingOnHost
maximumVideoDuration
setTotalBytesWritten:totalBytes:
snapshot
_updateStatisticsFromSnapshots
estimatedTimeRemaining
remakingPercentComplete
cancelRemaking
isRemaking
_cancelRemaking:
_transcodeVideo:
videoRemakerDidBeginRemaking:
_remakerDidFinish:
videoRemakerDidEndRemaking:temporaryPath:
videoRemaker:progressDidChange:
progressViewMessageDuringRemake
_remakerModeForSelectedOption
showAlertWithError:
ownerIsCamera
setOwnerIsCamera:
approximateHDUploadSize
setApproximateHDUploadSize:
approximateSDUploadSize
setApproximateSDUploadSize:
mediaIsHDVideo
setMediaIsHDVideo:
enableHDUpload
setEnableHDUpload:
needsTrimming
setNeedsTrimming:
remakerMode
selectedOption
setSelectedOption:
progressMultiplier
setProgressMultiplier:
allowsHDOver3GUpload
setAllowsHDOver3GUpload:
shouldCancelPublish
setShouldCancelPublish:
openSensitiveURL:withOptions:
defaultWorkspace
URLWithString:
stringByAddingPercentEncodingWithAllowedCharacters:
URLFragmentAllowedCharacterSet
publishingAgentDidEndRemaking:didSucceed:
publishingAgentDidStartRemaking:
longLongValue
initWithLongLong:
initWithDouble:
removeObjectAtIndex:
dismissViewControllerAnimated:completion:
presentingViewController
presentViewController:animated:completion:
setModalPresentationStyle:
publishingAgentWillBeDisplayed:
publishingAgentDidBeginPublishing:
defaultDurationForTransition:
publishingAgentDoneButtonClicked:
publishingAgentCancelButtonClicked:
canUploadHDVideoOverCellular
publishingAgentForBundleNamed:toPublishMedia:
effectiveBoolValueForSetting:
sharedConnection
principalClass
bundleWithPath:
stringByAppendingPathComponent:
stringByResolvingSymlinksInPath
stringByAppendingString:
T@"NSString",&,N,V_title
_title
compare:
title
localizedCaseInsensitiveCompare:
_inFlightMigrationCount
checkForUnmigratediPhotoContentWithCompletion:
migrateEachPreMigratediPhotoLibrary:completionHandler:
migrationWasInterrupted
_incrementInFlightMigrationCount
_decrementInFlightMigrationCount
_isMigrating
_inFlightMigrationMarkerFilePath
_validateUuid:
_displayableUuidWithUuid:
_firstFilePathWithAnyExtensionAtPath:extension:
_createParentDirectoryIfNecessaryWithPath:
_deleteiPhotoSubDirectoryWithDirectoryPath:subDirectoryName:description:
_preMigratediPhotoDir
_migratediPhotoDir
_iPhotoMediaDirUuidListSortedByDateCreatedWithDir:
_iPhotoToPhotosUuidMapTable
_migrateiPhotoLibraryWorkerWithProgressHandler:iPhotoLibraryDir:
fireMigrationOfiPhotoLibraryWithProgressHandler:
_migrateiPhotoLibraryWithProgressHandler:
moveiPhotoLibraryMediaWithReply:
migrationClient
pathToiPhotoLibraryMediaDir
systemLibraryPathManager
contentsOfDirectoryAtPath:error:
addAssets:
changeRequestForAssetCollection:
placeholderForCreatedAssetCollection
creationRequestForAssetCollectionWithTitle:
setCreationDate:
setFavorite:
placeholderForCreatedAsset
setLocation:
initWithLatitude:longitude:
creationRequestForAssetFromImageAtFileURL:
creationRequestForAssetFromVideoAtFileURL:
fetchAssetCollectionsWithLocalIdentifiers:options:
writeToFile:options:error:
dataWithPropertyList:format:options:error:
creationDate
setVersion:
performChangesAndWait:error:
canPerformEditOperation:
fetchAssetsWithLocalIdentifiers:options:
fetchOptionsWithInclusiveDefaultsForPhotoLibrary:
localIdentifierWithUUID:
fileExistsAtPath:isDirectory:
stringByAppendingPathExtension:
dateWithTimeIntervalSinceReferenceDate:
unsignedIntegerValue
dictionaryWithContentsOfFile:
date
fetchAssetCollectionsWithType:subtype:options:
setPredicate:
predicateWithFormat:
pathExtension
stringByDeletingPathExtension
nextObject
enumeratorAtPath:
sortedArrayUsingComparator:
photoDirectoryWithType:
removeItemAtPath:error:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
stringByDeletingLastPathComponent
lastPathComponent
substringFromIndex:
substringToIndex:
initWithUUIDString:
enumerateObjectsUsingBlock:
fileExistsAtPath:
T@,&,N,V_asset
TB,N,V_isVideo
T@"NSString",&,N,V_pathForVideoFile
T@"NSURL",&,N,V_assetURL
TB,N,V_isHDVideo
Td,N,V_duration
_isVideo
_isHDVideo
_pathForVideoFile
_assetURL
_duration
initWithAsset:
initWithManagedAsset:
initWithAVURLAsset:
asset
setAsset:
isVideo
setIsVideo:
pathForVideoFile
setPathForVideoFile:
assetURL
setAssetURL:
isHDVideo
setIsHDVideo:
setDuration:
naturalSize
tracksWithMediaType:
path
typeWithFilenameExtension:
durationForManagedAsset:applyVideoAdjustments:
assetWithURL:
isValidPublishingMedia:
T@"UIView",&,N,S_setContentView:,V__contentView
T@"CAShapeLayer",&,N,S_setSliceLayer:,V__sliceLayer
T@"CAShapeLayer",&,N,S_setCircleLayer:,V__circleLayer
T@"PLProgressArcLayer",&,N,S_setProgressArcLayer:,V__progressArcLayer
T@"CALayer",&,N,S_setIrisGlyphLayer:,V__irisGlyphLayer
Td,N,S_setContentsScale:,V__contentsScale
Tq,R,N,V_style
T@"UIColor",&,N,V_manualColor
TB,N,V_allowFake25PercentProgress
TB,N,V_skipResetOnRelayout
Td,N,V_progress
_pieCenter
_pieRadius
_progressTimer
_uiProgress
_realProgress
_increaseRate
_prevUpdateTime
_allowFake25PercentProgress
_skipResetOnRelayout
_manualColor
_progress
__contentView
__sliceLayer
__circleLayer
__progressArcLayer
__irisGlyphLayer
__contentsScale
initWithFrame:style:
_setContentsScale:
_setProgressArcLayer:
_updateSublayersContentsScale
_updateSubviews
setPieRadius:
stopProgressTimer
startProgressTimer
toRadian:
increaseUIProgress:
_updateUIProgress
setInitialIncreaseRatePerFrame:
recalculateIncreaseProgress:withTimeDiff:
setProgress:
resetProgress
traitCollectionDidChange:
setManualColor:
manualColor
allowFake25PercentProgress
setAllowFake25PercentProgress:
skipResetOnRelayout
setSkipResetOnRelayout:
progress
_setContentView:
_sliceLayer
_setSliceLayer:
_circleLayer
_setCircleLayer:
_progressArcLayer
_irisGlyphLayer
_setIrisGlyphLayer:
_contentsScale
hasDifferentColorAppearanceComparedToTraitCollection:
traitCollection
timeIntervalSinceDate:
setEndAngle:
setStartAngle:
scheduledTimerWithTimeInterval:repeats:block:
invalidate
setRadius:
setPosition:
Td,N,V_radius
Td,N,V_startAngle
Td,N,V_endAngle
Td,N,V_lineWidth
_radius
_startAngle
_endAngle
_lineWidth
drawInContext:
setLineWidth:
radius
startAngle
endAngle
lineWidth
setNeedsDisplayOnBoundsChange:
setStrokeColor:
setZPosition:
colorWithAlphaComponent:
getRed:green:blue:alpha:
labelColor
userInterfaceStyle
T@"<PLSlalomRegionEditorDelegate>",N,V_delegate
T{UIEdgeInsets=dddd},N,V_trackInsets
Td,N,V_trimHandleWidth
TQ,N,V_regionEditorStyle
Td,N,V_minValue
Td,N,V_maxValue
Td,N,V_startValue
Td,N,V_endValue
Td,N,V_zoomDelay
zoomAnimating
TB,N,GisZoomAnimating,SsetZoomAnimating:,V_zoomAnimating
_startHandleView
_endHandleView
_trackImageView
_trackSnapshotView
_draggingStart
_draggingEnd
_touchOffset
_zoomed
_trackingZoom
_touchLocationWhenTrackingZoomBegan
_forceLayout
_zoomMinValue
_zoomMaxValue
_zoomAnimating
_trimHandleWidth
_regionEditorStyle
_minValue
_startValue
_endValue
_zoomDelay
_trackInsets
intrinsicContentSize
setTrackInsets:
setMinValue:
setMaxValue:
setStartValue:
setStartValue:notify:
setEndValue:
setEndValue:notify:
setZoomMinValue:maxValue:
_isZoomed
setZoomAnimating:
setRegionEditorStyle:
startHandleFrame
endHandleFrame
_valueFromStartHandleFrame:
_valueFromEndHandleFrame:
_trackFrameNoZoom
_trackFrame
_trackScale
_handleFrameForValue:isStart:
_valueFromHandleFrame:isStart:
_isTouch:inHandleIsStart:outTouchOffset:
beginTrackingWithTouch:withEvent:
continueTrackingWithTouch:withEvent:
endTrackingWithTouch:withEvent:
cancelTrackingWithEvent:
_stopTrackingAndSendControlEvents:
_updateSlidersWithTouch:
_beginTrackingZoomWithTouch:
_cancelZoomTrackingIfNeccessaryWithTouch:
_cancelTrackingZoom
_zoomPressWasHeld
_cancelZoom
_updateTrack
_trackImageForZoom:
_tickColor
_trackColor
_handleTintColor
_drawCurveWithFlatEndsFromX:fromY:toX:toY:
_handleImage
trackInsets
trimHandleWidth
setTrimHandleWidth:
regionEditorStyle
minValue
maxValue
startValue
endValue
zoomDelay
setZoomDelay:
isZoomAnimating
imageWithRenderingMode:
setStroke
setFill
translationInView:
minimumNumberOfTouches
direction
numberOfTouchesRequired
sendActionsForControlEvents:
isEnabled
setTintColor:
_setupTargetScreen:
setCurrentMode:
availableModes
preferredMode
setOverscanCompensation:
setScreen:
T{CGSize=dd},R,N,V_jpegImageSize
_jpegImageSize
setVisibleRectangle:zoomScale:
initWithJPEGData:placeholderImage:screenSize:
flushCache
jpegImageSize
T@,N,V_delegate
Ti,N,V_mode
_saveOptions
setImageSavingOptions:
saveOptions
_contentAutoresizingMask
_tileAutoresizingMask
initWithPhoto:
cropOverlayWasOKed:
cropOverlay:didFinishSaving:
cropOverlayWasCancelled:
imageFormat
imageTile
cropOverlayMode
setMode:
editImageViewControllerDidCancel:
editImageViewController:didEditImageWithOptions:
TB,N,V_allowImageRequests
TB,N,V_allowCaching
_allowImageRequests
_allowCaching
setDefaultValues
allowImageRequests
setAllowImageRequests:
allowCaching
setAllowCaching:
rowWithTitle:valueKeyPath:
TB,N,V_disableViewInPopoverRule
_disableViewInPopoverRule
disableViewInPopoverRule
setDisableViewInPopoverRule:
viewControllerForView:
TB,N,V_parentInPopoverException
_options
_imagePicker
_navItem
_viewClass
_canCreateMetadata
_parentInPopoverException
navigationController:willShowViewController:animated:
navigationController:didShowViewController:animated:
navigationControllerSupportedInterfaceOrientations:
navigationControllerPreferredInterfaceOrientationForPresentation:
navigationController:interactionControllerForAnimationController:
navigationController:animationControllerForOperation:fromViewController:toViewController:
imagePickerController:didFinishPickingImage:editingInfo:
imagePickerController:didFinishPickingMediaWithInfo:
imagePickerControllerDidCancel:
_displaysFullScreen
_editingForThirdParty
_setupNavigationItemAndTrimTitle:
initWithPhoto:trimTitle:
initWithProperties:
initWithVideoURL:trimTitle:
navigationItem
setImagePickerOptions:
_trimMessage
setViewClass:
viewDidLoad
didChooseVideoAtURL:options:
_cancelTrim:
previewFrame
_trimVideo:
videoViewScrubberYOrigin:forOrientation:
videoViewCanCreateMetadata:
videoViewPlaybackDidFail:
parentInPopoverException
setParentInPopoverException:
errorWithDomain:code:userInfo:
editVideoViewController:didFailWithError:
editVideoViewControllerDidCancel:
dictionaryWithObject:forKey:
editVideoViewController:didTrimVideoWithOptions:
dictionaryWithDictionary:
toolbar
setScrollEdgeAppearance:
standardAppearance
navigationBar
initWithTitle:
setRightBarButtonItem:
setLeftBarButtonItem:
setExtendedLayoutIncludesOpaqueBars:
T@"NSString",R,N
_imageRef
_cropOverlay
_imageTile
_videoURL
_previousStatusBarStyle
_newStatusBarStyle
_allowEditing
_statusBarWasHidden
_isDisappearing
cropOverlayWasToggled:
cropOverlayPlay:
cropOverlayPause:
cropOverlayFileSizeMenuActions:
setImageAsHomeScreenClicked:
setImageAsLockScreenClicked:
setImageAsHomeScreenAndLockScreenClicked:
motionToggledManually:
photoTileViewControllerAllowsEditing:
isPhotoTileParentPageControllerAnimating:
photoTileViewControllerCanShowCenterOverlay:
photoTileViewControllerCustomCenterOverlay:
photoTileViewControllerTopLayoutGuide:
photoTileViewController:willAppear:
photoTileViewController:didAppear:
photoTileViewController:didDisappear:
photoTileViewControllerRequestsFullScreenImage:
photoTileViewControllerRequestsFullSizeImage:
photoTileViewControllerCancelImageRequests:
photoTileViewControllerSingleTap:
photoTileViewControllerDoubleTap:
photoTileViewControllerWillBeginGesture:
photoTileViewControllerDidEndGesture:
videoViewDidCreateAttachments:
videoViewScrubberWidth:
videoViewCanBeginPlayback:
videoViewIsReadyToBeginPlayback:
videoViewDidBeginPlayback:
videoViewDidPausePlayback:
videoViewDidEndPlayback:didFinish:
videoViewDidBeginScrubbing:
videoViewDidEndScrubbing:
videoViewDidBeginRemaking:
videoViewDidEndRemaking:didSucceed:
videoView:remakingProgressDidChange:
videoViewWillBeginEditing:
videoViewDidBeginEditing:
videoViewDidCancelEditing:
videoView:displayPlayOverlay:
videoViewShouldRespondToPlayOverlayTap:
videoViewRequestsPickedAirplayRoute:
initWithImage:cropRect:
initWithUIImage:cropRect:
initWithImageData:cropRect:
initWithVideoURL:
cropOverlay
setCropOverlayDone
_viewFrame
localizedUseButtonTitle
localizedTitle
clientIsWallpaper
wantsAutoloopUI
wantsLegacyImageUI
setupNavigationItem
viewWillLayoutSubviews
wantsStatusBarVisible
desiredStatusBarAnimation
prefersStatusBarHidden
preferredStatusBarUpdateAnimation
isDisplayedInPhotoPicker
_imagePickerStatusBarStyle
viewWillDisappear:
attachScrubberPalette
_removedAsTopViewController
setAllowsEditing:
_editabilityChanged:
_updateGestureSettings
_enableCropOverlayIfNecessary
_enableCropOverlay
_handleVideoSelected
beginDisplayingProgress
handleAutoloopSelected
videoView:scrubberWasCreated:slalomRegionEditor:
videoViewDidPausePlayback:didFinish:
photoTileViewControllerIsDisplayingLandscape:
handleMediaSelectionUsingTile:managedAsset:args:includeEditing:
handleVideoSelectionWithURL:args:
doNotTranscode
videoQuality
exportPreset
viewImageBeforeSelecting
videoMaximumDuration
disableVideoTrimMessage
chooseButtonTitle
cancelButtonTitle
customBackgroundColor
imagePickerAllowsEditing
imagePickerSavingOptions
layoutFrame
safeAreaLayoutGuide
mainFileURL
isFileURL
_imagePickerDidCancel
popViewControllerAnimated:
indexOfObjectIdenticalTo:
viewControllers
setScrollEnabled:
attachPalette:isPinned:
paletteForEdge:size:
existingPaletteForEdge:
isNavigationBarHidden
setNeedsStatusBarAppearanceUpdate
setBarStyle:
setNavigationBarHidden:
addChildViewController:
setEdgesForExtendedLayout:
photoFromAssetURL:photoLibrary:
setPreferredContentSize:
initWithTitle:style:target:action:
_target
_action
setTarget:action:
initWithStyle:
_handleTap:
_normalButtonImage
_highlightedButtonImage
_createOverlayImageWithBackgroundWhite:backgroundAlpha:glyphAlpha:
drawAtPoint:blendMode:alpha:
setDeliversTouchesForGesturesToSuperview:
_button
_overlayPlayBackground
_playButtonActivate:
_playButtonDeactivate:
_playButtonTapped:
updateMaskViewsForView:
pl_videoOverlayButtonWithStyle:
pl_videoOverlayButtonSize
T@"PFVideoAVObjectBuilder",R,&,N,V__videoAVObjectBuilder
T@"NSObject<PLVideoRemakerDelegate>",W,N,V_delegate
T@?,C,N,V_progressHandler
TB,N,V_shouldExportToPhotoDataDirectory
T@"NSString",C,N,V_exportPresetOverride
Td,N,V_trimStartTime
Td,N,V_trimEndTime
T@"NSString",C,N,V_customAccessibilityLabel
_trimmedPath
_trimStartTime
_trimEndTime
_exportSession
_shouldExportToPhotoDataDirectory
_progressHandler
_exportPresetOverride
_customAccessibilityLabel
__videoAVObjectBuilder
initWithPublishingMedia:
initWithAVAsset:
initWithManagedAsset:applyVideoAdjustments:
messageForRemakingProgress
progressView
_resetProgressTimer
_removeProgressTimer
_metadata
remake
_fileFormatForURL:
_didEndRemakingWithTemporaryPath:
cancel
_exportCompletedWithSuccess:
progressHandler
setProgressHandler:
shouldExportToPhotoDataDirectory
setShouldExportToPhotoDataDirectory:
exportPresetOverride
setExportPresetOverride:
trimStartTime
setTrimStartTime:
trimEndTime
setTrimEndTime:
customAccessibilityLabel
setCustomAccessibilityLabel:
_videoAVObjectBuilder
cancelExport
containsObject:
lowercaseString
exportAsynchronouslyWithCompletionHandler:
markPurgeableForFileAtURL:withUrgency:outInode:
setTimeRange:
setMetadata:
setOutputURL:
setOutputFileType:
setFileLengthLimit:
fileLengthLimitForRemakerMode:
requestExportSessionWithExportPreset:resultHandler:
tmpFileForVideoTranscodeToPhotoDataDirectory:withExtension:
addAccessibilityDescription:toAVMetadata:
metadata
videoAsset
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
requestAVAssetWithResultHandler:
videoAVObjectBuilderForManagedAsset:applyVideoAdjustments:
initWithVideoAsset:videoAdjustments:
maximumDurationForTrimMode:
approximateByteSizeForMode:duration:
getHDRemakerModeForMode:
getSDRemakerModeForMode:
estimatedOutputFileLengthForPreset:duration:properties:
maximumDurationForPreset:properties:
numberWithLongLong:
T@"AVAssetImageGenerator",&,N,V_imageGenerator
TB,N,V_inUse
_inUse
_imageGenerator
imageGenerator
setImageGenerator:
inUse
setInUse:
cancelAllCGImageGeneration
imageFrame
T@"NSString",R,&,N
TB,N,V__didInsertMoviePlayerView
TB,N,S_setDidEditSlalom:,V__didEditSlalom
T@"PFVideoAVObjectBuilder",R,N,V__videoAVObjectBuilder
TB,R,N,V__isFetchingVideo
TB,N,S_setLocalVideoUnavailable:,V__localVideoUnavailable
Tq,R,N,V__expectedNotificationsCount
T@"PFVideoAdjustments",R,N,V__adjustmentsToCommit
TB,N,S_setCanAttemptFetchingVideoDerivative:,V__canAttemptFetchingVideoDerivative
TB,N,S_setAttemptFetchingVideoDerivative:,V__attemptFetchingVideoDerivative
T@"PLProgressStack",&,N,V_trimProgressStack
TB,R,N,V__slalomRegionEditorCreatedForScrubber
T@"<PLVideoViewDelegate>",N
T@"PLPhotoTileViewController",N
T@"PLManagedAsset",R,N
T@"PLManagedAsset",&,N
TB,N,V_allowSlalomEditor
T@"UIView",R,N,V_scrubberBackgroundView
T@"UIImage",R,N
T@"PLVideoPosterFrameView",R,&,N,V_posterFrameView
editing
TB,N,GisEditing
T@"UIImageView",R,N
TB,N,V_prepareMoviePlayerForScrubberAutomatically
TB,N,V_shouldPlayVideoWhenViewAppears
Td,N,V_scrubberWidth
_videoCameraImage
_pathToOriginalVideo
_posterFrameView
_videoOverlayBackgroundView
_trimMessageView
_posterFrameImage
_snapshotImage
_scrubberWidth
_scrubberBackgroundView
_scrubberTitleView
_scrubberUpdateTimer
_thumbnailOptionsDict
_thumbnailSize
_bakedLandscapeThumbnails
_bakedPortraitThumbnails
_remakerStartTime
_remakerEndTime
_videoPathAfterTrim
_trimProgressTimer
_trimmedVideoClip
_trimProgressStack
_moviePlayer
_maximumTrimLength
_lastScrubbedValue
_lastActualValue
_cachedCurrentPlaybackTime
_imageGenerators
_thumbnailReqlock
_thumbnailReqQueue
_airplayExportSession
_isAirPlay
_showsPlayButton
_showsScrubber
_canEdit
_loadMediaImmediately
_scrubberIsSubview
_wasPlayingBeforeScrub
_playFromBeginning
_needsReloadScrubberThumbnails
_playing
_editing
_disableEditAfterTrim
_scrubbing
_scrubbingToRight
_deleteOriginalFile
_passthroughTrimming
_preparingMoviePlayer
_preparedMoviePlayer
_isMoviePlayerActive
_moviePlayerIsReady
_moviePlayerIsReadyForDisplay
_moviePlayerDidBuffer
_showingOverlay
_showingScrubber
_showScrubberWhenMovieIsReady
_playbackDidBegin
_loadScrubberThumbnails
_videoIsLandscape
_createPreviewPosterFrame
_isTrimming
_wasTrimmedInPlace
_remakingFailed
_summaryThumbnailRequestTimestamps
_detailThumbnailRequestTimestamps
_scrubber
_slalomRegionEditor
_cachedThumbnails
_landscapeSummaryThumbnailTimestamps
_portraitSummaryThumbnailTimestamps
_spinner
_shadowSpinner
_videoOverlayPlayButton
_useLandscapeCache
_videoStreamingStartTime
_allowSlalomEditor
_prepareMoviePlayerForScrubberAutomatically
_shouldPlayVideoWhenViewAppears
__didInsertMoviePlayerView
__didEditSlalom
__isFetchingVideo
__localVideoUnavailable
__canAttemptFetchingVideoDerivative
__attemptFetchingVideoDerivative
__slalomRegionEditorCreatedForScrubber
__expectedNotificationsCount
__adjustmentsToCommit
slalomRegionEditorDidBeginEditing:withStartHandle:
slalomRegionEditorDidEndEditing:
slalomRegionEditorStartValueChanged:
slalomRegionEditorEndValueChanged:
slalomRegionEditorRequestForceZoom:
slalomRegionEditorRequestForceUnzoom:
moviePlayerControllerDidBecomeActiveController:
moviePlayerControllerWillResignAsActiveController:
moviePlayerExitRequest:exitReason:
moviePlayerReadyToPlay:
moviePlayerReadyToDisplay:
moviePlayerBufferingStateDidChange:
moviePlayerPlaybackStateDidChange:fromPlaybackState:
moviePlayerPlaybackRateDidChange:
moviePlayerPlaybackDidEnd:
moviePlayerDurationAvailable:
moviePlayerUpdatedDestinationPlaceholder:
moviePlayerWasSuspendedDuringPlayback:
moviePlayerEncounteredAuthenticationError:
moviePlayerShouldNotifyOnPreparationError:
moviePlayerControllerShouldAllowExternalPlayback:
moviePlayerDidChangeExternalPlaybackType:
moviePlayerRequestsPickedAirplayRoute:
moviePlayerHeadsetPlayPausePressed:
moviePlayerHeadsetNextTrackPressed:
moviePlayerHeadsetPreviousTrackPressed:
movieScrubber:requestThumbnailImageForTimestamp:isSummaryThumbnail:
movieScrubberDuration:
movieScrubber:evenlySpacedTimestamps:startingAt:endingAt:
movieScrubberThumbnailAspectRatio:
movieScrubber:requestThumbnailImageForTimestamp:
movieScrubber:valueDidChange:
movieScrubber:editingStartValueDidChange:
movieScrubber:editingEndValueDidChange:
movieScrubberDidBeginScrubbing:withHandle:
movieScrubberDidEndScrubbing:withHandle:
movieScrubber:widthDelta:originXDelta:
movieScrubberWillBeginRequestingThumbnails:
movieScrubberDidFinishRequestingThumbnails:
movieScrubberWillBeginEditing:
movieScrubberDidBeginEditing:
movieScrubberDidCancelEditing:
movieScrubberEditingAnimationFinished:
movieScrubber:willZoomToMinimumValue:maximumValue:
movieScrubberDidBeginAnimatingZoom:
movieScrubberDidEndAnimatingZoom:
initWithFrame:videoCameraImage:orientation:
_initWithFrame:videoCameraImage:orientation:
_setupMoviePlayerIfNecessary
_insertMoviePlayerViewIfNecessary
_tearDownMoviePlayer
touchesEnded:withEvent:
_updateScrubberFrame
scrubberWidth
_scrubberBackgroundHeight
_createScrubberIfNeeded
_removeScrubber
_shouldShowSlalomEditor
_canAccessVideo
videoScrubber
slalomRegionEditor
videoOverlayPlayButton
_showVideoOverlay
_videoOverlayFadeOutDidFinish
_hideVideoOverlay:
removeVideoOverlay
_hideTrimMessageView:
updateScaleMode
_updateScaleModeForSize:
_setNeedsReloadScrubberThumbnails:
_reloadScrubberThumbnailsIfNeeded
_requestPreviewPosterFrameForVideoSize:
_savePreviewPosterFrameImage:
_prepareAndResumePlayback
_fetchNonlocalVideo
_fetchLocalContentEditingInput
_prepareMoviePlayerIfNeeded
_canHandleAdjustmentData:
_updateVideoAVObjectBuilderFromContentEditingInput:
_optionsForAVURLAsset
_assetForVideoPath:
_assetForVideoURL:
_configurePlayerForStreamedVideoIfNecessary
_updateScrubberForSlowMotion
_setMoviePlayerActive:
_playerIsAirplay
movieScrubber:timestampsStartingAt:endingAt:maxCount:
_saveCachedThumbnailsIfNecessary
_pathForOriginalFile
_pathForVideoPreviewFile
_pathForPrebakedLandscapeScrubberThumbnails
_pathForPrebakedPortraitScrubberThumbnails
_mediaIsPlayable
_mediaIsVideo
_mediaIsCloudSharedStreamedVideo
_shouldStreamCloudPhotoLibraryVideo
_shouldStreamVideo
_canPlayCloudSharedStreamedVideoWithLocalVideo
_didSetPhotoData
_loadThumbnailsIntoDictionary:isLandscape:aspectRatio:
_removeScrubberUpdateTimer
_resetScrubberUpdateTimer
_didScrubToValue:withHandle:
_addThumbnailRequestForTimestamp:isSummaryThumbnail:
_serviceImageGenerationRequests
_configureImageGenerator:thumbnailSize:forSummaryThumbnails:
_clearImageGenerators
setMaximumTrimLength:
showTrimMessage:withBottomY:
hideTrimMessage
setEditing:animated:
setEditing:
isEditing
_updateForEditing
_updateSlalomRegionEditorState
_setPlaying:
_setPlaybackDidBegin:
_reset
_scrubberAnimationFinished
_thumbnailsWereRegenerated:error:contextInfo:
importerFinishedProcessingTrimmedVideo:
_removeTrimProgressTimer
_resetTrimProgressTimer
_informDelegateAboutProgressChange:
_updateTrimProgress
isTrimming
cancelTrim
_scrubberStartTime
startTime
endTime
videoPathAfterTrim
trimmedVideoClip
setTrimmedVideoClip:
newPreviewImageData:
_videoSnapshot
previewImageView
videoCameraImage
setImageTile:
toggleScaleMode:
handleDoubleTap
isPlaying
_didBeginPlayback
_verifyOrRestartPlayback
playButtonClicked:
playingToAirTunes
playingToVideoOut
_displayPlaySpinner
_removePlaySpinner
forceStop
_updateScrubberVisibilityWithDuration:
viewDidAppear
viewDidDisappear
commitPendingUpdatesWithCompletionHandler:
applicationWillResignActive
applicationDidEnterBackground
didMoveToSuperview
setPosterFrameImage:
posterFrameImage
_updateSnapshotImage
_invalidateSnapshotImage
_updatePosterImageView
_updatePosterFrameVisibility
setShowsPlayOverlay:
showsPlayOverlay
setShowsScrubber:
setShowsScrubber:duration:
showsScrubber
prepareMoviePlayer
notifyRequiredResourcesDownloaded
setCanEdit:
_setLocalVideoUnavailable:
canEdit
_canEditDuration:
setScrubberIsSubview:
scrubberIsSubview
setLoadMediaImmediately:
loadMediaImmediately
_scrubToMovieTime:
notifyOfChange:shouldReloadBlock:
_scrubberTimeNeedsMapping
_movieScrubberDuration
_thumbnailSourceAsset
_thumbnailTimeFromScrubberTime:
_movieTimeFromScrubberTime:
_scrubberTimeFromMovieTime:
shouldShowCopyCalloutAtPoint:
_handleScreenConnectionChange:
_playbackFinished
_setDuration:
_updateSlalomRegionEditorRange
_updateScrubberValue
updateForRotationWithDuration:isLandscape:
_enqueueAdjustmentsForCommit
_commitPendingAdjustmentsUpdate
_cancelDelayedCommitPendingAdjustmentsUpdate
_commitPendingAdjustmentsUpdateAndWait:completionHandler:
_scrubToSlalomRegionEditorStartHandle:
_canAirPlayCurrentVideo
_shouldPlayFlattenedVideo
_isFlattenedVideoUpToDate
_metadataForFlattenedVideo
_readMetadataFromPath:
_writeMetadata:toPath:
_filePathForFlattenedVideo
_filePathForFlattenedVideoMetadata
_deleteFileAtPath:
_flattenVideoWithCompletionHandler:
_cancelAirplayExportSession
setScrubberWidth:
posterFrameView
trimProgressStack
setTrimProgressStack:
allowSlalomEditor
setAllowSlalomEditor:
scrubberBackgroundView
prepareMoviePlayerForScrubberAutomatically
setPrepareMoviePlayerForScrubberAutomatically:
shouldPlayVideoWhenViewAppears
setShouldPlayVideoWhenViewAppears:
_didInsertMoviePlayerView
set_didInsertMoviePlayerView:
_didEditSlalom
_setDidEditSlalom:
_isFetchingVideo
_localVideoUnavailable
_expectedNotificationsCount
_adjustmentsToCommit
_canAttemptFetchingVideoDerivative
_setCanAttemptFetchingVideoDerivative:
_attemptFetchingVideoDerivative
_setAttemptFetchingVideoDerivative:
_slalomRegionEditorCreatedForScrubber
removeItemAtURL:error:
propertyListDictionary
videoAdjustments
requestAVAssetForExport:withResultHandler:
forceUnzoom
forceZoom
setContentEditingOutput:
clearRenderedContentURL
setAdjustmentData:
initWithAdjustmentBaseVersion:mediaType:
initWithFormatIdentifier:formatVersion:data:
adjustmentData
adjustmentFormatVersion
adjustmentFormatIdentifier
requestPlayerItemWithResultHandler:
initWithSlowMotionTimeRange:rate:
slowMotionRate
slowMotionTimeRange
preferredTimeScale
setValue:animated:
hasSlowMotionAdjustments
setThumbIsVisible:
convertToOriginalTimeFromScaledTime:forExport:
convertToScaledTimeFromOriginalTime:forExport:
currentItem
assetContentChanged
changeDetailsForObject:
isRecognizedFormat
setValue:
newFullSizeImage
pathForVideoPreviewFile
setDataSource:
cancelPreviousPerformRequestsWithTarget:
setEditable:
setForwardPlaybackEndTime:
requestVideoPlaybackURLForAsset:videoType:completion:
isCellularConnection
cachedNonPersistedVideoPlaybackURL
setCachedNonPersistedVideoPlaybackURLError:
cachedNonPersistedVideoPlaybackURLError
setColor:
imageWithCGImage:
initWithCGImage:
copyCGImageAtTime:actualTime:error:
setAppliesPreferredTrackTransform:
setMaximumSize:
setApertureMode:
trimEndValue
trimStartValue
animateAfterEdit
saveCameraVideoAtPath:withMetadata:thumbnailImage:createPreviewWellImage:progressStack:isSlalom:assetAdjustments:videoHandler:requestEnqueuedBlock:completionBlock:
indexSheetImage
isMogul
dateCreated
numberWithShort:
orientation
nextAvailableFilePathInDirectory:withExtension:
eventAlbumContainingPhoto:
isCameraConnectionKitAsset
adjustTimeRange:forNewStartTime:endTime:
regenerateVideoThumbnailsForVideo:withCreationDate:progressStack:completionBlock:
attributesOfItemAtPath:error:
moveItemAtPath:toPath:error:
setAttributes:ofItemAtPath:error:
push:
totalProgress:
updateProgress:
initWithDelegate:
flush
value
insertSubview:above:
setBody:
_bodyLabel
setTextContainerInset:
setSelectable:
initWithFrame:textContainer:
setRequestedTimeToleranceAfter:
setRequestedTimeToleranceBefore:
generateCGImagesAsynchronouslyForTimes:completionHandler:
setThumbnailImage:forTimestamp:
valueWithCMTime:
CMTimeValue
portraitScrubberThumbnailFormat
landscapeScrubberThumbnailFormat
presentationSize
thumbnailImageAtIndex:
options
thumbnailsWithContentsOfFile:format:
isInFlight
debugAlwaysStreamSharedVideos
pathForPrebakedPortraitScrubberThumbnails
pathForPrebakedLandscapeScrubberThumbnails
pathForOriginalFile
saveToFile:
initWithImages:format:options:delegate:
isEqualToArray:
setCachedNonPersistedVideoPlaybackURLExpiration:
setCachedNonPersistedVideoPlaybackURL:
setExpectedAssetTypes:
URLAssetWithURL:options:
streamdVideoCache
initWithFormatIdentifier:formatVersion:data:baseVersion:editorBundleID:renderTypes:
data
formatVersion
formatIdentifier
audiovisualAsset
initWithObjects:
playerItemWithAsset:
requestContentEditingInputWithOptions:completionHandler:
isPlayable
setCanHandleAdjustmentData:
requestPlayerItemForVideo:options:resultHandler:
setVideoComplementAllowed:
setStreamingAllowed:
isReadyForDisplay
reloadData
_enqueueOverlayPlayButton:
_dequeueOverlayPlayButton
isPhotoIrisPlaceholder
setMinimumTrimLength:
setEdgeInset:
isEditable
defaultSizeForOrientation:
statusBarHeightForOrientation:ignoreHidden:
pathToOriginalVideoFile
raise:format:
videoViewForVideoFileAtURL:
TB,N,V_simulateDownload
TB,N,V_simulateDownloadFailure
_simulateDownload
_simulateDownloadFailure
simulateDownload
setSimulateDownload:
simulateDownloadFailure
setSimulateDownloadFailure:
conditionFormat:
T@"UIImageView",&,N,V_titleMaskImageView
_titleMaskImageView
backdropViewDidChange:
_updateContentEdgeInsets
_setupBackdropView
setHighlighted:
setSelected:
titleMaskImageView
setTitleMaskImageView:
legibleColor
outputSettings
applySettings:
computeOutputSettingsUsingModel:
restoreDefaultValues
inputSettings
isSelected
isHighlighted
setAppliesOutputSettingsAnimationDuration:
setContentEdgeInsets:
autoLayoutCommonWallpaperButton
autoLayoutCommonWallpaperButtonWithStyle:
setContentHuggingPriority:forAxis:
setContentCompressionResistancePriority:forAxis:
bundleIdentifier
legacySaveImageToCameraRoll:completionTarget:completionSelector:contextInfo:
legacySaveImageDataToCameraRoll:completionTarget:completionSelector:contextInfo:
legacySaveScreenshotToCameraRoll:completionTarget:completionSelector:contextInfo:
legacySaveVideoToCameraRoll:completionTarget:completionSelector:contextInfo:
canSaveVideoToLibrary:
demoClient
cleanupForStoreDemoMode
setDelaySuspend:
_setDelaySuspend:
localizedInfoDictionary
rectForRowAtIndexPath:
pl_indexPathForLastRow
pl_scrollToBottom:
scrollRectToVisible:animated:
scrollToRowAtIndexPath:atScrollPosition:animated:
pl_resetContentOffsetFromContentInsets
tableFooterView
numberOfRowsInSection:
indexPathsForVisibleRows
numberOfSections
indexPathForRow:inSection:
pl_scrollToVisibleRowAtIndexPath:animated:
pl_scrollToTop:
pl_lastRowIsVisible
pl_setHidden:delay:animated:
removeAnimationForKey:
pl_setHiddenAnimationDuration
pl_isOnScreen:
pl_drawBorderWithColor:width:
pl_setHidden:animated:
_isInPopoverPresentation
childViewControllers
pl_visitControllerHierarchyWithBlock:
pl_isInPopover
presentedViewController
arrayByAddingObject:
rootViewController
pl_presentViewController:animated:
@16@0:8
v24@0:8@16
v16@0:8
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v24@0:8q16
v32@0:8q16d24
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
q16@0:8
#16@0:8
@"PHFetchResult"
@"NSMutableDictionary"
@"PHFetchResult"24@0:8@"PHAssetCollection"16
@"PHFetchResult"16@0:8
@24@0:8@16
B24@0:8@16
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
@32@0:8@16@24
v32@0:8Q16Q24
@24@0:8Q16
Q24@0:8@16
Q32@0:8Q16B24B28
Q24@0:8Q16
@28@0:8@16B24
Q28@0:8Q16B24
@32@0:8@16B24B28
@32@0:8@16Q24
v24@0:8@"CAAnimation"16
v28@0:8@"CAAnimation"16B24
v28@0:8@16B24
@?16@0:8
v24@0:8@?16
^{__CFDictionary=}
v56@0:8^{CGPath=}16{CGRect={CGPoint=dd}{CGSize=dd}}24
^{CGPath=}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
^{lruEntry=@q{?=^{lruEntry}^^{lruEntry}}}
^{lruEntry=@q{?=^{lruEntry}^^{lruEntry}}}16@0:8
{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}
{entryList="tqh_first"^{lruEntry}"tqh_last"^^{lruEntry}}
@32@0:8q16q24
v32@0:8@16@24
v40@0:8@16@24q32
@"UIFontDescriptor"
@"UILabel"
@"UIImageView"
@"CAShapeLayer"
{UIEdgeInsets=dddd}16@0:8
@"PLCropOverlayCropView"
@"UIView"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@"UIToolbar"
@"PLProgressHUD"
@"UIButton"
@"PLContactPhotoOverlay"
@"NSString"
@"<PLCropOverlayDelegate>"
@"PLCropOverlayBottomBar"
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16i48B52
v20@0:8B16
@52@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16i48
v24@0:8B16f20
v20@0:8i16
i16@0:8
@40@0:8{CGPoint=dd}16@32
v28@0:8B16@20
v28@0:8B16d20
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@52@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16B48
B20@0:8i16
v24@0:8d16
@"PLCropOverlayPreviewBottomBar"
@"PLCropOverlayWallpaperBottomBar"
v28@0:8q16B24
B24@0:8q16
@"PLWallpaperButton"
@"_UILegibilityLabel"
@"_UIBackdropView"
d16@0:8
{CGSize=dd}24@0:8@16
{CGSize=dd}32@0:8{CGSize=dd}16
v44@0:8@16@24@32i40
v64@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24d56
@"NSArray"
@"NSMutableData"
@"<PLDataArrayInputStreamProgressDelegate>"
^{__CFRunLoopSource=}
{?="version"q"info"^v"retain"^?"release"^?"copyDescription"^?}
v32@0:8^{__CFRunLoop=}16^{__CFString=}24
B40@0:8Q16^?24^{?=q^v^?^?^?}32
q32@0:8*16Q24
B32@0:8^*16^Q24
@"PLImageView"
{CGSize="width"d"height"d}
{CGPoint="x"d"y"d}
@"PLManagedAsset"
{?="isRotating"b1"didTrack"b1"updateFrame"b1"didLayout"b1"alwaysDoLayout"b1"didComputeCenterOffset"b1"imageIsFullScreen"b1}
B40@0:8{CGPoint=dd}16@32
f16@0:8
v32@0:8{CGSize=dd}16
v36@0:8{CGSize=dd}16f32
f20@0:8f16
v48@0:8{CGPoint=dd}16{CGPoint=dd}32
f24@0:8@16
f36@0:8@16i24d28
v40@0:8@16@24^v32
v32@0:8{CGPoint=dd}16
v48@0:8@16{CGSize=dd}24q40
{CGSize=dd}16@0:8
v24@0:8^{CGContext=}16
@"<PLExpandableViewDelegate>"
{?="state"b3"prevState"b3"tracking"b1"autorotationDisabled"b1"animationDisabled"b1"updateContractedFrame"b1"updateExpandedFrame"b1"allowsExpansion"b1"delegateWillBeginExpanding"b1"delegateWillCompleteExpanding"b1"delegateDidCompleteExpanding"b1"delegateWillCancelExpanding"b1"delegateDidCancelExpanding"b1"delegateDidBeginCollapsing"b1"delegateWillCompleteCollapsing"b1"delegateDidCompleteCollapsing"b1"delegateWillCancelCollapsing"b1"delegateDidCancelCollapsing"b1"delegateExpandedFractionChanged"b1}
v28@0:8i16d20
v24@0:8f16B20
i20@0:8B16
{CGRect={CGPoint=dd}{CGSize=dd}}60@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48B56
v28@0:8B16@?20
@"PLVideoView"
@"PLPhotoTilePlaceholderView"
@"PLTiledLayer"
{CGSize=dd}36@0:8{CGSize=dd}16B32
{CGAffineTransform=dddddd}16@0:8
v24@0:8B16B20
v20@0:8f16
@40@0:8@16{CGSize=dd}24
@"AVPlayerItem"
@"AVPlayer"
@"PLMoviePlayerView"
@"PLTVOutWindow"
@"<PLMoviePlayerControllerDelegate>"
v32@0:8@16d24
v48@0:8@16@24@32^v40
v32@0:8d16Q24
v36@0:8d16Q24B32
v24@0:8Q16
@"PHImageManagerSettings"
@"PHResourceDownloadSettings"
@"NSMutableArray"
@"PLAVPlayerView"
i24@0:8@16
@"PLRoundProgressView"
@"<PLPhotoTileCloudPlaceholderViewDelegate>"
@"UIActivityIndicatorView"
@"PLPhotoTileViewController"
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
@"UIImage"
@"PHAsset"
@"PLImageScrollView"
@"PLExpandableImageView"
@"UIView<PLTilePlaceholderView>"
@"UIGestureRecognizer"
@"<PLPhotoTileViewControllerDelegate>"
@"NSObject<OS_dispatch_source>"
@"PLTileContainerView"
@"PHCachingImageManager"
@"NSNumber"
{UIEdgeInsets="top"d"left"d"bottom"d"right"d}
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
B32@0:8@"UIGestureRecognizer"16@"UIEvent"24
B32@0:8@16@24
v24@0:8@"UIScrollView"16
v48@0:8@"UIScrollView"16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@"UIScrollView"16B24
@"UIView"24@0:8@"UIScrollView"16
v32@0:8@"UIScrollView"16@"UIView"24
v40@0:8@"UIScrollView"16@"UIView"24d32
B24@0:8@"UIScrollView"16
v48@0:8@16{CGPoint=dd}24N^{CGPoint=dd}40
v40@0:8@16@24d32
v48@0:8{UIEdgeInsets=dddd}16
@80@0:8@16@24{CGRect={CGPoint=dd}{CGSize=dd}}32B64i68B72i76
@48@0:8@16@24{CGSize=dd}32
v80@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGRect={CGPoint=dd}{CGSize=dd}}48
v32@0:8@16B24B28
{CGSize=dd}48@0:8@16d24{CGSize=dd}32
v40@0:8{CGSize=dd}16@32
v40@0:8d16{CGSize=dd}24
@84@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16d48^@56^@64^{CGRect={CGPoint=dd}{CGSize=dd}}72B80
v104@0:8^@16@24{CGSize=dd}32@48{CGAffineTransform=dddddd}56
@88@0:8@16{CGSize=dd}24{CGRect={CGPoint=dd}{CGSize=dd}}40{CGSize=dd}72
@60@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16d48i56
v36@0:8d16B24@?28
f28@0:8B16@20
@72@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16^{CGImage=}48q56B64i68
@64@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48B56i60
@60@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48i56
@"NSDictionary"
@"NSSet"
v24@0:8@"UIApplication"16
B32@0:8@"UIApplication"16@"NSDictionary"24
B32@0:8@"UIApplication"16@"NSURL"24
B48@0:8@"UIApplication"16@"NSURL"24@"NSString"32@40
B40@0:8@"UIApplication"16@"NSURL"24@"NSDictionary"32
v40@0:8@"UIApplication"16q24d32
v32@0:8@"UIApplication"16q24
v56@0:8@"UIApplication"16{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8@"UIApplication"16@"UIUserNotificationSettings"24
v32@0:8@"UIApplication"16@"NSData"24
v32@0:8@"UIApplication"16@"NSError"24
v32@0:8@"UIApplication"16@"NSDictionary"24
v32@0:8@"UIApplication"16@"UILocalNotification"24
v48@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@"NSDictionary"40@?<v@?>48
v48@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@"NSDictionary"40@?<v@?>48
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?Q>32
v32@0:8@"UIApplication"16@?<v@?Q>24
v40@0:8@"UIApplication"16@"UIApplicationShortcutItem"24@?<v@?B>32
v40@0:8@"UIApplication"16@"NSString"24@?<v@?>32
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?@"NSDictionary">32
@32@0:8@"UIApplication"16@"INIntent"24
v40@0:8@"UIApplication"16@"INIntent"24@?<v@?@"INIntentResponse">32
Q32@0:8@"UIApplication"16@"UIWindow"24
B32@0:8@"UIApplication"16@"NSString"24
@"UIViewController"40@0:8@"UIApplication"16@"NSArray"24@"NSCoder"32
B32@0:8@"UIApplication"16@"NSCoder"24
v32@0:8@"UIApplication"16@"NSCoder"24
B40@0:8@"UIApplication"16@"NSUserActivity"24@?<v@?@"NSArray">32
v40@0:8@"UIApplication"16@"NSString"24@"NSError"32
v32@0:8@"UIApplication"16@"NSUserActivity"24
v32@0:8@"UIApplication"16@"CKShareMetadata"24
@"UISceneConfiguration"40@0:8@"UIApplication"16@"UISceneSession"24@"UISceneConnectionOptions"32
v32@0:8@"UIApplication"16@"NSSet"24
B24@0:8@"UIApplication"16
@"UIWindow"16@0:8
v24@0:8@"UIWindow"16
B48@0:8@16@24@32@40
B40@0:8@16@24@32
v40@0:8@16q24d32
v32@0:8@16q24
v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v40@0:8@16@24@?32
v32@0:8@16@?24
Q32@0:8@16@24
@40@0:8@16@24@32
B40@0:8@16@24@?32
v40@0:8@16@24@32
v32@0:8^{__CFUserNotification=}16Q24
@"MPMediaItemCollection"
@"UIProgressView"
@"NSNumberFormatter"
@"NSData"
@"PLVideoRemaker"
v24@0:8@"PLDataArrayInputStream"16
v32@0:8d16d24
v32@0:8q16q24
v28@0:8@16f24
q24@0:8@16
v32@0:8@?16@?24
@32@0:8@16^@24
v32@0:8@?16@24
@"NSURL"
@"NSTimer"
@"NSDate"
@"UIColor"
@"PLProgressArcLayer"
@"CALayer"
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48
d24@0:8d16
@"<PLSlalomRegionEditorDelegate>"
v28@0:8d16B24
d48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGRect={CGPoint=dd}{CGSize=dd}}28@0:8d16B24
d52@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16B48
B36@0:8@16B24^d28
@20@0:8B16
v48@0:8d16d24d32d40
v56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16d48
@48@0:8@16^{CGImage=}24{CGSize=dd}32
S16@0:8
@"UIImagePickerController"
@"UINavigationItem"
v36@0:8@"UINavigationController"16@"UIViewController"24B32
Q24@0:8@"UINavigationController"16
q24@0:8@"UINavigationController"16
@"<UIViewControllerInteractiveTransitioning>"32@0:8@"UINavigationController"16@"<UIViewControllerAnimatedTransitioning>"24
@"<UIViewControllerAnimatedTransitioning>"48@0:8@"UINavigationController"16q24@"UIViewController"32@"UIViewController"40
v36@0:8@16@24B32
@48@0:8@16q24@32@40
v40@0:8@"UIImagePickerController"16@"UIImage"24@"NSDictionary"32
v32@0:8@"UIImagePickerController"16@"NSDictionary"24
v24@0:8@"UIImagePickerController"16
v24@0:8#16
d32@0:8@16q24
^{CGImage=}
@"PLCropOverlay"
@"PLProgressView"
v24@0:8@"PLCropOverlay"16
@"NSArray"24@0:8@"PLCropOverlay"16
v28@0:8@"PLPhotoTileViewController"16B24
v24@0:8@"PLPhotoTileViewController"16
B24@0:8@"PLPhotoTileViewController"16
@"UIView"24@0:8@"PLPhotoTileViewController"16
@"<UILayoutSupport>"24@0:8@"PLPhotoTileViewController"16
v24@0:8@"PLVideoView"16
d32@0:8@"PLVideoView"16q24
d24@0:8@"PLVideoView"16
B24@0:8@"PLVideoView"16
v28@0:8@"PLVideoView"16B24
v28@0:8@"PLVideoView"16f24
v32@0:8@"PLVideoView"16@"UIView"24
@"NSDictionary"24@0:8@"PLVideoView"16
d24@0:8@16
@56@0:8^{CGImage=}16{CGRect={CGPoint=dd}{CGSize=dd}}24
@56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
v44@0:8@16@24@32B40
v32@0:8@16:24
@24@0:8q16
@40@0:8d16d24d32
@"AVAssetExportSession"
@"NSObject<PLVideoRemakerDelegate>"
@"PFVideoAVObjectBuilder"
q20@0:8i16
d20@0:8i16
q28@0:8i16d20
i20@0:8i16
@"AVAssetImageGenerator"
@"PLVideoPosterFrameView"
@"PLVideoEditingOverlayView"
@"PLPhotoBakedThumbnails"
@"PLProgressStack"
@"PLMoviePlayerController"
@"<PLVideoViewDelegate>"
@"NSLock"
@"NSObject<OS_dispatch_queue>"
@"UIMovieScrubber"
@"PLSlalomRegionEditor"
@"UIView<PLVideoOverlayButton>"
@"PFVideoAdjustments"
v28@0:8@"PLSlalomRegionEditor"16B24
v24@0:8@"PLSlalomRegionEditor"16
B24@0:8@"PLSlalomRegionEditor"16
v24@0:8@"PLMoviePlayerController"16
B28@0:8@"PLMoviePlayerController"16i24
v32@0:8@"PLMoviePlayerController"16Q24
B24@0:8@"PLMoviePlayerController"16
@"NSDictionary"24@0:8@"PLMoviePlayerController"16
B28@0:8@16i24
v32@0:8@16Q24
d24@0:8@"UIMovieScrubber"16
@"NSArray"44@0:8@"UIMovieScrubber"16i24@"NSNumber"28@"NSNumber"36
v32@0:8@"UIMovieScrubber"16@"NSNumber"24
v36@0:8@"UIMovieScrubber"16@"NSNumber"24B32
@44@0:8@16i24@28@36
v32@0:8@"UIMovieScrubber"16d24
v28@0:8@"UIMovieScrubber"16i24
v32@0:8@"UIMovieScrubber"16f24f28
v24@0:8@"UIMovieScrubber"16
v40@0:8@"UIMovieScrubber"16d24d32
v28@0:8@16i24
v32@0:8@16f24f28
v40@0:8@16d24d32
@64@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48q56
v24@0:8^{CGImage=}16
@44@0:8@16@24@32i40
@32@0:8@16B24f28
v28@0:8d16i24
v44@0:8@16{CGSize=dd}24B40
@24@0:8^@16
B24@0:8d16
B32@0:8{CGPoint=dd}16
@"UITextView"
v24@0:8@"_UIBackdropView"16
v32@0:8B16d20B28
B24@0:8@?16
