@333333
?333333
^@333333
?ffffff
333333
?ffffff
initWithFrame:
imageNamed:
size
resizableImageWithCapInsets:resizingMode:
initWithImage:
addSubview:
_imageView
isHighlighted
setHighlighted:
mainScreen
_referenceBounds
_fixedSubjectIndicatorSizeForReferenceBounds:
intrinsicContentSize
layoutSubviews
bounds
setBounds:
setCenter:
layer
animationForKey:
alpha
removeAnimationForKey:
setAlpha:
animateWithDuration:delay:options:animations:completion:
layoutIfNeeded
setTransform:
startScalingWithExpansionWidth:duration:repeatCount:timingFunction:
functionWithName:
animationWithKeyPath:
setTimingFunction:
setDuration:
numberWithDouble:
numberWithInt:
arrayWithObjects:count:
setValues:
setRepeatCount:
setAutoreverses:
addAnimation:forKey:
presentationLayer
transform
valueWithCATransform3D:
setFromValue:
setToValue:
isPulsing
isBouncing
startScalingWithExpansionWidth:duration:repeatCount:
stopScalingWithDuration:
isInactive
setInactive:
sizeThatFits:
setHidden:animated:
setPulsing:
setBouncing:
.cxx_destruct
__imageView
init
targetApplicationProxy
safari_isHTTPFamilyURL
applicationProxyForIdentifier:
defaultWorkspace
applicationsAvailableForOpeningURL:
firstObject
bundleIdentifier
localizedShortName
performAction
actionPickerItemWithLabel:actionHandler:
sharedApplication
openURL:options:completionHandler:
localizedName
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
performDefaultAction
showActionPicker
delegate
setDelegate:
urlThatCanBeOpened
defaultActionTargetApplicationBundleIdentifier
localizedDefaultActionTitle
localizedDefaultActionDescription
localizedActionDescription
actionPickerItems
performDefaultActionWithCompletionHandler:
debugDescriptionDictionary
extraPreviewText
appLinks
isInvalidDataAction
isWiFiAction
initWithURL:appLink:
appLink
_applicationProxy
_url
_appLink
actionURL
performActionInExternalApp
extent
imageByCroppingToRect:
initWithOptions:
createCGImage:fromRect:
imageWithCGImage:scale:orientation:
whiteColor
_imageForCellWithColor:size:
CGImage
contentView
image
CIImage
_averageColorAtCornerForImage:
behaviorWithType:
setValue:forKey:
numberWithFloat:
array
emitterCell
setName:
setEmitterBehaviors:
setBirthRate:
setLifetime:
setContents:
setBeginTime:
CGColor
setColor:
addObject:
setEmitterCells:
setEmitterMode:
setEmitterPosition:
setEmitterShape:
setEmitterSize:
setFrame:
setRenderMode:
setSeed:
insertSublayer:atIndex:
addSublayer:
removeFromSuperlayer
setBackgroundColor:
removeAllAnimations
setClipsToBounds:
startAnimation
setPosition:
_setContinuousCornerRadius:
removeFromSuperview
stopAnimation
animateWithDuration:animations:completion:
animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:
startAnimationWithAppImage:duration:completion:
setContentView:
_dissolveLayer
_expandingLayer
_targetAppIcon
_contentView
meshTransform
copy
adjustOrientationInImageSpace:
topLeft
topRight
bottomRight
bottomLeft
addVertex:
addFace:
setSubdivisionSteps:
frame
perspectiveCorrectedSize
_restPosition
denormalize
setRasterizationScale:
begin
setCompletionBlock:
_meshTransform:
setFillMode:
setRemovedOnCompletion:
setKeyTimes:
position
valueWithCGPoint:
setTimingFunctions:
setMeshTransform:
_qrImagePopScaleFactor
commit
superview
_platterInitialFrame
insertSubview:below:
_effectWithBlurRadius:scale:
initWithEffect:
setTranslatesAutoresizingMaskIntoConstraints:
colorWithWhite:alpha:
topAnchor
constraintEqualToAnchor:
bottomAnchor
leftAnchor
rightAnchor
activateConstraints:
_performMeshTransform:completion:
_perspectiveCorrectedImage
_restRect
animatePushWithCompletion:
animatePopWithAppImageBlock:completion:
reset
focusIndicator
setFocusIndicator:
imageQuad
setImageQuad:
targetQRImage
setTargetQRImage:
targetAppImage
setTargetAppImage:
_blurView
_platterView
_focusIndicator
_imageQuad
_targetQRImage
_targetAppImage
stringWithFormat:
boundingBox
_normalizePoint:inBounds:
_denormalizePoint:inBounds:
CGPointValue
compare:
sortedArrayUsingComparator:
objectAtIndexedSubscript:
initWithTopLeft:topRight:bottomRight:bottomLeft:
normalize
flip
copyWithZone:
_topLeft
_topRight
_bottomRight
_bottomLeft
_bounds
view
isEqualToString:
uppercaseString
length
preferredFontForTextStyle:
setFont:
setText:
grayColor
setTextColor:
leadingAnchor
constraintEqualToAnchor:constant:
centerYAnchor
heightAnchor
constraintEqualToConstant:
widthAnchor
trailingAnchor
constraintLessThanOrEqualToAnchor:
_barHairlineShadowColor
systemFontOfSize:
setDataDetectorTypes:
setEditable:
setScrollEnabled:
textContainer
setLineBreakMode:
clearColor
linkTextAttributes
dictionaryWithDictionary:
blueColor
setLinkTextAttributes:
centerXAnchor
constraintGreaterThanOrEqualToAnchor:constant:
constraintLessThanOrEqualToAnchor:constant:
icsString
dictionaryWithObjects:forKeys:count:
startDate
endDate
initWithDate:event:overriddenEventStartDate:overriddenEventEndDate:
removeEvent:span:error:
_bcs_privacyPreservingDescription
popoverPresentationController
setSourceView:
center
setSourceRect:
setPermittedArrowDirections:
alertControllerDidCancel:
actionWithTitle:style:handler:
addAction:
presentedViewController
setPreferredStyle:
_createHeaderViewControllerWithAppIdentifier:
_createPreviewControllerForDataDetectionActionPickerItem:
_createPreviewControllerWithText:
_setHeaderContentViewController:
setContentViewController:
setMessage:
countByEnumeratingWithState:objects:count:
label
alertController:didSelectActionItem:
shouldDismissAlertWhenActionIsTaken
_addActionWithTitle:style:handler:shouldDismissHandler:
_configurePopoverPresentationControllerForAlertController:fromViewController:
presentViewController:animated:completion:
alertControllerDidAllow:
_addActionForHandlingAlertDismissal:
domain
code
showActionPickerViewForAction:fromViewController:
showFirstTimePromptToOpenApp:fromViewController:
showICloudSignInPromptWithTitle:message:fromViewController:
showInvalidDataAlertForAction:fromViewController:
showErrorExplanationForAction:error:fromViewController:
_delegate
iconDataForVariant:
scale
_parseBarcodeObservation:
payloadStringValue
_resolveRedirectionForURL:
parseCodeFromString:completionHandler:
actionCoordinatorPresentingViewController:
_handleSpecialCodesForAction:presentingViewController:
count
applicationIdentifier
browserSettings
objectForKeyedSubscript:
boolValue
mutableCopy
numberWithBool:
setObject:forKeyedSubscript:
setBrowserSettings:error:
_updateParsedActionWithURL:appLink:
initWithURL:completionHandler:
homeScreenAppIconWithIdentifier:
setCountLimit:
objectForKey:
setObject:forKey:
setEntersReaderIfAvailable:
_setEphemeral:
safariViewController
initWithURL:configuration:
systemDarkYellowColor
setPreferredControlTintColor:
setDismissButtonStyle:
_handleActionPickerItemIfSpecialHandlingRequired:
actionCoordinator:didFinishPerformingAction:
_handleActionPickerItemIfContactsAction:
_handleActionPickerItemIfCalendarAction:
_launchBarcodeScannerAppFromLockscreenWithQueryOptions:completionBlock:
contact
_handleContactInfo:
defaultManager
URLForDirectory:inDomain:appropriateForURL:create:error:
URLByAppendingPathComponent:isDirectory:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
dataWithContacts:error:
_tempVCardFileURL
writeToURL:atomically:
isInstalled
isRestricted
operationToOpenResource:usingApplication:uniqueDocumentIdentifier:sourceIsManaged:userInfo:options:delegate:
start
applicationProxyForSystemPlaceholder:
_LSFailedToOpenURL:withBundle:
requestAccessForEntityType:completionHandler:
_handleCalendarICSString:
saveEvent:span:error:
externalURL
openSensitiveURL:withOptions:error:
requestAccessToEntityType:completion:
alloc
mainBundle
openApplication:options:withResult:
actionCoordinator:willDismissViewController:
safariViewController:activityItemsForURL:title:
safariViewController:excludedActivityTypesForURL:title:
safariViewControllerDidFinish:
safariViewController:didCompleteInitialLoad:
safariViewController:initialLoadDidRedirectToURL:
startParsingBarcodeObservation:
actionForObservation:
showFirstTimePromptIfNecessary:completion:
showItemsWithAction:completion:
homeScreenAppIconForAction:
performAction:
performActionPickerItem:
requestDeviceUnlockIfNeededWithCompletion:
deviceIsBeingUnlocked
_currentObservation
_parsingQueue
_parsedAction
_qrCodeParser
_actionPickerItemBlock
_firstTimePromptBlock
_linkResolver
_deviceIsBeingUnlocked
isMainThread
_bestCaptureDevice
addObserver:forKeyPath:options:context:
setAutoresizingMask:
setView:
systemYellowColor
setTintColor:
initWithPreviewLayer:
addChildViewController:
didMoveToParentViewController:
createSessionIfNeededConnectingPreviewLayer:completion:
statusBarOrientation
discoverySessionWithDeviceTypes:mediaType:position:
devices
_bestCaptureFormatForDevice:
highResolutionStillImageDimensions
deviceType
hasTorch
observeValueForKeyPath:ofObject:change:context:
isTorchAvailable
isTorchActive
torchAvailabilityChangedTo:
torchActivenessChangedTo:
formats
formatDescription
setSession:
disconnectPreviewLayerFromSession
isRunning
stopRunning
inputs
removeInput:
outputs
removeOutput:
beginConfiguration
deviceInputWithDevice:error:
endSession
canAddInput:
addInput:
numberWithUnsignedInt:
setVideoSettings:
setSampleBufferDelegate:queue:
canAddOutput:
addOutput:
setExposureMode:
setWhiteBalanceMode:
setVideoZoomFactor:
setSessionPreset:
commitConfiguration
startRunning
defaultCenter
subjectAreaDidChange:
addObserver:selector:name:object:
executeBlockSynchronouslyWithLockedCameraDevice:
focusWithMode:exposeWithMode:atDevicePoint:monitorSubjectAreaChange:
lockForConfiguration:
unlockForConfiguration
_executeBlockWithLockedCameraDevice:
_startSessionConnectingPreviewLayer:
session
videoZoomFactor
activeFormat
videoMaxZoomFactor
rampToVideoZoomFactor:withRate:
viewWillTransitionToSize:withTransitionCoordinator:
rotationAnimationWillStart
compensateForInterfaceOrientationInLiveView:referenceSize:
rotationAnimationDidFinish
animateAlongsideTransition:completion:
resetUIAndStartCapturing:
invalidate
actionCoordinator
_clearResumeCapturingTimer
_pauseSessionIfNeeded
_restartSessionIfNeeded
scheduledTimerWithTimeInterval:repeats:block:
dismissViewControllerAnimated:completion:
endBackgroundTask:
beginBackgroundTaskWithName:expirationHandler:
_desiredImageOrientation
initWithCVPixelBuffer:orientation:options:
setRegionOfInterest:
setSymbologies:
performRequests:error:
results
isFocusPointOfInterestSupported
isFocusModeSupported:
setFocusPointOfInterest:
setFocusMode:
isExposurePointOfInterestSupported
isExposureModeSupported:
setExposurePointOfInterest:
setSubjectAreaChangeMonitoringEnabled:
executeBlockAsynchronouslyWithLockedCameraDevice:
isAdjustingExposure
isAdjustingFocus
_isCapturingSteady
_estimateQRCodeAvailabilityInFrame:
_imageFromLastVideoSample:rect:
didCaptureQRCodeWithImage:observations:
isTorchModeSupported:
setTorchModeOnWithLevel:error:
setTorchMode:
imageWithCVPixelBuffer:options:
captureOutput:didOutputMetadataObjects:fromConnection:
captureOutput:didOutputSampleBuffer:fromConnection:
captureOutput:didDropSampleBuffer:fromConnection:
liveViewControllerWillPerformAction:
liveViewControllerDidResetCapture:
liveViewController:didTapAtDevicePoint:
liveViewControllerTorchModeSupported:
liveViewController:torchModeChangedTo:
loadView
viewDidLayoutSubviews
setLiveZoomFactor:
suspendCapturing
resumeCapturing
applicationWillEnterForeground
applicationDidEnterBackground
_cameraDevice
_currentSession
_previewLayer
_captureQueue
_liveViewController
_lastVideoSample
_startTime
_statusBarOrientation
_resumeCapturingTimer
_shouldResumeCapturingOnNextAppActive
_applicationWasInBackground
viewDidLoad
_liveViewTapped
initWithTarget:action:
addGestureRecognizer:
setPreviewLayer:
setHidden:
setNeedsLayout
_removeAllAnimations:
locationInView:
_convertPointToCaptureDeviceLocation:
objectAtIndex:
_convertLogicalPoint:inBounds:
_perspectiveCorrectedImage:imageQuad:
rectForMetadataOutputRectOfInterest:
convertRect:fromView:
_continueToPopAnimationForDetectedCode:
isCopyActionItem
targetApplicationBundleIdentifier
filterWithName:
vectorWithCGPoint:
valueForKey:
imageWithCIImage:scale:orientation:
convertPoint:toLayer:
captureDevicePointOfInterestForPoint:
pointForCaptureDevicePointOfInterest:
convertPoint:fromLayer:
currentDevice
orientation
setConstant:
_setTorchButtonPosition
parentViewController
torchButtonView:torchModeChangedTo:
_normalize:inBounds:
_pointFromNormalizedPoint:
_convertPointFromCaptureDeviceLocation:
_applyTorchButtonRotationForDeviceOrientation
_previewContainerView
_coachingMessageView
_torchButtonView
_animator
_tapGestureRecognizer
_coachingMessageTopAnchorConstraint
_actionCoordinator
setVideoGravity:
previewLayer
hitTest:withEvent:
buttonWithType:
_flatImageWithColor:
setImage:forState:
systemBlueColor
imageView
setContentMode:
_setTouchInsets:
_torchButtonPressed:
addTarget:action:forControlEvents:
effectWithStyle:
_setCornerRadius:
setEnabled:
setSelected:
setEffect:
animateWithDuration:animations:
isSelected
_torchButtonPlatter
_torchButton
_isSecure
setWindow:
makeKeyAndVisible
setRootViewController:
window
rootViewController
applicationDidFinishLaunching:
application:willFinishLaunchingWithOptions:
application:didFinishLaunchingWithOptions:
applicationDidBecomeActive:
applicationWillResignActive:
application:handleOpenURL:
application:openURL:sourceApplication:annotation:
application:openURL:options:
applicationDidReceiveMemoryWarning:
applicationWillTerminate:
applicationSignificantTimeChange:
application:willChangeStatusBarOrientation:duration:
application:didChangeStatusBarOrientation:
application:willChangeStatusBarFrame:
application:didChangeStatusBarFrame:
application:didRegisterUserNotificationSettings:
application:didRegisterForRemoteNotificationsWithDeviceToken:
application:didFailToRegisterForRemoteNotificationsWithError:
application:didReceiveRemoteNotification:
application:didReceiveLocalNotification:
application:handleActionWithIdentifier:forLocalNotification:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:completionHandler:
application:handleActionWithIdentifier:forLocalNotification:withResponseInfo:completionHandler:
application:didReceiveRemoteNotification:fetchCompletionHandler:
application:performFetchWithCompletionHandler:
application:performActionForShortcutItem:completionHandler:
application:handleEventsForBackgroundURLSession:completionHandler:
application:handleWatchKitExtensionRequest:reply:
applicationShouldRequestHealthAuthorization:
application:handleIntent:completionHandler:
applicationDidEnterBackground:
applicationWillEnterForeground:
applicationProtectedDataWillBecomeUnavailable:
applicationProtectedDataDidBecomeAvailable:
application:supportedInterfaceOrientationsForWindow:
application:shouldAllowExtensionPointIdentifier:
application:viewControllerWithRestorationIdentifierPath:coder:
application:shouldSaveApplicationState:
application:shouldRestoreApplicationState:
application:willEncodeRestorableStateWithCoder:
application:didDecodeRestorableStateWithCoder:
application:willContinueUserActivityWithType:
application:continueUserActivity:restorationHandler:
application:didFailToContinueUserActivityWithType:error:
application:didUpdateUserActivity:
application:userDidAcceptCloudKitShareWithMetadata:
application:configurationForConnectingSceneSession:options:
application:didDiscardSceneSessions:
_window
preferredFontDescriptorWithTextStyle:
fontDescriptorWithSymbolicTraits:
fontWithDescriptor:size:
FocusIndicator
opacity
transform
v8@?0
v12@?0B8
transform.scale
stopScalingAnimation
_imageView
T@"UIImageView",R,N,V__imageView
inactive
TB,N,GisInactive
pulsing
TB,N,GisPulsing
bouncing
TB,N,GisBouncing
com.apple.mobilesafari
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
delegate
T@"<BCSActionDelegate>",W,N
urlThatCanBeOpened
T@"NSURL",R,N
defaultActionTargetApplicationBundleIdentifier
T@"NSString",R,C,N
localizedDefaultActionTitle
localizedDefaultActionDescription
localizedActionDescription
actionPickerItems
T@"NSArray",R,C,N
debugDescriptionDictionary
T@"NSDictionary",R,C,N
extraPreviewText
appLinks
isInvalidDataAction
TB,R,N
isWiFiAction
T@"NSURL",R,N,V_url
appLink
T@"LSAppLink",R,N,V_appLink
T@"<BCSActionDelegate>",W,N,Vdelegate
T@"NSString",R,C,N,VlocalizedActionDescription
T@"NSString",R,C,N,VextraPreviewText
T@"NSArray",R,C,N,VappLinks
TB,R,N,VisInvalidDataAction
TB,R,N,VisWiFiAction
scale
keyPath
values
locations
white
sequential
cuboid
unordered
black
rectangle
contentView
T@"UIImageView",W,N,V_contentView
meshTransform
transform.scale.x
transform.scale.y
position
focusIndicator
T@"UIView",&,N,V_focusIndicator
imageQuad
T@"BCSImageQuad",&,N,V_imageQuad
targetQRImage
T@"UIImageView",&,N,V_targetQRImage
targetAppImage
T@"UIImage",&,N,V_targetAppImage
%@, %@, %@, %@
q24@?0@"NSValue"8@"NSValue"16
topLeft
T{CGPoint=dd},R,N,V_topLeft
topRight
T{CGPoint=dd},R,N,V_topRight
bottomRight
T{CGPoint=dd},R,N,V_bottomRight
bottomLeft
T{CGPoint=dd},R,N,V_bottomLeft
bounds
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_bounds
boundingBox
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
com.apple.barcodescanner.icloud
com.apple.barcodescanner.invalid-data
com.apple.barcodescanner.wifi
iCloud
QRCode-20
QR CODE
Wi-Fi
WI-FI
Cancel
v16@?0@"UIAlertAction"8
B8@?0
Cancel (action picker)
Do you want to always allow opening this QR code in %@?
Always Allow
Cancel (first time prompt)
Sign In
Cancel (alert for invalid data)
Could not find the network
Incorrect password for the network
Failed to join the network
Cancel (alert for error explanation)
T@"<BCSAlertControllerDelegate>",W,N,V_delegate
LSApplicationProxy
Unable to find class %s
/System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices
LICreateIconFromCachedBitmap
/System/Library/PrivateFrameworks/MobileIcons.framework/MobileIcons
com.apple.BarcodeScanner.UserExplicitlyAllowsOpeningLinkInApp
com.apple.BarcodeScanner.parsingQueue
v24@?0@"<BCSAction>"8@"NSError"16
v32@?0@"NSURL"8@"LSAppLink"16@"NSError"24
v16@?0@"NSError"8
com.apple.BarcodeSupport.Notification
Transfer.vcf
com.apple.MobileAddressBook
v20@?0B8@"NSError"12
T@"<BCSActionCoordinatorDelegate>",W,N,V_delegate
deviceIsBeingUnlocked
TB,R,N,V_deviceIsBeingUnlocked
FBSSystemService
/System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices
FBSOpenApplicationOptionKeyUnlockDevice
FBSOpenApplicationOptionKeyPromptUnlockDevice
com.apple.BarcodeScanner.sessionQueue
torchAvailable
torchActive
v16@?0@"<UIViewControllerTransitionCoordinatorContext>"8
v16@?0@"AVCaptureSession"8
v16@?0@"NSTimer"8
com.apple.BarcodeScanner.BackgroundTask
@"UIImage"8@?0
v16@?0@"BCSActionPickerItem"8
CIPerspectiveCorrection
inputTopLeft
inputTopRight
inputBottomLeft
inputBottomRight
T@"<BCSLiveViewControllerDelegate>",W,N,V_delegate
actionCoordinator
T@"BCSActionCoordinator",R,N,V_actionCoordinator
previewLayer
T@"AVCaptureVideoPreviewLayer",&,N,V_previewLayer
FlashlightOff
FlashlightOn
T@"<BCSTorchButtonViewDelegate>",W,N,V_delegate
window
T@"UIWindow",&,N
T@"UIWindow",&,N,V_window
Find a code to scan
BCSSubjectIndicatorView
BCSShadowAction
BCSActionPrivate
BCSAction
NSObject
BarcodeScanner
BCSDissolveEffectView
BCSScanningAnimator
BCSImageQuad
BCSAlertController
BCSActionCoordinator
BCSAlertControllerDelegate
SFSafariViewControllerDelegate
BCSRootViewController
AVCaptureMetadataOutputObjectsDelegate
AVCaptureVideoDataOutputSampleBufferDelegate
BCSLiveViewControllerDelegate
BCSLiveViewController
BCSActionCoordinatorDelegate
BCSTorchButtonViewDelegate
BCSPreviewContainerView
BCSTorchButtonView
BCSSecureWindow
BCSAppDelegate
UIApplicationDelegate
BCSCoachingMessageView
{CGSize=dd}32@0:8{CGSize=dd}16
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
B16@0:8
v20@0:8B16
{CGSize=dd}16@0:8
v16@0:8
v24@0:8B16B20
v40@0:8d16d24Q32
v48@0:8d16d24Q32@40
v24@0:8d16
@16@0:8
@"UIImageView"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@16
v24@0:8@?16
@"<BCSActionDelegate>"16@0:8
v24@0:8@"<BCSActionDelegate>"16
@"NSURL"16@0:8
@"NSArray"16@0:8
v24@0:8@?<v@?@"NSError">16
@"NSDictionary"16@0:8
@32@0:8@16@24
@"LSApplicationProxy"
@"<BCSActionDelegate>"
@"NSString"
@"NSArray"
@"NSURL"
@"LSAppLink"
@24@0:8@16
@40@0:8@16{CGSize=dd}24
v40@0:8@16d24@?32
@"CAEmitterLayer"
@20@0:8B16
{CGPoint=dd}16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v28@0:8B16@?20
v32@0:8@?16@?24
@"UIVisualEffectView"
@"BCSDissolveEffectView"
@"UIView"
@"BCSImageQuad"
@"UIImage"
@80@0:8{CGPoint=dd}16{CGPoint=dd}32{CGPoint=dd}48{CGPoint=dd}64
{CGPoint=dd}64@0:8{CGPoint=dd}16{CGRect={CGPoint=dd}{CGSize=dd}}32
@24@0:8^{_NSZone=}16
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGPoint="x"d"y"d}
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
v32@0:8@16@24
v40@0:8@16@24@32
@"<BCSAlertControllerDelegate>"
v32@0:8@"BCSAlertController"16@"BCSActionPickerItem"24
v24@0:8@"BCSAlertController"16
@40@0:8@16@24@32
v28@0:8@16B24
@"NSArray"40@0:8@"SFSafariViewController"16@"NSURL"24@"NSString"32
v24@0:8@"SFSafariViewController"16
v28@0:8@"SFSafariViewController"16B24
v32@0:8@"SFSafariViewController"16@"NSURL"24
B32@0:8@16@24
v32@0:8@16@?24
@"VNBarcodeObservation"
@"NSObject<OS_dispatch_queue>"
@"<BCSAction>"
@"BCSQRCodeParser"
@"_SFLinkRedirectionResolver"
@"<BCSActionCoordinatorDelegate>"
v40@0:8@"AVCaptureOutput"16@"NSArray"24@"AVCaptureConnection"32
v40@0:8@16^{opaqueCMSampleBuffer=}24@32
v40@0:8@"AVCaptureOutput"16^{opaqueCMSampleBuffer=}24@"AVCaptureConnection"32
v40@0:8@16{CGPoint=dd}24
v24@0:8@"BCSLiveViewController"16
v40@0:8@"BCSLiveViewController"16{CGPoint=dd}24
B24@0:8@"BCSLiveViewController"16
v28@0:8@"BCSLiveViewController"16B24
v48@0:8@16@24@32^v40
v40@0:8{CGSize=dd}16@32
I16@0:8
@24@0:8^{__CVBuffer=}16
v52@0:8q16q24{CGPoint=dd}32B48
@56@0:8^{opaqueCMSampleBuffer=}16{CGRect={CGPoint=dd}{CGSize=dd}}24
@"AVCaptureDevice"
@"AVCaptureSession"
@"AVCaptureVideoPreviewLayer"
@"BCSLiveViewController"
@"<NSObject>"
@"NSTimer"
v32@0:8@"BCSActionCoordinator"16@"UIViewController"24
@"UIViewController"24@0:8@"BCSActionCoordinator"16
v32@0:8@"BCSActionCoordinator"16@"<BCSAction>"24
v28@0:8@"BCSTorchButtonView"16B24
{CGPoint=dd}32@0:8{CGPoint=dd}16
v40@0:8q16{CGSize=dd}24
@"BCSPreviewContainerView"
@"BCSCoachingMessageView"
@"BCSSubjectIndicatorView"
@"BCSTorchButtonView"
@"BCSScanningAnimator"
@"UITapGestureRecognizer"
@"NSLayoutConstraint"
@"<BCSLiveViewControllerDelegate>"
@"BCSActionCoordinator"
@40@0:8{CGPoint=dd}16@32
@"UIButton"
@"<BCSTorchButtonViewDelegate>"
B48@0:8@16@24@32@40
B40@0:8@16@24@32
v40@0:8@16q24d32
v32@0:8@16q24
v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v40@0:8@16@24@?32
Q32@0:8@16@24
B40@0:8@16@24@?32
v24@0:8@"UIApplication"16
B32@0:8@"UIApplication"16@"NSDictionary"24
B32@0:8@"UIApplication"16@"NSURL"24
B48@0:8@"UIApplication"16@"NSURL"24@"NSString"32@40
B40@0:8@"UIApplication"16@"NSURL"24@"NSDictionary"32
v40@0:8@"UIApplication"16q24d32
v32@0:8@"UIApplication"16q24
v56@0:8@"UIApplication"16{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8@"UIApplication"16@"UIUserNotificationSettings"24
v32@0:8@"UIApplication"16@"NSData"24
v32@0:8@"UIApplication"16@"NSError"24
v32@0:8@"UIApplication"16@"NSDictionary"24
v32@0:8@"UIApplication"16@"UILocalNotification"24
v48@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@"NSDictionary"40@?<v@?>48
v48@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@"NSDictionary"40@?<v@?>48
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?Q>32
v32@0:8@"UIApplication"16@?<v@?Q>24
v40@0:8@"UIApplication"16@"UIApplicationShortcutItem"24@?<v@?B>32
v40@0:8@"UIApplication"16@"NSString"24@?<v@?>32
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?@"NSDictionary">32
v40@0:8@"UIApplication"16@"INIntent"24@?<v@?@"INIntentResponse">32
Q32@0:8@"UIApplication"16@"UIWindow"24
B32@0:8@"UIApplication"16@"NSString"24
@"UIViewController"40@0:8@"UIApplication"16@"NSArray"24@"NSCoder"32
B32@0:8@"UIApplication"16@"NSCoder"24
v32@0:8@"UIApplication"16@"NSCoder"24
B40@0:8@"UIApplication"16@"NSUserActivity"24@?<v@?@"NSArray">32
v40@0:8@"UIApplication"16@"NSString"24@"NSError"32
v32@0:8@"UIApplication"16@"NSUserActivity"24
v32@0:8@"UIApplication"16@"CKShareMetadata"24
@"UISceneConfiguration"40@0:8@"UIApplication"16@"UISceneSession"24@"UISceneConnectionOptions"32
v32@0:8@"UIApplication"16@"NSSet"24
@"UIWindow"16@0:8
v24@0:8@"UIWindow"16
@"UIWindow"
BCSAlertController: failed to remove event %{public}@
BCSAlertController: No presenting view controller is specified
BCSAlertController: Host view controller is already presenting a view.
BCSAlertController: No app identifier
BCSActionCoordinator: there is no payload string in the scanned QR code.
BCSActionCoordinator: cannot decode the payload. Error: %{public}@
BCSActionCoordinator: failed to set browser settings %{public}@
BCSActionCoordinator: cannot resolve redirection chain. Error: %{public}@
BCSActionCoordinator: resolved redirection to %{private}@. apps: %{private}@
BCSActionCoordinator: the action doens't have an associated application.
BCSActionCoordinator: cannot create folder at URL: %@
BCSActionCoordinator: Handling contact action
BCSActionCoordinator: error accessing Contacts store: %{public}@
BCSActionCoordinator: Handling event action
BCSActionCoordinator: error saving EKEvent: %{public}@
BCSActionCoordinator: cannot open Calendar app with the event's externalURL
BCSActionCoordinator: could not open application because %{public}@
BCSRootViewController: failed to set torch mode on %{public}@
BCSRootViewController: unable to gain exclusive ownership of the device to adjust the torch
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>spi</string>
<string>public-cellular-plan</string>
</array>
<key>com.apple.QuartzCore.secure-mode</key>
<true/>
<key>com.apple.UIKit.vends-view-services</key>
<true/>
<key>com.apple.avfoundation.allow-still-image-capture-shutter-sound-manipulation</key>
<true/>
<key>com.apple.developer.networking.HotspotConfiguration</key>
<true/>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.icloud.securechannel.public</key>
<true/>
<key>com.apple.private.associated-domains</key>
<true/>
<key>com.apple.private.barcodesupport.allowNotifications</key>
<true/>
<key>com.apple.private.canGetAppLinkInfo</key>
<true/>
<key>com.apple.private.canIgnoreAppLinkOpenStrategy</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.security.container-required</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceCamera</string>
<string>kTCCServicePhotos</string>
<string>kTCCServiceAddressBook</string>
<string>kTCCServiceCalendar</string>
</array>
<key>com.apple.private.tcc.allow.overridable</key>
<array>
<string>kTCCServiceCalendar</string>
<string>kTCCServiceAddressBook</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.BarcodeSupport.ParsingService</string>
<string>com.apple.BarcodeSupport.BarcodeNotificationService</string>
<string>com.apple.nehelper</string>
<string>com.apple.pasteboard.pasted</string>
<string>com.apple.securechanneld</string>
<string>com.apple.iconservices</string>
<string>com.apple.SharedWebCredentials</string>
<string>com.apple.commcenter.coretelephony.xpc</string>
</array>
<key>com.apple.springboard.activateRemoteAlert</key>
<true/>
<key>com.apple.springboard.allowallcallurls</key>
<true/>
<key>com.apple.springboard.appbackgroundstyle</key>
<true/>
<key>com.apple.springboard.hardware-button-service.event-consumption</key>
<true/>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>com.apple.springboard.openurlswhenlocked</key>
<true/>
<key>platform-application</key>
<true/>
</dict>
</plist>
