@(#)PROGRAM:IntentsServices  PROJECT:Intents-1
PrewarmApp
-[SABaseCommand(INSExtensionService) ins_sendIntent:toExtensionProxy:onQueue:completionHandler:]
metricsContext
SiriSerializedUserActivity
-[SAIntentGroupResolveAppForIntent(INSExtensionService) ins_resolveAppForIntent:completionHandler:]
appIdentifyingInfo
bundleId
SiriAceErrorDomain
kAFAssistantErrorDomain
IntentSlotResolutionResult
-[SAIntentGroupProcessIntent(INSExtensionService) ins_sendIntent:toExtensionProxy:onQueue:completionHandler:]
-[SAIntentGroupProcessIntent(INSExtensionService) ins_sendIntent:toExtensionProxy:onQueue:completionHandler:]_block_invoke
v16@?0@"SAIntentGroupProcessIntentCompleted"8
-[SAIntentGroupProcessIntent(INSExtensionService) _resolveIntentSlotsWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:]_block_invoke
v28@?0B8@"INIntent"12@"NSDictionary"20
-[SAIntentGroupProcessIntent(INSExtensionService) _confirmIntentWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:]
-[SAIntentGroupProcessIntent(INSExtensionService) _confirmIntentWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:]_block_invoke_2
-[SAIntentGroupProcessIntent(INSExtensionService) _confirmIntentWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:]_block_invoke
-[SAIntentGroupProcessIntent(INSExtensionService) _handleIntentWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:]
-[SAIntentGroupProcessIntent(INSExtensionService) _handleIntentWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:]_block_invoke_2
-[SAIntentGroupProcessIntent(INSExtensionService) _handleIntentWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:]_block_invoke
-[SAIntentGroupConfirmIntent(INSExtensionService) ins_sendIntent:toExtensionProxy:onQueue:completionHandler:]
-[SAIntentGroupConfirmIntent(INSExtensionService) ins_sendIntent:toExtensionProxy:onQueue:completionHandler:]_block_invoke_2
v24@?0@"INIntentResponse"8@"INCExtensionError"16
v24@?0@"NSDictionary"8@"NSError"16
-[SAIntentGroupResolveIntentSlot(INSExtensionService) ins_sendIntent:toExtensionProxy:onQueue:completionHandler:]
-[SAIntentGroupResolveIntentSlot(INSExtensionService) ins_sendIntent:toExtensionProxy:onQueue:completionHandler:]_block_invoke_2
no data
v16@?0@"NSData"8
INSAnalyticsObserversQueue
FBSOpenApplicationErrorDomain
ExtensionLoadType
INSExtensionServiceQueue
v8@?0
com.apple.intents.INSExtensionService.request-delegate
-[INSExtensionService handleCommand:fromRemoteDevice:completionHandler:]_block_invoke
%@-%@-%@
v16@?0@"NSError"8
-[INSExtensionService handleCommand:fromRemoteDevice:completionHandler:]_block_invoke_2
v24@?0@"<SAAceCommand>"8@"NSError"16
v12@?0B8
v24@?0@"INCExtensionProxy"8@"NSError"16
v24@?0@"NSData"8@"NSError"16
Extension
%@.%@
Warm
Cold
-[INSExtensionService _updatedEventContextWithExtensionLoadType:wasPrewarmed:]
-[INSExtensionService _connectionForIntent:]
-[INSExtensionService _prewarmExtensionWithIntent:applicationIdentifier:command:completionHandler:]
no launchId
no extensionBundleId
-[INSExtensionService _prewarmExtensionWithIntent:applicationIdentifier:command:completionHandler:]_block_invoke
v20@?0B8@"NSError"12
-[INSExtensionService _logEventWithType:context:contextNoCopy:]
-[INSExtensionService _siriLanguageCode]
-[INSExtensionService _requiresHandlingCommand:completion:]
com.apple.siri.SiriAudioInternal.AudioInternalIntentExtension
-[INSExtensionService _shouldPrepareAudioSessionForCommand:intent:]
-[INSExtensionService analytics:contextDictionaryForCommand:]
-[INSExtensionService analytics:contextDictionaryForError:]
-[SAIntentGroupGetIntentDefinitions(INSExtensionService) ins_getIntentDefinitionsWithCompletionHandler:]
-[SAIntentGroupGetIntentDefinitions(INSExtensionService) _matchesIntentDefinition:]
INIntents
INIntentEntity
INIntentVerbAssociations
-[SAIntentGroupHandleIntent(INSExtensionService) ins_sendIntent:toExtensionProxy:onQueue:completionHandler:]
v24@?0@"INImage"8@?<v@?@"NSError">16
-[SAIntentGroupHandleIntent(INSExtensionService) ins_sendIntent:toExtensionProxy:onQueue:completionHandler:]_block_invoke_2
v24@?0@"INImage"8@"NSError"16
%s %@ delivered to the wrong service
%s intent = %@
%s appList = %@
%s intentSlotKeyPaths = %@
%s Beginning BatchSlotResolution with intent %@
%s BatchSlotResolution complete.
%s BatchSlotResolution completed in extensionProxy with updatedIntent %@
%s slotResolutionResult keyPath = `%@`, result = %@
%s All slots were resolved successfully. Moving to Confirm.
%s BatchSlotResolution needs dialog. Calling completion.
%s Beginning ConfirmIntent with intent %@
%s ConfirmIntent completed with response %@
%s ConfirmIntent successful. ShouldRunHandleIntent = %@
%s ConfirmIntent error. errorCode: %lu underlyingError: %@
%s Beginning HandleIntent with intent %@
%s HandleIntent completed with response %@
%s HandleIntent successful.
%s HandleIntent error. errorCode: %lu underlyingError: %@
%s intent.backingStore = %@
%s intentResponse.backingStore = %@
%s intentSlotKeyPath = %@
%s resolutionResultData = %@
%s Unable to get INIntent from command %@
%s Generated intent object %@
%s Raw intent = %@
%s Intent was sent from an old device with (intentVersionHash=%llu, aceVersion=%@), current device has (intentVersionHash=%llu, aceVersion=%@), intent: %@
%s ins_recordPreInteractionSignals for command: %@
%s Raw intent ID = %@
%s Start digesting raw intent ID with in-memory salt...
%s Finished digesting raw intent ID with in-memory salt.
%s Set facade intent identifier = %@
%s Unable to generate facade intent ID due to %@
%s Extension Request timed out after %{public}f seconds for command %@
%s Prepared to start playback for %@
%s Failed to prepare for audio playback
%s Extension service delegate does not respond to extensionService:processDataUsingSHA256WithInMemorySalt:completionHandler:
%s Extension load type = %@
%s Using the current connection %@ because the intent is nil.
%s Using the current connection %@ because the intent identifier is nil.
%s Replacing the current connection %@ because the intent identifier is %@.
%s %@
%s About to prewarm an extension for %@ (%@:%@) without an identifier. Assigning a new identifier: %@
%s Error finding extension for prewarming: %@
%s Prewarmed extension: %@
%s Should prewarm app: %hhd
%s Prewarmed app completed successfully
%s Prewarmed app failed with error: %@
%s Extension service delegate does not respond to extensionService:logEventWithType:context:contextNoCopy:
%s Extension service delegate does not respond to siriLanguageCodeForExtensionService:
%s Extension service delegate does not respond to extensionService:requiresHandlingCommand:completion:
%s Suppressing audio session preparation for internal media extension
%s Extension service delegate does not respond to extensionService:contextDictionaryForCommand:
%s Extension service delegate does not respond to extensionService:contextDictionaryForError:
%s Finding intent definitions for GetIntentDefinition query: %@
%s Checking if Intent Definition at %@ matches query
%s Intent Definition at %@ has no INIntents section
%s Intent Definition at %@ has no entity or verb section
%s Intent Definition at %@ matches current request
%s Intent Definition at %@ does not match
%s Unable to retrieve image data = %@
softlink:o:path:/System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices
softlink:o:path:/System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices
PrewarmAppAdditions
INSExtensionService
AudioSessionPreparation
INSDeviceInfo
INSDeviceInfoMutating
NSObject
INSExtensionServiceIntentExecutor
INSAnalytics
SignalGatheringAdditions
INSAnalyticsObserver
INSAnalyticsDataSource
INSAppLaunchCommandDelegate
privatePlayMediaIntentData
internalSignals
containsObject:
ins_shouldPrewarmApp
_JSONDictionaryRepresentation
if_JSONStringRepresentation
_intentInstanceDescription
slotByName:
resolutionResultClass
_resolutionResultWithData:slotDescription:
facadePropertyName
_JSONDictionaryRepresentationForIntent:parameterName:
ins_jsonEncodedIntent
dataUsingEncoding:
ins_protobufEncodedIntent
typeName
data
ins_jsonEncodedIntentResponse
ins_protobufEncodedIntentResponse
ins_invokeErrorCompletionHandler:withErrorCode:underlyingError:
ins_analyticsEndEventType
initWithErrorCode:
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
sharedAnalytics
contextDictionaryForCommand:
ins_afAnalyticsContext
contextDictionaryForError:
logEventWithType:context:contextNoCopy:
domain
code
isEqualToString:
setErrorCode:
metricsContext
ins_isJSONPayload
ins_setProtobufEncodedIntent:
ins_setJSONEncodedIntent:
ins_aceIntent
ins_aceIntentResponse
ins_sendIntent:toExtensionProxy:onQueue:completionHandler:
ins_analyticsBeginEventType
ins_invokeErrorCompletionHandler:forUnderlyingError:
T@"SAIntentGroupProtobufMessage",&,N,Sins_setProtobufEncodedIntent:
T@"NSString",&,N,Sins_setJSONEncodedIntent:
jsonEncodedIntentResponse
intentResponse
componentsSeparatedByString:
count
objectAtIndexedSubscript:
floatValue
ins_shouldPrepareAudioSession
playbackQueueLocation
init
mutableAceVersion
initWithAceVersion:
copy
newWithBuilder:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
setAceVersion:
aceVersion
setMutableAceVersion:
.cxx_destruct
_aceVersion
_mutableAceVersion
T@"NSString",C,N,V_mutableAceVersion
T@"NSString",R,N,V_aceVersion
jsonEncodedIntent
intent
setIntent:
setJsonEncodedIntent:
appsList
valueForKey:
setAppsList:
ins_resolveAppForIntent:completionHandler:
ins_shouldUseExtendedFlowTimeout
intentSlotKeyPaths
setResponseHandler:
aceId
setRefId:
_resolveIntentSlotsWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:
setLastAttemptedStep:
setSlotResolutionMap:
setTypeName:
backingStore
base64EncodedStringWithOptions:
setBase64EncodedIntent:
allKeys
countByEnumeratingWithState:objects:count:
setKeyPath:
objectForKeyedSubscript:
setJsonEncodedSlotResolutionResult:
setBase64EncodedProtobufMessage:
addObject:
initWithData:
type
typeAsString:
setStepResults:
setBatchSlotResolutionResult:
_connection
_confirmIntentWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:
resolveIntentSlotKeyPaths:completionHandler:
setJsonEncodedIntentResponse:
setData:
setIntentResponse:
setConfirmIntentCompleted:
shouldRunHandleIntent
_intentResponseCode
_handleIntentWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:
errorCode
underlyingError
confirmIntentWithCompletionHandler:
setHandleIntentCompleted:
handleIntentWithCompletionHandler:
jsonEncodedHandledIntent
handledIntent
setHandledIntent:
setJsonEncodedHandledIntent:
jsonEncodedHandledIntentResponse
handledIntentResponse
_transaction
currentUserActivity
userActivity
activityType
initWithActivityType:
_initWithIntent:
initWithIntent:response:
setIntentHandlingStatus:
_setInteraction:donate:
initWithType:intent:intentResponse:userActivities:
setState:
interaction
shouldLaunchAppInBackgroundWithIntent:intentResponse:
userInfo
completionHandlerForAppLaunchCommand:withCompletion:
appProxy
launchAppInBackground:restrictAppsToCarPlay:userActivityIdentifier:completionHandler:
ins_launchAppWithConnection:delegate:completionHandler:
_payloadResponseTypeName
voiceShortcutClient
sharedResolver
launchId
counterpartIdentifiersForLocalIdentifier:
anyObject
_setLaunchId:
dictionary
aceObjectWithDictionary:
sendAceCommandDictionary:completion:
extensionProxy
queue
initWithVoiceShortcutClient:intent:
initWithIntent:extensionProxy:queue:
sendAceCommand:completionHandler:
setVoiceShortcutClient:
setExtensionProxy:
setQueue:
_voiceShortcutClient
_intent
_extensionProxy
_queue
T@"<INVCVoiceShortcutClient>",&,N,V_voiceShortcutClient
T@"INIntent",&,N,V_intent
T@"INCExtensionProxy",&,N,V_extensionProxy
T@"NSObject<OS_dispatch_queue>",N,V_queue
intentSlotKeyPath
setJsonEncodedIntentSlotResolutionResult:
setIntentSlotResolutionResult:
resolveIntentSlotKeyPath:completionHandler:
_init
hashTableWithWeakObjects
observers
removeObject:
analytics:needsToLogEventWithType:context:contextNoCopy:
dataSource
analytics:contextDictionaryForCommand:
analytics:contextDictionaryForError:
addObserver:
removeObserver:
setDataSource:
setObservers:
_observerQueue
_dataSource
_observers
T@"NSHashTable",&,N,V_observers
T@"<INSAnalyticsDataSource>",W,N,V_dataSource
userActivityWithIdentifier:
ins_launchAppWithConnection:userActivityIdentifier:delegate:completionHandler:
ins_recordPreInteractionSignals
initWithOptions:
arrayWithObjects:count:
handleCommand:fromRemoteDevice:completionHandler:
_logEventWithType:context:contextNoCopy:
ins_getIntentDefinitionsWithCompletionHandler:
airPlayRouteIds
extensionContext
_airPlayRouteIdentifiers
arrayByAddingObjectsFromArray:
setWithArray:
allObjects
_setAirPlayRouteIds:
_recordRoute
_setRecordRoute:
_recordDeviceUID
_setRecordDeviceUID:
_recordDeviceIdentifier
_setRecordDeviceIdentifier:
_audioSessionID
_setAudioSessionID:
_executionContext
_setExecutionContext:
_connectionForIntent:
userActivityIdentifier
_prewarmExtensionWithIntent:applicationIdentifier:command:completionHandler:
_type
_className
intentCodableDescriptionWithIntentClassName:
versioningHash
unsignedLongValue
_metadata
intentId
initWithFormat:
if_hexStringFromData:
setIdentifier:
delegate
extensionService:prepareIntent:
extensionInputItems
_extensionInputItems
setExtensionInputItems:
_extensionRequestDidFinishForIntent:error:
requestTimeoutInterval
extensionService:suspendTimeout:
setTimeoutHandler:
setInterruptionHandler:
_extensionRequestWillStartForIntent:
_isExtensionBeingDebugged
extensionService:wantsToCacheImage:
setImageProcessingHandler:
currentIntentResponse
_shouldPrepareAudioSessionForCommand:intent:
extensionService:handleFailedStartPlaybackWithDestination:completion:
extensionService:prepareForStartPlaybackWithDestination:intent:completion:
resumeWithCompletionHandler:
extensionService:processDataUsingSHA256WithInMemorySalt:completionHandler:
reset
_setAirPlayRouteIdentifiers:
_intents_bundleIdForDisplay
extensionService:extensionRequestWillStartForApplication:
extensionService:extensionRequestDidFinishForApplication:error:
archivedDataWithRootObject:requiringSecureCoding:error:
if_setObjectIfNonNil:forKey:
_siriLanguageCode
setUserInfo:
stringWithFormat:
mutableCopy
setObject:forKey:
identifier
initWithIntent:
UUID
UUIDString
extensionBundleId
localizedDescription
_extension
_logPrewarmDidEndWithCommand:applicationIdentifier:wasPrewarmed:completionHandler:
prewarmAppWithIntent:completionHandler:
_updatedEventContextWithExtensionLoadType:wasPrewarmed:
extensionService:logEventWithType:context:contextNoCopy:
siriLanguageCodeForExtensionService:
extensionService:requiresHandlingCommand:completion:
extensionService:contextDictionaryForCommand:
extensionService:contextDictionaryForError:
groupIdentifier
commandIdentifiers
handleCommand:completionHandler:
resetExternalResources
setAirPlayRouteIdentifiers:
airPlayRouteIdentifiers
_errorImpliesCloudRelay:
_isVoiceShortcutsRemoteExecutionUnavailable:
_requiresHandlingCommand:completion:
options
setDelegate:
_requestDelegateQueue
_currentConnection
_currentBundleIdForDisplay
_extensionContext
_options
_delegate
T@"NSDictionary",R,C,N,V_options
T@"<INSExtensionServiceDelegate>",W,N,V_delegate
T@"INExtensionContext",R,N,V_extensionContext
T@"NSArray",C,N
T@"NSArray",R,C,N
T@"NSString",R,C,N
queries
initWithCapacity:
_matchesIntentDefinition:
initWithContentsOfURL:options:error:
setIntentDefinition:
setIntentDefinitionInfos:
initWithContentsOfURL:
entity
caseInsensitiveCompare:
verb
_imageSize
_setImageSize:
sharedCache
addCacheableObject:
_retrieveImageDataWithReply:
B16@0:8
@16@0:8
v24@0:8@16
v48@0:8@16@24@32@?40
q16@0:8
v40@0:8@?16q24@32
v32@0:8@?16@24
@24@0:8@?16
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@"NSString"16
@24@0:8@16
v16@0:8
@"NSString"
v32@0:8@16@?24
v40@0:8@16@24@?32
@32@0:8@16@24
@40@0:8@16@24@32
@"<INVCVoiceShortcutClient>"
@"INIntent"
@"INCExtensionProxy"
@"NSObject<OS_dispatch_queue>"
v36@0:8q16@24B32
@"<INSAnalyticsDataSource>"
@"NSHashTable"
v44@0:8@16q24@32B40
v44@0:8@"INSAnalytics"16q24@"NSDictionary"32B40
@"NSDictionary"32@0:8@"INSAnalytics"16@"SABaseCommand"24
@"NSDictionary"32@0:8@"INSAnalytics"16@"NSError"24
@?32@0:8@16@?24
@?<v@?B@"NSError">32@0:8@"SABaseCommand"16@?<v@?@"<SAAceCommand>"@"NSError">24
v32@0:8@16@24
@28@0:8@16B24
B48@0:8@16@24@32@?40
v44@0:8@16@24B32@?36
B32@0:8@16@24
@"INCExtensionConnection"
@"INExtensionContext"
@"NSDictionary"
@"<INSExtensionServiceDelegate>"
v24@0:8@?16
@(#)PROGRAM:IntentsServices  PROJECT:Intents-1
PrewarmApp
-[SABaseCommand(INSExtensionService) ins_sendIntent:toExtensionProxy:onQueue:completionHandler:]
metricsContext
SiriSerializedUserActivity
-[SAIntentGroupResolveAppForIntent(INSExtensionService) ins_resolveAppForIntent:completionHandler:]
appIdentifyingInfo
bundleId
SiriAceErrorDomain
kAFAssistantErrorDomain
IntentSlotResolutionResult
-[SAIntentGroupProcessIntent(INSExtensionService) ins_sendIntent:toExtensionProxy:onQueue:completionHandler:]
-[SAIntentGroupProcessIntent(INSExtensionService) ins_sendIntent:toExtensionProxy:onQueue:completionHandler:]_block_invoke
v16@?0@"SAIntentGroupProcessIntentCompleted"8
-[SAIntentGroupProcessIntent(INSExtensionService) _resolveIntentSlotsWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:]_block_invoke
v28@?0B8@"INIntent"12@"NSDictionary"20
-[SAIntentGroupProcessIntent(INSExtensionService) _confirmIntentWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:]
-[SAIntentGroupProcessIntent(INSExtensionService) _confirmIntentWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:]_block_invoke_2
-[SAIntentGroupProcessIntent(INSExtensionService) _confirmIntentWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:]_block_invoke
-[SAIntentGroupProcessIntent(INSExtensionService) _handleIntentWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:]
-[SAIntentGroupProcessIntent(INSExtensionService) _handleIntentWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:]_block_invoke_2
-[SAIntentGroupProcessIntent(INSExtensionService) _handleIntentWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:]_block_invoke
-[SAIntentGroupConfirmIntent(INSExtensionService) ins_sendIntent:toExtensionProxy:onQueue:completionHandler:]
-[SAIntentGroupConfirmIntent(INSExtensionService) ins_sendIntent:toExtensionProxy:onQueue:completionHandler:]_block_invoke_3
v24@?0@"INIntentResponse"8@"INCExtensionError"16
v24@?0@"NSDictionary"8@"NSError"16
-[SAIntentGroupResolveIntentSlot(INSExtensionService) ins_sendIntent:toExtensionProxy:onQueue:completionHandler:]
-[SAIntentGroupResolveIntentSlot(INSExtensionService) ins_sendIntent:toExtensionProxy:onQueue:completionHandler:]_block_invoke_3
no data
v16@?0@"NSData"8
INSAnalyticsObserversQueue
FBSOpenApplicationErrorDomain
ExtensionLoadType
INSExtensionServiceQueue
v8@?0
com.apple.intents.INSExtensionService.request-delegate
-[INSExtensionService handleCommand:fromRemoteDevice:completionHandler:]_block_invoke
%@-%@-%@
v16@?0@"NSError"8
-[INSExtensionService handleCommand:fromRemoteDevice:completionHandler:]_block_invoke_3
v24@?0@"<SAAceCommand>"8@"NSError"16
-[INSExtensionService handleCommand:fromRemoteDevice:completionHandler:]_block_invoke_5
v12@?0B8
v24@?0@"INCExtensionProxy"8@"NSError"16
v24@?0@"NSData"8@"NSError"16
-[INSExtensionService handleCommand:fromRemoteDevice:completionHandler:]_block_invoke_2
Extension
%@.%@
Warm
Cold
-[INSExtensionService _updatedEventContextWithExtensionLoadType:wasPrewarmed:]
-[INSExtensionService _connectionForIntent:]
-[INSExtensionService _prewarmExtensionWithIntent:applicationIdentifier:command:completionHandler:]
no launchId
no extensionBundleId
-[INSExtensionService _prewarmExtensionWithIntent:applicationIdentifier:command:completionHandler:]_block_invoke
v20@?0B8@"NSError"12
-[INSExtensionService _logEventWithType:context:contextNoCopy:]
-[INSExtensionService _siriLanguageCode]
-[INSExtensionService _requiresHandlingCommand:completion:]
com.apple.siri.SiriAudioInternal.AudioInternalIntentExtension
-[INSExtensionService _shouldPrepareAudioSessionForCommand:intent:]
-[INSExtensionService analytics:contextDictionaryForCommand:]
-[INSExtensionService analytics:contextDictionaryForError:]
-[SAIntentGroupGetIntentDefinitions(INSExtensionService) ins_getIntentDefinitionsWithCompletionHandler:]
-[SAIntentGroupGetIntentDefinitions(INSExtensionService) _matchesIntentDefinition:]
INIntents
INIntentEntity
INIntentVerbAssociations
-[SAIntentGroupHandleIntent(INSExtensionService) ins_sendIntent:toExtensionProxy:onQueue:completionHandler:]
v24@?0@"INImage"8@?<v@?@"NSError">16
-[SAIntentGroupHandleIntent(INSExtensionService) ins_sendIntent:toExtensionProxy:onQueue:completionHandler:]_block_invoke_3
v24@?0@"INImage"8@"NSError"16
-[SAIntentGroupHandleIntent(INSExtensionService) ins_sendIntent:toExtensionProxy:onQueue:completionHandler:]_block_invoke_2
%s %@ delivered to the wrong service
%s intent = %@
%s appList = %@
%s intentSlotKeyPaths = %@
%s Beginning BatchSlotResolution with intent %@
%s BatchSlotResolution complete.
%s BatchSlotResolution completed in extensionProxy with updatedIntent %@
%s slotResolutionResult keyPath = `%@`, result = %@
%s All slots were resolved successfully. Moving to Confirm.
%s BatchSlotResolution needs dialog. Calling completion.
%s Beginning ConfirmIntent with intent %@
%s ConfirmIntent completed with response %@
%s ConfirmIntent successful. ShouldRunHandleIntent = %@
%s ConfirmIntent error. errorCode: %lu underlyingError: %@
%s Beginning HandleIntent with intent %@
%s HandleIntent completed with response %@
%s HandleIntent successful.
%s HandleIntent error. errorCode: %lu underlyingError: %@
%s intent.backingStore = %@
%s intentResponse.backingStore = %@
%s intentSlotKeyPath = %@
%s resolutionResultData = %@
%s Unable to get INIntent from command %@
%s Generated intent object %@
%s Raw intent = %@
%s Intent was sent from an old device with (intentVersionHash=%llu, aceVersion=%@), current device has (intentVersionHash=%llu, aceVersion=%@), intent: %@
%s ins_recordPreInteractionSignals for command: %@
%s Raw intent ID = %@
%s Start digesting raw intent ID with in-memory salt...
%s Finished digesting raw intent ID with in-memory salt.
%s Set facade intent identifier = %@
%s Unable to generate facade intent ID due to %@
%s Extension Request timed out after %{public}f seconds for command %@
%s Prepared to start playback for %@
%s Failed to prepare for audio playback
%s Extension service delegate does not respond to extensionService:processDataUsingSHA256WithInMemorySalt:completionHandler:
%s Extension load type = %@
%s Using the current connection %@ because the intent is nil.
%s Using the current connection %@ because the intent identifier is nil.
%s Replacing the current connection %@ because the intent identifier is %@.
%s %@
%s About to prewarm an extension for %@ (%@:%@) without an identifier. Assigning a new identifier: %@
%s Error finding extension for prewarming: %@
%s Prewarmed extension: %@
%s Should prewarm app: %hhd
%s Prewarmed app completed successfully
%s Prewarmed app failed with error: %@
%s Extension service delegate does not respond to extensionService:logEventWithType:context:contextNoCopy:
%s Extension service delegate does not respond to siriLanguageCodeForExtensionService:
%s Extension service delegate does not respond to extensionService:requiresHandlingCommand:completion:
%s Suppressing audio session preparation for internal media extension
%s Extension service delegate does not respond to extensionService:contextDictionaryForCommand:
%s Extension service delegate does not respond to extensionService:contextDictionaryForError:
%s Finding intent definitions for GetIntentDefinition query: %@
%s Checking if Intent Definition at %@ matches query
%s Intent Definition at %@ has no INIntents section
%s Intent Definition at %@ has no entity or verb section
%s Intent Definition at %@ matches current request
%s Intent Definition at %@ does not match
%s Unable to retrieve image data = %@
softlink:o:path:/System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices
softlink:o:path:/System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices
PrewarmAppAdditions
INSExtensionService
AudioSessionPreparation
INSDeviceInfo
INSDeviceInfoMutating
NSObject
INSExtensionServiceIntentExecutor
INSAnalytics
SignalGatheringAdditions
INSAnalyticsObserver
INSAnalyticsDataSource
INSAppLaunchCommandDelegate
_payloadResponseTypeName
verb
valueForKey:
userInfo
userActivityWithIdentifier:
userActivityIdentifier
userActivity
unsignedLongValue
underlyingError
typeName
typeAsString:
type
stringWithFormat:
slotByName:
shouldRunHandleIntent
shouldLaunchAppInBackgroundWithIntent:intentResponse:
sharedResolver
sharedCache
setWithArray:
setUserInfo:
setTypeName:
setTimeoutHandler:
setStepResults:
setState:
setSlotResolutionMap:
setResponseHandler:
setRefId:
setObject:forKey:
setLastAttemptedStep:
setKeyPath:
setJsonEncodedSlotResolutionResult:
setJsonEncodedIntentSlotResolutionResult:
setJsonEncodedIntentResponse:
setJsonEncodedIntent:
setJsonEncodedHandledIntent:
setInterruptionHandler:
setIntentSlotResolutionResult:
setIntentResponse:
setIntentHandlingStatus:
setIntentDefinitionInfos:
setIntentDefinition:
setImageProcessingHandler:
setIdentifier:
setHandledIntent:
setHandleIntentCompleted:
setExtensionInputItems:
setErrorCode:
setData:
setConfirmIntentCompleted:
setBatchSlotResolutionResult:
setBase64EncodedProtobufMessage:
setBase64EncodedIntent:
setAppsList:
sendAceCommandDictionary:completion:
resumeWithCompletionHandler:
resolveIntentSlotKeyPaths:completionHandler:
resolveIntentSlotKeyPath:completionHandler:
resolutionResultClass
reset
requestTimeoutInterval
removeObject:
queries
privatePlayMediaIntentData
prewarmAppWithIntent:completionHandler:
playbackQueueLocation
objectForKeyedSubscript:
objectAtIndexedSubscript:
mutableCopy
metricsContext
localizedDescription
launchId
launchAppInBackground:restrictAppsToCarPlay:userActivityIdentifier:completionHandler:
jsonEncodedIntentResponse
jsonEncodedIntent
jsonEncodedHandledIntentResponse
jsonEncodedHandledIntent
isEqualToString:
internalSignals
interaction
intentSlotKeyPaths
intentSlotKeyPath
intentResponse
intentId
intentCodableDescriptionWithIntentClassName:
initWithType:intent:intentResponse:userActivities:
initWithIntent:response:
initWithIntent:
initWithFormat:
initWithErrorCode:
initWithData:
initWithContentsOfURL:options:error:
initWithContentsOfURL:
initWithCapacity:
initWithActivityType:
if_setObjectIfNonNil:forKey:
if_hexStringFromData:
if_JSONStringRepresentation
identifier
hashTableWithWeakObjects
handledIntentResponse
handledIntent
handleIntentWithCompletionHandler:
floatValue
facadePropertyName
extensionService:wantsToCacheImage:
extensionService:suspendTimeout:
extensionService:prepareForStartPlaybackWithDestination:intent:completion:
extensionService:handleFailedStartPlaybackWithDestination:completion:
extensionService:extensionRequestWillStartForApplication:
extensionService:extensionRequestDidFinishForApplication:error:
extensionInputItems
extensionBundleId
errorWithDomain:code:userInfo:
errorCode
entity
domain
dictionaryWithObjects:forKeys:count:
dictionary
dataUsingEncoding:
data
currentUserActivity
currentIntentResponse
counterpartIdentifiersForLocalIdentifier:
countByEnumeratingWithState:objects:count:
count
copy
containsObject:
confirmIntentWithCompletionHandler:
componentsSeparatedByString:
code
caseInsensitiveCompare:
base64EncodedStringWithOptions:
backingStore
arrayWithObjects:count:
arrayByAddingObjectsFromArray:
archivedDataWithRootObject:requiringSecureCoding:error:
appsList
appProxy
anyObject
allObjects
allKeys
airPlayRouteIds
addObject:
addCacheableObject:
activityType
aceObjectWithDictionary:
aceId
UUID
_JSONDictionaryRepresentation
UUIDString
_JSONDictionaryRepresentationForIntent:parameterName:
_airPlayRouteIdentifiers
_audioSessionID
_className
_connection
_executionContext
_extension
_imageSize
_initWithIntent:
_intentInstanceDescription
_intentResponseCode
_intents_bundleIdForDisplay
_isExtensionBeingDebugged
_metadata
versioningHash
_recordDeviceIdentifier
_recordDeviceUID
_recordRoute
_resolutionResultWithData:slotDescription:
_retrieveImageDataWithReply:
_setAirPlayRouteIdentifiers:
_setAirPlayRouteIds:
_setAudioSessionID:
_setExecutionContext:
_setImageSize:
_setInteraction:donate:
_setLaunchId:
_setRecordDeviceIdentifier:
_setRecordDeviceUID:
_setRecordRoute:
_transaction
_type
ins_shouldPrewarmApp
ins_isJSONPayload
ins_jsonEncodedIntent
ins_protobufEncodedIntent
ins_setProtobufEncodedIntent:
ins_setJSONEncodedIntent:
ins_aceIntent
ins_jsonEncodedIntentResponse
ins_protobufEncodedIntentResponse
ins_aceIntentResponse
ins_sendIntent:toExtensionProxy:onQueue:completionHandler:
ins_analyticsBeginEventType
ins_analyticsEndEventType
ins_invokeErrorCompletionHandler:withErrorCode:underlyingError:
ins_invokeErrorCompletionHandler:forUnderlyingError:
ins_afAnalyticsContext
T@"SAIntentGroupProtobufMessage",&,N,Sins_setProtobufEncodedIntent:
T@"NSString",&,N,Sins_setJSONEncodedIntent:
ins_shouldPrepareAudioSession
init
newWithBuilder:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
setAceVersion:
initWithAceVersion:
aceVersion
mutableAceVersion
setMutableAceVersion:
.cxx_destruct
_aceVersion
_mutableAceVersion
T@"NSString",C,N,V_mutableAceVersion
T@"NSString",R,N,V_aceVersion
ins_resolveAppForIntent:completionHandler:
ins_shouldUseExtendedFlowTimeout
_resolveIntentSlotsWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:
_confirmIntentWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:
_handleIntentWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:
ins_launchAppWithConnection:delegate:completionHandler:
initWithVoiceShortcutClient:intent:
initWithIntent:extensionProxy:queue:
sendAceCommand:completionHandler:
voiceShortcutClient
setVoiceShortcutClient:
intent
setIntent:
extensionProxy
setExtensionProxy:
queue
setQueue:
_voiceShortcutClient
_intent
_extensionProxy
_queue
T@"<INVCVoiceShortcutClient>",&,N,V_voiceShortcutClient
T@"INIntent",&,N,V_intent
T@"INCExtensionProxy",&,N,V_extensionProxy
T@"NSObject<OS_dispatch_queue>",N,V_queue
sharedAnalytics
_init
addObserver:
removeObserver:
logEventWithType:context:contextNoCopy:
contextDictionaryForCommand:
contextDictionaryForError:
dataSource
setDataSource:
observers
setObservers:
_observerQueue
_dataSource
_observers
T@"NSHashTable",&,N,V_observers
T@"<INSAnalyticsDataSource>",W,N,V_dataSource
ins_launchAppWithConnection:userActivityIdentifier:delegate:completionHandler:
ins_recordPreInteractionSignals
extensionService:prepareIntent:
extensionService:processDataUsingSHA256WithInMemorySalt:completionHandler:
extensionService:logEventWithType:context:contextNoCopy:
siriLanguageCodeForExtensionService:
extensionService:requiresHandlingCommand:completion:
extensionService:contextDictionaryForCommand:
extensionService:contextDictionaryForError:
analytics:needsToLogEventWithType:context:contextNoCopy:
analytics:contextDictionaryForCommand:
analytics:contextDictionaryForError:
completionHandlerForAppLaunchCommand:withCompletion:
initWithOptions:
groupIdentifier
commandIdentifiers
handleCommand:completionHandler:
handleCommand:fromRemoteDevice:completionHandler:
resetExternalResources
extensionContext
setAirPlayRouteIdentifiers:
airPlayRouteIdentifiers
_errorImpliesCloudRelay:
_isVoiceShortcutsRemoteExecutionUnavailable:
_extensionRequestWillStartForIntent:
_extensionRequestDidFinishForIntent:error:
_extensionInputItems
_updatedEventContextWithExtensionLoadType:wasPrewarmed:
_connectionForIntent:
_prewarmExtensionWithIntent:applicationIdentifier:command:completionHandler:
_logPrewarmDidEndWithCommand:applicationIdentifier:wasPrewarmed:completionHandler:
_logEventWithType:context:contextNoCopy:
_siriLanguageCode
_requiresHandlingCommand:completion:
_shouldPrepareAudioSessionForCommand:intent:
options
delegate
setDelegate:
_requestDelegateQueue
_currentConnection
_currentBundleIdForDisplay
_extensionContext
_options
_delegate
T@"NSDictionary",R,C,N,V_options
T@"<INSExtensionServiceDelegate>",W,N,V_delegate
T@"INExtensionContext",R,N,V_extensionContext
T@"NSArray",C,N
T@"NSArray",R,C,N
T@"NSString",R,C,N
ins_getIntentDefinitionsWithCompletionHandler:
_matchesIntentDefinition:
B16@0:8
@16@0:8
v24@0:8@16
v48@0:8@16@24@32@?40
q16@0:8
v40@0:8@?16q24@32
v32@0:8@?16@24
@24@0:8@?16
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@"NSString"16
@24@0:8@16
v16@0:8
@"NSString"
v32@0:8@16@?24
v40@0:8@16@24@?32
@32@0:8@16@24
@40@0:8@16@24@32
@"<INVCVoiceShortcutClient>"
@"INIntent"
@"INCExtensionProxy"
@"NSObject<OS_dispatch_queue>"
v36@0:8q16@24B32
@"<INSAnalyticsDataSource>"
@"NSHashTable"
v44@0:8@16q24@32B40
v44@0:8@"INSAnalytics"16q24@"NSDictionary"32B40
@"NSDictionary"32@0:8@"INSAnalytics"16@"SABaseCommand"24
@"NSDictionary"32@0:8@"INSAnalytics"16@"NSError"24
@?32@0:8@16@?24
@?<v@?B@"NSError">32@0:8@"SABaseCommand"16@?<v@?@"<SAAceCommand>"@"NSError">24
v32@0:8@16@24
@28@0:8@16B24
B48@0:8@16@24@32@?40
v44@0:8@16@24B32@?36
B32@0:8@16@24
@"INCExtensionConnection"
@"INExtensionContext"
@"NSDictionary"
@"<INSExtensionServiceDelegate>"
v24@0:8@?16
