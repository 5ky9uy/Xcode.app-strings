@(#)PROGRAM:IntentsServices  PROJECT:Intents-1
PrewarmApp
-[SABaseCommand(INSExtensionService) ins_sendIntent:toExtensionProxy:onQueue:completionHandler:]
metricsContext
SiriSerializedUserActivity
-[SAIntentGroupResolveAppForIntent(INSExtensionService) ins_resolveAppForIntent:completionHandler:]
appIdentifyingInfo
bundleId
SiriAceErrorDomain
kAFAssistantErrorDomain
IntentSlotResolutionResult
-[SAIntentGroupProcessIntent(INSExtensionService) ins_sendIntent:toExtensionProxy:onQueue:completionHandler:]
-[SAIntentGroupProcessIntent(INSExtensionService) ins_sendIntent:toExtensionProxy:onQueue:completionHandler:]_block_invoke
v16@?0@"SAIntentGroupProcessIntentCompleted"8
-[SAIntentGroupProcessIntent(INSExtensionService) _resolveIntentSlotsWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:]_block_invoke
v28@?0B8@"INIntent"12@"NSDictionary"20
-[SAIntentGroupProcessIntent(INSExtensionService) _confirmIntentWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:]
-[SAIntentGroupProcessIntent(INSExtensionService) _confirmIntentWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:]_block_invoke_2
-[SAIntentGroupProcessIntent(INSExtensionService) _confirmIntentWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:]_block_invoke
-[SAIntentGroupProcessIntent(INSExtensionService) _handleIntentWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:]
-[SAIntentGroupProcessIntent(INSExtensionService) _handleIntentWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:]_block_invoke_2
-[SAIntentGroupProcessIntent(INSExtensionService) _handleIntentWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:]_block_invoke
-[SAIntentGroupLaunchAppWithIntent(INSExtensionService) ins_launchAppWithConnection:delegate:completionHandler:]
-[SAIntentGroupConfirmIntent(INSExtensionService) ins_sendIntent:toExtensionProxy:onQueue:completionHandler:]
-[SAIntentGroupConfirmIntent(INSExtensionService) ins_sendIntent:toExtensionProxy:onQueue:completionHandler:]_block_invoke_2
v24@?0@"INIntentResponse"8@"INCExtensionError"16
v24@?0@"NSDictionary"8@"NSError"16
-[SAIntentGroupResolveIntentSlot(INSExtensionService) ins_sendIntent:toExtensionProxy:onQueue:completionHandler:]
-[SAIntentGroupResolveIntentSlot(INSExtensionService) ins_sendIntent:toExtensionProxy:onQueue:completionHandler:]_block_invoke_2
no data
v16@?0@"NSData"8
INSAnalyticsObserversQueue
FBSOpenApplicationErrorDomain
ExtensionLoadType
INSExtensionServiceQueue
v8@?0
com.apple.intents.INSExtensionService.request-delegate
-[INSExtensionService handleCommand:fromRemoteDevice:completionHandler:]_block_invoke
%@-%@-%@
v16@?0@"NSError"8
-[INSExtensionService handleCommand:fromRemoteDevice:completionHandler:]_block_invoke_2
v24@?0@"<SAAceCommand>"8@"NSError"16
v12@?0B8
v24@?0@"INCExtensionProxy"8@"NSError"16
v24@?0@"NSData"8@"NSError"16
Extension
%@.%@
Warm
Cold
-[INSExtensionService _updatedEventContextWithExtensionLoadType:wasPrewarmed:]
-[INSExtensionService _connectionForIntent:]
-[INSExtensionService _prewarmExtensionWithIntent:applicationIdentifier:command:completionHandler:]
no launchId
no extensionBundleId
-[INSExtensionService _prewarmExtensionWithIntent:applicationIdentifier:command:completionHandler:]_block_invoke
v20@?0B8@"NSError"12
-[INSExtensionService _logEventWithType:context:contextNoCopy:]
-[INSExtensionService _siriLanguageCode]
-[INSExtensionService _requiresHandlingCommand:completion:]
com.apple.siri.SiriAudioInternal.AudioInternalIntentExtension
-[INSExtensionService _shouldPrepareAudioSessionForCommand:intent:]
-[INSExtensionService analytics:contextDictionaryForCommand:]
-[INSExtensionService analytics:contextDictionaryForError:]
-[SAIntentGroupGetIntentDefinitions(INSExtensionService) ins_getIntentDefinitionsWithCompletionHandler:]
-[SAIntentGroupGetIntentDefinitions(INSExtensionService) _matchesIntentDefinition:]
INIntents
INIntentEntity
INIntentVerbAssociations
-[SAIntentGroupHandleIntent(INSExtensionService) ins_sendIntent:toExtensionProxy:onQueue:completionHandler:]
v24@?0@"INImage"8@?<v@?@"NSError">16
-[SAIntentGroupHandleIntent(INSExtensionService) ins_sendIntent:toExtensionProxy:onQueue:completionHandler:]_block_invoke_2
v24@?0@"INImage"8@"NSError"16
%s %@ delivered to the wrong service
%s ins_resolveAppForIntent: %@
%s appList = %@
%s intentSlotKeyPaths = %@
%s Beginning BatchSlotResolution with intent %@
%s BatchSlotResolution complete.
%s BatchSlotResolution completed in extensionProxy with updatedIntent %@
%s slotResolutionResult keyPath = `%@`, result = %@
%s All slots were resolved successfully. Moving to Confirm.
%s BatchSlotResolution needs dialog. Calling completion.
%s Beginning ConfirmIntent with intent %@
%s ConfirmIntent completed with response %@
%s ConfirmIntent successful. ShouldRunHandleIntent = %@
%s ConfirmIntent error. errorCode: %lu underlyingError: %@
%s Beginning HandleIntent with intent %@
%s HandleIntent completed with response %@
%s HandleIntent successful.
%s HandleIntent error. errorCode: %lu underlyingError: %@
%s ins_launchAppWithConnection: %@
%s donotdismiss: %d
%s intent.backingStore = %@
%s intentResponse.backingStore = %@
%s intentSlotKeyPath = %@
%s resolutionResultData = %@
%s Received handleCommand: %@
%s Examining AirPlay routes passed with INPlayMediaIntent airPlayRouteIds: %@, hashedRouteUIDs: %@, extensionContextAirPlayRouteIdentifiers: %@
%s Setting intent airPlayRouteIds from extension context: %@
%s Setting intent airPlayRouteIds for non-INPlayMediaIntent: %@
%s Setting intent airPlayRouteIds: %@
%s Unable to get INIntent from command %@
%s Generated intent object %@
%s Raw intent = %@
%s Not prewarm, continuing...
%s This is a remote device, and the intent type is custom. Checking for version incompatibility if the intent is sent from a remote device...
%s Intent was sent from an old device with (intentVersionHash=%llu, aceVersion=%@), current device has (intentVersionHash=%llu, aceVersion=%@), intent: %@
%s ins_recordPreInteractionSignals for command: %@
%s Raw intent ID = %@
%s Start digesting raw intent ID with in-memory salt...
%s Finished digesting raw intent ID with in-memory salt.
%s Set facade intent identifier = %@
%s Unable to generate facade intent ID due to %@
%s About to prepare intent...
%s Finished preparing intent
%s Setting extension input items: %@
%s Extension Request timed out after %{public}f seconds for command %@
%s Configured timeout and interruption handlers
%s Resuming connection for intent with identifier: %@
%s Error resuming connection for intent with id: %@ - %@
%s Resumed connection for intent with identifier: %@
%s Created intent executor for intent with id %@. Sending intent for execution to execution proxy.
%s Prepared to start playback for %@
%s Failed to prepare for audio playback
%s Submitting pkdBlock
%s Extension service delegate responds to extensionService:processDataUsingSHA256WithInMemorySalt:completionHandler:
%s Extension service delegate does not respond to extensionService:processDataUsingSHA256WithInMemorySalt:completionHandler:
%s Extension load type = %@
%s Getting connection for intent: %@
%s Using the current connection %@ because the intent is nil.
%s Using the current connection %@ because the intent identifier is nil.
%s Replacing the current connection %@ because the intent identifier is %@.
%s Using the current connection %@ because the intent identifier matches intent identifier: %@.
%s Returning connection: %@
%s About to prewarm an extension for %@ (%@:%@) without an identifier. Assigning a new identifier: %@
%s Error finding extension for prewarming: %@
%s Prewarmed extension: %@
%s Should prewarm app: %hhd
%s Prewarmed app completed successfully
%s Prewarmed app failed with error: %@
%s Is prewarm: %@.
%s Extension service delegate does not respond to extensionService:logEventWithType:context:contextNoCopy:
%s Extension service delegate does not respond to siriLanguageCodeForExtensionService:
%s Extension service delegate does not respond to extensionService:requiresHandlingCommand:completion:
%s Suppressing audio session preparation for internal media extension
%s Extension service delegate does not respond to extensionService:contextDictionaryForCommand:
%s Extension service delegate does not respond to extensionService:contextDictionaryForError:
%s Finding intent definitions for GetIntentDefinition query: %@
%s Checking if Intent Definition at %@ matches query
%s Intent Definition at %@ has no INIntents section
%s Intent Definition at %@ has no entity or verb section
%s Intent Definition at %@ matches current request
%s Intent Definition at %@ does not match
%s Unable to retrieve image data = %@
softlink:o:path:/System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices
softlink:o:path:/System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices
PrewarmAppAdditions
INSExtensionService
AudioSessionPreparation
INSDeviceInfo
INSDeviceInfoMutating
NSObject
INSExtensionServiceIntentExecutor
INSAnalytics
SignalGatheringAdditions
INSAnalyticsObserver
INSAnalyticsDataSource
INSAppLaunchCommandDelegate
T@"NSArray",C,N
T#,R
_audioSessionID
T@"<INSExtensionServiceDelegate>",W,N,V_delegate
_intent
T@"INCExtensionProxy",&,N,V_extensionProxy
allKeys
T@"INIntent",&,N,V_intent
containsObject:
T@"NSDictionary",R,C,N,V_options
extensionService:prepareIntent:
T@"NSString",&,N,Sins_setJSONEncodedIntent:
hashedRouteUIDs
T@"NSString",R,C
initWithIntent:
T@"NSString",R,N,V_aceVersion
ins_recordPreInteractionSignals
TQ,R
isProxy
UUIDString
options
_JSONDictionaryRepresentationForIntent:parameterName:
release
_airPlayRouteIdentifiers
setStepResults:
_confirmIntentWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:
underlyingError
.cxx_destruct
T@"NSHashTable",&,N,V_observers
T@"<INSAnalyticsDataSource>",W,N,V_dataSource
_extensionProxy
T@"<INVCVoiceShortcutClient>",&,N,V_voiceShortcutClient
airPlayRouteIds
T@"INExtensionContext",R,N,V_extensionContext
base64EncodedStringWithOptions:
T@"NSArray",R,C,N
extensionService:extensionRequestDidFinishForApplication:error:
T@"NSObject<OS_dispatch_queue>",N,V_queue
groupIdentifier
T@"NSString",C,N,V_mutableAceVersion
initWithFormat:
T@"NSString",R,C,N
ins_invokeErrorCompletionHandler:withErrorCode:underlyingError:
T@"SAIntentGroupProtobufMessage",&,N,Sins_setProtobufEncodedIntent:
internalSignals
UUID
newWithBuilder:
_JSONDictionaryRepresentation
queries
_aceVersion
removeObserver:
_className
sharedAnalytics
_connection
_connectionForIntent:
_currentBundleIdForDisplay
_currentConnection
_dataSource
_delegate
_errorImpliesCloudRelay:
_executionContext
_extension
_extensionContext
_extensionInputItems
_extensionRequestDidFinishForIntent:error:
_extensionRequestWillStartForIntent:
_handleIntentWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:
_imageSize
_init
_initWithIntent:
_intentInstanceDescription
_intentResponseCode
_intents_bundleIdForDisplay
_isExtensionBeingDebugged
_isVoiceShortcutsRemoteExecutionUnavailable:
_logEventWithType:context:contextNoCopy:
_logPrewarmDidEndWithCommand:applicationIdentifier:wasPrewarmed:completionHandler:
_matchesIntentDefinition:
_metadata
_mutableAceVersion
_observerQueue
_observers
_options
_payloadResponseTypeName
_prewarmExtensionWithIntent:applicationIdentifier:command:completionHandler:
_queue
_recordDeviceIdentifier
_recordDeviceUID
_recordRoute
_requestDelegateQueue
_requiresHandlingCommand:completion:
_resolutionResultWithData:slotDescription:
_resolveIntentSlotsWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:
_retrieveImageDataWithReply:
_setAirPlayRouteIdentifiers:
_setAirPlayRouteIds:
_setAudioSessionID:
_setExecutionContext:
_setImageSize:
_setInteraction:donate:
_setLaunchId:
_setRecordDeviceIdentifier:
_setRecordDeviceUID:
_setRecordRoute:
_shouldPrepareAudioSessionForCommand:intent:
_siriLanguageCode
_transaction
_type
_updatedEventContextWithExtensionLoadType:wasPrewarmed:
_voiceShortcutClient
aceId
aceObjectWithDictionary:
aceVersion
activityType
addCacheableObject:
addObject:
addObserver:
airPlayRouteIdentifiers
allObjects
analytics:contextDictionaryForCommand:
analytics:contextDictionaryForError:
analytics:needsToLogEventWithType:context:contextNoCopy:
anyObject
appProxy
appsList
archivedDataWithRootObject:requiringSecureCoding:error:
arrayByAddingObjectsFromArray:
arrayWithObjects:count:
autorelease
backingStore
caseInsensitiveCompare:
class
code
commandIdentifiers
completionHandlerForAppLaunchCommand:withCompletion:
componentsSeparatedByString:
confirmIntentWithCompletionHandler:
conformsToProtocol:
contextDictionaryForCommand:
contextDictionaryForError:
copy
count
countByEnumeratingWithState:objects:count:
counterpartIdentifiersForLocalIdentifier:
currentIntentResponse
currentUserActivity
data
dataSource
dataUsingEncoding:
debugDescription
delegate
description
dictionary
dictionaryWithObjects:forKeys:count:
doNotDismissSiri
domain
entity
errorCode
errorWithDomain:code:userInfo:
extensionBundleId
extensionContext
extensionInputItems
extensionProxy
extensionService:contextDictionaryForCommand:
extensionService:contextDictionaryForError:
extensionService:extensionRequestWillStartForApplication:
extensionService:handleFailedStartPlaybackWithDestination:completion:
extensionService:logEventWithType:context:contextNoCopy:
extensionService:prepareForStartPlaybackWithDestination:intent:completion:
extensionService:processDataUsingSHA256WithInMemorySalt:completionHandler:
extensionService:requiresHandlingCommand:completion:
extensionService:suspendTimeout:
extensionService:wantsToCacheImage:
facadePropertyName
floatValue
handleCommand:completionHandler:
handleCommand:fromRemoteDevice:completionHandler:
handleIntentWithCompletionHandler:
handledIntent
handledIntentResponse
hash
hashTableWithWeakObjects
identifier
if_JSONStringRepresentation
if_hexStringFromData:
if_setObjectIfNonNil:forKey:
init
initWithAceVersion:
initWithActivityType:
initWithCapacity:
initWithContentsOfURL:
initWithContentsOfURL:options:error:
initWithData:
initWithErrorCode:
initWithIntent:extensionProxy:queue:
initWithIntent:response:
initWithOptions:
initWithType:intent:intentResponse:userActivities:
initWithVoiceShortcutClient:intent:
ins_aceIntent
ins_aceIntentResponse
ins_afAnalyticsContext
ins_analyticsBeginEventType
ins_analyticsEndEventType
ins_getIntentDefinitionsWithCompletionHandler:
ins_invokeErrorCompletionHandler:forUnderlyingError:
ins_isJSONPayload
ins_jsonEncodedIntent
ins_jsonEncodedIntentResponse
ins_launchAppWithConnection:delegate:completionHandler:
ins_launchAppWithConnection:userActivityIdentifier:delegate:completionHandler:
ins_protobufEncodedIntent
ins_protobufEncodedIntentResponse
ins_resolveAppForIntent:completionHandler:
ins_sendIntent:toExtensionProxy:onQueue:completionHandler:
ins_setJSONEncodedIntent:
ins_setProtobufEncodedIntent:
ins_shouldPrepareAudioSession
ins_shouldPrewarmApp
ins_shouldUseExtendedFlowTimeout
intent
intentCodableDescriptionWithIntentClassName:
intentId
intentResponse
intentSlotKeyPath
intentSlotKeyPaths
interaction
isEqual:
isEqualToString:
isKindOfClass:
isMemberOfClass:
jsonEncodedHandledIntent
jsonEncodedHandledIntentResponse
jsonEncodedIntent
jsonEncodedIntentResponse
launchAppInBackground:restrictAppsToCarPlay:userActivityIdentifier:completionHandler:
launchAppInBackground:restrictAppsToCarPlay:userActivityIdentifier:retainsSiri:completionHandler:
launchId
localizedDescription
logEventWithType:context:contextNoCopy:
metricsContext
mutableAceVersion
mutableCopy
objectAtIndexedSubscript:
objectForKeyedSubscript:
observers
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
playbackQueueLocation
prewarmAppWithIntent:completionHandler:
privatePlayMediaIntentData
queue
removeObject:
requestTimeoutInterval
reset
resetExternalResources
resolutionResultClass
resolveIntentSlotKeyPath:completionHandler:
resolveIntentSlotKeyPaths:completionHandler:
respondsToSelector:
resumeWithCompletionHandler:
retain
retainCount
self
sendAceCommand:completionHandler:
sendAceCommandDictionary:completion:
setAceVersion:
setAirPlayRouteIdentifiers:
setAppsList:
setBase64EncodedIntent:
setBase64EncodedProtobufMessage:
setBatchSlotResolutionResult:
setConfirmIntentCompleted:
setData:
setDataSource:
setDelegate:
setErrorCode:
setExtensionInputItems:
setExtensionProxy:
setHandleIntentCompleted:
setHandledIntent:
setIdentifier:
setImageProcessingHandler:
setIntent:
setIntentDefinition:
setIntentDefinitionInfos:
setIntentHandlingStatus:
setIntentResponse:
setIntentSlotResolutionResult:
setInterruptionHandler:
setJsonEncodedHandledIntent:
setJsonEncodedIntent:
setJsonEncodedIntentResponse:
setJsonEncodedIntentSlotResolutionResult:
setJsonEncodedSlotResolutionResult:
setKeyPath:
setLastAttemptedStep:
setMutableAceVersion:
setObject:forKey:
setObservers:
setQueue:
setRefId:
setResponseHandler:
setSlotResolutionMap:
setState:
setTimeoutHandler:
setTypeName:
setUserInfo:
setVoiceShortcutClient:
setWithArray:
sharedCache
sharedResolver
shouldLaunchAppInBackgroundWithIntent:intentResponse:
shouldRunHandleIntent
siriLanguageCodeForExtensionService:
slotByName:
stringWithFormat:
superclass
type
typeAsString:
typeName
unsignedLongValue
userActivity
userActivityIdentifier
userActivityWithIdentifier:
userInfo
valueForKey:
verb
versioningHash
voiceShortcutClient
zone
B16@0:8
@16@0:8
v24@0:8@16
v48@0:8@16@24@32@?40
q16@0:8
v40@0:8@?16q24@32
v32@0:8@?16@24
@24@0:8@?16
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@"NSString"16
@24@0:8@16
v16@0:8
@"NSString"
v32@0:8@16@?24
v40@0:8@16@24@?32
@32@0:8@16@24
@40@0:8@16@24@32
@"<INVCVoiceShortcutClient>"
@"INIntent"
@"INCExtensionProxy"
@"NSObject<OS_dispatch_queue>"
v36@0:8q16@24B32
@"<INSAnalyticsDataSource>"
@"NSHashTable"
v44@0:8@16q24@32B40
v44@0:8@"INSAnalytics"16q24@"NSDictionary"32B40
@"NSDictionary"32@0:8@"INSAnalytics"16@"SABaseCommand"24
@"NSDictionary"32@0:8@"INSAnalytics"16@"NSError"24
@?32@0:8@16@?24
@?<v@?B@"NSError">32@0:8@"SABaseCommand"16@?<v@?@"<SAAceCommand>"@"NSError">24
v32@0:8@16@24
@28@0:8@16B24
B48@0:8@16@24@32@?40
v44@0:8@16@24B32@?36
B32@0:8@16@24
@"INCExtensionConnection"
@"INExtensionContext"
@"NSDictionary"
@"<INSExtensionServiceDelegate>"
v24@0:8@?16
@(#)PROGRAM:IntentsServices  PROJECT:Intents-1
PrewarmApp
-[SABaseCommand(INSExtensionService) ins_sendIntent:toExtensionProxy:onQueue:completionHandler:]
metricsContext
SiriSerializedUserActivity
-[SAIntentGroupResolveAppForIntent(INSExtensionService) ins_resolveAppForIntent:completionHandler:]
appIdentifyingInfo
bundleId
SiriAceErrorDomain
kAFAssistantErrorDomain
IntentSlotResolutionResult
-[SAIntentGroupProcessIntent(INSExtensionService) ins_sendIntent:toExtensionProxy:onQueue:completionHandler:]
-[SAIntentGroupProcessIntent(INSExtensionService) ins_sendIntent:toExtensionProxy:onQueue:completionHandler:]_block_invoke
v16@?0@"SAIntentGroupProcessIntentCompleted"8
-[SAIntentGroupProcessIntent(INSExtensionService) _resolveIntentSlotsWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:]_block_invoke
v28@?0B8@"INIntent"12@"NSDictionary"20
-[SAIntentGroupProcessIntent(INSExtensionService) _confirmIntentWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:]
-[SAIntentGroupProcessIntent(INSExtensionService) _confirmIntentWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:]_block_invoke_2
-[SAIntentGroupProcessIntent(INSExtensionService) _confirmIntentWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:]_block_invoke
-[SAIntentGroupProcessIntent(INSExtensionService) _handleIntentWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:]
-[SAIntentGroupProcessIntent(INSExtensionService) _handleIntentWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:]_block_invoke_2
-[SAIntentGroupProcessIntent(INSExtensionService) _handleIntentWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:]_block_invoke
-[SAIntentGroupLaunchAppWithIntent(INSExtensionService) ins_launchAppWithConnection:delegate:completionHandler:]
-[SAIntentGroupConfirmIntent(INSExtensionService) ins_sendIntent:toExtensionProxy:onQueue:completionHandler:]
-[SAIntentGroupConfirmIntent(INSExtensionService) ins_sendIntent:toExtensionProxy:onQueue:completionHandler:]_block_invoke_3
v24@?0@"INIntentResponse"8@"INCExtensionError"16
v24@?0@"NSDictionary"8@"NSError"16
-[SAIntentGroupResolveIntentSlot(INSExtensionService) ins_sendIntent:toExtensionProxy:onQueue:completionHandler:]
-[SAIntentGroupResolveIntentSlot(INSExtensionService) ins_sendIntent:toExtensionProxy:onQueue:completionHandler:]_block_invoke_3
no data
v16@?0@"NSData"8
INSAnalyticsObserversQueue
FBSOpenApplicationErrorDomain
ExtensionLoadType
INSExtensionServiceQueue
v8@?0
com.apple.intents.INSExtensionService.request-delegate
-[INSExtensionService handleCommand:fromRemoteDevice:completionHandler:]_block_invoke
%@-%@-%@
v16@?0@"NSError"8
-[INSExtensionService handleCommand:fromRemoteDevice:completionHandler:]_block_invoke_2
v24@?0@"<SAAceCommand>"8@"NSError"16
-[INSExtensionService handleCommand:fromRemoteDevice:completionHandler:]_block_invoke_3
v12@?0B8
v24@?0@"INCExtensionProxy"8@"NSError"16
v24@?0@"NSData"8@"NSError"16
Extension
%@.%@
Warm
Cold
-[INSExtensionService _updatedEventContextWithExtensionLoadType:wasPrewarmed:]
-[INSExtensionService _connectionForIntent:]
-[INSExtensionService _prewarmExtensionWithIntent:applicationIdentifier:command:completionHandler:]
no launchId
no extensionBundleId
-[INSExtensionService _prewarmExtensionWithIntent:applicationIdentifier:command:completionHandler:]_block_invoke
v20@?0B8@"NSError"12
-[INSExtensionService _logEventWithType:context:contextNoCopy:]
-[INSExtensionService _siriLanguageCode]
-[INSExtensionService _requiresHandlingCommand:completion:]
com.apple.siri.SiriAudioInternal.AudioInternalIntentExtension
-[INSExtensionService _shouldPrepareAudioSessionForCommand:intent:]
-[INSExtensionService analytics:contextDictionaryForCommand:]
-[INSExtensionService analytics:contextDictionaryForError:]
-[SAIntentGroupGetIntentDefinitions(INSExtensionService) ins_getIntentDefinitionsWithCompletionHandler:]
-[SAIntentGroupGetIntentDefinitions(INSExtensionService) _matchesIntentDefinition:]
INIntents
INIntentEntity
INIntentVerbAssociations
-[SAIntentGroupHandleIntent(INSExtensionService) ins_sendIntent:toExtensionProxy:onQueue:completionHandler:]
v24@?0@"INImage"8@?<v@?@"NSError">16
-[SAIntentGroupHandleIntent(INSExtensionService) ins_sendIntent:toExtensionProxy:onQueue:completionHandler:]_block_invoke_3
v24@?0@"INImage"8@"NSError"16
-[SAIntentGroupHandleIntent(INSExtensionService) ins_sendIntent:toExtensionProxy:onQueue:completionHandler:]_block_invoke_2
%s %@ delivered to the wrong service
%s ins_resolveAppForIntent: %@
%s appList = %@
%s intentSlotKeyPaths = %@
%s Beginning BatchSlotResolution with intent %@
%s BatchSlotResolution complete.
%s BatchSlotResolution completed in extensionProxy with updatedIntent %@
%s slotResolutionResult keyPath = `%@`, result = %@
%s All slots were resolved successfully. Moving to Confirm.
%s BatchSlotResolution needs dialog. Calling completion.
%s Beginning ConfirmIntent with intent %@
%s ConfirmIntent completed with response %@
%s ConfirmIntent successful. ShouldRunHandleIntent = %@
%s ConfirmIntent error. errorCode: %lu underlyingError: %@
%s Beginning HandleIntent with intent %@
%s HandleIntent completed with response %@
%s HandleIntent successful.
%s HandleIntent error. errorCode: %lu underlyingError: %@
%s ins_launchAppWithConnection: %@
%s donotdismiss: %d
%s intent.backingStore = %@
%s intentResponse.backingStore = %@
%s intentSlotKeyPath = %@
%s resolutionResultData = %@
%s Received handleCommand: %@
%s Examining AirPlay routes passed with INPlayMediaIntent airPlayRouteIds: %@, hashedRouteUIDs: %@, extensionContextAirPlayRouteIdentifiers: %@
%s Setting intent airPlayRouteIds from extension context: %@
%s Setting intent airPlayRouteIds for non-INPlayMediaIntent: %@
%s Setting intent airPlayRouteIds: %@
%s Unable to get INIntent from command %@
%s Generated intent object %@
%s Raw intent = %@
%s Not prewarm, continuing...
%s This is a remote device, and the intent type is custom. Checking for version incompatibility if the intent is sent from a remote device...
%s Intent was sent from an old device with (intentVersionHash=%llu, aceVersion=%@), current device has (intentVersionHash=%llu, aceVersion=%@), intent: %@
%s ins_recordPreInteractionSignals for command: %@
%s Raw intent ID = %@
%s Start digesting raw intent ID with in-memory salt...
%s Finished digesting raw intent ID with in-memory salt.
%s Set facade intent identifier = %@
%s Unable to generate facade intent ID due to %@
%s About to prepare intent...
%s Finished preparing intent
%s Setting extension input items: %@
%s Extension Request timed out after %{public}f seconds for command %@
%s Configured timeout and interruption handlers
%s Resuming connection for intent with identifier: %@
%s Error resuming connection for intent with id: %@ - %@
%s Resumed connection for intent with identifier: %@
%s Created intent executor for intent with id %@. Sending intent for execution to execution proxy.
%s Prepared to start playback for %@
%s Failed to prepare for audio playback
%s Submitting pkdBlock
%s Extension service delegate responds to extensionService:processDataUsingSHA256WithInMemorySalt:completionHandler:
%s Extension service delegate does not respond to extensionService:processDataUsingSHA256WithInMemorySalt:completionHandler:
%s Extension load type = %@
%s Getting connection for intent: %@
%s Using the current connection %@ because the intent is nil.
%s Using the current connection %@ because the intent identifier is nil.
%s Replacing the current connection %@ because the intent identifier is %@.
%s Using the current connection %@ because the intent identifier matches intent identifier: %@.
%s Returning connection: %@
%s About to prewarm an extension for %@ (%@:%@) without an identifier. Assigning a new identifier: %@
%s Error finding extension for prewarming: %@
%s Prewarmed extension: %@
%s Should prewarm app: %hhd
%s Prewarmed app completed successfully
%s Prewarmed app failed with error: %@
%s Is prewarm: %@.
%s Extension service delegate does not respond to extensionService:logEventWithType:context:contextNoCopy:
%s Extension service delegate does not respond to siriLanguageCodeForExtensionService:
%s Extension service delegate does not respond to extensionService:requiresHandlingCommand:completion:
%s Suppressing audio session preparation for internal media extension
%s Extension service delegate does not respond to extensionService:contextDictionaryForCommand:
%s Extension service delegate does not respond to extensionService:contextDictionaryForError:
%s Finding intent definitions for GetIntentDefinition query: %@
%s Checking if Intent Definition at %@ matches query
%s Intent Definition at %@ has no INIntents section
%s Intent Definition at %@ has no entity or verb section
%s Intent Definition at %@ matches current request
%s Intent Definition at %@ does not match
%s Unable to retrieve image data = %@
softlink:o:path:/System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices
softlink:o:path:/System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices
PrewarmAppAdditions
INSExtensionService
AudioSessionPreparation
INSDeviceInfo
INSDeviceInfoMutating
NSObject
INSExtensionServiceIntentExecutor
INSAnalytics
SignalGatheringAdditions
INSAnalyticsObserver
INSAnalyticsDataSource
INSAppLaunchCommandDelegate
T@"NSArray",C,N
T#,R
_audioSessionID
T@"<INSExtensionServiceDelegate>",W,N,V_delegate
_intent
T@"INCExtensionProxy",&,N,V_extensionProxy
allKeys
T@"INIntent",&,N,V_intent
containsObject:
T@"NSDictionary",R,C,N,V_options
extensionService:prepareIntent:
T@"NSString",&,N,Sins_setJSONEncodedIntent:
hashedRouteUIDs
T@"NSString",R,C
initWithIntent:
T@"NSString",R,N,V_aceVersion
ins_recordPreInteractionSignals
TQ,R
isProxy
UUIDString
options
_JSONDictionaryRepresentationForIntent:parameterName:
release
_airPlayRouteIdentifiers
setStepResults:
_confirmIntentWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:
underlyingError
.cxx_destruct
T@"NSHashTable",&,N,V_observers
T@"<INSAnalyticsDataSource>",W,N,V_dataSource
_extensionProxy
T@"<INVCVoiceShortcutClient>",&,N,V_voiceShortcutClient
airPlayRouteIds
T@"INExtensionContext",R,N,V_extensionContext
base64EncodedStringWithOptions:
T@"NSArray",R,C,N
extensionService:extensionRequestDidFinishForApplication:error:
T@"NSObject<OS_dispatch_queue>",N,V_queue
groupIdentifier
T@"NSString",C,N,V_mutableAceVersion
initWithFormat:
T@"NSString",R,C,N
ins_invokeErrorCompletionHandler:withErrorCode:underlyingError:
T@"SAIntentGroupProtobufMessage",&,N,Sins_setProtobufEncodedIntent:
internalSignals
UUID
newWithBuilder:
_JSONDictionaryRepresentation
queries
_aceVersion
removeObserver:
_className
sharedAnalytics
_connection
_connectionForIntent:
_currentBundleIdForDisplay
_currentConnection
_dataSource
_delegate
_errorImpliesCloudRelay:
_executionContext
_extension
_extensionContext
_extensionInputItems
_extensionRequestDidFinishForIntent:error:
_extensionRequestWillStartForIntent:
_handleIntentWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:
_imageSize
_init
_initWithIntent:
_intentInstanceDescription
_intentResponseCode
_intents_bundleIdForDisplay
_isExtensionBeingDebugged
_isVoiceShortcutsRemoteExecutionUnavailable:
_logEventWithType:context:contextNoCopy:
_logPrewarmDidEndWithCommand:applicationIdentifier:wasPrewarmed:completionHandler:
_matchesIntentDefinition:
_metadata
_mutableAceVersion
_observerQueue
_observers
_options
_payloadResponseTypeName
_prewarmExtensionWithIntent:applicationIdentifier:command:completionHandler:
_queue
_recordDeviceIdentifier
_recordDeviceUID
_recordRoute
_requestDelegateQueue
_requiresHandlingCommand:completion:
_resolutionResultWithData:slotDescription:
_resolveIntentSlotsWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:
_retrieveImageDataWithReply:
_setAirPlayRouteIdentifiers:
_setAirPlayRouteIds:
_setAudioSessionID:
_setExecutionContext:
_setImageSize:
_setInteraction:donate:
_setLaunchId:
_setRecordDeviceIdentifier:
_setRecordDeviceUID:
_setRecordRoute:
_shouldPrepareAudioSessionForCommand:intent:
_siriLanguageCode
_transaction
_type
_updatedEventContextWithExtensionLoadType:wasPrewarmed:
_voiceShortcutClient
aceId
aceObjectWithDictionary:
aceVersion
activityType
addCacheableObject:
addObject:
addObserver:
airPlayRouteIdentifiers
allObjects
analytics:contextDictionaryForCommand:
analytics:contextDictionaryForError:
analytics:needsToLogEventWithType:context:contextNoCopy:
anyObject
appProxy
appsList
archivedDataWithRootObject:requiringSecureCoding:error:
arrayByAddingObjectsFromArray:
arrayWithObjects:count:
autorelease
backingStore
caseInsensitiveCompare:
class
code
commandIdentifiers
completionHandlerForAppLaunchCommand:withCompletion:
componentsSeparatedByString:
confirmIntentWithCompletionHandler:
conformsToProtocol:
contextDictionaryForCommand:
contextDictionaryForError:
copy
count
countByEnumeratingWithState:objects:count:
counterpartIdentifiersForLocalIdentifier:
currentIntentResponse
currentUserActivity
data
dataSource
dataUsingEncoding:
debugDescription
delegate
description
dictionary
dictionaryWithObjects:forKeys:count:
doNotDismissSiri
domain
entity
errorCode
errorWithDomain:code:userInfo:
extensionBundleId
extensionContext
extensionInputItems
extensionProxy
extensionService:contextDictionaryForCommand:
extensionService:contextDictionaryForError:
extensionService:extensionRequestWillStartForApplication:
extensionService:handleFailedStartPlaybackWithDestination:completion:
extensionService:logEventWithType:context:contextNoCopy:
extensionService:prepareForStartPlaybackWithDestination:intent:completion:
extensionService:processDataUsingSHA256WithInMemorySalt:completionHandler:
extensionService:requiresHandlingCommand:completion:
extensionService:suspendTimeout:
extensionService:wantsToCacheImage:
facadePropertyName
floatValue
handleCommand:completionHandler:
handleCommand:fromRemoteDevice:completionHandler:
handleIntentWithCompletionHandler:
handledIntent
handledIntentResponse
hash
hashTableWithWeakObjects
identifier
if_JSONStringRepresentation
if_hexStringFromData:
if_setObjectIfNonNil:forKey:
init
initWithAceVersion:
initWithActivityType:
initWithCapacity:
initWithContentsOfURL:
initWithContentsOfURL:options:error:
initWithData:
initWithErrorCode:
initWithIntent:extensionProxy:queue:
initWithIntent:response:
initWithOptions:
initWithType:intent:intentResponse:userActivities:
initWithVoiceShortcutClient:intent:
ins_aceIntent
ins_aceIntentResponse
ins_afAnalyticsContext
ins_analyticsBeginEventType
ins_analyticsEndEventType
ins_getIntentDefinitionsWithCompletionHandler:
ins_invokeErrorCompletionHandler:forUnderlyingError:
ins_isJSONPayload
ins_jsonEncodedIntent
ins_jsonEncodedIntentResponse
ins_launchAppWithConnection:delegate:completionHandler:
ins_launchAppWithConnection:userActivityIdentifier:delegate:completionHandler:
ins_protobufEncodedIntent
ins_protobufEncodedIntentResponse
ins_resolveAppForIntent:completionHandler:
ins_sendIntent:toExtensionProxy:onQueue:completionHandler:
ins_setJSONEncodedIntent:
ins_setProtobufEncodedIntent:
ins_shouldPrepareAudioSession
ins_shouldPrewarmApp
ins_shouldUseExtendedFlowTimeout
intent
intentCodableDescriptionWithIntentClassName:
intentId
intentResponse
intentSlotKeyPath
intentSlotKeyPaths
interaction
isEqual:
isEqualToString:
isKindOfClass:
isMemberOfClass:
jsonEncodedHandledIntent
jsonEncodedHandledIntentResponse
jsonEncodedIntent
jsonEncodedIntentResponse
launchAppInBackground:restrictAppsToCarPlay:userActivityIdentifier:completionHandler:
launchAppInBackground:restrictAppsToCarPlay:userActivityIdentifier:retainsSiri:completionHandler:
launchId
localizedDescription
logEventWithType:context:contextNoCopy:
metricsContext
mutableAceVersion
mutableCopy
objectAtIndexedSubscript:
objectForKeyedSubscript:
observers
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
playbackQueueLocation
prewarmAppWithIntent:completionHandler:
privatePlayMediaIntentData
queue
removeObject:
requestTimeoutInterval
reset
resetExternalResources
resolutionResultClass
resolveIntentSlotKeyPath:completionHandler:
resolveIntentSlotKeyPaths:completionHandler:
respondsToSelector:
resumeWithCompletionHandler:
retain
retainCount
self
sendAceCommand:completionHandler:
sendAceCommandDictionary:completion:
setAceVersion:
setAirPlayRouteIdentifiers:
setAppsList:
setBase64EncodedIntent:
setBase64EncodedProtobufMessage:
setBatchSlotResolutionResult:
setConfirmIntentCompleted:
setData:
setDataSource:
setDelegate:
setErrorCode:
setExtensionInputItems:
setExtensionProxy:
setHandleIntentCompleted:
setHandledIntent:
setIdentifier:
setImageProcessingHandler:
setIntent:
setIntentDefinition:
setIntentDefinitionInfos:
setIntentHandlingStatus:
setIntentResponse:
setIntentSlotResolutionResult:
setInterruptionHandler:
setJsonEncodedHandledIntent:
setJsonEncodedIntent:
setJsonEncodedIntentResponse:
setJsonEncodedIntentSlotResolutionResult:
setJsonEncodedSlotResolutionResult:
setKeyPath:
setLastAttemptedStep:
setMutableAceVersion:
setObject:forKey:
setObservers:
setQueue:
setRefId:
setResponseHandler:
setSlotResolutionMap:
setState:
setTimeoutHandler:
setTypeName:
setUserInfo:
setVoiceShortcutClient:
setWithArray:
sharedCache
sharedResolver
shouldLaunchAppInBackgroundWithIntent:intentResponse:
shouldRunHandleIntent
siriLanguageCodeForExtensionService:
slotByName:
stringWithFormat:
superclass
type
typeAsString:
typeName
unsignedLongValue
userActivity
userActivityIdentifier
userActivityWithIdentifier:
userInfo
valueForKey:
verb
versioningHash
voiceShortcutClient
zone
B16@0:8
@16@0:8
v24@0:8@16
v48@0:8@16@24@32@?40
q16@0:8
v40@0:8@?16q24@32
v32@0:8@?16@24
@24@0:8@?16
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@"NSString"16
@24@0:8@16
v16@0:8
@"NSString"
v32@0:8@16@?24
v40@0:8@16@24@?32
@32@0:8@16@24
@40@0:8@16@24@32
@"<INVCVoiceShortcutClient>"
@"INIntent"
@"INCExtensionProxy"
@"NSObject<OS_dispatch_queue>"
v36@0:8q16@24B32
@"<INSAnalyticsDataSource>"
@"NSHashTable"
v44@0:8@16q24@32B40
v44@0:8@"INSAnalytics"16q24@"NSDictionary"32B40
@"NSDictionary"32@0:8@"INSAnalytics"16@"SABaseCommand"24
@"NSDictionary"32@0:8@"INSAnalytics"16@"NSError"24
@?32@0:8@16@?24
@?<v@?B@"NSError">32@0:8@"SABaseCommand"16@?<v@?@"<SAAceCommand>"@"NSError">24
v32@0:8@16@24
@28@0:8@16B24
B48@0:8@16@24@32@?40
v44@0:8@16@24B32@?36
B32@0:8@16@24
@"INCExtensionConnection"
@"INExtensionContext"
@"NSDictionary"
@"<INSExtensionServiceDelegate>"
v24@0:8@?16
