@(#)PROGRAM:IntentsServices  PROJECT:Intents-1
metricsContext
-[SABaseCommand(INSExtensionService) ins_sendIntent:toExtensionProxy:onQueue:completionHandler:]
SiriSerializedUserActivity
-[SAIntentGroupResolveAppForIntent(INSExtensionService) ins_resolveAppForIntent:completionHandler:]
bundleId
appIdentifyingInfo
SiriAceErrorDomain
kAFAssistantErrorDomain
-[SAIntentGroupProcessIntent(INSExtensionService) _handleIntentWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:]
-[SAIntentGroupProcessIntent(INSExtensionService) _handleIntentWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:]_block_invoke_2
-[SAIntentGroupProcessIntent(INSExtensionService) _handleIntentWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:]_block_invoke
-[SAIntentGroupProcessIntent(INSExtensionService) _confirmIntentWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:]
-[SAIntentGroupProcessIntent(INSExtensionService) _confirmIntentWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:]_block_invoke_2
-[SAIntentGroupProcessIntent(INSExtensionService) _confirmIntentWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:]_block_invoke
v28@?0B8@"INIntent"12@"NSDictionary"20
-[SAIntentGroupProcessIntent(INSExtensionService) _resolveIntentSlotsWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:]_block_invoke
IntentSlotResolutionResult
-[SAIntentGroupProcessIntent(INSExtensionService) ins_sendIntent:toExtensionProxy:onQueue:completionHandler:]
v16@?0@"SAIntentGroupProcessIntentCompleted"8
-[SAIntentGroupProcessIntent(INSExtensionService) ins_sendIntent:toExtensionProxy:onQueue:completionHandler:]_block_invoke
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ASKit_Sim/ASKit-649.8/IntentsServices/Sources/Extension Service/Commands/SAIntentGroupLaunchAppWithIntent+INSExtensionService.m
-[SAIntentGroupConfirmIntent(INSExtensionService) ins_sendIntent:toExtensionProxy:onQueue:completionHandler:]
v24@?0@"INIntentResponse"8@"INCExtensionError"16
-[SAIntentGroupConfirmIntent(INSExtensionService) ins_sendIntent:toExtensionProxy:onQueue:completionHandler:]_block_invoke_2
v32@?0@"SASyncAppIdentifyingInfo"8Q16^B24
v24@?0@"SSLookupResponse"8@"NSError"16
-[SAIntentGroupGetAppInfo(INSExtensionService) _searchAppStoreWithAppIdentifyingInfo:completion:]_block_invoke
SSLookupParameterBundleIdentifiers
initSSLookupParameterBundleIdentifiers
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ASKit_Sim/ASKit-649.8/IntentsServices/Sources/Soft Linked Frameworks/StoreServicesSoftLinking.h
/System/Library/PrivateFrameworks/StoreServices.framework/StoreServices
StoreServicesLibrary
frameworkLibrary
SSLookupKeyProfileLockup
initSSLookupKeyProfileLockup
SSLookupRequest
initSSLookupRequest
classSSLookupRequest
-[SAIntentGroupGetAppInfo(INSExtensionService) _searchLocallyWithAppIdentifyingInfo:forSiriLanguageCode:]
-[SAIntentGroupGetAppInfo(INSExtensionService) ins_getAppInfoForSiriLanguage:withCompletion:]
INSGetAppInfoQueue
-[SAIntentGroupGetAppInfo(INSExtensionService) ins_getAppInfoForSiriLanguage:withCompletion:]_block_invoke
v16@?0@"SAAppInfo"8
-[SAIntentGroupResolveIntentSlot(INSExtensionService) ins_sendIntent:toExtensionProxy:onQueue:completionHandler:]
v16@?0@"NSData"8
-[SAIntentGroupResolveIntentSlot(INSExtensionService) ins_sendIntent:toExtensionProxy:onQueue:completionHandler:]_block_invoke_2
no data
observers
T@"NSHashTable",&,N,V_observers
dataSource
T@"<INSAnalyticsDataSource>",W,N,V_dataSource
INSAnalyticsObserversQueue
FBSOpenApplicationErrorDomain
initFBSOpenApplicationErrorDomain
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ASKit_Sim/ASKit-649.8/IntentsServices/Sources/Extension Service/Commands/SAIntentGroupLaunchAppWithUserActivity+INSExtensionService.m
constant
/System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices
INSShouldLoadNativeMessagesExtensionAsBundle
options
T@"NSDictionary",R,C,N,V_options
delegate
T@"<INSExtensionServiceDelegate>",W,N,V_delegate
extensionContext
T@"INExtensionContext",R,N,V_extensionContext
airPlayRouteIdentifiers
T@"NSArray",C,N
commandIdentifiers
T@"NSArray",R,C,N
groupIdentifier
T@"NSString",R,C,N
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
v20@?0B8@"NSError"12
-[INSExtensionService analytics:contextDictionaryForError:]
-[INSExtensionService analytics:contextDictionaryForCommand:]
-[INSExtensionService _requiresHandlingCommand:completion:]
-[INSExtensionService _siriLanguageCode]
-[INSExtensionService _logEventWithType:context:contextNoCopy:]
-[INSExtensionService _prewarmExtensionWithIntent:applicationIdentifier:command:completionHandler:]
v24@?0@"INCExtensionProxy"8@"NSError"16
-[INSExtensionService _prewarmExtensionWithIntent:applicationIdentifier:command:completionHandler:]_block_invoke
no extensionBundleId
no launchId
-[INSExtensionService _connectionForIntent:]
-[INSExtensionService _updatedEventContextWithExtensionLoadType:wasPrewarmed:]
ExtensionLoadType
%@.%@
Cold
Warm
Extension
-[INSExtensionService handleCommand:completionHandler:]_block_invoke
v24@?0@"NSData"8@"NSError"16
v12@?0B8
v24@?0@"<SAAceCommand>"8@"NSError"16
v24@?0@"NSString"8@?<v@?@"INIntentResponse"@"NSError">16
v16@?0@"NSError"8
%@-%@-%@
INSExtensionServiceQueue
com.apple.intents.INSExtensionService.request-delegate
-[SAIntentGroupGetIntentDefinitions(INSExtensionService) _matchesIntentDefinition:]
INIntentVerbAssociations
INIntentEntity
INIntents
-[SAIntentGroupGetIntentDefinitions(INSExtensionService) ins_getIntentDefinitionsWithCompletionHandler:]
-[SAIntentGroupHandleIntent(INSExtensionService) ins_sendIntent:toExtensionProxy:onQueue:completionHandler:]
v8@?0
-[SAIntentGroupHandleIntent(INSExtensionService) ins_sendIntent:toExtensionProxy:onQueue:completionHandler:]_block_invoke_2
v24@?0@"INImage"8@?<v@?@"NSError">16
v24@?0@"INImage"8@"NSError"16
%s %@ delivered to the wrong service
%s intent = %@
%s appList = %@
%s Beginning HandleIntent with intent %@
%s HandleIntent completed with response %@
%s HandleIntent successful.
%s HandleIntent error. errorCode: %lu underlyingError: %@
%s Beginning ConfirmIntent with intent %@
%s ConfirmIntent completed with response %@
%s ConfirmIntent successful. ShouldRunHandleIntent = %@
%s ConfirmIntent error. errorCode: %lu underlyingError: %@
%s BatchSlotResolution completed in extensionProxy with updatedIntent %@
%s slotResolutionResult keyPath = `%@`, result = %@
%s All slots were resolved successfully. Moving to Confirm.
%s BatchSlotResolution needs dialog. Calling completion.
%s intentSlotKeyPaths = %@
%s Beginning BatchSlotResolution with intent %@
%s BatchSlotResolution complete.
%s intent.backingStore = %@
%s intentResponse.backingStore = %@
%s Unable to find appInfo for bundleId: %@ with error %@
%s AppInfo found in the AppStore for bundleId: %@
%s AppInfo found installed on device for bundleId: %@
%s Unable to find AppInfo locally, searching the AppStore for bundleId: %@
%s Querying AppInfo for %ld apps
%s AppInfo query complete. Calling completion.
%s Received replies for AppInfo query, but the request timed out.
%s GetAppInfo called for app without bundleID, skipping.
%s Searching for AppInfo for bundleId: %@
%s shouldSearchLocallyOnly enabled. Skipping AppStore query for %@.
%s AppInfo query timed out after %lds
%s intentSlotKeyPath = %@
%s resolutionResultData = %@
%s Extension service delegate does not respond to extensionService:contextDictionaryForError:
%s Extension service delegate does not respond to extensionService:contextDictionaryForCommand:
%s Extension service delegate does not respond to extensionService:requiresHandlingCommand:completion:
%s Extension service delegate does not respond to siriLanguageCodeForExtensionService:
%s Extension service delegate does not respond to extensionService:logEventWithType:context:contextNoCopy:
%s About to prewarm an extension for %@ (%@:%@) without an identifier. Assigning a new identifier: %@
%s Error finding extension for prewarming: %@
%s Prewarmed extension: %@
%s Using the current connection %@ because the intent is nil.
%s Using the current connection %@ because the intent identifier is nil.
%s Replacing the current connection %@ because the intent identifier is %@.
%s %@
%s Extension load type = %@
%s Unable to get INIntent from command %@
%s Generated intent object %@
%s Raw intent = %@
%s Raw intent ID = %@
%s Start digesting raw intent ID with in-memory salt...
%s Extension service delegate does not respond to extensionService:processDataUsingSHA256WithInMemorySalt:completionHandler:
%s Finished digesting raw intent ID with in-memory salt.
%s Set facade intent identifier = %@
%s Unable to generate facade intent ID due to %@
%s Prepared to start playback for %@
%s Failed to prepare for audio playback
%s Extension Request timed out after %{public}f seconds for command %@
%s Checking if Intent Definition at %@ matches query
%s Intent Definition at %@ has no INIntents section
%s Intent Definition at %@ has no entity or verb section
%s Intent Definition at %@ matches current request
%s Intent Definition at %@ does not match
%s Finding intent definitions for GetIntentDefinition query: %@
%s Unable to retrieve image data = %@
INSExtensionService
INSAnalytics
INSAppLaunchCommandDelegate
NSObject
INSAnalyticsDataSource
INSAnalyticsObserver
_JSONDictionaryRepresentation
if_JSONStringRepresentation
facadePropertyName
_JSONDictionaryRepresentationForIntent:parameterName:
ins_jsonEncodedIntent
dataUsingEncoding:
ins_protobufEncodedIntent
typeName
data
ins_jsonEncodedIntentResponse
ins_protobufEncodedIntentResponse
ins_invokeErrorCompletionHandler:withErrorCode:underlyingError:
_intentInstanceDescription
ins_analyticsEndEventType
initWithErrorCode:
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
ins_afAnalyticsContext
slotByName:
domain
code
isEqualToString:
setErrorCode:
metricsContext
ins_isJSONPayload
ins_aceIntent
ins_aceIntentResponse
ins_sendIntent:toExtensionProxy:onQueue:completionHandler:
ins_analyticsBeginEventType
resolutionResultClass
ins_invokeErrorCompletionHandler:forUnderlyingError:
_resolutionResultWithData:slotDescription:
jsonEncodedIntentResponse
intentResponse
jsonEncodedIntent
intent
setAppsList:
ins_resolveAppForIntent:completionHandler:
ins_shouldUseExtendedFlowTimeout
appsList
valueForKey:
resolveAppForIntentResponse
_intentResponseCode
_handleIntentWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:
errorCode
underlyingError
confirmIntentWithCompletionHandler:
setHandleIntentCompleted:
handleIntentWithCompletionHandler:
setResponseHandler:
aceId
setRefId:
_resolveIntentSlotsWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:
setLastAttemptedStep:
intentSlotKeyPaths
setSlotResolutionMap:
setTypeName:
setJsonEncodedIntent:
backingStore
base64EncodedStringWithOptions:
setBase64EncodedIntent:
allKeys
countByEnumeratingWithState:objects:count:
setKeyPath:
objectForKeyedSubscript:
setJsonEncodedSlotResolutionResult:
setBase64EncodedProtobufMessage:
addObject:
initWithData:
type
typeAsString:
setStepResults:
setBatchSlotResolutionResult:
_connection
setIntent:
_confirmIntentWithExtensionProxy:onQueue:processIntentCompleted:completionHandler:
resolveIntentSlotKeyPaths:completionHandler:
setJsonEncodedIntentResponse:
setData:
setIntentResponse:
setConfirmIntentCompleted:
shouldRunHandleIntent
jsonEncodedHandledIntent
handledIntent
userActivity
activityType
initWithActivityType:
_initWithIntent:
initWithIntent:response:
setIntentHandlingStatus:
_setInteraction:donate:
jsonEncodedHandledIntentResponse
initWithType:intent:intentResponse:userActivities:
setState:
interaction
shouldLaunchAppInBackgroundWithIntent:intentResponse:
userInfo
handledIntentResponse
appProxy
launchAppInBackground:restrictAppsToCarPlay:userActivityIdentifier:completionHandler:
ins_launchAppWithConnection:delegate:completionHandler:
_transaction
currentUserActivity
confirmIntentCompleted
protobufMessage
_payloadResponseTypeName
appIdentifyingInfo
count
ins_getAppInfoForSiriLanguage:withCompletion:
initWithTimeoutInterval:onQueue:timeoutHandler:
start
bundleId
_searchLocallyWithAppIdentifyingInfo:forSiriLanguageCode:
setObject:forKey:
shouldSearchLocallyOnly
appInfo
setAppIdentifyingInfo:
isCanceled
_searchAppStoreWithAppIdentifyingInfo:completion:
enumerateObjectsUsingBlock:
cancelIfNotAlreadyCanceled
getAppInfoResponse
_createOrderedAppInfoListFromDictionary:
setAppInfo:
applicationProxyForIdentifier:
currentLocale
objectForKey:
commandFailed
arrayWithObjects:count:
localizedNameForContext:preferredLocalizations:
setSpokenName:
vendorName
setProviderName:
alloc
setKeyProfile:
setValue:forRequestParameter:
allItems
firstObject
displayName
artistName
startWithLookupBlock:
setJsonEncodedIntentSlotResolutionResult:
setIntentSlotResolutionResult:
resolveIntentSlotKeyPath:completionHandler:
intentSlotKeyPath
_observerQueue
_dataSource
_observers
_init
addObserver:
removeObserver:
logEventWithType:context:contextNoCopy:
contextDictionaryForCommand:
contextDictionaryForError:
.cxx_destruct
dataSource
setDataSource:
observers
setObservers:
removeObject:
hashTableWithWeakObjects
sharedAnalytics
userActivityWithIdentifier:
ins_launchAppWithConnection:userActivityIdentifier:delegate:completionHandler:
_queue
_requestDelegateQueue
_currentConnection
_currentBundleIdForDisplay
_extensionContext
_options
_delegate
completionHandlerForAppLaunchCommand:withCompletion:
debugDescription
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
analytics:contextDictionaryForCommand:
analytics:contextDictionaryForError:
analytics:needsToLogEventWithType:context:contextNoCopy:
init
initWithOptions:
groupIdentifier
commandIdentifiers
handleCommand:completionHandler:
resetExternalResources
extensionContext
setAirPlayRouteIdentifiers:
airPlayRouteIdentifiers
_extensionRequestWillStartForIntent:
_extensionRequestDidFinishForIntent:error:
_extensionInputItems
_updatedEventContextWithExtensionLoadType:wasPrewarmed:
_connectionForIntent:
_prewarmExtensionWithIntent:applicationIdentifier:command:completionHandler:
_logPrewarmDidEndWithCommand:applicationIdentifier:wasPrewarmed:completionHandler:
_logEventWithType:context:contextNoCopy:
_siriLanguageCode
_requiresHandlingCommand:completion:
_shouldPrepareAudioSessionForCommand:intent:
options
delegate
setDelegate:
extensionService:contextDictionaryForError:
extensionService:contextDictionaryForCommand:
extensionService:requiresHandlingCommand:completion:
siriLanguageCodeForExtensionService:
extensionService:logEventWithType:context:contextNoCopy:
resumeWithCompletionHandler:
reset
_extension
localizedDescription
initWithIntent:
setIdentifier:
extensionBundleId
launchId
_className
UUIDString
UUID
identifier
mutableCopy
stringWithFormat:
setUserInfo:
if_setObjectIfNonNil:forKey:
archivedDataWithRootObject:requiringSecureCoding:error:
extensionService:extensionRequestDidFinishForApplication:error:
extensionService:extensionRequestWillStartForApplication:
_intents_bundleIdForDisplay
_airPlayRouteIdentifiers
_setAirPlayRouteIdentifiers:
extensionService:processDataUsingSHA256WithInMemorySalt:completionHandler:
extensionService:prepareForStartPlaybackWithDestination:intent:completion:
extensionService:handleFailedStartPlaybackWithDestination:completion:
currentIntentResponse
setImageProcessingHandler:
extensionService:wantsToCacheImage:
setBackgroundAppHandler:
extensionService:handleIntent:inBackgroundAppWithBundleIdentifier:completionHandler:
extensionService:suspendTimeout:
_isExtensionBeingDebugged
setInterruptionHandler:
setTimeoutHandler:
requestTimeoutInterval
setExtensionInputItems:
extensionInputItems
if_hexStringFromData:
initWithFormat:
intentId
userActivityIdentifier
_setExecutionContext:
_executionContext
_setRecordDeviceIdentifier:
_recordDeviceIdentifier
_setRecordDeviceUID:
_recordDeviceUID
_setRecordRoute:
_recordRoute
_setAirPlayRouteIds:
copy
queries
getIntentDefinitionsResponse
initWithCapacity:
_matchesIntentDefinition:
initWithContentsOfURL:options:error:
setIntentDefinition:
setIntentDefinitionInfos:
initWithContentsOfURL:
entity
caseInsensitiveCompare:
verb
ins_getIntentDefinitionsWithCompletionHandler:
_imageSize
_setImageSize:
sharedCache
addCacheableObject:
_retrieveImageDataWithReply:
handleIntentCompleted
B16@0:8
@16@0:8
v48@0:8@16@24@32@?40
q16@0:8
v40@0:8@?16q24@32
v32@0:8@?16@24
v32@0:8@16@?24
v40@0:8@16@24@?32
@32@0:8@16@24
@24@0:8@16
@"NSObject<OS_dispatch_queue>"
@"<INSAnalyticsDataSource>"
@"NSHashTable"
v24@0:8@16
v36@0:8q16@24B32
v16@0:8
@"INCExtensionConnection"
@"NSString"
@"INExtensionContext"
@"NSDictionary"
@"<INSExtensionServiceDelegate>"
@?<v@?B@"NSError">32@0:8@"SABaseCommand"16@?<v@?@"<SAAceCommand>"@"NSError">24
@?32@0:8@16@?24
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
@"NSDictionary"32@0:8@"INSAnalytics"16@"SABaseCommand"24
@"NSDictionary"32@0:8@"INSAnalytics"16@"NSError"24
v44@0:8@"INSAnalytics"16q24@"NSDictionary"32B40
v44@0:8@16q24@32B40
v32@0:8@16@24
@28@0:8@16B24
B48@0:8@16@24@32@?40
v44@0:8@16@24B32@?36
B32@0:8@16@24
v24@0:8@?16
