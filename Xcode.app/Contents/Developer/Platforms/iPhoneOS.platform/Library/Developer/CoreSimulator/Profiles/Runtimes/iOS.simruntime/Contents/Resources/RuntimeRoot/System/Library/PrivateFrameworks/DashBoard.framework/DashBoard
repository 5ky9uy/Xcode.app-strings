@(#)PROGRAM:DashBoard  PROJECT:CarPlayApp-1
Xniu
ffffff
333333
333333
?333333
?ffffff
RRRRRR
?tttttt
?VVVVVV
=@q=
DashBoard
DBDashboardPlatterView
?333333
DBDashboardDimmingView
CGRect
CGSize
CGPoint
v8@?0
@"NSString"16@?0@"DBApplicationInfo"8
v16@?0@"DBApplicationInfo"8
B16@?0@"CRCarPlayAppPolicy"8
B16@?0@"DBApplicationInfo"8
q24@?0@"DBApplicationInfo"8@"DBApplicationInfo"16
com.apple.carplayapp
v20@?0B8@"NSError"12
v24@?0@"DNDState"8@"NSError"16
v16@?0@"STTelephonyStatusDomainData"8
v16@?0@"STWifiStatusDomainData"8
v16@?0@"STBatteryStatusDomainData"8
v16@?0@"STMediaStatusDomainData"8
v16@?0@"STCallingStatusDomainData"8
ERROR
CARStatusBarRadarButtonEnabled
com.apple.carplay.internal
UIStatusBarRadarTimeItemEnabled
com.apple.UIKit
apple-internal-install
v12@?0B8
SBApplicationBadgeKey
CarDisplayCanvasIcon-%@.png
v32@?0@"CARManufacturerIcon"8Q16^B24
LAUNCHER_NAME-%@
CarPlayApp
ScreenFlash-%@
CornerMaskOverrideImage
NSData
instrumentcluster
overrideSceneSettingsForInternalUseNotification
removeOverrideSceneSettingsNotification
v16@?0@"UIMutableScenePresentationContext"8
@"UIApplicationSceneTransitionContext"16@?0@"UIMutableApplicationSceneSettings"8
%@:%@:cluster
v16@?0@"FBSMutableSceneSettings"8
@"FBProcessExecutionContext"8@?0
CarPlay - Scene Transactions
@8@?0
Invalidating
B16@?0@"UIScreen"8
com.apple.CarPlay.EnvironmentConfiguration
v32@?0@"CARScreenInfo"8Q16^B24
B16@?0@"CARScreenInfo"8
 NOT
v16@?0@"CARScreenViewArea"8
default
bottom
drive side
unknown
com.apple.CarPlayApp.home-screen
com.apple.carplay.oem
com.apple.now-playing
com.apple.Maps
:dashboard
:widget
com.apple.mobilephone
com.apple.MusicUIService
com.apple.InCallService
com.apple.CarPlaySettings
com.apple.Music
music://cardisplay/show-now-playing
com.apple.MobileSMS
com.apple.CarPlayTemplateUIHost
com.apple.siri
com.apple.mobilecal
com.apple.CarPlayApp
com.apple.iBooks
com.apple.SafeAreaTester
com.apple.NightModeTester
com.apple.WebKit.WebContent
com.apple.springboard
com.apple.CarPlayWallpaper
inputHardEdges
inputRadius
inputNormalizeEdges
inputDither
filters.gaussianBlur.inputRadius
gaussianBlur
filters.saturation.inputAmount
inputAmount
saturation
multiplyColor
inputColor
DBNotificationSuspensionReasonAssistant
DBNotificationSuspensionReasonRecordingAlert
DBNotificationSuspensionReasonPrivacyAlert
com.apple.CarPlay.dashboard
com.apple.CarPlay.homescreen
DBConnectAnimationRequester
DBTodayViewSetupRequester
CARStartApplicationBundleID
CARDisableAutomaticMallocStackLogging
CARLaunchWithMallocStackLogging
CARCornerRadius
deviceOfferFocus
accessoryAcquireFocus
accessoryGiveFocus
changeMapZoomLevel
focusHeading
originXPixels
originYPixels
widthPixels
heightPixels
kDBAppWorkspaceIdentifier
kDBDashboardWorkspaceIdentifier
kDBClusterWorkspaceIdentifier
v16@?0@"FBMutableSystemShellInitializationOptions"8
com.apple.CarPlayApp.oswatchdog
DashBoard
CARStatusBarHomeButton
CarStatusBarIconsHomeButton
CarStatusBarDashboardHomeButton
CarStatusBarHomeButtonFocusRing
B24@?0@"UIPress"8^B16
com.apple.CarPlay
v16@?0@"<UIViewControllerTransitionCoordinatorContext>"8
Notifications
v32@?0@"<BNPresentable>"8Q16^B24
Home
v32@?0@"NSUUID"8@"DBHome"16^B24
changeItems
source
%@-%u
v16@?0@"UIMutableApplicationSceneSettings"8
com.apple.CarPlay.UserAlerts
garageDoor-open
garageDoor-closed
(!H) %@
(!L) %@
Left
Right
launcher
statusbar
notification
lockout
alertSheetFocus
oemFocus
com.apple.CarPlayApp.url-delivery
__bundleId
__supportsCarFullScreen
iOS UI requested
DashBoard - CADisplay Dump
Display Configuration
CADisplay
DashBoard-%@
DashBoardACSelect-%@
DashBoardACBack-%@
DashBoardACHome-%@
DashBoardTelephonyDrop-%@
interestingWindow-%@
starkRoot-%@
statusbar-%@
StatusBarHost
notifications-%@
CarPlay Active
com.apple.carplay.connected
B16@?0@"FBScene"8
NSNumber
User activated app
v32@?0@"BSAction"8Q16^B24
@"FBSSceneTransitionContext"16@?0@"FBSMutableSceneSettings"8
v16@?0@"NSDictionary"8
v32@?0@"FBScene"8Q16^B24
resizeAnimationWindow
APP_USING_MIC_OK
%@ %@
APP_USING_MIC_MESSAGE
v16@?0@"UIAlertAction"8
PRIVACY_DISCLOSURE_ALERT_BODY_%@
v24@?0Q8@"NSError"16
v24@?0@"FBScene"8^B16
v32@?0@"UIView"8Q16^B24
from status bar
to status bar
%@:%@:%@
%@:%@
v32@?0@"NSString"8@"FBScene"16^B24
User activated home
InCall
ENABLED
DISABLED
InCallService
Locked out
music:
app:
v28@?0B8@"DBApplicationLaunchInfo"12@"NSError"20
CarPlayLogo
v32@?0@"DBApplicationInfo"8Q16^B24
v32@?0@"RBSProcessMonitor"8@"RBSProcessHandle"16@"RBSProcessStateUpdate"24
v16@?0@"<RBSProcessMonitorConfiguring>"8
v32@?0@"NSString"8Q16^B24
v24@?0@"RBSProcessState"8^B16
DBDashboard-%@
None
%@%@
v16@?0@"NSString"8
Down
Previous
Next
First
Last
DBActivationSettingUnknown
DBActivationSettingURL
DBActivationSettingAnimate
DBActivationSettingLaunchSource
DBActivationSettingActions
DBActivationSettingWaitForCommit
DBActivationSettingForTesting
DBActivationSettingFailInterval
DBActivationSettingSuspended
Default
AppDock
NowPlaying
Icon
Siri
Dashboard
chevron.backward
chevron.forward
v32@?0@"DBIconListView"8Q16^B24
CARWidgetSceneSplashScreenAnimationIdentifier
CAREnableSnapshotDebugLabel
DashBoard - Scene Transactions
v16@?0@"NSError"8
v32@?0@"DBWidgetFocusableView"8Q16^B24
FocusItems
v32@?0@"CRSDashboardFocusableItem"8Q16^B24
Snapshot placeholder...
DashBoard - Pending State Change Requests
v16@?0@"<DBWorkspaceState>"8
v16@?0@"<DBWorkspaceStateChangeSession>"8
identifier
com.apple.carplay.dashboard.siri
bundleID
%@.%@
applicationToProxy
proxyApp
MCDNowPlayingWillAppearNotification
MCDNowPlayingWillDisappearNotification
CARRecentAppHistory
CARLastSessionUIContextOwners
CarDisplayRecentlyUsedApps
v32@?0@"LSAppLink"8Q16^B24
v24@?0@"NSArray"8@"NSError"16
q24@?0@"NSString"8@"NSString"16
B16@?0@"NSString"8
@"DBApplicationInfo"16@?0@"NSString"8
v32@?0@"DBDashboardWorkspaceStateChangeItem"8Q16^B24
sr_aci
CARClusterCornerRadius
kDBInstrumentClusterPreviousShowUIURLDictionary
starkCluster-%@
InstrumentCluster-%@
@"UIImage"12@?0B8
ClusterCornerMaskOverrideImage
uuid
zoomDirection
none
DBInstrumentCluster-%@
LOCKOUT_GENERIC_TITLE
LOCKOUT_SIRI_TITLE
LOCKOUT_SIRI_MESSAGE
LOCKOUT_THERMAL_TITLE
CarDisplayThermometer
LOCKOUT_THERMAL_MESSAGE
LOCKOUT_DISCLOSURE_TITLE
LOCKOUT_DISCLOSURE_MESSAGE
LOCKOUT_BACK_TO_OEM
LOCKOUT_ENABLE_SIRI
LOCKOUT_UNDISCLOSED
LOCKOUT_SAFE
LOCKOUT_FEATURES_OFF
arrow.up.left.and.arrow.down.right
arrow.down.right.and.arrow.up.left
com.apple.DBKeybagStateQueue
com.apple.DBKeybagObserverQueue
com.apple.carplayapp.shadowdrawing
CIGaussianBlur
v16@?0@"NSTimer"8
B24@?0@8@16
B16@?0@"TUCall"8
Muting
Unmuting
PHONE_WIDGET_CALL_TITLE_%@_%@_AND_OTHERS
PHONE_WIDGET_CALL_TITLE_%@_AND_%@
PHONE_WIDGET_HOLD
SMARTWIDGET_MESSAGE
SMARTWIDGET_CALL
v32@?0@8Q16^B24
B32@?0@8Q16^B24
v32@?0@"DBWidgetViewController"8Q16^B24
@"_DBWidgetState"16@?0@"DBWidgetViewController"8
v32@?0@"_DBWidgetState"8Q16^B24
FloatingSiri
Siri activated app
<%@: %p name=%@ uniqueIdentifier=%@ home=(%p)%@ type=%@ interactive=%@ reachable=%@ current=%@ pendingWrite=%@ pendingRead=%@ hasError=%@>
generic
[reachable=%@ current=%@ 
baseEntity
stackedEntity
Unknown
TodayView
AppIcons
Locked
Unlocked
%@:%@%@
<%@ %@>
v24@?0@"HMService"8@"NSError"16
(%@: %@)
v32@?0@"NSString"8@"NSUUID"16^B24
<%@: %p %@ uniqueIdentifier=%@ hasGarageDoor=%@ hasCachedGarageDoors=%@ inExtendedRange=%@ inRange=%@ distance=%@ inLocationRange=%@ inHomeRange=%@ lastUsed=[%@] updatingLastUsed=[%@]>
%.2f
v16@?0@"NSArray"8
[inRange=%@ distance=%.2f inExtendedRange%@ inLocationRange=%@ inHomeRange=%@]
Initialization
InitializationSkipped
Current
PendingRead
PendingWrite
Pending
Count
%@-%@
V:%@
C:%@
P:%@
uniqueIdentifier=%@
service=(%p)%@
home=(%p)%@
state=%@(%lu)
formatedValue="%@"
value=[%@]
format=%@
notifies=%@
readable=%@
writeable=%@
hidden=%@
error=%@
<%@: %p(%p) %@>
%@=%@ (%@ transactionID=%lu error=%@ values=[%@])
SmartEngineCombineRangesInterval
SELF.validRange == YES
<%@: %p uniqueIdentifier=%@ title=%@ subtitle=%@ score=%@ validRanges=[%@] predictedObject=%@>
[%ld(%ld) pScore=%ld bScore=%ld value=%.2f minValue=%.2f maxValue=%.2f]
<%@ - %@>
%@ [ready: %@, client: %@, animation block: %@]
v32@?0@"DBTodayViewSynchronizedAnimation"8Q16^B24
v32@?0@"NSString"8@"<UIScenePresenter>"16^B24
 (suspended)
v16@?0@"UILayoutGuide"8
B16@?0@"UIButton"8
NowPlayingPlaceholder
NOW_PLAYING_NOT_PLAYING
v24@?0@8@"UIImage"16
B24@?0@"UITouch"8^B16
DBLogForCategory
DBLogging.m
category < DBLoggingCategoryCount
StatusBar
TemplateUIHostApp
Workspace
SmartWidget
InstrumentCluster
SplashScreen
MediaPlayer
Analytics
Diagnostics
TelemetrySignposts
IconBadging
SynchronizedAnimations
Appearance
Notification
ClusterControl
createPKZip
extractPKZip
Calendar
com.apple.CarPlay.internal.refreshApps
q24@?0@"DBSmartWidgetCalendarPrediction"8@"DBSmartWidgetCalendarPrediction"16
including
NOT including
CARSmartWidgetDebugGestures
v32@?0@"EKEvent"8Q16^B24
SMARTWIDGET_CALENDAR_EVENT_COUNT
SMARTWIDGET_CALENDAR_ALLDAY
SMARTWIDGET_CALENDAR_EVENTS_STARTING
calshow:%d
isSoonestEvent=%@ (%@)
SmartEngineCalendar_InitialValidInterval
SmartEngineCalendar_BeforeStartDateValidInterval
SmartEngineCalendar_AfterStartDateValidInterval
opacity
v16@?0^{CGImage=}8
kCARAppToAppAnimationIdentifier
kCARAppToHomeAnimationIdentifier
kCARFromStackedAppAnimationIdentifier
kCARHomeToAppAnimationIdentifier
kCARToStackedAppAnimationIdentifier
v16@?0@?<v@?>8
v16@?0@"DBHomeToAppAnimationSettings"8
v16@?0@"DBAnimationSettings"8
v16@?0@"DBAppToHomeAnimationSettings"8
v16@?0@"DBToStackedAppAnimationSettings"8
v16@?0@"DBFromStackedAppAnimationSettings"8
v16@?0@"URTAlertAction"8
v16@?0@"UIAction"8
/System/Library/LocationBundles/CarPlayHomeLocation.bundle
/System/Library/LocationBundles/HomeKitDaemon.framework
com.apple.DashBoard.locationManager.%p
HomeKit
Unnamed
<%@: %p %@ authorized=%@ active=%@ regions=[%@] assertions=[%@]>
v24@?0@"RBSProcessHandle"8@"RBSProcessExitContext"16
CARRefreshAppDockNotification
CARAppDockStackView
CARAppDockButton-Navigation
CARAppDockButton-Audio
CARAppDockButton-Other
B32@?0@"DBApplicationInfo"8Q16^B24
@"NSString"16@?0@"CRSApplicationIcon"8
DefaultIconState_CarDisplay
plist
CARStartPageIndex
v16@?0@"NSMapTable"8
v24@?0@"NSString"8^B16
v32@?0@"SBIcon"8Q16^B24
oem:back
Scrolling
com.apple.DashBoard.NetworkPathMonitor
v16@?0@"NSObject<OS_nw_path>"8
Other
WiFi
Cellular
Wired
LoopBack
<%@: %p path=%@ reachable=%@ active=%@ assertions=[%@]>
com.apple.carkit.layer-metadata
maps:/car/instrumentcluster
maps://car/instrumentcluster
maps
instructioncard
showSpeedLimit
showCompass
showETA
maneuverLayout
leftaligned
rightaligned
topaligned
user
@"NSString"16@?0@"NSString"8
GarageDoorOpener
com.apple.CarPlaySplashScreen
CARSplashScreenViewController
com.apple.CarPlay.StatusBar
lockout-%@
com.apple.CarPlay.SmartWidget.refreshPredictions
com.apple.CarPlay.SmartWidget.refreshDisabled
com.apple.CarPlay.SmartWidget.refreshGarageDoors
SmartEngineStopDelay
SELF.predictionScore >= %@
q24@?0@"DBSmartWidgetPrediction"8@"DBSmartWidgetPrediction"16
<%@: %p updatesPending=%@ predictionsFresh=%@ lastRefreshRequest=%@ sources=%@>
changeUIContext
maps:
maps:/car/destinations
mobilephone:
nowplaying:
messages:
com.apple.DBDisclosureObserverQueue
iconLists
metadata
v32@?0@"SBIcon"8@"NSIndexPath"16^B24
com.apple.carplayapp.badgeSettingsUpdateQueue
v24@?0@"UNNotificationSource"8^B16
invalid
%@.workQueue
CARSmartWidgetDisablePrediction_%@
<%@: %p disabled=%@ lastRefresh=%@ predictions.count=%lu>
<%@: %p name=%@ uniqueIdentifier=%@ home=(%p)%@ reachable=%@ current=%@ pendingRead=%@ pendingWrite=%@ hasError=%@ doorState=%@ characteristics: %@ %@ %@>
SMARTWIDGET_GARGAGEDOOR_ERROR
SMARTWIDGET_GARGAGEDOOR_UNREACHABLE
SMARTWIDGET_GARGAGEDOOR_UNKNOWN
SMARTWIDGET_GARGAGEDOOR_OPEN
SMARTWIDGET_GARGAGEDOOR_CLOSED
SMARTWIDGET_GARGAGEDOOR_OPENING
SMARTWIDGET_GARGAGEDOOR_CLOSING
SMARTWIDGET_GARGAGEDOOR_STOPPED
SMARTWIDGET_GARGAGEDOOR_OBSTRUCTED
Remove
changeType
Normal
Stacked
presentationPreference
<%@: %p start=%@ end=%@>
FBSRootSceneHost
v24@?0@"BSAction"8^B16
Fail Interval Exceeded
DBDisplayManager
com.apple.CarPlay.non-launching
com.apple.CarPlayApp.Dashboard
v32@?0@"FBSDisplayIdentity"8@"<DBEnvironment>"16^B24
B16@?0@"FBSDisplayConfiguration"8
v16@?0@"<BSServiceConnectionEndpointInjectorConfiguring>"8
RootWindow-%@-%p
Display Connection
v24@?0@"FBSDisplayConfiguration"8^B16
CarInCallWidgetAvatarFocusRing
CarStatusBarDockIconFocusRing
CarStatusBarDockIconFocusRingUnread
CarStatusBarDockIconUnreadBadge
name
manufacturer
firmwareVersion
hardwareVersion
ppid
CARSmartWidgetPredictionUpdatedNotification
CARNowPlayingWidgetInteractionNotification
CARApplicationDidLaunchNotification
CARSessionServerConnectionDiedNotification
CARAnalyticsSessionInterruptKey
batteryPercentage
thermalLevel
CARAnalyticsPreviousSessionEnd
CARAnalyticsDashboardVisibilityTime
CARAnalyticsAppVisibilityTime
CARAnalyticsPlaybackTime
CARAnalyticsChargingTime
CarPlay Analytics Queue
v32@?0@"FBSDisplayLayoutMonitor"8@"FBSDisplayLayout"16@"FBSDisplayLayoutTransitionContext"24
IOPMPowerSource
IOGeneralInterest
mediaserverd
thermalTrap
%@:%fsecondsAgo
wifid:%fsecondsAgo
DNDWDCarPlay
AlbumArtAllowed
Restricted
Always Dark
Always Light
Automatic
Wallpaper
SourceVersion
CARSmartWidgetHidden
DashboardSuggestions
Display%@
secondVideoStream
previousSessionInterrupt
B16@?0@"_DBAnalyticsAppInfo"8
bundleIdentifier
playbackTime
visibleTime
dashboardVisibleTime
siriPresentationCount
sessionDuration
appCategory
visiblePercentage
playbackPercentage
sessionVisibilityDuration
launchCount
v32@?0@"NSString"8@"NSNumber"16^B24
sessionCount
dock
siri
homescreen
dashboard
total
iAPManufacturer
iAPModel
iAPName
airplayModel
transports
:Muted
:Unmuted
announceMessages
requestUIMapsCount
requestUIMusicCount
requestUIMessagesCount
requestUIPhoneCount
requestUIBundleIdentifierCount
showUIMapCount
showUITurnCardCount
screenTime
mainAudioTime
screenPercentage
mainAudioPercentage
unlockCount
supportsLocation
supportsLocationPASCD
supportsLocationGPGGA
supportsLocationGPRMC
supportsLocationDeadReckoning
supportsLocationChinaShifted
deviceChargedDuringSession
deviceChargedWirelessly
adapterVoltage
adapterWattage
adapterDescription
adapterPMUConfiguration
adapterCurrent
deviceChargeDuration
sessionInterrupt
sessionSummary
preferredMapsAppearance
Wireless
announceSettings
Main
screenType
duration
isFullScreen
viewAreaCount
eventCount
type
Playback Changed
Skip
Album Art Selected
tel:
podcasts:
v32@?0@"_DBAnalyticsAppInfo"8Q16^B24
B32@?0@"_DBAnalyticsAppInfo"8Q16^B24
IsCharging
AdapterDetails
Description
IsWireless
AdapterVoltage
%d.%d V
%d mA
PMUConfiguration
%@ mA
%d.%d W
systemNightMode
limitableUITypes
voiceTriggerMode
screenCount
supportsDestinationSharing
primaryInteraction
availableInteractions
supportsHiFiTouch
%@: %@
v32@?0@"CARScreenViewArea"8Q16^B24
MultipleViewAreas
HasSafeAreaWithinAnyViewAreas
HasTransitionControlWithinAnyViewAreas
HasAViewAreaSameSizeAsDisplay
PrimaryInteraction
AvailableInteractions
PhysicalHeight
PhysicalWidth
PixelHeight
PixelWidth
PixelViewAreaWidth
PixelViewAreaHeight
PixelSafeAreaWidth
PixelSafeAreaHeight
ForMultipleViewAreasInitialViewAreaWasLargest
UserChangedViewAreaCount
UserChangedViewAreaUsingTransitionControlCount
ForMultipleViewAreasViewAreaActiveLongestWasLargest
(no value)
Messaging
Calling
Navigation
Audio
Automaker
QuickOrdering
Charging
Parking
Productivity
Fueling
DrivingTask
sessionStarted
appSessionEnded
sessionViewAreaChanged
dashboardWidgetPrediction
dashboardNowPlayingAction
sessionEnded
appSessionEndedPhone
navigationSessionOwners
announceMessagesChanged
preferredMapsAppearanceChanged
com.apple.CarPlay.%@
MapsNavigationWidgetBackgroundImage
CARAppPrototype
CARAppInternal
CARAppHidden
CARAppFullScreen
CARAppCertification
CARRequiresFeatureFlags
SBLaunchSuspendedAlways
UIApplicationSceneManifest
com.apple.springboard.deliveropenurlusingworkspace
13.0
CPSupportsDashboardNavigationScene
CPSupportsInstrumentClusterNavigationScene
%@-%d
FBBundleInfo+CarPlayApp
@"CRSApplicationIcon"16@?0@"NSString"8
v32@?0@"NSArray"8Q16^B24
iconOrder
v24@?0@"SBIcon"8^B16
IconRows
IconColumns
IconCount
IconPageCount
IconThirdPartyCount
IconFirstPartyCount
IconFirstPartyCountFirstPage
IconThirdPartyCountFirstPage
IconFirstPageCustomized
ShowsOEMIcon
HiddenAppsCount
HiddenApps
showInternalApps
showPrototypeApps
news_carplay_is_enabled
com.apple.newscore
passcode
noSiri
thermal
blocked
buddy
disclosure
(%i)
com.apple.DashBoard.homemanager
%@-CarDisplayIconState.plist
%@-CarDisplayDesiredIconState.plist
SpringBoard
Workspace Change
v16@?0@"UIViewController<DBEventHandling><DBDashboardWorkspaceEntityPresenting>"8
<%@:%p type=%@ priority=%f name=%@ window=%@ bundleID=%@ pid=%d>
suspend
take
B32@?0@"DBFocusAssertion"8Q16^B24
DashBoardFocusDeferral
<%@:%p> -> %@
Very Cold
Moderately Cold
Warn
Severe
Critical
com.apple.DBThermalLevelQueue
com.apple.DBThermalObserverQueue
v12@?0i8
com.apple.system.thermalpressurelevel.cold
<%@: %p formatString=%@ dateStyle=%lu timeStyle=%lu>
yyyy-MM-dd HH:mm:ss.SSS
HH:mm:ss.SSS
distantFuture
distantPast
CarPlayIconCache
CARSmartWidgetHiddenDefaultChanged
v32@?0@"DBWidgetSceneViewController"8Q16^B24
DoorState
CurrentDoorState
TargetDoorState
Open
Closed
Opening
Closing
Stopped
<%@:%p uniqueIdentifier=%@ title=%@ start=%@ end=%@>
launch
SiriBringup
isDirectAction
messageAppBundle
messageConversationGUID
CarPlayBootstrap
com.apple.developer.carplay-protocols
B16@?0@"LSApplicationProxy"8
-[DashBoard application:didFinishLaunchingWithOptions:]
v24@?0@"<DBEnvironment>"8^B16
displayIdentifier
CARDisableDashboard
PowerState
Saturation
Brightness
TemperatureUnits
CurrentTemperature
TargetTemperature
CurrentHeatingCooling
TargetHeatingCooling
CoolingThreshold
HeatingThreshold
CurrentRelativeHumidity
TargetRelativeHumidity
ObstructionDetected
Name
Manufacturer
Model
SerialNumber
Identify
RotationDirection
RotationSpeed
OutletInUse
Version
Logs
AudioFeedback
AdminOnlyAccess
SecuritySystemAlarmType
MotionDetected
CurrentLockMechanismState
TargetLockMechanismState
LockMechanismLastKnownAction
LockManagementControlPoint
LockManagementAutoSecureTimeout
AirParticulateDensity
AirParticulateSize
AirQuality
BatteryLevel
CarbonDioxideDetected
CarbonDioxideLevel
CarbonDioxidePeakLevel
CarbonMonoxideDetected
CarbonMonoxideLevel
CarbonMonoxidePeakLevel
ChargingState
ContactState
CurrentHorizontalTilt
CurrentLightLevel
CurrentPosition
CurrentSecuritySystemState
CurrentVerticalTilt
FirmwareVersion
HardwareVersion
HoldPosition
InputEvent
LeakDetected
OccupancyDetected
OutputState
PositionState
SmokeDetected
SoftwareVersion
StatusActive
StatusFault
StatusJammed
StatusLowBattery
StatusTampered
TargetHorizontalTilt
TargetSecuritySystemState
TargetPosition
TargetVerticalTilt
StreamingStatus
SetupStreamEndpoint
SupportedVideoStreamConfiguration
SupportedAudioStreamConfiguration
SupportedRTPConfiguration
SelectedStreamConfiguration
Volume
Mute
NightVision
OpticalZoom
DigitalZoom
ImageRotation
ImageMirroring
LabelNamespace
LabelIndex
Active
CurrentAirPurifierState
TargetAirPurifierState
CurrentFanState
CurrentHeaterCoolerState
CurrentHumidifierDehumidifierState
CurrentSlatState
WaterLevel
FilterChangeIndication
FilterLifeLevel
FilterResetChangeIndication
LockPhysicalControls
SwingMode
TargetHeaterCoolerState
TargetHumidifierDehumidifierState
TargetFanState
SlatType
CurrentTilt
TargetTilt
OzoneDensity
NitrogenDioxideDensity
SulphurDioxideDensity
PM2_5Density
PM10Density
VolatileOrganicCompoundDensity
DehumidifierThreshold
HumidifierThreshold
ColorTemperature
ProgramMode
InUse
SetDuration
RemainingDuration
ValveType
IsConfigured
CARIconViewPlatterGroupName
v16@?0@"NSNotification"8
DashBoard/DBDashboardPlatterView.swift
Fatal error
init(coder:) has not been implemented
DashBoard.DBDashboardPlatterView
init(frame:)
lightIconPlatters
darkIconPlatters
_TtC9DashBoard22DBDashboardPlatterView
d16@0:8
v24@0:8d16
@24@0:8@16
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v16@0:8
burnView
materialView
wallpaperPreferences
platterCornerRadius
Td,N,VplatterCornerRadius
@"UIColor"16@?0@"UITraitCollection"8
DashBoard/DBDashboardDimmingView.swift
_TtC9DashBoard22DBDashboardDimmingView
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v24@0:8@16
dimmingRectViews
dimmingCornerViews
overlayColor
cornerRadius
contentFrame
Td,N,VcornerRadius
T{CGRect={CGPoint=dd}{CGSize=dd}},N,VcontentFrame
Down-casted Array element failed to match the target type
Expected 
NSArray element failed to match the Swift Array Element type
Expected 
Failed to register with DNDStateService: %@
Failed to query initial Focus state: %@
Updating status bar state observers
No status bar state observers, skipping update
Time string updated to: %@
Cached time string is empty or nil: %@
Unable to store time string in status bar data: %@
Time string is empty from cached string: %@
Battery data updated: %{public}@
Setting status bar battery data enabled, state: %{public}u, capacity: %{public}d, low power mode active: %{public}d
Received updated focus state %@
Received updated focus with no active mode.
Now recording bundle identifier updated to %{public}@.
Recording attribution exists, pid is %{public}d, but could not determine bundle identifier.
Recording attribution exists, but pid: %{public}d is not valid.
Announce status changed, updating announce
No available announce status!
Locale changed, resetting date formatter
Time zone changed, updating time
Available icons: %{public}@
Expected icon size: %{public}@
Expected masked icon size: %{public}@
Testing icon: %{public}@
Already found a preferended icon, skipping %{public}@
shouldReplaceWithPrerendered: %{public}@, testIconIsLargerThanSelected %{public}@, testIconIsSmallerThanSelected %{public}@, selectedIconIsTooSmall %{public}@, testIconIsLargeEnough %{public}@
Selecting new icon: %{public}@
Final OEM Icon: %{public}@
Badge value invalidated for %{public}@
Badge for identifier: %{public}@ is nil
Badge for identifier: %{public}@ is negative: %{public}ld
Badge string for identifier: %{public}@ is not a valid number: %{public}@
Badge for identifier: %{public}@ is not a number: %{public}@
Badge for identifier: %{public}@ is empty
New badge value for %{public}@: %{public}@
Skipping screenshot for screen %@
Failed to capture a screenshot for screen %@
Using corner mask image specified by test app!
Error decoding override image data!
Generating corner mask image to send to accessory.
Set cluster scene: %@
Foregrounding instrument cluster with %@
Foregrounding instrument cluster scene with no URL.
No supported application found for target identifier: %@
Skipping instrument cluster scene bringup because we already have a transaction in flight
Skipping instrument cluster scene bringup because we are invalidated
No available scene settings for instrument cluster.
Crash limit exceeded! Ignoring cluster scene foreground request.
Instrument cluster application requires preflight, ignoring scene update request.
Foregrounding instrument cluster scene with settings: %@
Instrument cluster scene transaction completed: %@
Received cluster scene: %@
Cluster scene did destroy: %@
Instrument cluster scene did invalidate: %@
Tearing down existing scene and re-sending scene
Instrument cluster scene transition failed. Retrying after %.1f seconds...
Retrying instrument cluster scene bringup
Handling death of process with identifier: %{public}@. Current nav identifier is: %{public}@
Crash count for %@ : %u
Crash count for CarPlayTemplateUIHost : %u
Dead process is template app %{public}@
Dead process had CPTUIH scene, destroying scene for identifier: %{public}@
Env vehicle appearance mode preference: %lu
Env ui style is: %ld
Env map style is: %ld
CarCapabilities updated, kicking off a style update
Determining effective map style. Always dark appearance: %{public}@, prefers dark maps: %{public}@
Using map style dark
Using environment map style: %{public}@
Attempting to get style but no vehicle available
Vehicle preference is invalid: %ld, using car capabilities value: %ld
Vehicle map style preference: %{public}ld
Attempting to get map appearance preference but no vehicle available
Vehicle pairing status: %ld
Failed to find a matching vehicle for certificate serial %@
Assigning vehicle to wallpaper preferences: %@
[DBEnvironment] Paired vehicles did change
Computing effective status bar edge for view area: %{public}@
Status bar override set to %{public}@
Using view area status bar edge: %{public}@
View area aspect ratio %f meets Dashboard portrait threshold. Checking the Dashboard's aspect ratio...
Dashboard aspect ratio %f also meets portrait threshold, moving status bar to bottom
Dashboard aspect ratio %f does not meet portrait threshold
View area aspect ratio %f does not meet Dashboard portrait threshold.
View area is%{public}@ tall enough for horizontal status bar
Applying horizontal status bar to all view areas
Initializing notification view controller...
Error revoking notification: %{public}@
Banner presenter %@ requests visibility. Enabling tap-dismiss gesture
Banner presenter %@ relinquishes visibility. Disabling tap-dismiss gesture
Borrowing screen for notification: %{public}@
Unborrowing screen for notification: %{public}@
[Notifications] Updating suspension reasons: %@
Error suspending: %@
Error revoking presentable: %{public}@
Home did update last used service of type %{public}@ %{public}@
Home did change in range %{public}@
[DBWallpaperViewController] sending wallpaper %{public}@ to CarPlayWallpaper
[DBWallpaperViewController] Received scene: %@
[DBWallpaperViewController] Did destroy scene: %@
[DBWallpaperViewController] Starting scene update
[DBWallpaperViewController] Scene update completed!
alertService:wantsPresentationForAlert: %@
alertService:wantsDismissalForAlert: %@
presenting system alert: %@
dismissing system alert: %@
presenting alert: %@ over: %@
dismissing alert: %@ over: %@
resetting Images
generating imageNamed=%{public}@ style=%{public}@
%{public}@ currentTargetDoorState=%{public}@
%{public}@ doorState=%{public}@
%{public}@ targetDoorState=%{public}@
%{public}@ obstructionDetected=%@
Unexpected nil hardware identifier for display configuration: %{public}@
Creating new main window: %@
Creating new status bar window: %@
Taking preventSpuriousScreenUndimToken
Invalidating unexpected preventPasscodeLockToken
Invalidating unexpected preventSpuriousScreenUndimToken
Invalidating unexpected layout element for OEM screen
Invalidating unexpected template app process monitor
Sending return to home screen event
App %{public}@ requires preflight! Showing alert.
Taking screen for alert
App %{public}@ requires preflight! Ignoring open application request from launch source %{public}@.
Taking screen for ignored open application request
Sending Siri direct action for app: %{public}@
Direct action context payload: %@
Taking screen for app launch
Ignoring open application request for unknown application!
Starting background launch for app: %@
Launch URL: %@
Launch actions: %@
Launch transaction completed with success: %@
Creating open url action: %@
Sending %lu actions to the workspace
Destroying existing throwaway scene for non-matching process identity: %{public}@
Creating throwaway scene for action delivery
Sending %lu non-workspace actions via throwaway scene
CarPlay radar item tapped, gathering screenshots and diagnostics.
CarPlay diagnostics started.
CarPlay diagnostics ended.
home button triggered
Dismissing floating Siri for pointer event
long back press triggered
Displaying recording alert for %{public}@
Displaying privacy disclosure alert for %{public}@
Accessory does not declare session support for context %{public}@; not notifying.
Enhanced Integration is not enabled; leaving context owner as Accessory.
Accessory is not context owner for %{public}@, not notifying.
Activating layout element for OEM screen
Invalidating layout element for OEM screen
Updating #wallpaper
Automatic appearance enabled, but the current wallpaper selection doesn't allow it! %{public}@
Applying #wallpaper %{public}@
Updating user interface style to %@ for scene: %@
Main screen is not requesting corner masks.
Handling focus movement action with heading: %@, shouldPerformHaptic: %@, direction: %@
Focus movement in direction is allowed
Dropping status bar focus assertion
Taking status bar focus assertion
Attempting focus transfer to OEM UI
Focus movement in direction is not allowed
Received unhandled back from CarPlay.app, not handling
Handling unhandled back action
Focus movement action received
Tap received from status bar
Current override is in call, activating InCallService
Current override is recording
Recording app is CarPlay app, activating: %{public}@
Recording app is not a CarPlay app, displaying alert
Current override is sysdiagnose, sending TTR event
didCreateScene: %@
bundle ID: %@
appInfo: %@
InterfaceStylePreference is: %ld
Always dark enabled, returning dark style
Using car user interface style: %@
Using map style: %@
Invalidating preventPasscodeLockToken
Invalidating preventSpuriousScreenUndimToken
Invalidating OEM layout element
Taking screen for home event
Requesting Siri activation
CarPlay radar item long-pressed, gathering screenshots.
Finished saving screenshots.
Borrowing screen for InCall
Using existing screen borrow token for InCall
Pending InCall activation until after lock out
Unborrowing screen for InCall
Setting banners %@ for InCallService
Taking screen for connection (requestUI), to lockout
Taking screen for connection, to lockout
Evaluating active app %{public}@ from previous session
Requested previous session app %{public}@ requires preflight; ignoring.
Requested previous session app %@ is not valid for current session; ignoring.
No enhanced integration consent; not notifying accessory about starting context.
Notifying accessory about iOS ownership of starting UIContext %{public}@
Accessory does not support starting UIContext %{public}@
No available UIContext for starting application.
Taking screen for connection (requestUI), animating scaled
Taking screen for connection, animating scaled
Taking screen for connection (requestUI), animating to home screen
Taking screen for connection, animating to home screen
Ignoring Siri prewarm action due to lockout mode: %@
Siri prewarm assertion being requested when one already exists
Received Siri prewarm action, sending accessory timestamp: %f
Received Siri prewarm action
Ignoring external Siri button down action due to lockout mode: %@
Received external Siri button down action
Home button assertion being requested when one already exists
Using prewarm timestamp: %f
Using button down timestamp from accessory: %f
Invalidating Siri prewarm assertion
Sending Siri long press event
Ignoring external Siri button up action due to lockout mode: %@
Received external Siri button up action
Invalidating Siri button down assertion
Received openURL request for %@
Sending requestUI take immediately
Deferring requestUI take until connect
Resolved URL request to %@
Received Echo Context event %{public}@ for which the accessory did not declare support; dropping.
Enhanced Integration is not enabled; skipping requestUI echo.
Requested URL already visible on iOS. Requesting from accessory.
Car owns the screen, no requestUI sent.
No available now-navigating app; defaulting to nav category.
No available now playing app; defaulting to audio category.
No available audio app to launch from music: context.
Taking screen for requestUI mobilephone, launching to in-call UI
No available app for requestUI URL %{public}@
No user consent for launching app by URL.
Unable to resolve a URL request for URL %{public}@: %@
Couldn't resolve a URL request for %{public}@ to a bundle identifier.
Received UIContext event %{public}@ for which the accessory did not declare support; dropping.
Received UIContext event %{public}@, updating ownership to accessory.
Received unhandled remote event %{public}@; dropping.
System UserAlerts are not supported in CarPlay
Notification view controller is presenting a banner, but we have no banner scene!
Appearance style changed for environment, updating user interface style
Night mode changed for environment to: %{public}@
Maps style changed for environment to: %{public}@, updating user interface style on scenes that can use Maps style
Updating ui style with maps style to: %{public}@, for scene: %{public}@
Updating map style to: %{public}@, for scene: %{public}@
Ignoring map style update for scene: %{public}@
Taking preventPasscodeLockToken
Handling death of process with identifier: %{public}@
Dead process had template host scene, destroying scene for identifier: %{public}@
Handling post-death of process with identifier: %{public}@
Focus item state: %{public}@
Updating frame for widget scene: %@, to %@
Set widget scene: %@
Resetting crash monitoring for updated target bundle ID %@
Setting loading view: %@ for %@
Animating loading view: %@
Loading view: %@ is not in hierarchy, skipping animation
Received widget scene: %@
Widget scene did destroy: %@
Scene widget selected
Widget enabled, attempting scene update.
Widget disabled
Destroying scene: %@
Widget is not enabled, ignoring scene update request.
Widget is invalidated, ignoring scene update request.
Widget does not have application info, ignoring scene update request.
Waiting for retry timer before starting scene update transaction.
Crash limit exceeded! Ignoring widget scene foreground request, and switching to loading view.
Widget application requires preflight, ignoring scene update request.
%@ performing scene update with ui style: %@, map style: %@
Widget scene transaction completed: %@
%@ performing post scene update with ui style: %@, map style: %@
Loading view present, will attempt animating removal: %@ - %@
Loading view present but scene not ready yet. Content state ready: %{public}@, proxy app? :%{public}@, proxy scene content ready: %{public}@
Widget scene did invalidate: %@
Tearing down existing scene
Scene invalidated, widget invalid: %{public}@, same identifier: %{public}@
Widget scene transition failed. Retrying after %.1f seconds...
Retrying widget scene bringup
Unable to retrieve touch policy server
Incoming connection for touch sharing service
Touch sharing service interrupted
Touch sharing service invalidated
Context id updated for %@
New focusable items for client: %@, items %{public}@
Widget scene content ready %@
Widget scene content not ready: %@
Taking snapshot: %@
Displaying snapshot debug label: %@
Using snapshot view: %@ - %@
Dead process is current widget target identifier, disabling widgets
Dead process was current widget target identifier, enabling widgets
Workspace state change session watchdog timer fired!
State changed: %@
Pending request: %@
Handling request in current session (%p): %@
Applying session UI contexts: %@
No enhanced integration consent for launch UI Contexts.
No known context owner for context %{public}@, defaulting to accessory.
Notifying accessory for iOS ownership of context %{public}@
Reverting context %{public}@ to accessory ownership.
Accessory is already owner of context %{public}@
No available session UI contexts.
Applying session echo contexts: %@
No available session echo contexts.
Application %@ does not support CarPlay.
Application %@ is not available in the current layout.
No available application for URL %@
Resolved universal link to %@
Failed opening a universal link with %@
Opened a universal link for %@
Indeterminate result for universal link for %@
Unable to locate any candidate app to launch %@
Evaluating application URL %@
Resolved URL to %@
Workspace did change to active app %@
Workspace change event %@
Previous session showUI: %@
No showUI from previous session.
No previous showUI dictionary initialized.
received IC Hid Event: MenuUp
received IC Hid Event: MenuDown
received IC Hid Event: MenuLeft
received IC Hid Event: MenuRight
received IC Hid Event: MenuPick (Select)
received IC Hid Event: ACBack
Cluster screen %@ is requesting corner masks
Cluster screen %@ is not requesting corner masks
updateForScene: (%@) preparedWithContext: (%@)
updateForScene: (%@) appliedWithContext: (%@)
updateForScene: (%@) completedWithContext: (%@)
Received showUI for %{public}@
Creating instrument cluster root view controller.
Foregrounding instrument cluster scene.
Saving showUI URL to defaults: %@ for identifier: %@
Received an unsupported showUI URL: %@
Updating user interface style to %lu for scene: %@
Maps style changed for environment, updating user interface style on scenes that can use Maps style
Zoom command received for cluster display with direction: %{public}@, sending to scene: %{public}@
Active navigation identifiers changed
keybag is not locked! state: %ld
keybag is locked! state: %ld
Device is blocked!
Device is not blocked.
Starting focus ring fade timer
Not eligible for focus ring fade
Focus ring fade has correct interface style: %@, correct night setting: %@
Fading focus ring
Unfading focus ring
In-call widget avatar button selected
In-call widget app icon button selected
In-call widget multiway title button selected
In-call widget mute button selected
%@ current call
In-call widget end call button selected
Requesting activation of InCallService
Using multiline label for multiway telephony call.
Using multiline label for multiway FaceTime call.
Using multiline label because call has no stored contact identifier.
Not using multiline label for call.
Invalidating layout element for Siri
Signalling Siri activation success
Activating layout element for Siri
Initializing SiriPresentationViewController with presentationFrame: %@
DBSiriViewController is now unpaired. Invalidating...
Adding touch to dismiss requester: %@.
Removing touch to dismiss requester: %@.
Updating hosted presentation frame for screen resize
Requesting dismissal of Siri due to DBHomeEventType %li
Siri presentation requested!
Borrowing screen for Siri
Siri dismissal requested!
Unborrowing screen for Siri
Siri punchout requested! %@
Unable to lookup target bundle ID for punchout request! URL: %@
Unable to lookup app info for punchout request: %@
Punchout application requires preflight, ignoring launch request.
Handling in-place punchout for %{public}@
Handling punchout for %{public}@
Requesting dismissal because user touched screen
Received drop call button event, requesting dismissal.
Enabling touch to dismiss.
Disabling touch to dismiss.
%{public}@
%{public}@ characteristic=%{public}@
%{public}@ accessory=%{public}@
%{public}@ accessory=%{public}@ HMService=%{public}@ HMCharacteristic=%{public}@
_hasHandledConnect=%@ hasHandledConnect=%@
_hasFinishedConnecting=%@ hasFinishedConnecting=%@
_pageType=%@ pageType=%@
_activeBundleIdentifier=%@ activeBundleIdentifier=%@
Attempt to deactivate application with nil appInfo
Attempt to destroy application with nil appInfo
Attempt to activate application with nil appInfo
Attempt to activate stacked application with nil appInfo
Updating frame for widget scene: %@, to %@, with animation settings: %@
%{public}@ garageDoors=%{public}@
%{public}@ kicking the garage door cache
%{public}@ clearing the garage door cache
%{public}@ serviceType=%{public}@
%{public}@ serviceType=%{public}@ service.uniqueIdentifier=%{public}@ error=%{public}@
%{public}@ previouslyInRange=%{public}@ homeLocationStatus=%{public}ld
%{public}@ setValue: %{public}@
%{public}@ setValue completion: %{public}@ error=<%{public}@>
%{public}@ (requireRead=%@) skipping
%{public}@ (requireRead=%@) readValue
%{public}@ readValue completion: transactionID %lu != %lu
%{public}@ readValue completion: value=%{public}@ error=<%{public}@>
current=%{public}@
update=%{public}@
Registering animation for identifier: %@ client: %@
Attempting to run animation for identifier: %@ client: %@
Running animation for identifier: %@
Postponing animation for identifier: %@, not all clients ready
Deactivating layout element for application: %@
[DBApplicationSceneViewController] Set scene: %@
Suspended launch requested, but the app is foregrounded. Treating the request as foreground.
Preserving existing deactivation reasons (%ld) for suspended launch.
[DBApplicationSceneViewController] Foregrounding car scene for app: %@%@
[DBApplicationSceneViewController] Attaching actions to scene update: %@
[DBApplicationSceneViewController] Attaching URL to scene update: %@
[DBApplicationSceneViewController] Scene update completed for app: %@
Activating layout element for application: %@
[DBApplicationSceneViewController] Backgrounding car scene for app: %@
[DBApplicationSceneViewController] Tried to activate, but we don't have a scene
[DBApplicationSceneViewController] Attaching actions to scene activation: %@
[DBApplicationSceneViewController] Attaching URL to scene activation: %@
[DBApplicationSceneViewController] Activating scene: %@
[DBApplicationSceneViewController] Tried to deactivate, but we don't have a scene
[DBApplicationSceneViewController] Deactivating scene: %@, reasonMask: %ld
[DBApplicationSceneViewController] Received scene: %@
[DBApplicationSceneViewController] Did destroy scene: %@
Showing spinner.
Invalidating spinner timer.
Hiding spinner.
Spinner already hidden.
No available now playing app for dashboard.
Sending play/pause action.
Sending next action.
Sending back action.
Performing Now Playing change request: %@
Error performing change request: %@
Unable to generate a playback command for action %{public}@ state %{public}@
Cancelling held action.
Setting not-playing state.
No available artwork catalog for current song.
Fetching artwork with size %@
Received artwork %@ for item %@
No playing item associated to loaded artwork %@
Failed to load artwork for current playing item %@
No artwork and no current playing item.
Updating labels for current song %@
No available title for current playing item.
No available artist name for current playing item.
Received request for unknown skip forward interval: %{public}@
Setting skip forward button interval %@
Setting next button enabled: %{public}@
Received request for unknown skip backward interval: %{public}@
Setting skip backward interval %@
Setting back button enabled: %{public}@
Setting stop button for livestreaming/loading content in state %@.
Setting pause button for state %@
Setting play button for state %@
Received an empty player response.
Received player response with playing index path %@
Updating now playing song: %@
Received player response without any available now playing item.
Set prediction: %{public}@
Prediction updated: %{public}@
Refreshing predictions for visibility change
%@ not found in the application library
now=%{public}@
considering calendar %{public}@
%{public}@ calendar %{public}@
considering event %@
event is allDay
event ends before now
event canceled
event declined
%{public}@ event %{public}@
Refreshing predictions for event store change
Refreshing predictions Application Library Refresh
Requesting Engine start
Performing action
No action to perform
Performing refresh
Requesting previous prediction
Requesting next prediction
Predictions updated
UUID failed: input=%{public}@ generated=%{public}@
Opening calendar with URL %{public}@
initialValidInterval invalid %{public}f
beforeStartDateValidInterval invalid %{public}f
Activating home screen layout element
Invalidating home screen layout element
Got a nil TO presentation view for identifier: %@
Got a nil FROM presentation view for identifier: %@
bundlePath=%@
init locationManager %{public}p
dealloc locationManager %{public}p
%{public}@ delayed(%{public}@) used cachedCurrentLocation count=%{public}ld
%{public}@ delayed(%{public}@) cachedCurrentLocation used count=%{public}ld
%{public}@ delayed(%{public}@) updated cachedCurrentLocation
%{public}@ startActiveLocationUpdatesFor=%{public}@
%{public}@ starting
%{public}@ stopActiveLocationUpdatesFor=%{public}@
%{public}@ stopping
%{public}@ identifier=%{public}@ currentDistance=%{public}.1f range=%{public}.1f
%{public}@ identifier=%{public}@
%{public}@ status=%{public}d
%{public}@ error=%{public}@
%{public}@ state=%{public}ld region=%{public}@
%{public}@ region=%{public}@
already have handle for process: %@
Resolved maps app dock item to %@
Resolved audio app dock item to %@
Resolved other app dock item to %@
Selected app dock item for bundle identifier %@
Evaluating active dock bundle identifier %@
Bundle identifier is not valid for dock.
Bundle identifier is not visible in layout.
Updating navigation bundle identifier in dock.
Updating audio bundle identifier in dock.
Updating other bundle identifier in dock.
No need for dock bundle identifier update - already visible.
No available navigation application; not updating app dock.
Updating navigation app dock bundle identifier to %@
Unable to update navigation bundle identifier.
No available now playing application; not updating app dock.
Now playing app is not playing; not updating app dock.
Updating now playing app dock bundle identifier to %@
Unable to update now playing bundle identifier.
ILVDP: Application icon info requested for %@
[DBLockOut] lockOutMode updating to %@
Badge settings updated for identifiers: %{public}@
Skipping app %@
DHVC: Application icon info requested for %@
Dashboard not enabled!
No available now playing app to launch from Now Playing.
Invalidating badge for: %{public}@
Data store updated badge value for %{public}@
init networkPathMonitor %{public}p
dealloc networkPathMonitor %{public}p
%{public}@ startNetworkPathMonitorFor=%{public}@
%{public}@ stopNetworkPathMonitorFor=%{public}@
%{public}@ unable to start
%{public}@ start
%{public}@ done
Received layer metadata: %@
Sending metadata to delegate: %@
No delegate to receive metadata
Invalidating layer metadata service
Incoming connection to layer metadata service: %@
Connection not entitled: %@
Connection interrupted: %@
Connection invalidated: %@
Resuming layer metadata connection from %@
No available cluster URL.
Received a base instrument cluster URL; using type AnyContent
Received instrument cluster URL of type instructioncard.
Received instrument cluster URL of type map.
Received an invalid instrument cluster URL: %{public}@
Active navigation identifiers changed: %{public}@
Device is locked, showing alert
Activating splash screen alert
Device is not locked, will not present splash screen alert
Remote alert connected
Alert did activate
Alert did deactivate
Alert did invalidate with error: %@
Hiding status bar for active identifier: %@
Dock icon selected for ID: %@
Soft home button down
Soft home button up
Soft home button tapped
Soft home button cancelled
Soft home button long pressed
[DBLockOutController] Setting new lock out mode: %@
Activating layout element for lock out screen
Invalidating layout element for lock out screen
[LockOut] Action: requesting car UI
[LockOut] Action: enabling siri
[LockOut] Action: disclosure safe
[LockOut] Action: features off
init smartWidgetEngine %{public}p
dealloc smartWidgetEngine %{public}p
startIfNeeded stoppingTimer=%{public}@
stopIfNeeded stoppingTimer=%{public}@
stopIfNeeded stopDelay=%{public}.0f
refreshPredictions requested
refreshDisabled requested
refreshGarageDoors requested
reset currentPredictions
Source=%{public}@ fresh=%{public}@ lastRefresh=%{public}@
Predictions Fresh %{public}@ lastRefreshRequest=%{public}@
Engine starting
Engine started
Engine stopping
Engine stopped
Generating currentPredictions
keep=%{public}@ prediction=%{public}@
nextRefresh=%@
Invalid refresh %{public}.2f
Scheduling refresh in %{public}.0f
Triggering refresh
No Scheduled refresh (distantFuture)
source=%{public}@ updated=%{public}@
fresh=%{public}@ pending=%{public}@
currentPredictions:
connectionReady=%@
lockoutState=%@
pageType=%@
activeBundleIdentifier=%@
connectionReady=%@ lockoutState=%@ activeBundleIdentifier=%@ pageType=%@
Received unknown app URL %{public}@ not included in master list
Received unknown echo URL %{public}@ not included in master list
Updated user notification settings %{public}@
User Notification settings updated for: %{public}@
start %{public}@
done %{public}@ predictionsDidUpdate=%{public}@
match: doorState %{public}@
match: targetDoorState %{public}@
match: obstruction %{public}@
match: NONE(%@) %{public}@
characteristic.uniqueIdentifier=%{public}@ targetDoorStateCharacteristic.uniqueIdentifier=%{public}@
Scene update for appInfo: %@ to map style %@
Scene update for appInfo: %@ to style %ld
Scene update for appInfo: %@ to map style %ld
Transaction fail interval provider: %f seconds
Fail timer fired for transaction: %@
Transaction is running, failing: %@
SceneUpdate transaction for scene: %@ completed with success: %@
[DBSceneUpdate] Delivering deferred actions to scene: %@
Firing scene update completion
Starting sceneUpdate transaction %@
Post Scene update for appInfo: %@ to style: %@, map style %@
didConnectIdentity:%{public}@, is car display: %{public}@, is cluster display: %{public}@
didUpdateIdentity:%{public}@
willDisconnectIdentity:%{public}@
Discarding pending display: %{public}@
Session connected: %@
Session disconnected: %@
Main screen is requesting corner masks.
No pending displays
Session not yet available
Handling connected displays: %{public}@ with session: %{public}@
 enableTelemetry=YES 
CarPlayReceivedMainDisplay
Setting badge visible: %{public}@ for app dock button: %{public}@
Icon accessories did update for icon: %{public}@, app dock button: %{public}@
Icon accessories update for icon: %{public}@, did not match self icon: %{public}@
Updating active bundle identifier to %@ in %@
Already sent sessionStarted Event
iOS now owns main audio.
Accessory now owns main audio.
Announce Messages: %@
Maps appearance preference changed: %@
Received location bitset %@
Sending CA event %@ with %@
Unrecognized analytics event %@
Exported state %@
%@ importing icon state %@
Hiding News per News app policy.
Failed saving current icon state: %@
init homeManager %{public}p
dealloc homeManager %{public}p
requestAuthorization error=%{public}@
Setting up homeManager
Updating homes
newHomes=%{public}@ removedHomes=%{public}@
Flattened pages to %@
Beginning session: %@
Ended session: %@
Starting display layout publisher transition for workspace change session: %@
[WorkspaceOwner] Starting update for base view controller
[WorkspaceOwner] Update for base view controller completed
[WorkspaceOwner] Starting dismissal of base view controller
[WorkspaceOwner] Dismissal of base view controller completed
[WorkspaceOwner] Starting presentation of base view controller
[WorkspaceOwner] Presentation of base view controller completed
[WorkspaceOwner] Starting update for stacked view controller
[WorkspaceOwner] Update for stacked view controller completed
[WorkspaceOwner] Starting dismissal of stacked view controller
[WorkspaceOwner] Dismissal of stacked view controller completed
[WorkspaceOwner] Starting presentation of stacked view controller
[WorkspaceOwner] Presentation of stacked view controller completed
[WorkspaceOwner] Starting suspended activation
[WorkspaceOwner] Suspended activation completed
Invalidating display layout publisher transition for workspace change session: %@
[WorkspaceOwner] Delivering suspended activation to existing view controller
[WorkspaceOwner] Using transient view controlller for suspended activation
No available audio app for now playing.
Now playing app is web content; ignoring.
Now playing app is not valid for CarPlay; ignoring.
Resolved now playing launch info to %@
Resolved now playing identifier to %@
No available now playing app proxy.
Now playing application is restricted; ignoring.
No changes to now playing bundle identifier.
Updated now playing to %@
Sending focus movement action: %@ to scene: %@
Deferring events for display: %@, to context: 0x%x for window: %@, pid: %d
hot condition changed from %llu to %llu
hot condition initialized to %llu
notify_register(hot) failed : status=%i
cold condition changed from %llu to %llu
cold condition initialized to %llu
notify_register(cold) failed : status=%i
Thermal level changed to %{public}@ (%{public}d)
Smart widget hidden default changed: %@
Turned on Malloc Stack Logging Lite for CarPlay
CarPlay hit 100 percent of its jetsam limit. Malloc Stack Logging Lite will automatically be turned on next time CarPlay is launched.
received open application request! %@
Dashboard has been disabled with user default
Resolved target dashboard identifier is %{public}@, current identifier is: %{public}@
Updating navigation widgets to new identifier
Target dashboard identifier is nil, keeping identifer as %{public}@
Active navigation identifier is different: %@
Handling post-death of process with identifier: %{public}@. Current nav identifier is: %{public}@
Geo services are supported.
Geo services are not supported in this country.
SgXw
So6UIViewC
So14MTMaterialViewCSg
So25CRSUIWallpaperPreferencesC
yyXlG
ySo17UITraitCollectionC_SStG
ySo17UITraitCollectionCSSG
SaySo6UIViewCG
SaySo11UIImageViewCG
So7UIColorC
burnView
materialView
wallpaperPreferences
platterCornerRadius
dimmingRectViews
dimmingCornerViews
overlayColor
cornerRadius
contentFrame
origin
size
width
height
AppDock
DBAppHistoryAppDockProviding
NSObject
DBStatusBarStateProvider
CRSSiriPreferencesObserver
DNDStateUpdateListener
UNNotificationSettingsCenterDelegate
BSInvalidatable
DBWorkspaceObserver
UIStatusBarStateProvider
UIStatusBarStyleDelegate_SpringBoardOnly
UIStatusBarStyleDelegate
DBDashboardAnimation
DBEvent
DBFromStackedAppAnimationSettings
DBFromStackedAppAnimation
DBDashboardLayoutEngine
DBLeafIconDataSource
SBLeafIconDataSource
DBScreenshotManager
DBScreenshotFlasher
DBInstrumentClusterRootViewController
DBEnvironmentConfigurationObserving
FBSceneObserver
DBProcessMonitorObserving
FBSceneManagerObserver
DBStatusBarHostWindow
DBHomeKitBoolCharacteristic
DBEnvironmentConfiguration
CARSessionCommandObserving
DBAppPolicyProviding
DBIconListPageControl
DBLeafIcon
DBStatusBarHomeButton
DBInCallWidgetButtonRingView
DBInCallWidgetButton
DBInCallWidgetMultiwayTitleButton
DBInCallWidgetAppIconButton
DBNotificationView
DBBannerAuthority
BNConsidering
DBNotificationViewController
BNBannerSourceListenerDelegate
BNPresentingDelegate
DBNotificationSuspending
DBSmartWidgetHomeSource
DBHomeManagerObserver
DBHomeObserver
DBWorkspaceStateChangeRequest
NSCopying
NSMutableCopying
DBMutableWorkspaceStateChangeRequest
DBWallpaperViewController
DBCalendarLeafIcon
DBUserAlertServer
URTAlertServiceDelegate
DBSmartWidgetHomePrediction
DBGarageDoorObserver
DBHomeKitServiceObserver
_DBLongPressGestureRecognizer
_DBCornerRadiusWindow
CRSUIMapStyleProviding
CRSUIMutableMapStyleProviding
DBDashboard
DBLockoutControllerDelegate
DBNotificationViewControllerDelegate
DBSystemAlertPresenting
CRSInCallAssertionServiceObserver
DBEnvironment
DBEventHandling
FBSceneManagerDelegate
DBApplicationLaunchInfo
DBScrollButton
DBFolderView
DBWidgetFocusableView
CRSUIDashboardWidgetWindowService
CRSUIDashboardWidgetWindowClient
DBWidgetSceneViewController
DBWidgetFocusableViewDelegate
NSXPCListenerDelegate
_DBWorkspaceStateChangeSession
DBWorkspaceStateChangeSession
DBWorkspace
DBDashboardEntity
DBDashboardSiriEntity
DBDashboardHomescreenEntity
DBDashboardApplicationSceneEntity
DBDashboardProxiedApplicationSceneEntity
DBLockOutWindow
DBAppHistoryObserving
DBAppHistory
StateResolution
DBDashboardWorkspaceStateResolution
DBDashboardWorkspaceStateResolver
DBToStackedAppAnimationSettings
DBToStackedAppAnimation
_DBClusterCornerRadiusWindow
DBInstrumentCluster
DBNavigationStateObserving
DBLockOutView
DBStatusBarScreenResizeButton
DBKeybagMonitorObserver
DBKeybagMonitor
DBNowPlayingIcon
DBIconDropShadowProvider
DBAppToAppAnimation
_DBAppSwitchDosidoAnimation
_DBAppSwitchReducedMotionAnimation
DBWidgetFocusRingView
DBWidgetView
DBWidgetViewController
DBWidgetViewFocusEnabledProviding
DBAppDockItem
DBInCallWidgetViewController
DBStatusBarWindow
DBSmartWidget
DBAdditions
_DBWidgetState
DBWidgetStackViewController
DBSiriViewController
SiriPresentationControllerDelegate
SiriPresentationIntentUsageDelegate
DBDashboardWorkspaceEntityPresenting
DBHomeKitService
HMAccessoryDelegate
DBHomeKitEntity
DBDashboardWorkspaceState
DBWorkspaceState
DBMutableDashboardWorkspaceState
DBDashboardStateObserver
DBDashboardStateProvider
DBHomeViewPageChangeObserving
Dashboard
DBMapsWidgetViewController
DBHome
DBLocationManagerObserver
DBNetworkPathMonitorObserver
HMHomeDelegatePrivate
HMHomeDelegate
DBHomeKitCharacteristic
DBBooksLeafIcon
DBIconScrollView
DBBuddyMonitorObserver
DBBuddyMonitor
DBAnimationView
DBColorButton
DBAnimationSettings
DBSmartWidgetPredictionObserver
DBSmartWidgetPrediction
DBTodayViewSynchronizedAnimation
DBTodayViewSynchronizedAnimationManager
DBApplicationSceneViewController
DBNowPlayingWidgetViewController
CPUINowPlayingObserving
DBNowPlayingDelegate
MPRequestResponseControllerDelegate
DBNowPlayingFocusHighlightButton
DBStatusBarViewController
DBZipArchiver
DBArchiving
DBSmartWidgetView
DBFocusMovementManager
DBSmartWidgetCalendarSource
DBSmartWidgetViewController
DBSmartWidgetEngineObserver
UIGestureRecognizerDelegate
DBInstrumentClusterWorkspaceOwner
DBWorkspaceOwner
DBWorkspaceStateChangeSessionDelegate
DBSmartWidgetCalendarPrediction
DBIconLabelBackdropView
DBIconView
DBDashboardViewStateObserving
DBDashboardRootViewController
DBAppToHomeAnimationSettings
DBAppToHomeAnimation
_DBSuspendAppToHomeZoomAnimation
_DBSuspendAppToHomeScaleAnimation
_DBSuspendAppToHomeReducedMotionAnimation
DBUserAlertViewController
DBUserAlertView
DBStatusBarHomeButtonStateManager
DBLocationManager
CLLocationManagerDelegate
DBProcessMonitor
DBStatusBarButton
DBAppDockViewController
DBIconListView
DBIconLayoutVehicleDataProvider
DBIconModelApplicationDataSource
SBHIconManagerDelegate
CRSIconLayoutVehicleDataProviding
DBLockOutViewController
DBLockOutViewDelegate
DBDashboardHomeViewController
DBIconBadgeControllerObserving
FBSApplicationDataStoreObserver
SBRootFolderControllerDelegate
SBFolderControllerDelegate
DBIconProviding
DBCalendarLeafIconDataSource
DBNetworkPathMonitor
CRLayerPropertyService
DBLayerMetadataService
DBInstrumentClusterURLHandler
DBNavigationStateProvider
CARActiveNavigationIdentifiersObserving
DBHomeKitServiceTypes
DBSplashScreenDismissalService
DBSplashScreenDismissalServer
DBSplashScreenAlert
SBSRemoteAlertHandleObserver
DBRootStatusBarViewController
CRSUIStatusBarStyleServiceDelegate
DBAppDockViewControllerDelegate
DBStatusBarButtonStateManagerDelegate
DBLockOutController
DBDisclosureMonitorObserver
DBLockOutViewControllerDelegate
DBSiriMonitorObserver
DBThermalMonitorObserver
DBSmartWidgetEngine
DBSmartWidgetResourceProvider
DBSmartWidgetSourceDelegate
Contexts
DBDisclosureMonitor
_DBIconListLayoutProvider
SBIconListLayoutProvider
DBIconManager
DBHomeToAppAnimationSettings
DBHomeToAppAnimation
_DBLaunchAppFromHomeZoomAnimation
_DBLaunchAppFromHomeScaleAnimation
_DBLaunchAppFromHomeReducedMotionAnimation
DBUtilities
DBIconBadgeController
DBSmartWidgetSource
DBGarageDoor
DBDashboardWorkspaceStateChangeItem
DBWorkspaceStateChangeItem
DBDashboardWorkspaceStateSiriChangeItem
DBDashboardWorkspaceStateHomescreenChangeItem
DBDashboardWorkspaceStateApplicationSceneChangeItem
DBDateRange
DBNotificationWindow
DBFolderController
DBSceneUpdate
DBDisplayManager
CARSessionObserving
DBNavigationAppInfoProviding
FBSDisplayObserving
DBStatusBarSensorIndicatorView
DBSiriMonitor
DBInCallWidgetAvatarView
DBComparison
DBAppDockButton
SBLeafIconObserver
SBIconObserver
DBAnalytics
Analytics
_DBAnalyticsAppInfo
_DBAnalyticsScreenInfo
_DBAnalyticsTimeAccumulator
_DBAnalyticsChargeInfo
DBMapsNavigationWidgetViewController
DBApplicationInfo
CarPlayApp
DBIconModel
DBHomeManager
DBHomeKitResourceProvider
HMHomeManagerDelegate
DBIconModelStore
DBBooksLeafIconDataSource
DBDashboardWorkspaceOwner
DBAppAlertPresenting
DBNowPlayingObserver
DBFocusAssertion
DBFocusController
DBThermalMonitor
DBOEMIcon
DBDateFormatterToken
DBDateFormatter
DBIconImageCache
DBWidgetContainerViewController
DBSmartWidgetAnimating
DBWidgetSizeManaging
DBHomeKitDoorStateCharacteristic
DBLayoutHelperView
DashBoard
CRSAppHistoryDataProviding
CRSAppHistoryServiceDelegate
CRSIconLayoutServiceDelegate
FBSystemServiceDelegate
DBTodayViewController
DBLayoutHelperViewDelegate
SBHLegibility
DBHomeKitCharacteristicTypes
arrayWithObjects:count:
containsObject:
_isNowPlayingApplicationForBundleIdentifier:
_isMapsApplicationForBundleIdentifier:
orderedAppsMatchingDockCategory:
bundleIdentifier
db_map:
array
orderedAppHistory
countByEnumeratingWithState:objects:count:
appDockCategoryForBundleIdentifier:
addObject:
_allInstalledApplicationsInCategory:
bs_each:
arrayWithArray:
policyForBundleIdentifier:
isEqualToString:
launchUsingMusicUIService
launchUsingTemplateUI
applicationCategory
_evaluatePolicyForBundleIdentifier:withBlock:
dictionaryWithObjects:forKeys:count:
numberWithUnsignedInteger:
objectForKeyedSubscript:
sharedApplicationLibrary
allInstalledApplications
copy
bs_filter:
_preferredBundleIdentifierInCategory:
isFirstParty
sortedArrayUsingComparator:
isBundleIdentifierValidForDock:
orderedBundleIdentifiersMatchingDockCategory:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
init
weakObjectsHashTable
setFrame:
setSensorActivityIndicator:
serviceForClientIdentifier:
addStateUpdateListener:withCompletionHandler:
_focusStatusUpdated:
queryCurrentStateWithCompletionHandler:
currentNotificationSettingsCenter
setDelegate:
addObserver:
defaultCenter
_localeChanged:
addObserver:selector:name:object:
_timeZoneChanged:
_resetTimeUpdateTimer
_setupSystemStatusDomains
_registerForNotifications
environmentConfiguration
session
_updateETCStateWithSession:
_fetchAnnounceNotificationsSetting
updateStatusBarData
_telephonyDataUpdatedWithData:
observeDataWithBlock:
data
_wifiDataUpdatedWithData:
environment
isConnectedWirelessly
_batteryDataUpdatedWithData:
_mediaDataUpdatedWithData:
_callingDataUpdatedWithData:
callingData
activeCallAttributions
count
ringingCallAttributions
activeVideoConferenceAttributions
ringingVideoConferenceAttributions
_generateData
statusBarStateProvider:didPostStatusBarData:withActions:
removeObject:
_etcChanged:
_getTimeData:
_getTelephonyData:
_getBatteryData:
_getETCData:
_getFocusData:
_getTTRData:
_getMediaData:
_getAnnounceNotificationsData:
timeUpdateTimer
invalidate
sharedInstance
date
dateByAddingTimeInterval:
formatDateAsTimeNoAMPM:
setCachedTimeString:
cachedTimeString
timerWithTimeInterval:target:selector:userInfo:repeats:
setTimeUpdateTimer:
currentRunLoop
addTimer:forMode:
getCString:maxLength:encoding:
setWifiData:
setTelephonyData:
telephonyData
primarySIMInfo
serviceState
signalStrengthBars
dataNetworkType
_statusBarNetworkTypeForSystemStatusNetworkType:
isDualSIMEnabled
secondarySIMInfo
wifiData
isWifiActive
isAssociatedToIOSHotspot
setBatteryData:
batteryData
chargingState
percentCharge
isBatterySaverModeActive
object
electronicTollCollectionAvailable
setEtcStatus:
etcStatus
boolValue
activeModeConfiguration
mode
symbolImageName
setActiveModeSymbolName:
state
activeModeSymbolName
length
cStringUsingEncoding:
_radarItemEnabled
_radarItemVisible
setMediaData:
mediaData
_sensorIndicatorTypeForData:
sensorIndicatorView
setSensorIndicatorType:
audioRecordingAttributionList
firstObject
auditToken
identifierWithPid:
handleForIdentifier:error:
identity
embeddedApplicationIdentifier
setNowRecordingBundleIdentifier:
_showIndicatorForData:
audioRecordingAttributions
cameraCaptureAttributions
setCallingData:
announcementCarPlaySetting
notificationSystemSettings
_isAnnounceNotificationsEnabledForSystemSettings
siriPreferences
announceNotificationsInCarPlayTemporarilyDisabled
telephonyDomain
batteryDomain
wifiDomain
mediaDomain
callingDomain
inCallServiceActive
activeBundleIdentifier
nowRecordingBundleIdentifier
setActiveBundleIdentifier:
resetFormattersIfNecessary
preferences:carPlayAnnounceEnablementTypeChanged:
preferences:announceNotificationsInCarPlayTemporarilyDisabledChanged:
preferences:autoSendInCarPlayEnabledChanged:
preferences:autoSendInHeadphonesEnabledChanged:
preferences:mainAutoSendEnabledChanged:
stateService:didReceiveDoNotDisturbStateUpdate:
userNotificationSettingsCenter:didUpdateNotificationSourceIdentifiers:
userNotificationSettingsCenter:didUpdateNotificationSystemSettings:
workspace:stateDidChangeFromState:toState:
addStatusBarStateObserver:
removeStatusBarStateObserver:
getStatusBarData:
doubleHeightStatusStringForStyle:
statusBar:styleForRequestedStyle:overrides:
statusBar:willAnimateFromHeight:toHeight:duration:animation:
statusBar:didAnimateFromHeight:toHeight:animation:
statusBarSystemNavigationAction:
statusBar:didTriggerButtonType:withAction:
statusBar:didTriggerButtonType:withAction:context:
statusBar:effectiveStyleOverridesForRequestedStyle:overrides:
overriddenRequestedStyleFromStyle:
statusBarShouldDisableRegionActions:
initWithEnvironment:
setSensorIndicatorView:
stateObservers
setStateObservers:
setEnvironment:
setTelephonyDomain:
setBatteryDomain:
setWifiDomain:
setMediaDomain:
setCallingDomain:
dndStateService
setDndStateService:
setSiriPreferences:
cachedCarPlayAnnounceSetting
setCachedCarPlayAnnounceSetting:
.cxx_destruct
_sensorIndicatorView
_nowRecordingBundleIdentifier
_timeUpdateTimer
_stateObservers
_environment
_etcStatus
_activeBundleIdentifier
_telephonyDomain
_telephonyData
_batteryDomain
_batteryData
_wifiDomain
_wifiData
_mediaDomain
_mediaData
_callingDomain
_callingData
_dndStateService
_activeModeSymbolName
_cachedTimeString
_siriPreferences
_cachedCarPlayAnnounceSetting
T@"NSTimer",&,N,V_timeUpdateTimer
T@"NSHashTable",&,N,V_stateObservers
T@"<DBEnvironment>",W,N,V_environment
T@"NSNumber",&,N,V_etcStatus
T@"NSString",C,N,V_activeBundleIdentifier
T@"NSString",C,N,V_nowRecordingBundleIdentifier
T@"STTelephonyStatusDomain",&,N,V_telephonyDomain
T@"STTelephonyStatusDomainData",C,N,V_telephonyData
T@"STBatteryStatusDomain",&,N,V_batteryDomain
T@"STBatteryStatusDomainData",&,N,V_batteryData
T@"STWifiStatusDomain",&,N,V_wifiDomain
T@"STWifiStatusDomainData",&,N,V_wifiData
T@"STMediaStatusDomain",&,N,V_mediaDomain
T@"STMediaStatusDomainData",&,N,V_mediaData
T@"STCallingStatusDomain",&,N,V_callingDomain
T@"STCallingStatusDomainData",&,N,V_callingData
T@"DNDStateService",&,N,V_dndStateService
T@"NSString",C,N,V_activeModeSymbolName
T@"NSString",C,N,V_cachedTimeString
T@"CRSSiriPreferences",&,N,V_siriPreferences
Tq,N,V_cachedCarPlayAnnounceSetting
TB,R,N
T@"DBStatusBarSensorIndicatorView",&,N,V_sensorIndicatorView
appDockViewController
fromTransitionContainerView
fromView
toIdentifier
toTransitionContainerView
toView
rootContainerView
rootContainerBackgroundColor
doesNotRecognizeSelector:
initWithSettings:
startAnimationWithCompletion:
_appDockViewController
_fromTransitionContainerView
_fromView
_toIdentifier
_toTransitionContainerView
_toView
_rootContainerView
_rootContainerBackgroundColor
T@"DBAppDockViewController",R,N,V_appDockViewController
T@"UIView",R,N,V_fromTransitionContainerView
T@"UIView",R,N,V_fromView
T@"NSString",R,C,N,V_toIdentifier
T@"UIView",R,N,V_toTransitionContainerView
T@"UIView",R,N,V_toView
T@"UIView",R,N,V_rootContainerView
T@"UIColor",R,N,V_rootContainerBackgroundColor
initWithType:context:
eventWithType:context:
type
context
_type
_context
TQ,R,N,V_type
T@,R,N,V_context
addSubview:
setActiveBundleIdentifier:animated:
setBackgroundColor:
setAlpha:
animateWithDuration:animations:completion:
animationWithSettings:
displayConfiguration
bounds
currentSafeViewAreaFrame
mainWindowFrame
currentStatusBarEdge
isRightHandDrive
presentsFullScreen
presentsUnderStatusBar
statusBarInsets
currentViewAreaFrame
currentViewAreaSupportsUIOutsideSafeArea
initWithEnvironmentConfiguration:
rootViewControllerContentInsets
homeViewControllerInsets
sceneFrameForApplication:
safeAreaInsetsForApplication:
areaOfInterestFrameForApplication:
statusBarHostWindowFrame
statusBarWindowFrame
cornerRadiusViewFrame
notificationWindowFrame
wallpaperFrame
areaOfInterestWindowFrame
statusBarHostSceneFrame
cornerRadiusWindowFrame
resizeAnimationWindowFrame
setEnvironmentConfiguration:
_environmentConfiguration
_mainWindowFrame
_areaOfInterestWindowFrame
_statusBarHostSceneFrame
_cornerRadiusWindowFrame
_resizeAnimationWindowFrame
T@"DBEnvironmentConfiguration",&,N,V_environmentConfiguration
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_mainWindowFrame
T{UIEdgeInsets=dddd},R,N
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_areaOfInterestWindowFrame
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_statusBarHostSceneFrame
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_cornerRadiusWindowFrame
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_resizeAnimationWindowFrame
_initWithIdentifier:applicationInfo:sessionConfiguration:
storeForApplication:
invalidateBadgeValue
applicationInfo
identifier
traitCollectionWithUserInterfaceIdiom:
stringWithFormat:
crsui_imageNamed:compatibleWithTraitCollection:
icon:imageWithInfo:
imageDescriptorNamed:
setScale:
size
sessionConfiguration
manufacturerIcons
isPrerendered
pixelSize
enumerateObjectsUsingBlock:
imageData
imageWithData:scale:
whiteColor
_flatImageWithColor:
scale
drawInRect:blendMode:alpha:
sbf_imageFromContextWithSize:scale:type:pool:drawing:
CGImage
initWithCGImage:scale:
initWithImages:
imageForDescriptor:
imageOrientation
imageWithCGImage:scale:orientation:
displayName
manufacturerIconLabel
bundleForClass:
localizedStringForKey:value:table:
badgeNumberOrStringForIcon:
dataStore
objectForKey:
integerValue
localizedStringFromNumber:numberStyle:
_stringIsDigits:
setCachedBadgeValue:
cachedBadgeValue
decimalDigitCharacterSet
invertedSet
rangeOfCharacterFromSet:
dataSourceForApplicationInfo:
dataSourceForOEMIconWithSessionConfiguration:
dataSourceForNowPlayingIcon
priorityForIcon:
icon:displayNameForLocation:
icon:defaultImageWithInfo:
icon:unmaskedImageWithInfo:
canGenerateIconsInBackgroundForIcon:
iconCanTruncateLabel:
iconCanTightenLabel:
icon:statusDescriptionForLocation:
progressStateForIcon:
progressPercentForIcon:
isProgressPausedForIcon:
formattedAccessoryStringForIcon:
accessoryTypeForIcon:
labelAccessoryTypeForIcon:
isTimedOutForIcon:
iconSupportsUninstall:
iconCompleteUninstall:
iconAllowsLaunch:
iconDisallowsLaunchForObscuredReason:
icon:displayNameForObscuredDisabledLaunchForLocation:
icon:launchFromLocation:context:
iconSupportsConfiguration:
iconSupportsRasterization:
iconShouldIgnoreOtherDataSources:
supportedGridSizeClassesForIcon:
folderTitleOptionsForIcon:
folderFallbackTitleForIcon:
tagsForIcon:
iTunesCategoriesOrderedByRelevancyForIcon:
uniqueIdentifier
configurationStorageIdentifier
T@"NSString",R,C,N
setApplicationInfo:
setIdentifier:
setSessionConfiguration:
setDataStore:
_applicationInfo
_identifier
_sessionConfiguration
_dataStore
_cachedBadgeValue
T@"NSString",&,N,V_identifier
T@"DBApplicationInfo",&,N,V_applicationInfo
T@"CARSessionConfiguration",&,N,V_sessionConfiguration
T@"FBSApplicationDataStore",&,N,V_dataStore
T@"NSString",C,N,V_cachedBadgeValue
dictionary
screens
displayIdentity
initWithWindowScene:
flashColor:withCompletion:
setObject:forKeyedSubscript:
saveScreenshotsForDisplayIdentifiers:completion:
_windowScene
_orderWindowFrontAndThenOut:withColor:
coordinateSpace
screen
_displayID
_initWithFrame:debugName:windowScene:
setWindowLevel:
setUserInteractionEnabled:
initWithFrame:
setContentView:
setHidden:
alpha
_tearDown
removeAllObjects
_orderWindowOut:
cancelPreviousPerformRequestsWithTarget:selector:object:
_createUIWithColor:
_orderFrontWithoutMakingKey
performSelector:withObject:afterDelay:inModes:
windowScene
_flashCompletionBlocks
_flashWindow
_flashView
_windowVisible
T@"UIWindowScene",R,N,V_windowScene
sharedPhotoLibrary
creationRequestForAssetFromScreenshotImage:
placeholderForCreatedAsset
performChanges:completionHandler:
timeIntervalSinceReferenceDate
defaultManager
temporaryDirectory
numberWithDouble:
URLByAppendingPathComponent:
writeToURL:atomically:
imageWithData:
blackColor
CGColor
bezierPathWithRoundedRect:cornerRadius:
CGPath
imageWithCGImage:
overrideSceneSettingsForInternalUse
removeOverrideSceneSettings
removeObserver:
scenePresenter
dealloc
sceneHostView
removeFromSuperview
setSceneHostView:
uiPresentationManager
requester
createPresenterWithIdentifier:priority:
setAppearanceStyle:
setBackgroundColorWhileHosting:
modifyPresentationContext:
activate
presentationView
view
_frame
setNeedsLayout
scene
currentViewAreaSafeAreaInsets
setSafeAreaInsetsPortrait:
_synchronizedDrawingFence
setAnimationFence:
setAnimationSettings:
updateUISettingsWithTransitionBlock:
setOverrideSceneSettings:
proxiedApplicationInfo
settingsClass
mutableCopy
setShowsCompass:
setShowsETA:
setShowsSpeedLimit:
setLayoutJustification:
setItemType:
_performSceneUpdateForeground:settings:
installedApplicationWithBundleIdentifier:
supportsInstrumentClusterNavigation
isCertificationApp
_updateSceneID
setTargetAppCrashTally:
setProxyAppCrashTally:
_invalidateScene
lastClusterURL
foregroundSceneWithURL:
setForeground:
updateSettingsWithBlock:
destroyScene:withTransitionContext:
useNightModeTester
valueBool
targetBundleIdentifier
policyForApplicationInfo:
_sceneSettingsCreateIfNecessary
applySettingsForClusterURL:toSceneSettings:
setLastClusterURL:
_performSceneUpdateForeground:
settings
setDisplayConfiguration:
setLevel:
setInterfaceOrientation:
carUserInterfaceStyle
setUserInterfaceStyle:
effectiveMapsUserInterfaceStyle
setMapStyle:
parametersForSpecification:
setSettings:
transaction
invalidated
targetAppCrashTally
proxyAppCrashTally
preflightRequiredForApplicationInfo:
setProxiedApplicationBundleIdentifier:
transitionContextClass
_applySceneSettingsToSettings:foreground:sceneSpecification:
identityForEmbeddedApplicationIdentifier:
isForeground
setLaunchIntent:
initWithProcessIdentity:executionContextProvider:
setTransaction:
sceneID
sceneWithIdentifier:
setScene:
_invalidateRetryTimer
_scheduleForegroundRetry
setCompletionBlock:
setWaitsForSceneCommits:
identityForIdentifier:workspaceIdentifier:
updateSceneWithIdentity:parameters:transitionContext:
begin
setRetryDelay:
retryTimer
setRetryTimer:
retryDelay
_retryTimerFired:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
setInvalidated:
failWithReason:
environmentConfiguration:viewAreaDidChangeFromViewAreaFrame:safeAreaInsets:toViewAreaFrame:safeAreaInsets:duration:transitionControlType:
environmentConfiguration:receivedShowUIWithURL:
stopUIReceivedForEnvironmentConfiguration:
environmentConfigurationPairedVehiclesDidChange:
environmentConfiguration:appearanceStyleDidChange:
environmentConfiguration:nightModeDidChange:
environmentConfiguration:mapsAppearanceStyleDidChange:
sceneContentStateDidChange:
sceneDidActivate:
sceneWillDeactivate:withError:
sceneDidInvalidate:
scene:clientDidConnect:
scene:didPrepareUpdateWithContext:
scene:didApplyUpdateWithContext:
scene:didCompleteUpdateWithContext:error:
scene:didUpdateClientSettingsWithDiff:oldClientSettings:transitionContext:
processMonitor:shouldHandleDeathOfBundleIdentifier:isCrash:
processMonitor:didHandleDeathOfBundleIdentifier:
sceneManager:didAddScene:
sceneManager:willRemoveScene:
sceneManager:didCreateScene:
sceneManager:willDestroyScene:
sceneManager:didDestroyScene:
sceneManager:didCreateScene:withClient:
sceneManager:willUpdateScene:withSettings:transitionContext:
sceneManager:willCommitUpdateForScene:transactionID:
sceneManager:didCommitUpdateForScene:transactionID:success:
sceneManager:didCommitUpdateForScene:transactionID:
sceneManager:updateForScene:preparedWithContext:
sceneManager:updateForScene:appliedWithContext:
sceneManager:updateForScene:completedWithContext:error:
updateSceneWithAnimationSettings:
setTargetBundleIdentifier:
_bundleIdentifier
backgroundScene
setScenePresenter:
setRequester:
overrideSceneSettings
_invalidated
_overrideSceneSettings
_sceneID
_scene
_targetBundleIdentifier
_displayConfiguration
_scenePresenter
_sceneHostView
_requester
_retryTimer
_retryDelay
_transaction
_lastClusterURL
_targetAppCrashTally
_proxyAppCrashTally
T@"FBSDisplayConfiguration",&,N,V_displayConfiguration
T@"<UIScenePresenter>",&,N,V_scenePresenter
T@"UIView<UIScenePresentation>",&,N,V_sceneHostView
T@"NSString",C,N,V_requester
T@"NSString",R,N,V_sceneID
T@"FBScene",&,N,V_scene
TB,N,V_invalidated
T@"NSTimer",&,N,V_retryTimer
Td,N,V_retryDelay
T@"FBApplicationUpdateScenesTransaction",&,N,V_transaction
T@"NSURL",&,N,V_lastClusterURL
TQ,N,V_targetAppCrashTally
TQ,N,V_proxyAppCrashTally
TB,N,V_overrideSceneSettings
T@"NSString",&,N,V_targetBundleIdentifier
hitTest:withEvent:
load
value
numberWithBool:
setValue:
characteristicFormat
formatedValue
setBoolValue:
TB,N
useSceneInterfaceStyle
setState:
db_firstObjectPassingTest:
configuration
rightHandDrive
traitCollection
supportsFocus
transportType
manufacturerIconVisible
supportsACBack
isGeoSupported
initWithPolicyProvider:
isCarDisplay
initWithProtocol:callbackQueue:
_pairedVehiclesDidChange:
_updateVehicleInfoSync:notifyPairedVehicleChange:
strongToStrongObjectsMapTable
hardwareIdentifier
viewAreas
_computeStatusBarEdgesForViewAreas:
currentViewArea
_viewAreaFrameForViewArea:
_safeAreaInsetsForViewArea:
_unadjustedSafeAreaFrameForViewArea:
currentViewAreaTransitionControlType
_statusBarEdgeForViewArea:
supportsFocusTransfer
userInterfaceStyleForScreenUUID:
mapInterfaceStyleForScreenUUID:
vehicle
appearanceModePreference
isAmbientBrightnessNighttime
nightMode
observers
bs_firstObjectPassingTest:
supportsUIOutsideSafeArea
MFiCertificateSerialNumber
screenScale
visibleFrame
safeFrame
unadjustedSafeFrame
interactionAffordances
iconRowsForScreenHeight:iconImageSize:statusBarEdge:interactionAffordances:
iconColumnsForScreenWidth:iconImageSize:statusBarEdge:
carPlayDeclaration
effectivePolicyForAppDeclaration:
setObject:forKey:
screenInfoForScreenID:
currentViewAreaSupportsFocusTransfer
setCurrentViewAreaFrame:
setCurrentViewAreaSafeAreaInsets:
setCurrentViewAreaTransitionControlType:
setCurrentStatusBarEdge:
setCurrentViewAreaSupportsFocusTransfer:
_effectiveVehicleAppearancePreference
_prefersDarkMapsAppearance
mapsUserInterfaceStyle
userInterfaceStyle
mapsAppearancePreference
pairedVehicleManager
vehicleForCertificateSerial:
_sync_pairedVehicle
_updateVehicleInfo:notifyPairedVehicleChange:
vehicleUpdateQueue
pairingStatus
setKnownVehicle:
setPairedVehicle:
UUIDString
setVehicleID:
wallpaperPreferences
setVehicle:
viewAreaToStatusBarEdgeMap
statusBarEdgeOverride
internalSettingsValue
_stringForStatusBarEdge:
statusBarEdge
session:openURL:
session:handleSiriRequestEvent:
session:handleSiriRequestEvent:withPayload:
session:didSetViewArea:forScreenID:withDuration:transitionControlType:
session:showUIForScreenInfo:withURL:
session:stopUIForScreenInfo:
session:receivedUnhandledRemoteEvent:withPayload:
session:didUpdateNightMode:
session:didUpdateAppearanceStyle:forScreenUUID:
session:didUpdateMapAppearanceStyle:forScreenUUID:
sessionDidUpdateCarCapabilities:
initWithDisplayConfiguration:layoutPublisher:iconBadgeController:appPolicyEvaluator:session:navigationStateProvider:
nightModeUserInterfaceStyle
fetchEnhancedIntegrationStatusWithCompletion:
iconRowCount
iconColumnCount
isStatusBarDriveSide
layoutJustification
screenSupportsFocus
clusterControlChannel
setClusterControlChannel:
layerMetadataService
setLayerMetadataService:
analytics
displayLayoutPublisher
currentUnadjustedSafeViewAreaFrame
isACBackSupported
isKnownVehicle
vehicleID
OEMIconLabel
isOEMIconVisible
isPairedVehicle
navigationStateProvider
iconBadgeController
appPolicyEvaluator
appHistory
iconImageCache
setIconImageCache:
setPairedVehicleManager:
policyLock_appPolicyForBundleID
setPolicyLock_appPolicyForBundleID:
setObservers:
setViewAreaToStatusBarEdgeMap:
setMapsUserInterfaceStyle:
setVehicleUpdateQueue:
_policyLock
_screenSupportsFocus
_currentViewAreaSupportsFocusTransfer
_acBackSupported
_connectedWirelessly
_geoSupported
_knownVehicle
_OEMIconVisible
_pairedVehicle
_rightHandDrive
_interactionAffordances
_layoutJustification
_session
_clusterControlChannel
_layerMetadataService
_analytics
_displayLayoutPublisher
_screen
_screenScale
_currentViewAreaTransitionControlType
_currentStatusBarEdge
_traitCollection
_vehicle
_vehicleID
_OEMIconLabel
_carUserInterfaceStyle
_navigationStateProvider
_iconBadgeController
_appPolicyEvaluator
_appHistory
_wallpaperPreferences
_iconImageCache
_pairedVehicleManager
_policyLock_appPolicyForBundleID
_observers
_viewAreaToStatusBarEdgeMap
_mapsUserInterfaceStyle
_vehicleUpdateQueue
_currentViewAreaFrame
_currentUnadjustedSafeViewAreaFrame
_currentViewAreaSafeAreaInsets
T@"CRPairedVehicleManager",&,N,V_pairedVehicleManager
T@"NSMutableDictionary",&,N,V_policyLock_appPolicyForBundleID
T@"CARObserverHashTable",&,N,V_observers
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_currentViewAreaFrame
T{UIEdgeInsets=dddd},N,V_currentViewAreaSafeAreaInsets
TQ,N,V_currentViewAreaTransitionControlType
TQ,N,V_currentStatusBarEdge
TB,N,V_currentViewAreaSupportsFocusTransfer
T@"NSMapTable",&,N,V_viewAreaToStatusBarEdgeMap
Tq,N,V_mapsUserInterfaceStyle
T@"NSObject<OS_dispatch_queue>",&,N,V_vehicleUpdateQueue
TQ,R,N,V_interactionAffordances
Tq,R,N,V_layoutJustification
TB,R,N,V_screenSupportsFocus
T@"CARSession",R,N,V_session
T@"DBClusterControlChannel",&,N,V_clusterControlChannel
T@"DBLayerMetadataService",&,N,V_layerMetadataService
T@"DBAnalytics",R,N,V_analytics
T@"FBSDisplayIdentity",R,N
T@"FBSDisplayConfiguration",R,N,V_displayConfiguration
T@"FBSDisplayLayoutPublisher",R,N,V_displayLayoutPublisher
T@"UIScreen",R,N,V_screen
Td,R,N,V_screenScale
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_currentUnadjustedSafeViewAreaFrame
T@"UITraitCollection",R,C,N,V_traitCollection
T@"CRVehicle",R,N,V_vehicle
acBackSupported
TB,R,N,GisACBackSupported,V_acBackSupported
ambientBrightnessNighttime
TB,R,N,GisAmbientBrightnessNighttime
connectedWirelessly
TB,R,N,GisConnectedWirelessly,V_connectedWirelessly
geoSupported
TB,R,N,GisGeoSupported,V_geoSupported
knownVehicle
TB,N,GisKnownVehicle,V_knownVehicle
T@"NSString",&,N,V_vehicleID
T@"NSString",R,N,V_OEMIconLabel
OEMIconVisible
TB,R,N,GisOEMIconVisible,V_OEMIconVisible
pairedVehicle
TB,N,GisPairedVehicle,V_pairedVehicle
TB,R,N,GisRightHandDrive,V_rightHandDrive
Tq,R,N,V_carUserInterfaceStyle
Tq,R,N
T@"DBNavigationStateProvider",R,N,V_navigationStateProvider
T@"DBIconBadgeController",R,N,V_iconBadgeController
T@"CRCarPlayAppPolicyEvaluator",R,N,V_appPolicyEvaluator
T@"DBAppHistory",R,N,V_appHistory
T@"CRSUIWallpaperPreferences",R,N,V_wallpaperPreferences
T@"DBIconImageCache",&,N,V_iconImageCache
TQ,R,N
statusBarDriveSide
TB,R,N,GisStatusBarDriveSide
_capabilityForKey:
labelColor
resolvedColorWithTraitCollection:
setCurrentPageIndicatorTintColor:
_carSystemTertiaryColor
setPageIndicatorTintColor:
setAllowsContinuousInteraction:
traitCollectionDidChange:
intrinsicContentSize
showsButtons
defaultHeight
_indicatorSpacing
setShowsButtons:
_showsButtons
TB,N,V_showsButtons
initWithLeafIdentifier:applicationBundleID:
dataSourceClass
addIconDataSource:
placeholder
initWithApplicationInfo:
isLaunchEnabled
setPlaceholder:
_placeholder
T@"DBApplicationInfo",R,N,V_applicationInfo
T@"FBSApplicationPlaceholder",&,N,V_placeholder
setIndependentWatchdogPortName:
setAccessibilityIdentifier:
setTranslatesAutoresizingMaskIntoConstraints:
focusHighlightColor
setTintColor:
setContentMode:
leftAnchor
constraintEqualToAnchor:
rightAnchor
topAnchor
bottomAnchor
activateConstraints:
_setupImagesIfNecessary
setFocusHighlightColor:
focusRingImageView
userInterfaceIdiom
iconsImage
imageNamed:inBundle:compatibleWithTraitCollection:
setIconsImage:
setDashboardImage:
setImage:
_updateDisplayState:
displayState
dashboardImage
_labelColor
setImage:forState:
transitionWithView:duration:options:animations:completion:
isFocused
didUpdateFocusInContext:withAnimationCoordinator:
pressesBegan:withEvent:
sendActionsForControlEvents:
pressesEnded:withEvent:
setDisplayState:
_installSelectGestureRecognizer
setFocusRingImageView:
_displayState
_iconsImage
_dashboardImage
_focusRingImageView
T@"UIImage",&,N,V_iconsImage
T@"UIImage",&,N,V_dashboardImage
T@"UIImageView",&,N,V_focusRingImageView
TQ,N,V_displayState
objectsPassingTest:
setNeedsDisplay
fillColor
isSelected
_carSystemPrimaryColor
isHighlighted
colorWithAlphaComponent:
setFill
isFocusRingVisible
_carSystemFocusColor
setStroke
setFillColor:
setFocusRingVisible:
setHighlighted:
setSelected:
drawRect:
_focusRingVisible
_highlighted
_selected
_fillColor
T@"UIColor",&,N,V_fillColor
focusRingVisible
TB,N,GisFocusRingVisible,V_focusRingVisible
highlighted
TB,N,GisHighlighted,V_highlighted
selected
TB,N,GisSelected,V_selected
externalSystemRedColor
tpImageForSymbolType:textStyle:scale:isStaticSize:
clearColor
setOpaque:
setAdjustsImageWhenDisabled:
setAdjustsImageWhenHighlighted:
setupConstraints
layoutIfNeeded
sendSubviewToBack:
ringView
widthAnchor
constraintEqualToConstant:
heightAnchor
leadingAnchor
trailingAnchor
nextFocusedItem
pressesCancelled:withEvent:
tableBackgroundColor
initWithButtonType:
inCallButtonType
setRingView:
_inCallButtonType
_ringView
T@"DBInCallWidgetButtonRingView",&,N,V_ringView
Tq,R,N,V_inCallButtonType
layer
setCornerRadius:
setTextColor:
setTextAlignment:
_preferredFontForTextStyle:variant:
setFont:
setNumberOfLines:
multilineTitleLabel
focusView
_carSystemFocusLabelColor
textLayoutGuide
constraintEqualToAnchor:constant:
setMultilineTitleLabel:
setFocusView:
_multilineTitleLabel
_focusView
T@"UIView",&,N,V_focusView
T@"CPSMultilineLabel",&,N,V_multilineTitleLabel
setImageEdgeInsets:
setBorderColor:
displayScale
setBorderWidth:
setApplicationBundleIdentifier:
applicationBundleIdentifier
_applicationBundleIdentifier
T@"NSString",C,N,V_applicationBundleIdentifier
shouldPresentPresentable:withPresentedPresentables:responsiblePresentable:
shouldOverlapPresentable:withPresentable:
shouldPostPresentable:userInfo:reason:
delegate
T@"<BNConsideringDelegate>",W,N
setWithObjects:
initWithServiceDomain:displayConfiguration:authorizedBundleIDs:
defaultShellMachName
initWithMachName:
layoutManager
setLayoutInfoV2:
initWithAuthority:pender:presenter:
deactivate
bannerContentViewController
topPresentables
lastObject
viewController
preferredContentSize
uniqueIdentificationForPresentable:
bannerController
revokePresentablesWithIdentification:reason:options:animated:userInfo:error:
_setContainerView:
_setToViewController:
_setToStartFrame:
_setToEndFrame:
_setIsAnimated:
_transitionCoordinator
animateAlongsideTransition:completion:
viewWillTransitionToSize:withTransitionCoordinator:
__runAlongsideAnimations
setView:
addChildViewController:
didMoveToParentViewController:
_performCancelTapGesture:
initWithTarget:action:
setCancelsTouchesInView:
setAllowedTouchTypes:
setEnabled:
addGestureRecognizer:toDisplayWithIdentity:
_layoutDescriptionWithBounds:preferredSize:
postPresentable:withOptions:userInfo:error:
setSuspended:forReason:revokingCurrent:error:
specification
tapDismissGestureRecognizer
bannerSourceListener
layoutDescriptionDidChange:
requestIdentifier
borrowScreenForClient:reason:
setScreenBorrowToken:
setScreenBorrowingPresentableRequestID:
willDisplayNotificationForNotificationViewController:
screenBorrowingPresentableRequestID
didDismissNotificationForNotificationViewController:
allPresentables
dismissPresentablesWithIdentification:reason:userInfo:
setSuspended:cancellingCurrent:forReason:
suspensionReasons
_layoutManager
window
useableContainerFrameInContainerBounds:onScreen:
presentedFrameForContentWithPreferredSize:inUseableContainerFrame:containerBounds:scale:
bannerSourceLayoutDescriptionWithPresentationSize:containerSize:
locationInView:
pointInside:withEvent:
bannerSourceListener:layoutDescriptionWithError:
bannerSourceListener:requestsPostingPresentable:options:userInfo:error:
bannerSourceListener:requestsRevokingPresentablesWithIdentification:reason:animated:userInfo:error:
bannerSourceListener:recommendsSuspending:forReason:revokingCurrent:error:
sceneSpecificationForBannerSourceListener:
bannerSourceListener:sceneSpecificationForBannerSceneWithIdentifier:forProcess:userInfo:
bannerSourceListener:didUpdateInitialSceneSettingsWithParameters:
bannerSourceListener:didUpdateInitialSceneClientSettingsWithParameters:
bannerSourceListener:newBannerSourceListenerPresentableForBannerSpecification:serviceDomain:scene:readyCompletion:
bannerSourceListener:presentationSize:containerSize:error:
bannerSourceListener:requestsRevokingPresentableWithRequestIdentifier:requesterIdentifier:animated:reason:userInfo:error:
bannerSourceListener:requestsRevokingAllPresentablesForRequesterWithIdentifier:reason:userInfo:error:
bannerSourceListenerShouldEnablePresentableContextInterface:
presenterRequestsVisibility:
presenterRelinquishesVisibility:
defaultTransitioningDelegateForPresenter:
presenter:willTransitionToSize:withTransitionCoordinator:
presenter:willPresentPresentable:withTransitionCoordinator:userInfo:
presenter:willDismissPresentable:withTransitionCoordinator:userInfo:
presenter:presentable:willTransitionToSize:withTransitionCoordinator:
panGestureRecognizerForPresenter:
presenter:gestureRecognizer:locationForTouch:inView:
presenter:gestureRecognizer:locationForEvent:inView:
presenter:gestureRecognizer:velocityInView:
presenter:gestureRecognizer:translationInView:
presenterMinimumPreferredTopEdgeInset:
setSuspended:forReason:
initWithEnvironmentConfiguration:delegate:
visibleNotificationScene
notificationHeight
handleHomeEvent
handleTransitionFromFrame:toFrame:
loadView
shouldFenceAnimationsForPresentable:
screenBorrowToken
bannerHostMonitor
bannerAuthority
setSuspensionReasons:
_screenBorrowToken
_screenBorrowingPresentableRequestID
_bannerHostMonitor
_bannerController
_bannerSourceListener
_bannerContentViewController
_bannerAuthority
_tapDismissGestureRecognizer
_delegate
_suspensionReasons
T@,&,N,V_screenBorrowToken
T@"NSString",&,N,V_screenBorrowingPresentableRequestID
T@"BNBannerHostMonitor",R,N,V_bannerHostMonitor
T@"BNBannerController",R,N,V_bannerController
T@"BNBannerSourceListener",R,N,V_bannerSourceListener
T@"BNContentViewController",R,N,V_bannerContentViewController
T@"DBBannerAuthority",R,N,V_bannerAuthority
T@"UITapGestureRecognizer",R,N,V_tapDismissGestureRecognizer
T@"<DBNotificationViewControllerDelegate>",R,W,N,V_delegate
T@"NSMutableSet",&,N,V_suspensionReasons
T@"FBScene",R,N
Td,R,N
initWithDelegate:resourceProvider:
homeManager
homes
homeManager:didUpdateHomes:
inRange
hasGarageDoor
garageDoors
initWithGarageDoor:
enumerateKeysAndObjectsUsingBlock:
refreshPredictions
sourceName
predictionClasses
homeManager:willRemoveHomes:
home:didUpdateLastUsedServiceOfType:
homeDidChangeInRange:
homeDidEnterExtendedRange:
homeDidExitExtendedRange:
freshPredictions
_homeManager
T@"DBHomeManager",R,N,V_homeManager
initWithObject:
appendArraySection:withName:skipIfEmpty:
appendObject:withName:skipIfNil:
build
_initWithRequest:
copyWithZone:
mutableCopyWithZone:
changeItems
completionHandler
setCompletionHandler:
_changeItems
_source
_completionHandler
T@"NSArray",R,N,V_changeItems
T@?,C,N,V_completionHandler
addChangeItem:
removeChangeItem:
sceneIdentifierForAppInfo:
descriptionForObject:
viewDidLoad
_sendSceneUpdate
viewDidLayoutSubviews
updateUISettingsWithBlock:
currentWallpaper
wallpaperIdentifier
setWallpaperIdentifier:
wallpaperWithIdentifier:
wallpaperColor
wallpaperAppInfo
hasSuffix:
isInvalidated
initWithApplicationInfo:environment:
setDeactivationReasons:
setCurrentSceneUpdate:
currentSceneUpdate
performUpdateWithCompletion:
updateAppearanceForWallpaper
setWallpaperAppInfo:
setSceneID:
scenePresentersByIdentifier
setScenePresentersByIdentifier:
_wallpaperAppInfo
_scenePresentersByIdentifier
_currentSceneUpdate
TB,N,GisInvalidated,V_invalidated
T@"DBApplicationInfo",&,N,V_wallpaperAppInfo
T@"NSString",C,N,V_sceneID
T@"NSMutableDictionary",&,N,V_scenePresentersByIdentifier
T@"DBSceneUpdate",&,N,V_currentSceneUpdate
_significantTimeChange
reloadIconImage
removeObserver:name:object:
initWithDomain:
setSystemPresenter:
setAppPresenter:
pendingSystemViewControllers
pendingViewControllersForAppBundleID
service
initWithAlert:environmentConfiguration:
allowedApplicationBundleIDs
_presentViewController:overApplication:
_presentSystemViewController:
alert
_dismissViewController:overApplication:
removeObjectForKey:
_dismissSystemViewController:
systemPresenter
alertServer:wantsSystemPresentationForViewController:
alertServer:wantsSystemDismissalForViewController:
appPresenter
alertServer:wantsAppPresentationForViewController:bundleID:
alertServer:wantsAppDismissalForViewController:bundleID:
alertService:wantsPresentationForAlert:
alertService:wantsDismissalForAlert:
alertViewControllerForBundleID:
_systemPresenter
_appPresenter
_service
_pendingSystemViewControllers
_pendingViewControllersForAppBundleID
T@"DBEnvironmentConfiguration",R,N,V_environmentConfiguration
T@"URTAlertService",R,N,V_service
T@"NSMutableArray",R,N,V_pendingSystemViewControllers
T@"NSMutableDictionary",R,N,V_pendingViewControllersForAppBundleID
T@"<DBSystemAlertPresenting>",W,N,V_systemPresenter
T@"<DBAppAlertPresenting>",W,N,V_appPresenter
resetImages
systemWhiteColor
_imageNamed:onBackgroundColor:
_carSystemQuaternaryColor
_carScreen
imageNamed:inBundle:
_currentTraitCollection
_setCurrentTraitCollection:
undynamicColor
drawAtPoint:
garageDoor
name
doorState
smartWidgetRelaxHomeInRangeCheck
home
inHomeRange
inLocationRange
targetDoorState
setTargetDoorState:
_iconType
openGarageDoor
closedGarageDoor
filterWithType:
lastWritten
predictionDidUpdate
updateWithPrediction:
predictedObject
debugScoreText
stateDescription
distance
maxDistance
baseScore
maxValue
minValue
serviceDidUpdate:
garageDoor:didUpdateDoorState:
garageDoor:didUpdateTargetDoorState:
garageDoor:didUpdateObstructionDetected:
T@"UIImage",R,N
title
subtitle
actionBlock
image
compositingFilter
showImageBorder
tieBreakScore
_garageDoor
T@"DBGarageDoor",R,N,V_garageDoor
_hidEvent
setLastSenderID:
lastSenderID
_lastSenderID
TQ,N,V_lastSenderID
_ignoresHitTest
CADisplay
displayWithHardwareIdentifier:
setWithObject:
defaultSystemPredicate
setDisplays:
systemTarget
ruleForDispatchingDiscreteEventsMatchingPredicate:toTarget:
defaultFocusPredicate
keyboardFocusTarget
descriptorWithEventType:
setDescriptors:
descriptorWithPage:usage:
dispatchDiscreteEventsForReason:withRules:
initWithScreen:
hashTableWithOptions:
initWithDashboard:
setAppHistoryAppDockProvider:
_updatePasscodeLockToken
layoutEngine
setDefinesDisplayRegionOfInterest:
initWithEnvironment:layoutEngine:
setAdditionalSafeAreaInsets:
setRootViewController:
longPressButtonForIdentifier:
standardUserDefaults
addObserver:forKeyPath:options:context:
floatForKey:
setContentCornerRadius:
setCornerCurve:
setClipsToBounds:
insertSubview:atIndex:
initWithStateResolver:environment:rootViewController:siriViewController:
initWithOwner:
setWorkspace:
definition
setIdentity:
localIdentity
setClientIdentity:
setSpecification:
setStatusBarDisabled:
createSceneWithDefinition:initialParameters:
createPresenterWithIdentifier:
fbsSceneWithIdentifier:
_initWithFrame:debugName:scene:attached:
setRightHandDrive:
homeViewController
initWithEnvironment:iconProvider:stateProvider:
setTransitionControlType:
setIntentUsageDelegate:
initWithDelegate:
addPageChangeObserver:
addViewStateObserver:
setAppDockViewController:
initWithWindowScene:environmentConfiguration:dashboardStateProvider:delegate:
setNotificationSuspender:
_setInitialFocusOwner
_sessionDidConnect:environmentConfiguration:
initWithAppHistory:
_homeTapped:
setAllowedPressTypes:
_backLongPressed:
_pointerSelectionPressed:
setCornerRadiusWindow:
_drawCorners
addObserver:notifyIfNeeded:
userAlertServer
workspaceOwner
setUserAlertServer:
preventSpuriousScreenUndimWithReason:
setPreventSpuriousScreenUndimToken:
_updateUserInterfaceStyle
updateLockOutModeAnimated:takeScreen:
_updateWallpaper
_screenDidBecomeUnavailable:
_screenDidBecomeAvailable:
setConnectionReady:
preventPasscodeLockToken
preventSpuriousScreenUndimToken
oemScreenLayoutElementAssertion
templateAppProcessMonitor
floatValue
observeValueForKeyPath:ofObject:change:context:
_handleHomeEvent:
_foregroundActiveScene
_activeBundleIdentifierForScene:
identifierToForegroundAppScenesMap
allValues
workspaceIdentifier
bs_containsObjectPassingTest:
notificationViewController
handleEvent:
activateHomeScreen
requestStateChange:
application
activationSettings
unsignedIntegerValue
_presentPrivacyDisclosureAlertForApplication:
takeScreenForClient:reason:
launchUsingSiri
canDisplayOnCarScreen
siriActivationOptions
addEntriesFromDictionary:
initWithPayload:
siriDirectActionSource
activateWithContext:
requiresBackgroundURLDelivery
_handleBackgroundURLDeliveryForLaunchInfo:
activateApplication:withSettings:
isScreenAvailable
nowPlayingIconTapped
contextForApplicationCategory:
_notifyAccessoryIfNeededWithUIContext:
process
processHandle
initWithURL:workspaceOriginatingProcess:
workspace
sendActions:
clientProcess
mainConfiguration
createSceneWithIdentifier:parameters:clientProvider:transitionContext:
setActions:
setOriginatingProcess:
updateSettingsWithTransitionBlock:
mainIdentity
setWithArray:
screenshotManager
postNotificationName:object:
identifierToAppScenesMap
uiSettings
deactivationReasons
setShowingApp:
focusController
takeWithPriority:reason:forWindow:bundleIdentifier:pid:scene:
dropReason:
clientIdentity
processIdentity
proxiedApplicationBundleIdentifier
applicationInfoForBundleIdentifier:
statusBarStateProvider
_dashboardScene
snapshotContext
resizeWindow
layerManager
_contextId
layerWithContextID:
cornerRadiusWindow
setLayersToExclude:
createSnapshotWithContext:
capture
snapshotPresentationForSnapshot:
handleACHomeUp:
siriViewController
isDismissed
backgroundSceneWithCompletion:
handleLongBackPress
bundleProxyForIdentifier:
localizedName
alertControllerWithTitle:message:preferredStyle:
actionWithTitle:style:handler:
addAction:
presentViewController:animated:completion:
notificationWindow
focusSystemForEnvironment:
setNeedsFocusUpdate
currentOwnerForContext:
sessionAppContextURLs
updateOwner:forContext:
dictionaryWithObject:forKey:
sendCommand:withParameters:
setScreenAvailable:
initWithIdentifier:
setFillsDisplayBounds:
addElement:
setOemScreenLayoutElementAssertion:
supportsDynamicAppearance
defaultWallpaper
setCurrentWallpaper:
setAccessibilityContrast:
enumerateScenesWithBlock:
wallpaperViewController
statusBarViewController
rootViewController
_sceneInterfaceStyleForScene:
sceneInterfaceStyleForAppInfo:proxyAppInfo:
currentCornerRadius
statusBarHostWindow
screenType
wantsCornerMasks
subviews
setCornerRadiusView:
initWithImage:
setTransform:
_updateDeferrals
initialFocusOwner
isLinkedOnOrAfterYukon
statusBarWindow
focusMovementInfo
heading
inputDeviceInfo
shouldPerformHapticFeedback
_isStatusBarScene:
layoutDirection
isMovementAllowedForHeading:direction:isRTL:isLeftHandDrive:statusBarEdge:
focusedFrame
dropReason:withHeading:focusedFrame:
takeWithPriority:reason:forWindow:bundleIdentifier:pid:scene:heading:focusedFrame:
senderID
performHapticFeedbackForSenderID:
contentView
mainWindow
convertRect:fromView:toScreen:
UIActionType
handleFocusMovementAction:fromScene:
statusBarStyleOverride
faceTimeShowCarPlayInCallUIURL
launchInfoForApplication:withActivationSettings:
activateApplication:
_displayRecordingAlert
identifierToAppInfoMap
sceneObservers
iconLayoutDataProvider
isCarPlaySupported
supportsBackgroundMode:
sceneFrameForAppInfo:
safeAreaInsetsForAppInfo:
_isPreYukonNavAppForAppInfo:proxiedAppInfo:
focusWindow
windowForSystemGesturesForDisplayWithIdentity:
splashScreenAlert
removeObserver:forKeyPath:
_sessionDidDisconnect
activeBaseApplicationBundleID
setPaired:
setPreventPasscodeLockToken:
physicalSize
_handleOpenApplicationEvent:
_handleReturnToHomeScreenEvent:
activateSiri
_handleTapToRadarEvent
lockOutController
isLockedOut
activateStackedApplication:
activeCallScreenBorrowToken
setActiveCallScreenBorrowToken:
setPendingInCallServiceActivation:
deactivateApplication:
takeScreenForConnection
lockOutWindow
lockOutViewController
setLockOutMode:animated:completion:
todayViewController
setSmartWidgetCanChangeVisibilityDisabled:forRequester:
setSceneWidgetsDisabled:forRequester:
iconForIdentifier:
isIconVisible:
pendingInCallServiceActivation
activateStackedApplication:withSettings:
_animateStartupFromScaledMainWindow
_animateStartupToHomeScreen
lockOutMode
siriPrewarmAssertion
setSiriPrewarmAssertion:
setSiriPrewarmTimestamp:
siriButtonSource
prepareForActivationWithTimestamp:
prepareForActivation
siriButtonAssertion
setSiriButtonAssertion:
siriPrewarmTimestamp
speechInteractionActivityWithTimestamp:
didRecognizeLongPress
invalidatedAtTimestamp:
doubleValue
_handleSiriPrewarmWithTimestamp:
_handleSiriButtonDownWithTimestamp:
_handleSiriButtonUpWithTimestamp:
absoluteString
_handleSessionURL:
sessionEchoContextURLs
carOwnsScreen
requestCarUIForURL:
numberWithInt:
hasPrefix:
mostRecentNavigatingApp
nowPlayingObserver
nowPlayingLaunchInfoWithSource:
hasActiveCall
stringByReplacingOccurrencesOfString:withString:
componentsSeparatedByString:
applicationVisibleInCarPlay:withIconProvider:
_launchAppWithInfo:forURL:
openApplicationURL:withIconProvider:activationSettings:completion:
isOEMToiOSHeadingToStatusBar:isLeftHandDrive:statusBarEdge:
convertRect:toView:fromScreen:
setBannerHeight:
applicationInfoForScene:
mapStyle
Tq,N
_takeSnapshotOfFrame:
setAutoresizingMask:
_newResizeAnimationWindow
setResizeWindow:
setKeysToAnimate:
setName:
setValue:forKey:
setFilters:
commit
_updateAppScenesViewArea
_updateWindowFrames
frame
handleTransitionToFrame:
folderController
folderControllers
currentPageIndex
_setupIconModel
maximumPageIndex
setCurrentPageIndex:animated:
setValue:forKeyPath:
cornerRadiusView
interestingView
animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:
preventPasscodeLockWithReason:
minimumPageIndex
firstIconPageIndex
_animateStartupToIcons
iconListViews
objectAtIndex:
initWithFolderController:
initWithDefaultValues
setAnimationType:
setMass:
setStiffness:
setDamping:
setCurve:
setDistanceEffect:
setFirstHopIncrement:
setHopIncrementAcceleration:
setCentralAnimationSettings:
setPreferCenterOfIconGrid:
prepare
setFraction:
hairlineView
calculatedDuration
_animateUsingSpringWithDuration:delay:options:mass:stiffness:damping:initialVelocity:animations:completion:
cleanup
_handleCarPlayUIReady
animateToFraction:afterDelay:withCompletion:
factoryWithMass:stiffness:damping:
animateWithFactory:actions:completion:
predicateMatchingBundleIdentifier:
setServiceClass:
setPredicates:
descriptor
setStateDescriptor:
_templateAppStateUpdated:
setUpdateHandler:
monitorWithConfiguration:
bundle
isRunning
previousState
_createBackgroundSceneForTemplateAppBundleID:
_applicationSceneForBundleID:
isIconVisibleForIdentifier:
sceneForAppInfo:
states
iconModel
leafIconForIdentifier:
setCurrentPageIndexToListDirectlyContainingIcon:animated:completion:
lockOutController:didChangeFromLockoutMode:toLockOutMode:animated:takeScreen:
inCallAssertionServiceDidPresent:
inCallAssertionServiceDidDismiss:
inCallAssertionService:didSetBannersEnabled:
sceneManager:clientDidConnectWithHandshake:
sceneManager:createDefaultTransitionContextForScene:
sceneManager:scene:didUpdateClientSettingsWithDiff:oldClientSettings:transitionContext:
sceneManager:scene:didReceiveActions:
sceneFrameForAppInfo:proxyAppInfo:
safeAreaInsetsForAppInfo:proxyAppInfo:
systemGestureWindow
sceneMapInterfaceStyleForAppInfo:proxyAppInfo:
shouldDisableFiveRowKeyboards
T@"FBSDisplayIdentity",R,C,N
T@"FBSDisplayConfiguration",R,C,N
T@"DBEnvironmentConfiguration",R,N
T@"<CRSIconLayoutVehicleDataProviding>",R,N
initWithWindowScene:environmentConfiguration:
handleConnect
_rectForFocusedRectDictionary:
goToPageContainingBundleIdentifier:completion:
dashboardStateProvider
setDashboardStateProvider:
setScreen:
setWindowScene:
setSceneObservers:
setIdentifierToAppScenesMap:
setIdentifierToForegroundAppScenesMap:
setIdentifierToAppInfoMap:
setLayoutEngine:
setMainWindow:
setWallpaperViewController:
setWorkspaceOwner:
setStatusBarWindow:
setStatusBarViewController:
setStatusBarStateProvider:
setStatusBarHostWindow:
statusBarScenePresenter
setStatusBarScenePresenter:
statusBarHostScene
setStatusBarHostScene:
setLockOutController:
setNotificationWindow:
setNotificationViewController:
alertViewController
setAlertViewController:
setSiriViewController:
setFocusController:
focusMovementManager
setFocusMovementManager:
setSiriButtonSource:
setSiriDirectActionSource:
setNowPlayingObserver:
showingApp
homeButtonStateManager
setHomeButtonStateManager:
setScreenshotManager:
setCurrentCornerRadius:
setSplashScreenAlert:
interestingWindow
setInterestingWindow:
setInterestingView:
connectedNotifyToken
setConnectedNotifyToken:
setTemplateAppProcessMonitor:
_dispatchingAssertion
_dispatchingAssertionACBack
_dispatchingAssertionACHome
_dispatchingAssertionACSelect
_dispatchingAssertionTelephonyDrop
_lock
_lock_hasHandledConnect
_lock_hasPendingRequestUITake
_lock_invalidated
_screenAvailable
_showingApp
_pendingInCallServiceActivation
_connectedNotifyToken
_dashboardStateProvider
_sceneObservers
_identifierToAppScenesMap
_identifierToForegroundAppScenesMap
_identifierToAppInfoMap
_layoutEngine
_mainWindow
_wallpaperViewController
_rootViewController
_workspace
_workspaceOwner
_statusBarWindow
_statusBarViewController
_statusBarStateProvider
_statusBarHostWindow
_statusBarScenePresenter
_statusBarHostScene
_lockOutController
_preventPasscodeLockToken
_preventSpuriousScreenUndimToken
_notificationWindow
_notificationViewController
_alertViewController
_siriViewController
_focusController
_focusMovementManager
_siriButtonSource
_siriPrewarmAssertion
_siriButtonAssertion
_siriDirectActionSource
_siriPrewarmTimestamp
_nowPlayingObserver
_activeCallScreenBorrowToken
_homeButtonStateManager
_screenshotManager
_resizeWindow
_currentCornerRadius
_splashScreenAlert
_oemScreenLayoutElementAssertion
_interestingWindow
_interestingView
_cornerRadiusWindow
_cornerRadiusView
_templateAppProcessMonitor
_userAlertServer
T@"UIScreen",&,N,V_screen
T@"UIWindowScene",&,N,V_windowScene
T@"NSHashTable",&,N,V_sceneObservers
T@"NSMutableDictionary",&,N,V_identifierToAppScenesMap
T@"NSMutableDictionary",&,N,V_identifierToForegroundAppScenesMap
T@"NSMutableDictionary",&,N,V_identifierToAppInfoMap
T@"DBDashboardLayoutEngine",&,N,V_layoutEngine
T@"UIWindow",&,N,V_mainWindow
T@"DBWallpaperViewController",&,N,V_wallpaperViewController
T@"DBDashboardRootViewController",&,N,V_rootViewController
T@"DBWorkspace",&,N,V_workspace
T@"DBDashboardWorkspaceOwner",&,N,V_workspaceOwner
T@"DBDashboardStateProvider",&,N,V_dashboardStateProvider
T@"DBStatusBarWindow",&,N,V_statusBarWindow
T@"DBRootStatusBarViewController",&,N,V_statusBarViewController
T@"DBStatusBarStateProvider",&,N,V_statusBarStateProvider
T@"UIWindow",&,N,V_statusBarHostWindow
T@"<UIScenePresenter>",&,N,V_statusBarScenePresenter
T@"FBScene",&,N,V_statusBarHostScene
T@"DBLockOutController",&,N,V_lockOutController
T@"<BSInvalidatable>",&,N,V_preventPasscodeLockToken
T@"<BSInvalidatable>",&,N,V_preventSpuriousScreenUndimToken
T@"DBNotificationWindow",&,N,V_notificationWindow
T@"DBNotificationViewController",&,N,V_notificationViewController
T@"UIViewController",&,N,V_alertViewController
T@"DBSiriViewController",&,N,V_siriViewController
T@"DBFocusController",&,N,V_focusController
T@"DBFocusMovementManager",&,N,V_focusMovementManager
T@"SiriLongPressButtonSource",&,N,V_siriButtonSource
T@"<SiriAssertion>",&,N,V_siriPrewarmAssertion
T@"SiriActivityAssertion",&,N,V_siriButtonAssertion
T@"SiriDirectActionSource",&,N,V_siriDirectActionSource
Td,N,V_siriPrewarmTimestamp
T@"DBNowPlayingObserver",&,N,V_nowPlayingObserver
screenAvailable
TB,N,GisScreenAvailable,V_screenAvailable
TB,N,V_showingApp
T@,&,N,V_activeCallScreenBorrowToken
TB,N,V_pendingInCallServiceActivation
T@"DBStatusBarHomeButtonStateManager",&,N,V_homeButtonStateManager
T@"DBScreenshotManager",&,N,V_screenshotManager
T@"UIWindow",&,N,V_resizeWindow
Td,N,V_currentCornerRadius
T@"DBSplashScreenAlert",&,N,V_splashScreenAlert
T@"<BSInvalidatable>",&,N,V_oemScreenLayoutElementAssertion
T@"UIWindow",&,N,V_interestingWindow
T@"UIView",&,N,V_interestingView
T@"UIWindow",&,N,V_cornerRadiusWindow
T@"UIView",&,N,V_cornerRadiusView
Ti,N,V_connectedNotifyToken
T@"RBSProcessMonitor",&,N,V_templateAppProcessMonitor
T@"DBUserAlertServer",&,N,V_userAlertServer
T@"NSString",R,N
string
appendFormat:
initWithApplication:activationSettings:
launchInfoForApplication:
_application
_activationSettings
T@"DBApplicationInfo",R,N,V_application
T@"NSDictionary",R,N,V_activationSettings
buttonWithType:
configurationWithPointSize:weight:
systemImageNamed:compatibleWithTraitCollection:
imageWithConfiguration:
setScrollImage:
_updateImage
scrollImage
buttonWithDirection:
canBecomeFocused
_scrollImage
T@"UIImage",&,N,V_scrollImage
initWithConfiguration:
scalingView
_scrollButtonPressed:
addTarget:action:forControlEvents:
scrollLeftButton
scrollRightButton
pageControl
buttonUXEnabled
iconListViewCount
scrollView
todayViewVisibilityProgress
isDescendantOfView:
convertPoint:fromView:
_layoutSubviews
_listViewVerticalInset
_listViewSideInset
setListViewInsets:
listViewInsets
setInsets:
_updateIconListFrames
_setAllowsDiscreteInteraction:
_updatePageControlToIndex:
_updateScrollButtonStatesForIndex:
setLeadingCustomViewVisibilityProgress:
setConstant:
listLayoutProvider
iconLocation
layoutForIconLocation:
iconImageInfo
pageControlAreaHeight
maximumIconViewHeightForIconImageSize:
_scrollViewClass
maximumPageControlHeightForInteractionAffordances:
countOfAdditionalPagesToKeepVisibleInOneDirection
shouldInstallFocusGuides
hidesOffscreenCustomPageViews
orientation
iconVisibilityHandling
_newPageControl
_useParallaxOnPageControl
_offsetToCenterPageControlInSpaceForPageControl
internalDockPageControlVerticalMargin
defaultPageIndex
setButtonUXEnabled:
setScrollLeftButton:
setScrollRightButton:
leadingScrollArrowLeadingConstraint
setLeadingScrollArrowLeadingConstraint:
trailingScrollArrowTrailingConstraint
setTrailingScrollArrowTrailingConstraint:
_buttonUXEnabled
_scrollLeftButton
_scrollRightButton
_leadingScrollArrowLeadingConstraint
_trailingScrollArrowTrailingConstraint
_listViewInsets
TB,N,V_buttonUXEnabled
T@"DBScrollButton",&,N,V_scrollLeftButton
T@"DBScrollButton",&,N,V_scrollRightButton
T{UIEdgeInsets=dddd},N,V_listViewInsets
T@"NSLayoutConstraint",&,N,V_leadingScrollArrowLeadingConstraint
T@"NSLayoutConstraint",&,N,V_trailingScrollArrowTrailingConstraint
addGestureRecognizer:
focusableItem
selectedFocusableItem:
focusableItem:didChangeFocused:
focusableItem:didChangePressed:
pressesChanged:withEvent:
isUserInteractionEnabled
setFocusableItem:
_focusableItem
T@"CRSDashboardFocusableItem",&,N,V_focusableItem
T@"<DBWidgetFocusableViewDelegate>",W,N,V_delegate
anonymousListener
resume
_scrollViewWillBeginDragging:
_scrollViewDidEndDragging:
boolForKey:
addLayoutGuide:
setHitTestsAsOpaque:
_handleTapGesture:
setTouchTapGestureRecognizer:
setSelectTapGestureRecognizer:
viewWillAppear:
contentState
loadingView
prepareLoadingViewAnimated:
viewDidAppear:
setWidgetStyle:
focusableItemViews
clientSetFocusableItems:
_window
setHostContextIdentifierForSnapshotting:
setScenePresenterRenderIdentifierForSnapshotting:
connection
setWantsLargeSize:
setProxySceneContentReady:
snapshotViewAfterScreenUpdates:
replaceLoadingViewWithView:
foreground
setLoadingView:
animationManager
superview
animateWithDuration:delay:options:animations:completion:
registerAnimation:client:animation:
enabled
widgetStyle
listener
endpoint
_endpoint
setEndpoint:
_uiStyle
_mapStyle
_postTransactionUpdateSceneSettingsForScene:
touchActionDisabledRequesters
_updateTouchActionDisabled
touchTapGestureRecognizer
touchActionView
proxySceneContentReady
runAnimationIfPossible:client:
isHidden
touchesBegan:withEvent:
_initialTouchTimestamp
setInitialTouchTimestamp:
containsView:
_beginTouchCancellation
_endTouchCancellation
initialTouchTimestamp
widgetContextId
policyCancelingTouchesDeliveredToContextId:withInitialTouchTimestamp:
setAssertionEndpoint:
ipc_addPolicy:
cancelTouchesInIsolatedViewAssertion
touchDeliveryPolicyAssertion
policyRequiringSharingOfTouchesDeliveredToChildContextId:withHostContextId:
updateContextId:
clientSetWantsLargeSize:fenceHandle:animationSettings:
clientSetContentReady
interfaceWithProtocol:
setClasses:forSelector:argumentIndex:ofReply:
setExportedInterface:
setExportedObject:
hostFocusableItem:pressed:
hostSelectedFocusableItem:
hostFocusableItem:focused:
hostSetWidgetSizes:
hostSetUseSystemPrimaryFocusColor:
setRemoteObjectInterface:
setInterruptionHandler:
setInvalidationHandler:
setConnection:
connectionReady
setWidgetContextId:
setFocusableItemViews:
_setTouchActionDisabled:forRequester:
frameInWindow
_animateLoadingViewRemovalIfNecessary
remoteObjectProxy
addObjectsFromArray:
debugSnapshotLabelEnabled
setText:
systemFontOfSize:
sizeToFit
listener:shouldAcceptNewConnection:
initWithEnvironment:animationManager:
entireWidgetFocusable
loadingIconImage
_setSceneActive:
linearFocusItems
preferredFocusEnvironments
selectTapGestureRecognizer
setListener:
setTouchDeliveryPolicyAssertion:
setCancelTouchesInIsolatedViewAssertion:
setAnimationManager:
setDebugSnapshotLabelEnabled:
setTouchActionView:
setTouchActionDisabledRequesters:
_enabled
_foreground
_debugSnapshotLabelEnabled
_proxySceneContentReady
_widgetContextId
_widgetStyle
_deactivationReasons
_selectTapGestureRecognizer
_touchTapGestureRecognizer
_listener
_touchDeliveryPolicyAssertion
_cancelTouchesInIsolatedViewAssertion
_focusableItemViews
_animationManager
_touchActionView
_touchActionDisabledRequesters
_loadingView
_connection
TQ,N,V_deactivationReasons
T@"UITapGestureRecognizer",&,N,V_selectTapGestureRecognizer
T@"UITapGestureRecognizer",&,N,V_touchTapGestureRecognizer
T@"NSXPCListener",&,N,V_listener
T@"BKSTouchDeliveryPolicyAssertion",&,N,V_touchDeliveryPolicyAssertion
T@"BKSTouchDeliveryPolicyAssertion",&,N,V_cancelTouchesInIsolatedViewAssertion
TI,N,V_widgetContextId
T@"NSArray",&,N,V_focusableItemViews
T@"DBTodayViewSynchronizedAnimationManager",&,N,V_animationManager
Td,N,V_initialTouchTimestamp
TB,N,V_debugSnapshotLabelEnabled
T@"UIView",&,N,V_touchActionView
T@"NSMutableSet",&,N,V_touchActionDisabledRequesters
TB,N,V_proxySceneContentReady
T@"UIView",&,N,V_loadingView
T@"DBApplicationInfo",R,N
T@"NSXPCConnection",&,N,V_connection
TQ,N,V_widgetStyle
TB,N,V_enabled
TB,N,V_foreground
T@"NSString",C,N,V_targetBundleIdentifier
_watchdogTimerFired
owner
setOwner:
T@,W,N
initWithStateChangeBlock:invalidationBlock:
_startWatchdogTimer
_owner
_stateChangeBlock
_invalidationBlock
_watchdogTimer
T@,W,N,V_owner
_createStateChangeSession
workspace:didBeginStateChangeSession:
session:policyForRequest:
session:handleStateChangeRequest:
hashTableWithWeakObjects
_setState:
_invalidateSession:
workspace:didEndStateChangeSession:
removeObjectAtIndex:
_state
_pendingRequests
_currentSession
_pendingRequestsStateCaptureBlock
T@"<DBWorkspaceState>",&,N,S_setState:,V_state
_buildDescriptionWithBuilder:
appendObject:withName:
_initWithIdentifier:
isSiriEntity
isHomescreenEntity
isApplicationEntity
isProxiedApplicationEntity
isFullScreenEntity
T@"NSString",R,N,V_identifier
entity
isFloating
setFloating:
_floating
floating
TB,N,GisFloating,V_floating
_initWithApplicationInfo:
applicationSceneEntityForApplicationInfo:
_initWithApplication:proxiedByEntity:
application:proxiedByEntity:
applicationToProxy
proxyEntity
_applicationToProxy
_proxyEntity
T@"DBApplicationInfo",R,N,V_applicationToProxy
T@"DBDashboardApplicationSceneEntity",R,N,V_proxyEntity
_isSecure
_commonInit
dictionaryForKey:
sessionContextOwners
setDictionary:
initWithSuiteName:
arrayForKey:
timeIntervalSince1970
enumerateObjectsWithOptions:usingBlock:
_nowPlayingWillAppear:
addObserver:selector:name:object:suspensionBehavior:
_nowPlayingWillDisappear:
appHistory:mostRecentNavigationAppUpdatedTo:
appHistory:mostRecentAudioAppUpdatedTo:
appHistory:mostRecentOtherAppUpdatedTo:
appHistory:mostRecentHomeScreenUpdatedTo:
initWithProtocol:
setAppHistory:
lastOnDisplayUIContextURLs
nowOnDisplayUIContextURLs
applySessionAppContexts:
applySessionEchoContexts:
setSessionAppContextURLs:
setSessionEchoContextURLs:
setSessionFeatureKeys:
setSessionContextOwners:
policyProvider
policyEvaluator
targetApplicationProxy
dashboardEndpoint
setTargetConnectionEndpoint:
setReferrerURL:
setIgnoreAppLinkEnabledProperty:
openWithConfiguration:completionHandler:
getAppLinksWithURL:completionHandler:
defaultWorkspace
URLOverrideForURL:
applicationsAvailableForOpeningURL:
_evaluateUniversalLinksForURL:withIconProvider:completion:
dictionaryWithDictionary:
allKeys
_orderedAppsForBundleIdentifiers:
applicationCategoryForBundleIdentifier:
lastActivationTimeForBundleIdentifier:
nowPlayingIsVisible
_appInfoForBundleIdentifier:
_bundleIdentifierDidBecomeVisible:previousBundleIdentifier:
setNowPlayingIsVisible:
postNotificationName:object:userInfo:
compare:
bs_mapNoNulls:
bs_reverse
initWithPolicyEvaluator:
resetAppHistory
setDashboardAppOnDisconnect:
orderedAppsMatchingCategory:
lastActivationTimeForApplication:
_persistSessionUIContextOwnership
sessionFeatureKeys
setPolicyProvider:
_nowPlayingIsVisible
_policyEvaluator
_sessionAppContextURLs
_sessionEchoContextURLs
_sessionFeatureKeys
_sessionContextOwners
_policyProvider
T@"NSMutableDictionary",&,N,V_appHistory
TB,N,V_nowPlayingIsVisible
T@"<DBAppPolicyProviding>",W,N,V_policyProvider
T@"CRCarPlayAppPolicyEvaluator",R,N,V_policyEvaluator
T@"NSArray",R,N
T@"NSArray",&,N,V_sessionAppContextURLs
T@"NSArray",&,N,V_sessionEchoContextURLs
T@"NSArray",&,N,V_sessionFeatureKeys
T@"NSMutableDictionary",&,N,V_sessionContextOwners
_setSR_associatedChangeItem:
_sr_associatedChangeItem
T@"DBDashboardWorkspaceStateChangeItem",&,N,S_setSR_associatedChangeItem:
changeItemForEntity:
activateSuspendedEntity
setActivateSuspendedEntity:
_activateSuspendedEntity
T@"DBDashboardWorkspaceState",&,N,V_state
T@"DBDashboardEntity",&,N,V_activateSuspendedEntity
baseEntity
stackedEntity
changeType
presentationPreference
setPresentationPreference:
_newEntityFromChangeItemWithPolicyProvider:
setBaseEntity:
setStackedEntity:
computeNewStateFromState:andRequest:
colorWithRed:green:blue:alpha:
_systemRuleForUsage:onDisplays:
installHardwareButtonSystemGestures
URLWithString:
toggleUpInstrumentCluster
toggleDownInstrumentCluster
toggleLeftInstrumentCluster
toggleRightInstrumentCluster
pressedSelectInstrumentCluster
pressedACBackInstrumentCluster
screenInfo
setCornerMaskImageData:forScreenInfo:
_rootViewControllerInsets
functionWithName:
settingsWithDuration:timingFunction:
animateWithSettings:actions:
isURLSupported:
setViewController:
clusterWindow
mostRecentClusterNavigatingApp
_directionStringForDirection:
initWithZoomDirection:
navigationStateProvider:navigatingIdentifiersDidChange:
navigationStateProvider:frontmostIdentifierDidChange:
_clusterScene
setScreenInfo:
setClusterWindow:
eventDispatchAssertion
setEventDispatchAssertion:
_screenInfo
_clusterWindow
_viewController
_eventDispatchAssertion
T@"CARScreenInfo",&,N,V_screenInfo
T@"DBInstrumentClusterWorkspaceOwner",&,N,V_workspaceOwner
T@"UIWindow",&,N,V_clusterWindow
T@"DBInstrumentClusterRootViewController",&,N,V_viewController
T@"<BSInvalidatable>",&,N,V_eventDispatchAssertion
_buttonOfType:
showTrustedLockout
insertObject:atIndex:
_titleFont
preferredFontForTextStyle:
initWithSize:
setAxis:
setDistribution:
setSpacing:
addArrangedSubview:
constraintLessThanOrEqualToConstant:
constraintGreaterThanOrEqualToConstant:
_backToOEM
firstBaselineAnchor
safeAreaLayoutGuide
lastBaselineAnchor
centerXAnchor
preferredFontDescriptorWithTextStyle:compatibleWithTraitCollection:
fontDescriptorWithSymbolicTraits:
fontWithDescriptor:size:
preferredFontDescriptorWithTextStyle:addingSymbolicTraits:options:
_buttonTitleForType:
setTitle:forState:
_buttonTapped:
systemRedColor
setCarButtonColor:
setTitleColor:forState:
systemYellowColor
systemGreenColor
titleLabel
_buttonFont
setTag:
lockOutView:didTapButtonOfType:
initWithMode:environmentConfiguration:
layoutSubviews
setTitleLabel:
imageView
setImageView:
messageLabel
setMessageLabel:
buttonStackView
setButtonStackView:
backToOEMGestureRecognizer
setBackToOEMGestureRecognizer:
_mode
_titleLabel
_imageView
_messageLabel
_buttonStackView
_backToOEMGestureRecognizer
T@"UILabel",&,N,V_titleLabel
T@"UIImageView",&,N,V_imageView
T@"UILabel",&,N,V_messageLabel
T@"UIStackView",&,N,V_buttonStackView
T@"UITapGestureRecognizer",&,N,V_backToOEMGestureRecognizer
Tq,R,N,V_mode
T@"<DBLockOutViewDelegate>",W,N,V_delegate
_updateBackgroundColor
transitionControlType
configurationWithTextStyle:scale:
_transitionControlType
TQ,N,V_transitionControlType
keybagMonitorLockStateDidChange:
_queue_updateLockedState
lockStateNotificationToken
currentState
queue
lockedState
backoffInterval
permanentlyBlocked
callbackQueue
setLockedState:
setBackoffInterval:
setPermanentlyBlocked:
isLocked
isBlocked
_handleKeybagStatusChanged
setQueue:
setCallbackQueue:
setLockStateNotificationToken:
_permanentlyBlocked
_lockStateNotificationToken
_queue
_callbackQueue
_lockedState
_backoffInterval
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
T@"NSObject<OS_dispatch_queue>",&,N,V_callbackQueue
Ti,N,V_lockStateNotificationToken
Tq,N,V_lockedState
Td,N,V_backoffInterval
TB,N,V_permanentlyBlocked
locked
TB,R,N,GisLocked
blocked
TB,R,N,GisBlocked
_shadow_drawing_queue_generateLightStyleShadow
_shadow_drawing_queue_generateDarkStyleShadow
_cleanupImages
iconImage
addClip
dataWithBytes:length:
initWithBitmapData:bytesPerRow:size:format:colorSpace:
filterWithName:
setDefaults
numberWithFloat:
valueForKey:
extent
createCGImage:fromRect:format:colorSpace:
setContentsScale:
setShadowColor:
setShadowRadius:
setShadowOpacity:
setShadowPathIsBounds:
setShadowOffset:
addSublayer:
renderInContext:
imageForTraitCollection:completion:
setIconImage:
lightStyleShadowImage
setLightStyleShadowImage:
_iconImage
_lightStyleShadowImage
T^{CGImage=},N,V_lightStyleShadowImage
T@"UIImage",&,N,V_iconImage
focusPath
removeAllPoints
setFocusPath:
_updateFocusRect
cornerRadius
_bezierPathWithPillRect:cornerRadius:
setLineWidth:
ringColor
stroke
setRingColor:
_cornerRadius
_ringColor
_focusPath
T@"UIBezierPath",&,N,V_focusPath
Td,N,V_cornerRadius
T@"UIColor",&,N,V_ringColor
initWithShadowAttributes:maskCornerRadius:
initWithWallpaperPreferences:
setPlatterCornerRadius:
crsui_dashboardWidgetBackgroundColor
focusEnabledProvider
focusRingView
_evaluateFocusFade
focusFadeTimer
setFocusFadeTimer:
shadowView
platterView
frameWithContentWithFrame:
anyObject
_unfadeFocusRing
supportsDashboardPlatterMaterials
highContrastBackgroundColorView
setOverrideUserInterfaceStyle:
_canFade
_startFadeTimerIfNecessary
focusFaded
_fadeFocusRing
scheduledTimerWithTimeInterval:repeats:block:
becomeFirstResponder
setFocusFaded:
_wheelChangedWithEvent:
initWithFrame:focusEnabledProvider:environmentConfiguration:
canBecomeFirstResponder
setFocusRingView:
setPlatterView:
setHighContrastBackgroundColorView:
setShadowView:
setFocusEnabledProvider:
_focusFaded
_focusRingView
_platterView
_highContrastBackgroundColorView
_shadowView
_contentView
_focusEnabledProvider
_focusFadeTimer
T@"DBWidgetFocusRingView",&,N,V_focusRingView
T@"_TtC9DashBoard22DBDashboardPlatterView",&,N,V_platterView
T@"UIView",&,N,V_highContrastBackgroundColorView
T@"MTShadowView",&,N,V_shadowView
T@"UIView",&,N,V_contentView
T@"<DBWidgetViewFocusEnabledProviding>",W,N,V_focusEnabledProvider
T@"NSTimer",&,N,V_focusFadeTimer
TB,N,V_focusFaded
setDimmingView:
_wallpaperChanged:
dimmingView
widgetViewTapped
touchesEnded:withEvent:
invalidateConstraints
wantsLargeSize
_hidden
_wantsLargeSize
_dimmingView
T@"UIView",&,N,V_dimmingView
T@"<DBEnvironment>",R,W,N,V_environment
hidden
TB,N,GisHidden,V_hidden
TB,N,V_wantsLargeSize
isEqualToAppDockItem:
category
isActive
initWithBundleIdentifier:category:active:
_active
_category
T@"NSString",R,C,N,V_bundleIdentifier
TQ,R,N,V_category
active
TB,R,N,GisActive,V_active
callTimeDisplayLink
displayedAudioAndVideoCalls
isOnHold
setCurrentCall:
_updateUIForCallState
_muteStateChanged:
buttonTapped:
setAvatarButton:
setAppIconButton:
setAdjustsFontForContentSizeCategory:
setContactNameLabel:
setMultiwayTitleButton:
monospacedDigitSystemFontOfSize:weight:
setCallTimeLabel:
setMuteButton:
setEndCallButton:
setLeftButtonGuide:
leftButtonGuide
setMidButtonGuide:
midButtonGuide
setRightButtonGuide:
rightButtonGuide
setLabelContainerGuide:
labelContainerGuide
setTopRowGuide:
topRowGuide
setMidTopRowGuide:
midTopRowGuide
setMidBottomGuide:
midBottomGuide
setBottomRowGuide:
bottomRowGuide
handleCallStatusChanged
lastViewSize
setLastViewSize:
updateLabelsForCurrentStyle
avatarButton
appIconButton
contactNameLabel
callTimeLabel
muteButton
endCallButton
multiwayTitleButton
constraints
deactivateConstraints:
setConstraints:
topFocusContainerGuide
removeLayoutGuide:
setTopFocusContainerGuide:
bottomFocusContainerGuide
setBottomFocusContainerGuide:
multiwayLabelFocusContainerGuide
setMultiwayLabelFocusContainerGuide:
constraintEqualToAnchor:multiplier:
constraintEqualToSystemSpacingBelowAnchor:multiplier:
setTallNonMultiwayConstraints:
setTallMultiwayOnlyConstraints:
primaryInteractionModel
centerYAnchor
_shouldUseMultilineTitleButton
tallMultiwayOnlyConstraints
tallNonMultiwayConstraints
removeObjectsInArray:
currentCall
isUplinkMuted
setUplinkMuted:
disconnectCurrentCallAndActivateHeld
setCallTimeDisplayLink:
isConferenced
isConversation
activeConversationForCall:
isOneToOneModeEnabled
contactIdentifiers
provider
displayAppBundleIdentifier
_displayNameForCall:
_displayLinkFired:
displayLinkWithTarget:selector:
setPreferredFramesPerSecond:
mainRunLoop
addToRunLoop:forMode:
setPaused:
conferenceParticipantCalls
objectAtIndexedSubscript:
displayFirstName
callDurationString
_currentCall
_constraints
_tallMultiwayOnlyConstraints
_tallNonMultiwayConstraints
_avatarButton
_appIconButton
_contactNameLabel
_callTimeLabel
_multiwayTitleButton
_muteButton
_endCallButton
_topFocusContainerGuide
_bottomFocusContainerGuide
_multiwayLabelFocusContainerGuide
_leftButtonGuide
_midButtonGuide
_rightButtonGuide
_labelContainerGuide
_topRowGuide
_midTopRowGuide
_midBottomGuide
_bottomRowGuide
_callTimeDisplayLink
_lastViewSize
T@"TUCall",&,N,V_currentCall
T@"NSArray",&,N,V_constraints
T@"NSArray",&,N,V_tallMultiwayOnlyConstraints
T@"NSArray",&,N,V_tallNonMultiwayConstraints
T{CGSize=dd},N,V_lastViewSize
T@"DBInCallWidgetAvatarView",&,N,V_avatarButton
T@"DBInCallWidgetAppIconButton",&,N,V_appIconButton
T@"UILabel",&,N,V_contactNameLabel
T@"UILabel",&,N,V_callTimeLabel
T@"DBInCallWidgetMultiwayTitleButton",&,N,V_multiwayTitleButton
T@"DBInCallWidgetButton",&,N,V_muteButton
T@"DBInCallWidgetButton",&,N,V_endCallButton
T@"UIFocusContainerGuide",&,N,V_topFocusContainerGuide
T@"UIFocusContainerGuide",&,N,V_bottomFocusContainerGuide
T@"UIFocusContainerGuide",&,N,V_multiwayLabelFocusContainerGuide
T@"UILayoutGuide",&,N,V_leftButtonGuide
T@"UILayoutGuide",&,N,V_midButtonGuide
T@"UILayoutGuide",&,N,V_rightButtonGuide
T@"UILayoutGuide",&,N,V_labelContainerGuide
T@"UILayoutGuide",&,N,V_topRowGuide
T@"UILayoutGuide",&,N,V_midTopRowGuide
T@"UILayoutGuide",&,N,V_midBottomGuide
T@"UILayoutGuide",&,N,V_bottomRowGuide
T@"CADisplayLink",&,N,V_callTimeDisplayLink
_reversesLinearFocusWrapping
_canBecomeKeyWindow
TB,N,GisRightHandDrive,V_rightHandDrive
car_people
car_action
car_valid
recipients
mainBundle
contacts
arrayWithCapacity:
indexesOfObjectsPassingTest:
objectsAtIndexes:
db_filter:
replaceObjectAtIndex:withObject:
subarrayWithRange:
isEqualToArray:
removeObjectsInRange:
db_mutatingMap:
db_removeFirstObjectIfMatching:
db_removeFirstObjectsIfMatching:
_view
T@"UIView",&,N,V_view
willMoveToParentViewController:
removeFromParentViewController
_reloadConstraints
widgetViewControllers
setMinificationFilter:
setMagnificationFilter:
_setAnchorPoint:forView:
setAffineTransform:
setAnchorPoint:
currentConstraints
setCurrentConstraints:
constraintEqualToAnchor:multiplier:constant:
anchorPoint
transform
position
setPosition:
setWidgetViewControllers:
animateWithUpdates:completion:
animateUpdateForWidgetViewController:updateBlock:completion:
visibleCount
_widgetViewControllers
_currentConstraints
T@"NSArray",&,N,V_currentConstraints
T@"NSArray",&,N,V_widgetViewControllers
_telephonyDropTapped:
_touchedDisplayToDismiss:
setMinimumPressDuration:
layoutElementAssertion
presentationViewController
_addPresentationView
factoryWithDuration:
animatedAppearanceWithFactory:completion:
setDismissed:
presentationRequestHandler
setPresentationRequestHandler:
siriDidPresent
setUIApplicationElement:
setReferenceFrame:
setLayoutElementAssertion:
viewWillLayoutSubviews
_updateHostedPresentationFrame
_hostedPresentationFrame
initWithIdentifier:hostedPresentationFrame:displayConfiguration:
setPresentationViewController:
setSiriPresentationControllerDelegate:
isViewLoaded
_requestDismissalWithReason:
_updateTouchToDismiss
_handleHomeEventType:
animated
pendingChangeRequest
setPendingChangeRequest:
deactivateSiri
setTouchToDismissEnabled:forRequester:
isPaired
_removePresentationView
_safeDismissAnimated:completion:
_handlePunchoutRequest:
setActiveIntentBundleID:
intentUsageDelegate
activeIntentWithBundleId:
_handleBackgroundURLRequest:applicationInfo:
punchoutStyle
activateSiriFloating
initWithDeactivationOptions:animated:dismissalReason:
dismissWithOptions:
siriDidDismiss
siriViewControllerConfigured
animatedDisappearanceWithFactory:completion:
hasContentAtPoint:completion:
setHostedPresentationFrame:
siriPresentation:requestsPresentationWithOptions:withHandler:
siriPresentation:requestsDismissalWithOptions:withHandler:
siriPresentation:isEnabledDidChange:
restrictSystemApertureToDefaultLayoutWithReason:
invalidateSystemApertureAssertionWithReason:
siriPresentation:setShowsHomeAffordance:
siriPresentation:setHomeAffordanceSuppression:
siriPresentation:requestsPunchout:withHandler:
presentationViewWithIdentifier:
invalidatePresentationViewForIdentifier:
foregroundSceneWithSettings:completion:
activateSceneWithSettings:completion:
deactivateSceneWithReasonMask:
activeIntentBundleID
touchToDismissEnabledReasons
setTouchToDismissEnabledReasons:
touchToDismissRecognizer
setTouchToDismissRecognizer:
_paired
_dismissed
_presentationViewController
_intentUsageDelegate
_activeIntentBundleID
_presentationRequestHandler
_pendingChangeRequest
_layoutElementAssertion
_touchToDismissEnabledReasons
_touchToDismissRecognizer
T@"SiriPresentationViewController",&,N,V_presentationViewController
T@?,C,N,V_presentationRequestHandler
T@"NSString",C,N,V_activeIntentBundleID
T@"DBWorkspaceStateChangeRequest",&,N,V_pendingChangeRequest
T@"<BSInvalidatable>",&,N,V_layoutElementAssertion
dismissed
TB,N,GisDismissed,V_dismissed
T@"NSMutableSet",&,N,V_touchToDismissEnabledReasons
T@"UILongPressGestureRecognizer",&,N,V_touchToDismissRecognizer
paired
TB,N,GisPaired,V_paired
T@"<SiriPresentationIntentUsageDelegate>",W,N,V_intentUsageDelegate
registerServiceClass:
serviceType
registeredServiceClasses
serviceNameByType
initWithHome:service:
observerProtocol
accessory
characteristics
chacteristicWithService:characteristic:
usable
_tracksLastUsed
_updateLastUsedServiceOfType:
characteristicNameByType
characteristicForName:
characteristicsByType
isUserInteractive
isReachable
current
pendingWrite
pendingRead
hasError
interactive
reachable
updateValueRequiringRead:
managedCharacteristics
componentsJoinedByString:
_shouldUpdateLastUsedForCharacteristic:
serviceWithHome:service:
accessoryDidUpdateName:
accessory:didUpdateNameForService:
accessory:didUpdateAssociatedServiceTypeForService:
accessoryDidUpdateServices:
accessory:didAddProfile:
accessory:didRemoveProfile:
accessoryDidUpdateReachability:
accessory:service:didUpdateValueForCharacteristic:
accessory:didUpdateFirmwareVersion:
T@"NSUUID",R,N
characteristicForType:
refreshCharacteristicValues
_characteristicDidUpdate:
homeUniqueIdentifier
setLastWritten:
setService:
_lastWritten
_homeUniqueIdentifier
_home
_characteristics
_characteristicsByType
TB,N,V_lastWritten
T@"HMService",&,N,V_service
T@"NSDictionary",R,N,V_characteristicsByType
T@"NSUUID",R,N,V_homeUniqueIdentifier
T@"DBHome",R,W,N,V_home
T@"NSDictionary",R,N,V_characteristics
_bundleIdentifierFromEntity:
_initWithState:
_baseEntity
_stackedEntity
T@"DBDashboardEntity",R,N,V_baseEntity
T@"DBDashboardEntity",R,N,V_stackedEntity
T@"DBDashboardEntity",&,D,N
dashboardStateProvider:didChangeConnectionReady:
dashboardStateProvider:didChangeLockoutState:
dashboardStateProvider:didChangeHomeScreenPageType:
dashboardStateProvider:didChangeActiveBundleIdentifier:
_refreshObservations
isValue:equalTo:
dashboard
setPageType:
homeViewController:didChangeToPageIndex:firstIconPageIndex:minimumPageIndex:
setLockoutState:
lockoutState
pageType
_connectionReady
_lockoutState
_pageType
_dashboard
T@"DBDashboard",R,W,N,V_dashboard
TB,N,V_connectionReady
TQ,N,V_lockoutState
TQ,N,V_pageType
initWithApplication:
setChangeType:
setActivationSettings:
destroyApplication:
pendingFenceHandle
pendingAnimationSettings
setPendingFenceHandle:
setPendingAnimationSettings:
widgetSizeManager
requestSizeChange
performWithoutAnimation:
animateWithDuration:animations:
availableWidgetSizes
_synchronizeDrawingWithFence:
initWithEnvironment:animationManager:widgetSizeManager:
setAvailableWidgetSizes:
setWidgetSizeManager:
_availableWidgetSizes
_widgetSizeManager
_pendingFenceHandle
_pendingAnimationSettings
T@"<DBWidgetSizeManaging>",W,N,V_widgetSizeManager
T@"BKSAnimationFenceHandle",&,N,V_pendingFenceHandle
T@"BSAnimationSettings",&,N,V_pendingAnimationSettings
T@"NSArray",&,N,V_availableWidgetSizes
locationManager
networkPathMonitor
formattedUniqueIdentifier
location
coordinate
startMonitoringForRegionWithIdentifier:locationCoordinate:range:
stopMonitoringForRegionWithIdentifier:
homeLocationStatus
servicesWithTypes:
cachedGarageDoors
inExtendedRange
updatingLastUsedServiceTypes
lastUsedIdentifiersByServiceType
fetchLastModifiedServiceOfType:completionHandler:
lastLoggedDistance
previouslyInRange
setLastLoggedDistance:
startNetworkPathMonitorWithIdentifier:
stopNetworkPathMonitorWithIdentifier:
setPreviouslyInRange:
allObjects
hasCachedGarageDoors
writeRequestWithCharacteristic:value:
characteristicBatchRequestWithWriteRequests:
setProgressHandler:
performBatchCharacteristicRequest:
currentLocation
distanceFromLocation:
_updateInRangeIfNeeded
setInExtendedRange:
_updateCachedGarageDoors
startUpdatingLocationWithIdentifier:
stopUpdatingLocationWithIdentifier:
_scheduleGarageDoorRefresh
garageDoorRefreshScheduled
setGarageDoorRefreshScheduled:
refreshGarageDoors
locationManager:didUpdateLocation:
locationManager:didEnterRegionIdentifier:
locationManager:didExitRegionIdentifier:
networkPathMonitor:didChangeNetworkReachable:
networkPathMonitorDidChangeNetworkPath:
homeDidUpdateName:
homeDidUpdateAccessControlForCurrentUser:
home:didAddAccessory:
home:didRemoveAccessory:
home:didAddUser:
home:didRemoveUser:
home:didUpdateRoom:forAccessory:
home:didAddRoom:
home:didRemoveRoom:
home:didUpdateNameForRoom:
home:didAddZone:
home:didRemoveZone:
home:didUpdateNameForZone:
home:didAddRoom:toZone:
home:didRemoveRoom:fromZone:
home:didAddServiceGroup:
home:didRemoveServiceGroup:
home:didUpdateNameForServiceGroup:
home:didAddService:toServiceGroup:
home:didRemoveService:fromServiceGroup:
home:didAddActionSet:
home:didRemoveActionSet:
home:didUpdateNameForActionSet:
home:didUpdateActionsForActionSet:
home:didAddTrigger:
home:didRemoveTrigger:
home:didUpdateNameForTrigger:
home:didUpdateTrigger:
home:didUnblockAccessory:
home:didEncounterError:forAccessory:
home:didUpdateHomeHubState:
homeDidUpdateSupportedFeatures:
home:didAddResidentDevice:
home:didRemoveResidentDevice:
home:didUpdateLocation:
home:didUpdateStateForOutgoingInvitations:
home:didUpdateAccesoryInvitationsForUser:
homeDidUpdateApplicationData:
home:didUpdateApplicationDataForRoom:
home:didUpdateApplicationDataForServiceGroup:
home:didUpdateApplicationDataForActionSet:
home:didUpdateLastExecutionDateForActionSet:
home:didUpdateAccessControlForUser:
home:didEnableNotifications:
home:didUpdateAutomaticSoftwareUpdateEnabled:
home:didUpdateMinimumMediaUserPrivilege:
home:didUpdateMediaPeerToPeerEnabled:
home:didUpdateMediaPassword:
home:didAddMediaSystem:
home:didRemoveMediaSystem:
home:didUpdateReprovisionStateForAccessory:
homeDidUpdateProtectionMode:
homeDidUpdateNetworkRouterSupport:
homeDidUpdateHomeLocationStatus:
homeDidEnableMultiUser:
homeDidSetHasAnyUserAcknowledgedCameraRecordingOnboarding:
home:didAddAccessoryNetworkProtectionGroup:
home:didRemoveAccessoryNetworkProtectionGroup:
home:didUpdateAccessoryNetworkProtectionGroup:
homeDidSetEnableDoorbellChime:
home:didUpdatePersonManagerSettings:
home:didFailAccessorySetupWithError:
homeDidSetHasOnboardedForAccessCode:
homeDidAddWalletKey:
homeDidRemoveWalletKey:
home:didUpdateHasOnboardedForWalletKey:
homeDidUpdateAssistantIdentifiers:
homeDidUpdateToROAR:
home:didUpdateAreBulletinNotificationsSupported:
initWithHome:resourceProvider:
_setValue:forCharacteristic:completion:
lastUsedGarageDoor
setCachedGarageDoors:
_updatingLastUsedServiceTypes
_garageDoorRefreshScheduled
_previouslyInRange
_inExtendedRange
_lastUsedGarageDoor
_cachedGarageDoors
_lastUsedIdentifiersByServiceType
_locationManager
_lastLoggedDistance
_networkPathMonitor
T@"HMHome",R,N,V_home
T@"NSDictionary",&,N,V_cachedGarageDoors
T@"NSMutableSet",R,N
T@"NSMutableDictionary",R,N,V_lastUsedIdentifiersByServiceType
TB,N,V_garageDoorRefreshScheduled
T@"DBLocationManager",R,N,V_locationManager
TB,N,V_previouslyInRange
TB,N,V_inExtendedRange
Td,N,V_lastLoggedDistance
T@"DBNetworkPathMonitor",R,N,V_networkPathMonitor
T@"CLLocation",R,N
T@"DBGarageDoor",R,N,V_lastUsedGarageDoor
registerCharacteristicClass:
characteristicFormats
characteristicType
registeredCharacteristicClasses
metadata
format
initWithService:characteristic:
cachedValue
pendingValue
writeable
setPendingValue:
transactionId
setTransactionId:
_didUpdate
characteristic
setError:
_locked_State
error
_lock_setError:
setCachedValue:
_readValueCompletionTransactionID:error:
readValueWithCompletionHandler:
properties
notifies
readable
_updateValue
setFormatedValue:
setCurrent:
setCharacteristic:
valueLock
setValueLock:
_current
_valueLock
_value
_error
_formatedValue
_characteristic
_cachedValue
_pendingValue
_transactionId
T@"HMCharacteristic",&,N,V_characteristic
T{os_unfair_lock_s=I},N,V_valueLock
T@,&,N,V_cachedValue
T@,&,N,V_pendingValue
TQ,N,V_state
TQ,N,V_transactionId
T@"NSError",&,N,V_error
T@,&,N,V_value
T@,&,N,V_formatedValue
TB,N,V_current
T@"DBHome",R,N
T@"DBHomeKitService",R,W,N,V_service
touchesShouldCancelInContentView:
buddyMonitorDidChangeFinished:
_updateBuddyFinished
setBuddyFinished:
buddyFinished
_buddyFinished
T@"CARObserverHashTable",&,V_observers
TB,N,V_buddyFinished
_shouldAnimatePropertyWithKey:
keysToAnimate
_keysToAnimate
T@"NSArray",C,N,V_keysToAnimate
carButtonColor
_externalUnfocusedBorderColor
_carButtonColor
T@"UIColor",&,N,V_carButtonColor
setRootContainerView:
setRootContainerBackgroundColor:
setToView:
setToTransitionContainerView:
setFromView:
setFromTransitionContainerView:
setToIdentifier:
T@"UIView",&,N,V_rootContainerView
T@"UIColor",&,N,V_rootContainerBackgroundColor
T@"UIView",&,N,V_toView
T@"UIView",&,N,V_toTransitionContainerView
T@"UIView",&,N,V_fromView
T@"UIView",&,N,V_fromTransitionContainerView
T@"DBAppDockViewController",&,N,V_appDockViewController
T@"NSString",C,N,V_toIdentifier
predictionDidUpdate:
predictionScore
initialValidInterval
distantPast
initWithStart:end:
defaultValidRanges
startTimeIntervalSinceReferenceDate
endTimeIntervalSinceReferenceDate
setEnd:
updateRangeIfNeeded:
predicateWithFormat:
filterUsingPredicate:
_debugScoreText
predictedObjectDescription
isEqualToPrediction:
isEqualClassSelector
methodForSelector:
score
start
formattedTime:
_scoreFor:minValue:maxValue:
_defaultIsEqualClass:
validRanges
debugValidRangesText
invalidateValidIntervals
setValidRanges:
setUniqueIdentifier:
_showImageBorder
_validRanges
_uniqueIdentifier
_title
_subtitle
_image
_compositingFilter
_actionBlock
_tieBreakScore
T@"<DBSmartWidgetPredictionDelegate>",W,N,V_delegate
T@"NSUUID",C,N,V_uniqueIdentifier
T@"NSArray",&,N,V_validRanges
T@"NSString",R,C,N,V_title
T@"NSString",R,C,N,V_subtitle
T@"UIImage",R,N,V_image
T@"CAFilter",R,N,V_compositingFilter
TB,R,N,V_showImageBorder
T@?,R,C,N,V_actionBlock
Tq,R,N,V_tieBreakScore
ready
client
animationBlock
setAnimationBlock:
setReady:
setClient:
_ready
_animationBlock
_client
T@?,C,N,V_animationBlock
TB,N,V_ready
T@,&,N,V_client
animationsByIdentifier
arrayByAddingObject:
setAnimationsByIdentifier:
_animationsByIdentifier
T@"NSMutableDictionary",&,N,V_animationsByIdentifier
_initWithApplicationInfo:proxyApplicationInfo:environment:
_removeAlertSubviewIfNecessary
_updateSceneUI
_addAlertSubviewIfReady
addConstraints:
viewIfLoaded
proxyApplicationInfo
bs_setSafeObject:forKey:
initWithApplicationInfo:proxyApplicationInfo:environment:activationSettings:
initWithURL:
setByAddingObject:
transitionContext
_displayLayoutElementIdentifier
setBundleIdentifier:
_requestDismissal
_requestDestroy
initWithApplicationInfo:proxyApplicationInfo:environment:
setProxyApplicationInfo:
_proxyApplicationInfo
T@"DBApplicationInfo",&,N,V_proxyApplicationInfo
artworkButton
_setTouchInsets:
albumArtButtonTapped:
playTransportButton
playPauseButtonTouchDown:
playPauseButtonTouchUp:
_cancelHeldAction:
nextTransportButton
nextButtonTouchDown:
nextButtonTouchUp:
backTransportButton
backButtonTouchDown:
backButtonTouchUp:
backButtonLongPress:
setBackLongPressRecognizer:
backLongPressRecognizer
nextButtonLongPress:
setNextLongPressRecognizer:
nextLongPressRecognizer
boldSystemFontOfSize:
subtitleLabel
_carSystemSecondaryColor
_setupTransportControls
_setNotPlaying
_processPlaybackControlsForCurrentlyPlayingSong
_updateAppearanceForWallpaper
sharedManager
addNowPlayingObserver:
removeNowPlayingObserver:
lastSnapshot
song
_showsProgressView
durationSnapshot
_showsTextLabels
spinner
initWithActivityIndicatorStyle:
setSpinner:
setColor:
startAnimating
spinnerTimer
setSpinnerTimer:
stopAnimating
_imageInsetsForTransportButton:
setContentsPosition:
_showsBackButton
widgetConstraints
layoutGuides
setShowsProgressLabels:
setDurationSnapshot:
_isInAnimationBlock
focusContainerGuide
controlsContainerGuide
_updateArtworkConstraints
progressView
_heightForArtwork
constraintLessThanOrEqualToAnchor:multiplier:
effectiveUserInterfaceLayoutDirection
setWidgetConstraints:
_isFocusUI
dashboardAudioWidgetDidChangeToBundleIdentifier:
_processArtworkForCurrentlyPlayingSong
_processLabelsForCurrentlyPlayingSong
_updateArtworkBorder
sharedApplication
userInterfaceLayoutDirection
isEnabled
commandWithType:
_setSpinnerVisible:
setSeeking:
seeking
jumpForwardInterval
jumpBackInterval
_nowPlayingCompletionForAction:isPlayCommand:error:
performCommandRequest:completion:
numberWithInteger:
isValid
_respondToHeldAction
heldAction
_sendAction:withState:
performSelector:withObject:afterDelay:
_sendHeldAction
showArtworkBorder
_setupPlaceholderArtwork
_updateButton:withType:variant:
artworkCatalog
clearArtworkCatalogs
isArtworkVisuallyIdenticalToCatalog:
setDestinationScale:
setFittingSize:
setPreviousCatalog:
setShowArtworkBorder:
setDestination:configurationBlock:
_nowPlayingPlaceholderImage
artworkHorizontalConstraint
setActive:
artist
invalidateIntrinsicContentSize
knownJumpIntervals
stringValue
shouldEnableNextButton
numberWithLong:
shouldEnableBackButton
setLastSnapshot:
tracklist
playingItemIndexPath
setAccessibilityValue:
nowPlayingManager:didUpdateSnapshot:
nowPlayingManager:didThrottleUpdateForBundleIdentifier:
nowPlayingObserver:didChangeNowPlayingApplication:
nowPlayingObserver:didUpdatePlaybackState:inApplication:
controller:defersResponseReplacement:
controller:shouldRetryFailedRequestWithError:
willBeginLoadingRequestForController:
didFinishLoadingRequestForController:
setFocusContainerGuide:
setControlsContainerGuide:
setHeldAction:
setArtworkButton:
setPlayTransportButton:
setNextTransportButton:
setLayoutGuides:
setBackTransportButton:
setSubtitleLabel:
setArtworkHorizontalConstraint:
setProgressView:
previousCatalog
_seeking
_showArtworkBorder
_focusContainerGuide
_controlsContainerGuide
_backLongPressRecognizer
_nextLongPressRecognizer
_heldAction
_spinnerTimer
_spinner
_lastSnapshot
_widgetConstraints
_artworkButton
_playTransportButton
_nextTransportButton
_layoutGuides
_backTransportButton
_subtitleLabel
_artworkHorizontalConstraint
_progressView
_previousCatalog
T@"UIFocusContainerGuide",&,N,V_focusContainerGuide
T@"UIFocusContainerGuide",&,N,V_controlsContainerGuide
T@"UILongPressGestureRecognizer",&,N,V_backLongPressRecognizer
T@"UILongPressGestureRecognizer",&,N,V_nextLongPressRecognizer
Tq,N,V_heldAction
TB,N,V_seeking
T@"NSTimer",&,N,V_spinnerTimer
T@"UIActivityIndicatorView",&,N,V_spinner
T@"CPUINowPlayingSnapshot",&,N,V_lastSnapshot
T@"NSArray",&,N,V_widgetConstraints
T@"UIButton",&,N,V_artworkButton
T@"DBNowPlayingFocusHighlightButton",&,N,V_playTransportButton
T@"DBNowPlayingFocusHighlightButton",&,N,V_nextTransportButton
T@"NSArray",&,N,V_layoutGuides
TB,N,V_showArtworkBorder
T@"DBNowPlayingFocusHighlightButton",&,N,V_backTransportButton
T@"UILabel",&,N,V_subtitleLabel
T@"NSLayoutConstraint",&,N,V_artworkHorizontalConstraint
T@"CPUIProgressView",&,N,V_progressView
T@"MPArtworkCatalog",&,N,V_previousCatalog
shouldUpdateButtonOpacityForKnobUnfocused
canShowHighlight
colorForKnobFocusLayer
touchesCancelled:withEvent:
stateProvider
initWithFrame:showForegroundView:inProcessStateProvider:
setStatusBarView:
statusBarView
statusBar
setVisualProviderInfo:
setTargetScreen:
setStyleDelegate:
_createStatusBar
activeStyleOverride
initWithStateProvider:environmentConfiguration:
statusBarEdgeUpdated
hasActivePill
setStateProvider:
_stateProvider
_statusBarView
T@"DBStatusBarStateProvider",&,N,V_stateProvider
T@"UIStatusBar_Modern",&,N,V_statusBarView
fileSystemRepresentation
archiveDirectory:toLocation:
unarchive:toLocation:
stringWithFileSystemRepresentation:length:
setAllowsGroupBlending:
_updateViews
prediction
imageview
setCompositingFilter:
subTitleLabel
_updateImageBorder
smartWidgetDebugShowScore
scoreDebugLabel
nextRefreshDebugLabel
validRangesDebugLabel
engine
nextRefresh
formattedTimeStamp:
setPrediction:
didMoveToWindow
setEngine:
setImageview:
setSubTitleLabel:
setScoreDebugLabel:
setNextRefreshDebugLabel:
setValidRangesDebugLabel:
_prediction
_engine
_imageview
_subTitleLabel
_scoreDebugLabel
_nextRefreshDebugLabel
_validRangesDebugLabel
T@"UIImageView",&,N,V_imageview
T@"UILabel",&,N,V_subTitleLabel
T@"UILabel",&,N,V_scoreDebugLabel
T@"UILabel",&,N,V_nextRefreshDebugLabel
T@"UILabel",&,N,V_validRangesDebugLabel
T@"DBSmartWidgetPrediction",&,N,V_prediction
T@"DBSmartWidgetEngine",W,N,V_engine
fixedCoordinateSpace
convertRect:toCoordinateSpace:
convertRect:fromCoordinateSpace:
inputDeviceManager
touchpadWithSenderID:
feedbackSupported
performFeedbackOfType:
_currentTouchpad
_currentSenderID
T@"DBEnvironmentConfiguration",W,N,V_environmentConfiguration
predictions
containsDate:
isEqualToDate:
initWithEventStore:visibilityChangedCallback:queue:
_eventStoreDidChange:
formattedDateTimeStamp:
setNow:
earliestStartDate
latestStartDate
calendarVisibilityManager
visibleCalendars
_includeCalendar:
eventStore
predicateForEventsWithStartDate:endDate:calendars:
eventsMatchingPredicate:
_includeEvent:forNow:
startDate
addEvent:
initWithEvent:
setSoonestEvent:
db_ShortDescription
isAllDay
endDate
status
selfAttendee
participantStatus
userInfo
shouldKeepPrediction:
_handleAppLibraryRefresh
_eventStore
_calendarVisibilityManager
T@"EKEventStore",R,N,V_eventStore
T@"EKCalendarVisibilityManager",R,N,V_calendarVisibilityManager
setHidesWhenStopped:
_updatePrediction
hasHighPriorityPrediction
_performAction
setActionRecognizer:
actionRecognizer
setActionSelectRecognizer:
actionSelectRecognizer
_refresh
setRefreshRecognizer:
refreshRecognizer
_previousPrediction
setPreviousPredictionRecognizer:
previousPredictionRecognizer
setDirection:
_nextPrediction
setNextPredictionRecognizer:
nextPredictionRecognizer
setRecognizers:
widgetView
spinnerView
startIfNeeded
currentPredictionIndex
setCurrentPredictionIndex:
currentPredictions
setWantsToShowPrediction:
animationDelegate
animateSmartWidget:completion:
recognizers
smartWidgetEngine:didUpdateCurrentPredictions:
smartWidgetEngineDidUpdatePredictionsFresh:
smartWidgetEngineDidStart:
smartWidgetEngineDidStop:
gestureRecognizerShouldBegin:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldReceivePress:
gestureRecognizer:shouldReceiveEvent:
initWithEnvironment:engine:animationDelegate:
isHighPriority
wantsToShowPrediction
setWidgetView:
setSpinnerView:
setAnimationDelegate:
_wantsToShowPrediction
_widgetView
_currentPredictionIndex
_spinnerView
_recognizers
_actionRecognizer
_actionSelectRecognizer
_refreshRecognizer
_previousPredictionRecognizer
_nextPredictionRecognizer
_animationDelegate
T@"DBSmartWidgetEngine",R,N,V_engine
T@"DBSmartWidgetView",&,N,V_widgetView
Tq,N,V_currentPredictionIndex
T@"UIActivityIndicatorView",&,N,V_spinnerView
T@"NSSet",&,N,V_recognizers
T@"UITapGestureRecognizer",&,N,V_actionRecognizer
T@"UITapGestureRecognizer",&,N,V_actionSelectRecognizer
T@"UILongPressGestureRecognizer",&,N,V_refreshRecognizer
T@"UISwipeGestureRecognizer",&,N,V_previousPredictionRecognizer
T@"UISwipeGestureRecognizer",&,N,V_nextPredictionRecognizer
T@"<DBSmartWidgetAnimating>",W,N,V_animationDelegate
TB,N,V_wantsToShowPrediction
highPriority
TB,R,N,GisHighPriority
T@"DBWorkspace",W,N,V_workspace
eventIdentifier
_uuidFromString:
events
variousEndDates
isSoonestEvent
initWithUUIDString:
bytes
initWithUUIDBytes:
localizedStringWithFormat:
allDay
formattedRangeStart:end:
initWithString:
externalURI
isEqualToCalendarPrediction:
T@"NSDate",&,N
T@"NSDate",R,N
_soonestEvent
_events
soonestEvent
TB,N,GisSoonestEvent,V_soonestEvent
T@"NSArray",R,N,V_events
setHighlightView:
_updateHighlight
iconLabelsRequireBackground
highlightView
setWallpaperPreferences:
_highlightView
T@"CRSUIWallpaperPreferences",&,N,V_wallpaperPreferences
T@"UIView",&,N,V_highlightView
initWithConfigurationOptions:listLayoutProvider:
minimumInterIconSpacing
_labelHeight
_frameForLabelHighlight
iconContentScale
maxLabelSizeForIconImageSize:
labelFontForTraitCollection:
setLabelHidden:
labelLegibilityView
_updateLabel
nextFocusedView
bringSubviewToFront:
configureLabelImageParametersBuilder:
setTextInsets:
textColorForTraitCollection:
_iconLabelsRequireBackground
focusColorForTraitCollection:
focusTextColorForTraitCollection:
iconImageSnapshot
_refreshDropShadowWithIconImage:
prepareForReuse
_updateCharacteristicsWithTraitCollection:
_configureIconImageView:
dropShadowView
setDropShadowView:
shadowHidden
dropShadowProvider
setDropShadowProvider:
traitCollectionWithUserInterfaceStyle:
traitCollectionWithTraitsFromCollections:
contents
setContents:
setOpacity:
animationWithKeyPath:
setFromValue:
setToValue:
setDuration:
addAnimation:forKey:
preferredFontForTextStyle:compatibleWithTraitCollection:
defaultIconLocation
allowsLabelAccessoryView
supportsDragInteraction
supportsPreviewInteraction
supportsCursorInteraction
T@"DBEnvironmentConfiguration",&,N
labelFont
_labelBaselineOffsetFromImage
setShadowHidden:
setLabelLegibilityView:
_shadowHidden
_dropShadowProvider
_dropShadowView
_labelLegibilityView
T@"DBIconDropShadowProvider",&,N,V_dropShadowProvider
T@"UIView",&,N,V_dropShadowView
T@"DBIconLabelBackdropView",&,N,V_labelLegibilityView
TB,N,V_shadowHidden
dashboardRootViewController:didChangeToViewState:
currentBaseViewController
_dismissViewController:andPresentBaseViewController:animated:completion:
_presentBaseViewController:animated:launchSource:completion:
_dismissBaseViewControllerAnimated:completion:
currentStackedViewController
_presentStackedViewController:animated:completion:
_dismissStackedViewControllerAnimated:completion:
viewStateObservers
currentViewState
baseContainerView
contentCornerRadius
mainScreen
setAutoresizesSubviews:
additionalSafeAreaInsets
_updateHomeConstraints
setContentFrame:
homeViewConstraints
setHomeViewConstraints:
bs_addChildViewController:animated:transitionBlock:
setBackgroundView:
backgroundView
setMasksToBounds:
setBaseContainerView:
setStackedContainerView:
stackedContainerView
_updateHomeScreenLayoutElementIfNeeded
homeScreenElementAssertion
setHomeScreenElementAssertion:
setTodayViewForeground:
setTodayViewActive:
setCurrentBaseViewController:
setCurrentViewState:
bs_addChildViewController:withSuperview:animated:transitionBlock:
visibleIconViewForIdentifier:
setIconView:
bs_removeChildViewController:animated:transitionBlock:
setCurrentStackedViewController:
presentBaseViewController:animated:launchSource:completion:
dismissBaseViewControllerAnimated:completion:
presentStackedViewController:animated:completion:
dismissStackedViewControllerAnimated:completion:
removeViewStateObserver:
setViewStateObservers:
_homeViewController
_contentCornerRadius
_backgroundView
_baseContainerView
_stackedContainerView
_currentBaseViewController
_currentStackedViewController
_viewStateObservers
_currentViewState
_homeScreenElementAssertion
_homeViewConstraints
T@"_TtC9DashBoard22DBDashboardDimmingView",&,N,V_dimmingView
T@"UIView",&,N,V_backgroundView
T@"CPUIPassthroughView",&,N,V_contentView
T@"UIView",&,N,V_baseContainerView
T@"UIView",&,N,V_stackedContainerView
T@"UIViewController<DBDashboardWorkspaceEntityPresenting>",&,N,V_currentBaseViewController
T@"UIViewController<DBDashboardWorkspaceEntityPresenting>",&,N,V_currentStackedViewController
T@"CARObserverHashTable",&,N,V_viewStateObservers
TQ,N,V_currentViewState
T@"<BSInvalidatable>",&,N,V_homeScreenElementAssertion
T@"NSArray",&,N,V_homeViewConstraints
T@"DBDashboardHomeViewController",R,N,V_homeViewController
T@"DBAppDockViewController",W,N,V_appDockViewController
Td,N,V_contentCornerRadius
iconView
_iconView
T@"DBIconView",&,N,V_iconView
iconImageFrame
convertRect:toView:
setShouldRasterize:
matchingIconViewWithConfigurationOptions:
setShowsSquareCorners:
setCenter:
setValues:
setKeyTimes:
convertRect:fromView:
initWithNibName:bundle:
dismissHandler
_alert
_dismissHandler
T@?,R,N,V_dismissHandler
T@"URTAlert",R,N,V_alert
message
_buttonWithAlertAction:
cancelAction
otherAction
defaultAction
arrangedSubviews
handler
actionWithHandler:
addAction:forControlEvents:
statusBarHomeButtonStateManager:didChangeToDisplayState:
setCurrentPageIndex:
setFirstIconPageIndex:
setMinimumPageIndex:
_updateHomeButtonState
_currentPageIndex
_minimumPageIndex
_firstIconPageIndex
T@"<DBStatusBarButtonStateManagerDelegate>",W,N,V_delegate
Tq,N,V_currentPageIndex
Tq,N,V_minimumPageIndex
Tq,N,V_firstIconPageIndex
initWithBundlePath:
_commonPostInit
stringByAppendingPathComponent:
fileURLWithPath:
locationQueue
initWithEffectiveBundle:delegate:onQueue:
setLocationManager:
initWithEffectiveBundleIdentifier:delegate:onQueue:
UTF8String
setDistanceFilter:
setDesiredAccuracy:
_authorizeIfNeeded
monitoredRegions
stopMonitoringForRegion:
_stopUpdatingLocationNow
authorizationStatusForBundleIdentifier:
bundlePath
authorizationStatusForBundle:
authorizationStatus
cacheUsedCount
setCacheUsedCount:
cachedCurrentLocation
timestamp
timeIntervalSinceNow
activeAssertions
locationActive
_startUpdatingLocationNow
setLocationActive:
startUpdatingLocation
_updateCurrentLocation:
stopUpdatingLocation
setCurrentLocation:
initWithLatitude:longitude:
isMonitoringAvailableForClass:
initWithCenter:radius:identifier:
setNotifyOnExit:
setNotifyOnEntry:
monitoringRegions
startMonitoringForRegion:
authorized
requestWhenInUseAuthorization
_name
lastPostedLocation
setLastPostedLocation:
_didEnterRegionWithIdentifier:
_didExitRegionWithIDentifier:
homeKitLocationManager
locationManager:didUpdateToLocation:fromLocation:
locationManager:didUpdateLocations:
locationManager:didUpdateHeading:
locationManagerShouldDisplayHeadingCalibration:
locationManager:didDetermineState:forRegion:
locationManager:didRangeBeacons:inRegion:
locationManager:rangingBeaconsDidFailForRegion:withError:
locationManager:didRangeBeacons:satisfyingConstraint:
locationManager:didFailRangingBeaconsForConstraint:error:
locationManager:didEnterRegion:
locationManager:didExitRegion:
locationManager:didFailWithError:
locationManager:monitoringDidFailForRegion:withError:
locationManager:didChangeAuthorizationStatus:
locationManagerDidChangeAuthorization:
locationManager:didStartMonitoringForRegion:
locationManagerDidPauseLocationUpdates:
locationManagerDidResumeLocationUpdates:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didVisit:
initWithLocationManager:locationQueue:
initWithBundleIdentifier:
setLocationQueue:
setActiveAssertions:
setMonitoringRegions:
_locationActive
_cachedCurrentLocation
_bundlePath
_bundle
_locationQueue
_activeAssertions
_currentLocation
_lastPostedLocation
_monitoringRegions
_cacheUsedCount
T@"CLLocationManager",&,N,V_locationManager
T@"NSObject<OS_dispatch_queue>",&,N,V_locationQueue
T@"NSMutableSet",&,N,V_activeAssertions
TB,N,V_locationActive
T@"CLLocation",&,N,V_currentLocation
T@"CLLocation",&,N,V_lastPostedLocation
T@"NSMutableDictionary",&,N,V_monitoringRegions
T@"CLLocation",R,N,V_cachedCurrentLocation
TQ,N,V_cacheUsedCount
T@"NSString",R,N,V_bundlePath
T@"NSBundle",R,N,V_bundle
T@"NSString",R,N,V_bundleIdentifier
strongToWeakObjectsMapTable
_startMonitoringProcess
processMonitor
_appStateUpdated:processHandle:
setProcessMonitor:
handleMapTable
isCrash
_handleDeathWithIdentifier:isCrash:pid:
monitorForDeath:
setPolicyEvaluator:
setHandleMapTable:
_processMonitor
_handleMapTable
T@"RBSProcessMonitor",&,N,V_processMonitor
T@"CRCarPlayAppPolicyEvaluator",&,N,V_policyEvaluator
T@"NSMapTable",&,N,V_handleMapTable
_focusHighlightColor
T@"UIColor",&,N,V_focusHighlightColor
_refreshAppDock
dockItemStackView
_updateNavigationButtonSizeConstraints
_updateAudioButtonSizeConstraints
_updateOtherButtonSizeConstraints
setAlignment:
setAccessibilityLabel:
setDockItemStackView:
_generateOrderedAppItems
setOrderedAppItems:
setDockEnabled:
navigationAppButton
audioAppButton
otherAppButton
navigationAppButtonSizeConstraints
_buttonSizeConstraintsForButton:
setNavigationAppButtonSizeConstraints:
audioAppButtonSizeConstraints
setAudioAppButtonSizeConstraints:
otherAppButtonSizeConstraints
setOtherAppButtonSizeConstraints:
iconProvider
indexOfObjectPassingTest:
initWithIconProvider:
setNavigationAppButton:
_dockButtonPressed:
insertArrangedSubview:atIndex:
setAudioAppButton:
setOtherAppButton:
appDockViewControllerDelegate
appDockViewController:didSelectBundleID:
isPlaying
navigatingIdentifiers
setBundleIdentifier:animated:
_updateNowPlayingBundleIdentifier:
_updateNavigationBundleIdentifier:
mostRecentDashboardNavigatingApp
nowPlayingApplicationInfo
siriDidStartHostingBundleIdentifier:
initWithAppHistory:iconProvider:environmentConfiguration:
setButtonFocusHighlightColor:
setAppDockViewControllerDelegate:
isDockEnabled
buttonFocusHighlightColor
orderedAppItems
setIconProvider:
_dockEnabled
_appDockViewControllerDelegate
_buttonFocusHighlightColor
_navigationAppButton
_navigationAppButtonSizeConstraints
_audioAppButton
_audioAppButtonSizeConstraints
_otherAppButton
_otherAppButtonSizeConstraints
_dockItemStackView
_orderedAppItems
_iconProvider
T@"DBAppDockButton",&,N,V_navigationAppButton
T@"NSArray",&,N,V_navigationAppButtonSizeConstraints
T@"DBAppDockButton",&,N,V_audioAppButton
T@"NSArray",&,N,V_audioAppButtonSizeConstraints
T@"DBAppDockButton",&,N,V_otherAppButton
T@"NSArray",&,N,V_otherAppButtonSizeConstraints
T@"UIStackView",&,N,V_dockItemStackView
T@"NSArray",&,N,V_orderedAppItems
T@"<DBIconProviding>",W,N,V_iconProvider
T@"<DBAppDockViewControllerDelegate>",W,N,V_appDockViewControllerDelegate
dockEnabled
TB,N,GisDockEnabled,V_dockEnabled
T@"UIColor",&,N,V_buttonFocusHighlightColor
alignmentIconSize
insets
_setSpeedBumpEdges:
automaticallyAdjustsLayoutMetricsToFit
adaptsOrientationToTraitCollection
usesAlternateLayout
layoutInsetsForOrientation:
baseIconViewClass
_insets
T{UIEdgeInsets=dddd},N,V_insets
initWithVehicleId:
initWithStore:carApplicationDataSource:
setIconImageSize:
layout
reloadIcons
setIconModel:
allApps
showsOEMIcon
initWithSessionConfiguration:
exportIconLayoutState
hiddenIcons
bs_map:
iconOrder
importState:
resetCurrentIconState
iconImageWithInfo:
iconImageForBundleIdentifier:inVehicle:
applicationProxyForIdentifier:
localizedNameForContext:
setIconImageData:
setIconImageScale:
setLocalizedDisplayName:
URLForResource:withExtension:
dictionaryWithContentsOfURL:
defaultIconState
allApplicationIcons
T@"NSArray",R,C,N
iconManager:willUseRootFolderControllerConfiguration:
iconManager:willDestroyRootFolderController:
iconManager:didCreateRootFolderController:
iconManager:willDestroyRootViewController:
iconManager:didCreateRootViewController:
interfaceOrientationForIconManager:
allowedInterfaceOrientationsForIconManager:
possibleInterfaceOrientationsForIconManager:
isRootFolderContentVisibleForIconManager:
isIconContentPossiblyVisibleOverApplicationForIconManager:
isEditingAllowedForIconManager:
iconManagerEditingDidChange:
iconManager:isPartialEditingAllowedForIconLocation:
iconManager:willUseIconImageCache:
iconManagerListLayoutProviderDidChange:
iconManager:configureIconView:forIcon:
iconManager:reasonToDisallowTapOnIconView:
iconManager:reasonToDisallowInteractionOnIconView:
iconManager:possibleUserIconTapBegan:
iconManager:possibleUserIconTapBeganAfterInformingIcon:
iconManager:willPrepareIconViewForLaunch:
iconManager:didReceiveTapOnLaunchDisabledIconView:
iconManager:launchIconForIconView:
iconManager:launchIconForIconView:withActions:
iconManager:touchesEndedForIconView:
iconManager:launchIcon:location:animated:completionHandler:
iconManager:isIconVisibleForBundleIdentifier:
iconManager:wantsLaunchForWidgetURL:
iconManager:launchActionsForIconView:
iconManager:launchURLForIconView:
iconManager:containerViewForPresentingContextMenuForIconView:
iconManager:iconView:willUseContextMenuStyle:
iconManager:containerViewControllerForConfigurationOfIconView:
iconManager:contentBoundingRectForConfigurationOfIconView:
iconManager:homeScreenContentViewForConfigurationOfIconView:
iconManager:iconView:configurationWillBeginWithInteraction:
iconManager:iconView:configurationWillEndWithInteraction:
iconManager:iconView:configurationDidEndWithInteraction:
iconManager:containerViewControllerForModalInteractionFromIconView:
iconManager:homeScreenContentViewForModalInteractionFromIconView:
iconManager:iconViewDisplaysCloseBox:
iconManager:iconCloseBoxTapped:
iconManager:iconViewDisplaysLabel:
iconManager:wantsUninstallForIcon:location:
iconManager:closeBoxTypeForIconView:proposedType:
iconManager:allowsBadgingForIcon:
iconManager:allowsBadgingForIconLocation:
isFocusAllowedForIconManager:
iconManager:focusEffectTypeForIconView:
iconManager:accessibilityTintColorForIconView:
iconManagerDidFinishInstallForIcon:
viewControllerForPresentingViewControllersForIconManager:
iconManager:popoverContentViewControllerForIcon:
containerViewControllerForPopOversForIconManager:
iconManager:canBeginDragForIconView:
iconManager:canAddDragItemsToSession:fromIconView:
iconManager:canAcceptDropInSession:inIconListView:
iconManager:additionalDragLiftScaleForIconView:
iconManager:draggingStartLocationForIconView:proposedStartLocation:
iconManager:backgroundViewForComponentsOfIconView:
iconManager:backgroundViewForDockForRootFolderController:
iconManager:backgroundViewForEditingDoneButtonForRootFolderController:
iconManager:shouldContinueToUseBackgroundView:forComponentsOfIconView:
iconManager:screenSnapshotProviderForComponentsOfIconView:
recycledViewsContainerProviderForIconManager:
iconManagerCanBeginIconDrags:
iconManager:dragPreviewForIconView:
windowForIconDragPreviewsForIconManager:forWindowScene:
iconManagerIconDraggingDidChange:
iconManager:willBeginIconDragWithUniqueIdentifier:numberOfDraggedItems:
iconManager:didAddItemsToIconDragWithUniqueIdentifier:numberOfDraggedItems:
iconManager:didEndIconDragWithUniqueIdentifier:numberOfDraggedItems:
iconManager:iconDropSessionDidEnter:
iconManager:shouldActivateApplicationShortcutItem:atIndex:forIconView:
iconManager:applicationShortcutItemsForIconView:
iconManager:supportedMultitaskingShortcutActionsForIconView:
iconManager:didSpringLoadIconView:
iconManager:folderController:canChangeCurrentPageIndexToIndex:
iconManager:wantsToHideStatusBarForFolderController:animated:
iconManager:fakeStatusBarForFolderController:
iconManager:statusBarStyleRequestForFolderController:
iconManager:willRemoveFakeStatusBar:forFolderController:
iconManager:statusBarEdgeInsetsForFolderController:
iconManager:statusBarInsetsDidChange:
iconManager:contentOverlayInsetsFromParentIfAvailableForFolderController:
localizedDefaultFolderNameForIconManager:
iconManager:localizedFolderNameForDefaultDisplayName:
iconManager:willOpenFolder:
iconManager:didOpenFolder:
iconManager:willCloseFolder:
iconManager:didCloseFolder:
iconManager:willOpenFolderController:
iconManager:willCloseFolderController:
iconManagerFolderAnimatingDidChange:
iconManager:folderControllerWillBeginScrolling:
iconManager:folderControllerDidEndScrolling:
iconManager:minimumHomeScreenScaleForFolderController:
iconManagerCanUseSeparateWindowForRotation:
iconManager:wantsToAdjustLeadingCustomContentForEdgeBounceForScrollOffset:
distanceToTopOfSpotlightIconsForIconManager:
iconManager:folderControllerClassForFolderClass:proposedClass:
iconManager:nestingViewController:willPerformOperation:onViewController:withTransitionCoordinator:
iconManagerCanSaveIconState:
iconManagerDidSaveIconState:
iconManager:animator:animationSettingsForOperation:childViewController:
iconManager:accessibilityTintColorForScreenRect:
isFloatingDockSupportedForIconManager:
isFloatingDockVisibleForIconManager:
presentTodayOverlayForIconManager:
dismissTodayOverlayForIconManager:
presentLibraryForIconManager:windowScene:animated:
dismissLibraryForIconManager:windowScene:animated:
dismissOverlaysForIconManager:
maximumListCountForFoldersForIconManager:
defaultIconStateForIconManager:
iconManager:shouldAvoidPlacingIconOnFirstPage:
iconManager:defaultAutomaticFavoriteIconIdentifiersWithMaximumCount:
listsAllowRotatedLayoutForIconManager:
iconManagerDidNoteIconStateChangedExternally:
iconManager:rootFolderController:willUseTransitionContext:toTransitionToState:
iconManager:rootFolderController:willUsePropertyAnimator:toTransitionToState:
iconManager:rootFolderController:didChangeSidebarVisibilityProgress:
iconManager:rootFolderController:didChangeEffectiveSidebarVisibilityProgress:
iconManager:rootFolderController:didOverscrollOnFirstPageByAmount:
iconManager:rootFolderController:didEndOverscrollOnFirstPageWithVelocity:translation:
iconManager:rootFolderController:didOverscrollOnLastPageByAmount:
iconManager:rootFolderController:didEndOverscrollOnLastPageWithVelocity:translation:
iconManager:viewControllerForCustomIcon:element:
iconManager:shouldCacheRecentViewController:forIdentifier:
iconManager:willRemoveViewControllerForIdentifier:
iconManager:configurationDataForDataSource:ofIcon:
iconManager:dataSource:ofIcon:didUpdateConfigurationData:
iconManager:didRemoveConfigurableDataSource:ofIcon:
iconManager:prepareForPageHidingEducationWithCompletionHandler:
iconManager:willPresentPageManagementWithLayoutManager:animator:context:
iconManager:willDismissPageManagementUsingAnimator:context:
iconManager:didDismissPageManagementWithLayoutManager:context:
iconManagerWillPresentWidgetEditing:
iconManagerDidDismissWidgetEditing:
iconManagerWillAnimateWidgetInsertion:
iconManager:canAddIcon:toIconList:inFolder:
iconManager:canAddIconToIgnoredList:
iconManager:shouldPlaceIconOnIgnoredList:
iconManager:isWidgetValid:
iconManager:isCustomElementValid:
iconManager:prepareAddSheetViewController:
iconManager:iconClassForApplicationWithBundleIdentifier:proposedClass:
iconManager:canCustomElementAlignWithGrid:
fallbackDefaultFirstPageWidgetsForIconManager:
iconManager:willAddDefaultFirstPageWidgetsBasedOnPinnedWidgets:suggestionWidgets:
iconManagerShouldShowWidgetIntroductionPopoverForDefaultWidgets:
widgetIntroductionPreviewViewForIconManager:
iconManager:displayFeatureIntroductionItem:atLocation:
iconManager:displayFeatureIntroductionItemIfUnlocked:
iconManager:setTemporaryIntent:forIconWithIdentifier:widgetUniqueIdentifier:
iconManager:floatingDockViewControllerForView:
iconManager:floatingDockViewControllerForViewController:
iconManager:isViewOnMainDisplayWindowScene:
libraryViewControllersForIconManager:
iconManagerDidAddOrRemoveWidgetIcon:
testSetupForIconManagerWidgetScrollPerformanceTest:
testSetupForIconManagerAddWidgetsToEachPage:
testSetupForIconManagerWidgetScrollTest:
testSetupHomeScreenForWidgetScrollPerformanceTest:
getIconStateWithCompletion:
setIconState:
resetIconState
getApplicationIconInformationForBundleID:completion:
T@"NSDictionary",R,N
initWithVehicleID:iconImageCache:
setAllApps:
iconManager
setIconManager:
_allApps
_iconManager
_iconModel
T@"NSArray",&,N,V_allApps
T@"DBIconManager",&,N,V_iconManager
T@"DBIconModel",&,N,V_iconModel
lockOutView
setLockOutView:
_newLockOutViewForMode:
lockOutViewController:didTapButtonOfType:
_lockOutMode
_lockOutView
T@"DBLockOutView",&,N,V_lockOutView
T@"<DBLockOutViewControllerDelegate>",W,N,V_delegate
Tq,R,N,V_lockOutMode
observeDidAddApplicationsWithBlock:
observeDidRemoveApplicationsWithBlock:
observeDidReplaceApplicationsWithBlock:
observeDidAddPlaceholdersWithBlock:
observeDidCancelPlaceholdersWithBlock:
noteBadgeDidChange
_persistCachedIconImages
rootFolder
setFolder:
setFolderDelegate:
isEnabledAndSupportedForIconProvider:
setTodayViewPageHidden:
integerForKey:
pageObservers
analyticsIconRepresentation
applySessionStartedStorage:
_backButtonTapped:
_handleBackActionSupportACBack:
library
placeholderWithBundleIdentifier:
colorWithWhite:alpha:
initWithStyle:primaryColor:secondaryColor:shadowColor:
setLegibilitySettings:
setTodayViewController:
icon
requestCarUI
_launchNowPlaying
applicationBundleID
leafIdentifier
badgesAppIcon
notificationsEnabledForIdentifier:
isDisplayingIcon:
iconViewForIcon:location:
_onDashboardPage
setInteger:forKey:
setIconImage:forBundleIdentifier:inVehicle:
nowPlayingLaunchInfo
relayout
rootFolderController
currentIconListView
visibleIcons
folder
indexPathForIcon:
activeDataSource
_indexPathForFallbackIcon:
_iconViewForIndexpath:
_preferredFocusedIcon
loadViewIfNeeded
icons
displayedIconViewForIcon:
initWithItems:loops:restrictEnteringSequence:
iconAtIndexPath:
isScrolling
_invalidateBadgeForIdentifier:
_isACBackEnabled
acBackDisabledReasons
setAcBackDisabledReasons:
_setACBackDisabled:forRequester:
iconListViewIndexForPageIndex:
focusedItem
iconListViewAtIndex:
indexPathWithIconIndex:listIndex:
initWithDropOperation:
dataStoreMonitor
removeObserverForToken:
iconBadgeController:didUpdateForIdentifiers:
dataStoreMonitor:didUpdateApplication:forKey:
dataStoreMonitor:didInvalidateApplication:
controllerClassForFolder:
folderController:canChangeCurrentPageIndexToIndex:
folderController:draggedIconShouldDropFromListView:
folderControllerShouldClose:withPinchGesture:
folderControllerShouldBeginEditing:withHaptic:
folderControllerShouldEndEditing:
folderControllerWillBeginScrolling:
folderControllerDidEndScrolling:
folderController:iconListView:canHandleIconDropSession:
folderController:iconListView:iconDropSessionDidEnter:
folderController:iconListView:iconDropSessionDidUpdate:
folderController:iconListView:iconDropSession:didPauseAtLocation:
folderController:iconListView:iconDropSessionDidExit:
folderController:iconListView:performIconDrop:
folderController:iconListView:shouldAllowSpringLoadedInteractionForIconDropSession:onIconView:
folderController:iconListView:springLoadedInteractionForIconDragDidCompleteOnIconView:
folderController:iconListView:customSpringAnimationBehaviorForDroppingItem:
folderController:iconListView:iconViewForDroppingIconDragItem:proposedIconView:
folderController:iconListView:willUseIconView:forDroppingIconDragItem:
folderController:iconListView:previewForDroppingIconDragItem:proposedPreview:
folderController:iconListView:iconDragItem:willAnimateDropWithAnimator:
minimumHomeScreenScaleForFolderController:
folderControllerWillOpen:
folderControllerDidOpen:
folderControllerWillClose:
folderControllerDidClose:
folderController:didBeginEditingTitle:
folderController:didEndEditingTitle:
contentOverlayInsetsFromParentIfAvailableForFolderController:
folderControllerWantsToHideStatusBar:animated:
fakeStatusBarForFolderController:
folderController:willRemoveFakeStatusBar:
statusBarStyleRequestForFolderController:
statusBarEdgeInsetsForFolderController:
folderController:iconAnimatorForOperation:onViewController:animated:initialDelay:
folderController:willUseIconTransitionAnimator:forOperation:onViewController:animated:
folderController:accessibilityTintColorForScreenRect:
folderController:willCreateInnerFolderControllerWithConfiguration:
rootFolderControllerCanUseSeparateWindowForRotation:
rootFolderController:wantsToAdjustLeadingCustomContentForEdgeBounceForScrollOffset:
distanceToTopOfSpotlightIconsForRootFolderController:
maxExternalDockHeightForRootFolderController:
externalDockHeightForRootFolderController:
preferredExternalDockVerticalMarginForRootFolderController:
backgroundViewForDockForRootFolderController:
backgroundViewForEditingDoneButtonForRootFolderController:
rootFolderController:statusBarInsetsDidChange:
rootFolderController:willUseTransitionContext:toTransitionToState:
rootFolderController:willUsePropertyAnimator:toTransitionToState:
externalDockIconListViewForRootFolderController:
rootFolderController:didChangeSidebarVisibilityProgress:
rootFolderController:didChangeEffectiveSidebarVisibilityProgress:
rootFolderController:didOverscrollOnFirstPageByAmount:
rootFolderController:didEndOverscrollOnFirstPageWithVelocity:translation:
rootFolderController:didOverscrollOnLastPageByAmount:
rootFolderController:didEndOverscrollOnLastPageWithVelocity:translation:
rootFolderController:vendorNameForAppWithBundleIdentifiers:
rootFolderControllerViewWillAppear:
rootFolderControllerViewDidDisappear:
rootFolderController:viewDidTransitionToSize:
rootFolderController:willPresentPageManagementWithLayoutManager:animator:context:
rootFolderController:willDismissPageManagementUsingAnimator:context:
rootFolderController:didDismissPageManagementWithLayoutManager:context:
rootFolderControllerWillAnimateWidgetInsertionForStackConfigurationInteraction:
rootFolderController:draggedIconForStackConfigurationInteractionForIdentifier:
rootFolderController:handleInsertionForWidgetIcon:withReferenceIconView:fromPresenter:dismissViewControllerHandler:
rootFolderController:noteDragItemWasConsumedExternallyForDropSession:
rootFolderController:noteDidRemoveSuggestedWidgetIcon:
rootFolderController:dragPreviewForIconView:
windowForStackConfigurationIconDragPreviewsForRootFolderController:forWindowScene:
rootFolderController:promoteSuggestedWidget:withinStack:
rootFolderController:willPresentWidgetEditingViewController:
rootFolderController:didPresentWidgetEditingViewController:
rootFolderController:willDismissWidgetEditingViewController:
rootFolderController:didDismissWidgetEditingViewController:
rootFolderController:prepareAddSheetViewController:
iconLocationForListsWithNonDefaultSizedIconsForRootFolderController:
appIconImageCacheForRootFolderController:
rootFolderControllerDidAcceptWidgetIntroduction:
rootFolderControllerDidUndoWidgetIntroduction:
rootFolderControllerDidEditWidgetIntroduction:
rootFolderControllerDidSetPrototypeSettingEditAsUndo:
iconCanDisplayBadge:
removePageChangeObserver:
_linearFocusMovementSequences
setLibrary:
setDataStoreMonitor:
lastFocusedIndex
setLastFocusedIndex:
setPageObservers:
setIconBadgeController:
_installToken
_uninstallToken
_replaceToken
_addPlaceholderToken
_cancelPlaceholderToken
_todayViewController
_hairlineView
_library
_dataStoreMonitor
_lastFocusedIndex
_pageObservers
_acBackDisabledReasons
T@"FBSApplicationLibrary",&,N,V_library
T@"FBSApplicationDataStoreMonitor",&,N,V_dataStoreMonitor
T@"NSIndexPath",&,N,V_lastFocusedIndex
T@"DBTodayViewController",&,N,V_todayViewController
T@"CARObserverHashTable",&,N,V_pageObservers
TQ,N,V_currentPageIndex
T@"NSMutableSet",&,N,V_acBackDisabledReasons
T@"DBIconBadgeController",&,N,V_iconBadgeController
T@"UIView",R,N,V_hairlineView
_stopNetworkPathMonitorNow
networkPathMonitorActive
_startNetworkPathMonitorNow
workQueue
setPathMonitor:
pathMonitor
_networkPathUpdated:
setNetworkPathMonitorActive:
setNetworkPath:
currentPath
isNetworkReachable
setNetworkReachable:
setCurrentPath:
networkPath
_networkReachable
_networkPathMonitorActive
_networkPath
_pathMonitor
_currentPath
_workQueue
networkReachable
TB,N,GisNetworkReachable,V_networkReachable
Tq,N,V_networkPath
T@"NSObject<OS_nw_path_monitor>",&,N,V_pathMonitor
T@"NSObject<OS_nw_path>",&,N,V_currentPath
T@"NSMutableSet",R,N,V_activeAssertions
TB,N,V_networkPathMonitorActive
T@"NSObject<OS_dispatch_queue>",R,N,V_workQueue
initWithMachServiceName:
setLayerMetadataServiceListener:
service:didReceiveLayerMetadata:
layerMetadataServiceListener
valueForEntitlement:
sendLayerProperties:
processIdentifier
_layerMetadataServiceListener
T@"NSXPCListener",&,N,V_layerMetadataServiceListener
T@"<DBLayerMetadataServiceDelegate>",W,N,V_delegate
_isMapsClusterURL:
_correctedComponentsForURL:
path
pathComponents
scheme
queryItems
lowercaseString
_clusterSettingForURLValue:
_layoutSettingForURLValue:
componentsWithURL:resolvingAgainstBaseURL:
stringByAppendingString:
replaceOccurrencesOfString:withString:options:range:
_initWithActiveNavigationIdentifiersObserver:
activeNavigationIdentifiersObserver
activeNavigationIdentifiers
infoProvider
bundleIdentifierSupportsInstrumentCluster:
appHistoryAppDockProvider
mostRecentlyActivatedClusterApp
bundleIdentifierSupportsDashboard:
mostRecentlyActivatedDashboardApp
setMostRecentlyActivatedDashboardApp:
setMostRecentlyActivatedClusterApp:
_updateMostRecentDockApp
_updateMostRecentClusterApp
bundleIdentifierIsCertificationApp:
activeNavigationIdentifiersObserver:updatedActiveNavigationIdentifiers:
setInfoProvider:
setActiveNavigationIdentifiersObserver:
_infoProvider
_appHistoryAppDockProvider
_activeNavigationIdentifiersObserver
_mostRecentlyActivatedDashboardApp
_mostRecentlyActivatedClusterApp
T@"CARActiveNavigationIdentifiersObserver",&,N,V_activeNavigationIdentifiersObserver
T@"NSString",C,N,V_mostRecentlyActivatedDashboardApp
T@"NSString",C,N,V_mostRecentlyActivatedClusterApp
T@"<DBNavigationAppInfoProviding>",W,N,V_infoProvider
T@"<DBAppHistoryAppDockProviding>",W,N,V_appHistoryAppDockProvider
serviceTypeByName
serviceNameForType:
_showAlertIfNecessary
initWithServiceName:viewControllerClassName:
setXpcEndpoint:
newHandleWithDefinition:configurationContext:
dismissAlertAnimated:
connect
alertHandle
remoteAlertHandleDidActivate:
remoteAlertHandleDidDeactivate:
remoteAlertHandle:didInvalidateWithError:
setAlertHandle:
_alertHandle
T@"SBSRemoteAlertHandle",&,N,V_alertHandle
activateManualDomain:
homeButtonSource
_updateConstraintsForStatusBar
_updateAdditionalSafeAreaInsets
screenResizeButton
activeConstraints
homeButton
keylineView
setActiveConstraints:
colorEffectSaturate:
effectWithBlurRadius:
setLightMaterial:
lightMaterial
setBackgroundEffects:
systemBlackColor
effectCompositingColor:withMode:alpha:
setDarkMaterial:
darkMaterial
setLightSiriMaterial:
lightSiriMaterial
setDarkSiriMaterial:
darkSiriMaterial
setKeylineView:
_updateMaterialForStyle:
setHomeButton:
homeButtonDown:
homeButtonUp:
homeButtonCancel:
setHomeButtonSource:
_handleBackPressGesture:
setBackPressGestureRecognizer:
contrastOverride
serviceDomainActivationToken
statusBarStyleService
setLastHomeButtonDownTime:
homeButtonAssertion
setHomeButtonAssertion:
homeButtonTimer
setHomeButtonTimer:
longPressInterval
_handleLongPressActivation
lastHomeButtonDownTime
didRecognizeButtonSinglePressUp
siriPresentationOverride
_backgroundColorForStyle:
interfaceStyle
contrast
setContrastOverride:
isSiriPresentation
setSiriPresentationOverride:
_updateScreenResizeButton
userPressedTransitionControl
requestAdjacentViewAreaForScreenID:
_resizeButtonPressed:
setScreenResizeButton:
resizeButtonConstraints
setResizeButtonConstraints:
statusBarStyleServiceUpdatedOverride:animationSettings:
backPressGestureRecognizer
homeButtonConstraints
setHomeButtonConstraints:
setStatusBarStyleService:
setServiceDomainActivationToken:
_siriPresentationOverride
_homeButton
_homeButtonTimer
_lastHomeButtonDownTime
_homeButtonSource
_homeButtonAssertion
_screenResizeButton
_keylineView
_darkMaterial
_lightMaterial
_darkSiriMaterial
_lightSiriMaterial
_backPressGestureRecognizer
_homeButtonConstraints
_resizeButtonConstraints
_activeConstraints
_statusBarStyleService
_serviceDomainActivationToken
_contrastOverride
T@"DBStatusBarHomeButton",&,N,V_homeButton
T@"NSTimer",&,N,V_homeButtonTimer
Td,N,V_lastHomeButtonDownTime
T@"SiriLongPressButtonSource",&,N,V_homeButtonSource
T@"SiriActivityAssertion",&,N,V_homeButtonAssertion
T@"DBStatusBarScreenResizeButton",&,N,V_screenResizeButton
T@"UIView",&,N,V_keylineView
T@"DBStatusBarViewController",&,N,V_statusBarViewController
T@"UIVisualEffectView",&,N,V_darkMaterial
T@"UIVisualEffectView",&,N,V_lightMaterial
T@"UIVisualEffectView",&,N,V_darkSiriMaterial
T@"UIVisualEffectView",&,N,V_lightSiriMaterial
T@"UITapGestureRecognizer",&,N,V_backPressGestureRecognizer
T@"NSArray",&,N,V_homeButtonConstraints
T@"NSArray",&,N,V_resizeButtonConstraints
T@"NSArray",&,N,V_activeConstraints
T@"CRSUIStatusBarStyleService",&,N,V_statusBarStyleService
T@"<BSInvalidatable>",&,N,V_serviceDomainActivationToken
Tq,N,V_contrastOverride
TB,N,V_siriPresentationOverride
keybagMonitor
siriMonitor
siriEnabled
thermalMonitor
isThermalBlocked
buddyMonitor
disclosureMonitor
setLockOutMode:
lockOutLayoutElementAssertion
setLockOutLayoutElementAssertion:
setLockOutWindow:
setLockOutViewController:
updateLockOutModeAnimated:
markSafe
turnFeaturesOff
disclosureMonitorDidChangeActive:
siriMonitorDidChangeEnabled:
thermalMonitorLevelDidChange:
setBuddyMonitor:
setDisclosureMonitor:
setKeybagMonitor:
setSiriMonitor:
setThermalMonitor:
_lockOutWindow
_lockOutViewController
_buddyMonitor
_disclosureMonitor
_keybagMonitor
_siriMonitor
_thermalMonitor
_lockOutLayoutElementAssertion
T@"DBLockOutWindow",&,N,V_lockOutWindow
T@"DBLockOutViewController",&,N,V_lockOutViewController
T@"DBBuddyMonitor",&,N,V_buddyMonitor
T@"DBDisclosureMonitor",&,N,V_disclosureMonitor
T@"DBKeybagMonitor",&,N,V_keybagMonitor
T@"DBSiriMonitor",&,N,V_siriMonitor
T@"DBThermalMonitor",&,N,V_thermalMonitor
Tq,N,V_lockOutMode
T@"<DBLockoutControllerDelegate>",R,W,N,V_delegate
T@"<BSInvalidatable>",&,N,V_lockOutLayoutElementAssertion
lockedOut
TB,R,N,GisLockedOut
_updateWithDashboardStateProvider:
sources
stoppingTimer
setStoppingTimer:
_start
_stop
setPredictionsFresh:
setLastRefreshRequest:
refreshDisabled
lastRefresh
lastRefreshRequest
registeredSources
setSources:
hasEnd
hasStart
distantFuture
_useRangeEnd:refreshDate:
_useRangeStart:now:refreshDate:
_sourceForPrediction:
setNextRefresh:
sortUsingComparator:
refreshTimer
setRefreshTimer:
setUpdatesPending:
_postUpdatedCurrentPredictionsIfNeeded
updatesPending
predictionsFresh
_updatePredictionsFresh
_resetCurrentPredictions
stopIfNeeded
T@"DBHomeManager",R,N
sourceDidRefresh:predictionsUpdated:
setHomeManager:
_predictionsFresh
_updatesPending
_currentPredictions
_nextRefresh
_sources
_lastRefreshRequest
_refreshTimer
_stoppingTimer
T@"DBHomeManager",&,N,V_homeManager
T@"NSArray",&,N,V_sources
T@"NSDate",&,N,V_lastRefreshRequest
TB,N,V_predictionsFresh
TB,N,V_updatesPending
T@"NSDate",&,N,V_nextRefresh
T@"NSTimer",&,N,V_refreshTimer
T@"NSTimer",&,N,V_stoppingTimer
T@"NSArray",R,N,V_currentPredictions
availableApplicationContexts
applicationCategoryForURL:
qaModeLockout
setMarkedSafe:
setConfirmedSafe:
_observersDisclosureMonitorDidChange
markedSafe
_markedSafe
T@"NSHashTable",&,N,V_observers
TB,N,V_markedSafe
iconAccessoryVisualConfiguration
setSize:
setOffset:
setNumberOfPortraitColumns:
setNumberOfPortraitRows:
setIconImageInfo:
initWithLayoutConfiguration:
setLayout:
_layout
T@"SBIconListFlowLayout",&,N,V_layout
layoutProvider
iconPageIndicatorImageSetCache
setLayoutProvider:
_layoutProvider
T@"_DBIconListLayoutProvider",&,N,V_layoutProvider
enumerateAllIconsUsingBlock:
hiddenBundleIdentifiers
iconModelMetadata
carKitRepresentationFromRootArchive:iconModel:
rootArchiveFromCarKitRepresentation:iconModel:
setTimingFunctions:
T@"DBIconView",R,N,V_iconView
colorWithCGColor:
T@"UIColor",R,N
_badge_queue_updateNotificationSources
lock_badgesAllowedByIdentifier
badgeSettingsUpdateQueue
allNotificationSources
sourceSettings
notificationSettings
badgeSetting
sourceIdentifier
notificationsSettingsCenter
setNotificationsSettingsCenter:
setLock_badgesAllowedByIdentifier:
setBadgeSettingsUpdateQueue:
_notificationsSettingsCenter
_lock_badgesAllowedByIdentifier
_badgeSettingsUpdateQueue
T@"UNNotificationSettingsCenter",&,N,V_notificationsSettingsCenter
T@"NSDictionary",&,N,V_lock_badgesAllowedByIdentifier
T@"NSObject<OS_dispatch_queue>",&,N,V_badgeSettingsUpdateQueue
registerSource:
disabled
setCurrentPredictions:
setLastRefresh:
setDisabled:
defaultsDisabled
T@"NSArray",R
setWorkQueue:
_disabled
_sourceName
_lastRefresh
TB,N,V_disabled
T@"NSObject<OS_dispatch_queue>",&,N,V_workQueue
T@"NSDate",&,N,V_lastRefresh
T@"NSDictionary",&,N,V_currentPredictions
T@"NSString",R,N,V_sourceName
T@"<DBSmartWidgetSourceDelegate>",R,W,N,V_delegate
doorStateCharacteristic
targetDoorStateCharacteristic
obstructionDetectedCharacteristic
doorStateValue
_doorStateForCharacteristic:
setDoorStateValue:
obstructionDetected
T@"DBHomeKitDoorStateCharacteristic",R,N
T@"DBHomeKitBoolCharacteristic",R,N
_init
TQ,N
prefersAnimation
_changeType
_presentationPreference
TQ,N,V_presentationPreference
TQ,N,V_changeType
setApplication:
T@"DBApplicationInfo",&,N,V_application
T@"NSDictionary",&,N,V_activationSettings
_validDate:
validRange
setStart:
_end
T@"NSDate",&,N,V_start
T@"NSDate",&,N,V_end
_contentViewClass
listViewClass
hasDock
_safeAreaInsets
setDisableFiveRowKeyboards:
setProxiedApplicationLinkedOnOrAfterYukon:
sceneSpecification
_effectiveSceneAppInfo
actions
setWithCapacity:
setForTesting:
setUserLaunchEventTime:
setSceneSpecification:
_settings
_transitionContext
_sceneSpecification
T@"UIApplicationStarkSceneSpecification",&,N,V_sceneSpecification
T@"UIMutableCarPlayApplicationSceneSettings",R,N,V_settings
T@"UIApplicationSceneTransitionContext",R,N,V_transitionContext
initForCarPlayShell
addSessionObserver:
setDomainIdentifier:
setInstanceIdentifier:
publisherWithConfiguration:
activated
connectedIdentities
configurationForIdentity:
displayMonitor:didConnectIdentity:withConfiguration:
_setPrimaryDisplayCornerMaskImageIfNecessary
setActivated:
displayToEnvironmentMap
isCarInstrumentsDisplay
_setNeedsNavigationStateProvider:forDisplayIdentity:
_setNeedsTemplateProcessMonitor:forDisplayIdentity:
pendingDisplays
_handleConnectedDisplaysIfPossible
displayToRootSceneMap
_setNeedsLayerMetadataService:forDisplayIdentity:
displayToPresentationBinderMap
initWithDisplayConfiguration:
setVisibilityIdentifier:
defaultConfiguration
serviceName
domainsContainingServiceIdentifier:
visibilityEnvironment
targetWithPid:environmentIdentifier:
setTarget:
setDomain:
injectorWithConfigurator:
displayToEndpointInjector
initWithIdentifier:priority:appearanceStyle:rootWindow:
addScene:
removeScene:
scenes
updateGeoSupported
sessionStatus
currentSession
supportsLayerTracking
_sceneForFBSScene:
dashboardDisplayLayoutPublisher
transitionAssertionWithReason:
layerMetadataServiceRequesters
setLayerMetadataServiceRequesters:
_updateLayerMetadataService
navigationStateProviderRequesters
setNavigationStateProviderRequesters:
_updateNavigationStateProvider
supportsDashboardNavigation
processMonitorRequesters
setProcessMonitorRequesters:
_updateTemplateProcessMonitor
startedConnectionAttemptOnTransport:
cancelledConnectionAttemptOnTransport:
sessionDidConnect:
sessionDidDisconnect:
session:didUpdateConfiguration:
displayMonitor:didUpdateIdentity:withConfiguration:
displayMonitor:willDisconnectIdentity:
initWithAppPolicyEvaluator:
environmentForDisplayIdentity:
enumerateEnvironmentsUsingBlock:
manager
setManager:
setDisplayToEnvironmentMap:
setDisplayToPresentationBinderMap:
setDisplayToRootSceneMap:
setDisplayToEndpointInjector:
setDashboardDisplayLayoutPublisher:
setAppPolicyEvaluator:
setSessionStatus:
setPendingDisplays:
setNavigationStateProvider:
_activated
_manager
_displayToEnvironmentMap
_displayToPresentationBinderMap
_displayToRootSceneMap
_displayToEndpointInjector
_dashboardDisplayLayoutPublisher
_sessionStatus
_pendingDisplays
_navigationStateProviderRequesters
_processMonitorRequesters
_layerMetadataServiceRequesters
TB,N,V_activated
T@"FBSceneManager",&,N,V_manager
T@"NSMutableDictionary",&,N,V_displayToEnvironmentMap
T@"NSMutableDictionary",&,N,V_displayToPresentationBinderMap
T@"NSMutableDictionary",&,N,V_displayToRootSceneMap
T@"NSMutableDictionary",&,N,V_displayToEndpointInjector
T@"FBSDisplayLayoutPublisher",&,N,V_dashboardDisplayLayoutPublisher
T@"CRCarPlayAppPolicyEvaluator",&,N,V_appPolicyEvaluator
T@"CARSessionStatus",&,N,V_sessionStatus
T@"NSMutableSet",&,N,V_pendingDisplays
T@"NSMutableSet",&,N,V_navigationStateProviderRequesters
T@"DBNavigationStateProvider",&,N,V_navigationStateProvider
T@"NSMutableSet",&,N,V_processMonitorRequesters
T@"DBProcessMonitor",&,N,V_processMonitor
T@"NSMutableSet",&,N,V_layerMetadataServiceRequesters
_updateColor
sensorIndicatorType
colorWithDynamicProvider:
systemOrangeColor
_sensorIndicatorType
Tq,N,V_sensorIndicatorType
handleAssistantLanguageChanged:
handleAssistantPreferencesChanged:
_updateSiriEnabled
sharedPreferences
assistantIsEnabled
currentLanguageCode
assistantIsSupportedForLanguageCode:error:
setSiriEnabled:
_siriEnabled
TB,N,V_siriEnabled
contactStore
settingsWithContactStore:threeDTouchEnabled:
setAppIconView:
avatarController
appIconView
unifiedContactWithIdentifier:keysToFetch:error:
setContacts:
setAppBundleIdentifier:
appBundleIdentifier
avatarControllerSettings
setAvatarControllerSettings:
setAvatarController:
_avatarControllerSettings
_appBundleIdentifier
_avatarController
_appIconView
T@"CNAvatarViewControllerSettings",&,N,V_avatarControllerSettings
T@"NSString",C,N,V_appBundleIdentifier
T@"CNAvatarViewController",&,N,V_avatarController
T@"UIImageView",&,N,V_appIconView
T@"UIImageView",&,N,V_focusRingView
isEqualToDictionary:
isEqualToSet:
_updateCenterXConstraintConstant
iconFocusRingImageView
iconFocusRingUnreadImageView
iconFocusRingUnreadImageViewCenterConstraint
imageWithHorizontallyFlippedOrientation
badgeView
showBadge
_updateFocusRings
setShowBadge:animated:
setBadgeHidden:animated:
_updateImageForBundleIdentifier:crossfade:
badgeNumberOrString
iconImageView
setIcon:
setShowBadge:
iconImageDidUpdate:
iconAccessoriesDidUpdate:
iconLaunchEnabledDidChange:
iconGridSizeClassDidChange:
iconArchivableStateDidChange:
leafIcon:didAddIconDataSource:
leafIcon:didRemoveIconDataSource:
leafIcon:didChangeActiveDataSource:
setIconImageView:
setIconFocusRingImageView:
setIconFocusRingUnreadImageView:
setBadgeView:
setIconFocusRingUnreadImageViewCenterConstraint:
_showBadge
_iconImageView
_iconFocusRingImageView
_iconFocusRingUnreadImageView
_icon
_badgeView
_iconFocusRingUnreadImageViewCenterConstraint
T@"UIImageView",&,N,V_iconImageView
T@"UIImageView",&,N,V_iconFocusRingImageView
T@"UIImageView",&,N,V_iconFocusRingUnreadImageView
T@"DBLeafIcon",&,N,V_icon
T@"UIImageView",&,N,V_badgeView
TB,N,V_showBadge
T@"NSLayoutConstraint",&,N,V_iconFocusRingUnreadImageViewCenterConstraint
TB,N,GisActive,V_active
T@"NSString",C,N,V_bundleIdentifier
carPlayAnnounceEnablementType
setAnnounceEnablementType:
_isAnnounceMuted
setAnnounceMuted:
setMaxConcurrentOperationCount:
setQualityOfService:
configurationForDefaultMainDisplayMonitor
setNeedsUserInteractivePriority:
_DBLayoutMonitor:didUpdateDisplayLayout:withContext:
setTransitionHandler:
_screenBecameAvailable:
_screenBecameUnavailable:
_dashboardSmartWidgetUpdated:
_dashboardNowPlayingWidgetTapped:
_applicationDidLaunch:
_appStartedNavigation:
_iosHasMainAudio:
_carHasMainAudio:
_mediaserverdConnectionDied
analyticsQueue
_queue_sessionStarted
addOperationWithBlock:
_queue_powerStateDidChange
mediaserverdDiedDate
thermalTrapDate
wifiLinkDownDate
wifiLinkDownReason
DBSecondsToDate:
wifidDiedDate
sessionStartedEventSent
vehicleAnalyticsRepresentation
dndStatus
shouldActivateWithCarPlay
fetchCarCapabilities
disabledFeature
nowPlayingAlbumArtMode
numberWithUnsignedLong:
initWithScreenInfo:analyticsPrefix:sessionStartViewArea:
analyticsScreenInfo
startCountingTimeForViewArea:
analytics_sessionStartedDictionaryRepresentation
_queue_fetchLocationBits
stringFromInterruptDictionary:
sessionStartDate
sendEvent:withParameters:
biome_CarPlayStarted:wireless:
setSessionStartedEventSent:
isAccumulatingTimeForAnyKey
viewAreaChangeUsingTransitionControlCount
setViewAreaChangeUsingTransitionControlCount:
carPlayStream
initWithReason:isStart:
source
sendEvent:
screenOwnershipDate
wasVisibleBeforeCarScreen
_analyticsInfoPassingTest:
setWasVisibleBeforeCarScreen:
startCountingVisibleTime
wasVisibleInDashboardBeforeCarScreen
setWasVisibleInDashboardBeforeCarScreen:
startCountingDashboardVisibleTime
setScreenOwnershipDate:
lastActiveBundleIdentifier
_queue_didChangeToBundleIdentifier:
visibleAppsAnalyticsInfo
stopCountingVisibleTime
visibleDashboardAppsAnalyticsInfo
stopCountingDashboardVisibleTime
screenOwnershipDuration
setScreenOwnershipDuration:
audioOwnershipDate
setAudioOwnershipDate:
audioOwnershipDuration
setAudioOwnershipDuration:
setSessionStartDate:
setStartBundleIdentifier:
carOwnsMainAudio
analytics_dictionaryRepresentationWithVehicle:
setVehicleAnalyticsRepresentation:
setSessionRequestUIMapsCount:
setSessionRequestUIMusicCount:
setSessionRequestUIPhoneCount:
setSessionRequestUIMessagesCount:
setSessionRequestUIBundleIdentifierCount:
setSessionShowUIMapCount:
setSessionShowUITurnCardCount:
analyticsAppInfo
sessionAppLaunches
sessionDeviceAppLaunches
sessionNavigationOwners
setSessionUnlockCount:
setSiriHostedBundleIdentifier:
setAccessorySupportsLocation:
setAccessorySupportsLocationGPGGA:
setAccessorySupportsLocationGPRMC:
setAccessorySupportsLocationPASCDSpeed:
setAccessorySupportsLocationDeadReckoning:
setAccessorySupportsLocationChinaShifted:
stopCountingTimeForAllKeys
analyticsChargeInfo
appInfo
accumulatedTimeForKey:
numberOfSiriPresentations
announceEnablementType
announceMuted
sessionRequestUIMapsCount
sessionRequestUIMusicCount
sessionRequestUIMessagesCount
sessionRequestUIPhoneCount
sessionRequestUIBundleIdentifierCount
sessionShowUIMapCount
sessionShowUITurnCardCount
sessionUnlockCount
accessorySupportsLocation
accessorySupportsLocationPASCDSpeed
accessorySupportsLocationGPGGA
accessorySupportsLocationGPRMC
accessorySupportsLocationDeadReckoning
accessorySupportsLocationChinaShifted
didChargeDuringSession
isWireless
voltage
wattage
adapterDescription
PMUConfiguration
dictionaryFromInterrupt
stringFromSessionSummary
mapsAppearanceStyle
descriptionForUserInterfaceStyle:
analytics_sessionEndedDictionaryRepresentation
setAnalyticsChargeInfo:
_queue_sendAnnounceMessagesEventWithEnablementType:disabled:
setMapsAppearanceStyle:
setLastActiveBundleIdentifier:
stringByAppendingFormat:
lastDashboardNavigationBundleIdentifier
dashboardNavigationDidChangeToBundleIdentifier:
lastDashboardAudioWidgetBundleIdentifier
appAnalyticsInfoForApp:
initWithAppInfo:policyEvaluator:
appAnalyticsInfoForBundleIdentifier:
initWithBundleIdentifier:appDeclaration:policyEvaluator:
nowPlayingAppAnalyticsInfo
stopCountingTimeForKey:
startCountingTimeForKey:
indexOfLargestViewArea
viewAreaChangeCount
setViewAreaChangeCount:
_queue_mediaserverdConnectionDied
setMediaserverdDiedDate:
setWifidDiedDate:
setThermalTrapDate:
_queue_sessionEnded
displayLayoutMonitor
_queue_stateProviderIsReadyForAnalytics:
startBundleIdentifier
setLastHomeScreenPageType:
lastHomeScreenPageType
_queue_screenViewAreaChanged:screenInfo:configuration:duration:
level
setCurrentThermalLevel:
_queue_thermalTrapOccurred
_queue_nowPlayingUpdatedToApp:isPlaying:
elements
isUIApplicationElement
layoutRole
_queue_deviceDidChangeToBundleIdentifier:
setLastDashboardNavigationBundleIdentifier:
setDashboardWidgetType:
dashboardWidgetType
setLastDashboardAudioWidgetBundleIdentifier:
setWasVisibleBeforeSiri:
siriHostedBundleIdentifier
setNumberOfSiriPresentations:
wasVisibleBeforeSiri
shouldSendAnalyticsEvents
isAccumulatingTimeForKey:
setDidChargeDuringSession:
setAdapterDescription:
setWireless:
intValue
setVoltage:
setPMUConfiguration:
setWattage:
_queue_wifidConnectionDied
setDndStatus:
setAnalyticsQueue:
setConfiguration:
setAnalyticsAppInfo:
setAnalyticsScreenInfo:
setSessionAppLaunches:
setDisplayLayoutMonitor:
setSessionDeviceAppLaunches:
setSessionNavigationOwners:
setWifiLinkDownDate:
setWifiLinkDownReason:
currentThermalLevel
_powerSource
_powerNotificationPort
_powerSourceNotification
_sessionStartedEventSent
_accessorySupportsLocation
_accessorySupportsLocationPASCDSpeed
_accessorySupportsLocationGPGGA
_accessorySupportsLocationGPRMC
_accessorySupportsLocationDeadReckoning
_accessorySupportsLocationChinaShifted
_announceMuted
_dndStatus
_analyticsQueue
_configuration
_lastHomeScreenPageType
_lastActiveBundleIdentifier
_vehicleAnalyticsRepresentation
_sessionUnlockCount
_analyticsAppInfo
_analyticsScreenInfo
_analyticsChargeInfo
_screenOwnershipDuration
_screenOwnershipDate
_audioOwnershipDuration
_audioOwnershipDate
_sessionStartDate
_sessionAppLaunches
_displayLayoutMonitor
_sessionDeviceAppLaunches
_sessionNavigationOwners
_lastDashboardNavigationBundleIdentifier
_lastDashboardAudioWidgetBundleIdentifier
_sessionRequestUIMapsCount
_sessionRequestUIMessagesCount
_sessionRequestUIPhoneCount
_sessionRequestUIMusicCount
_sessionRequestUIBundleIdentifierCount
_sessionShowUIMapCount
_sessionShowUITurnCardCount
_startBundleIdentifier
_siriHostedBundleIdentifier
_mediaserverdDiedDate
_wifidDiedDate
_thermalTrapDate
_wifiLinkDownDate
_wifiLinkDownReason
_currentThermalLevel
_announceEnablementType
_mapsAppearanceStyle
T@"CARAutomaticDNDStatus",&,N,V_dndStatus
T@"NSOperationQueue",&,N,V_analyticsQueue
T@"DBEnvironmentConfiguration",W,N,V_configuration
TB,N,V_sessionStartedEventSent
TQ,N,V_lastHomeScreenPageType
T@"NSString",C,N,V_lastActiveBundleIdentifier
T@"NSDictionary",C,N,V_vehicleAnalyticsRepresentation
TQ,N,V_sessionUnlockCount
T@"NSMutableArray",&,N,V_analyticsAppInfo
T@"NSMutableArray",&,N,V_analyticsScreenInfo
T@"_DBAnalyticsChargeInfo",&,N,V_analyticsChargeInfo
Td,N,V_screenOwnershipDuration
T@"NSDate",&,N,V_screenOwnershipDate
Td,N,V_audioOwnershipDuration
T@"NSDate",&,N,V_audioOwnershipDate
T@"NSDate",&,N,V_sessionStartDate
T@"NSMutableDictionary",&,N,V_sessionAppLaunches
T@"FBSDisplayLayoutMonitor",&,N,V_displayLayoutMonitor
T@"NSMutableDictionary",&,N,V_sessionDeviceAppLaunches
T@"NSMutableDictionary",&,N,V_sessionNavigationOwners
T@"NSString",C,N,V_lastDashboardNavigationBundleIdentifier
T@"NSString",C,N,V_lastDashboardAudioWidgetBundleIdentifier
TQ,N,V_sessionRequestUIMapsCount
TQ,N,V_sessionRequestUIMessagesCount
TQ,N,V_sessionRequestUIPhoneCount
TQ,N,V_sessionRequestUIMusicCount
TQ,N,V_sessionRequestUIBundleIdentifierCount
TQ,N,V_sessionShowUIMapCount
TQ,N,V_sessionShowUITurnCardCount
T@"NSString",C,N,V_startBundleIdentifier
T@"NSString",C,N,V_siriHostedBundleIdentifier
TB,N,V_accessorySupportsLocation
TB,N,V_accessorySupportsLocationPASCDSpeed
TB,N,V_accessorySupportsLocationGPGGA
TB,N,V_accessorySupportsLocationGPRMC
TB,N,V_accessorySupportsLocationDeadReckoning
TB,N,V_accessorySupportsLocationChinaShifted
T@"NSDate",&,N,V_mediaserverdDiedDate
T@"NSDate",&,N,V_wifidDiedDate
T@"NSDate",&,N,V_thermalTrapDate
T@"NSDate",&,N,V_wifiLinkDownDate
T@"NSString",&,N,V_wifiLinkDownReason
Tq,N,V_currentThermalLevel
Tq,N,V_announceEnablementType
TB,N,V_announceMuted
Tq,N,V_mapsAppearanceStyle
timeIntervalSinceDate:
PPID
modelName
manufacturerName
vehicleName
vehicleModelName
vehicleManufacturer
vehicleFirmwareVersion
vehicleHardwareVersion
supportsWirelessCarPlay
supportsUSBCarPlay
descriptionForTransportType
systemNightMode
descriptionForLimitableUserInterfaces
descriptionForVoiceTriggerMode
vehicleSupportsDestinationSharing
sourceVersion
descriptionForPrimaryInteractionModel
descriptionForAvailableInteractionModels
supportsHighFidelityTouch
declarationForAppProxy:
_wasVisibleBeforeCarScreen
_wasVisibleInDashboardBeforeCarScreen
_wasVisibleBeforeSiri
_appInfo
_numberOfSiriPresentations
_dashboardWidgetType
T@"DBApplicationInfo",R,N,V_appInfo
TB,N,V_wasVisibleBeforeCarScreen
TB,N,V_wasVisibleInDashboardBeforeCarScreen
TB,N,V_wasVisibleBeforeSiri
TQ,N,V_numberOfSiriPresentations
TQ,N,V_dashboardWidgetType
displaysTransitionControl
analyticsPrefix
sessionStartViewArea
indexOfObject:
_identifierForViewArea:
hasTransitionControlsWithinViewAreas
setHasTransitionControlsWithinViewAreas:
_hasTransitionControlsWithinViewAreas
_analyticsPrefix
_sessionStartViewArea
_viewAreaChangeCount
_viewAreaChangeUsingTransitionControlCount
_indexOfLargestViewArea
T@"CARScreenInfo",R,N,V_screenInfo
T@"NSString",R,C,N,V_analyticsPrefix
T@"CARScreenViewArea",R,N,V_sessionStartViewArea
TQ,N,V_viewAreaChangeCount
TQ,N,V_viewAreaChangeUsingTransitionControlCount
TB,N,V_hasTransitionControlsWithinViewAreas
TQ,R,N,V_indexOfLargestViewArea
dateStorage
accumulatedTimeStorage
setDateStorage:
setAccumulatedTimeStorage:
_dateStorage
_accumulatedTimeStorage
T@"NSMutableDictionary",&,N,V_dateStorage
T@"NSMutableDictionary",&,N,V_accumulatedTimeStorage
_wireless
_didChargeDuringSession
_adapterDescription
_PMUConfiguration
_voltage
_wattage
wireless
TB,N,GisWireless,V_wireless
TB,N,V_didChargeDuringSession
T@"NSString",C,N,V_current
T@"NSString",C,N,V_adapterDescription
T@"NSString",C,N,V_PMUConfiguration
T@"NSString",C,N,V_voltage
T@"NSString",C,N,V_wattage
requiredInfoKeys
unionSet:
requiredEntitlementKeys
_loadFromProxy:
objectsForInfoDictionaryKeys:
entitlementValuesForKeys:
bundleURL
declarationForBundleIdentifier:info:entitlements:bundlePath:
builtOnOrAfterSDKVersion:
bundleType
appState
isInstalled
isPlaceholder
correspondingApplicationRecord
supportsCarPlayDashboardScene
supportsCarPlayInstrumentClusterScene
isCarInternal
isCarPrototype
isInternal
requiresFeatureFlags
_carDisplayName
_linkedOnOrAfterYukon
_presentsUnderStatusBar
_presentsFullScreen
_supportsDashboardNavigation
_supportsInstrumentClusterNavigation
_requiresBackgroundURLDelivery
_carInternal
_carPrototype
_internal
_firstParty
_installed
_valid
_certificationApp
_carPlayDeclaration
_requiresFeatureFlags
T@"CRCarPlayAppDeclaration",R,N,V_carPlayDeclaration
linkedOnOrAfterYukon
TB,R,N,GisLinkedOnOrAfterYukon,V_linkedOnOrAfterYukon
TB,R,N,V_presentsUnderStatusBar
TB,R,N,V_presentsFullScreen
TB,R,N,V_supportsDashboardNavigation
TB,R,N,V_supportsInstrumentClusterNavigation
TB,R,N,V_requiresBackgroundURLDelivery
TB,R,N,GisHidden,V_hidden
carInternal
TB,R,N,GisCarInternal,V_carInternal
carPrototype
TB,R,N,GisCarPrototype,V_carPrototype
internal
TB,R,N,GisInternal,V_internal
firstParty
TB,R,N,GisFirstParty,V_firstParty
TB,R,N,GisPlaceholder,V_placeholder
installed
TB,R,N,GisInstalled,V_installed
valid
TB,R,N,GisValid,V_valid
certificationApp
TB,R,N,GisCertificationApp,V_certificationApp
T@"NSArray",R,N,V_requiresFeatureFlags
_iconKeyForFormat:
iconWithFormat:
initWithStore:
metadata_hiddenBundleIdentifiers
current_isSet
current_screenBounds
metadata_screenBounds
screenBounds
iconImageSize
current_statusBarEdge
current_showsOEMIcon
metadata_showsOEMIcon
current_OEMIconLabel
metadata_OEMIconLabel
setCurrent_isSet:
setCurrent_screenBounds:
setCurrent_showsOEMIcon:
setCurrent_OEMIconLabel:
setInteractionAffordances:
setCurrent_statusBarEdge:
archiveRootFolderInModel:metadata:
exportStateForCarKit
initWithIcons:
initWithPages:hiddenIcons:
setDisplaysOEMIcon:
setOemIconLabel:
rowCount
setRows:
columnCount
setColumns:
leafIcons
valueForKeyPath:
localizedCaseInsensitiveCompare:
sortedArrayUsingSelector:
setMetadata_hiddenBundleIdentifiers:
deleteIconState
clearDesiredIconState
setMetadata_showsOEMIcon:
setMetadata_OEMIconLabel:
_importStateWithoutLayout:
loadAllIcons
carApplicationDataSource
addIcon:
isRestricted
_showInternalApps
_showPrototypeApps
didUnarchiveMetadata:
store
saveCurrentIconState:error:
supportsDock
setCarApplicationDataSource:
setMetadata_screenBounds:
_metadata_showsOEMIcon
_current_isSet
_current_showsOEMIcon
_carApplicationDataSource
_metadata_hiddenBundleIdentifiers
_metadata_OEMIconLabel
_current_OEMIconLabel
_current_statusBarEdge
_iconImageSize
_metadata_screenBounds
_current_screenBounds
T@"<DBIconModelApplicationDataSource>",W,N,V_carApplicationDataSource
T@"NSArray",&,N,V_metadata_hiddenBundleIdentifiers
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_metadata_screenBounds
TB,N,V_metadata_showsOEMIcon
T@"NSString",C,N,V_metadata_OEMIconLabel
TB,N,V_current_isSet
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_current_screenBounds
TB,N,V_current_showsOEMIcon
T@"NSString",C,N,V_current_OEMIconLabel
TQ,N,V_current_statusBarEdge
TQ,N,V_interactionAffordances
T{CGSize=dd},N,V_iconImageSize
_authorizeHomeManager
initWithBundle:
setHomeLocationAuthorization:
homeLocationAuthorization
isAuthorized
_setupHomeManager
requestAuthorization:completionHandler:
defaultPrivateConfiguration
setLocationAuthorization:
setOptions:
initWithHomeMangerConfiguration:
setHomes:
T@"DBLocationManager",R,N
T@"DBNetworkPathMonitor",R,N
homeManager:didUpdateAuthorizationStatus:
homeManagerDidUpdateHomes:
homeManagerDidUpdatePrimaryHome:
homeManager:didAddHome:
homeManager:didRemoveHome:
homeManager:didReceiveAddAccessoryRequest:
setNetworkPathMonitor:
_homes
_homeLocationAuthorization
T@"DBLocationManager",&,N,V_locationManager
T@"DBNetworkPathMonitor",&,N,V_networkPathMonitor
T@"HMHomeManager",&,N,V_homeManager
T@"HMFLocationAuthorization",&,N,V_homeLocationAuthorization
T@"NSDictionary",&,N,V_homes
URLsForDirectory:inDomains:
URLByAppendingPathComponent:isDirectory:
initWithIconStateURL:desiredIconStateURL:
loadCurrentIconState:
_iconListsByFlatteningPages:
saveDesiredIconState:error:
vehicleId
_vehicleId
T@"NSString",R,N,V_vehicleId
_updateViewControllerForEntity:changeItem:oldEntity:completion:
UUID
notificationSuspender
_newViewControllerForEntity:changeItem:completion:
_handleSuspendedActivationForEntity:changeItem:completion:
_existingViewControllerForEntity:
_stateResolver
_entityIdentifierToViewControllerMap
_notificationSuspender
T@"<DBNotificationSuspending>",W,N,V_notificationSuspender
T@"DBUserAlertServer",W,N,V_userAlertServer
_isValidNowPlayingApplication:
initWithApplicationProxy:
setNowPlayingApplicationInfo:
_nowPlayingDidChangeToBundleIdentifier:
_updatePlaybackStateForBundleIdentifier:playing:
_playing
_nowPlayingApplicationInfo
T@"DBApplicationInfo",&,N,V_nowPlayingApplicationInfo
playing
TB,R,N,GisPlaying,V_playing
T@"DBAppHistory",R,W,N,V_appHistory
T@"<DBNowPlayingDelegate>",W,N,V_delegate
T@"DBApplicationLaunchInfo",R,N
initWithName:type:priority:window:application:pid:scene:
priority
bundleID
_pid
_priority
_bundleID
T@"NSString",R,C,N,V_name
Tq,R,N,V_type
Td,R,N,V_priority
T@"UIWindow",R,W,N,V_window
T@"NSString",R,C,N,V_bundleID
Ti,R,N,V_pid
T@"FBScene",R,N,V_scene
assertions
setAssertions:
setLastFocusAssertion:
setFocusWindow:
focusDeferral
setFocusDeferral:
_applyAssertion:withHeading:focusedFrame:
removeObjectsAtIndexes:
_updateEventFocusWithHeading:focusedFrame:
lastFocusAssertion
displayID
setDisplay:
tokenForIdentifierOfCAContext:
setToken:
setPid:
_movementWithHeading:isInitial:fallbackMovementOriginatingFrame:
initWithFocusMovementInfo:
deferEventsMatchingPredicate:toTarget:withReason:
focusedPid
setDisplayID:
_focusWindow
_assertions
_lastFocusAssertion
_focusDeferral
T@"NSString",C,N,V_displayID
T@"NSMutableArray",&,N,V_assertions
T@"DBFocusAssertion",&,N,V_lastFocusAssertion
T@"UIWindow",W,N,V_focusWindow
T@"<BSInvalidatable>",&,N,V_focusDeferral
_startListeningForThermalEvents
hotToken
coldToken
_queue_respondToCurrentThermalCondition
setThermalBlocked:
setHotToken:
hotLevel
setHotLevel:
setColdToken:
coldLevel
setColdLevel:
_thermalBlocked
_hotToken
_coldToken
_level
_hotLevel
_coldLevel
thermalBlocked
TB,N,GisThermalBlocked,V_thermalBlocked
Ti,N,V_hotToken
TQ,N,V_hotLevel
Ti,N,V_coldToken
TQ,N,V_coldLevel
Tq,R,N,V_level
setFormatString:
setDateStyle:
setTimeStyle:
dateStyle
timeStyle
formatString
tokenWithFormatString:
tokenWithDateStyle:timeStyle:
_formatString
_dateStyle
_timeStyle
T@"NSString",C,N,V_formatString
TQ,N,V_dateStyle
TQ,N,V_timeStyle
dateFormatters
_dateFormatterFromToken:
autoupdatingCurrentLocale
setLocale:
setDateFormat:
dateIntervalFormatters
_dateIntervalFormatterFromToken:
setDateTemplate:
formattedDate:
_formatDate:withToken:
dateFormatterForToken:
stringFromDate:
_formatIntervalFromDate:toDate:withToken:
formattedRangeDateTimeStampStart:end:
formattedRangeTimestampStart:end:
dateIntervalFormatterForToken:
stringFromDate:toDate:
formattedNow
formattedRange:
formattedRangeDateTimestamp:
formattedRangeTimestamp:
T@"NSMutableDictionary",R,N
_imageKeyForBundleIdentifier:inVehicle:
imageForKey:
setImage:forKey:withPersistenceOptions:
initWithUniqueIdentifier:
currentCalendar
initWithDate:calendar:format:
iconImageFromUnmaskedImage:info:
initWithSize:scale:
setShouldApplyMask:
setDrawBorder:
setShape:
imageForImageDescriptor:
_canChangeSmartWidgetVisible
_smartWidgetShouldBeHidden
isSmartWidgetHidden
setSmartWidgetHidden:
_updateStackViewsWithUpdates:completion:
sceneWidgetControllers
smartWidgetChangeVisibilityDisabledRequesters
setSmartWidgetChangeVisibilityDisabledRequesters:
_updateSmartWidgetVisibleIfNecessary
flipDashboardLayout
layoutType
secondaryWidgetStackViewController
primaryWidgetStackViewController
nowPlayingWidgetController
setInCallWidgetHidden:
_callStatusChanged:
_setupConstraints
_updateMapWidgetSizes
inCallWidgetController
smartWidgetController
initialConstraintsSetup
setInitialConstraintsSetup:
mapsWidgetController
landscapePortraitConstraints
squareConstraints
isInCallWidgetHidden
hasActiveNavigation
valueWithCGSize:
setLayoutType:
setSceneWidgetsEnabled:
setSceneWidgetsForeground:
setSceneWidgetsActive:
_smartWidgetHiddenDefaultChanged
setLandscapePortraitConstraints:
setSquareConstraints:
sceneWidgetsEnabled
sceneWidgetsForeground
sceneWidgetsActive
setHasActiveNavigation:
setPrimaryWidgetStackViewController:
setSecondaryWidgetStackViewController:
setSceneWidgetControllers:
_smartWidgetHidden
_inCallWidgetHidden
_sceneWidgetsEnabled
_sceneWidgetsForeground
_sceneWidgetsActive
_hasActiveNavigation
_initialConstraintsSetup
_landscapePortraitConstraints
_squareConstraints
_layoutType
_mapsWidgetController
_nowPlayingWidgetController
_inCallWidgetController
_smartWidgetController
_primaryWidgetStackViewController
_secondaryWidgetStackViewController
_sceneWidgetControllers
_smartWidgetChangeVisibilityDisabledRequesters
T@"DBNowPlayingWidgetViewController",R,N,V_nowPlayingWidgetController
T@"DBInCallWidgetViewController",R,N,V_inCallWidgetController
T@"DBSmartWidgetViewController",R,N,V_smartWidgetController
T@"DBWidgetStackViewController",&,N,V_primaryWidgetStackViewController
T@"DBWidgetStackViewController",&,N,V_secondaryWidgetStackViewController
T@"NSArray",&,N,V_sceneWidgetControllers
T@"NSArray",&,N,V_landscapePortraitConstraints
T@"NSArray",&,N,V_squareConstraints
T@"DBSmartWidgetEngine",&,N,V_engine
T@"NSMutableSet",&,N,V_smartWidgetChangeVisibilityDisabledRequesters
TB,N,V_initialConstraintsSetup
TQ,N,V_layoutType
smartWidgetHidden
TB,N,GisSmartWidgetHidden,V_smartWidgetHidden
inCallWidgetHidden
TB,N,GisInCallWidgetHidden,V_inCallWidgetHidden
TB,N,V_sceneWidgetsEnabled
TB,N,V_sceneWidgetsForeground
TB,N,V_sceneWidgetsActive
TB,N,V_hasActiveNavigation
T@"DBMapsWidgetViewController",R,N,V_mapsWidgetController
stringForDoorState:
layoutDelegate
didChangeLayout:
setLayoutDelegate:
_layoutDelegate
T@"<DBLayoutHelperViewDelegate>",W,N,V_layoutDelegate
setWantsGeoSupported
assertWatchdogEnabledForLimitedDurationForReason:
_newApplicationLibrary
currentProcess
setBool:forKey:
lastExitContext
isJetsam
displayManager
setApplicationInfoClass:
setApplicationPlaceholderClass:
setAllowConcurrentLoading:
entitlementValueForKey:ofClass:
containsBundleIdentifier:
setInstalledApplicationFilter:
addApplicationProxy:withOverrideURL:
processLaunchWatchdogMonitoringAssertion
setProcessLaunchWatchdogMonitoringAssertion:
iconLayoutDataProviders
options
_shouldHandleTestURL:
handleTestURL:
_currentDashboard
_currentAppHistory
availableFeatureKeys
_runSiriTest:testOptions:
startedIPTest:
messageReadDirectActionWithAppBundleId:conversationGUID:
initWithPPTContext:
registerAsSystemApp
_newApplicationInitializationContext
getUIContextStatesWithCompletion:
getSessionUIContextStatesWithCompletion:
getSessionEchoContextStatesWithCompletion:
getSessionFeatureKeysWithCompletion:
setSessionFeatureKeys:completion:
appHistoryDataProviderForService:
iconLayoutService:dataProviderForVehicleID:
systemServiceApplicationInfoProvider:
systemService:canActivateApplication:withResult:
systemService:handleOpenApplicationRequest:withCompletion:
systemService:handleOpenApplicationRequest:options:origin:withResult:
systemService:handleOpenURLRequest:application:options:origin:withResult:
systemService:isPasscodeLockedOrBlockedWithResult:
systemService:handleActions:origin:withResult:
systemService:prepareForShutdownWithOptions:origin:
systemServicePrepareForShutdown:withOptions:
systemServicePrepareForExit:andRelaunch:
systemServicePrepareForShutdown:andReboot:
disablesFrontBoardImplicitWindowScenes
_hostsSystemStatusBar
_keyWindowForScreen:
_windowForSystemAppButtonEventsForScreen:
handleDoubleHeightStatusBarTapWithStyleOverride:
application:didFinishLaunchingWithOptions:
runTest:options:
setDisplayManager:
sessionService
setSessionService:
iconLayoutService
setIconLayoutService:
setIconLayoutDataProviders:
appHistoryService
setAppHistoryService:
_sharedApplicationLibrary
_memoryPressureSource
_memoryPressureStatus
_displayManager
_sessionService
_iconLayoutService
_iconLayoutDataProviders
_appHistoryService
_processLaunchWatchdogMonitoringAssertion
T@"DBDisplayManager",&,N,V_displayManager
T@"CRSSessionService",&,N,V_sessionService
T@"CRSIconLayoutService",&,N,V_iconLayoutService
T@"NSMutableDictionary",&,N,V_iconLayoutDataProviders
T@"DBAppHistory",&,N,V_appHistory
T@"CRSAppHistoryService",&,N,V_appHistoryService
T@"<BSInvalidatable>",&,N,V_processLaunchWatchdogMonitoringAssertion
sceneWidgetsDisabledRequesters
setSceneWidgetsDisabledRequesters:
mapsNavigationWidgetController
widgetContainerViewController
setLayoutHelperView:
setMapsNavigationWidgetController:
setWidgetContainerViewController:
navigationWidgetBundleIdentifier
preferredFocusHeading
reloadConstraints
constraintEqualToSystemSpacingAfterAnchor:multiplier:
setContentHuggingPriority:forAxis:
setPriority:
setSquareContainerHeightConstraint:
squareContainerHeightConstraint
setLandscapeContainerWidthConstraint:
landscapeContainerWidthConstraint
currentLayoutType
setCurrentLayoutType:
portraitConstraints
landscapeConstraints
_updateNavigationWidgetsForIdentifier:
setNavigationWidgetBundleIdentifier:
legibilitySettings
T@"_UILegibilitySettings",&,N
setPortraitConstraints:
setLandscapeConstraints:
setPreferredFocusHeading:
layoutHelperView
_portraitConstraints
_landscapeConstraints
_preferredFocusHeading
_mapsNavigationWidgetController
_widgetContainerViewController
_currentLayoutType
_landscapeContainerWidthConstraint
_squareContainerHeightConstraint
_sceneWidgetsDisabledRequesters
_layoutHelperView
_navigationWidgetBundleIdentifier
T@"DBMapsNavigationWidgetViewController",&,N,V_mapsNavigationWidgetController
T@"DBWidgetContainerViewController",&,N,V_widgetContainerViewController
TQ,N,V_currentLayoutType
T@"NSArray",&,N,V_landscapeConstraints
T@"NSArray",&,N,V_portraitConstraints
T@"NSLayoutConstraint",&,N,V_landscapeContainerWidthConstraint
T@"NSLayoutConstraint",&,N,V_squareContainerHeightConstraint
T@"NSMutableSet",&,N,V_sceneWidgetsDisabledRequesters
T@"DBLayoutHelperView",&,N,V_layoutHelperView
T@"NSString",&,N,V_navigationWidgetBundleIdentifier
TQ,N,V_preferredFocusHeading
T@"_UILegibilitySettings",&,N,VlegibilitySettings
sharedConfiguration
currentCountrySupportsCarIntegration
characteristicTypeByName
characteristicNameForType:
materialViewWithRecipeNamesByTraitCollection:inBundle:options:initialWeighting:scaleAdjustment:compatibleWithTraitCollection:
setGroupNameBase:
mainQueue
addObserverForName:object:queue:usingBlock:
initWithCoder:
platterCornerRadius
initWithDynamicProvider:
contentFrame
initWithWhite:alpha:
B24@0:8@16
Q24@0:8@16
@24@0:8Q16
B32@0:8@16@?24
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"NSArray"24@0:8Q16
q24@0:8@16
v32@0:8@16q24
v28@0:8@16B24
v32@0:8@"CRSSiriPreferences"16q24
v28@0:8@"CRSSiriPreferences"16B24
v32@0:8@16@24
v32@0:8@"DNDStateService"16@"DNDStateUpdate"24
v32@0:8@"UNNotificationSettingsCenter"16@"NSSet"24
v32@0:8@"UNNotificationSettingsCenter"16@"UNNotificationSystemSettings"24
v16@0:8
v40@0:8@16@24@32
v40@0:8@"DBWorkspace"16@"<DBWorkspaceState>"24@"<DBWorkspaceState>"32
v24@0:8@16
v24@0:8^{?=[45B][64c][64c][256c]iiii[100c][100c][100c][100c][2[100c]][1024c]IIb1b1iib1IIiI[150c]iib1b1b1[256c]b1b1b1b2b2b1Ib1b1b1[256c][256c][100c]b1b1b1b1b1db1b1b1[100c][100c][256c][256c]}16
@24@0:8q16
v24@0:8@"<UIStatusBarStateObserver>"16
@"NSString"24@0:8q16
q40@0:8@16q24Q32
v52@0:8@16d24d32d40i48
v44@0:8@16d24d32i40
@24@0:8@16
v40@0:8@16q24q32
v48@0:8@16q24q32@40
q40@0:8@"UIStatusBar_Base"16q24Q32
v52@0:8@"UIStatusBar_Base"16d24d32d40i48
v44@0:8@"UIStatusBar_Base"16d24d32i40
@"UISystemNavigationAction"24@0:8@"UIStatusBar_Base"16
v40@0:8@"UIStatusBar_Base"16q24q32
v48@0:8@"UIStatusBar_Base"16q24q32@40
Q40@0:8@16q24Q32
q24@0:8q16
Q40@0:8@"UIStatusBar_Base"16q24Q32
B24@0:8@"UIStatusBar_Base"16
{?=[45B][64c][64c][256c]iiii[100c][100c][100c][100c][2[100c]][1024c]IIb1b1iib1IIiI[150c]iib1b1b1[256c]b1b1b1b2b2b1Ib1b1b1[256c][256c][100c]b1b1b1b1b1db1b1b1[100c][100c][256c][256c]}16@0:8
i24@0:8Q16
q16@0:8
v24@0:8q16
@"DBStatusBarSensorIndicatorView"
@"NSString"
@"NSTimer"
@"NSHashTable"
@"<DBEnvironment>"
@"NSNumber"
@"STTelephonyStatusDomain"
@"STTelephonyStatusDomainData"
@"STBatteryStatusDomain"
@"STBatteryStatusDomainData"
@"STWifiStatusDomain"
@"STWifiStatusDomainData"
@"STMediaStatusDomain"
@"STMediaStatusDomainData"
@"STCallingStatusDomain"
@"STCallingStatusDomainData"
@"DNDStateService"
@"CRSSiriPreferences"
v24@0:8@?16
@"DBAppDockViewController"
@"UIView"
@"UIColor"
@32@0:8Q16@24
@24@0:8@?16
{UIEdgeInsets=dddd}16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16
{UIEdgeInsets=dddd}24@0:8@16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
@"DBEnvironmentConfiguration"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@32@0:8@16@24
@56@0:8@16{SBIconImageInfo={CGSize=dd}dd}24
d24@0:8@16
B40@0:8@16@24@32
Q24@0:8@"SBLeafIcon"16
@"NSString"32@0:8@"SBLeafIcon"16@"NSString"24
@"UIImage"56@0:8@"SBLeafIcon"16{SBIconImageInfo={CGSize=dd}dd}24
B24@0:8@"SBLeafIcon"16
q24@0:8@"SBLeafIcon"16
d24@0:8@"SBLeafIcon"16
@24@0:8@"SBLeafIcon"16
@"NSString"24@0:8@"SBLeafIcon"16
B24@0:8@"SBIcon"16
B40@0:8@"SBLeafIcon"16@"NSString"24@32
@"NSArray"24@0:8@"SBLeafIcon"16
@40@0:8@16@24@32
@"DBApplicationInfo"
@"CARSessionConfiguration"
@"FBSApplicationDataStore"
v32@0:8@16@?24
@"UIWindowScene"
@"NSMutableArray"
@"UIWindow"
v168@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24{UIEdgeInsets=dddd}56{CGRect={CGPoint=dd}{CGSize=dd}}88{UIEdgeInsets=dddd}120d152Q160
v168@0:8@"DBEnvironmentConfiguration"16{CGRect={CGPoint=dd}{CGSize=dd}}24{UIEdgeInsets=dddd}56{CGRect={CGPoint=dd}{CGSize=dd}}88{UIEdgeInsets=dddd}120d152Q160
v32@0:8@"DBEnvironmentConfiguration"16@"NSURL"24
v24@0:8@"DBEnvironmentConfiguration"16
v32@0:8@"DBEnvironmentConfiguration"16q24
v28@0:8@"DBEnvironmentConfiguration"16B24
v48@0:8@16@24@32@40
v24@0:8@"FBScene"16
v32@0:8@"FBScene"16@"NSError"24
v32@0:8@"FBScene"16@"FBSceneClientHandle"24
v32@0:8@"FBScene"16@"FBSceneUpdateContext"24
v40@0:8@"FBScene"16@"FBSceneUpdateContext"24@"NSError"32
v48@0:8@"FBScene"16@"FBSSceneClientSettingsDiff"24@"FBSSceneClientSettings"32@"FBSSceneTransitionContext"40
v36@0:8@16@24B32
v36@0:8@"DBProcessMonitor"16@"NSString"24B32
v32@0:8@"DBProcessMonitor"16@"NSString"24
v40@0:8@16@24Q32
v44@0:8@16@24Q32B40
v32@0:8@"FBSceneManager"16@"FBScene"24
v40@0:8@"FBSceneManager"16@"FBScene"24@"<FBSceneClient>"32
v48@0:8@"FBSceneManager"16@"FBScene"24@"FBSSceneSettings"32@"FBSSceneTransitionContext"40
v40@0:8@"FBSceneManager"16@"FBScene"24Q32
v44@0:8@"FBSceneManager"16@"FBScene"24Q32B40
v40@0:8@"FBSceneManager"16@"FBScene"24@"FBSceneUpdateContext"32
v48@0:8@"FBSceneManager"16@"FBScene"24@"FBSceneUpdateContext"32@"NSError"40
v20@0:8B16
@36@0:8@16B24@28
v28@0:8B16@20
d16@0:8
v24@0:8d16
v24@0:8Q16
@"FBScene"
@"FBSDisplayConfiguration"
@"<UIScenePresenter>"
@"UIView<UIScenePresentation>"
@"FBApplicationUpdateScenesTransaction"
@"NSURL"
@40@0:8{CGPoint=dd}16@32
v40@0:8@16q24@32
v56@0:8@16@24@32d40Q48
v32@0:8@"CARSession"16@"NSURL"24
v32@0:8@"CARSession"16q24
v40@0:8@"CARSession"16q24@"NSDictionary"32
v56@0:8@"CARSession"16@"CARScreenViewArea"24@"NSString"32d40Q48
v40@0:8@"CARSession"16@"CARScreenInfo"24@"NSURL"32
v32@0:8@"CARSession"16@"CARScreenInfo"24
v40@0:8@"CARSession"16@"NSString"24@"NSDictionary"32
v28@0:8@"CARSession"16B24
v40@0:8@"CARSession"16q24@"NSString"32
v24@0:8@"CARSession"16
@"CRCarPlayAppPolicy"24@0:8@"DBApplicationInfo"16
@64@0:8@16@24@32@40@48@56
v24@0:8B16B20
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v48@0:8{UIEdgeInsets=dddd}16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"CARSession"
@"DBClusterControlChannel"
@"DBLayerMetadataService"
@"DBAnalytics"
@"FBSDisplayLayoutPublisher"
@"UIScreen"
@"UITraitCollection"
@"CRVehicle"
@"DBNavigationStateProvider"
@"DBIconBadgeController"
@"CRCarPlayAppPolicyEvaluator"
@"DBAppHistory"
@"CRSUIWallpaperPreferences"
@"DBIconImageCache"
@"CRPairedVehicleManager"
@"NSMutableDictionary"
@"CARObserverHashTable"
@"NSMapTable"
@"NSObject<OS_dispatch_queue>"
{UIEdgeInsets="top"d"left"d"bottom"d"right"d}
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGSize=dd}16@0:8
@"FBSApplicationPlaceholder"
@"UIImage"
@"UIImageView"
@"DBInCallWidgetButtonRingView"
@"CPSMultilineLabel"
q40@0:8@16@24o^@32
q32@0:8@16@24
q40@0:8@"<BNPresentable>"16@"NSArray"24o^@32
q32@0:8@"<BNPresentable>"16@"<BNPresentable>"24
q40@0:8@"<BNPresentable>"16@"NSDictionary"24o^@32
@"<BNConsideringDelegate>"16@0:8
v24@0:8@"<BNConsideringDelegate>"16
@32@0:8@16^@24
B56@0:8@16@24Q32@40^@48
@60@0:8@16@24@32B40@44^@52
B48@0:8@16B24@28B36^@40
@48@0:8@16@24@32@40
@56@0:8@16@24@32@40@?48
v48@0:8@16o^{CGSize=dd}24o^{CGSize=dd}32^@40
B68@0:8@16@24@32B40@44@52^@60
B56@0:8@16@24@32@40^@48
@"BNBannerSourceLayoutDescription"32@0:8@"BNBannerSourceListener"16^@24
B56@0:8@"BNBannerSourceListener"16@"<BNPresentable>"24Q32@"NSDictionary"40^@48
@"NSArray"60@0:8@"BNBannerSourceListener"16@"<BNPresentableUniquelyIdentifying>"24@"NSString"32B40@"NSDictionary"44^@52
B48@0:8@"BNBannerSourceListener"16B24@"NSString"28B36^@40
@"UIApplicationSceneSpecification"24@0:8@"BNBannerSourceListener"16
@"UIApplicationSceneSpecification"48@0:8@"BNBannerSourceListener"16@"NSString"24@"FBProcess"32@"NSDictionary"40
v32@0:8@"BNBannerSourceListener"16@"FBSMutableSceneParameters"24
@"<BNBannerSourceListenerPresentable>"56@0:8@"BNBannerSourceListener"16@"<BNPresentableSpecifying>"24@"NSString"32@"FBScene"40@?<v@?@"<BNBannerSourceListenerPresentable>"@"NSError">48
v48@0:8@"BNBannerSourceListener"16o^{CGSize=dd}24o^{CGSize=dd}32^@40
B68@0:8@"BNBannerSourceListener"16@"NSString"24@"NSString"32B40@"NSString"44@"NSDictionary"52^@60
B56@0:8@"BNBannerSourceListener"16@"NSString"24@"NSString"32@"NSDictionary"40^@48
B24@0:8@"BNBannerSourceListener"16
v48@0:8@16{CGSize=dd}24@40
v56@0:8@16@24{CGSize=dd}32@48
{CGPoint=dd}48@0:8@16@24@32@40
{CGPoint=dd}40@0:8@16@24@32
v24@0:8@"<BNPresenting>"16
@"<BNBannerTransitioningDelegate>"24@0:8@"<BNPresenting>"16
v48@0:8@"<BNPresenting>"16{CGSize=dd}24@"<UIViewControllerTransitionCoordinator>"40
v48@0:8@"<BNPresenting>"16@"<BNPresentable>"24@"<UIViewControllerTransitionCoordinator>"32@"NSDictionary"40
v56@0:8@"<BNPresenting>"16@"<BNPresentable>"24{CGSize=dd}32@"<UIViewControllerTransitionCoordinator>"48
@"UIPanGestureRecognizer"24@0:8@"<BNPresenting>"16
{CGPoint=dd}48@0:8@"<BNPresenting>"16@"UIGestureRecognizer"24@"UITouch"32@"UIView"40
{CGPoint=dd}48@0:8@"<BNPresenting>"16@"UIGestureRecognizer"24@"UIEvent"32@"UIView"40
{CGPoint=dd}40@0:8@"<BNPresenting>"16@"UIPanGestureRecognizer"24@"UIView"32
d24@0:8@"<BNPresenting>"16
v32@0:8B16B20@24
v28@0:8B16@"NSString"20
v32@0:8B16B20@"NSString"24
v80@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGRect={CGPoint=dd}{CGSize=dd}}48
@64@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGSize=dd}48
@"BNBannerHostMonitor"
@"BNBannerController"
@"BNBannerSourceListener"
@"BNContentViewController"
@"DBBannerAuthority"
@"UITapGestureRecognizer"
@"<DBNotificationViewControllerDelegate>"
@"NSMutableSet"
v32@0:8@"DBHomeManager"16@"NSDictionary"24
v32@0:8@"DBHome"16@"NSString"24
v24@0:8@"DBHome"16
@"DBHomeManager"
@24@0:8^{_NSZone=}16
@?16@0:8
@"RBSProcessHandle"
@"DBSceneUpdate"
v32@0:8@"URTAlertService"16@"URTAlert"24
@"<DBSystemAlertPresenting>"
@"<DBAppAlertPresenting>"
@"URTAlertService"
v24@0:8@"DBHomeKitService"16
v32@0:8@"DBGarageDoor"16q24
v28@0:8@"DBGarageDoor"16B24
@"DBGarageDoor"
v48@0:8@16q24q32B40B44
v48@0:8@"DBLockOutController"16q24q32B40B44
v24@0:8@"DBNotificationViewController"16
v32@0:8@"DBUserAlertServer"16@"UIViewController"24
v24@0:8@"CRSInCallAssertionService"16
v28@0:8@"CRSInCallAssertionService"16B24
v24@0:8@"DBEvent"16
v56@0:8@16@24@32@40@48
v32@0:8@"FBSceneManager"16@"FBSceneClientHandshake"24
@"FBSSceneTransitionContext"32@0:8@"FBSceneManager"16@"FBScene"24
v56@0:8@"FBSceneManager"16@"FBScene"24@"FBSSceneClientSettingsDiff"32@"FBSSceneClientSettings"40@"FBSSceneTransitionContext"48
v40@0:8@"FBSceneManager"16@"FBScene"24@"NSSet"32
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8@16@24
{UIEdgeInsets=dddd}32@0:8@16@24
v24@0:8@"<FBSceneManagerObserver>"16
@"NSString"24@0:8@"DBApplicationInfo"16
@"FBScene"24@0:8@"DBApplicationInfo"16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@"DBApplicationInfo"16
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8@"DBApplicationInfo"16@"DBApplicationInfo"24
{UIEdgeInsets=dddd}24@0:8@"DBApplicationInfo"16
{UIEdgeInsets=dddd}32@0:8@"DBApplicationInfo"16@"DBApplicationInfo"24
@"DBApplicationInfo"24@0:8@"FBScene"16
B24@0:8@"DBApplicationInfo"16
@"DBWorkspace"16@0:8
@"UIWindow"16@0:8
@"FBSDisplayIdentity"16@0:8
@"FBSDisplayConfiguration"16@0:8
@"DBEnvironmentConfiguration"16@0:8
q32@0:8@"DBApplicationInfo"16@"DBApplicationInfo"24
@"<CRSIconLayoutVehicleDataProviding>"16@0:8
v48@0:8@16@24@32^v40
B24@0:8Q16
B32@0:8@16@24
i16@0:8
v20@0:8i16
@"<BSInvalidatable>"
@"DBDashboardStateProvider"
@"DBDashboardLayoutEngine"
@"DBWallpaperViewController"
@"DBDashboardRootViewController"
@"DBWorkspace"
@"DBDashboardWorkspaceOwner"
@"DBStatusBarWindow"
@"DBRootStatusBarViewController"
@"DBStatusBarStateProvider"
@"DBLockOutController"
@"DBNotificationWindow"
@"DBNotificationViewController"
@"UIViewController"
@"DBSiriViewController"
@"DBFocusController"
@"DBFocusMovementManager"
@"SiriLongPressButtonSource"
@"<SiriAssertion>"
@"SiriActivityAssertion"
@"SiriDirectActionSource"
@"DBNowPlayingObserver"
@"DBStatusBarHomeButtonStateManager"
@"DBScreenshotManager"
@"DBSplashScreenAlert"
@"RBSProcessMonitor"
@"DBUserAlertServer"
@"NSDictionary"
d24@0:8Q16
@"DBScrollButton"
@"NSLayoutConstraint"
@"CRSDashboardFocusableItem"
@"<DBWidgetFocusableViewDelegate>"
v20@0:8I16
v36@0:8B16@20@28
v24@0:8@"NSArray"16
v36@0:8B16@"BKSAnimationFenceHandle"20@"BSAnimationSettings"28
v28@0:8@"CRSDashboardFocusableItem"16B24
v24@0:8@"CRSDashboardFocusableItem"16
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
I16@0:8
@"NSXPCListener"
@"BKSTouchDeliveryPolicyAssertion"
@"NSArray"
@"DBTodayViewSynchronizedAnimationManager"
@"NSXPCConnection"
v24@0:8@"<DBWorkspaceState>"16
@32@0:8@?16@?24
@"<DBWorkspaceOwner>"
@"<DBWorkspaceState>"
@"_DBWorkspaceStateChangeSession"
@"DBDashboardApplicationSceneEntity"
v32@0:8@"DBAppHistory"16@"NSString"24
v40@0:8@16@24@?32
v48@0:8@16@24@32@?40
@"<DBAppPolicyProviding>"
@"DBDashboardWorkspaceState"
@"DBDashboardEntity"
v32@0:8@"DBNavigationStateProvider"16@"NSArray"24
v32@0:8@"DBNavigationStateProvider"16@"NSString"24
@28@0:8I16@20
@"CARScreenInfo"
@"DBInstrumentClusterWorkspaceOwner"
@"DBInstrumentClusterRootViewController"
@32@0:8q16@24
@"<DBLockOutViewDelegate>"
@"UILabel"
@"UIStackView"
v24@0:8@"DBKeybagMonitor"16
^{CGImage=}16@0:8
v24@0:8^{CGImage=}16
^{CGImage=}
@"UIBezierPath"
@64@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48@56
@"DBWidgetFocusRingView"
@"_TtC9DashBoard22DBDashboardPlatterView"
@"MTShadowView"
@"<DBWidgetViewFocusEnabledProviding>"
@20@0:8B16
@36@0:8@16Q24B32
v32@0:8{CGSize=dd}16
@"TUCall"
@"DBInCallWidgetAvatarView"
@"DBInCallWidgetAppIconButton"
@"DBInCallWidgetMultiwayTitleButton"
@"DBInCallWidgetButton"
@"UIFocusContainerGuide"
@"UILayoutGuide"
@"CADisplayLink"
{CGSize="width"d"height"d}
v32@0:8@?16@?24
v40@0:8@16@?24@?32
v40@0:8{CGPoint=dd}16@32
v40@0:8@"<SiriPresentation>"16@"SiriPresentationOptions"24@?<v@?B@"NSError">32
v40@0:8@"<SiriPresentation>"16@"SiriDismissalOptions"24@?<v@?B@"NSError">32
v28@0:8@"<SiriPresentation>"16B24
v24@0:8@"NSString"16
v32@0:8@"<SiriPresentation>"16q24
v40@0:8@"<SiriPresentation>"16@"SiriPunchoutRequest"24@?<v@?B@"NSError">32
@"UIView"24@0:8@"NSString"16
v32@0:8@"NSDictionary"16@?<v@?>24
v24@0:8@?<v@?>16
v28@0:8B16@?20
@"SiriPresentationViewController"
@"<SiriPresentationIntentUsageDelegate>"
@"DBWorkspaceStateChangeRequest"
@"UILongPressGestureRecognizer"
v24@0:8#16
v24@0:8@"HMAccessory"16
v32@0:8@"HMAccessory"16@"HMService"24
v32@0:8@"HMAccessory"16@"HMAccessoryProfile"24
v40@0:8@"HMAccessory"16@"HMService"24@"HMCharacteristic"32
v32@0:8@"HMAccessory"16@"NSString"24
@"NSUUID"16@0:8
@"NSUUID"
@"DBHome"
@"HMService"
v32@0:8@16Q24
v28@0:8@"DBDashboardStateProvider"16B24
v32@0:8@"DBDashboardStateProvider"16Q24
v32@0:8@"DBDashboardStateProvider"16@"NSString"24
v48@0:8@16q24q32q40
v48@0:8@"DBDashboardHomeViewController"16q24q32q40
@"DBDashboard"
@"<DBWidgetSizeManaging>"
@"BKSAnimationFenceHandle"
@"BSAnimationSettings"
v32@0:8@"DBLocationManager"16@"CLLocation"24
v32@0:8@"DBLocationManager"16@24
v28@0:8@"DBNetworkPathMonitor"16B24
v24@0:8@"DBNetworkPathMonitor"16
v24@0:8@"HMHome"16
v32@0:8@"HMHome"16@"HMAccessory"24
v32@0:8@"HMHome"16@"HMUser"24
v40@0:8@"HMHome"16@"HMRoom"24@"HMAccessory"32
v32@0:8@"HMHome"16@"HMRoom"24
v32@0:8@"HMHome"16@"HMZone"24
v40@0:8@"HMHome"16@"HMRoom"24@"HMZone"32
v32@0:8@"HMHome"16@"HMServiceGroup"24
v40@0:8@"HMHome"16@"HMService"24@"HMServiceGroup"32
v32@0:8@"HMHome"16@"HMActionSet"24
v32@0:8@"HMHome"16@"HMTrigger"24
v40@0:8@"HMHome"16@"NSError"24@"HMAccessory"32
v32@0:8@"HMHome"16Q24
v32@0:8@"HMHome"16@"HMResidentDevice"24
v32@0:8@"HMHome"16@"CLLocation"24
v32@0:8@"HMHome"16@"NSArray"24
v28@0:8@"HMHome"16B24
v32@0:8@"HMHome"16q24
v32@0:8@"HMHome"16@"NSString"24
v32@0:8@"HMHome"16@"HMMediaSystem"24
v32@0:8@"HMHome"16@"HMAccessoryNetworkProtectionGroup"24
v32@0:8@"HMHome"16@"HMHomePersonManagerSettings"24
v32@0:8@"HMHome"16@"NSError"24
@"HMHome"
@"DBLocationManager"
@"DBNetworkPathMonitor"
v32@0:8Q16@24
{os_unfair_lock_s=I}16@0:8
v20@0:8{os_unfair_lock_s=I}16
@"NSError"
@"DBHomeKitService"
@"HMCharacteristic"
v24@0:8@"DBBuddyMonitor"16
v24@0:8@"DBSmartWidgetPrediction"16
q40@0:8d16d24d32
:16@0:8
@"CAFilter"
@"<DBSmartWidgetPredictionDelegate>"
v32@0:8@"CPUINowPlayingManager"16@"CPUINowPlayingSnapshot"24
v32@0:8@"CPUINowPlayingManager"16@"NSString"24
v36@0:8@16B24@28
v32@0:8@"DBNowPlayingObserver"16@"DBApplicationInfo"24
v36@0:8@"DBNowPlayingObserver"16B24@"DBApplicationInfo"28
v32@0:8@"MPRequestResponseController"16@?<v@?>24
B32@0:8@"MPRequestResponseController"16@"NSError"24
v24@0:8@"MPRequestResponseController"16
{UIEdgeInsets=dddd}24@0:8Q16
v40@0:8@16Q24@32
v32@0:8q16q24
v36@0:8Q16B24@28
@"UIActivityIndicatorView"
@"CPUINowPlayingSnapshot"
@"UIButton"
@"DBNowPlayingFocusHighlightButton"
@"CPUIProgressView"
@"MPArtworkCatalog"
@"UIStatusBar_Modern"
B32@0:8@"NSURL"16@"NSURL"24
@"DBSmartWidgetPrediction"
@"DBSmartWidgetEngine"
B48@0:8Q16Q24B32B36Q40
B36@0:8Q16B24Q28
{CGRect={CGPoint=dd}{CGSize=dd}}64@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48@56
@"CARInputDeviceTouchpad"
@"EKEventStore"
@"EKCalendarVisibilityManager"
v32@0:8@"DBSmartWidgetEngine"16@"NSArray"24
v24@0:8@"DBSmartWidgetEngine"16
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
B32@0:8@"UIGestureRecognizer"16@"UIEvent"24
@"DBSmartWidgetView"
@"NSSet"
@"UISwipeGestureRecognizer"
@"<DBSmartWidgetAnimating>"
Q32@0:8@16@24
Q32@0:8@"<DBWorkspaceStateChangeSession>"16@"DBWorkspaceStateChangeRequest"24
v32@0:8@"<DBWorkspaceStateChangeSession>"16@"DBWorkspaceStateChangeRequest"24
v32@0:8@"DBWorkspace"16@"<DBWorkspaceStateChangeSession>"24
d32@0:8{CGSize=dd}16
{CGSize=dd}32@0:8{CGSize=dd}16
@"DBIconDropShadowProvider"
@"DBIconLabelBackdropView"
v32@0:8@"DBDashboardRootViewController"16Q24
v44@0:8@16B24Q28@?36
v36@0:8@16B24@?28
v44@0:8@16@24B32@?36
@"DBDashboardHomeViewController"
@"CPUIPassthroughView"
@"_TtC9DashBoard22DBDashboardDimmingView"
@"UIViewController<DBDashboardWorkspaceEntityPresenting>"
@"DBIconView"
@"URTAlert"
@"<DBStatusBarButtonStateManagerDelegate>"
v28@0:8@16i24
v40@0:8@"CLLocationManager"16@"CLLocation"24@"CLLocation"32
v32@0:8@"CLLocationManager"16@"NSArray"24
v32@0:8@"CLLocationManager"16@"CLHeading"24
B24@0:8@"CLLocationManager"16
v40@0:8@"CLLocationManager"16q24@"CLRegion"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconRegion"32
v40@0:8@"CLLocationManager"16@"CLBeaconRegion"24@"NSError"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconIdentityConstraint"32
v40@0:8@"CLLocationManager"16@"CLBeaconIdentityConstraint"24@"NSError"32
v32@0:8@"CLLocationManager"16@"CLRegion"24
v32@0:8@"CLLocationManager"16@"NSError"24
v40@0:8@"CLLocationManager"16@"CLRegion"24@"NSError"32
v28@0:8@"CLLocationManager"16i24
v24@0:8@"CLLocationManager"16
v32@0:8@"CLLocationManager"16@"CLVisit"24
v48@0:8@16{CLLocationCoordinate2D=dd}24d40
@"CLLocation"
@"NSBundle"
@"CLLocationManager"
v32@0:8@16B24i28
@"<DBAppDockViewControllerDelegate>"
@"DBAppDockButton"
@"<DBIconProviding>"
Q56@0:8d16{CGSize=dd}24Q40Q48
Q48@0:8d16{CGSize=dd}24Q40
{UIEdgeInsets=dddd}24@0:8q16
@"NSArray"16@0:8
v52@0:8@16@24@32B40@?44
q40@0:8@16@24q32
d32@0:8@16@24
B48@0:8@16@24Q32@40
B40@0:8@16@24q32
@36@0:8@16@24B32
v56@0:8@16{UIEdgeInsets=dddd}24
v40@0:8@16{CGPoint=dd}24
#40@0:8@16#24#32
v56@0:8@16@24q32@40@48
@48@0:8@16@24Q32@40
@56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
@32@0:8@16Q24
v48@0:8@16@24@32q40
v40@0:8@16@24d32
v48@0:8@16@24d32d40
B48@0:8@16@24@32@40
#40@0:8@16@24#32
v32@0:8@"SBHIconManager"16@"SBRootFolderControllerConfiguration"24
v32@0:8@"SBHIconManager"16@"SBRootFolderController"24
v32@0:8@"SBHIconManager"16@"UIViewController<SBHIconRootViewProviding>"24
q24@0:8@"SBHIconManager"16
Q24@0:8@"SBHIconManager"16
B24@0:8@"SBHIconManager"16
v24@0:8@"SBHIconManager"16
B32@0:8@"SBHIconManager"16@"NSString"24
v32@0:8@"SBHIconManager"16@"SBHIconImageCache"24
v40@0:8@"SBHIconManager"16@"SBIconView"24@"SBIcon"32
@"NSString"32@0:8@"SBHIconManager"16@"SBIconView"24
v32@0:8@"SBHIconManager"16@"SBIconView"24
v40@0:8@"SBHIconManager"16@"SBIconView"24@"NSSet"32
v52@0:8@"SBHIconManager"16@"SBIcon"24@"NSString"32B40@?<v@?B>44
v32@0:8@"SBHIconManager"16@"NSURL"24
@"NSSet"32@0:8@"SBHIconManager"16@"SBIconView"24
@"NSURL"32@0:8@"SBHIconManager"16@"SBIconView"24
@"UIView"32@0:8@"SBHIconManager"16@"SBIconView"24
v40@0:8@"SBHIconManager"16@"SBIconView"24@"_UIContextMenuStyle"32
@"UIViewController"32@0:8@"SBHIconManager"16@"SBIconView"24
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8@"SBHIconManager"16@"SBIconView"24
v40@0:8@"SBHIconManager"16@"SBIconView"24@"<SBHIconViewConfigurationInteraction>"32
B32@0:8@"SBHIconManager"16@"SBIconView"24
v40@0:8@"SBHIconManager"16@"SBIcon"24@"NSString"32
q40@0:8@"SBHIconManager"16@"SBIconView"24q32
B32@0:8@"SBHIconManager"16@"SBIcon"24
Q32@0:8@"SBHIconManager"16@"SBIconView"24
@"UIColor"32@0:8@"SBHIconManager"16@"SBIconView"24
@"UIViewController"24@0:8@"SBHIconManager"16
@"UIViewController"32@0:8@"SBHIconManager"16@"SBIcon"24
B40@0:8@"SBHIconManager"16@"<UIDragSession>"24@"SBIconView"32
B40@0:8@"SBHIconManager"16@"<UIDropSession>"24@"SBIconListView"32
d32@0:8@"SBHIconManager"16@"SBIconView"24
@"UIView"32@0:8@"SBHIconManager"16@"SBRootFolderController"24
B40@0:8@"SBHIconManager"16@"UIView"24@"SBIconView"32
@"<SBIconViewSnapshotProviding>"32@0:8@"SBHIconManager"16@"SBIconView"24
@"<SBRecycledViewsContainerProviding>"24@0:8@"SBHIconManager"16
@"UIView<SBIconDragPreview>"32@0:8@"SBHIconManager"16@"SBIconView"24
@"UIWindow<SBIconDragPreviewContaining>"32@0:8@"SBHIconManager"16@"UIWindowScene"24
v40@0:8@"SBHIconManager"16@"NSUUID"24Q32
v32@0:8@"SBHIconManager"16@"<UIDropSession>"24
B48@0:8@"SBHIconManager"16@"SBSApplicationShortcutItem"24Q32@"SBIconView"40
@"NSArray"32@0:8@"SBHIconManager"16@"SBIconView"24
B40@0:8@"SBHIconManager"16@"SBFolderController"24q32
@"<BSInvalidatable>"36@0:8@"SBHIconManager"16@"SBFolderController"24B32
@"UIStatusBar"32@0:8@"SBHIconManager"16@"SBFolderController"24
@"UIStatusBarStyleRequest"32@0:8@"SBHIconManager"16@"SBFolderController"24
v40@0:8@"SBHIconManager"16@"UIStatusBar"24@"SBFolderController"32
{UIEdgeInsets=dddd}32@0:8@"SBHIconManager"16@"SBFolderController"24
v56@0:8@"SBHIconManager"16{UIEdgeInsets=dddd}24
@"NSString"24@0:8@"SBHIconManager"16
@"NSString"32@0:8@"SBHIconManager"16@"NSString"24
v32@0:8@"SBHIconManager"16@"SBFolder"24
v32@0:8@"SBHIconManager"16@"SBFolderController"24
d32@0:8@"SBHIconManager"16@"SBFolderController"24
v40@0:8@"SBHIconManager"16{CGPoint=dd}24
d24@0:8@"SBHIconManager"16
#40@0:8@"SBHIconManager"16#24#32
v56@0:8@"SBHIconManager"16@"SBNestingViewController"24q32@"SBNestingViewController"40@"<SBViewControllerTransitionCoordinator>"48
@"SBHIconAnimationSettings"48@0:8@"SBHIconManager"16@"SBHomeScreenIconTransitionAnimator"24Q32@"SBNestingViewController"40
@"UIColor"56@0:8@"SBHIconManager"16{CGRect={CGPoint=dd}{CGSize=dd}}24
v36@0:8@"SBHIconManager"16@"UIWindowScene"24B32
@"NSDictionary"24@0:8@"SBHIconManager"16
B32@0:8@"SBHIconManager"16@"SBLeafIcon"24
@"NSArray"32@0:8@"SBHIconManager"16Q24
v48@0:8@"SBHIconManager"16@"SBRootFolderController"24@"SBViewControllerTransitionContext"32q40
v48@0:8@"SBHIconManager"16@"SBRootFolderController"24@"UIViewPropertyAnimator"32q40
v40@0:8@"SBHIconManager"16@"SBRootFolderController"24d32
v48@0:8@"SBHIconManager"16@"SBRootFolderController"24d32d40
@"UIViewController"40@0:8@"SBHIconManager"16@"SBWidgetIcon"24@"<SBLeafIconDataSource>"32
B40@0:8@"SBHIconManager"16@"UIViewController"24@"NSString"32
v32@0:8@"SBHIconManager"16@"NSString"24
@"NSData"40@0:8@"SBHIconManager"16@"<SBLeafIconDataSource>"24@"SBLeafIcon"32
v48@0:8@"SBHIconManager"16@"<SBLeafIconDataSource>"24@"SBLeafIcon"32@"NSData"40
v40@0:8@"SBHIconManager"16@"<SBLeafIconDataSource>"24@"SBLeafIcon"32
v32@0:8@"SBHIconManager"16@?<v@?B>24
v48@0:8@"SBHIconManager"16@"SBRootFolderViewPageManagementLayoutManager"24@"<UIViewImplicitlyAnimating>"32@"NSMutableDictionary"40
v40@0:8@"SBHIconManager"16@"<UIViewImplicitlyAnimating>"24@"NSMutableDictionary"32
v40@0:8@"SBHIconManager"16@"SBRootFolderViewPageManagementLayoutManager"24@"NSMutableDictionary"32
B48@0:8@"SBHIconManager"16@"SBIcon"24@"SBIconListModel"32@"SBFolder"40
B32@0:8@"SBHIconManager"16@"SBHWidget"24
B32@0:8@"SBHIconManager"16@"SBHCustomIconElement"24
v32@0:8@"SBHIconManager"16@"SBHAddWidgetSheetViewController"24
#40@0:8@"SBHIconManager"16@"NSString"24#32
@"NSArray"24@0:8@"SBHIconManager"16
@"NSArray"40@0:8@"SBHIconManager"16@"NSArray"24@"NSArray"32
@"SBModalWidgetIntroductionHomeScreenPreview"24@0:8@"SBHIconManager"16
v40@0:8@"SBHIconManager"16@"<SBHFeatureIntroductionProviding>"24Q32
v32@0:8@"SBHIconManager"16@"<SBHFeatureIntroductionProviding>"24
v48@0:8@"SBHIconManager"16@"INIntent"24@"NSString"32@"NSString"40
@"SBFloatingDockViewController"32@0:8@"SBHIconManager"16@"UIView"24
@"SBFloatingDockViewController"32@0:8@"SBHIconManager"16@"UIViewController"24
B32@0:8@"SBHIconManager"16@"UIView"24
v24@0:8@?<v@?@"CRSIconLayoutState"@"NSError">16
v24@0:8@"CRSIconLayoutState"16
v32@0:8@"NSString"16@?<v@?@"CRSApplicationIcon"@"NSError">24
@"DBIconManager"
@"DBIconModel"
v32@0:8@"DBLockOutView"16Q24
v36@0:8q16B24@?28
@"<DBLockOutViewControllerDelegate>"
@"DBLockOutView"
v32@0:8@"DBIconBadgeController"16@"NSSet"24
v40@0:8@"FBSApplicationDataStoreMonitor"16@"NSString"24@"NSString"32
v32@0:8@"FBSApplicationDataStoreMonitor"16@"NSString"24
#24@0:8@16
B32@0:8@16q24
v56@0:8@16@24@32{CGPoint=dd}40
@28@0:8@16B24
@52@0:8@16q24@32B40^d44
v52@0:8@16@24q32@40B48
#24@0:8@"SBFolder"16
B32@0:8@"SBFolderController"16q24
v32@0:8@"SBFolderController"16@"SBIconListView"24
B32@0:8@"SBFolderController"16@"UIPinchGestureRecognizer"24
v28@0:8@"SBFolderController"16B24
v24@0:8@"SBFolderController"16
B40@0:8@"SBFolderController"16@"SBIconListView"24@"<UIDropSession>"32
v40@0:8@"SBFolderController"16@"SBIconListView"24@"<UIDropSession>"32
@"UIDropProposal"40@0:8@"SBFolderController"16@"SBIconListView"24@"<UIDropSession>"32
v56@0:8@"SBFolderController"16@"SBIconListView"24@"<UIDropSession>"32{CGPoint=dd}40
B48@0:8@"SBFolderController"16@"SBIconListView"24@"<UIDropSession>"32@"SBIconView"40
v40@0:8@"SBFolderController"16@"SBIconListView"24@"SBIconView"32
@"<UIViewSpringAnimationBehaviorDescribing>"40@0:8@"SBFolderController"16@"SBIconListView"24@"UIDragItem"32
@"SBIconView"48@0:8@"SBFolderController"16@"SBIconListView"24@"UIDragItem"32@"SBIconView"40
v48@0:8@"SBFolderController"16@"SBIconListView"24@"SBIconView"32@"UIDragItem"40
@"UITargetedDragPreview"48@0:8@"SBFolderController"16@"SBIconListView"24@"UIDragItem"32@"UITargetedDragPreview"40
v48@0:8@"SBFolderController"16@"SBIconListView"24@"UIDragItem"32@"<UIDragAnimating>"40
d24@0:8@"SBFolderController"16
v32@0:8@"SBFolderController"16@"UITextField"24
{UIEdgeInsets=dddd}24@0:8@"SBFolderController"16
@"<BSInvalidatable>"28@0:8@"SBFolderController"16B24
@"UIStatusBar"24@0:8@"SBFolderController"16
v32@0:8@"SBFolderController"16@"UIStatusBar"24
@"UIStatusBarStyleRequest"24@0:8@"SBFolderController"16
@"SBIconAnimator"52@0:8@"SBFolderController"16q24@"SBNestingViewController"32B40^d44
v52@0:8@"SBFolderController"16@"SBHomeScreenIconTransitionAnimator"24q32@"SBNestingViewController"40B48
@"UIColor"56@0:8@"SBFolderController"16{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8@"SBFolderController"16@"SBFolderControllerConfiguration"24
v40@0:8@16@24q32
v32@0:8@16d24
v40@0:8@16d24d32
v40@0:8@16{CGSize=dd}24
v56@0:8@16@24@32@40@?48
B24@0:8@"SBRootFolderController"16
v40@0:8@"SBRootFolderController"16{CGPoint=dd}24
d24@0:8@"SBRootFolderController"16
@"UIView"24@0:8@"SBRootFolderController"16
v56@0:8@"SBRootFolderController"16{UIEdgeInsets=dddd}24
v40@0:8@"SBRootFolderController"16@"SBViewControllerTransitionContext"24q32
v40@0:8@"SBRootFolderController"16@"UIViewPropertyAnimator"24q32
@"SBIconListView"24@0:8@"SBRootFolderController"16
v32@0:8@"SBRootFolderController"16d24
v40@0:8@"SBRootFolderController"16d24d32
@"NSString"32@0:8@"SBRootFolderController"16@"NSString"24
v24@0:8@"SBRootFolderController"16
v40@0:8@"SBRootFolderController"16{CGSize=dd}24
v48@0:8@"SBRootFolderController"16@"SBRootFolderViewPageManagementLayoutManager"24@"<UIViewImplicitlyAnimating>"32@"NSMutableDictionary"40
v40@0:8@"SBRootFolderController"16@"<UIViewImplicitlyAnimating>"24@"NSMutableDictionary"32
v40@0:8@"SBRootFolderController"16@"SBRootFolderViewPageManagementLayoutManager"24@"NSMutableDictionary"32
@"SBIcon"32@0:8@"SBRootFolderController"16@"NSString"24
v56@0:8@"SBRootFolderController"16@"SBWidgetIcon"24@"SBIconView"32@"<SBHWidgetSheetViewControllerPresenter>"40@?<v@?>48
v32@0:8@"SBRootFolderController"16@"<UIDropSession>"24
v32@0:8@"SBRootFolderController"16@"SBWidgetIcon"24
@"UIView<SBIconDragPreview>"32@0:8@"SBRootFolderController"16@"SBIconView"24
@"UIWindow<SBIconDragPreviewContaining>"32@0:8@"SBRootFolderController"16@"UIWindowScene"24
@"<SBLeafIconDataSource>"40@0:8@"SBRootFolderController"16@"<SBLeafIconDataSource>"24@"SBWidgetIcon"32
v32@0:8@"SBRootFolderController"16@"UIViewController<SBHWidgetSheetViewControlling>"24
v32@0:8@"SBRootFolderController"16@"SBHAddWidgetSheetViewController"24
@"NSString"24@0:8@"SBRootFolderController"16
@"SBHIconImageCache"24@0:8@"SBRootFolderController"16
B24@0:8@"NSString"16
@"DBLeafIcon"24@0:8@"NSString"16
B24@0:8@"DBLeafIcon"16
@"FBSALOToken"
@"DBTodayViewController"
@"FBSApplicationLibrary"
@"FBSApplicationDataStoreMonitor"
@"NSIndexPath"
@"NSObject<OS_nw_path_monitor>"
@"NSObject<OS_nw_path>"
v24@0:8@"NSDictionary"16
@"<DBLayerMetadataServiceDelegate>"
v32@0:8@"CARActiveNavigationIdentifiersObserver"16@"NSArray"24
@"<DBNavigationAppInfoProviding>"
@"<DBAppHistoryAppDockProviding>"
@"CARActiveNavigationIdentifiersObserver"
v24@0:8@"SBSRemoteAlertHandle"16
v32@0:8@"SBSRemoteAlertHandle"16@"NSError"24
@"SBSRemoteAlertHandle"
v32@0:8@"CRSUIStatusBarStyleService"16@"BSAnimationSettings"24
v32@0:8@"DBAppDockViewController"16@"NSString"24
v32@0:8@"DBStatusBarHomeButtonStateManager"16Q24
@"DBStatusBarHomeButton"
@"DBStatusBarScreenResizeButton"
@"DBStatusBarViewController"
@"UIVisualEffectView"
@"CRSUIStatusBarStyleService"
v24@0:8@"DBDisclosureMonitor"16
v32@0:8@"DBLockOutViewController"16Q24
v24@0:8@"DBSiriMonitor"16
v24@0:8@"DBThermalMonitor"16
@"DBLockOutWindow"
@"DBLockOutViewController"
@"DBBuddyMonitor"
@"DBDisclosureMonitor"
@"DBKeybagMonitor"
@"DBSiriMonitor"
@"DBThermalMonitor"
@"<DBLockoutControllerDelegate>"
@"DBHomeManager"16@0:8
v28@0:8@"DBSmartWidgetSource"16B24
@"NSDate"
@"<SBIconListLayout>"24@0:8@"NSString"16
@"SBIconListFlowLayout"
@"_DBIconListLayoutProvider"
@"UNNotificationSettingsCenter"
@"<DBSmartWidgetSourceDelegate>"
@"UIMutableCarPlayApplicationSceneSettings"
@"UIApplicationSceneTransitionContext"
@"UIApplicationStarkSceneSpecification"
v32@0:8@"CARSession"16@"CARSessionConfiguration"24
v40@0:8@"FBSDisplayMonitor"16@"FBSDisplayIdentity"24@"FBSDisplayConfiguration"32
v32@0:8@"FBSDisplayMonitor"16@"FBSDisplayIdentity"24
@"FBSceneManager"
@"CARSessionStatus"
@"DBProcessMonitor"
@"CNAvatarViewControllerSettings"
@"CNAvatarViewController"
v24@0:8@"SBIcon"16
v32@0:8@"SBLeafIcon"16@"<SBLeafIconDataSource>"24
@"DBLeafIcon"
v28@0:8q16B24
v48@0:8@16@24@32d40
^{IONotificationPort=}
@"CARAutomaticDNDStatus"
@"NSOperationQueue"
@"_DBAnalyticsChargeInfo"
@"FBSDisplayLayoutMonitor"
@"CARScreenViewArea"
@"CRCarPlayAppDeclaration"
@20@0:8i16
@"<DBIconModelApplicationDataSource>"
@"DBLocationManager"16@0:8
@"DBNetworkPathMonitor"16@0:8
v32@0:8@"HMHomeManager"16Q24
v24@0:8@"HMHomeManager"16
v32@0:8@"HMHomeManager"16@"HMHome"24
v32@0:8@"HMHomeManager"16@"HMAddAccessoryRequest"24
@"HMHomeManager"
@"HMFLocationAuthorization"
@24@0:8^@16
B32@0:8@16^@24
v40@0:8@"DBUserAlertServer"16@"UIViewController"24@"NSString"32
@"DBDashboardWorkspaceStateResolver"
@"<DBWorkspaceStateChangeSession>"
@"<DBNotificationSuspending>"
@"<DBNowPlayingDelegate>"
@68@0:8@16q24d32@40@48i56@60
v60@0:8d16@24@32@40i48@52
v100@0:8d16@24@32@40i48@52Q60{CGRect={CGPoint=dd}{CGSize=dd}}68
v64@0:8@16Q24{CGRect={CGPoint=dd}{CGSize=dd}}32
v56@0:8Q16{CGRect={CGPoint=dd}{CGSize=dd}}24
@"DBFocusAssertion"
@32@0:8Q16Q24
v32@0:8@?<v@?>16@?<v@?>24
@"DBMapsWidgetViewController"
@"DBNowPlayingWidgetViewController"
@"DBInCallWidgetViewController"
@"DBSmartWidgetViewController"
@"DBWidgetStackViewController"
@"<DBLayoutHelperViewDelegate>"
v24@0:8@?<v@?@"NSArray"@"NSError">16
v32@0:8@"NSArray"16@?<v@?@"NSNumber"@"NSError">24
@"<CRSAppHistoryDataProviding>"24@0:8@"CRSAppHistoryService"16
@"<CRSIconLayoutVehicleDataProviding>"32@0:8@"CRSIconLayoutService"16@"NSString"24
v64@0:8@16@24@32@40@48@?56
@"<FBSApplicationInfoProvider>"24@0:8@"FBSystemService"16
v40@0:8@"FBSystemService"16@"NSString"24@?<v@?q>32
v40@0:8@"FBSystemService"16@"FBSystemServiceOpenApplicationRequest"24@?<v@?@"NSError">32
v56@0:8@"FBSystemService"16@"NSString"24@"NSDictionary"32@"BSAuditToken"40@?<v@?q>48
v64@0:8@"FBSystemService"16@"NSURL"24@"NSString"32@"NSDictionary"40@"BSAuditToken"48@?<v@?q>56
v32@0:8@"FBSystemService"16@?<v@?B>24
v48@0:8@"FBSystemService"16@"NSSet"24@"BSAuditToken"32@?<v@?q>40
v40@0:8@"FBSystemService"16@"FBSShutdownOptions"24@"BSProcessHandle"32
v32@0:8@"FBSystemService"16Q24
v28@0:8@"FBSystemService"16B24
@"NSObject<OS_dispatch_source>"
@"DBDisplayManager"
@"CRSSessionService"
@"CRSIconLayoutService"
@"CRSAppHistoryService"
v24@0:8@"DBLayoutHelperView"16
@"_UILegibilitySettings"16@0:8
v24@0:8@"_UILegibilitySettings"16
@"_UILegibilitySettings"
@"DBMapsNavigationWidgetViewController"
@"DBWidgetContainerViewController"
@"DBLayoutHelperView"
@(#)PROGRAM:DashBoard  PROJECT:CarPlayApp-1
Xniu
ffffff
@333333
[@333333
?333333
?ffffff
)6CP]jRRRRRR
?tttttt
?VVVVVV
H@q=
DashBoard
DBDashboardPlatterView
DBDashboardDimmingView
CGRect
CGSize
CGPoint
v8@?0
@"NSString"16@?0@"DBApplicationInfo"8
v16@?0@"DBApplicationInfo"8
B16@?0@"CRCarPlayAppPolicy"8
B16@?0@"DBApplicationInfo"8
q24@?0@"DBApplicationInfo"8@"DBApplicationInfo"16
com.apple.carplayapp
v20@?0B8@"NSError"12
v24@?0@"DNDState"8@"NSError"16
v16@?0@"STTelephonyStatusDomainData"8
v16@?0@"STWifiStatusDomainData"8
v16@?0@"STBatteryStatusDomainData"8
v16@?0@"STMediaStatusDomainData"8
v16@?0@"STCallingStatusDomainData"8
ERROR
CARStatusBarRadarButtonEnabled
com.apple.carplay.internal
UIStatusBarRadarTimeItemEnabled
com.apple.UIKit
apple-internal-install
v12@?0B8
SBApplicationBadgeKey
CarDisplayCanvasIcon-%@.png
v32@?0@"CARManufacturerIcon"8Q16^B24
LAUNCHER_NAME-%@
CarPlayApp
ScreenFlash-%@
CornerMaskOverrideImage
NSData
instrumentcluster
overrideSceneSettingsForInternalUseNotification
removeOverrideSceneSettingsNotification
v16@?0@"UIMutableScenePresentationContext"8
@"UIApplicationSceneTransitionContext"16@?0@"UIMutableApplicationSceneSettings"8
%@:%@:cluster
v16@?0@"FBSMutableSceneSettings"8
@"FBProcessExecutionContext"8@?0
CarPlay - Scene Transactions
@8@?0
Invalidating
B16@?0@"UIScreen"8
com.apple.CarPlay.EnvironmentConfiguration
v32@?0@"CARScreenInfo"8Q16^B24
B16@?0@"CARScreenInfo"8
 NOT
v16@?0@"CARScreenViewArea"8
default
bottom
drive side
unknown
com.apple.CarPlayApp.home-screen
com.apple.carplay.oem
com.apple.now-playing
com.apple.Maps
:dashboard
:widget
com.apple.mobilephone
com.apple.MusicUIService
com.apple.InCallService
com.apple.CarPlaySettings
com.apple.Music
music://cardisplay/show-now-playing
com.apple.MobileSMS
com.apple.CarPlayTemplateUIHost
com.apple.siri
com.apple.mobilecal
com.apple.CarPlayApp
com.apple.iBooks
com.apple.SafeAreaTester
com.apple.NightModeTester
com.apple.WebKit.WebContent
com.apple.springboard
com.apple.CarPlayWallpaper
inputHardEdges
inputRadius
inputNormalizeEdges
inputDither
filters.gaussianBlur.inputRadius
gaussianBlur
filters.saturation.inputAmount
inputAmount
saturation
multiplyColor
inputColor
DBNotificationSuspensionReasonAssistant
DBNotificationSuspensionReasonRecordingAlert
DBNotificationSuspensionReasonPrivacyAlert
com.apple.CarPlay.dashboard
com.apple.CarPlay.homescreen
DBConnectAnimationRequester
DBTodayViewSetupRequester
CARStartApplicationBundleID
CARDisableAutomaticMallocStackLogging
CARLaunchWithMallocStackLogging
CARCornerRadius
deviceOfferFocus
accessoryAcquireFocus
accessoryGiveFocus
changeMapZoomLevel
focusHeading
originXPixels
originYPixels
widthPixels
heightPixels
kDBAppWorkspaceIdentifier
kDBDashboardWorkspaceIdentifier
kDBClusterWorkspaceIdentifier
v16@?0@"FBMutableSystemShellInitializationOptions"8
com.apple.CarPlayApp.oswatchdog
DashBoard
CARStatusBarHomeButton
CarStatusBarIconsHomeButton
CarStatusBarDashboardHomeButton
CarStatusBarHomeButtonFocusRing
B24@?0@"UIPress"8^B16
com.apple.CarPlay
v16@?0@"<UIViewControllerTransitionCoordinatorContext>"8
Notifications
v32@?0@"<BNPresentable>"8Q16^B24
Home
v32@?0@"NSUUID"8@"DBHome"16^B24
changeItems
source
%@-%u
v16@?0@"UIMutableApplicationSceneSettings"8
com.apple.CarPlay.UserAlerts
garageDoor-open
garageDoor-closed
(!H) %@
(!L) %@
Left
Right
launcher
statusbar
notification
lockout
alertSheetFocus
oemFocus
com.apple.CarPlayApp.url-delivery
__bundleId
__supportsCarFullScreen
iOS UI requested
DashBoard - CADisplay Dump
Display Configuration
CADisplay
DashBoard-%@
DashBoardACSelect-%@
DashBoardACBack-%@
DashBoardACHome-%@
DashBoardTelephonyDrop-%@
interestingWindow-%@
starkRoot-%@
statusbar-%@
StatusBarHost
notifications-%@
CarPlay Active
com.apple.carplay.connected
B16@?0@"FBScene"8
NSNumber
User activated app
v32@?0@"BSAction"8Q16^B24
@"FBSSceneTransitionContext"16@?0@"FBSMutableSceneSettings"8
v16@?0@"NSDictionary"8
v32@?0@"FBScene"8Q16^B24
resizeAnimationWindow
APP_USING_MIC_OK
%@ %@
APP_USING_MIC_MESSAGE
v16@?0@"UIAlertAction"8
PRIVACY_DISCLOSURE_ALERT_BODY_%@
v24@?0Q8@"NSError"16
v24@?0@"FBScene"8^B16
v32@?0@"UIView"8Q16^B24
from status bar
to status bar
%@:%@:%@
%@:%@
v32@?0@"NSString"8@"FBScene"16^B24
User activated home
InCall
ENABLED
DISABLED
InCallService
Locked out
music:
app:
v28@?0B8@"DBApplicationLaunchInfo"12@"NSError"20
CarPlayLogo
v32@?0@"DBApplicationInfo"8Q16^B24
v32@?0@"RBSProcessMonitor"8@"RBSProcessHandle"16@"RBSProcessStateUpdate"24
v16@?0@"<RBSProcessMonitorConfiguring>"8
v32@?0@"NSString"8Q16^B24
v24@?0@"RBSProcessState"8^B16
DBDashboard-%@
None
%@%@
v16@?0@"NSString"8
Down
Previous
Next
First
Last
DBActivationSettingUnknown
DBActivationSettingURL
DBActivationSettingAnimate
DBActivationSettingLaunchSource
DBActivationSettingActions
DBActivationSettingWaitForCommit
DBActivationSettingForTesting
DBActivationSettingFailInterval
DBActivationSettingSuspended
Default
AppDock
NowPlaying
Icon
Siri
Dashboard
chevron.backward
chevron.forward
v32@?0@"DBIconListView"8Q16^B24
CARWidgetSceneSplashScreenAnimationIdentifier
CAREnableSnapshotDebugLabel
DashBoard - Scene Transactions
v16@?0@"NSError"8
v32@?0@"DBWidgetFocusableView"8Q16^B24
FocusItems
v32@?0@"CRSDashboardFocusableItem"8Q16^B24
Snapshot placeholder...
DashBoard - Pending State Change Requests
v16@?0@"<DBWorkspaceState>"8
v16@?0@"<DBWorkspaceStateChangeSession>"8
identifier
com.apple.carplay.dashboard.siri
bundleID
%@.%@
applicationToProxy
proxyApp
MCDNowPlayingWillAppearNotification
MCDNowPlayingWillDisappearNotification
CARRecentAppHistory
CARLastSessionUIContextOwners
CarDisplayRecentlyUsedApps
v32@?0@"LSAppLink"8Q16^B24
v24@?0@"NSArray"8@"NSError"16
q24@?0@"NSString"8@"NSString"16
B16@?0@"NSString"8
@"DBApplicationInfo"16@?0@"NSString"8
v32@?0@"DBDashboardWorkspaceStateChangeItem"8Q16^B24
sr_aci
CARClusterCornerRadius
kDBInstrumentClusterPreviousShowUIURLDictionary
starkCluster-%@
InstrumentCluster-%@
@"UIImage"12@?0B8
ClusterCornerMaskOverrideImage
uuid
zoomDirection
none
DBInstrumentCluster-%@
LOCKOUT_GENERIC_TITLE
LOCKOUT_SIRI_TITLE
LOCKOUT_SIRI_MESSAGE
LOCKOUT_THERMAL_TITLE
CarDisplayThermometer
LOCKOUT_THERMAL_MESSAGE
LOCKOUT_DISCLOSURE_TITLE
LOCKOUT_DISCLOSURE_MESSAGE
LOCKOUT_BACK_TO_OEM
LOCKOUT_ENABLE_SIRI
LOCKOUT_UNDISCLOSED
LOCKOUT_SAFE
LOCKOUT_FEATURES_OFF
arrow.up.left.and.arrow.down.right
arrow.down.right.and.arrow.up.left
com.apple.DBKeybagStateQueue
com.apple.DBKeybagObserverQueue
com.apple.carplayapp.shadowdrawing
CIGaussianBlur
v16@?0@"NSTimer"8
B24@?0@8@16
B16@?0@"TUCall"8
Muting
Unmuting
PHONE_WIDGET_CALL_TITLE_%@_%@_AND_OTHERS
PHONE_WIDGET_CALL_TITLE_%@_AND_%@
PHONE_WIDGET_HOLD
SMARTWIDGET_MESSAGE
SMARTWIDGET_CALL
v32@?0@8Q16^B24
B32@?0@8Q16^B24
v32@?0@"DBWidgetViewController"8Q16^B24
@"_DBWidgetState"16@?0@"DBWidgetViewController"8
v32@?0@"_DBWidgetState"8Q16^B24
FloatingSiri
Siri activated app
<%@: %p name=%@ uniqueIdentifier=%@ home=(%p)%@ type=%@ interactive=%@ reachable=%@ current=%@ pendingWrite=%@ pendingRead=%@ hasError=%@>
generic
[reachable=%@ current=%@ 
baseEntity
stackedEntity
Unknown
TodayView
AppIcons
Locked
Unlocked
%@:%@%@
<%@ %@>
v24@?0@"HMService"8@"NSError"16
(%@: %@)
v32@?0@"NSString"8@"NSUUID"16^B24
<%@: %p %@ uniqueIdentifier=%@ hasGarageDoor=%@ hasCachedGarageDoors=%@ inExtendedRange=%@ inRange=%@ distance=%@ inLocationRange=%@ inHomeRange=%@ lastUsed=[%@] updatingLastUsed=[%@]>
%.2f
v16@?0@"NSArray"8
[inRange=%@ distance=%.2f inExtendedRange%@ inLocationRange=%@ inHomeRange=%@]
Initialization
InitializationSkipped
Current
PendingRead
PendingWrite
Pending
Count
%@-%@
V:%@
C:%@
P:%@
uniqueIdentifier=%@
service=(%p)%@
home=(%p)%@
state=%@(%lu)
formatedValue="%@"
value=[%@]
format=%@
notifies=%@
readable=%@
writeable=%@
hidden=%@
error=%@
<%@: %p(%p) %@>
%@=%@ (%@ transactionID=%lu error=%@ values=[%@])
SmartEngineCombineRangesInterval
SELF.validRange == YES
<%@: %p uniqueIdentifier=%@ title=%@ subtitle=%@ score=%@ validRanges=[%@] predictedObject=%@>
[%ld(%ld) pScore=%ld bScore=%ld value=%.2f minValue=%.2f maxValue=%.2f]
<%@ - %@>
%@ [ready: %@, client: %@, animation block: %@]
v32@?0@"DBTodayViewSynchronizedAnimation"8Q16^B24
v32@?0@"NSString"8@"<UIScenePresenter>"16^B24
 (suspended)
v16@?0@"UILayoutGuide"8
B16@?0@"UIButton"8
NowPlayingPlaceholder
NOW_PLAYING_NOT_PLAYING
v24@?0@8@"UIImage"16
B24@?0@"UITouch"8^B16
DBLogForCategory
DBLogging.m
category < DBLoggingCategoryCount
StatusBar
TemplateUIHostApp
Workspace
SmartWidget
InstrumentCluster
SplashScreen
MediaPlayer
Analytics
Diagnostics
TelemetrySignposts
IconBadging
SynchronizedAnimations
Appearance
Notification
ClusterControl
createPKZip
extractPKZip
Calendar
com.apple.CarPlay.internal.refreshApps
q24@?0@"DBSmartWidgetCalendarPrediction"8@"DBSmartWidgetCalendarPrediction"16
including
NOT including
CARSmartWidgetDebugGestures
v32@?0@"EKEvent"8Q16^B24
SMARTWIDGET_CALENDAR_EVENT_COUNT
SMARTWIDGET_CALENDAR_ALLDAY
SMARTWIDGET_CALENDAR_EVENTS_STARTING
calshow:%d
isSoonestEvent=%@ (%@)
SmartEngineCalendar_InitialValidInterval
SmartEngineCalendar_BeforeStartDateValidInterval
SmartEngineCalendar_AfterStartDateValidInterval
opacity
v16@?0^{CGImage=}8
kCARAppToAppAnimationIdentifier
kCARAppToHomeAnimationIdentifier
kCARFromStackedAppAnimationIdentifier
kCARHomeToAppAnimationIdentifier
kCARToStackedAppAnimationIdentifier
v16@?0@?<v@?>8
v16@?0@"DBHomeToAppAnimationSettings"8
v16@?0@"DBAnimationSettings"8
v16@?0@"DBAppToHomeAnimationSettings"8
v16@?0@"DBToStackedAppAnimationSettings"8
v16@?0@"DBFromStackedAppAnimationSettings"8
v16@?0@"URTAlertAction"8
v16@?0@"UIAction"8
/System/Library/LocationBundles/CarPlayHomeLocation.bundle
/System/Library/LocationBundles/HomeKitDaemon.framework
com.apple.DashBoard.locationManager.%p
HomeKit
Unnamed
<%@: %p %@ authorized=%@ active=%@ regions=[%@] assertions=[%@]>
v24@?0@"RBSProcessHandle"8@"RBSProcessExitContext"16
CARRefreshAppDockNotification
CARAppDockStackView
CARAppDockButton-Navigation
CARAppDockButton-Audio
CARAppDockButton-Other
B32@?0@"DBApplicationInfo"8Q16^B24
@"NSString"16@?0@"CRSApplicationIcon"8
DefaultIconState_CarDisplay
plist
CARStartPageIndex
v16@?0@"NSMapTable"8
v24@?0@"NSString"8^B16
v32@?0@"SBIcon"8Q16^B24
oem:back
Scrolling
com.apple.DashBoard.NetworkPathMonitor
v16@?0@"NSObject<OS_nw_path>"8
Other
WiFi
Cellular
Wired
LoopBack
<%@: %p path=%@ reachable=%@ active=%@ assertions=[%@]>
com.apple.carkit.layer-metadata
maps:/car/instrumentcluster
maps://car/instrumentcluster
maps
instructioncard
showSpeedLimit
showCompass
showETA
maneuverLayout
leftaligned
rightaligned
topaligned
user
@"NSString"16@?0@"NSString"8
GarageDoorOpener
com.apple.CarPlaySplashScreen
CARSplashScreenViewController
com.apple.CarPlay.StatusBar
lockout-%@
com.apple.CarPlay.SmartWidget.refreshPredictions
com.apple.CarPlay.SmartWidget.refreshDisabled
com.apple.CarPlay.SmartWidget.refreshGarageDoors
SmartEngineStopDelay
SELF.predictionScore >= %@
q24@?0@"DBSmartWidgetPrediction"8@"DBSmartWidgetPrediction"16
<%@: %p updatesPending=%@ predictionsFresh=%@ lastRefreshRequest=%@ sources=%@>
changeUIContext
maps:
maps:/car/destinations
mobilephone:
nowplaying:
messages:
com.apple.DBDisclosureObserverQueue
iconLists
metadata
v32@?0@"SBIcon"8@"NSIndexPath"16^B24
com.apple.carplayapp.badgeSettingsUpdateQueue
v24@?0@"UNNotificationSource"8^B16
invalid
%@.workQueue
CARSmartWidgetDisablePrediction_%@
<%@: %p disabled=%@ lastRefresh=%@ predictions.count=%lu>
<%@: %p name=%@ uniqueIdentifier=%@ home=(%p)%@ reachable=%@ current=%@ pendingRead=%@ pendingWrite=%@ hasError=%@ doorState=%@ characteristics: %@ %@ %@>
SMARTWIDGET_GARGAGEDOOR_ERROR
SMARTWIDGET_GARGAGEDOOR_UNREACHABLE
SMARTWIDGET_GARGAGEDOOR_UNKNOWN
SMARTWIDGET_GARGAGEDOOR_OPEN
SMARTWIDGET_GARGAGEDOOR_CLOSED
SMARTWIDGET_GARGAGEDOOR_OPENING
SMARTWIDGET_GARGAGEDOOR_CLOSING
SMARTWIDGET_GARGAGEDOOR_STOPPED
SMARTWIDGET_GARGAGEDOOR_OBSTRUCTED
Remove
changeType
Normal
Stacked
presentationPreference
<%@: %p start=%@ end=%@>
FBSRootSceneHost
v24@?0@"BSAction"8^B16
Fail Interval Exceeded
DBDisplayManager
com.apple.CarPlay.non-launching
com.apple.CarPlayApp.Dashboard
v32@?0@"FBSDisplayIdentity"8@"<DBEnvironment>"16^B24
B16@?0@"FBSDisplayConfiguration"8
v16@?0@"<BSServiceConnectionEndpointInjectorConfiguring>"8
RootWindow-%@-%p
Display Connection
v24@?0@"FBSDisplayConfiguration"8^B16
CarInCallWidgetAvatarFocusRing
CarStatusBarDockIconFocusRing
CarStatusBarDockIconFocusRingUnread
CarStatusBarDockIconUnreadBadge
name
manufacturer
firmwareVersion
hardwareVersion
ppid
CARSmartWidgetPredictionUpdatedNotification
CARNowPlayingWidgetInteractionNotification
CARApplicationDidLaunchNotification
CARSessionServerConnectionDiedNotification
CARAnalyticsSessionInterruptKey
batteryPercentage
thermalLevel
CARAnalyticsPreviousSessionEnd
CARAnalyticsDashboardVisibilityTime
CARAnalyticsAppVisibilityTime
CARAnalyticsPlaybackTime
CARAnalyticsChargingTime
CarPlay Analytics Queue
v32@?0@"FBSDisplayLayoutMonitor"8@"FBSDisplayLayout"16@"FBSDisplayLayoutTransitionContext"24
IOPMPowerSource
IOGeneralInterest
mediaserverd
thermalTrap
%@:%fsecondsAgo
wifid:%fsecondsAgo
DNDWDCarPlay
AlbumArtAllowed
Restricted
Always Dark
Always Light
Automatic
Wallpaper
SourceVersion
CARSmartWidgetHidden
DashboardSuggestions
Display%@
secondVideoStream
previousSessionInterrupt
B16@?0@"_DBAnalyticsAppInfo"8
bundleIdentifier
playbackTime
visibleTime
dashboardVisibleTime
siriPresentationCount
sessionDuration
appCategory
visiblePercentage
playbackPercentage
sessionVisibilityDuration
launchCount
v32@?0@"NSString"8@"NSNumber"16^B24
sessionCount
dock
siri
homescreen
dashboard
total
iAPManufacturer
iAPModel
iAPName
airplayModel
transports
:Muted
:Unmuted
announceMessages
requestUIMapsCount
requestUIMusicCount
requestUIMessagesCount
requestUIPhoneCount
requestUIBundleIdentifierCount
showUIMapCount
showUITurnCardCount
screenTime
mainAudioTime
screenPercentage
mainAudioPercentage
unlockCount
supportsLocation
supportsLocationPASCD
supportsLocationGPGGA
supportsLocationGPRMC
supportsLocationDeadReckoning
supportsLocationChinaShifted
deviceChargedDuringSession
deviceChargedWirelessly
adapterVoltage
adapterWattage
adapterDescription
adapterPMUConfiguration
adapterCurrent
deviceChargeDuration
sessionInterrupt
sessionSummary
preferredMapsAppearance
Wireless
announceSettings
Main
screenType
duration
isFullScreen
viewAreaCount
eventCount
type
Playback Changed
Skip
Album Art Selected
tel:
podcasts:
v32@?0@"_DBAnalyticsAppInfo"8Q16^B24
B32@?0@"_DBAnalyticsAppInfo"8Q16^B24
IsCharging
AdapterDetails
Description
IsWireless
AdapterVoltage
%d.%d V
%d mA
PMUConfiguration
%@ mA
%d.%d W
systemNightMode
limitableUITypes
voiceTriggerMode
screenCount
supportsDestinationSharing
primaryInteraction
availableInteractions
supportsHiFiTouch
%@: %@
v32@?0@"CARScreenViewArea"8Q16^B24
MultipleViewAreas
HasSafeAreaWithinAnyViewAreas
HasTransitionControlWithinAnyViewAreas
HasAViewAreaSameSizeAsDisplay
PrimaryInteraction
AvailableInteractions
PhysicalHeight
PhysicalWidth
PixelHeight
PixelWidth
PixelViewAreaWidth
PixelViewAreaHeight
PixelSafeAreaWidth
PixelSafeAreaHeight
ForMultipleViewAreasInitialViewAreaWasLargest
UserChangedViewAreaCount
UserChangedViewAreaUsingTransitionControlCount
ForMultipleViewAreasViewAreaActiveLongestWasLargest
(no value)
Messaging
Calling
Navigation
Audio
Automaker
QuickOrdering
Charging
Parking
Productivity
Fueling
DrivingTask
sessionStarted
appSessionEnded
sessionViewAreaChanged
dashboardWidgetPrediction
dashboardNowPlayingAction
sessionEnded
appSessionEndedPhone
navigationSessionOwners
announceMessagesChanged
preferredMapsAppearanceChanged
com.apple.CarPlay.%@
MapsNavigationWidgetBackgroundImage
CARAppPrototype
CARAppInternal
CARAppHidden
CARAppFullScreen
CARAppCertification
CARRequiresFeatureFlags
SBLaunchSuspendedAlways
UIApplicationSceneManifest
com.apple.springboard.deliveropenurlusingworkspace
13.0
CPSupportsDashboardNavigationScene
CPSupportsInstrumentClusterNavigationScene
%@-%d
FBBundleInfo+CarPlayApp
@"CRSApplicationIcon"16@?0@"NSString"8
v32@?0@"NSArray"8Q16^B24
iconOrder
v24@?0@"SBIcon"8^B16
IconRows
IconColumns
IconCount
IconPageCount
IconThirdPartyCount
IconFirstPartyCount
IconFirstPartyCountFirstPage
IconThirdPartyCountFirstPage
IconFirstPageCustomized
ShowsOEMIcon
HiddenAppsCount
HiddenApps
showInternalApps
showPrototypeApps
news_carplay_is_enabled
com.apple.newscore
passcode
noSiri
thermal
blocked
buddy
disclosure
(%i)
com.apple.DashBoard.homemanager
%@-CarDisplayIconState.plist
%@-CarDisplayDesiredIconState.plist
SpringBoard
Workspace Change
v16@?0@"UIViewController<DBEventHandling><DBDashboardWorkspaceEntityPresenting>"8
<%@:%p type=%@ priority=%f name=%@ window=%@ bundleID=%@ pid=%d>
suspend
take
B32@?0@"DBFocusAssertion"8Q16^B24
DashBoardFocusDeferral
<%@:%p> -> %@
Very Cold
Moderately Cold
Warn
Severe
Critical
com.apple.DBThermalLevelQueue
com.apple.DBThermalObserverQueue
v12@?0i8
com.apple.system.thermalpressurelevel.cold
<%@: %p formatString=%@ dateStyle=%lu timeStyle=%lu>
yyyy-MM-dd HH:mm:ss.SSS
HH:mm:ss.SSS
distantFuture
distantPast
CarPlayIconCache
CARSmartWidgetHiddenDefaultChanged
v32@?0@"DBWidgetSceneViewController"8Q16^B24
DoorState
CurrentDoorState
TargetDoorState
Open
Closed
Opening
Closing
Stopped
<%@:%p uniqueIdentifier=%@ title=%@ start=%@ end=%@>
launch
SiriBringup
isDirectAction
messageAppBundle
messageConversationGUID
CarPlayBootstrap
com.apple.developer.carplay-protocols
B16@?0@"LSApplicationProxy"8
-[DashBoard application:didFinishLaunchingWithOptions:]
v24@?0@"<DBEnvironment>"8^B16
displayIdentifier
CARDisableDashboard
PowerState
Saturation
Brightness
TemperatureUnits
CurrentTemperature
TargetTemperature
CurrentHeatingCooling
TargetHeatingCooling
CoolingThreshold
HeatingThreshold
CurrentRelativeHumidity
TargetRelativeHumidity
ObstructionDetected
Name
Manufacturer
Model
SerialNumber
Identify
RotationDirection
RotationSpeed
OutletInUse
Version
Logs
AudioFeedback
AdminOnlyAccess
SecuritySystemAlarmType
MotionDetected
CurrentLockMechanismState
TargetLockMechanismState
LockMechanismLastKnownAction
LockManagementControlPoint
LockManagementAutoSecureTimeout
AirParticulateDensity
AirParticulateSize
AirQuality
BatteryLevel
CarbonDioxideDetected
CarbonDioxideLevel
CarbonDioxidePeakLevel
CarbonMonoxideDetected
CarbonMonoxideLevel
CarbonMonoxidePeakLevel
ChargingState
ContactState
CurrentHorizontalTilt
CurrentLightLevel
CurrentPosition
CurrentSecuritySystemState
CurrentVerticalTilt
FirmwareVersion
HardwareVersion
HoldPosition
InputEvent
LeakDetected
OccupancyDetected
OutputState
PositionState
SmokeDetected
SoftwareVersion
StatusActive
StatusFault
StatusJammed
StatusLowBattery
StatusTampered
TargetHorizontalTilt
TargetSecuritySystemState
TargetPosition
TargetVerticalTilt
StreamingStatus
SetupStreamEndpoint
SupportedVideoStreamConfiguration
SupportedAudioStreamConfiguration
SupportedRTPConfiguration
SelectedStreamConfiguration
Volume
Mute
NightVision
OpticalZoom
DigitalZoom
ImageRotation
ImageMirroring
LabelNamespace
LabelIndex
Active
CurrentAirPurifierState
TargetAirPurifierState
CurrentFanState
CurrentHeaterCoolerState
CurrentHumidifierDehumidifierState
CurrentSlatState
WaterLevel
FilterChangeIndication
FilterLifeLevel
FilterResetChangeIndication
LockPhysicalControls
SwingMode
TargetHeaterCoolerState
TargetHumidifierDehumidifierState
TargetFanState
SlatType
CurrentTilt
TargetTilt
OzoneDensity
NitrogenDioxideDensity
SulphurDioxideDensity
PM2_5Density
PM10Density
VolatileOrganicCompoundDensity
DehumidifierThreshold
HumidifierThreshold
ColorTemperature
ProgramMode
InUse
SetDuration
RemainingDuration
ValveType
IsConfigured
CARIconViewPlatterGroupName
v16@?0@"NSNotification"8
DashBoard/DBDashboardPlatterView.swift
Fatal error
init(coder:) has not been implemented
DashBoard.DBDashboardPlatterView
init(frame:)
lightIconPlatters
darkIconPlatters
_TtC9DashBoard22DBDashboardPlatterView
d16@0:8
v24@0:8d16
@24@0:8@16
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v16@0:8
burnView
materialView
wallpaperPreferences
platterCornerRadius
Td,N,VplatterCornerRadius
@"UIColor"16@?0@"UITraitCollection"8
DashBoard/DBDashboardDimmingView.swift
_TtC9DashBoard22DBDashboardDimmingView
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v24@0:8@16
dimmingRectViews
dimmingCornerViews
overlayColor
cornerRadius
contentFrame
Td,N,VcornerRadius
T{CGRect={CGPoint=dd}{CGSize=dd}},N,VcontentFrame
Down-casted Array element failed to match the target type
Expected 
NSArray element failed to match the Swift Array Element type
Expected 
Failed to register with DNDStateService: %@
Failed to query initial Focus state: %@
Updating status bar state observers
No status bar state observers, skipping update
Time string updated to: %@
Cached time string is empty or nil: %@
Unable to store time string in status bar data: %@
Time string is empty from cached string: %@
Battery data updated: %{public}@
Setting status bar battery data enabled, state: %{public}u, capacity: %{public}d, low power mode active: %{public}d
Received updated focus state %@
Received updated focus with no active mode.
Now recording bundle identifier updated to %{public}@.
Recording attribution exists, pid is %{public}d, but could not determine bundle identifier.
Recording attribution exists, but pid: %{public}d is not valid.
Announce status changed, updating announce
No available announce status!
Locale changed, resetting date formatter
Time zone changed, updating time
Available icons: %{public}@
Expected icon size: %{public}@
Expected masked icon size: %{public}@
Testing icon: %{public}@
Already found a preferended icon, skipping %{public}@
shouldReplaceWithPrerendered: %{public}@, testIconIsLargerThanSelected %{public}@, testIconIsSmallerThanSelected %{public}@, selectedIconIsTooSmall %{public}@, testIconIsLargeEnough %{public}@
Selecting new icon: %{public}@
Final OEM Icon: %{public}@
Badge value invalidated for %{public}@
Badge for identifier: %{public}@ is nil
Badge for identifier: %{public}@ is negative: %{public}ld
Badge string for identifier: %{public}@ is not a valid number: %{public}@
Badge for identifier: %{public}@ is not a number: %{public}@
Badge for identifier: %{public}@ is empty
New badge value for %{public}@: %{public}@
Skipping screenshot for screen %@
Failed to capture a screenshot for screen %@
Using corner mask image specified by test app!
Error decoding override image data!
Generating corner mask image to send to accessory.
Set cluster scene: %@
Foregrounding instrument cluster with %@
Foregrounding instrument cluster scene with no URL.
No supported application found for target identifier: %@
Skipping instrument cluster scene bringup because we already have a transaction in flight
Skipping instrument cluster scene bringup because we are invalidated
No available scene settings for instrument cluster.
Crash limit exceeded! Ignoring cluster scene foreground request.
Instrument cluster application requires preflight, ignoring scene update request.
Foregrounding instrument cluster scene with settings: %@
Instrument cluster scene transaction completed: %@
Received cluster scene: %@
Cluster scene did destroy: %@
Instrument cluster scene did invalidate: %@
Tearing down existing scene and re-sending scene
Instrument cluster scene transition failed. Retrying after %.1f seconds...
Retrying instrument cluster scene bringup
Handling death of process with identifier: %{public}@. Current nav identifier is: %{public}@
Crash count for %@ : %u
Crash count for CarPlayTemplateUIHost : %u
Dead process is template app %{public}@
Dead process had CPTUIH scene, destroying scene for identifier: %{public}@
Env vehicle appearance mode preference: %lu
Env ui style is: %ld
Env map style is: %ld
CarCapabilities updated, kicking off a style update
Determining effective map style. Always dark appearance: %{public}@, prefers dark maps: %{public}@
Using map style dark
Using environment map style: %{public}@
Attempting to get style but no vehicle available
Vehicle preference is invalid: %ld, using car capabilities value: %ld
Vehicle map style preference: %{public}ld
Attempting to get map appearance preference but no vehicle available
Vehicle pairing status: %ld
Failed to find a matching vehicle for certificate serial %@
Assigning vehicle to wallpaper preferences: %@
[DBEnvironment] Paired vehicles did change
Computing effective status bar edge for view area: %{public}@
Status bar override set to %{public}@
Using view area status bar edge: %{public}@
View area aspect ratio %f meets Dashboard portrait threshold. Checking the Dashboard's aspect ratio...
Dashboard aspect ratio %f also meets portrait threshold, moving status bar to bottom
Dashboard aspect ratio %f does not meet portrait threshold
View area aspect ratio %f does not meet Dashboard portrait threshold.
View area is%{public}@ tall enough for horizontal status bar
Applying horizontal status bar to all view areas
Initializing notification view controller...
Error revoking notification: %{public}@
Banner presenter %@ requests visibility. Enabling tap-dismiss gesture
Banner presenter %@ relinquishes visibility. Disabling tap-dismiss gesture
Borrowing screen for notification: %{public}@
Unborrowing screen for notification: %{public}@
[Notifications] Updating suspension reasons: %@
Error suspending: %@
Error revoking presentable: %{public}@
Home did update last used service of type %{public}@ %{public}@
Home did change in range %{public}@
[DBWallpaperViewController] sending wallpaper %{public}@ to CarPlayWallpaper
[DBWallpaperViewController] Received scene: %@
[DBWallpaperViewController] Did destroy scene: %@
[DBWallpaperViewController] Starting scene update
[DBWallpaperViewController] Scene update completed!
alertService:wantsPresentationForAlert: %@
alertService:wantsDismissalForAlert: %@
presenting system alert: %@
dismissing system alert: %@
presenting alert: %@ over: %@
dismissing alert: %@ over: %@
resetting Images
generating imageNamed=%{public}@ style=%{public}@
%{public}@ currentTargetDoorState=%{public}@
%{public}@
%{public}@ doorState=%{public}@
%{public}@ targetDoorState=%{public}@
%{public}@ obstructionDetected=%@
Unexpected nil hardware identifier for display configuration: %{public}@
Creating new main window: %@
Creating new status bar window: %@
Taking preventSpuriousScreenUndimToken
Invalidating unexpected preventPasscodeLockToken
Invalidating unexpected preventSpuriousScreenUndimToken
Invalidating unexpected layout element for OEM screen
Invalidating unexpected template app process monitor
Sending return to home screen event
App %{public}@ requires preflight! Showing alert.
Taking screen for alert
App %{public}@ requires preflight! Ignoring open application request from launch source %{public}@.
Taking screen for ignored open application request
Sending Siri direct action for app: %{public}@
Direct action context payload: %@
Taking screen for app launch
Ignoring open application request for unknown application!
Starting background launch for app: %@
Launch URL: %@
Launch actions: %@
Launch transaction completed with success: %@
Creating open url action: %@
Sending %lu actions to the workspace
Destroying existing throwaway scene for non-matching process identity: %{public}@
Creating throwaway scene for action delivery
Sending %lu non-workspace actions via throwaway scene
CarPlay radar item tapped, gathering screenshots and diagnostics.
CarPlay diagnostics started.
CarPlay diagnostics ended.
home button triggered
Dismissing floating Siri for pointer event
long back press triggered
Displaying recording alert for %{public}@
Displaying privacy disclosure alert for %{public}@
Accessory does not declare session support for context %{public}@; not notifying.
Enhanced Integration is not enabled; leaving context owner as Accessory.
Accessory is not context owner for %{public}@, not notifying.
Activating layout element for OEM screen
Invalidating layout element for OEM screen
Updating #wallpaper
Automatic appearance enabled, but the current wallpaper selection doesn't allow it! %{public}@
Applying #wallpaper %{public}@
Updating user interface style to %@ for scene: %@
Main screen is not requesting corner masks.
Handling focus movement action with heading: %@, shouldPerformHaptic: %@, direction: %@
Focus movement in direction is allowed
Dropping status bar focus assertion
Taking status bar focus assertion
Attempting focus transfer to OEM UI
Focus movement in direction is not allowed
Received unhandled back from CarPlay.app, not handling
Handling unhandled back action
Focus movement action received
Tap received from status bar
Current override is in call, activating InCallService
Current override is recording
Recording app is CarPlay app, activating: %{public}@
Recording app is not a CarPlay app, displaying alert
Current override is sysdiagnose, sending TTR event
didCreateScene: %@
bundle ID: %@
appInfo: %@
InterfaceStylePreference is: %ld
Always dark enabled, returning dark style
Using car user interface style: %@
Using map style: %@
Invalidating preventPasscodeLockToken
Invalidating preventSpuriousScreenUndimToken
Invalidating OEM layout element
Taking screen for home event
Requesting Siri activation
CarPlay radar item long-pressed, gathering screenshots.
Finished saving screenshots.
Borrowing screen for InCall
Using existing screen borrow token for InCall
Pending InCall activation until after lock out
Unborrowing screen for InCall
Setting banners %@ for InCallService
Taking screen for connection (requestUI), to lockout
Taking screen for connection, to lockout
Evaluating active app %{public}@ from previous session
Requested previous session app %{public}@ requires preflight; ignoring.
Requested previous session app %@ is not valid for current session; ignoring.
No enhanced integration consent; not notifying accessory about starting context.
Notifying accessory about iOS ownership of starting UIContext %{public}@
Accessory does not support starting UIContext %{public}@
No available UIContext for starting application.
Taking screen for connection (requestUI), animating scaled
Taking screen for connection, animating scaled
Taking screen for connection (requestUI), animating to home screen
Taking screen for connection, animating to home screen
Ignoring Siri prewarm action due to lockout mode: %@
Siri prewarm assertion being requested when one already exists
Received Siri prewarm action, sending accessory timestamp: %f
Received Siri prewarm action
Ignoring external Siri button down action due to lockout mode: %@
Received external Siri button down action
Home button assertion being requested when one already exists
Using prewarm timestamp: %f
Using button down timestamp from accessory: %f
Invalidating Siri prewarm assertion
Sending Siri long press event
Ignoring external Siri button up action due to lockout mode: %@
Received external Siri button up action
Invalidating Siri button down assertion
Received openURL request for %@
Sending requestUI take immediately
Deferring requestUI take until connect
Resolved URL request to %@
Received Echo Context event %{public}@ for which the accessory did not declare support; dropping.
Enhanced Integration is not enabled; skipping requestUI echo.
Requested URL already visible on iOS. Requesting from accessory.
Car owns the screen, no requestUI sent.
No available now-navigating app; defaulting to nav category.
No available now playing app; defaulting to audio category.
No available audio app to launch from music: context.
Taking screen for requestUI mobilephone, launching to in-call UI
No available app for requestUI URL %{public}@
No user consent for launching app by URL.
Unable to resolve a URL request for URL %{public}@: %@
Couldn't resolve a URL request for %{public}@ to a bundle identifier.
Received UIContext event %{public}@ for which the accessory did not declare support; dropping.
Received UIContext event %{public}@, updating ownership to accessory.
Received unhandled remote event %{public}@; dropping.
System UserAlerts are not supported in CarPlay
Notification view controller is presenting a banner, but we have no banner scene!
Appearance style changed for environment, updating user interface style
Night mode changed for environment to: %{public}@
Maps style changed for environment to: %{public}@, updating user interface style on scenes that can use Maps style
Updating ui style with maps style to: %{public}@, for scene: %{public}@
Updating map style to: %{public}@, for scene: %{public}@
Ignoring map style update for scene: %{public}@
Taking preventPasscodeLockToken
Handling death of process with identifier: %{public}@
Dead process had template host scene, destroying scene for identifier: %{public}@
Handling post-death of process with identifier: %{public}@
Focus item state: %{public}@
Updating frame for widget scene: %@, to %@
Set widget scene: %@
Resetting crash monitoring for updated target bundle ID %@
Setting loading view: %@ for %@
Animating loading view: %@
Loading view: %@ is not in hierarchy, skipping animation
Received widget scene: %@
Widget scene did destroy: %@
Scene widget selected
Widget enabled, attempting scene update.
Widget disabled
Destroying scene: %@
Widget is not enabled, ignoring scene update request.
Widget is invalidated, ignoring scene update request.
Widget does not have application info, ignoring scene update request.
Waiting for retry timer before starting scene update transaction.
Crash limit exceeded! Ignoring widget scene foreground request, and switching to loading view.
Widget application requires preflight, ignoring scene update request.
%@ performing scene update with ui style: %@, map style: %@
Widget scene transaction completed: %@
%@ performing post scene update with ui style: %@, map style: %@
Loading view present, will attempt animating removal: %@ - %@
Loading view present but scene not ready yet. Content state ready: %{public}@, proxy app? :%{public}@, proxy scene content ready: %{public}@
Widget scene did invalidate: %@
Tearing down existing scene
Scene invalidated, widget invalid: %{public}@, same identifier: %{public}@
Widget scene transition failed. Retrying after %.1f seconds...
Retrying widget scene bringup
Unable to retrieve touch policy server
Incoming connection for touch sharing service
Touch sharing service interrupted
Touch sharing service invalidated
Context id updated for %@
New focusable items for client: %@, items %{public}@
Widget scene content ready %@
Widget scene content not ready: %@
Taking snapshot: %@
Displaying snapshot debug label: %@
Using snapshot view: %@ - %@
Dead process is current widget target identifier, disabling widgets
Dead process was current widget target identifier, enabling widgets
Workspace state change session watchdog timer fired!
State changed: %@
Pending request: %@
Handling request in current session (%p): %@
Applying session UI contexts: %@
No enhanced integration consent for launch UI Contexts.
No known context owner for context %{public}@, defaulting to accessory.
Notifying accessory for iOS ownership of context %{public}@
Reverting context %{public}@ to accessory ownership.
Accessory is already owner of context %{public}@
No available session UI contexts.
Applying session echo contexts: %@
No available session echo contexts.
Application %@ does not support CarPlay.
Application %@ is not available in the current layout.
No available application for URL %@
Resolved universal link to %@
Failed opening a universal link with %@
Opened a universal link for %@
Indeterminate result for universal link for %@
Unable to locate any candidate app to launch %@
Evaluating application URL %@
Resolved URL to %@
Workspace did change to active app %@
Workspace change event %@
Previous session showUI: %@
No showUI from previous session.
No previous showUI dictionary initialized.
received IC Hid Event: MenuUp
received IC Hid Event: MenuDown
received IC Hid Event: MenuLeft
received IC Hid Event: MenuRight
received IC Hid Event: MenuPick (Select)
received IC Hid Event: ACBack
Cluster screen %@ is requesting corner masks
Cluster screen %@ is not requesting corner masks
updateForScene: (%@) preparedWithContext: (%@)
updateForScene: (%@) appliedWithContext: (%@)
updateForScene: (%@) completedWithContext: (%@)
Received showUI for %{public}@
Creating instrument cluster root view controller.
Foregrounding instrument cluster scene.
Saving showUI URL to defaults: %@ for identifier: %@
Received an unsupported showUI URL: %@
Updating user interface style to %lu for scene: %@
Maps style changed for environment, updating user interface style on scenes that can use Maps style
Zoom command received for cluster display with direction: %{public}@, sending to scene: %{public}@
Active navigation identifiers changed
keybag is not locked! state: %ld
keybag is locked! state: %ld
Device is blocked!
Device is not blocked.
Starting focus ring fade timer
Not eligible for focus ring fade
Focus ring fade has correct interface style: %@, correct night setting: %@
Fading focus ring
Unfading focus ring
In-call widget avatar button selected
In-call widget app icon button selected
In-call widget multiway title button selected
In-call widget mute button selected
%@ current call
In-call widget end call button selected
Requesting activation of InCallService
Using multiline label for multiway telephony call.
Using multiline label for multiway FaceTime call.
Using multiline label because call has no stored contact identifier.
Not using multiline label for call.
Invalidating layout element for Siri
Signalling Siri activation success
Activating layout element for Siri
Initializing SiriPresentationViewController with presentationFrame: %@
DBSiriViewController is now unpaired. Invalidating...
Adding touch to dismiss requester: %@.
Removing touch to dismiss requester: %@.
Updating hosted presentation frame for screen resize
Requesting dismissal of Siri due to DBHomeEventType %li
Siri presentation requested!
Borrowing screen for Siri
Siri dismissal requested!
Unborrowing screen for Siri
Siri punchout requested! %@
Unable to lookup target bundle ID for punchout request! URL: %@
Unable to lookup app info for punchout request: %@
Punchout application requires preflight, ignoring launch request.
Handling in-place punchout for %{public}@
Handling punchout for %{public}@
Requesting dismissal because user touched screen
Received drop call button event, requesting dismissal.
Enabling touch to dismiss.
Disabling touch to dismiss.
%{public}@ characteristic=%{public}@
%{public}@ accessory=%{public}@
%{public}@ accessory=%{public}@ HMService=%{public}@ HMCharacteristic=%{public}@
_hasHandledConnect=%@ hasHandledConnect=%@
_hasFinishedConnecting=%@ hasFinishedConnecting=%@
_pageType=%@ pageType=%@
_activeBundleIdentifier=%@ activeBundleIdentifier=%@
Attempt to deactivate application with nil appInfo
Attempt to destroy application with nil appInfo
Attempt to activate application with nil appInfo
Attempt to activate stacked application with nil appInfo
Updating frame for widget scene: %@, to %@, with animation settings: %@
%{public}@ garageDoors=%{public}@
%{public}@ kicking the garage door cache
%{public}@ clearing the garage door cache
%{public}@ serviceType=%{public}@
%{public}@ serviceType=%{public}@ service.uniqueIdentifier=%{public}@ error=%{public}@
%{public}@ previouslyInRange=%{public}@ homeLocationStatus=%{public}ld
%{public}@ setValue: %{public}@
%{public}@ setValue completion: %{public}@ error=<%{public}@>
%{public}@ (requireRead=%@) skipping
%{public}@ (requireRead=%@) readValue
%{public}@ readValue completion: transactionID %lu != %lu
%{public}@ readValue completion: value=%{public}@ error=<%{public}@>
current=%{public}@
update=%{public}@
Registering animation for identifier: %@ client: %@
Attempting to run animation for identifier: %@ client: %@
Running animation for identifier: %@
Postponing animation for identifier: %@, not all clients ready
Deactivating layout element for application: %@
[DBApplicationSceneViewController] Set scene: %@
Suspended launch requested, but the app is foregrounded. Treating the request as foreground.
Preserving existing deactivation reasons (%ld) for suspended launch.
[DBApplicationSceneViewController] Foregrounding car scene for app: %@%@
[DBApplicationSceneViewController] Attaching actions to scene update: %@
[DBApplicationSceneViewController] Attaching URL to scene update: %@
[DBApplicationSceneViewController] Scene update completed for app: %@
Activating layout element for application: %@
[DBApplicationSceneViewController] Backgrounding car scene for app: %@
[DBApplicationSceneViewController] Tried to activate, but we don't have a scene
[DBApplicationSceneViewController] Attaching actions to scene activation: %@
[DBApplicationSceneViewController] Attaching URL to scene activation: %@
[DBApplicationSceneViewController] Activating scene: %@
[DBApplicationSceneViewController] Tried to deactivate, but we don't have a scene
[DBApplicationSceneViewController] Deactivating scene: %@, reasonMask: %ld
[DBApplicationSceneViewController] Received scene: %@
[DBApplicationSceneViewController] Did destroy scene: %@
Showing spinner.
Invalidating spinner timer.
Hiding spinner.
Spinner already hidden.
No available now playing app for dashboard.
Sending play/pause action.
Sending next action.
Sending back action.
Performing Now Playing change request: %@
Error performing change request: %@
Unable to generate a playback command for action %{public}@ state %{public}@
Cancelling held action.
Setting not-playing state.
No available artwork catalog for current song.
Fetching artwork with size %@
Received artwork %@ for item %@
No playing item associated to loaded artwork %@
Failed to load artwork for current playing item %@
No artwork and no current playing item.
Updating labels for current song %@
No available title for current playing item.
No available artist name for current playing item.
Received request for unknown skip forward interval: %{public}@
Setting skip forward button interval %@
Setting next button enabled: %{public}@
Received request for unknown skip backward interval: %{public}@
Setting skip backward interval %@
Setting back button enabled: %{public}@
Setting stop button for livestreaming/loading content in state %@.
Setting pause button for state %@
Setting play button for state %@
Received an empty player response.
Received player response with playing index path %@
Updating now playing song: %@
Received player response without any available now playing item.
Set prediction: %{public}@
Prediction updated: %{public}@
Refreshing predictions for visibility change
%@ not found in the application library
now=%{public}@
considering calendar %{public}@
%{public}@ calendar %{public}@
considering event %@
event is allDay
event ends before now
event canceled
event declined
%{public}@ event %{public}@
Refreshing predictions for event store change
Refreshing predictions Application Library Refresh
Requesting Engine start
Performing action
No action to perform
Performing refresh
Requesting previous prediction
Requesting next prediction
Predictions updated
UUID failed: input=%{public}@ generated=%{public}@
Opening calendar with URL %{public}@
initialValidInterval invalid %{public}f
beforeStartDateValidInterval invalid %{public}f
Activating home screen layout element
Invalidating home screen layout element
Got a nil TO presentation view for identifier: %@
Got a nil FROM presentation view for identifier: %@
bundlePath=%@
init locationManager %{public}p
dealloc locationManager %{public}p
%{public}@ delayed(%{public}@) used cachedCurrentLocation count=%{public}ld
%{public}@ delayed(%{public}@) cachedCurrentLocation used count=%{public}ld
%{public}@ delayed(%{public}@) updated cachedCurrentLocation
%{public}@ startActiveLocationUpdatesFor=%{public}@
%{public}@ starting
%{public}@ stopActiveLocationUpdatesFor=%{public}@
%{public}@ stopping
%{public}@ identifier=%{public}@ currentDistance=%{public}.1f range=%{public}.1f
%{public}@ identifier=%{public}@
%{public}@ status=%{public}d
%{public}@ error=%{public}@
%{public}@ state=%{public}ld region=%{public}@
%{public}@ region=%{public}@
already have handle for process: %@
Resolved maps app dock item to %@
Resolved audio app dock item to %@
Resolved other app dock item to %@
Selected app dock item for bundle identifier %@
Evaluating active dock bundle identifier %@
Bundle identifier is not valid for dock.
Bundle identifier is not visible in layout.
Updating navigation bundle identifier in dock.
Updating audio bundle identifier in dock.
Updating other bundle identifier in dock.
No need for dock bundle identifier update - already visible.
No available navigation application; not updating app dock.
Updating navigation app dock bundle identifier to %@
Unable to update navigation bundle identifier.
No available now playing application; not updating app dock.
Now playing app is not playing; not updating app dock.
Updating now playing app dock bundle identifier to %@
Unable to update now playing bundle identifier.
ILVDP: Application icon info requested for %@
[DBLockOut] lockOutMode updating to %@
Badge settings updated for identifiers: %{public}@
Skipping app %@
DHVC: Application icon info requested for %@
Dashboard not enabled!
No available now playing app to launch from Now Playing.
Invalidating badge for: %{public}@
Data store updated badge value for %{public}@
init networkPathMonitor %{public}p
dealloc networkPathMonitor %{public}p
%{public}@ startNetworkPathMonitorFor=%{public}@
%{public}@ stopNetworkPathMonitorFor=%{public}@
%{public}@ unable to start
%{public}@ start
%{public}@ done
Received layer metadata: %@
Sending metadata to delegate: %@
No delegate to receive metadata
Invalidating layer metadata service
Incoming connection to layer metadata service: %@
Connection not entitled: %@
Connection interrupted: %@
Connection invalidated: %@
Resuming layer metadata connection from %@
No available cluster URL.
Received a base instrument cluster URL; using type AnyContent
Received instrument cluster URL of type instructioncard.
Received instrument cluster URL of type map.
Received an invalid instrument cluster URL: %{public}@
Active navigation identifiers changed: %{public}@
Device is locked, showing alert
Activating splash screen alert
Device is not locked, will not present splash screen alert
Remote alert connected
Alert did activate
Alert did deactivate
Alert did invalidate with error: %@
Hiding status bar for active identifier: %@
Dock icon selected for ID: %@
Soft home button down
Soft home button up
Soft home button tapped
Soft home button cancelled
Soft home button long pressed
[DBLockOutController] Setting new lock out mode: %@
Activating layout element for lock out screen
Invalidating layout element for lock out screen
[LockOut] Action: requesting car UI
[LockOut] Action: enabling siri
[LockOut] Action: disclosure safe
[LockOut] Action: features off
init smartWidgetEngine %{public}p
dealloc smartWidgetEngine %{public}p
startIfNeeded stoppingTimer=%{public}@
stopIfNeeded stoppingTimer=%{public}@
stopIfNeeded stopDelay=%{public}.0f
refreshPredictions requested
refreshDisabled requested
refreshGarageDoors requested
reset currentPredictions
Source=%{public}@ fresh=%{public}@ lastRefresh=%{public}@
Predictions Fresh %{public}@ lastRefreshRequest=%{public}@
Engine starting
Engine started
Engine stopping
Engine stopped
Generating currentPredictions
keep=%{public}@ prediction=%{public}@
nextRefresh=%@
Invalid refresh %{public}.2f
Scheduling refresh in %{public}.0f
Triggering refresh
No Scheduled refresh (distantFuture)
source=%{public}@ updated=%{public}@
fresh=%{public}@ pending=%{public}@
currentPredictions:
connectionReady=%@
lockoutState=%@
pageType=%@
activeBundleIdentifier=%@
connectionReady=%@ lockoutState=%@ activeBundleIdentifier=%@ pageType=%@
Received unknown app URL %{public}@ not included in master list
Received unknown echo URL %{public}@ not included in master list
Updated user notification settings %{public}@
User Notification settings updated for: %{public}@
start %{public}@
done %{public}@ predictionsDidUpdate=%{public}@
match: doorState %{public}@
match: targetDoorState %{public}@
match: obstruction %{public}@
match: NONE(%@) %{public}@
characteristic.uniqueIdentifier=%{public}@ targetDoorStateCharacteristic.uniqueIdentifier=%{public}@
Scene update for appInfo: %@ to map style %@
Scene update for appInfo: %@ to style %ld
Scene update for appInfo: %@ to map style %ld
Transaction fail interval provider: %f seconds
Fail timer fired for transaction: %@
Transaction is running, failing: %@
SceneUpdate transaction for scene: %@ completed with success: %@
[DBSceneUpdate] Delivering deferred actions to scene: %@
Firing scene update completion
Starting sceneUpdate transaction %@
Post Scene update for appInfo: %@ to style: %@, map style %@
didConnectIdentity:%{public}@, is car display: %{public}@, is cluster display: %{public}@
didUpdateIdentity:%{public}@
willDisconnectIdentity:%{public}@
Discarding pending display: %{public}@
Session connected: %@
Session disconnected: %@
Main screen is requesting corner masks.
No pending displays
Session not yet available
Handling connected displays: %{public}@ with session: %{public}@
 enableTelemetry=YES 
CarPlayReceivedMainDisplay
Setting badge visible: %{public}@ for app dock button: %{public}@
Icon accessories did update for icon: %{public}@, app dock button: %{public}@
Icon accessories update for icon: %{public}@, did not match self icon: %{public}@
Updating active bundle identifier to %@ in %@
Already sent sessionStarted Event
iOS now owns main audio.
Accessory now owns main audio.
Announce Messages: %@
Maps appearance preference changed: %@
Received location bitset %@
Sending CA event %@ with %@
Unrecognized analytics event %@
Exported state %@
%@ importing icon state %@
Hiding News per News app policy.
Failed saving current icon state: %@
init homeManager %{public}p
dealloc homeManager %{public}p
requestAuthorization error=%{public}@
Setting up homeManager
Updating homes
newHomes=%{public}@ removedHomes=%{public}@
Flattened pages to %@
Beginning session: %@
Ended session: %@
Starting display layout publisher transition for workspace change session: %@
[WorkspaceOwner] Starting update for base view controller
[WorkspaceOwner] Update for base view controller completed
[WorkspaceOwner] Starting dismissal of base view controller
[WorkspaceOwner] Dismissal of base view controller completed
[WorkspaceOwner] Starting presentation of base view controller
[WorkspaceOwner] Presentation of base view controller completed
[WorkspaceOwner] Starting update for stacked view controller
[WorkspaceOwner] Update for stacked view controller completed
[WorkspaceOwner] Starting dismissal of stacked view controller
[WorkspaceOwner] Dismissal of stacked view controller completed
[WorkspaceOwner] Starting presentation of stacked view controller
[WorkspaceOwner] Presentation of stacked view controller completed
[WorkspaceOwner] Starting suspended activation
[WorkspaceOwner] Suspended activation completed
Invalidating display layout publisher transition for workspace change session: %@
[WorkspaceOwner] Delivering suspended activation to existing view controller
[WorkspaceOwner] Using transient view controlller for suspended activation
No available audio app for now playing.
Now playing app is web content; ignoring.
Now playing app is not valid for CarPlay; ignoring.
Resolved now playing launch info to %@
Resolved now playing identifier to %@
No available now playing app proxy.
Now playing application is restricted; ignoring.
No changes to now playing bundle identifier.
Updated now playing to %@
Sending focus movement action: %@ to scene: %@
Deferring events for display: %@, to context: 0x%x for window: %@, pid: %d
hot condition changed from %llu to %llu
hot condition initialized to %llu
notify_register(hot) failed : status=%i
cold condition changed from %llu to %llu
cold condition initialized to %llu
notify_register(cold) failed : status=%i
Thermal level changed to %{public}@ (%{public}d)
Smart widget hidden default changed: %@
Turned on Malloc Stack Logging Lite for CarPlay
CarPlay hit 100 percent of its jetsam limit. Malloc Stack Logging Lite will automatically be turned on next time CarPlay is launched.
received open application request! %@
Dashboard has been disabled with user default
Resolved target dashboard identifier is %{public}@, current identifier is: %{public}@
Updating navigation widgets to new identifier
Target dashboard identifier is nil, keeping identifer as %{public}@
Active navigation identifier is different: %@
Handling post-death of process with identifier: %{public}@. Current nav identifier is: %{public}@
Geo services are supported.
Geo services are not supported in this country.
SgXw
So6UIViewC
So14MTMaterialViewCSg
So25CRSUIWallpaperPreferencesC
yyXlG
ySo17UITraitCollectionC_SStG
ySo17UITraitCollectionCSSG
SaySo6UIViewCG
SaySo11UIImageViewCG
So7UIColorC
burnView
materialView
wallpaperPreferences
platterCornerRadius
dimmingRectViews
dimmingCornerViews
overlayColor
cornerRadius
contentFrame
origin
size
width
height
AppDock
DBAppHistoryAppDockProviding
NSObject
DBStatusBarStateProvider
CRSSiriPreferencesObserver
DNDStateUpdateListener
UNNotificationSettingsCenterDelegate
BSInvalidatable
DBWorkspaceObserver
UIStatusBarStateProvider
UIStatusBarStyleDelegate_SpringBoardOnly
UIStatusBarStyleDelegate
DBDashboardAnimation
DBEvent
DBFromStackedAppAnimationSettings
DBFromStackedAppAnimation
DBDashboardLayoutEngine
DBLeafIconDataSource
SBLeafIconDataSource
DBScreenshotManager
DBScreenshotFlasher
DBInstrumentClusterRootViewController
DBEnvironmentConfigurationObserving
FBSceneObserver
DBProcessMonitorObserving
FBSceneManagerObserver
DBStatusBarHostWindow
DBHomeKitBoolCharacteristic
DBEnvironmentConfiguration
CARSessionCommandObserving
DBAppPolicyProviding
DBIconListPageControl
DBLeafIcon
DBStatusBarHomeButton
DBInCallWidgetButtonRingView
DBInCallWidgetButton
DBInCallWidgetMultiwayTitleButton
DBInCallWidgetAppIconButton
DBNotificationView
DBBannerAuthority
BNConsidering
DBNotificationViewController
BNBannerSourceListenerDelegate
BNPresentingDelegate
DBNotificationSuspending
DBSmartWidgetHomeSource
DBHomeManagerObserver
DBHomeObserver
DBWorkspaceStateChangeRequest
NSCopying
NSMutableCopying
DBMutableWorkspaceStateChangeRequest
DBWallpaperViewController
DBCalendarLeafIcon
DBUserAlertServer
URTAlertServiceDelegate
DBSmartWidgetHomePrediction
DBGarageDoorObserver
DBHomeKitServiceObserver
_DBLongPressGestureRecognizer
_DBCornerRadiusWindow
CRSUIMapStyleProviding
CRSUIMutableMapStyleProviding
DBDashboard
DBLockoutControllerDelegate
DBNotificationViewControllerDelegate
DBSystemAlertPresenting
CRSInCallAssertionServiceObserver
DBEnvironment
DBEventHandling
FBSceneManagerDelegate
DBApplicationLaunchInfo
DBScrollButton
DBFolderView
DBWidgetFocusableView
CRSUIDashboardWidgetWindowService
CRSUIDashboardWidgetWindowClient
DBWidgetSceneViewController
DBWidgetFocusableViewDelegate
NSXPCListenerDelegate
_DBWorkspaceStateChangeSession
DBWorkspaceStateChangeSession
DBWorkspace
DBDashboardEntity
DBDashboardSiriEntity
DBDashboardHomescreenEntity
DBDashboardApplicationSceneEntity
DBDashboardProxiedApplicationSceneEntity
DBLockOutWindow
DBAppHistoryObserving
DBAppHistory
StateResolution
DBDashboardWorkspaceStateResolution
DBDashboardWorkspaceStateResolver
DBToStackedAppAnimationSettings
DBToStackedAppAnimation
_DBClusterCornerRadiusWindow
DBInstrumentCluster
DBNavigationStateObserving
DBLockOutView
DBStatusBarScreenResizeButton
DBKeybagMonitorObserver
DBKeybagMonitor
DBNowPlayingIcon
DBIconDropShadowProvider
DBAppToAppAnimation
_DBAppSwitchDosidoAnimation
_DBAppSwitchReducedMotionAnimation
DBWidgetFocusRingView
DBWidgetView
DBWidgetViewController
DBWidgetViewFocusEnabledProviding
DBAppDockItem
DBInCallWidgetViewController
DBStatusBarWindow
DBSmartWidget
DBAdditions
_DBWidgetState
DBWidgetStackViewController
DBSiriViewController
SiriPresentationControllerDelegate
SiriPresentationIntentUsageDelegate
DBDashboardWorkspaceEntityPresenting
DBHomeKitService
HMAccessoryDelegate
DBHomeKitEntity
DBDashboardWorkspaceState
DBWorkspaceState
DBMutableDashboardWorkspaceState
DBDashboardStateObserver
DBDashboardStateProvider
DBHomeViewPageChangeObserving
Dashboard
DBMapsWidgetViewController
DBHome
DBLocationManagerObserver
DBNetworkPathMonitorObserver
HMHomeDelegatePrivate
HMHomeDelegate
DBHomeKitCharacteristic
DBBooksLeafIcon
DBIconScrollView
DBBuddyMonitorObserver
DBBuddyMonitor
DBAnimationView
DBColorButton
DBAnimationSettings
DBSmartWidgetPredictionObserver
DBSmartWidgetPrediction
DBTodayViewSynchronizedAnimation
DBTodayViewSynchronizedAnimationManager
DBApplicationSceneViewController
DBNowPlayingWidgetViewController
CPUINowPlayingObserving
DBNowPlayingDelegate
MPRequestResponseControllerDelegate
DBNowPlayingFocusHighlightButton
DBStatusBarViewController
DBZipArchiver
DBArchiving
DBSmartWidgetView
DBFocusMovementManager
DBSmartWidgetCalendarSource
DBSmartWidgetViewController
DBSmartWidgetEngineObserver
UIGestureRecognizerDelegate
DBInstrumentClusterWorkspaceOwner
DBWorkspaceOwner
DBWorkspaceStateChangeSessionDelegate
DBSmartWidgetCalendarPrediction
DBIconLabelBackdropView
DBIconView
DBDashboardViewStateObserving
DBDashboardRootViewController
DBAppToHomeAnimationSettings
DBAppToHomeAnimation
_DBSuspendAppToHomeZoomAnimation
_DBSuspendAppToHomeScaleAnimation
_DBSuspendAppToHomeReducedMotionAnimation
DBUserAlertViewController
DBUserAlertView
DBStatusBarHomeButtonStateManager
DBLocationManager
CLLocationManagerDelegate
DBProcessMonitor
DBStatusBarButton
DBAppDockViewController
DBIconListView
DBIconLayoutVehicleDataProvider
DBIconModelApplicationDataSource
SBHIconManagerDelegate
CRSIconLayoutVehicleDataProviding
DBLockOutViewController
DBLockOutViewDelegate
DBDashboardHomeViewController
DBIconBadgeControllerObserving
FBSApplicationDataStoreObserver
SBRootFolderControllerDelegate
SBFolderControllerDelegate
DBIconProviding
DBCalendarLeafIconDataSource
DBNetworkPathMonitor
CRLayerPropertyService
DBLayerMetadataService
DBInstrumentClusterURLHandler
DBNavigationStateProvider
CARActiveNavigationIdentifiersObserving
DBHomeKitServiceTypes
DBSplashScreenDismissalService
DBSplashScreenDismissalServer
DBSplashScreenAlert
SBSRemoteAlertHandleObserver
DBRootStatusBarViewController
CRSUIStatusBarStyleServiceDelegate
DBAppDockViewControllerDelegate
DBStatusBarButtonStateManagerDelegate
DBLockOutController
DBDisclosureMonitorObserver
DBLockOutViewControllerDelegate
DBSiriMonitorObserver
DBThermalMonitorObserver
DBSmartWidgetEngine
DBSmartWidgetResourceProvider
DBSmartWidgetSourceDelegate
Contexts
DBDisclosureMonitor
_DBIconListLayoutProvider
SBIconListLayoutProvider
DBIconManager
DBHomeToAppAnimationSettings
DBHomeToAppAnimation
_DBLaunchAppFromHomeZoomAnimation
_DBLaunchAppFromHomeScaleAnimation
_DBLaunchAppFromHomeReducedMotionAnimation
DBUtilities
DBIconBadgeController
DBSmartWidgetSource
DBGarageDoor
DBDashboardWorkspaceStateChangeItem
DBWorkspaceStateChangeItem
DBDashboardWorkspaceStateSiriChangeItem
DBDashboardWorkspaceStateHomescreenChangeItem
DBDashboardWorkspaceStateApplicationSceneChangeItem
DBDateRange
DBNotificationWindow
DBFolderController
DBSceneUpdate
DBDisplayManager
CARSessionObserving
DBNavigationAppInfoProviding
FBSDisplayObserving
DBStatusBarSensorIndicatorView
DBSiriMonitor
DBInCallWidgetAvatarView
DBComparison
DBAppDockButton
SBLeafIconObserver
SBIconObserver
DBAnalytics
Analytics
_DBAnalyticsAppInfo
_DBAnalyticsScreenInfo
_DBAnalyticsTimeAccumulator
_DBAnalyticsChargeInfo
DBMapsNavigationWidgetViewController
DBApplicationInfo
CarPlayApp
DBIconModel
DBHomeManager
DBHomeKitResourceProvider
HMHomeManagerDelegate
DBIconModelStore
DBBooksLeafIconDataSource
DBDashboardWorkspaceOwner
DBAppAlertPresenting
DBNowPlayingObserver
DBFocusAssertion
DBFocusController
DBThermalMonitor
DBOEMIcon
DBDateFormatterToken
DBDateFormatter
DBIconImageCache
DBWidgetContainerViewController
DBSmartWidgetAnimating
DBWidgetSizeManaging
DBHomeKitDoorStateCharacteristic
DBLayoutHelperView
DashBoard
CRSAppHistoryDataProviding
CRSAppHistoryServiceDelegate
CRSIconLayoutServiceDelegate
FBSystemServiceDelegate
DBTodayViewController
DBLayoutHelperViewDelegate
SBHLegibility
DBHomeKitCharacteristicTypes
showTrustedLockout
setLineWidth:
_currentTraitCollection
windowForSystemGesturesForDisplayWithIdentity:
filterWithName:
numberWithUnsignedLong:
installedApplicationWithBundleIdentifier:
layoutIfNeeded
filterWithType:
object
characteristicType
intValue
layoutManager
firstBaselineAnchor
signalStrengthBars
objectAtIndex:
deactivate
integerForKey:
relayout
setLocale:
siriActivationOptions
objectAtIndexedSubscript:
iconViewForIcon:location:
setDateFormat:
integerValue
setLocalizedDisplayName:
targetWithPid:environmentIdentifier:
firstObject
chargingState
objectForKey:
layoutRole
icons
reloadIconImage
deactivateConstraints:
setSettings:
fixedCoordinateSpace
appState
objectForKeyedSubscript:
cleanup
setDateTemplate:
reloadIcons
setLocationAuthorization:
appearanceModePreference
setAccessibilityContrast:
setShadowColor:
CGImage
flipDashboardLayout
objectsAtIndexes:
clearArtworkCatalogs
remoteObjectProxy
setAccessibilityIdentifier:
appendArraySection:withName:skipIfEmpty:
floatForKey:
workspaceIdentifier
leafIconForIdentifier:
clearColor
setDefaults
objectsForInfoDictionaryKeys:
removeAllObjects
floatValue
appendFormat:
setShadowOffset:
setAccessibilityLabel:
objectsPassingTest:
setDefinesDisplayRegionOfInterest:
leafIcons
clearDesiredIconState
textLayoutGuide
removeAllPoints
interfaceStyle
appendObject:withName:
setShadowOpacity:
writeRequestWithCharacteristic:value:
setAccessibilityValue:
observeDataWithBlock:
leafIdentifier
interfaceWithProtocol:
removeFromParentViewController
leftAnchor
appendObject:withName:skipIfNil:
setShadowPathIsBounds:
identifierWithPid:
setDescriptors:
clientIdentity
observeDidAddApplicationsWithBlock:
internalSettingsValue
setShadowRadius:
identity
clientProcess
setDesiredAccuracy:
observeDidAddPlaceholdersWithBlock:
removeLayoutGuide:
length
setShape:
identityForEmbeddedApplicationIdentifier:
setDestination:configurationBlock:
observeDidCancelPlaceholdersWithBlock:
decimalDigitCharacterSet
removeNowPlayingObserver:
applicationBundleID
setShouldApplyMask:
identityForIdentifier:workspaceIdentifier:
setDestinationScale:
observeDidRemoveApplicationsWithBlock:
removeObject:
absoluteString
timeIntervalSince1970
declarationForAppProxy:
applicationCategory
setShouldRasterize:
setDictionary:
observeDidReplaceApplicationsWithBlock:
removeObjectAtIndex:
invalidateIntrinsicContentSize
timeIntervalSinceDate:
declarationForBundleIdentifier:info:entitlements:bundlePath:
imageData
removeObjectForKey:
setMagnificationFilter:
accessory
defaultAction
timeIntervalSinceNow
imageDescriptorNamed:
timeIntervalSinceReferenceDate
removeObjectsAtIndexes:
applicationInfoForBundleIdentifier:
focusMovementInfo
imageForDescriptor:
setDirection:
colorEffectSaturate:
removeObjectsInArray:
defaultConfiguration
setActions:
colorWithAlphaComponent:
setDisableFiveRowKeyboards:
imageForImageDescriptor:
defaultFocusPredicate
invalidatedAtTimestamp:
removeObjectsInRange:
applicationProxyForIdentifier:
siriViewControllerConfigured
colorWithCGColor:
imageForKey:
timerWithTimeInterval:target:selector:userInfo:repeats:
invertedSet
setShowsCompass:
size
colorWithDynamicProvider:
removeObserver:forKeyPath:
ipc_addPolicy:
defaultManager
timestamp
setShowsETA:
focusSystemForEnvironment:
imageNamed:inBundle:
sizeToFit
colorWithRed:green:blue:alpha:
setDisplay:
removeObserver:name:object:
setMass:
defaultPrivateConfiguration
setShowsProgressLabels:
loadViewIfNeeded
imageNamed:inBundle:compatibleWithTraitCollection:
openWithConfiguration:completionHandler:
colorWithWhite:alpha:
defaultShellMachName
removeObserverForToken:
setMaxConcurrentOperationCount:
setShowsSpeedLimit:
_endpoint
applicationsAvailableForOpeningURL:
imageOrientation
_sceneForFBSScene:
options
defaultSystemPredicate
removeScene:
setShowsSquareCorners:
setDisplays:
commandWithType:
smartWidgetDebugShowScore
renderInContext:
localIdentity
imageWithCGImage:
commit
setDisplaysOEMIcon:
defaultWallpaper
isAllDay
localizedName
imageWithCGImage:scale:orientation:
setDistanceEffect:
defaultWorkspace
replaceObjectAtIndex:withObject:
localizedNameForContext:
imageWithConfiguration:
otherAction
setDistanceFilter:
todayViewVisibilityProgress
actionWithHandler:
replaceOccurrencesOfString:withString:options:range:
localizedStringForKey:value:table:
setSiriPresentationControllerDelegate:
archiveRootFolderInModel:metadata:
imageWithData:
setDistribution:
componentsJoinedByString:
actionWithTitle:style:handler:
isArtworkVisuallyIdenticalToCatalog:
requestAdjacentViewAreaForScreenID:
deferEventsMatchingPredicate:toTarget:withReason:
tokenForIdentifierOfCAContext:
_flatImageWithColor:
localizedStringFromNumber:numberStyle:
focusedFrame
imageWithData:scale:
smartWidgetRelaxHomeInRangeCheck
componentsSeparatedByString:
isAssociatedToIOSHotspot
definition
actions
requestAuthorization:completionHandler:
setAdditionalSafeAreaInsets:
localizedStringWithFormat:
focusedItem
snapshotContext
componentsWithURL:resolvingAgainstBaseURL:
imageWithHorizontallyFlippedOrientation
requestCarUI
isAuthorized
setAdjustsFontForContentSizeCategory:
arrangedSubviews
folder
snapshotPresentationForSnapshot:
setDomain:
isBatterySaverModeActive
requestCarUIForURL:
setMinificationFilter:
deleteIconState
array
setAdjustsImageWhenDisabled:
setSize:
pageControl
setDomainIdentifier:
requestIdentifier
CADisplay
setAdjustsImageWhenHighlighted:
locationInView:
folderControllers
arrayByAddingObject:
conferenceParticipantCalls
song
topPresentables
setMinimumPressDuration:
descriptionForAvailableInteractionModels
arrayForKey:
fontDescriptorWithSymbolicTraits:
setAffineTransform:
sortUsingComparator:
setDrawBorder:
isCarDisplay
descriptionForLimitableUserInterfaces
arrayWithArray:
fontWithDescriptor:size:
sortedArrayUsingComparator:
configurationForDefaultMainDisplayMonitor
descriptionForObject:
requestWhenInUseAuthorization
activateManualDomain:
isCarInstrumentsDisplay
arrayWithCapacity:
setAlignment:
_setAllowsDiscreteInteraction:
configurationForIdentity:
sortedArrayUsingSelector:
descriptionForPrimaryInteractionModel
arrayWithObjects:count:
setAllowConcurrentLoading:
pairingStatus
configurationWithPointSize:weight:
setDuration:
source
isCarPlaySupported
descriptionForTransportType
requiredEntitlementKeys
setAllowedPressTypes:
setSpacing:
artist
parametersForSpecification:
_setContainerView:
configurationWithTextStyle:scale:
setDurationSnapshot:
descriptionForUserInterfaceStyle:
requiredInfoKeys
setAllowedTouchTypes:
setSpecification:
_setCurrentTraitCollection:
participantStatus
sourceIdentifier
setName:
touchpadWithSenderID:
descriptionForVoiceTriggerMode
formatDateAsTimeNoAMPM:
setAllowsContinuousInteraction:
artworkCatalog
path
connectedIdentities
indexOfObject:
isConferenced
tpImageForSymbolType:textStyle:scale:isStaticSize:
descriptor
_setIsAnimated:
indexOfObjectPassingTest:
pathComponents
sourceSettings
descriptorWithEventType:
tracklist
assertWatchdogEnabledForLimitedDurationForReason:
setEndpoint:
indexPathForIcon:
sourceVersion
resetFormattersIfNecessary
descriptorWithPage:usage:
activateWithContext:
isConversation
indexPathWithIconIndex:listIndex:
isCrash
setAnchorPoint:
assistantIsEnabled
constraintEqualToAnchor:constant:
specification
indexesOfObjectsPassingTest:
destroyScene:withTransitionContext:
setNeedsDisplay
isDescendantOfView:
assistantIsSupportedForLanguageCode:error:
speechInteractionActivityWithTimestamp:
constraintEqualToAnchor:multiplier:
dictionary
setNeedsFocusUpdate
traitCollectionWithTraitsFromCollections:
setAnimationFence:
constraintEqualToAnchor:multiplier:constant:
initForCarPlayShell
traitCollectionWithUserInterfaceIdiom:
setNeedsLayout
dictionaryForKey:
isDisplayingIcon:
setAnimationSettings:
setStateDescriptor:
constraintEqualToConstant:
initWithActivityIndicatorStyle:
isDualSIMEnabled
setNeedsUserInteractivePriority:
setStatusBarDisabled:
setAnimationType:
setExportedInterface:
constraintEqualToSystemSpacingAfterAnchor:multiplier:
resume
isEnabled
dictionaryWithContentsOfURL:
setExportedObject:
constraintEqualToSystemSpacingBelowAnchor:multiplier:
_setSpeedBumpEdges:
activeCallAttributions
dictionaryWithDictionary:
audioRecordingAttributionList
setStiffness:
setFill
constraintGreaterThanOrEqualToConstant:
dictionaryWithObject:forKey:
transform
audioRecordingAttributions
frame
constraintLessThanOrEqualToAnchor:multiplier:
dictionaryWithObjects:forKeys:count:
revokePresentablesWithIdentification:reason:options:animated:userInfo:error:
transitionAssertionWithReason:
auditToken
setStroke
longPressButtonForIdentifier:
frameInWindow
_setToEndFrame:
setFillsDisplayBounds:
constraintLessThanOrEqualToConstant:
rightAnchor
activeConversationForCall:
frameWithContentWithFrame:
setStyleDelegate:
authorizationStatus
longPressInterval
percentCharge
_setToStartFrame:
setFilters:
transitionContextClass
isEqualToArray:
activeDataSource
authorizationStatusForBundle:
lowercaseString
_setToViewController:
standardUserDefaults
setFirstHopIncrement:
contactIdentifiers
performBatchCharacteristicRequest:
mainBundle
authorizationStatusForBundleIdentifier:
performCommandRequest:completion:
activeModeConfiguration
transitionWithView:duration:options:animations:completion:
didMoveToParentViewController:
isEqualToDate:
setNotifyOnEntry:
setSuspended:forReason:revokingCurrent:error:
mainConfiguration
_setTouchInsets:
startAnimating
setFittingSize:
performFeedbackOfType:
contactStore
transportType
setNotifyOnExit:
didRecognizeButtonSinglePressUp
isEqualToDictionary:
mainIdentity
functionWithName:
autoupdatingCurrentLocale
contacts
ringingCallAttributions
didRecognizeLongPress
activeNavigationIdentifiers
setTag:
mainRunLoop
performSelector:withObject:afterDelay:
containsBundleIdentifier:
ringingVideoConferenceAttributions
isEqualToSet:
setAppearanceStyle:
mainScreen
availableFeatureKeys
performSelector:withObject:afterDelay:inModes:
initWithApplicationProxy:
isEqualToString:
uiPresentationManager
activeStyleOverride
containsObject:
initWithAuthority:pender:presenter:
activeVideoConferenceAttributions
uiSettings
disabledFeature
setTarget:
setApplicationInfoClass:
containsView:
initWithBitmapData:bytesPerRow:size:format:colorSpace:
performWithoutAnimation:
unadjustedSafeFrame
setNumberOfLines:
setApplicationPlaceholderClass:
initWithBundle:
addAction:
rootFolder
setNumberOfPortraitColumns:
manufacturerIconLabel
setAssertionEndpoint:
physicalSize
contentState
isFocused
disconnectCurrentCallAndActivateHeld
addAction:forControlEvents:
rootFolderController
setNumberOfPortraitRows:
unifiedContactWithIdentifier:keysToFetch:error:
manufacturerIconVisible
getAppLinksWithURL:completionHandler:
setTargetConnectionEndpoint:
isForeground
addAnimation:forKey:
unionSet:
getCString:maxLength:encoding:
manufacturerIcons
pixelSize
contents
startMonitoringForRegion:
setObject:forKey:
uniqueIdentificationForPresentable:
addApplicationProxy:withOverrideURL:
_hidEvent
setTargetScreen:
manufacturerName
dismissPresentablesWithIdentification:reason:userInfo:
setObject:forKeyedSubscript:
addArrangedSubview:
mapInterfaceStyleForScreenUUID:
setFolder:
placeholderWithBundleIdentifier:
_shouldHandleTestURL:
ruleForDispatchingDiscreteEventsMatchingPredicate:toTarget:
unsignedIntegerValue
setOemIconLabel:
mapsAppearancePreference
setText:
initWithCGImage:scale:
setFolderDelegate:
contrast
addChildViewController:
dismissWithOptions:
setTextAlignment:
setAutoresizesSubviews:
badgeNumberOrString
setFont:
startUpdatingLocation
initWithCenter:radius:identifier:
dispatchDiscreteEventsForReason:withRules:
addClip
setOffset:
updateGeoSupported
setTextColor:
setAutoresizingMask:
playingItemIndexPath
setForTesting:
displayAppBundleIdentifier
addConstraints:
setOpacity:
setTextInsets:
badgeSetting
pointInside:withEvent:
convertPoint:fromView:
startedIPTest:
setOpaque:
addElement:
policyCancelingTouchesDeliveredToContextId:withInitialTouchTimestamp:
convertRect:fromCoordinateSpace:
initWithDate:calendar:format:
addEntriesFromDictionary:
safeAreaLayoutGuide
displayFirstName
setOptions:
handleForIdentifier:error:
setAxis:
setFraction:
initWithDeactivationOptions:animated:dismissalReason:
convertRect:fromView:
safeFrame
matchingIconViewWithConfigurationOptions:
badgesAppIcon
initWithDefaultValues
setOriginatingProcess:
addGestureRecognizer:
states
convertRect:toCoordinateSpace:
addGestureRecognizer:toDisplayWithIdentity:
setTimingFunctions:
status
setFromValue:
convertRect:toView:
sbf_imageFromContextWithSize:scale:type:pool:drawing:
updateSceneWithIdentity:parameters:transitionContext:
addIcon:
isJetsam
setBackgroundColorWhileHosting:
setTintColor:
bannerSourceLayoutDescriptionWithPresentationSize:containerSize:
handleTestURL:
CGColor
policyRequiringSharingOfTouchesDeliveredToChildContextId:withHostContextId:
statusBar
updateSettingsWithBlock:
initWithDisplayConfiguration:
addIconDataSource:
displayLinkWithTarget:selector:
setTitle:forState:
setBackgroundEffects:
statusBarEdge
coordinate
updateSettingsWithTransitionBlock:
scalingView
addLayoutGuide:
setOverrideUserInterfaceStyle:
setTitleColor:forState:
coordinateSpace
statusBarEdgeOverride
initWithDomain:
position
addNowPlayingObserver:
maximumPageIndex
handler
copy
postNotificationName:object:
initWithDropOperation:
addObject:
updateUISettingsWithBlock:
hardwareIdentifier
postNotificationName:object:userInfo:
setHidesWhenStopped:
initWithEffectiveBundle:delegate:onQueue:
updateUISettingsWithTransitionBlock:
setPageIndicatorTintColor:
addObjectsFromArray:
isMonitoringAvailableForClass:
setBannerHeight:
setToValue:
postPresentable:withOptions:userInfo:error:
initWithEffectiveBundleIdentifier:delegate:onQueue:
predicateForEventsWithStartDate:endDate:calendars:
addObserver:forKeyPath:options:context:
becomeFirstResponder
message
predicateMatchingBundleIdentifier:
setHitTestsAsOpaque:
addObserver:notifyIfNeeded:
begin
hasContentAtPoint:completion:
messageReadDirectActionWithAppBundleId:conversationGUID:
predicateWithFormat:
addObserver:selector:name:object:
bezierPathWithRoundedRect:cornerRadius:
metadata
setBool:forKey:
addObserver:selector:name:object:suspensionBehavior:
isOnHold
setPaused:
setBorderColor:
_initWithFrame:debugName:scene:attached:
setTodayViewPageHidden:
statusBarStateProvider:didPostStatusBarData:withActions:
correspondingApplicationRecord
displayWithHardwareIdentifier:
isOneToOneModeEnabled
addOperationWithBlock:
_initWithFrame:debugName:windowScene:
setBorderWidth:
setToken:
count
statusBarStyleOverride
useNightModeTester
displayedAudioAndVideoCalls
boldSystemFontOfSize:
countByEnumeratingWithState:objects:count:
useSceneInterfaceStyle
displayedIconViewForIcon:
addScene:
hasPrefix:
boolForKey:
createCGImage:fromRect:format:colorSpace:
useableContainerFrameInContainerBounds:onScreen:
addSessionObserver:
displaysTransitionControl
methodForSelector:
createPresenterWithIdentifier:
addStateUpdateListener:withCompletionHandler:
borrowScreenForClient:reason:
hasSuffix:
createPresenterWithIdentifier:priority:
initWithEventStore:visibilityChangedCallback:queue:
isPrerendered
addSublayer:
distanceFromLocation:
userInfo
createSceneWithDefinition:initialParameters:
initWithFocusMovementInfo:
userInterfaceIdiom
distantFuture
setPid:
createSceneWithIdentifier:parameters:clientProvider:transitionContext:
setHopIncrementAcceleration:
initWithFolderController:
stopAnimating
addTarget:action:forControlEvents:
isReachable
distantPast
userInterfaceLayoutDirection
hashTableWithOptions:
setByAddingObject:
preferredContentSize
createSnapshotWithContext:
setHostContextIdentifierForSnapshotting:
addTimer:forMode:
isRestricted
hashTableWithWeakObjects
crsui_dashboardWidgetBackgroundColor
setHostedPresentationFrame:
userInterfaceStyleForScreenUUID:
addToRunLoop:forMode:
setPosition:
heading
bringSubviewToFront:
setTransitionHandler:
crsui_imageNamed:compatibleWithTraitCollection:
preferredFontDescriptorWithTextStyle:addingSymbolicTraits:options:
_synchronizeDrawingWithFence:
initWithFrame:showForegroundView:inProcessStateProvider:
doesNotRecognizeSelector:
setPredicates:
isRunning
heightAnchor
bs_addChildViewController:animated:transitionBlock:
_synchronizedDrawingFence
preferredFontDescriptorWithTextStyle:compatibleWithTraitCollection:
additionalSafeAreaInsets
domainsContainingServiceIdentifier:
setUIApplicationElement:
bs_addChildViewController:withSuperview:animated:transitionBlock:
modelName
preferredFontForTextStyle:
MFiCertificateSerialNumber
isScrolling
modifyPresentationContext:
bs_containsObjectPassingTest:
preferredFontForTextStyle:compatibleWithTraitCollection:
stopMonitoringForRegion:
currentCalendar
setPreferCenterOfIconGrid:
bs_each:
setUpdateHandler:
monitorForDeath:
setIconImageData:
initWithHomeMangerConfiguration:
valueBool
alertControllerWithTitle:message:preferredStyle:
setPreferredFramesPerSecond:
bs_filter:
monitorWithConfiguration:
_isInAnimationBlock
hiddenIcons
setIconImageInfo:
valueForEntitlement:
isSiriPresentation
PPID
bs_firstObjectPassingTest:
setCancelsTouchesInView:
setUplinkMuted:
monitoredRegions
prepare
setIconImageScale:
initWithIcons:
drawAtPoint:
UIActionType
valueForKey:
bs_map:
initWithIdentifier:
prepareForActivation
stopUpdatingLocation
currentCountrySupportsCarIntegration
drawInRect:blendMode:alpha:
sceneWithIdentifier:
valueForKeyPath:
setUserInteractionEnabled:
URLByAppendingPathComponent:
bs_mapNoNulls:
monospacedDigitSystemFontOfSize:weight:
setCenter:
prepareForActivationWithTimestamp:
initWithIdentifier:hostedPresentationFrame:displayConfiguration:
currentIconListView
scenes
URLByAppendingPathComponent:isDirectory:
setUserInterfaceStyle:
valueWithCGSize:
setCentralAnimationSettings:
bs_removeChildViewController:animated:transitionBlock:
_transitionCoordinator
initWithIdentifier:priority:appearanceStyle:rootWindow:
currentLanguageCode
scheduledTimerWithTimeInterval:repeats:block:
URLForResource:withExtension:
bs_reverse
setUserLaunchEventTime:
initWithImage:
store
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
URLOverrideForURL:
setClasses:forSelector:argumentIndex:ofReply:
isUIApplicationElement
bs_setSafeObject:forKey:
storeForApplication:
initWithImages:
URLWithString:
scheme
_labelColor
setValue:forKey:
currentNotificationSettingsCenter
setIdentity:
presentViewController:animated:completion:
string
initWithItems:loops:restrictEnteringSequence:
isUplinkMuted
durationSnapshot
vehicleFirmwareVersion
setClientIdentity:
setValue:forKeyPath:
URLsForDirectory:inDomains:
setIgnoreAppLinkEnabledProperty:
initWithLatitude:longitude:
stringByAppendingFormat:
vehicleForCertificateSerial:
isUserInteractive
UTF8String
setClipsToBounds:
setPriority:
setValues:
stringByAppendingPathComponent:
initWithLayoutConfiguration:
effectCompositingColor:withMode:alpha:
vehicleHardwareVersion
UUID
setVehicle:
build
presentationView
initWithMachName:
stringByAppendingString:
setImage:forKey:withPersistenceOptions:
allInstalledApplications
UUIDString
setColor:
effectWithBlurRadius:
builtOnOrAfterSDKVersion:
setImage:forState:
stringByReplacingOccurrencesOfString:withString:
initWithMachServiceName:
allKeys
isViewLoaded
vehicleManufacturer
mutableCopy
setColumns:
setImageEdgeInsets:
isWifiActive
effectivePolicyForAppDeclaration:
__runAlongsideAnimations
setProgressHandler:
allNotificationSources
setCompletionBlock:
vehicleModelName
presentedFrameForContentWithPreferredSize:inUseableContainerFrame:containerBounds:scale:
stringFromDate:
currentProcess
setProxiedApplicationBundleIdentifier:
screenInfoForScreenID:
allObjects
effectiveUserInterfaceLayoutDirection
vehicleName
currentRunLoop
initWithObject:
stringFromDate:toDate:
electronicTollCollectionAvailable
allPresentables
jumpBackInterval
setProxiedApplicationLinkedOnOrAfterYukon:
homeLocationStatus
vehicleSupportsDestinationSharing
setIndependentWatchdogPortName:
allValues
jumpForwardInterval
elements
setConfirmedSafe:
initWithPPTContext:
embeddedApplicationIdentifier
allowedApplicationBundleIDs
setVisibilityIdentifier:
preventPasscodeLockWithReason:
stringValue
currentSession
initWithPages:hiddenIcons:
alpha
setQualityOfService:
setVisualProviderInfo:
initWithPayload:
stringWithFileSystemRepresentation:length:
keyboardFocusTarget
screenType
bundleProxyForIdentifier:
setConstant:
stringWithFormat:
preventSpuriousScreenUndimWithReason:
screens
setWaitsForSceneCommits:
bundleType
stroke
setInstalledApplicationFilter:
viewAreas
setReferenceFrame:
setWallpaperIdentifier:
bundleURL
_movementWithHeading:isInitial:fallbackMovementOriginatingFrame:
initWithProcessIdentity:executionContextProvider:
strongToStrongObjectsMapTable
currentViewArea
previousState
setInstanceIdentifier:
setReferrerURL:
knownJumpIntervals
setContacts:
initWithProtocol:
strongToWeakObjectsMapTable
setInteger:forKey:
labelColor
_animateUsingSpringWithDuration:delay:options:mass:stiffness:damping:initialVelocity:animations:completion:
endpoint
viewIfLoaded
setWantsGeoSupported
initWithProtocol:callbackQueue:
primaryInteractionModel
primarySIMInfo
subarrayWithRange:
initWithReason:isStart:
viewWillTransitionToSize:withTransitionCoordinator:
scrollView
setRemoteObjectInterface:
bytes
setContentHuggingPriority:forAxis:
setInterfaceOrientation:
secondarySIMInfo
visibilityEnvironment
cStringUsingEncoding:
setContentMode:
entitlementValueForKey:ofClass:
setInterruptionHandler:
entitlementValuesForKeys:
process
subviews
visibleCalendars
setContents:
newHandleWithDefinition:configurationContext:
initWithServiceDomain:displayConfiguration:authorizedBundleIDs:
processHandle
setInvalidationHandler:
anchorPoint
enumerateAllIconsUsingBlock:
nextFocusedItem
setContentsPosition:
setItemType:
supportsACBack
processIdentifier
initWithServiceName:viewControllerClassName:
animateAlongsideTransition:completion:
selfAttendee
setContentsScale:
nextFocusedView
processIdentity
supportsBackgroundMode:
setKeyTimes:
visibleFrame
enumerateKeysAndObjectsUsingBlock:
sendActions:
supportsCarPlayDashboardScene
enumerateObjectsUsingBlock:
sendActionsForControlEvents:
animateToFraction:afterDelay:withCompletion:
lastBaselineAnchor
initWithShadowAttributes:maskCornerRadius:
supportsCarPlayInstrumentClusterScene
sendCommand:withParameters:
enumerateObjectsWithOptions:usingBlock:
visibleIcons
calculatedDuration
setCornerMaskImageData:forScreenInfo:
iconAccessoryVisualConfiguration
initWithSize:
enumerateScenesWithBlock:
animateWithDuration:animations:
sendEvent:
iconAtIndexPath:
supportsDashboardPlatterMaterials
initWithSize:scale:
animateWithDuration:animations:completion:
_bezierPathWithPillRect:cornerRadius:
callDurationString
setRows:
supportsDynamicAppearance
setSafeAreaInsetsPortrait:
sendSubviewToBack:
animateWithDuration:delay:options:animations:completion:
_orderFrontWithoutMakingKey
nightMode
lastExitContext
supportsFocus
setScale:
wallpaperColor
senderID
animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:
setWindowLevel:
noteBadgeDidChange
supportsFocusTransfer
properties
animateWithFactory:actions:completion:
provider
supportsHighFidelityTouch
wallpaperIdentifier
animateWithSettings:actions:
setWithArray:
notificationSettings
proxiedApplicationBundleIdentifier
dashboardEndpoint
setScenePresenterRenderIdentifierForSnapshotting:
iconContentScale
setWithCapacity:
initWithString:
supportsLayerTracking
lastObject
animated
service:didReceiveLayerMetadata:
cameraCaptureAttributions
notificationSystemSettings
setWithObject:
supportsUIOutsideSafeArea
initWithStyle:primaryColor:secondaryColor:shadowColor:
wallpaperWithIdentifier:
lastOnDisplayUIContextURLs
animatedAppearanceWithFactory:completion:
setWithObjects:
canDisplayOnCarScreen
initWithSuiteName:
supportsUSBCarPlay
CGPath
wantsCornerMasks
animatedDisappearanceWithFactory:completion:
cancelAction
initWithTarget:action:
supportsWirelessCarPlay
serviceForClientIdentifier:
cancelPreviousPerformRequestsWithTarget:selector:object:
setCurrentPageIndex:animated:
setXpcEndpoint:
serviceName
setCurrentPageIndexToListDirectlyContainingIcon:animated:completion:
symbolImageName
initWithURL:
publisherWithConfiguration:
eventIdentifier
settingsClass
setCurrentPageIndicatorTintColor:
capture
initWithURL:workspaceOriginatingProcess:
punchoutStyle
systemBlackColor
serviceState
_capabilityForKey:
animationWithKeyPath:
_preferredFontForTextStyle:variant:
settingsWithContactStore:threeDTouchEnabled:
systemFontOfSize:
initWithUUIDBytes:
qaModeLockout
_carScreen
nowOnDisplayUIContextURLs
settingsWithDuration:timingFunction:
iconImageFrame
queryCurrentStateWithCompletionHandler:
initWithUUIDString:
_carSystemFocusColor
servicesWithTypes:
nowPlayingAlbumArtMode
iconImageFromUnmaskedImage:info:
data
systemGreenColor
queryItems
initWithUniqueIdentifier:
weakObjectsHashTable
_carSystemFocusLabelColor
eventsMatchingPredicate:
iconImageInfo
carOwnsMainAudio
dataNetworkType
systemImageNamed:compatibleWithTraitCollection:
whiteColor
_carSystemPrimaryColor
carOwnsScreen
rangeOfCharacterFromSet:
systemNightMode
announceNotificationsInCarPlayTemporarilyDisabled
_carSystemQuaternaryColor
sharedApplication
iconImageSnapshot
carPlayAnnounceEnablementType
setLaunchIntent:
systemOrangeColor
launchUsingMusicUIService
announcementCarPlaySetting
extent
_carSystemSecondaryColor
readValueWithCompletionHandler:
_carSystemTertiaryColor
externalSystemRedColor
launchUsingSiri
anonymousListener
iconImageWithInfo:
carPlayStream
sharedConfiguration
systemRedColor
launchUsingTemplateUI
anyObject
sharedInstance
externalURI
systemTarget
setSensorActivityIndicator:
faceTimeShowCarPlayInCallUIURL
sharedManager
systemWhiteColor
setLayersToExclude:
initWithZoomDirection:
recipients
layerManager
factoryWithDuration:
centerXAnchor
sharedPreferences
systemYellowColor
dataWithBytes:length:
factoryWithMass:stiffness:damping:
centerYAnchor
iconListViewAtIndex:
shouldActivateWithCarPlay
date
tableBackgroundColor
initialFocusOwner
failWithReason:
setServiceClass:
setCurrentWallpaper:
iconListViewCount
dateByAddingTimeInterval:
widthAnchor
fbsSceneWithIdentifier:
shouldEnableBackButton
iconListViewIndexForPageIndex:
setLayoutInfoV2:
takeScreenForClient:reason:
layerWithContextID:
_contextId
feedbackSupported
iconListViews
shouldEnableNextButton
setLayoutJustification:
takeScreenForConnection
injectorWithConfigurator:
fetchCarCapabilities
numberWithBool:
iconLocation
inputDeviceInfo
numberWithDouble:
shouldPerformHapticFeedback
inputDeviceManager
layoutDescriptionDidChange:
fetchLastModifiedServiceOfType:completionHandler:
numberWithFloat:
characteristicBatchRequestWithWriteRequests:
insertArrangedSubview:atIndex:
layoutDirection
fileSystemRepresentation
numberWithInt:
setCurve:
setLevel:
insertObject:atIndex:
fileURLWithPath:
setDamping:
numberWithInteger:
insertSubview:atIndex:
willMoveToParentViewController:
numberWithLong:
iconOrder
filterUsingPredicate:
numberWithUnsignedInteger:
targetApplicationProxy
isBundleIdentifierValidForDock:
appDockCategoryForBundleIdentifier:
orderedBundleIdentifiersMatchingDockCategory:
orderedAppsMatchingDockCategory:
_evaluatePolicyForBundleIdentifier:withBlock:
_isNowPlayingApplicationForBundleIdentifier:
_isMapsApplicationForBundleIdentifier:
_preferredBundleIdentifierInCategory:
_allInstalledApplicationsInCategory:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
init
_localeChanged:
_timeZoneChanged:
_etcChanged:
_showIndicatorForData:
_sensorIndicatorTypeForData:
preferences:carPlayAnnounceEnablementTypeChanged:
preferences:announceNotificationsInCarPlayTemporarilyDisabledChanged:
preferences:autoSendInCarPlayEnabledChanged:
preferences:autoSendInHeadphonesEnabledChanged:
preferences:mainAutoSendEnabledChanged:
stateService:didReceiveDoNotDisturbStateUpdate:
userNotificationSettingsCenter:didUpdateNotificationSourceIdentifiers:
userNotificationSettingsCenter:didUpdateNotificationSystemSettings:
invalidate
workspace:stateDidChangeFromState:toState:
addStatusBarStateObserver:
removeStatusBarStateObserver:
getStatusBarData:
doubleHeightStatusStringForStyle:
statusBar:styleForRequestedStyle:overrides:
statusBar:willAnimateFromHeight:toHeight:duration:animation:
statusBar:didAnimateFromHeight:toHeight:animation:
statusBarSystemNavigationAction:
statusBar:didTriggerButtonType:withAction:
statusBar:didTriggerButtonType:withAction:context:
statusBar:effectiveStyleOverridesForRequestedStyle:overrides:
overriddenRequestedStyleFromStyle:
statusBarShouldDisableRegionActions:
initWithEnvironment:
_setupSystemStatusDomains
inCallServiceActive
setActiveBundleIdentifier:
setNowRecordingBundleIdentifier:
updateStatusBarData
_registerForNotifications
_generateData
_resetTimeUpdateTimer
_getTimeData:
_wifiDataUpdatedWithData:
_telephonyDataUpdatedWithData:
_getTelephonyData:
_statusBarNetworkTypeForSystemStatusNetworkType:
_batteryDataUpdatedWithData:
_getBatteryData:
_updateETCStateWithSession:
_getETCData:
_focusStatusUpdated:
_getFocusData:
_radarItemVisible
_radarItemEnabled
_getTTRData:
_mediaDataUpdatedWithData:
_getMediaData:
_callingDataUpdatedWithData:
_isAnnounceNotificationsEnabledForSystemSettings
_fetchAnnounceNotificationsSetting
_getAnnounceNotificationsData:
sensorIndicatorView
setSensorIndicatorView:
nowRecordingBundleIdentifier
timeUpdateTimer
setTimeUpdateTimer:
stateObservers
setStateObservers:
environment
setEnvironment:
etcStatus
setEtcStatus:
activeBundleIdentifier
telephonyDomain
setTelephonyDomain:
telephonyData
setTelephonyData:
batteryDomain
setBatteryDomain:
batteryData
setBatteryData:
wifiDomain
setWifiDomain:
wifiData
setWifiData:
mediaDomain
setMediaDomain:
mediaData
setMediaData:
callingDomain
setCallingDomain:
callingData
setCallingData:
dndStateService
setDndStateService:
activeModeSymbolName
setActiveModeSymbolName:
cachedTimeString
setCachedTimeString:
siriPreferences
setSiriPreferences:
cachedCarPlayAnnounceSetting
setCachedCarPlayAnnounceSetting:
.cxx_destruct
_sensorIndicatorView
_nowRecordingBundleIdentifier
_timeUpdateTimer
_stateObservers
_environment
_etcStatus
_activeBundleIdentifier
_telephonyDomain
_telephonyData
_batteryDomain
_batteryData
_wifiDomain
_wifiData
_mediaDomain
_mediaData
_callingDomain
_callingData
_dndStateService
_activeModeSymbolName
_cachedTimeString
_siriPreferences
_cachedCarPlayAnnounceSetting
T@"NSTimer",&,N,V_timeUpdateTimer
T@"NSHashTable",&,N,V_stateObservers
T@"<DBEnvironment>",W,N,V_environment
T@"NSNumber",&,N,V_etcStatus
T@"NSString",C,N,V_activeBundleIdentifier
T@"NSString",C,N,V_nowRecordingBundleIdentifier
T@"STTelephonyStatusDomain",&,N,V_telephonyDomain
T@"STTelephonyStatusDomainData",C,N,V_telephonyData
T@"STBatteryStatusDomain",&,N,V_batteryDomain
T@"STBatteryStatusDomainData",&,N,V_batteryData
T@"STWifiStatusDomain",&,N,V_wifiDomain
T@"STWifiStatusDomainData",&,N,V_wifiData
T@"STMediaStatusDomain",&,N,V_mediaDomain
T@"STMediaStatusDomainData",&,N,V_mediaData
T@"STCallingStatusDomain",&,N,V_callingDomain
T@"STCallingStatusDomainData",&,N,V_callingData
T@"DNDStateService",&,N,V_dndStateService
T@"NSString",C,N,V_activeModeSymbolName
T@"NSString",C,N,V_cachedTimeString
T@"CRSSiriPreferences",&,N,V_siriPreferences
Tq,N,V_cachedCarPlayAnnounceSetting
TB,R,N
T@"DBStatusBarSensorIndicatorView",&,N,V_sensorIndicatorView
initWithSettings:
startAnimationWithCompletion:
appDockViewController
fromTransitionContainerView
fromView
toIdentifier
toTransitionContainerView
toView
rootContainerView
rootContainerBackgroundColor
_appDockViewController
_fromTransitionContainerView
_fromView
_toIdentifier
_toTransitionContainerView
_toView
_rootContainerView
_rootContainerBackgroundColor
T@"DBAppDockViewController",R,N,V_appDockViewController
T@"UIView",R,N,V_fromTransitionContainerView
T@"UIView",R,N,V_fromView
T@"NSString",R,C,N,V_toIdentifier
T@"UIView",R,N,V_toTransitionContainerView
T@"UIView",R,N,V_toView
T@"UIView",R,N,V_rootContainerView
T@"UIColor",R,N,V_rootContainerBackgroundColor
eventWithType:context:
initWithType:context:
type
context
_type
_context
TQ,R,N,V_type
T@,R,N,V_context
animationWithSettings:
initWithEnvironmentConfiguration:
rootViewControllerContentInsets
homeViewControllerInsets
sceneFrameForApplication:
safeAreaInsetsForApplication:
statusBarInsets
areaOfInterestFrameForApplication:
statusBarHostWindowFrame
statusBarWindowFrame
cornerRadiusViewFrame
notificationWindowFrame
wallpaperFrame
mainWindowFrame
areaOfInterestWindowFrame
statusBarHostSceneFrame
cornerRadiusWindowFrame
resizeAnimationWindowFrame
environmentConfiguration
setEnvironmentConfiguration:
_environmentConfiguration
_mainWindowFrame
_areaOfInterestWindowFrame
_statusBarHostSceneFrame
_cornerRadiusWindowFrame
_resizeAnimationWindowFrame
T@"DBEnvironmentConfiguration",&,N,V_environmentConfiguration
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_mainWindowFrame
T{UIEdgeInsets=dddd},R,N
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_areaOfInterestWindowFrame
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_statusBarHostSceneFrame
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_cornerRadiusWindowFrame
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_resizeAnimationWindowFrame
dataSourceForApplicationInfo:
dataSourceForOEMIconWithSessionConfiguration:
dataSourceForNowPlayingIcon
priorityForIcon:
icon:displayNameForLocation:
icon:imageWithInfo:
icon:defaultImageWithInfo:
icon:unmaskedImageWithInfo:
canGenerateIconsInBackgroundForIcon:
iconCanTruncateLabel:
iconCanTightenLabel:
icon:statusDescriptionForLocation:
progressStateForIcon:
progressPercentForIcon:
isProgressPausedForIcon:
badgeNumberOrStringForIcon:
formattedAccessoryStringForIcon:
accessoryTypeForIcon:
labelAccessoryTypeForIcon:
isTimedOutForIcon:
iconSupportsUninstall:
iconCompleteUninstall:
iconAllowsLaunch:
iconDisallowsLaunchForObscuredReason:
icon:displayNameForObscuredDisabledLaunchForLocation:
icon:launchFromLocation:context:
iconSupportsConfiguration:
iconSupportsRasterization:
iconShouldIgnoreOtherDataSources:
supportedGridSizeClassesForIcon:
folderTitleOptionsForIcon:
folderFallbackTitleForIcon:
tagsForIcon:
iTunesCategoriesOrderedByRelevancyForIcon:
uniqueIdentifier
configurationStorageIdentifier
T@"NSString",R,C,N
_initWithIdentifier:applicationInfo:sessionConfiguration:
invalidateBadgeValue
_stringIsDigits:
applicationInfo
setApplicationInfo:
identifier
setIdentifier:
sessionConfiguration
setSessionConfiguration:
dataStore
setDataStore:
cachedBadgeValue
setCachedBadgeValue:
_applicationInfo
_identifier
_sessionConfiguration
_dataStore
_cachedBadgeValue
T@"NSString",&,N,V_identifier
T@"DBApplicationInfo",&,N,V_applicationInfo
T@"CARSessionConfiguration",&,N,V_sessionConfiguration
T@"FBSApplicationDataStore",&,N,V_dataStore
T@"NSString",C,N,V_cachedBadgeValue
initWithWindowScene:
saveScreenshotsForDisplayIdentifiers:completion:
_windowScene
_orderWindowOut:
flashColor:withCompletion:
_createUIWithColor:
_tearDown
_orderWindowFrontAndThenOut:withColor:
windowScene
_flashCompletionBlocks
_flashWindow
_flashView
_windowVisible
T@"UIWindowScene",R,N,V_windowScene
overrideSceneSettingsForInternalUse
removeOverrideSceneSettings
dealloc
_retryTimerFired:
environmentConfiguration:viewAreaDidChangeFromViewAreaFrame:safeAreaInsets:toViewAreaFrame:safeAreaInsets:duration:transitionControlType:
environmentConfiguration:receivedShowUIWithURL:
stopUIReceivedForEnvironmentConfiguration:
environmentConfigurationPairedVehiclesDidChange:
environmentConfiguration:appearanceStyleDidChange:
environmentConfiguration:nightModeDidChange:
environmentConfiguration:mapsAppearanceStyleDidChange:
sceneContentStateDidChange:
sceneDidActivate:
sceneWillDeactivate:withError:
sceneDidInvalidate:
scene:clientDidConnect:
scene:didPrepareUpdateWithContext:
scene:didApplyUpdateWithContext:
scene:didCompleteUpdateWithContext:error:
scene:didUpdateClientSettingsWithDiff:oldClientSettings:transitionContext:
processMonitor:shouldHandleDeathOfBundleIdentifier:isCrash:
processMonitor:didHandleDeathOfBundleIdentifier:
sceneManager:didAddScene:
sceneManager:willRemoveScene:
sceneManager:didCreateScene:
sceneManager:willDestroyScene:
sceneManager:didDestroyScene:
sceneManager:didCreateScene:withClient:
sceneManager:willUpdateScene:withSettings:transitionContext:
sceneManager:willCommitUpdateForScene:transactionID:
sceneManager:didCommitUpdateForScene:transactionID:success:
sceneManager:didCommitUpdateForScene:transactionID:
sceneManager:updateForScene:preparedWithContext:
sceneManager:updateForScene:appliedWithContext:
sceneManager:updateForScene:completedWithContext:error:
setScene:
updateSceneWithAnimationSettings:
_frame
setTargetBundleIdentifier:
_updateSceneID
_invalidateScene
_bundleIdentifier
proxiedApplicationInfo
foregroundSceneWithURL:
backgroundScene
_sceneSettingsCreateIfNecessary
_performSceneUpdateForeground:
_applySceneSettingsToSettings:foreground:sceneSpecification:
_performSceneUpdateForeground:settings:
_invalidateRetryTimer
_scheduleForegroundRetry
sceneID
scene
targetBundleIdentifier
displayConfiguration
setDisplayConfiguration:
scenePresenter
setScenePresenter:
sceneHostView
setSceneHostView:
requester
setRequester:
invalidated
setInvalidated:
retryTimer
setRetryTimer:
retryDelay
setRetryDelay:
transaction
setTransaction:
lastClusterURL
setLastClusterURL:
targetAppCrashTally
setTargetAppCrashTally:
proxyAppCrashTally
setProxyAppCrashTally:
overrideSceneSettings
setOverrideSceneSettings:
_invalidated
_overrideSceneSettings
_sceneID
_scene
_targetBundleIdentifier
_displayConfiguration
_scenePresenter
_sceneHostView
_requester
_retryTimer
_retryDelay
_transaction
_lastClusterURL
_targetAppCrashTally
_proxyAppCrashTally
T@"FBSDisplayConfiguration",&,N,V_displayConfiguration
T@"<UIScenePresenter>",&,N,V_scenePresenter
T@"UIView<UIScenePresentation>",&,N,V_sceneHostView
T@"NSString",C,N,V_requester
T@"NSString",R,N,V_sceneID
T@"FBScene",&,N,V_scene
TB,N,V_invalidated
T@"NSTimer",&,N,V_retryTimer
Td,N,V_retryDelay
T@"FBApplicationUpdateScenesTransaction",&,N,V_transaction
T@"NSURL",&,N,V_lastClusterURL
TQ,N,V_targetAppCrashTally
TQ,N,V_proxyAppCrashTally
TB,N,V_overrideSceneSettings
T@"NSString",&,N,V_targetBundleIdentifier
hitTest:withEvent:
load
characteristicFormat
formatedValue
boolValue
setBoolValue:
TB,N
_pairedVehiclesDidChange:
_stringForStatusBarEdge:
session:openURL:
session:handleSiriRequestEvent:
session:handleSiriRequestEvent:withPayload:
session:didSetViewArea:forScreenID:withDuration:transitionControlType:
session:showUIForScreenInfo:withURL:
session:stopUIForScreenInfo:
session:receivedUnhandledRemoteEvent:withPayload:
session:didUpdateNightMode:
session:didUpdateAppearanceStyle:forScreenUUID:
session:didUpdateMapAppearanceStyle:forScreenUUID:
sessionDidUpdateCarCapabilities:
policyForApplicationInfo:
initWithDisplayConfiguration:layoutPublisher:iconBadgeController:appPolicyEvaluator:session:navigationStateProvider:
nightModeUserInterfaceStyle
displayIdentity
isAmbientBrightnessNighttime
addObserver:
removeObserver:
currentSafeViewAreaFrame
currentViewAreaSupportsUIOutsideSafeArea
fetchEnhancedIntegrationStatusWithCompletion:
_viewAreaFrameForViewArea:
_safeAreaInsetsForViewArea:
_unadjustedSafeAreaFrameForViewArea:
iconRowCount
iconColumnCount
isStatusBarDriveSide
effectiveMapsUserInterfaceStyle
_effectiveVehicleAppearancePreference
_prefersDarkMapsAppearance
pairedVehicleManager
_sync_pairedVehicle
_updateVehicleInfoSync:notifyPairedVehicleChange:
_updateVehicleInfo:notifyPairedVehicleChange:
_statusBarEdgeForViewArea:
_computeStatusBarEdgesForViewAreas:
interactionAffordances
layoutJustification
screenSupportsFocus
session
clusterControlChannel
setClusterControlChannel:
layerMetadataService
setLayerMetadataService:
analytics
displayLayoutPublisher
screen
screenScale
currentViewAreaFrame
setCurrentViewAreaFrame:
currentUnadjustedSafeViewAreaFrame
currentViewAreaSafeAreaInsets
setCurrentViewAreaSafeAreaInsets:
currentViewAreaTransitionControlType
setCurrentViewAreaTransitionControlType:
currentStatusBarEdge
setCurrentStatusBarEdge:
currentViewAreaSupportsFocusTransfer
setCurrentViewAreaSupportsFocusTransfer:
traitCollection
vehicle
isACBackSupported
isConnectedWirelessly
isGeoSupported
isKnownVehicle
setKnownVehicle:
vehicleID
setVehicleID:
OEMIconLabel
isOEMIconVisible
isPairedVehicle
setPairedVehicle:
isRightHandDrive
carUserInterfaceStyle
navigationStateProvider
iconBadgeController
appPolicyEvaluator
appHistory
wallpaperPreferences
iconImageCache
setIconImageCache:
setPairedVehicleManager:
policyLock_appPolicyForBundleID
setPolicyLock_appPolicyForBundleID:
observers
setObservers:
viewAreaToStatusBarEdgeMap
setViewAreaToStatusBarEdgeMap:
mapsUserInterfaceStyle
setMapsUserInterfaceStyle:
vehicleUpdateQueue
setVehicleUpdateQueue:
_policyLock
_screenSupportsFocus
_currentViewAreaSupportsFocusTransfer
_acBackSupported
_connectedWirelessly
_geoSupported
_knownVehicle
_OEMIconVisible
_pairedVehicle
_rightHandDrive
_interactionAffordances
_layoutJustification
_session
_clusterControlChannel
_layerMetadataService
_analytics
_displayLayoutPublisher
_screen
_screenScale
_currentViewAreaTransitionControlType
_currentStatusBarEdge
_traitCollection
_vehicle
_vehicleID
_OEMIconLabel
_carUserInterfaceStyle
_navigationStateProvider
_iconBadgeController
_appPolicyEvaluator
_appHistory
_wallpaperPreferences
_iconImageCache
_pairedVehicleManager
_policyLock_appPolicyForBundleID
_observers
_viewAreaToStatusBarEdgeMap
_mapsUserInterfaceStyle
_vehicleUpdateQueue
_currentViewAreaFrame
_currentUnadjustedSafeViewAreaFrame
_currentViewAreaSafeAreaInsets
T@"CRPairedVehicleManager",&,N,V_pairedVehicleManager
T@"NSMutableDictionary",&,N,V_policyLock_appPolicyForBundleID
T@"CARObserverHashTable",&,N,V_observers
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_currentViewAreaFrame
T{UIEdgeInsets=dddd},N,V_currentViewAreaSafeAreaInsets
TQ,N,V_currentViewAreaTransitionControlType
TQ,N,V_currentStatusBarEdge
TB,N,V_currentViewAreaSupportsFocusTransfer
T@"NSMapTable",&,N,V_viewAreaToStatusBarEdgeMap
Tq,N,V_mapsUserInterfaceStyle
T@"NSObject<OS_dispatch_queue>",&,N,V_vehicleUpdateQueue
TQ,R,N,V_interactionAffordances
Tq,R,N,V_layoutJustification
TB,R,N,V_screenSupportsFocus
T@"CARSession",R,N,V_session
T@"DBClusterControlChannel",&,N,V_clusterControlChannel
T@"DBLayerMetadataService",&,N,V_layerMetadataService
T@"DBAnalytics",R,N,V_analytics
T@"FBSDisplayIdentity",R,N
T@"FBSDisplayConfiguration",R,N,V_displayConfiguration
T@"FBSDisplayLayoutPublisher",R,N,V_displayLayoutPublisher
T@"UIScreen",R,N,V_screen
Td,R,N,V_screenScale
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_currentUnadjustedSafeViewAreaFrame
T@"UITraitCollection",R,C,N,V_traitCollection
T@"CRVehicle",R,N,V_vehicle
acBackSupported
TB,R,N,GisACBackSupported,V_acBackSupported
ambientBrightnessNighttime
TB,R,N,GisAmbientBrightnessNighttime
connectedWirelessly
TB,R,N,GisConnectedWirelessly,V_connectedWirelessly
geoSupported
TB,R,N,GisGeoSupported,V_geoSupported
knownVehicle
TB,N,GisKnownVehicle,V_knownVehicle
T@"NSString",&,N,V_vehicleID
T@"NSString",R,N,V_OEMIconLabel
OEMIconVisible
TB,R,N,GisOEMIconVisible,V_OEMIconVisible
pairedVehicle
TB,N,GisPairedVehicle,V_pairedVehicle
rightHandDrive
TB,R,N,GisRightHandDrive,V_rightHandDrive
Tq,R,N,V_carUserInterfaceStyle
Tq,R,N
T@"DBNavigationStateProvider",R,N,V_navigationStateProvider
T@"DBIconBadgeController",R,N,V_iconBadgeController
T@"CRCarPlayAppPolicyEvaluator",R,N,V_appPolicyEvaluator
T@"DBAppHistory",R,N,V_appHistory
T@"CRSUIWallpaperPreferences",R,N,V_wallpaperPreferences
T@"DBIconImageCache",&,N,V_iconImageCache
TQ,R,N
statusBarDriveSide
TB,R,N,GisStatusBarDriveSide
initWithFrame:
traitCollectionDidChange:
intrinsicContentSize
defaultHeight
_indicatorSpacing
setShowsButtons:
showsButtons
_showsButtons
TB,N,V_showsButtons
initWithLeafIdentifier:applicationBundleID:
dataSourceClass
initWithApplicationInfo:
isLaunchEnabled
placeholder
setPlaceholder:
_placeholder
T@"DBApplicationInfo",R,N,V_applicationInfo
T@"FBSApplicationPlaceholder",&,N,V_placeholder
setFocusHighlightColor:
didUpdateFocusInContext:withAnimationCoordinator:
pressesBegan:withEvent:
pressesEnded:withEvent:
_setupImagesIfNecessary
_updateDisplayState:
setDisplayState:
_installSelectGestureRecognizer
displayState
iconsImage
setIconsImage:
dashboardImage
setDashboardImage:
focusRingImageView
setFocusRingImageView:
_displayState
_iconsImage
_dashboardImage
_focusRingImageView
T@"UIImage",&,N,V_iconsImage
T@"UIImage",&,N,V_dashboardImage
T@"UIImageView",&,N,V_focusRingImageView
TQ,N,V_displayState
setFillColor:
setFocusRingVisible:
setHighlighted:
setSelected:
drawRect:
fillColor
isFocusRingVisible
isHighlighted
isSelected
_focusRingVisible
_highlighted
_selected
_fillColor
T@"UIColor",&,N,V_fillColor
focusRingVisible
TB,N,GisFocusRingVisible,V_focusRingVisible
highlighted
TB,N,GisHighlighted,V_highlighted
selected
TB,N,GisSelected,V_selected
pressesCancelled:withEvent:
initWithButtonType:
setupConstraints
inCallButtonType
ringView
setRingView:
_inCallButtonType
_ringView
T@"DBInCallWidgetButtonRingView",&,N,V_ringView
Tq,R,N,V_inCallButtonType
multilineTitleLabel
setMultilineTitleLabel:
focusView
setFocusView:
_multilineTitleLabel
_focusView
T@"UIView",&,N,V_focusView
T@"CPSMultilineLabel",&,N,V_multilineTitleLabel
setApplicationBundleIdentifier:
applicationBundleIdentifier
_applicationBundleIdentifier
T@"NSString",C,N,V_applicationBundleIdentifier
shouldPresentPresentable:withPresentedPresentables:responsiblePresentable:
shouldOverlapPresentable:withPresentable:
shouldPostPresentable:userInfo:reason:
delegate
setDelegate:
T@"<BNConsideringDelegate>",W,N
_performCancelTapGesture:
bannerSourceListener:layoutDescriptionWithError:
bannerSourceListener:requestsPostingPresentable:options:userInfo:error:
bannerSourceListener:requestsRevokingPresentablesWithIdentification:reason:animated:userInfo:error:
bannerSourceListener:recommendsSuspending:forReason:revokingCurrent:error:
sceneSpecificationForBannerSourceListener:
bannerSourceListener:sceneSpecificationForBannerSceneWithIdentifier:forProcess:userInfo:
bannerSourceListener:didUpdateInitialSceneSettingsWithParameters:
bannerSourceListener:didUpdateInitialSceneClientSettingsWithParameters:
bannerSourceListener:newBannerSourceListenerPresentableForBannerSpecification:serviceDomain:scene:readyCompletion:
bannerSourceListener:presentationSize:containerSize:error:
bannerSourceListener:requestsRevokingPresentableWithRequestIdentifier:requesterIdentifier:animated:reason:userInfo:error:
bannerSourceListener:requestsRevokingAllPresentablesForRequesterWithIdentifier:reason:userInfo:error:
bannerSourceListenerShouldEnablePresentableContextInterface:
presenterRequestsVisibility:
presenterRelinquishesVisibility:
defaultTransitioningDelegateForPresenter:
presenter:willTransitionToSize:withTransitionCoordinator:
presenter:willPresentPresentable:withTransitionCoordinator:userInfo:
presenter:willDismissPresentable:withTransitionCoordinator:userInfo:
presenter:presentable:willTransitionToSize:withTransitionCoordinator:
panGestureRecognizerForPresenter:
presenter:gestureRecognizer:locationForTouch:inView:
presenter:gestureRecognizer:locationForEvent:inView:
presenter:gestureRecognizer:velocityInView:
presenter:gestureRecognizer:translationInView:
presenterMinimumPreferredTopEdgeInset:
setSuspended:forReason:
setSuspended:cancellingCurrent:forReason:
initWithEnvironmentConfiguration:delegate:
visibleNotificationScene
notificationHeight
handleHomeEvent
handleTransitionFromFrame:toFrame:
loadView
shouldFenceAnimationsForPresentable:
_layoutManager
_layoutDescriptionWithBounds:preferredSize:
screenBorrowToken
setScreenBorrowToken:
screenBorrowingPresentableRequestID
setScreenBorrowingPresentableRequestID:
bannerHostMonitor
bannerController
bannerSourceListener
bannerContentViewController
bannerAuthority
tapDismissGestureRecognizer
suspensionReasons
setSuspensionReasons:
_screenBorrowToken
_screenBorrowingPresentableRequestID
_bannerHostMonitor
_bannerController
_bannerSourceListener
_bannerContentViewController
_bannerAuthority
_tapDismissGestureRecognizer
_delegate
_suspensionReasons
T@,&,N,V_screenBorrowToken
T@"NSString",&,N,V_screenBorrowingPresentableRequestID
T@"BNBannerHostMonitor",R,N,V_bannerHostMonitor
T@"BNBannerController",R,N,V_bannerController
T@"BNBannerSourceListener",R,N,V_bannerSourceListener
T@"BNContentViewController",R,N,V_bannerContentViewController
T@"DBBannerAuthority",R,N,V_bannerAuthority
T@"UITapGestureRecognizer",R,N,V_tapDismissGestureRecognizer
T@"<DBNotificationViewControllerDelegate>",R,W,N,V_delegate
T@"NSMutableSet",&,N,V_suspensionReasons
T@"FBScene",R,N
Td,R,N
initWithDelegate:resourceProvider:
sourceName
predictionClasses
homeManager:willRemoveHomes:
homeManager:didUpdateHomes:
home:didUpdateLastUsedServiceOfType:
homeDidChangeInRange:
homeDidEnterExtendedRange:
homeDidExitExtendedRange:
freshPredictions
homeManager
_homeManager
T@"DBHomeManager",R,N,V_homeManager
copyWithZone:
mutableCopyWithZone:
_initWithRequest:
changeItems
completionHandler
setCompletionHandler:
_changeItems
_source
_completionHandler
T@"NSArray",R,N,V_changeItems
T@?,C,N,V_completionHandler
addChangeItem:
removeChangeItem:
viewDidLoad
viewDidLayoutSubviews
updateAppearanceForWallpaper
_sendSceneUpdate
isInvalidated
wallpaperAppInfo
setWallpaperAppInfo:
setSceneID:
scenePresentersByIdentifier
setScenePresentersByIdentifier:
currentSceneUpdate
setCurrentSceneUpdate:
_wallpaperAppInfo
_scenePresentersByIdentifier
_currentSceneUpdate
TB,N,GisInvalidated,V_invalidated
T@"DBApplicationInfo",&,N,V_wallpaperAppInfo
T@"NSString",C,N,V_sceneID
T@"NSMutableDictionary",&,N,V_scenePresentersByIdentifier
T@"DBSceneUpdate",&,N,V_currentSceneUpdate
_significantTimeChange
alertServer:wantsSystemPresentationForViewController:
alertServer:wantsSystemDismissalForViewController:
alertServer:wantsAppPresentationForViewController:bundleID:
alertServer:wantsAppDismissalForViewController:bundleID:
alertService:wantsPresentationForAlert:
alertService:wantsDismissalForAlert:
alertViewControllerForBundleID:
_presentSystemViewController:
_dismissSystemViewController:
_presentViewController:overApplication:
_dismissViewController:overApplication:
systemPresenter
setSystemPresenter:
appPresenter
setAppPresenter:
service
pendingSystemViewControllers
pendingViewControllersForAppBundleID
_systemPresenter
_appPresenter
_service
_pendingSystemViewControllers
_pendingViewControllersForAppBundleID
T@"DBEnvironmentConfiguration",R,N,V_environmentConfiguration
T@"URTAlertService",R,N,V_service
T@"NSMutableArray",R,N,V_pendingSystemViewControllers
T@"NSMutableDictionary",R,N,V_pendingViewControllersForAppBundleID
T@"<DBSystemAlertPresenting>",W,N,V_systemPresenter
T@"<DBAppAlertPresenting>",W,N,V_appPresenter
updateWithPrediction:
debugScoreText
openGarageDoor
closedGarageDoor
resetImages
_imageNamed:onBackgroundColor:
baseScore
maxValue
minValue
serviceDidUpdate:
garageDoor:didUpdateDoorState:
garageDoor:didUpdateTargetDoorState:
garageDoor:didUpdateObstructionDetected:
T@"UIImage",R,N
initWithGarageDoor:
predictedObject
title
subtitle
actionBlock
_iconType
image
compositingFilter
showImageBorder
tieBreakScore
value
garageDoor
_garageDoor
T@"DBGarageDoor",R,N,V_garageDoor
lastSenderID
setLastSenderID:
_lastSenderID
TQ,N,V_lastSenderID
_ignoresHitTest
_homeTapped:
_backLongPressed:
_pointerSelectionPressed:
_updateWallpaper
_screenDidBecomeUnavailable:
_screenDidBecomeAvailable:
observeValueForKeyPath:ofObject:change:context:
doubleValue
mapStyle
setMapStyle:
Tq,N
lockOutController:didChangeFromLockoutMode:toLockOutMode:animated:takeScreen:
willDisplayNotificationForNotificationViewController:
didDismissNotificationForNotificationViewController:
inCallAssertionServiceDidPresent:
inCallAssertionServiceDidDismiss:
inCallAssertionService:didSetBannersEnabled:
handleEvent:
sceneManager:clientDidConnectWithHandshake:
sceneManager:createDefaultTransitionContextForScene:
sceneManager:scene:didUpdateClientSettingsWithDiff:oldClientSettings:transitionContext:
sceneManager:scene:didReceiveActions:
sceneIdentifierForAppInfo:
sceneForAppInfo:
sceneFrameForAppInfo:
sceneFrameForAppInfo:proxyAppInfo:
safeAreaInsetsForAppInfo:
safeAreaInsetsForAppInfo:proxyAppInfo:
applicationInfoForScene:
preflightRequiredForApplicationInfo:
workspace
focusWindow
systemGestureWindow
sceneInterfaceStyleForAppInfo:proxyAppInfo:
sceneMapInterfaceStyleForAppInfo:proxyAppInfo:
shouldDisableFiveRowKeyboards
iconLayoutDataProvider
T@"FBSDisplayIdentity",R,C,N
T@"FBSDisplayConfiguration",R,C,N
T@"DBEnvironmentConfiguration",R,N
T@"<CRSIconLayoutVehicleDataProviding>",R,N
initWithWindowScene:environmentConfiguration:
handleConnect
handleACHomeUp:
handleLongBackPress
_handleHomeEvent:
_handleReturnToHomeScreenEvent:
_handleOpenApplicationEvent:
_handleBackgroundURLDeliveryForLaunchInfo:
_handleTapToRadarEvent
_foregroundActiveScene
_updateDeferrals
_activeBundleIdentifierForScene:
hasActiveCall
_newResizeAnimationWindow
_takeSnapshotOfFrame:
_displayRecordingAlert
_presentPrivacyDisclosureAlertForApplication:
_notifyAccessoryIfNeededWithUIContext:
_updateUserInterfaceStyle
_sceneInterfaceStyleForScene:
_dashboardScene
_drawCorners
_setInitialFocusOwner
_isPreYukonNavAppForAppInfo:proxiedAppInfo:
_isStatusBarScene:
handleFocusMovementAction:fromScene:
screenshotManager
_handleSiriPrewarmWithTimestamp:
_handleSiriButtonDownWithTimestamp:
_handleSiriButtonUpWithTimestamp:
_launchAppWithInfo:forURL:
_handleSessionURL:
_rectForFocusedRectDictionary:
_updateAppScenesViewArea
_updateWindowFrames
_updatePasscodeLockToken
_animateStartupToHomeScreen
_animateStartupToIcons
_animateStartupFromScaledMainWindow
_handleCarPlayUIReady
_applicationSceneForBundleID:
_templateAppStateUpdated:
_createBackgroundSceneForTemplateAppBundleID:
goToPageContainingBundleIdentifier:completion:
dashboardStateProvider
setDashboardStateProvider:
setScreen:
setWindowScene:
sceneObservers
setSceneObservers:
identifierToAppScenesMap
setIdentifierToAppScenesMap:
identifierToForegroundAppScenesMap
setIdentifierToForegroundAppScenesMap:
identifierToAppInfoMap
setIdentifierToAppInfoMap:
layoutEngine
setLayoutEngine:
mainWindow
setMainWindow:
wallpaperViewController
setWallpaperViewController:
rootViewController
setRootViewController:
setWorkspace:
workspaceOwner
setWorkspaceOwner:
statusBarWindow
setStatusBarWindow:
statusBarViewController
setStatusBarViewController:
statusBarStateProvider
setStatusBarStateProvider:
statusBarHostWindow
setStatusBarHostWindow:
statusBarScenePresenter
setStatusBarScenePresenter:
statusBarHostScene
setStatusBarHostScene:
lockOutController
setLockOutController:
preventPasscodeLockToken
setPreventPasscodeLockToken:
preventSpuriousScreenUndimToken
setPreventSpuriousScreenUndimToken:
notificationWindow
setNotificationWindow:
notificationViewController
setNotificationViewController:
alertViewController
setAlertViewController:
siriViewController
setSiriViewController:
focusController
setFocusController:
focusMovementManager
setFocusMovementManager:
siriButtonSource
setSiriButtonSource:
siriPrewarmAssertion
setSiriPrewarmAssertion:
siriButtonAssertion
setSiriButtonAssertion:
siriDirectActionSource
setSiriDirectActionSource:
siriPrewarmTimestamp
setSiriPrewarmTimestamp:
nowPlayingObserver
setNowPlayingObserver:
isScreenAvailable
setScreenAvailable:
showingApp
setShowingApp:
activeCallScreenBorrowToken
setActiveCallScreenBorrowToken:
pendingInCallServiceActivation
setPendingInCallServiceActivation:
homeButtonStateManager
setHomeButtonStateManager:
setScreenshotManager:
resizeWindow
setResizeWindow:
currentCornerRadius
setCurrentCornerRadius:
splashScreenAlert
setSplashScreenAlert:
oemScreenLayoutElementAssertion
setOemScreenLayoutElementAssertion:
interestingWindow
setInterestingWindow:
interestingView
setInterestingView:
cornerRadiusWindow
setCornerRadiusWindow:
cornerRadiusView
setCornerRadiusView:
connectedNotifyToken
setConnectedNotifyToken:
templateAppProcessMonitor
setTemplateAppProcessMonitor:
userAlertServer
setUserAlertServer:
_dispatchingAssertion
_dispatchingAssertionACBack
_dispatchingAssertionACHome
_dispatchingAssertionACSelect
_dispatchingAssertionTelephonyDrop
_lock
_lock_hasHandledConnect
_lock_hasPendingRequestUITake
_lock_invalidated
_screenAvailable
_showingApp
_pendingInCallServiceActivation
_connectedNotifyToken
_dashboardStateProvider
_sceneObservers
_identifierToAppScenesMap
_identifierToForegroundAppScenesMap
_identifierToAppInfoMap
_layoutEngine
_mainWindow
_wallpaperViewController
_rootViewController
_workspace
_workspaceOwner
_statusBarWindow
_statusBarViewController
_statusBarStateProvider
_statusBarHostWindow
_statusBarScenePresenter
_statusBarHostScene
_lockOutController
_preventPasscodeLockToken
_preventSpuriousScreenUndimToken
_notificationWindow
_notificationViewController
_alertViewController
_siriViewController
_focusController
_focusMovementManager
_siriButtonSource
_siriPrewarmAssertion
_siriButtonAssertion
_siriDirectActionSource
_siriPrewarmTimestamp
_nowPlayingObserver
_activeCallScreenBorrowToken
_homeButtonStateManager
_screenshotManager
_resizeWindow
_currentCornerRadius
_splashScreenAlert
_oemScreenLayoutElementAssertion
_interestingWindow
_interestingView
_cornerRadiusWindow
_cornerRadiusView
_templateAppProcessMonitor
_userAlertServer
T@"UIScreen",&,N,V_screen
T@"UIWindowScene",&,N,V_windowScene
T@"NSHashTable",&,N,V_sceneObservers
T@"NSMutableDictionary",&,N,V_identifierToAppScenesMap
T@"NSMutableDictionary",&,N,V_identifierToForegroundAppScenesMap
T@"NSMutableDictionary",&,N,V_identifierToAppInfoMap
T@"DBDashboardLayoutEngine",&,N,V_layoutEngine
T@"UIWindow",&,N,V_mainWindow
T@"DBWallpaperViewController",&,N,V_wallpaperViewController
T@"DBDashboardRootViewController",&,N,V_rootViewController
T@"DBWorkspace",&,N,V_workspace
T@"DBDashboardWorkspaceOwner",&,N,V_workspaceOwner
T@"DBDashboardStateProvider",&,N,V_dashboardStateProvider
T@"DBStatusBarWindow",&,N,V_statusBarWindow
T@"DBRootStatusBarViewController",&,N,V_statusBarViewController
T@"DBStatusBarStateProvider",&,N,V_statusBarStateProvider
T@"UIWindow",&,N,V_statusBarHostWindow
T@"<UIScenePresenter>",&,N,V_statusBarScenePresenter
T@"FBScene",&,N,V_statusBarHostScene
T@"DBLockOutController",&,N,V_lockOutController
T@"<BSInvalidatable>",&,N,V_preventPasscodeLockToken
T@"<BSInvalidatable>",&,N,V_preventSpuriousScreenUndimToken
T@"DBNotificationWindow",&,N,V_notificationWindow
T@"DBNotificationViewController",&,N,V_notificationViewController
T@"UIViewController",&,N,V_alertViewController
T@"DBSiriViewController",&,N,V_siriViewController
T@"DBFocusController",&,N,V_focusController
T@"DBFocusMovementManager",&,N,V_focusMovementManager
T@"SiriLongPressButtonSource",&,N,V_siriButtonSource
T@"<SiriAssertion>",&,N,V_siriPrewarmAssertion
T@"SiriActivityAssertion",&,N,V_siriButtonAssertion
T@"SiriDirectActionSource",&,N,V_siriDirectActionSource
Td,N,V_siriPrewarmTimestamp
T@"DBNowPlayingObserver",&,N,V_nowPlayingObserver
screenAvailable
TB,N,GisScreenAvailable,V_screenAvailable
TB,N,V_showingApp
T@,&,N,V_activeCallScreenBorrowToken
TB,N,V_pendingInCallServiceActivation
T@"DBStatusBarHomeButtonStateManager",&,N,V_homeButtonStateManager
T@"DBScreenshotManager",&,N,V_screenshotManager
T@"UIWindow",&,N,V_resizeWindow
Td,N,V_currentCornerRadius
T@"DBSplashScreenAlert",&,N,V_splashScreenAlert
T@"<BSInvalidatable>",&,N,V_oemScreenLayoutElementAssertion
T@"UIWindow",&,N,V_interestingWindow
T@"UIView",&,N,V_interestingView
T@"UIWindow",&,N,V_cornerRadiusWindow
T@"UIView",&,N,V_cornerRadiusView
Ti,N,V_connectedNotifyToken
T@"RBSProcessMonitor",&,N,V_templateAppProcessMonitor
T@"DBUserAlertServer",&,N,V_userAlertServer
T@"NSString",R,N
launchInfoForApplication:
launchInfoForApplication:withActivationSettings:
initWithApplication:activationSettings:
application
activationSettings
_application
_activationSettings
T@"DBApplicationInfo",R,N,V_application
T@"NSDictionary",R,N,V_activationSettings
setEnabled:
buttonWithDirection:
setScrollImage:
_updateImage
canBecomeFocused
scrollImage
_scrollImage
T@"UIImage",&,N,V_scrollImage
initWithConfiguration:
_scrollButtonPressed:
_layoutSubviews
_updateIconListFrames
_updatePageControlToIndex:
setLeadingCustomViewVisibilityProgress:
_scrollViewClass
maximumPageControlHeightForInteractionAffordances:
countOfAdditionalPagesToKeepVisibleInOneDirection
shouldInstallFocusGuides
hidesOffscreenCustomPageViews
orientation
iconVisibilityHandling
_newPageControl
_useParallaxOnPageControl
_offsetToCenterPageControlInSpaceForPageControl
internalDockPageControlVerticalMargin
pageControlAreaHeight
defaultPageIndex
_listViewSideInset
_listViewVerticalInset
_updateScrollButtonStatesForIndex:
buttonUXEnabled
setButtonUXEnabled:
scrollLeftButton
setScrollLeftButton:
scrollRightButton
setScrollRightButton:
listViewInsets
setListViewInsets:
leadingScrollArrowLeadingConstraint
setLeadingScrollArrowLeadingConstraint:
trailingScrollArrowTrailingConstraint
setTrailingScrollArrowTrailingConstraint:
_buttonUXEnabled
_scrollLeftButton
_scrollRightButton
_leadingScrollArrowLeadingConstraint
_trailingScrollArrowTrailingConstraint
_listViewInsets
TB,N,V_buttonUXEnabled
T@"DBScrollButton",&,N,V_scrollLeftButton
T@"DBScrollButton",&,N,V_scrollRightButton
T{UIEdgeInsets=dddd},N,V_listViewInsets
T@"NSLayoutConstraint",&,N,V_leadingScrollArrowLeadingConstraint
T@"NSLayoutConstraint",&,N,V_trailingScrollArrowTrailingConstraint
pressesChanged:withEvent:
isUserInteractionEnabled
focusableItem
setFocusableItem:
_focusableItem
T@"CRSDashboardFocusableItem",&,N,V_focusableItem
T@"<DBWidgetFocusableViewDelegate>",W,N,V_delegate
_scrollViewWillBeginDragging:
_scrollViewDidEndDragging:
_handleTapGesture:
viewWillAppear:
viewDidAppear:
touchesBegan:withEvent:
updateContextId:
clientSetFocusableItems:
clientSetWantsLargeSize:fenceHandle:animationSettings:
clientSetContentReady
hostFocusableItem:pressed:
hostSelectedFocusableItem:
hostFocusableItem:focused:
hostSetWidgetSizes:
hostSetUseSystemPrimaryFocusColor:
focusableItem:didChangeFocused:
focusableItem:didChangePressed:
selectedFocusableItem:
listener:shouldAcceptNewConnection:
initWithEnvironment:animationManager:
prepareLoadingViewAnimated:
setWidgetStyle:
entireWidgetFocusable
loadingIconImage
replaceLoadingViewWithView:
setForeground:
_postTransactionUpdateSceneSettingsForScene:
_setSceneActive:
_setTouchActionDisabled:forRequester:
_updateTouchActionDisabled
_animateLoadingViewRemovalIfNecessary
_uiStyle
_mapStyle
_beginTouchCancellation
_endTouchCancellation
setWidgetContextId:
linearFocusItems
preferredFocusEnvironments
connectionReady
widgetStyle
enabled
foreground
deactivationReasons
setDeactivationReasons:
selectTapGestureRecognizer
setSelectTapGestureRecognizer:
touchTapGestureRecognizer
setTouchTapGestureRecognizer:
listener
setListener:
touchDeliveryPolicyAssertion
setTouchDeliveryPolicyAssertion:
cancelTouchesInIsolatedViewAssertion
setCancelTouchesInIsolatedViewAssertion:
widgetContextId
focusableItemViews
setFocusableItemViews:
animationManager
setAnimationManager:
initialTouchTimestamp
setInitialTouchTimestamp:
debugSnapshotLabelEnabled
setDebugSnapshotLabelEnabled:
touchActionView
setTouchActionView:
touchActionDisabledRequesters
setTouchActionDisabledRequesters:
proxySceneContentReady
setProxySceneContentReady:
loadingView
setLoadingView:
connection
setConnection:
_enabled
_foreground
_debugSnapshotLabelEnabled
_proxySceneContentReady
_widgetContextId
_widgetStyle
_deactivationReasons
_selectTapGestureRecognizer
_touchTapGestureRecognizer
_listener
_touchDeliveryPolicyAssertion
_cancelTouchesInIsolatedViewAssertion
_focusableItemViews
_animationManager
_initialTouchTimestamp
_touchActionView
_touchActionDisabledRequesters
_loadingView
_connection
TQ,N,V_deactivationReasons
T@"UITapGestureRecognizer",&,N,V_selectTapGestureRecognizer
T@"UITapGestureRecognizer",&,N,V_touchTapGestureRecognizer
T@"NSXPCListener",&,N,V_listener
T@"BKSTouchDeliveryPolicyAssertion",&,N,V_touchDeliveryPolicyAssertion
T@"BKSTouchDeliveryPolicyAssertion",&,N,V_cancelTouchesInIsolatedViewAssertion
TI,N,V_widgetContextId
T@"NSArray",&,N,V_focusableItemViews
T@"DBTodayViewSynchronizedAnimationManager",&,N,V_animationManager
Td,N,V_initialTouchTimestamp
TB,N,V_debugSnapshotLabelEnabled
T@"UIView",&,N,V_touchActionView
T@"NSMutableSet",&,N,V_touchActionDisabledRequesters
TB,N,V_proxySceneContentReady
T@"UIView",&,N,V_loadingView
T@"DBApplicationInfo",R,N
T@"NSXPCConnection",&,N,V_connection
TQ,N,V_widgetStyle
TB,N,V_enabled
TB,N,V_foreground
T@"NSString",C,N,V_targetBundleIdentifier
_watchdogTimerFired
setState:
owner
setOwner:
T@,W,N
initWithStateChangeBlock:invalidationBlock:
_startWatchdogTimer
_owner
_stateChangeBlock
_invalidationBlock
_watchdogTimer
T@,W,N,V_owner
initWithOwner:
_setState:
requestStateChange:
_createStateChangeSession
_invalidateSession:
state
_state
_pendingRequests
_currentSession
_pendingRequestsStateCaptureBlock
T@"<DBWorkspaceState>",&,N,S_setState:,V_state
_initWithIdentifier:
_buildDescriptionWithBuilder:
isSiriEntity
isHomescreenEntity
isApplicationEntity
isProxiedApplicationEntity
isFullScreenEntity
T@"NSString",R,N,V_identifier
entity
isFloating
setFloating:
_floating
floating
TB,N,GisFloating,V_floating
applicationSceneEntityForApplicationInfo:
_initWithApplicationInfo:
application:proxiedByEntity:
_initWithApplication:proxiedByEntity:
applicationToProxy
proxyEntity
_applicationToProxy
_proxyEntity
T@"DBApplicationInfo",R,N,V_applicationToProxy
T@"DBDashboardApplicationSceneEntity",R,N,V_proxyEntity
_isSecure
_nowPlayingWillAppear:
_nowPlayingWillDisappear:
appHistory:mostRecentNavigationAppUpdatedTo:
appHistory:mostRecentAudioAppUpdatedTo:
appHistory:mostRecentOtherAppUpdatedTo:
appHistory:mostRecentHomeScreenUpdatedTo:
initWithPolicyEvaluator:
initWithPolicyProvider:
_commonInit
resetAppHistory
nowPlayingIconTapped
_sessionDidConnect:environmentConfiguration:
_sessionDidDisconnect
policyForBundleIdentifier:
applicationVisibleInCarPlay:withIconProvider:
_evaluateUniversalLinksForURL:withIconProvider:completion:
openApplicationURL:withIconProvider:activationSettings:completion:
setDashboardAppOnDisconnect:
applicationCategoryForBundleIdentifier:
orderedAppHistory
orderedAppsMatchingCategory:
lastActivationTimeForApplication:
lastActivationTimeForBundleIdentifier:
_bundleIdentifierDidBecomeVisible:previousBundleIdentifier:
_appInfoForBundleIdentifier:
_orderedAppsForBundleIdentifiers:
_persistSessionUIContextOwnership
policyEvaluator
sessionAppContextURLs
setSessionAppContextURLs:
sessionEchoContextURLs
setSessionEchoContextURLs:
sessionFeatureKeys
setSessionFeatureKeys:
sessionContextOwners
setSessionContextOwners:
setAppHistory:
nowPlayingIsVisible
setNowPlayingIsVisible:
policyProvider
setPolicyProvider:
_nowPlayingIsVisible
_policyEvaluator
_sessionAppContextURLs
_sessionEchoContextURLs
_sessionFeatureKeys
_sessionContextOwners
_policyProvider
T@"NSMutableDictionary",&,N,V_appHistory
TB,N,V_nowPlayingIsVisible
T@"<DBAppPolicyProviding>",W,N,V_policyProvider
T@"CRCarPlayAppPolicyEvaluator",R,N,V_policyEvaluator
T@"NSArray",R,N
T@"NSArray",&,N,V_sessionAppContextURLs
T@"NSArray",&,N,V_sessionEchoContextURLs
T@"NSArray",&,N,V_sessionFeatureKeys
T@"NSMutableDictionary",&,N,V_sessionContextOwners
_setSR_associatedChangeItem:
_sr_associatedChangeItem
T@"DBDashboardWorkspaceStateChangeItem",&,N,S_setSR_associatedChangeItem:
changeItemForEntity:
activateSuspendedEntity
setActivateSuspendedEntity:
_activateSuspendedEntity
T@"DBDashboardWorkspaceState",&,N,V_state
T@"DBDashboardEntity",&,N,V_activateSuspendedEntity
computeNewStateFromState:andRequest:
toggleUpInstrumentCluster
toggleDownInstrumentCluster
toggleLeftInstrumentCluster
toggleRightInstrumentCluster
pressedSelectInstrumentCluster
pressedACBackInstrumentCluster
_directionStringForDirection:
navigationStateProvider:navigatingIdentifiersDidChange:
navigationStateProvider:frontmostIdentifierDidChange:
_systemRuleForUsage:onDisplays:
_clusterScene
installHardwareButtonSystemGestures
_rootViewControllerInsets
screenInfo
setScreenInfo:
clusterWindow
setClusterWindow:
viewController
setViewController:
eventDispatchAssertion
setEventDispatchAssertion:
_screenInfo
_clusterWindow
_viewController
_eventDispatchAssertion
T@"CARScreenInfo",&,N,V_screenInfo
T@"DBInstrumentClusterWorkspaceOwner",&,N,V_workspaceOwner
T@"UIWindow",&,N,V_clusterWindow
T@"DBInstrumentClusterRootViewController",&,N,V_viewController
T@"<BSInvalidatable>",&,N,V_eventDispatchAssertion
_backToOEM
_buttonTapped:
initWithMode:environmentConfiguration:
layoutSubviews
_titleFont
_buttonFont
_buttonOfType:
_buttonTitleForType:
mode
titleLabel
setTitleLabel:
imageView
setImageView:
messageLabel
setMessageLabel:
buttonStackView
setButtonStackView:
backToOEMGestureRecognizer
setBackToOEMGestureRecognizer:
_mode
_titleLabel
_imageView
_messageLabel
_buttonStackView
_backToOEMGestureRecognizer
T@"UILabel",&,N,V_titleLabel
T@"UIImageView",&,N,V_imageView
T@"UILabel",&,N,V_messageLabel
T@"UIStackView",&,N,V_buttonStackView
T@"UITapGestureRecognizer",&,N,V_backToOEMGestureRecognizer
Tq,R,N,V_mode
T@"<DBLockOutViewDelegate>",W,N,V_delegate
setTransitionControlType:
_updateBackgroundColor
transitionControlType
_transitionControlType
TQ,N,V_transitionControlType
keybagMonitorLockStateDidChange:
isLocked
currentState
isBlocked
_handleKeybagStatusChanged
_queue_updateLockedState
queue
setQueue:
callbackQueue
setCallbackQueue:
lockStateNotificationToken
setLockStateNotificationToken:
lockedState
setLockedState:
backoffInterval
setBackoffInterval:
permanentlyBlocked
setPermanentlyBlocked:
_permanentlyBlocked
_lockStateNotificationToken
_queue
_callbackQueue
_lockedState
_backoffInterval
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
T@"NSObject<OS_dispatch_queue>",&,N,V_callbackQueue
Ti,N,V_lockStateNotificationToken
Tq,N,V_lockedState
Td,N,V_backoffInterval
TB,N,V_permanentlyBlocked
locked
TB,R,N,GisLocked
blocked
TB,R,N,GisBlocked
imageForTraitCollection:completion:
setIconImage:
_cleanupImages
_shadow_drawing_queue_generateLightStyleShadow
_shadow_drawing_queue_generateDarkStyleShadow
iconImage
lightStyleShadowImage
setLightStyleShadowImage:
_iconImage
_lightStyleShadowImage
T^{CGImage=},N,V_lightStyleShadowImage
T@"UIImage",&,N,V_iconImage
_updateFocusRect
setCornerRadius:
setRingColor:
cornerRadius
ringColor
focusPath
setFocusPath:
_cornerRadius
_ringColor
_focusPath
T@"UIBezierPath",&,N,V_focusPath
Td,N,V_cornerRadius
T@"UIColor",&,N,V_ringColor
_wheelChangedWithEvent:
initWithFrame:focusEnabledProvider:environmentConfiguration:
canBecomeFirstResponder
_evaluateFocusFade
_startFadeTimerIfNecessary
_canFade
_fadeFocusRing
_unfadeFocusRing
focusRingView
setFocusRingView:
platterView
setPlatterView:
highContrastBackgroundColorView
setHighContrastBackgroundColorView:
shadowView
setShadowView:
contentView
setContentView:
focusEnabledProvider
setFocusEnabledProvider:
focusFadeTimer
setFocusFadeTimer:
focusFaded
setFocusFaded:
_focusFaded
_focusRingView
_platterView
_highContrastBackgroundColorView
_shadowView
_contentView
_focusEnabledProvider
_focusFadeTimer
T@"DBWidgetFocusRingView",&,N,V_focusRingView
T@"_TtC9DashBoard22DBDashboardPlatterView",&,N,V_platterView
T@"UIView",&,N,V_highContrastBackgroundColorView
T@"MTShadowView",&,N,V_shadowView
T@"UIView",&,N,V_contentView
T@"<DBWidgetViewFocusEnabledProviding>",W,N,V_focusEnabledProvider
T@"NSTimer",&,N,V_focusFadeTimer
TB,N,V_focusFaded
_wallpaperChanged:
touchesEnded:withEvent:
setHidden:
snapshotViewAfterScreenUpdates:
widgetViewTapped
invalidateConstraints
isHidden
wantsLargeSize
setWantsLargeSize:
dimmingView
setDimmingView:
_hidden
_wantsLargeSize
_dimmingView
T@"UIView",&,N,V_dimmingView
T@"<DBEnvironment>",R,W,N,V_environment
hidden
TB,N,GisHidden,V_hidden
TB,N,V_wantsLargeSize
initWithBundleIdentifier:category:active:
isEqualToAppDockItem:
bundleIdentifier
category
isActive
_active
_category
T@"NSString",R,C,N,V_bundleIdentifier
TQ,R,N,V_category
active
TB,R,N,GisActive,V_active
_muteStateChanged:
buttonTapped:
_displayLinkFired:
handleCallStatusChanged
updateLabelsForCurrentStyle
_shouldUseMultilineTitleButton
_updateUIForCallState
_displayNameForCall:
currentCall
setCurrentCall:
constraints
setConstraints:
tallMultiwayOnlyConstraints
setTallMultiwayOnlyConstraints:
tallNonMultiwayConstraints
setTallNonMultiwayConstraints:
lastViewSize
setLastViewSize:
avatarButton
setAvatarButton:
appIconButton
setAppIconButton:
contactNameLabel
setContactNameLabel:
callTimeLabel
setCallTimeLabel:
multiwayTitleButton
setMultiwayTitleButton:
muteButton
setMuteButton:
endCallButton
setEndCallButton:
topFocusContainerGuide
setTopFocusContainerGuide:
bottomFocusContainerGuide
setBottomFocusContainerGuide:
multiwayLabelFocusContainerGuide
setMultiwayLabelFocusContainerGuide:
leftButtonGuide
setLeftButtonGuide:
midButtonGuide
setMidButtonGuide:
rightButtonGuide
setRightButtonGuide:
labelContainerGuide
setLabelContainerGuide:
topRowGuide
setTopRowGuide:
midTopRowGuide
setMidTopRowGuide:
midBottomGuide
setMidBottomGuide:
bottomRowGuide
setBottomRowGuide:
callTimeDisplayLink
setCallTimeDisplayLink:
_currentCall
_constraints
_tallMultiwayOnlyConstraints
_tallNonMultiwayConstraints
_avatarButton
_appIconButton
_contactNameLabel
_callTimeLabel
_multiwayTitleButton
_muteButton
_endCallButton
_topFocusContainerGuide
_bottomFocusContainerGuide
_multiwayLabelFocusContainerGuide
_leftButtonGuide
_midButtonGuide
_rightButtonGuide
_labelContainerGuide
_topRowGuide
_midTopRowGuide
_midBottomGuide
_bottomRowGuide
_callTimeDisplayLink
_lastViewSize
T@"TUCall",&,N,V_currentCall
T@"NSArray",&,N,V_constraints
T@"NSArray",&,N,V_tallMultiwayOnlyConstraints
T@"NSArray",&,N,V_tallNonMultiwayConstraints
T{CGSize=dd},N,V_lastViewSize
T@"DBInCallWidgetAvatarView",&,N,V_avatarButton
T@"DBInCallWidgetAppIconButton",&,N,V_appIconButton
T@"UILabel",&,N,V_contactNameLabel
T@"UILabel",&,N,V_callTimeLabel
T@"DBInCallWidgetMultiwayTitleButton",&,N,V_multiwayTitleButton
T@"DBInCallWidgetButton",&,N,V_muteButton
T@"DBInCallWidgetButton",&,N,V_endCallButton
T@"UIFocusContainerGuide",&,N,V_topFocusContainerGuide
T@"UIFocusContainerGuide",&,N,V_bottomFocusContainerGuide
T@"UIFocusContainerGuide",&,N,V_multiwayLabelFocusContainerGuide
T@"UILayoutGuide",&,N,V_leftButtonGuide
T@"UILayoutGuide",&,N,V_midButtonGuide
T@"UILayoutGuide",&,N,V_rightButtonGuide
T@"UILayoutGuide",&,N,V_labelContainerGuide
T@"UILayoutGuide",&,N,V_topRowGuide
T@"UILayoutGuide",&,N,V_midTopRowGuide
T@"UILayoutGuide",&,N,V_midBottomGuide
T@"UILayoutGuide",&,N,V_bottomRowGuide
T@"CADisplayLink",&,N,V_callTimeDisplayLink
_reversesLinearFocusWrapping
_canBecomeKeyWindow
setRightHandDrive:
TB,N,GisRightHandDrive,V_rightHandDrive
car_people
car_action
car_valid
db_firstObjectPassingTest:
db_map:
db_filter:
db_mutatingMap:
db_removeFirstObjectIfMatching:
db_removeFirstObjectsIfMatching:
view
setView:
_view
T@"UIView",&,N,V_view
setWidgetViewControllers:
animateWithUpdates:completion:
animateUpdateForWidgetViewController:updateBlock:completion:
visibleCount
_reloadConstraints
_setAnchorPoint:forView:
widgetViewControllers
currentConstraints
setCurrentConstraints:
_widgetViewControllers
_currentConstraints
T@"NSArray",&,N,V_currentConstraints
T@"NSArray",&,N,V_widgetViewControllers
_telephonyDropTapped:
_touchedDisplayToDismiss:
viewWillLayoutSubviews
siriPresentation:requestsPresentationWithOptions:withHandler:
siriPresentation:requestsDismissalWithOptions:withHandler:
siriPresentation:isEnabledDidChange:
restrictSystemApertureToDefaultLayoutWithReason:
invalidateSystemApertureAssertionWithReason:
siriPresentation:setShowsHomeAffordance:
siriPresentation:setHomeAffordanceSuppression:
siriPresentation:requestsPunchout:withHandler:
activeIntentWithBundleId:
presentsUnderStatusBar
presentsFullScreen
presentationViewWithIdentifier:
invalidatePresentationViewForIdentifier:
foregroundSceneWithSettings:completion:
backgroundSceneWithCompletion:
activateSceneWithSettings:completion:
deactivateSceneWithReasonMask:
_hostedPresentationFrame
setPaired:
setTouchToDismissEnabled:forRequester:
handleTransitionToFrame:
_handleHomeEventType:
_addPresentationView
_removePresentationView
_handlePunchoutRequest:
_requestDismissalWithReason:
_handleBackgroundURLRequest:applicationInfo:
_safeDismissAnimated:completion:
_updateHostedPresentationFrame
_updateTouchToDismiss
isPaired
isDismissed
setDismissed:
presentationViewController
setPresentationViewController:
intentUsageDelegate
setIntentUsageDelegate:
activeIntentBundleID
setActiveIntentBundleID:
presentationRequestHandler
setPresentationRequestHandler:
pendingChangeRequest
setPendingChangeRequest:
layoutElementAssertion
setLayoutElementAssertion:
touchToDismissEnabledReasons
setTouchToDismissEnabledReasons:
touchToDismissRecognizer
setTouchToDismissRecognizer:
_paired
_dismissed
_presentationViewController
_intentUsageDelegate
_activeIntentBundleID
_presentationRequestHandler
_pendingChangeRequest
_layoutElementAssertion
_touchToDismissEnabledReasons
_touchToDismissRecognizer
T@"SiriPresentationViewController",&,N,V_presentationViewController
T@?,C,N,V_presentationRequestHandler
T@"NSString",C,N,V_activeIntentBundleID
T@"DBWorkspaceStateChangeRequest",&,N,V_pendingChangeRequest
T@"<BSInvalidatable>",&,N,V_layoutElementAssertion
dismissed
TB,N,GisDismissed,V_dismissed
T@"NSMutableSet",&,N,V_touchToDismissEnabledReasons
T@"UILongPressGestureRecognizer",&,N,V_touchToDismissRecognizer
paired
TB,N,GisPaired,V_paired
T@"<SiriPresentationIntentUsageDelegate>",W,N,V_intentUsageDelegate
registerServiceClass:
registeredServiceClasses
serviceWithHome:service:
serviceType
observerProtocol
accessoryDidUpdateName:
accessory:didUpdateNameForService:
accessory:didUpdateAssociatedServiceTypeForService:
accessoryDidUpdateServices:
accessory:didAddProfile:
accessory:didRemoveProfile:
accessoryDidUpdateReachability:
accessory:service:didUpdateValueForCharacteristic:
accessory:didUpdateFirmwareVersion:
name
usable
stateDescription
distance
T@"NSUUID",R,N
initWithHome:service:
characteristicForType:
characteristicForName:
interactive
reachable
current
pendingWrite
pendingRead
hasError
refreshCharacteristicValues
managedCharacteristics
_characteristicDidUpdate:
_tracksLastUsed
_shouldUpdateLastUsedForCharacteristic:
homeUniqueIdentifier
home
characteristics
lastWritten
setLastWritten:
setService:
characteristicsByType
_lastWritten
_homeUniqueIdentifier
_home
_characteristics
_characteristicsByType
TB,N,V_lastWritten
T@"HMService",&,N,V_service
T@"NSDictionary",R,N,V_characteristicsByType
T@"NSUUID",R,N,V_homeUniqueIdentifier
T@"DBHome",R,W,N,V_home
T@"NSDictionary",R,N,V_characteristics
_initWithState:
_bundleIdentifierFromEntity:
baseEntity
stackedEntity
_baseEntity
_stackedEntity
T@"DBDashboardEntity",R,N,V_baseEntity
T@"DBDashboardEntity",R,N,V_stackedEntity
setBaseEntity:
setStackedEntity:
T@"DBDashboardEntity",&,D,N
dashboardStateProvider:didChangeConnectionReady:
dashboardStateProvider:didChangeLockoutState:
dashboardStateProvider:didChangeHomeScreenPageType:
dashboardStateProvider:didChangeActiveBundleIdentifier:
homeViewController:didChangeToPageIndex:firstIconPageIndex:minimumPageIndex:
initWithDashboard:
setConnectionReady:
setLockoutState:
setPageType:
_refreshObservations
lockoutState
pageType
dashboard
_connectionReady
_lockoutState
_pageType
_dashboard
T@"DBDashboard",R,W,N,V_dashboard
TB,N,V_connectionReady
TQ,N,V_lockoutState
TQ,N,V_pageType
deactivateApplication:
destroyApplication:
activateApplication:
activateApplication:withSettings:
activateStackedApplication:
activateStackedApplication:withSettings:
activateSiri
activateSiriFloating
deactivateSiri
activateHomeScreen
initWithEnvironment:animationManager:widgetSizeManager:
setAvailableWidgetSizes:
availableWidgetSizes
widgetSizeManager
setWidgetSizeManager:
pendingFenceHandle
setPendingFenceHandle:
pendingAnimationSettings
setPendingAnimationSettings:
_availableWidgetSizes
_widgetSizeManager
_pendingFenceHandle
_pendingAnimationSettings
T@"<DBWidgetSizeManaging>",W,N,V_widgetSizeManager
T@"BKSAnimationFenceHandle",&,N,V_pendingFenceHandle
T@"BSAnimationSettings",&,N,V_pendingAnimationSettings
T@"NSArray",&,N,V_availableWidgetSizes
maxDistance
locationManager:didUpdateLocation:
locationManager:didEnterRegionIdentifier:
locationManager:didExitRegionIdentifier:
networkPathMonitor:didChangeNetworkReachable:
networkPathMonitorDidChangeNetworkPath:
homeDidUpdateName:
homeDidUpdateAccessControlForCurrentUser:
home:didAddAccessory:
home:didRemoveAccessory:
home:didAddUser:
home:didRemoveUser:
home:didUpdateRoom:forAccessory:
home:didAddRoom:
home:didRemoveRoom:
home:didUpdateNameForRoom:
home:didAddZone:
home:didRemoveZone:
home:didUpdateNameForZone:
home:didAddRoom:toZone:
home:didRemoveRoom:fromZone:
home:didAddServiceGroup:
home:didRemoveServiceGroup:
home:didUpdateNameForServiceGroup:
home:didAddService:toServiceGroup:
home:didRemoveService:fromServiceGroup:
home:didAddActionSet:
home:didRemoveActionSet:
home:didUpdateNameForActionSet:
home:didUpdateActionsForActionSet:
home:didAddTrigger:
home:didRemoveTrigger:
home:didUpdateNameForTrigger:
home:didUpdateTrigger:
home:didUnblockAccessory:
home:didEncounterError:forAccessory:
home:didUpdateHomeHubState:
homeDidUpdateSupportedFeatures:
home:didAddResidentDevice:
home:didRemoveResidentDevice:
home:didUpdateLocation:
home:didUpdateStateForOutgoingInvitations:
home:didUpdateAccesoryInvitationsForUser:
homeDidUpdateApplicationData:
home:didUpdateApplicationDataForRoom:
home:didUpdateApplicationDataForServiceGroup:
home:didUpdateApplicationDataForActionSet:
home:didUpdateLastExecutionDateForActionSet:
home:didUpdateAccessControlForUser:
home:didEnableNotifications:
home:didUpdateAutomaticSoftwareUpdateEnabled:
home:didUpdateMinimumMediaUserPrivilege:
home:didUpdateMediaPeerToPeerEnabled:
home:didUpdateMediaPassword:
home:didAddMediaSystem:
home:didRemoveMediaSystem:
home:didUpdateReprovisionStateForAccessory:
homeDidUpdateProtectionMode:
homeDidUpdateNetworkRouterSupport:
homeDidUpdateHomeLocationStatus:
homeDidEnableMultiUser:
homeDidSetHasAnyUserAcknowledgedCameraRecordingOnboarding:
home:didAddAccessoryNetworkProtectionGroup:
home:didRemoveAccessoryNetworkProtectionGroup:
home:didUpdateAccessoryNetworkProtectionGroup:
homeDidSetEnableDoorbellChime:
home:didUpdatePersonManagerSettings:
home:didFailAccessorySetupWithError:
homeDidSetHasOnboardedForAccessCode:
homeDidAddWalletKey:
homeDidRemoveWalletKey:
home:didUpdateHasOnboardedForWalletKey:
homeDidUpdateAssistantIdentifiers:
homeDidUpdateToROAR:
home:didUpdateAreBulletinNotificationsSupported:
initWithHome:resourceProvider:
formattedUniqueIdentifier
location
inRange
inLocationRange
inHomeRange
hasGarageDoor
garageDoors
cachedGarageDoors
hasCachedGarageDoors
updatingLastUsedServiceTypes
_updateCachedGarageDoors
_updateLastUsedServiceOfType:
_updateInRangeIfNeeded
refreshGarageDoors
_setValue:forCharacteristic:completion:
_scheduleGarageDoorRefresh
lastUsedGarageDoor
setCachedGarageDoors:
lastUsedIdentifiersByServiceType
garageDoorRefreshScheduled
setGarageDoorRefreshScheduled:
locationManager
previouslyInRange
setPreviouslyInRange:
inExtendedRange
setInExtendedRange:
lastLoggedDistance
setLastLoggedDistance:
networkPathMonitor
_updatingLastUsedServiceTypes
_garageDoorRefreshScheduled
_previouslyInRange
_inExtendedRange
_lastUsedGarageDoor
_cachedGarageDoors
_lastUsedIdentifiersByServiceType
_locationManager
_lastLoggedDistance
_networkPathMonitor
T@"HMHome",R,N,V_home
T@"NSDictionary",&,N,V_cachedGarageDoors
T@"NSMutableSet",R,N
T@"NSMutableDictionary",R,N,V_lastUsedIdentifiersByServiceType
TB,N,V_garageDoorRefreshScheduled
T@"DBLocationManager",R,N,V_locationManager
TB,N,V_previouslyInRange
TB,N,V_inExtendedRange
Td,N,V_lastLoggedDistance
T@"DBNetworkPathMonitor",R,N,V_networkPathMonitor
T@"CLLocation",R,N
T@"DBGarageDoor",R,N,V_lastUsedGarageDoor
registerCharacteristicClass:
registeredCharacteristicClasses
chacteristicWithService:characteristic:
characteristicFormats
initWithService:characteristic:
setValue:
_didUpdate
_locked_State
error
setError:
_lock_setError:
updateValueRequiringRead:
_readValueCompletionTransactionID:error:
format
notifies
readable
writeable
_updateValue
setFormatedValue:
setCurrent:
characteristic
setCharacteristic:
valueLock
setValueLock:
cachedValue
setCachedValue:
pendingValue
setPendingValue:
transactionId
setTransactionId:
_current
_valueLock
_value
_error
_formatedValue
_characteristic
_cachedValue
_pendingValue
_transactionId
T@"HMCharacteristic",&,N,V_characteristic
T{os_unfair_lock_s=I},N,V_valueLock
T@,&,N,V_cachedValue
T@,&,N,V_pendingValue
TQ,N,V_state
TQ,N,V_transactionId
T@"NSError",&,N,V_error
T@,&,N,V_value
T@,&,N,V_formatedValue
TB,N,V_current
T@"DBHome",R,N
T@"DBHomeKitService",R,W,N,V_service
touchesShouldCancelInContentView:
buddyMonitorDidChangeFinished:
setBuddyFinished:
_updateBuddyFinished
buddyFinished
_buddyFinished
T@"CARObserverHashTable",&,V_observers
TB,N,V_buddyFinished
_shouldAnimatePropertyWithKey:
keysToAnimate
setKeysToAnimate:
_keysToAnimate
T@"NSArray",C,N,V_keysToAnimate
_externalUnfocusedBorderColor
carButtonColor
setCarButtonColor:
_carButtonColor
T@"UIColor",&,N,V_carButtonColor
setRootContainerView:
setRootContainerBackgroundColor:
setToView:
setToTransitionContainerView:
setFromView:
setFromTransitionContainerView:
setAppDockViewController:
setToIdentifier:
T@"UIView",&,N,V_rootContainerView
T@"UIColor",&,N,V_rootContainerBackgroundColor
T@"UIView",&,N,V_toView
T@"UIView",&,N,V_toTransitionContainerView
T@"UIView",&,N,V_fromView
T@"UIView",&,N,V_fromTransitionContainerView
T@"DBAppDockViewController",&,N,V_appDockViewController
T@"NSString",C,N,V_toIdentifier
predictionDidUpdate:
_defaultIsEqualClass:
initialValidInterval
_scoreFor:minValue:maxValue:
isEqualClassSelector
score
validRanges
isEqualToPrediction:
compare:
_debugScoreText
debugValidRangesText
predictedObjectDescription
predictionDidUpdate
predictionScore
defaultValidRanges
invalidateValidIntervals
updateRangeIfNeeded:
setValidRanges:
setUniqueIdentifier:
_showImageBorder
_validRanges
_uniqueIdentifier
_title
_subtitle
_image
_compositingFilter
_actionBlock
_tieBreakScore
T@"<DBSmartWidgetPredictionDelegate>",W,N,V_delegate
T@"NSUUID",C,N,V_uniqueIdentifier
T@"NSArray",&,N,V_validRanges
T@"NSString",R,C,N,V_title
T@"NSString",R,C,N,V_subtitle
T@"UIImage",R,N,V_image
T@"CAFilter",R,N,V_compositingFilter
TB,R,N,V_showImageBorder
T@?,R,C,N,V_actionBlock
Tq,R,N,V_tieBreakScore
animationBlock
setAnimationBlock:
ready
setReady:
client
setClient:
_ready
_animationBlock
_client
T@?,C,N,V_animationBlock
TB,N,V_ready
T@,&,N,V_client
registerAnimation:client:animation:
runAnimationIfPossible:client:
animationsByIdentifier
setAnimationsByIdentifier:
_animationsByIdentifier
T@"NSMutableDictionary",&,N,V_animationsByIdentifier
_initWithApplicationInfo:proxyApplicationInfo:environment:
initWithApplicationInfo:environment:
initWithApplicationInfo:proxyApplicationInfo:environment:
_addAlertSubviewIfReady
_removeAlertSubviewIfNecessary
_updateSceneUI
_displayLayoutElementIdentifier
_requestDismissal
_requestDestroy
proxyApplicationInfo
setProxyApplicationInfo:
_proxyApplicationInfo
T@"DBApplicationInfo",&,N,V_proxyApplicationInfo
albumArtButtonTapped:
playPauseButtonTouchDown:
playPauseButtonTouchUp:
_cancelHeldAction:
nextButtonTouchDown:
nextButtonTouchUp:
backButtonTouchDown:
backButtonTouchUp:
backButtonLongPress:
nextButtonLongPress:
_respondToHeldAction
nowPlayingManager:didUpdateSnapshot:
nowPlayingManager:didThrottleUpdateForBundleIdentifier:
nowPlayingObserver:didChangeNowPlayingApplication:
nowPlayingObserver:didUpdatePlaybackState:inApplication:
controller:defersResponseReplacement:
controller:shouldRetryFailedRequestWithError:
willBeginLoadingRequestForController:
didFinishLoadingRequestForController:
_imageInsetsForTransportButton:
_heightForArtwork
_showsProgressView
_showsTextLabels
_showsBackButton
_setSpinnerVisible:
_isFocusUI
_updateButton:withType:variant:
_setupTransportControls
_updateAppearanceForWallpaper
_sendAction:withState:
_nowPlayingCompletionForAction:isPlayCommand:error:
_sendHeldAction
_nowPlayingPlaceholderImage
setShowArtworkBorder:
_updateArtworkBorder
_setNotPlaying
_processArtworkForCurrentlyPlayingSong
_setupPlaceholderArtwork
_updateArtworkConstraints
_processLabelsForCurrentlyPlayingSong
_processPlaybackControlsForCurrentlyPlayingSong
focusContainerGuide
setFocusContainerGuide:
controlsContainerGuide
setControlsContainerGuide:
backLongPressRecognizer
setBackLongPressRecognizer:
nextLongPressRecognizer
setNextLongPressRecognizer:
heldAction
setHeldAction:
seeking
setSeeking:
spinnerTimer
setSpinnerTimer:
spinner
setSpinner:
lastSnapshot
setLastSnapshot:
widgetConstraints
setWidgetConstraints:
artworkButton
setArtworkButton:
playTransportButton
setPlayTransportButton:
nextTransportButton
setNextTransportButton:
layoutGuides
setLayoutGuides:
showArtworkBorder
backTransportButton
setBackTransportButton:
subtitleLabel
setSubtitleLabel:
artworkHorizontalConstraint
setArtworkHorizontalConstraint:
progressView
setProgressView:
previousCatalog
setPreviousCatalog:
_seeking
_showArtworkBorder
_focusContainerGuide
_controlsContainerGuide
_backLongPressRecognizer
_nextLongPressRecognizer
_heldAction
_spinnerTimer
_spinner
_lastSnapshot
_widgetConstraints
_artworkButton
_playTransportButton
_nextTransportButton
_layoutGuides
_backTransportButton
_subtitleLabel
_artworkHorizontalConstraint
_progressView
_previousCatalog
T@"UIFocusContainerGuide",&,N,V_focusContainerGuide
T@"UIFocusContainerGuide",&,N,V_controlsContainerGuide
T@"UILongPressGestureRecognizer",&,N,V_backLongPressRecognizer
T@"UILongPressGestureRecognizer",&,N,V_nextLongPressRecognizer
Tq,N,V_heldAction
TB,N,V_seeking
T@"NSTimer",&,N,V_spinnerTimer
T@"UIActivityIndicatorView",&,N,V_spinner
T@"CPUINowPlayingSnapshot",&,N,V_lastSnapshot
T@"NSArray",&,N,V_widgetConstraints
T@"UIButton",&,N,V_artworkButton
T@"DBNowPlayingFocusHighlightButton",&,N,V_playTransportButton
T@"DBNowPlayingFocusHighlightButton",&,N,V_nextTransportButton
T@"NSArray",&,N,V_layoutGuides
TB,N,V_showArtworkBorder
T@"DBNowPlayingFocusHighlightButton",&,N,V_backTransportButton
T@"UILabel",&,N,V_subtitleLabel
T@"NSLayoutConstraint",&,N,V_artworkHorizontalConstraint
T@"CPUIProgressView",&,N,V_progressView
T@"MPArtworkCatalog",&,N,V_previousCatalog
shouldUpdateButtonOpacityForKnobUnfocused
canShowHighlight
colorForKnobFocusLayer
touchesCancelled:withEvent:
initWithStateProvider:environmentConfiguration:
_createStatusBar
statusBarEdgeUpdated
hasActivePill
stateProvider
setStateProvider:
statusBarView
setStatusBarView:
_stateProvider
_statusBarView
T@"DBStatusBarStateProvider",&,N,V_stateProvider
T@"UIStatusBar_Modern",&,N,V_statusBarView
archiveDirectory:toLocation:
unarchive:toLocation:
setPrediction:
_updateViews
_updateImageBorder
didMoveToWindow
prediction
engine
setEngine:
imageview
setImageview:
subTitleLabel
setSubTitleLabel:
scoreDebugLabel
setScoreDebugLabel:
nextRefreshDebugLabel
setNextRefreshDebugLabel:
validRangesDebugLabel
setValidRangesDebugLabel:
_prediction
_engine
_imageview
_subTitleLabel
_scoreDebugLabel
_nextRefreshDebugLabel
_validRangesDebugLabel
T@"UIImageView",&,N,V_imageview
T@"UILabel",&,N,V_subTitleLabel
T@"UILabel",&,N,V_scoreDebugLabel
T@"UILabel",&,N,V_nextRefreshDebugLabel
T@"UILabel",&,N,V_validRangesDebugLabel
T@"DBSmartWidgetPrediction",&,N,V_prediction
T@"DBSmartWidgetEngine",W,N,V_engine
isMovementAllowedForHeading:direction:isRTL:isLeftHandDrive:statusBarEdge:
isOEMToiOSHeadingToStatusBar:isLeftHandDrive:statusBarEdge:
convertRect:fromView:toScreen:
convertRect:toView:fromScreen:
performHapticFeedbackForSenderID:
_currentTouchpad
_currentSenderID
T@"DBEnvironmentConfiguration",W,N,V_environmentConfiguration
_eventStoreDidChange:
shouldKeepPrediction:
_includeCalendar:
_includeEvent:forNow:
_handleAppLibraryRefresh
eventStore
calendarVisibilityManager
_eventStore
_calendarVisibilityManager
T@"EKEventStore",R,N,V_eventStore
T@"EKCalendarVisibilityManager",R,N,V_calendarVisibilityManager
_performAction
_refresh
_previousPrediction
_nextPrediction
smartWidgetEngine:didUpdateCurrentPredictions:
smartWidgetEngineDidUpdatePredictionsFresh:
smartWidgetEngineDidStart:
smartWidgetEngineDidStop:
gestureRecognizerShouldBegin:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldReceivePress:
gestureRecognizer:shouldReceiveEvent:
initWithEnvironment:engine:animationDelegate:
isHighPriority
_updatePrediction
wantsToShowPrediction
setWantsToShowPrediction:
widgetView
setWidgetView:
currentPredictionIndex
setCurrentPredictionIndex:
spinnerView
setSpinnerView:
recognizers
setRecognizers:
actionRecognizer
setActionRecognizer:
actionSelectRecognizer
setActionSelectRecognizer:
refreshRecognizer
setRefreshRecognizer:
previousPredictionRecognizer
setPreviousPredictionRecognizer:
nextPredictionRecognizer
setNextPredictionRecognizer:
animationDelegate
setAnimationDelegate:
_wantsToShowPrediction
_widgetView
_currentPredictionIndex
_spinnerView
_recognizers
_actionRecognizer
_actionSelectRecognizer
_refreshRecognizer
_previousPredictionRecognizer
_nextPredictionRecognizer
_animationDelegate
T@"DBSmartWidgetEngine",R,N,V_engine
T@"DBSmartWidgetView",&,N,V_widgetView
Tq,N,V_currentPredictionIndex
T@"UIActivityIndicatorView",&,N,V_spinnerView
T@"NSSet",&,N,V_recognizers
T@"UITapGestureRecognizer",&,N,V_actionRecognizer
T@"UITapGestureRecognizer",&,N,V_actionSelectRecognizer
T@"UILongPressGestureRecognizer",&,N,V_refreshRecognizer
T@"UISwipeGestureRecognizer",&,N,V_previousPredictionRecognizer
T@"UISwipeGestureRecognizer",&,N,V_nextPredictionRecognizer
T@"<DBSmartWidgetAnimating>",W,N,V_animationDelegate
TB,N,V_wantsToShowPrediction
highPriority
TB,R,N,GisHighPriority
session:policyForRequest:
session:handleStateChangeRequest:
workspace:didBeginStateChangeSession:
workspace:didEndStateChangeSession:
T@"DBWorkspace",W,N,V_workspace
isEqualToCalendarPrediction:
setNow:
earliestStartDate
latestStartDate
T@"NSDate",&,N
T@"NSDate",R,N
initWithEvent:
addEvent:
setSoonestEvent:
startDate
endDate
allDay
variousEndDates
_uuidFromString:
isSoonestEvent
events
_soonestEvent
_events
soonestEvent
TB,N,GisSoonestEvent,V_soonestEvent
T@"NSArray",R,N,V_events
initWithWallpaperPreferences:
_updateHighlight
setWallpaperPreferences:
highlightView
setHighlightView:
_highlightView
T@"CRSUIWallpaperPreferences",&,N,V_wallpaperPreferences
T@"UIView",&,N,V_highlightView
initWithConfigurationOptions:listLayoutProvider:
_frameForLabelHighlight
setLabelHidden:
configureLabelImageParametersBuilder:
scale
prepareForReuse
_updateLabel
_configureIconImageView:
maximumIconViewHeightForIconImageSize:
defaultIconLocation
allowsLabelAccessoryView
minimumInterIconSpacing
maxLabelSizeForIconImageSize:
_labelHeight
supportsDragInteraction
supportsPreviewInteraction
supportsCursorInteraction
_iconLabelsRequireBackground
textColorForTraitCollection:
focusTextColorForTraitCollection:
focusColorForTraitCollection:
labelFontForTraitCollection:
_updateCharacteristicsWithTraitCollection:
T@"DBEnvironmentConfiguration",&,N
labelFont
_labelBaselineOffsetFromImage
_refreshDropShadowWithIconImage:
setShadowHidden:
shadowHidden
dropShadowProvider
setDropShadowProvider:
dropShadowView
setDropShadowView:
labelLegibilityView
setLabelLegibilityView:
_shadowHidden
_dropShadowProvider
_dropShadowView
_labelLegibilityView
T@"DBIconDropShadowProvider",&,N,V_dropShadowProvider
T@"UIView",&,N,V_dropShadowView
T@"DBIconLabelBackdropView",&,N,V_labelLegibilityView
TB,N,V_shadowHidden
dashboardRootViewController:didChangeToViewState:
initWithEnvironment:layoutEngine:
presentBaseViewController:animated:launchSource:completion:
dismissBaseViewControllerAnimated:completion:
presentStackedViewController:animated:completion:
dismissStackedViewControllerAnimated:completion:
addViewStateObserver:
removeViewStateObserver:
setContentCornerRadius:
_updateHomeConstraints
setCurrentViewState:
_updateHomeScreenLayoutElementIfNeeded
_presentBaseViewController:animated:launchSource:completion:
_dismissViewController:andPresentBaseViewController:animated:completion:
_dismissBaseViewControllerAnimated:completion:
_presentStackedViewController:animated:completion:
_dismissStackedViewControllerAnimated:completion:
homeViewController
contentCornerRadius
backgroundView
setBackgroundView:
baseContainerView
setBaseContainerView:
stackedContainerView
setStackedContainerView:
currentBaseViewController
setCurrentBaseViewController:
currentStackedViewController
setCurrentStackedViewController:
viewStateObservers
setViewStateObservers:
currentViewState
homeScreenElementAssertion
setHomeScreenElementAssertion:
homeViewConstraints
setHomeViewConstraints:
_homeViewController
_contentCornerRadius
_backgroundView
_baseContainerView
_stackedContainerView
_currentBaseViewController
_currentStackedViewController
_viewStateObservers
_currentViewState
_homeScreenElementAssertion
_homeViewConstraints
T@"_TtC9DashBoard22DBDashboardDimmingView",&,N,V_dimmingView
T@"UIView",&,N,V_backgroundView
T@"CPUIPassthroughView",&,N,V_contentView
T@"UIView",&,N,V_baseContainerView
T@"UIView",&,N,V_stackedContainerView
T@"UIViewController<DBDashboardWorkspaceEntityPresenting>",&,N,V_currentBaseViewController
T@"UIViewController<DBDashboardWorkspaceEntityPresenting>",&,N,V_currentStackedViewController
T@"CARObserverHashTable",&,N,V_viewStateObservers
TQ,N,V_currentViewState
T@"<BSInvalidatable>",&,N,V_homeScreenElementAssertion
T@"NSArray",&,N,V_homeViewConstraints
T@"DBDashboardHomeViewController",R,N,V_homeViewController
T@"DBAppDockViewController",W,N,V_appDockViewController
Td,N,V_contentCornerRadius
iconView
setIconView:
_iconView
T@"DBIconView",&,N,V_iconView
initWithNibName:bundle:
initWithAlert:environmentConfiguration:
alert
dismissHandler
_alert
_dismissHandler
T@?,R,N,V_dismissHandler
T@"URTAlert",R,N,V_alert
_buttonWithAlertAction:
initWithDelegate:
_updateHomeButtonState
currentPageIndex
setCurrentPageIndex:
minimumPageIndex
setMinimumPageIndex:
firstIconPageIndex
setFirstIconPageIndex:
_currentPageIndex
_minimumPageIndex
_firstIconPageIndex
T@"<DBStatusBarButtonStateManagerDelegate>",W,N,V_delegate
Tq,N,V_currentPageIndex
Tq,N,V_minimumPageIndex
Tq,N,V_firstIconPageIndex
homeKitLocationManager
locationManager:didUpdateToLocation:fromLocation:
locationManager:didUpdateLocations:
locationManager:didUpdateHeading:
locationManagerShouldDisplayHeadingCalibration:
locationManager:didDetermineState:forRegion:
locationManager:didRangeBeacons:inRegion:
locationManager:rangingBeaconsDidFailForRegion:withError:
locationManager:didRangeBeacons:satisfyingConstraint:
locationManager:didFailRangingBeaconsForConstraint:error:
locationManager:didEnterRegion:
locationManager:didExitRegion:
locationManager:didFailWithError:
locationManager:monitoringDidFailForRegion:withError:
locationManager:didChangeAuthorizationStatus:
locationManagerDidChangeAuthorization:
locationManager:didStartMonitoringForRegion:
locationManagerDidPauseLocationUpdates:
locationManagerDidResumeLocationUpdates:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didVisit:
initWithLocationManager:locationQueue:
initWithBundlePath:
initWithBundleIdentifier:
_commonPostInit
authorized
currentLocation
cachedCurrentLocation
startUpdatingLocationWithIdentifier:
_startUpdatingLocationNow
stopUpdatingLocationWithIdentifier:
_stopUpdatingLocationNow
startMonitoringForRegionWithIdentifier:locationCoordinate:range:
stopMonitoringForRegionWithIdentifier:
_authorizeIfNeeded
_name
_updateCurrentLocation:
_didEnterRegionWithIdentifier:
_didExitRegionWithIDentifier:
bundlePath
bundle
setLocationManager:
locationQueue
setLocationQueue:
activeAssertions
setActiveAssertions:
locationActive
setLocationActive:
setCurrentLocation:
lastPostedLocation
setLastPostedLocation:
monitoringRegions
setMonitoringRegions:
cacheUsedCount
setCacheUsedCount:
_locationActive
_cachedCurrentLocation
_bundlePath
_bundle
_locationQueue
_activeAssertions
_currentLocation
_lastPostedLocation
_monitoringRegions
_cacheUsedCount
T@"CLLocationManager",&,N,V_locationManager
T@"NSObject<OS_dispatch_queue>",&,N,V_locationQueue
T@"NSMutableSet",&,N,V_activeAssertions
TB,N,V_locationActive
T@"CLLocation",&,N,V_currentLocation
T@"CLLocation",&,N,V_lastPostedLocation
T@"NSMutableDictionary",&,N,V_monitoringRegions
T@"CLLocation",R,N,V_cachedCurrentLocation
TQ,N,V_cacheUsedCount
T@"NSString",R,N,V_bundlePath
T@"NSBundle",R,N,V_bundle
T@"NSString",R,N,V_bundleIdentifier
_startMonitoringProcess
_handleDeathWithIdentifier:isCrash:pid:
_appStateUpdated:processHandle:
processMonitor
setProcessMonitor:
setPolicyEvaluator:
handleMapTable
setHandleMapTable:
_processMonitor
_handleMapTable
T@"RBSProcessMonitor",&,N,V_processMonitor
T@"CRCarPlayAppPolicyEvaluator",&,N,V_policyEvaluator
T@"NSMapTable",&,N,V_handleMapTable
buttonWithType:
focusHighlightColor
_focusHighlightColor
T@"UIColor",&,N,V_focusHighlightColor
_refreshAppDock
_dockButtonPressed:
initWithAppHistory:iconProvider:environmentConfiguration:
setDockEnabled:
setButtonFocusHighlightColor:
_buttonSizeConstraintsForButton:
_updateNavigationButtonSizeConstraints
_updateAudioButtonSizeConstraints
_updateOtherButtonSizeConstraints
_generateOrderedAppItems
setActiveBundleIdentifier:animated:
_updateNavigationBundleIdentifier:
_updateNowPlayingBundleIdentifier:
appDockViewControllerDelegate
setAppDockViewControllerDelegate:
isDockEnabled
buttonFocusHighlightColor
navigationAppButton
setNavigationAppButton:
navigationAppButtonSizeConstraints
setNavigationAppButtonSizeConstraints:
audioAppButton
setAudioAppButton:
audioAppButtonSizeConstraints
setAudioAppButtonSizeConstraints:
otherAppButton
setOtherAppButton:
otherAppButtonSizeConstraints
setOtherAppButtonSizeConstraints:
dockItemStackView
setDockItemStackView:
orderedAppItems
setOrderedAppItems:
iconProvider
setIconProvider:
_dockEnabled
_appDockViewControllerDelegate
_buttonFocusHighlightColor
_navigationAppButton
_navigationAppButtonSizeConstraints
_audioAppButton
_audioAppButtonSizeConstraints
_otherAppButton
_otherAppButtonSizeConstraints
_dockItemStackView
_orderedAppItems
_iconProvider
T@"DBAppDockButton",&,N,V_navigationAppButton
T@"NSArray",&,N,V_navigationAppButtonSizeConstraints
T@"DBAppDockButton",&,N,V_audioAppButton
T@"NSArray",&,N,V_audioAppButtonSizeConstraints
T@"DBAppDockButton",&,N,V_otherAppButton
T@"NSArray",&,N,V_otherAppButtonSizeConstraints
T@"UIStackView",&,N,V_dockItemStackView
T@"NSArray",&,N,V_orderedAppItems
T@"<DBIconProviding>",W,N,V_iconProvider
T@"<DBAppDockViewControllerDelegate>",W,N,V_appDockViewControllerDelegate
dockEnabled
TB,N,GisDockEnabled,V_dockEnabled
T@"UIColor",&,N,V_buttonFocusHighlightColor
alignmentIconSize
iconRowsForScreenHeight:iconImageSize:statusBarEdge:interactionAffordances:
iconColumnsForScreenWidth:iconImageSize:statusBarEdge:
automaticallyAdjustsLayoutMetricsToFit
adaptsOrientationToTraitCollection
usesAlternateLayout
layoutInsetsForOrientation:
baseIconViewClass
insets
setInsets:
_insets
T{UIEdgeInsets=dddd},N,V_insets
defaultIconState
allApplicationIcons
T@"NSArray",R,C,N
iconManager:willUseRootFolderControllerConfiguration:
iconManager:willDestroyRootFolderController:
iconManager:didCreateRootFolderController:
iconManager:willDestroyRootViewController:
iconManager:didCreateRootViewController:
interfaceOrientationForIconManager:
allowedInterfaceOrientationsForIconManager:
possibleInterfaceOrientationsForIconManager:
isRootFolderContentVisibleForIconManager:
isIconContentPossiblyVisibleOverApplicationForIconManager:
isEditingAllowedForIconManager:
iconManagerEditingDidChange:
iconManager:isPartialEditingAllowedForIconLocation:
iconManager:willUseIconImageCache:
iconManagerListLayoutProviderDidChange:
iconManager:configureIconView:forIcon:
iconManager:reasonToDisallowTapOnIconView:
iconManager:reasonToDisallowInteractionOnIconView:
iconManager:possibleUserIconTapBegan:
iconManager:possibleUserIconTapBeganAfterInformingIcon:
iconManager:willPrepareIconViewForLaunch:
iconManager:didReceiveTapOnLaunchDisabledIconView:
iconManager:launchIconForIconView:
iconManager:launchIconForIconView:withActions:
iconManager:touchesEndedForIconView:
iconManager:launchIcon:location:animated:completionHandler:
iconManager:isIconVisibleForBundleIdentifier:
iconManager:wantsLaunchForWidgetURL:
iconManager:launchActionsForIconView:
iconManager:launchURLForIconView:
iconManager:containerViewForPresentingContextMenuForIconView:
iconManager:iconView:willUseContextMenuStyle:
iconManager:containerViewControllerForConfigurationOfIconView:
iconManager:contentBoundingRectForConfigurationOfIconView:
iconManager:homeScreenContentViewForConfigurationOfIconView:
iconManager:iconView:configurationWillBeginWithInteraction:
iconManager:iconView:configurationWillEndWithInteraction:
iconManager:iconView:configurationDidEndWithInteraction:
iconManager:containerViewControllerForModalInteractionFromIconView:
iconManager:homeScreenContentViewForModalInteractionFromIconView:
iconManager:iconViewDisplaysCloseBox:
iconManager:iconCloseBoxTapped:
iconManager:iconViewDisplaysLabel:
iconManager:wantsUninstallForIcon:location:
iconManager:closeBoxTypeForIconView:proposedType:
iconManager:allowsBadgingForIcon:
iconManager:allowsBadgingForIconLocation:
isFocusAllowedForIconManager:
iconManager:focusEffectTypeForIconView:
iconManager:accessibilityTintColorForIconView:
iconManagerDidFinishInstallForIcon:
viewControllerForPresentingViewControllersForIconManager:
iconManager:popoverContentViewControllerForIcon:
containerViewControllerForPopOversForIconManager:
iconManager:canBeginDragForIconView:
iconManager:canAddDragItemsToSession:fromIconView:
iconManager:canAcceptDropInSession:inIconListView:
iconManager:additionalDragLiftScaleForIconView:
iconManager:draggingStartLocationForIconView:proposedStartLocation:
iconManager:backgroundViewForComponentsOfIconView:
iconManager:backgroundViewForDockForRootFolderController:
iconManager:backgroundViewForEditingDoneButtonForRootFolderController:
iconManager:shouldContinueToUseBackgroundView:forComponentsOfIconView:
iconManager:screenSnapshotProviderForComponentsOfIconView:
recycledViewsContainerProviderForIconManager:
iconManagerCanBeginIconDrags:
iconManager:dragPreviewForIconView:
windowForIconDragPreviewsForIconManager:forWindowScene:
iconManagerIconDraggingDidChange:
iconManager:willBeginIconDragWithUniqueIdentifier:numberOfDraggedItems:
iconManager:didAddItemsToIconDragWithUniqueIdentifier:numberOfDraggedItems:
iconManager:didEndIconDragWithUniqueIdentifier:numberOfDraggedItems:
iconManager:iconDropSessionDidEnter:
iconManager:shouldActivateApplicationShortcutItem:atIndex:forIconView:
iconManager:applicationShortcutItemsForIconView:
iconManager:supportedMultitaskingShortcutActionsForIconView:
iconManager:didSpringLoadIconView:
iconManager:folderController:canChangeCurrentPageIndexToIndex:
iconManager:wantsToHideStatusBarForFolderController:animated:
iconManager:fakeStatusBarForFolderController:
iconManager:statusBarStyleRequestForFolderController:
iconManager:willRemoveFakeStatusBar:forFolderController:
iconManager:statusBarEdgeInsetsForFolderController:
iconManager:statusBarInsetsDidChange:
iconManager:contentOverlayInsetsFromParentIfAvailableForFolderController:
localizedDefaultFolderNameForIconManager:
iconManager:localizedFolderNameForDefaultDisplayName:
iconManager:willOpenFolder:
iconManager:didOpenFolder:
iconManager:willCloseFolder:
iconManager:didCloseFolder:
iconManager:willOpenFolderController:
iconManager:willCloseFolderController:
iconManagerFolderAnimatingDidChange:
iconManager:folderControllerWillBeginScrolling:
iconManager:folderControllerDidEndScrolling:
iconManager:minimumHomeScreenScaleForFolderController:
iconManagerCanUseSeparateWindowForRotation:
iconManager:wantsToAdjustLeadingCustomContentForEdgeBounceForScrollOffset:
distanceToTopOfSpotlightIconsForIconManager:
iconManager:folderControllerClassForFolderClass:proposedClass:
iconManager:nestingViewController:willPerformOperation:onViewController:withTransitionCoordinator:
iconManagerCanSaveIconState:
iconManagerDidSaveIconState:
iconManager:animator:animationSettingsForOperation:childViewController:
iconManager:accessibilityTintColorForScreenRect:
isFloatingDockSupportedForIconManager:
isFloatingDockVisibleForIconManager:
presentTodayOverlayForIconManager:
dismissTodayOverlayForIconManager:
presentLibraryForIconManager:windowScene:animated:
dismissLibraryForIconManager:windowScene:animated:
dismissOverlaysForIconManager:
maximumListCountForFoldersForIconManager:
defaultIconStateForIconManager:
iconManager:shouldAvoidPlacingIconOnFirstPage:
iconManager:defaultAutomaticFavoriteIconIdentifiersWithMaximumCount:
listsAllowRotatedLayoutForIconManager:
iconManagerDidNoteIconStateChangedExternally:
iconManager:rootFolderController:willUseTransitionContext:toTransitionToState:
iconManager:rootFolderController:willUsePropertyAnimator:toTransitionToState:
iconManager:rootFolderController:didChangeSidebarVisibilityProgress:
iconManager:rootFolderController:didChangeEffectiveSidebarVisibilityProgress:
iconManager:rootFolderController:didOverscrollOnFirstPageByAmount:
iconManager:rootFolderController:didEndOverscrollOnFirstPageWithVelocity:translation:
iconManager:rootFolderController:didOverscrollOnLastPageByAmount:
iconManager:rootFolderController:didEndOverscrollOnLastPageWithVelocity:translation:
iconManager:viewControllerForCustomIcon:element:
iconManager:shouldCacheRecentViewController:forIdentifier:
iconManager:willRemoveViewControllerForIdentifier:
iconManager:configurationDataForDataSource:ofIcon:
iconManager:dataSource:ofIcon:didUpdateConfigurationData:
iconManager:didRemoveConfigurableDataSource:ofIcon:
iconManager:prepareForPageHidingEducationWithCompletionHandler:
iconManager:willPresentPageManagementWithLayoutManager:animator:context:
iconManager:willDismissPageManagementUsingAnimator:context:
iconManager:didDismissPageManagementWithLayoutManager:context:
iconManagerWillPresentWidgetEditing:
iconManagerDidDismissWidgetEditing:
iconManagerWillAnimateWidgetInsertion:
iconManager:canAddIcon:toIconList:inFolder:
iconManager:canAddIconToIgnoredList:
iconManager:shouldPlaceIconOnIgnoredList:
iconManager:isWidgetValid:
iconManager:isCustomElementValid:
iconManager:prepareAddSheetViewController:
iconManager:iconClassForApplicationWithBundleIdentifier:proposedClass:
iconManager:canCustomElementAlignWithGrid:
fallbackDefaultFirstPageWidgetsForIconManager:
iconManager:willAddDefaultFirstPageWidgetsBasedOnPinnedWidgets:suggestionWidgets:
iconManagerShouldShowWidgetIntroductionPopoverForDefaultWidgets:
widgetIntroductionPreviewViewForIconManager:
iconManager:displayFeatureIntroductionItem:atLocation:
iconManager:displayFeatureIntroductionItemIfUnlocked:
iconManager:setTemporaryIntent:forIconWithIdentifier:widgetUniqueIdentifier:
iconManager:floatingDockViewControllerForView:
iconManager:floatingDockViewControllerForViewController:
iconManager:isViewOnMainDisplayWindowScene:
libraryViewControllersForIconManager:
iconManagerDidAddOrRemoveWidgetIcon:
testSetupForIconManagerWidgetScrollPerformanceTest:
testSetupForIconManagerAddWidgetsToEachPage:
testSetupForIconManagerWidgetScrollTest:
testSetupHomeScreenForWidgetScrollPerformanceTest:
getIconStateWithCompletion:
setIconState:
resetIconState
getApplicationIconInformationForBundleID:completion:
T@"NSDictionary",R,N
initWithVehicleID:iconImageCache:
allApps
setAllApps:
iconManager
setIconManager:
iconModel
setIconModel:
_allApps
_iconManager
_iconModel
T@"NSArray",&,N,V_allApps
T@"DBIconManager",&,N,V_iconManager
T@"DBIconModel",&,N,V_iconModel
lockOutView:didTapButtonOfType:
setLockOutMode:animated:completion:
_newLockOutViewForMode:
lockOutMode
lockOutView
setLockOutView:
_lockOutMode
_lockOutView
T@"DBLockOutView",&,N,V_lockOutView
T@"<DBLockOutViewControllerDelegate>",W,N,V_delegate
Tq,R,N,V_lockOutMode
_backButtonTapped:
iconBadgeController:didUpdateForIdentifiers:
dataStoreMonitor:didUpdateApplication:forKey:
dataStoreMonitor:didInvalidateApplication:
controllerClassForFolder:
folderController:canChangeCurrentPageIndexToIndex:
folderController:draggedIconShouldDropFromListView:
folderControllerShouldClose:withPinchGesture:
folderControllerShouldBeginEditing:withHaptic:
folderControllerShouldEndEditing:
folderControllerWillBeginScrolling:
folderControllerDidEndScrolling:
folderController:iconListView:canHandleIconDropSession:
folderController:iconListView:iconDropSessionDidEnter:
folderController:iconListView:iconDropSessionDidUpdate:
folderController:iconListView:iconDropSession:didPauseAtLocation:
folderController:iconListView:iconDropSessionDidExit:
folderController:iconListView:performIconDrop:
folderController:iconListView:shouldAllowSpringLoadedInteractionForIconDropSession:onIconView:
folderController:iconListView:springLoadedInteractionForIconDragDidCompleteOnIconView:
folderController:iconListView:customSpringAnimationBehaviorForDroppingItem:
folderController:iconListView:iconViewForDroppingIconDragItem:proposedIconView:
folderController:iconListView:willUseIconView:forDroppingIconDragItem:
folderController:iconListView:previewForDroppingIconDragItem:proposedPreview:
folderController:iconListView:iconDragItem:willAnimateDropWithAnimator:
minimumHomeScreenScaleForFolderController:
folderControllerWillOpen:
folderControllerDidOpen:
folderControllerWillClose:
folderControllerDidClose:
folderController:didBeginEditingTitle:
folderController:didEndEditingTitle:
contentOverlayInsetsFromParentIfAvailableForFolderController:
folderControllerWantsToHideStatusBar:animated:
fakeStatusBarForFolderController:
folderController:willRemoveFakeStatusBar:
statusBarStyleRequestForFolderController:
statusBarEdgeInsetsForFolderController:
folderController:iconAnimatorForOperation:onViewController:animated:initialDelay:
folderController:willUseIconTransitionAnimator:forOperation:onViewController:animated:
folderController:accessibilityTintColorForScreenRect:
folderController:willCreateInnerFolderControllerWithConfiguration:
rootFolderControllerCanUseSeparateWindowForRotation:
rootFolderController:wantsToAdjustLeadingCustomContentForEdgeBounceForScrollOffset:
distanceToTopOfSpotlightIconsForRootFolderController:
maxExternalDockHeightForRootFolderController:
externalDockHeightForRootFolderController:
preferredExternalDockVerticalMarginForRootFolderController:
backgroundViewForDockForRootFolderController:
backgroundViewForEditingDoneButtonForRootFolderController:
rootFolderController:statusBarInsetsDidChange:
rootFolderController:willUseTransitionContext:toTransitionToState:
rootFolderController:willUsePropertyAnimator:toTransitionToState:
externalDockIconListViewForRootFolderController:
rootFolderController:didChangeSidebarVisibilityProgress:
rootFolderController:didChangeEffectiveSidebarVisibilityProgress:
rootFolderController:didOverscrollOnFirstPageByAmount:
rootFolderController:didEndOverscrollOnFirstPageWithVelocity:translation:
rootFolderController:didOverscrollOnLastPageByAmount:
rootFolderController:didEndOverscrollOnLastPageWithVelocity:translation:
rootFolderController:vendorNameForAppWithBundleIdentifiers:
rootFolderControllerViewWillAppear:
rootFolderControllerViewDidDisappear:
rootFolderController:viewDidTransitionToSize:
rootFolderController:willPresentPageManagementWithLayoutManager:animator:context:
rootFolderController:willDismissPageManagementUsingAnimator:context:
rootFolderController:didDismissPageManagementWithLayoutManager:context:
rootFolderControllerWillAnimateWidgetInsertionForStackConfigurationInteraction:
rootFolderController:draggedIconForStackConfigurationInteractionForIdentifier:
rootFolderController:handleInsertionForWidgetIcon:withReferenceIconView:fromPresenter:dismissViewControllerHandler:
rootFolderController:noteDragItemWasConsumedExternallyForDropSession:
rootFolderController:noteDidRemoveSuggestedWidgetIcon:
rootFolderController:dragPreviewForIconView:
windowForStackConfigurationIconDragPreviewsForRootFolderController:forWindowScene:
rootFolderController:promoteSuggestedWidget:withinStack:
rootFolderController:willPresentWidgetEditingViewController:
rootFolderController:didPresentWidgetEditingViewController:
rootFolderController:willDismissWidgetEditingViewController:
rootFolderController:didDismissWidgetEditingViewController:
rootFolderController:prepareAddSheetViewController:
iconLocationForListsWithNonDefaultSizedIconsForRootFolderController:
appIconImageCacheForRootFolderController:
rootFolderControllerDidAcceptWidgetIntroduction:
rootFolderControllerDidUndoWidgetIntroduction:
rootFolderControllerDidEditWidgetIntroduction:
rootFolderControllerDidSetPrototypeSettingEditAsUndo:
isIconVisibleForIdentifier:
iconForIdentifier:
iconCanDisplayBadge:
isIconVisible:
_setupIconModel
visibleIconViewForIdentifier:
addPageChangeObserver:
removePageChangeObserver:
setTodayViewForeground:
setTodayViewActive:
_persistCachedIconImages
_launchNowPlaying
folderController
_indexPathForFallbackIcon:
_invalidateBadgeForIdentifier:
_onDashboardPage
_preferredFocusedIcon
_linearFocusMovementSequences
_iconViewForIndexpath:
_handleBackActionSupportACBack:
_isACBackEnabled
_setACBackDisabled:forRequester:
todayViewController
setTodayViewController:
hairlineView
library
setLibrary:
dataStoreMonitor
setDataStoreMonitor:
lastFocusedIndex
setLastFocusedIndex:
pageObservers
setPageObservers:
acBackDisabledReasons
setAcBackDisabledReasons:
setIconBadgeController:
_installToken
_uninstallToken
_replaceToken
_addPlaceholderToken
_cancelPlaceholderToken
_todayViewController
_hairlineView
_library
_dataStoreMonitor
_lastFocusedIndex
_pageObservers
_acBackDisabledReasons
T@"FBSApplicationLibrary",&,N,V_library
T@"FBSApplicationDataStoreMonitor",&,N,V_dataStoreMonitor
T@"NSIndexPath",&,N,V_lastFocusedIndex
T@"DBTodayViewController",&,N,V_todayViewController
T@"CARObserverHashTable",&,N,V_pageObservers
TQ,N,V_currentPageIndex
T@"NSMutableSet",&,N,V_acBackDisabledReasons
T@"DBIconBadgeController",&,N,V_iconBadgeController
T@"UIView",R,N,V_hairlineView
startNetworkPathMonitorWithIdentifier:
stopNetworkPathMonitorWithIdentifier:
_startNetworkPathMonitorNow
_stopNetworkPathMonitorNow
_networkPathUpdated:
isNetworkReachable
setNetworkReachable:
networkPath
setNetworkPath:
pathMonitor
setPathMonitor:
currentPath
setCurrentPath:
networkPathMonitorActive
setNetworkPathMonitorActive:
workQueue
_networkReachable
_networkPathMonitorActive
_networkPath
_pathMonitor
_currentPath
_workQueue
networkReachable
TB,N,GisNetworkReachable,V_networkReachable
Tq,N,V_networkPath
T@"NSObject<OS_nw_path_monitor>",&,N,V_pathMonitor
T@"NSObject<OS_nw_path>",&,N,V_currentPath
T@"NSMutableSet",R,N,V_activeAssertions
TB,N,V_networkPathMonitorActive
T@"NSObject<OS_dispatch_queue>",R,N,V_workQueue
sendLayerProperties:
layerMetadataServiceListener
setLayerMetadataServiceListener:
_layerMetadataServiceListener
T@"NSXPCListener",&,N,V_layerMetadataServiceListener
T@"<DBLayerMetadataServiceDelegate>",W,N,V_delegate
isURLSupported:
applySettingsForClusterURL:toSceneSettings:
_correctedComponentsForURL:
_isMapsClusterURL:
_layoutSettingForURLValue:
_clusterSettingForURLValue:
activeNavigationIdentifiersObserver:updatedActiveNavigationIdentifiers:
_initWithActiveNavigationIdentifiersObserver:
navigatingIdentifiers
mostRecentClusterNavigatingApp
mostRecentDashboardNavigatingApp
mostRecentNavigatingApp
_updateMostRecentDockApp
_updateMostRecentClusterApp
infoProvider
setInfoProvider:
appHistoryAppDockProvider
setAppHistoryAppDockProvider:
activeNavigationIdentifiersObserver
setActiveNavigationIdentifiersObserver:
mostRecentlyActivatedDashboardApp
setMostRecentlyActivatedDashboardApp:
mostRecentlyActivatedClusterApp
setMostRecentlyActivatedClusterApp:
_infoProvider
_appHistoryAppDockProvider
_activeNavigationIdentifiersObserver
_mostRecentlyActivatedDashboardApp
_mostRecentlyActivatedClusterApp
T@"CARActiveNavigationIdentifiersObserver",&,N,V_activeNavigationIdentifiersObserver
T@"NSString",C,N,V_mostRecentlyActivatedDashboardApp
T@"NSString",C,N,V_mostRecentlyActivatedClusterApp
T@"<DBNavigationAppInfoProviding>",W,N,V_infoProvider
T@"<DBAppHistoryAppDockProviding>",W,N,V_appHistoryAppDockProvider
serviceTypeByName
serviceNameByType
serviceNameForType:
dismissAlertAnimated:
connect
remoteAlertHandleDidActivate:
remoteAlertHandleDidDeactivate:
remoteAlertHandle:didInvalidateWithError:
_showAlertIfNecessary
alertHandle
setAlertHandle:
_alertHandle
T@"SBSRemoteAlertHandle",&,N,V_alertHandle
homeButtonDown:
homeButtonUp:
homeButtonCancel:
_handleBackPressGesture:
_handleLongPressActivation
_resizeButtonPressed:
statusBarStyleServiceUpdatedOverride:animationSettings:
appDockViewController:didSelectBundleID:
statusBarHomeButtonStateManager:didChangeToDisplayState:
initWithEnvironment:iconProvider:stateProvider:
_updateAdditionalSafeAreaInsets
_updateConstraintsForStatusBar
_updateMaterialForStyle:
_backgroundColorForStyle:
_updateScreenResizeButton
homeButton
setHomeButton:
homeButtonTimer
setHomeButtonTimer:
lastHomeButtonDownTime
setLastHomeButtonDownTime:
homeButtonSource
setHomeButtonSource:
homeButtonAssertion
setHomeButtonAssertion:
screenResizeButton
setScreenResizeButton:
keylineView
setKeylineView:
darkMaterial
setDarkMaterial:
lightMaterial
setLightMaterial:
darkSiriMaterial
setDarkSiriMaterial:
lightSiriMaterial
setLightSiriMaterial:
backPressGestureRecognizer
setBackPressGestureRecognizer:
homeButtonConstraints
setHomeButtonConstraints:
resizeButtonConstraints
setResizeButtonConstraints:
activeConstraints
setActiveConstraints:
statusBarStyleService
setStatusBarStyleService:
serviceDomainActivationToken
setServiceDomainActivationToken:
contrastOverride
setContrastOverride:
siriPresentationOverride
setSiriPresentationOverride:
_siriPresentationOverride
_homeButton
_homeButtonTimer
_lastHomeButtonDownTime
_homeButtonSource
_homeButtonAssertion
_screenResizeButton
_keylineView
_darkMaterial
_lightMaterial
_darkSiriMaterial
_lightSiriMaterial
_backPressGestureRecognizer
_homeButtonConstraints
_resizeButtonConstraints
_activeConstraints
_statusBarStyleService
_serviceDomainActivationToken
_contrastOverride
T@"DBStatusBarHomeButton",&,N,V_homeButton
T@"NSTimer",&,N,V_homeButtonTimer
Td,N,V_lastHomeButtonDownTime
T@"SiriLongPressButtonSource",&,N,V_homeButtonSource
T@"SiriActivityAssertion",&,N,V_homeButtonAssertion
T@"DBStatusBarScreenResizeButton",&,N,V_screenResizeButton
T@"UIView",&,N,V_keylineView
T@"DBStatusBarViewController",&,N,V_statusBarViewController
T@"UIVisualEffectView",&,N,V_darkMaterial
T@"UIVisualEffectView",&,N,V_lightMaterial
T@"UIVisualEffectView",&,N,V_darkSiriMaterial
T@"UIVisualEffectView",&,N,V_lightSiriMaterial
T@"UITapGestureRecognizer",&,N,V_backPressGestureRecognizer
T@"NSArray",&,N,V_homeButtonConstraints
T@"NSArray",&,N,V_resizeButtonConstraints
T@"NSArray",&,N,V_activeConstraints
T@"CRSUIStatusBarStyleService",&,N,V_statusBarStyleService
T@"<BSInvalidatable>",&,N,V_serviceDomainActivationToken
Tq,N,V_contrastOverride
TB,N,V_siriPresentationOverride
disclosureMonitorDidChangeActive:
lockOutViewController:didTapButtonOfType:
siriMonitorDidChangeEnabled:
thermalMonitorLevelDidChange:
initWithWindowScene:environmentConfiguration:dashboardStateProvider:delegate:
isLockedOut
updateLockOutModeAnimated:
updateLockOutModeAnimated:takeScreen:
setLockOutMode:
lockOutWindow
setLockOutWindow:
lockOutViewController
setLockOutViewController:
buddyMonitor
setBuddyMonitor:
disclosureMonitor
setDisclosureMonitor:
keybagMonitor
setKeybagMonitor:
siriMonitor
setSiriMonitor:
thermalMonitor
setThermalMonitor:
lockOutLayoutElementAssertion
setLockOutLayoutElementAssertion:
_lockOutWindow
_lockOutViewController
_buddyMonitor
_disclosureMonitor
_keybagMonitor
_siriMonitor
_thermalMonitor
_lockOutLayoutElementAssertion
T@"DBLockOutWindow",&,N,V_lockOutWindow
T@"DBLockOutViewController",&,N,V_lockOutViewController
T@"DBBuddyMonitor",&,N,V_buddyMonitor
T@"DBDisclosureMonitor",&,N,V_disclosureMonitor
T@"DBKeybagMonitor",&,N,V_keybagMonitor
T@"DBSiriMonitor",&,N,V_siriMonitor
T@"DBThermalMonitor",&,N,V_thermalMonitor
Tq,N,V_lockOutMode
T@"<DBLockoutControllerDelegate>",R,W,N,V_delegate
T@"<BSInvalidatable>",&,N,V_lockOutLayoutElementAssertion
lockedOut
TB,R,N,GisLockedOut
T@"DBHomeManager",R,N
sourceDidRefresh:predictionsUpdated:
startIfNeeded
stopIfNeeded
refreshPredictions
refreshDisabled
_resetCurrentPredictions
_updatePredictionsFresh
_start
_stop
_useRangeEnd:refreshDate:
_useRangeStart:now:refreshDate:
currentPredictions
setPredictionsFresh:
hasHighPriorityPrediction
setNextRefresh:
_sourceForPrediction:
_postUpdatedCurrentPredictionsIfNeeded
_updateWithDashboardStateProvider:
predictionsFresh
nextRefresh
setHomeManager:
sources
setSources:
lastRefreshRequest
setLastRefreshRequest:
updatesPending
setUpdatesPending:
refreshTimer
setRefreshTimer:
stoppingTimer
setStoppingTimer:
_predictionsFresh
_updatesPending
_currentPredictions
_nextRefresh
_sources
_lastRefreshRequest
_refreshTimer
_stoppingTimer
T@"DBHomeManager",&,N,V_homeManager
T@"NSArray",&,N,V_sources
T@"NSDate",&,N,V_lastRefreshRequest
TB,N,V_predictionsFresh
TB,N,V_updatesPending
T@"NSDate",&,N,V_nextRefresh
T@"NSTimer",&,N,V_refreshTimer
T@"NSTimer",&,N,V_stoppingTimer
T@"NSArray",R,N,V_currentPredictions
applySessionAppContexts:
applySessionEchoContexts:
currentOwnerForContext:
updateOwner:forContext:
availableApplicationContexts
applicationCategoryForURL:
contextForApplicationCategory:
turnFeaturesOff
markSafe
_observersDisclosureMonitorDidChange
markedSafe
setMarkedSafe:
_markedSafe
T@"NSHashTable",&,N,V_observers
TB,N,V_markedSafe
layoutForIconLocation:
layout
setLayout:
_layout
T@"SBIconListFlowLayout",&,N,V_layout
listLayoutProvider
iconPageIndicatorImageSetCache
layoutProvider
setLayoutProvider:
_layoutProvider
T@"_DBIconListLayoutProvider",&,N,V_layoutProvider
carKitRepresentationFromRootArchive:iconModel:
rootArchiveFromCarKitRepresentation:iconModel:
T@"DBIconView",R,N,V_iconView
undynamicColor
T@"UIColor",R,N
notificationsEnabledForIdentifier:
_badge_queue_updateNotificationSources
notificationsSettingsCenter
setNotificationsSettingsCenter:
lock_badgesAllowedByIdentifier
setLock_badgesAllowedByIdentifier:
badgeSettingsUpdateQueue
setBadgeSettingsUpdateQueue:
_notificationsSettingsCenter
_lock_badgesAllowedByIdentifier
_badgeSettingsUpdateQueue
T@"UNNotificationSettingsCenter",&,N,V_notificationsSettingsCenter
T@"NSDictionary",&,N,V_lock_badgesAllowedByIdentifier
T@"NSObject<OS_dispatch_queue>",&,N,V_badgeSettingsUpdateQueue
registerSource:
registeredSources
T@"NSArray",R
defaultsDisabled
predictions
disabled
setDisabled:
lastRefresh
setLastRefresh:
setWorkQueue:
setCurrentPredictions:
_disabled
_sourceName
_lastRefresh
TB,N,V_disabled
T@"NSObject<OS_dispatch_queue>",&,N,V_workQueue
T@"NSDate",&,N,V_lastRefresh
T@"NSDictionary",&,N,V_currentPredictions
T@"NSString",R,N,V_sourceName
T@"<DBSmartWidgetSourceDelegate>",R,W,N,V_delegate
doorStateCharacteristic
targetDoorStateCharacteristic
obstructionDetectedCharacteristic
_doorStateForCharacteristic:
doorState
targetDoorState
setTargetDoorState:
obstructionDetected
T@"DBHomeKitDoorStateCharacteristic",R,N
T@"DBHomeKitBoolCharacteristic",R,N
changeType
setChangeType:
TQ,N
_init
prefersAnimation
_newEntityFromChangeItemWithPolicyProvider:
presentationPreference
setPresentationPreference:
_changeType
_presentationPreference
TQ,N,V_presentationPreference
TQ,N,V_changeType
initWithApplication:
setApplication:
setActivationSettings:
T@"DBApplicationInfo",&,N,V_application
T@"NSDictionary",&,N,V_activationSettings
_validDate:
initWithStart:end:
startTimeIntervalSinceReferenceDate
endTimeIntervalSinceReferenceDate
validRange
hasStart
hasEnd
containsDate:
start
setStart:
setEnd:
_end
T@"NSDate",&,N,V_start
T@"NSDate",&,N,V_end
_contentViewClass
listViewClass
hasDock
initWithApplicationInfo:proxyApplicationInfo:environment:activationSettings:
performUpdateWithCompletion:
_safeAreaInsets
_effectiveSceneAppInfo
settings
transitionContext
sceneSpecification
setSceneSpecification:
_settings
_transitionContext
_sceneSpecification
T@"UIApplicationStarkSceneSpecification",&,N,V_sceneSpecification
T@"UIMutableCarPlayApplicationSceneSettings",R,N,V_settings
T@"UIApplicationSceneTransitionContext",R,N,V_transitionContext
startedConnectionAttemptOnTransport:
cancelledConnectionAttemptOnTransport:
sessionDidConnect:
sessionDidDisconnect:
session:didUpdateConfiguration:
bundleIdentifierSupportsDashboard:
bundleIdentifierSupportsInstrumentCluster:
bundleIdentifierIsCertificationApp:
displayMonitor:didConnectIdentity:withConfiguration:
displayMonitor:didUpdateIdentity:withConfiguration:
displayMonitor:willDisconnectIdentity:
initWithAppPolicyEvaluator:
activate
environmentForDisplayIdentity:
enumerateEnvironmentsUsingBlock:
_setPrimaryDisplayCornerMaskImageIfNecessary
_handleConnectedDisplaysIfPossible
_setNeedsLayerMetadataService:forDisplayIdentity:
_updateLayerMetadataService
_setNeedsNavigationStateProvider:forDisplayIdentity:
_updateNavigationStateProvider
_setNeedsTemplateProcessMonitor:forDisplayIdentity:
_updateTemplateProcessMonitor
activated
setActivated:
manager
setManager:
displayToEnvironmentMap
setDisplayToEnvironmentMap:
displayToPresentationBinderMap
setDisplayToPresentationBinderMap:
displayToRootSceneMap
setDisplayToRootSceneMap:
displayToEndpointInjector
setDisplayToEndpointInjector:
dashboardDisplayLayoutPublisher
setDashboardDisplayLayoutPublisher:
setAppPolicyEvaluator:
sessionStatus
setSessionStatus:
pendingDisplays
setPendingDisplays:
navigationStateProviderRequesters
setNavigationStateProviderRequesters:
setNavigationStateProvider:
processMonitorRequesters
setProcessMonitorRequesters:
layerMetadataServiceRequesters
setLayerMetadataServiceRequesters:
_activated
_manager
_displayToEnvironmentMap
_displayToPresentationBinderMap
_displayToRootSceneMap
_displayToEndpointInjector
_dashboardDisplayLayoutPublisher
_sessionStatus
_pendingDisplays
_navigationStateProviderRequesters
_processMonitorRequesters
_layerMetadataServiceRequesters
TB,N,V_activated
T@"FBSceneManager",&,N,V_manager
T@"NSMutableDictionary",&,N,V_displayToEnvironmentMap
T@"NSMutableDictionary",&,N,V_displayToPresentationBinderMap
T@"NSMutableDictionary",&,N,V_displayToRootSceneMap
T@"NSMutableDictionary",&,N,V_displayToEndpointInjector
T@"FBSDisplayLayoutPublisher",&,N,V_dashboardDisplayLayoutPublisher
T@"CRCarPlayAppPolicyEvaluator",&,N,V_appPolicyEvaluator
T@"CARSessionStatus",&,N,V_sessionStatus
T@"NSMutableSet",&,N,V_pendingDisplays
T@"NSMutableSet",&,N,V_navigationStateProviderRequesters
T@"DBNavigationStateProvider",&,N,V_navigationStateProvider
T@"NSMutableSet",&,N,V_processMonitorRequesters
T@"DBProcessMonitor",&,N,V_processMonitor
T@"NSMutableSet",&,N,V_layerMetadataServiceRequesters
setSensorIndicatorType:
_updateColor
sensorIndicatorType
_sensorIndicatorType
Tq,N,V_sensorIndicatorType
handleAssistantLanguageChanged:
handleAssistantPreferencesChanged:
setSiriEnabled:
_updateSiriEnabled
siriEnabled
_siriEnabled
TB,N,V_siriEnabled
setAppBundleIdentifier:
avatarControllerSettings
setAvatarControllerSettings:
appBundleIdentifier
avatarController
setAvatarController:
appIconView
setAppIconView:
_avatarControllerSettings
_appBundleIdentifier
_avatarController
_appIconView
T@"CNAvatarViewControllerSettings",&,N,V_avatarControllerSettings
T@"NSString",C,N,V_appBundleIdentifier
T@"CNAvatarViewController",&,N,V_avatarController
T@"UIImageView",&,N,V_appIconView
T@"UIImageView",&,N,V_focusRingView
isValue:equalTo:
iconImageDidUpdate:
iconAccessoriesDidUpdate:
iconLaunchEnabledDidChange:
iconGridSizeClassDidChange:
iconArchivableStateDidChange:
leafIcon:didAddIconDataSource:
leafIcon:didRemoveIconDataSource:
leafIcon:didChangeActiveDataSource:
initWithIconProvider:
_updateCenterXConstraintConstant
setBadgeHidden:animated:
_updateFocusRings
setShowBadge:
setShowBadge:animated:
setBundleIdentifier:
_updateImageForBundleIdentifier:crossfade:
setBundleIdentifier:animated:
setActive:
iconImageView
setIconImageView:
iconFocusRingImageView
setIconFocusRingImageView:
iconFocusRingUnreadImageView
setIconFocusRingUnreadImageView:
icon
setIcon:
badgeView
setBadgeView:
showBadge
iconFocusRingUnreadImageViewCenterConstraint
setIconFocusRingUnreadImageViewCenterConstraint:
_showBadge
_iconImageView
_iconFocusRingImageView
_iconFocusRingUnreadImageView
_icon
_badgeView
_iconFocusRingUnreadImageViewCenterConstraint
T@"UIImageView",&,N,V_iconImageView
T@"UIImageView",&,N,V_iconFocusRingImageView
T@"UIImageView",&,N,V_iconFocusRingUnreadImageView
T@"DBLeafIcon",&,N,V_icon
T@"UIImageView",&,N,V_badgeView
TB,N,V_showBadge
T@"NSLayoutConstraint",&,N,V_iconFocusRingUnreadImageViewCenterConstraint
TB,N,GisActive,V_active
T@"NSString",C,N,V_bundleIdentifier
_screenBecameAvailable:
_screenBecameUnavailable:
_dashboardSmartWidgetUpdated:
_dashboardNowPlayingWidgetTapped:
_applicationDidLaunch:
_appStartedNavigation:
_iosHasMainAudio:
_carHasMainAudio:
_mediaserverdConnectionDied
shouldSendAnalyticsEvents
biome_CarPlayStarted:wireless:
dictionaryFromInterrupt
stringFromInterruptDictionary:
stringFromSessionSummary
applySessionStartedStorage:
userPressedTransitionControl
_queue_sessionStarted
_queue_sessionEnded
_queue_sendAnnounceMessagesEventWithEnablementType:disabled:
_isAnnounceMuted
_queue_deviceDidChangeToBundleIdentifier:
_queue_didChangeToBundleIdentifier:
_queue_nowPlayingUpdatedToApp:isPlaying:
_queue_screenViewAreaChanged:screenInfo:configuration:duration:
_queue_mediaserverdConnectionDied
_queue_wifidConnectionDied
_queue_thermalTrapOccurred
_queue_stateProviderIsReadyForAnalytics:
_DBLayoutMonitor:didUpdateDisplayLayout:withContext:
dashboardNavigationDidChangeToBundleIdentifier:
dashboardAudioWidgetDidChangeToBundleIdentifier:
siriDidPresent
siriDidStartHostingBundleIdentifier:
siriDidDismiss
_queue_fetchLocationBits
sendEvent:withParameters:
_analyticsInfoPassingTest:
nowPlayingAppAnalyticsInfo
visibleAppsAnalyticsInfo
visibleDashboardAppsAnalyticsInfo
appAnalyticsInfoForApp:
appAnalyticsInfoForBundleIdentifier:
_queue_powerStateDidChange
dndStatus
setDndStatus:
analyticsQueue
setAnalyticsQueue:
configuration
setConfiguration:
sessionStartedEventSent
setSessionStartedEventSent:
lastHomeScreenPageType
setLastHomeScreenPageType:
lastActiveBundleIdentifier
setLastActiveBundleIdentifier:
vehicleAnalyticsRepresentation
setVehicleAnalyticsRepresentation:
sessionUnlockCount
setSessionUnlockCount:
analyticsAppInfo
setAnalyticsAppInfo:
analyticsScreenInfo
setAnalyticsScreenInfo:
analyticsChargeInfo
setAnalyticsChargeInfo:
screenOwnershipDuration
setScreenOwnershipDuration:
screenOwnershipDate
setScreenOwnershipDate:
audioOwnershipDuration
setAudioOwnershipDuration:
audioOwnershipDate
setAudioOwnershipDate:
sessionStartDate
setSessionStartDate:
sessionAppLaunches
setSessionAppLaunches:
displayLayoutMonitor
setDisplayLayoutMonitor:
sessionDeviceAppLaunches
setSessionDeviceAppLaunches:
sessionNavigationOwners
setSessionNavigationOwners:
lastDashboardNavigationBundleIdentifier
setLastDashboardNavigationBundleIdentifier:
lastDashboardAudioWidgetBundleIdentifier
setLastDashboardAudioWidgetBundleIdentifier:
sessionRequestUIMapsCount
setSessionRequestUIMapsCount:
sessionRequestUIMessagesCount
setSessionRequestUIMessagesCount:
sessionRequestUIPhoneCount
setSessionRequestUIPhoneCount:
sessionRequestUIMusicCount
setSessionRequestUIMusicCount:
sessionRequestUIBundleIdentifierCount
setSessionRequestUIBundleIdentifierCount:
sessionShowUIMapCount
setSessionShowUIMapCount:
sessionShowUITurnCardCount
setSessionShowUITurnCardCount:
startBundleIdentifier
setStartBundleIdentifier:
siriHostedBundleIdentifier
setSiriHostedBundleIdentifier:
accessorySupportsLocation
setAccessorySupportsLocation:
accessorySupportsLocationPASCDSpeed
setAccessorySupportsLocationPASCDSpeed:
accessorySupportsLocationGPGGA
setAccessorySupportsLocationGPGGA:
accessorySupportsLocationGPRMC
setAccessorySupportsLocationGPRMC:
accessorySupportsLocationDeadReckoning
setAccessorySupportsLocationDeadReckoning:
accessorySupportsLocationChinaShifted
setAccessorySupportsLocationChinaShifted:
mediaserverdDiedDate
setMediaserverdDiedDate:
wifidDiedDate
setWifidDiedDate:
thermalTrapDate
setThermalTrapDate:
wifiLinkDownDate
setWifiLinkDownDate:
wifiLinkDownReason
setWifiLinkDownReason:
currentThermalLevel
setCurrentThermalLevel:
announceEnablementType
setAnnounceEnablementType:
announceMuted
setAnnounceMuted:
mapsAppearanceStyle
setMapsAppearanceStyle:
_powerSource
_powerNotificationPort
_powerSourceNotification
_sessionStartedEventSent
_accessorySupportsLocation
_accessorySupportsLocationPASCDSpeed
_accessorySupportsLocationGPGGA
_accessorySupportsLocationGPRMC
_accessorySupportsLocationDeadReckoning
_accessorySupportsLocationChinaShifted
_announceMuted
_dndStatus
_analyticsQueue
_configuration
_lastHomeScreenPageType
_lastActiveBundleIdentifier
_vehicleAnalyticsRepresentation
_sessionUnlockCount
_analyticsAppInfo
_analyticsScreenInfo
_analyticsChargeInfo
_screenOwnershipDuration
_screenOwnershipDate
_audioOwnershipDuration
_audioOwnershipDate
_sessionStartDate
_sessionAppLaunches
_displayLayoutMonitor
_sessionDeviceAppLaunches
_sessionNavigationOwners
_lastDashboardNavigationBundleIdentifier
_lastDashboardAudioWidgetBundleIdentifier
_sessionRequestUIMapsCount
_sessionRequestUIMessagesCount
_sessionRequestUIPhoneCount
_sessionRequestUIMusicCount
_sessionRequestUIBundleIdentifierCount
_sessionShowUIMapCount
_sessionShowUITurnCardCount
_startBundleIdentifier
_siriHostedBundleIdentifier
_mediaserverdDiedDate
_wifidDiedDate
_thermalTrapDate
_wifiLinkDownDate
_wifiLinkDownReason
_currentThermalLevel
_announceEnablementType
_mapsAppearanceStyle
T@"CARAutomaticDNDStatus",&,N,V_dndStatus
T@"NSOperationQueue",&,N,V_analyticsQueue
T@"DBEnvironmentConfiguration",W,N,V_configuration
TB,N,V_sessionStartedEventSent
TQ,N,V_lastHomeScreenPageType
T@"NSString",C,N,V_lastActiveBundleIdentifier
T@"NSDictionary",C,N,V_vehicleAnalyticsRepresentation
TQ,N,V_sessionUnlockCount
T@"NSMutableArray",&,N,V_analyticsAppInfo
T@"NSMutableArray",&,N,V_analyticsScreenInfo
T@"_DBAnalyticsChargeInfo",&,N,V_analyticsChargeInfo
Td,N,V_screenOwnershipDuration
T@"NSDate",&,N,V_screenOwnershipDate
Td,N,V_audioOwnershipDuration
T@"NSDate",&,N,V_audioOwnershipDate
T@"NSDate",&,N,V_sessionStartDate
T@"NSMutableDictionary",&,N,V_sessionAppLaunches
T@"FBSDisplayLayoutMonitor",&,N,V_displayLayoutMonitor
T@"NSMutableDictionary",&,N,V_sessionDeviceAppLaunches
T@"NSMutableDictionary",&,N,V_sessionNavigationOwners
T@"NSString",C,N,V_lastDashboardNavigationBundleIdentifier
T@"NSString",C,N,V_lastDashboardAudioWidgetBundleIdentifier
TQ,N,V_sessionRequestUIMapsCount
TQ,N,V_sessionRequestUIMessagesCount
TQ,N,V_sessionRequestUIPhoneCount
TQ,N,V_sessionRequestUIMusicCount
TQ,N,V_sessionRequestUIBundleIdentifierCount
TQ,N,V_sessionShowUIMapCount
TQ,N,V_sessionShowUITurnCardCount
T@"NSString",C,N,V_startBundleIdentifier
T@"NSString",C,N,V_siriHostedBundleIdentifier
TB,N,V_accessorySupportsLocation
TB,N,V_accessorySupportsLocationPASCDSpeed
TB,N,V_accessorySupportsLocationGPGGA
TB,N,V_accessorySupportsLocationGPRMC
TB,N,V_accessorySupportsLocationDeadReckoning
TB,N,V_accessorySupportsLocationChinaShifted
T@"NSDate",&,N,V_mediaserverdDiedDate
T@"NSDate",&,N,V_wifidDiedDate
T@"NSDate",&,N,V_thermalTrapDate
T@"NSDate",&,N,V_wifiLinkDownDate
T@"NSString",&,N,V_wifiLinkDownReason
Tq,N,V_currentThermalLevel
Tq,N,V_announceEnablementType
TB,N,V_announceMuted
Tq,N,V_mapsAppearanceStyle
DBSecondsToDate:
analytics_dictionaryRepresentationWithVehicle:
initWithAppInfo:policyEvaluator:
initWithBundleIdentifier:appDeclaration:policyEvaluator:
startCountingVisibleTime
startCountingDashboardVisibleTime
stopCountingVisibleTime
stopCountingDashboardVisibleTime
appInfo
wasVisibleBeforeCarScreen
setWasVisibleBeforeCarScreen:
wasVisibleInDashboardBeforeCarScreen
setWasVisibleInDashboardBeforeCarScreen:
wasVisibleBeforeSiri
setWasVisibleBeforeSiri:
numberOfSiriPresentations
setNumberOfSiriPresentations:
dashboardWidgetType
setDashboardWidgetType:
_wasVisibleBeforeCarScreen
_wasVisibleInDashboardBeforeCarScreen
_wasVisibleBeforeSiri
_appInfo
_numberOfSiriPresentations
_dashboardWidgetType
T@"DBApplicationInfo",R,N,V_appInfo
TB,N,V_wasVisibleBeforeCarScreen
TB,N,V_wasVisibleInDashboardBeforeCarScreen
TB,N,V_wasVisibleBeforeSiri
TQ,N,V_numberOfSiriPresentations
TQ,N,V_dashboardWidgetType
initWithScreenInfo:analyticsPrefix:sessionStartViewArea:
analytics_sessionStartedDictionaryRepresentation
analytics_sessionEndedDictionaryRepresentation
_identifierForViewArea:
startCountingTimeForViewArea:
analyticsPrefix
sessionStartViewArea
viewAreaChangeCount
setViewAreaChangeCount:
viewAreaChangeUsingTransitionControlCount
setViewAreaChangeUsingTransitionControlCount:
hasTransitionControlsWithinViewAreas
setHasTransitionControlsWithinViewAreas:
indexOfLargestViewArea
_hasTransitionControlsWithinViewAreas
_analyticsPrefix
_sessionStartViewArea
_viewAreaChangeCount
_viewAreaChangeUsingTransitionControlCount
_indexOfLargestViewArea
T@"CARScreenInfo",R,N,V_screenInfo
T@"NSString",R,C,N,V_analyticsPrefix
T@"CARScreenViewArea",R,N,V_sessionStartViewArea
TQ,N,V_viewAreaChangeCount
TQ,N,V_viewAreaChangeUsingTransitionControlCount
TB,N,V_hasTransitionControlsWithinViewAreas
TQ,R,N,V_indexOfLargestViewArea
isAccumulatingTimeForKey:
isAccumulatingTimeForAnyKey
startCountingTimeForKey:
stopCountingTimeForAllKeys
stopCountingTimeForKey:
accumulatedTimeForKey:
dateStorage
setDateStorage:
accumulatedTimeStorage
setAccumulatedTimeStorage:
_dateStorage
_accumulatedTimeStorage
T@"NSMutableDictionary",&,N,V_dateStorage
T@"NSMutableDictionary",&,N,V_accumulatedTimeStorage
isWireless
setWireless:
didChargeDuringSession
setDidChargeDuringSession:
adapterDescription
setAdapterDescription:
PMUConfiguration
setPMUConfiguration:
voltage
setVoltage:
wattage
setWattage:
_wireless
_didChargeDuringSession
_adapterDescription
_PMUConfiguration
_voltage
_wattage
wireless
TB,N,GisWireless,V_wireless
TB,N,V_didChargeDuringSession
T@"NSString",C,N,V_current
T@"NSString",C,N,V_adapterDescription
T@"NSString",C,N,V_PMUConfiguration
T@"NSString",C,N,V_voltage
T@"NSString",C,N,V_wattage
_loadFromProxy:
displayName
carPlayDeclaration
isLinkedOnOrAfterYukon
supportsDashboardNavigation
supportsInstrumentClusterNavigation
requiresBackgroundURLDelivery
isCarInternal
isCarPrototype
isInternal
isFirstParty
isPlaceholder
isInstalled
isValid
isCertificationApp
requiresFeatureFlags
_carDisplayName
_linkedOnOrAfterYukon
_presentsUnderStatusBar
_presentsFullScreen
_supportsDashboardNavigation
_supportsInstrumentClusterNavigation
_requiresBackgroundURLDelivery
_carInternal
_carPrototype
_internal
_firstParty
_installed
_valid
_certificationApp
_carPlayDeclaration
_requiresFeatureFlags
T@"CRCarPlayAppDeclaration",R,N,V_carPlayDeclaration
linkedOnOrAfterYukon
TB,R,N,GisLinkedOnOrAfterYukon,V_linkedOnOrAfterYukon
TB,R,N,V_presentsUnderStatusBar
TB,R,N,V_presentsFullScreen
TB,R,N,V_supportsDashboardNavigation
TB,R,N,V_supportsInstrumentClusterNavigation
TB,R,N,V_requiresBackgroundURLDelivery
TB,R,N,GisHidden,V_hidden
carInternal
TB,R,N,GisCarInternal,V_carInternal
carPrototype
TB,R,N,GisCarPrototype,V_carPrototype
internal
TB,R,N,GisInternal,V_internal
firstParty
TB,R,N,GisFirstParty,V_firstParty
TB,R,N,GisPlaceholder,V_placeholder
installed
TB,R,N,GisInstalled,V_installed
valid
TB,R,N,GisValid,V_valid
certificationApp
TB,R,N,GisCertificationApp,V_certificationApp
T@"NSArray",R,N,V_requiresFeatureFlags
_iconKeyForFormat:
iconWithFormat:
initWithStore:
localizedCaseInsensitiveCompare:
loadAllIcons
didUnarchiveMetadata:
initWithStore:carApplicationDataSource:
hiddenBundleIdentifiers
screenBounds
rowCount
columnCount
showsOEMIcon
exportStateForCarKit
exportIconLayoutState
analyticsIconRepresentation
resetCurrentIconState
importState:
supportsDock
_showInternalApps
_showPrototypeApps
iconModelMetadata
_importStateWithoutLayout:
iconImageSize
setIconImageSize:
carApplicationDataSource
setCarApplicationDataSource:
metadata_hiddenBundleIdentifiers
setMetadata_hiddenBundleIdentifiers:
metadata_screenBounds
setMetadata_screenBounds:
metadata_showsOEMIcon
setMetadata_showsOEMIcon:
metadata_OEMIconLabel
setMetadata_OEMIconLabel:
current_isSet
setCurrent_isSet:
current_screenBounds
setCurrent_screenBounds:
current_showsOEMIcon
setCurrent_showsOEMIcon:
current_OEMIconLabel
setCurrent_OEMIconLabel:
current_statusBarEdge
setCurrent_statusBarEdge:
setInteractionAffordances:
_metadata_showsOEMIcon
_current_isSet
_current_showsOEMIcon
_carApplicationDataSource
_metadata_hiddenBundleIdentifiers
_metadata_OEMIconLabel
_current_OEMIconLabel
_current_statusBarEdge
_iconImageSize
_metadata_screenBounds
_current_screenBounds
T@"<DBIconModelApplicationDataSource>",W,N,V_carApplicationDataSource
T@"NSArray",&,N,V_metadata_hiddenBundleIdentifiers
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_metadata_screenBounds
TB,N,V_metadata_showsOEMIcon
T@"NSString",C,N,V_metadata_OEMIconLabel
TB,N,V_current_isSet
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_current_screenBounds
TB,N,V_current_showsOEMIcon
T@"NSString",C,N,V_current_OEMIconLabel
TQ,N,V_current_statusBarEdge
TQ,N,V_interactionAffordances
T{CGSize=dd},N,V_iconImageSize
T@"DBLocationManager",R,N
T@"DBNetworkPathMonitor",R,N
homeManager:didUpdateAuthorizationStatus:
homeManagerDidUpdateHomes:
homeManagerDidUpdatePrimaryHome:
homeManager:didAddHome:
homeManager:didRemoveHome:
homeManager:didReceiveAddAccessoryRequest:
_authorizeHomeManager
_setupHomeManager
homes
setHomes:
setNetworkPathMonitor:
homeLocationAuthorization
setHomeLocationAuthorization:
_homes
_homeLocationAuthorization
T@"DBLocationManager",&,N,V_locationManager
T@"DBNetworkPathMonitor",&,N,V_networkPathMonitor
T@"HMHomeManager",&,N,V_homeManager
T@"HMFLocationAuthorization",&,N,V_homeLocationAuthorization
T@"NSDictionary",&,N,V_homes
initWithIconStateURL:desiredIconStateURL:
loadCurrentIconState:
saveCurrentIconState:error:
saveDesiredIconState:error:
initWithVehicleId:
_iconListsByFlatteningPages:
vehicleId
_vehicleId
T@"NSString",R,N,V_vehicleId
initWithStateResolver:environment:rootViewController:siriViewController:
activeBaseApplicationBundleID
_existingViewControllerForEntity:
_newViewControllerForEntity:changeItem:completion:
_updateViewControllerForEntity:changeItem:oldEntity:completion:
_handleSuspendedActivationForEntity:changeItem:completion:
notificationSuspender
setNotificationSuspender:
_stateResolver
_entityIdentifierToViewControllerMap
_notificationSuspender
T@"<DBNotificationSuspending>",W,N,V_notificationSuspender
T@"DBUserAlertServer",W,N,V_userAlertServer
initWithAppHistory:
nowPlayingLaunchInfo
_isValidNowPlayingApplication:
nowPlayingLaunchInfoWithSource:
_nowPlayingDidChangeToBundleIdentifier:
_updatePlaybackStateForBundleIdentifier:playing:
nowPlayingApplicationInfo
setNowPlayingApplicationInfo:
isPlaying
_playing
_nowPlayingApplicationInfo
T@"DBApplicationInfo",&,N,V_nowPlayingApplicationInfo
playing
TB,R,N,GisPlaying,V_playing
T@"DBAppHistory",R,W,N,V_appHistory
T@"<DBNowPlayingDelegate>",W,N,V_delegate
T@"DBApplicationLaunchInfo",R,N
initWithName:type:priority:window:application:pid:scene:
priority
window
bundleID
_pid
_priority
_window
_bundleID
T@"NSString",R,C,N,V_name
Tq,R,N,V_type
Td,R,N,V_priority
T@"UIWindow",R,W,N,V_window
T@"NSString",R,C,N,V_bundleID
Ti,R,N,V_pid
T@"FBScene",R,N,V_scene
initWithScreen:
takeWithPriority:reason:forWindow:bundleIdentifier:pid:scene:
takeWithPriority:reason:forWindow:bundleIdentifier:pid:scene:heading:focusedFrame:
dropReason:
dropReason:withHeading:focusedFrame:
focusedPid
_updateEventFocusWithHeading:focusedFrame:
_applyAssertion:withHeading:focusedFrame:
setFocusWindow:
displayID
setDisplayID:
assertions
setAssertions:
lastFocusAssertion
setLastFocusAssertion:
focusDeferral
setFocusDeferral:
_focusWindow
_displayID
_assertions
_lastFocusAssertion
_focusDeferral
T@"NSString",C,N,V_displayID
T@"NSMutableArray",&,N,V_assertions
T@"DBFocusAssertion",&,N,V_lastFocusAssertion
T@"UIWindow",W,N,V_focusWindow
T@"<BSInvalidatable>",&,N,V_focusDeferral
_startListeningForThermalEvents
_queue_respondToCurrentThermalCondition
isThermalBlocked
setThermalBlocked:
level
hotToken
setHotToken:
hotLevel
setHotLevel:
coldToken
setColdToken:
coldLevel
setColdLevel:
_thermalBlocked
_hotToken
_coldToken
_level
_hotLevel
_coldLevel
thermalBlocked
TB,N,GisThermalBlocked,V_thermalBlocked
Ti,N,V_hotToken
TQ,N,V_hotLevel
Ti,N,V_coldToken
TQ,N,V_coldLevel
Tq,R,N,V_level
initWithSessionConfiguration:
tokenWithFormatString:
tokenWithDateStyle:timeStyle:
formatString
setFormatString:
dateStyle
setDateStyle:
timeStyle
setTimeStyle:
_formatString
_dateStyle
_timeStyle
T@"NSString",C,N,V_formatString
TQ,N,V_dateStyle
TQ,N,V_timeStyle
dateFormatters
dateFormatterForToken:
_dateFormatterFromToken:
dateIntervalFormatters
dateIntervalFormatterForToken:
_dateIntervalFormatterFromToken:
formattedNow
formattedDate:
formattedDateTimeStamp:
formattedTime:
formattedTimeStamp:
_formatDate:withToken:
formattedRangeStart:end:
formattedRangeDateTimeStampStart:end:
formattedRangeTimestampStart:end:
formattedRange:
formattedRangeDateTimestamp:
formattedRangeTimestamp:
_formatIntervalFromDate:toDate:withToken:
T@"NSMutableDictionary",R,N
_imageKeyForBundleIdentifier:inVehicle:
iconImageForBundleIdentifier:inVehicle:
setIconImage:forBundleIdentifier:inVehicle:
_callStatusChanged:
animateSmartWidget:completion:
requestSizeChange
setLayoutType:
setInCallWidgetHidden:
setSceneWidgetsEnabled:
setSceneWidgetsForeground:
setSceneWidgetsActive:
setSmartWidgetCanChangeVisibilityDisabled:forRequester:
_setupConstraints
landscapePortraitConstraints
squareConstraints
_canChangeSmartWidgetVisible
_smartWidgetShouldBeHidden
_updateSmartWidgetVisibleIfNecessary
_smartWidgetHiddenDefaultChanged
_updateStackViewsWithUpdates:completion:
_updateMapWidgetSizes
setLandscapePortraitConstraints:
setSquareConstraints:
layoutType
isSmartWidgetHidden
setSmartWidgetHidden:
isInCallWidgetHidden
sceneWidgetsEnabled
sceneWidgetsForeground
sceneWidgetsActive
hasActiveNavigation
setHasActiveNavigation:
mapsWidgetController
nowPlayingWidgetController
inCallWidgetController
smartWidgetController
primaryWidgetStackViewController
setPrimaryWidgetStackViewController:
secondaryWidgetStackViewController
setSecondaryWidgetStackViewController:
sceneWidgetControllers
setSceneWidgetControllers:
smartWidgetChangeVisibilityDisabledRequesters
setSmartWidgetChangeVisibilityDisabledRequesters:
initialConstraintsSetup
setInitialConstraintsSetup:
_smartWidgetHidden
_inCallWidgetHidden
_sceneWidgetsEnabled
_sceneWidgetsForeground
_sceneWidgetsActive
_hasActiveNavigation
_initialConstraintsSetup
_landscapePortraitConstraints
_squareConstraints
_layoutType
_mapsWidgetController
_nowPlayingWidgetController
_inCallWidgetController
_smartWidgetController
_primaryWidgetStackViewController
_secondaryWidgetStackViewController
_sceneWidgetControllers
_smartWidgetChangeVisibilityDisabledRequesters
T@"DBNowPlayingWidgetViewController",R,N,V_nowPlayingWidgetController
T@"DBInCallWidgetViewController",R,N,V_inCallWidgetController
T@"DBSmartWidgetViewController",R,N,V_smartWidgetController
T@"DBWidgetStackViewController",&,N,V_primaryWidgetStackViewController
T@"DBWidgetStackViewController",&,N,V_secondaryWidgetStackViewController
T@"NSArray",&,N,V_sceneWidgetControllers
T@"NSArray",&,N,V_landscapePortraitConstraints
T@"NSArray",&,N,V_squareConstraints
T@"DBSmartWidgetEngine",&,N,V_engine
T@"NSMutableSet",&,N,V_smartWidgetChangeVisibilityDisabledRequesters
TB,N,V_initialConstraintsSetup
TQ,N,V_layoutType
smartWidgetHidden
TB,N,GisSmartWidgetHidden,V_smartWidgetHidden
inCallWidgetHidden
TB,N,GisInCallWidgetHidden,V_inCallWidgetHidden
TB,N,V_sceneWidgetsEnabled
TB,N,V_sceneWidgetsForeground
TB,N,V_sceneWidgetsActive
TB,N,V_hasActiveNavigation
T@"DBMapsWidgetViewController",R,N,V_mapsWidgetController
stringForDoorState:
doorStateValue
setDoorStateValue:
didChangeLayout:
layoutDelegate
setLayoutDelegate:
_layoutDelegate
T@"<DBLayoutHelperViewDelegate>",W,N,V_layoutDelegate
db_ShortDescription
registerAsSystemApp
_newApplicationLibrary
_newApplicationInitializationContext
getUIContextStatesWithCompletion:
getSessionUIContextStatesWithCompletion:
getSessionEchoContextStatesWithCompletion:
getSessionFeatureKeysWithCompletion:
setSessionFeatureKeys:completion:
appHistoryDataProviderForService:
iconLayoutService:dataProviderForVehicleID:
systemServiceApplicationInfoProvider:
systemService:canActivateApplication:withResult:
systemService:handleOpenApplicationRequest:withCompletion:
systemService:handleOpenApplicationRequest:options:origin:withResult:
systemService:handleOpenURLRequest:application:options:origin:withResult:
systemService:isPasscodeLockedOrBlockedWithResult:
systemService:handleActions:origin:withResult:
systemService:prepareForShutdownWithOptions:origin:
systemServicePrepareForShutdown:withOptions:
systemServicePrepareForExit:andRelaunch:
systemServicePrepareForShutdown:andReboot:
sharedApplicationLibrary
disablesFrontBoardImplicitWindowScenes
_hostsSystemStatusBar
_keyWindowForScreen:
_windowForSystemAppButtonEventsForScreen:
handleDoubleHeightStatusBarTapWithStyleOverride:
application:didFinishLaunchingWithOptions:
_currentDashboard
_currentAppHistory
runTest:options:
_runSiriTest:testOptions:
displayManager
setDisplayManager:
sessionService
setSessionService:
iconLayoutService
setIconLayoutService:
iconLayoutDataProviders
setIconLayoutDataProviders:
appHistoryService
setAppHistoryService:
processLaunchWatchdogMonitoringAssertion
setProcessLaunchWatchdogMonitoringAssertion:
_sharedApplicationLibrary
_memoryPressureSource
_memoryPressureStatus
_displayManager
_sessionService
_iconLayoutService
_iconLayoutDataProviders
_appHistoryService
_processLaunchWatchdogMonitoringAssertion
T@"DBDisplayManager",&,N,V_displayManager
T@"CRSSessionService",&,N,V_sessionService
T@"CRSIconLayoutService",&,N,V_iconLayoutService
T@"NSMutableDictionary",&,N,V_iconLayoutDataProviders
T@"DBAppHistory",&,N,V_appHistory
T@"CRSAppHistoryService",&,N,V_appHistoryService
T@"<BSInvalidatable>",&,N,V_processLaunchWatchdogMonitoringAssertion
isEnabledAndSupportedForIconProvider:
legibilitySettings
setLegibilitySettings:
T@"_UILegibilitySettings",&,N
setSceneWidgetsDisabled:forRequester:
navigationWidgetBundleIdentifier
portraitConstraints
landscapeConstraints
reloadConstraints
_updateNavigationWidgetsForIdentifier:
setPortraitConstraints:
setLandscapeConstraints:
preferredFocusHeading
setPreferredFocusHeading:
mapsNavigationWidgetController
setMapsNavigationWidgetController:
widgetContainerViewController
setWidgetContainerViewController:
currentLayoutType
setCurrentLayoutType:
landscapeContainerWidthConstraint
setLandscapeContainerWidthConstraint:
squareContainerHeightConstraint
setSquareContainerHeightConstraint:
sceneWidgetsDisabledRequesters
setSceneWidgetsDisabledRequesters:
layoutHelperView
setLayoutHelperView:
setNavigationWidgetBundleIdentifier:
_portraitConstraints
_landscapeConstraints
_preferredFocusHeading
_mapsNavigationWidgetController
_widgetContainerViewController
_currentLayoutType
_landscapeContainerWidthConstraint
_squareContainerHeightConstraint
_sceneWidgetsDisabledRequesters
_layoutHelperView
_navigationWidgetBundleIdentifier
T@"DBMapsNavigationWidgetViewController",&,N,V_mapsNavigationWidgetController
T@"DBWidgetContainerViewController",&,N,V_widgetContainerViewController
TQ,N,V_currentLayoutType
T@"NSArray",&,N,V_landscapeConstraints
T@"NSArray",&,N,V_portraitConstraints
T@"NSLayoutConstraint",&,N,V_landscapeContainerWidthConstraint
T@"NSLayoutConstraint",&,N,V_squareContainerHeightConstraint
T@"NSMutableSet",&,N,V_sceneWidgetsDisabledRequesters
T@"DBLayoutHelperView",&,N,V_layoutHelperView
T@"NSString",&,N,V_navigationWidgetBundleIdentifier
TQ,N,V_preferredFocusHeading
T@"_UILegibilitySettings",&,N,VlegibilitySettings
characteristicTypeByName
characteristicNameByType
characteristicNameForType:
setTranslatesAutoresizingMaskIntoConstraints:
blackColor
setBackgroundColor:
setAlpha:
layer
setCompositingFilter:
setAllowsGroupBlending:
bundleForClass:
materialViewWithRecipeNamesByTraitCollection:inBundle:options:initialWeighting:scaleAdjustment:compatibleWithTraitCollection:
setGroupNameBase:
defaultCenter
mainQueue
addObserverForName:object:queue:usingBlock:
initWithCoder:
platterCornerRadius
setPlatterCornerRadius:
currentWallpaper
iconLabelsRequireBackground
removeFromSuperview
superview
addSubview:
leadingAnchor
constraintEqualToAnchor:
trailingAnchor
topAnchor
bottomAnchor
activateConstraints:
userInterfaceStyle
setCornerCurve:
setMasksToBounds:
traitCollectionWithUserInterfaceStyle:
setTransform:
initWithDynamicProvider:
contentFrame
setContentFrame:
bounds
setFrame:
displayScale
resolvedColorWithTraitCollection:
setImage:
initWithWhite:alpha:
B24@0:8@16
Q24@0:8@16
@24@0:8Q16
B32@0:8@16@?24
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"NSArray"24@0:8Q16
q24@0:8@16
v32@0:8@16q24
v28@0:8@16B24
v32@0:8@"CRSSiriPreferences"16q24
v28@0:8@"CRSSiriPreferences"16B24
v32@0:8@16@24
v32@0:8@"DNDStateService"16@"DNDStateUpdate"24
v32@0:8@"UNNotificationSettingsCenter"16@"NSSet"24
v32@0:8@"UNNotificationSettingsCenter"16@"UNNotificationSystemSettings"24
v16@0:8
v40@0:8@16@24@32
v40@0:8@"DBWorkspace"16@"<DBWorkspaceState>"24@"<DBWorkspaceState>"32
v24@0:8@16
v24@0:8^{?=[45B][64c][64c][256c]iiii[100c][100c][100c][100c][2[100c]][1024c]IIb1b1iib1IIiI[150c]iib1b1b1[256c]b1b1b1b2b2b1Ib1b1b1[256c][256c][100c]b1b1b1b1b1db1b1b1[100c][100c][256c][256c]}16
@24@0:8q16
v24@0:8@"<UIStatusBarStateObserver>"16
@"NSString"24@0:8q16
q40@0:8@16q24Q32
v52@0:8@16d24d32d40i48
v44@0:8@16d24d32i40
@24@0:8@16
v40@0:8@16q24q32
v48@0:8@16q24q32@40
q40@0:8@"UIStatusBar_Base"16q24Q32
v52@0:8@"UIStatusBar_Base"16d24d32d40i48
v44@0:8@"UIStatusBar_Base"16d24d32i40
@"UISystemNavigationAction"24@0:8@"UIStatusBar_Base"16
v40@0:8@"UIStatusBar_Base"16q24q32
v48@0:8@"UIStatusBar_Base"16q24q32@40
Q40@0:8@16q24Q32
q24@0:8q16
Q40@0:8@"UIStatusBar_Base"16q24Q32
B24@0:8@"UIStatusBar_Base"16
{?=[45B][64c][64c][256c]iiii[100c][100c][100c][100c][2[100c]][1024c]IIb1b1iib1IIiI[150c]iib1b1b1[256c]b1b1b1b2b2b1Ib1b1b1[256c][256c][100c]b1b1b1b1b1db1b1b1[100c][100c][256c][256c]}16@0:8
i24@0:8Q16
q16@0:8
v24@0:8q16
@"DBStatusBarSensorIndicatorView"
@"NSString"
@"NSTimer"
@"NSHashTable"
@"<DBEnvironment>"
@"NSNumber"
@"STTelephonyStatusDomain"
@"STTelephonyStatusDomainData"
@"STBatteryStatusDomain"
@"STBatteryStatusDomainData"
@"STWifiStatusDomain"
@"STWifiStatusDomainData"
@"STMediaStatusDomain"
@"STMediaStatusDomainData"
@"STCallingStatusDomain"
@"STCallingStatusDomainData"
@"DNDStateService"
@"CRSSiriPreferences"
v24@0:8@?16
@"DBAppDockViewController"
@"UIView"
@"UIColor"
@32@0:8Q16@24
@24@0:8@?16
{UIEdgeInsets=dddd}16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16
{UIEdgeInsets=dddd}24@0:8@16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
@"DBEnvironmentConfiguration"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@32@0:8@16@24
@56@0:8@16{SBIconImageInfo={CGSize=dd}dd}24
d24@0:8@16
B40@0:8@16@24@32
Q24@0:8@"SBLeafIcon"16
@"NSString"32@0:8@"SBLeafIcon"16@"NSString"24
@"UIImage"56@0:8@"SBLeafIcon"16{SBIconImageInfo={CGSize=dd}dd}24
B24@0:8@"SBLeafIcon"16
q24@0:8@"SBLeafIcon"16
d24@0:8@"SBLeafIcon"16
@24@0:8@"SBLeafIcon"16
@"NSString"24@0:8@"SBLeafIcon"16
B24@0:8@"SBIcon"16
B40@0:8@"SBLeafIcon"16@"NSString"24@32
@"NSArray"24@0:8@"SBLeafIcon"16
@40@0:8@16@24@32
@"DBApplicationInfo"
@"CARSessionConfiguration"
@"FBSApplicationDataStore"
v32@0:8@16@?24
@"UIWindowScene"
@"NSMutableArray"
@"UIWindow"
v168@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24{UIEdgeInsets=dddd}56{CGRect={CGPoint=dd}{CGSize=dd}}88{UIEdgeInsets=dddd}120d152Q160
v168@0:8@"DBEnvironmentConfiguration"16{CGRect={CGPoint=dd}{CGSize=dd}}24{UIEdgeInsets=dddd}56{CGRect={CGPoint=dd}{CGSize=dd}}88{UIEdgeInsets=dddd}120d152Q160
v32@0:8@"DBEnvironmentConfiguration"16@"NSURL"24
v24@0:8@"DBEnvironmentConfiguration"16
v32@0:8@"DBEnvironmentConfiguration"16q24
v28@0:8@"DBEnvironmentConfiguration"16B24
v48@0:8@16@24@32@40
v24@0:8@"FBScene"16
v32@0:8@"FBScene"16@"NSError"24
v32@0:8@"FBScene"16@"FBSceneClientHandle"24
v32@0:8@"FBScene"16@"FBSceneUpdateContext"24
v40@0:8@"FBScene"16@"FBSceneUpdateContext"24@"NSError"32
v48@0:8@"FBScene"16@"FBSSceneClientSettingsDiff"24@"FBSSceneClientSettings"32@"FBSSceneTransitionContext"40
v36@0:8@16@24B32
v36@0:8@"DBProcessMonitor"16@"NSString"24B32
v32@0:8@"DBProcessMonitor"16@"NSString"24
v40@0:8@16@24Q32
v44@0:8@16@24Q32B40
v32@0:8@"FBSceneManager"16@"FBScene"24
v40@0:8@"FBSceneManager"16@"FBScene"24@"<FBSceneClient>"32
v48@0:8@"FBSceneManager"16@"FBScene"24@"FBSSceneSettings"32@"FBSSceneTransitionContext"40
v40@0:8@"FBSceneManager"16@"FBScene"24Q32
v44@0:8@"FBSceneManager"16@"FBScene"24Q32B40
v40@0:8@"FBSceneManager"16@"FBScene"24@"FBSceneUpdateContext"32
v48@0:8@"FBSceneManager"16@"FBScene"24@"FBSceneUpdateContext"32@"NSError"40
v20@0:8B16
@36@0:8@16B24@28
v28@0:8B16@20
d16@0:8
v24@0:8d16
v24@0:8Q16
@"FBScene"
@"FBSDisplayConfiguration"
@"<UIScenePresenter>"
@"UIView<UIScenePresentation>"
@"FBApplicationUpdateScenesTransaction"
@"NSURL"
@40@0:8{CGPoint=dd}16@32
v40@0:8@16q24@32
v56@0:8@16@24@32d40Q48
v32@0:8@"CARSession"16@"NSURL"24
v32@0:8@"CARSession"16q24
v40@0:8@"CARSession"16q24@"NSDictionary"32
v56@0:8@"CARSession"16@"CARScreenViewArea"24@"NSString"32d40Q48
v40@0:8@"CARSession"16@"CARScreenInfo"24@"NSURL"32
v32@0:8@"CARSession"16@"CARScreenInfo"24
v40@0:8@"CARSession"16@"NSString"24@"NSDictionary"32
v28@0:8@"CARSession"16B24
v40@0:8@"CARSession"16q24@"NSString"32
v24@0:8@"CARSession"16
@"CRCarPlayAppPolicy"24@0:8@"DBApplicationInfo"16
@64@0:8@16@24@32@40@48@56
v24@0:8B16B20
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v48@0:8{UIEdgeInsets=dddd}16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"CARSession"
@"DBClusterControlChannel"
@"DBLayerMetadataService"
@"DBAnalytics"
@"FBSDisplayLayoutPublisher"
@"UIScreen"
@"UITraitCollection"
@"CRVehicle"
@"DBNavigationStateProvider"
@"DBIconBadgeController"
@"CRCarPlayAppPolicyEvaluator"
@"DBAppHistory"
@"CRSUIWallpaperPreferences"
@"DBIconImageCache"
@"CRPairedVehicleManager"
@"NSMutableDictionary"
@"CARObserverHashTable"
@"NSMapTable"
@"NSObject<OS_dispatch_queue>"
{UIEdgeInsets="top"d"left"d"bottom"d"right"d}
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGSize=dd}16@0:8
@"FBSApplicationPlaceholder"
@"UIImage"
@"UIImageView"
@"DBInCallWidgetButtonRingView"
@"CPSMultilineLabel"
q40@0:8@16@24o^@32
q32@0:8@16@24
q40@0:8@"<BNPresentable>"16@"NSArray"24o^@32
q32@0:8@"<BNPresentable>"16@"<BNPresentable>"24
q40@0:8@"<BNPresentable>"16@"NSDictionary"24o^@32
@"<BNConsideringDelegate>"16@0:8
v24@0:8@"<BNConsideringDelegate>"16
@32@0:8@16^@24
B56@0:8@16@24Q32@40^@48
@60@0:8@16@24@32B40@44^@52
B48@0:8@16B24@28B36^@40
@48@0:8@16@24@32@40
@56@0:8@16@24@32@40@?48
v48@0:8@16o^{CGSize=dd}24o^{CGSize=dd}32^@40
B68@0:8@16@24@32B40@44@52^@60
B56@0:8@16@24@32@40^@48
@"BNBannerSourceLayoutDescription"32@0:8@"BNBannerSourceListener"16^@24
B56@0:8@"BNBannerSourceListener"16@"<BNPresentable>"24Q32@"NSDictionary"40^@48
@"NSArray"60@0:8@"BNBannerSourceListener"16@"<BNPresentableUniquelyIdentifying>"24@"NSString"32B40@"NSDictionary"44^@52
B48@0:8@"BNBannerSourceListener"16B24@"NSString"28B36^@40
@"UIApplicationSceneSpecification"24@0:8@"BNBannerSourceListener"16
@"UIApplicationSceneSpecification"48@0:8@"BNBannerSourceListener"16@"NSString"24@"FBProcess"32@"NSDictionary"40
v32@0:8@"BNBannerSourceListener"16@"FBSMutableSceneParameters"24
@"<BNBannerSourceListenerPresentable>"56@0:8@"BNBannerSourceListener"16@"<BNPresentableSpecifying>"24@"NSString"32@"FBScene"40@?<v@?@"<BNBannerSourceListenerPresentable>"@"NSError">48
v48@0:8@"BNBannerSourceListener"16o^{CGSize=dd}24o^{CGSize=dd}32^@40
B68@0:8@"BNBannerSourceListener"16@"NSString"24@"NSString"32B40@"NSString"44@"NSDictionary"52^@60
B56@0:8@"BNBannerSourceListener"16@"NSString"24@"NSString"32@"NSDictionary"40^@48
B24@0:8@"BNBannerSourceListener"16
v48@0:8@16{CGSize=dd}24@40
v56@0:8@16@24{CGSize=dd}32@48
{CGPoint=dd}48@0:8@16@24@32@40
{CGPoint=dd}40@0:8@16@24@32
v24@0:8@"<BNPresenting>"16
@"<BNBannerTransitioningDelegate>"24@0:8@"<BNPresenting>"16
v48@0:8@"<BNPresenting>"16{CGSize=dd}24@"<UIViewControllerTransitionCoordinator>"40
v48@0:8@"<BNPresenting>"16@"<BNPresentable>"24@"<UIViewControllerTransitionCoordinator>"32@"NSDictionary"40
v56@0:8@"<BNPresenting>"16@"<BNPresentable>"24{CGSize=dd}32@"<UIViewControllerTransitionCoordinator>"48
@"UIPanGestureRecognizer"24@0:8@"<BNPresenting>"16
{CGPoint=dd}48@0:8@"<BNPresenting>"16@"UIGestureRecognizer"24@"UITouch"32@"UIView"40
{CGPoint=dd}48@0:8@"<BNPresenting>"16@"UIGestureRecognizer"24@"UIEvent"32@"UIView"40
{CGPoint=dd}40@0:8@"<BNPresenting>"16@"UIPanGestureRecognizer"24@"UIView"32
d24@0:8@"<BNPresenting>"16
v32@0:8B16B20@24
v28@0:8B16@"NSString"20
v32@0:8B16B20@"NSString"24
v80@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGRect={CGPoint=dd}{CGSize=dd}}48
@64@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGSize=dd}48
@"BNBannerHostMonitor"
@"BNBannerController"
@"BNBannerSourceListener"
@"BNContentViewController"
@"DBBannerAuthority"
@"UITapGestureRecognizer"
@"<DBNotificationViewControllerDelegate>"
@"NSMutableSet"
v32@0:8@"DBHomeManager"16@"NSDictionary"24
v32@0:8@"DBHome"16@"NSString"24
v24@0:8@"DBHome"16
@"DBHomeManager"
@24@0:8^{_NSZone=}16
@?16@0:8
@"RBSProcessHandle"
@"DBSceneUpdate"
v32@0:8@"URTAlertService"16@"URTAlert"24
@"<DBSystemAlertPresenting>"
@"<DBAppAlertPresenting>"
@"URTAlertService"
v24@0:8@"DBHomeKitService"16
v32@0:8@"DBGarageDoor"16q24
v28@0:8@"DBGarageDoor"16B24
@"DBGarageDoor"
v48@0:8@16q24q32B40B44
v48@0:8@"DBLockOutController"16q24q32B40B44
v24@0:8@"DBNotificationViewController"16
v32@0:8@"DBUserAlertServer"16@"UIViewController"24
v24@0:8@"CRSInCallAssertionService"16
v28@0:8@"CRSInCallAssertionService"16B24
v24@0:8@"DBEvent"16
v56@0:8@16@24@32@40@48
v32@0:8@"FBSceneManager"16@"FBSceneClientHandshake"24
@"FBSSceneTransitionContext"32@0:8@"FBSceneManager"16@"FBScene"24
v56@0:8@"FBSceneManager"16@"FBScene"24@"FBSSceneClientSettingsDiff"32@"FBSSceneClientSettings"40@"FBSSceneTransitionContext"48
v40@0:8@"FBSceneManager"16@"FBScene"24@"NSSet"32
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8@16@24
{UIEdgeInsets=dddd}32@0:8@16@24
v24@0:8@"<FBSceneManagerObserver>"16
@"NSString"24@0:8@"DBApplicationInfo"16
@"FBScene"24@0:8@"DBApplicationInfo"16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@"DBApplicationInfo"16
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8@"DBApplicationInfo"16@"DBApplicationInfo"24
{UIEdgeInsets=dddd}24@0:8@"DBApplicationInfo"16
{UIEdgeInsets=dddd}32@0:8@"DBApplicationInfo"16@"DBApplicationInfo"24
@"DBApplicationInfo"24@0:8@"FBScene"16
B24@0:8@"DBApplicationInfo"16
@"DBWorkspace"16@0:8
@"UIWindow"16@0:8
@"FBSDisplayIdentity"16@0:8
@"FBSDisplayConfiguration"16@0:8
@"DBEnvironmentConfiguration"16@0:8
q32@0:8@"DBApplicationInfo"16@"DBApplicationInfo"24
@"<CRSIconLayoutVehicleDataProviding>"16@0:8
v48@0:8@16@24@32^v40
B24@0:8Q16
B32@0:8@16@24
i16@0:8
v20@0:8i16
@"<BSInvalidatable>"
@"DBDashboardStateProvider"
@"DBDashboardLayoutEngine"
@"DBWallpaperViewController"
@"DBDashboardRootViewController"
@"DBWorkspace"
@"DBDashboardWorkspaceOwner"
@"DBStatusBarWindow"
@"DBRootStatusBarViewController"
@"DBStatusBarStateProvider"
@"DBLockOutController"
@"DBNotificationWindow"
@"DBNotificationViewController"
@"UIViewController"
@"DBSiriViewController"
@"DBFocusController"
@"DBFocusMovementManager"
@"SiriLongPressButtonSource"
@"<SiriAssertion>"
@"SiriActivityAssertion"
@"SiriDirectActionSource"
@"DBNowPlayingObserver"
@"DBStatusBarHomeButtonStateManager"
@"DBScreenshotManager"
@"DBSplashScreenAlert"
@"RBSProcessMonitor"
@"DBUserAlertServer"
@"NSDictionary"
d24@0:8Q16
@"DBScrollButton"
@"NSLayoutConstraint"
@"CRSDashboardFocusableItem"
@"<DBWidgetFocusableViewDelegate>"
v20@0:8I16
v36@0:8B16@20@28
v24@0:8@"NSArray"16
v36@0:8B16@"BKSAnimationFenceHandle"20@"BSAnimationSettings"28
v28@0:8@"CRSDashboardFocusableItem"16B24
v24@0:8@"CRSDashboardFocusableItem"16
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
I16@0:8
@"NSXPCListener"
@"BKSTouchDeliveryPolicyAssertion"
@"NSArray"
@"DBTodayViewSynchronizedAnimationManager"
@"NSXPCConnection"
v24@0:8@"<DBWorkspaceState>"16
@32@0:8@?16@?24
@"<DBWorkspaceOwner>"
@"<DBWorkspaceState>"
@"_DBWorkspaceStateChangeSession"
@"DBDashboardApplicationSceneEntity"
v32@0:8@"DBAppHistory"16@"NSString"24
v40@0:8@16@24@?32
v48@0:8@16@24@32@?40
@"<DBAppPolicyProviding>"
@"DBDashboardWorkspaceState"
@"DBDashboardEntity"
v32@0:8@"DBNavigationStateProvider"16@"NSArray"24
v32@0:8@"DBNavigationStateProvider"16@"NSString"24
@28@0:8I16@20
@"CARScreenInfo"
@"DBInstrumentClusterWorkspaceOwner"
@"DBInstrumentClusterRootViewController"
@32@0:8q16@24
@"<DBLockOutViewDelegate>"
@"UILabel"
@"UIStackView"
v24@0:8@"DBKeybagMonitor"16
^{CGImage=}16@0:8
v24@0:8^{CGImage=}16
^{CGImage=}
@"UIBezierPath"
@64@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48@56
@"DBWidgetFocusRingView"
@"_TtC9DashBoard22DBDashboardPlatterView"
@"MTShadowView"
@"<DBWidgetViewFocusEnabledProviding>"
@20@0:8B16
@36@0:8@16Q24B32
v32@0:8{CGSize=dd}16
@"TUCall"
@"DBInCallWidgetAvatarView"
@"DBInCallWidgetAppIconButton"
@"DBInCallWidgetMultiwayTitleButton"
@"DBInCallWidgetButton"
@"UIFocusContainerGuide"
@"UILayoutGuide"
@"CADisplayLink"
{CGSize="width"d"height"d}
v32@0:8@?16@?24
v40@0:8@16@?24@?32
v40@0:8{CGPoint=dd}16@32
v40@0:8@"<SiriPresentation>"16@"SiriPresentationOptions"24@?<v@?B@"NSError">32
v40@0:8@"<SiriPresentation>"16@"SiriDismissalOptions"24@?<v@?B@"NSError">32
v28@0:8@"<SiriPresentation>"16B24
v24@0:8@"NSString"16
v32@0:8@"<SiriPresentation>"16q24
v40@0:8@"<SiriPresentation>"16@"SiriPunchoutRequest"24@?<v@?B@"NSError">32
@"UIView"24@0:8@"NSString"16
v32@0:8@"NSDictionary"16@?<v@?>24
v24@0:8@?<v@?>16
v28@0:8B16@?20
@"SiriPresentationViewController"
@"<SiriPresentationIntentUsageDelegate>"
@"DBWorkspaceStateChangeRequest"
@"UILongPressGestureRecognizer"
v24@0:8#16
v24@0:8@"HMAccessory"16
v32@0:8@"HMAccessory"16@"HMService"24
v32@0:8@"HMAccessory"16@"HMAccessoryProfile"24
v40@0:8@"HMAccessory"16@"HMService"24@"HMCharacteristic"32
v32@0:8@"HMAccessory"16@"NSString"24
@"NSUUID"16@0:8
@"NSUUID"
@"DBHome"
@"HMService"
v32@0:8@16Q24
v28@0:8@"DBDashboardStateProvider"16B24
v32@0:8@"DBDashboardStateProvider"16Q24
v32@0:8@"DBDashboardStateProvider"16@"NSString"24
v48@0:8@16q24q32q40
v48@0:8@"DBDashboardHomeViewController"16q24q32q40
@"DBDashboard"
@"<DBWidgetSizeManaging>"
@"BKSAnimationFenceHandle"
@"BSAnimationSettings"
v32@0:8@"DBLocationManager"16@"CLLocation"24
v32@0:8@"DBLocationManager"16@24
v28@0:8@"DBNetworkPathMonitor"16B24
v24@0:8@"DBNetworkPathMonitor"16
v24@0:8@"HMHome"16
v32@0:8@"HMHome"16@"HMAccessory"24
v32@0:8@"HMHome"16@"HMUser"24
v40@0:8@"HMHome"16@"HMRoom"24@"HMAccessory"32
v32@0:8@"HMHome"16@"HMRoom"24
v32@0:8@"HMHome"16@"HMZone"24
v40@0:8@"HMHome"16@"HMRoom"24@"HMZone"32
v32@0:8@"HMHome"16@"HMServiceGroup"24
v40@0:8@"HMHome"16@"HMService"24@"HMServiceGroup"32
v32@0:8@"HMHome"16@"HMActionSet"24
v32@0:8@"HMHome"16@"HMTrigger"24
v40@0:8@"HMHome"16@"NSError"24@"HMAccessory"32
v32@0:8@"HMHome"16Q24
v32@0:8@"HMHome"16@"HMResidentDevice"24
v32@0:8@"HMHome"16@"CLLocation"24
v32@0:8@"HMHome"16@"NSArray"24
v28@0:8@"HMHome"16B24
v32@0:8@"HMHome"16q24
v32@0:8@"HMHome"16@"NSString"24
v32@0:8@"HMHome"16@"HMMediaSystem"24
v32@0:8@"HMHome"16@"HMAccessoryNetworkProtectionGroup"24
v32@0:8@"HMHome"16@"HMHomePersonManagerSettings"24
v32@0:8@"HMHome"16@"NSError"24
@"HMHome"
@"DBLocationManager"
@"DBNetworkPathMonitor"
v32@0:8Q16@24
{os_unfair_lock_s=I}16@0:8
v20@0:8{os_unfair_lock_s=I}16
@"NSError"
@"DBHomeKitService"
@"HMCharacteristic"
v24@0:8@"DBBuddyMonitor"16
v24@0:8@"DBSmartWidgetPrediction"16
q40@0:8d16d24d32
:16@0:8
@"CAFilter"
@"<DBSmartWidgetPredictionDelegate>"
v32@0:8@"CPUINowPlayingManager"16@"CPUINowPlayingSnapshot"24
v32@0:8@"CPUINowPlayingManager"16@"NSString"24
v36@0:8@16B24@28
v32@0:8@"DBNowPlayingObserver"16@"DBApplicationInfo"24
v36@0:8@"DBNowPlayingObserver"16B24@"DBApplicationInfo"28
v32@0:8@"MPRequestResponseController"16@?<v@?>24
B32@0:8@"MPRequestResponseController"16@"NSError"24
v24@0:8@"MPRequestResponseController"16
{UIEdgeInsets=dddd}24@0:8Q16
v40@0:8@16Q24@32
v32@0:8q16q24
v36@0:8Q16B24@28
@"UIActivityIndicatorView"
@"CPUINowPlayingSnapshot"
@"UIButton"
@"DBNowPlayingFocusHighlightButton"
@"CPUIProgressView"
@"MPArtworkCatalog"
@"UIStatusBar_Modern"
B32@0:8@"NSURL"16@"NSURL"24
@"DBSmartWidgetPrediction"
@"DBSmartWidgetEngine"
B48@0:8Q16Q24B32B36Q40
B36@0:8Q16B24Q28
{CGRect={CGPoint=dd}{CGSize=dd}}64@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48@56
@"CARInputDeviceTouchpad"
@"EKEventStore"
@"EKCalendarVisibilityManager"
v32@0:8@"DBSmartWidgetEngine"16@"NSArray"24
v24@0:8@"DBSmartWidgetEngine"16
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
B32@0:8@"UIGestureRecognizer"16@"UIEvent"24
@"DBSmartWidgetView"
@"NSSet"
@"UISwipeGestureRecognizer"
@"<DBSmartWidgetAnimating>"
Q32@0:8@16@24
Q32@0:8@"<DBWorkspaceStateChangeSession>"16@"DBWorkspaceStateChangeRequest"24
v32@0:8@"<DBWorkspaceStateChangeSession>"16@"DBWorkspaceStateChangeRequest"24
v32@0:8@"DBWorkspace"16@"<DBWorkspaceStateChangeSession>"24
d32@0:8{CGSize=dd}16
{CGSize=dd}32@0:8{CGSize=dd}16
@"DBIconDropShadowProvider"
@"DBIconLabelBackdropView"
v32@0:8@"DBDashboardRootViewController"16Q24
v44@0:8@16B24Q28@?36
v36@0:8@16B24@?28
v44@0:8@16@24B32@?36
@"DBDashboardHomeViewController"
@"CPUIPassthroughView"
@"_TtC9DashBoard22DBDashboardDimmingView"
@"UIViewController<DBDashboardWorkspaceEntityPresenting>"
@"DBIconView"
@"URTAlert"
@"<DBStatusBarButtonStateManagerDelegate>"
v28@0:8@16i24
v40@0:8@"CLLocationManager"16@"CLLocation"24@"CLLocation"32
v32@0:8@"CLLocationManager"16@"NSArray"24
v32@0:8@"CLLocationManager"16@"CLHeading"24
B24@0:8@"CLLocationManager"16
v40@0:8@"CLLocationManager"16q24@"CLRegion"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconRegion"32
v40@0:8@"CLLocationManager"16@"CLBeaconRegion"24@"NSError"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconIdentityConstraint"32
v40@0:8@"CLLocationManager"16@"CLBeaconIdentityConstraint"24@"NSError"32
v32@0:8@"CLLocationManager"16@"CLRegion"24
v32@0:8@"CLLocationManager"16@"NSError"24
v40@0:8@"CLLocationManager"16@"CLRegion"24@"NSError"32
v28@0:8@"CLLocationManager"16i24
v24@0:8@"CLLocationManager"16
v32@0:8@"CLLocationManager"16@"CLVisit"24
v48@0:8@16{CLLocationCoordinate2D=dd}24d40
@"CLLocation"
@"NSBundle"
@"CLLocationManager"
v32@0:8@16B24i28
@"<DBAppDockViewControllerDelegate>"
@"DBAppDockButton"
@"<DBIconProviding>"
Q56@0:8d16{CGSize=dd}24Q40Q48
Q48@0:8d16{CGSize=dd}24Q40
{UIEdgeInsets=dddd}24@0:8q16
@"NSArray"16@0:8
v52@0:8@16@24@32B40@?44
q40@0:8@16@24q32
d32@0:8@16@24
B48@0:8@16@24Q32@40
B40@0:8@16@24q32
@36@0:8@16@24B32
v56@0:8@16{UIEdgeInsets=dddd}24
v40@0:8@16{CGPoint=dd}24
#40@0:8@16#24#32
v56@0:8@16@24q32@40@48
@48@0:8@16@24Q32@40
@56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
@32@0:8@16Q24
v48@0:8@16@24@32q40
v40@0:8@16@24d32
v48@0:8@16@24d32d40
B48@0:8@16@24@32@40
#40@0:8@16@24#32
v32@0:8@"SBHIconManager"16@"SBRootFolderControllerConfiguration"24
v32@0:8@"SBHIconManager"16@"SBRootFolderController"24
v32@0:8@"SBHIconManager"16@"UIViewController<SBHIconRootViewProviding>"24
q24@0:8@"SBHIconManager"16
Q24@0:8@"SBHIconManager"16
B24@0:8@"SBHIconManager"16
v24@0:8@"SBHIconManager"16
B32@0:8@"SBHIconManager"16@"NSString"24
v32@0:8@"SBHIconManager"16@"SBHIconImageCache"24
v40@0:8@"SBHIconManager"16@"SBIconView"24@"SBIcon"32
@"NSString"32@0:8@"SBHIconManager"16@"SBIconView"24
v32@0:8@"SBHIconManager"16@"SBIconView"24
v40@0:8@"SBHIconManager"16@"SBIconView"24@"NSSet"32
v52@0:8@"SBHIconManager"16@"SBIcon"24@"NSString"32B40@?<v@?B>44
v32@0:8@"SBHIconManager"16@"NSURL"24
@"NSSet"32@0:8@"SBHIconManager"16@"SBIconView"24
@"NSURL"32@0:8@"SBHIconManager"16@"SBIconView"24
@"UIView"32@0:8@"SBHIconManager"16@"SBIconView"24
v40@0:8@"SBHIconManager"16@"SBIconView"24@"_UIContextMenuStyle"32
@"UIViewController"32@0:8@"SBHIconManager"16@"SBIconView"24
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8@"SBHIconManager"16@"SBIconView"24
v40@0:8@"SBHIconManager"16@"SBIconView"24@"<SBHIconViewConfigurationInteraction>"32
B32@0:8@"SBHIconManager"16@"SBIconView"24
v40@0:8@"SBHIconManager"16@"SBIcon"24@"NSString"32
q40@0:8@"SBHIconManager"16@"SBIconView"24q32
B32@0:8@"SBHIconManager"16@"SBIcon"24
Q32@0:8@"SBHIconManager"16@"SBIconView"24
@"UIColor"32@0:8@"SBHIconManager"16@"SBIconView"24
@"UIViewController"24@0:8@"SBHIconManager"16
@"UIViewController"32@0:8@"SBHIconManager"16@"SBIcon"24
B40@0:8@"SBHIconManager"16@"<UIDragSession>"24@"SBIconView"32
B40@0:8@"SBHIconManager"16@"<UIDropSession>"24@"SBIconListView"32
d32@0:8@"SBHIconManager"16@"SBIconView"24
@"UIView"32@0:8@"SBHIconManager"16@"SBRootFolderController"24
B40@0:8@"SBHIconManager"16@"UIView"24@"SBIconView"32
@"<SBIconViewSnapshotProviding>"32@0:8@"SBHIconManager"16@"SBIconView"24
@"<SBRecycledViewsContainerProviding>"24@0:8@"SBHIconManager"16
@"UIView<SBIconDragPreview>"32@0:8@"SBHIconManager"16@"SBIconView"24
@"UIWindow<SBIconDragPreviewContaining>"32@0:8@"SBHIconManager"16@"UIWindowScene"24
v40@0:8@"SBHIconManager"16@"NSUUID"24Q32
v32@0:8@"SBHIconManager"16@"<UIDropSession>"24
B48@0:8@"SBHIconManager"16@"SBSApplicationShortcutItem"24Q32@"SBIconView"40
@"NSArray"32@0:8@"SBHIconManager"16@"SBIconView"24
B40@0:8@"SBHIconManager"16@"SBFolderController"24q32
@"<BSInvalidatable>"36@0:8@"SBHIconManager"16@"SBFolderController"24B32
@"UIStatusBar"32@0:8@"SBHIconManager"16@"SBFolderController"24
@"UIStatusBarStyleRequest"32@0:8@"SBHIconManager"16@"SBFolderController"24
v40@0:8@"SBHIconManager"16@"UIStatusBar"24@"SBFolderController"32
{UIEdgeInsets=dddd}32@0:8@"SBHIconManager"16@"SBFolderController"24
v56@0:8@"SBHIconManager"16{UIEdgeInsets=dddd}24
@"NSString"24@0:8@"SBHIconManager"16
@"NSString"32@0:8@"SBHIconManager"16@"NSString"24
v32@0:8@"SBHIconManager"16@"SBFolder"24
v32@0:8@"SBHIconManager"16@"SBFolderController"24
d32@0:8@"SBHIconManager"16@"SBFolderController"24
v40@0:8@"SBHIconManager"16{CGPoint=dd}24
d24@0:8@"SBHIconManager"16
#40@0:8@"SBHIconManager"16#24#32
v56@0:8@"SBHIconManager"16@"SBNestingViewController"24q32@"SBNestingViewController"40@"<SBViewControllerTransitionCoordinator>"48
@"SBHIconAnimationSettings"48@0:8@"SBHIconManager"16@"SBHomeScreenIconTransitionAnimator"24Q32@"SBNestingViewController"40
@"UIColor"56@0:8@"SBHIconManager"16{CGRect={CGPoint=dd}{CGSize=dd}}24
v36@0:8@"SBHIconManager"16@"UIWindowScene"24B32
@"NSDictionary"24@0:8@"SBHIconManager"16
B32@0:8@"SBHIconManager"16@"SBLeafIcon"24
@"NSArray"32@0:8@"SBHIconManager"16Q24
v48@0:8@"SBHIconManager"16@"SBRootFolderController"24@"SBViewControllerTransitionContext"32q40
v48@0:8@"SBHIconManager"16@"SBRootFolderController"24@"UIViewPropertyAnimator"32q40
v40@0:8@"SBHIconManager"16@"SBRootFolderController"24d32
v48@0:8@"SBHIconManager"16@"SBRootFolderController"24d32d40
@"UIViewController"40@0:8@"SBHIconManager"16@"SBWidgetIcon"24@"<SBLeafIconDataSource>"32
B40@0:8@"SBHIconManager"16@"UIViewController"24@"NSString"32
v32@0:8@"SBHIconManager"16@"NSString"24
@"NSData"40@0:8@"SBHIconManager"16@"<SBLeafIconDataSource>"24@"SBLeafIcon"32
v48@0:8@"SBHIconManager"16@"<SBLeafIconDataSource>"24@"SBLeafIcon"32@"NSData"40
v40@0:8@"SBHIconManager"16@"<SBLeafIconDataSource>"24@"SBLeafIcon"32
v32@0:8@"SBHIconManager"16@?<v@?B>24
v48@0:8@"SBHIconManager"16@"SBRootFolderViewPageManagementLayoutManager"24@"<UIViewImplicitlyAnimating>"32@"NSMutableDictionary"40
v40@0:8@"SBHIconManager"16@"<UIViewImplicitlyAnimating>"24@"NSMutableDictionary"32
v40@0:8@"SBHIconManager"16@"SBRootFolderViewPageManagementLayoutManager"24@"NSMutableDictionary"32
B48@0:8@"SBHIconManager"16@"SBIcon"24@"SBIconListModel"32@"SBFolder"40
B32@0:8@"SBHIconManager"16@"SBHWidget"24
B32@0:8@"SBHIconManager"16@"SBHCustomIconElement"24
v32@0:8@"SBHIconManager"16@"SBHAddWidgetSheetViewController"24
#40@0:8@"SBHIconManager"16@"NSString"24#32
@"NSArray"24@0:8@"SBHIconManager"16
@"NSArray"40@0:8@"SBHIconManager"16@"NSArray"24@"NSArray"32
@"SBModalWidgetIntroductionHomeScreenPreview"24@0:8@"SBHIconManager"16
v40@0:8@"SBHIconManager"16@"<SBHFeatureIntroductionProviding>"24Q32
v32@0:8@"SBHIconManager"16@"<SBHFeatureIntroductionProviding>"24
v48@0:8@"SBHIconManager"16@"INIntent"24@"NSString"32@"NSString"40
@"SBFloatingDockViewController"32@0:8@"SBHIconManager"16@"UIView"24
@"SBFloatingDockViewController"32@0:8@"SBHIconManager"16@"UIViewController"24
B32@0:8@"SBHIconManager"16@"UIView"24
v24@0:8@?<v@?@"CRSIconLayoutState"@"NSError">16
v24@0:8@"CRSIconLayoutState"16
v32@0:8@"NSString"16@?<v@?@"CRSApplicationIcon"@"NSError">24
@"DBIconManager"
@"DBIconModel"
v32@0:8@"DBLockOutView"16Q24
v36@0:8q16B24@?28
@"<DBLockOutViewControllerDelegate>"
@"DBLockOutView"
v32@0:8@"DBIconBadgeController"16@"NSSet"24
v40@0:8@"FBSApplicationDataStoreMonitor"16@"NSString"24@"NSString"32
v32@0:8@"FBSApplicationDataStoreMonitor"16@"NSString"24
#24@0:8@16
B32@0:8@16q24
v56@0:8@16@24@32{CGPoint=dd}40
@28@0:8@16B24
@52@0:8@16q24@32B40^d44
v52@0:8@16@24q32@40B48
#24@0:8@"SBFolder"16
B32@0:8@"SBFolderController"16q24
v32@0:8@"SBFolderController"16@"SBIconListView"24
B32@0:8@"SBFolderController"16@"UIPinchGestureRecognizer"24
v28@0:8@"SBFolderController"16B24
v24@0:8@"SBFolderController"16
B40@0:8@"SBFolderController"16@"SBIconListView"24@"<UIDropSession>"32
v40@0:8@"SBFolderController"16@"SBIconListView"24@"<UIDropSession>"32
@"UIDropProposal"40@0:8@"SBFolderController"16@"SBIconListView"24@"<UIDropSession>"32
v56@0:8@"SBFolderController"16@"SBIconListView"24@"<UIDropSession>"32{CGPoint=dd}40
B48@0:8@"SBFolderController"16@"SBIconListView"24@"<UIDropSession>"32@"SBIconView"40
v40@0:8@"SBFolderController"16@"SBIconListView"24@"SBIconView"32
@"<UIViewSpringAnimationBehaviorDescribing>"40@0:8@"SBFolderController"16@"SBIconListView"24@"UIDragItem"32
@"SBIconView"48@0:8@"SBFolderController"16@"SBIconListView"24@"UIDragItem"32@"SBIconView"40
v48@0:8@"SBFolderController"16@"SBIconListView"24@"SBIconView"32@"UIDragItem"40
@"UITargetedDragPreview"48@0:8@"SBFolderController"16@"SBIconListView"24@"UIDragItem"32@"UITargetedDragPreview"40
v48@0:8@"SBFolderController"16@"SBIconListView"24@"UIDragItem"32@"<UIDragAnimating>"40
d24@0:8@"SBFolderController"16
v32@0:8@"SBFolderController"16@"UITextField"24
{UIEdgeInsets=dddd}24@0:8@"SBFolderController"16
@"<BSInvalidatable>"28@0:8@"SBFolderController"16B24
@"UIStatusBar"24@0:8@"SBFolderController"16
v32@0:8@"SBFolderController"16@"UIStatusBar"24
@"UIStatusBarStyleRequest"24@0:8@"SBFolderController"16
@"SBIconAnimator"52@0:8@"SBFolderController"16q24@"SBNestingViewController"32B40^d44
v52@0:8@"SBFolderController"16@"SBHomeScreenIconTransitionAnimator"24q32@"SBNestingViewController"40B48
@"UIColor"56@0:8@"SBFolderController"16{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8@"SBFolderController"16@"SBFolderControllerConfiguration"24
v40@0:8@16@24q32
v32@0:8@16d24
v40@0:8@16d24d32
v40@0:8@16{CGSize=dd}24
v56@0:8@16@24@32@40@?48
B24@0:8@"SBRootFolderController"16
v40@0:8@"SBRootFolderController"16{CGPoint=dd}24
d24@0:8@"SBRootFolderController"16
@"UIView"24@0:8@"SBRootFolderController"16
v56@0:8@"SBRootFolderController"16{UIEdgeInsets=dddd}24
v40@0:8@"SBRootFolderController"16@"SBViewControllerTransitionContext"24q32
v40@0:8@"SBRootFolderController"16@"UIViewPropertyAnimator"24q32
@"SBIconListView"24@0:8@"SBRootFolderController"16
v32@0:8@"SBRootFolderController"16d24
v40@0:8@"SBRootFolderController"16d24d32
@"NSString"32@0:8@"SBRootFolderController"16@"NSString"24
v24@0:8@"SBRootFolderController"16
v40@0:8@"SBRootFolderController"16{CGSize=dd}24
v48@0:8@"SBRootFolderController"16@"SBRootFolderViewPageManagementLayoutManager"24@"<UIViewImplicitlyAnimating>"32@"NSMutableDictionary"40
v40@0:8@"SBRootFolderController"16@"<UIViewImplicitlyAnimating>"24@"NSMutableDictionary"32
v40@0:8@"SBRootFolderController"16@"SBRootFolderViewPageManagementLayoutManager"24@"NSMutableDictionary"32
@"SBIcon"32@0:8@"SBRootFolderController"16@"NSString"24
v56@0:8@"SBRootFolderController"16@"SBWidgetIcon"24@"SBIconView"32@"<SBHWidgetSheetViewControllerPresenter>"40@?<v@?>48
v32@0:8@"SBRootFolderController"16@"<UIDropSession>"24
v32@0:8@"SBRootFolderController"16@"SBWidgetIcon"24
@"UIView<SBIconDragPreview>"32@0:8@"SBRootFolderController"16@"SBIconView"24
@"UIWindow<SBIconDragPreviewContaining>"32@0:8@"SBRootFolderController"16@"UIWindowScene"24
@"<SBLeafIconDataSource>"40@0:8@"SBRootFolderController"16@"<SBLeafIconDataSource>"24@"SBWidgetIcon"32
v32@0:8@"SBRootFolderController"16@"UIViewController<SBHWidgetSheetViewControlling>"24
v32@0:8@"SBRootFolderController"16@"SBHAddWidgetSheetViewController"24
@"NSString"24@0:8@"SBRootFolderController"16
@"SBHIconImageCache"24@0:8@"SBRootFolderController"16
B24@0:8@"NSString"16
@"DBLeafIcon"24@0:8@"NSString"16
B24@0:8@"DBLeafIcon"16
@"FBSALOToken"
@"DBTodayViewController"
@"FBSApplicationLibrary"
@"FBSApplicationDataStoreMonitor"
@"NSIndexPath"
@"NSObject<OS_nw_path_monitor>"
@"NSObject<OS_nw_path>"
v24@0:8@"NSDictionary"16
@"<DBLayerMetadataServiceDelegate>"
v32@0:8@"CARActiveNavigationIdentifiersObserver"16@"NSArray"24
@"<DBNavigationAppInfoProviding>"
@"<DBAppHistoryAppDockProviding>"
@"CARActiveNavigationIdentifiersObserver"
v24@0:8@"SBSRemoteAlertHandle"16
v32@0:8@"SBSRemoteAlertHandle"16@"NSError"24
@"SBSRemoteAlertHandle"
v32@0:8@"CRSUIStatusBarStyleService"16@"BSAnimationSettings"24
v32@0:8@"DBAppDockViewController"16@"NSString"24
v32@0:8@"DBStatusBarHomeButtonStateManager"16Q24
@"DBStatusBarHomeButton"
@"DBStatusBarScreenResizeButton"
@"DBStatusBarViewController"
@"UIVisualEffectView"
@"CRSUIStatusBarStyleService"
v24@0:8@"DBDisclosureMonitor"16
v32@0:8@"DBLockOutViewController"16Q24
v24@0:8@"DBSiriMonitor"16
v24@0:8@"DBThermalMonitor"16
@"DBLockOutWindow"
@"DBLockOutViewController"
@"DBBuddyMonitor"
@"DBDisclosureMonitor"
@"DBKeybagMonitor"
@"DBSiriMonitor"
@"DBThermalMonitor"
@"<DBLockoutControllerDelegate>"
@"DBHomeManager"16@0:8
v28@0:8@"DBSmartWidgetSource"16B24
@"NSDate"
@"<SBIconListLayout>"24@0:8@"NSString"16
@"SBIconListFlowLayout"
@"_DBIconListLayoutProvider"
@"UNNotificationSettingsCenter"
@"<DBSmartWidgetSourceDelegate>"
@"UIMutableCarPlayApplicationSceneSettings"
@"UIApplicationSceneTransitionContext"
@"UIApplicationStarkSceneSpecification"
v32@0:8@"CARSession"16@"CARSessionConfiguration"24
v40@0:8@"FBSDisplayMonitor"16@"FBSDisplayIdentity"24@"FBSDisplayConfiguration"32
v32@0:8@"FBSDisplayMonitor"16@"FBSDisplayIdentity"24
@"FBSceneManager"
@"CARSessionStatus"
@"DBProcessMonitor"
@"CNAvatarViewControllerSettings"
@"CNAvatarViewController"
v24@0:8@"SBIcon"16
v32@0:8@"SBLeafIcon"16@"<SBLeafIconDataSource>"24
@"DBLeafIcon"
v28@0:8q16B24
v48@0:8@16@24@32d40
^{IONotificationPort=}
@"CARAutomaticDNDStatus"
@"NSOperationQueue"
@"_DBAnalyticsChargeInfo"
@"FBSDisplayLayoutMonitor"
@"CARScreenViewArea"
@"CRCarPlayAppDeclaration"
@20@0:8i16
@"<DBIconModelApplicationDataSource>"
@"DBLocationManager"16@0:8
@"DBNetworkPathMonitor"16@0:8
v32@0:8@"HMHomeManager"16Q24
v24@0:8@"HMHomeManager"16
v32@0:8@"HMHomeManager"16@"HMHome"24
v32@0:8@"HMHomeManager"16@"HMAddAccessoryRequest"24
@"HMHomeManager"
@"HMFLocationAuthorization"
@24@0:8^@16
B32@0:8@16^@24
v40@0:8@"DBUserAlertServer"16@"UIViewController"24@"NSString"32
@"DBDashboardWorkspaceStateResolver"
@"<DBWorkspaceStateChangeSession>"
@"<DBNotificationSuspending>"
@"<DBNowPlayingDelegate>"
@68@0:8@16q24d32@40@48i56@60
v60@0:8d16@24@32@40i48@52
v100@0:8d16@24@32@40i48@52Q60{CGRect={CGPoint=dd}{CGSize=dd}}68
v64@0:8@16Q24{CGRect={CGPoint=dd}{CGSize=dd}}32
v56@0:8Q16{CGRect={CGPoint=dd}{CGSize=dd}}24
@"DBFocusAssertion"
@32@0:8Q16Q24
v32@0:8@?<v@?>16@?<v@?>24
@"DBMapsWidgetViewController"
@"DBNowPlayingWidgetViewController"
@"DBInCallWidgetViewController"
@"DBSmartWidgetViewController"
@"DBWidgetStackViewController"
@"<DBLayoutHelperViewDelegate>"
v24@0:8@?<v@?@"NSArray"@"NSError">16
v32@0:8@"NSArray"16@?<v@?@"NSNumber"@"NSError">24
@"<CRSAppHistoryDataProviding>"24@0:8@"CRSAppHistoryService"16
@"<CRSIconLayoutVehicleDataProviding>"32@0:8@"CRSIconLayoutService"16@"NSString"24
v64@0:8@16@24@32@40@48@?56
@"<FBSApplicationInfoProvider>"24@0:8@"FBSystemService"16
v40@0:8@"FBSystemService"16@"NSString"24@?<v@?q>32
v40@0:8@"FBSystemService"16@"FBSystemServiceOpenApplicationRequest"24@?<v@?@"NSError">32
v56@0:8@"FBSystemService"16@"NSString"24@"NSDictionary"32@"BSAuditToken"40@?<v@?q>48
v64@0:8@"FBSystemService"16@"NSURL"24@"NSString"32@"NSDictionary"40@"BSAuditToken"48@?<v@?q>56
v32@0:8@"FBSystemService"16@?<v@?B>24
v48@0:8@"FBSystemService"16@"NSSet"24@"BSAuditToken"32@?<v@?q>40
v40@0:8@"FBSystemService"16@"FBSShutdownOptions"24@"BSProcessHandle"32
v32@0:8@"FBSystemService"16Q24
v28@0:8@"FBSystemService"16B24
@"NSObject<OS_dispatch_source>"
@"DBDisplayManager"
@"CRSSessionService"
@"CRSIconLayoutService"
@"CRSAppHistoryService"
v24@0:8@"DBLayoutHelperView"16
@"_UILegibilitySettings"16@0:8
v24@0:8@"_UILegibilitySettings"16
@"_UILegibilitySettings"
@"DBMapsNavigationWidgetViewController"
@"DBWidgetContainerViewController"
@"DBLayoutHelperView"
