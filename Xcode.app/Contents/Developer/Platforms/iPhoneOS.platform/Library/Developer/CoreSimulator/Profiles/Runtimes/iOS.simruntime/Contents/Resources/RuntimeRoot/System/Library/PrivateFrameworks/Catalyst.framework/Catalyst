@(#)PROGRAM:Catalyst  PROJECT:Catalyst-8.8
CATAddress.m
The provided data is not long enough to be a sockaddr.
v8@?0
%@ address: ANY %@
%@ address: LOCAL WIFI %@
%@ address: %@
MessageIdentifier
ContentType
MessagingVersion
MessageType
<%@: %p %@>
CATArbitrator.m
Invalid parameter not satisfying: %@
resource
%@ cannot call %@ with maxConcurrentCount == 0
%@ cannot call %@ when key (%@) is already registered
maxConcurrentCount > 0
%@.%p.pending-waits
%@ cannot call %@ because receiver has been invalidated
delegateQueue
completionBlock
entry
v32@?0@"NSString"8@"_CATProxyWaitToken"16^B24
group
com.apple.catalyst
General
B32@?0@8Q16^B24
CATBatchRemoteTaskOperation.m
client
%@.%p.main
%@.%p
CATCollectionController.m
%@ is already observing <%@: %p> on keypath %@
%@ cannot call %@ when there is already content set
_CATCollectionControllerContentObservationContext
v24@?0@8^B16
_CATCollectionControllerArrangementKeyObservationContext
q24@?0@8@16
changeBlock
selectionIndexes
v16@?0@"<CATTimer>"8
v20@?0B8@"NSError"12
%@-AcknowledgeTimer
fireAndForget
self
@16@?0@"NSNumber"8
[%@]
<%@: %p { dataNumber = %lu, pendingSequenceNumbers = %@ }>
CATEndPoint.m
%@ address: %@ port: %d
NSError *CATErrorWithDomainCodeAndUserInfo(NSString *__strong, NSInteger, CATErrorDescriptionsGenerator, NSDictionary *__strong)
CATError.m
errorDescriptionsWithCodeAndUserInfo
NSDescription
v32@?0@8@16^B24
Content-Length
http://localhost/
POST
CATIDSServiceConnectionDataAggregator.m
Should have an aggregation for window number %ld
v24@?0@"<CATTimer>"8Q16
%@-MissingContentTimer
<%@: %p { nextDeploymentNumber = %lu, aggregationsByDataNumber = %@ }>
NSLocalizedDescription
%@.%@
CATLocalizationHelper.m
tableName
strings
English
Localizable
MessageMetadata
MessageContent
Catalyst
SequenceNumber
DataNumber
DataSegment
SegmentNumber
TotalSegments
ConnectionIdentifier
Content
ReceivedSequenceNumber
messageUUID
<%@: { messageUUID = '%@' }>
v16@?0@"NSError"8
v16@?0@"NSDictionary"8
SharingCloseMessageError
cat_assertion
flags
CATNetworkReachability.m
address
<%@: %p { %@, flags = '%c %c%c%c%c%c%c%c' }>
reachable
unreachable
SharingSendMessageContent
CATSharingSentMessage.m
content
CATNotificationMessage.m
name
taskUUID
userInfo
<%@: %p { name = %@, ID = %@, state = %@, completed = %ld/%ld }>
%c%c%c [%ld]
---REEEEF
isCancelled
CATOperation.m
%@ cannot transition to '_CATOperationStateStarting' from state (%d).
%@ cannot transition to '_CATOperationStateRunning' from state (%d).
isExecuting
%@ cannot call %@ when operation's state is %ld
%@ cannot call %@ when operation is already finished. Previous call:
%@ cannot call %@ when the specified error is nil.
CATCaptureCallStackSymbols
*** Enable backtrace by setting CATCaptureCallStackSymbols to YES ***
isFinished
operation
observer
%@ cannot call %@ with an operation (%@) not being observed
completedUnitCount
_CATOperationCompletedUnitCountObservationContext
%@: %@ is unavailable
target
%@.%p.%p.%@
CATOperationQueue.m
%@ cannot call %@ for backgroundQueue
Global Background Queue
%@ cannot use +currentQueue, call +[NSOperationQueue currentQueue] instead.
%@ cannot use +mainQueue, call +[NSOperationQueue mainQueue] instead.
<%@: %p { name = '%@', suspended = %d, operationCount = %lu, maxConcurrentOperationCount = %ld }>
_CATOperationQueueIsFinishedObservationContext
%@-%@
ExpectedSequenceNumber
CATProperty.m
attributes
CATRemoteConnection.m
connection1
connection2
netService
inputStream
outputStream
Stream Event Queue
%@ cannot dealloc while receiver is still valid.
<%@: %p { name = %@ } >
%@ cannot call %@ when invalidated.
Connection did close
_scheduleInCFRunLoop:forMode:
identity
error
Handle Stream Event Operation
data
stream
CATRemoteTaskOperation.m
request
Request must set before the remote task operation can be run
CATRemoteTransport.m
%@ cannot call %@
transport1
transport2
remoteConnection
Suspended: %@
Operation Count: %@
Operations: %@
v28@?0@"<CATResettableTimer>"8Q16B24
-[CATIDSServiceConnection processMessage:senderAppleID:senderAddress:]
CATIDSServiceConnection.m
expected %@, got %@
v16@?0@"CATActiveIDSServiceConnectionContentSendData"8
@"<CATIDSMessage>"16@?0@"CATActiveIDSServiceConnectionContentSendData"8
%@-KeepAliveTimer
<%@: %p { metadata = %@, destinationAddress = %@, isClosed = %@, closedError = %@ }>
-[CATIDSServiceConnectionMessageProcessor receiveMessage:]
CATIDSServiceConnectionMessageProcessor.m
sessionUUID
clientUserInfo
pendingRemoteTaskUUIDs
serverUserInfo
v16@?0@"<CATSharingFailureEvent>"8
v24@?0@"<CATSharingDeviceSession>"8Q16
v12@?0B8
CATDeviceSessionBackedDevicePairingTerminal.m
Stable identifier was fetched, but no completions were set.
CATSocket.m
%@ cannot call %@ when already connected.
%@ cannot call %@ when already invalidated.
endPoint
CATSharingDeviceDiscovery.m
Device is not present in nearbyDevices
Terminal must not be invalidated
v16@?0@"CATSharingDevice"8
CATState.m
<%@: %p { name = %@ }>
triggeringEvent
%@ cannot add duplicate transition for %@
CATStateMachine.m
<%@: %p>
%@ cannot be deallocated because of '%@'
<%@: %p { name = %@, currentState = %@ }>
%@ cannot call %@ when currentState is %@
%@ cannot add a duplicate state name (%@) to state machine.
%@ couldn't get a state for %@
%@ cannot call %@ when initialState is nil
%@ has already started. %@ cannot be called twice.
%@ has not been started. The state machine should not receive events before it has started
%@ cannot transition from %@ with %@
%@ cannot call %@ with event '%@' because the receiver is already '%@'
Calling Exit Action
Calling Transition Action
trigger
Code
Domain
UserInfo
Invalidated
CATTaskClient.m
CATTaskLogLevel
Disconnected
Connecting
Negotiating
Connected
Invalidating
didPrepareTaskOperation:
sendMessage:
connectWithTransport:
connectWithTransportFromTaskClient:
invalidateWithError:
transportDidResume:
transportDidInvalidate:
sessionResumedWithTaskUUIDs:
processTaskMessage:
processNotificationMessage:
sessionDidInvalidate
<%@: %p { state = %@, session = %@, transport = %@ }>
<%@: %p { state = %@, session = %@ }>
otherClient
%@ cannot call %@ when the other client is the receiver
%@: Can't capture transport when one doesn't exist
transport
%@ cannot call %@ with %@ when there is no transport
kCATErrorMessageNameKey
CATTaskMessage.m
<%@: %p { messageUUID = '%@', taskUUID = '%@' }>
<%@: %p> identifier: %@, modelIdentifier: %@, RSSI: %@, paired: %@, pairingState: %@, detectionTime: %@
Unknown
Not Paired
Probably Paired
Paired
Unknown pairingState: %@
CATIDSServiceConnectionTerminal.m
sourceAppleID
Catalyst.IDSServiceConnection.%@
v32@?0@"NSDictionary"8@"NSString"16@"NSString"24
v24@?0@"<CATIDSSubscription>"8@"NSError"16
-[CATIDSServiceConnectionTerminal processMessage:senderAppleID:senderAddress:]_block_invoke_2
<%@: %p { sourceAppleID = %@ }>
CATTaskMessageError.m
taskError
totalUnitCount
progress
CATTaskMessageStart.m
CATTaskOperation.m
kCATInvalidParameterErrorKey
cat_assertions
CATTaskProgress.m
uuid
%@ cannot call %@ because it is not allowed
%@: resultObject (%@) is not accepted class %@
Succeeded
Failed
Not Finished
UUID
phase
isCancelable
isCanceled
requestClassName
resultObject
finished
finished, error = %@
state = %@
{ UUID = %@, %@ }
<%@: %p { UUID = %@, state = %@, error = %@ }>
NSMutable
CATMutable
requestClass
handlesNotifications
<%@: %p { connectionIdentifier = %@, destinationAppleID = %@ , userInfo = %@ }>
-[CATIDSServiceConnectionMetadata isEqual:]
CATIDSServiceConnectionMetadata.m
SequenceNumbers
B16@?0@"CATIDSServiceConnectionInvitationRequest"8
v16@?0@"CATIDSServiceConnectionInvitationRequest"8
CATTaskServer.m
Running
connectWithClientTransport:
allSessionsDidInvalidate
%@ cannot call %@ when it has not created a strong reference to self
kCATErrorRequestNameKey
%@.%p.orphaned
Error
v24@?0Q8^B16
_CATTaskSessionUUID
_CATTaskSessionClientUserInfo
CATTaskSession.m
connectWithTransportFromTaskSession:
clientDidResumeWithMessage:
acceptConnection
rejectConnection
%@.%p.delegation
otherSession
%@ cannot call %@ when the other session is the receiver
%@ cannot call %@ when there is no transport
%@ cannot call %@ when previous session has not been popped
_CATTaskSessionOperationRemoteUUID
CATTransition.m
<%@: %p { action = %@, state = %@ }>
CATIDSServiceConnectionMessageQueue.m
Attempted to enqueue data to send of lenght 0
%@-FlushTimer
v24@?0@"<CATResettableTimer>"8Q16
ConnectionIdenfitier
CATSerialOperationEnqueuerObservationContext
-[CATSerialOperationEnqueuer observeValueForKeyPath:ofObject:change:context:]
CATSerialOperationEnqueuer.m
CATTransport.m
%@.%p.control
%@.%p.messages
CATTransportLogLevel
Not Connected (Suspended)
Connecting (Suspended)
Connected (Suspended)
resume
invalidate
suspend
didReceiveMessage:
didInterruptWithError:
didInvalidate
<%@: %p { name = %@, state = %@ }>
<%@: %p { state = %@ }>
Control Queue:%@
Message Queue:%@
Receive Message
Resume Connection
Resume Queue
Resume Queue and Connection
Send Message
Delegate Did Send Message
Invalid Send
Invalidate Connection
Delegate Did Invalidate
Finalize Transport
%@ must override %@
Delegate Did Connect
Delegate Did Receive Message
Delegate Did Interrupt
CATXPCTransport.m
xpcConnection
%@ cannot call %@ when underlying connection has not been torn down.
CATSharingBroadcastTerminal.m
v16@?0@"NSString"8
yyyy-MM-dd'T'HH:mm:ss.SSSZZZ
yyyy-MM-dd'T'HH:mm:ssZZZ
yyyy-MM-dd'T'HH:mm:ss
en_US_POSIX
NSDictionary+ChangeDictionary.m
This is not a KVO change dictionary
Unexpected change type from a KVO'd collection
Catalyst.error
An unknown error occurred.
CATErrors
A parameter was invalid.
The operation timed out.
The remote connection has been closed.
Receiving data failed.
Sending data failed.
The remote connection has been closed by the peer.
The remote connection could not create streams.
The connection timed out.
Unable to establish secure connection.
Failed to configure secure settings on connection.
Transport has been invalidated.
Transport could not connect.
Unable to parse message.
Malformed message.
Unexpected message.
An unknown service request (%@).
The operation is no longer available.
There was a problem serializing the request.
Failed to create operation for request (%@).
The operation was canceled.
Invalid task client.
Server session invalidated.
Client session invalidated.
The connection was rejected.
The client's transport was captured.
The connection timed out waiting to hear from the remote.
The connection timed out waiting to receive the next segment in a full data send.
The connection recieved an out of order data segment.
The connection was closed by the other side of the connection.
The connection is no longer able to communicate with the remote.
Terminal interrupted.
Terminal invalidated.
Terminal invalidated by vending paired connection.
The underlying session was closed.
Pairing terminal invalidated by caller.
Device session is not paired.
Pairing terminal is invalid.
Pairing verification is already in progress.
Verification is required to begin pairing.
Pairing is already in progress.
%@%@: %p
%@Desc   : %@
%@Sugg   : %@
%@US Desc: %@
NSRecoverySuggestion
%@US Sugg: %@
%@Domain : %@
%@Code   : %@
%@...Underlying error:
%@Extra info:
0x%lX (%ld)
 [sys = 0x%1$lX, sub = 0x%2$lX, code = 0x%3$lX (%3$ld)]
NSKeyedUnarchiver+SecureCoding.m
aClass
classes
InvitationIdentifier
SharingMessageType
SharingMessageContent
v28@?0@"CATDispatchTimer"8Q16B24
B32@?0@"NSString"8Q16^B24
-%lu
%@ is missing entry for %@
Found acknowledge for unexpected invitation %{public}@ with connection identifier %{public}@.
Found mismatch connection identifier for invitation %{public}@. Received %{public}@ but expected %{public}@
There was an error reading %@: %@
Unknown message type: %{public}@
Unable to decode message: %{public}@
Error sending close message: %{public}@
%{public}@ failed to initialize, data is missing from %{public}@
deviceSession: %{public}@ is not ready, refusing to send it messages.
Error sending message: %{public}@
Message was unable to be parsed as %{public}@
%{public}@: Error sending close message: %{public}@
trust result: %@
%@ dropping notification '%@', either the client didn't expect it, or it wasn't whitelisted
%{public}@ received data number %lu
%{public}@ missing sequence numbers. Requesting retransmission of %{public}@
%{public}@ sending acknowledge to remote
%{public}@ closed by the remote. Error: %{public}@
%{public}@ attempting to retransmit the world
%{public}@ attempting to retransmit %{public}@
%{public}@ received request to compute missing sequence numbers with expected sequence number %lu
%{public}@ requesting remote computes missing data.
%{public}@ timed out waiting to hear anything from the remote. Aggregator: %{public}@
%{public}@ sending keepalive to remote
%{public}@ Failed to send IDS message %{public}@ from. Error: %{public}@
Already invalidated upon reaching %{public}@, quietly returning
Device Session %{public}@ invalidated
Device Session %{public}@ encountered error: %{public}@, invalidating
Device Session %{public}@ ready
%@ failed accepting from socket (%d): %s (%i)
%{public}@ %{public}@
%@ starting...
%@ transitioning from "%@" to "%@" because %@
%@ leaving %@
%@ invoking action for %@
%@ entering %@
%@ invoking exit action (%@) for %@
%@ invoking enter action (%@) for %@
%{public}@ resuming
%{public}@ failed to begin listeneing for IDS messages. Error: %{public}@.
%{public}@ suspending
%{public}@ inviting appleID %{public}@ with userInfo %{public}@
%{public}@ canceling invitation with identifier %{public}@
%{public}@ canceling all invitations
%{public}@ failed to send IDS message %{public}@ to address %{public}@. Error: %{public}@
%@: %@
Found unexpected accept for invitation %{public}@ from %{public}@ with connection %{public}@
Found unexpected rejection for invitation %{public}@ from %{public}@
Dropping message (%@) because delegate (%@) does not implement %@
%{public}@ failed to send message %{public}@: %{public}@
%{public}@ failed to send data contents: %{public}@
%{public}@ is unable to decode contentDictionary from parent: %{public}@.
CATAddress
CATIDSAdditions
CATIDSMessageMetadata
CATDictionaryCodable
CATArbitrator
_CATArbitratorRegistrationEntry
_CATArbitratorResourceProxy
CATArbitratorProxy
NSObject
_CATArbitratorWaitToken
_CATProxyWaitToken
CATAdditions
CATBatchRemoteTaskOperation
CATBlockOperationObserver
CATOperationObserver
CATCollectionController
CATIDSServiceConnectionInvitationInbox
CATIDSMessageOptions
NSCopying
NSSecureCoding
NSCoding
CATIDSServiceConnectionDataAggregation
CATEndPoint
CATHTTPMessageParser
CATConcreteIDSServiceConnectionDataAggregator
CATIDSServiceConnectionDataAggregationDelegate
CATIDSServiceConnectionDataAggregator
CATSendDeviceSessionMessageOperation
CATLocalizationHelper
CATIDSMessagePayload
CATActiveIDSServiceConnectionContentSendData
CATActiveIDSServiceConnectionMessageContent
CATIDSServiceConnectionCapabilities
CATActiveServiceConnectionIDSMessage
CATIDSMessage
CATMessage
CATSharingBroadcastConnection
CATSharingConnection
CATSharingCloseMessage
CATSharingContentMessage
Internal
CATNetworkReachability
CATSharingSentMessage
CATInitializingIDSServiceConnectionContentAccept
CATInitializingIDSServiceConnectionMessageContent
CATNotificationMessage
CATOperation
_CATObserverManager
_CATOperationTargetSelectorObserver
CATOperationQueue
CATSharingDeviceSessionConnection
CATIDSServiceTransport
CATIDSServiceConnectionDelegate
_CATIDSServiceTransportSendMessageOperation
CATActiveIDSServiceConnectionContentRequestMissingData
CATProperty
CATRemoteConnection
CATHTTPMessageParserDelegate
NSStreamDelegate
_CATRemoteConnectionSendDataContext
_CATRemoteConnectionSendContext
_CATRemoteConnectionSendDataWithStreamContext
CATRemoteConnectionSocketOptions
CATRemoteConnectionTrustDecision
CATRemoteTaskOperation
CATRemoteTransport
CATRemoteConnectionDelegate
_CATRemoteTransportSendMessageOperation
CATSerialOperationQueue
CATIDSServiceConnection
CATIDSServiceConnectionDataAggregatorDelegate
CATIDSServiceConnectionMessageProcessorDelegate
CATIDSMessageBroadcastHandler
CATIDSServiceConnectionDataMessageQueueDelegate
CATSessionMessage
CATSessionMessageDidInvalidate
CATIDSServiceConnectionInvitationRequest
CATSendSerialIDSMessagesOperation
CATSessionMessageInvalidate
CATIDSServiceConnectionMessageProcessor
CATSessionMessageResume
CATSessionMessageResumed
CATDeviceSessionBackedDevicePairingTerminal
CATSharingDevicePairingTerminal
CATSharingSemaphoreOperation
CATSocket
CATSharingDeviceDiscovery
CATState
CATStateMachine
CATStateMachineEvent
CATBoxing
CATConcreteIDSServiceConnectionDataChunker
CATIDSServiceConnectionDataChunker
CATTaskBlockServer
CATTaskServerDelegate
_CATBlockTaskOperation
_CATLongRunningTaskOperation
CATActiveIDSServiceConnectionContentAcknowledge
CATTaskClient
CATTransportDelegate
CATTaskMessage
CATSharingDevice
CATTaskMessageCancel
CATIDSServiceConnectionTerminal
CATIDSServiceConnectionInvitationInboxDelegate
CATIDSServiceConnectionInvitationOutboxDelegate
CATIDSMessageBroadcaster
CATTaskMessageError
CATSendBroadcastMessageOperation
CATTaskMessageFetchProgress
CATTaskMessageIncrementalProgress
CATTaskMessageProgressUpdate
CATTaskMessageStart
CATTaskOperation
CATSharingServiceTransport
CATSharingConnectionDelegate
Assertion
NSMutableCopying
CATTaskProgress
CATMutableTaskProgress
CATTaskRequest
CATDispatchTimer
CATResettableTimer
CATTimer
CATActiveIDSServiceConnectionContentKeepAlive
CATTaskResultObject
CATIDSServiceConnectionMetadata
CATActiveIDSServiceConnectionContentRetransmit
CATIDSServiceConnectionInvitationOutbox
CATTaskServer
CATTaskSessionDelegate
CATActiveIDSServiceConnectionContentClose
NSFastEnumeration
CATTaskSession
CATTaskOperationNotificationDelegate
CATTransition
CATIDSServiceConnectionConfiguration
CATConcreteIDSServiceConnectionDataMessageQueue
CATIDSServiceConnectionDataMessageQueue
CATInitializingIDSServiceConnectionContentReject
CATInitializingIDSServiceConnectionContentAcknowledge
CATSerialOperationEnqueuer
CATIDSServiceConnectionInvitation
CATTransport
_CATTransportDidSendMessageOperation
CATSharingServiceTransportSendMessageOperation
_CATXPCBoostAssertion
CATXPCInterface
CATXPCTransport
_CATXPCTransportSendMessageOperation
CATCasting
CATSharingBroadcastTerminal
CATInternetDateAndTime
CATChangeDictionary
_CATErrorBundleHelper
CATVerboseDescription
CATSecureCoding
CATInitializingServiceConnectionIDSMessage
CATSharingMessage
CATInitializingIDSServiceConnectionContentInvite
CATConcreteTimerSource
CATTimerSource
CATShifting
CATTXTRecord
CATSharingFatalError
CATSharingFailureEvent
CATSharingBenignError
CATBlocks
length
bytes
data
setLength:
mutableBytes
initWithUTF8String:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
dataWithBytes:length:
initWithData:
UTF8String
init
dataWithData:
isAny
description
address
stringWithFormat:
isLocalWiFi
hash
isEqualToAddress:
localWiFi
initWithString:
isEqual:
.cxx_destruct
_address
_data
T@"NSData",R,N,V_data
T@"NSString",R,N,V_address
TB,R,N,GisAny
TB,R,N,GisLocalWiFi
objectForKeyedSubscript:
initWithUUIDString:
cat_uuidForKey:
UUID
initWithMessageIdentifier:messageType:messagingVersion:
messageIdentifier
UUIDString
messageType
numberWithInteger:
messagingVersion
numberWithUnsignedInteger:
dictionaryWithObjects:forKeys:count:
integerValue
unsignedIntegerValue
instanceWithDictionary:
dictionaryValue
T@"NSDictionary",R,C,N
initWithMessageType:
_messageIdentifier
_messageType
_messagingVersion
T@"NSUUID",R,N,V_messageIdentifier
Tq,R,N,V_messageType
TQ,R,N,V_messagingVersion
debugDescription
arrayWithObjects:count:
resourcesForKeys:exclusive:
count
copy
countByEnumeratingWithState:objects:count:
allValues
invalidate
makeObjectsPerformSelector:
removeAllObjects
makeResourceProxyIfPossible:
setObject:forKeyedSubscript:
initWithDelegateQueue:completionBlock:
waitForRegistrationEntry:forKey:exclusive:
resume
cancel
registerResource:forKey:maxConcurrentCount:
initWithResource:maxConcurrentCount:
removeObjectForKey:
currentCount
resourceForKey:exclusive:
waitForResourcesForKeys:exclusive:delegateQueue:completionBlock:
stopWaiting:
registerResource:forKey:
unregisterResourceForKey:
mRegistrationByKey
servicePendingWaitTokens
makeResourceProxyIfPossibleWithoutLocking:
initWithExclusive:group:
addObject:
pendingWaitsNeedServicing
isExclusive
firstObject
removeObjectAtIndex:
notifyWithResourceProxy:
initWithResource:registration:exclusive:
waitForResourceWithExclusive:group:
resourceProxyDidInvalidate:
mResource
mMaxConcurrentCount
mPendingWaits
mPendingWaitsSource
mPendingWaitsQueue
_currentCount
TQ,R,N,V_currentCount
dealloc
methodSignatureForSelector:
setTarget:
invoke
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
TQ,R
T#,R
T@"NSString",R,C
forwardingTargetForSelector:
forwardInvocation:
mRegistration
_isExclusive
TB,R,N,V_isExclusive
performCompletionBlock
whenStateIs:atomicallySwapWith:
resourceProxy
enumerateKeysAndObjectsUsingBlock:
mState
mTokenByKey
mDelegateQueue
mGroup
mCompletionBlock
mFinished
_resourceProxy
T@,R,N,V_resourceProxy
indexOfObjectPassingTest:
cat_removeFirstObjectMatching:
cat_popFirstObject
prepareTaskOperationForRequest:
initWithRemoteTaskOperations:
setName:
cancelSubOperations
performSelectorOnMainThread:withObject:waitUntilDone:
setTotalUnitCount:
setCompletedUnitCount:
endOperationWithResultObject:
remoteTaskDidFinish:
addTarget:selector:forOperationEvents:
addOperation:
completedUnitCount
initWithTarget:selector:object:
initWithTaskClient:requests:
isAsynchronous
remoteTaskOperations
main
mRemoteTasks
mQueue
T@"NSArray",R,C,N
didStart
invokeBlock:operation:
didProgress
didFinish
operationDidStart:
operationDidProgress:
operationDidFinish:
setDelegateQueue:
delegateQueue
setDidStart:
setDidProgress:
setDidFinish:
_delegateQueue
_didStart
_didProgress
_didFinish
T@"NSObject<OS_dispatch_queue>",&,N,V_delegateQueue
T@?,C,N,V_didStart
T@?,C,N,V_didProgress
T@?,C,N,V_didFinish
updateKeysAffectingArrangementForceUpdate:includeAllContent:
isEqualToArray:
isEqualToIndexSet:
delegate
controllerDidChangeSelectionIndexes:
selectionIndexes
arrangedObjects
objectsAtIndexes:
array
setDelegate:
unbindContent
objectAtIndex:
cat_performBlockOnMainRunLoop:
indexOfObject:
bindContentToObject:withKeyPath:usingTransformer:
addObserver:forKeyPath:options:context:
removeObserver:forKeyPath:
removeObserversFromObject:forKeyPaths:
setArrangedObjects:
cat_calculateAddedObjects
cat_calculateRemovedObjects
transformedValue:
removeObject:
enumerateObjectsUsingBlock:
changeContent:
scheduleRearrangeTimerIfNeed
observeValueForKeyPath:ofObject:change:context:
containsObject:
addObserversToObject:forKeyPaths:
arrangeObject:
changeObject:atIndex:forChangeType:newIndex:
filterPredicate
evaluateWithObject:
mutableCopy
newIndexForObject:inArrangedObjects:
sortDescriptors
valueForKeyPath:
compareObject:toObject:
compare:
indexOfObject:inSortedRange:options:usingComparator:
rearrangeTimerDidFire:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
automaticallyRearrangesObjects
addObjectsFromArray:
null
setWithSet:
setWithArray:
isEqualToSet:
minusSet:
initWithIndexSet:
notifyArrangedObjectsWillChange
willChangeValueForKey:
didChangeValueForKey:
notifyArrangedObjectsDidChangeWithPreviousArrangedObjects:
controllerWillChangeContent:
controller:willChangeObject:atIndex:forChangeType:newIndex:
controllerDidChangeContent:
controller:didChangeObject:atIndex:forChangeType:newIndex:
shiftIndexesStartingAtIndex:by:
insertObject:atIndex:
cat_moveIndex:toIndex:
cat_shiftAndRemoveIndex:
setAutomaticallyRearrangesObjects:
setSortDescriptors:
setFilterPredicate:
setSelectionIndexes:
selectedObjects
content
initWithObjects:
numberOfArrangedObjects
arrangedObjectAtIndex:
arrangedObjectsAtIndexes:
resolveArrangedObjectsAtIndexes:reply:
arrangedIndexOfObject:
bindContentToObject:withKeyPath:
rearrangeObjects
updateObject:
mPendingArrangedObjects
mPendingInsertedObjects
mPendingDeletedObjects
mContent
mTarget
mKeyPath
mChangingSelection
mDelegateKnowsContentIsChanging
mKeysAffectingArrangement
mObjectsToRearrange
mRearrangeTimer
mTransformer
mOriginalObjects
_automaticallyRearrangesObjects
_delegate
_sortDescriptors
_filterPredicate
_selectionIndexes
_arrangedObjects
T@"NSArray",&,V_arrangedObjects
T@"<CATCollectionControllerDelegate>",W,V_delegate
T@"NSArray",C,V_sortDescriptors
T@"NSPredicate",&,V_filterPredicate
T@"NSIndexSet",C,V_selectionIndexes
TB,V_automaticallyRearrangesObjects
T@"NSSet",R,N
T@"NSArray",R
assertNetworkPowerOn
initWithSenderAppleID:senderAddress:networkPowerAssertion:messagingVersion:userInfo:
connectionIdentifier
connectionInvitationInbox:rejectedInvitation:connectionIdentifier:appleID:address:error:
acknowledgeTimerIdentifier
acknowledgeTimerFiredWithInvitationIdentifier:
scheduleOneShotTimerWithIdentifier:timeInterval:queue:fireHandler:
connectionInvitationInbox:wantsToAcceptInvitation:connectionIdentifier:destinationAddress:
connectionInvitationInbox:shouldConnectToAppleID:connectionIdentifier:userInfo:responseHandler:
senderAppleID
senderAddress
networkPowerAssertion
userInfo
connectionInvitationInbox:foundConection:senderAppleID:senderAddress:networkPowerAssertion:messagingVersion:userInfo:
connectionInvitatioInbox:timeoutOutForInvitation:connectionIdentifier:senderAppleID:userInfo:
initWithTimerSource:networkPowerPrimitives:workQueue:acknowledgeTimeout:
receiveInvitationWithIdentifier:senderAppleID:senderAddress:messagingVersion:userInfo:
receiveAcknowledgeForInvitationIdentifier:connectionIdentifier:
mTimerSource
mNetworkPowerPrimitives
mWorkQueue
mAcknowledgeTimeout
mInvitationsByInvitationID
mAcknowledgeTimersByInvitationID
T@"<CATIDSServiceConnectionInvitationInboxDelegate>",W,N,V_delegate
shouldFireAndForget
numberWithBool:
encodeObject:forKey:
decodeObjectOfClass:forKey:
boolValue
allocWithZone:
setFireAndForget:
supportsSecureCoding
copyWithZone:
encodeWithCoder:
initWithCoder:
TB,R
_fireAndForget
fireAndForget
TB,N,GshouldFireAndForget,V_fireAndForget
objectForKey:
cat_containsKey:
hydrateWithContentIfNeededWithContent:
segmentNumber
dataNumber
setDataNumber:
dataSegment
finishAggregating
appendData:
setTotalData:
dataAggregationCompleted:
hydratePendingNumbersWithContent:
hydrateStartingSequenceNumber:
totalSegments
initWithCapacity:
sequenceNumber
sortDescriptorWithKey:ascending:
sortedArrayUsingDescriptors:
numberWithUnsignedLong:
cat_map:
componentsJoinedByString:
pendingSequenceNumbersDescription
initWithWorkQueue:
updateWithDataContent:
totalData
mDataSegmentsBySegmentNumber
mPendingSegmentNumbers
mStartingSequenceNumber
mTotalSegments
mPerformedInitialHydration
_dataNumber
_totalData
TQ,N,V_dataNumber
T@"NSData",C,N,V_totalData
T@"<CATIDSServiceConnectionDataAggregationDelegate>",W,N,V_delegate
port
isEqualToEndPoint:
initWithAddress:port:
_port
T@"CATAddress",R,N,V_address
TI,R,N,V_port
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
dictionaryWithDictionary:
errorWithDomain:code:userInfo:
isEqualToString:
delegateDidReceiveRequestWithURL:
subdataWithRange:
delegateDidReceiveRequestData:
appendBytes:length:
delegateDidReceiveResponseData:moreComing:
URLWithString:
messageParser:didParseRequestData:
messageParser:didParseResponseData:moreComing:
messageParser:didParseRequestWithURL:
encodeRequestData:
responseHeaderForContentWithLength:
mCurrentMessage
mCurrentHeaderFields
mCurrentBytesReceived
T@"<CATHTTPMessageParserDelegate>",W,N,V_delegate
indexSetWithIndexesInRange:
removeIndexes:
cat_arrayFromIndexSet:
updateMissingContentTrackingForDataContent:
processNewDataWindowWithContent:
updateExistingDataWindowWithContent:
connectionDataAggregatorWantsToReportSequenceNumber:
missingSequenceNumbers
connectionDataAggregator:isMissingSequenceNumbers:
addIndex:
containsIndex:
removeIndex:
missingContentTimerIdentifier
missingContentTimerDidFire:fireCount:
scheduleInfiniteTimerWithIdentifier:timeInterval:queue:fireHandler:
connectionDataAggregator:aggregatedData:withNumber:
receiveDataContent:
receiveExpectedSequenceNumber:
receivedSequenceNumber
T@"<CATIDSServiceConnectionDataAggregatorDelegate>",W,N
TQ,R,N
initWithWorkQueue:timerSource:missingItemInterval:supportsSequenceCorrection:
mMissingItemInterval
mSupportsSequenceCorrection
mAggregationsByDataNumber
mNextDeploymentNumber
mNextExpectedSequenceNumber
mGreatestExpectedSequenceNumber
mPendingSequenceNumbers
mMissingContentTimer
T@"<CATIDSServiceConnectionDataAggregatorDelegate>",W,N,V_delegate
sendMessage
isCancelled
endOperationWithError:
sendMessage:
initWithDeviceSession:message:
mDeviceSession
mMessage
helperForBundle:
stringsForKey:value:table:
cat_localizedStringsForKey:value:table:
weakToStrongObjectsMapTable
lock
initWithBundle:
setObject:forKey:
unlock
bundleForClass:
URLForResource:withExtension:subdirectory:localization:
initWithContentsOfURL:options:error:
propertyListWithData:options:format:error:
verboseDescription
stringByKeyForTableName:
localizedStringForKey:value:table:
bundle
mStringByKeyByTableName
mLock
_bundle
T@"NSBundle",R,W,N,V_bundle
initWithFormat:arguments:
initWithMetadata:message:
metadata
messageContent
message
initWithMessage:
_metadata
_message
T@"CATIDSMessageMetadata",R,N,V_metadata
T@"<CATIDSMessage>",R,N,V_message
initWithSequenceNumber:dataNumber:dataSegment:segmentRange:segmentNumber:totalSegments:
contentType
Tq,R,N
mSegmentRange
mUnderlyingDataSegment
_sequenceNumber
_segmentNumber
_totalSegments
T@"NSNumber",R,N,V_sequenceNumber
TQ,R,N,V_dataNumber
TQ,R,N,V_segmentNumber
TQ,R,N,V_totalSegments
T@"NSData",R,C,N
initWithMessagingVersion:
supportsReliableDelivery
_supportsReliableDelivery
TB,R,N,V_supportsReliableDelivery
initWithConnectionIdentifier:receivedSequenceNumber:content:
_connectionIdentifier
_receivedSequenceNumber
_content
T@"NSUUID",R,N,V_connectionIdentifier
T@"NSNumber",R,N,V_receivedSequenceNumber
T@"<CATActiveIDSServiceConnectionMessageContent>",R,N,V_content
setWithObjects:
decodeObjectOfClasses:forKey:
messageUUID
setMessageUUID:
_messageUUID
T@"NSUUID",&,N,V_messageUUID
addBroadcastPrimitiveHandlers
setUnderlyingQueue:
remoteDevice
_sendData:completion:
_close
isClosed
initWithContent:
initWithContentMessage:
sendMessage:completion:
closeWithError:reportToRemote:
initWithBroadcastPrimitive:message:
error
blockOperationWithBlock:
addDependency:
tombstoneWithError:
sendTearDownMessageWithError:
setClosed:
cancelAllOperations
removeBroadcastPrimitiveHandlers
deactivate
setClosedError:
connectionClosed:
addOperationWithBlock:
setInvalidationHandler:
messageReceived:
setMessageReceivedHandler:
handleUnparsableMessageDictionary:
contentDictionaryValue
handleCloseMessage:
handleSentMessage:
closeError
connection:receivedData:
initWithError:
sendData:completion:
close
closedError
T@"CATSharingDevice",R,N
T@"<CATSharingConnectionDelegate>",W,N
closed
TB,R,N,GisClosed
T@"NSError",R,N
initWithBroadcastPrimitives:timerSource:
mBroadcastPrimitives
mIsClosing
mTombstoneTimer
mOutgoingQueue
mCatalystQueue
_closed
_closedError
TB,N,GisClosed,V_closed
T@"NSError",&,N,V_closedError
T@"<CATSharingConnectionDelegate>",W,N,V_delegate
_closeError
T@"NSError",R,N,V_closeError
cat_assertion
setCat_assertion:
T@,&,N
setWithObject:
flags
isReachableForLocalWiFiWithFlags:
isReachableForNetworkWithFlags:
initWithAddress:
reachabilityWithAddress:
configureCallback
isReachable
getCFRunLoop
reachabilityDidChangeWithFlags:
setFlags:
delegateDidChange
reachabilityDidChange:
keyPathsForValuesAffectingReachable
reachabilityForInternetConnection
reachabilityForLocalWiFi
scheduleInRunLoop:forMode:
removeFromRunLoop:forMode:
mReachabilityRef
_flags
TI,N,V_flags
T@"<CATNetworkReachabilityDelegate>",W,N,V_delegate
reachable
TB,R,N,GisReachable
T@"NSData",R,C,N,V_content
initWithConnectionIdentifier:
initWithName:userInfo:
name
taskUUID
initWithTaskUUID:name:userInfo:
setTaskUUID:
setUserInfo:
_taskUUID
_name
_userInfo
T@"NSUUID",C,N,V_taskUUID
T@"NSString",C,N,V_name
T@"NSDictionary",C,N,V_userInfo
date
initWithOperation:
stateDescription
totalUnitCount
isCanceled
queuePriority
setEnqueuedDate:
setPhase:
isReady
phase
operationWillStart
setStartedDate:
dependencies
removeDependency:
endOperationSuccessfullyIfNeeded
callStackSymbols
finalizeOperation
setResultObject:
setError:
standardUserDefaults
subarrayWithRange:
operationWillFinish
setFinishedDate:
operationDidFinish
addObserver:
addTarget:selector:forOperationEvents:userInfo:delegateQueue:
initWithTarget:selector:events:userInfo:delegateQueue:
automaticallyNotifiesObserversOfUUID
automaticallyNotifiesObserversOfCreatedDate
automaticallyNotifiesObserversOfEnqueuedDate
automaticallyNotifiesObserversOfStartedDate
automaticallyNotifiesObserversOfFinishedDate
isCancelable
keyPathsForValuesAffectingIsCanceled
isExecuting
isFinished
start
operationWillEnqueueOntoOperationQueue:
addTarget:selector:forOperationEvents:userInfo:
addTarget:selector:forOperationEvents:delegateQueue:
setUUID:
createdDate
setCreatedDate:
enqueuedDate
startedDate
finishedDate
resultObject
canCancel
mCallStackSymbols
mObserverManager
_canCancel
_UUID
_createdDate
_enqueuedDate
_startedDate
_finishedDate
_phase
_error
_resultObject
_completedUnitCount
_totalUnitCount
T@"NSUUID",&,V_UUID
TQ,V_phase
T@"NSDate",&,V_createdDate
T@"NSDate",&,V_enqueuedDate
T@"NSDate",&,V_startedDate
T@"NSDate",&,V_finishedDate
T@"NSError",&,V_error
T@"NSDictionary",&,V_userInfo
T@,&,V_resultObject
Tq,V_completedUnitCount
Tq,V_totalUnitCount
TB,R,V_canCancel
notifyObserversOperationDidProgress:
events
allObjects
removeObserver:forKeyPath:context:
removeObserver:
mObservers
mProgressSource
mOperation
mStrongOperation
mIsObserving
invokeActionWithOperation:
target
selector
invocationWithMethodSignature:
setSelector:
numberOfArguments
setArgument:atIndex:
_target
_selector
_events
T@,R,N,V_target
T:,R,N,V_selector
TQ,R,N,V_events
T@,R,N,V_userInfo
T@"NSObject<OS_dispatch_queue>",R,N,V_delegateQueue
backgroundQueue
isSuspended
operationCount
maxConcurrentOperationCount
startObserving:
delegateWillAddOperation:
waitUntilFinished
delegateOperationDidFinish:
stopObserving:
operationQueue:operationDidFinish:
operationQueue:willAddOperation:
currentQueue
mainQueue
addOperations:waitUntilFinished:
T@"<CATOperationQueueDelegate>",W,N,V_delegate
addDeviceSessionHandlers
removeDeviceSessionHandlers
setDeviceSessionInvalidatedHandler:
setDeviceSessionErrorHandler:
didReceiveMessage:
initWithDeviceSession:timerSource:
didInterruptWithError:
serviceReceiveQueue
tryReportingInvalidation
initWithConnection:message:
destinationAppleID
cat_unarchiveObjectOfClass:withData:error:
didInvalidate
initWithConnection:
resumeConnection
suspendConnection
invalidateConnection
operationToSendMessage:
mConnection
mReceiveQueue
mIsActive
mDidDelegateInvalidation
sendData
cat_archivedDataWithRootObject:
didSendDataWithError:
mTransport
expectedSequenceNumber
initWithExpectedSequenceNumber:
_expectedSequenceNumber
TQ,R,N,V_expectedSequenceNumber
initWithName:attributes:
localizedStandardCompare:
sortDescriptorWithKey:ascending:selector:
initialize
propertiesForClass:
propertiesForProtocol:
instanceVariableName
type
objectClass
isReadOnly
isNonAtomic
association
customGetterSelector
customSetterSelector
isWeakReference
_readOnly
_nonAtomic
_weakReference
_instanceVariableName
_type
_objectClass
_association
_customGetterSelector
_customSetterSelector
T@"NSString",R,C,N,V_name
T@"NSString",R,C,N,V_instanceVariableName
Tq,R,N,V_type
T#,R,N,V_objectClass
readOnly
TB,R,N,GisReadOnly,V_readOnly
nonAtomic
TB,R,N,GisNonAtomic,V_nonAtomic
Tq,R,N,V_association
T:,R,N,V_customGetterSelector
T:,R,N,V_customSetterSelector
weakReference
TB,R,N,GisWeakReference,V_weakReference
inputStream
propertyForKey:
createConnectionPairWithConnection:andConnection:bufferSize:
getBoundStreamsWithBufferSize:inputStream:outputStream:
initWithInputStream:outputStream:bufferSize:
getInputStream:outputStream:
initWithInputStream:outputStream:
setSuspended:
initWithData:userInfo:
enqueueSendContext:
bufferSize
initWithStream:length:bufferSize:userInfo:
secureUsingIdentity:trustedCertificates:isServer:
connectionDidInterruptWithError:
streamError
outputStream
socketOptions
adaptiveWriteTimeout
setProperty:forKey:
streamStatus
open
connectionTimeoutInterval
connectionTimedOut
unscheduleStreams
setInputStream:
setOutputStream:
sendDidFail:withError:
delegateDidClose
hasBytesAvailable
hasSpaceAvailable
addEntriesFromDictionary:
numberWithInt:
setUsesSSL:
usesSSL
delegateWillSecure
applyCustomEvaluationPoliciesToTrust:
numberWithUnsignedInt:
delegateDidSecure
initWithConnection:trust:
connection:encounteredTrustDecisionWhileTryingToSecure:
customTrustEvaluationPolicies
connectionShouldSendData
connectionDidReceiveData
dataWithLength:
keepAliveEnabled
intValue
keepAliveDelay
keepAliveInterval
keepAliveCount
netServiceType
lastObject
trySendingDataWithContext:error:
hasBytesRemaining
removeLastObject
sendDidSucceed:
bufferedDataWithError:
write:maxLength:
bytesWritten
setBytesWritten:
clientBytesWritten
delegateDidWriteDataForContextIfNeeded:
delegateDidSendData:userInfo:
stream
delegateDidSendDataWithStream:userInfo:
delegateDidFailToSendData:userInfo:error:
delegateDidFailToSendDataWithStream:userInfo:error:
read:maxLength:
delegateDidInterruptWithError:
connectionWillSecure:
connectionDidSecure:
connection:didSendData:userInfo:
connection:didFailToSendData:userInfo:error:
connection:didReceiveData:
connection:didReceiveDataRequestWithURL:
dataLength
delegateDidWriteDataFromStream:totalBytesWritten:totalBytesExpectedToWrite:userInfo:
connection:didWriteDataFromStream:totalBytesWritten:totalBytesExpectedToWrite:userInfo:
connection:didSendDataWithStream:userInfo:
connection:didFailToSendDataWithStream:userInfo:error:
connection:didReceiveStreamData:moreComing:
connectionDidOpen:
connectionDidClose:
connection:didInterruptWithError:
delegateDidReceiveData:
delegateDidReceiveStreamData:moreComing:
delegateDidReceiveDataRequestWithURL:
_stream:handleEvent:
configureStreamSocketOptions
delegateDidOpen
tryEvaluatingPeerTrustWithStream:
createConnectionPairWithConnection:andConnection:
stream:handleEvent:
peerTrust
initWithNetService:
sendData:userInfo:
sendDataWithStream:length:userInfo:
secureUsingClientIdentity:trustedCertificates:
secureUsingServerIdentity:trustedCertificates:
scheduleStreams
trustDecisionDidRespondWithDecisionToAllowUntrustedConnection:
setConnectionTimeoutInterval:
setSocketOptions:
setCustomTrustEvaluationPolicies:
setBufferSize:
mMessageParser
mPendingSendContexts
mConnectionTimeoutTimer
mInterruptionError
mReadBuffer
mTrustedCertificates
mPeerTrustState
mStreamEventQueue
_usesSSL
_connectionTimeoutInterval
_socketOptions
_customTrustEvaluationPolicies
_inputStream
_outputStream
_bufferSize
T@"NSInputStream",&,N,V_inputStream
T@"NSOutputStream",&,N,V_outputStream
TB,N,V_usesSSL
TQ,N,V_bufferSize
T@"<CATRemoteConnectionDelegate>",W,N,V_delegate
T^{__SecTrust=},R,N
Td,N,V_connectionTimeoutInterval
T@"CATRemoteConnectionSocketOptions",C,N,V_socketOptions
T@"NSArray",C,N,V_customTrustEvaluationPolicies
headerLength
T@,R,N
TB,R,N
TQ,N
mEncodedData
_bytesWritten
T@"NSData",R,C,N,V_data
TQ,N,V_bytesWritten
replaceBytesInRange:withBytes:
mBuffer
mHeaderData
mBytesRead
_stream
_dataLength
T@"NSInputStream",R,C,N,V_stream
TQ,R,N,V_dataLength
TQ,R,N,V_bufferSize
setAdaptiveWriteTimeout:
setKeepAliveEnabled:
setKeepAliveDelay:
setKeepAliveInterval:
setKeepAliveCount:
setNetServiceType:
_adaptiveWriteTimeout
_keepAliveEnabled
_keepAliveDelay
_keepAliveInterval
_keepAliveCount
_netServiceType
T@"NSNumber",C,N,V_adaptiveWriteTimeout
T@"NSNumber",C,N,V_keepAliveEnabled
T@"NSNumber",C,N,V_keepAliveDelay
T@"NSNumber",C,N,V_keepAliveInterval
T@"NSNumber",C,N,V_keepAliveCount
T@"NSNumber",C,N,V_netServiceType
respondWithDecisionToAllowUntrustedConnection:
trust
mHasResponded
_trust
T@,R,V_trust
initWithRequest:clientError:
initWithRequest:
cancelOperationIfNeeded
initWithTaskUUID:
client
remoteTaskOperation:preparedMessage:
request
initWithTaskUUID:request:
canSendNotificationWithName:userInfo:
notificationDelegate
taskOperation:didPostNotificationWithName:userInfo:
progress
updateProgressWithRemoteProgress:
updateCompletedUnitCount:andTotalUnitCount:
processNotificationWithName:userInfo:
remotePhase
setRemotePhase:
state
invalidRemoteTaskWithRequest:error:
initWithRequest:client:
fetchProgress
postNotificationWithName:userInfo:
processMessage:
clientFailedWithError:
mClientError
_client
_remotePhase
T@"NSNumber",C,N,V_remotePhase
T@"CATTaskClient",R,N,V_client
initWithRemoteConnection:
setTransport:
setMessage:
remoteTransportDelegate
transportWillSecure:
transport:encounteredTrustDecisionWhileTryingToSecure:
transportDidSecure:
didSendData
didFailWithError:
objectEnumerator
createRemoteTransportPairWithTransport:andTransport:
remoteTransportSendMessageOperation:sendData:
setRemoteTransportDelegate:
mOperationByUUID
mConnectionHasOpened
_remoteTransportDelegate
T@"<CATRemoteTransportDelegate>",W,N,V_remoteTransportDelegate
transport
cat_archivedDataWithRootObject:error:
didEncodeData:
_transport
T@"CATRemoteTransport",W,N,V_transport
T@"CATMessage",&,N,V_message
setMaxConcurrentOperationCount:
stringWithString:
appendFormat:
operations
mLastOperation
initWithTargetOperationQueue:
keepAliveTimerIdentifier
keepAliveCheckinInterval
keepAliveAttemptCount
keepAliveTimerDidFire:fireCount:isFinalFire:
scheduleRepeatTimerWithIdentifier:timeInterval:queue:totalFires:fireHandler:
initWithWorkQueue:connectionIdentifier:
initWithMetadata:configuration:IDSPrimitives:messageBroadcaster:timerSource:dataMessageQueue:dataAggregator:networkPowerAssertion:workQueue:delegateQueue:destinationAddress:sourceAppleID:
addBroadcastHandler:
maxDataSendSize
initWithWorkQueue:maxDataLength:
messageQueueFlushPromptInterval
initWithWorkQueue:timerSource:dataChunker:flushPromptInterval:supportsRetransmit:
missingItemsCheckinInterval
connectionWithMetadata:configuration:IDSPrimitives:messageBroadcaster:timerSource:dataMessageQueue:dataAggregator:networkPowerAssertion:workQueue:delegateQueue:destinationAddress:sourceAppleID:
receiveData:completion:
tearDownWithError:shouldReportToRemote:
retransmitContentForSequenceNumbers:
sendContent:
acknowledgeContent
reset
retransmitSequenceNumbers:
receiveRemoteSequenceNumber:
receiveMessage:
requestMissingDataContentWithExpectedSequenceNumber:
cat_forEach:
initWithIDSPrimitives:workQueue:messages:destinationAddress:sourceAppleID:options:
keepAliveContent
sendMessage:toAddress:fromID:options:completion:
closeContentWithError:
initWithSequenceNumbers:
connectionWithMetadata:configuration:capabilities:IDSPrimitives:messageBroadcaster:timerSource:networkPowerAssertion:workQueue:delegateQueue:destinationAddress:sourceAppleID:
messageProcessorWantsToAcknowledgeRemote:
messageProcessorWantsToExtendKeepAlive:
messageProcessor:wantsToCloseWithError:
messageProcessor:wantsAggregation:
messageProcessor:wantsRetransmission:
messageProcessor:receivedExpectedSequence:
messageProcessor:wantsToAckUpTo:
processMessage:senderAppleID:senderAddress:
dataMessageQueue:wantsToCheckRemote:
dataMessageQueue:needsToSendContents:shouldSkipTheLine:completion:
mDestinationAddress
mSourceAppleID
mIDSPrimitives
mNetworkPowerAssertion
mMessageBroadcaster
mDataMessageQueue
mDataAggregator
mSendQueue
mControlOperationEnqueuer
mKeepAliveTimer
mMessageProcessor
mMessageSubscription
T@"<CATIDSServiceConnectionDelegate>",W,N,V_delegate
T@"CATIDSServiceConnectionMetadata",R,N,V_metadata
T@"NSError",C,N,V_error
initWithInvitationIdentifier:appleID:networkPowerAssertion:userInfo:
invitationIdentifier
appleID
_invitationIdentifier
_appleID
_networkPowerAssertion
T@"NSUUID",R,N,V_invitationIdentifier
T@"NSString",R,C,N,V_appleID
T@"<CATCancelable>",R,N,V_networkPowerAssertion
T@"NSDictionary",R,C,N,V_userInfo
sendMessages
didSendMessagesWithError:
mPrimitives
mMessages
mOptions
sequenceNumbers
mConnectionIdentifier
T@"<CATIDSServiceConnectionMessageProcessorDelegate>",W,N,V_delegate
sessionUUID
clientUserInfo
initWithSessionUUID:
setSessionUUID:
setClientUserInfo:
_sessionUUID
_clientUserInfo
T@"NSUUID",C,N,V_sessionUUID
T@"NSDictionary",C,N,V_clientUserInfo
pendingRemoteTaskUUIDs
serverUserInfo
setServerUserInfo:
setPendingRemoteTaskUUIDs:
_serverUserInfo
_pendingRemoteTaskUUIDs
T@"NSDictionary",C,N,V_serverUserInfo
T@"NSArray",C,N,V_pendingRemoteTaskUUIDs
_verifyPairingAndFetchStableIdentifierWithCompletion:
_beginPairing:withCompletion:
_tryPIN:
_invalidate
isInvalidated
addSessionHandlers
activate
failureType
underlyingError
pairingCompleteWithError:
beginPairWithCompletion:
tryPairingPIN:
removeSessionHandlers
invalidateWithError:
deviceSessionInvalidated:
deviceSessionEncounteredError:
deviceSessionReady
setDeviceSessionReadyHandler:
sessionHasPromptedForPINWithWaitTime:
setPinPromptHandler:
verifyPairing
verifyPairingFinished:
verifyPairing:
fetchStableIdentifier
fetchStableIdentifierFinished:
vendConnectionForCompletion:
setInvalidated:
verifyPairingAndFetchStableIdentifierWithCompletion:
beginPairing:withCompletion:
tryPIN:
device
invalidated
TB,R,N,GisInvalidated
initWithDeviceSession:
mVerifyPairingCompletion
mBeginPairingCompletion
mPINPromptHandler
_invalidated
TB,N,GisInvalidated,V_invalidated
signal
nativeSocket
socketDidCancel
socketDidReceiveEvent
populateLocalEndPoint
populateRemoteEndPoint
setNativeSocket:
socketQueue
socketDidConnect
socketDidFailWithError:
socketSource
socketDidReceiveListeningEvent
socketDidReceiveData
acceptPendingConnection
initWithNativeSocket:
userQueue
delegateShouldAcceptNewSocket:
delegateDidConnect
delegateDidFailWithError:
socket:shouldAcceptNewSocket:
socket:didReceiveData:
socketDidClose:
socketDidConnect:
socket:didFailWithError:
listenWithEndPoint:error:
connectToEndPoint:error:
suspend
localEndPoint
remoteEndPoint
mIsInvalid
_nativeSocket
_localEndPoint
_remoteEndPoint
_socketSource
_socketQueue
_userQueue
Ti,N,V_nativeSocket
T@"NSObject<OS_dispatch_source>",R,N,V_socketSource
T@"NSObject<OS_dispatch_queue>",R,N,V_socketQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_userQueue
T@"<CATSocketDelegate>",W,N,V_delegate
T@"CATEndPoint",R,N,V_localEndPoint
T@"CATEndPoint",R,N,V_remoteEndPoint
_activate
_invalidateWithError:
nearbyDevices
sessionForDevice:
addPrimitiveHandlers
deviceDiscovery:didActivateWithError:
activateWithCompletion:
removePrimitiveHandlers
deviceDiscovery:hasInvalidated:
deviceFound:
setDeviceFoundHandler:
deviceLost:
setDeviceLostHandler:
setNearbyDevices:
deviceDiscovery:didLoseDevice:
initWithDiscoveryPrimitives:delegate:delegateOperationQueue:
pairingTerminalForDevice:
mDiscoveryPrimitives
mDelegate
mDelegationQueue
_nearbyDevices
TB,N,V_invalidated
T@"NSArray",C,N,V_nearbyDevices
addTransitionToState:triggeringEvent:action:
initWithState:action:
initWithName:
addTransitionToState:triggeringEvent:
transitionWithTriggeringEvent:
enterAction
setEnterAction:
exitAction
setExitAction:
mTransitionByTriggeringEvent
_enterAction
_exitAction
T:,N,V_enterAction
T:,N,V_exitAction
currentState
initialState
addState:
setInitialState:
setCurrentState:
delegateDidEnterState:event:
logLevel
eventForTriggeringEvent:
trigger
delegateWillExitState:event:
action
invokeAction:event:
eventWithTrigger:context:
context
initWithTarget:
addStateWithName:
stateWithName:
canTransitionWithTriggeringEvent:
setLogLevel:
mStateByName
mCalloutReason
_initialState
_currentState
_logLevel
T@"CATState",&,N,V_currentState
T@"CATState",&,N,V_initialState
T@,R,W,N,V_target
TQ,N,V_logLevel
initWithEventTrigger:context:
_trigger
_context
T@,R,N,V_trigger
T@,R,N,V_context
code
domain
cat_dictionaryValue
cat_errorValue
chunkDataIntoMessageContent:
mMaxDataLength
mNextDataNumber
mNextSequenceNumber
strongToWeakObjectsMapTable
connectWithClientTransport:
disconnectAllClientSessions
initWithBlock:request:
sessionDidInterruptWithError
sessionDidReceiveNotification
sessionDidConnect
sessionDidDisconnect
sessionDidInvalidate
server:clientSession:operationForRequest:error:
server:clientSession:didInterruptWithError:
server:clientSession:shouldConnectWithTransport:
server:clientSession:didReceiveNotificationWithName:userInfo:
server:clientSession:enqueueOperation:
server:clientSessionDidConnect:
server:clientSessionDidDisconnect:
server:clientSessionDidInvalidate:
serverDidInvalidate:
createClientTransport
registerBlock:forRequestClass:
registerLongRunningOperationForRequestClass:
cancelLongRunningOperationsForRequestClass:
clientSessions
setSessionDidConnect:
setSessionDidReceiveNotification:
setSessionDidInterruptWithError:
setSessionDidDisconnect:
setSessionDidInvalidate:
setDidInvalidate:
mServer
mOperationBlocksByRequestClassName
mLongRunningOperationRequestClassNames
mLongRunningOperationsByUUID
_clientSessions
_sessionDidConnect
_sessionDidReceiveNotification
_sessionDidInterruptWithError
_sessionDidDisconnect
_sessionDidInvalidate
_didInvalidate
T@"NSArray",R,C,N,V_clientSessions
T@?,C,N,V_sessionDidConnect
T@?,C,N,V_sessionDidReceiveNotification
T@?,C,N,V_sessionDidInterruptWithError
T@?,C,N,V_sessionDidDisconnect
T@?,C,N,V_sessionDidInvalidate
T@?,C,N,V_didInvalidate
mBlock
mapTableWithKeyOptions:valueOptions:
valueForKey:
abandonTransport
enqueueTaskOperation:
enqueueMessage:
resumeTransport:
resumeCapturedTransportFromTaskClient:
clearQueuedMessagesAndCancelAllOperationsWithError:
abandonTransportClearQueuedMessagesAndCancelAllOperationsWithError:
resumeSession
resumeWithTaskUUIDs:
trackTaskOperation:
sendMessageThroughTransport:
delegateDidDisconnect
delegateWillInvalidateAndInvalidateSessionWithError:
taskOperationDidFailWithInvalidTaskClient:
delegateDidInvalidateAndFinalize
didPrepareTaskOperation:
captureTransport
weakObjectsHashTable
delegateWillInvalidate
makeObjectsPerformSelector:withObject:
delegateDidInvalidate
activeOperationDidFinish:
processSessionMessage:
processNotificationMessage:
processTaskMessage:
sessionResumedWithTaskUUIDs:
taskError
delegatedidReceiveNotificationWithName:userInfo:
client:didReceiveNotificationWithName:userInfo:
clientDidConnect:
client:didInterruptWithError:
clientDidDisconnect:
clientWillInvalidate:
clientDidInvalidate:
transportDidConnect:
transportDidResume:
transport:didSendMessage:
transport:didFailToSendMessage:error:
transport:didReceiveMessage:
transport:didInterruptWithError:
transportDidInvalidate:
connectWithTransport:
connectWithTransportFromTaskClient:
disconnect
mFSM
mActiveRemoteTaskOperations
mRemoteTaskByUUID
mEnqueuedMessages
mEnqueuedTaskUUIDs
mOrphanedTransports
mStrongSelf
mSessionDidInvalidateGroup
mIsStarting
T@"NSUUID",&,N,V_sessionUUID
T@"CATTransport",R,N,VmTransport
T@"<CATTaskClientDelegate>",W,N,V_delegate
isEqualToDevice:
identifier
modelIdentifier
RSSI
isPaired
pairingState
unlocalizedDescriptivePairingStateForPairingState:
detectionTime
initWithIdentifier:modelIdentifier:RSSI:paired:pairingState:detectionTime:
_paired
_identifier
_modelIdentifier
_RSSI
_pairingState
_detectionTime
T@"NSUUID",R,N,V_identifier
T@"NSString",R,C,N,V_modelIdentifier
Tq,R,N,V_RSSI
paired
TB,R,N,GisPaired,V_paired
TQ,R,N,V_pairingState
T@"NSDate",R,N,V_detectionTime
invitationAcknowledgeTimeout
initWithNetworkPowerPrimitives:workQueue:
initWithIDSPrimitives:networkPowerPrimitives:sourceAppleID:connectionConfiguration:
initWithIDSPrimitives:networkPowerPrimitives:timerSource:workQueue:delegateQueue:sourceAppleID:connectionConfiguration:
serviceConnectionTerminalDidResume:
addMessageHandler:completion:
beginInvitationWithIdentifier:appleID:userInfo:
cancelInvitationWithIdentifier:
cancelAllInvitations
initWithConnectionIdentifier:destinationAppleID:userInfo:
serviceConnectionTerminal:shouldEstablishConnection:responseHandler:
sendContent:toAddress:forInvitation:
serviceConnectionTerminal:timedOutOnInvitationWithMetadata:
serviceConnectionTerminal:establishedConnection:
initWithConnectionIdentifier:error:
initWithUserInfo:
addressForAppleID:
serviceConnectionTerminal:receivedRejectionWithMetadata:error:
serviceConnectionTerminal:shouldTrustAppleID:
receiveAcceptForInvitation:connectionIdentifier:senderAddress:messagingVersion:
receiveRejectForInvitation:connectionIdentifier:senderAddress:error:
initWithInvitationIdentifier:content:
connectionInvitationOutbox:wantsToSendInvitation:destinationAppleID:userInfo:
connectionInvitationOutbox:wantsToAcknowledgeInvitation:connectionIdentifier:destinationAddress:
connectionInvitationOutbox:foundConnection:destinationAppleID:destinationAddress:networkPowerAssertion:messagingVersion:userInfo:
connectionInvitationOutbox:receivedARejectionFrom:connectionIdentifier:userInfo:error:
initWithIDSPrimitives:networkPowerPrimitives:sourceAppleID:
inviteAppleIDToConnect:userInfo:
mConnectionConfiguration
mInvitationInbox
mInvitationOutbox
mBroadcastHandlers
T@"<CATIDSServiceConnectionTerminalDelegate>",W,N,V_delegate
initWithTaskUUID:taskError:
setTaskError:
_taskError
T@"NSError",&,N,V_taskError
sendMessageToPairedDevice:
initWithTaskUUID:completedUnitCount:totalUnitCount:
Tq,N,V_completedUnitCount
Tq,N,V_totalUnitCount
initWithTaskUUID:progress:
setProgress:
_progress
T@"CATTaskProgress",C,N,V_progress
setRequest:
_request
T@"CATTaskRequest",&,N,V_request
handlesNotifications
defaultCenter
postNotificationName:object:userInfo:
validateRequest:error:
setNotificationDelegate:
remoteUUID
setRemoteUUID:
_notificationDelegate
_remoteUUID
T@"NSUUID",C,N,V_remoteUUID
T@"CATTaskRequest",R,N,V_request
T@"<CATTaskOperationNotificationDelegate>",W,N,V_notificationDelegate
processReceivedMessages
invalidateIfNeeded
mReceivedMessages
mIsInvalidated
cat_addAssertion:
cat_assertions
initWithOperationUUID:
assertResultObject:isValidForRequestClassName:
classForResultObjectWithRequestClassName:
whitelistedClassForResultObject
requestClassName
progressStateDescription
setIsCancelable:
setIsCanceled:
setRequestClassName:
mutableCopyWithZone:
hasPrefix:
progressForOperation:
_isCancelable
_isCanceled
_requestClassName
T@"NSUUID",C,N,V_UUID
TQ,N,V_phase
T@,&,N,V_resultObject
T@"NSError",&,N,V_error
T@"NSDictionary",&,N,V_userInfo
TB,N,V_isCancelable
TB,N,V_isCanceled
T@"NSString",C,N,V_requestClassName
initWithOperationUUID:requestClass:
TQ,D,N
T@,&,D,N
T@"NSError",&,D,N
T@"NSDictionary",&,D,N
TB,D,N
Tq,D,N
setHandlesNotifications:
_handlesNotifications
TB,N,V_handlesNotifications
initWithIdentifier:workQueue:delegateQueue:timeInterval:totalFires:firesForever:fireHandler:
timerDidFire
scheduledTimerWithIdentifier:workQueue:delegateQueue:timeInterval:totalFires:firesForever:fireHandler:
mIdentifier
mTimeInterval
mTotalFires
mFiresForever
mFireHandler
mFireCount
isEqualToMetadata:
_destinationAppleID
T@"NSString",R,C,N,V_destinationAppleID
_sequenceNumbers
T@"NSArray",R,C,N,V_sequenceNumbers
cancelAllPowerAssertions
serviceInvitationQueue
arrayByAddingObjectsFromArray:
mInFlightInvitationRequestsByInvitationID
mInvitationRequestQueue
T@"<CATIDSServiceConnectionInvitationOutboxDelegate>",W,N,V_delegate
makeSessionWithClientTransport:
startInvalidatingWithError:
setValue:forKey:
allSessionsDidInvalidate
delegateClientSession:shouldConnectWithTransport:
connectWithTransportFromTaskSession:
delegateClientSessionDidConnect:
delegateClientSessionDidDisconnect:
delegateClientSession:didInterruptWithError:
delegateSessionDidInvalidate:
delegateClientSession:didReceiveNotificationWithName:userInfo:
session:prepareOperationForRequest:error:
session:shouldAcceptConnectionFromTransport:
session:didReceiveNotificationWithName:userInfo:
session:didInterruptWithError:
sessionDidConnect:
sessionDidDisconnect:
sessionWillInvalidate:
sessionDidInvalidate:
session:enqueueOperation:
connectedClientSessions
invalidateAllClientSessions
mSessions
mActiveSessionsByUUID
mInvalidatingSessionsByUUID
mConnectedSessionsByUUID
mAllSessionsDidInvalidateGroup
mOrphanedOperationQueue
T@"<CATTaskServerDelegate>",W,N,V_delegate
enumerateIndexesUsingBlock:
cat_flatMapUsingBlock:
strongToStrongObjectsMapTable
resumeCapturedTransportFromTaskSession:
evaluateConnectionWithResumeMessage:
sendResumedMessage
enqueueDelegateDidInterruptWithError:
didCompleteSendForMessage:
localOperationDidFinish:
invocation
retainArguments
delegateEnqueueOperation:
savePreviousSessionInfo
delegateShouldAcceptConnection
discardPreviousSessionInfo
acceptConnection
restorePreviousSessionInfo
rejectConnection
allKeys
clientDidResumeWithMessage:
processStartMessage:
processCancelMessage:
processFetchProgressMessage:
delegatePrepareOperationWithRequest:error:
operationDidIncrementProgress:remoteUUID:
operationDidFinish:remoteUUID:
delegatedidReceiveNotificationWithName:
enqueueOperation:
mOperations
mOperationByRemoteUUID
mPreviousSessionInfo
mRemoteUUIDsByFinishedOperationProgressUpdates
T@"<CATTaskSessionDelegate>",W,N,V_delegate
_state
_action
T@"CATState",R,W,N,V_state
T:,R,N,V_action
setMaxDataSendSize:
setKeepAliveAttemptCount:
setKeepAliveCheckinInterval:
setInvitationAcknowledgeTimeout:
setMissingItemsCheckinInterval:
setMessageQueueFlushPromptInterval:
_maxDataSendSize
_keepAliveAttemptCount
_keepAliveCheckinInterval
_invitationAcknowledgeTimeout
_missingItemsCheckinInterval
_messageQueueFlushPromptInterval
Tq,N,V_maxDataSendSize
TQ,N,V_keepAliveAttemptCount
Td,N,V_keepAliveCheckinInterval
Td,N,V_invitationAcknowledgeTimeout
Td,N,V_missingItemsCheckinInterval
Td,N,V_messageQueueFlushPromptInterval
scheduleFlushTimer
retransmitContent:
flushTimerIdentifier
flushTimerDidFire:fireCount:
T@"<CATIDSServiceConnectionDataMessageQueueDelegate>",W,N
mDataChunker
mFlushPromptInterval
mSupportsRetransmit
mFlushTimer
mHeadSequenceNumber
mTailSequenceNumber
mSendContentsBySequenceNumber
T@"<CATIDSServiceConnectionDataMessageQueueDelegate>",W,N,V_delegate
stopObservingOperation:
enqueueNextOperation
performThreadSafeBlock:
startObservingOperation:
checkIfOperationIsFinished:
mTargetQueue
mCurrentlyExecutingOperation
mPendingOperations
initWithConnectionIdentifier:senderAppleID:senderAddress:networkPowerAssertion:messagingVersion:userInfo:
_senderAppleID
_senderAddress
T@"NSString",R,C,N,V_senderAppleID
T@"NSString",R,C,N,V_senderAddress
sendHelloMessageAndResumeQueue
enqueueSendForMessage:
resumeQueueAndConnection
cancelHelloMessageAndResumeQueueOperations
suspendQueueAndConnection
enqueueDelegateDidConnect
enqueueDelegateCouldNotConnectWithError:
enqueueDelegateDidReceiveMessage:
cancelAndResumeQueuesAndEnqueueInvalidateConnection
invalidSendForMessage:
enqueueDelegateDidInvalidateAndFinalize
delegateDidResume
resumeQueue
suspendQueue
setQueuePriority:
mControlQueue
mMessageQueue
T@"<CATTransportDelegate>",W,N,V_delegate
didSendMessageWithError:
block
setBlock:
_block
T@?,C,N,V_block
auditSessionIdentifier
processIdentifier
effectiveUserIdentifier
effectiveGroupIdentifier
exportedObject
valueForEntitlement:
setUpConnection
tearDownConnection
remoteObjectProxy
processMessage:completion:
didProcessMessage
_setQueue:
interfaceWithProtocol:
setRemoteObjectInterface:
setExportedObject:
setExportedInterface:
setInterruptionHandler:
initWithXPCConnection:
boolValueForEntitlement:
transportSendMessageOperation:processMessage:
mConnectionHasResumed
mConnectionShouldInvalidate
mConnectionHasInvalidated
Ti,R
TI,R
T@"CATXPCTransport",W,N,V_transport
dateWithTimeIntervalSinceReferenceDate:
cat_dateWithInternetTimeString:
cat_numberWithObject:
cat_dateWithObject:
_invalidateWithError:deactivatePrimitives:
setBroadcasting:
broadcastTerminal:didActivateWithError:
broadcastTerminalNeedsToDismissPin:
broadcastTerminal:stoppedWithError:
sessionNeedsToDisplayPin:
setShowPinHandler:
setDismissPinHandler:
sessionHasPaired
setSessionPairedHandler:
broadcastTerminal:needsToDisplayPin:
broadcastTerminal:hasPairedDeviceConnection:
initWithBroadcastPrimitives:delegate:delegationQueue:
isBroadcasting
delegationQueue
mBroadcastPrimitive
mInvalidated
mIsDisplayingPIN
_broadcasting
_delegationQueue
broadcasting
TB,N,GisBroadcasting,V_broadcasting
T@"CATOperationQueue",R,N,V_delegationQueue
initWithLocaleIdentifier:
setLocale:
setDateFormat:
cat_RFC3339Formatters
dateFromString:
stringFromDate:
cat_internetTimeString
unsignedIntValue
stringByPaddingToLength:withString:startingAtIndex:
localizedDescription
localizedRecoverySuggestion
formattedCode
verboseDescriptionWithIdentation:
stringByAppendingFormat:
formattedCode:
archivedDataWithRootObject:requiringSecureCoding:error:
cat_unarchiveObjectOfClasses:withData:
cat_unarchiveObjectOfClasses:withData:error:
unarchivedObjectOfClasses:fromData:error:
cat_unarchivePropertyListObjectWithData:error:
initForReadingFromData:error:
decodePropertyListForKey:
cat_unarchiveObjectOfClass:withData:
cat_unarchivePropertyListObjectWithData:
T@"<CATInitializingIDSServiceConnectionMessageContent>",R,N,V_content
initWithMessageType:contentDictionary:
_contentDictionaryValue
T@"NSDictionary",R,C,N,V_contentDictionaryValue
cat_shiftAndAddIndexesInRange:
addIndexesInRange:
cat_shiftAndRemoveIndexesInRange:
removeIndexesInRange:
cat_shiftAndAddIndex:
dictionaryFromTXTRecordData:
hasSuffix:
indexesOfObjectsPassingTest:
substringToIndex:
dataFromTXTRecordDictionary:
cat_dictionaryFromData:
cat_dataFromDictionary:
setNumberStyle:
whitespaceAndNewlineCharacterSet
stringByTrimmingCharactersInSet:
getObjectValue:forString:range:error:
cat_addDependencies:
initWithUnderlyingError:
_underlyingError
T@"NSError",R,N,V_underlyingError
currentRunLoop
cat_performBlock:
mainRunLoop
arrayWithArray:
currentMode
cat_performInModes:block:
@16@0:8
B16@0:8
@24@0:8@16
Q16@0:8
B24@0:8@16
v16@0:8
@"NSString"
@"NSData"
@"NSDictionary"16@0:8
@24@0:8@"NSDictionary"16
@40@0:8@16q24q32
@24@0:8q16
q16@0:8
@"NSUUID"
@28@0:8@16B24
@44@0:8@16B24@28@?36
v24@0:8@16
v32@0:8@16@24
v40@0:8@16@24Q32
Q24@0:8@16
@"NSMutableDictionary"
@32@0:8@16Q24
@20@0:8B16
@28@0:8B16@20
@"NSMutableArray"
@"NSObject<OS_dispatch_source>"
@"NSObject<OS_dispatch_queue>"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@36@0:8@16@24B32
@"_CATArbitratorRegistrationEntry"
@32@0:8@16@?24
v36@0:8@16@24B32
B24@0:8i16i20
@"NSObject<OS_dispatch_group>"
v24@0:8@?16
@32@0:8@16@24
@"NSArray"
@"NSOperationQueue"
v24@0:8@"NSOperation"16
v32@0:8@?16@24
@?16@0:8
v20@0:8B16
@24@0:8Q16
v32@0:8@16@?24
v40@0:8@16@24@32
v48@0:8@16@24@32^v40
Q32@0:8@16@24
v24@0:8B16B20
v48@0:8@16Q24Q32Q40
@"NSMutableSet"
@"NSMutableIndexSet"
@"NSSet"
@"NSTimer"
@"NSValueTransformer"
@"<CATCollectionControllerDelegate>"
@"NSPredicate"
@"NSIndexSet"
@48@0:8@16@24@32d40
v56@0:8@16@24@32Q40@48
@"<CATTimerSource>"
@"<CATNetworkPowerPrimitives>"
@"<CATIDSServiceConnectionInvitationInboxDelegate>"
@24@0:8^{_NSZone=}16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v24@0:8Q16
@"NSNumber"
@"<CATIDSServiceConnectionDataAggregationDelegate>"
@28@0:8@16I24
I16@0:8
@"CATAddress"
B32@0:8r*16Q24
v28@0:8@16B24
^{__CFHTTPMessage=}
@"NSDictionary"
@"<CATHTTPMessageParserDelegate>"
v24@0:8@"CATIDSServiceConnectionDataAggregation"16
v24@0:8@"CATActiveIDSServiceConnectionContentSendData"16
@"<CATIDSServiceConnectionDataAggregatorDelegate>"16@0:8
v24@0:8@"<CATIDSServiceConnectionDataAggregatorDelegate>"16
@44@0:8@16@24d32B40
v32@0:8@16Q24
@"<CATTimer>"
@"<CATIDSServiceConnectionDataAggregatorDelegate>"
@"<CATSharingDeviceSession>"
@"<CATDictionaryCodable>"
@40@0:8@16@24@32
@"NSLock"
@"NSBundle"
@"CATIDSMessageMetadata"
@"<CATIDSMessage>"
@72@0:8@16Q24@32{_NSRange=QQ}40Q56Q64
{_NSRange="location"Q"length"Q}
@"<CATActiveIDSServiceConnectionMessageContent>"
v32@0:8@"NSData"16@?<v@?@"NSError">24
@"CATSharingDevice"16@0:8
@"<CATSharingConnectionDelegate>"16@0:8
v24@0:8@"<CATSharingConnectionDelegate>"16
@"NSError"16@0:8
@"<CATSharingBroadcastPrimitives>"
@"CATOperationQueue"
@"<CATSharingConnectionDelegate>"
@"NSError"
B20@0:8I16
v20@0:8I16
^{__SCNetworkReachability=}
@"<CATNetworkReachabilityDelegate>"
v40@0:8@16:24Q32
v48@0:8@16:24Q32@40
v56@0:8@16:24Q32@40@48
v24@0:8q16
@"_CATObserverManager"
@"NSDate"
@"CATOperation"
@56@0:8@16:24Q32@40@48
:16@0:8
@"<CATOperationQueueDelegate>"
v32@0:8@"CATIDSServiceConnection"16@"NSData"24
v24@0:8@"CATIDSServiceConnection"16
@"CATIDSServiceConnection"
@"CATIDSServiceTransport"
@"CATMessage"
@24@0:8#16
@32@0:8r*16r*24
v32@0:8^@16^@24
v40@0:8^@16^@24Q32
v32@0:8@"CATHTTPMessageParser"16@"NSData"24
v36@0:8@"CATHTTPMessageParser"16@"NSData"24B32
v32@0:8@"CATHTTPMessageParser"16@"NSURL"24
v32@0:8@"NSStream"16Q24
^{__SecTrust=}16@0:8
@40@0:8@16@24Q32
v40@0:8@16Q24@32
v32@0:8^{__SecIdentity=}16@24
B36@0:8^{__SecIdentity=}16@24B32
i24@0:8^{__SecTrust=}16
B32@0:8@16^@24
v48@0:8@16Q24Q32@40
d16@0:8
v24@0:8d16
@"CATHTTPMessageParser"
@"NSMutableData"
@"CATSerialOperationQueue"
@"<CATRemoteConnectionDelegate>"
@"CATRemoteConnectionSocketOptions"
@"NSInputStream"
@"NSOutputStream"
@24@0:8^@16
@"NSData"24@0:8^@16
@48@0:8@16Q24Q32@40
@32@0:8@16^{__SecTrust=}24
@"CATRemoteConnection"
v32@0:8q16q24
@"CATTaskClient"
v48@0:8@16@24@32@40
v56@0:8@16@24Q32Q40@48
v24@0:8@"CATRemoteConnection"16
v32@0:8@"CATRemoteConnection"16@"CATRemoteConnectionTrustDecision"24
v40@0:8@"CATRemoteConnection"16@"NSData"24@32
v48@0:8@"CATRemoteConnection"16@"NSData"24@32@"NSError"40
v32@0:8@"CATRemoteConnection"16@"NSData"24
v32@0:8@"CATRemoteConnection"16@"NSURL"24
v56@0:8@"CATRemoteConnection"16@"NSInputStream"24Q32Q40@48
v40@0:8@"CATRemoteConnection"16@"NSInputStream"24@32
v48@0:8@"CATRemoteConnection"16@"NSInputStream"24@32@"NSError"40
v36@0:8@"CATRemoteConnection"16@"NSData"24B32
v32@0:8@"CATRemoteConnection"16@"NSError"24
@"<CATRemoteTransportDelegate>"
@"CATRemoteTransport"
@"NSOperation"
@112@0:8@16@24@32@40@48@56@64@72@80@88@96@104
@104@0:8@16@24@32@40@48@56@64@72@80@88@96
v40@0:8@"<CATIDSServiceConnectionDataAggregator>"16@"NSData"24Q32
v32@0:8@"<CATIDSServiceConnectionDataAggregator>"16@"NSArray"24
v24@0:8@"<CATIDSServiceConnectionDataAggregator>"16
v24@0:8@"CATIDSServiceConnectionMessageProcessor"16
v32@0:8@"CATIDSServiceConnectionMessageProcessor"16@"NSError"24
v32@0:8@"CATIDSServiceConnectionMessageProcessor"16@"CATActiveIDSServiceConnectionContentSendData"24
v32@0:8@"CATIDSServiceConnectionMessageProcessor"16@"NSArray"24
v32@0:8@"CATIDSServiceConnectionMessageProcessor"16Q24
v40@0:8@"NSDictionary"16@"NSString"24@"NSString"32
v44@0:8@16@24B32@?36
v32@0:8@"<CATIDSServiceConnectionDataMessageQueue>"16Q24
v44@0:8@"<CATIDSServiceConnectionDataMessageQueue>"16@"NSArray"24B32@?<v@?@"NSError">36
v36@0:8@16Q24B32
@"<CATIDSPrimitives>"
@"<CATCancelable>"
@"<CATIDSMessageBroadcaster>"
@"<CATIDSServiceConnectionDataMessageQueue>"
@"<CATIDSServiceConnectionDataAggregator>"
@"CATSerialOperationEnqueuer"
@"<CATResettableTimer>"
@"CATIDSServiceConnectionMessageProcessor"
@"<CATIDSSubscription>"
@"<CATIDSServiceConnectionDelegate>"
@"CATIDSServiceConnectionMetadata"
@48@0:8@16@24@32@40
@64@0:8@16@24@32@40@48@56
@"CATIDSMessageOptions"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"<CATIDSServiceConnectionMessageProcessorDelegate>"
v32@0:8@?16@?24
v24@0:8@?<v@?@"NSError"@"<CATSharingConnection>">16
v32@0:8@?<v@?Q>16@?<v@?@"NSError"@"<CATSharingConnection>">24
v24@0:8@"NSString"16
v20@0:8i16
i16@0:8
@20@0:8i16
@"<CATSocketDelegate>"
@"CATEndPoint"
@"<CATSharingDiscoveryPrimitives>"
@"<CATSharingDeviceDiscoveryDelegate>"
v40@0:8@16@24:32
v24@0:8:16
v32@0:8:16@24
@"CATState"
@"NSArray"24@0:8@"NSData"16
@32@0:8@16q24
@48@0:8@16@24@32^@40
B40@0:8@16@24@32
@"CATTaskOperation"48@0:8@"CATTaskServer"16@"CATTaskSession"24@"CATTaskRequest"32^@40
v40@0:8@"CATTaskServer"16@"CATTaskSession"24@"NSError"32
B40@0:8@"CATTaskServer"16@"CATTaskSession"24@"CATTransport"32
v48@0:8@"CATTaskServer"16@"CATTaskSession"24@"NSString"32@"NSDictionary"40
v40@0:8@"CATTaskServer"16@"CATTaskSession"24@"NSOperation"32
v32@0:8@"CATTaskServer"16@"CATTaskSession"24
v24@0:8@"CATTaskServer"16
v32@0:8@?16#24
v24@0:8#16
@"CATTaskServer"
@"NSMapTable"
@32@0:8@?16@24
v24@0:8@"CATTransport"16
v32@0:8@"CATTransport"16@"CATMessage"24
v40@0:8@"CATTransport"16@"CATMessage"24@"NSError"32
v32@0:8@"CATTransport"16@"NSError"24
@"CATStateMachine"
@"CATTransport"
@"NSHashTable"
@"<CATTaskClientDelegate>"
@60@0:8@16@24q32B40Q44@52
v56@0:8@16@24@32@40@?48
v56@0:8@16@24@32@40@48
v72@0:8@16@24@32@40@48Q56@64
v64@0:8@16@24@32@40@48@56
v56@0:8@"CATIDSServiceConnectionInvitationInbox"16@"NSString"24@"NSUUID"32@"NSDictionary"40@?<v@?B@"NSError">48
v48@0:8@"CATIDSServiceConnectionInvitationInbox"16@"NSUUID"24@"NSUUID"32@"NSString"40
v56@0:8@"CATIDSServiceConnectionInvitationInbox"16@"NSUUID"24@"NSUUID"32@"NSString"40@"NSDictionary"48
v72@0:8@"CATIDSServiceConnectionInvitationInbox"16@"NSUUID"24@"NSString"32@"NSString"40@"<CATCancelable>"48Q56@"NSDictionary"64
v64@0:8@"CATIDSServiceConnectionInvitationInbox"16@"NSUUID"24@"NSUUID"32@"NSString"40@"NSString"48@"NSError"56
v48@0:8@"CATIDSServiceConnectionInvitationOutbox"16@"NSUUID"24@"NSString"32@"NSDictionary"40
v48@0:8@"CATIDSServiceConnectionInvitationOutbox"16@"NSUUID"24@"NSUUID"32@"NSString"40
v72@0:8@"CATIDSServiceConnectionInvitationOutbox"16@"NSUUID"24@"NSString"32@"NSString"40@"<CATCancelable>"48Q56@"NSDictionary"64
v56@0:8@"CATIDSServiceConnectionInvitationOutbox"16@"NSString"24@"NSUUID"32@"NSDictionary"40@"NSError"48
v24@0:8@"<CATIDSMessageBroadcastHandler>"16
@72@0:8@16@24@32@40@48@56@64
@"CATIDSServiceConnectionConfiguration"
@"CATIDSServiceConnectionInvitationInbox"
@"CATIDSServiceConnectionInvitationOutbox"
@"<CATIDSServiceConnectionTerminalDelegate>"
@"CATTaskProgress"
@"CATTaskRequest"
B32@0:8@16@24
@"<CATTaskOperationNotificationDelegate>"
v32@0:8@"<CATSharingConnection>"16@"NSData"24
v24@0:8@"<CATSharingConnection>"16
@"<CATSharingConnection>"
#24@0:8@16
@32@0:8@16#24
@68@0:8@16@24@32d40Q48B56@?60
v48@0:8@16@24@32Q40
@"<CATIDSServiceConnectionInvitationOutboxDelegate>"
@40@0:8@16@24^@32
@"CATTaskOperation"40@0:8@"CATTaskSession"16@"CATTaskRequest"24^@32
B32@0:8@"CATTaskSession"16@"CATTransport"24
v40@0:8@"CATTaskSession"16@"NSString"24@"NSDictionary"32
v32@0:8@"CATTaskSession"16@"NSError"24
v24@0:8@"CATTaskSession"16
v32@0:8@"CATTaskSession"16@"NSOperation"24
@"<CATTaskServerDelegate>"
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
@24@0:8@?16
v40@0:8@"CATTaskOperation"16@"NSString"24@"NSDictionary"32
@32@0:8@16^@24
@"CATTaskSession"
@"<CATTaskSessionDelegate>"
@32@0:8@16:24
v24@0:8@"NSArray"16
@"<CATIDSServiceConnectionDataMessageQueueDelegate>"16@0:8
v24@0:8@"<CATIDSServiceConnectionDataMessageQueueDelegate>"16
@52@0:8@16@24@32d40B48
@"<CATIDSServiceConnectionDataChunker>"
@"<CATIDSServiceConnectionDataMessageQueueDelegate>"
@56@0:8@16@24@32Q40@48
@64@0:8@16@24@32@40Q48@56
@"<CATTransportDelegate>"
v32@0:8@"CATMessage"16@?<v@?>24
@"NSXPCConnection"
@"CATXPCTransport"
@"<CATSharingBroadcastTerminalDelegate>"
@32@0:8#16@24
@40@0:8#16@24^@32
@"<CATInitializingIDSServiceConnectionMessageContent>"
@32@0:8q16@24
@48@0:8@16d24@32@?40
@56@0:8@16d24@32Q40@?48
@"<CATTimer>"48@0:8@"NSString"16d24@"NSObject<OS_dispatch_queue>"32@?<v@?@"<CATTimer>">40
@"<CATResettableTimer>"56@0:8@"NSString"16d24@"NSObject<OS_dispatch_queue>"32Q40@?<v@?@"<CATResettableTimer>"QB>48
@"<CATTimer>"48@0:8@"NSString"16d24@"NSObject<OS_dispatch_queue>"32@?<v@?@"<CATTimer>"Q>40
v32@0:8{_NSRange=QQ}16
v32@0:8Q16Q24
