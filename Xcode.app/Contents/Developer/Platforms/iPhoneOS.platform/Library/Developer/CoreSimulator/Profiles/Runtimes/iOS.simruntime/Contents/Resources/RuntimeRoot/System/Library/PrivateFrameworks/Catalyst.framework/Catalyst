/BuildRoot/Library/Caches/com.apple.xbs/Sources/Catalyst_Sim/Catalyst-6/Catalyst/Networking/CATAddress.m
<Unknown File>
The provided data is not long enough to be a sockaddr.
v8@?0
%@ address: ANY %@
%@ address: LOCAL WIFI %@
%@ address: %@
data
T@"NSData",R,N,V_data
address
T@"NSString",R,N,V_address
TB,R,N,GisAny
localWiFi
TB,R,N,GisLocalWiFi
<%@: %p %@>
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Catalyst_Sim/Catalyst-6/Catalyst/Arbitrator/CATArbitrator.m
Invalid parameter not satisfying: %@
resource
%@ cannot call %@ with maxConcurrentCount == 0
%@ cannot call %@ when key (%@) is already registered
maxConcurrentCount > 0
%@.%p.pending-waits
currentCount
TQ,R,N,V_currentCount
%@ cannot call %@ because receiver has been invalidated
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
isExclusive
TB,R,N,V_isExclusive
delegateQueue
completionBlock
entry
v32@?0@"NSString"8@"_CATProxyWaitToken"16^B24
group
resourceProxy
T@,R,N,V_resourceProxy
com.apple.catalyst
General
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Catalyst_Sim/Catalyst-6/Catalyst/Remote Tasks/CATBatchRemoteTaskOperation.m
client
%@.%p.main
remoteTaskOperations
T@"NSArray",R,C,N
%@.%p
T@"NSObject<OS_dispatch_queue>",&,N,V_delegateQueue
didStart
T@?,C,N,V_didStart
didProgress
T@?,C,N,V_didProgress
didFinish
T@?,C,N,V_didFinish
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Catalyst_Sim/Catalyst-6/Catalyst/Object Coordination/CATCollectionController.m
%@ is already observing <%@: %p> on keypath %@
%@ cannot call %@ when there is already content set
_CATCollectionControllerContentObservationContext
v24@?0@8^B16
_CATCollectionControllerArrangementKeyObservationContext
q24@?0@8@16
changeBlock
selectionIndexes
arrangedObjects
T@"NSArray",&,V_arrangedObjects
delegate
T@"<CATCollectionControllerDelegate>",W,V_delegate
sortDescriptors
T@"NSArray",C,V_sortDescriptors
filterPredicate
T@"NSPredicate",&,V_filterPredicate
T@"NSIndexSet",C,V_selectionIndexes
automaticallyRearrangesObjects
TB,V_automaticallyRearrangesObjects
content
T@"NSSet",R,N
selectedObjects
T@"NSArray",R
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Catalyst_Sim/Catalyst-6/Catalyst/Networking/CATEndPoint.m
%@ address: %@ port: %d
T@"CATAddress",R,N,V_address
port
TI,R,N,V_port
NSError *CATErrorWithDomainCodeAndUserInfo(NSString *__strong, NSInteger, CATErrorDescriptionsGenerator, NSDictionary *__strong)
<Unknown Function>
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Catalyst_Sim/Catalyst-6/Catalyst/Models/CATError.m
errorDescriptionsWithCodeAndUserInfo
NSDescription
v32@?0@8@16^B24
Content-Length
http://localhost/
POST
T@"<CATHTTPMessageParserDelegate>",W,N,V_delegate
NSLocalizedDescription
%@.%@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Catalyst_Sim/Catalyst-6/Catalyst/Models/CATLocalizationHelper.m
tableName
strings
English
Localizable
bundle
T@"NSBundle",R,W,N,V_bundle
messageUUID
<%@: { messageUUID = '%@' }>
supportsSecureCoding
TB,R
T@"NSUUID",&,N,V_messageUUID
cat_assertion
T@,&,N
flags
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Catalyst_Sim/Catalyst-6/Catalyst/Models/CATNetworkReachability.m
<%@: %p { %@, flags = '%c %c%c%c%c%c%c%c' }>
reachable
unreachable
TI,N,V_flags
T@"<CATNetworkReachabilityDelegate>",W,N,V_delegate
TB,R,N,GisReachable
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Catalyst_Sim/Catalyst-6/Catalyst/Remote Tasks/Internal/CATNotificationMessage.m
name
taskUUID
userInfo
T@"NSUUID",C,N,V_taskUUID
T@"NSString",C,N,V_name
T@"NSDictionary",C,N,V_userInfo
<%@: %p { name = %@, ID = %@, state = %@, completed = %ld/%ld }>
%c%c%c [%ld]
---REEEEF
isCancelled
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Catalyst_Sim/Catalyst-6/Catalyst/Operations/CATOperation.m
%@ cannot transition to '_CATOperationStateStarting' from state (%d).
%@ cannot transition to '_CATOperationStateRunning' from state (%d).
isExecuting
%@ cannot call %@ when operation's state is %ld
%@ cannot call %@ when operation is already finished. Previous call:
%@ cannot call %@ when the specified error is nil.
CATCaptureCallStackSymbols
*** Enable backtrace by setting CATCaptureCallStackSymbols to YES ***
isFinished
UUID
T@"NSUUID",&,V_UUID
phase
TQ,V_phase
createdDate
T@"NSDate",&,V_createdDate
enqueuedDate
T@"NSDate",&,V_enqueuedDate
startedDate
T@"NSDate",&,V_startedDate
finishedDate
T@"NSDate",&,V_finishedDate
error
T@"NSError",&,V_error
T@"NSDictionary",&,V_userInfo
resultObject
T@,&,V_resultObject
completedUnitCount
Tq,V_completedUnitCount
totalUnitCount
Tq,V_totalUnitCount
isCanceled
canCancel
TB,R,V_canCancel
operation
observer
%@ cannot call %@ with an operation (%@) not being observed
_CATOperationCompletedUnitCountObservationContext
%@: %@ is unavailable
target
%@.%p.%p.%@
T@,R,N,V_target
selector
T:,R,N,V_selector
events
TQ,R,N,V_events
T@,R,N,V_userInfo
T@"NSObject<OS_dispatch_queue>",R,N,V_delegateQueue
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Catalyst_Sim/Catalyst-6/Catalyst/Operations/CATOperationQueue.m
%@ cannot call %@ for backgroundQueue
Global Background Queue
%@ cannot use +currentQueue, call +[NSOperationQueue currentQueue] instead.
%@ cannot use +mainQueue, call +[NSOperationQueue mainQueue] instead.
<%@: %p { name = '%@', suspended = %d, operationCount = %lu, maxConcurrentOperationCount = %ld }>
_CATOperationQueueIsFinishedObservationContext
T@"<CATOperationQueueDelegate>",W,N,V_delegate
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Catalyst_Sim/Catalyst-6/Catalyst/Models/CATProperty.m
attributes
T@"NSString",R,C,N,V_name
instanceVariableName
T@"NSString",R,C,N,V_instanceVariableName
type
Tq,R,N,V_type
objectClass
T#,R,N,V_objectClass
readOnly
TB,R,N,GisReadOnly,V_readOnly
nonAtomic
TB,R,N,GisNonAtomic,V_nonAtomic
association
Tq,R,N,V_association
customGetterSelector
T:,R,N,V_customGetterSelector
customSetterSelector
T:,R,N,V_customSetterSelector
weakReference
TB,R,N,GisWeakReference,V_weakReference
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Catalyst_Sim/Catalyst-6/Catalyst/Interprocess Communication/Remote Transport/CATRemoteConnection.m
connection1
connection2
netService
inputStream
outputStream
Stream Event Queue
%@ cannot dealloc while receiver is still valid.
<%@: %p { name = %@ } >
%@ cannot call %@ when invalidated.
Connection did close
_scheduleInCFRunLoop:forMode:
identity
Handle Stream Event Operation
T@"NSInputStream",&,N,V_inputStream
T@"NSOutputStream",&,N,V_outputStream
usesSSL
TB,N,V_usesSSL
bufferSize
TQ,N,V_bufferSize
T@"<CATRemoteConnectionDelegate>",W,N,V_delegate
peerTrust
T^{__SecTrust=},R,N
connectionTimeoutInterval
Td,N,V_connectionTimeoutInterval
socketOptions
T@"CATRemoteConnectionSocketOptions",C,N,V_socketOptions
customTrustEvaluationPolicies
T@"NSArray",C,N,V_customTrustEvaluationPolicies
T@,R,N
hasBytesRemaining
TB,R,N
bytesWritten
TQ,N
clientBytesWritten
TQ,R,N
T@"NSData",R,C,N,V_data
TQ,N,V_bytesWritten
stream
T@"NSInputStream",R,C,N,V_stream
dataLength
TQ,R,N,V_dataLength
TQ,R,N,V_bufferSize
adaptiveWriteTimeout
T@"NSNumber",C,N,V_adaptiveWriteTimeout
keepAliveEnabled
T@"NSNumber",C,N,V_keepAliveEnabled
keepAliveDelay
T@"NSNumber",C,N,V_keepAliveDelay
keepAliveInterval
T@"NSNumber",C,N,V_keepAliveInterval
keepAliveCount
T@"NSNumber",C,N,V_keepAliveCount
netServiceType
T@"NSNumber",C,N,V_netServiceType
trust
T@,R,V_trust
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Catalyst_Sim/Catalyst-6/Catalyst/Remote Tasks/CATRemoteTaskOperation.m
request
Request must set before the remote task operation can be run
remotePhase
T@"NSNumber",C,N,V_remotePhase
T@"CATTaskClient",R,N,V_client
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Catalyst_Sim/Catalyst-6/Catalyst/Interprocess Communication/Remote Transport/CATRemoteTransport.m
%@ cannot call %@
transport1
transport2
remoteConnection
remoteTransportDelegate
T@"<CATRemoteTransportDelegate>",W,N,V_remoteTransportDelegate
transport
T@"CATRemoteTransport",W,N,V_transport
message
T@"CATMessage",&,N,V_message
Suspended: %@
Operation Count: %@
Operations: %@
T@"NSError",C,N,V_error
sessionUUID
clientUserInfo
T@"NSUUID",C,N,V_sessionUUID
T@"NSDictionary",C,N,V_clientUserInfo
pendingRemoteTaskUUIDs
serverUserInfo
T@"NSDictionary",C,N,V_serverUserInfo
T@"NSArray",C,N,V_pendingRemoteTaskUUIDs
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Catalyst_Sim/Catalyst-6/Catalyst/Networking/CATSocket.m
%@ cannot call %@ when already connected.
%@ cannot call %@ when already invalidated.
endPoint
nativeSocket
Ti,N,V_nativeSocket
socketSource
T@"NSObject<OS_dispatch_source>",R,N,V_socketSource
socketQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_socketQueue
userQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_userQueue
T@"<CATSocketDelegate>",W,N,V_delegate
localEndPoint
T@"CATEndPoint",R,N,V_localEndPoint
remoteEndPoint
T@"CATEndPoint",R,N,V_remoteEndPoint
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Catalyst_Sim/Catalyst-6/Catalyst/FSM/Models/CATState.m
<%@: %p { name = %@ }>
triggeringEvent
%@ cannot add duplicate transition for %@
enterAction
T:,N,V_enterAction
exitAction
T:,N,V_exitAction
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Catalyst_Sim/Catalyst-6/Catalyst/FSM/Models/CATStateMachine.m
<%@: %p>
%@ cannot be deallocated because of '%@'
<%@: %p { name = %@, currentState = %@ }>
%@ cannot call %@ when currentState is %@
%@ cannot add a duplicate state name (%@) to state machine.
%@ couldn't get a state for %@
%@ cannot call %@ when initialState is nil
%@ has already started. %@ cannot be called twice.
%@ has not been started. The state machine should not receive events before it has started
%@ cannot transition from %@ with %@
%@ cannot call %@ with event '%@' because the receiver is already '%@'
Calling Exit Action
Calling Transition Action
currentState
T@"CATState",&,N,V_currentState
initialState
T@"CATState",&,N,V_initialState
T@,R,W,N,V_target
logLevel
TQ,N,V_logLevel
trigger
T@,R,N,V_trigger
context
T@,R,N,V_context
clientSessions
T@"NSArray",R,C,N,V_clientSessions
sessionDidConnect
T@?,C,N,V_sessionDidConnect
sessionDidReceiveNotification
T@?,C,N,V_sessionDidReceiveNotification
sessionDidInterruptWithError
T@?,C,N,V_sessionDidInterruptWithError
sessionDidDisconnect
T@?,C,N,V_sessionDidDisconnect
sessionDidInvalidate
T@?,C,N,V_sessionDidInvalidate
didInvalidate
T@?,C,N,V_didInvalidate
Invalidated
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Catalyst_Sim/Catalyst-6/Catalyst/Remote Tasks/Client/CATTaskClient.m
CATTaskLogLevel
Disconnected
Connecting
Negotiating
Connected
Invalidating
<%@: %p { state = %@, session = %@, transport = %@ }>
<%@: %p { state = %@, session = %@ }>
otherClient
%@ cannot call %@ when the other client is the receiver
%@: Can't capture transport when one doesn't exist
%@ cannot call %@ with %@ when there is no transport
kCATErrorMessageNameKey
T@"NSUUID",&,N,V_sessionUUID
T@"CATTransport",R,N,VmTransport
T@"<CATTaskClientDelegate>",W,N,V_delegate
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Catalyst_Sim/Catalyst-6/Catalyst/Remote Tasks/Internal/CATTaskMessage.m
<%@: %p { messageUUID = '%@', taskUUID = '%@' }>
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Catalyst_Sim/Catalyst-6/Catalyst/Remote Tasks/Internal/CATTaskMessageError.m
taskError
T@"NSError",&,N,V_taskError
Tq,N,V_completedUnitCount
Tq,N,V_totalUnitCount
progress
T@"CATTaskProgress",C,N,V_progress
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Catalyst_Sim/Catalyst-6/Catalyst/Remote Tasks/Internal/CATTaskMessageStart.m
T@"CATTaskRequest",&,N,V_request
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Catalyst_Sim/Catalyst-6/Catalyst/Remote Tasks/CATTaskOperation.m
kCATInvalidParameterErrorKey
remoteUUID
T@"NSUUID",C,N,V_remoteUUID
T@"CATTaskRequest",R,N,V_request
notificationDelegate
T@"<CATTaskOperationNotificationDelegate>",W,N,V_notificationDelegate
cat_assertions
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Catalyst_Sim/Catalyst-6/Catalyst/Remote Tasks/CATTaskProgress.m
uuid
%@ cannot call %@ because it is not allowed
%@: resultObject (%@) is not accepted class %@
Succeeded
Failed
Not Finished
isCancelable
requestClassName
finished
finished, error = %@
state = %@
{ UUID = %@, %@ }
<%@: %p { UUID = %@, state = %@, error = %@ }>
NSMutable
CATMutable
T@"NSUUID",C,N,V_UUID
TQ,N,V_phase
T@,&,N,V_resultObject
T@"NSError",&,N,V_error
T@"NSDictionary",&,N,V_userInfo
TB,N,V_isCancelable
TB,N,V_isCanceled
T@"NSString",C,N,V_requestClassName
state
requestClass
TQ,D,N
T@,&,D,N
T@"NSError",&,D,N
T@"NSDictionary",&,D,N
TB,D,N
Tq,D,N
handlesNotifications
TB,N,V_handlesNotifications
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Catalyst_Sim/Catalyst-6/Catalyst/Remote Tasks/Server/CATTaskServer.m
Running
%@ cannot call %@ when it has not created a strong reference to self
kCATErrorRequestNameKey
%@.%p.orphaned
T@"<CATTaskServerDelegate>",W,N,V_delegate
connectedClientSessions
_CATTaskSessionUUID
_CATTaskSessionClientUserInfo
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Catalyst_Sim/Catalyst-6/Catalyst/Remote Tasks/Server/CATTaskSession.m
%@.%p.delegation
otherSession
%@ cannot call %@ when the other session is the receiver
%@ cannot call %@ when there is no transport
%@ cannot call %@ when previous session has not been popped
_CATTaskSessionOperationRemoteUUID
T@"<CATTaskSessionDelegate>",W,N,V_delegate
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Catalyst_Sim/Catalyst-6/Catalyst/FSM/Models/CATTransition.m
<%@: %p { action = %@, state = %@ }>
T@"CATState",R,W,N,V_state
action
T:,R,N,V_action
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Catalyst_Sim/Catalyst-6/Catalyst/Interprocess Communication/CATTransport.m
%@.%p.control
%@.%p.messages
CATTransportLogLevel
Not Connected (Suspended)
Connecting (Suspended)
Connected (Suspended)
<%@: %p { name = %@, state = %@ }>
<%@: %p { state = %@ }>
Control Queue:%@
Message Queue:%@
Receive Message
Resume Connection
Resume Queue
Resume Queue and Connection
Send Message
Delegate Did Send Message
Invalid Send
Invalidate Connection
Delegate Did Invalidate
Finalize Transport
%@ must override %@
Delegate Did Connect
Delegate Did Receive Message
Delegate Did Interrupt
T@"<CATTransportDelegate>",W,N,V_delegate
block
T@?,C,N,V_block
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Catalyst_Sim/Catalyst-6/Catalyst/Interprocess Communication/XPC Transport/CATXPCTransport.m
xpcConnection
%@ cannot call %@ when underlying connection has not been torn down.
auditSessionIdentifier
Ti,R
processIdentifier
effectiveUserIdentifier
TI,R
effectiveGroupIdentifier
T@"CATXPCTransport",W,N,V_transport
yyyy-MM-dd'T'HH:mm:ss.SSSZZZ
yyyy-MM-dd'T'HH:mm:ssZZZ
yyyy-MM-dd'T'HH:mm:ss
en_US_POSIX
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Catalyst_Sim/Catalyst-6/Catalyst/Categories/NSDictionary+ChangeDictionary.m
This is not a KVO change dictionary
Unexpected change type from a KVO'd collection
Catalyst.error
An unknown error occurred.
CATErrors
A parameter was invalid.
The operation timed out.
The remote connection has been closed.
Receiving data failed.
Sending data failed.
The remote connection has been closed by the peer.
The remote connection could not create streams.
The connection timed out.
Unable to establish secure connection.
Failed to configure secure settings on connection.
Transport has been invalidated.
Transport could not connect.
Unable to parse message.
Malformed message.
Unexpected message.
An unknown service request (%@).
The operation is no longer available.
There was a problem serializing the request.
Failed to create operation for request (%@).
The operation was canceled.
Invalid task client.
Server session invalidated.
Client session invalidated.
The connection was rejected.
The client's transport was captured.
%@%@: %p
%@Desc   : %@
%@Sugg   : %@
%@US Desc: %@
NSRecoverySuggestion
%@US Sugg: %@
%@Domain : %@
%@Code   : %@
%@...Underlying error:
%@Extra info:
0x%lX (%ld)
 [sys = 0x%1$lX, sub = 0x%2$lX, code = 0x%3$lX (%3$ld)]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Catalyst_Sim/Catalyst-6/Catalyst/Categories/NSKeyedUnarchiver+SecureCoding.m
aClass
classes
B32@?0@"NSString"8Q16^B24
-%lu
%@ is missing entry for %@
There was an error reading %@: %@
trust result: %@
%@ dropping notification '%@', either the client didn't expect it, or it wasn't whitelisted
%@ failed accepting from socket (%d): %s (%i)
%@ starting...
%@ transitioning from "%@" to "%@" because %@
%@ leaving %@
%@ invoking action for %@
%@ entering %@
%@ invoking exit action (%@) for %@
%@ invoking enter action (%@) for %@
%@: %@
Dropping message (%@) because delegate (%@) does not implement %@
%{public}@ failed to send message %{public}@: %{public}@
@(#)PROGRAM:Catalyst  PROJECT:Catalyst-6
CATAddress
CATArbitrator
_CATArbitratorRegistrationEntry
_CATArbitratorResourceProxy
CATArbitratorProxy
NSObject
_CATArbitratorWaitToken
_CATProxyWaitToken
CATBatchRemoteTaskOperation
CATBlockOperationObserver
CATOperationObserver
CATCollectionController
CATEndPoint
CATHTTPMessageParser
CATLocalizationHelper
CATMessage
NSSecureCoding
NSCoding
Internal
CATNetworkReachability
CATNotificationMessage
CATOperation
_CATObserverManager
_CATOperationTargetSelectorObserver
CATOperationQueue
CATProperty
CATRemoteConnection
CATHTTPMessageParserDelegate
NSStreamDelegate
_CATRemoteConnectionSendDataContext
_CATRemoteConnectionSendContext
_CATRemoteConnectionSendDataWithStreamContext
CATRemoteConnectionSocketOptions
CATRemoteConnectionTrustDecision
CATRemoteTaskOperation
CATRemoteTransport
CATRemoteConnectionDelegate
_CATRemoteTransportSendMessageOperation
CATSerialOperationQueue
CATSessionMessage
CATSessionMessageDidInvalidate
CATSessionMessageInvalidate
CATSessionMessageResume
CATSessionMessageResumed
CATSocket
CATState
CATStateMachine
CATStateMachineEvent
CATTaskBlockServer
CATTaskServerDelegate
_CATBlockTaskOperation
_CATLongRunningTaskOperation
CATTaskClient
CATTransportDelegate
CATTaskMessage
CATTaskMessageCancel
CATTaskMessageError
CATTaskMessageFetchProgress
CATTaskMessageIncrementalProgress
CATTaskMessageProgressUpdate
CATTaskMessageStart
CATTaskOperation
Assertion
NSMutableCopying
NSCopying
CATTaskProgress
CATMutableTaskProgress
CATTaskRequest
CATTaskResultObject
CATTaskServer
CATTaskSessionDelegate
CATTaskSession
CATTaskOperationNotificationDelegate
CATTransition
CATTransport
_CATTransportDidSendMessageOperation
_CATXPCBoostAssertion
CATXPCInterface
CATXPCTransport
_CATXPCTransportSendMessageOperation
CATCasting
CATInternetDateAndTime
CATChangeDictionary
_CATErrorBundleHelper
CATVerboseDescription
CATSecureCoding
CATShifting
CATTXTRecord
CATBlocks
length
bytes
data
setLength:
mutableBytes
initWithUTF8String:
stringWithUTF8String:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
dataWithBytes:length:
alloc
initWithData:
UTF8String
init
dataWithData:
isAny
description
address
stringWithFormat:
isLocalWiFi
hash
isEqualToAddress:
localWiFi
initWithString:
isEqual:
.cxx_destruct
_address
_data
debugDescription
arrayWithObjects:count:
resourcesForKeys:exclusive:
objectForKeyedSubscript:
count
copy
countByEnumeratingWithState:objects:count:
allValues
invalidate
makeObjectsPerformSelector:
removeAllObjects
makeResourceProxyIfPossible:
setObject:forKeyedSubscript:
initWithDelegateQueue:completionBlock:
waitForRegistrationEntry:forKey:exclusive:
resume
cancel
registerResource:forKey:maxConcurrentCount:
initWithResource:maxConcurrentCount:
removeObjectForKey:
currentCount
resourceForKey:exclusive:
waitForResourcesForKeys:exclusive:delegateQueue:completionBlock:
stopWaiting:
registerResource:forKey:
unregisterResourceForKey:
mRegistrationByKey
servicePendingWaitTokens
makeResourceProxyIfPossibleWithoutLocking:
initWithExclusive:group:
addObject:
pendingWaitsNeedServicing
isExclusive
firstObject
removeObjectAtIndex:
notifyWithResourceProxy:
initWithResource:registration:exclusive:
waitForResourceWithExclusive:group:
resourceProxyDidInvalidate:
mResource
mMaxConcurrentCount
mPendingWaits
mPendingWaitsSource
mPendingWaitsQueue
_currentCount
dealloc
methodSignatureForSelector:
setTarget:
invoke
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
forwardingTargetForSelector:
forwardInvocation:
mRegistration
_isExclusive
performCompletionBlock
whenStateIs:atomicallySwapWith:
resourceProxy
enumerateKeysAndObjectsUsingBlock:
mState
mTokenByKey
mDelegateQueue
mGroup
mCompletionBlock
mFinished
_resourceProxy
prepareTaskOperationForRequest:
initWithRemoteTaskOperations:
setName:
cancelSubOperations
performSelectorOnMainThread:withObject:waitUntilDone:
setTotalUnitCount:
setCompletedUnitCount:
endOperationWithResultObject:
remoteTaskDidFinish:
addTarget:selector:forOperationEvents:
addOperation:
completedUnitCount
initWithTarget:selector:object:
initWithTaskClient:requests:
isAsynchronous
remoteTaskOperations
main
mRemoteTasks
mQueue
didStart
invokeBlock:operation:
didProgress
didFinish
operationDidStart:
operationDidProgress:
operationDidFinish:
setDelegateQueue:
delegateQueue
setDidStart:
setDidProgress:
setDidFinish:
_delegateQueue
_didStart
_didProgress
_didFinish
updateKeysAffectingArrangementForceUpdate:includeAllContent:
isEqualToArray:
isEqualToIndexSet:
delegate
controllerDidChangeSelectionIndexes:
selectionIndexes
arrangedObjects
objectsAtIndexes:
array
setDelegate:
unbindContent
objectAtIndex:
cat_performBlockOnMainRunLoop:
indexOfObject:
bindContentToObject:withKeyPath:usingTransformer:
addObserver:forKeyPath:options:context:
removeObserver:forKeyPath:
removeObserversFromObject:forKeyPaths:
setArrangedObjects:
cat_calculateAddedObjects
cat_calculateRemovedObjects
transformedValue:
removeObject:
enumerateObjectsUsingBlock:
changeContent:
scheduleRearrangeTimerIfNeed
observeValueForKeyPath:ofObject:change:context:
containsObject:
addObserversToObject:forKeyPaths:
arrangeObject:
changeObject:atIndex:forChangeType:newIndex:
filterPredicate
evaluateWithObject:
mutableCopy
newIndexForObject:inArrangedObjects:
sortDescriptors
valueForKeyPath:
compareObject:toObject:
compare:
indexOfObject:inSortedRange:options:usingComparator:
rearrangeTimerDidFire:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
automaticallyRearrangesObjects
addObjectsFromArray:
null
setWithSet:
setWithArray:
isEqualToSet:
minusSet:
initWithIndexSet:
notifyArrangedObjectsWillChange
willChangeValueForKey:
didChangeValueForKey:
notifyArrangedObjectsDidChangeWithPreviousArrangedObjects:
controllerWillChangeContent:
controller:willChangeObject:atIndex:forChangeType:newIndex:
controllerDidChangeContent:
controller:didChangeObject:atIndex:forChangeType:newIndex:
shiftIndexesStartingAtIndex:by:
insertObject:atIndex:
cat_moveIndex:toIndex:
cat_shiftAndRemoveIndex:
setAutomaticallyRearrangesObjects:
setSortDescriptors:
setFilterPredicate:
setSelectionIndexes:
selectedObjects
content
initWithObjects:
numberOfArrangedObjects
arrangedObjectAtIndex:
arrangedObjectsAtIndexes:
resolveArrangedObjectsAtIndexes:reply:
arrangedIndexOfObject:
bindContentToObject:withKeyPath:
rearrangeObjects
updateObject:
mPendingArrangedObjects
mPendingInsertedObjects
mPendingDeletedObjects
mContent
mTarget
mKeyPath
mChangingSelection
mDelegateKnowsContentIsChanging
mKeysAffectingArrangement
mObjectsToRearrange
mRearrangeTimer
mTransformer
mOriginalObjects
_automaticallyRearrangesObjects
_delegate
_sortDescriptors
_filterPredicate
_selectionIndexes
_arrangedObjects
port
isEqualToEndPoint:
initWithAddress:port:
_port
handleFailureInFunction:file:lineNumber:description:
dictionaryWithDictionary:
errorWithDomain:code:userInfo:
isEqualToString:
delegateDidReceiveRequestWithURL:
integerValue
subdataWithRange:
delegateDidReceiveRequestData:
appendBytes:length:
delegateDidReceiveResponseData:moreComing:
URLWithString:
messageParser:didParseRequestData:
messageParser:didParseResponseData:moreComing:
messageParser:didParseRequestWithURL:
encodeRequestData:
responseHeaderForContentWithLength:
mCurrentMessage
mCurrentHeaderFields
mCurrentBytesReceived
helperForBundle:
stringsForKey:value:table:
cat_localizedStringsForKey:value:table:
weakToStrongObjectsMapTable
lock
objectForKey:
initWithBundle:
setObject:forKey:
unlock
bundleForClass:
URLForResource:withExtension:subdirectory:localization:
initWithContentsOfURL:options:error:
propertyListWithData:options:format:error:
verboseDescription
stringByKeyForTableName:
localizedStringForKey:value:table:
dictionaryWithObjects:forKeys:count:
bundle
mStringByKeyByTableName
mLock
_bundle
initWithFormat:arguments:
UUID
setWithObjects:
decodeObjectOfClasses:forKey:
messageUUID
encodeObject:forKey:
UUIDString
supportsSecureCoding
encodeWithCoder:
initWithCoder:
setMessageUUID:
_messageUUID
cat_assertion
setCat_assertion:
setWithObject:
flags
isReachableForLocalWiFiWithFlags:
isReachableForNetworkWithFlags:
initWithAddress:
reachabilityWithAddress:
configureCallback
isReachable
getCFRunLoop
reachabilityDidChangeWithFlags:
setFlags:
delegateDidChange
reachabilityDidChange:
keyPathsForValuesAffectingReachable
reachabilityForInternetConnection
reachabilityForLocalWiFi
scheduleInRunLoop:forMode:
removeFromRunLoop:forMode:
mReachabilityRef
_flags
initWithName:userInfo:
name
userInfo
taskUUID
initWithTaskUUID:name:userInfo:
setTaskUUID:
setUserInfo:
_taskUUID
_name
_userInfo
date
initWithOperation:
stateDescription
totalUnitCount
isCanceled
queuePriority
isCancelled
setEnqueuedDate:
setPhase:
isReady
phase
operationWillStart
setStartedDate:
dependencies
removeDependency:
endOperationWithError:
endOperationSuccessfullyIfNeeded
callStackSymbols
finalizeOperation
setResultObject:
setError:
standardUserDefaults
numberWithBool:
boolValue
subarrayWithRange:
operationWillFinish
setFinishedDate:
operationDidFinish
addObserver:
addTarget:selector:forOperationEvents:userInfo:delegateQueue:
initWithTarget:selector:events:userInfo:delegateQueue:
automaticallyNotifiesObserversOfUUID
automaticallyNotifiesObserversOfCreatedDate
automaticallyNotifiesObserversOfEnqueuedDate
automaticallyNotifiesObserversOfStartedDate
automaticallyNotifiesObserversOfFinishedDate
isCancelable
keyPathsForValuesAffectingIsCanceled
isExecuting
isFinished
start
operationWillEnqueueOntoOperationQueue:
addTarget:selector:forOperationEvents:userInfo:
addTarget:selector:forOperationEvents:delegateQueue:
setUUID:
createdDate
setCreatedDate:
enqueuedDate
startedDate
finishedDate
error
resultObject
canCancel
mCallStackSymbols
mObserverManager
_canCancel
_UUID
_createdDate
_enqueuedDate
_startedDate
_finishedDate
_phase
_error
_resultObject
_completedUnitCount
_totalUnitCount
notifyObserversOperationDidProgress:
events
allObjects
removeObserver:forKeyPath:context:
removeObserver:
mObservers
mProgressSource
mOperation
mStrongOperation
mIsObserving
invokeActionWithOperation:
target
selector
invocationWithMethodSignature:
setSelector:
numberOfArguments
setArgument:atIndex:
_target
_selector
_events
backgroundQueue
setUnderlyingQueue:
isSuspended
operationCount
maxConcurrentOperationCount
startObserving:
delegateWillAddOperation:
waitUntilFinished
delegateOperationDidFinish:
stopObserving:
operationQueue:operationDidFinish:
operationQueue:willAddOperation:
currentQueue
mainQueue
addOperations:waitUntilFinished:
initWithName:attributes:
localizedStandardCompare:
sortDescriptorWithKey:ascending:selector:
sortedArrayUsingDescriptors:
initialize
propertiesForClass:
propertiesForProtocol:
instanceVariableName
type
objectClass
isReadOnly
isNonAtomic
association
customGetterSelector
customSetterSelector
isWeakReference
_readOnly
_nonAtomic
_weakReference
_instanceVariableName
_type
_objectClass
_association
_customGetterSelector
_customSetterSelector
inputStream
propertyForKey:
createConnectionPairWithConnection:andConnection:bufferSize:
getBoundStreamsWithBufferSize:inputStream:outputStream:
initWithInputStream:outputStream:bufferSize:
getInputStream:outputStream:
initWithInputStream:outputStream:
setSuspended:
initWithData:userInfo:
enqueueSendContext:
bufferSize
initWithStream:length:bufferSize:userInfo:
secureUsingIdentity:trustedCertificates:isServer:
connectionDidInterruptWithError:
streamError
outputStream
socketOptions
adaptiveWriteTimeout
numberWithInteger:
setProperty:forKey:
streamStatus
open
connectionTimeoutInterval
connectionTimedOut
unscheduleStreams
close
setInputStream:
setOutputStream:
sendDidFail:withError:
cancelAllOperations
delegateDidClose
blockOperationWithBlock:
hasBytesAvailable
hasSpaceAvailable
addEntriesFromDictionary:
numberWithInt:
setUsesSSL:
usesSSL
delegateWillSecure
applyCustomEvaluationPoliciesToTrust:
numberWithUnsignedInt:
delegateDidSecure
initWithConnection:trust:
connection:encounteredTrustDecisionWhileTryingToSecure:
customTrustEvaluationPolicies
connectionShouldSendData
connectionDidReceiveData
dataWithLength:
keepAliveEnabled
intValue
keepAliveDelay
keepAliveInterval
keepAliveCount
netServiceType
lastObject
trySendingDataWithContext:error:
hasBytesRemaining
removeLastObject
sendDidSucceed:
bufferedDataWithError:
write:maxLength:
bytesWritten
setBytesWritten:
clientBytesWritten
delegateDidWriteDataForContextIfNeeded:
delegateDidSendData:userInfo:
stream
delegateDidSendDataWithStream:userInfo:
delegateDidFailToSendData:userInfo:error:
delegateDidFailToSendDataWithStream:userInfo:error:
read:maxLength:
delegateDidInterruptWithError:
connectionWillSecure:
connectionDidSecure:
connection:didSendData:userInfo:
connection:didFailToSendData:userInfo:error:
connection:didReceiveData:
connection:didReceiveDataRequestWithURL:
dataLength
delegateDidWriteDataFromStream:totalBytesWritten:totalBytesExpectedToWrite:userInfo:
connection:didWriteDataFromStream:totalBytesWritten:totalBytesExpectedToWrite:userInfo:
connection:didSendDataWithStream:userInfo:
connection:didFailToSendDataWithStream:userInfo:error:
connection:didReceiveStreamData:moreComing:
connectionDidOpen:
connectionDidClose:
connection:didInterruptWithError:
delegateDidReceiveData:
delegateDidReceiveStreamData:moreComing:
delegateDidReceiveDataRequestWithURL:
_stream:handleEvent:
configureStreamSocketOptions
delegateDidOpen
tryEvaluatingPeerTrustWithStream:
createConnectionPairWithConnection:andConnection:
stream:handleEvent:
peerTrust
initWithNetService:
sendData:userInfo:
sendDataWithStream:length:userInfo:
secureUsingClientIdentity:trustedCertificates:
secureUsingServerIdentity:trustedCertificates:
scheduleStreams
trustDecisionDidRespondWithDecisionToAllowUntrustedConnection:
setConnectionTimeoutInterval:
setSocketOptions:
setCustomTrustEvaluationPolicies:
setBufferSize:
mMessageParser
mPendingSendContexts
mConnectionTimeoutTimer
mInterruptionError
mReadBuffer
mTrustedCertificates
mPeerTrustState
mStreamEventQueue
_usesSSL
_connectionTimeoutInterval
_socketOptions
_customTrustEvaluationPolicies
_inputStream
_outputStream
_bufferSize
headerLength
mEncodedData
_bytesWritten
replaceBytesInRange:withBytes:
mBuffer
mHeaderData
mBytesRead
_stream
_dataLength
setAdaptiveWriteTimeout:
setKeepAliveEnabled:
setKeepAliveDelay:
setKeepAliveInterval:
setKeepAliveCount:
setNetServiceType:
copyWithZone:
_adaptiveWriteTimeout
_keepAliveEnabled
_keepAliveDelay
_keepAliveInterval
_keepAliveCount
_netServiceType
respondWithDecisionToAllowUntrustedConnection:
trust
mConnection
mHasResponded
_trust
initWithRequest:clientError:
initWithRequest:
cancelOperationIfNeeded
initWithTaskUUID:
client
remoteTaskOperation:preparedMessage:
request
initWithTaskUUID:request:
canSendNotificationWithName:userInfo:
notificationDelegate
taskOperation:didPostNotificationWithName:userInfo:
progress
updateProgressWithRemoteProgress:
updateCompletedUnitCount:andTotalUnitCount:
processNotificationWithName:userInfo:
remotePhase
unsignedIntegerValue
numberWithUnsignedInteger:
setRemotePhase:
state
invalidRemoteTaskWithRequest:error:
initWithRequest:client:
fetchProgress
postNotificationWithName:userInfo:
processMessage:
clientFailedWithError:
mClientError
_client
_remotePhase
initWithRemoteConnection:
setTransport:
setMessage:
remoteTransportDelegate
transportWillSecure:
transport:encounteredTrustDecisionWhileTryingToSecure:
transportDidSecure:
didSendData
didFailWithError:
objectEnumerator
didInterruptWithError:
cat_unarchiveObjectOfClass:withData:error:
didReceiveMessage:
didInvalidate
createRemoteTransportPairWithTransport:andTransport:
resumeConnection
suspendConnection
invalidateConnection
operationToSendMessage:
remoteTransportSendMessageOperation:sendData:
setRemoteTransportDelegate:
mOperationByUUID
mConnectionHasOpened
_remoteTransportDelegate
transport
message
cat_archivedDataWithRootObject:error:
didEncodeData:
_transport
_message
setMaxConcurrentOperationCount:
stringWithString:
appendFormat:
operations
addDependency:
mLastOperation
initWithError:
sessionUUID
clientUserInfo
initWithSessionUUID:
setSessionUUID:
setClientUserInfo:
_sessionUUID
_clientUserInfo
pendingRemoteTaskUUIDs
serverUserInfo
setServerUserInfo:
setPendingRemoteTaskUUIDs:
_serverUserInfo
_pendingRemoteTaskUUIDs
nativeSocket
socketDidCancel
socketDidReceiveEvent
populateLocalEndPoint
populateRemoteEndPoint
setNativeSocket:
socketQueue
socketDidConnect
socketDidFailWithError:
socketSource
socketDidReceiveListeningEvent
socketDidReceiveData
acceptPendingConnection
initWithNativeSocket:
userQueue
delegateShouldAcceptNewSocket:
delegateDidConnect
delegateDidFailWithError:
socket:shouldAcceptNewSocket:
socket:didReceiveData:
socketDidClose:
socketDidConnect:
socket:didFailWithError:
listenWithEndPoint:error:
connectToEndPoint:error:
suspend
localEndPoint
remoteEndPoint
mIsInvalid
_nativeSocket
_localEndPoint
_remoteEndPoint
_socketSource
_socketQueue
_userQueue
addTransitionToState:triggeringEvent:action:
initWithState:action:
initWithName:
addTransitionToState:triggeringEvent:
transitionWithTriggeringEvent:
enterAction
setEnterAction:
exitAction
setExitAction:
mTranstionByTriggeringEvent
_enterAction
_exitAction
currentState
initialState
addState:
setInitialState:
setCurrentState:
delegateDidEnterState:event:
logLevel
eventForTriggeringEvent:
trigger
delegateWillExitState:event:
action
invokeAction:event:
eventWithTrigger:context:
context
initWithTarget:
addStateWithName:
stateWithName:
canTransitionWithTriggeringEvent:
setLogLevel:
mStateByName
mCalloutReason
_initialState
_currentState
_logLevel
initWithEventTrigger:context:
_trigger
_context
strongToWeakObjectsMapTable
connectWithClientTransport:
disconnectAllClientSessions
initWithBlock:request:
sessionDidInterruptWithError
sessionDidReceiveNotification
sessionDidConnect
sessionDidDisconnect
sessionDidInvalidate
server:clientSession:operationForRequest:error:
server:clientSession:didInterruptWithError:
server:clientSession:shouldConnectWithTransport:
server:clientSession:didReceiveNotificationWithName:userInfo:
server:clientSession:enqueueOperation:
server:clientSessionDidConnect:
server:clientSessionDidDisconnect:
server:clientSessionDidInvalidate:
serverDidInvalidate:
createClientTransport
registerBlock:forRequestClass:
registerLongRunningOperationForRequestClass:
cancelLongRunningOperationsForRequestClass:
clientSessions
setSessionDidConnect:
setSessionDidReceiveNotification:
setSessionDidInterruptWithError:
setSessionDidDisconnect:
setSessionDidInvalidate:
setDidInvalidate:
mServer
mOperationBlocksByRequestClassName
mLongRunningOperationRequestClassNames
mLongRunningOperationsByUUID
_clientSessions
_sessionDidConnect
_sessionDidReceiveNotification
_sessionDidInterruptWithError
_sessionDidDisconnect
_sessionDidInvalidate
_didInvalidate
mBlock
mapTableWithKeyOptions:valueOptions:
valueForKey:
abandonTransport
didPrepareTaskOperation:
enqueueTaskOperation:
sendMessage:
enqueueMessage:
connectWithTransport:
resumeTransport:
connectWithTransportFromTaskClient:
resumeCapturedTransportFromTaskClient:
invalidateWithError:
clearQueuedMessagesAndCancelAllOperationsWithError:
transportDidResume:
transportDidInvalidate:
abandonTransportClearQueuedMessagesAndCancelAllOperationsWithError:
resumeSession
sessionResumedWithTaskUUIDs:
resumeWithTaskUUIDs:
trackTaskOperation:
sendMessageThroughTransport:
processTaskMessage:
processNotificationMessage:
delegateDidDisconnect
delegateWillInvalidateAndInvalidateSessionWithError:
taskOperationDidFailWithInvalidTaskClient:
delegateDidInvalidateAndFinalize
captureTransport
weakObjectsHashTable
delegateWillInvalidate
makeObjectsPerformSelector:withObject:
delegateDidInvalidate
activeOperationDidFinish:
processSessionMessage:
domain
code
taskError
delegatedidReceiveNotificationWithName:userInfo:
client:didReceiveNotificationWithName:userInfo:
clientDidConnect:
client:didInterruptWithError:
clientDidDisconnect:
clientWillInvalidate:
clientDidInvalidate:
transportDidConnect:
transport:didSendMessage:
transport:didFailToSendMessage:error:
transport:didReceiveMessage:
transport:didInterruptWithError:
disconnect
mFSM
mTransport
mActiveRemoteTaskOperations
mRemoteTaskByUUID
mEnqueuedMessages
mEnqueuedTaskUUIDs
mOrphanedTransports
mStrongSelf
mSessionDidInvalidateGroup
mIsStarting
initWithTaskUUID:taskError:
setTaskError:
_taskError
decodeObjectOfClass:forKey:
initWithTaskUUID:completedUnitCount:totalUnitCount:
initWithTaskUUID:progress:
setProgress:
_progress
setRequest:
_request
handlesNotifications
defaultCenter
postNotificationName:object:userInfo:
validateRequest:error:
setNotificationDelegate:
remoteUUID
setRemoteUUID:
_notificationDelegate
_remoteUUID
cat_addAssertion:
cat_assertions
initWithOperationUUID:
assertResultObject:isValidForRequestClassName:
classForResultObjectWithRequestClassName:
whitelistedClassForResultObject
requestClassName
progressStateDescription
allocWithZone:
setIsCancelable:
setIsCanceled:
setRequestClassName:
mutableCopyWithZone:
hasPrefix:
progressForOperation:
_isCancelable
_isCanceled
_requestClassName
initWithOperationUUID:requestClass:
setHandlesNotifications:
_handlesNotifications
makeSessionWithClientTransport:
startInvalidatingWithError:
allSessionsDidInvalidate
setValue:forKey:
delegateClientSession:shouldConnectWithTransport:
connectWithTransportFromTaskSession:
delegateClientSessionDidConnect:
delegateClientSessionDidDisconnect:
delegateClientSession:didInterruptWithError:
delegateSessionDidInvalidate:
delegateClientSession:didReceiveNotificationWithName:userInfo:
session:prepareOperationForRequest:error:
session:shouldAcceptConnectionFromTransport:
session:didReceiveNotificationWithName:userInfo:
session:didInterruptWithError:
sessionDidConnect:
sessionDidDisconnect:
sessionWillInvalidate:
sessionDidInvalidate:
session:enqueueOperation:
connectedClientSessions
invalidateAllClientSessions
mSessions
mActiveSessionsByUUID
mInvalidatingSessionsByUUID
mConnectedSessionsByUUID
mAllSessionsDidInvalidateGroup
mOrphanedOperationQueue
strongToStrongObjectsMapTable
resumeCapturedTransportFromTaskSession:
clientDidResumeWithMessage:
evaluateConnectionWithResumeMessage:
acceptConnection
sendResumedMessage
rejectConnection
enqueueDelegateDidInterruptWithError:
didCompleteSendForMessage:
localOperationDidFinish:
invocation
retainArguments
delegateEnqueueOperation:
savePreviousSessionInfo
delegateShouldAcceptConnection
discardPreviousSessionInfo
restorePreviousSessionInfo
allKeys
processStartMessage:
processCancelMessage:
processFetchProgressMessage:
delegatePrepareOperationWithRequest:error:
operationDidIncrementProgress:remoteUUID:
operationDidFinish:remoteUUID:
delegatedidReceiveNotificationWithName:
enqueueOperation:
mOperations
mOperationByRemoteUUID
mPreviousSessionInfo
mRemoteUUIDsByFinishedOperationProgressUpdates
mDelegationQueue
_state
_action
sendHelloMessageAndResumeQueue
enqueueSendForMessage:
resumeQueueAndConnection
cancelHelloMessageAndResumeQueueOperations
suspendQueueAndConnection
enqueueDelegateDidConnect
enqueueDelegateCouldNotConnectWithError:
enqueueDelegateDidReceiveMessage:
cancelAndResumeQueuesAndEnqueueInvalidateConnection
invalidSendForMessage:
enqueueDelegateDidInvalidateAndFinalize
delegateDidResume
resumeQueue
suspendQueue
setQueuePriority:
mControlQueue
mMessageQueue
block
setBlock:
_block
auditSessionIdentifier
processIdentifier
effectiveUserIdentifier
effectiveGroupIdentifier
exportedObject
valueForEntitlement:
setUpConnection
tearDownConnection
remoteObjectProxy
processMessage:completion:
didProcessMessage
_setQueue:
interfaceWithProtocol:
setRemoteObjectInterface:
setExportedObject:
setExportedInterface:
setInterruptionHandler:
setInvalidationHandler:
initWithXPCConnection:
boolValueForEntitlement:
transportSendMessageOperation:processMessage:
mConnectionHasResumed
mConnectionShouldInvalidate
mConnectionHasInvalidated
dateWithTimeIntervalSinceReferenceDate:
cat_dateWithInternetTimeString:
cat_numberWithObject:
cat_dateWithObject:
initWithLocaleIdentifier:
setLocale:
setDateFormat:
cat_RFC3339Formatters
dateFromString:
stringFromDate:
cat_internetTimeString
unsignedIntValue
stringByPaddingToLength:withString:startingAtIndex:
localizedDescription
localizedRecoverySuggestion
formattedCode
verboseDescriptionWithIdentation:
stringByAppendingFormat:
formattedCode:
archivedDataWithRootObject:requiringSecureCoding:error:
cat_archivedDataWithRootObject:
cat_unarchiveObjectOfClasses:withData:
cat_unarchiveObjectOfClasses:withData:error:
unarchivedObjectOfClasses:fromData:error:
cat_unarchivePropertyListObjectWithData:error:
initForReadingFromData:error:
decodePropertyListForKey:
cat_unarchiveObjectOfClass:withData:
cat_unarchivePropertyListObjectWithData:
cat_shiftAndAddIndexesInRange:
addIndexesInRange:
cat_shiftAndRemoveIndexesInRange:
removeIndexesInRange:
containsIndex:
cat_shiftAndAddIndex:
dictionaryFromTXTRecordData:
hasSuffix:
indexesOfObjectsPassingTest:
substringToIndex:
appendData:
dataFromTXTRecordDictionary:
cat_dictionaryFromData:
cat_dataFromDictionary:
setNumberStyle:
whitespaceAndNewlineCharacterSet
stringByTrimmingCharactersInSet:
getObjectValue:forString:range:error:
cat_addDependencies:
currentRunLoop
cat_performBlock:
mainRunLoop
arrayWithArray:
currentMode
cat_performInModes:block:
@16@0:8
B16@0:8
@24@0:8@16
Q16@0:8
B24@0:8@16
v16@0:8
@"NSString"
@"NSData"
@28@0:8@16B24
@44@0:8@16B24@28@?36
v24@0:8@16
v32@0:8@16@24
v40@0:8@16@24Q32
Q24@0:8@16
@"NSMutableDictionary"
@32@0:8@16Q24
@20@0:8B16
@28@0:8B16@20
@"NSMutableArray"
@"NSObject<OS_dispatch_source>"
@"NSObject<OS_dispatch_queue>"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@36@0:8@16@24B32
@"_CATArbitratorRegistrationEntry"
@32@0:8@16@?24
v36@0:8@16@24B32
B24@0:8i16i20
@"NSObject<OS_dispatch_group>"
@32@0:8@16@24
@"NSArray"
@"NSOperationQueue"
v24@0:8@"NSOperation"16
v32@0:8@?16@24
@?16@0:8
v24@0:8@?16
v20@0:8B16
@24@0:8Q16
v32@0:8@16@?24
v40@0:8@16@24@32
v48@0:8@16@24@32^v40
Q32@0:8@16@24
v24@0:8B16B20
v48@0:8@16Q24Q32Q40
@"NSMutableSet"
@"NSMutableIndexSet"
@"NSSet"
@"NSTimer"
@"NSValueTransformer"
@"<CATCollectionControllerDelegate>"
@"NSPredicate"
@"NSIndexSet"
@28@0:8@16I24
I16@0:8
@"CATAddress"
B32@0:8r*16Q24
v28@0:8@16B24
^{__CFHTTPMessage=}
@"NSDictionary"
@"<CATHTTPMessageParserDelegate>"
@40@0:8@16@24@32
@"NSLock"
@"NSBundle"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSUUID"
B20@0:8I16
v20@0:8I16
^{__SCNetworkReachability=}
@"<CATNetworkReachabilityDelegate>"
v40@0:8@16:24Q32
v48@0:8@16:24Q32@40
v56@0:8@16:24Q32@40@48
v24@0:8Q16
q16@0:8
v24@0:8q16
@"_CATObserverManager"
@"NSDate"
@"NSError"
@"CATOperation"
@56@0:8@16:24Q32@40@48
:16@0:8
@"<CATOperationQueueDelegate>"
@24@0:8#16
@32@0:8r*16r*24
v32@0:8^@16^@24
v40@0:8^@16^@24Q32
v32@0:8@"CATHTTPMessageParser"16@"NSData"24
v36@0:8@"CATHTTPMessageParser"16@"NSData"24B32
v32@0:8@"CATHTTPMessageParser"16@"NSURL"24
v32@0:8@16Q24
v32@0:8@"NSStream"16Q24
^{__SecTrust=}16@0:8
@40@0:8@16@24Q32
v40@0:8@16Q24@32
v32@0:8^{__SecIdentity=}16@24
B36@0:8^{__SecIdentity=}16@24B32
i24@0:8^{__SecTrust=}16
B32@0:8@16^@24
v48@0:8@16Q24Q32@40
d16@0:8
v24@0:8d16
@"CATHTTPMessageParser"
@"NSMutableData"
@"CATSerialOperationQueue"
@"<CATRemoteConnectionDelegate>"
@"CATRemoteConnectionSocketOptions"
@"NSInputStream"
@"NSOutputStream"
@24@0:8^@16
@"NSData"24@0:8^@16
@48@0:8@16Q24Q32@40
@24@0:8^{_NSZone=}16
@"NSNumber"
@32@0:8@16^{__SecTrust=}24
@"CATRemoteConnection"
v32@0:8q16q24
@"CATTaskClient"
v48@0:8@16@24@32@40
v56@0:8@16@24Q32Q40@48
v24@0:8@"CATRemoteConnection"16
v32@0:8@"CATRemoteConnection"16@"CATRemoteConnectionTrustDecision"24
v40@0:8@"CATRemoteConnection"16@"NSData"24@32
v48@0:8@"CATRemoteConnection"16@"NSData"24@32@"NSError"40
v32@0:8@"CATRemoteConnection"16@"NSData"24
v32@0:8@"CATRemoteConnection"16@"NSURL"24
v56@0:8@"CATRemoteConnection"16@"NSInputStream"24Q32Q40@48
v40@0:8@"CATRemoteConnection"16@"NSInputStream"24@32
v48@0:8@"CATRemoteConnection"16@"NSInputStream"24@32@"NSError"40
v36@0:8@"CATRemoteConnection"16@"NSData"24B32
v32@0:8@"CATRemoteConnection"16@"NSError"24
@"<CATRemoteTransportDelegate>"
@"CATRemoteTransport"
@"CATMessage"
@"NSOperation"
v20@0:8i16
i16@0:8
@20@0:8i16
@"<CATSocketDelegate>"
@"CATEndPoint"
v40@0:8@16@24:32
v24@0:8:16
v32@0:8:16@24
@"CATState"
@48@0:8@16@24@32^@40
B40@0:8@16@24@32
@"CATTaskOperation"48@0:8@"CATTaskServer"16@"CATTaskSession"24@"CATTaskRequest"32^@40
v40@0:8@"CATTaskServer"16@"CATTaskSession"24@"NSError"32
B40@0:8@"CATTaskServer"16@"CATTaskSession"24@"CATTransport"32
v48@0:8@"CATTaskServer"16@"CATTaskSession"24@"NSString"32@"NSDictionary"40
v40@0:8@"CATTaskServer"16@"CATTaskSession"24@"NSOperation"32
v32@0:8@"CATTaskServer"16@"CATTaskSession"24
v24@0:8@"CATTaskServer"16
v32@0:8@?16#24
v24@0:8#16
@"CATTaskServer"
@"NSMapTable"
@32@0:8@?16@24
v24@0:8@"CATTransport"16
v32@0:8@"CATTransport"16@"CATMessage"24
v40@0:8@"CATTransport"16@"CATMessage"24@"NSError"32
v32@0:8@"CATTransport"16@"NSError"24
@"CATStateMachine"
@"CATTransport"
@"NSHashTable"
@"<CATTaskClientDelegate>"
@40@0:8@16q24q32
@"CATTaskProgress"
@"CATTaskRequest"
B32@0:8@16@24
@"<CATTaskOperationNotificationDelegate>"
#24@0:8@16
@32@0:8@16#24
@40@0:8@16@24^@32
@"CATTaskOperation"40@0:8@"CATTaskSession"16@"CATTaskRequest"24^@32
B32@0:8@"CATTaskSession"16@"CATTransport"24
v40@0:8@"CATTaskSession"16@"NSString"24@"NSDictionary"32
v32@0:8@"CATTaskSession"16@"NSError"24
v24@0:8@"CATTaskSession"16
v32@0:8@"CATTaskSession"16@"NSOperation"24
@"CATOperationQueue"
@"<CATTaskServerDelegate>"
v40@0:8@"CATTaskOperation"16@"NSString"24@"NSDictionary"32
@32@0:8@16^@24
@"CATTaskSession"
@"<CATTaskSessionDelegate>"
@32@0:8@16:24
@"<CATTransportDelegate>"
v32@0:8@"CATMessage"16@?<v@?>24
@"NSXPCConnection"
@"CATXPCTransport"
@24@0:8q16
@32@0:8#16@24
@40@0:8#16@24^@32
v32@0:8{_NSRange=QQ}16
v32@0:8Q16Q24
