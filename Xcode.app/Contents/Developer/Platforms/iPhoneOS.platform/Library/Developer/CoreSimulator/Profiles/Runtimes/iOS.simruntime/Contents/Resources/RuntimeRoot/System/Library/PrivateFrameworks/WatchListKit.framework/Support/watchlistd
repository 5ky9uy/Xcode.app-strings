TVApp
get-watchlist-settings
update-watchlist-settings
uvSearch/max-local-settings-age-seconds
uvSearch/uts-api-base-url
uvSearch/init-config-get-url-length-limit
uvSearch/routes/init-config-path
uvSearch/nowplaying-enabled
uvSearch/sports-enabled
uvSearch/locationEnabled
uvSearch/enabled-notification-types
push-notifications/environment
metrics
metrics/metricsUrl
privacyAcknowledgementUrl
sign-sap-setup-cert
sign-sap-setup
signed-actions
sign-sap-request
sign-sap-response
trustedDomains
tvSubscriptionStatus
tvSubscriptionStatusMaxAgeInSeconds
tvFederatedPunchoutTTL
tvFederatedPunchoutExtensionTTL
tvFederatedPunchoutResumeTimeEpsilon
v8@?0
%@ %@
bundle_id
milliseconds_since_event
profile_id
channel
content
cause
expected_start_time_epoch_millis
cleanup_time_epoch_millis
contract_or_timed
Tune_In
Event_End
Event_Start
Tune_Out
(unknown: %i)
Not_Specified_Implied_Legacy_Contract
Contract
Timed
v16@?0@"NSError"8
Error communicating with client: %@
WLDClientConnection.deletePlaybackActivityWithIdentifier
Delete requested for content ID: %@, bundle ID: %@
v20@?0B8@"NSError"12
Invalid delete requested for content ID: %@, bundle ID: %@. Ignoring.
WLDClientConnection.requestNowPlayingSummaries
v16@?0@"NSArray"8
WLDClientConnection.requestDecoratedNowPlayingSummaries
v16@?0@"NSDictionary"8
WLDClientConnection.reportPlayback
Ignoring reportPlayback request from client lacking the entitlement: %@
Error: %@
Start auth
v24@?0@"AMSAuthenticateResult"8@"NSError"16
Auth response: %@ error; %@
Connection: ping!
WLDClientConnection.fetchApplications
WLDClientConnection.readSettingsStore
WLDClientConnection.writeSettingsStore
v12@?0B8
WLDClientConnection.postSettings
WLDClientConnection.fetchSettings
v24@?0@"NSDictionary"8@"NSError"16
WLDClientConnection.fetchLocationAuthorizationStatus
v16@?0q8
WLDClientConnection.prewarm
WLDClientConnection.saveOffer
WLDClientConnection.removeOffer
WLDClientConnection.fetchOffers
v24@?0@"NSArray"8@"NSError"16
WLDClientConnection.fetchSubscriptionData
v24@?0@"WLKSubscriptionData"8@"NSError"16
WLDClientConnection.refreshSubscriptionData
Connection invalidated for client: %@
WLDServerInitException
-init is not supported. Use +server
WLDServer - dealloc
WLDServer - Failed to get signing identifier
WLDServer - Got connection for client '%@'
ClientIdentifierOverride
com.apple.watchlistd
WLDServer - ClientIdentifierOverride: '%@'
WLDServer - Accepted connection for client '%@'
WLDServer - Failed to get client identifier '%@'
WLDServer - Accepted suppression connection for client '%@'
WLDServer - Dropping connection from unentitled client: %@
WLDServer - start
com.apple.watchlistd.xpc
WLDServer - start main
WLDServer - handleSubscriptionRegistration
WLDServer - handleAMSDeviceOffer
WLDServer - handleVideosUIInvalidationNotification %@
WLDServer - handleUNWidgetRegistration
WLDServer - _handleRestrictionsChangedNotification %@
WLDServer - _handleContinueWatchingNotification %@
WLDServer - _handleFamilyUpdateNotification: %@
payloadType
mercury:tvapp:BadgeAlertAdd
mercury:tvapp:BadgeAlertRemove
mercury:tvapp:BadgeAlertNoBadge
offerSource
MercurySilentNotification
WLKFederatedPunchoutErrorDomain
channelID
canonicalID
externalID
bundleID
matchTimeSeconds
adamID
consented
v32@?0@"NSString"8@"WLKFederatedPunchout"16^B24
com.apple.tv
payload
value
brand_id
X-Apple-Next-Report-Expected-In-Milliseconds
activityPlay
POST
application/x-protobuf
Content-Type
ClientVersion
WLDPlayActivityReportOperation: Error: activityPlay route not found
v24@?0@"WLKServerConfigurationResponse"8@"NSError"16
eventType
notificationRequest
eventVersion
notificationType
AMSDeviceOffer
xp_amp_notifications
WLDMetricsUtilities.sendMetricsEvents
v24@?0@8@"NSError"16
com.apple.watchlistd.defaultworkqueue
WLDTransactionBlockOperation.init
retry_period_in_seconds
channel_canonical_id
channel_brand_id
channel_external_live_service_id
channel_internal_leg_id
expiresAt
invalidate
upNextChanges
type
favoriteTeamsChanges
Up Next
Favorite Teams
version
headers
play_events
opt_in_events
opt_out_events
live_activity_events
WLDPlaybackReporter.reportPlayback
could not resolve lookupID for %@
v24@?0@"WLKPlayActivityMetadata"8@"NSError"16
v24@?0@"NSString"8@"NSError"16
Invalid playbackType.
Could not resolve lookupID.
Item is not available.
DefaultPlaybackSessionID
DisableDirectPlaybackReporting
WLDPlaybackManager:UpdateHandler Direct-reporting is disabled by user defaults
WLDPlaybackManager: Ignoring MediaRemote NPI updates for %@; application supports direct-reporting!
WLDPlaybackNowPlayingObserver.updateHandler
v24@?0@"WLKPlaybackSummary"8@"NSString"16
WLDPlaybackManager: Direct playback reporting is disabled by user default
WLDPlaybackManager: Creating directPlay observer for %@
WLDPlaybackManager: dropping report. Exceeded rate limit %@ %@
v32@?0@"NSString"8@"WLKPlaybackSummary"16^B24
WLDPlaybackManager: Found untracked NPI. Will fetch canonical
<Untracked NPI %ld>
WLDPlaybackManager: begin decorating (%@) summaries
WLDPlaybackManager: Skipping stopped summary.
v32@?0@"NSString"8@"WLKDecoratedPlaybackSummary"16^B24
WLDPlaybackManager: Decorated [%@] : %@
WLDPlaybackManager: done decorating summaries
WLDPlaybackManager: handleSubscriptionRegistration
WLDPlaybackManager: handleSubscriptionRegistration: No sbid diff, considering all sbids
WLDPlaybackManager: handleSubscriptionRegistration: Not continuing. sbids:%@ validation:%d
WLDPlaybackManager: handleSubscriptionRegistration: done refreshing library. Will request init/config with default cache policy
WLDPlaybackManager: handleSubscriptionRegistration: done fetch configuration after subscription change.
WLDPlaybackManager: asked to check pending reports
com.apple.watchlistd.PlaybackManagerQueue
WLDPlaybackManager: invoked default session reporter
WLDPlaybackManager: Returning a previously created WLDPlaybackReporter
WLDPlaybackManager: Creating a WLDPlaybackReporter
WLDPlaybackManager: Returning a previously created WLDLivePlaybackReporter
WLDPlaybackManager: Creating a WLDLivePlaybackReporter
WLDPlaybackManager: End session: %@
WLDPlaybackManager: Generating stopped playback event due to app termination.
WLDPlaybackManager: enqueue: %@ for sessionID %@
WLDPlaybackManager: User has not granted access (1) for: %@
WLDPlaybackManager: User has not granted access (2) for: %@
WLDPlaybackManager: Successful playback report %@
WLDPlaybackManager: Session %@ has PlaybackStateStopped
WLDPlaybackManager: An iTunes account was not found for %@
WLDPlaybackManager: ErrorHandler: Fatal error. Cleaning up summary: %@
WLDPlaybackManager: ErrorHandler: Non-fatal error. Will attempt report again on reachability change and/or app launch. %@
WLDPlaybackManager._handleReportingError
WLDPlaybackManager: Feature disabled because TV app is not installed.
WLDPlaybackManager: Feature disabled in EDU mode.
WLDPlaybackManager: User has private mode enabled
WLDPlaybackManager: Error: DSID missing.
WLDPlaybackManager: Error: bundleIdentifier is required.
WLDPlaybackManager: An active iTunes account is required to report play activity events.
WLDPlaybackManager: Feature disabled for Managed Apple IDs.
WLDPlaybackManager: Error fetching Now playing from URL bag.
WLDPlaybackManager: Error: Now playing not enabled in URL bag.
Now playing not enabled in URL bag
WLDPlaybackManager: Settings sync failed
WLDPlaybackManager: User has not opted into feature
User has not opted into feature
WLDPlaybackManager: Failed to load channel utils
WLDPlaybackManager: No channel associated with channel ID: %@. Ignoring report
channel lookup failed
WLDPlaybackManager: Channel with ID %@ is not watchlist enabled. Ignoring report.
Channel %@ is not watchlist enabled
WLDPlaybackManager: Channel with ID %@ does not have playback tracking enabled. Ignoring report.
Channel %@ does not have playback tracking enabled
WLDPlaybackManager: should not prompt because we are already prompting
WLDPlaybackManager: No channel found for: %@
WLDPlaybackManager: User has denied access for: %@ %@
WLDPlaybackManager: User has allowed access for: %@ %@
WLDPlaybackManager: Will not prompt due to network being unavailable
WLDPlaybackManager: Could not get process handle %@
WLDPlaybackManager: Will not prompt because application is not foregrounded
WLDPlaybackManager: promptForBundleID: %@
WLDPlaybackManager: Settings recall after prompting for bundle:%@ external:%@ %@
WLDPlaybackManager: scanning for pending reports
B24@?0@"NSURL"8@"NSError"16
WLDPlaybackManager: [Error] scanning for pending reports %@ (%@)
WLDPlaybackManager: _scanForPendingReports no iTunes account for ID: %@
WLDPlaybackManager: _scanForPendingReports secure unarchiver error: %@
WLDPlaybackManager: Deleting invalid item: %@
WLDPlaybackManager: Found pending playback report. Enqueuing.
WLDPlaybackManager: Releasing pending reports transaction.
WLDPlaybackManager: Network reachability changed. Network is reachable:%d
WLDPlaybackManager: _serialize: secure unarchiver error: %@
pending
%@-%@
WLDPlaybackManager: Error serializing summary for notification: %@
SIGTERM received, exiting.
com.apple.notifyd.matching
v16@?0@"NSObject<OS_xpc_object>"8
Got notifyd launch notification: %@
com.apple.VideoSubscriberAccount.DidRegisterSubscription
com.apple.AppleMediaServices.deviceOffersChanged
com.apple.VideosUI.StoreAcquisitionCrossProcessNotification
com.apple.VideosUI.UpNextRequestDidFinishNotification
com.apple.VideosUI.PlayHistoryUpdatedNotification
com.apple.tv.TVWidgetExtension.Register
com.apple.WLDAppVisibilitymanager
WLDAppVisibilityManager - reachability changed
WLDAppVisibilityManager - account changed
WLDAppVisibilityManager - TV app enabled *override*: %d
WLDAppVisibilityManager - active account storefront: %@
WLDAppVisibilityManager - device storefront: %@
WLDAppVisibilityManager - Error: no active account. Will retry on account change.
WLDAppVisibilityManager - Error: Nil storefront identifier.
WLDAppVisibilityManager - operation was cancelled during bag fetch.
WLDAppVisibilityManager - TV app will be enabled: %d
WLDAppVisibilityManager - Unable to update TV app visibility: %@. Will try again on reachability change.
WLDAppVisibilityManager - Unable to update TV app visibility, bag fetch timed out. Will try again on reachability change.
WLDAppVisibilityManager - cancelling queued op %@
RegionCode
WLDAppVisibilityManager - Enqueue appVisibilityOp for region: %@ %@
Enabled
Disabled
com.apple.watchList
com.apple.tv.upnext
com.apple.tv.favoriteTeams
com.apple.tv-default
WLDPushNotificationController.didReceiveMessageForTopic
WLDPushNotificationController.handleAction
identifier
cbids
dbids
ibids
sbids
vppaState
metricsBase
WLDPushNotificationController._reportBulletinMetrics
WLDPushNotificationController._reportMercuryMetrics
WLDPushNotificationController._postNotificationWithPayload
interruptionLevel
entityId
coalescingId
DeviceClass
iPad
gameStartWithFollow
localizedTitle
InternalBuild
localizedText
threadId
displayEndTime
actions
isTvAppAction
bundleIds
brandId
clientActionDeepLinks
Universal
settingType
Explicit
Implicit
Marketing
hasScore
suppressIfTunedIn
UserNotifications
KettleTCC
notification authorization status:%ld.
v16@?0@"UNNotificationSettings"8
WLDPushNotificationController._loadURLBagWithCompletionHandler
APSEnvironment
com.apple.WatchListKit
v28@?0@8B16@"NSError"20
com.apple.aps.watchlistd
com.apple.aps.watchlistd.dev
com.apple.aps.watchlistd.demo
com.apple.sportsd.session.xpc
Ios_Live
BYSetupAssistantNeedsToRun
content_canonical_id
content_brand_id
content_external_playable_id
content_media_length_in_milliseconds
content_is_done
content_internal_leg_id
WLDRateLimiter
-init not supported. Use -initWithRate:burst: instead
WLDRateLimiterAccess
WLDPlaybackDirectPlayObserver: Start Observing (%@)
WLDPlaybackDirectPlayObserver: _handleStateChange: appIsRunning: %@
v32@?0@"RBSProcessMonitor"8@"RBSProcessHandle"16@"RBSProcessStateUpdate"24
v16@?0@"<RBSProcessMonitorConfiguring>"8
WLDPlaybackDirectPlayObserver: Stop Observing
WLDPlaybackDirectPlayObserver: No process state matching %@
adamId
description
downgrading
subscribed
serialNumbers
offerIdentifer
offerType
AMSDeviceOfferTypeTV
com.apple.TV
WLDDeviceOfferManager
PreviouslyBadgedTVOffers
AMSDeviceOfferTypeAppleMusic
AMSDeviceOfferTypeiCloud
AMSDeviceOfferTypeAppleCare
AMSDeviceOfferTypeUnknown
WLDDeviceOfferManager._reportAMSDeviceOfferMetrics
user_agent
x_dsid
x_apple_storefront
x_guid
x_userid_keyspace
x_userid_key
cookies
client_version
SubscriptionSyncLastSync
SubscriptionSyncUseStubbedData
IsTVPlusSubscriberLastSetValue
25EF2050-5D1D-419D-AC15-CCA299E77EE0
com.apple.WatchListKit.SubscriptionStore
SR-%@-%@
subscription.plist
stubbedData.plist
WLDPlaybackNowPlayingObserverQueueNotif
WLDPlaybackNowPlayingObserverQueueLookup
v24@?0^{__CFDictionary=}8^v16
WLDPlaybackNowPlayingObserver._updateTransactionState
v12@?0I8
FederatedV2
v24@?0^{__CFArray=}8^{__CFError=}16
v32@?0@"MRPlayerPath"8Q16^B24
significant change
content changed
nominal elapsed time update
elapsed time drift exceeds maximum: %.5f
TVAccessViewServiceViewController
com.apple.TVAccessViewService
WLDRemoteAlertPresenter: security does not allow prompting
WLDRemoteAlertPresenter: already prompting
WLDRemoteAlertPresenter: promptForBundleID: %@
WLDRemoteAlertPresenter deactivated
WLDLivePlaybackReporter: Received nil summary while tuned in, generating tune-out
WLDLivePlaybackReporter: Received nil summary while idle, ignoring
WLDLivePlaybackReporter: Error: Failed to resolve channel %@
WLDLivePlaybackReporter.reportPlayback
v24@?0@"WLKSchedule"8@"NSError"16
WLDLivePlaybackReporter: decorate failed -- unsupported playback type
WLDLivePlaybackReporter: [StateMachine][Idle] input:[%@]
WLDLivePlaybackReporter._processInput
WLDLivePlaybackReporter: [StateMachine][Idle] No action for input: %lu %@
WLDLivePlaybackReporter: [StateMachine][TunedIn] input:[%@]
WLDLivePlaybackReporter: [StateMachine][TunedIn] No action for input: %lu %@
WLDLivePlaybackReporter: will report tune %@
WLDLivePlaybackReporter: will report event
WLDLivePlaybackReporter: Live activity report success: %d
WLDLivePlaybackReporter: Will not report. We have no events
WLDLivePlaybackReporter: decorate failed %@
WLDLivePlaybackReporter: Live activity content boundary report success: %d numEvents: %lu Error: %@
WLDLivePlaybackReporter: No events found at content boundary
WLDPlaybackReporter: Error: Failed to resolve channelID %@
WLDLivePlaybackReporter: Live summary doesn't meet preconditions. channelID:%@ serviceID:%@
Live summary doesn't meet preconditions.
WLDLivePlaybackReporter: Error: Failed to resolve channelID %@
WLDLivePlaybackReporter: EBS summary doesn't meet preconditions. channelID:%@ contentID:%@
EBS summary doesn't meet preconditions.
WLDLivePlaybackReporter: success: %d response:%@
WLDLivePlaybackReporter: Queueing activity report for events: %p
Unknown
TuneIn
TuneOut
ContentBoundary
ScheduleBoundary
_current event ends
_next event begins
_no event found
WLDLivePlaybackReporter: Set up timer for %@ context: %@
WLDLivePlaybackReporter: Requested fire date exceeds max, clamping: %@
WLDLivePlaybackReporter: Done processing timer input: %lu. success %d
WLDLivePlaybackReporter: Cancelling existing timer
external_playable_id
play_head_in_milliseconds
is_done
external_show_id
media_length_in_milliseconds
media_type
is_current
is_show_open
canonical_id
canonical_show_id
internal_leg_id
main_content_length_in_milliseconds
main_content_play_head_in_milliseconds
NOT_SPECIFIED
MOVIE
SPORTS_VOD
addBagKey:valueType:
registerBagKeySet:forProfile:profileVersion:
bagForProfile:profileVersion:
wlk_defaultBag
registerAdditionalBagKey:withValueType:
description
dictionaryRepresentation
stringWithFormat:
dictionary
setObject:forKey:
numberWithLongLong:
setBundleId:
setProfileId:
setChannel:
setContent:
allocWithZone:
init
copyWithZone:
isMemberOfClass:
isEqual:
hash
mergeFrom:
hasBundleId
setMillisecondsSinceEvent:
setHasMillisecondsSinceEvent:
hasMillisecondsSinceEvent
hasProfileId
hasChannel
hasContent
cause
setCause:
setHasCause:
hasCause
causeAsString:
StringAsCause:
setExpectedStartTimeEpochMillis:
setHasExpectedStartTimeEpochMillis:
hasExpectedStartTimeEpochMillis
setCleanupTimeEpochMillis:
setHasCleanupTimeEpochMillis:
hasCleanupTimeEpochMillis
contractOrTimed
setContractOrTimed:
setHasContractOrTimed:
hasContractOrTimed
contractOrTimedAsString:
StringAsContractOrTimed:
readFrom:
writeTo:
copyTo:
bundleId
millisecondsSinceEvent
profileId
channel
content
expectedStartTimeEpochMillis
cleanupTimeEpochMillis
.cxx_destruct
_cleanupTimeEpochMillis
_expectedStartTimeEpochMillis
_millisecondsSinceEvent
_bundleId
_cause
_channel
_content
_contractOrTimed
_profileId
_has
TB,R,N
T@"NSString",&,N,V_bundleId
TB,N
Tq,N,V_millisecondsSinceEvent
T@"NSString",&,N,V_profileId
T@"UWLLiveActivityEventChannel",&,N,V_channel
T@"UWLLiveActivityEventContent",&,N,V_content
Ti,N,V_cause
Tq,N,V_expectedStartTimeEpochMillis
Tq,N,V_cleanupTimeEpochMillis
Ti,N,V_contractOrTimed
isEqualToString:
copy
setRemoteObjectInterface:
remoteObjectProxyWithErrorHandler:
setExportedInterface:
setExportedObject:
_didInvalidate
setInvalidationHandler:
resume
initWithIdentifier:
initWithBundleID:externalID:
makeRequestWithCompletion:
sharedManager
fetchNowPlayingSummaries:
fetchDecoratedNowPlayingSummaries:
reportPlayback:sessionID:completion:
connection
handleDirectPlaybackSummary:sessionID:
endDirectPlaybackSession:
checkPendingReports
ams_sharedAccountStore
ams_activeiTunesAccount
initWithAccount:options:
performAuthentication
addFinishBlock:
_promptForBundleID:
sharedInstance
fetchApplications:
sharedSettings
_dictionaryOnDisk:
_writeToDisk:completion:
sanitizeError:
_postChangeDictionaryToCloud:completion:
_fetchSyncDictionary:
defaultLocationManager
_locationAuthorizationStatus:
boolForKey:
defaultOfferManager
saveOffer:completionHandler:
removeOfferByBadgeId:completionHandler:
fetchOffers:completion:
clearOffers:
fetchSubscriptionData:callerProcessID:completion:
sharedFederatedPunchoutReporter
recordPunchout:
clientConnectionDidInvalidate:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
requestNowPlayingSummaries:
requestDecoratedNowPlayingSummaries:
reportPlayback:completion:
endPlaybackSession:
checkPendingPlaybackReports
requestConsentForBundleID:forceAuth:replyHandler:
deletePlaybackActivityWithIdentifier:bundleID:
readSettingsStore:
writeSettingsStore:replyHandler:
postSettings:replyHandler:
fetchSettings:
fetchLocationAuthorizationStatus:
ping
prewarm
refreshSubscriptionData:
reportFederatedPunchout:
initWithConnection:clientIdentifier:
clientIdentifier
delegate
setDelegate:
_remoteObjectProxy
_connection
_clientIdentifier
_delegate
T@"NSXPCConnection",R,N,V_connection
T@"NSString",R,C,N,V_clientIdentifier
T@"<WLDClientConnectionDelegate>",W,N,V_delegate
_init
raise:format:
defaultCenter
removeObserver:
dealloc
setHARLoggingEnabled:
auditToken
length
addClient:
initWithCapacity:
addObject:
removeObject:
initWithMachServiceName:
sharedObserver
_handleRestrictionsChangedNotification:
addObserver:selector:name:object:
_handleFamilyUpdateNotification:
_handleContinueWatchingNotification:
handleSubscriptionRegistration
processDeviceOffers
_invalidateWidgets
registerOpportunisticTopics
requestInvalidation
requestReload
server
listener:shouldAcceptNewConnection:
start
handleAMSDeviceOffer
handleVideosUIInvalidationNotification:
handleUNWidgetRegistration
_clients
_xpcListener
_playbackManager
_pushController
_getBadgeAlertType:
_getBadgeID:
addBadgeIdentifier:
currentBadgeNumber
setBadgeNumber:withCompletionHandler:
wlk_dictionaryForKey:
_addMercurySilentNotifOfferSource:badgeId:
removeBadgeIdentifier:
wlk_stringForKey:
count
addEntriesFromDictionary:
shouldHandleNotification:
handleNotification:shouldBadge:
metricsController
setMetricsController:
_metricsController
T@"AMSMetrics",&,N,V_metricsController
unsignedIntegerValue
numberWithUnsignedInteger:
integerValue
numberWithInteger:
punchoutTime
initWithTimeInterval:sinceDate:
setTtl:
matchTime
setMatchTime:
failureReason
setFailureReason:
expiry
TQ,N
T@"NSDate",&,N
Tq,N
setMaxConcurrentOperationCount:
setName:
queue
channelID
canonicalID
ledger
objectForKey:
_reportPunchoutEvent:withPlaybackSummary:
integerForKey:
valueWithError:
numberWithInt:
_configureTimerWithDate:
addOperationWithBlock:
sharedInstanceFiltered
bundleID
channelForBundleID:
externalContentID
contentID
elapsedTime
resumeTimeSeconds
removeObjectForKey:
_metadataForEventWithPunchout:playbackSummary:
errorWithDomain:code:userInfo:
analyticsConnection
serviceWithErrorHandler:
recordFederatedPunchoutEventWithError:metadata:
wlk_setObjectUnlessNil:forKey:
timeIntervalSince1970
numberWithDouble:
appAdamID
isConsented
numberWithBool:
timer
underlyingQueue
timeIntervalSinceNow
compare:
enumerateKeysAndObjectsUsingBlock:
removeObjectsForKeys:
setTimer:
recordPlaybackSummary:
setAnalyticsConnection:
setQueue:
setLedger:
_analyticsConnection
_queue
_timer
_ledger
T@"VSAnalyticsServiceConnection",&,N,V_analyticsConnection
T@"NSOperationQueue",&,N,V_queue
T@"NSObject<OS_dispatch_source>",&,N,V_timer
T@"NSMutableDictionary",&,N,V_ledger
valueForEntitlement:
boolValue
bundleRecordWithApplicationIdentifier:error:
entitlements
objectForKey:ofClass:
wlk_numberForKey:
actionTypeForNotification:
accountIdentifierForNotification:
setKey:
setValue:
hasKey
hasValue
value
_key
_value
T@"NSString",&,N,V_key
T@"NSString",&,N,V_value
setBrandId:
hasBrandId
brandId
_brandId
T@"NSString",&,N,V_brandId
doesNotRecognizeSelector:
initWithURLRequest:options:
signpostIdentifier
serverRouteNamed:
requestWithURL:cachePolicy:timeoutInterval:
setHTTPMethod:
setValue:forHTTPHeaderField:
currentEnvironment
platform
_protoForURLRequest:
setEnvelope:
data
setHTTPBody:
fetchConfigurationWithCompletionHandler:
httpResponse
allHeaderFields
wlk_caseInsensitiveValueForKey:
encoder
account
ams_DSID
stringValue
ams_storefront
setXAppleStorefront:
_userAgentHeaderForRequest:
setUserAgent:
setXDsid:
setPfm:
setClientVersion:
ams_cookiesForURL:
countByEnumeratingWithState:objects:count:
name
setCookies:
setVersion:
setHeaders:
playEvents
addPlayEvents:
livePlayEvents
addLiveActivityEvents:
requestByEncodingRequest:parameters:
resultWithError:
valueForHTTPHeaderField:
initWithLivePlayEvents:
initWithPlayEvents:
prepareURLRequest:
nextExpectedReportMillis
setPlayEvents:
setLivePlayEvents:
envelope
_playEvents
_livePlayEvents
_envelope
T@"NSArray",C,N,V_playEvents
T@"NSArray",C,N,V_livePlayEvents
T@"UWLMessageWireEnvelope",&,N,V_envelope
T@"NSNumber",R,N
enqueueEvents:
flush
sendMetricsEvents:metricsController:
suppressNotificationsFor:completion:
enableNotificationsFor:completion:
interfaceWithProtocol:
setSportsNotificationSuppression:forEventID:
setUnderlyingQueue:
_transaction
retryPeriodInSeconds
setRetryPeriodInSeconds:
_retryPeriodInSeconds
Ti,N,V_retryPeriodInSeconds
setChannelCanonicalId:
setChannelBrandId:
setChannelExternalLiveServiceId:
setChannelInternalLegId:
hasChannelCanonicalId
hasChannelBrandId
hasChannelExternalLiveServiceId
hasChannelInternalLegId
channelCanonicalId
channelBrandId
channelExternalLiveServiceId
channelInternalLegId
_channelBrandId
_channelCanonicalId
_channelExternalLiveServiceId
_channelInternalLegId
T@"NSString",&,N,V_channelCanonicalId
T@"NSString",&,N,V_channelBrandId
T@"NSString",&,N,V_channelExternalLiveServiceId
T@"NSString",&,N,V_channelInternalLegId
_debugDescriptionForNotificationType:
wlk_dateFromMillisecondsSince1970ForKey:
wlk_boolForKey:defaultValue:
date
_handlePayloadExpiredForNotificationType:
_handlePayloadInvalidatedForNotificationType:
_handlePayload:forNotificationType:
_reportMetrics:
delete:
defaultManager
handleRefreshCacheNotification
initWithDictionary:
items
merge:completion:
initWithTopic:
addPropertiesWithDictionary:
arrayWithObjects:count:
handleNotification:
removeAllObjects
objectAtIndex:
addOptInEvents:
addOptOutEvents:
playEventsCount
clearPlayEvents
playEventsAtIndex:
optInEventsCount
clearOptInEvents
optInEventsAtIndex:
optOutEventsCount
clearOptOutEvents
optOutEventsAtIndex:
liveActivityEventsCount
clearLiveActivityEvents
liveActivityEventsAtIndex:
playEventsType
optInEventsType
optOutEventsType
liveActivityEventsType
version
headers
optInEvents
setOptInEvents:
optOutEvents
setOptOutEvents:
liveActivityEvents
setLiveActivityEvents:
_headers
_liveActivityEvents
_optInEvents
_optOutEvents
_version
Ti,N,V_version
T@"UWLMessageHeaders",&,N,V_headers
T@"NSMutableArray",&,N,V_playEvents
T@"NSMutableArray",&,N,V_optInEvents
T@"NSMutableArray",&,N,V_optOutEvents
T@"NSMutableArray",&,N,V_liveActivityEvents
_clearBDTimer
playbackState
debugStringForPlaybackState:
_cleanupWithSuccess:error:completion:
duration
identifierForPlayActivityID:channelID:duration:
externalProfileID
setExternalPlayableId:
doubleValue
setPlayHeadInMilliseconds:
setMediaLengthInMilliseconds:
featureDuration
featureElapsedTime
setMainContentPlayHeadInMilliseconds:
setMainContentLengthInMilliseconds:
timestamp
timeIntervalSinceDate:
isTimerDerived
completionState
setIsDone:
externalShowID
setExternalShowId:
contentType
setMediaType:
setCanonicalId:
internalLegID
setInternalLegId:
overrideChannelID
canonicalShowID
setCanonicalShowId:
isShowClosed
setIsShowOpen:
isCurrentEpisode
setIsCurrent:
_reportPlayEvent:summary:completion:
_donateIntentWithPlaybackSummary:andMetadata:
_decorateVODSummary:completion:
resolveChannelID:
playbackType
setCountLimit:
_cachedMetadataByIdentifier
_cachedNotFoundIdentifiers
containsObject:
error
statusCode
metadataByIdentifier
objectForKeyedSubscript:
setCompletionBlock:
addOperation:
accountID
longLongValue
setDSID:
_scheduleTimedReportForSummary:afterMillis:
localizedDescription
localizedName
_intentsMediaItemTypeFromWLKContentType:
initWithIdentifier:title:type:artwork:
initWithMediaItems:mediaContainer:playShuffled:playbackRepeatMode:resumePlayback:playbackQueueLocation:playbackSpeed:mediaSearch:
siriActionsCategories
initWithVocabularyIdentifier:spokenPhrase:pronunciationHint:
setBuckets:
_setLaunchId:
_setExtensionBundleId:
initWithIntent:response:
donateInteractionWithCompletion:
isSameContent:
elapsedTimeSummaryWithPlaybackState:timerDerived:
fetchCanonicalIDForSummary:completionHandler:
invalidate
initWithSessionID:
_BDTimer
_sessionID
_lastSummary
_networkReachabilityChanged:
initWithSuiteName:
_enqueuePendingReports
_isDirectPlaybackReportingDisabled
handlePlaybackSummary:sessionID:
initWithUpdateHandler:
initWithBundleID:
_handleDirectPlaybackAppTermination:
setUpdateHandler:
_enqueuePlaybackSummary:sessionID:serialize:
_endSession:
rateLimit
_getLastSummaryBySessionID:
isEquivalentToSummaryExcludingCursor:
initWithRate:burst:
setRate:
setBurst:
doOperation
nowPlayingObserver
nowPlayingSummaries
mutableCopy
setObject:forKeyedSubscript:
initWithSummary:canonicalID:
defaultAppLibrary
refresh
subscribedAppBundleIdentifiers
_offlineValidation:
blockOperationWithBlock:
_getReporterBySessionID:isLive:
_getSessionReporterBySessionID:
_setSessionReporter:sessionID:
_removeReporterBySessionID:
_removeLastSummaryBySessionID:
_setLastSummaryBySessionID:sessionID:
shortDescription
_serialize:
_handleReportingError:forSummary:
isItunesOrFirstPartyBundleID:
_shouldPromptForBundleID:outAccessStatus:
_cleanupSummary:
isLiveType
_catalogSummary:
_onlineValidation:completion:
addExecutionBlock:
domain
accountIDAsNumber
ams_iTunesAccountWithDSID:
initWithBundleIdentifier:allowPlaceholder:error:
applicationState
isInstalled
isMultiUser
privateModeEnabled
ams_isManagedAppleID
optedIn
channelIDForBundleID:
channelForID:
isWatchListEnabled
shouldTrackPlayActivity
loadIfNeededWithCompletion:
synchronizeSettingsFromCloudIfNeededWithCompletion:
isFullTVAppEnabledWithCompletion:
settingsForChannelID:externalID:
accessStatus
isNetworkReachable
predicateMatchingBundleIdentifier:
handleForPredicate:error:
currentState
taskState
promptForBundleID:
_scanForPendingReports
_queueDir
fileExistsAtPath:
fileURLWithPath:
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
array
getResourceValue:forKey:error:
path
dataWithContentsOfFile:
initForReadingFromData:error:
decodeObjectOfClass:forKey:
removeItemAtURL:error:
_queuePathForSummary:
stringByDeletingLastPathComponent
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
isEqualToSummary:
archivedDataWithRootObject:requiringSecureCoding:error:
writeToFile:atomically:
removeItemAtPath:error:
firstObject
stringByAppendingPathComponent:
stringWithString:
replaceOccurrencesOfString:withString:options:range:
substringWithRange:
sanitizedCopy
base64EncodedStringWithOptions:
dictionaryWithObjects:forKeys:count:
postNotificationName:object:userInfo:
reporter
lastSummaryDictionary
setLastSummaryDictionary:
_reporterDictionary
_nowPlayingObserver
_directPlayObserver
_pendingReportsTransaction
_isPrompting
_rateLimiter
_directPlayClientList
_disableDirectPlaybackReporting
_lastSummaryDictionary
T@"NSMutableDictionary",&,V_lastSummaryDictionary
stringWithUTF8String:
currentRunLoop
_networkReachabilityDidChangeNotification:
_accountDidChangeNotification:
removeObserver:name:object:
updateAppVisibility
setTVAppAllowed:
activeAccount
isCancelled
cancel
operations
isExecuting
_updateRequestedOnNetworkChange
_updateRequestedOnAccountChange
_activeAccountChangedNotification:
isFullTVAppEnabledwithCompletion:
_portNameForEnvironmentName:
initWithEnvironmentName:namedDelegatePort:queue:
publicToken
setPushToken:
_setEnabledTopics:
_registerOpportunisticTopics
initWithContainerID:bag:
initWithEnabledActionTypes:
setUserNotificationExtensionId:
initWithConfiguration:bag:
sharedUtilities
migrateToNewBadgingSystemIfNeeded
_loadURLBagWithCompletionHandler:
synchronize:completion:
_reportMercuryMetrics:
isCategoryEnabledByUser:
isCategoryBadgeSettingEnabledByUser:
_postNotificationWithPayload:
_reportBulletinMetrics:
_xpcConnection
createSessionWithCanonicalId:completion:
opportunisticTopics
arrayWithObject:
_setOpportunisticTopics:
consentedBrands
componentsJoinedByString:
deniedBrands
installedAppBundleIdentifiers
storedConfiguration
vppaState
dictionaryForKey:
valueForKey:
_augmentCustomEventInfo:
setValuesForKeysWithDictionary:
allAppBundleIdentifiers
wlk_arrayForKey:
appBundleIDs
URLWithString:
sportsScoreSpoilersAllowed
suppressedSportsEventIDs
_postNotificationToUser:title:body:options:
initWithBundleIdentifier:
authorizationStatus
post:title:body:options:
getNotificationSettingsWithCompletionHandler:
stringForKey:
valueWithCompletion:
initWithMachServiceName:options:
setInterruptionHandler:
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveToken:forInfo:
connection:didReceiveURLToken:forInfo:
connection:didReceiveURLTokenError:forInfo:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
connection:channelSubscriptionsFailedWithFailures:
handleAction:
pushPaylod:shouldUpdateBadgeForBundleIdentifier:badgeIdentifier:enabled:
pushPayload:withBadgeRequest:
_environment
_validTopics
_pendingOpportunisticTopics
_notifCenter
_utsPushHandler
_amsPushHandler
_mercuryPushHandler
T@"AMSMetrics",R,N,V_metricsController
setContentCanonicalId:
setContentBrandId:
setContentExternalPlayableId:
setContentInternalLegId:
hasContentCanonicalId
hasContentBrandId
hasContentExternalPlayableId
setContentMediaLengthInMilliseconds:
setHasContentMediaLengthInMilliseconds:
hasContentMediaLengthInMilliseconds
setContentIsDone:
setHasContentIsDone:
hasContentIsDone
hasContentInternalLegId
contentCanonicalId
contentBrandId
contentExternalPlayableId
contentMediaLengthInMilliseconds
contentIsDone
contentInternalLegId
_contentMediaLengthInMilliseconds
_contentBrandId
_contentCanonicalId
_contentExternalPlayableId
_contentInternalLegId
_contentIsDone
T@"NSString",&,N,V_contentCanonicalId
T@"NSString",&,N,V_contentBrandId
T@"NSString",&,N,V_contentExternalPlayableId
Tq,N,V_contentMediaLengthInMilliseconds
TB,N,V_contentIsDone
T@"NSString",&,N,V_contentInternalLegId
_addToken
_claimToken
rate
burst
_rate
_burst
_tokens
_accessQueue
setBundleID:
setAppIsRunning:
_startObserving
_stopObserving
descriptor
setValues:
setStateDescriptor:
setPredicates:
_getAppRunningState
monitorWithConfiguration:
setStateMonitor:
stateMonitor
_identifier
initWithIdentifier:delay:
setTransaction:
updateHandler
states
process
bundle
identifier
isRunning
appIsRunning
transaction
_appIsRunning
_updateHandler
_bundleID
_stateMonitor
T@"NSString",C,N,V_bundleID
T@"RBSProcessMonitor",&,N,V_stateMonitor
TB,N,V_appIsRunning
T@"WLKTransactionScope",&,N,V_transaction
T@?,C,N,V_updateHandler
deviceOffers
offerIdentifier
adamId
_hasProcessedDeviceOfferForCurrentUser:
amsDeviceOffertoDictionary:
_reportAMSDeviceOfferMetrics
removeDeviceOfferWithIdentifier:account:bag:logKey:
isDowngrading
isSubscribed
serialNumbers
allObjects
arrayWithArray:
offerType
addObjectsFromArray:
removeObjectAtIndex:
addCookies:
setXGuid:
setXUseridKeyspace:
setXUseridKey:
cookiesCount
clearCookies
cookiesAtIndex:
cookiesType
hasXGuid
hasXUseridKeyspace
hasXUseridKey
hasPfm
setHasClientVersion:
hasClientVersion
userAgent
xDsid
xAppleStorefront
xGuid
xUseridKeyspace
xUseridKey
cookies
clientVersion
_clientVersion
_cookies
_pfm
_userAgent
_xAppleStorefront
_xDsid
_xGuid
_xUseridKey
_xUseridKeyspace
T@"NSString",&,N,V_userAgent
T@"NSString",&,N,V_xDsid
T@"NSString",&,N,V_xAppleStorefront
T@"NSString",&,N,V_xGuid
T@"NSString",&,N,V_xUseridKeyspace
T@"NSString",&,N,V_xUseridKey
T@"NSMutableArray",&,N,V_cookies
T@"NSString",&,N,V_pfm
Ti,N,V_clientVersion
_readFromDisk
_getSubscriptionDataMaxAge
_shouldFetchFreshCopy
_coalescingIDForUser:forcedReload:
_writeToDisk:
_postDidUpdateCrossProcessNotificationWithProcessID:
_setAdPlatformsStatusCondition:
_fetchDataFromCommerceWithCoalescingID:completion:
_inflightCoalescingID
_coalescedCompletion
_setCoalescedCompletion:
_stubbedDataPath
setWithObjects:
decodeObjectOfClasses:forKey:
response
_setInflightCoalescingID:
wlkDefaultQueue
_supportPath
stringByExpandingTildeInPath
isEqualToNumber:
isTVPlusSubscriber
initWithUUIDString:
setBool:forKey:
setStatusCondition:completionHandler:
clearStatusCondition:completionHandler:
_accountID
_defaults
_enabled
_subscriptionData
_subscriptionDateDidUpdateNotificationToken
_propLock
_maxAgeInSeconds
_fetchActivePlayerPaths
startObserving
stopObserving
_nowPlayingInfoDidChangeNotification:
_isPlayingDidChangeNotification:
_activePlayerPathsDidChangeNotification:
_forceFetchNowPlayingInfofromActivePlayers
_getActivePlayerPaths
client
bundleIdentifier
initWithMediaRemoteDictionary:bundleID:accountID:
userInfo
_shouldPlayerPathBeConsidered:
_isAnyAppPlaying
_fetchNowPlayingInfo:
_processLastSummary:
_setActivePlayerPaths:
_nowPlayingInfoForPlayerPath:
player
isEquivalentToSummaryExcludingTimestamp:
_isSummary:signifantChangeFromSummary:
_updateWithInfo:sessionID:
isItunesBundleID:
enumerateObjectsUsingBlock:
_unsupportedMediaTypes
playbackRate
_isPlayerPathPlaying:
_nowPlayingAppIsPlayingForPlayerPath:
_isObserving
_notificationQueue
_lookupQueue
_lastSummaryDict
_activePlayerPaths
isUnlocked
isPresenting
_isPad
username
sharedTracker
_amsBagDidChangeNotification:
updateTrackedBagValuesWithChangedKeys:
setState:
state
isAlwaysLive
serviceID
currentPlaybackDate
initWithBundleID:timestamp:duration:elapsedTime:featureDuration:featureElapsedTime:externalProfileID:contentID:accountID:playbackState:playbackRate:completionState:isAlwaysLive:serviceID:currentPlaybackDate:playbackType:isTimerDerived:channelID:
setLastSummary:
_processInput:completion:
eventForDate:
decorateSummary:completion:
_invalidateTimer
_decorateLiveSummary:completion:
_decorateEBSSummary:completion:
_debugStringForInput:
_doTune:completion:
_doContentBoundaryWithCompletion:
lastSummary
schedule
_tuneEventFromSummary:schedule:tuneIn:
_contentEventFromSummary:schedule:event:contentBegin:
setSchedule:
_evaluateSchedule
_reportPlayEvents:account:completion:
adjacentEventsForDate:fuzziness:
lastObject
initWithChannelID:serviceID:
responseDictionary
initWithChannelID:externalContentID:
cleanupTime
externalServiceID
startDate
endDate
externalPlayableID
legID
eventAfterDate:
_configureTimerForDate:input:
dateWithTimeIntervalSinceNow:
_schedule
_timerEventDate
T@"WLKPlaybackSummary",&,V_lastSummary
T@"WLKTransactionScope",&,V_transaction
TQ,Vstate
setHasIsDone:
hasIsDone
hasExternalShowId
setHasMediaLengthInMilliseconds:
hasMediaLengthInMilliseconds
mediaType
setHasMediaType:
hasMediaType
mediaTypeAsString:
StringAsMediaType:
setHasIsCurrent:
hasIsCurrent
setHasIsShowOpen:
hasIsShowOpen
hasCanonicalId
hasCanonicalShowId
hasInternalLegId
setHasMainContentLengthInMilliseconds:
hasMainContentLengthInMilliseconds
setHasMainContentPlayHeadInMilliseconds:
hasMainContentPlayHeadInMilliseconds
externalPlayableId
playHeadInMilliseconds
isDone
externalShowId
mediaLengthInMilliseconds
isCurrent
isShowOpen
canonicalId
canonicalShowId
internalLegId
mainContentLengthInMilliseconds
mainContentPlayHeadInMilliseconds
_mainContentLengthInMilliseconds
_mainContentPlayHeadInMilliseconds
_mediaLengthInMilliseconds
_playHeadInMilliseconds
_canonicalId
_canonicalShowId
_externalPlayableId
_externalShowId
_internalLegId
_mediaType
_isCurrent
_isDone
_isShowOpen
T@"NSString",&,N,V_externalPlayableId
Tq,N,V_playHeadInMilliseconds
TB,N,V_isDone
T@"NSString",&,N,V_externalShowId
Tq,N,V_mediaLengthInMilliseconds
Ti,N,V_mediaType
TB,N,V_isCurrent
TB,N,V_isShowOpen
T@"NSString",&,N,V_canonicalId
T@"NSString",&,N,V_canonicalShowId
T@"NSString",&,N,V_internalLegId
Tq,N,V_mainContentLengthInMilliseconds
Tq,N,V_mainContentPlayHeadInMilliseconds
WLKAdditions
UWLLiveActivityEvent
NSCopying
WLDClientConnection
WLKConnectionServerProtocol
NSObject
WLDServer
NSXPCListenerDelegate
WLDClientConnectionDelegate
WLDMercuryPushHandler
WLKFederatedPunchoutReporterAdditions
WLDFederatedPunchoutReporter
WLDPushParsing
MapEntry
UWLOptOutEvent
UWLOptInEvent
WLDPlayActivityReportOperation
WLDMetricsUtilities
WLKWatchlistSuppressNotificationsXPCConnectionProtocol
WLDSuppressionClientConnection
WLDTransactionBlockOperation
UWLErrorResponse
UWLLiveActivityEventChannel
WLDUTSPushHandler
UWLMessageWireEnvelope
WLDPlaybackReporter
WLDPlaybackReporterProtocol
WLDPlaybackManager
WLDAppVisibilityManager
WLDFullTVAppMonitor
WLKSportsCommunicationsProtocol
WLDPushNotificationController
APSConnectionDelegate
WLKNotificationCenterDelegate
AMSPushHandlerDelegate
UWLLiveActivityEventContent
WLDRateLimiter
WLDPlaybackDirectPlayObserver
WLDDeviceOfferManager
UWLMessageHeaders
WLDSubscriptionStore
WLDPlaybackNowPlayingObserver
WLDRemoteAlertPresenter
WLDAMSBagObserver
WLDLivePlaybackReporter
_WLDStateMachine
UWLPlayEvent
@16@0:8
v32@0:8@16Q24
@24@0:8^{_NSZone=}16
B16@0:8
v24@0:8q16
v20@0:8B16
i16@0:8
v20@0:8i16
@20@0:8i16
i24@0:8@16
B24@0:8@16
v24@0:8@16
Q16@0:8
q16@0:8
v16@0:8
@"NSString"
@"UWLLiveActivityEventChannel"
@"UWLLiveActivityEventContent"
{?="cleanupTimeEpochMillis"b1"expectedStartTimeEpochMillis"b1"millisecondsSinceEvent"b1"cause"b1"contractOrTimed"b1}
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@?16
v32@0:8@16@?24
v40@0:8@16@24@?32
v36@0:8@16B24@?28
v32@0:8@16@24
v28@0:8B16@?20
v32@0:8B16i20@?24
v24@0:8@?<v@?@"NSArray">16
v24@0:8@?<v@?@"NSDictionary">16
v32@0:8@"WLKPlaybackSummary"16@?<v@?B@"NSError">24
v40@0:8@"WLKPlaybackSummary"16@"NSString"24@?<v@?B@"NSError">32
v24@0:8@"NSString"16
v36@0:8@"NSString"16B24@?<v@?B>28
v32@0:8@"NSString"16@"NSString"24
v32@0:8@"NSDictionary"16@?<v@?B>24
v32@0:8@"NSDictionary"16@?<v@?B@"NSError">24
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
v24@0:8@?<v@?q>16
v32@0:8@"NSDictionary"16@?<v@?@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSError">24
v28@0:8B16@?<v@?@"NSArray"@"NSError">20
v24@0:8@?<v@?@"NSError">16
v32@0:8B16i20@?<v@?@"WLKSubscriptionData"@"NSError">24
v24@0:8@"WLKFederatedPunchout"16
@32@0:8@16@24
@"<WLKConnectionClientProtocol>"
@"NSXPCConnection"
@"<WLDClientConnectionDelegate>"
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v24@0:8@"WLDClientConnection"16
@"NSMutableSet"
@"NSXPCListener"
@"WLDPlaybackManager"
@"WLDPushNotificationController"
@24@0:8@16
v28@0:8@16B24
q24@0:8@16
@"AMSMetrics"
v24@0:8Q16
@"VSAnalyticsServiceConnection"
@"NSOperationQueue"
@"NSObject<OS_dispatch_source>"
@"NSMutableDictionary"
@"NSArray"
@"UWLMessageWireEnvelope"
@"WLKTransactionScope"
@24@0:8q16
v32@0:8@16q24
@24@0:8Q16
@"UWLMessageHeaders"
@"NSMutableArray"
q24@0:8Q16
v32@0:8@"WLKPlaybackSummary"16@?<v@?@"NSString"@"NSError">24
v36@0:8B16@20@?28
@"WLKPlaybackSummary"
@28@0:8@16B24
v36@0:8@16@24B32
B32@0:8@16^Q24
@"WLDPlaybackNowPlayingObserver"
@"WLDPlaybackDirectPlayObserver"
@"WLDRateLimiter"
v48@0:8@16@24@32@40
v40@0:8@16@24@32
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v40@0:8@"APSConnection"16@"NSData"24@"APSAppTokenInfo"32
v40@0:8@"APSConnection"16@"APSURLToken"24@"APSURLTokenInfo"32
v40@0:8@"APSConnection"16@"NSError"24@"APSURLTokenInfo"32
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
v24@0:8@"NSDictionary"16
B44@0:8@16@24@32B40
B44@0:8@"AMSPushPayload"16@"NSString"24@"NSString"32B40
v32@0:8@"AMSPushPayload"16@"AMSBadgeRequest"24
@"APSConnection"
@"WLKNotificationCenter"
@"WLDUTSPushHandler"
@"AMSPushHandler"
@"WLDMercuryPushHandler"
{?="contentMediaLengthInMilliseconds"b1"contentIsDone"b1}
@32@0:8Q16Q24
@"NSObject<OS_dispatch_queue>"
@?16@0:8
@"RBSProcessMonitor"
{?="clientVersion"b1}
v36@0:8B16Q20@?28
@"NSNumber"
@"NSUserDefaults"
@"WLKSubscriptionData"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@24@0:8@?16
@36@0:8@16@24B32
@44@0:8@16@24@32B40
v32@0:8Q16@?24
v32@0:8Q16@?<v@?B@"NSError">24
@"WLKSchedule"
@"NSDate"
{?="mainContentLengthInMilliseconds"b1"mainContentPlayHeadInMilliseconds"b1"mediaLengthInMilliseconds"b1"contractOrTimed"b1"mediaType"b1"isCurrent"b1"isDone"b1"isShowOpen"b1}
Attempt to xpc encode SubscriptionData which has wrong type.
Attempt to xpc encode SubscriptionData error which has wrong type.
WLDServer.start
WLDFederatedPunchoutReporter - Recorded punchout that matches existing one in ledger. reporting back with failure reason %lu
WLDFederatedPunchoutReporter - Adding punchout to ledger: %@
WLDFederatedPunchoutReporter - Attempted to record a punchout with invalid channel ID: %@
WLDFederatedPunchoutReporter - found matching punchout for reported playback summary: %@
WLDFederatedPunchoutReporter - playback summary is from expected channel but not the expected playable.
WLDFederatedPunchoutReporter - Playback summary matches pending punchout.
WLDFederatedPunchoutReporter - Playback summary elapsed time of %ld is greater than %ld second epsilon from resume time %ld
WLDFederatedPunchoutReporter - Playback summary elapsed time of %ld is within %ld second epsilon from resume time %ld
WLDFederatedPunchoutReporter - No matching channel for bundle ID %@
WLDFederatedPunchoutReporter - Recording punchout to analytics connection %p with error %@
WLDFederatedPunchoutReporter - Failed to connect to analytics service: %@
WLDFederatedPunchoutReporter - New punchout recorded with pre-existing timer.
WLDFederatedPunchoutReporter - punchout expiry timer fired, processing %lu punchouts.
WLDFederatedPunchoutReporter - Punchout expired: %@
WLDPushParsing - Unknown action type: %@
WLDPushParsing - No value found for action type in payload
NetworkRequest.Config
WLDMetricsUtilities - No metrics to report.
WLDMetricsUtilities - Will send events: %@
WLDMetricsUtilities - Error flushing events: %@
WLDMetricsUtilities - Events flushed.
WLDUTSPushHandler - Handling %@ notification
WLDUTSPushHandler - No payload.
WLDUTSPushHandler - Payload is expired %@, ignoring and invalidating
WLDUTSPushHandler - Payload indicates invalidation
WLDUTSPushHandler - Processed Up Next delta with %lu items
WLDUTSPushHandler - Successfully saved Up Next delta, requesting reload
WLDUTSPushHandler - Failed to save Up Next delta: %@
WLDUTSPushHandler - Reporting metrics
WLDPlaybackReporter - %@ init:
WLDPlaybackReporter - %@ dealloc: sessionID: %@
WLDPlaybackReporter - %@ Begin Transaction: setLastSummary playbackState %@
WLDPlaybackReporter - Error: Failed to resolve channelID %@
WLDPlaybackReporter - Error: could not resolve lookupID for %@
WLDPlaybackReporter - %@ Report playback activity:%p summary:%p
WLDPlaybackReporter - %@ Returning cached metadata for %@.
WLDPlaybackReporter - Item with identifier %@ is known to be unavailable.
WLDPlaybackReporter - Activity lookup failed: %@
WLDPlaybackReporter - Activity lookup got a %ld. We will not retry.
WLDPlaybackReporter - %@ Got metadata for %@.
WLDPlaybackReporter - %@: Note: DSID mismatch. Active:%@ Summary:%@
WLDPlaybackReporter - %@ Queueing activity report: %p
WLDPlaybackReporter - %@ Ended Transaction
WLDPlaybackReporter - Skipping donation because user didn't initiate playback.
WLDPlaybackReporter - Could not find bundle for ID com.apple.tv - %@
WLDPlaybackReporter - Error donating interaction: %@
WLDPlaybackReporter - %@ TR: Cancelling existing timer
WLDPlaybackReporter - %@ TR: Will not generate timed report because playback state is not playing
WLDPlaybackReporter - %@ TR: Will schedule timed report in %@ millis
WLDPlaybackReporter - %@ TR: Will enqueue: %@
WLDPlaybackReporter - %@ TR: Successful playback report
WLDPlaybackReporter - %@: TR: Failed playback report %@
WLDPlaybackReporter - %@ TR: Will not generate report because current playback state does not satisfy conditions
WLDFullTVAppMonitor - Full TV App %@
WLDFullTVAppMonitor - Account changes. Full TV App %@
WLDPushNotificationController - Push environment: %@
WLDPushNotificationController - Push token: %@, DSID: %@, connection: %@
WLDPushNotificationController - Handling request to register opportunistic topics
WLDPushNotificationController - Deferring request to register opportunistic topics
WLDPushNotificationController - didReceivePublicToken: %@
WLDPushNotificationController - Received push notification: %@
WLDPushNotificationController - Received sync request of type: %@
WLDPushNotificationController - Processing settings sync request
WLDPushNotificationController - Completed WLK settings sync with success:%@ %@
WLDPushNotificationController - Processing subscriptions sync request
WLDPushNotificationController - Completed WLK subscription sync with success:%@ %@
WLDPushNotificationController - accountIdentifer missing or mismatched
WLDPushNotificationController - AMS wants to handle notification: %@
WLDPushNotificationController - Suppressing AMS/Mercury notification. Payload lacks subsection
WLDPushNotificationController - Handling mercury notification: %@
WLDPushNotificationController - User has disabled Marketing notifs. Skip badging.
WLDPushNotificationController - Notification is unhandled: %@
WLDPushNotificationController - Ignoring unknown topic: %@
sportsd: Error connecting. %@
sportsd: Error creating session. %@
WLDPushNotificationController - AMSPushHandler -- badging is disabled in settings
WLDPushNotificationController - AMSPushHandler badge -- new badging number:%@
WLDPushNotificationController - AMSPushHandler unbadge -- new badging number:%@
WLDPushNotificationController - Registering opportunistic topic: %@
WLDPushNotificationController - Canonical ID: %@ Coalescing ID: %@
WLDPushNotificationController - Not inspecting action for bundleIDs: %@ because none are installed.
WLDPushNotificationController - App library: %@
WLDPushNotificationController - Payload lacks an identifier.
WLDPushNotificationController - Payload lacks a title.
WLDPushNotificationController - Payload lacks a message.
WLDPushNotificationController - Payload lacks an action.
WLDPushNotificationController - Payload has a score.
WLDPushNotificationController - User has sports scores disabled
WLDPushNotificationController - Sports notification suppression is currently active for the event
WLDPushNotificationController - Payload lacks a known category type.
WLDPushNotificationController - Buddy/OOB has not completed. Will drop notification
WLDPushNotificationController - Will enqueue notification with action URL: %@
WLDPushNotificationController - Now Playing Canonicals: %@
WLDPushNotificationController - Discarding notification for current game %@
WLDPushNotificationController - Discarding notification with inappropriate payload.
WLDPushNotificationController - Push notification controller is nil. Notification not posted.
WLDPushNotificationController - Configuration: %@ %@
WLDPushNotificationController - Connection interrupted.
WLDPushNotificationController - Connection invalidated.
WLDDeviceOfferManager - Found %lu offer(s) in [AMSDevice deviceOffers]
WLDDeviceOfferManager - [AMSDevice deviceOffers] returns nil
WLDDeviceOfferManager - Found %lu TV offer(s)
WLDDeviceOfferManager - [processDeviceOffers] badging TV App
WLDDeviceOfferManager - Inactive iTunes account
WLDDeviceOfferManager - Received device offer [%@] to check
WLDDeviceOfferManager - Device TV offer [%@] has already been processed for current user
WLDDeviceOfferManager - New device TV offer [%@] for current user
WLDDeviceOfferManager - New device TV offer for current user
WLDDeviceOfferManager - Failed to save device TV offer [%@]
Subscription sync is disabled
Subscription data has expired or is nil.
Subscription client is requesting forced refresh
Fetching for coalescingID: %@
Fetched subscription data is nil. No update.
There has been no change in subscription data.
Subscription data has changed. Update cached copy.
Subscription data is still valid, returning cache
Will coalesce operation: %@. Will _not_ go outbound.
Failed to fetch subscription data
Using stubbed subscription data
Read failed secure unarchiver error: %@
Read ignoring unsupported root object: %@
Failed to create directory %@: %@
Failed to archive subscription data: %@
Wrote subscription store %d
DSID changed
User sign-in or sign-out. Remove persisted cache
Posting did update cross process note
Failed to set status condition in adPlatforms: %@
Successfully set status condition in adPlatforms
Failed to clear status condition in adPlatforms: %@
Successfully cleared status condition in adPlatforms
No change in condition. Skip setting status condition in adPlatforms
WLDPlaybackNowPlayingObserver - Start Playback observation
WLDPlaybackNowPlayingObserver - Stop Playback observation
WLDPlaybackNowPlayingObserver - Generating stopped playback event
WLDPlaybackNowPlayingObserver - -SigEval- ignoring duplicate NPI
WLDPlaybackNowPlayingObserver - _processLastSummary Generating stopped playback event
WLDPlaybackNowPlayingObserver - Calling update handler with summary: %@
WLDPlaybackNowPlayingObserver - -SigEval- update %@ ->
WLDPlaybackNowPlayingObserver - -SigEval- %@
WLDPlaybackNowPlayingObserver - -SigEval- [%d] reason: %@
softlink:r:path:/System/Library/PrivateFrameworks/SetupAssistant.framework/SetupAssistant
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>20A241133</string>
<key>CFBundleAllowMixedLocalizations</key>
<true/>
<key>CFBundleIdentifier</key>
<string>com.apple.watchlistd</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>20A5283j</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>16.0</string>
<key>DTSDKBuild</key>
<string>20A5283j</string>
<key>DTSDKName</key>
<string>iphonesimulator16.0.internal</string>
<key>DTXcode</key>
<string>1400</string>
<key>DTXcodeBuild</key>
<string>14A6200i</string>
<key>MinimumOSVersion</key>
<string>16.0</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
<integer>2</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>adi-client</key>
<string>409835401</string>
<key>application-identifier</key>
<string>watchlistd</string>
<key>aps-connection-initiate</key>
<true/>
<key>com.apple.VideoSubscriberAccount.AnalyticsService.ReportFederatedEvents</key>
<true/>
<key>com.apple.ap.adservicesd.statusconditionclient.allow_write</key>
<true/>
<key>com.apple.appletv.pbs.allow-screen-saver</key>
<true/>
<key>com.apple.appletv.pbs.bulletin-service-access</key>
<true/>
<key>com.apple.appletv.pbs.user-presentation-service-access</key>
<true/>
<key>com.apple.appletv.pbs.user-profiles</key>
<true/>
<key>com.apple.appstored.install-system-apps</key>
<true/>
<key>com.apple.authkit.client.private</key>
<true/>
<key>com.apple.bulletinboard.dataprovider</key>
<true/>
<key>com.apple.chronoservices</key>
<true/>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.itunesstored.private</key>
<true/>
<key>com.apple.locationd.effective_bundle</key>
<true/>
<key>com.apple.managedconfiguration.profiled.set</key>
<array>
<string>ClientRestrictions</string>
<string>UserSettings</string>
</array>
<key>com.apple.private.InstallCoordination.allowed</key>
<true/>
<key>com.apple.private.MobileGestalt.AllowedProtectedKeys</key>
<array>
<string>UniqueDeviceID</string>
</array>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.applemediaservices</key>
<true/>
<key>com.apple.private.aps-connection-initiate</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.corespotlight.internal</key>
<true/>
<key>com.apple.private.followup</key>
<true/>
<key>com.apple.private.launchservices.suppresscustomschemeprompt</key>
<string>*</string>
<key>com.apple.private.mobileinstall.allowedSPI</key>
<array>
<string>InstallForLaunchServices</string>
<string>UninstallForLaunchServices</string>
</array>
<key>com.apple.private.sportskit.session.client</key>
<true/>
<key>com.apple.private.subscriptionservice.all-sources.read-only</key>
<true/>
<key>com.apple.private.usernotifications.bundle-identifiers</key>
<array>
<string>com.apple.tv</string>
<string>com.apple.TVWatchList</string>
</array>
<key>com.apple.security.exception.files.absolute-path.read-write</key>
<array>
<string>/private/var/tmp/</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>/Library/Caches/</string>
<string>/Library/com.apple.WatchListKit/</string>
<string>/Library/Logs/PersistentConnection/com.apple.watchlistd-watchlistd-APSClient.log</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.VideoSubscriberAccount.AnalyticsService</string>
<string>com.apple.usernotifications.usernotificationservice</string>
<string>com.apple.ak.anisette.xpc</string>
<string>com.apple.appstored.xpc.request</string>
<string>com.apple.lsd.installation</string>
<string>com.apple.lsd.modifydb</string>
<string>com.apple.lsd.xpc</string>
<string>com.apple.managedconfiguration.profiled</string>
<string>com.apple.VideoSubscriberAccount.videosubscriptionsd</string>
<string>com.apple.locationd.synchronous</string>
<string>com.apple.awdd</string>
<string>com.apple.nanoprefsync</string>
<string>com.apple.assertiond.applicationstateconnection</string>
<string>com.apple.PineBoardServices</string>
<string>com.apple.springboard.services</string>
<string>com.apple.installcoordinationd</string>
<string>com.apple.spotlight.IndexAgent</string>
<string>com.apple.frontboard.systemappservices</string>
<string>com.apple.chronoservices</string>
<string>com.apple.FileCoordination</string>
<string>com.apple.locationd.registration</string>
<string>com.apple.sportsd.session.xpc</string>
<string>com.apple.xpc.amsaccountsd</string>
</array>
<key>com.apple.security.exception.process-info</key>
<true/>
<key>com.apple.security.exception.shared-preference.read-only</key>
<array>
<string>com.apple.purplebuddy</string>
</array>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.AppleMediaServices</string>
<string>com.apple.AppleMediaServices.notbackedup</string>
<string>com.apple.tv</string>
<string>com.apple.watchlistd</string>
<string>com.apple.TVWatchList</string>
<string>com.apple.WatchListKit</string>
</array>
<key>com.apple.security.system-groups</key>
<array>
<string>systemgroup.com.apple.configurationprofiles</string>
</array>
<key>com.apple.springboard.CFUserNotification</key>
<true/>
<key>com.apple.springboard.activateRemoteAlert</key>
<true/>
<key>com.apple.symptom_analytics.query</key>
<true/>
<key>com.apple.symptoms.NetworkOfInterest</key>
<true/>
<key>com.apple.watchlist.private</key>
<true/>
<key>fairplay-client</key>
<string>681381042</string>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
</array>
<key>platform-application</key>
<true/>
<key>seatbelt-profiles</key>
<array>
<string>watchlistd</string>
</array>
</dict>
</plist>
TVApp
get-watchlist-settings
update-watchlist-settings
uvSearch/max-local-settings-age-seconds
uvSearch/uts-api-base-url
uvSearch/init-config-get-url-length-limit
uvSearch/routes/init-config-path
uvSearch/nowplaying-enabled
uvSearch/sports-enabled
uvSearch/locationEnabled
uvSearch/enabled-notification-types
push-notifications/environment
metrics
metrics/metricsUrl
privacyAcknowledgementUrl
sign-sap-setup-cert
sign-sap-setup
signed-actions
sign-sap-request
sign-sap-response
trustedDomains
tvSubscriptionStatus
tvSubscriptionStatusMaxAgeInSeconds
tvFederatedPunchoutTTL
tvFederatedPunchoutExtensionTTL
tvFederatedPunchoutResumeTimeEpsilon
v8@?0
%@ %@
bundle_id
milliseconds_since_event
profile_id
channel
content
cause
expected_start_time_epoch_millis
cleanup_time_epoch_millis
contract_or_timed
Tune_In
Event_End
Event_Start
Tune_Out
(unknown: %i)
Not_Specified_Implied_Legacy_Contract
Contract
Timed
v16@?0@"NSError"8
Error communicating with client: %@
WLDClientConnection.deletePlaybackActivityWithIdentifier
Delete requested for content ID: %@, bundle ID: %@
v20@?0B8@"NSError"12
Invalid delete requested for content ID: %@, bundle ID: %@. Ignoring.
WLDClientConnection.requestNowPlayingSummaries
v16@?0@"NSArray"8
WLDClientConnection.requestDecoratedNowPlayingSummaries
v16@?0@"NSDictionary"8
WLDClientConnection.reportPlayback
Ignoring reportPlayback request from client lacking the entitlement: %@
Error: %@
Start auth
v24@?0@"AMSAuthenticateResult"8@"NSError"16
Auth response: %@ error; %@
Connection: ping!
WLDClientConnection.fetchApplications
WLDClientConnection.readSettingsStore
WLDClientConnection.writeSettingsStore
v12@?0B8
WLDClientConnection.postSettings
WLDClientConnection.fetchSettings
v24@?0@"NSDictionary"8@"NSError"16
WLDClientConnection.fetchLocationAuthorizationStatus
v16@?0q8
WLDClientConnection.prewarm
WLDClientConnection.saveOffer
WLDClientConnection.removeOffer
WLDClientConnection.fetchOffers
v24@?0@"NSArray"8@"NSError"16
WLDClientConnection.fetchSubscriptionData
v24@?0@"WLKSubscriptionData"8@"NSError"16
WLDClientConnection.refreshSubscriptionData
Connection invalidated for client: %@
WLDServerInitException
-init is not supported. Use +server
WLDServer - dealloc
WLDServer - Failed to get signing identifier
WLDServer - Got connection for client '%@'
ClientIdentifierOverride
com.apple.watchlistd
WLDServer - ClientIdentifierOverride: '%@'
WLDServer - Accepted connection for client '%@'
WLDServer - Failed to get client identifier '%@'
WLDServer - Accepted suppression connection for client '%@'
WLDServer - Dropping connection from unentitled client: %@
WLDServer - start
com.apple.watchlistd.xpc
WLDServer - start main
WLDServer - handleSubscriptionRegistration
WLDServer - handleAMSDeviceOffer
WLDServer - handleVideosUIInvalidationNotification %@
WLDServer - handleUNWidgetRegistration
WLDServer - _handleRestrictionsChangedNotification %@
WLDServer - _handleContinueWatchingNotification %@
WLDServer - _handleFamilyUpdateNotification: %@
payloadType
mercury:tvapp:BadgeAlertAdd
mercury:tvapp:BadgeAlertRemove
mercury:tvapp:BadgeAlertNoBadge
offerSource
MercurySilentNotification
WLKFederatedPunchoutErrorDomain
channelID
canonicalID
externalID
bundleID
matchTimeSeconds
adamID
consented
v32@?0@"NSString"8@"WLKFederatedPunchout"16^B24
com.apple.tv
payload
value
brand_id
X-Apple-Next-Report-Expected-In-Milliseconds
activityPlay
POST
application/x-protobuf
Content-Type
ClientVersion
WLDPlayActivityReportOperation: Error: activityPlay route not found
v24@?0@"WLKServerConfigurationResponse"8@"NSError"16
eventType
notificationRequest
eventVersion
notificationType
AMSDeviceOffer
xp_amp_notifications
WLDMetricsUtilities.sendMetricsEvents
v24@?0@8@"NSError"16
com.apple.watchlistd.defaultworkqueue
WLDTransactionBlockOperation.init
retry_period_in_seconds
channel_canonical_id
channel_brand_id
channel_external_live_service_id
channel_internal_leg_id
expiresAt
invalidate
upNextChanges
type
favoriteTeamsChanges
Up Next
Favorite Teams
version
headers
play_events
opt_in_events
opt_out_events
live_activity_events
WLDPlaybackReporter.reportPlayback
could not resolve lookupID for %@
v24@?0@"WLKPlayActivityMetadata"8@"NSError"16
v24@?0@"NSString"8@"NSError"16
Invalid playbackType.
Could not resolve lookupID.
Item is not available.
DefaultPlaybackSessionID
DisableDirectPlaybackReporting
WLDPlaybackManager:UpdateHandler Direct-reporting is disabled by user defaults
WLDPlaybackManager: Ignoring MediaRemote NPI updates for %@; application supports direct-reporting!
WLDPlaybackNowPlayingObserver.updateHandler
v24@?0@"WLKPlaybackSummary"8@"NSString"16
WLDPlaybackManager: Direct playback reporting is disabled by user default
WLDPlaybackManager: Creating directPlay observer for %@
WLDPlaybackManager: dropping report. Exceeded rate limit %@ %@
v32@?0@"NSString"8@"WLKPlaybackSummary"16^B24
WLDPlaybackManager: Found untracked NPI. Will fetch canonical
<Untracked NPI %ld>
WLDPlaybackManager: begin decorating (%@) summaries
WLDPlaybackManager: Skipping stopped summary.
v32@?0@"NSString"8@"WLKDecoratedPlaybackSummary"16^B24
WLDPlaybackManager: Decorated [%@] : %@
WLDPlaybackManager: done decorating summaries
WLDPlaybackManager: handleSubscriptionRegistration
WLDPlaybackManager: handleSubscriptionRegistration: No sbid diff, considering all sbids
WLDPlaybackManager: handleSubscriptionRegistration: Not continuing. sbids:%@ validation:%d
WLDPlaybackManager: handleSubscriptionRegistration: done refreshing library. Will request init/config with default cache policy
WLDPlaybackManager: handleSubscriptionRegistration: done fetch configuration after subscription change.
WLDPlaybackManager: asked to check pending reports
com.apple.watchlistd.PlaybackManagerQueue
WLDPlaybackManager: invoked default session reporter
WLDPlaybackManager: Returning a previously created WLDPlaybackReporter
WLDPlaybackManager: Creating a WLDPlaybackReporter
WLDPlaybackManager: Returning a previously created WLDLivePlaybackReporter
WLDPlaybackManager: Creating a WLDLivePlaybackReporter
WLDPlaybackManager: End session: %@
WLDPlaybackManager: Generating stopped playback event due to app termination.
WLDPlaybackManager: enqueue: %@ for sessionID %@
WLDPlaybackManager: User has not granted access (1) for: %@
WLDPlaybackManager: User has not granted access (2) for: %@
WLDPlaybackManager: Successful playback report %@
WLDPlaybackManager: Session %@ has PlaybackStateStopped
WLDPlaybackManager: An iTunes account was not found for %@
WLDPlaybackManager: ErrorHandler: Fatal error. Cleaning up summary: %@
WLDPlaybackManager: ErrorHandler: Non-fatal error. Will attempt report again on reachability change and/or app launch. %@
WLDPlaybackManager._handleReportingError
WLDPlaybackManager: Feature disabled because TV app is not installed.
WLDPlaybackManager: Feature disabled in EDU mode.
WLDPlaybackManager: User has private mode enabled
WLDPlaybackManager: Error: DSID missing.
WLDPlaybackManager: Error: bundleIdentifier is required.
WLDPlaybackManager: An active iTunes account is required to report play activity events.
WLDPlaybackManager: Feature disabled for Managed Apple IDs.
WLDPlaybackManager: Error fetching Now playing from URL bag.
WLDPlaybackManager: Error: Now playing not enabled in URL bag.
Now playing not enabled in URL bag
WLDPlaybackManager: Settings sync failed
WLDPlaybackManager: User has not opted into feature
User has not opted into feature
WLDPlaybackManager: Failed to load channel utils
WLDPlaybackManager: No channel associated with channel ID: %@. Ignoring report
channel lookup failed
WLDPlaybackManager: Channel with ID %@ is not watchlist enabled. Ignoring report.
Channel %@ is not watchlist enabled
WLDPlaybackManager: Channel with ID %@ does not have playback tracking enabled. Ignoring report.
Channel %@ does not have playback tracking enabled
WLDPlaybackManager: should not prompt because we are already prompting
WLDPlaybackManager: No channel found for: %@
WLDPlaybackManager: User has denied access for: %@ %@
WLDPlaybackManager: User has allowed access for: %@ %@
WLDPlaybackManager: Will not prompt due to network being unavailable
WLDPlaybackManager: Could not get process handle %@
WLDPlaybackManager: Will not prompt because application is not foregrounded
WLDPlaybackManager: promptForBundleID: %@
WLDPlaybackManager: Settings recall after prompting for bundle:%@ external:%@ %@
WLDPlaybackManager: scanning for pending reports
B24@?0@"NSURL"8@"NSError"16
WLDPlaybackManager: [Error] scanning for pending reports %@ (%@)
WLDPlaybackManager: _scanForPendingReports no iTunes account for ID: %@
WLDPlaybackManager: _scanForPendingReports secure unarchiver error: %@
WLDPlaybackManager: Deleting invalid item: %@
WLDPlaybackManager: Found pending playback report. Enqueuing.
WLDPlaybackManager: Releasing pending reports transaction.
WLDPlaybackManager: Network reachability changed. Network is reachable:%d
WLDPlaybackManager: _serialize: secure unarchiver error: %@
pending
%@-%@
WLDPlaybackManager: Error serializing summary for notification: %@
SIGTERM received, exiting.
com.apple.notifyd.matching
v16@?0@"NSObject<OS_xpc_object>"8
Got notifyd launch notification: %@
com.apple.VideoSubscriberAccount.DidRegisterSubscription
com.apple.AppleMediaServices.deviceOffersChanged
com.apple.VideosUI.StoreAcquisitionCrossProcessNotification
com.apple.VideosUI.UpNextRequestDidFinishNotification
com.apple.VideosUI.PlayHistoryUpdatedNotification
com.apple.tv.TVWidgetExtension.Register
com.apple.WLDAppVisibilitymanager
WLDAppVisibilityManager - reachability changed
WLDAppVisibilityManager - account changed
WLDAppVisibilityManager - TV app enabled *override*: %d
WLDAppVisibilityManager - active account storefront: %@
WLDAppVisibilityManager - device storefront: %@
WLDAppVisibilityManager - Error: no active account. Will retry on account change.
WLDAppVisibilityManager - Error: Nil storefront identifier.
WLDAppVisibilityManager - operation was cancelled during bag fetch.
WLDAppVisibilityManager - TV app will be enabled: %d
WLDAppVisibilityManager - Unable to update TV app visibility: %@. Will try again on reachability change.
WLDAppVisibilityManager - Unable to update TV app visibility, bag fetch timed out. Will try again on reachability change.
WLDAppVisibilityManager - cancelling queued op %@
RegionCode
WLDAppVisibilityManager - Enqueue appVisibilityOp for region: %@ %@
Enabled
Disabled
com.apple.watchList
com.apple.tv.upnext
com.apple.tv.favoriteTeams
com.apple.tv-default
WLDPushNotificationController.didReceiveMessageForTopic
WLDPushNotificationController.handleAction
identifier
cbids
dbids
ibids
sbids
vppaState
metricsBase
WLDPushNotificationController._reportBulletinMetrics
WLDPushNotificationController._reportMercuryMetrics
WLDPushNotificationController._postNotificationWithPayload
interruptionLevel
entityId
coalescingId
DeviceClass
iPad
gameStartWithFollow
localizedTitle
InternalBuild
localizedText
threadId
displayEndTime
actions
isTvAppAction
bundleIds
brandId
clientActionDeepLinks
Universal
settingType
Explicit
Implicit
Marketing
hasScore
suppressIfTunedIn
UserNotifications
KettleTCC
notification authorization status:%ld.
v16@?0@"UNNotificationSettings"8
WLDPushNotificationController._loadURLBagWithCompletionHandler
APSEnvironment
com.apple.WatchListKit
v28@?0@8B16@"NSError"20
com.apple.aps.watchlistd
com.apple.aps.watchlistd.dev
com.apple.aps.watchlistd.demo
com.apple.sportsd.session.xpc
Ios_Live
BYSetupAssistantNeedsToRun
content_canonical_id
content_brand_id
content_external_playable_id
content_media_length_in_milliseconds
content_is_done
content_internal_leg_id
WLDRateLimiter
-init not supported. Use -initWithRate:burst: instead
WLDRateLimiterAccess
WLDPlaybackDirectPlayObserver: Start Observing (%@)
WLDPlaybackDirectPlayObserver: _handleStateChange: appIsRunning: %@
v32@?0@"RBSProcessMonitor"8@"RBSProcessHandle"16@"RBSProcessStateUpdate"24
v16@?0@"<RBSProcessMonitorConfiguring>"8
WLDPlaybackDirectPlayObserver: Stop Observing
WLDPlaybackDirectPlayObserver: No process state matching %@
adamId
description
downgrading
subscribed
serialNumbers
offerIdentifer
offerType
AMSDeviceOfferTypeTV
com.apple.TV
WLDDeviceOfferManager
PreviouslyBadgedTVOffers
AMSDeviceOfferTypeAppleMusic
AMSDeviceOfferTypeiCloud
AMSDeviceOfferTypeAppleCare
AMSDeviceOfferTypeUnknown
WLDDeviceOfferManager._reportAMSDeviceOfferMetrics
user_agent
x_dsid
x_apple_storefront
x_guid
x_userid_keyspace
x_userid_key
cookies
client_version
SubscriptionSyncLastSync
SubscriptionSyncUseStubbedData
IsTVPlusSubscriberLastSetValue
25EF2050-5D1D-419D-AC15-CCA299E77EE0
com.apple.WatchListKit.SubscriptionStore
SR-%@-%@
subscription.plist
stubbedData.plist
WLDPlaybackNowPlayingObserverQueueNotif
WLDPlaybackNowPlayingObserverQueueLookup
v24@?0^{__CFDictionary=}8^v16
WLDPlaybackNowPlayingObserver._updateTransactionState
v12@?0I8
FederatedV2
v24@?0^{__CFArray=}8^{__CFError=}16
v32@?0@"MRPlayerPath"8Q16^B24
significant change
content changed
nominal elapsed time update
elapsed time drift exceeds maximum: %.5f
TVAccessViewServiceViewController
com.apple.TVAccessViewService
WLDRemoteAlertPresenter: security does not allow prompting
WLDRemoteAlertPresenter: already prompting
WLDRemoteAlertPresenter: promptForBundleID: %@
WLDRemoteAlertPresenter deactivated
WLDLivePlaybackReporter: Received nil summary while tuned in, generating tune-out
WLDLivePlaybackReporter: Received nil summary while idle, ignoring
WLDLivePlaybackReporter: Error: Failed to resolve channel %@
WLDLivePlaybackReporter.reportPlayback
v24@?0@"WLKSchedule"8@"NSError"16
WLDLivePlaybackReporter: decorate failed -- unsupported playback type
WLDLivePlaybackReporter: [StateMachine][Idle] input:[%@]
WLDLivePlaybackReporter._processInput
WLDLivePlaybackReporter: [StateMachine][Idle] No action for input: %lu %@
WLDLivePlaybackReporter: [StateMachine][TunedIn] input:[%@]
WLDLivePlaybackReporter: [StateMachine][TunedIn] No action for input: %lu %@
WLDLivePlaybackReporter: will report tune %@
WLDLivePlaybackReporter: will report event
WLDLivePlaybackReporter: Live activity report success: %d
WLDLivePlaybackReporter: Will not report. We have no events
WLDLivePlaybackReporter: decorate failed %@
WLDLivePlaybackReporter: Live activity content boundary report success: %d numEvents: %lu Error: %@
WLDLivePlaybackReporter: No events found at content boundary
WLDPlaybackReporter: Error: Failed to resolve channelID %@
WLDLivePlaybackReporter: Live summary doesn't meet preconditions. channelID:%@ serviceID:%@
Live summary doesn't meet preconditions.
WLDLivePlaybackReporter: Error: Failed to resolve channelID %@
WLDLivePlaybackReporter: EBS summary doesn't meet preconditions. channelID:%@ contentID:%@
EBS summary doesn't meet preconditions.
WLDLivePlaybackReporter: success: %d response:%@
WLDLivePlaybackReporter: Queueing activity report for events: %p
Unknown
TuneIn
TuneOut
ContentBoundary
ScheduleBoundary
_current event ends
_next event begins
_no event found
WLDLivePlaybackReporter: Set up timer for %@ context: %@
WLDLivePlaybackReporter: Requested fire date exceeds max, clamping: %@
WLDLivePlaybackReporter: Done processing timer input: %lu. success %d
WLDLivePlaybackReporter: Cancelling existing timer
external_playable_id
play_head_in_milliseconds
is_done
external_show_id
media_length_in_milliseconds
media_type
is_current
is_show_open
canonical_id
canonical_show_id
internal_leg_id
main_content_length_in_milliseconds
main_content_play_head_in_milliseconds
NOT_SPECIFIED
MOVIE
SPORTS_VOD
WLKAdditions
UWLLiveActivityEvent
NSCopying
WLDClientConnection
WLKConnectionServerProtocol
NSObject
WLDServer
NSXPCListenerDelegate
WLDClientConnectionDelegate
WLDMercuryPushHandler
WLKFederatedPunchoutReporterAdditions
WLDFederatedPunchoutReporter
WLDPushParsing
MapEntry
UWLOptOutEvent
UWLOptInEvent
WLDPlayActivityReportOperation
WLDMetricsUtilities
WLKWatchlistSuppressNotificationsXPCConnectionProtocol
WLDSuppressionClientConnection
WLDTransactionBlockOperation
UWLErrorResponse
UWLLiveActivityEventChannel
WLDUTSPushHandler
UWLMessageWireEnvelope
WLDPlaybackReporter
WLDPlaybackReporterProtocol
WLDPlaybackManager
WLDAppVisibilityManager
WLDFullTVAppMonitor
WLKSportsCommunicationsProtocol
WLDPushNotificationController
APSConnectionDelegate
WLKNotificationCenterDelegate
AMSPushHandlerDelegate
UWLLiveActivityEventContent
WLDRateLimiter
WLDPlaybackDirectPlayObserver
WLDDeviceOfferManager
UWLMessageHeaders
WLDSubscriptionStore
WLDPlaybackNowPlayingObserver
WLDRemoteAlertPresenter
WLDAMSBagObserver
WLDLivePlaybackReporter
_WLDStateMachine
UWLPlayEvent
doubleValue
wlk_stringForKey:
wlk_setObjectUnlessNil:forKey:
wlk_numberForKey:
wlk_dictionaryForKey:
wlk_dateFromMillisecondsSince1970ForKey:
wlk_caseInsensitiveValueForKey:
wlk_boolForKey:defaultValue:
wlk_arrayForKey:
wlkDefaultQueue
vppaState
valueWithError:
valueWithCompletion:
valueForKey:
valueForHTTPHeaderField:
valueForEntitlement:
username
userInfo
updateTrackedBagValuesWithChangedKeys:
unsignedIntegerValue
underlyingQueue
timestamp
timeIntervalSinceNow
timeIntervalSinceDate:
timeIntervalSince1970
taskState
synchronizeSettingsFromCloudIfNeededWithCompletion:
synchronize:completion:
suppressedSportsEventIDs
substringWithRange:
subscribedAppBundleIdentifiers
stringWithUTF8String:
stringWithString:
stringWithFormat:
stringValue
stringForKey:
stringByExpandingTildeInPath
stringByDeletingLastPathComponent
stringByAppendingPathComponent:
storedConfiguration
statusCode
states
startDate
sportsScoreSpoilersAllowed
siriActionsCategories
signpostIdentifier
shouldTrackPlayActivity
shortDescription
sharedUtilities
sharedTracker
sharedSettings
sharedInstanceFiltered
settingsForChannelID:externalID:
setWithObjects:
setValuesForKeysWithDictionary:
setValues:
setValue:forHTTPHeaderField:
setUserNotificationExtensionId:
setUnderlyingQueue:
setTVAppAllowed:
setStatusCondition:completionHandler:
setStateDescriptor:
setSportsNotificationSuppression:forEventID:
setRemoteObjectInterface:
setPushToken:
setPredicates:
setObject:forKeyedSubscript:
setObject:forKey:
setName:
setMaxConcurrentOperationCount:
setInvalidationHandler:
setInterruptionHandler:
setHTTPMethod:
setHTTPBody:
setHARLoggingEnabled:
setExportedObject:
setExportedInterface:
setDSID:
setCountLimit:
setCompletionBlock:
setBuckets:
setBool:forKey:
setBadgeNumber:withCompletionHandler:
serviceWithErrorHandler:
serviceID
serverRouteNamed:
serialNumbers
sanitizedCopy
sanitizeError:
resumeTimeSeconds
resume
resultWithError:
responseDictionary
response
resolveChannelID:
requestWithURL:cachePolicy:timeoutInterval:
requestReload
requestInvalidation
requestByEncodingRequest:parameters:
replaceOccurrencesOfString:withString:options:range:
removeObserver:name:object:
removeObserver:
removeObjectsForKeys:
removeObjectForKey:
removeObjectAtIndex:
removeObject:
removeItemAtURL:error:
removeItemAtPath:error:
removeDeviceOfferWithIdentifier:account:bag:logKey:
removeBadgeIdentifier:
removeAllObjects
remoteObjectProxyWithErrorHandler:
registerBagKeySet:forProfile:profileVersion:
refresh
recordFederatedPunchoutEventWithError:metadata:
rateLimit
raise:format:
punchoutTime
publicToken
process
privateModeEnabled
predicateMatchingBundleIdentifier:
postNotificationName:object:userInfo:
post:title:body:options:
player
playbackType
playbackState
playbackRate
platform
performAuthentication
path
overrideChannelID
optedIn
opportunisticTopics
operations
offerType
offerIdentifier
objectForKeyedSubscript:
objectForKey:ofClass:
objectForKey:
objectAtIndex:
numberWithUnsignedInteger:
numberWithLongLong:
numberWithInteger:
numberWithInt:
numberWithDouble:
numberWithBool:
name
mutableCopy
monitorWithConfiguration:
migrateToNewBadgingSystemIfNeeded
metadataByIdentifier
merge:completion:
makeRequestWithCompletion:
longLongValue
localizedName
localizedDescription
loadIfNeededWithCompletion:
length
legID
lastObject
items
isWatchListEnabled
isTimerDerived
isTVPlusSubscriber
isSubscribed
isShowClosed
isSameContent:
isRunning
isNetworkReachable
isMultiUser
isLiveType
isItunesOrFirstPartyBundleID:
isItunesBundleID:
isInstalled
isFullTVAppEnabledwithCompletion:
isFullTVAppEnabledWithCompletion:
isExecuting
isEquivalentToSummaryExcludingTimestamp:
isEquivalentToSummaryExcludingCursor:
isEqualToSummary:
isEqualToString:
isEqualToNumber:
isDowngrading
isCurrentEpisode
isConsented
isCategoryEnabledByUser:
isCategoryBadgeSettingEnabledByUser:
isCancelled
isAlwaysLive
internalLegID
interfaceWithProtocol:
integerValue
integerForKey:
installedAppBundleIdentifiers
initWithVocabularyIdentifier:spokenPhrase:pronunciationHint:
initWithUUIDString:
initWithTopic:
initWithTimeInterval:sinceDate:
initWithSummary:canonicalID:
initWithSuiteName:
initWithMediaRemoteDictionary:bundleID:accountID:
initWithMediaItems:mediaContainer:playShuffled:playbackRepeatMode:resumePlayback:playbackQueueLocation:playbackSpeed:mediaSearch:
initWithMachServiceName:options:
initWithMachServiceName:
initWithIntent:response:
initWithIdentifier:title:type:artwork:
initWithIdentifier:delay:
initWithIdentifier:
initWithEnvironmentName:namedDelegatePort:queue:
initWithEnabledActionTypes:
initWithDictionary:
initWithContainerID:bag:
initWithConfiguration:bag:
initWithChannelID:serviceID:
initWithChannelID:externalContentID:
initWithCapacity:
initWithBundleIdentifier:allowPlaceholder:error:
initWithBundleIdentifier:
initWithBundleID:timestamp:duration:elapsedTime:featureDuration:featureElapsedTime:externalProfileID:contentID:accountID:playbackState:playbackRate:completionState:isAlwaysLive:serviceID:currentPlaybackDate:playbackType:isTimerDerived:channelID:
initWithBundleID:externalID:
initWithAccount:options:
initForReadingFromData:error:
identifierForPlayActivityID:channelID:duration:
identifier
httpResponse
handleRefreshCacheNotification
handleForPredicate:error:
getResourceValue:forKey:error:
getNotificationSettingsWithCompletionHandler:
flush
firstObject
fileURLWithPath:
fileExistsAtPath:
fetchConfigurationWithCompletionHandler:
featureElapsedTime
featureDuration
externalShowID
externalServiceID
externalProfileID
externalPlayableID
externalContentID
eventForDate:
eventAfterDate:
errorWithDomain:code:userInfo:
error
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
enumerateObjectsUsingBlock:
enumerateKeysAndObjectsUsingBlock:
entitlements
enqueueEvents:
endDate
encoder
elapsedTimeSummaryWithPlaybackState:timerDerived:
elapsedTime
duration
writeToFile:atomically:
donateInteractionWithCompletion:
domain
doesNotRecognizeSelector:
dictionaryWithObjects:forKeys:count:
dictionaryForKey:
dictionary
deviceOffers
descriptor
deniedBrands
delete:
defaultOfferManager
defaultManager
defaultLocationManager
defaultCenter
defaultAppLibrary
decodeObjectOfClasses:forKey:
decodeObjectOfClass:forKey:
debugStringForPlaybackState:
dateWithTimeIntervalSinceNow:
date
dataWithContentsOfFile:
data
currentState
currentRunLoop
currentPlaybackDate
currentEnvironment
currentBadgeNumber
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
countByEnumeratingWithState:objects:count:
count
copy
contentType
contentID
containsObject:
consentedBrands
componentsJoinedByString:
completionState
compare:
client
clearStatusCondition:completionHandler:
cleanupTime
channelIDForBundleID:
channelID
channelForID:
channelForBundleID:
canonicalShowID
canonicalID
cancel
bundleRecordWithApplicationIdentifier:error:
bundleIdentifier
bundle
boolValue
boolForKey:
blockOperationWithBlock:
base64EncodedStringWithOptions:
bagForProfile:profileVersion:
authorizationStatus
auditToken
arrayWithObjects:count:
arrayWithObject:
arrayWithArray:
array
archivedDataWithRootObject:requiringSecureCoding:error:
applicationState
appBundleIDs
appAdamID
ams_storefront
ams_sharedAccountStore
ams_isManagedAppleID
ams_iTunesAccountWithDSID:
ams_cookiesForURL:
ams_activeiTunesAccount
ams_DSID
allocWithZone:
allObjects
allHeaderFields
allAppBundleIdentifiers
adjacentEventsForDate:fuzziness:
addPropertiesWithDictionary:
addOperationWithBlock:
addOperation:
addObserver:selector:name:object:
addObjectsFromArray:
addObject:
addFinishBlock:
addExecutionBlock:
addEntriesFromDictionary:
addBagKey:valueType:
addBadgeIdentifier:
adamId
activeAccount
accountIDAsNumber
accountID
account
accessStatus
_writeToDisk:completion:
_setOpportunisticTopics:
_setLaunchId:
_setExtensionBundleId:
_setEnabledTopics:
_postChangeDictionaryToCloud:completion:
_locationAuthorizationStatus:
_fetchSyncDictionary:
_dictionaryOnDisk:
URLWithString:
wlk_defaultBag
registerAdditionalBagKey:withValueType:
description
copyWithZone:
hasBundleId
setMillisecondsSinceEvent:
setHasMillisecondsSinceEvent:
hasMillisecondsSinceEvent
hasProfileId
hasChannel
hasContent
cause
setCause:
setHasCause:
hasCause
causeAsString:
StringAsCause:
setExpectedStartTimeEpochMillis:
setHasExpectedStartTimeEpochMillis:
hasExpectedStartTimeEpochMillis
setCleanupTimeEpochMillis:
setHasCleanupTimeEpochMillis:
hasCleanupTimeEpochMillis
contractOrTimed
setContractOrTimed:
setHasContractOrTimed:
hasContractOrTimed
contractOrTimedAsString:
StringAsContractOrTimed:
dictionaryRepresentation
readFrom:
writeTo:
copyTo:
isEqual:
hash
mergeFrom:
bundleId
setBundleId:
millisecondsSinceEvent
profileId
setProfileId:
channel
setChannel:
content
setContent:
expectedStartTimeEpochMillis
cleanupTimeEpochMillis
.cxx_destruct
_cleanupTimeEpochMillis
_expectedStartTimeEpochMillis
_millisecondsSinceEvent
_bundleId
_cause
_channel
_content
_contractOrTimed
_profileId
_has
TB,R,N
T@"NSString",&,N,V_bundleId
TB,N
Tq,N,V_millisecondsSinceEvent
T@"NSString",&,N,V_profileId
T@"UWLLiveActivityEventChannel",&,N,V_channel
T@"UWLLiveActivityEventContent",&,N,V_content
Ti,N,V_cause
Tq,N,V_expectedStartTimeEpochMillis
Tq,N,V_cleanupTimeEpochMillis
Ti,N,V_contractOrTimed
init
clientConnectionDidInvalidate:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
requestNowPlayingSummaries:
requestDecoratedNowPlayingSummaries:
reportPlayback:completion:
reportPlayback:sessionID:completion:
endPlaybackSession:
checkPendingPlaybackReports
requestConsentForBundleID:forceAuth:replyHandler:
deletePlaybackActivityWithIdentifier:bundleID:
fetchApplications:
readSettingsStore:
writeSettingsStore:replyHandler:
postSettings:replyHandler:
fetchSettings:
fetchLocationAuthorizationStatus:
ping
prewarm
saveOffer:completionHandler:
removeOfferByBadgeId:completionHandler:
fetchOffers:completion:
clearOffers:
fetchSubscriptionData:callerProcessID:completion:
refreshSubscriptionData:
reportFederatedPunchout:
initWithConnection:clientIdentifier:
_didInvalidate
connection
clientIdentifier
delegate
setDelegate:
_remoteObjectProxy
_connection
_clientIdentifier
_delegate
T@"NSXPCConnection",R,N,V_connection
T@"NSString",R,C,N,V_clientIdentifier
T@"<WLDClientConnectionDelegate>",W,N,V_delegate
dealloc
_handleRestrictionsChangedNotification:
_handleFamilyUpdateNotification:
_handleContinueWatchingNotification:
server
listener:shouldAcceptNewConnection:
_init
addClient:
start
handleSubscriptionRegistration
handleAMSDeviceOffer
handleVideosUIInvalidationNotification:
handleUNWidgetRegistration
_invalidateWidgets
_clients
_xpcListener
_playbackManager
_pushController
_getBadgeID:
_addMercurySilentNotifOfferSource:badgeId:
shouldHandleNotification:
handleNotification:shouldBadge:
_getBadgeAlertType:
metricsController
setMetricsController:
_metricsController
T@"AMSMetrics",&,N,V_metricsController
setTtl:
matchTime
setMatchTime:
failureReason
setFailureReason:
expiry
TQ,N
T@"NSDate",&,N
Tq,N
sharedFederatedPunchoutReporter
recordPunchout:
recordPlaybackSummary:
_reportPunchoutEvent:withPlaybackSummary:
_metadataForEventWithPunchout:playbackSummary:
_configureTimerWithDate:
analyticsConnection
setAnalyticsConnection:
queue
setQueue:
timer
setTimer:
ledger
setLedger:
_analyticsConnection
_queue
_timer
_ledger
T@"VSAnalyticsServiceConnection",&,N,V_analyticsConnection
T@"NSOperationQueue",&,N,V_queue
T@"NSObject<OS_dispatch_source>",&,N,V_timer
T@"NSMutableDictionary",&,N,V_ledger
actionTypeForNotification:
accountIdentifierForNotification:
hasKey
hasValue
setKey:
value
setValue:
_key
_value
T@"NSString",&,N,V_key
T@"NSString",&,N,V_value
hasBrandId
brandId
setBrandId:
_brandId
T@"NSString",&,N,V_brandId
initWithURLRequest:options:
initWithLivePlayEvents:
initWithPlayEvents:
prepareURLRequest:
nextExpectedReportMillis
_protoForURLRequest:
_userAgentHeaderForRequest:
playEvents
setPlayEvents:
livePlayEvents
setLivePlayEvents:
envelope
setEnvelope:
_playEvents
_livePlayEvents
_envelope
T@"NSArray",C,N,V_playEvents
T@"NSArray",C,N,V_livePlayEvents
T@"UWLMessageWireEnvelope",&,N,V_envelope
T@"NSNumber",R,N
sendMetricsEvents:metricsController:
suppressNotificationsFor:completion:
enableNotificationsFor:completion:
_transaction
retryPeriodInSeconds
setRetryPeriodInSeconds:
_retryPeriodInSeconds
Ti,N,V_retryPeriodInSeconds
hasChannelCanonicalId
hasChannelBrandId
hasChannelExternalLiveServiceId
hasChannelInternalLegId
channelCanonicalId
setChannelCanonicalId:
channelBrandId
setChannelBrandId:
channelExternalLiveServiceId
setChannelExternalLiveServiceId:
channelInternalLegId
setChannelInternalLegId:
_channelBrandId
_channelCanonicalId
_channelExternalLiveServiceId
_channelInternalLegId
T@"NSString",&,N,V_channelCanonicalId
T@"NSString",&,N,V_channelBrandId
T@"NSString",&,N,V_channelExternalLiveServiceId
T@"NSString",&,N,V_channelInternalLegId
handleNotification:
_debugDescriptionForNotificationType:
_handlePayloadExpiredForNotificationType:
_handlePayloadInvalidatedForNotificationType:
_handlePayload:forNotificationType:
_reportMetrics:
playEventsType
optInEventsType
optOutEventsType
liveActivityEventsType
clearPlayEvents
addPlayEvents:
playEventsCount
playEventsAtIndex:
clearOptInEvents
addOptInEvents:
optInEventsCount
optInEventsAtIndex:
clearOptOutEvents
addOptOutEvents:
optOutEventsCount
optOutEventsAtIndex:
clearLiveActivityEvents
addLiveActivityEvents:
liveActivityEventsCount
liveActivityEventsAtIndex:
version
setVersion:
headers
setHeaders:
optInEvents
setOptInEvents:
optOutEvents
setOptOutEvents:
liveActivityEvents
setLiveActivityEvents:
_headers
_liveActivityEvents
_optInEvents
_optOutEvents
_version
Ti,N,V_version
T@"UWLMessageHeaders",&,N,V_headers
T@"NSMutableArray",&,N,V_playEvents
T@"NSMutableArray",&,N,V_optInEvents
T@"NSMutableArray",&,N,V_optOutEvents
T@"NSMutableArray",&,N,V_liveActivityEvents
fetchCanonicalIDForSummary:completionHandler:
_cachedMetadataByIdentifier
_cachedNotFoundIdentifiers
_decorateVODSummary:completion:
_intentsMediaItemTypeFromWLKContentType:
_donateIntentWithPlaybackSummary:andMetadata:
invalidate
initWithSessionID:
_reportPlayEvent:summary:completion:
_cleanupWithSuccess:error:completion:
_clearBDTimer
_scheduleTimedReportForSummary:afterMillis:
_BDTimer
_sessionID
_lastSummary
_networkReachabilityChanged:
sharedManager
nowPlayingObserver
handleDirectPlaybackSummary:sessionID:
endDirectPlaybackSession:
handlePlaybackSummary:sessionID:
fetchNowPlayingSummaries:
fetchDecoratedNowPlayingSummaries:
checkPendingReports
reporter
_getLastSummaryBySessionID:
_removeLastSummaryBySessionID:
_setSessionReporter:sessionID:
_setLastSummaryBySessionID:sessionID:
_getSessionReporterBySessionID:
_getReporterBySessionID:isLive:
_removeReporterBySessionID:
_endSession:
_handleDirectPlaybackAppTermination:
_enqueuePlaybackSummary:sessionID:serialize:
_handleReportingError:forSummary:
_offlineValidation:
_onlineValidation:completion:
_shouldPromptForBundleID:outAccessStatus:
_promptForBundleID:
_enqueuePendingReports
_scanForPendingReports
_serialize:
_cleanupSummary:
_queueDir
_queuePathForSummary:
_catalogSummary:
_isDirectPlaybackReportingDisabled
lastSummaryDictionary
setLastSummaryDictionary:
_reporterDictionary
_nowPlayingObserver
_directPlayObserver
_pendingReportsTransaction
_isPrompting
_rateLimiter
_directPlayClientList
_disableDirectPlaybackReporting
_lastSummaryDictionary
T@"NSMutableDictionary",&,V_lastSummaryDictionary
_networkReachabilityDidChangeNotification:
_accountDidChangeNotification:
updateAppVisibility
_updateRequestedOnNetworkChange
_updateRequestedOnAccountChange
_activeAccountChangedNotification:
sharedInstance
createSessionWithCanonicalId:completion:
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveToken:forInfo:
connection:didReceiveURLToken:forInfo:
connection:didReceiveURLTokenError:forInfo:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
connection:channelSubscriptionsFailedWithFailures:
handleAction:
pushPaylod:shouldUpdateBadgeForBundleIdentifier:badgeIdentifier:enabled:
pushPayload:withBadgeRequest:
registerOpportunisticTopics
_registerOpportunisticTopics
_augmentCustomEventInfo:
_reportBulletinMetrics:
_reportMercuryMetrics:
_postNotificationWithPayload:
_postNotificationToUser:title:body:options:
_loadURLBagWithCompletionHandler:
_portNameForEnvironmentName:
_xpcConnection
_environment
_validTopics
_pendingOpportunisticTopics
_notifCenter
_utsPushHandler
_amsPushHandler
_mercuryPushHandler
T@"AMSMetrics",R,N,V_metricsController
hasContentCanonicalId
hasContentBrandId
hasContentExternalPlayableId
setContentMediaLengthInMilliseconds:
setHasContentMediaLengthInMilliseconds:
hasContentMediaLengthInMilliseconds
setContentIsDone:
setHasContentIsDone:
hasContentIsDone
hasContentInternalLegId
contentCanonicalId
setContentCanonicalId:
contentBrandId
setContentBrandId:
contentExternalPlayableId
setContentExternalPlayableId:
contentMediaLengthInMilliseconds
contentIsDone
contentInternalLegId
setContentInternalLegId:
_contentMediaLengthInMilliseconds
_contentBrandId
_contentCanonicalId
_contentExternalPlayableId
_contentInternalLegId
_contentIsDone
T@"NSString",&,N,V_contentCanonicalId
T@"NSString",&,N,V_contentBrandId
T@"NSString",&,N,V_contentExternalPlayableId
Tq,N,V_contentMediaLengthInMilliseconds
TB,N,V_contentIsDone
T@"NSString",&,N,V_contentInternalLegId
initWithRate:burst:
doOperation
setRate:
rate
setBurst:
burst
_addToken
_claimToken
_rate
_burst
_tokens
_accessQueue
initWithBundleID:
_startObserving
_stopObserving
setAppIsRunning:
_getAppRunningState
_identifier
updateHandler
setUpdateHandler:
bundleID
setBundleID:
stateMonitor
setStateMonitor:
appIsRunning
transaction
setTransaction:
_appIsRunning
_updateHandler
_bundleID
_stateMonitor
T@"NSString",C,N,V_bundleID
T@"RBSProcessMonitor",&,N,V_stateMonitor
TB,N,V_appIsRunning
T@"WLKTransactionScope",&,N,V_transaction
T@?,C,N,V_updateHandler
amsDeviceOffertoDictionary:
_hasProcessedDeviceOfferForCurrentUser:
processDeviceOffers
_reportAMSDeviceOfferMetrics
cookiesType
hasXGuid
hasXUseridKeyspace
hasXUseridKey
clearCookies
addCookies:
cookiesCount
cookiesAtIndex:
hasPfm
setClientVersion:
setHasClientVersion:
hasClientVersion
userAgent
setUserAgent:
xDsid
setXDsid:
xAppleStorefront
setXAppleStorefront:
xGuid
setXGuid:
xUseridKeyspace
setXUseridKeyspace:
xUseridKey
setXUseridKey:
cookies
setCookies:
setPfm:
clientVersion
_clientVersion
_cookies
_pfm
_userAgent
_xAppleStorefront
_xDsid
_xGuid
_xUseridKey
_xUseridKeyspace
T@"NSString",&,N,V_userAgent
T@"NSString",&,N,V_xDsid
T@"NSString",&,N,V_xAppleStorefront
T@"NSString",&,N,V_xGuid
T@"NSString",&,N,V_xUseridKeyspace
T@"NSString",&,N,V_xUseridKey
T@"NSMutableArray",&,N,V_cookies
T@"NSString",&,N,V_pfm
Ti,N,V_clientVersion
_coalescingIDForUser:forcedReload:
_postDidUpdateCrossProcessNotificationWithProcessID:
_shouldFetchFreshCopy
_inflightCoalescingID
_setInflightCoalescingID:
_coalescedCompletion
_setCoalescedCompletion:
_fetchDataFromCommerceWithCoalescingID:completion:
_readFromDisk
_writeToDisk:
_supportPath
_stubbedDataPath
_getSubscriptionDataMaxAge
_setAdPlatformsStatusCondition:
_accountID
_defaults
_enabled
_subscriptionData
_subscriptionDateDidUpdateNotificationToken
_propLock
_maxAgeInSeconds
_nowPlayingInfoDidChangeNotification:
_isPlayingDidChangeNotification:
_activePlayerPathsDidChangeNotification:
initWithUpdateHandler:
startObserving
stopObserving
nowPlayingSummaries
_fetchNowPlayingInfo:
_isPlayerPathPlaying:
_shouldPlayerPathBeConsidered:
_getActivePlayerPaths
_setActivePlayerPaths:
_fetchActivePlayerPaths
_nowPlayingInfoForPlayerPath:
_isAnyAppPlaying
_nowPlayingAppIsPlayingForPlayerPath:
_processLastSummary:
_forceFetchNowPlayingInfofromActivePlayers
_unsupportedMediaTypes
_updateWithInfo:sessionID:
_isSummary:signifantChangeFromSummary:
_isObserving
_notificationQueue
_lookupQueue
_lastSummaryDict
_activePlayerPaths
isPresenting
isUnlocked
promptForBundleID:
_isPad
_amsBagDidChangeNotification:
sharedObserver
decorateSummary:completion:
_decorateLiveSummary:completion:
_decorateEBSSummary:completion:
_tuneEventFromSummary:schedule:tuneIn:
_contentEventFromSummary:schedule:event:contentBegin:
_processInput:completion:
state
setState:
schedule
setSchedule:
_doTune:completion:
_doContentBoundaryWithCompletion:
_reportPlayEvents:account:completion:
_debugStringForInput:
_evaluateSchedule
_configureTimerForDate:input:
_invalidateTimer
lastSummary
setLastSummary:
_schedule
_timerEventDate
T@"WLKPlaybackSummary",&,V_lastSummary
T@"WLKTransactionScope",&,V_transaction
TQ,Vstate
setIsDone:
setHasIsDone:
hasIsDone
hasExternalShowId
setMediaLengthInMilliseconds:
setHasMediaLengthInMilliseconds:
hasMediaLengthInMilliseconds
mediaType
setMediaType:
setHasMediaType:
hasMediaType
mediaTypeAsString:
StringAsMediaType:
setIsCurrent:
setHasIsCurrent:
hasIsCurrent
setIsShowOpen:
setHasIsShowOpen:
hasIsShowOpen
hasCanonicalId
hasCanonicalShowId
hasInternalLegId
setMainContentLengthInMilliseconds:
setHasMainContentLengthInMilliseconds:
hasMainContentLengthInMilliseconds
setMainContentPlayHeadInMilliseconds:
setHasMainContentPlayHeadInMilliseconds:
hasMainContentPlayHeadInMilliseconds
externalPlayableId
setExternalPlayableId:
playHeadInMilliseconds
setPlayHeadInMilliseconds:
isDone
externalShowId
setExternalShowId:
mediaLengthInMilliseconds
isCurrent
isShowOpen
canonicalId
setCanonicalId:
canonicalShowId
setCanonicalShowId:
internalLegId
setInternalLegId:
mainContentLengthInMilliseconds
mainContentPlayHeadInMilliseconds
_mainContentLengthInMilliseconds
_mainContentPlayHeadInMilliseconds
_mediaLengthInMilliseconds
_playHeadInMilliseconds
_canonicalId
_canonicalShowId
_externalPlayableId
_externalShowId
_internalLegId
_mediaType
_isCurrent
_isDone
_isShowOpen
T@"NSString",&,N,V_externalPlayableId
Tq,N,V_playHeadInMilliseconds
TB,N,V_isDone
T@"NSString",&,N,V_externalShowId
Tq,N,V_mediaLengthInMilliseconds
Ti,N,V_mediaType
TB,N,V_isCurrent
TB,N,V_isShowOpen
T@"NSString",&,N,V_canonicalId
T@"NSString",&,N,V_canonicalShowId
T@"NSString",&,N,V_internalLegId
Tq,N,V_mainContentLengthInMilliseconds
Tq,N,V_mainContentPlayHeadInMilliseconds
@16@0:8
v32@0:8@16Q24
@24@0:8^{_NSZone=}16
B16@0:8
v24@0:8q16
v20@0:8B16
i16@0:8
v20@0:8i16
@20@0:8i16
i24@0:8@16
B24@0:8@16
v24@0:8@16
Q16@0:8
q16@0:8
v16@0:8
@"NSString"
@"UWLLiveActivityEventChannel"
@"UWLLiveActivityEventContent"
{?="cleanupTimeEpochMillis"b1"expectedStartTimeEpochMillis"b1"millisecondsSinceEvent"b1"cause"b1"contractOrTimed"b1}
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@?16
v32@0:8@16@?24
v40@0:8@16@24@?32
v36@0:8@16B24@?28
v32@0:8@16@24
v28@0:8B16@?20
v32@0:8B16i20@?24
v24@0:8@?<v@?@"NSArray">16
v24@0:8@?<v@?@"NSDictionary">16
v32@0:8@"WLKPlaybackSummary"16@?<v@?B@"NSError">24
v40@0:8@"WLKPlaybackSummary"16@"NSString"24@?<v@?B@"NSError">32
v24@0:8@"NSString"16
v36@0:8@"NSString"16B24@?<v@?B>28
v32@0:8@"NSString"16@"NSString"24
v32@0:8@"NSDictionary"16@?<v@?B>24
v32@0:8@"NSDictionary"16@?<v@?B@"NSError">24
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
v24@0:8@?<v@?q>16
v32@0:8@"NSDictionary"16@?<v@?@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSError">24
v28@0:8B16@?<v@?@"NSArray"@"NSError">20
v24@0:8@?<v@?@"NSError">16
v32@0:8B16i20@?<v@?@"WLKSubscriptionData"@"NSError">24
v24@0:8@"WLKFederatedPunchout"16
@32@0:8@16@24
@"<WLKConnectionClientProtocol>"
@"NSXPCConnection"
@"<WLDClientConnectionDelegate>"
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v24@0:8@"WLDClientConnection"16
@"NSMutableSet"
@"NSXPCListener"
@"WLDPlaybackManager"
@"WLDPushNotificationController"
@24@0:8@16
v28@0:8@16B24
q24@0:8@16
@"AMSMetrics"
v24@0:8Q16
@"VSAnalyticsServiceConnection"
@"NSOperationQueue"
@"NSObject<OS_dispatch_source>"
@"NSMutableDictionary"
@"NSArray"
@"UWLMessageWireEnvelope"
@"WLKTransactionScope"
@24@0:8q16
v32@0:8@16q24
@24@0:8Q16
@"UWLMessageHeaders"
@"NSMutableArray"
q24@0:8Q16
v32@0:8@"WLKPlaybackSummary"16@?<v@?@"NSString"@"NSError">24
v36@0:8B16@20@?28
@"WLKPlaybackSummary"
@28@0:8@16B24
v36@0:8@16@24B32
B32@0:8@16^Q24
@"WLDPlaybackNowPlayingObserver"
@"WLDPlaybackDirectPlayObserver"
@"WLDRateLimiter"
v48@0:8@16@24@32@40
v40@0:8@16@24@32
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v40@0:8@"APSConnection"16@"NSData"24@"APSAppTokenInfo"32
v40@0:8@"APSConnection"16@"APSURLToken"24@"APSURLTokenInfo"32
v40@0:8@"APSConnection"16@"NSError"24@"APSURLTokenInfo"32
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
v24@0:8@"NSDictionary"16
B44@0:8@16@24@32B40
B44@0:8@"AMSPushPayload"16@"NSString"24@"NSString"32B40
v32@0:8@"AMSPushPayload"16@"AMSBadgeRequest"24
@"APSConnection"
@"WLKNotificationCenter"
@"WLDUTSPushHandler"
@"AMSPushHandler"
@"WLDMercuryPushHandler"
{?="contentMediaLengthInMilliseconds"b1"contentIsDone"b1}
@32@0:8Q16Q24
@"NSObject<OS_dispatch_queue>"
@?16@0:8
@"RBSProcessMonitor"
{?="clientVersion"b1}
v36@0:8B16Q20@?28
@"NSNumber"
@"NSUserDefaults"
@"WLKSubscriptionData"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@24@0:8@?16
@36@0:8@16@24B32
@44@0:8@16@24@32B40
v32@0:8Q16@?24
v32@0:8Q16@?<v@?B@"NSError">24
@"WLKSchedule"
@"NSDate"
{?="mainContentLengthInMilliseconds"b1"mainContentPlayHeadInMilliseconds"b1"mediaLengthInMilliseconds"b1"contractOrTimed"b1"mediaType"b1"isCurrent"b1"isDone"b1"isShowOpen"b1}
-6I`
#6GXi
Attempt to xpc encode SubscriptionData which has wrong type.
Attempt to xpc encode SubscriptionData error which has wrong type.
WLDServer.start
WLDFederatedPunchoutReporter - Recorded punchout that matches existing one in ledger. reporting back with failure reason %lu
WLDFederatedPunchoutReporter - Adding punchout to ledger: %@
WLDFederatedPunchoutReporter - Attempted to record a punchout with invalid channel ID: %@
WLDFederatedPunchoutReporter - found matching punchout for reported playback summary: %@
WLDFederatedPunchoutReporter - playback summary is from expected channel but not the expected playable.
WLDFederatedPunchoutReporter - Playback summary matches pending punchout.
WLDFederatedPunchoutReporter - Playback summary elapsed time of %ld is greater than %ld second epsilon from resume time %ld
WLDFederatedPunchoutReporter - Playback summary elapsed time of %ld is within %ld second epsilon from resume time %ld
WLDFederatedPunchoutReporter - No matching channel for bundle ID %@
WLDFederatedPunchoutReporter - Recording punchout to analytics connection %p with error %@
WLDFederatedPunchoutReporter - Failed to connect to analytics service: %@
WLDFederatedPunchoutReporter - New punchout recorded with pre-existing timer.
WLDFederatedPunchoutReporter - punchout expiry timer fired, processing %lu punchouts.
WLDFederatedPunchoutReporter - Punchout expired: %@
WLDPushParsing - Unknown action type: %@
WLDPushParsing - No value found for action type in payload
NetworkRequest.Config
WLDMetricsUtilities - No metrics to report.
WLDMetricsUtilities - Will send events: %@
WLDMetricsUtilities - Error flushing events: %@
WLDMetricsUtilities - Events flushed.
WLDUTSPushHandler - Handling %@ notification
WLDUTSPushHandler - No payload.
WLDUTSPushHandler - Payload is expired %@, ignoring and invalidating
WLDUTSPushHandler - Payload indicates invalidation
WLDUTSPushHandler - Processed Up Next delta with %lu items
WLDUTSPushHandler - Successfully saved Up Next delta, requesting reload
WLDUTSPushHandler - Failed to save Up Next delta: %@
WLDUTSPushHandler - Reporting metrics
WLDPlaybackReporter - %@ init:
WLDPlaybackReporter - %@ dealloc: sessionID: %@
WLDPlaybackReporter - %@ Begin Transaction: setLastSummary playbackState %@
WLDPlaybackReporter - Error: Failed to resolve channelID %@
WLDPlaybackReporter - Error: could not resolve lookupID for %@
WLDPlaybackReporter - %@ Report playback activity:%p summary:%p
WLDPlaybackReporter - %@ Returning cached metadata for %@.
WLDPlaybackReporter - Item with identifier %@ is known to be unavailable.
WLDPlaybackReporter - Activity lookup failed: %@
WLDPlaybackReporter - Activity lookup got a %ld. We will not retry.
WLDPlaybackReporter - %@ Got metadata for %@.
WLDPlaybackReporter - %@: Note: DSID mismatch. Active:%@ Summary:%@
WLDPlaybackReporter - %@ Queueing activity report: %p
WLDPlaybackReporter - %@ Ended Transaction
WLDPlaybackReporter - Skipping donation because user didn't initiate playback.
WLDPlaybackReporter - Could not find bundle for ID com.apple.tv - %@
WLDPlaybackReporter - Error donating interaction: %@
WLDPlaybackReporter - %@ TR: Cancelling existing timer
WLDPlaybackReporter - %@ TR: Will not generate timed report because playback state is not playing
WLDPlaybackReporter - %@ TR: Will schedule timed report in %@ millis
WLDPlaybackReporter - %@ TR: Will enqueue: %@
WLDPlaybackReporter - %@ TR: Successful playback report
WLDPlaybackReporter - %@: TR: Failed playback report %@
WLDPlaybackReporter - %@ TR: Will not generate report because current playback state does not satisfy conditions
WLDFullTVAppMonitor - Full TV App %@
WLDFullTVAppMonitor - Account changes. Full TV App %@
WLDPushNotificationController - Push environment: %@
WLDPushNotificationController - Push token: %@, DSID: %@, connection: %@
WLDPushNotificationController - Handling request to register opportunistic topics
WLDPushNotificationController - Deferring request to register opportunistic topics
WLDPushNotificationController - didReceivePublicToken: %@
WLDPushNotificationController - Received push notification: %@
WLDPushNotificationController - Received sync request of type: %@
WLDPushNotificationController - Processing settings sync request
WLDPushNotificationController - Completed WLK settings sync with success:%@ %@
WLDPushNotificationController - Processing subscriptions sync request
WLDPushNotificationController - Completed WLK subscription sync with success:%@ %@
WLDPushNotificationController - accountIdentifer missing or mismatched
WLDPushNotificationController - AMS wants to handle notification: %@
WLDPushNotificationController - Suppressing AMS/Mercury notification. Payload lacks subsection
WLDPushNotificationController - Handling mercury notification: %@
WLDPushNotificationController - User has disabled Marketing notifs. Skip badging.
WLDPushNotificationController - Notification is unhandled: %@
WLDPushNotificationController - Ignoring unknown topic: %@
sportsd: Error connecting. %@
sportsd: Error creating session. %@
WLDPushNotificationController - AMSPushHandler -- badging is disabled in settings
WLDPushNotificationController - AMSPushHandler badge -- new badging number:%@
WLDPushNotificationController - AMSPushHandler unbadge -- new badging number:%@
WLDPushNotificationController - Registering opportunistic topic: %@
WLDPushNotificationController - Canonical ID: %@ Coalescing ID: %@
WLDPushNotificationController - Not inspecting action for bundleIDs: %@ because none are installed.
WLDPushNotificationController - App library: %@
WLDPushNotificationController - Payload lacks an identifier.
WLDPushNotificationController - Payload lacks a title.
WLDPushNotificationController - Payload lacks a message.
WLDPushNotificationController - Payload lacks an action.
WLDPushNotificationController - Payload has a score.
WLDPushNotificationController - User has sports scores disabled
WLDPushNotificationController - Sports notification suppression is currently active for the event
WLDPushNotificationController - Payload lacks a known category type.
WLDPushNotificationController - Buddy/OOB has not completed. Will drop notification
WLDPushNotificationController - Will enqueue notification with action URL: %@
WLDPushNotificationController - Now Playing Canonicals: %@
WLDPushNotificationController - Discarding notification for current game %@
WLDPushNotificationController - Discarding notification with inappropriate payload.
WLDPushNotificationController - Push notification controller is nil. Notification not posted.
WLDPushNotificationController - Configuration: %@ %@
WLDPushNotificationController - Connection interrupted.
WLDPushNotificationController - Connection invalidated.
WLDDeviceOfferManager - Found %lu offer(s) in [AMSDevice deviceOffers]
WLDDeviceOfferManager - [AMSDevice deviceOffers] returns nil
WLDDeviceOfferManager - Found %lu TV offer(s)
WLDDeviceOfferManager - [processDeviceOffers] badging TV App
WLDDeviceOfferManager - Inactive iTunes account
WLDDeviceOfferManager - Received device offer [%@] to check
WLDDeviceOfferManager - Device TV offer [%@] has already been processed for current user
WLDDeviceOfferManager - New device TV offer [%@] for current user
WLDDeviceOfferManager - New device TV offer for current user
WLDDeviceOfferManager - Failed to save device TV offer [%@]
Subscription sync is disabled
Subscription data has expired or is nil.
Subscription client is requesting forced refresh
Fetching for coalescingID: %@
Fetched subscription data is nil. No update.
There has been no change in subscription data.
Subscription data has changed. Update cached copy.
Subscription data is still valid, returning cache
Will coalesce operation: %@. Will _not_ go outbound.
Failed to fetch subscription data
Using stubbed subscription data
Read failed secure unarchiver error: %@
Read ignoring unsupported root object: %@
Failed to create directory %@: %@
Failed to archive subscription data: %@
Wrote subscription store %d
DSID changed
User sign-in or sign-out. Remove persisted cache
Posting did update cross process note
Failed to set status condition in adPlatforms: %@
Successfully set status condition in adPlatforms
Failed to clear status condition in adPlatforms: %@
Successfully cleared status condition in adPlatforms
No change in condition. Skip setting status condition in adPlatforms
WLDPlaybackNowPlayingObserver - Start Playback observation
WLDPlaybackNowPlayingObserver - Stop Playback observation
WLDPlaybackNowPlayingObserver - Generating stopped playback event
WLDPlaybackNowPlayingObserver - -SigEval- ignoring duplicate NPI
WLDPlaybackNowPlayingObserver - _processLastSummary Generating stopped playback event
WLDPlaybackNowPlayingObserver - Calling update handler with summary: %@
WLDPlaybackNowPlayingObserver - -SigEval- update %@ ->
WLDPlaybackNowPlayingObserver - -SigEval- %@
WLDPlaybackNowPlayingObserver - -SigEval- [%d] reason: %@
softlink:r:path:/System/Library/PrivateFrameworks/SetupAssistant.framework/SetupAssistant
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>20A241133</string>
<key>CFBundleAllowMixedLocalizations</key>
<true/>
<key>CFBundleIdentifier</key>
<string>com.apple.watchlistd</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>20A5283j</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>16.0</string>
<key>DTSDKBuild</key>
<string>20A5283j</string>
<key>DTSDKName</key>
<string>iphonesimulator16.0.internal</string>
<key>DTXcode</key>
<string>1400</string>
<key>DTXcodeBuild</key>
<string>14A6200i</string>
<key>MinimumOSVersion</key>
<string>16.0</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
<integer>2</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>adi-client</key>
<string>409835401</string>
<key>application-identifier</key>
<string>watchlistd</string>
<key>aps-connection-initiate</key>
<true/>
<key>com.apple.VideoSubscriberAccount.AnalyticsService.ReportFederatedEvents</key>
<true/>
<key>com.apple.ap.adservicesd.statusconditionclient.allow_write</key>
<true/>
<key>com.apple.appletv.pbs.allow-screen-saver</key>
<true/>
<key>com.apple.appletv.pbs.bulletin-service-access</key>
<true/>
<key>com.apple.appletv.pbs.user-presentation-service-access</key>
<true/>
<key>com.apple.appletv.pbs.user-profiles</key>
<true/>
<key>com.apple.appstored.install-system-apps</key>
<true/>
<key>com.apple.authkit.client.private</key>
<true/>
<key>com.apple.bulletinboard.dataprovider</key>
<true/>
<key>com.apple.chronoservices</key>
<true/>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.itunesstored.private</key>
<true/>
<key>com.apple.locationd.effective_bundle</key>
<true/>
<key>com.apple.managedconfiguration.profiled.set</key>
<array>
<string>ClientRestrictions</string>
<string>UserSettings</string>
</array>
<key>com.apple.private.InstallCoordination.allowed</key>
<true/>
<key>com.apple.private.MobileGestalt.AllowedProtectedKeys</key>
<array>
<string>UniqueDeviceID</string>
</array>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.applemediaservices</key>
<true/>
<key>com.apple.private.aps-connection-initiate</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.corespotlight.internal</key>
<true/>
<key>com.apple.private.followup</key>
<true/>
<key>com.apple.private.launchservices.suppresscustomschemeprompt</key>
<string>*</string>
<key>com.apple.private.mobileinstall.allowedSPI</key>
<array>
<string>InstallForLaunchServices</string>
<string>UninstallForLaunchServices</string>
</array>
<key>com.apple.private.sportskit.session.client</key>
<true/>
<key>com.apple.private.subscriptionservice.all-sources.read-only</key>
<true/>
<key>com.apple.private.usernotifications.bundle-identifiers</key>
<array>
<string>com.apple.tv</string>
<string>com.apple.TVWatchList</string>
</array>
<key>com.apple.security.exception.files.absolute-path.read-write</key>
<array>
<string>/private/var/tmp/</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>/Library/Caches/</string>
<string>/Library/com.apple.WatchListKit/</string>
<string>/Library/Logs/PersistentConnection/com.apple.watchlistd-watchlistd-APSClient.log</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.VideoSubscriberAccount.AnalyticsService</string>
<string>com.apple.usernotifications.usernotificationservice</string>
<string>com.apple.ak.anisette.xpc</string>
<string>com.apple.appstored.xpc.request</string>
<string>com.apple.lsd.installation</string>
<string>com.apple.lsd.modifydb</string>
<string>com.apple.lsd.xpc</string>
<string>com.apple.managedconfiguration.profiled</string>
<string>com.apple.VideoSubscriberAccount.videosubscriptionsd</string>
<string>com.apple.locationd.synchronous</string>
<string>com.apple.awdd</string>
<string>com.apple.nanoprefsync</string>
<string>com.apple.assertiond.applicationstateconnection</string>
<string>com.apple.PineBoardServices</string>
<string>com.apple.springboard.services</string>
<string>com.apple.installcoordinationd</string>
<string>com.apple.spotlight.IndexAgent</string>
<string>com.apple.frontboard.systemappservices</string>
<string>com.apple.chronoservices</string>
<string>com.apple.FileCoordination</string>
<string>com.apple.locationd.registration</string>
<string>com.apple.sportsd.session.xpc</string>
<string>com.apple.xpc.amsaccountsd</string>
</array>
<key>com.apple.security.exception.process-info</key>
<true/>
<key>com.apple.security.exception.shared-preference.read-only</key>
<array>
<string>com.apple.purplebuddy</string>
</array>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.AppleMediaServices</string>
<string>com.apple.AppleMediaServices.notbackedup</string>
<string>com.apple.tv</string>
<string>com.apple.watchlistd</string>
<string>com.apple.TVWatchList</string>
<string>com.apple.WatchListKit</string>
</array>
<key>com.apple.security.system-groups</key>
<array>
<string>systemgroup.com.apple.configurationprofiles</string>
</array>
<key>com.apple.springboard.CFUserNotification</key>
<true/>
<key>com.apple.springboard.activateRemoteAlert</key>
<true/>
<key>com.apple.symptom_analytics.query</key>
<true/>
<key>com.apple.symptoms.NetworkOfInterest</key>
<true/>
<key>com.apple.watchlist.private</key>
<true/>
<key>fairplay-client</key>
<string>681381042</string>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
</array>
<key>platform-application</key>
<true/>
<key>seatbelt-profiles</key>
<array>
<string>watchlistd</string>
</array>
</dict>
</plist>
