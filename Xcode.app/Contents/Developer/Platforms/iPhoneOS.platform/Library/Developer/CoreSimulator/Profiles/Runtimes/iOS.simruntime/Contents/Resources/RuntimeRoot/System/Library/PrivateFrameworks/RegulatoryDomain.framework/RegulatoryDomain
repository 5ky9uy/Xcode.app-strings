@(#)PROGRAM:RegulatoryDomain  PROJECT:RegulatoryDomain-1
com.apple.countryd.update
v8@?0
v16@?0@"NSError"8
com.apple.countryd
Shared
Version
LocalCountryCodeLocation
LocalCountryCodeMCC
LocalCountryCodeWiFiAPs
LocalEstimate
CombinedEstimate
LastKnownCombinedEstimate
PeerEstimates
countryCodeCache.plist
q24@?0@"RDEstimate"8@"RDEstimate"16
mobile
Library
Caches
RegulatoryDomain
assert
%s:%d: assertion failure in %s
/Library/Caches/com.apple.xbs/Sources/RegulatoryDomain_Sim/RegulatoryDomainFramework/RDCachedData.m
-[RDCachedData countryCodeForPriority:]
com.apple.RegulatoryDomain.localestimate
localOverallCC
locationCC
cellularCC
wifiCC
@"NSMutableDictionary"8@?0
com.apple.countryd.recompute
{location CC: %s, telephony CC: %s, wifi AP CC: %s, localOnlyEstimate: %@, combinedEstimate: %@, lastKnown: %@, peerEstimates: %@}
Daemon
countryd
Client
CountryCode
Priority
Timestamp
kRegulatoryDomainUpdateNotification
yyyy-MM-dd HH:mm:ssZ
%@, priority = %ld, timestamp = %@
com.apple.RegulatoryDomain.peer_status.countryCode
com.apple.RegulatoryDomain.peer_status.priority
com.apple.RegulatoryDomain.peer_status.timestamp
{"msg%{public}.0s":"connection interrupted!"}
connection interrupted!
{"msg%{public}.0s":"connection invalidated!"}
{"msg%{public}.0s":"Error on remote object proxy", "description":%{public, location:escape_only}@, "failureReason":%{public, location:escape_only}@}
Error on remote object proxy
{"msg%{public}.0s":"Sending ping... one ping only"}
{"msg%{public}.0s":"Clearing data cache..."}
{"msg%{public}.0s":"Requesting to share status with peers..."}
{"msg%{public}.0s":"Requesting to stop sharing status with peers..."}
{"msg%{public}.0s":"found a nil or zero-length country code while de-duplicating", "est":%{public, location:escape_only}@}
found a nil or zero-length country code while de-duplicating
{"msg%{public}.0s":"cache path doesn't exist, creating", "cacheDir":%{public, location:escape_only}@}
{"msg%{public}.0s":"Failed to create cache dir", "err":%{public, location:escape_only}@}
Failed to create cache dir
{"msg%{public}.0s":"createCacheDirectoryIfNeeded called from outside countryd, skipping"}
{"msg%{public}.0s":"Cache file not found, skipping load", "path":%{public, location:escape_only}@}
Cache file not found, skipping load
Failed to read cached data file: %s
Got an error while reading, but continuing anyway: %s
Failed to read unarchive cache: %s
Encountered error while unarchiving: %s
{"msg%{public}.0s":"If you're seeing this fault, it means we have a bug in RegulatoryDomain where we are trying to save our cache outside our own runtime. Please send us a radar"}
If you're seeing this fault, it means we have a bug in RegulatoryDomain where we are trying to save our cache outside our own runtime. Please send us a radar
{"msg%{public}.0s":"Failed to archive cached data", "description":%{public, location:escape_only}@, "failureReason":%{public, location:escape_only}@}
Failed to archive cached data
{"msg%{public}.0s":"Failed to write cache", "path":%{public, location:escape_only}@}
Failed to write cache
{"msg%{public}.0s":"Failed to update file attributes at path", "attrs":%{public, location:escape_only}@, "path":%{public, location:escape_only}@}
Failed to update file attributes at path
{"msg%{public}.0s":"Successfully saved cache"}
{"msg%{public}.0s":"Version mismatch detected in cache. Starting new one and will overwrite on-disk cache on next save", "on-disk":%{public}lu, "ours":%{public}lu}
Version mismatch detected in cache. Starting new one and will overwrite on-disk cache on next save
Unexpected priority given to countryCodeForPriority
{"msg%{public}.0s":"Unexpected priority given to countryCodeForPriority", "priority":%{public, location:RDPriority}lld, "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"updating local estimate due to new location CC", "estimate":%{public, location:escape_only}@}
{"msg%{public}.0s":"recomputing..."}
{"msg%{public}.0s":"estimate from peer is too low priority, ignoring", "peer":%{public, location:escape_only}s, "peerPriority":%{public, location:RDPriority}lld, "highestPriority":%{public, location:RDPriority}lld}
{"msg%{public}.0s":"overriding estimate due to higher priority from peer", "newCCEstimate":%{public, location:escape_only}s, "peer":%{public, location:escape_only}s, "peerPriority":%{public, location:RDPriority}lld, "highestPriority":%{public, location:RDPriority}lld}
{"msg%{public}.0s":"adding equal-priority estimate from peer", "addedEstimate":%{public, location:escape_only}s, "peer":%{public, location:escape_only}s}
{"msg%{public}.0s":"no set last-known code, unconditionally setting now"}
{"msg%{public}.0s":"previous estimate was unknown, so setting lastKnown to be same as current known"}
{"msg%{public}.0s":"previous estimate was had more entries than the new one, updating", "previous":%{public}lu, "current":%{public}lu}
{"msg%{public}.0s":"posting Darwin notification"}
{"msg%{public}.0s":"local estimate changed, notifying peers"}
{"msg%{public}.0s":"Except for unit tests, setCountryFromLocation should never be called from outside of countryd"}
Except for unit tests, setCountryFromLocation should never be called from outside of countryd
{"msg%{public}.0s":"CACHE: location country code changing", "from":%{public, location:escape_only}@, "to":%{public, location:escape_only}@}
{"msg%{public}.0s":"Except for unit tests, setCountryFromMCC should never be called from outside of countryd"}
Except for unit tests, setCountryFromMCC should never be called from outside of countryd
{"msg%{public}.0s":"CACHE: MCC country code changing", "from":%{public, location:escape_only}@, "to":%{public, location:escape_only}@}
{"msg%{public}.0s":"Except for unit tests, countryFromWiFiAPs should never be called from outside of countryd"}
Except for unit tests, countryFromWiFiAPs should never be called from outside of countryd
{"msg%{public}.0s":"CACHE: WiFi AP country code changing", "from":%{public, location:escape_only}@, "to":%{public, location:escape_only}@}
{"msg%{public}.0s":"SET: peer estimates", "peers":%{public, location:escape_only}@}
{"msg%{public}.0s":"REMOVE: peer estimates", "peers":%{public, location:escape_only}@}
{"msg%{public}.0s":"current process", "proc":%{public, location:escape_only}s}
RDXPCProtocol
RDCommClient
RDCachedData
NSCopying
NSSecureCoding
NSCoding
RDEstimate
init
update:withCountryCode:
updatePeer:withEstimate:
updatePeer:withCountryCode:priority:andTimestamp:
clearDataCache
shareStatusWithPeers
clearStatusSharedWithPeers
ping
createCacheDirAtPath:
interfaceWithProtocol:
initWithMachServiceName:options:
setRemoteObjectInterface:
setInterruptionHandler:
setInvalidationHandler:
localizedDescription
localizedFailureReason
remoteObjectProxyWithErrorHandler:
resume
invalidate
.cxx_destruct
connection
server
dictionary
countByEnumeratingWithState:objects:count:
countryCode
length
objectForKeyedSubscript:
timestamp
setObject:forKeyedSubscript:
allValues
arrayWithArray:
count
hash
sortUsingComparator:
getUserPath:
arrayWithObjects:count:
pathWithComponents:
dictionaryWithObjects:forKeys:count:
defaultManager
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
getCacheDirPathForUnitTest
getCacheDirPath
fileExistsAtPath:isDirectory:
createCacheAtPath:
loadCache:
createCacheDirectoryIfNeeded:
fileExistsAtPath:
dataWithContentsOfFile:options:error:
description
UTF8String
setWithObjects:
unarchivedObjectOfClasses:fromData:error:
saveCache:
archivedDataWithRootObject:requiringSecureCoding:error:
writeToFile:options:error:
setAttributes:ofItemAtPath:error:
decodeIntegerForKey:
decodeObjectForKey:
initWithCountryCodeFromLocation:fromMCC:fromWiFi:localEstimate:combinedEstimate:lastKnownCombinedEstimate:peerEstimates:
encodeObject:forKey:
encodeInteger:forKey:
countryCodeForPriority:
initWithCountryCode:priority:timestamp:
recompute:
copy
computeLocalCountryCode
isEqualToString:
allKeys
objectAtIndexedSubscript:
arrayWithObject:
getPriority
addObject:
sortPreferredOrder:
allocWithZone:
setCountryFromLocation:forUnitTest:
uppercaseString
recompute
setCountryFromMCC:forUnitTest:
setCountryFromWiFiAPs:forUnitTest:
stringWithFormat:
setEstimate:forPeerDeviceWithID:
removeEstimateForPeerDeviceWithID:
removeObjectForKey:
loadCache
loadCacheForUnitTest
supportsSecureCoding
copyWithZone:
encodeWithCoder:
initWithCoder:
TB,R
saveCacheForUnitTest
saveCache
setCountryFromLocationForUnitTest:
setCountryFromLocation:
setCountryFromMCCForUnitTest:
setCountryFromMCC:
setCountryFromWiFiAPsForUnitTest:
setCountryFromWiFiAPs:
getLocalOnlyEstimate
getCombinedEstimate
getLastKnownCombinedEstimate
setEstimateForUnitTest:forPeerDeviceWithID:
removeEstimateForPeerDeviceWithIDForUnitTest:
getEstimateForPeerDeviceWithID:
_countryFromLocation
_countryFromMCC
_countryFromWiFiAPs
_localOnlyEstimate
_combinedEstimate
_lastKnownCombinedEstimate
_peerDeviceLocalEstimates
setWithArray:
decodeObjectOfClass:forKey:
defaultTimeZone
setTimeZone:
setDateFormat:
stringFromDate:
numberWithLong:
currentEstimates
lastKnownEstimates
currentEstimateSet
lastKnownEstimateSet
_priority
_countryCode
_timestamp
T@"NSString",R,N,V_countryCode
T@"NSDate",R,N,V_timestamp
v32@0:8q16@24
v32@0:8@16@24
v44@0:8@16@24i32@36
v16@0:8
v24@0:8@16
v32@0:8q16@"NSString"24
v32@0:8@"NSString"16@"RDEstimate"24
v44@0:8@"NSString"16@"NSString"24i32@"NSDate"36
v24@0:8@"NSString"16
@16@0:8
@"NSXPCConnection"
@"<RDXPCProtocol>"
@24@0:8@16
v20@0:8B16
@20@0:8B16
B16@0:8
@24@0:8^{_NSZone=}16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
B20@0:8B16
@72@0:8@16@24@32@40@48@56@64
@24@0:8q16
v28@0:8@16B24
@"NSString"
@"RDEstimate"
@"NSArray"
@"NSMutableDictionary"
@40@0:8@16q24@32
q16@0:8
@"NSDate"
@(#)PROGRAM:RegulatoryDomain  PROJECT:RegulatoryDomain-1
com.apple.countryd.update
v8@?0
v16@?0@"NSError"8
com.apple.countryd
Shared
Version
LocalCountryCodeLocation
LocalCountryCodeMCC
LocalCountryCodeWiFiAPs
LocalEstimate
CombinedEstimate
LastKnownCombinedEstimate
PeerEstimates
countryCodeCache.plist
q24@?0@"RDEstimate"8@"RDEstimate"16
mobile
Library
Caches
RegulatoryDomain
assert
%s:%d: assertion failure in %s
/Library/Caches/com.apple.xbs/Sources/RegulatoryDomain_Sim/RegulatoryDomainFramework/RDCachedData.m
-[RDCachedData countryCodeForPriority:]
com.apple.RegulatoryDomain.localestimate
localOverallCC
locationCC
cellularCC
wifiCC
@"NSMutableDictionary"8@?0
com.apple.countryd.recompute
{location CC: %s, telephony CC: %s, wifi AP CC: %s, localOnlyEstimate: %@, combinedEstimate: %@, lastKnown: %@, peerEstimates: %@}
Daemon
countryd
Client
CountryCode
Priority
Timestamp
kRegulatoryDomainUpdateNotification
yyyy-MM-dd HH:mm:ssZ
%@, priority = %ld, timestamp = %@
com.apple.RegulatoryDomain.peer_status.countryCode
com.apple.RegulatoryDomain.peer_status.priority
com.apple.RegulatoryDomain.peer_status.timestamp
{"msg%{public}.0s":"connection interrupted!"}
connection interrupted!
{"msg%{public}.0s":"connection invalidated!"}
{"msg%{public}.0s":"Error on remote object proxy", "description":%{public, location:escape_only}@, "failureReason":%{public, location:escape_only}@}
Error on remote object proxy
{"msg%{public}.0s":"Sending ping... one ping only"}
{"msg%{public}.0s":"Clearing data cache..."}
{"msg%{public}.0s":"Requesting to share status with peers..."}
{"msg%{public}.0s":"Requesting to stop sharing status with peers..."}
{"msg%{public}.0s":"found a nil or zero-length country code while de-duplicating", "est":%{public, location:escape_only}@}
found a nil or zero-length country code while de-duplicating
{"msg%{public}.0s":"cache path doesn't exist, creating", "cacheDir":%{public, location:escape_only}@}
{"msg%{public}.0s":"Failed to create cache dir", "err":%{public, location:escape_only}@}
Failed to create cache dir
{"msg%{public}.0s":"createCacheDirectoryIfNeeded called from outside countryd, skipping"}
{"msg%{public}.0s":"Cache file not found, skipping load", "path":%{public, location:escape_only}@}
Cache file not found, skipping load
Failed to read cached data file: %s
Got an error while reading, but continuing anyway: %s
Failed to read unarchive cache: %s
Encountered error while unarchiving: %s
{"msg%{public}.0s":"If you're seeing this fault, it means we have a bug in RegulatoryDomain where we are trying to save our cache outside our own runtime. Please send us a radar"}
If you're seeing this fault, it means we have a bug in RegulatoryDomain where we are trying to save our cache outside our own runtime. Please send us a radar
{"msg%{public}.0s":"Failed to archive cached data", "description":%{public, location:escape_only}@, "failureReason":%{public, location:escape_only}@}
Failed to archive cached data
{"msg%{public}.0s":"Failed to write cache", "path":%{public, location:escape_only}@}
Failed to write cache
{"msg%{public}.0s":"Failed to update file attributes at path", "attrs":%{public, location:escape_only}@, "path":%{public, location:escape_only}@}
Failed to update file attributes at path
{"msg%{public}.0s":"Successfully saved cache"}
{"msg%{public}.0s":"Version mismatch detected in cache. Starting new one and will overwrite on-disk cache on next save", "on-disk":%{public}lu, "ours":%{public}lu}
Version mismatch detected in cache. Starting new one and will overwrite on-disk cache on next save
Unexpected priority given to countryCodeForPriority
{"msg%{public}.0s":"Unexpected priority given to countryCodeForPriority", "priority":%{public, location:RDPriority}lld, "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"updating local estimate due to new location CC", "estimate":%{public, location:escape_only}@}
{"msg%{public}.0s":"recomputing..."}
{"msg%{public}.0s":"estimate from peer is too low priority, ignoring", "peer":%{public, location:escape_only}s, "peerPriority":%{public, location:RDPriority}lld, "highestPriority":%{public, location:RDPriority}lld}
{"msg%{public}.0s":"overriding estimate due to higher priority from peer", "newCCEstimate":%{public, location:escape_only}s, "peer":%{public, location:escape_only}s, "peerPriority":%{public, location:RDPriority}lld, "highestPriority":%{public, location:RDPriority}lld}
{"msg%{public}.0s":"adding equal-priority estimate from peer", "addedEstimate":%{public, location:escape_only}s, "peer":%{public, location:escape_only}s}
{"msg%{public}.0s":"no set last-known code, unconditionally setting now"}
{"msg%{public}.0s":"previous estimate was unknown, so setting lastKnown to be same as current known"}
{"msg%{public}.0s":"previous estimate was had more entries than the new one, updating", "previous":%{public}lu, "current":%{public}lu}
{"msg%{public}.0s":"posting Darwin notification"}
{"msg%{public}.0s":"local estimate changed, notifying peers"}
{"msg%{public}.0s":"Except for unit tests, setCountryFromLocation should never be called from outside of countryd"}
Except for unit tests, setCountryFromLocation should never be called from outside of countryd
{"msg%{public}.0s":"CACHE: location country code changing", "from":%{public, location:escape_only}@, "to":%{public, location:escape_only}@}
{"msg%{public}.0s":"Except for unit tests, setCountryFromMCC should never be called from outside of countryd"}
Except for unit tests, setCountryFromMCC should never be called from outside of countryd
{"msg%{public}.0s":"CACHE: MCC country code changing", "from":%{public, location:escape_only}@, "to":%{public, location:escape_only}@}
{"msg%{public}.0s":"Except for unit tests, countryFromWiFiAPs should never be called from outside of countryd"}
Except for unit tests, countryFromWiFiAPs should never be called from outside of countryd
{"msg%{public}.0s":"CACHE: WiFi AP country code changing", "from":%{public, location:escape_only}@, "to":%{public, location:escape_only}@}
{"msg%{public}.0s":"SET: peer estimates", "peers":%{public, location:escape_only}@}
{"msg%{public}.0s":"REMOVE: peer estimates", "peers":%{public, location:escape_only}@}
{"msg%{public}.0s":"current process", "proc":%{public, location:escape_only}s}
RDXPCProtocol
RDCommClient
RDCachedData
NSCopying
NSSecureCoding
NSCoding
RDEstimate
UTF8String
writeToFile:options:error:
uppercaseString
unarchivedObjectOfClasses:fromData:error:
stringWithFormat:
stringFromDate:
sortUsingComparator:
setWithObjects:
setWithArray:
setTimeZone:
setRemoteObjectInterface:
setObject:forKeyedSubscript:
setInvalidationHandler:
setInterruptionHandler:
setDateFormat:
setAttributes:ofItemAtPath:error:
resume
removeObjectForKey:
remoteObjectProxyWithErrorHandler:
pathWithComponents:
objectForKeyedSubscript:
objectAtIndexedSubscript:
numberWithLong:
localizedFailureReason
localizedDescription
length
isEqualToString:
invalidate
interfaceWithProtocol:
initWithMachServiceName:options:
hash
fileExistsAtPath:isDirectory:
fileExistsAtPath:
encodeObject:forKey:
encodeInteger:forKey:
dictionaryWithObjects:forKeys:count:
defaultTimeZone
defaultManager
decodeObjectOfClass:forKey:
decodeObjectForKey:
decodeIntegerForKey:
dataWithContentsOfFile:options:error:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
countByEnumeratingWithState:objects:count:
count
copy
arrayWithObjects:count:
arrayWithObject:
arrayWithArray:
archivedDataWithRootObject:requiringSecureCoding:error:
allocWithZone:
allValues
allKeys
addObject:
init
update:withCountryCode:
updatePeer:withEstimate:
updatePeer:withCountryCode:priority:andTimestamp:
clearDataCache
shareStatusWithPeers
clearStatusSharedWithPeers
ping
createCacheDirAtPath:
.cxx_destruct
connection
server
sortPreferredOrder:
getUserPath:
getCacheDirPath
getCacheDirPathForUnitTest
createCacheAtPath:
createCacheDirectoryIfNeeded:
loadCache
loadCacheForUnitTest
loadCache:
supportsSecureCoding
copyWithZone:
encodeWithCoder:
initWithCoder:
TB,R
saveCacheForUnitTest
saveCache
saveCache:
initWithCountryCodeFromLocation:fromMCC:fromWiFi:localEstimate:combinedEstimate:lastKnownCombinedEstimate:peerEstimates:
countryCodeForPriority:
computeLocalCountryCode
recompute
recompute:
setCountryFromLocationForUnitTest:
setCountryFromLocation:
setCountryFromLocation:forUnitTest:
setCountryFromMCCForUnitTest:
setCountryFromMCC:
setCountryFromMCC:forUnitTest:
setCountryFromWiFiAPsForUnitTest:
setCountryFromWiFiAPs:
setCountryFromWiFiAPs:forUnitTest:
description
getLocalOnlyEstimate
getCombinedEstimate
getLastKnownCombinedEstimate
setEstimateForUnitTest:forPeerDeviceWithID:
setEstimate:forPeerDeviceWithID:
removeEstimateForPeerDeviceWithIDForUnitTest:
removeEstimateForPeerDeviceWithID:
getEstimateForPeerDeviceWithID:
_countryFromLocation
_countryFromMCC
_countryFromWiFiAPs
_localOnlyEstimate
_combinedEstimate
_lastKnownCombinedEstimate
_peerDeviceLocalEstimates
currentEstimates
lastKnownEstimates
currentEstimateSet
lastKnownEstimateSet
initWithCountryCode:priority:timestamp:
getPriority
dictionary
countryCode
timestamp
_priority
_countryCode
_timestamp
T@"NSString",R,N,V_countryCode
T@"NSDate",R,N,V_timestamp
v32@0:8q16@24
v32@0:8@16@24
v44@0:8@16@24i32@36
v16@0:8
v24@0:8@16
v32@0:8q16@"NSString"24
v32@0:8@"NSString"16@"RDEstimate"24
v44@0:8@"NSString"16@"NSString"24i32@"NSDate"36
v24@0:8@"NSString"16
@16@0:8
@"NSXPCConnection"
@"<RDXPCProtocol>"
@24@0:8@16
v20@0:8B16
@20@0:8B16
B16@0:8
@24@0:8^{_NSZone=}16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
B20@0:8B16
@72@0:8@16@24@32@40@48@56@64
@24@0:8q16
v28@0:8@16B24
@"NSString"
@"RDEstimate"
@"NSArray"
@"NSMutableDictionary"
@40@0:8@16q24@32
q16@0:8
@"NSDate"
