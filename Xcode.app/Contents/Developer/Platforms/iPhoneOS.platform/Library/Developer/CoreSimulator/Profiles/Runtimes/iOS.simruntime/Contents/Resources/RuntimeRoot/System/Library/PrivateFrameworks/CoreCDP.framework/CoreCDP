@(#)PROGRAM:CoreCDP  PROJECT:CoreCDP-1
"setting companion in circle"
"pcsIdentitySetupWithInfo:"
"pcsIdentityMigrateToiCDPWithInfo:"
"pcsSynchronizeKeysWithInfo:"
"pcsRestoreLocalBackup:"
"Failed to create PCS identity with error: %@"
"Unable to create CDPAccountRepresentation instance due to nil Apple account (%@) or AuthKit account (%@)"
"%@: Assuming silent escrow record repair is disabled"
"%@: Returning %@ for 'isSilentEscrowRecordRepairEnabled'"
"%@: Silent escrow record repair is disabled by server, returning NO"
"%@: Could not determine if device needs escrow repair with invalid context"
"%@: Failed to check if escrow record repair is needed with error (%@)"
"%@: Checked if escrow record repair is needed (%@)"
"%@: Unable to generate context for account (%@) with no DSID"
"%@: Generated context (%@) for account with DSID (%@)"
cdp/enabled-status-check
"%@: Failed to check if iCDP is enabled for account with DSID (%@) with error (%@)"
"%@: Checking iCDP status for account with DSID (%@), will check with server (%@)"
"%@: iCDP status for account with DSID (%@) is %@"
"%@: Unable to check 'silentEscrowRecordRepairEnabled' because AKAccountManager (%@) doesn't respond to selector"
"%@: Returning cached 'silentEscrowRecordRepairEnabled' value (%@) from account (%@)"
"%@: Calling to fetch user info for altDSID (%@) for 'silentEscrowRecordRepairEnabled' value"
"%@: Unable to fetch user info with context because AKAppleIDAuthenticationController (%@) doesn't respond to selector"
"Failed to fetch user info for altDSID (%@) with error (%@)"
"Returning server fetched 'silentEscrowRecordRepairEnabled' value (%@) for altDSID (%@)"
"%@: Unable to check 'silentEscrowRecordRepairEnabled' because AKUserInformation (%@) doesn't respond to selector"
"%@: Calling value producer for key (%@)"
"%@: Called value producer for key (%@) and received value (%@)"
"%@: No cached property for key (%@) was found on account (%@)"
"%@: Failed to deserialize property dictionary for key (%@) from data (%@) with error (%@)"
"%@: Expected lastModifiedDate value in cached property dictionary (%@) for key (%@)"
"%@: Found nil property value in cached property dictionary (%@) for key (%@)"
"%@: Returned cached property value (%@) for key (%@)"
"%@: Cached property value (%@) for key (%@) is stale (lastModifiedDate [%@] < staleModifiedDate [%@])"
"%@: Failed to serialize property dictionary for key (%@) with error (%@)"
"Successfully saved cached property value (%@) for key (%@) on account (%@)"
"Failed to save cached property value (%@) for key (%@) on account (%@) with error (%@)"
"%@: Failed to archive property dictionary (%@) with error (%@)"
"%@: Failed to unarchive data (%@) with error (%@)"
"CDPFollowUpContext: set altDSID to %@"
"Incoming context is nil, returning primary account context."
"Preflighting invalid context: dsid & altDSID missing. Amending with primary account details."
"Preflighting invalid context: altDSID missing"
"Preflighting context with altDSID: %@"
"Preflighting context with dsid %@ for a non-primary acccount.. dragons may be ahead"
"CircleProxyImpl init is missing required cliqueConfiguration. Problems lie ahead 
"CircleProxyImpl init is missing required dsid. Barring no primary account, problems lie ahead 
"CDPCircleProxyImpl: appleID:%@, dsid: %@, type: %ld"
"Circle status check failed with error: %@"
"Failed to retrieve cachedCliqueStatus: %@"
"Call to cachedCliqueStatus returned a status: %@"
 enableTelemetry=YES 
BEGIN [%lld]: CachedCircleStatus  enableTelemetry=YES 
 status=%{public,signpost.telemetry:number1,name=status}d 
CachedCircleStatus
END [%lld] %fs: CachedCircleStatus  status=%{public,signpost.telemetry:number1,name=status}d 
"Beneficiary account detected. Faking cached SOS circle status."
"Checking circle status with SOSCCThisDeviceIsInCircle"
"Failed to check circle status: %@"
"Call to SOSCCThisDeviceIsInCircle returned a status: %d"
"Checking combined circle status"
"%s (%d) called"
"Clique waitForOctagonUpgrade %@ with error %@"
"This is not an HSA2 account, not calling waitForOctagonUpgrade"
"Reporting success for %@"
"Reporting failure for %@"
CircleStatus
BEGIN [%lld]: CircleStatus  enableTelemetry=YES 
"Checking clique status with fetchCliqueStatus from %@"
"Call to fetchCliqueStatus returned a status: %@"
END [%lld] %fs: CircleStatus  status=%{public,signpost.telemetry:number1,name=status}d 
"Beneficiary account detected. Faking non-cached SOS circle status."
BEGIN [%lld]: SOSCircleStatus  enableTelemetry=YES 
SOSCircleStatus
END [%lld] %fs: SOSCircleStatus  status=%{public,signpost.telemetry:number1,name=status}d 
BEGIN [%lld]: SynchronizeCircleViews  enableTelemetry=YES 
"Skipping initial sync because we are not in a circle"
"Skipping initial sync because it is not supported by this platform"
"Calling SOSCCWaitForInitialSync to wait for views to sync"
"Finished calling SOSCCWaitForInitialSync didSync=%i error=%@"
"We failed to sync and now we failed to remove self form circle, nothing good will happen here"
"We failed to sync but managed to get out of the circle, hopefully the next attempt will work"
 didSync=%{public,signpost.telemetry:number1,name=didSync}d 
SynchronizeCircleViews
END [%lld] %fs: SynchronizeCircleViews  didSync=%{public,signpost.telemetry:number1,name=didSync}d 
"Attempting to remove self from circle"
"Removed device from circle successfully"
"Failed to remove self from circle - %@"
"Failed to check for non-view-aware peers with error %@"
"Removed old peers from circle: %@"
"Failed to remove old peers from circle with error %@ (peers: %@)"
"Failed to check for non-view-aware peers before removing them from circle with error %@"
"_registerCredentialsOnlyIfNeeded: appleID:%@, dsid: %@, type: %ld"
"Calling SOSCCSetUserCredentialsAndDSID"
BEGIN [%lld]: SetUserCredentialsAndDSID  enableTelemetry=YES 
"Failed to call SOSCCSetUserCredentialsAndDSID with error %@"
 Error=%{public,signpost.telemetry:number1,name=Error}d 
SetUserCredentialsAndDSID
END [%lld] %fs: SetUserCredentialsAndDSID  Error=%{public,signpost.telemetry:number1,name=Error}d 
"Security indicated that no credential is needed nor did we force"
"Skipping registering credentials, insufficient parameters"
BEGIN [%lld]: TryUserCredentialsAndDSID  enableTelemetry=YES 
"Registered credentials through try attempt"
"Failed to call SOSCCTryUserCredentialsAndDSID with error %@"
TryUserCredentialsAndDSID
END [%lld] %fs: TryUserCredentialsAndDSID  Error=%{public,signpost.telemetry:number1,name=Error}d 
"Skipping try registering credentials, insufficient parameters"
"Security requires credentials..."
"Obtaining recovery key from security for custodian recovery with UUID: %@"
"Failed to obtain custodian recovery key from security with error: %@"
"Attempting to recover octagon usign custodian recovery key"
"Not implemented"
cdp: enabled status check
"XPC Error while checking if iCDP is enabled for DSID %@: %@"
"Checking iCDP status for DSID %@ (checkWithServer=%i)"
"iCDP status for DSID %@ is %@"
OctagonStatus
BEGIN [%lld]: OctagonStatus  enableTelemetry=YES 
"XPC Error while checking if OT is enabled: %@"
"Checking OT status"
END [%lld] %fs: OctagonStatus  Error=%{public,signpost.telemetry:number1,name=Error}d 
"Creating context for %@"
"Fetching PRK for primary Account"
"Escrowing a previously backed up PRK"
"Something went wrong... (%@) could not find a stashed token for primary Account: <%@ : %@>"
"MUManatee: Creating context for %@"
"Starting token renewal"
"Token completion block called"
"Starting MRK verification for %@"
"MRK verification completion block called"
"CDPCustodianController init is missing required dsid. Unable to process request, problems lie ahead 
"Asking security to create custodian recovery key for %@"
CustodianCreateRecoveryKey
BEGIN [%lld]: CustodianCreateRecoveryKey  enableTelemetry=YES 
END [%lld] %fs: CustodianCreateRecoveryKey  Error=%{public,signpost.telemetry:number1,name=Error}d 
"Error creating custodian recovery key: %@"
"Asking security to delete custodian recovery key for %@"
CustodianDeleteRecoveryKey
BEGIN [%lld]: CustodianDeleteRecoveryKey  enableTelemetry=YES 
END [%lld] %fs: CustodianDeleteRecoveryKey  Error=%{public,signpost.telemetry:number1,name=Error}d 
"Error deleting custodian recovery key: %@"
"Deleted custodian recovery key: for %@"
"CDPCustodianController init is missing required dsid. Unable to process preflight request"
"Error validating custodian recovery key: %@"
"Custodian recovery key is valid for: %@"
"Generating Inheritance access key for CDP account. Beneficiary: %@"
"Generating Inheritance access key for non-CDP account - not saved on OT. Beneficiary: %@"
"Creating the access key for beneficiary: %@"
"Unable to create the access key without access string or data."
"Attempting to recover Octagon with the inheritance key."
"Error validating inheritance key: %@"
"Inheritance key valid for beneficiary: %@"
Walrus: Fetching status.
"XPC Error while fetching walrus status."
"Failed to fetch walrus status with error: %@"
"Walrus status - %lu"
"Failed to fetch walrus status with error - %@"
Walrus: Updating status
"XPC Error while updating walrus status."
"Failed to update walrus status with error %@"
"Walrus status update has been completed successfully."
Walrus: Fetch PCS Identities
"XPC Error while fetching PCS identities - %@"
"Failed to fetch PCS identities for services %@ with error: %@"
Web access: Fetching status.
"XPC Error while fetching web access status."
"Failed to fetch web access status with error: %@"
"Web access status - %lu"
"Failed to fetch web access status with error - %@"
Web access: Updating status
"XPC Error while updating web access status."
"Failed to update web access status with error %@"
"Web access status update has been completed successfully."
"RPD Probation: date from accountProperties: %@"
"RPD Probation: Set date in accountProperties: %@"
"Failed to set RPD Probation date: %@"
"RPD Probation: Elapsed time since user first exhausted all recovery options: %f"
"RPD Probation period: %f secs"
"RPD Probation: Can show RPD option: %f >= %f = %@"
"Attempted to present CDPUI with incomplete uiProvider: %s"
LocalSecretCollect
BEGIN [%lld]: LocalSecretCollect  enableTelemetry=YES 
END [%lld] %fs: LocalSecretCollect 
"CDPUIProvider does not respond to promptForLocalSecretWithCompletion, falling back to handler: %s"
"CDPUIProvider does not respond to promptForLocalSecretWithHandler either: %s"
"Warning: UI provider %@ does not respond to selector cdpContext:promptForRemoteSecretWithDevices:offeringRemoteApproval:validator:"
"Warning: UI provider %@ does not respond to selectors cdpRecoveryFlowContext:promptForRemoteSecretWithDevices:validator: and cdpContext:promptForRemoteSecretWithDevices:offeringRemoteApproval:validator:"
"Bailed out of interactive authentication. Preventing appearance of prompt because network is unreachable."
"Attempting to show error: %@"
"Warning: UI provider %@ does not respond to selector cdpContext:showError:withCompletion:"
"Warning: UI provider %@ does not respond to selector cdpContext:showError:withDefaultIndex:withCompletion:"
cdp: post follow up
"XPC Error posting a follow up: %@"
"Posted follow ups (%@) with error: %@"
cdp: clear follow up
"XPC Error cleaning up follow ups: %@"
"Cleared follow ups (%@) with error: %@"
"Invalidating connection"
"iCloud Env missing, bad things to come..."
"Auth Token missing, bad things to come..."
"Base URL missing, bad things to come..."
"Creating the access code from data."
"Creating the access code from string."
"Error creating key from access key string. Error - %@"
"Already observing walrus state change notification."
"Starting to observe walrus state change notification."
"Starting to observe OT peer change notification."
"Not yet started to observe walrus state change notification."
"Stopping to observe walrus state change notification."
"Stopping to observe OT peer change notification."
"Walrus state change notification received, posting local notification."
@"%{public}@ Found PCS view"
@"%{public}@ Found SOS view"
@"%{public}@ All view viability checks passed"
"Already observing web access state change notification."
"Starting to observe web access state change notification."
"Not yet started to observe web access state change notification."
"Stopping to observe web access state change notification."
"Web access state change notification received, posting local notification."
"Already sent CDPCA event %@"
"Sending report %@ (time: %f), data - %@"
"Attempting to validate secret using validator %@"
"Validator returned response of isValid=%i canRetry=%i error=%@ ... dispatching completion block on to main queue"
"Invoking validateSecret:devices:type:withCompletion: completion block on the main queue"
"Attempting to validate recovery key using validator %@"
"Invoking validateRecoveryKey:withCompletion: completion block on the main queue"
"Attempting to validate custodian recovery info using validator %@"
"InvokingvalidateCustodianRecoveryInfo:withCompletion: completion block on the main queue"
"Requesting approval from another device..."
"Cancelling request for remote approval..."
"Requesting reset of CDP account state..."
"Cancelling validation with error %@"
"Supported Escape Offers: %lu"
cdp/saveTermsAcceptance
"Saving of terms acceptance completed with error %@"
"XPC Error while attempting to save terms info: %@"
cdp/fetchTermsAcceptance
"Fetched terms acceptance completed with error %@ and result %@"
"XPC Error while attempting to fetch terms info: %@"
DataPrivacy: checking status of complete data privacy
"XPC Error while checking status for complete data privacy."
"Error getting status for complete data privacy - %@"
"Status for complete data privacy - %lu"
DataPrivacy: Update data privacy status
"XPC Error while updating data privacy."
"User declined losing access to devices."
"Error updating data privacy state without user's consent on devices that lose access."
"Error updating data privacy status - %@"
"Complete data privacy update."
cdp: Keychain Status Check
"XPC Error while checking if user-visible keychain sync is enabled: %@"
"Checking user-visible keychain sync status"
"User-visible keychain sync status is %@"
cdp: Keychain Status Change
"Setting user-visible keychain sync to %@"
"User-visibile keychain sync set to %@"
"Failed to set user-visibile keychain sync set to %@: %@"
cdp: Remove Legacy Peers
"XPC Error while remove non-view-aware peers: %@"
"Removing non-view-aware peers from the circle"
"Successfully removed non-view-aware peers from the circle"
"Failed to remove non-view-aware peers from the circle: %@"
"Returning NO for 'isSilentEscrowRecordViabilityRepairEnabled' when running on non-internal build"
"Trying to determine manatee availability for altDSID: %@"
"Checking security eligibility state..."
"We are HSA2, but Security is not ready, waiting for Security state resolution..."
"We are no longer HSA2, reporting not eligible"
"Processing circle status change to calculate manatee availability"
"Processed circle state change event"
"Processing circle view change event"
"Processed circle view change event"
"All systems are not go... Manatee not available"
"All systems go!!! Manatee available"
"Sending %s, value: %@"
cdp/manatee-availability
"Requesting manatee state..."
"Manatee is not available, error: %@"
"Manatee is available"
cdp/statemachine-handle
HandleCloudDataProtectionState
BEGIN [%lld]: HandleCloudDataProtectionState  enableTelemetry=YES 
END [%lld] %fs: HandleCloudDataProtectionState  Error=%{public,signpost.telemetry:number1,name=Error}d 
"State machine completed shouldCompleteSignIn=%@ cloudDataProtectionEnabled=%@ error=%@"
"XPC Error while starting state machine: %@"
"Requesting start of CDP state machine..."
cdp/statemachine-repair
RepairCloudDataProtectionState
BEGIN [%lld]: RepairCloudDataProtectionState  enableTelemetry=YES 
END [%lld] %fs: RepairCloudDataProtectionState  Error=%{public,signpost.telemetry:number1,name=Error}d 
"State machine repair completed didRepair=%@ error=%@"
"XPC Error while repairing state: %@"
"Requesting repair of CDP state..."
"XPC Error while accepting sharing session: %@"
"Requesting start of accepting sharing session..."
"Requesting start of accepting sharing session, skipping escrow fetches..."
"Requesting repair and synchronization of CDP state with Squirrel..."
"Requesting repair of CDP state with Squirrel..."
"XPC Error while attempting to escrow preRecord: %@"
"Informing daemon of attempting to escrow preRecord..."
"XPC Error while updating local secret: %@"
"Informing daemon of local secret change..."
"Attempting to finish offline local secret change..."
"XPC Error while finishing Cyrus secure terms flow: %@"
"Attempting to finish secure terms flow for %@ with type %ld"
cdp: repair state check
"XPC Error while checking recovery existence: %@"
cdp/should-perform-repair
"Failed to get remote object proxy for CDP daemon: %@"
"Requesting to check if repair should be performed on the CDP state"
cdp/generate-escrow-record-report
 enableTelemetry=YES  UseCache=%{public,signpost.telemetry:number2,name=UseCache}d 
GenerateEscrowRecordReport
BEGIN [%lld]: GenerateEscrowRecordReport  enableTelemetry=YES  UseCache=%{public,signpost.telemetry:number2,name=UseCache}d 
END [%lld] %fs: GenerateEscrowRecordReport  Error=%{public,signpost.telemetry:number1,name=Error}d 
"Failed to generate escrow record report: %{public}@"
"Generating escrow record report (usingCache: %{BOOL}d)"
cdp/generate-rk
"XPC Error while generating a recovery key: %@"
"Attempting to generate a new recovery key"
cdp/delete-rk
"XPC Error while deleting a recovery key: %@"
"Attempting to delete a recovery key"
cdp/verify-rk
"XPC Error while verifying a recovery key: %@"
"Attempting to verify the recovery key"
"XPC Error while fetching recovery key state: %@"
cdp/rk-availability
"Attempting to fetch recovery key state"
"Failed to fetch recovery key availability with error %@"
"Recovery key availability - %@"
"XPC Error while fetching recovery key availability."
"Handling URL action: %@"
cdp/fetch-escrow-devices
"Requesting list of escrow-record associated devices"
cdp/device-escrow-record-recoverable
"Checking for the current device's ecrow record being recoverable"
cdp/synchronous-device-escrow-record-recoverable
"%@: Failed to find recoverable escrow record for current device with error (%@)"
"%@: Checking current device's escrow record recoverability"
cdp/should-perform-silent-escrow-record-repair-sync
ShouldPerformSilentEscrowRecordRepairSync
BEGIN [%lld]: ShouldPerformSilentEscrowRecordRepairSync  enableTelemetry=YES 
END [%lld] %fs: ShouldPerformSilentEscrowRecordRepairSync  Error=%{public,signpost.telemetry:number1,name=Error}d 
"Failed to check if escrow record repair is needed with error: %@"
"Escrow record repair is needed: %@"
"Synchronously checking if silent escrow record repair should be performed (usingCache: %@)"
cdp/should-perform-silent-escrow-record-repair-async
ShouldPerformSilentEscrowRecordRepairAsync
BEGIN [%lld]: ShouldPerformSilentEscrowRecordRepairAsync  enableTelemetry=YES 
END [%lld] %fs: ShouldPerformSilentEscrowRecordRepairAsync  Error=%{public,signpost.telemetry:number1,name=Error}d 
"Should perform silent escrow record repair: %@"
"Checking if silent escrow record repair should be performed (usingCache: %@)"
cdp/start-silent-escrow-record-repair
StartSilentEscrowRecordRepair
BEGIN [%lld]: StartSilentEscrowRecordRepair  enableTelemetry=YES 
END [%lld] %fs: StartSilentEscrowRecordRepair  Error=%{public,signpost.telemetry:number1,name=Error}d 
"Successfully started silent escrow record repair"
"Failed to start silent escrow record repair: %@"
"Requesting start of silent escrow record repair..."
cdp/perform-silent-escrow-record-repair
PerformSilentEscrowRecordRepair
BEGIN [%lld]: PerformSilentEscrowRecordRepair  enableTelemetry=YES 
END [%lld] %fs: PerformSilentEscrowRecordRepair  Error=%{public,signpost.telemetry:number1,name=Error}d 
"Successfully performed silent escrow record repair"
"Failed to perform silent escrow record repair: %@"
"Performing silent escrow record repair..."
cdp/update-last-silent-escrow-record-repair-attempt-date
"Successfully updated last silent escrow record repair attempt date to %@"
"Failed to update last silent escrow record repair attempt date: %@"
"Requesting update of silent escrow record repair attempt date to %@..."
cdp: recovery flow
"XPC Error while recovering data: %@"
"XPC Error while checking if the local device has a secret: %@"
"Checking if the local device has a secret"
"Local device DOES have a secret"
"Local device DOES NOT have a secret"
"Reporting current serial number: %@"
"Unable to check self process entitlements without SecTaskRef."
"Error when checking self process for entitlement %@. error:%@"
"Invalidating connection for controller %@"
"Daemon connection invalidated!"
"Daemon connection interrupted!"
"XPC Error from daemon: %@"
B16@?0^^{__CFError}8
com.apple.cdp.appleaccount.property
com.apple.cdp.appleaccount.property.last-modified-date
com.apple.cdp.appleaccount.property.is-escrow-repair-needed
silentEscrowRecordRepair
escrowProxyUrl
com.apple.Dataclass.Account
iCloudEnv
v16@?0@"NSError"8
ENABLED
DISABLED
v12@?0B8
v24@?0@"AKUserInformation"8@"NSError"16
v20@?0B8@"NSError"12
altDSID
kCDPStateRepair
kCDPOfflinePasscodeChange
kCDPRecoveryKeyRegenerate
kCDPUpgradeSetupBioMetrics
kCDPSecureTerms
kCDPConfirmExistingSecret
kWalrusCreatePasscode
_followUpType
_shouldNotify
_force
_repairType
_altDSID
<%@: %p - type=%@ shouldNotify=%@ force=%@>
Unknown
SignIn
Repair
UpdatePasscode
FinishPasscodeChange
ConfirmCyrusPasscode
RegenerateRK
NewRK
VerifyRK
_authenticationResults
_appleID
_password
_passwordEquivToken
_dsid
_isHSA2Account
_didUseSMSVerification
_cachedLocalSecret
_cachedLocalSecretType
__useSecureBackupCachedPassphrase
__alwaysCreateEscrowRecord
__skipEscrowFetches
__recoveryToken
_guestMode
_idmsRecovery
_idmsMasterKeyRecovery
_duplexSession
_resumeContext
_sharingChannel
_type
_isAttemptingBackupRestore
_findMyiPhoneUUID
_supportsSkipSignIn
_isFederatedAccount
_isBeneficiaryAccount
__ignoreLockAssertErrors
_custodianRecoveryInfo
_beneficiaryAccount
_beneficiaryWrappedKeyData
__supportsCustodianRecovery
_bundleID
__disableAsyncSecureBackupEnrollment
_mandatesRecoveryKey
CDPContext was missing DSID when CircleProxyImpl was initialized. Its OTClique was not created.
-[CDPCircleProxyImpl waitForUpdate]
v8@?0
v24@?0B8B12@"NSError"16
personID
v24@?0@"CDPContext"8@"NSError"16
v24@?0@"NSDictionary"8@"NSError"16
v24@?0@"OTCustodianRecoveryKey"8@"NSError"16
statusToSet
userAcceptedDevicesToLoseAccountAccess
devicesThatLoseAccountAccessOnEnable
v24@?0@"OTInheritanceKey"8@"NSError"16
com.apple.reminders
v24@?0Q8@"NSError"16
rpdProbationFirstSeenDate
en_US_POSIX
yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'
-[CDPStateUIProviderProxy cdpContext:promptForAdoptionOfMultipleICSC:]
-[CDPStateUIProviderProxy cdpContext:promptForICSCWithIsNumeric:numericLength:isRandom:validator:]
-[CDPStateUIProviderProxy cdpContext:promptForLocalSecretWithCompletion:]
v24@?0@"CDPLocalSecret"8@"NSError"16
-[CDPStateUIProviderProxy cdpContext:promptForLocalSecretWithHandler:]
-[CDPStateUIProviderProxy cdpContext:beginRemoteApprovalWithValidator:completion:]_block_invoke
-[CDPStateUIProviderProxy cdpContext:promptForInteractiveAuthenticationWithCompletion:]
v16@?0q8
-[CDPStateUIProviderProxy cdpContext:showResetCompletedAlertWithCompletion:]
No Records
Not Viable
Viable
iphone
IPHONE
ipad
IPAD
ipod touch
IPOD_TOUCH
macbook
MACBOOK
macbook pro
MACBOOK_PRO
mac pro
MAC_PRO
apple tv
apple watch
WATCH
DEVICE
_PASSWORD
_PASSCODE
<%@: %p - hasMID=%@ isBottled=%@ recordID=%@ name=%@ model=%@ platform=%@ date=%@ encodedMetadata=%@>
encodedMetadata
_localizedName
_model
_modelVersion
_modelClass
_platform
_recordID
_machineID
_recordDate
_hasRandomSecret
_hasNumericSecret
_numericSecretLength
_isUsingMultipleiCSC
_remainingAttempts
_serialNumber
_isCurrentDevice
recordInfo
_deviceColor
_enclosureColor
CDPStateError
CDPWalrusStateChangeNotification
_CDPWalrusStateChangeDarwinNotification
com.apple.security.octagon.peer-changed
ProtectedCloudStorage
SecureObjectSync
hasRecords
recordViability
tlkRecoveryViability
pcsRecoveryViability
sosViability
accountViability
deviceViability
CDPWebAccessStateChangeNotification
_CDPWebAccessStateChangeDarwinNotification
wasSuccess
errorDomain
errorCode
duration
__OSINSTALL_ENVIRONMENT
__AKSYNCBUBBLE
<%@: %p> EventName: [%@], ReportData: %@
v16@?0Q8
v24@?0@"NSString"8@"NSError"16
com.apple.cdp
core
signpost
v24@?0@"CDPUpdateDataPrivacyContext"8@"NSError"16
com.apple.CoreCDP.BackupRecovery
backupRecoveryResult
backupRecoveryThroughRemoteSecretDidSucceed
backupRecoveryThroughRemoteSecretDidSucceedWithoutLocalSecret
backupRecoveryThroughRemoteSecretDidCancel
backupRecoveryThroughRemoteSecretDidReset
backupRecoveryThroughRemoteSecretDidFail
joinMethod
attemptedMethods
availableMethods
escrowDeviceCount
callingProcessBundleID
Circle reset was requested.... Resetting account CDP State...
A remote secret or recovery key is required to attempt backup recovery (use -remote <secret> OR -mk <recoveryKey>)
Remote secret is invalid... cancelling prompt/validation
Recovery key is invalid... cancelling prompt/validation
An iCSC is required to attempt backup recovery (use -icsc <iCSC>)
ICSC is invalid... cancelling prompt/validation
com.apple.CoreCDP
CoreCDP
MultiUserManatee
SilentEscrowRecordViabilityRepair
_context
_hasPeersForRemoteApproval
_isWalrusEnabled
_rpdProbationDuration
com.apple.cdp.cloudDataProtectionEnabled
com.apple.cdp.manatee-availability
com.apple.cdp.manatee-state
v24@?0@"CDPEscrowRecordReport"8@"NSError"16
command
rejoin
offline-secret-change
regenerate
v24@?0@"NSArray"8@"NSError"16
findMyPhoneIdentity
marketing-name
HWModelStr
ProductType
ProductVersion
BuildVersion
DeviceName
SerialNumber
UserAssignedDeviceName
com.apple.managedconfiguration.profiled-access
DeviceClassNumber
CDPDLocalDeviceSecretProxyImpl
/System/Library/PrivateFrameworks/CoreCDPInternal.framework/CoreCDPInternal
com.apple.cdp.daemon
_validatedSecret
_secretType
_wrappedRKC
_wrappingKey
_custodianUUID
<%@: %p> for UUID: %@
CDPProtectedCloudStorageProxyImpl
CDPProtectedCloudStorageProxy
NSObject
CDPAccountRepresentation
CDPDeviceProtocol
CDPStateUIProviderInternal
CDPLocalDeviceSecretHandlerProtocol
CDPRemoteDeviceSecretValidatorProtocol
CDPRecoveryKeyValidator
CDPAuthProviderInternal
CDPDaemonProtocol
CDPFollowUpContext
NSSecureCoding
NSCoding
HSA2
CDPContext
NSCopying
Account
CDPCircleProxyImpl
CDPDCircleProxy
CDPRecoveryKeySecretValidatorProxyImpl
CDPAccount
MultiUserManatee
CDPAuthProviderProxy
CDPCustodianRecoveryKeyController
CDPUpdateDataPrivacyContext
CDPInheritanceTrustController
CDPWalrusStateController
CDPWalrusStatusProvider
CDPWebAccessStateController
CDPWebAccessStatusUpdater
CDPWebAccessStatusProvider
Probation
CDPStateUIProviderProxy
CDPWalrusStateCache
CDPFollowUpController
CDPPCSUtilities
CDPLocalizedStringBuilder
CDPDevice
CoreCDP
CDPWalrusNotificationHandler
CDPEscrowRecordViability
CDPInitUnavailable
CDPEscrowRecordReport
CDPWebAccessNotificationHandler
CDPCAReporter
CDPRemoteDeviceSecretValidator
CDPWebAccessStateCache
CDPLocalDeviceSecretHandler
CDPRecoveryKeyValidatorProxyImpl
CDPTermsInfoBackupController
CDPDataPrivacyController
CDPCABackupRecoveryReporter
CDPKeychainSync
CDPToolFakeUIProvider
CDPStateUIProvider
CDPRecoveryKeyUIProvider
CDPUtilities
CDPRecoveryFlowContext
CDPManateeStateController
CDPDAuthListener
CDPDCircleListener
CDPStateController
CDPRecoveryController
CDPLocalDeviceSecretProxyImpl
CDPLocalDeviceSecretProxy
CDPLocalDevice
CDPController
CDPDaemonConnection
CDPLocalSecret
CDPCustodianRecoveryInfo
hasFullCDPSupport
_performPCSBlock:error:
pcsIdentityCreateWithInfo:error:
description
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
pcsIdentitySetupWithInfo:error:
pcsIdentitySetIsInICDPNetwork:options:error:
pcsIdentitySetIsInICDPLocal:error:
pcsIdentitySetCompanionInCircle:error:
pcsIdentityMigrateToiCDPWithInfo:error:
pcsSynchronizeKeysWithInfo:error:
pcsRestoreLocalBackup:error:
isWalrusEnabledWithOptions:error:
setWalrusEnabled:accountIdentifier:options:error:
aa_appleAccountWithAltDSID:
authKitAccountWithAltDSID:
init
defaultStore
sharedInstance
initWithAltDSID:accountStore:accountManager:
altDSIDForAccount:
accountStore
initWithAltDSID:
initWithAccount:
aa_primaryAppleAccount
representationForAccount:
appleAccount
username
aa_personID
aa_authToken
propertiesForDataclass:
objectForKeyedSubscript:
dataclassProperties
aa_firstName
aa_fullName
accountManager
authKitAccount
passwordResetTokenBackupForAccount:
securityLevelForAccount:
isBeneficiaryForAccount:
isICDPEnabledByCheckingWithServer:
isSilentEscrowRecordRepairEnabledForAccount:
boolValue
isSilentEscrowRecordRepairEnabled
generatedContext
initWithContext:
shouldPerformSilentEscrowRecordRepairUsingCache:error:
DSID
longLongValue
numberWithLongLong:
setDsid:
altDSID
setAltDSID:
setAppleID:
isBeneficiary
setIsBeneficiaryAccount:
synchronousDaemonWithErrorHandler:
isICDPEnabledForDSID:checkWithServer:completion:
connection
invalidate
cdp_errorWithCode:
setAppProvidedContext:
getUserInformationWithContext:completion:
silentEscrowRecordRepairEnabled
_cachedPropertyValueOfClass:forKey:valueProducer:checkForStale:account:saveHandler:
_cachedPropertyValueOfClass:forKey:valueProducer:staleModifiedDate:account:saveHandler:
_cachedPropertyValueOfClass:forKey:staleModifiedDate:account:isStale:
date
_cachePropertyValue:forKey:lastModifiedDate:account:saveHandler:
refresh
accountPropertyForKey:
_deserializedPropertyDictionaryForData:withPropertyValueOfClass:error:
compare:
_serializedPropertyDictionaryWithValue:lastModifiedDate:error:
setAccountProperty:forKey:
saveAccount:withCompletionHandler:
dictionaryWithCapacity:
setObject:forKeyedSubscript:
archivedDataWithRootObject:requiringSecureCoding:error:
setWithObject:
setWithObjects:
unarchivedDictionaryWithKeysOfClasses:objectsOfClasses:fromData:error:
representationForAltDSID:
representationForPrimaryAccount
authenticationToken
escrowURLString
iCloudEnvironment
firstName
fullName
stashedPRK
securityLevel
isICDPEnabled
shouldPerformSilentEscrowRecordRepair
silentEscrowRecordRepairEnabledWithCompletion:
_cachedPropertyValueOfClass:forKey:valueProducer:
_cachedPropertyValueOfClass:forKey:valueProducer:saveHandler:
_cachedPropertyValueOfClass:forKey:valueProducer:checkForStale:account:
setAccountStore:
setAccountManager:
.cxx_destruct
_appleAccount
_authKitAccount
_altDSID
_accountStore
_accountManager
T@"ACAccountStore",&,N,V_accountStore
T@"AKAccountManager",&,N,V_accountManager
T@"ACAccount",R,N,V_appleAccount
T@"ACAccount",R,N,V_authKitAccount
T@"NSString",R,C,N
T@"NSString",R,C,N,V_altDSID
TQ,R,N
TB,R,N
T@"CDPContext",R,C,N
dateWithTimeIntervalSinceNow:
count
countByEnumeratingWithState:objects:count:
localSecretType
prevailingLocalSecretType
hasMixedSecretType
cdpContext:promptForLocalSecretWithCompletion:
cdpContext:promptForLocalSecretWithHandler:
cdpContext:beginRemoteApprovalWithValidator:completion:
cdpContext:promptForRemoteSecretWithDevices:offeringRemoteApproval:validator:
cdpRecoveryFlowContext:promptForRemoteSecretWithDevices:validator:
cdpContext:promptForICSCWithIsNumeric:numericLength:isRandom:validator:
cdpContext:promptForAdoptionOfMultipleICSC:
cdpContext:promptForInteractiveAuthenticationWithCompletion:
cdpContext:showError:withCompletion:
cdpContext:showError:withDefaultIndex:withCompletion:
cdpContext:presentRecoveryKeyWithValidator:completion:
cdpContext:promptForRecoveryKeyWithValidator:completion:
cdpContext:promptForRecoveryKeyWithSecretValidator:completion:
cdpContext:promptForBeneficiaryAccessKeyWithCompletion:
cdpContext:showResetCompletedAlertWithCompletion:
interfaceWithProtocol:
setClasses:forSelector:argumentIndex:ofReply:
userDidEnterValidSecret:type:
userDidCancelWithError:
setInterface:forSelector:argumentIndex:ofReply:
validateSecret:devices:type:withCompletion:
validateRecoveryKey:withCompletion:
cancelValidationWithError:
approveFromAnotherDeviceWithCompletion:
cancelApproveFromAnotherDevice
resetAccountCDPState
resetAccountCDPStateAndSetSecret:
supportedEscapeOfferMaskCompletion:
validateCustodianRecoveryInfo:withCompletion:
supportedEscapeOfferMask
setSupportedEscapeOfferMask:
TQ,N
confirmRecoveryKey:completion:
generateRecoveryKey:
generateRecoveryKeyWithError:
confirmRecoveryKey:error:
arrayWithObjects:count:
setWithArray:
cdpContext:performSilentRecoveryTokenRenewal:
cdpContext:verifyMasterKey:completion:
handleCloudDataProtectionStateWithContext:uiProvider:completion:
startCircleApplicationApprovalServerWithContext:completion:
repairCloudDataProtectionStateWithContext:uiProvider:completion:
shouldPerformRepairForContext:forceFetch:completion:
recoverAndSynchronizeSquirrelWithContext:uiProvider:completion:
recoverSquirrelWithContext:uiProvider:completion:
localSecretChangedTo:secretType:context:uiProvider:completion:
attemptToEscrowPreRecord:context:completion:
finishOfflineLocalSecretChangeWithContext:uiProvider:completion:
verifyRecoveryKeyWithContext:uiProvider:completion:
finishCyrusFlowAfterTermsAgreementWithContext:uiProvider:completion:
generateNewRecoveryKeyWithContext:uiProvider:completion:
deleteRecoveryKeyWithContext:uiProvider:completion:
generateRandomRecoveryKeyWithContext:completion:
isRecoveryKeyAvailableWithCompletion:
hasLocalSecretWithCompletion:
isUserVisibleKeychainSyncEnabledWithCompletion:
setUserVisibleKeychainSyncEnabled:withCompletion:
removeNonViewAwarePeersFromCircleWithContext:completion:
performRecoveryWithContext:uiProvider:authProvider:completion:
clearFollowUpWithContext:completion:
postFollowUpWithContext:completion:
statusForDataPrivacyWithCompletion:
updateDataPrivacyWithContext:completion:
fetchEscrowRecordDevicesWithContext:usingCache:completion:
deviceEscrowRecordRecoverableWithContext:completion:
walrusStatusWithContext:completion:
broadcastWalrusStateChange
updateWalrusStatus:completion:
webAccessStatusWithCompletion:
updateWebAccessStatus:completion:
pcsKeysForServices:completion:
saveTermsAcceptance:completion:
fetchTermsAcceptanceForAccount:completion:
shouldPerformSilentEscrowRecordRepairWithContext:usingCache:completion:
startSilentEscrowRecordRepairWithContext:completion:
performSilentEscrowRecordRepairWithContext:completion:
updateLastSilentEscrowRecordRepairAttemptDate:context:completion:
generateEscrowRecordStatusReportForContext:usingCache:withCompletion:
isOTEnabledForContext:completion:
setShouldNotify:
setFollowUpType:
contextWithType:
_contextWithType:cdpContext:
encodeObject:forKey:
encodeBool:forKey:
encodeInteger:forKey:
decodeObjectOfClass:forKey:
decodeBoolForKey:
decodeIntegerForKey:
stringWithFormat:
contextForOfflinePasscodeChange
contextForRecoveryKeyRepair
contextForSettingUpBiometrics
contextForSecureTerms
contextForConfirmExistingSecret
contextForWalrusCreatePasscodeWithCDPContext:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
shouldNotify
force
setForce:
followUpType
_repairType
_shouldNotify
_force
_followUpType
T@"NSString",C,N,V_followUpType
TB,N,V_shouldNotify
TB,N,V_force
T@"NSString",C,N,V_altDSID
setRepairType:
repairType
contextForStateRepair
mainBundle
bundleIdentifier
unsignedIntegerValue
initWithUUIDString:
copy
initWithBase64EncodedString:options:
mutableCopy
removeObjectForKey:
idmsRecovery
findMyiPhoneUUID
cdp_sanitizedCopy
decodeObjectOfClasses:forKey:
appleID
password
passwordEquivToken
dsid
setContext:
stringValue
duplexSession
resumeContext
sharingChannel
analyticsReporter
setEscrowDeviceCount:
copyWithZone:
initWithAuthenticationResults:
purgeResumeData
desiresAllRecords
updateWithAuthenticationResults:
augmentWithCredentialsFromContext:
cliqueConfiguration
isPiggybackingRecovery
isTTSURecovery
setValidEscrowDeviceCount:
authenticationResults
setAuthenticationResults:
setPassword:
setPasswordEquivToken:
isHSA2Account
setIsHSA2Account:
isFederatedAccount
setIsFederatedAccount:
isBeneficiaryAccount
didUseSMSVerification
setDidUseSMSVerification:
type
setType:
isAttemptingBackupRestore
setIsAttemptingBackupRestore:
cachedLocalSecret
setCachedLocalSecret:
cachedLocalSecretType
setCachedLocalSecretType:
guestMode
setGuestMode:
setFindMyiPhoneUUID:
supportsSkipSignIn
setSupportsSkipSignIn:
beneficiaryIdentifier
setBeneficiaryIdentifier:
_authProvider
set_authProvider:
setDuplexSession:
setResumeContext:
failSignInOnError
setFailSignInOnError:
validEscrowDeviceCount
totalRecoveryAttempts
setTotalRecoveryAttempts:
maxDeviceRecoveryAttempts
setMaxDeviceRecoveryAttempts:
endpoint
setEndpoint:
backupActivity
setBackupActivity:
_supportsCustodianRecovery
set_supportsCustodianRecovery:
setSharingChannel:
_disableAsyncSecureBackupEnrollment
set_disableAsyncSecureBackupEnrollment:
_useSecureBackupCachedPassphrase
set_useSecureBackupCachedPassphrase:
_alwaysCreateEscrowRecord
set_alwaysCreateEscrowRecord:
_skipEscrowFetches
set_skipEscrowFetches:
_recoveryToken
set_recoveryToken:
_ignoreLockAssertErrors
set_ignoreLockAssertErrors:
setIdmsRecovery:
idmsMasterKeyRecovery
setIdmsMasterKeyRecovery:
mandatesRecoveryKey
setMandatesRecoveryKey:
custodianRecoveryInfo
setCustodianRecoveryInfo:
beneficiaryWrappedKeyData
setBeneficiaryWrappedKeyData:
bundleID
setBundleID:
_analyticsReporter
_isHSA2Account
_isFederatedAccount
_isBeneficiaryAccount
_didUseSMSVerification
_isAttemptingBackupRestore
_guestMode
_supportsSkipSignIn
_failSignInOnError
__supportsCustodianRecovery
__disableAsyncSecureBackupEnrollment
__useSecureBackupCachedPassphrase
__alwaysCreateEscrowRecord
__skipEscrowFetches
__ignoreLockAssertErrors
_idmsRecovery
_idmsMasterKeyRecovery
_mandatesRecoveryKey
_endpoint
_backupActivity
_authenticationResults
_appleID
_password
_passwordEquivToken
_dsid
_type
_cachedLocalSecret
_cachedLocalSecretType
_findMyiPhoneUUID
_beneficiaryIdentifier
__authProvider
_duplexSession
_resumeContext
_validEscrowDeviceCount
_totalRecoveryAttempts
_maxDeviceRecoveryAttempts
_sharingChannel
__recoveryToken
_custodianRecoveryInfo
_beneficiaryWrappedKeyData
_bundleID
T@"<CDPAuthProviderInternal>",&,N,V__authProvider
T@"KCAESGCMDuplexSession",&,N,V_duplexSession
T@"AKCircleRequestContext",&,N,V_resumeContext
TB,N,V_failSignInOnError
Tq,N,V_validEscrowDeviceCount
Tq,N,V_totalRecoveryAttempts
Tq,N,V_maxDeviceRecoveryAttempts
T@"CDPCABackupRecoveryReporter",R,N
TI,N,V_endpoint
TI,N,V_backupActivity
TB,N,V__supportsCustodianRecovery
T@"CUMessageSession",&,N,V_sharingChannel
TB,N,V__disableAsyncSecureBackupEnrollment
TB,N,V__useSecureBackupCachedPassphrase
TB,N,V__alwaysCreateEscrowRecord
TB,N,V__skipEscrowFetches
T@"NSString",C,N,V__recoveryToken
TB,N,V__ignoreLockAssertErrors
TB,N,V_idmsRecovery
TB,N,V_idmsMasterKeyRecovery
TB,N,V_mandatesRecoveryKey
Tq,N,V_type
T@"CDPCustodianRecoveryInfo",&,N,V_custodianRecoveryInfo
T@"NSData",&,N,V_beneficiaryWrappedKeyData
T@"NSString",C,N,V_bundleID
T@"NSDictionary",C,N,V_authenticationResults
T@"NSString",C,N,V_appleID
T@"NSString",C,N,V_password
T@"NSString",C,N,V_passwordEquivToken
T@"NSNumber",C,N,V_dsid
TB,N,V_isHSA2Account
TB,N,V_isFederatedAccount
TB,N,V_isBeneficiaryAccount
TB,N,V_didUseSMSVerification
TB,N,V_isAttemptingBackupRestore
T@"NSString",C,N,V_cachedLocalSecret
TQ,N,V_cachedLocalSecretType
TB,N,V_guestMode
T@"NSString",C,V_findMyiPhoneUUID
TB,V_supportsSkipSignIn
T@"NSUUID",C,N,V_beneficiaryIdentifier
contextForPrimaryAccount
personIDForAltDSID:
altDSIDForPersonID:
preflightContext:
initWithContextData:
initWithContext:clique:
dictionaryWithObjects:forKeys:count:
setUseCachedAccountStatus:
fetchCliqueStatus:error:
numberWithInteger:
cdpStatusFromOT:
cachedCliqueStatus:
platformSupportsSOS
cachedSOSCircleStatus:
cdpStatusFromSOS:
_authenticatedCliqueStatus:
_sos_circleStatus:
waitForOctagonUpgrade:
contextType
performedSuccessfulCDPStateMachineRun:reply:
performedFailureCDPStateMachineRun:error:reply:
fetchCliqueStatus:
_cliqueStatus:
_sos_authenticatedCircleStatus:
tryRegisteringCredentials
registerCredentials
nonCachedSOSCircleStatus:
cliqueMemberIdentifier
peerDeviceNamesByPeerID:
waitForInitialSync:
waitForPriorityViewKeychainDataRecovery:
combinedCircleStatus:
removeThisDeviceFromCircle:
leaveClique:
requestToJoinCircle:
joinAfterRestore:
setPasswordEquivalentToken:
setAuthenticationAppleID:
resetProtectedData:error:
fetchUserControllableViewsSyncingEnabled:
allObjects
peersHaveViewsEnabled:error:
copyViewUnawarePeerInfo:
removeFriendsInClique:error:
setUserControllableViewsSyncStatus:error:
_registerCredentialsOnlyIfNeeded:
canAuthenticate
dataUsingEncoding:
setUserCredentialsAndDSID:password:error:
code
tryUserCredentialsAndDSID:password:error:
accountUserKeyAvailable
_pairingChannelContext
setupPairingChannelAsInitiator:
setupPairingChannelAsAcceptor:
hardwareModel
setModel:
modelVersion
setModelVersion:
deviceClass
setModelClass:
osVersion
setOsVersion:
custodianUUID
wrappedRKC
wrappingKey
initWithWrappedKey:wrappingKey:uuid:error:
recoverOctagonUsingCustodianRecoveryKey:custodianRecoveryKey:reply:
combinedCachedCircleStatus:
peerId
peerDeviceNamesByPeerID
didJoinCircleAfterRecovery:
generateRecoveryKeyWithInfo:error:
generateVerifierWithRecoveryKey:error:
synchronizeCircleViews
requestToJoinCircleAfterRestore:
requestToResetProtectedData:
anyPeerHasEnabledViewsInSet:error:
setViewsWithEnableSet:disableSet:
hasNonViewAwarePeers
removeNonViewAwarePeers:
isLastBackupMakingPeer:
registerCredentialsIfMissing
pairingChannelInitiator
pairingChannelAcceptor
waitForUpdate
reportSuccess
reportFailure:
recoverOctagonUsingCustodianInfo:completion:
cdpContext
T@"CDPContext",R,N
sos_circleStatus:
_clique
_cdpContext
T@"CDPContext",R,N,V_cdpContext
initWithRemoteObject:
_validator
TQ,N,VsupportedEscapeOfferMask
isICDPEnabledForDSID:checkWithServer:
primaryAppleAccount
accountProperties
primaryAccountAltDSID
primaryAuthKitAccount
objectForKey:
primaryAccountDSID
primaryAccountUsername
primaryAccountIsBeneficiary
credentialForAccount:error:
credentialItemForKey:
saveVerifiedAccount:error:
isICDPEnabledForDSID:
isOTEnabledForContext:
primaryAccountSecurityLevel
authToken
escrowURL
iCloudEnv
primaryAccountFirstName
primaryAccountFullName
primaryAccountStashedPRK
primaryAccountNeedsEscrowRecordRepair
_authKitAccountWith:
appleAccountForAltDSID:
aa_appleAccountWithPersonID:
aa_altDSID
checkIfAltDSIDIsBeneficiary:
aa_appleAccountWithUsername:
contextForAccountWithAltDSID:
isHSA2Enabled:
cdpContextForUsername:
proxyWithAuthProvider:
wrappedKey
initWithWrappedRKC:wrappingKey:custodianUUID:
createCustodianRecoveryKey:uuid:reply:
removeCustodianRecoveryKey:custodianRecoveryKeyUUID:reply:
preflightRecoverOctagonUsingCustodianRecoveryKey:custodianRecoveryKey:reply:
createRecoveryKeyWithContext:forUUID:completion:
deleteRecoveryKeyWithContext:forUUID:completion:
validateRecoveryKey:withContext:completion:
numberWithUnsignedInteger:
unsignedIntValue
initWithStatusToUpdate:
statusToSet
setStatusToSet:
userAcceptedDevicesToLoseAccountAccess
setUserAcceptedDevicesToLoseAccountAccess:
devicesThatLoseAccountAccessOnEnable
setDevicesThatLoseAccountAccessOnEnable:
_userAcceptedDevicesToLoseAccountAccess
_statusToSet
_devicesThatLoseAccountAccessOnEnable
TQ,N,V_statusToSet
TB,N,V_userAcceptedDevicesToLoseAccountAccess
T@"NSArray",&,N,V_devicesThatLoseAccountAccessOnEnable
accessCode
createInheritanceKey:uuid:reply:
generateInheritanceKey:uuid:reply:
initFromAccessKey:
beneficiaryID
recoverOctagonUsingInheritanceKey:inheritanceKey:reply:
removeInheritanceKey:inheritanceKeyUUID:reply:
preflightRecoverOctagonUsingInheritanceKey:inheritanceKey:reply:
createInheritanceKeyWithContext:completion:
recoverOctagonWithContext:inheritanceKey:completion:
isInheritanceAccessKeyValid:
deleteInheritanceAccessKeyWithContext:completion:
validateAccessKey:withContext:completion:
daemonWithErrorHandler:
startObservingWalrusStateChangeNotification
walrusStatusWithCompletion:
walrusStatus:
_context
startObservingWebAccessStateChangeNotification
webAccessStatus:
_serverFriendlyDateFormatter
dateFromString:
stringFromDate:
rpdProbationFirstSeenDate
initWithLocaleIdentifier:
setDateFormat:
setLocale:
timeZoneForSecondsFromGMT:
setTimeZone:
timeIntervalSinceDate:
setRpdProbationFirstSeenDate:
rpdProbationIsInEffectForDuration:
T@"NSDate",&,N
errorWithDomain:code:userInfo:
initWithContext:validator:
initWithContext:handler:
validatedSecret
secretType
cdpContext:beginRemoteApprovalWithValidator:
context
hasPeersForRemoteApproval
reachabilityForInternetConnection
currentReachabilityStatus
initWithUIProvider:
uiProvider
setUiProvider:
_uiProvider
T@"<CDPStateUIProvider>",&,N,V_uiProvider
setWalrusStatus:
walrusStatus
isValid
setIsValid:
_isValid
_walrusStatus
TQ,V_walrusStatus
TB,V_isValid
dealloc
postFollowUpWithContext:error:
clearFollowUpWithContext:error:
_daemonConn
dictionary
_pcsConfigForPrimaryAccount
addEntriesFromDictionary:
setupDictionaryWithContext:
lowercaseString
containsString:
builderForKey:
stringByAppendingString:
builderForKey:inTable:
addDeviceClass:
addUnqualifiedDeviceClass:
addSecretType:
localizedString
currentKey
_key
_table
wrappingKeyData
length
wrappedKeyData
initWithWrappedKeyData:wrappingKeyData:uuid:error:
wrappingKeyString
initWithWrappedKeyData:wrappingKeyString:uuid:error:
uuid
initWithBeneficiairyIdentifier:
claimTokenData
setClaimTokenData:
claimTokenString
setClaimTokenString:
setWrappingKeyData:
setWrappingKeyString:
setWrappedKeyData:
wrappedKeyString
setWrappedKeyString:
T@"AKInheritanceAccessKey",R,N
numberWithInt:
localizedName
setLocalizedName:
model
modelClass
platform
setPlatform:
recordID
setRecordID:
machineID
setMachineID:
recordDate
setRecordDate:
hasRandomSecret
setHasRandomSecret:
hasNumericSecret
setHasNumericSecret:
numericSecretLength
setNumericSecretLength:
isUsingMultipleiCSC
setIsUsingMultipleiCSC:
remainingAttempts
setRemainingAttempts:
serialNumber
setSerialNumber:
isCurrentDevice
setIsCurrentDevice:
deviceColor
setDeviceColor:
enclosureColor
setEnclosureColor:
localizedDescription
setLocalizedDescription:
recoveryStatus
setRecoveryStatus:
coolOffPeriod
setCoolOffPeriod:
recordInfo
setRecordInfo:
record
setRecord:
simplePublicKey
setSimplePublicKey:
_localizedName
_model
_modelVersion
_modelClass
_platform
_recordID
_machineID
_simplePublicKey
_recordDate
_recordInfo
_record
_hasRandomSecret
_hasNumericSecret
_numericSecretLength
_isUsingMultipleiCSC
_remainingAttempts
_deviceColor
_enclosureColor
_serialNumber
_isCurrentDevice
_localizedDescription
_recoveryStatus
_coolOffPeriod
T@"NSString",C,N,V_localizedName
T@"NSString",C,N,V_model
T@"NSString",C,N,V_modelVersion
T@"NSString",C,N,V_modelClass
TQ,N,V_platform
T@"NSString",C,N,V_recordID
T@"NSString",C,N,V_machineID
T@"NSDate",C,N,V_recordDate
TB,N,V_hasRandomSecret
TB,N,V_hasNumericSecret
T@"NSNumber",C,N,V_numericSecretLength
TB,N,V_isUsingMultipleiCSC
TQ,N,V_remainingAttempts
T@"NSString",C,N,V_serialNumber
TB,N,V_isCurrentDevice
TQ,N,V_recoveryStatus
T@"NSNumber",&,N,V_coolOffPeriod
T@"NSString",C,N,V_deviceColor
T@"NSString",C,N,V_enclosureColor
T@"NSDictionary",C,N,V_recordInfo
T@"OTEscrowRecord",C,N,V_record
T@"NSData",C,N,V_simplePublicKey
T@"NSString",C,N,V_localizedDescription
cdp_errorWithCode:userInfo:
domain
isEqualToString:
cdp_isCDPErrorWithCode:
cdp_isLoginHardLimit
cdp_isLoginSoftLimit
cdp_errorWithCode:underlyingError:
_stopObservingWalrusStateChangeNotification
isObservingWalrusStatus
_isObservingWalrusStatus
defaultCenter
postNotificationName:object:
initWithRecordPresence:recordViability:tlkRecoveryViability:sosViability:pcsRecoveryViability:
hasRecords
hasRecordViability
requiresMoreViewData
unsignedLongValue
numberWithBool:
recordViability
tlkRecoveryViability
sosViability
pcsRecoveryViability
_hasRecords
_recordViability
_tlkRecoveryViability
_pcsRecoveryViability
_sosViability
TB,R,N,V_hasRecords
TQ,R,N,V_recordViability
TQ,R,N,V_tlkRecoveryViability
TQ,R,N,V_pcsRecoveryViability
TQ,R,N,V_sosViability
initWithDeviceStatus:accountStatus:
deviceViability
accountViability
initWithDefaultValues
updatedReportWithRecord:isDeviceRecord:
updatedReportWithViews:forDeviceRecord:
_accountViability
_deviceViability
T@"CDPEscrowRecordViability",R,N,V_accountViability
T@"CDPEscrowRecordViability",R,N,V_deviceViability
_stopObservingWebAccessStateChangeNotification
_isObservingWebAccessStatus
machAbsoluteTimeToTimeInterval:
numberWithDouble:
initWithEvent:
sendReport
_eventName
_reportData
_initTime
_clock_timebase
_executeSyncOnMainThreadIfNeeded:
isMainThread
setWebAccessStatus:
webAccessStatus
_webAccessStatus
TQ,V_webAccessStatus
_handlerProxy
T@"CDPContext",R,N,V_context
daemonConn
setDaemonConn:
T@"CDPDaemonConnection",&,N,V_daemonConn
_checkUseConsentForContext:shouldContinue:completion:
_logDataPrivacyStatUpdateError:completion:
_updateDataPrivacyWithContext:completion:
updateDataPrivacyWithContext:shouldContinue:completion:
backupRecoverySetAttemptedMethod:
backupRecoverySetAvailableMethod:
userInfo
joinMethod
backupRecoveryDidSucceed
backupRecoveryDidSucceedWithoutLocalSecret
backupRecoveryDidCancel
backupRecoveryDidReset
backupRecoverySetJoinFromBundleID:
backupRecoveryDidFailWithError:
_attemptedMethods
_availableMethods
_escrowDeviceCount
_joinMethod
isUserVisibleKeychainSyncEnabled
initWithValidatedSecret:secretType:
recoveryKey
accessKey
cdpContext:promptToInformUserOfAccountUnlockWithCompletion:
cdpContext:promptToInformUserOfAccountLockOutWithCompletion:
localSecret
setLocalSecret:
remoteSecret
setRemoteSecret:
icsc
setIcsc:
setRecoveryKey:
setAccessKey:
circleResetRequested
setCircleResetRequested:
_circleResetRequested
_localSecret
_remoteSecret
_icsc
_recoveryKey
_accessKey
T@"NSString",C,N,V_localSecret
T@"NSString",C,N,V_remoteSecret
T@"NSString",C,N,V_icsc
T@"NSString",C,N,V_recoveryKey
T@"AKInheritanceAccessKey",C,N,V_accessKey
TB,N,V_circleResetRequested
isMultiUserManateeFeatureEnabled
deviceIsAudioAccessory
isInternalBuild
canEnableMultiUserManatee
isSilentEscrowRecordViabilityRepairEnabled
bundleForClass:
localizedStringForKey:value:table:
decodeFloatForKey:
encodeFloat:forKey:
setHasPeersForRemoteApproval:
isWalrusEnabled
setIsWalrusEnabled:
rpdProbationDuration
setRpdProbationDuration:
_hasPeersForRemoteApproval
_isWalrusEnabled
_rpdProbationDuration
T@"CDPContext",&,N,V_context
TB,N,V_hasPeersForRemoteApproval
TB,N,V_isWalrusEnabled
Td,N,V_rpdProbationDuration
_checkSecurityEligibilityForContext:error:
_didCreateCircleProxy
_isPrimaryAccount:
_reportManateeAvailability:value:
checkCircleStatusAndSendManateeAvailabilityNotification
numberWithUnsignedLongLong:
_sendNotification:withUserInfo:
stringWithUTF8String:
postNotificationName:object:userInfo:deliverImmediately:
postNotificationName:object:userInfo:
securityLevelChanged:forAltDSID:
circleStatusChanged
circleViewStatusChanged
isManateeAvailable:
circleProxy
setCircleProxy:
_circleProxy
T@"<CDPDCircleProxy>",&,N,V_circleProxy
uiProviderProxy
startCircleApplicationApprovalServer:
attemptToEscrowPreRecord:completion:
handleURLActionWithInfo:completion:
repairCloudDataProtectionStateWithCompletion:
finishOfflineLocalSecretChangeWithCompletion:
generateNewRecoveryKey:
handleCloudDataProtectionStateWithCompletion:
startCircleApplicationApprovalServerSkipEscrowFetches:
recoverAndSynchronizeWithSquirrel:
recoverWithSquirrel:
attemptToEscrowPreRecord:preRecordUUID:secretType:completion:
localSecretChangedTo:secretType:completion:
finishCyrusFlowAfterTermsAgreementWithContext:
shouldPerformRepairWithOptionForceFetch:error:
shouldPerformRepairWithOptionForceFetch:completion:
generateEscrowRecordReportUsingCache:completion:
deleteRecoveryKey:
verifyRecoveryKey:
deleteRecoveryKeyWithError:
isRecoveryKeyAvailableWithError:
generateRandomRecoveryKey:
handleURLActionWithInfo:
isDeviceEscrowRecordRecoverable:
shouldPerformSilentEscrowRecordRepairUsingCache:completion:
startSilentEscrowRecordRepairWithCompletion:
performSilentEscrowRecordRepairWithCompletion:
updateLastSilentEscrowRecordRepairAttemptDate:error:
_sanitizedRecoveryErrorWithError:
authProvider
performRecovery:
hasLocalSecret
_currentProcessCreatesDaemonTypeProxy
currentProcessHasEntitlement:
supportsSecureBackupRecovery
marketingModel
deviceName
_isHomePod
_localSecretProxy
setDaemonXPCEndpoint:
initWithXpcEndpoint:context:
setAuthProvider:
setUiProviderProxy:
_uiProviderProxy
T@"CDPStateUIProviderProxy",&,N,V_uiProviderProxy
T@"<CDPAuthProvider>",&,N,V_authProvider
shouldDisplayToUser
lock
initWithMachServiceName:options:
initWithListenerEndpoint:
unlock
setInvalidationHandler:
setInterruptionHandler:
setRemoteObjectInterface:
resume
remoteObjectProxyWithErrorHandler:
synchronousRemoteObjectProxyWithErrorHandler:
daemon
daemonXPCEndpoint
_conn
_connLock
_daemonXPCEndpoint
T@"NSXPCListenerEndpoint",&,N,V_daemonXPCEndpoint
integerValue
_validatedSecret
_secretType
T@"NSString",R,N,V_validatedSecret
TQ,R,N,V_secretType
allocWithZone:
UUIDString
_wrappedRKC
_wrappingKey
_custodianUUID
T@"NSData",R,C,N,V_wrappedRKC
T@"NSData",R,C,N,V_wrappingKey
T@"NSUUID",R,C,N,V_custodianUUID
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
^{_PCSIdentitySetData=}32@0:8@16^@24
B40@0:8^{_PCSIdentitySetData=}16@24^@32
B32@0:8^{_PCSIdentitySetData=}16^@24
B32@0:8@16^@24
B44@0:8B16@20@28^@36
^{_PCSIdentitySetData=}32@0:8@"NSDictionary"16^@24
B40@0:8^{_PCSIdentitySetData=}16@"NSDictionary"24^@32
B32@0:8@"NSDictionary"16^@24
B44@0:8B16@"NSString"20@"NSDictionary"28^@36
B32@0:8@?16^@24
@24@0:8@16
@40@0:8@16@24@32
B20@0:8B16
v24@0:8@?16
@40@0:8#16@24@?32
@48@0:8#16@24@?32@?40
@52@0:8#16@24@?32B40@44
@60@0:8#16@24@?32B40@44@?52
@64@0:8#16@24@?32@40@48@?56
@56@0:8#16@24@32@40^B48
v56@0:8@16@24@32@40@?48
@40@0:8@16@24^@32
@40@0:8@16#24^@32
v24@0:8@16
v16@0:8
@"ACAccount"
@"NSString"
@"ACAccountStore"
@"AKAccountManager"
v32@0:8@16@?24
v32@0:8@16@24
v40@0:8@16@24@?32
v44@0:8@16@24B32@36
v40@0:8@16@24@32
v48@0:8@16B24@28B36@40
v48@0:8@16@24q32@?40
v32@0:8@"CDPContext"16@?<v@?@"CDPLocalSecret"@"NSError">24
v32@0:8@"CDPContext"16@"<CDPLocalDeviceSecretHandlerProtocol>"24
v40@0:8@"CDPContext"16@"<CDPRemoteDeviceSecretValidatorProtocol>"24@?<v@?B@"NSError">32
v44@0:8@"CDPContext"16@"NSArray"24B32@"<CDPRemoteDeviceSecretValidatorProtocol>"36
v40@0:8@"CDPRecoveryFlowContext"16@"NSArray"24@"<CDPRemoteDeviceSecretValidatorProtocol>"32
v48@0:8@"CDPContext"16B24@"NSNumber"28B36@"<CDPRemoteDeviceSecretValidatorProtocol>"40
v32@0:8@"CDPContext"16@?<v@?B@"NSError">24
v32@0:8@"CDPContext"16@?<v@?@"NSDictionary"@"NSError">24
v40@0:8@"CDPContext"16@"NSError"24@?<v@?q>32
v48@0:8@"CDPContext"16@"NSError"24q32@?<v@?q>40
v40@0:8@"CDPContext"16@"<CDPRecoveryKeyValidatorInternal>"24@?<v@?B@"NSError">32
v40@0:8@"CDPContext"16@"<CDPRemoteDeviceSecretValidatorProtocolInternal>"24@?<v@?B@"NSError">32
v32@0:8@"CDPContext"16@?<v@?@"AKInheritanceAccessKey"@"NSError">24
v32@0:8@"CDPContext"16@?<v@?Q@"NSError">24
v32@0:8@16Q24
v32@0:8@"NSString"16Q24
v24@0:8@"NSError"16
v48@0:8@16@24Q32@?40
v24@0:8Q16
v48@0:8@"NSString"16@"NSArray"24Q32@?<v@?BB@"NSError">40
v32@0:8@"NSString"16@?<v@?BB@"NSError">24
v24@0:8@?<v@?B@"NSError">16
v24@0:8@"CDPLocalSecret"16
v24@0:8@?<v@?Q>16
v32@0:8@"CDPCustodianRecoveryInfo"16@?<v@?B@"NSError">24
@24@0:8^@16
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v24@0:8@?<v@?@"NSString"@"NSError">16
@"NSString"24@0:8^@16
B32@0:8@"NSString"16^@24
v32@0:8@"CDPContext"16@?<v@?@"CDPContext"@"NSError">24
v40@0:8@"CDPContext"16@"NSString"24@?<v@?@"NSDictionary"@"NSError">32
v36@0:8@16B24@?28
v56@0:8@16Q24@32@40@?48
Vv24@0:8@?16
v28@0:8B16@?20
v48@0:8@16@24@32@?40
Vv32@0:8@16@?24
Vv36@0:8@16B24@?28
Vv32@0:8Q16@?24
Vv40@0:8@16@24@?32
v40@0:8@"CDPContext"16@"<CDPStateUIProviderInternal>"24@?<v@?BB@"NSError">32
v40@0:8@"CDPContext"16@"<CDPStateUIProviderInternal>"24@?<v@?B@"NSError">32
v36@0:8@"CDPContext"16B24@?<v@?B@"NSError">28
v56@0:8@"NSString"16Q24@"CDPContext"32@"<CDPStateUIProviderInternal>"40@?<v@?B@"NSError">48
v40@0:8@"NSString"16@"CDPContext"24@?<v@?B@"NSError">32
v32@0:8@"CDPContext"16@?<v@?@"NSString"@"NSError">24
Vv24@0:8@?<v@?B@"NSError">16
v36@0:8@"NSString"16B24@?<v@?B>28
v24@0:8@?<v@?B>16
v28@0:8B16@?<v@?B@"NSError">20
v48@0:8@"CDPContext"16@"<CDPStateUIProviderInternal>"24@"<CDPAuthProviderInternal>"32@?<v@?@"NSDictionary"@"NSError">40
v32@0:8@"CDPFollowUpContext"16@?<v@?B@"NSError">24
Vv24@0:8@?<v@?Q@"NSError">16
Vv32@0:8@"CDPUpdateDataPrivacyContext"16@?<v@?@"CDPUpdateDataPrivacyContext"@"NSError">24
Vv36@0:8@"CDPContext"16B24@?<v@?@"NSArray"@"NSError">28
Vv32@0:8@"CDPContext"16@?<v@?@"NSError">24
Vv32@0:8@"CDPContext"16@?<v@?Q@"NSError">24
Vv32@0:8Q16@?<v@?@"NSError">24
Vv32@0:8@"NSArray"16@?<v@?@"NSDictionary"@"NSError">24
v32@0:8@"NSDictionary"16@?<v@?@"NSError">24
v32@0:8@"ACAccount"16@?<v@?@"NSDictionary"@"NSError">24
Vv36@0:8@"CDPContext"16B24@?<v@?B@"NSError">28
Vv32@0:8@"CDPContext"16@?<v@?B@"NSError">24
Vv40@0:8@"NSDate"16@"CDPContext"24@?<v@?B@"NSError">32
v36@0:8@"CDPContext"16B24@?<v@?@"CDPEscrowRecordReport"@"NSError">28
@32@0:8@16@24
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v20@0:8B16
@24@0:8^{_NSZone=}16
v24@0:8q16
q16@0:8
I16@0:8
v20@0:8I16
@"CDPCABackupRecoveryReporter"
@"NSDictionary"
@"NSNumber"
@"NSUUID"
@"<CDPAuthProviderInternal>"
@"KCAESGCMDuplexSession"
@"AKCircleRequestContext"
@"CUMessageSession"
@"CDPCustodianRecoveryInfo"
@"NSData"
Q24@0:8^@16
i24@0:8^@16
@32@0:8@16^@24
B24@0:8^@16
B32@0:8@16@24
B28@0:8B16^@20
@"NSDictionary"16@0:8
v24@0:8@"OTClique"16
@"NSString"32@0:8@"NSDictionary"16^@24
@"NSDictionary"32@0:8@"NSString"16^@24
@"OTClique"24@0:8^@16
B32@0:8@"NSSet"16^@24
B32@0:8@"NSSet"16@"NSSet"24
@"KCPairingChannel"16@0:8
v32@0:8@"CDPCustodianRecoveryInfo"16@?<v@?@"NSError">24
@"CDPContext"16@0:8
Q20@0:8i16
Q24@0:8q16
q24@0:8^@16
@"OTClique"
@"CDPContext"
@"<CDPRemoteDeviceSecretValidatorProtocol>"
B28@0:8@16B24
@"<CDPAuthProvider>"
@24@0:8Q16
@"NSArray"
v24@0:8@?<v@?Q@"NSError">16
v32@0:8Q16@?24
v32@0:8Q16@?<v@?@"NSError">24
B24@0:8d16
@"<CDPStateUIProvider>"
@"CDPDaemonConnection"
@"NSDate"
@"OTEscrowRecord"
B24@0:8q16
@24@0:8q16
@32@0:8q16@24
@52@0:8B16Q20Q28Q36Q44
@28@0:8@16B24
@"CDPEscrowRecordViability"
d24@0:8Q16
@"NSMutableDictionary"
{mach_timebase_info="numer"I"denom"I}
@"<CDPLocalDeviceSecretHandlerProtocol>"
@"<CDPRecoveryKeyValidator>"
v40@0:8@16@?24@?32
v40@0:8@"CDPContext"16@"<CDPRecoveryKeyValidator>"24@?<v@?B@"NSError">32
v44@0:8@"CDPContext"16@"NSArray"24B32@"CDPRemoteDeviceSecretValidator"36
v40@0:8@"CDPRecoveryFlowContext"16@"NSArray"24@"CDPRemoteDeviceSecretValidator"32
v48@0:8@"CDPContext"16B24@"NSNumber"28B36@"CDPRemoteDeviceSecretValidator"40
v32@0:8@"CDPContext"16@"CDPLocalDeviceSecretHandler"24
v32@0:8@"CDPContext"16@"CDPRemoteDeviceSecretValidator"24
v32@0:8@"CDPContext"16@?<v@?>24
@"AKInheritanceAccessKey"
d16@0:8
v24@0:8d16
v28@0:8B16@20
v28@0:8B16@"NSString"20
v28@0:8B16Q20
v32@0:8r*16@24
@"<CDPDCircleProxy>"
v40@0:8@16Q24@?32
@"<CDPLocalDeviceSecretProxy>"
@"CDPStateUIProviderProxy"
@24@0:8@?16
@"NSXPCConnection"
@"NSLock"
@"NSXPCListenerEndpoint"
@32@0:8@16Q24
@(#)PROGRAM:CoreCDP  PROJECT:CoreCDP-1
"setting companion in circle"
"pcsIdentitySetupWithInfo:"
"pcsIdentityMigrateToiCDPWithInfo:"
"pcsSynchronizeKeysWithInfo:"
"pcsRestoreLocalBackup:"
"Failed to create PCS identity with error: %@"
"Unable to create CDPAccountRepresentation instance due to nil Apple account (%@) or AuthKit account (%@)"
"%@: Assuming silent escrow record repair is disabled"
"%@: Returning %@ for 'isSilentEscrowRecordRepairEnabled'"
"%@: Silent escrow record repair is disabled by server, returning NO"
"%@: Could not determine if device needs escrow repair with invalid context"
"%@: Failed to check if escrow record repair is needed with error (%@)"
"%@: Checked if escrow record repair is needed (%@)"
"%@: Unable to generate context for account (%@) with no DSID"
"%@: Generated context (%@) for account with DSID (%@)"
cdp/enabled-status-check
"%@: Failed to check if iCDP is enabled for account with DSID (%@) with error (%@)"
"%@: Checking iCDP status for account with DSID (%@), will check with server (%@)"
"%@: iCDP status for account with DSID (%@) is %@"
"%@: Unable to check 'silentEscrowRecordRepairEnabled' because AKAccountManager (%@) doesn't respond to selector"
"%@: Returning cached 'silentEscrowRecordRepairEnabled' value (%@) from account (%@)"
"%@: Calling to fetch user info for altDSID (%@) for 'silentEscrowRecordRepairEnabled' value"
"%@: Unable to fetch user info with context because AKAppleIDAuthenticationController (%@) doesn't respond to selector"
"Failed to fetch user info for altDSID (%@) with error (%@)"
"Returning server fetched 'silentEscrowRecordRepairEnabled' value (%@) for altDSID (%@)"
"%@: Unable to check 'silentEscrowRecordRepairEnabled' because AKUserInformation (%@) doesn't respond to selector"
"%@: Calling value producer for key (%@)"
"%@: Called value producer for key (%@) and received value (%@)"
"%@: No cached property for key (%@) was found on account (%@)"
"%@: Failed to deserialize property dictionary for key (%@) from data (%@) with error (%@)"
"%@: Expected lastModifiedDate value in cached property dictionary (%@) for key (%@)"
"%@: Found nil property value in cached property dictionary (%@) for key (%@)"
"%@: Returned cached property value (%@) for key (%@)"
"%@: Cached property value (%@) for key (%@) is stale (lastModifiedDate [%@] < staleModifiedDate [%@])"
"%@: Failed to serialize property dictionary for key (%@) with error (%@)"
"Successfully saved cached property value (%@) for key (%@) on account (%@)"
"Failed to save cached property value (%@) for key (%@) on account (%@) with error (%@)"
"%@: Failed to archive property dictionary (%@) with error (%@)"
"%@: Failed to unarchive data (%@) with error (%@)"
"CDPFollowUpContext: set altDSID to %@"
"Incoming context is nil, returning primary account context."
"Preflighting invalid context: dsid & altDSID missing. Amending with primary account details."
"Preflighting invalid context: altDSID missing"
"Preflighting context with altDSID: %@"
"Preflighting context with dsid %@ for a non-primary acccount.. dragons may be ahead"
"CircleProxyImpl init is missing required cliqueConfiguration. Problems lie ahead 
"CircleProxyImpl init is missing required dsid. Barring no primary account, problems lie ahead 
"CDPCircleProxyImpl: appleID:%@, dsid: %@, type: %ld"
"Circle status check failed with error: %@"
"Failed to retrieve cachedCliqueStatus: %@"
"Call to cachedCliqueStatus returned a status: %@"
 enableTelemetry=YES 
BEGIN [%lld]: CachedCircleStatus  enableTelemetry=YES 
 status=%{public,signpost.telemetry:number1,name=status}d 
CachedCircleStatus
END [%lld] %fs: CachedCircleStatus  status=%{public,signpost.telemetry:number1,name=status}d 
"Beneficiary account detected. Faking cached SOS circle status."
"Checking circle status with SOSCCThisDeviceIsInCircle"
"Failed to check circle status: %@"
"Call to SOSCCThisDeviceIsInCircle returned a status: %d"
"Checking combined circle status"
"%s (%d) called"
"Clique waitForOctagonUpgrade %@ with error %@"
"This is not an HSA2 account, not calling waitForOctagonUpgrade"
"Reporting success for %@"
"Reporting failure for %@"
BEGIN [%lld]: CircleStatus  enableTelemetry=YES 
"Checking clique status with fetchCliqueStatus from %@"
"Call to fetchCliqueStatus returned a status: %@"
CircleStatus
END [%lld] %fs: CircleStatus  status=%{public,signpost.telemetry:number1,name=status}d 
"Beneficiary account detected. Faking non-cached SOS circle status."
BEGIN [%lld]: SOSCircleStatus  enableTelemetry=YES 
SOSCircleStatus
END [%lld] %fs: SOSCircleStatus  status=%{public,signpost.telemetry:number1,name=status}d 
BEGIN [%lld]: SynchronizeCircleViews  enableTelemetry=YES 
"Skipping initial sync because we are not in a circle"
"Skipping initial sync because it is not supported by this platform"
"Calling SOSCCWaitForInitialSync to wait for views to sync"
"Finished calling SOSCCWaitForInitialSync didSync=%i error=%@"
"We failed to sync and now we failed to remove self form circle, nothing good will happen here"
"We failed to sync but managed to get out of the circle, hopefully the next attempt will work"
 didSync=%{public,signpost.telemetry:number1,name=didSync}d 
SynchronizeCircleViews
END [%lld] %fs: SynchronizeCircleViews  didSync=%{public,signpost.telemetry:number1,name=didSync}d 
"Attempting to remove self from circle"
"Removed device from circle successfully"
"Failed to remove self from circle - %@"
"Failed to check for non-view-aware peers with error %@"
"Removed old peers from circle: %@"
"Failed to remove old peers from circle with error %@ (peers: %@)"
"Failed to check for non-view-aware peers before removing them from circle with error %@"
"_registerCredentialsOnlyIfNeeded: appleID:%@, dsid: %@, type: %ld"
"Calling SOSCCSetUserCredentialsAndDSID"
BEGIN [%lld]: SetUserCredentialsAndDSID  enableTelemetry=YES 
"Failed to call SOSCCSetUserCredentialsAndDSID with error %@"
 Error=%{public,signpost.telemetry:number1,name=Error}d 
SetUserCredentialsAndDSID
END [%lld] %fs: SetUserCredentialsAndDSID  Error=%{public,signpost.telemetry:number1,name=Error}d 
"Security indicated that no credential is needed nor did we force"
"Skipping registering credentials, insufficient parameters"
BEGIN [%lld]: TryUserCredentialsAndDSID  enableTelemetry=YES 
"Registered credentials through try attempt"
"Failed to call SOSCCTryUserCredentialsAndDSID with error %@"
TryUserCredentialsAndDSID
END [%lld] %fs: TryUserCredentialsAndDSID  Error=%{public,signpost.telemetry:number1,name=Error}d 
"Skipping try registering credentials, insufficient parameters"
"Security requires credentials..."
"Obtaining recovery key from security for custodian recovery with UUID: %@"
"Failed to obtain custodian recovery key from security with error: %@"
"Attempting to recover octagon usign custodian recovery key"
"Not implemented"
cdp: enabled status check
"XPC Error while checking if iCDP is enabled for DSID %@: %@"
"Checking iCDP status for DSID %@ (checkWithServer=%i)"
"iCDP status for DSID %@ is %@"
OctagonStatus
BEGIN [%lld]: OctagonStatus  enableTelemetry=YES 
"XPC Error while checking if OT is enabled: %@"
"Checking OT status"
END [%lld] %fs: OctagonStatus  Error=%{public,signpost.telemetry:number1,name=Error}d 
"Creating context for %@"
"Fetching PRK for primary Account"
"Escrowing a previously backed up PRK"
"Something went wrong... (%@) could not find a stashed token for primary Account: <%@ : %@>"
"MUManatee: Creating context for %@"
"Starting token renewal"
"Token completion block called"
"Starting MRK verification for %@"
"MRK verification completion block called"
"CDPCustodianController init is missing required dsid. Unable to process request, problems lie ahead 
"Asking security to create custodian recovery key for %@"
CustodianCreateRecoveryKey
BEGIN [%lld]: CustodianCreateRecoveryKey  enableTelemetry=YES 
END [%lld] %fs: CustodianCreateRecoveryKey  Error=%{public,signpost.telemetry:number1,name=Error}d 
"Error creating custodian recovery key: %@"
"Asking security to delete custodian recovery key for %@"
CustodianDeleteRecoveryKey
BEGIN [%lld]: CustodianDeleteRecoveryKey  enableTelemetry=YES 
END [%lld] %fs: CustodianDeleteRecoveryKey  Error=%{public,signpost.telemetry:number1,name=Error}d 
"Error deleting custodian recovery key: %@"
"Deleted custodian recovery key: for %@"
"CDPCustodianController init is missing required dsid. Unable to process preflight request"
"Error validating custodian recovery key: %@"
"Custodian recovery key is valid for: %@"
"Generating Inheritance access key for CDP account. Beneficiary: %@"
"Generating Inheritance access key for non-CDP account - not saved on OT. Beneficiary: %@"
"Creating the access key for beneficiary: %@"
"Unable to create the access key without access string or data."
"Attempting to recover Octagon with the inheritance key."
"Error validating inheritance key: %@"
"Inheritance key valid for beneficiary: %@"
Walrus: Fetching status.
"XPC Error while fetching walrus status."
"Failed to fetch walrus status with error: %@"
"Walrus status - %lu"
"Failed to fetch walrus status with error - %@"
Walrus: Updating status
"XPC Error while updating walrus status."
"Failed to update walrus status with error %@"
"Walrus status update has been completed successfully."
Walrus: Fetch PCS Identities
"XPC Error while fetching PCS identities - %@"
"Failed to fetch PCS identities for services %@ with error: %@"
Web access: Fetching status.
"XPC Error while fetching web access status."
"Failed to fetch web access status with error: %@"
"Web access status - %lu"
"Failed to fetch web access status with error - %@"
Web access: Updating status
"XPC Error while updating web access status."
"Failed to update web access status with error %@"
"Web access status update has been completed successfully."
"RPD Probation: date from accountProperties: %@"
"RPD Probation: Set date in accountProperties: %@"
"Failed to set RPD Probation date: %@"
"RPD Probation: Elapsed time since user first exhausted all recovery options: %f"
"RPD Probation period: %f secs"
"RPD Probation: Can show RPD option: %f >= %f = %@"
"Attempted to present CDPUI with incomplete uiProvider: %s"
LocalSecretCollect
BEGIN [%lld]: LocalSecretCollect  enableTelemetry=YES 
END [%lld] %fs: LocalSecretCollect 
"CDPUIProvider does not respond to promptForLocalSecretWithCompletion, falling back to handler: %s"
"CDPUIProvider does not respond to promptForLocalSecretWithHandler either: %s"
"Warning: UI provider %@ does not respond to selector cdpContext:promptForRemoteSecretWithDevices:offeringRemoteApproval:validator:"
"Warning: UI provider %@ does not respond to selectors cdpRecoveryFlowContext:promptForRemoteSecretWithDevices:validator: and cdpContext:promptForRemoteSecretWithDevices:offeringRemoteApproval:validator:"
"Bailed out of interactive authentication. Preventing appearance of prompt because network is unreachable."
"Attempting to show error: %@"
"Warning: UI provider %@ does not respond to selector cdpContext:showError:withCompletion:"
"Warning: UI provider %@ does not respond to selector cdpContext:showError:withDefaultIndex:withCompletion:"
cdp: post follow up
"XPC Error posting a follow up: %@"
"Posted follow ups (%@) with error: %@"
cdp: clear follow up
"XPC Error cleaning up follow ups: %@"
"Cleared follow ups (%@) with error: %@"
"Invalidating connection"
"iCloud Env missing, bad things to come..."
"Auth Token missing, bad things to come..."
"Base URL missing, bad things to come..."
"Creating the access code from data."
"Creating the access code from string."
"Error creating key from access key string. Error - %@"
"Already observing walrus state change notification."
"Starting to observe walrus state change notification."
"Starting to observe OT peer change notification."
"Not yet started to observe walrus state change notification."
"Stopping to observe walrus state change notification."
"Stopping to observe OT peer change notification."
"Walrus state change notification received, posting local notification."
@"%{public}@ Found PCS view"
@"%{public}@ Found SOS view"
@"%{public}@ All view viability checks passed"
"Already observing web access state change notification."
"Starting to observe web access state change notification."
"Not yet started to observe web access state change notification."
"Stopping to observe web access state change notification."
"Web access state change notification received, posting local notification."
"Already sent CDPCA event %@"
"Sending report %@ (time: %f), data - %@"
"Attempting to validate secret using validator %@"
"Validator returned response of isValid=%i canRetry=%i error=%@ ... dispatching completion block on to main queue"
"Invoking validateSecret:devices:type:withCompletion: completion block on the main queue"
"Attempting to validate recovery key using validator %@"
"Invoking validateRecoveryKey:withCompletion: completion block on the main queue"
"Attempting to validate custodian recovery info using validator %@"
"InvokingvalidateCustodianRecoveryInfo:withCompletion: completion block on the main queue"
"Requesting approval from another device..."
"Cancelling request for remote approval..."
"Requesting reset of CDP account state..."
"Cancelling validation with error %@"
"Supported Escape Offers: %lu"
cdp/saveTermsAcceptance
"Saving of terms acceptance completed with error %@"
"XPC Error while attempting to save terms info: %@"
cdp/fetchTermsAcceptance
"Fetched terms acceptance completed with error %@ and result %@"
"XPC Error while attempting to fetch terms info: %@"
DataPrivacy: checking status of complete data privacy
"XPC Error while checking status for complete data privacy."
"Error getting status for complete data privacy - %@"
"Status for complete data privacy - %lu"
DataPrivacy: Update data privacy status
"XPC Error while updating data privacy."
"User declined losing access to devices."
"Error updating data privacy state without user's consent on devices that lose access."
"Error updating data privacy status - %@"
"Complete data privacy update."
cdp: Keychain Status Check
"XPC Error while checking if user-visible keychain sync is enabled: %@"
"Checking user-visible keychain sync status"
"User-visible keychain sync status is %@"
cdp: Keychain Status Change
"Setting user-visible keychain sync to %@"
"User-visibile keychain sync set to %@"
"Failed to set user-visibile keychain sync set to %@: %@"
cdp: Remove Legacy Peers
"XPC Error while remove non-view-aware peers: %@"
"Removing non-view-aware peers from the circle"
"Successfully removed non-view-aware peers from the circle"
"Failed to remove non-view-aware peers from the circle: %@"
"Returning NO for 'isSilentEscrowRecordViabilityRepairEnabled' when running on non-internal build"
"Trying to determine manatee availability for altDSID: %@"
"Checking security eligibility state..."
"We are HSA2, but Security is not ready, waiting for Security state resolution..."
"We are no longer HSA2, reporting not eligible"
"Processing circle status change to calculate manatee availability"
"Processed circle state change event"
"Processing circle view change event"
"Processed circle view change event"
"All systems are not go... Manatee not available"
"All systems go!!! Manatee available"
"Sending %s, value: %@"
cdp/manatee-availability
"Requesting manatee state..."
"Manatee is not available, error: %@"
"Manatee is available"
cdp/statemachine-handle
HandleCloudDataProtectionState
BEGIN [%lld]: HandleCloudDataProtectionState  enableTelemetry=YES 
END [%lld] %fs: HandleCloudDataProtectionState  Error=%{public,signpost.telemetry:number1,name=Error}d 
"State machine completed shouldCompleteSignIn=%@ cloudDataProtectionEnabled=%@ error=%@"
"XPC Error while starting state machine: %@"
"Requesting start of CDP state machine..."
cdp/statemachine-repair
RepairCloudDataProtectionState
BEGIN [%lld]: RepairCloudDataProtectionState  enableTelemetry=YES 
END [%lld] %fs: RepairCloudDataProtectionState  Error=%{public,signpost.telemetry:number1,name=Error}d 
"State machine repair completed didRepair=%@ error=%@"
"XPC Error while repairing state: %@"
"Requesting repair of CDP state..."
"XPC Error while accepting sharing session: %@"
"Requesting start of accepting sharing session..."
"Requesting start of accepting sharing session, skipping escrow fetches..."
"Requesting repair and synchronization of CDP state with Squirrel..."
"Requesting repair of CDP state with Squirrel..."
"XPC Error while attempting to escrow preRecord: %@"
"Informing daemon of attempting to escrow preRecord..."
"XPC Error while updating local secret: %@"
"Informing daemon of local secret change..."
"Attempting to finish offline local secret change..."
"XPC Error while finishing Cyrus secure terms flow: %@"
"Attempting to finish secure terms flow for %@ with type %ld"
cdp: repair state check
"XPC Error while checking recovery existence: %@"
cdp/should-perform-repair
"Failed to get remote object proxy for CDP daemon: %@"
"Requesting to check if repair should be performed on the CDP state"
cdp/generate-escrow-record-report
 enableTelemetry=YES  UseCache=%{public,signpost.telemetry:number2,name=UseCache}d 
GenerateEscrowRecordReport
BEGIN [%lld]: GenerateEscrowRecordReport  enableTelemetry=YES  UseCache=%{public,signpost.telemetry:number2,name=UseCache}d 
END [%lld] %fs: GenerateEscrowRecordReport  Error=%{public,signpost.telemetry:number1,name=Error}d 
"Failed to generate escrow record report: %{public}@"
"Generating escrow record report (usingCache: %{BOOL}d)"
cdp/generate-rk
"XPC Error while generating a recovery key: %@"
"Attempting to generate a new recovery key"
cdp/delete-rk
"XPC Error while deleting a recovery key: %@"
"Attempting to delete a recovery key"
cdp/verify-rk
"XPC Error while verifying a recovery key: %@"
"Attempting to verify the recovery key"
"XPC Error while fetching recovery key state: %@"
cdp/rk-availability
"Attempting to fetch recovery key state"
"Failed to fetch recovery key availability with error %@"
"Recovery key availability - %@"
"XPC Error while fetching recovery key availability."
"Handling URL action: %@"
cdp/fetch-escrow-devices
"Requesting list of escrow-record associated devices"
cdp/device-escrow-record-recoverable
"Checking for the current device's ecrow record being recoverable"
cdp/synchronous-device-escrow-record-recoverable
"%@: Failed to find recoverable escrow record for current device with error (%@)"
"%@: Checking current device's escrow record recoverability"
cdp/should-perform-silent-escrow-record-repair-sync
ShouldPerformSilentEscrowRecordRepairSync
BEGIN [%lld]: ShouldPerformSilentEscrowRecordRepairSync  enableTelemetry=YES 
END [%lld] %fs: ShouldPerformSilentEscrowRecordRepairSync  Error=%{public,signpost.telemetry:number1,name=Error}d 
"Failed to check if escrow record repair is needed with error: %@"
"Escrow record repair is needed: %@"
"Synchronously checking if silent escrow record repair should be performed (usingCache: %@)"
cdp/should-perform-silent-escrow-record-repair-async
ShouldPerformSilentEscrowRecordRepairAsync
BEGIN [%lld]: ShouldPerformSilentEscrowRecordRepairAsync  enableTelemetry=YES 
END [%lld] %fs: ShouldPerformSilentEscrowRecordRepairAsync  Error=%{public,signpost.telemetry:number1,name=Error}d 
"Should perform silent escrow record repair: %@"
"Checking if silent escrow record repair should be performed (usingCache: %@)"
cdp/start-silent-escrow-record-repair
StartSilentEscrowRecordRepair
BEGIN [%lld]: StartSilentEscrowRecordRepair  enableTelemetry=YES 
END [%lld] %fs: StartSilentEscrowRecordRepair  Error=%{public,signpost.telemetry:number1,name=Error}d 
"Successfully started silent escrow record repair"
"Failed to start silent escrow record repair: %@"
"Requesting start of silent escrow record repair..."
cdp/perform-silent-escrow-record-repair
PerformSilentEscrowRecordRepair
BEGIN [%lld]: PerformSilentEscrowRecordRepair  enableTelemetry=YES 
END [%lld] %fs: PerformSilentEscrowRecordRepair  Error=%{public,signpost.telemetry:number1,name=Error}d 
"Successfully performed silent escrow record repair"
"Failed to perform silent escrow record repair: %@"
"Performing silent escrow record repair..."
cdp/update-last-silent-escrow-record-repair-attempt-date
"Successfully updated last silent escrow record repair attempt date to %@"
"Failed to update last silent escrow record repair attempt date: %@"
"Requesting update of silent escrow record repair attempt date to %@..."
cdp: recovery flow
"XPC Error while recovering data: %@"
"XPC Error while checking if the local device has a secret: %@"
"Checking if the local device has a secret"
"Local device DOES have a secret"
"Local device DOES NOT have a secret"
"Reporting current serial number: %@"
"Unable to check self process entitlements without SecTaskRef."
"Error when checking self process for entitlement %@. error:%@"
"Invalidating connection for controller %@"
"Daemon connection invalidated!"
"Daemon connection interrupted!"
"XPC Error from daemon: %@"
B16@?0^^{__CFError}8
com.apple.cdp.appleaccount.property
com.apple.cdp.appleaccount.property.last-modified-date
com.apple.cdp.appleaccount.property.is-escrow-repair-needed
silentEscrowRecordRepair
escrowProxyUrl
com.apple.Dataclass.Account
iCloudEnv
v16@?0@"NSError"8
ENABLED
DISABLED
v12@?0B8
v24@?0@"AKUserInformation"8@"NSError"16
v20@?0B8@"NSError"12
altDSID
kCDPStateRepair
kCDPOfflinePasscodeChange
kCDPRecoveryKeyRegenerate
kCDPUpgradeSetupBioMetrics
kCDPSecureTerms
kCDPConfirmExistingSecret
kWalrusCreatePasscode
_followUpType
_shouldNotify
_force
_repairType
_altDSID
<%@: %p - type=%@ shouldNotify=%@ force=%@>
Unknown
SignIn
Repair
UpdatePasscode
FinishPasscodeChange
ConfirmCyrusPasscode
RegenerateRK
NewRK
VerifyRK
_authenticationResults
_appleID
_password
_passwordEquivToken
_dsid
_isHSA2Account
_didUseSMSVerification
_cachedLocalSecret
_cachedLocalSecretType
__useSecureBackupCachedPassphrase
__alwaysCreateEscrowRecord
__skipEscrowFetches
__recoveryToken
_guestMode
_idmsRecovery
_idmsMasterKeyRecovery
_duplexSession
_resumeContext
_sharingChannel
_type
_isAttemptingBackupRestore
_findMyiPhoneUUID
_supportsSkipSignIn
_isFederatedAccount
_isBeneficiaryAccount
__ignoreLockAssertErrors
_custodianRecoveryInfo
_beneficiaryAccount
_beneficiaryWrappedKeyData
__supportsCustodianRecovery
_bundleID
__disableAsyncSecureBackupEnrollment
_mandatesRecoveryKey
CDPContext was missing DSID when CircleProxyImpl was initialized. Its OTClique was not created.
-[CDPCircleProxyImpl waitForUpdate]
v8@?0
v24@?0B8B12@"NSError"16
personID
v24@?0@"CDPContext"8@"NSError"16
v24@?0@"NSDictionary"8@"NSError"16
v24@?0@"OTCustodianRecoveryKey"8@"NSError"16
statusToSet
userAcceptedDevicesToLoseAccountAccess
devicesThatLoseAccountAccessOnEnable
v24@?0@"OTInheritanceKey"8@"NSError"16
com.apple.reminders
v24@?0Q8@"NSError"16
rpdProbationFirstSeenDate
en_US_POSIX
yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'
-[CDPStateUIProviderProxy cdpContext:promptForAdoptionOfMultipleICSC:]
-[CDPStateUIProviderProxy cdpContext:promptForICSCWithIsNumeric:numericLength:isRandom:validator:]
-[CDPStateUIProviderProxy cdpContext:promptForLocalSecretWithCompletion:]
v24@?0@"CDPLocalSecret"8@"NSError"16
-[CDPStateUIProviderProxy cdpContext:promptForLocalSecretWithHandler:]
-[CDPStateUIProviderProxy cdpContext:beginRemoteApprovalWithValidator:completion:]_block_invoke
-[CDPStateUIProviderProxy cdpContext:promptForInteractiveAuthenticationWithCompletion:]
v16@?0q8
-[CDPStateUIProviderProxy cdpContext:showResetCompletedAlertWithCompletion:]
No Records
Not Viable
Viable
iphone
IPHONE
ipad
IPAD
ipod touch
IPOD_TOUCH
macbook
MACBOOK
macbook pro
MACBOOK_PRO
mac pro
MAC_PRO
apple tv
apple watch
WATCH
DEVICE
_PASSWORD
_PASSCODE
<%@: %p - hasMID=%@ isBottled=%@ recordID=%@ name=%@ model=%@ platform=%@ date=%@ encodedMetadata=%@>
encodedMetadata
_localizedName
_model
_modelVersion
_modelClass
_platform
_recordID
_machineID
_recordDate
_hasRandomSecret
_hasNumericSecret
_numericSecretLength
_isUsingMultipleiCSC
_remainingAttempts
_serialNumber
_isCurrentDevice
recordInfo
_deviceColor
_enclosureColor
CDPStateError
CDPWalrusStateChangeNotification
_CDPWalrusStateChangeDarwinNotification
com.apple.security.octagon.peer-changed
ProtectedCloudStorage
SecureObjectSync
hasRecords
recordViability
tlkRecoveryViability
pcsRecoveryViability
sosViability
accountViability
deviceViability
CDPWebAccessStateChangeNotification
_CDPWebAccessStateChangeDarwinNotification
wasSuccess
errorDomain
errorCode
duration
__OSINSTALL_ENVIRONMENT
__AKSYNCBUBBLE
<%@: %p> EventName: [%@], ReportData: %@
v16@?0Q8
v24@?0@"NSString"8@"NSError"16
com.apple.cdp
core
signpost
v24@?0@"CDPUpdateDataPrivacyContext"8@"NSError"16
com.apple.CoreCDP.BackupRecovery
backupRecoveryResult
backupRecoveryThroughRemoteSecretDidSucceed
backupRecoveryThroughRemoteSecretDidSucceedWithoutLocalSecret
backupRecoveryThroughRemoteSecretDidCancel
backupRecoveryThroughRemoteSecretDidReset
backupRecoveryThroughRemoteSecretDidFail
joinMethod
attemptedMethods
availableMethods
escrowDeviceCount
callingProcessBundleID
Circle reset was requested.... Resetting account CDP State...
A remote secret or recovery key is required to attempt backup recovery (use -remote <secret> OR -mk <recoveryKey>)
Remote secret is invalid... cancelling prompt/validation
Recovery key is invalid... cancelling prompt/validation
An iCSC is required to attempt backup recovery (use -icsc <iCSC>)
ICSC is invalid... cancelling prompt/validation
com.apple.CoreCDP
CoreCDP
MultiUserManatee
SilentEscrowRecordViabilityRepair
_context
_hasPeersForRemoteApproval
_isWalrusEnabled
_rpdProbationDuration
com.apple.cdp.cloudDataProtectionEnabled
com.apple.cdp.manatee-availability
com.apple.cdp.manatee-state
v24@?0@"CDPEscrowRecordReport"8@"NSError"16
command
rejoin
offline-secret-change
regenerate
v24@?0@"NSArray"8@"NSError"16
findMyPhoneIdentity
marketing-name
HWModelStr
ProductType
ProductVersion
BuildVersion
DeviceName
SerialNumber
UserAssignedDeviceName
com.apple.managedconfiguration.profiled-access
DeviceClassNumber
CDPDLocalDeviceSecretProxyImpl
/System/Library/PrivateFrameworks/CoreCDPInternal.framework/CoreCDPInternal
com.apple.cdp.daemon
_validatedSecret
_secretType
_wrappedRKC
_wrappingKey
_custodianUUID
<%@: %p> for UUID: %@
CDPProtectedCloudStorageProxyImpl
CDPProtectedCloudStorageProxy
NSObject
CDPAccountRepresentation
CDPDeviceProtocol
CDPStateUIProviderInternal
CDPLocalDeviceSecretHandlerProtocol
CDPRemoteDeviceSecretValidatorProtocol
CDPRecoveryKeyValidator
CDPAuthProviderInternal
CDPDaemonProtocol
CDPFollowUpContext
NSSecureCoding
NSCoding
HSA2
CDPContext
NSCopying
Account
CDPCircleProxyImpl
CDPDCircleProxy
CDPRecoveryKeySecretValidatorProxyImpl
CDPAccount
MultiUserManatee
CDPAuthProviderProxy
CDPCustodianRecoveryKeyController
CDPUpdateDataPrivacyContext
CDPInheritanceTrustController
CDPWalrusStateController
CDPWalrusStatusProvider
CDPWebAccessStateController
CDPWebAccessStatusUpdater
CDPWebAccessStatusProvider
Probation
CDPStateUIProviderProxy
CDPWalrusStateCache
CDPFollowUpController
CDPPCSUtilities
CDPLocalizedStringBuilder
CDPDevice
CoreCDP
CDPWalrusNotificationHandler
CDPEscrowRecordViability
CDPInitUnavailable
CDPEscrowRecordReport
CDPWebAccessNotificationHandler
CDPCAReporter
CDPRemoteDeviceSecretValidator
CDPWebAccessStateCache
CDPLocalDeviceSecretHandler
CDPRecoveryKeyValidatorProxyImpl
CDPTermsInfoBackupController
CDPDataPrivacyController
CDPCABackupRecoveryReporter
CDPKeychainSync
CDPToolFakeUIProvider
CDPStateUIProvider
CDPRecoveryKeyUIProvider
CDPUtilities
CDPRecoveryFlowContext
CDPManateeStateController
CDPDAuthListener
CDPDCircleListener
CDPStateController
CDPRecoveryController
CDPLocalDeviceSecretProxyImpl
CDPLocalDeviceSecretProxy
CDPLocalDevice
CDPController
CDPDaemonConnection
CDPLocalSecret
CDPCustodianRecoveryInfo
defaultStore
propertiesForDataclass:
claimTokenData
setClasses:forSelector:argumentIndex:ofReply:
peerDeviceNamesByPeerID:
UUIDString
mainBundle
createCustodianRecoveryKey:uuid:reply:
accountUserKeyAvailable
setTimeZone:
hasRecordViability
claimTokenString
peersHaveViewsEnabled:error:
createInheritanceKey:uuid:reply:
setUseCachedAccountStatus:
reachabilityForInternetConnection
initWithUUIDString:
tryUserCredentialsAndDSID:password:error:
isMainThread
mutableCopy
credentialForAccount:error:
addEntriesFromDictionary:
setDateFormat:
credentialItemForKey:
beneficiaryID
cliqueMemberIdentifier
allObjects
initWithWrappedKey:wrappingKey:uuid:error:
performedFailureCDPStateMachineRun:error:reply:
deviceIsAudioAccessory
resetProtectedData:error:
code
setUserCredentialsAndDSID:password:error:
recoverOctagonUsingCustodianRecoveryKey:custodianRecoveryKey:reply:
unarchivedDictionaryWithKeysOfClasses:objectsOfClasses:fromData:error:
performedSuccessfulCDPStateMachineRun:reply:
allocWithZone:
initWithWrappedKeyData:wrappingKeyData:uuid:error:
boolValue
currentReachabilityStatus
numberWithBool:
waitForOctagonUpgrade:
resume
recoverOctagonUsingInheritanceKey:inheritanceKey:reply:
initWithWrappedKeyData:wrappingKeyString:uuid:error:
unlock
numberWithDouble:
compare:
altDSIDForAccount:
waitForPriorityViewKeychainDataRecovery:
setInterface:forSelector:argumentIndex:ofReply:
platformSupportsSOS
aa_altDSID
unsignedIntValue
dictionary
numberWithInt:
generateInheritanceKey:uuid:reply:
aa_appleAccountWithAltDSID:
dictionaryWithCapacity:
unsignedIntegerValue
setInterruptionHandler:
saveAccount:withCompletionHandler:
integerValue
numberWithInteger:
refresh
bundleForClass:
setWithArray:
postNotificationName:object:
unsignedLongValue
interfaceWithProtocol:
dictionaryWithObjects:forKeys:count:
aa_appleAccountWithPersonID:
setInvalidationHandler:
dataUsingEncoding:
numberWithLongLong:
initWithBase64EncodedString:options:
wrappedKey
setWithObject:
aa_appleAccountWithUsername:
domain
dataclassProperties
bundleIdentifier
postNotificationName:object:userInfo:
numberWithUnsignedInteger:
initWithBeneficiairyIdentifier:
setWithObjects:
containsString:
wrappedKeyData
aa_authToken
remoteObjectProxyWithErrorHandler:
setLocale:
postNotificationName:object:userInfo:deliverImmediately:
date
stringByAppendingString:
joinAfterRestore:
removeCustodianRecoveryKey:custodianRecoveryKeyUUID:reply:
numberWithUnsignedLongLong:
wrappedKeyString
setWrappedKeyData:
aa_firstName
securityLevelForAccount:
objectForKey:
dateFromString:
stringFromDate:
leaveClique:
removeFriendsInClique:error:
setWrappedKeyString:
aa_fullName
isBeneficiaryForAccount:
encodeBool:forKey:
preflightRecoverOctagonUsingCustodianRecoveryKey:custodianRecoveryKey:reply:
dateWithTimeIntervalSinceNow:
stringValue
archivedDataWithRootObject:requiringSecureCoding:error:
removeInheritanceKey:inheritanceKeyUUID:reply:
length
aa_personID
setWrappingKeyData:
preflightRecoverOctagonUsingInheritanceKey:inheritanceKey:reply:
setAccountProperty:forKey:
decodeBoolForKey:
encodeFloat:forKey:
stringWithFormat:
arrayWithObjects:count:
wrappingKeyData
setWrappingKeyString:
aa_primaryAppleAccount
encodeInteger:forKey:
isEqualToString:
initWithContextData:
decodeFloatForKey:
removeObjectForKey:
stringWithUTF8String:
wrappingKeyString
encodeObject:forKey:
setOsVersion:
setAppProvidedContext:
decodeIntegerForKey:
copy
setupPairingChannelAsAcceptor:
localizedStringForKey:value:table:
setPasswordEquivalentToken:
errorWithDomain:code:userInfo:
userInfo
decodeObjectOfClass:forKey:
passwordResetTokenBackupForAccount:
copyViewUnawarePeerInfo:
initWithListenerEndpoint:
setupPairingChannelAsInitiator:
lock
decodeObjectOfClasses:forKey:
setAuthenticationAppleID:
setRemoteObjectInterface:
initWithLocaleIdentifier:
longLongValue
synchronousRemoteObjectProxyWithErrorHandler:
fetchCliqueStatus:
accountProperties
uuid
timeIntervalSinceDate:
setClaimTokenData:
defaultCenter
authKitAccountWithAltDSID:
count
initWithMachServiceName:options:
lowercaseString
accountPropertyForKey:
fetchCliqueStatus:error:
timeZoneForSecondsFromGMT:
setClaimTokenString:
countByEnumeratingWithState:objects:count:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
pcsIdentityCreateWithInfo:error:
pcsIdentitySetupWithInfo:error:
pcsIdentitySetIsInICDPNetwork:options:error:
pcsIdentitySetIsInICDPLocal:error:
pcsIdentitySetCompanionInCircle:error:
pcsIdentityMigrateToiCDPWithInfo:error:
pcsSynchronizeKeysWithInfo:error:
pcsRestoreLocalBackup:error:
isWalrusEnabledWithOptions:error:
setWalrusEnabled:accountIdentifier:options:error:
_performPCSBlock:error:
init
isSilentEscrowRecordRepairEnabledForAccount:
getUserInformationWithContext:completion:
silentEscrowRecordRepairEnabled
representationForAltDSID:
representationForAccount:
representationForPrimaryAccount
initWithAltDSID:accountStore:accountManager:
initWithAltDSID:
initWithAccount:
username
DSID
authenticationToken
escrowURLString
iCloudEnvironment
firstName
fullName
stashedPRK
securityLevel
isBeneficiary
isICDPEnabled
isSilentEscrowRecordRepairEnabled
shouldPerformSilentEscrowRecordRepair
generatedContext
isICDPEnabledByCheckingWithServer:
silentEscrowRecordRepairEnabledWithCompletion:
_cachedPropertyValueOfClass:forKey:valueProducer:
_cachedPropertyValueOfClass:forKey:valueProducer:saveHandler:
_cachedPropertyValueOfClass:forKey:valueProducer:checkForStale:account:
_cachedPropertyValueOfClass:forKey:valueProducer:checkForStale:account:saveHandler:
_cachedPropertyValueOfClass:forKey:valueProducer:staleModifiedDate:account:saveHandler:
_cachedPropertyValueOfClass:forKey:staleModifiedDate:account:isStale:
_cachePropertyValue:forKey:lastModifiedDate:account:saveHandler:
_serializedPropertyDictionaryWithValue:lastModifiedDate:error:
_deserializedPropertyDictionaryForData:withPropertyValueOfClass:error:
appleAccount
authKitAccount
altDSID
accountStore
setAccountStore:
accountManager
setAccountManager:
.cxx_destruct
_appleAccount
_authKitAccount
_altDSID
_accountStore
_accountManager
T@"ACAccountStore",&,N,V_accountStore
T@"AKAccountManager",&,N,V_accountManager
T@"ACAccount",R,N,V_appleAccount
T@"ACAccount",R,N,V_authKitAccount
T@"NSString",R,C,N
T@"NSString",R,C,N,V_altDSID
TQ,R,N
TB,R,N
T@"CDPContext",R,C,N
localSecretType
prevailingLocalSecretType
hasMixedSecretType
cdpContext:promptForLocalSecretWithCompletion:
cdpContext:promptForLocalSecretWithHandler:
cdpContext:beginRemoteApprovalWithValidator:completion:
cdpContext:promptForRemoteSecretWithDevices:offeringRemoteApproval:validator:
cdpRecoveryFlowContext:promptForRemoteSecretWithDevices:validator:
cdpContext:promptForICSCWithIsNumeric:numericLength:isRandom:validator:
cdpContext:promptForAdoptionOfMultipleICSC:
cdpContext:promptForInteractiveAuthenticationWithCompletion:
cdpContext:showError:withCompletion:
cdpContext:showError:withDefaultIndex:withCompletion:
cdpContext:presentRecoveryKeyWithValidator:completion:
cdpContext:promptForRecoveryKeyWithValidator:completion:
cdpContext:promptForRecoveryKeyWithSecretValidator:completion:
cdpContext:promptForBeneficiaryAccessKeyWithCompletion:
cdpContext:showResetCompletedAlertWithCompletion:
userDidEnterValidSecret:type:
userDidCancelWithError:
validateSecret:devices:type:withCompletion:
validateRecoveryKey:withCompletion:
cancelValidationWithError:
approveFromAnotherDeviceWithCompletion:
cancelApproveFromAnotherDevice
resetAccountCDPState
resetAccountCDPStateAndSetSecret:
supportedEscapeOfferMaskCompletion:
validateCustodianRecoveryInfo:withCompletion:
supportedEscapeOfferMask
setSupportedEscapeOfferMask:
TQ,N
confirmRecoveryKey:completion:
generateRecoveryKey:
generateRecoveryKeyWithError:
confirmRecoveryKey:error:
cdpContext:performSilentRecoveryTokenRenewal:
cdpContext:verifyMasterKey:completion:
handleCloudDataProtectionStateWithContext:uiProvider:completion:
startCircleApplicationApprovalServerWithContext:completion:
repairCloudDataProtectionStateWithContext:uiProvider:completion:
shouldPerformRepairForContext:forceFetch:completion:
recoverAndSynchronizeSquirrelWithContext:uiProvider:completion:
recoverSquirrelWithContext:uiProvider:completion:
localSecretChangedTo:secretType:context:uiProvider:completion:
attemptToEscrowPreRecord:context:completion:
finishOfflineLocalSecretChangeWithContext:uiProvider:completion:
verifyRecoveryKeyWithContext:uiProvider:completion:
finishCyrusFlowAfterTermsAgreementWithContext:uiProvider:completion:
generateNewRecoveryKeyWithContext:uiProvider:completion:
deleteRecoveryKeyWithContext:uiProvider:completion:
generateRandomRecoveryKeyWithContext:completion:
isRecoveryKeyAvailableWithCompletion:
isICDPEnabledForDSID:checkWithServer:completion:
hasLocalSecretWithCompletion:
isUserVisibleKeychainSyncEnabledWithCompletion:
setUserVisibleKeychainSyncEnabled:withCompletion:
removeNonViewAwarePeersFromCircleWithContext:completion:
performRecoveryWithContext:uiProvider:authProvider:completion:
clearFollowUpWithContext:completion:
postFollowUpWithContext:completion:
statusForDataPrivacyWithCompletion:
updateDataPrivacyWithContext:completion:
fetchEscrowRecordDevicesWithContext:usingCache:completion:
deviceEscrowRecordRecoverableWithContext:completion:
walrusStatusWithContext:completion:
broadcastWalrusStateChange
updateWalrusStatus:completion:
webAccessStatusWithCompletion:
updateWebAccessStatus:completion:
pcsKeysForServices:completion:
saveTermsAcceptance:completion:
fetchTermsAcceptanceForAccount:completion:
shouldPerformSilentEscrowRecordRepairWithContext:usingCache:completion:
startSilentEscrowRecordRepairWithContext:completion:
performSilentEscrowRecordRepairWithContext:completion:
updateLastSilentEscrowRecordRepairAttemptDate:context:completion:
generateEscrowRecordStatusReportForContext:usingCache:withCompletion:
isOTEnabledForContext:completion:
contextWithType:
_contextWithType:cdpContext:
contextForOfflinePasscodeChange
contextForRecoveryKeyRepair
contextForSettingUpBiometrics
contextForSecureTerms
contextForConfirmExistingSecret
contextForWalrusCreatePasscodeWithCDPContext:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
shouldNotify
setShouldNotify:
force
setForce:
setAltDSID:
followUpType
setFollowUpType:
_repairType
_shouldNotify
_force
_followUpType
T@"NSString",C,N,V_followUpType
TB,N,V_shouldNotify
TB,N,V_force
T@"NSString",C,N,V_altDSID
repairType
setRepairType:
contextForStateRepair
copyWithZone:
initWithAuthenticationResults:
purgeResumeData
desiresAllRecords
updateWithAuthenticationResults:
augmentWithCredentialsFromContext:
cliqueConfiguration
isPiggybackingRecovery
isTTSURecovery
setValidEscrowDeviceCount:
analyticsReporter
authenticationResults
setAuthenticationResults:
appleID
setAppleID:
password
setPassword:
passwordEquivToken
setPasswordEquivToken:
dsid
setDsid:
isHSA2Account
setIsHSA2Account:
isFederatedAccount
setIsFederatedAccount:
isBeneficiaryAccount
setIsBeneficiaryAccount:
didUseSMSVerification
setDidUseSMSVerification:
type
setType:
isAttemptingBackupRestore
setIsAttemptingBackupRestore:
cachedLocalSecret
setCachedLocalSecret:
cachedLocalSecretType
setCachedLocalSecretType:
guestMode
setGuestMode:
findMyiPhoneUUID
setFindMyiPhoneUUID:
supportsSkipSignIn
setSupportsSkipSignIn:
beneficiaryIdentifier
setBeneficiaryIdentifier:
_authProvider
set_authProvider:
duplexSession
setDuplexSession:
resumeContext
setResumeContext:
failSignInOnError
setFailSignInOnError:
validEscrowDeviceCount
totalRecoveryAttempts
setTotalRecoveryAttempts:
maxDeviceRecoveryAttempts
setMaxDeviceRecoveryAttempts:
endpoint
setEndpoint:
backupActivity
setBackupActivity:
_supportsCustodianRecovery
set_supportsCustodianRecovery:
sharingChannel
setSharingChannel:
_disableAsyncSecureBackupEnrollment
set_disableAsyncSecureBackupEnrollment:
_useSecureBackupCachedPassphrase
set_useSecureBackupCachedPassphrase:
_alwaysCreateEscrowRecord
set_alwaysCreateEscrowRecord:
_skipEscrowFetches
set_skipEscrowFetches:
_recoveryToken
set_recoveryToken:
_ignoreLockAssertErrors
set_ignoreLockAssertErrors:
idmsRecovery
setIdmsRecovery:
idmsMasterKeyRecovery
setIdmsMasterKeyRecovery:
mandatesRecoveryKey
setMandatesRecoveryKey:
custodianRecoveryInfo
setCustodianRecoveryInfo:
beneficiaryWrappedKeyData
setBeneficiaryWrappedKeyData:
bundleID
setBundleID:
_analyticsReporter
_isHSA2Account
_isFederatedAccount
_isBeneficiaryAccount
_didUseSMSVerification
_isAttemptingBackupRestore
_guestMode
_supportsSkipSignIn
_failSignInOnError
__supportsCustodianRecovery
__disableAsyncSecureBackupEnrollment
__useSecureBackupCachedPassphrase
__alwaysCreateEscrowRecord
__skipEscrowFetches
__ignoreLockAssertErrors
_idmsRecovery
_idmsMasterKeyRecovery
_mandatesRecoveryKey
_endpoint
_backupActivity
_authenticationResults
_appleID
_password
_passwordEquivToken
_dsid
_type
_cachedLocalSecret
_cachedLocalSecretType
_findMyiPhoneUUID
_beneficiaryIdentifier
__authProvider
_duplexSession
_resumeContext
_validEscrowDeviceCount
_totalRecoveryAttempts
_maxDeviceRecoveryAttempts
_sharingChannel
__recoveryToken
_custodianRecoveryInfo
_beneficiaryWrappedKeyData
_bundleID
T@"<CDPAuthProviderInternal>",&,N,V__authProvider
T@"KCAESGCMDuplexSession",&,N,V_duplexSession
T@"AKCircleRequestContext",&,N,V_resumeContext
TB,N,V_failSignInOnError
Tq,N,V_validEscrowDeviceCount
Tq,N,V_totalRecoveryAttempts
Tq,N,V_maxDeviceRecoveryAttempts
T@"CDPCABackupRecoveryReporter",R,N
TI,N,V_endpoint
TI,N,V_backupActivity
TB,N,V__supportsCustodianRecovery
T@"CUMessageSession",&,N,V_sharingChannel
TB,N,V__disableAsyncSecureBackupEnrollment
TB,N,V__useSecureBackupCachedPassphrase
TB,N,V__alwaysCreateEscrowRecord
TB,N,V__skipEscrowFetches
T@"NSString",C,N,V__recoveryToken
TB,N,V__ignoreLockAssertErrors
TB,N,V_idmsRecovery
TB,N,V_idmsMasterKeyRecovery
TB,N,V_mandatesRecoveryKey
Tq,N,V_type
T@"CDPCustodianRecoveryInfo",&,N,V_custodianRecoveryInfo
T@"NSData",&,N,V_beneficiaryWrappedKeyData
T@"NSString",C,N,V_bundleID
T@"NSDictionary",C,N,V_authenticationResults
T@"NSString",C,N,V_appleID
T@"NSString",C,N,V_password
T@"NSString",C,N,V_passwordEquivToken
T@"NSNumber",C,N,V_dsid
TB,N,V_isHSA2Account
TB,N,V_isFederatedAccount
TB,N,V_isBeneficiaryAccount
TB,N,V_didUseSMSVerification
TB,N,V_isAttemptingBackupRestore
T@"NSString",C,N,V_cachedLocalSecret
TQ,N,V_cachedLocalSecretType
TB,N,V_guestMode
T@"NSString",C,V_findMyiPhoneUUID
TB,V_supportsSkipSignIn
T@"NSUUID",C,N,V_beneficiaryIdentifier
preflightContext:
combinedCircleStatus:
combinedCachedCircleStatus:
cachedCliqueStatus:
nonCachedSOSCircleStatus:
cachedSOSCircleStatus:
peerId
peerDeviceNamesByPeerID
didJoinCircleAfterRecovery:
generateRecoveryKeyWithInfo:error:
generateVerifierWithRecoveryKey:error:
synchronizeCircleViews
removeThisDeviceFromCircle:
requestToJoinCircle:
requestToJoinCircleAfterRestore:
requestToResetProtectedData:
fetchUserControllableViewsSyncingEnabled:
anyPeerHasEnabledViewsInSet:error:
setViewsWithEnableSet:disableSet:
setUserControllableViewsSyncStatus:error:
hasNonViewAwarePeers
removeNonViewAwarePeers:
isLastBackupMakingPeer:
canAuthenticate
registerCredentials
registerCredentialsIfMissing
tryRegisteringCredentials
pairingChannelInitiator
pairingChannelAcceptor
waitForUpdate
reportSuccess
reportFailure:
recoverOctagonUsingCustodianInfo:completion:
cdpContext
T@"CDPContext",R,N
initWithContext:
initWithContext:clique:
contextType
cdpStatusFromSOS:
cdpStatusFromOT:
_cliqueStatus:
_authenticatedCliqueStatus:
sos_circleStatus:
_sos_authenticatedCircleStatus:
_sos_circleStatus:
waitForInitialSync:
_registerCredentialsOnlyIfNeeded:
_pairingChannelContext
_clique
_cdpContext
T@"CDPContext",R,N,V_cdpContext
initWithRemoteObject:
_validator
TQ,N,VsupportedEscapeOfferMask
isICDPEnabledForDSID:
isICDPEnabledForDSID:checkWithServer:
sharedInstance
saveVerifiedAccount:error:
isOTEnabledForContext:
primaryAccountUsername
primaryAccountDSID
primaryAccountAltDSID
primaryAccountSecurityLevel
primaryAccountIsBeneficiary
authToken
escrowURL
iCloudEnv
contextForPrimaryAccount
primaryAccountFirstName
primaryAccountFullName
primaryAppleAccount
primaryAuthKitAccount
primaryAccountStashedPRK
primaryAccountNeedsEscrowRecordRepair
_authKitAccountWith:
checkIfAltDSIDIsBeneficiary:
appleAccountForAltDSID:
personIDForAltDSID:
altDSIDForPersonID:
contextForAccountWithAltDSID:
isHSA2Enabled:
cdpContextForUsername:
proxyWithAuthProvider:
createRecoveryKeyWithContext:forUUID:completion:
deleteRecoveryKeyWithContext:forUUID:completion:
validateRecoveryKey:withContext:completion:
initWithStatusToUpdate:
statusToSet
setStatusToSet:
userAcceptedDevicesToLoseAccountAccess
setUserAcceptedDevicesToLoseAccountAccess:
devicesThatLoseAccountAccessOnEnable
setDevicesThatLoseAccountAccessOnEnable:
_userAcceptedDevicesToLoseAccountAccess
_statusToSet
_devicesThatLoseAccountAccessOnEnable
TQ,N,V_statusToSet
TB,N,V_userAcceptedDevicesToLoseAccountAccess
T@"NSArray",&,N,V_devicesThatLoseAccountAccessOnEnable
createInheritanceKeyWithContext:completion:
recoverOctagonWithContext:inheritanceKey:completion:
isInheritanceAccessKeyValid:
deleteInheritanceAccessKeyWithContext:completion:
validateAccessKey:withContext:completion:
walrusStatusWithCompletion:
walrusStatus:
_context
webAccessStatus:
rpdProbationFirstSeenDate
setRpdProbationFirstSeenDate:
_serverFriendlyDateFormatter
rpdProbationIsInEffectForDuration:
T@"NSDate",&,N
cdpContext:beginRemoteApprovalWithValidator:
initWithUIProvider:
uiProvider
setUiProvider:
_uiProvider
T@"<CDPStateUIProvider>",&,N,V_uiProvider
walrusStatus
setWalrusStatus:
isValid
setIsValid:
_isValid
_walrusStatus
TQ,V_walrusStatus
TB,V_isValid
dealloc
postFollowUpWithContext:error:
clearFollowUpWithContext:error:
invalidate
_daemonConn
setupDictionaryWithContext:
_pcsConfigForPrimaryAccount
builderForKey:
builderForKey:inTable:
addDeviceClass:
addUnqualifiedDeviceClass:
addSecretType:
localizedString
currentKey
_key
_table
initFromAccessKey:
accessCode
T@"AKInheritanceAccessKey",R,N
localizedName
setLocalizedName:
model
setModel:
modelVersion
setModelVersion:
modelClass
setModelClass:
platform
setPlatform:
recordID
setRecordID:
machineID
setMachineID:
recordDate
setRecordDate:
hasRandomSecret
setHasRandomSecret:
hasNumericSecret
setHasNumericSecret:
numericSecretLength
setNumericSecretLength:
isUsingMultipleiCSC
setIsUsingMultipleiCSC:
remainingAttempts
setRemainingAttempts:
serialNumber
setSerialNumber:
isCurrentDevice
setIsCurrentDevice:
deviceColor
setDeviceColor:
enclosureColor
setEnclosureColor:
localizedDescription
setLocalizedDescription:
recoveryStatus
setRecoveryStatus:
coolOffPeriod
setCoolOffPeriod:
recordInfo
setRecordInfo:
record
setRecord:
simplePublicKey
setSimplePublicKey:
_localizedName
_model
_modelVersion
_modelClass
_platform
_recordID
_machineID
_simplePublicKey
_recordDate
_recordInfo
_record
_hasRandomSecret
_hasNumericSecret
_numericSecretLength
_isUsingMultipleiCSC
_remainingAttempts
_deviceColor
_enclosureColor
_serialNumber
_isCurrentDevice
_localizedDescription
_recoveryStatus
_coolOffPeriod
T@"NSString",C,N,V_localizedName
T@"NSString",C,N,V_model
T@"NSString",C,N,V_modelVersion
T@"NSString",C,N,V_modelClass
TQ,N,V_platform
T@"NSString",C,N,V_recordID
T@"NSString",C,N,V_machineID
T@"NSDate",C,N,V_recordDate
TB,N,V_hasRandomSecret
TB,N,V_hasNumericSecret
T@"NSNumber",C,N,V_numericSecretLength
TB,N,V_isUsingMultipleiCSC
TQ,N,V_remainingAttempts
T@"NSString",C,N,V_serialNumber
TB,N,V_isCurrentDevice
TQ,N,V_recoveryStatus
T@"NSNumber",&,N,V_coolOffPeriod
T@"NSString",C,N,V_deviceColor
T@"NSString",C,N,V_enclosureColor
T@"NSDictionary",C,N,V_recordInfo
T@"OTEscrowRecord",C,N,V_record
T@"NSData",C,N,V_simplePublicKey
T@"NSString",C,N,V_localizedDescription
cdp_isCDPErrorWithCode:
cdp_isLoginHardLimit
cdp_isLoginSoftLimit
cdp_errorWithCode:
cdp_errorWithCode:userInfo:
cdp_errorWithCode:underlyingError:
cdp_sanitizedCopy
isObservingWalrusStatus
startObservingWalrusStateChangeNotification
_stopObservingWalrusStateChangeNotification
_isObservingWalrusStatus
initWithRecordPresence:recordViability:tlkRecoveryViability:sosViability:pcsRecoveryViability:
requiresMoreViewData
hasRecords
recordViability
tlkRecoveryViability
pcsRecoveryViability
sosViability
_hasRecords
_recordViability
_tlkRecoveryViability
_pcsRecoveryViability
_sosViability
TB,R,N,V_hasRecords
TQ,R,N,V_recordViability
TQ,R,N,V_tlkRecoveryViability
TQ,R,N,V_pcsRecoveryViability
TQ,R,N,V_sosViability
initWithDefaultValues
initWithDeviceStatus:accountStatus:
updatedReportWithRecord:isDeviceRecord:
updatedReportWithViews:forDeviceRecord:
accountViability
deviceViability
_accountViability
_deviceViability
T@"CDPEscrowRecordViability",R,N,V_accountViability
T@"CDPEscrowRecordViability",R,N,V_deviceViability
startObservingWebAccessStateChangeNotification
_stopObservingWebAccessStateChangeNotification
_isObservingWebAccessStatus
initWithEvent:
objectForKeyedSubscript:
setObject:forKeyedSubscript:
sendReport
machAbsoluteTimeToTimeInterval:
_eventName
_reportData
_initTime
_clock_timebase
initWithContext:validator:
_executeSyncOnMainThreadIfNeeded:
webAccessStatus
setWebAccessStatus:
_webAccessStatus
TQ,V_webAccessStatus
initWithContext:handler:
context
_handlerProxy
T@"CDPContext",R,N,V_context
daemonConn
setDaemonConn:
T@"CDPDaemonConnection",&,N,V_daemonConn
updateDataPrivacyWithContext:shouldContinue:completion:
_updateDataPrivacyWithContext:completion:
_checkUseConsentForContext:shouldContinue:completion:
_logDataPrivacyStatUpdateError:completion:
joinMethod
backupRecoveryDidSucceed
backupRecoveryDidSucceedWithoutLocalSecret
backupRecoveryDidCancel
backupRecoveryDidReset
backupRecoverySetJoinFromBundleID:
backupRecoverySetAvailableMethod:
backupRecoverySetAttemptedMethod:
setEscrowDeviceCount:
backupRecoveryDidFailWithError:
_attemptedMethods
_availableMethods
_escrowDeviceCount
_joinMethod
isUserVisibleKeychainSyncEnabled
cdpContext:promptToInformUserOfAccountUnlockWithCompletion:
cdpContext:promptToInformUserOfAccountLockOutWithCompletion:
localSecret
setLocalSecret:
remoteSecret
setRemoteSecret:
icsc
setIcsc:
recoveryKey
setRecoveryKey:
accessKey
setAccessKey:
circleResetRequested
setCircleResetRequested:
_circleResetRequested
_localSecret
_remoteSecret
_icsc
_recoveryKey
_accessKey
T@"NSString",C,N,V_localSecret
T@"NSString",C,N,V_remoteSecret
T@"NSString",C,N,V_icsc
T@"NSString",C,N,V_recoveryKey
T@"AKInheritanceAccessKey",C,N,V_accessKey
TB,N,V_circleResetRequested
hasFullCDPSupport
isInternalBuild
isMultiUserManateeFeatureEnabled
canEnableMultiUserManatee
isSilentEscrowRecordViabilityRepairEnabled
setContext:
hasPeersForRemoteApproval
setHasPeersForRemoteApproval:
isWalrusEnabled
setIsWalrusEnabled:
rpdProbationDuration
setRpdProbationDuration:
_hasPeersForRemoteApproval
_isWalrusEnabled
_rpdProbationDuration
T@"CDPContext",&,N,V_context
TB,N,V_hasPeersForRemoteApproval
TB,N,V_isWalrusEnabled
Td,N,V_rpdProbationDuration
securityLevelChanged:forAltDSID:
circleStatusChanged
circleViewStatusChanged
isManateeAvailable:
_checkSecurityEligibilityForContext:error:
_isPrimaryAccount:
checkCircleStatusAndSendManateeAvailabilityNotification
_reportManateeAvailability:value:
_didCreateCircleProxy
_sendNotification:withUserInfo:
circleProxy
setCircleProxy:
_circleProxy
T@"<CDPDCircleProxy>",&,N,V_circleProxy
handleCloudDataProtectionStateWithCompletion:
repairCloudDataProtectionStateWithCompletion:
startCircleApplicationApprovalServer:
startCircleApplicationApprovalServerSkipEscrowFetches:
recoverAndSynchronizeWithSquirrel:
recoverWithSquirrel:
attemptToEscrowPreRecord:preRecordUUID:secretType:completion:
attemptToEscrowPreRecord:completion:
localSecretChangedTo:secretType:completion:
finishOfflineLocalSecretChangeWithCompletion:
finishCyrusFlowAfterTermsAgreementWithContext:
shouldPerformRepairWithOptionForceFetch:error:
shouldPerformRepairWithOptionForceFetch:completion:
generateEscrowRecordReportUsingCache:completion:
generateNewRecoveryKey:
deleteRecoveryKey:
verifyRecoveryKey:
deleteRecoveryKeyWithError:
isRecoveryKeyAvailableWithError:
generateRandomRecoveryKey:
handleURLActionWithInfo:
handleURLActionWithInfo:completion:
isDeviceEscrowRecordRecoverable:
shouldPerformSilentEscrowRecordRepairUsingCache:error:
shouldPerformSilentEscrowRecordRepairUsingCache:completion:
startSilentEscrowRecordRepairWithCompletion:
performSilentEscrowRecordRepairWithCompletion:
updateLastSilentEscrowRecordRepairAttemptDate:error:
performRecovery:
_sanitizedRecoveryErrorWithError:
hasLocalSecret
supportsSecureBackupRecovery
marketingModel
hardwareModel
osVersion
deviceClass
deviceName
_currentProcessCreatesDaemonTypeProxy
currentProcessHasEntitlement:
_isHomePod
_localSecretProxy
initWithXpcEndpoint:context:
uiProviderProxy
authProvider
setAuthProvider:
setUiProviderProxy:
_uiProviderProxy
T@"CDPStateUIProviderProxy",&,N,V_uiProviderProxy
T@"<CDPAuthProvider>",&,N,V_authProvider
shouldDisplayToUser
connection
daemon
daemonWithErrorHandler:
synchronousDaemonWithErrorHandler:
daemonXPCEndpoint
setDaemonXPCEndpoint:
_conn
_connLock
_daemonXPCEndpoint
T@"NSXPCListenerEndpoint",&,N,V_daemonXPCEndpoint
initWithValidatedSecret:secretType:
validatedSecret
secretType
_validatedSecret
_secretType
T@"NSString",R,N,V_validatedSecret
TQ,R,N,V_secretType
initWithWrappedRKC:wrappingKey:custodianUUID:
wrappedRKC
wrappingKey
custodianUUID
_wrappedRKC
_wrappingKey
_custodianUUID
T@"NSData",R,C,N,V_wrappedRKC
T@"NSData",R,C,N,V_wrappingKey
T@"NSUUID",R,C,N,V_custodianUUID
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
^{_PCSIdentitySetData=}32@0:8@16^@24
B40@0:8^{_PCSIdentitySetData=}16@24^@32
B32@0:8^{_PCSIdentitySetData=}16^@24
B32@0:8@16^@24
B44@0:8B16@20@28^@36
^{_PCSIdentitySetData=}32@0:8@"NSDictionary"16^@24
B40@0:8^{_PCSIdentitySetData=}16@"NSDictionary"24^@32
B32@0:8@"NSDictionary"16^@24
B44@0:8B16@"NSString"20@"NSDictionary"28^@36
B32@0:8@?16^@24
@24@0:8@16
@40@0:8@16@24@32
B20@0:8B16
v24@0:8@?16
@40@0:8#16@24@?32
@48@0:8#16@24@?32@?40
@52@0:8#16@24@?32B40@44
@60@0:8#16@24@?32B40@44@?52
@64@0:8#16@24@?32@40@48@?56
@56@0:8#16@24@32@40^B48
v56@0:8@16@24@32@40@?48
@40@0:8@16@24^@32
@40@0:8@16#24^@32
v24@0:8@16
v16@0:8
@"ACAccount"
@"NSString"
@"ACAccountStore"
@"AKAccountManager"
v32@0:8@16@?24
v32@0:8@16@24
v40@0:8@16@24@?32
v44@0:8@16@24B32@36
v40@0:8@16@24@32
v48@0:8@16B24@28B36@40
v48@0:8@16@24q32@?40
v32@0:8@"CDPContext"16@?<v@?@"CDPLocalSecret"@"NSError">24
v32@0:8@"CDPContext"16@"<CDPLocalDeviceSecretHandlerProtocol>"24
v40@0:8@"CDPContext"16@"<CDPRemoteDeviceSecretValidatorProtocol>"24@?<v@?B@"NSError">32
v44@0:8@"CDPContext"16@"NSArray"24B32@"<CDPRemoteDeviceSecretValidatorProtocol>"36
v40@0:8@"CDPRecoveryFlowContext"16@"NSArray"24@"<CDPRemoteDeviceSecretValidatorProtocol>"32
v48@0:8@"CDPContext"16B24@"NSNumber"28B36@"<CDPRemoteDeviceSecretValidatorProtocol>"40
v32@0:8@"CDPContext"16@?<v@?B@"NSError">24
v32@0:8@"CDPContext"16@?<v@?@"NSDictionary"@"NSError">24
v40@0:8@"CDPContext"16@"NSError"24@?<v@?q>32
v48@0:8@"CDPContext"16@"NSError"24q32@?<v@?q>40
v40@0:8@"CDPContext"16@"<CDPRecoveryKeyValidatorInternal>"24@?<v@?B@"NSError">32
v40@0:8@"CDPContext"16@"<CDPRemoteDeviceSecretValidatorProtocolInternal>"24@?<v@?B@"NSError">32
v32@0:8@"CDPContext"16@?<v@?@"AKInheritanceAccessKey"@"NSError">24
v32@0:8@"CDPContext"16@?<v@?Q@"NSError">24
v32@0:8@16Q24
v32@0:8@"NSString"16Q24
v24@0:8@"NSError"16
v48@0:8@16@24Q32@?40
v24@0:8Q16
v48@0:8@"NSString"16@"NSArray"24Q32@?<v@?BB@"NSError">40
v32@0:8@"NSString"16@?<v@?BB@"NSError">24
v24@0:8@?<v@?B@"NSError">16
v24@0:8@"CDPLocalSecret"16
v24@0:8@?<v@?Q>16
v32@0:8@"CDPCustodianRecoveryInfo"16@?<v@?B@"NSError">24
@24@0:8^@16
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v24@0:8@?<v@?@"NSString"@"NSError">16
@"NSString"24@0:8^@16
B32@0:8@"NSString"16^@24
v32@0:8@"CDPContext"16@?<v@?@"CDPContext"@"NSError">24
v40@0:8@"CDPContext"16@"NSString"24@?<v@?@"NSDictionary"@"NSError">32
v36@0:8@16B24@?28
v56@0:8@16Q24@32@40@?48
Vv24@0:8@?16
v28@0:8B16@?20
v48@0:8@16@24@32@?40
Vv32@0:8@16@?24
Vv36@0:8@16B24@?28
Vv32@0:8Q16@?24
Vv40@0:8@16@24@?32
v40@0:8@"CDPContext"16@"<CDPStateUIProviderInternal>"24@?<v@?BB@"NSError">32
v40@0:8@"CDPContext"16@"<CDPStateUIProviderInternal>"24@?<v@?B@"NSError">32
v36@0:8@"CDPContext"16B24@?<v@?B@"NSError">28
v56@0:8@"NSString"16Q24@"CDPContext"32@"<CDPStateUIProviderInternal>"40@?<v@?B@"NSError">48
v40@0:8@"NSString"16@"CDPContext"24@?<v@?B@"NSError">32
v32@0:8@"CDPContext"16@?<v@?@"NSString"@"NSError">24
Vv24@0:8@?<v@?B@"NSError">16
v36@0:8@"NSString"16B24@?<v@?B>28
v24@0:8@?<v@?B>16
v28@0:8B16@?<v@?B@"NSError">20
v48@0:8@"CDPContext"16@"<CDPStateUIProviderInternal>"24@"<CDPAuthProviderInternal>"32@?<v@?@"NSDictionary"@"NSError">40
v32@0:8@"CDPFollowUpContext"16@?<v@?B@"NSError">24
Vv24@0:8@?<v@?Q@"NSError">16
Vv32@0:8@"CDPUpdateDataPrivacyContext"16@?<v@?@"CDPUpdateDataPrivacyContext"@"NSError">24
Vv36@0:8@"CDPContext"16B24@?<v@?@"NSArray"@"NSError">28
Vv32@0:8@"CDPContext"16@?<v@?@"NSError">24
Vv32@0:8@"CDPContext"16@?<v@?Q@"NSError">24
Vv32@0:8Q16@?<v@?@"NSError">24
Vv32@0:8@"NSArray"16@?<v@?@"NSDictionary"@"NSError">24
v32@0:8@"NSDictionary"16@?<v@?@"NSError">24
v32@0:8@"ACAccount"16@?<v@?@"NSDictionary"@"NSError">24
Vv36@0:8@"CDPContext"16B24@?<v@?B@"NSError">28
Vv32@0:8@"CDPContext"16@?<v@?B@"NSError">24
Vv40@0:8@"NSDate"16@"CDPContext"24@?<v@?B@"NSError">32
v36@0:8@"CDPContext"16B24@?<v@?@"CDPEscrowRecordReport"@"NSError">28
@32@0:8@16@24
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v20@0:8B16
@24@0:8^{_NSZone=}16
v24@0:8q16
q16@0:8
I16@0:8
v20@0:8I16
@"CDPCABackupRecoveryReporter"
@"NSDictionary"
@"NSNumber"
@"NSUUID"
@"<CDPAuthProviderInternal>"
@"KCAESGCMDuplexSession"
@"AKCircleRequestContext"
@"CUMessageSession"
@"CDPCustodianRecoveryInfo"
@"NSData"
Q24@0:8^@16
i24@0:8^@16
@32@0:8@16^@24
B24@0:8^@16
B32@0:8@16@24
B28@0:8B16^@20
@"NSDictionary"16@0:8
v24@0:8@"OTClique"16
@"NSString"32@0:8@"NSDictionary"16^@24
@"NSDictionary"32@0:8@"NSString"16^@24
@"OTClique"24@0:8^@16
B32@0:8@"NSSet"16^@24
B32@0:8@"NSSet"16@"NSSet"24
@"KCPairingChannel"16@0:8
v32@0:8@"CDPCustodianRecoveryInfo"16@?<v@?@"NSError">24
@"CDPContext"16@0:8
Q20@0:8i16
Q24@0:8q16
q24@0:8^@16
@"OTClique"
@"CDPContext"
@"<CDPRemoteDeviceSecretValidatorProtocol>"
B28@0:8@16B24
@"<CDPAuthProvider>"
@24@0:8Q16
@"NSArray"
v24@0:8@?<v@?Q@"NSError">16
v32@0:8Q16@?24
v32@0:8Q16@?<v@?@"NSError">24
B24@0:8d16
@"<CDPStateUIProvider>"
@"CDPDaemonConnection"
@"NSDate"
@"OTEscrowRecord"
B24@0:8q16
@24@0:8q16
@32@0:8q16@24
@52@0:8B16Q20Q28Q36Q44
@28@0:8@16B24
@"CDPEscrowRecordViability"
d24@0:8Q16
@"NSMutableDictionary"
{mach_timebase_info="numer"I"denom"I}
@"<CDPLocalDeviceSecretHandlerProtocol>"
@"<CDPRecoveryKeyValidator>"
v40@0:8@16@?24@?32
v40@0:8@"CDPContext"16@"<CDPRecoveryKeyValidator>"24@?<v@?B@"NSError">32
v44@0:8@"CDPContext"16@"NSArray"24B32@"CDPRemoteDeviceSecretValidator"36
v40@0:8@"CDPRecoveryFlowContext"16@"NSArray"24@"CDPRemoteDeviceSecretValidator"32
v48@0:8@"CDPContext"16B24@"NSNumber"28B36@"CDPRemoteDeviceSecretValidator"40
v32@0:8@"CDPContext"16@"CDPLocalDeviceSecretHandler"24
v32@0:8@"CDPContext"16@"CDPRemoteDeviceSecretValidator"24
v32@0:8@"CDPContext"16@?<v@?>24
@"AKInheritanceAccessKey"
d16@0:8
v24@0:8d16
v28@0:8B16@20
v28@0:8B16@"NSString"20
v28@0:8B16Q20
v32@0:8r*16@24
@"<CDPDCircleProxy>"
v40@0:8@16Q24@?32
@"<CDPLocalDeviceSecretProxy>"
@"CDPStateUIProviderProxy"
@24@0:8@?16
@"NSXPCConnection"
@"NSLock"
@"NSXPCListenerEndpoint"
@32@0:8@16Q24
