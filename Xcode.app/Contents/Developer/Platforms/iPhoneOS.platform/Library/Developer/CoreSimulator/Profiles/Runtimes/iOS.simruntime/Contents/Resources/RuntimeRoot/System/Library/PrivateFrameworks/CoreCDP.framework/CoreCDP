@(#)PROGRAM:CoreCDP  PROJECT:CoreCDP-1
"setting companion in circle"
"pcsIdentitySetupWithInfo:"
"pcsIdentityMigrateToiCDPWithInfo:"
"pcsSynchronizeKeysWithInfo:"
"pcsRestoreLocalBackup:"
"Failed to create PCS identity with error: %@"
"Unable to create CDPAccountRepresentation instance due to nil Apple account (%@) or AuthKit account (%@)"
"%@: Assuming silent escrow record repair is disabled"
"%@: Returning %@ for 'isSilentEscrowRecordRepairEnabled'"
"%@: Silent escrow record repair is disabled by server, returning NO"
"%@: Could not determine if device needs escrow repair with invalid context"
"%@: Failed to check if escrow record repair is needed with error (%@)"
"%@: Checked if escrow record repair is needed (%{BOOL}d)"
"%@: Unable to generate context for account (%@) with no DSID"
"%@: Generated context (%@) for account with DSID (%@)"
cdp/enabled-status-check
"%@: Failed to check if iCDP is enabled for account with DSID (%@) with error (%@)"
"%@: Checking iCDP status for account with DSID (%@), will check with server (%{BOOL}d)"
"%@: iCDP status for account with DSID (%@) is %@"
"%@: Unable to check 'silentEscrowRecordRepairEnabled' because AKAccountManager (%@) doesn't respond to selector"
"%@: Returning cached 'silentEscrowRecordRepairEnabled' value (%@) from account (%@)"
"%@: Calling to fetch user info for altDSID (%@) for 'silentEscrowRecordRepairEnabled' value"
"%@: Unable to fetch user info with context because AKAppleIDAuthenticationController (%@) doesn't respond to selector"
"Failed to fetch user info for altDSID (%@) with error (%@)"
"Returning server fetched 'silentEscrowRecordRepairEnabled' value (%@) for altDSID (%@)"
"%@: Unable to check 'silentEscrowRecordRepairEnabled' because AKUserInformation (%@) doesn't respond to selector"
"%@: Calling value producer for key (%@)"
"%@: Called value producer for key (%@) and received value (%@)"
"%@: No cached property for key (%@) was found on account (%@)"
"%@: Failed to deserialize property dictionary for key (%@) from data (%@) with error (%@)"
"%@: Expected lastModifiedDate value in cached property dictionary (%@) for key (%@)"
"%@: Found nil property value in cached property dictionary (%@) for key (%@)"
"%@: Returned cached property value (%@) for key (%@)"
"%@: Cached property value (%@) for key (%@) is stale (lastModifiedDate [%@] < staleModifiedDate [%@])"
"%@: Failed to serialize property dictionary for key (%@) with error (%@)"
"Successfully saved cached property value (%@) for key (%@) on account (%@)"
"Failed to save cached property value (%@) for key (%@) on account (%@) with error (%@)"
"%@: Failed to archive property dictionary (%@) with error (%@)"
"%@: Failed to unarchive data (%@) with error (%@)"
"CDPFollowUpContext: set altDSID to %@"
"Incoming context is nil, returning primary account context."
"Preflighting invalid context: dsid & altDSID missing. Amending with primary account details."
"Preflighting invalid context: altDSID missing"
"Preflighting context with altDSID: %@"
"Preflighting context with dsid %@ for a non-primary acccount.. dragons may be ahead"
"CircleProxyImpl init is missing required cliqueConfiguration. Problems lie ahead 
"CircleProxyImpl init is missing required dsid. Barring no primary account, problems lie ahead 
"CDPCircleProxyImpl: appleID:%@, dsid: %@, type: %ld"
"Circle status check failed with error: %@"
"Failed to retrieve cachedCliqueStatus: %@"
"Call to cachedCliqueStatus returned a status: %@"
 enableTelemetry=YES 
BEGIN [%lld]: CachedCircleStatus  enableTelemetry=YES 
 status=%{public,signpost.telemetry:number1,name=status}d 
CachedCircleStatus
END [%lld] %fs: CachedCircleStatus  status=%{public,signpost.telemetry:number1,name=status}d 
"Beneficiary account detected. Faking cached SOS circle status."
"Checking circle status with SOSCCThisDeviceIsInCircle"
"Failed to check circle status: %@"
"Call to SOSCCThisDeviceIsInCircle returned a status: %d"
"Checking combined circle status"
"%s (%d) called"
"Clique waitForOctagonUpgrade %{BOOL}d with error %{public}@"
"This is not an HSA2 account, not calling waitForOctagonUpgrade"
"Reporting success for %@"
"Reporting failure for %@"
CircleStatus
BEGIN [%lld]: CircleStatus  enableTelemetry=YES 
"Checking clique status with fetchCliqueStatus from %@"
"Call to fetchCliqueStatus returned a status: %@"
END [%lld] %fs: CircleStatus  status=%{public,signpost.telemetry:number1,name=status}d 
"Beneficiary account detected. Faking non-cached SOS circle status."
BEGIN [%lld]: SOSCircleStatus  enableTelemetry=YES 
SOSCircleStatus
END [%lld] %fs: SOSCircleStatus  status=%{public,signpost.telemetry:number1,name=status}d 
BEGIN [%lld]: SynchronizeCircleViews  enableTelemetry=YES 
"Skipping initial sync because we are not in a circle"
"Skipping initial sync because it is not supported by this platform"
"Calling SOSCCWaitForInitialSync to wait for views to sync"
"Finished calling SOSCCWaitForInitialSync didSync=%i error=%@"
"We failed to sync and now we failed to remove self form circle, nothing good will happen here"
"We failed to sync but managed to get out of the circle, hopefully the next attempt will work"
 didSync=%{public,signpost.telemetry:number1,name=didSync}d 
SynchronizeCircleViews
END [%lld] %fs: SynchronizeCircleViews  didSync=%{public,signpost.telemetry:number1,name=didSync}d 
"Attempting to remove self from circle"
"Removed device from circle successfully"
"Failed to remove self from circle - %@"
"Failed to check for non-view-aware peers with error %@"
"Removed old peers from circle: %@"
"Failed to remove old peers from circle with error %@ (peers: %@)"
"Failed to check for non-view-aware peers before removing them from circle with error %@"
"_registerCredentialsOnlyIfNeeded: appleID:%@, dsid: %@, type: %ld"
"Calling SOSCCSetUserCredentialsAndDSID"
BEGIN [%lld]: SetUserCredentialsAndDSID  enableTelemetry=YES 
"Failed to call SOSCCSetUserCredentialsAndDSID with error %@"
 Error=%{public,signpost.telemetry:number1,name=Error}d 
SetUserCredentialsAndDSID
END [%lld] %fs: SetUserCredentialsAndDSID  Error=%{public,signpost.telemetry:number1,name=Error}d 
"Security indicated that no credential is needed nor did we force"
"Skipping registering credentials, insufficient parameters"
BEGIN [%lld]: TryUserCredentialsAndDSID  enableTelemetry=YES 
"Registered credentials through try attempt"
"Failed to call SOSCCTryUserCredentialsAndDSID with error %@"
TryUserCredentialsAndDSID
END [%lld] %fs: TryUserCredentialsAndDSID  Error=%{public,signpost.telemetry:number1,name=Error}d 
"Skipping try registering credentials, insufficient parameters"
"Security requires credentials..."
"Obtaining recovery key from security for custodian recovery with UUID: %@"
"Failed to obtain custodian recovery key from security with error: %@"
"Attempting to recover octagon usign custodian recovery key"
"Not implemented"
cdp: enabled status check
"XPC Error while checking if iCDP is enabled for DSID %@: %@"
"Checking iCDP status for DSID %@ (checkWithServer=%i)"
"iCDP status for DSID %@ is %@"
OctagonStatus
BEGIN [%lld]: OctagonStatus  enableTelemetry=YES 
"XPC Error while checking if OT is enabled: %@"
"Checking OT status"
END [%lld] %fs: OctagonStatus  Error=%{public,signpost.telemetry:number1,name=Error}d 
"Creating context for %@"
"Fetching PRK for primary Account"
"Escrowing a previously backed up PRK"
"Something went wrong... (%@) could not find a stashed token for primary Account: <%@ : %@>"
"MUManatee: Creating context for %@"
"Starting token renewal"
"Token completion block called"
"Starting MRK verification for %@"
"MRK verification completion block called"
"CDPCustodianController init is missing required dsid. Unable to process request, problems lie ahead 
"Asking security to create custodian recovery key for %@"
CustodianCreateRecoveryKey
BEGIN [%lld]: CustodianCreateRecoveryKey  enableTelemetry=YES 
END [%lld] %fs: CustodianCreateRecoveryKey  Error=%{public,signpost.telemetry:number1,name=Error}d 
"Error creating custodian recovery key: %@"
"Asking security to delete custodian recovery key for %@"
CustodianDeleteRecoveryKey
BEGIN [%lld]: CustodianDeleteRecoveryKey  enableTelemetry=YES 
END [%lld] %fs: CustodianDeleteRecoveryKey  Error=%{public,signpost.telemetry:number1,name=Error}d 
"Error deleting custodian recovery key: %@"
"Deleted custodian recovery key: for %@"
"CDPCustodianController init is missing required dsid. Unable to process preflight request"
"Error validating custodian recovery key: %@"
"Custodian recovery key is valid for: %@"
"Generating Inheritance access key for CDP account. Beneficiary: %@"
"Generating Inheritance access key for non-CDP account - not saved on OT. Beneficiary: %@"
"Creating the access key for beneficiary: %@"
"Unable to create the access key without access string or data."
"Attempting to recover Octagon with the inheritance key."
"Error validating inheritance key: %@"
"Inheritance key valid for beneficiary: %@"
Walrus: Fetching status.
"XPC Error while fetching walrus status."
"Failed to fetch walrus status with error: %@"
"Walrus status - %lu"
"Failed to fetch walrus status with error - %@"
Walrus: Updating status
"XPC Error while updating walrus status."
"Failed to update walrus status with error %@"
"Walrus status update has been completed successfully."
Walrus: Fetch PCS Identities
"XPC Error while fetching PCS identities - %@"
"Failed to fetch PCS identities for services %@ with error: %@"
Web access: Fetching status.
"XPC Error while fetching web access status."
"Failed to fetch web access status with error: %@"
"Web access status - %lu"
"Failed to fetch web access status with error - %@"
Web access: Updating status
"XPC Error while updating web access status."
"Failed to update web access status with error %@"
"Web access status update has been completed successfully."
"RPD Probation: date from accountProperties: %@"
"RPD Probation: Set date in accountProperties: %@"
"Failed to set RPD Probation date: %@"
"RPD Probation: Elapsed time since user first exhausted all recovery options: %f"
"RPD Probation period: %f secs"
"RPD Probation: Can show RPD option: %f >= %f = %{BOOL}d"
"Attempted to present CDPUI with incomplete uiProvider: %s"
LocalSecretCollect
BEGIN [%lld]: LocalSecretCollect  enableTelemetry=YES 
END [%lld] %fs: LocalSecretCollect 
"CDPUIProvider does not respond to promptForLocalSecretWithCompletion, falling back to handler: %s"
"CDPUIProvider does not respond to promptForLocalSecretWithHandler either: %s"
"Warning: UI provider %@ does not respond to selector cdpContext:promptForRemoteSecretWithDevices:offeringRemoteApproval:validator:"
"Warning: UI provider %@ does not respond to selectors cdpRecoveryFlowContext:promptForRemoteSecretWithDevices:validator: and cdpContext:promptForRemoteSecretWithDevices:offeringRemoteApproval:validator:"
"Bailed out of interactive authentication. Preventing appearance of prompt because network is unreachable."
"Attempting to show error: %@"
"Warning: UI provider %@ does not respond to selector cdpContext:showError:withCompletion:"
"Warning: UI provider %@ does not respond to selector cdpContext:showError:withDefaultIndex:withCompletion:"
cdp: post follow up
"XPC Error posting a follow up: %@"
"Posted follow ups (%{BOOL}d) with error: %@"
cdp: clear follow up
"XPC Error cleaning up follow ups: %@"
"Cleared follow ups (%{BOOL}d) with error: %@"
"Invalidating connection"
"iCloud Env missing, bad things to come..."
"Auth Token missing, bad things to come..."
"Base URL missing, bad things to come..."
"Creating the access code from data."
"Creating the access code from string."
"Error creating key from access key string. Error - %@"
"Already observing walrus state change notification."
"Starting to observe walrus state change notification."
"Starting to observe OT peer change notification."
"Not yet started to observe walrus state change notification."
"Stopping to observe walrus state change notification."
"Stopping to observe OT peer change notification."
"Walrus state change notification received, posting local notification."
"Checking viability. hasRecordViability = (%{BOOL}d), hasMachineId = (%{BOOL}d)"
"Record is not viable."
@"%{public}@ Found PCS view"
@"%{public}@ Found SOS view"
@"%{public}@ All view viability checks passed"
"Already observing web access state change notification."
"Starting to observe web access state change notification."
"Not yet started to observe web access state change notification."
"Stopping to observe web access state change notification."
"Web access state change notification received, posting local notification."
"Already sent CDPCA event %@"
"Sending report %@ (time: %f), data - %@"
"Attempting to validate secret using validator %@"
"Validator returned response of isValid=%i canRetry=%i error=%@ ... dispatching completion block on to main queue"
"Invoking validateSecret:devices:type:withCompletion: completion block on the main queue"
"Attempting to validate recovery key using validator %@"
"Invoking validateRecoveryKey:withCompletion: completion block on the main queue"
"Attempting to validate custodian recovery info using validator %@"
"InvokingvalidateCustodianRecoveryInfo:withCompletion: completion block on the main queue"
"Requesting approval from another device..."
"Cancelling request for remote approval..."
"Requesting reset of CDP account state..."
"Cancelling validation with error %@"
"Supported Escape Offers: %lu"
"Cached RK with error: %@"
"Failed to fetch RK from cache: %@"
"Cleared RK cache with error: %@"
cdp/saveTermsAcceptance
"Saving of terms acceptance completed with error %@"
"XPC Error while attempting to save terms info: %@"
cdp/fetchTermsAcceptance
"Fetched terms acceptance completed with error %@ and result %@"
"XPC Error while attempting to fetch terms info: %@"
DataPrivacy: checking status of complete data privacy
"XPC Error while checking status for complete data privacy."
"Error getting status for complete data privacy - %@"
"Status for complete data privacy - %lu"
DataPrivacy: Update data privacy status
"XPC Error while updating data privacy."
"User declined losing access to devices."
"Error updating data privacy state without user's consent on devices that lose access."
"Error updating data privacy status - %@"
"Complete data privacy update."
cdp: Keychain Status Check
"XPC Error while checking if user-visible keychain sync is enabled: %@"
"Checking user-visible keychain sync status"
"User-visible keychain sync status is %@"
cdp: Keychain Status Change
"Setting user-visible keychain sync to %@"
"User-visibile keychain sync set to %@"
"Failed to set user-visibile keychain sync set to %@: %@"
cdp: Remove Legacy Peers
"XPC Error while remove non-view-aware peers: %@"
"Removing non-view-aware peers from the circle"
"Successfully removed non-view-aware peers from the circle"
"Failed to remove non-view-aware peers from the circle: %@"
"Trying to determine manatee availability for altDSID: %@"
"Checking security eligibility state..."
"We are HSA2, but Security is not ready, waiting for Security state resolution..."
"We are no longer HSA2, reporting not eligible"
"Processing circle status change to calculate manatee availability"
"Processed circle state change event"
"Processing circle view change event"
"Processed circle view change event"
"All systems are not go... Manatee not available"
"All systems go!!! Manatee available"
"Sending %s, value: %@"
cdp/manatee-availability
"Requesting manatee state..."
"Manatee is not available, error: %@"
"Manatee is available"
cdp/statemachine-handle
HandleCloudDataProtectionState
BEGIN [%lld]: HandleCloudDataProtectionState  enableTelemetry=YES 
END [%lld] %fs: HandleCloudDataProtectionState  Error=%{public,signpost.telemetry:number1,name=Error}d 
"State machine completed shouldCompleteSignIn=%{BOOL}d cloudDataProtectionEnabled=%{BOOL}d error=%@"
"XPC Error while starting state machine: %@"
"Requesting start of CDP state machine..."
cdp/statemachine-repair
RepairCloudDataProtectionState
BEGIN [%lld]: RepairCloudDataProtectionState  enableTelemetry=YES 
END [%lld] %fs: RepairCloudDataProtectionState  Error=%{public,signpost.telemetry:number1,name=Error}d 
"State machine repair completed didRepair=%{BOOL}d error=%@"
"XPC Error while repairing state: %@"
"Requesting repair of CDP state..."
"XPC Error while accepting sharing session: %@"
"Requesting start of accepting sharing session..."
"Requesting start of accepting sharing session, skipping escrow fetches..."
"Requesting repair and synchronization of CDP state with Squirrel..."
"Requesting repair of CDP state with Squirrel..."
"XPC Error while attempting to escrow preRecord: %@"
"Informing daemon of attempting to escrow preRecord..."
"XPC Error while updating local secret: %@"
"Informing daemon of local secret change..."
"Attempting to finish offline local secret change..."
"XPC Error while finishing Cyrus secure terms flow: %@"
"Attempting to finish secure terms flow for %@ with type %ld"
cdp: repair state check
"XPC Error while checking recovery existence: %@"
cdp/should-perform-repair
"Failed to get remote object proxy for CDP daemon: %@"
"Requesting to check if repair should be performed on the CDP state"
cdp/generate-escrow-record-report
 enableTelemetry=YES  UseCache=%{public,signpost.telemetry:number2,name=UseCache}d 
GenerateEscrowRecordReport
BEGIN [%lld]: GenerateEscrowRecordReport  enableTelemetry=YES  UseCache=%{public,signpost.telemetry:number2,name=UseCache}d 
END [%lld] %fs: GenerateEscrowRecordReport  Error=%{public,signpost.telemetry:number1,name=Error}d 
"Failed to generate escrow record report: %{public}@"
"Generating escrow record report (usingCache: %{BOOL}d)"
cdp/generate-rk
"XPC Error while generating a recovery key: %@"
"Attempting to generate a new recovery key"
cdp/delete-rk
"XPC Error while deleting a recovery key: %@"
"Attempting to delete a recovery key"
cdp/verify-rk
"XPC Error while verifying a recovery key: %@"
"Attempting to verify the recovery key"
"XPC Error while fetching recovery key state: %@"
cdp/rk-availability
"Attempting to fetch recovery key state"
"Failed to fetch recovery key availability with error %@"
"Recovery key availability - %{BOOL}d"
"XPC Error while fetching recovery key availability."
"Handling URL action: %@"
cdp/fetch-escrow-devices
"Requesting list of escrow-record associated devices"
cdp/device-escrow-record-recoverable
"Checking for the current device's ecrow record being recoverable"
cdp/synchronous-device-escrow-record-recoverable
"%@: Failed to find recoverable escrow record for current device with error (%@)"
"%@: Checking current device's escrow record recoverability"
cdp/should-perform-silent-escrow-record-repair-sync
ShouldPerformSilentEscrowRecordRepairSync
BEGIN [%lld]: ShouldPerformSilentEscrowRecordRepairSync  enableTelemetry=YES 
END [%lld] %fs: ShouldPerformSilentEscrowRecordRepairSync  Error=%{public,signpost.telemetry:number1,name=Error}d 
"Failed to check if escrow record repair is needed with error: %@"
"Escrow record repair is needed: %{BOOL}d"
"Synchronously checking if silent escrow record repair should be performed (usingCache: %{BOOL}d)"
cdp/should-perform-silent-escrow-record-repair-async
ShouldPerformSilentEscrowRecordRepairAsync
BEGIN [%lld]: ShouldPerformSilentEscrowRecordRepairAsync  enableTelemetry=YES 
END [%lld] %fs: ShouldPerformSilentEscrowRecordRepairAsync  Error=%{public,signpost.telemetry:number1,name=Error}d 
"Should perform silent escrow record repair: %{BOOL}d"
"Checking if silent escrow record repair should be performed (usingCache: %{BOOL}d)"
cdp/start-silent-escrow-record-repair
StartSilentEscrowRecordRepair
BEGIN [%lld]: StartSilentEscrowRecordRepair  enableTelemetry=YES 
END [%lld] %fs: StartSilentEscrowRecordRepair  Error=%{public,signpost.telemetry:number1,name=Error}d 
"Successfully started silent escrow record repair"
"Failed to start silent escrow record repair: %@"
"Requesting start of silent escrow record repair..."
cdp/perform-silent-escrow-record-repair
PerformSilentEscrowRecordRepair
BEGIN [%lld]: PerformSilentEscrowRecordRepair  enableTelemetry=YES 
END [%lld] %fs: PerformSilentEscrowRecordRepair  Error=%{public,signpost.telemetry:number1,name=Error}d 
"Successfully performed silent escrow record repair"
"Failed to perform silent escrow record repair: %@"
"Performing silent escrow record repair..."
cdp/update-last-silent-escrow-record-repair-attempt-date
"Successfully updated last silent escrow record repair attempt date to %@"
"Failed to update last silent escrow record repair attempt date: %@"
"Requesting update of silent escrow record repair attempt date to %@..."
cdp: recovery flow
NativeAccountRecovery
BEGIN [%lld]: NativeAccountRecovery  enableTelemetry=YES 
 result != nil=%{public,signpost.telemetry:number1,name=result != nil}d  Error=%{public,signpost.telemetry:number2,name=Error}d 
END [%lld] %fs: NativeAccountRecovery  result != nil=%{public,signpost.telemetry:number1,name=result != nil}d  Error=%{public,signpost.telemetry:number2,name=Error}d 
"XPC Error while recovering data: %@"
"XPC Error while checking if the local device has a secret: %@"
"Checking if the local device has a secret"
"Local device DOES have a secret"
"Local device DOES NOT have a secret"
"Reporting current serial number: %@"
"Unable to check self process entitlements without SecTaskRef."
"Error when checking self process for entitlement %@. error:%@"
"Invalidating connection for controller %@"
"Daemon connection invalidated!"
"Daemon connection interrupted!"
"XPC Error from daemon: %@"
B16@?0^^{__CFError}8
com.apple.cdp.appleaccount.property
com.apple.cdp.appleaccount.property.last-modified-date
com.apple.cdp.appleaccount.property.is-escrow-repair-needed
silentEscrowRecordRepair
escrowProxyUrl
com.apple.Dataclass.Account
iCloudEnv
v16@?0@"NSError"8
ENABLED
DISABLED
v12@?0B8
v24@?0@"AKUserInformation"8@"NSError"16
v20@?0B8@"NSError"12
altDSID
kCDPStateRepair
kCDPOfflinePasscodeChange
kCDPRecoveryKeyRegenerate
kCDPUpgradeSetupBioMetrics
kCDPSecureTerms
kCDPConfirmExistingSecret
kWalrusCreatePasscode
_followUpType
_shouldNotify
_force
_repairType
_altDSID
<%@: %p - type=%@ shouldNotify=%{BOOL}d force=%{BOOL}d>
Unknown
SignIn
Repair
UpdatePasscode
FinishPasscodeChange
ConfirmCyrusPasscode
RegenerateRK
NewRK
VerifyRK
_authenticationResults
_appleID
_password
_passwordEquivToken
_dsid
_isHSA2Account
_didUseSMSVerification
_cachedLocalSecret
_cachedLocalSecretType
__useSecureBackupCachedPassphrase
__alwaysCreateEscrowRecord
__skipEscrowFetches
__recoveryToken
_guestMode
_idmsRecovery
_idmsMasterKeyRecovery
_duplexSession
_resumeContext
_sharingChannel
_type
_isAttemptingBackupRestore
_cachedPassphraseMissing
_findMyiPhoneUUID
_supportsSkipSignIn
_isFederatedAccount
_isBeneficiaryAccount
__ignoreLockAssertErrors
_custodianRecoveryInfo
_beneficiaryAccount
_beneficiaryWrappedKeyData
__supportsCustodianRecovery
_bundleID
__disableAsyncSecureBackupEnrollment
_mandatesRecoveryKey
_walrusStatus
__forceReset
CDPContext was missing DSID when CircleProxyImpl was initialized. Its OTClique was not created.
-[CDPCircleProxyImpl waitForUpdate]
v8@?0
v24@?0B8B12@"NSError"16
personID
v24@?0@"CDPContext"8@"NSError"16
v24@?0@"NSDictionary"8@"NSError"16
v24@?0@"OTCustodianRecoveryKey"8@"NSError"16
statusToSet
userAcceptedDevicesToLoseAccountAccess
devicesThatLoseAccountAccessOnEnable
v24@?0@"OTInheritanceKey"8@"NSError"16
com.apple.reminders
v24@?0Q8@"NSError"16
rpdProbationFirstSeenDate
en_US_POSIX
yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'
-[CDPStateUIProviderProxy cdpContext:promptForAdoptionOfMultipleICSC:]
-[CDPStateUIProviderProxy cdpContext:promptForICSCWithIsNumeric:numericLength:isRandom:validator:]
-[CDPStateUIProviderProxy cdpContext:promptForLocalSecretWithCompletion:]
v24@?0@"CDPLocalSecret"8@"NSError"16
-[CDPStateUIProviderProxy cdpContext:promptForLocalSecretWithHandler:]
-[CDPStateUIProviderProxy cdpContext:beginRemoteApprovalWithValidator:completion:]_block_invoke
-[CDPStateUIProviderProxy cdpContext:promptForInteractiveAuthenticationWithCompletion:]
v16@?0q8
-[CDPStateUIProviderProxy cdpContext:showResetCompletedAlertWithCompletion:]
com.apple.cdpd.rk.keychain_service
com.apple.cdp.rk
No Records
Not Viable
Viable
iphone
IPHONE
ipad
IPAD
ipod touch
IPOD_TOUCH
macbook
MACBOOK
macbook pro
MACBOOK_PRO
mac pro
MAC_PRO
apple tv
apple watch
WATCH
DEVICE
_PASSWORD
_PASSCODE
<%@: %p - hasMID=%@ isBottled=%@ recordID=%@ name=%@ model=%@ platform=%@ date=%@ encodedMetadata=%@>
encodedMetadata
_localizedName
_model
_modelVersion
_modelClass
_platform
_recordID
_machineID
_recordDate
_hasRandomSecret
_hasNumericSecret
_numericSecretLength
_isUsingMultipleiCSC
_remainingAttempts
_serialNumber
_isCurrentDevice
recordInfo
_deviceColor
_enclosureColor
com.apple.CoreCDP.CustodianRecovery
CDPStateError
com.apple.CoreCDP.adp.statusChange
statusChange
%@%u
CDPWalrusStateChangeNotification
_CDPWalrusStateChangeDarwinNotification
com.apple.security.octagon.peer-changed
ProtectedCloudStorage
SecureObjectSync
hasRecords
recordViability
tlkRecoveryViability
pcsRecoveryViability
sosViability
accountViability
deviceViability
CDPWebAccessStateChangeNotification
_CDPWebAccessStateChangeDarwinNotification
wasSuccess
errorDomain
errorCode
underlyingErrorDomain
underlyingErrorCode
version
duration
__OSINSTALL_ENVIRONMENT
__AKSYNCBUBBLE
<%@: %p> EventName: [%@], ReportData: %@
v16@?0Q8
v24@?0@"NSString"8@"NSError"16
com.apple.cdp
core
signpost
v24@?0@"CDPUpdateDataPrivacyContext"8@"NSError"16
com.apple.CoreCDP.BackupRecovery
backupRecoveryResult
backupRecoveryThroughRemoteSecretDidSucceed
backupRecoveryThroughRemoteSecretDidSucceedWithoutLocalSecret
backupRecoveryThroughRemoteSecretDidCancel
backupRecoveryThroughRemoteSecretDidReset
backupRecoveryThroughRemoteSecretDidFail
joinMethod
attemptedMethods
availableMethods
escrowDeviceCount
callingProcessBundleID
accountCleanupStatus
A remote secret or recovery key is required to attempt backup recovery (use -remote <secret> OR -mk <recoveryKey>)
Remote secret is invalid... cancelling prompt/validation
Recovery key is invalid... cancelling prompt/validation
An iCSC is required to attempt backup recovery (use -icsc <iCSC>)
ICSC is invalid... cancelling prompt/validation
com.apple.CoreCDP
CoreCDP
MultiUserManatee
SilentEscrowRecordViabilityRepair
_context
_hasPeersForRemoteApproval
_isWalrusEnabled
_rpdProbationDuration
com.apple.cdp.cloudDataProtectionEnabled
com.apple.cdp.manatee-availability
com.apple.cdp.manatee-state
v24@?0@"CDPEscrowRecordReport"8@"NSError"16
command
rejoin
offline-secret-change
regenerate
v24@?0@"NSArray"8@"NSError"16
findMyPhoneIdentity
marketing-name
HWModelStr
ProductType
ProductVersion
BuildVersion
DeviceName
SerialNumber
UserAssignedDeviceName
com.apple.managedconfiguration.profiled-access
DeviceClassNumber
CDPDLocalDeviceSecretProxyImpl
/System/Library/PrivateFrameworks/CoreCDPInternal.framework/CoreCDPInternal
com.apple.cdp.daemon
_validatedSecret
_secretType
_wrappedRKC
_wrappingKey
_custodianUUID
<%@: %p> for UUID: %@
CDPProtectedCloudStorageProxyImpl
CDPProtectedCloudStorageProxy
NSObject
CDPAccountRepresentation
CDPDeviceProtocol
CDPStateUIProviderInternal
CDPLocalDeviceSecretHandlerProtocol
CDPRemoteDeviceSecretValidatorProtocol
CDPRecoveryKeyValidator
CDPAuthProviderInternal
CDPDaemonProtocol
CDPFollowUpContext
NSSecureCoding
NSCoding
HSA2
CDPContext
NSCopying
Account
CDPCircleProxyImpl
CDPDCircleProxy
CDPRecoveryKeySecretValidatorProxyImpl
CDPAccount
MultiUserManatee
CDPAuthProviderProxy
CDPCustodianRecoveryKeyController
CDPUpdateDataPrivacyContext
CDPInheritanceTrustController
CDPWalrusStateController
CDPWalrusStatusProvider
CDPWebAccessStateController
CDPWebAccessStatusUpdater
CDPWebAccessStatusProvider
Probation
CDPStateUIProviderProxy
CDPKeychainItemDescriptor
CDPWalrusStateCache
CDPFollowUpController
CDPPCSUtilities
CDPLocalizedStringBuilder
CDPDevice
CDPCACustodianRecoveryReporter
CoreCDP
CDPCAWalrusReporter
CDPWalrusNotificationHandler
CDPEscrowRecordViability
CDPInitUnavailable
CDPEscrowRecordReport
CDPWebAccessNotificationHandler
CDPCAReporter
CDPRemoteDeviceSecretValidator
CDPRecoveryKeyCache
CDPWebAccessStateCache
CDPLocalDeviceSecretHandler
CDPRecoveryKeyValidatorProxyImpl
CDPTermsInfoBackupController
CDPDataPrivacyController
CDPCABackupRecoveryReporter
CDPKeychainSync
CDPToolFakeUIProvider
CDPStateUIProvider
CDPRecoveryKeyUIProvider
CDPUtilities
CDPRecoveryFlowContext
CDPManateeStateController
CDPDAuthListener
CDPDCircleListener
CDPStateController
CDPRecoveryController
CDPLocalDeviceSecretProxyImpl
CDPLocalDeviceSecretProxy
CDPLocalDevice
CDPController
CDPDaemonConnection
CDPLocalSecret
CDPCustodianRecoveryInfo
T@"CDPContext",R,N,V_cdpContext
DSID
T@"NSString",C,N,V_modelVersion
T@"<CDPAuthProvider>",&,N,V_authProvider
T@"NSString",C,N,V_serialNumber
T@"<CDPDCircleProxy>",&,N,V_circleProxy
TI,N,V_endpoint
T@"ACAccount",R,N,V_appleAccount
__recoveryToken
T@"ACAccountStore",&,N,V_accountStore
_authKitAccount
T@"AKCircleRequestContext",&,N,V_resumeContext
_clique
T@"AKInheritanceAccessKey",R,N
_enclosureColor
T@"CDPContext",&,N,V_context
_recoveryStatus
T@"CDPContext",R,N
_sharingChannel
T@"CDPCustodianRecoveryInfo",&,N,V_custodianRecoveryInfo
addDeviceClass:
T@"CDPEscrowRecordViability",R,N,V_accountViability
appleID
T@"CDPStateUIProviderProxy",&,N,V_uiProviderProxy
bundleForClass:
T@"KCAESGCMDuplexSession",&,N,V_duplexSession
clearFollowUpWithContext:error:
T@"NSData",&,N,V_beneficiaryWrappedKeyData
context
T@"NSData",R,C,N,V_wrappedRKC
contextForOfflinePasscodeChange
T@"NSDate",&,N
dealloc
T@"NSDictionary",C,N,V_authenticationResults
escrowURLString
T@"NSNumber",&,N,V_coolOffPeriod
initWithBeneficiairyIdentifier:
T@"NSNumber",C,N,V_numericSecretLength
isInternalBuild
T@"NSString",C,N,V_altDSID
isValid
T@"NSString",C,N,V_bundleID
localSecretType
T@"NSString",C,N,V_deviceColor
lowercaseString
T@"NSString",C,N,V_icsc
T@"NSString",C,N,V_localizedDescription
numberWithBool:
T@"NSString",C,N,V_machineID
purgeResumeData
T@"NSString",C,N,V_modelClass
recoverAndSynchronizeSquirrelWithContext:uiProvider:completion:
T@"NSString",C,N,V_passwordEquivToken
release
T@"NSString",C,N,V_recoveryKey
saveTermsAcceptance:completion:
T@"NSString",R,C
setCircleProxy:
T@"NSString",R,C,N,V_altDSID
setLocalSecret:
T@"NSUUID",C,N,V_beneficiaryIdentifier
setStatusToSet:
T@"NSXPCListenerEndpoint",&,N,V_daemonXPCEndpoint
set_forceReset:
TB,N,V__disableAsyncSecureBackupEnrollment
silentEscrowRecordRepairEnabled
TB,N,V__ignoreLockAssertErrors
stringFromDate:
TB,N,V__supportsCustodianRecovery
validatedSecret
TB,N,V_cachedPassphraseMissing
wrappingKeyData
.cxx_destruct
T@"NSString",C,N,V_followUpType
T#,R
T@"NSString",C,N,V_remoteSecret
T@"<CDPAuthProviderInternal>",&,N,V__authProvider
T@"OTEscrowRecord",C,N,V_record
T@"<CDPStateUIProvider>",&,N,V_uiProvider
TQ,N,V_platform
T@"ACAccount",R,N,V_authKitAccount
_accountManager
T@"AKAccountManager",&,N,V_accountManager
_backupActivity
T@"AKInheritanceAccessKey",C,N,V_accessKey
_clock_timebase
T@"CDPCABackupRecoveryReporter",R,N
_record
T@"CDPContext",R,C,N
_sendNotification:withUserInfo:
T@"CDPContext",R,N,V_context
_sos_authenticatedCircleStatus:
T@"CDPDaemonConnection",&,N,V_daemonConn
altDSID
T@"CDPEscrowRecordViability",R,N,V_deviceViability
backupRecoveryDidFailWithError:
T@"CUMessageSession",&,N,V_sharingChannel
canAuthenticate
T@"NSArray",&,N,V_devicesThatLoseAccountAccessOnEnable
containsString:
T@"NSData",C,N,V_simplePublicKey
contextForConfirmExistingSecret
T@"NSData",R,C,N,V_wrappingKey
dateFromString:
T@"NSDate",C,N,V_recordDate
deviceViability
T@"NSDictionary",C,N,V_recordInfo
hasRandomSecret
T@"NSNumber",C,N,V_dsid
isCurrentDevice
T@"NSString",C,N,V__recoveryToken
isProxy
T@"NSString",C,N,V_appleID
isWalrusEnabled
T@"NSString",C,N,V_cachedLocalSecret
localizedString
T@"NSString",C,N,V_enclosureColor
machAbsoluteTimeToTimeInterval:
T@"NSString",C,N,V_localSecret
T@"NSString",C,N,V_localizedName
pcsIdentitySetupWithInfo:error:
T@"NSString",C,N,V_model
recordViability
T@"NSString",C,N,V_password
refresh
T@"NSString",C,N,V_recordID
representationForPrimaryAccount
T@"NSString",C,V_findMyiPhoneUUID
setAccessGroup:
T@"NSString",R,C,N
setDeviceColor:
T@"NSString",R,N,V_validatedSecret
setRecoveryKey:
T@"NSUUID",R,C,N,V_custodianUUID
setWithObjects:
TB,N,V__alwaysCreateEscrowRecord
setupPairingChannelAsInitiator:
TB,N,V__forceReset
simplePublicKey
TB,N,V__skipEscrowFetches
uiProviderProxy
TB,N,V__useSecureBackupCachedPassphrase
webAccessStatus
TB,N,V_didUseSMSVerification
TB,N,V_failSignInOnError
TB,N,V_force
TB,N,V_guestMode
TB,N,V_hasNumericSecret
TB,N,V_hasPeersForRemoteApproval
TB,N,V_hasRandomSecret
TB,N,V_idmsMasterKeyRecovery
TB,N,V_idmsRecovery
TB,N,V_isAttemptingBackupRestore
TB,N,V_isBeneficiaryAccount
TB,N,V_isCurrentDevice
TB,N,V_isFederatedAccount
TB,N,V_isHSA2Account
TB,N,V_isUsingMultipleiCSC
TB,N,V_isWalrusEnabled
TB,N,V_mandatesRecoveryKey
TB,N,V_shouldNotify
TB,N,V_userAcceptedDevicesToLoseAccountAccess
TB,R
TB,R,N
TB,R,N,V_hasRecords
TB,V_isValid
TB,V_supportsSkipSignIn
TI,N,V_backupActivity
TQ,N
TQ,N,V_cachedLocalSecretType
TQ,N,V_recoveryStatus
TQ,N,V_remainingAttempts
TQ,N,V_statusToSet
TQ,N,V_walrusStatus
TQ,N,VsupportedEscapeOfferMask
TQ,R
TQ,R,N
TQ,R,N,V_pcsRecoveryViability
TQ,R,N,V_recordViability
TQ,R,N,V_secretType
TQ,R,N,V_sosViability
TQ,R,N,V_tlkRecoveryViability
TQ,V_walrusStatus
TQ,V_webAccessStatus
Td,N,V_rpdProbationDuration
Tq,N,V_maxDeviceRecoveryAttempts
Tq,N,V_totalRecoveryAttempts
Tq,N,V_type
Tq,N,V_validEscrowDeviceCount
UUIDString
__alwaysCreateEscrowRecord
__authProvider
__disableAsyncSecureBackupEnrollment
__forceReset
__ignoreLockAssertErrors
__skipEscrowFetches
__supportsCustodianRecovery
__useSecureBackupCachedPassphrase
_accessKey
_accountStore
_accountViability
_altDSID
_alwaysCreateEscrowRecord
_analyticsReporter
_appleAccount
_appleID
_attemptedMethods
_authKitAccountWith:
_authProvider
_authenticatedCliqueStatus:
_authenticationResults
_availableMethods
_beneficiaryIdentifier
_beneficiaryWrappedKeyData
_bundleID
_cachePropertyValue:forKey:lastModifiedDate:account:saveHandler:
_cachedLocalSecret
_cachedLocalSecretType
_cachedPassphraseMissing
_cachedPropertyValueOfClass:forKey:staleModifiedDate:account:isStale:
_cachedPropertyValueOfClass:forKey:valueProducer:
_cachedPropertyValueOfClass:forKey:valueProducer:checkForStale:account:
_cachedPropertyValueOfClass:forKey:valueProducer:checkForStale:account:saveHandler:
_cachedPropertyValueOfClass:forKey:valueProducer:saveHandler:
_cachedPropertyValueOfClass:forKey:valueProducer:staleModifiedDate:account:saveHandler:
_cdpContext
_checkSecurityEligibilityForContext:error:
_checkUseConsentForContext:shouldContinue:completion:
_circleProxy
_cliqueStatus:
_conn
_connLock
_context
_contextWithType:cdpContext:
_coolOffPeriod
_currentProcessCreatesDaemonTypeProxy
_custodianRecoveryInfo
_custodianUUID
_daemonConn
_daemonXPCEndpoint
_deserializedPropertyDictionaryForData:withPropertyValueOfClass:error:
_deviceColor
_deviceViability
_devicesThatLoseAccountAccessOnEnable
_didCreateCircleProxy
_didUseSMSVerification
_disableAsyncSecureBackupEnrollment
_dsid
_duplexSession
_endpoint
_escrowDeviceCount
_eventName
_executeSyncOnMainThreadIfNeeded:
_failSignInOnError
_findMyiPhoneUUID
_followUpType
_force
_forceReset
_guestMode
_handlerProxy
_hasNumericSecret
_hasPeersForRemoteApproval
_hasRandomSecret
_hasRecords
_icsc
_idmsMasterKeyRecovery
_idmsRecovery
_ignoreLockAssertErrors
_initTime
_isAttemptingBackupRestore
_isBeneficiaryAccount
_isCurrentDevice
_isFederatedAccount
_isHSA2Account
_isHomePod
_isObservingWalrusStatus
_isObservingWebAccessStatus
_isPrimaryAccount:
_isUsingMultipleiCSC
_isValid
_isWalrusEnabled
_joinMethod
_key
_keychainManager
_localSecret
_localSecretProxy
_localizedDescription
_localizedName
_logDataPrivacyStatUpdateError:completion:
_machineID
_mandatesRecoveryKey
_maxDeviceRecoveryAttempts
_model
_modelClass
_modelVersion
_numericSecretLength
_observerLock
_pairingChannelContext
_password
_passwordEquivToken
_pcsConfigForPrimaryAccount
_pcsRecoveryViability
_performPCSBlock:error:
_platform
_recordDate
_recordID
_recordInfo
_recordViability
_recoveryKey
_recoveryToken
_registerCredentialsOnlyIfNeeded:
_remainingAttempts
_remoteSecret
_repairType
_reportData
_reportManateeAvailability:value:
_resumeContext
_rpdProbationDuration
_sanitizedRecoveryErrorWithError:
_secretType
_serialNumber
_serializedPropertyDictionaryWithValue:lastModifiedDate:error:
_serverFriendlyDateFormatter
_shouldNotify
_simplePublicKey
_skipEscrowFetches
_sosViability
_sos_circleStatus:
_startObservingWalrusStateChangeNotification
_statusToSet
_stopObservingWalrusStateChangeNotification
_stopObservingWebAccessStateChangeNotification
_supportsCustodianRecovery
_supportsSkipSignIn
_table
_tlkRecoveryViability
_totalRecoveryAttempts
_type
_uiProvider
_uiProviderProxy
_updateDataPrivacyWithContext:completion:
_useSecureBackupCachedPassphrase
_userAcceptedDevicesToLoseAccountAccess
_validEscrowDeviceCount
_validatedSecret
_validator
_walrusStatus
_webAccessStatus
_wrappedRKC
_wrappingKey
aa_altDSID
aa_appleAccountWithAltDSID:
aa_appleAccountWithPersonID:
aa_appleAccountWithUsername:
aa_authToken
aa_firstName
aa_fullName
aa_personID
aa_primaryAppleAccount
aaf_toBase64DecodedData
accessCode
accessKey
accountManager
accountProperties
accountPropertyForKey:
accountStore
accountUserKeyAvailable
accountViability
addEntriesFromDictionary:
addOrUpdateKeychainItem:error:
addSecretType:
addUnqualifiedDeviceClass:
allObjects
allocWithZone:
altDSIDForAccount:
altDSIDForPersonID:
analyticsReporter
anyPeerHasEnabledViewsInSet:error:
appleAccount
appleAccountForAltDSID:
approveFromAnotherDeviceWithCompletion:
archivedDataWithRootObject:requiringSecureCoding:error:
arrayWithObjects:count:
attemptToEscrowPreRecord:completion:
attemptToEscrowPreRecord:context:completion:
attemptToEscrowPreRecord:preRecordUUID:secretType:completion:
augmentWithCredentialsFromContext:
authKitAccount
authKitAccountWithAltDSID:
authProvider
authToken
authenticationResults
authenticationToken
autorelease
backupActivity
backupRecoveryDidCancel
backupRecoveryDidReset
backupRecoveryDidSucceed
backupRecoveryDidSucceedWithoutLocalSecret
backupRecoverySetAttemptedMethod:
backupRecoverySetAvailableMethod:
backupRecoverySetJoinFromBundleID:
beneficiaryID
beneficiaryIdentifier
beneficiaryWrappedKeyData
boolValue
broadcastWalrusStateChange
builderForKey:
builderForKey:inTable:
bundleID
bundleIdentifier
cacheRecoveryKey:forAltDSID:error:
cachedCliqueStatus:
cachedLocalSecret
cachedLocalSecretType
cachedPassphraseMissing
cachedSOSCircleStatus:
canEnableMultiUserManatee
cancelApproveFromAnotherDevice
cancelValidationWithError:
cdpContext
cdpContext:beginRemoteApprovalWithValidator:
cdpContext:beginRemoteApprovalWithValidator:completion:
cdpContext:performSilentRecoveryTokenRenewal:
cdpContext:presentRecoveryKeyWithValidator:completion:
cdpContext:promptForAdoptionOfMultipleICSC:
cdpContext:promptForBeneficiaryAccessKeyWithCompletion:
cdpContext:promptForICSCWithIsNumeric:numericLength:isRandom:validator:
cdpContext:promptForInteractiveAuthenticationWithCompletion:
cdpContext:promptForLocalSecretWithCompletion:
cdpContext:promptForLocalSecretWithHandler:
cdpContext:promptForRecoveryKeyWithSecretValidator:completion:
cdpContext:promptForRecoveryKeyWithValidator:completion:
cdpContext:promptForRemoteSecretWithDevices:offeringRemoteApproval:validator:
cdpContext:promptToInformUserOfAccountLockOutWithCompletion:
cdpContext:promptToInformUserOfAccountUnlockWithCompletion:
cdpContext:showError:withCompletion:
cdpContext:showError:withDefaultIndex:withCompletion:
cdpContext:showResetCompletedAlertWithCompletion:
cdpContext:verifyMasterKey:completion:
cdpContextForUsername:
cdpRecoveryFlowContext:promptForRemoteSecretWithDevices:validator:
cdpStatusFromOT:
cdpStatusFromSOS:
cdp_errorWithCode:
cdp_errorWithCode:underlyingError:
cdp_errorWithCode:userInfo:
cdp_isCDPErrorWithCode:
cdp_isLoginHardLimit
cdp_isLoginSoftLimit
cdp_sanitizedCopy
checkCircleStatusAndSendManateeAvailabilityNotification
checkIfAltDSIDIsBeneficiary:
circleProxy
circleStatusChanged
circleViewStatusChanged
claimTokenData
claimTokenString
class
clearFollowUpWithContext:completion:
cliqueConfiguration
cliqueMemberIdentifier
code
combinedCachedCircleStatus:
combinedCircleStatus:
compare:
confirmRecoveryKey:completion:
confirmRecoveryKey:error:
conformsToProtocol:
connection
contextForAccountWithAltDSID:
contextForPrimaryAccount
contextForRecoveryKeyRepair
contextForSecureTerms
contextForSettingUpBiometrics
contextForStateRepair
contextForWalrusCreatePasscodeWithCDPContext:
contextType
contextWithType:
coolOffPeriod
copy
copyViewUnawarePeerInfo:
copyWithZone:
count
countByEnumeratingWithState:objects:count:
createAndSetRecoveryKeyWithContext:error:
createCustodianRecoveryKey:uuid:reply:
createInheritanceKey:uuid:reply:
createInheritanceKeyWithContext:completion:
createRecoveryKeyWithContext:forUUID:completion:
credentialForAccount:error:
credentialItemForKey:
currentKey
currentProcessHasEntitlement:
currentReachabilityStatus
custodianRecoveryInfo
custodianUUID
daemon
daemonConn
daemonWithErrorHandler:
daemonXPCEndpoint
dataUsingEncoding:
dataclassProperties
date
dateWithTimeIntervalSinceNow:
debugDescription
decodeBoolForKey:
decodeFloatForKey:
decodeIntegerForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
defaultCenter
defaultStore
deleteCache
deleteInheritanceAccessKeyWithContext:completion:
deleteKeychainItemsForDescriptor:error:
deleteRecoveryKey:
deleteRecoveryKeyWithContext:forUUID:completion:
deleteRecoveryKeyWithContext:uiProvider:completion:
deleteRecoveryKeyWithError:
description
desiresAllRecords
deviceClass
deviceColor
deviceEscrowRecordRecoverableWithContext:completion:
deviceIsAudioAccessory
deviceName
devicesThatLoseAccountAccessOnEnable
dictionary
dictionaryWithCapacity:
dictionaryWithObjects:forKeys:count:
didChangeStatus:error:
didJoinCircleAfterRecovery:
didUseSMSVerification
domain
dsid
duplexSession
enclosureColor
encodeBool:forKey:
encodeFloat:forKey:
encodeInteger:forKey:
encodeObject:forKey:
encodeWithCoder:
endpoint
errorWithDomain:code:userInfo:
escrowURL
failSignInOnError
fetchCliqueStatus:
fetchCliqueStatus:error:
fetchEscrowRecordDevicesWithContext:usingCache:completion:
fetchRecoveryKeyFromCacheForAltDSID:
fetchTermsAcceptanceForAccount:completion:
fetchUserControllableViewsSyncingEnabled:
findMyiPhoneUUID
finishCyrusFlowAfterTermsAgreementWithContext:
finishCyrusFlowAfterTermsAgreementWithContext:uiProvider:completion:
finishOfflineLocalSecretChangeWithCompletion:
finishOfflineLocalSecretChangeWithContext:uiProvider:completion:
firstName
followUpType
force
fullName
generateEscrowRecordReportUsingCache:completion:
generateEscrowRecordStatusReportForContext:usingCache:withCompletion:
generateInheritanceKey:uuid:reply:
generateNewRecoveryKey:
generateNewRecoveryKeyWithContext:uiProvider:completion:
generateRandomRecoveryKey:
generateRandomRecoveryKeyWithContext:completion:
generateRecoveryKey:
generateRecoveryKeyWithError:
generateRecoveryKeyWithInfo:error:
generateVerifierWithRecoveryKey:error:
generatedContext
getUserInformationWithContext:completion:
guestMode
handleCloudDataProtectionStateWithCompletion:
handleCloudDataProtectionStateWithContext:uiProvider:completion:
handleURLActionWithInfo:
handleURLActionWithInfo:completion:
hardwareModel
hasFullCDPSupport
hasLocalSecret
hasLocalSecretWithCompletion:
hasMixedSecretType
hasNonViewAwarePeers
hasNumericSecret
hasPeersForRemoteApproval
hasRecordViability
hasRecords
hash
iCloudEnv
iCloudEnvironment
icsc
idmsMasterKeyRecovery
idmsRecovery
init
initFromAccessKey:
initWithAccount:
initWithAltDSID:
initWithAltDSID:accountStore:accountManager:
initWithAuthenticationResults:
initWithCoder:
initWithContext:
initWithContext:clique:
initWithContext:handler:
initWithContext:validator:
initWithContextData:
initWithData:encoding:
initWithDefaultValues
initWithDescriptor:value:
initWithDeviceStatus:accountStatus:
initWithEscrowRecord:
initWithEvent:
initWithListenerEndpoint:
initWithLocaleIdentifier:
initWithMachServiceName:options:
initWithRecordPresence:recordViability:tlkRecoveryViability:sosViability:pcsRecoveryViability:
initWithRemoteObject:
initWithStatusToUpdate:
initWithUIProvider:
initWithUUIDString:
initWithValidatedSecret:secretType:
initWithWrappedKey:wrappingKey:uuid:error:
initWithWrappedKeyData:wrappingKeyData:uuid:error:
initWithWrappedKeyData:wrappingKeyString:uuid:error:
initWithWrappedRKC:wrappingKey:custodianUUID:
initWithXpcEndpoint:context:
integerValue
interfaceWithProtocol:
invalidate
isAttemptingBackupRestore
isBeneficiary
isBeneficiaryAccount
isBeneficiaryForAccount:
isDeviceEscrowRecordRecoverable:
isEqual:
isEqualToString:
isFederatedAccount
isHSA2Account
isHSA2Enabled:
isICDPEnabled
isICDPEnabledByCheckingWithServer:
isICDPEnabledForDSID:
isICDPEnabledForDSID:checkWithServer:
isICDPEnabledForDSID:checkWithServer:completion:
isInheritanceAccessKeyValid:
isKindOfClass:
isLastBackupMakingPeer:
isMainThread
isManateeAvailable:
isMemberOfClass:
isMultiUserManateeFeatureEnabled
isOTEnabledForContext:
isOTEnabledForContext:completion:
isObservingWalrusStatus
isPiggybackingRecovery
isRecoveryKeyAvailableWithCompletion:
isRecoveryKeyAvailableWithError:
isRecoveryKeySet:error:
isSilentEscrowRecordRepairEnabled
isSilentEscrowRecordRepairEnabledForAccount:
isSilentEscrowRecordViabilityRepairEnabled
isTTSURecovery
isUserVisibleKeychainSyncEnabled
isUserVisibleKeychainSyncEnabledWithCompletion:
isUsingMultipleiCSC
isWalrusEnabledWithOptions:error:
joinAfterRestore:
joinMethod
keychainItemForDescriptor:error:
leaveClique:
length
localSecret
localSecretChangedTo:secretType:completion:
localSecretChangedTo:secretType:context:uiProvider:completion:
localizedDescription
localizedName
localizedStringForKey:value:table:
lock
longLongValue
machineID
mainBundle
mandatesRecoveryKey
marketingModel
maxDeviceRecoveryAttempts
model
modelClass
modelVersion
mutableCopy
nonCachedSOSCircleStatus:
numberWithDouble:
numberWithInt:
numberWithInteger:
numberWithLongLong:
numberWithUnsignedInteger:
numberWithUnsignedLongLong:
numericSecretLength
objectForKey:
objectForKeyedSubscript:
osVersion
pairingChannelAcceptor
pairingChannelInitiator
password
passwordEquivToken
passwordResetTokenBackupForAccount:
pcsIdentityCreateWithInfo:error:
pcsIdentityMigrateToiCDPWithInfo:error:
pcsIdentitySetCompanionInCircle:error:
pcsIdentitySetIsInICDPLocal:error:
pcsIdentitySetIsInICDPNetwork:options:error:
pcsKeysForServices:completion:
pcsRecoveryViability
pcsRestoreLocalBackup:error:
pcsSynchronizeKeysWithInfo:error:
peerDeviceNamesByPeerID
peerDeviceNamesByPeerID:
peerId
peersHaveViewsEnabled:error:
performRecovery:
performRecoveryWithContext:uiProvider:authProvider:completion:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performSilentEscrowRecordRepairWithCompletion:
performSilentEscrowRecordRepairWithContext:completion:
performedFailureCDPStateMachineRun:error:reply:
performedSuccessfulCDPStateMachineRun:reply:
personIDForAltDSID:
platform
platformSupportsSOS
postFollowUpWithContext:completion:
postFollowUpWithContext:error:
postNotificationName:object:
postNotificationName:object:userInfo:
postNotificationName:object:userInfo:deliverImmediately:
preflightContext:
preflightRecoverOctagonUsingCustodianRecoveryKey:custodianRecoveryKey:reply:
preflightRecoverOctagonUsingInheritanceKey:inheritanceKey:reply:
prevailingLocalSecretType
primaryAccountAltDSID
primaryAccountDSID
primaryAccountFirstName
primaryAccountFullName
primaryAccountIsBeneficiary
primaryAccountNeedsEscrowRecordRepair
primaryAccountSecurityLevel
primaryAccountStashedPRK
primaryAccountUsername
primaryAppleAccount
primaryAuthKitAccount
propertiesForDataclass:
proxyWithAuthProvider:
reachabilityForInternetConnection
record
recordDate
recordID
recordInfo
recoverAndSynchronizeWithSquirrel:
recoverOctagonUsingCustodianInfo:completion:
recoverOctagonUsingCustodianRecoveryKey:custodianRecoveryKey:reply:
recoverOctagonUsingInheritanceKey:inheritanceKey:reply:
recoverOctagonWithContext:inheritanceKey:completion:
recoverSquirrelWithContext:uiProvider:completion:
recoverWithSquirrel:
recoveryKey
recoveryKeyDescriptor
recoveryKeyDescriptorForAltDSID:
recoveryStatus
registerCredentials
registerCredentialsIfMissing
remainingAttempts
remoteObjectProxyWithErrorHandler:
remoteSecret
removeCustodianRecoveryKey:custodianRecoveryKeyUUID:reply:
removeFriendsInClique:error:
removeInheritanceKey:inheritanceKeyUUID:reply:
removeNonViewAwarePeers:
removeNonViewAwarePeersFromCircleWithContext:completion:
removeObjectForKey:
removeThisDeviceFromCircle:
repairCloudDataProtectionStateWithCompletion:
repairCloudDataProtectionStateWithContext:uiProvider:completion:
repairType
reportFailure:
reportSuccess
representationForAccount:
representationForAltDSID:
requestToJoinCircle:
requestToJoinCircleAfterRestore:
requestToResetProtectedData:
requiresMoreViewData
resetAccountCDPState
resetAccountCDPStateAndSetSecret:
resetProtectedData:error:
respondsToSelector:
resume
resumeContext
retain
retainCount
rpdProbationDuration
rpdProbationFirstSeenDate
rpdProbationIsInEffectForDuration:
saveAccount:withCompletionHandler:
saveVerifiedAccount:error:
secretType
securityLevel
securityLevelChanged:forAltDSID:
securityLevelForAccount:
self
sendReport
sendReportWithError:
serialNumber
setAccessKey:
setAccount:
setAccountManager:
setAccountProperty:forKey:
setAccountStore:
setAltDSID:
setAppProvidedContext:
setAppleID:
setAuthProvider:
setAuthenticationAppleID:
setAuthenticationResults:
setBackupActivity:
setBeneficiaryIdentifier:
setBeneficiaryWrappedKeyData:
setBundleID:
setCachedLocalSecret:
setCachedLocalSecretType:
setCachedPassphraseMissing:
setClaimTokenData:
setClaimTokenString:
setClasses:forSelector:argumentIndex:ofReply:
setContext:
setCoolOffPeriod:
setCustodianRecoveryInfo:
setDaemonConn:
setDaemonXPCEndpoint:
setDateFormat:
setDevicesThatLoseAccountAccessOnEnable:
setDidUseSMSVerification:
setDsid:
setDuplexSession:
setEnclosureColor:
setEndpoint:
setEscrowDeviceCount:
setFailSignInOnError:
setFindMyiPhoneUUID:
setFollowUpType:
setForce:
setGuestMode:
setHasNumericSecret:
setHasPeersForRemoteApproval:
setHasRandomSecret:
setIcsc:
setIdmsMasterKeyRecovery:
setIdmsRecovery:
setInterface:forSelector:argumentIndex:ofReply:
setInterruptionHandler:
setInvalidationHandler:
setInvisible:
setIsAttemptingBackupRestore:
setIsBeneficiaryAccount:
setIsCurrentDevice:
setIsFederatedAccount:
setIsHSA2Account:
setIsUsingMultipleiCSC:
setIsValid:
setIsWalrusEnabled:
setItemAccessible:
setItemClass:
setLocale:
setLocalizedDescription:
setLocalizedName:
setMachineID:
setMandatesRecoveryKey:
setMaxDeviceRecoveryAttempts:
setModel:
setModelClass:
setModelVersion:
setNumericSecretLength:
setObject:forKeyedSubscript:
setOsVersion:
setPassword:
setPasswordEquivToken:
setPasswordEquivalentToken:
setPlatform:
setRecord:
setRecordDate:
setRecordID:
setRecordInfo:
setRecoveryStatus:
setRemainingAttempts:
setRemoteObjectInterface:
setRemoteSecret:
setRepairType:
setResumeContext:
setRpdProbationDuration:
setRpdProbationFirstSeenDate:
setSerialNumber:
setService:
setSharingChannel:
setShouldNotify:
setSimplePublicKey:
setSupportedEscapeOfferMask:
setSupportsSkipSignIn:
setSynchronizable:
setSysBound:
setTimeZone:
setTotalRecoveryAttempts:
setType:
setUiProvider:
setUiProviderProxy:
setUseCachedAccountStatus:
setUseDataProtection:
setUserAcceptedDevicesToLoseAccountAccess:
setUserControllableViewsSyncStatus:error:
setUserCredentialsAndDSID:password:error:
setUserVisibleKeychainSyncEnabled:withCompletion:
setValidEscrowDeviceCount:
setViewsWithEnableSet:disableSet:
setWalrusEnabled:accountIdentifier:options:error:
setWalrusStatus:
setWebAccessStatus:
setWithArray:
setWithObject:
setWrappedKeyData:
setWrappedKeyString:
setWrappingKeyData:
setWrappingKeyString:
set_alwaysCreateEscrowRecord:
set_authProvider:
set_disableAsyncSecureBackupEnrollment:
set_ignoreLockAssertErrors:
set_recoveryToken:
set_skipEscrowFetches:
set_supportsCustodianRecovery:
set_useSecureBackupCachedPassphrase:
setupDictionaryWithContext:
setupPairingChannelAsAcceptor:
sharedInstance
sharingChannel
shouldDisplayToUser
shouldNotify
shouldOpenGate
shouldPerformRepairForContext:forceFetch:completion:
shouldPerformRepairWithOptionForceFetch:completion:
shouldPerformRepairWithOptionForceFetch:error:
shouldPerformSilentEscrowRecordRepair
shouldPerformSilentEscrowRecordRepairUsingCache:completion:
shouldPerformSilentEscrowRecordRepairUsingCache:error:
shouldPerformSilentEscrowRecordRepairWithContext:usingCache:completion:
silentEscrowRecordRepairEnabledWithCompletion:
sosViability
sos_circleStatus:
startCircleApplicationApprovalServer:
startCircleApplicationApprovalServerSkipEscrowFetches:
startCircleApplicationApprovalServerWithContext:completion:
startObservingWalrusStateChangeNotification
startObservingWebAccessStateChangeNotification
startSilentEscrowRecordRepairWithCompletion:
startSilentEscrowRecordRepairWithContext:completion:
stashedPRK
statusForDataPrivacyWithCompletion:
statusToSet
stringByAppendingString:
stringValue
stringWithFormat:
stringWithUTF8String:
superclass
supportedEscapeOfferMask
supportedEscapeOfferMaskCompletion:
supportsSecureBackupRecovery
supportsSecureCoding
supportsSkipSignIn
synchronizeCircleViews
synchronousDaemonWithErrorHandler:
synchronousRemoteObjectProxyWithErrorHandler:
timeIntervalSinceDate:
timeZoneForSecondsFromGMT:
tlkRecoveryViability
totalRecoveryAttempts
tryRegisteringCredentials
tryUserCredentialsAndDSID:password:error:
type
uiProvider
unarchivedDictionaryWithKeysOfClasses:objectsOfClasses:fromData:error:
unlock
unsignedIntValue
unsignedIntegerValue
unsignedLongValue
updateDataPrivacyWithContext:completion:
updateDataPrivacyWithContext:shouldContinue:completion:
updateLastSilentEscrowRecordRepairAttemptDate:context:completion:
updateLastSilentEscrowRecordRepairAttemptDate:error:
updateWalrusStatus:completion:
updateWebAccessStatus:completion:
updateWithAuthenticationResults:
updatedReportWithRecord:isDeviceRecord:
updatedReportWithViews:forDeviceRecord:
userAcceptedDevicesToLoseAccountAccess
userDidCancelWithError:
userDidEnterValidSecret:type:
userInfo
username
uuid
validEscrowDeviceCount
validateAccessKey:withContext:completion:
validateCustodianRecoveryInfo:withCompletion:
validateRecoveryKey:withCompletion:
validateRecoveryKey:withContext:completion:
validateSecret:devices:type:withCompletion:
value
verifyRecoveryKey:
verifyRecoveryKeyWithContext:uiProvider:completion:
waitForInitialSync:
waitForOctagonUpgrade:
waitForPriorityViewKeychainDataRecovery:
waitForUpdate
walrusStatus
walrusStatus:
walrusStatusWithCompletion:
walrusStatusWithContext:completion:
webAccessStatus:
webAccessStatusWithCompletion:
wrappedKey
wrappedKeyData
wrappedKeyString
wrappedRKC
wrappingKey
wrappingKeyString
zone
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
^{_PCSIdentitySetData=}32@0:8@16^@24
B40@0:8^{_PCSIdentitySetData=}16@24^@32
B32@0:8^{_PCSIdentitySetData=}16^@24
B32@0:8@16^@24
B44@0:8B16@20@28^@36
^{_PCSIdentitySetData=}32@0:8@"NSDictionary"16^@24
B40@0:8^{_PCSIdentitySetData=}16@"NSDictionary"24^@32
B32@0:8@"NSDictionary"16^@24
B44@0:8B16@"NSString"20@"NSDictionary"28^@36
B32@0:8@?16^@24
@24@0:8@16
@40@0:8@16@24@32
B20@0:8B16
v24@0:8@?16
@40@0:8#16@24@?32
@48@0:8#16@24@?32@?40
@52@0:8#16@24@?32B40@44
@60@0:8#16@24@?32B40@44@?52
@64@0:8#16@24@?32@40@48@?56
@56@0:8#16@24@32@40^B48
v56@0:8@16@24@32@40@?48
@40@0:8@16@24^@32
@40@0:8@16#24^@32
v24@0:8@16
v16@0:8
@"ACAccount"
@"NSString"
@"ACAccountStore"
@"AKAccountManager"
v32@0:8@16@?24
v32@0:8@16@24
v40@0:8@16@24@?32
v44@0:8@16@24B32@36
v40@0:8@16@24@32
v48@0:8@16B24@28B36@40
v48@0:8@16@24q32@?40
v32@0:8@"CDPContext"16@?<v@?@"CDPLocalSecret"@"NSError">24
v32@0:8@"CDPContext"16@"<CDPLocalDeviceSecretHandlerProtocol>"24
v40@0:8@"CDPContext"16@"<CDPRemoteDeviceSecretValidatorProtocol>"24@?<v@?B@"NSError">32
v44@0:8@"CDPContext"16@"NSArray"24B32@"<CDPRemoteDeviceSecretValidatorProtocol>"36
v40@0:8@"CDPRecoveryFlowContext"16@"NSArray"24@"<CDPRemoteDeviceSecretValidatorProtocol>"32
v48@0:8@"CDPContext"16B24@"NSNumber"28B36@"<CDPRemoteDeviceSecretValidatorProtocol>"40
v32@0:8@"CDPContext"16@?<v@?B@"NSError">24
v32@0:8@"CDPContext"16@?<v@?@"NSDictionary"@"NSError">24
v40@0:8@"CDPContext"16@"NSError"24@?<v@?q>32
v48@0:8@"CDPContext"16@"NSError"24q32@?<v@?q>40
v40@0:8@"CDPContext"16@"<CDPRecoveryKeyValidatorInternal>"24@?<v@?B@"NSError">32
v40@0:8@"CDPContext"16@"<CDPRemoteDeviceSecretValidatorProtocolInternal>"24@?<v@?B@"NSError">32
v32@0:8@"CDPContext"16@?<v@?@"AKInheritanceAccessKey"@"NSError">24
v32@0:8@"CDPContext"16@?<v@?Q@"NSError">24
v32@0:8@16Q24
v32@0:8@"NSString"16Q24
v24@0:8@"NSError"16
v48@0:8@16@24Q32@?40
v24@0:8Q16
v48@0:8@"NSString"16@"NSArray"24Q32@?<v@?BB@"NSError">40
v32@0:8@"NSString"16@?<v@?BB@"NSError">24
v24@0:8@?<v@?B@"NSError">16
v24@0:8@"CDPLocalSecret"16
v24@0:8@?<v@?Q>16
v32@0:8@"CDPCustodianRecoveryInfo"16@?<v@?B@"NSError">24
@24@0:8^@16
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v24@0:8@?<v@?@"NSString"@"NSError">16
@"NSString"24@0:8^@16
B32@0:8@"NSString"16^@24
v32@0:8@"CDPContext"16@?<v@?@"CDPContext"@"NSError">24
v40@0:8@"CDPContext"16@"NSString"24@?<v@?@"NSDictionary"@"NSError">32
v36@0:8@16B24@?28
v56@0:8@16Q24@32@40@?48
Vv24@0:8@?16
v28@0:8B16@?20
v48@0:8@16@24@32@?40
Vv32@0:8@16@?24
Vv36@0:8@16B24@?28
Vv32@0:8Q16@?24
Vv40@0:8@16@24@?32
v40@0:8@"CDPContext"16@"<CDPStateUIProviderInternal>"24@?<v@?BB@"NSError">32
v40@0:8@"CDPContext"16@"<CDPStateUIProviderInternal>"24@?<v@?B@"NSError">32
v36@0:8@"CDPContext"16B24@?<v@?B@"NSError">28
v56@0:8@"NSString"16Q24@"CDPContext"32@"<CDPStateUIProviderInternal>"40@?<v@?B@"NSError">48
v40@0:8@"NSString"16@"CDPContext"24@?<v@?B@"NSError">32
v32@0:8@"CDPContext"16@?<v@?@"NSString"@"NSError">24
Vv24@0:8@?<v@?B@"NSError">16
v36@0:8@"NSString"16B24@?<v@?B>28
v24@0:8@?<v@?B>16
v28@0:8B16@?<v@?B@"NSError">20
v48@0:8@"CDPContext"16@"<CDPStateUIProviderInternal>"24@"<CDPAuthProviderInternal>"32@?<v@?@"NSDictionary"@"NSError">40
v32@0:8@"CDPFollowUpContext"16@?<v@?B@"NSError">24
Vv24@0:8@?<v@?Q@"NSError">16
Vv32@0:8@"CDPUpdateDataPrivacyContext"16@?<v@?@"CDPUpdateDataPrivacyContext"@"NSError">24
Vv36@0:8@"CDPContext"16B24@?<v@?@"NSArray"@"NSError">28
Vv32@0:8@"CDPContext"16@?<v@?@"NSError">24
Vv32@0:8@"CDPContext"16@?<v@?Q@"NSError">24
Vv32@0:8Q16@?<v@?@"NSError">24
Vv32@0:8@"NSArray"16@?<v@?@"NSDictionary"@"NSError">24
v32@0:8@"NSDictionary"16@?<v@?@"NSError">24
v32@0:8@"ACAccount"16@?<v@?@"NSDictionary"@"NSError">24
Vv36@0:8@"CDPContext"16B24@?<v@?B@"NSError">28
Vv32@0:8@"CDPContext"16@?<v@?B@"NSError">24
Vv40@0:8@"NSDate"16@"CDPContext"24@?<v@?B@"NSError">32
v36@0:8@"CDPContext"16B24@?<v@?@"CDPEscrowRecordReport"@"NSError">28
@32@0:8@16@24
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v20@0:8B16
@24@0:8^{_NSZone=}16
v24@0:8q16
q16@0:8
I16@0:8
v20@0:8I16
@"CDPCABackupRecoveryReporter"
@"NSDictionary"
@"NSNumber"
@"NSUUID"
@"<CDPAuthProviderInternal>"
@"KCAESGCMDuplexSession"
@"AKCircleRequestContext"
@"CUMessageSession"
@"CDPCustodianRecoveryInfo"
@"NSData"
Q24@0:8^@16
i24@0:8^@16
@32@0:8@16^@24
B24@0:8^@16
B32@0:8@16@24
B28@0:8B16^@20
@"NSDictionary"16@0:8
v24@0:8@"OTClique"16
@"NSString"32@0:8@"NSDictionary"16^@24
@"NSDictionary"32@0:8@"NSString"16^@24
@"OTClique"24@0:8^@16
B32@0:8@"NSSet"16^@24
B32@0:8@"NSSet"16@"NSSet"24
@"KCPairingChannel"16@0:8
v32@0:8@"CDPCustodianRecoveryInfo"16@?<v@?@"NSError">24
@"CDPContext"16@0:8
Q20@0:8i16
Q24@0:8q16
q24@0:8^@16
@"OTClique"
@"CDPContext"
@"<CDPRemoteDeviceSecretValidatorProtocol>"
B28@0:8@16B24
@"<CDPAuthProvider>"
@24@0:8Q16
@"NSArray"
v24@0:8@?<v@?Q@"NSError">16
v32@0:8Q16@?24
v32@0:8Q16@?<v@?@"NSError">24
B24@0:8d16
@"<CDPStateUIProvider>"
@"CDPDaemonConnection"
@"NSDate"
@"OTEscrowRecord"
B24@0:8q16
@24@0:8q16
@32@0:8q16@24
v32@0:8Q16@24
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@52@0:8B16Q20Q28Q36Q44
@28@0:8@16B24
@"CDPEscrowRecordViability"
d24@0:8Q16
@"NSMutableDictionary"
{mach_timebase_info="numer"I"denom"I}
B40@0:8@16@24^@32
@"AAFKeychainManager"
@"<CDPLocalDeviceSecretHandlerProtocol>"
@"<CDPRecoveryKeyValidator>"
v40@0:8@16@?24@?32
v40@0:8@"CDPContext"16@"<CDPRecoveryKeyValidator>"24@?<v@?B@"NSError">32
v44@0:8@"CDPContext"16@"NSArray"24B32@"CDPRemoteDeviceSecretValidator"36
v40@0:8@"CDPRecoveryFlowContext"16@"NSArray"24@"CDPRemoteDeviceSecretValidator"32
v48@0:8@"CDPContext"16B24@"NSNumber"28B36@"CDPRemoteDeviceSecretValidator"40
v32@0:8@"CDPContext"16@"CDPLocalDeviceSecretHandler"24
v32@0:8@"CDPContext"16@"CDPRemoteDeviceSecretValidator"24
v32@0:8@"CDPContext"16@?<v@?>24
@"AKInheritanceAccessKey"
d16@0:8
v24@0:8d16
v28@0:8B16@20
v28@0:8B16@"NSString"20
v28@0:8B16Q20
v32@0:8r*16@24
@"<CDPDCircleProxy>"
v40@0:8@16Q24@?32
@"<CDPLocalDeviceSecretProxy>"
@"CDPStateUIProviderProxy"
@24@0:8@?16
@"NSXPCConnection"
@"NSLock"
@"NSXPCListenerEndpoint"
@32@0:8@16Q24
@(#)PROGRAM:CoreCDP  PROJECT:CoreCDP-1
"setting companion in circle"
"pcsIdentitySetupWithInfo:"
"pcsIdentityMigrateToiCDPWithInfo:"
"pcsSynchronizeKeysWithInfo:"
"pcsRestoreLocalBackup:"
"Failed to create PCS identity with error: %@"
"Unable to create CDPAccountRepresentation instance due to nil Apple account (%@) or AuthKit account (%@)"
"%@: Assuming silent escrow record repair is disabled"
"%@: Returning %@ for 'isSilentEscrowRecordRepairEnabled'"
"%@: Silent escrow record repair is disabled by server, returning NO"
"%@: Could not determine if device needs escrow repair with invalid context"
"%@: Failed to check if escrow record repair is needed with error (%@)"
"%@: Checked if escrow record repair is needed (%{BOOL}d)"
"%@: Unable to generate context for account (%@) with no DSID"
"%@: Generated context (%@) for account with DSID (%@)"
cdp/enabled-status-check
"%@: Failed to check if iCDP is enabled for account with DSID (%@) with error (%@)"
"%@: Checking iCDP status for account with DSID (%@), will check with server (%{BOOL}d)"
"%@: iCDP status for account with DSID (%@) is %@"
"%@: Unable to check 'silentEscrowRecordRepairEnabled' because AKAccountManager (%@) doesn't respond to selector"
"%@: Returning cached 'silentEscrowRecordRepairEnabled' value (%@) from account (%@)"
"%@: Calling to fetch user info for altDSID (%@) for 'silentEscrowRecordRepairEnabled' value"
"%@: Unable to fetch user info with context because AKAppleIDAuthenticationController (%@) doesn't respond to selector"
"Failed to fetch user info for altDSID (%@) with error (%@)"
"Returning server fetched 'silentEscrowRecordRepairEnabled' value (%@) for altDSID (%@)"
"%@: Unable to check 'silentEscrowRecordRepairEnabled' because AKUserInformation (%@) doesn't respond to selector"
"%@: Calling value producer for key (%@)"
"%@: Called value producer for key (%@) and received value (%@)"
"%@: No cached property for key (%@) was found on account (%@)"
"%@: Failed to deserialize property dictionary for key (%@) from data (%@) with error (%@)"
"%@: Expected lastModifiedDate value in cached property dictionary (%@) for key (%@)"
"%@: Found nil property value in cached property dictionary (%@) for key (%@)"
"%@: Returned cached property value (%@) for key (%@)"
"%@: Cached property value (%@) for key (%@) is stale (lastModifiedDate [%@] < staleModifiedDate [%@])"
"%@: Failed to serialize property dictionary for key (%@) with error (%@)"
"Successfully saved cached property value (%@) for key (%@) on account (%@)"
"Failed to save cached property value (%@) for key (%@) on account (%@) with error (%@)"
"%@: Failed to archive property dictionary (%@) with error (%@)"
"%@: Failed to unarchive data (%@) with error (%@)"
"CDPFollowUpContext: set altDSID to %@"
"Incoming context is nil, returning primary account context."
"Preflighting invalid context: dsid & altDSID missing. Amending with primary account details."
"Preflighting invalid context: altDSID missing"
"Preflighting context with altDSID: %@"
"Preflighting context with dsid %@ for a non-primary acccount.. dragons may be ahead"
"CircleProxyImpl init is missing required cliqueConfiguration. Problems lie ahead 
"CircleProxyImpl init is missing required dsid. Barring no primary account, problems lie ahead 
"CDPCircleProxyImpl: appleID:%@, dsid: %@, type: %ld"
"Circle status check failed with error: %@"
"Failed to retrieve cachedCliqueStatus: %@"
"Call to cachedCliqueStatus returned a status: %@"
 enableTelemetry=YES 
BEGIN [%lld]: CachedCircleStatus  enableTelemetry=YES 
 status=%{public,signpost.telemetry:number1,name=status}d 
CachedCircleStatus
END [%lld] %fs: CachedCircleStatus  status=%{public,signpost.telemetry:number1,name=status}d 
"Beneficiary account detected. Faking cached SOS circle status."
"Checking circle status with SOSCCThisDeviceIsInCircle"
"Failed to check circle status: %@"
"Call to SOSCCThisDeviceIsInCircle returned a status: %d"
"Checking combined circle status"
"%s (%d) called"
"Clique waitForOctagonUpgrade %{BOOL}d with error %{public}@"
"This is not an HSA2 account, not calling waitForOctagonUpgrade"
"Reporting success for %@"
"Reporting failure for %@"
BEGIN [%lld]: CircleStatus  enableTelemetry=YES 
"Checking clique status with fetchCliqueStatus from %@"
"Call to fetchCliqueStatus returned a status: %@"
CircleStatus
END [%lld] %fs: CircleStatus  status=%{public,signpost.telemetry:number1,name=status}d 
"Beneficiary account detected. Faking non-cached SOS circle status."
BEGIN [%lld]: SOSCircleStatus  enableTelemetry=YES 
SOSCircleStatus
END [%lld] %fs: SOSCircleStatus  status=%{public,signpost.telemetry:number1,name=status}d 
BEGIN [%lld]: SynchronizeCircleViews  enableTelemetry=YES 
"Skipping initial sync because we are not in a circle"
"Skipping initial sync because it is not supported by this platform"
"Calling SOSCCWaitForInitialSync to wait for views to sync"
"Finished calling SOSCCWaitForInitialSync didSync=%i error=%@"
"We failed to sync and now we failed to remove self form circle, nothing good will happen here"
"We failed to sync but managed to get out of the circle, hopefully the next attempt will work"
 didSync=%{public,signpost.telemetry:number1,name=didSync}d 
SynchronizeCircleViews
END [%lld] %fs: SynchronizeCircleViews  didSync=%{public,signpost.telemetry:number1,name=didSync}d 
"Attempting to remove self from circle"
"Removed device from circle successfully"
"Failed to remove self from circle - %@"
"Failed to check for non-view-aware peers with error %@"
"Removed old peers from circle: %@"
"Failed to remove old peers from circle with error %@ (peers: %@)"
"Failed to check for non-view-aware peers before removing them from circle with error %@"
"_registerCredentialsOnlyIfNeeded: appleID:%@, dsid: %@, type: %ld"
"Calling SOSCCSetUserCredentialsAndDSID"
BEGIN [%lld]: SetUserCredentialsAndDSID  enableTelemetry=YES 
"Failed to call SOSCCSetUserCredentialsAndDSID with error %@"
 Error=%{public,signpost.telemetry:number1,name=Error}d 
SetUserCredentialsAndDSID
END [%lld] %fs: SetUserCredentialsAndDSID  Error=%{public,signpost.telemetry:number1,name=Error}d 
"Security indicated that no credential is needed nor did we force"
"Skipping registering credentials, insufficient parameters"
BEGIN [%lld]: TryUserCredentialsAndDSID  enableTelemetry=YES 
"Registered credentials through try attempt"
"Failed to call SOSCCTryUserCredentialsAndDSID with error %@"
TryUserCredentialsAndDSID
END [%lld] %fs: TryUserCredentialsAndDSID  Error=%{public,signpost.telemetry:number1,name=Error}d 
"Skipping try registering credentials, insufficient parameters"
"Security requires credentials..."
"Obtaining recovery key from security for custodian recovery with UUID: %@"
"Failed to obtain custodian recovery key from security with error: %@"
"Attempting to recover octagon usign custodian recovery key"
"Not implemented"
cdp: enabled status check
"XPC Error while checking if iCDP is enabled for DSID %@: %@"
"Checking iCDP status for DSID %@ (checkWithServer=%i)"
"iCDP status for DSID %@ is %@"
OctagonStatus
BEGIN [%lld]: OctagonStatus  enableTelemetry=YES 
"XPC Error while checking if OT is enabled: %@"
"Checking OT status"
END [%lld] %fs: OctagonStatus  Error=%{public,signpost.telemetry:number1,name=Error}d 
"Creating context for %@"
"Fetching PRK for primary Account"
"Escrowing a previously backed up PRK"
"Something went wrong... (%@) could not find a stashed token for primary Account: <%@ : %@>"
"MUManatee: Creating context for %@"
"Starting token renewal"
"Token completion block called"
"Starting MRK verification for %@"
"MRK verification completion block called"
"CDPCustodianController init is missing required dsid. Unable to process request, problems lie ahead 
"Asking security to create custodian recovery key for %@"
CustodianCreateRecoveryKey
BEGIN [%lld]: CustodianCreateRecoveryKey  enableTelemetry=YES 
END [%lld] %fs: CustodianCreateRecoveryKey  Error=%{public,signpost.telemetry:number1,name=Error}d 
"Error creating custodian recovery key: %@"
"Asking security to delete custodian recovery key for %@"
CustodianDeleteRecoveryKey
BEGIN [%lld]: CustodianDeleteRecoveryKey  enableTelemetry=YES 
END [%lld] %fs: CustodianDeleteRecoveryKey  Error=%{public,signpost.telemetry:number1,name=Error}d 
"Error deleting custodian recovery key: %@"
"Deleted custodian recovery key: for %@"
"CDPCustodianController init is missing required dsid. Unable to process preflight request"
"Error validating custodian recovery key: %@"
"Custodian recovery key is valid for: %@"
"Generating Inheritance access key for CDP account. Beneficiary: %@"
"Generating Inheritance access key for non-CDP account - not saved on OT. Beneficiary: %@"
"Creating the access key for beneficiary: %@"
"Unable to create the access key without access string or data."
"Attempting to recover Octagon with the inheritance key."
"Error validating inheritance key: %@"
"Inheritance key valid for beneficiary: %@"
Walrus: Fetching status.
"XPC Error while fetching walrus status."
"Failed to fetch walrus status with error: %@"
"Walrus status - %lu"
"Failed to fetch walrus status with error - %@"
Walrus: Updating status
"XPC Error while updating walrus status."
"Failed to update walrus status with error %@"
"Walrus status update has been completed successfully."
Walrus: Fetch PCS Identities
"XPC Error while fetching PCS identities - %@"
"Failed to fetch PCS identities for services %@ with error: %@"
Web access: Fetching status.
"XPC Error while fetching web access status."
"Failed to fetch web access status with error: %@"
"Web access status - %lu"
"Failed to fetch web access status with error - %@"
Web access: Updating status
"XPC Error while updating web access status."
"Failed to update web access status with error %@"
"Web access status update has been completed successfully."
"RPD Probation: date from accountProperties: %@"
"RPD Probation: Set date in accountProperties: %@"
"Failed to set RPD Probation date: %@"
"RPD Probation: Elapsed time since user first exhausted all recovery options: %f"
"RPD Probation period: %f secs"
"RPD Probation: Can show RPD option: %f >= %f = %{BOOL}d"
"Attempted to present CDPUI with incomplete uiProvider: %s"
LocalSecretCollect
BEGIN [%lld]: LocalSecretCollect  enableTelemetry=YES 
END [%lld] %fs: LocalSecretCollect 
"CDPUIProvider does not respond to promptForLocalSecretWithCompletion, falling back to handler: %s"
"CDPUIProvider does not respond to promptForLocalSecretWithHandler either: %s"
"Warning: UI provider %@ does not respond to selector cdpContext:promptForRemoteSecretWithDevices:offeringRemoteApproval:validator:"
"Warning: UI provider %@ does not respond to selectors cdpRecoveryFlowContext:promptForRemoteSecretWithDevices:validator: and cdpContext:promptForRemoteSecretWithDevices:offeringRemoteApproval:validator:"
"Bailed out of interactive authentication. Preventing appearance of prompt because network is unreachable."
"Attempting to show error: %@"
"Warning: UI provider %@ does not respond to selector cdpContext:showError:withCompletion:"
"Warning: UI provider %@ does not respond to selector cdpContext:showError:withDefaultIndex:withCompletion:"
cdp: post follow up
"XPC Error posting a follow up: %@"
"Posted follow ups (%{BOOL}d) with error: %@"
cdp: clear follow up
"XPC Error cleaning up follow ups: %@"
"Cleared follow ups (%{BOOL}d) with error: %@"
"Invalidating connection"
"iCloud Env missing, bad things to come..."
"Auth Token missing, bad things to come..."
"Base URL missing, bad things to come..."
"Creating the access code from data."
"Creating the access code from string."
"Error creating key from access key string. Error - %@"
"Already observing walrus state change notification."
"Starting to observe walrus state change notification."
"Starting to observe OT peer change notification."
"Not yet started to observe walrus state change notification."
"Stopping to observe walrus state change notification."
"Stopping to observe OT peer change notification."
"Walrus state change notification received, posting local notification."
"Checking viability. hasRecordViability = (%{BOOL}d), hasMachineId = (%{BOOL}d)"
"Record is not viable."
@"%{public}@ Found PCS view"
@"%{public}@ Found SOS view"
@"%{public}@ All view viability checks passed"
"Already observing web access state change notification."
"Starting to observe web access state change notification."
"Not yet started to observe web access state change notification."
"Stopping to observe web access state change notification."
"Web access state change notification received, posting local notification."
"Already sent CDPCA event %@"
"Sending report %@ (time: %f), data - %@"
"Attempting to validate secret using validator %@"
"Validator returned response of isValid=%i canRetry=%i error=%@ ... dispatching completion block on to main queue"
"Invoking validateSecret:devices:type:withCompletion: completion block on the main queue"
"Attempting to validate recovery key using validator %@"
"Invoking validateRecoveryKey:withCompletion: completion block on the main queue"
"Attempting to validate custodian recovery info using validator %@"
"InvokingvalidateCustodianRecoveryInfo:withCompletion: completion block on the main queue"
"Requesting approval from another device..."
"Cancelling request for remote approval..."
"Requesting reset of CDP account state..."
"Cancelling validation with error %@"
"Supported Escape Offers: %lu"
"Cached RK with error: %@"
"Failed to fetch RK from cache: %@"
"Cleared RK cache with error: %@"
cdp/saveTermsAcceptance
"Saving of terms acceptance completed with error %@"
"XPC Error while attempting to save terms info: %@"
cdp/fetchTermsAcceptance
"Fetched terms acceptance completed with error %@ and result %@"
"XPC Error while attempting to fetch terms info: %@"
DataPrivacy: checking status of complete data privacy
"XPC Error while checking status for complete data privacy."
"Error getting status for complete data privacy - %@"
"Status for complete data privacy - %lu"
DataPrivacy: Update data privacy status
"XPC Error while updating data privacy."
"User declined losing access to devices."
"Error updating data privacy state without user's consent on devices that lose access."
"Error updating data privacy status - %@"
"Complete data privacy update."
cdp: Keychain Status Check
"XPC Error while checking if user-visible keychain sync is enabled: %@"
"Checking user-visible keychain sync status"
"User-visible keychain sync status is %@"
cdp: Keychain Status Change
"Setting user-visible keychain sync to %@"
"User-visibile keychain sync set to %@"
"Failed to set user-visibile keychain sync set to %@: %@"
cdp: Remove Legacy Peers
"XPC Error while remove non-view-aware peers: %@"
"Removing non-view-aware peers from the circle"
"Successfully removed non-view-aware peers from the circle"
"Failed to remove non-view-aware peers from the circle: %@"
"Trying to determine manatee availability for altDSID: %@"
"Checking security eligibility state..."
"We are HSA2, but Security is not ready, waiting for Security state resolution..."
"We are no longer HSA2, reporting not eligible"
"Processing circle status change to calculate manatee availability"
"Processed circle state change event"
"Processing circle view change event"
"Processed circle view change event"
"All systems are not go... Manatee not available"
"All systems go!!! Manatee available"
"Sending %s, value: %@"
cdp/manatee-availability
"Requesting manatee state..."
"Manatee is not available, error: %@"
"Manatee is available"
cdp/statemachine-handle
HandleCloudDataProtectionState
BEGIN [%lld]: HandleCloudDataProtectionState  enableTelemetry=YES 
END [%lld] %fs: HandleCloudDataProtectionState  Error=%{public,signpost.telemetry:number1,name=Error}d 
"State machine completed shouldCompleteSignIn=%{BOOL}d cloudDataProtectionEnabled=%{BOOL}d error=%@"
"XPC Error while starting state machine: %@"
"Requesting start of CDP state machine..."
cdp/statemachine-repair
RepairCloudDataProtectionState
BEGIN [%lld]: RepairCloudDataProtectionState  enableTelemetry=YES 
END [%lld] %fs: RepairCloudDataProtectionState  Error=%{public,signpost.telemetry:number1,name=Error}d 
"State machine repair completed didRepair=%{BOOL}d error=%@"
"XPC Error while repairing state: %@"
"Requesting repair of CDP state..."
"XPC Error while accepting sharing session: %@"
"Requesting start of accepting sharing session..."
"Requesting start of accepting sharing session, skipping escrow fetches..."
"Requesting repair and synchronization of CDP state with Squirrel..."
"Requesting repair of CDP state with Squirrel..."
"XPC Error while attempting to escrow preRecord: %@"
"Informing daemon of attempting to escrow preRecord..."
"XPC Error while updating local secret: %@"
"Informing daemon of local secret change..."
"Attempting to finish offline local secret change..."
"XPC Error while finishing Cyrus secure terms flow: %@"
"Attempting to finish secure terms flow for %@ with type %ld"
cdp: repair state check
"XPC Error while checking recovery existence: %@"
cdp/should-perform-repair
"Failed to get remote object proxy for CDP daemon: %@"
"Requesting to check if repair should be performed on the CDP state"
cdp/generate-escrow-record-report
 enableTelemetry=YES  UseCache=%{public,signpost.telemetry:number2,name=UseCache}d 
GenerateEscrowRecordReport
BEGIN [%lld]: GenerateEscrowRecordReport  enableTelemetry=YES  UseCache=%{public,signpost.telemetry:number2,name=UseCache}d 
END [%lld] %fs: GenerateEscrowRecordReport  Error=%{public,signpost.telemetry:number1,name=Error}d 
"Failed to generate escrow record report: %{public}@"
"Generating escrow record report (usingCache: %{BOOL}d)"
cdp/generate-rk
"XPC Error while generating a recovery key: %@"
"Attempting to generate a new recovery key"
cdp/delete-rk
"XPC Error while deleting a recovery key: %@"
"Attempting to delete a recovery key"
cdp/verify-rk
"XPC Error while verifying a recovery key: %@"
"Attempting to verify the recovery key"
"XPC Error while fetching recovery key state: %@"
cdp/rk-availability
"Attempting to fetch recovery key state"
"Failed to fetch recovery key availability with error %@"
"Recovery key availability - %{BOOL}d"
"XPC Error while fetching recovery key availability."
"Handling URL action: %@"
cdp/fetch-escrow-devices
"Requesting list of escrow-record associated devices"
cdp/device-escrow-record-recoverable
"Checking for the current device's ecrow record being recoverable"
cdp/synchronous-device-escrow-record-recoverable
"%@: Failed to find recoverable escrow record for current device with error (%@)"
"%@: Checking current device's escrow record recoverability"
cdp/should-perform-silent-escrow-record-repair-sync
ShouldPerformSilentEscrowRecordRepairSync
BEGIN [%lld]: ShouldPerformSilentEscrowRecordRepairSync  enableTelemetry=YES 
END [%lld] %fs: ShouldPerformSilentEscrowRecordRepairSync  Error=%{public,signpost.telemetry:number1,name=Error}d 
"Failed to check if escrow record repair is needed with error: %@"
"Escrow record repair is needed: %{BOOL}d"
"Synchronously checking if silent escrow record repair should be performed (usingCache: %{BOOL}d)"
cdp/should-perform-silent-escrow-record-repair-async
ShouldPerformSilentEscrowRecordRepairAsync
BEGIN [%lld]: ShouldPerformSilentEscrowRecordRepairAsync  enableTelemetry=YES 
END [%lld] %fs: ShouldPerformSilentEscrowRecordRepairAsync  Error=%{public,signpost.telemetry:number1,name=Error}d 
"Should perform silent escrow record repair: %{BOOL}d"
"Checking if silent escrow record repair should be performed (usingCache: %{BOOL}d)"
cdp/start-silent-escrow-record-repair
StartSilentEscrowRecordRepair
BEGIN [%lld]: StartSilentEscrowRecordRepair  enableTelemetry=YES 
END [%lld] %fs: StartSilentEscrowRecordRepair  Error=%{public,signpost.telemetry:number1,name=Error}d 
"Successfully started silent escrow record repair"
"Failed to start silent escrow record repair: %@"
"Requesting start of silent escrow record repair..."
cdp/perform-silent-escrow-record-repair
PerformSilentEscrowRecordRepair
BEGIN [%lld]: PerformSilentEscrowRecordRepair  enableTelemetry=YES 
END [%lld] %fs: PerformSilentEscrowRecordRepair  Error=%{public,signpost.telemetry:number1,name=Error}d 
"Successfully performed silent escrow record repair"
"Failed to perform silent escrow record repair: %@"
"Performing silent escrow record repair..."
cdp/update-last-silent-escrow-record-repair-attempt-date
"Successfully updated last silent escrow record repair attempt date to %@"
"Failed to update last silent escrow record repair attempt date: %@"
"Requesting update of silent escrow record repair attempt date to %@..."
cdp: recovery flow
NativeAccountRecovery
BEGIN [%lld]: NativeAccountRecovery  enableTelemetry=YES 
 result != nil=%{public,signpost.telemetry:number1,name=result != nil}d  Error=%{public,signpost.telemetry:number2,name=Error}d 
END [%lld] %fs: NativeAccountRecovery  result != nil=%{public,signpost.telemetry:number1,name=result != nil}d  Error=%{public,signpost.telemetry:number2,name=Error}d 
"XPC Error while recovering data: %@"
"XPC Error while checking if the local device has a secret: %@"
"Checking if the local device has a secret"
"Local device DOES have a secret"
"Local device DOES NOT have a secret"
"Reporting current serial number: %@"
"Unable to check self process entitlements without SecTaskRef."
"Error when checking self process for entitlement %@. error:%@"
"Invalidating connection for controller %@"
"Daemon connection invalidated!"
"Daemon connection interrupted!"
"XPC Error from daemon: %@"
B16@?0^^{__CFError}8
com.apple.cdp.appleaccount.property
com.apple.cdp.appleaccount.property.last-modified-date
com.apple.cdp.appleaccount.property.is-escrow-repair-needed
silentEscrowRecordRepair
escrowProxyUrl
com.apple.Dataclass.Account
iCloudEnv
v16@?0@"NSError"8
ENABLED
DISABLED
v12@?0B8
v24@?0@"AKUserInformation"8@"NSError"16
v20@?0B8@"NSError"12
altDSID
kCDPStateRepair
kCDPOfflinePasscodeChange
kCDPRecoveryKeyRegenerate
kCDPUpgradeSetupBioMetrics
kCDPSecureTerms
kCDPConfirmExistingSecret
kWalrusCreatePasscode
_followUpType
_shouldNotify
_force
_repairType
_altDSID
<%@: %p - type=%@ shouldNotify=%{BOOL}d force=%{BOOL}d>
Unknown
SignIn
Repair
UpdatePasscode
FinishPasscodeChange
ConfirmCyrusPasscode
RegenerateRK
NewRK
VerifyRK
_authenticationResults
_appleID
_password
_passwordEquivToken
_dsid
_isHSA2Account
_didUseSMSVerification
_cachedLocalSecret
_cachedLocalSecretType
__useSecureBackupCachedPassphrase
__alwaysCreateEscrowRecord
__skipEscrowFetches
__recoveryToken
_guestMode
_idmsRecovery
_idmsMasterKeyRecovery
_duplexSession
_resumeContext
_sharingChannel
_type
_isAttemptingBackupRestore
_cachedPassphraseMissing
_findMyiPhoneUUID
_supportsSkipSignIn
_isFederatedAccount
_isBeneficiaryAccount
__ignoreLockAssertErrors
_custodianRecoveryInfo
_beneficiaryAccount
_beneficiaryWrappedKeyData
__supportsCustodianRecovery
_bundleID
__disableAsyncSecureBackupEnrollment
_mandatesRecoveryKey
_walrusStatus
__forceReset
CDPContext was missing DSID when CircleProxyImpl was initialized. Its OTClique was not created.
-[CDPCircleProxyImpl waitForUpdate]
v8@?0
v24@?0B8B12@"NSError"16
personID
v24@?0@"CDPContext"8@"NSError"16
v24@?0@"NSDictionary"8@"NSError"16
v24@?0@"OTCustodianRecoveryKey"8@"NSError"16
statusToSet
userAcceptedDevicesToLoseAccountAccess
devicesThatLoseAccountAccessOnEnable
v24@?0@"OTInheritanceKey"8@"NSError"16
com.apple.reminders
v24@?0Q8@"NSError"16
rpdProbationFirstSeenDate
en_US_POSIX
yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'
-[CDPStateUIProviderProxy cdpContext:promptForAdoptionOfMultipleICSC:]
-[CDPStateUIProviderProxy cdpContext:promptForICSCWithIsNumeric:numericLength:isRandom:validator:]
-[CDPStateUIProviderProxy cdpContext:promptForLocalSecretWithCompletion:]
v24@?0@"CDPLocalSecret"8@"NSError"16
-[CDPStateUIProviderProxy cdpContext:promptForLocalSecretWithHandler:]
-[CDPStateUIProviderProxy cdpContext:beginRemoteApprovalWithValidator:completion:]_block_invoke
-[CDPStateUIProviderProxy cdpContext:promptForInteractiveAuthenticationWithCompletion:]
v16@?0q8
-[CDPStateUIProviderProxy cdpContext:showResetCompletedAlertWithCompletion:]
com.apple.cdpd.rk.keychain_service
com.apple.cdp.rk
No Records
Not Viable
Viable
iphone
IPHONE
ipad
IPAD
ipod touch
IPOD_TOUCH
macbook
MACBOOK
macbook pro
MACBOOK_PRO
mac pro
MAC_PRO
apple tv
apple watch
WATCH
DEVICE
_PASSWORD
_PASSCODE
<%@: %p - hasMID=%@ isBottled=%@ recordID=%@ name=%@ model=%@ platform=%@ date=%@ encodedMetadata=%@>
encodedMetadata
_localizedName
_model
_modelVersion
_modelClass
_platform
_recordID
_machineID
_recordDate
_hasRandomSecret
_hasNumericSecret
_numericSecretLength
_isUsingMultipleiCSC
_remainingAttempts
_serialNumber
_isCurrentDevice
recordInfo
_deviceColor
_enclosureColor
com.apple.CoreCDP.CustodianRecovery
CDPStateError
com.apple.CoreCDP.adp.statusChange
statusChange
%@%u
CDPWalrusStateChangeNotification
_CDPWalrusStateChangeDarwinNotification
com.apple.security.octagon.peer-changed
ProtectedCloudStorage
SecureObjectSync
hasRecords
recordViability
tlkRecoveryViability
pcsRecoveryViability
sosViability
accountViability
deviceViability
CDPWebAccessStateChangeNotification
_CDPWebAccessStateChangeDarwinNotification
wasSuccess
errorDomain
errorCode
underlyingErrorDomain
underlyingErrorCode
version
duration
__OSINSTALL_ENVIRONMENT
__AKSYNCBUBBLE
<%@: %p> EventName: [%@], ReportData: %@
v16@?0Q8
v24@?0@"NSString"8@"NSError"16
com.apple.cdp
core
signpost
v24@?0@"CDPUpdateDataPrivacyContext"8@"NSError"16
com.apple.CoreCDP.BackupRecovery
backupRecoveryResult
backupRecoveryThroughRemoteSecretDidSucceed
backupRecoveryThroughRemoteSecretDidSucceedWithoutLocalSecret
backupRecoveryThroughRemoteSecretDidCancel
backupRecoveryThroughRemoteSecretDidReset
backupRecoveryThroughRemoteSecretDidFail
joinMethod
attemptedMethods
availableMethods
escrowDeviceCount
callingProcessBundleID
accountCleanupStatus
A remote secret or recovery key is required to attempt backup recovery (use -remote <secret> OR -mk <recoveryKey>)
Remote secret is invalid... cancelling prompt/validation
Recovery key is invalid... cancelling prompt/validation
An iCSC is required to attempt backup recovery (use -icsc <iCSC>)
ICSC is invalid... cancelling prompt/validation
com.apple.CoreCDP
CoreCDP
MultiUserManatee
SilentEscrowRecordViabilityRepair
_context
_hasPeersForRemoteApproval
_isWalrusEnabled
_rpdProbationDuration
com.apple.cdp.cloudDataProtectionEnabled
com.apple.cdp.manatee-availability
com.apple.cdp.manatee-state
v24@?0@"CDPEscrowRecordReport"8@"NSError"16
command
rejoin
offline-secret-change
regenerate
v24@?0@"NSArray"8@"NSError"16
findMyPhoneIdentity
marketing-name
HWModelStr
ProductType
ProductVersion
BuildVersion
DeviceName
SerialNumber
UserAssignedDeviceName
com.apple.managedconfiguration.profiled-access
DeviceClassNumber
CDPDLocalDeviceSecretProxyImpl
/System/Library/PrivateFrameworks/CoreCDPInternal.framework/CoreCDPInternal
com.apple.cdp.daemon
_validatedSecret
_secretType
_wrappedRKC
_wrappingKey
_custodianUUID
<%@: %p> for UUID: %@
CDPProtectedCloudStorageProxyImpl
CDPProtectedCloudStorageProxy
NSObject
CDPAccountRepresentation
CDPDeviceProtocol
CDPStateUIProviderInternal
CDPLocalDeviceSecretHandlerProtocol
CDPRemoteDeviceSecretValidatorProtocol
CDPRecoveryKeyValidator
CDPAuthProviderInternal
CDPDaemonProtocol
CDPFollowUpContext
NSSecureCoding
NSCoding
HSA2
CDPContext
NSCopying
Account
CDPCircleProxyImpl
CDPDCircleProxy
CDPRecoveryKeySecretValidatorProxyImpl
CDPAccount
MultiUserManatee
CDPAuthProviderProxy
CDPCustodianRecoveryKeyController
CDPUpdateDataPrivacyContext
CDPInheritanceTrustController
CDPWalrusStateController
CDPWalrusStatusProvider
CDPWebAccessStateController
CDPWebAccessStatusUpdater
CDPWebAccessStatusProvider
Probation
CDPStateUIProviderProxy
CDPKeychainItemDescriptor
CDPWalrusStateCache
CDPFollowUpController
CDPPCSUtilities
CDPLocalizedStringBuilder
CDPDevice
CDPCACustodianRecoveryReporter
CoreCDP
CDPCAWalrusReporter
CDPWalrusNotificationHandler
CDPEscrowRecordViability
CDPInitUnavailable
CDPEscrowRecordReport
CDPWebAccessNotificationHandler
CDPCAReporter
CDPRemoteDeviceSecretValidator
CDPRecoveryKeyCache
CDPWebAccessStateCache
CDPLocalDeviceSecretHandler
CDPRecoveryKeyValidatorProxyImpl
CDPTermsInfoBackupController
CDPDataPrivacyController
CDPCABackupRecoveryReporter
CDPKeychainSync
CDPToolFakeUIProvider
CDPStateUIProvider
CDPRecoveryKeyUIProvider
CDPUtilities
CDPRecoveryFlowContext
CDPManateeStateController
CDPDAuthListener
CDPDCircleListener
CDPStateController
CDPRecoveryController
CDPLocalDeviceSecretProxyImpl
CDPLocalDeviceSecretProxy
CDPLocalDevice
CDPController
CDPDaemonConnection
CDPLocalSecret
CDPCustodianRecoveryInfo
T@"CDPContext",R,N,V_cdpContext
DSID
T@"NSString",C,N,V_modelVersion
T@"<CDPAuthProvider>",&,N,V_authProvider
T@"NSString",C,N,V_serialNumber
T@"<CDPDCircleProxy>",&,N,V_circleProxy
TI,N,V_endpoint
T@"ACAccount",R,N,V_appleAccount
__recoveryToken
T@"ACAccountStore",&,N,V_accountStore
_authKitAccount
T@"AKCircleRequestContext",&,N,V_resumeContext
_clique
T@"AKInheritanceAccessKey",R,N
_enclosureColor
T@"CDPContext",&,N,V_context
_recoveryStatus
T@"CDPContext",R,N
_sharingChannel
T@"CDPCustodianRecoveryInfo",&,N,V_custodianRecoveryInfo
addDeviceClass:
T@"CDPEscrowRecordViability",R,N,V_accountViability
appleID
T@"CDPStateUIProviderProxy",&,N,V_uiProviderProxy
bundleForClass:
T@"KCAESGCMDuplexSession",&,N,V_duplexSession
clearFollowUpWithContext:error:
T@"NSData",&,N,V_beneficiaryWrappedKeyData
context
T@"NSData",R,C,N,V_wrappedRKC
contextForOfflinePasscodeChange
T@"NSDate",&,N
dealloc
T@"NSDictionary",C,N,V_authenticationResults
escrowURLString
T@"NSNumber",&,N,V_coolOffPeriod
initWithBeneficiairyIdentifier:
T@"NSNumber",C,N,V_numericSecretLength
isInternalBuild
T@"NSString",C,N,V_altDSID
isValid
T@"NSString",C,N,V_bundleID
localSecretType
T@"NSString",C,N,V_deviceColor
lowercaseString
T@"NSString",C,N,V_icsc
T@"NSString",C,N,V_localizedDescription
numberWithBool:
T@"NSString",C,N,V_machineID
purgeResumeData
T@"NSString",C,N,V_modelClass
recoverAndSynchronizeSquirrelWithContext:uiProvider:completion:
T@"NSString",C,N,V_passwordEquivToken
release
T@"NSString",C,N,V_recoveryKey
saveTermsAcceptance:completion:
T@"NSString",R,C
setCircleProxy:
T@"NSString",R,C,N,V_altDSID
setLocalSecret:
T@"NSUUID",C,N,V_beneficiaryIdentifier
setStatusToSet:
T@"NSXPCListenerEndpoint",&,N,V_daemonXPCEndpoint
set_forceReset:
TB,N,V__disableAsyncSecureBackupEnrollment
silentEscrowRecordRepairEnabled
TB,N,V__ignoreLockAssertErrors
stringFromDate:
TB,N,V__supportsCustodianRecovery
validatedSecret
TB,N,V_cachedPassphraseMissing
wrappingKeyData
.cxx_destruct
T@"NSString",C,N,V_followUpType
T#,R
T@"NSString",C,N,V_remoteSecret
T@"<CDPAuthProviderInternal>",&,N,V__authProvider
T@"OTEscrowRecord",C,N,V_record
T@"<CDPStateUIProvider>",&,N,V_uiProvider
TQ,N,V_platform
T@"ACAccount",R,N,V_authKitAccount
_accountManager
T@"AKAccountManager",&,N,V_accountManager
_backupActivity
T@"AKInheritanceAccessKey",C,N,V_accessKey
_clock_timebase
T@"CDPCABackupRecoveryReporter",R,N
_record
T@"CDPContext",R,C,N
_sendNotification:withUserInfo:
T@"CDPContext",R,N,V_context
_sos_authenticatedCircleStatus:
T@"CDPDaemonConnection",&,N,V_daemonConn
altDSID
T@"CDPEscrowRecordViability",R,N,V_deviceViability
backupRecoveryDidFailWithError:
T@"CUMessageSession",&,N,V_sharingChannel
canAuthenticate
T@"NSArray",&,N,V_devicesThatLoseAccountAccessOnEnable
containsString:
T@"NSData",C,N,V_simplePublicKey
contextForConfirmExistingSecret
T@"NSData",R,C,N,V_wrappingKey
dateFromString:
T@"NSDate",C,N,V_recordDate
deviceViability
T@"NSDictionary",C,N,V_recordInfo
hasRandomSecret
T@"NSNumber",C,N,V_dsid
isCurrentDevice
T@"NSString",C,N,V__recoveryToken
isProxy
T@"NSString",C,N,V_appleID
isWalrusEnabled
T@"NSString",C,N,V_cachedLocalSecret
localizedString
T@"NSString",C,N,V_enclosureColor
machAbsoluteTimeToTimeInterval:
T@"NSString",C,N,V_localSecret
T@"NSString",C,N,V_localizedName
pcsIdentitySetupWithInfo:error:
T@"NSString",C,N,V_model
recordViability
T@"NSString",C,N,V_password
refresh
T@"NSString",C,N,V_recordID
representationForPrimaryAccount
T@"NSString",C,V_findMyiPhoneUUID
setAccessGroup:
T@"NSString",R,C,N
setDeviceColor:
T@"NSString",R,N,V_validatedSecret
setRecoveryKey:
T@"NSUUID",R,C,N,V_custodianUUID
setWithObjects:
TB,N,V__alwaysCreateEscrowRecord
setupPairingChannelAsInitiator:
TB,N,V__forceReset
simplePublicKey
TB,N,V__skipEscrowFetches
uiProviderProxy
TB,N,V__useSecureBackupCachedPassphrase
webAccessStatus
TB,N,V_didUseSMSVerification
TB,N,V_failSignInOnError
TB,N,V_force
TB,N,V_guestMode
TB,N,V_hasNumericSecret
TB,N,V_hasPeersForRemoteApproval
TB,N,V_hasRandomSecret
TB,N,V_idmsMasterKeyRecovery
TB,N,V_idmsRecovery
TB,N,V_isAttemptingBackupRestore
TB,N,V_isBeneficiaryAccount
TB,N,V_isCurrentDevice
TB,N,V_isFederatedAccount
TB,N,V_isHSA2Account
TB,N,V_isUsingMultipleiCSC
TB,N,V_isWalrusEnabled
TB,N,V_mandatesRecoveryKey
TB,N,V_shouldNotify
TB,N,V_userAcceptedDevicesToLoseAccountAccess
TB,R
TB,R,N
TB,R,N,V_hasRecords
TB,V_isValid
TB,V_supportsSkipSignIn
TI,N,V_backupActivity
TQ,N
TQ,N,V_cachedLocalSecretType
TQ,N,V_recoveryStatus
TQ,N,V_remainingAttempts
TQ,N,V_statusToSet
TQ,N,V_walrusStatus
TQ,N,VsupportedEscapeOfferMask
TQ,R
TQ,R,N
TQ,R,N,V_pcsRecoveryViability
TQ,R,N,V_recordViability
TQ,R,N,V_secretType
TQ,R,N,V_sosViability
TQ,R,N,V_tlkRecoveryViability
TQ,V_walrusStatus
TQ,V_webAccessStatus
Td,N,V_rpdProbationDuration
Tq,N,V_maxDeviceRecoveryAttempts
Tq,N,V_totalRecoveryAttempts
Tq,N,V_type
Tq,N,V_validEscrowDeviceCount
UUIDString
__alwaysCreateEscrowRecord
__authProvider
__disableAsyncSecureBackupEnrollment
__forceReset
__ignoreLockAssertErrors
__skipEscrowFetches
__supportsCustodianRecovery
__useSecureBackupCachedPassphrase
_accessKey
_accountStore
_accountViability
_altDSID
_alwaysCreateEscrowRecord
_analyticsReporter
_appleAccount
_appleID
_attemptedMethods
_authKitAccountWith:
_authProvider
_authenticatedCliqueStatus:
_authenticationResults
_availableMethods
_beneficiaryIdentifier
_beneficiaryWrappedKeyData
_bundleID
_cachePropertyValue:forKey:lastModifiedDate:account:saveHandler:
_cachedLocalSecret
_cachedLocalSecretType
_cachedPassphraseMissing
_cachedPropertyValueOfClass:forKey:staleModifiedDate:account:isStale:
_cachedPropertyValueOfClass:forKey:valueProducer:
_cachedPropertyValueOfClass:forKey:valueProducer:checkForStale:account:
_cachedPropertyValueOfClass:forKey:valueProducer:checkForStale:account:saveHandler:
_cachedPropertyValueOfClass:forKey:valueProducer:saveHandler:
_cachedPropertyValueOfClass:forKey:valueProducer:staleModifiedDate:account:saveHandler:
_cdpContext
_checkSecurityEligibilityForContext:error:
_checkUseConsentForContext:shouldContinue:completion:
_circleProxy
_cliqueStatus:
_conn
_connLock
_context
_contextWithType:cdpContext:
_coolOffPeriod
_currentProcessCreatesDaemonTypeProxy
_custodianRecoveryInfo
_custodianUUID
_daemonConn
_daemonXPCEndpoint
_deserializedPropertyDictionaryForData:withPropertyValueOfClass:error:
_deviceColor
_deviceViability
_devicesThatLoseAccountAccessOnEnable
_didCreateCircleProxy
_didUseSMSVerification
_disableAsyncSecureBackupEnrollment
_dsid
_duplexSession
_endpoint
_escrowDeviceCount
_eventName
_executeSyncOnMainThreadIfNeeded:
_failSignInOnError
_findMyiPhoneUUID
_followUpType
_force
_forceReset
_guestMode
_handlerProxy
_hasNumericSecret
_hasPeersForRemoteApproval
_hasRandomSecret
_hasRecords
_icsc
_idmsMasterKeyRecovery
_idmsRecovery
_ignoreLockAssertErrors
_initTime
_isAttemptingBackupRestore
_isBeneficiaryAccount
_isCurrentDevice
_isFederatedAccount
_isHSA2Account
_isHomePod
_isObservingWalrusStatus
_isObservingWebAccessStatus
_isPrimaryAccount:
_isUsingMultipleiCSC
_isValid
_isWalrusEnabled
_joinMethod
_key
_keychainManager
_localSecret
_localSecretProxy
_localizedDescription
_localizedName
_logDataPrivacyStatUpdateError:completion:
_machineID
_mandatesRecoveryKey
_maxDeviceRecoveryAttempts
_model
_modelClass
_modelVersion
_numericSecretLength
_observerLock
_pairingChannelContext
_password
_passwordEquivToken
_pcsConfigForPrimaryAccount
_pcsRecoveryViability
_performPCSBlock:error:
_platform
_recordDate
_recordID
_recordInfo
_recordViability
_recoveryKey
_recoveryToken
_registerCredentialsOnlyIfNeeded:
_remainingAttempts
_remoteSecret
_repairType
_reportData
_reportManateeAvailability:value:
_resumeContext
_rpdProbationDuration
_sanitizedRecoveryErrorWithError:
_secretType
_serialNumber
_serializedPropertyDictionaryWithValue:lastModifiedDate:error:
_serverFriendlyDateFormatter
_shouldNotify
_simplePublicKey
_skipEscrowFetches
_sosViability
_sos_circleStatus:
_startObservingWalrusStateChangeNotification
_statusToSet
_stopObservingWalrusStateChangeNotification
_stopObservingWebAccessStateChangeNotification
_supportsCustodianRecovery
_supportsSkipSignIn
_table
_tlkRecoveryViability
_totalRecoveryAttempts
_type
_uiProvider
_uiProviderProxy
_updateDataPrivacyWithContext:completion:
_useSecureBackupCachedPassphrase
_userAcceptedDevicesToLoseAccountAccess
_validEscrowDeviceCount
_validatedSecret
_validator
_walrusStatus
_webAccessStatus
_wrappedRKC
_wrappingKey
aa_altDSID
aa_appleAccountWithAltDSID:
aa_appleAccountWithPersonID:
aa_appleAccountWithUsername:
aa_authToken
aa_firstName
aa_fullName
aa_personID
aa_primaryAppleAccount
aaf_toBase64DecodedData
accessCode
accessKey
accountManager
accountProperties
accountPropertyForKey:
accountStore
accountUserKeyAvailable
accountViability
addEntriesFromDictionary:
addOrUpdateKeychainItem:error:
addSecretType:
addUnqualifiedDeviceClass:
allObjects
allocWithZone:
altDSIDForAccount:
altDSIDForPersonID:
analyticsReporter
anyPeerHasEnabledViewsInSet:error:
appleAccount
appleAccountForAltDSID:
approveFromAnotherDeviceWithCompletion:
archivedDataWithRootObject:requiringSecureCoding:error:
arrayWithObjects:count:
attemptToEscrowPreRecord:completion:
attemptToEscrowPreRecord:context:completion:
attemptToEscrowPreRecord:preRecordUUID:secretType:completion:
augmentWithCredentialsFromContext:
authKitAccount
authKitAccountWithAltDSID:
authProvider
authToken
authenticationResults
authenticationToken
autorelease
backupActivity
backupRecoveryDidCancel
backupRecoveryDidReset
backupRecoveryDidSucceed
backupRecoveryDidSucceedWithoutLocalSecret
backupRecoverySetAttemptedMethod:
backupRecoverySetAvailableMethod:
backupRecoverySetJoinFromBundleID:
beneficiaryID
beneficiaryIdentifier
beneficiaryWrappedKeyData
boolValue
broadcastWalrusStateChange
builderForKey:
builderForKey:inTable:
bundleID
bundleIdentifier
cacheRecoveryKey:forAltDSID:error:
cachedCliqueStatus:
cachedLocalSecret
cachedLocalSecretType
cachedPassphraseMissing
cachedSOSCircleStatus:
canEnableMultiUserManatee
cancelApproveFromAnotherDevice
cancelValidationWithError:
cdpContext
cdpContext:beginRemoteApprovalWithValidator:
cdpContext:beginRemoteApprovalWithValidator:completion:
cdpContext:performSilentRecoveryTokenRenewal:
cdpContext:presentRecoveryKeyWithValidator:completion:
cdpContext:promptForAdoptionOfMultipleICSC:
cdpContext:promptForBeneficiaryAccessKeyWithCompletion:
cdpContext:promptForICSCWithIsNumeric:numericLength:isRandom:validator:
cdpContext:promptForInteractiveAuthenticationWithCompletion:
cdpContext:promptForLocalSecretWithCompletion:
cdpContext:promptForLocalSecretWithHandler:
cdpContext:promptForRecoveryKeyWithSecretValidator:completion:
cdpContext:promptForRecoveryKeyWithValidator:completion:
cdpContext:promptForRemoteSecretWithDevices:offeringRemoteApproval:validator:
cdpContext:promptToInformUserOfAccountLockOutWithCompletion:
cdpContext:promptToInformUserOfAccountUnlockWithCompletion:
cdpContext:showError:withCompletion:
cdpContext:showError:withDefaultIndex:withCompletion:
cdpContext:showResetCompletedAlertWithCompletion:
cdpContext:verifyMasterKey:completion:
cdpContextForUsername:
cdpRecoveryFlowContext:promptForRemoteSecretWithDevices:validator:
cdpStatusFromOT:
cdpStatusFromSOS:
cdp_errorWithCode:
cdp_errorWithCode:underlyingError:
cdp_errorWithCode:userInfo:
cdp_isCDPErrorWithCode:
cdp_isLoginHardLimit
cdp_isLoginSoftLimit
cdp_sanitizedCopy
checkCircleStatusAndSendManateeAvailabilityNotification
checkIfAltDSIDIsBeneficiary:
circleProxy
circleStatusChanged
circleViewStatusChanged
claimTokenData
claimTokenString
class
clearFollowUpWithContext:completion:
cliqueConfiguration
cliqueMemberIdentifier
code
combinedCachedCircleStatus:
combinedCircleStatus:
compare:
confirmRecoveryKey:completion:
confirmRecoveryKey:error:
conformsToProtocol:
connection
contextForAccountWithAltDSID:
contextForPrimaryAccount
contextForRecoveryKeyRepair
contextForSecureTerms
contextForSettingUpBiometrics
contextForStateRepair
contextForWalrusCreatePasscodeWithCDPContext:
contextType
contextWithType:
coolOffPeriod
copy
copyViewUnawarePeerInfo:
copyWithZone:
count
countByEnumeratingWithState:objects:count:
createAndSetRecoveryKeyWithContext:error:
createCustodianRecoveryKey:uuid:reply:
createInheritanceKey:uuid:reply:
createInheritanceKeyWithContext:completion:
createRecoveryKeyWithContext:forUUID:completion:
credentialForAccount:error:
credentialItemForKey:
currentKey
currentProcessHasEntitlement:
currentReachabilityStatus
custodianRecoveryInfo
custodianUUID
daemon
daemonConn
daemonWithErrorHandler:
daemonXPCEndpoint
dataUsingEncoding:
dataclassProperties
date
dateWithTimeIntervalSinceNow:
debugDescription
decodeBoolForKey:
decodeFloatForKey:
decodeIntegerForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
defaultCenter
defaultStore
deleteCache
deleteInheritanceAccessKeyWithContext:completion:
deleteKeychainItemsForDescriptor:error:
deleteRecoveryKey:
deleteRecoveryKeyWithContext:forUUID:completion:
deleteRecoveryKeyWithContext:uiProvider:completion:
deleteRecoveryKeyWithError:
description
desiresAllRecords
deviceClass
deviceColor
deviceEscrowRecordRecoverableWithContext:completion:
deviceIsAudioAccessory
deviceName
devicesThatLoseAccountAccessOnEnable
dictionary
dictionaryWithCapacity:
dictionaryWithObjects:forKeys:count:
didChangeStatus:error:
didJoinCircleAfterRecovery:
didUseSMSVerification
domain
dsid
duplexSession
enclosureColor
encodeBool:forKey:
encodeFloat:forKey:
encodeInteger:forKey:
encodeObject:forKey:
encodeWithCoder:
endpoint
errorWithDomain:code:userInfo:
escrowURL
failSignInOnError
fetchCliqueStatus:
fetchCliqueStatus:error:
fetchEscrowRecordDevicesWithContext:usingCache:completion:
fetchRecoveryKeyFromCacheForAltDSID:
fetchTermsAcceptanceForAccount:completion:
fetchUserControllableViewsSyncingEnabled:
findMyiPhoneUUID
finishCyrusFlowAfterTermsAgreementWithContext:
finishCyrusFlowAfterTermsAgreementWithContext:uiProvider:completion:
finishOfflineLocalSecretChangeWithCompletion:
finishOfflineLocalSecretChangeWithContext:uiProvider:completion:
firstName
followUpType
force
fullName
generateEscrowRecordReportUsingCache:completion:
generateEscrowRecordStatusReportForContext:usingCache:withCompletion:
generateInheritanceKey:uuid:reply:
generateNewRecoveryKey:
generateNewRecoveryKeyWithContext:uiProvider:completion:
generateRandomRecoveryKey:
generateRandomRecoveryKeyWithContext:completion:
generateRecoveryKey:
generateRecoveryKeyWithError:
generateRecoveryKeyWithInfo:error:
generateVerifierWithRecoveryKey:error:
generatedContext
getUserInformationWithContext:completion:
guestMode
handleCloudDataProtectionStateWithCompletion:
handleCloudDataProtectionStateWithContext:uiProvider:completion:
handleURLActionWithInfo:
handleURLActionWithInfo:completion:
hardwareModel
hasFullCDPSupport
hasLocalSecret
hasLocalSecretWithCompletion:
hasMixedSecretType
hasNonViewAwarePeers
hasNumericSecret
hasPeersForRemoteApproval
hasRecordViability
hasRecords
hash
iCloudEnv
iCloudEnvironment
icsc
idmsMasterKeyRecovery
idmsRecovery
init
initFromAccessKey:
initWithAccount:
initWithAltDSID:
initWithAltDSID:accountStore:accountManager:
initWithAuthenticationResults:
initWithCoder:
initWithContext:
initWithContext:clique:
initWithContext:handler:
initWithContext:validator:
initWithContextData:
initWithData:encoding:
initWithDefaultValues
initWithDescriptor:value:
initWithDeviceStatus:accountStatus:
initWithEscrowRecord:
initWithEvent:
initWithListenerEndpoint:
initWithLocaleIdentifier:
initWithMachServiceName:options:
initWithRecordPresence:recordViability:tlkRecoveryViability:sosViability:pcsRecoveryViability:
initWithRemoteObject:
initWithStatusToUpdate:
initWithUIProvider:
initWithUUIDString:
initWithValidatedSecret:secretType:
initWithWrappedKey:wrappingKey:uuid:error:
initWithWrappedKeyData:wrappingKeyData:uuid:error:
initWithWrappedKeyData:wrappingKeyString:uuid:error:
initWithWrappedRKC:wrappingKey:custodianUUID:
initWithXpcEndpoint:context:
integerValue
interfaceWithProtocol:
invalidate
isAttemptingBackupRestore
isBeneficiary
isBeneficiaryAccount
isBeneficiaryForAccount:
isDeviceEscrowRecordRecoverable:
isEqual:
isEqualToString:
isFederatedAccount
isHSA2Account
isHSA2Enabled:
isICDPEnabled
isICDPEnabledByCheckingWithServer:
isICDPEnabledForDSID:
isICDPEnabledForDSID:checkWithServer:
isICDPEnabledForDSID:checkWithServer:completion:
isInheritanceAccessKeyValid:
isKindOfClass:
isLastBackupMakingPeer:
isMainThread
isManateeAvailable:
isMemberOfClass:
isMultiUserManateeFeatureEnabled
isOTEnabledForContext:
isOTEnabledForContext:completion:
isObservingWalrusStatus
isPiggybackingRecovery
isRecoveryKeyAvailableWithCompletion:
isRecoveryKeyAvailableWithError:
isRecoveryKeySet:error:
isSilentEscrowRecordRepairEnabled
isSilentEscrowRecordRepairEnabledForAccount:
isSilentEscrowRecordViabilityRepairEnabled
isTTSURecovery
isUserVisibleKeychainSyncEnabled
isUserVisibleKeychainSyncEnabledWithCompletion:
isUsingMultipleiCSC
isWalrusEnabledWithOptions:error:
joinAfterRestore:
joinMethod
keychainItemForDescriptor:error:
leaveClique:
length
localSecret
localSecretChangedTo:secretType:completion:
localSecretChangedTo:secretType:context:uiProvider:completion:
localizedDescription
localizedName
localizedStringForKey:value:table:
lock
longLongValue
machineID
mainBundle
mandatesRecoveryKey
marketingModel
maxDeviceRecoveryAttempts
model
modelClass
modelVersion
mutableCopy
nonCachedSOSCircleStatus:
numberWithDouble:
numberWithInt:
numberWithInteger:
numberWithLongLong:
numberWithUnsignedInteger:
numberWithUnsignedLongLong:
numericSecretLength
objectForKey:
objectForKeyedSubscript:
osVersion
pairingChannelAcceptor
pairingChannelInitiator
password
passwordEquivToken
passwordResetTokenBackupForAccount:
pcsIdentityCreateWithInfo:error:
pcsIdentityMigrateToiCDPWithInfo:error:
pcsIdentitySetCompanionInCircle:error:
pcsIdentitySetIsInICDPLocal:error:
pcsIdentitySetIsInICDPNetwork:options:error:
pcsKeysForServices:completion:
pcsRecoveryViability
pcsRestoreLocalBackup:error:
pcsSynchronizeKeysWithInfo:error:
peerDeviceNamesByPeerID
peerDeviceNamesByPeerID:
peerId
peersHaveViewsEnabled:error:
performRecovery:
performRecoveryWithContext:uiProvider:authProvider:completion:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performSilentEscrowRecordRepairWithCompletion:
performSilentEscrowRecordRepairWithContext:completion:
performedFailureCDPStateMachineRun:error:reply:
performedSuccessfulCDPStateMachineRun:reply:
personIDForAltDSID:
platform
platformSupportsSOS
postFollowUpWithContext:completion:
postFollowUpWithContext:error:
postNotificationName:object:
postNotificationName:object:userInfo:
postNotificationName:object:userInfo:deliverImmediately:
preflightContext:
preflightRecoverOctagonUsingCustodianRecoveryKey:custodianRecoveryKey:reply:
preflightRecoverOctagonUsingInheritanceKey:inheritanceKey:reply:
prevailingLocalSecretType
primaryAccountAltDSID
primaryAccountDSID
primaryAccountFirstName
primaryAccountFullName
primaryAccountIsBeneficiary
primaryAccountNeedsEscrowRecordRepair
primaryAccountSecurityLevel
primaryAccountStashedPRK
primaryAccountUsername
primaryAppleAccount
primaryAuthKitAccount
propertiesForDataclass:
proxyWithAuthProvider:
reachabilityForInternetConnection
record
recordDate
recordID
recordInfo
recoverAndSynchronizeWithSquirrel:
recoverOctagonUsingCustodianInfo:completion:
recoverOctagonUsingCustodianRecoveryKey:custodianRecoveryKey:reply:
recoverOctagonUsingInheritanceKey:inheritanceKey:reply:
recoverOctagonWithContext:inheritanceKey:completion:
recoverSquirrelWithContext:uiProvider:completion:
recoverWithSquirrel:
recoveryKey
recoveryKeyDescriptor
recoveryKeyDescriptorForAltDSID:
recoveryStatus
registerCredentials
registerCredentialsIfMissing
remainingAttempts
remoteObjectProxyWithErrorHandler:
remoteSecret
removeCustodianRecoveryKey:custodianRecoveryKeyUUID:reply:
removeFriendsInClique:error:
removeInheritanceKey:inheritanceKeyUUID:reply:
removeNonViewAwarePeers:
removeNonViewAwarePeersFromCircleWithContext:completion:
removeObjectForKey:
removeThisDeviceFromCircle:
repairCloudDataProtectionStateWithCompletion:
repairCloudDataProtectionStateWithContext:uiProvider:completion:
repairType
reportFailure:
reportSuccess
representationForAccount:
representationForAltDSID:
requestToJoinCircle:
requestToJoinCircleAfterRestore:
requestToResetProtectedData:
requiresMoreViewData
resetAccountCDPState
resetAccountCDPStateAndSetSecret:
resetProtectedData:error:
respondsToSelector:
resume
resumeContext
retain
retainCount
rpdProbationDuration
rpdProbationFirstSeenDate
rpdProbationIsInEffectForDuration:
saveAccount:withCompletionHandler:
saveVerifiedAccount:error:
secretType
securityLevel
securityLevelChanged:forAltDSID:
securityLevelForAccount:
self
sendReport
sendReportWithError:
serialNumber
setAccessKey:
setAccount:
setAccountManager:
setAccountProperty:forKey:
setAccountStore:
setAltDSID:
setAppProvidedContext:
setAppleID:
setAuthProvider:
setAuthenticationAppleID:
setAuthenticationResults:
setBackupActivity:
setBeneficiaryIdentifier:
setBeneficiaryWrappedKeyData:
setBundleID:
setCachedLocalSecret:
setCachedLocalSecretType:
setCachedPassphraseMissing:
setClaimTokenData:
setClaimTokenString:
setClasses:forSelector:argumentIndex:ofReply:
setContext:
setCoolOffPeriod:
setCustodianRecoveryInfo:
setDaemonConn:
setDaemonXPCEndpoint:
setDateFormat:
setDevicesThatLoseAccountAccessOnEnable:
setDidUseSMSVerification:
setDsid:
setDuplexSession:
setEnclosureColor:
setEndpoint:
setEscrowDeviceCount:
setFailSignInOnError:
setFindMyiPhoneUUID:
setFollowUpType:
setForce:
setGuestMode:
setHasNumericSecret:
setHasPeersForRemoteApproval:
setHasRandomSecret:
setIcsc:
setIdmsMasterKeyRecovery:
setIdmsRecovery:
setInterface:forSelector:argumentIndex:ofReply:
setInterruptionHandler:
setInvalidationHandler:
setInvisible:
setIsAttemptingBackupRestore:
setIsBeneficiaryAccount:
setIsCurrentDevice:
setIsFederatedAccount:
setIsHSA2Account:
setIsUsingMultipleiCSC:
setIsValid:
setIsWalrusEnabled:
setItemAccessible:
setItemClass:
setLocale:
setLocalizedDescription:
setLocalizedName:
setMachineID:
setMandatesRecoveryKey:
setMaxDeviceRecoveryAttempts:
setModel:
setModelClass:
setModelVersion:
setNumericSecretLength:
setObject:forKeyedSubscript:
setOsVersion:
setPassword:
setPasswordEquivToken:
setPasswordEquivalentToken:
setPlatform:
setRecord:
setRecordDate:
setRecordID:
setRecordInfo:
setRecoveryStatus:
setRemainingAttempts:
setRemoteObjectInterface:
setRemoteSecret:
setRepairType:
setResumeContext:
setRpdProbationDuration:
setRpdProbationFirstSeenDate:
setSerialNumber:
setService:
setSharingChannel:
setShouldNotify:
setSimplePublicKey:
setSupportedEscapeOfferMask:
setSupportsSkipSignIn:
setSynchronizable:
setSysBound:
setTimeZone:
setTotalRecoveryAttempts:
setType:
setUiProvider:
setUiProviderProxy:
setUseCachedAccountStatus:
setUseDataProtection:
setUserAcceptedDevicesToLoseAccountAccess:
setUserControllableViewsSyncStatus:error:
setUserCredentialsAndDSID:password:error:
setUserVisibleKeychainSyncEnabled:withCompletion:
setValidEscrowDeviceCount:
setViewsWithEnableSet:disableSet:
setWalrusEnabled:accountIdentifier:options:error:
setWalrusStatus:
setWebAccessStatus:
setWithArray:
setWithObject:
setWrappedKeyData:
setWrappedKeyString:
setWrappingKeyData:
setWrappingKeyString:
set_alwaysCreateEscrowRecord:
set_authProvider:
set_disableAsyncSecureBackupEnrollment:
set_ignoreLockAssertErrors:
set_recoveryToken:
set_skipEscrowFetches:
set_supportsCustodianRecovery:
set_useSecureBackupCachedPassphrase:
setupDictionaryWithContext:
setupPairingChannelAsAcceptor:
sharedInstance
sharingChannel
shouldDisplayToUser
shouldNotify
shouldOpenGate
shouldPerformRepairForContext:forceFetch:completion:
shouldPerformRepairWithOptionForceFetch:completion:
shouldPerformRepairWithOptionForceFetch:error:
shouldPerformSilentEscrowRecordRepair
shouldPerformSilentEscrowRecordRepairUsingCache:completion:
shouldPerformSilentEscrowRecordRepairUsingCache:error:
shouldPerformSilentEscrowRecordRepairWithContext:usingCache:completion:
silentEscrowRecordRepairEnabledWithCompletion:
sosViability
sos_circleStatus:
startCircleApplicationApprovalServer:
startCircleApplicationApprovalServerSkipEscrowFetches:
startCircleApplicationApprovalServerWithContext:completion:
startObservingWalrusStateChangeNotification
startObservingWebAccessStateChangeNotification
startSilentEscrowRecordRepairWithCompletion:
startSilentEscrowRecordRepairWithContext:completion:
stashedPRK
statusForDataPrivacyWithCompletion:
statusToSet
stringByAppendingString:
stringValue
stringWithFormat:
stringWithUTF8String:
superclass
supportedEscapeOfferMask
supportedEscapeOfferMaskCompletion:
supportsSecureBackupRecovery
supportsSecureCoding
supportsSkipSignIn
synchronizeCircleViews
synchronousDaemonWithErrorHandler:
synchronousRemoteObjectProxyWithErrorHandler:
timeIntervalSinceDate:
timeZoneForSecondsFromGMT:
tlkRecoveryViability
totalRecoveryAttempts
tryRegisteringCredentials
tryUserCredentialsAndDSID:password:error:
type
uiProvider
unarchivedDictionaryWithKeysOfClasses:objectsOfClasses:fromData:error:
unlock
unsignedIntValue
unsignedIntegerValue
unsignedLongValue
updateDataPrivacyWithContext:completion:
updateDataPrivacyWithContext:shouldContinue:completion:
updateLastSilentEscrowRecordRepairAttemptDate:context:completion:
updateLastSilentEscrowRecordRepairAttemptDate:error:
updateWalrusStatus:completion:
updateWebAccessStatus:completion:
updateWithAuthenticationResults:
updatedReportWithRecord:isDeviceRecord:
updatedReportWithViews:forDeviceRecord:
userAcceptedDevicesToLoseAccountAccess
userDidCancelWithError:
userDidEnterValidSecret:type:
userInfo
username
uuid
validEscrowDeviceCount
validateAccessKey:withContext:completion:
validateCustodianRecoveryInfo:withCompletion:
validateRecoveryKey:withCompletion:
validateRecoveryKey:withContext:completion:
validateSecret:devices:type:withCompletion:
value
verifyRecoveryKey:
verifyRecoveryKeyWithContext:uiProvider:completion:
waitForInitialSync:
waitForOctagonUpgrade:
waitForPriorityViewKeychainDataRecovery:
waitForUpdate
walrusStatus
walrusStatus:
walrusStatusWithCompletion:
walrusStatusWithContext:completion:
webAccessStatus:
webAccessStatusWithCompletion:
wrappedKey
wrappedKeyData
wrappedKeyString
wrappedRKC
wrappingKey
wrappingKeyString
zone
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
^{_PCSIdentitySetData=}32@0:8@16^@24
B40@0:8^{_PCSIdentitySetData=}16@24^@32
B32@0:8^{_PCSIdentitySetData=}16^@24
B32@0:8@16^@24
B44@0:8B16@20@28^@36
^{_PCSIdentitySetData=}32@0:8@"NSDictionary"16^@24
B40@0:8^{_PCSIdentitySetData=}16@"NSDictionary"24^@32
B32@0:8@"NSDictionary"16^@24
B44@0:8B16@"NSString"20@"NSDictionary"28^@36
B32@0:8@?16^@24
@24@0:8@16
@40@0:8@16@24@32
B20@0:8B16
v24@0:8@?16
@40@0:8#16@24@?32
@48@0:8#16@24@?32@?40
@52@0:8#16@24@?32B40@44
@60@0:8#16@24@?32B40@44@?52
@64@0:8#16@24@?32@40@48@?56
@56@0:8#16@24@32@40^B48
v56@0:8@16@24@32@40@?48
@40@0:8@16@24^@32
@40@0:8@16#24^@32
v24@0:8@16
v16@0:8
@"ACAccount"
@"NSString"
@"ACAccountStore"
@"AKAccountManager"
v32@0:8@16@?24
v32@0:8@16@24
v40@0:8@16@24@?32
v44@0:8@16@24B32@36
v40@0:8@16@24@32
v48@0:8@16B24@28B36@40
v48@0:8@16@24q32@?40
v32@0:8@"CDPContext"16@?<v@?@"CDPLocalSecret"@"NSError">24
v32@0:8@"CDPContext"16@"<CDPLocalDeviceSecretHandlerProtocol>"24
v40@0:8@"CDPContext"16@"<CDPRemoteDeviceSecretValidatorProtocol>"24@?<v@?B@"NSError">32
v44@0:8@"CDPContext"16@"NSArray"24B32@"<CDPRemoteDeviceSecretValidatorProtocol>"36
v40@0:8@"CDPRecoveryFlowContext"16@"NSArray"24@"<CDPRemoteDeviceSecretValidatorProtocol>"32
v48@0:8@"CDPContext"16B24@"NSNumber"28B36@"<CDPRemoteDeviceSecretValidatorProtocol>"40
v32@0:8@"CDPContext"16@?<v@?B@"NSError">24
v32@0:8@"CDPContext"16@?<v@?@"NSDictionary"@"NSError">24
v40@0:8@"CDPContext"16@"NSError"24@?<v@?q>32
v48@0:8@"CDPContext"16@"NSError"24q32@?<v@?q>40
v40@0:8@"CDPContext"16@"<CDPRecoveryKeyValidatorInternal>"24@?<v@?B@"NSError">32
v40@0:8@"CDPContext"16@"<CDPRemoteDeviceSecretValidatorProtocolInternal>"24@?<v@?B@"NSError">32
v32@0:8@"CDPContext"16@?<v@?@"AKInheritanceAccessKey"@"NSError">24
v32@0:8@"CDPContext"16@?<v@?Q@"NSError">24
v32@0:8@16Q24
v32@0:8@"NSString"16Q24
v24@0:8@"NSError"16
v48@0:8@16@24Q32@?40
v24@0:8Q16
v48@0:8@"NSString"16@"NSArray"24Q32@?<v@?BB@"NSError">40
v32@0:8@"NSString"16@?<v@?BB@"NSError">24
v24@0:8@?<v@?B@"NSError">16
v24@0:8@"CDPLocalSecret"16
v24@0:8@?<v@?Q>16
v32@0:8@"CDPCustodianRecoveryInfo"16@?<v@?B@"NSError">24
@24@0:8^@16
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v24@0:8@?<v@?@"NSString"@"NSError">16
@"NSString"24@0:8^@16
B32@0:8@"NSString"16^@24
v32@0:8@"CDPContext"16@?<v@?@"CDPContext"@"NSError">24
v40@0:8@"CDPContext"16@"NSString"24@?<v@?@"NSDictionary"@"NSError">32
v36@0:8@16B24@?28
v56@0:8@16Q24@32@40@?48
Vv24@0:8@?16
v28@0:8B16@?20
v48@0:8@16@24@32@?40
Vv32@0:8@16@?24
Vv36@0:8@16B24@?28
Vv32@0:8Q16@?24
Vv40@0:8@16@24@?32
v40@0:8@"CDPContext"16@"<CDPStateUIProviderInternal>"24@?<v@?BB@"NSError">32
v40@0:8@"CDPContext"16@"<CDPStateUIProviderInternal>"24@?<v@?B@"NSError">32
v36@0:8@"CDPContext"16B24@?<v@?B@"NSError">28
v56@0:8@"NSString"16Q24@"CDPContext"32@"<CDPStateUIProviderInternal>"40@?<v@?B@"NSError">48
v40@0:8@"NSString"16@"CDPContext"24@?<v@?B@"NSError">32
v32@0:8@"CDPContext"16@?<v@?@"NSString"@"NSError">24
Vv24@0:8@?<v@?B@"NSError">16
v36@0:8@"NSString"16B24@?<v@?B>28
v24@0:8@?<v@?B>16
v28@0:8B16@?<v@?B@"NSError">20
v48@0:8@"CDPContext"16@"<CDPStateUIProviderInternal>"24@"<CDPAuthProviderInternal>"32@?<v@?@"NSDictionary"@"NSError">40
v32@0:8@"CDPFollowUpContext"16@?<v@?B@"NSError">24
Vv24@0:8@?<v@?Q@"NSError">16
Vv32@0:8@"CDPUpdateDataPrivacyContext"16@?<v@?@"CDPUpdateDataPrivacyContext"@"NSError">24
Vv36@0:8@"CDPContext"16B24@?<v@?@"NSArray"@"NSError">28
Vv32@0:8@"CDPContext"16@?<v@?@"NSError">24
Vv32@0:8@"CDPContext"16@?<v@?Q@"NSError">24
Vv32@0:8Q16@?<v@?@"NSError">24
Vv32@0:8@"NSArray"16@?<v@?@"NSDictionary"@"NSError">24
v32@0:8@"NSDictionary"16@?<v@?@"NSError">24
v32@0:8@"ACAccount"16@?<v@?@"NSDictionary"@"NSError">24
Vv36@0:8@"CDPContext"16B24@?<v@?B@"NSError">28
Vv32@0:8@"CDPContext"16@?<v@?B@"NSError">24
Vv40@0:8@"NSDate"16@"CDPContext"24@?<v@?B@"NSError">32
v36@0:8@"CDPContext"16B24@?<v@?@"CDPEscrowRecordReport"@"NSError">28
@32@0:8@16@24
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v20@0:8B16
@24@0:8^{_NSZone=}16
v24@0:8q16
q16@0:8
I16@0:8
v20@0:8I16
@"CDPCABackupRecoveryReporter"
@"NSDictionary"
@"NSNumber"
@"NSUUID"
@"<CDPAuthProviderInternal>"
@"KCAESGCMDuplexSession"
@"AKCircleRequestContext"
@"CUMessageSession"
@"CDPCustodianRecoveryInfo"
@"NSData"
Q24@0:8^@16
i24@0:8^@16
@32@0:8@16^@24
B24@0:8^@16
B32@0:8@16@24
B28@0:8B16^@20
@"NSDictionary"16@0:8
v24@0:8@"OTClique"16
@"NSString"32@0:8@"NSDictionary"16^@24
@"NSDictionary"32@0:8@"NSString"16^@24
@"OTClique"24@0:8^@16
B32@0:8@"NSSet"16^@24
B32@0:8@"NSSet"16@"NSSet"24
@"KCPairingChannel"16@0:8
v32@0:8@"CDPCustodianRecoveryInfo"16@?<v@?@"NSError">24
@"CDPContext"16@0:8
Q20@0:8i16
Q24@0:8q16
q24@0:8^@16
@"OTClique"
@"CDPContext"
@"<CDPRemoteDeviceSecretValidatorProtocol>"
B28@0:8@16B24
@"<CDPAuthProvider>"
@24@0:8Q16
@"NSArray"
v24@0:8@?<v@?Q@"NSError">16
v32@0:8Q16@?24
v32@0:8Q16@?<v@?@"NSError">24
B24@0:8d16
@"<CDPStateUIProvider>"
@"CDPDaemonConnection"
@"NSDate"
@"OTEscrowRecord"
B24@0:8q16
@24@0:8q16
@32@0:8q16@24
v32@0:8Q16@24
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@52@0:8B16Q20Q28Q36Q44
@28@0:8@16B24
@"CDPEscrowRecordViability"
d24@0:8Q16
@"NSMutableDictionary"
{mach_timebase_info="numer"I"denom"I}
B40@0:8@16@24^@32
@"AAFKeychainManager"
@"<CDPLocalDeviceSecretHandlerProtocol>"
@"<CDPRecoveryKeyValidator>"
v40@0:8@16@?24@?32
v40@0:8@"CDPContext"16@"<CDPRecoveryKeyValidator>"24@?<v@?B@"NSError">32
v44@0:8@"CDPContext"16@"NSArray"24B32@"CDPRemoteDeviceSecretValidator"36
v40@0:8@"CDPRecoveryFlowContext"16@"NSArray"24@"CDPRemoteDeviceSecretValidator"32
v48@0:8@"CDPContext"16B24@"NSNumber"28B36@"CDPRemoteDeviceSecretValidator"40
v32@0:8@"CDPContext"16@"CDPLocalDeviceSecretHandler"24
v32@0:8@"CDPContext"16@"CDPRemoteDeviceSecretValidator"24
v32@0:8@"CDPContext"16@?<v@?>24
@"AKInheritanceAccessKey"
d16@0:8
v24@0:8d16
v28@0:8B16@20
v28@0:8B16@"NSString"20
v28@0:8B16Q20
v32@0:8r*16@24
@"<CDPDCircleProxy>"
v40@0:8@16Q24@?32
@"<CDPLocalDeviceSecretProxy>"
@"CDPStateUIProviderProxy"
@24@0:8@?16
@"NSXPCConnection"
@"NSLock"
@"NSXPCListenerEndpoint"
@32@0:8@16Q24
