@(#)PROGRAM:TVPlayback  PROJECT:TVPlayback-1
0123456789ABCDEF0123456789abcdef
MbP?
v8@?0
com.apple.AppleTV.playback
TVPReportingSession
(UNKNOWN)
StorefrontID
v16@?0@"NSArray"8
errorDomain%d
errorCode%d
downloadResult
event
successful
unsuccessful
q24@?0@"TVPInterstitial"8@"TVPInterstitial"16
v32@?0@"TVPInterstitial"8Q16^B24
Stopped
Loading
Paused
Playing
Scanning
Unimplemented
-[ATVPlaybackState init] not supported, use singletons instead
requestedTime: %f, maxSize: %@, identifier: %@
direction
TVPPlaylistDidHitBeginningKey
TVPPlaylistDidHitEndKey
TVPPlaylistMediaChangeRequestedNotification
shuffleEnabled
endAction
v32@?0@"NSObject<TVPMediaItem>"8Q16^B24
upcomingItems
currentMediaItem
nextMediaItem
previousMediaItem
v32@?0{_NSRange=QQ}8^B24
v24@?0Q8^B16
supportsShuffle
windowed
supportsRepeat
maximumVideoResolution
availableVideoDynamicRanges
TVPReachabilityMonitorReachabilityDidChange
TVPReachabilityMonitorWifiDidChange
TVPReachabilityMonitorInitException
-init is not supported. Use +sharedManager.
ATVMediaTypeAudio
ATVMediaTypeMusic
ATVMediaTypeMusicVideo
ATVMediaTypeITunesRadio
ATVMediaTypeAudioBook
ATVMediaTypePodcast
ATVMediaTypeVideoPodcast
ATVMediaTypeITunesU
ATVMediaTypeVideoITunesU
ATVMediaTypeMovie
ATVMediaTypeMoviePreview
ATVMediaTypeMovieRental
ATVMediaTypeTVEpisode
ATVMediaTypeTVEpisodePreview
ATVMediaTypeHomeVideo
ATVMediaTypeVideo
type - %@, start - %f, duration - %f target - %f
TVPMediaItemSkipTypeIntro
TVPMediaItemSkipTypeRecap
totalUIStartupTime
restrictionsPasscodeDisplayTime
resumeMenuDisplayTime
pressPlayToStartDisplayTime
bumperVideoDisplayTime
bumperTextDisplayTime
mediaItemLoaderLoadTime
prepareForLoadingTime
ensureSufficientDiskSpaceTime
loadAVAssetKeysTotalTime
loadAVAssetKeysPrimaryTime
loadAVAssetKeysSecondaryTime
prepareForPlaybackInitiationTime
bookmarkSyncTime
buyProductTime
buyProductServerProcessingTime
buyProductBlockedPlaybackStartup
fetchRentalTime
loadBumperConfigTime
rentalCheckoutTime
rentalCheckoutServerProcessingTime
crabsLeaseTime
crabsLeaseServerProcessingTime
fpsURLBagFetch
fpsCertFetch
fpsRequestDataGeneration
fpsServerKeyFetch
fpsServerProcessingTimeMS
fpsKeyFetch
linearTokenFetch
fpsUsingCachedCertData
fetchLocationAuthorizationStatus
playbackStartupResult
error
errorEvent
rentalCheckoutDoneInParallelWithFPSKeyFetch
bookmarkSyncPerformed
timeSinceLastBookmarkSync
syncedBookmarkMatchesPreviousBookmark
createAVPlayerItemToLikelyToKeepUp
waitingForTimeControlStatus
userPlayToLoadingInitiation
openURLTime
playbackInitiationAction
success
cancelled
UpNext
ProductPage
Library
Extras
Link
PostPlay
totalUIStartupTimeNotIncludingUserInteraction
fpsLongestCertFetchTime
fpsLongestRequestDataGenerationTime
fpsLongestServerFetchAsMeasuredByAppTime
fpsLongestServerProcessingTime
fpsLongestFetchTime
longestFetchLocationAuthorizationStatusTime
fpsFetchCount
fpsTotalFetchTime
createAVPlayerItemToFirstFPSFetchTime
errorCode
errorDomain
underlyingErrorCode
underlyingErrorDomain
reportingKeysWereOmittedDueToReportingError
isDownloaded
TVPPlaybackReportingEventCollection
v32@?0@"TVPPlaybackReportingEvent"8Q16^B24
v32@?0@"NSString"8@"TVPPlaybackReportingEvent"16^B24
q24@?0@"TVPTimeRange"8@"TVPTimeRange"16
v32@?0@"TVPTimeRange"8Q16^B24
Start time: %f End time: %f Duration: %f
TVPStateMachineOldStateKey
TVPStateMachineNewStateKey
TVPStateMachineContextKey
TVPStateMachineStateChangedNotification
TVPStateMachineEventKey
TVPStateMachineUserInfoKey
@"NSString"40@?0@"TVPStateMachine"8@"NSString"16@24@"NSDictionary"32
nil event
v56@?0@"TVPStateMachine"8@"NSString"16@"NSString"24@"NSString"32@40@"NSDictionary"48
SecureKeyDelivery
guid
rental-id
isExternal
svcId
stop
lease-action
renew
start
skipped-rental-checkout
offline
version
streaming-keys
fairplay-streaming-request
v24@?0@"NSData"8@"NSError"16
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
fairplay-streaming-response
status
com.apple.fpsRequest
renew-after
expiration-time
playback-start-time
v24@?0@"NSDictionary"8@"NSError"16
q24@?0@"TVPPlaybackImageLoadInfo"8@"TVPPlaybackImageLoadInfo"16
requestedTime
v32@?0@"TVPPlaybackImageLoadInfo"8Q16^B24
v40@?0@8@"UIImage"16d24d32
v32@?0@8Q16^B24
identifier
apple-timing-app
TVPURLMediaItem Exception
init is not supported.  Use initWithURL:traits: instead.
Not started
Waiting for AVAsset keys to load
Fetching playback keys
Downloading
Download complete
Terminating
Cancelled
Failed
Start
Cancel
Termination delay did finish
AVAsset keys did load
Key fetch attempt complete
Download task did complete
Error did occur
TVPDownload
%@ %ld
Not Started
Connecting
Complete
Download termination [%@]
v16@?0q8
state
Download initiation [%@]
TVPlaybackErrorDomain
yue-Hant
value
availableMediaCharacteristicsWithMediaSelectionOptions
%@: %@ 
TVPMediaItemTraitIsStreaming
TVPMediaItemTraitIsLiveContent
TVPMediaItemTraitOptimizeForLinearPlayback
TVPMediaItemTraitMinimizeNetworkUsageWhilePaused
TVPMediaItemTraitInheritURIQueryComponentFromReferencingURI
TVPMediaItemTraitIncludeStoreCookiesInContentRequests
TVPMediaItemTraitSupportsBookmarks
TVPMediaItemTraitSupportsPlayCounts
TVPMediaItemTraitAllowsVideoPlaybackWithoutVisuals
TVPMediaItemTraitOptimizeForHighLatency
TVPMediaItemTraitIsRental
TVPMediaItemTraitIsHomeSharingContent
TVPMediaItemTraitPreventSpeculativeLoading
TVPMediaItemTraitIsScene
TVPMediaItemTraitForceSoundCheck
TVPMediaItemTraitDisableMetadataMenu
TVPMediaItemTraitDisableResumeMenu
TVPMediaItemTraitTreatAsVideo
TVPMediaItemTraitStopWhenDeviceSleeps
TVPMediaItemTraitKeepVideoLayersAttachedWhileSuspended
TVPMediaItemTraitRequiresAppToRunIfBackgroundedDuringPlayback
TVPMediaItemTraitStopWhenAppIsBackgrounded
TVPMediaItemTraitSupportsAVKitContentProposal
TVPMediaItemTraitTreatUnratedAsRated
TVPMediaItemTraitAirPlayedContent
TVPMediaItemTraitForceSkipItemSkippingBehavior
TVPMediaItemTraitUseTempDownload
TVPMediaItemTraitCellularPlaybackProhibited
TVPMediaItemTraitSupportsReporting
TVPMediaItemTraitIsHD
TVPMediaItemTraitIsLocal
TVPMediaItemTraitHasHLS
TVPMediaItemTraitDisableScrubbing
avPlayerLayer.readyForDisplay
Waiting for media item to prepare for loading
Waiting for signal after preparing item
Waiting for AVAsset to load
Waiting for media item to prepare for playback initiation
Waiting for AVPlayerItem status to become ready to play
Waiting for sufficient buffer
Waiting for time control status to be done waiting
Scanning using AVPlayer
Scanning using AVPlayer driven by AVKit
Scanning using external images
Scanning using external images driven by AVKit
Waiting for AVKit seek after finishing external image scanning
Scrubbing using progressive jumping
Scrubbing using progressive jumping waiting for seek
Waiting for seek
Waiting for more playlist items
Set playlist
Play
Pause
Stop
Media item loader did prepare item for loading
Media item loader did load AVAsset keys
Media item did prepare for playback initiation
Current player item status did become ready to play
Current player item did stall
Sufficient buffer did become available
Buffer did become empty
Time control status did change
Hit beginning or end
Playlist current media item did change
Playlist next media item did change
Rate used for playback did change
Set elapsed time or date
Seek completed
Scan with rate
Continue loading current item
Interstitial boundary crossed
Restart playback
Rate key
Playlist key
Media item loader key
Error key
Elapsed CMTime key
Seek precision key
Playback date key
Changing media because AVFoundation advanced key
Ignore delegate key
Being invalidated key
Volume ramp duration key
Post loading state key
Async delegate response key
Original time key
Adjusted time key
Adjusted date key
Due to time jump key
Requires manual AVQueuePlayer advance key
Reset to start time key
Play completion key
Allowed key
TVPPlayer AVAudioSession management queue
TVPPlayer
playlist
currentMediaItemHasVideoContent
currentMediaItemIsStreaming
currentMediaItemPresentationSize
currentMediaItemHasDates
errorBehavior
interactive
rate
rateUsedForPlayback
elapsedTime
playbackDate
duration
muted
volume
bufferedTimeRange
seekableTimeRange
seekableDateRange
mediaItemEndAction
maximumBitRate
startPosition
accessLog
errorLog
playlistInternal
currentPlayerItem
cachedDuration
cachedLoadedTimeRanges
cachedSeekableTimeRanges
AVQueuePlayer
chapterCollections
currentChapterCollection
currentChapter
currentInterstitialCollection
currentInterstitial
audioOptions
subtitleOptions
selectedAudioOption
selectedSubtitleOption
currentMediaItemInitialLoadingComplete
preventsSleepDuringVideoPlayback
isLive
 (%@)
Instance of TVPPlayer with name [%@] was deallocated without being invalidated
v12@?0B8
v20@?0B8@"NSNumber"12
avPlayer
currentItem
timeControlStatus
outputObscuredDueToInsufficientExternalProtection
externalPlaybackActive
currentItem.status
currentItem.duration
currentItem.hasVideo
currentItem.presentationSize
currentItem.playbackLikelyToKeepUp
currentItem.playbackBufferFull
currentItem.playbackBufferEmpty
currentItem.loadedTimeRanges
currentItem.seekableTimeRanges
currentItem.timedMetadata
currentItem.tracks
v32@?0{?=qiIq}8
v32@?0@"NSUUID"8@"TVPBoundaryTimeObserverInfo"16^B24
AVPlayerTimeControlStatusPaused
AVPlayerTimeControlStatusPlaying
AVPlayerTimeControlStatusWaitingToPlayAtSpecifiedRate
Unknown
unknown (no AVPlayer)
AVPlayerExternalPlaybackTypeNone
AVPlayerExternalPlaybackTypeTVOut
AVPlayerExternalPlaybackTypeAirPlay
AVPlayerItemStatusUnknown
AVPlayerItemStatusReadyToPlay
AVPlayerItemStatusFailed
timedMetadata
NOT 
mediaType
trackID
v32@?0@"TVPVideoView"8Q16^B24
SSErrorDomain
TVPlaybackCellularPlaybackProhibitedErrorReasonKey
kbps
Mbps
%0.2f%@
TVPVideoResolutionClassUnknown
TVPVideoResolutionClass4K
TVPVideoResolutionClassHD
TVPVideoResolutionClassSD
TVPVideoRangeUnknown
TVPVideoRangeHDR
TVPVideoRangeSDR
TVPVideoRangeDolbyVision
Atmos
jpeg
v16@?0@"UIGraphicsImageRendererContext"8
v28@?0@"TVImage"8@"NSError"16B24
v28@?0@?<v@?B@"NSNumber">8B16@"NSNumber"20
v20@?0@?<v@?B>8B16
v36@?0@?<v@?B@"NSNumber"@"NSDate">8B16@"NSNumber"20@"NSDate"28
v20@?0f8d12
@"NSString"8@?0
v72@?0{?=qiIq}8{?=qiIq}32@"NSDate"56d64
v16@?0@"UIImage"8
@"NSString"48@?0d8{?=qiIq}16B40B44
MovieAndTVShowStartLocationSetting.v2
Beginning
DisableResume
@"AVPlayerItem"24@?0@"TVPMediaItemLoader"8q16
v24@?0@"TVPMediaItemLoader"8q16
v84@?0{?=qiIq}8@"NSDate"32{?=qiIq}40@"TVPPlaybackState"64d72B80
v20@?0B8d12
B44@?0^{?=qiIq}8B16@"NSString"20@"NSDictionary"28^B36
v20@?0B8@"NSDate"12
B44@?0^@8B16@"NSString"20@"NSDictionary"28^B36
B40@?0d8@"NSString"16@"NSDictionary"24^B32
B36@?0B8@"NSString"12@"NSDictionary"20^B28
B52@?0B8^{?=qiIq}12^B20@"NSString"28@"NSDictionary"36^B44
@"NSString"52@?0{?=qiIq}8@"NSDate"32@"TVPPlaybackState"40B48
@"NSString"80@?0{?=qiIq}8@"NSDate"32B40@"TVPPlaybackState"44@"NSString"52@"NSDictionary"60B68^@72
availableChapterLocales
@"TVPChapterCollection"16@?0@"AVPlayerItem"8
@"TVPChapterCollection"8@?0
v20@?0B8@"NSString"12
@"NSString"16@?0@"TVPPlaybackState"8
DisableSpeculativeLoading
current
next
@"NSString"24@?0@"TVPPlaybackState"8@"NSDictionary"16
TVApp
expanse
FILE
com.apple.TVIdleScreen
previous
infoString - %@, duration - %f, urlString - %@
TVPDownloadSessionDidFinishEventsForBackgroundURLSessionNotification
TVPDownloadSession
v32@?0@"NSNumber"8@"TVPDownload"16^B24
yyyy-MM-dd'T'HH:mm:ss'Z'
EEE, dd MMM yyyy HH:mm:ss zzz
EEEE, dd-MMM-yyyy HH:mm:ss zzz
EEE MMM dd HH:mm:ss yyyy
q24@?0@"AVMediaSelectionOption"8@"AVMediaSelectionOption"16
v32@?0@"AVMediaSelectionOption"8Q16^B24
TVPMediaItemMetadataPAFShouldReportToStore
TVPMediaItemMetadataPAFIsValidReportingItem
TVPMediaItemMetadataPAFItemType
TVPMediaItemMetadataPAFContainerType
TVPMediaItemMetadataPAFContainerID
TVPMediaItemMetadataPAFPersonalizedContainerID
TVPMediaItemMetadataPAFFeatureName
TVPMediaItemMetadataPAFAdamID
TVPMediaItemMetadataPAFRecommendationData
TVPMediaItemMetadataPAFStoreCloudAlbumID
TVPMediaItemMetadataPAFPlaylistVersionHash
my-music
playlists
for-you
activity
radio
search
TVPPlayerReporter
v16@?0@"NSString"8
UNDETERMINED
assetType
playbackStartup
InternalBuild
app playback startup metrics: %@
(%@)
*** %s: array argument is not an NSArray
-[NSArray(TVPlaybackAdditions) tvp_shallowIsEqualToArray:]
TVPMediaItemMetadataWillChangeNotification
TVPMediaItemMetadataDidChangeNotification
TVPMediaItemMetadataChangesKey
TVPMediaItemPlaybackErrorDidOccurNotification
TVPMediaItemPlaybackErrorKey
TVPMediaItemPlaybackErrorShouldStopKey
TVPMediaItemStopPlaybackNotification
TVPMediaItemCellularSettingsDidChange
FCUP_Response_RequestID
Argument passed to -initWithSecureKeyLoader: must be non-nil.
%@%@
v16@?0@"NSError"8
TVPPlaybackMediaItemDidBecomePreparedNotification
TVPPlaybackStateWillChangeNotification
TVPPlaybackStateDidChangeNotification
TVPPlaybackStateOldStateKey
TVPPlaybackStateNewStateKey
TVPPlaybackStateNewRateKey
TVPPlaybackDidPlayToEndOfMediaItemNotification
TVPPlaybackCurrentMediaItemWillChangeNotification
TVPPlaybackCurrentMediaItemDidChangeNotification
TVPPlaybackCurrentMediaItemChangeDirectionKey
TVPPlaybackCurrentMediaItemChangeReasonKey
TVPPlaybackCurrentMediaItemChangeDitHitBeginningOfPlaylistKey
TVPPlaybackCurrentMediaItemChangeDidHitEndOfPlaylistKey
TVPPlaybackRateDidChangeNotification
TVPPlaybackErrorNotification
TVPPlaybackErrorKey
TVPPlaybackWillStopDueToErrorKey
TVPPlaybackPlaylistDidFinishNotification
TVPPlaybackDidStallNotification
com.apple.Diagnostics
MediaIDsExpirationDate
TVPPlaybackReportingBufferingWillStartNotification
TVPPlaybackReportingBufferingDidBecomeLikelyToKeepUpNotification
TVPPlayerStillImageDidChangeNotification
TVPPlayerStillImageKey
TVPPlayerUnqueueudPlayerItemReadyNotification
changeMediaInDirection: called
Played to end of media item
Fast forwarded to end of media item
New playlist set
Player invalidated
Hit end of playlist
Hit beginning of playlist
TVPPlaybackChangeReasonPlaybackDidStall
TVPPlaybackChangeReasonWaitingForCoordinatedPlayback
TVPPlaybackStateChangeReasonKey
TVPPlayerExternalPlaybackTypeDidChangeNotification
TVPPlayerItemReachedTimeToPauseBufferingNotification
TVPPlayerItemReachedTimeToPausePlaybackNotification
Start date: %@ End Date:%@ Duration: %f 
POST
application/json
Content-Type
v24@?0@8@"NSError"16
 [offline request]
 [secure invalidation request]
[%lu: %@%@]
Off subtitle option with AVMediaSelectionOption: %@
Auto
Auto subtitle option with AVMediaSelectionOption: %@
com.apple.ATV.secureKeyDelivery
TVPSKDDeviceLimitErrorUserInfoKey
Failed to fetch certificate
Internal certificate retrieval failure
Empty or invalid certificate
Failed to fetch asset ID
Internal asset ID retrieval failure
Empty asset ID
Failed to fetch keys
Internal key retrieval failure
Empty or invalid key response
Certificate data type error
Asset ID data type error
Key data type error
Received non-zero status
Too many devices in use
Content not owned or rented
Too many devices playing this rental
Rental expired
Invalid token
Network unavailable
Store bag unavailable
Store cert URL unavailable
Store key server URL unavailable
Not available in this region
Content not downloadable
Too many devices with downloads
Too many downloads of this content
Too many titles downloaded
AirPlay receiver does not support content
type - %@, start - %f, duration - %f, adamID - %@, skippable - %@
TVPMediaItemRollTypePreRoll
TVPMediaItemRollTypeMidRoll
TVPMediaItemRollTypePostRoll
^[^%]*%[.0-9]*d[^%]*$
TVPMediaItemMetadataAcquisitionDictionary
TVPMediaItemMetadataBookmarkNetTime
TVPMediaItemMetadataBookmarkSaveInterval
TVPMediaItemMetadataBrandID
TVPMediaItemMetadataBrandName
TVPMediaItemMetadataBumperConfig
TVPMediaItemMetadataBuyParams
TVPMediaItemMetadataCanonicalID
TVPMediaItemMetadataChapterCollections
TVPMediaItemMetadataContentKeyRequestParams
TVPMediaItemMetadataContentProposal
TVPMediaItemMetadataDownloadDestinationURL
TVPMediaItemMetadataDownloadTaskIdentifier
TVPMediaItemMetadataDownloadToken
TVPMediaItemMetadataDSID
TVPMediaItemMetadataDuration
TVPMediaItemMetadataExternalImageConfig
TVPMediaItemMetadataExternalImageConfigURL
TVPMediaItemMetadataExtrasURL
TVPMediaItemMetadataFileSize
TVPMediaItemMetadataForceStreaming
TVPMediaItemMetadataForwardPlaybackEndTime
TVPMediaItemMetadataGaplessHeuristicInfo
TVPMediaItemMetadataGaplessEncodingDelayInFrames
TVPMediaItemMetadataGaplessEncodingDrainInFrames
TVPMediaItemMetadataGaplessDurationInFrames
TVPMediaItemMetadataGaplessLastPacketsResync
TVPMediaItemMetadataHasAttemptedPlaybackRetryDueToError
TVPMediaItemMetadataInterstitialCollection
TVPMediaItemMetadataiTunesStoreContentInfo
TVPMediaItemMetadataKeyBagPathFileURL
TVPMediaItemMetadataLaunchPlaybackURL
TVPMediaItemMetadataMaxHLSVideoResolution
TVPMediaItemMetadataHTTPHeaders
TVPMediaItemMetadataOverrideStreamingQualityToForceHD
TVPMediaItemMetadataPlaybackSummarySent
TVPMediaItemMetadataReferenceID
TVPMediaItemMetadataRentalHasBeenPlayed
TVPMediaItemMetadataRentalID
TVPMediaItemMetadataRentalPlaybackDuration
TVPMediaItemMetadataRentalPlaybackStartDate
TVPMediaItemMetadataRentalExpirationDate
TVPMediaItemMetadataReversePlaybackEndTime
TVPMediaItemMetadataSavedAudioOption
TVPMediaItemMetadataServiceIdentifier
TVPMediaItemMetadataScrubImageVideoMediaItem
TVPMediaItemMetadataScrubPlayerItem
TVPMediaItemMetadataSoundCheckDictionary
TVPMediaItemMetadataSoundCheckMediaKind
TVPMediaItemMetadataSoundCheckVolumeNormalization
TVPMediaItemMetadataStartDate
TVPMediaItemMetadataStartTime
TVPMediaItemMetadataStartTimeIsRelativeToMainContent
TVPMediaItemMetadataStoreFrontIdentifier
TVPMediaItemMetadataTreatAsTimeBasedNotDateBased
TVPMediaItemMetadataUpNextPresentationTime
TVPMediaItemMetadataUpNextPresentationDuration
TVPMediaItemMetadataUpNextAutomaticAcceptanceInterval
TVPMediaItemMetadataWebVTTStyles
TVPMediaItemPlaybackReportingEventCollection
TVPMediaItemMetadataAutomaticallyHandlesInterstitialEvents
TVPMediaItemMetadataDateRangeCollector
TVPMediaItemMetadataTimeToPauseBuffering
TVPMediaItemMetadataTimeToPausePlayback
TVPMediaItemMetadataAlbum
TVPMediaItemMetadataAdvisoryInfo
TVPMediaItemMetadataArtist
TVPMediaItemMetadataArtworkImageProxy
TVPMediaItemMetadataArtworkEpisodePreviewImageProxy
TVPMediaItemMetadataArtworkURLFormat
TVPMediaItemMetadataArtworkURLString
TVPMediaItemMetadataCommonSenseRating
TVPMediaItemMetadataContainsClosedCaptions
TVPMediaItemMetadataContentRating
TVPMediaItemMetadataContentRatingDisplayName
TVPMediaItemMetadataContentRatingDomain
TVPMediaItemMetadataContentRatingIsExplicitMusic
TVPMediaItemMetadataContentRatingRanking
TVPMediaItemMetadataContentRatingSystem
TVPMediaItemMetadataDatabaseIDString
TVPMediaItemMetadataDateReleased
TVPMediaItemMetadataEpisodeNumber
TVPMediaItemMetadataEpisodeIndexInSeries
TVPMediaItemMetadataExternalProfileIdentifier
TVPMediaItemMetadataFeatureStartTime
TVPMediaItemMetadataFeatureDuration
TVPMediaItemMetadataFrequencyOfConfirmationAlert
TVPMediaItemMetadataGenre
TVPMediaItemMetadataLiveStreamServiceID
TVPMediaItemMetadataHasAudioDescriptions
TVPMediaItemMetadataHasDolbyAtmos
TVPMediaItemMetadataHasSDH
TVPMediaItemMetadataLongDescription
TVPMediaItemMetadataMediaType
TVPMediaItemMetadataMediaDownloadState
TVPMediaItemMetadataPlaybackCoordinatorIdentifier
TVPMediaItemMetadataPlaybackProgress
TVPMediaItemMetadataPostPlayStartTime
TVPMediaItemMetadataProductPlacementInfo
TVPMediaItemMetadataRatingImageURL
TVPMediaItemMetadataRequiredAgeForPlayback
TVPMediaItemMetadataRollInfo
TVPMediaItemMetadataSeasonCanonicalID
TVPMediaItemMetadataSeasonNumber
TVPMediaItemMetadataShouldDisplayRatingOverlay
TVPMediaItemMetadataShowCanonicalID
TVPMediaItemMetadataSkipInfo
TVPMediaItemMetadataStoreItemIdentifier
TVPMediaItemMetadataSubscriptionStoreItemIdentifier
TVPMediaItemMetadataSeriesTitle
TVPMediaItemMetadataSubtitle
TVPMediaItemMetadataTitle
TVPMediaItemMetadataTomatoFreshness
TVPMediaItemMetadataTomatoPercentage
TVPMediaItemMetadataTotalTrackCount
TVPMediaItemMetadataTrackNumber
TVPMediaItemMetadataUniqueIdentifier
TVPMediaItemMetadataVPAFInfo
TVPMediaItemMetadataMediaMetrics
TVPMediaItemMetadataDownloadQOSMetrics
TVPMediaItemMetadataVideoRange
TVPMediaItemMetadataVideoResolutionClass
TVPMediaItemMetadataWatchedTime
TVPMediaItemMetadataExternalIdentifier
TVPMediaItemMetadataExternalServiceIdentifier
TVPMediaItemMetadataIsAdultContent
TVPMediaItemMetadataIsAdvertisement
TVPMediaItemMetadataRadioStationAttribution
TVPMediaItemMetadataRadioStationName
TVPMediaItemMetadataRadioStationIdentifier
TVPMediaItemMetadataRadioStationHash
TVPMediaItemMetadataRadioStationStringID
TVPMediaItemMetadataStoreLyricsAvailable
TVPMediaItemMetadataMPNowPlayingContentItem
TVPMediaItemMetadataMPNowPlayingContentItemID
TVPMediaItemMetadataMPArtworkCatalog
TVPMediaItemMetadataIsUnknownItem
TVPMediaItemMetadataIsInLibrary
TVPMediaItemMetadataUpNextPostPlayMediaItem
TVPMediaItemMetadataAirPlayAuthorizationInfo
TVPMediaItemMetadataAllowAppleWirelessDirectLink
TVPMediaItemMetadataSSLProperties
TVPMediaItemMetadataStreamContentProperties
TVPMediaItemMetadataOutOfBandAlternateTracks
TVPMediaItemMetadataAVURLAssetAlternativeConfigurationOptions
TVPMediaItemMetadataRadioAdImageURLString
TVPMediaItemMetadataReportingParentHierarchyToken
movie
music
tvshow
TVPMediaItemMetadataArtworkIdentifier
TVPMediaItemMetadataEpisodeTitle
TVPMediaItemMetadataSeriesID
ratingName - %@, ratingDescription - %@
v32@?0@"NSString"8@16^B24
%@ [%@]
Cleaned up
Preparing for loading
Purging disk space during initial loading if necessary
Loading AVAsset keys
AVAsset keys loaded
Preparing for playback initiation
Ready for playback
TVPMediaItemLoaderSuppressErrorAndStopKey
Load
Did finish preparing to load
Disk space purge did complete
AVAsset keys did load successfully
AVAsset metadata did load successfully
Prepare for playback initiation
Did finish preparing for playback initiation
Clean up
Failure
com.apple.TVPMediaItemLoader.TVPMediaItemLoaderStopBackgroundCaching
TVPMediaItemLoader
com.apple.TVPlayback
%@ %ld (%@)
AVAssetInternal access queue
assetLoadContext access queue
TVPMediaItem: %@ AVAsset: %@ State: %@
SHA1Digest
@"NSString"16@?0q8
@"NSURL"8@?0
OMITTED
tracks
availableMetadataFormats
preferredSoundCheckVolumeNormalization
streaming
playable
metadata
@"NSString"12@?0B8
v20@?0B8@"NSError"12
v32@?0@8@16^B24
not 
Allowing
Not allowing
com.apple.hls.advisory-info.count
com.apple.hls.cs-rating
com.apple.hls.description
com.apple.hls.display-ratings-overlay
com.apple.hls.episode-title
com.apple.hls.feature.adam-id
com.apple.hls.feature.duration
com.apple.hls.genre
com.apple.hls.keys
com.apple.hls.mid-roll.count
com.apple.hls.post-roll.count
com.apple.hls.poster
com.apple.hls.pre-roll.count
com.apple.hls.pre-roll.duration
com.apple.hls.product-placement-info.duration
com.apple.hls.product-placement-info.image
com.apple.hls.product-placement-info.text
com.apple.hls.rating-image
com.apple.hls.rating-system
com.apple.hls.rating-tag
com.apple.hls.rt-audience-score
com.apple.hls.rt-rating
com.apple.hls.skip.count
com.apple.hls.title
com.apple.hls.up-next.start
com.apple.hls.watched.time
com.apple.hls.%@.%lu.start
com.apple.hls.%@.%lu.duration
com.apple.hls.%@.%lu.skippable
com.apple.hls.%@.%lu.adam-id
com.apple.hls.%@.%lu.target
com.apple.hls.%@.%lu.label
com.apple.hls.%@.%lu.type
com.apple.hls.advisory-info.%lu.key
com.apple.hls.advisory-info.%lu.value
FRESH
Fresh
CERTIFIED_FRESH
CertifiedFresh
keyformatversion
v24@?0@"NSArray"8@"NSSet"16
com.apple.hls.advisory-info
v16@?0@"AVMetadataItem"8
com.apple.hls.skip
pre-roll
mid-roll
post-roll
skip
RTCReporting backends: %@
Unable to create RTCReporting object since service ID is nil
Unable to create RTCReporting object since media item is nil
Sending download result %d with payload: %@
RTC Sending %@ payload was %@
**** RTC is not configured. Not sending metrics for event %@. ****
Replacing start event with name %@
Playback startup events:
%@: %@
Aborted event: %@
%@Duration: %f
%@: %lu
%@: %f
Ignoring FPS event since initial FPS requests are already complete.
Event %@ has no corresponding start event.  Removing from event array
State machine named [%@] processed unhandled event [%@]
State machine named [%@] received ignorable event [%@]
State machine [%@] received event [%@], initiating event processing
State machine [%@] can not register event handlers when it is accepting events
State machine [%@] can not register default handlers when it is accepting events
State machine [%@] can not register state transitions when it is accepting events
[%@] is unhandled for [%@]
State machine [%@] remaining at state [%@] on event [%@]
State machine [%@] transitioning from state [%@] to [%@]
State machine [%@] processing event [%@] in state [%@]
Holding subsequent key responses
No longer holding key responses.  Sending responses for %lu pending responses
Returning cached cert data.  Refreshing cert data, but not waiting for response
No cached cert data available.  Fetching cert data and waiting for response
Updating cached cert data
Returning newly fetched cert data
Rental expiration date: %@
Rental playback start date: %@
Adding FPS key response to pending responses for id %lu
Received FPS response error status of %ld
Waiting for URL bag fetch before handling keyRequest %lu
URL bag dictionary fetched
Unable to create loader objects since bag dictionary is nil
Certificate and key server URLs available; creating loader objects
Not loading request %lu since it has been cancelled
Unable to create loader objects because certificate URL is nil
Unable to create loader objects because key data URL is nil
Not failing request %lu since it has been cancelled
Setting state to %@
Task [%@] for media item [%@] will download to [%@]
Download task [%@] for media item [%@] did complete media selection [%@] %lu media selections have completed.  Loaded %.1f%% overall
Download termination background task with identifier %lu expired.  This is not expected to ever happen.  Ending background task
Unable to begin download termination background task since identifier is UIBackgroundTaskInvalid
Beginning download termination background task with identifier %lu, name: %@
Not beginning download termination background task since one already exists.  This is not expected to ever happen.
Task [%@] for media item [%@] did complete download task successfully
Task [%@] for media item [%@] did complete with error: %@
Ending download initiation background task with identifier %lu
Ending download termination background task with identifier %lu
Download initiation background task with identifier %lu expired.  Ending background task
Unable to begin download initiation background task since identifier is UIBackgroundTaskInvalid
Beginning download initiation background task with identifier %lu, name: %@
Not beginning download initiation background task since one already exists.  This is not expected to ever happen.
Unable to create media item loader
Key params are available, will attempt to prefetch playback keys prior to starting download task
Finished key prefetch attempt
No key params are available, will not prefetch playback keys prior to starting download task
Skipping actual download since performKeyFetchOnly is YES
Including default audio option due to user preference
Including original audio due to user preference
Adding device language to preferred audio language codes: %@
Device language already exists in preferred audio language codes
Preferred audio language codes: %@
Including default audio option since none of user's preferred audio languages could be found
Audio descriptions accessibility pref is enabled
Including all subtitles
Will look for subtitles that match preferred audio languages and audio languages being downloaded: %@
Will look for subtitles that match original audio language: %@
Will look for subtitles that match device languages: %@
Will look for subtitles that match user's preferred subtitle languages: %@
Final list of preferred subtitle languages: %@
Will prefer SDH subtitles: %@
preferredMediaSelection does not exist
Will download media selection: %@
%lu audio selections and %lu subtitle selections (%lu total) are expected to receive callbacks
Download task options: %@
Created download task %@
Download has already completed; posting [%@] event immediately
Task is now completed.  Delaying failure to give task a chance to clean up
Task exists and is completed.  Delaying download termination to give task a chance to clean up
Task exists but is not completed.  Cancelling task and waiting for didCompleteWithError
Deactivating audio session since no players are active
Done deactivating audio session
Error deactivating audio session: %@
%@ deallocated
%@ invalidated
Async delegate: shouldChangeMediaInDirection returning NO until delegate is consulted
Async delegate: shouldChangeMediaInDirection calling delegate
Async delegate: shouldChangeMediaInDirection response: %@
Async delegate: ignoring shouldChangeMediaInDirection response
Sending pause event on changeMediaInDirection because playlist end action is TVPPlaylistEndActionPause.
Async delegate: changeToMediaAtIndex returning NO until delegate is consulted
Async delegate: shouldChangeToMediaAtIndex calling delegate
Async delegate: shouldChangeToMediaAtIndex response: %@
Async delegate: ignoring shouldChangeToMediaAtIndex response
Creating AVQueuePlayer earlier than normal upon request
Player item %p is not ready to receive the selectedMediaArray. Holding it until it is ready...
Screen is being recorded.  Muting AVQueuePlayer
Setting post loading state to %@
Delegate callback playbackCoordinator:identifierForPlayerItem: returning identifier %@ for media item %@
Boundary time observer for forward playback end time fired.
Ignoring forward playback boundary time observer since player isn't playing or scanning.
Boundary time observer for reverse playback end time fired.
Ignoring reverse playback boundary time observer since player isn't scanning.
Setting cached duration to value from AVAsset
Cleaning up next item's media item loader that has failed: %@
Playlist end action did change to %ld
Playlist's current media item will change.  Due to AVFoundation advancing? %@  Did hit beginning of playlist? %@  Did hit end of playlist? %@
Playlist's current media item did change to %@.  Due to AVFoundation advancing? %@  Did hit beginning of playlist? %@  Did hit end of playlist? %@
Playlist's next media item did change to %@
AVPlayer rate did change to %f
Rate change was external
AVPlayer timeControlStatus did change to %@.  reasonForWaiting is %@
Sending seek complete event because playback has started while waiting for a seek
Assuming likelyToKeepUp is YES because playback has started
outputObscuredDueToInsufficientExternalProtection did change to %@ due to AVPlayer KVO notification
Stopping with error because external playack type is TVOut
externalPlaybackActive did change
externalPlaybackType is %@
Current player item will change
Current player item did change to %@
Player item changed to an item that has already failed
Current player item is still failed after item transition
Current player item is no longer failed
Current player item status did change to %@
Temporarily ignoring player item status change to AVPlayerItemStatusFailed since item transition is in progress.  Will handle when transition completes
Ignoring player item failure due to media services reset.  Error from media item loader should be sent shortly.
Ignoring player item status change since it hasn't actually changed
Current player item duration did change to %@
Current player item hasVideo did change to %@
Treating as video since it has TVPMediaItemTraitTreatAsVideo
Current player item presentationSize did change to %@
Current player item playbackLikelyToKeepUp did change to %@
Current player item playbackBufferFull did change to %@
Current player item playbackBufferEmpty did change to %@
Current player item did hit beginning or end
Current player item access log did change
Current player item error log did change: %@
Current player item did stall
Current player item did fail to play to end
Sending "Sufficient Buffer Did Become Available" since entire scene is loaded
Current player item tracks did change.  Old tracks: %@ New tracks: %@
Current player item media selection did change
Pausing for audio route change
Screen is NOT being recorded.  Restoring previous mute value of %@
Screen is %@being recorded, but AVQueuePlayer does not exist yet.  Will handle when AVQueuePlayer is created.
Setting audible media selection criteria to %@
Network type is cellular and cellular playback is prohibited.  Assuming internet not connected error occurred due to cellular policy
Constrained network playback is prohibited. Assuming internet not connected error occurred due to constrained network policy
Media item replaced original error %@ with %@
Sound check: setting AVPlayerItemTrack loudnessInfo to %@
network bandwidth: %@
average bitrate video: %@
average bitrate audio: %@
indicated bitrate peak: %@
indicated bitrate avg: %@
Best available video resolution: <%@>, best available video range: <%@>, current video range: <%@>
Has Atmos: %@
Audio format: %@
Audio channels: %ld
Setting AVPlayer rate to %f with volume ramp duration of %f
Setting AVPlayer rate to %f
Not setting rate to %f since it's already the player's rate
Unable to set rate since AVQueuePlayer is nil
Ignoring scan request because requested rate is 0.0 or 1.0
In _scanWithRateFromTime, calling _setAVPlayerRate
In _scanWithRateFromTime, not setting player rate since AVKit will do it for us
In _scanWithRateFromTime, calling _setAVPlayerRate during external image player startup
In _scanWithRateFromTime, not setting player rate during external image player startup since AVKit will do it for us
Using main content relative start time of %@.  Main content start time is %@; translating to absolute start time of %@
Prior to enqueueing item, seeking player item to %@
Ignoring start time since DisableResume pref key is YES
Sound check: setting player item mediaKind to %@
Sound check: setting player item soundCheckVolumeNormalization to value from mediaItem: %f
Sound check: setting player item soundCheckVolumeNormalization to value from AVAsset: %f
Sound check: not setting soundCheckVolumeNormalization since raw sound check info dict exists.
Applying pending selectedMediaArray to item %p.
Seeking after inserting item for iframe-only playback
Player queue after enqueueing item: %@
Seek completion handler called.  finished param is %@
In _setElapsedTimeOrDateOnCurrentPlayerItem, calling seekToDate
In _setElapsedTimeOrDateOnCurrentPlayerItem, bypassing seekToDate
In _setElapsedTimeOrDateOnCurrentPlayerItem, calling seekToTime
In _setElapsedTimeOrDateOnCurrentPlayerItem, bypassing seekToTime
Not issuing seek because it's invalid or indefinite
Async delegate: allowedToSeekToTime returning NO until delegate is consulted
Async delegate: allowedToSeekToTime calling delegate
Async delegate: allowedToSeekToTime response: %@, %f
Async delegate: ignoring allowedToSeekToTime response
Async delegate: allowedToSeekToTime returning saved delegate response of %@, %@
Async delegate: allowedToSeekToDate returning NO until delegate is consulted
Async delegate: allowedToSeekToDate calling delegate
Async delegate: allowedToSeekToDate response: %@, %@
Async delegate: ignoring allowedToSeekToDate response
Async delegate: allowedToSeekToDate returning saved delegate response of %@, %@
Async delegate: allowedToScan returning NO until delegate is consulted
Async delegate: allowedToScan calling delegate
Async delegate: allowedToScan response: %@
Async delegate: ignoring allowedToScan response
Async delegate: allowedToScan returning saved delegate response of %@
Async delegate: allowedToPause returning NO until delegate is consulted
Async delegate: allowedToPause calling delegate
Async delegate: allowedToPause response: %@
Async delegate: ignoring allowedToPause response
Async delegate: allowedToPause returning saved delegate response of %@
Async delegate: allowedToPlay returning NO until delegate is consulted
Async delegate: allowedToPlay calling delegate with proposed time of %f
Async delegate: allowedToPlay response: %@, %f
Async delegate: ignoring allowedToPlay response
Async delegate: allowedToPlay returning saved delegate response of %@, %@
Stopping because the end of the playlist has been reached
Loading %@ media item: %@
Cleaning up media item loader that is no longer in use: %@
Stopping because there are no more items in playlist going backwards
Calling advanceToNextItem since item added previously matches newly current item
Calling removeAllItems
Setting forceSoundCheck to %@
Playlist's initial current media item: %@
Playlist's initial next media item: %@
Not setting AVPlayer rate since AVKit will set it for us
No AVPlayer exists yet, will set rate when AVPlayer is created
Posting time control status change since it is not AVPlayerTimeControlStatusWaitingToPlayAtSpecifiedRate
Creating AVQueuePlayer
Using previously created AVQueuePlayer
Fast start: setting player's rate to %f prior to enqueueing first item
Enqueueing player item for next media item
Media Type: %@
hasVideo: %@
Ignoring time control status change since it's still AVPlayerTimeControlStatusWaitingToPlayAtSpecifiedRate
Ignoring time control status change to AVPlayerTimeControlStatusPlaying since we're already playing
Ignoring change to AVPlayerTimeControlStatusPaused since player is already in paused state
During scanning, ignoring time control status change to something other than paused
Scheduling call to advanceToNextItem since RequiresManualAVQueuePlayerAdvance is YES
Calling _setAVPlayerRate
Existing speculative player item matches next media item, so not loading it
Removing previously added speculative player item
Supressing error and stopping due to media item loader request
Error occurred: %{public}@
Already retried playing this media item due to previous error.  Not retrying again
Media item wants to retry playback for this error
Media item does not want to retry playback for this error
mediaserverd died; restarting current media item
Stopping because every item in the playlist failed
Stopping due to error
Changing to %@ media item due to error
Unable to register task for download since a task is already registered
Unable to register task for download since either downloadTask or download is nil
Unable to unregister task for download because no task is registered for it
Unable to unregister download task for download because download is nil
Unable to find download for task in %@
Received %@
RTCReporting sent: %@
Reporting dict: %@
Cert fetch complete for request %lu.  Cert length is %lu
After cert fetch completion, continuing request %lu
Loading key request data for id %lu
Done loading key request data for id %lu
Fetching FPS key for id %lu
FPS key fetch complete for id %lu
Converting key response data to offline key data for id %lu
Error converting to offline key data: %@
Secure Key Delivery failed with error: %@
After cert fetch failure, failing request %lu
Unable to load secure key request.  Retrying in a few seconds.
No cached cert data exists in coordinator for request %lu.  Starting cert fetch
No cached cert data exists in coordinator for request %lu.  Waiting for cert fetch already in progress to complete
Using cached cert data for request %lu
Error deleting directory at %@: %@
State did change to %@.  error property is %@, AVAsset property is %@
Content will not be cached to disk; no purge necessary
Unable to retrieve file system attributes due to error %@
Free space is %@, file size is %@
File name has zero length
Error creating directory at %@: %@
Not enough free space for temporary download
Unable to determine free space for temporary download
Media item %@ has empty URL
Setting AVAsset destination URL to %@
Not setting AVAsset destination URL since it is nil
Disabling AVAssetCache
AVAsset options: %@
AVURLAssetiTunesStoreContentHLSAssetURLStringKey is present: %@
AVURLAssetiTunesStoreContentHLSAssetURLStringKey is absent
Asset will be created using download token %lu
Creating AVURLAsset for %@
Status of AVAsset key [URL] is %ld
Creation of AVURLAsset using download token failed
Using existing AVURLAsset instead of creating new one
Unable to create AVURLAsset
Status of AVAsset key [%@] is %ld
Ignoring failure of non-essential key [%@]
Not posting any event because AVAsset key loading is still in progress or cancelled
AVAsset key load completion is from previous attempt, ignoring
Media item loader has been deallocated; ignoring AVAsset key load completion
Calling prepareForLoadingWithCompletion for mediaItem %@
prepareForLoadingWithCompletion callback received for mediaItem %@.  Success is %@, error is %@
Calling prepareForPlaybackInitiationWithCompletion for mediaItem %@
prepareForPlaybackInitiationWithCompletion callback received for mediaItem %@.  Success is %@, error is %@
Error occurred while loading media item: %{public}@
Cellular usage is %@prohibited for this media item
%@ cellular playback of this media item
Cellular usage is %@allowed for this media item loader
%@ constrained network playback of this media item
Media services reset and audio session configured.  Posting failure event.
Media services reset but audio session not configured.  Saving notification and holding failure event until audio session is configured.
Audio session configured after media services were already reset.  Posting failure event with previously saved notification.
Audio session configured.  Not posting failure event until media services reset notification is received.
Need to load metadata keys = %@
Key format version object is not a string or number
Key request param object is not a dictionary
Key request param data is not an array
Unable to deserialize key request params: %@
Will load AVAsset metadata keys = %@
Status of AVAsset Metadata key [%@] is = %ld
Loading the counts for AVAsset metadata items.
Loading the values for AVAsset metadata items.
Media item metadata and HLS store identifiers do not match. Media item:%@ HLS:%@
Metadata key load completion is from previous attempt, ignoring
Media item loader has been deallocated; ignoring Metadata key load completion
Media item playback error did occur: %@
Media item requested stop: %@
Calling cleanUpMediaItem for media item %@
Bypassing loadStreamingKeyForRequest: since a protocol handler exists for this request
Loading key request %@
Unable to fetch keys because object does not respond to loadFairPlayStreamingKeyRequests:completion:
Unable to fetch keys because no key requests could be generated
Request can use offline keys.  Waiting for new offline key request.
Request cannot use offline keys.  Re-sending request with type set to streaming.
Processing successful key request %@, renewal date: %@
Key request was successful, but not processing because no content key recipient exists.  %@
Processing error for key request [%lu: %{public}@] : %{public}@
Received error for key request, but not processing because no content key recipient exists.  [%lu: %{public}@] : %{public}@
Key request cancelled or failed, not processing response
Offline key generation: received initial key request, now waiting for new offline key request.
Offline key generation: Request for persistable key request failed: %@
Offline key generation: received offline content key request: %@
Offline key generation: all offline content key requests received
Offline key generation: still waiting for %lu offline content key requests
Received updated persistable content key for identifier %@
Offline key generation: key request generation timed out before all key requests were generated
Offline key generation: got offline key request generation while one is already in progress.  Ignoring new request.
Offline key generation: manually generating %lu key request(s)
TVPReportingSession
TVPInterstitialCollection
TVPPlaybackState
TVPProgressiveJumpingScrubber
TVPlaybackAdditions
TVPPlaybackImageLoadInfo
TVPAdditions
TVPSecureKeyLoader
TVPPlaylist
TVPChapterCollection
TVPMutableChapterCollection
TVPMediaItemTimingData
TVPInterstitial
TVPMutableInterstitial
TVPReachabilityMonitor
TVPMediaItemSkipInfo
TVPPlaybackReportingEvent
TVPPlaybackReportingEventCollection
TVPTimeRange
TVPStateMachine
Private
TVPPlaybackUtilities
TVPSecureKeyResponse
TVPSecureKeyStandardLoader
TVPStoreFPSKeyLoader
TVPSecureKeyDeliveryCoordinatorDelegate
TVPSecureKeyLoaderDelegate
NSObject
TVPExternalImagePlayer
TVPURLMediaItem
TVPContentKeyLoading
TVPDownload
AVAssetDownloadDelegate
NSURLSessionTaskDelegate
NSURLSessionDelegate
TVPPlayerItem
TVPAVTimedMetadataGroupChapter
TVPPlayerLayerView
TVPVideoView
TVPBackgroundQueuePlayer
TVPBoundaryTimeObserverInfo
TVPPlayer
AVPlayerPlaybackCoordinatorDelegate
TVPAVFPlayback
TVPPlayback
TVPMediaItemProductPlacementInfo
TVPDownloadSession
TVPAudioSubtitleAdditions
ATVAudioSubtitleAdditionsPrivate
TVPAsyncPlayerDelegateOperation
TVPPlayerReporter
TVPBumperConfig
TVPChapter
TVPMutableChapter
TVPExternalImageConfig
TVPPlayerBookmarkMonitor
TVPResourceLoadingRequest
TVPAudioOption
TVPSecureKeyDeliveryCoordinator
TVPDateRange
TVPSecureKeyStandardConnector
TVPSecureKeyStandardLoaderRequestGenerating
TVPSecureKeyStandardLoaderConnectionHandling
TVPSecureKeyRequest
TVPContentKeyRequest
TVPAudioSession
TVPSubtitleOption
TVPOffSubtitleOption
TVPAutoSubtitleOption
TVPMediaItemRollInfo
TVPExternalImageLoader
TVPPlaybackImageLoader
TVPContentKeyRequestParams
TVPMediaItemAdvisoryInfo
TVPBaseMediaItem
TVPMediaItem
TVPMediaItemReporting
TVPClipMediaItem
?2FP
TVPMediaItemLoader
AVAssetResourceLoaderDelegate
TVPContentKeySession
AVContentKeySessionDelegate
init
mainBundle
bundleIdentifier
numberWithUnsignedInt:
dictionaryWithObjects:forKeys:count:
mutableCopy
mediaItemMetadataForProperty:
length
objectForKey:
executablePath
lastPathComponent
setObject:forKey:
addEntriesFromDictionary:
initWithSessionInfo:userInfo:frameworksToCheck:
startConfigurationWithCompletionHandler:
stringWithFormat:
domain
code
numberWithInteger:
userInfo
mediaItem
_sendEvent:withCategory:type:values:
reporter
dictionaryWithDictionary:
numberWithUnsignedShort:
sendMessageWithDictionary:error:
initialize
initWithMediaItem:
reportDownloadFinishedWithResult:error:
setMediaItem:
setReporter:
.cxx_destruct
_mediaItem
_reporter
T@"NSObject<TVPMediaItem>",&,N,V_mediaItem
T@"RTCReporting",&,N,V_reporter
timeRange
startTime
sortedArrayUsingComparator:
array
count
objectAtIndex:
endTime
initWithStartTime:endTime:
setTimeRange:
addObject:
enumerateObjectsUsingBlock:
initWithArray:
countByEnumeratingWithState:objects:count:
interstitials
containsTime:
interstitialsWithAdjacentsMerged
initWithInterstitials:
timeAdjustedByRemovingInterstitials:
timeAdjustedByIncludingInterstitials:
interstitialForTime:
mergedInterstitialForTime:
setInterstitials:
setInterstitialsWithAdjacentsMerged:
backingData
setBackingData:
_interstitials
_interstitialsWithAdjacentsMerged
_backingData
T@"NSArray",&,N,V_interstitials
T@"NSArray",&,N,V_interstitialsWithAdjacentsMerged
T@,&,N,V_backingData
initWithName:
exceptionWithName:reason:userInfo:
name
isEqualToString:
stopped
loading
paused
playing
scanning
isEqual:
description
setName:
_name
T@"NSString",&,N,V_name
timeIntervalSinceReferenceDate
_skipTimerFired:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
invalidate
cancelScrub
elapsedTime
_nextTimeToAdvanceFromTime:
duration
playerDidHitBeginningOrEnd
setElapsedTime:
startScrubWithRate:
player
setPlayer:
rate
setRate:
skipCount
setSkipCount:
skipAdjustTime
setSkipAdjustTime:
nextSkipAdjustTime
setNextSkipAdjustTime:
skipAdjustPeriod
setSkipAdjustPeriod:
skipTimer
setSkipTimer:
_player
_rate
_skipCount
_skipAdjustTime
_nextSkipAdjustTime
_skipAdjustPeriod
_skipTimer
TQ,N,V_skipCount
Td,N,V_skipAdjustTime
Td,N,V_nextSkipAdjustTime
Td,N,V_skipAdjustPeriod
T@"NSTimer",&,N,V_skipTimer
T@"TVPPlayer",W,N,V_player
Td,N,V_rate
rangeOfString:
substringToIndex:
cStringUsingEncoding:
dataWithBytes:length:
tvp_hexStringWithBytes:length:lowercase:
stringWithUTF8String:
tvp_languageCodeWithoutRegion
tvp_dataFromHexString
tvp_lowercaseHexStringWithBytes:length:
tvp_uppercaseHexStringWithBytes:length:
requestedTime
maxSize
identifier
dateBasedHandler
requestedDate
timeBasedHandler
callCompletionHandlerWithImage:actualCMTime:actualDate:
setIdentifier:
setRequestedTime:
setRequestedDate:
requestedCMTime
setRequestedCMTime:
setMaxSize:
setTimeBasedHandler:
setDateBasedHandler:
_identifier
_requestedTime
_requestedDate
_timeBasedHandler
_dateBasedHandler
_maxSize
_requestedCMTime
T@,&,N,V_identifier
Td,N,V_requestedTime
T@"NSDate",&,N,V_requestedDate
T{?=qiIq},N,V_requestedCMTime
T{CGSize=dd},N,V_maxSize
T@?,C,N,V_timeBasedHandler
T@?,C,N,V_dateBasedHandler
bytes
tvp_lowercaseHexString
tvp_uppercaseHexString
tvp_MD5Digest
tvp_SHA1Digest
tvp_SHA256Digest
preferredLanguages
preferredMediaCharacteristics
tvp_isEqualToCriteria:
doesNotRecognizeSelector:
startLoadingCertificateDataForRequest:
startLoadingContentIdentifierDataForRequest:
startLoadingKeyResponseDataForRequest:
sendStopRequest
delegate
setDelegate:
eventCollection
setEventCollection:
_delegate
_eventCollection
T@"<TVPSecureKeyLoaderDelegate>",W,N,V_delegate
T@"TVPPlaybackReportingEventCollection",&,N,V_eventCollection
automaticallyNotifiesObserversForKey:
initWithMediaItems:index:isCollection:
_updateCurrent:andNextItems:withContext:
trackList
repeatMode
shuffleEnabled
endAction
skipExplicit
isEqualToMediaItem:
changeMedia:withContext:
defaultCenter
postNotificationName:object:userInfo:
removeObjectAtIndex:
objectForKeyedSubscript:
setObject:forKeyedSubscript:
_nextActiveListIndex
moreItemsAvailable:
_previousActiveListIndex
_isMediaItemExplicit:
initWithDictionary:
removeObjectsInRange:
boolValue
willChangeValueForKey:
upcomingItems
objectAtIndexedSubscript:
setChangeContext:
setCount:
setCurrentIndex:
didChangeValueForKey:
setEndAction:
windowed
supportsShuffle
_shuffle:
indexOfObject:
tvp_shuffle
removeObject:
insertObject:atIndex:
supportsRepeat
insertItem:atIndex:
initWithIndexesInRange:
insertItems:atIndexes:
arrayWithObjects:count:
indexSetWithIndex:
enumerateRangesUsingBlock:
insertObjects:atIndexes:
addObjectsFromArray:
removeItemsAtIndexes:
containsIndex:
addIndex:
enumerateIndexesUsingBlock:
removeObjectsAtIndexes:
countOfIndexesInRange:
initWithCapacity:
upNextIndex
indexSetWithIndexesInRange:
keyPathsForValuesAffectingValueForKey:
setByAddingObject:
isEqualToPlaylist:
changeMedia:
changeToActiveListIndex:withContext:
setSkipExplicit:
setWindowed:
setShuffleEnabled:preserveCurrentItem:
setRepeatMode:
addItem:
addItems:
removeItemAtIndex:
setUpcomingItemsLimit:
addItemsToUpNext:
currentMediaItem
setCurrentMediaItem:
nextMediaItem
setNextMediaItem:
previousMediaItem
setPreviousMediaItem:
activeList
activeListIndex
currentIndex
numConsecutivePlaybackFailures
setNumConsecutivePlaybackFailures:
changeContext
upcomingItemsLimit
_trackList
_shuffledItems
_activeListIndex
_activeList
_upcomingItems
_windowed
_shuffleEnabled
_skipExplicit
_currentMediaItem
_nextMediaItem
_previousMediaItem
_endAction
_currentIndex
_count
_numConsecutivePlaybackFailures
_repeatMode
_changeContext
_upcomingItemsLimit
_upNextIndex
T@"NSObject<TVPMediaItem>",&,N,V_currentMediaItem
T@"NSObject<TVPMediaItem>",&,N,V_nextMediaItem
T@"NSObject<TVPMediaItem>",&,N,V_previousMediaItem
T@"NSDictionary",&,N,V_changeContext
TQ,N,V_currentIndex
TQ,N,V_count
TQ,R,N,V_upNextIndex
T@"NSArray",R,N,V_trackList
T@"NSArray",R,N,V_activeList
TQ,R,N,V_activeListIndex
Tq,N,V_endAction
TB,N,V_windowed
TQ,N,V_numConsecutivePlaybackFailures
TB,R,N,V_shuffleEnabled
TB,R,N
Tq,N,V_repeatMode
TB,N,V_skipExplicit
T@"NSArray",R,N
TQ,N,V_upcomingItemsLimit
statusOfValueForKey:error:
maximumVideoResolution
availableVideoDynamicRanges
intValue
tvpVideoRangeForVideoDynamicRange:
tvp_maximumVideoResolution
tvp_maximumVideoRange
chapters
dateRange
containsDate:
startDate
timeIntervalSinceDate:
endDate
chapterForTime:
nearestChapterForTime:
chapterForDate:
nearestChapterForDate:
setChapters:
type
setType:
setStartDate:
shouldStartPlaybackFromStartDate
setShouldStartPlaybackFromStartDate:
shouldDisplayChapterMarkers
setShouldDisplayChapterMarkers:
shouldShowDescriptionOnChapterSkip
setShouldShowDescriptionOnChapterSkip:
refreshInterval
setRefreshInterval:
refreshURL
setRefreshURL:
_shouldStartPlaybackFromStartDate
_shouldDisplayChapterMarkers
_shouldShowDescriptionOnChapterSkip
_chapters
_type
_startDate
_refreshInterval
_refreshURL
T@"NSString",C,N,V_name
T@"NSArray",&,N,V_chapters
Tq,N,V_type
T@"NSDate",&,N,V_startDate
TB,N,V_shouldStartPlaybackFromStartDate
TB,N,V_shouldDisplayChapterMarkers
TB,N,V_shouldShowDescriptionOnChapterSkip
Td,N,V_refreshInterval
T@"NSURL",C,N,V_refreshURL
T@"NSString",C,D,N
T@"NSArray",&,D,N
Tq,D,N
T@,&,D,N
T@"NSDate",&,D,N
TB,D,N
Td,D,N
T@"NSURL",C,D,N
endTimeForPreparingForLoading
startTimeForPreparingForLoading
endTimeForLoadingAVAssetKeys
startTimeForLoadingAVAssetKeys
endTimeForPreparingForPlaybackInitiation
startTimeForPreparingForPlaybackInitiation
endTimeForAVPlayerItemLoading
startTimeForAVPlayerItemLoading
endTimeForBuffering
startTimeForBuffering
setTotalInitialLoadingTime:
setInitialLoadingComplete:
setStartTimeForPreparingForLoading:
setEndTimeForPreparingForLoading:
setStartTimeForLoadingAVAssetKeys:
setEndTimeForLoadingAVAssetKeys:
setStartTimeForPreparingForPlaybackInitiation:
setEndTimeForPreparingForPlaybackInitiation:
setStartTimeForAVPlayerItemLoading:
setEndTimeForAVPlayerItemLoading:
setStartTimeForBuffering:
setEndTimeForBuffering:
totalInitialLoadingTime
initialLoadingComplete
_initialLoadingComplete
_startTimeForPreparingForLoading
_endTimeForPreparingForLoading
_startTimeForLoadingAVAssetKeys
_endTimeForLoadingAVAssetKeys
_startTimeForPreparingForPlaybackInitiation
_endTimeForPreparingForPlaybackInitiation
_startTimeForAVPlayerItemLoading
_endTimeForAVPlayerItemLoading
_startTimeForBuffering
_endTimeForBuffering
_totalInitialLoadingTime
Td,N,V_totalInitialLoadingTime
Td,N,V_startTimeForPreparingForLoading
Td,N,V_endTimeForPreparingForLoading
Td,N,V_startTimeForLoadingAVAssetKeys
Td,N,V_endTimeForLoadingAVAssetKeys
Td,N,V_startTimeForPreparingForPlaybackInitiation
Td,N,V_endTimeForPreparingForPlaybackInitiation
Td,N,V_startTimeForAVPlayerItemLoading
Td,N,V_endTimeForAVPlayerItemLoading
Td,N,V_startTimeForBuffering
Td,N,V_endTimeForBuffering
TB,N,V_initialLoadingComplete
_timeRange
T@"TVPTimeRange",&,N,V_timeRange
T@"TVPTimeRange",&,D,N
_init
raise:format:
sharedNetworkObserver
_reachabilityDidChange:
addNetworkReachableObserver:selector:
_wifiDidChange:
addWiFiObserver:selector:
removeNetworkReachableObserver:
removeWiFiObserver:
dealloc
postNotificationName:object:
isNetworkReachable
isWiFiEnabled
sharedInstance
isWifiEnabled
networkType
_reachability
_networkType
TQ,R,N,V_networkType
copy
_typeDescription
initWithType:start:duration:target:localizedTitle:skipIntroReportingType:
start
target
localizedTitle
skipIntroReportingType
_start
_duration
_target
_localizedTitle
_skipIntroReportingType
TQ,R,N,V_type
Td,R,N,V_start
Td,R,N,V_duration
Td,R,N,V_target
T@"NSString",R,C,N,V_localizedTitle
T@"NSString",R,C,N,V_skipIntroReportingType
timestamp
startEvent
durationMS
setTimestamp:
value
setValue:
setDuration:
setDurationMS:
setStartEvent:
isUIInteraction
setIsUIInteraction:
_isUIInteraction
_timestamp
_value
_durationMS
_startEvent
Td,N,V_timestamp
T@,&,N,V_value
Td,N,V_duration
Tq,N,V_durationMS
T@"TVPPlaybackReportingEvent",W,N,V_startEvent
TB,N,V_isUIInteraction
setWithObjects:
_addEventWithName:type:identifier:value:timestamp:forceAdd:isUIInteraction:
eventArray
openEvents
removeObjectForKey:
numberWithDouble:
_closeOpenEvents
containsObject:
_setError:inEventDict:errorCodeKey:errorDomainKey:
integerValue
doubleValue
_totalTimeSpentDoingFPSFetchesFromEndEvents:
numberWithUnsignedInteger:
isDownloaded
numberWithBool:
complete
initialFPSRequestsComplete
containsEventWithName:
enumerateKeysAndObjectsUsingBlock:
compare:
sortUsingComparator:
addStartEventWithName:
addStartEventWithName:isUIInteraction:
addOrReplaceStartEventWithName:date:
addStartEventWithName:identifier:
addEndEventWithName:
addEndEventWithName:identifier:
addEndEventWithName:identifier:timestamp:
addSingleShotEventWithName:value:
setComplete:
rtcReportingEventDict
videoType
setVideoType:
setIsDownloaded:
setInitialFPSRequestsComplete:
setEventArray:
setOpenEvents:
_isDownloaded
_complete
_initialFPSRequestsComplete
_videoType
_eventArray
_openEvents
T@"NSMutableArray",&,N,V_eventArray
T@"NSMutableDictionary",&,N,V_openEvents
Tq,N,V_videoType
TB,N,V_isDownloaded
TB,N,V_complete
TB,N,V_initialFPSRequestsComplete
T@"NSDictionary",R,N
firstObject
CMTimeRangeValue
initWithStartTime:duration:
initWithCMTimeRange:
forwardmostCMTimeRangeInCMTimeRanges:
intersectTimeRange:
setStartTime:
_startTime
Td,N,V_startTime
Td,R,N
logObject
currentState
setShouldAcceptEvents:
purgeEventQueue
deregisterHandlers
allValues
arrayWithArray:
dictionaryWithObjectsAndKeys:
notificationWithName:object:userInfo:
postNotification:
initWithName:initialState:mode:stateChangeHandler:
setCurrentState:
UTF8String
setLogObject:
postEvent:withContext:userInfo:
shouldAcceptEvents
ignorableEvents
dictionaryWithObject:forKey:
_processNextEvent
removeAllObjects
registerHandlerForEvent:onState:withBlock:
allKeys
sortedArrayUsingSelector:
allObjects
registerStateMachine:
stateMachineWithName:
deregisterStateMachine:
stateMachinesOfType:
initWithName:initialState:mode:
setLoggingComponent:
loggingComponent
postEvent:
postEvent:withContext:
registerHandlerForEvent:onStates:withBlock:
registerHandlerForEvents:onStates:withBlock:
registerDefaultHandlerForEvent:withBlock:
registerStateTransitionFromState:onEvent:toState:
executeBlockAfterCurrentStateTransition:
logUnhandledEvents
mode
setIgnorableEvents:
callsStateChangeHandlerSynchronously
setCallsStateChangeHandlerSynchronously:
_stateChangeHandler
_events
_handlers
_defaultHandlers
_dispatchQueue
_blocksToExecuteAfterStateTransition
_handlingEvent
_shouldAcceptEvents
_callsStateChangeHandlerSynchronously
_loggingComponent
_currentState
_mode
_logObject
_ignorableEvents
T@"NSString",C,V_currentState
T@"NSString",R,C,N,V_name
Tq,R,N,V_mode
TB,V_shouldAcceptEvents
T@"NSString",C,N,V_loggingComponent
T@"NSObject<OS_os_log>",&,N,V_logObject
T@"NSArray",C,V_ignorableEvents
TB,N,V_callsStateChangeHandlerSynchronously
_executePostTransitionBlocks
_processEvent:
_dispatchEvent:
_eventHandlerForEvent:
_transitionToState:withEvent:context:userInfo:
componentsJoinedByString:
tvp_subtitleLanguageCode
suggestedBookmarkTimeForElapsedTime:duration:playedThreshold:
playedThresholdTimeForDuration:
blueDotStateForDuration:elapsedTime:hasBeenPlayed:playCount:respectPlayCount:
suggestedBookmarkTimeForElapsedTime:duration:
blueDotStateForDuration:elapsedTime:hasBeenPlayed:playCount:
keyData
setKeyData:
renewalDate
setRenewalDate:
request
setRequest:
_keyData
_renewalDate
_request
T@"NSData",&,N,V_keyData
T@"NSDate",&,N,V_renewalDate
T@"TVPSecureKeyRequest",&,N,V_request
pendingKeyResponses
secureKeyLoader:didLoadKeyResponseData:renewalDate:forRequest:
host
keyRequestData
base64EncodedStringWithOptions:
dictionary
requestID
absoluteString
includeGUID
deviceGUID
rentalID
requiresExternalEntitlementCheck
serviceProviderID
isRenewal
didSkipRentalCheckout
retrievesOfflineKeys
dataWithJSONObject:options:error:
certificateDataURL
isCancelled
secureKeyLoader:didFailWithError:forRequest:
secureKeyLoader:didLoadCertificateData:forRequest:
requestGenerator
secureKeyStandardLoader:requestForFetchingDataFromURL:
connectionHandler
secureKeyStandardLoader:sendAsynchronousRequest:completionHandler:
_assetIdentifierForKeyRequest:
dataUsingEncoding:
secureKeyLoader:didLoadContentIdentifierData:forRequest:
savedRequestToUseForStopping
setSavedRequestToUseForStopping:
keyDataURL
_bodyJSONDataForRequest:forceStop:
secureKeyStandardLoader:requestForPostingData:toURL:
statusCode
allHeaderFields
tvp_appleTimingAppHeaderValue
rentalExpirationDate
isEqualToDate:
setRentalExpirationDate:
secureKeyLoader:didReceiveUpdatedRentalExpirationDate:
rentalPlaybackStartDate
setRentalPlaybackStartDate:
secureKeyLoader:didReceiveUpdatedRentalPlaybackStartDate:
secureKeyLoader:didReceiveUpdatedRentalExpirationDate:playbackStartDate:
holdKeyResponses
setRequestCompletionTime:
initWithCertificateDataURL:keyDataURL:
setHoldKeyResponses:
setRequestGenerator:
setConnectionHandler:
setDidSkipRentalCheckout:
setIncludeGUID:
setRequiresExternalEntitlementCheck:
setServiceProviderID:
setRentalID:
setCertificateDataURL:
setKeyDataURL:
setPendingKeyResponses:
_holdKeyResponses
_didSkipRentalCheckout
_includeGUID
_requiresExternalEntitlementCheck
_requestGenerator
_connectionHandler
_serviceProviderID
_rentalID
_certificateDataURL
_keyDataURL
_savedRequestToUseForStopping
_pendingKeyResponses
_rentalExpirationDate
_rentalPlaybackStartDate
T@"NSURL",&,N,V_certificateDataURL
T@"NSURL",&,N,V_keyDataURL
T@"TVPSecureKeyRequest",&,N,V_savedRequestToUseForStopping
T@"NSMutableArray",&,N,V_pendingKeyResponses
T@"NSDate",&,N,V_rentalExpirationDate
T@"NSDate",&,N,V_rentalPlaybackStartDate
T@"<TVPSecureKeyStandardLoaderRequestGenerating>",&,N,V_requestGenerator
T@"<TVPSecureKeyStandardLoaderConnectionHandling>",&,N,V_connectionHandler
TB,N,V_holdKeyResponses
TB,N,V_didSkipRentalCheckout
TB,N,V_includeGUID
TB,N,V_requiresExternalEntitlementCheck
T@"NSString",&,N,V_serviceProviderID
T@"NSNumber",&,N,V_rentalID
JSONObjectWithData:options:error:
initWithDomain:code:userInfo:
dateByAddingTimeInterval:
initWithTimeIntervalSince1970:
initWithBase64EncodedString:options:
_preFetchFPSCertificate
secureKeyDeliveryCoordinator
loadSecureKeyRequest:
pendingKeyRequests
setPendingKeyRequests:
sharedBagLoadingController
_failPendingKeyRequestsWithError:
initWithURLBagDictionary:
pastisCertificateURL
pastisKeyServerURL
setSecureKeyStandardLoader:
initWithSecureKeyLoader:
setSecureKeyDeliveryCoordinator:
requestAccessToBagUsingBlock:
secureKeyStandardLoader
setError:
storeFPSKeyLoaderWillSucceed:forKeyRequest:
error
storeFPSKeyLoader:willFailWithError:forKeyRequest:
storeFPSKeyLoader:didReceiveUpdatedRentalExpirationDate:
storeFPSKeyLoader:didReceiveUpdatedRentalPlaybackStartDate:
storeFPSKeyLoader:didLoadOfflineKeyData:forKeyRequest:
storeFPSKeyLoader:didReceiveUpdatedRentalExpirationDate:playbackStartDate:
setFpsCertLoader:
finishLoadingWithError:
preFetchFPSCertificate
secureKeyDeliveryCoordinatorWillSucceed:
secureKeyDeliveryCoordinator:willFailWithError:
secureKeyDeliveryCoordinator:didReceiveUpdatedRentalExpirationDate:
secureKeyDeliveryCoordinatorWillSucceed:forKeyRequest:
secureKeyDeliveryCoordinator:willFailWithError:forKeyRequest:
secureKeyDeliveryCoordinator:didReceiveOfflineKeyData:forKeyRequest:
secureKeyDeliveryCoordinator:didReceiveUpdatedRentalPlaybackStartDate:
secureKeyDeliveryCoordinator:didReceiveUpdatedRentalExpirationDate:playbackStartDate:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
fpsCertLoader
_error
_secureKeyDeliveryCoordinator
_secureKeyStandardLoader
_pendingKeyRequests
_fpsCertLoader
T@"TVPSecureKeyDeliveryCoordinator",&,N,V_secureKeyDeliveryCoordinator
T@"TVPSecureKeyStandardLoader",&,N,V_secureKeyStandardLoader
T@"NSMutableArray",&,N,V_pendingKeyRequests
T@"NSError",&,N,V_error
T@"TVPSecureKeyStandardLoader",&,N,V_fpsCertLoader
T@"NSURL",C,N,V_certificateDataURL
T@"NSURL",C,N,V_keyDataURL
T@"NSObject<TVPStoreFPSKeyLoaderDelegate>",W,N,V_delegate
displayLink
setDisplayLink:
setPreviousTimestamp:
imageInfosBeingLoaded
imageLoader
setImageLoader:
setCurrentImage:
initWithConfig:
_cancelAllImageLoads
_updateImageIntervalWithRate:
_loadImagesIfNecessary
_displayLinkTimerFired:
displayLinkWithTarget:selector:
setPreferredFramesPerSecond:
mainRunLoop
addToRunLoop:forMode:
previousTimestamp
preferredFramesPerSecond
referenceDate
referenceTime
setPlaybackDate:
_timeAfterRemovingInterstitials:
_cancelStaleImageLoadsForTime:
imageInterval
closestImageTimeForTime:imageInterval:
currentImageTime
imageIsLoadedForTime:
loadedImageForTime:
imageUpdateBlock
setCurrentImageTime:
elapsedTimeUpdateBlock
lastImageTime
firstImageTime
indexOfObject:inSortedRange:options:usingComparator:
valueForKey:
loadImagesForTimes:maxSize:withHandler:
cancelImageLoadingForIdentifiers:
enumerateObjectsWithOptions:usingBlock:
setImageInterval:
initWithMediaItem:referenceTime:forDate:
playbackDate
currentImage
setElapsedTimeUpdateBlock:
setImageUpdateBlock:
setReferenceTime:
setReferenceDate:
setImageInfosBeingLoaded:
_playbackDate
_currentImage
_elapsedTimeUpdateBlock
_imageUpdateBlock
_displayLink
_previousTimestamp
_referenceDate
_imageLoader
_imageInfosBeingLoaded
_currentImageTime
_imageInterval
_elapsedTime
_referenceTime
T@"CADisplayLink",&,N,V_displayLink
Td,N,V_previousTimestamp
T{?=qiIq},N,V_referenceTime
T@"NSDate",&,N,V_referenceDate
T@"NSDate",&,N,V_playbackDate
T@"UIImage",&,N,V_currentImage
T@"TVPExternalImageLoader",&,N,V_imageLoader
T@"NSMutableArray",&,N,V_imageInfosBeingLoaded
Td,N,V_currentImageTime
Td,N,V_imageInterval
T{?=qiIq},N,V_elapsedTime
T@?,C,N,V_elapsedTimeUpdateBlock
T@?,C,N,V_imageUpdateBlock
tvp_numberValue
_lookupValueForKey:expectedClass:
tvp_numberForKey:
tvp_dateWithMillisecondsSince1970:
componentsSeparatedByString:
tvp_stringForKey:
tvp_URLForKey:
tvp_boolForKey:defaultValue:
tvp_dateForKey:
tvp_dateFromMillisecondsSince1970ForKey:
tvp_dictionaryForKey:
tvp_arrayForKey:
tvp_dataForKey:
tvp_setObjectIfNotNil:forKey:
traits
initWithURL:traits:
mediaItemURL
hasTrait:
setUrl:
setTraits:
_url
_traits
T@"NSURL",C,N,V_url
T@"NSSet",C,N,V_traits
weakObjectsPointerArray
strongToStrongObjectsMapTable
registerDownloadTask:forDownload:
descriptionForState:
initWithFormat:
_registerStateMachineHandlers
_mediaItemLoaderStateDidChangeTo:
observeValueForKeyPath:ofObject:change:context:
delegates
addPointer:
pointerAtIndex:
removePointerAtIndex:
downloadProgress
fractionCompleted
stateMachine
download:willDownloadToURL:
mediaSelectionToProgressMap
numMediaSelectionsCompleted
_newProgressForMediaSelection:
totalUnitCount
addChild:withPendingUnitCount:
setCompletedUnitCount:
setNumMediaSelectionsCompleted:
tvp_description
progress
progressWithTotalUnitCount:
setDownloadProgress:
download:progressDidChange:
downloadTerminationBackgroundTask
sharedApplication
endBackgroundTask:
setDownloadTerminationBackgroundTask:
beginBackgroundTaskWithName:expirationHandler:
mediaItemLoader
selectedMediaOptionInMediaSelectionGroup:
selectMediaOption:inMediaSelectionGroup:
asset
mediaSelectionGroupForMediaCharacteristic:
numAudioSelectionsToBeDownloaded
numSubtitleSelectionsToBeDownloaded
setState:
download:didChangeStateTo:
reportingSession
setDownloadIsComplete:
setDownloadTask:
removeObserver:forKeyPath:context:
cleanupIfNecessary
setMediaItemLoader:
downloadSession
unregisterDownloadTaskForDownload:
setNumAudioSelectionsToBeDownloaded:
setNumSubtitleSelectionsToBeDownloaded:
setStorageSettingsImageData:
downloadInitiationBackgroundTask
setDownloadInitiationBackgroundTask:
setReportingSession:
loaderForMediaItem:
downloadTask
URLAsset
setExistingAVAsset:
allowCellularUsage
setAllowsCellularUsage:
addObserver:forKeyPath:options:context:
performKeyFetchOnly
loadIfNecessary
state
AVAsset
download:didDetermineMaximumResolution:maximumVideoRange:
loadFairPlayStreamingKeyRequests:
loadFairPlayStreamingKeyRequests:completion:
updateOfflineKeyWithIdentifier:updatedOfflineKeyData:
contentKeySession
fetchOfflineKeysForParams:completion:
options
mediaSelectionOptionsFromArray:withMediaCharacteristics:
preferredMediaSelection
includeDefaultAudioOption
includeOriginalAudio
mediaSelectionOptionsFromArray:withoutMediaCharacteristics:
_addMediaSelectionOptionsIfNotAlreadyAdded:toMediaSelections:forMediaSelectionGroup:baseMediaSelection:
preferredAudioLanguageCodes
includeDeviceLanguageAudio
mediaSelectionOptionsFromArray:filteredAndSortedAccordingToPreferredLanguages:
extendedLanguageTag
includesAllSubtitles
mediaType
associatedMediaSelectionOptionInMediaSelectionGroup:
preferredSubtitleLanguageCodes
tvp_isSDHSubtitle
allowMultichannelAudio
limitMultichannelAudioToSingleLanguage
minimumRequiredPresentationSize
minimumRequiredMediaBitrateForMostCompatibleFormat
minimumRequiredMediaBitrateForHEVC
preferMostCompatibleRendition
allowHDR
storageSettingsImageData
aggregateAssetDownloadTaskWithURLAsset:mediaSelections:assetTitle:assetArtworkData:options:
download:didReceiveTaskIdentifier:
taskIdentifier
downloadIsComplete
resume
cancel
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:assetDownloadTask:didFinishDownloadingToURL:
URLSession:assetDownloadTask:didLoadTimeRange:totalTimeRangesLoaded:timeRangeExpectedToLoad:
URLSession:assetDownloadTask:didResolveMediaSelection:
URLSession:aggregateAssetDownloadTask:willDownloadToURL:
URLSession:aggregateAssetDownloadTask:didCompleteForMediaSelection:
URLSession:aggregateAssetDownloadTask:didLoadTimeRange:totalTimeRangesLoaded:timeRangeExpectedToLoad:forMediaSelection:
URLSession:assetDownloadTask:willDownloadVariants:
initWithMediaItem:downloadSession:existingDownloadTask:
addDelegate:
removeDelegate:
pause
failWithError:
setPerformKeyFetchOnly:
setAllowCellularUsage:
setPreferMostCompatibleRendition:
setMinimumRequiredPresentationSize:
setMinimumRequiredMediaBitrateForMostCompatibleFormat:
setMinimumRequiredMediaBitrateForHEVC:
setAllowHDR:
setAllowMultichannelAudio:
setLimitMultichannelAudioToSingleLanguage:
setIncludeDefaultAudioOption:
setIncludeOriginalAudio:
setIncludeDeviceLanguageAudio:
setPreferredAudioLanguageCodes:
setIncludesAllSubtitles:
setPreferredSubtitleLanguageCodes:
setUserInfo:
minimumRequiredMediaBitrate
setMinimumRequiredMediaBitrate:
setStateMachine:
setDownloadSession:
setDelegates:
setMediaSelectionToProgressMap:
_performKeyFetchOnly
_allowCellularUsage
_preferMostCompatibleRendition
_allowHDR
_allowMultichannelAudio
_limitMultichannelAudioToSingleLanguage
_includeDefaultAudioOption
_includeOriginalAudio
_includeDeviceLanguageAudio
_includesAllSubtitles
_downloadIsComplete
_state
_minimumRequiredMediaBitrateForMostCompatibleFormat
_minimumRequiredMediaBitrateForHEVC
_preferredAudioLanguageCodes
_preferredSubtitleLanguageCodes
_storageSettingsImageData
_userInfo
_minimumRequiredMediaBitrate
_stateMachine
_mediaItemLoader
_downloadSession
_downloadTask
_delegates
_downloadProgress
_mediaSelectionToProgressMap
_downloadInitiationBackgroundTask
_downloadTerminationBackgroundTask
_reportingSession
_numAudioSelectionsToBeDownloaded
_numSubtitleSelectionsToBeDownloaded
_numMediaSelectionsCompleted
_minimumRequiredPresentationSize
Tq,N,V_state
T@"TVPStateMachine",&,N,V_stateMachine
T@"TVPMediaItemLoader",&,N,V_mediaItemLoader
T@"TVPDownloadSession",W,N,V_downloadSession
T@"AVAggregateAssetDownloadTask",&,N,V_downloadTask
TB,N,V_downloadIsComplete
T@"NSPointerArray",&,N,V_delegates
T@"NSProgress",&,N,V_downloadProgress
T@"NSMapTable",&,N,V_mediaSelectionToProgressMap
TQ,N,V_downloadInitiationBackgroundTask
TQ,N,V_downloadTerminationBackgroundTask
T@"TVPReportingSession",&,N,V_reportingSession
TQ,N,V_numAudioSelectionsToBeDownloaded
TQ,N,V_numSubtitleSelectionsToBeDownloaded
TQ,N,V_numMediaSelectionsCompleted
TB,N,V_performKeyFetchOnly
TB,N,V_allowCellularUsage
TB,N,V_preferMostCompatibleRendition
T{CGSize=dd},N,V_minimumRequiredPresentationSize
T@"NSNumber",&,N,V_minimumRequiredMediaBitrateForMostCompatibleFormat
T@"NSNumber",&,N,V_minimumRequiredMediaBitrateForHEVC
TB,N,V_allowHDR
TB,N,V_allowMultichannelAudio
TB,N,V_limitMultichannelAudioToSingleLanguage
TB,N,V_includeDefaultAudioOption
TB,N,V_includeOriginalAudio
TB,N,V_includeDeviceLanguageAudio
T@"NSArray",&,N,V_preferredAudioLanguageCodes
TB,N,V_includesAllSubtitles
T@"NSArray",&,N,V_preferredSubtitleLanguageCodes
T@"NSData",&,N,V_storageSettingsImageData
T@"NSDictionary",&,N,V_userInfo
T@"NSNumber",&,N,V_minimumRequiredMediaBitrate
initWithAsset:
setAudioSelectionIsAutomatic:
muted
setSavedManualAudioSelection:
selectMediaOptionAutomaticallyInMediaSelectionGroup:
audioSelectionIsAutomatic
currentMediaSelection
savedManualAudioSelection
setMuted:
previousStatus
setPreviousStatus:
posterProxy
setPosterProxy:
scrubImageLoader
setScrubImageLoader:
_muted
_audioSelectionIsAutomatic
_previousStatus
_posterProxy
_scrubImageLoader
_savedManualAudioSelection
TB,N,V_audioSelectionIsAutomatic
T@"AVMediaSelectionOption",&,N,V_savedManualAudioSelection
T@"TVPMediaItemLoader",W,N,V_mediaItemLoader
TB,N,V_muted
Tq,N,V_previousStatus
T@"TVImageProxy",&,N,V_posterProxy
T@,&,N,V_scrubImageLoader
items
metadataItemsFromArray:withKey:keySpace:
setImageMetadataItem:
metadataItemsFromArray:filteredAndSortedAccordingToPreferredLanguages:
_loadChapterNameFromMetadataItem:
stringValue
setLocalizedName:
loadValuesAsynchronouslyForKeys:completionHandler:
initWithAVTimedMetadataGroup:filterByLanguages:
imageMetadataItem
_imageMetadataItem
T@"AVMetadataItem",&,N,V_imageMetadataItem
availableMediaCharacteristicsWithMediaSelectionOptions
appendFormat:
layer
layerClass
avPlayerLayer
T@"AVPlayerLayer",R,N
preservedVideoViewsForPlayer:identifier:
_playerStateDidChange:
addObserver:selector:name:object:
playerLayerView
setVideoGravity:
videoGravity
object
_purgePreservedVideoViewsForPlayer:
removeObserver:name:object:
initWithFrame:
bounds
setAutoresizingMask:
blackColor
setBackgroundColor:
addSubview:
setClipsToBounds:
removeObserver:
isReadyForDisplay
setReadyForDisplay:
removeWeakReferenceToVideoView:
addWeakReferenceToVideoView:
avPlayer
setAVPlayer:
_playerStillImageDidChange:
setLanczosFilterDownscalingEnabled:
setLanczosFilterDownscaleFactor:
stillImageView
removeFromSuperview
setStillImageView:
setContentMode:
insertSubview:aboveSubview:
setImage:
preserveVideoViewForReuse:identifier:
setIsPrimarySubtitleDisplayer:
AVPlayer
debugLabel
isPrimarySubtitleDisplayer
setPlayerLayerView:
_isPrimarySubtitleDisplayer
_readyForDisplay
_videoGravity
_debugLabel
_playerLayerView
_stillImageView
T@"TVPPlayerLayerView",&,N,V_playerLayerView
readyForDisplay
TB,N,GisReadyForDisplay,V_readyForDisplay
T@"UIImageView",&,N,V_stillImageView
T@"NSObject<TVPAVFPlayback>",&,N,V_player
T@"UILabel",R,N,V_debugLabel
TB,N,V_isPrimarySubtitleDisplayer
Tq,N,V_videoGravity
times
setTimes:
handler
setHandler:
tokenFromAVPlayer
setTokenFromAVPlayer:
_times
_handler
_tokenFromAVPlayer
T@"NSArray",C,N,V_times
T@?,C,N,V_handler
T@,&,N,V_tokenFromAVPlayer
weakObjectsHashTable
removeTemporaryDownloadDirectory
setActive:error:
initWithPlayer:
_audioRouteChanged:
_screenRecordingStateDidChange:
invalidated
setInvalidated:
_preferVideoDescriptionsSettingDidChange
_subtitleSettingsDidChange
_mediaItemLoader:stateDidChangeTo:
_playlistEndActionDidChange
playlist
_playlistCurrentMediaItemWillChangeWithContext:
null
_playlistCurrentMediaItemDidChangeWithContext:
_playlistNextMediaItemDidChangeWithContext:
_currentPlayerItemStatusDidChangeTo:from:
CMTimeValue
_currentPlayerItemDurationDidChangeTo:
_currentPlayerItemHasVideoDidChangeTo:
getValue:size:
_currentPlayerItemPresentationSizeDidChangeTo:
_currentPlayerItemLikelyToKeepUpDidChangeTo:
_currentPlayerItemBufferFullDidChangeTo:
_currentPlayerItemBufferEmptyDidChangeTo:
_currentPlayerItemWillChange
_currentPlayerItemDidChangeTo:
AVQueuePlayer
timeControlStatus
_timeControlStatusDidChangeTo:oldStatusNum:
_outputObscuredDidChangeTo:
_externalPlaybackActiveDidChange
_currentPlayerItemLoadedTimeRangesDidChangeTo:
_currentPlayerItemSeekableTimeRangesDidChangeTo:
_currentPlayerItemTimedMetadataDidChange
_currentPlayerItemTracksDidChangeTo:from:
playlistInternal
setPlaylist:
currentMediaItemLoader
changeMediaInDirection:reason:ignoreDelegate:
player:shouldChangeMediaInDirection:
asyncDelegate
asyncDelegateOperations
_processNextAsyncDelegateOperation
player:shouldChangeMediaInDirection:completion:
setBlock:
_enqueueAsyncDelegateOperation:
changeToMediaAtIndex:reason:ignoreDelegate:
player:shouldChangeToMediaAtIndex:
player:shouldChangeToMediaAtIndex:completion:
interactive
setMaximumTrailingBufferDuration:
externalImagePlayer
progressiveJumpingScrubber
scanWithRate:withAVKitCompletion:
setPostAVKitScanningState:
setElapsedTime:seekPrecision:ignoreDelegate:withAVKitCompletion:
setPlaybackDate:withAVKitCompletion:
cachedSeekableTimeRanges
_currentMediaItemReversePlaybackEndTime
valueWithCMTime:
elapsedCMTime
_statesThatReturnStartTime
startPosition
_clampInfiniteTimeToSeekableRange:
_statesThatReturnAVPlayerTime
currentPlayerItem
status
currentTime
cachedDuration
_clampedElapsedTimeForTime:duration:
_statesThatReturnSeekTime
timeBeingSeekedTo
_clampedSceneTimeForPlayerTime:
_currentDateFromPlayerItem:
dateBeingSeekedTo
postAVKitScanningState
pauseWithAVKitCompletion:
playWithAVKitCompletion:
UUID
elapsedTimeObserverBlocks
boundaryTimeObserverInfos
_addBoundaryTimeObserversToAVQueuePlayer:
removeTimeObserver:
durationCMTime
_currentMediaItemForwardPlaybackEndTime
isMuted
setVolume:
chapterCollections
chapterBoundaryTimeObserverToken
removeBoundaryTimeObserverWithToken:
setChapterBoundaryTimeObserverToken:
setCurrentChapter:
addBoundaryTimeObserverForTimes:withHandler:
currentChapterCollection
interstitialBoundaryTimeObserverToken
setInterstitialBoundaryTimeObserverToken:
setCurrentInterstitial:
tvp_sortedAudioAVMediaSelectionOptions
initWithOption:
avMediaSelectionOption
_savePreferredAudioLanguageFromAudioOption:
audioOptions
tvp_sortedSubtitleAVMediaSelectionOptions
offSubtitleOption
autoSubtitleOption
initWithAVMediaSelectionOption:
player:filteredSubtitleOptionsFromOptions:
_updateSelectedSubtitleForFilteredOptions:
performSelector:withObject:afterDelay:
_setSelectedSubtitleOption:userOverridesSystemSubtitleSettings:
temporarySubtitleOverrideType
subtitleOptions
hasMediaCharacteristic:
updateSubtitleOptions
cachedLoadedTimeRanges
currentPlayerItemContainsDates
_estimatedPlaybackDateForCMTime:
initWithStartDate:duration:
_updateAVPlayerActionAtItemEnd
setPreferredPeakBitRate:
currentMediaItemIsStreaming
canPlayFastForward
numOutstandingSeeks
setPreventsDisplaySleepDuringVideoPlayback:
_addHighFrequencyTimeObserverIfNecessary
_removeHighFrequencyTimeObserverIfNecessary
setBookmarkMonitor:
setPlayerReporter:
_selectMediaArray:withItem:
earlyAVQueuePlayer
_newAVQueuePlayer
setEarlyAVQueuePlayer:
mediaSelectionGroupForPropertyList:mediaSelectionOption:
_removeObserversFromAVQueuePlayer:
_removePeriodicTimeObserverFromAVQueuePlayer:
_removeBoundaryTimeObserversFromAVQueuePlayer:
_removePlaybackEndTimeBoundaryObservers
removeAllItems
_updateVideoViewsWithAVQueuePlayer:
_addObserversToAVQueuePlayer:
_addPeriodicTimeObserverToAVQueuePlayer:
setMinRateForAudioPlayback:
_isScreenBeingRecorded
setWasMutedPriorToScreenRecording:
volume
limitsBandwidthForCellularAccess
_setLimitsBandwidthForCellularAccess:
preventsSleepDuringVideoPlayback
accessLog
errorLog
timedMetadata
_removeObserversForPlayerItem:
cancelPendingSeeks
_addObserversForPlayerItem:
setResourceConservationLevelWhilePaused:
resourceConservationLevelWhilePaused
_removeObserversForPlaylist:
_addObserversForPlaylist:
setLoadingInitialItemInPlaylist:
setInitialMediaItemHasCompletedInitialLoading:
setCurrentDirectionOfPlaylistChange:
mediaItemLoaders
_updateMediaRemoteManager
_setAncillaryPerformanceInformationForDisplay:
setPreferredForwardBufferDuration:
setPreferredMaximumResolution:
setPreferredMaximumResolutionForExpensiveNetworks:
setAllowsConstrainedNetworkUsage:
externalPlaybackType
_resetAndReselectAudioOptions
updateSubtitleOptionsAndSelection
cancelPreviousPerformRequestsWithTarget:selector:object:
_avPlayerRateDidChange:
periodicTimeObserverToken
_avPlayerTimeDidChangeTo:
addPeriodicTimeObserverForInterval:queue:usingBlock:
setPeriodicTimeObserverToken:
highFrequencyElapsedTimeObserverBlock
highFrequencyTimeObserverToken
setHighFrequencyTimeObserverToken:
addBoundaryTimeObserverForTimes:queue:usingBlock:
_currentPlayerItemDidHitBeginningOrEnd:
_currentPlayerItemAccessLogDidChange:
_currentPlayerItemErrorLogDidChange:
_currentPlayerItemDidStall:
_currentPlayerItemDidFailToPlayToEnd:
_currentPlayerItemMediaSelectionDidChange:
_currentPlayerItemReachedTimeToPauseBuffering:
_currentPlayerItemReachedTimeToPausePlayback:
containsStreamingAVAsset
setPlaybackEndTimeBoundaryObserverTokens:
playbackEndTimeBoundaryObserverTokens
_currentMediaItemMetadataDidChange:
reportingDelegate
prepareForLoadingWithCompletion:
mediaItemDidPrepareForLoading:timeTakenForOperation:player:
timingData
mediaItemDidLoadAVAssetKeys:timeTakenForOperation:player:
setCachedDuration:
prepareForPlaybackInitiationWithCompletion:
mediaItemDidPrepareForPlaybackInitiation:timeTakenForOperation:player:
playbackErrorFromError:forMediaItem:
_removeObserversForMediaItemLoader:
_removeObserversForMediaItem:
_postCurrentMediaItemWillChangeNotificationWithDirection:reason:didHitBeginningOfPlaylist:didHitEndOfPlaylist:
setCurrentMediaItemIsStreaming:
setCurrentMediaItemInitialLoadingComplete:
_addObserversForMediaItem:
_postCurrentMediaItemDidChangeNotificationWithDirection:reason:didHitBeginningOfPlaylist:didHitEndOfPlaylist:
mediaItemWillNoLongerBeCurrentItem:player:reason:
mediaItemDidBecomeCurrentItem:player:reason:
modifyingAVPlayerRate
reasonForWaitingToPlay
outputObscuredDueToInsufficientExternalProtection
setOutputObscuredDueToInsufficientExternalProtection:
errorWithDomain:code:userInfo:
_logExternalPlaybackType
cachedElapsedTime
currentInterstitialCollection
_notifyListenersOfElapsedTimeChange:playbackDate:dueToTimeJump:
setCachedElapsedTime:
setPlayerItemChangeIsHappening:
modifyingAVPlayerQueue
mediaItemChangeReason
setCurrentPlayerItem:
setCurrentPlayerItemContainsDates:
setCurrentPlayerItemContainsRealDates:
setCurrentMediaItemHasDates:
setChapterCollections:
setCurrentChapterCollection:
setCurrentInterstitialCollection:
setAudioOptions:
setSubtitleOptions:
setTimeBeingSeekedTo:
setDateBeingSeekedTo:
setTimeAtStartOfSeek:
setPlaybackDateAtStartOfSeek:
setExternalImagePlayer:
setCachedSelectedAudioOption:
setMediaItemChangeReason:
playerItemChangeIsHappening
setCurrentMediaItemHasVideoContent:
setCurrentMediaItemPresentationSize:
_logAccessLogEvents
setCachedLoadedTimeRanges:
setSceneCompletelyBuffered:
setCachedSeekableTimeRanges:
_updateIsLiveForElapsedTime:
tracks
_configureSoundCheckForPlayerItem:tracks:
_updateMetadataWithVideoQualityColorRangeAndDolbyAtmosForPlayerItem:tracks:
_updateCurrentMediaItemAudioInfoForPlayerItem:tracks:
mediaItemDidSwitchVariantStreams:player:
_videoTrackIDFromTracks:
selectedAudioOption
cachedSelectedAudioOption
setMediaItemMetadata:forProperty:
textStyleRulesFromPropertyList:
setTextStyleRules:
_setScrubPlayerItem:onPlayerItem:
_populateCurrentPlayerItemWithUpNextMetadata
setTimeToPauseBuffering:
setTimeToPausePlayback:
initWithObjects:
setWithArray:
intersectsSet:
_populatePlayerItem:withMetadataFromMediaItem:
pausesOnRouteChange
unsignedIntegerValue
wasMutedPriorToScreenRecording
_avPlayerRateDidChangeTo:
setUsesExternalPlaybackWhileExternalScreenIsActive:
setAllowsOutOfBandTextTrackRendering:
savedPreferredAudioLanguageCode
initWithPreferredLanguages:preferredMediaCharacteristics:
initWithPrincipalMediaCharacteristics:preferredLanguages:preferredMediaCharacteristics:
objectEnumerator
mediaItem:elapsedTimeDidChangeTo:playbackDateDidChangeTo:dueToTimeJump:
mediaItemEndAction
setActionAtItemEnd:
canPlaySlowForward
canPlayReverse
canPlaySlowReverse
canPlayFastReverse
_setState:updatedRate:reason:notifyListeners:
mediaItem:willChangeFromPlaybackState:toPlaybackState:updatedRate:player:
mediaItem:didChangeFromPlaybackState:toPlaybackState:updatedRate:player:
assetTrack
trackID
tvp_cachedAudioSelectionCriteria
_audioSelectionCriteriaForMediaItemLoader:
setTvp_cachedAudioSelectionCriteria:
setMediaSelectionCriteria:forMediaCharacteristic:
setSelectedAudioOption:
selectedSubtitleOption
setTemporarySubtitleOverrideType:
languageCodeFromLocale
localeWithLocaleIdentifier:
videoViewWeakReferences
isPlaybackLikelyToKeepUp
isPlaybackBufferFull
sceneCompletelyBuffered
allowsCellularUsage
allowsConstrainedNetworkUsage
replacementErrorForPlaybackError:
numberWithFloat:
setIsLive:
setAsyncDelegateInProgress:
block
isEnabled
setLoudnessInfo:
currentPlayerItemContainsRealDates
currentDate
currentEstimatedDate
iFramePrefetchMaxSize
events
lastObject
observedBitrate
_bitRateString:
averageVideoBitrate
averageAudioBitrate
indicatedBitrate
indicatedAverageBitrate
_videoAssetTracksFromTracks:
formatDescriptions
setCurrentMediaItemVideoRange:
_descriptionForVideoResolutionClass:
_descriptionForVideoRange:
_hasDolbyAtmosForTracks:
performMediaItemMetadataTransactionWithBlock:
_audioAssetTracksFromTracks:
_audioFormatForAudioCodecType:
currentMediaItemAudioFormat
_stringForAudioFormat:
setCurrentMediaItemAudioFormat:
currentMediaItemAudioChannels
setCurrentMediaItemAudioChannels:
_isProbablyBeingRecorded
longLongValue
setExtendedLanguageTag:
numberWithLongLong:
_getStringForTitleLabel:subtitleLabel:forMediaItem:
initUrlWithProperties:imageSize:focusSizeIncrease:cropCode:urlFormat:
imageURLWithDescription:
URLWithString:
initWithURL:headers:identifier:decrypter:
initWithObject:imageLoader:groupType:
uiImage
setPreferredRange:
size
initWithSize:format:
imageType
typeWithIdentifier:
conformsToType:
drawAtPoint:
PNGDataWithActions:
JPEGDataWithCompressionQuality:actions:
setDataType:
externalMetadata
setExternalMetadata:
setCompletionHandler:
load
languageCodeBCP47
setSavedPreferredAudioLanguageCode:
setModifyingAVPlayerRate:
setRate:withVolumeRampDuration:
rateUsedForPlayback
_setState:updatedRate:notifyListeners:
AVKitExternalImageScanningUpdateBlock
setLastTimeSentToAVKitImageHandler:
_notifyOfBoundaryCrossingBetweenPreviousTime:updatedTime:
currentMediaItemHasVideoContent
_currentPlayerItemCanScanAtRate:
setProgressiveJumpingScrubber:
setStartPosition:
setStartingSeekPrecision:
playerItemFromCacheManager
setPlayerItemFromCacheManager:
newPlayerItem
maximumBitRate
preferredMaximumResolution
preferredMaximumResolutionForExpensiveNetworks
preferredForwardBufferDuration
_beingUsedForIFrameOnlyPlayback
setCanUseNetworkResourcesForLiveStreamingWhilePaused:
startingSeekPrecision
standardUserDefaults
stringForKey:
floatValue
boolForKey:
seekToTime:toleranceBefore:toleranceAfter:completionHandler:
setInitialDate:
setIFramePrefetchTargetDimensions:
setForwardPlaybackEndTime:
setReversePlaybackEndTime:
setMediaKind:
_soundCheckNormalizationForMediaItem:
setSoundCheckVolumeNormalization:
preferredSoundCheckVolumeNormalization
propertyListRepresentation
mediaSelectionOptionWithPropertyList:
setRestrictsAutomaticMediaSelectionToAvailableOfflineOptions:
_updateAudioSelectionCriteriaForMediaItemLoader:
pendingSelectedMediaArray
setPendingSelectedMediaArray:
setHaveEverEnqueuedPlayerItem:
setModifyingAVPlayerQueue:
insertItem:afterItem:
mediaItemWillStartBuffering:player:
setNumOutstandingSeeks:
_estimatedCMTimeForPlaybackDate:referenceTime:referenceDate:
seekToDate:completionHandler:
player:shouldSeekToTime:playbackDate:
player:shouldSeekToTime:completion:
seekableDateRange
laterDate:
player:shouldSeekToDate:completion:
player:shouldScanAtRate:
player:shouldScanAtRate:completion:
playerShouldPause:
player:shouldPauseWithCompletion:
playerShouldPlay:timeFromWhichToPlay:
player:shouldPlayFromTime:completion:
setPostLoadingState:
usesLegacyDelegateBehavior
chapterMetadataGroupsBestMatchingPreferredLanguages:
availableChapterLocales
chapterMetadataGroupsWithTitleLocale:containingItemsWithCommonKeys:
setAVQueuePlayer:
setUnqueuedPlayerItem:
setWaitsAfterPreparingMediaItems:
_playerDidBecomeInactive:
playerReporter
reportingHierarchyToken
setReportingHierarchyToken:
_addObserversForMediaItemLoader:
advanceToNextItem
_playerWillBecomeActive:
setForceSoundCheck:error:
setPlaylistInternal:
lastTimeSentToAVKitImageHandler
isPlaybackBufferEmpty
waitsAfterPreparingMediaItems
prepareForPlaybackInitiation
createsPlayerItemButDoesNotEnqueue
playbackCoordinator
_addPlaybackEndTimeBoundaryObservers
haveEverEnqueuedPlayerItem
postLoadingState
mediaItemPlayerItemStatusDidBecomeReadyToPlay:timeTakenForOperation:player:
hasVideo
subtitleType
_isPlaybackLikelyToKeepUp
mediaItemBufferingDidBecomeLikelyToKeepUp:timeTakenForOperation:player:
mediaItemAllInitialLoadingComplete:totalTime:player:
initialMediaItemHasCompletedInitialLoading
removeItem:
playbackDateAtStartOfSeek
timeAtStartOfSeek
remainLoadingWhenSeekCompletes
stop
shouldRetryPlaybackForError:
errorBehavior
loadingInitialItemInPlaylist
mediaItem:errorDidOccur:player:
currentDirectionOfPlaylistChange
mediaItemDidStall:player:
shouldDeactivateAVAudioSession
setShouldDeactivateAVAudioSession:
playbackCoordinator:identifierForPlayerItem:
changeMediaInDirection:
changeMediaInDirection:reason:
continueLoadingCurrentItem
play
playIgnoringDelegate:
pauseIgnoringDelegate:
pauseWithVolumeRampDuration:
togglePlayPause
scanWithRate:
stopWithVolumeRampDuration:
setElapsedTime:precise:
setElapsedTime:seekPrecision:
setElapsedTime:seekPrecision:ignoreDelegate:
addElapsedTimeObserver:
removeElapsedTimeObserverWithToken:
addBoundaryTimeObserverForDates:withHandler:
skipToNextChapterInDirection:
setSelectedSubtitleOption:setGlobalPreference:
currentMediaItemSupportsScrubbingUsingPlayer
setAsyncDelegate:
currentMediaItemPreparedForLoading
currentMediaItemInitialLoadingComplete
currentMediaItemPresentationSize
currentMediaItemHasDates
setErrorBehavior:
setInteractive:
setRateUsedForPlayback:
isLive
currentChapter
currentInterstitial
bufferedTimeRange
seekableTimeRange
forwardPlaybackEndTime
reversePlaybackEndTime
setMediaItemEndAction:
setSelectedSubtitleOption:
setMaximumBitRate:
setPreventsSleepDuringVideoPlayback:
updatesMediaRemoteInfoAutomatically
setUpdatesMediaRemoteInfoAutomatically:
limitReadAhead
setLimitReadAhead:
changeToMediaAtIndex:reason:
T@"NSString",R,N
T@"<TVPPlaybackDelegate>",W,N
T@"<TVPASyncPlaybackDelegate>",W,N
T@"TVPPlaylist",&,N
T@"NSObject<TVPMediaItem>",&,N
T{CGSize=dd},R,N
T@"TVPPlaybackState",R,N
Tq,N
TB,N
Td,N
T@"NSDate",C,N
Tf,N
T@"TVPChapterCollection",&,N
T@"TVPChapter",R,N
T@"TVPInterstitial",R,N
T@"TVPTimeRange",R,N
T@"TVPDateRange",R,N
T@"TVPAudioOption",&,N
T@"TVPSubtitleOption",&,N
setElapsedTime:orPlaybackDate:withAVKitCompletion:
T@"AVPlayer",R,N
avKitSeekDidComplete
avKitDidFinishScanning
seeking
setHighFrequencyElapsedTimeObserverBlock:
currentScanMode
setUpdatesBookmarks:
setSendsPlayerReports:
selectMediaArray:
AVQueuePlayerCreateIfNecessary:
restartPlaybackWithState:
setMediaRemoteUpdatingEnabled:
setPlaybackHUDString:
setPrefersSDRVideo:
prefersSDRVideo
setLimitsBandwidthForCellularAccess:
setCurrentMediaItemLoader:
setElapsedTimeObserverBlocks:
setBoundaryTimeObserverInfos:
bookmarkMonitor
setVideoViewWeakReferences:
setMediaItemLoaders:
handleRemoteCommandsWithoutUpdatingMediaRemote
setHandleRemoteCommandsWithoutUpdatingMediaRemote:
setPausesOnRouteChange:
updatesBookmarks
sendsPlayerReports
pausesOnHDCPProtectionDown
setPausesOnHDCPProtectionDown:
currentMediaItemVideoRange
setAsyncDelegateOperations:
setIFramePrefetchMaxSize:
asyncDelegateInProgress
setUsesLegacyDelegateBehavior:
setCreatesPlayerItemButDoesNotEnqueue:
unqueuedPlayerItem
setAVKitExternalImageScanningUpdateBlock:
mediaRemoteUpdatingEnabled
setRemainLoadingWhenSeekCompletes:
_currentMediaItemHasVideoContent
_currentMediaItemIsStreaming
_currentMediaItemHasDates
_interactive
_waitsAfterPreparingMediaItems
_currentMediaItemInitialLoadingComplete
_preventsSleepDuringVideoPlayback
_updatesMediaRemoteInfoAutomatically
_isLive
_prefersSDRVideo
_limitsBandwidthForCellularAccess
_allowsCellularUsage
_allowsConstrainedNetworkUsage
_invalidated
_handleRemoteCommandsWithoutUpdatingMediaRemote
_pausesOnRouteChange
_updatesBookmarks
_sendsPlayerReports
_pausesOnHDCPProtectionDown
_wasMutedPriorToScreenRecording
_loadingInitialItemInPlaylist
_currentPlayerItemContainsDates
_currentPlayerItemContainsRealDates
_modifyingAVPlayerRate
_modifyingAVPlayerQueue
_playerItemChangeIsHappening
_sceneCompletelyBuffered
_outputObscuredDueToInsufficientExternalProtection
_asyncDelegateInProgress
_usesLegacyDelegateBehavior
_createsPlayerItemButDoesNotEnqueue
_mediaRemoteUpdatingEnabled
_remainLoadingWhenSeekCompletes
_initialMediaItemHasCompletedInitialLoading
_haveEverEnqueuedPlayerItem
_volume
_asyncDelegate
_errorBehavior
_rateUsedForPlayback
_mediaItemEndAction
_maximumBitRate
_chapterCollections
_currentChapterCollection
_currentChapter
_currentInterstitialCollection
_currentInterstitial
_audioOptions
_subtitleOptions
_preferredForwardBufferDuration
_playlistInternal
_postLoadingState
_postAVKitScanningState
_currentMediaItemLoader
_elapsedTimeObserverBlocks
_boundaryTimeObserverInfos
_periodicTimeObserverToken
_highFrequencyTimeObserverToken
_bookmarkMonitor
_playerReporter
_numOutstandingSeeks
_videoViewWeakReferences
_mediaItemLoaders
_currentMediaItemVideoRange
_currentMediaItemAudioFormat
_currentMediaItemAudioChannels
_pendingSelectedMediaArray
_currentPlayerItem
_dateBeingSeekedTo
_playbackDateAtStartOfSeek
_currentDirectionOfPlaylistChange
_chapterBoundaryTimeObserverToken
_externalImagePlayer
_interstitialBoundaryTimeObserverToken
_progressiveJumpingScrubber
_mediaItemChangeReason
_asyncDelegateOperations
_temporarySubtitleOverrideType
_playbackEndTimeBoundaryObserverTokens
_cachedSelectedAudioOption
_earlyAVQueuePlayer
_cachedLoadedTimeRanges
_cachedSeekableTimeRanges
_AVQueuePlayer
_playerItemFromCacheManager
_startPosition
_highFrequencyElapsedTimeObserverBlock
_unqueuedPlayerItem
_AVKitExternalImageScanningUpdateBlock
_currentMediaItemPresentationSize
_preferredMaximumResolution
_preferredMaximumResolutionForExpensiveNetworks
_iFramePrefetchMaxSize
_startingSeekPrecision
_lastTimeSentToAVKitImageHandler
_timeBeingSeekedTo
_timeAtStartOfSeek
_cachedElapsedTime
_cachedDuration
TB,N,V_invalidated
T@"TVPPlaylist",&,N,V_playlistInternal
T@"TVPPlaybackState",&,N,V_postLoadingState
T@"TVPPlaybackState",&,N,V_postAVKitScanningState
T@"TVPMediaItemLoader",&,N,V_currentMediaItemLoader
T@"NSMutableDictionary",&,N,V_elapsedTimeObserverBlocks
T@"NSMutableDictionary",&,N,V_boundaryTimeObserverInfos
T@,&,N,V_periodicTimeObserverToken
T@,&,N,V_highFrequencyTimeObserverToken
T{?=qiIq},N,V_startTime
T{?=qiIq},N,V_startingSeekPrecision
T@"TVPPlayerBookmarkMonitor",&,N,V_bookmarkMonitor
T@"TVPPlayerReporter",&,N,V_playerReporter
Tq,N,V_numOutstandingSeeks
T@"NSHashTable",&,N,V_videoViewWeakReferences
T@"NSMutableSet",&,N,V_mediaItemLoaders
TB,N,V_handleRemoteCommandsWithoutUpdatingMediaRemote
TB,N,V_pausesOnRouteChange
TB,N,V_updatesBookmarks
TB,N,V_sendsPlayerReports
T{?=qiIq},N,V_lastTimeSentToAVKitImageHandler
TB,N,V_pausesOnHDCPProtectionDown
Td,N,V_preferredForwardBufferDuration
T{CGSize=dd},N,V_preferredMaximumResolution
T{CGSize=dd},N,V_preferredMaximumResolutionForExpensiveNetworks
TB,N,V_prefersSDRVideo
TB,N,V_limitsBandwidthForCellularAccess
TB,N,V_allowsCellularUsage
TB,N,V_allowsConstrainedNetworkUsage
Tq,N,V_currentMediaItemVideoRange
Tq,N,V_currentMediaItemAudioFormat
Tq,N,V_currentMediaItemAudioChannels
T@"NSArray",C,N,V_pendingSelectedMediaArray
TB,N,V_wasMutedPriorToScreenRecording
TB,N,V_loadingInitialItemInPlaylist
T@"TVPPlayerItem",&,N,V_currentPlayerItem
TB,N,V_currentPlayerItemContainsDates
TB,N,V_currentPlayerItemContainsRealDates
TB,N,V_modifyingAVPlayerRate
TB,N,V_modifyingAVPlayerQueue
TB,N,V_playerItemChangeIsHappening
T{?=qiIq},N,V_timeBeingSeekedTo
T@"NSDate",&,N,V_dateBeingSeekedTo
T@"NSDate",&,N,V_playbackDateAtStartOfSeek
T{?=qiIq},N,V_timeAtStartOfSeek
Tq,N,V_currentDirectionOfPlaylistChange
T@,&,N,V_chapterBoundaryTimeObserverToken
T@"TVPExternalImagePlayer",&,N,V_externalImagePlayer
T@"TVPInterstitialCollection",&,N,V_currentInterstitialCollection
T@,&,N,V_interstitialBoundaryTimeObserverToken
T{?=qiIq},N,V_cachedElapsedTime
T@"TVPProgressiveJumpingScrubber",&,N,V_progressiveJumpingScrubber
T@"NSString",&,N,V_mediaItemChangeReason
TB,N,V_sceneCompletelyBuffered
T@"NSMutableArray",&,N,V_asyncDelegateOperations
T@"NSNumber",&,N,V_temporarySubtitleOverrideType
T@"NSArray",&,N,V_playbackEndTimeBoundaryObserverTokens
T@"TVPAudioOption",&,N,V_cachedSelectedAudioOption
T@"AVQueuePlayer",&,N,V_earlyAVQueuePlayer
T{?=qiIq},N,V_cachedDuration
T@"NSArray",&,N,V_cachedLoadedTimeRanges
T@"NSArray",&,N,V_cachedSeekableTimeRanges
TB,N,V_currentMediaItemInitialLoadingComplete
TB,N,V_currentMediaItemHasVideoContent
TB,N,V_currentMediaItemIsStreaming
T{CGSize=dd},N,V_currentMediaItemPresentationSize
TB,N,V_currentMediaItemHasDates
T@"AVQueuePlayer",&,N,V_AVQueuePlayer
T@"TVPPlayerItem",&,N,V_playerItemFromCacheManager
TB,N,V_outputObscuredDueToInsufficientExternalProtection
Td,N,V_startPosition
T@"NSArray",&,N,V_chapterCollections
T@"TVPChapter",&,N,V_currentChapter
T@"TVPInterstitial",&,N,V_currentInterstitial
T@"NSArray",&,N,V_audioOptions
T@"NSArray",&,N,V_subtitleOptions
T{CGSize=dd},N,V_iFramePrefetchMaxSize
TB,N,V_asyncDelegateInProgress
TB,N,V_usesLegacyDelegateBehavior
TB,N,V_isLive
T@?,C,N,V_highFrequencyElapsedTimeObserverBlock
TB,N,V_createsPlayerItemButDoesNotEnqueue
T@"AVPlayerItem",&,N,V_unqueuedPlayerItem
T@?,C,N,V_AVKitExternalImageScanningUpdateBlock
TB,N,V_mediaRemoteUpdatingEnabled
TB,N,V_remainLoadingWhenSeekCompletes
TB,N,V_initialMediaItemHasCompletedInitialLoading
TB,N,V_haveEverEnqueuedPlayerItem
T@"NSString",R,N,V_name
T@"<TVPPlaybackDelegate>",W,N,V_delegate
T@"<TVPASyncPlaybackDelegate>",W,N,V_asyncDelegate
T@"TVPPlaybackState",R,N,V_state
Tq,N,V_errorBehavior
TB,N,V_interactive
Td,N,V_rateUsedForPlayback
TB,N,V_waitsAfterPreparingMediaItems
Tf,N,V_volume
T@"TVPChapterCollection",&,N,V_currentChapterCollection
Tq,N,V_mediaItemEndAction
Td,N,V_maximumBitRate
TB,N,V_preventsSleepDuringVideoPlayback
TB,N,V_updatesMediaRemoteInfoAutomatically
localizedInfoString
imageUrlStringFormat
initWithLocalizedProductPlacementInfoString:duration:andImageURLStringFormat:
setLocalizedInfoString:
setImageUrlStringFormat:
_localizedInfoString
_imageUrlStringFormat
T@"NSString",&,N,V_localizedInfoString
T@"NSNumber",&,N,V_duration
T@"NSString",&,N,V_imageUrlStringFormat
taskIDsToDownloads
initializeWithDownloadingMediaItems:
downloadForMediaItem:
setTaskIDsToDownloads:
_taskIDsToDownloads
T@"NSMutableDictionary",&,N,V_taskIDsToDownloads
T@"<TVPDownloadSessionDelegate>",W,N,V_delegate
currentCalendar
components:fromDate:
minute
setMinute:
second
setSecond:
nanosecond
setNanosecond:
dateByAddingComponents:toDate:options:
setDay:
tvp_dateByAddingDays:
date
_isEqualToDateIgnoringTime:
tvp_dateBySubtractingDays:
year
month
tvp_dateFlooredToNearestMinute:
tvp_dateCeiledToNearestMinute:
tvp_isToday
tvp_isTomorrow
tvp_isYesterday
tvp_networkTimeIsApproximatelyCorrect
setDateFormat:
timeZoneForSecondsFromGMT:
setTimeZone:
setFormatterBehavior:
calendarWithIdentifier:
setCalendar:
tvp_ISO8601CombinedDateAndTimeFormatter
tvp_RFC1123DateFormatter
tvp_RFC850DateFormatter
tvp_asctimeDateFormatter
tvp_groupedAudioAVMediaSelectionOptionsFromOptions:
currentLocale
tvp_languageCodeFromLocale
displayNameForKey:value:
localizedCaseInsensitiveCompare:
string
tvp_filteredAndSubsortedMainProgramSubtitleOptionsFromOptions:
tvp_sortedAuxSubtitleOptionsFromOptions:
tvp_localizedDisplayString
isMainThread
_block
T@"NSNumber",R,N,V_identifier
T@?,C,N,V_block
T@"AVPlayerMediaSelectionCriteria",&,N
_playerStateWillChange:
_playerCurrentMediaItemWillChange:
_playerCurrentMediaItemDidChange:
rtcAgent
_setupRTCAgent
_sendPlaybackStartupEventsIfNecessary
_tearDownRTCAgent
timeIntervalSinceNow
regeneratePersistentIdentifierForDNU:
newHierarchyTokenFromParentToken:
_rtcAgentUserInfo
setRtcAgent:
setMessageLoggingBlock:
fetchReportingStatesWithUserInfo:fetchComplete:
_sendRTCEvent:withCategory:type:values:
sendPlaybackStartupMetricsManually
_rtcAgent
_reportingHierarchyToken
T@"RTCReporting",&,V_rtcAgent
T@,&,N,V_reportingHierarchyToken
replaceObjectAtIndex:withObject:
indexesOfObjectsPassingTest:
objectsAtIndexes:
tvp_randomizedArray
tvp_arrayByMappingObjectsUsingBlock:
tvp_objectsPassingTest:
tvp_shallowIsEqualToArray:
exchangeObjectAtIndex:withObjectAtIndex:
tvp_addObjectIfNotNil:
logoImage
setLogoImage:
attributedWarningText
setAttributedWarningText:
attributedAppleIDText
setAttributedAppleIDText:
textDwellTime
setTextDwellTime:
maxTextWidth
setMaxTextWidth:
_logoImage
_attributedWarningText
_attributedAppleIDText
_textDwellTime
_maxTextWidth
T@"UIImage",&,N,V_logoImage
T@"NSAttributedString",&,N,V_attributedWarningText
T@"NSAttributedString",&,N,V_attributedAppleIDText
Td,N,V_textDwellTime
Td,N,V_maxTextWidth
commonMetadata
metadataItemsFromArray:withLocale:
displayNameWithLocale:
localeIdentifier
displayName
locale
localizedName
chapterDescription
setChapterDescription:
setDateRange:
_localizedName
_chapterDescription
_dateRange
T@"NSString",C,N,V_localizedName
T@"NSString",C,N,V_chapterDescription
T@"TVPDateRange",&,N,V_dateRange
T@"TVPDateRange",&,D,N
imageCount
setImageCount:
baseURL
setBaseURL:
usesOneBasedImageIndexes
setUsesOneBasedImageIndexes:
imageNameFormatString
setImageNameFormatString:
version
setVersion:
_usesOneBasedImageIndexes
_imageCount
_baseURL
_imageNameFormatString
_version
Tq,N,V_imageCount
T@"NSURL",C,N,V_baseURL
TB,N,V_usesOneBasedImageIndexes
T@"NSString",C,N,V_imageNameFormatString
T@"NSString",C,N,V_version
_playerErrorDidOccur:
setPlayerHasFinishedLoading:
_updateBookmarkTimeForMediaItem:player:playbackOfMediaItemIsEnding:
_updatePlayCountForMediaItem:player:
bookmarkPeriodicSaveTimer
_bookmarkPeriodicSaveTimerFired:
setBookmarkPeriodicSaveTimer:
updateBookmarkWithSuggestedTime:forElapsedTime:duration:playbackOfMediaItemIsEnding:
playerHasFinishedLoading
updatePlayCountForElapsedTime:duration:
_playerHasFinishedLoading
_bookmarkPeriodicSaveTimer
T@"NSTimer",&,N,V_bookmarkPeriodicSaveTimer
T@"NSObject<TVPPlayback>",W,N,V_player
TB,N,V_playerHasFinishedLoading
loadingRequest
setResponse:
setRedirect:
contentInformationRequest
dataRequest
respondWithData:
finishLoading
setContentType:
dictionaryRepresentation
serializableRepresentation
initWithAssetResourceLoadingRequest:
finishLoadingWithResponse:data:renewalDate:redirect:
finishLoadingWithResponseData:renewalDate:keyType:
avRequestID
_loadingRequest
T@"AVAssetResourceLoadingRequest",R,N,V_loadingRequest
T@"NSNumber",R,C,N
T@"NSDictionary",R,C,N
T@"NSURL",R,N
_currentLocaleDidChange:
metadataItemsFromArray:filteredByIdentifier:
propertyList
setLocalizedDisplayString:
initWithPropertyListRepresentation:
initWithSavedTrackID:savedLocaleLanguageCode:
localizedDisplayString
title
hasAudioDescriptions
setAvMediaSelectionOption:
setTitle:
setLanguageCodeFromLocale:
setLanguageCodeBCP47:
setPropertyListRepresentation:
setTrackID:
savedLocaleLanguageCode
setSavedLocaleLanguageCode:
_trackID
_avMediaSelectionOption
_localizedDisplayString
_title
_languageCodeFromLocale
_languageCodeBCP47
_propertyListRepresentation
_savedLocaleLanguageCode
T@"AVMediaSelectionOption",&,N,V_avMediaSelectionOption
T@"NSString",C,N,V_localizedDisplayString
T@"NSString",C,N,V_title
T@"NSString",C,N,V_languageCodeFromLocale
T@"NSString",C,N,V_languageCodeBCP47
T@,&,N,V_propertyListRepresentation
Ti,N,V_trackID
T@"NSString",C,N,V_savedLocaleLanguageCode
scheme
setRequestStartDate:
_loadSecureKeyRequest:sendStartReportingEvent:
secureKeyLoader
setCertFetchInProgress:
setCertificateData:
requestsAwaitingCertFetch
reportingID
setContentIdentifierData:
loadKeyRequestDataAsynchronouslyWithCompletion:
setRequestEndDate:
requestCompletionTime
offlineKeyDataForResponseData:error:
_finishLoadingWithError:forRequest:
certFetchInProgress
retryCount
setRetryCount:
certificateData
isSecureKeyDeliveryRequest:
setSecureKeyLoader:
setRequestsAwaitingCertFetch:
_certFetchInProgress
_secureKeyLoader
_certificateData
_requestsAwaitingCertFetch
T@"TVPSecureKeyLoader",&,N,V_secureKeyLoader
T@"NSData",&,N,V_certificateData
TB,N,V_certFetchInProgress
T@"NSMutableSet",&,N,V_requestsAwaitingCertFetch
T@"NSObject<TVPSecureKeyDeliveryCoordinatorDelegate>",W,N,V_delegate
durationInSeconds
dateRangeByIntersectingDateRange:
_endDate
_durationInSeconds
T@"NSDate",R,N,V_startDate
T@"NSDate",R,N,V_endDate
Td,R,N,V_durationInSeconds
setMaxConcurrentOperationCount:
initWithURL:
setHTTPMethod:
setTimeoutInterval:
setHTTPBody:
setValue:forHTTPHeaderField:
initWithURLRequest:
setITunesStoreRequest:
URLResponse
setOutputBlock:
operationQueue
addOperation:
setOperationQueue:
_operationQueue
T@"NSOperationQueue",&,N,V_operationQueue
UUIDString
requestOptions
contentIdentifierData
streamingContentKeyRequestDataForApp:contentIdentifier:options:error:
setKeyRequestData:
generateStreamingContentKeyRequestDataAsynchronouslyForApp:contentIdentifier:options:completionHandler:
persistentContentKeyFromKeyVendorResponse:options:error:
allowedContentTypes
loadKeyRequestDataWithError:
offlineKeyUsageAllowed
setRetrievesOfflineKeys:
setRequestOptions:
requestEndDate
requestStartDate
_retrievesOfflineKeys
_requestID
_contentIdentifierData
_keyRequestData
_requestOptions
_retryCount
_reportingID
_requestCompletionTime
_requestEndDate
_requestStartDate
T@"NSData",C,N,V_keyRequestData
T@"NSData",C,N,V_certificateData
T@"NSData",C,N,V_contentIdentifierData
T@"NSDictionary",C,N,V_requestOptions
T@"NSDate",C,N,V_startDate
TQ,N,V_retryCount
T@"NSNumber",C,N,V_rentalID
T@"NSString",R,N,V_reportingID
T@"NSNumber",&,N,V_requestCompletionTime
T@"NSDate",C,N,V_requestEndDate
T@"NSDate",C,N,V_requestStartDate
TQ,R,N,V_requestID
TB,N,V_retrievesOfflineKeys
initWithAVContentKeyRequest:
setKeyIdentifier:
setOfflineKeyData:
setAdditionalRequestParams:
setContentID:
avContentKeyRequest
keyIdentifier
makeStreamingContentKeyRequestDataForApp:contentIdentifier:options:completionHandler:
persistableContentKeyFromKeyVendorResponse:options:error:
finishKeyRequest:
setWantsOfflineKeysIfPossible:
finish
secureInvalidationRequestForIdentifier:offlineKeyData:additionalRequestParams:contentID:
makeKeyRequestDataForCertificateData:assetIDData:completion:
offlineKeyDataFromServerKeyData:error:
finishByRequestingOfflineKeysIfPossible
eventReportingID
setIsRenewal:
additionalRequestParams
serverRequestStartDate
setServerRequestStartDate:
keyFormatVersions
setKeyFormatVersions:
offlineKeyData
secureInvalidationNonceData
setSecureInvalidationNonceData:
context
setContext:
keyResponseData
setKeyResponseData:
renewalInterval
setRenewalInterval:
expirationDate
setExpirationDate:
availabilityEndDate
setAvailabilityEndDate:
contentID
isLowValueKey
setIsLowValueKey:
playbackDuration
setPlaybackDuration:
allowManualRenewal
setAllowManualRenewal:
additionalRequestParamsFromResponse
setAdditionalRequestParamsFromResponse:
setContentKeySession:
wantsOfflineKeysIfPossible
_isRenewal
_isLowValueKey
_allowManualRenewal
_wantsOfflineKeysIfPossible
_keyIdentifier
_eventReportingID
_additionalRequestParams
_serverRequestStartDate
_keyFormatVersions
_offlineKeyData
_secureInvalidationNonceData
_context
_keyResponseData
_renewalInterval
_expirationDate
_availabilityEndDate
_contentID
_playbackDuration
_additionalRequestParamsFromResponse
_avContentKeyRequest
_contentKeySession
T@"NSURL",&,N,V_keyIdentifier
T@"AVContentKeyRequest",R,N,V_avContentKeyRequest
T@"TVPContentKeySession",W,N,V_contentKeySession
TB,N,V_wantsOfflineKeysIfPossible
TB,N,V_isRenewal
T@"NSString",R,N,V_eventReportingID
T@"NSDate",&,N,V_requestStartDate
T@"NSDate",&,N,V_requestEndDate
T@"NSData",&,N,V_keyRequestData
T@"NSDictionary",&,N,V_additionalRequestParams
T@"NSDate",&,N,V_serverRequestStartDate
T@"NSArray",&,N,V_keyFormatVersions
T@"NSData",&,N,V_offlineKeyData
T@"NSData",&,N,V_secureInvalidationNonceData
T@,&,N,V_context
T@"NSData",&,N,V_keyResponseData
T@"NSNumber",&,N,V_renewalInterval
T@"NSDate",&,N,V_expirationDate
T@"NSDate",&,N,V_availabilityEndDate
T@"NSString",&,N,V_contentID
TB,N,V_isLowValueKey
T@"NSNumber",&,N,V_playbackDuration
TB,N,V_allowManualRenewal
T@"NSDictionary",&,N,V_additionalRequestParamsFromResponse
T@"NSMutableDictionary",R,N,V_userInfo
_mediaServicesReset:
_updateIfNecessary
setConfigurationBlock:
configurationBlock
_configurationBlock
T@?,C,N,V_configurationBlock
offSubtitleOptionWithAVMediaSelectionOption:
containsOnlyForcedSubtitles
cachedContainsOnlyForcedSubtitles
setCachedContainsOnlyForcedSubtitles:
cachedSubtitleType
setCachedSubtitleType:
_cachedContainsOnlyForcedSubtitles
_cachedSubtitleType
T@"NSString",C,N,V_identifier
T@"NSNumber",&,N,V_cachedContainsOnlyForcedSubtitles
T@"NSNumber",&,N,V_cachedSubtitleType
Tq,R,N
initWithType:start:duration:
adamID
setAdamID:
isSkippable
setSkippable:
_skippable
_adamID
T@"NSNumber",&,N,V_adamID
skippable
TB,N,GisSkippable,V_skippable
regularExpressionWithPattern:options:error:
numberOfMatchesInString:options:range:
imageProxies
imageProxyMappings
config
_closestImageIndexForTime:actualTime:imageInterval:
initWithURL:resolvingAgainstBaseURL:
path
hasSuffix:
stringByAppendingString:
setPath:
closestImageTimeForTime:
_closestURLForImageTime:actualTime:
setConfig:
setImageProxies:
setImageProxyMappings:
loadedImageActualTimes
setLoadedImageActualTimes:
_config
_imageProxies
_imageProxyMappings
_loadedImageActualTimes
T@"TVPExternalImageConfig",&,N,V_config
T@"NSMutableSet",&,N,V_imageProxies
T@"NSMutableDictionary",&,N,V_imageProxyMappings
T@"NSMutableSet",&,N,V_loadedImageActualTimes
T@"NSString",&,N,V_keyIdentifier
ratingName
ratingDescription
initWithRatingDescription:
setRatingName:
_ratingName
_ratingDescription
T@"NSString",&,N,V_ratingName
T@"NSString",R,N,V_ratingDescription
_setMetadata:forProperty:postNotification:
_postMetadataWillChangeNotificationWithMetadataProperties:
_postMetadataDidChangeNotificationWithMetadataProperties:
removeMediaItemMetadataForProperty:
loadStreamingKeyForRequest:
loadResourceForRequest:
cleanUpMediaItem
_metadataDictionary
_transactionDictionary
_mediaItemMetadataWillOrDidChange:
forwardingTargetForSelector:
selector
invokeWithTarget:
forwardInvocation:
methodSignatureForSelector:
initWithMediaItem:clipTimeRange:
localMetadataKeys
setLocalMetadataKeys:
localMetadata
setLocalMetadata:
_localMetadataKeys
_localMetadata
T@"NSSet",&,N,V_localMetadataKeys
T@"NSMutableDictionary",&,N,V_localMetadata
tempDirURL
defaultManager
removeItemAtURL:error:
URLsForDirectory:inDomains:
URLByAppendingPathComponent:isDirectory:
_stopBackgroundCaching:
addObserver:selector:name:object:suspensionBehavior:
_mediaItemPlaybackErrorDidOccur:
_mediaItemStopPlayback:
_cleanUp
refCount
setRefCount:
assetInternalAccessQueue
AVAssetInternal
_isStreaming
setContinuesPlayingDuringPrerollForSeek:
tracksWithMediaType:
setPlaybackLikelyToKeepUpTrigger:
setWillNeverSeekBackwardsHint:
setAutomaticallyHandlesInterstitialEvents:
addMediaDataCollector:
setGaplessInfo:
setAllowedAudioSpatializationFormats:
SHA1Digest
URLByDeletingLastPathComponent
attributesOfFileSystemForPath:error:
unsignedLongLongValue
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
_avAssetOptions
assetLoadContextAccessQueue
assetLoadContext
existingAVAsset
unsignedLongValue
initWithURL:options:
_avAssetMediaServicesReset:
_avAudioSessionMediaServicesReset:
initWithContentKeyLoader:avAsset:
resourceLoader
setDelegate:queue:
setAVAssetInternal:
setCleanedUp:
setTimingData:
_needToLoadBlockingMetadataKeys
_loadMediaItemMetadataAsynchronously
ams_sharedAccountStore
ams_iTunesAccountWithDSID:
ams_cookies
AVAudioSessionConfiguredAfterMediaServicesReset
_postMediaServicesResetFailureWithNotification:
setAVAudioSessionConfiguredAfterMediaServicesReset:
setSavedMediaServerResetUserNotification:
_avAudioSessionConfiguredAfterMediaServicesReset
savedMediaServerResetUserNotification
_metadataKeysToLoad
metadata
_rollKeyNameFromType:
_skipKeyNameFromType:
_stringValueForKey:fromMetadata:andKeyIdentifierMap:
_numberValueForKey:fromMetadata:andKeyIdentifierMap:
_rollTypeFromMetadataItemKey:
_skipTypeFromMetadataItemKey:
hasPrefix:
_rollKeyNamesForType:withCount:
_skipKeyNamesForType:withCount:
_advisoryKeyNamesWithCount:
_rollInfoFromMetadata:keyIdentifierMap:forType:withTotalCount:
_skipInfoFromMetadata:keyIdentifierMap:forType:withTotalCount:
_advisoryInfoFromMetadata:keyIdentifierMap:withTotalCount:
_productPlacementInfoFromMetadata:keyIdentifierMap:
_tomatoFreshnessFromString:
_contentKeyRequestParamsFromBase64String:
cleanedUp
diskSpaceMonitorTimer
setDiskSpaceMonitorTimer:
setAssetLoadContext:
_protocolClassForRequest:
resourceLoader:shouldWaitForLoadingOfRequestedResource:
resourceLoader:shouldWaitForRenewalOfRequestedResource:
resourceLoader:didCancelLoadingRequest:
resourceLoader:shouldWaitForResponseToAuthenticationChallenge:
resourceLoader:didCancelAuthenticationChallenge:
loadSHA1DigestWithCompletion:
setAVAsset:
setAssetInternalAccessQueue:
setAssetLoadContextAccessQueue:
mediaItemLoaderGUID
setMediaItemLoaderGUID:
_cleanedUp
_AVAudioSessionConfiguredAfterMediaServicesReset
_timingData
_existingAVAsset
_AVAsset
_AVAssetInternal
_assetInternalAccessQueue
_assetLoadContextAccessQueue
_assetLoadContext
_refCount
_mediaItemLoaderGUID
_diskSpaceMonitorTimer
_savedMediaServerResetUserNotification
T@"NSString",&,N,V_state
T@"AVURLAsset",&,N,V_AVAsset
T@"TVPMediaItemTimingData",&,N,V_timingData
T@"AVURLAsset",&,N,V_AVAssetInternal
T@"TVPContentKeySession",&,N,V_contentKeySession
T@"NSObject<OS_dispatch_queue>",&,N,V_assetInternalAccessQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_assetLoadContextAccessQueue
TQ,N,V_assetLoadContext
TQ,N,V_refCount
T@"NSString",C,N,V_mediaItemLoaderGUID
T@"NSTimer",&,N,V_diskSpaceMonitorTimer
TB,N,V_cleanedUp
TB,N,V_AVAudioSessionConfiguredAfterMediaServicesReset
T@"NSNotification",&,N,V_savedMediaServerResetUserNotification
T@"AVURLAsset",&,N,V_existingAVAsset
contentKeySessionWithKeySystem:
addContentKeyRecipient:
invalidatePersistableContentKey:options:completionHandler:
_generateOfflineKeyRequestsForIdentifiers:isRenewal:completion:
contentKeyLoader
respondByRequestingPersistableContentKeyRequestAndReturnError:
contentKeyRecipients
processContentKeyResponseError:
offlineKeyIdentifiersInProgress
_loadAVContentKeyRequests:type:isRenewal:
offlineKeyGenerationIsForRenewal
keyRequestsInProgress
_timeoutOfflineKeyRequestGeneration
_finishOfflineKeyGeneration
offlineKeyGenerationCompletionHandler
setOfflineKeyGenerationCompletionHandler:
setOfflineKeyIdentifiersInProgress:
setOfflineKeyGenerationIsForRenewal:
processContentKeyRequestWithIdentifier:initializationData:options:
contentKeySession:didProvideContentKeyRequest:
contentKeySession:didProvideRenewingContentKeyRequest:
contentKeySession:didProvidePersistableContentKeyRequest:
contentKeySession:didUpdatePersistableContentKey:forContentKeyIdentifier:
contentKeySession:contentKeyRequest:didFailWithError:
contentKeySession:shouldRetryContentKeyRequest:reason:
contentKeySession:contentKeyRequestDidSucceed:
contentKeySessionContentProtectionSessionIdentifierDidChange:
contentKeySessionDidGenerateExpiredSessionReport:
makeSecureInvalidationDataForOfflineKeyData:nonceData:completion:
generateOfflineKeyRequestsForIdentifiers:completion:
setContentKeyLoader:
setKeyRequestsInProgress:
_offlineKeyGenerationIsForRenewal
_contentKeyLoader
_offlineKeyGenerationCompletionHandler
_offlineKeyIdentifiersInProgress
_keyRequestsInProgress
T@"AVContentKeySession",&,N,V_contentKeySession
T@"NSObject<TVPContentKeyLoading>",&,N,V_contentKeyLoader
T@?,C,N,V_offlineKeyGenerationCompletionHandler
T@"NSArray",&,N,V_offlineKeyIdentifiersInProgress
T@"NSMutableArray",&,N,V_keyRequestsInProgress
TB,N,V_offlineKeyGenerationIsForRenewal
v16@0:8
@24@0:8@16
v32@0:8q16@24
v40@0:8@16S24S28@32
@16@0:8
v24@0:8@16
@"NSObject<TVPMediaItem>"
@"RTCReporting"
d24@0:8d16
@24@0:8d16
@"NSArray"
B24@0:8@16
@"NSString"
v24@0:8d16
d16@0:8
Q16@0:8
v24@0:8Q16
@"TVPPlayer"
@"NSTimer"
@32@0:8r*16Q24
@36@0:8r*16Q24B32
v56@0:8@16{?=qiIq}24@48
{?=qiIq}16@0:8
v40@0:8{?=qiIq}16
{CGSize=dd}16@0:8
v32@0:8{CGSize=dd}16
@?16@0:8
v24@0:8@?16
@"NSDate"
{CGSize="width"d"height"d}
{?="value"q"timescale"i"flags"I"epoch"q}
@"<TVPSecureKeyLoaderDelegate>"
@"TVPPlaybackReportingEventCollection"
@36@0:8@16q24B32
v24@0:8q16
B32@0:8Q16@24
v20@0:8B16
B24@0:8q16
v32@0:8B16B20@24
B16@0:8
v24@0:8B16B20
v32@0:8@16Q24
v32@0:8@16@24
q16@0:8
@"NSMutableArray"
@"NSDictionary"
@"NSURL"
@"TVPTimeRange"
^{__SCNetworkReachability=}
@64@0:8Q16d24d32d40@48@56
@"TVPPlaybackReportingEvent"
d24@0:8@16
v28@0:8@16B24
v40@0:8@16@24@32
v64@0:8@16q24@32@40@48B56B60
v48@0:8@16@24@32@40
@"NSMutableDictionary"
{?={?=qiIq}{?=qiIq}}24@0:8@16
@32@0:8d16d24
@64@0:8{?={?=qiIq}{?=qiIq}}16
B24@0:8d16
@24@0:8#16
@40@0:8@16@24q32
@48@0:8@16@24q32@?40
v40@0:8@16@24@?32
v32@0:8@16@?24
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_os_log>"
@?24@0:8@16
d32@0:8d16d24
d40@0:8d16d24@32
q44@0:8d16d24B32Q36
q48@0:8d16d24B32Q36B44
@"NSData"
@"TVPSecureKeyRequest"
@32@0:8@16@24
@28@0:8@16B24
@"<TVPSecureKeyStandardLoaderRequestGenerating>"
@"<TVPSecureKeyStandardLoaderConnectionHandling>"
@"NSNumber"
v24@0:8@"TVPSecureKeyDeliveryCoordinator"16
v32@0:8@"TVPSecureKeyDeliveryCoordinator"16@"NSError"24
v32@0:8@"TVPSecureKeyDeliveryCoordinator"16@"NSDate"24
v32@0:8@"TVPSecureKeyDeliveryCoordinator"16@"TVPSecureKeyRequest"24
v40@0:8@"TVPSecureKeyDeliveryCoordinator"16@"NSError"24@"TVPSecureKeyRequest"32
v40@0:8@"TVPSecureKeyDeliveryCoordinator"16@"NSData"24@"TVPSecureKeyRequest"32
v40@0:8@"TVPSecureKeyDeliveryCoordinator"16@"NSDate"24@"NSDate"32
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v40@0:8@"TVPSecureKeyLoader"16@"NSData"24@"TVPSecureKeyRequest"32
v48@0:8@"TVPSecureKeyLoader"16@"NSData"24@"NSDate"32@"TVPSecureKeyRequest"40
v32@0:8@"TVPSecureKeyLoader"16@"NSDate"24
v40@0:8@"TVPSecureKeyLoader"16@"NSError"24@"TVPSecureKeyRequest"32
v40@0:8@"TVPSecureKeyLoader"16@"NSDate"24@"NSDate"32
@"NSObject<TVPStoreFPSKeyLoaderDelegate>"
@"NSError"
@"TVPSecureKeyDeliveryCoordinator"
@"TVPSecureKeyStandardLoader"
@56@0:8@16{?=qiIq}24@48
@"UIImage"
@"CADisplayLink"
@"TVPExternalImageLoader"
@32@0:8@16#24
B28@0:8@16B24
@"NSSet"
v24@0:8@"NSArray"16
v32@0:8@"NSArray"16@?<v@?>24
v32@0:8@"NSURL"16@"NSData"24
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v56@0:8@16@24q32q40q48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v136@0:8@16@24{?={?=qiIq}{?=qiIq}}32@80{?={?=qiIq}{?=qiIq}}88
v144@0:8@16@24{?={?=qiIq}{?=qiIq}}32@80{?={?=qiIq}{?=qiIq}}88@136
v40@0:8@"NSURLSession"16@"AVAssetDownloadTask"24@"NSURL"32
v136@0:8@"NSURLSession"16@"AVAssetDownloadTask"24{?={?=qiIq}{?=qiIq}}32@"NSArray"80{?={?=qiIq}{?=qiIq}}88
v40@0:8@"NSURLSession"16@"AVAssetDownloadTask"24@"AVMediaSelection"32
v40@0:8@"NSURLSession"16@"AVAggregateAssetDownloadTask"24@"NSURL"32
v40@0:8@"NSURLSession"16@"AVAggregateAssetDownloadTask"24@"AVMediaSelection"32
v144@0:8@"NSURLSession"16@"AVAggregateAssetDownloadTask"24{?={?=qiIq}{?=qiIq}}32@"NSArray"80{?={?=qiIq}{?=qiIq}}88@"AVMediaSelection"136
v40@0:8@"NSURLSession"16@"AVAssetDownloadTask"24@"NSArray"32
@40@0:8@16@24@32
v48@0:8@16@24@32^v40
@24@0:8q16
@"TVPStateMachine"
@"TVPMediaItemLoader"
@"TVPDownloadSession"
@"AVAggregateAssetDownloadTask"
@"NSPointerArray"
@"NSProgress"
@"NSMapTable"
@"TVPReportingSession"
@"TVImageProxy"
@"AVMediaSelectionOption"
@"AVMetadataItem"
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"NSObject<TVPAVFPlayback>"
@"UILabel"
@"TVPPlayerLayerView"
@"UIImageView"
q20@0:8i16
q20@0:8I16
@"NSString"32@0:8@"AVPlayerPlaybackCoordinator"16@"AVPlayerItem"24
v28@0:8d16B24
v48@0:8d16{?=qiIq}24
v52@0:8d16{?=qiIq}24B48
@24@0:8@?16
@32@0:8@16@?24
f16@0:8
v20@0:8f16
v32@0:8Q16@24
@24@0:8@"NSString"16
v32@0:8q16@"NSString"24
@24@0:8@?<v@?d@"NSDate"dB>16
@32@0:8@"NSArray"16@?<v@?B>24
v28@0:8@"TVPSubtitleOption"16B24
@"<TVPPlaybackDelegate>"16@0:8
v24@0:8@"<TVPPlaybackDelegate>"16
@"<TVPASyncPlaybackDelegate>"16@0:8
v24@0:8@"<TVPASyncPlaybackDelegate>"16
@"TVPPlaylist"16@0:8
v24@0:8@"TVPPlaylist"16
@"NSObject<TVPMediaItem>"16@0:8
v24@0:8@"NSObject<TVPMediaItem>"16
@"TVPPlaybackState"16@0:8
@"NSDate"16@0:8
v24@0:8@"NSDate"16
@"NSArray"16@0:8
@"TVPChapterCollection"16@0:8
v24@0:8@"TVPChapterCollection"16
@"TVPChapter"16@0:8
@"TVPInterstitial"16@0:8
@"TVPTimeRange"16@0:8
@"TVPDateRange"16@0:8
@"TVPAudioOption"16@0:8
v24@0:8@"TVPAudioOption"16
@"TVPSubtitleOption"16@0:8
v24@0:8@"TVPSubtitleOption"16
v32@0:8Q16@"NSString"24
v40@0:8d16@24@?32
v24@0:8@"TVPVideoView"16
@"AVPlayer"16@0:8
v40@0:8d16@"NSDate"24@?<v@?B@"NSNumber"@"NSDate">32
v36@0:8q16@24B32
v36@0:8Q16@24B32
v32@0:8d16@?24
v60@0:8d16{?=qiIq}24B48@?52
@20@0:8B16
v40@0:8@16@24B32B36
v32@0:8q16q24
{?=qiIq}64@0:8{?=qiIq}16{?=qiIq}40
{?=qiIq}40@0:8{?=qiIq}16
{?=qiIq}56@0:8@16{?=qiIq}24@48
@40@0:8{?=qiIq}16
v52@0:8{?=qiIq}16@40B48
v64@0:8{?=qiIq}16{?=qiIq}40
v36@0:8@16d24B32
v44@0:8@16d24@32B40
i24@0:8@16
B40@0:8^@16^@24@32
@"<TVPPlaybackDelegate>"
@"<TVPASyncPlaybackDelegate>"
@"TVPPlaybackState"
@"TVPChapterCollection"
@"TVPChapter"
@"TVPInterstitialCollection"
@"TVPInterstitial"
@"TVPPlaylist"
@"TVPPlayerBookmarkMonitor"
@"TVPPlayerReporter"
@"NSHashTable"
@"NSMutableSet"
@"TVPPlayerItem"
@"TVPExternalImagePlayer"
@"TVPProgressiveJumpingScrubber"
@"TVPAudioOption"
@"AVQueuePlayer"
@"AVPlayerItem"
@56@0:8@16@24@32@40@48
@"<TVPDownloadSessionDelegate>"
@20@0:8i16
@"NSAttributedString"
@"TVPDateRange"
v36@0:8@16@24B32
@"NSObject<TVPPlayback>"
v40@0:8@16@24q32
@"AVAssetResourceLoadingRequest"
@28@0:8i16@20
i16@0:8
v20@0:8i16
@"NSObject<TVPSecureKeyDeliveryCoordinatorDelegate>"
@"TVPSecureKeyLoader"
@32@0:8@16d24
@32@0:8@"TVPSecureKeyStandardLoader"16@"NSURL"24
@40@0:8@"TVPSecureKeyStandardLoader"16@"NSData"24@"NSURL"32
v40@0:8@"TVPSecureKeyStandardLoader"16@24@?<v@?@"NSData"@"NSURLResponse"@"NSError">32
@"NSOperationQueue"
B24@0:8^@16
@32@0:8@16^@24
@48@0:8@16@24@32@40
@"AVContentKeyRequest"
@"TVPContentKeySession"
@40@0:8Q16d24d32
@48@0:8@16{CGSize=dd}24@?40
@"NSArray"48@0:8@"NSArray"16{CGSize=dd}24@?<v@?@@"UIImage"dd>40
Q40@0:8d16^d24d32
@32@0:8d16^d24
@"TVPExternalImageConfig"
v44@0:8d16d24d32B40
v32@0:8d16d24
@"<TVPMediaItemReportingDelegate>"16@0:8
@"NSURL"16@0:8
B24@0:8@"NSObject<TVPMediaItem>"16
B24@0:8@"NSString"16
v32@0:8@16@"NSString"24
v24@0:8@"NSString"16
v24@0:8@?<v@?>16
v24@0:8@?<v@?B@"NSError">16
v24@0:8@"TVPSecureKeyRequest"16
B24@0:8@"TVPResourceLoadingRequest"16
@"NSError"24@0:8@"NSError"16
B24@0:8@"NSError"16
B32@0:8@16@24
B32@0:8@"AVAssetResourceLoader"16@"AVAssetResourceLoadingRequest"24
B32@0:8@"AVAssetResourceLoader"16@"AVAssetResourceRenewalRequest"24
v32@0:8@"AVAssetResourceLoader"16@"AVAssetResourceLoadingRequest"24
B32@0:8@"AVAssetResourceLoader"16@"NSURLAuthenticationChallenge"24
v32@0:8@"AVAssetResourceLoader"16@"NSURLAuthenticationChallenge"24
@32@0:8Q16Q24
@24@0:8Q16
@48@0:8@16@24Q32Q40
@40@0:8@16@24Q32
Q24@0:8@16
@"TVPMediaItemTimingData"
@"AVURLAsset"
@"NSNotification"
B40@0:8@16@24@32
v32@0:8@"AVContentKeySession"16@"AVContentKeyRequest"24
v32@0:8@"AVContentKeySession"16@"AVPersistableContentKeyRequest"24
v40@0:8@"AVContentKeySession"16@"NSData"24@32
v40@0:8@"AVContentKeySession"16@"AVContentKeyRequest"24@"NSError"32
B40@0:8@"AVContentKeySession"16@"AVContentKeyRequest"24@"NSString"32
v24@0:8@"AVContentKeySession"16
v36@0:8@16B24@?28
v36@0:8@16q24B32
@"AVContentKeySession"
@"NSObject<TVPContentKeyLoading>"
