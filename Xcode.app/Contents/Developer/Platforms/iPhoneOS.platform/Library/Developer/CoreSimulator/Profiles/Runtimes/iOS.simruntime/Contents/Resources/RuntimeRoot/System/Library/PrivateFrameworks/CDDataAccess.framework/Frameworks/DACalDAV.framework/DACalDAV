CalDAVAccountVersion
CalDAVHostKey
CalDAVSchemeKey
CalDAVPortKey
CalDAVMainPrincipalUID
CalDAVPrincipals
CalDAVMobileAccountCollectionSetName
CalDAVMobileAccountSearchPropertySet
CalDAVMobileAccountSearchPropertySetKey_CoreDAV
CalDAVMobileAccountIsWritable
CalDAVMobileAccountServerVersion
CalDAVMobileAccountOverriddenServer
CalDAVMobileAccountOverriddenPort
CalDAVMobileAccountOverriddenScheme
CalDAVMobileAccountDelegatePrincipalPath
RDCalDAVMobileAccountRefreshDidCompleteNotificationName
CalDAVCalendarConstraints
CalDAVCalendarConstraintsNoComments
CalDAVCalendarConstraintsNoSchedule
CalDAVCalendarConstraintsNoScheduleNoComments
FutureLimitedCalDAVCalendarConstraints
FutureLimitedCalDAVCalendarConstraintsNoComments
FutureLimitedCalDAVCalendarConstraintsNoSchedule
FutureLimitedCalDAVCalendarConstraintsNoScheduleNoComments
WasUpgradedFromLegacy
SubscribedCalendars
v8@?0
CalDAVHTTPTraffic
MobileCalDAVAccount.m
Nothing to see here, buddy. Just turn around and leave quietly.
Account was deallocated while still refreshing. Ouch
absoluteString
%@://%@:%ld
http
subscribed 
VTODO
VEVENT
plist
v24@?0B8B12@"NSError"16
com.apple.mobilecal
com.apple.reminders
I didn't order a refresh, so why is there one on my menu?
We should have an actor at this point
com.apple.remindd.caldav.syncFinished
success
downloadedItemsCount
duration
errorCode
errorDomain
migration 
 (principal only)
 (calendars only)
parent
DAAccountHost
v20@?0B8@"NSError"12
/calendar/dav/%@/user/
/.well-known/caldav
/principals/
_caldav._tcp.
_caldavs._tcp.
calendar-access
ACCOUNT_UNIQUE_CONSTRAINT_FAILED_BODY_FORMAT_CALDAV
DataAccess
INVALID_PASSWORD_BODY_CALDAV
mailto:%@
v32@?0@8@"MobileCalDAVPrincipal"16^B24
PreferredCalendarUserAddresses
PreferredCalendarUserAddressesPerCalendar
FullName
CalendarHomeURL
PrincipalPath
DefaultCalendarURL
NotificationCollectionURL
NotificationCollectionCTag
InboxURL
InboxCTag
OutboxURL
DropBoxURL
NotificationsURLString
PushTransports
CalendarHomePushKey
APSTopic
APSEnv
APSSubscriptionURL
SupportsPush
Delegate
Writable
CanCreateCalendars
Enabled
ExpandPropertyReportSupported
SupportsCalendarUserSearch
SupportsFreebusy
SupportsSyncToken
QuotaFreeBytes
SupportedCalendarComponentSets
PrincipalURL
MobileCalDAVPrincipal.m
Cannot create a principal with a nil account
v24@?0@"NSDictionary"8^B16
v32@?0@"NSString"8@"NSSet"16^B24
CardDAViCloudDaemonAccount
v24@?0@"CalDAVCalendarUserAddress"8^B16
v32@?0@8@16^B24
Cannot create a calendar without a URL
DEFAULT_CALENDAR_NAME
DEFAULT_TASK_CALENDAR_NAME
APSD
PRODUCTION
production
SANDBOX
DEVELOPMENT
development
demo
mailto
v24@?0q8@"NSError"16
MobileCalUserAddressAddressURL
EventRef
ChangeID
ChangeRowid
ExternalID
UniqueIdentifier
SignificantAttributeChange
OldCalendarID
EntityType
%@ [%@] remObjectID=%@
(not loaded)
%@ [%@] remObjectID=%@ title="%@"
v16@?0@"REMListChangeItem"8
v16@?0@"REMReminderChangeItem"8
__untitled__
MobileCalDAVCalendar.m
ERROR: LOOKATME: _createActionsForItems: items.count (%@) does not equal reminders.count (%@).
ERROR: LOOKATME: _createActionsForItems: has ill-paired DA-items and backing reminders (item.objectID: %@, backing.objectID)
v32@?0@"REMSharee"8Q16^B24
v24@?0@"NSArray"8@"NSArray"16
ERROR: LOOKATME: [ForcedRefreshSyncForTruncatedHistory]: batchedItems.count (%@) does not equal batchedReminders.count (%@).
ERROR: LOOKATME: [ForcedRefreshSyncForTruncatedHistory]: has ill-paired DA-items and backing reminders (item.objectID: %@, backing.objectID)
ERROR: LOOKATME: prepareMergeSyncActions: batchedItems.count (%@) does not equal batchedReminders.count (%@).
ERROR: LOOKATME: prepareMergeSyncActions: has ill-paired DA-items and backing reminders (item.objectID: %@, backing.objectID)
-//Apple Inc.//iOS %@//EN
Can't create path: %@ (%@)
mailto:
DACalDAVREMReminderProxy.m
Invalid parameter not satisfying: %@
reminder
[reminder.objectID isEqual:self.objectID]
<%@: %p, objectID: %@, UID: %@, etag: %@>
%@:<%@>
MobileCalDAVAccountRefreshActor.m
There should not be any active task groups when the actor is deallocated
There should not be any active tasks when the actor is deallocated
CalDiagAccountSync
There should not be any active task groups at a state transition
There should not be any active tasks at a state transition
MobileCalDAVAccountRefreshActor tried to transition out of the finished state. What does that even mean?
We were told to refresh, but we already started a refresh!
v16@?0@"<CalDAVCalendar>"8
v32@?0@"NSString"8@"CalDAVMove"16^B24
We should have only finished once
cancelled
complete
RefreshActorStateBeginningRefresh
RefreshActorStateRefreshingAccountProperties
RefreshActorStateRefreshingDelegateAccountProperties
RefreshActorStateRefreshingPrincipalProperties
RefreshActorStateSendingMoves
RefreshActorStateSyncingRegularCalendars
RefreshActorStateUploadAttachments
RefreshActorStateSyncingSpecialCalendars
RefreshActorStateFinished
master
TimeChanged
DateChanged
v32@?0@"REMCalDAVNotification"8Q16^B24
v16@?0@"REMMutableCalDAVNotification"8
MobileCalDAVNotificationCalendar.m
Woah buddy- we shouldn't be setting a schedule tag on a notification item!
notificationContext
__untitled_shared__
dtstart
time
date
ACTION
ATTACH
ATTENDEE
CALSCALE
CATEGORIES
CLASS
COMMENT
COMPLETED
CONTACT
CREATED
DESCRIPTION
DTEND
DTSTAMP
DTSTART
DURATION
EXDATE
EXRULE
FREEBUSY
LAST-MODIFIED
LOCATION
METHOD
ORGANIZER
PERCENT-COMPLETE
PRIORITY
PRODID
RDATE
RECURRENCE-ID
RELATED-TO
REPEAT
REQUEST-STATUS
RESOURCES
RRULE
SEQUENCE
STATUS
SUMMARY
TRANSP
TRIGGER
TZID
TZNAME
TZOFFSETFROM
TZOFFSETTO
TZURL
VERSION
SCOPE
MAXRESULTS
MAXRESULTSSIZE
QUERY
QUERYNAME
TARGET
X-CALENDARSERVER-MASK-UID
ALTREP
CUTYPE
DELEGATED-FROM
DELEGATED-TO
ENCODING
FMTTYPE
FBTYPE
LANGUAGE
MEMBER
PARTSTAT
SCHEDULE-STATUS
RANGE
RELATED
RELTYPE
ROLE
RSVP
SCHEDULE-FORCE-SEND
SENT-BY
VALUE
UNTIL
COUNT
INTERVAL
BYMONTH
BYWEEKNO
BYYEARDAY
BYMONTHDAY
BYDAY
BYHOUR
BYMINUTE
BYSECOND
BYSETPOS
WKST
X-APPLE-DROPBOX
X-WR-ATTENDEE
X-WR-LANG
X-WR-RELCALID
X-WR-CALNAME
X-WR-CALDESC
X-WR-CALTYPE
X-WR-EXPIRATION
X-WR-TIMEZONE
X-WR-TEMPLATE
X-WR-ICONINFO
X-WR-PARENT
X-WR-UNTIL
X-WR-COUNT
X-WR-INTERVAL
X-WR-BYMONTH
X-WR-BYWEEKNO
X-WR-BYYEARDAY
X-WR-BYMONTHDAY
X-WR-BYDAY
X-WR-BYHOUR
X-WR-BYMINUTE
X-WR-BYSECOND
X-WR-BYSETPOS
X-WR-WEEKSTART
X-WR-CACHEDENDDATE
X-WR-ITIPSTATUSML
X-WR-ITIPSTATUSATTENDEEML
X-WR-ITIPALREADYSENT
X-WR-RSVPNEEDED
X-WR-DONTSCHEDULE
X-CALENDARSERVER-ACCESS
X-WR-ALARMUID
X-WR-OCCTRIGGER
X-WR-OCCDATEID
X-WR-CANCELID
X-WR-INVITATIONID
X-APPLE-SORT-ORDER
X-APPLE-FILENAME
X-APPLE-AUTOARCHIVED
X-APPLE-ATTACHMENTID
X-APPLE-CALENDAR-COLOR
X-APPLE-AUTO-REFRESH
X-APPLE-IGNORE-ON-RESTORE
X-APPLE-NEEDS-REPLY
X-CALENDARSERVER-ATTENDEE-COMMENT
X-CALENDARSERVER-ATTENDEE-REF
X-CALENDARSERVER-DTSTAMP
X-CALENDARSERVER-PRIVATE-COMMENT
EMAIL
X-APPLE-NEEDS-SERVER-CONFIRMATION
X-APPLE-EWS-ITEMID
X-APPLE-EWS-PERMISSION
X-APPLE-CHANGEKEY
X-APPLE-SELF-INVITED
X-NUM-GUESTS
ItemBridgeOptions
CalDAVChangeEvent
CalDAVChangeTask
CalDAVChangeAlarm
CalDAVChangeAttendee
CalDAVChangeOrganizer
CalDAVChangeAttachment
CalDAVChangeRecurrence
%@ - (path: %@)
DACalDAViCalItem.m
You should be calling the calendar specific version of this call
_rem_reminderItem
_rem_reminderItem.objectID should not be nil when trying to populate dataPayload
Given reminder does not match with this item's _rem_reminderItem.objectID (itemID: %@, reminderID: %@)
INDIVIDUAL
GROUP
RESOURCE
ROOM
UNKNOWN
@"CoreDAVItem"12@?0i8
Unexpected parsing of calendar-user-address-set: %@
urn:uuid:
%@ <%@> (%@)
CalDAVCalendarServerUserItem+REMShareeConversion.m
list
remSharee
MobileCalDAVDelegateUserInfo   displayName: %@ allowWrite: %d, uid: %@, principalPath: %@
No main principal found in the account properties for "%@". Creating a new one.
Upgrading principal URL from %@
New principal URL is %@
Error saving daWasMigrated: %@
Adding %@calendar %p with url %@
Removing %@calendar %p at url %@
Removing calendar with url %@
MobileCalDAVAccount: Failed to fetch lists from account {%@}
MobileCalDAVAccount: Created calendar %@ from REM %@ with url %@ guid %@
MobileCalDAVAccount: Loaded calendar %p with URL %@ guid %@
Caught an exception while trying to get the calendars for account %@: %@
Setting CalDAV server version to '%@' (currently '%@')
Updating calendar store and saving account properties since CalDAV server version changed
Error saving CalendarHomeSyncToken: %{public}@
Error saving account properties: %{public}@
MobileCalDAVAccount: _rem_createAccountStore: Error from updateAccountWithAccountID: %{public}@, error: %{public}@
MobileCalDAVAccount: Done updateAccountWithAccountID: %{public}@, didAdd: %{public}@, didUpdate: %{public}@
MobileCalDAVAccount: Account missing. Calling _rem_createAccountStore now which is not quite a use case we expect for DA in remindd nowadays {accountID: %{public}@}
Couldn't update ReminderKit account because one doesn't exist in the database {accountID: %{public}@}
CalDAV.sync
Canceling MobileCalDAVAccount refresh for account "%@" (%{public}@)
CalDAV task manager has been shut down.
Principal %{public}@ is dirty
Principal %{public}@ was deleted.
Principals changed
Saving accounts to update push information from an upgrade
Saving accounts to update push information
The refresh actor says we should save accounts
==== CalDAV refresh completed successfully for "%@" (%{public}@)
CalDAV refresh finished for account "%@" (%{public}@): Total sync time: %0.2f seconds. Number of downloaded items: %lu
Some calendars failed to sync. Keeping the migration flag around so that we attempt a merge sync the next time
Clearing migrated flag on the calendar store
==== CalDAV refresh FAILED for "%@" (%{public}@): %@. [Error Domain:%{public}@ Code:%{public}@]
Not saving our account properties because the refresh was canceled.
Saving our account properties
Ignoring refresh request because we're already in the middle of a refresh
==== Beginning %@refresh for CalDAV account%@ "%@" (%@)
Our store has %lu items in it.
We're already refreshing or a refresh is pending, so we're going to ignore this refresh request.
Delegate with principalPath %@ was successfully added.
Delegate with principalPath %@ failed to add.
Delegate with principalPath %@ could not be saved.
Delegate with account ID %@ was successfully removed
Delegate with account ID %@ failed to be removed
Search task %p was cancelled
CalDAV search query %p returning results
An unknown task just finished. What just happened? %@
Refusing to send out search query because the server doesn't support searching
CalDAV search query "%@" (%p) enqueuing
Dropping search query %@ because it is not the right type
cancelling search query %@
_reallyCancelAllSearchQueries is complete. All search queries have been cancelled.
DiscoveryTaskGroup %@ got account info %@ with error %@
Autodiscover called on account %@, but that account does not have a host set and username does not seems to resemble email address. Ignoring autodiscovery request
Autodiscover called on account %@, but that account does not have a host. Ignoring autodiscovery request
account %@ is checking validity with group %@ on behalf of %@
Dropping power assertion release for %@ since the retain count isn't positive
Principal configuration UID (%{public}@) doesn't match provided UID (%{public}@). Using the provided UID.
Change Tracking Helper - creating one for {principal=%@, account=%@}
Change Tracking Helper - marking consumed and clearing Change Tracking helper for {principal=%@, account=%@}
prepareCalendarsForSync - prepare calendars for sync with guid-calendar-map: %{public}@
prepareCalendarsForSync - ADDED ReminderKit calendars: %{public}@
prepareCalendarsForSync - Couldn't get a cached calendar of added calendar %{public}@ {guid: %{public}@}
prepareCalendarsForSync - UPDATED ReminderKit calendars: %{public}@
prepareCalendarsForSync - Couldn't get a cached calendar of modified calendar {guid: %{public}@}
prepareCalendarsForSync - DELETED ReminderKit calendars: %{public}@
prepareCalendarsForSync - Couldn't obtain a URL of deleted calendar {externalID: %{public}@}
RDDataacess doesn't care about inbox calendar (yet) {url: %@}
RDDataacess doesn't care about subscribed calendar (yet) {url: %@}
TODO - Notification calendar being created here is only a barebone implementation {url: %@}
Asked to create a calendar of a type we don't know about: %d
Marking principal as dirty: %@
Deleting calendar with guid %{public}@ or extID %@
MobileCalDAVCalendar: ERROR: Failed to save delete of list {listID: %{public}@, guid: %{public}@, extID: %@, error: %{public}@}
MobileCalDAVCalendar: SUCCESS: Deleted list of calendar URL: %@ {objectID=%{public}@}
MobileCalDAVCalendar: Couldn't find the backing list of the calendar to delete {guid %{public}@, extID %@}.
Marking calendar "%@" as dirty.
MobileCalDAVCalendar: Set URL on calendar (guid=%{public}@, listID=%{public}@)
MobileCalDAVCalendar: Could not find the backing REM list to set a URL on calendar (calendar=%{public}@)
Found a list that should indeed be a subscribed calendar due to 50659315 {guid: %{public}@, url: %@, listID: %{public}@}
ERROR: Failed to save delete of list {listID: %{public}@, guid: %{public}@, extID: %@, error: %{public}@}
The unexpected subscribed calendar list is now deleted and marked as event calendar: {url: %@, objectID: %{public}@}
Empty calendar title receieved. Setting calendar title to %@. Calendar URL: %@
MobileCalDAVCalendar: LOOKATME: No .notes to set in REMList for now {setvalue=%@, calendar=%@, stack=%@}
MobileCalDAVCalendar: LOOKATME: Verifying color format being set to REM: %@, rawValue:%@, remValue: %@, calendar: %@.
MobileCalDAVCalendar: LOOKATME: Verifying symbolic color name being set to REM: %@, rawValue: %@, remValue: %@, calendar: %@.
MobileCalDAVCalendar: LOOKATME: REMList has no sharing (calenderFlags::canBePublished) to set yet {setvalue=%d, stack=%@}
MobileCalDAVCalendar: LOOKATME: REMList has no sharing (calenderFlags::canBeShared) to set yet {setvalue=%d, stack=%@}
MobileCalDAVCalendar: LOOKATME: REMList has no (calenderFlags::isFamilyCalendar) to set yet {setvalue=%d, stack=%@}
MobileCalDAVCalendar: LOOKATME: REMList has no (calenderFlags::isMarkedUndeletable) to set yet {setvalue=%d, stack=%@}
MobileCalDAVCalendar: LOOKATME: REMList has no (calenderFlags::isMarkedImmutableSharees) to set yet {setvalue=%d, stack=%@}
MobileCalDAVCalendar: LOOKATME: REMList has no (isPublished) to set yet {setvalue=%d, stack=%@}
MobileCalDAVCalendar: LOOKATME: REMList has no (publishURL) to set yet {setvalue=%@, stack=%@}
MobileCalDAVCalendar: ERROR: Invalid REMListSharingStatus value: %{public}@ (calendar: %{public}@)
MobileCalDAVCalendar: Updating sharee %@ to calendar "%@"
MobileCalDAVCalendar: Removing sharee %@ from calendar "%@" 
MobileCalDAVCalendar: Adding sharee %@ to calendar "%@"
MobileCalDAVCalendar: Setting new .sharees to REMList (%@, calendar=%{public}@).
MobileCalDAVCalendar: Failed to save changes to sharees to calendar {calendar=%{public}@, error=%{public}@}.
MobileCalDAVCalendar: Couldn't get a REM list for calendar %{public}@
MobileCalDAVCalendar: ERROR: Couldn't fetch all reminders for calendar %{public}@, listID: %{public}@
allItemURLs: Probably in merge-sync {wasMigrated=%{public}@, cal=%{public}@, urls=%@}
MobileCalDAVCalendar: ERROR: Could not find a REM list that matched %{public}@
MobileCalDAVCalendar: Reminder does not exist when trying to set externalModificationTag {url: %@, list: %{public}@}.
MobileCalDAVCalendar: ERROR: Could not fetch reminders in lists to get externalModificationTag {list: %{public}@, error: %{public}@}.
MobileCalDAVCalendar: ERROR: Try to get reminder with nil uniqueIdentifier {calendar: %{public}@, stack: %@}.
MobileCalDAVCalendar: ERROR: Failed to fetch reminder with UUID: %{public}@, list: %{public}@, error: %{public}@
MobileCalDAVCalendar: Could not find a reminder with UUID: %{public}@, list: %{public}@
MobileCalDAVCalendar: ERROR: Try to get reminder with nil externalID {calendar: %{public}@, stack: %@}.
MobileCalDAVCalendar: Calendar has no backing REM list when trying to fetch reminder with externalID {calendar: %{public}@, reminder.externalID: %@}.
MobileCalDAVCalendar: Could not find a reminder with externalID {calendar: %{public}@, reminder.externalID: %@}.
MobileCalDAVCalendar: ERROR: Could not fetch reminder with externalID {calendar: %{public}@, reminder.externalID: %@, error: %{public}@}.
MobileCalDAVCalendar: ERROR: Could not find a calendar that matched %{public}@
MobileCalDAVCalendar: ERROR: Could not set url to reminder: %{public}@ %@
MobileCalDAVCalendar: Couldn't set url for reminder %{public}@ because it doesn't exist in our ReminderKit database {calendar: %{public}@}.
MobileCalDAVCalendar: ERROR: Could not set etag to reminder: %{public}@ %@
MobileCalDAVCalendar: Couldn't set etag for the reminder at %@ because it doesn't exist in our ReminderKit database {calendar: %{public}@}.
XXXXXXXXXX: Do we really need setScheduleTag for reminders? {tag: %@, url: %@, stack: %@}
MobileCalDAVCalendar: Nil or empty resources param for updateResourcesFromServer %{public}@
resourceCount=%{public, signpost.telemetry:number1, Name=Count}ld
MobileCalDAVCalendar: Could not find a list that matched to updateResourcesFromServer %{public}@
Dropping server change for %@ on the floor because we have a move change for it
The event at %@ was modified locally. Forcing it to the server.
Saved resource from %@ to the database. Etag is %{public}@
Failed to save batchSaveRequest {error: %{public}@}
CalDav.updateBatch
MobileCalDAVCalendar: ERROR: Failed to save delete of reminder {reminder: %{public}@, calendar: %{public}@, error: %{public}@}.
MobileCalDAVCalendar: Couldn't remove reminder at %@ because it doesn't exist in our ReminderKit database {calendar: %{public}@}.
MobileCalDAVCalendar: ERROR: LOOKATME: Unexpected call -hasEvents {stack=%@}.
MobileCalDAVCalendar: ERROR: LOOKATME: Unexpected call -isHidden {stack=%@}.
MobileCalDAVCalendar: ERROR: LOOKATME: Unexpected call -displayColor {stack=%@}.
MobileCalDAVCalendar: ERROR: Could not get an account. Cowardly refusing to create a calendar with UID %{public}@. Error: %{public}@.
MobileCalDAVCalendar: SUCCESS: Created list %{public}@ for %@.
MobileCalDAVCalendar: ERROR: Failed to create list for calendar: %@.
Could not obtain a calendar ref for {guid: %{public}@, url: %@}.
MobileCalDAVCalendar: ERROR: LOOKATME: Readonly calendars is not supported by DA in remindd. Check why principal is not writable. {url: %@, stack: %@}
MobileCalDAVCalendar: ******Creating calendar with url %@ %@
MobileCalDAVCalendar: Merged calendar titled %@ with calDAV
Couldn't get an REMStore ref. This isn't the time to create a calendar
MobileCalDAVCalendar: Found a cached list object ID (%{public}@) for url %@
ERROR: MobileCalDAVCalendar: Could not fetch list with object ID %{public}@. Url: %@. Error: %{public}@, Stack Trace: %@.
MobileCalDAVCalendar: Could not find a list with object ID %{public}@. Url: %@, Stack Trace: %@.
ERROR: MobileCalDAVCalendar: Could not get account %{public}@. Error: %{public}@, Stack Trace: %@.
MobileCalDAVCalendar: Couldn't find the backing REM list of calendar with url %@, Stack Trace: %@.
MobileCalDAVCalendar: SUCCESS: Got the backing REM list of calendar with url %@ {objectID=%{public}@}.
Couldn't find calendar with url %@.
MobileCalDAVCalendar: CalDAV principal.account is not a MobileCalDAVAccount: %@
MobileCalDAVCalendar: Cannot get ReminderKit account from principle.account: %@
MobileCalDAVCalendar: Failed to fetch all lists for migrated account: {remAccount: %{public}@, daAccount: %@}
%lu added calendars found
%lu modified calendars found
MobileCalDAVCalendar: ERROR: Could not find a REM list with that matched %{public}@
MobileCalDAVCalendar: ERROR: Could not fetch reminders from list %{public}@ with that matched %{public}@, error: %{public}@.
MobileCalDAVCalendar: Collected a DELETED ReminderKit reminder change in calendar {externalID: %@, calendar: %{public}@}
Clearing event changes
MobileCalDAVCalendar: Couldn't find the REM list of this calendar when adding changed reminder {calendar: %{public}@, reminder: %{public}@}.
MobileCalDAVCalendar: Collected an INSERTED or MODIFIED ReminderKit reminder change in calendar: {reminder: %{public}@, calendar: %{public}@}.
MobileCalDAVCalendar: ERROR: Got a nil changed reminder in calendar %{public}@.
MobileCalDAVCalendar: Created server ID for {reminderID: %{public}@, url: %@, calendar: %{public}@}
MobileCalDAVCalendar: Added actions for item {actionType: %{public}@, reminderID: %{public}@, url: %@, calendar: %{public}@}
Couldn't find a reminder for an added reminder: %@
MobileCalDAVCalendar: ERROR: Batch save pending send reminders failed: (error: %{public}@, batch: %@)
MobileCalDAVCalendar: Batch saved pending send reminders successfully: (batchSize: %{public}@)
MobileCalDAVCalendar: ERROR: Refetch updated pending send reminders failed: (error: %{public}@, batch: %@)
MobileCalDAVCalendar: ERROR: Refetched reminders count doesn't match with reminders count updated: (updated: %@, refetched: %@)
MobileCalDAVCalendar: Updated reminder reference in DACalDAViCalItem: (reminderID: %{public}@, serverID: %@)
Encountered error %{public}@ when putting item to %@
Received a 409 conflict for the event at %@. Creating a new UUID and trying again.
MobileCalDAVCalendar: LOOKATME: Couldn't get a REM reminder item to set UUID in this case of CoreDAVHTTPStatusCode_Conflict {iCalItem: %@, calendar: %@}.
Marking calendar as dirty because we just received a 409 conflict error
Put of item at %@ succeeded without error
Encountered error %{public}@ when deleting item from %@
Delete of item at %@ succeeded without error
_collectShareeActions > _addShareeWithObjectID: Collected ADDed/UPDATEd sharee and found record to add {list: %{public}@, shareeID: %{public}@}
_collectShareeActions > _addShareeWithObjectID: Sharee not found in {list: %{public}@, shareeID: %{public}@}
MobileCalDAVCalendar: _collectShareeActions: Calendar has no backing REM list when trying to collect sharee actions {list: %{public}@}.
MobileCalDAVCalendar: _collectShareeActions: LOOKATME: Unexpectedly got UPDATEs on REMSharee, sharees are supposed to be immutable value types in REM!
MobileCalDAVCalendar: _collectShareeActions: Collecting added and modified sharees {list: %{public}@, addedIds: %{public}@, modifiedIds: %{public}@, deletedKeys: %{public}@}.
_collectShareeActions: deletionKey is not for this list {list: %{public}@, sharee.owningListIdentifier: %{public}@, shareeID: %{public}@}
_collectShareeActions: Collected DELETEd sharee for this list {list: %{public}@, shareeID: %{public}@}.
_collectShareeActions: ERROR: The sharee tombstone has no object identifier, faking a uuid for it {list: %{public}@, shareeTombstone: %{public}@}
_collectShareeActions: ERROR: Couldn't get a URL for the deleted sharee, so we're going to skip it {list: %{public}@, shareeTombstone: %{public}@}
MobileCalDAVCalendar: _collectShareeActions: LOOKATME: Found duplicated objectIDs in deletes vs addsAndMods, this is unexpected as the change tracking should have consolidated them {calendar: %{public}@, duplicates: %{public}@}
MobileCalDAVCalendar: Collected %lu deleted reminders from REM change tracking {modified: %@}.
Sending up a delete for the item at URL %@
Couldn't get a URL for the delete of "%@"
Found %lu deleted items
MobileCalDAVCalendar: Collected %lu added reminders from REM change tracking {added: %@}.
Found %lu added items
MobileCalDAVCalendar: Collected %lu modified reminders from REM change tracking {modified: %@}.
Found %lu modified items
MobileCalDAVCalendar: [ForcedRefreshSyncForTruncatedHistory]: Force a 'refresh sync' as change history was truncated or error, let's try hard to upload local reminders changes... {account: %@, calendar: %@}
MobileCalDAVCalendar: [ForcedRefreshSyncForTruncatedHistory]: Gathered DA item with nil REMReminder is not quite expected (remID: %{public}@, serverID: %@)
MobileCalDAVCalendar: [ForcedRefreshSyncForTruncatedHistory]: Found (%{public}@) in this batch which exists on the server at %@
MobileCalDAVCalendar: [ForcedRefreshSyncForTruncatedHistory]: Found (%{public}@) in this batch which does not exist on the server
MobileCalDAVCalendar: [ForcedRefreshSyncForTruncatedHistory]: Found %lu ADDs reminders in this batch for our force refresh sync
MobileCalDAVCalendar: [ForcedRefreshSyncForTruncatedHistory]: Found %lu MODs reminders in this batch for our force refresh sync
Preparing merge sync actions...
prepareMergeSyncActions: Gathered DA item with nil REMReminder is not quite expected (remID: %{public}@, serverID: %@)
prepareMergeSyncActions: Found %{public}@ in this batch which exists on the server at %@
prepareMergeSyncActions: Found %{public}@ in this batch which does not exist on the server
prepareMergeSyncActions: Found %lu adds in this batch for our merge sync
prepareMergeSyncActions: Found %lu mods in this batch for our merge sync
MobileCalDAVCalendar: ChangedKeys is empty, no effective changes to this list change item, skipping -save {listOD: %{public}@}.
MobileCalDAVCalendar: ERROR: Failed to set REMList properties {changedKeys=%{public}@, GUID=%{public}@, listID=%{public}@, url=%@, error=%{public}@, stack=%@}
MobileCalDAVCalendar: Couldn't find an REMList to set property {calendar: %{public}@, stack: %@}.
Couldn't get an REMStore from %{public}@.
Couldn't get an REMSaveRequest from %{public}@.
Error when fetching account from ReminderKit %{public}@.
Could not find account from ReminderKit %{public}@.
MobileCalDAVAccountRefreshActor: DATransaction starting, ID: %@
Refresh actor starting up. (forced: %s)
CalDAV actor was told to cancel
There weren't any outstanding tasks, so we're going to call our cancel completion block now.
Refresh actor tearing down...
Checking if we should continue before transitioning from state %d
Ignoring calendar refresh task because we have no password.
Bailing out of refresh because we were told to cancel
Encountered an error while refreshing. Bailing out of the refresh. The error was %@
Waiting to make state transition from state %@ with %lu outstanding task groups and %lu outstanding tasks
Refresh actor changed state {%@ -> %@}
%@ refreshPrincipalOnly : begin
%@ refreshCalendarsOnly : begin
Refreshing properties for account with CoreDAV
Error refreshing properties for principal: %@
Properties were refreshed for principal "%@" on account "%@"
Getting delegates for account with CoreDAV
%@: This server does not support delegates.
Delegates were refreshed for account "%@"
Scheduling calendar refresh operation
CalDAV FinishRefresh
Error refreshing calendar properties for account: %@
Calendars properties were refreshed for account "%@"
Calendar properties were updated. Saving the database [not actually calling save nowadays as we moved to REM DB]
Preparing sync actions for calendar "%@"
Calendar "%@" has local changes and needs to be synced
LOOKATME: Principal is not MobileCalDAVPrincipal, we can't get REM change tracking helper {principal: %@}.
Calendars to refresh in this sync are: %@
Error moving event from %@ to %@: %@
New etag from move task is %@
XXXXXXXXX: ERROR: LOOKATME: RDDataAccess doesn't support MOVE yet!
Skipping refresh of inbox because this server doesn't support automatic scheduling
Syncing calendars: %@
Starting a calendar sync for "%@"
Error refreshing the calendar at %@: %@
Hit a precondition error while performing a bulk upload of events. Attempting a resync of the calendar
Hit a precondition error on our second bulk upload attempt. Waiting a bit before retrying again
We've backed off for too long. We're just giving up for now.
Calendar "%@" requested a resync, so we're going to sync it again
Calendar collections were refreshed for account "%@"
XXXXXXXXX: This version of remindd.DataAccess does NOT support cleaning out-of-filter-range items yet {startDate: %@}.
Error clearing calendar changes for "%@"
CalDAV refresh task failed with error %@
Refresh actor %s. Invoking result callback
Dispatching result callback on the main queue...
Result sent to actor. No cancellation completion block was set, so we're done here.
CalDAVNotificationCalendar: Initializing a notif calendar for {url: %@, list: %{public}@, account: %@}.
CalDAVNotificationCalendar: Failed to set this notification calendar list as daIsNotificationsCollection=YES, bailing (url: %@, error: %{public}@).
CalDAVNotificationCalendar: Could not find an REMList for the notification calendar (%@, account: %@)
CalDAVNotificationCalendar: Could not find a calendar of this notification calendar to perform -etagsForItemURLs: (%@, account: %@)
CalDAVNotificationCalendar: Could not find a calendar of this notification calendar to perform -setEtag:forItemAtURL: (%@, account: %@)
CalDAVNotificationCalendar: Setting etag (%{public}@) for item at {url: %@, account: %@}.
CalDAVNotificationCalendar: Couldn't set etag for the item at %@ because it doesn't exist in our database for account %@
CalDAVNotificationCalendar: Could not find a calendar of this notification calendar to perform -setURL:forResourceWithUUID: (%@, account: %@)
CalDAVNotificationCalendar: Setting url (%@) for item with {uuid: %{public}@, account: %@}.
CalDAVNotificationCalendar: Couldn't set url for the item %{public}@ because it doesn't exist in our database for account %@
CalDAVNotificationCalendar: Could not find a REMList of this notification calendar to perform -updateResourcesFromServer: (%@, account: %@)
CalDAVNotificationCalendar: Could not find a calendar of this notification calendar to perform -removeCalendarItemWithURL: (%@, account: %@)
CalDAVNotificationCalendar: Removing notification item with url %@ {account: %@}
CalDAVNotificationCalendar: ERROR: Failed to fetch invitation REMList with url %@ when trying to -_removeCalendarItemWithURL: {notifItem: %@, account: %@}
CalDAVNotificationCalendar: Could not find the invitation REMList with url %@ when trying to -_removeCalendarItemWithURL: {notifItem: %@, account: %@}
CalDAVNotificationCalendar: _removeCalendarItemWithURL: Now removing the invitation REMList with url %@ {listID: %{public}@, notifItem: %@, account: %@}
CalDAVNotificationCalendar: ERROR: Remove host REMList and notification item failed when trying to -_removeCalendarItemWithURL: {hostURL: %@, notifItem: %@, account: %@}
CalDAVNotificationCalendar: Successfully performed -_removeCalendarItemWithURL: to remove invitation REMList and notification item {hostURL: %@, notifItem: %@, account: %@}
CalDAVNotificationCalendar: Couldn't get the calendar notification item to remove with {url: %@, account: %@}
CalDAVNotificationCalendar: Clearing notification changes
CalDAVNotificationCalendar: Preparing sync actions for notification calendar {calendar: %@, account: %@}.
CalDAVNotificationCalendar: Collected DELETED notification items for for this notification calendar {calendar: %@, account: %@, extIDs: %@}.
CalDAVNotificationCalendar: Sending up a delete for the notification at URL %@
CalDAVNotificationCalendar: _handleInviteNotification: Could not get an REMList of this notification calendar to perform -_handleInviteNotification:withResource:uid: (cal: %@, account: %@)
CalDAVNotificationCalendar: _handleInviteNotification: Handling CalDAVCalendarServerInviteNotificationItem for {inviteStatus: %{public}@, extID: %@, uid: %{public}@, url: %@, account: %@}.
CalDAVNotificationCalendar: ERROR: _handleInviteNotification: Could not fetch list with url {url: %@, account: %@, error: %{public}@}.
CalDAVNotificationCalendar: LOOKATME: _handleInviteNotification: We don't have a hostURL for this invitation {uid: %{public}@, extID: %@, account: %@}
CalDAVNotificationCalendar: LOOKATME: _handleInviteNotification: The shared calendar should only be either VTODO or VEVENT {supportedComponentString: %{public}@, uid: %{public}@}.
CalDAVNotificationCalendar: _handleInviteNotification: Does not seems to be an invitation for VTODO/Reminders, so we stop handling this {uid: %{public}@, extID: %@, hostURL: %@, account: %@}.
CalDAVNotificationCalendar: SUCCESS: _handleInviteNotification: Created or updated shared invite-pending list {isCreate: %{public}@, hostURL: %@, objectID: %{public}@, account: %@}.
CalDAVNotificationCalendar: ERROR: _handleInviteNotification: Failed to create or updated shared list for {isCreate: %{public}@, hostURL: %@, account: %@, error: %{public}@}
CalDAVNotificationCalendar: ERROR: _handleInviteNotification: Failed to save delete of the shared invite-pending calendar {hostURL: %@, account: %@, error: %@}
CalDAVNotificationCalendar: SUCCESS:_handleInviteNotification: Deleted shared invite-pending calendar of {hostURL: %@, objectID: %{public}@, account: %@}
CalDAVNotificationCalendar: _handleInviteNotification: Failed to create and save notification object when -_handleInviteNotification:withResource:uid: {uid: %{public}@, extID: %@, cal: %@, account: %@}
CalDAVNotificationCalendar: _handleInviteNotification: Successfully added an REMCalDAVNotification (%{public}@) (inviteStatus: %{public}@, uid: %{public}@, account: %@).
CalDAVNotificationCalendar: _handleInviteNotification: Failed to fetch the invitation REMList object: {listID: %{public}@, extID: %@, account: %@}
CalDAVNotificationCalendar: _handleInviteReply: Received CalDAVCalendarServerInviteReplyItem for {replyString: %@, extID: %@, uid: %{public}@, calendar: %@, replyItem: %@}.
CalDAVNotificationCalendar: _handleInviteReply: Showing user notification for {extID: %@, acceptedURL: %@, address: %@}
CalDAVNotificationCalendar: _handleInviteReply: Failed to fetch the host REMList object: {extID: %@, account: %@}
CalDAVNotificationCalendar: LOOKATME! (Should this be Events only?!)LOOKATME! (Should this be Events only?!) Handling CalDAVCalendarServerResourceChangedItem for {extID: %@, uid: %{public}@, calendar: %@}.
CalDAVNotificationCalendar: LOOKATME! CalDAVCalendarServerResourceChangedItem {uid: %{public}@, createdItem: %@}.
CalDAVNotificationCalendar: LOOKATME! CalDAVCalendarServerResourceChangedItem {uid: %{public}@, updatedItem: %@}.
CalDAVNotificationCalendar: LOOKATME! CalDAVCalendarServerResourceChangedItem {uid: %{public}@, deletedItem: %@}.
CalDAVNotificationCalendar: LOOKATME! CalDAVCalendarServerResourceChangedItem {uid: %{public}@, collectionChanges: %@}.
CalDAVNotificationCalendar: LOOKATME! CalDAVCalendarServerResourceChangedItem {uid: %{public}@, collectionUpdates: %@}.
DACalDAViCalItem: LOOKATME: We should have set the reminder GUID upfront to batch with other properties changes in -[MobileCalDAVCalendar _createActionsForItems:withActions:...] when we discover it, and not doing this ad-hoc lazily which is bad in performance. Review if we have a missed case. {reminderID: %{public}@, callstack: %@}
DACalDAViCalItem: LOOKATME: Trying to get uniqueIdentifier from a DAViCalItem with neither reminder/cal DB item {iCalItem: %@, stack: %@}
DACalDAViCalItem: Do we really need get -scheduleTag for reminders? {remItem: %{public}@, stack: %@}
DACalDAViCalItem: Do we really need -setScheduleTag for reminders? {remItem: %{public}@, scheduleTag: %@, stack: %@}
DACalDAViCalItem: Couldn't get an REMStore from %{public}@.
ERROR: mobileCalendar object is not an instance of MobileCalDAVAccount: %{public}@
k_REM_CalCalendarMergeFields: trying to match local reminder {uid: %{public}@, cache.count: %{public}@, calendar: %{public}@}
k_REM_CalCalendarMergeFields: mobileCalendar.rem_cachedFetchedRemindersForMergeSync is unexpectedly nil {calendar: %{public}@}
k_REM_CalCalendarMergeFields: ERROR: Couldn't fetch all reminders for {guid: %{public}@, listID: %{public}@, error: %{public}@}
k_REM_CalCalendarMergeFields: Considering candidate title {candidate: %{public}@, uid: %{public}@}
k_REM_CalCalendarMergeFields: Considering candidate due {candidate: %{public}@, uid: %{public}@, candidate.due: '%@', ics.due: '%@', candidate.timezone: %@, ics.timezone: %@}
k_REM_CalCalendarMergeFields: Found identity match of reminder {uid: %{public}@, reminder:%{public}@, list: %{public}@}
k_REM_CalCalendarMergeFields: Comparing if local reminder is more recent {localLastMod: %@, remoteLastMod: %@, uid: %{public}@, reminder:%{public}@}
k_REM_CalCalendarMergeFields: Local reminder is more recent. Refusing to update the reminder. {uid: %{public}@, reminder:%{public}@}
Couldn't find a task with UID %{public}@ in the reminders database. Creating a new one {reminder: %{public}@}.
Updating existing reminder with UID id %{public}@ from ICS {reminder: %{public}@}.
ERROR: Couldn't create a reminder change item for ICS with UID id %{public}@.
Adding or modifying todo with {guid: %{public}@, shouldMerge: %{public}@}
Could not create REMReminder for %@.
Could not create an ICSDocument from the data from the server: %{public}@. Data: %@
Processing component %@
The task %{public}@ will be synced. ICSTodos are synced by default.
DACalDAViCalItem: LOOKATME: We should no longer support CalDB calendar as container for tasks {container: %@, todo.uid: %{public}@}.
Error adding or modifying todo with uid %{public}@
NULL component passed to processComponent:
CalDAV.updateSingleItem
DACalDAViCalItem: Exported ICS -dataPayload for the reminder {reminderID: %{public}@}
DACalDAViCalItem: ERROR: Couldn't create an ICS calendar for the reminder {reminderID: %{public}@}
DACalDAViCalItem: LOOKATME: We should avoid lazy populating dataPayload because that means we are probably fetching reminders one-by-one in a loop while they could have been fetching them in a batch instead for better performance {reminder: %{public}@, stack: %@}
DACalDAViCalItem: ERROR: Couldn't the reminder for this DA item to export payload {reminder: %{public}@}
DACalDAViCalItem: LOOKATME: We have a DACalDAViCalItem without either a backing REM or CalDB item: {iCalItem: %@, rem_clientID: %{public}@, account: %@} call stack: %@
DACalDAViCalItem: loadLocalItemWithAccount: Fetched reminder (%{public}@) times for DACalDAViCalItem instance (%p).
DACalDAViCalItem: ChangedKeys is empty, no effective changes to this reminder change item, skipping -save {reminderID: %{public}@}.
DACalDAViCalItem: ERROR: Save reminder %{public}@ property failed: %{public}@. (stack=%@)
DACalDAViCalItem: ERROR: Failed to set REMReminder properties {changedKeys=%{public}@, UID=%{public}@, reminderID=%{public}@, serverID=%@, error=%{public}@, stack=%@}
DACalDAViCalItem: Couldn't find an REMReminder to set property {serverID=%@, iCalItem=%@, error=%{public}@, stack=%@}.
MobileCalDAVAccount
MobileCalDAVPrincipal
CoreDAVAccountInfoProvider
NSObject
CoreDAVOAuthInfoProvider
CalDAVPrincipal
MobileCalUserAddress
MobileCalDAVCalendar
CalDAVCalendar
CalNSStringEmailAddressAdditions
DASearch
DACalDAVREMReminderProxy
DACalDAViCalItemUpdatableBackingModel
DACalDAViCalItemBackingModel
ReminderKitExtensions
REMDAAccountInfo
REMDAAccountProviding
CalDAVHTTPTrafficLog
MobileCalDAVAccountRefreshActor
CalDAVAccountPropertyRefreshDelegate
CoreDAVTaskGroupDelegate
CalDAVCalendarPropertyRefreshDelegate
CalDAVCalendarSyncDelegate
CalDAVAccountDelegatesRefreshDelegate
CalDAVRefreshContext
MobileCalDAVNotificationCalendar
DACalDAViCalItem
CoreDAVLeafDataPayload
DADataElement
CalDAVCalendarItemProtocol
CalDAVPrincipalResult
ShareeConversion
CalDAVMove
CalDAVAccountDelegatesRefreshOperation
MobileCalDAVDelegateUserInfo
CDVObjectForKeyCaseInsensitive:
APSEnv
T@"NSArray",R,N
APSTopic
T@"NSURL",&,N,V_calendarHomeURL
ICSDataWithOptions:
TB,N,V_shouldUpdatePushDelegate
T@"<CalDAVAccount>",R,N
Ti,N,V_preferredEventDaysToSync
T@"<CalDAVAccountDelegatesRefreshDelegate>",N,V_mdelegate
_appleIDSession
T@"<CalDAVPrincipal>",W,N
_itemID
T@"<DACalDAViCalItemBackingModel>",R,N,V_rem_reminderItem
_pushTransports
T@"CalDAVCalendarServerScheduleChangesItem",&,N
_refreshContext
T@"CalDAVPrincipalSearchPropertySet",&,N,V_searchPropertySet
_supportedCalendarComponentSets
T@"CalDAVRefreshContext",&,N,V_refreshContext
addChangeOfType:forChangeRowid:
T@"CalDAVUpdateOwnerItem",&,N
allKeys
T@"CalDAVUpdateOwnerItem",&,N,V_updatedBy
becameDefaultSchedulingCalendar
T@"CoreDAVDiscoveryTaskGroup",&,N,V_checkValidityTaskGroup
calendarHomeURL
T@"DACoreDAVLogger",&,N,V_curLogger
changes
T@"ICSDocument",&,N,V_document
containsObject:
T@"MobileCalDAVAccount",W,N,V_account
context
T@"MobileCalDAVPrincipal",&,N,V_mainPrincipal
coreDAVLogLevel
T@"NSArray",&,N,V_attachmentUUIDsToUpload
dateWithTimeInterval:sinceDate:
T@"NSArray",&,N,V_itemsToReportAsJunk
defaultTimeZone
T@"NSArray",&,N,V_syncActions
didSaveDatabase
T@"NSData",R,N
ekColor
T@"NSDictionary",&,N
exportICSCalendarFromReminders:
T@"NSDictionary",&,N,V_hrefsToModDeleteActions
hostURL
T@"NSDictionary",&,N,V_uuidsToAddActions
initWithFormat:
T@"NSError",&,N,V_error
isCalendarsOnly
T@"NSMutableArray",&,N,V_mCUAddresses
isExpandPropertyReportSupported
T@"NSMutableDictionary",&,N,V_URLToEtagMap
isProxy
T@"NSMutableDictionary",&,N,V_deletedCalendarItems
isTaskContainer
T@"NSMutableDictionary",&,N,V_pathsToCTags
lowercaseString
T@"NSMutableDictionary",&,N,V_principals
numberWithBool:
T@"NSMutableSet",&,N,V_addedCalendars
pushKey
T@"NSMutableSet",&,N,V_deletedCalendarURLs
release
T@"NSMutableSet",&,N,V_movedItemURLStrings
rem_calCalendar
T@"NSMutableSet",&,N,V_outstandingTasks
removeCalendar:
T@"NSNumber",&,N
responseHeaders
T@"NSSet",&,N
T@"NSSet",R,N
setCalendarURL:
T@"NSString",&,N,V_accountDescription
setCuAddresses:
T@"NSString",&,N,V_calendarHomePushKey
setDaIsNotificationsCollection:
T@"NSString",&,N,V_calendarURLString
setDataPayload:
T@"NSString",&,N,V_filename
setDisplayName:
T@"NSString",&,N,V_fullName
setMPrincipals:
T@"NSString",&,N,V_inboxCTag
setNeedsResync:
T@"NSString",&,N,V_notificationCollectionCTag
setShouldRetry:
T@"NSString",&,N,V_oldExternalID
setUid:
T@"NSString",&,N,V_preferredCalendarPhoneNumber
sharedOwnerName
T@"NSString",&,N,V_resultType
shouldUseCalendarHomeSyncReport
T@"NSString",&,N,V_syncKey
summary
T@"NSString",&,N,V_uniqueIdentifier
syncKey
T@"NSString",C,N,VdaCalendarItemUniqueIdentifier
updateDelegates
T@"NSString",R,C
updated
T@"NSTimeZone",&,N
T@"NSURL",&,N
.cxx_destruct
T@"NSArray",&,N,V_shareeActions
APSSubscriptionURL
T@"NSObject<OS_dispatch_group>",&,N,V_outstandingOperationGroup
CDVObjectForKeyWithNameSpace:andName:
TB,N,V_isForced
T#,R
Ti,N,V_changeID
T@"<CalDAVAccount>",W,N,V_account
_addedCalendars
T@"<CalDAVPrincipal>",R,N
_emailAddresses
T@"<CoreDAVTaskManager>",R,N
_preferredCalendarUserAddresses
T@"AKAppleIDSession",&,N,V_appleIDSession
_quotaFreeBytes
T@"CalDAVCalendarServerScheduleChangesItem",&,N,V_scheduleChanges
_refreshedSyncTokenForCalendar:
T@"CalDAVRefreshContext",&,N,V_context
account
T@"CalDAVServerVersion",&,N,V_serverVersion
address
T@"CalDAVUpdateOwnerItem",&,N,V_createdBy
arrayWithArray:
T@"CalDiagAccountSync",&,N,V_accountSyncDiagnostics
bundleForClass:
T@"DACoreDAVLogger",&,N,V_coreDAVLogger
cancelTaskGroup
T@"DACoreDAVTaskManager",R,N
completionBlock
T@"MobileCalDAVAccount",R,N
content
T@"MobileCalDAVAccountRefreshActor",&,N,V_actor
copyAddedItemsWithBatchHandler:
T@"MobileCalDAVPrincipal",R,N
created
T@"NSArray",&,N,V_emailAddresses
dealloc
T@"NSArray",&,N,V_rem_cachedFetchedRemindersForMergeSync
deleted
T@"NSData",&,N,V_dataPayload
T@"NSDateComponents",R,N
enabled
T@"NSDictionary",&,N,V_delegateUserInfos
fetchListIncludingSpecialContainerWithExternalIdentifier:error:
T@"NSDictionary",&,N,V_pushTransports
identityPersist
T@"NSDictionary",R,N
isCalDAVAccount
T@"NSMutableArray",&,N,V_calendarsToRefresh
isDirty
T@"NSMutableArray",&,N,V_mEmailAddresses
isPrincipalOnly
T@"NSMutableDictionary",&,N,V_calendarUserAddressesPerCalendar
isScheduleInbox
T@"NSMutableDictionary",&,N,V_itemIDsToMoveActions
localizedInvalidPasswordMessage
T@"NSMutableDictionary",&,N,V_pathsToSyncTokens
mEmailAddresses
T@"NSMutableDictionary",C,N
payloadAsString
T@"NSMutableSet",&,N,V_calendars
refresh
T@"NSMutableSet",&,N,V_modifiedCalendars
reloadCalendars
T@"NSMutableSet",&,N,V_outstandingTaskGroups
rem_saveRequest
T@"NSMutableSet",&,N,V_searchTaskSet
renewCredential
T@"NSNumber",&,N,V_quotaFreeBytes
scheduleChanges
T@"NSSet",&,N,V_preferredCalendarUserAddresses
setAlarmsDirty:
T@"NSString",&,N
setCanBeShared:
T@"NSString",&,N,V_accountID
setDaExternalIdentificationTag:
T@"NSString",&,N,V_calendarHomeSyncToken
setDaSyncToken:
T@"NSString",&,N,V_displayName
setDay:
T@"NSString",&,N,V_firstName
setIsPublished:
T@"NSString",&,N,V_guid
setNeedsAccountPropertyRefresh:
T@"NSString",&,N,V_lastName
setScheduleTag:
T@"NSString",&,N,V_notificationURLString
setSyncActions:
T@"NSString",&,N,V_preferredCalendarEmailAddress
setWasMigrated:
T@"NSString",&,N,V_principalPath
sharees
T@"NSString",&,N,V_supportedCalendarComponentSets
stringByAppendingPathExtension:
T@"NSString",&,N,V_uid
supportsSharing
T@"NSString",C,N
T@"NSString",C,N,VexternalModificationTag
updateReminder:
T@"NSString",R,N
uppercaseString
T@"NSTimeZone",R,N
userAgentHeader
T@"NSURL",&,N,V_defaultCalendarURL
T@"NSURL",&,N,V_dropBoxURL
T@"NSURL",&,N,V_inboxURL
T@"NSURL",&,N,V_legacy_principalURL
T@"NSURL",&,N,V_notificationCollectionURL
T@"NSURL",&,N,V_outboxURL
T@"NSURL",&,N,V_preferredCalendarUserAddress
T@"NSURL",&,N,V_serverID
T@"NSURL",C,N,V_address
T@"NSURL",R,N
T@"REMAccount",R,N
T@"REMList",&,N,V_rem_calCalendar
T@"REMObjectID",&,N,V_rem_accountObjectID
T@"REMObjectID",&,N,V_rem_clientID
T@"REMObjectID",&,N,VobjectID
T@"REMObjectID",R,N
T@?,C,N,V_completionBlock
TB,N
TB,N,V_allowWrite
TB,N,V_calendarFailedToSync
TB,N,V_calendarsAreDirty
TB,N,V_canCreateCalendars
TB,N,V_didDownloadEvents
TB,N,V_didFinish
TB,N,V_didResync
TB,N,V_didSaveDatabase
TB,N,V_isAffectingAvailability
TB,N,V_isCalendarsOnly
TB,N,V_isDelegate
TB,N,V_isDirty
TB,N,V_isEnabled
TB,N,V_isExpandPropertyReportSupported
TB,N,V_isMigrate
TB,N,V_isPrincipalOnly
TB,N,V_isRefreshing
TB,N,V_isScheduleOutbox
TB,N,V_isSpinning
TB,N,V_isWritable
TB,N,V_needsAccountPropertyRefresh
TB,N,V_needsPublishUpdate
TB,N,V_needsResync
TB,N,V_refreshing
TB,N,V_searchQueriesShouldCancel
TB,N,V_shouldCancel
TB,N,V_shouldRefreshPrincipalSearchProperties
TB,N,V_shouldRetry
TB,N,V_shouldSave
TB,N,V_shouldSaveAccounts
TB,N,V_statusChanged
TB,N,V_supportsCalendarUserSearch
TB,N,V_supportsFreebusy
TB,N,V_supportsPush
TB,N,V_supportsSyncToken
TB,N,V_wasDueToPush
TB,N,V_wasModifiedLocally
TB,N,V_wasUserRequested
TB,R,N
TQ,N,V_debugReminderFetchCount
TQ,N,V_localItems
TQ,N,V_numDownloadedElements
TQ,N,V_numUploadedElements
TQ,R
Td,N,V_startTime
Ti,N
Ti,N,V_itemID
Ti,N,V_mostRecentNotificationChangeIndex
Ti,N,V_preferredToDoDaysToSync
Ti,N,V_retryTime
Ti,N,V_sourceCalendarID
Ti,N,V_state
Tq,N
Tq,N,V_objectType
URLByAppendingPathComponent:
URLToEtagMap
URLWithString:
UUID
_URLToEtagMap
_account
_accountDescription
_accountID
_accountLoggingDescription
_accountSyncDiagnostics
_actor
_addChangedReminder:toArrayIfNeeded:
_addOrModifyTask:inICSCalendar:withList:shouldMergeProperties:outMergeDidChooseLocalProperties:inMobileCalendar:batchSaveRequest:
_addShareeWithObjectID:toDictionaryIfNeeded:
_address
_allowWrite
_attachmentUUIDsToUpload
_calendarCollectionsWereRefreshed
_calendarConstraintsPath
_calendarConstraintsResource
_calendarFailedToSync
_calendarHomePushKey
_calendarHomeSyncToken
_calendarHomeURL
_calendarURLString
_calendarUserAddressesPerCalendar
_calendars
_calendarsAreDirty
_calendarsToRefresh
_canCreateCalendars
_changeID
_changedAttributesFromCalendarChanges:
_checkValidityTaskGroup
_clearMoveChange:
_collectMoveActions
_collectShareeActions
_completionBlock
_context
_copyNotificationWithExternalID:
_copyNotificationWithUniqueIdentifier:
_coreDAVLogger
_createActionsForItems:withAction:backingReminders:alreadySentItems:createServerIDs:shouldSave:
_createdBy
_curLogger
_dataPayload
_debugReminderFetchCount
_defaultCalendarURL
_delegateUserInfos
_deletedCalendarItems
_deletedCalendarURLs
_didDownloadEvents
_didFinish
_didResync
_didSaveDatabase
_displayName
_document
_dropBoxURL
_error
_eventSyncEndDate
_filename
_firstName
_fixUpCalendarForServer:
_forceRefreshNextSync
_fullName
_guid
_handleInviteNotification:withResource:uid:
_handleInviteReply:withResource:owningNotification:uid:
_handleMoveTaskComplete:moveItem:
_handleResourceChanged:withResource:uid:
_hostForDiscovery
_hrefsToModDeleteActions
_inboxCTag
_inboxURL
_isAffectingAvailability
_isCalendarsOnly
_isDelegate
_isDirty
_isEnabled
_isExpandPropertyReportSupported
_isForced
_isMigrate
_isPrincipalOnly
_isRefreshing
_isScheduleOutbox
_isSpinning
_isWritable
_itemIDsToMoveActions
_itemsToReportAsJunk
_lastName
_legacy_principalURL
_localItems
_mCUAddresses
_mEmailAddresses
_mMovedItemURLStrings
_mainPrincipal
_mdelegate
_modifiedCalendars
_mostRecentNotificationChangeIndex
_movedItemURLStrings
_needsAccountPropertyRefresh
_needsPublishUpdate
_needsResync
_notificationCollectionCTag
_notificationCollectionURL
_notificationURLString
_notifications
_numDownloadedElements
_numUploadedElements
_objectType
_oldExternalID
_originatingChangeItems
_outboxURL
_outstandingOperationGroup
_outstandingTaskGroups
_outstandingTasks
_pathsToCTags
_pathsToSyncTokens
_powerAssertionContext
_powerAssertionGroupIdentifier
_preferredAddress
_preferredCalendarEmailAddress
_preferredCalendarPhoneNumber
_preferredCalendarUserAddress
_preferredEventDaysToSync
_preferredToDoDaysToSync
_prepareForcedRefreshSyncActionsForTruncatedHistoryWithTrackingState:completionBlock:
_principal
_principalPath
_principals
_reallyCancelAllSearchQueries
_reallyCancelSearchQuery:
_reallyPerformSearchQuery:
_reallySearchQueriesRunning
_refreshAccountProperties
_refreshCalendarProperties
_refreshDelegateAccountProperties
_refreshRegularCalendars
_refreshShouldContinue
_refreshSpecialCalendars
_refreshedCtagForCalendar:
_refreshing
_rem_accountObjectID
_rem_cachedFetchedRemindersForMergeSync
_rem_calCalendar
_rem_calURLToREMObjectIDCache
_rem_changeTracking
_rem_changedListsOfChangeType:withChangeTrackingHelper:inPrincipal:
_rem_clientID
_rem_copyReminderWithExternalID:
_rem_copyReminderWithUniqueIdentifier:inList:
_rem_createAccountStore_whichReallyShouldNotHappen
_rem_reminderItem
_rem_updateAccountProperties
_rem_updateCalendarOwnerInfo
_removeCalendarItemWithURL:
_resultType
_retryTime
_saveModifiedPrincipalsOnBackingAccount
_saveModifiedSubscribedCalendarsOnBackingAccount
_scheduleChanges
_scheduleTag
_searchPropertySet
_searchQueriesShouldCancel
_searchTaskSet
_sendMoveForItem:
_sendMoveTasks
_sendResultToAccount
_serverID
_serverVersion
_setSpinning:
_setSupportsEvents:supportsTodos:
_shareeActions
_shouldCancel
_shouldRefreshPrincipalSearchProperties
_shouldRetry
_shouldSave
_shouldSaveAccounts
_shouldUpdatePushDelegate
_sourceCalendarID
_startDateFromDaysToSync:
_startTime
_state
_statusChanged
_supportsCalendarUserSearch
_supportsFreebusy
_supportsPush
_supportsSyncToken
_syncActions
_syncCalendar:
_syncEndedWithError:
_syncKey
_syncStarted
_teardownAllOutstandingOperations
_transaction
_uid
_uniqueIdentifier
_updateCalendarStore:
_updateCalendarStoreNoDBOpen:
_updatedBy
_uploadAttachments
_userAddressSet:isEqualToSet:
_usernameForDiscovery
_uuidsToAddActions
_waitForStateTransition
_wasDueToPush
_wasMigrated
_wasModifiedLocally
_wasUserRequested
absoluteString
acceptedURL
access
accessLevel
account:isValid:validationError:
accountDescription
accountHasSignificantPropertyChangesFromOldAccountInfo:
accountID
accountIntPropertyForKey:
accountPropertyForKey:
accountSyncDiagnostics
accountType
accountTypeWithAccountTypeIdentifier:
accountWithIdentifier:
actor
addCUAddress:
addCalDAVNotificationWithUUIDString:hostURL:externalIdentifier:externalModificationTag:
addCalendar:
addEmail:
addListWithName:toAccountChangeItem:
addLogDelegate:forAccountInfoProvider:
addObject:
addObjectsFromArray:
addPrincipal:
addReminderWithTitle:toListChangeItem:
addSharee:
addToCoreDAVLoggingDelegates
addUsernameToURL:
addedCalendars
additionalHeaderValues
addressIsAccountOwner:
alarmsDirty
allItemURLs
allObjects
allValues
allowWrite
allowedCalendars:contains:
alwaysUseCalendarHomeSync
appSpecificCalendarItemClass
appleIDSession
array
arrayByAddingObjectsFromArray:
arrayWithObjects:
arrayWithObjects:count:
attachmentUUIDsToUpload
attendee
autorelease
backingAccountInfo
boolValue
bulkRequests
calDAVNotificationContext
calDAVNotifications
calDAVRemindersForAll
calDAVSharedListNotificationContentWithList:
calendar
calendarFailedToSync
calendarHomePushKey
calendarHomeSyncToken
calendarOfType:atURL:withOptions:
calendarRefreshForPrincipal:completedWithNewCTags:newSyncTokens:calendarHomeSyncToken:updatedCalendars:error:
calendarRefreshFoundDeletedContainerURL:
calendarRefreshFoundUpdatedContainerWithIgnoredEntityType:
calendarRefreshFoundUpdatedSpecialContainer:
calendarRefreshMkCalendarSucceededForPrincipal:calendar:
calendarRefreshPropPatchFinishedWithError:forCalendar:
calendarRefreshShouldRetryMkCalendarForPrincipal:calendar:error:
calendarRefreshWillRefreshCalendar:
calendarRefreshWillSendCalendarDeletes:
calendarSyncForPrincipal:calendar:completedWithError:
calendarURL
calendarURLString
calendarUserAddressIsEquivalentToURL:
calendarUserAddresses
calendarUserAddressesPerCalendar
calendarWithREMList:principal:
calendars
calendarsAreDirty
calendarsToRefresh
callStackSymbols
canBePublished
canBeShared
canCreateCalendars
canSaveAccount:withCompletionHandler:
cancelRefreshWithCompletion:
cancelTask:
cancelWithCompletion:
caseInsensitiveCompare:
cdvArrayWithIntegers:
changeID
changeSet
changedIdentifiersOfModelClass:ofChangeType:
changedKeys
changedModelObjectsOfModelClass:ofChangeType:
changedProperties
checkValidityTaskGroup
childAccounts
childrenOrder
class
clearCachedModelObjectResultsForModelClass:
clearCalendarChanges
clearEventChanges
clearShareeActions
clear_rem_changeTracking
clientCertificateInfoProvider
clientToken
clientTokenRequestedByServer
code
collectionChanges
collectionSetURL
collectionUpdates
color
commonName
compare:
compareAddressURL:localString:
componentForKey:
componentKeys
componentOccurrencesForKey:
components
components:fromDate:
componentsAsString
compressRequests
configuration
conformsToProtocol:
consumer
consumerForTask:
convertToDAContactSearchResultElement
copy
copyAllItemsWithBatchHandler:
copyDeletedItems
copyModifiedItemsWithBatchHandler:
copyStorageSession
coreDAVLogDiagnosticMessage:atLevel:
coreDAVLogTransmittedDataPartial:
coreDAVLogger
coreDAVOutputLevel
coreDAVTransmittedDataFinished
count
countByEnumeratingWithState:objects:count:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
createdBy
ctag
cuAddresses
curLogger
currentHandler
customConnectionProperties
daAccount
daAccountSubclassWithBackingAccountInfo:
daBulkRequests
daCalendarItemUniqueIdentifier
daDisplayOrder
daExternalIdentificationTag
daHexString
daIsEventOnlyContainer
daIsImmutable
daIsNotificationsCollection
daIsReadOnly
daPrincipal
daPushKey
daSupportsSharedCalendars
daSymbolicColorName
daSyncToken
daWasMigrated
da_absoluteURLForChildLeastInfoRepresentationRelativeToParentURL:
da_appendSlashIfNeeded
da_hasPrefixCaseInsensitive:
da_isEqualToDAVURL:
da_leastInfoStringRepresentationRelativeToParentURL:
da_newGUID
da_pathWithoutTrailingRemovingSlash
da_removeSlashIfNeeded
da_trimWhiteSpace
da_urlBySettingPath:
dataPayload
dataUsingEncoding:
date
dateByAddingComponents:toDate:options:
dateFromComponents:
debugDescription
debugReminderFetchCount
defaultAllDayAlarms
defaultCalendarURL
defaultCenter
defaultContext
defaultEventCalendarTitle
defaultManager
defaultTimedAlarms
defaultTodoCalendarTitle
delegateRefreshForPrincipal:completedWithError:
delegateUserInfos
deleteAction:completedWithError:
deleteCalendar
deleteFromContainer:
deleteResourcesAtURLs:
deletedCalendarItems
deletedCalendarURLs
description
destinationURL
dictionary
dictionaryRepresentation
dictionaryWithDictionary:
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:count:
didDownloadEvents
didFinish
didResync
discoverInitialPropertiesWithConsumer:
discoveryTask:gotAccountInfo:error:
displayAccount
displayColor
displayName
document
domain
dropAssertionsAndRenewCredentialsInQueue:withHandler:
dropBoxURL
dropPowerAssertions
dropPowerAssertionsForGroupIdentifier:
dueDateComponents
earlierDate:
emailAddress
emailAddresses
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
error
errorWithDomain:code:userInfo:
etagsForItemURLs:
eventFilterEndDate
eventFilterStartDate
externalIdentifier
externalModificationTag
fetchAccountWithExternalIdentifier:error:
fetchAndInitializeChangeTrackingStateIfNeeded
fetchChangesSinceLastConsumed
fetchListIncludingSpecialContainerWithObjectID:error:
fetchListWithObjectID:error:
fetchListsIncludingSpecialContainersWithError:
fetchListsWithError:
fetchReminderWithDACalendarItemUniqueIdentifier:inList:error:
fetchReminderWithExternalIdentifier:error:
fetchReminderWithObjectID:error:
fetchRemindersWithError:
fetchRemindersWithExternalIdentifiers:error:
fetchRemindersWithObjectIDs:error:
fileExistsAtPath:isDirectory:
filename
filenameWithBasename:
filenameWithUniqueIdentifier:
finishCoreDAVTaskGroupWithError:delegateCallbackBlock:
finishEarlyWithError:
finishSnippets
firstHref
firstName
flushCaches
fullName
getAppleIDSession
getCFRunLoop
guid
handleAuthenticateAgainstProtectionSpace:
handleCertificateError:
handleFailureInMethod:object:file:lineNumber:description:
handleShouldUseCredentialStorage
handleTrustChallenge:
handleTrustChallenge:completionHandler:
hasCalendarUserAddress:
hasCalendarUserAddressEquivalentToURL:
hasEvents
hasMailto
hasPrefix:
hash
host
hostFromEmail
href
hrefs
hrefsToModDeleteActions
identifier
inboxCTag
inboxURL
infoFromCalDAVDetails:allowWrite:
ingestBackingAccountInfoProperties
init
initShareeWithObjectID:accountID:listID:displayName:firstName:lastName:address:status:accessLevel:
initWithAccount:
initWithAccount:context:
initWithAccountID:remAccountObjectID:accountDescription:
initWithAccountInfoProvider:principalURL:taskManager:
initWithAccountInfoProvider:taskManager:httpPorts:httpsPorts:httpServiceString:httpsServiceString:wellKnownPaths:requiredComplianceClass:
initWithAccountType:
initWithAction:context:
initWithAddress:account:
initWithArray:
initWithBackingAccountInfo:
initWithCalendar:
initWithCalendarIdentifier:
initWithCalendarURL:list:principal:title:
initWithCalendarURL:principal:
initWithCalendarURL:principal:title:
initWithConfiguration:principalUID:account:
initWithDASymbolicColorName:daHexString:
initWithData:options:error:
initWithDomain:code:userInfo:
initWithFilename:
initWithFormat:arguments:
initWithHREF:commonName:inviteStatus:access:
initWithIdentifier:
initWithPrincipal:
initWithPrincipal:calendar:nextCtag:nextSyncToken:
initWithPrincipalPath:displayName:allowWrite:
initWithREMDAAccount:clientName:withREMStore:
initWithREMReminder:inContainer:
initWithREMSharee:
initWithReminder:
initWithResponse:
initWithRootElementNameSpace:name:parseClass:baseURL:
initWithSearchStrings:searchTypes:serverSupportSet:atURL:
initWithSourceCalendarID:itemID:oldExternalID:changeID:objectType:
initWithStringProperties:
initWithURL:eTag:dataPayload:inContainerWithURL:withAccountInfoProvider:
insertObject:atIndex:
instance
intValue
integerValue
intersectSet:
inviteStatus
isAffectingAvailability
isDelegate
isEditable
isEnabled
isEnabledForDataclass:
isEnabledForEvents
isEnabledForTodos
isEqual:
isEqualToAccount:
isEqualToDate:
isEqualToDictionary:
isEqualToNumber:
isEqualToString:
isEventContainer
isFamilyCalendar
isForced
isHidden
isKindOfClass:
isManagedByServer
isMarkedImmutableSharees
isMarkedUndeletable
isMemberOfClass:
isMergeSync
isMigrate
isNotification
isPoll
isPublished
isRefreshing
isRenameable
isScheduleOutbox
isSpinning
isSubscribed
isTruncated
isValidating
isWritable
isWritableFileAtPath:
itemID
itemIDsToMoveActions
itemsToReportAsJunk
lastConsumedDate
lastModifiedDate
lastName
lastPathComponent
lastSyncTitle
last_modified
legacy_principalURL
length
list
listID
loadLocalItemWithAccount:
localItems
localizedDescription
localizedIdenticalAccountFailureMessage
localizedStringForKey:value:table:
localizedStringWithFormat:
logData:
logSnippet:
logString:
logStringWithFormat:
loggingDescription
mCUAddresses
mCalendars
mItemIDsToMoveActions
mMovedItemURLStrings
mPrincipals
mainPrincipal
markChangesConsumed
maxAttendees
mdelegate
modifiedCalendars
mostRecentNotificationChangeIndex
movedItemURLStrings
multiStatus
mutableCopy
name
nameAttribute
namespaceAndNameForWellKnownType:
needsAccountPropertyRefresh
needsDefaultAllDayAlarmUpdate
needsDefaultTimedAlarmUpdate
needsIsAffectingAvailabilityUpdate
needsPublishUpdate
needsResync
newOAuth1CredentialForChallenge:
newObjectID
noteFailedNetworkRequest
noteFailedNetworkRequestForTask:
noteFailedProtocolRequest
noteFailedProtocolRequestForTask:
noteHomeSetOnDifferentHost:
noteSuccessfulRequestWithNumDownloadedElements:
noteSuccessfulRequestWithNumDownloadedElements:forTask:
noteSuccessfulRequestWithNumDownloadedElements:numUploadedElements:
noteTimeSpentInNetworking:
noteTimeSpentInNetworking:forTask:
notes
notificationCollectionCTag
notificationCollectionURL
notificationURLString
null
numDownloadedElements
numUploadedElements
numberWithDouble:
numberWithInt:
numberWithInteger:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedLong:
oauth2Token
oauthInfoProvider
oauthVariant
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
objectID
objectIDWithUUID:
objectIdentifier
objectType
oldExternalID
onBehalfOfBundleIdentifier
order
organizer
originatingChangeItems
outboxURL
outstandingOperationGroup
outstandingTaskGroups
outstandingTasks
overriddenPort
overriddenScheme
overriddenServer
owner
ownerDisplayName
ownerEmailAddress
ownerPhoneNumber
owningListIdentifier
packCalDAVUserAdress:
parentAccount
password
path
pathForResource:ofType:
pathsToCTags
pathsToSyncTokens
payloadAsFullURL
payloadAsOriginalURL
performDiscoveryWithHostname:username:consumer:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
persistentUUID
populateDataPayloadWithReminder:
port
postNotificationName:object:
powerAssertionRetainCount:
prePublishURL
preferred
preferredAddress:
preferredCUAddress
preferredCalendarEmailAddress
preferredCalendarPhoneNumber
preferredCalendarUserAddress
preferredCalendarUserAddresses
preferredCalendarUserAddressesForCalendar:
preferredEventDaysToSync
preferredToDoDaysToSync
preferredUserAddress
prepareCalendarsForSyncWithCompletionBlock:
prepareMergeSyncActionsWithCompletionBlock:
prepareSyncActionsWithCompletionBlock:
principal
principalPath
principalURL
principals
processData:forTask:
promptUserForNewCoreDAVPasswordWithCompletionBlock:
propertyRefreshForPrincipal:completedWithError:
propertyValue
publishURL
pushTransports
putAction:completedWithError:
quotaFreeBytes
rangeOfString:
rangeOfString:options:range:
readOnlyPrincipalDetails
readWritePrincipalDetails
reattainPowerAssertions
reattainPowerAssertionsForGroupIdentifier:
recordDiagnosticsForAccountSync:
recurrenceID
recurrenceSplitAction:completedWithUpdatedETag:updatedScheduleTag:createdURL:createdETag:createdScheduleTag:
recurrenceSplitAction:failedWithError:
recurrenceSplitActions
recurrenceSplitActionsCompletedWithError:
recurrences
refreshActor:didCompleteWithError:
refreshCalendarProperties
refreshContext
refreshDelegates
refreshProperties
refreshWithContext:
refreshing
registerDefaultLoggerWithCoreDAV
registerWithiCalendar
relativePath
releasePowerAssertion
releasePowerAssertion:
rem_account
rem_accountObjectID
rem_addedCalendarsWithChangeTrackingHelper:inPrincipal:
rem_cacheListObjectID:forCalendarURLString:
rem_cachedFetchedRemindersForMergeSync
rem_cachedListObjectIDForURLString:
rem_changeTracking
rem_changeTrackingBehaviors
rem_clearListObjectIDCache
rem_clientID
rem_dateAsUTC
rem_dateWithDateComponents:timeZone:
rem_deletedCalendarsWithChangeTrackingHelper:inPrincipal:
rem_getCalCalendar
rem_initCalCalendarWithTitle:
rem_invalidateCalCalendarWithReload:
rem_modifiedCalendarsWithChangeTrackingHelper:inPrincipal:
rem_notificationPresentingForDataAccess
rem_provideAccountInfo
rem_reloadCalCalendar
rem_reminderItem
rem_removeListObjectIDCacheEntryForCalendarURLString:
rem_saveRequestForDataAccess
rem_setListPropertiesWithBlock:error:
rem_setReminderPropertiesWithBlock:error:
rem_shareeForREMList:
rem_store
rem_storeForDataAccess
rem_storeProvider
rem_updatedREMShareeFromREMSharee:
rem_userNotificationPresentingProvider
removeAccount:withCompletionHandler:
removeAllObjects
removeAllSharees
removeCalDAVNotication:
removeCalendarWithURL:
removeConsumerForTask:
removeFromCoreDAVLoggingDelegates
removeFromList
removeFromParent
removeLogDelegate:forAccountInfoProvider:
removeObject:
removeObjectForKey:
removePrincipal:
removecalendarWithURL:
resemblesEmailAddress
resetStatusReport
resourceSpecifier
respondsToSelector:
responses
resultFromResponse:
resultType
resultTypeForRecordType:
retain
retainCount
retainPowerAssertion
retainPowerAssertion:withGroupIdentifier:
retryDiscoveryTask:
retryTime
rootElement
saveAccountProperties
saveModifiedPropertiesOnBackingAccount
saveServerIDToExistingItem
saveSynchronouslyWithError:
saveVerifiedAccount:withCompletionHandler:
saveWithLocalObject:toContainer:shouldMergeProperties:outMergeDidChooseLocalProperties:account:
saveWithLocalObject:toContainer:shouldMergeProperties:outMergeDidChooseLocalProperties:account:calendar:batchSaveRequest:
scheduleTag
scheme
searchContext
searchPropertySet
searchQueriesShouldCancel
searchQuery:finishedWithError:
searchQuery:returnedResults:
searchString
searchTaskSet
self
serverBaseURL
serverComplianceClasses
serverHeaders
serverID
serverRoot
serverVersion
setAccount:
setAccountDescription:
setAccountID:
setAccountInfoProvider:
setAccountIntProperty:forKey:
setAccountProperty:forKey:
setAccountSyncDiagnostics:
setActive:
setActor:
setAddedCalendars:
setAddress:
setAllowWrite:
setAppleIDSession:
setAttachmentUUIDsToUpload:
setAuthenticationType:
setBody:
setBulkRequests:
setByAddingObjectsFromArray:
setCalendarFailedToSync:
setCalendarHomePushKey:
setCalendarHomeSyncToken:
setCalendarHomeURL:
setCalendarURLString:
setCalendarUserAddressesPerCalendar:
setCalendarsAreDirty:
setCalendarsToRefresh:
setCanBePublished:
setCanCreateCalendars:
setChangeID:
setCheckValidityTaskGroup:
setCollectionSetURL:
setColor:
setCompletionBlock:
setConsumer:forTask:
setContext:
setCoreDAVLogger:
setCreatedBy:
setCtag:
setCurLogger:
setDaAllowsCalendarAddDeleteModify:
setDaBulkRequests:
setDaCalendarItemUniqueIdentifier:
setDaConstraintsDescriptionPath:
setDaDisplayOrder:
setDaIsEventOnlyContainer:
setDaIsImmutable:
setDaIsReadOnly:
setDaPushKey:
setDaSupportsSharedCalendars:
setDaWasMigrated:
setDebugReminderFetchCount:
setDefaultAllDayAlarms:
setDefaultCalendarURL:
setDefaultTimedAlarms:
setDelegate:
setDelegateUserInfos:
setDeletedCalendarItems:
setDeletedCalendarURLs:
setDestinationURL:
setDidDownloadEvents:
setDidFinish:
setDidResync:
setDidSaveDatabase:
setDocument:
setDropBoxURL:
setEmailAddress:
setEmailAddresses:
setError:
setEtag:forItemAtURL:
setEtag:forItemAtURL:reminderChangeItem:
setExternalIdentifier:
setExternalModificationTag:
setFetchPrincipalSearchProperties:
setFilename:
setFirstName:
setFullName:
setGuid:
setHost:
setHrefsToModDeleteActions:
setIdentifierOnServer:
setInboxCTag:
setInboxURL:
setIsAffectingAvailability:
setIsCalendarsOnly:
setIsDelegate:
setIsDirty:
setIsEditable:
setIsEnabled:
setIsEventContainer:
setIsExpandPropertyReportSupported:
setIsFamilyCalendar:
setIsForced:
setIsManagedByServer:
setIsMarkedImmutableSharees:
setIsMarkedUndeletable:
setIsMigrate:
setIsNotification:
setIsPoll:
setIsPrincipalOnly:
setIsRefreshing:
setIsRenameable:
setIsScheduleInbox:
setIsScheduleOutbox:
setIsSpinning:
setIsSubscribed:
setIsTaskContainer:
setIsWritable:
setItemID:
setItemsToReportAsJunk:
setLastName:
setLastSyncTitle:
setLegacy_principalURL:
setLocalItems:
setMCUAddresses:
setMCalendars:
setMEmailAddresses:
setMItemIDsToMoveActions:
setMMovedItemURLStrings:
setMainPrincipal:
setMaxAttendees:
setMdelegate:
setModifiedCalendars:
setMostRecentNotificationChangeIndex:
setName:
setNeedsDefaultAllDayAlarmUpdate:
setNeedsDefaultTimedAlarmUpdate:
setNeedsPublishUpdate:
setNotes:
setNotificationCollectionCTag:
setNotificationCollectionURL:
setNotificationURLString:
setNumDownloadedElements:
setNumUploadedElements:
setObject:forKey:
setObject:forKeyedSubscript:
setObjectID:
setObjectType:
setOldExternalID:
setOrder:
setOriginatingChangeItems:
setOutboxURL:
setOutstandingOperationGroup:
setOutstandingTaskGroups:
setOutstandingTasks:
setOverriddenPort:
setOverriddenScheme:
setOverriddenServer:
setOwner:
setOwnerDisplayName:
setParentAccount:
setPathsToCTags:
setPathsToSyncTokens:
setPort:
setPrePublishURL:
setPreferredCalendarEmailAddress:
setPreferredCalendarPhoneNumber:
setPreferredCalendarUserAddress:
setPreferredCalendarUserAddresses:
setPreferredCalendarUserAddresses:forCalendar:
setPreferredEventDaysToSync:
setPreferredToDoDaysToSync:
setPreferredUserAddress:
setPrincipal:
setPrincipalPath:
setPrincipalURL:
setProdid:
setPublishURL:
setPushKey:
setPushTransports:
setQuotaFreeBytes:
setRefreshContext:
setRefreshing:
setRem_LocalItem:
setRem_accountObjectID:
setRem_cachedFetchedRemindersForMergeSync:
setRem_calCalendar:
setRem_clientID:
setResultType:
setRetryTime:
setScheduleChanges:
setScheduleTag:forItemAtURL:
setScheduleagent:
setSearchContext:
setSearchPropertySet:
setSearchQueriesShouldCancel:
setSearchTaskSet:
setServerID:
setServerSupportsExpandPropertyReport:
setServerVersion:
setSharedOwnerAddress:
setSharedOwnerName:
setShareeActions:
setSharees:
setSharingStatus:
setShouldCancel:
setShouldDoInitialAutodiscovery:
setShouldRefreshPrincipalSearchProperties:
setShouldSave:
setShouldSaveAccounts:
setShouldUpdatePushDelegate:
setShouldUseOpportunisticSockets:
setSourceCalendarID:
setSourceURL:
setStartTime:
setState:
setStatusChanged:
setSubscribedCalendars:
setSupportedCalendarComponentSets:
setSupportsCalendarUserSearch:
setSupportsFreebusy:
setSupportsPush:
setSupportsSyncToken:
setSymbolicColorName:
setSyncKey:
setSyncToken:
setTimeZone:
setTimeoutInterval:
setTitle:
setURL:forResourceWithUUID:
setURL:forResourceWithUUID:reminderChangeItem:
setURLToEtagMap:
setUniqueIdentifier:
setUpdatedBy:
setUseCalendarHomeSyncReport:
setUseSSL:
setUsername:
setUuidsToAddActions:
setValue:forKey:
setWasDueToPush:
setWasModifiedLocally:
setWasUserRequested:
setWithArray:
setWithObject:
sharedLogger
sharedLogging
sharedManager
sharedOwnerAddress
sharedPowerAssertionManager
sharedRunLoop
shareeActions
shareeContext
sharingStatus
shouldCancel
shouldCompressRequests
shouldDoInitialAutodiscovery
shouldFailAllTasks
shouldFilterEventSyncTimeRange
shouldFilterSyncTimeRangeForInbox
shouldHandleHTTPCookiesForURL:
shouldLogTransmittedData
shouldRefreshPrincipalSearchProperties
shouldRetry
shouldRetryUnauthorizedTask:
shouldSave
shouldSaveAccounts
shouldSendClientInfoHeaderForURL:
shouldTryRenewingCredential
shouldTurnModalOnBadPassword
shouldUpdatePushDelegate
shouldUseOpportunisticSockets
showNotificationWithIdentifier:content:completion:
shutdown
sortedArrayUsingSelector:
sourceCalendarID
sourceURL
spinnerIdentifiers
startTaskGroup
startTime
state
status
statusChanged
statusReport
store
stringAddingMailto
stringByAddingPercentEscapesUsingEncoding:
stringByAppendingString:
stringByDeletingLastPathComponent
stringByExpandingTildeInPath
stringByReplacingOccurrencesOfString:withString:
stringProperties
stringRemovingMailto
stringWithFormat:
subCalPropertiesByURL
submitIndependentCoreDAVTask:
subscribedCalendars
substringFromIndex:
successfulPropertiesToValues
superclass
supportedCalendarComponentSet
supportedCalendarComponentSets
supportsAutoSchedule
supportsCalendarAudit
supportsCalendarHomeSync
supportsCalendarProxy
supportsCalendarUserSearch
supportsEvents
supportsExtendedCalendarQuery
supportsFreebusy
supportsPrivateComments
supportsPropertySearch
supportsPush
supportsReminders
supportsRequestCompression
supportsSyncToken
supportsTimeRangeFilter
supportsTimeRangeFilterOnInbox
supportsTimeRangeFilterWithoutEndDate
supportsWellKnownType:
symbolicColorName
sync
syncActions
syncCalendar
syncDidFinishWithError:
syncToken
systemTimeZone
systemTimeZoneForDate:
task:didFinishWithError:
taskGroup:didFinishWithError:
taskManager
teardown
timeZone
timeZoneWithName:
title
titleAsString
transactionId
type
typeAttribute
uniqueIdentifier
unpackCalDAVUserAdress:
updatableBackingModel
updateAccount:
updateAccountWithAccountID:restartDA:completion:
updateCalDAVNotification:withBlock:
updateList:
updatePropertiesWithReminder:
updateReminderChangeItem:fromICSTodo:icsCalendar:isNew:withOptions:
updateResourcesFromServer:
updatedBy
upgradeAccount
useSSL
user
userAddress:forAccount:
userAddressFromDictionaryRepresentation:forAccount:
userFromEmail
username
uuid
uuidString
uuidsToAddActions
valueForKey:
versionWithHTTPHeaders:
versionWithPropertyValue:
viewedTimeZone
wasDueToPush
wasMigrated
wasModifiedLocally
wasUserRequested
webLoginRequestedAtURL:reasonString:inQueue:completionBlock:
wellKnownPaths
zone
v16@0:8
@24@0:8@16
@16@0:8
B16@0:8
v24@0:8@16
v20@0:8i16
i16@0:8
v20@0:8B16
B20@0:8B16
v24@0:8@?16
v32@0:8@16@24
v40@0:8@16@24@32
B24@0:8@16
q16@0:8
v32@0:8@16q24
@"NSMutableDictionary"
@"NSMutableSet"
@"CalDAVServerVersion"
@"NSString"
@"MobileCalDAVPrincipal"
@"NSDictionary"
@"CalDAVPrincipalSearchPropertySet"
@"CalDAVRefreshContext"
@"CoreDAVDiscoveryTaskGroup"
@"MobileCalDAVAccountRefreshActor"
@"DACoreDAVLogger"
B32@0:8@16@24
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@16@?24
v32@0:8q16@24
v32@0:8d16@24
v24@0:8q16
v24@0:8d16
^{__CFURLStorageSession=}16@0:8
v48@0:8@16@24@32@?40
@"NSData"16@0:8
@"NSURL"16@0:8
@"NSSet"16@0:8
v24@0:8@?<v@?i>16
B24@0:8@"NSError"16
@"NSDictionary"16@0:8
@"<CoreDAVClientCertificateInfoProvider>"16@0:8
@"<CoreDAVOAuthInfoProvider>"16@0:8
B32@0:8@"NSURLAuthenticationChallenge"16@?<v@?q@"NSURLCredential">24
B24@0:8@"NSURLProtectionSpace"16
B24@0:8@"NSURLSessionTask"16
v24@0:8@"NSURL"16
B24@0:8@"NSURL"16
v32@0:8q16@"CoreDAVTask"24
v24@0:8@"CoreDAVTask"16
v32@0:8d16@"CoreDAVTask"24
v48@0:8@"NSURL"16@"NSString"24@"NSObject<OS_dispatch_queue>"32@?<v@?i>40
@"AKAppleIDSession"16@0:8
^{_CFURLCredential=}24@0:8@16
^{_CFURLCredential=}24@0:8@"NSURLAuthenticationChallenge"16
@36@0:8i16@20@28
@"<CalDAVCalendar>"36@0:8i16@"NSURL"20@"NSDictionary"28
v24@0:8@"<CalDAVCalendar>"16
@"<CalDAVAccount>"16@0:8
@"<CoreDAVTaskManager>"16@0:8
v24@0:8@"NSSet"16
v24@0:8@"NSString"16
v24@0:8@"NSDictionary"16
@"NSNumber"16@0:8
v24@0:8@"NSNumber"16
@"NSDateComponents"16@0:8
v24@0:8@?<v@?@"<CalDAVPrincipal>">16
@40@0:8@16@24@32
@20@0:8i16
v32@0:8q16q24
@"REMDAChangeTrackingHelper"
@"NSURL"
@"<CalDAVAccount>"
@"NSSet"
@"NSNumber"
@"AKAppleIDSession"
@32@0:8@16@24
@"MobileCalDAVAccount"
@40@0:8q16@24@32
v64@0:8@16@24@32@40@48@56
@"NSDictionary"24@0:8@"NSArray"16
B32@0:8@"NSString"16@"NSURL"24
B32@0:8@"NSURL"16@"NSString"24
B24@0:8@"NSSet"16
@"<CalDAVPrincipal>"16@0:8
@"NSTimeZone"16@0:8
v24@0:8@"NSTimeZone"16
@"NSArray"16@0:8
v24@0:8@?<v@?@"<CalDAVCalendar>">16
v24@0:8@"NSError"16
v32@0:8@"CoreDAVAction"16@"NSError"24
v64@0:8@"CalDAVRecurrenceSplitAction"16@"NSString"24@"NSString"32@"NSURL"40@"NSString"48@"NSString"56
v32@0:8@"CalDAVRecurrenceSplitAction"16@"NSError"24
@48@0:8@16@24@32@40
v24@0:8B16B20
B40@0:8@16@24@32
@56@0:8@16i24@28@36B44^B48
v32@0:8@16@?24
B32@0:8@?16^@24
v24@0:8Q16
@"NSArray"
@"REMList"
@"<DACalDAViCalItemUpdatableBackingModel>"16@0:8
@"REMObjectID"16@0:8
v24@0:8@"REMReminder"16
@"REMObjectID"
v32@0:8@"CoreDAVTaskGroup"16@"NSError"24
v32@0:8@"<CalDAVPrincipal>"16@"NSError"24
v64@0:8@"<CalDAVPrincipal>"16@"NSDictionary"24@"NSDictionary"32@"NSString"40@"NSSet"48@"NSError"56
B40@0:8@"<CalDAVPrincipal>"16@"<CalDAVCalendar>"24@"NSError"32
v32@0:8@"<CalDAVPrincipal>"16@"<CalDAVCalendar>"24
v24@0:8@"CalDAVContainer"16
v32@0:8@"NSError"16@"<CalDAVCalendar>"24
v24@0:8@"CalDAVCalendarPropertyRefreshOperation"16
v40@0:8@"<CalDAVPrincipal>"16@"<CalDAVCalendar>"24@"NSError"32
@?16@0:8
@"DATransaction"
@"CalDiagAccountSync"
@"NSMutableArray"
@"NSObject<OS_dispatch_group>"
d16@0:8
@"NSError"
B48@0:8@16@24@32@40
@56@0:8@16@24@32@40@48
@56@0:8@"NSURL"16@"NSString"24@"NSData"32@"NSURL"40@"<CoreDAVAccountInfoProvider>"48
B52@0:8^v16^v24B32^B36@44
B24@0:8^v16
B52@0:8^v16^v24B32^B36@"DAAccount"44
v24@0:8@"<DACalDAViCalItemBackingModel>"16
B24@0:8@"DAAccount"16
@"CalDAVCalendarServerScheduleChangesItem"16@0:8
v24@0:8@"CalDAVCalendarServerScheduleChangesItem"16
@"CalDAVUpdateOwnerItem"16@0:8
v24@0:8@"CalDAVUpdateOwnerItem"16
v28@0:8@16i24
@68@0:8@16@24@32B40^B44@52@60
@68@0:8^v16^v24B32^B36@44@52@60
@"NSData"
@"CalDAVCalendarServerScheduleChangesItem"
@"<DACalDAViCalItemBackingModel>"
@"ICSDocument"
@"CalDAVUpdateOwnerItem"
@44@0:8i16i20@24i32q36
@"<CalDAVAccountDelegatesRefreshDelegate>"
@28@0:8@16B24
@36@0:8@16@24B32
p,Wp
(6GPV\
CalDAVAccountVersion
CalDAVHostKey
CalDAVSchemeKey
CalDAVPortKey
CalDAVMainPrincipalUID
CalDAVPrincipals
CalDAVMobileAccountCollectionSetName
CalDAVMobileAccountSearchPropertySet
CalDAVMobileAccountSearchPropertySetKey_CoreDAV
CalDAVMobileAccountIsWritable
CalDAVMobileAccountServerVersion
CalDAVMobileAccountOverriddenServer
CalDAVMobileAccountOverriddenPort
CalDAVMobileAccountOverriddenScheme
CalDAVMobileAccountDelegatePrincipalPath
RDCalDAVMobileAccountRefreshDidCompleteNotificationName
CalDAVCalendarConstraints
CalDAVCalendarConstraintsNoComments
CalDAVCalendarConstraintsNoSchedule
CalDAVCalendarConstraintsNoScheduleNoComments
FutureLimitedCalDAVCalendarConstraints
FutureLimitedCalDAVCalendarConstraintsNoComments
FutureLimitedCalDAVCalendarConstraintsNoSchedule
FutureLimitedCalDAVCalendarConstraintsNoScheduleNoComments
WasUpgradedFromLegacy
SubscribedCalendars
v8@?0
CalDAVHTTPTraffic
MobileCalDAVAccount.m
Nothing to see here, buddy. Just turn around and leave quietly.
Account was deallocated while still refreshing. Ouch
absoluteString
%@://%@:%ld
http
subscribed 
VTODO
VEVENT
plist
v24@?0B8B12@"NSError"16
com.apple.mobilecal
com.apple.reminders
I didn't order a refresh, so why is there one on my menu?
We should have an actor at this point
com.apple.remindd.caldav.syncFinished
success
downloadedItemsCount
duration
errorCode
errorDomain
migration 
 (principal only)
 (calendars only)
parent
DAAccountHost
v20@?0B8@"NSError"12
/calendar/dav/%@/user/
/.well-known/caldav
/principals/
_caldav._tcp.
_caldavs._tcp.
calendar-access
ACCOUNT_UNIQUE_CONSTRAINT_FAILED_BODY_FORMAT_CALDAV
DataAccess
INVALID_PASSWORD_BODY_CALDAV
mailto:%@
v32@?0@8@"MobileCalDAVPrincipal"16^B24
PreferredCalendarUserAddresses
PreferredCalendarUserAddressesPerCalendar
FullName
CalendarHomeURL
PrincipalPath
DefaultCalendarURL
NotificationCollectionURL
NotificationCollectionCTag
InboxURL
InboxCTag
OutboxURL
DropBoxURL
NotificationsURLString
PushTransports
CalendarHomePushKey
APSTopic
APSEnv
APSSubscriptionURL
SupportsPush
Delegate
Writable
CanCreateCalendars
Enabled
ExpandPropertyReportSupported
SupportsCalendarUserSearch
SupportsFreebusy
SupportsSyncToken
QuotaFreeBytes
SupportedCalendarComponentSets
PrincipalURL
MobileCalDAVPrincipal.m
Cannot create a principal with a nil account
v24@?0@"NSDictionary"8^B16
v32@?0@"NSString"8@"NSSet"16^B24
CardDAViCloudDaemonAccount
v24@?0@"CalDAVCalendarUserAddress"8^B16
v32@?0@8@16^B24
Cannot create a calendar without a URL
DEFAULT_CALENDAR_NAME
DEFAULT_TASK_CALENDAR_NAME
APSD
PRODUCTION
production
SANDBOX
DEVELOPMENT
development
demo
mailto
v24@?0q8@"NSError"16
MobileCalUserAddressAddressURL
EventRef
ChangeID
ChangeRowid
ExternalID
UniqueIdentifier
SignificantAttributeChange
OldCalendarID
EntityType
%@ [%@] remObjectID=%@
(not loaded)
%@ [%@] remObjectID=%@ title="%@"
v16@?0@"REMListChangeItem"8
v16@?0@"REMReminderChangeItem"8
__untitled__
MobileCalDAVCalendar.m
ERROR: LOOKATME: _createActionsForItems: items.count (%@) does not equal reminders.count (%@).
ERROR: LOOKATME: _createActionsForItems: has ill-paired DA-items and backing reminders (item.objectID: %@, backing.objectID)
v32@?0@"REMSharee"8Q16^B24
v24@?0@"NSArray"8@"NSArray"16
ERROR: LOOKATME: [ForcedRefreshSyncForTruncatedHistory]: batchedItems.count (%@) does not equal batchedReminders.count (%@).
ERROR: LOOKATME: [ForcedRefreshSyncForTruncatedHistory]: has ill-paired DA-items and backing reminders (item.objectID: %@, backing.objectID)
ERROR: LOOKATME: prepareMergeSyncActions: batchedItems.count (%@) does not equal batchedReminders.count (%@).
ERROR: LOOKATME: prepareMergeSyncActions: has ill-paired DA-items and backing reminders (item.objectID: %@, backing.objectID)
-//Apple Inc.//iOS %@//EN
Can't create path: %@ (%@)
mailto:
DACalDAVREMReminderProxy.m
Invalid parameter not satisfying: %@
reminder
[reminder.objectID isEqual:self.objectID]
<%@: %p, objectID: %@, UID: %@, etag: %@>
%@:<%@>
MobileCalDAVAccountRefreshActor.m
There should not be any active task groups when the actor is deallocated
There should not be any active tasks when the actor is deallocated
CalDiagAccountSync
There should not be any active task groups at a state transition
There should not be any active tasks at a state transition
MobileCalDAVAccountRefreshActor tried to transition out of the finished state. What does that even mean?
We were told to refresh, but we already started a refresh!
v16@?0@"<CalDAVCalendar>"8
v32@?0@"NSString"8@"CalDAVMove"16^B24
We should have only finished once
cancelled
complete
RefreshActorStateBeginningRefresh
RefreshActorStateRefreshingAccountProperties
RefreshActorStateRefreshingDelegateAccountProperties
RefreshActorStateRefreshingPrincipalProperties
RefreshActorStateSendingMoves
RefreshActorStateSyncingRegularCalendars
RefreshActorStateUploadAttachments
RefreshActorStateSyncingSpecialCalendars
RefreshActorStateFinished
master
TimeChanged
DateChanged
v32@?0@"REMCalDAVNotification"8Q16^B24
v16@?0@"REMMutableCalDAVNotification"8
MobileCalDAVNotificationCalendar.m
Woah buddy- we shouldn't be setting a schedule tag on a notification item!
notificationContext
__untitled_shared__
dtstart
time
date
ACTION
ATTACH
ATTENDEE
CALSCALE
CATEGORIES
CLASS
COMMENT
COMPLETED
CONTACT
CREATED
DESCRIPTION
DTEND
DTSTAMP
DTSTART
DURATION
EXDATE
EXRULE
FREEBUSY
LAST-MODIFIED
LOCATION
METHOD
ORGANIZER
PERCENT-COMPLETE
PRIORITY
PRODID
RDATE
RECURRENCE-ID
RELATED-TO
REPEAT
REQUEST-STATUS
RESOURCES
RRULE
SEQUENCE
STATUS
SUMMARY
TRANSP
TRIGGER
TZID
TZNAME
TZOFFSETFROM
TZOFFSETTO
TZURL
VERSION
SCOPE
MAXRESULTS
MAXRESULTSSIZE
QUERY
QUERYNAME
TARGET
X-CALENDARSERVER-MASK-UID
ALTREP
CUTYPE
DELEGATED-FROM
DELEGATED-TO
ENCODING
FMTTYPE
FBTYPE
LANGUAGE
MEMBER
PARTSTAT
SCHEDULE-STATUS
RANGE
RELATED
RELTYPE
ROLE
RSVP
SCHEDULE-FORCE-SEND
SENT-BY
VALUE
UNTIL
COUNT
INTERVAL
BYMONTH
BYWEEKNO
BYYEARDAY
BYMONTHDAY
BYDAY
BYHOUR
BYMINUTE
BYSECOND
BYSETPOS
WKST
X-APPLE-DROPBOX
X-WR-ATTENDEE
X-WR-LANG
X-WR-RELCALID
X-WR-CALNAME
X-WR-CALDESC
X-WR-CALTYPE
X-WR-EXPIRATION
X-WR-TIMEZONE
X-WR-TEMPLATE
X-WR-ICONINFO
X-WR-PARENT
X-WR-UNTIL
X-WR-COUNT
X-WR-INTERVAL
X-WR-BYMONTH
X-WR-BYWEEKNO
X-WR-BYYEARDAY
X-WR-BYMONTHDAY
X-WR-BYDAY
X-WR-BYHOUR
X-WR-BYMINUTE
X-WR-BYSECOND
X-WR-BYSETPOS
X-WR-WEEKSTART
X-WR-CACHEDENDDATE
X-WR-ITIPSTATUSML
X-WR-ITIPSTATUSATTENDEEML
X-WR-ITIPALREADYSENT
X-WR-RSVPNEEDED
X-WR-DONTSCHEDULE
X-CALENDARSERVER-ACCESS
X-WR-ALARMUID
X-WR-OCCTRIGGER
X-WR-OCCDATEID
X-WR-CANCELID
X-WR-INVITATIONID
X-APPLE-SORT-ORDER
X-APPLE-FILENAME
X-APPLE-AUTOARCHIVED
X-APPLE-ATTACHMENTID
X-APPLE-CALENDAR-COLOR
X-APPLE-AUTO-REFRESH
X-APPLE-IGNORE-ON-RESTORE
X-APPLE-NEEDS-REPLY
X-CALENDARSERVER-ATTENDEE-COMMENT
X-CALENDARSERVER-ATTENDEE-REF
X-CALENDARSERVER-DTSTAMP
X-CALENDARSERVER-PRIVATE-COMMENT
EMAIL
X-APPLE-NEEDS-SERVER-CONFIRMATION
X-APPLE-EWS-ITEMID
X-APPLE-EWS-PERMISSION
X-APPLE-CHANGEKEY
X-APPLE-SELF-INVITED
X-NUM-GUESTS
ItemBridgeOptions
CalDAVChangeEvent
CalDAVChangeTask
CalDAVChangeAlarm
CalDAVChangeAttendee
CalDAVChangeOrganizer
CalDAVChangeAttachment
CalDAVChangeRecurrence
%@ - (path: %@)
DACalDAViCalItem.m
You should be calling the calendar specific version of this call
_rem_reminderItem
_rem_reminderItem.objectID should not be nil when trying to populate dataPayload
Given reminder does not match with this item's _rem_reminderItem.objectID (itemID: %@, reminderID: %@)
INDIVIDUAL
GROUP
RESOURCE
ROOM
UNKNOWN
@"CoreDAVItem"12@?0i8
Unexpected parsing of calendar-user-address-set: %@
urn:uuid:
%@ <%@> (%@)
CalDAVCalendarServerUserItem+REMShareeConversion.m
list
remSharee
MobileCalDAVDelegateUserInfo   displayName: %@ allowWrite: %d, uid: %@, principalPath: %@
No main principal found in the account properties for "%@". Creating a new one.
Upgrading principal URL from %@
New principal URL is %@
Error saving daWasMigrated: %@
Adding %@calendar %p with url %@
Removing %@calendar %p at url %@
Removing calendar with url %@
MobileCalDAVAccount: Failed to fetch lists from account {%@}
MobileCalDAVAccount: Created calendar %@ from REM %@ with url %@ guid %@
MobileCalDAVAccount: Loaded calendar %p with URL %@ guid %@
Caught an exception while trying to get the calendars for account %@: %@
Setting CalDAV server version to '%@' (currently '%@')
Updating calendar store and saving account properties since CalDAV server version changed
Error saving CalendarHomeSyncToken: %{public}@
Error saving account properties: %{public}@
MobileCalDAVAccount: _rem_createAccountStore: Error from updateAccountWithAccountID: %{public}@, error: %{public}@
MobileCalDAVAccount: Done updateAccountWithAccountID: %{public}@, didAdd: %{public}@, didUpdate: %{public}@
MobileCalDAVAccount: Account missing. Calling _rem_createAccountStore now which is not quite a use case we expect for DA in remindd nowadays {accountID: %{public}@}
Couldn't update ReminderKit account because one doesn't exist in the database {accountID: %{public}@}
CalDAV.sync
Canceling MobileCalDAVAccount refresh for account "%@" (%{public}@)
CalDAV task manager has been shut down.
Principal %{public}@ is dirty
Principal %{public}@ was deleted.
Principals changed
Saving accounts to update push information from an upgrade
Saving accounts to update push information
The refresh actor says we should save accounts
==== CalDAV refresh completed successfully for "%@" (%{public}@)
CalDAV refresh finished for account "%@" (%{public}@): Total sync time: %0.2f seconds. Number of downloaded items: %lu
Some calendars failed to sync. Keeping the migration flag around so that we attempt a merge sync the next time
Clearing migrated flag on the calendar store
==== CalDAV refresh FAILED for "%@" (%{public}@): %@. [Error Domain:%{public}@ Code:%{public}@]
Not saving our account properties because the refresh was canceled.
Saving our account properties
Ignoring refresh request because we're already in the middle of a refresh
==== Beginning %@refresh for CalDAV account%@ "%@" (%@)
Our store has %lu items in it.
We're already refreshing or a refresh is pending, so we're going to ignore this refresh request.
Delegate with principalPath %@ was successfully added.
Delegate with principalPath %@ failed to add.
Delegate with principalPath %@ could not be saved.
Delegate with account ID %@ was successfully removed
Delegate with account ID %@ failed to be removed
Search task %p was cancelled
CalDAV search query %p returning results
An unknown task just finished. What just happened? %@
Refusing to send out search query because the server doesn't support searching
CalDAV search query "%@" (%p) enqueuing
Dropping search query %@ because it is not the right type
cancelling search query %@
_reallyCancelAllSearchQueries is complete. All search queries have been cancelled.
DiscoveryTaskGroup %@ got account info %@ with error %@
Autodiscover called on account %@, but that account does not have a host set and username does not seems to resemble email address. Ignoring autodiscovery request
Autodiscover called on account %@, but that account does not have a host. Ignoring autodiscovery request
account %@ is checking validity with group %@ on behalf of %@
Dropping power assertion release for %@ since the retain count isn't positive
Principal configuration UID (%{public}@) doesn't match provided UID (%{public}@). Using the provided UID.
Change Tracking Helper - creating one for {principal=%@, account=%@}
Change Tracking Helper - marking consumed and clearing Change Tracking helper for {principal=%@, account=%@}
prepareCalendarsForSync - prepare calendars for sync with guid-calendar-map: %{public}@
prepareCalendarsForSync - ADDED ReminderKit calendars: %{public}@
prepareCalendarsForSync - Couldn't get a cached calendar of added calendar %{public}@ {guid: %{public}@}
prepareCalendarsForSync - UPDATED ReminderKit calendars: %{public}@
prepareCalendarsForSync - Couldn't get a cached calendar of modified calendar {guid: %{public}@}
prepareCalendarsForSync - DELETED ReminderKit calendars: %{public}@
prepareCalendarsForSync - Couldn't obtain a URL of deleted calendar {externalID: %{public}@}
RDDataacess doesn't care about inbox calendar (yet) {url: %@}
RDDataacess doesn't care about subscribed calendar (yet) {url: %@}
TODO - Notification calendar being created here is only a barebone implementation {url: %@}
Asked to create a calendar of a type we don't know about: %d
Marking principal as dirty: %@
Deleting calendar with guid %{public}@ or extID %@
MobileCalDAVCalendar: ERROR: Failed to save delete of list {listID: %{public}@, guid: %{public}@, extID: %@, error: %{public}@}
MobileCalDAVCalendar: SUCCESS: Deleted list of calendar URL: %@ {objectID=%{public}@}
MobileCalDAVCalendar: Couldn't find the backing list of the calendar to delete {guid %{public}@, extID %@}.
Marking calendar "%@" as dirty.
MobileCalDAVCalendar: Set URL on calendar (guid=%{public}@, listID=%{public}@)
MobileCalDAVCalendar: Could not find the backing REM list to set a URL on calendar (calendar=%{public}@)
Found a list that should indeed be a subscribed calendar due to 50659315 {guid: %{public}@, url: %@, listID: %{public}@}
ERROR: Failed to save delete of list {listID: %{public}@, guid: %{public}@, extID: %@, error: %{public}@}
The unexpected subscribed calendar list is now deleted and marked as event calendar: {url: %@, objectID: %{public}@}
Empty calendar title receieved. Setting calendar title to %@. Calendar URL: %@
MobileCalDAVCalendar: LOOKATME: No .notes to set in REMList for now {setvalue=%@, calendar=%@, stack=%@}
MobileCalDAVCalendar: LOOKATME: Verifying color format being set to REM: %@, rawValue:%@, remValue: %@, calendar: %@.
MobileCalDAVCalendar: LOOKATME: Verifying symbolic color name being set to REM: %@, rawValue: %@, remValue: %@, calendar: %@.
MobileCalDAVCalendar: LOOKATME: REMList has no sharing (calenderFlags::canBePublished) to set yet {setvalue=%d, stack=%@}
MobileCalDAVCalendar: LOOKATME: REMList has no sharing (calenderFlags::canBeShared) to set yet {setvalue=%d, stack=%@}
MobileCalDAVCalendar: LOOKATME: REMList has no (calenderFlags::isFamilyCalendar) to set yet {setvalue=%d, stack=%@}
MobileCalDAVCalendar: LOOKATME: REMList has no (calenderFlags::isMarkedUndeletable) to set yet {setvalue=%d, stack=%@}
MobileCalDAVCalendar: LOOKATME: REMList has no (calenderFlags::isMarkedImmutableSharees) to set yet {setvalue=%d, stack=%@}
MobileCalDAVCalendar: LOOKATME: REMList has no (isPublished) to set yet {setvalue=%d, stack=%@}
MobileCalDAVCalendar: LOOKATME: REMList has no (publishURL) to set yet {setvalue=%@, stack=%@}
MobileCalDAVCalendar: ERROR: Invalid REMListSharingStatus value: %{public}@ (calendar: %{public}@)
MobileCalDAVCalendar: Updating sharee %@ to calendar "%@"
MobileCalDAVCalendar: Removing sharee %@ from calendar "%@" 
MobileCalDAVCalendar: Adding sharee %@ to calendar "%@"
MobileCalDAVCalendar: Setting new .sharees to REMList (%@, calendar=%{public}@).
MobileCalDAVCalendar: Failed to save changes to sharees to calendar {calendar=%{public}@, error=%{public}@}.
MobileCalDAVCalendar: Couldn't get a REM list for calendar %{public}@
MobileCalDAVCalendar: ERROR: Couldn't fetch all reminders for calendar %{public}@, listID: %{public}@
allItemURLs: Probably in merge-sync {wasMigrated=%{public}@, cal=%{public}@, urls=%@}
MobileCalDAVCalendar: ERROR: Could not find a REM list that matched %{public}@
MobileCalDAVCalendar: Reminder does not exist when trying to set externalModificationTag {url: %@, list: %{public}@}.
MobileCalDAVCalendar: ERROR: Could not fetch reminders in lists to get externalModificationTag {list: %{public}@, error: %{public}@}.
MobileCalDAVCalendar: ERROR: Try to get reminder with nil uniqueIdentifier {calendar: %{public}@, stack: %@}.
MobileCalDAVCalendar: ERROR: Failed to fetch reminder with UUID: %{public}@, list: %{public}@, error: %{public}@
MobileCalDAVCalendar: Could not find a reminder with UUID: %{public}@, list: %{public}@
MobileCalDAVCalendar: ERROR: Try to get reminder with nil externalID {calendar: %{public}@, stack: %@}.
MobileCalDAVCalendar: Calendar has no backing REM list when trying to fetch reminder with externalID {calendar: %{public}@, reminder.externalID: %@}.
MobileCalDAVCalendar: Could not find a reminder with externalID {calendar: %{public}@, reminder.externalID: %@}.
MobileCalDAVCalendar: ERROR: Could not fetch reminder with externalID {calendar: %{public}@, reminder.externalID: %@, error: %{public}@}.
MobileCalDAVCalendar: ERROR: Could not find a calendar that matched %{public}@
MobileCalDAVCalendar: ERROR: Could not set url to reminder: %{public}@ %@
MobileCalDAVCalendar: Couldn't set url for reminder %{public}@ because it doesn't exist in our ReminderKit database {calendar: %{public}@}.
MobileCalDAVCalendar: ERROR: Could not set etag to reminder: %{public}@ %@
MobileCalDAVCalendar: Couldn't set etag for the reminder at %@ because it doesn't exist in our ReminderKit database {calendar: %{public}@}.
XXXXXXXXXX: Do we really need setScheduleTag for reminders? {tag: %@, url: %@, stack: %@}
MobileCalDAVCalendar: Nil or empty resources param for updateResourcesFromServer %{public}@
resourceCount=%{public, signpost.telemetry:number1, Name=Count}ld
MobileCalDAVCalendar: Could not find a list that matched to updateResourcesFromServer %{public}@
Dropping server change for %@ on the floor because we have a move change for it
The event at %@ was modified locally. Forcing it to the server.
Saved resource from %@ to the database. Etag is %{public}@
Failed to save batchSaveRequest {error: %{public}@}
CalDav.updateBatch
MobileCalDAVCalendar: ERROR: Failed to save delete of reminder {reminder: %{public}@, calendar: %{public}@, error: %{public}@}.
MobileCalDAVCalendar: Couldn't remove reminder at %@ because it doesn't exist in our ReminderKit database {calendar: %{public}@}.
MobileCalDAVCalendar: ERROR: LOOKATME: Unexpected call -hasEvents {stack=%@}.
MobileCalDAVCalendar: ERROR: LOOKATME: Unexpected call -isHidden {stack=%@}.
MobileCalDAVCalendar: ERROR: LOOKATME: Unexpected call -displayColor {stack=%@}.
MobileCalDAVCalendar: ERROR: Could not get an account. Cowardly refusing to create a calendar with UID %{public}@. Error: %{public}@.
MobileCalDAVCalendar: SUCCESS: Created list %{public}@ for %@.
MobileCalDAVCalendar: ERROR: Failed to create list for calendar: %@.
Could not obtain a calendar ref for {guid: %{public}@, url: %@}.
MobileCalDAVCalendar: ERROR: LOOKATME: Readonly calendars is not supported by DA in remindd. Check why principal is not writable. {url: %@, stack: %@}
MobileCalDAVCalendar: ******Creating calendar with url %@ %@
MobileCalDAVCalendar: Merged calendar titled %@ with calDAV
Couldn't get an REMStore ref. This isn't the time to create a calendar
MobileCalDAVCalendar: Found a cached list object ID (%{public}@) for url %@
ERROR: MobileCalDAVCalendar: Could not fetch list with object ID %{public}@. Url: %@. Error: %{public}@, Stack Trace: %@.
MobileCalDAVCalendar: Could not find a list with object ID %{public}@. Url: %@, Stack Trace: %@.
ERROR: MobileCalDAVCalendar: Could not get account %{public}@. Error: %{public}@, Stack Trace: %@.
MobileCalDAVCalendar: Couldn't find the backing REM list of calendar with url %@, Stack Trace: %@.
MobileCalDAVCalendar: SUCCESS: Got the backing REM list of calendar with url %@ {objectID=%{public}@}.
Couldn't find calendar with url %@.
MobileCalDAVCalendar: CalDAV principal.account is not a MobileCalDAVAccount: %@
MobileCalDAVCalendar: Cannot get ReminderKit account from principle.account: %@
MobileCalDAVCalendar: Failed to fetch all lists for migrated account: {remAccount: %{public}@, daAccount: %@}
%lu added calendars found
%lu modified calendars found
MobileCalDAVCalendar: ERROR: Could not find a REM list with that matched %{public}@
MobileCalDAVCalendar: ERROR: Could not fetch reminders from list %{public}@ with that matched %{public}@, error: %{public}@.
MobileCalDAVCalendar: Collected a DELETED ReminderKit reminder change in calendar {externalID: %@, calendar: %{public}@}
Clearing event changes
MobileCalDAVCalendar: Couldn't find the REM list of this calendar when adding changed reminder {calendar: %{public}@, reminder: %{public}@}.
MobileCalDAVCalendar: Collected an INSERTED or MODIFIED ReminderKit reminder change in calendar: {reminder: %{public}@, calendar: %{public}@}.
MobileCalDAVCalendar: ERROR: Got a nil changed reminder in calendar %{public}@.
MobileCalDAVCalendar: Created server ID for {reminderID: %{public}@, url: %@, calendar: %{public}@}
MobileCalDAVCalendar: Added actions for item {actionType: %{public}@, reminderID: %{public}@, url: %@, calendar: %{public}@}
Couldn't find a reminder for an added reminder: %@
MobileCalDAVCalendar: ERROR: Batch save pending send reminders failed: (error: %{public}@, batch: %@)
MobileCalDAVCalendar: Batch saved pending send reminders successfully: (batchSize: %{public}@)
MobileCalDAVCalendar: ERROR: Refetch updated pending send reminders failed: (error: %{public}@, batch: %@)
MobileCalDAVCalendar: ERROR: Refetched reminders count doesn't match with reminders count updated: (updated: %@, refetched: %@)
MobileCalDAVCalendar: Updated reminder reference in DACalDAViCalItem: (reminderID: %{public}@, serverID: %@)
Encountered error %{public}@ when putting item to %@
Received a 409 conflict for the event at %@. Creating a new UUID and trying again.
MobileCalDAVCalendar: LOOKATME: Couldn't get a REM reminder item to set UUID in this case of CoreDAVHTTPStatusCode_Conflict {iCalItem: %@, calendar: %@}.
Marking calendar as dirty because we just received a 409 conflict error
Put of item at %@ succeeded without error
Encountered error %{public}@ when deleting item from %@
Delete of item at %@ succeeded without error
_collectShareeActions > _addShareeWithObjectID: Collected ADDed/UPDATEd sharee and found record to add {list: %{public}@, shareeID: %{public}@}
_collectShareeActions > _addShareeWithObjectID: Sharee not found in {list: %{public}@, shareeID: %{public}@}
MobileCalDAVCalendar: _collectShareeActions: Calendar has no backing REM list when trying to collect sharee actions {list: %{public}@}.
MobileCalDAVCalendar: _collectShareeActions: LOOKATME: Unexpectedly got UPDATEs on REMSharee, sharees are supposed to be immutable value types in REM!
MobileCalDAVCalendar: _collectShareeActions: Collecting added and modified sharees {list: %{public}@, addedIds: %{public}@, modifiedIds: %{public}@, deletedKeys: %{public}@}.
_collectShareeActions: deletionKey is not for this list {list: %{public}@, sharee.owningListIdentifier: %{public}@, shareeID: %{public}@}
_collectShareeActions: Collected DELETEd sharee for this list {list: %{public}@, shareeID: %{public}@}.
_collectShareeActions: ERROR: The sharee tombstone has no object identifier, faking a uuid for it {list: %{public}@, shareeTombstone: %{public}@}
_collectShareeActions: ERROR: Couldn't get a URL for the deleted sharee, so we're going to skip it {list: %{public}@, shareeTombstone: %{public}@}
MobileCalDAVCalendar: _collectShareeActions: LOOKATME: Found duplicated objectIDs in deletes vs addsAndMods, this is unexpected as the change tracking should have consolidated them {calendar: %{public}@, duplicates: %{public}@}
MobileCalDAVCalendar: Collected %lu deleted reminders from REM change tracking {modified: %@}.
Sending up a delete for the item at URL %@
Couldn't get a URL for the delete of "%@"
Found %lu deleted items
MobileCalDAVCalendar: Collected %lu added reminders from REM change tracking {added: %@}.
Found %lu added items
MobileCalDAVCalendar: Collected %lu modified reminders from REM change tracking {modified: %@}.
Found %lu modified items
MobileCalDAVCalendar: [ForcedRefreshSyncForTruncatedHistory]: Force a 'refresh sync' as change history was truncated or error, let's try hard to upload local reminders changes... {account: %@, calendar: %@}
MobileCalDAVCalendar: [ForcedRefreshSyncForTruncatedHistory]: Gathered DA item with nil REMReminder is not quite expected (remID: %{public}@, serverID: %@)
MobileCalDAVCalendar: [ForcedRefreshSyncForTruncatedHistory]: Found (%{public}@) in this batch which exists on the server at %@
MobileCalDAVCalendar: [ForcedRefreshSyncForTruncatedHistory]: Found (%{public}@) in this batch which does not exist on the server
MobileCalDAVCalendar: [ForcedRefreshSyncForTruncatedHistory]: Found %lu ADDs reminders in this batch for our force refresh sync
MobileCalDAVCalendar: [ForcedRefreshSyncForTruncatedHistory]: Found %lu MODs reminders in this batch for our force refresh sync
Preparing merge sync actions...
prepareMergeSyncActions: Gathered DA item with nil REMReminder is not quite expected (remID: %{public}@, serverID: %@)
prepareMergeSyncActions: Found %{public}@ in this batch which exists on the server at %@
prepareMergeSyncActions: Found %{public}@ in this batch which does not exist on the server
prepareMergeSyncActions: Found %lu adds in this batch for our merge sync
prepareMergeSyncActions: Found %lu mods in this batch for our merge sync
MobileCalDAVCalendar: ChangedKeys is empty, no effective changes to this list change item, skipping -save {listOD: %{public}@}.
MobileCalDAVCalendar: ERROR: Failed to set REMList properties {changedKeys=%{public}@, GUID=%{public}@, listID=%{public}@, url=%@, error=%{public}@, stack=%@}
MobileCalDAVCalendar: Couldn't find an REMList to set property {calendar: %{public}@, stack: %@}.
Couldn't get an REMStore from %{public}@.
Couldn't get an REMSaveRequest from %{public}@.
Error when fetching account from ReminderKit %{public}@.
Could not find account from ReminderKit %{public}@.
MobileCalDAVAccountRefreshActor: DATransaction starting, ID: %@
Refresh actor starting up. (forced: %s)
CalDAV actor was told to cancel
There weren't any outstanding tasks, so we're going to call our cancel completion block now.
Refresh actor tearing down...
Checking if we should continue before transitioning from state %d
Ignoring calendar refresh task because we have no password.
Bailing out of refresh because we were told to cancel
Encountered an error while refreshing. Bailing out of the refresh. The error was %@
Waiting to make state transition from state %@ with %lu outstanding task groups and %lu outstanding tasks
Refresh actor changed state {%@ -> %@}
%@ refreshPrincipalOnly : begin
%@ refreshCalendarsOnly : begin
Refreshing properties for account with CoreDAV
Error refreshing properties for principal: %@
Properties were refreshed for principal "%@" on account "%@"
Getting delegates for account with CoreDAV
%@: This server does not support delegates.
Delegates were refreshed for account "%@"
Scheduling calendar refresh operation
CalDAV FinishRefresh
Error refreshing calendar properties for account: %@
Calendars properties were refreshed for account "%@"
Calendar properties were updated. Saving the database [not actually calling save nowadays as we moved to REM DB]
Preparing sync actions for calendar "%@"
Calendar "%@" has local changes and needs to be synced
LOOKATME: Principal is not MobileCalDAVPrincipal, we can't get REM change tracking helper {principal: %@}.
Calendars to refresh in this sync are: %@
Error moving event from %@ to %@: %@
New etag from move task is %@
XXXXXXXXX: ERROR: LOOKATME: RDDataAccess doesn't support MOVE yet!
Skipping refresh of inbox because this server doesn't support automatic scheduling
Syncing calendars: %@
Starting a calendar sync for "%@"
Error refreshing the calendar at %@: %@
Hit a precondition error while performing a bulk upload of events. Attempting a resync of the calendar
Hit a precondition error on our second bulk upload attempt. Waiting a bit before retrying again
We've backed off for too long. We're just giving up for now.
Calendar "%@" requested a resync, so we're going to sync it again
Calendar collections were refreshed for account "%@"
XXXXXXXXX: This version of remindd.DataAccess does NOT support cleaning out-of-filter-range items yet {startDate: %@}.
Error clearing calendar changes for "%@"
CalDAV refresh task failed with error %@
Refresh actor %s. Invoking result callback
Dispatching result callback on the main queue...
Result sent to actor. No cancellation completion block was set, so we're done here.
CalDAVNotificationCalendar: Initializing a notif calendar for {url: %@, list: %{public}@, account: %@}.
CalDAVNotificationCalendar: Failed to set this notification calendar list as daIsNotificationsCollection=YES, bailing (url: %@, error: %{public}@).
CalDAVNotificationCalendar: Could not find an REMList for the notification calendar (%@, account: %@)
CalDAVNotificationCalendar: Could not find a calendar of this notification calendar to perform -etagsForItemURLs: (%@, account: %@)
CalDAVNotificationCalendar: Could not find a calendar of this notification calendar to perform -setEtag:forItemAtURL: (%@, account: %@)
CalDAVNotificationCalendar: Setting etag (%{public}@) for item at {url: %@, account: %@}.
CalDAVNotificationCalendar: Couldn't set etag for the item at %@ because it doesn't exist in our database for account %@
CalDAVNotificationCalendar: Could not find a calendar of this notification calendar to perform -setURL:forResourceWithUUID: (%@, account: %@)
CalDAVNotificationCalendar: Setting url (%@) for item with {uuid: %{public}@, account: %@}.
CalDAVNotificationCalendar: Couldn't set url for the item %{public}@ because it doesn't exist in our database for account %@
CalDAVNotificationCalendar: Could not find a REMList of this notification calendar to perform -updateResourcesFromServer: (%@, account: %@)
CalDAVNotificationCalendar: Could not find a calendar of this notification calendar to perform -removeCalendarItemWithURL: (%@, account: %@)
CalDAVNotificationCalendar: Removing notification item with url %@ {account: %@}
CalDAVNotificationCalendar: ERROR: Failed to fetch invitation REMList with url %@ when trying to -_removeCalendarItemWithURL: {notifItem: %@, account: %@}
CalDAVNotificationCalendar: Could not find the invitation REMList with url %@ when trying to -_removeCalendarItemWithURL: {notifItem: %@, account: %@}
CalDAVNotificationCalendar: _removeCalendarItemWithURL: Now removing the invitation REMList with url %@ {listID: %{public}@, notifItem: %@, account: %@}
CalDAVNotificationCalendar: ERROR: Remove host REMList and notification item failed when trying to -_removeCalendarItemWithURL: {hostURL: %@, notifItem: %@, account: %@}
CalDAVNotificationCalendar: Successfully performed -_removeCalendarItemWithURL: to remove invitation REMList and notification item {hostURL: %@, notifItem: %@, account: %@}
CalDAVNotificationCalendar: Couldn't get the calendar notification item to remove with {url: %@, account: %@}
CalDAVNotificationCalendar: Clearing notification changes
CalDAVNotificationCalendar: Preparing sync actions for notification calendar {calendar: %@, account: %@}.
CalDAVNotificationCalendar: Collected DELETED notification items for for this notification calendar {calendar: %@, account: %@, extIDs: %@}.
CalDAVNotificationCalendar: Sending up a delete for the notification at URL %@
CalDAVNotificationCalendar: _handleInviteNotification: Could not get an REMList of this notification calendar to perform -_handleInviteNotification:withResource:uid: (cal: %@, account: %@)
CalDAVNotificationCalendar: _handleInviteNotification: Handling CalDAVCalendarServerInviteNotificationItem for {inviteStatus: %{public}@, extID: %@, uid: %{public}@, url: %@, account: %@}.
CalDAVNotificationCalendar: ERROR: _handleInviteNotification: Could not fetch list with url {url: %@, account: %@, error: %{public}@}.
CalDAVNotificationCalendar: LOOKATME: _handleInviteNotification: We don't have a hostURL for this invitation {uid: %{public}@, extID: %@, account: %@}
CalDAVNotificationCalendar: LOOKATME: _handleInviteNotification: The shared calendar should only be either VTODO or VEVENT {supportedComponentString: %{public}@, uid: %{public}@}.
CalDAVNotificationCalendar: _handleInviteNotification: Does not seems to be an invitation for VTODO/Reminders, so we stop handling this {uid: %{public}@, extID: %@, hostURL: %@, account: %@}.
CalDAVNotificationCalendar: SUCCESS: _handleInviteNotification: Created or updated shared invite-pending list {isCreate: %{public}@, hostURL: %@, objectID: %{public}@, account: %@}.
CalDAVNotificationCalendar: ERROR: _handleInviteNotification: Failed to create or updated shared list for {isCreate: %{public}@, hostURL: %@, account: %@, error: %{public}@}
CalDAVNotificationCalendar: ERROR: _handleInviteNotification: Failed to save delete of the shared invite-pending calendar {hostURL: %@, account: %@, error: %@}
CalDAVNotificationCalendar: SUCCESS:_handleInviteNotification: Deleted shared invite-pending calendar of {hostURL: %@, objectID: %{public}@, account: %@}
CalDAVNotificationCalendar: _handleInviteNotification: Failed to create and save notification object when -_handleInviteNotification:withResource:uid: {uid: %{public}@, extID: %@, cal: %@, account: %@}
CalDAVNotificationCalendar: _handleInviteNotification: Successfully added an REMCalDAVNotification (%{public}@) (inviteStatus: %{public}@, uid: %{public}@, account: %@).
CalDAVNotificationCalendar: _handleInviteNotification: Failed to fetch the invitation REMList object: {listID: %{public}@, extID: %@, account: %@}
CalDAVNotificationCalendar: _handleInviteReply: Received CalDAVCalendarServerInviteReplyItem for {replyString: %@, extID: %@, uid: %{public}@, calendar: %@, replyItem: %@}.
CalDAVNotificationCalendar: _handleInviteReply: Showing user notification for {extID: %@, acceptedURL: %@, address: %@}
CalDAVNotificationCalendar: _handleInviteReply: Failed to fetch the host REMList object: {extID: %@, account: %@}
CalDAVNotificationCalendar: LOOKATME! (Should this be Events only?!)LOOKATME! (Should this be Events only?!) Handling CalDAVCalendarServerResourceChangedItem for {extID: %@, uid: %{public}@, calendar: %@}.
CalDAVNotificationCalendar: LOOKATME! CalDAVCalendarServerResourceChangedItem {uid: %{public}@, createdItem: %@}.
CalDAVNotificationCalendar: LOOKATME! CalDAVCalendarServerResourceChangedItem {uid: %{public}@, updatedItem: %@}.
CalDAVNotificationCalendar: LOOKATME! CalDAVCalendarServerResourceChangedItem {uid: %{public}@, deletedItem: %@}.
CalDAVNotificationCalendar: LOOKATME! CalDAVCalendarServerResourceChangedItem {uid: %{public}@, collectionChanges: %@}.
CalDAVNotificationCalendar: LOOKATME! CalDAVCalendarServerResourceChangedItem {uid: %{public}@, collectionUpdates: %@}.
DACalDAViCalItem: LOOKATME: We should have set the reminder GUID upfront to batch with other properties changes in -[MobileCalDAVCalendar _createActionsForItems:withActions:...] when we discover it, and not doing this ad-hoc lazily which is bad in performance. Review if we have a missed case. {reminderID: %{public}@, callstack: %@}
DACalDAViCalItem: LOOKATME: Trying to get uniqueIdentifier from a DAViCalItem with neither reminder/cal DB item {iCalItem: %@, stack: %@}
DACalDAViCalItem: Do we really need get -scheduleTag for reminders? {remItem: %{public}@, stack: %@}
DACalDAViCalItem: Do we really need -setScheduleTag for reminders? {remItem: %{public}@, scheduleTag: %@, stack: %@}
DACalDAViCalItem: Couldn't get an REMStore from %{public}@.
ERROR: mobileCalendar object is not an instance of MobileCalDAVAccount: %{public}@
k_REM_CalCalendarMergeFields: trying to match local reminder {uid: %{public}@, cache.count: %{public}@, calendar: %{public}@}
k_REM_CalCalendarMergeFields: mobileCalendar.rem_cachedFetchedRemindersForMergeSync is unexpectedly nil {calendar: %{public}@}
k_REM_CalCalendarMergeFields: ERROR: Couldn't fetch all reminders for {guid: %{public}@, listID: %{public}@, error: %{public}@}
k_REM_CalCalendarMergeFields: Considering candidate title {candidate: %{public}@, uid: %{public}@}
k_REM_CalCalendarMergeFields: Considering candidate due {candidate: %{public}@, uid: %{public}@, candidate.due: '%@', ics.due: '%@', candidate.timezone: %@, ics.timezone: %@}
k_REM_CalCalendarMergeFields: Found identity match of reminder {uid: %{public}@, reminder:%{public}@, list: %{public}@}
k_REM_CalCalendarMergeFields: Comparing if local reminder is more recent {localLastMod: %@, remoteLastMod: %@, uid: %{public}@, reminder:%{public}@}
k_REM_CalCalendarMergeFields: Local reminder is more recent. Refusing to update the reminder. {uid: %{public}@, reminder:%{public}@}
Couldn't find a task with UID %{public}@ in the reminders database. Creating a new one {reminder: %{public}@}.
Updating existing reminder with UID id %{public}@ from ICS {reminder: %{public}@}.
ERROR: Couldn't create a reminder change item for ICS with UID id %{public}@.
Adding or modifying todo with {guid: %{public}@, shouldMerge: %{public}@}
Could not create REMReminder for %@.
Could not create an ICSDocument from the data from the server: %{public}@. Data: %@
Processing component %@
The task %{public}@ will be synced. ICSTodos are synced by default.
DACalDAViCalItem: LOOKATME: We should no longer support CalDB calendar as container for tasks {container: %@, todo.uid: %{public}@}.
Error adding or modifying todo with uid %{public}@
NULL component passed to processComponent:
CalDAV.updateSingleItem
DACalDAViCalItem: Exported ICS -dataPayload for the reminder {reminderID: %{public}@}
DACalDAViCalItem: ERROR: Couldn't create an ICS calendar for the reminder {reminderID: %{public}@}
DACalDAViCalItem: LOOKATME: We should avoid lazy populating dataPayload because that means we are probably fetching reminders one-by-one in a loop while they could have been fetching them in a batch instead for better performance {reminder: %{public}@, stack: %@}
DACalDAViCalItem: ERROR: Couldn't the reminder for this DA item to export payload {reminder: %{public}@}
DACalDAViCalItem: LOOKATME: We have a DACalDAViCalItem without either a backing REM or CalDB item: {iCalItem: %@, rem_clientID: %{public}@, account: %@} call stack: %@
DACalDAViCalItem: loadLocalItemWithAccount: Fetched reminder (%{public}@) times for DACalDAViCalItem instance (%p).
DACalDAViCalItem: ChangedKeys is empty, no effective changes to this reminder change item, skipping -save {reminderID: %{public}@}.
DACalDAViCalItem: ERROR: Save reminder %{public}@ property failed: %{public}@. (stack=%@)
DACalDAViCalItem: ERROR: Failed to set REMReminder properties {changedKeys=%{public}@, UID=%{public}@, reminderID=%{public}@, serverID=%@, error=%{public}@, stack=%@}
DACalDAViCalItem: Couldn't find an REMReminder to set property {serverID=%@, iCalItem=%@, error=%{public}@, stack=%@}.
MobileCalDAVAccount
MobileCalDAVPrincipal
CoreDAVAccountInfoProvider
NSObject
CoreDAVOAuthInfoProvider
CalDAVPrincipal
MobileCalUserAddress
MobileCalDAVCalendar
CalDAVCalendar
CalNSStringEmailAddressAdditions
DASearch
DACalDAVREMReminderProxy
DACalDAViCalItemUpdatableBackingModel
DACalDAViCalItemBackingModel
ReminderKitExtensions
REMDAAccountInfo
REMDAAccountProviding
CalDAVHTTPTrafficLog
MobileCalDAVAccountRefreshActor
CalDAVAccountPropertyRefreshDelegate
CoreDAVTaskGroupDelegate
CalDAVCalendarPropertyRefreshDelegate
CalDAVCalendarSyncDelegate
CalDAVAccountDelegatesRefreshDelegate
CalDAVRefreshContext
MobileCalDAVNotificationCalendar
DACalDAViCalItem
CoreDAVLeafDataPayload
DADataElement
CalDAVCalendarItemProtocol
CalDAVPrincipalResult
ShareeConversion
CalDAVMove
CalDAVAccountDelegatesRefreshOperation
MobileCalDAVDelegateUserInfo
CDVObjectForKeyCaseInsensitive:
APSEnv
T@"NSArray",R,N
APSTopic
T@"NSURL",&,N,V_calendarHomeURL
ICSDataWithOptions:
TB,N,V_shouldUpdatePushDelegate
T@"<CalDAVAccount>",R,N
Ti,N,V_preferredEventDaysToSync
T@"<CalDAVAccountDelegatesRefreshDelegate>",N,V_mdelegate
_appleIDSession
T@"<CalDAVPrincipal>",W,N
_itemID
T@"<DACalDAViCalItemBackingModel>",R,N,V_rem_reminderItem
_pushTransports
T@"CalDAVCalendarServerScheduleChangesItem",&,N
_refreshContext
T@"CalDAVPrincipalSearchPropertySet",&,N,V_searchPropertySet
_supportedCalendarComponentSets
T@"CalDAVRefreshContext",&,N,V_refreshContext
addChangeOfType:forChangeRowid:
T@"CalDAVUpdateOwnerItem",&,N
allKeys
T@"CalDAVUpdateOwnerItem",&,N,V_updatedBy
becameDefaultSchedulingCalendar
T@"CoreDAVDiscoveryTaskGroup",&,N,V_checkValidityTaskGroup
calendarHomeURL
T@"DACoreDAVLogger",&,N,V_curLogger
changes
T@"ICSDocument",&,N,V_document
containsObject:
T@"MobileCalDAVAccount",W,N,V_account
context
T@"MobileCalDAVPrincipal",&,N,V_mainPrincipal
coreDAVLogLevel
T@"NSArray",&,N,V_attachmentUUIDsToUpload
dateWithTimeInterval:sinceDate:
T@"NSArray",&,N,V_itemsToReportAsJunk
defaultTimeZone
T@"NSArray",&,N,V_syncActions
didSaveDatabase
T@"NSData",R,N
ekColor
T@"NSDictionary",&,N
exportICSCalendarFromReminders:
T@"NSDictionary",&,N,V_hrefsToModDeleteActions
hostURL
T@"NSDictionary",&,N,V_uuidsToAddActions
initWithFormat:
T@"NSError",&,N,V_error
isCalendarsOnly
T@"NSMutableArray",&,N,V_mCUAddresses
isExpandPropertyReportSupported
T@"NSMutableDictionary",&,N,V_URLToEtagMap
isProxy
T@"NSMutableDictionary",&,N,V_deletedCalendarItems
isTaskContainer
T@"NSMutableDictionary",&,N,V_pathsToCTags
lowercaseString
T@"NSMutableDictionary",&,N,V_principals
numberWithBool:
T@"NSMutableSet",&,N,V_addedCalendars
pushKey
T@"NSMutableSet",&,N,V_deletedCalendarURLs
release
T@"NSMutableSet",&,N,V_movedItemURLStrings
rem_calCalendar
T@"NSMutableSet",&,N,V_outstandingTasks
removeCalendar:
T@"NSNumber",&,N
responseHeaders
T@"NSSet",&,N
T@"NSSet",R,N
setCalendarURL:
T@"NSString",&,N,V_accountDescription
setCuAddresses:
T@"NSString",&,N,V_calendarHomePushKey
setDaIsNotificationsCollection:
T@"NSString",&,N,V_calendarURLString
setDataPayload:
T@"NSString",&,N,V_filename
setDisplayName:
T@"NSString",&,N,V_fullName
setMPrincipals:
T@"NSString",&,N,V_inboxCTag
setNeedsResync:
T@"NSString",&,N,V_notificationCollectionCTag
setShouldRetry:
T@"NSString",&,N,V_oldExternalID
setUid:
T@"NSString",&,N,V_preferredCalendarPhoneNumber
sharedOwnerName
T@"NSString",&,N,V_resultType
shouldUseCalendarHomeSyncReport
T@"NSString",&,N,V_syncKey
summary
T@"NSString",&,N,V_uniqueIdentifier
syncKey
T@"NSString",C,N,VdaCalendarItemUniqueIdentifier
updateDelegates
T@"NSString",R,C
updated
T@"NSTimeZone",&,N
T@"NSURL",&,N
.cxx_destruct
T@"NSArray",&,N,V_shareeActions
APSSubscriptionURL
T@"NSObject<OS_dispatch_group>",&,N,V_outstandingOperationGroup
CDVObjectForKeyWithNameSpace:andName:
TB,N,V_isForced
T#,R
Ti,N,V_changeID
T@"<CalDAVAccount>",W,N,V_account
_addedCalendars
T@"<CalDAVPrincipal>",R,N
_emailAddresses
T@"<CoreDAVTaskManager>",R,N
_preferredCalendarUserAddresses
T@"AKAppleIDSession",&,N,V_appleIDSession
_quotaFreeBytes
T@"CalDAVCalendarServerScheduleChangesItem",&,N,V_scheduleChanges
_refreshedSyncTokenForCalendar:
T@"CalDAVRefreshContext",&,N,V_context
account
T@"CalDAVServerVersion",&,N,V_serverVersion
address
T@"CalDAVUpdateOwnerItem",&,N,V_createdBy
arrayWithArray:
T@"CalDiagAccountSync",&,N,V_accountSyncDiagnostics
bundleForClass:
T@"DACoreDAVLogger",&,N,V_coreDAVLogger
cancelTaskGroup
T@"DACoreDAVTaskManager",R,N
completionBlock
T@"MobileCalDAVAccount",R,N
content
T@"MobileCalDAVAccountRefreshActor",&,N,V_actor
copyAddedItemsWithBatchHandler:
T@"MobileCalDAVPrincipal",R,N
created
T@"NSArray",&,N,V_emailAddresses
dealloc
T@"NSArray",&,N,V_rem_cachedFetchedRemindersForMergeSync
deleted
T@"NSData",&,N,V_dataPayload
T@"NSDateComponents",R,N
enabled
T@"NSDictionary",&,N,V_delegateUserInfos
fetchListIncludingSpecialContainerWithExternalIdentifier:error:
T@"NSDictionary",&,N,V_pushTransports
identityPersist
T@"NSDictionary",R,N
isCalDAVAccount
T@"NSMutableArray",&,N,V_calendarsToRefresh
isDirty
T@"NSMutableArray",&,N,V_mEmailAddresses
isPrincipalOnly
T@"NSMutableDictionary",&,N,V_calendarUserAddressesPerCalendar
isScheduleInbox
T@"NSMutableDictionary",&,N,V_itemIDsToMoveActions
localizedInvalidPasswordMessage
T@"NSMutableDictionary",&,N,V_pathsToSyncTokens
mEmailAddresses
T@"NSMutableDictionary",C,N
payloadAsString
T@"NSMutableSet",&,N,V_calendars
refresh
T@"NSMutableSet",&,N,V_modifiedCalendars
reloadCalendars
T@"NSMutableSet",&,N,V_outstandingTaskGroups
rem_saveRequest
T@"NSMutableSet",&,N,V_searchTaskSet
renewCredential
T@"NSNumber",&,N,V_quotaFreeBytes
scheduleChanges
T@"NSSet",&,N,V_preferredCalendarUserAddresses
setAlarmsDirty:
T@"NSString",&,N
setCanBeShared:
T@"NSString",&,N,V_accountID
setDaExternalIdentificationTag:
T@"NSString",&,N,V_calendarHomeSyncToken
setDaSyncToken:
T@"NSString",&,N,V_displayName
setDay:
T@"NSString",&,N,V_firstName
setIsPublished:
T@"NSString",&,N,V_guid
setNeedsAccountPropertyRefresh:
T@"NSString",&,N,V_lastName
setScheduleTag:
T@"NSString",&,N,V_notificationURLString
setSyncActions:
T@"NSString",&,N,V_preferredCalendarEmailAddress
setWasMigrated:
T@"NSString",&,N,V_principalPath
sharees
T@"NSString",&,N,V_supportedCalendarComponentSets
stringByAppendingPathExtension:
T@"NSString",&,N,V_uid
supportsSharing
T@"NSString",C,N
T@"NSString",C,N,VexternalModificationTag
updateReminder:
T@"NSString",R,N
uppercaseString
T@"NSTimeZone",R,N
userAgentHeader
T@"NSURL",&,N,V_defaultCalendarURL
T@"NSURL",&,N,V_dropBoxURL
T@"NSURL",&,N,V_inboxURL
T@"NSURL",&,N,V_legacy_principalURL
T@"NSURL",&,N,V_notificationCollectionURL
T@"NSURL",&,N,V_outboxURL
T@"NSURL",&,N,V_preferredCalendarUserAddress
T@"NSURL",&,N,V_serverID
T@"NSURL",C,N,V_address
T@"NSURL",R,N
T@"REMAccount",R,N
T@"REMList",&,N,V_rem_calCalendar
T@"REMObjectID",&,N,V_rem_accountObjectID
T@"REMObjectID",&,N,V_rem_clientID
T@"REMObjectID",&,N,VobjectID
T@"REMObjectID",R,N
T@?,C,N,V_completionBlock
TB,N
TB,N,V_allowWrite
TB,N,V_calendarFailedToSync
TB,N,V_calendarsAreDirty
TB,N,V_canCreateCalendars
TB,N,V_didDownloadEvents
TB,N,V_didFinish
TB,N,V_didResync
TB,N,V_didSaveDatabase
TB,N,V_isAffectingAvailability
TB,N,V_isCalendarsOnly
TB,N,V_isDelegate
TB,N,V_isDirty
TB,N,V_isEnabled
TB,N,V_isExpandPropertyReportSupported
TB,N,V_isMigrate
TB,N,V_isPrincipalOnly
TB,N,V_isRefreshing
TB,N,V_isScheduleOutbox
TB,N,V_isSpinning
TB,N,V_isWritable
TB,N,V_needsAccountPropertyRefresh
TB,N,V_needsPublishUpdate
TB,N,V_needsResync
TB,N,V_refreshing
TB,N,V_searchQueriesShouldCancel
TB,N,V_shouldCancel
TB,N,V_shouldRefreshPrincipalSearchProperties
TB,N,V_shouldRetry
TB,N,V_shouldSave
TB,N,V_shouldSaveAccounts
TB,N,V_statusChanged
TB,N,V_supportsCalendarUserSearch
TB,N,V_supportsFreebusy
TB,N,V_supportsPush
TB,N,V_supportsSyncToken
TB,N,V_wasDueToPush
TB,N,V_wasModifiedLocally
TB,N,V_wasUserRequested
TB,R,N
TQ,N,V_debugReminderFetchCount
TQ,N,V_localItems
TQ,N,V_numDownloadedElements
TQ,N,V_numUploadedElements
TQ,R
Td,N,V_startTime
Ti,N
Ti,N,V_itemID
Ti,N,V_mostRecentNotificationChangeIndex
Ti,N,V_preferredToDoDaysToSync
Ti,N,V_retryTime
Ti,N,V_sourceCalendarID
Ti,N,V_state
Tq,N
Tq,N,V_objectType
URLByAppendingPathComponent:
URLToEtagMap
URLWithString:
UUID
_URLToEtagMap
_account
_accountDescription
_accountID
_accountLoggingDescription
_accountSyncDiagnostics
_actor
_addChangedReminder:toArrayIfNeeded:
_addOrModifyTask:inICSCalendar:withList:shouldMergeProperties:outMergeDidChooseLocalProperties:inMobileCalendar:batchSaveRequest:
_addShareeWithObjectID:toDictionaryIfNeeded:
_address
_allowWrite
_attachmentUUIDsToUpload
_calendarCollectionsWereRefreshed
_calendarConstraintsPath
_calendarConstraintsResource
_calendarFailedToSync
_calendarHomePushKey
_calendarHomeSyncToken
_calendarHomeURL
_calendarURLString
_calendarUserAddressesPerCalendar
_calendars
_calendarsAreDirty
_calendarsToRefresh
_canCreateCalendars
_changeID
_changedAttributesFromCalendarChanges:
_checkValidityTaskGroup
_clearMoveChange:
_collectMoveActions
_collectShareeActions
_completionBlock
_context
_copyNotificationWithExternalID:
_copyNotificationWithUniqueIdentifier:
_coreDAVLogger
_createActionsForItems:withAction:backingReminders:alreadySentItems:createServerIDs:shouldSave:
_createdBy
_curLogger
_dataPayload
_debugReminderFetchCount
_defaultCalendarURL
_delegateUserInfos
_deletedCalendarItems
_deletedCalendarURLs
_didDownloadEvents
_didFinish
_didResync
_didSaveDatabase
_displayName
_document
_dropBoxURL
_error
_eventSyncEndDate
_filename
_firstName
_fixUpCalendarForServer:
_forceRefreshNextSync
_fullName
_guid
_handleInviteNotification:withResource:uid:
_handleInviteReply:withResource:owningNotification:uid:
_handleMoveTaskComplete:moveItem:
_handleResourceChanged:withResource:uid:
_hostForDiscovery
_hrefsToModDeleteActions
_inboxCTag
_inboxURL
_isAffectingAvailability
_isCalendarsOnly
_isDelegate
_isDirty
_isEnabled
_isExpandPropertyReportSupported
_isForced
_isMigrate
_isPrincipalOnly
_isRefreshing
_isScheduleOutbox
_isSpinning
_isWritable
_itemIDsToMoveActions
_itemsToReportAsJunk
_lastName
_legacy_principalURL
_localItems
_mCUAddresses
_mEmailAddresses
_mMovedItemURLStrings
_mainPrincipal
_mdelegate
_modifiedCalendars
_mostRecentNotificationChangeIndex
_movedItemURLStrings
_needsAccountPropertyRefresh
_needsPublishUpdate
_needsResync
_notificationCollectionCTag
_notificationCollectionURL
_notificationURLString
_notifications
_numDownloadedElements
_numUploadedElements
_objectType
_oldExternalID
_originatingChangeItems
_outboxURL
_outstandingOperationGroup
_outstandingTaskGroups
_outstandingTasks
_pathsToCTags
_pathsToSyncTokens
_powerAssertionContext
_powerAssertionGroupIdentifier
_preferredAddress
_preferredCalendarEmailAddress
_preferredCalendarPhoneNumber
_preferredCalendarUserAddress
_preferredEventDaysToSync
_preferredToDoDaysToSync
_prepareForcedRefreshSyncActionsForTruncatedHistoryWithTrackingState:completionBlock:
_principal
_principalPath
_principals
_reallyCancelAllSearchQueries
_reallyCancelSearchQuery:
_reallyPerformSearchQuery:
_reallySearchQueriesRunning
_refreshAccountProperties
_refreshCalendarProperties
_refreshDelegateAccountProperties
_refreshRegularCalendars
_refreshShouldContinue
_refreshSpecialCalendars
_refreshedCtagForCalendar:
_refreshing
_rem_accountObjectID
_rem_cachedFetchedRemindersForMergeSync
_rem_calCalendar
_rem_calURLToREMObjectIDCache
_rem_changeTracking
_rem_changedListsOfChangeType:withChangeTrackingHelper:inPrincipal:
_rem_clientID
_rem_copyReminderWithExternalID:
_rem_copyReminderWithUniqueIdentifier:inList:
_rem_createAccountStore_whichReallyShouldNotHappen
_rem_reminderItem
_rem_updateAccountProperties
_rem_updateCalendarOwnerInfo
_removeCalendarItemWithURL:
_resultType
_retryTime
_saveModifiedPrincipalsOnBackingAccount
_saveModifiedSubscribedCalendarsOnBackingAccount
_scheduleChanges
_scheduleTag
_searchPropertySet
_searchQueriesShouldCancel
_searchTaskSet
_sendMoveForItem:
_sendMoveTasks
_sendResultToAccount
_serverID
_serverVersion
_setSpinning:
_setSupportsEvents:supportsTodos:
_shareeActions
_shouldCancel
_shouldRefreshPrincipalSearchProperties
_shouldRetry
_shouldSave
_shouldSaveAccounts
_shouldUpdatePushDelegate
_sourceCalendarID
_startDateFromDaysToSync:
_startTime
_state
_statusChanged
_supportsCalendarUserSearch
_supportsFreebusy
_supportsPush
_supportsSyncToken
_syncActions
_syncCalendar:
_syncEndedWithError:
_syncKey
_syncStarted
_teardownAllOutstandingOperations
_transaction
_uid
_uniqueIdentifier
_updateCalendarStore:
_updateCalendarStoreNoDBOpen:
_updatedBy
_uploadAttachments
_userAddressSet:isEqualToSet:
_usernameForDiscovery
_uuidsToAddActions
_waitForStateTransition
_wasDueToPush
_wasMigrated
_wasModifiedLocally
_wasUserRequested
absoluteString
acceptedURL
access
accessLevel
account:isValid:validationError:
accountDescription
accountHasSignificantPropertyChangesFromOldAccountInfo:
accountID
accountIntPropertyForKey:
accountPropertyForKey:
accountSyncDiagnostics
accountType
accountTypeWithAccountTypeIdentifier:
accountWithIdentifier:
actor
addCUAddress:
addCalDAVNotificationWithUUIDString:hostURL:externalIdentifier:externalModificationTag:
addCalendar:
addEmail:
addListWithName:toAccountChangeItem:
addLogDelegate:forAccountInfoProvider:
addObject:
addObjectsFromArray:
addPrincipal:
addReminderWithTitle:toListChangeItem:
addSharee:
addToCoreDAVLoggingDelegates
addUsernameToURL:
addedCalendars
additionalHeaderValues
addressIsAccountOwner:
alarmsDirty
allItemURLs
allObjects
allValues
allowWrite
allowedCalendars:contains:
alwaysUseCalendarHomeSync
appSpecificCalendarItemClass
appleIDSession
array
arrayByAddingObjectsFromArray:
arrayWithObjects:
arrayWithObjects:count:
attachmentUUIDsToUpload
attendee
autorelease
backingAccountInfo
boolValue
bulkRequests
calDAVNotificationContext
calDAVNotifications
calDAVRemindersForAll
calDAVSharedListNotificationContentWithList:
calendar
calendarFailedToSync
calendarHomePushKey
calendarHomeSyncToken
calendarOfType:atURL:withOptions:
calendarRefreshForPrincipal:completedWithNewCTags:newSyncTokens:calendarHomeSyncToken:updatedCalendars:error:
calendarRefreshFoundDeletedContainerURL:
calendarRefreshFoundUpdatedContainerWithIgnoredEntityType:
calendarRefreshFoundUpdatedSpecialContainer:
calendarRefreshMkCalendarSucceededForPrincipal:calendar:
calendarRefreshPropPatchFinishedWithError:forCalendar:
calendarRefreshShouldRetryMkCalendarForPrincipal:calendar:error:
calendarRefreshWillRefreshCalendar:
calendarRefreshWillSendCalendarDeletes:
calendarSyncForPrincipal:calendar:completedWithError:
calendarURL
calendarURLString
calendarUserAddressIsEquivalentToURL:
calendarUserAddresses
calendarUserAddressesPerCalendar
calendarWithREMList:principal:
calendars
calendarsAreDirty
calendarsToRefresh
callStackSymbols
canBePublished
canBeShared
canCreateCalendars
canSaveAccount:withCompletionHandler:
cancelRefreshWithCompletion:
cancelTask:
cancelWithCompletion:
caseInsensitiveCompare:
cdvArrayWithIntegers:
changeID
changeSet
changedIdentifiersOfModelClass:ofChangeType:
changedKeys
changedModelObjectsOfModelClass:ofChangeType:
changedProperties
checkValidityTaskGroup
childAccounts
childrenOrder
class
clearCachedModelObjectResultsForModelClass:
clearCalendarChanges
clearEventChanges
clearShareeActions
clear_rem_changeTracking
clientCertificateInfoProvider
clientToken
clientTokenRequestedByServer
code
collectionChanges
collectionSetURL
collectionUpdates
color
commonName
compare:
compareAddressURL:localString:
componentForKey:
componentKeys
componentOccurrencesForKey:
components
components:fromDate:
componentsAsString
compressRequests
configuration
conformsToProtocol:
consumer
consumerForTask:
convertToDAContactSearchResultElement
copy
copyAllItemsWithBatchHandler:
copyDeletedItems
copyModifiedItemsWithBatchHandler:
copyStorageSession
coreDAVLogDiagnosticMessage:atLevel:
coreDAVLogTransmittedDataPartial:
coreDAVLogger
coreDAVOutputLevel
coreDAVTransmittedDataFinished
count
countByEnumeratingWithState:objects:count:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
createdBy
ctag
cuAddresses
curLogger
currentHandler
customConnectionProperties
daAccount
daAccountSubclassWithBackingAccountInfo:
daBulkRequests
daCalendarItemUniqueIdentifier
daDisplayOrder
daExternalIdentificationTag
daHexString
daIsEventOnlyContainer
daIsImmutable
daIsNotificationsCollection
daIsReadOnly
daPrincipal
daPushKey
daSupportsSharedCalendars
daSymbolicColorName
daSyncToken
daWasMigrated
da_absoluteURLForChildLeastInfoRepresentationRelativeToParentURL:
da_appendSlashIfNeeded
da_hasPrefixCaseInsensitive:
da_isEqualToDAVURL:
da_leastInfoStringRepresentationRelativeToParentURL:
da_newGUID
da_pathWithoutTrailingRemovingSlash
da_removeSlashIfNeeded
da_trimWhiteSpace
da_urlBySettingPath:
dataPayload
dataUsingEncoding:
date
dateByAddingComponents:toDate:options:
dateFromComponents:
debugDescription
debugReminderFetchCount
defaultAllDayAlarms
defaultCalendarURL
defaultCenter
defaultContext
defaultEventCalendarTitle
defaultManager
defaultTimedAlarms
defaultTodoCalendarTitle
delegateRefreshForPrincipal:completedWithError:
delegateUserInfos
deleteAction:completedWithError:
deleteCalendar
deleteFromContainer:
deleteResourcesAtURLs:
deletedCalendarItems
deletedCalendarURLs
description
destinationURL
dictionary
dictionaryRepresentation
dictionaryWithDictionary:
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:count:
didDownloadEvents
didFinish
didResync
discoverInitialPropertiesWithConsumer:
discoveryTask:gotAccountInfo:error:
displayAccount
displayColor
displayName
document
domain
dropAssertionsAndRenewCredentialsInQueue:withHandler:
dropBoxURL
dropPowerAssertions
dropPowerAssertionsForGroupIdentifier:
dueDateComponents
earlierDate:
emailAddress
emailAddresses
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
error
errorWithDomain:code:userInfo:
etagsForItemURLs:
eventFilterEndDate
eventFilterStartDate
externalIdentifier
externalModificationTag
fetchAccountWithExternalIdentifier:error:
fetchAndInitializeChangeTrackingStateIfNeeded
fetchChangesSinceLastConsumed
fetchListIncludingSpecialContainerWithObjectID:error:
fetchListWithObjectID:error:
fetchListsIncludingSpecialContainersWithError:
fetchListsWithError:
fetchReminderWithDACalendarItemUniqueIdentifier:inList:error:
fetchReminderWithExternalIdentifier:error:
fetchReminderWithObjectID:error:
fetchRemindersWithError:
fetchRemindersWithExternalIdentifiers:error:
fetchRemindersWithObjectIDs:error:
fileExistsAtPath:isDirectory:
filename
filenameWithBasename:
filenameWithUniqueIdentifier:
finishCoreDAVTaskGroupWithError:delegateCallbackBlock:
finishEarlyWithError:
finishSnippets
firstHref
firstName
flushCaches
fullName
getAppleIDSession
getCFRunLoop
guid
handleAuthenticateAgainstProtectionSpace:
handleCertificateError:
handleFailureInMethod:object:file:lineNumber:description:
handleShouldUseCredentialStorage
handleTrustChallenge:
handleTrustChallenge:completionHandler:
hasCalendarUserAddress:
hasCalendarUserAddressEquivalentToURL:
hasEvents
hasMailto
hasPrefix:
hash
host
hostFromEmail
href
hrefs
hrefsToModDeleteActions
identifier
inboxCTag
inboxURL
infoFromCalDAVDetails:allowWrite:
ingestBackingAccountInfoProperties
init
initShareeWithObjectID:accountID:listID:displayName:firstName:lastName:address:status:accessLevel:
initWithAccount:
initWithAccount:context:
initWithAccountID:remAccountObjectID:accountDescription:
initWithAccountInfoProvider:principalURL:taskManager:
initWithAccountInfoProvider:taskManager:httpPorts:httpsPorts:httpServiceString:httpsServiceString:wellKnownPaths:requiredComplianceClass:
initWithAccountType:
initWithAction:context:
initWithAddress:account:
initWithArray:
initWithBackingAccountInfo:
initWithCalendar:
initWithCalendarIdentifier:
initWithCalendarURL:list:principal:title:
initWithCalendarURL:principal:
initWithCalendarURL:principal:title:
initWithConfiguration:principalUID:account:
initWithDASymbolicColorName:daHexString:
initWithData:options:error:
initWithDomain:code:userInfo:
initWithFilename:
initWithFormat:arguments:
initWithHREF:commonName:inviteStatus:access:
initWithIdentifier:
initWithPrincipal:
initWithPrincipal:calendar:nextCtag:nextSyncToken:
initWithPrincipalPath:displayName:allowWrite:
initWithREMDAAccount:clientName:withREMStore:
initWithREMReminder:inContainer:
initWithREMSharee:
initWithReminder:
initWithResponse:
initWithRootElementNameSpace:name:parseClass:baseURL:
initWithSearchStrings:searchTypes:serverSupportSet:atURL:
initWithSourceCalendarID:itemID:oldExternalID:changeID:objectType:
initWithStringProperties:
initWithURL:eTag:dataPayload:inContainerWithURL:withAccountInfoProvider:
insertObject:atIndex:
instance
intValue
integerValue
intersectSet:
inviteStatus
isAffectingAvailability
isDelegate
isEditable
isEnabled
isEnabledForDataclass:
isEnabledForEvents
isEnabledForTodos
isEqual:
isEqualToAccount:
isEqualToDate:
isEqualToDictionary:
isEqualToNumber:
isEqualToString:
isEventContainer
isFamilyCalendar
isForced
isHidden
isKindOfClass:
isManagedByServer
isMarkedImmutableSharees
isMarkedUndeletable
isMemberOfClass:
isMergeSync
isMigrate
isNotification
isPoll
isPublished
isRefreshing
isRenameable
isScheduleOutbox
isSpinning
isSubscribed
isTruncated
isValidating
isWritable
isWritableFileAtPath:
itemID
itemIDsToMoveActions
itemsToReportAsJunk
lastConsumedDate
lastModifiedDate
lastName
lastPathComponent
lastSyncTitle
last_modified
legacy_principalURL
length
list
listID
loadLocalItemWithAccount:
localItems
localizedDescription
localizedIdenticalAccountFailureMessage
localizedStringForKey:value:table:
localizedStringWithFormat:
logData:
logSnippet:
logString:
logStringWithFormat:
loggingDescription
mCUAddresses
mCalendars
mItemIDsToMoveActions
mMovedItemURLStrings
mPrincipals
mainPrincipal
markChangesConsumed
maxAttendees
mdelegate
modifiedCalendars
mostRecentNotificationChangeIndex
movedItemURLStrings
multiStatus
mutableCopy
name
nameAttribute
namespaceAndNameForWellKnownType:
needsAccountPropertyRefresh
needsDefaultAllDayAlarmUpdate
needsDefaultTimedAlarmUpdate
needsIsAffectingAvailabilityUpdate
needsPublishUpdate
needsResync
newOAuth1CredentialForChallenge:
newObjectID
noteFailedNetworkRequest
noteFailedNetworkRequestForTask:
noteFailedProtocolRequest
noteFailedProtocolRequestForTask:
noteHomeSetOnDifferentHost:
noteSuccessfulRequestWithNumDownloadedElements:
noteSuccessfulRequestWithNumDownloadedElements:forTask:
noteSuccessfulRequestWithNumDownloadedElements:numUploadedElements:
noteTimeSpentInNetworking:
noteTimeSpentInNetworking:forTask:
notes
notificationCollectionCTag
notificationCollectionURL
notificationURLString
null
numDownloadedElements
numUploadedElements
numberWithDouble:
numberWithInt:
numberWithInteger:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedLong:
oauth2Token
oauthInfoProvider
oauthVariant
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
objectID
objectIDWithUUID:
objectIdentifier
objectType
oldExternalID
onBehalfOfBundleIdentifier
order
organizer
originatingChangeItems
outboxURL
outstandingOperationGroup
outstandingTaskGroups
outstandingTasks
overriddenPort
overriddenScheme
overriddenServer
owner
ownerDisplayName
ownerEmailAddress
ownerPhoneNumber
owningListIdentifier
packCalDAVUserAdress:
parentAccount
password
path
pathForResource:ofType:
pathsToCTags
pathsToSyncTokens
payloadAsFullURL
payloadAsOriginalURL
performDiscoveryWithHostname:username:consumer:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
persistentUUID
populateDataPayloadWithReminder:
port
postNotificationName:object:
powerAssertionRetainCount:
prePublishURL
preferred
preferredAddress:
preferredCUAddress
preferredCalendarEmailAddress
preferredCalendarPhoneNumber
preferredCalendarUserAddress
preferredCalendarUserAddresses
preferredCalendarUserAddressesForCalendar:
preferredEventDaysToSync
preferredToDoDaysToSync
preferredUserAddress
prepareCalendarsForSyncWithCompletionBlock:
prepareMergeSyncActionsWithCompletionBlock:
prepareSyncActionsWithCompletionBlock:
principal
principalPath
principalURL
principals
processData:forTask:
promptUserForNewCoreDAVPasswordWithCompletionBlock:
propertyRefreshForPrincipal:completedWithError:
propertyValue
publishURL
pushTransports
putAction:completedWithError:
quotaFreeBytes
rangeOfString:
rangeOfString:options:range:
readOnlyPrincipalDetails
readWritePrincipalDetails
reattainPowerAssertions
reattainPowerAssertionsForGroupIdentifier:
recordDiagnosticsForAccountSync:
recurrenceID
recurrenceSplitAction:completedWithUpdatedETag:updatedScheduleTag:createdURL:createdETag:createdScheduleTag:
recurrenceSplitAction:failedWithError:
recurrenceSplitActions
recurrenceSplitActionsCompletedWithError:
recurrences
refreshActor:didCompleteWithError:
refreshCalendarProperties
refreshContext
refreshDelegates
refreshProperties
refreshWithContext:
refreshing
registerDefaultLoggerWithCoreDAV
registerWithiCalendar
relativePath
releasePowerAssertion
releasePowerAssertion:
rem_account
rem_accountObjectID
rem_addedCalendarsWithChangeTrackingHelper:inPrincipal:
rem_cacheListObjectID:forCalendarURLString:
rem_cachedFetchedRemindersForMergeSync
rem_cachedListObjectIDForURLString:
rem_changeTracking
rem_changeTrackingBehaviors
rem_clearListObjectIDCache
rem_clientID
rem_dateAsUTC
rem_dateWithDateComponents:timeZone:
rem_deletedCalendarsWithChangeTrackingHelper:inPrincipal:
rem_getCalCalendar
rem_initCalCalendarWithTitle:
rem_invalidateCalCalendarWithReload:
rem_modifiedCalendarsWithChangeTrackingHelper:inPrincipal:
rem_notificationPresentingForDataAccess
rem_provideAccountInfo
rem_reloadCalCalendar
rem_reminderItem
rem_removeListObjectIDCacheEntryForCalendarURLString:
rem_saveRequestForDataAccess
rem_setListPropertiesWithBlock:error:
rem_setReminderPropertiesWithBlock:error:
rem_shareeForREMList:
rem_store
rem_storeForDataAccess
rem_storeProvider
rem_updatedREMShareeFromREMSharee:
rem_userNotificationPresentingProvider
removeAccount:withCompletionHandler:
removeAllObjects
removeAllSharees
removeCalDAVNotication:
removeCalendarWithURL:
removeConsumerForTask:
removeFromCoreDAVLoggingDelegates
removeFromList
removeFromParent
removeLogDelegate:forAccountInfoProvider:
removeObject:
removeObjectForKey:
removePrincipal:
removecalendarWithURL:
resemblesEmailAddress
resetStatusReport
resourceSpecifier
respondsToSelector:
responses
resultFromResponse:
resultType
resultTypeForRecordType:
retain
retainCount
retainPowerAssertion
retainPowerAssertion:withGroupIdentifier:
retryDiscoveryTask:
retryTime
rootElement
saveAccountProperties
saveModifiedPropertiesOnBackingAccount
saveServerIDToExistingItem
saveSynchronouslyWithError:
saveVerifiedAccount:withCompletionHandler:
saveWithLocalObject:toContainer:shouldMergeProperties:outMergeDidChooseLocalProperties:account:
saveWithLocalObject:toContainer:shouldMergeProperties:outMergeDidChooseLocalProperties:account:calendar:batchSaveRequest:
scheduleTag
scheme
searchContext
searchPropertySet
searchQueriesShouldCancel
searchQuery:finishedWithError:
searchQuery:returnedResults:
searchString
searchTaskSet
self
serverBaseURL
serverComplianceClasses
serverHeaders
serverID
serverRoot
serverVersion
setAccount:
setAccountDescription:
setAccountID:
setAccountInfoProvider:
setAccountIntProperty:forKey:
setAccountProperty:forKey:
setAccountSyncDiagnostics:
setActive:
setActor:
setAddedCalendars:
setAddress:
setAllowWrite:
setAppleIDSession:
setAttachmentUUIDsToUpload:
setAuthenticationType:
setBody:
setBulkRequests:
setByAddingObjectsFromArray:
setCalendarFailedToSync:
setCalendarHomePushKey:
setCalendarHomeSyncToken:
setCalendarHomeURL:
setCalendarURLString:
setCalendarUserAddressesPerCalendar:
setCalendarsAreDirty:
setCalendarsToRefresh:
setCanBePublished:
setCanCreateCalendars:
setChangeID:
setCheckValidityTaskGroup:
setCollectionSetURL:
setColor:
setCompletionBlock:
setConsumer:forTask:
setContext:
setCoreDAVLogger:
setCreatedBy:
setCtag:
setCurLogger:
setDaAllowsCalendarAddDeleteModify:
setDaBulkRequests:
setDaCalendarItemUniqueIdentifier:
setDaConstraintsDescriptionPath:
setDaDisplayOrder:
setDaIsEventOnlyContainer:
setDaIsImmutable:
setDaIsReadOnly:
setDaPushKey:
setDaSupportsSharedCalendars:
setDaWasMigrated:
setDebugReminderFetchCount:
setDefaultAllDayAlarms:
setDefaultCalendarURL:
setDefaultTimedAlarms:
setDelegate:
setDelegateUserInfos:
setDeletedCalendarItems:
setDeletedCalendarURLs:
setDestinationURL:
setDidDownloadEvents:
setDidFinish:
setDidResync:
setDidSaveDatabase:
setDocument:
setDropBoxURL:
setEmailAddress:
setEmailAddresses:
setError:
setEtag:forItemAtURL:
setEtag:forItemAtURL:reminderChangeItem:
setExternalIdentifier:
setExternalModificationTag:
setFetchPrincipalSearchProperties:
setFilename:
setFirstName:
setFullName:
setGuid:
setHost:
setHrefsToModDeleteActions:
setIdentifierOnServer:
setInboxCTag:
setInboxURL:
setIsAffectingAvailability:
setIsCalendarsOnly:
setIsDelegate:
setIsDirty:
setIsEditable:
setIsEnabled:
setIsEventContainer:
setIsExpandPropertyReportSupported:
setIsFamilyCalendar:
setIsForced:
setIsManagedByServer:
setIsMarkedImmutableSharees:
setIsMarkedUndeletable:
setIsMigrate:
setIsNotification:
setIsPoll:
setIsPrincipalOnly:
setIsRefreshing:
setIsRenameable:
setIsScheduleInbox:
setIsScheduleOutbox:
setIsSpinning:
setIsSubscribed:
setIsTaskContainer:
setIsWritable:
setItemID:
setItemsToReportAsJunk:
setLastName:
setLastSyncTitle:
setLegacy_principalURL:
setLocalItems:
setMCUAddresses:
setMCalendars:
setMEmailAddresses:
setMItemIDsToMoveActions:
setMMovedItemURLStrings:
setMainPrincipal:
setMaxAttendees:
setMdelegate:
setModifiedCalendars:
setMostRecentNotificationChangeIndex:
setName:
setNeedsDefaultAllDayAlarmUpdate:
setNeedsDefaultTimedAlarmUpdate:
setNeedsPublishUpdate:
setNotes:
setNotificationCollectionCTag:
setNotificationCollectionURL:
setNotificationURLString:
setNumDownloadedElements:
setNumUploadedElements:
setObject:forKey:
setObject:forKeyedSubscript:
setObjectID:
setObjectType:
setOldExternalID:
setOrder:
setOriginatingChangeItems:
setOutboxURL:
setOutstandingOperationGroup:
setOutstandingTaskGroups:
setOutstandingTasks:
setOverriddenPort:
setOverriddenScheme:
setOverriddenServer:
setOwner:
setOwnerDisplayName:
setParentAccount:
setPathsToCTags:
setPathsToSyncTokens:
setPort:
setPrePublishURL:
setPreferredCalendarEmailAddress:
setPreferredCalendarPhoneNumber:
setPreferredCalendarUserAddress:
setPreferredCalendarUserAddresses:
setPreferredCalendarUserAddresses:forCalendar:
setPreferredEventDaysToSync:
setPreferredToDoDaysToSync:
setPreferredUserAddress:
setPrincipal:
setPrincipalPath:
setPrincipalURL:
setProdid:
setPublishURL:
setPushKey:
setPushTransports:
setQuotaFreeBytes:
setRefreshContext:
setRefreshing:
setRem_LocalItem:
setRem_accountObjectID:
setRem_cachedFetchedRemindersForMergeSync:
setRem_calCalendar:
setRem_clientID:
setResultType:
setRetryTime:
setScheduleChanges:
setScheduleTag:forItemAtURL:
setScheduleagent:
setSearchContext:
setSearchPropertySet:
setSearchQueriesShouldCancel:
setSearchTaskSet:
setServerID:
setServerSupportsExpandPropertyReport:
setServerVersion:
setSharedOwnerAddress:
setSharedOwnerName:
setShareeActions:
setSharees:
setSharingStatus:
setShouldCancel:
setShouldDoInitialAutodiscovery:
setShouldRefreshPrincipalSearchProperties:
setShouldSave:
setShouldSaveAccounts:
setShouldUpdatePushDelegate:
setShouldUseOpportunisticSockets:
setSourceCalendarID:
setSourceURL:
setStartTime:
setState:
setStatusChanged:
setSubscribedCalendars:
setSupportedCalendarComponentSets:
setSupportsCalendarUserSearch:
setSupportsFreebusy:
setSupportsPush:
setSupportsSyncToken:
setSymbolicColorName:
setSyncKey:
setSyncToken:
setTimeZone:
setTimeoutInterval:
setTitle:
setURL:forResourceWithUUID:
setURL:forResourceWithUUID:reminderChangeItem:
setURLToEtagMap:
setUniqueIdentifier:
setUpdatedBy:
setUseCalendarHomeSyncReport:
setUseSSL:
setUsername:
setUuidsToAddActions:
setValue:forKey:
setWasDueToPush:
setWasModifiedLocally:
setWasUserRequested:
setWithArray:
setWithObject:
sharedLogger
sharedLogging
sharedManager
sharedOwnerAddress
sharedPowerAssertionManager
sharedRunLoop
shareeActions
shareeContext
sharingStatus
shouldCancel
shouldCompressRequests
shouldDoInitialAutodiscovery
shouldFailAllTasks
shouldFilterEventSyncTimeRange
shouldFilterSyncTimeRangeForInbox
shouldHandleHTTPCookiesForURL:
shouldLogTransmittedData
shouldRefreshPrincipalSearchProperties
shouldRetry
shouldRetryUnauthorizedTask:
shouldSave
shouldSaveAccounts
shouldSendClientInfoHeaderForURL:
shouldTryRenewingCredential
shouldTurnModalOnBadPassword
shouldUpdatePushDelegate
shouldUseOpportunisticSockets
showNotificationWithIdentifier:content:completion:
shutdown
sortedArrayUsingSelector:
sourceCalendarID
sourceURL
spinnerIdentifiers
startTaskGroup
startTime
state
status
statusChanged
statusReport
store
stringAddingMailto
stringByAddingPercentEscapesUsingEncoding:
stringByAppendingString:
stringByDeletingLastPathComponent
stringByExpandingTildeInPath
stringByReplacingOccurrencesOfString:withString:
stringProperties
stringRemovingMailto
stringWithFormat:
subCalPropertiesByURL
submitIndependentCoreDAVTask:
subscribedCalendars
substringFromIndex:
successfulPropertiesToValues
superclass
supportedCalendarComponentSet
supportedCalendarComponentSets
supportsAutoSchedule
supportsCalendarAudit
supportsCalendarHomeSync
supportsCalendarProxy
supportsCalendarUserSearch
supportsEvents
supportsExtendedCalendarQuery
supportsFreebusy
supportsPrivateComments
supportsPropertySearch
supportsPush
supportsReminders
supportsRequestCompression
supportsSyncToken
supportsTimeRangeFilter
supportsTimeRangeFilterOnInbox
supportsTimeRangeFilterWithoutEndDate
supportsWellKnownType:
symbolicColorName
sync
syncActions
syncCalendar
syncDidFinishWithError:
syncToken
systemTimeZone
systemTimeZoneForDate:
task:didFinishWithError:
taskGroup:didFinishWithError:
taskManager
teardown
timeZone
timeZoneWithName:
title
titleAsString
transactionId
type
typeAttribute
uniqueIdentifier
unpackCalDAVUserAdress:
updatableBackingModel
updateAccount:
updateAccountWithAccountID:restartDA:completion:
updateCalDAVNotification:withBlock:
updateList:
updatePropertiesWithReminder:
updateReminderChangeItem:fromICSTodo:icsCalendar:isNew:withOptions:
updateResourcesFromServer:
updatedBy
upgradeAccount
useSSL
user
userAddress:forAccount:
userAddressFromDictionaryRepresentation:forAccount:
userFromEmail
username
uuid
uuidString
uuidsToAddActions
valueForKey:
versionWithHTTPHeaders:
versionWithPropertyValue:
viewedTimeZone
wasDueToPush
wasMigrated
wasModifiedLocally
wasUserRequested
webLoginRequestedAtURL:reasonString:inQueue:completionBlock:
wellKnownPaths
zone
v16@0:8
@24@0:8@16
@16@0:8
B16@0:8
v24@0:8@16
v20@0:8i16
i16@0:8
v20@0:8B16
B20@0:8B16
v24@0:8@?16
v32@0:8@16@24
v40@0:8@16@24@32
B24@0:8@16
q16@0:8
v32@0:8@16q24
@"NSMutableDictionary"
@"NSMutableSet"
@"CalDAVServerVersion"
@"NSString"
@"MobileCalDAVPrincipal"
@"NSDictionary"
@"CalDAVPrincipalSearchPropertySet"
@"CalDAVRefreshContext"
@"CoreDAVDiscoveryTaskGroup"
@"MobileCalDAVAccountRefreshActor"
@"DACoreDAVLogger"
B32@0:8@16@24
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@16@?24
v32@0:8q16@24
v32@0:8d16@24
v24@0:8q16
v24@0:8d16
^{__CFURLStorageSession=}16@0:8
v48@0:8@16@24@32@?40
@"NSData"16@0:8
@"NSURL"16@0:8
@"NSSet"16@0:8
v24@0:8@?<v@?i>16
B24@0:8@"NSError"16
@"NSDictionary"16@0:8
@"<CoreDAVClientCertificateInfoProvider>"16@0:8
@"<CoreDAVOAuthInfoProvider>"16@0:8
B32@0:8@"NSURLAuthenticationChallenge"16@?<v@?q@"NSURLCredential">24
B24@0:8@"NSURLProtectionSpace"16
B24@0:8@"NSURLSessionTask"16
v24@0:8@"NSURL"16
B24@0:8@"NSURL"16
v32@0:8q16@"CoreDAVTask"24
v24@0:8@"CoreDAVTask"16
v32@0:8d16@"CoreDAVTask"24
v48@0:8@"NSURL"16@"NSString"24@"NSObject<OS_dispatch_queue>"32@?<v@?i>40
@"AKAppleIDSession"16@0:8
^{_CFURLCredential=}24@0:8@16
^{_CFURLCredential=}24@0:8@"NSURLAuthenticationChallenge"16
@36@0:8i16@20@28
@"<CalDAVCalendar>"36@0:8i16@"NSURL"20@"NSDictionary"28
v24@0:8@"<CalDAVCalendar>"16
@"<CalDAVAccount>"16@0:8
@"<CoreDAVTaskManager>"16@0:8
v24@0:8@"NSSet"16
v24@0:8@"NSString"16
v24@0:8@"NSDictionary"16
@"NSNumber"16@0:8
v24@0:8@"NSNumber"16
@"NSDateComponents"16@0:8
v24@0:8@?<v@?@"<CalDAVPrincipal>">16
@40@0:8@16@24@32
@20@0:8i16
v32@0:8q16q24
@"REMDAChangeTrackingHelper"
@"NSURL"
@"<CalDAVAccount>"
@"NSSet"
@"NSNumber"
@"AKAppleIDSession"
@32@0:8@16@24
@"MobileCalDAVAccount"
@40@0:8q16@24@32
v64@0:8@16@24@32@40@48@56
@"NSDictionary"24@0:8@"NSArray"16
B32@0:8@"NSString"16@"NSURL"24
B32@0:8@"NSURL"16@"NSString"24
B24@0:8@"NSSet"16
@"<CalDAVPrincipal>"16@0:8
@"NSTimeZone"16@0:8
v24@0:8@"NSTimeZone"16
@"NSArray"16@0:8
v24@0:8@?<v@?@"<CalDAVCalendar>">16
v24@0:8@"NSError"16
v32@0:8@"CoreDAVAction"16@"NSError"24
v64@0:8@"CalDAVRecurrenceSplitAction"16@"NSString"24@"NSString"32@"NSURL"40@"NSString"48@"NSString"56
v32@0:8@"CalDAVRecurrenceSplitAction"16@"NSError"24
@48@0:8@16@24@32@40
v24@0:8B16B20
B40@0:8@16@24@32
@56@0:8@16i24@28@36B44^B48
v32@0:8@16@?24
B32@0:8@?16^@24
v24@0:8Q16
@"NSArray"
@"REMList"
@"<DACalDAViCalItemUpdatableBackingModel>"16@0:8
@"REMObjectID"16@0:8
v24@0:8@"REMReminder"16
@"REMObjectID"
v32@0:8@"CoreDAVTaskGroup"16@"NSError"24
v32@0:8@"<CalDAVPrincipal>"16@"NSError"24
v64@0:8@"<CalDAVPrincipal>"16@"NSDictionary"24@"NSDictionary"32@"NSString"40@"NSSet"48@"NSError"56
B40@0:8@"<CalDAVPrincipal>"16@"<CalDAVCalendar>"24@"NSError"32
v32@0:8@"<CalDAVPrincipal>"16@"<CalDAVCalendar>"24
v24@0:8@"CalDAVContainer"16
v32@0:8@"NSError"16@"<CalDAVCalendar>"24
v24@0:8@"CalDAVCalendarPropertyRefreshOperation"16
v40@0:8@"<CalDAVPrincipal>"16@"<CalDAVCalendar>"24@"NSError"32
@?16@0:8
@"DATransaction"
@"CalDiagAccountSync"
@"NSMutableArray"
@"NSObject<OS_dispatch_group>"
d16@0:8
@"NSError"
B48@0:8@16@24@32@40
@56@0:8@16@24@32@40@48
@56@0:8@"NSURL"16@"NSString"24@"NSData"32@"NSURL"40@"<CoreDAVAccountInfoProvider>"48
B52@0:8^v16^v24B32^B36@44
B24@0:8^v16
B52@0:8^v16^v24B32^B36@"DAAccount"44
v24@0:8@"<DACalDAViCalItemBackingModel>"16
B24@0:8@"DAAccount"16
@"CalDAVCalendarServerScheduleChangesItem"16@0:8
v24@0:8@"CalDAVCalendarServerScheduleChangesItem"16
@"CalDAVUpdateOwnerItem"16@0:8
v24@0:8@"CalDAVUpdateOwnerItem"16
v28@0:8@16i24
@68@0:8@16@24@32B40^B44@52@60
@68@0:8^v16^v24B32^B36@44@52@60
@"NSData"
@"CalDAVCalendarServerScheduleChangesItem"
@"<DACalDAViCalItemBackingModel>"
@"ICSDocument"
@"CalDAVUpdateOwnerItem"
@44@0:8i16i20@24i32q36
@"<CalDAVAccountDelegatesRefreshDelegate>"
@28@0:8@16B24
@36@0:8@16@24B32
