@(#)PROGRAM:SecurityFoundation  PROJECT:SecurityFoundation-1
SFCoreCryptoErrorDomain
sscrypt_storage_size params failed
ccscrypt failed: %d
ccspake_prover_init failed: %d
ccspake_generate_L failed: %d
ccspake_verifier_init failed: %d
ccspake_kex_generate failed: %d
ccspake_kex_process failed: %d
ccspake_mac_generate failed: %d
ccspake_mac_verify_and_get_session_key failed: %d
_data
_signature
Failed to deserialize object of type %@
invalid secAccessibility for SFAccessPolicy: %@
SFAccessPolicyAccessibilityMode
SFAccessPolicySharingMode
failed to deserialize SFAccessPolicy instance
SFAccessPolicyAccessGroup
SFAccessPolicy does not support SFAccessibleWithAuthentication at present - please file a radar if you need it
SFCredentialPrimaryServiceIdentifier
SFCredentialSupplementaryServiceIdentifiers
SFCredentialLocalizedLabel
SFCredentialLocalizedDescription
SFCredentialPersistentIdentifier
SFCredentialCreationDate
SFCredentialModificationDate
SFCredentialCustomAttributes
SFCredentialKeyclass
SFCredentialAccessGroup
SFCredentialChangeToken
failed to decode instance of SFCredential
SFCredentialUsername
SFCredentialPassword
no username decoded for SFCredential instance
<redacted>
 Username:%@
 Password: %@
 primary service identifier: %@
 supplementary service identifiers:
v32@?0@"_SFPasswordCredential"8@"NSString"16@"NSError"24
com.apple.security.sfkeychainserver
Could not create connection to security server
v16@?0@"NSError"8
SFServiceIdentifierServiceID
SFServiceIdentifierType
secure decade failed for instance of SFServiceIdentifier
(%@) - %@
domain
bundleID
accessGroup
custom
unknown
SFKeyDomainCPU
SFKEyDomainSEP
SFKey.m
%@ key specifiers are not yet supported
%@ bitSize: %ld
unexected AES key bit size
nistp521-compressed
 curve: %@
attempt to get attributes class from abstract base class SFKey - must be provided by subclass
attempt to get sec key specifier from abstract base class SFKey - must be provided by subclass
attempt to initialize abstract base class %@ - initialize a concrete subclass instead
attempt to creata random key for abstract base class %@ - initialize a concrete subclass instead
Invalid parameter not satisfying: %@
specifier
v24@?0^v8Q16
data
keySpecifier
subclass %@ must implement %@
secKey
unanticipated bitsize for EC key: %d
compressed elliptic curves are not presently supported
unknown SFEllipticCurve value: %d
could not get a random initialization vector
SFCryptoServicesErrorDomain
SFCryptoServicesErrorDigest
v8@?0
SFKeychainManager Queue
SFKeychainManager over commit Queue
SFEncryptionOperation.m
ciphertext
SFCiphertext
authenticationCode
initializationVector
SFAuthenticationCode
SFInitializationVector
Auth Code: %@
IV: %@
data: %@
ciphertextKey
ephemeralSenderPublicKey
SFEphemeralSenderPublicKeyExternaRepresentation
SFIESAuthenticationCode
unsupported authentication mode - at present only SFAuthenticatedEncryptionModeGCM is supported
currently only AES keys are supported for SFAuthenticatedEncryptionOperation
maskGenerationFunction
plaintext
@24@?0^{ccec_pub_ctx=^{ccec_cp}[0{ccec_projective_point=[1Q]}]}8@"NSError"16
@24@?0^{ccec_full_ctx=^{ccec_cp}[0{ccec_projective_point=[1Q]}]}8@"NSError"16
SFKeychainErrorDomain
SFKeychainErrorKeyType
SFCredentialStore: attempting to access lookupKey for service identifier with unknown type: %d
SPAKE2Common
SPAKE2Protocol
SPAKE2Prover
SPAKE2Verifier
SFSHA1DigestOperation_Ivars
SFSHA224DigestOperation_Ivars
SFSHA256DigestOperation_Ivars
SFSHA384DigestOperation_Ivars
SFSHA512DigestOperation_Ivars
SFMD5DigestOperation_Ivars
SFMaskGenerationFunction1_Ivars
SFHMACPseudoRandomFunction_Ivars
_SFSHA1DigestOperation
SFDigestOperationInternal
SFDigestOperation
NSObject
NSCopying
NSSecureCoding
NSCoding
_SFSHA224DigestOperation
_SFSHA256DigestOperation
_SFSHA384DigestOperation
_SFSHA512DigestOperation
_SFMD5DigestOperation
SFMaskGenerationFunction1
SFMaskGenerationFunction
SFHMACPseudoRandomFunction
SFPseudoRandomFunction
SFSignedData_Ivars
SFRSASigningOperation_Ivars
SFRSA_PSSSigningOperation_Ivars
SFEC_X962SigningOperation_Ivars
SFCMACOperation_Ivars
SFHMACOperation_Ivars
_SFSignedData
SFRSASigningOperation
SFSigningOperation
SFRSA_PSSSigningOperation
_SFEC_X962SigningOperation
SFMessageAuthenticationCodeOperation
SFCMACOperation
SFHMACOperation
SFAccessControlEntry_Ivars
SFAccessControlEntry
_SFAccessPolicy
SFCredentialSearchFilter_Ivars
_SFCredential
_SFPasswordCredential
SFCredentialSearchFilter
SFServiceIdentifier_Ivars
_SFCredentialStore
_SFServiceIdentifier
SFAESKeySpecifier_Ivars
SFRSAKeySpecifier_Ivars
SFECKeySpecifier_Ivars
SFSymmetricKeyAttributes_Ivars
SFKeySearchFilter_Ivars
SFKey_Ivars
SFSymmetricKey_Ivars
SFKeyPair_Ivars
SFPublicKey_Ivars
_SFKeySpecifier
_SFSymmetricKeySpecifier
_SFTripleDESKeySpecifier
_SFAESKeySpecifier
_SFAsymmetricKeySpecifier
_SFRSAKeySpecifier
_SFECKeySpecifier
SFSymmetricKeyAttributes
_SFKeyAttributes
SFKeychainItemAttributes
_SFAsymmetricKeyAttributes
SFKeySearchFilter
_SFKey
_SFSymmetricKey
SFTripleDESKey
_SFAESKey
_SFPublicKey
_SFKeyPair
SFRSAPublicKey
SFRSAKeyPair
_SFECPublicKey
_SFECKeyPair
SFIncrementingIVGenerator_Ivars
SFIncrementingIVGenerator
SFIVGenerator
SFCodingOptions_Ivars
SFCoder_Ivars
SFDecoder_Ivars
SFCodingOptions
SFCoder
SFDecoder
SFIdentity_Ivars
SFCertificate_Ivars
SFIdentityAttributes_Ivars
SFIdentitySearchFilter_Ivars
_SFIdentity
_SFCertificate
SFIdentityAttributes
SFIdentitySearchFilter
SFKeychainFetchResult_Ivars
SFKeychainDataAttributes_Ivars
SFKeychainData_Ivars
_SFKeychainFetchResult
_SFKeychainIdentityFetchResult
_SFKeychainKeyFetchResult
SFKeychainDataFetchResult
_SFKeychainManager
SFKeychainDataAttributes
SFKeychainData
SFKeychainServerProtocol
SFRevocationPolicy_Ivars
SFTrustEvaluator_Ivars
SFSSLClientTrustPolicy_Ivars
SFSSLServerTrustPolicy_Ivars
SFRevocationPolicy
SFTrustEvaluator
SFTrustPolicy
SFX509TrustPolicy
SFSSLClientTrustPolicy
SFSSLServerTrustPolicy
SFPBKDF2Operation_Ivars
SFECDHKeySource_Ivars
SFECDHOperation_Ivars
SFX963KeyDerivationOperation_Ivars
SFPBKDF2Operation
SFKeyDerivingOperation
_SFECDHKeySource
_SFECDHOperation
SFX963KeyDerivationOperation
SFCiphertext_Ivars
SFAuthenticatedCiphertext_Ivars
SFWrappedKeyCiphertext_Ivars
SFIESCiphertext_Ivars
SFSymmetricEncryptionOperation_Ivars
SFAuthenticatedEncryptionOperation_Ivars
SFRSAEncryptionOperation_Ivars
SFRSA_OAEPEncryptionOperation_Ivars
SFRSA_WrappedKeyEncryptionOperation_Ivars
SFIESOperation_Ivars
_SFCiphertext
_SFAuthenticatedCiphertext
SFWrappedKeyCiphertext
_SFIESCiphertext
SFSymmetricEncryptionOperation
_SFEncryptionOperation
SFTripleDESEncryptionOperation
SFAESEncryptionOperation
_SFAuthenticatedEncryptionOperation
SFRSAEncryptionOperation
SFRSA_PKCS1EncryptionOperation
SFRSA_OAEPEncryptionOperation
SFRSA_WrappedKeyEncryptionOperation
_SFIESOperation
init
setRng:
setCp:
setMac:
setSpake_ctx:
setSalt:
setCode:
setW_size:
setPoint_size:
code
UTF8String
w_size
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
salt
length
bytes
stringWithFormat:
dataWithBytes:length:
setW0:
setW1:
spake_ctx
point_size
dealloc
initWithBitSize:
initWithData:specifier:error:
setSession_key:
session_key
setVerified:
verified
initWithKeySpecifier:
getKey
encrypt:withKey:additionalAuthenticatedData:error:
archivedDataWithRootObject:requiringSecureCoding:error:
unarchivedObjectOfClass:fromData:error:
decrypt:withKey:additionalAuthenticatedData:error:
getMsg1WithError:
processMsg1:error:
getMsg2WithError:
processMsg2:error:
isVerified
encryptMessage:error:
decryptMessage:error:
initWithSalt:code:
generateStateWithError:
setupProver:
setupVerifier:
.cxx_destruct
_verified
_rng
_spake_ctx
_code
_salt
_mac
_w_size
_point_size
_session_key
T^{ccrng_state=^?},V_rng
T^{ccspake_ctx=^{ccspake_cp}^{ccspake_mac}^{ccrng_state}BQ*C[0Q]},V_spake_ctx
T@"NSString",&,V_code
T@"NSData",&,V_salt
Tr^{ccspake_cp=},V_cp
Tr^{ccspake_mac=},V_mac
T@"NSData",&,V_w0
T@"NSData",&,V_w1
TQ,V_w_size
TQ,V_point_size
T@"_SFAESKey",&,V_session_key
TB,V_verified
setCommon:
common
initWithSalt:code:error:
_common
T@"SPAKE2Common",&,V_common
generateCodeWithError:
getCode
context
digestOperation
addData:
hashValue
digest:
supportsSecureCoding
outputSize
blockSize
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
copyWithZone:
encodeWithCoder:
initWithCoder:
TB,R
T@"NSData",R,C
Tq,R
_secKeyECDSAAlgorithm
_ccDigestInfo
secKeyECDSAAlgorithm
Tr^{__CFString=},R,N,G_secKeyECDSAAlgorithm
ccDigestInfo
Tr^{ccdigest_info=QQQQ*^v^?^?i},R,N,G_ccDigestInfo
_sha1DigestOperationInternal
_sha224DigestOperationInternal
_sha256DigestOperationInternal
_sha384DigestOperationInternal
_sha512DigestOperationInternal
_md5DigestOperationInternal
initWithDigestOperation:
generateMaskWithLength:data:error:
setDigestOperation:
_mgf1OperationInternal
T@"<SFDigestOperation>",C,N
generateBytesWithLength:key:error:
_hmacPseudoRandomFunctionInternal
data
signature
keySpecifier
maskGenerationFunction
encryptionOperation
copy
decodeObjectOfClass:forKey:
failWithError:
encodeObject:forKey:
initWithData:signature:
_signedDataInternal
T@"NSData",R
initWithKeySpecifier:digestOperation:
sign:withKey:error:
verify:withKey:error:
signingKeySpecifier
T@"_SFKeySpecifier",R,C,N
setSigningKeySpecifier:
_rsaSigningOperationInternal
T@"_SFRSAKeySpecifier",C,N
initWithKeySpecifier:digestOperation:maskGenerationFunction:
setMaskGenerationFunction:
_pssSigningOperationInternal
T@"<SFMaskGenerationFunction>",C,N
initWithCurve:
_secKey
_x962SigningOperationInternal
_digestOperation
T@"_SFECKeySpecifier",C,N
T@"<SFDigestOperation>",C,V_digestOperation
_defaultMacOperation
_messageAuthenticationCodeOperationInternal
T@"_SFKeySpecifier",R,C,D,N
_defaultEncryptionOperation
initWithEncryptionOperation:
setEncryptionOperation:
_cmacOperationInternal
T@"SFSymmetricEncryptionOperation",C,N
_hmacOperationInternal
bundleID
accessControlEntryFlags
initWithBundleID:owner:canRead:canWrite:
isOwner
setOwner:
canRead
setCanRead:
canWrite
setCanWrite:
setBundleID:
_accessControlEntryInternal
T@"NSString",C,N
owner
TB,N,GisOwner
TB,N
initWithAccessibility:sharingPolicy:
containsValueForKey:
decodeIntegerForKey:
encodeInteger:forKey:
allocWithZone:
setAccessGroup:
setAccessControlList:
accessibility
sharingPolicy
accessGroup
isEqualToString:
exceptionWithName:reason:userInfo:
accessPolicyWithSecAccessibility:error:
secAccessibilityAttributes
setAccessibility:
setSharingPolicy:
accessControlList
_accessibility
_sharingPolicy
_accessGroup
_accessControlList
Tr^{__CFDictionary=},R,N
T@"NSArray",C,N,V_accessControlList
T{?=q{?=Qq}},N,V_accessibility
Tq,N,V_sharingPolicy
T@"NSString",C,N,V_accessGroup
minimumCreationDate
maximumCreationDate
minimumModificationDate
maximumModificationDate
serviceIdentifiers
usernames
setWithObjects:
decodeObjectOfClasses:forKey:
count
primaryServiceIdentifier
setWithArray:
supplementaryServiceIdentifiers
isEqualToSet:
localizedLabel
localizedDescription
creationDate
modificationDate
customAttributes
isEqualToDictionary:
_initWithPrimaryServiceIdentifier:supplementaryServiceIdentiifers:
array
dictionary
setSupplementaryServiceIdentifiers:
setLocalizedLabel:
setLocalizedDescription:
setCustomAttributes:
_setPersistentIdentifier:
_setCreationDate:
_setModificationDate:
_setKeyclass:
_keyclass
_setAccessGroup:
_setChangeToken:
_changeToken
setPrimaryServiceIdentifier:
persistentIdentifier
_primaryServiceIdentifier
_supplementaryServiceIdentifiers
_label
_description
_persistentIdentifier
_creationDate
_modificationDate
_customAttributes
T@"NSString",C,N,S_setPersistentIdentifier:,V_persistentIdentifier
T@"NSDate",C,N,S_setCreationDate:,V_creationDate
T@"NSDate",C,N,S_setModificationDate:,V_modificationDate
keyclass
Ti,N,G_keyclass,S_setKeyclass:
T@"NSString",&,N,G_accessGroup,S_setAccessGroup:
changeToken
T@"NSData",&,N,G_changeToken,S_setChangeToken:
T@"_SFServiceIdentifier",&,N,V_primaryServiceIdentifier
T@"NSArray",&,N
T@"NSString",C,N,V_label
T@"NSString",C,N,V_description
T@"NSDictionary",C,N,V_customAttributes
initWithUsername:password:primaryServiceIdentifier:supplementaryServiceIdentifiers:
setUsername:
setPassword:
isEqualToData:
_cachedPassword
username
stringByAppendingFormat:
descriptionShowingPassword:
defaultCredentialStore
fetchPasswordCredentialForPersistentIdentifier:withResultHandler:
initWithUsername:password:primaryServiceIdentifier:
_initWithUsername:primaryServiceIdentifier:supplementaryServiceIdentifiers:
usePasswordWithHandler:
_username
_password
password
T@"NSString",C,N,G_cachedPassword
setMinimumCreationDate:
setMaximumCreationDate:
setServiceIdentifiers:
setUsernames:
setMinimumModificationDate:
setMaximumModificationDate:
attributesPredicate
setAttributesPredicate:
_credentialSearchFilterInternal
_attributesPredicate
T@"NSDate",&,N
T@"NSArray<_SFServiceIdentifier>",&,N
T@"NSPredicate",&,N,V_attributesPredicate
serviceID
type
defaultManager
credentialStore
_serverConnectionWithError:
initWithMachServiceName:options:
setRemoteObjectInterface:
resume
remoteObjectProxyWithErrorHandler:
serverProxyWithResultHandler:
rpcAddCredential:withAccessPolicy:reply:
serverProxyWithDualResultHandler:
rpcFetchPasswordCredentialForPersistentIdentifier:reply:
rpcLookupCredentialsForServiceIdentifiers:reply:
serverProxyWithBooleanHandler:
rpcRemoveCredentialWithPersistentIdentifier:reply:
rpcReplaceOldCredential:withNewCredential:reply:
rpcReplaceCredential:withNewCredential:reply:
_init
addCredential:withAccessPolicy:resultHandler:
lookupCredentialsForServiceIdentifiers:withResultHandler:
removeCredentialWithPersistentIdentifier:withResultHandler:
replaceOldCredential:withNewCredential:resultHandler:
replaceCredential:withNewCredential:resultHandler:
_credentialStoreInternal
_serverConnection
_serverError
host
serviceIdentifierForDomain:
initWithServiceID:forType:
_lookupKey
serviceIdentifierForURL:
serviceIdentifierForBundleID:
serviceIdentifierForAccessGroup:
serviceIdentifierForCustomString:
_serviceIdentifierInternal
lookupKey
T@"NSString",R,C,N,G_lookupKey
T@"NSString",R,C,N
Tq,R,N
bitSize
curve
keyDomain
specifiers
domains
attributes
keyData
secKey
privateKeyDomain
keyClass
_keySpecifierInternal
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
keyLengthInBytes
_symmetricKeySpecifierInternal
_tripleDESKeySpecifierInternal
setBitSize:
_aesKeySpecifierInternal
Tq,N
_asymmetricKeySpecifierInternal
_rsaKeySpecifierInternal
stringByAppendingString:
setCurve:
_ecKeySpecifierInternal
initWithSpecifier:domain:
alloc
initWithSpecifier:
setKeySpecifier:
_symmetricKeyAttributesInternal
T@"NSString",R,C,N,VpersistentIdentifier
_asymmetricKeySpecifier
_asymmetricKeyDomain
T@"_SFKeySpecifier",R,C,N,V_asymmetricKeySpecifier
T@"NSString",R,C,N,V_asymmetricKeyDomain
setSpecifiers:
setDomains:
_keySearchFilterInternal
T@"NSArray",C,N
_attributesClass
_specifierForSecKey:
attributesClass
T#,R,N,G_attributesClass
initWithAttributes:
initRandomKeyWithSpecifier:
_keyInternal
_keyData
T@"NSData",R,N,V_keyData
initWithBytesNoCopy:length:deallocator:
initRandomKeyWithSpecifier:error:
_symmetricKeyInternal
T@"_SFSymmetricKeySpecifier",R,C,D,N
_tripleDESKeyInternal
_aesKeyInternal
T@"_SFAESKeySpecifier",R,C,D,N
_secKeyCreationAttributesForSpecifier:
initWithSecKey:
_publicKeyInternal
T^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v},R,N,G_secKey
initRandomKeyPairWithSpecifier:privateKeyDomain:
initRandomKeyPairWithSpecifier:
publicKey
_keyPairInternal
T@"_SFPublicKey",R,N
_rsaPublicKeyInternal
_rsaKeyPairInternal
numberWithInteger:
keyWithSubjectPublicKeyInfo:
performWithCCKey:
encodeSubjectPublicKeyInfo
_ecPublicKeyInternal
T@"_SFECKeySpecifier",R,C,D,N
_ecKeyPairInternal
objectForKeyedSubscript:
integerValue
messageID
numBytesRolled
initWithRandomMessageID
initWithMessageID:
mutableCopy
subdataWithRange:
mutableBytes
generateIVWithLength:error:
setMessageID:
_incrementingIVGeneratorInternal
T@"NSData",C,N
dataWithCapacity:
setLength:
encoding
encryptionPassphrase
options
setEncoding:
setEncryptionPassphrase:
_codingOptionsInternal
initWithOptions:
encodeTopLevelValue:error:
setOptions:
_coderInternal
T@"SFCodingOptions",C,N
decodeValueOfType:fromData:error:
_decoderInternal
keyPair
certificate
certificateType
subject
issuerName
serialNumber
secCertificate
identityName
hasCertificate
certificateSerialNumbers
certificateTypes
keySpecifiers
initWithPublicKey:certificate:
initWithKeyPair:certificate:
initWithPublicKey:
initWithKeyPair:
setKeyPair:
setCertificate:
_identityInternal
T@"_SFCertificate",&,N
T@"_SFKeyPair",&,N
T@"SFIdentityAttributes",R,N
initWithSecCertificate:
_certificateInternal
T^{__SecCertificate=},R,N
T@"NSString",R,N
T@"NSData",R,N
setIdentityName:
_identityAttributesInternal
_privateKeyDomain
T@"_SFAsymmetricKeySpecifier",R,C,N
TB,R,N
T@"NSString",R,C,N,V_privateKeyDomain
setCertificateSerialNumbers:
setCertificateTypes:
setKeySpecifiers:
_identitySearchFilterInternal
resultType
value
error
initWithValue:
initWithError:
fetchResultWithValue:
fetchResultWithError:
fetchValueWithAuthenticationContext:resultHandler:
_keychainFetchResultInternal
T@,R
T@"NSError",R
_identityFetchResult
T@"_SFIdentity",R,D
_keyFetchResult
T@"_SFSymmetricKey",R,D
_dataFetchResult
T@"SFKeychainData",R,D
initManager
initOverCommitManager
setKeychainReplyQueue:
setObject:forKeyedSubscript:
addEntriesFromDictionary:
keychainReplyQueue
_symmetricKeyAttributesForIdentifier:accessPolicy:key:
_commonKeyAttributesForIdentityIdentifier:accessPolicy:key:
_privateKeyAttributesForIdentityIdentifier:accessPolicy:key:
_publicKeyAttributesForIdentityIdentifier:accessPolicy:key:
_certificateAttributesForIdentityIdentifier:accessPolicy:
keychainManagerQueue
findPrivateKeyWithIdentifier:certificate:attributes:result:
foundPrivateKey:certificate:
publicKeyLookupWithIdentifier:certificate:result:
arrayWithObjects:count:
countByEnumeratingWithState:objects:count:
defaultOverCommitManager
setKey:forIdentifier:accessPolicy:resultHandler:
setIdentity:forIdentifier:accessPolicy:resultHandler:
setData:forIdentifier:accessPolicy:resultHandler:
keyForIdentifier:specifier:resultHandler:
identityForIdentifier:
identityForIdentifier:resultHandler:
dataForIdentifier:resultHandler:
keysFilteredBy:resultHandler:
identitiesFilteredBy:resultHandler:
removeItemWithIdentifier:resultHandler:
setKeychainManagerQueue:
_credentialStore
_keychainManagerQueue
_keychainReplyQueue
T@"NSObject<OS_dispatch_queue>",&,V_keychainManagerQueue
T@"NSObject<OS_dispatch_queue>",&,V_keychainReplyQueue
T@"_SFCredentialStore",R,V_credentialStore
_keychainDataAttributesInternal
initWithData:
setAttributes:
_keychainDataInternal
T@"SFKeychainDataAttributes",&,N
interfaceWithProtocol:
safeErrorClasses
setClasses:forSelector:argumentIndex:ofReply:
revocationMethods
networkLookup
trustPolicy
revocationPolicy
applicationAnchorCertificates
trustEvaluatorFlags
clientName
serverName
initWithRevocationMethods:networkLookup:
setRevocationMethods:
setNetworkLookup:
_revocationPolicyInternal
TQ,N
initWithTrustPolicy:
initWithTrustPolicy:revocationPolicy:
initWithTrustPolicy:revocationPolicy:applicationAnchorCertificates:allowCertificateFetching:trustSystemAnchorCertificates:
evaluateCertificateChain:forDate:resultHandler:
setTrustPolicy:
setRevocationPolicy:
setApplicationAnchorCertificates:
allowCertificateFetching
setAllowCertificateFetching:
trustSystemAnchorCertificates
setTrustSystemAnchorCertificates:
_trustEvaluatorInternal
_allowCertificateFetching
_trustSystemAnchorCertificates
_trustPolicy
_revocationPolicy
_applicationAnchorCertificates
T@"SFTrustPolicy",C,N,V_trustPolicy
T@"SFRevocationPolicy",C,N,V_revocationPolicy
T@"NSArray",C,N,V_applicationAnchorCertificates
TB,N,V_allowCertificateFetching
TB,N,V_trustSystemAnchorCertificates
evaluateCertificateChain:error:
_trustPolicyInternal
_x509TrustPolicyInternal
setClientName:
initWithClientName:
_sslClientTrustPolicyInternal
setServerName:
initWithServerName:
_sslServerTrustPolicyInternal
iterationCount
pseudoRandomFunction
localKeyPair
remotePublicKey
mode
sharedSecretOperation
_randomSalt
initWithPseudoRandomFunction:iterationCount:salt:
keySource
deriveKeyWithSpecifier:fromKeySource:error:
setIterationCount:
setPseudoRandomFunction:
_pbkdf2OperationInternal
T@"<SFPseudoRandomFunction>",C,N
initWithLocalKeyPair:remotePublickKey:
setLocalKeyPair:
setRemotePublicKey:
_ecdhKeySourceInternal
T@"_SFECKeyPair",&,N
T@"_SFECPublicKey",&,N
_defaultMode
initWithMode:
numberWithUnsignedInteger:
_defaultOperation
setMode:
_ecdhOperationInternal
initWithSharedSecretOperation:
initWithSharedSecretOperation:digestOperation:
setSharedSecretOperation:
_x963KeyDerivationOperationInternal
T@"<SFKeyDerivingOperation>",C,N
ciphertext
authenticationCode
initializationVector
ciphertextKey
ephemeralSenderPublicKey
authenticationMode
authenticationCodeLength
keyWrappingOperation
sessionEncryptionOperation
diffieHellmanOperation
initWithCiphertext:
_ciphertextInternal
initWithCiphertext:authenticationCode:initializationVector:
_authenticatedCiphertextInternal
initWithCiphertext:ciphertextKey:
_wrappedKeyCiphertextInternal
T@"_SFCiphertext",R
initWithCiphertext:ephemeralSenderPublicKey:authenticationCode:
_iesCiphertextInternal
T@"_SFECPublicKey",R
_defaultEncryptionMode
initWithKeySpecifier:mode:
encrypt:withKey:error:
decrypt:withKey:error:
encryptionKeySpecifier
encrypt:withKey:ivGenerator:error:
setEncryptionKeySpecifier:
_symmetricEncryptionOperationInternal
T@"_SFSymmetricKeySpecifier",C,N
_tripleDESEncryptionOperationInternal
T@"_SFTripleDESKeySpecifier",C,D,N
_aesEncryptionOperationInternal
T@"_SFAESKeySpecifier",C,D,N
_defaultAuthenticationMode
initWithKeySpecifier:authenticationMode:
encrypt:withKey:additionalAuthenticatedData:ivGenerator:error:
setAuthenticationMode:
setAuthenticationCodeLength:
_authenticatedEncryptionOperationInternal
T@"_SFAESKeySpecifier",C,N
_rsaEncryptionOperationInternal
_pkcs1EncryptionOperationInternal
initWithKeySpecifier:maskGenerationFunction:
_oaepEncryptionOperationInternal
initWithKeyWrappingOperation:
initWithKeyWrappingOperation:sessionEncryptionOperation:
setKeyWrappingOperation:
setSessionEncryptionOperation:
_wrappedKeyEncryptionOperationInternal
T@"SFRSAEncryptionOperation",C,N
initWithCurve:diffieHellmanOperation:encryptionOperation:digestOperation:
_ccDigestInfoWithError:
initWithBytes:length:
initialize
setDiffieHellmanOperation:
_iesOperationInternal
_curve
T@"_SFECDHOperation",C,N
T@"_SFAuthenticatedEncryptionOperation",C,N
Tq,V_curve
@24@0:8^@16
B32@0:8@16^@24
B16@0:8
@16@0:8
@32@0:8@16^@24
@"NSData"24@0:8^@16
B32@0:8@"NSData"16^@24
@"_SFAESKey"16@0:8
@"NSData"32@0:8@"NSData"16^@24
@32@0:8@16@24
B24@0:8^@16
v16@0:8
^{ccrng_state=^?}16@0:8
v24@0:8^{ccrng_state=^?}16
^{ccspake_ctx=^{ccspake_cp}^{ccspake_mac}^{ccrng_state}BQ*C[0Q]}16@0:8
v24@0:8^{ccspake_ctx=^{ccspake_cp}^{ccspake_mac}^{ccrng_state}BQ*C[0Q]}16
v24@0:8@16
r^{ccspake_cp=}16@0:8
v24@0:8r^{ccspake_cp=}16
r^{ccspake_mac=}16@0:8
v24@0:8r^{ccspake_mac=}16
Q16@0:8
v24@0:8Q16
v20@0:8B16
^{ccrng_state=^?}
^{ccspake_ctx=^{ccspake_cp}^{ccspake_mac}^{ccrng_state}BQ*C[0Q]}
@"NSString"
@"NSData"
r^{ccspake_cp=}
r^{ccspake_mac=}
@"_SFAESKey"
@40@0:8@16@24^@32
@"SPAKE2Common"
{CC_SHA1state_st="h0"I"h1"I"h2"I"h3"I"h4"I"Nl"I"Nh"I"data"[16I]"num"i}
{CC_SHA256state_st="count"[2I]"hash"[8I]"wbuf"[16I]}
{CC_SHA512state_st="count"[2Q]"hash"[8Q]"wbuf"[16Q]}
{CC_MD5state_st="A"I"B"I"C"I"D"I"Nl"I"Nh"I"data"[16I]"num"i}
@"<SFDigestOperation>"
@24@0:8@16
q16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8^{_NSZone=}16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v24@0:8@"NSData"16
@"NSData"16@0:8
@"NSData"24@0:8@"NSData"16
r^{__CFString=}16@0:8
r^{ccdigest_info=QQQQ*^v^?^?i}16@0:8
@40@0:8q16@24@32
@"NSData"40@0:8q16@"NSData"24@"NSError"32
@"NSData"40@0:8q16@"_SFKey"24@"NSError"32
@"_SFRSAKeySpecifier"
@"<SFMaskGenerationFunction>"
@"_SFECKeySpecifier"
@"<SFDigestOperationInternal>"
@"SFSymmetricEncryptionOperation"
@"_SFSignedData"40@0:8@"NSData"16@"_SFKey"24^@32
@"NSData"40@0:8@"_SFSignedData"16@"_SFKey"24^@32
@"_SFKeySpecifier"16@0:8
@40@0:8@16@24@32
{?="isOwner"b1"canRead"b1"canWrite"b1}
@36@0:8@16B24B28B32
@32@0:8^{__CFString=}16^@24
@48@0:8{?=q{?=Qq}}16q40
r^{__CFDictionary=}16@0:8
{?=q{?=Qq}}16@0:8
v40@0:8{?=q{?=Qq}}16
v24@0:8q16
{?="mode"q"authenticationPolicy"{?="authenticationRequirements"Q"subsetCount"q}}
@"NSArray"
@"NSDate"
@"NSArray<_SFServiceIdentifier>"
v20@0:8i16
i16@0:8
@"_SFServiceIdentifier"
@"NSDictionary"
@48@0:8@16@24@32@40
@20@0:8B16
v24@0:8@?16
@"NSPredicate"
@24@0:8@?16
v40@0:8@16@24@?32
v32@0:8@16@?24
@"<NSXPCProxyCreating>"
@"NSError"
@32@0:8@16q24
@"_SFKeySpecifier"
@"<_SFKeyAttributes>"
^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}
@24@0:8q16
v24@0:8@"NSString"16
@24@0:8^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16
^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16@0:8
@"NSMutableData"
@32@0:8q16^@24
@"NSData"32@0:8q16^@24
@"SFCodingOptions"
@40@0:8#16@24@32
@"_SFPublicKey"
@"_SFKeyPair"
@"_SFCertificate"
@"SFIdentityAttributes"
^{__SecCertificate=}
@24@0:8^{__SecCertificate=}16
^{__SecCertificate=}16@0:8
@"SFKeychainDataAttributes"
v48@0:8@16@24@32@?40
^{__CFDictionary=}40@0:8@16@24@32
^{__CFDictionary=}32@0:8@16@24
@32@0:8^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16@24
^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}48@0:8@16^@24^^{__CFDictionary}32^i40
@36@0:8@16@24i32
@"_SFCredentialStore"
@"NSObject<OS_dispatch_queue>"
v40@0:8@"_SFCredential"16@"_SFAccessPolicy"24@?<v@?@"NSString"@"NSError">32
v32@0:8@"NSString"16@?<v@?@"_SFPasswordCredential"@"NSString"@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v40@0:8@"_SFCredential"16@"_SFCredential"24@?<v@?@"NSString"@"NSError">32
v40@0:8@"_SFCredential"16@"_SFCredential"24@?<v@?B@"NSError">32
@"SFTrustPolicy"
@"SFRevocationPolicy"
{?="allowCertificateFetching"b1"trustSystemAnchorCertificates"b1}
@32@0:8Q16q24
@48@0:8@16@24@32B40B44
@"<SFPseudoRandomFunction>"
@"_SFECKeyPair"
@"_SFECPublicKey"
@"<SFKeyDerivingOperation>"
@"_SFSymmetricKey"40@0:8@"_SFSymmetricKeySpecifier"16@24^@32
@40@0:8@16q24@32
@"_SFCiphertext"
@"_SFSymmetricKeySpecifier"
@"_SFAESKeySpecifier"
@"SFRSAEncryptionOperation"
@"_SFECDHOperation"
@"_SFCiphertext"40@0:8@"NSData"16@"_SFKey"24^@32
@"NSData"40@0:8@"_SFCiphertext"16@"_SFKey"24^@32
@48@0:8@16@24@32^@40
@56@0:8@16@24@32@40^@48
@48@0:8q16@24@32@40
r^{ccdigest_info=QQQQ*^v^?^?i}24@0:8^@16
@(#)PROGRAM:SecurityFoundation  PROJECT:SecurityFoundation-1
SFCoreCryptoErrorDomain
sscrypt_storage_size params failed
ccscrypt failed: %d
ccspake_prover_init failed: %d
ccspake_generate_L failed: %d
ccspake_verifier_init failed: %d
ccspake_kex_generate failed: %d
ccspake_kex_process failed: %d
ccspake_mac_generate failed: %d
ccspake_mac_verify_and_get_session_key failed: %d
_data
_signature
Failed to deserialize object of type %@
invalid secAccessibility for SFAccessPolicy: %@
SFAccessPolicyAccessibilityMode
SFAccessPolicySharingMode
failed to deserialize SFAccessPolicy instance
SFAccessPolicyAccessGroup
SFAccessPolicy does not support SFAccessibleWithAuthentication at present - please file a radar if you need it
SFCredentialPrimaryServiceIdentifier
SFCredentialSupplementaryServiceIdentifiers
SFCredentialLocalizedLabel
SFCredentialLocalizedDescription
SFCredentialPersistentIdentifier
SFCredentialCreationDate
SFCredentialModificationDate
SFCredentialCustomAttributes
SFCredentialKeyclass
SFCredentialAccessGroup
SFCredentialChangeToken
failed to decode instance of SFCredential
SFCredentialUsername
SFCredentialPassword
no username decoded for SFCredential instance
<redacted>
 Username:%@
 Password: %@
 primary service identifier: %@
 supplementary service identifiers:
v32@?0@"_SFPasswordCredential"8@"NSString"16@"NSError"24
com.apple.security.sfkeychainserver
Could not create connection to security server
v16@?0@"NSError"8
SFServiceIdentifierServiceID
SFServiceIdentifierType
secure decade failed for instance of SFServiceIdentifier
(%@) - %@
domain
bundleID
accessGroup
custom
unknown
SFKeyDomainCPU
SFKEyDomainSEP
SFKey.m
%@ key specifiers are not yet supported
%@ bitSize: %ld
unexected AES key bit size
nistp521-compressed
 curve: %@
attempt to get attributes class from abstract base class SFKey - must be provided by subclass
attempt to get sec key specifier from abstract base class SFKey - must be provided by subclass
attempt to initialize abstract base class %@ - initialize a concrete subclass instead
attempt to creata random key for abstract base class %@ - initialize a concrete subclass instead
Invalid parameter not satisfying: %@
specifier
v24@?0^v8Q16
data
keySpecifier
subclass %@ must implement %@
secKey
unanticipated bitsize for EC key: %d
compressed elliptic curves are not presently supported
unknown SFEllipticCurve value: %d
could not get a random initialization vector
SFCryptoServicesErrorDomain
SFCryptoServicesErrorDigest
v8@?0
SFKeychainManager Queue
SFKeychainManager over commit Queue
SFEncryptionOperation.m
ciphertext
SFCiphertext
authenticationCode
initializationVector
SFAuthenticationCode
SFInitializationVector
Auth Code: %@
IV: %@
data: %@
ciphertextKey
ephemeralSenderPublicKey
SFEphemeralSenderPublicKeyExternaRepresentation
SFIESAuthenticationCode
unsupported authentication mode - at present only SFAuthenticatedEncryptionModeGCM is supported
currently only AES keys are supported for SFAuthenticatedEncryptionOperation
maskGenerationFunction
plaintext
@24@?0^{ccec_pub_ctx=^{ccec_cp}[0{ccec_projective_point=[1Q]}]}8@"NSError"16
@24@?0^{ccec_full_ctx=^{ccec_cp}[0{ccec_projective_point=[1Q]}]}8@"NSError"16
SFKeychainErrorDomain
SFKeychainErrorKeyType
SFCredentialStore: attempting to access lookupKey for service identifier with unknown type: %d
SPAKE2Common
SPAKE2Protocol
SPAKE2Prover
SPAKE2Verifier
SFSHA1DigestOperation_Ivars
SFSHA224DigestOperation_Ivars
SFSHA256DigestOperation_Ivars
SFSHA384DigestOperation_Ivars
SFSHA512DigestOperation_Ivars
SFMD5DigestOperation_Ivars
SFMaskGenerationFunction1_Ivars
SFHMACPseudoRandomFunction_Ivars
_SFSHA1DigestOperation
SFDigestOperationInternal
SFDigestOperation
NSObject
NSCopying
NSSecureCoding
NSCoding
_SFSHA224DigestOperation
_SFSHA256DigestOperation
_SFSHA384DigestOperation
_SFSHA512DigestOperation
_SFMD5DigestOperation
SFMaskGenerationFunction1
SFMaskGenerationFunction
SFHMACPseudoRandomFunction
SFPseudoRandomFunction
SFSignedData_Ivars
SFRSASigningOperation_Ivars
SFRSA_PSSSigningOperation_Ivars
SFEC_X962SigningOperation_Ivars
SFCMACOperation_Ivars
SFHMACOperation_Ivars
_SFSignedData
SFRSASigningOperation
SFSigningOperation
SFRSA_PSSSigningOperation
_SFEC_X962SigningOperation
SFMessageAuthenticationCodeOperation
SFCMACOperation
SFHMACOperation
SFAccessControlEntry_Ivars
SFAccessControlEntry
_SFAccessPolicy
SFCredentialSearchFilter_Ivars
_SFCredential
_SFPasswordCredential
SFCredentialSearchFilter
SFServiceIdentifier_Ivars
_SFCredentialStore
_SFServiceIdentifier
SFAESKeySpecifier_Ivars
SFRSAKeySpecifier_Ivars
SFECKeySpecifier_Ivars
SFSymmetricKeyAttributes_Ivars
SFKeySearchFilter_Ivars
SFKey_Ivars
SFSymmetricKey_Ivars
SFKeyPair_Ivars
SFPublicKey_Ivars
_SFKeySpecifier
_SFSymmetricKeySpecifier
_SFTripleDESKeySpecifier
_SFAESKeySpecifier
_SFAsymmetricKeySpecifier
_SFRSAKeySpecifier
_SFECKeySpecifier
SFSymmetricKeyAttributes
_SFKeyAttributes
SFKeychainItemAttributes
_SFAsymmetricKeyAttributes
SFKeySearchFilter
_SFKey
_SFSymmetricKey
SFTripleDESKey
_SFAESKey
_SFPublicKey
_SFKeyPair
SFRSAPublicKey
SFRSAKeyPair
_SFECPublicKey
_SFECKeyPair
SFIncrementingIVGenerator_Ivars
SFIncrementingIVGenerator
SFIVGenerator
SFCodingOptions_Ivars
SFCoder_Ivars
SFDecoder_Ivars
SFCodingOptions
SFCoder
SFDecoder
SFIdentity_Ivars
SFCertificate_Ivars
SFIdentityAttributes_Ivars
SFIdentitySearchFilter_Ivars
_SFIdentity
_SFCertificate
SFIdentityAttributes
SFIdentitySearchFilter
SFKeychainFetchResult_Ivars
SFKeychainDataAttributes_Ivars
SFKeychainData_Ivars
_SFKeychainFetchResult
_SFKeychainIdentityFetchResult
_SFKeychainKeyFetchResult
SFKeychainDataFetchResult
_SFKeychainManager
SFKeychainDataAttributes
SFKeychainData
SFKeychainServerProtocol
SFRevocationPolicy_Ivars
SFTrustEvaluator_Ivars
SFSSLClientTrustPolicy_Ivars
SFSSLServerTrustPolicy_Ivars
SFRevocationPolicy
SFTrustEvaluator
SFTrustPolicy
SFX509TrustPolicy
SFSSLClientTrustPolicy
SFSSLServerTrustPolicy
SFPBKDF2Operation_Ivars
SFECDHKeySource_Ivars
SFECDHOperation_Ivars
SFX963KeyDerivationOperation_Ivars
SFPBKDF2Operation
SFKeyDerivingOperation
_SFECDHKeySource
_SFECDHOperation
SFX963KeyDerivationOperation
SFCiphertext_Ivars
SFAuthenticatedCiphertext_Ivars
SFWrappedKeyCiphertext_Ivars
SFIESCiphertext_Ivars
SFSymmetricEncryptionOperation_Ivars
SFAuthenticatedEncryptionOperation_Ivars
SFRSAEncryptionOperation_Ivars
SFRSA_OAEPEncryptionOperation_Ivars
SFRSA_WrappedKeyEncryptionOperation_Ivars
SFIESOperation_Ivars
_SFCiphertext
_SFAuthenticatedCiphertext
SFWrappedKeyCiphertext
_SFIESCiphertext
SFSymmetricEncryptionOperation
_SFEncryptionOperation
SFTripleDESEncryptionOperation
SFAESEncryptionOperation
_SFAuthenticatedEncryptionOperation
SFRSAEncryptionOperation
SFRSA_PKCS1EncryptionOperation
SFRSA_OAEPEncryptionOperation
SFRSA_WrappedKeyEncryptionOperation
_SFIESOperation
handleFailureInMethod:object:file:lineNumber:description:
mutableBytes
array
initWithMachServiceName:options:
dataWithCapacity:
failWithError:
integerValue
archivedDataWithRootObject:requiringSecureCoding:error:
dictionaryWithObjects:forKeys:count:
unarchivedObjectOfClass:fromData:error:
dataWithBytes:length:
exceptionWithName:reason:userInfo:
copy
dictionary
allocWithZone:
errorWithDomain:code:userInfo:
setWithObjects:
containsValueForKey:
setWithArray:
addEntriesFromDictionary:
subdataWithRange:
UTF8String
isEqualToString:
stringWithFormat:
setLength:
currentHandler
length
resume
isEqualToSet:
stringByAppendingString:
setClasses:forSelector:argumentIndex:ofReply:
objectForKeyedSubscript:
bytes
setRemoteObjectInterface:
stringByAppendingFormat:
isEqualToDictionary:
numberWithUnsignedInteger:
host
decodeObjectOfClasses:forKey:
remoteObjectProxyWithErrorHandler:
isEqualToData:
numberWithInteger:
safeErrorClasses
encodeObject:forKey:
countByEnumeratingWithState:objects:count:
decodeObjectOfClass:forKey:
arrayWithObjects:count:
mutableCopy
initWithBytesNoCopy:length:deallocator:
setObject:forKeyedSubscript:
encodeInteger:forKey:
interfaceWithProtocol:
decodeIntegerForKey:
initWithBytes:length:
count
init
dealloc
getMsg1WithError:
processMsg1:error:
getMsg2WithError:
processMsg2:error:
isVerified
getKey
encryptMessage:error:
decryptMessage:error:
initWithSalt:code:
generateStateWithError:
setupProver:
setupVerifier:
setRng:
spake_ctx
setSpake_ctx:
code
setCode:
salt
setSalt:
setCp:
setMac:
setW0:
setW1:
w_size
setW_size:
point_size
setPoint_size:
session_key
setSession_key:
verified
setVerified:
.cxx_destruct
_verified
_rng
_spake_ctx
_code
_salt
_mac
_w_size
_point_size
_session_key
T^{ccrng_state=^?},V_rng
T^{ccspake_ctx=^{ccspake_cp}^{ccspake_mac}^{ccrng_state}BQ*C[0Q]},V_spake_ctx
T@"NSString",&,V_code
T@"NSData",&,V_salt
Tr^{ccspake_cp=},V_cp
Tr^{ccspake_mac=},V_mac
T@"NSData",&,V_w0
T@"NSData",&,V_w1
TQ,V_w_size
TQ,V_point_size
T@"_SFAESKey",&,V_session_key
TB,V_verified
initWithSalt:code:error:
common
setCommon:
_common
T@"SPAKE2Common",&,V_common
generateCodeWithError:
getCode
context
digestOperation
digest:
supportsSecureCoding
outputSize
blockSize
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
copyWithZone:
encodeWithCoder:
initWithCoder:
TB,R
addData:
hashValue
T@"NSData",R,C
Tq,R
_secKeyECDSAAlgorithm
_ccDigestInfo
secKeyECDSAAlgorithm
Tr^{__CFString=},R,N,G_secKeyECDSAAlgorithm
ccDigestInfo
Tr^{ccdigest_info=QQQQ*^v^?^?i},R,N,G_ccDigestInfo
_sha1DigestOperationInternal
_sha224DigestOperationInternal
_sha256DigestOperationInternal
_sha384DigestOperationInternal
_sha512DigestOperationInternal
_md5DigestOperationInternal
generateMaskWithLength:data:error:
initWithDigestOperation:
setDigestOperation:
_mgf1OperationInternal
T@"<SFDigestOperation>",C,N
generateBytesWithLength:key:error:
_hmacPseudoRandomFunctionInternal
data
signature
keySpecifier
maskGenerationFunction
encryptionOperation
initWithData:signature:
_signedDataInternal
T@"NSData",R
sign:withKey:error:
verify:withKey:error:
signingKeySpecifier
T@"_SFKeySpecifier",R,C,N
initWithKeySpecifier:
initWithKeySpecifier:digestOperation:
setSigningKeySpecifier:
_rsaSigningOperationInternal
T@"_SFRSAKeySpecifier",C,N
initWithKeySpecifier:digestOperation:maskGenerationFunction:
setMaskGenerationFunction:
_pssSigningOperationInternal
T@"<SFMaskGenerationFunction>",C,N
_x962SigningOperationInternal
_digestOperation
T@"_SFECKeySpecifier",C,N
T@"<SFDigestOperation>",C,V_digestOperation
_defaultMacOperation
_messageAuthenticationCodeOperationInternal
T@"_SFKeySpecifier",R,C,D,N
initWithEncryptionOperation:
setEncryptionOperation:
_cmacOperationInternal
T@"SFSymmetricEncryptionOperation",C,N
_hmacOperationInternal
bundleID
accessControlEntryFlags
initWithBundleID:owner:canRead:canWrite:
isOwner
setOwner:
canRead
setCanRead:
canWrite
setCanWrite:
setBundleID:
_accessControlEntryInternal
T@"NSString",C,N
owner
TB,N,GisOwner
TB,N
accessPolicyWithSecAccessibility:error:
initWithAccessibility:sharingPolicy:
secAccessibilityAttributes
accessibility
setAccessibility:
sharingPolicy
setSharingPolicy:
accessGroup
setAccessGroup:
accessControlList
setAccessControlList:
_accessibility
_sharingPolicy
_accessGroup
_accessControlList
Tr^{__CFDictionary=},R,N
T@"NSArray",C,N,V_accessControlList
T{?=q{?=Qq}},N,V_accessibility
Tq,N,V_sharingPolicy
T@"NSString",C,N,V_accessGroup
minimumCreationDate
maximumCreationDate
minimumModificationDate
maximumModificationDate
serviceIdentifiers
usernames
_initWithPrimaryServiceIdentifier:supplementaryServiceIdentiifers:
supplementaryServiceIdentifiers
setSupplementaryServiceIdentifiers:
localizedLabel
setLocalizedLabel:
localizedDescription
setLocalizedDescription:
customAttributes
setCustomAttributes:
_setPersistentIdentifier:
_setCreationDate:
_setModificationDate:
_setKeyclass:
_keyclass
_setAccessGroup:
_setChangeToken:
_changeToken
primaryServiceIdentifier
setPrimaryServiceIdentifier:
persistentIdentifier
modificationDate
creationDate
_primaryServiceIdentifier
_supplementaryServiceIdentifiers
_label
_description
_persistentIdentifier
_creationDate
_modificationDate
_customAttributes
T@"NSString",C,N,S_setPersistentIdentifier:,V_persistentIdentifier
T@"NSDate",C,N,S_setCreationDate:,V_creationDate
T@"NSDate",C,N,S_setModificationDate:,V_modificationDate
keyclass
Ti,N,G_keyclass,S_setKeyclass:
T@"NSString",&,N,G_accessGroup,S_setAccessGroup:
changeToken
T@"NSData",&,N,G_changeToken,S_setChangeToken:
T@"_SFServiceIdentifier",&,N,V_primaryServiceIdentifier
T@"NSArray",&,N
T@"NSString",C,N,V_label
T@"NSString",C,N,V_description
T@"NSDictionary",C,N,V_customAttributes
initWithUsername:password:primaryServiceIdentifier:
initWithUsername:password:primaryServiceIdentifier:supplementaryServiceIdentifiers:
_initWithUsername:primaryServiceIdentifier:supplementaryServiceIdentifiers:
descriptionShowingPassword:
username
setUsername:
usePasswordWithHandler:
setPassword:
_cachedPassword
_username
_password
password
T@"NSString",C,N,G_cachedPassword
setMinimumCreationDate:
setMaximumCreationDate:
setMinimumModificationDate:
setMaximumModificationDate:
setServiceIdentifiers:
setUsernames:
attributesPredicate
setAttributesPredicate:
_credentialSearchFilterInternal
_attributesPredicate
T@"NSDate",&,N
T@"NSArray<_SFServiceIdentifier>",&,N
T@"NSPredicate",&,N,V_attributesPredicate
serviceID
type
defaultCredentialStore
_serverConnectionWithError:
_init
serverProxyWithResultHandler:
serverProxyWithDualResultHandler:
serverProxyWithBooleanHandler:
addCredential:withAccessPolicy:resultHandler:
fetchPasswordCredentialForPersistentIdentifier:withResultHandler:
lookupCredentialsForServiceIdentifiers:withResultHandler:
removeCredentialWithPersistentIdentifier:withResultHandler:
replaceOldCredential:withNewCredential:resultHandler:
replaceCredential:withNewCredential:resultHandler:
_credentialStoreInternal
_serverConnection
_serverError
serviceIdentifierForURL:
serviceIdentifierForDomain:
serviceIdentifierForBundleID:
serviceIdentifierForAccessGroup:
serviceIdentifierForCustomString:
initWithServiceID:forType:
_lookupKey
_serviceIdentifierInternal
lookupKey
T@"NSString",R,C,N,G_lookupKey
T@"NSString",R,C,N
Tq,R,N
bitSize
curve
keyDomain
specifiers
domains
attributes
keyData
secKey
privateKeyDomain
keyClass
_keySpecifierInternal
keyLengthInBytes
_symmetricKeySpecifierInternal
_tripleDESKeySpecifierInternal
initWithBitSize:
setBitSize:
_aesKeySpecifierInternal
Tq,N
_asymmetricKeySpecifierInternal
_rsaKeySpecifierInternal
initWithCurve:
setCurve:
_ecKeySpecifierInternal
alloc
initWithSpecifier:
initWithSpecifier:domain:
setKeySpecifier:
_symmetricKeyAttributesInternal
T@"NSString",R,C,N,VpersistentIdentifier
_asymmetricKeySpecifier
_asymmetricKeyDomain
T@"_SFKeySpecifier",R,C,N,V_asymmetricKeySpecifier
T@"NSString",R,C,N,V_asymmetricKeyDomain
setSpecifiers:
setDomains:
_keySearchFilterInternal
T@"NSArray",C,N
_attributesClass
_specifierForSecKey:
attributesClass
T#,R,N,G_attributesClass
initWithData:specifier:error:
initWithAttributes:
initRandomKeyWithSpecifier:
_keyInternal
_keyData
T@"NSData",R,N,V_keyData
initRandomKeyWithSpecifier:error:
_symmetricKeyInternal
T@"_SFSymmetricKeySpecifier",R,C,D,N
_tripleDESKeyInternal
_aesKeyInternal
T@"_SFAESKeySpecifier",R,C,D,N
_secKeyCreationAttributesForSpecifier:
initWithSecKey:
_secKey
_publicKeyInternal
T^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v},R,N,G_secKey
initRandomKeyPairWithSpecifier:
initRandomKeyPairWithSpecifier:privateKeyDomain:
publicKey
_keyPairInternal
T@"_SFPublicKey",R,N
_rsaPublicKeyInternal
_rsaKeyPairInternal
keyWithSubjectPublicKeyInfo:
performWithCCKey:
encodeSubjectPublicKeyInfo
_ecPublicKeyInternal
T@"_SFECKeySpecifier",R,C,D,N
_ecKeyPairInternal
messageID
numBytesRolled
generateIVWithLength:error:
initWithRandomMessageID
initWithMessageID:
setMessageID:
_incrementingIVGeneratorInternal
T@"NSData",C,N
encoding
encryptionPassphrase
options
setEncoding:
setEncryptionPassphrase:
_codingOptionsInternal
initWithOptions:
encodeTopLevelValue:error:
setOptions:
_coderInternal
T@"SFCodingOptions",C,N
decodeValueOfType:fromData:error:
_decoderInternal
keyPair
certificate
certificateType
subject
issuerName
serialNumber
secCertificate
identityName
hasCertificate
certificateSerialNumbers
certificateTypes
keySpecifiers
initWithPublicKey:
initWithKeyPair:
initWithPublicKey:certificate:
initWithKeyPair:certificate:
setKeyPair:
setCertificate:
_identityInternal
T@"_SFCertificate",&,N
T@"_SFKeyPair",&,N
T@"SFIdentityAttributes",R,N
initWithSecCertificate:
_certificateInternal
T^{__SecCertificate=},R,N
T@"NSString",R,N
T@"NSData",R,N
setIdentityName:
_identityAttributesInternal
_privateKeyDomain
T@"_SFAsymmetricKeySpecifier",R,C,N
TB,R,N
T@"NSString",R,C,N,V_privateKeyDomain
setCertificateSerialNumbers:
setCertificateTypes:
setKeySpecifiers:
_identitySearchFilterInternal
resultType
value
error
fetchResultWithValue:
fetchResultWithError:
initWithValue:
initWithError:
fetchValueWithAuthenticationContext:resultHandler:
_keychainFetchResultInternal
T@,R
T@"NSError",R
_identityFetchResult
T@"_SFIdentity",R,D
_keyFetchResult
T@"_SFSymmetricKey",R,D
_dataFetchResult
T@"SFKeychainData",R,D
defaultManager
defaultOverCommitManager
credentialStore
initManager
initOverCommitManager
_symmetricKeyAttributesForIdentifier:accessPolicy:key:
setKey:forIdentifier:accessPolicy:resultHandler:
_commonKeyAttributesForIdentityIdentifier:accessPolicy:key:
_privateKeyAttributesForIdentityIdentifier:accessPolicy:key:
_publicKeyAttributesForIdentityIdentifier:accessPolicy:key:
_certificateAttributesForIdentityIdentifier:accessPolicy:
setIdentity:forIdentifier:accessPolicy:resultHandler:
setData:forIdentifier:accessPolicy:resultHandler:
keyForIdentifier:specifier:resultHandler:
foundPrivateKey:certificate:
findPrivateKeyWithIdentifier:certificate:attributes:result:
publicKeyLookupWithIdentifier:certificate:result:
identityForIdentifier:
identityForIdentifier:resultHandler:
dataForIdentifier:resultHandler:
keysFilteredBy:resultHandler:
identitiesFilteredBy:resultHandler:
removeItemWithIdentifier:resultHandler:
keychainManagerQueue
setKeychainManagerQueue:
keychainReplyQueue
setKeychainReplyQueue:
_credentialStore
_keychainManagerQueue
_keychainReplyQueue
T@"NSObject<OS_dispatch_queue>",&,V_keychainManagerQueue
T@"NSObject<OS_dispatch_queue>",&,V_keychainReplyQueue
T@"_SFCredentialStore",R,V_credentialStore
_keychainDataAttributesInternal
initWithData:
setAttributes:
_keychainDataInternal
T@"SFKeychainDataAttributes",&,N
rpcAddCredential:withAccessPolicy:reply:
rpcFetchPasswordCredentialForPersistentIdentifier:reply:
rpcLookupCredentialsForServiceIdentifiers:reply:
rpcRemoveCredentialWithPersistentIdentifier:reply:
rpcReplaceOldCredential:withNewCredential:reply:
rpcReplaceCredential:withNewCredential:reply:
revocationMethods
networkLookup
trustPolicy
revocationPolicy
applicationAnchorCertificates
trustEvaluatorFlags
clientName
serverName
initWithRevocationMethods:networkLookup:
setRevocationMethods:
setNetworkLookup:
_revocationPolicyInternal
TQ,N
initWithTrustPolicy:
initWithTrustPolicy:revocationPolicy:
initWithTrustPolicy:revocationPolicy:applicationAnchorCertificates:allowCertificateFetching:trustSystemAnchorCertificates:
evaluateCertificateChain:forDate:resultHandler:
setTrustPolicy:
setRevocationPolicy:
setApplicationAnchorCertificates:
allowCertificateFetching
setAllowCertificateFetching:
trustSystemAnchorCertificates
setTrustSystemAnchorCertificates:
_trustEvaluatorInternal
_allowCertificateFetching
_trustSystemAnchorCertificates
_trustPolicy
_revocationPolicy
_applicationAnchorCertificates
T@"SFTrustPolicy",C,N,V_trustPolicy
T@"SFRevocationPolicy",C,N,V_revocationPolicy
T@"NSArray",C,N,V_applicationAnchorCertificates
TB,N,V_allowCertificateFetching
TB,N,V_trustSystemAnchorCertificates
evaluateCertificateChain:error:
_trustPolicyInternal
_x509TrustPolicyInternal
initWithClientName:
setClientName:
_sslClientTrustPolicyInternal
initWithServerName:
setServerName:
_sslServerTrustPolicyInternal
iterationCount
pseudoRandomFunction
localKeyPair
remotePublicKey
mode
sharedSecretOperation
keySource
_randomSalt
deriveKeyWithSpecifier:fromKeySource:error:
initWithPseudoRandomFunction:iterationCount:salt:
setIterationCount:
setPseudoRandomFunction:
_pbkdf2OperationInternal
T@"<SFPseudoRandomFunction>",C,N
initWithLocalKeyPair:remotePublickKey:
setLocalKeyPair:
setRemotePublicKey:
_ecdhKeySourceInternal
T@"_SFECKeyPair",&,N
T@"_SFECPublicKey",&,N
_defaultMode
_defaultOperation
initWithMode:
setMode:
_ecdhOperationInternal
initWithSharedSecretOperation:
initWithSharedSecretOperation:digestOperation:
setSharedSecretOperation:
_x963KeyDerivationOperationInternal
T@"<SFKeyDerivingOperation>",C,N
ciphertext
authenticationCode
initializationVector
ciphertextKey
ephemeralSenderPublicKey
authenticationMode
authenticationCodeLength
keyWrappingOperation
sessionEncryptionOperation
diffieHellmanOperation
initWithCiphertext:
_ciphertextInternal
initWithCiphertext:authenticationCode:initializationVector:
_authenticatedCiphertextInternal
initWithCiphertext:ciphertextKey:
_wrappedKeyCiphertextInternal
T@"_SFCiphertext",R
initWithCiphertext:ephemeralSenderPublicKey:authenticationCode:
_iesCiphertextInternal
T@"_SFECPublicKey",R
_defaultEncryptionMode
_defaultEncryptionOperation
encrypt:withKey:error:
decrypt:withKey:error:
encryptionKeySpecifier
initWithKeySpecifier:mode:
encrypt:withKey:ivGenerator:error:
setEncryptionKeySpecifier:
_symmetricEncryptionOperationInternal
T@"_SFSymmetricKeySpecifier",C,N
_tripleDESEncryptionOperationInternal
T@"_SFTripleDESKeySpecifier",C,D,N
_aesEncryptionOperationInternal
T@"_SFAESKeySpecifier",C,D,N
_defaultAuthenticationMode
initWithKeySpecifier:authenticationMode:
encrypt:withKey:additionalAuthenticatedData:error:
encrypt:withKey:additionalAuthenticatedData:ivGenerator:error:
decrypt:withKey:additionalAuthenticatedData:error:
setAuthenticationMode:
setAuthenticationCodeLength:
_authenticatedEncryptionOperationInternal
T@"_SFAESKeySpecifier",C,N
_rsaEncryptionOperationInternal
_pkcs1EncryptionOperationInternal
initWithKeySpecifier:maskGenerationFunction:
_oaepEncryptionOperationInternal
initWithKeyWrappingOperation:
initWithKeyWrappingOperation:sessionEncryptionOperation:
setKeyWrappingOperation:
setSessionEncryptionOperation:
_wrappedKeyEncryptionOperationInternal
T@"SFRSAEncryptionOperation",C,N
initialize
initWithCurve:diffieHellmanOperation:encryptionOperation:digestOperation:
_ccDigestInfoWithError:
setDiffieHellmanOperation:
_iesOperationInternal
_curve
T@"_SFECDHOperation",C,N
T@"_SFAuthenticatedEncryptionOperation",C,N
Tq,V_curve
@24@0:8^@16
B32@0:8@16^@24
B16@0:8
@16@0:8
@32@0:8@16^@24
@"NSData"24@0:8^@16
B32@0:8@"NSData"16^@24
@"_SFAESKey"16@0:8
@"NSData"32@0:8@"NSData"16^@24
@32@0:8@16@24
B24@0:8^@16
v16@0:8
^{ccrng_state=^?}16@0:8
v24@0:8^{ccrng_state=^?}16
^{ccspake_ctx=^{ccspake_cp}^{ccspake_mac}^{ccrng_state}BQ*C[0Q]}16@0:8
v24@0:8^{ccspake_ctx=^{ccspake_cp}^{ccspake_mac}^{ccrng_state}BQ*C[0Q]}16
v24@0:8@16
r^{ccspake_cp=}16@0:8
v24@0:8r^{ccspake_cp=}16
r^{ccspake_mac=}16@0:8
v24@0:8r^{ccspake_mac=}16
Q16@0:8
v24@0:8Q16
v20@0:8B16
^{ccrng_state=^?}
^{ccspake_ctx=^{ccspake_cp}^{ccspake_mac}^{ccrng_state}BQ*C[0Q]}
@"NSString"
@"NSData"
r^{ccspake_cp=}
r^{ccspake_mac=}
@"_SFAESKey"
@40@0:8@16@24^@32
@"SPAKE2Common"
{CC_SHA1state_st="h0"I"h1"I"h2"I"h3"I"h4"I"Nl"I"Nh"I"data"[16I]"num"i}
{CC_SHA256state_st="count"[2I]"hash"[8I]"wbuf"[16I]}
{CC_SHA512state_st="count"[2Q]"hash"[8Q]"wbuf"[16Q]}
{CC_MD5state_st="A"I"B"I"C"I"D"I"Nl"I"Nh"I"data"[16I]"num"i}
@"<SFDigestOperation>"
@24@0:8@16
q16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8^{_NSZone=}16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v24@0:8@"NSData"16
@"NSData"16@0:8
@"NSData"24@0:8@"NSData"16
r^{__CFString=}16@0:8
r^{ccdigest_info=QQQQ*^v^?^?i}16@0:8
@40@0:8q16@24@32
@"NSData"40@0:8q16@"NSData"24@"NSError"32
@"NSData"40@0:8q16@"_SFKey"24@"NSError"32
@"_SFRSAKeySpecifier"
@"<SFMaskGenerationFunction>"
@"_SFECKeySpecifier"
@"<SFDigestOperationInternal>"
@"SFSymmetricEncryptionOperation"
@"_SFSignedData"40@0:8@"NSData"16@"_SFKey"24^@32
@"NSData"40@0:8@"_SFSignedData"16@"_SFKey"24^@32
@"_SFKeySpecifier"16@0:8
@40@0:8@16@24@32
{?="isOwner"b1"canRead"b1"canWrite"b1}
@36@0:8@16B24B28B32
@32@0:8^{__CFString=}16^@24
@48@0:8{?=q{?=Qq}}16q40
r^{__CFDictionary=}16@0:8
{?=q{?=Qq}}16@0:8
v40@0:8{?=q{?=Qq}}16
v24@0:8q16
{?="mode"q"authenticationPolicy"{?="authenticationRequirements"Q"subsetCount"q}}
@"NSArray"
@"NSDate"
@"NSArray<_SFServiceIdentifier>"
v20@0:8i16
i16@0:8
@"_SFServiceIdentifier"
@"NSDictionary"
@48@0:8@16@24@32@40
@20@0:8B16
v24@0:8@?16
@"NSPredicate"
@24@0:8@?16
v40@0:8@16@24@?32
v32@0:8@16@?24
@"<NSXPCProxyCreating>"
@"NSError"
@32@0:8@16q24
@"_SFKeySpecifier"
@"<_SFKeyAttributes>"
^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}
@24@0:8q16
v24@0:8@"NSString"16
@24@0:8^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16
^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16@0:8
@"NSMutableData"
@32@0:8q16^@24
@"NSData"32@0:8q16^@24
@"SFCodingOptions"
@40@0:8#16@24@32
@"_SFPublicKey"
@"_SFKeyPair"
@"_SFCertificate"
@"SFIdentityAttributes"
^{__SecCertificate=}
@24@0:8^{__SecCertificate=}16
^{__SecCertificate=}16@0:8
@"SFKeychainDataAttributes"
v48@0:8@16@24@32@?40
^{__CFDictionary=}40@0:8@16@24@32
^{__CFDictionary=}32@0:8@16@24
@32@0:8^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16@24
^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}48@0:8@16^@24^^{__CFDictionary}32^i40
@36@0:8@16@24i32
@"_SFCredentialStore"
@"NSObject<OS_dispatch_queue>"
v40@0:8@"_SFCredential"16@"_SFAccessPolicy"24@?<v@?@"NSString"@"NSError">32
v32@0:8@"NSString"16@?<v@?@"_SFPasswordCredential"@"NSString"@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v40@0:8@"_SFCredential"16@"_SFCredential"24@?<v@?@"NSString"@"NSError">32
v40@0:8@"_SFCredential"16@"_SFCredential"24@?<v@?B@"NSError">32
@"SFTrustPolicy"
@"SFRevocationPolicy"
{?="allowCertificateFetching"b1"trustSystemAnchorCertificates"b1}
@32@0:8Q16q24
@48@0:8@16@24@32B40B44
@"<SFPseudoRandomFunction>"
@"_SFECKeyPair"
@"_SFECPublicKey"
@"<SFKeyDerivingOperation>"
@"_SFSymmetricKey"40@0:8@"_SFSymmetricKeySpecifier"16@24^@32
@40@0:8@16q24@32
@"_SFCiphertext"
@"_SFSymmetricKeySpecifier"
@"_SFAESKeySpecifier"
@"SFRSAEncryptionOperation"
@"_SFECDHOperation"
@"_SFCiphertext"40@0:8@"NSData"16@"_SFKey"24^@32
@"NSData"40@0:8@"_SFCiphertext"16@"_SFKey"24^@32
@48@0:8@16@24@32^@40
@56@0:8@16@24@32@40^@48
@48@0:8q16@24@32@40
r^{ccdigest_info=QQQQ*^v^?^?i}24@0:8^@16
