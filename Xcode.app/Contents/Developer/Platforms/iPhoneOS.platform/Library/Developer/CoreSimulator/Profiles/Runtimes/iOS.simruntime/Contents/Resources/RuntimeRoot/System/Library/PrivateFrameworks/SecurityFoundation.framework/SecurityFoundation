@(#)PROGRAM:SecurityFoundation  PROJECT:SecurityFoundation-1
SFCoreCryptoErrorDomain
sscrypt_storage_size params failed
ccscrypt failed: %d
ccspake_prover_init failed: %d
ccspake_generate_L failed: %d
ccspake_verifier_init failed: %d
ccspake_kex_generate failed: %d
ccspake_kex_process failed: %d
ccspake_mac_generate failed: %d
ccspake_mac_verify_and_get_session_key failed: %d
_data
_signature
Failed to deserialize object of type %@
invalid secAccessibility for SFAccessPolicy: %@
SFAccessPolicyAccessibilityMode
SFAccessPolicySharingMode
failed to deserialize SFAccessPolicy instance
SFAccessPolicyAccessGroup
SFAccessPolicy does not support SFAccessibleWithAuthentication at present - please file a radar if you need it
SFCredentialPrimaryServiceIdentifier
SFCredentialSupplementaryServiceIdentifiers
SFCredentialLocalizedLabel
SFCredentialLocalizedDescription
SFCredentialPersistentIdentifier
SFCredentialCreationDate
SFCredentialModificationDate
SFCredentialCustomAttributes
SFCredentialKeyclass
SFCredentialAccessGroup
SFCredentialChangeToken
failed to decode instance of SFCredential
SFCredentialUsername
SFCredentialPassword
no username decoded for SFCredential instance
<redacted>
 Username:%@
 Password: %@
 primary service identifier: %@
 supplementary service identifiers:
v32@?0@"_SFPasswordCredential"8@"NSString"16@"NSError"24
com.apple.security.sfkeychainserver
Could not create connection to security server
v16@?0@"NSError"8
SFServiceIdentifierServiceID
SFServiceIdentifierType
secure decade failed for instance of SFServiceIdentifier
(%@) - %@
domain
bundleID
accessGroup
custom
unknown
SFKeyDomainCPU
SFKEyDomainSEP
SFKey.m
%@ key specifiers are not yet supported
%@ bitSize: %ld
unexected AES key bit size
nistp521-compressed
 curve: %@
attempt to get attributes class from abstract base class SFKey - must be provided by subclass
attempt to get sec key specifier from abstract base class SFKey - must be provided by subclass
attempt to initialize abstract base class %@ - initialize a concrete subclass instead
attempt to creata random key for abstract base class %@ - initialize a concrete subclass instead
Invalid parameter not satisfying: %@
specifier
v24@?0^v8Q16
data
keySpecifier
subclass %@ must implement %@
secKey
unanticipated bitsize for EC key: %d
compressed elliptic curves are not presently supported
unknown SFEllipticCurve value: %d
could not get a random initialization vector
SFCryptoServicesErrorDomain
SFCryptoServicesErrorDigest
v8@?0
SFKeychainManager Queue
SFKeychainManager over commit Queue
SFEncryptionOperation.m
ciphertext
SFCiphertext
authenticationCode
initializationVector
SFAuthenticationCode
SFInitializationVector
Auth Code: %@
IV: %@
data: %@
ciphertextKey
ephemeralSenderPublicKey
SFEphemeralSenderPublicKeyExternaRepresentation
SFIESAuthenticationCode
unsupported authentication mode - at present only SFAuthenticatedEncryptionModeGCM is supported
currently only AES keys are supported for SFAuthenticatedEncryptionOperation
maskGenerationFunction
plaintext
@24@?0^{ccec_pub_ctx=^{ccec_cp}[0{ccec_projective_point=[1Q]}]}8@"NSError"16
@24@?0^{ccec_full_ctx=^{ccec_cp}[0{ccec_projective_point=[1Q]}]}8@"NSError"16
SFKeychainErrorDomain
SFKeychainErrorKeyType
SFCredentialStore: attempting to access lookupKey for service identifier with unknown type: %d
SPAKE2Common
SPAKE2Protocol
SPAKE2Prover
SPAKE2Verifier
SFSHA1DigestOperation_Ivars
SFSHA224DigestOperation_Ivars
SFSHA256DigestOperation_Ivars
SFSHA384DigestOperation_Ivars
SFSHA512DigestOperation_Ivars
SFMD5DigestOperation_Ivars
SFMaskGenerationFunction1_Ivars
SFHMACPseudoRandomFunction_Ivars
_SFSHA1DigestOperation
SFDigestOperationInternal
SFDigestOperation
NSObject
NSCopying
NSSecureCoding
NSCoding
_SFSHA224DigestOperation
_SFSHA256DigestOperation
_SFSHA384DigestOperation
_SFSHA512DigestOperation
_SFMD5DigestOperation
SFMaskGenerationFunction1
SFMaskGenerationFunction
SFHMACPseudoRandomFunction
SFPseudoRandomFunction
SFSignedData_Ivars
SFRSASigningOperation_Ivars
SFRSA_PSSSigningOperation_Ivars
SFEC_X962SigningOperation_Ivars
SFCMACOperation_Ivars
SFHMACOperation_Ivars
_SFSignedData
SFRSASigningOperation
SFSigningOperation
SFRSA_PSSSigningOperation
_SFEC_X962SigningOperation
SFMessageAuthenticationCodeOperation
SFCMACOperation
SFHMACOperation
SFAccessControlEntry_Ivars
SFAccessControlEntry
_SFAccessPolicy
SFCredentialSearchFilter_Ivars
_SFCredential
_SFPasswordCredential
SFCredentialSearchFilter
SFServiceIdentifier_Ivars
_SFCredentialStore
_SFServiceIdentifier
SFAESKeySpecifier_Ivars
SFRSAKeySpecifier_Ivars
SFECKeySpecifier_Ivars
SFSymmetricKeyAttributes_Ivars
SFKeySearchFilter_Ivars
SFKey_Ivars
SFSymmetricKey_Ivars
SFKeyPair_Ivars
SFPublicKey_Ivars
_SFKeySpecifier
_SFSymmetricKeySpecifier
_SFTripleDESKeySpecifier
_SFAESKeySpecifier
_SFAsymmetricKeySpecifier
_SFRSAKeySpecifier
_SFECKeySpecifier
SFSymmetricKeyAttributes
_SFKeyAttributes
SFKeychainItemAttributes
_SFAsymmetricKeyAttributes
SFKeySearchFilter
_SFKey
_SFSymmetricKey
SFTripleDESKey
_SFAESKey
_SFPublicKey
_SFKeyPair
SFRSAPublicKey
SFRSAKeyPair
_SFECPublicKey
_SFECKeyPair
SFIncrementingIVGenerator_Ivars
SFIncrementingIVGenerator
SFIVGenerator
SFCodingOptions_Ivars
SFCoder_Ivars
SFDecoder_Ivars
SFCodingOptions
SFCoder
SFDecoder
SFIdentity_Ivars
SFCertificate_Ivars
SFIdentityAttributes_Ivars
SFIdentitySearchFilter_Ivars
_SFIdentity
_SFCertificate
SFIdentityAttributes
SFIdentitySearchFilter
SFKeychainFetchResult_Ivars
SFKeychainDataAttributes_Ivars
SFKeychainData_Ivars
_SFKeychainFetchResult
_SFKeychainIdentityFetchResult
_SFKeychainKeyFetchResult
SFKeychainDataFetchResult
_SFKeychainManager
SFKeychainDataAttributes
SFKeychainData
SFKeychainServerProtocol
SFRevocationPolicy_Ivars
SFTrustEvaluator_Ivars
SFSSLClientTrustPolicy_Ivars
SFSSLServerTrustPolicy_Ivars
SFRevocationPolicy
SFTrustEvaluator
SFTrustPolicy
SFX509TrustPolicy
SFSSLClientTrustPolicy
SFSSLServerTrustPolicy
SFPBKDF2Operation_Ivars
SFECDHKeySource_Ivars
SFECDHOperation_Ivars
SFX963KeyDerivationOperation_Ivars
SFPBKDF2Operation
SFKeyDerivingOperation
_SFECDHKeySource
_SFECDHOperation
SFX963KeyDerivationOperation
SFCiphertext_Ivars
SFAuthenticatedCiphertext_Ivars
SFWrappedKeyCiphertext_Ivars
SFIESCiphertext_Ivars
SFSymmetricEncryptionOperation_Ivars
SFAuthenticatedEncryptionOperation_Ivars
SFRSAEncryptionOperation_Ivars
SFRSA_OAEPEncryptionOperation_Ivars
SFRSA_WrappedKeyEncryptionOperation_Ivars
SFIESOperation_Ivars
_SFCiphertext
_SFAuthenticatedCiphertext
SFWrappedKeyCiphertext
_SFIESCiphertext
SFSymmetricEncryptionOperation
_SFEncryptionOperation
SFTripleDESEncryptionOperation
SFAESEncryptionOperation
_SFAuthenticatedEncryptionOperation
SFRSAEncryptionOperation
SFRSA_PKCS1EncryptionOperation
SFRSA_OAEPEncryptionOperation
SFRSA_WrappedKeyEncryptionOperation
_SFIESOperation
T@"NSArray",&,N
T#,R
TB,N,V_allowCertificateFetching
T@"<SFDigestOperation>",C,N
_aesEncryptionOperationInternal
T@"<SFKeyDerivingOperation>",C,N
_asymmetricKeySpecifierInternal
T@"<SFPseudoRandomFunction>",C,N
_common
T@"NSArray",C,N,V_applicationAnchorCertificates
_credentialSearchFilterInternal
T@"NSData",&,N,G_changeToken,S_setChangeToken:
_keychainDataAttributesInternal
T@"NSData",&,V_w0
_secKey
T@"NSData",C,N
T@"NSData",R,C
_w_size
T@"NSData",R,N,V_keyData
bitSize
T@"NSDate",C,N,S_setCreationDate:,V_creationDate
certificateType
T@"NSDictionary",C,N,V_customAttributes
credentialStore
T@"NSObject<OS_dispatch_queue>",&,V_keychainManagerQueue
digest:
T@"NSPredicate",&,N,V_attributesPredicate
domains
T@"NSString",&,V_code
getCode
T@"NSString",C,N,G_cachedPassword
initWithCiphertext:ephemeralSenderPublicKey:authenticationCode:
T@"NSString",C,N,V_accessGroup
isOwner
T@"NSString",C,N,V_label
keyData
T@"NSString",R,C,N
T@"NSString",R,C,N,V_asymmetricKeyDomain
release
T@"NSString",R,C,N,VpersistentIdentifier
T@"SFCodingOptions",C,N
setCertificate:
T@"SFKeychainData",R,D
setRng:
T@"SFRSAEncryptionOperation",C,N
setTrustPolicy:
T@"SFSymmetricEncryptionOperation",C,N
subject
T@"SPAKE2Common",&,V_common
.cxx_destruct
T@"NSArray",C,N
T#,R,N,G_attributesClass
TQ,V_point_size
T@"<SFDigestOperation>",C,V_digestOperation
_aesKeyInternal
T@"<SFMaskGenerationFunction>",C,N
_cachedPassword
T@"NSArray",C,N,V_accessControlList
T@"NSArray<_SFServiceIdentifier>",&,N
_keyFetchResult
T@"NSData",&,V_salt
_rsaEncryptionOperationInternal
T@"NSData",&,V_w1
_symmetricKeyAttributesInternal
T@"NSData",R
T@"NSData",R,N
attributesClass
T@"NSDate",&,N
canRead
T@"NSDate",C,N,S_setModificationDate:,V_modificationDate
context
T@"NSError",R
dealloc
T@"NSObject<OS_dispatch_queue>",&,V_keychainReplyQueue
digestOperation
T@"NSString",&,N,G_accessGroup,S_setAccessGroup:
evaluateCertificateChain:error:
T@"NSString",C,N
initRandomKeyPairWithSpecifier:
T@"NSString",C,N,S_setPersistentIdentifier:,V_persistentIdentifier
initWithSecKey:
T@"NSString",C,N,V_description
isProxy
T@"NSString",R,C
keyPair
T@"NSString",R,C,N,G_lookupKey
options
T@"NSString",R,C,N,V_privateKeyDomain
remotePublicKey
T@"NSString",R,N
setAccessGroup:
T@"SFIdentityAttributes",R,N
setMac:
T@"SFKeychainDataAttributes",&,N
setSession_key:
T@"SFRevocationPolicy",C,N,V_revocationPolicy
setWithObjects:
T@"SFTrustPolicy",C,N,V_trustPolicy
supplementaryServiceIdentifiers
T@"_SFAESKey",&,V_session_key
T@"_SFAESKeySpecifier",C,D,N
T@"_SFAESKeySpecifier",C,N
T@"_SFAESKeySpecifier",R,C,D,N
T@"_SFAsymmetricKeySpecifier",R,C,N
T@"_SFAuthenticatedEncryptionOperation",C,N
T@"_SFCertificate",&,N
T@"_SFCiphertext",R
T@"_SFCredentialStore",R,V_credentialStore
T@"_SFECDHOperation",C,N
T@"_SFECKeyPair",&,N
T@"_SFECKeySpecifier",C,N
T@"_SFECKeySpecifier",R,C,D,N
T@"_SFECPublicKey",&,N
T@"_SFECPublicKey",R
T@"_SFIdentity",R,D
T@"_SFKeyPair",&,N
T@"_SFKeySpecifier",R,C,D,N
T@"_SFKeySpecifier",R,C,N
T@"_SFKeySpecifier",R,C,N,V_asymmetricKeySpecifier
T@"_SFPublicKey",R,N
T@"_SFRSAKeySpecifier",C,N
T@"_SFServiceIdentifier",&,N,V_primaryServiceIdentifier
T@"_SFSymmetricKey",R,D
T@"_SFSymmetricKeySpecifier",C,N
T@"_SFSymmetricKeySpecifier",R,C,D,N
T@"_SFTripleDESKeySpecifier",C,D,N
T@,R
TB,N
TB,N,GisOwner
TB,N,V_trustSystemAnchorCertificates
TB,R
TB,R,N
TB,V_verified
TQ,N
TQ,R
TQ,V_w_size
T^{__SecCertificate=},R,N
T^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v},R,N,G_secKey
T^{ccrng_state=^?},V_rng
T^{ccspake_ctx=^{ccspake_cp}^{ccspake_mac}^{ccrng_state}BQ*C[0Q]},V_spake_ctx
Ti,N,G_keyclass,S_setKeyclass:
Tq,N
Tq,N,V_sharingPolicy
Tq,R
Tq,R,N
Tq,V_curve
Tr^{__CFDictionary=},R,N
Tr^{__CFString=},R,N,G_secKeyECDSAAlgorithm
Tr^{ccdigest_info=QQQQ*^v^?^?i},R,N,G_ccDigestInfo
Tr^{ccspake_cp=},V_cp
Tr^{ccspake_mac=},V_mac
T{?=q{?=Qq}},N,V_accessibility
UTF8String
_accessControlEntryInternal
_accessControlList
_accessGroup
_accessibility
_aesKeySpecifierInternal
_allowCertificateFetching
_applicationAnchorCertificates
_asymmetricKeyDomain
_asymmetricKeySpecifier
_attributesClass
_attributesPredicate
_authenticatedCiphertextInternal
_authenticatedEncryptionOperationInternal
_ccDigestInfo
_ccDigestInfoWithError:
_certificateAttributesForIdentityIdentifier:accessPolicy:
_certificateInternal
_changeToken
_ciphertextInternal
_cmacOperationInternal
_code
_coderInternal
_codingOptionsInternal
_commonKeyAttributesForIdentityIdentifier:accessPolicy:key:
_creationDate
_credentialStore
_credentialStoreInternal
_curve
_customAttributes
_dataFetchResult
_decoderInternal
_defaultAuthenticationMode
_defaultEncryptionMode
_defaultEncryptionOperation
_defaultMacOperation
_defaultMode
_defaultOperation
_description
_digestOperation
_ecKeyPairInternal
_ecKeySpecifierInternal
_ecPublicKeyInternal
_ecdhKeySourceInternal
_ecdhOperationInternal
_hmacOperationInternal
_hmacPseudoRandomFunctionInternal
_identityAttributesInternal
_identityFetchResult
_identityInternal
_identitySearchFilterInternal
_iesCiphertextInternal
_iesOperationInternal
_incrementingIVGeneratorInternal
_init
_initWithPrimaryServiceIdentifier:supplementaryServiceIdentiifers:
_initWithUsername:primaryServiceIdentifier:supplementaryServiceIdentifiers:
_keyData
_keyInternal
_keyPairInternal
_keySearchFilterInternal
_keySpecifierInternal
_keychainDataInternal
_keychainFetchResultInternal
_keychainManagerQueue
_keychainReplyQueue
_keyclass
_label
_lookupKey
_mac
_md5DigestOperationInternal
_messageAuthenticationCodeOperationInternal
_mgf1OperationInternal
_modificationDate
_oaepEncryptionOperationInternal
_password
_pbkdf2OperationInternal
_persistentIdentifier
_pkcs1EncryptionOperationInternal
_point_size
_primaryServiceIdentifier
_privateKeyAttributesForIdentityIdentifier:accessPolicy:key:
_privateKeyDomain
_pssSigningOperationInternal
_publicKeyAttributesForIdentityIdentifier:accessPolicy:key:
_publicKeyInternal
_randomSalt
_revocationPolicy
_revocationPolicyInternal
_rng
_rsaKeyPairInternal
_rsaKeySpecifierInternal
_rsaPublicKeyInternal
_rsaSigningOperationInternal
_salt
_secKeyCreationAttributesForSpecifier:
_secKeyECDSAAlgorithm
_serverConnection
_serverConnectionWithError:
_serverError
_serviceIdentifierInternal
_session_key
_setAccessGroup:
_setChangeToken:
_setCreationDate:
_setKeyclass:
_setModificationDate:
_setPersistentIdentifier:
_sha1DigestOperationInternal
_sha224DigestOperationInternal
_sha256DigestOperationInternal
_sha384DigestOperationInternal
_sha512DigestOperationInternal
_sharingPolicy
_signedDataInternal
_spake_ctx
_specifierForSecKey:
_sslClientTrustPolicyInternal
_sslServerTrustPolicyInternal
_supplementaryServiceIdentifiers
_symmetricEncryptionOperationInternal
_symmetricKeyAttributesForIdentifier:accessPolicy:key:
_symmetricKeyInternal
_symmetricKeySpecifierInternal
_tripleDESEncryptionOperationInternal
_tripleDESKeyInternal
_tripleDESKeySpecifierInternal
_trustEvaluatorInternal
_trustPolicy
_trustPolicyInternal
_trustSystemAnchorCertificates
_username
_verified
_wrappedKeyCiphertextInternal
_wrappedKeyEncryptionOperationInternal
_x509TrustPolicyInternal
_x962SigningOperationInternal
_x963KeyDerivationOperationInternal
accessControlEntryFlags
accessControlList
accessGroup
accessPolicyWithSecAccessibility:error:
accessibility
addCredential:withAccessPolicy:resultHandler:
addData:
addEntriesFromDictionary:
alloc
allocWithZone:
allowCertificateFetching
applicationAnchorCertificates
archivedDataWithRootObject:requiringSecureCoding:error:
array
arrayWithObjects:count:
attributes
attributesPredicate
authenticationCode
authenticationCodeLength
authenticationMode
autorelease
blockSize
bundleID
bytes
canWrite
ccDigestInfo
certificate
certificateSerialNumbers
certificateTypes
changeToken
ciphertext
ciphertextKey
class
clientName
code
common
conformsToProtocol:
containsValueForKey:
copy
copyWithZone:
count
countByEnumeratingWithState:objects:count:
creationDate
currentHandler
curve
customAttributes
data
dataForIdentifier:resultHandler:
dataWithBytes:length:
dataWithCapacity:
debugDescription
decodeIntegerForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
decodeValueOfType:fromData:error:
decrypt:withKey:additionalAuthenticatedData:error:
decrypt:withKey:error:
decryptMessage:error:
defaultCredentialStore
defaultManager
defaultOverCommitManager
deriveKeyWithSpecifier:fromKeySource:error:
description
descriptionShowingPassword:
dictionary
dictionaryWithObjects:forKeys:count:
diffieHellmanOperation
encodeInteger:forKey:
encodeObject:forKey:
encodeSubjectPublicKeyInfo
encodeTopLevelValue:error:
encodeWithCoder:
encoding
encrypt:withKey:additionalAuthenticatedData:error:
encrypt:withKey:additionalAuthenticatedData:ivGenerator:error:
encrypt:withKey:error:
encrypt:withKey:ivGenerator:error:
encryptMessage:error:
encryptionKeySpecifier
encryptionOperation
encryptionPassphrase
ephemeralSenderPublicKey
error
errorWithDomain:code:userInfo:
evaluateCertificateChain:forDate:resultHandler:
exceptionWithName:reason:userInfo:
failWithError:
fetchPasswordCredentialForPersistentIdentifier:withResultHandler:
fetchResultWithError:
fetchResultWithValue:
fetchValueWithAuthenticationContext:resultHandler:
findPrivateKeyWithIdentifier:certificate:attributes:result:
foundPrivateKey:certificate:
generateAttributesForIdentityAndAddToKeychain:forIdentifier:accessPolicy:
generateBytesWithLength:key:error:
generateCodeWithError:
generateIVWithLength:error:
generateMaskWithLength:data:error:
generateStateWithError:
getKey
getMsg1WithError:
getMsg2WithError:
handleFailureInMethod:object:file:lineNumber:description:
hasCertificate
hash
hashValue
host
identitiesFilteredBy:resultHandler:
identityForIdentifier:
identityForIdentifier:resultHandler:
identityName
init
initManager
initOverCommitManager
initRandomKeyPairWithSpecifier:privateKeyDomain:
initRandomKeyWithSpecifier:
initRandomKeyWithSpecifier:error:
initWithAccessibility:sharingPolicy:
initWithAttributes:
initWithBitSize:
initWithBundleID:owner:canRead:canWrite:
initWithBytes:length:
initWithBytesNoCopy:length:deallocator:
initWithCiphertext:
initWithCiphertext:authenticationCode:initializationVector:
initWithCiphertext:ciphertextKey:
initWithClientName:
initWithCoder:
initWithCurve:
initWithCurve:diffieHellmanOperation:encryptionOperation:digestOperation:
initWithData:
initWithData:signature:
initWithData:specifier:error:
initWithDigestOperation:
initWithEncryptionOperation:
initWithError:
initWithKeyPair:
initWithKeyPair:certificate:
initWithKeySpecifier:
initWithKeySpecifier:authenticationMode:
initWithKeySpecifier:digestOperation:
initWithKeySpecifier:digestOperation:maskGenerationFunction:
initWithKeySpecifier:maskGenerationFunction:
initWithKeySpecifier:mode:
initWithKeyWrappingOperation:
initWithKeyWrappingOperation:sessionEncryptionOperation:
initWithLocalKeyPair:remotePublickKey:
initWithMachServiceName:options:
initWithMessageID:
initWithMode:
initWithOptions:
initWithPseudoRandomFunction:iterationCount:salt:
initWithPublicKey:
initWithPublicKey:certificate:
initWithRandomMessageID
initWithRevocationMethods:networkLookup:
initWithSalt:code:
initWithSalt:code:error:
initWithSecCertificate:
initWithServerName:
initWithServiceID:forType:
initWithSharedSecretOperation:
initWithSharedSecretOperation:digestOperation:
initWithSpecifier:
initWithSpecifier:domain:
initWithTrustPolicy:
initWithTrustPolicy:revocationPolicy:
initWithTrustPolicy:revocationPolicy:applicationAnchorCertificates:allowCertificateFetching:trustSystemAnchorCertificates:
initWithUsername:password:primaryServiceIdentifier:
initWithUsername:password:primaryServiceIdentifier:supplementaryServiceIdentifiers:
initWithValue:
initializationVector
initialize
integerValue
interfaceWithProtocol:
isEqual:
isEqualToData:
isEqualToDictionary:
isEqualToSet:
isEqualToString:
isKindOfClass:
isMemberOfClass:
isVerified
issuerName
iterationCount
keyClass
keyDomain
keyForIdentifier:specifier:resultHandler:
keyLengthInBytes
keySource
keySpecifier
keySpecifiers
keyWithSubjectPublicKeyInfo:
keyWrappingOperation
keychainManagerQueue
keychainReplyQueue
keyclass
keysFilteredBy:resultHandler:
length
localKeyPair
localizedDescription
localizedLabel
lookupCredentialsForServiceIdentifiers:withResultHandler:
lookupKey
maskGenerationFunction
maximumCreationDate
maximumModificationDate
messageID
minimumCreationDate
minimumModificationDate
mode
modificationDate
mutableBytes
mutableCopy
networkLookup
numBytesRolled
numberWithInteger:
numberWithUnsignedInteger:
objectForKeyedSubscript:
outputSize
owner
password
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performWithCCKey:
persistentIdentifier
point_size
primaryServiceIdentifier
privateKeyDomain
processMsg1:error:
processMsg2:error:
pseudoRandomFunction
publicKey
publicKeyLookupWithIdentifier:certificate:result:
remoteObjectProxyWithErrorHandler:
removeCredentialWithPersistentIdentifier:withResultHandler:
removeItemWithIdentifier:resultHandler:
replaceCredential:withNewCredential:resultHandler:
replaceOldCredential:withNewCredential:resultHandler:
respondsToSelector:
resultType
resume
retain
retainCount
revocationMethods
revocationPolicy
rpcAddCredential:withAccessPolicy:reply:
rpcFetchPasswordCredentialForPersistentIdentifier:reply:
rpcLookupCredentialsForServiceIdentifiers:reply:
rpcRemoveCredentialWithPersistentIdentifier:reply:
rpcReplaceCredential:withNewCredential:reply:
rpcReplaceOldCredential:withNewCredential:reply:
safeErrorClasses
salt
secAccessibilityAttributes
secCertificate
secKey
secKeyECDSAAlgorithm
self
serialNumber
serverName
serverProxyWithBooleanHandler:
serverProxyWithDualResultHandler:
serverProxyWithResultHandler:
serviceID
serviceIdentifierForAccessGroup:
serviceIdentifierForBundleID:
serviceIdentifierForCustomString:
serviceIdentifierForDomain:
serviceIdentifierForURL:
serviceIdentifiers
sessionEncryptionOperation
session_key
setAccessControlList:
setAccessibility:
setAllowCertificateFetching:
setApplicationAnchorCertificates:
setAttributes:
setAttributesPredicate:
setAuthenticationCodeLength:
setAuthenticationMode:
setBitSize:
setBundleID:
setCanRead:
setCanWrite:
setCertificateSerialNumbers:
setCertificateTypes:
setClasses:forSelector:argumentIndex:ofReply:
setClientName:
setCode:
setCommon:
setCp:
setCurve:
setCustomAttributes:
setData:forIdentifier:accessPolicy:resultHandler:
setDiffieHellmanOperation:
setDigestOperation:
setDomains:
setEncoding:
setEncryptionKeySpecifier:
setEncryptionOperation:
setEncryptionPassphrase:
setIdentity:forIdentifier:accessPolicy:error:
setIdentity:forIdentifier:accessPolicy:resultHandler:
setIdentityName:
setIterationCount:
setKey:forIdentifier:accessPolicy:resultHandler:
setKeyPair:
setKeySpecifier:
setKeySpecifiers:
setKeyWrappingOperation:
setKeychainManagerQueue:
setKeychainReplyQueue:
setLength:
setLocalKeyPair:
setLocalizedDescription:
setLocalizedLabel:
setMaskGenerationFunction:
setMaximumCreationDate:
setMaximumModificationDate:
setMessageID:
setMinimumCreationDate:
setMinimumModificationDate:
setMode:
setNetworkLookup:
setObject:forKeyedSubscript:
setOptions:
setOwner:
setPassword:
setPoint_size:
setPrimaryServiceIdentifier:
setPseudoRandomFunction:
setRemoteObjectInterface:
setRemotePublicKey:
setRevocationMethods:
setRevocationPolicy:
setSalt:
setServerName:
setServiceIdentifiers:
setSessionEncryptionOperation:
setSharedSecretOperation:
setSharingPolicy:
setSigningKeySpecifier:
setSpake_ctx:
setSpecifiers:
setSupplementaryServiceIdentifiers:
setTrustSystemAnchorCertificates:
setUsername:
setUsernames:
setVerified:
setW0:
setW1:
setW_size:
setWithArray:
setupProver:
setupVerifier:
sharedSecretOperation
sharingPolicy
sign:withKey:error:
signature
signingKeySpecifier
spake_ctx
specifiers
stringByAppendingFormat:
stringByAppendingString:
stringWithFormat:
subdataWithRange:
superclass
supportsSecureCoding
trustEvaluatorFlags
trustPolicy
trustSystemAnchorCertificates
type
unarchivedObjectOfClass:fromData:error:
usePasswordWithHandler:
username
usernames
value
verified
verify:withKey:error:
w_size
zone
@24@0:8^@16
B32@0:8@16^@24
B16@0:8
@16@0:8
@32@0:8@16^@24
@"NSData"24@0:8^@16
B32@0:8@"NSData"16^@24
@"_SFAESKey"16@0:8
@"NSData"32@0:8@"NSData"16^@24
@32@0:8@16@24
B24@0:8^@16
v16@0:8
^{ccrng_state=^?}16@0:8
v24@0:8^{ccrng_state=^?}16
^{ccspake_ctx=^{ccspake_cp}^{ccspake_mac}^{ccrng_state}BQ*C[0Q]}16@0:8
v24@0:8^{ccspake_ctx=^{ccspake_cp}^{ccspake_mac}^{ccrng_state}BQ*C[0Q]}16
v24@0:8@16
r^{ccspake_cp=}16@0:8
v24@0:8r^{ccspake_cp=}16
r^{ccspake_mac=}16@0:8
v24@0:8r^{ccspake_mac=}16
Q16@0:8
v24@0:8Q16
v20@0:8B16
^{ccrng_state=^?}
^{ccspake_ctx=^{ccspake_cp}^{ccspake_mac}^{ccrng_state}BQ*C[0Q]}
@"NSString"
@"NSData"
r^{ccspake_cp=}
r^{ccspake_mac=}
@"_SFAESKey"
@40@0:8@16@24^@32
@"SPAKE2Common"
{CC_SHA1state_st="h0"I"h1"I"h2"I"h3"I"h4"I"Nl"I"Nh"I"data"[16I]"num"i}
{CC_SHA256state_st="count"[2I]"hash"[8I]"wbuf"[16I]}
{CC_SHA512state_st="count"[2Q]"hash"[8Q]"wbuf"[16Q]}
{CC_MD5state_st="A"I"B"I"C"I"D"I"Nl"I"Nh"I"data"[16I]"num"i}
@"<SFDigestOperation>"
@24@0:8@16
q16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8^{_NSZone=}16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v24@0:8@"NSData"16
@"NSData"16@0:8
@"NSData"24@0:8@"NSData"16
r^{__CFString=}16@0:8
r^{ccdigest_info=QQQQ*^v^?^?i}16@0:8
@40@0:8q16@24@32
@"NSData"40@0:8q16@"NSData"24@"NSError"32
@"NSData"40@0:8q16@"_SFKey"24@"NSError"32
@"_SFRSAKeySpecifier"
@"<SFMaskGenerationFunction>"
@"_SFECKeySpecifier"
@"<SFDigestOperationInternal>"
@"SFSymmetricEncryptionOperation"
@"_SFSignedData"40@0:8@"NSData"16@"_SFKey"24^@32
@"NSData"40@0:8@"_SFSignedData"16@"_SFKey"24^@32
@"_SFKeySpecifier"16@0:8
@40@0:8@16@24@32
{?="isOwner"b1"canRead"b1"canWrite"b1}
@36@0:8@16B24B28B32
@32@0:8^{__CFString=}16^@24
@48@0:8{?=q{?=Qq}}16q40
r^{__CFDictionary=}16@0:8
{?=q{?=Qq}}16@0:8
v40@0:8{?=q{?=Qq}}16
v24@0:8q16
{?="mode"q"authenticationPolicy"{?="authenticationRequirements"Q"subsetCount"q}}
@"NSArray"
@"NSDate"
@"NSArray<_SFServiceIdentifier>"
v20@0:8i16
i16@0:8
@"_SFServiceIdentifier"
@"NSDictionary"
@48@0:8@16@24@32@40
@20@0:8B16
v24@0:8@?16
@"NSPredicate"
@24@0:8@?16
v40@0:8@16@24@?32
v32@0:8@16@?24
@"<NSXPCProxyCreating>"
@"NSError"
@32@0:8@16q24
@"_SFKeySpecifier"
@"<_SFKeyAttributes>"
^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}
@24@0:8q16
v24@0:8@"NSString"16
@24@0:8^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16
^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16@0:8
@"NSMutableData"
@32@0:8q16^@24
@"NSData"32@0:8q16^@24
@"SFCodingOptions"
@40@0:8#16@24@32
@"_SFPublicKey"
@"_SFKeyPair"
@"_SFCertificate"
@"SFIdentityAttributes"
^{__SecCertificate=}
@24@0:8^{__SecCertificate=}16
^{__SecCertificate=}16@0:8
@"SFKeychainDataAttributes"
v48@0:8@16@24@32@?40
^{__CFDictionary=}40@0:8@16@24@32
^{__CFDictionary=}32@0:8@16@24
i40@0:8@16@24@32
B48@0:8@16@24@32^@40
@32@0:8^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16@24
^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}48@0:8@16^@24^^{__CFDictionary}32^i40
@36@0:8@16@24i32
@"_SFCredentialStore"
@"NSObject<OS_dispatch_queue>"
v40@0:8@"_SFCredential"16@"_SFAccessPolicy"24@?<v@?@"NSString"@"NSError">32
v32@0:8@"NSString"16@?<v@?@"_SFPasswordCredential"@"NSString"@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v40@0:8@"_SFCredential"16@"_SFCredential"24@?<v@?@"NSString"@"NSError">32
v40@0:8@"_SFCredential"16@"_SFCredential"24@?<v@?B@"NSError">32
@"SFTrustPolicy"
@"SFRevocationPolicy"
{?="allowCertificateFetching"b1"trustSystemAnchorCertificates"b1}
@32@0:8Q16q24
@48@0:8@16@24@32B40B44
@"<SFPseudoRandomFunction>"
@"_SFECKeyPair"
@"_SFECPublicKey"
@"<SFKeyDerivingOperation>"
@"_SFSymmetricKey"40@0:8@"_SFSymmetricKeySpecifier"16@24^@32
@40@0:8@16q24@32
@"_SFCiphertext"
@"_SFSymmetricKeySpecifier"
@"_SFAESKeySpecifier"
@"SFRSAEncryptionOperation"
@"_SFECDHOperation"
@"_SFCiphertext"40@0:8@"NSData"16@"_SFKey"24^@32
@"NSData"40@0:8@"_SFCiphertext"16@"_SFKey"24^@32
@48@0:8@16@24@32^@40
@56@0:8@16@24@32@40^@48
@48@0:8q16@24@32@40
r^{ccdigest_info=QQQQ*^v^?^?i}24@0:8^@16
@(#)PROGRAM:SecurityFoundation  PROJECT:SecurityFoundation-1
SFCoreCryptoErrorDomain
sscrypt_storage_size params failed
ccscrypt failed: %d
ccspake_prover_init failed: %d
ccspake_generate_L failed: %d
ccspake_verifier_init failed: %d
ccspake_kex_generate failed: %d
ccspake_kex_process failed: %d
ccspake_mac_generate failed: %d
ccspake_mac_verify_and_get_session_key failed: %d
_data
_signature
Failed to deserialize object of type %@
invalid secAccessibility for SFAccessPolicy: %@
SFAccessPolicyAccessibilityMode
SFAccessPolicySharingMode
failed to deserialize SFAccessPolicy instance
SFAccessPolicyAccessGroup
SFAccessPolicy does not support SFAccessibleWithAuthentication at present - please file a radar if you need it
SFCredentialPrimaryServiceIdentifier
SFCredentialSupplementaryServiceIdentifiers
SFCredentialLocalizedLabel
SFCredentialLocalizedDescription
SFCredentialPersistentIdentifier
SFCredentialCreationDate
SFCredentialModificationDate
SFCredentialCustomAttributes
SFCredentialKeyclass
SFCredentialAccessGroup
SFCredentialChangeToken
failed to decode instance of SFCredential
SFCredentialUsername
SFCredentialPassword
no username decoded for SFCredential instance
<redacted>
 Username:%@
 Password: %@
 primary service identifier: %@
 supplementary service identifiers:
v32@?0@"_SFPasswordCredential"8@"NSString"16@"NSError"24
com.apple.security.sfkeychainserver
Could not create connection to security server
v16@?0@"NSError"8
SFServiceIdentifierServiceID
SFServiceIdentifierType
secure decade failed for instance of SFServiceIdentifier
(%@) - %@
domain
bundleID
accessGroup
custom
unknown
SFKeyDomainCPU
SFKEyDomainSEP
SFKey.m
%@ key specifiers are not yet supported
%@ bitSize: %ld
unexected AES key bit size
nistp521-compressed
 curve: %@
attempt to get attributes class from abstract base class SFKey - must be provided by subclass
attempt to get sec key specifier from abstract base class SFKey - must be provided by subclass
attempt to initialize abstract base class %@ - initialize a concrete subclass instead
attempt to creata random key for abstract base class %@ - initialize a concrete subclass instead
Invalid parameter not satisfying: %@
specifier
v24@?0^v8Q16
data
keySpecifier
subclass %@ must implement %@
secKey
unanticipated bitsize for EC key: %d
compressed elliptic curves are not presently supported
unknown SFEllipticCurve value: %d
could not get a random initialization vector
SFCryptoServicesErrorDomain
SFCryptoServicesErrorDigest
v8@?0
SFKeychainManager Queue
SFKeychainManager over commit Queue
SFEncryptionOperation.m
ciphertext
SFCiphertext
authenticationCode
initializationVector
SFAuthenticationCode
SFInitializationVector
Auth Code: %@
IV: %@
data: %@
ciphertextKey
ephemeralSenderPublicKey
SFEphemeralSenderPublicKeyExternaRepresentation
SFIESAuthenticationCode
unsupported authentication mode - at present only SFAuthenticatedEncryptionModeGCM is supported
currently only AES keys are supported for SFAuthenticatedEncryptionOperation
maskGenerationFunction
plaintext
@24@?0^{ccec_pub_ctx=^{ccec_cp}[0{ccec_projective_point=[1Q]}]}8@"NSError"16
@24@?0^{ccec_full_ctx=^{ccec_cp}[0{ccec_projective_point=[1Q]}]}8@"NSError"16
SFKeychainErrorDomain
SFKeychainErrorKeyType
SFCredentialStore: attempting to access lookupKey for service identifier with unknown type: %d
SPAKE2Common
SPAKE2Protocol
SPAKE2Prover
SPAKE2Verifier
SFSHA1DigestOperation_Ivars
SFSHA224DigestOperation_Ivars
SFSHA256DigestOperation_Ivars
SFSHA384DigestOperation_Ivars
SFSHA512DigestOperation_Ivars
SFMD5DigestOperation_Ivars
SFMaskGenerationFunction1_Ivars
SFHMACPseudoRandomFunction_Ivars
_SFSHA1DigestOperation
SFDigestOperationInternal
SFDigestOperation
NSObject
NSCopying
NSSecureCoding
NSCoding
_SFSHA224DigestOperation
_SFSHA256DigestOperation
_SFSHA384DigestOperation
_SFSHA512DigestOperation
_SFMD5DigestOperation
SFMaskGenerationFunction1
SFMaskGenerationFunction
SFHMACPseudoRandomFunction
SFPseudoRandomFunction
SFSignedData_Ivars
SFRSASigningOperation_Ivars
SFRSA_PSSSigningOperation_Ivars
SFEC_X962SigningOperation_Ivars
SFCMACOperation_Ivars
SFHMACOperation_Ivars
_SFSignedData
SFRSASigningOperation
SFSigningOperation
SFRSA_PSSSigningOperation
_SFEC_X962SigningOperation
SFMessageAuthenticationCodeOperation
SFCMACOperation
SFHMACOperation
SFAccessControlEntry_Ivars
SFAccessControlEntry
_SFAccessPolicy
SFCredentialSearchFilter_Ivars
_SFCredential
_SFPasswordCredential
SFCredentialSearchFilter
SFServiceIdentifier_Ivars
_SFCredentialStore
_SFServiceIdentifier
SFAESKeySpecifier_Ivars
SFRSAKeySpecifier_Ivars
SFECKeySpecifier_Ivars
SFSymmetricKeyAttributes_Ivars
SFKeySearchFilter_Ivars
SFKey_Ivars
SFSymmetricKey_Ivars
SFKeyPair_Ivars
SFPublicKey_Ivars
_SFKeySpecifier
_SFSymmetricKeySpecifier
_SFTripleDESKeySpecifier
_SFAESKeySpecifier
_SFAsymmetricKeySpecifier
_SFRSAKeySpecifier
_SFECKeySpecifier
SFSymmetricKeyAttributes
_SFKeyAttributes
SFKeychainItemAttributes
_SFAsymmetricKeyAttributes
SFKeySearchFilter
_SFKey
_SFSymmetricKey
SFTripleDESKey
_SFAESKey
_SFPublicKey
_SFKeyPair
SFRSAPublicKey
SFRSAKeyPair
_SFECPublicKey
_SFECKeyPair
SFIncrementingIVGenerator_Ivars
SFIncrementingIVGenerator
SFIVGenerator
SFCodingOptions_Ivars
SFCoder_Ivars
SFDecoder_Ivars
SFCodingOptions
SFCoder
SFDecoder
SFIdentity_Ivars
SFCertificate_Ivars
SFIdentityAttributes_Ivars
SFIdentitySearchFilter_Ivars
_SFIdentity
_SFCertificate
SFIdentityAttributes
SFIdentitySearchFilter
SFKeychainFetchResult_Ivars
SFKeychainDataAttributes_Ivars
SFKeychainData_Ivars
_SFKeychainFetchResult
_SFKeychainIdentityFetchResult
_SFKeychainKeyFetchResult
SFKeychainDataFetchResult
_SFKeychainManager
SFKeychainDataAttributes
SFKeychainData
SFKeychainServerProtocol
SFRevocationPolicy_Ivars
SFTrustEvaluator_Ivars
SFSSLClientTrustPolicy_Ivars
SFSSLServerTrustPolicy_Ivars
SFRevocationPolicy
SFTrustEvaluator
SFTrustPolicy
SFX509TrustPolicy
SFSSLClientTrustPolicy
SFSSLServerTrustPolicy
SFPBKDF2Operation_Ivars
SFECDHKeySource_Ivars
SFECDHOperation_Ivars
SFX963KeyDerivationOperation_Ivars
SFPBKDF2Operation
SFKeyDerivingOperation
_SFECDHKeySource
_SFECDHOperation
SFX963KeyDerivationOperation
SFCiphertext_Ivars
SFAuthenticatedCiphertext_Ivars
SFWrappedKeyCiphertext_Ivars
SFIESCiphertext_Ivars
SFSymmetricEncryptionOperation_Ivars
SFAuthenticatedEncryptionOperation_Ivars
SFRSAEncryptionOperation_Ivars
SFRSA_OAEPEncryptionOperation_Ivars
SFRSA_WrappedKeyEncryptionOperation_Ivars
SFIESOperation_Ivars
_SFCiphertext
_SFAuthenticatedCiphertext
SFWrappedKeyCiphertext
_SFIESCiphertext
SFSymmetricEncryptionOperation
_SFEncryptionOperation
SFTripleDESEncryptionOperation
SFAESEncryptionOperation
_SFAuthenticatedEncryptionOperation
SFRSAEncryptionOperation
SFRSA_PKCS1EncryptionOperation
SFRSA_OAEPEncryptionOperation
SFRSA_WrappedKeyEncryptionOperation
_SFIESOperation
T@"NSArray",&,N
T#,R
TB,N,V_allowCertificateFetching
T@"<SFDigestOperation>",C,N
_aesEncryptionOperationInternal
T@"<SFKeyDerivingOperation>",C,N
_asymmetricKeySpecifierInternal
T@"<SFPseudoRandomFunction>",C,N
_common
T@"NSArray",C,N,V_applicationAnchorCertificates
_credentialSearchFilterInternal
T@"NSData",&,N,G_changeToken,S_setChangeToken:
_keychainDataAttributesInternal
T@"NSData",&,V_w0
_secKey
T@"NSData",C,N
T@"NSData",R,C
_w_size
T@"NSData",R,N,V_keyData
bitSize
T@"NSDate",C,N,S_setCreationDate:,V_creationDate
certificateType
T@"NSDictionary",C,N,V_customAttributes
credentialStore
T@"NSObject<OS_dispatch_queue>",&,V_keychainManagerQueue
digest:
T@"NSPredicate",&,N,V_attributesPredicate
domains
T@"NSString",&,V_code
getCode
T@"NSString",C,N,G_cachedPassword
initWithCiphertext:ephemeralSenderPublicKey:authenticationCode:
T@"NSString",C,N,V_accessGroup
isOwner
T@"NSString",C,N,V_label
keyData
T@"NSString",R,C,N
T@"NSString",R,C,N,V_asymmetricKeyDomain
release
T@"NSString",R,C,N,VpersistentIdentifier
T@"SFCodingOptions",C,N
setCertificate:
T@"SFKeychainData",R,D
setRng:
T@"SFRSAEncryptionOperation",C,N
setTrustPolicy:
T@"SFSymmetricEncryptionOperation",C,N
subject
T@"SPAKE2Common",&,V_common
.cxx_destruct
T@"NSArray",C,N
T#,R,N,G_attributesClass
TQ,V_point_size
T@"<SFDigestOperation>",C,V_digestOperation
_aesKeyInternal
T@"<SFMaskGenerationFunction>",C,N
_cachedPassword
T@"NSArray",C,N,V_accessControlList
T@"NSArray<_SFServiceIdentifier>",&,N
_keyFetchResult
T@"NSData",&,V_salt
_rsaEncryptionOperationInternal
T@"NSData",&,V_w1
_symmetricKeyAttributesInternal
T@"NSData",R
T@"NSData",R,N
attributesClass
T@"NSDate",&,N
canRead
T@"NSDate",C,N,S_setModificationDate:,V_modificationDate
context
T@"NSError",R
dealloc
T@"NSObject<OS_dispatch_queue>",&,V_keychainReplyQueue
digestOperation
T@"NSString",&,N,G_accessGroup,S_setAccessGroup:
evaluateCertificateChain:error:
T@"NSString",C,N
initRandomKeyPairWithSpecifier:
T@"NSString",C,N,S_setPersistentIdentifier:,V_persistentIdentifier
initWithSecKey:
T@"NSString",C,N,V_description
isProxy
T@"NSString",R,C
keyPair
T@"NSString",R,C,N,G_lookupKey
options
T@"NSString",R,C,N,V_privateKeyDomain
remotePublicKey
T@"NSString",R,N
setAccessGroup:
T@"SFIdentityAttributes",R,N
setMac:
T@"SFKeychainDataAttributes",&,N
setSession_key:
T@"SFRevocationPolicy",C,N,V_revocationPolicy
setWithObjects:
T@"SFTrustPolicy",C,N,V_trustPolicy
supplementaryServiceIdentifiers
T@"_SFAESKey",&,V_session_key
T@"_SFAESKeySpecifier",C,D,N
T@"_SFAESKeySpecifier",C,N
T@"_SFAESKeySpecifier",R,C,D,N
T@"_SFAsymmetricKeySpecifier",R,C,N
T@"_SFAuthenticatedEncryptionOperation",C,N
T@"_SFCertificate",&,N
T@"_SFCiphertext",R
T@"_SFCredentialStore",R,V_credentialStore
T@"_SFECDHOperation",C,N
T@"_SFECKeyPair",&,N
T@"_SFECKeySpecifier",C,N
T@"_SFECKeySpecifier",R,C,D,N
T@"_SFECPublicKey",&,N
T@"_SFECPublicKey",R
T@"_SFIdentity",R,D
T@"_SFKeyPair",&,N
T@"_SFKeySpecifier",R,C,D,N
T@"_SFKeySpecifier",R,C,N
T@"_SFKeySpecifier",R,C,N,V_asymmetricKeySpecifier
T@"_SFPublicKey",R,N
T@"_SFRSAKeySpecifier",C,N
T@"_SFServiceIdentifier",&,N,V_primaryServiceIdentifier
T@"_SFSymmetricKey",R,D
T@"_SFSymmetricKeySpecifier",C,N
T@"_SFSymmetricKeySpecifier",R,C,D,N
T@"_SFTripleDESKeySpecifier",C,D,N
T@,R
TB,N
TB,N,GisOwner
TB,N,V_trustSystemAnchorCertificates
TB,R
TB,R,N
TB,V_verified
TQ,N
TQ,R
TQ,V_w_size
T^{__SecCertificate=},R,N
T^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v},R,N,G_secKey
T^{ccrng_state=^?},V_rng
T^{ccspake_ctx=^{ccspake_cp}^{ccspake_mac}^{ccrng_state}BQ*C[0Q]},V_spake_ctx
Ti,N,G_keyclass,S_setKeyclass:
Tq,N
Tq,N,V_sharingPolicy
Tq,R
Tq,R,N
Tq,V_curve
Tr^{__CFDictionary=},R,N
Tr^{__CFString=},R,N,G_secKeyECDSAAlgorithm
Tr^{ccdigest_info=QQQQ*^v^?^?i},R,N,G_ccDigestInfo
Tr^{ccspake_cp=},V_cp
Tr^{ccspake_mac=},V_mac
T{?=q{?=Qq}},N,V_accessibility
UTF8String
_accessControlEntryInternal
_accessControlList
_accessGroup
_accessibility
_aesKeySpecifierInternal
_allowCertificateFetching
_applicationAnchorCertificates
_asymmetricKeyDomain
_asymmetricKeySpecifier
_attributesClass
_attributesPredicate
_authenticatedCiphertextInternal
_authenticatedEncryptionOperationInternal
_ccDigestInfo
_ccDigestInfoWithError:
_certificateAttributesForIdentityIdentifier:accessPolicy:
_certificateInternal
_changeToken
_ciphertextInternal
_cmacOperationInternal
_code
_coderInternal
_codingOptionsInternal
_commonKeyAttributesForIdentityIdentifier:accessPolicy:key:
_creationDate
_credentialStore
_credentialStoreInternal
_curve
_customAttributes
_dataFetchResult
_decoderInternal
_defaultAuthenticationMode
_defaultEncryptionMode
_defaultEncryptionOperation
_defaultMacOperation
_defaultMode
_defaultOperation
_description
_digestOperation
_ecKeyPairInternal
_ecKeySpecifierInternal
_ecPublicKeyInternal
_ecdhKeySourceInternal
_ecdhOperationInternal
_hmacOperationInternal
_hmacPseudoRandomFunctionInternal
_identityAttributesInternal
_identityFetchResult
_identityInternal
_identitySearchFilterInternal
_iesCiphertextInternal
_iesOperationInternal
_incrementingIVGeneratorInternal
_init
_initWithPrimaryServiceIdentifier:supplementaryServiceIdentiifers:
_initWithUsername:primaryServiceIdentifier:supplementaryServiceIdentifiers:
_keyData
_keyInternal
_keyPairInternal
_keySearchFilterInternal
_keySpecifierInternal
_keychainDataInternal
_keychainFetchResultInternal
_keychainManagerQueue
_keychainReplyQueue
_keyclass
_label
_lookupKey
_mac
_md5DigestOperationInternal
_messageAuthenticationCodeOperationInternal
_mgf1OperationInternal
_modificationDate
_oaepEncryptionOperationInternal
_password
_pbkdf2OperationInternal
_persistentIdentifier
_pkcs1EncryptionOperationInternal
_point_size
_primaryServiceIdentifier
_privateKeyAttributesForIdentityIdentifier:accessPolicy:key:
_privateKeyDomain
_pssSigningOperationInternal
_publicKeyAttributesForIdentityIdentifier:accessPolicy:key:
_publicKeyInternal
_randomSalt
_revocationPolicy
_revocationPolicyInternal
_rng
_rsaKeyPairInternal
_rsaKeySpecifierInternal
_rsaPublicKeyInternal
_rsaSigningOperationInternal
_salt
_secKeyCreationAttributesForSpecifier:
_secKeyECDSAAlgorithm
_serverConnection
_serverConnectionWithError:
_serverError
_serviceIdentifierInternal
_session_key
_setAccessGroup:
_setChangeToken:
_setCreationDate:
_setKeyclass:
_setModificationDate:
_setPersistentIdentifier:
_sha1DigestOperationInternal
_sha224DigestOperationInternal
_sha256DigestOperationInternal
_sha384DigestOperationInternal
_sha512DigestOperationInternal
_sharingPolicy
_signedDataInternal
_spake_ctx
_specifierForSecKey:
_sslClientTrustPolicyInternal
_sslServerTrustPolicyInternal
_supplementaryServiceIdentifiers
_symmetricEncryptionOperationInternal
_symmetricKeyAttributesForIdentifier:accessPolicy:key:
_symmetricKeyInternal
_symmetricKeySpecifierInternal
_tripleDESEncryptionOperationInternal
_tripleDESKeyInternal
_tripleDESKeySpecifierInternal
_trustEvaluatorInternal
_trustPolicy
_trustPolicyInternal
_trustSystemAnchorCertificates
_username
_verified
_wrappedKeyCiphertextInternal
_wrappedKeyEncryptionOperationInternal
_x509TrustPolicyInternal
_x962SigningOperationInternal
_x963KeyDerivationOperationInternal
accessControlEntryFlags
accessControlList
accessGroup
accessPolicyWithSecAccessibility:error:
accessibility
addCredential:withAccessPolicy:resultHandler:
addData:
addEntriesFromDictionary:
alloc
allocWithZone:
allowCertificateFetching
applicationAnchorCertificates
archivedDataWithRootObject:requiringSecureCoding:error:
array
arrayWithObjects:count:
attributes
attributesPredicate
authenticationCode
authenticationCodeLength
authenticationMode
autorelease
blockSize
bundleID
bytes
canWrite
ccDigestInfo
certificate
certificateSerialNumbers
certificateTypes
changeToken
ciphertext
ciphertextKey
class
clientName
code
common
conformsToProtocol:
containsValueForKey:
copy
copyWithZone:
count
countByEnumeratingWithState:objects:count:
creationDate
currentHandler
curve
customAttributes
data
dataForIdentifier:resultHandler:
dataWithBytes:length:
dataWithCapacity:
debugDescription
decodeIntegerForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
decodeValueOfType:fromData:error:
decrypt:withKey:additionalAuthenticatedData:error:
decrypt:withKey:error:
decryptMessage:error:
defaultCredentialStore
defaultManager
defaultOverCommitManager
deriveKeyWithSpecifier:fromKeySource:error:
description
descriptionShowingPassword:
dictionary
dictionaryWithObjects:forKeys:count:
diffieHellmanOperation
encodeInteger:forKey:
encodeObject:forKey:
encodeSubjectPublicKeyInfo
encodeTopLevelValue:error:
encodeWithCoder:
encoding
encrypt:withKey:additionalAuthenticatedData:error:
encrypt:withKey:additionalAuthenticatedData:ivGenerator:error:
encrypt:withKey:error:
encrypt:withKey:ivGenerator:error:
encryptMessage:error:
encryptionKeySpecifier
encryptionOperation
encryptionPassphrase
ephemeralSenderPublicKey
error
errorWithDomain:code:userInfo:
evaluateCertificateChain:forDate:resultHandler:
exceptionWithName:reason:userInfo:
failWithError:
fetchPasswordCredentialForPersistentIdentifier:withResultHandler:
fetchResultWithError:
fetchResultWithValue:
fetchValueWithAuthenticationContext:resultHandler:
findPrivateKeyWithIdentifier:certificate:attributes:result:
foundPrivateKey:certificate:
generateAttributesForIdentityAndAddToKeychain:forIdentifier:accessPolicy:
generateBytesWithLength:key:error:
generateCodeWithError:
generateIVWithLength:error:
generateMaskWithLength:data:error:
generateStateWithError:
getKey
getMsg1WithError:
getMsg2WithError:
handleFailureInMethod:object:file:lineNumber:description:
hasCertificate
hash
hashValue
host
identitiesFilteredBy:resultHandler:
identityForIdentifier:
identityForIdentifier:resultHandler:
identityName
init
initManager
initOverCommitManager
initRandomKeyPairWithSpecifier:privateKeyDomain:
initRandomKeyWithSpecifier:
initRandomKeyWithSpecifier:error:
initWithAccessibility:sharingPolicy:
initWithAttributes:
initWithBitSize:
initWithBundleID:owner:canRead:canWrite:
initWithBytes:length:
initWithBytesNoCopy:length:deallocator:
initWithCiphertext:
initWithCiphertext:authenticationCode:initializationVector:
initWithCiphertext:ciphertextKey:
initWithClientName:
initWithCoder:
initWithCurve:
initWithCurve:diffieHellmanOperation:encryptionOperation:digestOperation:
initWithData:
initWithData:signature:
initWithData:specifier:error:
initWithDigestOperation:
initWithEncryptionOperation:
initWithError:
initWithKeyPair:
initWithKeyPair:certificate:
initWithKeySpecifier:
initWithKeySpecifier:authenticationMode:
initWithKeySpecifier:digestOperation:
initWithKeySpecifier:digestOperation:maskGenerationFunction:
initWithKeySpecifier:maskGenerationFunction:
initWithKeySpecifier:mode:
initWithKeyWrappingOperation:
initWithKeyWrappingOperation:sessionEncryptionOperation:
initWithLocalKeyPair:remotePublickKey:
initWithMachServiceName:options:
initWithMessageID:
initWithMode:
initWithOptions:
initWithPseudoRandomFunction:iterationCount:salt:
initWithPublicKey:
initWithPublicKey:certificate:
initWithRandomMessageID
initWithRevocationMethods:networkLookup:
initWithSalt:code:
initWithSalt:code:error:
initWithSecCertificate:
initWithServerName:
initWithServiceID:forType:
initWithSharedSecretOperation:
initWithSharedSecretOperation:digestOperation:
initWithSpecifier:
initWithSpecifier:domain:
initWithTrustPolicy:
initWithTrustPolicy:revocationPolicy:
initWithTrustPolicy:revocationPolicy:applicationAnchorCertificates:allowCertificateFetching:trustSystemAnchorCertificates:
initWithUsername:password:primaryServiceIdentifier:
initWithUsername:password:primaryServiceIdentifier:supplementaryServiceIdentifiers:
initWithValue:
initializationVector
initialize
integerValue
interfaceWithProtocol:
isEqual:
isEqualToData:
isEqualToDictionary:
isEqualToSet:
isEqualToString:
isKindOfClass:
isMemberOfClass:
isVerified
issuerName
iterationCount
keyClass
keyDomain
keyForIdentifier:specifier:resultHandler:
keyLengthInBytes
keySource
keySpecifier
keySpecifiers
keyWithSubjectPublicKeyInfo:
keyWrappingOperation
keychainManagerQueue
keychainReplyQueue
keyclass
keysFilteredBy:resultHandler:
length
localKeyPair
localizedDescription
localizedLabel
lookupCredentialsForServiceIdentifiers:withResultHandler:
lookupKey
maskGenerationFunction
maximumCreationDate
maximumModificationDate
messageID
minimumCreationDate
minimumModificationDate
mode
modificationDate
mutableBytes
mutableCopy
networkLookup
numBytesRolled
numberWithInteger:
numberWithUnsignedInteger:
objectForKeyedSubscript:
outputSize
owner
password
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performWithCCKey:
persistentIdentifier
point_size
primaryServiceIdentifier
privateKeyDomain
processMsg1:error:
processMsg2:error:
pseudoRandomFunction
publicKey
publicKeyLookupWithIdentifier:certificate:result:
remoteObjectProxyWithErrorHandler:
removeCredentialWithPersistentIdentifier:withResultHandler:
removeItemWithIdentifier:resultHandler:
replaceCredential:withNewCredential:resultHandler:
replaceOldCredential:withNewCredential:resultHandler:
respondsToSelector:
resultType
resume
retain
retainCount
revocationMethods
revocationPolicy
rpcAddCredential:withAccessPolicy:reply:
rpcFetchPasswordCredentialForPersistentIdentifier:reply:
rpcLookupCredentialsForServiceIdentifiers:reply:
rpcRemoveCredentialWithPersistentIdentifier:reply:
rpcReplaceCredential:withNewCredential:reply:
rpcReplaceOldCredential:withNewCredential:reply:
safeErrorClasses
salt
secAccessibilityAttributes
secCertificate
secKey
secKeyECDSAAlgorithm
self
serialNumber
serverName
serverProxyWithBooleanHandler:
serverProxyWithDualResultHandler:
serverProxyWithResultHandler:
serviceID
serviceIdentifierForAccessGroup:
serviceIdentifierForBundleID:
serviceIdentifierForCustomString:
serviceIdentifierForDomain:
serviceIdentifierForURL:
serviceIdentifiers
sessionEncryptionOperation
session_key
setAccessControlList:
setAccessibility:
setAllowCertificateFetching:
setApplicationAnchorCertificates:
setAttributes:
setAttributesPredicate:
setAuthenticationCodeLength:
setAuthenticationMode:
setBitSize:
setBundleID:
setCanRead:
setCanWrite:
setCertificateSerialNumbers:
setCertificateTypes:
setClasses:forSelector:argumentIndex:ofReply:
setClientName:
setCode:
setCommon:
setCp:
setCurve:
setCustomAttributes:
setData:forIdentifier:accessPolicy:resultHandler:
setDiffieHellmanOperation:
setDigestOperation:
setDomains:
setEncoding:
setEncryptionKeySpecifier:
setEncryptionOperation:
setEncryptionPassphrase:
setIdentity:forIdentifier:accessPolicy:error:
setIdentity:forIdentifier:accessPolicy:resultHandler:
setIdentityName:
setIterationCount:
setKey:forIdentifier:accessPolicy:resultHandler:
setKeyPair:
setKeySpecifier:
setKeySpecifiers:
setKeyWrappingOperation:
setKeychainManagerQueue:
setKeychainReplyQueue:
setLength:
setLocalKeyPair:
setLocalizedDescription:
setLocalizedLabel:
setMaskGenerationFunction:
setMaximumCreationDate:
setMaximumModificationDate:
setMessageID:
setMinimumCreationDate:
setMinimumModificationDate:
setMode:
setNetworkLookup:
setObject:forKeyedSubscript:
setOptions:
setOwner:
setPassword:
setPoint_size:
setPrimaryServiceIdentifier:
setPseudoRandomFunction:
setRemoteObjectInterface:
setRemotePublicKey:
setRevocationMethods:
setRevocationPolicy:
setSalt:
setServerName:
setServiceIdentifiers:
setSessionEncryptionOperation:
setSharedSecretOperation:
setSharingPolicy:
setSigningKeySpecifier:
setSpake_ctx:
setSpecifiers:
setSupplementaryServiceIdentifiers:
setTrustSystemAnchorCertificates:
setUsername:
setUsernames:
setVerified:
setW0:
setW1:
setW_size:
setWithArray:
setupProver:
setupVerifier:
sharedSecretOperation
sharingPolicy
sign:withKey:error:
signature
signingKeySpecifier
spake_ctx
specifiers
stringByAppendingFormat:
stringByAppendingString:
stringWithFormat:
subdataWithRange:
superclass
supportsSecureCoding
trustEvaluatorFlags
trustPolicy
trustSystemAnchorCertificates
type
unarchivedObjectOfClass:fromData:error:
usePasswordWithHandler:
username
usernames
value
verified
verify:withKey:error:
w_size
zone
@24@0:8^@16
B32@0:8@16^@24
B16@0:8
@16@0:8
@32@0:8@16^@24
@"NSData"24@0:8^@16
B32@0:8@"NSData"16^@24
@"_SFAESKey"16@0:8
@"NSData"32@0:8@"NSData"16^@24
@32@0:8@16@24
B24@0:8^@16
v16@0:8
^{ccrng_state=^?}16@0:8
v24@0:8^{ccrng_state=^?}16
^{ccspake_ctx=^{ccspake_cp}^{ccspake_mac}^{ccrng_state}BQ*C[0Q]}16@0:8
v24@0:8^{ccspake_ctx=^{ccspake_cp}^{ccspake_mac}^{ccrng_state}BQ*C[0Q]}16
v24@0:8@16
r^{ccspake_cp=}16@0:8
v24@0:8r^{ccspake_cp=}16
r^{ccspake_mac=}16@0:8
v24@0:8r^{ccspake_mac=}16
Q16@0:8
v24@0:8Q16
v20@0:8B16
^{ccrng_state=^?}
^{ccspake_ctx=^{ccspake_cp}^{ccspake_mac}^{ccrng_state}BQ*C[0Q]}
@"NSString"
@"NSData"
r^{ccspake_cp=}
r^{ccspake_mac=}
@"_SFAESKey"
@40@0:8@16@24^@32
@"SPAKE2Common"
{CC_SHA1state_st="h0"I"h1"I"h2"I"h3"I"h4"I"Nl"I"Nh"I"data"[16I]"num"i}
{CC_SHA256state_st="count"[2I]"hash"[8I]"wbuf"[16I]}
{CC_SHA512state_st="count"[2Q]"hash"[8Q]"wbuf"[16Q]}
{CC_MD5state_st="A"I"B"I"C"I"D"I"Nl"I"Nh"I"data"[16I]"num"i}
@"<SFDigestOperation>"
@24@0:8@16
q16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8^{_NSZone=}16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v24@0:8@"NSData"16
@"NSData"16@0:8
@"NSData"24@0:8@"NSData"16
r^{__CFString=}16@0:8
r^{ccdigest_info=QQQQ*^v^?^?i}16@0:8
@40@0:8q16@24@32
@"NSData"40@0:8q16@"NSData"24@"NSError"32
@"NSData"40@0:8q16@"_SFKey"24@"NSError"32
@"_SFRSAKeySpecifier"
@"<SFMaskGenerationFunction>"
@"_SFECKeySpecifier"
@"<SFDigestOperationInternal>"
@"SFSymmetricEncryptionOperation"
@"_SFSignedData"40@0:8@"NSData"16@"_SFKey"24^@32
@"NSData"40@0:8@"_SFSignedData"16@"_SFKey"24^@32
@"_SFKeySpecifier"16@0:8
@40@0:8@16@24@32
{?="isOwner"b1"canRead"b1"canWrite"b1}
@36@0:8@16B24B28B32
@32@0:8^{__CFString=}16^@24
@48@0:8{?=q{?=Qq}}16q40
r^{__CFDictionary=}16@0:8
{?=q{?=Qq}}16@0:8
v40@0:8{?=q{?=Qq}}16
v24@0:8q16
{?="mode"q"authenticationPolicy"{?="authenticationRequirements"Q"subsetCount"q}}
@"NSArray"
@"NSDate"
@"NSArray<_SFServiceIdentifier>"
v20@0:8i16
i16@0:8
@"_SFServiceIdentifier"
@"NSDictionary"
@48@0:8@16@24@32@40
@20@0:8B16
v24@0:8@?16
@"NSPredicate"
@24@0:8@?16
v40@0:8@16@24@?32
v32@0:8@16@?24
@"<NSXPCProxyCreating>"
@"NSError"
@32@0:8@16q24
@"_SFKeySpecifier"
@"<_SFKeyAttributes>"
^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}
@24@0:8q16
v24@0:8@"NSString"16
@24@0:8^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16
^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16@0:8
@"NSMutableData"
@32@0:8q16^@24
@"NSData"32@0:8q16^@24
@"SFCodingOptions"
@40@0:8#16@24@32
@"_SFPublicKey"
@"_SFKeyPair"
@"_SFCertificate"
@"SFIdentityAttributes"
^{__SecCertificate=}
@24@0:8^{__SecCertificate=}16
^{__SecCertificate=}16@0:8
@"SFKeychainDataAttributes"
v48@0:8@16@24@32@?40
^{__CFDictionary=}40@0:8@16@24@32
^{__CFDictionary=}32@0:8@16@24
i40@0:8@16@24@32
B48@0:8@16@24@32^@40
@32@0:8^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16@24
^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}48@0:8@16^@24^^{__CFDictionary}32^i40
@36@0:8@16@24i32
@"_SFCredentialStore"
@"NSObject<OS_dispatch_queue>"
v40@0:8@"_SFCredential"16@"_SFAccessPolicy"24@?<v@?@"NSString"@"NSError">32
v32@0:8@"NSString"16@?<v@?@"_SFPasswordCredential"@"NSString"@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v40@0:8@"_SFCredential"16@"_SFCredential"24@?<v@?@"NSString"@"NSError">32
v40@0:8@"_SFCredential"16@"_SFCredential"24@?<v@?B@"NSError">32
@"SFTrustPolicy"
@"SFRevocationPolicy"
{?="allowCertificateFetching"b1"trustSystemAnchorCertificates"b1}
@32@0:8Q16q24
@48@0:8@16@24@32B40B44
@"<SFPseudoRandomFunction>"
@"_SFECKeyPair"
@"_SFECPublicKey"
@"<SFKeyDerivingOperation>"
@"_SFSymmetricKey"40@0:8@"_SFSymmetricKeySpecifier"16@24^@32
@40@0:8@16q24@32
@"_SFCiphertext"
@"_SFSymmetricKeySpecifier"
@"_SFAESKeySpecifier"
@"SFRSAEncryptionOperation"
@"_SFECDHOperation"
@"_SFCiphertext"40@0:8@"NSData"16@"_SFKey"24^@32
@"NSData"40@0:8@"_SFCiphertext"16@"_SFKey"24^@32
@48@0:8@16@24@32^@40
@56@0:8@16@24@32@40^@48
@48@0:8q16@24@32@40
r^{ccdigest_info=QQQQ*^v^?^?i}24@0:8^@16
