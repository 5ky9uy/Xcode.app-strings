@(#)PROGRAM:CoreAutoLayout  PROJECT:CoreAutoLayout-29
UUUUUU
NSISVariable_name
NSISVariable_valueRestriction
NSISVariable_shouldBeMinimized
NSISVariable_valueIsUserObservable
v16@?0@"NSISEngine"8
NSISVariable_delegate
NSISVariable.m
A variable must be decoded with a `delegate`
NSISVariable (%@) cannot be encoded with delegate (%@) that does not conform to NSCoding
void NSISVariableRemoveEngine(NSISVariable *, NSISEngine *)
Unable to remove variable %@ from engine %p, it wasn't found.
An unrestricted variable cannot be minimized
A variable that is restricted to take value zero should always be a marker
An unrestricted variable cannot be a marker
It doesn't make sense to minimize a variable that is restricted to zero
<orphaned without delegate (bug!):%p>
{id: %u, var: %u}
{id: %u}
Method %@ must be implemented by subclasser %@
void _NSBitSetResize(NSBitSet *, uint32_t)
NSBitSet.m
Memory exhaustion.
<%@: %p, %@ (%@)>
<%@: %p, %@>
contains
_equationDescriptionInParent
 == 
[%@]
-(%g)-
|, '|':%@
layoutRect
<%@: %p, %@ (opts: %lu)>
%@%g*%@
%@%@
v8@?0
v16@?0@8
NSISObjectiveLinearExpression.m
NSISObjectiveLinearExpression init is no longer supported.
v20@?0{?=I}8d12
{objective %p: %@
v16@?0^{?=^{?}SSII}8
i24@?0r^v8r^v16
 + %@*%@
Requires an engine to look up value restriction
%@: internal error.  Setting empty vector for variable %d.
v12@?0{?=I}8
Invalid parameter not satisfying: %@
isfinite(value)
origVar.value != newVar.value
objective %p replacing %d with %@
Unexpected variable %d in expression replacing that same variable
%@: internal error.  Substituting an expression for a variable (%d) that doesn't exist in this expression
The var %d is in the heap when it shouldn't be.
Variable %d is in the objective row with an empty priority vector
v24@?0@8@16
NSLayoutConstraintExplainer.m
Expected engine to contain variable %@
Error variable freezing should never fail.
    %@:  satisfaction changes by %f
============= Satisfaction Explainer %p =============
Target constraint: 
    %@
The constraint is not satisfied because it is inactive.
The constraint is active, but cannot be unsatisfied since there is no layout engine yet.
Frozen constraints:     (thaw with 'po [%p thawConstraint:<address>]')
    %@
Required constraints:    (relax with 'po [%p relaxConstraint:<address>]')
The target constraint is already satisfied.
The target constraint can't be satisfied because it's mutually exclusive with the following constraints:
The additional required constraints cannot be satisfied because the following set are mutually exclusive:
B24@?0d8d16
Forcing the target constraint to be satisfied would make the following higher priority constraints less satisfied:
If the above list only shows correct constraints, then the problem may lie with an even higher priority constraint that was unaffected because the layout engine was able to stretch one of these instead.  You can 'freeze' these correct constraints and re-print the explanation using this lldb command:
po [%p freezeConstraint:<address-of-constraint>]
This will cause higher priority constraints to be shown.
The target constraint can be satisfied without making any higher priority constraints less satisfied.  This probably means the layout is ambiguous, which in this case is probably due to opposing constraints of the same priority.  Here's a list of likely candidates:
If you cannot alter the priority of the above constraints to resolve the ambiguity, then the problem may lie with a different same-priority constraint that was unaffected because the layout engine happened to stretch these instead.  You can 'freeze' these correct constraints and re-print the explanation using this lldb command:
po [%p freezeConstraint:<address-of-constraint>]
This will potentially reveal other problematic constraints.
Forcing the target constraint to be satisfied didn't seem to effect anything else of note.  This isn't something that should happen under normal circumstances.  Here's the list of all constraints with satisfaction changes.
Please file a radar with the entire Satisfaction Explainer output above, and include a sample app if possible.
%3u: %@ %@:%u
rowIndex
colIndex
%3u: %@ == %@
v24@?0{?=@^{?}}8
%3u: %@ == rowIndexes:(%@) rowHeads:(%@)
storage:%@
@"NSMapTable"8@?0
.brokenPosError
.brokenNegError
<unknown var (bug!) with engine as delegate:%p>
NSISEngine integralization is no longer supported, setting shouldIntegralize to YES does nothing.
v32@?0{?=@^{?}}8^B24
NSISEngine.m
Dirty observable list is corrupt.
B24@?0{?=@^{?}}8
Unknown infeasibility behavior
v32@?0{?=@^{?}}8d24
Unable to find an incoming rowHead for row:%@
Failed to find an incoming row head for pivot
Should be copied into an empty row
B32@?0{?=@^{?}}8d24
tempToBeOptimizedToZero
tempToBeOptimizedToZeroObjective
Unable to find a new row head
objective
placeholderForExpressionBeingAdded
Failed to rebuild layout engine without detectable loss of precision.  This should never happen.  Performance and correctness may suffer.
Sucessfully rebuilt layout engine.
Nested optimization should never be triggered.  This is probably due to autolayout work happening inside an NSISVariable delegate callback, which is not allowed.
Engine still needs optimization after optimizing.
Engine still needs optimization after iterating many times.
Attempt to rebuild engine with a pending list of constraints to remove.
Q16@?0@"NSISVariable"8
Engine marked as needing optimization even though it's already in progress.
B20@?0{?=I}8d12
_dbg_anyEngineContainsVariable is unsupported, rebuild with TRACK_ENGINES=1
engine %p adding constraint %@
It's not legal to add a constraint twice.  %@ is already added.
engine %p directly added constraint %@ as %@
engine %p indirectly added constraint %@ as %@
Warning: Failed to add constraint even when behavior = NSISBreakConstraint
Trying to remove a constraint which is not present, %@
engine %p removing constraint %@
-[NSISEngine removeConstraintWithMarker:]
Marker should not be in a body row.
The marker should no longer be in the objective row.
isfinite(delta)
v24@?0@8@"NSISVariable"16
Marker:
%lu rows. Variable counts:
%3lu -> %3lu
>= %3lu -> %3lu
%lu cols. Variable counts:
<%@: %p>{ delegate:%p
EngineVars:
  Rows:
  Columns:
  Constraints:
  Statistics:
Engine var %u with nil variable in engine %p.
Variable %p not connected back to engine %p with the correct index %u != %u.
Engine var backpointer in row %u doesn't match engineVarIndex %u != %u
Engine var backpointer in col %u doesn't match engineVarIndex %u != %u
An empty row is not allowed, it should always contain body variables.
Body variable %@ with engineVarIndex %u appear in row %u, but that row doesn't appear in its cross index %@
Cross index says variable %@ at colIndex %u appears in row %u, but that row only contains:%@
the variable %@ is incorrectly reported to be in rows with heads %@
the variable %@ is not reported as being in rows with heads %@
every variable in a row headed by an NSISRestrictedToZero variable must be NSISRestrictedToZero as well.  The row %@ contains %@ which is not restricted to zero.
The tracked set of variables with value restriction violations is missing these variables: %@
A row in the engine has an infinite coefficient.  %@
A row in the engine has a near-zero coefficient.  %@
NSISObjectiveLinearExpression *_objectiveRow_rawBody(NSISRow)
NSISEngine_Row.h
Tried accessing the objective linear expression for regular row:%@
NSISCol _engineVar_col(NSISEngineVar)
NSISEngine_EngineVar.h
Tried accessing the col index for a variable that is a row head:%@
NSISEngineVar _engineVar_forVariable(NSISEngine *, NSISVariable *)
Unable to find index for variable:%@ in engine:%@
Variable stored in table doesn't match passed in variable %@ != %@
NSISRow _engineVar_row(NSISEngineVar)
Tried accessing the row index for a variable that isn't a row head:%@
engine %p add variable %@
void _row_rawSetHead(NSISRow, NSISCol)
Tried converting column variable %@ to a row head while it still appears as a body variable in some rows:%@
B12@?0{?=I}8
%p: Optimized in %lu moves (cumulative pivots: %lu)
Objective: %@
Auto layout internal error.  Cannot find an outgoing row head for incoming head %@, which should never happen. Priority: %g, Coefficient: %.10f
Warning: This system of layout constraints is extremely difficult to optimize, taking %ld pivots.  Try ensuring your layout is not over-constrained and you have no redundant constraints. This warning will only be displayed once.
This application is modifying the autolayout engine from a background thread after the engine was accessed from the main thread. This can lead to engine corruption and weird crashes.
 Stack:%@
This application is modifying the autolayout engine from more than a single background thread, which can lead to engine corruption and weird crashes. 
 Stack:%@
WebThread
com.apple.mail
Modifications to the layout engine must not be performed from a background thread after it has been accessed from the main thread.
Modifications to the layout engine must not be performed from more than a single background thread.
engine %p remove variable %@ at index %d
void _engineVar_rawRemove(NSISEngineVar)
Not possible to remove variable:%@ from engine %@.
com.apple.Maps
    %@
</%@>
void _NSLayoutRuleRemoveNodeHierarchyFromParent(_NSLayoutRuleNode *, id<_NSLayoutRuleNodeParent>, NSMutableArray<_NSLayoutRuleNode *> **)
NSLayoutRuleNode.m
%@ is not in %@'s rule subtree
v16@?0@"_NSLayoutRuleNode"8
<%@: '%@'
<%@: '%p'
</%@>
NSLogUnusualAppConfig
%@=%@
ident
class
description
markedConstraintDescription
userObservable
orientationHint
variables
coefficients
constant
command
args
shouldIntegralize
Unknown playback selector %@
(null)
Cannot wrap object %@
float
type
data
approx
Actions
NSConstraintBasedLayoutDebug
NSConstraintBasedLayoutDebugEngineConsistency
NSConstraintBasedLayoutLogPivotCounts
NSConstraintBasedLayoutOutputEngineTrace
NSConstraintBasedLayoutLogEngineRebuilds
NSConstraintBasedLayoutAllowBGThreads
NSConstraintBasedLayoutAllowUnoptimizedReads
NSConstraintBasedLayoutTrackAllocation
NSConstraintBasedLayoutAnchorEquivalence
NSConstraintBasedLayoutVariableChangeTransactions
NSConstraintBasedLayoutAriadneTracepoints
NSConstraintBasedLayoutTrackDirtyObservables
NSConstraintBasedLayoutDeferOptimization
variable
v24@?0@"NSISVariable"8d16
linear_expression
void VerifyHeapIntegrity(NSISSparseVectorMinHeap *)
NSISSparseVectorMinHeap.m
The value at position %d was bigger than its left child.
The value at position %d was bigger than its right child.
%g:%g
v24@?0d8d16
<%@>
CFIndex NSISSparseVectorAddTermWithPlaceValueCoefficientStartingIndex(NSISSparseVector *, NSISPlaceValue_t, NSISFloat_t, NSISFloat_t, CFIndex)
NSISSparseVector.m
placeValue > 0
NSISLinearExpression init is no longer supported.
%@ is not copyable
void NSISLinExpSetCoefficientForVar(NSISLinExp *, NSISFloat_t, NSISLinExpVar)
isfinite(coefficient)
void NSISLinExpReplaceVarWithVar(NSISLinExp *, NSISLinExpVar, NSISLinExpVar, NSISFloat_t)
NSISLinearExpressionAssert failure in %s, at line %d
NSISLinExpReplaceVarWithVar
-[NSISLinearExpression dealloc]
void NSISLinExpAddExpression(NSISLinExp *, NSISLinExp *, NSISFloat_t)
isfinite(multiplyBy)
void NSISLinExpAddExpressionWithProcessors(NSISLinExp *, NSISLinExp *, NSISFloat_t, void (^)(NSISLinExpVar), void (^)(NSISLinExpVar))
v24@?0@?<v@?{?=I}>8@?<v@?{?=I}>16
void NSISLinExpAddVar(NSISLinExp *, NSISLinExpVar, NSISFloat_t)
isfinite(coeff)
-[NSISLinearExpression addVariable:coefficient:]
Attempt to add a nil NSISVariable to an expression.  This is probably a bug in autolayout.
void NSISLinExpAddVarWithProcessors(NSISLinExp *, NSISLinExpVar, NSISFloat_t, void (^)(NSISLinExpVar), void (^)(NSISLinExpVar))
-[NSISLinearExpression addVariable:coefficient:processVariableNewToReceiver:processVariableDroppedFromReceiver:]
NSISFloat_t NSISLinExpIncrementConstant(NSISLinExp *, NSISFloat_t)
isfinite(c)
 + %g*%u
 + %g*%@
NSISLinExpScaleByWithDroppedColProcessor
NSISLinearExpression.m
scalar != 0
Nonzero coefficient expected
Variable is in the array twice
Variables should be in ascending order
Nonzero variable in excess capacity
Nonzero coefficient in excess capacity
capacity < UINT16_MAX
NSISLinearExpression no longer supports newExpressionWithCapacity:
-[NSISLinearExpression returnToPool]
-[NSISLinearExpression copyContentsAndReturnToPool]
NSISLinearExpression no longer supports acquireFromPoolForUseCase:
+[NSISLinearExpression acquireFromPoolForUseCase:engine:]
vars_remove_idx
vars_convert_to_inline
vars_index_with_insert
expression_ensure_capacity
slab_duplicate
NSISLinExpVar variable_to_linexpvar(NSISLinearExpression *, NSISVariable *)
Expression %@ unable to find variable %@ in engine %p
void _hashMapRehash(NSISSparseVectorMap *, NSISSparseVectorMapDirection)
NSISSparseVectorMap.m
Unable to grow sparse vector hash table
Corrupt hash table
void _deleteWithHashFunction(NSISSparseVectorMap *, uint32_t, HASH_FUNCTION)
Tried to remove a sparse vector value from an empty map which shouldn't happen.
Tried to remove a sparse vector value that wasn't in the map.
NSISSparseVector *_findWithHashFunction(NSISSparseVectorMap *, uint32_t, HASH_FUNCTION)
NSLayoutAnchor_firstChildAnchor
NSDerivativeLayoutAnchor.m
%@ decoded with empty root dimension
NSLayoutAnchor_multiplier
NSLayoutAnchor_constant
NSLayoutAnchor_secondChildAnchor
%@ decoded with empty first dimension
%@ decoded with empty second dimension
`minuend` is required to be non-nil
`subtrahend` is required to be non-nil
`minuend` is required to a compatible type with `subtrahend`
%@ decoded with empty first anchor (minuend)
%@ decoded with empty second anchor (subtrahend)
(%@ - %@)
void _CompositeAxisAnchor_InitWithCoder(NSCoder *, NSLayoutAnchor **, NSLayoutDimension ** _Nullable, CGFloat *, CGFloat *)
NSLayoutAxisAnchor decoded with empty base anchor
NSLayoutErrorDomain
NSSpace
NSLayoutAnchorConstraintSpace
NSLayoutConstraint.m
First item cannot be set to a nil value
Unable to change the relation after a constraint has been added to a view
Unable to change the multiplier after a constraint has been added to a view
Multiplier is not finite!  That's illegal.  multiplier:%g
It's illegal to set priority:%g.  Priorities must be greater than 0 and less or equal to NSLayoutPriorityRequired, which is %f.
Priority Modified
Identifier Changed
NSLayoutConstraintToAnimationsKey
kSavedConstraintAllocationStackKey
%@ Break on %s to debug.  This will be logged only once.  This may break in the future.
This NSLayoutConstraint is being configured with a constant that exceeds internal limits.  A smaller value will be substituted, but this problem should be fixed.
BOOL _NSLayoutConstraintNumberExceedsLimit(void)
%@ constant is not finite!  That's illegal.  constant:%g firstAnchor:%@ secondAnchor:%@
Constant Modified
(%g)
(unresolvable)
Cannot set symbolic constant multiplier when the constant is not symbolic
[%@]-%@-[%@]
[%@%@]
|-%@-[%@]
[%@]-%@-|
(LTR)
priority:%g
<%s:%p %@>
<%s:%p
'%@'
'|':%@
  (%@%@
active
inactive
names:
%@ - only keyed coders are supported by %@
NSFirstItem
NSFirstAttributeV2
NSFirstAttribute
NSFirstAnchor
NSRelation
NSMultiplier
NSSecondItem
NSSecondAttributeV2
NSSecondAttribute
NSSecondAnchor
NSConstantV2
NSSymbolicConstant
NSSymbolicConstantMultiplier
NSShouldBeArchived
NSPriority
NSLayoutIdentifier
NSConstant
Added To Window
Unable to install constraint on view.  Does the constraint reference something from outside the subtree of the view?  That's illegal. constraint:%@ view:%@
kSavedConstraintDescriptionKey
Removed From Window
Unknown constraint relation: %d
We are leaking a layout variable
Cannot _tryToActivateMeasuringErrors:andMutuallyExclusiveConstraints:, constraint %@ is already active.
This NSLayoutConstraint seems to be the delegate of an NSISVariable it doesn't know anything about. This is an internal Cocoa bug.
BOOL _NSLayoutConstraintDelegateCallFromUnknownVariable(void)
marker
posErrorMarker
errorMarker
slackMarker
negError
error
slack
<unknown var (bug!):%p>
%p:%@.%@
%p.%@
v16@?0@"NSISVariable"8
Unable to activate constraint with anchors %@ and %@ because they have no common ancestor.  Does the constraint or its anchors reference items in different view hierarchies?  That's illegal.
%@: Constraint must contain a first layout anchor
%@: A constraint cannot be made from %@ to a constant. Location anchors require being paired.
%@: A constraint cannot be made between %@ and %@ because their units are not compatible.
Cannot create a standard spacing constraint between anchors '%@' and '%@': at least one anchor must be associated with a view or a guide
Unknown layout attribute
Hug:%g CompressionResistance:%g
Expected marker restricted to 0.
This should be a constraint if we're constraining an error variable.
NSDictionaryOfVariableBindings failed because either one of the values is nil, or there's something wrong with the way the macro is being invoked.  Cannot assign value nil for key "%@". Keys:%@
Unable to parse constraint format: It's an empty string.
Unable to parse constraint format: It contains non-ASCII characters.
<%@:%p 
Unable to parse constraint format: 
Expected ':' after 'V' to specify vertical arrangement
Expected ':' after 'H' to specify horizontal arrangement
Expected a connection after the '|' character
Expected a view or '|'
Expected the end of the format string
Expected a view
Expected a view. View names must start with a letter or an underscore, then contain letters, numbers, and underscores.
%@ is not a key in the views dictionary.
Unexpectedly ran out of character fodder in the middle of parsing a view
Expected ']' after specifying thickness.
A predicate on a view's thickness must end with ')' and the view must end with ']'
Expected a ']' here. That is how you give the end of a view.
Expected a '-' here. To specify a list of constraints, you must use parentheses around the list of constraints
Expected a '-' here
Expected a ')' at the end of a constraint modifier, or a ',' before another constraint modifier
Cannot tell if this - is a minus sign or an accidental extra bar in the connection. Use parentheses around negative numbers.
Invalid priority specified: %g. Priority cannot be higher than NSLayoutPriorityRequired, which is 1000.
Invalid priority specified: %g. Priority must be greater than 0
Expected a number or a key from the metrics dictionary, but encountered something else
It's not possible to set a space equal to the width or height of a view.  Perhaps you want to use a view as a spacer? [view1][spacer(==view1)][view2]
Encountered metric with name "%@", but value was not specified in metrics or views dictionaries
Expected a number or key from the metrics dictionary, but encountered something else
Unknown relation. Must be ==, >=, or <=
Expected more input
Unable to interpret '|' character, because the related view doesn't have a superview
BaselineToBaseline format option not valid for horizontal layout
No view was specified for this constraint
Options mask required views to be aligned on a horizontal edge, which is not allowed for layout that is also horizontal.
Options mask required views to be aligned on a vertical edge, which is not allowed for layout that is also vertical.
NSLayoutConstraint
@8@?0
Created
NSLayoutConstraint for %@
%@: Unknown layout attribute
%@: Constraint must contain a first layout item
%@: Constraint items must each be a view or layout guide.
%@: A multiplier of 0 or a nil second item together with a location for the first attribute creates an illegal constraint of a location equal to a constant. Location attributes must be specified in pairs.
%@: A constraint cannot be made that sets a location equal to a constant. Location attributes must be specified in pairs.
%@: Invalid pairing of layout attributes.
%@: A constraint cannot be made between a leading/trailing attribute and a right/left attribute. Use leading/trailing for both or neither.
h=%c%c%c v=%c%c%c
@"NSCharacterSet"8@?0
NSInvalidLayoutConstraintException
A constraint factory method was passed a nil layout anchor.  This is not allowed, and may cause confusing exceptions.
BOOL _NSLayoutConstraintToNilAnchor(void)
NSLayoutAnchor.m
NSLayoutAnchor decoding requires keyed coding
NSLayoutAnchor_type
NSLayoutAnchor_name
NSLayoutAnchor_referenceView
NSLayoutAnchor_attr
An anchor's reference view was not included in the archive.
An anchor's name was not included in the archive.
NSLayoutAnchor_variable
Can't decode anchor from corrupt archive.
NSLayoutAnchor encoding requires keyed coding
Class of `sourceAnchor` must be the same as the receiver
item != nil
NSLayoutAnchor cannot be created without an item.
%@ cannot create anchor for proxy attribute %d with item %@
Only NSLayoutAnchors created with `%@` respond to `%@`. %@ is of type %d
+anchorWithItem:attribute:
NSLayoutAnchor cannot be created without an name.
NSLayoutAnchor must be related to a view.
NSLayoutAnchor should have a name describing the geometry it represents.
+anchorNamed:inItem:
%@:%p
Concrete anchor subclass (%@, type %d) must implement `%@`
%@.%@
Concrete NSLayoutAnchor subclasses must either provide a `name` or `equationDescription`
`_valueInEngine:` is not supported for item proxy anchors
 (names: 
Constraint improperly relates anchors of incompatible types: %@
Expected non-nil `layoutItem` parameter
`valueInItem:` can currently only be used with anchors that are in a layout engine
Expected anchors (%@)'s ancestor item (%@) and provided item (%@) to be in same layout engine.
Expected common ancestor between anchor (%@)'s ancestor item (%@) and provided item (%@)
Unexpected anchor type (%@) is not able to be compared
Expected `layoutItem` to have non-nil layout engine
Requires layout item to have layout engine
NSLayoutXAxisAnchorResolvedDirection _ResolvedDirectionForAnchorAbstractionsForAnchorsInLayoutDirectionContext(NSLayoutAnchor * _Nonnull, id _Nullable, NSLayoutAttribute, id<NSLayoutItem> _Nullable, CGFloat * _Nullable)
Incompatible anchor comparison for resolving anchor abstractions: %@ with %@
left
right
bottom
leading
trailing
width
height
centerX
centerY
lastBaseline
firstBaseline
leftMargin
rightMargin
leadingMargin
trailingMargin
topMargin
bottomMargin
centerXWithinMargins
centerYWithinMargins
minX
midX
maxX
minY
midY
maxY
Class _AnchorClassForAttribute(NSLayoutAttribute)
ERROR: NSLayoutAnchors cannot be created with proxy attribute %ld
q24@?0@"<_NSLayoutConstraintComparable>"8@"<_NSLayoutConstraintComparable>"16
void _NSLayoutConstraintDiffConstraints(NSArray<id<_NSLayoutConstraintComparable>> * _Nonnull, BOOL, NSArray<id<_NSLayoutConstraintComparable>> * _Nonnull, BOOL, id<_NSLayoutConstraintComparable> * _Nullable, NSUInteger * _Nullable, id<_NSLayoutConstraintComparable> * _Nullable, NSUInteger * _Nullable, id<_NSLayoutConstraintComparable> * _Nullable, id<_NSLayoutConstraintComparable> * _Nullable, NSUInteger * _Nullable, id<_NSLayoutConstraintComparable> * _Nullable, NSUInteger * _Nullable, BOOL)
NSLayoutConstraintDiff.m
_NSLayoutConstraintSortDiff post-condition
void _NSLayoutConstraintApplyDiffWithCounterpartsNSArrays(NSArray<NSLayoutConstraint *> * _Nonnull, NSArray<id<_NSLayoutConstraintComparable>> * _Nonnull)
Unexpected difference in length
void _NSLayoutConstraintSortDiff(id<_NSLayoutConstraintComparable>  _Nonnull * _Nullable, const NSUInteger, const BOOL, id<_NSLayoutConstraintComparable>  _Nonnull * _Nullable, const NSUInteger, const BOOL, NSLayoutConstraintComparisonResult (^)(id<_NSLayoutConstraintComparable> _Nonnull, id<_NSLayoutConstraintComparable> _Nonnull), size_t * _Nullable, NSUInteger * _Nonnull, size_t * _Nullable, NSUInteger * _Nonnull, size_t * _Nullable, size_t * _Nullable, NSUInteger * _Nonnull)
Expected maintained + new values to have same length as `next`
NSLayoutGeometry.m
xAxisAnchor != nil
yAxisAnchor != nil
NSLayoutXAxisAnchor
NSLayoutYAxisAnchor
leading != nil
top != nil
width != nil
height != nil
%@.leading
%@.top
%@.width
%@.height
NSLayoutLeadingAnchor
NSLayoutTopAnchor
NSLayoutWidthAnchor
NSLayoutHeightAnchor
NSLayoutName
<%@:%p '%@'>
 -Leading: %@
 -Width: %@
 -Top: %@
 -Height: %@
%@:%p'%@'
%@.centerY
%@.bottom
%@.centerX
%@.trailing
Unable to reallocate NSISTableBlock %p. old size = %lu new size = %lu
Unable to allocate NSISTableBlock storage. size = %lu
NSISUnrestrictedVariable
NSISRestrictedToNonNegativeVariable
NSISRestrictedToNonNegativeVariableToBeMinimized
NSISRestrictedToNonNegativeMarkerVariable
NSISRestrictedToZeroMarkerVariable
NSISRestrictedToNonNegativeMarkerVariableToBeMinimized
NSISInlineStorageVariable
NSISVariableDelegate
NSObject
NSISVariable
NSCoding
NSLayoutAnchorRule
NSLayoutRule
NSCopying
NSLayoutPointRule
NSLayoutRectRule
NSAlignmentLayoutRule
NSStackLayoutRule
NSStackInContainerRule
NSVisualFormatLayoutRule
NSVisualFormatLayoutRuleWorkarounds
NSLayoutRuleExtensions
_NSISLinearExpressionObservable
_NSISVariableObservable
_NSLayoutRectObservable
NSISObjectiveLinearExpression
Testing
NSLayoutConstraintExplainer
NSISEngine
_NSLayoutRuleNode
_NSConstraintDescriptionLayoutRuleNode
_NSCompositeLayoutRuleNode
_NSLayoutRuleNodeParent
_NSAssociatedRuleNode
NSISPlaybackOperationVariableDelegate
NSISPlaybackOperation
NSISVariableObservation
NSISLinearExpression
NSFastEnumeration
_NSArithmeticLayoutDimension
NSCompositeLayoutAnchor
_NSCompositeLayoutDimension
_NSDistanceLayoutDimension
_NSCompositeLayoutXAxisAnchor
_NSCompositeLayoutYAxisAnchor
NSCompositeAnchorCreation
NSISObjectiveLinearExpressionProxy
NSLayoutConstraint
NSISConstraint
NSAutoresizingMaskLayoutConstraint
NSContentSizeLayoutConstraint
NSErrorVariableConstraint
NSLayoutConstraintParser
NSIBPrototypingLayoutConstraint
NSLayoutAnchor
NSLayoutXAxisAnchor
NSLayoutYAxisAnchor
NSLayoutDimension
DirectionAbstraction
_NSAutoresizingMaskXAxisAnchor
_NSAutoresizingMaskYAxisAnchor
ValueInCoordinateSpace_NotYetProposed
NSLayoutPoint
NSLayoutRect
NSLayoutRectangle
valueRestriction
shouldBeMinimized
markedConstraint
delegate
initWithCoder:
decodeObjectForKey:
copy
containsValueForKey:
decodeIntegerForKey:
decodeBoolForKey:
encodeWithCoder:
encodeObject:forKey:
encodeInteger:forKey:
encodeBool:forKey:
name
dealloc
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
nsis_valueOfVariable:didChangeInEngine:
nsis_descriptionOfVariable:
nsis_valueOfVariableIsUserObservable:
nsis_orientationHintForVariable:
setName:
setValueRestriction:
setShouldBeMinimized:
valueIsUserObservable
setValueIsUserObservable:
_name
_valueRestriction
_shouldBeMinimized
_valueIsUserObservable
T@"NSString",C,V_name
Ti,V_valueRestriction
TB,V_shouldBeMinimized
TB,V_valueIsUserObservable
init
endBookkeepingForVariableIfUnused:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
encodeConditionalObject:forKey:
array
addObject:
keyEnumerator
countByEnumeratingWithState:objects:count:
initWithKeyOptions:valueOptions:capacity:
setObject:forKey:
count
removeObjectForKey:
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
exceptionWithName:reason:userInfo:
setDelegate:
variableWithName:valueRestriction:shouldBeMinimized:valueIsUserObservable:
stringWithFormat:
stringByAppendingString:
variableWithDelegate:valueRestriction:shouldBeMinimized:
variableMarkingConstraint:valueRestriction:shouldBeMinimized:
variableWithName:valueRestriction:shouldBeMinimized:
engines
overflowEngineVarIndexForEngine:
descriptionInEngine:
orientationHint
shouldBeIntegral
allowedMagnitudeForIntegralizationAdjustmentOfMarkedConstraint
markedConstraintIsEligibleForIntegralizationAdjustment
valueIsUserVisible
_delegate
_overflowEngines
_engines
_engineVarIndexes
_ident
T@"<NSISVariableDelegate>",V_delegate
TB,R
Ti,R
T@"NSArray",R
constraintWithAnchor:relatedBy:toAnchor:multiplier:constant:
setIdentifier:
ruleDescription
constant
componentsJoinedByString:
copyWithZone:
makeChildRules
identifier
makeLayoutConstraint
firstAnchor
secondAnchor
relation
priority
multiplier
_firstAnchor
_secondAnchor
_relation
_identifier
_constant
_multiplier
_priority
T@"NSLayoutAnchor",R,C,V_firstAnchor
T@"NSLayoutAnchor",R,C,V_secondAnchor
Tq,R,V_relation
Td,R,V_constant
Td,R,V_multiplier
Tf,R,V_priority
T@"NSString",R,C,V_identifier
xAxisAnchor
ruleEqualToAnchor:
yAxisAnchor
arrayWithObjects:count:
firstLayoutPoint
secondLayoutPoint
_firstLayoutPoint
_secondLayoutPoint
T@"NSLayoutPoint",R,C,V_firstLayoutPoint
T@"NSLayoutPoint",R,C,V_secondLayoutPoint
leadingAnchor
firstLayoutRect
secondLayoutRect
setRelation:
_firstLayoutRect
_secondLayoutRect
T@"NSLayoutRect",R,C,V_firstLayoutRect
T@"NSLayoutRect",R,C,V_secondLayoutRect
Tq,V_relation
arrayWithCapacity:
valueForKey:
alignmentWithAnchors:
alignedAnchors
_alignedAnchors
T@"NSArray",R,C,V_alignedAnchors
numberWithDouble:
stackWithOrientation:stackedRects:spacing:
orientation
trailingAnchor
ruleEqualToAnchor:constant:
topAnchor
bottomAnchor
_equationDescriptionInParent
horizontalStackWithRects:spacing:
verticalStackWithRects:spacing:
stackedRects
spacing
_stackedRects
_spacing
_orientation
T@"NSArray",R,C,V_stackedRects
Td,R,V_spacing
Tq,R,V_orientation
stackWithOrientation:stackedRects:inContainer:spacing:
firstObject
lastObject
horizontalStackWithRects:inContainer:spacing:
verticalStackWithRects:inContainer:spacing:
containingRect
_containingRect
T@"NSLayoutRect",R,C,V_containingRect
allKeys
null
objectsForKeys:notFoundMarker:
dictionaryWithObjects:forKeys:
nsli_superitem
nsli_layoutRect
ruleWithVisualFormat:options:metrics:rects:containerRect:
constraintsWithVisualFormat:options:metrics:views:
ruleWithVisualFormat:options:metrics:views:
_visualFormatString
_formatOptions
_metricMapping
_rectMapping
_containerRect
_nearestAncestorLayoutItem
widthAnchor
heightAnchor
nsli_ancestorSharedWithItem:
nsli_isLegalConstraintItem
ruleGreaterThanOrEqualToAnchor:
ruleLessThanOrEqualToAnchor:
ruleGreaterThanOrEqualToAnchor:constant:
ruleLessThanOrEqualToAnchor:constant:
ruleEqualToAnchor:constant:priority:identifier:
ruleGreaterThanOrEqualToAnchor:constant:priority:identifier:
ruleLessThanOrEqualToAnchor:constant:priority:identifier:
ruleEqualToConstant:
ruleLessThanOrEqualToConstant:
ruleGreaterThanOrEqualToConstant:
ruleEqualToConstant:priority:identifier:
ruleGreaterThanOrEqualToConstant:priority:identifier:
ruleLessThanOrEqualToConstant:priority:identifier:
ruleEqualToLayoutPoint:
ruleEqualToLayoutRect:
ruleContainingLayoutRect:
variableCount
initWithCapacity:
observableForVariable:
addObserverBlock:
variableChangeTransactionSignal
boolValue
addObserver:
valueForExpression:
floatValue
receiveObservedValue:
observableForExpression:inEngine:
_overrideUseFastBlockObservers
_lastValue
_expression
_associatedEngine
_variableObservations
_changeTransactionObservation
_valueIsDirtied
hasValue:forVariable:
observableForVariable:inEngine:
valueHasChanged
emitValueIfNeeded
_nextDirtyObservable
_prevDirtyObservable
_variable
_hasLastValue
observableValueInItem:
initWithObjects:
valueInItem:
valueWithRect:
observableForRect:inItem:
_anchorObservations
_rectangle
_layoutItem
variableForEngineVarIndex:
numberWithUnsignedInt:
appendFormat:
appendString:
valueRestrictionForVar:
valueRestrictionForEngineVarIndex:
addVar:priority:times:processVarNewToReceiver:processVarDroppedFromReceiver:
replaceVar:withVarPlusDelta:timesVar:processVarNewToReceiver:processVarDroppedFromReceiver:
replaceVar:withExpression:processVarNewToReceiver:processVarDroppedFromReceiver:
verifyInternalIntegrity
addVariable:priority:times:
removeVariable:
restrictedVariableWithCoefficientOfLargestNegativeMagnitude
replaceVariable:withExpression:processVariableNewToReceiver:processVariableDroppedFromReceiver:
_engine
_priorityMap
_initWithEngine:
_addVar:priority:times:
_removeVar:
_replaceVar:withExpression:processVarNewToReceiver:processVarDroppedFromReceiver:
_restrictedVarWithCoefficientOfLargestNegativeMagnitudeOutVar:
_variableCount
recalculateExplanation
setSatisfactionChanges:
setPriorities:
setMutuallyExclusiveConstraints:
initWithVariable:value:
_addToEngine:mutuallyExclusiveConstraints:
constraints
strongToStrongObjectsMapTable
isActive
unsatisfaction
numberWithFloat:
_markerAndPositiveExtraVar
_freezeErrorVariable:forcingZeroValue:inEngine:accumulatingConstraints:andMutuallyExclusiveConstraints:
objectForKey:
priorities
_removeFromEngine:
constrainedConstraint
containsObject:
satisfactionChanges
string
mutuallyExclusiveConstraints
_satisfactionChangeCount:withResults:
thawConstraint:
removeObject:
relaxConstraint:
initWithConstraint:
requireConstraint:
freezeConstraint:
_constraint
_requiredConstraints
_frozenConstraints
_relaxedConstraints
_satisfactionChanges
_priorities
_mutuallyExclusiveConstraints
T@"NSMapTable",&,V_satisfactionChanges
T@"NSMapTable",&,V_priorities
T@"NSArray",&,V_mutuallyExclusiveConstraints
_brokenConstraintPositiveErrorsIfAvailable
_brokenConstraintNegativeErrorsIfAvailable
enumerateRows:
_dirtyListPrependObservation:
_dirtyListPrependObservable:
optimize
emitValueIfNeededWithEngine:
objectEnumerator
nsli_minXVariable
nsli_minYVariable
nsli_boundsWidthVariable
nsli_boundsHeightVariable
engine:markerForConstraintToBreakAmongConstraints:
engine:willBreakConstraint:dueToMutuallyExclusiveConstraints:
fixUpValueRestrictionViolationsWithInfeasibilityHandlingBehavior:
objectAtIndex:
removeObjectAtIndex:
copyExpressionSubstitutingRowHeadVariables:intoRow:
tryUsingArtificialVariableToAddConstraintWithMarker:row:usingInfeasibilityHandlingBehavior:mutuallyExclusiveConstraints:
removeConstraintWithMarker:
setVariablesWithValueRestrictionViolations:
dataWithPropertyList:format:options:error:
propertyListWithData:options:format:error:
withoutOptimizingAtEndRunBlockWithAutomaticOptimizationDisabled:
_optimizeWithoutRebuilding
rebuildFromConstraints
removeAllObjects
_addToEngine:
getObjects:range:
_optimizeIfNotDisabled
withBehaviors:performModifications:
tryToAddConstraintWithMarker:expression:mutuallyExclusiveConstraints:
numberWithBool:
constraintsDidChangeInEngine:
containsVariable:
initWithOptions:capacity:
_accumulateReferenceLayoutItemsIntoTable:
constraintDidChangeSuchThatMarker:shouldBeReplacedByMarkerPlusDelta:
initWithVariable:
stringWithString:
compare:
sortedArrayUsingSelector:
mapTableWithKeyOptions:valueOptions:
allObjects
addObjectsFromArray:
mutableCopy
minusSet:
setWithArray:
valueForVariable:
_dbg_anyEngineContainsVariable:
setEnableEngineTrace:
enableEngineTrace
traceFileSuffix
setTraceFileSuffix:
setLogOnInvalidUseFromBGThread:
T@"NSString",C
integralizationAdjustmentForMarker:
shouldIntegralize
setShouldIntegralize:
isTrackingVariableChanges
performPendingChangeNotifications
performPendingChangeNotificationsForItem:
performModifications:withUnsatisfiableConstraintsHandler:
engineVarIndexForVariable:
beginRecording
recordedCommandsData
replayCommandsData:verifyingIntegrity:
withAutomaticOptimizationDisabled:
withDelegateCallsDisabled:
hasValueForPossiblyDeallocatedVariable:
hasValue:forExpression:
beginBookkeepingForVariableIfNeeded:
tryToAddConstraintWithMarker:expression:integralizationAdjustment:mutuallyExclusiveConstraints:
addVariableToBeOptimized:priority:
removeVariableToBeOptimized:priority:
changeVariableToBeOptimized:fromPriority:toPriority:
containsConstraintWithMarker:
tryToChangeConstraintSuchThatMarker:isReplacedByMarkerPlusDelta:undoHandler:
removeObservableForVariable:
hasObservableForVariable:
startObservingChangesForVariable:
stopObservingChangesForVariable:
isObservingChangesForVariable:
traceState
rowCount
colCount
pivotCount
variableChangeCount
isOptimizationInProgress
constraintsAffectingValueOfVariable:
candidateRedundantConstraints
valueOfVariableIsAmbiguous:
exerciseAmbiguityInVariable:
allVariableValues
variablesWithValueRestrictionViolations
revertsAfterUnsatisfiabilityHandler
setRevertsAfterUnsatisfiabilityHandler:
engineScalingCoefficients
setEngineScalingCoefficients:
artificialRowHead
setArtificialRowHead:
artificialObjectiveRowHead
setArtificialObjectiveRowHead:
artificialObjectiveRowBody
setArtificialObjectiveRowBody:
_variablesWithValueRestrictionViolations
_pendingRemovals
_pendingMarkerDelegates
_variableChangeTransactionSignal
_variableObservables
_dirtyObservables
_brokenConstraintPositiveErrors
_brokenConstraintNegativeErrors
_unsatisfiabilityHandler
_pivotCount
_variableChangeCount
_engineScalingCoefficients
_recordedOperations
_allowedBGThread
_automaticOptimizationDisabledCount
_engineDelegateCallsDisabledCount
_variableDelegateCallsDisabledCount
_totalChangeCount
_changeCountAtLastOptimization
_revertsAfterUnsatisfiabilityHandler
_accumulatingRemovals
_engineNeedsOptimization
_allowUnoptimizedReads
_optimizationInProgress
_accessedFromMainThread
_engineNeedsRebuildFromConstraints
_changeNotificationsDirty
_variablesObservations
_dirtyVariableObservations
_rows
_engineVarTable
_rowTables
_colTables
_headForObjectiveRow
_objectiveRow
_placeholderHeadForExpressionBeingAdded
_artificialRowHead
_artificialObjectiveRowHead
_artificialObjectiveRowBody
T@"NSMutableArray",&,V_variablesWithValueRestrictionViolations
T@"NSISVariable",&,V_artificialRowHead
T@"NSISVariable",&,V_artificialObjectiveRowHead
T@"NSISObjectiveLinearExpression",&,V_artificialObjectiveRowBody
T@"<NSISEngineDelegate>",V_delegate
TB,V_revertsAfterUnsatisfiabilityHandler
optimizationInProgress
TB,R,GisOptimizationInProgress
T{CGSize=dd},N,V_engineScalingCoefficients
removeObjectIdenticalTo:
valueWasDirtied
isMainThread
currentThread
callStackSymbols
isEqualToString:
mainBundle
bundleIdentifier
solutionDidChangeInEngine:
initWithRule:
representedRule
setRepresentedRule:
parentNode
setParentNode:
_representedRule
_parentNode
T@"<NSLayoutRule>",C,V_representedRule
T@"<_NSLayoutRuleNodeParent>",V_parentNode
ownedConstraint
setOwnedConstraint:
_ownedConstraint
T@"NSLayoutConstraint",&,V_ownedConstraint
stringByAppendingFormat:
_addChildRuleNode:
_removeChildRuleNode:
_childRuleNodes
T@"NSArray",R,C
_childNodes
_associatedRuleNode
_setAssociatedRuleNode:
T@"_NSConstraintDescriptionLayoutRuleNode",S_setAssociatedRuleNode:
_setContainerDeclaredConstraint:
setActive:
constraintsAffectingLayout
standardUserDefaults
boolForKey:
volatileDomainForName:
variableDescription
variableIsUserObservable
markedConstraintDescription
length
firstItem
secondItem
variable
setVariable:
setVariableDescription:
setMarkedConstraintDescription:
setVariableIsUserObservable:
setOrientationHint:
_variableDescription
_markedConstraintDescription
_variableIsUserObservable
_orientationHint
T@"NSISVariable",&,V_variable
T@"NSString",C,V_variableDescription
T@"NSString",C,V_markedConstraintDescription
TB,V_variableIsUserObservable
Ti,V_orientationHint
intValue
initWithEngine:
unwrapVariable:
addVariable:coefficient:
incrementConstant:
setValue:forKey:
unwrapLinearExpression:onEngine:
playbackOneAction:onEngine:
oldIdentsToNewVariables
variableDelegates
dataWithBytes:length:
dictionaryWithObjectsAndKeys:
initWithObjectsAndKeys:
numberWithInt:
enumerateVariablesAndCoefficients:
getBytes:length:
_nextDirtyObservation
_prevDirtyObservation
initWithInlineCapacity:engine:
variablesArray
newExpressionWithCapacity:engine:
initialize
newExpressionWithCapacity:
acquireFromPoolForUseCase:
acquireFromPoolForUseCase:engine:
engine
coefficientForVariable:
setCoefficient:forVariable:
replaceVariable:withVariable:coefficient:
addExpression:times:
addExpression:times:processVariableNewToReceiver:processVariableDroppedFromReceiver:
addVariable:coefficient:processVariableNewToReceiver:processVariableDroppedFromReceiver:
setConstant:
isConstant
replaceVariable:withVariablePlusDelta:
replaceVariable:withVariablePlusDelta:timesVariable:processVariableNewToReceiver:processVariableDroppedFromReceiver:
enumerateVariables:
enumerateVariablesAndCoefficientsUntil:
scaleBy:
returnToPool
copyContentsAndReturnToPool
linExp
T@"NSISEngine",R
initWithAnchor:
decodeFloatForKey:
encodeFloat:forKey:
_expressionInContext:
_valueInEngine:
_childAnchors
initWithMultiplier:dimension:constant:
equationDescription
_rootLayoutDimension
initWithDimension:plusDimension:times:
initWithDimension:plusDimension:
_firstLayoutDimension
_secondLayoutDimensionMultiplier
_secondLayoutDimension
initWithMinuend:subtrahend:
isCompatibleWithAnchor:
_directionAbstraction
distanceFromAnchor:toAnchor:
_minuend
_subtrahend
initWithAnchor:plusDimension:times:plus:
_xAxisAnchor
_dimensionMultiplier
_dimension
_yAxisAnchor
anchorByMultiplyingByConstant:
anchorByAddingConstant:
anchorByAddingDimension:
anchorBySubtractingDimension:
times:
plus:
plusDimension:
minusDimension:
anchorByOffsettingWithDimension:multiplier:constant:
anchorWithOffsetToAnchor:
anchorByOffsettingWithDimension:
anchorByOffsettingWithConstant:
offsetTo:
distanceTo:
offsetByDimension:times:plus:
offsetByDimension:
offsetBy:
addVar:priority:times:
removeVar:
restrictedVarWithCoefficientOfLargestNegativeMagnitudeOutVar:
container
nsli_layoutEngine
priorityForVariable:
_constraintItem
_constraintAttribute
_anchorForItem:attribute:
_setFirstAnchor:
hasBeenLowered
_setSecondAnchor:
_setPriority:mutuallyExclusiveConstraints:
UTF8String
_constantDescriptionForDTrace
_lowerIntoExpression:reportingConstantIsRounded:
_symbolicConstant
nsli_resolvedValue:forSymbolicConstant:inConstraint:error:
_referencedLayoutItems
anyObject
nsli_defaultResolvedValue:forSymbolicConstant:inConstraint:error:
_setSymbolicConstant:constant:symbolicConstantMultiplier:
_constraintConstantLimit
symbolicConstantMultiplier
_setSymbolicConstant:
_effectiveConstant:error:
localizedDescription
doubleValue
_constraintType
initWithString:
_descriptionforSymbolicConstant
nsli_description
nsli_isFlipped
descriptionAccessory
_priorityDescription
_equationDescriptionLegendEntries
orderedSetWithOrderedSet:
unionOrderedSet:
allowsKeyedCoding
nsli_marginOffsetForAttribute:
encodeInt:forKey:
encodeDouble:forKey:
decodeIntForKey:
decodeDoubleForKey:
firstAttribute
secondAttribute
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:symbolicConstant:symbolicConstantMultiplier:
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:
setPriority:
shouldBeArchived
setShouldBeArchived:
animations
setAnimations:
_constraintByReplacingItem:withItem:
setRepresentation
_isEqualToConstraintValue:includingConstant:includeOtherMutableProperties:
_setRelation:
_setMultiplier:
_makeExtraVars
nsli_convertSizeFromEngineSpace:
_setActive:mutuallyExclusiveConstraints:
_tryToActivateMeasuringUnsatisfactionChanges:andMutuallyExclusiveConstraints:
_nsib_isRedundantInEngine:
_findCommonAncestorOfItem:andItem:
nsli_addConstraint:
nsli_addConstraint:mutuallyExclusiveConstraints:
nsli_removeConstraint:
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:symbolicConstant:
_setFirstItem:attribute:
_setSecondItem:attribute:
setSymbolicConstant:
setSymbolicConstantMultiplier:
validateOtherAttribute:
_anchorType
_proxiedItem
nsli_constraintWithAnchor:relatedBy:toAnchor:withSystemSpacingMultipliedBy:
_setLegacyDecodingOnly:
activateConstraints:
deactivateConstraints:
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:symbolicConstant:theme:
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:
constraintWithItem:attribute:relatedBy:toItem:attribute:constant:
constraintWithItem:attribute:relatedBy:toItem:attribute:
constraintWithItem:attribute:relatedBy:constant:
constraintWithAnchor:relatedBy:constant:
_setLoweredConstantNeedsUpdate:
_loweredConstantNeedsUpdate
_isIBPrototypingLayoutConstraint
_existsInEngine:
_isFudgeable
_fudgeIncrement
_allowedMagnitudeForIntegralizationAdjustment
_loweredConstantIsRounded
setContainer:
_clearWeakContainerReference
_containerDeclaredConstraint
_containerGeometryDidChange
symbolicConstant
_constraintByReplacingView:withView:
_referencesLayoutItem:
_describesSameRestrictionAsConstraint:
_constraintValueHashIncludingConstant:includeOtherMutableProperties:
_setMutablePropertiesFromConstraint:
_constraintValueCopy
_addToEngine:integralizationAdjustment:mutuallyExclusiveConstraints:
_engineToContainerScalingCoefficients
_loweredExpression
_forceSatisfactionMeasuringUnsatisfactionChanges:andMutuallyExclusiveConstraints:
_explainUnsatisfaction
_nsib_isRedundant
_container
_loweredConstant
_negativeExtraVar
_layoutConstraintFlags
_coefficient
T@"NSLayoutAnchor",C,S_setFirstAnchor:,V_firstAnchor
Tq,S_setRelation:
Td,S_setMultiplier:
T@"NSLayoutAnchor",C,S_setSecondAnchor:,V_secondAnchor
TB,S_setContainerDeclaredConstraint:
Td,R
loweredConstantNeedsUpdate
TB,N,G_loweredConstantNeedsUpdate,S_setLoweredConstantNeedsUpdate:
T@"NSSet",R,C
T@,R
Tq,R
active
TB,GisActive
_viewForAutoresizingMask
nsli_autoresizingMask
constraintsWithAutoresizingMask:subitem:frame:superitem:bounds:
initWithLayoutItem:value:huggingPriority:compressionResistancePriority:orientation:
huggingPriority
compressionResistancePriority
_huggingPriority
_compressionResistancePriority
Td,R,V_huggingPriority
Td,R,V_compressionResistancePriority
_errorVariable
_errorValue
scanUpToCharactersFromSet:intoString:
initWithObjects:count:
initWithFormat:options:metrics:views:
parse
cStringUsingEncoding:
lengthOfBytesUsingEncoding:
failWithDescription:
parseConnection
parseView
finishConstraint
flushWidthConstraints
rangeOfName
initWithBytes:length:encoding:
parsePredicateList
parsePredicateWithParentheses
parsePredicate
parseOp
parseConstant
findContainerView
nsli_layoutMarginsItem
_line
_lineChars
_lineLength
_opts
_useHorizontalArrangement
_metrics
_views
_containerView
_constraints
_unflushedWidthConstraints
_alignmentConstraints
_currentCharacter
_incompleteConstraints
_parsedLeftView
_parsedRightView
_parsedConstrainedWidthView
arrayWithObject:
classFallbacksForKeyedArchiver
mapTableWithWeakToStrongObjects
nsli_descriptionIncludesPointer
_proxiedAttribute
nsli_lowerIntoExpression:withCoefficient:forConstraint:
nsli_piercingToken
nsli_setPiercingToken:
characterSetWithCharactersInString:
invertedSet
_UIWantsMarginAttributeSupport
initWithName:referenceItem:symbolicAttribute:
initWithItem:attribute:
initWithIndependentVariableName:item:symbolicAttribute:
dictionaryWithObject:forKey:
errorWithDomain:code:userInfo:
failWithError:
nsli_isRTL
_referenceItem
_constituentAnchors
nsli_layoutAnchorForAttribute:
centerXAnchor
centerYAnchor
leftAnchor
rightAnchor
anchorWithItem:attribute:
anchorWithName:referenceItem:symbolicAttribute:
anchorNamed:inItem:
anchorNamed:inItem:symbolicAttribute:
nsli_canHostIndependentVariableAnchor
_anchorVariable
nsli_lowersExpressionRelativeToConstraintContainer
unionHashTable:
orderedSetWithObject:
orderedSet
orderedSetWithCapacity:
_expressionInDefaultContextWithEngine:
arrayByAddingObjectsFromArray:
nsli_installedConstraints
_validateOtherXAxisAnchorDirectionAbstraction:
nsli_engineToUserScalingCoefficients
nsli_lowerAttribute:intoExpression:withCoefficient:forConstraint:
nsli_itemDescribingLayoutDirectionForConstraint:toItem:
layoutAnchorWithItem:attribute:
layoutAnchorWithName:forReferenceView:
anchorWithName:forReferenceView:
anchorWithName:forReferenceView:symbolicAttribute:
anchorWithName:
item
_referenceView
_variableName
hasAmbiguousLayout
_referencingConstraints
constraintEqualToAnchor:constant:
constraintGreaterThanOrEqualToAnchor:constant:
constraintLessThanOrEqualToAnchor:constant:
constraintEqualToAnchor:
constraintGreaterThanOrEqualToAnchor:
constraintLessThanOrEqualToAnchor:
_attr
_cachedReferenceItems
_reserved
_type
_reserved3
constraintEqualToSystemSpacingAfterAnchor:multiplier:
constraintGreaterThanOrEqualToSystemSpacingAfterAnchor:multiplier:
constraintLessThanOrEqualToSystemSpacingAfterAnchor:multiplier:
constraintEqualToSystemSpacingBelowAnchor:multiplier:
constraintGreaterThanOrEqualToSystemSpacingBelowAnchor:multiplier:
constraintLessThanOrEqualToSystemSpacingBelowAnchor:multiplier:
constraintEqualToAnchor:multiplier:
constraintGreaterThanOrEqualToAnchor:multiplier:
constraintLessThanOrEqualToAnchor:multiplier:
constraintEqualToConstant:
constraintGreaterThanOrEqualToConstant:
constraintLessThanOrEqualToConstant:
constraintEqualToAnchor:multiplier:constant:
constraintGreaterThanOrEqualToAnchor:multiplier:constant:
constraintLessThanOrEqualToAnchor:multiplier:constant:
_expressionForValueInItem:
objectAtIndexedSubscript:
initWithXAxisAnchor:yAxisAnchor:
layoutPointWithXAxisAnchor:yAxisAnchor:
layoutPointByOffsettingWithXOffset:yOffset:
layoutPointByOffsettingWithXOffsetDimension:yOffsetDimension:
constraintsEqualToLayoutPoint:
pointWithXAxisAnchor:yAxisAnchor:
pointByOffsettingWithXOffset:yOffset:
pointByOffsettingWithXOffsetDimension:yOffsetDimension:
constraintsEqualToPoint:
T@"NSLayoutXAxisAnchor",R,C,V_xAxisAnchor
T@"NSLayoutYAxisAnchor",R,C,V_yAxisAnchor
initWithLeadingAnchor:topAnchor:widthAnchor:heightAnchor:name:
initWithLeadingAnchor:topAnchor:widthAnchor:heightAnchor:
layoutRectWithLeadingAnchor:topAnchor:trailingAnchor:bottomAnchor:
layoutRectWithLeadingAnchor:topAnchor:widthAnchor:heightAnchor:
layoutRectBySlicingWithDimension:fromEdge:
layoutRectWithCenterLayoutPoint:widthAnchor:heightAnchor:
centerLayoutPoint
layoutRectByInsettingTop:leading:bottom:trailing:
layoutRectByInsettingTopWithDimension:leadingWithDimension:bottomWithDimension:trailingWithDimension:
layoutRectBySlicingWithDistance:fromEdge:
layoutRectBySlicingWithProportion:fromEdge:
constraintsEqualToLayoutRect:
constraintsContainingWithinLayoutRect:
_leadingAnchor
_topAnchor
_heightAnchor
_widthAnchor
_reserved1
T@"NSLayoutYAxisAnchor",R,C
T@"NSLayoutXAxisAnchor",R,C
T@"NSLayoutDimension",R,C
T@"NSLayoutPoint",R,C
layoutRectWithName:
rectangleWithLeading:top:width:height:
rectangleWithLeading:top:trailing:bottom:
rectangleWithCenter:width:height:
centerPoint
rectangleByInsettingTop:leading:bottom:trailing:
rectangleByInsettingTopByDimension:leadingByDimension:bottomByDimension:trailingByDimension:
rectangleBySlicingWithDistance:fromEdge:
rectangleBySlicingWithDimension:fromEdge:
rectangleBySlicingWithProportion:fromEdge:
constraintsEqualToRectangle:
constraintsContainingWithinRectangle:
rectangleWithName:
i16@0:8
B16@0:8
@16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
@24@0:8@16
i24@0:8@16
v32@0:8@"NSISVariable"16@"NSISEngine"24
@"NSString"24@0:8@"NSISVariable"16
B24@0:8@"NSISVariable"16
i24@0:8@"NSISVariable"16
v24@0:8@16
v20@0:8i16
v20@0:8B16
@"NSString"
@32@0:8@16i24B28
@36@0:8@16i24B28B32
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v16@0:8
{?=I}24@0:8@16
d16@0:8
@"<NSISVariableDelegate>"
@"NSMapTable"
[3@"NSISEngine"]
[3{?="value"I}]
@24@0:8^{_NSZone=}16
@"NSArray"16@0:8
q16@0:8
f16@0:8
@"NSLayoutAnchor"
@"NSLayoutPoint"
v24@0:8q16
@"NSLayoutRect"
@"NSArray"
@40@0:8q16@24d32
@32@0:8@16d24
@48@0:8q16@24@32d40
@40@0:8@16@24d32
@56@0:8@16Q24@32@40@48
@48@0:8@16Q24@32@40
@"NSDictionary"
@44@0:8@16d24f32@36
@24@0:8d16
@36@0:8d16f24@28
@32@0:8@16@24
@24@0:8@?16
@"NSNumber"
@"NSISLinearExpression"
@"NSISEngine"
@"NSMutableArray"
@"_NSISVariableObservable"
@"NSISVariable"
@"<NSLayoutItem>"
{?="heap"{?="values"^^{?}"count"i"capacity"I}"values"^{?}"count"I"tombstones"I"size"I"grow_shift"S}
{?="values"^{?}"count"S"capacity"S"key"I"heap_position"I}
v36@0:8{?=I}16d20d28
v20@0:8{?=I}16
v44@0:8{?=I}16^{?=SId(?={?=@^{?}Q}{?=Q}[48C])}20@?28@?36
B24@0:8^{?=I}16
v52@0:8@16B24@28@36^@44
Q32@0:8@?16^@24
@"NSLayoutConstraint"
@"NSMutableSet"
d24@0:8@16
v32@0:8@?16@?24
@20@0:8{?=I}16
i20@0:8{?=I}16
Q28@0:8@16B24
v32@0:8Q16@?24
v24@0:8@?16
B32@0:8^d16@24
B48@0:8@16@24d32^@40
B40@0:8@16@24^@32
v32@0:8@16d24
v40@0:8@16d24d32
B40@0:8@16d24@?32
^{?=QQIII^{?}}16@0:8
{CGSize=dd}16@0:8
v32@0:8{CGSize=dd}16
@"NSHashTable"
@"NSObject<NSObservable>"
@"<NSISEngineDelegate>"
{CGSize="width"d"height"d}
@"NSMutableDictionary"
@"NSThread"
^{NSISObjectTable=}
@"NSISVariableObservation"
{?="blocks"^{?}"blocksCount"Q"blocksCapacity"Q"freeIndexes"{?=""(?="_data"Q"_buckets"^Q)"_bucketCount"I}}
[2{?="blocks"^{?}"blocksCount"Q"blocksCapacity"Q"freeIndexes"{?=""(?="_data"Q"_buckets"^Q)"_bucketCount"I}}]
{?="engine"@"NSISEngine""storage"^{?}}
@"NSISObjectiveLinearExpression"
@"<NSLayoutRule>"
@"<_NSLayoutRuleNodeParent>"
v24@0:8@"_NSLayoutRuleNode"16
@24@0:8Q16
@32@0:8Q16@24
@24@0:8q16
@32@0:8q16@24
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
v32@0:8d16@24
v40@0:8@16@24d32
v48@0:8@16d24@?32@?40
d24@0:8d16
v24@0:8d16
v56@0:8@16d24@32@?40@?48
v48@0:8@16@24@?32@?40
B24@0:8@?16
{?="inline_capacity"S"var_count"I"constant"d"data"(?="extern_data"{?="stored_extern_marker"@"slab"^{?}"capacity"Q}"inline_slab"{?="aligner"Q}"padding"[48C])}
@40@0:8d16@24d32
@40@0:8{?=q@@}16
@"NSLayoutDimension"
@48@0:8@16@24d32d40
@"NSLayoutXAxisAnchor"
@"NSLayoutYAxisAnchor"
@40@0:8@16d24d32
@80@0:8@16q24q32@40q48d56@64@72
@72@0:8@16q24q32@40q48d56@64
@80@0:8@16q24q32@40q48d56@64d72
@72@0:8@16q24q32@40q48d56d64
@64@0:8@16q24q32@40q48d56
@56@0:8@16q24q32@40q48
@48@0:8@16q24q32d40
@56@0:8@16q24@32d40d48
@40@0:8@16q24d32
v32@0:8@16q24
v20@0:8f16
B32@0:8^d16^@24
Q24@0:8B16B20
B32@0:8@16B24B28
B40@0:8@16d24^@32
B32@0:8@16^@24
B32@0:8@16^B24
v32@0:8^@16^@24
v28@0:8B16^@20
@104@0:8Q16@24{CGRect={CGPoint=dd}{CGSize=dd}}32@64{CGRect={CGPoint=dd}{CGSize=dd}}72
@56@0:8@16d24d32d40q48
{_NSRange=QQ}16@0:8
@32@0:8@16q24
@40@0:8@16@24q32
B24@0:8q16
B40@0:8@16d24@32
@32@0:8d16d24
{CGPoint=dd}24@0:8@16
@48@0:8@16@24@32@40
@40@0:8@16@24@32
@48@0:8d16d24d32d40
@32@0:8d16q24
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16
@(#)PROGRAM:CoreAutoLayout  PROJECT:CoreAutoLayout-29
zDUUUUUU
###########
NSISVariable_name
NSISVariable_valueRestriction
NSISVariable_shouldBeMinimized
NSISVariable_valueIsUserObservable
v16@?0@"NSISEngine"8
NSISVariable_delegate
NSISVariable.m
A variable must be decoded with a `delegate`
NSISVariable (%@) cannot be encoded with delegate (%@) that does not conform to NSCoding
void NSISVariableRemoveEngine(NSISVariable *, NSISEngine *)
Unable to remove variable %@ from engine %p, it wasn't found.
An unrestricted variable cannot be minimized
A variable that is restricted to take value zero should always be a marker
An unrestricted variable cannot be a marker
It doesn't make sense to minimize a variable that is restricted to zero
<orphaned without delegate (bug!):%p>
{id: %u, var: %u}
{id: %u}
Method %@ must be implemented by subclasser %@
void _NSBitSetResize(NSBitSet *, uint32_t)
NSBitSet.m
Memory exhaustion.
<%@: %p, %@ (%@)>
<%@: %p, %@>
contains
_equationDescriptionInParent
 == 
[%@]
-(%g)-
|, '|':%@
layoutRect
<%@: %p, %@ (opts: %lu)>
%@%g*%@
%@%@
v8@?0
v16@?0@8
NSISObjectiveLinearExpression.m
NSISObjectiveLinearExpression init is no longer supported.
v20@?0{?=I}8d12
{objective %p: %@
v16@?0^{?=^{?}SSII}8
i24@?0r^v8r^v16
 + %@*%@
Requires an engine to look up value restriction
%@: internal error.  Setting empty vector for variable %d.
v12@?0{?=I}8
Invalid parameter not satisfying: %@
isfinite(value)
origVar.value != newVar.value
objective %p replacing %d with %@
Unexpected variable %d in expression replacing that same variable
%@: internal error.  Substituting an expression for a variable (%d) that doesn't exist in this expression
The var %d is in the heap when it shouldn't be.
Variable %d is in the objective row with an empty priority vector
v24@?0@8@16
NSLayoutConstraintExplainer.m
Expected engine to contain variable %@
Error variable freezing should never fail.
    %@:  satisfaction changes by %f
============= Satisfaction Explainer %p =============
Target constraint: 
    %@
The constraint is not satisfied because it is inactive.
The constraint is active, but cannot be unsatisfied since there is no layout engine yet.
Frozen constraints:     (thaw with 'po [%p thawConstraint:<address>]')
    %@
Required constraints:    (relax with 'po [%p relaxConstraint:<address>]')
The target constraint is already satisfied.
The target constraint can't be satisfied because it's mutually exclusive with the following constraints:
The additional required constraints cannot be satisfied because the following set are mutually exclusive:
B24@?0d8d16
Forcing the target constraint to be satisfied would make the following higher priority constraints less satisfied:
If the above list only shows correct constraints, then the problem may lie with an even higher priority constraint that was unaffected because the layout engine was able to stretch one of these instead.  You can 'freeze' these correct constraints and re-print the explanation using this lldb command:
po [%p freezeConstraint:<address-of-constraint>]
This will cause higher priority constraints to be shown.
The target constraint can be satisfied without making any higher priority constraints less satisfied.  This probably means the layout is ambiguous, which in this case is probably due to opposing constraints of the same priority.  Here's a list of likely candidates:
If you cannot alter the priority of the above constraints to resolve the ambiguity, then the problem may lie with a different same-priority constraint that was unaffected because the layout engine happened to stretch these instead.  You can 'freeze' these correct constraints and re-print the explanation using this lldb command:
po [%p freezeConstraint:<address-of-constraint>]
This will potentially reveal other problematic constraints.
Forcing the target constraint to be satisfied didn't seem to effect anything else of note.  This isn't something that should happen under normal circumstances.  Here's the list of all constraints with satisfaction changes.
Please file a radar with the entire Satisfaction Explainer output above, and include a sample app if possible.
%3u: %@ %@:%u
rowIndex
colIndex
%3u: %@ == %@
v24@?0{?=@^{?}}8
%3u: %@ == rowIndexes:(%@) rowHeads:(%@)
storage:%@
@"NSMapTable"8@?0
.brokenPosError
.brokenNegError
<unknown var (bug!) with engine as delegate:%p>
NSISEngine integralization is no longer supported, setting shouldIntegralize to YES does nothing.
v32@?0{?=@^{?}}8^B24
NSISEngine.m
Dirty observable list is corrupt.
B24@?0{?=@^{?}}8
Unknown infeasibility behavior
v32@?0{?=@^{?}}8d24
Unable to find an incoming rowHead for row:%@
Failed to find an incoming row head for pivot
Should be copied into an empty row
B32@?0{?=@^{?}}8d24
tempToBeOptimizedToZero
tempToBeOptimizedToZeroObjective
Unable to find a new row head
objective
placeholderForExpressionBeingAdded
Failed to rebuild layout engine without detectable loss of precision.  This should never happen.  Performance and correctness may suffer.
Sucessfully rebuilt layout engine.
Nested optimization should never be triggered.  This is probably due to autolayout work happening inside an NSISVariable delegate callback, which is not allowed.
Engine still needs optimization after optimizing.
Engine still needs optimization after iterating many times.
Attempt to rebuild engine with a pending list of constraints to remove.
Q16@?0@"NSISVariable"8
Engine marked as needing optimization even though it's already in progress.
B20@?0{?=I}8d12
_dbg_anyEngineContainsVariable is unsupported, rebuild with TRACK_ENGINES=1
engine %p adding constraint %@
It's not legal to add a constraint twice.  %@ is already added.
engine %p directly added constraint %@ as %@
engine %p indirectly added constraint %@ as %@
Warning: Failed to add constraint even when behavior = NSISBreakConstraint
Trying to remove a constraint which is not present, %@
engine %p removing constraint %@
-[NSISEngine removeConstraintWithMarker:]
Marker should not be in a body row.
The marker should no longer be in the objective row.
isfinite(delta)
v24@?0@8@"NSISVariable"16
Marker:
%lu rows. Variable counts:
%3lu -> %3lu
>= %3lu -> %3lu
%lu cols. Variable counts:
<%@: %p>{ delegate:%p
EngineVars:
  Rows:
  Columns:
  Constraints:
  Statistics:
Engine var %u with nil variable in engine %p.
Variable %p not connected back to engine %p with the correct index %u != %u.
Engine var backpointer in row %u doesn't match engineVarIndex %u != %u
Engine var backpointer in col %u doesn't match engineVarIndex %u != %u
An empty row is not allowed, it should always contain body variables.
Body variable %@ with engineVarIndex %u appear in row %u, but that row doesn't appear in its cross index %@
Cross index says variable %@ at colIndex %u appears in row %u, but that row only contains:%@
the variable %@ is incorrectly reported to be in rows with heads %@
the variable %@ is not reported as being in rows with heads %@
every variable in a row headed by an NSISRestrictedToZero variable must be NSISRestrictedToZero as well.  The row %@ contains %@ which is not restricted to zero.
The tracked set of variables with value restriction violations is missing these variables: %@
A row in the engine has an infinite coefficient.  %@
A row in the engine has a near-zero coefficient.  %@
NSISObjectiveLinearExpression *_objectiveRow_rawBody(NSISRow)
NSISEngine_Row.h
Tried accessing the objective linear expression for regular row:%@
NSISCol _engineVar_col(NSISEngineVar)
NSISEngine_EngineVar.h
Tried accessing the col index for a variable that is a row head:%@
NSISEngineVar _engineVar_forVariable(NSISEngine *, NSISVariable *)
Unable to find index for variable:%@ in engine:%@
Variable stored in table doesn't match passed in variable %@ != %@
NSISRow _engineVar_row(NSISEngineVar)
Tried accessing the row index for a variable that isn't a row head:%@
engine %p add variable %@
void _row_rawSetHead(NSISRow, NSISCol)
Tried converting column variable %@ to a row head while it still appears as a body variable in some rows:%@
B12@?0{?=I}8
%p: Optimized in %lu moves (cumulative pivots: %lu)
Objective: %@
Auto layout internal error.  Cannot find an outgoing row head for incoming head %@, which should never happen. Priority: %g, Coefficient: %.10f
Warning: This system of layout constraints is extremely difficult to optimize, taking %ld pivots.  Try ensuring your layout is not over-constrained and you have no redundant constraints. This warning will only be displayed once.
This application is modifying the autolayout engine from a background thread after the engine was accessed from the main thread. This can lead to engine corruption and weird crashes.
 Stack:%@
This application is modifying the autolayout engine from more than a single background thread, which can lead to engine corruption and weird crashes. 
 Stack:%@
WebThread
com.apple.mail
Modifications to the layout engine must not be performed from a background thread after it has been accessed from the main thread.
Modifications to the layout engine must not be performed from more than a single background thread.
engine %p remove variable %@ at index %d
void _engineVar_rawRemove(NSISEngineVar)
Not possible to remove variable:%@ from engine %@.
com.apple.Maps
    %@
</%@>
void _NSLayoutRuleRemoveNodeHierarchyFromParent(_NSLayoutRuleNode *, id<_NSLayoutRuleNodeParent>, NSMutableArray<_NSLayoutRuleNode *> **)
NSLayoutRuleNode.m
%@ is not in %@'s rule subtree
v16@?0@"_NSLayoutRuleNode"8
<%@: '%@'
<%@: '%p'
</%@>
NSLogUnusualAppConfig
%@=%@
ident
class
description
markedConstraintDescription
userObservable
orientationHint
variables
coefficients
constant
command
args
shouldIntegralize
Unknown playback selector %@
(null)
Cannot wrap object %@
float
type
data
approx
Actions
NSConstraintBasedLayoutDebug
NSConstraintBasedLayoutDebugEngineConsistency
NSConstraintBasedLayoutLogPivotCounts
NSConstraintBasedLayoutOutputEngineTrace
NSConstraintBasedLayoutLogEngineRebuilds
NSConstraintBasedLayoutAllowBGThreads
NSConstraintBasedLayoutAllowUnoptimizedReads
NSConstraintBasedLayoutTrackAllocation
NSConstraintBasedLayoutAnchorEquivalence
NSConstraintBasedLayoutVariableChangeTransactions
NSConstraintBasedLayoutAriadneTracepoints
NSConstraintBasedLayoutTrackDirtyObservables
NSConstraintBasedLayoutDeferOptimization
variable
v24@?0@"NSISVariable"8d16
linear_expression
void VerifyHeapIntegrity(NSISSparseVectorMinHeap *)
NSISSparseVectorMinHeap.m
The value at position %d was bigger than its left child.
The value at position %d was bigger than its right child.
%g:%g
v24@?0d8d16
<%@>
CFIndex NSISSparseVectorAddTermWithPlaceValueCoefficientStartingIndex(NSISSparseVector *, NSISPlaceValue_t, NSISFloat_t, NSISFloat_t, CFIndex)
NSISSparseVector.m
placeValue > 0
NSISLinearExpression init is no longer supported.
%@ is not copyable
void NSISLinExpSetCoefficientForVar(NSISLinExp *, NSISFloat_t, NSISLinExpVar)
isfinite(coefficient)
void NSISLinExpReplaceVarWithVar(NSISLinExp *, NSISLinExpVar, NSISLinExpVar, NSISFloat_t)
NSISLinearExpressionAssert failure in %s, at line %d
NSISLinExpReplaceVarWithVar
-[NSISLinearExpression dealloc]
void NSISLinExpAddExpression(NSISLinExp *, NSISLinExp *, NSISFloat_t)
isfinite(multiplyBy)
void NSISLinExpAddExpressionWithProcessors(NSISLinExp *, NSISLinExp *, NSISFloat_t, void (^)(NSISLinExpVar), void (^)(NSISLinExpVar))
v24@?0@?<v@?{?=I}>8@?<v@?{?=I}>16
void NSISLinExpAddVar(NSISLinExp *, NSISLinExpVar, NSISFloat_t)
isfinite(coeff)
-[NSISLinearExpression addVariable:coefficient:]
Attempt to add a nil NSISVariable to an expression.  This is probably a bug in autolayout.
void NSISLinExpAddVarWithProcessors(NSISLinExp *, NSISLinExpVar, NSISFloat_t, void (^)(NSISLinExpVar), void (^)(NSISLinExpVar))
-[NSISLinearExpression addVariable:coefficient:processVariableNewToReceiver:processVariableDroppedFromReceiver:]
NSISFloat_t NSISLinExpIncrementConstant(NSISLinExp *, NSISFloat_t)
isfinite(c)
 + %g*%u
 + %g*%@
NSISLinExpScaleByWithDroppedColProcessor
NSISLinearExpression.m
scalar != 0
Nonzero coefficient expected
Variable is in the array twice
Variables should be in ascending order
Nonzero variable in excess capacity
Nonzero coefficient in excess capacity
capacity < UINT16_MAX
NSISLinearExpression no longer supports newExpressionWithCapacity:
-[NSISLinearExpression returnToPool]
-[NSISLinearExpression copyContentsAndReturnToPool]
NSISLinearExpression no longer supports acquireFromPoolForUseCase:
+[NSISLinearExpression acquireFromPoolForUseCase:engine:]
vars_remove_idx
vars_convert_to_inline
vars_index_with_insert
expression_ensure_capacity
slab_duplicate
NSISLinExpVar variable_to_linexpvar(NSISLinearExpression *, NSISVariable *)
Expression %@ unable to find variable %@ in engine %p
void _hashMapRehash(NSISSparseVectorMap *, NSISSparseVectorMapDirection)
NSISSparseVectorMap.m
Unable to grow sparse vector hash table
Corrupt hash table
void _deleteWithHashFunction(NSISSparseVectorMap *, uint32_t, HASH_FUNCTION)
Tried to remove a sparse vector value from an empty map which shouldn't happen.
Tried to remove a sparse vector value that wasn't in the map.
NSISSparseVector *_findWithHashFunction(NSISSparseVectorMap *, uint32_t, HASH_FUNCTION)
NSLayoutAnchor_firstChildAnchor
NSDerivativeLayoutAnchor.m
%@ decoded with empty root dimension
NSLayoutAnchor_multiplier
NSLayoutAnchor_constant
NSLayoutAnchor_secondChildAnchor
%@ decoded with empty first dimension
%@ decoded with empty second dimension
`minuend` is required to be non-nil
`subtrahend` is required to be non-nil
`minuend` is required to a compatible type with `subtrahend`
%@ decoded with empty first anchor (minuend)
%@ decoded with empty second anchor (subtrahend)
(%@ - %@)
void _CompositeAxisAnchor_InitWithCoder(NSCoder *, NSLayoutAnchor **, NSLayoutDimension ** _Nullable, CGFloat *, CGFloat *)
NSLayoutAxisAnchor decoded with empty base anchor
NSLayoutErrorDomain
NSSpace
NSLayoutAnchorConstraintSpace
NSLayoutConstraint.m
First item cannot be set to a nil value
Unable to change the relation after a constraint has been added to a view
Unable to change the multiplier after a constraint has been added to a view
Multiplier is not finite!  That's illegal.  multiplier:%g
It's illegal to set priority:%g.  Priorities must be greater than 0 and less or equal to NSLayoutPriorityRequired, which is %f.
Priority Modified
Identifier Changed
NSLayoutConstraintToAnimationsKey
kSavedConstraintAllocationStackKey
%@ Break on %s to debug.  This will be logged only once.  This may break in the future.
This NSLayoutConstraint is being configured with a constant that exceeds internal limits.  A smaller value will be substituted, but this problem should be fixed.
BOOL _NSLayoutConstraintNumberExceedsLimit(void)
%@ constant is not finite!  That's illegal.  constant:%g firstAnchor:%@ secondAnchor:%@
Constant Modified
(%g)
(unresolvable)
Cannot set symbolic constant multiplier when the constant is not symbolic
[%@]-%@-[%@]
[%@%@]
|-%@-[%@]
[%@]-%@-|
(LTR)
priority:%g
<%s:%p %@>
<%s:%p
'%@'
'|':%@
  (%@%@
active
inactive
names:
%@ - only keyed coders are supported by %@
NSFirstItem
NSFirstAttributeV2
NSFirstAttribute
NSFirstAnchor
NSRelation
NSMultiplier
NSSecondItem
NSSecondAttributeV2
NSSecondAttribute
NSSecondAnchor
NSConstantV2
NSSymbolicConstant
NSSymbolicConstantMultiplier
NSShouldBeArchived
NSPriority
NSLayoutIdentifier
NSConstant
Added To Window
Unable to install constraint on view.  Does the constraint reference something from outside the subtree of the view?  That's illegal. constraint:%@ view:%@
kSavedConstraintDescriptionKey
Removed From Window
Unknown constraint relation: %d
We are leaking a layout variable
Cannot _tryToActivateMeasuringErrors:andMutuallyExclusiveConstraints:, constraint %@ is already active.
This NSLayoutConstraint seems to be the delegate of an NSISVariable it doesn't know anything about. This is an internal Cocoa bug.
BOOL _NSLayoutConstraintDelegateCallFromUnknownVariable(void)
marker
posErrorMarker
errorMarker
slackMarker
negError
error
slack
<unknown var (bug!):%p>
%p:%@.%@
%p.%@
v16@?0@"NSISVariable"8
Unable to activate constraint with anchors %@ and %@ because they have no common ancestor.  Does the constraint or its anchors reference items in different view hierarchies?  That's illegal.
%@: Constraint must contain a first layout anchor
%@: A constraint cannot be made from %@ to a constant. Location anchors require being paired.
%@: A constraint cannot be made between %@ and %@ because their units are not compatible.
Cannot create a standard spacing constraint between anchors '%@' and '%@': at least one anchor must be associated with a view or a guide
Unknown layout attribute
Hug:%g CompressionResistance:%g
Expected marker restricted to 0.
This should be a constraint if we're constraining an error variable.
NSDictionaryOfVariableBindings failed because either one of the values is nil, or there's something wrong with the way the macro is being invoked.  Cannot assign value nil for key "%@". Keys:%@
Unable to parse constraint format: It's an empty string.
Unable to parse constraint format: It contains non-ASCII characters.
<%@:%p 
Unable to parse constraint format: 
Expected ':' after 'V' to specify vertical arrangement
Expected ':' after 'H' to specify horizontal arrangement
Expected a connection after the '|' character
Expected a view or '|'
Expected the end of the format string
Expected a view
Expected a view. View names must start with a letter or an underscore, then contain letters, numbers, and underscores.
%@ is not a key in the views dictionary.
Unexpectedly ran out of character fodder in the middle of parsing a view
Expected ']' after specifying thickness.
A predicate on a view's thickness must end with ')' and the view must end with ']'
Expected a ']' here. That is how you give the end of a view.
Expected a '-' here. To specify a list of constraints, you must use parentheses around the list of constraints
Expected a '-' here
Expected a ')' at the end of a constraint modifier, or a ',' before another constraint modifier
Cannot tell if this - is a minus sign or an accidental extra bar in the connection. Use parentheses around negative numbers.
Invalid priority specified: %g. Priority cannot be higher than NSLayoutPriorityRequired, which is 1000.
Invalid priority specified: %g. Priority must be greater than 0
Expected a number or a key from the metrics dictionary, but encountered something else
It's not possible to set a space equal to the width or height of a view.  Perhaps you want to use a view as a spacer? [view1][spacer(==view1)][view2]
Encountered metric with name "%@", but value was not specified in metrics or views dictionaries
Expected a number or key from the metrics dictionary, but encountered something else
Unknown relation. Must be ==, >=, or <=
Expected more input
Unable to interpret '|' character, because the related view doesn't have a superview
BaselineToBaseline format option not valid for horizontal layout
No view was specified for this constraint
Options mask required views to be aligned on a horizontal edge, which is not allowed for layout that is also horizontal.
Options mask required views to be aligned on a vertical edge, which is not allowed for layout that is also vertical.
NSLayoutConstraint
@8@?0
Created
NSLayoutConstraint for %@
%@: Unknown layout attribute
%@: Constraint must contain a first layout item
%@: Constraint items must each be a view or layout guide.
%@: A multiplier of 0 or a nil second item together with a location for the first attribute creates an illegal constraint of a location equal to a constant. Location attributes must be specified in pairs.
%@: A constraint cannot be made that sets a location equal to a constant. Location attributes must be specified in pairs.
%@: Invalid pairing of layout attributes.
%@: A constraint cannot be made between a leading/trailing attribute and a right/left attribute. Use leading/trailing for both or neither.
h=%c%c%c v=%c%c%c
@"NSCharacterSet"8@?0
NSInvalidLayoutConstraintException
A constraint factory method was passed a nil layout anchor.  This is not allowed, and may cause confusing exceptions.
BOOL _NSLayoutConstraintToNilAnchor(void)
NSLayoutAnchor.m
NSLayoutAnchor decoding requires keyed coding
NSLayoutAnchor_type
NSLayoutAnchor_name
NSLayoutAnchor_referenceView
NSLayoutAnchor_attr
An anchor's reference view was not included in the archive.
An anchor's name was not included in the archive.
NSLayoutAnchor_variable
Can't decode anchor from corrupt archive.
NSLayoutAnchor encoding requires keyed coding
Class of `sourceAnchor` must be the same as the receiver
item != nil
NSLayoutAnchor cannot be created without an item.
%@ cannot create anchor for proxy attribute %d with item %@
Only NSLayoutAnchors created with `%@` respond to `%@`. %@ is of type %d
+anchorWithItem:attribute:
NSLayoutAnchor cannot be created without an name.
NSLayoutAnchor must be related to a view.
NSLayoutAnchor should have a name describing the geometry it represents.
+anchorNamed:inItem:
%@:%p
Concrete anchor subclass (%@, type %d) must implement `%@`
%@.%@
Concrete NSLayoutAnchor subclasses must either provide a `name` or `equationDescription`
`_valueInEngine:` is not supported for item proxy anchors
 (names: 
Constraint improperly relates anchors of incompatible types: %@
Expected non-nil `layoutItem` parameter
`valueInItem:` can currently only be used with anchors that are in a layout engine
Expected anchors (%@)'s ancestor item (%@) and provided item (%@) to be in same layout engine.
Expected common ancestor between anchor (%@)'s ancestor item (%@) and provided item (%@)
Unexpected anchor type (%@) is not able to be compared
Expected `layoutItem` to have non-nil layout engine
Requires layout item to have layout engine
NSLayoutXAxisAnchorResolvedDirection _ResolvedDirectionForAnchorAbstractionsForAnchorsInLayoutDirectionContext(NSLayoutAnchor * _Nonnull, id _Nullable, NSLayoutAttribute, id<NSLayoutItem> _Nullable, CGFloat * _Nullable)
Incompatible anchor comparison for resolving anchor abstractions: %@ with %@
left
right
bottom
leading
trailing
width
height
centerX
centerY
lastBaseline
firstBaseline
leftMargin
rightMargin
leadingMargin
trailingMargin
topMargin
bottomMargin
centerXWithinMargins
centerYWithinMargins
minX
midX
maxX
minY
midY
maxY
Class _AnchorClassForAttribute(NSLayoutAttribute)
ERROR: NSLayoutAnchors cannot be created with proxy attribute %ld
q24@?0@"<_NSLayoutConstraintComparable>"8@"<_NSLayoutConstraintComparable>"16
void _NSLayoutConstraintDiffConstraints(NSArray<id<_NSLayoutConstraintComparable>> * _Nonnull, BOOL, NSArray<id<_NSLayoutConstraintComparable>> * _Nonnull, BOOL, id<_NSLayoutConstraintComparable> * _Nullable, NSUInteger * _Nullable, id<_NSLayoutConstraintComparable> * _Nullable, NSUInteger * _Nullable, id<_NSLayoutConstraintComparable> * _Nullable, id<_NSLayoutConstraintComparable> * _Nullable, NSUInteger * _Nullable, id<_NSLayoutConstraintComparable> * _Nullable, NSUInteger * _Nullable, BOOL)
NSLayoutConstraintDiff.m
_NSLayoutConstraintSortDiff post-condition
void _NSLayoutConstraintApplyDiffWithCounterpartsNSArrays(NSArray<NSLayoutConstraint *> * _Nonnull, NSArray<id<_NSLayoutConstraintComparable>> * _Nonnull)
Unexpected difference in length
void _NSLayoutConstraintSortDiff(id<_NSLayoutConstraintComparable>  _Nonnull * _Nullable, const NSUInteger, const BOOL, id<_NSLayoutConstraintComparable>  _Nonnull * _Nullable, const NSUInteger, const BOOL, NSLayoutConstraintComparisonResult (^)(id<_NSLayoutConstraintComparable> _Nonnull, id<_NSLayoutConstraintComparable> _Nonnull), size_t * _Nullable, NSUInteger * _Nonnull, size_t * _Nullable, NSUInteger * _Nonnull, size_t * _Nullable, size_t * _Nullable, NSUInteger * _Nonnull)
Expected maintained + new values to have same length as `next`
NSLayoutGeometry.m
xAxisAnchor != nil
yAxisAnchor != nil
NSLayoutXAxisAnchor
NSLayoutYAxisAnchor
leading != nil
top != nil
width != nil
height != nil
%@.leading
%@.top
%@.width
%@.height
NSLayoutLeadingAnchor
NSLayoutTopAnchor
NSLayoutWidthAnchor
NSLayoutHeightAnchor
NSLayoutName
<%@:%p '%@'>
 -Leading: %@
 -Width: %@
 -Top: %@
 -Height: %@
%@:%p'%@'
%@.centerY
%@.bottom
%@.centerX
%@.trailing
Unable to reallocate NSISTableBlock %p. old size = %lu new size = %lu
Unable to allocate NSISTableBlock storage. size = %lu
NSISUnrestrictedVariable
NSISRestrictedToNonNegativeVariable
NSISRestrictedToNonNegativeVariableToBeMinimized
NSISRestrictedToNonNegativeMarkerVariable
NSISRestrictedToZeroMarkerVariable
NSISRestrictedToNonNegativeMarkerVariableToBeMinimized
NSISInlineStorageVariable
NSISVariableDelegate
NSObject
NSISVariable
NSCoding
NSLayoutAnchorRule
NSLayoutRule
NSCopying
NSLayoutPointRule
NSLayoutRectRule
NSAlignmentLayoutRule
NSStackLayoutRule
NSStackInContainerRule
NSVisualFormatLayoutRule
NSVisualFormatLayoutRuleWorkarounds
NSLayoutRuleExtensions
_NSISLinearExpressionObservable
_NSISVariableObservable
_NSLayoutRectObservable
NSISObjectiveLinearExpression
Testing
NSLayoutConstraintExplainer
NSISEngine
_NSLayoutRuleNode
_NSConstraintDescriptionLayoutRuleNode
_NSCompositeLayoutRuleNode
_NSLayoutRuleNodeParent
_NSAssociatedRuleNode
NSISPlaybackOperationVariableDelegate
NSISPlaybackOperation
NSISVariableObservation
NSISLinearExpression
NSFastEnumeration
_NSArithmeticLayoutDimension
NSCompositeLayoutAnchor
_NSCompositeLayoutDimension
_NSDistanceLayoutDimension
_NSCompositeLayoutXAxisAnchor
_NSCompositeLayoutYAxisAnchor
NSCompositeAnchorCreation
NSISObjectiveLinearExpressionProxy
NSLayoutConstraint
NSISConstraint
NSAutoresizingMaskLayoutConstraint
NSContentSizeLayoutConstraint
NSErrorVariableConstraint
NSLayoutConstraintParser
NSIBPrototypingLayoutConstraint
NSLayoutAnchor
NSLayoutXAxisAnchor
NSLayoutYAxisAnchor
NSLayoutDimension
DirectionAbstraction
_NSAutoresizingMaskXAxisAnchor
_NSAutoresizingMaskYAxisAnchor
ValueInCoordinateSpace_NotYetProposed
NSLayoutPoint
NSLayoutRect
NSLayoutRectangle
lengthOfBytesUsingEncoding:
solutionDidChangeInEngine:
currentThread
encodeConditionalObject:forKey:
boolValue
unionOrderedSet:
length
setObject:forKey:
nsli_addConstraint:mutuallyExclusiveConstraints:
currentHandler
unionHashTable:
nsli_lowerAttribute:intoExpression:withCoefficient:forConstraint:
invertedSet
boolForKey:
encodeBool:forKey:
objectsForKeys:notFoundMarker:
nsli_addConstraint:
initWithCapacity:
intValue
nsli_layoutRect
objectForKey:
initWithBytes:length:encoding:
nsli_layoutMarginsItem
setWithArray:
count
arrayWithObjects:count:
objectEnumerator
allowsKeyedCoding
arrayWithObject:
doubleValue
nsli_layoutEngine
objectAtIndexedSubscript:
removeObjectIdenticalTo:
failWithError:
copy
allObjects
initWithString:
arrayWithCapacity:
removeObjectForKey:
objectAtIndex:
allKeys
arrayByAddingObjectsFromArray:
dictionaryWithObjectsAndKeys:
removeObjectAtIndex:
numberWithUnsignedInt:
exceptionWithName:reason:userInfo:
containsValueForKey:
initWithOptions:capacity:
errorWithDomain:code:userInfo:
removeObject:
dictionaryWithObjects:forKeys:
array
numberWithInt:
valueWithRect:
containsObject:
dictionaryWithObject:forKey:
initWithObjectsAndKeys:
appendString:
numberWithFloat:
initWithObjects:count:
removeAllObjects
strongToStrongObjectsMapTable
appendFormat:
numberWithDouble:
setValue:forKey:
nsli_installedConstraints
addObjectsFromArray:
mutableCopy
stringWithUTF8String:
initWithObjects:
anyObject
numberWithBool:
nsli_engineToUserScalingCoefficients
addObject:
stringWithString:
null
componentsJoinedByString:
minusSet:
nsli_descriptionIncludesPointer
stringWithFormat:
characterSetWithCharactersInString:
engine:willBreakConstraint:dueToMutuallyExclusiveConstraints:
orderedSetWithOrderedSet:
nsli_description
nsli_setPiercingToken:
stringByAppendingString:
decodeObjectForKey:
orderedSetWithObject:
engine:markerForConstraintToBreakAmongConstraints:
constraintsDidChangeInEngine:
handleFailureInMethod:object:file:lineNumber:description:
nsli_defaultResolvedValue:forSymbolicConstant:inConstraint:error:
stringByAppendingFormat:
decodeIntegerForKey:
nsli_resolvedValue:forSymbolicConstant:inConstraint:error:
lastObject
orderedSetWithCapacity:
mapTableWithWeakToStrongObjects
handleFailureInFunction:file:lineNumber:description:
nsli_convertSizeFromEngineSpace:
decodeIntForKey:
propertyListWithData:options:format:error:
string
initWithKeyOptions:valueOptions:capacity:
scanUpToCharactersFromSet:intoString:
nsli_removeConstraint:
keyEnumerator
valueForKey:
orderedSet
setRepresentation
volatileDomainForName:
getObjects:range:
mapTableWithKeyOptions:valueOptions:
nsli_constraintWithAnchor:relatedBy:toAnchor:withSystemSpacingMultipliedBy:
decodeFloatForKey:
standardUserDefaults
nsli_piercingToken
encodeObject:forKey:
getBytes:length:
decodeDoubleForKey:
isMainThread
callStackSymbols
nsli_minYVariable
encodeInteger:forKey:
nsli_boundsWidthVariable
cStringUsingEncoding:
decodeBoolForKey:
encodeInt:forKey:
isEqualToString:
mainBundle
floatValue
dataWithPropertyList:format:options:error:
nsli_boundsHeightVariable
encodeFloat:forKey:
bundleIdentifier
localizedDescription
UTF8String
firstObject
nsli_autoresizingMask
dataWithBytes:length:
sortedArrayUsingSelector:
encodeDouble:forKey:
valueRestriction
shouldBeMinimized
markedConstraint
initWithCoder:
encodeWithCoder:
dealloc
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
nsis_valueOfVariable:didChangeInEngine:
nsis_descriptionOfVariable:
nsis_valueOfVariableIsUserObservable:
nsis_orientationHintForVariable:
name
setName:
setValueRestriction:
setShouldBeMinimized:
valueIsUserObservable
setValueIsUserObservable:
_name
_valueRestriction
_shouldBeMinimized
_valueIsUserObservable
T@"NSString",C,V_name
Ti,V_valueRestriction
TB,V_shouldBeMinimized
TB,V_valueIsUserObservable
init
variableWithDelegate:valueRestriction:shouldBeMinimized:
variableMarkingConstraint:valueRestriction:shouldBeMinimized:
variableWithName:valueRestriction:shouldBeMinimized:
variableWithName:valueRestriction:shouldBeMinimized:valueIsUserObservable:
engines
overflowEngineVarIndexForEngine:
descriptionInEngine:
orientationHint
shouldBeIntegral
allowedMagnitudeForIntegralizationAdjustmentOfMarkedConstraint
markedConstraintIsEligibleForIntegralizationAdjustment
valueIsUserVisible
delegate
setDelegate:
_delegate
_overflowEngines
_engines
_engineVarIndexes
_ident
T@"<NSISVariableDelegate>",V_delegate
TB,R
Ti,R
T@"NSArray",R
copyWithZone:
makeChildRules
identifier
ruleDescription
makeLayoutConstraint
firstAnchor
secondAnchor
relation
constant
priority
multiplier
_firstAnchor
_secondAnchor
_relation
_identifier
_constant
_multiplier
_priority
T@"NSLayoutAnchor",R,C,V_firstAnchor
T@"NSLayoutAnchor",R,C,V_secondAnchor
Tq,R,V_relation
Td,R,V_constant
Td,R,V_multiplier
Tf,R,V_priority
T@"NSString",R,C,V_identifier
firstLayoutPoint
secondLayoutPoint
_firstLayoutPoint
_secondLayoutPoint
T@"NSLayoutPoint",R,C,V_firstLayoutPoint
T@"NSLayoutPoint",R,C,V_secondLayoutPoint
firstLayoutRect
secondLayoutRect
setRelation:
_firstLayoutRect
_secondLayoutRect
T@"NSLayoutRect",R,C,V_firstLayoutRect
T@"NSLayoutRect",R,C,V_secondLayoutRect
Tq,V_relation
alignmentWithAnchors:
alignedAnchors
_alignedAnchors
T@"NSArray",R,C,V_alignedAnchors
_equationDescriptionInParent
stackWithOrientation:stackedRects:spacing:
horizontalStackWithRects:spacing:
verticalStackWithRects:spacing:
stackedRects
orientation
spacing
_stackedRects
_spacing
_orientation
T@"NSArray",R,C,V_stackedRects
Td,R,V_spacing
Tq,R,V_orientation
stackWithOrientation:stackedRects:inContainer:spacing:
horizontalStackWithRects:inContainer:spacing:
verticalStackWithRects:inContainer:spacing:
containingRect
_containingRect
T@"NSLayoutRect",R,C,V_containingRect
ruleWithVisualFormat:options:metrics:rects:containerRect:
ruleWithVisualFormat:options:metrics:views:
_visualFormatString
_formatOptions
_metricMapping
_rectMapping
_containerRect
nsli_superitem
nsli_isLegalConstraintItem
ruleEqualToAnchor:
ruleGreaterThanOrEqualToAnchor:
ruleLessThanOrEqualToAnchor:
ruleEqualToAnchor:constant:
ruleGreaterThanOrEqualToAnchor:constant:
ruleLessThanOrEqualToAnchor:constant:
ruleEqualToAnchor:constant:priority:identifier:
ruleGreaterThanOrEqualToAnchor:constant:priority:identifier:
ruleLessThanOrEqualToAnchor:constant:priority:identifier:
ruleEqualToConstant:
ruleLessThanOrEqualToConstant:
ruleGreaterThanOrEqualToConstant:
ruleEqualToConstant:priority:identifier:
ruleGreaterThanOrEqualToConstant:priority:identifier:
ruleLessThanOrEqualToConstant:priority:identifier:
ruleEqualToLayoutPoint:
ruleEqualToLayoutRect:
ruleContainingLayoutRect:
addObserverBlock:
addObserver:
observableForExpression:inEngine:
_overrideUseFastBlockObservers
_lastValue
_expression
_associatedEngine
_variableObservations
_changeTransactionObservation
_valueIsDirtied
receiveObservedValue:
observableForVariable:inEngine:
valueHasChanged
emitValueIfNeeded
_nextDirtyObservable
_prevDirtyObservable
_variable
_hasLastValue
observableForRect:inItem:
_anchorObservations
_rectangle
_layoutItem
valueRestrictionForVar:
addVar:priority:times:processVarNewToReceiver:processVarDroppedFromReceiver:
replaceVar:withVarPlusDelta:timesVar:processVarNewToReceiver:processVarDroppedFromReceiver:
replaceVar:withExpression:processVarNewToReceiver:processVarDroppedFromReceiver:
verifyInternalIntegrity
addVariable:priority:times:
removeVariable:
restrictedVariableWithCoefficientOfLargestNegativeMagnitude
replaceVariable:withExpression:processVariableNewToReceiver:processVariableDroppedFromReceiver:
_engine
_priorityMap
_initWithEngine:
_addVar:priority:times:
_removeVar:
_replaceVar:withExpression:processVarNewToReceiver:processVarDroppedFromReceiver:
_restrictedVarWithCoefficientOfLargestNegativeMagnitudeOutVar:
_variableCount
initWithConstraint:
_freezeErrorVariable:forcingZeroValue:inEngine:accumulatingConstraints:andMutuallyExclusiveConstraints:
recalculateExplanation
_satisfactionChangeCount:withResults:
requireConstraint:
relaxConstraint:
freezeConstraint:
thawConstraint:
satisfactionChanges
setSatisfactionChanges:
priorities
setPriorities:
mutuallyExclusiveConstraints
setMutuallyExclusiveConstraints:
_constraint
_requiredConstraints
_frozenConstraints
_relaxedConstraints
_satisfactionChanges
_priorities
_mutuallyExclusiveConstraints
T@"NSMapTable",&,V_satisfactionChanges
T@"NSMapTable",&,V_priorities
T@"NSArray",&,V_mutuallyExclusiveConstraints
_dirtyListPrependObservation:
_dirtyListPrependObservable:
fixUpValueRestrictionViolationsWithInfeasibilityHandlingBehavior:
copyExpressionSubstitutingRowHeadVariables:intoRow:
tryUsingArtificialVariableToAddConstraintWithMarker:row:usingInfeasibilityHandlingBehavior:mutuallyExclusiveConstraints:
rebuildFromConstraints
_optimizeIfNotDisabled
compare:
_dbg_anyEngineContainsVariable:
setEnableEngineTrace:
enableEngineTrace
traceFileSuffix
setTraceFileSuffix:
setLogOnInvalidUseFromBGThread:
T@"NSString",C
_brokenConstraintPositiveErrorsIfAvailable
_brokenConstraintNegativeErrorsIfAvailable
integralizationAdjustmentForMarker:
shouldIntegralize
setShouldIntegralize:
isTrackingVariableChanges
performPendingChangeNotifications
performPendingChangeNotificationsForItem:
performModifications:withUnsatisfiableConstraintsHandler:
engineVarIndexForVariable:
variableForEngineVarIndex:
valueRestrictionForEngineVarIndex:
beginRecording
recordedCommandsData
replayCommandsData:verifyingIntegrity:
optimize
_optimizeWithoutRebuilding
withBehaviors:performModifications:
withAutomaticOptimizationDisabled:
withoutOptimizingAtEndRunBlockWithAutomaticOptimizationDisabled:
withDelegateCallsDisabled:
valueForVariable:
hasValue:forVariable:
hasValueForPossiblyDeallocatedVariable:
valueForExpression:
hasValue:forExpression:
containsVariable:
enumerateRows:
beginBookkeepingForVariableIfNeeded:
endBookkeepingForVariableIfUnused:
tryToAddConstraintWithMarker:expression:integralizationAdjustment:mutuallyExclusiveConstraints:
tryToAddConstraintWithMarker:expression:mutuallyExclusiveConstraints:
addVariableToBeOptimized:priority:
removeVariableToBeOptimized:priority:
changeVariableToBeOptimized:fromPriority:toPriority:
containsConstraintWithMarker:
removeConstraintWithMarker:
constraintDidChangeSuchThatMarker:shouldBeReplacedByMarkerPlusDelta:
tryToChangeConstraintSuchThatMarker:isReplacedByMarkerPlusDelta:undoHandler:
observableForVariable:
removeObservableForVariable:
hasObservableForVariable:
startObservingChangesForVariable:
stopObservingChangesForVariable:
variableChangeTransactionSignal
isObservingChangesForVariable:
traceState
constraints
rowCount
colCount
pivotCount
variableChangeCount
isOptimizationInProgress
constraintsAffectingValueOfVariable:
candidateRedundantConstraints
valueOfVariableIsAmbiguous:
exerciseAmbiguityInVariable:
allVariableValues
variablesWithValueRestrictionViolations
setVariablesWithValueRestrictionViolations:
revertsAfterUnsatisfiabilityHandler
setRevertsAfterUnsatisfiabilityHandler:
engineScalingCoefficients
setEngineScalingCoefficients:
artificialRowHead
setArtificialRowHead:
artificialObjectiveRowHead
setArtificialObjectiveRowHead:
artificialObjectiveRowBody
setArtificialObjectiveRowBody:
_variablesWithValueRestrictionViolations
_pendingRemovals
_pendingMarkerDelegates
_variableChangeTransactionSignal
_variableObservables
_dirtyObservables
_brokenConstraintPositiveErrors
_brokenConstraintNegativeErrors
_unsatisfiabilityHandler
_pivotCount
_variableChangeCount
_engineScalingCoefficients
_recordedOperations
_allowedBGThread
_automaticOptimizationDisabledCount
_engineDelegateCallsDisabledCount
_variableDelegateCallsDisabledCount
_totalChangeCount
_changeCountAtLastOptimization
_revertsAfterUnsatisfiabilityHandler
_accumulatingRemovals
_engineNeedsOptimization
_allowUnoptimizedReads
_optimizationInProgress
_accessedFromMainThread
_engineNeedsRebuildFromConstraints
_changeNotificationsDirty
_variablesObservations
_dirtyVariableObservations
_rows
_engineVarTable
_rowTables
_colTables
_headForObjectiveRow
_objectiveRow
_placeholderHeadForExpressionBeingAdded
_artificialRowHead
_artificialObjectiveRowHead
_artificialObjectiveRowBody
T@"NSMutableArray",&,V_variablesWithValueRestrictionViolations
T@"NSISVariable",&,V_artificialRowHead
T@"NSISVariable",&,V_artificialObjectiveRowHead
T@"NSISObjectiveLinearExpression",&,V_artificialObjectiveRowBody
T@"<NSISEngineDelegate>",V_delegate
TB,V_revertsAfterUnsatisfiabilityHandler
optimizationInProgress
TB,R,GisOptimizationInProgress
T{CGSize=dd},N,V_engineScalingCoefficients
initWithRule:
representedRule
setRepresentedRule:
parentNode
setParentNode:
_representedRule
_parentNode
T@"<NSLayoutRule>",C,V_representedRule
T@"<_NSLayoutRuleNodeParent>",V_parentNode
ownedConstraint
setOwnedConstraint:
_ownedConstraint
T@"NSLayoutConstraint",&,V_ownedConstraint
_addChildRuleNode:
_removeChildRuleNode:
_childRuleNodes
T@"NSArray",R,C
_childNodes
_associatedRuleNode
_setAssociatedRuleNode:
T@"_NSConstraintDescriptionLayoutRuleNode",S_setAssociatedRuleNode:
firstItem
secondItem
_addToEngine:
variable
setVariable:
variableDescription
setVariableDescription:
markedConstraintDescription
setMarkedConstraintDescription:
variableIsUserObservable
setVariableIsUserObservable:
setOrientationHint:
_variableDescription
_markedConstraintDescription
_variableIsUserObservable
_orientationHint
T@"NSISVariable",&,V_variable
T@"NSString",C,V_variableDescription
T@"NSString",C,V_markedConstraintDescription
TB,V_variableIsUserObservable
Ti,V_orientationHint
unwrapVariable:
unwrapLinearExpression:onEngine:
playbackOneAction:onEngine:
oldIdentsToNewVariables
variableDelegates
initWithVariable:
valueWasDirtied
emitValueIfNeededWithEngine:
_nextDirtyObservation
_prevDirtyObservation
initWithInlineCapacity:engine:
initialize
newExpressionWithCapacity:
newExpressionWithCapacity:engine:
acquireFromPoolForUseCase:
acquireFromPoolForUseCase:engine:
countByEnumeratingWithState:objects:count:
initWithEngine:
engine
coefficientForVariable:
setCoefficient:forVariable:
replaceVariable:withVariable:coefficient:
addExpression:times:
addExpression:times:processVariableNewToReceiver:processVariableDroppedFromReceiver:
addVariable:coefficient:
addVariable:coefficient:processVariableNewToReceiver:processVariableDroppedFromReceiver:
incrementConstant:
setConstant:
isConstant
replaceVariable:withVariablePlusDelta:
replaceVariable:withVariablePlusDelta:timesVariable:processVariableNewToReceiver:processVariableDroppedFromReceiver:
enumerateVariablesAndCoefficients:
enumerateVariables:
enumerateVariablesAndCoefficientsUntil:
variableCount
variablesArray
scaleBy:
returnToPool
copyContentsAndReturnToPool
linExp
T@"NSISEngine",R
initWithAnchor:
_childAnchors
initWithMultiplier:dimension:constant:
_nearestAncestorLayoutItem
_expressionInContext:
_valueInEngine:
equationDescription
_rootLayoutDimension
initWithDimension:plusDimension:times:
initWithDimension:plusDimension:
_firstLayoutDimension
_secondLayoutDimensionMultiplier
_secondLayoutDimension
distanceFromAnchor:toAnchor:
initWithMinuend:subtrahend:
_minuend
_subtrahend
initWithAnchor:plusDimension:times:plus:
_directionAbstraction
_xAxisAnchor
_dimensionMultiplier
_dimension
_yAxisAnchor
anchorByMultiplyingByConstant:
anchorByAddingConstant:
anchorByAddingDimension:
anchorBySubtractingDimension:
times:
plus:
plusDimension:
minusDimension:
anchorWithOffsetToAnchor:
anchorByOffsettingWithDimension:
anchorByOffsettingWithDimension:multiplier:constant:
anchorByOffsettingWithConstant:
offsetTo:
distanceTo:
offsetByDimension:times:plus:
offsetByDimension:
offsetBy:
addVar:priority:times:
removeVar:
restrictedVarWithCoefficientOfLargestNegativeMagnitudeOutVar:
_setPriority:mutuallyExclusiveConstraints:
_setSymbolicConstant:constant:symbolicConstantMultiplier:
nsli_marginOffsetForAttribute:
_symbolicConstant
shouldBeArchived
animations
symbolicConstantMultiplier
_makeExtraVars
nsli_ancestorSharedWithItem:
_constraintConstantLimit
_setLegacyDecodingOnly:
activateConstraints:
deactivateConstraints:
_findCommonAncestorOfItem:andItem:
constraintsWithVisualFormat:options:metrics:views:
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:symbolicConstant:theme:
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:symbolicConstant:
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:symbolicConstant:symbolicConstantMultiplier:
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:
constraintWithItem:attribute:relatedBy:toItem:attribute:constant:
constraintWithItem:attribute:relatedBy:toItem:attribute:
constraintWithItem:attribute:relatedBy:constant:
constraintWithAnchor:relatedBy:toAnchor:multiplier:constant:
constraintWithAnchor:relatedBy:constant:
unsatisfaction
_setLoweredConstantNeedsUpdate:
_loweredConstantNeedsUpdate
firstAttribute
_setFirstItem:attribute:
_setRelation:
_setMultiplier:
secondAttribute
_setSecondItem:attribute:
setShouldBeArchived:
_isIBPrototypingLayoutConstraint
setPriority:
_existsInEngine:
hasBeenLowered
setIdentifier:
setAnimations:
_isFudgeable
_fudgeIncrement
_allowedMagnitudeForIntegralizationAdjustment
_markerAndPositiveExtraVar
container
_loweredConstantIsRounded
setContainer:
_clearWeakContainerReference
_containerDeclaredConstraint
_setContainerDeclaredConstraint:
_containerGeometryDidChange
_effectiveConstant:error:
_descriptionforSymbolicConstant
_constantDescriptionForDTrace
_setSymbolicConstant:
symbolicConstant
setSymbolicConstant:
setSymbolicConstantMultiplier:
_constraintType
_priorityDescription
descriptionAccessory
_constraintByReplacingItem:withItem:
_constraintByReplacingView:withView:
_referencesLayoutItem:
_referencedLayoutItems
_describesSameRestrictionAsConstraint:
_constraintValueHashIncludingConstant:includeOtherMutableProperties:
_isEqualToConstraintValue:includingConstant:includeOtherMutableProperties:
_setMutablePropertiesFromConstraint:
_constraintValueCopy
priorityForVariable:
_addToEngine:integralizationAdjustment:mutuallyExclusiveConstraints:
_addToEngine:mutuallyExclusiveConstraints:
_removeFromEngine:
_engineToContainerScalingCoefficients
_lowerIntoExpression:reportingConstantIsRounded:
_loweredExpression
_tryToActivateMeasuringUnsatisfactionChanges:andMutuallyExclusiveConstraints:
_forceSatisfactionMeasuringUnsatisfactionChanges:andMutuallyExclusiveConstraints:
_explainUnsatisfaction
_nsib_isRedundantInEngine:
_nsib_isRedundant
isActive
_setActive:mutuallyExclusiveConstraints:
setActive:
_setFirstAnchor:
_setSecondAnchor:
_container
_loweredConstant
_negativeExtraVar
_layoutConstraintFlags
_coefficient
T@"NSLayoutAnchor",C,S_setFirstAnchor:,V_firstAnchor
Tq,S_setRelation:
Td,S_setMultiplier:
T@"NSLayoutAnchor",C,S_setSecondAnchor:,V_secondAnchor
TB,S_setContainerDeclaredConstraint:
Td,R
loweredConstantNeedsUpdate
TB,N,G_loweredConstantNeedsUpdate,S_setLoweredConstantNeedsUpdate:
T@"NSSet",R,C
T@,R
Tq,R
active
TB,GisActive
constraintsWithAutoresizingMask:subitem:frame:superitem:bounds:
_viewForAutoresizingMask
initWithLayoutItem:value:huggingPriority:compressionResistancePriority:orientation:
huggingPriority
compressionResistancePriority
_huggingPriority
_compressionResistancePriority
Td,R,V_huggingPriority
Td,R,V_compressionResistancePriority
initWithVariable:value:
constrainedConstraint
_errorVariable
_errorValue
initWithFormat:options:metrics:views:
failWithDescription:
parse
parseView
flushWidthConstraints
parseConnection
parsePredicateWithParentheses
parsePredicateList
parsePredicate
parseConstant
parseOp
rangeOfName
findContainerView
finishConstraint
_line
_lineChars
_lineLength
_opts
_useHorizontalArrangement
_metrics
_views
_containerView
_constraints
_unflushedWidthConstraints
_alignmentConstraints
_currentCharacter
_incompleteConstraints
_parsedLeftView
_parsedRightView
_parsedConstrainedWidthView
classFallbacksForKeyedArchiver
nsli_minXVariable
_UIWantsMarginAttributeSupport
_constituentAnchors
nsli_layoutAnchorForAttribute:
widthAnchor
heightAnchor
leadingAnchor
centerXAnchor
trailingAnchor
topAnchor
centerYAnchor
bottomAnchor
leftAnchor
rightAnchor
nsli_canHostIndependentVariableAnchor
_anchorVariable
nsli_lowersExpressionRelativeToConstraintContainer
nsli_isFlipped
nsli_itemDescribingLayoutDirectionForConstraint:toItem:
_anchorForItem:attribute:
layoutAnchorWithItem:attribute:
anchorWithItem:attribute:
layoutAnchorWithName:forReferenceView:
anchorWithName:forReferenceView:
anchorWithName:forReferenceView:symbolicAttribute:
anchorNamed:inItem:
anchorNamed:inItem:symbolicAttribute:
initWithName:referenceItem:symbolicAttribute:
_anchorType
_expressionInDefaultContextWithEngine:
anchorWithName:referenceItem:symbolicAttribute:
anchorWithName:
item
initWithItem:attribute:
_proxiedItem
_proxiedAttribute
initWithIndependentVariableName:item:symbolicAttribute:
_referenceView
_referenceItem
_variableName
_accumulateReferenceLayoutItemsIntoTable:
validateOtherAttribute:
isCompatibleWithAnchor:
_equationDescriptionLegendEntries
hasAmbiguousLayout
constraintsAffectingLayout
_referencingConstraints
nsli_lowerIntoExpression:withCoefficient:forConstraint:
_constraintItem
_constraintAttribute
constraintEqualToAnchor:constant:
constraintGreaterThanOrEqualToAnchor:constant:
constraintLessThanOrEqualToAnchor:constant:
constraintEqualToAnchor:
constraintGreaterThanOrEqualToAnchor:
constraintLessThanOrEqualToAnchor:
_attr
_cachedReferenceItems
_reserved
_type
_reserved3
constraintEqualToSystemSpacingAfterAnchor:multiplier:
constraintGreaterThanOrEqualToSystemSpacingAfterAnchor:multiplier:
constraintLessThanOrEqualToSystemSpacingAfterAnchor:multiplier:
_validateOtherXAxisAnchorDirectionAbstraction:
constraintEqualToSystemSpacingBelowAnchor:multiplier:
constraintGreaterThanOrEqualToSystemSpacingBelowAnchor:multiplier:
constraintLessThanOrEqualToSystemSpacingBelowAnchor:multiplier:
constraintEqualToAnchor:multiplier:
constraintGreaterThanOrEqualToAnchor:multiplier:
constraintLessThanOrEqualToAnchor:multiplier:
constraintEqualToConstant:
constraintGreaterThanOrEqualToConstant:
constraintLessThanOrEqualToConstant:
constraintEqualToAnchor:multiplier:constant:
constraintGreaterThanOrEqualToAnchor:multiplier:constant:
constraintLessThanOrEqualToAnchor:multiplier:constant:
_expressionForValueInItem:
valueInItem:
observableValueInItem:
nsli_isRTL
initWithXAxisAnchor:yAxisAnchor:
layoutPointWithXAxisAnchor:yAxisAnchor:
pointWithXAxisAnchor:yAxisAnchor:
layoutPointByOffsettingWithXOffset:yOffset:
layoutPointByOffsettingWithXOffsetDimension:yOffsetDimension:
constraintsEqualToLayoutPoint:
pointByOffsettingWithXOffset:yOffset:
pointByOffsettingWithXOffsetDimension:yOffsetDimension:
constraintsEqualToPoint:
xAxisAnchor
yAxisAnchor
T@"NSLayoutXAxisAnchor",R,C,V_xAxisAnchor
T@"NSLayoutYAxisAnchor",R,C,V_yAxisAnchor
initWithLeadingAnchor:topAnchor:widthAnchor:heightAnchor:name:
layoutRectWithLeadingAnchor:topAnchor:widthAnchor:heightAnchor:
layoutRectWithLeadingAnchor:topAnchor:trailingAnchor:bottomAnchor:
layoutRectWithCenterLayoutPoint:widthAnchor:heightAnchor:
initWithLeadingAnchor:topAnchor:widthAnchor:heightAnchor:
centerLayoutPoint
layoutRectByInsettingTop:leading:bottom:trailing:
layoutRectByInsettingTopWithDimension:leadingWithDimension:bottomWithDimension:trailingWithDimension:
layoutRectBySlicingWithDistance:fromEdge:
layoutRectBySlicingWithDimension:fromEdge:
layoutRectBySlicingWithProportion:fromEdge:
constraintsEqualToLayoutRect:
constraintsContainingWithinLayoutRect:
_leadingAnchor
_topAnchor
_heightAnchor
_widthAnchor
_reserved1
T@"NSLayoutYAxisAnchor",R,C
T@"NSLayoutXAxisAnchor",R,C
T@"NSLayoutDimension",R,C
T@"NSLayoutPoint",R,C
layoutRectWithName:
rectangleWithLeading:top:width:height:
rectangleWithLeading:top:trailing:bottom:
rectangleWithCenter:width:height:
centerPoint
rectangleByInsettingTop:leading:bottom:trailing:
rectangleByInsettingTopByDimension:leadingByDimension:bottomByDimension:trailingByDimension:
rectangleBySlicingWithDistance:fromEdge:
rectangleBySlicingWithDimension:fromEdge:
rectangleBySlicingWithProportion:fromEdge:
constraintsEqualToRectangle:
constraintsContainingWithinRectangle:
rectangleWithName:
i16@0:8
B16@0:8
@16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
@24@0:8@16
i24@0:8@16
v32@0:8@"NSISVariable"16@"NSISEngine"24
@"NSString"24@0:8@"NSISVariable"16
B24@0:8@"NSISVariable"16
i24@0:8@"NSISVariable"16
v24@0:8@16
v20@0:8i16
v20@0:8B16
@"NSString"
@32@0:8@16i24B28
@36@0:8@16i24B28B32
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v16@0:8
{?=I}24@0:8@16
d16@0:8
@"<NSISVariableDelegate>"
@"NSMapTable"
[3@"NSISEngine"]
[3{?="value"I}]
@24@0:8^{_NSZone=}16
@"NSArray"16@0:8
q16@0:8
f16@0:8
@"NSLayoutAnchor"
@"NSLayoutPoint"
v24@0:8q16
@"NSLayoutRect"
@"NSArray"
@40@0:8q16@24d32
@32@0:8@16d24
@48@0:8q16@24@32d40
@40@0:8@16@24d32
@56@0:8@16Q24@32@40@48
@48@0:8@16Q24@32@40
@"NSDictionary"
@44@0:8@16d24f32@36
@24@0:8d16
@36@0:8d16f24@28
@32@0:8@16@24
@24@0:8@?16
@"NSNumber"
@"NSISLinearExpression"
@"NSISEngine"
@"NSMutableArray"
@"_NSISVariableObservable"
@"NSISVariable"
@"<NSLayoutItem>"
{?="heap"{?="values"^^{?}"count"i"capacity"I}"values"^{?}"count"I"tombstones"I"size"I"grow_shift"S}
{?="values"^{?}"count"S"capacity"S"key"I"heap_position"I}
v36@0:8{?=I}16d20d28
v20@0:8{?=I}16
v44@0:8{?=I}16^{?=SId(?={?=@^{?}Q}{?=Q}[48C])}20@?28@?36
B24@0:8^{?=I}16
v52@0:8@16B24@28@36^@44
Q32@0:8@?16^@24
@"NSLayoutConstraint"
@"NSMutableSet"
d24@0:8@16
v32@0:8@?16@?24
@20@0:8{?=I}16
i20@0:8{?=I}16
Q28@0:8@16B24
v32@0:8Q16@?24
v24@0:8@?16
B32@0:8^d16@24
B48@0:8@16@24d32^@40
B40@0:8@16@24^@32
v32@0:8@16d24
v40@0:8@16d24d32
B40@0:8@16d24@?32
^{?=QQIII^{?}}16@0:8
{CGSize=dd}16@0:8
v32@0:8{CGSize=dd}16
@"NSHashTable"
@"NSObject<NSObservable>"
@"<NSISEngineDelegate>"
{CGSize="width"d"height"d}
@"NSMutableDictionary"
@"NSThread"
^{NSISObjectTable=}
@"NSISVariableObservation"
{?="blocks"^{?}"blocksCount"Q"blocksCapacity"Q"freeIndexes"{?=""(?="_data"Q"_buckets"^Q)"_bucketCount"I}}
[2{?="blocks"^{?}"blocksCount"Q"blocksCapacity"Q"freeIndexes"{?=""(?="_data"Q"_buckets"^Q)"_bucketCount"I}}]
{?="engine"@"NSISEngine""storage"^{?}}
@"NSISObjectiveLinearExpression"
@"<NSLayoutRule>"
@"<_NSLayoutRuleNodeParent>"
v24@0:8@"_NSLayoutRuleNode"16
@24@0:8Q16
@32@0:8Q16@24
@24@0:8q16
@32@0:8q16@24
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
v32@0:8d16@24
v40@0:8@16@24d32
v48@0:8@16d24@?32@?40
d24@0:8d16
v24@0:8d16
v56@0:8@16d24@32@?40@?48
v48@0:8@16@24@?32@?40
B24@0:8@?16
{?="inline_capacity"S"var_count"I"constant"d"data"(?="extern_data"{?="stored_extern_marker"@"slab"^{?}"capacity"Q}"inline_slab"{?="aligner"Q}"padding"[48C])}
@40@0:8d16@24d32
@40@0:8{?=q@@}16
@"NSLayoutDimension"
@48@0:8@16@24d32d40
@"NSLayoutXAxisAnchor"
@"NSLayoutYAxisAnchor"
@40@0:8@16d24d32
@80@0:8@16q24q32@40q48d56@64@72
@72@0:8@16q24q32@40q48d56@64
@80@0:8@16q24q32@40q48d56@64d72
@72@0:8@16q24q32@40q48d56d64
@64@0:8@16q24q32@40q48d56
@56@0:8@16q24q32@40q48
@48@0:8@16q24q32d40
@56@0:8@16q24@32d40d48
@40@0:8@16q24d32
v32@0:8@16q24
v20@0:8f16
B32@0:8^d16^@24
Q24@0:8B16B20
B32@0:8@16B24B28
B40@0:8@16d24^@32
B32@0:8@16^@24
B32@0:8@16^B24
v32@0:8^@16^@24
v28@0:8B16^@20
@104@0:8Q16@24{CGRect={CGPoint=dd}{CGSize=dd}}32@64{CGRect={CGPoint=dd}{CGSize=dd}}72
@56@0:8@16d24d32d40q48
{_NSRange=QQ}16@0:8
@32@0:8@16q24
@40@0:8@16@24q32
B24@0:8q16
B40@0:8@16d24@32
@32@0:8d16d24
{CGPoint=dd}24@0:8@16
@48@0:8@16@24@32@40
@40@0:8@16@24@32
@48@0:8d16d24d32d40
@32@0:8d16q24
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16
