<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.coreduetd.allow</key>
<true/>
<key>com.apple.mobile.keybagd.UserManager.logout</key>
<true/>
<key>com.apple.multitasking.termination</key>
<true/>
<key>com.apple.private.CacheDelete</key>
<array>
<string>PURGEABLE_ENTITLEMENT</string>
<string>ITEMIZED_PURGEABLE_ENTITLEMENT</string>
<string>PURGE_ENTITLEMENT</string>
<string>CANCEL_PURGE_ENTITLEMENT</string>
<string>PERIODIC_ENTITLEMENT</string>
<string>SERVICE_REQUEST_ENTITLEMENT</string>
<string>NOTIFICATION_ENTITLEMENT</string>
</array>
<key>com.apple.private.MobileContainerManager.otherIdLookup</key>
<true/>
<key>com.apple.private.MobileContainerManager.userManagedAssets</key>
<true/>
<key>com.apple.private.coreservices.canmapbundleidtouuid</key>
<true/>
<key>com.apple.private.ind.client</key>
<true/>
<key>com.apple.private.security.storage-exempt.heritable</key>
<true/>
<key>com.apple.private.security.storage.AppDataContainers</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceSystemPolicyRemovableVolumes</string>
<string>kTCCServiceSystemPolicyNetworkVolumes</string>
</array>
<key>com.apple.security.enterprise-volume-access</key>
<true/>
<key>com.apple.security.network.client</key>
<true/>
<key>com.apple.usermanagerd.persona.fetch</key>
<true/>
<key>seatbelt-profiles</key>
<array>
<string>deleted</string>
</array>
</dict>
</plist>
init
fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
fileSystemRepresentation
stringWithFormat:
arrayWithObjects:count:
initWithSuiteName:
dictionary
weakObjectsPointerArray
array
countByEnumeratingWithState:objects:count:
serviceWithInfo:
setObject:forKeyedSubscript:
addObject:
scanPlistsAtPath:execBlock:
addObjectsFromArray:
addEntriesFromDictionary:
daemonListenerWithExportedObject:
addRequiredEntitlement:
daemonPublicListenerWithExportedObject:
defaultPath
stringByAppendingPathExtension:
sharedPurgeableResultsCache
setPurgeableResultCache:
currentVersion
pathForVersion:
purgeableResultCache
invalidateAllForgettingPushers:
save:
startPersistenceTimer
setUpdateNotificationBlock:
totalAvailable:
setUpdateBlock:
valueForKey:
initWithServiceProvider:withPurgeableResultCache:
setAnalytics:
analytics
load:
listener
resume
publicListener
defaultManager
enumeratorAtPath:
dataWithContentsOfFile:options:error:
propertyListWithData:options:format:error:
objectForKeyedSubscript:
processLowDiskVolume:key:
containsObject:
volumeWithMountpoint:
validate
extractThresholdsAndGoals:
freespace
mountPoint
numberWithUnsignedLongLong:
numberWithBool:
measureElapsedTimes
dictionaryWithObjects:forKeys:count:
purge:volume:callback:
thresholds
unsignedLongLongValue
broadcastLowDiskNotificationForVolume:key:
endComfortPurgeActivityForVolume:
beginCriticalPurgeActivityForVolume:
endCriticalPurgeActivityForVolume:
beginComfortPurgeActivityForVolume:
recentStateForVolume:
updateRecentStateforVolume:
reportBroadcastLowDiskNotification:forVolume:
isEqualToString:
volumeWithPath:
updateFollowup:
processLowDiskVolumes:key:
collection_queue
pendingLowDiskCount
setPendingLowDiskCount:
mutableCopy
pendingLowDiskVolumes
minusSet:
count
unionSet:
size
reportReceivedLowDiskNotification:forVolume:
state
numberWithInteger:
processLowDiskVolumes:filteringBySet:key:
allObjects
integerValue
checkNotificationState
handleVFSStreamXPCEvent:
registerActivityWithIdentifier:criteria:runHandler:
UTF8String
save
timer_queue
persistence_timer
setPersistence_timer:
persistPurgeableResultsAndPostNotification
date
saveRecentInfo
infoDictionary
services
serviceWithInfo:extension:
beginMatchingExtensionsWithAttributes:completion:
setExtensionMatchContext:
extensionMatchContext
copy
mountPointForUUID:
applicationExtensions
copyServices
hasPrefix:
doNotQuery
uuid
UUIDString
timeIntervalSinceReferenceDate
keyForVolume:atUrgency:
lastUpdateTimes
objectAtIndexedSubscript:
freespaceIsStale:
doubleValue
dateWithTimeIntervalSinceReferenceDate:
numberWithDouble:
intValue
normalizeUrgency:
initWithInfo:services:volumes:
setResultCache:
setAnalyticsReporter:
registerOperation:
startOperation:
shouldUpdateVolumes:atUrgency:
setWithArray:
prunePreserving:
removeObjectsForKeys:
timestampUpdateForVolumes:atUrgency:
operations_queue
initWithCapacity:
updateRecentResultsForVolumes:withInfo:qos:receiveResults:
updateInvalidVolumes
initWithPath:isPrimary:
addInvalidVolume:
arrayWithObject:
asyncUpdateRecentResultsForAllVolumesWithInfo:
deleteAppCaches:telemetry:
fsType
amountPurged
_purge:volume:services:callback:
removeObjectForKey:
fsPurgedVolumes:
appendFormat:
componentsJoinedByString:
appendString:
prunePurgeHistory
allKeys
siblings
purgeOperations
forcePurgeNotify:
componentsSeparatedByString:
removeObjectAtIndex:
notifyRecipients:value:
validateVolumeAtPath:
notificationOptions
rangeOfString:
serviceNotify:replyBlock:
invokeAfterMaxSeconds:min:group:block:
volUUIDs
notify_queue
desiredNotifications
processPurgeNotification:forService:info:group:force:
_notifyRecipients:value:force:
maybeCrashForTest:
daemons
currentConnection
errorWithDomain:code:userInfo:
serviceWithInfo:endpoint:
objectForKey:
removeServiceInfo:
setServiceInvalidationHandler:
setObject:forKey:
servicePing:
dictionaryWithObjectsAndKeys:
removeObject:
_entitlementToCheck:
emitRecentInfo:
cancelOperation
info
serviceCallback:replyBlock:
handleVFSStreamXPCEventForVolume:event:
clientPurge:replyBlock:
clientUnifiedPurgeableSpace:queryType:replyBlock:
clientPerformPeriodicsWithInfo:completion:
clientCancelPurge:
clientPerformVFSEventWithInfo:replyBlock:
clientPerformServiceRequest:replyBlock:
length
defaults_queue
userDefaults
synchronize
default_values
isEqual:
checkSettingEntitlements:onConnection:
stringWithUTF8String:
setNotificationOptions:
_clientSetState:key:
_clientGetState:replyBlock:
updateRecentInfoForServiceID:volume:info:
forgetPushingService:
reportLowDiskFunctionalFailure:failureType:isRoot:
inFlightOperations
addPointer:
operationsDebugState
servicesDebugState
numberWithUnsignedInteger:
rootVolume
recentInfoForVolumes:atUrgency:validateResults:targetVolume:
debugDescription
iteratePendingOperations:
enumerateKeysAndObjectsUsingBlock:
sharedCacheDelete
clientCheckin:endpoint:info:reply:
clientPerformOperation:replyBlock:
clientSetState:key:
clientGetState:replyBlock:
clientUpdatePurgeable:
clientRegisterLowDiskFailure:failureType:isRoot:
serviceWithID:
beginListening
cancelPersistenceTimer
log_recent_info
validateService:
pruneCacheableStates
removeOperation:
debugState
setListener:
setPublicListener:
rootPath
lastRefreshTimes
setLastRefreshTimes:
setUserDefaults:
setServices:
setDaemons:
setDefault_values:
setPurgeOperations:
setInFlightOperations:
setPendingLowDiskVolumes:
setLastUpdateTimes:
.cxx_destruct
_measureElapsedTimes
_collection_queue
_defaults_queue
_operations_queue
_listener
_publicListener
_extensionMatchContext
_notify_queue
_timer_queue
_persistence_timer
_rootPath
_lastRefreshTimes
_userDefaults
_services
_daemons
_default_values
_purgeOperations
_purgeableResultCache
_analytics
_inFlightOperations
_pendingLowDiskCount
_pendingLowDiskVolumes
_lastUpdateTimes
T@"CacheDeleteListener",&,N,V_listener
T@"CacheDeleteListener",&,N,V_publicListener
TB,R,V_measureElapsedTimes
T@,&,N,V_extensionMatchContext
T@"NSObject<OS_dispatch_queue>",R,N,V_notify_queue
T@"NSObject<OS_dispatch_queue>",R,N,V_timer_queue
T@"NSObject<OS_dispatch_source>",&,N,V_persistence_timer
T@"NSURL",R,N,V_rootPath
T@"NSMutableDictionary",&,N,V_lastRefreshTimes
T@"NSUserDefaults",&,N,V_userDefaults
T@"NSMutableDictionary",&,N,V_services
T@"NSMutableSet",&,N,V_daemons
T@"NSDictionary",&,N,V_default_values
T@"NSMutableDictionary",&,N,V_purgeOperations
T@"CDDaemonPurgeableResultCache",&,N,V_purgeableResultCache
T@"CacheDeleteAnalytics",&,N,V_analytics
T@"NSPointerArray",&,N,V_inFlightOperations
TQ,N,V_pendingLowDiskCount
T@"NSMutableSet",&,N,V_pendingLowDiskVolumes
T@"NSMutableDictionary",&,N,V_lastUpdateTimes
T@"NSObject<OS_dispatch_queue>",R,N,V_collection_queue
T@"NSObject<OS_dispatch_queue>",R,N,V_defaults_queue
T@"NSObject<OS_dispatch_queue>",R,N,V_operations_queue
containsString:
addDailyStats:
postDailyStats:
dataWithPropertyList:format:options:error:
bytes
enumerateObjectsUsingBlock:
setDailyStats:
dailyStats
setSerialQueue:
setServiceProvider:
stringByAppendingPathComponent:
initWithPath:
setPurgeStatReporter:
serialQueue
persistPath
writeToFile:atomically:
dictionaryWithContentsOfFile:
timeIntervalSinceDate:
_postDailyStats:
removeItemAtPath:error:
domain
code
removeAllObjects
_addDailyStats:
_reportPurgeTimingInfo:
_reportPurgeableTimingInfo:
buildType
dailyPurgeableStats:
stringForUrgency:
applicationUsageStats
systemUsageStats
cacheManagementUsageStats
dictionaryWithCapacity:
sendCAEvent:key:value:
nandSize
containerTotalSize:andFreespace:
sendPurgeableAmountStats
clear
monotonicBegin
monotonicEnd
secondsFrom:to:
stringForTime:
serviceName
incrementDailyValueForKey:
processPurgeOperationResult:
processPurgeableOperationResult:
processPeriodicOperationResult:
round:toSignificantDigits:
machTimeToSeconds:
longValue
numberWithLong:
recentInfoForVolume:atUrgency:
serviceProvider
capitalizedString
stringByAppendingString:
isVeryLowDisk
isLowDisk
isNearLowDisk
numberWithInt:
volumeNames
isRootVolume:
level
success
fsPurgeSuccess
totalMeasuredBytes
addDailyValueForKey:value:
totalReportedBytes
requestedBytes
clientProcName
beginFreeSpace
endFreeSpace
getLowDiskLevelFromPurgeResult:
containerSize
containerInitialFreespace
results
urgency
reportedBytes
postStatsDictionary:summarize:
isDataCollectionEnabled
purgeStatReporter
appendAndSaveStats:
reportedPurgedBytes
_reportReceivedLowDiskNotification:forVolume:
_reportBroadcastLowDiskNotification:forVolume:
_reportLowDiskFunctionalFailure:failureType:isRoot:
currentSystemInfo
reportPurgeTimingInfo:
reportPurgeableTimingInfo:
fetchLowDiskStats
fetchStorageStats
fetchTimingStats:
fetchApplicationUsageStats
fetchAdditionalStats
sendAppCacheStats:
anonymizeAndFlush:name:
reportPurge:
reportPurgeable:
reportPeriodic:
roundNumber:toSignificantDigits:
_serialQueue
_dailyStats
_serviceProvider
_nandSize
_purgeStatReporter
T@"NSObject<OS_dispatch_queue>",&,N,V_serialQueue
T@"NSMutableDictionary",&,N,V_dailyStats
T@"<CDPurgeableResultCache><CDDaemonPurgeableResultCache>",&,N,V_purgeableResultCache
T@"<CacheDeleteServiceProvider>",&,N,V_serviceProvider
TQ,R,V_nandSize
T@"PurgeStatsReporter",&,N,V_purgeStatReporter
setMonotonicEnd:
setSuccess:
setFinished:
finished
finish
duration
isFinished
timedOut
setTimedOut:
_isFinished
_success
_timedOut
_finished
_monotonicBegin
_monotonicEnd
TB,N,V_finished
TQ,N,V_monotonicEnd
TQ,R,N,V_monotonicBegin
Td,R,N
TB,R,N,V_isFinished
TB,N,V_success
TB,N,V_timedOut
mutableResults
initWithVolumes:
addResult:
setMutableResults:
_volumeNames
_mutableResults
T@"NSMutableArray",&,N,V_mutableResults
T@"NSArray",R,N
T@"NSArray",R,N,V_volumeNames
initWithVolumes:requestedBytes:mainVolume:clientProcName:
setEndFreeSpace:
setLevel:
setFsPurgeSuccess:
setLowDisk:
setVeryLowDisk:
setNearLowDisk:
_fsPurgeSuccess
_lowDisk
_veryLowDisk
_nearLowDisk
_level
_clientProcName
_requestedBytes
_beginFreeSpace
_containerSize
_containerInitialFreespace
_endFreeSpace
T@"NSString",R,N,V_clientProcName
TQ,R,N,V_requestedBytes
TQ,R,N,V_beginFreeSpace
TQ,R,N,V_containerSize
TQ,R,N,V_containerInitialFreespace
TQ,N,V_endFreeSpace
Ti,N,V_level
TB,N,V_fsPurgeSuccess
lowDisk
TB,N,GisLowDisk,V_lowDisk
veryLowDisk
TB,N,GisVeryLowDisk,V_veryLowDisk
nearLowDisk
TB,N,GisNearLowDisk,V_nearLowDisk
TQ,R,D,N
localizedStringWithFormat:
setPath:
path
setWithObjects:
unarchivedObjectOfClasses:fromData:error:
setRecentPurgeableResults:
recentPurgeableResults
name
version
isEqualToNumber:
description
recentInfoForVolumes:
setQueue:
queue
archivedDataWithRootObject:requiringSecureCoding:error:
writeToFile:options:error:
raise:format:
shouldUpdatePurgeable:
keepUpToDate:
initWithRecentInfo:
removeServiceInfo:forVolume:
updateServiceInfoAmount:forService:onVolume:atUrgency:withTimestamp:nonPurgeableAmount:deductFromCurrentAmount:
pushingServices
updatedNotificationBlock
updateRecentState:forVolume:
invalidateForVolume:
copyInvalidsForVolume:atUrgency:
copyPushingServices
setUpdatedNotificationBlock:
setUpdatedBlock:
updatedBlock
fetchVolumeWithPath:
recentPurgeableTotals:
recentInfoForVolume:atUrgency:validateResults:
isEmpty
isStale
hasInvalids
deductPurgeableAmount:serviceID:volume:urgency:
copyInvalidServicesForVolume:atUrgency:
invalidateRecentResultsForVolume:
prune
absorbRecentInfo:
updateDiagnostics:onVolume:atUrgency:
diagnosticsForVolume:atUrgency:
_recentPurgeableResults
_path
_queue
_updatedNotificationBlock
_updatedBlock
T@"CDDaemonRecentInfo",&,N,V_recentPurgeableResults
T@"NSString",&,N,V_path
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
T@?,C,N,V_updatedNotificationBlock
T@?,C,N,V_updatedBlock
doesPeriodic
setPeriodicResult:
validateDictionaryForXPC:
volumes
inFlight
setServiceName:
setUrgency:
servicesToTranslate
response_queue
setReportedPurgedBytes:
periodicResult
servicePeriodic:info:replyBlock:
analyticsReporter
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
TQ,R
T#,R
T@"NSString",R,C
resultCache
setVolumes:
T@"<CDPurgeableResultCache><CDDaemonPurgeableResultCache>",&,N
T@"NSArray",&,N
_startOperation:
_periodicResult
T@"CDPeriodicOperationResult",&,N,V_periodicResult
fileURLWithPath:
statsAreStale
resetPurgeStats
dataWithContentsOfFile:
load
dictionaryWithDictionary:
setNumberStyle:
substringToIndex:
numberFromString:
UUID
allValues
uniqueProcNameStringFor:
statKeys
sendPurgeStatsEventWithKey:
sendAndResetStats
persistenceURL
persistenceQueue
setPersistenceQueue:
_persistenceURL
_persistenceQueue
T@"NSURL",R,N,V_persistenceURL
T@"NSObject<OS_dispatch_queue>",&,N,V_persistenceQueue
dictionaryWithObject:forKey:
isRoot
rootOnly
operation_queue
hasRootOnlyServices
urgencyLimit
testFailures
setTestFailures:
non_negative_time_remaining
serviceIsRegistered:
servicesForVolume:
performBlockWithUrgency:
processTestFailures:
timeoutNotReached
setInfo:
result
setResult:
setVolumeNames:
setOperation_queue:
setResponse_queue:
measureElapsedTime
setMeasureElapsedTime:
start_time
setStart_time:
clientSpecifiedTimeout
timeout_seconds
setTimeout_seconds:
_hasRootOnlyServices
_measureElapsedTime
_clientSpecifiedTimeout
_urgencyLimit
_urgency
_resultCache
_info
_result
_testFailures
_volumes
_servicesToTranslate
_operation_queue
_response_queue
_start_time
_analyticsReporter
_timeout_seconds
Td,V_timeout_seconds
T@"<CDPurgeableResultCache><CDDaemonPurgeableResultCache>",&,N,V_resultCache
T@"NSDictionary",&,N,V_info
T@"NSDictionary",&,N,V_services
T@"NSMutableDictionary",&,N,V_result
T@"NSMutableDictionary",&,N,V_testFailures
T@"NSArray",&,N,V_volumes
T@"NSArray",&,N,V_volumeNames
TB,R,N,V_hasRootOnlyServices
T@"NSArray",R,N,V_servicesToTranslate
Ti,R,V_urgencyLimit
Ti,R,V_urgency
T@"NSObject<OS_dispatch_queue>",&,V_operation_queue
T@"NSObject<OS_dispatch_queue>",&,V_response_queue
TB,V_measureElapsedTime
Td,V_start_time
T@"CacheDeleteAnalytics",&,N,V_analyticsReporter
TB,R,N,V_clientSpecifiedTimeout
initWithQueue:
TB,N
totalPurgeableBytes
_totalPurgeableBytes
T@"NSArray",R,N,V_volumes
TQ,R,N,V_totalPurgeableBytes
_reportedPurgedBytes
TQ,N,V_reportedPurgedBytes
setRequestedBytes:
setReportedBytes:
_reportedBytes
TQ,N,V_requestedBytes
TQ,N,V_reportedBytes
reportedPurgeableBytes
setReportedPurgeableBytes:
_reportedPurgeableBytes
TQ,N,V_reportedPurgeableBytes
initWithName:uid:
_name
_uid
T@"NSString",R,N,V_name
TQ,R,N,V_uid
numberOfMatchesInString:options:range:
regularExpressionWithPattern:options:error:
timeMachineSnapshotRegex
hasSnapshotsExcludingRegularExpression:
snapshotsExcludingRegularExpression:
snapshots
hasSnapshotsMatchingRegularExpression:
snapshotsMatchingRegularExpression:
hasSnapshotsExcludingTimeMachine
snapshotsExcludingTimeMachine
doesPurge
setCancel:
serviceCancelPurge:
purge_amount_reported
purge_amount_needed
compare:
sortedArrayUsingComparator:
initialFreespace
setPurgeResult:
purgeResult
setPurge_amount_reported:
purgeSentinel:outInode:
filterServices:
volumeContribution:urgency:isTargetVolume:
tryFSPurge:atUrgency:onVolume:orderedServices:completion:
reportedAmountMatchesFreedSpace:
oneShot:volume:urgency:donation:currentRoundResults:timeout:info:optionalTestInfo:
cancel
serviceRequest:volume:urgency:donation:info:optionalTestInfo:completion:
batchServicesForVolume:atUrgency:services:batchSize:block:
firstObject
servicePurge:info:replyBlock:
_cancel
_purge_amount_needed
_purge_amount_reported
_purgeResult
T@"CDPurgeOperationResult",&,N,V_purgeResult
TB,V_cancel
TQ,R,V_purge_amount_needed
TQ,V_purge_amount_reported
objectAtIndex:
CDRecentVolumeInfo:
invalidate
invalidVolumes
fetchAllowedClassesSet
_createNewRecentVolumeInfoWithName:
_createNewRecentVolumeInfo
isInvalidForVolume:
setInflight_q:
setInflight:
inflight_q
inflight
setPurgeableResult:
intersectSet:
addInFlight:
longLongValue
purgeableResult
removeInFlight:
servicePurgeable:info:replyBlock:
copyInFlights
_purgeableResult
_inflight_q
_inflight
T@"CDPurgeableOperationResult",&,N,V_purgeableResult
T@"NSObject<OS_dispatch_queue>",&,N,V_inflight_q
T@"NSCountedSet",&,N,V_inflight
initWithServices:volumeName:
copyWithZone:
timestamp
setTimestamp:
setFreespace:
volume
setVolume:
volumeState
setVolumeState:
setThresholds:
bsdDisk
setBsdDisk:
reserve
setReserve:
createVolumeWithPath:
setCdVolume:
cdVolume
supportsSecureCoding
createVolumeWithMountPoint:
_validateWithSharedCacheDeleteForService:
_reserveForVolume
hasSnapshot
T@"CacheDeleteDaemonVolume",&,D,N
_serviceName
T@"NSString",&,N,V_serviceName
Ti,N,V_urgency
initWithUrgency:info:reply:
purgeOpAtUrgency:info:reply:
reply
setReply:
_reply
T@?,C,N,V_reply
serviceQueue
purgeQueue
unsignedIntValue
drainPurgeQueue
_servicePurge:info:replyBlock:
requestQueue
_servicePurgeable:info:replyBlock:
removeObjectsInArray:
insertObject:atIndex:
_inFlight
_servicePeriodic:info:replyBlock:
_serviceCancelPurge:
_servicePing:
_serviceNotify:replyBlock:
_serviceCallback:replyBlock:
initWithFormat:
initWithInfo:
initWithInfo:endpoint:
initWithInfo:extension:
noQuota
T@"NSString",R,N
TB,R,N
setID:
setDoesPeriodic:
setDoesPurge:
setDoNotQuery:
setRootOnly:
setServiceQueue:
setRequestQueue:
setNoQuota:
set_inFlight:
serviceInvalidationHandler
setPurgeQueue:
_doesPeriodic
_doesPurge
_doNotQuery
_rootOnly
_noQuota
__inFlight
_volUUIDs
_serviceQueue
_requestQueue
_desiredNotifications
_notificationOptions
_serviceInvalidationHandler
_purgeQueue
T@"NSMutableArray",&,N,V_purgeQueue
T@"NSArray",R,N,V_volUUIDs
T@"NSString",&,N,V_ID
TB,N,V_doesPeriodic
TB,N,V_doesPurge
TB,N,V_doNotQuery
TB,N,V_rootOnly
T@"NSObject<OS_dispatch_queue>",&,N,V_serviceQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_requestQueue
T@"NSSet",R,V_desiredNotifications
T@"NSDictionary",&,V_notificationOptions
TB,N,V_noQuota
TB,N,V__inFlight
T@?,C,N,V_serviceInvalidationHandler
isConnected
invalidateConnection
dealloc
doWithProxy:failure:
setXpcConnection:
setWatchdog_timer:
watchdog_timer
interfaceWithProtocol:
xpcConnection
setRemoteObjectInterface:
resumeConnection
setIsConnected:
remoteObjectProxyWithErrorHandler:
obtainXPCConnection:
connectionWasInvalidated
isInterrupted
setIsInterrupted:
isInvalidated
setIsInvalidated:
_isConnected
_isInterrupted
_isInvalidated
_xpcConnection
_watchdog_timer
T@"NSXPCConnection",&,N,V_xpcConnection
TB,N,V_isConnected
TB,N,V_isInterrupted
TB,N,V_isInvalidated
T@"NSObject<OS_dispatch_source>",&,N,V_watchdog_timer
isSpecialVolume
initWithVolume:
primary
quota
isAPFSVolume
role
_thresholds
stringByStandardizingPath
invalidateVolumesCache
setQuota:
_primary
_isAPFSVolume
_role
_uuid
_reserve
_quota
__thresholds
TS,R,V_role
TB,R,V_isAPFSVolume
T@"NSDictionary",R,N,V__thresholds
T@"NSUUID",R,N,V_uuid
TB,R,V_primary
T@"NSArray",R,D,N
TQ,V_reserve
TQ,V_quota
requestId
extension
_extensionContextForUUID:
_auxiliaryConnection
initWithDomain:code:userInfo:
setRequestId:
beginExtensionRequestWithOptions:inputItems:completion:
cancelExtensionRequestWithIdentifier:
_extension
_requestId
T@"<NSCopying>",&,N,V_requestId
T@"NSExtension",R,N,V_extension
initWithName:listener:protocol:exportedObj:isExtension:
setXpcServiceName:
xpcServiceName
options
setOptions:
initWithMachServiceName:options:
_xpcServiceName
_options
T@"NSString",&,N,V_xpcServiceName
TQ,N,V_options
createHeartbeatConnection
heartbeatConnection
remoteObjectProxy
haveCreatedHeartbeat
setHaveCreatedHeartbeat:
endpoint
initWithListenerEndpoint:
setHeartbeatConnection:
setInvalidationHandler:
setInterruptionHandler:
_haveCreatedHeartbeat
_endpoint
_heartbeatConnection
T@"NSXPCConnection",&,N,V_heartbeatConnection
TB,N,V_haveCreatedHeartbeat
T@"NSXPCListenerEndpoint",R,N,V_endpoint
bundleRecordWithBundleIdentifier:allowPlaceholder:error:
isPlaceholder
setWithObject:
bundleIdentifier
dataContainerURL
appCacheWithRecords:identifier:dataContainerURL:personaUniqueString:isEnterprise:isPlaceholder:isPlugin:telemetry:
cdVol
caches:purge:
clearCaches:
identifier
decodeObjectForKey:
cachesByVolume
encodeObject:forKey:
tmp:purge:all:
groupCache:
bundleRecords
lastUsed
setLastUsed:
groupContainerURLs
enumerateAppCachesOnVolume:telemetry:block:
lastKnownCacheSize
cachesForInstalledApps:volume:sortForUrgency:telemetry:
deletes
cdVolumes
mountPointForPath:
appContainerCachesWithInfo:
allocWithZone:
initReadOnlyCopy
testTelemetryWithInfo:
processContainerCachesForVolume:bytesNeeded:urgency:calculate:verbose:telemetry:
purge_queue
opState
begin
terminationFailures
removeFailures
encodeWithCoder:
initWithCoder:
TB,R
cdVolumeForPath:
appCache:forPath:
setCachesByVolume:
setCdVolumes:
setOpState:
setCollection_queue:
setPurge_queue:
_cachesByVolume
_cdVolumes
_opState
_purge_queue
T@"NSObject<OS_dispatch_queue>",&,N,V_collection_queue
T@"NSObject<OS_dispatch_queue>",&,N,V_purge_queue
T@"NSMutableDictionary",&,N,V_cachesByVolume
T@"NSMutableDictionary",&,N,V_cdVolumes
T@"OperationState",&,N,V_opState
/AppleInternal/Library/CacheDelete/
IPHONE_SIMULATOR_ROOT
%s%@
/System/Library/CacheDelete/
CACHE_DELETE_CACHE_ENABLED
com.apple.cache_delete
daemon
com.apple.cache_delete_timer
com.apple.cache_delete_notify
com.apple.cache_delete_collection
com.apple.cache_delete_defaults
com.apple.cache_delete_operations
v16@?0@"NSDictionary"8
CLIENT_ENTITLEMENT
v8@?0
v12@?0B8
CACHE_DELETE_MEASURE_ELAPSED_TIME
%@/%@
CACHE_DELETE_VOLUME
CACHE_DELETE_AMOUNT
CACHE_DELETE_QUOTA_EVENT
CACHE_DELETE_URGENCY
CACHE_DELETE_URGENCY_LIMIT
CACHE_DELETE_EVENT_KEY
UNKNOWN
CACHE_DELETE_PURGE_BEGIN
VERY_LOW_DISK_THRESHOLD
CD_VERYLOWDISK_EVENT
CACHE_DELETE_HIGH_PRIORITY_PURGE_FAILED
CD_NEAR_LOW_DISK_EVENT
CACHE_DELETE_LOW_MEDIUM_PRIORITY_PURGE_FAILED
CD_DESIRED_EVENT
CACHE_DELETE_PURGE_SUCCEEDED
LOW_DISK_THRESHOLD
DESIRED_DISK_THRESHOLD
CACHE_DELETE_LOW_DISK_NOTIFICATION
v16@?0@"NSString"8
_Flags
CD_LOWDISK_EVENT
Root
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.cache_delete.CriticalPurge
com.apple.cache_delete.ComfortPurge
com.apple.cache_delete.startPersistenceTimer
CACHE_DELETE_PURGEABLE_UPDATED
com.apple.cache_delete.applicationExtensions
com.apple.cache_delete_extension
NSExtension
CacheDeleteInfo
CACHE_DELETE_ID
v24@?0@"NSArray"8@"NSError"16
-[CacheDelete applicationExtensions]_block_invoke
%@/%s
CacheDeletePurgeHistory.txt
CACHE_DELETE_FSPURGED_VOLUMES
CACHE_DELETE_
%@_u%d
CACHE_DELETE_NO_CACHE
CACHE_DELETE_QUERY_PATH
FAST
CACHE_DELETE_CALLING_PROCESS
CACHE_DELETE_TOTAL_FSPURGEABLE
com.apple.photolibraryd.cacheDelete
com.apple.MUSIC
com.apple.MailCacheDelete
com.apple.fspurgeable_document
com.apple.fspurgeable_data
com.apple.PODCAST
com.apple.VIDEO
com.apple.MOVIE
com.apple.imagent.cache-delete
com.apple.ibooks.CacheDeleteExtension
com.apple.cache_delete.fsPurgeableQ
com.apple.deleted_helper
unknown
All Volumes
CACHE_DELETE_TOTAL_PURGEABLE
REFRESH
GrandTotal, 
CACHE_DELETE_INVALIDATE_CACHE
SLOW
CACHE_DELETE_PURGE_APP_CACHES
CACHE_DELETE_ERROR
info[CACHE_DELETE_PURGE_APP_CACHES_KEY] is unsupported type (should be NSArray): %@
CACHE_DELETE_SERVICES
P%@|%@|%@|%@
apfs
CACHE_DELETE_QOS
CACHE_DELETE_AMOUNT_REPORTED
|%@|%@
CACHE_DELETE_ELAPSED_TIME
CACHE_DELETE_QUERY_AFTER_PURGE
Invalid Volume Parameter
Missing Volume Parameter
CACHE_DELETE_TOKEN
unable to create a purge operation for %@
CACHE_DELETE_FS_PURGE_NOTIFY
rescan
historyDone
path
v16@?0r^{__CFArray=}8
CACHE_DELETE_PURGE_NOTIFICATION
com.apple.cache_delete._notifyRecipients
SERVICE_ENTITLEMENT
CacheDeleteErrorDomain
ANON
ITEMIZED_PURGEABLE_ENTITLEMENT
PURGEABLE_ENTITLEMENT
PURGE_ENTITLEMENT
PURGE_SPECIAL_CASE_ENTITLEMENT
%@ is not entitled to purge with kCacheDeleteUrgencySpecialCase
Invalid Volume
CACHE_DELETE_VOLUME_UUID
CACHE_DELETE_TEST_PARAMETERS
PERIODIC_ENTITLEMENT
Invalid volume: %@
CACHE_DELETE_DEMOTABLE_APPS
DEMOTABLE_APPS_ENTITLEMENT
CACHE_DELETE_DEMOTE_APPS
DEMOTE_APPS_ENTITLEMENT
CACHE_DELETE_OPERATIONS
Invalid arguments: missing key %@
CACHE_DELETE_SERVICE_REQUEST_OPERATION
Invalid arguments: missing operation key %@
CACHE_DELETE_SERVICE_REQUEST
Illegal service request type: %@
SERVICE_REQUEST_ENTITLEMENT
Unknown Service ID %@
Target service ID Required
Client is not entitled to perform a service request
TEST_ENTITLEMENT
CACHE_DELETE_TEST_VFS_EVENT_FLAGS
CACHE_DELETE_PURGE_OPERATION
CACHE_DELETE_PURGEABLE_OPERATION
v16@?0@"CDRecentInfo"8
CACHE_DELETE_ITEMIZED_PURGEABLE_OPERATION
CACHE_DELETE_PERIODIC_OPERATION
CACHE_DELETE_PURGE_CANCEL_OPERATION
CACHE_DELETE_TEST_VFS_EVENT
CACHE_DELETE_PURGE_USER_MANAGED_ASSETS
CACHE_DELETE_PURGE_USER_MANAGED_ASSETS_ENTITLEMENT
CACHE_DELETE_USER_DEFAULTS
clientGetState Client is not entitled to set key: %@
CACHE_DELETE_FORGET_PUSH
v16@?0@8
Operations
Services
PendingLowDiskCount
PendingLowDiskVolumes
Purgeable
v24@?0@"<CacheDeleteOperation>"8^B16
v32@?0@"NSString"8@"CDService"16^B24
CACHE_DELETE_TEST_CRASH
CACHE_DELETE_TEST_ASAN
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
com.apple.CacheDelete.daily
com.apple.cache_delete.daily_activity
CACHE_DELETE_TOTAL_AVAILABLE
dailyPurgeableAmountTotal
dailyPurgeableAmountTotalCentralized
com.apple.
dailyPurgeableAmount_%s
com.apple.dispatch.vfs
com.apple.cache_delete.low_disk_event
com.apple.cache_delete.launched
com.apple.cache_delete.startup_lowdisk_poll
v32@?0@"NSString"8Q16^B24
v32@?0@"NSString"8@"NSString"16^B24
v32@?0@8@16^B24
DateStarted
systemBuildVersion
systemProductName
systemBuildType
Release
com.apple.cache_delete.analytics
CDPurgeStats
CacheDeleteAnalytics.plist
/System/Library/CoreServices/SystemVersion.plist
ProductBuildVersion
ProductName
dailyNumVeryLowDiskEvents
dailyNumLowDiskEvents
dailyNumNearLowDiskEvents
dailyNumDesiredDiskEvents
dailyNumVeryLowDiskBroadcasts
dailyNumLowDiskBroadcasts
dailyNumNearLowDiskBroadcasts
dailyNumDesiredDiskBroadcasts
%@%@
lowDiskFunctionalFailure
dailyPurgeReqs%s%s
dailyPurgeSuccess%s%s
dailyFSPurgeSuccess%s%s
dailyPurgedBytes%s%s
dailyPurgedReportedBytes%s%s
dailyActiveTimeS
dailyActiveTimePurgingS
dailyNumLowDiskPurges%s
dailyNumLowDiskSuccess%s
dailyNumVeryLowDiskPurges%s
dailyNumVeryLowDiskSuccess%s
dailyNumNearLowDiskPurges%s
dailyNumNearLowDiskSuccess%s
purge_time_%s_%s
purgeable_time_%s_%s
name
value
@"NSDictionary"8@?0
dailyPurgeableAmount
dailyPurgeReqs
dailyPurgedBytes
dailyPurgedReportedBytes
com.apple.cachedelete.purgeablestats
deviceNandSize
dailyContainerSize
dailyContainerFreespace
dailyFreeBytesRoot
cacheDir_outHardlinks
cacheDir_size
addDailyValueForKey: Negative value (%f) for total measured bytes in: "%@"
None
Late
Verylate
dailyTotalBytesRoot
dailyPurgeableBytes%s
dailyItemizedPurgeableBytes%s_%s
dailyPurgeableBytesTot
dailyEffectiveFreeBytesRoot
dailyPurgeableOverTotalRatioRoot
dailyPurgeableOverUsedRatioRoot
dailyPurgeableOverEffectiveFreeRatioRoot
dailyIsNearLowDiskRoot
dailyIsLowDiskRoot
dailyIsVeryLowDiskRoot
com.apple.mobile.cache_delete_daily
CACHE_DELETE_ANALYTICS_REPORT
systemUsageStatsTimeout
com.apple.mobile.cache_delete_app_container_caches
applicationUsageStatsTimeout
appBundle_name
%@_%@
v32@?0@"NSString"8@"NSNumber"16^B24
v32@?0@"NSString"8@"NSDictionary"16^B24
com.apple.mobile.cache_delete_managed_assets
cacheManagementStatsTimeout
purgeRequestedRytes
purgeReportedBytes
purgeMeasuredBytes
purgeSuccess
purgeTimeS
purgeDefecitBytes
purgeClientProcName
purgeInitialFreespace
purgeEndFreespace
purgeLowDiskLevel
purgeContainerSize
purgeContainerInitialFreespace
lowdiskSuccess
lowdiskTimeS
lowdiskPeriodS
verylowdiskSuccess
verylowdiskTimeS
verylowdiskPeriodS
nearlowdisk_success
nearlowdiskTimeS
nearlowdiskPeriodS
purgeRequestedBytes%s%s
purgeReportedBytes%s%s
purgePercentReported%s%s
v32@?0@"CDPurgeServiceRequestResult"8Q16^B24
dailyPurgeableReqs
dailyActiveTimePurgeableS
v32@?0@"CDPurgeableServiceRequestResult"8Q16^B24
dailyPeriodicReqs
dailyActiveTimePeriodicS
periodicTimeS%s%s
periodicReportedBytes%s%s
v32@?0@"CDPeriodicServiceRequestResult"8Q16^B24
%@%s
lowDiskFunctionalFailure_%d_%s_%s
_v%lu
CacheDeleteDaemonRecentInfo
No error information available
com.apple.cache_delete.saveDaemonRecentInfo
_absorbRecentInfo
This method shouldn't be called from the subclass
com.apple.cache_delete.shouldUpdatePurgeable
CACHE_DELETE_PUSHED
CACHE_DELETE_TIMESTAMP
CACHE_DELETE_ITEMIZED_NONPURGEABLE
CACHE_DELETE_NONPURGEABLE_AMOUNT
TRUE
FALSE
CACHE_DELETE_PURGE_TIMEOUT
com.apple.cache_delete_periodic_results
Periodic callback firing more than once for service %{public}@
CACHE_DELETE_TEST_FAILURES
v32@?0@"NSString"8@"<CDService>"16^B24
com.apple.CacheDelete.purgeStatReporter
%lf_%@
%@__%llu
-[PurgeStatsReporter sendAndResetStats]
+[PurgeStatsReporter sendPurgeStatsEventWithKey:]
com.apple.cacheDelete.purgeStats
Parameter error, info is not a dict
com.apple.TMCacheDelete
com.apple.FileProvider.cache-delete
%s_%@_operation.%p
%s_%@_response.%p
_startOperation_InBaseClass
Must be implemented in the base class!
com.apple.cache_deleteoperation_test_failures
%@ <%p>: {
Volumes: [
Services: [
v24@?0r^{snapshot_info=QII[1024c]}8^B16
^com\.apple\.mobilebackup
com.apple.mobile.cache_delete_mobile_backup
CacheDeleteFSPurgeInProgress
No Error
q24@?0@8@16
CACHE_DELETE_SHARED_PURGEABLE
CACHE_DELETE_FREESPACE_BEGIN
v16@?0@"CDPurgeServiceRequestResult"8
B12@?0i8
CACHE_DELETE_OPERATION_CANCELLED
proceed
do not proceed
B16@?0@"NSArray"8
Purge operation was cancelled
CACHE_DELETE_FREESPACE_END
Operation Cancelled
Purge callback firing more than once for service %{public}@ on volume: %{public}@
fileID
v32@?0@"NSString"8@"CDRecentVolumeInfo"16^B24
com.apple.cahce_delete.purgeable_inflight
CACHE_DELETE_DIAGNOSTIC_INFO
Purgeable callback firing more than once for service %{public}@
CACHE_DELETE_ITEMIZED_PURGEABLE
NOT 
CACHE_DELETE_SERVICES_INFLIGHT
Reported
Duration
inFlight
Urgency
unknown caller
 (%@)
-[CDDaemonRecentVolumeInfo prunePreserving:]
PERIODIC
PURGE
CACHE_DELETE_VOLUMES
CACHE_DELETE_OPT_OUT_QUOTA_EVENTS
CACHE_DELETE_DO_NOT_QUERY
CACHE_DELETE_NOTIFICATIONS
.request
com.apple.cache_delete.CDService.servicePurgeable
Method must be implemented in subclass!
com.apple.cache_delete.CDService.servicePurge
com.apple.cache_delete.CDService.servicePeriodic
com.apple.cache_delete.CDService.serviceCancelPurge
com.apple.cache_delete.CDService.servicePing
com.apple.cache_delete.CDService.serviceNotify
com.apple.cache_delete.CDService.serviceCallback
<%@: %p (%@) = { inFlight=%s , purgeQueueLength=%d }>
CACHE_DELETE_SERVICE_IS_LOCAL
ANONYMOUS_%p
v24@?0@"<CacheDeleteServiceProtocol>"8@?<B@?>16
v16@?0@"NSError"8
%@: obtainXPCConnection callback fired more than once for %@!
%@: Received an error after the request succeeded! error: %@
%@: Received completion after we sent a callback! Success = %d
B8@?0
v24@?0@"NSXPCConnection"8@"NSError"16
com.apple.cache_delete.CDXPCService.no_connection
Subclass needs to implement this
com.apple.cache_delete.volumes
ExtensionRequiredError
%@ Requires Extension!
com.apple.cache_delete.CDAnonymousXPCService.duplicate_connection
Asked to build a connection to %@ but we already have a perfectly good one!
com.apple.cache_delete.unexpected_multiple_callback
beginExtensionRequestWithInputItems callback fired more than once
v24@?0@"<NSCopying>"8@"NSError"16
com.apple.cache_delete.public
com.apple.cache_delete.CDNamedXPCService.duplicate_connection
EndpointRequiredError
CDAnonymousService Required Endpoint!
com.apple.cache_delete.CDAnonymousXPCService.no_endpoint
Asked to build a connection to %@ but we have no endpoint!
CONTAINER_CACHES_BY_VOLUME
com.apple.cache_delete.app_caches.collection
com.apple.cache_delete.app_caches.purge
Library/Caches
B16@?0@"AppCache"8
com.apple.group
com.apple.cache_delete_app_container_caches
CACHE_DELETE_TEST_TERMINATION_FAILURES
CACHE_DELETE_TEST_REMOVE_FAILURES
operation info is not a dictionary
Unable to initialize user defaults!
Scanning PropertyList Dir %@
unable to create service for plist: %@
Adding Services: %@
Previously crashed while loading purgeable result cache at %@
Unable to set result cache breadcrumb: %d (%s)
Resuming XPC Listeners
propertyListWithData failed: %@
unable to read plist at: %@ : %@
Not processing low disk %@
Unable to validate volume %@
Purging %@ to Desirable (%llu bytes)
%@ Desirable purge callback: %@
skipping lowMediumPriority purge for volume: "%@", freespace: %llu
Purging %{public}@ to get above LOW_DISK (%llu bytes)
%@ LOW_DISK purge callback: %@
skipping highPriority purge for volume: "%@", freespace: %llu
Failing to broadcast low disk notification for volume %@ because it became invalid
Broadcasting LowDisk Notification: (previous)%d -> (current)%d
Sent low disk notification
checkNotificationState: unable to get low disk threshold for %@, using %llu
checkNotificationState: found low disk notification marker for: %@ freespace: %llu, lowDiskThreshold: %@
checkNotificationState: found a low disk notification marker for %@
checkNotificationState: Leaving low disk notification marker (%@), freespace: %llu, lowDiskThreshold: %@
caught VQ_VERYLOWDISK on "%{public}@"
VeryLowDiskEvent
caught VQ_LOWDISK on "%{public}@"
LowDiskEvent
caught VQ_NEARLOWDISK on "%{public}@"
NearLowDiskEvent
caught VQ_DESIREDDISK on "%@"
caught VFS_QUOTA
Not purging for VFS event %p (pending count: %d, volumes: %@)
Volume %@ is above DESIRED now!
 enableTelemetry=YES %{public, signpost.telemetry:string1, name=VolumeDomain}@ %{public, signpost.telemetry:number1, name=VolumeSize}lld %{public, signpost.telemetry:number2, name=NANDSize}lld
DesiredDiskEvent
Registering delayed critical low disk activity for volume %@
Running critical purge activity %p
Clearing delayed critical low disk activity for volume %@
Begin delayed comfort low disk activity for volume %@
Running comfort purge activity %p
Clearing delayed comfort low disk activity for volume %@
Activity checked in
Failed to set activity to wait state
Polling activity
Activity %p running with state %ld
Restarted persistence timer
Creating persistence timer
persistence timer fired
Started persistence timer
Sending notification: %s
beginMatchingExtensionsWithAttributes:: error: %@
App Extension matching callback called %d times within same PID
beginMatchingExtensionsWithAttributes:: got Plugins: %@
extensionDict does not have a service ID: %@
Skipping creation of an existing extension
unable to create CDService for extension: %@
No CacheDeleteInfo dict in: %@
extensionDict is not class NSDictionary, skipping: %@
Waiting for extensions. Context: %@
%s: Timed out matching app extensions.
prunePurgeHistory: pruning: %s
prunePurgeHistory: Unable to get caches directory path
NO services: %@
%d ***** %@ invalid: not registered and not mapped to an FSPurgeable type *****
%d ***** %@ does not respond to purgeable query *****
%d cache_delete shouldUpdateVolumes ENTRY, urgency: %d, volumes: %@
%d cache_delete shouldUpdateVolumes, volume: %@
%d cache_delete shouldUpdateVolumes staled cache for: %@ (%@) at %@
%d cache_delete shouldUpdateVolumes valid cache for: %@ (%@) at %@
%d cache_delete shouldUpdateVolumes EXIT, result: %@
stamped update for: %@ (%@) at %@
parameter error, info dictionary is nil.
%d %{public}s APFS Purgeable update for Calling process: %{public}@ on "%{public}@" ET: %f,  results:
%{public}@ : %{public}@
Pruning stale results for %{public}@ with doNotPrune list:
Refreshing results for %{public}@
Purgeable update results:
totalAvailable ENTRY, Volume: %{public}@, %sCalling process: %{public}@
totalAvailable info %{public}@ : %{public}@
CACHE_DELETE_INVALIDATE_CACHE_KEY: Invalidated the results cache
caller has requested a forceRefresh (CACHE_DELETE_NO_CACHE = YES)
caller has NOT requested a forceRefresh (CACHE_DELETE_NO_CACHE = NO, or is not present)
unable to validate volume "%{public}@"
%d totalAvailable updating results
%d totalAvailable updated results
%d Waiting for purgeable refresh, query path: %@
totalAvailable forceRefresh operationResult is %@
%d Returning cached results for target: %{public}@, with query path: %@ Calling process: %{public}@
%d Volume: %{public}@, update_block asynchronously refreshing any stale results. Calling process: %{public}@
%d totalAvailable: elapsed time %f
%d %s purge, info: %@
%d %s purge, result: %@
trying fsPurge on volume: %@, with info: %@, services: %@
%d cache_delete purge satisfied the request
%d cache_delete FS purge did NOT satisfy the request %llu bytes short
cache_delete purge: fsPurge did NOT satisfy the request
%d Purge Result: %@
Purge: unable to validate volume
Invalid token
PurgeOperation on volume %@, registered services:
<<<Purge Result: %{public}@ measured bytes (%{public}@ reported) on volume: "%{public}@"
%{public}@ : %{public}@
Purge Result>>> (%{public}@ measured bytes on volume: "%{public}@")
fsPurgeNotify mountPoint: %@
CacheDeleteEnumerateRemovedFiles callback, events: %@
signalling historyDone
signalling rescan
invokeAfterMaxSeconds delay: %lld seconds
%d processPurgeNotification breadcrumb event, notified %@ with: %@
%d notifyRecipients: notified serviceID: %@, notifications: %@
%d processPurgeNotification affected: %@, service: %@, notificationInfo: %@, service.notificationOptions: %@
%d processPurgeNotification, dir: %@ normalizedDir: %@
%d processPurgeNotification adding: %@
%d notifyRecipients(filtered by directory): notified serviceID: %@, notifications: %@ with: %@
%d processPurgeNotification affected volUUIDs: %@ service volUUIDs: %@
%d notifyRecipients(filtered by volume): notified serviceID: %@, notifications: %@
%d processPurgeNotification notifying %@ with: %@
%d notifyRecipients(unfiltered): notified serviceID: %@, notifications: %@
Notifying services for "%@", value: %@
%d notifyRecipients
Client checkin for service %{public}@, info: %{public}@
Connection is not entitled!
Anonymous service %@ invalidated!
Forgetting anonymous service %@
Forgotten anonymous service %@ disconnected
%@ clientCheckin got PONG from service: %@
Added anonymous service %@
Unable to create anonymous service %@
Attempting to check in a duplicate service %@
Unknown query type! can not determine the required entitelment
[%@] clientUnifiedPurgeableSpace queryType: %d, info: %@
Connection is not entitled to query purgeable space!
[%@] clientUnifiedPurgeableSpace queryType: %d, returning: %@
Connection is not entitled to purge!
purge
Invalid purge request did not include CACHE_DELETE_VOLUME_KEY
cancel
invalid or missing token or uuid
Connection is not entitled to trigger a periodic purge!
periodic
invalid serviceRequestOperation dictionary, more that one key
serviceRequestOperation is an unsupported object: %@
ServiceCallback results: %@
Client is not entitled to perform the service request!
[%@] Client Perform Operation: %@
there is no entitlement required for key: %@
%d _clientSetState key: %@, state: %@
%d _clientSetState, key: %@ updated_state: %@
Unsupported type %@ for CACHE_DELETE_CACHE_ENABLED_KEY: %@
%d _clientSetState, key: %@, value: %s, state: %@
clientSetState ENTRY, calling process: %@, key: %@, state: %@
Unable to realpath "%s" : %s
%d clientSetState setting %@ -> %@
clientSetState Client (%@) is not entitled to set key: %@
%d _clientGetState calling process: %@, key: %@
key is not an NSString: %@
persistent_state is not a dictionary: %@
using default value: %@ for key: %@
%d _clientGetState EXIT calling process: %@, result: %@
%d deleted clientUpdatePurgeable with: %@
Parameter Error
Crashing On Purpose!
Crashing ( ASAN ) On Purpose!
main
CacheDelete Starting...
Failed to get timebase info
PERIODIC result: %{public}@
handle_vfs_xpc
notify_post failed: %s
poll_vfs_lowdisk
CacheDelete, open for business!
quotactl error: %s
RECEIVED SIGKILL
RECEIVED SIGTERM
RECEIVED SIGQUIT
*** CacheDelete SigInfo ***
* Pending Low-Disk Count: %@
* Pending Low-Disk Volumes: %@
* Operations = {
%lu: %@
* Services = {
* Purgeable (Root Volume) = {
%@ = %@
* CDDaemonPurgeableResultCache sharedPurgeableResultsCache = {
*** Posting Daily Stats ***
Unable to get persistPath to save analytics!
Failed to persist CacheDelete analytic data!
Did not load CacheDelete analytic data
No file to remove at %@
Failed to remove file at %@: %@
Requesting analytic data from daily service
Received response from daily service analytics data request
Failed to get system usage stats! %@
Requesting analytic data from app caches service
Received response from app caches service analytics data request
Received %@
Requesting analytic data from cache management service
Received response from cache management service analytics data request
Unknown low disk event: %@
_reportLowDiskFunctionalFailure key: %@
NSKeyedUnarchiver unarchivedObjectOfClass failed to unarchive recent purgeable results: %@
Exception (%@) while unarchiving recent purgeable results
result is not of class (or subclass) CacheDeleteRecentInfo: %@
unarchived version of %@ (%@) is incompatible with current version (%d)
Unable to make data from %@ : %@
Failed to create data from: %@
unable to write results to cache file: %@: %@
%d shouldUpdatePurgeable ENTRY, info: %@
%d shouldUpdatePurgeable
%d shouldUpdatePurgeable EXIT, result: %s
emitRecentInfo ENTRY, info: %@
emitRecentInfo shouldUpdatePurgeable
emitRecentInfo EXIT, result: %@
parameter error (volume). mInfo: %@
bad key in amounts dictionary: %@
bad value in amounts dictionary: %@
Updating cache for service: %@, volume: %@, amounts: %@
Updating service info amount: %@, serviceID: %@, volume: %@, urgency: %@ pushed: %s, timestamp: %f
keepUpToDate: no updateBlock.
Periodic Operation: Service %{public}@ is in flight, skipping
Periodic callback firing more than once for service %{public}@
timed out (%llu seconds) waiting for:
%{public}@
%d, CacheDeletePeriodicOperation _startOperation service errors:
Service:Error - %@
Failed to initialize purge stats' persistence path!
unable to write results to cache file. Data: %@, Path: %@, Error: %@
Purge stat reporter found stale stats
Failed to persist purge stats, deleting persistence file if it exists. Error : %@
Weird... no purge stats path to persist to.
Failed to read in purge stats - deleting persistence file. Error: %@, Data: %@, Loaded Stats: %@
Exception (%@) while loading purge stats.
And failed to remove purge stats persistence file. Unlink returned: %d
%s : sending of stats to CA seems to have failed (or is not enabled).
%s : %@
info is not a dictionary!
Client specified timeout: %@
Client specified no timeout. Using : %d
Volume became invalid: %{public}@
Failing to create operation: no valid volumes! (%{public}@)
CacheDeleteOperation unable to validate volume: %{public}@
unsupported type for CACHE_DELETE_SERVICES_KEY: %{public}@
filtering for user specified services: %{public}@
removing filtered services: %{public}@
User specified CACHE_DELETE_URGENCY: %{public}@
User specified CACHE_DELETE_URGENCY_LIMIT: %{public}@
Finished operation without firing completion!
processTestFailures: %@
processTestFailures key: %@, val: %@
processTestFailures parameter error, failures: %@
validateDictionaryForXPC Invalid dictionary (%@): %@
Failed to enumerate snapshots for volume %@: %s
Failed to enumerate shapshots for volume %@: %s
fs_snapshot_list failed: %s
CACHE_DELETE_AMOUNT is missing in info: %{public}@
CancelPurge complete (service=%{public}@)
purgeDoneSentinel mkdir failed for %s : %s
purgeDoneSentinel unable to open %s : %s
purgeDoneSentinel Created %s
purgeDoneSentinel Unable to fstat %@ : %s
purgeDoneSentinel ino: %llu
purgeDoneSentinel unlink'd %s : %s
%d sortedPurgeable [urgency: %d, volume: %{public}@]:
%@ : %@
%d batch block returned: %s
%d batch for loop done, proceed: %s
%d Calling block with %lu batch items
No volume name in info dictionary.
Unable to validate volume: %@
urgencyLimit: %d, info at start: %{public}@
mainVolume: %{public}@, fstype: %{public}@
beforePurgeEventID: %llu
unable to create sentinel file
statfs failed for "%{public}s" : %s
Created FSEventStream with: %@
unable to create fsEventStream: %s
VOLUMES: %@
Purge satisfied, skipping %@
fsPurge reports %llu purged (%llu total reported, %llu measured) of %llu needed on volume: %{public}@ at urgency: %d by purging volume: %@, ET: %f
fsPurge noting purge on %@ : %@
fsPurge satisfied request: %llu purged (%llu measured) of %llu needed on volume: %@, ET: %f
[Purge goal satisfied by fsPurge for %{public}@, skipping cleanup and services loop
[Purge VERY_LOWDISK]: asking snapshot holders for %llu bytes from %{public}@
[Purge goal satisfied for %{public}@, skipping services loop
%d : Timeout reached for (%@) - stopping purge urgency loop.
Purging %{public}@ at urgency = %d
%d calling batchServicesForVolume: "%@", atUrgency: %d, with services:
%d proceed: %s, batch:
%d proceed: %s, numPlayers: %lu
[Purge Start] aborting, (roundGoal <= 0): %llu, purge_amount_needed: %llu, amountPurged: %llu
[Purge Start] aborting, (_donation <= 0), roundGoal: %llu
[Purge Start](Urgency %d : Round %d) Volume = %{public}@, Goal = %llu, Donation = %llu, Remaining Services:
[Purge Main](Volume: %{public}@, Urgency %d : Round %d) Begin
[Purge Main](Volume: %{public}@, Urgency %d : Round %d) %{public}@ request %llu bytes
[Purge Result](Volume: %{public}@, Urgency %d : Round %d) %{public}@ purged (%llu / %llu) bytes : elapsed time %lfs
** %{public}@ will continue purging at urgency %d on volume: %{public}@
** %{public}@ is disqualified from purging at urgency %d on volume: %{public}@
[Purge Result(tardy!)](Volume: %{public}@, Urgency %d : Round %d) %{public}@ purged (%llu / %llu) bytes : elapsed time %lfs
Purge failed (volume %{public}@ possibly invalid)
[Purge Main](Volume: %{public}@, Urgency %d : Round %d) Waiting for end of round: %llu seconds
[Purge Main](Volume: %{public}@, Urgency %d : Round %d) Timed out waiting for: %{public}@
Timed out with no inFlight list for volume: %{public}@
[Purge Cleanup](Volume: %{public}@, Urgency %d : Round %d) Begin
[Purge Cleanup](Volume: %{public}@, Urgency %d : Round %d) End
%d Retry loop: %s, currentRoundService.count: %lu
%d batch returning %s currentRoundServices count: %lu
%d Batch loop: %s
[Purge End](Volume %{public}@, Urgency %d) finished after %d Rounds (%llu bytes left)
%d Volume loop: %s
%d Urgency Loop [%d] returning: %s
CacheDelete was unable to satisfy the purge request for volume: %{public}@
Purge Result: %{public}llu bytes on: %{public}@
[Purge OneShot](Volume: %{public}@, Urgency %d) Begin
[Purge Result (oneShot)] %{public}@ purged (%llu / %llu) bytes on volume: %{public}@ in %lf seconds
[Purge Result (oneShot, tardy!)] %{public}@ purged (%llu / %llu) bytes on volume: %{public}@ in %lf seconds
Purge oneShot failed (volume %{public}@ was likely invalid)
[Purge OneShot] (Volume: %{public}@, Urgency %d) Timed out waiting for: %{public}@
[Purge OneShot](Volume: %{public}@, Urgency %d) End
Parameter error: service: %{public}@, volume %{public}@
Purge callback firing more than once for service %{public}@ on volume: %{public}@
%{public}@ took %f seconds, purged %llu bytes on volume: %{public}@
fsEventStreamMonitor no semaphore in context: %p
fsEventStreamMonitor sentinel remove event, ID: %llu, fileID: %@, path: %@, mapped: %@
fsEventStreamMonitor: Unexpected fsgetpath error: %{public}s
fsEventStreamMonitor: fsgetpath() was successful (%zd: %s) when expected to fail for: %{public}@
%d PurgeableOperation _startOperation query path: %{public}@ for volume: %@, info: %{public}@
Invalid volume parameter, info: %{public}@
NOT using cached purgeable values for %{public}@
%d PurgeableOperation Calling process: %{public}@, refreshAll is %{public}s for volume: %{public}@, %lu servicesToQuery:
%d PurgeableOperation will query: %{public}@
%d self.urgency: %d, self.urgencyLimit: %d
Service %{public}@ is still in-flight!
%{public}@ took %f seconds for Calling process: %{public}@, on volume: %{public}@, returned: %{public}@
Purgeable callback firing more than once for service %{public}@
%{public}@ returned an invalid CACHE_DELETE_AMOUNT, using zero
%{public}@ returned null result
dispatch_group_wait timed out after %d seconds, %srefreshing all services. Volumes: %{public}@, services in flight:
dispatch_group_wait_timeout_leave, service inFlight: %{public}@
[%{public}@] no servicesToQuery. refreshAll: %s
<<<PurgeableOperation Result (%{public}@, query path: %@, u: %@, ET: %f):
%{public}@ : %{public}@%{public}@
PurgeableOperation Result>>> %{public}@ bytes on: "%{public}@". Calling process: %{public}@
%d %s ***** pruning volume: %@, service: %@, value: %@
bsdDisk: cdVolume of CDDaemonRecentVolumeInfo is not of class CacheDeleteDaemonVolume
thresholds: cdVolume of CDDaemonRecentVolumeInfo is not of class CacheDeleteDaemonVolume
reserve: cdVolume of CDDaemonRecentVolumeInfo is not of class CacheDeleteDaemonVolume
No Service ID! info dictionary: %@
%@ servicesProvided: %@
%@ : CACHE_DELETE_SERVICES value is not an array: %@
%@ doesPurge: %s
%@ is OPT_OUT_QUOTA_EVENTS service
%@ is DO_NOT_QUERY service
%@ desiredNotifications: %@
drainPurgeQueue %@ QOS: %u
dequeuePurge executing deferred purge for service %@ at urgency %d : %@
dequeuePurge %@ [%p] no purges queued
%@ servicePurgeable returned
Parameter error: info: %@, reply: %@
%@ [%p] queuing purge at urgency %d, info: %@
%@ [%p] dropping purge of urgency %d, amount %llu
%@ [%p] is enqueueing a purge of urgency %d amount %llu at index %lu
%@ [%p] is NOT inFlight, draining the purge queue: %@
%@ [%p] not purging, it has a pending purge (urgency=%d) enqueued already, skipping
ServiceCancelPurge failed: %@
ServiceNotify failed: %@
%@: obtainXPCConnection callback fired more than once for %@!
%@: failed to respond after %llu seconds, deleted is dirty for this reason.
Connecting to %@
%@: remoteObjectProxyWithErrorHandler error: %@
%@: Received an error after the request succeeded! error: %@
%@: Successful Request
%@: Received completion after we sent a callback! Success = %d
%@: obtainXPCConnection failed to get a connection: %@
%@: invalidate and connection is nil!
watchdog timer is nil, self: %p, timer: %p
Connection to %@ was invalidated.
CacheDeleteDaemonVolume volumeWithPath Unable to validate mount point for: %@
CacheDeleteDaemonVolume volumeWithPath: Unable to create a CacheDeleteDaemonVolume from %@
CacheDeleteDaemonVolume invalidateVolumesCache
beginExtensionRequestWithInputItems callback called multiple (%d) times!
BeginExtensionRequestWithInputItems returned after self went away (ID=%@)!
Unable to get xpc connection from app extension context for app extension service %@
Unable to get extension context for app extension service %@
hostExtensionContext for service %@ has no connection
Failed to create an XPC Connection to service %@: %s
Pinging heartbeat connection for service %@
Heartbeat established for service %@
Establishing heartbeat to service %@
Failed to create a heartbeat connection for service %@
Heartbeat lost for service %@
Heartbeat connection is dead for %@, unable to obtain XPC connection
Failed to create an XPC Connection to anonymous endpoint %@: %s
Unable to create an LSBundleRecord for %@ : %@
LSBundleRecord for %@ : (class: %@) %@
AppCache for %@ : (%@) %@
Unable to create AppCache for %@
Unable to decode cachesByVolume
cachesForInstalledApps result:
%@ : %@ : %@, urgency: %d
No application cache space to reap
sorted caches:
  %@
Deleted %llu files at urgency %d
statfs failed for %s : %s
Unable to create CDVolume from: %@
%{public}s: PURGEABLE callback, info: %{public}@, cdVol: %{public}@
%{public}s PURGEABLE Result: %{public}@
%{public}s: PURGE callback, cdVol: %{public}@
TestTelemetry: %{public}@
Purging Container Caches
testTelemetry: %{public}@
Unable to create cdVol from info: %{public}@
%{public}s PURGE result: [u:%d] %{public}@ : %{public}@
%{public}s: PERIODIC callback (a no-op for now)
%{public}s: PURGE CANCEL callback
_serviceNotify is unsupported for %{public}s
com.apple.cache_delete_app_container_caches Callback ENTRY, info: %{public}@
%d, cdVol: %{public}@, opInfo: %{public}@
operation info is not a dictionary: %@
unsupported, call _servicePurge directly
unsupported, call _servicePurgeable directly
unsupported, call _serviceCancelPurge directly
unsupported, call _servicePeriodic directly
%{public}s: ANALYTICS callback
Received Analytics Report Request!
Responding with %{public}@
%{public}s result: %{public}@
CacheDelete
CacheDeleteClientProtocol
CacheDeletePublicClientProtocol
CacheDeleteServiceProvider
CacheDeleteAnalytics
CDResult
CDPeriodicOperationResult
CDPurgeOperationResult
CDDaemonPurgeableResultCache
CDPurgeableResultCache
CacheDeletePeriodicOperation
CacheDeleteOperation
NSObject
PurgeStatsReporter
CacheDeleteAsyncTimeoutFlag
CDPurgeableOperationResult
CDPeriodicServiceRequestResult
CDPurgeServiceRequestResult
CDPurgeableServiceRequestResult
CacheDeleteSnapshotInfo
Snapshots
CacheDeletePurgeOperation
CDDaemonRecentInfo
CacheDeletePurgeableOperation
CDDaemonRecentVolumeInfo
CDServiceRequestResult
purgeOP
CDService
CacheDeleteServiceProtocol
CDXPCService
CacheDeleteDaemonVolume
CDAppExtensionService
Daemon
CDNamedXPCService
CDAnonymousXPCService
AppContainerCaches
NSSecureCoding
NSCoding
NSCopying
@16@0:8
v36@0:8@16i24@?28
v36@0:8@"NSDictionary"16i24@?<v@?@"CDRecentInfo">28
v48@0:8@16@24@32@?40
v32@0:8@16@?24
v24@0:8@16
v32@0:8@16@24
v32@0:8@16i24B28
v48@0:8@"NSString"16@"NSXPCListenerEndpoint"24@"NSDictionary"32@?<v@?@"NSDictionary"@"NSError">40
v32@0:8@"NSDictionary"16@?<v@?@"NSDictionary">24
v24@0:8@"NSDictionary"16
v32@0:8@"NSDictionary"16@"NSString"24
v32@0:8@"NSString"16@?<v@?@>24
v32@0:8@"NSString"16i24B28
@24@0:8@16
@"<CDService>"24@0:8@"NSString"16
v16@0:8
v40@0:8@16@24@32
{VolumeThresholdsAndGoals=QQQQ}24@0:8@16
@40@0:8@16@24@?32
B24@0:8@16
i20@0:8i16
@28@0:8@16i24
v28@0:8@16i24
v44@0:8@16@24I32@?36
@48@0:8@16@24@32@?40
v40@0:8I16I20@24@?32
v52@0:8@16@24@32@40B48
v36@0:8@16@24B32
@20@0:8i16
B32@0:8@16@24
v24@0:8@?16
B16@0:8
Q16@0:8
v24@0:8Q16
@"NSObject<OS_dispatch_queue>"
@"CacheDeleteListener"
@"NSObject<OS_dispatch_source>"
@"NSURL"
@"NSMutableDictionary"
@"NSUserDefaults"
@"NSMutableSet"
@"NSDictionary"
@"CDDaemonPurgeableResultCache"
@"CacheDeleteAnalytics"
@"NSPointerArray"
@32@0:8@16@24
d28@0:8d16i24
v28@0:8@16B24
d24@0:8Q16
d32@0:8Q16Q24
v32@0:8@16d24
r*20@0:8i16
r*24@0:8d16
@20@0:8B16
@"<CDPurgeableResultCache><CDDaemonPurgeableResultCache>"
@"<CacheDeleteServiceProvider>"
@"PurgeStatsReporter"
d16@0:8
v20@0:8B16
@"NSArray"
@"NSMutableArray"
@48@0:8@16Q24@32@40
i16@0:8
v20@0:8i16
@"NSString"
@24@0:8Q16
@32@0:8@16i24B28
@40@0:8@16i24B28@32
q24@0:8@16
@"NSDictionary"20@0:8i16
@"NSDictionary"32@0:8@"CacheDeleteVolume"16i24B28
@"NSDictionary"28@0:8@"CacheDeleteVolume"16i24
@"NSDictionary"40@0:8@"NSArray"16i24B28@"NSString"32
q24@0:8@"CacheDeleteVolume"16
v44@0:8@16@24@32i40
v40@0:8@"NSString"16@"CacheDeleteVolume"24@"NSDictionary"32
v44@0:8@"NSNumber"16@"NSString"24@"CacheDeleteVolume"32i40
v24@0:8@"NSString"16
v24@0:8@"CacheDeleteVolume"16
@"NSSet"32@0:8@"CacheDeleteVolume"16@"NSNumber"24
@"NSSet"16@0:8
v24@0:8@?<v@?B>16
v24@0:8@?<v@?@"NSDictionary">16
v36@0:8@16@24i32
@?16@0:8
@"CDDaemonRecentInfo"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"<CDPurgeableResultCache><CDDaemonPurgeableResultCache>"16@0:8
v24@0:8@"<CDPurgeableResultCache><CDDaemonPurgeableResultCache>"16
@"NSArray"16@0:8
v24@0:8@"NSArray"16
@40@0:8@16@24@32
@"CDPeriodicOperationResult"
v24@0:8d16
@32@0:8@16Q24
v52@0:8Q16i24@28@36@?44
@28@0:8B16^Q20
v48@0:8@16i24@28i36@?40
Q32@0:8@16i24B28
v76@0:8@16@24i32Q36@44Q52@60@68
v68@0:8@16@24i32Q36@44@52@?60
@"CDPurgeOperationResult"
@"CDPurgeableOperationResult"
@"NSCountedSet"
@24@0:8^{_NSZone=}16
@36@0:8i16@20@?28
v36@0:8i16@20@?28
v36@0:8i16@"NSDictionary"20@?<v@?@"NSDictionary">28
v24@0:8@?<v@?>16
v32@0:8@"NSDictionary"16@?<v@?>24
@"NSSet"
v32@0:8@?16@?24
@"NSXPCConnection"
@28@0:8@16B24
B32@0:8^Q16^Q24
S16@0:8
@"NSUUID"
@"NSExtension"
@"<NSCopying>"
@"NSXPCListenerEndpoint"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@40@0:8B16@20i28@32
Q52@0:8@16Q24i32B36B40@44
@"OperationState"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.coreduetd.allow</key>
<true/>
<key>com.apple.mobile.keybagd.UserManager.logout</key>
<true/>
<key>com.apple.multitasking.termination</key>
<true/>
<key>com.apple.private.CacheDelete</key>
<array>
<string>PURGEABLE_ENTITLEMENT</string>
<string>ITEMIZED_PURGEABLE_ENTITLEMENT</string>
<string>PURGE_ENTITLEMENT</string>
<string>CANCEL_PURGE_ENTITLEMENT</string>
<string>PERIODIC_ENTITLEMENT</string>
<string>SERVICE_REQUEST_ENTITLEMENT</string>
<string>NOTIFICATION_ENTITLEMENT</string>
</array>
<key>com.apple.private.MobileContainerManager.otherIdLookup</key>
<true/>
<key>com.apple.private.MobileContainerManager.userManagedAssets</key>
<true/>
<key>com.apple.private.coreservices.canmapbundleidtouuid</key>
<true/>
<key>com.apple.private.ind.client</key>
<true/>
<key>com.apple.private.security.storage-exempt.heritable</key>
<true/>
<key>com.apple.private.security.storage.AppDataContainers</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceSystemPolicyRemovableVolumes</string>
<string>kTCCServiceSystemPolicyNetworkVolumes</string>
</array>
<key>com.apple.security.enterprise-volume-access</key>
<true/>
<key>com.apple.security.network.client</key>
<true/>
<key>com.apple.usermanagerd.persona.fetch</key>
<true/>
<key>seatbelt-profiles</key>
<array>
<string>deleted</string>
</array>
</dict>
</plist>
dictionaryWithObjectsAndKeys:
intersectSet:
timeIntervalSinceReferenceDate
updateRecentState:forVolume:
containsString:
amountPurged
objectAtIndexedSubscript:
dataWithContentsOfFile:options:error:
removeFailures
allocWithZone:
timeIntervalSinceDate:
interfaceWithProtocol:
setLastUsed:
dictionaryWithObjects:forKeys:count:
mountPoint
objectAtIndex:
errorWithDomain:code:userInfo:
containsObject:
setRemoteObjectInterface:
dataWithContentsOfFile:
dictionaryWithObject:forKey:
removeAllObjects
groupContainerURLs
testTelemetryWithInfo:
dataContainerURL
integerValue
beginExtensionRequestWithOptions:inputItems:completion:
numberWithUnsignedLongLong:
enumeratorAtPath:
allValues
volumeState
remoteObjectProxyWithErrorHandler:
sortedArrayUsingComparator:
dictionaryWithDictionary:
enumerateObjectsUsingBlock:
groupCache:
UTF8String
numberWithUnsignedInteger:
setInvalidationHandler:
intValue
cdVol
allObjects
initWithFormat:
remoteObjectProxy
insertObject:atIndex:
setInterruptionHandler:
dictionaryWithContentsOfFile:
minusSet:
numberWithLong:
enumerateKeysAndObjectsUsingBlock:
isRoot
terminationFailures
allKeys
initWithDomain:code:userInfo:
enumerateAppCachesOnVolume:telemetry:block:
size
capitalizedString
dictionaryWithCapacity:
setTimestamp:
begin
initialFreespace
isPlaceholder
regularExpressionWithPattern:options:error:
volume
numberWithInteger:
unsignedLongLongValue
fsType
unsignedIntValue
initWithCapacity:
dictionary
numberWithInt:
componentsSeparatedByString:
addRequiredEntitlement:
setThresholds:
synchronize
addPointer:
cancelExtensionRequestWithIdentifier:
componentsJoinedByString:
numberWithDouble:
version
longValue
rootVolume
compare:
infoDictionary
numberWithBool:
deletes
addObjectsFromArray:
unionSet:
freespaceIsStale:
longLongValue
arrayWithObjects:count:
valueForKey:
substringToIndex:
numberOfMatchesInString:options:range:
unarchivedObjectOfClasses:fromData:error:
addObject:
currentConnection
validateVolumeAtPath:
arrayWithObject:
freespace
isEqualToString:
stringWithUTF8String:
numberFromString:
code
setFreespace:
initWithSuiteName:
array
encodeObject:forKey:
isEqualToNumber:
initWithServices:volumeName:
localizedStringWithFormat:
stringWithFormat:
archivedDataWithRootObject:requiringSecureCoding:error:
caches:purge:
_extensionContextForUUID:
propertyListWithData:options:format:error:
resume
addEntriesFromDictionary:
firstObject
countByEnumeratingWithState:objects:count:
initWithRecentInfo:
removeServiceInfo:forVolume:
rangeOfString:
setWithObjects:
stringByStandardizingPath
tmp:purge:all:
count
bundleRecords
bytes
setWithObject:
defaultManager
raise:format:
identifier
appendString:
stringByAppendingString:
removeObjectsInArray:
setObject:forKeyedSubscript:
decodeObjectForKey:
setCdVolume:
bundleRecordWithBundleIdentifier:allowPlaceholder:error:
doubleValue
_auxiliaryConnection
appendFormat:
setWithArray:
timestamp
length
stringByAppendingPathExtension:
setObject:forKey:
lastUsed
domain
bundleIdentifier
fileURLWithPath:
setNumberStyle:
removeObjectsForKeys:
writeToFile:options:error:
stringByAppendingPathComponent:
pushingServices
setBsdDisk:
copyInvalidsForVolume:atUrgency:
initWithName:listener:protocol:exportedObj:isExtension:
removeObjectForKey:
fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
writeToFile:atomically:
appCacheWithRecords:identifier:dataContainerURL:personaUniqueString:isEnterprise:isPlaceholder:isPlugin:telemetry:
UUIDString
lastKnownCacheSize
setVolumeState:
removeObjectAtIndex:
clearCaches:
fileSystemRepresentation
UUID
initWithMachServiceName:options:
dateWithTimeIntervalSinceReferenceDate:
setVolume:
state
weakObjectsPointerArray
invalidate
mutableCopy
updateServiceInfoAmount:forService:onVolume:atUrgency:withTimestamp:nonPurgeableAmount:deductFromCurrentAmount:
removeObject:
objectForKeyedSubscript:
initWithListenerEndpoint:
invalidVolumes
date
removeItemAtPath:error:
mountPointForUUID:
objectForKey:
copy
dataWithPropertyList:format:options:error:
hasPrefix:
beginMatchingExtensionsWithAttributes:completion:
init
cancelOperation
sharedCacheDelete
clientUnifiedPurgeableSpace:queryType:replyBlock:
clientCheckin:endpoint:info:reply:
clientPurge:replyBlock:
clientPerformOperation:replyBlock:
clientPerformServiceRequest:replyBlock:
clientCancelPurge:
clientSetState:key:
clientGetState:replyBlock:
clientUpdatePurgeable:
clientRegisterLowDiskFailure:failureType:isRoot:
serviceWithID:
beginListening
scanPlistsAtPath:execBlock:
processLowDiskVolumes:key:
processLowDiskVolumes:filteringBySet:key:
processLowDiskVolume:key:
extractThresholdsAndGoals:
updateFollowup:
broadcastLowDiskNotificationForVolume:key:
checkNotificationState
handleVFSStreamXPCEventForVolume:event:
handleVFSStreamXPCEvent:
beginCriticalPurgeActivityForVolume:
endCriticalPurgeActivityForVolume:
beginComfortPurgeActivityForVolume:
endComfortPurgeActivityForVolume:
registerActivityWithIdentifier:criteria:runHandler:
saveRecentInfo
startPersistenceTimer
persistPurgeableResultsAndPostNotification
cancelPersistenceTimer
log_recent_info
applicationExtensions
prunePurgeHistory
fsPurgedVolumes:
copyServices
validateService:
normalizeUrgency:
keyForVolume:atUrgency:
shouldUpdateVolumes:atUrgency:
timestampUpdateForVolumes:atUrgency:
updateRecentResultsForVolumes:withInfo:qos:receiveResults:
asyncUpdateRecentResultsForAllVolumesWithInfo:
totalAvailable:
purge:volume:callback:
_purge:volume:services:callback:
invokeAfterMaxSeconds:min:group:block:
processPurgeNotification:forService:info:group:force:
_notifyRecipients:value:force:
notifyRecipients:value:
forcePurgeNotify:
_entitlementToCheck:
clientPerformPeriodicsWithInfo:completion:
clientPerformVFSEventWithInfo:replyBlock:
checkSettingEntitlements:onConnection:
_clientSetState:key:
_clientGetState:replyBlock:
pruneCacheableStates
registerOperation:
removeOperation:
iteratePendingOperations:
debugState
operationsDebugState
servicesDebugState
maybeCrashForTest:
collection_queue
defaults_queue
operations_queue
listener
setListener:
publicListener
setPublicListener:
measureElapsedTimes
extensionMatchContext
setExtensionMatchContext:
notify_queue
timer_queue
persistence_timer
setPersistence_timer:
rootPath
lastRefreshTimes
setLastRefreshTimes:
userDefaults
setUserDefaults:
services
setServices:
daemons
setDaemons:
default_values
setDefault_values:
purgeOperations
setPurgeOperations:
purgeableResultCache
setPurgeableResultCache:
analytics
setAnalytics:
inFlightOperations
setInFlightOperations:
pendingLowDiskCount
setPendingLowDiskCount:
pendingLowDiskVolumes
setPendingLowDiskVolumes:
lastUpdateTimes
setLastUpdateTimes:
.cxx_destruct
_measureElapsedTimes
_collection_queue
_defaults_queue
_operations_queue
_listener
_publicListener
_extensionMatchContext
_notify_queue
_timer_queue
_persistence_timer
_rootPath
_lastRefreshTimes
_userDefaults
_services
_daemons
_default_values
_purgeOperations
_purgeableResultCache
_analytics
_inFlightOperations
_pendingLowDiskCount
_pendingLowDiskVolumes
_lastUpdateTimes
T@"CacheDeleteListener",&,N,V_listener
T@"CacheDeleteListener",&,N,V_publicListener
TB,R,V_measureElapsedTimes
T@,&,N,V_extensionMatchContext
T@"NSObject<OS_dispatch_queue>",R,N,V_notify_queue
T@"NSObject<OS_dispatch_queue>",R,N,V_timer_queue
T@"NSObject<OS_dispatch_source>",&,N,V_persistence_timer
T@"NSURL",R,N,V_rootPath
T@"NSMutableDictionary",&,N,V_lastRefreshTimes
T@"NSUserDefaults",&,N,V_userDefaults
T@"NSMutableDictionary",&,N,V_services
T@"NSMutableSet",&,N,V_daemons
T@"NSDictionary",&,N,V_default_values
T@"NSMutableDictionary",&,N,V_purgeOperations
T@"CDDaemonPurgeableResultCache",&,N,V_purgeableResultCache
T@"CacheDeleteAnalytics",&,N,V_analytics
T@"NSPointerArray",&,N,V_inFlightOperations
TQ,N,V_pendingLowDiskCount
T@"NSMutableSet",&,N,V_pendingLowDiskVolumes
T@"NSMutableDictionary",&,N,V_lastUpdateTimes
T@"NSObject<OS_dispatch_queue>",R,N,V_collection_queue
T@"NSObject<OS_dispatch_queue>",R,N,V_defaults_queue
T@"NSObject<OS_dispatch_queue>",R,N,V_operations_queue
currentSystemInfo
buildType
isDataCollectionEnabled
getLowDiskLevelFromPurgeResult:
initWithServiceProvider:withPurgeableResultCache:
persistPath
save
load:
clear
addDailyStats:
postDailyStats:
reportPurgeTimingInfo:
reportPurgeableTimingInfo:
fetchLowDiskStats
fetchStorageStats
fetchTimingStats:
fetchApplicationUsageStats
fetchAdditionalStats
sendCAEvent:key:value:
sendPurgeableAmountStats
sendAppCacheStats:
_addDailyStats:
_postDailyStats:
anonymizeAndFlush:name:
_reportPurgeTimingInfo:
_reportPurgeableTimingInfo:
reportPurge:
reportPurgeable:
reportPeriodic:
round:toSignificantDigits:
roundNumber:toSignificantDigits:
postStatsDictionary:summarize:
machTimeToSeconds:
secondsFrom:to:
incrementDailyValueForKey:
addDailyValueForKey:value:
stringForUrgency:
stringForTime:
isRootVolume:
dailyPurgeableStats:
systemUsageStats
applicationUsageStats
cacheManagementUsageStats
processPurgeOperationResult:
processPurgeableOperationResult:
processPeriodicOperationResult:
reportReceivedLowDiskNotification:forVolume:
_reportReceivedLowDiskNotification:forVolume:
reportBroadcastLowDiskNotification:forVolume:
_reportBroadcastLowDiskNotification:forVolume:
reportLowDiskFunctionalFailure:failureType:isRoot:
_reportLowDiskFunctionalFailure:failureType:isRoot:
serialQueue
setSerialQueue:
dailyStats
setDailyStats:
serviceProvider
setServiceProvider:
nandSize
purgeStatReporter
setPurgeStatReporter:
_serialQueue
_dailyStats
_serviceProvider
_nandSize
_purgeStatReporter
T@"NSObject<OS_dispatch_queue>",&,N,V_serialQueue
T@"NSMutableDictionary",&,N,V_dailyStats
T@"<CDPurgeableResultCache><CDDaemonPurgeableResultCache>",&,N,V_purgeableResultCache
T@"<CacheDeleteServiceProvider>",&,N,V_serviceProvider
TQ,R,V_nandSize
T@"PurgeStatsReporter",&,N,V_purgeStatReporter
finish
duration
monotonicBegin
monotonicEnd
setMonotonicEnd:
isFinished
success
setSuccess:
timedOut
setTimedOut:
finished
setFinished:
_isFinished
_success
_timedOut
_finished
_monotonicBegin
_monotonicEnd
TB,N,V_finished
TQ,N,V_monotonicEnd
TQ,R,N,V_monotonicBegin
Td,R,N
TB,R,N,V_isFinished
TB,N,V_success
TB,N,V_timedOut
initWithVolumes:
results
addResult:
volumeNames
mutableResults
setMutableResults:
_volumeNames
_mutableResults
T@"NSMutableArray",&,N,V_mutableResults
T@"NSArray",R,N
T@"NSArray",R,N,V_volumeNames
initWithVolumes:requestedBytes:mainVolume:clientProcName:
totalReportedBytes
totalMeasuredBytes
clientProcName
requestedBytes
beginFreeSpace
containerSize
containerInitialFreespace
endFreeSpace
setEndFreeSpace:
level
setLevel:
fsPurgeSuccess
setFsPurgeSuccess:
isLowDisk
setLowDisk:
isVeryLowDisk
setVeryLowDisk:
isNearLowDisk
setNearLowDisk:
_fsPurgeSuccess
_lowDisk
_veryLowDisk
_nearLowDisk
_level
_clientProcName
_requestedBytes
_beginFreeSpace
_containerSize
_containerInitialFreespace
_endFreeSpace
T@"NSString",R,N,V_clientProcName
TQ,R,N,V_requestedBytes
TQ,R,N,V_beginFreeSpace
TQ,R,N,V_containerSize
TQ,R,N,V_containerInitialFreespace
TQ,N,V_endFreeSpace
Ti,N,V_level
TB,N,V_fsPurgeSuccess
lowDisk
TB,N,GisLowDisk,V_lowDisk
veryLowDisk
TB,N,GisVeryLowDisk,V_veryLowDisk
nearLowDisk
TB,N,GisNearLowDisk,V_nearLowDisk
TQ,R,D,N
currentVersion
pathForVersion:
defaultPath
sharedPurgeableResultsCache
fetchVolumeWithPath:
recentPurgeableTotals:
recentInfoForVolume:atUrgency:validateResults:
recentInfoForVolume:atUrgency:
recentInfoForVolumes:atUrgency:validateResults:targetVolume:
recentStateForVolume:
invalidateAllForgettingPushers:
isEmpty
isStale
hasInvalids
updateRecentInfoForServiceID:volume:info:
deductPurgeableAmount:serviceID:volume:urgency:
removeServiceInfo:
updateRecentStateforVolume:
copyInvalidServicesForVolume:atUrgency:
copyPushingServices
invalidateRecentResultsForVolume:
forgetPushingService:
setUpdateNotificationBlock:
setUpdateBlock:
initWithPath:
save:
prune
absorbRecentInfo:
shouldUpdatePurgeable:
emitRecentInfo:
addInvalidVolume:
updateInvalidVolumes
updateDiagnostics:onVolume:atUrgency:
diagnosticsForVolume:atUrgency:
prunePreserving:
keepUpToDate:
recentPurgeableResults
setRecentPurgeableResults:
path
setPath:
queue
setQueue:
updatedNotificationBlock
setUpdatedNotificationBlock:
updatedBlock
setUpdatedBlock:
_recentPurgeableResults
_path
_queue
_updatedNotificationBlock
_updatedBlock
T@"CDDaemonRecentInfo",&,N,V_recentPurgeableResults
T@"NSString",&,N,V_path
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
T@?,C,N,V_updatedNotificationBlock
T@?,C,N,V_updatedBlock
initWithInfo:services:volumes:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
startOperation:
resultCache
setResultCache:
volumes
setVolumes:
T@"<CDPurgeableResultCache><CDDaemonPurgeableResultCache>",&,N
T@"NSArray",&,N
_startOperation:
periodicResult
setPeriodicResult:
_periodicResult
T@"CDPeriodicOperationResult",&,N,V_periodicResult
statKeys
uniqueProcNameStringFor:
sendPurgeStatsEventWithKey:
load
statsAreStale
resetPurgeStats
appendAndSaveStats:
sendAndResetStats
persistenceURL
persistenceQueue
setPersistenceQueue:
_persistenceURL
_persistenceQueue
T@"NSURL",R,N,V_persistenceURL
T@"NSObject<OS_dispatch_queue>",&,N,V_persistenceQueue
serviceIsRegistered:
servicesForVolume:
performBlockWithUrgency:
processTestFailures:
validateDictionaryForXPC:
non_negative_time_remaining
timeoutNotReached
info
setInfo:
result
setResult:
testFailures
setTestFailures:
setVolumeNames:
hasRootOnlyServices
servicesToTranslate
urgencyLimit
urgency
operation_queue
setOperation_queue:
response_queue
setResponse_queue:
measureElapsedTime
setMeasureElapsedTime:
start_time
setStart_time:
analyticsReporter
setAnalyticsReporter:
clientSpecifiedTimeout
timeout_seconds
setTimeout_seconds:
_hasRootOnlyServices
_measureElapsedTime
_clientSpecifiedTimeout
_urgencyLimit
_urgency
_resultCache
_info
_result
_testFailures
_volumes
_servicesToTranslate
_operation_queue
_response_queue
_start_time
_analyticsReporter
_timeout_seconds
Td,V_timeout_seconds
T@"<CDPurgeableResultCache><CDDaemonPurgeableResultCache>",&,N,V_resultCache
T@"NSDictionary",&,N,V_info
T@"NSDictionary",&,N,V_services
T@"NSMutableDictionary",&,N,V_result
T@"NSMutableDictionary",&,N,V_testFailures
T@"NSArray",&,N,V_volumes
T@"NSArray",&,N,V_volumeNames
TB,R,N,V_hasRootOnlyServices
T@"NSArray",R,N,V_servicesToTranslate
Ti,R,V_urgencyLimit
Ti,R,V_urgency
T@"NSObject<OS_dispatch_queue>",&,V_operation_queue
T@"NSObject<OS_dispatch_queue>",&,V_response_queue
TB,V_measureElapsedTime
Td,V_start_time
T@"CacheDeleteAnalytics",&,N,V_analyticsReporter
TB,R,N,V_clientSpecifiedTimeout
initWithQueue:
TB,N
totalPurgeableBytes
_totalPurgeableBytes
T@"NSArray",R,N,V_volumes
TQ,R,N,V_totalPurgeableBytes
reportedPurgedBytes
setReportedPurgedBytes:
_reportedPurgedBytes
TQ,N,V_reportedPurgedBytes
setRequestedBytes:
reportedBytes
setReportedBytes:
_reportedBytes
TQ,N,V_requestedBytes
TQ,N,V_reportedBytes
reportedPurgeableBytes
setReportedPurgeableBytes:
_reportedPurgeableBytes
TQ,N,V_reportedPurgeableBytes
initWithName:uid:
name
_name
_uid
T@"NSString",R,N,V_name
TQ,R,N,V_uid
snapshots
hasSnapshotsMatchingRegularExpression:
snapshotsMatchingRegularExpression:
hasSnapshotsExcludingRegularExpression:
snapshotsExcludingRegularExpression:
timeMachineSnapshotRegex
hasSnapshotsExcludingTimeMachine
snapshotsExcludingTimeMachine
tryFSPurge:atUrgency:onVolume:orderedServices:completion:
reportedAmountMatchesFreedSpace:
purgeSentinel:outInode:
batchServicesForVolume:atUrgency:services:batchSize:block:
volumeContribution:urgency:isTargetVolume:
filterServices:
oneShot:volume:urgency:donation:currentRoundResults:timeout:info:optionalTestInfo:
serviceRequest:volume:urgency:donation:info:optionalTestInfo:completion:
cancel
setCancel:
purge_amount_needed
purge_amount_reported
setPurge_amount_reported:
purgeResult
setPurgeResult:
_cancel
_purge_amount_needed
_purge_amount_reported
_purgeResult
T@"CDPurgeOperationResult",&,N,V_purgeResult
TB,V_cancel
TQ,R,V_purge_amount_needed
TQ,V_purge_amount_reported
recentInfoForVolumes:
fetchAllowedClassesSet
_createNewRecentVolumeInfoWithName:
_createNewRecentVolumeInfo
invalidateForVolume:
isInvalidForVolume:
addInFlight:
removeInFlight:
copyInFlights
purgeableResult
setPurgeableResult:
inflight_q
setInflight_q:
inflight
setInflight:
_purgeableResult
_inflight_q
_inflight
T@"CDPurgeableOperationResult",&,N,V_purgeableResult
T@"NSObject<OS_dispatch_queue>",&,N,V_inflight_q
T@"NSCountedSet",&,N,V_inflight
supportsSecureCoding
CDRecentVolumeInfo:
createVolumeWithPath:
createVolumeWithMountPoint:
copyWithZone:
_validateWithSharedCacheDeleteForService:
_reserveForVolume
bsdDisk
thresholds
reserve
hasSnapshot
cdVolume
T@"CacheDeleteDaemonVolume",&,D,N
serviceName
setServiceName:
setUrgency:
_serviceName
T@"NSString",&,N,V_serviceName
Ti,N,V_urgency
purgeOpAtUrgency:info:reply:
initWithUrgency:info:reply:
reply
setReply:
_reply
T@?,C,N,V_reply
serviceWithInfo:
serviceWithInfo:endpoint:
serviceWithInfo:extension:
servicePurgeable:info:replyBlock:
servicePurge:info:replyBlock:
servicePeriodic:info:replyBlock:
serviceCancelPurge:
servicePing:
serviceNotify:replyBlock:
serviceCallback:replyBlock:
setServiceInvalidationHandler:
volUUIDs
doesPeriodic
doesPurge
rootOnly
doNotQuery
inFlight
noQuota
T@"NSString",R,N
TB,R,N
initWithInfo:
drainPurgeQueue
_servicePurgeable:info:replyBlock:
_servicePurge:info:replyBlock:
_servicePeriodic:info:replyBlock:
_serviceCancelPurge:
_servicePing:
_serviceNotify:replyBlock:
_serviceCallback:replyBlock:
setID:
setDoesPeriodic:
setDoesPurge:
setDoNotQuery:
setRootOnly:
serviceQueue
setServiceQueue:
requestQueue
setRequestQueue:
desiredNotifications
notificationOptions
setNotificationOptions:
setNoQuota:
_inFlight
set_inFlight:
serviceInvalidationHandler
purgeQueue
setPurgeQueue:
_doesPeriodic
_doesPurge
_doNotQuery
_rootOnly
_noQuota
__inFlight
_volUUIDs
_serviceQueue
_requestQueue
_desiredNotifications
_notificationOptions
_serviceInvalidationHandler
_purgeQueue
T@"NSMutableArray",&,N,V_purgeQueue
T@"NSArray",R,N,V_volUUIDs
T@"NSString",&,N,V_ID
TB,N,V_doesPeriodic
TB,N,V_doesPurge
TB,N,V_doNotQuery
TB,N,V_rootOnly
T@"NSObject<OS_dispatch_queue>",&,N,V_serviceQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_requestQueue
T@"NSSet",R,V_desiredNotifications
T@"NSDictionary",&,V_notificationOptions
TB,N,V_noQuota
TB,N,V__inFlight
T@?,C,N,V_serviceInvalidationHandler
dealloc
doWithProxy:failure:
obtainXPCConnection:
invalidateConnection
resumeConnection
connectionWasInvalidated
xpcConnection
setXpcConnection:
isConnected
setIsConnected:
isInterrupted
setIsInterrupted:
isInvalidated
setIsInvalidated:
watchdog_timer
setWatchdog_timer:
_isConnected
_isInterrupted
_isInvalidated
_xpcConnection
_watchdog_timer
T@"NSXPCConnection",&,N,V_xpcConnection
TB,N,V_isConnected
TB,N,V_isInterrupted
TB,N,V_isInvalidated
T@"NSObject<OS_dispatch_source>",&,N,V_watchdog_timer
validate
initWithVolume:
volumeWithPath:
invalidateVolumesCache
volumeWithMountpoint:
siblings
initWithPath:isPrimary:
isSpecialVolume
containerTotalSize:andFreespace:
uuid
primary
setReserve:
quota
setQuota:
role
isAPFSVolume
_thresholds
_primary
_isAPFSVolume
_role
_uuid
_reserve
_quota
__thresholds
TS,R,V_role
TB,R,V_isAPFSVolume
T@"NSDictionary",R,N,V__thresholds
T@"NSUUID",R,N,V_uuid
TB,R,V_primary
T@"NSArray",R,D,N
TQ,V_reserve
TQ,V_quota
initWithInfo:extension:
extension
requestId
setRequestId:
_extension
_requestId
T@"<NSCopying>",&,N,V_requestId
T@"NSExtension",R,N,V_extension
daemonListenerWithExportedObject:
daemonPublicListenerWithExportedObject:
xpcServiceName
setXpcServiceName:
options
setOptions:
_xpcServiceName
_options
T@"NSString",&,N,V_xpcServiceName
TQ,N,V_options
initWithInfo:endpoint:
createHeartbeatConnection
endpoint
heartbeatConnection
setHeartbeatConnection:
haveCreatedHeartbeat
setHaveCreatedHeartbeat:
_haveCreatedHeartbeat
_endpoint
_heartbeatConnection
T@"NSXPCConnection",&,N,V_heartbeatConnection
TB,N,V_haveCreatedHeartbeat
T@"NSXPCListenerEndpoint",R,N,V_endpoint
deleteAppCaches:telemetry:
appContainerCachesWithInfo:
encodeWithCoder:
initWithCoder:
TB,R
cachesForInstalledApps:volume:sortForUrgency:telemetry:
processContainerCachesForVolume:bytesNeeded:urgency:calculate:verbose:telemetry:
cdVolumeForPath:
appCache:forPath:
mountPointForPath:
initReadOnlyCopy
cachesByVolume
setCachesByVolume:
cdVolumes
setCdVolumes:
opState
setOpState:
setCollection_queue:
purge_queue
setPurge_queue:
_cachesByVolume
_cdVolumes
_opState
_purge_queue
T@"NSObject<OS_dispatch_queue>",&,N,V_collection_queue
T@"NSObject<OS_dispatch_queue>",&,N,V_purge_queue
T@"NSMutableDictionary",&,N,V_cachesByVolume
T@"NSMutableDictionary",&,N,V_cdVolumes
T@"OperationState",&,N,V_opState
/AppleInternal/Library/CacheDelete/
IPHONE_SIMULATOR_ROOT
%s%@
/System/Library/CacheDelete/
CACHE_DELETE_CACHE_ENABLED
com.apple.cache_delete
daemon
com.apple.cache_delete_timer
com.apple.cache_delete_notify
com.apple.cache_delete_collection
com.apple.cache_delete_defaults
com.apple.cache_delete_operations
v16@?0@"NSDictionary"8
CLIENT_ENTITLEMENT
v8@?0
v12@?0B8
CACHE_DELETE_MEASURE_ELAPSED_TIME
%@/%@
CACHE_DELETE_VOLUME
CACHE_DELETE_AMOUNT
CACHE_DELETE_QUOTA_EVENT
CACHE_DELETE_URGENCY
CACHE_DELETE_URGENCY_LIMIT
CACHE_DELETE_EVENT_KEY
UNKNOWN
CACHE_DELETE_PURGE_BEGIN
VERY_LOW_DISK_THRESHOLD
CD_VERYLOWDISK_EVENT
CACHE_DELETE_HIGH_PRIORITY_PURGE_FAILED
CD_NEAR_LOW_DISK_EVENT
CACHE_DELETE_LOW_MEDIUM_PRIORITY_PURGE_FAILED
CD_DESIRED_EVENT
CACHE_DELETE_PURGE_SUCCEEDED
LOW_DISK_THRESHOLD
DESIRED_DISK_THRESHOLD
CACHE_DELETE_LOW_DISK_NOTIFICATION
v16@?0@"NSString"8
_Flags
CD_LOWDISK_EVENT
Root
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.cache_delete.CriticalPurge
com.apple.cache_delete.ComfortPurge
com.apple.cache_delete.startPersistenceTimer
CACHE_DELETE_PURGEABLE_UPDATED
com.apple.cache_delete.applicationExtensions
com.apple.cache_delete_extension
NSExtension
CacheDeleteInfo
CACHE_DELETE_ID
v24@?0@"NSArray"8@"NSError"16
-[CacheDelete applicationExtensions]_block_invoke
%@/%s
CacheDeletePurgeHistory.txt
CACHE_DELETE_FSPURGED_VOLUMES
CACHE_DELETE_
%@_u%d
CACHE_DELETE_NO_CACHE
CACHE_DELETE_QUERY_PATH
FAST
CACHE_DELETE_CALLING_PROCESS
CACHE_DELETE_TOTAL_FSPURGEABLE
com.apple.photolibraryd.cacheDelete
com.apple.MUSIC
com.apple.MailCacheDelete
com.apple.fspurgeable_document
com.apple.fspurgeable_data
com.apple.PODCAST
com.apple.VIDEO
com.apple.MOVIE
com.apple.imagent.cache-delete
com.apple.ibooks.CacheDeleteExtension
com.apple.cache_delete.fsPurgeableQ
com.apple.deleted_helper
unknown
All Volumes
CACHE_DELETE_TOTAL_PURGEABLE
REFRESH
GrandTotal, 
CACHE_DELETE_INVALIDATE_CACHE
SLOW
CACHE_DELETE_PURGE_APP_CACHES
CACHE_DELETE_ERROR
info[CACHE_DELETE_PURGE_APP_CACHES_KEY] is unsupported type (should be NSArray): %@
CACHE_DELETE_SERVICES
P%@|%@|%@|%@
apfs
CACHE_DELETE_QOS
CACHE_DELETE_AMOUNT_REPORTED
|%@|%@
CACHE_DELETE_ELAPSED_TIME
CACHE_DELETE_QUERY_AFTER_PURGE
Invalid Volume Parameter
Missing Volume Parameter
CACHE_DELETE_TOKEN
unable to create a purge operation for %@
CACHE_DELETE_FS_PURGE_NOTIFY
rescan
historyDone
path
v16@?0r^{__CFArray=}8
CACHE_DELETE_PURGE_NOTIFICATION
com.apple.cache_delete._notifyRecipients
SERVICE_ENTITLEMENT
CacheDeleteErrorDomain
ANON
ITEMIZED_PURGEABLE_ENTITLEMENT
PURGEABLE_ENTITLEMENT
PURGE_ENTITLEMENT
PURGE_SPECIAL_CASE_ENTITLEMENT
%@ is not entitled to purge with kCacheDeleteUrgencySpecialCase
Invalid Volume
CACHE_DELETE_VOLUME_UUID
CACHE_DELETE_TEST_PARAMETERS
PERIODIC_ENTITLEMENT
Invalid volume: %@
CACHE_DELETE_DEMOTABLE_APPS
DEMOTABLE_APPS_ENTITLEMENT
CACHE_DELETE_DEMOTE_APPS
DEMOTE_APPS_ENTITLEMENT
CACHE_DELETE_OPERATIONS
Invalid arguments: missing key %@
CACHE_DELETE_SERVICE_REQUEST_OPERATION
Invalid arguments: missing operation key %@
CACHE_DELETE_SERVICE_REQUEST
Illegal service request type: %@
SERVICE_REQUEST_ENTITLEMENT
Unknown Service ID %@
Target service ID Required
Client is not entitled to perform a service request
TEST_ENTITLEMENT
CACHE_DELETE_TEST_VFS_EVENT_FLAGS
CACHE_DELETE_PURGE_OPERATION
CACHE_DELETE_PURGEABLE_OPERATION
v16@?0@"CDRecentInfo"8
CACHE_DELETE_ITEMIZED_PURGEABLE_OPERATION
CACHE_DELETE_PERIODIC_OPERATION
CACHE_DELETE_PURGE_CANCEL_OPERATION
CACHE_DELETE_TEST_VFS_EVENT
CACHE_DELETE_PURGE_USER_MANAGED_ASSETS
CACHE_DELETE_PURGE_USER_MANAGED_ASSETS_ENTITLEMENT
CACHE_DELETE_USER_DEFAULTS
clientGetState Client is not entitled to set key: %@
CACHE_DELETE_FORGET_PUSH
v16@?0@8
Operations
Services
PendingLowDiskCount
PendingLowDiskVolumes
Purgeable
v24@?0@"<CacheDeleteOperation>"8^B16
v32@?0@"NSString"8@"CDService"16^B24
CACHE_DELETE_TEST_CRASH
CACHE_DELETE_TEST_ASAN
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
com.apple.CacheDelete.daily
com.apple.cache_delete.daily_activity
CACHE_DELETE_TOTAL_AVAILABLE
dailyPurgeableAmountTotal
dailyPurgeableAmountTotalCentralized
com.apple.
dailyPurgeableAmount_%s
com.apple.dispatch.vfs
com.apple.cache_delete.low_disk_event
com.apple.cache_delete.launched
com.apple.cache_delete.startup_lowdisk_poll
v32@?0@"NSString"8Q16^B24
v32@?0@"NSString"8@"NSString"16^B24
v32@?0@8@16^B24
DateStarted
systemBuildVersion
systemProductName
systemBuildType
Release
com.apple.cache_delete.analytics
CDPurgeStats
CacheDeleteAnalytics.plist
/System/Library/CoreServices/SystemVersion.plist
ProductBuildVersion
ProductName
dailyNumVeryLowDiskEvents
dailyNumLowDiskEvents
dailyNumNearLowDiskEvents
dailyNumDesiredDiskEvents
dailyNumVeryLowDiskBroadcasts
dailyNumLowDiskBroadcasts
dailyNumNearLowDiskBroadcasts
dailyNumDesiredDiskBroadcasts
%@%@
lowDiskFunctionalFailure
dailyPurgeReqs%s%s
dailyPurgeSuccess%s%s
dailyFSPurgeSuccess%s%s
dailyPurgedBytes%s%s
dailyPurgedReportedBytes%s%s
dailyActiveTimeS
dailyActiveTimePurgingS
dailyNumLowDiskPurges%s
dailyNumLowDiskSuccess%s
dailyNumVeryLowDiskPurges%s
dailyNumVeryLowDiskSuccess%s
dailyNumNearLowDiskPurges%s
dailyNumNearLowDiskSuccess%s
purge_time_%s_%s
purgeable_time_%s_%s
name
value
@"NSDictionary"8@?0
dailyPurgeableAmount
dailyPurgeReqs
dailyPurgedBytes
dailyPurgedReportedBytes
com.apple.cachedelete.purgeablestats
deviceNandSize
dailyContainerSize
dailyContainerFreespace
dailyFreeBytesRoot
cacheDir_outHardlinks
cacheDir_size
addDailyValueForKey: Negative value (%f) for total measured bytes in: "%@"
None
Late
Verylate
dailyTotalBytesRoot
dailyPurgeableBytes%s
dailyItemizedPurgeableBytes%s_%s
dailyPurgeableBytesTot
dailyEffectiveFreeBytesRoot
dailyPurgeableOverTotalRatioRoot
dailyPurgeableOverUsedRatioRoot
dailyPurgeableOverEffectiveFreeRatioRoot
dailyIsNearLowDiskRoot
dailyIsLowDiskRoot
dailyIsVeryLowDiskRoot
com.apple.mobile.cache_delete_daily
CACHE_DELETE_ANALYTICS_REPORT
systemUsageStatsTimeout
com.apple.mobile.cache_delete_app_container_caches
applicationUsageStatsTimeout
appBundle_name
%@_%@
v32@?0@"NSString"8@"NSNumber"16^B24
v32@?0@"NSString"8@"NSDictionary"16^B24
com.apple.mobile.cache_delete_managed_assets
cacheManagementStatsTimeout
purgeRequestedRytes
purgeReportedBytes
purgeMeasuredBytes
purgeSuccess
purgeTimeS
purgeDefecitBytes
purgeClientProcName
purgeInitialFreespace
purgeEndFreespace
purgeLowDiskLevel
purgeContainerSize
purgeContainerInitialFreespace
lowdiskSuccess
lowdiskTimeS
lowdiskPeriodS
verylowdiskSuccess
verylowdiskTimeS
verylowdiskPeriodS
nearlowdisk_success
nearlowdiskTimeS
nearlowdiskPeriodS
purgeRequestedBytes%s%s
purgeReportedBytes%s%s
purgePercentReported%s%s
v32@?0@"CDPurgeServiceRequestResult"8Q16^B24
dailyPurgeableReqs
dailyActiveTimePurgeableS
v32@?0@"CDPurgeableServiceRequestResult"8Q16^B24
dailyPeriodicReqs
dailyActiveTimePeriodicS
periodicTimeS%s%s
periodicReportedBytes%s%s
v32@?0@"CDPeriodicServiceRequestResult"8Q16^B24
%@%s
lowDiskFunctionalFailure_%d_%s_%s
_v%lu
CacheDeleteDaemonRecentInfo
No error information available
com.apple.cache_delete.saveDaemonRecentInfo
_absorbRecentInfo
This method shouldn't be called from the subclass
com.apple.cache_delete.shouldUpdatePurgeable
CACHE_DELETE_PUSHED
CACHE_DELETE_TIMESTAMP
CACHE_DELETE_ITEMIZED_NONPURGEABLE
CACHE_DELETE_NONPURGEABLE_AMOUNT
TRUE
FALSE
CACHE_DELETE_PURGE_TIMEOUT
com.apple.cache_delete_periodic_results
Periodic callback firing more than once for service %{public}@
CACHE_DELETE_TEST_FAILURES
v32@?0@"NSString"8@"<CDService>"16^B24
com.apple.CacheDelete.purgeStatReporter
%lf_%@
%@__%llu
-[PurgeStatsReporter sendAndResetStats]
+[PurgeStatsReporter sendPurgeStatsEventWithKey:]
com.apple.cacheDelete.purgeStats
Parameter error, info is not a dict
com.apple.TMCacheDelete
com.apple.FileProvider.cache-delete
%s_%@_operation.%p
%s_%@_response.%p
_startOperation_InBaseClass
Must be implemented in the base class!
com.apple.cache_deleteoperation_test_failures
%@ <%p>: {
Volumes: [
Services: [
v24@?0r^{snapshot_info=QII[1024c]}8^B16
^com\.apple\.mobilebackup
com.apple.mobile.cache_delete_mobile_backup
CacheDeleteFSPurgeInProgress
No Error
q24@?0@8@16
CACHE_DELETE_SHARED_PURGEABLE
CACHE_DELETE_FREESPACE_BEGIN
v16@?0@"CDPurgeServiceRequestResult"8
B12@?0i8
CACHE_DELETE_OPERATION_CANCELLED
proceed
do not proceed
B16@?0@"NSArray"8
Purge operation was cancelled
CACHE_DELETE_FREESPACE_END
Operation Cancelled
Purge callback firing more than once for service %{public}@ on volume: %{public}@
fileID
v32@?0@"NSString"8@"CDRecentVolumeInfo"16^B24
com.apple.cahce_delete.purgeable_inflight
CACHE_DELETE_DIAGNOSTIC_INFO
Purgeable callback firing more than once for service %{public}@
CACHE_DELETE_ITEMIZED_PURGEABLE
NOT 
CACHE_DELETE_SERVICES_INFLIGHT
Reported
Duration
inFlight
Urgency
unknown caller
 (%@)
-[CDDaemonRecentVolumeInfo prunePreserving:]
PERIODIC
PURGE
CACHE_DELETE_VOLUMES
CACHE_DELETE_OPT_OUT_QUOTA_EVENTS
CACHE_DELETE_DO_NOT_QUERY
CACHE_DELETE_NOTIFICATIONS
.request
com.apple.cache_delete.CDService.servicePurgeable
Method must be implemented in subclass!
com.apple.cache_delete.CDService.servicePurge
com.apple.cache_delete.CDService.servicePeriodic
com.apple.cache_delete.CDService.serviceCancelPurge
com.apple.cache_delete.CDService.servicePing
com.apple.cache_delete.CDService.serviceNotify
com.apple.cache_delete.CDService.serviceCallback
<%@: %p (%@) = { inFlight=%s , purgeQueueLength=%d }>
CACHE_DELETE_SERVICE_IS_LOCAL
ANONYMOUS_%p
v24@?0@"<CacheDeleteServiceProtocol>"8@?<B@?>16
v16@?0@"NSError"8
%@: obtainXPCConnection callback fired more than once for %@!
%@: Received an error after the request succeeded! error: %@
%@: Received completion after we sent a callback! Success = %d
B8@?0
v24@?0@"NSXPCConnection"8@"NSError"16
com.apple.cache_delete.CDXPCService.no_connection
Subclass needs to implement this
com.apple.cache_delete.volumes
ExtensionRequiredError
%@ Requires Extension!
com.apple.cache_delete.CDAnonymousXPCService.duplicate_connection
Asked to build a connection to %@ but we already have a perfectly good one!
com.apple.cache_delete.unexpected_multiple_callback
beginExtensionRequestWithInputItems callback fired more than once
v24@?0@"<NSCopying>"8@"NSError"16
com.apple.cache_delete.public
com.apple.cache_delete.CDNamedXPCService.duplicate_connection
EndpointRequiredError
CDAnonymousService Required Endpoint!
com.apple.cache_delete.CDAnonymousXPCService.no_endpoint
Asked to build a connection to %@ but we have no endpoint!
CONTAINER_CACHES_BY_VOLUME
com.apple.cache_delete.app_caches.collection
com.apple.cache_delete.app_caches.purge
Library/Caches
B16@?0@"AppCache"8
com.apple.group
com.apple.cache_delete_app_container_caches
CACHE_DELETE_TEST_TERMINATION_FAILURES
CACHE_DELETE_TEST_REMOVE_FAILURES
operation info is not a dictionary
Unable to initialize user defaults!
Scanning PropertyList Dir %@
unable to create service for plist: %@
Adding Services: %@
Previously crashed while loading purgeable result cache at %@
Unable to set result cache breadcrumb: %d (%s)
Resuming XPC Listeners
propertyListWithData failed: %@
unable to read plist at: %@ : %@
Not processing low disk %@
Unable to validate volume %@
Purging %@ to Desirable (%llu bytes)
%@ Desirable purge callback: %@
skipping lowMediumPriority purge for volume: "%@", freespace: %llu
Purging %{public}@ to get above LOW_DISK (%llu bytes)
%@ LOW_DISK purge callback: %@
skipping highPriority purge for volume: "%@", freespace: %llu
Failing to broadcast low disk notification for volume %@ because it became invalid
Broadcasting LowDisk Notification: (previous)%d -> (current)%d
Sent low disk notification
checkNotificationState: unable to get low disk threshold for %@, using %llu
checkNotificationState: found low disk notification marker for: %@ freespace: %llu, lowDiskThreshold: %@
checkNotificationState: found a low disk notification marker for %@
checkNotificationState: Leaving low disk notification marker (%@), freespace: %llu, lowDiskThreshold: %@
caught VQ_VERYLOWDISK on "%{public}@"
VeryLowDiskEvent
caught VQ_LOWDISK on "%{public}@"
LowDiskEvent
caught VQ_NEARLOWDISK on "%{public}@"
NearLowDiskEvent
caught VQ_DESIREDDISK on "%@"
caught VFS_QUOTA
Not purging for VFS event %p (pending count: %d, volumes: %@)
Volume %@ is above DESIRED now!
 enableTelemetry=YES %{public, signpost.telemetry:string1, name=VolumeDomain}@ %{public, signpost.telemetry:number1, name=VolumeSize}lld %{public, signpost.telemetry:number2, name=NANDSize}lld
DesiredDiskEvent
Registering delayed critical low disk activity for volume %@
Running critical purge activity %p
Clearing delayed critical low disk activity for volume %@
Begin delayed comfort low disk activity for volume %@
Running comfort purge activity %p
Clearing delayed comfort low disk activity for volume %@
Activity checked in
Failed to set activity to wait state
Polling activity
Activity %p running with state %ld
Restarted persistence timer
Creating persistence timer
persistence timer fired
Started persistence timer
Sending notification: %s
beginMatchingExtensionsWithAttributes:: error: %@
App Extension matching callback called %d times within same PID
beginMatchingExtensionsWithAttributes:: got Plugins: %@
extensionDict does not have a service ID: %@
Skipping creation of an existing extension
unable to create CDService for extension: %@
No CacheDeleteInfo dict in: %@
extensionDict is not class NSDictionary, skipping: %@
Waiting for extensions. Context: %@
%s: Timed out matching app extensions.
prunePurgeHistory: pruning: %s
prunePurgeHistory: Unable to get caches directory path
NO services: %@
%d ***** %@ invalid: not registered and not mapped to an FSPurgeable type *****
%d ***** %@ does not respond to purgeable query *****
%d cache_delete shouldUpdateVolumes ENTRY, urgency: %d, volumes: %@
%d cache_delete shouldUpdateVolumes, volume: %@
%d cache_delete shouldUpdateVolumes staled cache for: %@ (%@) at %@
%d cache_delete shouldUpdateVolumes valid cache for: %@ (%@) at %@
%d cache_delete shouldUpdateVolumes EXIT, result: %@
stamped update for: %@ (%@) at %@
parameter error, info dictionary is nil.
%d %{public}s APFS Purgeable update for Calling process: %{public}@ on "%{public}@" ET: %f,  results:
%{public}@ : %{public}@
Pruning stale results for %{public}@ with doNotPrune list:
Refreshing results for %{public}@
Purgeable update results:
totalAvailable ENTRY, Volume: %{public}@, %sCalling process: %{public}@
totalAvailable info %{public}@ : %{public}@
CACHE_DELETE_INVALIDATE_CACHE_KEY: Invalidated the results cache
caller has requested a forceRefresh (CACHE_DELETE_NO_CACHE = YES)
caller has NOT requested a forceRefresh (CACHE_DELETE_NO_CACHE = NO, or is not present)
unable to validate volume "%{public}@"
%d totalAvailable updating results
%d totalAvailable updated results
%d Waiting for purgeable refresh, query path: %@
totalAvailable forceRefresh operationResult is %@
%d Returning cached results for target: %{public}@, with query path: %@ Calling process: %{public}@
%d Volume: %{public}@, update_block asynchronously refreshing any stale results. Calling process: %{public}@
%d totalAvailable: elapsed time %f
%d %s purge, info: %@
%d %s purge, result: %@
trying fsPurge on volume: %@, with info: %@, services: %@
%d cache_delete purge satisfied the request
%d cache_delete FS purge did NOT satisfy the request %llu bytes short
cache_delete purge: fsPurge did NOT satisfy the request
%d Purge Result: %@
Purge: unable to validate volume
Invalid token
PurgeOperation on volume %@, registered services:
<<<Purge Result: %{public}@ measured bytes (%{public}@ reported) on volume: "%{public}@"
%{public}@ : %{public}@
Purge Result>>> (%{public}@ measured bytes on volume: "%{public}@")
fsPurgeNotify mountPoint: %@
CacheDeleteEnumerateRemovedFiles callback, events: %@
signalling historyDone
signalling rescan
invokeAfterMaxSeconds delay: %lld seconds
%d processPurgeNotification breadcrumb event, notified %@ with: %@
%d notifyRecipients: notified serviceID: %@, notifications: %@
%d processPurgeNotification affected: %@, service: %@, notificationInfo: %@, service.notificationOptions: %@
%d processPurgeNotification, dir: %@ normalizedDir: %@
%d processPurgeNotification adding: %@
%d notifyRecipients(filtered by directory): notified serviceID: %@, notifications: %@ with: %@
%d processPurgeNotification affected volUUIDs: %@ service volUUIDs: %@
%d notifyRecipients(filtered by volume): notified serviceID: %@, notifications: %@
%d processPurgeNotification notifying %@ with: %@
%d notifyRecipients(unfiltered): notified serviceID: %@, notifications: %@
Notifying services for "%@", value: %@
%d notifyRecipients
Client checkin for service %{public}@, info: %{public}@
Connection is not entitled!
Anonymous service %@ invalidated!
Forgetting anonymous service %@
Forgotten anonymous service %@ disconnected
%@ clientCheckin got PONG from service: %@
Added anonymous service %@
Unable to create anonymous service %@
Attempting to check in a duplicate service %@
Unknown query type! can not determine the required entitelment
[%@] clientUnifiedPurgeableSpace queryType: %d, info: %@
Connection is not entitled to query purgeable space!
[%@] clientUnifiedPurgeableSpace queryType: %d, returning: %@
Connection is not entitled to purge!
purge
Invalid purge request did not include CACHE_DELETE_VOLUME_KEY
cancel
invalid or missing token or uuid
Connection is not entitled to trigger a periodic purge!
periodic
invalid serviceRequestOperation dictionary, more that one key
serviceRequestOperation is an unsupported object: %@
ServiceCallback results: %@
Client is not entitled to perform the service request!
[%@] Client Perform Operation: %@
there is no entitlement required for key: %@
%d _clientSetState key: %@, state: %@
%d _clientSetState, key: %@ updated_state: %@
Unsupported type %@ for CACHE_DELETE_CACHE_ENABLED_KEY: %@
%d _clientSetState, key: %@, value: %s, state: %@
clientSetState ENTRY, calling process: %@, key: %@, state: %@
Unable to realpath "%s" : %s
%d clientSetState setting %@ -> %@
clientSetState Client (%@) is not entitled to set key: %@
%d _clientGetState calling process: %@, key: %@
key is not an NSString: %@
persistent_state is not a dictionary: %@
using default value: %@ for key: %@
%d _clientGetState EXIT calling process: %@, result: %@
%d deleted clientUpdatePurgeable with: %@
Parameter Error
Crashing On Purpose!
Crashing ( ASAN ) On Purpose!
main
CacheDelete Starting...
Failed to get timebase info
PERIODIC result: %{public}@
handle_vfs_xpc
notify_post failed: %s
poll_vfs_lowdisk
CacheDelete, open for business!
quotactl error: %s
RECEIVED SIGKILL
RECEIVED SIGTERM
RECEIVED SIGQUIT
*** CacheDelete SigInfo ***
* Pending Low-Disk Count: %@
* Pending Low-Disk Volumes: %@
* Operations = {
%lu: %@
* Services = {
%@ = %@
* Purgeable (Root Volume) = {
* CDDaemonPurgeableResultCache sharedPurgeableResultsCache = {
*** Posting Daily Stats ***
Unable to get persistPath to save analytics!
Failed to persist CacheDelete analytic data!
Did not load CacheDelete analytic data
No file to remove at %@
Failed to remove file at %@: %@
Requesting analytic data from daily service
Received response from daily service analytics data request
Failed to get system usage stats! %@
Requesting analytic data from app caches service
Received response from app caches service analytics data request
Received %@
Requesting analytic data from cache management service
Received response from cache management service analytics data request
Unknown low disk event: %@
_reportLowDiskFunctionalFailure key: %@
NSKeyedUnarchiver unarchivedObjectOfClass failed to unarchive recent purgeable results: %@
Exception (%@) while unarchiving recent purgeable results
result is not of class (or subclass) CacheDeleteRecentInfo: %@
unarchived version of %@ (%@) is incompatible with current version (%d)
Unable to make data from %@ : %@
Failed to create data from: %@
unable to write results to cache file: %@: %@
%d shouldUpdatePurgeable ENTRY, info: %@
%d shouldUpdatePurgeable
%d shouldUpdatePurgeable EXIT, result: %s
emitRecentInfo ENTRY, info: %@
emitRecentInfo shouldUpdatePurgeable
emitRecentInfo EXIT, result: %@
parameter error (volume). mInfo: %@
bad key in amounts dictionary: %@
bad value in amounts dictionary: %@
Updating cache for service: %@, volume: %@, amounts: %@
Updating service info amount: %@, serviceID: %@, volume: %@, urgency: %@ pushed: %s, timestamp: %f
keepUpToDate: no updateBlock.
Periodic Operation: Service %{public}@ is in flight, skipping
Periodic callback firing more than once for service %{public}@
timed out (%llu seconds) waiting for:
%{public}@
%d, CacheDeletePeriodicOperation _startOperation service errors:
Service:Error - %@
Failed to initialize purge stats' persistence path!
unable to write results to cache file. Data: %@, Path: %@, Error: %@
Purge stat reporter found stale stats
Failed to persist purge stats, deleting persistence file if it exists. Error : %@
Weird... no purge stats path to persist to.
Failed to read in purge stats - deleting persistence file. Error: %@, Data: %@, Loaded Stats: %@
Exception (%@) while loading purge stats.
And failed to remove purge stats persistence file. Unlink returned: %d
%s : sending of stats to CA seems to have failed (or is not enabled).
%s : %@
info is not a dictionary!
Client specified timeout: %@
Client specified no timeout. Using : %d
Volume became invalid: %{public}@
Failing to create operation: no valid volumes! (%{public}@)
CacheDeleteOperation unable to validate volume: %{public}@
unsupported type for CACHE_DELETE_SERVICES_KEY: %{public}@
filtering for user specified services: %{public}@
removing filtered services: %{public}@
User specified CACHE_DELETE_URGENCY: %{public}@
User specified CACHE_DELETE_URGENCY_LIMIT: %{public}@
Finished operation without firing completion!
processTestFailures: %@
processTestFailures key: %@, val: %@
processTestFailures parameter error, failures: %@
validateDictionaryForXPC Invalid dictionary (%@): %@
Failed to enumerate snapshots for volume %@: %s
Failed to enumerate shapshots for volume %@: %s
fs_snapshot_list failed: %s
CACHE_DELETE_AMOUNT is missing in info: %{public}@
CancelPurge complete (service=%{public}@)
purgeDoneSentinel mkdir failed for %s : %s
purgeDoneSentinel unable to open %s : %s
purgeDoneSentinel Created %s
purgeDoneSentinel Unable to fstat %@ : %s
purgeDoneSentinel ino: %llu
purgeDoneSentinel unlink'd %s : %s
%d sortedPurgeable [urgency: %d, volume: %{public}@]:
%@ : %@
%d batch block returned: %s
%d batch for loop done, proceed: %s
%d Calling block with %lu batch items
No volume name in info dictionary.
Unable to validate volume: %@
urgencyLimit: %d, info at start: %{public}@
mainVolume: %{public}@, fstype: %{public}@
beforePurgeEventID: %llu
unable to create sentinel file
statfs failed for "%{public}s" : %s
Created FSEventStream with: %@
unable to create fsEventStream: %s
VOLUMES: %@
Purge satisfied, skipping %@
fsPurge reports %llu purged (%llu total reported, %llu measured) of %llu needed on volume: %{public}@ at urgency: %d by purging volume: %@, ET: %f
fsPurge noting purge on %@ : %@
fsPurge satisfied request: %llu purged (%llu measured) of %llu needed on volume: %@, ET: %f
[Purge goal satisfied by fsPurge for %{public}@, skipping cleanup and services loop
[Purge VERY_LOWDISK]: asking snapshot holders for %llu bytes from %{public}@
[Purge goal satisfied for %{public}@, skipping services loop
%d : Timeout reached for (%@) - stopping purge urgency loop.
Purging %{public}@ at urgency = %d
%d calling batchServicesForVolume: "%@", atUrgency: %d, with services:
%d proceed: %s, batch:
%d proceed: %s, numPlayers: %lu
[Purge Start] aborting, (roundGoal <= 0): %llu, purge_amount_needed: %llu, amountPurged: %llu
[Purge Start] aborting, (_donation <= 0), roundGoal: %llu
[Purge Start](Urgency %d : Round %d) Volume = %{public}@, Goal = %llu, Donation = %llu, Remaining Services:
[Purge Main](Volume: %{public}@, Urgency %d : Round %d) Begin
[Purge Main](Volume: %{public}@, Urgency %d : Round %d) %{public}@ request %llu bytes
[Purge Result](Volume: %{public}@, Urgency %d : Round %d) %{public}@ purged (%llu / %llu) bytes : elapsed time %lfs
** %{public}@ will continue purging at urgency %d on volume: %{public}@
** %{public}@ is disqualified from purging at urgency %d on volume: %{public}@
[Purge Result(tardy!)](Volume: %{public}@, Urgency %d : Round %d) %{public}@ purged (%llu / %llu) bytes : elapsed time %lfs
Purge failed (volume %{public}@ possibly invalid)
[Purge Main](Volume: %{public}@, Urgency %d : Round %d) Waiting for end of round: %llu seconds
[Purge Main](Volume: %{public}@, Urgency %d : Round %d) Timed out waiting for: %{public}@
Timed out with no inFlight list for volume: %{public}@
[Purge Cleanup](Volume: %{public}@, Urgency %d : Round %d) Begin
[Purge Cleanup](Volume: %{public}@, Urgency %d : Round %d) End
%d Retry loop: %s, currentRoundService.count: %lu
%d batch returning %s currentRoundServices count: %lu
%d Batch loop: %s
[Purge End](Volume %{public}@, Urgency %d) finished after %d Rounds (%llu bytes left)
%d Volume loop: %s
%d Urgency Loop [%d] returning: %s
CacheDelete was unable to satisfy the purge request for volume: %{public}@
Purge Result: %{public}llu bytes on: %{public}@
[Purge OneShot](Volume: %{public}@, Urgency %d) Begin
[Purge Result (oneShot)] %{public}@ purged (%llu / %llu) bytes on volume: %{public}@ in %lf seconds
[Purge Result (oneShot, tardy!)] %{public}@ purged (%llu / %llu) bytes on volume: %{public}@ in %lf seconds
Purge oneShot failed (volume %{public}@ was likely invalid)
[Purge OneShot] (Volume: %{public}@, Urgency %d) Timed out waiting for: %{public}@
[Purge OneShot](Volume: %{public}@, Urgency %d) End
Parameter error: service: %{public}@, volume %{public}@
Purge callback firing more than once for service %{public}@ on volume: %{public}@
%{public}@ took %f seconds, purged %llu bytes on volume: %{public}@
fsEventStreamMonitor no semaphore in context: %p
fsEventStreamMonitor sentinel remove event, ID: %llu, fileID: %@, path: %@, mapped: %@
fsEventStreamMonitor: Unexpected fsgetpath error: %{public}s
fsEventStreamMonitor: fsgetpath() was successful (%zd: %s) when expected to fail for: %{public}@
%d PurgeableOperation _startOperation query path: %{public}@ for volume: %@, info: %{public}@
Invalid volume parameter, info: %{public}@
NOT using cached purgeable values for %{public}@
%d PurgeableOperation Calling process: %{public}@, refreshAll is %{public}s for volume: %{public}@, %lu servicesToQuery:
%d PurgeableOperation will query: %{public}@
%d self.urgency: %d, self.urgencyLimit: %d
Service %{public}@ is still in-flight!
%{public}@ took %f seconds for Calling process: %{public}@, on volume: %{public}@, returned: %{public}@
Purgeable callback firing more than once for service %{public}@
%{public}@ returned an invalid CACHE_DELETE_AMOUNT, using zero
%{public}@ returned null result
dispatch_group_wait timed out after %d seconds, %srefreshing all services. Volumes: %{public}@, services in flight:
dispatch_group_wait_timeout_leave, service inFlight: %{public}@
[%{public}@] no servicesToQuery. refreshAll: %s
<<<PurgeableOperation Result (%{public}@, query path: %@, u: %@, ET: %f):
%{public}@ : %{public}@%{public}@
PurgeableOperation Result>>> %{public}@ bytes on: "%{public}@". Calling process: %{public}@
%d %s ***** pruning volume: %@, service: %@, value: %@
bsdDisk: cdVolume of CDDaemonRecentVolumeInfo is not of class CacheDeleteDaemonVolume
thresholds: cdVolume of CDDaemonRecentVolumeInfo is not of class CacheDeleteDaemonVolume
reserve: cdVolume of CDDaemonRecentVolumeInfo is not of class CacheDeleteDaemonVolume
No Service ID! info dictionary: %@
%@ servicesProvided: %@
%@ : CACHE_DELETE_SERVICES value is not an array: %@
%@ doesPurge: %s
%@ is OPT_OUT_QUOTA_EVENTS service
%@ is DO_NOT_QUERY service
%@ desiredNotifications: %@
drainPurgeQueue %@ QOS: %u
dequeuePurge executing deferred purge for service %@ at urgency %d : %@
dequeuePurge %@ [%p] no purges queued
%@ servicePurgeable returned
Parameter error: info: %@, reply: %@
%@ [%p] queuing purge at urgency %d, info: %@
%@ [%p] dropping purge of urgency %d, amount %llu
%@ [%p] is enqueueing a purge of urgency %d amount %llu at index %lu
%@ [%p] is NOT inFlight, draining the purge queue: %@
%@ [%p] not purging, it has a pending purge (urgency=%d) enqueued already, skipping
ServiceCancelPurge failed: %@
ServiceNotify failed: %@
%@: obtainXPCConnection callback fired more than once for %@!
%@: failed to respond after %llu seconds, deleted is dirty for this reason.
Connecting to %@
%@: remoteObjectProxyWithErrorHandler error: %@
%@: Received an error after the request succeeded! error: %@
%@: Successful Request
%@: Received completion after we sent a callback! Success = %d
%@: obtainXPCConnection failed to get a connection: %@
%@: invalidate and connection is nil!
watchdog timer is nil, self: %p, timer: %p
Connection to %@ was invalidated.
CacheDeleteDaemonVolume volumeWithPath Unable to validate mount point for: %@
CacheDeleteDaemonVolume volumeWithPath: Unable to create a CacheDeleteDaemonVolume from %@
CacheDeleteDaemonVolume invalidateVolumesCache
beginExtensionRequestWithInputItems callback called multiple (%d) times!
BeginExtensionRequestWithInputItems returned after self went away (ID=%@)!
Unable to get xpc connection from app extension context for app extension service %@
Unable to get extension context for app extension service %@
hostExtensionContext for service %@ has no connection
Failed to create an XPC Connection to service %@: %s
Pinging heartbeat connection for service %@
Heartbeat established for service %@
Establishing heartbeat to service %@
Failed to create a heartbeat connection for service %@
Heartbeat lost for service %@
Heartbeat connection is dead for %@, unable to obtain XPC connection
Failed to create an XPC Connection to anonymous endpoint %@: %s
Unable to create an LSBundleRecord for %@ : %@
LSBundleRecord for %@ : (class: %@) %@
AppCache for %@ : (%@) %@
Unable to create AppCache for %@
Unable to decode cachesByVolume
cachesForInstalledApps result:
%@ : %@ : %@, urgency: %d
No application cache space to reap
sorted caches:
  %@
Deleted %llu files at urgency %d
statfs failed for %s : %s
Unable to create CDVolume from: %@
%{public}s: PURGEABLE callback, info: %{public}@, cdVol: %{public}@
%{public}s PURGEABLE Result: %{public}@
%{public}s: PURGE callback, cdVol: %{public}@
TestTelemetry: %{public}@
Purging Container Caches
testTelemetry: %{public}@
Unable to create cdVol from info: %{public}@
%{public}s PURGE result: [u:%d] %{public}@ : %{public}@
%{public}s: PERIODIC callback (a no-op for now)
%{public}s: PURGE CANCEL callback
_serviceNotify is unsupported for %{public}s
com.apple.cache_delete_app_container_caches Callback ENTRY, info: %{public}@
%d, cdVol: %{public}@, opInfo: %{public}@
operation info is not a dictionary: %@
unsupported, call _servicePurge directly
unsupported, call _servicePurgeable directly
unsupported, call _serviceCancelPurge directly
unsupported, call _servicePeriodic directly
%{public}s: ANALYTICS callback
Received Analytics Report Request!
Responding with %{public}@
%{public}s result: %{public}@
CacheDelete
CacheDeleteClientProtocol
CacheDeletePublicClientProtocol
CacheDeleteServiceProvider
CacheDeleteAnalytics
CDResult
CDPeriodicOperationResult
CDPurgeOperationResult
CDDaemonPurgeableResultCache
CDPurgeableResultCache
CacheDeletePeriodicOperation
CacheDeleteOperation
NSObject
PurgeStatsReporter
CacheDeleteAsyncTimeoutFlag
CDPurgeableOperationResult
CDPeriodicServiceRequestResult
CDPurgeServiceRequestResult
CDPurgeableServiceRequestResult
CacheDeleteSnapshotInfo
Snapshots
CacheDeletePurgeOperation
CDDaemonRecentInfo
CacheDeletePurgeableOperation
CDDaemonRecentVolumeInfo
CDServiceRequestResult
purgeOP
CDService
CacheDeleteServiceProtocol
CDXPCService
CacheDeleteDaemonVolume
CDAppExtensionService
Daemon
CDNamedXPCService
CDAnonymousXPCService
AppContainerCaches
NSSecureCoding
NSCoding
NSCopying
@16@0:8
v36@0:8@16i24@?28
v36@0:8@"NSDictionary"16i24@?<v@?@"CDRecentInfo">28
v48@0:8@16@24@32@?40
v32@0:8@16@?24
v24@0:8@16
v32@0:8@16@24
v32@0:8@16i24B28
v48@0:8@"NSString"16@"NSXPCListenerEndpoint"24@"NSDictionary"32@?<v@?@"NSDictionary"@"NSError">40
v32@0:8@"NSDictionary"16@?<v@?@"NSDictionary">24
v24@0:8@"NSDictionary"16
v32@0:8@"NSDictionary"16@"NSString"24
v32@0:8@"NSString"16@?<v@?@>24
v32@0:8@"NSString"16i24B28
@24@0:8@16
@"<CDService>"24@0:8@"NSString"16
v16@0:8
v40@0:8@16@24@32
{VolumeThresholdsAndGoals=QQQQ}24@0:8@16
@40@0:8@16@24@?32
B24@0:8@16
i20@0:8i16
@28@0:8@16i24
v28@0:8@16i24
v44@0:8@16@24I32@?36
@48@0:8@16@24@32@?40
v40@0:8I16I20@24@?32
v52@0:8@16@24@32@40B48
v36@0:8@16@24B32
@20@0:8i16
B32@0:8@16@24
v24@0:8@?16
B16@0:8
Q16@0:8
v24@0:8Q16
@"NSObject<OS_dispatch_queue>"
@"CacheDeleteListener"
@"NSObject<OS_dispatch_source>"
@"NSURL"
@"NSMutableDictionary"
@"NSUserDefaults"
@"NSMutableSet"
@"NSDictionary"
@"CDDaemonPurgeableResultCache"
@"CacheDeleteAnalytics"
@"NSPointerArray"
@32@0:8@16@24
d28@0:8d16i24
v28@0:8@16B24
d24@0:8Q16
d32@0:8Q16Q24
v32@0:8@16d24
r*20@0:8i16
r*24@0:8d16
@20@0:8B16
@"<CDPurgeableResultCache><CDDaemonPurgeableResultCache>"
@"<CacheDeleteServiceProvider>"
@"PurgeStatsReporter"
d16@0:8
v20@0:8B16
@"NSArray"
@"NSMutableArray"
@48@0:8@16Q24@32@40
i16@0:8
v20@0:8i16
@"NSString"
@24@0:8Q16
@32@0:8@16i24B28
@40@0:8@16i24B28@32
q24@0:8@16
@"NSDictionary"20@0:8i16
@"NSDictionary"32@0:8@"CacheDeleteVolume"16i24B28
@"NSDictionary"28@0:8@"CacheDeleteVolume"16i24
@"NSDictionary"40@0:8@"NSArray"16i24B28@"NSString"32
q24@0:8@"CacheDeleteVolume"16
v44@0:8@16@24@32i40
v40@0:8@"NSString"16@"CacheDeleteVolume"24@"NSDictionary"32
v44@0:8@"NSNumber"16@"NSString"24@"CacheDeleteVolume"32i40
v24@0:8@"NSString"16
v24@0:8@"CacheDeleteVolume"16
@"NSSet"32@0:8@"CacheDeleteVolume"16@"NSNumber"24
@"NSSet"16@0:8
v24@0:8@?<v@?B>16
v24@0:8@?<v@?@"NSDictionary">16
v36@0:8@16@24i32
@?16@0:8
@"CDDaemonRecentInfo"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"<CDPurgeableResultCache><CDDaemonPurgeableResultCache>"16@0:8
v24@0:8@"<CDPurgeableResultCache><CDDaemonPurgeableResultCache>"16
@"NSArray"16@0:8
v24@0:8@"NSArray"16
@40@0:8@16@24@32
@"CDPeriodicOperationResult"
v24@0:8d16
@32@0:8@16Q24
v52@0:8Q16i24@28@36@?44
@28@0:8B16^Q20
v48@0:8@16i24@28i36@?40
Q32@0:8@16i24B28
v76@0:8@16@24i32Q36@44Q52@60@68
v68@0:8@16@24i32Q36@44@52@?60
@"CDPurgeOperationResult"
@"CDPurgeableOperationResult"
@"NSCountedSet"
@24@0:8^{_NSZone=}16
@36@0:8i16@20@?28
v36@0:8i16@20@?28
v36@0:8i16@"NSDictionary"20@?<v@?@"NSDictionary">28
v24@0:8@?<v@?>16
v32@0:8@"NSDictionary"16@?<v@?>24
@"NSSet"
v32@0:8@?16@?24
@"NSXPCConnection"
@28@0:8@16B24
B32@0:8^Q16^Q24
S16@0:8
@"NSUUID"
@"NSExtension"
@"<NSCopying>"
@"NSXPCListenerEndpoint"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@40@0:8B16@20i28@32
Q52@0:8@16Q24i32B36B40@44
@"OperationState"
