@333333
?333333
?ffffff
?ffffff
?ffffff
?ffffff
v8@?0
true
false
wwan is %@; wifi is %@
interfacemanager-wifiautoassoc
interfacemanager-wow
inInitialGrowth
multiStateGrowth.%@
PCDefaultMinimumKeepAliveInterval
PCDefaultMaximumKeepAliveInterval
PCDefaultInitialKeepAliveInterval
PCInitialGrowthIncrement
PCRefinedGrowthIncrement
PCIncrementRandomVariance
PCBackoffMultiple
PCHighWatermarkThreshold
%@{keep alive interval = %g, state = %@, next recalibration date = %@}
PCActionGrowPushKeepAliveInterval
PCActionShrinkPushKeepAliveInterval
PCActionMaintainPushKeepAliveInterval
PCActionResetPushKeepAliveInterval
InitialGrowth
RefinedGrowth
SteadyState
Backoff
MinimumIntervalFallbackState
InitialShrink
RefinedShrink
Defaults
Moderate
Aggressive
PCPersistentTimer.m
%@ target and selector are required
persistentTimer.%@
%@ run loop mode cannot be nil
Cannot schedule invalidated %@
Cannot schedule on NULL queue %@
PCPersistentTimer-sharedBackgroundUpdateQueue
%@{fireDate = %@, early fire proportion = %g, disable system waking = %s, target = %@, selector = %@}
v32@?0@"NSNumber"8@"NSNumber"16^B24
PCPersistentTimerGuidanceNotification
keepAliveInterval
cacheDate
addressFamily
PCIntervalCacheChangedNotification
PCTimerFireEarlyToCoalesce
PCEvent
PCEventContext
PCConnectionManager.m
delegate must not be nil
serviceIdentifer must not be nil
PCPushIsConnectedToken
%@-%@
WWAN growth algorithm-%@
WiFi growth algorithm-%@
PCConnectionManager-noteQueue
v12@?0i8
PCForcedMinimumHBI
PCForcedMaximumHBI
PCAllowMinimumIntervalFallback
_CDClientContext
CoreDuetContext
_CDContextQueries
early
on time
Invalid action type: %i
Action %@ not appropriate for push style.
Action %@ not appropriate for %@. PrefsStyle=%@. _forceManualWhenRoaming = %@  onlyAllowedStyleSet=%@ onlyAllowedStyle=%@
enter reconnect mode
issue a shrink
timers already exist
delay timer already exists
lock
com.apple.persistentconnection.intervalcache.plist
push
poll
manual
PCActionSchedulePoll
PCActionScheduleConnectionRetry
PCActionScheduleConnectionRetryWithKeepAliveDelay
unknown action
PCEventPushKeepAlive
PCEventPoll
PCEventRetryConnection
PCEventPersistentInterfaceWentUp
PCEventPersistentInterfaceWentDown
PCEventConnectionStyleChanged
PCEventCancel
unknown event
IPv4
IPv6
Unknown
PCPreferencesDidChangeNotification
PCPreferencesDidChangeNotificationInternal
MobileMeOTASyncAccount
com.apple.persistentconnection
PCEnablePush
PCDefaultPollInterval
PCForceDemoMaxHBI
PCWiFiInterface
com.apple.persistentconnection.settings.lock
PCForceMinHBI
mobile
PCConnectionStyle _PCSettingsGetStyle(PCConnectionClassType, CFStringRef)
PCSettings.m
%s requires a non-NULL serviceIdentifier
PCStyle
PCServiceIdentifier-
PCForceManualWhenRoaming
PC-Prefs-Queue
com.apple.persistentconnection-nosettings
com.apple.persistentconnection-mcc
kern.boottime
PCPersistentIdentifiers.m
sysctlbyname() for "kern.boottime" failed: %s
com.apple.persistentconnection[%@,
%i,%@]
.%@.lock
%@ at path '%@' is being deallocated while locked
%@ at path '%@' is already locked
Unable to take %@ at path '%@': %s
%@ at path '%@' is not locked
(null)
%Y-%m-%d %X %z
(localtime_r failed)
PCSharedSerialQueue
PCInterfaceUsabilityMonitor.m
Must specify an interface identifier for PCInterfaceUsabilityMonitor
com.apple.PersistentConnection.PCInterfaceUsabilityMonitor-SCDynamicStore
v16@?0@"NSObject<OS_nw_path>"8
<none>
satisfied
unsatisfied
v16@?0@"<PCInterfaceUsabilityMonitorDelegate>"8
unknown
poor
good
NonCellular
WWAN
PCNonCellularUsabilityMonitor-ivarqueue
PCNonCellularUsabilityMonitor-monitordelegatequeue
PCWWANUsabilityMonitor-ivarqueue
PCWWANUsabilityMonitor-monitordelegatequeue
com.apple.powerlog.BasebandHasCDRXCapability
PCInterfaceMonitor-NonCellular
PCInterfaceMonitor-WWAN
PushSettings
usabilityMonitor
wakeManager
timer
interfaceManager
InternalBuild
Logs/PersistentConnection
Logs/CrashReporter/PersistentConnection
Library
com.apple.PersistentConnection
PCSimpleTimer.m
Cannot schedule on runloop when already scheduled on queue %@
Cannot schedule on queue when already scheduled on runloop %@
PCSimpleTimer-timerQ
PCSimpleTimer-SignificantTimeChangeQueue
SignificantTimeChangeNotification
%@{fireDate = %@, disable system waking = %s, target = %@, selector = %@}
kern.waketime
PCSimpleTimer-IOPowerManagement
PCSimpleTimer-powermonitoringq
%{public}@: Interface manager: Clearing _inCallWWANOverrideTimer: %{public}@
%{public}@ _updateWWANInterfaceUpState wasUp %{public}@ isUp %{public}@ wantsInterfaceAssertion %{public}@ avoidWWANOnCall %{public}@
Interface manager: isWWANInHomeCountry status changed to %s
cutWiFiManagerDeviceAttached called: %{public}@
Interface manager: clearing packet context assertion
Using cached keep alive interval of %g seconds inInitialGrowth? %{public}@ from [%{public}@]
%@: triggered signaling avoidance {interval: %g, adjustedInterval: %g, _signalAvoidanceRange.start: %g, _signalAvoidanceRange.duration: %g, roundUpRatio: %g}
%{public}@: setting current interval to %g seconds
%{public}@: setting lastSuccessfulKeepAliveInterval to %g seconds
%@ minimumIntervalFallbackEnabled changed to %@
%{public}@: useIntervalIfImprovement %f   lastKeepAliveInterval: %f  currentKeepAliveInterval: %f
%{public}@: adjustGrowthAlgorithmMode. {lastMode: %@, currentMode: %@}
%{public}@: resetAlgorithmToInterval: %g state: %{public}@
%{public}@: received action %{public}@ while in stage %{public}@
%{public}@: leaving the initial growth stage for refined growth
%{public}@: leaving the steady state and trying to grow again
%{public}@: using double the current interval for the steady state timer interval since we are significantly below the high watermark of %g seconds
%{public}@: set the steady state expiration date to %{public}@
%@ _leaveMinimumIntervalFallbackStateDate is nil. Leave minimumIntervalFallbackState. Changing maximum keep alive interval back to %f
%@ Unexpected _leaveMinimumIntervalFallbackStateDate %@ in MinimumIntervalFallbackState, changing to %@
%@ Leave minimumIntervalFallbackState. Changing maximum keep alive interval back to %f
%@ receive shrink right after previous MinimumIntervalFallbackState ends, extend leaveMinimumIntervalFallbackStateDate to %@
%{public}@: surpassed where the previous initial growth stopped at %g; reverting to initial growth.
%{public}@: using a steady state timeout of %g for current interval %g
%{public}@: %0.2f
%{public}@ created %{public}@
Invalidating timer %{public}@
%{public}@ calculating _earlyFireDate. powerStateDetectionSupported = %{public}@ = (detectionSupported(%@) && (wwanIsUp(%{public}@) || ! internetReachable(%{public}@)))
Last system wake date (%{public}@) was longer than half of the timer duration, so setting minimum fire date to fire date.
%{public}@ Device is plugged in, overriding earlyFireProportion to be 1.0
%{public}@ device is not plugged in.
Ignore early fire proportion. {earlyFireConstantInterval: %f}
Forcing timer alignment to fire date [%{public}@]
%{public}@ Calculated minimum fire date [%{public}@] (%g%%) with fire date [%{public}@], start date [%{public}@], minimum early fire proportion %g, power state detection supported: %{public}s, in high power state: %{public}s, early fire constant interval %f
PersistentTimer %{public}@ has fired
updating timer guidance to %{public}@
Creating PCManager %@ with identifier %@ and interfaceIdentifier %ld
%@ carrier bundle changed
%@ Changing duetIdentifier from %@ to %@
_loadPreferencesGeneratingEvent
%@ Loading forceManualWhenRoaming: accountSetting %@  globalSetting %@
Loaded preferences. Style is %@ and default poll interval is %g minutes.
Forcing manual when roaming.
Carrier bundle override for minimum HBI set. Setting minimum keep alive interval to %g seconds.
Carrier bundle override for maximum HBI set. Setting maximum keep alive interval to %g seconds.
Operator bundle set PCAllowMinimumIntervalFallback to %@
%@ set. Setting maximum keep alive interval to %g seconds for demo mode.
%@ set. Setting minimum keep alive interval to %g seconds for demo mode.
%@ Query duet context for device condition, {GoodCondition:%{public}@, thermalPressureLevel:%{public}@, wifiConnectionQuality:%{public}@, pluggedIn:%{public}@}
%@ Asked to get growth algorithm with invalid interface %ld
Resuming push keep alive timer in normal mode with action %@
Last timer interruption was %s: [%@]. Expected fire time was [%@]. {lastKeepAliveWasUntracked: %@}
%@: lastKeepAliveWasEarly - Examining sameAlgorithm %@ timeKeepAliveWasScheduled %f, onTimeKeepAliveTime: %f, lastStopTime %f
%@: This grow action is early but we're past the interval our previous growth was based on. Regrowing based on this interval %f.
%@ Last keep alive was early {forceGrow: %s, action: %@}
Resuming poll keep alive timer in normal mode with action %@
Resuming manual keep alive timer in normal mode with action %@
Choosing not to resume keep alive in reconnect mode since all interfaces are disabled. Action %@
Choosing not to resume keep alive in reconnect mode since interface is networking power expensive to use. Action %@
Resuming keep alive in reconnect mode with action %@
logKeepAlive {identifier: %@, currentDate: %@, keepAliveInterval: %i}
PCConnectionManager was stopped by client
Setting minimum keep alive interval to %g
%@ Setting minimum keep alive interval for %@ to %g
Setting maximum keep alive interval to %g
%@ Asked to set maximum keep alive interval on invalid interface %ld
%@ Setting maximum keep alive interval for %lu to %g
%@ Setting server stats max keep alive interval for %@ to %g
%@ Setting server stats min keep alive interval for %@ to %g
%@ Setting server stats expected keep alive interval for %@ to %g
Setting keep alive grace period to %g
%@ Setting usingServerStatsAggressively for %@ to %@
Setting NonCellular early fire constant interval to %g
Push is connected? %@  networkIsHistoricallyUsable? %@  isBadLQ? %@ -- choosing pollInterval = MAX(%g, %g)
Setting polling interval override to %g
Cacnceling polling interval override
Advising client to not enter reconnect mode since the network just became reachable at %@
Advising client to enter reconnect mode in response to a connection failure since currently in reconnect mode
Advising client to %s in response to a connection failure after elapsed time from start %g seconds
%@: enableNonCellularConnections changed to %@
%@ - early fire has been manually disabled for this timer!
%@ - setting early fire constant interval to %f!
Trying to push no persistent interface exists and the poll interval is 'manual', so disabling waking to conserve power
%@ _adjustPollTimerIfNecessary  rightStyle %@  isRunning %@  isInReconnectMode %@   intervalTimer %@  firingIsImminent %@ - should Adjust? %@
%@ Unable to setup a poll timer with {pollingInterval: %{public}f}, start when on power
%@ adjust polling interval {pollingInterval: %f, adjustedPollingInterval: %f, lastElapsedInterval: %f}.
%@ firing immediately {nextPollInterval:%f}.
%@ scheduling next poll - isAdjustment %@. PushDate %@ is not valid - timeIntervalSinceNow %f. Last scheduled fire date %@. TimeDiff = %f, pollingInterval %f
%@ scheduling the next poll to align with the next push keepAlive date (%@). isAdjustment %@  isLastTimeIntervalValid? %@, lastResumeTime %@ (%f), lastScheduledIntervalTime (%@) %f, timeDiff %f. Should fire immediately? %@
%@ nextPollDate timeIntervalSinceNow %f  pollingInterval %f  earliestAllowableFire %@
%@ nextPollDate whittled down by a polling interval to %@, %f
%@ using nextPollInterval = %f.
All network interfaces are disabled, so not scheduling any wakes in polling mode
All network interfaces are disabled, so not scheduling any wakes in reconnect mode
Experienced recent dropped connection. Using 30 minute wake interval
Network interfaces reporting BAD LQM. Altering timer interval to 5 minutes
Creating reconnect timers for iteration %i with keep alive interval %.4g and wake interval %.4g
%@ _intervalTimer = %@
%@ _reconnectWakeTimer = %@
_intervalTimer was already invalidated, no need to perform callback
%@ (%@) does not have budget to perform callout, bailing and starting next timer interval.
Timer fired. Delay is 0 so scheduling notification immediately. isWWANInterfaceUp %@, isWoWSupported %@
Timer fired. Delaying notification %g seconds. Last system wake: %@
Returned from callout
Calling out with reason %@ to delegate %@
Persistent interface link quality changed, firing interval timer: %@
Persistent interface went up while in reconnect mode. Firing reconnect timer.
%@ interfaceManagerInternetReachabilityChanged: %@ isRunning %@ delayTimer %@ wasReachable %@ isReachable %@ currentStyleIsPush? %@
Network went reachable while in reconnect mode. Firing reconnect timer.
Unable to write cache dictionary: %@
Unable to create directory %@ {error:%{public}@}
Request to schedule wake %d date %{public}@ leeway %g service identifier %{public}@ unique identifier %{public}@
%{public}@ - _unschedulePathEvaluatorOnIvarQueue
%{public}@ InterfaceUsabilityMonitor [%{public}@]: current interface changed from %s (%u) to %s (%u)
%{public}@ InterfaceUsabilityMonitor [%{public}@]: current delegate interface changed from %s (%u) to %s (%u)
%{public}@ InterfaceUsabilityMonitor [%{public}@]: path changed from %s to %s (%s)
%{public}@ Interface Manager: %{public}@(%{public}@) LinkQuality changed from %{public}@ to %{public}@ (%d)
%{public}@ _dynamicStoreCallback - processing changedKey %{public}@ linkQualityInfo %{public}@.
Interface manager: failed to create SCDynamicStore object
Interface manager: SCDynamicStoreSetDispatchQueue failed
%{public}@ Interface manager: creating monitor for interface: %{public}@ LinkQuality key: %{public}@
%{public}@ NonCellularUsabilityMonitor is in demo override mode! (interface name %{public}@)
%{public}@ NonCellularUsabilityMonitor - LQ changed from %d to %d
kPCWWANPowerlogCDRXNotification - state = %llu
%{public}@ _adjustInterfaceNameForWWANContextID contextID %ld  interfaceName %{public}@
Trying to copy carrier bundle value but we don't have a valid CTXPCServiceSubscriptionContext yet
Failed to copy carrier bundle value. {key: %@, error: %@}
operatorBundleChange - context %@
currentDataSimChanged - context %@
%{public}@ updateFireTime from %{public}@ + %g to %{public}@ + %g, trigger from %{public}@ to %{public}@
Started simple timer %{public}@ with fire date [%{public}@]
%{public}@ created preventSleepTimer %{public}@ and fireTimer %{public}@ on queue %{public}@
Invalidating simple timer %{public}@
Not canceling system wake for [%{public}@], which is in the past
Canceling system wake for simpletimer [%{public}@]
Suspended timer for imminent system sleep
Firing simple timer that was scheduled to fire at [%{public}@] since time has moved backwards by at least %g seconds
%{public}@ Existing wake at %{public}@ re-scheduling to %{public}@ with leeway of %g
%{public}@ Canceling system wake for simpletimer [%{public}@]
SimpleTimer %{public}@ has fired
PCSimpleTimer - enabling power monitoring
Enabling power monitoring for %{public}@ - %lu timers
System is waking: kIOMessageSystemWillPowerOn
System will not sleep: kIOMessageSystemWillNotSleep
System woke: kIOMessageSystemHasPoweredOn
System can sleep query received: kIOMessageCanSystemSleep
System will sleep: kIOMessageSystemWillSleep
Disabling power monitoring for %{public}@ - %lu timers
PCSimpleTimer - no timers left, disabling power monitoring
%{public}@ initialized with target %{public}@ selector %{public}s timerSource %{public}@
%{public}@ in call back event handler
%{public}@ dealloced
%{public}@ performing call back
%{public}@ performed call back on target %@ selector %s
%{public}@ start with target %{public}@ selector %{public}s firetime %llu timerSource %{public}@
%{public}@ setFireDate %{public}@ and start with target %{public}@ selector %{public}s fireTime %llu deltaNanosec %{public}@ timerSource %{public}@
%{public}@ tried to setFireDate %{public}@ but the timer is not valid
%{public}@ is invalidated 
Callstack %{public}@
PCDelegateInfo
PCPersistentInterfaceManager
CoreTelephonyClientDataDelegate
NSObject
PCInterfaceMonitorDelegate
PCMultiStageGrowthAlgorithm
PCGrowthAlgorithm
PCPersistentTimer
CUTPowerMonitorDelegate
PCKeepAliveState
PCConnectionManager
PCCarrierBundleHelperDelegate
PCSystemWakeManager
PCScheduleSystemWakeOperation
PCCancelAllProcessWakesOperation
PCPersistentIdentifiers
PCDistributedLock
NSLocking
PCInterfaceUsabilityMonitor
PCInterfaceUsabilityMonitorProtocol
PCInterfaceMonitorProtocol
PCNonCellularUsabilityMonitor
PCInterfaceUsabilityMonitorDelegate
PCWWANUsabilityMonitor
PCInterfaceMonitor
PCCarrierBundleHelper
CoreTelephonyClientCarrierBundleDelegate
PCLog
PCLogging
PCSimpleTimer
PCDispatchTimer
TB,R,N,V_hasWWANStatusIndicator
T#,R
Td,N,V_maximumKeepAliveInterval
T@"<PCInterfaceUsabilityMonitorDelegate>",N
_bundle
T@"NSDictionary",C,N,V_cachedPushSettings
_earlyFireDelta
T@"NSObject<OS_os_log>",R
_fireTimerFired
T@"NSString",R,&,N
_lastResumeTime
T@"NSString",R,N
_minimumIntervalFallbackEnabled
TB,N
_pathParameters
TB,N,V_alwaysWantsInterfaceChangeCallbacks
_stringForMode:
TB,N,V_isServerOriginatedKeepAlive
_target
TB,N,V_powerOptimizationsForExpensiveNetworkingDisabled
_validateActionForCurrentStyle:
TB,R
containsObject:
TC,N,V_state
initWithFormat:
TQ,R,N
internetConnectionAvailability:
T^{__CFString=},R,N
isNetworkingPowerExpensiveToUse
Td,N
isValid
Td,N,V_keepAliveGracePeriod
lastSuccessfulKeepAliveInterval
Td,N,V_minimumEarlyFireProportion
pollingInterval
Td,N,V_nonCellularEarlyFireConstantInterval
removeDelegate:
Td,N,V_serverStatsMaxKeepAliveInterval
serverStatsMinKeepAliveInterval
Td,R,N
setMaxConcurrentOperationCount:
Ti,N
setUserVisible:
Ti,R,N
stringByAppendingPathExtension:
Ti,R,N,V_growthStage
tryLock
.cxx_destruct
TC,N,V_subState
T@"<PCConnectionManagerDelegate>",W,N
Td,N,V_minimumKeepAliveInterval
T@"NSDate",&,N
_duetIdentifier
T@"NSDictionary",R,C,N
T@"NSString",C,N
_isPowerStateDetectionSupported
T@"NSString",R,C
_lastUpdateTime
T@"PCKeepAliveState",R,N
_offTransitions
TB,N,GisUserVisible
_previousAction
TB,N,V_disableSystemWaking
_takePowerAssertionWithTimeout:
TB,N,V_minimumIntervalFallbackEnabled
_trackUsability
TB,N,V_usingServerStatsAggressively
areAllNetworkInterfacesDisabled
TB,R,N
dealloc
TQ,R
interface5GMode
TQ,R,N,V_countOfGrowthActions
internetConnectionStateChanged:
isProxy
Td,N,V_earlyFireConstantInterval
keyPathForWiFiConnectionQuality
Td,N,V_lastSuccessfulKeepAliveInterval
numberWithBool:
Td,N,V_minimumIntervalFallbackStateTimeout
release
Td,N,V_serverStatsExpectedKeepAliveInterval
serverStatsMaxKeepAliveInterval
Td,N,V_serverStatsMinKeepAliveInterval
setIsServerOriginatedKeepAlive:
Td,R,N,V_currentKeepAliveInterval
setThresholdOffTransitionCount:
Ti,N,V_previousAction
stringByAppendingPathComponent:
Ti,R,N,V_currentRAT
tetheringStatus:connectionType:
Ti,R,N,V_lastProcessedAction
Tq,N,V_interfaceIdentifier
Tq,R,N
T{_PCTimeRange=dd},N
T{_PCTimeRange=dd},N,V_signalAvoidanceRange
UTF8String
WWANInterfaceName
_WWANInterfaceName
_WiFiAutoAssociationDelegates
_WiFiAutoAssociationDisableTimer
_acceptableDelay
_addMonitor
_adjustGrowthAlgorithmMode
_adjustInterfaceAssertions
_adjustInterfaceNameForWWANContextID:interfaceName:forContext:
_adjustMinimumIntervalFallback
_adjustPollTimerIfNecessary
_adjustWakeOnWiFi
_adjustWakeOnWiFiLocked
_adjustWiFiAutoAssociation
_adjustWiFiAutoAssociationLocked
_algorithmName
_alwaysWantsInterfaceChangeCallbacks
_backgroundUpdateQueue
_cachedPushSettings
_callDelegateOnIvarQueueWithBlock:
_callDelegateWithBlock:
_callDelegateWithEventAndContext:
_callTarget
_calloutWithEvent:context:
_cleanupTimer
_clearInCallWWANOverrideTimerLocked
_clearTimers
_clearTimersReleasingPowerAssertion:
_connectionClass
_countOfGrowthActions
_createCTConnection
_createLinkQualityMonitor:
_createPathEvaluator
_ctClient
_ctConnectionAttempt
_ctIsWWANInHomeCountry
_ctServerConnection
_ctServerQueue
_currentAddressFamily
_currentDataBearerSoMask
_currentDataContext
_currentDataSimContext
_currentGrowthAlgorithm
_currentGrowthStage
_currentGuidanceTime
_currentKeepAliveAlgorithmMode
_currentKeepAliveInterval
_currentRAT
_defaultPollingInterval
_delayTimer
_delayTimerFired
_delegate
_delegateMap
_delegateQueue
_delegateReference
_delegateRunLoop
_delegates
_delegatesAndQueues
_demoOverrideInterface
_deregisterForDeviceConditionsNotifications
_deviceUnderGoodCondition
_disableEarlyFire
_disableSystemWaking
_duetContextRegistration
_dynamicStore
_dynamicStoreCallback:
_dynamicStoreCallbackForKeys:
_earlyFireConstantInterval
_earlyFireTime
_enableNonCellularConnections
_evaluator
_fallbackToLastSuccessfulKeepAliveInterval
_fireDate
_fireTime
_fireTimer
_flushStaleTransitions
_forceManualWhenRoaming
_forwardConfigurationOnIvarQueue
_getCachedWWANKeepAliveIntervalForAddressFamily:
_getTimerMode
_getTimerRunLoop
_growthAlgorithmOnInterface:
_growthStage
_guidancePriority
_handleDeviceConditionChangeCallback
_hasBudgetRemaining
_hasStarted
_hasWWANStatusIndicator
_highWatermark
_inCallWWANOverrideTimer
_inCallWWANOverrideTimerFired
_inCallback
_initWithAbsoluteTime:serviceIdentifier:guidancePriority:target:selector:userInfo:triggerOnGMTChange:
_initWithConnectionClass:interfaceIdentifier:guidancePriority:delegate:delegateQueue:serviceIdentifier:
_initialGrowthStageHighWatermark
_initialGrowthStageLastAttempt
_interfaceAssertion
_interfaceIdentifier
_interfaceMonitor
_interfaceName
_internal
_intervalTimer
_intervalTimerFired
_invalidateAllowAsync:
_isCachedKeepAliveIntervalStillValid:date:
_isCurrentDataSimContextOnIvarQueue:
_isInCall
_isInHighPowerState
_isInReconnectMode
_isInterfaceHistoricallyUsable
_isInterfaceUsable
_isInternetReachableLocked
_isPathSatisfied
_isPushConnected
_isReachable
_isRunning
_isServerOriginatedKeepAlive
_isValid
_isWWANInHomeCountryLocked
_isWWANInterfaceActivationPermitted
_isWWANInterfaceDataActive
_isWWANInterfaceInProlongedHighPowerState
_isWWANInterfaceSuspended
_isWWANInterfaceUp
_isWakeOnWiFiEnabled
_isWakeOnWiFiSupported
_isWiFiUsable
_ivarQueue
_keepAliveCachePath
_keepAliveGracePeriod
_lastActivationTime
_lastDelegateInterface
_lastElapsedInterval
_lastInterface
_lastKeepAliveAlgorithmMode
_lastKeepAliveInterval
_lastProcessedAction
_lastReachableTime
_lastReconnectTime
_lastScheduledGrowthAlgorithm
_lastScheduledIntervalTime
_lastStartTime
_lastStopTime
_lastSuccessfulKeepAliveInterval
_leaveMinimumIntervalFallbackStateDate
_leaveSteadyStateDate
_linkQuality
_linkQualityOnIvarQueue
_loadDefaultValue:forKey:
_loadDefaults
_loadPreferencesGeneratingEvent:
_lock
_lockBlocking:
_logObject
_lqKey
_mainThreadCTConnectionAttempt
_maximumKeepAliveInterval
_minimumEarlyFireProportion
_minimumIntervalFallbackStateTimeout
_minimumKeepAliveInterval
_monitor
_monitorDelegateQueue
_nextForcedAlignmentAbsoluteTime
_nonCellularEarlyFireConstantInterval
_nonCellularMonitor
_onTimeKeepAliveTime
_onlyAllowedStyle
_onlyAllowedStyleSet
_operatorMinimumIntervalFallbackAllowed
_path
_pathUpdate:
_pauseTimers
_performBlockOnQueue:
_pollingIntervalOverride
_pollingIntervalOverrideSet
_powerAssertionID
_powerNotificationSleepIsImminent
_powerNotificationSleepIsNotImminent
_powerOptimizationsForExpensiveNetworkingDisabled
_powerlogCDRXToken
_preferencesChanged
_prefsChangedToken
_prefsStyle
_preventSleepFired
_preventSleepTimer
_previousLinkQuality
_previousMaximumKeepAliveInterval
_processBackoffAction:
_processCarrierBundleChange:
_processDeviceConditionChanges
_processInitialGrowthAction:
_processInitialShrinkAction:
_processLinkQualityUpdateWithChangedKey:updatedLinkQuality:
_processMinimumIntervalFallbackStateAction:
_processNamePrefix
_processRefinedGrowthAction:
_processRefinedShrinkAction:
_processSteadyStateAction:
_pushIsConnectedToken
_queue
_reconnectIteration
_reconnectWakeTimer
_reconnectWithKeepAliveDelay
_recursiveLock
_registerForDeviceConditionsNotifications
_releasePowerAssertion
_resetAlgorithmToInterval:
_resetAlgorithmToInterval:stage:
_resolveStateWithAction:
_saveWWANKeepAliveInterval
_scQueue
_scheduleCalloutsForSelector:
_scheduleOrCancel
_scheduleTimer
_scheduledWakeDate
_selector
_serverStatsExpectedKeepAliveInterval
_serverStatsMaxKeepAliveInterval
_serverStatsMinKeepAliveInterval
_serviceIdentifier
_setCurrentKeepAliveInterval:varianceMode:
_setCurrentKeepAliveInterval:varianceMode:allowRoundUp:
_setMaximumKeepAliveInterval:onInterface:
_setMinimumKeepAliveInterval:onInterface:
_setPowerMonitoringEnabled:
_setSignificantTimeChangeMonitoringEnabled:
_setTimerGuidance:
_setupKeepAliveForReconnect
_setupTimerForPollForAdjustment:
_setupTimerForPushWithKeepAliveInterval:
_setupWWANMonitor
_signalAvoidanceRange
_significantTimeChange
_significantTimeChangeToken
_simpleTimer
_sleepIsImminent
_startTime
_state
_steadyStateTimeout
_stringForAction:
_stringForAddressFamily:
_stringForEvent:
_stringForStage:
_stringForStyle:
_subState
_thresholdOffTransitionCount
_timeChangeSource
_timerGuidance
_timerGuidanceToken
_timerMode
_timerRunLoop
_timerSource
_trackedTimeInterval
_triggerOnGMTChange
_unqiueIdentifier
_unscheduleLinkQualityMonitor
_unschedulePathEvaluator
_updateCTIsWWANInHomeCountry:isWWANInterfaceDataActive:
_updateCurrentDataSimContext:
_updateOffTransitionsForLinkQualityChange
_updatePathParameters
_updateTime:forGuidancePriority:
_updateTimers
_updateWWANInterfaceAssertions
_updateWWANInterfaceAssertionsLocked
_updateWWANInterfaceUpState
_updateWWANInterfaceUpStateLocked
_userInfo
_userVisible
_usingServerStatsAggressively
_wakeDate
_wakeOnWiFiDelegates
_wakeOnWiFiDisableTimer
_wantsWWANInterfaceAssertion
_wantsWakeOnWiFiEnabled
_wifiGrowthAlgorithm
_wifiIsPoorLinkQuality
_wwanContextID
_wwanGrowthAlgorithm
_wwanIsPoorLinkQuality
addDelegate:
addDelegate:queue:
addObject:
addOperation:
allowBindingToWWAN
alwaysWantsInterfaceChangeCallbacks
anbrActivationState:enabled:
anbrBitrateRecommendation:bitrate:direction:
arrayWithCapacity:
arrayWithObject:
arrayWithObjects:
autorelease
blockOperationWithBlock:
boolValue
boolValueFromPushBundleForKey:error:
cStringUsingEncoding:
cacheInfo
cachedPushSettings
callStackSymbols
canBeConvertedToEncoding:
cancelPerformSelector:target:argument:
cancelPollingIntervalOverride
cancelPreviousPerformRequestsWithTarget:selector:object:
carrierBundleChange:
carrierBundleDidChange
class
conformsToProtocol:
connectionActivationError:connection:error:
connectionAvailability:availableConnections:
connectionManager:handleEvent:
connectionManager:handleEvent:context:
connectionStateChanged:connection:dataConnectionStatusInfo:
copy
copyCarrierBundleValue:key:bundleType:error:
copyValueForKey:error:
copyValueFromPushBundleForKey:error:
count
countByEnumeratingWithState:objects:count:
countOfGrowthActions
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
currentAddressFamily
currentDataServiceDescriptorChanged:
currentDataSimChanged:
currentGrowthStage
currentHandler
currentInterfaceName
currentKeepAliveInterval
currentKeepAliveState
currentLinkQualityString
currentMachTimeInterval
currentRAT
currentRunLoop
currentStyle
cutPowerMonitorBatteryConnectedStateDidChange:
cutPowerMonitorSystemHasPoweredOn:
cutWiFiManagerDeviceAttached:
dataRoamingSettingsChanged:status:
dataSettingsChanged:
dataStatus:dataStatusInfo:
dataUsingEncoding:allowLossyConversion:
dataWithPropertyList:format:options:error:
date
dateByAddingTimeInterval:
dateWithTimeIntervalSince1970:
dateWithTimeIntervalSinceNow:
dateWithTimeIntervalSinceReferenceDate:
debugDescription
defaultBundleChange
defaultManager
delegate
description
dictionary
dictionaryWithObjectsAndKeys:
disableEarlyFire
disableSystemWaking
distantFuture
distantPast
doesWWANInterfaceExist
doubleValue
duetIdentifier
earlyFireConstantInterval
enableWakeOnWiFi:forDelegate:
enableWiFiAutoAssociation:forDelegate:
enumerateKeysAndObjectsUsingBlock:
exceptionWithName:reason:userInfo:
fileExistsAtPath:
fileSystemRepresentation
fireDate
fireTime
firingIsImminent
getCFRunLoop
growthAlgorithmClass
growthStage
handleFailureInFunction:file:lineNumber:description:
handleFailureInMethod:object:file:lineNumber:description:
handleMachMessage:
hasPrefix:
hasWWANStatusIndicator
hash
helper
hostUniqueIdentifier
init
initForScheduledWake:wakeDate:acceptableDelay:userVisible:serviceIdentifier:uniqueIdentifier:
initWithAbsoluteTime:serviceIdentifier:target:selector:userInfo:triggerOnGMTChange:
initWithCacheInfo:loggingIdentifier:algorithmName:
initWithConnectionClass:delegate:delegateQueue:serviceIdentifier:
initWithConnectionClass:delegate:serviceIdentifier:
initWithConnectionClass:interfaceIdentifier:guidancePriority:delegate:serviceIdentifier:
initWithContentsOfFile:
initWithData:encoding:
initWithDelegateQueue:
initWithFireDate:serviceIdentifier:target:selector:userInfo:
initWithInterfaceIdentifier:
initWithInterfaceIdentifier:delegateQueue:
initWithKeepAliveState:subState:
initWithKeyOptions:valueOptions:capacity:
initWithName:
initWithObjects:
initWithObjectsAndKeys:
initWithOptions:capacity:
initWithPath:
initWithQueue:target:selector:fireTime:
initWithTimeInterval:serviceIdentifier:guidancePriority:target:selector:userInfo:
initWithTimeInterval:serviceIdentifier:target:selector:userInfo:
initWithTimeIntervalSinceNow:
insertObject:atIndex:
intValue
integerValue
interfaceIdentifier
interfaceLinkQualityChanged:previousLinkQuality:
interfaceManager
interfaceManagerInHomeCountryStatusChanged:
interfaceManagerInternetReachabilityChanged:
interfaceManagerWWANInterfaceChangedPowerState:
interfaceManagerWWANInterfaceStatusChanged:
interfaceRadioHotnessChanged:
interfaceReachabilityChanged:
internetConnectionActivationError:
internetDataStatus:
internetDataStatusBasic:
intervalCacheDictionaries
invalidate
isBadLinkQuality
isBadLinkQuality:
isEqual:
isEqualToDate:
isEqualToString:
isExternalPowerConnected
isInCall
isInterfaceHistoricallyUsable
isInterfaceUsable
isInternetReachable
isInternetReachableViaWiFi
isKindOfClass:
isLTEWithCDRX
isMemberOfClass:
isPoorLinkQuality
isPoorLinkQuality:
isPowerStateDetectionSupported
isRadioHot
isRunning
isServerOriginatedKeepAlive
isUserVisible
isWWANBetterThanWiFi
isWWANInHomeCountry
isWWANInterfaceActivationPermitted
isWWANInterfaceInProlongedHighPowerState
isWWANInterfaceSuspended
isWWANInterfaceUp
isWakeOnWiFiSupported
isWoWSupported
keepAliveGracePeriod
keyPathForPluginStatus
keyPathForThermalPressureLevel
lastProcessedAction
lastSystemWakeDate
length
linkQuality
linkQualityString
lock
logFileDirectory
logWithCategory:
main
mainRunLoop
maximumKeepAliveInterval
minimumEarlyFireProportion
minimumIntervalFallbackEnabled
minimumIntervalFallbackStateTimeout
minimumKeepAliveInterval
mutableCopy
networkCode
nonCellularEarlyFireConstantInterval
numberWithDouble:
numberWithInt:
numberWithUnsignedInteger:
object
objectAtIndex:
objectForKey:
objectForKeyedSubscript:
operatorBundleChange:
operatorMinimumIntervalFallbackAllowed
pathExtension
performSelector:
performSelector:target:argument:order:modes:
performSelector:withObject:
performSelector:withObject:afterDelay:inModes:
performSelector:withObject:withObject:
persistentInterfaceManager
pidFromMatchingIdentifer:
powerOptimizationsForExpensiveNetworkingDisabled
preferredDataServiceDescriptorChanged:
preferredDataSimChanged:
previousAction
processInfo
processName
processNameAndPidIdentifier
processNamePidAndStringIdentifier:
processNextAction:
queue
raise:format:
rangeOfString:options:
regDataModeChanged:dataMode:
removeObject:
removeObjectForKey:
respondsToSelector:
resumeManagerWithAction:
resumeManagerWithAction:forceGrow:
retain
retainCount
scheduleInQueue:
scheduleInRunLoop:
scheduleInRunLoop:inMode:
scheduleWake:wakeDate:acceptableDelay:userVisible:serviceIdentifier:uniqueIdentifier:
self
serverStatsExpectedKeepAliveInterval
serviceDisconnection:status:
servingNetworkChanged:
setAlwaysWantsInterfaceChangeCallbacks:
setCachedPushSettings:
setCurrentAddressFamily:
setDelegate:
setDisableEarlyFire:
setDisableSystemWaking:
setDuetIdentifier:
setEarlyFireConstantInterval:
setEnableNonCellularConnections:
setFireDate:
setInterfaceIdentifier:
setKeepAliveGracePeriod:
setKeepAliveOverrideOnInterface:interval:timeout:
setLastSuccessfulKeepAliveInterval:
setMaximumKeepAliveInterval:
setMinimumEarlyFireProportion:
setMinimumIntervalFallbackEnabled:
setMinimumIntervalFallbackStateTimeout:
setMinimumKeepAliveInterval:
setNonCellularEarlyFireConstantInterval:
setObject:forKey:
setOnlyAllowedStyle:
setOperatorMinimumIntervalFallbackAllowed:
setPollingIntervalOverride:
setPowerOptimizationsForExpensiveNetworkingDisabled:
setPreviousAction:
setQueue:
setServerStatsExpectedKeepAliveInterval:
setServerStatsMaxKeepAliveInterval:
setServerStatsMinKeepAliveInterval:
setSignalAvoidanceRange:
setState:
setSubState:
setTrackUsability:
setTrackedTimeInterval:
setUsingServerStatsAggressively:
sharedInstance
sharedInstanceForIdentifier:
shouldClientScheduleReconnectDueToFailure
signalAvoidanceRange
slotID
start
startManager
startTime
state
stopAndResetManager
stopManager
stringByAppendingFormat:
stringByAppendingString:
stringByDeletingPathExtension
stringForLinkQuality:
stringWithFormat:
stringWithUTF8String:
subState
substringFromIndex:
substringToIndex:
superclass
tetheringStatus:
timeIntervalSince1970
timeIntervalSinceNow
timeIntervalSinceReferenceDate
timer
unlock
unsignedIntegerValue
updateFireTime:triggerOnGMTChange:
usabilityMonitor
useIntervalIfImprovement:
userContext
userInfo
userVisible
usingServerStatsAggressively
wakeManager
weakRefWithObject:
weakToStrongObjectsMapTable
writeToFile:atomically:
wwanInterfaceName
zone
@16@0:8
v24@0:8@16
v16@0:8
@"NSObject<OS_dispatch_queue>"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v36@0:8@16i24@28
v32@0:8@16i24i28
v28@0:8@16B24
v36@0:8@16@24i32
v32@0:8@16@24
v28@0:8@16i24
v20@0:8i16
v20@0:8B16
v36@0:8@"CTXPCServiceSubscriptionContext"16i24@"CTDataConnectionStatus"28
v32@0:8@"CTXPCServiceSubscriptionContext"16i24i28
v28@0:8@"CTXPCServiceSubscriptionContext"16B24
v36@0:8@"CTXPCServiceSubscriptionContext"16@"NSNumber"24i32
v24@0:8@"CTXPCServiceSubscriptionContext"16
v24@0:8@"CTServiceDescriptor"16
v32@0:8@"CTXPCServiceSubscriptionContext"16@"NSArray"24
v32@0:8@"CTXPCServiceSubscriptionContext"16@"CTDataStatus"24
v28@0:8@"CTXPCServiceSubscriptionContext"16i24
v24@0:8@"CTDataSettings"16
v24@0:8@"CTDataConnectionStatus"16
v24@0:8@"CTDataStatusBasic"16
v24@0:8@"CTDataStatus"16
v24@0:8@"CTTetheringStatus"16
v28@0:8@"CTTetheringStatus"16i24
v32@0:8@"CTXPCServiceSubscriptionContext"16@"CTServiceDisconnectionStatus"24
v28@0:8@"CTServiceDescriptor"16B24
v28@0:8@"PCInterfaceMonitor"16i24
v24@0:8@"PCInterfaceMonitor"16
v24@0:8^v16
v24@0:8B16B20
v24@0:8:16
v28@0:8B16@20
@"NSRecursiveLock"
@"NSMapTable"
^{__CFSet=}
@"PCSimpleTimer"
@"NSString"
@"NSTimer"
@"CoreTelephonyClient"
@"CTXPCServiceSubscriptionContext"
v32@0:8^d16^{__CFString=}24
@40@0:8@16@24@32
B24@0:8d16
d16@0:8
v24@0:8d16
{_PCTimeRange=dd}16@0:8
v32@0:8{_PCTimeRange=dd}16
i16@0:8
@40@0:8@"NSDictionary"16@"NSString"24@"NSString"32
@"NSDictionary"16@0:8
v32@0:8d16I24B28
v28@0:8d16I24
v28@0:8d16i24
@20@0:8i16
@"NSDate"
@"NSObject<OS_os_log>"
{_PCTimeRange="start"d"duration"d}
v32@0:8d16Q24
v24@0:8@"CUTPowerMonitor"16
@56@0:8@16@24@32:40@48
@56@0:8d16@24@32:40@48
@64@0:8d16@24Q32@40:48@56
@68@0:8d16@24Q32@40:48@56B64
@24@0:8C16C20
C16@0:8
v20@0:8C16
B32@0:8d16@24
@60@0:8i16q20Q28@36@44@52
@44@0:8i16@20@28@36
@52@0:8i16q20Q28@36@44
@36@0:8i16@20@28
@24@0:8q16
v24@0:8i16B20
v32@0:8d16q24
v40@0:8q16d24d32
v28@0:8i16@20
q16@0:8
v24@0:8q16
@"<PCConnectionManagerDelegate>"
@"NSRunLoop"
[2@"<PCGrowthAlgorithm>"]
@"<PCGrowthAlgorithm>"
@"PCPersistentTimer"
v56@0:8B16@20d28B36@40^v48
@56@0:8B16@20d28B36@40^v48
@24@0:8@16
i24@0:8@16
B20@0:8B16
B20@0:8i16
^{__CFString=}16@0:8
v24@0:8Q16
@"<PCInterfaceUsabilityMonitorDelegate>"16@0:8
v24@0:8@"<PCInterfaceUsabilityMonitorDelegate>"16
@32@0:8q16@24
v24@0:8@?16
@"CUTWeakReference"
@"NSObject<OS_nw_parameters>"
@"NSObject<OS_nw_path_evaluator>"
@"NSObject<OS_nw_interface>"
^{__CFString=}
@"NSMutableArray"
v28@0:8@"NSObject<PCInterfaceUsabilityMonitorProtocol>"16i24
v24@0:8@"NSObject<PCInterfaceUsabilityMonitorProtocol>"16
@"PCInterfaceUsabilityMonitor"
v36@0:8i16@20@28
@"<PCInterfaceUsabilityMonitorProtocol>"
@32@0:8@16^@24
B32@0:8@16^@24
@"NSHashTable"
@"CTBundle"
@"NSDictionary"
@24@0:8r*16
@60@0:8d16@24@32:40@48B56
v28@0:8d16B24
@"PCDispatchTimer"
@48@0:8@16@24:32Q40
@"NSObject<OS_dispatch_source>"
333333
?333333
?ffffff
?ffffff
?ffffff
?ffffff
mmmmmm
v8@?0
true
false
wwan is %@; wifi is %@
interfacemanager-wifiautoassoc
interfacemanager-wow
inInitialGrowth
multiStateGrowth.%@
PCDefaultMinimumKeepAliveInterval
PCDefaultMaximumKeepAliveInterval
PCDefaultInitialKeepAliveInterval
PCInitialGrowthIncrement
PCRefinedGrowthIncrement
PCIncrementRandomVariance
PCBackoffMultiple
PCHighWatermarkThreshold
%@{keep alive interval = %g, state = %@, next recalibration date = %@}
PCActionGrowPushKeepAliveInterval
PCActionShrinkPushKeepAliveInterval
PCActionMaintainPushKeepAliveInterval
PCActionResetPushKeepAliveInterval
InitialGrowth
RefinedGrowth
SteadyState
Backoff
MinimumIntervalFallbackState
InitialShrink
RefinedShrink
Defaults
Moderate
Aggressive
PCPersistentTimer.m
%@ target and selector are required
persistentTimer.%@
%@ run loop mode cannot be nil
Cannot schedule invalidated %@
Cannot schedule on NULL queue %@
PCPersistentTimer-sharedBackgroundUpdateQueue
%@{fireDate = %@, early fire proportion = %g, disable system waking = %s, target = %@, selector = %@}
v32@?0@"NSNumber"8@"NSNumber"16^B24
PCPersistentTimerGuidanceNotification
keepAliveInterval
cacheDate
addressFamily
PCIntervalCacheChangedNotification
PCTimerFireEarlyToCoalesce
PCEvent
PCEventContext
PCConnectionManager.m
delegate must not be nil
serviceIdentifer must not be nil
PCPushIsConnectedToken
%@-%@
WWAN growth algorithm-%@
WiFi growth algorithm-%@
PCConnectionManager-noteQueue
v12@?0i8
PCForcedMinimumHBI
PCForcedMaximumHBI
PCAllowMinimumIntervalFallback
_CDClientContext
CoreDuetContext
_CDContextQueries
early
on time
Invalid action type: %i
Action %@ not appropriate for push style.
Action %@ not appropriate for %@. PrefsStyle=%@. _forceManualWhenRoaming = %@  onlyAllowedStyleSet=%@ onlyAllowedStyle=%@
enter reconnect mode
issue a shrink
timers already exist
delay timer already exists
lock
com.apple.persistentconnection.intervalcache.plist
push
poll
manual
PCActionSchedulePoll
PCActionScheduleConnectionRetry
PCActionScheduleConnectionRetryWithKeepAliveDelay
unknown action
PCEventPushKeepAlive
PCEventPoll
PCEventRetryConnection
PCEventPersistentInterfaceWentUp
PCEventPersistentInterfaceWentDown
PCEventConnectionStyleChanged
PCEventCancel
unknown event
IPv4
IPv6
Unknown
PCPreferencesDidChangeNotification
PCPreferencesDidChangeNotificationInternal
MobileMeOTASyncAccount
com.apple.persistentconnection
PCEnablePush
PCDefaultPollInterval
PCForceDemoMaxHBI
PCWiFiInterface
com.apple.persistentconnection.settings.lock
PCForceMinHBI
mobile
PCConnectionStyle _PCSettingsGetStyle(PCConnectionClassType, CFStringRef)
PCSettings.m
%s requires a non-NULL serviceIdentifier
PCStyle
PCServiceIdentifier-
PCForceManualWhenRoaming
PC-Prefs-Queue
com.apple.persistentconnection-nosettings
com.apple.persistentconnection-mcc
kern.boottime
PCPersistentIdentifiers.m
sysctlbyname() for "kern.boottime" failed: %s
com.apple.persistentconnection[%@,
%i,%@]
.%@.lock
%@ at path '%@' is being deallocated while locked
%@ at path '%@' is already locked
Unable to take %@ at path '%@': %s
%@ at path '%@' is not locked
(null)
%Y-%m-%d %X %z
(localtime_r failed)
PCSharedSerialQueue
PCInterfaceUsabilityMonitor.m
Must specify an interface identifier for PCInterfaceUsabilityMonitor
com.apple.PersistentConnection.PCInterfaceUsabilityMonitor-SCDynamicStore
v16@?0@"NSObject<OS_nw_path>"8
<none>
satisfied
unsatisfied
v16@?0@"<PCInterfaceUsabilityMonitorDelegate>"8
unknown
poor
good
NonCellular
WWAN
PCNonCellularUsabilityMonitor-ivarqueue
PCNonCellularUsabilityMonitor-monitordelegatequeue
PCWWANUsabilityMonitor-ivarqueue
PCWWANUsabilityMonitor-monitordelegatequeue
com.apple.powerlog.BasebandHasCDRXCapability
PCInterfaceMonitor-NonCellular
PCInterfaceMonitor-WWAN
PushSettings
usabilityMonitor
wakeManager
timer
interfaceManager
InternalBuild
Logs/PersistentConnection
Logs/CrashReporter/PersistentConnection
Library
com.apple.PersistentConnection
PCSimpleTimer.m
Cannot schedule on runloop when already scheduled on queue %@
Cannot schedule on queue when already scheduled on runloop %@
PCSimpleTimer-timerQ
PCSimpleTimer-SignificantTimeChangeQueue
SignificantTimeChangeNotification
%@{fireDate = %@, disable system waking = %s, target = %@, selector = %@}
kern.waketime
PCSimpleTimer-IOPowerManagement
PCSimpleTimer-powermonitoringq
%{public}@: Interface manager: Clearing _inCallWWANOverrideTimer: %{public}@
%{public}@ _updateWWANInterfaceUpState wasUp %{public}@ isUp %{public}@ wantsInterfaceAssertion %{public}@ avoidWWANOnCall %{public}@
Interface manager: isWWANInHomeCountry status changed to %s
cutWiFiManagerDeviceAttached called: %{public}@
Interface manager: clearing packet context assertion
Using cached keep alive interval of %g seconds inInitialGrowth? %{public}@ from [%{public}@]
%@: triggered signaling avoidance {interval: %g, adjustedInterval: %g, _signalAvoidanceRange.start: %g, _signalAvoidanceRange.duration: %g, roundUpRatio: %g}
%{public}@: setting current interval to %g seconds
%{public}@: setting lastSuccessfulKeepAliveInterval to %g seconds
%@ minimumIntervalFallbackEnabled changed to %@
%{public}@: useIntervalIfImprovement %f   lastKeepAliveInterval: %f  currentKeepAliveInterval: %f
%{public}@: adjustGrowthAlgorithmMode. {lastMode: %@, currentMode: %@}
%{public}@: resetAlgorithmToInterval: %g state: %{public}@
%{public}@: received action %{public}@ while in stage %{public}@
%{public}@: leaving the initial growth stage for refined growth
%{public}@: leaving the steady state and trying to grow again
%{public}@: using double the current interval for the steady state timer interval since we are significantly below the high watermark of %g seconds
%{public}@: set the steady state expiration date to %{public}@
%@ _leaveMinimumIntervalFallbackStateDate is nil. Leave minimumIntervalFallbackState. Changing maximum keep alive interval back to %f
%@ Unexpected _leaveMinimumIntervalFallbackStateDate %@ in MinimumIntervalFallbackState, changing to %@
%@ Leave minimumIntervalFallbackState. Changing maximum keep alive interval back to %f
%@ receive shrink right after previous MinimumIntervalFallbackState ends, extend leaveMinimumIntervalFallbackStateDate to %@
%{public}@: surpassed where the previous initial growth stopped at %g; reverting to initial growth.
%{public}@: using a steady state timeout of %g for current interval %g
%{public}@: %0.2f
%{public}@ created %{public}@
Invalidating timer %{public}@
%{public}@ calculating _earlyFireDate. powerStateDetectionSupported = %{public}@ = (detectionSupported(%@) && (wwanIsUp(%{public}@) || ! internetReachable(%{public}@)))
Last system wake date (%{public}@) was longer than half of the timer duration, so setting minimum fire date to fire date.
%{public}@ Device is plugged in, overriding earlyFireProportion to be 1.0
%{public}@ device is not plugged in.
Ignore early fire proportion. {earlyFireConstantInterval: %f}
Forcing timer alignment to fire date [%{public}@]
%{public}@ Calculated minimum fire date [%{public}@] (%g%%) with fire date [%{public}@], start date [%{public}@], minimum early fire proportion %g, power state detection supported: %{public}s, in high power state: %{public}s, early fire constant interval %f
PersistentTimer %{public}@ has fired
updating timer guidance to %{public}@
Creating PCManager %@ with identifier %@ and interfaceIdentifier %ld
%@ carrier bundle changed
%@ Changing duetIdentifier from %@ to %@
_loadPreferencesGeneratingEvent
%@ Loading forceManualWhenRoaming: accountSetting %@  globalSetting %@
Loaded preferences. Style is %@ and default poll interval is %g minutes.
Forcing manual when roaming.
Carrier bundle override for minimum HBI set. Setting minimum keep alive interval to %g seconds.
Carrier bundle override for maximum HBI set. Setting maximum keep alive interval to %g seconds.
Operator bundle set PCAllowMinimumIntervalFallback to %@
%@ set. Setting maximum keep alive interval to %g seconds for demo mode.
%@ set. Setting minimum keep alive interval to %g seconds for demo mode.
%@ Query duet context for device condition, {GoodCondition:%{public}@, thermalPressureLevel:%{public}@, wifiConnectionQuality:%{public}@, pluggedIn:%{public}@}
%@ Asked to get growth algorithm with invalid interface %ld
Resuming push keep alive timer in normal mode with action %@
Last timer interruption was %s: [%@]. Expected fire time was [%@]. {lastKeepAliveWasUntracked: %@}
%@: lastKeepAliveWasEarly - Examining sameAlgorithm %@ timeKeepAliveWasScheduled %f, onTimeKeepAliveTime: %f, lastStopTime %f
%@: This grow action is early but we're past the interval our previous growth was based on. Regrowing based on this interval %f.
%@ Last keep alive was early {forceGrow: %s, action: %@}
Resuming poll keep alive timer in normal mode with action %@
Resuming manual keep alive timer in normal mode with action %@
Choosing not to resume keep alive in reconnect mode since all interfaces are disabled. Action %@
Choosing not to resume keep alive in reconnect mode since interface is networking power expensive to use. Action %@
Resuming keep alive in reconnect mode with action %@
logKeepAlive {identifier: %@, currentDate: %@, keepAliveInterval: %i}
PCConnectionManager was stopped by client
Setting minimum keep alive interval to %g
%@ Setting minimum keep alive interval for %@ to %g
Setting maximum keep alive interval to %g
%@ Asked to set maximum keep alive interval on invalid interface %ld
%@ Setting maximum keep alive interval for %lu to %g
%@ Setting server stats max keep alive interval for %@ to %g
%@ Setting server stats min keep alive interval for %@ to %g
%@ Setting server stats expected keep alive interval for %@ to %g
Setting keep alive grace period to %g
%@ Setting usingServerStatsAggressively for %@ to %@
Setting NonCellular early fire constant interval to %g
Push is connected? %@  networkIsHistoricallyUsable? %@  isBadLQ? %@ -- choosing pollInterval = MAX(%g, %g)
Setting polling interval override to %g
Cacnceling polling interval override
Advising client to not enter reconnect mode since the network just became reachable at %@
Advising client to enter reconnect mode in response to a connection failure since currently in reconnect mode
Advising client to %s in response to a connection failure after elapsed time from start %g seconds
%@: enableNonCellularConnections changed to %@
%@ - early fire has been manually disabled for this timer!
%@ - setting early fire constant interval to %f!
Trying to push no persistent interface exists and the poll interval is 'manual', so disabling waking to conserve power
%@ _adjustPollTimerIfNecessary  rightStyle %@  isRunning %@  isInReconnectMode %@   intervalTimer %@  firingIsImminent %@ - should Adjust? %@
%@ Unable to setup a poll timer with {pollingInterval: %{public}f}, start when on power
%@ adjust polling interval {pollingInterval: %f, adjustedPollingInterval: %f, lastElapsedInterval: %f}.
%@ firing immediately {nextPollInterval:%f}.
%@ scheduling next poll - isAdjustment %@. PushDate %@ is not valid - timeIntervalSinceNow %f. Last scheduled fire date %@. TimeDiff = %f, pollingInterval %f
%@ scheduling the next poll to align with the next push keepAlive date (%@). isAdjustment %@  isLastTimeIntervalValid? %@, lastResumeTime %@ (%f), lastScheduledIntervalTime (%@) %f, timeDiff %f. Should fire immediately? %@
%@ nextPollDate timeIntervalSinceNow %f  pollingInterval %f  earliestAllowableFire %@
%@ nextPollDate whittled down by a polling interval to %@, %f
%@ using nextPollInterval = %f.
All network interfaces are disabled, so not scheduling any wakes in polling mode
All network interfaces are disabled, so not scheduling any wakes in reconnect mode
Experienced recent dropped connection. Using 30 minute wake interval
Network interfaces reporting BAD LQM. Altering timer interval to 5 minutes
Creating reconnect timers for iteration %i with keep alive interval %.4g and wake interval %.4g
%@ _intervalTimer = %@
%@ _reconnectWakeTimer = %@
_intervalTimer was already invalidated, no need to perform callback
%@ (%@) does not have budget to perform callout, bailing and starting next timer interval.
Timer fired. Delay is 0 so scheduling notification immediately. isWWANInterfaceUp %@, isWoWSupported %@
Timer fired. Delaying notification %g seconds. Last system wake: %@
Returned from callout
Calling out with reason %@ to delegate %@
Persistent interface link quality changed, firing interval timer: %@
Persistent interface went up while in reconnect mode. Firing reconnect timer.
%@ interfaceManagerInternetReachabilityChanged: %@ isRunning %@ delayTimer %@ wasReachable %@ isReachable %@ currentStyleIsPush? %@
Network went reachable while in reconnect mode. Firing reconnect timer.
Unable to write cache dictionary: %@
Unable to create directory %@ {error:%{public}@}
Request to schedule wake %d date %{public}@ leeway %g service identifier %{public}@ unique identifier %{public}@
%{public}@ - _unschedulePathEvaluatorOnIvarQueue
%{public}@ InterfaceUsabilityMonitor [%{public}@]: current interface changed from %s (%u) to %s (%u)
%{public}@ InterfaceUsabilityMonitor [%{public}@]: current delegate interface changed from %s (%u) to %s (%u)
%{public}@ InterfaceUsabilityMonitor [%{public}@]: path changed from %s to %s (%s)
%{public}@ Interface Manager: %{public}@(%{public}@) LinkQuality changed from %{public}@ to %{public}@ (%d)
%{public}@ _dynamicStoreCallback - processing changedKey %{public}@ linkQualityInfo %{public}@.
Interface manager: failed to create SCDynamicStore object
Interface manager: SCDynamicStoreSetDispatchQueue failed
%{public}@ Interface manager: creating monitor for interface: %{public}@ LinkQuality key: %{public}@
%{public}@ NonCellularUsabilityMonitor is in demo override mode! (interface name %{public}@)
%{public}@ NonCellularUsabilityMonitor - LQ changed from %d to %d
kPCWWANPowerlogCDRXNotification - state = %llu
%{public}@ _adjustInterfaceNameForWWANContextID contextID %ld  interfaceName %{public}@
Trying to copy carrier bundle value but we don't have a valid CTXPCServiceSubscriptionContext yet
Failed to copy carrier bundle value. {key: %@, error: %@}
operatorBundleChange - context %@
currentDataSimChanged - context %@
%{public}@ updateFireTime from %{public}@ + %g to %{public}@ + %g, trigger from %{public}@ to %{public}@
Started simple timer %{public}@ with fire date [%{public}@]
%{public}@ created preventSleepTimer %{public}@ and fireTimer %{public}@ on queue %{public}@
Invalidating simple timer %{public}@
Not canceling system wake for [%{public}@], which is in the past
Canceling system wake for simpletimer [%{public}@]
Suspended timer for imminent system sleep
Firing simple timer that was scheduled to fire at [%{public}@] since time has moved backwards by at least %g seconds
%{public}@ Existing wake at %{public}@ re-scheduling to %{public}@ with leeway of %g
%{public}@ Canceling system wake for simpletimer [%{public}@]
SimpleTimer %{public}@ has fired
PCSimpleTimer - enabling power monitoring
Enabling power monitoring for %{public}@ - %lu timers
System is waking: kIOMessageSystemWillPowerOn
System will not sleep: kIOMessageSystemWillNotSleep
System woke: kIOMessageSystemHasPoweredOn
System can sleep query received: kIOMessageCanSystemSleep
System will sleep: kIOMessageSystemWillSleep
Disabling power monitoring for %{public}@ - %lu timers
PCSimpleTimer - no timers left, disabling power monitoring
%{public}@ initialized with target %{public}@ selector %{public}s timerSource %{public}@
%{public}@ in call back event handler
%{public}@ dealloced
%{public}@ performing call back
%{public}@ performed call back on target %@ selector %s
%{public}@ start with target %{public}@ selector %{public}s firetime %llu timerSource %{public}@
%{public}@ setFireDate %{public}@ and start with target %{public}@ selector %{public}s fireTime %llu deltaNanosec %{public}@ timerSource %{public}@
%{public}@ tried to setFireDate %{public}@ but the timer is not valid
%{public}@ is invalidated 
Callstack %{public}@
PCDelegateInfo
PCPersistentInterfaceManager
CoreTelephonyClientDataDelegate
NSObject
PCInterfaceMonitorDelegate
PCMultiStageGrowthAlgorithm
PCGrowthAlgorithm
PCPersistentTimer
CUTPowerMonitorDelegate
PCKeepAliveState
PCConnectionManager
PCCarrierBundleHelperDelegate
PCSystemWakeManager
PCScheduleSystemWakeOperation
PCCancelAllProcessWakesOperation
PCPersistentIdentifiers
PCDistributedLock
NSLocking
PCInterfaceUsabilityMonitor
PCInterfaceUsabilityMonitorProtocol
PCInterfaceMonitorProtocol
PCNonCellularUsabilityMonitor
PCInterfaceUsabilityMonitorDelegate
PCWWANUsabilityMonitor
PCInterfaceMonitor
PCCarrierBundleHelper
CoreTelephonyClientCarrierBundleDelegate
PCLog
PCLogging
PCSimpleTimer
PCDispatchTimer
TB,R,N,V_hasWWANStatusIndicator
T#,R
Td,N,V_maximumKeepAliveInterval
T@"<PCInterfaceUsabilityMonitorDelegate>",N
_bundle
T@"NSDictionary",C,N,V_cachedPushSettings
_earlyFireDelta
T@"NSObject<OS_os_log>",R
_fireTimerFired
T@"NSString",R,&,N
_lastResumeTime
T@"NSString",R,N
_minimumIntervalFallbackEnabled
TB,N
_pathParameters
TB,N,V_alwaysWantsInterfaceChangeCallbacks
_stringForMode:
TB,N,V_isServerOriginatedKeepAlive
_target
TB,N,V_powerOptimizationsForExpensiveNetworkingDisabled
_validateActionForCurrentStyle:
TB,R
containsObject:
TC,N,V_state
initWithFormat:
TQ,R,N
internetConnectionAvailability:
T^{__CFString=},R,N
isNetworkingPowerExpensiveToUse
Td,N
isValid
Td,N,V_keepAliveGracePeriod
lastSuccessfulKeepAliveInterval
Td,N,V_minimumEarlyFireProportion
pollingInterval
Td,N,V_nonCellularEarlyFireConstantInterval
removeDelegate:
Td,N,V_serverStatsMaxKeepAliveInterval
serverStatsMinKeepAliveInterval
Td,R,N
setMaxConcurrentOperationCount:
Ti,N
setUserVisible:
Ti,R,N
stringByAppendingPathExtension:
Ti,R,N,V_growthStage
tryLock
.cxx_destruct
TC,N,V_subState
T@"<PCConnectionManagerDelegate>",W,N
Td,N,V_minimumKeepAliveInterval
T@"NSDate",&,N
_duetIdentifier
T@"NSDictionary",R,C,N
T@"NSString",C,N
_isPowerStateDetectionSupported
T@"NSString",R,C
_lastUpdateTime
T@"PCKeepAliveState",R,N
_offTransitions
TB,N,GisUserVisible
_previousAction
TB,N,V_disableSystemWaking
_takePowerAssertionWithTimeout:
TB,N,V_minimumIntervalFallbackEnabled
_trackUsability
TB,N,V_usingServerStatsAggressively
areAllNetworkInterfacesDisabled
TB,R,N
dealloc
TQ,R
interface5GMode
TQ,R,N,V_countOfGrowthActions
internetConnectionStateChanged:
isProxy
Td,N,V_earlyFireConstantInterval
keyPathForWiFiConnectionQuality
Td,N,V_lastSuccessfulKeepAliveInterval
numberWithBool:
Td,N,V_minimumIntervalFallbackStateTimeout
release
Td,N,V_serverStatsExpectedKeepAliveInterval
serverStatsMaxKeepAliveInterval
Td,N,V_serverStatsMinKeepAliveInterval
setIsServerOriginatedKeepAlive:
Td,R,N,V_currentKeepAliveInterval
setThresholdOffTransitionCount:
Ti,N,V_previousAction
stringByAppendingPathComponent:
Ti,R,N,V_currentRAT
tetheringStatus:connectionType:
Ti,R,N,V_lastProcessedAction
Tq,N,V_interfaceIdentifier
Tq,R,N
T{_PCTimeRange=dd},N
T{_PCTimeRange=dd},N,V_signalAvoidanceRange
UTF8String
WWANInterfaceName
_WWANInterfaceName
_WiFiAutoAssociationDelegates
_WiFiAutoAssociationDisableTimer
_acceptableDelay
_addMonitor
_adjustGrowthAlgorithmMode
_adjustInterfaceAssertions
_adjustInterfaceNameForWWANContextID:interfaceName:forContext:
_adjustMinimumIntervalFallback
_adjustPollTimerIfNecessary
_adjustWakeOnWiFi
_adjustWakeOnWiFiLocked
_adjustWiFiAutoAssociation
_adjustWiFiAutoAssociationLocked
_algorithmName
_alwaysWantsInterfaceChangeCallbacks
_backgroundUpdateQueue
_cachedPushSettings
_callDelegateOnIvarQueueWithBlock:
_callDelegateWithBlock:
_callDelegateWithEventAndContext:
_callTarget
_calloutWithEvent:context:
_cleanupTimer
_clearInCallWWANOverrideTimerLocked
_clearTimers
_clearTimersReleasingPowerAssertion:
_connectionClass
_countOfGrowthActions
_createCTConnection
_createLinkQualityMonitor:
_createPathEvaluator
_ctClient
_ctConnectionAttempt
_ctIsWWANInHomeCountry
_ctServerConnection
_ctServerQueue
_currentAddressFamily
_currentDataBearerSoMask
_currentDataContext
_currentDataSimContext
_currentGrowthAlgorithm
_currentGrowthStage
_currentGuidanceTime
_currentKeepAliveAlgorithmMode
_currentKeepAliveInterval
_currentRAT
_defaultPollingInterval
_delayTimer
_delayTimerFired
_delegate
_delegateMap
_delegateQueue
_delegateReference
_delegateRunLoop
_delegates
_delegatesAndQueues
_demoOverrideInterface
_deregisterForDeviceConditionsNotifications
_deviceUnderGoodCondition
_disableEarlyFire
_disableSystemWaking
_duetContextRegistration
_dynamicStore
_dynamicStoreCallback:
_dynamicStoreCallbackForKeys:
_earlyFireConstantInterval
_earlyFireTime
_enableNonCellularConnections
_evaluator
_fallbackToLastSuccessfulKeepAliveInterval
_fireDate
_fireTime
_fireTimer
_flushStaleTransitions
_forceManualWhenRoaming
_forwardConfigurationOnIvarQueue
_getCachedWWANKeepAliveIntervalForAddressFamily:
_getTimerMode
_getTimerRunLoop
_growthAlgorithmOnInterface:
_growthStage
_guidancePriority
_handleDeviceConditionChangeCallback
_hasBudgetRemaining
_hasStarted
_hasWWANStatusIndicator
_highWatermark
_inCallWWANOverrideTimer
_inCallWWANOverrideTimerFired
_inCallback
_initWithAbsoluteTime:serviceIdentifier:guidancePriority:target:selector:userInfo:triggerOnGMTChange:
_initWithConnectionClass:interfaceIdentifier:guidancePriority:delegate:delegateQueue:serviceIdentifier:
_initialGrowthStageHighWatermark
_initialGrowthStageLastAttempt
_interfaceAssertion
_interfaceIdentifier
_interfaceMonitor
_interfaceName
_internal
_intervalTimer
_intervalTimerFired
_invalidateAllowAsync:
_isCachedKeepAliveIntervalStillValid:date:
_isCurrentDataSimContextOnIvarQueue:
_isInCall
_isInHighPowerState
_isInReconnectMode
_isInterfaceHistoricallyUsable
_isInterfaceUsable
_isInternetReachableLocked
_isPathSatisfied
_isPushConnected
_isReachable
_isRunning
_isServerOriginatedKeepAlive
_isValid
_isWWANInHomeCountryLocked
_isWWANInterfaceActivationPermitted
_isWWANInterfaceDataActive
_isWWANInterfaceInProlongedHighPowerState
_isWWANInterfaceSuspended
_isWWANInterfaceUp
_isWakeOnWiFiEnabled
_isWakeOnWiFiSupported
_isWiFiUsable
_ivarQueue
_keepAliveCachePath
_keepAliveGracePeriod
_lastActivationTime
_lastDelegateInterface
_lastElapsedInterval
_lastInterface
_lastKeepAliveAlgorithmMode
_lastKeepAliveInterval
_lastProcessedAction
_lastReachableTime
_lastReconnectTime
_lastScheduledGrowthAlgorithm
_lastScheduledIntervalTime
_lastStartTime
_lastStopTime
_lastSuccessfulKeepAliveInterval
_leaveMinimumIntervalFallbackStateDate
_leaveSteadyStateDate
_linkQuality
_linkQualityOnIvarQueue
_loadDefaultValue:forKey:
_loadDefaults
_loadPreferencesGeneratingEvent:
_lock
_lockBlocking:
_logObject
_lqKey
_mainThreadCTConnectionAttempt
_maximumKeepAliveInterval
_minimumEarlyFireProportion
_minimumIntervalFallbackStateTimeout
_minimumKeepAliveInterval
_monitor
_monitorDelegateQueue
_nextForcedAlignmentAbsoluteTime
_nonCellularEarlyFireConstantInterval
_nonCellularMonitor
_onTimeKeepAliveTime
_onlyAllowedStyle
_onlyAllowedStyleSet
_operatorMinimumIntervalFallbackAllowed
_path
_pathUpdate:
_pauseTimers
_performBlockOnQueue:
_pollingIntervalOverride
_pollingIntervalOverrideSet
_powerAssertionID
_powerNotificationSleepIsImminent
_powerNotificationSleepIsNotImminent
_powerOptimizationsForExpensiveNetworkingDisabled
_powerlogCDRXToken
_preferencesChanged
_prefsChangedToken
_prefsStyle
_preventSleepFired
_preventSleepTimer
_previousLinkQuality
_previousMaximumKeepAliveInterval
_processBackoffAction:
_processCarrierBundleChange:
_processDeviceConditionChanges
_processInitialGrowthAction:
_processInitialShrinkAction:
_processLinkQualityUpdateWithChangedKey:updatedLinkQuality:
_processMinimumIntervalFallbackStateAction:
_processNamePrefix
_processRefinedGrowthAction:
_processRefinedShrinkAction:
_processSteadyStateAction:
_pushIsConnectedToken
_queue
_reconnectIteration
_reconnectWakeTimer
_reconnectWithKeepAliveDelay
_recursiveLock
_registerForDeviceConditionsNotifications
_releasePowerAssertion
_resetAlgorithmToInterval:
_resetAlgorithmToInterval:stage:
_resolveStateWithAction:
_saveWWANKeepAliveInterval
_scQueue
_scheduleCalloutsForSelector:
_scheduleOrCancel
_scheduleTimer
_scheduledWakeDate
_selector
_serverStatsExpectedKeepAliveInterval
_serverStatsMaxKeepAliveInterval
_serverStatsMinKeepAliveInterval
_serviceIdentifier
_setCurrentKeepAliveInterval:varianceMode:
_setCurrentKeepAliveInterval:varianceMode:allowRoundUp:
_setMaximumKeepAliveInterval:onInterface:
_setMinimumKeepAliveInterval:onInterface:
_setPowerMonitoringEnabled:
_setSignificantTimeChangeMonitoringEnabled:
_setTimerGuidance:
_setupKeepAliveForReconnect
_setupTimerForPollForAdjustment:
_setupTimerForPushWithKeepAliveInterval:
_setupWWANMonitor
_signalAvoidanceRange
_significantTimeChange
_significantTimeChangeToken
_simpleTimer
_sleepIsImminent
_startTime
_state
_steadyStateTimeout
_stringForAction:
_stringForAddressFamily:
_stringForEvent:
_stringForStage:
_stringForStyle:
_subState
_thresholdOffTransitionCount
_timeChangeSource
_timerGuidance
_timerGuidanceToken
_timerMode
_timerRunLoop
_timerSource
_trackedTimeInterval
_triggerOnGMTChange
_unqiueIdentifier
_unscheduleLinkQualityMonitor
_unschedulePathEvaluator
_updateCTIsWWANInHomeCountry:isWWANInterfaceDataActive:
_updateCurrentDataSimContext:
_updateOffTransitionsForLinkQualityChange
_updatePathParameters
_updateTime:forGuidancePriority:
_updateTimers
_updateWWANInterfaceAssertions
_updateWWANInterfaceAssertionsLocked
_updateWWANInterfaceUpState
_updateWWANInterfaceUpStateLocked
_userInfo
_userVisible
_usingServerStatsAggressively
_wakeDate
_wakeOnWiFiDelegates
_wakeOnWiFiDisableTimer
_wantsWWANInterfaceAssertion
_wantsWakeOnWiFiEnabled
_wifiGrowthAlgorithm
_wifiIsPoorLinkQuality
_wwanContextID
_wwanGrowthAlgorithm
_wwanIsPoorLinkQuality
addDelegate:
addDelegate:queue:
addObject:
addOperation:
allowBindingToWWAN
alwaysWantsInterfaceChangeCallbacks
anbrActivationState:enabled:
anbrBitrateRecommendation:bitrate:direction:
arrayWithCapacity:
arrayWithObject:
autorelease
blockOperationWithBlock:
boolValue
boolValueFromPushBundleForKey:error:
cStringUsingEncoding:
cacheInfo
cachedPushSettings
callStackSymbols
canBeConvertedToEncoding:
cancelPerformSelector:target:argument:
cancelPollingIntervalOverride
cancelPreviousPerformRequestsWithTarget:selector:object:
carrierBundleChange:
carrierBundleDidChange
class
conformsToProtocol:
connectionActivationError:connection:error:
connectionAvailability:availableConnections:
connectionManager:handleEvent:
connectionManager:handleEvent:context:
connectionStateChanged:connection:dataConnectionStatusInfo:
copy
copyCarrierBundleValue:key:bundleType:error:
copyValueForKey:error:
copyValueFromPushBundleForKey:error:
count
countByEnumeratingWithState:objects:count:
countOfGrowthActions
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
currentAddressFamily
currentDataServiceDescriptorChanged:
currentDataSimChanged:
currentGrowthStage
currentHandler
currentInterfaceName
currentKeepAliveInterval
currentKeepAliveState
currentLinkQualityString
currentMachTimeInterval
currentRAT
currentRunLoop
currentStyle
cutPowerMonitorBatteryConnectedStateDidChange:
cutPowerMonitorSystemHasPoweredOn:
cutWiFiManagerDeviceAttached:
dataRoamingSettingsChanged:status:
dataSettingsChanged:
dataStatus:dataStatusInfo:
dataUsingEncoding:allowLossyConversion:
dataWithPropertyList:format:options:error:
date
dateByAddingTimeInterval:
dateWithTimeIntervalSince1970:
dateWithTimeIntervalSinceNow:
dateWithTimeIntervalSinceReferenceDate:
debugDescription
defaultBundleChange
defaultManager
delegate
description
dictionary
dictionaryWithObjectsAndKeys:
disableEarlyFire
disableSystemWaking
distantFuture
distantPast
doesWWANInterfaceExist
doubleValue
duetIdentifier
earlyFireConstantInterval
enableWakeOnWiFi:forDelegate:
enableWiFiAutoAssociation:forDelegate:
enumerateKeysAndObjectsUsingBlock:
exceptionWithName:reason:userInfo:
fileSystemRepresentation
fireDate
fireTime
firingIsImminent
getCFRunLoop
growthAlgorithmClass
growthStage
handleFailureInFunction:file:lineNumber:description:
handleFailureInMethod:object:file:lineNumber:description:
handleMachMessage:
hasPrefix:
hasWWANStatusIndicator
hash
helper
hostUniqueIdentifier
init
initForScheduledWake:wakeDate:acceptableDelay:userVisible:serviceIdentifier:uniqueIdentifier:
initWithAbsoluteTime:serviceIdentifier:target:selector:userInfo:triggerOnGMTChange:
initWithCacheInfo:loggingIdentifier:algorithmName:
initWithConnectionClass:delegate:delegateQueue:serviceIdentifier:
initWithConnectionClass:delegate:serviceIdentifier:
initWithConnectionClass:interfaceIdentifier:guidancePriority:delegate:serviceIdentifier:
initWithContentsOfFile:
initWithData:encoding:
initWithDelegateQueue:
initWithFireDate:serviceIdentifier:target:selector:userInfo:
initWithInterfaceIdentifier:
initWithInterfaceIdentifier:delegateQueue:
initWithKeepAliveState:subState:
initWithKeyOptions:valueOptions:capacity:
initWithName:
initWithObjects:
initWithObjectsAndKeys:
initWithOptions:capacity:
initWithPath:
initWithQueue:target:selector:fireTime:
initWithTimeInterval:serviceIdentifier:guidancePriority:target:selector:userInfo:
initWithTimeInterval:serviceIdentifier:target:selector:userInfo:
initWithTimeIntervalSinceNow:
insertObject:atIndex:
intValue
integerValue
interfaceIdentifier
interfaceLinkQualityChanged:previousLinkQuality:
interfaceManager
interfaceManagerInHomeCountryStatusChanged:
interfaceManagerInternetReachabilityChanged:
interfaceManagerWWANInterfaceChangedPowerState:
interfaceManagerWWANInterfaceStatusChanged:
interfaceRadioHotnessChanged:
interfaceReachabilityChanged:
internetConnectionActivationError:
internetDataStatus:
internetDataStatusBasic:
intervalCacheDictionaries
invalidate
isBadLinkQuality
isBadLinkQuality:
isEqual:
isEqualToDate:
isExternalPowerConnected
isInCall
isInterfaceHistoricallyUsable
isInterfaceUsable
isInternetReachable
isInternetReachableViaWiFi
isKindOfClass:
isLTEWithCDRX
isMemberOfClass:
isPoorLinkQuality
isPoorLinkQuality:
isPowerStateDetectionSupported
isRadioHot
isRunning
isServerOriginatedKeepAlive
isUserVisible
isWWANBetterThanWiFi
isWWANInHomeCountry
isWWANInterfaceActivationPermitted
isWWANInterfaceInProlongedHighPowerState
isWWANInterfaceSuspended
isWWANInterfaceUp
isWakeOnWiFiSupported
isWoWSupported
keepAliveGracePeriod
keyPathForPluginStatus
keyPathForThermalPressureLevel
lastProcessedAction
lastSystemWakeDate
length
linkQuality
linkQualityString
lock
logFileDirectory
logWithCategory:
main
mainRunLoop
maximumKeepAliveInterval
minimumEarlyFireProportion
minimumIntervalFallbackEnabled
minimumIntervalFallbackStateTimeout
minimumKeepAliveInterval
mutableCopy
networkCode
nonCellularEarlyFireConstantInterval
numberWithDouble:
numberWithInt:
numberWithUnsignedInteger:
object
objectAtIndex:
objectForKey:
objectForKeyedSubscript:
operatorBundleChange:
operatorMinimumIntervalFallbackAllowed
performSelector:
performSelector:target:argument:order:modes:
performSelector:withObject:
performSelector:withObject:afterDelay:inModes:
performSelector:withObject:withObject:
persistentInterfaceManager
pidFromMatchingIdentifer:
powerOptimizationsForExpensiveNetworkingDisabled
preferredDataServiceDescriptorChanged:
preferredDataSimChanged:
previousAction
processInfo
processName
processNameAndPidIdentifier
processNamePidAndStringIdentifier:
processNextAction:
queue
raise:format:
rangeOfString:options:
regDataModeChanged:dataMode:
removeObject:
removeObjectForKey:
respondsToSelector:
resumeManagerWithAction:
resumeManagerWithAction:forceGrow:
retain
retainCount
scheduleInQueue:
scheduleInRunLoop:
scheduleInRunLoop:inMode:
scheduleWake:wakeDate:acceptableDelay:userVisible:serviceIdentifier:uniqueIdentifier:
self
serverStatsExpectedKeepAliveInterval
serviceDisconnection:status:
servingNetworkChanged:
setAlwaysWantsInterfaceChangeCallbacks:
setCachedPushSettings:
setCurrentAddressFamily:
setDelegate:
setDisableEarlyFire:
setDisableSystemWaking:
setDuetIdentifier:
setEarlyFireConstantInterval:
setEnableNonCellularConnections:
setFireDate:
setInterfaceIdentifier:
setKeepAliveGracePeriod:
setKeepAliveOverrideOnInterface:interval:timeout:
setLastSuccessfulKeepAliveInterval:
setMaximumKeepAliveInterval:
setMinimumEarlyFireProportion:
setMinimumIntervalFallbackEnabled:
setMinimumIntervalFallbackStateTimeout:
setMinimumKeepAliveInterval:
setNonCellularEarlyFireConstantInterval:
setObject:forKey:
setOnlyAllowedStyle:
setOperatorMinimumIntervalFallbackAllowed:
setPollingIntervalOverride:
setPowerOptimizationsForExpensiveNetworkingDisabled:
setPreviousAction:
setQueue:
setServerStatsExpectedKeepAliveInterval:
setServerStatsMaxKeepAliveInterval:
setServerStatsMinKeepAliveInterval:
setSignalAvoidanceRange:
setState:
setSubState:
setTrackUsability:
setTrackedTimeInterval:
setUsingServerStatsAggressively:
sharedInstance
sharedInstanceForIdentifier:
shouldClientScheduleReconnectDueToFailure
signalAvoidanceRange
slotID
start
startManager
startTime
state
stopAndResetManager
stopManager
stringByAppendingFormat:
stringByAppendingString:
stringForLinkQuality:
stringWithFormat:
stringWithUTF8String:
subState
substringFromIndex:
substringToIndex:
superclass
tetheringStatus:
timeIntervalSince1970
timeIntervalSinceNow
timeIntervalSinceReferenceDate
timer
unlock
unsignedIntegerValue
updateFireTime:triggerOnGMTChange:
usabilityMonitor
useIntervalIfImprovement:
userContext
userInfo
userVisible
usingServerStatsAggressively
wakeManager
weakRefWithObject:
weakToStrongObjectsMapTable
writeToFile:atomically:
wwanInterfaceName
zone
@16@0:8
v24@0:8@16
v16@0:8
@"NSObject<OS_dispatch_queue>"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v36@0:8@16i24@28
v32@0:8@16i24i28
v28@0:8@16B24
v36@0:8@16@24i32
v32@0:8@16@24
v28@0:8@16i24
v20@0:8i16
v20@0:8B16
v36@0:8@"CTXPCServiceSubscriptionContext"16i24@"CTDataConnectionStatus"28
v32@0:8@"CTXPCServiceSubscriptionContext"16i24i28
v28@0:8@"CTXPCServiceSubscriptionContext"16B24
v36@0:8@"CTXPCServiceSubscriptionContext"16@"NSNumber"24i32
v24@0:8@"CTXPCServiceSubscriptionContext"16
v24@0:8@"CTServiceDescriptor"16
v32@0:8@"CTXPCServiceSubscriptionContext"16@"NSArray"24
v32@0:8@"CTXPCServiceSubscriptionContext"16@"CTDataStatus"24
v28@0:8@"CTXPCServiceSubscriptionContext"16i24
v24@0:8@"CTDataSettings"16
v24@0:8@"CTDataConnectionStatus"16
v24@0:8@"CTDataStatusBasic"16
v24@0:8@"CTDataStatus"16
v24@0:8@"CTTetheringStatus"16
v28@0:8@"CTTetheringStatus"16i24
v32@0:8@"CTXPCServiceSubscriptionContext"16@"CTServiceDisconnectionStatus"24
v28@0:8@"CTServiceDescriptor"16B24
v28@0:8@"PCInterfaceMonitor"16i24
v24@0:8@"PCInterfaceMonitor"16
v24@0:8^v16
v24@0:8B16B20
v24@0:8:16
v28@0:8B16@20
@"NSRecursiveLock"
@"NSMapTable"
^{__CFSet=}
@"PCSimpleTimer"
@"NSString"
@"NSTimer"
@"CoreTelephonyClient"
@"CTXPCServiceSubscriptionContext"
v32@0:8^d16^{__CFString=}24
@40@0:8@16@24@32
B24@0:8d16
d16@0:8
v24@0:8d16
{_PCTimeRange=dd}16@0:8
v32@0:8{_PCTimeRange=dd}16
i16@0:8
@40@0:8@"NSDictionary"16@"NSString"24@"NSString"32
@"NSDictionary"16@0:8
v32@0:8d16I24B28
v28@0:8d16I24
v28@0:8d16i24
@20@0:8i16
@"NSDate"
@"NSObject<OS_os_log>"
{_PCTimeRange="start"d"duration"d}
v32@0:8d16Q24
v24@0:8@"CUTPowerMonitor"16
@56@0:8@16@24@32:40@48
@56@0:8d16@24@32:40@48
@64@0:8d16@24Q32@40:48@56
@68@0:8d16@24Q32@40:48@56B64
@24@0:8C16C20
C16@0:8
v20@0:8C16
B32@0:8d16@24
@60@0:8i16q20Q28@36@44@52
@44@0:8i16@20@28@36
@52@0:8i16q20Q28@36@44
@36@0:8i16@20@28
@24@0:8q16
v24@0:8i16B20
v32@0:8d16q24
v40@0:8q16d24d32
v28@0:8i16@20
q16@0:8
v24@0:8q16
@"<PCConnectionManagerDelegate>"
@"NSRunLoop"
[2@"<PCGrowthAlgorithm>"]
@"<PCGrowthAlgorithm>"
@"PCPersistentTimer"
v56@0:8B16@20d28B36@40^v48
@56@0:8B16@20d28B36@40^v48
@24@0:8@16
i24@0:8@16
B20@0:8B16
B20@0:8i16
^{__CFString=}16@0:8
v24@0:8Q16
@"<PCInterfaceUsabilityMonitorDelegate>"16@0:8
v24@0:8@"<PCInterfaceUsabilityMonitorDelegate>"16
@32@0:8q16@24
v24@0:8@?16
@"CUTWeakReference"
@"NSObject<OS_nw_parameters>"
@"NSObject<OS_nw_path_evaluator>"
@"NSObject<OS_nw_interface>"
^{__CFString=}
@"NSMutableArray"
v28@0:8@"NSObject<PCInterfaceUsabilityMonitorProtocol>"16i24
v24@0:8@"NSObject<PCInterfaceUsabilityMonitorProtocol>"16
@"PCInterfaceUsabilityMonitor"
v36@0:8i16@20@28
@"<PCInterfaceUsabilityMonitorProtocol>"
@32@0:8@16^@24
B32@0:8@16^@24
@"NSHashTable"
@"CTBundle"
@"NSDictionary"
@24@0:8r*16
@60@0:8d16@24@32:40@48B56
v28@0:8d16B24
@"PCDispatchTimer"
@48@0:8@16@24:32Q40
@"NSObject<OS_dispatch_source>"
