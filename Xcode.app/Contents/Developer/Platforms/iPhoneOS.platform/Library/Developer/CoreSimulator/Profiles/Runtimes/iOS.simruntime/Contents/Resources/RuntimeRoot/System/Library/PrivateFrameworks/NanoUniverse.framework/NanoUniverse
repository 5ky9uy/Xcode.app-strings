@(#)PROGRAM:NanoUniverse  PROJECT:NanoTimeKit-1
Nl=!
?${5@
~Aff
NUni
atlas
c10d
c11d
-[NUAnimation initWithAnimatable:values:count:key:]
/Library/Caches/com.apple.xbs/Sources/NanoTimeKitCompanion_Sim/NanoTimeKitCompanion-1759.63.2/NanoUniverse/NUAnimation.m
false
v8@?0
NanoUniverse
nanouniverse
earth
sprite
luna
+[NURenderer sharedInstanceWithPixelFormat:]
/Library/Caches/com.apple.xbs/Sources/NanoTimeKitCompanion_Sim/NanoTimeKitCompanion-1759.63.2/NanoUniverse/NURenderer.m
((NURenderer*)__sharedInstance)->_viewMtlPixelFormat == pixFmt
-[NURenderer draw3DWithEncoder:state:spheroid:resources:]
stype != NUProgramTypeSprite
earth_vsh
earth_fsh
sprite_vsh
sprite_fsh
luna_vsh
luna_fsh
-[NURenderer _createPipelineForProgramType:fromLibrary:librarySPI:]
!"NURenderer: Unknown pipeline program type"
_resources.pipelines[programType] != nil
_NULoadMtlTextureFromBacking
opt.planes == 6
missing artwork for %@
providing artwork for %@ at %@
_loadMtlTextureFromMemory:%@ failed to get backing
v not at right position
t not at right position
NUSpheroid
NUAnimatable
NSObject
NURotatable
NUScene
NUView
CLKUIQuadViewDelegate
CLKUIResourceProviderDelegate
NUMetalQuad
NUAnimation
_NUGeometry
NUResources
NURenderer
init
collectionType
position
_updateCamera
_updatePositionFromAngle
date:toRotation:toAngle:toLight:toDistance:toRadius:
orbit
initWithDate:body:
longitude
calculateGeocentricDirectionForSunX:Y:Z:date:
alCity
latitude
setCenterCoordinate:animated:
initWithAnimatable:value:key:
addAnimation:
removeAllAnimationsFor:withKeys:
focus
isAnimating:forKeys:
spheroidOfType:
homeCoordinate
setCamera:target:up:roll:
setCenterCoordinate:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
animatedFloatForKey:
setAnimatedFloat:forKey:
setHomeCoordinate:
centerCoordinate
T{CLLocationCoordinate2D=dd},N
initWithScene:parent:type:
setDistanceScale:
date:toCameraPosition:toCameraTarget:
updateSunLocationForDate:
centerOnCity:
setCenter:
type
parent
distance
setDistance:
distanceScale
angle
setAngle:
rotation
setRotation:
opacity
setOpacity:
colorize
setColorize:
radius
radiusScale
setRadiusScale:
light
programType
spriteType
setSpriteType:
isVisible
setVisible:
isFacing
setFacing:
.cxx_destruct
_scene
_visible
_facing
_distance
_distanceScale
_angle
_rotation
_opacity
_radius
_radiusScale
_type
_parent
_light
_programType
_spriteType
_colorize
_position
_homeCoordinate
_centerCoordinate
TQ,R,N,V_type
T@"NUSpheroid",R,N,V_parent
Tf,N,V_distance
Tf,N,V_distanceScale
Tf,N,V_angle
Tf,N,V_rotation
Tf,N,V_opacity
T,N,V_colorize
Tf,R,N,V_radius
Tf,N,V_radiusScale
T,R,N,V_position
T,R,N,V_light
TQ,R,N,V_programType
TQ,N,V_spriteType
T{CLLocationCoordinate2D=dd},N,V_homeCoordinate
T{CLLocationCoordinate2D=dd},N,V_centerCoordinate
visible
TB,N,GisVisible,V_visible
facing
TB,N,GisFacing,V_facing
addObject:
setSnap:
date
countByEnumeratingWithState:objects:count:
frameInterval
update:
indexOfObject:
addIndex:
observer
universeAnimationFinished:
count
removeObjectsAtIndexes:
animatable
removeAnimation:
removeObject:
initWithAnimatable:from:to:key:
updateSunLocationAnimated:
initWithSphereoids:currentDateBlock:
snap
acceptableFrameInterval
updateFromDateIfNeeded
isUpdatable
setUpdatable:
spheroids
target
setFocus:
setOrbit:
roll
setRoll:
minFrameInterval
setMinFrameInterval:
backgroundType
setBackgroundType:
projectionType
setProjectionType:
setCollectionType:
currentDateBlock
setCurrentDateBlock:
yearsSince1970
_spheroids
_snap
_animations
_date
_currentDateBlock
_isUpdateNeeded
_isUpdatable
_orbit
_roll
_minFrameInterval
_yearsSince1970
_focus
_backgroundType
_projectionType
_collectionType
_target
T,R,N,V_target
T,R,N,V_up
T@"NUSpheroid",&,N,V_focus
Tf,N,V_orbit
Tf,N,V_roll
Ti,N,V_minFrameInterval
Ti,R,N
TQ,D,N
TQ,N,V_backgroundType
TQ,N,V_projectionType
TQ,N,V_collectionType
T@"NSArray",R,C,N,V_spheroids
T@"NSDate",R,D,N
T@?,C,N,V_currentDateBlock
updatable
TB,N,GisUpdatable,V_isUpdatable
Tf,R,N,V_yearsSince1970
timeIntervalSince1970
initWithFrame:
sharedRenderingContext
device
quadViewWithFrame:
setDebugIdentifier:
addSubview:
textureWithProviderDelegate:uuid:
bundleForClass:
initWithTextures:
initWithResources:
addQuad:
setPaused:
setDelegate:
removeAllQuads
sharedInstance
purgeAllUnused
dealloc
isOpaque
setOpaque:
layoutSubviews
bounds
setFrame:
setPreferredFramesPerSecond:
isPaused
renderSynchronouslyWithImageQueueDiscard:inGroup:
scene
setScene:
viewWillDisplay:forTime:
pathForResource:ofType:
atlasBackingWithArt:uuid:
quadViewWillDisplay:forTime:
provideAtlasBacking:
resourceProviderKey
quadView
setAnimationFrameInterval:
startAnimation
stopAnimation
delegate
_device
_quadView
_resourceProviderKey
_resources
_quad
_bundle
_delegate
T@"NUScene",&,N
T@"<NUViewDelegate>",W,N,V_delegate
frame
colorPixelFormat
sharedInstanceWithPixelFormat:
renderWithScene:viewport:resources:encoder:
setupForQuadView:
renderForDisplayWithEncoder:
prepareForTime:
_baseTime
_renderer
_viewport
_isPrepared
T@"NUScene",&,N,V_scene
initWithAnimatable:from:to:ctrl1:ctrl2:key:
apply:
initWithAnimatable:values:count:key:
startTime
setStartTime:
duration
setDuration:
delay
setDelay:
setFrameInterval:
from
setFrom:
setTo:
isRepeat
setRepeat:
function
setFunction:
setKey:
setAnimatable:
setObserver:
_ctrl1
_ctrl2
_values
_valuesCount
_prevTime
_pauseTime
_repeat
_paused
_startTime
_duration
_delay
_frameInterval
_function
_key
_animatable
_observer
_from
Tf,N,V_startTime
Tf,N,V_duration
Tf,N,V_delay
Ti,N,V_frameInterval
T,N,V_from
T,N,V_to
repeat
TB,N,GisRepeat,V_repeat
paused
TB,N,GisPaused,V_paused
TQ,N,V_function
TQ,N,V_key
T@"<NUAnimatable>",W,N,V_animatable
T@"<NUAnimationObserver>",W,N,V_observer
dictionary
numberWithInteger:
setObject:forKey:
objectForKey:
addVertices:count:
addIndices:count:vbase:
vertices
indices
vcount
icount
_vertices
_indices
_vcount
_icount
Tr^{_NUVertex=},R,N,V_vertices
Tr^S,R,N,V_indices
Ti,R,N,V_vcount
Ti,R,N,V_icount
textures
_textures
T@"NSArray",R,N,V_textures
initWithPixelFormat:
sharedDevice
_initPrograms
_initHemi
_initDepthStencilState
defaultCenter
_asyncDeallocInstance
addObserver:selector:notificationName:
removeObserver:notificationName:
newBufferWithBytes:length:options:
objectAtIndexedSubscript:
atlas
bind:slot:
setFrontFacingWinding:
setCullMode:
bindAssetArt:withEncoder:resources:toSlot:
setVertexBytes:length:atIndex:
setFragmentBytes:length:atIndex:
drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:
setVertexBuffer:offset:atIndex:
setRenderPipelineState:
drawSpriteWithEncoder:state:spheroid:resources:
draw3DWithEncoder:state:spheroid:resources:
setLabel:
newFunctionWithName:
setVertexFunction:
setFragmentFunction:
colorAttachments
setPixelFormat:
setBlendingEnabled:
setRgbBlendOperation:
setAlphaBlendOperation:
setSourceRGBBlendFactor:
setSourceAlphaBlendFactor:
setDestinationRGBBlendFactor:
setDestinationAlphaBlendFactor:
newRenderPipelineStateWithDescriptor:error:
newDefaultLibraryWithBundle:error:
_createPipelineForProgramType:fromLibrary:librarySPI:
path
atlasBackingWithBytes:length:mmapFile:uuid:
isMainThread
_deallocInstance
performSelectorOnMainThread:withObject:waitUntilDone:
_mtlDevice
_viewMtlPixelFormat
_octahedronGeomRange
_quadGeomRange
initWithLength:
mutableBytes
structure
texture2DDescriptorWithPixelFormat:width:height:mipmapped:
setUsage:
setStorageMode:
newTextureWithDescriptor:
textureCubeDescriptorWithPixelFormat:size:mipmapped:
replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
24@0:8Q16
v40@0:816Q32
v36@0:8{CLLocationCoordinate2D=dd}16B32
{CLLocationCoordinate2D=dd}16@0:8
v32@0:8{CLLocationCoordinate2D=dd}16
@40@0:8@16@24Q32
v16@0:8
v20@0:8f16
v40@0:8@16^24^32
v64@0:8@16^f24^f32^40^f48^f56
v24@0:8@16
v32@0:8{CGPoint=dd}16
f16@0:8
16@0:8
v32@0:816
v24@0:8Q16
v20@0:8B16
@"NUScene"
@"NUSpheroid"
{CLLocationCoordinate2D="latitude"d"longitude"d}
@32@0:8Q16@?24
i16@0:8
B32@0:8@16Q24
v32@0:8@16Q24
@24@0:8Q16
v68@0:8163248f64
v20@0:8i16
@?16@0:8
v24@0:8@?16
@"NSMutableArray"
@"NSDate"
v32@0:8@16d24
v32@0:8@"CLKUIQuadView"16d24
@24@0:8@16
@"CLKUIAtlasBacking"24@0:8@"NSString"16
@"CLKUIResourceProviderKey"16@0:8
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v28@0:8B16@20
@"CLKDevice"
@"CLKUIQuadView"
@"CLKUIResourceProviderKey"
@"NUResources"
@"NUMetalQuad"
@"NSBundle"
@"<NUViewDelegate>"
B24@0:8d16
@"NURenderer"
{CGSize="width"d"height"d}
@44@0:8@16^24i32Q36
@96@0:8@1624405672Q88
@64@0:8@162440Q56
@48@0:8@1624Q40
B20@0:8f16
[75]
@"<NUAnimatable>"
@"<NUAnimationObserver>"
i28@0:8r^{_NUVertex=}16i24
i32@0:8r^S16i24i28
r^{_NUVertex=}16@0:8
r^S16@0:8
^{_NUVertex=}
@"NSArray"
v48@0:8Q16@24@32Q40
v48@0:8@16r^{NURendererState={NUViewport=iiii}QQf{_NUGeometryRange=ii}{_NUGeometryRange=ii}(float4x4=[16f][4[4f]][4])(float4x4=[16f][4[4f]][4])(float4x4=[16f][4[4f]][4])}24@32@40
v56@0:8@16{NUViewport=iiii}24@40@48
v40@0:8Q16@24@32
@"<MTLDevice>"
{NURendererResources="pipelines"[3@"<MTLRenderPipelineState>"]"vertexBuffer"@"<MTLBuffer>""indexBuffer"@"<MTLBuffer>"}
{_NUGeometryRange="start"i"count"i}
