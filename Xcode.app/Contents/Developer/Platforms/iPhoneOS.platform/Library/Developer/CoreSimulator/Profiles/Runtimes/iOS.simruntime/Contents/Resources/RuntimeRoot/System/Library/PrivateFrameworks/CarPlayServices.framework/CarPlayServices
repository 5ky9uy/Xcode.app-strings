@(#)PROGRAM:CarPlayServices  PROJECT:CarPlayApp-1
CRSIconLayoutPageIcons
CRSIconLayoutStatePages
CRSIconLayoutHiddenIcons
CRSIconLayoutOEMIconLabel
CRSIconLayoutDisplaysOEMIcon
CRSIconLayoutRows
CRSIconLayoutColumns
v32@?0@"CRSApplicationIcon"8Q16^B24
v32@?0@"CRSIconLayoutPage"8Q16^B24
  page: %@
CRSLogForCategory
CRSLogging.m
category < CRSLoggingCategoryCount
v8@?0
CarPlayServices
IconLayout
InCall
Session
com.apple.CarPlayServices
CRSSiriPreferences
v16@?0q8
v12@?0B8
CRSIconLayoutServiceErrorDomain
com.apple.CarPlayServices.CRSIconLayoutService
com.apple.CarPlay
v16@?0@"<BSServiceConnectionListenerConfiguring>"8
com.apple.private.CarPlayServices.icon-layout
v16@?0@"BSServiceConnection"8
v16@?0@"<BSServiceConnectionConfiguring>"8
CarPlayIconLayoutService
Invalid request for a nil vehicle ID
iconOrder
hiddenIcons
displaysOEMIcon
OEMIconLabel
rows
columns
com.apple.cardisplay.nowplaying
com.apple.cardisplay.OEM
com.apple.mobilecal
com.apple.iBooks
com.apple.news
com.apple.CarPlayApp.service
com.apple.CarPlayApp.icon-layout
com.apple.CarPlayApp.session
CARApplicationCategoryKey
CARApplicationBundleIdentifierKey
CARApplicationLocalizedNameKey
com.apple.CarPlayServices.icon-layout.callback
@"NSString"16@?0@"CRSApplicationIcon"8
v24@?0@"CRSIconLayoutState"8@"NSError"16
audio
calling
messaging
navigation
automaker
parking
charging
quick ordering
productivity
fueling
driving task
v32@?0@"NSString"8Q16^B24
v32@?0@"NSArray"8Q16^B24
v16@?0@"NSDictionary"8
v24@?0@"NSString"8@"NSError"16
@"CRSApplicationIcon"16@?0@"NSString"8
v24@?0@"CRSApplicationIcon"8@"NSError"16
com.apple.CarPlayApp.non-launching-service
com.apple.CarPlayApp.Dashboard
com.apple.CarPlayApp.InstrumentCluster
com.apple.CarPlayServices.CRSInCallAssertionService
com.apple.CarPlay.non-launching
%@-%i-%u
com.apple.CarPlayServices.CRSAppHistoryService
com.apple.private.CarPlayServices.app-history
CRSAppActivationDidChangeNotification
CRSAppActivationDidChangeOldCategoryKey
CRSAppActivationDidChangeNewCategoryKey
com.apple.CarPlayServices.app-history.callback
v24@?0@"NSArray"8@"NSError"16
uiContext
viewAreas
cornerMasks
focusTransfer
h.264Level5.1
mainBuffered
altScreen
enhancedSiri
hevc
v24@?0@"NSNumber"8@"NSError"16
com.apple.CarPlayServices.CRSSessionService
com.apple.CarPlayServices.session.transaction
CarPlaySession
com.apple.CarPlayApp.in-call
CRSApplicationIconBundleID
CRSApplicationIconImageData
CRSApplicationIconImageScale
CRSApplicationIconDisplayName
com.apple.CarPlayApp.app-history-service
Activating listener! %@
Received connection! %@
Process does not have the required entitlement: %@
Connection invalidated! %@
Activating connection... %@
Received request for icon state for vehicle: %{public}@
Received request to set icon state for vehicle: %{public}@ to %@
Invalid request to set icon state for nil vehicle ID
Received request to reset icon state for vehicle: %{public}@
Invalid request to reset icon state for nil vehicle ID
Received request for icon information for %{public}@, vehicle: %{public}@
Connection activated! %@
Connection interrupted! Reactivating... %@
Activating connection! %@
Invalidating connection! %@
[CRSIconLayoutController] connection interrupted! Reactivating... %@
Fetching icon state for vehicle: %{public}@
Exporting icon state for vehicle by certificate serial.
Ignoring app %@ with categories %@
Unable to determine a category for %@
Setting icon state for vehicle: %{public}@
Resetting icon state for vehicle: %{public}@
Fetching icon information for bundle ID: %@, vehicle: %{public}@
Notifying new observer of activation request!
Received connection! %@, reason: %@
Received presentation request!
Number of assertions preventing banners: %ld
Connection count: %ld
No more connections, requesting dismissal
Requesting presentation!
Received request for UI context states.
Received request for session UI context states.
Received request for session feature keys.
Received request to set session feature keys.
[CRSAppHistoryController] connection interrupted! Reactivating... %@
Received UI Context fetch.
Received session UI Context fetch.
Received session Echo Context fetch.
[CRSAppHistoryController] invalidating connection.
No more connections! Releasing idle exit transaction...
CRSIconLayoutPage
NSSecureCoding
NSCoding
CRSIconLayoutState
CRSSiriPreferencesObserver
NSObject
CRSSiriPreferences
CRSIconLayoutService
BSServiceConnectionListenerDelegate
CRSIconLayoutClientToServerInterface
BSInvalidatable
CRSSessionController
CRSSessionServerToClientInterface
CRSAdditions
CRSIconLayoutServerToClientInterface
CRSIconLayoutServiceSpecification
CRSSessionClientToServerInterface
CRSSessionSpecification
CRSIconLayoutController
CarPlayServices
CRSInCallAssertionServiceObserver
CRSInCallAssertionService
CRSInCallClientToServerInterface
CRSInCallAssertion
CRSInCallServerToClientInterface
CRSAppHistoryService
CRSAppHistoryClientToServerInterface
CRSAppHistoryController
CRSAppHistoryServerToClientInterface
CRSSessionService
CRSInCallAssertionSpecification
CRSApplicationIcon
DashBoard
CRSAppHistoryServiceSpecification
init
copy
description
stringWithString:
icons
componentsJoinedByString:
appendFormat:
setWithObjects:
decodeObjectOfClasses:forKey:
encodeObject:forKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
initWithIcons:
.cxx_destruct
_icons
T@"NSArray",R,N,V_icons
pages
count
arrayWithCapacity:
bundleIdentifier
addObject:
enumerateObjectsUsingBlock:
arrayWithArray:
countByEnumeratingWithState:objects:count:
decodeObjectOfClass:forKey:
decodeBoolForKey:
unsignedIntegerValue
hiddenIcons
oemIconLabel
displaysOEMIcon
encodeBool:forKey:
rows
numberWithUnsignedInteger:
columns
initWithPages:hiddenIcons:
iconOrder
setOemIconLabel:
setDisplaysOEMIcon:
setRows:
setColumns:
_displaysOEMIcon
_pages
_hiddenIcons
_oemIconLabel
_rows
_columns
T@"NSString",&,N,V_oemIconLabel
TB,N,V_displaysOEMIcon
TQ,N,V_rows
TQ,N,V_columns
T@"NSArray",R,N,V_pages
T@"NSArray",R,N,V_hiddenIcons
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
preferences:carPlayAnnounceEnablementTypeChanged:
preferences:announceNotificationsInCarPlayTemporarilyDisabledChanged:
preferences:autoSendInCarPlayEnabledChanged:
preferences:autoSendInHeadphonesEnabledChanged:
preferences:mainAutoSendEnabledChanged:
queue
initWithProtocol:callbackQueue:
defaultCenter
_siriPreferencesDidChange
addObserver:selector:name:object:
observers
addObserver:
removeObserver:
cachedCarPlayAnnounceEnablementType
sharedPreferences
setAnnounceNotificationsInCarPlayType:
cachedAnnounceNotificationsInCarPlayTemporarilyDisabled
cachedAutoSendInCarPlayEnabled
cachedAutoSendInHeadphonesEnabled
cachedMainAutoSendEnabled
setAnnounceNotificationsInCarPlayTemporarilyDisabled:
clearAnnounceNotificationsInCarPlayTemporarilyDisabled
_updateCarPlayAnnounceEnablementType:
getAnnounceNotificationsInCarPlayTypeWithCompletion:
_updateAnnounceNotificationsInCarPlayTemporarilyDisabled:
getAnnounceNotificationsInCarPlayTemporarilyDisabledWithCompletion:
_updateAutoSendInCarPlayEnabled:
getMessageWithoutConfirmationInCarPlayEnabledWithCompletion:
_updateAutoSendInHeadphonesEnabled:
getMessageWithoutConfirmationHeadphonesEnabledWithCompletion:
_updateMainAutoSendEnabled:
getMessageWithoutConfirmationEnabledWithCompletion:
setCachedAnnounceNotificationsInCarPlayTemporarilyDisabled:
setCachedCarPlayAnnounceEnablementType:
setCachedAutoSendInCarPlayEnabled:
setCachedAutoSendInHeadphonesEnabled:
setCachedMainAutoSendEnabled:
carPlayAnnounceEnablementType
setCarPlayAnnounceEnablementType:
announceNotificationsInCarPlayTemporarilyDisabled
autoSendInCarPlayEnabled
autoSendInHeadphonesEnabled
mainAutoSendEnabled
setAutoSendInCarPlayEnabled:
setAutoSendInHeadphonesEnabled:
setMainAutoSendEnabled:
_autoSendInCarPlayEnabled
_autoSendInHeadphonesEnabled
_mainAutoSendEnabled
_cachedAnnounceNotificationsInCarPlayTemporarilyDisabled
_cachedAutoSendInCarPlayEnabled
_cachedAutoSendInHeadphonesEnabled
_cachedMainAutoSendEnabled
_queue
_cachedCarPlayAnnounceEnablementType
_observers
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
Tq,N,V_cachedCarPlayAnnounceEnablementType
TB,N,V_cachedAnnounceNotificationsInCarPlayTemporarilyDisabled
TB,N,V_cachedAutoSendInCarPlayEnabled
TB,N,V_cachedAutoSendInHeadphonesEnabled
TB,N,V_cachedMainAutoSendEnabled
T@"CARObserverHashTable",R,N,V_observers
Tq,N
TB,N
TB,N,V_autoSendInCarPlayEnabled
TB,N,V_autoSendInHeadphonesEnabled
TB,N,V_mainAutoSendEnabled
serial
hashTableWithOptions:
setDomain:
identifier
setService:
setDelegate:
listenerWithConfigurator:
activate
invalidate
remoteProcess
hasEntitlement:
serviceQuality
setServiceQuality:
interface
setInterface:
setInterfaceTarget:
_connectionQueue_removeConnection:
setInvalidationHandler:
connectionQueue
setTargetQueue:
configureConnection:
_connectionQueue_addConnection:
_newInvalidRequestErrorDueToNilVehicleID
delegate
iconLayoutService:dataProviderForVehicleID:
getIconStateWithCompletion:
setIconState:
resetIconState
getApplicationIconInformationForBundleID:completion:
connections
temporaryWatchdogMonitoringAssertion
sharedInstance
assertWatchdogEnabledForLimitedDurationForReason:
setTemporaryWatchdogMonitoringAssertion:
removeObject:
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
listener:didReceiveConnection:withContext:
fetchIconStateForVehicleID:completion:
setIconState:forVehicleID:
resetIconStateForVehicleID:
fetchApplicationIconInformationForBundleIdentifier:vehicleID:completion:
initWithDelegate:
listener
setListener:
setConnectionQueue:
setConnections:
_delegate
_listener
_connectionQueue
_connections
_temporaryWatchdogMonitoringAssertion
T@"<CRSIconLayoutServiceDelegate>",W,N,V_delegate
T@"BSServiceConnectionListener",&,N,V_listener
T@"NSObject<OS_dispatch_queue>",&,N,V_connectionQueue
T@"NSHashTable",&,N,V_connections
T@"<BSInvalidatable>",&,N,V_temporaryWatchdogMonitoringAssertion
endpointForMachName:service:instance:
connectionWithEndpoint:
setActivationHandler:
setInterruptionHandler:
process
setProcess:
connection
setConnection:
_lock
_lock_invalidated
_process
_connection
T@"RBSProcessHandle",&,N,V_process
T@"BSServiceConnection",&,N,V_connection
componentsSeparatedByString:
lastObject
crs_applicationBundleIdentifier
userInteractive
interfaceWithIdentifier:
protocolForProtocol:
setServer:
setClient:
T@"NSString",R,C,N
T@"BSServiceQuality",R,C,N
T@"BSServiceInterface",R,C,N
dealloc
remoteTarget
setObject:forKeyedSubscript:
bs_map:
numberWithBool:
callbackQueue
array
objectForKeyedSubscript:
isEqualToString:
applicationProxyForIdentifier:
requiredInfoKeys
objectsForInfoDictionaryKeys:
requiredEntitlementKeys
entitlementValuesForKeys:
declarationForBundleIdentifier:info:entitlements:
effectivePolicyForAppDeclaration:
applicationCategory
localizedNameForContext:
initWithBundleIdentifier:
arrayWithObjects:count:
exportIconStateForCertificateSerial:categories:completion:
setIconOrder:hiddenIcons:forVehicleID:
setCallbackQueue:
_callbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_callbackQueue
serviceIdentifier
crs_endpointForInstance:
crs_endpointForCarDisplayMonitor
configurationWithEndpoint:
crs_endpointForCarInstrumentsDisplayMonitor
configurationForCarDisplayMonitor
configurationForCarInstrumentsDisplayMonitor
_init
addObserver:notifyIfNeeded:
inCallAssertionServiceDidPresent:
inCallAssertionServiceDidDismiss:
inCallAssertionService:didSetBannersEnabled:
initWithProtocol:
activatedConnections
instance
currentContext
objectForKey:
bannersAllowedConnections
boolValue
setObject:forKey:
containsObject:
removeObjectForKey:
presentInCallService
setAllowsBanners:
setObservers:
setActivatedConnections:
setBannersAllowedConnections:
_activatedConnections
_bannersAllowedConnections
T@"CARObserverHashTable",&,N,V_observers
T@"NSMutableDictionary",&,N,V_connections
T@"NSHashTable",&,N,V_activatedConnections
T@"NSHashTable",&,N,V_bannersAllowedConnections
reason
stringWithFormat:
_handleConnectionActivated
_handleConnectionInterrupted
initWithReason:
allowsBanners
setReason:
_lock_pendingPresent
_lock_presented
_lock_activated
_lock_allowsBanners
_reason
T@"NSString",C,N,V_reason
appHistoryDataProviderForService:
getUIContextStatesWithCompletion:
getSessionUIContextStatesWithCompletion:
getSessionEchoContextStatesWithCompletion:
getSessionFeatureKeysWithCompletion:
setSessionFeatureKeys:completion:
fetchUIContextStatesWithCompletion:
fetchSessionUIContextStatesWithCompletion:
fetchSessionEchoContextStatesWithCompletion:
fetchSessionFeatureKeysWithCompletion:
T@"<CRSAppHistoryServiceDelegate>",W,N,V_delegate
serviceClass
availableFeatureKeys
T@"NSArray",R,N
fetchUIContextsWithCompletion:
fetchSessionUIContextsWithCompletion:
fetchSessionEchoContextsWithCompletion:
idleExitTransaction
setIdleExitTransaction:
watchdogMonitoringAssertion
setWatchdogMonitoringAssertion:
_idleExitTransaction
_watchdogMonitoringAssertion
T@"NSObject<OS_os_transaction>",&,N,V_idleExitTransaction
T@"<BSInvalidatable>",&,N,V_watchdogMonitoringAssertion
decodeFloatForKey:
iconImageData
iconImageScale
encodeFloat:forKey:
localizedDisplayName
setIconImageData:
setIconImageScale:
setLocalizedDisplayName:
_bundleIdentifier
_iconImageData
_iconImageScale
_localizedDisplayName
T@"NSData",&,N,V_iconImageData
Td,N,V_iconImageScale
T@"NSString",&,N,V_localizedDisplayName
T@"NSString",R,C,N,V_bundleIdentifier
serviceName
dashboardEndpoint
serviceWithEndpoint:
dashboardService
B16@0:8
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@16@0:8
v16@0:8
@"NSArray"
@32@0:8@16@24
v20@0:8B16
Q16@0:8
v24@0:8Q16
@"NSString"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16q24
v28@0:8@16B24
v32@0:8@"CRSSiriPreferences"16q24
v28@0:8@"CRSSiriPreferences"16B24
q16@0:8
v24@0:8q16
@"NSObject<OS_dispatch_queue>"
@"CARObserverHashTable"
v40@0:8@16@24@32
v40@0:8@"BSServiceConnectionListener"16@"BSServiceConnection<BSServiceConnectionHost>"24@"<BSXPCDecoding>"32
v32@0:8@16@?24
v32@0:8@16@24
v40@0:8@16@24@?32
v32@0:8@"NSString"16@?<v@?@"CRSIconLayoutState"@"NSError">24
v32@0:8@"CRSIconLayoutState"16@"NSString"24
v24@0:8@"NSString"16
v40@0:8@"NSString"16@"NSString"24@?<v@?@"CRSApplicationIcon"@"NSError">32
@"<CRSIconLayoutServiceDelegate>"
@"BSServiceConnectionListener"
@"NSHashTable"
@"<BSInvalidatable>"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"RBSProcessHandle"
@"BSServiceConnection"
v40@0:8@16Q24@?32
v24@0:8@"CRSInCallAssertionService"16
v28@0:8@"CRSInCallAssertionService"16B24
Vv24@0:8@16
Vv24@0:8@"NSNumber"16
@"NSMutableDictionary"
v24@0:8@?16
v24@0:8@?<v@?@"NSArray<__NSString__>"@"NSError">16
v32@0:8@"NSArray<__NSString__>"16@?<v@?@"NSNumber"@"NSError">24
@"<CRSAppHistoryServiceDelegate>"
@"NSObject<OS_os_transaction>"
d16@0:8
v24@0:8d16
@"NSData"
@(#)PROGRAM:CarPlayServices  PROJECT:CarPlayApp-1
CRSIconLayoutPageIcons
CRSIconLayoutStatePages
CRSIconLayoutHiddenIcons
CRSIconLayoutOEMIconLabel
CRSIconLayoutDisplaysOEMIcon
CRSIconLayoutRows
CRSIconLayoutColumns
v32@?0@"CRSApplicationIcon"8Q16^B24
v32@?0@"CRSIconLayoutPage"8Q16^B24
  page: %@
CRSLogForCategory
CRSLogging.m
category < CRSLoggingCategoryCount
v8@?0
CarPlayServices
IconLayout
InCall
Session
com.apple.CarPlayServices
CRSSiriPreferences
v16@?0q8
v12@?0B8
CRSIconLayoutServiceErrorDomain
com.apple.CarPlayServices.CRSIconLayoutService
com.apple.CarPlay
v16@?0@"<BSServiceConnectionListenerConfiguring>"8
com.apple.private.CarPlayServices.icon-layout
v16@?0@"BSServiceConnection"8
v16@?0@"<BSServiceConnectionConfiguring>"8
CarPlayIconLayoutService
Invalid request for a nil vehicle ID
iconOrder
hiddenIcons
displaysOEMIcon
OEMIconLabel
rows
columns
com.apple.cardisplay.nowplaying
com.apple.cardisplay.OEM
com.apple.mobilecal
com.apple.iBooks
com.apple.news
com.apple.CarPlayApp.service
com.apple.CarPlayApp.icon-layout
com.apple.CarPlayApp.session
CARApplicationCategoryKey
CARApplicationBundleIdentifierKey
CARApplicationLocalizedNameKey
com.apple.CarPlayServices.icon-layout.callback
@"NSString"16@?0@"CRSApplicationIcon"8
v24@?0@"CRSIconLayoutState"8@"NSError"16
audio
calling
messaging
navigation
automaker
parking
charging
quick ordering
productivity
fueling
driving task
v32@?0@"NSString"8Q16^B24
v32@?0@"NSArray"8Q16^B24
v16@?0@"NSDictionary"8
v24@?0@"NSString"8@"NSError"16
@"CRSApplicationIcon"16@?0@"NSString"8
v24@?0@"CRSApplicationIcon"8@"NSError"16
com.apple.CarPlayApp.non-launching-service
com.apple.CarPlayApp.Dashboard
com.apple.CarPlayApp.InstrumentCluster
com.apple.CarPlayServices.CRSInCallAssertionService
com.apple.CarPlay.non-launching
%@-%i-%u
com.apple.CarPlayServices.CRSAppHistoryService
com.apple.private.CarPlayServices.app-history
CRSAppActivationDidChangeNotification
CRSAppActivationDidChangeOldCategoryKey
CRSAppActivationDidChangeNewCategoryKey
com.apple.CarPlayServices.app-history.callback
v24@?0@"NSArray"8@"NSError"16
uiContext
viewAreas
cornerMasks
focusTransfer
h.264Level5.1
mainBuffered
altScreen
enhancedSiri
hevc
v24@?0@"NSNumber"8@"NSError"16
com.apple.CarPlayServices.CRSSessionService
com.apple.CarPlayServices.session.transaction
CarPlaySession
com.apple.CarPlayApp.in-call
CRSApplicationIconBundleID
CRSApplicationIconImageData
CRSApplicationIconImageScale
CRSApplicationIconDisplayName
com.apple.CarPlayApp.app-history-service
Activating listener! %@
Received connection! %@
Process does not have the required entitlement: %@
Connection invalidated! %@
Activating connection... %@
Received request for icon state for vehicle: %{public}@
Received request to set icon state for vehicle: %{public}@ to %@
Invalid request to set icon state for nil vehicle ID
Received request to reset icon state for vehicle: %{public}@
Invalid request to reset icon state for nil vehicle ID
Received request for icon information for %{public}@, vehicle: %{public}@
Connection activated! %@
Connection interrupted! Reactivating... %@
Activating connection! %@
Invalidating connection! %@
[CRSIconLayoutController] connection interrupted! Reactivating... %@
Fetching icon state for vehicle: %{public}@
Exporting icon state for vehicle by certificate serial.
Ignoring app %@ with categories %@
Unable to determine a category for %@
Setting icon state for vehicle: %{public}@
Resetting icon state for vehicle: %{public}@
Fetching icon information for bundle ID: %@, vehicle: %{public}@
Notifying new observer of activation request!
Received connection! %@, reason: %@
Received presentation request!
Number of assertions preventing banners: %ld
Connection count: %ld
No more connections, requesting dismissal
Requesting presentation!
Received request for UI context states.
Received request for session UI context states.
Received request for session feature keys.
Received request to set session feature keys.
[CRSAppHistoryController] connection interrupted! Reactivating... %@
Received UI Context fetch.
Received session UI Context fetch.
Received session Echo Context fetch.
[CRSAppHistoryController] invalidating connection.
No more connections! Releasing idle exit transaction...
CRSIconLayoutPage
NSSecureCoding
NSCoding
CRSIconLayoutState
CRSSiriPreferencesObserver
NSObject
CRSSiriPreferences
CRSIconLayoutService
BSServiceConnectionListenerDelegate
CRSIconLayoutClientToServerInterface
BSInvalidatable
CRSSessionController
CRSSessionServerToClientInterface
CRSAdditions
CRSIconLayoutServerToClientInterface
CRSIconLayoutServiceSpecification
CRSSessionClientToServerInterface
CRSSessionSpecification
CRSIconLayoutController
CarPlayServices
CRSInCallAssertionServiceObserver
CRSInCallAssertionService
CRSInCallClientToServerInterface
CRSInCallAssertion
CRSInCallServerToClientInterface
CRSAppHistoryService
CRSAppHistoryClientToServerInterface
CRSAppHistoryController
CRSAppHistoryServerToClientInterface
CRSSessionService
CRSInCallAssertionSpecification
CRSApplicationIcon
DashBoard
CRSAppHistoryServiceSpecification
decodeObjectOfClass:forKey:
setClient:
initWithProtocol:callbackQueue:
setObject:forKey:
addObserver:selector:name:object:
setTargetQueue:
hashTableWithOptions:
initWithProtocol:
getAnnounceNotificationsInCarPlayTypeWithCompletion:
numberWithBool:
copy
endpointForMachName:service:instance:
getUIContextStatesWithCompletion:
containsObject:
serviceName
sharedPreferences
userInteractive
getMessageWithoutConfirmationInCarPlayEnabledWithCompletion:
removeObjectForKey:
applicationProxyForIdentifier:
setAnnounceNotificationsInCarPlayType:
dictionaryWithObjects:forKeys:count:
hasEntitlement:
configureConnection:
iconLayoutService:dataProviderForVehicleID:
configurationWithEndpoint:
localizedNameForContext:
getAnnounceNotificationsInCarPlayTemporarilyDisabledWithCompletion:
encodeFloat:forKey:
assertWatchdogEnabledForLimitedDurationForReason:
objectsForInfoDictionaryKeys:
encodeObject:forKey:
getSessionUIContextStatesWithCompletion:
getMessageWithoutConfirmationHeadphonesEnabledWithCompletion:
setInvalidationHandler:
applicationCategory
interfaceWithIdentifier:
unsignedIntegerValue
decodeBoolForKey:
resetIconState
serviceIdentifier
declarationForBundleIdentifier:info:entitlements:
setServiceQuality:
arrayWithObjects:count:
getSessionFeatureKeysWithCompletion:
requiredInfoKeys
objectForKeyedSubscript:
protocolForProtocol:
serviceClass
setWithObjects:
componentsSeparatedByString:
connectionWithEndpoint:
getMessageWithoutConfirmationEnabledWithCompletion:
objectForKey:
setIconState:
setInterruptionHandler:
errorWithDomain:code:userInfo:
removeObject:
addObject:
effectivePolicyForAppDeclaration:
listenerWithConfigurator:
defaultCenter
bs_map:
appendFormat:
lastObject
setService:
remoteTarget
countByEnumeratingWithState:objects:count:
arrayWithCapacity:
setActivationHandler:
appHistoryDataProviderForService:
encodeBool:forKey:
serviceWithEndpoint:
getIconStateWithCompletion:
setDomain:
setInterfaceTarget:
instance
getSessionEchoContextStatesWithCompletion:
requiredEntitlementKeys
serial
componentsJoinedByString:
stringWithString:
enumerateObjectsUsingBlock:
setServer:
stringWithFormat:
decodeObjectOfClasses:forKey:
boolValue
arrayWithArray:
isEqualToString:
currentContext
count
getApplicationIconInformationForBundleID:completion:
array
setObject:forKeyedSubscript:
entitlementValuesForKeys:
setInterface:
remoteProcess
decodeFloatForKey:
numberWithUnsignedInteger:
init
description
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
initWithIcons:
icons
.cxx_destruct
_icons
T@"NSArray",R,N,V_icons
initWithPages:hiddenIcons:
iconOrder
pages
hiddenIcons
oemIconLabel
setOemIconLabel:
displaysOEMIcon
setDisplaysOEMIcon:
rows
setRows:
columns
setColumns:
_displaysOEMIcon
_pages
_hiddenIcons
_oemIconLabel
_rows
_columns
T@"NSString",&,N,V_oemIconLabel
TB,N,V_displaysOEMIcon
TQ,N,V_rows
TQ,N,V_columns
T@"NSArray",R,N,V_pages
T@"NSArray",R,N,V_hiddenIcons
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
preferences:carPlayAnnounceEnablementTypeChanged:
preferences:announceNotificationsInCarPlayTemporarilyDisabledChanged:
preferences:autoSendInCarPlayEnabledChanged:
preferences:autoSendInHeadphonesEnabledChanged:
preferences:mainAutoSendEnabledChanged:
_siriPreferencesDidChange
addObserver:
removeObserver:
carPlayAnnounceEnablementType
setCarPlayAnnounceEnablementType:
announceNotificationsInCarPlayTemporarilyDisabled
autoSendInCarPlayEnabled
autoSendInHeadphonesEnabled
mainAutoSendEnabled
setAnnounceNotificationsInCarPlayTemporarilyDisabled:
clearAnnounceNotificationsInCarPlayTemporarilyDisabled
_updateAnnounceNotificationsInCarPlayTemporarilyDisabled:
_updateCarPlayAnnounceEnablementType:
_updateAutoSendInCarPlayEnabled:
_updateAutoSendInHeadphonesEnabled:
_updateMainAutoSendEnabled:
setAutoSendInCarPlayEnabled:
setAutoSendInHeadphonesEnabled:
setMainAutoSendEnabled:
queue
cachedCarPlayAnnounceEnablementType
setCachedCarPlayAnnounceEnablementType:
cachedAnnounceNotificationsInCarPlayTemporarilyDisabled
setCachedAnnounceNotificationsInCarPlayTemporarilyDisabled:
cachedAutoSendInCarPlayEnabled
setCachedAutoSendInCarPlayEnabled:
cachedAutoSendInHeadphonesEnabled
setCachedAutoSendInHeadphonesEnabled:
cachedMainAutoSendEnabled
setCachedMainAutoSendEnabled:
observers
_autoSendInCarPlayEnabled
_autoSendInHeadphonesEnabled
_mainAutoSendEnabled
_cachedAnnounceNotificationsInCarPlayTemporarilyDisabled
_cachedAutoSendInCarPlayEnabled
_cachedAutoSendInHeadphonesEnabled
_cachedMainAutoSendEnabled
_queue
_cachedCarPlayAnnounceEnablementType
_observers
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
Tq,N,V_cachedCarPlayAnnounceEnablementType
TB,N,V_cachedAnnounceNotificationsInCarPlayTemporarilyDisabled
TB,N,V_cachedAutoSendInCarPlayEnabled
TB,N,V_cachedAutoSendInHeadphonesEnabled
TB,N,V_cachedMainAutoSendEnabled
T@"CARObserverHashTable",R,N,V_observers
Tq,N
TB,N
TB,N,V_autoSendInCarPlayEnabled
TB,N,V_autoSendInHeadphonesEnabled
TB,N,V_mainAutoSendEnabled
listener:didReceiveConnection:withContext:
fetchIconStateForVehicleID:completion:
setIconState:forVehicleID:
resetIconStateForVehicleID:
fetchApplicationIconInformationForBundleIdentifier:vehicleID:completion:
invalidate
initWithDelegate:
_connectionQueue_addConnection:
_connectionQueue_removeConnection:
_newInvalidRequestErrorDueToNilVehicleID
delegate
setDelegate:
listener
setListener:
connectionQueue
setConnectionQueue:
connections
setConnections:
temporaryWatchdogMonitoringAssertion
setTemporaryWatchdogMonitoringAssertion:
_delegate
_listener
_connectionQueue
_connections
_temporaryWatchdogMonitoringAssertion
T@"<CRSIconLayoutServiceDelegate>",W,N,V_delegate
T@"BSServiceConnectionListener",&,N,V_listener
T@"NSObject<OS_dispatch_queue>",&,N,V_connectionQueue
T@"NSHashTable",&,N,V_connections
T@"<BSInvalidatable>",&,N,V_temporaryWatchdogMonitoringAssertion
process
setProcess:
connection
setConnection:
_lock
_lock_invalidated
_process
_connection
T@"RBSProcessHandle",&,N,V_process
T@"BSServiceConnection",&,N,V_connection
crs_applicationBundleIdentifier
identifier
serviceQuality
interface
T@"NSString",R,C,N
T@"BSServiceQuality",R,C,N
T@"BSServiceInterface",R,C,N
dealloc
exportIconStateForCertificateSerial:categories:completion:
setIconOrder:hiddenIcons:forVehicleID:
callbackQueue
setCallbackQueue:
_callbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_callbackQueue
crs_endpointForInstance:
crs_endpointForCarDisplayMonitor
crs_endpointForCarInstrumentsDisplayMonitor
configurationForCarDisplayMonitor
configurationForCarInstrumentsDisplayMonitor
inCallAssertionServiceDidPresent:
inCallAssertionServiceDidDismiss:
inCallAssertionService:didSetBannersEnabled:
sharedInstance
presentInCallService
setAllowsBanners:
_init
addObserver:notifyIfNeeded:
setObservers:
activatedConnections
setActivatedConnections:
bannersAllowedConnections
setBannersAllowedConnections:
_activatedConnections
_bannersAllowedConnections
T@"CARObserverHashTable",&,N,V_observers
T@"NSMutableDictionary",&,N,V_connections
T@"NSHashTable",&,N,V_activatedConnections
T@"NSHashTable",&,N,V_bannersAllowedConnections
initWithReason:
activate
allowsBanners
_handleConnectionActivated
_handleConnectionInterrupted
reason
setReason:
_lock_pendingPresent
_lock_presented
_lock_activated
_lock_allowsBanners
_reason
T@"NSString",C,N,V_reason
fetchUIContextStatesWithCompletion:
fetchSessionUIContextStatesWithCompletion:
fetchSessionEchoContextStatesWithCompletion:
setSessionFeatureKeys:completion:
fetchSessionFeatureKeysWithCompletion:
T@"<CRSAppHistoryServiceDelegate>",W,N,V_delegate
availableFeatureKeys
T@"NSArray",R,N
fetchUIContextsWithCompletion:
fetchSessionUIContextsWithCompletion:
fetchSessionEchoContextsWithCompletion:
idleExitTransaction
setIdleExitTransaction:
watchdogMonitoringAssertion
setWatchdogMonitoringAssertion:
_idleExitTransaction
_watchdogMonitoringAssertion
T@"NSObject<OS_os_transaction>",&,N,V_idleExitTransaction
T@"<BSInvalidatable>",&,N,V_watchdogMonitoringAssertion
initWithBundleIdentifier:
bundleIdentifier
iconImageData
setIconImageData:
iconImageScale
setIconImageScale:
localizedDisplayName
setLocalizedDisplayName:
_bundleIdentifier
_iconImageData
_iconImageScale
_localizedDisplayName
T@"NSData",&,N,V_iconImageData
Td,N,V_iconImageScale
T@"NSString",&,N,V_localizedDisplayName
T@"NSString",R,C,N,V_bundleIdentifier
dashboardEndpoint
dashboardService
B16@0:8
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@16@0:8
v16@0:8
@"NSArray"
@32@0:8@16@24
v20@0:8B16
Q16@0:8
v24@0:8Q16
@"NSString"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16q24
v28@0:8@16B24
v32@0:8@"CRSSiriPreferences"16q24
v28@0:8@"CRSSiriPreferences"16B24
q16@0:8
v24@0:8q16
@"NSObject<OS_dispatch_queue>"
@"CARObserverHashTable"
v40@0:8@16@24@32
v40@0:8@"BSServiceConnectionListener"16@"BSServiceConnection<BSServiceConnectionHost>"24@"<BSXPCDecoding>"32
v32@0:8@16@?24
v32@0:8@16@24
v40@0:8@16@24@?32
v32@0:8@"NSString"16@?<v@?@"CRSIconLayoutState"@"NSError">24
v32@0:8@"CRSIconLayoutState"16@"NSString"24
v24@0:8@"NSString"16
v40@0:8@"NSString"16@"NSString"24@?<v@?@"CRSApplicationIcon"@"NSError">32
@"<CRSIconLayoutServiceDelegate>"
@"BSServiceConnectionListener"
@"NSHashTable"
@"<BSInvalidatable>"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"RBSProcessHandle"
@"BSServiceConnection"
v40@0:8@16Q24@?32
v24@0:8@"CRSInCallAssertionService"16
v28@0:8@"CRSInCallAssertionService"16B24
Vv24@0:8@16
Vv24@0:8@"NSNumber"16
@"NSMutableDictionary"
v24@0:8@?16
v24@0:8@?<v@?@"NSArray<__NSString__>"@"NSError">16
v32@0:8@"NSArray<__NSString__>"16@?<v@?@"NSNumber"@"NSError">24
@"<CRSAppHistoryServiceDelegate>"
@"NSObject<OS_os_transaction>"
d16@0:8
v24@0:8d16
@"NSData"
