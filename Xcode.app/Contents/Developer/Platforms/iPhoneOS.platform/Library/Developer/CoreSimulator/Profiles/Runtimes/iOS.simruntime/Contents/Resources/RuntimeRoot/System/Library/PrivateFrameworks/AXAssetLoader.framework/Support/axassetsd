initWithName:policy:context:block:
init
setTaskBlock:
setPolicy:
setName:
setContext:
context
environment
name
policy
assetType
finished
stringWithFormat:
assetControllerWithPolicy:qosClass:shouldRefreshForAssetInstallNotifications:
setUserInitiated:
addObserver:
assetController
removeObserver:
setAssetController:
restorationState
_restorationExitStatusForResult:
store
updatePhase:exitStatus:saveToStore:
phase
finishWithResult:
setFinished:
shouldDefer
_completeWithResult:
taskWithName:policy:context:block:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
assetController:didFinishRefreshingAssets:wasSuccessful:error:
assetController:asset:downloadProgressTotalWritten:totalExpected:isStalled:expectedTimeRemaining:
assetController:didFinishDownloadingAsset:wasSuccessful:error:hasRemainingDownloads:
assetController:didFinishPurgingAssets:wasSuccessful:error:
assetController:willUpdateCatalogForPolicy:
assetController:didUpdateCatalogForPolicy:wasSuccessful:error:
_deferIfNeeded
taskBlock
setRestorationState:
.cxx_destruct
_finished
_taskBlock
_name
_policy
_restorationState
_assetController
_context
T@?,C,N,V_taskBlock
T@"NSString",&,N,V_name
T@"AXAssetPolicy",&,N,V_policy
T@"AXAssetController",&,N,V_assetController
T@"AXManagedAssetTaskContext",&,N,V_context
TB,N,V_finished
T@"AXManagedAssetTaskRestorationState",&,N,V_restorationState
_cleanUnusedCompactResources
sharedInstance
voiceOverLanguageRotorItems
selectedSpeechVoiceIdentifiersForSource:
countByEnumeratingWithState:objects:count:
resourceWithVoiceId:
primaryLanguage
isEqualToString:
containsObject:
type
footprint
deleteResourceWithVoiceId:
taskIdentifier
dictionaryWithObjects:forKeys:count:
invokeTaskById:arguments:
initWithPolicy:context:
_refreshCatalog:
overrideTimeout
refreshAssetsByForceUpdatingCatalog:updatingCatalogIfNeeded:catalogRefreshOverrideTimeout:completion:
initWithPolicy:forceCatalogRefresh:context:
setOverrideTimeout:
_overrideTimeout
T@"NSNumber",&,N,V_overrideTimeout
initWithTargetSerialQueue:
setTimer:
setCompletion:
isMigrationComplete
isAssetCatalogInstalled
_retryAndBackOff
refreshResourcesCacheForManagerType:
_migrateNashvilleToMaui
_callCompletion:
completion
selectedSpeechVoiceIdentifiersWithLanguageSource
dictionary
allKeys
objectForKeyedSubscript:
updatedIdentifierForLegacyIdentifier:withLanguageCode:
isInstalled
lowercaseString
setObject:forKeyedSubscript:
downloadResourceWithVoiceId:userInitiated:
integerValue
boolValue
count
writeIsMigrationCompleteToPreferences:
writeVoiceIdentifiersToMigrateToPreferences:
attemptCount
setAttemptCount:
numberWithInteger:
timer
afterDelay:processBlock:
downloadSamplesIfNecessary
taskGroupIdentifier
triggers
run:
_completion
_attemptCount
_timer
T@?,C,N,V_completion
Tq,N,V_attemptCount
T@"AXDispatchTimer",&,N,V_timer
processInfo
objectForKey:
assetWithPolicy:
arrayWithObjects:count:
registerManagedAssets:
registerManagedAsset:
physicalMemory
registerTask:
initWithLaunchActivityIdentifier:
start
withFirstBootType
readResourceCacheVersionFromPreferences
trigger
arguments
voiceId
legacyIdentifierForUpdatedIdentifierDuringMigration:
_completeMigrationForLegacyResource:withDownloadedResource:
_purgeLegacyResource:
_cleanupVoiceSubscriptions
_resourceInUseByOtherTechnologies:
resourceCompletedMigration:
numberWithUnsignedInteger:
firstObject
selectedSpeechVoiceIdentifiers
hasPrefix:
initWithPolicy:
assetTypeSuffix
UTF8String
array
_dequeueNextTask
launchActivityIdentifier
initWithActivity:
state
updateState:
contextWithActivity:
enqueueCleanseUnusedCompactResourcesTaskWithContext:
enqueueAssetUpdateTaskWithContext:
_enqueueTask:
addObject:
removeObserver:forKeyPath:context:
objectAtIndex:
addObserver:forKeyPath:options:context:
removeObjectAtIndex:
observeValueForKeyPath:ofObject:change:context:
checkInAssetUpdateXPCActivity
enqueueCatalogRefreshTaskWithOverrideTimeout:forceCatalogRefresh:context:
lastXCPActivityHandlerExecutionTime
setLastXCPActivityHandlerExecutionTime:
_taskQueue
_taskQueueSignal
_enqueuedTasks
_activeTask
_taskLock
_lastXCPActivityHandlerExecutionTime
Td,N,V_lastXCPActivityHandlerExecutionTime
date
_initWithPhase:lastExitStatus:date:taskID:assetType:
valueForKey:forAssetType:
idleStateWithTaskID:assetType:
setPhase:
setLastExitStatus:
setTaskID:
setAssetType:
setDate:
lastExitStatus
taskID
_restorationDictionary
setValue:forKey:forAssetType:
restoreOrCreateStateFromStore:taskID:assetType:
_restorationKey
isIdle
updatePhase:saveToStore:
previousTaskWasSuccessful
previousTaskDidFail
previousTaskWasDeferred
_taskID
_assetType
_phase
_lastExitStatus
_date
T@"NSString",&,N,V_taskID
T@"NSString",&,N,V_assetType
T@"NSString",&,N,V_phase
T@"NSString",&,N,V_lastExitStatus
T@"NSDate",&,N,V_date
gender
numberWithLong:
mutableCopy
copy
languages
removeObject:
removeObjectsInArray:
enumerateObjectsUsingBlock:
setAutoDownloadedVoiceAssets:
getAutoDownloadedVoiceAssets:
downloadResourceWithVoiceId:
withNotificationName:
resourceNeedsMigration:
invokeWithArguments:
_init
setEnvironment:
setActivity:
activity
contextWithXPCClient
_environment
_activity
TQ,N,V_environment
T@"AXAssetsXPCActivity",&,N,V_activity
TB,R,N
reconcileCachedComponents
didCompleteWithStatus:
stringWithCString:encoding:
_handleNotification:
handleFirstBoot:
registeredTasks
launchActivityId
setLaunchActivity:
_handleXPCActivity:taskClass:
_getBootTime
isEqualToDate:
_tasksForFirstBoot
_dispatchTask:completion:
_anonymousTaskForId:withArguments:
_tasksForNotification:
notificationName
defaultCStringEncoding
cStringUsingEncoding:
numberWithUnsignedLongLong:
setArguments:
initWithTrigger:
withAnonymousInvokation:
activityTransactionManager
simpleTaskStarted:
taskDispatcherQueue
inflightTasks
_taskQueueForTask:
setCompletionStatus:
completionStatus
simpleTaskFinished:
synchronous
taskCompletionWaitingQueue
launchActivity
taskQueues
dateWithTimeIntervalSince1970:
setTaskQueues:
setRegisteredTasks:
setInflightTasks:
setTaskDispatcherQueue:
notificationQueue
setNotificationQueue:
setTaskCompletionWaitingQueue:
_taskQueues
_registeredTasks
_inflightTasks
_taskDispatcherQueue
_notificationQueue
_taskCompletionWaitingQueue
T@"NSMutableDictionary",&,N,V_taskQueues
T@"NSMutableSet",&,N,V_registeredTasks
T@"NSMutableSet",&,N,V_inflightTasks
T@"NSObject<OS_dispatch_queue>",&,N,V_taskDispatcherQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_notificationQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_taskCompletionWaitingQueue
intValue
purgeAndReloadAllComponents
_debugNameForXPCActivityState:
deferIfNeeded
T@"NSObject<OS_xpc_object>",&,N,V_activity
Tq,R,N
isRefreshingAssets
hasCompletedRefreshingAssets
isPurgingAssets
hasCompletedPurgingAssets
isDownloadingAssets
restoreOrCreateStateFromStore:assetType:
hasCompletedDownloadingAssets
setType:
setLaunchActivityId:
setNotificationName:
withLaunchActivityId:
copyWithZone:
_type
_launchActivityId
_launchActivity
_notificationName
_arguments
TQ,N,V_type
T@"NSString",&,N,V_launchActivityId
T@"AXAssetsXPCActivity",&,N,V_launchActivity
T@"NSString",&,N,V_notificationName
T@"NSDictionary",&,N,V_arguments
setTrigger:
dealloc
T@"AXSimpleAssetTaskTrigger",&,N
TQ,N
transaction
setTransaction:
_transaction
_trigger
_completionStatus
T@"NSObject<OS_os_transaction>",&,N,V_transaction
T@"AXSimpleAssetTaskTrigger",&,N,V_trigger
TQ,N,V_completionStatus
initWithMachServiceName:
_setQueue:
setDelegate:
resume
valueForEntitlement:
processIdentifier
_xpcQueue_acceptNewConnection:
setExportedInterface:
setExportedObject:
setRemoteObjectInterface:
invalidate
setInterruptionHandler:
setInvalidationHandler:
refreshAssetCatalogForAssetTypeHandler
updateAssetForAssetTypeHandler
refreshAssetCatalogForAssetType:withOverrideTimeout:forceCatalogRefresh:
updateAssetForAssetType:
invokeSimpleTaskById:arguments:
runFirstBootTasks:
listener:shouldAcceptNewConnection:
startServer
setRefreshAssetCatalogForAssetTypeHandler:
setUpdateAssetForAssetTypeHandler:
_xpcListener
_xpcQueue
_refreshAssetCatalogForAssetTypeHandler
_updateAssetForAssetTypeHandler
T@?,C,N,V_refreshAssetCatalogForAssetTypeHandler
T@?,C,N,V_updateAssetForAssetTypeHandler
setActivityTransactionManager:
setManagedAssets:
setXpcServer:
_refreshAssetCatalogForAssetType:withOverrideTimeout:forceCatalogRefresh:
_updateAssetForAssetType:
managedAssets
addObjectsFromArray:
xpcServer
_managedAssetForAssetType:
resetResourcesCache
resetInMemoryAssetCatalogs
willBecomeIdle:completion:
_activityTransactionManager
_xpcServer
_managedAssets
T@"AXAssetsXPCServer",&,N,V_xpcServer
T@"NSMutableArray",&,N,V_managedAssets
T@"AXAssetsActivityTransactionManager",&,N,V_activityTransactionManager
setAutomaticallyCancelPendingBlockUponSchedulingNewBlock:
_queue_addActiveReason:
_queue_removeActiveReason:
cancel
_queue_handleInactiveTimerFired
afterDelay:processBlock:cancelBlock:
delegate
_queue
_queue_activeReasons
_queue_activityTimer
_queue_transitioningToIdle
_delegate
T@"<AXAssetsActivityTransactionManagerDelegate>",W,N,V_delegate
recordAssetRefreshEventForAssetType:
_housekeeping_op1_refreshAssets
localizedDescription
properties
catalogBuildVersion
_housekeeping_op2_purgeAssets:
_housekeeping_op3_downloadAssets:
installedAssets:
assetsToPurgeFromInstalledAssets:withRefreshedAssets:
purgeAssets:completion:
daemonShouldDownloadInBackgroundIfNeeded
assetsToDownloadFromRefreshedAssets:
updateCatalogBuildVersion:
downloadAssets:successStartBlock:
reloadVoicesForBundleIdentifierHash:
XPCClientReq
XPCActivity
%@<%p> [%@:%@:%@ - Status:%@]
Finished
Active
Success
Failed
Deferred
Idle
com.apple.ax.TTSResource.cleanse.LaunchActivity
Cleanse Compact Resources
v16@?0@"AXManagedAssetTask"8
Catalog Refresh
force-update
attempt to update
retryQueue
ar-001
ar-SA
Enabled
RotorItem
v8@?0
v24@?0@"NSArray"8@"NSError"16
MallocStackLogging
AXDeviceSupportsVoiceTriggers
AXDeviceSupportsAudiogramIngestion
com.apple.accessibility.AccessibilityUIServer
<Unknown Class>
%@<%p> [%@]
v16@?0@"NSObject<OS_xpc_object>"8
finished
%@_RestorationState
Phase
LastExitStatus
Date
Phase: '%@'. LastExitStatus: '%@'. Timestamp: '%@'
InformSiriVoiceSubscriptionsTaskFailed
Adding
Removing
v32@?0@8Q16^B24
InformSiriVoiceSubscriptionsTaskSuccessful
v16@?0@"NSArray"8
com.apple.ttsasset.NewAssetNotification
com.apple.trial.NamespaceUpdate.SIRI_TEXT_TO_SPEECH
com.apple.MobileAsset.VoiceServices.GryphonVoice.ma.new-asset-installed
com.apple.MobileAsset.VoiceServices.CustomVoice.ma.new-asset-installed
UpdateSiriVoicesTaskSuccessful
com.apple.LaunchServices.ApplicationsChanged
ComponentChangeTaskSuccessful
simpleTaskDispatcher
simpleTaskDispatcher_note
simpleTaskDispatcher_completion
com.apple.notifyd.matching
SystemBootTime
notifyArg
v16@?0Q8
com.apple.MobileAsset.TTSAXResourceModelAssets.ma.new-asset-installed
UpdateResourcesTaskSuccessful
AXAssetsXPCActivity<%p> [State: %@] [xpc_activity_t<%p> %@]
Checking In
Waiting
Running
Deferring
Continuing
Done
Unknown
UpdateAsset
Refreshing Assets
Purging Assets
Downloading Assets
kAXResourceCacheTaskGroup
kAXResource
kAXVoiceId
kAXVoiceSubscriptionAddition
kAXActionType
%@<%p> ID=%@ Group=%@ Trigger=%@
com.apple.SynthesisProvider.updatedVoices
com.apple.accessibility.axassetsd.xpc
com.apple.accessibility.axassetsd.service
com.apple.accessibility.axassets
application-identifier
com.apple.springboard
com.apple.Preferences
com.apple.Carousel
com.apple.NanoSettings
com.apple.TVSettings
com.apple.PineBoard
v28@?0@"NSString"8@"NSNumber"16B24
v16@?0@"NSString"8
CleanupSiriVoiceSubscriptionsTaskFailed
AXAssetsActivityTransactionManager
Update Assets
generic.download.error
v12@?0B8
RefreshSSEVoicesForBundlePrefixTaskSuccessful
Will complete task [%@] with result : %@
task [%@] being asked to complete, but is already fiinished!
%@ - Checking _deferIfNeeded: Already finixhed, returning true 
%@ - Checking _deferIfNeeded: Returning true
%@ - Checking _deferIfNeeded: Returning false
AXCleanseUnusedCompactResourcesTask: Cleaning up unused compact resources
AXCleanseUnusedCompactResourcesTask: Deleting resource with id: %@
AXCleanseUnusedCompactResourcesTask: Will invoke AXUpdateResourcesSimpleTask now
AXCatalogRefreshTask: Will %@ catalog now. timeout=%@
AXMigrateResTask: Task did begin
AXMigrateResTask: Migration not complete
AXMigrateResTask: No installed catalog yet. Calling _retryAndBackOff
AXMigrateResTask: Installed catalog was found. Will refresh cache for type: TTSAXResourceManagerTypeAccessibility
AXMigrateResTask: Will begin migration of Nashville to Maui
AXMigrateResTask: Task finished
AXMigrateResTask: Beginning nashville to maui migration with selected voices: %@
AXMigrateResTask: Downloading maui id [%@] for legacy id [%@]
AXMigrateResTask: Swapping on disk nashville VO id [%@] for maui id [%@] with language [%@]
AXMigrateResTask: Will invoke AXCleanupSiriVoiceSubscriptionsSimpleTask now
AXMigrateResTask: Will force-refresh catalog for AXTTSResourceAssetPolicy. timeout=60s
AXMigrateResTask: Error refreshing catalog during migration. %@
AXMigrateResTask: Mobile asset daemon was not ready on attempt %@, will try again in %@ seconds.
AXMigrateResTask: Catalog found after force update. Will refresh cache for type: TTSAXResourceManagerTypeAccessibility
AXMigrateResTask: Will attempt to download samples if neccessary
Installing SIGTERM handler.
Received SIGTERM. Terminating now.
axasstsd is starting up. MallocStackLogging=%@
axassetsd will begin servicing requests
AXUpdateCacheVersionSimpleTask: Task did begin
AXUpdateCacheVersionSimpleTask: Mismatch in cache versions. Refreshing resources and updating cache version.
AXUpdateCacheVersionSimpleTask: Task did complete
AXCompleteResMigrationTask: Task did begin
AXCompleteResMigrationTask: Completed migration
AXCompleteResMigrationTask: Task finished
AXCompleteResMigrationTask: Will purge legacy voice: %@
AXCompleteResMigrationTask: Purged legacy vocalizer asset with identifier: %@
AXCompleteResMigrationTask: Did not purge legacy vocalizer asset: %@ because it was being used by another technology
AXCompleteResMigrationTask: Will complete migration of legacy resource: '%@' to downloaded resource: '%@'
AXCompleteResMigrationTask: Swapping downloaded maui id [%@] for legacy id [%@]
AXCompleteResMigrationTask: Resource %@ is in use by %@ clients: %@
AXCompleteResMigrationTask: Will invoke AXCleanupSiriVoiceSubscriptionsSimpleTask to clean up voice subscriptions now
AXCompleteResMigrationTask: Failed to clean up nashville identifier: %@
XPC Activity handler called. %@. Asset:%@
XPC Activity handler called with unexpected state. %@. Asset:%@
[AXManagedAsset: %@]: enqeueing task: [%@]. Total queued: %lu
[AXManagedAsset: %@]: dequeuing next task: [%@]. Total queued: %lu
[AXManagedAsset: %@]: Did finish dequeueing all queued tasks. (confirming queue count: %lu)
[AXManagedAsset: %@]: Notified task did finish: %@
AXInformSiriSubsTask: Task did begin
AXInformSiriSubsTask: Unable to subscribe to nil voiceId
AXInformSiriSubsTask: No resource found for voiceId: %@
AXInformSiriSubsTask: Task finishing with failure
AXInformSiriSubsTask: %@ lang: %@ gender: %@ type: %@ name: %@ voice to active siri voice list
AXInformSiriSubsTask: Asking VSSpeechSynthesizer for auto-downloaded voices
AXInformSiriSubsTask: Starting with voices: %@
AXInformSiriSubsTask: Error: attempted to add a neural voice on a device that does not support neural voices, %@
AXInformSiriSubsTask: Removing siri auto download voice: %@
AXInformSiriSubsTask: Setting Siri auto-downloaded voice[%@]: %@
AXInformSiriSubsTask: Task finishing
AXDownloadTTSResourceTask: Task did begin
AXDownloadTTSResourceTask: Task failed, no identifier given
AXDownloadTTSResourceTask: Task did begin download for identifier %@
AXDownloadTTSResourceTask: Task did finish
AXUpdateSiriTask: Task did begin
AXUpdateSiriTask: Will refresh cache for type: TTSAXResourceManagerTypeSiri
AXUpdateSiriTask: Resource changes after refresh: %ld
AXUpdateSiriTask: Resource needs migration: '%@'. Will invoke AXCompleteResourceMigrationSimpleTask now.
AXUpdateSiriTask: Task finishing
AXCompChangeTask: Task did begin
AXCompChangeTask: Will reconcile cached components for TTSSynthesisProviderVoiceManager
AXCompChangeTask: Task finishing
AXCompChangeTask: Will invoke AXUpdateResourcesSimpleTask now
Recieved notification %@
Performing first boot tasks
Finished first boot tasks
SmpTskMgr::Dispatching: %@
SmpTskMgr::Running: %@
SmpTskMgr::Finishing: Status=%ld Task:%@
SmpTskMgr::Completed: %@, executing post-task action
SmpTskMgr::CleanUp: %@
SmpTskMgr::Executing synchronously and blocking group: %@
SmpTskMgr::Executing async and not blocking group: %@
AXUpdateResTask: Task did begin
AXUpdateResTask: Will purge / reload all components
AXUpdateResTask: Will refresh cache for type: %ld
AXUpdateResTask: Resource changes after refresh: %ld
AXUpdateResTask: Resource needs migration: '%@'. Will invoke AXCompleteResourceMigrationSimpleTask now.
AXUpdateResTask: Siri resource being deleted. Will invoke AXInformSiriVoiceSubscriptionsSimpleTask to begin update-subscription task now. %@
AXUpdateResTask: Task finishing
XPC Activity state change failed: '%@' -> '%@'. %@
XPC Activity state change succeeded '%@' -> '%@'. %@
Asking if we should defer activity: %@. Defer: %ld
Deallocating task %@
Will begin listening for client connections
Rejecting connecting client with pid:(%d) appID:(%@). Missing required entitlement
Accepting new system connection from PID %d
Connection interrupted from PID %d
Connection invalidated from PID %d
Recieved xpc force run first boot actions message
Bootstrap complete. Will enter event loop.
Resetting TTSAXResourceManager caches and asset catalogs
Flushing CFPrefs caches
AXDeleteCompactResTask: Task did begin
AXDeleteCompactResTask: Unable to delete compact identifier %@ because it is in use by the system spoken language.
AXDeleteCompactResTask: Will delete resource: %@
AXDeleteCompactResTask: Will invoke task AXUpdateResourcesSimpleTask to update resources now
AXDeleteCompactResTask: Unable to delete compact identifier %@ because it is in use by Spoken Content: %i Switch Control: %i
AXDeleteCompactResTask: Task finishing
AXCleanupSiriSubsTask: Task did begin
AXCleanupSiriSubsTask: Asking VSSpeechSynthesizer for auto-downloaded voices
AXCleanupSiriSubsTask: Starting cleanup with voices: %@
AXCleanupSiriSubsTask: Removing unused Siri auto download voices: %@
AXCleanupSiriSubsTask: Setting Siri auto-downloaded voice[%@]: %@
AXCleanupSiriSubsTask: Task finishing
AXATM: Active reason already exists for adding: '%@'. This will almost certainly lead to unwanted os_transaction problems.
AXATM: Added active reason: '%@'. Reason count=%ld
AXATM: Will begin os_transaction
AXATM: Active reason does not exist for removal: '%@'. This will almost certainly lead to unwanted os_transaction problems
AXATM: Removed active reason: '%@'. Reason count=%ld
AXATM: No active reasons remain. Beginning timer of %.2f seconds before we go inactive
AXATM: Inactive timer fired. Will give delegate a chance to clean up and then transition to idle
AXATM: Delegate completed and no new reason added. Will end os_transaction now
AXATM: Delegate completed but active reason added while transitioning to idle. Keeping transaction alive
%@: Restoration state: 'hasCompletedRefreshingAssets'. Moving on to next step
%@: About to refresh assets. Restoration: %@
%@: Could not refresh assets: %@
%@: Build versions matched, no need to update assets.
%@: Restoration state: 'hasCompletedPurgingAssets'. Moving on to next step
%@: About to purge installed assets. Restoration: %@
%@: No assets found that need to be purged
%@: Assets that will be purged
%@:   %@
%@: Could not purge assets: %@
%@: Honoring asset policy to not proceed with downloads
%@: About to kick off downloadable assets. Restoration: %@
Kicking off downloads with refreshed assets:
  %@
%@: No new assets to download and build numbers didn't match, refreshing resource cache and updating build number %@
%@: No assets found that need to be downloaded
%@: Assets that will be downloaded
%@: Could not kick off asset downloads: %@
%@: Finished all subtasks with success.
%@: didFinishRefreshingAssets. success:%ld error:%@
%@: didFinishPurgingAssets. success:%ld error:%@
%@: Asset D/L progress: %lld / %lld. stalled: %ld. asset: %@
%@: Asset download finished: %@
%@: Asset download failed: %@ - %@
AXRefreshSSETask: Task did begin
AXRefreshSSETask: Will purge and reload all components for TTSSynthesisProviderVoiceManager
AXRefreshSSETask: Will purge and reload bundle hash %@
AXRefreshSSETask: Task finishing
AXManagedAssetTask
AXAssetControllerObserver
NSObject
AXCleanseUnusedCompactResourcesTask
AXCatalogRefreshTask
AXMigrateResourcesSimpleTask
AXUpdateCacheVersionSimpleTask
AXCompleteResourceMigrationSimpleTask
AXManagedAsset
AXManagedAssetTaskRestorationState
AXInformSiriVoiceSubscriptionsSimpleTask
AXDownloadTTSResourceTask
AXUpdateSiriResourcesSimpleTask
AXManagedAssetTaskContext
AXComponentChangeSimpleTask
AXSimpleAssetTaskManager
AXUpdateResourcesSimpleTask
AXAssetsXPCActivity
AXUpdateAssetTaskRestorationState
AXSimpleAssetTaskTrigger
NSCopying
AXSimpleAssetTaskBase
AXSimpleAssetTask
AXAssetsXPCServer
AXAssetsServiceInterface
NSXPCListenerDelegate
AXAssetsDaemon
AXAssetsActivityTransactionManagerDelegate
AXDeleteCompactResourceSimpleTask
AXCleanupSiriVoiceSubscriptionsSimpleTask
AXAssetsActivityTransactionManager
AXUpdateAssetTask
AXRefreshSSEVoicesForBundlePrefixSimpleTask
@48@0:8@16@24@32@?40
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v44@0:8@16@24B32@36
v60@0:8@16@24q32q40B48d52
v48@0:8@16@24B32@36B44
v32@0:8@16@24
v44@0:8@"AXAssetController"16@"NSArray"24B32@"NSError"36
v60@0:8@"AXAssetController"16@"AXAsset"24q32q40B48d52
v48@0:8@"AXAssetController"16@"AXAsset"24B32@"NSError"36B44
v32@0:8@"AXAssetController"16@"AXAssetPolicy"24
v44@0:8@"AXAssetController"16@"AXAssetPolicy"24B32@"NSError"36
v24@0:8Q16
@24@0:8Q16
@?16@0:8
v24@0:8@?16
v24@0:8@16
v20@0:8B16
v16@0:8
@"NSString"
@"AXAssetPolicy"
@"AXManagedAssetTaskRestorationState"
@"AXAssetController"
@"AXManagedAssetTaskContext"
@32@0:8@16@24
@36@0:8@16B24@28
@"NSNumber"
q16@0:8
v24@0:8q16
@"AXDispatchTimer"
@24@0:8@16
v36@0:8@16B24@28
v48@0:8@16@24@32^v40
d16@0:8
v24@0:8d16
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_dispatch_source>"
@"NSMutableArray"
@"AXManagedAssetTask"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@40@0:8@16@24@32
@56@0:8@16@24@32@40@48
v40@0:8@16@24@32
@"NSDate"
@"AXAssetsXPCActivity"
v24@0:8#16
v32@0:8@16@?24
v32@0:8@16#24
@24@0:8#16
@"NSMutableDictionary"
@"NSMutableSet"
B24@0:8q16
@24@0:8q16
@"NSObject<OS_xpc_object>"
@24@0:8^{_NSZone=}16
@"NSDictionary"
v24@0:8@?<v@?Q>16
@24@0:8@"AXSimpleAssetTaskTrigger"16
@"AXSimpleAssetTaskTrigger"16@0:8
v24@0:8@"AXSimpleAssetTaskTrigger"16
@"NSArray"16@0:8
@"NSObject<OS_os_transaction>"
@"AXSimpleAssetTaskTrigger"
v36@0:8@16@24B32
v36@0:8@"NSString"16@"NSNumber"24B32
v24@0:8@"NSString"16
v32@0:8@"NSString"16@"NSDictionary"24
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"NSXPCListener"
v32@0:8@"AXAssetsActivityTransactionManager"16@?<v@?>24
@"AXAssetsActivityTransactionManager"
@"AXAssetsXPCServer"
@"<AXAssetsActivityTransactionManagerDelegate>"
softlink:r:path:/System/Library/PrivateFrameworks/AccessibilityUtilities.framework/AccessibilityUtilities
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>AUAudioUnitViewsSupported</key>
<false/>
<key>BuildMachineOSBuild</key>
<string>20A241133</string>
<key>CFBundleDevelopmentRegion</key>
<string>en</string>
<key>CFBundleExecutable</key>
<string>axassetsd</string>
<key>CFBundleIdentifier</key>
<string>com.apple.accessibility.axassetsd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>axassetsd</string>
<key>CFBundlePackageType</key>
<string>APPL</string>
<key>CFBundleShortVersionString</key>
<string>1.0</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>20B71</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>16.1</string>
<key>DTSDKBuild</key>
<string>20B71</string>
<key>DTSDKName</key>
<string>iphonesimulator16.1.internal</string>
<key>DTXcode</key>
<string>1400</string>
<key>DTXcodeBuild</key>
<string>14A5270i</string>
<key>MinimumOSVersion</key>
<string>16.1</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
<integer>2</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.accessibility.axassetsd</string>
<key>com.apple.application-identifier</key>
<string>com.apple.accessibility.axassetsd</string>
<key>com.apple.private.assets.accessible-asset-types</key>
<array>
<string>com.apple.MobileAsset.SoundDetectionModels</string>
<string>com.apple.MobileAsset.AXIconVision</string>
<string>com.apple.MobileAsset.AXElementVision</string>
<string>com.apple.MobileAsset.AudiogramAssets</string>
<string>com.apple.MobileAsset.TTSAXResourceModelAssets</string>
<string>com.apple.MobileAsset.MagnifierAsset</string>
<string>com.apple.MobileAsset.Trial.Siri.SiriTextToSpeech</string>
</array>
<key>com.apple.private.assets.bypass-asset-types-check</key>
<true/>
<key>com.apple.private.assets.change-daemon-config</key>
<true/>
<key>com.apple.private.coreaudio.allow-au-extensions-daemon</key>
<true/>
<key>com.apple.security.exception.files.absolute-path.read-only</key>
<array>
<string>/private/var/MobileAsset/</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.voiceservices.tts</string>
<string>com.apple.accessibility.AccessibilityUIServer</string>
<string>com.apple.mobileasset.autoasset</string>
</array>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.Accessibility</string>
<string>com.apple.Accessibility.Assets</string>
<string>com.apple.voiceservices</string>
</array>
<key>com.apple.security.temporary-exception.audio-unit-host</key>
<true/>
<key>com.apple.security.temporary-exception.files.absolute-path.read-only</key>
<array>
<string>/private/var/MobileAsset/</string>
</array>
<key>com.apple.trial.client</key>
<array>
<string>406</string>
</array>
<key>inter-app-audio</key>
<true/>
</dict>
</plist>
purgeAssets:completion:
countByEnumeratingWithState:objects:count:
cancel
lowercaseString
intValue
localizedDescription
isInstalled
arrayWithObjects:count:
resourceWithVoiceId:
objectForKey:
count
installedAssets:
purgeAndReloadAllComponents
cStringUsingEncoding:
resourceNeedsMigration:
objectAtIndex:
UTF8String
array
dictionaryWithObjects:forKeys:count:
copy
properties
legacyIdentifierForUpdatedIdentifierDuringMigration:
setRemoteObjectInterface:
voiceOverLanguageRotorItems
selectedSpeechVoiceIdentifiersWithLanguageSource
boolValue
numberWithUnsignedLongLong:
isEqualToString:
resourceCompletedMigration:
setValue:forKey:forAssetType:
stringWithFormat:
dictionary
launchActivityIdentifier
hasPrefix:
voiceId
isEqualToDate:
enumerateObjectsUsingBlock:
processInfo
resetResourcesCache
setAutomaticallyCancelPendingBlockUponSchedulingNewBlock:
selectedSpeechVoiceIdentifiersForSource:
setInvalidationHandler:
stringWithCString:encoding:
numberWithUnsignedInteger:
allKeys
initWithTargetSerialQueue:
assetsToPurgeFromInstalledAssets:withRefreshedAssets:
valueForKey:forAssetType:
setUserInitiated:
afterDelay:processBlock:cancelBlock:
processIdentifier
resetInMemoryAssetCatalogs
selectedSpeechVoiceIdentifiers
setInterruptionHandler:
valueForEntitlement:
numberWithLong:
deleteResourceWithVoiceId:
store
assetsToDownloadFromRefreshedAssets:
setAutoDownloadedVoiceAssets:
refreshResourcesCacheForManagerType:
primaryLanguage
numberWithInteger:
afterDelay:processBlock:
removeObserver:forKeyPath:context:
updatedIdentifierForLegacyIdentifier:withLanguageCode:
refreshAssetsByForceUpdatingCatalog:updatingCatalogIfNeeded:catalogRefreshOverrideTimeout:completion:
containsObject:
setExportedObject:
isAssetCatalogInstalled
defaultCStringEncoding
addObserver:forKeyPath:options:context:
_setQueue:
resume
writeVoiceIdentifiersToMigrateToPreferences:
removeObserver:
languages
setExportedInterface:
getAutoDownloadedVoiceAssets:
dateWithTimeIntervalSince1970:
assetTypeSuffix
removeObjectsInArray:
physicalMemory
downloadSamplesIfNecessary
setObject:forKeyedSubscript:
writeIsMigrationCompleteToPreferences:
addObserver:
recordAssetRefreshEventForAssetType:
gender
addObjectsFromArray:
initWithMachServiceName:
downloadResourceWithVoiceId:userInitiated:
mutableCopy
removeObjectAtIndex:
reconcileCachedComponents
daemonShouldDownloadInBackgroundIfNeeded
footprint
invalidate
downloadResourceWithVoiceId:
assetControllerWithPolicy:qosClass:shouldRefreshForAssetInstallNotifications:
updateCatalogBuildVersion:
removeObject:
addObject:
catalogBuildVersion
initWithLaunchActivityIdentifier:
downloadAssets:successStartBlock:
firstObject
reloadVoicesForBundleIdentifierHash:
readResourceCacheVersionFromPreferences
isMigrationComplete
integerValue
objectForKeyedSubscript:
init
taskWithName:policy:context:block:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
assetController:didFinishRefreshingAssets:wasSuccessful:error:
assetController:asset:downloadProgressTotalWritten:totalExpected:isStalled:expectedTimeRemaining:
assetController:didFinishDownloadingAsset:wasSuccessful:error:hasRemainingDownloads:
assetController:didFinishPurgingAssets:wasSuccessful:error:
assetController:willUpdateCatalogForPolicy:
assetController:didUpdateCatalogForPolicy:wasSuccessful:error:
initWithName:policy:context:block:
assetController
_completeWithResult:
_restorationExitStatusForResult:
_deferIfNeeded
taskBlock
setTaskBlock:
name
setName:
policy
setPolicy:
finished
setFinished:
restorationState
setRestorationState:
setAssetController:
context
setContext:
.cxx_destruct
_finished
_taskBlock
_name
_policy
_restorationState
_assetController
_context
T@?,C,N,V_taskBlock
T@"NSString",&,N,V_name
T@"AXAssetPolicy",&,N,V_policy
T@"AXAssetController",&,N,V_assetController
T@"AXManagedAssetTaskContext",&,N,V_context
TB,N,V_finished
T@"AXManagedAssetTaskRestorationState",&,N,V_restorationState
initWithPolicy:context:
_cleanUnusedCompactResources
initWithPolicy:forceCatalogRefresh:context:
_refreshCatalog:
overrideTimeout
setOverrideTimeout:
_overrideTimeout
T@"NSNumber",&,N,V_overrideTimeout
taskGroupIdentifier
triggers
run:
_callCompletion:
_migrateNashvilleToMaui
_retryAndBackOff
completion
setCompletion:
attemptCount
setAttemptCount:
timer
setTimer:
_completion
_attemptCount
_timer
T@?,C,N,V_completion
Tq,N,V_attemptCount
T@"AXDispatchTimer",&,N,V_timer
_purgeLegacyResource:
_completeMigrationForLegacyResource:withDownloadedResource:
_resourceInUseByOtherTechnologies:
_cleanupVoiceSubscriptions
observeValueForKeyPath:ofObject:change:context:
assetWithPolicy:
initWithPolicy:
checkInAssetUpdateXPCActivity
enqueueCatalogRefreshTaskWithOverrideTimeout:forceCatalogRefresh:context:
enqueueAssetUpdateTaskWithContext:
enqueueCleanseUnusedCompactResourcesTaskWithContext:
_enqueueTask:
_dequeueNextTask
lastXCPActivityHandlerExecutionTime
setLastXCPActivityHandlerExecutionTime:
_taskQueue
_taskQueueSignal
_enqueuedTasks
_activeTask
_taskLock
_lastXCPActivityHandlerExecutionTime
Td,N,V_lastXCPActivityHandlerExecutionTime
idleStateWithTaskID:assetType:
restoreOrCreateStateFromStore:taskID:assetType:
_initWithPhase:lastExitStatus:date:taskID:assetType:
_restorationKey
_restorationDictionary
isIdle
updatePhase:saveToStore:
updatePhase:exitStatus:saveToStore:
previousTaskWasSuccessful
previousTaskDidFail
previousTaskWasDeferred
taskID
setTaskID:
assetType
setAssetType:
phase
setPhase:
lastExitStatus
setLastExitStatus:
date
setDate:
_taskID
_assetType
_phase
_lastExitStatus
_date
T@"NSString",&,N,V_taskID
T@"NSString",&,N,V_assetType
T@"NSString",&,N,V_phase
T@"NSString",&,N,V_lastExitStatus
T@"NSDate",&,N,V_date
contextWithActivity:
contextWithXPCClient
_init
shouldDefer
finishWithResult:
environment
setEnvironment:
activity
setActivity:
_environment
_activity
TQ,N,V_environment
T@"AXAssetsXPCActivity",&,N,V_activity
TB,R,N
didCompleteWithStatus:
sharedInstance
start
registerTask:
handleFirstBoot:
invokeTaskById:arguments:
_handleNotification:
_tasksForNotification:
_anonymousTaskForId:withArguments:
_tasksForFirstBoot
_dispatchTask:completion:
_handleXPCActivity:taskClass:
_taskQueueForTask:
_getBootTime
taskQueues
setTaskQueues:
registeredTasks
setRegisteredTasks:
inflightTasks
setInflightTasks:
taskDispatcherQueue
setTaskDispatcherQueue:
notificationQueue
setNotificationQueue:
taskCompletionWaitingQueue
setTaskCompletionWaitingQueue:
_taskQueues
_registeredTasks
_inflightTasks
_taskDispatcherQueue
_notificationQueue
_taskCompletionWaitingQueue
T@"NSMutableDictionary",&,N,V_taskQueues
T@"NSMutableSet",&,N,V_registeredTasks
T@"NSMutableSet",&,N,V_inflightTasks
T@"NSObject<OS_dispatch_queue>",&,N,V_taskDispatcherQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_notificationQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_taskCompletionWaitingQueue
initWithActivity:
state
updateState:
deferIfNeeded
_debugNameForXPCActivityState:
T@"NSObject<OS_xpc_object>",&,N,V_activity
Tq,R,N
restoreOrCreateStateFromStore:assetType:
isRefreshingAssets
isPurgingAssets
isDownloadingAssets
hasCompletedRefreshingAssets
hasCompletedPurgingAssets
hasCompletedDownloadingAssets
withLaunchActivityId:
withNotificationName:
withFirstBootType
withAnonymousInvokation:
copyWithZone:
type
setType:
launchActivityId
setLaunchActivityId:
launchActivity
setLaunchActivity:
notificationName
setNotificationName:
arguments
setArguments:
_type
_launchActivityId
_launchActivity
_notificationName
_arguments
TQ,N,V_type
T@"NSString",&,N,V_launchActivityId
T@"AXAssetsXPCActivity",&,N,V_launchActivity
T@"NSString",&,N,V_notificationName
T@"NSDictionary",&,N,V_arguments
dealloc
taskIdentifier
synchronous
invokeWithArguments:
initWithTrigger:
trigger
setTrigger:
completionStatus
setCompletionStatus:
T@"AXSimpleAssetTaskTrigger",&,N
TQ,N
transaction
setTransaction:
_transaction
_trigger
_completionStatus
T@"NSObject<OS_os_transaction>",&,N,V_transaction
T@"AXSimpleAssetTaskTrigger",&,N,V_trigger
TQ,N,V_completionStatus
refreshAssetCatalogForAssetType:withOverrideTimeout:forceCatalogRefresh:
updateAssetForAssetType:
invokeSimpleTaskById:arguments:
runFirstBootTasks:
listener:shouldAcceptNewConnection:
startServer
_xpcQueue_acceptNewConnection:
refreshAssetCatalogForAssetTypeHandler
setRefreshAssetCatalogForAssetTypeHandler:
updateAssetForAssetTypeHandler
setUpdateAssetForAssetTypeHandler:
_xpcListener
_xpcQueue
_refreshAssetCatalogForAssetTypeHandler
_updateAssetForAssetTypeHandler
T@?,C,N,V_refreshAssetCatalogForAssetTypeHandler
T@?,C,N,V_updateAssetForAssetTypeHandler
willBecomeIdle:completion:
registerManagedAsset:
registerManagedAssets:
_managedAssetForAssetType:
_refreshAssetCatalogForAssetType:withOverrideTimeout:forceCatalogRefresh:
_updateAssetForAssetType:
activityTransactionManager
setActivityTransactionManager:
xpcServer
setXpcServer:
managedAssets
setManagedAssets:
_activityTransactionManager
_xpcServer
_managedAssets
T@"AXAssetsXPCServer",&,N,V_xpcServer
T@"NSMutableArray",&,N,V_managedAssets
T@"AXAssetsActivityTransactionManager",&,N,V_activityTransactionManager
simpleTaskStarted:
simpleTaskFinished:
_queue_addActiveReason:
_queue_removeActiveReason:
_queue_handleInactiveTimerFired
delegate
setDelegate:
_queue
_queue_activeReasons
_queue_activityTimer
_queue_transitioningToIdle
_delegate
T@"<AXAssetsActivityTransactionManagerDelegate>",W,N,V_delegate
_housekeeping_op1_refreshAssets
_housekeeping_op2_purgeAssets:
_housekeeping_op3_downloadAssets:
XPCClientReq
XPCActivity
%@<%p> [%@:%@:%@ - Status:%@]
Finished
Active
Success
Failed
Deferred
Idle
com.apple.ax.TTSResource.cleanse.LaunchActivity
Cleanse Compact Resources
v16@?0@"AXManagedAssetTask"8
Catalog Refresh
force-update
attempt to update
retryQueue
ar-001
ar-SA
Enabled
RotorItem
v8@?0
v24@?0@"NSArray"8@"NSError"16
MallocStackLogging
AXDeviceSupportsVoiceTriggers
AXDeviceSupportsAudiogramIngestion
com.apple.accessibility.AccessibilityUIServer
<Unknown Class>
%@<%p> [%@]
v16@?0@"NSObject<OS_xpc_object>"8
finished
%@_RestorationState
Phase
LastExitStatus
Date
Phase: '%@'. LastExitStatus: '%@'. Timestamp: '%@'
InformSiriVoiceSubscriptionsTaskFailed
Adding
Removing
v32@?0@8Q16^B24
InformSiriVoiceSubscriptionsTaskSuccessful
v16@?0@"NSArray"8
com.apple.ttsasset.NewAssetNotification
com.apple.trial.NamespaceUpdate.SIRI_TEXT_TO_SPEECH
com.apple.MobileAsset.VoiceServices.GryphonVoice.ma.new-asset-installed
com.apple.MobileAsset.VoiceServices.CustomVoice.ma.new-asset-installed
UpdateSiriVoicesTaskSuccessful
com.apple.LaunchServices.ApplicationsChanged
ComponentChangeTaskSuccessful
simpleTaskDispatcher
simpleTaskDispatcher_note
simpleTaskDispatcher_completion
com.apple.notifyd.matching
SystemBootTime
notifyArg
v16@?0Q8
com.apple.MobileAsset.TTSAXResourceModelAssets.ma.new-asset-installed
UpdateResourcesTaskSuccessful
AXAssetsXPCActivity<%p> [State: %@] [xpc_activity_t<%p> %@]
Checking In
Waiting
Running
Deferring
Continuing
Done
Unknown
UpdateAsset
Refreshing Assets
Purging Assets
Downloading Assets
kAXResourceCacheTaskGroup
kAXResource
kAXVoiceId
kAXVoiceSubscriptionAddition
kAXActionType
%@<%p> ID=%@ Group=%@ Trigger=%@
com.apple.SynthesisProvider.updatedVoices
com.apple.accessibility.axassetsd.xpc
com.apple.accessibility.axassetsd.service
com.apple.accessibility.axassets
application-identifier
com.apple.springboard
com.apple.Preferences
com.apple.Carousel
com.apple.NanoSettings
com.apple.TVSettings
com.apple.PineBoard
v28@?0@"NSString"8@"NSNumber"16B24
v16@?0@"NSString"8
CleanupSiriVoiceSubscriptionsTaskFailed
AXAssetsActivityTransactionManager
Update Assets
generic.download.error
v12@?0B8
RefreshSSEVoicesForBundlePrefixTaskSuccessful
Will complete task [%@] with result : %@
task [%@] being asked to complete, but is already fiinished!
%@ - Checking _deferIfNeeded: Already finixhed, returning true 
%@ - Checking _deferIfNeeded: Returning true
%@ - Checking _deferIfNeeded: Returning false
AXCleanseUnusedCompactResourcesTask: Cleaning up unused compact resources
AXCleanseUnusedCompactResourcesTask: Deleting resource with id: %@
AXCleanseUnusedCompactResourcesTask: Will invoke AXUpdateResourcesSimpleTask now
AXCatalogRefreshTask: Will %@ catalog now. timeout=%@
AXMigrateResTask: Task did begin
AXMigrateResTask: Migration not complete
AXMigrateResTask: No installed catalog yet. Calling _retryAndBackOff
AXMigrateResTask: Installed catalog was found. Will refresh cache for type: TTSAXResourceManagerTypeAccessibility
AXMigrateResTask: Will begin migration of Nashville to Maui
AXMigrateResTask: Task finished
AXMigrateResTask: Beginning nashville to maui migration with selected voices: %@
AXMigrateResTask: Downloading maui id [%@] for legacy id [%@]
AXMigrateResTask: Swapping on disk nashville VO id [%@] for maui id [%@] with language [%@]
AXMigrateResTask: Will invoke AXCleanupSiriVoiceSubscriptionsSimpleTask now
AXMigrateResTask: Will force-refresh catalog for AXTTSResourceAssetPolicy. timeout=60s
AXMigrateResTask: Error refreshing catalog during migration. %@
AXMigrateResTask: Mobile asset daemon was not ready on attempt %@, will try again in %@ seconds.
AXMigrateResTask: Catalog found after force update. Will refresh cache for type: TTSAXResourceManagerTypeAccessibility
AXMigrateResTask: Will attempt to download samples if neccessary
Installing SIGTERM handler.
Received SIGTERM. Terminating now.
axasstsd is starting up. MallocStackLogging=%@
axassetsd will begin servicing requests
AXUpdateCacheVersionSimpleTask: Task did begin
AXUpdateCacheVersionSimpleTask: Mismatch in cache versions. Refreshing resources and updating cache version.
AXUpdateCacheVersionSimpleTask: Task did complete
AXCompleteResMigrationTask: Task did begin
AXCompleteResMigrationTask: Completed migration
AXCompleteResMigrationTask: Task finished
AXCompleteResMigrationTask: Will purge legacy voice: %@
AXCompleteResMigrationTask: Purged legacy vocalizer asset with identifier: %@
AXCompleteResMigrationTask: Did not purge legacy vocalizer asset: %@ because it was being used by another technology
AXCompleteResMigrationTask: Will complete migration of legacy resource: '%@' to downloaded resource: '%@'
AXCompleteResMigrationTask: Swapping downloaded maui id [%@] for legacy id [%@]
AXCompleteResMigrationTask: Resource %@ is in use by %@ clients: %@
AXCompleteResMigrationTask: Will invoke AXCleanupSiriVoiceSubscriptionsSimpleTask to clean up voice subscriptions now
AXCompleteResMigrationTask: Failed to clean up nashville identifier: %@
XPC Activity handler called. %@. Asset:%@
XPC Activity handler called with unexpected state. %@. Asset:%@
[AXManagedAsset: %@]: enqeueing task: [%@]. Total queued: %lu
[AXManagedAsset: %@]: dequeuing next task: [%@]. Total queued: %lu
[AXManagedAsset: %@]: Did finish dequeueing all queued tasks. (confirming queue count: %lu)
[AXManagedAsset: %@]: Notified task did finish: %@
AXInformSiriSubsTask: Task did begin
AXInformSiriSubsTask: Unable to subscribe to nil voiceId
AXInformSiriSubsTask: No resource found for voiceId: %@
AXInformSiriSubsTask: Task finishing with failure
AXInformSiriSubsTask: %@ lang: %@ gender: %@ type: %@ name: %@ voice to active siri voice list
AXInformSiriSubsTask: Asking VSSpeechSynthesizer for auto-downloaded voices
AXInformSiriSubsTask: Starting with voices: %@
AXInformSiriSubsTask: Error: attempted to add a neural voice on a device that does not support neural voices, %@
AXInformSiriSubsTask: Removing siri auto download voice: %@
AXInformSiriSubsTask: Setting Siri auto-downloaded voice[%@]: %@
AXInformSiriSubsTask: Task finishing
AXDownloadTTSResourceTask: Task did begin
AXDownloadTTSResourceTask: Task failed, no identifier given
AXDownloadTTSResourceTask: Task did begin download for identifier %@
AXDownloadTTSResourceTask: Task did finish
AXUpdateSiriTask: Task did begin
AXUpdateSiriTask: Will refresh cache for type: TTSAXResourceManagerTypeSiri
AXUpdateSiriTask: Resource changes after refresh: %ld
AXUpdateSiriTask: Resource needs migration: '%@'. Will invoke AXCompleteResourceMigrationSimpleTask now.
AXUpdateSiriTask: Task finishing
AXCompChangeTask: Task did begin
AXCompChangeTask: Will reconcile cached components for TTSSynthesisProviderVoiceManager
AXCompChangeTask: Task finishing
AXCompChangeTask: Will invoke AXUpdateResourcesSimpleTask now
Recieved notification %@
Performing first boot tasks
Finished first boot tasks
SmpTskMgr::Dispatching: %@
SmpTskMgr::Running: %@
SmpTskMgr::Finishing: Status=%ld Task:%@
SmpTskMgr::Completed: %@, executing post-task action
SmpTskMgr::CleanUp: %@
SmpTskMgr::Executing synchronously and blocking group: %@
SmpTskMgr::Executing async and not blocking group: %@
AXUpdateResTask: Task did begin
AXUpdateResTask: Will purge / reload all components
AXUpdateResTask: Will refresh cache for type: %ld
AXUpdateResTask: Resource changes after refresh: %ld
AXUpdateResTask: Resource needs migration: '%@'. Will invoke AXCompleteResourceMigrationSimpleTask now.
AXUpdateResTask: Siri resource being deleted. Will invoke AXInformSiriVoiceSubscriptionsSimpleTask to begin update-subscription task now. %@
AXUpdateResTask: Task finishing
XPC Activity state change failed: '%@' -> '%@'. %@
XPC Activity state change succeeded '%@' -> '%@'. %@
Asking if we should defer activity: %@. Defer: %ld
Deallocating task %@
Will begin listening for client connections
Rejecting connecting client with pid:(%d) appID:(%@). Missing required entitlement
Accepting new system connection from PID %d
Connection interrupted from PID %d
Connection invalidated from PID %d
Recieved xpc force run first boot actions message
Bootstrap complete. Will enter event loop.
Resetting TTSAXResourceManager caches and asset catalogs
Flushing CFPrefs caches
AXDeleteCompactResTask: Task did begin
AXDeleteCompactResTask: Unable to delete compact identifier %@ because it is in use by the system spoken language.
AXDeleteCompactResTask: Will delete resource: %@
AXDeleteCompactResTask: Will invoke task AXUpdateResourcesSimpleTask to update resources now
AXDeleteCompactResTask: Unable to delete compact identifier %@ because it is in use by Spoken Content: %i Switch Control: %i
AXDeleteCompactResTask: Task finishing
AXCleanupSiriSubsTask: Task did begin
AXCleanupSiriSubsTask: Asking VSSpeechSynthesizer for auto-downloaded voices
AXCleanupSiriSubsTask: Starting cleanup with voices: %@
AXCleanupSiriSubsTask: Removing unused Siri auto download voices: %@
AXCleanupSiriSubsTask: Setting Siri auto-downloaded voice[%@]: %@
AXCleanupSiriSubsTask: Task finishing
AXATM: Active reason already exists for adding: '%@'. This will almost certainly lead to unwanted os_transaction problems.
AXATM: Added active reason: '%@'. Reason count=%ld
AXATM: Will begin os_transaction
AXATM: Active reason does not exist for removal: '%@'. This will almost certainly lead to unwanted os_transaction problems
AXATM: Removed active reason: '%@'. Reason count=%ld
AXATM: No active reasons remain. Beginning timer of %.2f seconds before we go inactive
AXATM: Inactive timer fired. Will give delegate a chance to clean up and then transition to idle
AXATM: Delegate completed and no new reason added. Will end os_transaction now
AXATM: Delegate completed but active reason added while transitioning to idle. Keeping transaction alive
%@: Restoration state: 'hasCompletedRefreshingAssets'. Moving on to next step
%@: About to refresh assets. Restoration: %@
%@: Could not refresh assets: %@
%@: Build versions matched, no need to update assets.
%@: Restoration state: 'hasCompletedPurgingAssets'. Moving on to next step
%@: About to purge installed assets. Restoration: %@
%@: No assets found that need to be purged
%@: Assets that will be purged
%@:   %@
%@: Could not purge assets: %@
%@: Honoring asset policy to not proceed with downloads
%@: About to kick off downloadable assets. Restoration: %@
Kicking off downloads with refreshed assets:
  %@
%@: No new assets to download and build numbers didn't match, refreshing resource cache and updating build number %@
%@: No assets found that need to be downloaded
%@: Assets that will be downloaded
%@: Could not kick off asset downloads: %@
%@: Finished all subtasks with success.
%@: didFinishRefreshingAssets. success:%ld error:%@
%@: didFinishPurgingAssets. success:%ld error:%@
%@: Asset D/L progress: %lld / %lld. stalled: %ld. asset: %@
%@: Asset download finished: %@
%@: Asset download failed: %@ - %@
AXRefreshSSETask: Task did begin
AXRefreshSSETask: Will purge and reload all components for TTSSynthesisProviderVoiceManager
AXRefreshSSETask: Will purge and reload bundle hash %@
AXRefreshSSETask: Task finishing
AXManagedAssetTask
AXAssetControllerObserver
NSObject
AXCleanseUnusedCompactResourcesTask
AXCatalogRefreshTask
AXMigrateResourcesSimpleTask
AXUpdateCacheVersionSimpleTask
AXCompleteResourceMigrationSimpleTask
AXManagedAsset
AXManagedAssetTaskRestorationState
AXInformSiriVoiceSubscriptionsSimpleTask
AXDownloadTTSResourceTask
AXUpdateSiriResourcesSimpleTask
AXManagedAssetTaskContext
AXComponentChangeSimpleTask
AXSimpleAssetTaskManager
AXUpdateResourcesSimpleTask
AXAssetsXPCActivity
AXUpdateAssetTaskRestorationState
AXSimpleAssetTaskTrigger
NSCopying
AXSimpleAssetTaskBase
AXSimpleAssetTask
AXAssetsXPCServer
AXAssetsServiceInterface
NSXPCListenerDelegate
AXAssetsDaemon
AXAssetsActivityTransactionManagerDelegate
AXDeleteCompactResourceSimpleTask
AXCleanupSiriVoiceSubscriptionsSimpleTask
AXAssetsActivityTransactionManager
AXUpdateAssetTask
AXRefreshSSEVoicesForBundlePrefixSimpleTask
@48@0:8@16@24@32@?40
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v44@0:8@16@24B32@36
v60@0:8@16@24q32q40B48d52
v48@0:8@16@24B32@36B44
v32@0:8@16@24
v44@0:8@"AXAssetController"16@"NSArray"24B32@"NSError"36
v60@0:8@"AXAssetController"16@"AXAsset"24q32q40B48d52
v48@0:8@"AXAssetController"16@"AXAsset"24B32@"NSError"36B44
v32@0:8@"AXAssetController"16@"AXAssetPolicy"24
v44@0:8@"AXAssetController"16@"AXAssetPolicy"24B32@"NSError"36
v24@0:8Q16
@24@0:8Q16
@?16@0:8
v24@0:8@?16
v24@0:8@16
v20@0:8B16
v16@0:8
@"NSString"
@"AXAssetPolicy"
@"AXManagedAssetTaskRestorationState"
@"AXAssetController"
@"AXManagedAssetTaskContext"
@32@0:8@16@24
@36@0:8@16B24@28
@"NSNumber"
q16@0:8
v24@0:8q16
@"AXDispatchTimer"
@24@0:8@16
v36@0:8@16B24@28
v48@0:8@16@24@32^v40
d16@0:8
v24@0:8d16
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_dispatch_source>"
@"NSMutableArray"
@"AXManagedAssetTask"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@40@0:8@16@24@32
@56@0:8@16@24@32@40@48
v40@0:8@16@24@32
@"NSDate"
@"AXAssetsXPCActivity"
v24@0:8#16
v32@0:8@16@?24
v32@0:8@16#24
@24@0:8#16
@"NSMutableDictionary"
@"NSMutableSet"
B24@0:8q16
@24@0:8q16
@"NSObject<OS_xpc_object>"
@24@0:8^{_NSZone=}16
@"NSDictionary"
v24@0:8@?<v@?Q>16
@24@0:8@"AXSimpleAssetTaskTrigger"16
@"AXSimpleAssetTaskTrigger"16@0:8
v24@0:8@"AXSimpleAssetTaskTrigger"16
@"NSArray"16@0:8
@"NSObject<OS_os_transaction>"
@"AXSimpleAssetTaskTrigger"
v36@0:8@16@24B32
v36@0:8@"NSString"16@"NSNumber"24B32
v24@0:8@"NSString"16
v32@0:8@"NSString"16@"NSDictionary"24
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"NSXPCListener"
v32@0:8@"AXAssetsActivityTransactionManager"16@?<v@?>24
@"AXAssetsActivityTransactionManager"
@"AXAssetsXPCServer"
@"<AXAssetsActivityTransactionManagerDelegate>"
softlink:r:path:/System/Library/PrivateFrameworks/AccessibilityUtilities.framework/AccessibilityUtilities
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>AUAudioUnitViewsSupported</key>
<false/>
<key>BuildMachineOSBuild</key>
<string>20A241133</string>
<key>CFBundleDevelopmentRegion</key>
<string>en</string>
<key>CFBundleExecutable</key>
<string>axassetsd</string>
<key>CFBundleIdentifier</key>
<string>com.apple.accessibility.axassetsd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>axassetsd</string>
<key>CFBundlePackageType</key>
<string>APPL</string>
<key>CFBundleShortVersionString</key>
<string>1.0</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>20B71</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>16.1</string>
<key>DTSDKBuild</key>
<string>20B71</string>
<key>DTSDKName</key>
<string>iphonesimulator16.1.internal</string>
<key>DTXcode</key>
<string>1400</string>
<key>DTXcodeBuild</key>
<string>14A5270i</string>
<key>MinimumOSVersion</key>
<string>16.1</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
<integer>2</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.accessibility.axassetsd</string>
<key>com.apple.application-identifier</key>
<string>com.apple.accessibility.axassetsd</string>
<key>com.apple.private.assets.accessible-asset-types</key>
<array>
<string>com.apple.MobileAsset.SoundDetectionModels</string>
<string>com.apple.MobileAsset.AXIconVision</string>
<string>com.apple.MobileAsset.AXElementVision</string>
<string>com.apple.MobileAsset.AudiogramAssets</string>
<string>com.apple.MobileAsset.TTSAXResourceModelAssets</string>
<string>com.apple.MobileAsset.MagnifierAsset</string>
<string>com.apple.MobileAsset.Trial.Siri.SiriTextToSpeech</string>
</array>
<key>com.apple.private.assets.bypass-asset-types-check</key>
<true/>
<key>com.apple.private.assets.change-daemon-config</key>
<true/>
<key>com.apple.private.coreaudio.allow-au-extensions-daemon</key>
<true/>
<key>com.apple.security.exception.files.absolute-path.read-only</key>
<array>
<string>/private/var/MobileAsset/</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.voiceservices.tts</string>
<string>com.apple.accessibility.AccessibilityUIServer</string>
<string>com.apple.mobileasset.autoasset</string>
</array>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.Accessibility</string>
<string>com.apple.Accessibility.Assets</string>
<string>com.apple.voiceservices</string>
</array>
<key>com.apple.security.temporary-exception.audio-unit-host</key>
<true/>
<key>com.apple.security.temporary-exception.files.absolute-path.read-only</key>
<array>
<string>/private/var/MobileAsset/</string>
</array>
<key>com.apple.trial.client</key>
<array>
<string>406</string>
</array>
<key>inter-app-audio</key>
<true/>
</dict>
</plist>
