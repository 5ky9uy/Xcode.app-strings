v8@?0
AE03A48B-6794-4978-96CC-425A7F6443DA
D0D02931-2190-4E71-B843-C73C4ADB3F27
2CE80E5D-FA17-4BD4-A48C-DFC3A79FB8ED
com.apple.ntkd.facesnapshotclient.busy
com.apple.ntkd.facesnapshotclient.%p
NTKLoggingDomainSnapshot
-[NTKDFaceSnapshotClientHandler updateAllSnapshots]
-[NTKDFaceSnapshotClientHandler requestSnapshotOfFaceInstanceDescriptor:]
-[NTKDFaceSnapshotClientHandler performAfterCompletingCurrentlyPendingSnapshots:]
-[NTKDFaceSnapshotClientHandler snapshotFaceInstanceDescriptor:options:completion:]
-[NTKDFaceSnapshotClientHandler snapshotLibrarySelectedFaceForDeviceUUID:options:completion:]
RemoteComplications
com.apple.nanotimekit.upnextobserver
NTKLoggingDomainUpNext
v24@?0@"LSBundleProxy"8^B16
com.apple.ntkd.collectioncoordinator
com.apple.ntkd.collectioncoordinator.xpcIncomingMessageQueue
com.apple.ntkd.collectioncoordinator.callouts
v16@?0@"NTKDCollectionClient"8
v16@?0@"NTKDCollectionStore"8
v24@?0@"NSString"8@"NSUUID"16
v32@?0@"NTKDCollectionStoreKey"8@"NTKDCollectionStore"16^B24
NTKLoggingDomainCollection
com.apple.ntkd.collectioncoordinator.busy
com.apple.ntkd.collectioncoordinator.callout
com.apple.ntkd.curatecollection.
LastSystemVersionMigrated
NTKLoggingDomainMigration
%@:%@
global
com.apple.ntkd.collectionclient.busy
com.apple.ntkd.collectionclient.shared
com.apple.ntkd.collectionclient.register
NTKLoggingDomainClient
v16@?0@"NSError"8
com.apple.ntkd.snapshotcoordinator
com.apple.ntkd.snapshotcoordinator.callouts
com.apple.ntkd.snapshotcoordinator.xpcIncomingMessageQueue
v16@?0@"NTKDFaceSnapshotClientHandler"8
B8@?0
v12@?0B8
com.apple.notifyd.matching
LanguageChange
LocaleChange
SignificantTimeChange
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.nanotimekitcompanion.snapshots.prewarm
NTKLoggingDomainDaemon
com.apple.NTKFaceSnapshotService
CleanSnapshotCache
CleanAllFaceSnapshots
snapshotting-session-activity
delaying-snapshots
NTKFaceSnapshotsAreDirtyKey
com.apple.nanotimekitd.snapshot.queue
com.apple.ntkd.facesnapshotcontroller.%p
com.apple.ntkd.facesnapshotcontroller.observercallback.%p
v32@?0@8@"NTKFaceSnapshotContext"16^B24
v20@?0B8@"UIImage"12
-[NTKDFaceSnapshotController provideSnapshotOfFace:options:completion:]
__PRETTY_FUNCTION__
-[NTKDFaceSnapshotController provideSnapshotOfFace:options:completion:]_block_invoke
-[NTKDFaceSnapshotController provideSnapshotOfFace:options:completion:]_block_invoke_2
-[NTKDFaceSnapshotController snapshotLibrarySelectedFaceForDeviceUUID:options:completion:]
v16@?0@"UIImage"8
v32@?0@"NSUUID"8@"NTKFace"16^B24
v24@?0@"NTKRemoteComplication"8@"NSString"16
v16@?0@"NTKFace"8
v16@?0@"NSArray"8
com.apple.ntkd.facesnapshotcontroller.asyncmappedimagecachework
v32@?0@"NSString"8Q16^B24
com.apple.ntkd.facesnapshotcontroller.asyncwork
com.apple.ntkd.facesnapshotcontroller.asyncobservercallback
v24@?0@"NSString"8^B16
B32@?0@"_NTKDFaceSnapshotObject"8Q16^B24
%@%@%@
SnapshotSequenceIdKey
SnapshotContexts.archive
SnapshotKeysWithBlankComplications.archive
NTKLoggingDomainStore
com.apple.ntkd.collectionstore.shared
com.apple.ntkd.collectionstore.observers
%@-%@
v32@?0@"NSUUID"8Q16^B24
com.apple.ntkd.collectionstore.asyncwork
com.apple.ntkd.collectionstore.asyncobservercallback
v32@?0@"NSUUID"8@"NSNumber"16^B24
%@ [%@], 
%02x
v24@?0@"NSNumber"8@?<v@?>16
q24@?0@"NSNumber"8@"NSNumber"16
CollectionManifest[
(%@:%@)
uuid
style
expected a string for key '%@' (instead found %@)
could not generate UUID from string: %@
expected a number for key '%@' (instead found %@)
GlobalStores
CollectionStores
PerDeviceStores
sequence-id.string
manifest-sequence-id.string
selected-uuid-sequence-id.string
last-delete-sequence-id.string
added-sequence-id.string
Faces
configuration-sequence-id.string
upgrade-sequence-id.string
resources-sequence-id.string
Resources
version.string
build-version.string
setup-complete
manifest.plist
selected-uuid.string
face.json
string could not be converted to UUID: %@
deleted.plist
com.apple.ntkd.collectionstorecreation
com.apple.nanotimekit.collectionstore.cleanup
com.apple.ntkd.complicationcollectioncoordinator
com.apple.ntkd.complicationcollectioncoordinator.callouts
v16@?0@"NTKDComplicationCollectionClient"8
v16@?0@"NTKDComplicationStore"8
v32@?0@"NTKDCollectionStoreKey"8@"NTKDComplicationStore"16^B24
com.apple.ntkd.complicationcollectioncoordinator.busy
com.apple.ntkd.complicationcollectioncoordinator.callout
Cancel
createPKZip
NanoTimeKit.zip
(NOTE: Please attach contents of /var/mobile/Library/NanoTimeKit from both devices to this radar.)&
v32@?0@"NSURL"8Q16^B24
&Attachments=%@&
Title=%@
com.apple.Bridge
v16@?0@"NSString"8
NTKLoggingDomainArgon
couldn't decrypt face JSON from key descriptor %@
v20@?0B8@"NSError"12
data
Clock Face Sync Error
A rare error has occurred while syncing clock faces between your watch and phone. Please tap 'OK' to open Tap-to-Radar and file a bug. (Internal alert only.)
Sync: New Face Failed to Unzip After Syncing from Gizmo (via Prompt)
DateOfLastActivity_
com.apple.nanotimekit.daemon-activity-queue
NTKLoggingDomainDaemonActivity
checkin
guard-early-jetsam
--30s-extension
com.apple.nanotimekit.daemon-activity
com.apple.nanotimekit.daemon-transaction-queue
com.apple.ntkd.complicationstore.%p
com.apple.ntkd.complicationstore.observercallback.%p
v16@?0@"NTKComplicationKey"8
v32@?0@"CLKComplicationDescriptor"8Q16^B24
NTKLoggingDomainComplication
com.apple.ntkd.complicationstore.asyncwork
com.apple.ntkd.complicationstore.asyncobservercallback
v32@?0@"NTKComplicationKey"8@"NSNumber"16^B24
ComplicationCollectionStores
Complications
sample-template
sample-template-sequence-id.string
ComplicationDescriptors
descriptor
descriptor-sequence-id.string
clientID
typeID
v32@?0@"NSDictionary"8@"NSNumber"16^B24
ClientToSampleTemplate
ClientToComplicationDescriptorIdentifiers
v32@?0@"NSString"8@"NSArray"16^B24
v32@?0@"NSString"8@"NSDictionary"16^B24
v32@?0@"NTKComplicationKey"8@"NSMutableArray"16^B24
com.apple.private.alloy.clockface.sync
com.apple.pairedsync.faces
NTKSyncBackoffPeriodInSeconds
com.apple.nanotimekit.messageType
com.apple.nanotimekit.message
receiverSyncVersion
senderSyncVersion
com.apple.pairedsync.faces.NTKSyncBackoffQueue
com.apple.pairedsync.faces.NTKSyncServiceQueue
NTKLoggingDomainSync
v28@?0B8@"NSString"12@"NSError"20
v24@?0@"NTKFace"8@"NSString"16
invalid UUID string: %@
com.apple.nanotimekitd.daemon-queue
NanoTimeKit
argon
CleanupUnpairedDevices
CleanupResources
v16@?0@"NSTimer"8
com.apple.distnoted.matching
com.apple.xpc.activity
com.apple.ntkd.complicationcollectionclient.busy
com.apple.ntkd.complicationcollectionclient.%p
com.apple.ntkd.complicaitoncollectionclient.register
%@: descriptor must be non-nil!
com.apple.pairedsync.clockface
outgoing-sync-session-activity
com.apple.ntkd.synccontroller.outgoingsession
com.apple.ntkd.synccontroller.incomingsession
com.apple.ntkd.synccontroller.outgoingsessionrequested
com.apple.ntkd.synccontroller.libraryvalidation
com.apple.ntkd.synccontroller
ENABLED
DISABLED
v32@?0@8@"NTKDCollectionStore"16^B24
v32@?0@8@"NTKDComplicationStore"16^B24
RESET
lifted
in place
EnableSyncFailureAlerts
Validation Failure
A discrepancy between the clock faces on your Watch and iPhone has been detected. Tap 'OK' to raise a radar. Please compare the faces between your devices and note any differences in the radar. (Internal alert only.)
Sync: Inconsistent Clock Faces Library State Detected (via Prompt)
com.apple.ntkd.synccontroller.busy
v32@?0@8@"_MessageList"16^B24
v32@?0@"NTKComplicationKey"8@"NTKComplicationSampleData"16^B24
message-type
face-uuid
complicaiton-clientID
complication-family
complication-descriptor
payload-id
v32@?0@"NSDictionary"8Q16^B24
@"NTKDSyncMessage"8@?0
B16@?0@"NSDictionary"8
needs-reset-sync
sequence-id
Global
Sync
store-status.plist
complication-store-status.plist
incoming-messages.plist
outgoing-messages.plist
v16@?0@"NSUUID"8
MessagePayloads
com.apple.ntkd.zip-archivist
extractPKZip
sequesterResources
copyResources
inputStream
outputStream
dictionary
objectForKeyedSubscript:
setObject:forKeyedSubscript:
init
sharedInstance
_collectionIdentifier
registerCurator:forCollectionIdentifier:
isInitialSetupComplete
isEmpty
isBuildVersionOutdated
_removeAllFacesFromStore:
_addFacesToStore:
persistCurrentBuildVersion
markInitialSetupComplete
_legacyDefaultFacesForStore:
_gloryDefaultFacesForStore:
_gloryBDefaultFacesForStore:
_gloryEDefaultFacesForStore:
_gloryFDefaultFacesForStore:
_graceDefaultFacesForStore:
_graceEDefaultFacesForStore:
_graceFDefaultFacesForStore:
orderedUUIDs
countByEnumeratingWithState:objects:count:
removeFaceForUUID:
_getVersionAppropriateFacesForStore:
UUID
addFace:forUUID:
deviceUUID
deviceForNRDeviceUUID:
initWithUUIDString:
supportsCapability:
_hunterDefaultFacesForStore:
nrDeviceVersion
complications
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
curateCollectionStore:completion:
resetStoreDefaults:
T@"NSDictionary",R,N
stringWithFormat:
UTF8String
setRemoteObjectInterface:
setExportedInterface:
setExportedObject:
addObserver:
_handleInvalidation
setInvalidationHandler:
removeObserver:
updateAllSnapshots
_onQueueAsync:
createFaceForPerformanceTesting:
faceWithInstanceDescriptor:
updateSnapshotForFace:
performAfterCompletingCurrentlyPendingSnapshots:
snapshotFace:options:completion:
snapshotLibrarySelectedFaceForDeviceUUID:options:completion:
remoteObjectProxy
faceSnapshotChangedForKey:
registerForUpdates
requestSnapshotOfFaceInstanceDescriptor:
snapshotFaceInstanceDescriptor:options:completion:
initWithConnection:snapshotController:
invalidationHandler
.cxx_destruct
_connection
_queue
_snapshotController
_invalidationHandler
T@?,C,N,V_invalidationHandler
copy
stringByAppendingString:
defaultManager
fileExistsAtPath:
removeItemAtPath:error:
initWithCollectionIdentifier:deviceUUID:
_deviceUUID
defaultWorkspace
dealloc
bundleIdentifier
applicationProxyForIdentifier:
applicationType
isEqualToString:
initWithBundleIdentifier:allowPlaceholder:error:
appInfoWithApplicationRecord:
supportedActionsByExtensions
count
addObject:
enumerateBundlesOfType:block:
queue_buildInitialSetOfIdentifiersIfNeeded
setPhoneThirdPartyDataSources:
queue_updateDeviceDataSourcesInNanoPreferences
removeObject:
applicationInstallsDidStart:
applicationInstallsDidChange:
applicationInstallsDidUpdateIcon:
applicationsWillInstall:
applicationsDidInstall:
pluginsDidInstall:
applicationsDidFailToInstall:
applicationsWillUninstall:
pluginsWillUninstall:
applicationsDidUninstall:
pluginsDidUninstall:
applicationsDidFailToUninstall:
applicationInstallsArePrioritized:arePaused:
applicationInstallsDidPause:
applicationInstallsDidResume:
applicationInstallsDidCancel:
applicationInstallsDidPrioritize:
applicationStateDidChange:
applicationIconDidChange:
networkUsageChanged:
observeLaunchProhibitedApps
deviceManagementPolicyDidChange:
applicationsDidChangePersonas:
updateDeviceDataSourcesInNanoPreferences
_bundleQueue
_bundleIdentifiers
initWithMachServiceName:
setDelegate:
resume
weakObjectsHashTable
initWithConnection:
_setQueue:
keyWithCollectionIdentifier:deviceUUID:
checkoutStore:
_onCalloutQueue_async:
objectForKey:
_queue_addCheckoutHandler:forStoreKey:
setObject:forKey:
removeObjectForKey:
_queue_notifyObserversStoreCreated:
_queue_invokeCheckoutHandlersForStoreKey:withStore:
_queue_curateStore:withCompletion:
_onQueue_async:
enumerateAllStoresIncludingUnpaired:withHandler:
getAllDevices
valueForProperty:
containsObject:
checkoutStoreForCollectionIdentifier:deviceUUID:withHandler:
relinquishStore:
enumerateStoreIdentifiersWithBlock:
collectionStoreHasBeenCreated:
enumerateKeysAndObjectsUsingBlock:
collectionIdentifier
removeUnusedResourceDirectories
getPairedDevices
runCollectionServer
listener:shouldAcceptNewConnection:
enumerateAllStoresWithHandler:
addCollectionLifecycleObserver:
removeCollectionLifecycleObserver:
removeOrphanedResourceDirectories
_clients
_curatedStores
_storesBeingCurated
_checkoutHandlersByStoreKey
_curatorsByCollectionIdentifier
_collectionLifecycleObservers
_xpcIncomingMessageQueue
_calloutQueue
migrateIfNecessary
runPreMigrator
runPostMigrator
UUIDString
plistRepresentation
copyWithZone:
T@"NSString",R,N,V_collectionIdentifier
T@"NSUUID",R,N,V_deviceUUID
_sharedCollectionStoreQueue
addObserver:withSeqId:
removeAllObjects
setSelectedUUID:suppressingCallbackToObserver:
_performOrEnqueueAction:
setOrderedUUIDs:
updateFaceForUUID:withConfiguration:
updateFaceForUUID:withResourceDirectory:
upgradeFace:forUUID:
flushCompleteForIdentifier:
_onQueue:
flushWithObserverCallback:
numberWithUnsignedInteger:
remoteObjectProxyWithErrorHandler:
instanceDescriptor
loadFullCollectionWithOrderedUUIDs:selectedUUID:facesDescriptorsByUUID:seqId:completion:
updateSelectedFaceUUID:seqId:
updateOrderedFaceUUIDs:seqId:
updateFaceForUUID:withConfiguration:seqId:
updateFaceForUUID:withResourceDirectory:seqId:completion:
upgradeFaceInstanceDescriptor:forUUID:seqID:
addFaceInstanceDescriptor:forUUID:seqId:
removeFaceForUUID:seqId:completion:
resetClientCollectionWithCompletion:
registerForCollectionIdentifier:deviceUUID:withSeqId:
setSelectedFaceUUID:suppressingCallback:
setOrderedFaceUUIDs:
addFaceInstanceDescriptor:forUUID:
upgradeFaceInstanceDescriptor:forUUID:
resetCollection
flushUpdatesWithIdentifier:
collectionStore:loadOrderedUUIDs:selectedUUID:facesByUUID:seqId:acknowledge:
collectionStore:didUpdateSelectedUUID:seqId:
collectionStore:didUpdateOrderedUUIDs:seqId:
collectionStore:didUpdateFaceForUUID:withConfiguration:seqId:
collectionStore:didUpdateFaceForUUID:withResourceDirectory:seqId:acknowledge:
collectionStore:didAddFace:forUUID:seqId:
collectionStore:didRemoveFaceOfStyle:forUUID:seqId:acknowledge:
collectionStore:didUpgradeFace:forUUID:seqId:
resetCollectionStore:acknowledge:
_collectionStore
_actionsEnqueuedWhileWaitingForStore
_setupXPCEventListner
_updateAllSnapshots
defaultCenter
_handleCalendarDayChangedNotification
addObserver:selector:name:object:
_handleCurrentLocaleDidChangeNotification
updateAddableAndGallerySnapshotsWithContinuationBlock:finishedBlock:
_prewarmForActivity:
runSnapshotServer
setName:
setMaxConcurrentOperationCount:
setQualityOfService:
queue
_preferencesKeyForCollectionStore:
_loadComplicationCollection
_queue_cleanCache
_currentContext
localeMatchesContext:
buildVersionMatchesContext:
_queue_updateAllSnapshots
lock
unlock
hasLoaded
_queue_allSnapshotObjects
_queue_cleanCacheExcludingKeys:
_queue_updateSnapshots:completion:
_updateSnapshotForFace:inStore:
deviceForNRDevice:
defaultFaceOfStyle:forDevice:
viewControllerForFace:withOptions:
provideSnapshotOfFace:options:completion:
valueForKey:
boolValue
unsignedIntegerValue
initWithServiceName:
provideSnapshotOfFaceInstanceDescriptor:options:completion:
interfaceWithProtocol:
invalidate
blockOperationWithBlock:
setQueuePriority:
addOperation:
progress
completedUnitCount
totalUnitCount
selectedUUID
firstObject
faceForUUID:
name
queue_updateAddableAndGallerySnapshotsWithContinuationBlock:finishedBlock:
array
removeObjectAtIndex:
mutableCopy
objectAtIndex:
device
nrDeviceUUID
deviceCategory
defaultModernSnapshotOptions
allObjects
_onObserverQueue_async:
clientIdentifier
_queue_updateSnapshotForFace:complicationTemplateChanged:
_enumerateRemoteComplicationsForFace:block:
_enumerateAllFacesForDeviceUUID:block:
indexOfObject:
exchangeObjectAtIndex:withObjectAtIndex:
addObjectsFromArray:
_queue_snapshotObjectsForFace:
allValues
_queue_snapshotObjectsForFace:complicationTemplateChanged:
dailySnapshotKey
unadornedSnapshotKey
_snapshotExistsForKey:
snapshotContext:isStaleRelativeToContext:
wantsUnadornedSnapshot
setFace:
dictionaryWithObjects:forKeys:count:
setOptions:
setKey:
setContext:
setSnapshotStale:
archivedDataWithRootObject:requiringSecureCoding:error:
writeToFile:atomically:
allKeys
removeImageForKey:withCompletion:
enumerateObjectsUsingBlock:
_queue_cleanContexts
currentContext
sharedComplicationCollectionForDevice:
complicationForSlot:
complicationType
enumerateComplicationSlotsWithBlock:
_queue_updateSnapshotForFace:inStore:
_modernSnapshottingEnabledForStore:
setValue:forKey:
snapshotStale
indexesOfObjectsPassingTest:
objectsAtIndexes:
_endSnapshottingActivityDidTakeSnapshot:
sharedRenderingContext
setDevice:
_startSnapshottingActivity
_queue_snapshotFaces:completion:
subarrayWithRange:
face
initWithLabel:
options
_queue_cleanSnapshotKeysWithBlankComplications
_writeImageToDisk:imageName:
_noteExternalChangeForKey:
_notifyFaceSnapshotChangedForKey:
logCurrentInterval
setImage:forKey:withCompletion:
context
postNotificationName:object:
beginActivity:
endActivity:
stringByAppendingPathComponent:
stringByAppendingPathExtension:
writeToFile:options:error:
collectionStoreWillBePurged:
complicationCollection:didUpdateSampleTemplateForClient:descriptor:
complicationCollection:didUpdateComplicationDescriptorsForClient:
complicationCollection:didRemoveSampleTemplatesForClient:descriptor:
complicationCollectionDidLoad:
complicationCollection:didUpdateSampleTemplateForClient:
_observerCallbackQueue
_snapshotKeysWithBlankComplications
_snapshotContexts
_complicationCollection
_needToUpdateSnapshotsForFacesWithThirdPartyComplications
_observers
_observersLock
_setImageForKeyOperationsCount
_currentSnapshots
_currentSnapshotCompletions
_pendingSnapshots
_pendingSnapshotCompletions
_snapshotter
_xpcSnapshotOperationQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
isEquivalentToFace:
isEqualToDictionary:
_snapshotStale
_face
_options
_key
_context
T@"NTKFace",&,N,V_face
T@"NSDictionary",&,N,V_options
T@"NSString",&,N,V_key
T@"NTKFaceSnapshotContext",&,N,V_context
TB,N,V_snapshotStale
initWithContentsOfFile:options:error:
initForReadingFromData:error:
setDecodingFailurePolicy:
setWithObjects:
decodeObjectOfClasses:forKey:
_sharedCollectionStoreObserverQueue
_queue_loadFullCollectionForObserver:completion:
_queue_playbackChangesForObserver:fromSeqId:
_queue_clearRemovalsThroughSeqId:
nrDeviceForNRDeviceUUID:
_deviceBuildVersion
_storeBuildVersion
compare:options:
_queue_isEmpty
faceStyleForUUID:
_queue_faceForUUID:
_setOrderedUUIDs:skipSyncObserver:
_setSelectedUUID:skipSyncObserver:suppressingCallbackToObserver:
_addFace:forUUID:skipSyncObserver:
_updateFaceForUUID:withConfiguration:skipSyncObserver:
_updateFaceForUUID:withResourceDirectory:skipSyncObserver:
_upgradeFace:forUUID:skipSyncObserver:
_removeFaceForUUID:skipSyncObserver:
_setSelectedUUID:skipSyncObserver:
_fromSyncResetWithFaces:orderedUUIDs:selectedUUID:
_resetWithFaces:orderedUUIDs:selectedUUID:
resourceDirectory
lastPathComponent
_queue_setOrderedUUIDs:
_queue_notifyDidUpdateOrderedUUIDs:skipSyncObserver:
_queue_setSelectedUUID:
_queue_notifyDidUpdateSelectedUUID:skipSyncObserver:suppressingCallbackToObserver:
_queue_addFace:forUUID:
_queue_notifyDidAddFace:forUUID:skipSyncObserver:
applyConfiguration:
_queue_incrementSeqId
_queue_notifyDidUpdateFaceForUUID:withConfiguration:skipSyncObserver:
setResourceDirectory:
_queue_notifyDidUpdateFaceForUUID:withResourceDirectory:skipSyncObserver:completion:
configuration
_queue_notifyDidUpgradeFace:forUUID:skipSyncObserver:
_queue_isEmptyExceptForUUID:
removeUUID:
_queue_notifyDidRemoveFaceOfStyle:forUUID:skipSyncObserver:completion:
removeAllUUIDs
collectionStore:didSuppressNotificationForSeqId:
_queue_reloadFullCollectionForObserver:completion:
_queue_computeValidationHash
faceStyle
addUUID:withFaceStyle:
updateOrderWithUUIDs:
removeObjectsForKeys:
setResourceDirectoryExists:
complication
setComplication:forSlot:
appendFormat:
length
substringFromIndex:
stringWithCapacity:
sortedArrayUsingComparator:
_queue_copyAllFacesByUUID
cleanupOrphanedStoresWithCurrentDeviceUUIDs:
setSyncObserver:withSeqId:
clearSyncObserver
version
setVersion:
isStoreVersionPreGrace
refusesToDeleteLastFace
setRefusesToDeleteLastFace:
faceForMigrationForUUID:
setSelectedUUID:
withoutNotifyingSyncObserverSetOrderedUUIDs:
withoutNotifyingSyncObserverSetSelectedUUID:
withoutNotifyingSyncObserverAddFace:forUUID:
withoutNotifyingSyncObserverUpdateFaceForUUID:withConfiguration:
withoutNotifyingSyncObserverUpdateFaceForUUID:withResourceDirectory:
withoutNotifyingSyncObserverUpgradeFace:forUUID:
withoutNotifyingSyncObserverRemoveFaceForUUID:
withoutNotifyingSyncObserverResetWithFaces:orderedUUIDs:selectedUUID:
swapInTheseFaces:
synchronize
flushAndComputeValidationHashWithObserverCallback:
_storeDirectory
_seqId
_syncObserver
_initialSetupComplete
_refusesToDeleteLastFace
_manifest
_facesByUUID
_selectedUUID
_removals
Tf,N
TB,R,N
TB,N
stringWithString:
integerValue
appendString:
numberWithInteger:
removeObjectsInArray:
isEqualToArray:
initWithContentsOfFile:
_getUUID:boxedStyle:fromEntry:
raise:format:
emptyManifest
_containsUUID:
_orderedUUIDs
_boxedStylesByUUID
destinationOfSymbolicLinkAtPath:error:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
stringWithContentsOfFile:encoding:error:
writeToFile:atomically:encoding:error:
floatValue
data
JSONObjectWithData:options:error:
currentDevice
faceWithJSONObjectRepresentation:forDevice:forMigration:allowFallbackFromInvalidFaceStyle:
JSONObjectRepresentation
dataWithJSONObject:options:error:
copyItemAtPath:toPath:error:
createSymbolicLinkAtPath:withDestinationPath:error:
contentsOfDirectoryAtPath:error:
dictionaryWithContentsOfFile:
reason
isRunningInStoreDemoMode
arrayWithObjects:count:
complicationCollectionStoreHasBeenCreated:
runComplicationStoreServer
checkoutStoreForComplicationCollectionIdentifier:deviceUUID:withHandler:
addComplicationCollectionLifecycleObserver:
removeComplicationCollectionLifecycleObserver:
_stores
activePairedDeviceSelectorBlock
getAllDevicesWithArchivedAltAccountDevicesMatching:
fileSystemRepresentation
string
path
URLQueryAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
URLWithString:
openURL:withOptions:error:
applicationState
isInstalled
close
inputStreamWithData:
open
argon_initWithJSONRepresentation:
sharedManager
faceBundleForBundleIdentifier:onDevice:
sharedRecorder
fileName
beginRecordingForIdentifier:method:completion:
sharedService
ingestKeyDescriptor:withCompletion:
unzipStream:toPath:completionHandler:
linkItemAtPath:toPath:error:
zippedDataForPath:
date
timeIntervalSinceDate:
_queue_beginActivity:
_queue_endActivity:
_queue_setOrUpdateActivityAndTimer
checkin
_activityIdentifiers
_adjustCriteriaTimer
_removePostWakeActivityTimer
_xpcActivityRegistered
sharedJetsamMonitor
incrementTransactionCount
decrementTransactionCount
removeLastObject
_faultInAllClientData
clientIds
_faultInComplicationDescriptorsForClientID:
_faultInSampleDataForKey:
_enumerateAllKeysForClientID:usingBlock:
familiesWithSampleTemplateForKey:
initWithSupportedFamilies:
supportedFamilies
templatePathForFamily:
setTemplatePath:forFamily:
complicationDescriptorIdentifiersForClientIdentifier:
initWithClientIdentifier:descriptor:
complicationIdentifier
initWithClientIdentifier:complicationIdentifier:
legacyComplicationDescriptorWithSupportedFamilies:
_queue_loadFullCollectionForObserver:
_queue_sampleTemplateForKey:family:
_queue_complicationDescriptorsForClientIdentifier:
_updateLocalizableSampleDataTemplate:forKey:family:skipSyncObserver:
_updateComplicationDescriptors:forClientIdentifier:skipSyncObserver:
_removeComplicationForKey:skipSyncObserver:
_updateLocalizableSampleData:forKey:skipSyncObserver:
addKey:supportForSampleTemplateForFamily:
templateForFamily:
_queue_notifyDidUpdateSampleTemplate:forKey:family:skipSyncObserver:
setTemplate:forFamily:
_updateLocalizableSampleData:forKey:family:skipSyncObserver:
identifier
displayName
setClientId:supportForComplicationDescriptorIdentifiers:
_queue_notifyDidUpdateComplicationDescriptors:forClientIdentifier:skipSyncObserver:
removeSampleTemplatesForKey:
_queue_notifyDidRemoveComplicationForKey:skipSyncObserver:
complicationDescriptorsForClientIdentifier:
initWithIdentifier:displayName:supportedFamilies:
complicationStore:didUpdateComplicationDescriptors:forClientIdentifier:seqId:
_descriptorForKey:
complicationStore:didUpdateLocalizableSampleTemplate:forClientIdentifier:descriptor:family:seqId:
complicationStore:didRemoveComplicationSampleTemplatesForClientIdentifier:descriptor:seqId:
complicationStore:loadFullCollectionWithLocalizableSampleTemplates:complicationDescriptors:seqId:
complicationStore:didSuppressNotificationForSeqId:
initWithJSONObjectRepresentation:
complicationSampleDataForClientID:descriptor:
clients
sampleTemplateForClientIdentifier:descriptor:family:
updateLocalizableSampleDataTemplate:forClientIdentifier:descriptor:family:
updateComplicationDescriptors:forClientIdentifier:
removeComplicationSampleTemplatesForClientIdentifier:descriptor:
withoutNotifyingSyncObserverSetComplicationSampleData:forClientIdentifier:descriptor:
withoutNotifyingUpdateComplicationDescriptors:forClientIdentifier:
withoutNotifyingUpdateLocalizableSampleDataTemplate:forClientIdentifier:descriptor:family:
withoutNotifyingSyncObserverRemoveComplicationSampleTemplatesForClientIdentifier:descriptor:
_clientToSampleData
_clientToSampleDataLock
_clientIDtoComplicationDescriptors
_clientIDtoComplicationDescriptorsLock
arrayWithObject:
_clientToSampleTemplateFamilies
_clientToComplicationDescriptorIdentifiers
initAsPrimary:
initWithService:priority:asMasterStore:options:
setDelegate:queue:
delegate
companionSyncWrapperCanSendData
resume:
suspend
_queue_resetSync
_queue_deltaSync
initRequiringSecureCoding:
encodeInteger:forKey:
encodeObject:forKey:
encodedData
sendData:options:completion:
setNeedsResetSync
_queue_requestSync:withBlock:
setHasChangesAvailable
_getSyncBackoffPeriod
isResetSync
companionSyncWrapperDidRequestActivePairedSyncSession
syncSessionType
reportProgress:
requestResetSync
requestDeltaSync
initWithDomain:code:userInfo:
setSerializer:
setTargetQueue:
sessionMetadata
dictionaryWithDictionary:
isSending
setSessionMetadata:
outgoingSyncSessionDidStart:
incomingSyncSessionDidStart:
decodeIntegerForKey:
decodeObjectOfClass:forKey:
incomingLibraryValidationMessage:
outgoingSyncSessionGetNextMessage
syncDidCompleteSending
_reportProgressForMessage:inSession:
serializer
dataFromChange:
unarchivedObjectOfClass:fromData:error:
incomingSyncSessionApplyMessage:
incomingSyncSessionResetDataStoreWithError:
syncDidFailWithError:
syncDidComplete
outgoingSyncSessionDidEnd:withError:
incomingSyncSessionDidEnd:withError:
setIsResetSync:
sentChangeCount
setChangesSent:
sentChangeByteCount
setBytesSent:
setDidSucceed:
service:startSession:error:
service:sessionEnded:error:
service:incomingData:completion:
service:incomingStream:metadata:completion:
service:encounteredError:context:
service:willPreferSession:overSession:
service:willSwitchFromPairingID:toPairingID:
service:didSwitchFromPairingID:toPairingID:
service:targetDeviceProximityChanged:
service:targetDeviceConnectionChanged:
serviceDidPairDevice:
serviceDidUnpairDevice:
syncSession:enqueueChanges:error:
syncSession:applyChanges:completion:
syncSession:didEndWithError:
syncSession:resetDataStoreWithError:
resetDataStoreForSyncSession:completion:
syncSession:rollbackChangesWithError:
syncSession:restartChanges:
syncSession:successfullySynced:
changeFromData:ofType:
dataWithSYObject:
SYObjectWithData:
encodeSYChangeForBackwardCompatibility:protocolVersion:
decodeChangeData:fromProtocolVersion:ofType:
syncCoordinator:beginSyncSession:
syncCoordinator:didInvalidateSyncSession:
syncCoordinatorDidChangeSyncRestriction:
supportsMigrationSync
syncCoordinatorDidReceiveStartSyncCommand:
sendOutOfBandMessage:ofType:
isPrimary
_resetSyncRequestedDuringSyncRestriction
_resumeWhenSyncRestrictionLifted
_syncService
_syncServiceQueue
_resetSyncRequested
_syncFailureCount
_syncBackoffOngoing
_syncSerialQueue
_deltaSyncRequiredAfterBackoff
_resetSyncRequiredAfterBackoff
_isPrimary
_delegate
TB,R,N,V_isPrimary
T@"<NTKDSyncDelegate>",W,N,V_delegate
faceWithJSONObjectRepresentation:forDevice:
initWithData:encoding:
arrayWithCapacity:
dataUsingEncoding:
setEncodesTemplatesAsPaths:
runSnapshotTool
runDaemon
killDaemon
mainRunLoop
start
cleanupOrphanedSyncDirectoriesWithCurrentDeviceUUIDs:
sharedAppLibrary
prewarmCompanionDaemonWithCompletion:
scheduledTimerWithTimeInterval:repeats:block:
loadFullCollectionWithLocalizableSampleTemplates:complicationDescriptors:seqId:
updateLocalizableSampleTemplate:forClientIdentifier:descriptor:family:seqId:
updateComplicationDescriptors:forClientIdentifier:seqId:
removeComplicationSampleTemplatesForClientIdentifier:descriptor:seqId:
_complicationStore
syncCoordinatorWithServiceName:
shouldEnableSyncPrintingLogs:
setUp
handleDeviceTinkerStateChangedNotification
handleActiveDeviceChangedNotification
nrDevice
supportsCompanionSync
isTinker
CLKDeviceUUIDForNRDevice:
tearDown
isSetup
_queue_applyIncomingMessageLists
_queue_requestSyncIfNecessary
activeSyncSession
shouldEnableSync
syncRestriction
ensureSyncIsActive:
activeNRDevice
resetCurrentDevice
_queue_storeStatusForDeviceUUID:
seqId
_queue_complicationStoreStatusForDeviceUUID:
setNeedsResetSync:
setSeqId:
_queue_outgoingMessageListForDeviceUUID:
messageOfType:
enqueueMessage:
messageOfType:withFaceUUID:
messageOfType:withComplicationCliendId:descriptor:family:
messageOfType:withComplicationClientId:
_queue_checkoutLibraryStoreForDeviceUUID:
_queue_checkoutComplicationStoreForDeviceUUID:
prepareForSyncing:
clearAllMessages
initWithPersistencePath:
suspendCoalescing
messageEnumerator
isSyncing
nextSyncData:
colorSyncMessageWithData:domain:
nextObject
setProgress:
_queue_addPayloadToMessage:withFaceStore:complicationStore:
clearMessageCount:
_queue_endGuardingOutgoingSessionRequest
resumeCoalescing
finishSyncing:
_queue_incomingMessageListForDeviceUUID:
messageType
payloadData
label
processSyncData:domain:deviceUUID:
finishSyncingForDeviceUUID:success:
_queue_applyIncomingMessageList:collectionStore:complicationStore:storeStatus:
_queue_requestSyncIfNecessaryAndForceDeltaRequestOtherwise:
_queue_beginGuardingOutgoingSessionRequest
_queue_executeIfSyncQueuesAreEmpty:
NRProductVersionForNRDevice:
addPropertyObserver:forPropertyChanges:
needsResetSync
hasMessages
firstMessage
_queue_applyResetMessageList:collectionStore:complicationStore:
_queue_applyDeltaMessageList:collectionStore:complicationStore:
faceUUID
complicationClientID
complicationDescriptor
descriptor
complicationFamily
dequeueFirstMessage
setPayloadData:
syncProviderDidRequiresDeltaSync:
complicationCollectionStoreWillBePurged:
requestResetSyncForComplicationStore:
device:propertyDidChange:fromValue:
outgoingSessionTransactionCount
setOutgoingSessionTransactionCount:
incomingSessionTransactionCount
setIncomingSessionTransactionCount:
pigmentSyncProvider
setPigmentSyncProvider:
pigmentSyncReceiver
setPigmentSyncReceiver:
_companionSyncWrapper
_device
_syncCoordinator
_outgoingMessageLists
_incomingMessageLists
_storeStatuses
_complicationStoreStatuses
_complicationStores
_guardingOutgoingSessionRequest
_sessionMessageList
_sessionStoreStatus
_sessionComplicationStoreStatus
_sessionStore
_sessionComplicationStore
_sessionIsResetSync
_estimatedNumberOfMessagesToSend
_countOfSentMessages
_outgoingSessionMessageEnumerator
_outgoingSessionTransactionCount
_incomingSessionTransactionCount
_pigmentSyncProvider
_pigmentSyncReceiver
Tq,N,V_outgoingSessionTransactionCount
Tq,N,V_incomingSessionTransactionCount
T@"NTKPigmentSyncProvider",&,N,V_pigmentSyncProvider
T@"NTKPigmentSyncReceiver",&,N,V_pigmentSyncReceiver
nextObjectBlock
setNextObjectBlock:
_nextObjectBlock
T@?,C,N,V_nextObjectBlock
arrayWithContentsOfFile:
_enqueueMessageDict:
_persistMessageDictionaries
removeObjectsInRange:
_ensureCoalescingSuspended
_messageAtIndex:
_getMessageType:
setMessageType:
_getFaceUUID:
setFaceUUID:
_getClientID:
setComplicationClientID:
_getFamily:
setComplicationFamily:
_getComplicationDescriptor:
setComplicationDescriptor:
_pruneMessagesMadeObsoleteByNewMessageOfType:withFaceUUID:clientID:family:complicationDescriptor:
indexSet
addIndex:
removeObjectsAtIndexes:
_persistencePath
_messageDictionaries
_coalescingSuspended
numberWithBool:
_status
T@"NSNumber",&,N
null
initToMemory
propertyForKey:
_unzipQueue
NTKDCompanionGalleryFacesCurator
NTKDCollectionCurator
NSObject
NTKDFaceSnapshotClientHandler
NTKDFaceSnapshotControllerObserver
NTKFaceSnapshotServer
NTKDComplicationStoreComplicationDescriptorMigrator
NTKDSiriDataSourcesObserver
LSApplicationWorkspaceObserverProtocol
NTKDCollectionCoordinator
NSXPCListenerDelegate
NTKDMigrator
NTKDCollectionStoreKey
NSCopying
NTKDCollectionClient
NTKCollectionServer
NTKDCollectionStoreObserver
NTKDFaceSnapshotCoordinator
NTKFaceSnapshotServiceProtocol
NTKDFaceSnapshotController
NTKDCollectionLifecycleObserver
NTKComplicationCollectionObserver
_NTKDFaceSnapshotObject
NTKDCollectionStore
_NTKDCollectionManifest
NTKDComplicationStoreCoordinator
NTKDActivityTracker
NTKDComplicationStore
_NTKDComplicationCollectionManifest
NTKDCompanionSyncWrapper
SYServiceDelegate
SYSessionDelegate
SYChangeSerializer
PSYSyncCoordinatorDelegate
NTKDDaemon
NTKDComplicationCollectionClient
NTKComplicationStoreServer
NTKDComplicationStoreObserver
NTKDSyncController
NTKPigmentSyncProviderDelegate
NTKDComplicationCollectionLifecycleObserver
NTKDCollectionStoreSyncObserver
NTKDComplicationStoreSyncObserver
NTKDSyncDelegate
NRDevicePropertyObserver
_MessageListEnumerator
_MessageList
_StoreStatus
NTKDZIPArchivist
@16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@?24
v24@0:8@16
v32@0:8@"NTKDCollectionStore"16@?<v@?>24
v24@0:8@"NTKDCollectionStore"16
@24@0:8@16
v24@0:8@"NSString"16
v16@0:8
v24@0:8q16
v40@0:8@16@24@?32
v24@0:8@?16
v40@0:8@"NSUUID"16@"NSDictionary"24@?<v@?@"UIImage">32
v24@0:8@"NTKFaceInstanceDescriptor"16
v40@0:8@"NTKFaceInstanceDescriptor"16@"NSDictionary"24@?<v@?@"UIImage">32
v24@0:8@?<v@?>16
@32@0:8@16@24
@?16@0:8
@"NSXPCConnection"
@"NSObject<OS_dispatch_queue>"
@"NTKDFaceSnapshotController"
@"NSString"
@"NSUUID"
v32@0:8@16@24
v20@0:8B16
v24@0:8@"NSArray"16
v32@0:8@"NSArray"16@"NSArray"24
@"NSMutableSet"
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v28@0:8B16@?20
v32@0:8@?16@24
@"NSMutableDictionary"
@"NSHashTable"
@24@0:8^{_NSZone=}16
v40@0:8@16@24@32
v28@0:8@16B24
v40@0:8@"NSString"16@"NSUUID"24@"NSNumber"32
v28@0:8@"NSUUID"16B24
v32@0:8@"NSUUID"16@"NTKFaceConfiguration"24
v32@0:8@"NSUUID"16@"NSString"24
v24@0:8@"NSUUID"16
v32@0:8@"NTKFaceInstanceDescriptor"16@"NSUUID"24
v64@0:8@16@24@32@40@48@?56
v48@0:8@16@24@32@40
v56@0:8@16@24@32@40@?48
v56@0:8@16q24@32@40@?48
v64@0:8@"NTKDCollectionStore"16@"NSArray"24@"NSUUID"32@"NSDictionary"40@"NSNumber"48@?<v@?>56
v40@0:8@"NTKDCollectionStore"16@"NSUUID"24@"NSNumber"32
v40@0:8@"NTKDCollectionStore"16@"NSArray"24@"NSNumber"32
v48@0:8@"NTKDCollectionStore"16@"NSUUID"24@"NTKFaceConfiguration"32@"NSNumber"40
v56@0:8@"NTKDCollectionStore"16@"NSUUID"24@"NSString"32@"NSNumber"40@?<v@?>48
v48@0:8@"NTKDCollectionStore"16@"NTKFace"24@"NSUUID"32@"NSNumber"40
v56@0:8@"NTKDCollectionStore"16q24@"NSUUID"32@"NSNumber"40@?<v@?>48
@"NTKDCollectionStore"
@"NSMutableArray"
v40@0:8@"NTKFaceInstanceDescriptor"16@"NSDictionary"24@?<v@?B@"UIImage">32
v40@0:8@"NTKComplicationCollection"16@"NSString"24@"CLKComplicationDescriptor"32
v32@0:8@"NTKComplicationCollection"16@"NSString"24
v24@0:8@"NTKComplicationCollection"16
v32@0:8@?16@?24
@28@0:8@16B24
@"NTKComplicationCollection"
@"NSRecursiveLock"
@"NSObject<OS_dispatch_semaphore>"
@"NSArray"
@"NTKFaceSnapshotter"
@"NSOperationQueue"
@"NTKFace"
@"NSDictionary"
@"NTKFaceSnapshotContext"
f16@0:8
v20@0:8f16
q24@0:8@16
v36@0:8@16B24@28
v36@0:8@16@24B32
v44@0:8@16@24B32@?36
v44@0:8q16@24B32@?36
@"NSNumber"
@"<NTKDCollectionStoreSyncObserver>"
@"_NTKDCollectionManifest"
B32@0:8@16q24
v40@0:8^@16^@24@32
@"NSObject<OS_dispatch_source>"
@40@0:8@16@24q32
v48@0:8@16@24@32q40
v44@0:8@16@24q32B40
@32@0:8@16q24
@"<NTKDComplicationStoreSyncObserver>"
@"_NTKDComplicationCollectionManifest"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
B40@0:8@16@24^@32
v48@0:8@16@24@32@?40
@40@0:8@16@24@32
B40@0:8@"SYService"16@"SYSession"24^@32
v40@0:8@"SYService"16@"SYSession"24@"NSError"32
v40@0:8@"SYService"16@"NSData"24@?<v@?B@"NSError">32
v48@0:8@"SYService"16@"NSInputStream"24@"NSDictionary"32@?<v@?B@"NSError">40
v40@0:8@"SYService"16@"NSError"24@"NSDictionary"32
@"SYSession"40@0:8@"SYService"16@"SYSession"24@"SYSession"32
v40@0:8@"SYService"16@"NSUUID"24@"NSUUID"32
v28@0:8@"SYService"16B24
v24@0:8@"SYService"16
I40@0:8@16@?24^@32
B32@0:8@16^@24
I40@0:8@"SYSession"16@?<B@?@"<SYChange>">24^@32
v40@0:8@"SYSession"16@"NSArray"24@?<v@?B@"NSError">32
v32@0:8@"SYSession"16@"NSError"24
B32@0:8@"SYSession"16^@24
v32@0:8@"SYSession"16@?<v@?B@"NSError">24
v32@0:8@"SYSession"16@"NSSet"24
@40@0:8@16q24q32
@"NSData"24@0:8@"<SYChange>"16
@"<SYChange>"32@0:8@"NSData"16q24
@"NSData"24@0:8@"<SYObject>"16
@"<SYObject>"24@0:8@"NSData"16
@"NSData"32@0:8@"<SYChange>"16q24
@"<SYChange>"40@0:8@"NSData"16q24q32
v32@0:8@"PSYSyncCoordinator"16@"PSYServiceSyncSession"24
v24@0:8@"PSYSyncCoordinator"16
@20@0:8B16
v32@0:8@16q24
v32@0:8q16@?24
@"SYService"
@"<NTKDSyncDelegate>"
v48@0:8@"CLKComplicationTemplate"16@"NSString"24@"CLKComplicationDescriptor"32q40
v32@0:8@"NSArray"16@"NSString"24
v32@0:8@"NSString"16@"CLKComplicationDescriptor"24
v64@0:8@16@24@32@40q48@56
v48@0:8@"NTKDComplicationStore"16@"NSDictionary"24@"NSDictionary"32@"NSNumber"40
v64@0:8@"NTKDComplicationStore"16@"CLKComplicationTemplate"24@"NSString"32@"CLKComplicationDescriptor"40q48@"NSNumber"56
v48@0:8@"NTKDComplicationStore"16@"NSArray"24@"NSString"32@"NSNumber"40
v48@0:8@"NTKDComplicationStore"16@"NSString"24@"CLKComplicationDescriptor"32@"NSNumber"40
@"NTKDComplicationStore"
v24@0:8@"NTKPigmentSyncProvider"16
v24@0:8@"NTKDComplicationStore"16
v32@0:8@"NTKDCollectionStore"16@"NSNumber"24
v32@0:8@"NTKDComplicationStore"16@"NSNumber"24
v28@0:8B16@20
B24@0:8^@16
@"NTKDSyncMessage"16@0:8
v28@0:8B16@"NSError"20
B24@0:8@"NTKDSyncMessage"16
@"PSYServiceSyncSession"16@0:8
v40@0:8@"NRDevice"16@"NSString"24@32
B20@0:8B16
B40@0:8@16@24@32
q16@0:8
@"NTKDCompanionSyncWrapper"
@"CLKDevice"
@"PSYSyncCoordinator"
@"_MessageList"
@"_StoreStatus"
@"NSEnumerator"
@"NTKPigmentSyncProvider"
@"NTKPigmentSyncReceiver"
v24@0:8Q16
@24@0:8Q16
v56@0:8q16@24@32@40@48
Connection invalidated: %@ %@
Inside: %@ %s
%@ faceSnapshotChangedForKey:%@
Couldn't make record for %@ - %@
applicationsDidInstall will rewrite available data sources to NPS
applicationsDidUninstall will rewrite available data sources to NPS
checking for orphaned resource directories
beginning pre migration
pre migration complete
beginning post migration
Updating all snapshots due to migration
post migration complete
register for <%@,%@> with seqId %@
<%@,%@> setSelectedFaceUUID: %@, suppressingCallback: %@
<%@,%@> setOrderedFaceUUIDs: %@
<%@,%@> updateFaceForUUID: %@ withConfiguration: %@
<%@,%@> updateFaceForUUID: %@ withResourceDirectory: %@
<%@,%@> upgradeFaceInstanceDescriptor:ForUUID: %@  face: %@ 
<%@,%@> addFaceInstanceDescriptor: %@ face: %@
<%@,%@> removeFaceForUUID: %@
<%@,%@> resetCollection
<%@,%@> flushUpdatesWithIdentifier: %@
outgoing to client: <%@,%@> load %@ faces (seqId = %@)
outgoing to client: <%@,%@> update selected uuid to %@ (seqId = %@)
outgoing to client: <%@,%@> update ordered uuids to %@ (seqId = %@)
outgoing to client: <%@,%@> update face for UUID %@ to config %@ (seqId = %@)
outgoing to client: <%@,%@> update face for UUID %@ with resource directory %@ (seqId = %@)
outgoing to client: <%@,%@> upgrade face %@ for UUID %@ (seqId = %@)
outgoing to client: <%@,%@> add face %@ for UUID %@ (seqId = %@)
outgoing to client: <%@,%@> remove face of style %@ for UUID %@ (seqId = %@)
outgoing to client: <%@,%@> reset collection store 
failed to reset collection store with proxy error: %@
Update all snapshots due to daemon exiting while snapshotting
NTKDFaceSnapshotClientHandler %p accept from connection %@
NTKDFaceSnapshotClientHandler %p invalidated %@
Update all snapshots due to calendar day changed notification
Update all snapshots due to current localed changed notification
Updated gallery snapshots - %ld
Update all snapshots due to %s
Prewarm: Upgrade/Restore Check-In. %@
Prewarm: Coordinator vanished for activity. %@
Prewarm: Snapshotting marked as finished (but failed).
Prewarm: Snapshotting failed to mark as finished (but failed) - In State %ld.
Prewarm: No activity given. Skipping
Prewarm: XPC Activity was checked-in
Prewarm: Snapshotting asked to defer.
Prewarm: Snapshotting is done.
Prewarm: Snapshotting successfully finished.
Prewarm: Snapshotting failed to mark as finished - In State %ld.
Prewarm: Snapshotting successfully deferred.
Prewarm: Snapshotting failed to mark as deferred - In State %ld.
Delaying snapshots for %is
Snapshot delay elapsed; starting
Clean snapshot caches due not having been cleaned in the last %lu days
update all snapshots as context is stale
adding NTKDFaceSnapshotController observer - %@
removing NTKDFaceSnapshotController observer - %@
Nothing to snapshot. No paired device
%@: %s: In here. Face: %@
Returning early: Face is nil. %@ %s
%@: %s snapshotInDaemon: YES
Returning early: No block given for: %@ %s
%@: %s wantsToPersistSnapshot: YES, image: %@
%@: %s operation block started with face: %@
%@: %s face: %@ callbackExecuted: %d.
PROXY ERROR: %@
%@: %s face: %@ calling proxy: %@
%@: %s face: %@ provideSnapshotOfFace competionBlock: %d %@.
%@: %s face: %@ Done!
%@: %s adding the operation %@ to the queue:%@, count: %lld/%lld
nil deviceUUID. Nothing to snapshot.
Library (%@) for deviceUUID (%@) doesn't have any faces. Nothing to snapshot.
snapshot selected face:%@
Prewarm: Checking if %@ needs snapshot prewarm. %lu
Prewarm: %lu stores to enumerate.
Prewarm: Store %@ has %lu face UUIDs to enumerate.
Prewarm: Snapshotting next face in store %@
Prewarm: Store %@ finished.
Prewarm: Face(%@)'s device(isLuxo: %d ID: %@) doesn't match the store device's ID(%@)
Prewarm: Store %@ will snapshot face %@.
Prewarm: Store %@ generated snapshot %@ face %@.
notify face snapshot changed for key:%@
collection store has been created
collection store will be purged
Updating snapshot due to face configuration change for face %@
Updating snapshot due to face resource directory change for face %@
Updating snapshot due to face added for face %@
Updating snapshots due to loading all faces for collection store
Updating snapshot due to updating selected UUID for face %@
Updating snapshot due to upgrade for face %@
Updating snapshot due to updated template for client identifier %@ and face %@
Setting flag to clean all snapshots due to not having been cleaned in last day
updating all snapshots as updatedSnapshotsDueToMinimalTimeInterval has not elapsed and needToupdateForFacesWithThirdPartyComplications
Updating snapshots for library on active gizmo
Updating snapshots for libraries on other gizmos
Updating snapshots for other collections on active gizmo
Updating snapshots for other collections on other gizmos
Maybe need updated snapshot for face %@
No update needed.
Update needed!
Persisting snapshot contexts
Persisting snapshot keys with blank complications
Cleaning snapshot cache
Removing snapshot for key: %@
_queue_updateSnapshotForFace:complicationTemplateChanged: no active device so we are not taking snapshots.
taking snapshots for %lu faces
writing snapshot to disk
did write snapshot to disk
failed to write snapshot to disk
starting snapshotting activity
ending snapshotting activity
Setting daemon to exit when clean
No snapshots taken. Not setting daemon to exit when clean
Error decoding face snapshot contexts: %@
Error decoding snapshot keys with blank complications: %@
Cleaning up orphaned face collection stores...
...deleting face collection stores for device uuid %@
...deleting GLOBAL face collection stores
store<%@,%@> created with setupComplete: %@, seqId: %@, manifest: %@
store<%@,%@> set version: %f
store<%@,%@> set build version: %@
store<%@,%@> mark initial setup complete
Swapping in faces (%@) for collection (%@)
<%{public}@, %{public}@, %{public}@> update face for UUID %{public}@: configuration = %{public}@ - face = %{public}@
<%@,%@,%@> update face for UUID %@: new resource directory = %@
<%@,%@,%@> upgrade face for UUID %@
<%@,%@,%@> remove face for UUID %@
<%@,%@,%@> called collection reset completion block again
<%@,%@,%@> timed out waiting for observers to acknowledge collection reset
<%@,%@,%@> add face for UUID %@: %@
<%@,%@> did not add face (because face already present) for UUID: %@
<%@,%@> ignoring attempt to add nil face for UUID: %@
<%@,%@,%@> set selected UUID: %@
<%@,%@> ignoring attempt to select already-selected UUID %@
<%@,%@,%@> set ordered UUIDs (first uuid = %@)
<%@,%@> ignoring reorder request that would not change face order
collection store string: %@
collection store string, part 2: %@
collection store string, part 3: %@
collection store string, part 4: %@
collection store string, part 5: %@
collection store string, part 6: %@
generated library collection store hash: %@
store<%@,%@> playback changes since seqId %@
[playback changes - seqId %@] update selected uuid: %@
[playback changes - seqId %@] update ordered uuids (first uuid = %@))
[playback changes - seqId %@] add face %@
[playback changes - seqId %@] upgrade face %@
[playback changes - seqId %@] update face configuration %@
[playback changes - seqId %@] update face resource directory %@
[playback changes - seqId %@] remove face for uuid %@
Unable to read manifest at path %@: %@
Error reading selected UUID at path %@: string could not be converted to UUID: %@
Unable to extract face from JSON object. Error = %@. JSON object = %@
_RemoveResourceDirectoriesExceptUUIDs: Removing %@
Could not remove Resources directory at path (%@) with error (%@)
_RemoveResourceDirectoriesExceptUUIDs: Keeping %@
Unable to read removals dictionary at path %@: %@
Not executing _WriteRemovals as we are in demo mode and have no companion
No path given %@
Couldn't find anything at path %@ - %@
Attempting to remove store at path %@
Store already removed at path %@
Couldn't remove store at path %@ - %@
successfully launched Tap-to-Radar: %@
failed to launch Tap-to-Radar: %@ %@
user declined to open Tap-to-Radar
Couldn't find bridge record - %@
Failed to create face from data: %@
Couldn't record being for %@ - %@
unzip failed, data written to disk for analysis: %@
prompting to raise a radar re: unzip failure
Failed to archive face to json data. Face style: %lu - error: %{public}@
Failed to create directory at path to backup face data. Face style: %lu - bundle location: %{public}@ - error: %{public}@
Failed to link resource path for face. Face style: %lu - resource Path: %{public}@ - error: %{public}@
performing activity for identifier %@ because minimum interval %g has elapsed since last performed (%@)
not performing activity for identifier %@ because minimum interval %g has not elapsed since last performed (%@)
checkin complete with state = %s
begin activity '%@'
end activity '%@'
unregistering xpc activity
scheduling xpc activity for 5 minutes from now
xpc activity handler unexpectedly invoked -- we should have adjusted it further into the future before it fired
adjust xpc activity criteria timer fired
****** imbalanced transactions for reason '%@' -- please file a radar on Watch Faces ******
Cleaning up orphaned complication stores...
...deleting complication stores for device uuid %@
No identifier for descriptor %@ (%@) of client %@
NTKDComplicationStore, removing sample data for %@, %@
Successfully wrote complication sample template for key %@, family %@
Failed to write complication sample template for key %@, family %@
Successfully wrote complication descriptor %@ for %@
Failed to write complication descriptor %@ for %@
Successfully removed complication sample data for %@, %@
Failed to remove complication sample data for %@, %@
Error reading removals dictionary at path %@: %@
_NTKDComplicationCollectionManifest, removing sample data for %@, %@
Read manifest with descriptors %@
Encountered nil client identifier while writing manifest!
Successfully wrote manifest with descriptors %@ %@
Failed to write manifest with descriptors %@ %@
NTKDCompanionSyncWrapper initialized. %{public}@ - isPrimary:%d - _syncServiceQueue:%@ _syncService:%@
NTKDCompanionSyncWrapper dealloc'ed. %{public}@
Resuming companion sync service.
currently under paired sync restriction; will resume later
error resuming companion sync: %@
Syspending companion sync
currently under paired sync restriction; reset sync requests are deferred during sync restriction
sent library validation hash to companion: %@
sent memory viewed with collection identifier to companion: %@
sent up next log collection message to companion: %@
error sending out of band message [%ld, %@], error: %@
reset sync successfully requested
reset sync ongoing, incoming request ignored
delta sync successfully requested
backing off for %tu seconds before attempting sync
reset sync under backoff, delta sync delayed
delta sync under backoff, reset sync delayed
delta sync already under backoff, no delta sync requested
sync progress: %f
_resetSyncRequestedDuringSyncRestriction is YES, force to request reset sync.
requesting delta sync
Companion sync won't start session. It can't send data.
Companion sync starting session.
sync service encountered an error: %@
requesting new reset sync after previous failure
incoming out of band data -- messageType: %lu, message: %@
library validation rejected -- paired sync ongoing
error decoding message (%@): %@
UNEXPECTED SYNC OUTCOME: please file a radar w/ co-sysdiagnose under 'Watch Faces'
sessionStateResult: %ld, messageToSend: %@
Companion Sync session applying changes
failed to unarchive sync message: %@
apply sync mesage: %@, success=%@
paired sync session ended
sync session ended with error: %@
didSwitchFromPairingID:%@ toPairingID:%@
Pairing ID did switched. Reset _resetSyncRequested to NO.
error decoding sync message (%@): %@
payload json data: %{public}@
Unable to convert payload data to array of UUIDS: %@
Unable to convert payload data to NTKComplicationSampleData: %@
Unable to convert payload data to CLKComplicationTemplate: %@
Unable to convert payload data to NSArray<CLKComplicationDescriptor>: %@
payload json data: %{public}@ - face %{public}@
daemon is running
Cleaning up orphaned stores and sync data with current device uuids: %@
nanotimekitcompaniond should not be running because bridge is not installed--killing process!
daemon exiting
SNAPSHOT TEST MODE: all nonessential features are disabled
Cleaning up orphaned sync directories...
...deleting sync data for device uuid %@
SYNC DISABLED.
SYNC SHOULD BE %{public}@. isDemoMode: %lu, altdv: %lu, deviceSupportsCapability: %lu, has nrDevice: %lu, deviceUUID: %{public}@
NTKDSyncController received NRPairedDeviceRegistryDeviceDidPairNotification
NTKDSyncController received CLKActiveDeviceChangedNotification
Requested to setup NTKDSyncController but it is already setup
SYNC ENABLED. Setting up NTKDSyncController.
SYNC DISABLED. Tearing down NTKDSyncController.
enquening - starting paired sync %s session
starting paired sync %s session
Notifying pairedSync session completed.
enquening - paired sync restriction %s
paired sync restriction %s
paired sync restriction lifted but we don't have a nano registry device. activeNRDevice: %{public}@
Current device forced update - _device: %{public}@ - activeNRDevice: %{public}@
collectionStore (seqId = %@) did full reload -- will request reset sync
collectionStore (seqId = %@) did update selected uuid: %@
collectionStore (seqId = %@) did update ordered uuids
collectionStore (seqId = %@) did update face for uuid '%@' with configuration: %@
collectionStore (seqId = %@) did update face for uuid '%@' with resource directory: %@
collectionStore (seqId = %@) did upgrade face for uuid '%@': %@
collectionStore (seqId = %@) did add face for uuid '%@': %@
collectionStore (seqId = %@) did remove face of style %@ for uuid '%@'
collectionStore seqId = %@
complicationStore did full reload -- will request reset sync
complicationStore did update template of family %@ for client '%@'
complicationStore did update complication descriptors for client '%@'
complicationStore did remove complication for client '%@'
complicationStore seqId is now %@
complicationStore requested reset sync
NRDevicePropertySystemBuildVersion did change. enqueuing sync request
outgoing session (reset=%@) did start for device with UUID: %@
#color-sync Prepared for syncing pigment list.
estimated number of messages to send: %lu
#color-sync Sending color sync data to outgoing session.
progress: %lu / %lu => %f
outgoing session get next message: returning %@
outgoing session end (success=%@)
Session failed with error: %@
incoming session (reset=%@) did start for device with UUID: %@
incoming session: enqueuing request to reset data store
incoming session, enqueuing message: %@
#color-sync Received color sync data.
incoming session end (success=%@)
clearing incoming message list after unsuccessful sync session
validating library store for device UUID: %@
library store validation hashes differ: %@, %@
library store validation hashes differ: %@, %@ -- requesting reset sync
library store validation succeeded -- hash matches between gizmo and companion: %@
Can send data? shouldEnableSync: %lu, syncUnrestricted: %lu
sync request ignored because active gizmo is older than Daytona - watchOS=%u
requesting reset sync (needed for collection: %@, complication: %@)
applying incoming message lists
incoming message list for device uuid '%@' has messages; will apply...
building up reset state from reset message list
processing incoming message (part of reset): %@
**** ignoring unexpected message type %@ in reset sync message list (this should not be possible: please file a radar on Watch Faces) ****
unsuccessful reset sync! no face or complication changes. not applying changes, will request new reset sync.
applying incoming message: %@
**** ignoring unexpected 'reset' message inside delta message list (this should not be possible: please file a radar on Watch Faces) ****
incoming - %{public}@ - added face %{public}@
incoming - %{public}@ - updated face config %{public}@
Outgoing - %{public}@ - added face %{public}@
Outgoing - %{public}@ - updated face %{public}@
ignoring library store validation attempt -- sync messages currently enqueued
unable to read message list at path %@: %@
message list enqueue message %@
Pruning enqueued message made obsolete by new message. Pruned message: %@
Unable to read store status at path %@: %@
Couldn't create BOMCopier for zipping
Error copying/zipping: %d
BOM file error: symlinks are unsupported
BOM could not extract archive %s
BOM could not extract archive for path %s: %s
BOM file error for path %s, %s
BOM file conflict error for path %s
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.nanotimekitcompaniond</string>
<key>aps-connection-initiate</key>
<true/>
<key>com.apple.Contacts.database-allow</key>
<true/>
<key>com.apple.QuartzCore.secure-capture</key>
<true/>
<key>com.apple.QuartzCore.secure-mode</key>
<true/>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.backboard.client</key>
<true/>
<key>com.apple.bulletinboard.observer</key>
<true/>
<key>com.apple.companionappd.connect.allow</key>
<true/>
<key>com.apple.developer.healthkit</key>
<true/>
<key>com.apple.developer.icloud-container-development-container-identifiers</key>
<array>
<string>com.apple.nanotimekit.facesupport</string>
</array>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudKit</string>
</array>
<key>com.apple.nano.nanoregistry</key>
<true/>
<key>com.apple.nano.nanoresourcegrabber</key>
<true/>
<key>com.apple.private.allow-explicit-graphics-priority</key>
<true/>
<key>com.apple.private.cloudkit.setEnvironment</key>
<true/>
<key>com.apple.private.dmd.policy</key>
<true/>
<key>com.apple.private.healthkit</key>
<true/>
<key>com.apple.private.healthkit.authorization_bypass</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.clockface.sync</string>
</array>
<key>com.apple.private.photos.allowmemorymutation</key>
<true/>
<key>com.apple.private.security.storage.AppDataContainers</key>
<true/>
<key>com.apple.private.security.storage.NanoTimeKit.FaceSupport</key>
<true/>
<key>com.apple.private.security.storage.Photos</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServicePhotos</string>
<string>kTCCServiceLiverpool</string>
</array>
<key>com.apple.private.tcc.allow.overridable</key>
<array>
<string>kTCCServiceAddressBook</string>
</array>
<key>com.apple.private.usernotifications.bundle-identifiers</key>
<array>
<string>com.apple.Bridge</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-only</key>
<array>
<string>/Library/UserConfigurationProfiles/EffectiveUserSettings.plist</string>
</array>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.NanoTimeKit</string>
</array>
<key>com.apple.security.iokit-user-client-class</key>
<array>
<string>IOSurfaceAcceleratorClient</string>
<string>AppleJPEGDriverUserClient</string>
<string>AGXDeviceUserClient</string>
<string>IOSurfaceRootUserClient</string>
<string>AGXCommandQueue</string>
<string>AGXDevice</string>
<string>AGXSharedUserClient</string>
<string>IOAccelContext</string>
<string>IOAccelContext2</string>
<string>IOAccelDevice</string>
<string>IOAccelDevice2</string>
<string>IOAccelSharedUserClient</string>
<string>IOAccelSharedUserClient2</string>
<string>IOAccelSubmitter2</string>
<string>IOMobileFramebufferUserClient</string>
</array>
<key>com.apple.security.temporary-exception.files.absolute-path.read-write</key>
<array>
<string>/AppleInternal/Library/NanoTimeKit/FaceSupport</string>
</array>
</dict>
</plist>
