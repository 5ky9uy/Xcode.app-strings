com.apple.FileProvider.ValidationV1
.docid/
changed/
/src=
,dst=
com.apple.metadata:_kMDItemUserTags
com.apple.lastuseddate#PS
com.apple.favorite-rank.number#PS
com.apple.metadata:kMDItemFavoriteRank
can't open directory at 
[ERROR] %@ %{errno}d
[DEBUG] %@ %{errno}d
can't close directory at 
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/os-plugins/LocalStorage/extension/URL+LocalStorageAdditions.swift
NSFileProviderChangeObserver
v28@0:8@16B24
suggestedBatchSize
v24@0:8@"NSArray"16
v28@0:8@"NSData"16B24
v24@0:8@"NSError"16
OS_dispatch_source_timer
NSFileProviderItem
{NSFileProviderTypeAndCreator=II}16@0:8
B16@0:8
T@"NSString",N,R
parentItemIdentifier
filename
contentType
T@"UTType",N,R
typeIdentifier
typeAndCreator
T{NSFileProviderTypeAndCreator=II},N,R
TQ,N,R
fileSystemFlags
documentSize
T@"NSNumber",N,R
creationDate
contentModificationDate
extendedAttributes
T@"NSDictionary",N,R
tagData
trashed
TB,N,R
uploaded
T@"NSError",N,R
downloaded
downloadingError
mostRecentVersionDownloaded
shared
sharedByCurrentUser
ownerNameComponents
T@"NSPersonNameComponents",N,R
mostRecentEditorNameComponents
versionIdentifier
itemVersion
T@"NSFileProviderItemVersion",N,R
symlinkTargetPath
userInfo
@"NSString"16@0:8
@"UTType"16@0:8
@"NSNumber"16@0:8
@"NSDate"16@0:8
@"NSDictionary"16@0:8
@"NSError"16@0:8
@"NSPersonNameComponents"16@0:8
@"NSFileProviderItemVersion"16@0:8
NSFileProviderServiceSource
@24@0:8^@16
serviceName
restricted
@"NSXPCListenerEndpoint"24@0:8^@16
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
hash
T#,N,R
debugDescription
B24@0:8@"Protocol"16
OS_dispatch_source
can't encode change token
LocalStorageFileProvider/FSChangeToken.swift
encoding token should never failed
can't init change token from data blob
_TtC24LocalStorageFileProvider17FSChangesNotifier
observedID
deviceUUID
shouldSignalChange
 notifies changes on 
[DEBUG] 
%@ %@
[DEBUG] 
v16@?0@"NSError"8
notifying changes up to FSEventID 
notified changes up to FSEventID 
can't signal changes for 
LocalStorageFileProvider/FSChangesNotifier.swift
require at least one URL to init a change notifier
can't get volume UUID for "
<FSChangesNotifier:
Attempt to resolve local item against non-fileURL: 
_TtC24LocalStorageFileProvider27LocalChangesObserverContext
localFileEnumerator
shouldUpdateFileIDInGenstore
fsChangesEnumerator
_TtC24LocalStorageFileProvider19LocalFileEnumerator
v32@0:8@16@24
itemURL
urls
notifier
enumerators
enumeratorsQueue
can't get volume UUID for 
enumerators-queue
LocalStorageFileProvider/LocalFileEnumerator.swift
can't create enumerator for an empty list of URLs
can't create notifier for 
, enumeration will have no live update
can't create change token from anchor data, resetting
NSFileProviderErrorDomain
enumerate changes with 
device UUID changed (
LocalStorageFileProvider/FSChangesEnumerator.swift
require at least one URL to init a change enumerator
<FSChangeEnumerator:
enumerate items with 
start gather phase
discovered 1 item
gather phase completed
enumerator returned an offset (
) smaller than the initial offset 
resume gather phase at offset 
LocalStorageFileProvider.LocalFileEnumerator
LocalStorageFileProvider.LocalChangesObserverContext
NSFileProviderEnumerator
v32@0:8@"<NSFileProviderEnumerationObserver>"16@"NSData"24
v32@0:8@"<NSFileProviderChangeObserver>"16@"NSData"24
v24@0:8@?<v@?@"NSData">16
NSFileProviderItem_Private
v20@0:8B16
T@"NSURL",N,R
hasUnresolvedConflicts
containerDisplayName
downloadRequested
hidden
providerIdentifier
sharingPermissions
fp_spotlightDomainIdentifier
fp_domainIdentifier
fp_parentDomainIdentifier
fp_ubiquitous
conflictingVersions
T@"NSArray",N,R
fp_isContainerPristine
fp_cloudContainerIdentifier
fp_cloudContainerClientBundleIdentifiers
T@"NSSet",N,R
displayName
topLevelSharedItem
quarantineBlob
TB,N
fileSystemFilename
excludedFromSync
fp_lastModifiedByCurrentUser
fp_addedByCurrentUser
fp_addedByNameComponents
preformattedOwnerName
preformattedMostRecentEditorName
isCollaborationInvitation
@"NSURL"16@0:8
@"NSArray"16@0:8
@"NSSet"16@0:8
@"NSData"16@0:8
NSObject
#16@0:8
@24@0:8:16
Q16@0:8
childItemCount
T@"NSDate",N,R
favoriteRank
uploading
downloading
failed to resolve 
_TtC24LocalStorageFileProvider19FSChangesEnumerator
v16@0:8
currentToken
numberOfChanges
numberOfReaderCaughtUp
observer
startupFSEventID
too much backlog
forcing full rescan: 
[DEBUG] %@
fetching changes did catch up (pathBase:
enumeration took too long
forward parent update of 
ignore update of 
; item is not a directory
; containers are not indexed
forward update of 
deep sub-hierarchy requires rescan
; item is not a directory of 
scanning folder 
forward deletion of 
LocalStorageFileProvider.FSChangesEnumerator
can't resolve fid=
item not found fid=
can't resolve did=
item lookup failed with EPERM, wait and try again
item lookup failed with ESTALE, wait and try again
item lookup failed with EBUSY, wait and try again
item lookup failed with ENOENT, wait and try again
item lookup failed with ENOENT, can't resolve did=
item not found docID=
_TtC24LocalStorageFileProvider13FSEventReader
stream
streamQueue
originalFSEventID
lastProcessedFSEventID
mode
latency
verbose
ownerDescription
delegate
_TtCZFC24LocalStorageFileProvider13FSEventReader20canResumeGatherPhaseFT2onGSaV10Foundation3URL_15previousEventIDVs6UInt642inVS_11LocalDomain_TOS_36FSEventReaderGatherPhaseResumeStatusS3__L_14FSEventChecker
gatherPhaseResumeStatus
sema
can't create FSEvent stream for 
fsevent: received 
 because no path can be extracted
fsevents id wrapped
[INFO] %@
dropped fsevents
done processing history
ignoring event from the past
dropping fsevent at "
"; No object at path
/Mobile Documents/
can't extract docID from 
dropping fsevent at 
; URL is not monitored
; fileObjectIDs don't match (
localstorage.fsevents-stream
unable to retrieve UUID for device 
unable to create UUID string from 
unable to stat path at '
_TtC24LocalStorageFileProvider17LocalFileProvider
v32@0:8@16@?24
@40@0:8@16@24@?32
v40@0:8@16@24@?32
v48@0:8@16@24@32@?40
v64@0:8@16@24Q32@40Q48@?56
localDomain
_TtCFC24LocalStorageFileProvider17LocalFileProvider20waitForStabilizationFT17completionHandlerFGSqPs5Error__T__T_L_15BarrierDelegate
barrierURL
timer
reader
provider
hasFired
hasNotified
onStabilize
wait for stabilization
waitForStabilization
stabilization timed out
[ERROR] %@
received catchup
received event for 
didn't see the event after waiting, trying again
applying content and metadata changes: 
moving item from 
v24@?0@"NSURL"8@"NSURL"16
no need to move item from 
cycle detected, discarding move of item from 
conflicting structural changes, still merging requested changes: 
conflicting content changes, discarding requested changes
group.com.apple.FileProvider.LocalStorage
isInFSSyncTestingMode
) [coordination=
creating trash directory failed with 
v24@?0@"NSURL"8@"NSError"16
cache-hit for handle 
can't find valid parent URL to untrash 
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/os-plugins/LocalStorage/LocalContainer.swift
LocalStorageFileProvider/LocalItem.swift
setting before bounce name 
can't before bounce name: 
lookup item ID for 
LocalStorageFileProvider/LocalStorageProvider.swift
called without a contentType
lookup item for 
lookup default location for 
auto-delete trashed items older than 
checking trash of 
com.apple.trash.time#PS
[ERROR] %@ %@
 favorite rank on 
can't set favorite rank on 
can't set tag data on 
set last-used date 
can't set last-used date on 
moving content of 
can't trash item
construct enumerator for 
v32@?0@"NSURL"8@"<NSFileProviderItem>"16@"NSError"24
parent mTime IOpolicy set failed with error 
ignore permissions IOpolicy set failed with error 
implementsIsDownloaded
implementsIsUploaded
auto notify changes on .workingSet at startup
NSFileProviderExtension_PrivateInit
@24@0:8@"NSFileProviderDomain"16
NSFileProviderExtension_Private
v40@0:8@16Q24@?32
@56@0:8@16{CGSize=dd}24@?40@?48
@32@0:8Q16@?24
v40@0:8@"NSURL"16Q24@?<v@?@"NSError">32
v40@0:8@"NSURL"16@"NSURL"24@?<v@?B@"NSError">32
@"<NSFileProviderItem>"32@0:8@"NSURL"16^@24
@"NSProgress"32@0:8@"NSString"16@?<v@?@"<NSFileProviderItem>"@"NSError">24
v32@0:8@"NSDate"16@?<v@?>24
v32@0:8@"FPCTLTermDumper"16@?<v@?@"NSError">24
v24@0:8@?<v@?@"NSString"@"NSError">16
@"NSProgress"56@0:8@"NSArray"16{CGSize=dd}24@?<v@?@"NSString"@"NSData"@"NSString"@"NSError">40@?<v@?@"NSError">48
v40@0:8@"NSString"16@"NSString"24@?<v@?@"<NSFileProviderItem>"@"NSError">32
@"NSProgress"32@0:8@"NSString"16@?<v@?@"NSURL"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"<NSFileProviderItem>"@"NSError">24
v64@0:8@"<NSFileProviderItem>"16@"NSFileProviderItemVersion"24Q32@"NSURL"40Q48@?<v@?@"<NSFileProviderItem>"QB@"NSError">56
@"NSProgress"32@0:8Q16@?<v@?@"NSError">24
v32@0:8@"NSString"16@?<v@?>24
v40@0:8@"NSError"16Q24@?<v@?@"NSError">32
v32@0:8@"NSString"16@?<v@?@"NSArray">24
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSArray">32
v24@0:8@?<v@?@"NSArray"@"NSError">16
v24@0:8@?<v@?@"NSError">16
superclass
description
File Provider Storage
can't create root for domain 
[CRIT] %@
cannot lookup deviceID for path 
_TtC24LocalStorageFileProvider9LocalItem
capabilities
lastUsedDate
isTrashed
isAncestorInTrash
isExcludedFromSync
isUploadedTestingImpl
isDownloadedTestingImpl
fileURL
fp_isUbiquitous
decorations
domain
isFolder
isPackage
isRegularItem
$__lazy_storage_$_containerItem
T@"NSString",N,R,VitemIdentifier
T@"NSString",N,R,VparentItemIdentifier
TQ,N,R,Vcapabilities
T@"NSNumber",N,R,VdocumentSize
T@"NSNumber",N,R,VchildItemCount
T@"NSData",N,R
T@"NSNumber",N,R,VfavoriteRank
TB,N,R,VisTrashed
T@"NSFileProviderItemVersion",N,R,VitemVersion
TB,N,R,VisExcludedFromSync
T{NSFileProviderTypeAndCreator=II},N,R,VtypeAndCreator
TB,N,R,VisUploadedTestingImpl
TB,N,R,VisDownloadedTestingImpl
T@"NSURL",N,C
TB,N,R,Vfp_isUbiquitous
TQ,N,R,VfileSystemFlags
com.apple.conflict#PS
My awesome device
com.apple.private.localstorage.nildocumentsize#S
com.apple.private.localstorage.nilchilditemcount#S
com.apple.private.localstorage.islocked#S
com.apple.private.localstorage.excludedFromSync#S
com.apple.private.localstorage.nonevictable#S
com.apple.conflict
obtaining VFSItem for 
can't obtain VFSItem for 
i16@?0^{fpfs_fileattrs={fpfs_item_handle=QQII*Q}{fpfs_metadata=ib1b1b1b1b1b1b1b1b1b1b1b1b1Sq{timespec=qq}{timespec=qq}{timespec=qq}Q{fpfs_tag_data=^vQi}(?=II)QQq*q*^{fpfs_xattr}I*i}Q[0c]}8
ignoring item at 
LocalStorageFileProvider.LocalItem
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/os-plugins/LocalStorage/LocalItem.swift
can't stamp trash info for 
com.apple.trash.putback#PS
can't clear trash info for 
uploadingError
contentPolicy
Tq,N,R
fp_isContainer
syncRoot
NSFileProviderItemDecorating
_TtC24LocalStorageFileProvider21LocalContainerMonitor
appRegistry
version
monitoredAppsByID
Down-casted Array element failed to match the target type
Expected 
NSArray element failed to match the Swift Array Element type
Expected 
localstorage.container.monitor.
localstorage.container.monitor.shared
FSChangesEnumerator
upgrading snapshot from version 
all items from domains 
 were removed from index
deleting searchable domains 
can't save snapshot at 
 to save snapshot for "
LocalStorageFileProvider.LocalContainerMonitor
notify for changes in 
notifying container update timed out
LocalStorageFileProvider/LocalContainer.swift
reading data at 
nothing cached on disk, taking new snapshot
 to restore snapshot for "
FPAppRegistryDelegate
v32@0:8@"FPAppRegistry"16@"NSArray"24
q16@0:8
itemIdentifier
com.apple.FileProvider
com.apple.FileProvider.LocalStorage
localstorage.log-section
_TtC24LocalStorageFileProvider19LocalRootEnumerator
rootID
fileEnumerator
containerSnapshot
LocalStorageFileProvider.LocalRootEnumerator
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/os-plugins/LocalStorage/LocalRootEnumerator.swift
Couldn't open stream: %s
v16@?0@"NSMutableArray"8
<subscription %@: observing>
<subscription %@: (inactive)>
.rendez-vous.%@.nosync
unlabeled
fp_task_tracker_is_cancelled
fp_task_tracker.m
task_tracker
fp_task_tracker_cancel
.rendez-vous.
\.rendez-vous\.([0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})\.nosync
.notify.
\.notify\.([0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})\.nosync
FPCKTask-queue
v16@?0@"NSString"8
v16@?0@"NSObject<OS_xpc_object>"8
<%@:%p>, device:'%s' mounted-on:'%s' fstype:%s
Unable to stat(2) item after eviction attempt
ingest
propagate
delete
%s/wharf
i24@?0^{fpfs_item_handle=QQII*Q}8q16
propagate/fault
propagate/dir
propagate/doc
fpfs_wharf_unload
fpfs_wharf.c
attrs->item_handle.doc_id == 0
%s/%llu
com.apple.fileprovider.resurrection_info
%*s %d%s%s
%s: fsevents-stream
%s: fsevents-process
FPFS_FSCHANGEMONITOR_NODELAY
-[FSChangeMonitor _activateSubscription:error:]
FSChangeMonitor.m
!subscription.isActivated
B16@?0@"FSChangeSubscription"8
root
history
live
com.apple.fpfs.fsevents
-[FSChangeMonitor _queueEvents:markSelfEncountered:]
_fseventsToProcess.count < _maxFSEventQueueSize
running
suspended
cancelled
 reset:%d
 [open stream]
<%@: %p %@ roots: %@>
-[FSChangeMonitor resume]
suspendCount >= 0
true
<id:%llu,flg:0x%x> 
path
fileID
historical fsevents not available
creating a new fsevents stream
fsevents API inconsistency
dropped live event
com.apple.decmpfs
.Trash
download
com.apple.icloud-file-fault
-fail-with-dropped
kernel
historical
<%@ #%llu fileID:%llu flags:%@ path:'%@'>
state
retry_count
next_retry_date
last_error_date
last_error
priority
domain_wide_error
kind
is_dataless
size
is_locked
posix_permissions
creation_date
content_modification_date
last_used_date
tag_data
favorite_rank
is_package
is_hidden
extension_hidden
child_item_count
extended_attributes
physical_size
is_evictable
is_pinned
is_in_pinned_folder
before_bounce_filename
quarantine_blob
is_syncroot
is_ignoreroot
closest_syncroot
os_type
link_count
collaboration_identifier
dbUUID
dbBugfixRevision
fsStreamUUID
fsStreamEventID
fpStreamSyncToken
featureFlags
errorGeneration
itemNotFound
itemCollision
cannotBounce
contentUnavailable
directoryNotEmpty
versionConflict
capturedContentMissing
itemNotEvictable
itemMismatch
directoryChangedWhileEnumerating
downloadCancelled
lookupNotPermitted
ItemKindMismatch
itemType
collidingItemChangedBeforeBounce
itemIsFlockedCanNotPropagate
itemNeedDelayPropagation
uploadCancelled
uploadInterrupted
itemContentVersionMismatch
item_id
job_type
file_id
test_content
location
length
returnIfAlreadyOnFS
propagateToFS
reconciledWithFP
timestamp
state_conditions
state_continuation
is_uploading
is_uploaded
uploading_error
downloading_error
is_excluded_from_sync
is_shared
is_top_level_shared_item
is_shared_by_current_user
preformatted_owner_name
preformatted_most_recent_editor_name
last_edited_by_current_user
sharing_permissions
is_container
is_container_pristine
app_container_bundle_identifier
cloud_container_identifier
container_display_name
display_name
has_unresolved_conflicts
item_decoration
user_info
content_policy
inherited_content_policy
conflicting_versions
last_editor_device_name
metadata_is_dataless
metadata_is_evictable
decoration_capabilities
materialize(_:request:qos:completion:)
materialization waiter
Recursion too deep for lookup of itemID %s request %s
Lookup itemID %s with behavior %s request %s iteration %ld
Waiting for propagation of root to the FP request %s
propagation to FP
 Request to propagate item with ID %s for %s
Root propagated, retry lookup request %s
findExistingVFSItemFor(itemID:parentIsImported:request:completionHandler:)
no vfsItemID found for item %s, request %s
Item cannot be found on disk, looking for parent for %s request %s
Item cannot be found on disk, only looking for existing item %s, request %s
Found item on the trash, lookup the root to make sure it's materialized
Found item on disk, but item is not reconciled yet %s, request %s
Found item on disk, but item is not accessible yet %s, request %s
findParentID(for:completionHandler:)
Parent item is not dataless, lookup and propagate %s request %s
Parent item must be imported, materializing %s request %s
Parent item is dataless, materializing %s request %s
Found parent %s, behavior: %s, shouldReconcile: %{bool}d request %s
Parent is materialized, lookup %s again request %s
looking up VFS item for %s request %s
finished VFS item lookup for %s request %s: %s
finished propagating to FP %s request %s: %s
finished post-propagation VFS lookup for %s reason %s: %s
propagationto FS
finished propagating to FS %s request %s: %s
finished post-propagation VFS lookup for %s request %s: %s
for by 
 Forcing busy item return for URL resolution
Request to eviction of content of itemID %s request %s
 Failed to get SQLJobRegistry
evict(_:request:progress:completionHandler:)
 Failed to remove pending downloads %@
evict(_:request:qos:completion:)
eviction waiter
i16@0:8
timeoutState
OS_dispatch_source_data_or
OS_os_transaction
FPXPCAutomaticErrorProxy
database
 rowID 
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/fssync/libfssync/interfaces/persistence/ReconciliationTable.swift
unexpected materializing parent state on bound reconciliation 
libfssync/ReconciliationTable.swift
 destinationItemID baseVersion recursive domainVersion 
 item destinationItemID baseVersion fields version domainVersion 
 item version domainVersion 
  detected move cycle by disabling path-matching condition for propagation of %s
  breaking parent creation cycle by disabling path-matching condition for propagation of %s
  breaking reparent cycle by disabling path-matching condition for propagation of %s
  breaking replacing a parent cycle by disabling path-matching condition for propagation of %s
 filename below 
  breaking move-back vs creation cycle by disabling path-matching condition for propagation of %s
 error 
from to diffs 
  move of %s -> %s: reparent cycle detected
  move of %s -> %s: breaking concurrent rename cycle
evictability should not be propagated from FS to FP
partiallyMaterialized
  invalid transition %{public}s -> %{public}s
importingFromDisk
 contentInSync metadataInSync 
inconsistent item kind %{public}s new kind %{public}s
should not happen
Not Implemeneted
_TtC9libfssync14FPFSEnumerator
logger
vfsItemID
fpItemID
extensionEnumerator
lifetimeExtender
keepAlive
previousAnchor
_currentAnchor
changedItemsByID
deletedItemsIDs
reset()
  requested to reset stream
  %@: ignoring item change %s -> %s
  %@: registering item deletion %s -> %s
  %@: registering item update %s -> %s
  %@: item get updated and we're ask to invalidate the children, reset
  reset stream for %@
  %@: enumerating page %s
enumerateItems(fromPage:selfItem:suggestedPageSize:reply:)
  %@: enumerating page %s done: %ld items%s anchor:%llu
  %@: enumerating page %s failed: %@
libfssync/FPFSEnumerator.swift
document as a parent?
enumeratorHasBeenInvalidated(_:)
libfssync.FPFSEnumerator
  %@: enumerating from change %llu
enumerateChanges(fromToken:suggestedBatchSize:reply:)
Swift/Dictionary.swift
Swift/NativeDictionary.swift
Duplicate values for key: '
  %@: enumerating from change %llu done: %ld updated, %ld deleted%s, next anchor:%llu
  %@: enumerating from change %llu failed: %@
currentSyncAnchor(completion:)
updateSchedulingOrder(
setItemFlockStatus(
removeCollidingItemID(
addCollidingItemID(
deleteChildrenReconciliations(
deleteReconciliation(
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/fssync/libfssync/interfaces/file-tree/item/types/ItemMetadata.swift
com.apple.ostype
posixPermissions
isInPinnedFolder
isPathExtensionHidden
beforeBounceFilename
collaborationIdentifier
com.apple.fpfs.fileid
libfssync/ItemMetadata.swift
Inconsistent kind 
unexpected error while retrieving info at %s
_TtC9libfssync20InternalPathsManager
nsDomain
manager
appSupportURL
wharfDirectoryURL
dbDirectoryURL
dbURL
temporaryDirectoryURL
i12@?0i8
Could not set protection class: %d
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/fssync/fpfs/InternalPathsManager.swift
Cloud Storage root path for domain %@: %ld
could not get support paths
Application Support root path for domain %@: %s
libfssync/InternalPathsManager.swift
no provider for 
creating root at %s
can't create dataless root at %s: file already exists
Attempting to import existing domain at %s into new domain %s
attempting create a domain at %s, but that path already exists and is not owned by anyone
attempting create a domain at %s, but that path already exists and is not owned by %s
com.apple.CloudDocs.iCloudDriveFileProvider
preserve un-owned directory %s,  ended with error %@
preserve un-owned directory %s, reached max bounce number
trying to preserve un-owned directory %s
Created dataless root %s
Error while creating root %s: %@
Marking root dataless %s
no provider for domain 
no identifier for domain 
com.apple.CloudDocs.iCloudDriveFileProviderManaged
Library/Application Support/CloudDocs/ciconia/files
_TtC9libfssync25VFSLookupItemContinuation
startDate
deletionDetectionDate
hasSeenBusy
isStale
backoff
timeSource
throttleColumns
keyColumns
deleteDisabledThrottles
disableRetries
nextRetryDate
waitGroup
hasPendingDeletionBackoff
xpcActivityRegistered
jobThrottlingParameters
itemThrottlingParameters
fileTreeThrottlingParameters
_id__kind__job_type__ordering
    ON 
(item_id, kind, job_type)
_state_domain_wide_error ON 
(state, domain_wide_error)
_state_next_retry ON 
(state, next_retry_date)
CREATE UNIQUE INDEX 
_per_job
    ON 
(kind, item_id, job_type)
  kind TINYINT NOT NULL,
  item_id 
 NULL,
  job_type INTEGER NULL,
  state TINYINT NOT NULL,
  priority UNSIGNED INT NOT NULL,
  retry_count SMALLINT NOT NULL,
  next_retry_date INTEGER NOT NULL,
  last_error_date INTEGER NOT NULL,
  last_error BLOB NULL,
  domain_wide_error INT NOT NULL
  purged %lld outdated entries from %s
      WHERE state = 
        AND next_retry_date < 
com.apple.fileproviderd.upcall-timeout-retry
  %{public}s: throttle %s: %s
 AND job_type = 
domain_wide_error = 
   AND state != 
SELECT domain_wide_error
  FROM 
  %{public}s: %ld throttles expired
   SET state = 
 WHERE state = 
 AND +domain_wide_error != 
  %{public}s: no pending throttles
 %{public}s: schedule throttling handling in %{public}s
  %{public}s: schedule throttling unchanged in %{public}s
  %{public}s: only infinite throttles
  %{public}s: retries are disabled
com.apple.fileproviderd.throttling-retry
trigger(now:)
  %{public}s: cannot notify of throttle expiry in %s: %@
  %{public}s: cannot rearm throttling scheduler %s: %@
SELECT 1
  FROM 
   AND domain_wide_error = 
   AND next_retry_date <= 
next_retry_date <= 
SELECT MIN(next_retry_date)
  FROM 
      VALUES (
corrupted table 
1 ORDER BY item_id, kind, job_type
AND domain_wide_error = 
SELECT priority
  FROM 
   AND item_id = 
   AND job_type = 
   AND state = 
 AND next_retry_date = 
 name 
 isIgnored 
 from to 
 item newName version 
rules
activeRules
blockedJobsRules
aggregators
fetchEventStream
recursivelyDeleting(
rules blockedBy 
libfssync/JobRegistry.swift
job unexpectedly changed side
Unexpected waiting condition on job 
 inParent 
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/fssync/libfssync/interfaces/persistence/JobRegistry.swift
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/fssync/libfssync/interfaces/file-tree/item/FileItemID.swift
_TtC9libfssync17SQLBackupManifest
SQL_BACKUP_MANIFEST_SCHEMA_VERSION
resourceValuesToFetch
SELECT new_doc_id
FROM 
WHERE doc_id = 
SELECT new_file_id
FROM 
WHERE file_id = 
SELECT new_file_id, new_gen_count
FROM 
Failed to create file_id_gen_count_index: %@
Failed to create doc_id_index: %@
CREATE INDEX IF NOT EXISTS doc_id_index ON 
CREATE INDEX IF NOT EXISTS file_id_gen_count_index ON 
(file_id, gen_count)
Failed to open database %s: %@
Failed to close database %s: %@
Failed to set up pragmas %s: %@
Failed to create table %s: %@
  relative_path blob not null,
  file_id integer,
  doc_id integer,
  gen_count integer,
  is_directory integer,
  new_file_id integer,
  new_doc_id integer,
  new_gen_count integer
Populating new columns with base path: %s
WHERE new_file_id IS NULL
Failed to populate new columns for %s: %@
Failed to populate new columns. fileReadNoSuchFile %s does not exist.
Failed to populate new columns. fileNoSuchFile %s does not exist.
Failed to populate new columns. ENOENT %s does not exist.
Failed to get the gen count for %s
Updating %ld %u %u into database for %s
Failed to open %s: %@
SET new_file_id = 
    new_doc_id = 
    new_gen_count = 
WHERE relative_path = 
Can't close database %s: %@
Could not create a unique index %s: %@
CREATE UNIQUE INDEX IF NOT EXISTS relative_path_index ON 
 (relative_path)
Can't insert into the database %s: %@
Failed to insert into %s: %@
  relative_path,
  file_id,
  doc_id,
  gen_count,
  is_directory,
  new_file_id,
  new_doc_id,
  new_gen_count
VALUES (
        NULL,
        NULL,
        NULL
side
schedulingColumns
throttle
deleteFinishedJobs
__scheduling_state__scheduling_state_conditions__pending_scheduling_timestamp
          ON 
(scheduling_state, scheduling_state_conditions, pending_scheduling_timestamp)
__scheduling_state__pending_scheduling_timestamp
          ON 
(scheduling_state, pending_scheduling_timestamp)
__scheduling_state__pending_reason ON 
(scheduling_state, pending_reason)
_state_type__scheduling_ordering
    ON 
(scheduling_state, type, scheduling_priority DESC, scheduling_timestamp)
_state__scheduling_ordering
    ON 
(scheduling_state, scheduling_priority DESC, scheduling_timestamp)
_has_pending ON 
(pending_reason IS NOT NULL)
__type__state ON 
(type, scheduling_state)
(scheduling_state)
  id INTEGER PRIMARY KEY,
  item_id 
 NOT NULL,
  type TINYINT NOT NULL,
  scheduling_priority UNSIGNED INTEGER NOT NULL,
  scheduling_timestamp INTEGER NOT NULL,
  scheduling_state TINYINT NOT NULL,
  scheduling_state_conditions SMALLINT NOT NULL,
  scheduling_state_continuation BLOB NULL,
  reason INT NOT NULL,
  pending_scheduling_priority UNSIGNED INTEGER NOT NULL DEFAULT 0,
  pending_scheduling_timestamp INTEGER NOT NULL DEFAULT 
  pending_reason INT NOT NULL DEFAULT 0
WHERE item_id = 
the query should have prevented this
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/fssync/libfssync/implementations/file-system/persistence/SQLItemJobRegistry.swift
AND scheduling_state = 
-- Don't include the conditions in the index lookup
AND +scheduling_state_conditions & 
-- Don't include the conditions in the index lookup
AND +scheduling_state = 
AND +scheduling_state_conditions & 
   SET scheduling_state = 
 WHERE scheduling_state = 
recovering running job %s
scheduling_state = 
libfssync/SQLItemJobRegistry.swift
1 ORDER BY scheduling_priority DESC, scheduling_timestamp
 WHERE item_id = 
   AND +scheduling_state IN 
SELECT rowID
  FROM 
 WHERE scheduling_state IN 
       AND type = 
  scheduling_state != 
  OR (scheduling_state_conditions & 
SELECT id
  FROM 
 WHERE (scheduling_state IN 
    OR pending_scheduling_timestamp != 
scheduling_state_conditions IN (0, 
unexpected retained job 
AND scheduling_state_conditions = 
-- Looks for schedule fetch-children-metadata on those directories
SELECT jobs.item_id
  FROM 
 AS jobs
 WHERE jobs.type = 
   AND jobs.scheduling_state IN (
                                 
   AND jobs.scheduling_timestamp <= 
SELECT jobs.item_id
  FROM 
 AS jobs
  LEFT JOIN 
_snapshot AS snap ON (snap.id = jobs.item_id)
 WHERE jobs.type = 
   AND snap.id IS NULL
 LIMIT 
SELECT item_id
  FROM fs_item_jobs
 WHERE type = 
   AND scheduling_state = 
   AND scheduling_state_conditions & 
unexpected category
AND rowID NOT IN 
ORDER BY scheduling_priority DESC, scheduling_timestamp
LIMIT 
   AND (scheduling_state IN 
        OR pending_scheduling_timestamp != 
   AND ((scheduling_state IN 
          AND (reason & 
) != 0)
        OR (pending_reason & 
AND scheduling_state IN 
SQLDB: Fetch Jobs
SELECT id, scheduling_priority, scheduling_timestamp, pending_reason,
       pending_scheduling_timestamp, pending_scheduling_priority, item_id, type,
       reason, 
       scheduling_timestamp = 
      WHERE item_id = 
        AND type = 
UPDATE reconciliation_table
   SET last_change = PROPAGATION_DATE_CHANGED(0, fs_id)
 WHERE 
      WHERE id = 
       reason = pending_reason,
       scheduling_timestamp = pending_scheduling_timestamp,
       scheduling_priority = pending_scheduling_priority,
       pending_reason = 0,
       pending_scheduling_timestamp = 
       pending_scheduling_priority = 0
 WHERE id = 
SELECT id, pending_reason, pending_scheduling_timestamp, pending_scheduling_priority
  FROM 
   SET reason = reason | 
       scheduling_priority = MAX(scheduling_priority, 
       scheduling_timestamp = MIN(scheduling_timestamp, 
       reason = 
       scheduling_priority = 
   SET pending_reason = pending_reason | 
       pending_scheduling_priority = MAX(pending_scheduling_priority, 
       pending_scheduling_timestamp = MIN(pending_scheduling_timestamp, 
 (item_id, type, 
, reason,
                           scheduling_timestamp, scheduling_priority)
     VALUES (
SELECT id, scheduling_state, scheduling_state_continuation
  FROM 
_TtC9libfssyncP33_7F4FBB69DAA1D0B2DA22684CBB0F5CB316ProxyCancellable
cancellable
_TtC9libfssyncP33_7F4FBB69DAA1D0B2DA22684CBB0F5CB320ProxyOperationClient
client
idMap
_TtC9libfssync20FPFSServicerExtender
request
_TtC9libfssync21FPFSOperationServicer
@32@0:8@16@?24
backend
extender
Request to delete items: %s
Succeeded deleting items: %s
Failed to delete items %s with error %@
Request to delete item with ID: %@; recursively %{bool}d
com.apple.FileProvider/%@
Item %@ does not exist, deleting item with searchableID %s from index %@
Succeeded deleting %@ from spotlight index.
Could not delete %@ from spotlight index: %@
Succeeded deleting item with itemID %@, not wating on ingestion
Failed to delete item %@ with error %@
Succeeded ingesting deletion for item with itemID %@
Failed to force ingestion of item %@ with error %@
v16@?0@"NSArray"8
v24@?0@"NSArray"8@"NSError"16
fetch id for %@
<nil>
result of fetch id for %@: %s, %@
updateIgnoreStateOfItem(_:ignoreState:fpfs:completionHandler:)
fetchHierarchy(for:recursively:reply:)
fetching hierarchy from provider: %s (recursive: %{bool}d)
fetching hierarchy from cache: %s (recursive: %{bool}d)
BACKGROUND_GOOD_CONDITIONS
v24@?0@"NSDictionary"8@"NSDictionary"16
FPFS servicer for 
libfssync.FPFSServicerExtender
libfssync.ProxyOperationClient
libfssync.ProxyCancellable
FPCancellable
FPOperationClient
v24@0:8@"<FPCancellable>"16
v40@0:8@"NSDictionary"16@"NSError"24@?<v@?>32
d16@0:8
v24@0:8Q16
_TtC9libfssync16VFSStagedContext
handle
isDir
extent
_TtC9libfssyncP33_4832980660C328E96B083C662469F36526FPFileTreeLifetimeExtender
requestor
timeout
Td,N,R,Vtimeout
TQ,N,VtimeoutState
requestEffectivePID
Ti,N,R
prettyDescription
_TtC9libfssync28FPXPCNonSanitizingErrorProxy
@60@0:8@16@24@32@40i48@?52
@68@0:8@16@24@32@40i48@?52@?60
@52@0:8@16@24@32@40i48
_TtC9libfssync10FPFileTree
tracker
fetchProgressByItemID
uploadProgressByItemID
schedulingState
pauseAffordanceTimerSource
pauseHardTermination
lastReceivedUpdate
forceFlattenedPackages
$__lazy_storage_$__cachedRTCReporter
previousSequenceNumber
workingSetSyncAnchor
_TtC9libfssync23DummyEnumeratorObserver
fpfiletree
  provider supports a %{public}s pipeline of %ld, setting limits to %ld
com.apple.fssync.fpfiletree
interrupting %{public}ld uploads
 didn't complete in time
all the uploads completed in time
libfssync/FPFileTree.swift
v24@?0@"<FPXEnumerator>"8@"NSError"16
com.apple.fileproviderd
enable-extension-upcall-timeout
disabled-domain-fpx-vendor
disabled-domain-fpx-enumerator
v52@?0@"NSArray"8@"NSArray"16B24@"NSData"28@"FPExtensionResponse"36@"NSError"44
v48@?0@"NSArray"8@"NSData"16@"NSData"24@"FPExtensionResponse"32@"NSError"40
v24@?0@"NSData"8@"NSError"16
fetchEventStream(domainVersion:completion:)
eventBarrier(_:)
cannot decode sync anchor
could not decode the previous sync anchor, starting working set enumerator from scratch: %@
v24@?0@"FPExtensionResponse"8@"NSError"16
delete(_:recursively:baseVersion:domainVersion:completion:)
v32@?0@"NSURL"8@"NSString"16@"NSError"24
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/fssync/libfssync/utilities/Utilities.swift
v44@?0@"FPItem"8Q16B24@"FPExtensionResponse"28@"NSError"36
create(_:with:from:reviving:domainVersion:options:completion:)
update(_:to:given:with:baseVersion:domainVersion:options:completion:)
v40@?0@"FPSandboxingURLWrapper"8@"FPItem"16@"FPExtensionResponse"24@"NSError"32
provideFile(for:expectedFileSize:updating:domainVersion:requestor:options:completion:)
i16@?0^{fpfs_item_handle=QQII*Q}8
v48@?0@"FPSandboxingURLWrapper"8@"FPItem"16@"FPExtensionResponse"24@"NSValue"32@"NSError"40
provideFile(for:expectedFileSize:lastKnownVersion:domainVersion:requestor:options:completion:)
inconsistent continuation type
v32@?0@"FPItem"8@"FPExtensionResponse"16@"NSError"24
lookupItem(by:lastKnownVersion:domainVersion:options:completion:)
  Fetching version %s...
  Staging version %s...
  Fetching URL in the wharf for version %s...
sequence number received out of order: %ld <= %ld
    %ld: %{public}s
    %ld: %{public}s
Error setting new domainUserInfo, provider was nil
found new domain version, setting new domainUserInfo
Error signaling change after setting new domainUserInfo, server was nil
Error setting domain user info: %@
libfssync.FPXPCNonSanitizingErrorProxy
init(connection:protocol:orError:name:requestPid:)
init(connection:protocol:orError:name:requestPid:requestWillBegin:requestDidBegin:)
init(connection:protocol:orError:name:requestPid:requestWillBegin:)
FPFS enumeration of 
libfssync.FPFileTreeLifetimeExtender
FPDLifetimeExtender
Td,N,R
FPXEnumeratorObserver
v24@0:8@"FPItem"16
v40@0:8@16q24@?32
v36@0:8B16@20@?28
v24@0:8@?<v@?@"NSData"@"NSError">16
v40@0:8@"NSData"16q24@?<v@?@"NSArray"@"NSData"@"NSData"@"FPExtensionResponse"@"NSError">32
v40@0:8@"NSData"16q24@?<v@?@"NSArray"@"NSArray"B@"NSData"@"FPExtensionResponse"@"NSError">32
v24@0:8@?<v@?>16
v36@0:8B16@"NSNumber"20@?<v@?@"NSError">28
NSXPCProxyCreating
@24@0:8@?16
@24@0:8@?<v@?@"NSError">16
FPXVendor
v64@0:8@16@24@32@40@48@?56
v36@0:8@16B24@?28
v40@0:8@16B24B28@?32
@68@0:8@16@24@32@40Q48B56@?60
@64@0:8@16@24@32@40@48@?56
@72@0:8@16@24Q32@40Q48@56@?64
@68@0:8@16Q24@32Q40@48B56@?60
@56@0:8@16@24Q32@40@?48
v64@0:8@"NSFileProviderDomain"16@"NSDictionary"24@"<FPDDomainServicing>"32@"FPProviderDomain"40@"NSFileProviderDomainVersion"48@?<v@?@"NSError">56
v32@0:8@"NSURL"16@?<v@?@"NSURL"@"NSError">24
v32@0:8@"NSURL"16@?<v@?@"FPItemID"@"NSError">24
v32@0:8@"NSURL"16@?<v@?@"NSError">24
v40@0:8@"FPItemID"16@"NSFileProviderRequest"24@?<v@?@"FPItem"@"FPExtensionResponse"@"NSError">32
v32@0:8@"NSURL"16@?<v@?@"FPItem"@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSError">24
v36@0:8@"FPItemID"16B24@?<v@?@"NSXPCListenerEndpoint"@"NSArray"@"NSError">28
v24@0:8@?<v@?@"NSXPCListenerEndpoint"@"NSError">16
v40@0:8@"NSArray"16@"FPItemID"24@?<v@?@"NSDictionary"@"NSError">32
v32@0:8@"FPItemID"16@?<v@?@"NSError">24
v40@0:8@"FPItemID"16B24B28@?<v@?@"FPSandboxingURLWrapper"@"FPSandboxingURLWrapper"@"NSError">32
v40@0:8@"FPSandboxingURLWrapper"16@"FPItemID"24@?<v@?@"NSError">32
v40@0:8@"NSArray"16@"NSString"24@?<v@?@"NSError">32
v40@0:8@"NSDate"16@"NSString"24@?<v@?@"NSError">32
v40@0:8@"FPCTLTermDumper"16@"NSString"24@?<v@?@"NSError">32
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSError">24
v40@0:8@"NSString"16@"NSFileHandle"24@?<v@?@"NSError">32
@"NSProgress"68@0:8@"FPItemID"16@"NSFileProviderItemVersion"24@"NSFileProviderRequest"32@"NSValue"40Q48B56@?<v@?@"FPSandboxingURLWrapper"@"FPItem"@"FPExtensionResponse"@"NSValue"@"NSError">60
@"NSProgress"64@0:8@"FPItemID"16@"NSFileProviderItemVersion"24@"FPSandboxingURLWrapper"32@"NSFileProviderItemVersion"40@"NSFileProviderRequest"48@?<v@?@"FPSandboxingURLWrapper"@"FPItem"@"FPExtensionResponse"@"NSError">56
@"NSProgress"72@0:8@"FPItem"16@"NSFileProviderItemVersion"24Q32@"FPSandboxingURLWrapper"40Q48@"NSFileProviderRequest"56@?<v@?@"FPItem"QB@"FPExtensionResponse"@"NSError">64
@"NSProgress"68@0:8@"FPItem"16Q24@"FPSandboxingURLWrapper"32Q40@"NSFileProviderRequest"48B56@?<v@?@"FPItem"QB@"FPExtensionResponse"@"NSError">60
@"NSProgress"56@0:8@"FPItemID"16@"NSFileProviderItemVersion"24Q32@"NSFileProviderRequest"40@?<v@?@"FPExtensionResponse"@"NSError">48
FPXOperationService
v56@0:8@16@24{CGSize=dd}32@?48
v48@0:8@16@24Q32@?40
v44@0:8@16Q24B32@?36
@40@0:8@16Q24@?32
@48@0:8@16@24@32@?40
v72@0:8@16@24@32@40@48@56@?64
v56@0:8@"<FPOperationClient>"16@"NSArray"24{CGSize=dd}32@?<v@?@"NSError">48
v40@0:8@"NSArray"16@"FPItemID"24@?<v@?@"NSArray">32
v48@0:8@"NSArray"16@"NSArray"24Q32@?<v@?@"NSError">40
v44@0:8@"FPItem"16Q24B32@?<v@?@"FPItem"@"NSError">36
v40@0:8@"NSArray"16Q24@?<v@?@"NSDictionary"@"NSDictionary"@"NSError">32
v36@0:8@"FPItemID"16B24@?<v@?@"NSArray"@"NSError">28
v48@0:8@"NSString"16@"NSString"24@"NSString"32@?<v@?@"FPItem"@"NSError">40
v32@0:8@"FPItemID"16@?<v@?@"FPItem"@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSArray">24
@"NSProgress"32@0:8@"FPItemID"16@?<v@?@"NSURL"@"NSError">24
@"NSProgress"40@0:8@"NSString"16Q24@?<v@?@"NSError">32
@"NSProgress"48@0:8@"NSString"16@"NSArray"24@"NSString"32@?<v@?@"NSError">40
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError">32
v72@0:8@"NSString"16@"NSArray"24@"FPItem"32@"NSString"40@"NSSet"48@"NSSet"56@?<v@?@"NSArray">64
v36@0:8@"NSArray"16B24@?<v@?@"NSDictionary"@"NSDictionary"@"NSError">28
FPXVendorObservation
v48@0:8@"FPExtensionEnumerationSettings"16@"<FPXEnumeratorObserver>"24@"NSFileProviderRequest"32@?<v@?@"<FPXEnumerator>"@"NSError">40
_TtC9libfssyncP33_48B452DE321F44F46865C1107F5BBC8315DownloadContext
progress
subscriber
progressReportingCancellable
progressCalculatingCancellable
noProgressSoftDelay
noProgressHardDelay
expirationDate
expirationPolicy
_TtC9libfssync37DownloadProgressNotificationPresenter
_TtC9libfssync23DownloadProgressMonitor
progressPerURL
cancelledRequests
cancelledBinaries
lastChangeDate
notificationPresenter
rtcReporter
download-heartbeat-delay
present-download-cancellation
operationDuration
  cancelling download for %s by user policy
  cancelling download for %s because it is stuck at %f for %f (allowed: %f)
user-download-warning-delay
  did not have context for url %s
dont-warn-user-of-slow-downloads
user-download-warning-stickiness-delay
@?<v@?>16@?0@"NSProgress"8
  monitoring progress from %s: %s
  application at %s is not allowed to download %s: user cancelled a similar request at %s
  ignoring progress with wrong kind: %@
  ignoring progress on the wrong URL %s != %s: %@
  subscribed to progress %@ for URL %s
background-download-heartbeat-delay
progress-monitor
download made no progress since 
POSIX syscall reached expiration date 
application is unresponsive
_TtC9libfssync8FSRepair
Repairing %{public}s on %s is not supported
Repairing %{public}s on %s (set bundle bit)
Repairing %{public}s on %s (remove demoted flag)
Repairing %{public}s on %s (force re-ingestion)
Repairing %{public}s on %s (drop purgeability)
Failed to drop purgeability on item at %s: %@
Failed to issue FSEvent on item at %s: %@
Failed to drop Demoted from sync root: %@
Failed to set bundle bit: %@
libfssync/VFSItem.swift
should not be called
Unable to create extent map for %s : %@
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/fssync/libfssync/implementations/file-system/tree/VFSItem.swift
nonSyncableAttributes
.Trash-from-provider
.Trash-not-a-dir-in-fs
docID not set for new item with id %s
  ignoring decreasing domain version %@ -> %@
  ignoring disappearing domain version %@ -> nil
preserveDirtyUserData
preserveUserData
: domain-fpfsbackend
: working-set-changed
: pending-set-watching
: errorGenerationPropertyQueue
updateRootAfterDomainChange()
libfssync.FPDDomainFPFSBackend
  invalidating fpfs for %s
preserving dirty user data
preserving user data
support files could not be removed: %@
%@ removing FPFS domain data with mode %{public}s
dumpState(to:limitNumberOfItems:)
v24@?0@"FPItem"8@"NSError"16
Materialization
v8@?0
FPFS backend - enumerate pending %s, %ld
didChange(_:)
nonEvictableSpace()
telemetryReport()
unpinItem(with:request:completionHandler:)
Request to modify fields %s for %ld items
_TtC9libfssync20FPDDomainFPFSBackend
@24@0:8@16
B24@0:8^@16
providerDomainID
pathsManager
__cachedURL
__fpfs
backingStoreIdentity
startupQueue
itemChangedQueue
workingSetChangedQueue
pendingSetWatchingQueue
startStatus
itemsChangedSource
enumerationAnchorChangedSource
runningEnumerator
pendingSetSource
initializationGroup
started
progressMonitor
periodicFPCKRunner
pendingSetState
onActivatePendingSetNotification
pendingSetStateURL
errorGenerationRecord
_signaledErrorGenerationDebouncer
T@"NSData",N,C
rootURLs
domainVersion
T@"NSFileProviderDomainVersion",N,R
errorGenerationCount
uploadsArePaused
@32@0:8@16^@24
@32@0:8Q16^@24
v56@0:8@16{_NSRange=QQ}24@40@?48
v52@0:8@16B24B28B32@36@?44
v44@0:8@16B24@28@?36
@36@0:8@16B24^@28
v68@0:8@16Q24@32Q40B48@52@?60
v48@0:8@16Q24@32@?40
Fatal error
FPProgressProtocol
.materializedSetChanged
sent notification %s.materializedSetChanged.fp_libnotifyPerUserNotificationName())
starting FPFS for domain %s
failed to start FPFS for domain %s after several attempts
should reattempt starting FPFS for domain %s
failed to start FPFS for domain %s
cannot init wharf: %@
wharf initiatlization failed: %@
fpfs doesn't have a domain?
cannot open database at %s: %@
non-empty-pending-set
Unable to activate sync engine: %@
garbageCollectDeletedItems(deleteBusyFiles:)
loadSyncEngine()
Pending set was empty before stop
Pending set was not empty before stop
read sync anchor
activated sync engine with %{public}s
Materialization_startProvidingItem
sendPendingSetNotification(newState:)
Pending set notification on start
.pendingSetChanged
sending notification %s
Notifications from the pending set got ignored, stopping it, last enumeration: %s, refresh date: %s (previous: %s
Persisted pending set status %{bool}d to %s
@"NSString"16@?0@"PQLQueryBuilder"8
Fetching pending set status from %s
Next pending set checking arrives too soon (%f) - likely under load
checkForPendingSetChanges(completionHandler:)
Will force a second notify due to domain version change
Pending set updates found, notifying
Going full rescan for pending items after %f
cannot initialize database error for domain %s, disabling the domain: %@
handleDatabaseError(db:error:)
  handling database error for domain %s, restarting with a fresh database.  Error domain: %{public}s. Error code: %{public}ld.  Error description: %@
  cannot initialize the database for domain %s, restarting with a fresh database.  Error domain: %{public}s. Error code: %{public}ld.  Error description: %@
  the database is still locked, retrying
disk is full, restarting: %@
database removal failed %@
  Delete the FPFS Wharf %s
  Delete the FPFS DB %s
Can't unlink %s: %@
reimportWithReason
  Move the FPFS Wharf away %s
  Move the FPFS DB away %s
withFPItemIdentifier(for:cb:)
FPFSID<VFSItemID, NSFileProviderItemIdentifier>
attachInheritedUserInfo(_:completionHandler:)
decorate(_:options:completionHandler:)
hasNonUploadedFiles(completionHandler:)
fsSnapshotCounters
fpSnapshotCounters
subscribeToDownloadProgressUpdates(_:completionHandler:)
subscribeToUploadProgressUpdates(_:completionHandler:)
waitForStabilization(request:_:)
  waiting for stabilization of FS and FP trees for %s
  waiting for db stabilization for %s
  processing pending ingestions for %s
  waiting for engine stabilization
  engine is stable
  scheduler not stable: jobs are running
  scheduler not stable: some reconciliations are pending scheduling
  scheduler not stable: some jobs are still pending execution
  scheduler not stable: some throttles are still active
  FSTree stable for %s
testingOperations(request:completionHandler:)
runTestingOperations(_:request:completionHandler:)
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/fssync/libfssync/interfaces/job/TestingOperation.swift
cannot convert incomplete operation 
signalErrorResolved(_:completionHandler:)
  resolved %s error signaled, clearing this error's throttles
cannotSynchronize
serverUnreachable
delayedContinuation
v24@?0@"NSXPCListenerEndpoint"8@"NSError"16
resolveProviderItemID(_:completionHandler:)
v32@?0@"NSXPCListenerEndpoint"8@"NSArray"16@"NSError"24
resolveConflict(at:completionHandler:)
  Scheduling conflict resolution for item %s..
libfssync/FPDDomainFPFSBackend.swift
item received from FPFS unexpectedly didn't have a fileURL
Finished bulkItemChanges of %ld items
Request to modify fields %s for item with ID %@: %s
Error creating item %@ on disk; error %@
com.apple.fileprovider.trash-put-back#PN
call to block failed with 
 but errno is not set
Request to materialize content of itemID %s reason %s
create fault completed with result %s request %s
requestMaterialization completed for vfsItemID %s
requestMaterialization(%s) failed for vfsItemID: %@
requestMaterialization(%s) post-materialization lookup succeeded
propagateToFP(itemID:request:completion:)
requestMaterialization(%s) post-materialization lookup returned a dataless item - force ingestion
requestMaterialization(%s) post-materialization lookup returned no item
requestMaterialization(%s) post-materialization lookup returned an error %@
requestMaterialization(%s) post-materialization retry failed
Error retrieving item state item %@; error %@
singleItemChange(_:changedFields:bounce:coordinate:request:completionHandler:)
Error updating item %@ error <nil>
Error updating item %@ error %@
Finished updating %s for item %@; d: %s
ingestFromCacheItem(with:requestedFields:request:completionHandler:)
updatePinning(of:to:request:completionHandler:)
can't force ingestion of item at %s
forceFSIngestion(for:completionHandler:)
Unable to force FS ingestion: %@
 Forcing ingestion for item with ID %@
 Failed force ingestion of item with ID %@ with error: %@
propagateToFS(itemID:request:completion:)
 Finished force ingestion of item with ID %@
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/fssync/fpfs/FPDDomainFPFSBackend.swift
  Going to create an item with template %@ bounceOnCollision %{bool}d
 Can't make directory at URL %s, error: %@
 Can't make directory, item already exist at URL %s
 Bouncing item %s
createItemBased(onTemplate:fields:urlWrapper:options:bounceOnCollision:request:completionHandler:)
 Making directory for itemID %s at url %s
 Forcing ingestion for existing item at %s
Creation of item that is not a folder/directory not supported
isItemDataless(for:completion:)
materializedURL(for:completion:)
materializedURL vfsItem with ID %s is dataless
listConflicts(for:completionHandler:)
reimportItems(below:removeCachedItems:markItemDataless:completionHandler:)
  reimporting below %s (%s disk content)
can't mark the root dataless: %@
v24@?0@"FPDDomain"8@"NSError"16
item is not in our database
  reimporting the root item, dropping the database
Unable to compute on disk objects summary: %@
materialized_reg
materialized_pkg
materialized_dir
materialized_als
materialized_sym
reimport_running_time_sec
SQLDB: building telemetry report
Ignoring invalid object type : %ld
SELECT metadata_kind,
       metadata_is_package,
       metadata_is_dataless,
       COUNT(*),
       SUM(metadata_physical_size)
 FROM 
GROUP BY metadata_kind, metadata_is_package, metadata_is_dataless
Unable to compute out-of-sync / pinned volume: %@
fetchFSItems(forItemIdentifiers:materializingIfNeeded:request:completionHandler:)
Request to enumerate with settings %s
checkIsInIgnoredHierarchy(_:request:completion:)
Found item %s for request %s
  new enumerator %@
Item is in ignored for request %s
enumerate(with:lifetimeExtender:observer:completionHandler:)
  item %@ changed
state(completionHandler:)
state - fpfs.db.asyncRead error: %@.
state - asyncWithSyncEngine error: %@.
currentPendingSetSyncAnchor(completionHandler:)
enumeratePendingSet(fromSyncAnchor:suggestedBatchSize:completionHandler:)
received a non-empty sync anchor when pending set is not being computed anymore
cannot decode anchor for pending set
received a pending set anchor for an outdated UUID
received a change gathering for an outdated timestamp
currentMaterializedSetSyncAnchor(completionHandler:)
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/fssync/libfssync/implementations/file-system/persistence/SQLReconciliationTable.swift
SELECT anchor FROM enumeration_view
enumerateMaterializedSet(fromSyncAnchor:suggestedBatchSize:completionHandler:)
reply to %s: failure %@
reply to %s: %s success
materializeItem(with:requestedRange:request:completionHandler:)
newSyncRoot: %llu
oldSyncRoot: %llu
request for file %s doesn't allow resurrection
registerMoveOutPreprocessing(below:)
forcing recursive materialize of demoted package
item(for:request:completionHandler:)
Going through fast-path for the rootItem at startup
no vfs item for %s
fetch id for %@ remapped to FS root
waitForChanges(below:request:completionHandler:)
  item is not a live directory
  processing barrier request %s
  FS barrier observed for %s
creation of descendents
  waiting for %{public}s prior to %s for %s: %s
domain_wide_error != 
  finished %{public}s for %s
waitForPropagation(for:request:barrierTimestamp:jobs:completionHandler:)
  %{public}s of %s failed for %s: %@
move-out of descendents
  + active enumerators:
sync engine state:
v16@?0@"NSURL"8
cannot get coordination to %{public}s %s: %@
  %{public}s all files for %s
%{public}s of %s failed: %@
%{public}s path %s
com.apple.file-provider-domain-id
com.apple.file-provider-domain-id#PN
preserve Domain Folder directory %s, reached max bounce number
removal of %s failed: %@
removing support path %s
deleting files for non-invalided domain
com.apple.FileProvider.maintenance.fpck-repair
creating wharf/delete directory at %s
creating wharf directory at %s
error while computing root directory URL: %@
must generate path for root directory
must create root directory at %s
root directory already exists at %s
registering xpc activities
copyDatabase(to:completionHandler:)
Failed to provide temporaryDirectoryURL because domain is invalidated
initializeErrorGeneration()
  fsSnapshotCounters: 
  fpSnapshotCounters: 
FPXEnumerator
FPDDomainBackend
@24@0:8@"FPDDomain"16
@"NSFileProviderDomainVersion"16@0:8
B24@0:8@"NSURL"16
@"NSURL"32@0:8@"NSURL"16^@24
v40@0:8@"FPItemID"16@"FPDRequest"24@?<v@?@"FPItem"@"NSError">32
v40@0:8@"NSURL"16@"FPDRequest"24@?<v@?@"FPItem"@"NSError">32
v40@0:8@"NSURL"16@"FPDRequest"24@?<v@?@"FPItemID"@"NSError">32
v44@0:8@"NSArray"16B24@"FPDRequest"28@?<v@?@"NSDictionary"@"NSError">36
@"NSProgress"56@0:8@"NSURL"16@24Q32@"FPDRequest"40@?<v@?@"NSError">48
@"NSProgress"40@0:8@"NSURL"16@"FPDRequest"24@?<v@?@"FPItemID"@"NSError">32
v40@0:8@"FPItemID"16@"FPDRequest"24@?<v@?@"NSError">32
v56@0:8@"FPItemID"16{_NSRange=QQ}24@"FPDRequest"40@?<v@?@"NSError">48
v68@0:8@"FPItem"16Q24@"FPSandboxingURLWrapper"32Q40B48@"FPDRequest"52@?<v@?@"FPItem"@"NSError">60
v32@0:8@"NSURL"16@"FPDRequest"24
v52@0:8@"FPItemID"16B24B28B32@"FPDRequest"36@?<v@?@"NSError"@"FPSandboxingURLWrapper"@"FPSandboxingURLWrapper">44
v28@0:8@"FPCTLTermDumper"16B24
v32@0:8@"FPDRequest"16@?<v@?@"NSError">24
v48@0:8@"FPExtensionEnumerationSettings"16@"<FPDLifetimeExtender>"24@"<FPXEnumeratorObserver>"32@?<v@?@"<FPXEnumerator>"@"NSError">40
v48@0:8@"NSArray"16@"NSURL"24@"FPDRequest"32@?<v@?@"NSDictionary"@"NSError">40
v40@0:8@"FPItemID"16B24B28@?<v@?@"NSError">32
@"FPDDomainIndexer"36@0:8@"FPDExtension"16B24^@28
v32@0:8@"FPDRequest"16@?<v@?@"<FPXOperationService>"@"NSXPCListenerEndpoint"@"NSError">24
v44@0:8@"FPItemID"16B24@"FPDRequest"28@?<v@?@"NSXPCListenerEndpoint"@"NSArray"@"NSError">36
v32@0:8@"FPDRequest"16@?<v@?@"NSXPCListenerEndpoint"@"NSError">24
v48@0:8@"NSArray"16Q24@"FPDRequest"32@?<v@?@"NSDictionary"@"NSDictionary">40
v40@0:8@"NSURL"16@"FPDRequest"24@?<v@?@"NSURL"@"NSError">32
v40@0:8@"NSURL"16@"NSURL"24@?<v@?B>32
v24@0:8@?<v@?Q@"NSError">16
v24@0:8@?<v@?@"NSURL"@"NSError">16
@"FPDDomainCleanupResult"32@0:8Q16^@24
v24@0:8@"NSURL"16
@"NSURL"24@0:8@"FPItemID"16
v48@0:8@"FPItemID"16@"FPDRequest"24@"NSProgress"32@?<v@?@"NSURL"@"NSError">40
v24@0:8@"FPItemID"16
v48@0:8@"FPItemID"16Q24@"FPDRequest"32@?<v@?@"NSError">40
v40@0:8@"NSString"16@"FPDRequest"24@?<v@?@"NSError">32
v64@0:8@"NSError"16@"NSArray"24@"NSArray"32@"NSData"40@"NSFileProviderDomainVersion"48@?<v@?@"NSError">56
v32@0:8@"NSError"16@?<v@?@"NSError">24
v32@0:8@"FPDRequest"16@?<v@?@"NSArray"@"NSError">24
v40@0:8@"NSArray"16@"FPDRequest"24@?<v@?@"NSDictionary"@"NSError">32
v32@0:8@"<FPProgressProtocol>"16@?<v@?@"NSError">24
v24@0:8@?<v@?B@"NSError">16
v48@0:8q16q24q32q40
@32@0:8:16@24
_TtC9libfssync19PersistenceCounters
jobsWaitingForPersistence
jobsNeedingFlushRunning
fsJobsNeedingFlushWaitingForFlush
fpJobsNeedingFlushWaitingForFlush
isStarving
reconciliationTable
jobRegistry
snapshotA
snapshotB
syncState
from to  reason 
 recursively reason 
 isRecursive reason 
libfssync/Database.swift
 wait-for-continue:
 --> shoudFlush:
expected received 
filename below 
item type mismatch
unsupported error type
structuralVersion
requestedContentVersion
availableContentVersion
requestedStructuralVersion
availableStructuralVersion
expectedContentVersion
currentContentVersion
expectedStructuralVersion
currentStructuralVersion
receivedContentVersion
_TtC9libfssync11TaskTracker
_TtC9libfssync23MaintenanceContinuation
rowID
rescan-parent-deleted-children
resolve-item-evictability
scheduler is not running
nothing to unpause
unpause-reconciliations
mark-locked-directories
feature flag is disabled
mark-packages-syncroot
mark-packages-evictable
Running UpdateClosestSyncRoot on non-VFS item ID, not valid
Couldn't find item, bailing on job
Item is a sync root again, job is not valid anymore
Running UpdateClosestSyncRoot on non-directory, not valid
update-closest-sync-root
retrigger-resolved-vendor-exclusion
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/fssync/libfssync/sync-logic/Maintenance.swift
sync root cannot be set
unblock-ignore-folder
evictability cannot be set
unblock-evictability
unsupported type
should not try to encode those types
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/fssync/libfssync/sync-logic/Reconciliation.swift
deleted not reconciled
deleted on both sides
trying to delete a non existing reconciliation: 
FPShouldRetryExclusion
libfssync/Reconciliation.swift
Expecting an item for reconciliation: 
 forcing bounce of colliding item %s to break replace cycle with %s
 forcing bounce of colliding item %s to break move cycle with %s
 forcing bounce of colliding item %s to break reparent cycle with %s
Collision with the trash item is not allowed
Collision with the root item is not allowed
Can't get a collision in a delete
  back-propagating 
: item contains unexpected diffs 
: item contains diffs for still pending fields
item has been evicted
  back-propagating content: item contains an unexpected content change
  back-propagating content: requested by file tree
 to prevent sync-loop
item will be revived
recursive deletion
B16@?0^{fpfs_tag=*i}8
_TtC9libfssync22DiskImportContinuation
com.apple.fileproviderd.disk-import
skip item not importing from disk
skip item not watching content
skip item with pending children
%@ evaluating disk import status for %{public}s
  enumerating %s is throttled, unfaulting folder to allow user access
  import of %s within %s is throttled, unfaulting folder to allow user access
execute(on:continuation:result:completion:)
disk-import-finished
mark-disk-import-done
unfault-directory-and-children
selectNextDirectoryForDiskImport(db:result:)
continue-disk-import
reimportRemovingCachedItems
reimportDataless
databaseInitError(
structural_version
structural_filename
structural_parent_id
vfs_generationid
captured_content_
was_dataless_before_disk_import
disk_import_status
materialization_status
sourceItemID
sourceItemSnapshotVersion
otherVersion
requestedState
revivedIDAndVersion
diffs
isRecursive
libfssync/Propagation.swift
unexpected propagation job
  cannot propagate update for %{public}s: snapshot version not found for %{public}s
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/fssync/libfssync/sync-logic/Propagation.swift
  trying to propagate content from a dataless item %s
  cannot propagate creation for %{public}s: snapshot version not found for %{public}s
  cannot propagate creation for %{public}s: parent folder is not reconciled
file providers don't support setting the bit: 
no target itemID
no target version
no recursivity defined
no source version
update(itemID:stagedContext:requestedState:otherVersion:baseVersion:on:result:completion:)
stageUpdate(itemID:capturedContent:requestedState:otherVersion:baseVersion:on:result:completion:)
other version not defined
lookup(continuation:requestedState:otherVersion:on:result:completion:)
create(stagedContext:requestedState:otherVersion:on:result:completion:)
stageCreation(capturedContent:requestedState:otherVersion:on:result:completion:)
should not call itemIDForThrottling on propagation job
rootIsPinnedCache
  FPTree stable
 x-validated result for %s returned:%s
 x-validated query for %s ino:%llu expected:%s
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/fssync/libfssync/implementations/file-system/tree/VFSFileTree+Lookup.swift
 x-validation found %s while expecting %s: promoting item
 x-validation found %s while expecting %s: demoting item
(pkg item) expected %{public}s, but received %{public}s
can't resolve the trash folder after receiving an fsevent in the trash: %{public}@
libfssync/VFSFileTree+Lookup.swift
fileID of the trash changed
fileID of the root changed
Unexpected ItemID mismatch!
don't ignore the root of the domain
marking package %s as sync root
i16@?0^{dirent=QQSSC[1024c]}8
 Dropping busy date for remotely provided file %{public}@
 Significantly too slow SQL statement: %s
vm steps: %ld (max: %ld)
warning: %s%s%s
 temporary index
 non-indexed sort
 Possible slow statement on %s:
  binds:    %ld
  changes:  %ld
  vm steps: %ld (max: %ld)
  warning: %s%s%s
  %s
 Possible slow statement on %s:
  binds:    %ld
  columns:  %ld
  rows:     %ld
  vm steps: %ld (max: %ld)
  warning: %s%s%s
  %s
[can't get query plan]
explain query plan 
libfssync/FileTreeWriter.swift
content version 
fileTreeChangesHandler
newJobLockAggregator
itemLockingChangeHandler
canSetEvictabilityHandler
concurrentOperationLimit
concurrentContentUpdateLimit
concurrentProvideFileLimit
hasPlannedRescan
publishHandler
wharf
stream was signaled
forget change for 
itemID item fetchStrategy 
invalidate()
FPCK: all checks done.
libfssync.FPCK
init()
_TtC9libfssync4FPCK
B44@0:8@16B24@28^@36
v24@0:8q16
@16@0:8
v24@0:8@16
@40@0:8@16@24B32B36
B48@0:8@16Q24^@32@?40
numberOfFilesChecked
numberOfBrokenFilesInFSAndFSSnapshotCheck
numberOfBrokenFilesInFSSnapshotAndFPSnapshotCheck
accumulatedSuccesses
accumulatedErrors
accumulatedDomains
totalDatalessItems
totalMaterializedItems
accumulatedFileSizes
accumulatedSizeOfDisk
accumulatedDownloads
accumulatedUploads
multipleHardlinksExtensions
telemetryReport
fsSnapshotChecker
fpSnapshotChecker
openBackupDatabases
isCiconia
diskVsFSSnapshotIgnoredFilenames
launchOptions
shouldPause
discoveredDiskBrokenInvariantsCounters
repairedDiskBrokenInvariantsCounters
discoveredDiskVsFSSnapshotDiffCounters
repairedDiskVsFSSnapshotDiffCounters
discoveredFSSnapshotVsFPSnapshotDiffCounters
discoveredReconciliationTableBrokenInvariantsCounters
providerVersion
Tq,N,VnumberOfFilesChecked
Tq,N,VnumberOfBrokenFilesInFSAndFSSnapshotCheck
Tq,N,VnumberOfBrokenFilesInFSSnapshotAndFPSnapshotCheck
T@"NSDictionary",N,C
reconciled_entry_for_dir_with_fp_content_changes
reconciled_entry_for_dir_with_fs_content_changes
reconciled_entry_without_fp_version
reconciled_entry_without_fs_version
stable_entry_with_fp_captured_content
stable_entry_with_fs_captured_content
stable_entry_with_non_default_scheduling_priority
inconsistent_scheduling_states
content_status_fs_not_interested
disk_import_mismatch
different_collaboration_identifier
is_locked_in_FP_Snapshot_but_not_on_FS_Snapshot
is_locked_on_FS_Snapshot_but_not_in_FP_Snapshot
is_hidden_in_FP_Snapshot_but_not_on_FS_Snapshot
is_hidden_on_FS_Snapshot_but_not_in_FP_Snapshot
extension_is_hidden_in_FP_Snapshot_but_not_on_FS_Snapshot
extension_is_hidden_on_FS_Snapshot_but_not_in_FP_Snapshot
is_pinned_in_FP_Snapshot_but_not_on_FS_Snapshot
is_pinned_on_FS_Snapshot_but_not_in_FP_Snapshot
is_sync_root_in_FP_Snapshot_but_not_on_FS_Snapshot
is_sync_root_on_FS_Snapshot_but_not_in_FP_Snapshot
is_evictable_in_FP_Snapshot_but_not_on_FS_Snapshot
is_evictable_on_FS_Snapshot_but_not_in_FP_Snapshot
is_dataless_in_FP_Snapshot_but_not_on_FS_Snapshot
is_dataless_on_FS_Snapshot_but_not_in_FP_Snapshot
different_before_bounce_filenames
different_gen_count
different_children_count
different_tag_data
different_favorite_rank
different_permissions
different_document_size
different_physical_size
different_last_used_date
different_creation_date
different_content_modification_date
different_parent_IDs
different_filenames
is_in_FS_Snapshot_but_not_in_FP_Snapshot
is_in_FS_Snapshot_but_ignored_on_disk
is_in_FS_Snapshot_but_not_on_disk
is_locked_in_FS_Snapshot_but_not_on_disk
is_locked_on_disk_but_not_in_FS_Snapshot
is_hidden_in_FS_Snapshot_but_not_on_disk
is_hidden_on_disk_but_not_in_FS_Snapshot
extension_is_hidden_in_FS_Snapshot_but_not_on_disk
extension_is_hidden_on_disk_but_not_in_FS_Snapshot
is_pinned_in_FS_Snapshot_but_not_on_disk
is_pinned_on_disk_but_not_in_FS_Snapshot
is_sync_root_in_FS_Snapshot_but_not_on_disk
is_sync_root_on_disk_but_not_in_FS_Snapshot
is_evictable_in_FS_Snapshot_but_not_on_disk
is_evictable_on_disk_but_not_in_FS_Snapshot
is_dataless_in_FS_Snapshot_but_not_on_disk
is_dataless_on_disk_but_not_in_FS_Snapshot
is_on_disk_but_not_in_FS_Snapshot
is_purgeable_not_evictable
is_evictable_without_flags
has_known_pkg_extension_without_bundle_bit
is_brm_file_fully_materialized
file_has_more_than_one_hardlink
sync_root_has_demoted_flag_bit
package_has_sync_root_bit
ignored_folder_in_ignored_folder_has_sync_root_bit_set
ignored_file_is_evictable
ignored_folder_missing_sync_root_bit
evictable_file_in_ignored_folder
dataless_file_in_ignored_folder
is_evictable_package_item
is_dataless_package_item
is_package_duplicate
is_directory_duplicate
is_file_duplicate
is_neither_dataless_nor_evictable_nor_pinned
has_uf_compressed_flag_without_sf_dataless
has_wrong_protection_class
is_empty_dir_with_extension
is_empty_package
is_owned_by_other
is_owned_by_root
is_tracked_but_fileid_mismatch
is_tracked_but_docid_is_stale
is_tracked_but_docid_is_unknown
is_tracked_but_docid_is_zero
is_untracked_but_should_be
is_tracked_but_should_not_be
has_invalid_favorite_rank
has_invalid_last_used_date
has_invalid_tag_data
is_filled_with_zeros
is_dataless_directory_with_data
is_dataless_file_with_data
is_evictable_without_decmpfs_xattr
has_decmpfs_xattr_but_not_evictable
has_flag_without_decmpfs_xattr
has_invalid_decmpfs_xattr
reconciliationTableCheck(resultHandler:)
  FROM reconciliation_table
B44@?0i8^{fpfs_fileattrs={fpfs_item_handle=QQII*Q}{fpfs_metadata=ib1b1b1b1b1b1b1b1b1b1b1b1b1Sq{timespec=qq}{timespec=qq}{timespec=qq}Q{fpfs_tag_data=^vQi}(?=II)QQq*q*^{fpfs_xattr}I*i}Q[0c]}12@"NSString"20Q28B36B40
unknownPath/unknownFilename
FPCK: error fetching item in the FSSnapshot.
FPCK: reconciliation doesn't know about tags
FPCK: reconciliation doesn't know about permissions
FPCK: reconciliation doesn't know about parent ID
FPCK: reconciliation doesn't know about kind
FPCK: reconciliation doesn't know about children count
FPCK: reconciliation doesn't know about last used date
FPCK: reconciliation doesn't know about creation date
FPCK: reconciliation doesn't know about modification date
FPCK: reconciliation doesn't know about filename
FSAndFSSnapshotCheck(fromURL:options:resultHandler:)
FPCK: error fetching the item in the reconciliation table: %{public}@
SQLDB: fetch reconciliation
  FROM reconciliation_table
 WHERE 
disk_broken_invariants_
disk_versus_fs_snapshot_diffs_
fs_snapshot_versus_fp_snapshot_diffs_
reconciliation_table_broken_invariant_
totalFixedDiskBrokenInvariants
totalFixedFSSnapshotDiffs
remaining_disk_broken_invariants_
remaining_fs_snapshots_diffs_
FPCK: FPDRTCReporting remainingFSSnapshotDiffs
FPCK: FPDRTCReporting remainingDiskBrokenInvariants
FPCK: FPDRTCReporting reconciliationTableBrokenInvariants %s 
FPCK: FPDRTCReporting fsSnapshotVersusFpSnapshotDiff %s 
FPCK: FPDRTCReporting diskVersusFSSnapshotDiff %s 
FPCK: FPDRTCReporting diskBrokenInvariants %s 
Can't open database at: %{public}s, launching only FPCK disk checks.
dump(to:limitNumberOfItems:includingFileTrees:)
+ disk import scheduler: 
too deep - stopping dump
should fetch updated item 
max number of items reached
+ processing requests
+ reconciliation
stabilization for 
: propagation for 
materializingParent
+ database history:
+ database: version=
+ FSEvent: UUID=
 (invalid anchor: 
+ domain version: 
+ feature flags: 
+ scheduling state: 
+ error generation: 
libfssync/FPCK.swift
encountered database error 
FPDRTCReporting: postReport with %ld entries
FPCK: launching FSSnapshot and FPSnapshot checks.
FPCK: launching reconciliation table checks.
FPCK: launching disk and FSSnapshot checks.
FSSnapshotAndFPSnapshotCheck(resultHandler:)
v16@?0@"PQLConnection"8
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/fssync/libfssync/implementations/file-system/persistence/SQLDatabase.swift
invalidateSource()
closing the wharf
stopping tracker
waiting for job completion
closing trees
cancelling in-flight requests
stopping scheduler
cancel trees
disable event aggregation
  invalidating database
running job: %s
%@ Running jobs
roDB
uuid
onError
onNextDurableFlush
flushTimer
isUnsafe
historyTable
enumerationAnchorChanged
onEnumerationAnchorChanged
lastPropagationDateChanged
onLastPropagationDateChanged
onEnumeratorShouldUpdate
onFolderHasBeenIgnored
itemWithPinningChange
itemForEvictabilityReevaluation
keepDownloadedItemsWithDatalessParent
vacuumBatchSize
hasRunTableVacuum
hasRunWharfVacuum
isVacuumInProgress
v32@?0@"PQLConnection"8^v16q24
init(url:fsTree:fpTree:telemetry:options:onError:)
database is ready
opening database %{public}s at %{public}s
feature flag has been enabled: %s
Unsupported %s state, was the feature enabled and turned off?
  %{public}s snapshot mutation: %{public}s
delete-children<id:
  persist job: %{public}s
SELECT rt.rowid, 
  FROM reconciliation_table AS rt
 WHERE 
  FROM reconciliation_table AS rt INDEXED BY recursive_deletion_root
 WHERE rt.fs_deletion_status & 
+rt.fs_scheduling_state = 
AND +rt.fs_scheduling_state_conditions & 
SQLDB: reconciliation update
  reconciliation update: %{public}s
UPDATE reconciliation_table
   SET 
 WHERE rowID = 
libfssync/ItemState.swift
Expected value of 
+rt.fp_scheduling_state = 
AND +rt.fp_scheduling_state_conditions & 
libfssync/Job+SQLCodable.swift
unhandled job type
  FROM jobs
 WHERE 
unsupported class
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/fssync/libfssync/implementations/file-system/persistence/SQLJobRegistry.swift
UPDATE jobs
   SET 
       scheduling_timestamp = MIN(scheduling_timestamp, 
       scheduling_priority = MAX(scheduling_priority, 
AND source_item_id = 
UPDATE background_downloader
   SET state = 
%s <fs:%s reason:%s> completed: %@
testingHarnessScheduling
testingHarnessBarrier(
testingHarnessStabilization
testingHarnessPropagation
testingHarnessEviction
testingHarnessMaterialization(
runTestingOperations(by: 
listTestingOperations(by: 
stabilization(by:
materializeParentHierarchy(
materialization(
itemCreation(<unknown>, by:
enumeration(<unknown>, by:
singleItemChange(
deletionRequest(
downloadRequest(
forceIngestionForItemID(
DB queue wait
asyncBatch(function:side:afterNextDurableFlush:onCancel:updateBlock:)
libfssync/ConcreteDatabase.swift
Should not happen
Expected materialization
Invalid partial materialization request for parent directory
  cancelling request for %s: %s
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/fssync/libfssync/interfaces/job/Job.swift
  cancelling eviction %{public}s
  cancelling materialization %{public}s
propagation <fs:%s reason:%s> completed: %@
%s did not propagate: item is not bound
%s did not propagate: propagating is still in progress
propagation <fp:%s reason:%s> completed: %@
  invalid type transition from 
REJECT: new item in an unknown parent
REJECT:parent is waiting for import (
REJECT: parent is importing the disk and item is not reconciled
REJECT: parent is not watching its children
REJECT: parent is pending import, the item will be scanned when importing the parent
  inconsistent children status for item %s
REJECT: parent is an ignored folder
REJECT: parent is pending deletion
never delete the root item
unblocking waiters on %s
fetch metadata of 
list children of 
fetch content of 
Did Flush
libfssync/SQLDatabase.swift
unhandled error 
 while flushing the database
%@ db was flushed (commit)
batch received after db has been closed will be ignored
can't issue barrier for 
can't get file descriptor for 
cannot make persistent flush: db does not exist anymore
performing a fcntl(F_BARRIERFSYNC)
v28@?0^v8i16^^v20
PROPAGATION_DATE_CHANGED
SCHEDULE_BACKGROUND_DOWNLOAD
CONTENT_POLICY_CHANGED
SCHEDULE_FP_BACKGROUND_DOWNLOAD
unsupported database version %{public}s
can't upgrade DB from %{public}s -> %{public}s: %{public}@
cannot setup schema for %{public}s: %{public}@
upgrading database %{public}s -> %{public}s
applying database bugfixes %{public}s:%s -> %{public}s:%s
updating, clearing the throttles
UPDATE reconciliation_table
   SET fs_vfs_generationid = 0, fs_content_size = NULL
 WHERE kind = 
  error in SCHEDULE_FP_BACKGROUND_DOWNLOAD: %@
  scheduling background download <i:%{public}s reason:%{public}s>
UPDATE background_downloader
   SET reason = reason | 
INSERT INTO background_downloader
     VALUES (
SELECT id
  FROM background_downloader
    WHERE id = 
extent_location IS NULL AND
extent_length IS NULL
extent_location = 
 AND
extent_length = 
  error in CONTENT_POLICY_CHANGED: %@
  unscheduling background download <i:%{public}s reason:%{public}s>
SELECT COUNT(id) FROM background_downloader
WHERE id = 
UPDATE background_downloader
   SET reason = reason & ~
  error in SCHEDULE_BACKGROUND_DOWNLOAD: %@
  error in PINNING_CHANGED: %@
  error in PROPAGATION_DATE_CHANGED: %@
PRAGMA cache_spill = 
PRAGMA cache_size = 
PRAGMA recursive_triggers = true
processPendingIngestion()
syncBatch(function:updateBlock:)
  processing FP tree changes
  processing FS tree changes
  processing ingestion
%{public}s)
%{public}s
  discarded %s: %s
  already known %s
%{public}s force fetch: %{public}s
deletion of unknown item
deletion of unknown item while a folder is currently busy is running on 
requested by file tree
unknown item while listing children of parent item 
item is trash and not in the snapshot
item is root and not in the snapshot
received delete ingestion while delete-item job running, delaying
already fetching metadata for 
Has Runnable Jobs
error while processing jobs: %@
not processing more jobs since we were cancelled
executeRunnableJobs(on:allowConcurrentJobs:count:)
  executing jobs, availabilities fetch-from-fs:"%s" other-fs:"%s"/%s fetch-from-fp:"%s" other-fp:"%s"/%s
com.apple.fileproviderd.fpfs.running-jobs
vacuum(force:completionHandler:)
  vacuum-ing
  vaccuum still running when triggered
  pausing vacuum because the XPC activity ask for deferral after %fs, newSize: %s, reclaimed: %s (%s)
  finished vacuum in %fs, newSize: %s, reclaimed: %s (%s)
DB queue wait for flush
SQLDB: Force flush of database
  vacuum-ing wharf with an upper bound of %ld
wharfVacuum(force:completionHandler:)
  vacuum-ed %ld files from <wharf>/ingest/, %ld files from <wharf>/propagate/
  wharf didn't have anything to vacuum
  wharf vacuum failed: %@
SELECT COUNT(*)
  FROM jobs
 WHERE type = 
   AND scheduling_state NOT IN 
SELECT COUNT(*)
  FROM fp_item_jobs
 WHERE type = 
SELECT COUNT(*)
  FROM fs_item_jobs
 WHERE type = 
SELECT COUNT(*)
  FROM reconciliation_table
 WHERE fp_captured_content_file_id IS NOT NULL AND fp_captured_content_file_id != 0
SELECT COUNT(*)
  FROM reconciliation_table
 WHERE fs_captured_content_file_id IS NOT NULL AND fs_captured_content_file_id != 0
incrementalDBVacuum(force:size:completionHandler:)
PRAGMA page_size
PRAGMA page_count
unlockedValue
lock
fpfs
updatedItemsRank
wrapped
extraLogs
snapshotMutations
reconciliationMutations
jobs
libfssync/JobResult.swift
currentPosition
completed
rootFD
limit
_TtC9libfssync18VFSDirectoryLister
lookupCache
domainID
_TtC9libfssync18URLDirectoryLister
B16@?0r*8
 Ignoring the busy file %s from enumeration
libfssync/VFSDirectoryLister.swift
should be implemented by subclass
positionDirectoryID
positionGenerationCount
positionReadCount
positionUnreadCount
errorGeneration(
schedulingState(
fpStreamSyncToken(
fsStreamEventID(
dbBugfixRevision(
mark_directories_as_locked
mark_package_syncroot
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/fssync/libfssync/interfaces/persistence/SyncStateStore.swift
_TtC9libfssync12StringDumper
string
indent
_TtC9libfssync10FileDumper
libfssync/FPItemVersion.swift
libfssync/Database+JobExecution.swift
scheduling a job that is not runnable
Scheduler: Async Job execution
  executing %{public}s
  job locked out of execution %{public}s by rules %@
job mutated during execution or completion handler got called twice: 
can't handle persistence error: 
  done executing %{public}s%{public}s
  done executing %{public}s%{public}s
dataProtectionClass
com~apple~CloudDocs
_TtC9libfssync21PaginatedContinuation
position
table
itemColumnCount
itemColumns
nonSyncableAttributesColumns
nonSyncableAttributesColumnsCount
cacheByID
cacheCleared
 RENAME COLUMN
decoration_collaboration_identifier TO metadata_collaboration_identifier
 ADD COLUMN metadata_collaboration_identifier TEXT NULL
 ADD COLUMN decoration_last_editor_device_name TEXT
 RENAME COLUMN
decoration_shared_item_identifier TO decoration_collaboration_identifier
 ADD COLUMN decoration_conflicting_versions BLOB
CREATE TRIGGER "keep_downloaded_content_policy/
/background_download_on_insert"
 AFTER INSERT ON 
BEGIN
  SELECT SCHEDULE_FP_BACKGROUND_DOWNLOAD(new.id, 
(CASE new.decoration_content_policy
  WHEN 
 THEN
    new.decoration_inherited_content_policy
  ELSE
    new.decoration_content_policy
 END)
/background_download_on_update"
 AFTER UPDATE OF decoration_content_policy, decoration_inherited_content_policy ON 
(CASE old.decoration_content_policy
  WHEN 
 THEN
    old.decoration_inherited_content_policy
  ELSE
    old.decoration_content_policy
 END)
CREATE TRIGGER "content_policy/
/evictable_update"
 AFTER UPDATE OF decoration_content_policy, decoration_inherited_content_policy ON 
BEGIN
  SELECT CONTENT_POLICY_CHANGED(new.id, 
/recursive_update"
 AFTER UPDATE OF decoration_content_policy, decoration_inherited_content_policy ON 
  WHEN new.metadata_kind == 
BEGIN
  UPDATE 
    SET decoration_inherited_content_policy = 
  WHERE parent_id = new.id
  AND id != new.id
    AND decoration_inherited_content_policy != 
/parent_update"
 AFTER UPDATE OF parent_id ON 
  WHEN new.parent_id != old.parent_id
 BEGIN
   UPDATE 
     SET decoration_inherited_content_policy = 
     WHERE rowID = new.rowID
     AND id != new.parent_id
     AND decoration_inherited_content_policy != 
IFNULL((SELECT (CASE decoration_content_policy
               WHEN 
               THEN decoration_inherited_content_policy
               ELSE decoration_content_policy
               END)
           FROM 
         WHERE id = 
/item_update"
 AFTER UPDATE OF decoration_content_policy ON 
 WHEN new.decoration_content_policy != old.decoration_content_policy
 AND new.id != new.parent_id
BEGIN
  UPDATE 
   WHERE rowID = new.rowID;
/item_insertion"
 AFTER INSERT ON 
   WHERE rowID = new.rowID
   AND id != parent_id;
 ADD COLUMN decoration_inherited_content_policy UNSIGNED INT NOT NULL DEFAULT 0
 ADD COLUMN decoration_content_policy UNSIGNED INT NOT NULL DEFAULT 0
 ADD COLUMN decoration_shared_item_identifier TEXT NULL
 ADD COLUMN metadata_link_count UNSIGNED INT
recursive_non_evictable_count
recursive_evictable_count
metadata_is_evictable != 0 AND 
metadata_is_dataless = 0 AND 
metadata_kind = 
CREATE TRIGGER "
/recursive_update_reparent"
  AFTER UPDATE OF parent_id ON 
          WHEN old.parent_id != new.parent_id
BEGIN
  -- If the item was reparented, delete from the old parent
  UPDATE 
   WHERE id = old.parent_id AND id != new.id AND old.parent_id != new.parent_id;
  -- If the item was reparented, add to the new parent
  UPDATE 
   WHERE id = new.parent_id AND id != new.id AND old.parent_id != new.parent_id;
/recursive_update"
  AFTER UPDATE OF 
          WHEN old.
BEGIN
  -- Update the count for the parent, supporting reparenting cases
  UPDATE 
   WHERE id = old.parent_id
     AND NOT (old.id IN (
/local_update"
  AFTER UPDATE OF 
          WHEN (
BEGIN
  -- Update the recursive_dataless_count for the current item
  UPDATE 
 + 1
                        ELSE 
 - 1
                        END
   WHERE id = new.id AND (
/delete"
  AFTER DELETE ON 
   WHERE id = old.parent_id;
/insert_parent"
  AFTER INSERT ON 
          WHEN new.metadata_kind = 
 + IFNULL((SELECT SUM(
                                       FROM 
                                      WHERE parent_id = new.id AND id != new.id),
                                    0)
   WHERE id = new.id;
/insert"
  AFTER INSERT ON 
          WHEN 
 + 1
   WHERE id = new.id;
metadata_is_evictable = 0 AND 
recursive_evictability
DROP TRIGGER IF EXISTS "recursive_evictability/
/local_update_evictable"
/local_update_non_evictable"
DROP TRIGGER IF EXISTS "
/recursive_update_reparent"
/recursive_update"
recursive_dataless_count
metadata_is_dataless != 0
recursive_dataless
   SET recursive_disallow_exclusion_count = 1
 WHERE (decoration_capabilities & 
   SET recursive_disallow_deletion_count = 1
 WHERE (decoration_capabilities & 
recursive_disallow_deletion_count
recursive_disallow_exclusion_count
decoration_capabilities & 
 ADD COLUMN recursive_disallow_exclusion_count UNSIGNED INT NOT NULL DEFAULT 0
 ADD COLUMN recursive_disallow_deletion_count UNSIGNED INT NOT NULL DEFAULT 0
   SET recursive_evictable_count = 1
 WHERE metadata_kind != 
   AND metadata_is_dataless = 0
   AND metadata_is_evictable != 0
 ADD COLUMN recursive_evictable_count UNSIGNED INT NOT NULL DEFAULT 0
 ADD COLUMN metadata_os_type UNSIGNED INT DEFAULT NULL
CREATE TRIGGER "hierarchical_user_info/
/recursive_invalidation"
 AFTER UPDATE OF decoration_inherited_user_info ON 
  WHEN new.decoration_inherited_user_info IS NULL AND new.metadata_kind == 
     SET decoration_inherited_user_info = NULL
   WHERE parent_id = new.id AND id != new.id
     AND +metadata_kind == 
     AND +decoration_inherited_user_info IS NOT NULL;
  -- Update the last change date
  SELECT PROPAGATION_DATE_CHANGED(2, new.id);
/entry_update"
 AFTER UPDATE OF decoration_user_info, parent_id ON 
     SET decoration_inherited_user_info = NULL
   WHERE rowID = new.rowID
     AND +decoration_inherited_user_info IS NOT NULL;
 ADD COLUMN decoration_inherited_user_info BLOB NULL
 ADD COLUMN metadata_closest_syncroot UNSIGNED INT NOT NULL DEFAULT 0
(id, metadata_is_package)
_parent_id__id__ignore ON 
(metadata_kind, id, parent_id, metadata_is_ignoreroot)
 ADD COLUMN metadata_is_ignoreroot BOOL NOT NULL DEFAULT 0
_parent_id__id__syncroot ON 
(id, vfs_fileid, parent_id, metadata_is_syncroot)
CREATE TRIGGER "pinning/
/recursive_pinning_update"
  AFTER UPDATE OF metadata_is_in_pinned_folder ON 
          WHEN old.metadata_is_in_pinned_folder != new.metadata_is_in_pinned_folder
BEGIN
  UPDATE 
     SET metadata_is_in_pinned_folder = new.metadata_is_in_pinned_folder
   WHERE parent_id = new.id AND metadata_is_pinned = 0;
  SELECT PINNING_CHANGED(new.id, 
/recursive_item_update"
 AFTER UPDATE ON 
     SET metadata_is_in_pinned_folder = (metadata_is_pinned != 0
                                         OR EXISTS (SELECT id
                                                      FROM 
                                                     WHERE id = new.parent_id
                                                       AND id != new.id
                                                       AND metadata_is_in_pinned_folder != 0))
   WHERE id = new.id
     AND (old.metadata_is_pinned != new.metadata_is_pinned
          OR old.parent_id != new.parent_id);
/insert"
 AFTER INSERT ON 
                                                     WHERE id = new.parent_id
                                                       AND id != new.id
                                                       AND metadata_is_in_pinned_folder != 0))
  WHERE id = new.id;
content_version 
structural_version 
vfs_fileid INT NOT NULL,
vfs_generationid INT NOT NULL,
_vfs_not_evictable_idx
          ON 
(metadata_is_evictable)
       WHERE NOT metadata_is_evictable
_vfs_fileid_idx ON 
_materialize_children ON 
(parent_id, metadata_is_dataless, metadata_kind)
_parent_id__filename_idx
    ON 
(parent_id, filename 
_parent_id_idx ON 
-- Allowed operations on the item
decoration_capabilities INT,
-- Transfer status
decoration_is_uploading BOOL NOT NULL,
decoration_is_uploaded BOOL NOT NULL,
decoration_uploading_error BLOB NULL,
decoration_downloading_error BLOB NULL,
decoration_is_excluded_from_sync BOOL NOT NULL,
-- Sharing
decoration_is_shared BOOL NOT NULL,
decoration_is_top_level_shared_item BOOL NOT NULL,
decoration_is_shared_by_current_user BOOL NOT NULL,
decoration_preformatted_owner_name TEXT NULL,
decoration_preformatted_most_recent_editor_name TEXT NULL,
decoration_last_edited_by_current_user BOOL NOT NULL,
decoration_sharing_permissions TEXT NULL,
-- App libraries
decoration_is_container BOOL NOT NULL,
decoration_is_container_pristine BOOL NOT NULL,
decoration_app_container_bundle_identifier TEXT NULL,
decoration_cloud_container_identifier TEXT NULL,
decoration_container_display_name TEXT NULL,
-- Other
decoration_display_name TEXT NULL,
decoration_has_unresolved_conflicts BOOL NOT NULL,
-- Free-form data
decoration_item_decoration BLOB NULL,
decoration_user_info BLOB NULL
 PRIMARY KEY,
  parent_id 
 NOT NULL,
  filename TEXT NOT NULL,
  snapshot_version UNSIGNED INT NOT NULL DEFAULT 0,
  metadata_kind TINYINT NOT NULL,
  metadata_is_dataless BOOL NOT NULL,
  metadata_is_package BOOL NOT NULL,
  metadata_size UNSIGNED BIG INT NOT NULL,
  metadata_posix_permissions SMALLINT NOT NULL,
  metadata_creation_date BIGINT NULL,
  metadata_content_modification_date BIGINT NULL,
  metadata_last_used_date BIGINT NULL,
  metadata_tag_data BLOB NULL,
  metadata_favorite_rank BIGINT UNSIGNED NULL,
  metadata_is_hidden BOOL NOT NULL,
  metadata_extension_hidden BOOL NOT NULL,
  metadata_child_item_count INT NULL,
  metadata_extended_attributes BLOB NULL,
  metadata_is_locked BOOL NOT NULL,
  metadata_physical_size UNSIGNED BIG INT NULL,
  metadata_is_evictable BOOL NOT NULL,
  metadata_is_pinned BOOL NOT NULL,
  metadata_is_in_pinned_folder BOOL NOT NULL,
  metadata_before_bounce_filename TEXT DEFAULT NULL,
  metadata_quarantine_blob BLOB NULL,
  metadata_is_syncroot BOOL NOT NULL,
  captured_content BLOB NULL,
recursive_dataless_count UNSIGNED INT NOT NULL DEFAULT 0,
recursive_non_evictable_count UNSIGNED INT NOT NULL DEFAULT 0
lookupLink(byFileID:)
SELECT parent_id, filename
  FROM 
_vfs_fileid_idx
 WHERE vfs_fileid = 
lookup(byFileID:)
SQLDB: list not yet created descendents
-- Look at everything that seems to have pending propagations or
-- metadata refreshes and that has the item in its parent hierarchy:
--   * either an unstable reconciliation entry
--   * or a pending (or running) FetchItem job
SELECT rt.
  FROM reconciliation_table AS rt
 WHERE rt.scheduling_timestamp <= 
_id IS NULL
   AND 
SQLDB: listing descendents pending incoming propagation
SELECT j.item_id
  FROM 
_item_jobs AS j
 INNER JOIN reconciliation_table AS rt ON (rt.
_id = j.item_id)
 WHERE j.type = 
   AND j.scheduling_state IN 
   AND j.scheduling_timestamp <= 
  FROM reconciliation_table AS rt
 WHERE rt.
_scheduling_state = 
   AND rt.scheduling_timestamp <= 
_id IS NOT NULL
   AND 
_updated_fields != 0 OR rt.
_deletion_status != 0)
   AND rt.
SQLDB: check path-matching loop
WITH RECURSIVE path_matching(id, parent_id, filename, wait_on_path_matching) AS (
  SELECT s.id, s.parent_id, s.filename, (rt.
_scheduling_state_conditions & 
) != 0
    FROM 
 AS s
    JOIN reconciliation_table AS rt ON rt.
_id = s.id
   WHERE id = 
   -- Use union to remove duplicates because we can have cases where
   -- several items have the same filename, which will cause loops in the query
   UNION
  SELECT s.id, s.parent_id, s.filename, (rt.
) != 0
    FROM path_matching AS pm
    -- From the previously found item, lookup path-matching items in the other snapshot
    -- by resolving the id in the reconciliation table, then performing a lookup by (parent_id, filename)
    JOIN reconciliation_table AS parent_rt ON pm.parent_id = parent_rt.
_snapshot AS other_snapshot ON (parent_rt.
_id = other_snapshot.parent_id
                                                           AND other_snapshot.filename = pm.filename
                                                               
    -- For items found in the other snapshot, resolve the id in the reconciliation table and
    -- lookup the corresponding item in the local snapshot.
    JOIN reconciliation_table AS rt ON other_snapshot.id = rt.
 AS s ON s.id = rt.
SELECT id
  FROM path_matching
 WHERE id = 
pm.wait_on_path_matching
SQLDB: check item is descendent of another item
WITH RECURSIVE parent_dirs(id) AS (
  SELECT id
    FROM 
   UNION ALL
  SELECT 
.parent_id
    FROM 
    JOIN parent_dirs ON 
.id = parent_dirs.id AND 
.parent_id
   WHERE 
SELECT p.id
  FROM parent_dirs AS p
 INNER JOIN reconciliation_table AS rt ON rt.
_id = p.id
   AND rt.
_updated_fields & 
 != 0
   AND rt.
WITH RECURSIVE parent_dirs(id) AS (
  SELECT parent_id
    FROM 
.parent_id
SELECT id
  FROM parent_dirs
 WHERE id = 
SQLDB: Find closest sync root in parent chain
WITH RECURSIVE parent_dirs(id, parent_id, closest_sync_root) AS (
  SELECT id, parent_id,
    CASE
      WHEN metadata_is_syncroot != 0 THEN vfs_fileid
      WHEN metadata_closest_syncroot != 0 THEN metadata_closest_syncroot
      ELSE 0
    END
    FROM 
_parent_id__id__syncroot
   WHERE id = 
  UNION ALL
  SELECT 
.parent_id,
    CASE
      WHEN 
.metadata_is_syncroot != 0 THEN 
.vfs_fileid
      WHEN 
.metadata_closest_syncroot != 0 THEN 
.metadata_closest_syncroot
      ELSE 0
    END
    FROM 
    INDEXED BY 
_parent_id__id__syncroot
    JOIN parent_dirs ON 
.id = parent_dirs.parent_id
      AND parent_dirs.id != parent_dirs.parent_id
SELECT closest_sync_root
  FROM parent_dirs
 WHERE closest_sync_root != 0 AND (id != 
 OR id = parent_id)
SQLDB: Update closest sync root for descendents of unignored item
  SET metadata_closest_syncroot = 
WHERE metadata_closest_syncroot = 
 at 
SQLDB: Snapshot update
       snapshot_version = snapshot_version + 1
 WHERE id = 
SQLDB: Snapshot insert
, decoration_inherited_content_policy)
     VALUES (
delete children of 
SQLDB: Delete Children
 WHERE id IN (SELECT id
                FROM 
           LEFT JOIN reconciliation_table ON (reconciliation_table.
_id = id)
               WHERE parent_id = 
                 AND id != parent_id
                 AND reconciliation_table.
SQLDB: Delete Item
SQLDB: Has ignored parent
WITH RECURSIVE ignored_parents(id, rt_deletion_status) AS (
  SELECT parent_id, rt.
_deletion_status
    FROM 
 INNER JOIN reconciliation_table AS rt ON rt.
   WHERE id = 
UNION ALL
  SELECT snap.parent_id, rt.
_deletion_status
    FROM ignored_parents
   INNER JOIN 
 AS snap ON (snap.id = ignored_parents.id)
   INNER JOIN reconciliation_table AS rt ON (rt.
_id = ignored_parents.id)
     WHERE rt.
_deletion_status & 
 == 0
     AND +snap.parent_id != snap.id
SELECT 1
  FROM ignored_parents
 WHERE rt_deletion_status & 
SQLDB: Has reseting parent
WITH RECURSIVE parent_dirs(id, parent_id) AS (
  SELECT id, parent_id
    FROM 
.id = parent_dirs.parent_id AND parent_dirs.id != parent_dirs.parent_id
SELECT 1
  FROM parent_dirs AS p
 INNER JOIN 
_item_jobs AS jobs ON p.id = jobs.item_id
 WHERE jobs.type IN (
   AND jobs.scheduling_state IN 
   AND (jobs.reason & 
 != 0
        OR jobs.pending_reason & 
SQLDB: Count keep downloaded children
keep downloaded children of 
 WHERE parent_id = 
(CASE decoration_content_policy
  WHEN 
 THEN
    decoration_inherited_content_policy = 
  ELSE
    decoration_content_policy = 
SQLDB: Count bound children
bound children of 
SELECT snap.id
  FROM 
 AS snap
 INNER JOIN reconciliation_table AS rt ON rt.
_id = snap.id
 WHERE snap.parent_id = 
_id IS NOT NULL
   AND +rt.
_deletion_status & ~
SQLDB: Count unbound children
unbound children of 
_id IS NULL
   AND +rt.
_materialization_status = 
_scheduling_state != 
        OR +rt.
_id IS NULL
 LIMIT 1
SQLDB: Count pending rescan children
pending rescan below 
 AS snap
 INNER JOIN reconciliation_table AS rt ON snap.id = rt.
 WHERE snap.parent_id = 
_disk_import_status = 
SQLDB: Count materialized children
materialized children of 
_materialize_children
 INNER JOIN reconciliation_table AS rt ON rt.
 WHERE parent_id = 
   AND metadata_is_dataless = 0
   AND metadata_is_ignoreroot = 0
   AND rt.fs_deletion_status & 
 = 0
   AND (rt.fs_scheduling_state != 
        OR rt.fs_scheduling_state_conditions & 
 = 0)
   AND metadata_kind IN 
   AND parent_id != id
 LIMIT 1
 AND snap.parent_id != snap.id
   AND rt.
_id IS NULL
   AND rt.
SQLDB: Contains pending deletion children
 AND snap.parent_id != snap.id
   AND ((rt.
_deletion_status != 0 
_id IS NOT NULL)
        OR (rt.
_id IS NOT NULL)
        OR rt.
_updated_fields == 0
_scheduling_state_conditions NOT IN 
SQLDB: Contains children
 AND snap.parent_id != snap.id
   AND (rt.
 AS snap
 WHERE snap.parent_id = 
 AND snap.parent_id != snap.id
 LIMIT 1
SQLDB: Enumerate non-locked directory that could be locked
SELECT rowID, id FROM 
 WHERE metadata_kind = 
   AND metadata_is_locked = 0
   AND +decoration_capabilities & 
SQLDB: Enumerate non-syncroot packages
 WHERE metadata_is_package AND +metadata_is_syncroot = 0
   AND 
SQLDB: Enumerate non-purgeable packages
 WHERE metadata_is_package AND +metadata_is_evictable = 0
   AND 
SQLDB: Check item with ID
SQLDB: Lookup parent ID
lookup parentID of 
SELECT parent_id
  FROM 
SQLDB: Build Hierarichal User Info
   SET decoration_inherited_user_info = 
SELECT decoration_inherited_user_info, decoration_user_info, parent_id
  FROM 
 AND +metadata_kind = 
SQLDB: Lookup item non syncable attributes
SQLDB: Lookup item by parent ID and name
   AND filename = 
SQLDB: Lookup item by ID
 AND +snapshot_version = 
SQLDB: Lookup snapshot version
SELECT snapshot_version
  FROM 
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/fssync/libfssync/implementations/file-system/persistence/SQLSnapshot.swift
SQLDB: Lookup Inherited Content Policy
SELECT decoration_content_policy, decoration_inherited_content_policy
  FROM 
SQLDB: Lookup FP recursive properties
SELECT recursive_disallow_deletion_count, recursive_disallow_exclusion_count
  FROM 
SQLDB: Lookup FS recursive properties
SELECT recursive_dataless_count, recursive_non_evictable_count, recursive_evictable_count
  FROM 
WITH RECURSIVE parent(id) AS (
  SELECT rec_snap.parent_id
    FROM 
 AS rec_snap
   WHERE rec_snap.id = 
   UNION
  SELECT rec_snap.parent_id
    FROM parent
   INNER JOIN 
 AS rec_snap ON rec_snap.id = parent.id
   WHERE rec_snap.parent_id != rec_snap.id)
SELECT id
  FROM parent
libfssync/SQLSnapshot.swift
unsupported diff field 
decoration_last_editor_device_name = 
decoration_content_policy = 
metadata_link_count = 
metadata_os_type = 
decoration_conflicting_versions = 
decoration_user_info = 
decoration_item_decoration = 
decoration_has_unresolved_conflicts = 
decoration_display_name = 
decoration_container_display_name = 
decoration_cloud_container_identifier = 
decoration_app_container_bundle_identifier = 
decoration_is_container_pristine = 
decoration_is_container = 
metadata_collaboration_identifier =  
decoration_sharing_permissions = 
decoration_last_edited_by_current_user = 
decoration_preformatted_most_recent_editor_name = 
decoration_preformatted_owner_name = 
decoration_is_shared_by_current_user = 
decoration_is_top_level_shared_item = 
decoration_is_shared = 
decoration_uploading_error = 
decoration_is_uploaded = 
decoration_is_uploading = 
decoration_capabilities = 
metadata_is_ignoreroot = 
metadata_is_syncroot = 
metadata_is_pinned = 
metadata_is_evictable = 
metadata_closest_syncroot = 
metadata_extended_attributes = 
metadata_favorite_rank = 
metadata_tag_data = 
metadata_last_used_date = 
metadata_child_item_count = 
metadata_extension_hidden = 
metadata_is_hidden = 
metadata_content_modification_date = 
metadata_creation_date = 
metadata_posix_permissions = 
metadata_is_locked = 
metadata_is_dataless = 
metadata_physical_size = 
structural_version = 
metadata_is_package = 
content_version = 
metadata_size = 
vfs_generationid = 
metadata_before_bounce_filename = 
SQLDB: Scan directory
unexpected continuation type
 AND id != parent_id
 ORDER BY rowID ASC
 LIMIT 
, recursive_dataless_count, recursive_non_evictable_count, recursive_evictable_count
, recursive_disallow_deletion_count, recursive_disallow_exclusion_count
SQLDB: Enumerate children IDs
   AND parent_id != id
_TtC9libfssync12JobLimitSlot
executionTimer
executionIsTooLong
onNewSlot
_TtC9libfssync8JobLimit
runningJobs
currentJobsLimit
softJobsLimit
hardJobsLimit
backgroundDownloads
job executing for more than 5 minutes, increasing limit for %{public}s: %{public}s
updateContentJobsForB
updateContentJobsForA
fetchContentJobsForB
fetchContentJobsForA
v24@?0@"NSDictionary"8@"NSError"16
_TtC9libfssync17GSConflictManager
  Loser %s has invalid format, ignoring it...
v24@?0@"GSAddition"8@"NSError"16
  Putting loser %s into the Genstore...
modificationDate
 remaining 
from mayAlreadyExist reason 
, may-already-exists, why:
  isRecursive reason 
oldItem newItem diffs reason 
limitSlot
schedulingOrder
reason
libfssync/Job.swift
cannot add new triggers on non-waiting job
job must not be running when cancelled
should not call itemIDForThrottling for ItemJob
to be implemented in sub-classes
pendingSetRefreshDate
isInitialGathering
_TtC9libfssync17FSSnapshotChecker
snapshotForDomainID
fsForDomainID
filesCheckedDuringDiskEnumeration
filesCheckedDuringFSSnapshotEnumeration
FSSnapShotGivenRootID
Item kind undefined.
fetchItem(with:inDomainID:)
Error fetching the item in the FSSnapshot: %@
SQLDB: Lookup item by fileID
enumerateItems(_:)
Error retrieving item %{public}s children: %{public}@
_TtC9libfssync31DocumentTrackingTombstoneSlayer
basePath
libfssync/TombstoneSlayer.swift
 tombstone slaying failed: %{public}@
 recreating tombstone slayer
 reason 
initialState
resolvedWithDB
itemIgnoredDuringDiskImport
contentPolicyChanged
itemDatalessOnDisk
cancelMaterialization
diskImportFailed
garbageCollection
itemChangedWhileFetchingContent
itemChangedRemotely
itemChangedInTree
itemDeletedInTree
itemUpdateConflicted
itemUpdateRejected
itemCreationConflicted
itemCreationRejected
folderDeletedInTree
folderCreatedInTree
fsItemJobs
fpItemJobs
backgroundDownloader
throttleWaitGroup
fsOrFPJobColumns
creationJobTypes
propagationJobTypes
ALTER TABLE jobs ADD COLUMN domain_version UNSIGNED INT NULL
CREATE INDEX jobs__side__scheduling_ordering
    ON jobs(side, scheduling_priority DESC, scheduling_timestamp)
CREATE INDEX jobs_state__side__scheduling_ordering
    ON jobs(scheduling_state, side, scheduling_priority DESC, scheduling_timestamp)
CREATE INDEX jobs_state__side__type__scheduling_ordering
    ON jobs(scheduling_state, side, type, scheduling_priority DESC, scheduling_timestamp)
CREATE INDEX jobs_side__source_id__type__scheduling_state
    ON jobs(side, source_item_id, type, scheduling_state)
CREATE TABLE jobs (
  id INTEGER PRIMARY KEY,
  type TINYINT NOT NULL,
  side TINYINT NOT NULL,
  scheduling_priority UNSIGNED INTEGER NOT NULL,
  scheduling_timestamp INTEGER NOT NULL,
  scheduling_state TINYINT NOT NULL,
  scheduling_state_conditions SMALLINT NOT NULL,
  scheduling_state_continuation BLOB NULL,
  reason INT NOT NULL,
  source_item_id NULL,
  source_snapshot_version UINT NULL,
  target_item_id NULL,
  target_filename TEXT NULL,
  bouncing_context BLOB NULL,
  captured_content UNSIGNED INT NULL,
  diffs TINYINT NULL
UPDATE jobs
   SET scheduling_state = 
   AND scheduling_state_conditions = 0
UPDATE jobs
   SET scheduling_state_conditions = scheduling_state & ~(
 WHERE scheduling_state = 
   AND +scheduling_state_conditions & 
DELETE FROM jobs
      WHERE id = 
recovering running job %{public}s
jobType itemID 
+ propagation jobs
corrupted database: 
SELECT rowID
  FROM jobs
 WHERE scheduling_state = 
SELECT id
  FROM jobs
 WHERE scheduling_state IN 
scheduling_state_conditions != 
SQLDB: Persist Job
ORDER BY scheduling_priority DESC, scheduling_timestamp
 AND source_item_id = 
ORDER BY scheduling_priority DESC, scheduling_timestamp LIMIT 
INSERT INTO jobs (scheduling_timestamp, scheduling_priority, 
libfssync/SQLJobRegistry.swift
include a side in your query
SELECT 1
  FROM jobs
 WHERE 
computation
$__lazy_storage_$_value
_TtC9libfssync15SQLHistoryTable
subTables
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/fssync/libfssync/implementations/file-system/persistence/SQLHistoryTable.swift
yyyy-MM-dd HH:mm:ss.SSSZ
SELECT timestamp, os_version, db_version, db_revision, fs_version, fp_version
  FROM history
 ORDER BY rowID DESC
INSERT INTO history (timestamp, os_version, db_version, db_revision, fs_version, fp_version)
     VALUES (
SELECT timestamp, os_version, db_version, db_revision, fs_version, fp_version
  FROM history
 ORDER BY rowID 
CREATE TABLE history (
  timestamp INT NOT NULL,
  os_version TEXT NOT NULL,
  db_version INT NOT NULL,
  db_revision INT NOT NULL,
  fs_version TEXT NOT NULL,
  fp_version TEXT NOT NULL
libfssync/ItemNonSyncableAttributes.swift
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/fssync/libfssync/interfaces/file-tree/item/types/ItemNonSyncableAttributes.swift
%@ %{public}s
libfssync/CodableClass.swift
), add the registration in the FileTree that use that type:
.register(child: 
below by 
of by 
itemID by 
libfssync
@40@0:8@16@24@32
@"NSData"8@?0
lastEditorDeviceName
cloudContainerIdentifier
appContainerBundleIdentifier
isContainerPristine
lastEditedByCurrentUser
isSharedByCurrentUser
isTopLevelSharedItem
queueStorage
wasReopenedForReading
optionsStorage
schedulerQueueStorage
schedulerIsEnabled
scheduleStateStorage
onSchedulingStateChange
source
backgroundDownloadLimit
jobLockForAStorage
jobLockForBStorage
isCancelling
persistenceCounterStorage
jobGroupStorage
runningJobMap
runningJobsOSTransaction
schedulerOSTransaction
$__lazy_storage_$_swappedStorage
telemetry
materializationWaiters
propagationFromFPWaiters
propagationFromFSWaiters
stabilizationWaiters
ingestionFromFSWaiters
fsBarrierWaiters
fpBarrierWaiters
flushWaiters
testingOperationWaiters
ingestionSource
fsChanges
fpChanges
jobSchedulerEpoch
domainVersionStorage
triggersEnabled
pendingTriggers
pendingReconciliations
delegateStore
osLog
shouldDumpState
finishedUploadJobs
finishedDownloadJobs
uploadJobs
downloadJobs
_isInDiskImportStorage
isUpcallTimeoutSchedulerRegister
com.apple.fileproviderd.vacuum
com.apple.fileproviderd.auto-resume
@"<OS_xpc_object>"8@?0
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/fssync/libfssync/sync-logic/ConcreteDatabase.swift
old new 
DB queue
syncRead(function:block:)
registerUpcallTimeoutRetryScheduler()
registerDiskImportScheduler()
DB: Signal Runnable Jobs
com.apple.fileproviderd.fpfs.scheduler
 item 
SQLDB: React to trigger
%@  
 trigger: %{public}s
SQLDB: reconcile
%@  
 reconciling: %{public}s
  job scheduler is stable, calling the stabilization waiters
  job scheduler is stable, download jobs are not!
  job scheduler is stable, upload jobs are not!
  waiting for ingestion of %{public}s prior to %s for %s: %s
  finished ingestions of %{public}s for %s
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/fssync/libfssync/implementations/file-system/tree/VFSLookupScope.swift
_TtC9libfssync14VFSLookupScope
deviceID
rootInode
trashInode
disableTrash
shouldSyncXattr
trashURL
com.apple.fileprovider.trash
  created .Trash with fileID %llu
ALTER TABLE engine_state ADD COLUMN error_generation INT NOT NULL DEFAULT 0
ALTER TABLE engine_state ADD COLUMN scheduling_state UNSIGNED INT NOT NULL DEFAULT 0
ALTER TABLE engine_state ADD COLUMN feature_flags UNSIGNED INT NOT NULL DEFAULT 0
ALTER TABLE engine_state ADD COLUMN domain_version UNSIGNED INT NOT NULL DEFAULT 0
INSERT INTO engine_state (
  rowid,
  db_uuid,
  db_bugfix_revision,
  fs_stream_uuid,
  fs_stream_event_id,
  fp_stream_sync_token
VALUES (
  0,
, 0,
  NULL, NULL, NULL
CREATE TABLE engine_state (
  rowid INTEGER PRIMARY KEY CHECK (rowid = 0),
  db_uuid              BLOB NOT NULL,
  db_bugfix_revision   UNSIGNED INT NOT NULL,
  fs_stream_uuid       BLOB DEFAULT NULL,
  fs_stream_event_id   INT DEFAULT NULL,
  fp_stream_sync_token BLOB DEFAULT NULL
  updating %s
  domain version updated %s -> %s
UPDATE engine_state SET 
error_generation
scheduling_state
fp_stream_sync_token
fs_stream_event_id
db_bugfix_revision
 FROM engine_state
SELECT db_uuid,
       db_bugfix_revision,
       fs_stream_uuid,
       fs_stream_event_id,
       fp_stream_sync_token,
       domain_version,
       feature_flags,
       scheduling_state,
       error_generation
  FROM engine_state
SELECT SUM(metadata_physical_size) FROM fs_snapshot WHERE NOT metadata_is_evictable
_TtC9libfssync12PeriodicFPCK
usingFPFS
runnable
Failed to execute FPCK repair on %s : %@
starting to run periodic FPCK for %s
com.apple.fileproviderd.periodic-fpck
initialPageSortedByDate
initialPageSortedByName
_TtC9libfssync21FileProviderPageToken
directoryID
page
_TtC9libfssync13StagedContext
[ASSERT] 
  %s:%lu: %s
Invalid parent ID 
Invalid identifier for parent folder 
fileID of directory changed during enumeration: 
unsupported feature flag enablement: 
 content:partial
delayPropagation(reason:
nothingToPropagate
unexpected job in reconciliation 
  cannot encode indexer state: 
unexpected kind 
Unable to process fsevent#
can't close DB: 
unhandled testing operation 
over-released eviction prevention for 
Precondition failed 
entry
fsRootID
fpRootID
columns
prefixedColumns
entryCachePerID
entryCachePerRowID
notDirectoryKinds
interestedContents
CREATE TRIGGER "last_change/reconciliation_table/creation"
  AFTER INSERT ON reconciliation_table
BEGIN
  -- Update the last change date
  UPDATE reconciliation_table
     SET last_change = PROPAGATION_DATE_CHANGED(0, new.fs_id)
   WHERE rowID = new.rowID;
CREATE TRIGGER "last_change/fp_snapshot/decoration_change"
  AFTER UPDATE ON fp_snapshot
BEGIN
  -- Update the last change date
  UPDATE reconciliation_table
     SET last_change = PROPAGATION_DATE_CHANGED(0, fs_id)
   WHERE fp_id = new.id;
CREATE TRIGGER "last_change/fp_snapshot/recursive_capabilities_change"
  AFTER UPDATE OF recursive_disallow_deletion_count, recursive_disallow_exclusion_count ON fp_snapshot
          WHEN (new.recursive_disallow_deletion_count != old.recursive_disallow_deletion_count
                AND (new.recursive_disallow_deletion_count == 0 OR old.recursive_disallow_deletion_count == 0))
            OR (new.recursive_disallow_exclusion_count != old.recursive_disallow_exclusion_count
                AND (new.recursive_disallow_exclusion_count == 0 OR old.recursive_disallow_exclusion_count == 0))
BEGIN
  -- Update the last change date
  UPDATE reconciliation_table
     SET last_change = PROPAGATION_DATE_CHANGED(CASE WHEN kind = 
 THEN 2 ELSE 0 END, fp_id)
   WHERE fp_id = new.id;
CREATE TRIGGER "last_change/fs_snapshot/recursive_evictable_change"
  AFTER UPDATE OF recursive_evictable_count ON fs_snapshot
          WHEN new.recursive_evictable_count != old.recursive_evictable_count
           AND (new.recursive_evictable_count == 0 OR old.recursive_evictable_count == 0)
BEGIN
  -- Update the last change date
  UPDATE reconciliation_table
     SET last_change = PROPAGATION_DATE_CHANGED(kind = 
, fs_id)
   WHERE fs_id = new.id;
CREATE TRIGGER "last_change/fs_snapshot/recursive_dataless_change"
  AFTER UPDATE OF recursive_dataless_count ON fs_snapshot
          WHEN new.recursive_dataless_count != old.recursive_dataless_count
           AND (new.recursive_dataless_count == 0 OR old.recursive_dataless_count == 0)
BEGIN
  -- Update the last change date
  UPDATE reconciliation_table
     SET last_change = PROPAGATION_DATE_CHANGED(kind = 
CREATE TRIGGER "last_change/reconciliation_table/propagation_changes"
 AFTER UPDATE OF fs_deletion_status, fs_deletion_status, fs_scheduling_state,
                 fp_updated_fields, fp_deletion_status, fp_content_status, fp_scheduling_state
              ON reconciliation_table
  WHEN new.fs_updated_fields != old.fs_updated_fields
       OR new.fs_deletion_status & 1 != old.fs_deletion_status & 1
       OR new.fp_updated_fields != old.fp_updated_fields
       OR new.fp_deletion_status & 1 != old.fp_deletion_status & 1
       OR new.fp_content_status != old.fp_content_status
       OR new.fs_scheduling_state != old.fs_scheduling_state
       OR new.fp_scheduling_state != old.fp_scheduling_state
BEGIN
  -- Update the last change date
  UPDATE reconciliation_table
     SET last_change = PROPAGATION_DATE_CHANGED(0, fs_id)
   WHERE rowID = new.rowID;
DROP TRIGGER IF EXISTS "last_change/reconciliation_table/creation"
DROP TRIGGER IF EXISTS "last_change/fp_snapshot/recursive_capabilities_change"
DROP TRIGGER IF EXISTS "last_change/fp_snapshot/decoration_change"
DROP TRIGGER IF EXISTS "last_change/fs_snapshot/recursive_evictable_change"
DROP TRIGGER IF EXISTS "last_change/fs_snapshot/recursive_dataless_change"
DROP TRIGGER IF EXISTS "last_change/reconciliation_table/propagation_changes"
CREATE INDEX IF NOT EXISTS recursive_deletion_root ON reconciliation_table(fs_deletion_status)
 WHERE fs_deletion_status & 
ALTER TABLE reconciliation_table ADD COLUMN fs_captured_content_length INT NULL;
ALTER TABLE reconciliation_table ADD COLUMN fs_captured_content_location INT NULL;
ALTER TABLE reconciliation_table ADD COLUMN fp_captured_content_length INT NULL;
ALTER TABLE reconciliation_table ADD COLUMN fp_captured_content_location INT NULL;
DROP TRIGGER IF EXISTS "materialized_set/fs_item_jobs/materialization"
CREATE INDEX pending_set_probe_fp ON reconciliation_table(scheduling_timestamp, fp_scheduling_state, fp_updated_fields,
    fp_deletion_status, fs_materialization_status, fs_id, fp_scheduling_state_conditions) WHERE
    ((fp_scheduling_state IN 
      fp_updated_fields != 0 OR
      fp_deletion_status != 0) OR
      fs_materialization_status == 
CREATE INDEX pending_set_probe_fs ON reconciliation_table(scheduling_timestamp, fs_scheduling_state, fs_updated_fields,
    fs_deletion_status, fp_id) WHERE
    fp_id IS NOT NULL AND
    (fs_scheduling_state IN 
     fs_updated_fields != 0 OR
     fs_deletion_status != 0)
CREATE INDEX reconciliation_global_progress_materialize ON reconciliation_table(fs_materialization_status, kind)
CREATE INDEX reconciliation_global_progress_fp ON reconciliation_table(kind, fp_id)
       WHERE fp_updated_fields & 
 AND fp_content_status IN 
CREATE INDEX reconciliation_global_progress_fs ON reconciliation_table(kind, fs_id)
       WHERE fs_updated_fields & 
DROP INDEX reconciliation_global_progress_fp
DROP INDEX reconciliation_global_progress_fs
DROP VIEW active_fp_jobs_view
DROP VIEW active_fs_jobs_view
CREATE INDEX jobs_global_progress_fp ON jobs(side, source_item_id, type, diffs)
       WHERE side == 
CREATE INDEX reconciliation_global_progress_fp
          ON reconciliation_table(kind, fp_id, fp_updated_fields, fp_content_status, fs_materialization_status, fs_id,
                                  fp_scheduling_state_conditions)
       WHERE kind == 
CREATE INDEX reconciliation_global_progress_fs ON reconciliation_table(kind, fs_id, fs_updated_fields)
       WHERE kind IN (
CREATE VIEW active_fp_jobs_view (metadata_size)
  AS SELECT CASE fp.metadata_size
       WHEN 0 THEN 1
       ELSE fp.metadata_size
        END metadata_size
       FROM reconciliation_table AS rt
 INNER JOIN fp_snapshot AS fp ON (rt.fp_id = fp.id)
      WHERE ((rt.fp_updated_fields & 
              AND  rt.fp_content_status != 
         OR rt.fs_materialization_status == 
        AND rt.kind == 
    AND NOT (fs_id IS NULL AND fp_scheduling_state_conditions == 
  UNION ALL
     SELECT CASE fp.metadata_size
       WHEN 0 THEN 1
       ELSE fp.metadata_size
        END metadata_size
       FROM jobs
 INNER JOIN fp_snapshot AS fp ON (jobs.source_item_id = fp.id)
 INNER JOIN reconciliation_table AS rt ON (jobs.source_item_id = rt.fp_id)
      WHERE jobs.side == 
        AND ((jobs.type == 
             AND jobs.diffs & 
             AND fp.metadata_kind IN (
         OR (jobs.type == 
        AND rt.fp_content_status == 
CREATE VIEW active_fs_jobs_view (metadata_size)
  AS SELECT CASE fs.metadata_size
       WHEN 0 THEN 1
       ELSE fs.metadata_size
        END metadata_size
       FROM reconciliation_table AS rt
 INNER JOIN fs_snapshot AS fs ON (rt.fs_id = fs.id)
      WHERE rt.fs_updated_fields & 
        AND rt.kind IN (
        AND fs.metadata_is_ignoreroot = 0
  UNION ALL
     SELECT CASE fs.metadata_size
       WHEN 0 THEN 1
       ELSE fs.metadata_size
        END metadata_size
       FROM jobs
 INNER JOIN fs_snapshot AS fs ON (jobs.source_item_id = fs.id)
      WHERE ((jobs.type == 
         OR jobs.type == 
        AND jobs.side == 
        AND fs.metadata_kind IN (
        AND fs.metadata_is_ignoreroot = 0
CREATE TRIGGER "materialized_set/tombstone_table/remove_entry"
 AFTER DELETE ON tombstone_table
  WHEN old.enumeration_anchor IS NOT NULL
BEGIN
  UPDATE reconciliation_table
     SET enumeration_anchor = MAX(IFNULL(enumeration_anchor, 0), old.enumeration_anchor)
   WHERE fp_id = old.fp_id;
CREATE TRIGGER "materialized_set/fs_snapshot/delete"
  AFTER DELETE ON fs_snapshot
  WHEN old.metadata_is_dataless = 0
BEGIN
  -- Mark the item as updated in the reconciliation table if present
  UPDATE reconciliation_table
     SET enumeration_anchor = NEXT_ANCHOR((SELECT anchor FROM enumeration_view))
   WHERE fs_id = old.id AND fp_id IS NOT NULL;
CREATE TRIGGER "materialized_set/fs_snapshot/insert"
 AFTER INSERT ON fs_snapshot
  WHEN new.metadata_is_dataless = 0
BEGIN
  -- Mark the item as updated in the reconciliation table if present
  UPDATE reconciliation_table
     SET enumeration_anchor = NEXT_ANCHOR((SELECT anchor FROM enumeration_view))
   WHERE fs_id = new.id AND fp_id IS NOT NULL;
CREATE TRIGGER "materialized_set/fs_snapshot/metadata_is_dataless"
 AFTER UPDATE OF metadata_is_dataless ON fs_snapshot
  WHEN old.metadata_is_dataless != new.metadata_is_dataless
BEGIN
  -- Mark the item as updated in the reconciliation table if present
  UPDATE reconciliation_table
     SET enumeration_anchor = NEXT_ANCHOR((SELECT anchor FROM enumeration_view))
   WHERE fs_id = new.id AND fp_id IS NOT NULL;
CREATE TRIGGER "materialized_set/tombstone_table/garbage_collect"
 AFTER UPDATE OF enumeration_anchor, last_change ON tombstone_table
  WHEN new.enumeration_anchor IS NULL AND new.last_change IS NULL
BEGIN
  DELETE FROM tombstone_table
   WHERE rowID = new.rowID;
CREATE TRIGGER "materialized_set/reconciliation_table/remove_item_fs_id"
 AFTER DELETE ON reconciliation_table
  WHEN old.fs_id IS NOT NULL
BEGIN
  INSERT INTO tombstone_table (fs_id, fp_id, enumeration_anchor, last_change)
       VALUES (old.fs_id, NULL, NULL, PROPAGATION_DATE_CHANGED(0, NULL));
CREATE TRIGGER "materialized_set/reconciliation_table/remove_item_fp_id"
 AFTER DELETE ON reconciliation_table
  WHEN old.fp_id IS NOT NULL
BEGIN
  -- Add the entry in tombstone table. Propagate the anchor from the reconciliation table
  -- if the item was monitored at the time of removal
  INSERT INTO tombstone_table (fs_id, fp_id, enumeration_anchor, last_change)
       VALUES (NULL, old.fp_id,
               CASE
                   WHEN old.enumeration_anchor IS NULL THEN NULL
                   WHEN EXISTS (SELECT id FROM fs_snapshot WHERE id = old.fs_id AND metadata_is_dataless = 0)
                   THEN NEXT_ANCHOR(MAX((SELECT anchor FROM enumeration_view), old.enumeration_anchor))
                   ELSE old.enumeration_anchor
               END,
               PROPAGATION_DATE_CHANGED(0, NULL));
CREATE TRIGGER "materialized_set/reconciliation_table/unbind_fs_id"
 AFTER UPDATE OF fs_id ON reconciliation_table
  WHEN old.fs_id IS NOT NULL AND (new.fs_id IS NULL OR old.fs_id != new.fs_id)
BEGIN
  -- Add the entry in tombstone table. Propagate the anchor from the reconciliation table
  -- if the item was monitored at the time of removal
  INSERT INTO tombstone_table (fs_id, fp_id, enumeration_anchor, last_change)
       VALUES (old.fs_id, NULL, NULL, PROPAGATION_DATE_CHANGED(0, NULL));
  -- Update the anchor for the corresponding item
  UPDATE reconciliation_table
     SET enumeration_anchor = NEXT_ANCHOR((SELECT anchor FROM enumeration_view))
   WHERE rowID = old.rowID AND old.enumeration_anchor IS NOT NULL;
CREATE TRIGGER "materialized_set/reconciliation_table/unbind_fp_id"
 AFTER UPDATE OF fp_id ON reconciliation_table
  WHEN old.fp_id IS NOT NULL AND (new.fp_id IS NULL OR old.fp_id != new.fp_id)
BEGIN
  -- Add the entry in tombstone table. Propagate the anchor from the reconciliation table
  -- if the item was monitored at the time of removal
  INSERT INTO tombstone_table (fs_id, fp_id, enumeration_anchor, last_change)
       VALUES (NULL, old.fp_id,
               CASE
                   WHEN old.enumeration_anchor IS NULL THEN NULL
                   WHEN EXISTS (SELECT id FROM fs_snapshot WHERE id = old.fs_id AND metadata_is_dataless = 0)
                   THEN NEXT_ANCHOR((SELECT anchor FROM enumeration_view))
                   ELSE old.enumeration_anchor
               END,
               PROPAGATION_DATE_CHANGED(0, NULL));
  -- Clear the enumeration anchor in the reconciliation table
  -- Must be executed after the previous update to preserve the previous anchor
  -- in the computation of the enumeration_view
  UPDATE reconciliation_table
     SET enumeration_anchor = NULL
   WHERE rowID = old.rowID;
CREATE TRIGGER "materialized_set/reconciliation_table/bind_fs_id"
 AFTER UPDATE OF fs_id ON reconciliation_table
  WHEN new.fs_id IS NOT NULL
BEGIN
  -- Mark the item has updated if we lost the binding and were previously dataless
  UPDATE reconciliation_table
     SET enumeration_anchor = NEXT_ANCHOR((SELECT anchor FROM enumeration_view))
   WHERE rowID = new.rowID
     AND EXISTS (SELECT id FROM fs_snapshot WHERE id = new.fs_id AND metadata_is_dataless = 0);
  -- Delete the entry from the tombstone table if the fs_id is present
  -- in the reconciliation table. If the the item was actually present
  -- in the tombstone, a followup trigger will be called to move
  -- the anchor from the tombstone table to the reconciliation table
  -- Must be executed after the previous update to preserve the previous anchor
  -- in the computation of the enumeration_view
  DELETE FROM tombstone_table
   WHERE fs_id = new.fs_id;
CREATE TRIGGER "materialized_set/reconciliation_table/bind_fp_id"
 AFTER UPDATE OF fp_id ON reconciliation_table
  WHEN new.fp_id IS NOT NULL
BEGIN
  -- Mark the item has updated if we lost the binding and were previously dataless
  UPDATE reconciliation_table
     SET enumeration_anchor = NEXT_ANCHOR((SELECT anchor FROM enumeration_view))
   WHERE rowID = new.rowID
     AND EXISTS (SELECT id FROM fs_snapshot WHERE id = new.fs_id AND metadata_is_dataless = 0);
  -- Delete the entry from the tombstone table if the fp_id is present
  -- in the reconciliation table. If the the item was actually present
  -- in the tombstone, a followup trigger will be called to move
  -- the anchor from the tombstone table to the reconciliation table
  -- Must be executed after the previous update to preserve the previous anchor
  -- in the computation of the enumeration_view
  DELETE FROM tombstone_table
   WHERE fp_id = new.fp_id;
CREATE TRIGGER "materialized_set/reconciliation_table/insert"
 AFTER INSERT ON reconciliation_table
BEGIN
  -- Mark the item has updated if we are interested in its children, otherwise
  UPDATE reconciliation_table
     SET enumeration_anchor = NEXT_ANCHOR((SELECT anchor FROM enumeration_view))
   WHERE rowID = new.rowID
     AND EXISTS (SELECT id FROM fs_snapshot WHERE id = new.fs_id AND metadata_is_dataless = 0);
  -- Delete the entry from the tombstone table if the fp_id is present
  -- in the reconciliation table. If the the item was actually present
  -- in the tombstone, a followup trigger will be called to move
  -- the anchor from the tombstone table to the reconciliation table
  -- Must be executed after the previous update to preserve the previous anchor
  -- in the computation of the enumeration_view
  DELETE FROM tombstone_table
   WHERE (fp_id = new.fp_id OR fs_id = new.fs_id);
CREATE VIEW enumeration_view (anchor)
    AS SELECT IFNULL(MAX(anchor), 0)
         FROM (SELECT MAX(enumeration_anchor) as anchor
                 FROM reconciliation_table
                UNION ALL
               SELECT MAX(enumeration_anchor) as anchor
                 FROM tombstone_table)
DROP VIEW IF EXISTS enumeration_view
DROP TRIGGER IF EXISTS "materialized_set/tombstone_table/remove_entry"
DROP TRIGGER IF EXISTS "materialized_set/reconciliation_table/remove_item"
DROP TRIGGER IF EXISTS "materialized_set/reconciliation_table/remove_fp_id"
DROP TRIGGER IF EXISTS "materialized_set/fs_snapshot/delete"
DROP TRIGGER IF EXISTS "materialized_set/fs_snapshot/insert"
DROP TRIGGER IF EXISTS "materialized_set/fs_snapshot/metadata_is_dataless"
DROP TRIGGER IF EXISTS "materialized_set/reconciliation_table/bind_fs_id"
DROP TRIGGER IF EXISTS "materialized_set/reconciliation_table/bind_fp_id"
DROP TRIGGER IF EXISTS "materialized_set/reconciliation_table/insert"
CREATE INDEX reconciliation_table__locked_items
          ON reconciliation_table(fs_id, item_is_flocked != 0)
DROP INDEX reconciliation_item_is_flocked__fs_id
CREATE INDEX reconciliation_pending_set
          ON reconciliation_table(fp_id, fs_scheduling_state, fp_scheduling_state,
                                  scheduling_timestamp ASC, fp_updated_fields, fs_updated_fields,
                                  fp_deletion_status, fs_deletion_status, fs_id,
                                  fp_scheduling_state_conditions)
CREATE INDEX tombstone_table_asc ON tombstone_table(last_change ASC, fs_id, fp_id)
CREATE INDEX tombstone_table_anchor ON tombstone_table(enumeration_anchor)
ALTER TABLE tombstone_table_copy RENAME TO tombstone_table
DROP TABLE tombstone_table
INSERT INTO tombstone_table_copy (fs_id, fp_id, enumeration_anchor, last_change)
     SELECT NULL, fp_id, enumeration_anchor, 0
       FROM tombstone_table
CREATE TABLE tombstone_table_copy (
  fs_id 
 NULL UNIQUE,
  fp_id 
 NULL UNIQUE,
  enumeration_anchor INT NULL,
  last_change INT NULL
ALTER TABLE reconciliation_table ADD COLUMN fs_domain_version UNSIGNED INT NOT NULL DEFAULT 0
fs_content_version 
fs_structural_version 
fp_content_version 
fp_structural_version 
fp_structural_parent_id 
 NULL,
fp_structural_filename TEXT NULL
fp_vfs_fileid INT NULL,
fp_vfs_generationid INT NULL,
fp_content_size INT NULL
fs_structural_parent_id 
 NULL,
fs_structural_filename TEXT NULL
fs_vfs_fileid INT NULL,
fs_vfs_generationid INT NULL,
fs_content_size INT NULL
CREATE INDEX reconciliation_item_is_flocked__fs_id ON reconciliation_table(item_is_flocked, fs_id)
CREATE INDEX reconciliation_state_scheduling_ordering
    ON reconciliation_table(fs_scheduling_state,
                            fp_scheduling_state,
                            scheduling_priority DESC,
                            scheduling_timestamp)
CREATE INDEX reconciliation_fs_disk_import_status__fp_id ON reconciliation_table(fs_disk_import_status, fp_id)
CREATE INDEX reconciliation_fs_disk_import_status__fs_id ON reconciliation_table(fs_disk_import_status, fs_id)
CREATE INDEX reconciliation_table_last_change ON reconciliation_table(last_change)
CREATE INDEX reconciliation_table_anchor ON reconciliation_table(enumeration_anchor)
CREATE INDEX reconciliation__fp_scheduling_state__fp_id ON reconciliation_table(fp_scheduling_state, fp_id)
CREATE INDEX reconciliation__fp_scheduling_state__fs_id ON reconciliation_table(fp_scheduling_state, fs_id)
CREATE INDEX reconciliation_fp_scheduling_state ON reconciliation_table(fp_scheduling_state)
CREATE INDEX reconciliation__fs_scheduling_state__fp_id ON reconciliation_table(fs_scheduling_state, fp_id)
CREATE INDEX reconciliation__fs_scheduling_state__fs_id ON reconciliation_table(fs_scheduling_state, fs_id)
CREATE INDEX reconciliation_fs_scheduling_state ON reconciliation_table(fs_scheduling_state)
CREATE TABLE tombstone_table (
  fp_id BLOB PRIMARY KEY,
  enumeration_anchor INT NOT NULL
CREATE TABLE reconciliation_table (
  fs_id 
 NULL UNIQUE,
  fs_deletion_status TINYINT NOT NULL,
  fs_updated_fields SMALLINT NOT NULL,
  fs_materialization_status TINYINT NULL,
  fs_content_status TINYINT NOT NULL,
  fs_was_dataless_before_disk_import BOOL NOT NULL,
  fs_disk_import_status TINYINT NULL,
  fs_captured_content_file_id UNSIGNED INT NULL,
  fs_captured_content_test_content BLOB NULL,
  fs_scheduling_state TINYINT NOT NULL,
  fs_scheduling_state_conditions SMALLINT NOT NULL,
  fp_id 
 NULL UNIQUE,
  fp_deletion_status TINYINT NOT NULL,
  fp_updated_fields SMALLINT NOT NULL,
  fp_materialization_status TINYINT NULL,
  fp_content_status TINYINT NOT NULL,
  fp_was_dataless_before_disk_import BOOL NOT NULL,
  fp_disk_import_status TINYINT NULL,
  fp_captured_content_file_id UNSIGNED INT NULL,
  fp_captured_content_test_content BLOB NULL,
  fp_scheduling_state TINYINT NOT NULL,
  fp_scheduling_state_conditions SMALLINT NOT NULL,
  kind TINYINT,
  colliding_id BLOB NULL,
  scheduling_priority UNSIGNED INTEGER NOT NULL,
  scheduling_timestamp INTEGER NOT NULL,
  item_is_flocked BOOL,
  -- In order to be able to enumerate changes in the list of items that are
  -- materialized on disk, we track the items from the reconciliation table
  -- for which the children status (or has been) of interest.
  --
  -- In order to allow the change-based enumeration, we use an auto-incremented
  -- integer and assign its value to items for which the children monitoring
  -- has changed. This is done in two places:
  --  - in reconciliation_table for items that are still live and reconciled
  --  - in the new tombstone_table for delete items
  enumeration_anchor INT NULL,
  -- Update the enumeration on an item by keeping track of the last known
  -- change for that item on disk or on the FP
  last_change INT NULL
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/fssync/libfssync/interfaces/persistence/types/ItemReconciliation.swift
already fetching content on the other side
item is already being propagated from the other side
item is already being propagated
kind not defined in 
no id defined in 
SELECT fs_id
  FROM reconciliation_table
 WHERE item_is_flocked != 0
_snapshot AS snap
 INNER JOIN reconciliation_table AS rt ON rt.
   AND +snap.id != snap.parent_id
AND +snap.filename = 
  FROM reconciliation_table AS parent_rt
 INNER JOIN 
_snapshot AS snap ON snap.parent_id = parent_rt.
 INNER JOIN reconciliation_table AS rt ON rt.
_id = snap.id
 WHERE parent_rt.
_id = snap.parent_id
 WHERE snap.id = 
 AND +snap.parent_id != snap.id
   AND 
WITH RECURSIVE parent_dirs(id, parent_id) AS (
  SELECT snap.id, snap.parent_id
    FROM 
_snapshot AS snap
   WHERE snap.id = 
  UNION ALL
  SELECT snap.id, snap.parent_id
    FROM 
_snapshot AS snap
   INNER JOIN parent_dirs AS pd ON pd.parent_id = snap.id
   WHERE snap.id != pd.id
   LIMIT 128
SELECT rt.rowid, 
  FROM parent_dirs AS pd
 INNER JOIN reconciliation_table AS rt ON pd.id == rt.
 WITH RECURSIVE parent_dirs(id, parent_id) AS (
   SELECT snap.id, snap.parent_id
     FROM 
_snapshot AS snap
    INNER JOIN reconciliation_table AS rt ON rt.
_id = snap.id
    WHERE rt.
   UNION ALL
   SELECT snap.id, snap.parent_id
     FROM 
_snapshot AS snap
    INNER JOIN parent_dirs AS pd ON pd.parent_id = snap.id
    WHERE snap.id != pd.id
    LIMIT 128
 SELECT rt.rowid, 
   FROM parent_dirs AS pd
  INNER JOIN reconciliation_table AS rt ON rt.
_id = pd.id
  WHERE 
 SELECT rt.rowid, 
   FROM reconciliation_table AS original_rt
  INNER JOIN 
_snapshot AS original_snap ON (original_snap.id = original_rt.
_id)
  INNER JOIN reconciliation_table AS parent_rt ON parent_rt.
_id = original_snap.parent_id
  INNER JOIN 
_snapshot AS sibling_snap ON (
               sibling_snap.parent_id = parent_rt.
               AND sibling_snap.filename = original_snap.filename 
               AND +sibling_snap.id != 
  INNER JOIN reconciliation_table AS rt ON rt.
_id = sibling_snap.id
  WHERE original_rt.
SQLDB: Fetch pending indexing deletions
SELECT fs_id, fp_id, last_change
  FROM tombstone_table
 WHERE last_change > 
 ORDER BY last_change ASC
 LIMIT 
UPDATE tombstone_table
   SET last_change = NULL
 WHERE last_change <= 
SQLDB: Decoration Query
SQLDB: Decoration Decoding
SELECT fs.metadata_is_dataless, fs.recursive_dataless_count, fs.recursive_evictable_count,
       fs.vfs_fileid, fs.vfs_generationid, fs.metadata_size, fs.metadata_is_package, fs.metadata_kind,
       fs.parent_id, fs.filename,
       fp.metadata_is_pinned, fp.metadata_is_in_pinned_folder,
       fp.content_version, fp.structural_version,
       fp.recursive_disallow_deletion_count, fp.recursive_disallow_exclusion_count,
       
  FROM reconciliation_table AS rt
  LEFT JOIN fs_snapshot AS fs ON (fs.id = rt.fs_id)
  LEFT JOIN fp_snapshot AS fp ON (fp.id = rt.fp_id)
 WHERE 
SQLDB: Fetch pending indexing items
       fs.recursive_dataless_count, fs.recursive_evictable_count,
       fp.metadata_is_pinned, fp.metadata_is_in_pinned_folder,
       fp.content_version, fp.structural_version,
       fp.recursive_disallow_deletion_count, fp.recursive_disallow_exclusion_count,
       rt.last_change,
       
  FROM reconciliation_table AS rt
  LEFT JOIN fs_snapshot AS fs ON (rt.fs_id = fs.id)
  LEFT JOIN fp_snapshot AS fp ON (rt.fp_id = fp.id)
 WHERE rt.last_change > 
 ORDER BY rt.last_change ASC
 LIMIT 
SELECT COUNT(fp.metadata_size), SUM(MAX(1, fp.metadata_size))
  FROM jobs
 INNER JOIN fp_snapshot AS fp ON (fp.id = jobs.source_item_id)
 INNER JOIN reconciliation_table AS rt ON (rt.fp_id = jobs.source_item_id)
 WHERE jobs.side = 
   AND ((jobs.type = 
         AND jobs.diffs & 
         AND fp.metadata_kind IN 
        OR (jobs.type = 
            AND fp.metadata_kind IN (
   AND rt.fp_content_status = 
SELECT COUNT(fp.metadata_size), SUM(MAX(1, fp.metadata_size))
  FROM reconciliation_table AS rt
 INNER JOIN fp_snapshot AS fp ON (fp.id = rt.fp_id)
 WHERE rt.fs_materialization_status == 
   AND rt.kind = 
   AND +rt.fp_updated_fields & 
SELECT COUNT(fp.metadata_size), SUM(MAX(1, fp.metadata_size))
  FROM reconciliation_table AS rt
 INNER JOIN fp_snapshot AS fp ON (fp.id = rt.fp_id)
 WHERE rt.fp_updated_fields & 
   AND rt.fp_content_status IN 
   AND NOT (fs_id IS NULL AND fp_scheduling_state_conditions == 
SELECT COUNT(fs.metadata_size), SUM(MAX(1, fs.metadata_size))
  FROM jobs
 INNER JOIN reconciliation_table AS rt ON (fs.id = rt.fs_id)
 INNER JOIN fs_snapshot AS fs ON (fs.id = jobs.source_item_id)
 WHERE ((jobs.type == 
        OR jobs.type == 
   AND jobs.side == 
   AND +fs.metadata_kind IN 
   AND rt.fs_deletion_status & 
SELECT COUNT(fs.metadata_size), SUM(MAX(1, fs.metadata_size))
  FROM reconciliation_table AS rt
 INNER JOIN fs_snapshot AS fs ON (fs.id = rt.fs_id)
 WHERE rt.kind IN 
   AND rt.fs_updated_fields & 
SELECT rowID, parent_rt.fs_id
  FROM reconciliation_table AS parent_rt
 WHERE parent_rt.fs_id IS NOT NULL
   AND parent_rt.fs_deletion_status & 
 = 0
   AND EXISTS (SELECT snap.id
                 FROM fs_snapshot AS snap
           INNER JOIN reconciliation_table AS child_rt ON (child_rt.fs_id = snap.id)
                WHERE snap.parent_id = parent_rt.fs_id
                  AND snap.parent_id != snap.id
                  AND child_rt.fs_deletion_status & 
SELECT fs_id
  FROM reconciliation_table
 WHERE fs_scheduling_state =  
   AND fs_scheduling_state_conditions & 
   AND fs_id IS NOT NULL
 ORDER BY scheduling_priority DESC, scheduling_timestamp
 LIMIT 100
  fp_scheduling_state != 
  OR (fp_scheduling_state_conditions & 
SELECT rowID
  FROM reconciliation_table
 WHERE fp_scheduling_state IN 
(fp_scheduling_state_conditions & 
SELECT rowID
  FROM reconciliation_table
 WHERE item_is_flocked != 0
 LIMIT 1
  fs_scheduling_state != 
  OR (fs_scheduling_state_conditions & 
SELECT rowID
  FROM reconciliation_table
 WHERE fs_scheduling_state IN 
(fs_scheduling_state_conditions & 
  FROM reconciliation_table
 WHERE (fs_scheduling_state = 
        AND fs_scheduling_state_conditions == 
    OR (fp_scheduling_state = 
        AND fp_scheduling_state_conditions == 
SELECT fs_id
  FROM reconciliation_table
 WHERE fs_id IS NOT NULL
   AND fp_id IS NOT NULL
   AND fp_scheduling_state = 
   AND fp_scheduling_state_conditions & 
key value 
  FROM reconciliation_table
 WHERE fs_scheduling_state = 
   AND fp_scheduling_state NOT IN 
   AND rowID NOT IN 
 ORDER BY scheduling_priority DESC, scheduling_timestamp
 LIMIT 
  FROM reconciliation_table
 WHERE fp_scheduling_state = 
   AND fs_scheduling_state NOT IN (
                                   
 ORDER BY scheduling_priority DESC, scheduling_timestamp
 LIMIT 
SELECT rowID
  FROM reconciliation_table
 WHERE fs_id IS NOT NULL AND fp_id IS NOT NULL AND fs_deletion_status & 
SQLDB: Scan pending reimport items
  FROM reconciliation_table
 WHERE fs_disk_import_status = 
SELECT fs_id
  FROM reconciliation_table
 WHERE fs_disk_import_status = 
SELECT fs_id
  FROM reconciliation_table
 WHERE fs_disk_import_status IN 
 wasDataless 
SELECT fs_id, fs_was_dataless_before_disk_import
  FROM reconciliation_table
 WHERE fs_disk_import_status = 
SQLDB: Scan ignored items
  FROM reconciliation_table
  WHERE fs_deletion_status & 
 ORDER BY rowID ASC
 LIMIT 
Output is limited to 
 rows, dump may be incomplete...
FROM reconciliation_table
ORDER BY
CASE
WHEN fs_id IS NULL AND fp_scheduling_state  == 
 THEN 1
WHEN fs_scheduling_state == 
 AND
     fp_scheduling_state  == 
 THEN 2
ELSE 0
SQLDB: reconciliation delete
  reconciliation delete: %{public}ld
DELETE FROM reconciliation_table
 WHERE rowID = 
SELECT fs_captured_content_file_id, fp_captured_content_file_id
  FROM reconciliation_table
 WHERE rowID = 
SQLDB: reconciliation insert
  reconciliation insert: %{public}s
INSERT INTO reconciliation_table (
SQLDB: fetch reconciliation FP id
SELECT fp_id
  FROM reconciliation_table
 WHERE fs_id = 
SQLDB: fetch reconciliation FS id
SELECT fs_id
  FROM reconciliation_table
 WHERE fp_id = 
libfssync/SQLReconciliationTable.swift
cannot reconcile item: 
SELECT fp_id, last_change
  FROM reconciliation_table INDEXED BY reconciliation_pending_set
 WHERE fp_id IS NOT NULL
   AND scheduling_timestamp < 
   AND ((fs_scheduling_state IN 
         fs_updated_fields != 0 OR
         fs_deletion_status != 0) OR
         fs_materialization_status == 
SELECT fp_id, last_change
  FROM reconciliation_table INDEXED BY reconciliation_pending_set
 WHERE scheduling_timestamp < 
   AND ((fp_scheduling_state IN 
         fp_updated_fields != 0 OR
         fp_deletion_status != 0))
   AND NOT (fs_id IS NULL AND fp_scheduling_state_conditions == 
SQLDB: Scan decorated
       fs.recursive_dataless_count, fs.recursive_evictable_count,
       fp.metadata_is_pinned, fp.metadata_is_in_pinned_folder,
       fp.content_version, fp.structural_version,
       fp.recursive_disallow_deletion_count, fp.recursive_disallow_exclusion_count,
       
  FROM fs_snapshot AS fs
  LEFT JOIN reconciliation_table AS rt ON (rt.fs_id = fs.id)
  LEFT JOIN fp_snapshot AS fp ON (rt.fp_id = fp.id)
 WHERE fs.parent_id = 
 AND fs.id != fs.parent_id
 ORDER BY fs.rowID ASC
 LIMIT 
SELECT fp_id, is_watched, enumeration_anchor, parent_id, filename, kind
  FROM (SELECT fp_id AS fp_id,
               fs_snapshot.metadata_is_dataless = 0 AS is_watched,
               enumeration_anchor AS enumeration_anchor,
               fp_snapshot.parent_id AS parent_id,
               fp_snapshot.filename AS filename,
               fp_snapshot.metadata_kind AS kind
          FROM reconciliation_table
         INNER JOIN fp_snapshot ON fp_id = fp_snapshot.id
          LEFT JOIN fs_snapshot ON fs_id = fs_snapshot.id
         WHERE fp_snapshot.parent_id IS NOT NULL
     UNION ALL
       SELECT fp_id AS fp_id,
              0 AS is_watched,
              enumeration_anchor AS enumeration_anchor,
              NULL AS parent_id,
              NULL AS filename,
              NULL AS kind
         FROM tombstone_table)
    WHERE enumeration_anchor > 
 ORDER BY enumeration_anchor
 LIMIT 
UPDATE tombstone_table
   SET enumeration_anchor = NULL
 WHERE enumeration_anchor < 
captured_content
bouncing_context
source_snapshot_version
Unhandled job type
libfssync/FileTree.swift
_TtC9libfssync12Continuation
_TtC9libfssync19RequestContinuation
_TtC9libfssync18FPFSGlobalProgress
proxies
activeCounters
doneCounters
noActivity
publishedProgress
Unpublishing global progress %s
Publishing global progress %s for download
publishProgress(completed:total:)
Publishing global progress %s for upload
updateSchedulingState(_:)
pausing failed: %@
received resume request on progress
received paused request on progress
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/fssync/fpfs/FPFSGlobalProgress.swift
parentEnumerated
permanentThrottling
streamCalmsDown
moveOutCompleted
safelyMaterialized
setEvictability
recursiveDeletionBackOff
childrenEviction
childrenDeletion
childrenCreation
parentCreation
_TtC9libfssync17FPSnapshotChecker
reconciliationForDomainID
filesCheckedDuringFPSnapshotEnumeration
fetchItem(with:inDomain:)
Error fetching the item in the FPSnapshot: %{public}@
Error fetching the item in the reconciliation table: %{public}@
_TtC9libfssync14FPFSSyncEngine
uploadProgress
downloadProgress
waitingItemsWatchingQueue
waitingItemsSource
engineUUID
normalizeError(_:synchronous:completionHandler:)
activate()
Publishing at url %s progress %@
make sure we get idle stream notification
notify scheduler we are ready
suspending the scheduler
changing scheduling state to %s
setFileTreeHandlers()
processPendingStreamResetOrIdle()
  aggregate incoming FP tree changes
  aggregate incoming FS tree changes
: waiting-items-watching
vfsItemFromURL(_:skipResetingItems:pkgItemsLookupPolicy:options:)
resolving URL for %s for %s
create fault at %s for %s
_TtC9libfssyncP33_695A112A250415316549FF403B18C66413DummyObserver
_TtC9libfssyncP33_695A112A250415316549FF403B18C66416LifetimeExtender
Ti,N,R,VrequestEffectivePID
_TtC9libfssync11FPFSIndexer
@36@0:8@16@24B32
enumerator
lastIndexedAnchor
spotlightIndexer
learnNeedsAuthenticationFromBatchError
v12@?0B8
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/fssync/fpfs/enumerators/ChangeEnumerator.swift
  pushing batch: updating=%s, deleting=%s hasMore=%{bool}d
  batch indexation succeeded for anchor %s
  indexing failed: %@
libfssync.FPFSIndexer
init(with:domain:enabled:)
  current anchor is unknown, fetching from spotlight
enumerateChanges(fromAnchor:suggestedBatchSize:reply:)
  indexing from %s
cannot decorate item: %@
Decoration
Type identifier resolution
libfssync/VFSFileTree.swift
  enumeration error: %@
  restarting indexing from scratch
TQ,N
FPSpotlightIndexerDelegate
v24@0:8@"FPSpotlightIndexer"16
B24@0:8@16
creation on both sides is an impossible state
_TtC9libfssync13ReadOnlyWharf
libfssync/ReadOnlyWharf.swift
fpck should not use the wharf
itemID
snapshotVersion
targetFilename
bouncingContext
baseVersion
parentID
no requested state
otherCollidingItemID
otherCollidingFilename
otherCollidingParentID
DeviceClassNumber
fetch metadata for pending event: %s, reason: %s
fileTree
canSetEvictability
libfssync/Snapshot.swift
order
updateEpoch
libfssync/Schedulable.swift
_TtC9libfssync19FPFSSQLBackupEngine
@32@0:8@16@24
outputUserURL
destinationDirectoryURL
backupManifestURL
~/Library/Application Support/FileProvider does not exist. No need to back up.
backup_manifest.db
Failed to remove directory %s: %@
libfssync.FPFSSQLBackupEngine
Unable to create destination directory %s: %@
Calling completion handler with %s
Unable to delete existing destination directory at %s: %@
Library/Mobile Documents/
Library/CloudStorage/
Failed to get contents of %s: %@
Could not get canonical path for %s
_NSURLGenerationCountKey
Failed to get enumerator for %s
Failed to fetch resource values for %s: %@
Failed to get canonical path for %s
Failed to get the inode for %s
Failed to get gen count for %s
Failed to get is directory for %s
targetItem
capturedContent
sourceID
targetID
collect-captured-content
cancel-fetch-content
sync anchor expired
fetch-event-stream
asking to enumerate folder before selection for import
fetch-children-metadata
resnapshot-children
unfault-directory-in-tree
fault-directory-in-tree
delete-rejected-in-tree
mark-parent-deleted
delete-folder-if-empty
provideWithExistingItem(for:db:result:completion:)
capturedContent item 
handle(reply:strictVersioning:itemUnchanged:error:lastKnownVersion:request:db:result:completion:)
_TtC9libfssync17FPDNetworkMonitor
pathmon
Network path update %s
 error:<see throttling>
not supported on FP
item does not exist anymore
item is not ignored anymore
not ready while job on continuation
materialize-ignored-item
item not needed anymore
of priority 
requestCompleted(isIgnored:db:)
materialize-parent-hierarchy
_TtC9libfssync20FPFSSQLRestoreEngine
v24@0:8@?16
userURL
fpDatabaseURLs
_TtC9libfssync31RestoreUpgradeSchemaVFSFileTree
_TtC9libfssync30RestoreUpgradeSchemaFPFileTree
libfssync.FPFSSQLRestoreEngine
Failed to populate the backup manifest %s with new columns: %@
Failed to create indexes on %s: %@
Calling completion handler with success.
Creating indexes
No file at %s, so no need to patch.
Failed to open database at %s: %@
Failed to disable foreign keys: %@
Failed to patch the jobs table: %@
Failed to patch the fs_item_jobs table: %@
Failed to patch the fs_throttle table: %@
Failed to patch the reconciliation_table table: %@
Failed to patch the background_downloader table: %@
Failed to patch the fs_snapshot table: %@
Couldn't flush database %s: %@
Patching database at %s
B16@?0@"PQLConnection"8
UPDATE fs_snapshot
SET id = 
vfs_generationid = 
SELECT rowid, id, parent_id, vfs_fileid, vfs_generationid, structural_version
FROM fs_snapshot
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/fssync/libfssync/implementations/file-system/persistence/Prequelite+FSSyncAdditions.swift
UPDATE background_downloader
SET id = 
SELECT rowid, id
FROM background_downloader
UPDATE reconciliation_table
SET fs_id = 
fs_structural_version = 
SELECT rowid, fs_id, fs_version, fs_structural_version
FROM reconciliation_table
UPDATE fs_throttle
SET item_id = 
SELECT rowid, item_id
FROM fs_throttle
UPDATE fs_item_jobs
SET item_id = 
SELECT rowid, item_id
FROM fs_item_jobs
UPDATE jobs
SET other_id = 
other_structural_version = 
other_version = 
SELECT rowid, other_id, other_structural_version, other_version
FROM jobs
WHERE side == 
libfssync/Prequelite+FSSyncAdditions.swift
unexpected binding
PRAGMA foreign_keys = ON
UPDATE jobs
SET item_id = 
state_parent_id = 
base_version = 
base_structural_version = 
SELECT rowid, item_id, state_parent_id, base_version, base_structural_version, bouncing_context, captured_content
FROM jobs
WHERE side == 
PRAGMA foreign_keys = OFF
/tmp/should_not_be_used/
libfssync/FPFSSQLRestoreEngine.swift
Failed to create the SQLDatabase: 
Library/Application Support/FileProvider
Failed to enumerate %s: %@
  Removing all conflict losers for item %s ...
 in 
  Updating conflicting losers with versions: %s for item %s ...
populate-conflicts
rootURL
disable-sync-root
_TtC9libfssync11VFSFileTree
v52@0:8@16@24Q32Q40I48
v32@0:8@16q24
_isCaseSensitive
lookupScope
coordinatorPurposeIdentifer
runningCoordinators
coordinatorsByItemID
operationQueue
queue
fsChangeMonitor
fsChangeSubscription
tombstoneSlayer
flockedDispatchDict
flockedTimerDispatchDict
flockedGroup
_rootURL
_rootURLLock
idLookupCache
_lastFSEventID
_fakeEventSeq
lastFSEventIDShortWaitSubscription
lastFSEventIDLongWaitSubscription
eventAggregator
counters
preventedEvictabilityTable
 droppedEventCount=
  FS: waiting for barrier on %s
 FS: barrier wait completed
marking sync root bit for folder %s
Eviction of %s failed with %@
can't create enumerator at %s
com.apple.fileprovider.before-bounce#P
Can't enumerate: %s: %@
-fail-with-errno-
com.apple.fileprovider.dir#N
FSTree update to new url %s new parent %s
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/fssync/libfssync/implementations/file-system/tree/VFSFileTree.swift
 denying update on busy file %{public}s
Invalid (nil) parent ID
missing beforeBounceFilename when bouncing file 
FS stage creation
Coordination: Acquiring for Creation
coordination on 
FS creation [under coordination]
  Impossible to fetch URL for Item %s, can not update conflict losers for this item...
  Item %s not found, can not update conflict losers for this item...
  Removing %ld conflicts...
  Adding %ld conflicts...
  There are %ld existing conflicts...
  Error when storing conflict loser with version %s: %@
Impossible to fetch URL for Item %s, can not fetch conflict losers for this item...
Item %s not found, can not fetch conflict losers for this item...
  lookup of %s timed out after %f (backoff: %sns)
  lookup of %s timed out after %f (backoff: %sns), item is stale, consider it's dead
close()
cancel()
stopEventAggregation()
starting without a FSEvent ID
starting without a an FSEvent stream UUID
no FSEvent UUID stream for current volume
Unable to retrieve FSEvent stream UUID for device %d
Reset stream
deduplicating FSEvent parent lookup for %s
failed to bump parent mTime %@
If the item is the domain root %s, no need to handle parent mtime
ESTALE: root/trash changed during enumeration.
%llu, %llu,
%llu, %s
FSEvent stream got reason: 
deduplicating FSEvent lookup for %llu at %s
Unable to resolve FSEvent item attributes for event on fileID(%{public}llu)
Ignoring unresolved own-event on fileID(%{public}llu)
Delivering FSEvent notification for change on %s
Ignoring event for item in an ignored folder fileID(%{public}llu)
error when resolving item: %@
Item mismatch when resolving FSEvent: got %s when expecting %s
Dropping fsevent for %{public}llu (event#%llu, flags:%x)
dropping fsevent without file ID (event#%llu, flags:%x)
Failed to identify root of rename event #%llu against package at %s: %@
%s was moved inside package %s
 ignoring event for busy file %{public}s
Handling FSEvent for %{public}s
event at an ignored path
Failed to capture a stable version of item: %{public}s != %{public}s
can't activate subscription on 
starting to observe fsevent on %s (was %s)
droppedEventCount
  FS: barrier observed, waiting for flocks to be released
vfstree
idle stream timeouts: %ldms, long: %ldms
com.apple.fssync.fstree
FSChangeSubscriptionDelegate
v24@0:8@"FSChangeSubscription"16
v52@0:8@"FSChangeSubscription"16@"NSString"24Q32Q40I48
v32@0:8@"FSChangeSubscription"16q24
unspecified reason
adding new subscription
device UUID changed
fsevents ID wrapped
root needs deep scan
dropped historical event
kernel dropped event
  readingOptions=%{public, signpost.telemetry:string1, name=readingOptions,public}s
  enableTelemetry=YES
  state=%{public, signpost.telemetry:string2, name=state,public}s
  providerID=%{public, signpost.telemetry:number1, name=providerID,public}llu
[Error] Interval already ended
  state=%{public, signpost.telemetry:string2, name=state,public}s
  providerID=%{public, signpost.telemetry:number1, name=providerID,public}llu
  size=%{public, signpost.telemetry:number2, name=size,public}ld
_TtC9libfssync13DocumentWharf
label
fsRoot
wharfHandle
deferredWQ
invalidated
activated
requestedXattrs
reporter
document-wharf-resurrect
libfssync/fpfs_open.swift
path should not be nil
i28@?0i8^{dirent=QQSSC[1024c]}12r*20
i16@?0r*8
i20@?0^{fpfs_item_handle=QQII*Q}8B16
i32@?0^{fpfs_item_handle=QQII*Q}8^{fpfs_item_handle=QQII*Q}16q24
i20@?0i8^{dirent=QQSSC[1024c]}12
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/fssync/libfssync/wharf/DocumentWharf.swift
ESTALE: item changed in wharf during wharfUnload.
%u, %u,
%llu, %llu,
%u, %u
Cannot clear deletion directory: %{public}@
Failed to set _kCFURLIsExcludedFromCloudBackupKey on %s
Failed to set _kCFURLIsExcludedFromCloudBackupKey on %s: %@
: wharf-housekeeping
registrationKeys
_debouncedUnregistration
registrationQueue
debounceQueue
debouncePublisher
corrupted table background_downloader: 
SELECT id, state, reason
  FROM background_downloader
com.apple.fileproviderd.background-download
SELECT id
  FROM background_downloader
 WHERE state = 
  finished background download <i:%s>
  throttling background download <i:%s>
DELETE FROM background_downloader
      WHERE id = 
 BRM Materialization failed with %@, falling back to full materialization
SELECT id, extent_location, extent_length
  FROM background_downloader
 WHERE state = 
 AND
       reason != 0
 ORDER BY scheduling_timestamp
CREATE TRIGGER "background_download/purge"
 AFTER UPDATE ON background_downloader
  WHEN new.reason = 0 AND new.state != 
BEGIN
  DELETE FROM background_downloader
   WHERE (id = new.id
      AND extent_location IS old.extent_location
      AND extent_length IS old.extent_length);
CREATE INDEX background_downloader__state__scheduling_timestamp
    ON background_downloader(state, scheduling_timestamp)
ALTER TABLE background_downloader_copy RENAME TO background_downloader
DROP TABLE background_downloader
INSERT INTO background_downloader_copy (id, scheduling_timestamp, state, reason)
    SELECT id, scheduling_timestamp, state, reason
        FROM background_downloader
CREATE TABLE background_downloader_copy (
          id 
 INT NOT NULL,
          extent_location INT DEFAULT NULL,
          extent_length INT DEFAULT NULL,
          scheduling_timestamp INT NOT NULL,
          state TINYINT NOT NULL,
          reason INT NOT NULL,
          CONSTRAINT PK_background_download PRIMARY KEY (id, extent_location, extent_length)
CREATE TRIGGER "content_policy_downloader/fs_snapshot/fs_update"
 AFTER UPDATE ON fs_snapshot
 WHEN new.metadata_is_dataless
BEGIN
 SELECT SCHEDULE_BACKGROUND_DOWNLOAD(new.id, 1, 
 FROM fs_snapshot AS fs
 LEFT JOIN reconciliation_table AS rt ON (fs.id = rt.fs_id)
 LEFT JOIN fp_snapshot AS fp ON (fp.id = rt.fp_id)
 WHERE fs.rowID = new.rowID
 AND 
(CASE fp.decoration_content_policy
  WHEN 
 THEN
    fp.decoration_inherited_content_policy == 
  ELSE
    fp.decoration_content_policy == 
CREATE TRIGGER "content_policy_downloader/fs_snapshot/fs_insert"
 AFTER INSERT ON fs_snapshot
 WHEN new.metadata_is_dataless
BEGIN
 SELECT SCHEDULE_BACKGROUND_DOWNLOAD(new.id, 1, 
CREATE TRIGGER "content_policy_downloader/reconciliation_table/rt_update"
 AFTER UPDATE ON reconciliation_table
  WHEN new.fs_id IS NOT NULL
  AND new.fp_id IS NOT NULL
  AND (old.fs_id IS NULL OR old.fp_id IS NULL)
BEGIN
  SELECT SCHEDULE_BACKGROUND_DOWNLOAD(new.fs_id, 1, 
  FROM reconciliation_table AS rt
  LEFT JOIN fp_snapshot AS fp ON (rt.fp_id = fp.id)
  WHERE rt.rowID = new.rowID
  AND rt.fp_content_status != 
CREATE TRIGGER "background_download/fs_snapshot/insert"
 AFTER INSERT ON fs_snapshot
  WHEN new.metadata_is_in_pinned_folder AND new.metadata_is_dataless
BEGIN
  SELECT SCHEDULE_BACKGROUND_DOWNLOAD(new.id, 1, 
CREATE TRIGGER "background_download/fs_snapshot/update"
 AFTER UPDATE ON fs_snapshot
  WHEN (old.metadata_is_dataless AND old.metadata_is_in_pinned_folder)
       != (new.metadata_is_dataless AND new.metadata_is_in_pinned_folder)
BEGIN
  SELECT SCHEDULE_BACKGROUND_DOWNLOAD(new.id,
                                      new.metadata_is_dataless AND new.metadata_is_in_pinned_folder,
                                      
CREATE TRIGGER "background_download/fs_snapshot/delete"
 AFTER DELETE ON fs_snapshot
BEGIN
  DELETE FROM background_downloader
   WHERE id = old.id;
BEGIN
  DELETE FROM background_downloader
   WHERE id = new.id;
CREATE TABLE background_downloader (
  id 
 PRIMARY KEY,
  scheduling_timestamp INT NOT NULL,
  state TINYINT NOT NULL,
  reason INT NOT NULL
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/fssync/libfssync/implementations/file-system/persistence/SQLBackgroundDownloader.swift
:SQLBackgroundDownloaderRegistrationQueue
:SQLBackgroundDownloaderDebounceQueue
SELECT COUNT(id)
  FROM background_downloader
 WHERE state = 
missing database
init
hashTableWithOptions:
anonymousListener
setDelegate:
endpoint
resume
addObject:
validation_allowValidation:
validation_evictDocumentWithCompletionHandler:
validation_shareDocumentWithCompletionHandler:
interfaceWithProtocol:
setExportedInterface:
setExportedObject:
removeObject:
invalidate
setInvalidationHandler:
setInterruptionHandler:
errorWithDomain:code:userInfo:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
listener:shouldAcceptNewConnection:
makeListenerEndpointAndReturnError:
serviceName
isRestricted
T@"NSString",R,C,N
restricted
TB,R,N,GisRestricted
initWithFileProviderExtension:itemIdentifier:
.cxx_destruct
_fileProviderExtension
_itemIdentifier
_operationQueue
_listeners
path
fp_prettyPath
didUpdateItems:
didDeleteItemsWithIdentifiers:
finishEnumeratingChangesUpToSyncAnchor:moreComing:
finishEnumeratingWithError:
suggestedBatchSize
itemIdentifier
parentItemIdentifier
filename
contentType
typeIdentifier
typeAndCreator
capabilities
fileSystemFlags
documentSize
childItemCount
creationDate
contentModificationDate
extendedAttributes
lastUsedDate
tagData
favoriteRank
isTrashed
isUploaded
isUploading
uploadingError
isDownloaded
isDownloading
downloadingError
isMostRecentVersionDownloaded
isShared
isSharedByCurrentUser
ownerNameComponents
mostRecentEditorNameComponents
versionIdentifier
itemVersion
symlinkTargetPath
userInfo
contentPolicy
defaultManager
URLsForDirectory:inDomains:
removeItemAtURL:error:
legacyDefaultManager
signalEnumeratorForContainerItemIdentifier:completionHandler:
getResourceValue:forKey:error:
boolValue
documentsURL
setResourceValue:forKey:error:
enumerateItemsForObserver:startingAtPage:
enumerateChangesForObserver:fromSyncAnchor:
currentSyncAnchorWithCompletionHandler:
initWithDomain:code:userInfo:
fp_isFolder
finishEnumeratingUpToPage:
didEnumerateItems:
suggestedPageSize
fileURL
fp_defaultManager
permanentStorageForItemAtURL:allocateIfNone:error:
fp_isAppInboxOrDescendants
dealloc
hasUnresolvedConflicts
containerDisplayName
isDownloadRequested
isHidden
providerIdentifier
sharingPermissions
fp_spotlightDomainIdentifier
fp_domainIdentifier
fp_parentDomainIdentifier
fp_isUbiquitous
conflictingVersions
fp_isContainer
fp_isContainerPristine
fp_cloudContainerIdentifier
fp_cloudContainerClientBundleIdentifiers
displayName
isTopLevelSharedItem
quarantineBlob
isSyncRoot
setSyncRoot:
fileSystemFilename
isExcludedFromSync
fp_isLastModifiedByCurrentUser
fp_isAddedByCurrentUser
fp_addedByNameComponents
preformattedOwnerName
preformattedMostRecentEditorName
isCollaborationInvitation
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
fp_relativePathOf:
fp_shortDescription
unsignedLongLongValue
initWithDomain:
URLForItemWithPersistentIdentifier:
persistentIdentifierForItemAtURL:
itemForIdentifier:error:
providePlaceholderAtURL:completionHandler:
startProvidingItemAtURL:completionHandler:
stopProvidingItemAtURL:
itemChangedAtURL:
fetchContentsForItemWithIdentifier:version:completionHandler:
enumeratorForContainerItemIdentifier:error:
importDocumentAtURL:toParentItemIdentifier:completionHandler:
createDirectoryWithName:inParentItemIdentifier:completionHandler:
renameItemWithIdentifier:toName:completionHandler:
reparentItemWithIdentifier:toParentItemWithIdentifier:newName:completionHandler:
_trashItemAtURLWithoutCoordination:completionHandler:
trashItemWithIdentifier:completionHandler:
untrashItemWithIdentifier:toParentItemIdentifier:completionHandler:
deleteItemWithIdentifier:completionHandler:
setLastUsedDate:forItemIdentifier:completionHandler:
setTagData:forItemIdentifier:completionHandler:
setFavoriteRank:forItemIdentifier:completionHandler:
supportedServiceSourcesForItemIdentifier:error:
_removeTrashedItemsOlderThanDate:completionHandler:
_defaultApplicationContainerForBundleIdentifier:completionHandler:
_dumpInternalStateToTermDumper:completionHandler:
changeItem:baseVersion:changedFields:contents:options:completionHandler:
waitForStabilizationWithCompletionHandler:
fp_relationshipToItemAtURL:
setPurposeIdentifier:
coordinateWritingItemAtURL:options:error:byAccessor:
coordinateWritingItemAtURL:options:writingItemAtURL:options:error:byAccessor:
metadataVersion
contentVersion
initWithSuiteName:
boolForKey:
fp_trashUnderFolder:allowCoordination:completionHandler:
fp_reparentUnderFolder:allowBouncing:allowCoordination:completionHandler:
fileProviderErrorForCollisionWithItem:
fp_makeWritableWithError:
put:
startFgColor:
reset
startFgColor:attr:
bundleID
fp_deleteAllowingCoordination:completionHandler:
fp_reparentUnderFolder:withNewName:allowCoordination:completionHandler:
fp_renameWithNewName:allowCoordination:completionHandler:
fp_createSubFolder:completionHandler:
fp_importUnderFolder:allowCoordination:completionHandler:
isDownloadedTestingImpl
isUploadedTestingImpl
documentStorageURL
startProvidingItemAtURL:readingOptions:completionHandler:
movingItemAtURL:requiresProvidingWithDestinationURL:completionHandler:
_propertiesForItemAtURL:error:
_additionalDumpInfoWithCompletionHandler:
fetchThumbnailsForItemIdentifiers:requestedSize:perThumbnailCompletionHandlerWithType:completionHandler:
reparentItemWithIdentifier:toParentItemWithIdentifier:completionHandler:
fetchPublishingURLForItemIdentifier:completionHandler:
evictItemWithIdentifier:completionHandler:
disconnectWithOptions:completionHandler:
handleEventsForBackgroundURLSession:completionHandler:
attemptRecoveryFromError:optionIndex:completionHandler:
preflightTrashItemWithIdentifier:completionHandler:
preflightReparentItemWithIdentifier:toParentItemWithIdentifier:completionHandler:
customPushTopics
fetchTrashIdentifiersWithCompletionHandler:
identifier
pathRelativeToDocumentStorage
setFileURL:
decorations
initWithContentVersion:metadataVersion:lastEditorDeviceName:
initWithContentVersion:metadataVersion:
fp_checkSandboxFileMetadataRead
fpfs_isSafeSaveTempFile:
longLongValue
stringFromByteCount:countStyle:
fp_obfuscatedFilename
appRegistry:didUpdateApps:
appRegistry:didRemoveAppsWithBundleIDs:
listOfMonitoredApps
isManaged
deleteSearchableItemsWithSpotlightDomainIdentifiers:completionHandler:
initWithContentsOfURL:options:error:
fp_collidingURL
initWithString:
redactedDescription
_string
adopt
fork
section
initWithDomainID:usingFPFS:andRootPaths:
domainInfoWithDomainID:usingFPFS:andRootPaths:
usingFPFS
setUsingFPFS:
rootPaths
setRootPaths:
domainID
setDomainID:
_usingFPFS
_rootPaths
_domainID
TB,V_usingFPFS
T@"NSArray",&,V_rootPaths
T@"NSString",&,V_domainID
fileURLWithPath:
arrayWithObjects:count:
stringWithUTF8String:
enumerateFromPaths:andCallHandlerForEachItem:
checkPath:providerDomainID:usingFPFS:completionHandler:
enumerateItemsOnDiskFromPath:providerDomainID:usingFPFS:saveBrokenInvariantsAndCompareEachItemWithFSSnapshot:
itemIsInsideAPackage
setItemIsInsideAPackage:
itemIsInsideAnIgnoredFolder
setItemIsInsideAnIgnoredFolder:
_itemIsInsideAPackage
_itemIsInsideAnIgnoredFolder
TB,V_itemIsInsideAPackage
TB,V_itemIsInsideAnIgnoredFolder
fp_realpath
fp_errorWithPOSIXCode:
fileSystemRepresentation
activateSubscription:error:
stringWithFormat:
stringByDeletingLastPathComponent
barrierFolderURL
UUID
UUIDString
URLByAppendingPathComponent:
delegationQueue
waitableBarrierCanCreate:
subscriptionHandleTermination:
disableSubscription:
initWithPath:fd:reader:sinceEventID:streamUUID:ignoreOwnEvents:delegate:purpose:
activateWithError:
rootParent
waitableBarrier
resetBarrier
didProcessEventID:
didProcessBarrierEventUUID:
dispose
root
rootfd
rootFileID
delegate
lastDeliveredEventID
setLastDeliveredEventID:
eventStreamUUID
setEventStreamUUID:
state
setState:
isActivated
setIsActivated:
ignoreOwnEvents
_barrierGroup
_notifyStreamUUID
_notifyEventId
_weakReader
_purpose
_ownRootFD
_isActivated
_ignoreOwnEvents
_rootfd
_root
_rootFileID
_delegate
_lastDeliveredEventID
_eventStreamUUID
_state
T@"NSString",R,N,V_root
T@"NSString",R,N
TQ,R,N,V_rootFileID
Ti,R,N,V_rootfd
T@"<FSChangeSubscriptionDelegate>",W,V_delegate
TQ,N,V_state
TB,R,N,V_ignoreOwnEvents
TQ,N,V_lastDeliveredEventID
T@"NSUUID",&,N,V_eventStreamUUID
TB,N,V_isActivated
label
group
cancelled
regularExpressionWithPattern:options:error:
length
firstMatchInString:options:range:
rangeAtIndex:
substringWithRange:
fp_pathWithFileSystemRepresentation:
fpfs_filenameExtension
appendString:
sharedManager
scheduleFPCKRun:databasesBackupsPath:url:options:fpfs:ciconia:completionHandler:
dumpDatabaseAt:fullDump:writeTo:completionHandler:
workQueue
eventStreamUUIDForDevice:
initWithUUIDString:
setupForPath:error:
mountPath
deviceID
_stfs
_deviceID
Ti,R,N,V_deviceID
T@"NSUUID",R,N
fp_errorWithPOSIXCode:itemURL:debugDescription:
fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
URLByAppendingPathComponent:isDirectory:
purgeabilityErrorForReason:atURL:
fp_nonEvictableChildrenErrorWithFD:trashIno:busyIno:
initWithUserURL:outputUserURL:
backUpWithCompletionHandler:
backupEngine
setBackupEngine:
_backupEngine
T@"_TtC9libfssync19FPFSSQLBackupEngine",&,N,V_backupEngine
initWithUserURL:
restoreWithCompletionHandler:
restoreEngine
setRestoreEngine:
_restoreEngine
T@"_TtC9libfssync20FPFSSQLRestoreEngine",&,N,V_restoreEngine
T@"GSStorageManager",R
UTF8String
processFseventBatch
initWithCapacity:
arrayWithCapacity:
suspend
subscription:handleResetWithReason:
setUpStreamForReason:error:
_activateSubscription:error:
count
objectAtIndex:
removeObjectsInArray:
foreachSubscriptionInState:apply:
valueForKey:
arrayByAddingObject:
latency
oldestStartingPoint
liveFSEventsXPCActivityCriteria
_createStreamNamed:since:criteria:
objectAtIndexedSubscript:
flags
removeAllObjects
removeObjectAtIndex:
addObjectsFromArray:
_queueEvents:markSelfEncountered:
subscriptionWillHandleBatchOfEvents:
subarrayWithRange:
removeObjectsInRange:
countByEnumeratingWithState:objects:count:
handleFSEvent:indexInBatch:batchSize:
subscriptionDidHandleBatchOfEvents:
eventID
fileID
additionalDebugFlagsForHistoricalStream:
fpfs_initWithFSEventsFlags:
resetWithReason:newFSEventID:
deliverBarrierEvents
barrierUUID
subscriptionHandleDroppedEvent:
hasPrefix:
rawFlags
isEqualToString:
subscription:handleEventAtPath:targetItemID:eventID:flags:
stringByAppendingFormat:
componentsJoinedByString:
copy
_cancel
_close
initWithLabel:workloop:
subscribeToEventsAtPath:fd:sinceEventID:streamUUID:ignoreOwnEvents:delegate:purpose:
hasBufferedEvents
queueEvents:markSelfEncountered:
flushStream
close
cancel
setBarrierFolderURL:
hasPlannedRescan
setPlannedRescan:
_resetCount
_suspendCount
_stream
_streamQueue
_processQueue
_delegationQueue
_fseventsProcessSource
_fseventsToProcess
_maxFSEventQueueSize
_fseventProcessBatchSize
_isCancelled
_drainEvents
_createNoDelay
_hasMarkSelf
_optimizeOutOwnEvents
_isProcessingHistory
_volume
_subscriptions
_pendingBarrierEvents
_log
_plannedRescan
_barrierFolderURL
T@"NSObject<OS_dispatch_queue>",R,N,V_delegationQueue
T@"NSURL",&,N,V_barrierFolderURL
TB,R,N
Td,R,N
plannedRescan
TB,N,GhasPlannedRescan,V_plannedRescan
string
appendFormat:
objectForKey:
initWithPath:fileID:flags:eventID:
insertObject:atIndex:
lowercaseString
arrayWithObjects:
fp_cachedTypeWithIdentifier:
conformsToType:
typeWithFilenameExtension:conformingToType:
isBarrier
fpfs_extractFSEventsBarrierUUID
fpfs_extractFSEventsNotifyUUID
hasSuffix:
lastPathComponent
containsString:
setPath:
isNotification
additionalDebugFlags
_path
_fileID
_rawFlags
_eventID
_barrierUUID
_isNotification
_additionalDebugFlags
T@"NSString",&,N,V_path
TQ,R,N,V_fileID
TI,R,N
TI,R,N,V_rawFlags
TQ,R,N,V_eventID
TB,R,N,V_isNotification
T@"NSUUID",R,N,V_barrierUUID
TI,R,N,V_additionalDebugFlags
isProviderInitiated
asyncUnregisterLifetimeExtensionForObject:
contentsOfDirectoryAtPath:error:
initWithIdentifier:displayName:pathRelativeToDocumentStorage:
currentPersona
generateAndRestorePersonaContextWithPersonaUniqueString:
userPersonaUniqueString
pathComponents
personaCloudStoragePath
appSupportPath
fp_bouncedNameWithIndex:isDir:
homeDirectory
changes
setLastError:
allObjects
initWithBase64EncodedString:options:
initWithBytesNoCopy:length:freeWhenDone:
base64EncodedStringWithOptions:
openAtURL:withFlags:error:
setupPragmas
useBatchingWithDelay:changeCount:
setUserVersion:
unsignedIntAtIndex:
stringByAppendingPathComponent:
bindStringParameter:
serialQueue
bindBooleanParameter:
assertOnQueue
lastInsertedRowID
proxifiedDescription
operationDidProgressWithInfo:error:completionHandler:
progressWithTotalUnitCount:
setCompletedUnitCount:
initWithName:bundleIdentifier:
coreSpotlightIdentifier
deleteSearchableItemsWithIdentifiers:completionHandler:
inheritedUserInfo
parentItemID
fileProviderErrorForNonExistentItemWithIdentifier:
shortDescription
timeout
timeoutState
setTimeoutState:
requestEffectivePID
prettyDescription
sanitizeErrors
initWithConnection:protocol:orError:name:requestPid:requestWillBegin:
initWithConnection:protocol:orError:name:requestPid:requestWillBegin:requestDidBegin:
initWithConnection:protocol:orError:name:requestPid:
enumerationResultsDidChange
didUpdateItem:
provider
defaultStore
softConcurrentOperationLimit
hardConcurrentOperationLimit
uploadPipelineDepth
integerValue
descriptor
downloadPipelineDepth
upcallExcutionTimeLimitProgressCancellationGracePeriod
session
terminateWithReason:
registerLifetimeExtensionForObject:
userEnabled
initWithProviderID:domainIdentifier:itemIdentifier:
setEnumeratedItemID:
setDomainVersion:
fetchAndStartEnumeratingWithSettings:observer:request:completionHandler:
nsfpRequestForSession:
hasUpcallExecutionTimeLimits
newFileProviderProxyWithTimeout:pid:
upcallExecutionTimeLimitBase
unregisterLifetimeExtensionForObject:
requestForSelf
enumerateChangesFromToken:suggestedBatchSize:reply:
enumerateItemsFromPage:suggestedPageSize:reply:
currentSyncAnchorWithCompletion:
isFlattenedPackage
domainVersion
stringByDeletingPathExtension
setFilename:
setContentType:
setExtendedAttributes:
upcallExecutionTimeLimitPerKiloByte
indexer
clearNeedsAuth
setNeedsAuth
importDidFinishWithCompletionHandler:
deleteItemWithID:baseVersion:options:request:completionHandler:
fp_userInfoFPItem
providerDomainID
setItemVersion:
fp_uniqueTempFolderWithError:
archiveItemsWithURLs:compressionFormat:destinationFolderURL:completionHandler:
initWithURL:packageURL:error:
createItemBasedOnTemplate:fields:contents:options:request:bounce:completionHandler:
modifyItem:baseVersion:changedFields:contents:options:request:completionHandler:
isPackage
pathExtension
fetchContentsForItemWithID:version:usingExistingContentsAtURL:existingVersion:request:completionHandler:
isCancelled
moveItemAtURL:toURL:error:
unarchiveItemAtURL:passphrases:destinationFolderURL:acceptedFormats:completionHandler:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
requestedExtent
valueWithRange:
fetchContentsForItemWithID:version:request:extent:options:shouldForwardVersion:completionHandler:
setProvidedExtent:
providedExtent
rangeValue
itemID
itemForItemID:request:completionHandler:
rootItemIDWithProviderIdentifier:domainIdentifier:
appliesChangesAtomically
pluginUUID
bundleVersion
initWithProviderDomainID:itemIdentifier:
initWithVersion:filename:url:modificationDate:lastEditorNameComponents:
extensionPid
sequenceNumber
callDescription
domainUserInfo
setDomainUserInfo:forDomainIdentifier:completionHandler:
server
signalProviderChangesWithLowPriority
fp_prettyDescription
defaultBackend
providerVersion
sessionForDomainID:providerVersion:
isConnectedToAppExtension
asAppExtensionBackedProvider
wantsFlattenedPackages
keepAliveConnectionForRegisteredObserver:
enumeratorBecameFrontmost:inWindow:completionHandler:
remoteObjectProxy
remoteObjectProxyWithErrorHandler:
synchronousRemoteObjectProxyWithErrorHandler:
beginRequestWithDomain:alternateContentsDictionary:domainServicer:providerDomain:domainVersion:completionHandler:
evictItemAtURL:completionHandler:
itemChangedAtURL:completionHandler:
identifierForItemAtURL:completionHandler:
itemForURL:completionHandler:
trashItemAtURL:completionHandler:
bulkEvictItemsWithItemIDs:completionHandler:
fetchServicesForItemID:allowRestrictedSources:completionHandler:
fetchVendorEndpoint:
fetchOperationServiceEndpoint:
dropDomainWithCompletionHandler:
fetchCustomPushTopicsWithCompletionHandler:
wakeForPushWithCompletionHandler:
valuesForAttributes:forItemID:completionHandler:
didChangeItemID:completionHandler:
URLForItemID:creatingPlaceholderIfMissing:ignoreAlternateContentsURL:completionHandler:
setAlternateContentsURL:forDocumentWithItemID:completionHandler:
didUpdateAlternateContentsDocumentForDocumentWithItemID:completionHandler:
deleteSearchableItemsWithSpotlightDomainIdentifiers:domainIdentifier:completionHandler:
removeTrashedItemsOlderThanDate:domainIdentifier:completionHandler:
dumpInternalStateToTermDumper:domainIdentifier:completionHandler:
indexOneBatchInDomain:completionHandler:
dropIndexForDomain:completionHandler:
dumpIndexStateForDomain:toFileHandler:completionHandler:
signalEnumeratorForMaterializedItemsWithCompletionHandler:
signalEnumeratorForPendingItemsWithCompletionHandler:
_test_callFileProviderManagerAPIs:
startOperation:toFetchThumbnailsForItemIdentifiers:size:completionHandler:
preflightReparentItemIDs:underParentID:reply:
deleteItemsWithIDs:baseVersions:options:reply:
singleItemChange:changedFields:bounce:completionHandler:
bulkItemChanges:changedFields:completionHandler:
fetchHierarchyForItemID:recursively:reply:
fetchDefaultContainerForBundleIdentifier:defaultName:inDomainIdentifier:reply:
fetchItemID:reply:
preflightTrashItemIDs:completionHandler:
fetchPublishingURLForItemID:completionHandler:
disconnectDomainID:options:completionHandler:
performActionWithIdentifier:onItemsWithIdentifiers:domainIdentifier:completionHandler:
wakeForSessionIdentifier:completionHandler:
userCheckedSuppressionCheckboxForUserInteractionIdentifier:domainIdentifier:completionHandler:
userInteractionErrorsForPerformingAction:sourceItems:destinationItem:fpProviderDomainId:sourceItemKeysAllowList:destinationItemKeysAllowList:completionHandler:
updateIgnoreStateOfItemWithIdentifiers:ignoreState:completionHandler:
_removeSubscriber:
doubleForKey:
initWithLongLong:
fractionCompleted
initWithDouble:
executablePath
integerForKey:
_addSubscriberForFileURL:withPublishingHandler:
fp_isOfFileOperationKind:
doubleAtIndex:
longLongAtIndex:
unsignedLongLongAtIndex:
intAtIndex:
shortAtIndex:
unsignedShortAtIndex:
charAtIndex:
unsignedCharAtIndex:
compare:
userPackageExtensions
nsDomain
manager
fp_obfuscatedProviderDomainID
fileExistsAtPath:
extensionBackend
enter
setResultURL:
itemForURL:request:completionHandler:
discreteProgressWithTotalUnitCount:
setCancellable:
setCancellationHandler:
searchQuery
enumeratedItemID
signalErrorResolved:completionHandler:
backingStoreIdentity
setBackingStoreIdentity:
rootURLs
temporaryDirectoryURLWithCompletionHandler:
errorGenerationCount
uploadsArePaused
updateRootAfterDomainChangeWithError:
copyDatabaseToURL:completionHandler:
start
needsRootsCreation
createRootByImportingURL:error:
cleanupDomainWithMode:error:
isProviderForURL:
dumpStateTo:limitNumberOfItems:
waitForChangesOnItemsBelowItemWithIdentifier:request:completionHandler:
waitForStabilizationForRequest:completionHandler:
itemIDForURL:request:completionHandler:
startProvidingItemAtURL:readerID:readingOptions:request:completionHandler:
downloadItemWithItemID:request:progress:completionHandler:
evictItemAtURL:request:completionHandler:
evictItemWithID:request:completionHandler:
materializeItemWithID:requestedRange:request:completionHandler:
itemChangedAtURL:request:
URLForItemID:creatingPlaceholderIfMissing:ignoreAlternateContentsURL:isForTheProvider:request:completionHandler:
fakeFSEventAtURL:
enumerateMaterializedSetFromSyncAnchor:suggestedBatchSize:completionHandler:
currentMaterializedSetSyncAnchorWithCompletionHandler:
enumeratePendingSetFromSyncAnchor:suggestedBatchSize:completionHandler:
currentPendingSetSyncAnchorWithCompletionHandler:
stateWithCompletionHandler:
didChangeItemID:
workingSetDidChangeWithCompletionHandler:
enumerateWithSettings:lifetimeExtender:observer:completionHandler:
fetchFSItemsForItemIdentifiers:materializingIfNeeded:request:completionHandler:
decorateItems:completionHandler:
nonEvictableSpace
telemetryReport
reimportItemsBelowItemWithID:removeCachedItems:markItemDataless:completionHandler:
createIndexerWithExtension:enabled:error:
valuesForAttributes:forURL:request:completionHandler:
materializedURLForItemID:
isItemDataless:
createItemBasedOnTemplate:fields:urlWrapper:options:bounceOnCollision:request:completionHandler:
forceIngestionForItemID:completionHandler:
forceFSIngestionForItemID:completionHandler:
forceIngestionAtURL:
pinItemWithID:request:completionHandler:
unpinItemWithID:request:completionHandler:
ingestFromCacheItemWithID:requestedFields:request:completionHandler:
bulkItemChanges:changedFields:request:completionHandler:
trashItemAtURL:request:completionHandler:
resolveConflictAtURL:completionHandler:
fetchOperationServiceOrEndpointWithRequest:completionHandler:
fetchServicesForItemID:allowRestrictedSources:request:completionHandler:
fetchVendorEndpointWithRequest:completionHandler:
didChangeNeedsAuthentification:
listAvailableTestingOperationsWithRequest:completionHandler:
runTestingOperations:request:completionHandler:
subscribeToUploadProgressUpdates:completionHandler:
subscribeToDownloadProgressUpdates:completionHandler:
getCountersArrayWithCompletionHandler:
resetCountersWithCompletionHandler:
hasNonUploadedFilesWithCompletionHandler:
registerXPCActivities
fp_libnotifyPerUserNotificationName
synchronousRemoteObjectProxy
needsAuthentication
signalProviderChanges
personaIdentifier
requestedExtendedAttributes
purposeIdentifier
testingModes
sessionForProvider:version:
fetchSwift:error:
next
stringAtIndex:
isNullAtIndex:
longAtIndex:
signalChangesWithCompletionHandler:
domain
code
initFileURLWithPath:
moveItemAtPath:toPath:error:
postReportWithCategory:type:payload:error:
forceRunningWithReason:
initWithOperationIdentifier:itemIdentifier:
initWithOperationIdentifier:itemIdentifier:item:
initWithOperationIdentifier:renamedItem:snapshotVersion:
initWithOperationIdentifier:sourceItemIdentifier:targetItemIdentifier:targetItemBaseVersion:domainVersion:
initWithOperationIdentifier:sourceItem:targetItemIdentifier:targetItemBaseVersion:changedFields:domainVersion:rawFields:snapshotVersion:
initWithOperationIdentifier:sourceItem:domainVersion:snapshotVersion:
strippedCopy
setTrashed:
setParentItemIdentifier:
totalUnitCount
setTotalUnitCount:
addChild:withPendingUnitCount:
fp_maximumBounceLevel
setDateStyle:
setTimeStyle:
stringFromDate:
setFp_displayName:
initWithExtension:domain:enabled:
reloadDomain:unableToStartup:completionHandler:
leave
initWithUnsignedInteger:
initWithInteger:
integerAtIndex:
boolAtIndex:
unsignedLongAtIndex:
initWithProviderDomainID:itemIdentifier:parentItemIdentifier:filename:isDirectory:
requestForPID:
initWithProviderDomainID:itemIdentifier:parentItemIdentifier:filename:contentType:
executeSwift:error:
wrapperWithURL:readonly:error:
setRequestedExtent:
allowsResurrection
initWithDomain:callbackQueue:
isFromPOSIX
downloadURL:recursively:request:withCompletion:
localizedName
itemAtURL:willMoveToURL:
fp_bouncedNameWithIndex:
itemAtURL:didMoveToURL:
removeKey:
initWithLabel:criteria:
fp_createPathIfNeeded:
addKey:executor:
markDoneForKey:
shouldPause
ping
backupToURL:progress:
lastError
fp_isFileProviderInternalError:
errorGenerationUpdateSeconds
willIndexOneBatch
didIndexOneBatchWithError:updatedItems:deletedIDs:anchor:domainVersion:anchorPersisted:
didFinishIndexing
reportProgressUpdate:totalUnitCount:completedFileCount:totalFileCount:
domainVersionWithVersion:
version
bindUnsignedLongParameter:
bindIntegerParameter:
bindUnsignedShortParameter:
bindShortParameter:
bindUnsignedCharParameter:
bindCharParameter:
bindDoubleParameter:
unarchivedObjectOfClass:atIndex:
archivedDataWithRootObject:requiringSecureCoding:error:
queue
stringWithFileSystemRepresentation:length:
tags
collaborationIdentifier
lastEditorDeviceName
isContainer
isContainerPristine
fp_appContainerBundleIdentifier
cloudContainerIdentifier
fp_displayName
initWithUserInfo:
keys
values
unsupportedFields
setFormerIdentifier:
setUbiquitous:
setCollaborationIdentifier:
initWithUnsignedInt:
setConflictingVersions:
setContentModificationDate:
setCreationDate:
setFavoriteRank:
setTags:
setLastUsedDate:
setTypeAndCreator:
setFileSystemFilename:
stringFromPersonNameComponents:
dumpDatabaseAt:fullDump:writeTo:error:
numberOfFilesChecked
setNumberOfFilesChecked:
numberOfBrokenFilesInFSAndFSSnapshotCheck
setNumberOfBrokenFilesInFSAndFSSnapshotCheck:
numberOfBrokenFilesInFSSnapshotAndFPSnapshotCheck
setNumberOfBrokenFilesInFSSnapshotAndFPSnapshotCheck:
setTelemetryReport:
initWithDatabasesBackupsPaths:providerDomainID:usingFPFS:isCiconia:
launchFromURL:options:error:resultHandler:
setUsesSignificantDigits:
setMaximumSignificantDigits:
stringFromNumber:
numberFromString:
softConcurrentContentUpdateLimit
hardConcurrentContentUpdateLimit
softConcurrentProvideFileLimit
hardConcurrentProvideFileLimit
fileDescriptor
initWithFd:forceColor:
userVersion
unsignedIntValue
dataAtIndex:
flushMessagesSynchronouslyWithError:
setPostFlushHook:
close:
setTraced:
setLabel:
setShouldUseWALJournalMode:
useBatchingOnTargetQueue:delay:changeCount:
setProfilingHook:
synchronousMode
setSynchronousMode:
columns
runIfPossible:
selectedForMaterialization
date
groupInBatch:
registerFunction:nArgs:handler:
weakObjectsHashTable
autovacuumableSpaceInBytes
forceBatchStart
incrementalVacuum:
writeData:
beforeFirstSyncComponent
isFPFS
fp_isiCloudDriveOrCloudDocsIdentifier
mergeWithUserInfo:intoParentUserInfo:
fp_stringByDeletingPathBounceNo:andPathExtension:
unsignedIntegerValue
name
removeAdditions:completionHandler:
enumeratorForAdditionsInNameSpace:withOptions:withoutOptions:ordering:
nextObject
modificationDate
prepareAdditionCreationWithItemAtURL:byMoving:creationInfo:error:
createAdditionStagedAtURL:creationInfo:completionHandler:
initWithLabel:color:
color
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
sourceItemIdentifier
snapshotVersion
rawFields
sourceItem
renamedItem
setDateFormat:
providerID
domainIdentifier
addLRUSignature:
swift_bookmarkForItemID:consumerIdentifier:installSessionIdentifier:
swift_verifyBookmark:consumerIdentifier:installSessionIdentifier:
swift_parseUnverifiedBookmark:
lookupLRUSignature:
keyForBundleIdentifier:generateIfNotFound:keyGenBlock:
initWithLabel:criteriaBuilder:
unpublish
fp_setFileOperationKind:
publish
setPausable:
setPausingHandler:
setResumingHandler:
pause
isFinished
fileProviderErrorForRejectedDeletionOfItem:
learnNeedsAuthenticationFromBatchError
indexOneBatchWithCompletionHandler:
dumpStateTo:
spotlightIndexerDidReindexAllSearchableItems:
indexOneBatchFromAnchor:toAnchor:updatedItems:deletedItems:completionHandler:
providerDomainForDomain:
nsDomainOrNilForDefault
initWithDomain:providerDomain:log:
setDomain:
setProviderDomain:
fetchCurrentIndexingAnchorWithCompletionHandler:
setFileID:
setFileSystemFlags:
setInheritedUserInfo:
setQuarantineBlob:
setCapabilities:
setFp_pinned:
setFp_inPinnedFolder:
isFolder
setDownloaded:
setRecursivelyDownloaded:
setMostRecentVersionDownloaded:
setSupportsMostRecentVersionDownloaded:
setChildItemCount:
isIgnoreRoot
setExcludedFromSync:
setDownloading:
setUploaded:
setUploading:
setFp_lastModifiedByCurrentUser:
setAllowsContextualMenuDownloadEntry:
setExclusionType:
setDocumentID:
allowsContextualMenuDownloadEntry
fp_isInPinnedFolder
fp_isPinned
allowsUserControlledEviction
setIgnoreRoot:
setDocumentSize:
setUploadingError:
setDownloadingError:
setShared:
setTopLevelSharedItem:
setSharedByCurrentUser:
setSharingPermissions:
setIsContainer:
setIsContainerPristine:
setFp_appContainerBundleIdentifier:
setCloudContainerIdentifier:
setContainerDisplayName:
setHasUnresolvedConflicts:
setDecorations:
setUserInfo:
setContentPolicy:
initWithKeys:values:
personNameComponentsFromString:
setMostRecentEditorNameComponents:
setOwnerNameComponents:
setTypeIdentifier:
formerItemID
fp_isSyncAnchorExpiredError
fp_relativePathWithRealpath:
dateAtIndex:
setSelectedForMaterialization:
makeNextFlushFullSync
flush
performWithFlags:action:
bindLongParameter:
bindUnsignedIntegerParameter:
bindObjectParameter:
writingIntentWithURL:options:
coordinateAccessWithIntents:queue:byAccessor:
__itemAtURL:didResolveConflictVersionWithClientID:name:purposeID:
waitUntilAllOperationsAreFinished
readingIntentWithURL:options:
fp_realpathURL
setUnderlyingQueue:
setMaxConcurrentOperationCount:
fp_coordinatorReadingOptions:
NSFileProviderValidationServiceV1
FileProviderValidationServiceSource
NSXPCListenerDelegate
NSObject
NSFileProviderServiceSource
FPPublicLog
FPLoggerScope
FSCheckerDomainInfo
FSChecker
FSChangeSubscription
fp_task_tracker
FSPathAdditions
FPCKTask
FSVolume
FPFSAdditions
FPFSSQLBackupManager
FPFSSQLRestoreManager
SwiftWorkaround
FSChangeMonitor
FSChangeRecord
v24@0:8@?16
v24@0:8@?<v@?B@"NSDictionary">16
v24@0:8@?<v@?@"NSError">16
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@24@0:8^@16
@"NSXPCListenerEndpoint"24@0:8^@16
@32@0:8@16@24
v16@0:8
@"NSFileProviderExtension"
@"NSString"
@"NSOperationQueue"
@"NSHashTable"
@36@0:8@16B24@28
@"NSArray"
v44@0:8@16@24B32@?36
v32@0:8@16@?24
@72@0:8@16i24@28Q36@44B52@56@64
B24@0:8^@16
@20@0:8B16
v24@0:8Q16
i16@0:8
v24@0:8@16
v20@0:8B16
@"NSObject<OS_dispatch_group>"
@"NSUUID"
@"FSChangeMonitor"
@"<FSChangeSubscriptionDelegate>"
B20@0:8B16
v64@0:8@16@24@32Q40B48B52@?56
v44@0:8@16B24@28@?36
@20@0:8i16
B32@0:8@16^@24
{statfs="f_bsize"I"f_iosize"i"f_blocks"Q"f_bfree"Q"f_bavail"Q"f_files"Q"f_ffree"Q"f_fsid"{fsid="val"[2i]}"f_owner"I"f_type"I"f_flags"I"f_fssubtype"I"f_fstypename"[16c]"f_mntonname"[1024c]"f_mntfromname"[1024c]"f_flags_ext"I"f_reserved"[7I]}
@32@0:8Q16@24
@36@0:8i16Q20Q28
@"_TtC9libfssync19FPFSSQLBackupEngine"
@24@0:8@16
@"_TtC9libfssync20FPFSSQLRestoreEngine"
@64@0:8@16i24Q28@36B44@48@56
v32@0:8Q16@?24
d16@0:8
^{fpfs_fsevent_stream=}40@0:8@16Q24@32
B32@0:8q16^@24
B28@0:8@16B24
v28@0:8@16B24
B32@0:8@16I24I28
v32@0:8q16Q24
^{fpfs_fsevent_stream=}
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_dispatch_source>"
@"NSMutableArray"
@"FSVolume"
@"NSObject<OS_os_log>"
@"NSURL"
I16@0:8
@44@0:8@16Q24I32Q36
I20@0:8B16
NSFileProviderItemDecorationIdentifier
NSFileProviderFileSystemFlags
NSFileProviderTypeAndCreator
NSFileProviderItemCapabilities
NSFileProviderItemIdentifier
Code
NNSFileProviderErrorCode
NSFileProviderItemFields
FileAttributeKey
NNSFileAttributeKey
CFUUID
NCFUUIDRef
NSFileProviderSyncAnchor
fpfs_fileattrs
URLResourceKey
NNSURLResourceKey
LocalStorageFileProvider
FSDirectoryEnumerator
stat
__C_Synthesized
NSFileProviderError
NNSFileProviderErrorCode
fpfs_metadata
fpfs_item_handle
EnumeratorOptions
fpfs_xattr
__Unnamed_union___Anonymous_field21
fpfs_tag_data
fpfs_finder_color
FSChangeToken
CodingKeys
FSChangesNotifier
LocalChangesObserverContext
LocalFileEnumerator
FSChangesEnumerator
FSEventReaderDelegate
FSEventReader
FSEventChecker
FSEventReaderGatherPhaseResumeStatus
FSEventReaderMode
LocalFileProvider
BarrierDelegate
?LocalDomain
CodingKeys
LocalItem
LocalItemContext
LocalContainerMonitor
LocalContainerSnapshot
CodingKeys
LocalContainer
LocalRootEnumerator
delete/
wharf
fpfs_pagetoken
os_unfair_lock_s
FPCKOptions
FileOperationKind
NNSProgressFileOperationKind
FSFlockTypes
FPXPCAutomaticErrorProxyTimeout
FPProviderDomainID
CFRange
NSFileProviderPage
NSFileProviderContentPolicy
SWCollaborationIdentifier
FPDomainState
_NSRange
ReadingOptions
NNSFileCoordinatorReadingOptions
FPDomainRemovalMode
FileProvider
Foundation
CFError
NCFErrorRef
CGSize
FPPreflightAction
NSFileProviderDeleteItemOptions
NSFileProviderCreateItemOptions
Code
NPQLSqliteErrorCode
NSFileProviderDomainIdentifier
FPProviderID
ComparisonResult
NNSComparisonResult
wharf_step
LookupBehavior
ItemLookupResult
OSLogType
Nos_log_type_t
PQLSqliteError
NPQLSqliteErrorCode
PQLPerformFlags
dirent
fsid
timespec
fpfs_item_type
ReconciliationTable
CachedEntry
PersistAction
FPFSEnumerator
ReconciliationMutation
ReconciliationSideMutation
ReconciliationChildrenDeletionOptions
Filename
ItemMetadata
CodingKeys
InternalPathsManager
DomainStorageKind
VFSLookupItemContinuation
CodingKeys
SQLThrottler
ThrottlingError
SQLFields
PersistenceTrigger
AffectedGlobalJobs
AffectedItemJobs
AffectedReconciliation
JobLockAggregator
JobLock
JobLockRuleAssociatedJobs
JobLockRule
BlockedRuleError
Registration
SchedulableJob
JobRegistry
WaitConditionStatus
FileItemIDKind
FileItemID
SQLBackupManifest
SQLItemJobRegistry
SQLItemJobID
ProxyCancellable
ProxyOperationClient
FPFSServicerExtender
FPFSOperationServicer
VFSStagedContext
CodingKeys
SwappedReconciliationTable
FPFileTreeLifetimeExtender
FPXPCNonSanitizingErrorProxy
FPFileTree
DummyEnumeratorObserver
DownloadContext
DownloadProgressNotificationPresenter
DownloadProgressMonitor
ApplicationRequest
DownloadExpirationPolicy
URLProgressKey
fractionCompleted
totalUnitCount
DownloadProgressNotificationReason
NotificationSesssion
AnyDatabaseDelegate
AnyDatabaseDelegateImpl
FSRepair
VFSVersion
VFSItem
CodingKeys
Alibfssync
ObservedEnumerator
FPDDomainFPFSBackend
ErrorGeneration
WeakEnumerator
StartStatus
PendingSetState
Counters
CodingKeys
DatabaseDelegate
ItemA ItemB
PersistenceCounters
Database
MaterializationError
FileTreeError
UploadInterrupted
UploadCancelled
ItemNeedDelayPropagationStruct
ItemIsFlockedStruct
ItemKindMismatchStruct
DownloadCancelled
DirectoryChangedStruct
ItemNotEvictableStruct
CapturedContentMissingStruct
CollidingItemChangedBeforeBounceStruct
CodingKeys
ItemNotFoundStruct
ItemCollisionStruct
CannotBounceStruct
ContentUnavailableStruct
DirectoryNotEmptyStruct
VersionConflictStruct
ItemMismatchStruct
LookupNotPermittedStruct
ItemContentVersionMismatchStruct
 @<I
 @\I
 @|I
CodingKeys
TaskTracker
LifetimeError
MaintenanceContinuation
UnblockEvictability
UnblockIgnoreFolderProcessing
IgnoreChildrenOfIgnoredHierarchy
RetriggerResolvedVendorExclusion
UpdateClosestSyncRoot
MarkPackagesAsEvictable
MarkPackagesAsSyncRoot
MarkDirectoriesAsLocked
UnpauseReconciliations
ResolveItemEvictability
RescanParentDeletedChildren
Maintenance
CodingKeys
ReconcileAfterPropagation
Reconciliation
DiskImportContinuation
ContinueDiskImport
UnfaultDirectoryAndChildren
MarkDirectorDiskImportAsDone
DiskImportFinished
DiskImport
DiskImportStatus
ReimportReason
SQLFields
ItemReconciliationHalfSQLFields
ItemReconciliationSQLFields
PropagationJob
CreateItem
UpdateItem
DeleteItem
CancelUpdate
Propagation
PropagationError
SyncEngine
JobSchedulingOrder
JobSchedulingPriority
FPCTLTermDumper
SubFPCTLTermDumper
PackageInternalLookupPolicy
FPItem
SQLFields
FileTreeWriterCollisionOptions
ItemPropagationResult
FileTreeWriter
URLBackedFileTreeWriter
URLBackedItem
DomainBackedFileTreeWriter
FileTreeChange
ItemOrContinuation
EventStreamBatch
libfssync
FPCK
ReconciliationTableBrokenInvariants
FSSnapshotVersusFPSnapshotDiffs
DiskVersusFSSnapshotDiffs
DiskBrokenInvariants
SQLDatabase
SQLDatabaseVersion
SQLBugfixRevision
Locked
ChangeEnumerator
ChangeEnumeratorAnchor
CodingKeys
JobResult
FilteringJobResult
SwappedJobResult
ConcreteJobResult
FSDirectoryLister
VFSDirectoryLister
URLDirectoryLister
CodingKeys
 @\>
SyncStateStore
SyncState
SchedulingState
SyncStateKey
FeatureFlag
Dumper
StringDumper
FileDumper
DebugLogDumper
SubStringDumper
FPItemVersionData
NSFileProviderItemVersionWrapper
CodingKeys
PaginatedContinuation
SQLSnapshot
CodingKeys
ItemStateVersion
ItemState
CodingKeys
ConflictManager
JobLimitSlot
JobLimit
JobLimitCategory
ReconciliationID
 @tZ
GSConflictManager
SQLBackupManifestRecord
BitSetIterator
BitSet
CustomStringConvertibleBitSet
ItemChange
 @tY
SnapshotItemSQLFields
SwappedJobRegistry
SnapshotItem
JobID
ItemJob
Tags
CodingKeys
FSOrFPJob
 @$R
FileTreeLookupOptions
FileTreeProtocol
ItemType
SwappedDatabase
VFSItemID
FileItem
ID ContentVersion StructuralVersion
FPFSMaterializedSetAnchor
CodingKeys
Mutation
 @TK
NSecTimestamp
NSecTimeInterval
FPFSPendingSetAnchor
CodingKeys
VFSItemHandle
CodingKeys
FSSnapshotChecker
DocumentTrackingTombstoneSlayer
SnapshotMutation
FPFSID
JobReason
SQLJobRegistry
SQLVolatileJobID
SQLJobID
Lazy
TestingOperation
DirectionalTestingOperation
SQLHistoryTable
ItemNonSyncableAttributes
UserInfo
CodingKeys
SQLTable
CodableClass
CodableClassCodingKeys
CodableClassWrapper
UserRequest
FileItemKind
Fields
ConcreteDatabase
FileTreeChangeAggregator
MaterializationRequest
ConcreteDatabaseOptions
DBCounters
DatabaseError
CodingKeys
Change
SQLFields
SQLFieldType
SQLMultiColumn
SQLFields SQLFieldsSequence
SQLSingleColumn
SQLCodableTableAccessor
Fields
SQLCodable
SQLCodableDictionaryWrapper
SQLCodableAccessorWrapper
SQLDecodingError
VFSLookupScope
SQLSyncStateTable
PeriodicFPCK
State
ThrottlingParameters
JobThrottlingDomainWideError
JobThrottlingState
Kind
JobThrottle
ThrottlingKey
 @49
FileProviderPageToken
WorkingSetSyncAnchor
CodingKeys
StagedContext
SchedulableReconciliation
SQLReconciliationTable
DecoratedReconciliation
ItemIDAndLastChange
JobCode
PlaceholderError
JobSQLFields
ItemStateSQLFields
SQLFields
 @dP
 !"#$%&'(
FileTree
Continuation
RequestContinuation
ScanReturnCode
CodingKeys
ContinuationScheduling
FPFSGlobalProgress
WeakProxy
JobsCounter
JobWaitCondition
FPSnapshotChecker
Version
FileItemVersion
CodingKeys
 @|G
CapturedContent
FPFSSyncEngine
DecorationOptions
libfssync
DummyObserver
LifetimeExtender
FPFSIndexer
ItemReconciliation
ItemReconciliationHalf
PropagationStatus
ReconciledPropagationStatus
DeletionStatus
MaterializationStatus
ContentStatus
ReadOnlyWharf
BounceItem
BouncingHardlinkStagedContext
Bouncing
BouncingContext
CodingKeys
 @|P
 @dP
Snapshot
SnapshotCounters
SnapshotFPRecursiveProperties
SnapshotFSRecursiveProperties
CodingKeys
Schedulable
SQLFields
FPFSSQLBackupEngine
FetchItemMetadata
FetchContent
DeleteFolderFromSnapshotIfEmpty
MarkParentDeleted
DeleteRejectedItemInTree
FaultDirectoryInTree
UnfaultDirectoryInTree
ReSnapshotChildren
DeferredRescan
FetchChildrenMetadata
FetchEventStream
CancelFetchFileContent
CollectCapturedContent
MergeItems
Ingestion
FPDNetworkMonitor
FileTreeSide
JobSchedulingState
MaterializeItem
EvictItem
EvictChildren
MaterializeParentHierarchy
MaterializeIgnoredItem
Materialization
FPFSSQLRestoreEngine
RestoreUpgradeSchemaVFSFileTree
RestoreUpgradeSchemaFPFileTree
PopulateConflicts
CleanConflicts
Conflict
VFSIDLookupCache
VFSFileTree
VFSEventAggregator
VFSCounters
CodingKeys
FileIDAndPath
TelemetrySignposter
Signpost
TelemetrySignpost
DocumentWharf
SQLBackgroundDownloader
BackgroundWorkReason
BackgroundWorkState
pinning
speculat
content 
direct r
policy
equest
So8NSStringC
$sSY
$ss21_ObjectiveCBridgeableP
$ss25ExpressibleByArrayLiteralP
$ss9OptionSetP
So7NSErrorC
_AAt
So6NSDataC
$s10Foundation18_ErrorCodeProtocolP
$s10Foundation21_BridgedStoredNSErrorP
SvSg
ySSG
ySSG
AAIgyd_
So13FPAppMetadataCSbIggd_
So8NSObjectC
So28NSFileProviderChangeObserver_p
SgXw
So17OS_dispatch_queueC
Sb8inserted_
17memberAfterInsertt
So18NSFileProviderItem_p
Gz_Xx
_pIeggdzo_
3url_
Sg4itemt
So13FPAppMetadataCSg
So24OS_dispatch_source_timer_pSg
ySSypG
SS_ypt
$s24LocalStorageFileProvider21FSEventReaderDelegateP
_pSgXw
So21OS_dispatch_semaphoreC
yXlG
yXlG
_yXlt
_ypt
_ypt
So23NSFileProviderExtensionC
SgXw
_pSgcSg
So7NSErrorCSgIeyBy_
So18NSFileProviderItem_pSg
So7NSErrorCSgIeyByyyy_
So25NSFileProviderItemVersionC
So18NSFileProviderItem_pSg
_pSgIeggyyg_
_pSg
z_Xx
z_Xx
_pSgz_Xx
Iegn_
Ign_
AAIgnn_
3url_
Sg4itemtSg
So18NSFileProviderItem_pSg
_pSgIeggg_
_yptG
So18NSFileProviderItem_pSg
_pSgIeggng_
SgSg
SnySiG
ySnySiGG
Siz_Xx
_pSgIgg_
So27NSFileProviderServiceSource_p
_pSgIegg_
So18NSFileProviderItem_pSgSo7NSErrorCSgIeyByy_
So5NSURLCSgSo7NSErrorCSgIeyByy_
_pSgIegng_
_pSgIgng_
So5NSURLCSgSo18NSFileProviderItem_pSgSo7NSErrorCSgIeyByyy_
So8NSNumberCSg
SSSg
SDySS
SaySo25NSFileProviderItemVersionCGSg
SgSg
Igyd_
_yptG
_A13At
So13FPAppRegistryC
SDySSSo13FPAppMetadataCG
SaySo13FPAppMetadataCG
ySSSo13FPAppMetadataC_G
ySo13FPAppMetadataCG
yyXlG
ySSSo13FPAppMetadataCG
ySo25NSFileProviderItemVersionCG
ySo18NSFileProviderItem_pG
Sg_ABt
ySo27NSFileProviderServiceSource_pG
SgIeyBy_
_A2At
So6FPItemCG_So10NSProgressC
yyctt
So6FPItemCG_So10NSProgressC
_pSgctG
So10NSProgressCSgXw
yxq_GSgXwz_x_q_
RzADR_r0_lXX
So10NSProgressCSgXwz_Xx
yxq_G
yxq_G
G0R1_
G1R0_
_pKc_ABtG
ySSyXlXpG
So6FPItemCGG
ySo6FPItemC_GG
So6FPItemCG_Sayy
_pSgcGt
So6FPItemCGSayy
_pSgcGG
So6FPItemCGG
2at_t
So6FPItemCG_
_pSgctGG
So6FPItemCG_
_pSgctGG
ySo6FPItemC
_pSgctGG
So6FPItemC_Gt
So6FPItemC_GG
So6FPItemCGG
ySSSay
ySo6FPItemCGG5rules_AF9blockedBytG
ySo6FPItemCG
ySSSay
GG5rules_AE9blockedBytG
yS2SG
So6FPItemCGG
So6FPItemCG_Si5rowIDtG
ySo6FPItemCGSgt
ySo6FPItemCGSgG
GSgt
GSgG
qd__
G1R3_
_pGSg
_pGSgz_Xx
G0R4_
G1R4_
G0R2_
G1R2_
_pGIegn_
y2ID
QzAbCQy_G
G0R5_
G1R5_
yxq_GSg
_pGIegn_
yxq__G
yq_xG
Qy_Sg
y2ID
QzAcDQy_G
_pGIegg_
ypGSgG
So6FPItemCGSg
So6FPItemCGSg
_pGIegn_
So6FPItemC_G
So6FPItemCG
So6FPItemCGSg
So6FPItemC_G
So6FPItemCG_
_pSgctG
_pGIegg_
_pGIegn_
ySo6FPItemC
ySo6FPItemC
_pSgctG
So6FPItemCG
ShySo17NSFileCoordinatorCGG
ySo17NSFileCoordinatorCG
So6FPItemCGG
ySo6FPItemC
So6FPItemCGG
So6FPItemCG_
So6FPItemCG
ySo18FPTestingOperationC
So6FPItemCG_So18FPTestingOperationCt
So6FPItemCGSo18FPTestingOperationCG
_ypt
So6FPItemC_G
So6FPItemC_G
So18OS_dispatch_sourceCG
_AAt
_A1023At
yxq_GSgXw
Qy_Iegr_
SSIego_
QzIegr_
2fs_AA2fpt
yxq__G
yycSg
G_Sb16isEnumeratedItemtSg
G_Sbt
GSg_ADSbt
G_Sb16isEnumeratedItemt
SaySo6FPItemCG
SgSo19FPExtensionResponseCSg
_pSgIegggggg_
ySaySo6FPItemCG_
_pGIegg_
ySaySo6FPItemCG_
_pGIegn_
ySaySo6FPItemCG_SaySo0A2IDCGSb
_pGIegn_
3key_
G5valuet
3key_
G5valuetSg
GtSg
G__G
ySaySo6FPItemCG_SaySo0A2IDCGSb
So7NSArrayC
SgSo19FPExtensionResponseCSgSo7NSErrorCSgIeyByyyyy_
SgSo7NSErrorCSgIeyByy_
_pSgIeggg_
_pSgIegng_
_GSo17OS_dispatch_queueCG
y14ContentVersion
Qz010StructuralB0ACQzG_Sb13contentInSyncSb08metadataeF0t
Sg_Sb27applyInconsistentTransitiont
Sg4from_AB2to
5ordert
y2ID
QzAbCQy_G_
Qz_AaBQy_
y2ID
QzAbCQy_G
y2ID
QzAbCQy_G_
y2ID
QzAbCQy_G_AFt
y2ID
QzAbCQy_G_
yq_Gt
y2ID
QzAbCQy_G_
yxGt
y2ID
QzAbCQy_G_
y2ID
QzAbCQy_G_
$ss26ExpressibleByStringLiteralP
$ss43ExpressibleByExtendedGraphemeClusterLiteralP
$ss33ExpressibleByUnicodeScalarLiteralP
SSyc
SDySS
So19FPDExtensionManagerCSg
_pIgyrzo_
SgSg
_pIgyrzo_
_pIgyrzo_
_pIgyrzo_
_pIgyrzo_
SgSg
_pIgyrzo_
SgSg
_pIgyrzo_
ytSgSg
ytSg
_pIgyrzo_
_pIgyrzo_
_pIgyrzo_
SgSg
_pIgyrzo_
yxq__G
yxq__GG
$s9libfssync14SQLMultiColumnP
yxq_G
y2ID
QzAbCQy_G
yxq_GSgXw
yxq_GSgXwz_x_q_
RzADR_r0_lXX
$ss12CaseIterableP
Qz_AaBQy_t
y2ID
QzAbCQy_G_AF8inParentt
yxGSg4from_AC2to
5diffst
yq_GSg4from_AC2to
5diffst
yq_G
y2ID
QzAbCQy_G_AFSg
y2ID
QzAbCQy_G_
Sg4fromAH2tot
y2ID
QzAbCQy_G_
_p5errort
y2ID
QzAbCQy_G_
2ont
y2ID
QzAbCQy_G_
y2ID
QzAcDQy_Gt
_Sb8longWaitt
y2ID
QzAbCQy_G5below_t
y2ID
QzAbCQy_G_Sb9isIgnoredt
y2ID
QzAbCQy_G_AF2int
y2ID
QzAbCQy_G_
Sg4namet
QzSg
7jobType_2ID
Qz04itemC0t
7jobType_2ID
Qy_04itemC0t
yxGG
SDySSSay
yxGG5rules_AC9blockedBytG
So11NSHashTableCy
yxGG
Qz2in_t
Qz_AC4fromAC2tot
Qz_ACSg2int
SgtG
yxq_G
$s9libfssync10FileItemIDP
yxq_G
So15PQLQueryBuilderC
yxq_G
yxq_G
So13FPCancellable_p
So17FPOperationClient_p
ypGSg
Sg_So27NSFileProviderDomainVersionCSgt
_pGIegn_
Sg_So27NSFileProviderDomainVersionCSgt
SaySo6FPItemCGSg
ShySSGSg
_pGIegg_
So6FPItemCSgIegg_
_pGSgIegg_
So12NSDictionaryCSgACSo7NSErrorCSgIeyByyy_
So6FPItemCGSgSDyAA
_pGSgAF_pSgIegggg_
So6FPItemCGSgSDyAA
_pGSgAF_pSgIegnng_
ySo6FPItemC
_pGIegg_
ySo6FPItemC
_pGIegn_
So6FPItemCq0_q1_GSgXwz_AB_AD
AdBRszADRs_
yABGRb0_
R0_AIyADGRb1_
R1_AB13URLBackedItem
Rt0_r2__lXX
So7NSErrorCIeyBy_
So7NSArrayCSgIeyBy_
SaySo6FPItemCGSg
_pSgIeggg_
SaySo6FPItemCGSg
_pSgIegng_
So6FPItemCq0_q1_GSgXwz_AB_AD
SayADGSgABRszADRs_
yABGRb0_
R0_AKyADGRb1_
R1_AB13URLBackedItem
Rt0_r2__lXX
So6FPItemC_G
ySo6FPItemC
SaySo7NSErrorCG
SaySo7NSErrorCGz_Xx
So13FPXEnumerator_pSg
yq_xG
yxq_GSg
So10FPDRequestC
So24FPXPCAutomaticErrorProxyC
ySo6FPItemCG
So9FPDDomainCXo
So10NSProgressCG
SgACtSg
So22FPDRTCReportingSessionCSgSg
_SiSSSgtSg
SgXw
ySo6FPItemC_G
_pGSay
GIeggg_
So27NSFileProviderDomainVersionCSg
ySo6FPItemC_G
_pGIegn_
So24FPXPCAutomaticErrorProxy_So9FPXVendorp
So13FPXEnumerator_p
Ieg_Iegggg_
So13FPXEnumerator_p
Ieg_
So19FPExtensionResponseCSg
SaySo6FPItemCG
SaySo8FPItemIDCG
ySo6FPItemC_GG
So8NSObjectCSg
_pIegg_
ySo6FPItemCSg_So27NSFileProviderDomainVersionCSgt
_pGIegn_
ySo6FPItemCSg_So27NSFileProviderDomainVersionCSgt
_pGIegg_
So9OS_os_logCSg
_pGIegg_
_pGIegn_
ySo6FPItemCG
ACGtSg
ySo6FPItemCGSg_So27NSFileProviderDomainVersionCSgt
_pGIegn_
So6FPItemCSg
SbSo27NSFileProviderDomainVersionCSg
_pSgIeggyygg_
So6FPItemC
So6FPItemCz_Xx
ySo22FPSandboxingURLWrapperCSg
_pGIeg_Ieggg_
ySo22FPSandboxingURLWrapperC
_pGIeg_Ieggg_
ySo22FPSandboxingURLWrapperC
_pGIegn_
GSbIgyd_
Ieg_z_Xx
So6FPItemCSg
ySo6FPItemCGSg_So27NSFileProviderDomainVersionCSgt
z_Xx
_So6FPItemCtSg
_pGIegn_
7content_
ADG7versiont
So10FPDRequestCSg
_So6FPItemCtSg
_pGIegg_
So10NSProgressCSg
So10NSProgressCSgz_Xx
_So6FPItemCtSg
_pGIegg_z_Xx
Ieg_Sg
So19FPExtensionResponseC
So22FPSandboxingURLWrapperCSg
Igyd_
_So6FPItemCtSg
_pGIegn_
So13NSFileManagerC
_pGIegn_
ABGSg
So7NSValueCSg
SaySo15FPConflictLoserCG
SaySo15FPConflictLoserCGz_Xx
ySaySo15FPConflictLoserCG
_pGIegg_
_pGIegg_
SaySo6FPItemCG
Ieggd_
_pGIegn_
ySo6FPItemCSg
_pGIegn_
ySo6FPItemCSg
_pGIegg_
ySo15FPConflictLoserC
_pGIegg_
So11FPDProviderC
SDySS
So24OS_dispatch_source_timer_p
So22FPDRTCReportingSessionCSg
3key_
5valuetSg
3key_
5valuet
3key_
5valuet
SS3key_
5valuet
SgXw
SgXw
SgXwz_Xx
SgXwz_Xx
y_So10NSProgressC
y_So10NSProgressC
GSo17OS_dispatch_queueCG
y_So10NSProgressC
GSo17OS_dispatch_queueCG
y_So10NSProgressCSdG
y_So10NSProgressCSdGSo17OS_dispatch_queueCG
y_So10NSProgressCSdGSo17OS_dispatch_queueCG
14expirationDate_t
14lastChangeDate_t
y5ItemA
Qz0A1BACQzG
xSgXw
$s9libfssync8FileItemP
_pIgyrzo_
_pIgyrzo_
GGSg
So6FPItemC_G
ySo6FPItemC
ABGG
SaySSGSg
ABGGSg
_pIgyrzo_
So6FPItemCG
So6FPItemCG
So8FPItemIDCSg
_pSgIeggg_
So8FPItemIDCSgSo7NSErrorCSgIeyByy_
So6FPItemCSgSo7NSErrorCSgIeyByy_
SgXw
SgXwz_Xx
So10NSProgressC
So8FPItemIDC
SbIegy_
IeyBy_
So8FPItemIDCSg
_pSgIegng_
_pSgSo22FPSandboxingURLWrapperCSgAEIegggg_
_pSgSo22FPSandboxingURLWrapperCSgAEIeggnn_
SaySo6FPItemCGSaySo0A2IDCGSb
SgSo19FPExtensionResponseCSg
_pSgIegggyggg_
So7NSArrayCAB
SgSo19FPExtensionResponseCSgSo7NSErrorCSgIeyByyyyyy_
SgIegg_
_pSgIegyg_
So7NSErrorCSgIeyByy_
So13FPXEnumerator_pSg
_pSgIeggg_
So30FPExtensionEnumerationSettingsC
So19FPDLifetimeExtender_p
So21FPXEnumeratorObserver_p
So13FPXEnumerator_pSg
_pSgIegng_
So6FPItemCG
_pSgIeggg_
So12NSDictionaryCSo7NSErrorCSgIeyByy_
SaySo6FPItemCGIegg_
So7NSArrayCIeyBy_
ypGSg
_pSgIeggg_
So12NSDictionaryCSgSo7NSErrorCSgIeyByy_
Sgz_Xx
SgIegn_
Sbz_Xx
_pSgIegyg_
So6FPItemCSg
_pSgIeggg_
So6FPItemCSg
_pSgIegng_
So6FPItemCG
G2of_So10FPDRequestC2byt
_pGz_Xx
So6FPItemCGz_Xx
So6FPItemCG
Iegg_
So6FPItemCGSgSDyAA
_pGSgIeggg_
So12NSDictionaryCSgACIeyByy_
So21NSXPCListenerEndpointCSgSaySo20FPXServiceDescriptorCGSg
_pSgIegggg_
ySo8FPItemIDC
_pGIegg_
ySo8FPItemIDC
_pGIegn_
So21NSXPCListenerEndpointCSgSo7NSArrayCSgSo7NSErrorCSgIeyByyy_
So21NSXPCListenerEndpointCSg
_pSgIeggg_
So21NSXPCListenerEndpointCSg
_pSgIegng_
So21NSXPCListenerEndpointCSgSo7NSErrorCSgIeyByy_
SaySo18FPTestingOperationCGSg
_pSgIeggg_
SaySo18FPTestingOperationCGSg
_pSgIegng_
So7NSArrayCSgSo7NSErrorCSgIeyByy_
SDySo18FPTestingOperationC
_pGSgAC_pSgIeggg_
SaySo18FPTestingOperationCG
SDySo18FPTestingOperationC
_pGSgAC_pSgIegng_
So18FPProgressProtocol_p
SayypGSg
_pSgIeggg_
SayypGSg
_pSgIegng_
So7NSErrorCSgIeyByy_
$s9libfssync18ObservedEnumeratorP
So9FPDDomainCSgXw
So20NSFileProviderDomainC
So26OS_dispatch_source_data_or_pSg
SDySO
SbSg
_pSgXw
So6FPItemCG
ySo6FPItemC
So6FPItemCG
ySo6FPItemC
So6FPItemCG
GSgSg
_pIgrzo_
So6FPItemCG
GSg_ADSbtSg
_pIgrzo_AF_pIegyzo_
So9FPDDomainC
So6FPItemCG
SO3key_
5valuet
GSg_ADSbtSgSg
GSg_ADSbtSg
So6FPItemCGSg
SaySo8FPItemIDCGSgSDy
AEGSg
_pSgIegggg_
SaySo8FPItemIDCGSgSDy
AEGSg
_pSgIegnng_
So6FPItemC
yypG
SayypG
So6FPItemCG
So10FPDRequestC2by_t
So6FPItemCGSo18FPTestingOperationCG
ySDy
So6FPItemCG
_pGAG_pGIegg_
So6FPItemCGG
yShy
So6FPItemCGG
_pGIegg_
IeyB_
So6FPItemCGG
ySDy
So6FPItemCG
_pGAG_pGIegn_
So6FPItemCG
yxq_G
_pGz_
_So6FPItemC
RzAJR_
yxGRb0_AKyq_GRb1_r2_lXX
So6FPItemCG
GSg4itemSu7versionSo27NSFileProviderDomainVersionCSg06domainF0t
GSg4item
Sg17destinationItemID
AKGSg11baseVersion
6fieldsSu7versionSo020NSFileProviderDomainF0CSg06domainF0t
GSg4item
7newNameSu7versiont
Sg4itemt
ySo6FPItemC
ySo6FPItemCGSg4itemSu7versionSo27NSFileProviderDomainVersionCSg06domainG0t
ySo6FPItemCG
ySo6FPItemCGSg4item
Sg17destinationItemID
yAHGGSg11baseVersion
6fieldsSu7versionSo020NSFileProviderDomainG0CSg06domainG0t
ySo6FPItemCGSg4item
7newNameSu7versiont
So6FPItemCG
So6FPItemCG_AEt
ySo6FPItemCGSg
So6FPItemCG3key_
_p5valuetSg
So6FPItemCG3key_
_p5valuet
So6FPItemCG
So6FPItemC_G
So6FPItemCGG
SgSg
_pIgrzo_
2at_So10FPDRequestC2byt
So6FPItemC
GSgXw
So6FPItemCq0_q1_GSgXwz_AB_AD
ADSgABRszADRs_
yABGRb0_
R0_AJyADGRb1_
R1_AB13URLBackedItem
Rt0_r2__lXX
Gz_Xx
z_Xx
_pGIegg_
SS2id_
2atSo10FPDRequestC2bySu7optionst
_pGIegn_
3url_
6parenttSg
3url_
6parentt
GSg_So27NSFileProviderDomainVersionCSgt
GSg_So27NSFileProviderDomainVersionCSgt
So6FPItemCq0_q1_GSgXwz_AB_AD
ABRszADRs_
yABGRb0_
R0_AIyADGRb1_
R1_AB13URLBackedItem
Rt0_r2_lXX
2of_So10FPDRequestC2byt
ySo6FPItemC
Sg6itemID_So10FPDRequestC2byt
ypGSg
ypGSgz_Xx
_yptG
So6FPItemCG
SDySSSo8NSNumberCGSgSg
SDySSSo8NSNumberCGSg
_pIgrzo_
S2StSg
_pIgrzo_
So6FPItemCG
So6FPItemCG
_pSgIegng_
So6FPItemCq0_q1_GSgXwz_AB_AD
ADGABRszADRs_
yABGRb0_
R0_AKyADGRb1_
R1_AB13URLBackedItem
Rt0_r2__lXX
3for_So10FPDRequestC2byt
So8FPFSItemC
So13FPXEnumerator_pSgSo7NSErrorCSgIeyByy_
So6FPItemCq0_q1_GSgXwz_AB_AD
So13FPXEnumerator_pSgABRszADRs_
yABGRb0_
R0_AKyADGRb1_
R1_AB13URLBackedItem
Rt0_r2__lXX
_pGIegg_
SgXw
SgXwz_Xx
2id_AA8parentIDSS8filename
Sg11contentTypet
6itemID_
Sg0A0
yACGSg13fetchStrategyt
So7NSErrorCSgSo22FPSandboxingURLWrapperCSgAFIeyByyy_
So6FPItemCq0_q1_GSgXwz_AB_AD
So22FPSandboxingURLWrapperCSgAkBRszADRs_
yABGRb0_
R0_ALyADGRb1_
R1_AB13URLBackedItem
Rt0_r2_0_lXX
Si_SitSg
Si_Sit
_pIgrzo_
ytIegr_
So13FPDDownloaderCSgXw
So13FPDDownloaderCSgXwz_Xx
ytIegr_Sg
ytIegr_
_pIgrzo_
ySS_yptG
Gz_Xx
5below_So10FPDRequestC2byt
So6FPItemCGSgXw
yxq_GSgXwz_
_So6FPItemC
RzAGR_r0_lXX
GSbSay
_pIegodozo_
So17NSFileCoordinatorC
_pIgngzo_
So17NSFileCoordinatorC
ytSg
_pIgrzo_
ySi_GSo17OS_dispatch_queueCG
5ItemA
5ItemB
yxq_G
yxq_G
yq_xG
qd__Sgqd_0_Sg
_pSgIegnng_
qd_0_
yqd__
_pGIegn_
ypXmT_
y14ContentVersionABQz010StructuralC0ABQzGSg2att
8filenameAC5belowt
8filename_2ID
Qz5belowt
QzSg8expected_AC8receivedt
14ContentVersion
Qz8expected_AC8receivedt
14ContentVersion
17StructuralVersion
14ContentVersion
QzSg
17StructuralVersion
QzSg
So15fp_task_trackerC
yq_x_G
y14ContentVersion
Qy_010StructuralB0ACQy_GSg
SuSg
y2ID
QzGSg
yxGSg
_p_So27NSFileProviderDomainVersionCSg010propagatedD0tSg
SgSSSg
_pSgIegggg_
yxq_G
yxq__G
ShySo17NSFileCoordinatorCG
So6FPItemCG_Si5rowIDt
ySo6FPItemCG
So6FPItemC_GypG
ySo6FPItemC
ySo6FPItemC
ySo6FPItemC
So6FPItemC_G
So6FPItemC_G
So6FPItemC_G
So6FPItemC_G
So6FPItemC_G
So6FPItemC_G
ySo6FPItemC
ySo6FPItemC
ySo6FPItemC
So6FPItemC_GG
So6FPItemC_GG
So6FPItemC_G
So6FPItemCG_
_pSgctG
So6FPItemCG_So10NSProgressC
_pSgct
So6FPItemC_GSg
So6FPItemCG_
_pSgctG
ySo6FPItemC
_pSgctG
Sayy
_pSgcG
ySo6FPItemC_G
_GypG
_GypG
ySo6FPItemCGSgSg
ySSSuG
SE_pSg
ySSSiG
So10NSProgressCG
ySSSo8NSNumberCG
yq_xG
yxq__G
y14ContentVersion
Qz010StructuralB0ACQzGSg
y2ID
Qy_GSg
Qy__
y14ContentVersionABQy_010StructuralC0ABQy_GtSg
yq_GSg
yq_xG
yxq__G
yq_xG
yq_Sg_So27NSFileProviderDomainVersionCSgt
yxq__G
y2ID
Qy_G
y14ContentVersion
Qz010StructuralB0ACQzG
yq_GSg_So27NSFileProviderDomainVersionCSgt
y14ContentVersion
Qy_010StructuralB0ACQy_G
yxq__G
yq__G
yq_GSg
Qz_SS6reasont
yq_G
So15FPCTLTermDumperC
_SStSg
_SSt
_pGIegn_
GSgxSg
_pIgyrzo_
Igyd_
_pIgyrzo_
ySiG
ySS_
_ptG
ySSSgG
ACGG
So6FPItemCGG
yxSg
_pGIegn_
ySay
yx_GG_Say
_pSgcSgtcSg
yxGycSg
y2ID
tcSg
yycSg2ID
Qz_So10NSProgressC
tcSg
$s9libfssync23URLBackedFileTreeWriterP
13URLBackedItem
$s9libfssync26DomainBackedFileTreeWriterP
Qz04itemA0_xSg0B0
yxGSg13fetchStrategyt
Qz04itemA0_t
Sb11deferRescan_SS6reasont
Sb8longWait_t
yx_G
_pGIegn_
SayxG
Say2ID
So8NSStringCIeyBy_
SDySSSuG
SDySSypGSg
So6FPItemCGG
ShySSG
Sb_So21OS_dispatch_semaphoreCSgtycSg
So6FPItemCG
GGSg
SSIegg_
SaySSGz_Xx
So6FPItemCGSgG
So6FPItemCGSg
ySSSu_G
SE_p
ySSSE_pG
ySo6FPItemC
_pGSg
yxSg
_pGSgz_
RzlXX
Ieggd_
ySo6FPItemCSg
_pGSg
yxSg
_pGSgz_So6FPItemC_
RzlXX
ySo6FPItemCG
Sb11deferRescan_SS6reasontSg
ySo6FPItemCG
ySo6FPItemCG
So6FPItemCG_
yyct
So6FPItemCG_
yyctSg
ySo6FPItemC
yyct
ySo6FPItemC
yyctSg
So6FPItemCG_So10NSProgressC
yyctSg
So6FPItemCG_So10NSProgressC
yyct
So6FPItemC_G
3key_
So6FPItemC_G5valuetSg
3key_
So6FPItemC_G5valuet
_pSgytIegnr_
So6FPItemCGSgXw
So6FPItemCG_GG
So13PQLConnectionCSg
yxq_GSg_
_ptKc
SayyyKcG
yxGSg_ACSbtSgyKXEKcSg
Shy2ID
Qy_G
yxq_GSgXwz_
_So6FPItemC
RzAGR_r0_lXX
So6FPItemC_G
ySo6FPItemC
So6FPItemC_G
So6FPItemC_G
So6FPItemCG
ySay
So6FPItemCGGAFG
ySo6FPItemCG
ySo6FPItemCG4from_AD2to
SS6reasont
ySo6FPItemCG_SS6reasont
G4from_AC2to
SS6reasont
G_SS6reasont
ySo6FPItemC
ySo6FPItemC
So6FPItemC_G
ySo6FPItemC
So6FPItemC_G
So6FPItemC_G
ySo6FPItemC
ySo6FPItemC
ySo6FPItemC
So6FPItemC_G
So6FPItemC_G
ySo6FPItemCGSg4from_AE2to
5diffst
GSg4from_AD2to
5diffst
So6FPItemC_G
ySo6FPItemC
So6FPItemCGSg
ySay
GSSG
ySo6FPItemC
ySo6FPItemC
_GtG
ySo6FPItemC
ySo6FPItemC
ySo6FPItemC
So6FPItemC_GtG
So6FPItemC_G
So6FPItemC_G
So6FPItemCG
So12PQLResultSetC_
So6FPItemC_GSg
So6FPItemC_G
So6FPItemC_G
So6FPItemC_G
So6FPItemC_G
So6FPItemC_G
So6FPItemC_G
So6FPItemC_G
So6FPItemC_G
So6FPItemC_G
So6FPItemC_G
ySo6FPItemC
So6FPItemC_G
So6FPItemC_G
So6FPItemC_G
So6FPItemC_G
So6FPItemC_G
So6FPItemC_G
So6FPItemC_G
So6FPItemC_G
So6FPItemC_G
So6FPItemC_G
So6FPItemC_G
ySo6FPItemC
_GSg
ySo6FPItemC
ySo6FPItemC
ySo6FPItemC
ySo6FPItemC
ySo6FPItemC
ySo6FPItemC
ySo6FPItemC
ySo6FPItemC
ySo6FPItemC
ySo6FPItemC
ySo6FPItemC
ySo6FPItemC
ySo6FPItemC
So6FPItemC_G
ySo6FPItemC
ySo6FPItemC
ySo6FPItemC
ySo6FPItemC
ySo6FPItemC
ySo6FPItemC
ySo6FPItemC
ySo6FPItemC
ySo6FPItemC
ySo6FPItemC
ySo6FPItemC
ySo6FPItemC
ySo6FPItemC
So6FPItemCGSg_
yAbDGt
Igr_
ySay
GSSG
ySo6FPItemC
GSg_
yAcDGt
So6FPItemCGSgXw
yxq_GSgXwz_
_So6FPItemC
RzAGR_r0_lXX
So6FPItemCG
ySo6FPItemC
ySo6FPItemC
So6FPItemCG
So6FPItemC_GG
ySo6FPItemC
So6FPItemCGSg
So6FPItemCG
So6FPItemCG
ySo6FPItemC
So6FPItemCG_
_pSgct
So6FPItemCG_
yyct
So6FPItemCG_
_pSgctG
ySaySny
_pIegzo_
ySO_
So6FPItemCG_So10NSProgressC
_pSgcttG
So6FPItemCG_
_pSgct
ySo6FPItemC
_pSgct
ABGSg
_GSg
G7oldItem_AC03newB0
5diffsSS6reasont
GSgSb11isRecursiveSS6reasont
G4from_Sb15mayAlreadyExistSS6reasont
GSg_ADt
ySo6FPItemCACGSg
ySo6FPItemCACG
ySo6FPItemC
ySo6FPItemCG7oldItem_AD03newC0
5diffsSS6reasont
ySo6FPItemC
ySo6FPItemCGSgSb11isRecursiveSS6reasont
ySo6FPItemCG4from_Sb15mayAlreadyExistSS6reasont
ySo6FPItemCGSg_AEt
ySo6FPItemC
ySay
ySo6FPItemC
GGAFG
So13PQLConnectionCIgg_
_pKc_ABttG
So6FPItemCGXo
_pyt
_pIegnrzo_
_pXp
ySo6FPItemC
Igr_
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
ySay
GSSG
_GSg
SSIgr_
So6FPItemCG
_GSg
ySo6FPItemCG
So6FPItemCGSgG
ySo6FPItemCGG
ytIgr_
So6FPItemCGSgXw
ySo6FPItemC
GSgXw
So6FPItemCGSgXw
yxq_G
ySd_G
qd__Sg
qd__
_pIgrzo_
yxq_GSgXw
yxq_GSgXwz_x_q_
RzADR_r0_lXX
ySi_SitSg
SbIgr_
So6FPItemCGG
Si_Sit
So6FPItemCxq_GSgXw
yxq_GG
yxq_GG
yxq_GG
_pSg
$s9libfssync14SyncStateStoreP
$s9libfssync6DumperP
So12NSFileHandleC
yxq_G
So13FPLoggerScopeC
yxq_G
yx_GSg
yx_GG
SS_yptSg
yxq_GSgXwz_x_q_
RzADR_r0_lXX
SDy2ID
yxGSgG
S2SIggo_
So10FPUserInfoC
$s9libfssync15ConflictManagerP
SgXw
SgXwz_Xx
SDySS
SaySo15FPConflictLoserCGSgSDySS
_pGIeggg_
SDySS
_pGz_Xx
SDySS
_pGAA_pSgIeggg_
So16GSStorageManagerC
3key_
_p5valuet
So15FPConflictLoserC
SDySSypG
ySS_
$sSt
$s9libfssync6BitSetP
7ElementSTQz
8RawValueSYQz
$s9libfssync29CustomStringConvertibleBitSetP
yq_G7oldItem_AAyxG03newB0
5diffsSS6reasont
Qy__
yq_GSgSb11isRecursiveSS6reasont
yxG4from_Sb15mayAlreadyExistSS6reasont
SS6reason_t
yq_xG
$s9libfssync5JobIDP
$s9libfssync16FileTreeProtocolP
8ItemType
yq_xG
yxq_GSgXw
$s9libfssync16DatabaseDelegateP
SbIegd_
yxq_G
yq_xG
yxq_GAAyq_xGIeggo_
yq_G
$ss27ExpressibleByIntegerLiteralP
$sSx
So6FPItemCGG
yxG_SS6reasont
yxG4from_AB2to
SS6reasont
Qz_SbSg11isRecursiveSS6reasont
Qz_Sb11recursivelySS6reasont
yxq_G
yxq_G
So13PQLConnectionC
yxq_G
yq_xG
So17OS_dispatch_groupC
ypSg
So15PQLQueryBuilderCSSIggo_
ySaySiGSSG
yq_xG
yxq_G
_pSg
yxq_G
G0R3_
yAAySay
GSiGSSG
yShySiGSSG
G1R1_
yxGSg4itemSu7versionSo27NSFileProviderDomainVersionCSg06domainG0t
yxGSg4itemAaBQy_Sg015destinationItemA0
y14ContentVersionABQy_010StructuralF0ABQy_GSg04baseF0
6fieldsSu7versionSo020NSFileProviderDomainF0CSg06domainF0t
Qz_AaBQy_Sg015destinationItemA0
y14ContentVersionABQy_010StructuralE0ABQy_GSg04baseE0SbSg9recursiveSo020NSFileProviderDomainE0CSg06domainE0t
yxGSg4item
7newNameSu7versiont
Qz_xSg4itemt
yxq_G
yq_xG
$s9libfssync8SQLTableP
$s9libfssync12CodableClassP
Qy_3for_So10FPDRequestC2byt
Qy_Sg04itemA0_So10FPDRequestC2byt
Qy_2of_So10FPDRequestC2byt
y2ID
QzAbCQy_G2of_So10FPDRequestC2byt
y2ID
QzAbCQy_G2of_
8priorityt
Qy_5below_So10FPDRequestC2byt
So10FPDRequestCSg2by_
8priorityt
8priority_t
Qy_5below_t
SS9signature_
8provider
6domain
14itemIdentifiertSg
z_Xx
_pIgrzo_
So26OS_dispatch_source_data_or_p
yq_G
SDySS
yxq_GG
So17OS_os_transaction_pSg
yxq_GSg
SDy2ID
yxq__GG
SDy2ID
Qy_Say
yq_xG_
_pSgctGG
SDy2ID
QzSay
yxq_G_
_pSgctGG
yxq_G_y
_pSgctG
SDy2ID
QzSay
yxq_G_
_pSgctGG
yxq_GG
yxq_GSayy
_pSgcGG
yq_G
yxq_GG
y2ID
QzAbCQy_G
yxq_GG
yxq_GSgG
SDySO
yxq_G_So10NSProgressC
_pSgctG
SDy2ID
yx_GG
_pSgc
ySiG
yxq__G
_pIegoddzo_
yxGSg
Sg5oldID_AB03newB0t
Sg6bugfixt
ypSg_SSt
$s9libfssync12SQLFieldTypeP
9SQLFields
17SQLFieldsSequence
_7ElementSTQZ
17SQLFieldsSequence
$s9libfssync15SQLSingleColumnP
$s9libfssync23SQLCodableTableAccessorP
6Fields
$s9libfssync10SQLCodableP
6Fields
Qy_xc
SDyxypG
SbSPy
So6NSUUIDC
yxq_G_
GSpySo8NSObjectCSgGSgSpyypGSgytIeglllr_
y2ID
QzAbCQy_G
yxq_G_Si03rowA0tG
SDySi
yxq_GG
SaySiG
So6FPItemCG
So6FPItemC_G
ySo6FPItemC
GSg_
ySo6FPItemC
Iegr_
Iegr_
So6FPItemCGSg_
So6FPItemCGSg_AFt
So6FPItemCG_AEt
ySo6FPItemC
G_AEt
So6FPItemC_GSg
ySo6FPItemCG
yxq_G
yAAySay
GSiGSSG
ySay
Sg_ABt
yxq__G
yxq__GG
SDy2ID
QzxG
SDy2ID
QzxGz_x_
RzlXX
yxSg
_pGSgz_x_
RzlXX
SayxG
Ieggd_
4nsec_t
So18FPProgressProtocol_pSgXw
SgXw
ySo6FPItemC
So6FPItemCGG
$s9libfssync7VersionP
ySsG
ySny
SgtG
ySo6FPItemC
So6FPItemC_Gt
So6FPItemCGG
ySo6FPItemC
ySo6FPItemC
_pSgcG
SgtG
GSg_ABySo6FPItemCGSg
So6FPItemCGG
yyKc
yyyKcG
So6FPItemCG_y
_pSgct
So6FPItemCG_y
_pSgctG
So6FPItemCG_yyct
ySo6FPItemC
2id_AB8parentIDSS8filename
Sg11contentTypetG
SgXw
So10NSProgressC
Ieg_SgIeggggo_
So6FPItemC
So16FPDDomainIndexerC
SgSg
So18FPSpotlightIndexerCSg
_pGIegn_
ySaySo6FPItemCG_SaySo0A2IDCGSb
ySaySo6FPItemCG_SaySo0A2IDCGSb
_pGIegn_
GSg_AAySo6FPItemCGSg
SaySo6FPItemCG_SaySo0A2IDCGSb
SiSg
SgSg
yq_G
y2ID
QzAbCQy_GG
So27NSFileProviderDomainVersionCSgt
yxq__GSg
yxq__G
y2ID
QzG_
y14ContentVersionADQz010StructuralC0ADQzGt
_pGIegn_
yxq__G
y2ID
yxGSg_So27NSFileProviderDomainVersionCSgt
yxq__G
yxSg_So27NSFileProviderDomainVersionCSgt
yxq__G
yx_G
SDy2ID
yxGG
yxq__G
SDy2ID
yxGGz_x_q_
RzAGR_r0_lXX
yxq__G
yxq__G
yxq__G
yxq__G
_q_t
15capturedContent_x4itemtSg
yxq__G
yx_G
3for_
Sg4witht
Sg4with_t
_p4with_t
yxq__G
yxq__G
SgSg
So13PQLConnectionC
_pIggrzo_
So13PQLConnectionCSbIggd_
So13PQLConnectionC
_pIggrzo_
6fileID_
8genCounttSg
So13PQLConnectionC
6fileID_
8genCountt
_pIggrzo_
So13PQLConnectionCyt
_pIggrzo_
So13PQLConnectionCSb
_pIggrzo_
yxq__G
yxq__G
$s9libfssync16VFSIDLookupCacheP
SbSgSg
ShySo17NSFileCoordinatorCGG
So16NSOperationQueueC
So15FSChangeMonitorC
So20FSChangeSubscriptionCSg
So18OS_dispatch_sourceCG
_pSgXw
ySi_SitSg
_pGIegg_
ySi_SitSg
_pGIegn_
So17NSFileCoordinatorCSg
_pSgIeggg_
ySo17NSFileCoordinatorCG
ySo18NSFileAccessIntentCG
So18NSFileAccessIntentC
Sg_So27NSFileProviderDomainVersionCSgt
SaySsG
GSg_So27NSFileProviderDomainVersionCSgt
_pGIegn_
z_Xx
So18NSFileAccessIntentCSg
GSg_So27NSFileProviderDomainVersionCSgt
_pGIegn_z_Xx
So18NSFileAccessIntentCSgz_Xx
GGz_Xx
ySaySny
_pGIegg_
ySaySny
_pGIegn_
ySo15FPConflictLoserCG
_pGIegn_
_pIgnzo_
SgXw
SgXwz_Xx
So6FPItemCGm
So6FPItemCGmG
ySo6FPItemC
ySo6FPItemC
So6FPItemCGG
ySo6FPItemC
So6FPItemCGG
ySo8FPItemIDCG
ySo6FPItemCG
ySo7NSErrorCG
ySo18FPProgressProtocol_pG
ySiG
So6FPItemCGG
_pGIegn_
ySo10GSAdditionCG
ySo5FPTagCG
So6FPItemCGG
ySo18FPTestingOperationCG
_GABySi_GG
_GACySi_GGSo17OS_dispatch_queueCG
So9OS_os_logC
GSSyt
_pIgygrzo_
GSgSPy
GSgAAIgyyyd_
GSgSb
Igyyd_
GSgAC
Igyyyd_
_pIgygrzo_
_pIgygrzo_
GSgAAIgyyd_
yxq_GSgycSg
SaySSG
ySiG
So17OS_dispatch_queueCSg
yxq_G
yxq_G
yxq__G
_pGSg
_pIgrzo_
yxq_GSgXw
yxq_GSgXwz_x_q_
RzADR_r0_lXX
G0R0_
ySi_G
ySi_GSo17OS_dispatch_queueCG
_pGSg
_pIgrzo_
$ss10SetAlgebraP
$sST
_rawValue
rawValue
type
creator
RawValue
_ObjectiveCType
ArrayLiteralElement
Element
_nsError
st_dev
st_mode
st_nlink
st_ino
st_uid
st_gid
st_rdev
st_atimespec
st_mtimespec
st_ctimespec
st_birthtimespec
st_size
st_blocks
st_blksize
st_flags
st_gen
st_lspare
st_qspare
urls
domain
recursively
offset
limit
directoryEnumerationOptionsFor
item_handle
metadata
pathlen
_ErrorType
Code
tv_sec
tv_nsec
file_id
parent_id
doc_id
gen_count
name
padding
permissions
document_size
creation_time
modification_time
last_use_time
favorite_rank
tag_data
__Anonymous_field21
os_type
closest_sync_root
physical_size
before_bounce_filename
quarantine_info_size
quarantine_info
syncable_xattrs
protection_class
collaboration_identifier
__finder_color
xattr_data
xattr_length
label_color
next
value_size
deviceUUID
pathBasedStreamEventID
docBasedStreamEventID
streamMode
offset
containerListVersion
version
RawValue
observedID
domain
reader
deviceUUID
shouldSignalChange
observer
localFileEnumerator
shouldUpdateFileIDInGenstore
fsChangesEnumerator
observedID
itemURL
urls
domain
notifier
enumerators
enumeratorsQueue
currentToken
numberOfChanges
numberOfReaderCaughtUp
observedID
domain
reader
observer
startupFSEventID
source
stream
streamQueue
originalFSEventID
lastProcessedFSEventID
urls
domain
mode
latency
verbose
ownerDescription
delegate
gatherPhaseResumeStatus
sema
pathBased
docIDBased
deletionOccurred
canResume
cantReplayHistoricalFSEvents
RawValue
queue
localDomain
barrierURL
timer
reader
provider
hasFired
hasNotified
onStabilize
cachedRootInodeNum
cachedRootDeviceID
displayName
rootURL
isDefault
version
RawValue
itemIdentifier
parentItemIdentifier
filename
contentType
capabilities
documentSize
childItemCount
creationDate
contentModificationDate
lastUsedDate
tagData
favoriteRank
isTrashed
isAncestorInTrash
itemVersion
isExcludedFromSync
typeAndCreator
mostRecentEditorNameComponents
isUploadedTestingImpl
isDownloadedTestingImpl
fileURL
fp_isUbiquitous
fp_spotlightDomainIdentifier
fileSystemFlags
extendedAttributes
conflictingVersions
decorations
domain
isFolder
isPackage
isRegularItem
$__lazy_storage_$_containerItem
container
isHidden
isRoot
isTrash
isParentedToRoot
domain
appRegistry
version
monitoredAppsByID
queue
forwardDeletionToSpotlightOnUpgrade
persistToDiskOnUpgrade
containers
sversion
displayName
rootURL
isReadWrite
RawValue
rootID
domain
fileEnumerator
containerSnapshot
_nsError
_rawValue
rawValue
location
length
_os_unfair_lock_opaque
dev_id
dir_id
generation_count
read_count
unread_count
needs_seek
root_path
fsid
device_id
root_fd
fs_root_fd
data_protection_class
step_ino
quarantine_name
RawValue
_ObjectiveCType
ArrayLiteralElement
Element
Code
_ErrorType
width
height
returnIfAlreadyOnFS
propagateToFS
reconciledWithFP
fpID
shouldBeHidden
isImported
d_ino
d_seekoff
d_reclen
d_namlen
d_type
d_name
database
deleteChildren
updateOnlyIfExist
updateOrInsert
delete
none
rowID
oldEntry
newEntry
changedFields
persistAction
observer
logger
backend
vfsItemID
fpItemID
extensionEnumerator
lifetimeExtender
keepAlive
invalidated
cancellable
previousAnchor
_currentAnchor
changedItemsByID
deletedItemsIDs
addUnappliedFields
removeUnappliedFields
addNeedsDelete
updateIsRecursivelyDeleted
updateNeedsEmptyingBeforeDeletion
updateDeleteIgnoredItem
updateParentDeleted
updateBaseVersion
updateDomainVersion
updateContentStatus
updateDiskImportStatus
updateSchedulingState
updateMaterializationStatus
updateCapturedContent
setDeletionRunning
setRejected
unbind
setWasDatalessOnDiskBeforeImport
createItem
bindItemIDs
deleteReconciliation
deleteChildrenReconciliations
addCollidingItemID
removeCollidingItemID
onOther
onMain
setItemFlockStatus
updateSchedulingOrder
rawValue
ArrayLiteralElement
RawValue
Element
Iterator
RawValue
StringLiteralType
ExtendedGraphemeClusterLiteralType
UnicodeScalarLiteralType
rawValue
RawValue
kind
childItemCount
posixPermissions
creationDate
contentModificationDate
isLocked
isHidden
isEvictable
isPinned
isInPinnedFolder
isPathExtensionHidden
beforeBounceFilename
isSyncRoot
isIgnoreRoot
isInIgnoreRoot
closestSyncRoot
isDataless
size
physicalSize
isPackage
hasBundleBit
lastUsedDate
tags
favoriteRank
extendedAttributes
quarantineBlob
osType
isResurrected
linkCount
collaborationIdentifier
providerDomainID
nsDomain
manager
appSupportURL
rootURL
wharfDirectoryURL
dbDirectoryURL
dbURL
temporaryDirectoryURL
appSupport
cloudStorage
startDate
deletionDetectionDate
hasSeenBusy
isStale
backoff
timeSource
side
table
throttleColumns
keyColumns
deleteDisabledThrottles
disableRetries
nextRetryDate
database
waitGroup
hasPendingDeletionBackoff
xpcActivityRegistered
jobThrottlingParameters
itemThrottlingParameters
fileTreeThrottlingParameters
SQLFields
SQLFieldsSequence
delayedContinuation
jobRunningAtStartup
upcallSoftTimeout
upcallHardTimeout
workingSetEnumeratorExcessiveTime
kind
itemID
jobType
AllCases
RawValue
itemBound
itemEmptyInSnapshot
itemMaterializedOnDisk
itemMaterializationCompleted
itemEvicted
itemUpdatedInFSSnapshot
itemUpdatedInFPSnapshot
itemDeletionRejectedInFS
itemDeletionRejectedInFP
itemDeletedWhileNotInSnapshot
itemContentStatusChanged
itemDiskImportStatusChanged
throttle
throttleExpired
itemMaterializationFailed
itemEvictionFailed
capturedContentReleased
itemRescanned
itemUnbound
itemContentCaptured
requestCompleted
jobScheduled
jobContinuationScheduled
jobCompleted
streamIsIdle
meaningfulRecursivePropertyChange
evictabilityCanBeSet
cycleDetected
release
itemIgnoreStateChanged
moveOutCompleted
parentHierarchyIsIgnored
itemReadyToDelete
itemChildrenDeletedOrMoved
readyToDelete
itemUnpaused
flushed
diskImportAllowed
startup
childOf
childOfItemReconciledWith
parentOf
ancestorOf
ancestorOfItemReconciledWith
pathMatchingSiblingOf
anyPendingRecursiveDeletionRoot
conditions
jobTypes
itemID
anyInconditionally
rules
activeRules
blockedJobsRules
aggregators
createItem
updateItem
fetchItem
listFolder
recursivelyDeleting
fetchEventStream
runningJobs
blockedJobs
blockingRules
jobID
database
pending
verified
root
trash
regular
SQL_BACKUP_MANIFEST_SCHEMA_VERSION
database
table
resourceValuesToFetch
side
table
schedulingColumns
throttle
deleteFinishedJobs
database
rowID
cancellable
client
idMap
request
backend
extender
handle
isDir
extent
extentOffset
extentLength
RawValue
wrapped
itemIdentifier
requestor
timeout
timeoutState
domain
queue
tracker
fetchProgressByItemID
uploadProgressByItemID
schedulingState
pauseAffordanceTimerSource
pauseHardTermination
lastReceivedUpdate
forceFlattenedPackages
$__lazy_storage_$__cachedRTCReporter
previousSequenceNumber
workingSetSyncAnchor
progress
requestor
subscriber
progressReportingCancellable
progressCalculatingCancellable
noProgressSoftDelay
noProgressHardDelay
expirationDate
expirationPolicy
progressPerURL
cancelledRequests
cancelledBinaries
source
lastChangeDate
notificationPresenter
rtcReporter
wait
cancel
binaryPath
request
uuid
expiredPOSIXCall
staleDownload
unresponsiveApplication
wrapped
ItemA
ItemB
ContentVersion
StructuralVersion
fileID
genCount
size
parentID
name
metadata
nonSyncableAttributes
contentVersion
cachedURL
deviceID
docID
domain
providerDomainID
nsDomain
pathsManager
__cachedURL
__fpfs
backingStoreIdentity
queue
startupQueue
itemChangedQueue
workingSetChangedQueue
pendingSetWatchingQueue
startStatus
itemsChangedSource
enumerationAnchorChangedSource
runningEnumerator
pendingSetSource
initializationGroup
started
invalidated
progressMonitor
periodicFPCKRunner
pendingSetState
onActivatePendingSetNotification
pendingSetStateURL
errorGenerationRecord
_signaledErrorGenerationDebouncer
uuid
refreshDate
previousRefreshDate
currentItems
updatedItems
deletedItems
currentDomainVersion
domainVersionChanged
persistedState
lastEnumeratedRefreshDate
failure
shouldRestart
enumerator
valueCache
subscription
propertyQueue
vfsCounters
dbCounters
fsSnapshotCounters
fpSnapshotCounters
jobsWaitingForPersistence
jobsNeedingFlushRunning
fsJobsNeedingFlushWaitingForFlush
fpJobsNeedingFlushWaitingForFlush
isStarving
reconciliationTable
jobRegistry
snapshotA
snapshotB
syncState
operationCancelled
unknownItem
itemDeleted
materializationFailed
evictionFailed
itemNotFound
itemCollision
cannotBounce
directoryNotEmpty
itemMismatch
lookupNotPermitted_OBSOLETE_DO_NOT_USE
itemContentVersionMismatch
collidingItemChangedBeforeBounce
capturedContentMissing
itemNotEvictable
directoryChangedWhileEnumerating
downloadCancelled
itemKindMismatch
itemIsFlockedCanNotPropagate
itemNeedDelayPropagation
uploadCancelled
uploadInterrupted
expectedContentVersion
receivedContentVersion
itemID
expectedItemID
receivedItemID
currentContentVersion
expectedStructuralVersion
currentStructuralVersion
requestedContentVersion
availableContentVersion
requestedStructuralVersion
availableStructuralVersion
filename
below
parentID
contentVersion
structuralVersion
contentUnavailable
versionConflict
lookupNotPermitted
itemType
RawValue
main
other
tracker
invalidated
rowID
RawValue
propagationJob
propagatedVersion
propagatedSnapshotVersion
requestedState
actualItem
stillPendingFields
shouldFetchContent
domainVersion
error
pendingReconciliation
pendingParentImport
pendingSelection
scanningDisk
scanningProvider
pendingCleanup
databaseError
databaseInitError
reimportRoot
reimportFolder
reimportDataless
reimportRemovingCachedItems
partialReimport
AllCases
RawValue
SQLFields
SQLFieldsSequence
fileID
testContent
location
length
AllCases
RawValue
capturedContent
schedulingState
itemID
deletionStatus
unappliedFields
materializationStatus
contentStatus
diskImportStatus
wasDatalessOnDiskBeforeImport
genCount
size
parentID
filename
contentVersion
structuralVersion
domainVersion
schedulingOrder
kind
collidingItemIDs
itemIsFlocked
rank
sourceItemID
domainVersion
sourceItemSnapshotVersion
otherVersion
requestedState
capturedContent
revivedIDAndVersion
diffs
itemID
baseVersion
parentID
snapshotVersion
isRecursive
targetItem
itemChangedDuringPropagation
parentItemNotYetPropagated
rootIsPinnedCache
invalidated
ItemA
ItemB
priority
timestamp
rawValue
RawValue
dumper
indent
remapped
exposed
hidden
ContentVersion
StructuralVersion
SQLFields
SQLFieldsSequence
capabilities
isUploading
isUploaded
uploadingError
downloadingError
isExcludedFromSync
isShared
isTopLevelSharedItem
isSharedByCurrentUser
preformattedOwnerName
preformattedMostRecentEditorName
lastEditedByCurrentUser
sharingPermissions
isContainer
isContainerPristine
appContainerBundleIdentifier
cloudContainerIdentifier
containerDisplayName
displayName
hasUnresolvedConflicts
itemDecoration
userInfo
contentPolicy
inheritedContentPolicy
conflictingVersions
lastEditorDeviceName
AllCases
RawValue
Element
Iterator
RawValue
ArrayLiteralElement
rawValue
item
stillPendingFields
shouldFetchContent
fileTreeChangesHandler
newJobLockAggregator
itemLockingChangeHandler
canSetEvictabilityHandler
concurrentOperationLimit
concurrentContentUpdateLimit
concurrentProvideFileLimit
hasPlannedRescan
publishHandler
wharf
itemChange
forgetChange
resetStream
streamIsIdle
streamWasSignaled
updatedItems
deletedIDs
hasMore
continuation
numberOfFilesChecked
numberOfBrokenFilesInFSAndFSSnapshotCheck
numberOfBrokenFilesInFSSnapshotAndFPSnapshotCheck
accumulatedSuccesses
accumulatedErrors
accumulatedDomains
totalDatalessItems
totalMaterializedItems
accumulatedFileSizes
accumulatedSizeOfDisk
accumulatedDownloads
accumulatedUploads
multipleHardlinksExtensions
telemetryReport
fsSnapshotChecker
fpSnapshotChecker
openBackupDatabases
providerDomainID
usingFPFS
isCiconia
diskVsFSSnapshotIgnoredFilenames
launchOptions
shouldPause
discoveredDiskBrokenInvariantsCounters
repairedDiskBrokenInvariantsCounters
discoveredDiskVsFSSnapshotDiffCounters
repairedDiskVsFSSnapshotDiffCounters
discoveredFSSnapshotVsFPSnapshotDiffCounters
discoveredReconciliationTableBrokenInvariantsCounters
providerVersion
rawValue
ArrayLiteralElement
RawValue
Element
Iterator
roDB
invalidated
uuid
onError
onNextDurableFlush
flushTimer
isUnsafe
historyTable
enumerationAnchorChanged
onEnumerationAnchorChanged
lastPropagationDateChanged
onLastPropagationDateChanged
onEnumeratorShouldUpdate
onFolderHasBeenIgnored
itemWithPinningChange
itemForEvictabilityReevaluation
keepDownloadedItemsWithDatalessParent
vacuumBatchSize
hasRunTableVacuum
hasRunWharfVacuum
isVacuumInProgress
rawValue
RawValue
unlockedValue
lock
fpfs
dbUUID
updatedItemsRank
deletedIDsRank
wrapped
extraLogs
snapshotMutations
reconciliationMutations
jobs
domainVersion
currentPosition
completed
rootFD
limit
lookupScope
lookupCache
domainID
rootURL
positionDirectoryID
positionGenerationCount
positionReadCount
positionUnreadCount
positionOffset
RawValue
running
pausingUploads
dbUUID
dbBugfixRevision
fsStreamUUID
fsStreamEventID
fpStreamSyncToken
domainVersion
featureFlags
schedulingState
errorGeneration
RawValue
rawValue
ArrayLiteralElement
Element
Iterator
string
indent
handle
dumper
data
itemVersion
metadata
content
ledn
RawValue
position
roDB
table
itemColumnCount
itemColumns
nonSyncableAttributesColumns
nonSyncableAttributesColumnsCount
cacheByID
cacheCleared
RawValue
parentID
filename
metadata
limit
executionTimer
executionIsTooLong
onNewSlot
runningJobs
currentJobsLimit
softJobsLimit
hardJobsLimit
fetchContentJobsForA
fetchContentJobsForB
updateContentJobsForA
updateContentJobsForB
otherJobsForA
otherJobsForB
backgroundDownloads
main
other
relativePath
fileID
docID
genCount
isDirectory
Element
update
delete
create
none
SQLFields
SQLFieldsSequence
metadata
itemID
parentID
filename
fileID
genCount
contentVersion
structuralVersion
wrapped
ContentVersion
StructuralVersion
parentID
version
name
filenameBeforeBounce
metadata
nonSyncableAttributes
fsRecursiveProperties
fpRecursiveProperties
unsupportedFields
limitSlot
state
schedulingOrder
reason
itemID
name
color
tags
Element
Iterator
RawValue
ArrayLiteralElement
rawValue
wrapped
ItemA
ItemB
docID
fileID
root
trash
dbUUID
anchor
forSnapshotA
forSnapshotB
rawValue
IntegerLiteralType
Stride
RawValue
pendingSetUUID
pendingSetRefreshDate
offset
isInitialGathering
fileID
parentID
docID
genCount
name
snapshotForDomainID
fsForDomainID
filesCheckedDuringDiskEnumeration
filesCheckedDuringFSSnapshotEnumeration
FSSnapShotGivenRootID
basePath
side
insertIntoSnapshot
updateSnapshot
deleteFromSnapshot
deleteChildrenFromSnapshot
none
initialState
state
resolvedWithDB
rawValue
ArrayLiteralElement
RawValue
Element
Iterator
fsItemJobs
fpItemJobs
backgroundDownloader
deleteFinishedJobs
throttleWaitGroup
fsOrFPJobColumns
creationJobTypes
propagationJobTypes
rawValue
rowID
computation
$__lazy_storage_$_value
creation
update
deletion
bounce
fetchContent
listChildren
ingestEvent
fetchMetadata
subTables
capabilities
isUploading
isUploaded
uploadingError
downloadingError
isShared
isTopLevelSharedItem
isSharedByCurrentUser
preformattedOwnerName
preformattedMostRecentEditorName
lastEditedByCurrentUser
sharingPermissions
collaborationIdentifier
isContainer
isContainerPristine
appContainerBundleIdentifier
cloudContainerIdentifier
containerDisplayName
displayName
hasUnresolvedConflicts
itemDecoration
userInfo
contentPolicy
inheritedContentPolicy
conflictingVersions
lastEditorDeviceName
keys
values
wrapped
name
RawValue
downloadRequest
deletionRequest
coordination
urlForItemIDResolution
enumerationOf
itemCreation
urlEvictionRequest
forceIngestion
forceIngestionForItemID
itemEvictionRequest
startDownload
backgroundDownload
pinItem
unpinItem
ignoreItem
unignoreItem
singleItemChange
bulkItemChange
trashItem
materializeParentHierarchy
uploadBarrier
stabilization
listTestingOperations
runTestingOperations
testingHarnessMaterialization
testingHarnessEviction
testingHarnessPropagation
testingHarnessBarrier
swapped
backgroundWork
testingHarnessStabilization
testingHarnessScheduling
RawValue
AllCases
document
directory
symlink
finderAlias
Element
Iterator
RawValue
ArrayLiteralElement
rawValue
queueStorage
wasReopenedForReading
optionsStorage
schedulerQueueStorage
schedulerIsEnabled
scheduleStateStorage
onSchedulingStateChange
source
backgroundDownloadLimit
jobLockForAStorage
jobLockForBStorage
isCancelling
persistenceCounterStorage
tracker
jobGroupStorage
wharf
runningJobMap
runningJobsOSTransaction
schedulerOSTransaction
$__lazy_storage_$_swappedStorage
telemetry
materializationWaiters
propagationFromFPWaiters
propagationFromFSWaiters
stabilizationWaiters
ingestionFromFSWaiters
fsBarrierWaiters
fpBarrierWaiters
flushWaiters
testingOperationWaiters
ingestionSource
fsChanges
fpChanges
jobSchedulerEpoch
domainVersionStorage
triggersEnabled
pendingTriggers
pendingReconciliations
delegateStore
osLog
shouldDumpState
counters
finishedUploadJobs
finishedDownloadJobs
uploadJobs
downloadJobs
_isInDiskImportStorage
isUpcallTimeoutSchedulerRegister
flushCount
resetDate
rawValue
materialization
maximumQoS
completions
changes
position
resetStream
streamIsIdleWithLongWait
streamWasSignaled
positionPersisted
ArrayLiteralElement
RawValue
Element
Iterator
itemID
item
lock
vfsRootHasChanged
cannotOpenDatabase
cannotInitializeDatabase
unsupportedDatabaseVersion
invalidateValueType
inconsistentDatabase
SQLFields
SQLFieldsSequence
state
retryCount
nextRetryDate
lastErrorDate
lastError
priority
domainWideError
AllCases
RawValue
invalidValue
unexpectedNull
parent
converter
table
Fields
deviceID
rootInode
trashInode
disableTrash
shouldSyncXattr
rootURL
trashURL
database
providerDomainID
usingFPFS
state
runnable
idle
running
paused
minimumNsecsBetweenRetries
maximumNsecsBetweenRetries
nsecsBeforeForgettingCounter
finalRetryCount
randomizeDelays
delayBeforeDeletion
delayBeforeRescan
none
notAuthenticated
delayedContinuation
insufficientQuota
serverUnreachable
cannotSynchronize
excludedFromSync
upcallTimeout
disabled
pending
expired
state
priority
retryCount
nextRetryDate
lastErrorDate
lastError
domainWideError
RawValue
directoryID
page
anchor
RawValue
entry
rowID
fsRootID
fpRootID
columns
prefixedColumns
entryCachePerID
entryCachePerRowID
notDirectoryKinds
interestedContents
itemID
lastChange
reconcilition
isDataless
fileID
parentID
recursiveDatalessCount
recursiveEvictableCount
recursiveDisallowDeletionCount
recursiveDisallowExclusionCount
isPinned
isInPinnedFolder
nonSyncableAttributes
createItem
updateItem
deleteItem
fetchItemMetadata
deleteFolderFromSnapshotIfEmpty
reSnapshotChildren
fetchChildrenMetadata
materializeItem
evictItem
evictChildren
bounceItem
collectCapturedContent
deleteRejectedItemFromTree
markDirectoryDiskImportDone
faultDirectoryInTree
cancelFetchFileContent
diskImportFinished
continueDiskImport
unfaultDirectoryInTree
unfaultDirectoryAndChildren
mergeItems
materializeParentHierarchy
cancelUpdate
fetchContent
fetchEventStream
materializeIgnoredItem
unblockEvictability
markPackagesAsEvictable
markPackagesAsSyncRoot
unblockIgnoreFolderProcessing
ignoreChildrenOfIgnoredHierarchy
markDirectoriesAsLocked
deferredRescan
markParentDeleted
unpauseReconciliation
retriggerResolvedVendorExclusion
resolveItemEvictability
populateConflicts
cleanConflicts
updateClosestSyncRoot
rescanParentDeletedChildren
RawValue
SQLFields
SQLFieldsSequence
state
order
reason
sourceItemID
sourceItemSnapshotVersion
targetItemID
targetFilename
bouncingContext
capturedContent
diffs
domainVersion
metadata
parentID
filename
conditions
continuation
priority
timestamp
side
type
AllCases
ItemType
continueScan
abortScan
scheduleAfter
scheduleAfterCondition
scheduleBeforePendingJobs
scheduleAfterPendingJobs
proxies
activeCounters
doneCounters
kind
noActivity
publishedProgress
rootURL
count
size
proxy
rawValue
ArrayLiteralElement
RawValue
Element
Iterator
snapshotForDomainID
reconciliationForDomainID
filesCheckedDuringFPSnapshotEnumeration
content
structure
lastEditorDeviceName
testContent
extent
uploadProgress
downloadProgress
waitingItemsWatchingQueue
waitingItemsSource
engineUUID
rawValue
requestEffectivePID
prettyDescription
enumerator
lastIndexedAnchor
spotlightIndexer
deletionStatus
unappliedFields
materializationStatus
version
contentStatus
diskImportStatus
wasDatalessOnDiskBeforeImport
schedulingState
capturedContent
domainVersion
itemIsFlocked
kind
collidingItemIDs
schedulingOrder
rank
notInterested
snapshotting
watching
importingFromDisk
partiallyMaterialized
materializing
evicting
materializingParent
rawValue
propagateAtoB
propagateBtoA
nothingToDo
alreadyBusy
deleteReconciliation
delayPropagation
readyToPropagate
nothingToPropagate
RawValue
ArrayLiteralElement
Element
Iterator
itemID
snapshotVersion
targetFilename
bouncingContext
domainVersion
requestedState
baseVersion
parentID
filename
otherCollidingItemID
otherCollidingFilename
otherCollidingParentID
RawValue
fileTree
database
side
canSetEvictability
counters
datalessChildren
nonEvictableChildren
evictableChildren
disallowedDeletions
disallowedExclusions
createCount
updateCount
deleteCount
resetDate
ItemType
order
updateEpoch
SQLFields
SQLFieldsSequence
kind
isDataless
size
isLocked
posixPermissions
creationDate
contentModificationDate
lastUsedDate
tagData
favoriteRank
isPackage
isHidden
isPathExtensionHidden
childItemCount
extendedAttributes
physicalSize
isEvictable
isPinned
isInPinnedFolder
beforeBounceFilename
quarantineBlob
isSyncRoot
isIgnoreRoot
closestSyncRoot
osType
linkCount
collaborationIdentifier
AllCases
RawValue
userURL
outputUserURL
destinationDirectoryURL
backupManifestURL
targetItem
capturedContent
sourceID
targetID
queue
pathmon
AllCases
RawValue
waiting
runnable
running
failed
cancelled
completed
userURL
fpDatabaseURLs
targetItem
URLBackedItem
_isCaseSensitive
lookupScope
coordinatorPurposeIdentifer
runningCoordinators
coordinatorsByItemID
operationQueue
queue
tracker
fsChangeMonitor
fsChangeSubscription
tombstoneSlayer
flockedDispatchDict
flockedTimerDispatchDict
flockedGroup
_rootURL
_rootURLLock
idLookupCache
_lastFSEventID
_fakeEventSeq
lastFSEventIDShortWaitSubscription
lastFSEventIDLongWaitSubscription
eventAggregator
counters
preventedEvictabilityTable
lookupCount
scanCount
droppedEventCount
resetDate
lock
changes
statesByKey
positionPersisted
processedFileIDAndPaths
processedPaths
fileID
path
name
providerIDHash
ossignposter
signpostID
signposter
interval
label
root
fsRoot
wharfHandle
deferredWQ
invalidated
activated
requestedXattrs
reporter
database
registrationKeys
_debouncedUnregistration
registrationQueue
debounceQueue
debouncePublisher
subTables
rawValue
pending
running
throttled
ArrayLiteralElement
RawValue
Element
Iterator
[DEBUG] 
  no reader (%@) or associated barrier folder URL
[DEBUG] 
  no existing barrierGroup and denied permission to create one
[DEBUG] 
  setting up new barrier with rendez-vous %@ (currentID=%llu)
[DEBUG] 
  updating existing barrier to new rendez-vous %@
[DEBUG] 
  handle event on barrier %@
[DEBUG] Creating new FSEvent stream %s
[DEBUG] Suspending FSEvent stream %s
[DEBUG] Resuming FSEvent stream %s <XPC activity already running>
[DEBUG] Resuming FSEvent stream %s <XPC activity running>
[DEBUG] Stop processing of FSEvents on stream %s
[DEBUG] Defer processing of FSEvents on stream %s per XPC activity
[DEBUG] Observing %@ (%s)
[DEBUG] Creating stream with name %s since %llu
[DEBUG] Already need deep scan.  Dropping all incoming events
[DEBUG] Incoming events need deep scan.  Dropping all existing events
[WARNING] We still have too many events in the queue, blocking until events are flushed
[DEBUG] %@ (handling barrier - %@)
[WARNING] %lu barrier event%s not delivered, dropping!
[DEBUG] Dequeueing event: %u/%u path:'%@' fileID:%llu flags:%@ id:%llu
[INFO] fsevents id wrapped
[INFO] done processing history
[INFO] kernel dropped an event
[INFO] dropped event during the processing of the historical stream
[INFO] dropped event during the processing of the live stream
[DEBUG] %@ ignore event #%llu (own event)
[DEBUG] Historical stream is being processed - enqueuing barrier event %@
[DEBUG] %@ (dropped event)
[DEBUG] %@ (ignored uninteresting path)
[ERROR] Cannot stat root at '%@' after fsevent:%{errno}d
[CRIT] The root fileID changed from %llu to %llu
[INFO] %@ root needs deep-scan
[DEBUG] %@ processing
[DEBUG] 
%llx closing the %@
[DEBUG] resetting the %@ because of %@
[DEBUG] 
%llx reset: drained all fsevents from the old stream
[DEBUG] creating the new stream
[DEBUG] suspending - suspendCount:%d->%d
[DEBUG] resuming - suspendCount:%d->%d
[DEBUG] Starting FSEvents stream
[ERROR] Dropping FSEvent, eventPaths=%p with numEvents=%zd (eventInfo.count=%lu): %@
[DEBUG] draining %zd fsevents
[DEBUG] Enqueuing event: %zd/%zd %@
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.FileProvider.LocalStorage</string>
<key>com.apple.fileprovider.enumerate</key>
<true/>
<key>com.apple.private.MobileContainerManager.otherIdLookup</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.security.container-required</key>
<true/>
<key>com.apple.private.security.storage.MobileDocuments</key>
<true/>
<key>com.apple.private.vfs.authorized-access</key>
<true/>
<key>com.apple.private.vfs.open-by-id</key>
<true/>
<key>com.apple.private.vfs.skip-mtime-updates</key>
<true/>
<key>com.apple.security.app-sandbox</key>
<true/>
<key>com.apple.security.application-groups</key>
<array>
<string>group.com.apple.FileProvider.LocalStorage</string>
</array>
<key>com.apple.security.exception.files.absolute-path.read-only</key>
<array>
<string>/</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>/Containers/</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.lsd.mapdb</string>
</array>
</dict>
</plist>
+ p,
@.1`.
/.docid
.DS_Store
.DS_Store
silaSCAM
BLOB
BLOB
BLOB
NSFileProviderItemDecorationIdentifier
NSFileProviderFileSystemFlags
NSFileProviderTypeAndCreator
NSFileProviderItemCapabilities
NSFileProviderItemIdentifier
Code
NNSFileProviderErrorCode
NSFileProviderItemFields
FileAttributeKey
NNSFileAttributeKey
CFUUID
NCFUUIDRef
NSFileProviderSyncAnchor
fpfs_fileattrs
URLResourceKey
NNSURLResourceKey
LocalStorageFileProvider
FSDirectoryEnumerator
stat
__C_Synthesized
NSFileProviderError
NNSFileProviderErrorCode
fpfs_metadata
fpfs_item_handle
EnumeratorOptions
fpfs_xattr
__Unnamed_union___Anonymous_field21
fpfs_tag_data
fpfs_finder_color
FSChangeToken
CodingKeys
FSChangesNotifier
LocalChangesObserverContext
LocalFileEnumerator
FSChangesEnumerator
FSEventReaderDelegate
FSEventReader
FSEventChecker
FSEventReaderGatherPhaseResumeStatus
FSEventReaderMode
LocalFileProvider
BarrierDelegate
LocalDomain
CodingKeys
LocalItem
LocalItemContext
LocalContainerMonitor
LocalContainerSnapshot
CodingKeys
LocalContainer
LocalRootEnumerator
delete/
wharf
fpfs_pagetoken
os_unfair_lock_s
FPCKOptions
FileOperationKind
NNSProgressFileOperationKind
FSFlockTypes
FPXPCAutomaticErrorProxyTimeout
FPProviderDomainID
CFRange
NSFileProviderPage
NSFileProviderContentPolicy
SWCollaborationIdentifier
FPDomainState
_NSRange
ReadingOptions
NNSFileCoordinatorReadingOptions
FPDomainRemovalMode
FileProvider
Foundation
CFError
NCFErrorRef
CGSize
FPPreflightAction
NSFileProviderDeleteItemOptions
NSFileProviderCreateItemOptions
Code
NPQLSqliteErrorCode
NSFileProviderDomainIdentifier
FPProviderID
ComparisonResult
NNSComparisonResult
wharf_step
LookupBehavior
ItemLookupResult
OSLogType
Nos_log_type_t
PQLSqliteError
NPQLSqliteErrorCode
PQLPerformFlags
dirent
fsid
timespec
fpfs_item_type
ReconciliationTable
CachedEntry
PersistAction
FPFSEnumerator
%3CSdt
@O^mz
@O^mz
ReconciliationMutation
ReconciliationSideMutation
ReconciliationChildrenDeletionOptions
Filename
#+18?EMU^gnrz
ItemMetadata
CodingKeys
$'+/37;CGKOS[^gox
!*-159=AHLPTXbepz
%-6>
!,6T
PSV>
*JT^
&),/2
 &-4=CLS\_bhqy
%.4=DMPSYbjqw}
InternalPathsManager
DomainStorageKind
VFSLookupItemContinuation
CodingKeys
SQLThrottler
ThrottlingError
SQLFields
"1@O^
 /<IV
#2AP_
)6CP
#2AP_
#2AP_
)6CP
#2AP_
PersistenceTrigger
AffectedGlobalJobs
AffectedItemJobs
AffectedReconciliation
!5<
!5<
!5<
!5<
JobLockAggregator
JobLock
JobLockRuleAssociatedJobs
JobLockRule
BlockedRuleError
Registration
SchedulableJob
JobRegistry
WaitConditionStatus
FileItemIDKind
FileItemID
SQLBackupManifest
SQLItemJobRegistry
SQLItemJobID
ProxyCancellable
ProxyOperationClient
FPFSServicerExtender
FPFSOperationServicer
VFSStagedContext
CodingKeys
SwappedReconciliationTable
FPFileTreeLifetimeExtender
FPXPCNonSanitizingErrorProxy
FPFileTree
DummyEnumeratorObserver
DownloadContext
DownloadProgressNotificationPresenter
DownloadProgressMonitor
ApplicationRequest
DownloadExpirationPolicy
URLProgressKey
fractionCompleted
totalUnitCount
DownloadProgressNotificationReason
NotificationSesssion
AnyDatabaseDelegate
AnyDatabaseDelegateImpl
FSRepair
 )1:B
%0:I.
!*61
VFSVersion
VFSItem
CodingKeys
$!$)
'$'-
"(&(
libfssync
ObservedEnumerator
FPDDomainFPFSBackend
ErrorGeneration
WeakEnumerator
StartStatus
PendingSetState
Counters
CodingKeys
&->f
DatabaseDelegate
ItemA ItemB
PersistenceCounters
Database
MaterializationError
#)/7=@FLRX^dmt{
#)/7=@FLRX^dmt
(.8.K
-050
libfssync
FileTreeError
UploadInterrupted
UploadCancelled
ItemNeedDelayPropagationStruct
ItemIsFlockedStruct
ItemKindMismatchStruct
DownloadCancelled
DirectoryChangedStruct
ItemNotEvictableStruct
CapturedContentMissingStruct
CollidingItemChangedBeforeBounceStruct
CodingKeys
 @t+
ItemNotFoundStruct
ItemCollisionStruct
CannotBounceStruct
ContentUnavailableStruct
DirectoryNotEmptyStruct
VersionConflictStruct
ItemMismatchStruct
LookupNotPermittedStruct
ItemContentVersionMismatchStruct
 @-'
 @=&
 @M%
 @]$
 @ 
 @, 
 @L 
 @l 
CodingKeys
TaskTracker
LifetimeError
MaintenanceContinuation
UnblockEvictability
UnblockIgnoreFolderProcessing
IgnoreChildrenOfIgnoredHierarchy
RetriggerResolvedVendorExclusion
UpdateClosestSyncRoot
MarkPackagesAsEvictable
MarkPackagesAsSyncRoot
MarkDirectoriesAsLocked
UnpauseReconciliations
ResolveItemEvictability
RescanParentDeletedChildren
Maintenance
CodingKeys
ReconcileAfterPropagation
Reconciliation
DiskImportContinuation
ContinueDiskImport
UnfaultDirectoryAndChildren
MarkDirectorDiskImportAsDone
DiskImportFinished
DiskImport
DiskImportStatus
ReimportReason
#>Qh
)3=G
8:<S
,:PSVc
;FQ\
#'.2;AJRX[^bksz~
SQLFields
ItemReconciliationHalfSQLFields
ItemReconciliationSQLFields
PropagationJob
CreateItem
UpdateItem
DeleteItem
CancelUpdate
Propagation
PropagationError
SyncEngine
38>G
JobSchedulingOrder
JobSchedulingPriority
FPCTLTermDumper
SubFPCTLTermDumper
PackageInternalLookupPolicy
FPItem
!(+17=CIQW]ciqt}
SQLFields
FileTreeWriterCollisionOptions
ItemPropagationResult
FileTreeWriter
URLBackedFileTreeWriter
URLBackedItem
DomainBackedFileTreeWriter
FileTreeChange
ItemOrContinuation
EventStreamBatch
E%EEE+EEEEEEE1EEEEEEEEEEEEEEE7EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE?
FPCK
ReconciliationTableBrokenInvariants
FSSnapshotVersusFPSnapshotDiffs
DiskVersusFSSnapshotDiffs
DiskBrokenInvariants
'Ik|
Z]`
KYx+
"(&(
SQLDatabase
SQLDatabaseVersion
SQLBugfixRevision
Locked
ChangeEnumerator
ChangeEnumeratorAnchor
CodingKeys
JobResult
FilteringJobResult
SwappedJobResult
ConcreteJobResult
FSDirectoryLister
VFSDirectoryLister
URLDirectoryLister
CodingKeys
SyncStateStore
SyncState
SchedulingState
SyncStateKey
FeatureFlag
Dumper
StringDumper
FileDumper
DebugLogDumper
SubStringDumper
FPItemVersionData
NSFileProviderItemVersionWrapper
CodingKeys
PaginatedContinuation
SQLSnapshot
CodingKeys
ItemStateVersion
ItemState
CodingKeys
 @T=
ConflictManager
JobLimitSlot
JobLimit
JobLimitCategory
ReconciliationID
GSConflictManager
SQLBackupManifestRecord
BitSetIterator
BitSet
CustomStringConvertibleBitSet
ItemChange
$+2;
!%-1
SnapshotItemSQLFields
SwappedJobRegistry
SnapshotItem
JobID
ItemJob
Tags
CodingKeys
FSOrFPJob
FileTreeLookupOptions
FileTreeProtocol
ItemType
SwappedDatabase
VFSItemID
FileItem
ID ContentVersion StructuralVersion
FPFSMaterializedSetAnchor
CodingKeys
Mutation
 @<1
NSecTimestamp
NSecTimeInterval
FPFSPendingSetAnchor
CodingKeys
VFSItemHandle
CodingKeys
FSSnapshotChecker
DocumentTrackingTombstoneSlayer
SnapshotMutation
 @T-
FPFSID
JobReason
SQLJobRegistry
SQLVolatileJobID
SQLJobID
Lazy
&+6I
&/6E
<\v|
:[rx~
TestingOperation
 @\-
DirectionalTestingOperation
 @-
SQLHistoryTable
ItemNonSyncableAttributes
UserInfo
CodingKeys
SQLTable
CodableClass
CodableClassCodingKeys
CodableClassWrapper
Qff~
UserRequest
FileItemKind
BhHhhhNhhhhhhhVhhhhhhhhhhhhhhh\hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhd9*
Fields
ConcreteDatabase
FileTreeChangeAggregator
MaterializationRequest
ConcreteDatabaseOptions
DBCounters
DatabaseError
CodingKeys
Change
%-6.
SQLFields
SQLFieldType
SQLMultiColumn
SQLFields SQLFieldsSequence
SQLSingleColumn
SQLCodableTableAccessor
Fields
SQLCodable
SQLCodableDictionaryWrapper
SQLCodableAccessorWrapper
SQLDecodingError
VFSLookupScope
 )-2
SQLSyncStateTable
PeriodicFPCK
State
ThrottlingParameters
JobThrottlingDomainWideError
JobThrottlingState
Kind
JobThrottle
ThrottlingKey
 @,)
FileProviderPageToken
WorkingSetSyncAnchor
CodingKeys
StagedContext
SchedulableReconciliation
SQLReconciliationTable
DecoratedReconciliation
ItemIDAndLastChange
9 *4
JobCode
PlaceholderError
JobSQLFields
ItemStateSQLFields
SQLFields
 !"#$%&'(
A`aBC
FileTree
Continuation
RequestContinuation
ScanReturnCode
CodingKeys
ContinuationScheduling
FPFSGlobalProgress
WeakProxy
JobsCounter
yJobWaitCondition
FPSnapshotChecker
Version
FileItemVersion
CodingKeys
CapturedContent
FPFSSyncEngine
DecorationOptions
libfssync
DummyObserver
LifetimeExtender
FPFSIndexer
,,,,,,,!,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,'
ItemReconciliation
ItemReconciliationHalf
PropagationStatus
 @$K
ReconciledPropagationStatus
DeletionStatus
MaterializationStatus
ContentStatus
ReadOnlyWharf
BounceItem
BouncingHardlinkStagedContext
Bouncing
BouncingContext
CodingKeys
Snapshot
SnapshotCounters
SnapshotFPRecursiveProperties
SnapshotFSRecursiveProperties
CodingKeys
Schedulable
 '06?FORU[dlsy
SQLFields
FPFSSQLBackupEngine
FetchItemMetadata
FetchContent
DeleteFolderFromSnapshotIfEmpty
MarkParentDeleted
DeleteRejectedItemInTree
FaultDirectoryInTree
UnfaultDirectoryInTree
ReSnapshotChildren
DeferredRescan
FetchChildrenMetadata
FetchEventStream
CancelFetchFileContent
CollectCapturedContent
MergeItems
Ingestion
 @uG
FPDNetworkMonitor
FileTreeSide
JobSchedulingState
MaterializeItem
EvictItem
EvictChildren
MaterializeParentHierarchy
MaterializeIgnoredItem
Materialization
FPFSSQLRestoreEngine
RestoreUpgradeSchemaVFSFileTree
RestoreUpgradeSchemaFPFileTree
PopulateConflicts
CleanConflicts
Conflict
 @}N
VFSIDLookupCache
VFSFileTree
VFSEventAggregator
VFSCounters
CodingKeys
FileIDAndPath
TelemetrySignposter
Signpost
TelemetrySignpost
DocumentWharf
SQLBackgroundDownloader
BackgroundWorkReason
BackgroundWorkState
pinning
speculat
content 
direct r
policy
equest
com.apple.FileProvider.ValidationV1
.docid/
changed/
/src=
,dst=
com.apple.metadata:_kMDItemUserTags
com.apple.lastuseddate#PS
com.apple.favorite-rank.number#PS
com.apple.metadata:kMDItemFavoriteRank
can't open directory at 
[ERROR] %@ %{errno}d
[DEBUG] %@ %{errno}d
can't close directory at 
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/os-plugins/LocalStorage/extension/URL+LocalStorageAdditions.swift
NSFileProviderChangeObserver
v28@0:8@16B24
suggestedBatchSize
v24@0:8@"NSArray"16
v28@0:8@"NSData"16B24
v24@0:8@"NSError"16
OS_dispatch_source_timer
NSFileProviderItem
{NSFileProviderTypeAndCreator=II}16@0:8
B16@0:8
T@"NSString",N,R
parentItemIdentifier
filename
contentType
T@"UTType",N,R
typeIdentifier
typeAndCreator
T{NSFileProviderTypeAndCreator=II},N,R
TQ,N,R
fileSystemFlags
documentSize
T@"NSNumber",N,R
creationDate
contentModificationDate
extendedAttributes
T@"NSDictionary",N,R
tagData
trashed
TB,N,R
uploaded
T@"NSError",N,R
downloaded
downloadingError
mostRecentVersionDownloaded
shared
sharedByCurrentUser
ownerNameComponents
T@"NSPersonNameComponents",N,R
mostRecentEditorNameComponents
versionIdentifier
itemVersion
T@"NSFileProviderItemVersion",N,R
symlinkTargetPath
userInfo
@"NSString"16@0:8
@"UTType"16@0:8
@"NSNumber"16@0:8
@"NSDate"16@0:8
@"NSDictionary"16@0:8
@"NSError"16@0:8
@"NSPersonNameComponents"16@0:8
@"NSFileProviderItemVersion"16@0:8
NSFileProviderServiceSource
@24@0:8^@16
serviceName
restricted
@"NSXPCListenerEndpoint"24@0:8^@16
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
hash
T#,N,R
debugDescription
B24@0:8@"Protocol"16
OS_dispatch_source
can't encode change token
LocalStorageFileProvider/FSChangeToken.swift
encoding token should never failed
can't init change token from data blob
_TtC24LocalStorageFileProvider17FSChangesNotifier
observedID
deviceUUID
shouldSignalChange
 notifies changes on 
[DEBUG] 
%@ %@
[DEBUG] 
v16@?0@"NSError"8
notifying changes up to FSEventID 
notified changes up to FSEventID 
can't signal changes for 
LocalStorageFileProvider/FSChangesNotifier.swift
require at least one URL to init a change notifier
can't get volume UUID for "
<FSChangesNotifier:
Attempt to resolve local item against non-fileURL: 
_TtC24LocalStorageFileProvider27LocalChangesObserverContext
localFileEnumerator
shouldUpdateFileIDInGenstore
fsChangesEnumerator
_TtC24LocalStorageFileProvider19LocalFileEnumerator
v32@0:8@16@24
itemURL
urls
notifier
enumerators
enumeratorsQueue
can't get volume UUID for 
enumerators-queue
LocalStorageFileProvider/LocalFileEnumerator.swift
can't create enumerator for an empty list of URLs
can't create notifier for 
, enumeration will have no live update
can't create change token from anchor data, resetting
NSFileProviderErrorDomain
enumerate changes with 
device UUID changed (
LocalStorageFileProvider/FSChangesEnumerator.swift
require at least one URL to init a change enumerator
<FSChangeEnumerator:
enumerate items with 
start gather phase
discovered 1 item
gather phase completed
enumerator returned an offset (
) smaller than the initial offset 
resume gather phase at offset 
LocalStorageFileProvider.LocalFileEnumerator
LocalStorageFileProvider.LocalChangesObserverContext
NSFileProviderEnumerator
v32@0:8@"<NSFileProviderEnumerationObserver>"16@"NSData"24
v32@0:8@"<NSFileProviderChangeObserver>"16@"NSData"24
v24@0:8@?<v@?@"NSData">16
NSFileProviderItem_Private
v20@0:8B16
T@"NSURL",N,R
hasUnresolvedConflicts
containerDisplayName
downloadRequested
hidden
providerIdentifier
sharingPermissions
fp_spotlightDomainIdentifier
fp_domainIdentifier
fp_parentDomainIdentifier
fp_ubiquitous
conflictingVersions
T@"NSArray",N,R
fp_isContainerPristine
fp_cloudContainerIdentifier
fp_cloudContainerClientBundleIdentifiers
T@"NSSet",N,R
displayName
topLevelSharedItem
quarantineBlob
TB,N
fileSystemFilename
excludedFromSync
fp_lastModifiedByCurrentUser
fp_addedByCurrentUser
fp_addedByNameComponents
preformattedOwnerName
preformattedMostRecentEditorName
isCollaborationInvitation
@"NSURL"16@0:8
@"NSArray"16@0:8
@"NSSet"16@0:8
@"NSData"16@0:8
NSObject
#16@0:8
@24@0:8:16
Q16@0:8
childItemCount
T@"NSDate",N,R
favoriteRank
uploading
downloading
failed to resolve 
_TtC24LocalStorageFileProvider19FSChangesEnumerator
v16@0:8
currentToken
numberOfChanges
numberOfReaderCaughtUp
observer
startupFSEventID
too much backlog
forcing full rescan: 
[DEBUG] %@
fetching changes did catch up (pathBase:
enumeration took too long
forward parent update of 
ignore update of 
; item is not a directory
; containers are not indexed
forward update of 
deep sub-hierarchy requires rescan
; item is not a directory of 
scanning folder 
forward deletion of 
LocalStorageFileProvider.FSChangesEnumerator
can't resolve fid=
item not found fid=
can't resolve did=
item lookup failed with EPERM, wait and try again
item lookup failed with ESTALE, wait and try again
item lookup failed with EBUSY, wait and try again
item lookup failed with ENOENT, wait and try again
item lookup failed with ENOENT, can't resolve did=
item not found docID=
_TtC24LocalStorageFileProvider13FSEventReader
stream
streamQueue
originalFSEventID
lastProcessedFSEventID
mode
latency
verbose
ownerDescription
delegate
_TtCZFC24LocalStorageFileProvider13FSEventReader20canResumeGatherPhaseFT2onGSaV10Foundation3URL_15previousEventIDVs6UInt642inVS_11LocalDomain_TOS_36FSEventReaderGatherPhaseResumeStatusS3__L_14FSEventChecker
gatherPhaseResumeStatus
sema
can't create FSEvent stream for 
fsevent: received 
 because no path can be extracted
fsevents id wrapped
[INFO] %@
dropped fsevents
done processing history
ignoring event from the past
dropping fsevent at "
"; No object at path
/Mobile Documents/
can't extract docID from 
dropping fsevent at 
; URL is not monitored
; fileObjectIDs don't match (
localstorage.fsevents-stream
unable to retrieve UUID for device 
unable to create UUID string from 
unable to stat path at '
_TtC24LocalStorageFileProvider17LocalFileProvider
v32@0:8@16@?24
@40@0:8@16@24@?32
v40@0:8@16@24@?32
v48@0:8@16@24@32@?40
v64@0:8@16@24Q32@40Q48@?56
localDomain
_TtCFC24LocalStorageFileProvider17LocalFileProvider20waitForStabilizationFT17completionHandlerFGSqPs5Error__T__T_L_15BarrierDelegate
barrierURL
timer
reader
provider
hasFired
hasNotified
onStabilize
wait for stabilization
waitForStabilization
stabilization timed out
[ERROR] %@
received catchup
received event for 
didn't see the event after waiting, trying again
applying content and metadata changes: 
moving item from 
v24@?0@"NSURL"8@"NSURL"16
no need to move item from 
cycle detected, discarding move of item from 
conflicting structural changes, still merging requested changes: 
conflicting content changes, discarding requested changes
group.com.apple.FileProvider.LocalStorage
isInFSSyncTestingMode
) [coordination=
creating trash directory failed with 
v24@?0@"NSURL"8@"NSError"16
cache-hit for handle 
can't find valid parent URL to untrash 
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/os-plugins/LocalStorage/LocalContainer.swift
LocalStorageFileProvider/LocalItem.swift
setting before bounce name 
can't before bounce name: 
lookup item ID for 
LocalStorageFileProvider/LocalStorageProvider.swift
called without a contentType
lookup item for 
lookup default location for 
auto-delete trashed items older than 
checking trash of 
com.apple.trash.time#PS
[ERROR] %@ %@
 favorite rank on 
can't set favorite rank on 
can't set tag data on 
set last-used date 
can't set last-used date on 
moving content of 
can't trash item
construct enumerator for 
v32@?0@"NSURL"8@"<NSFileProviderItem>"16@"NSError"24
parent mTime IOpolicy set failed with error 
ignore permissions IOpolicy set failed with error 
implementsIsDownloaded
implementsIsUploaded
auto notify changes on .workingSet at startup
NSFileProviderExtension_PrivateInit
@24@0:8@"NSFileProviderDomain"16
NSFileProviderExtension_Private
v40@0:8@16Q24@?32
@56@0:8@16{CGSize=dd}24@?40@?48
@32@0:8Q16@?24
v40@0:8@"NSURL"16Q24@?<v@?@"NSError">32
v40@0:8@"NSURL"16@"NSURL"24@?<v@?B@"NSError">32
@"<NSFileProviderItem>"32@0:8@"NSURL"16^@24
@"NSProgress"32@0:8@"NSString"16@?<v@?@"<NSFileProviderItem>"@"NSError">24
v32@0:8@"NSDate"16@?<v@?>24
v32@0:8@"FPCTLTermDumper"16@?<v@?@"NSError">24
v24@0:8@?<v@?@"NSString"@"NSError">16
@"NSProgress"56@0:8@"NSArray"16{CGSize=dd}24@?<v@?@"NSString"@"NSData"@"NSString"@"NSError">40@?<v@?@"NSError">48
v40@0:8@"NSString"16@"NSString"24@?<v@?@"<NSFileProviderItem>"@"NSError">32
@"NSProgress"32@0:8@"NSString"16@?<v@?@"NSURL"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"<NSFileProviderItem>"@"NSError">24
v64@0:8@"<NSFileProviderItem>"16@"NSFileProviderItemVersion"24Q32@"NSURL"40Q48@?<v@?@"<NSFileProviderItem>"QB@"NSError">56
@"NSProgress"32@0:8Q16@?<v@?@"NSError">24
v32@0:8@"NSString"16@?<v@?>24
v40@0:8@"NSError"16Q24@?<v@?@"NSError">32
v32@0:8@"NSString"16@?<v@?@"NSArray">24
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSArray">32
v24@0:8@?<v@?@"NSArray"@"NSError">16
v24@0:8@?<v@?@"NSError">16
superclass
description
File Provider Storage
can't create root for domain 
[CRIT] %@
cannot lookup deviceID for path 
_TtC24LocalStorageFileProvider9LocalItem
capabilities
lastUsedDate
isTrashed
isAncestorInTrash
isExcludedFromSync
isUploadedTestingImpl
isDownloadedTestingImpl
fileURL
fp_isUbiquitous
decorations
domain
isFolder
isPackage
isRegularItem
$__lazy_storage_$_containerItem
T@"NSString",N,R,VitemIdentifier
T@"NSString",N,R,VparentItemIdentifier
TQ,N,R,Vcapabilities
T@"NSNumber",N,R,VdocumentSize
T@"NSNumber",N,R,VchildItemCount
T@"NSData",N,R
T@"NSNumber",N,R,VfavoriteRank
TB,N,R,VisTrashed
T@"NSFileProviderItemVersion",N,R,VitemVersion
TB,N,R,VisExcludedFromSync
T{NSFileProviderTypeAndCreator=II},N,R,VtypeAndCreator
TB,N,R,VisUploadedTestingImpl
TB,N,R,VisDownloadedTestingImpl
T@"NSURL",N,C
TB,N,R,Vfp_isUbiquitous
TQ,N,R,VfileSystemFlags
com.apple.conflict#PS
My awesome device
com.apple.private.localstorage.nildocumentsize#S
com.apple.private.localstorage.nilchilditemcount#S
com.apple.private.localstorage.islocked#S
com.apple.private.localstorage.excludedFromSync#S
com.apple.private.localstorage.nonevictable#S
com.apple.conflict
obtaining VFSItem for 
can't obtain VFSItem for 
i16@?0^{fpfs_fileattrs={fpfs_item_handle=QQII*Q}{fpfs_metadata=ib1b1b1b1b1b1b1b1b1b1b1b1b1Sq{timespec=qq}{timespec=qq}{timespec=qq}Q{fpfs_tag_data=^vQi}(?=II)QQq*q*^{fpfs_xattr}I*i}Q[0c]}8
ignoring item at 
LocalStorageFileProvider.LocalItem
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/os-plugins/LocalStorage/LocalItem.swift
can't stamp trash info for 
com.apple.trash.putback#PS
can't clear trash info for 
uploadingError
contentPolicy
Tq,N,R
fp_isContainer
syncRoot
NSFileProviderItemDecorating
_TtC24LocalStorageFileProvider21LocalContainerMonitor
appRegistry
version
monitoredAppsByID
Down-casted Array element failed to match the target type
Expected 
NSArray element failed to match the Swift Array Element type
Expected 
localstorage.container.monitor.
localstorage.container.monitor.shared
FSChangesEnumerator
upgrading snapshot from version 
all items from domains 
 were removed from index
deleting searchable domains 
can't save snapshot at 
 to save snapshot for "
LocalStorageFileProvider.LocalContainerMonitor
notify for changes in 
notifying container update timed out
LocalStorageFileProvider/LocalContainer.swift
reading data at 
nothing cached on disk, taking new snapshot
 to restore snapshot for "
FPAppRegistryDelegate
v32@0:8@"FPAppRegistry"16@"NSArray"24
q16@0:8
itemIdentifier
com.apple.FileProvider
com.apple.FileProvider.LocalStorage
localstorage.log-section
_TtC24LocalStorageFileProvider19LocalRootEnumerator
rootID
fileEnumerator
containerSnapshot
LocalStorageFileProvider.LocalRootEnumerator
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/os-plugins/LocalStorage/LocalRootEnumerator.swift
Couldn't open stream: %s
v16@?0@"NSMutableArray"8
<subscription %@: observing>
<subscription %@: (inactive)>
.rendez-vous.%@.nosync
unlabeled
fp_task_tracker_is_cancelled
fp_task_tracker.m
task_tracker
fp_task_tracker_cancel
.rendez-vous.
\.rendez-vous\.([0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})\.nosync
.notify.
\.notify\.([0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})\.nosync
FPCKTask-queue
v16@?0@"NSString"8
v16@?0@"NSObject<OS_xpc_object>"8
<%@:%p>, device:'%s' mounted-on:'%s' fstype:%s
Unable to stat(2) item after eviction attempt
ingest
propagate
delete
%s/wharf
i24@?0^{fpfs_item_handle=QQII*Q}8q16
propagate/fault
propagate/dir
propagate/doc
fpfs_wharf_unload
fpfs_wharf.c
attrs->item_handle.doc_id == 0
%s/%llu
com.apple.fileprovider.resurrection_info
%*s %d%s%s
%s: fsevents-stream
%s: fsevents-process
FPFS_FSCHANGEMONITOR_NODELAY
-[FSChangeMonitor _activateSubscription:error:]
FSChangeMonitor.m
!subscription.isActivated
B16@?0@"FSChangeSubscription"8
root
history
live
com.apple.fpfs.fsevents
-[FSChangeMonitor _queueEvents:markSelfEncountered:]
_fseventsToProcess.count < _maxFSEventQueueSize
running
suspended
cancelled
 reset:%d
 [open stream]
<%@: %p %@ roots: %@>
-[FSChangeMonitor resume]
suspendCount >= 0
true
<id:%llu,flg:0x%x> 
path
fileID
historical fsevents not available
creating a new fsevents stream
fsevents API inconsistency
dropped live event
com.apple.decmpfs
.Trash
download
com.apple.icloud-file-fault
-fail-with-dropped
kernel
historical
<%@ #%llu fileID:%llu flags:%@ path:'%@'>
state
retry_count
next_retry_date
last_error_date
last_error
priority
domain_wide_error
kind
is_dataless
size
is_locked
posix_permissions
creation_date
content_modification_date
last_used_date
tag_data
favorite_rank
is_package
is_hidden
extension_hidden
child_item_count
extended_attributes
physical_size
is_evictable
is_pinned
is_in_pinned_folder
before_bounce_filename
quarantine_blob
is_syncroot
is_ignoreroot
closest_syncroot
os_type
link_count
collaboration_identifier
dbUUID
dbBugfixRevision
fsStreamUUID
fsStreamEventID
fpStreamSyncToken
featureFlags
errorGeneration
itemNotFound
itemCollision
cannotBounce
contentUnavailable
directoryNotEmpty
versionConflict
capturedContentMissing
itemNotEvictable
itemMismatch
directoryChangedWhileEnumerating
downloadCancelled
lookupNotPermitted
ItemKindMismatch
itemType
collidingItemChangedBeforeBounce
itemIsFlockedCanNotPropagate
itemNeedDelayPropagation
uploadCancelled
uploadInterrupted
itemContentVersionMismatch
item_id
job_type
file_id
test_content
location
length
returnIfAlreadyOnFS
propagateToFS
reconciledWithFP
timestamp
state_conditions
state_continuation
is_uploading
is_uploaded
uploading_error
downloading_error
is_excluded_from_sync
is_shared
is_top_level_shared_item
is_shared_by_current_user
preformatted_owner_name
preformatted_most_recent_editor_name
last_edited_by_current_user
sharing_permissions
is_container
is_container_pristine
app_container_bundle_identifier
cloud_container_identifier
container_display_name
display_name
has_unresolved_conflicts
item_decoration
user_info
content_policy
inherited_content_policy
conflicting_versions
last_editor_device_name
metadata_is_dataless
metadata_is_evictable
decoration_capabilities
materialize(_:request:qos:completion:)
materialization waiter
Recursion too deep for lookup of itemID %s request %s
Lookup itemID %s with behavior %s request %s iteration %ld
Waiting for propagation of root to the FP request %s
propagation to FP
 Request to propagate item with ID %s for %s
Root propagated, retry lookup request %s
findExistingVFSItemFor(itemID:parentIsImported:request:completionHandler:)
no vfsItemID found for item %s, request %s
Item cannot be found on disk, looking for parent for %s request %s
Item cannot be found on disk, only looking for existing item %s, request %s
Found item on the trash, lookup the root to make sure it's materialized
Found item on disk, but item is not reconciled yet %s, request %s
Found item on disk, but item is not accessible yet %s, request %s
findParentID(for:completionHandler:)
Parent item is not dataless, lookup and propagate %s request %s
Parent item must be imported, materializing %s request %s
Parent item is dataless, materializing %s request %s
Found parent %s, behavior: %s, shouldReconcile: %{bool}d request %s
Parent is materialized, lookup %s again request %s
looking up VFS item for %s request %s
finished VFS item lookup for %s request %s: %s
finished propagating to FP %s request %s: %s
finished post-propagation VFS lookup for %s reason %s: %s
propagationto FS
finished propagating to FS %s request %s: %s
finished post-propagation VFS lookup for %s request %s: %s
for by 
 Forcing busy item return for URL resolution
Request to eviction of content of itemID %s request %s
 Failed to get SQLJobRegistry
evict(_:request:progress:completionHandler:)
 Failed to remove pending downloads %@
evict(_:request:qos:completion:)
eviction waiter
i16@0:8
timeoutState
OS_dispatch_source_data_or
OS_os_transaction
FPXPCAutomaticErrorProxy
database
 rowID 
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/fssync/libfssync/interfaces/persistence/ReconciliationTable.swift
unexpected materializing parent state on bound reconciliation 
libfssync/ReconciliationTable.swift
 destinationItemID baseVersion recursive domainVersion 
 item destinationItemID baseVersion fields version domainVersion 
 item version domainVersion 
  detected move cycle by disabling path-matching condition for propagation of %s
  breaking parent creation cycle by disabling path-matching condition for propagation of %s
  breaking reparent cycle by disabling path-matching condition for propagation of %s
  breaking replacing a parent cycle by disabling path-matching condition for propagation of %s
 filename below 
  breaking move-back vs creation cycle by disabling path-matching condition for propagation of %s
 error 
from to diffs 
  move of %s -> %s: reparent cycle detected
  move of %s -> %s: breaking concurrent rename cycle
evictability should not be propagated from FS to FP
partiallyMaterialized
  invalid transition %{public}s -> %{public}s
importingFromDisk
 contentInSync metadataInSync 
inconsistent item kind %{public}s new kind %{public}s
should not happen
Not Implemeneted
_TtC9libfssync14FPFSEnumerator
logger
vfsItemID
fpItemID
extensionEnumerator
lifetimeExtender
keepAlive
previousAnchor
_currentAnchor
changedItemsByID
deletedItemsIDs
reset()
  requested to reset stream
  %@: ignoring item change %s -> %s
  %@: registering item deletion %s -> %s
  %@: registering item update %s -> %s
  %@: item get updated and we're ask to invalidate the children, reset
  reset stream for %@
  %@: enumerating page %s
enumerateItems(fromPage:selfItem:suggestedPageSize:reply:)
  %@: enumerating page %s done: %ld items%s anchor:%llu
  %@: enumerating page %s failed: %@
libfssync/FPFSEnumerator.swift
document as a parent?
enumeratorHasBeenInvalidated(_:)
libfssync.FPFSEnumerator
  %@: enumerating from change %llu
enumerateChanges(fromToken:suggestedBatchSize:reply:)
Swift/Dictionary.swift
Swift/NativeDictionary.swift
Duplicate values for key: '
  %@: enumerating from change %llu done: %ld updated, %ld deleted%s, next anchor:%llu
  %@: enumerating from change %llu failed: %@
currentSyncAnchor(completion:)
updateSchedulingOrder(
setItemFlockStatus(
removeCollidingItemID(
addCollidingItemID(
deleteChildrenReconciliations(
deleteReconciliation(
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/fssync/libfssync/interfaces/file-tree/item/types/ItemMetadata.swift
com.apple.ostype
posixPermissions
isInPinnedFolder
isPathExtensionHidden
beforeBounceFilename
collaborationIdentifier
com.apple.fpfs.fileid
libfssync/ItemMetadata.swift
Inconsistent kind 
unexpected error while retrieving info at %s
_TtC9libfssync20InternalPathsManager
nsDomain
manager
appSupportURL
wharfDirectoryURL
dbDirectoryURL
dbURL
temporaryDirectoryURL
i12@?0i8
Could not set protection class: %d
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/fssync/fpfs/InternalPathsManager.swift
Cloud Storage root path for domain %@: %ld
could not get support paths
Application Support root path for domain %@: %s
libfssync/InternalPathsManager.swift
no provider for 
creating root at %s
can't create dataless root at %s: file already exists
Attempting to import existing domain at %s into new domain %s
attempting create a domain at %s, but that path already exists and is not owned by anyone
attempting create a domain at %s, but that path already exists and is not owned by %s
com.apple.CloudDocs.iCloudDriveFileProvider
preserve un-owned directory %s,  ended with error %@
preserve un-owned directory %s, reached max bounce number
trying to preserve un-owned directory %s
Created dataless root %s
Error while creating root %s: %@
Marking root dataless %s
no provider for domain 
no identifier for domain 
com.apple.CloudDocs.iCloudDriveFileProviderManaged
Library/Application Support/CloudDocs/ciconia/files
_TtC9libfssync25VFSLookupItemContinuation
startDate
deletionDetectionDate
hasSeenBusy
isStale
backoff
timeSource
throttleColumns
keyColumns
deleteDisabledThrottles
disableRetries
nextRetryDate
waitGroup
hasPendingDeletionBackoff
xpcActivityRegistered
jobThrottlingParameters
itemThrottlingParameters
fileTreeThrottlingParameters
_id__kind__job_type__ordering
    ON 
(item_id, kind, job_type)
_state_domain_wide_error ON 
(state, domain_wide_error)
_state_next_retry ON 
(state, next_retry_date)
CREATE UNIQUE INDEX 
_per_job
    ON 
(kind, item_id, job_type)
  kind TINYINT NOT NULL,
  item_id 
 NULL,
  job_type INTEGER NULL,
  state TINYINT NOT NULL,
  priority UNSIGNED INT NOT NULL,
  retry_count SMALLINT NOT NULL,
  next_retry_date INTEGER NOT NULL,
  last_error_date INTEGER NOT NULL,
  last_error BLOB NULL,
  domain_wide_error INT NOT NULL
  purged %lld outdated entries from %s
      WHERE state = 
        AND next_retry_date < 
com.apple.fileproviderd.upcall-timeout-retry
  %{public}s: throttle %s: %s
 AND job_type = 
domain_wide_error = 
   AND state != 
SELECT domain_wide_error
  FROM 
  %{public}s: %ld throttles expired
   SET state = 
 WHERE state = 
 AND +domain_wide_error != 
  %{public}s: no pending throttles
 %{public}s: schedule throttling handling in %{public}s
  %{public}s: schedule throttling unchanged in %{public}s
  %{public}s: only infinite throttles
  %{public}s: retries are disabled
com.apple.fileproviderd.throttling-retry
trigger(now:)
  %{public}s: cannot notify of throttle expiry in %s: %@
  %{public}s: cannot rearm throttling scheduler %s: %@
SELECT 1
  FROM 
   AND domain_wide_error = 
   AND next_retry_date <= 
next_retry_date <= 
SELECT MIN(next_retry_date)
  FROM 
      VALUES (
corrupted table 
1 ORDER BY item_id, kind, job_type
AND domain_wide_error = 
SELECT priority
  FROM 
   AND item_id = 
   AND job_type = 
   AND state = 
 AND next_retry_date = 
 name 
 isIgnored 
 from to 
 item newName version 
rules
activeRules
blockedJobsRules
aggregators
fetchEventStream
recursivelyDeleting(
rules blockedBy 
libfssync/JobRegistry.swift
job unexpectedly changed side
Unexpected waiting condition on job 
 inParent 
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/fssync/libfssync/interfaces/persistence/JobRegistry.swift
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/fssync/libfssync/interfaces/file-tree/item/FileItemID.swift
_TtC9libfssync17SQLBackupManifest
SQL_BACKUP_MANIFEST_SCHEMA_VERSION
resourceValuesToFetch
SELECT new_doc_id
FROM 
WHERE doc_id = 
SELECT new_file_id
FROM 
WHERE file_id = 
SELECT new_file_id, new_gen_count
FROM 
Failed to create file_id_gen_count_index: %@
Failed to create doc_id_index: %@
CREATE INDEX IF NOT EXISTS doc_id_index ON 
CREATE INDEX IF NOT EXISTS file_id_gen_count_index ON 
(file_id, gen_count)
Failed to open database %s: %@
Failed to close database %s: %@
Failed to set up pragmas %s: %@
Failed to create table %s: %@
  relative_path blob not null,
  file_id integer,
  doc_id integer,
  gen_count integer,
  is_directory integer,
  new_file_id integer,
  new_doc_id integer,
  new_gen_count integer
Populating new columns with base path: %s
WHERE new_file_id IS NULL
Failed to populate new columns for %s: %@
Failed to populate new columns. fileReadNoSuchFile %s does not exist.
Failed to populate new columns. fileNoSuchFile %s does not exist.
Failed to populate new columns. ENOENT %s does not exist.
Failed to get the gen count for %s
Updating %ld %u %u into database for %s
Failed to open %s: %@
SET new_file_id = 
    new_doc_id = 
    new_gen_count = 
WHERE relative_path = 
Can't close database %s: %@
Could not create a unique index %s: %@
CREATE UNIQUE INDEX IF NOT EXISTS relative_path_index ON 
 (relative_path)
Can't insert into the database %s: %@
Failed to insert into %s: %@
  relative_path,
  file_id,
  doc_id,
  gen_count,
  is_directory,
  new_file_id,
  new_doc_id,
  new_gen_count
VALUES (
        NULL,
        NULL,
        NULL
side
schedulingColumns
throttle
deleteFinishedJobs
__scheduling_state__scheduling_state_conditions__pending_scheduling_timestamp
          ON 
(scheduling_state, scheduling_state_conditions, pending_scheduling_timestamp)
__scheduling_state__pending_scheduling_timestamp
          ON 
(scheduling_state, pending_scheduling_timestamp)
__scheduling_state__pending_reason ON 
(scheduling_state, pending_reason)
_state_type__scheduling_ordering
    ON 
(scheduling_state, type, scheduling_priority DESC, scheduling_timestamp)
_state__scheduling_ordering
    ON 
(scheduling_state, scheduling_priority DESC, scheduling_timestamp)
_has_pending ON 
(pending_reason IS NOT NULL)
__type__state ON 
(type, scheduling_state)
(scheduling_state)
  id INTEGER PRIMARY KEY,
  item_id 
 NOT NULL,
  type TINYINT NOT NULL,
  scheduling_priority UNSIGNED INTEGER NOT NULL,
  scheduling_timestamp INTEGER NOT NULL,
  scheduling_state TINYINT NOT NULL,
  scheduling_state_conditions SMALLINT NOT NULL,
  scheduling_state_continuation BLOB NULL,
  reason INT NOT NULL,
  pending_scheduling_priority UNSIGNED INTEGER NOT NULL DEFAULT 0,
  pending_scheduling_timestamp INTEGER NOT NULL DEFAULT 
  pending_reason INT NOT NULL DEFAULT 0
WHERE item_id = 
the query should have prevented this
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/fssync/libfssync/implementations/file-system/persistence/SQLItemJobRegistry.swift
AND scheduling_state = 
-- Don't include the conditions in the index lookup
AND +scheduling_state_conditions & 
-- Don't include the conditions in the index lookup
AND +scheduling_state = 
AND +scheduling_state_conditions & 
   SET scheduling_state = 
 WHERE scheduling_state = 
recovering running job %s
scheduling_state = 
libfssync/SQLItemJobRegistry.swift
1 ORDER BY scheduling_priority DESC, scheduling_timestamp
 WHERE item_id = 
   AND +scheduling_state IN 
SELECT rowID
  FROM 
 WHERE scheduling_state IN 
       AND type = 
  scheduling_state != 
  OR (scheduling_state_conditions & 
SELECT id
  FROM 
 WHERE (scheduling_state IN 
    OR pending_scheduling_timestamp != 
scheduling_state_conditions IN (0, 
unexpected retained job 
AND scheduling_state_conditions = 
-- Looks for schedule fetch-children-metadata on those directories
SELECT jobs.item_id
  FROM 
 AS jobs
 WHERE jobs.type = 
   AND jobs.scheduling_state IN (
                                 
   AND jobs.scheduling_timestamp <= 
SELECT jobs.item_id
  FROM 
 AS jobs
  LEFT JOIN 
_snapshot AS snap ON (snap.id = jobs.item_id)
 WHERE jobs.type = 
   AND snap.id IS NULL
 LIMIT 
SELECT item_id
  FROM fs_item_jobs
 WHERE type = 
   AND scheduling_state = 
   AND scheduling_state_conditions & 
unexpected category
AND rowID NOT IN 
ORDER BY scheduling_priority DESC, scheduling_timestamp
LIMIT 
   AND (scheduling_state IN 
        OR pending_scheduling_timestamp != 
   AND ((scheduling_state IN 
          AND (reason & 
) != 0)
        OR (pending_reason & 
AND scheduling_state IN 
SQLDB: Fetch Jobs
SELECT id, scheduling_priority, scheduling_timestamp, pending_reason,
       pending_scheduling_timestamp, pending_scheduling_priority, item_id, type,
       reason, 
       scheduling_timestamp = 
      WHERE item_id = 
        AND type = 
UPDATE reconciliation_table
   SET last_change = PROPAGATION_DATE_CHANGED(0, fs_id)
 WHERE 
      WHERE id = 
       reason = pending_reason,
       scheduling_timestamp = pending_scheduling_timestamp,
       scheduling_priority = pending_scheduling_priority,
       pending_reason = 0,
       pending_scheduling_timestamp = 
       pending_scheduling_priority = 0
 WHERE id = 
SELECT id, pending_reason, pending_scheduling_timestamp, pending_scheduling_priority
  FROM 
   SET reason = reason | 
       scheduling_priority = MAX(scheduling_priority, 
       scheduling_timestamp = MIN(scheduling_timestamp, 
       reason = 
       scheduling_priority = 
   SET pending_reason = pending_reason | 
       pending_scheduling_priority = MAX(pending_scheduling_priority, 
       pending_scheduling_timestamp = MIN(pending_scheduling_timestamp, 
 (item_id, type, 
, reason,
                           scheduling_timestamp, scheduling_priority)
     VALUES (
SELECT id, scheduling_state, scheduling_state_continuation
  FROM 
_TtC9libfssyncP33_7F4FBB69DAA1D0B2DA22684CBB0F5CB316ProxyCancellable
cancellable
_TtC9libfssyncP33_7F4FBB69DAA1D0B2DA22684CBB0F5CB320ProxyOperationClient
client
idMap
_TtC9libfssync20FPFSServicerExtender
request
_TtC9libfssync21FPFSOperationServicer
@32@0:8@16@?24
backend
extender
Request to delete items: %s
Succeeded deleting items: %s
Failed to delete items %s with error %@
Request to delete item with ID: %@; recursively %{bool}d
com.apple.FileProvider/%@
Item %@ does not exist, deleting item with searchableID %s from index %@
Succeeded deleting %@ from spotlight index.
Could not delete %@ from spotlight index: %@
Succeeded deleting item with itemID %@, not wating on ingestion
Failed to delete item %@ with error %@
Succeeded ingesting deletion for item with itemID %@
Failed to force ingestion of item %@ with error %@
v16@?0@"NSArray"8
v24@?0@"NSArray"8@"NSError"16
fetch id for %@
<nil>
result of fetch id for %@: %s, %@
updateIgnoreStateOfItem(_:ignoreState:fpfs:completionHandler:)
fetchHierarchy(for:recursively:reply:)
fetching hierarchy from provider: %s (recursive: %{bool}d)
fetching hierarchy from cache: %s (recursive: %{bool}d)
BACKGROUND_GOOD_CONDITIONS
v24@?0@"NSDictionary"8@"NSDictionary"16
FPFS servicer for 
libfssync.FPFSServicerExtender
libfssync.ProxyOperationClient
libfssync.ProxyCancellable
FPCancellable
FPOperationClient
v24@0:8@"<FPCancellable>"16
v40@0:8@"NSDictionary"16@"NSError"24@?<v@?>32
d16@0:8
v24@0:8Q16
_TtC9libfssync16VFSStagedContext
handle
isDir
extent
_TtC9libfssyncP33_4832980660C328E96B083C662469F36526FPFileTreeLifetimeExtender
requestor
timeout
Td,N,R,Vtimeout
TQ,N,VtimeoutState
requestEffectivePID
Ti,N,R
prettyDescription
_TtC9libfssync28FPXPCNonSanitizingErrorProxy
@60@0:8@16@24@32@40i48@?52
@68@0:8@16@24@32@40i48@?52@?60
@52@0:8@16@24@32@40i48
_TtC9libfssync10FPFileTree
tracker
fetchProgressByItemID
uploadProgressByItemID
schedulingState
pauseAffordanceTimerSource
pauseHardTermination
lastReceivedUpdate
forceFlattenedPackages
$__lazy_storage_$__cachedRTCReporter
previousSequenceNumber
workingSetSyncAnchor
_TtC9libfssync23DummyEnumeratorObserver
fpfiletree
  provider supports a %{public}s pipeline of %ld, setting limits to %ld
com.apple.fssync.fpfiletree
interrupting %{public}ld uploads
 didn't complete in time
all the uploads completed in time
libfssync/FPFileTree.swift
v24@?0@"<FPXEnumerator>"8@"NSError"16
com.apple.fileproviderd
enable-extension-upcall-timeout
disabled-domain-fpx-vendor
disabled-domain-fpx-enumerator
v52@?0@"NSArray"8@"NSArray"16B24@"NSData"28@"FPExtensionResponse"36@"NSError"44
v48@?0@"NSArray"8@"NSData"16@"NSData"24@"FPExtensionResponse"32@"NSError"40
v24@?0@"NSData"8@"NSError"16
fetchEventStream(domainVersion:completion:)
eventBarrier(_:)
cannot decode sync anchor
could not decode the previous sync anchor, starting working set enumerator from scratch: %@
v24@?0@"FPExtensionResponse"8@"NSError"16
delete(_:recursively:baseVersion:domainVersion:completion:)
v32@?0@"NSURL"8@"NSString"16@"NSError"24
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/fssync/libfssync/utilities/Utilities.swift
v44@?0@"FPItem"8Q16B24@"FPExtensionResponse"28@"NSError"36
create(_:with:from:reviving:domainVersion:options:completion:)
update(_:to:given:with:baseVersion:domainVersion:options:completion:)
v40@?0@"FPSandboxingURLWrapper"8@"FPItem"16@"FPExtensionResponse"24@"NSError"32
provideFile(for:expectedFileSize:updating:domainVersion:requestor:options:completion:)
i16@?0^{fpfs_item_handle=QQII*Q}8
v48@?0@"FPSandboxingURLWrapper"8@"FPItem"16@"FPExtensionResponse"24@"NSValue"32@"NSError"40
provideFile(for:expectedFileSize:lastKnownVersion:domainVersion:requestor:options:completion:)
inconsistent continuation type
v32@?0@"FPItem"8@"FPExtensionResponse"16@"NSError"24
lookupItem(by:lastKnownVersion:domainVersion:options:completion:)
  Fetching version %s...
  Staging version %s...
  Fetching URL in the wharf for version %s...
sequence number received out of order: %ld <= %ld
    %ld: %{public}s
    %ld: %{public}s
Error setting new domainUserInfo, provider was nil
found new domain version, setting new domainUserInfo
Error signaling change after setting new domainUserInfo, server was nil
Error setting domain user info: %@
libfssync.FPXPCNonSanitizingErrorProxy
init(connection:protocol:orError:name:requestPid:)
init(connection:protocol:orError:name:requestPid:requestWillBegin:requestDidBegin:)
init(connection:protocol:orError:name:requestPid:requestWillBegin:)
FPFS enumeration of 
libfssync.FPFileTreeLifetimeExtender
FPDLifetimeExtender
Td,N,R
FPXEnumeratorObserver
v24@0:8@"FPItem"16
v40@0:8@16q24@?32
v36@0:8B16@20@?28
v24@0:8@?<v@?@"NSData"@"NSError">16
v40@0:8@"NSData"16q24@?<v@?@"NSArray"@"NSData"@"NSData"@"FPExtensionResponse"@"NSError">32
v40@0:8@"NSData"16q24@?<v@?@"NSArray"@"NSArray"B@"NSData"@"FPExtensionResponse"@"NSError">32
v24@0:8@?<v@?>16
v36@0:8B16@"NSNumber"20@?<v@?@"NSError">28
NSXPCProxyCreating
@24@0:8@?16
@24@0:8@?<v@?@"NSError">16
FPXVendor
v64@0:8@16@24@32@40@48@?56
v36@0:8@16B24@?28
v40@0:8@16B24B28@?32
@68@0:8@16@24@32@40Q48B56@?60
@64@0:8@16@24@32@40@48@?56
@72@0:8@16@24Q32@40Q48@56@?64
@68@0:8@16Q24@32Q40@48B56@?60
@56@0:8@16@24Q32@40@?48
v64@0:8@"NSFileProviderDomain"16@"NSDictionary"24@"<FPDDomainServicing>"32@"FPProviderDomain"40@"NSFileProviderDomainVersion"48@?<v@?@"NSError">56
v32@0:8@"NSURL"16@?<v@?@"NSURL"@"NSError">24
v32@0:8@"NSURL"16@?<v@?@"FPItemID"@"NSError">24
v32@0:8@"NSURL"16@?<v@?@"NSError">24
v40@0:8@"FPItemID"16@"NSFileProviderRequest"24@?<v@?@"FPItem"@"FPExtensionResponse"@"NSError">32
v32@0:8@"NSURL"16@?<v@?@"FPItem"@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSError">24
v36@0:8@"FPItemID"16B24@?<v@?@"NSXPCListenerEndpoint"@"NSArray"@"NSError">28
v24@0:8@?<v@?@"NSXPCListenerEndpoint"@"NSError">16
v40@0:8@"NSArray"16@"FPItemID"24@?<v@?@"NSDictionary"@"NSError">32
v32@0:8@"FPItemID"16@?<v@?@"NSError">24
v40@0:8@"FPItemID"16B24B28@?<v@?@"FPSandboxingURLWrapper"@"FPSandboxingURLWrapper"@"NSError">32
v40@0:8@"FPSandboxingURLWrapper"16@"FPItemID"24@?<v@?@"NSError">32
v40@0:8@"NSArray"16@"NSString"24@?<v@?@"NSError">32
v40@0:8@"NSDate"16@"NSString"24@?<v@?@"NSError">32
v40@0:8@"FPCTLTermDumper"16@"NSString"24@?<v@?@"NSError">32
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSError">24
v40@0:8@"NSString"16@"NSFileHandle"24@?<v@?@"NSError">32
@"NSProgress"68@0:8@"FPItemID"16@"NSFileProviderItemVersion"24@"NSFileProviderRequest"32@"NSValue"40Q48B56@?<v@?@"FPSandboxingURLWrapper"@"FPItem"@"FPExtensionResponse"@"NSValue"@"NSError">60
@"NSProgress"64@0:8@"FPItemID"16@"NSFileProviderItemVersion"24@"FPSandboxingURLWrapper"32@"NSFileProviderItemVersion"40@"NSFileProviderRequest"48@?<v@?@"FPSandboxingURLWrapper"@"FPItem"@"FPExtensionResponse"@"NSError">56
@"NSProgress"72@0:8@"FPItem"16@"NSFileProviderItemVersion"24Q32@"FPSandboxingURLWrapper"40Q48@"NSFileProviderRequest"56@?<v@?@"FPItem"QB@"FPExtensionResponse"@"NSError">64
@"NSProgress"68@0:8@"FPItem"16Q24@"FPSandboxingURLWrapper"32Q40@"NSFileProviderRequest"48B56@?<v@?@"FPItem"QB@"FPExtensionResponse"@"NSError">60
@"NSProgress"56@0:8@"FPItemID"16@"NSFileProviderItemVersion"24Q32@"NSFileProviderRequest"40@?<v@?@"FPExtensionResponse"@"NSError">48
FPXOperationService
v56@0:8@16@24{CGSize=dd}32@?48
v48@0:8@16@24Q32@?40
v44@0:8@16Q24B32@?36
@40@0:8@16Q24@?32
@48@0:8@16@24@32@?40
v72@0:8@16@24@32@40@48@56@?64
v56@0:8@"<FPOperationClient>"16@"NSArray"24{CGSize=dd}32@?<v@?@"NSError">48
v40@0:8@"NSArray"16@"FPItemID"24@?<v@?@"NSArray">32
v48@0:8@"NSArray"16@"NSArray"24Q32@?<v@?@"NSError">40
v44@0:8@"FPItem"16Q24B32@?<v@?@"FPItem"@"NSError">36
v40@0:8@"NSArray"16Q24@?<v@?@"NSDictionary"@"NSDictionary"@"NSError">32
v36@0:8@"FPItemID"16B24@?<v@?@"NSArray"@"NSError">28
v48@0:8@"NSString"16@"NSString"24@"NSString"32@?<v@?@"FPItem"@"NSError">40
v32@0:8@"FPItemID"16@?<v@?@"FPItem"@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSArray">24
@"NSProgress"32@0:8@"FPItemID"16@?<v@?@"NSURL"@"NSError">24
@"NSProgress"40@0:8@"NSString"16Q24@?<v@?@"NSError">32
@"NSProgress"48@0:8@"NSString"16@"NSArray"24@"NSString"32@?<v@?@"NSError">40
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError">32
v72@0:8@"NSString"16@"NSArray"24@"FPItem"32@"NSString"40@"NSSet"48@"NSSet"56@?<v@?@"NSArray">64
v36@0:8@"NSArray"16B24@?<v@?@"NSDictionary"@"NSDictionary"@"NSError">28
FPXVendorObservation
v48@0:8@"FPExtensionEnumerationSettings"16@"<FPXEnumeratorObserver>"24@"NSFileProviderRequest"32@?<v@?@"<FPXEnumerator>"@"NSError">40
_TtC9libfssyncP33_48B452DE321F44F46865C1107F5BBC8315DownloadContext
progress
subscriber
progressReportingCancellable
progressCalculatingCancellable
noProgressSoftDelay
noProgressHardDelay
expirationDate
expirationPolicy
_TtC9libfssync37DownloadProgressNotificationPresenter
_TtC9libfssync23DownloadProgressMonitor
progressPerURL
cancelledRequests
cancelledBinaries
lastChangeDate
notificationPresenter
rtcReporter
download-heartbeat-delay
present-download-cancellation
operationDuration
  cancelling download for %s by user policy
  cancelling download for %s because it is stuck at %f for %f (allowed: %f)
user-download-warning-delay
  did not have context for url %s
dont-warn-user-of-slow-downloads
user-download-warning-stickiness-delay
@?<v@?>16@?0@"NSProgress"8
  monitoring progress from %s: %s
  application at %s is not allowed to download %s: user cancelled a similar request at %s
  ignoring progress with wrong kind: %@
  ignoring progress on the wrong URL %s != %s: %@
  subscribed to progress %@ for URL %s
background-download-heartbeat-delay
progress-monitor
download made no progress since 
POSIX syscall reached expiration date 
application is unresponsive
_TtC9libfssync8FSRepair
Repairing %{public}s on %s is not supported
Repairing %{public}s on %s (set bundle bit)
Repairing %{public}s on %s (remove demoted flag)
Repairing %{public}s on %s (force re-ingestion)
Repairing %{public}s on %s (drop purgeability)
Failed to drop purgeability on item at %s: %@
Failed to issue FSEvent on item at %s: %@
Failed to drop Demoted from sync root: %@
Failed to set bundle bit: %@
libfssync/VFSItem.swift
should not be called
Unable to create extent map for %s : %@
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/fssync/libfssync/implementations/file-system/tree/VFSItem.swift
nonSyncableAttributes
.Trash-from-provider
.Trash-not-a-dir-in-fs
docID not set for new item with id %s
  ignoring decreasing domain version %@ -> %@
  ignoring disappearing domain version %@ -> nil
preserveDirtyUserData
preserveUserData
: domain-fpfsbackend
: working-set-changed
: pending-set-watching
: errorGenerationPropertyQueue
updateRootAfterDomainChange()
libfssync.FPDDomainFPFSBackend
  invalidating fpfs for %s
preserving dirty user data
preserving user data
support files could not be removed: %@
%@ removing FPFS domain data with mode %{public}s
dumpState(to:limitNumberOfItems:)
v24@?0@"FPItem"8@"NSError"16
Materialization
v8@?0
FPFS backend - enumerate pending %s, %ld
didChange(_:)
nonEvictableSpace()
telemetryReport()
unpinItem(with:request:completionHandler:)
Request to modify fields %s for %ld items
_TtC9libfssync20FPDDomainFPFSBackend
@24@0:8@16
B24@0:8^@16
providerDomainID
pathsManager
__cachedURL
__fpfs
backingStoreIdentity
startupQueue
itemChangedQueue
workingSetChangedQueue
pendingSetWatchingQueue
startStatus
itemsChangedSource
enumerationAnchorChangedSource
runningEnumerator
pendingSetSource
initializationGroup
started
progressMonitor
periodicFPCKRunner
pendingSetState
onActivatePendingSetNotification
pendingSetStateURL
errorGenerationRecord
_signaledErrorGenerationDebouncer
T@"NSData",N,C
rootURLs
domainVersion
T@"NSFileProviderDomainVersion",N,R
errorGenerationCount
uploadsArePaused
@32@0:8@16^@24
@32@0:8Q16^@24
v56@0:8@16{_NSRange=QQ}24@40@?48
v52@0:8@16B24B28B32@36@?44
v44@0:8@16B24@28@?36
@36@0:8@16B24^@28
v68@0:8@16Q24@32Q40B48@52@?60
v48@0:8@16Q24@32@?40
Fatal error
FPProgressProtocol
.materializedSetChanged
sent notification %s.materializedSetChanged.fp_libnotifyPerUserNotificationName())
starting FPFS for domain %s
failed to start FPFS for domain %s after several attempts
should reattempt starting FPFS for domain %s
failed to start FPFS for domain %s
cannot init wharf: %@
wharf initiatlization failed: %@
fpfs doesn't have a domain?
cannot open database at %s: %@
non-empty-pending-set
Unable to activate sync engine: %@
garbageCollectDeletedItems(deleteBusyFiles:)
loadSyncEngine()
Pending set was empty before stop
Pending set was not empty before stop
read sync anchor
activated sync engine with %{public}s
Materialization_startProvidingItem
sendPendingSetNotification(newState:)
Pending set notification on start
.pendingSetChanged
sending notification %s
Notifications from the pending set got ignored, stopping it, last enumeration: %s, refresh date: %s (previous: %s
Persisted pending set status %{bool}d to %s
@"NSString"16@?0@"PQLQueryBuilder"8
Fetching pending set status from %s
Next pending set checking arrives too soon (%f) - likely under load
checkForPendingSetChanges(completionHandler:)
Will force a second notify due to domain version change
Pending set updates found, notifying
Going full rescan for pending items after %f
cannot initialize database error for domain %s, disabling the domain: %@
handleDatabaseError(db:error:)
  handling database error for domain %s, restarting with a fresh database.  Error domain: %{public}s. Error code: %{public}ld.  Error description: %@
  cannot initialize the database for domain %s, restarting with a fresh database.  Error domain: %{public}s. Error code: %{public}ld.  Error description: %@
  the database is still locked, retrying
disk is full, restarting: %@
database removal failed %@
  Delete the FPFS Wharf %s
  Delete the FPFS DB %s
Can't unlink %s: %@
reimportWithReason
  Move the FPFS Wharf away %s
  Move the FPFS DB away %s
withFPItemIdentifier(for:cb:)
FPFSID<VFSItemID, NSFileProviderItemIdentifier>
attachInheritedUserInfo(_:completionHandler:)
decorate(_:options:completionHandler:)
hasNonUploadedFiles(completionHandler:)
fsSnapshotCounters
fpSnapshotCounters
subscribeToDownloadProgressUpdates(_:completionHandler:)
subscribeToUploadProgressUpdates(_:completionHandler:)
waitForStabilization(request:_:)
  waiting for stabilization of FS and FP trees for %s
  waiting for db stabilization for %s
  processing pending ingestions for %s
  waiting for engine stabilization
  engine is stable
  scheduler not stable: jobs are running
  scheduler not stable: some reconciliations are pending scheduling
  scheduler not stable: some jobs are still pending execution
  scheduler not stable: some throttles are still active
  FSTree stable for %s
testingOperations(request:completionHandler:)
runTestingOperations(_:request:completionHandler:)
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/fssync/libfssync/interfaces/job/TestingOperation.swift
cannot convert incomplete operation 
signalErrorResolved(_:completionHandler:)
  resolved %s error signaled, clearing this error's throttles
cannotSynchronize
serverUnreachable
delayedContinuation
v24@?0@"NSXPCListenerEndpoint"8@"NSError"16
resolveProviderItemID(_:completionHandler:)
v32@?0@"NSXPCListenerEndpoint"8@"NSArray"16@"NSError"24
resolveConflict(at:completionHandler:)
  Scheduling conflict resolution for item %s..
libfssync/FPDDomainFPFSBackend.swift
item received from FPFS unexpectedly didn't have a fileURL
Finished bulkItemChanges of %ld items
Request to modify fields %s for item with ID %@: %s
Error creating item %@ on disk; error %@
com.apple.fileprovider.trash-put-back#PN
call to block failed with 
 but errno is not set
Request to materialize content of itemID %s reason %s
create fault completed with result %s request %s
requestMaterialization completed for vfsItemID %s
requestMaterialization(%s) failed for vfsItemID: %@
requestMaterialization(%s) post-materialization lookup succeeded
propagateToFP(itemID:request:completion:)
requestMaterialization(%s) post-materialization lookup returned a dataless item - force ingestion
requestMaterialization(%s) post-materialization lookup returned no item
requestMaterialization(%s) post-materialization lookup returned an error %@
requestMaterialization(%s) post-materialization retry failed
Error retrieving item state item %@; error %@
singleItemChange(_:changedFields:bounce:coordinate:request:completionHandler:)
Error updating item %@ error <nil>
Error updating item %@ error %@
Finished updating %s for item %@; d: %s
ingestFromCacheItem(with:requestedFields:request:completionHandler:)
updatePinning(of:to:request:completionHandler:)
can't force ingestion of item at %s
forceFSIngestion(for:completionHandler:)
Unable to force FS ingestion: %@
 Forcing ingestion for item with ID %@
 Failed force ingestion of item with ID %@ with error: %@
propagateToFS(itemID:request:completion:)
 Finished force ingestion of item with ID %@
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/fssync/fpfs/FPDDomainFPFSBackend.swift
  Going to create an item with template %@ bounceOnCollision %{bool}d
 Can't make directory at URL %s, error: %@
 Can't make directory, item already exist at URL %s
 Bouncing item %s
createItemBased(onTemplate:fields:urlWrapper:options:bounceOnCollision:request:completionHandler:)
 Making directory for itemID %s at url %s
 Forcing ingestion for existing item at %s
Creation of item that is not a folder/directory not supported
isItemDataless(for:completion:)
materializedURL(for:completion:)
materializedURL vfsItem with ID %s is dataless
listConflicts(for:completionHandler:)
reimportItems(below:removeCachedItems:markItemDataless:completionHandler:)
  reimporting below %s (%s disk content)
can't mark the root dataless: %@
v24@?0@"FPDDomain"8@"NSError"16
item is not in our database
  reimporting the root item, dropping the database
Unable to compute on disk objects summary: %@
materialized_reg
materialized_pkg
materialized_dir
materialized_als
materialized_sym
reimport_running_time_sec
SQLDB: building telemetry report
Ignoring invalid object type : %ld
SELECT metadata_kind,
       metadata_is_package,
       metadata_is_dataless,
       COUNT(*),
       SUM(metadata_physical_size)
 FROM 
GROUP BY metadata_kind, metadata_is_package, metadata_is_dataless
Unable to compute out-of-sync / pinned volume: %@
fetchFSItems(forItemIdentifiers:materializingIfNeeded:request:completionHandler:)
Request to enumerate with settings %s
checkIsInIgnoredHierarchy(_:request:completion:)
Found item %s for request %s
  new enumerator %@
Item is in ignored for request %s
enumerate(with:lifetimeExtender:observer:completionHandler:)
  item %@ changed
state(completionHandler:)
state - fpfs.db.asyncRead error: %@.
state - asyncWithSyncEngine error: %@.
currentPendingSetSyncAnchor(completionHandler:)
enumeratePendingSet(fromSyncAnchor:suggestedBatchSize:completionHandler:)
received a non-empty sync anchor when pending set is not being computed anymore
cannot decode anchor for pending set
received a pending set anchor for an outdated UUID
received a change gathering for an outdated timestamp
currentMaterializedSetSyncAnchor(completionHandler:)
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/fssync/libfssync/implementations/file-system/persistence/SQLReconciliationTable.swift
SELECT anchor FROM enumeration_view
enumerateMaterializedSet(fromSyncAnchor:suggestedBatchSize:completionHandler:)
reply to %s: failure %@
reply to %s: %s success
materializeItem(with:requestedRange:request:completionHandler:)
newSyncRoot: %llu
oldSyncRoot: %llu
request for file %s doesn't allow resurrection
registerMoveOutPreprocessing(below:)
forcing recursive materialize of demoted package
item(for:request:completionHandler:)
Going through fast-path for the rootItem at startup
no vfs item for %s
fetch id for %@ remapped to FS root
waitForChanges(below:request:completionHandler:)
  item is not a live directory
  processing barrier request %s
  FS barrier observed for %s
creation of descendents
  waiting for %{public}s prior to %s for %s: %s
domain_wide_error != 
  finished %{public}s for %s
waitForPropagation(for:request:barrierTimestamp:jobs:completionHandler:)
  %{public}s of %s failed for %s: %@
move-out of descendents
  + active enumerators:
sync engine state:
v16@?0@"NSURL"8
cannot get coordination to %{public}s %s: %@
  %{public}s all files for %s
%{public}s of %s failed: %@
%{public}s path %s
com.apple.file-provider-domain-id
com.apple.file-provider-domain-id#PN
preserve Domain Folder directory %s, reached max bounce number
removal of %s failed: %@
removing support path %s
deleting files for non-invalided domain
com.apple.FileProvider.maintenance.fpck-repair
creating wharf/delete directory at %s
creating wharf directory at %s
error while computing root directory URL: %@
must generate path for root directory
must create root directory at %s
root directory already exists at %s
registering xpc activities
copyDatabase(to:completionHandler:)
Failed to provide temporaryDirectoryURL because domain is invalidated
initializeErrorGeneration()
  fsSnapshotCounters: 
  fpSnapshotCounters: 
FPXEnumerator
FPDDomainBackend
@24@0:8@"FPDDomain"16
@"NSFileProviderDomainVersion"16@0:8
B24@0:8@"NSURL"16
@"NSURL"32@0:8@"NSURL"16^@24
v40@0:8@"FPItemID"16@"FPDRequest"24@?<v@?@"FPItem"@"NSError">32
v40@0:8@"NSURL"16@"FPDRequest"24@?<v@?@"FPItem"@"NSError">32
v40@0:8@"NSURL"16@"FPDRequest"24@?<v@?@"FPItemID"@"NSError">32
v44@0:8@"NSArray"16B24@"FPDRequest"28@?<v@?@"NSDictionary"@"NSError">36
@"NSProgress"56@0:8@"NSURL"16@24Q32@"FPDRequest"40@?<v@?@"NSError">48
@"NSProgress"40@0:8@"NSURL"16@"FPDRequest"24@?<v@?@"FPItemID"@"NSError">32
v40@0:8@"FPItemID"16@"FPDRequest"24@?<v@?@"NSError">32
v56@0:8@"FPItemID"16{_NSRange=QQ}24@"FPDRequest"40@?<v@?@"NSError">48
v68@0:8@"FPItem"16Q24@"FPSandboxingURLWrapper"32Q40B48@"FPDRequest"52@?<v@?@"FPItem"@"NSError">60
v32@0:8@"NSURL"16@"FPDRequest"24
v52@0:8@"FPItemID"16B24B28B32@"FPDRequest"36@?<v@?@"NSError"@"FPSandboxingURLWrapper"@"FPSandboxingURLWrapper">44
v28@0:8@"FPCTLTermDumper"16B24
v32@0:8@"FPDRequest"16@?<v@?@"NSError">24
v48@0:8@"FPExtensionEnumerationSettings"16@"<FPDLifetimeExtender>"24@"<FPXEnumeratorObserver>"32@?<v@?@"<FPXEnumerator>"@"NSError">40
v48@0:8@"NSArray"16@"NSURL"24@"FPDRequest"32@?<v@?@"NSDictionary"@"NSError">40
v40@0:8@"FPItemID"16B24B28@?<v@?@"NSError">32
@"FPDDomainIndexer"36@0:8@"FPDExtension"16B24^@28
v32@0:8@"FPDRequest"16@?<v@?@"<FPXOperationService>"@"NSXPCListenerEndpoint"@"NSError">24
v44@0:8@"FPItemID"16B24@"FPDRequest"28@?<v@?@"NSXPCListenerEndpoint"@"NSArray"@"NSError">36
v32@0:8@"FPDRequest"16@?<v@?@"NSXPCListenerEndpoint"@"NSError">24
v48@0:8@"NSArray"16Q24@"FPDRequest"32@?<v@?@"NSDictionary"@"NSDictionary">40
v40@0:8@"NSURL"16@"FPDRequest"24@?<v@?@"NSURL"@"NSError">32
v40@0:8@"NSURL"16@"NSURL"24@?<v@?B>32
v24@0:8@?<v@?Q@"NSError">16
v24@0:8@?<v@?@"NSURL"@"NSError">16
@"FPDDomainCleanupResult"32@0:8Q16^@24
v24@0:8@"NSURL"16
@"NSURL"24@0:8@"FPItemID"16
v48@0:8@"FPItemID"16@"FPDRequest"24@"NSProgress"32@?<v@?@"NSURL"@"NSError">40
v24@0:8@"FPItemID"16
v48@0:8@"FPItemID"16Q24@"FPDRequest"32@?<v@?@"NSError">40
v40@0:8@"NSString"16@"FPDRequest"24@?<v@?@"NSError">32
v64@0:8@"NSError"16@"NSArray"24@"NSArray"32@"NSData"40@"NSFileProviderDomainVersion"48@?<v@?@"NSError">56
v32@0:8@"NSError"16@?<v@?@"NSError">24
v32@0:8@"FPDRequest"16@?<v@?@"NSArray"@"NSError">24
v40@0:8@"NSArray"16@"FPDRequest"24@?<v@?@"NSDictionary"@"NSError">32
v32@0:8@"<FPProgressProtocol>"16@?<v@?@"NSError">24
v24@0:8@?<v@?B@"NSError">16
v48@0:8q16q24q32q40
@32@0:8:16@24
_TtC9libfssync19PersistenceCounters
jobsWaitingForPersistence
jobsNeedingFlushRunning
fsJobsNeedingFlushWaitingForFlush
fpJobsNeedingFlushWaitingForFlush
isStarving
reconciliationTable
jobRegistry
snapshotA
snapshotB
syncState
from to  reason 
 recursively reason 
 isRecursive reason 
libfssync/Database.swift
 wait-for-continue:
 --> shoudFlush:
expected received 
filename below 
item type mismatch
unsupported error type
structuralVersion
requestedContentVersion
availableContentVersion
requestedStructuralVersion
availableStructuralVersion
expectedContentVersion
currentContentVersion
expectedStructuralVersion
currentStructuralVersion
receivedContentVersion
_TtC9libfssync11TaskTracker
_TtC9libfssync23MaintenanceContinuation
rowID
rescan-parent-deleted-children
resolve-item-evictability
scheduler is not running
nothing to unpause
unpause-reconciliations
mark-locked-directories
feature flag is disabled
mark-packages-syncroot
mark-packages-evictable
Running UpdateClosestSyncRoot on non-VFS item ID, not valid
Couldn't find item, bailing on job
Item is a sync root again, job is not valid anymore
Running UpdateClosestSyncRoot on non-directory, not valid
update-closest-sync-root
retrigger-resolved-vendor-exclusion
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/fssync/libfssync/sync-logic/Maintenance.swift
sync root cannot be set
unblock-ignore-folder
evictability cannot be set
unblock-evictability
unsupported type
should not try to encode those types
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/fssync/libfssync/sync-logic/Reconciliation.swift
deleted not reconciled
deleted on both sides
trying to delete a non existing reconciliation: 
FPShouldRetryExclusion
libfssync/Reconciliation.swift
Expecting an item for reconciliation: 
 forcing bounce of colliding item %s to break replace cycle with %s
 forcing bounce of colliding item %s to break move cycle with %s
 forcing bounce of colliding item %s to break reparent cycle with %s
Collision with the trash item is not allowed
Collision with the root item is not allowed
Can't get a collision in a delete
  back-propagating 
: item contains unexpected diffs 
: item contains diffs for still pending fields
item has been evicted
  back-propagating content: item contains an unexpected content change
  back-propagating content: requested by file tree
 to prevent sync-loop
item will be revived
recursive deletion
B16@?0^{fpfs_tag=*i}8
_TtC9libfssync22DiskImportContinuation
com.apple.fileproviderd.disk-import
skip item not importing from disk
skip item not watching content
skip item with pending children
%@ evaluating disk import status for %{public}s
  enumerating %s is throttled, unfaulting folder to allow user access
  import of %s within %s is throttled, unfaulting folder to allow user access
execute(on:continuation:result:completion:)
disk-import-finished
mark-disk-import-done
unfault-directory-and-children
selectNextDirectoryForDiskImport(db:result:)
continue-disk-import
reimportRemovingCachedItems
reimportDataless
databaseInitError(
structural_version
structural_filename
structural_parent_id
vfs_generationid
captured_content_
was_dataless_before_disk_import
disk_import_status
materialization_status
sourceItemID
sourceItemSnapshotVersion
otherVersion
requestedState
revivedIDAndVersion
diffs
isRecursive
libfssync/Propagation.swift
unexpected propagation job
  cannot propagate update for %{public}s: snapshot version not found for %{public}s
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/fssync/libfssync/sync-logic/Propagation.swift
  trying to propagate content from a dataless item %s
  cannot propagate creation for %{public}s: snapshot version not found for %{public}s
  cannot propagate creation for %{public}s: parent folder is not reconciled
file providers don't support setting the bit: 
no target itemID
no target version
no recursivity defined
no source version
update(itemID:stagedContext:requestedState:otherVersion:baseVersion:on:result:completion:)
stageUpdate(itemID:capturedContent:requestedState:otherVersion:baseVersion:on:result:completion:)
other version not defined
lookup(continuation:requestedState:otherVersion:on:result:completion:)
create(stagedContext:requestedState:otherVersion:on:result:completion:)
stageCreation(capturedContent:requestedState:otherVersion:on:result:completion:)
should not call itemIDForThrottling on propagation job
rootIsPinnedCache
  FPTree stable
 x-validated result for %s returned:%s
 x-validated query for %s ino:%llu expected:%s
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/fssync/libfssync/implementations/file-system/tree/VFSFileTree+Lookup.swift
 x-validation found %s while expecting %s: promoting item
 x-validation found %s while expecting %s: demoting item
(pkg item) expected %{public}s, but received %{public}s
can't resolve the trash folder after receiving an fsevent in the trash: %{public}@
libfssync/VFSFileTree+Lookup.swift
fileID of the trash changed
fileID of the root changed
Unexpected ItemID mismatch!
don't ignore the root of the domain
marking package %s as sync root
i16@?0^{dirent=QQSSC[1024c]}8
 Dropping busy date for remotely provided file %{public}@
 Significantly too slow SQL statement: %s
vm steps: %ld (max: %ld)
warning: %s%s%s
 temporary index
 non-indexed sort
 Possible slow statement on %s:
  binds:    %ld
  changes:  %ld
  vm steps: %ld (max: %ld)
  warning: %s%s%s
  %s
 Possible slow statement on %s:
  binds:    %ld
  columns:  %ld
  rows:     %ld
  vm steps: %ld (max: %ld)
  warning: %s%s%s
  %s
[can't get query plan]
explain query plan 
libfssync/FileTreeWriter.swift
content version 
fileTreeChangesHandler
newJobLockAggregator
itemLockingChangeHandler
canSetEvictabilityHandler
concurrentOperationLimit
concurrentContentUpdateLimit
concurrentProvideFileLimit
hasPlannedRescan
publishHandler
wharf
stream was signaled
forget change for 
itemID item fetchStrategy 
invalidate()
FPCK: all checks done.
libfssync.FPCK
init()
_TtC9libfssync4FPCK
B44@0:8@16B24@28^@36
v24@0:8q16
@16@0:8
v24@0:8@16
@40@0:8@16@24B32B36
B48@0:8@16Q24^@32@?40
numberOfFilesChecked
numberOfBrokenFilesInFSAndFSSnapshotCheck
numberOfBrokenFilesInFSSnapshotAndFPSnapshotCheck
accumulatedSuccesses
accumulatedErrors
accumulatedDomains
totalDatalessItems
totalMaterializedItems
accumulatedFileSizes
accumulatedSizeOfDisk
accumulatedDownloads
accumulatedUploads
multipleHardlinksExtensions
telemetryReport
fsSnapshotChecker
fpSnapshotChecker
openBackupDatabases
isCiconia
diskVsFSSnapshotIgnoredFilenames
launchOptions
shouldPause
discoveredDiskBrokenInvariantsCounters
repairedDiskBrokenInvariantsCounters
discoveredDiskVsFSSnapshotDiffCounters
repairedDiskVsFSSnapshotDiffCounters
discoveredFSSnapshotVsFPSnapshotDiffCounters
discoveredReconciliationTableBrokenInvariantsCounters
providerVersion
Tq,N,VnumberOfFilesChecked
Tq,N,VnumberOfBrokenFilesInFSAndFSSnapshotCheck
Tq,N,VnumberOfBrokenFilesInFSSnapshotAndFPSnapshotCheck
T@"NSDictionary",N,C
reconciled_entry_for_dir_with_fp_content_changes
reconciled_entry_for_dir_with_fs_content_changes
reconciled_entry_without_fp_version
reconciled_entry_without_fs_version
stable_entry_with_fp_captured_content
stable_entry_with_fs_captured_content
stable_entry_with_non_default_scheduling_priority
inconsistent_scheduling_states
content_status_fs_not_interested
disk_import_mismatch
different_collaboration_identifier
is_locked_in_FP_Snapshot_but_not_on_FS_Snapshot
is_locked_on_FS_Snapshot_but_not_in_FP_Snapshot
is_hidden_in_FP_Snapshot_but_not_on_FS_Snapshot
is_hidden_on_FS_Snapshot_but_not_in_FP_Snapshot
extension_is_hidden_in_FP_Snapshot_but_not_on_FS_Snapshot
extension_is_hidden_on_FS_Snapshot_but_not_in_FP_Snapshot
is_pinned_in_FP_Snapshot_but_not_on_FS_Snapshot
is_pinned_on_FS_Snapshot_but_not_in_FP_Snapshot
is_sync_root_in_FP_Snapshot_but_not_on_FS_Snapshot
is_sync_root_on_FS_Snapshot_but_not_in_FP_Snapshot
is_evictable_in_FP_Snapshot_but_not_on_FS_Snapshot
is_evictable_on_FS_Snapshot_but_not_in_FP_Snapshot
is_dataless_in_FP_Snapshot_but_not_on_FS_Snapshot
is_dataless_on_FS_Snapshot_but_not_in_FP_Snapshot
different_before_bounce_filenames
different_gen_count
different_children_count
different_tag_data
different_favorite_rank
different_permissions
different_document_size
different_physical_size
different_last_used_date
different_creation_date
different_content_modification_date
different_parent_IDs
different_filenames
is_in_FS_Snapshot_but_not_in_FP_Snapshot
is_in_FS_Snapshot_but_ignored_on_disk
is_in_FS_Snapshot_but_not_on_disk
is_locked_in_FS_Snapshot_but_not_on_disk
is_locked_on_disk_but_not_in_FS_Snapshot
is_hidden_in_FS_Snapshot_but_not_on_disk
is_hidden_on_disk_but_not_in_FS_Snapshot
extension_is_hidden_in_FS_Snapshot_but_not_on_disk
extension_is_hidden_on_disk_but_not_in_FS_Snapshot
is_pinned_in_FS_Snapshot_but_not_on_disk
is_pinned_on_disk_but_not_in_FS_Snapshot
is_sync_root_in_FS_Snapshot_but_not_on_disk
is_sync_root_on_disk_but_not_in_FS_Snapshot
is_evictable_in_FS_Snapshot_but_not_on_disk
is_evictable_on_disk_but_not_in_FS_Snapshot
is_dataless_in_FS_Snapshot_but_not_on_disk
is_dataless_on_disk_but_not_in_FS_Snapshot
is_on_disk_but_not_in_FS_Snapshot
is_purgeable_not_evictable
is_evictable_without_flags
has_known_pkg_extension_without_bundle_bit
is_brm_file_fully_materialized
file_has_more_than_one_hardlink
sync_root_has_demoted_flag_bit
package_has_sync_root_bit
ignored_folder_in_ignored_folder_has_sync_root_bit_set
ignored_file_is_evictable
ignored_folder_missing_sync_root_bit
evictable_file_in_ignored_folder
dataless_file_in_ignored_folder
is_evictable_package_item
is_dataless_package_item
is_package_duplicate
is_directory_duplicate
is_file_duplicate
is_neither_dataless_nor_evictable_nor_pinned
has_uf_compressed_flag_without_sf_dataless
has_wrong_protection_class
is_empty_dir_with_extension
is_empty_package
is_owned_by_other
is_owned_by_root
is_tracked_but_fileid_mismatch
is_tracked_but_docid_is_stale
is_tracked_but_docid_is_unknown
is_tracked_but_docid_is_zero
is_untracked_but_should_be
is_tracked_but_should_not_be
has_invalid_favorite_rank
has_invalid_last_used_date
has_invalid_tag_data
is_filled_with_zeros
is_dataless_directory_with_data
is_dataless_file_with_data
is_evictable_without_decmpfs_xattr
has_decmpfs_xattr_but_not_evictable
has_flag_without_decmpfs_xattr
has_invalid_decmpfs_xattr
reconciliationTableCheck(resultHandler:)
  FROM reconciliation_table
B44@?0i8^{fpfs_fileattrs={fpfs_item_handle=QQII*Q}{fpfs_metadata=ib1b1b1b1b1b1b1b1b1b1b1b1b1Sq{timespec=qq}{timespec=qq}{timespec=qq}Q{fpfs_tag_data=^vQi}(?=II)QQq*q*^{fpfs_xattr}I*i}Q[0c]}12@"NSString"20Q28B36B40
unknownPath/unknownFilename
FPCK: error fetching item in the FSSnapshot.
FPCK: reconciliation doesn't know about tags
FPCK: reconciliation doesn't know about permissions
FPCK: reconciliation doesn't know about parent ID
FPCK: reconciliation doesn't know about kind
FPCK: reconciliation doesn't know about children count
FPCK: reconciliation doesn't know about last used date
FPCK: reconciliation doesn't know about creation date
FPCK: reconciliation doesn't know about modification date
FPCK: reconciliation doesn't know about filename
FSAndFSSnapshotCheck(fromURL:options:resultHandler:)
FPCK: error fetching the item in the reconciliation table: %{public}@
SQLDB: fetch reconciliation
  FROM reconciliation_table
 WHERE 
disk_broken_invariants_
disk_versus_fs_snapshot_diffs_
fs_snapshot_versus_fp_snapshot_diffs_
reconciliation_table_broken_invariant_
totalFixedDiskBrokenInvariants
totalFixedFSSnapshotDiffs
remaining_disk_broken_invariants_
remaining_fs_snapshots_diffs_
FPCK: FPDRTCReporting remainingFSSnapshotDiffs
FPCK: FPDRTCReporting remainingDiskBrokenInvariants
FPCK: FPDRTCReporting reconciliationTableBrokenInvariants %s 
FPCK: FPDRTCReporting fsSnapshotVersusFpSnapshotDiff %s 
FPCK: FPDRTCReporting diskVersusFSSnapshotDiff %s 
FPCK: FPDRTCReporting diskBrokenInvariants %s 
Can't open database at: %{public}s, launching only FPCK disk checks.
dump(to:limitNumberOfItems:includingFileTrees:)
+ disk import scheduler: 
too deep - stopping dump
should fetch updated item 
max number of items reached
+ processing requests
+ reconciliation
stabilization for 
: propagation for 
materializingParent
+ database history:
+ database: version=
+ FSEvent: UUID=
 (invalid anchor: 
+ domain version: 
+ feature flags: 
+ scheduling state: 
+ error generation: 
libfssync/FPCK.swift
encountered database error 
FPDRTCReporting: postReport with %ld entries
FPCK: launching FSSnapshot and FPSnapshot checks.
FPCK: launching reconciliation table checks.
FPCK: launching disk and FSSnapshot checks.
FSSnapshotAndFPSnapshotCheck(resultHandler:)
v16@?0@"PQLConnection"8
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/fssync/libfssync/implementations/file-system/persistence/SQLDatabase.swift
invalidateSource()
closing the wharf
stopping tracker
waiting for job completion
closing trees
cancelling in-flight requests
stopping scheduler
cancel trees
disable event aggregation
  invalidating database
running job: %s
%@ Running jobs
roDB
uuid
onError
onNextDurableFlush
flushTimer
isUnsafe
historyTable
enumerationAnchorChanged
onEnumerationAnchorChanged
lastPropagationDateChanged
onLastPropagationDateChanged
onEnumeratorShouldUpdate
onFolderHasBeenIgnored
itemWithPinningChange
itemForEvictabilityReevaluation
keepDownloadedItemsWithDatalessParent
vacuumBatchSize
hasRunTableVacuum
hasRunWharfVacuum
isVacuumInProgress
v32@?0@"PQLConnection"8^v16q24
init(url:fsTree:fpTree:telemetry:options:onError:)
database is ready
opening database %{public}s at %{public}s
feature flag has been enabled: %s
Unsupported %s state, was the feature enabled and turned off?
  %{public}s snapshot mutation: %{public}s
delete-children<id:
  persist job: %{public}s
SELECT rt.rowid, 
  FROM reconciliation_table AS rt
 WHERE 
  FROM reconciliation_table AS rt INDEXED BY recursive_deletion_root
 WHERE rt.fs_deletion_status & 
+rt.fs_scheduling_state = 
AND +rt.fs_scheduling_state_conditions & 
SQLDB: reconciliation update
  reconciliation update: %{public}s
UPDATE reconciliation_table
   SET 
 WHERE rowID = 
libfssync/ItemState.swift
Expected value of 
+rt.fp_scheduling_state = 
AND +rt.fp_scheduling_state_conditions & 
libfssync/Job+SQLCodable.swift
unhandled job type
  FROM jobs
 WHERE 
unsupported class
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/fssync/libfssync/implementations/file-system/persistence/SQLJobRegistry.swift
UPDATE jobs
   SET 
       scheduling_timestamp = MIN(scheduling_timestamp, 
       scheduling_priority = MAX(scheduling_priority, 
AND source_item_id = 
UPDATE background_downloader
   SET state = 
%s <fs:%s reason:%s> completed: %@
testingHarnessScheduling
testingHarnessBarrier(
testingHarnessStabilization
testingHarnessPropagation
testingHarnessEviction
testingHarnessMaterialization(
runTestingOperations(by: 
listTestingOperations(by: 
stabilization(by:
materializeParentHierarchy(
materialization(
itemCreation(<unknown>, by:
enumeration(<unknown>, by:
singleItemChange(
deletionRequest(
downloadRequest(
forceIngestionForItemID(
DB queue wait
asyncBatch(function:side:afterNextDurableFlush:onCancel:updateBlock:)
libfssync/ConcreteDatabase.swift
Should not happen
Expected materialization
Invalid partial materialization request for parent directory
  cancelling request for %s: %s
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/fssync/libfssync/interfaces/job/Job.swift
  cancelling eviction %{public}s
  cancelling materialization %{public}s
propagation <fs:%s reason:%s> completed: %@
%s did not propagate: item is not bound
%s did not propagate: propagating is still in progress
propagation <fp:%s reason:%s> completed: %@
  invalid type transition from 
REJECT: new item in an unknown parent
REJECT:parent is waiting for import (
REJECT: parent is importing the disk and item is not reconciled
REJECT: parent is not watching its children
REJECT: parent is pending import, the item will be scanned when importing the parent
  inconsistent children status for item %s
REJECT: parent is an ignored folder
REJECT: parent is pending deletion
never delete the root item
unblocking waiters on %s
fetch metadata of 
list children of 
fetch content of 
Did Flush
libfssync/SQLDatabase.swift
unhandled error 
 while flushing the database
%@ db was flushed (commit)
batch received after db has been closed will be ignored
can't issue barrier for 
can't get file descriptor for 
cannot make persistent flush: db does not exist anymore
performing a fcntl(F_BARRIERFSYNC)
v28@?0^v8i16^^v20
PROPAGATION_DATE_CHANGED
SCHEDULE_BACKGROUND_DOWNLOAD
CONTENT_POLICY_CHANGED
SCHEDULE_FP_BACKGROUND_DOWNLOAD
unsupported database version %{public}s
can't upgrade DB from %{public}s -> %{public}s: %{public}@
cannot setup schema for %{public}s: %{public}@
upgrading database %{public}s -> %{public}s
applying database bugfixes %{public}s:%s -> %{public}s:%s
updating, clearing the throttles
UPDATE reconciliation_table
   SET fs_vfs_generationid = 0, fs_content_size = NULL
 WHERE kind = 
  error in SCHEDULE_FP_BACKGROUND_DOWNLOAD: %@
  scheduling background download <i:%{public}s reason:%{public}s>
UPDATE background_downloader
   SET reason = reason | 
INSERT INTO background_downloader
     VALUES (
SELECT id
  FROM background_downloader
    WHERE id = 
extent_location IS NULL AND
extent_length IS NULL
extent_location = 
 AND
extent_length = 
  error in CONTENT_POLICY_CHANGED: %@
  unscheduling background download <i:%{public}s reason:%{public}s>
SELECT COUNT(id) FROM background_downloader
WHERE id = 
UPDATE background_downloader
   SET reason = reason & ~
  error in SCHEDULE_BACKGROUND_DOWNLOAD: %@
  error in PINNING_CHANGED: %@
  error in PROPAGATION_DATE_CHANGED: %@
PRAGMA cache_spill = 
PRAGMA cache_size = 
PRAGMA recursive_triggers = true
processPendingIngestion()
syncBatch(function:updateBlock:)
  processing FP tree changes
  processing FS tree changes
  processing ingestion
%{public}s)
%{public}s
  discarded %s: %s
  already known %s
%{public}s force fetch: %{public}s
deletion of unknown item
deletion of unknown item while a folder is currently busy is running on 
requested by file tree
unknown item while listing children of parent item 
item is trash and not in the snapshot
item is root and not in the snapshot
received delete ingestion while delete-item job running, delaying
already fetching metadata for 
Has Runnable Jobs
error while processing jobs: %@
not processing more jobs since we were cancelled
executeRunnableJobs(on:allowConcurrentJobs:count:)
  executing jobs, availabilities fetch-from-fs:"%s" other-fs:"%s"/%s fetch-from-fp:"%s" other-fp:"%s"/%s
com.apple.fileproviderd.fpfs.running-jobs
vacuum(force:completionHandler:)
  vacuum-ing
  vaccuum still running when triggered
  pausing vacuum because the XPC activity ask for deferral after %fs, newSize: %s, reclaimed: %s (%s)
  finished vacuum in %fs, newSize: %s, reclaimed: %s (%s)
DB queue wait for flush
SQLDB: Force flush of database
  vacuum-ing wharf with an upper bound of %ld
wharfVacuum(force:completionHandler:)
  vacuum-ed %ld files from <wharf>/ingest/, %ld files from <wharf>/propagate/
  wharf didn't have anything to vacuum
  wharf vacuum failed: %@
SELECT COUNT(*)
  FROM jobs
 WHERE type = 
   AND scheduling_state NOT IN 
SELECT COUNT(*)
  FROM fp_item_jobs
 WHERE type = 
SELECT COUNT(*)
  FROM fs_item_jobs
 WHERE type = 
SELECT COUNT(*)
  FROM reconciliation_table
 WHERE fp_captured_content_file_id IS NOT NULL AND fp_captured_content_file_id != 0
SELECT COUNT(*)
  FROM reconciliation_table
 WHERE fs_captured_content_file_id IS NOT NULL AND fs_captured_content_file_id != 0
incrementalDBVacuum(force:size:completionHandler:)
PRAGMA page_size
PRAGMA page_count
unlockedValue
lock
fpfs
updatedItemsRank
wrapped
extraLogs
snapshotMutations
reconciliationMutations
jobs
libfssync/JobResult.swift
currentPosition
completed
rootFD
limit
_TtC9libfssync18VFSDirectoryLister
lookupCache
domainID
_TtC9libfssync18URLDirectoryLister
B16@?0r*8
 Ignoring the busy file %s from enumeration
libfssync/VFSDirectoryLister.swift
should be implemented by subclass
positionDirectoryID
positionGenerationCount
positionReadCount
positionUnreadCount
errorGeneration(
schedulingState(
fpStreamSyncToken(
fsStreamEventID(
dbBugfixRevision(
mark_directories_as_locked
mark_package_syncroot
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/fssync/libfssync/interfaces/persistence/SyncStateStore.swift
_TtC9libfssync12StringDumper
string
indent
_TtC9libfssync10FileDumper
libfssync/FPItemVersion.swift
libfssync/Database+JobExecution.swift
scheduling a job that is not runnable
Scheduler: Async Job execution
  executing %{public}s
  job locked out of execution %{public}s by rules %@
job mutated during execution or completion handler got called twice: 
can't handle persistence error: 
  done executing %{public}s%{public}s
  done executing %{public}s%{public}s
dataProtectionClass
com~apple~CloudDocs
_TtC9libfssync21PaginatedContinuation
position
table
itemColumnCount
itemColumns
nonSyncableAttributesColumns
nonSyncableAttributesColumnsCount
cacheByID
cacheCleared
 RENAME COLUMN
decoration_collaboration_identifier TO metadata_collaboration_identifier
 ADD COLUMN metadata_collaboration_identifier TEXT NULL
 ADD COLUMN decoration_last_editor_device_name TEXT
 RENAME COLUMN
decoration_shared_item_identifier TO decoration_collaboration_identifier
 ADD COLUMN decoration_conflicting_versions BLOB
CREATE TRIGGER "keep_downloaded_content_policy/
/background_download_on_insert"
 AFTER INSERT ON 
BEGIN
  SELECT SCHEDULE_FP_BACKGROUND_DOWNLOAD(new.id, 
(CASE new.decoration_content_policy
  WHEN 
 THEN
    new.decoration_inherited_content_policy
  ELSE
    new.decoration_content_policy
 END)
/background_download_on_update"
 AFTER UPDATE OF decoration_content_policy, decoration_inherited_content_policy ON 
(CASE old.decoration_content_policy
  WHEN 
 THEN
    old.decoration_inherited_content_policy
  ELSE
    old.decoration_content_policy
 END)
CREATE TRIGGER "content_policy/
/evictable_update"
 AFTER UPDATE OF decoration_content_policy, decoration_inherited_content_policy ON 
BEGIN
  SELECT CONTENT_POLICY_CHANGED(new.id, 
/recursive_update"
 AFTER UPDATE OF decoration_content_policy, decoration_inherited_content_policy ON 
  WHEN new.metadata_kind == 
BEGIN
  UPDATE 
    SET decoration_inherited_content_policy = 
  WHERE parent_id = new.id
  AND id != new.id
    AND decoration_inherited_content_policy != 
/parent_update"
 AFTER UPDATE OF parent_id ON 
  WHEN new.parent_id != old.parent_id
 BEGIN
   UPDATE 
     SET decoration_inherited_content_policy = 
     WHERE rowID = new.rowID
     AND id != new.parent_id
     AND decoration_inherited_content_policy != 
IFNULL((SELECT (CASE decoration_content_policy
               WHEN 
               THEN decoration_inherited_content_policy
               ELSE decoration_content_policy
               END)
           FROM 
         WHERE id = 
/item_update"
 AFTER UPDATE OF decoration_content_policy ON 
 WHEN new.decoration_content_policy != old.decoration_content_policy
 AND new.id != new.parent_id
BEGIN
  UPDATE 
   WHERE rowID = new.rowID;
/item_insertion"
 AFTER INSERT ON 
   WHERE rowID = new.rowID
   AND id != parent_id;
 ADD COLUMN decoration_inherited_content_policy UNSIGNED INT NOT NULL DEFAULT 0
 ADD COLUMN decoration_content_policy UNSIGNED INT NOT NULL DEFAULT 0
 ADD COLUMN decoration_shared_item_identifier TEXT NULL
 ADD COLUMN metadata_link_count UNSIGNED INT
recursive_non_evictable_count
recursive_evictable_count
metadata_is_evictable != 0 AND 
metadata_is_dataless = 0 AND 
metadata_kind = 
CREATE TRIGGER "
/recursive_update_reparent"
  AFTER UPDATE OF parent_id ON 
          WHEN old.parent_id != new.parent_id
BEGIN
  -- If the item was reparented, delete from the old parent
  UPDATE 
   WHERE id = old.parent_id AND id != new.id AND old.parent_id != new.parent_id;
  -- If the item was reparented, add to the new parent
  UPDATE 
   WHERE id = new.parent_id AND id != new.id AND old.parent_id != new.parent_id;
/recursive_update"
  AFTER UPDATE OF 
          WHEN old.
BEGIN
  -- Update the count for the parent, supporting reparenting cases
  UPDATE 
   WHERE id = old.parent_id
     AND NOT (old.id IN (
/local_update"
  AFTER UPDATE OF 
          WHEN (
BEGIN
  -- Update the recursive_dataless_count for the current item
  UPDATE 
 + 1
                        ELSE 
 - 1
                        END
   WHERE id = new.id AND (
/delete"
  AFTER DELETE ON 
   WHERE id = old.parent_id;
/insert_parent"
  AFTER INSERT ON 
          WHEN new.metadata_kind = 
 + IFNULL((SELECT SUM(
                                       FROM 
                                      WHERE parent_id = new.id AND id != new.id),
                                    0)
   WHERE id = new.id;
/insert"
  AFTER INSERT ON 
          WHEN 
 + 1
   WHERE id = new.id;
metadata_is_evictable = 0 AND 
recursive_evictability
DROP TRIGGER IF EXISTS "recursive_evictability/
/local_update_evictable"
/local_update_non_evictable"
DROP TRIGGER IF EXISTS "
/recursive_update_reparent"
/recursive_update"
recursive_dataless_count
metadata_is_dataless != 0
recursive_dataless
   SET recursive_disallow_exclusion_count = 1
 WHERE (decoration_capabilities & 
   SET recursive_disallow_deletion_count = 1
 WHERE (decoration_capabilities & 
recursive_disallow_deletion_count
recursive_disallow_exclusion_count
decoration_capabilities & 
 ADD COLUMN recursive_disallow_exclusion_count UNSIGNED INT NOT NULL DEFAULT 0
 ADD COLUMN recursive_disallow_deletion_count UNSIGNED INT NOT NULL DEFAULT 0
   SET recursive_evictable_count = 1
 WHERE metadata_kind != 
   AND metadata_is_dataless = 0
   AND metadata_is_evictable != 0
 ADD COLUMN recursive_evictable_count UNSIGNED INT NOT NULL DEFAULT 0
 ADD COLUMN metadata_os_type UNSIGNED INT DEFAULT NULL
CREATE TRIGGER "hierarchical_user_info/
/recursive_invalidation"
 AFTER UPDATE OF decoration_inherited_user_info ON 
  WHEN new.decoration_inherited_user_info IS NULL AND new.metadata_kind == 
     SET decoration_inherited_user_info = NULL
   WHERE parent_id = new.id AND id != new.id
     AND +metadata_kind == 
     AND +decoration_inherited_user_info IS NOT NULL;
  -- Update the last change date
  SELECT PROPAGATION_DATE_CHANGED(2, new.id);
/entry_update"
 AFTER UPDATE OF decoration_user_info, parent_id ON 
     SET decoration_inherited_user_info = NULL
   WHERE rowID = new.rowID
     AND +decoration_inherited_user_info IS NOT NULL;
 ADD COLUMN decoration_inherited_user_info BLOB NULL
 ADD COLUMN metadata_closest_syncroot UNSIGNED INT NOT NULL DEFAULT 0
(id, metadata_is_package)
_parent_id__id__ignore ON 
(metadata_kind, id, parent_id, metadata_is_ignoreroot)
 ADD COLUMN metadata_is_ignoreroot BOOL NOT NULL DEFAULT 0
_parent_id__id__syncroot ON 
(id, vfs_fileid, parent_id, metadata_is_syncroot)
CREATE TRIGGER "pinning/
/recursive_pinning_update"
  AFTER UPDATE OF metadata_is_in_pinned_folder ON 
          WHEN old.metadata_is_in_pinned_folder != new.metadata_is_in_pinned_folder
BEGIN
  UPDATE 
     SET metadata_is_in_pinned_folder = new.metadata_is_in_pinned_folder
   WHERE parent_id = new.id AND metadata_is_pinned = 0;
  SELECT PINNING_CHANGED(new.id, 
/recursive_item_update"
 AFTER UPDATE ON 
     SET metadata_is_in_pinned_folder = (metadata_is_pinned != 0
                                         OR EXISTS (SELECT id
                                                      FROM 
                                                     WHERE id = new.parent_id
                                                       AND id != new.id
                                                       AND metadata_is_in_pinned_folder != 0))
   WHERE id = new.id
     AND (old.metadata_is_pinned != new.metadata_is_pinned
          OR old.parent_id != new.parent_id);
/insert"
 AFTER INSERT ON 
                                                     WHERE id = new.parent_id
                                                       AND id != new.id
                                                       AND metadata_is_in_pinned_folder != 0))
  WHERE id = new.id;
content_version 
structural_version 
vfs_fileid INT NOT NULL,
vfs_generationid INT NOT NULL,
_vfs_not_evictable_idx
          ON 
(metadata_is_evictable)
       WHERE NOT metadata_is_evictable
_vfs_fileid_idx ON 
_materialize_children ON 
(parent_id, metadata_is_dataless, metadata_kind)
_parent_id__filename_idx
    ON 
(parent_id, filename 
_parent_id_idx ON 
-- Allowed operations on the item
decoration_capabilities INT,
-- Transfer status
decoration_is_uploading BOOL NOT NULL,
decoration_is_uploaded BOOL NOT NULL,
decoration_uploading_error BLOB NULL,
decoration_downloading_error BLOB NULL,
decoration_is_excluded_from_sync BOOL NOT NULL,
-- Sharing
decoration_is_shared BOOL NOT NULL,
decoration_is_top_level_shared_item BOOL NOT NULL,
decoration_is_shared_by_current_user BOOL NOT NULL,
decoration_preformatted_owner_name TEXT NULL,
decoration_preformatted_most_recent_editor_name TEXT NULL,
decoration_last_edited_by_current_user BOOL NOT NULL,
decoration_sharing_permissions TEXT NULL,
-- App libraries
decoration_is_container BOOL NOT NULL,
decoration_is_container_pristine BOOL NOT NULL,
decoration_app_container_bundle_identifier TEXT NULL,
decoration_cloud_container_identifier TEXT NULL,
decoration_container_display_name TEXT NULL,
-- Other
decoration_display_name TEXT NULL,
decoration_has_unresolved_conflicts BOOL NOT NULL,
-- Free-form data
decoration_item_decoration BLOB NULL,
decoration_user_info BLOB NULL
 PRIMARY KEY,
  parent_id 
 NOT NULL,
  filename TEXT NOT NULL,
  snapshot_version UNSIGNED INT NOT NULL DEFAULT 0,
  metadata_kind TINYINT NOT NULL,
  metadata_is_dataless BOOL NOT NULL,
  metadata_is_package BOOL NOT NULL,
  metadata_size UNSIGNED BIG INT NOT NULL,
  metadata_posix_permissions SMALLINT NOT NULL,
  metadata_creation_date BIGINT NULL,
  metadata_content_modification_date BIGINT NULL,
  metadata_last_used_date BIGINT NULL,
  metadata_tag_data BLOB NULL,
  metadata_favorite_rank BIGINT UNSIGNED NULL,
  metadata_is_hidden BOOL NOT NULL,
  metadata_extension_hidden BOOL NOT NULL,
  metadata_child_item_count INT NULL,
  metadata_extended_attributes BLOB NULL,
  metadata_is_locked BOOL NOT NULL,
  metadata_physical_size UNSIGNED BIG INT NULL,
  metadata_is_evictable BOOL NOT NULL,
  metadata_is_pinned BOOL NOT NULL,
  metadata_is_in_pinned_folder BOOL NOT NULL,
  metadata_before_bounce_filename TEXT DEFAULT NULL,
  metadata_quarantine_blob BLOB NULL,
  metadata_is_syncroot BOOL NOT NULL,
  captured_content BLOB NULL,
recursive_dataless_count UNSIGNED INT NOT NULL DEFAULT 0,
recursive_non_evictable_count UNSIGNED INT NOT NULL DEFAULT 0
lookupLink(byFileID:)
SELECT parent_id, filename
  FROM 
_vfs_fileid_idx
 WHERE vfs_fileid = 
lookup(byFileID:)
SQLDB: list not yet created descendents
-- Look at everything that seems to have pending propagations or
-- metadata refreshes and that has the item in its parent hierarchy:
--   * either an unstable reconciliation entry
--   * or a pending (or running) FetchItem job
SELECT rt.
  FROM reconciliation_table AS rt
 WHERE rt.scheduling_timestamp <= 
_id IS NULL
   AND 
SQLDB: listing descendents pending incoming propagation
SELECT j.item_id
  FROM 
_item_jobs AS j
 INNER JOIN reconciliation_table AS rt ON (rt.
_id = j.item_id)
 WHERE j.type = 
   AND j.scheduling_state IN 
   AND j.scheduling_timestamp <= 
  FROM reconciliation_table AS rt
 WHERE rt.
_scheduling_state = 
   AND rt.scheduling_timestamp <= 
_id IS NOT NULL
   AND 
_updated_fields != 0 OR rt.
_deletion_status != 0)
   AND rt.
SQLDB: check path-matching loop
WITH RECURSIVE path_matching(id, parent_id, filename, wait_on_path_matching) AS (
  SELECT s.id, s.parent_id, s.filename, (rt.
_scheduling_state_conditions & 
) != 0
    FROM 
 AS s
    JOIN reconciliation_table AS rt ON rt.
_id = s.id
   WHERE id = 
   -- Use union to remove duplicates because we can have cases where
   -- several items have the same filename, which will cause loops in the query
   UNION
  SELECT s.id, s.parent_id, s.filename, (rt.
) != 0
    FROM path_matching AS pm
    -- From the previously found item, lookup path-matching items in the other snapshot
    -- by resolving the id in the reconciliation table, then performing a lookup by (parent_id, filename)
    JOIN reconciliation_table AS parent_rt ON pm.parent_id = parent_rt.
_snapshot AS other_snapshot ON (parent_rt.
_id = other_snapshot.parent_id
                                                           AND other_snapshot.filename = pm.filename
                                                               
    -- For items found in the other snapshot, resolve the id in the reconciliation table and
    -- lookup the corresponding item in the local snapshot.
    JOIN reconciliation_table AS rt ON other_snapshot.id = rt.
 AS s ON s.id = rt.
SELECT id
  FROM path_matching
 WHERE id = 
pm.wait_on_path_matching
SQLDB: check item is descendent of another item
WITH RECURSIVE parent_dirs(id) AS (
  SELECT id
    FROM 
   UNION ALL
  SELECT 
.parent_id
    FROM 
    JOIN parent_dirs ON 
.id = parent_dirs.id AND 
.parent_id
   WHERE 
SELECT p.id
  FROM parent_dirs AS p
 INNER JOIN reconciliation_table AS rt ON rt.
_id = p.id
   AND rt.
_updated_fields & 
 != 0
   AND rt.
WITH RECURSIVE parent_dirs(id) AS (
  SELECT parent_id
    FROM 
.parent_id
SELECT id
  FROM parent_dirs
 WHERE id = 
SQLDB: Find closest sync root in parent chain
WITH RECURSIVE parent_dirs(id, parent_id, closest_sync_root) AS (
  SELECT id, parent_id,
    CASE
      WHEN metadata_is_syncroot != 0 THEN vfs_fileid
      WHEN metadata_closest_syncroot != 0 THEN metadata_closest_syncroot
      ELSE 0
    END
    FROM 
_parent_id__id__syncroot
   WHERE id = 
  UNION ALL
  SELECT 
.parent_id,
    CASE
      WHEN 
.metadata_is_syncroot != 0 THEN 
.vfs_fileid
      WHEN 
.metadata_closest_syncroot != 0 THEN 
.metadata_closest_syncroot
      ELSE 0
    END
    FROM 
    INDEXED BY 
_parent_id__id__syncroot
    JOIN parent_dirs ON 
.id = parent_dirs.parent_id
      AND parent_dirs.id != parent_dirs.parent_id
SELECT closest_sync_root
  FROM parent_dirs
 WHERE closest_sync_root != 0 AND (id != 
 OR id = parent_id)
SQLDB: Update closest sync root for descendents of unignored item
  SET metadata_closest_syncroot = 
WHERE metadata_closest_syncroot = 
 at 
SQLDB: Snapshot update
       snapshot_version = snapshot_version + 1
 WHERE id = 
SQLDB: Snapshot insert
, decoration_inherited_content_policy)
     VALUES (
delete children of 
SQLDB: Delete Children
 WHERE id IN (SELECT id
                FROM 
           LEFT JOIN reconciliation_table ON (reconciliation_table.
_id = id)
               WHERE parent_id = 
                 AND id != parent_id
                 AND reconciliation_table.
SQLDB: Delete Item
SQLDB: Has ignored parent
WITH RECURSIVE ignored_parents(id, rt_deletion_status) AS (
  SELECT parent_id, rt.
_deletion_status
    FROM 
 INNER JOIN reconciliation_table AS rt ON rt.
   WHERE id = 
UNION ALL
  SELECT snap.parent_id, rt.
_deletion_status
    FROM ignored_parents
   INNER JOIN 
 AS snap ON (snap.id = ignored_parents.id)
   INNER JOIN reconciliation_table AS rt ON (rt.
_id = ignored_parents.id)
     WHERE rt.
_deletion_status & 
 == 0
     AND +snap.parent_id != snap.id
SELECT 1
  FROM ignored_parents
 WHERE rt_deletion_status & 
SQLDB: Has reseting parent
WITH RECURSIVE parent_dirs(id, parent_id) AS (
  SELECT id, parent_id
    FROM 
.id = parent_dirs.parent_id AND parent_dirs.id != parent_dirs.parent_id
SELECT 1
  FROM parent_dirs AS p
 INNER JOIN 
_item_jobs AS jobs ON p.id = jobs.item_id
 WHERE jobs.type IN (
   AND jobs.scheduling_state IN 
   AND (jobs.reason & 
 != 0
        OR jobs.pending_reason & 
SQLDB: Count keep downloaded children
keep downloaded children of 
 WHERE parent_id = 
(CASE decoration_content_policy
  WHEN 
 THEN
    decoration_inherited_content_policy = 
  ELSE
    decoration_content_policy = 
SQLDB: Count bound children
bound children of 
SELECT snap.id
  FROM 
 AS snap
 INNER JOIN reconciliation_table AS rt ON rt.
_id = snap.id
 WHERE snap.parent_id = 
_id IS NOT NULL
   AND +rt.
_deletion_status & ~
SQLDB: Count unbound children
unbound children of 
_id IS NULL
   AND +rt.
_materialization_status = 
_scheduling_state != 
        OR +rt.
_id IS NULL
 LIMIT 1
SQLDB: Count pending rescan children
pending rescan below 
 AS snap
 INNER JOIN reconciliation_table AS rt ON snap.id = rt.
 WHERE snap.parent_id = 
_disk_import_status = 
SQLDB: Count materialized children
materialized children of 
_materialize_children
 INNER JOIN reconciliation_table AS rt ON rt.
 WHERE parent_id = 
   AND metadata_is_dataless = 0
   AND metadata_is_ignoreroot = 0
   AND rt.fs_deletion_status & 
 = 0
   AND (rt.fs_scheduling_state != 
        OR rt.fs_scheduling_state_conditions & 
 = 0)
   AND metadata_kind IN 
   AND parent_id != id
 LIMIT 1
 AND snap.parent_id != snap.id
   AND rt.
_id IS NULL
   AND rt.
SQLDB: Contains pending deletion children
 AND snap.parent_id != snap.id
   AND ((rt.
_deletion_status != 0 
_id IS NOT NULL)
        OR (rt.
_id IS NOT NULL)
        OR rt.
_updated_fields == 0
_scheduling_state_conditions NOT IN 
SQLDB: Contains children
 AND snap.parent_id != snap.id
   AND (rt.
 AS snap
 WHERE snap.parent_id = 
 AND snap.parent_id != snap.id
 LIMIT 1
SQLDB: Enumerate non-locked directory that could be locked
SELECT rowID, id FROM 
 WHERE metadata_kind = 
   AND metadata_is_locked = 0
   AND +decoration_capabilities & 
SQLDB: Enumerate non-syncroot packages
 WHERE metadata_is_package AND +metadata_is_syncroot = 0
   AND 
SQLDB: Enumerate non-purgeable packages
 WHERE metadata_is_package AND +metadata_is_evictable = 0
   AND 
SQLDB: Check item with ID
SQLDB: Lookup parent ID
lookup parentID of 
SELECT parent_id
  FROM 
SQLDB: Build Hierarichal User Info
   SET decoration_inherited_user_info = 
SELECT decoration_inherited_user_info, decoration_user_info, parent_id
  FROM 
 AND +metadata_kind = 
SQLDB: Lookup item non syncable attributes
SQLDB: Lookup item by parent ID and name
   AND filename = 
SQLDB: Lookup item by ID
 AND +snapshot_version = 
SQLDB: Lookup snapshot version
SELECT snapshot_version
  FROM 
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/fssync/libfssync/implementations/file-system/persistence/SQLSnapshot.swift
SQLDB: Lookup Inherited Content Policy
SELECT decoration_content_policy, decoration_inherited_content_policy
  FROM 
SQLDB: Lookup FP recursive properties
SELECT recursive_disallow_deletion_count, recursive_disallow_exclusion_count
  FROM 
SQLDB: Lookup FS recursive properties
SELECT recursive_dataless_count, recursive_non_evictable_count, recursive_evictable_count
  FROM 
WITH RECURSIVE parent(id) AS (
  SELECT rec_snap.parent_id
    FROM 
 AS rec_snap
   WHERE rec_snap.id = 
   UNION
  SELECT rec_snap.parent_id
    FROM parent
   INNER JOIN 
 AS rec_snap ON rec_snap.id = parent.id
   WHERE rec_snap.parent_id != rec_snap.id)
SELECT id
  FROM parent
libfssync/SQLSnapshot.swift
unsupported diff field 
decoration_last_editor_device_name = 
decoration_content_policy = 
metadata_link_count = 
metadata_os_type = 
decoration_conflicting_versions = 
decoration_user_info = 
decoration_item_decoration = 
decoration_has_unresolved_conflicts = 
decoration_display_name = 
decoration_container_display_name = 
decoration_cloud_container_identifier = 
decoration_app_container_bundle_identifier = 
decoration_is_container_pristine = 
decoration_is_container = 
metadata_collaboration_identifier =  
decoration_sharing_permissions = 
decoration_last_edited_by_current_user = 
decoration_preformatted_most_recent_editor_name = 
decoration_preformatted_owner_name = 
decoration_is_shared_by_current_user = 
decoration_is_top_level_shared_item = 
decoration_is_shared = 
decoration_uploading_error = 
decoration_is_uploaded = 
decoration_is_uploading = 
decoration_capabilities = 
metadata_is_ignoreroot = 
metadata_is_syncroot = 
metadata_is_pinned = 
metadata_is_evictable = 
metadata_closest_syncroot = 
metadata_extended_attributes = 
metadata_favorite_rank = 
metadata_tag_data = 
metadata_last_used_date = 
metadata_child_item_count = 
metadata_extension_hidden = 
metadata_is_hidden = 
metadata_content_modification_date = 
metadata_creation_date = 
metadata_posix_permissions = 
metadata_is_locked = 
metadata_is_dataless = 
metadata_physical_size = 
structural_version = 
metadata_is_package = 
content_version = 
metadata_size = 
vfs_generationid = 
metadata_before_bounce_filename = 
SQLDB: Scan directory
unexpected continuation type
 AND id != parent_id
 ORDER BY rowID ASC
 LIMIT 
, recursive_dataless_count, recursive_non_evictable_count, recursive_evictable_count
, recursive_disallow_deletion_count, recursive_disallow_exclusion_count
SQLDB: Enumerate children IDs
   AND parent_id != id
_TtC9libfssync12JobLimitSlot
executionTimer
executionIsTooLong
onNewSlot
_TtC9libfssync8JobLimit
runningJobs
currentJobsLimit
softJobsLimit
hardJobsLimit
backgroundDownloads
job executing for more than 5 minutes, increasing limit for %{public}s: %{public}s
updateContentJobsForB
updateContentJobsForA
fetchContentJobsForB
fetchContentJobsForA
v24@?0@"NSDictionary"8@"NSError"16
_TtC9libfssync17GSConflictManager
  Loser %s has invalid format, ignoring it...
v24@?0@"GSAddition"8@"NSError"16
  Putting loser %s into the Genstore...
modificationDate
 remaining 
from mayAlreadyExist reason 
, may-already-exists, why:
  isRecursive reason 
oldItem newItem diffs reason 
limitSlot
schedulingOrder
reason
libfssync/Job.swift
cannot add new triggers on non-waiting job
job must not be running when cancelled
should not call itemIDForThrottling for ItemJob
to be implemented in sub-classes
pendingSetRefreshDate
isInitialGathering
_TtC9libfssync17FSSnapshotChecker
snapshotForDomainID
fsForDomainID
filesCheckedDuringDiskEnumeration
filesCheckedDuringFSSnapshotEnumeration
FSSnapShotGivenRootID
Item kind undefined.
fetchItem(with:inDomainID:)
Error fetching the item in the FSSnapshot: %@
SQLDB: Lookup item by fileID
enumerateItems(_:)
Error retrieving item %{public}s children: %{public}@
_TtC9libfssync31DocumentTrackingTombstoneSlayer
basePath
libfssync/TombstoneSlayer.swift
 tombstone slaying failed: %{public}@
 recreating tombstone slayer
 reason 
initialState
resolvedWithDB
itemIgnoredDuringDiskImport
contentPolicyChanged
itemDatalessOnDisk
cancelMaterialization
diskImportFailed
garbageCollection
itemChangedWhileFetchingContent
itemChangedRemotely
itemChangedInTree
itemDeletedInTree
itemUpdateConflicted
itemUpdateRejected
itemCreationConflicted
itemCreationRejected
folderDeletedInTree
folderCreatedInTree
fsItemJobs
fpItemJobs
backgroundDownloader
throttleWaitGroup
fsOrFPJobColumns
creationJobTypes
propagationJobTypes
ALTER TABLE jobs ADD COLUMN domain_version UNSIGNED INT NULL
CREATE INDEX jobs__side__scheduling_ordering
    ON jobs(side, scheduling_priority DESC, scheduling_timestamp)
CREATE INDEX jobs_state__side__scheduling_ordering
    ON jobs(scheduling_state, side, scheduling_priority DESC, scheduling_timestamp)
CREATE INDEX jobs_state__side__type__scheduling_ordering
    ON jobs(scheduling_state, side, type, scheduling_priority DESC, scheduling_timestamp)
CREATE INDEX jobs_side__source_id__type__scheduling_state
    ON jobs(side, source_item_id, type, scheduling_state)
CREATE TABLE jobs (
  id INTEGER PRIMARY KEY,
  type TINYINT NOT NULL,
  side TINYINT NOT NULL,
  scheduling_priority UNSIGNED INTEGER NOT NULL,
  scheduling_timestamp INTEGER NOT NULL,
  scheduling_state TINYINT NOT NULL,
  scheduling_state_conditions SMALLINT NOT NULL,
  scheduling_state_continuation BLOB NULL,
  reason INT NOT NULL,
  source_item_id NULL,
  source_snapshot_version UINT NULL,
  target_item_id NULL,
  target_filename TEXT NULL,
  bouncing_context BLOB NULL,
  captured_content UNSIGNED INT NULL,
  diffs TINYINT NULL
UPDATE jobs
   SET scheduling_state = 
   AND scheduling_state_conditions = 0
UPDATE jobs
   SET scheduling_state_conditions = scheduling_state & ~(
 WHERE scheduling_state = 
   AND +scheduling_state_conditions & 
DELETE FROM jobs
      WHERE id = 
recovering running job %{public}s
jobType itemID 
+ propagation jobs
corrupted database: 
SELECT rowID
  FROM jobs
 WHERE scheduling_state = 
SELECT id
  FROM jobs
 WHERE scheduling_state IN 
scheduling_state_conditions != 
SQLDB: Persist Job
ORDER BY scheduling_priority DESC, scheduling_timestamp
 AND source_item_id = 
ORDER BY scheduling_priority DESC, scheduling_timestamp LIMIT 
INSERT INTO jobs (scheduling_timestamp, scheduling_priority, 
libfssync/SQLJobRegistry.swift
include a side in your query
SELECT 1
  FROM jobs
 WHERE 
computation
$__lazy_storage_$_value
_TtC9libfssync15SQLHistoryTable
subTables
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/fssync/libfssync/implementations/file-system/persistence/SQLHistoryTable.swift
yyyy-MM-dd HH:mm:ss.SSSZ
SELECT timestamp, os_version, db_version, db_revision, fs_version, fp_version
  FROM history
 ORDER BY rowID DESC
INSERT INTO history (timestamp, os_version, db_version, db_revision, fs_version, fp_version)
     VALUES (
SELECT timestamp, os_version, db_version, db_revision, fs_version, fp_version
  FROM history
 ORDER BY rowID 
CREATE TABLE history (
  timestamp INT NOT NULL,
  os_version TEXT NOT NULL,
  db_version INT NOT NULL,
  db_revision INT NOT NULL,
  fs_version TEXT NOT NULL,
  fp_version TEXT NOT NULL
libfssync/ItemNonSyncableAttributes.swift
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/fssync/libfssync/interfaces/file-tree/item/types/ItemNonSyncableAttributes.swift
%@ %{public}s
libfssync/CodableClass.swift
), add the registration in the FileTree that use that type:
.register(child: 
below by 
of by 
itemID by 
libfssync
@40@0:8@16@24@32
@"NSData"8@?0
lastEditorDeviceName
cloudContainerIdentifier
appContainerBundleIdentifier
isContainerPristine
lastEditedByCurrentUser
isSharedByCurrentUser
isTopLevelSharedItem
queueStorage
wasReopenedForReading
optionsStorage
schedulerQueueStorage
schedulerIsEnabled
scheduleStateStorage
onSchedulingStateChange
source
backgroundDownloadLimit
jobLockForAStorage
jobLockForBStorage
isCancelling
persistenceCounterStorage
jobGroupStorage
runningJobMap
runningJobsOSTransaction
schedulerOSTransaction
$__lazy_storage_$_swappedStorage
telemetry
materializationWaiters
propagationFromFPWaiters
propagationFromFSWaiters
stabilizationWaiters
ingestionFromFSWaiters
fsBarrierWaiters
fpBarrierWaiters
flushWaiters
testingOperationWaiters
ingestionSource
fsChanges
fpChanges
jobSchedulerEpoch
domainVersionStorage
triggersEnabled
pendingTriggers
pendingReconciliations
delegateStore
osLog
shouldDumpState
finishedUploadJobs
finishedDownloadJobs
uploadJobs
downloadJobs
_isInDiskImportStorage
isUpcallTimeoutSchedulerRegister
com.apple.fileproviderd.vacuum
com.apple.fileproviderd.auto-resume
@"<OS_xpc_object>"8@?0
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/fssync/libfssync/sync-logic/ConcreteDatabase.swift
old new 
DB queue
syncRead(function:block:)
registerUpcallTimeoutRetryScheduler()
registerDiskImportScheduler()
DB: Signal Runnable Jobs
com.apple.fileproviderd.fpfs.scheduler
 item 
SQLDB: React to trigger
%@  
 trigger: %{public}s
SQLDB: reconcile
%@  
 reconciling: %{public}s
  job scheduler is stable, calling the stabilization waiters
  job scheduler is stable, download jobs are not!
  job scheduler is stable, upload jobs are not!
  waiting for ingestion of %{public}s prior to %s for %s: %s
  finished ingestions of %{public}s for %s
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/fssync/libfssync/implementations/file-system/tree/VFSLookupScope.swift
_TtC9libfssync14VFSLookupScope
deviceID
rootInode
trashInode
disableTrash
shouldSyncXattr
trashURL
com.apple.fileprovider.trash
  created .Trash with fileID %llu
ALTER TABLE engine_state ADD COLUMN error_generation INT NOT NULL DEFAULT 0
ALTER TABLE engine_state ADD COLUMN scheduling_state UNSIGNED INT NOT NULL DEFAULT 0
ALTER TABLE engine_state ADD COLUMN feature_flags UNSIGNED INT NOT NULL DEFAULT 0
ALTER TABLE engine_state ADD COLUMN domain_version UNSIGNED INT NOT NULL DEFAULT 0
INSERT INTO engine_state (
  rowid,
  db_uuid,
  db_bugfix_revision,
  fs_stream_uuid,
  fs_stream_event_id,
  fp_stream_sync_token
VALUES (
  0,
, 0,
  NULL, NULL, NULL
CREATE TABLE engine_state (
  rowid INTEGER PRIMARY KEY CHECK (rowid = 0),
  db_uuid              BLOB NOT NULL,
  db_bugfix_revision   UNSIGNED INT NOT NULL,
  fs_stream_uuid       BLOB DEFAULT NULL,
  fs_stream_event_id   INT DEFAULT NULL,
  fp_stream_sync_token BLOB DEFAULT NULL
  updating %s
  domain version updated %s -> %s
UPDATE engine_state SET 
error_generation
scheduling_state
fp_stream_sync_token
fs_stream_event_id
db_bugfix_revision
 FROM engine_state
SELECT db_uuid,
       db_bugfix_revision,
       fs_stream_uuid,
       fs_stream_event_id,
       fp_stream_sync_token,
       domain_version,
       feature_flags,
       scheduling_state,
       error_generation
  FROM engine_state
SELECT SUM(metadata_physical_size) FROM fs_snapshot WHERE NOT metadata_is_evictable
_TtC9libfssync12PeriodicFPCK
usingFPFS
runnable
Failed to execute FPCK repair on %s : %@
starting to run periodic FPCK for %s
com.apple.fileproviderd.periodic-fpck
initialPageSortedByDate
initialPageSortedByName
_TtC9libfssync21FileProviderPageToken
directoryID
page
_TtC9libfssync13StagedContext
[ASSERT] 
  %s:%lu: %s
Invalid parent ID 
Invalid identifier for parent folder 
fileID of directory changed during enumeration: 
unsupported feature flag enablement: 
 content:partial
delayPropagation(reason:
nothingToPropagate
unexpected job in reconciliation 
  cannot encode indexer state: 
unexpected kind 
Unable to process fsevent#
can't close DB: 
unhandled testing operation 
over-released eviction prevention for 
Precondition failed 
entry
fsRootID
fpRootID
columns
prefixedColumns
entryCachePerID
entryCachePerRowID
notDirectoryKinds
interestedContents
CREATE TRIGGER "last_change/reconciliation_table/creation"
  AFTER INSERT ON reconciliation_table
BEGIN
  -- Update the last change date
  UPDATE reconciliation_table
     SET last_change = PROPAGATION_DATE_CHANGED(0, new.fs_id)
   WHERE rowID = new.rowID;
CREATE TRIGGER "last_change/fp_snapshot/decoration_change"
  AFTER UPDATE ON fp_snapshot
BEGIN
  -- Update the last change date
  UPDATE reconciliation_table
     SET last_change = PROPAGATION_DATE_CHANGED(0, fs_id)
   WHERE fp_id = new.id;
CREATE TRIGGER "last_change/fp_snapshot/recursive_capabilities_change"
  AFTER UPDATE OF recursive_disallow_deletion_count, recursive_disallow_exclusion_count ON fp_snapshot
          WHEN (new.recursive_disallow_deletion_count != old.recursive_disallow_deletion_count
                AND (new.recursive_disallow_deletion_count == 0 OR old.recursive_disallow_deletion_count == 0))
            OR (new.recursive_disallow_exclusion_count != old.recursive_disallow_exclusion_count
                AND (new.recursive_disallow_exclusion_count == 0 OR old.recursive_disallow_exclusion_count == 0))
BEGIN
  -- Update the last change date
  UPDATE reconciliation_table
     SET last_change = PROPAGATION_DATE_CHANGED(CASE WHEN kind = 
 THEN 2 ELSE 0 END, fp_id)
   WHERE fp_id = new.id;
CREATE TRIGGER "last_change/fs_snapshot/recursive_evictable_change"
  AFTER UPDATE OF recursive_evictable_count ON fs_snapshot
          WHEN new.recursive_evictable_count != old.recursive_evictable_count
           AND (new.recursive_evictable_count == 0 OR old.recursive_evictable_count == 0)
BEGIN
  -- Update the last change date
  UPDATE reconciliation_table
     SET last_change = PROPAGATION_DATE_CHANGED(kind = 
, fs_id)
   WHERE fs_id = new.id;
CREATE TRIGGER "last_change/fs_snapshot/recursive_dataless_change"
  AFTER UPDATE OF recursive_dataless_count ON fs_snapshot
          WHEN new.recursive_dataless_count != old.recursive_dataless_count
           AND (new.recursive_dataless_count == 0 OR old.recursive_dataless_count == 0)
BEGIN
  -- Update the last change date
  UPDATE reconciliation_table
     SET last_change = PROPAGATION_DATE_CHANGED(kind = 
CREATE TRIGGER "last_change/reconciliation_table/propagation_changes"
 AFTER UPDATE OF fs_deletion_status, fs_deletion_status, fs_scheduling_state,
                 fp_updated_fields, fp_deletion_status, fp_content_status, fp_scheduling_state
              ON reconciliation_table
  WHEN new.fs_updated_fields != old.fs_updated_fields
       OR new.fs_deletion_status & 1 != old.fs_deletion_status & 1
       OR new.fp_updated_fields != old.fp_updated_fields
       OR new.fp_deletion_status & 1 != old.fp_deletion_status & 1
       OR new.fp_content_status != old.fp_content_status
       OR new.fs_scheduling_state != old.fs_scheduling_state
       OR new.fp_scheduling_state != old.fp_scheduling_state
BEGIN
  -- Update the last change date
  UPDATE reconciliation_table
     SET last_change = PROPAGATION_DATE_CHANGED(0, fs_id)
   WHERE rowID = new.rowID;
DROP TRIGGER IF EXISTS "last_change/reconciliation_table/creation"
DROP TRIGGER IF EXISTS "last_change/fp_snapshot/recursive_capabilities_change"
DROP TRIGGER IF EXISTS "last_change/fp_snapshot/decoration_change"
DROP TRIGGER IF EXISTS "last_change/fs_snapshot/recursive_evictable_change"
DROP TRIGGER IF EXISTS "last_change/fs_snapshot/recursive_dataless_change"
DROP TRIGGER IF EXISTS "last_change/reconciliation_table/propagation_changes"
CREATE INDEX IF NOT EXISTS recursive_deletion_root ON reconciliation_table(fs_deletion_status)
 WHERE fs_deletion_status & 
ALTER TABLE reconciliation_table ADD COLUMN fs_captured_content_length INT NULL;
ALTER TABLE reconciliation_table ADD COLUMN fs_captured_content_location INT NULL;
ALTER TABLE reconciliation_table ADD COLUMN fp_captured_content_length INT NULL;
ALTER TABLE reconciliation_table ADD COLUMN fp_captured_content_location INT NULL;
DROP TRIGGER IF EXISTS "materialized_set/fs_item_jobs/materialization"
CREATE INDEX pending_set_probe_fp ON reconciliation_table(scheduling_timestamp, fp_scheduling_state, fp_updated_fields,
    fp_deletion_status, fs_materialization_status, fs_id, fp_scheduling_state_conditions) WHERE
    ((fp_scheduling_state IN 
      fp_updated_fields != 0 OR
      fp_deletion_status != 0) OR
      fs_materialization_status == 
CREATE INDEX pending_set_probe_fs ON reconciliation_table(scheduling_timestamp, fs_scheduling_state, fs_updated_fields,
    fs_deletion_status, fp_id) WHERE
    fp_id IS NOT NULL AND
    (fs_scheduling_state IN 
     fs_updated_fields != 0 OR
     fs_deletion_status != 0)
CREATE INDEX reconciliation_global_progress_materialize ON reconciliation_table(fs_materialization_status, kind)
CREATE INDEX reconciliation_global_progress_fp ON reconciliation_table(kind, fp_id)
       WHERE fp_updated_fields & 
 AND fp_content_status IN 
CREATE INDEX reconciliation_global_progress_fs ON reconciliation_table(kind, fs_id)
       WHERE fs_updated_fields & 
DROP INDEX reconciliation_global_progress_fp
DROP INDEX reconciliation_global_progress_fs
DROP VIEW active_fp_jobs_view
DROP VIEW active_fs_jobs_view
CREATE INDEX jobs_global_progress_fp ON jobs(side, source_item_id, type, diffs)
       WHERE side == 
CREATE INDEX reconciliation_global_progress_fp
          ON reconciliation_table(kind, fp_id, fp_updated_fields, fp_content_status, fs_materialization_status, fs_id,
                                  fp_scheduling_state_conditions)
       WHERE kind == 
CREATE INDEX reconciliation_global_progress_fs ON reconciliation_table(kind, fs_id, fs_updated_fields)
       WHERE kind IN (
CREATE VIEW active_fp_jobs_view (metadata_size)
  AS SELECT CASE fp.metadata_size
       WHEN 0 THEN 1
       ELSE fp.metadata_size
        END metadata_size
       FROM reconciliation_table AS rt
 INNER JOIN fp_snapshot AS fp ON (rt.fp_id = fp.id)
      WHERE ((rt.fp_updated_fields & 
              AND  rt.fp_content_status != 
         OR rt.fs_materialization_status == 
        AND rt.kind == 
    AND NOT (fs_id IS NULL AND fp_scheduling_state_conditions == 
  UNION ALL
     SELECT CASE fp.metadata_size
       WHEN 0 THEN 1
       ELSE fp.metadata_size
        END metadata_size
       FROM jobs
 INNER JOIN fp_snapshot AS fp ON (jobs.source_item_id = fp.id)
 INNER JOIN reconciliation_table AS rt ON (jobs.source_item_id = rt.fp_id)
      WHERE jobs.side == 
        AND ((jobs.type == 
             AND jobs.diffs & 
             AND fp.metadata_kind IN (
         OR (jobs.type == 
        AND rt.fp_content_status == 
CREATE VIEW active_fs_jobs_view (metadata_size)
  AS SELECT CASE fs.metadata_size
       WHEN 0 THEN 1
       ELSE fs.metadata_size
        END metadata_size
       FROM reconciliation_table AS rt
 INNER JOIN fs_snapshot AS fs ON (rt.fs_id = fs.id)
      WHERE rt.fs_updated_fields & 
        AND rt.kind IN (
        AND fs.metadata_is_ignoreroot = 0
  UNION ALL
     SELECT CASE fs.metadata_size
       WHEN 0 THEN 1
       ELSE fs.metadata_size
        END metadata_size
       FROM jobs
 INNER JOIN fs_snapshot AS fs ON (jobs.source_item_id = fs.id)
      WHERE ((jobs.type == 
         OR jobs.type == 
        AND jobs.side == 
        AND fs.metadata_kind IN (
        AND fs.metadata_is_ignoreroot = 0
CREATE TRIGGER "materialized_set/tombstone_table/remove_entry"
 AFTER DELETE ON tombstone_table
  WHEN old.enumeration_anchor IS NOT NULL
BEGIN
  UPDATE reconciliation_table
     SET enumeration_anchor = MAX(IFNULL(enumeration_anchor, 0), old.enumeration_anchor)
   WHERE fp_id = old.fp_id;
CREATE TRIGGER "materialized_set/fs_snapshot/delete"
  AFTER DELETE ON fs_snapshot
  WHEN old.metadata_is_dataless = 0
BEGIN
  -- Mark the item as updated in the reconciliation table if present
  UPDATE reconciliation_table
     SET enumeration_anchor = NEXT_ANCHOR((SELECT anchor FROM enumeration_view))
   WHERE fs_id = old.id AND fp_id IS NOT NULL;
CREATE TRIGGER "materialized_set/fs_snapshot/insert"
 AFTER INSERT ON fs_snapshot
  WHEN new.metadata_is_dataless = 0
BEGIN
  -- Mark the item as updated in the reconciliation table if present
  UPDATE reconciliation_table
     SET enumeration_anchor = NEXT_ANCHOR((SELECT anchor FROM enumeration_view))
   WHERE fs_id = new.id AND fp_id IS NOT NULL;
CREATE TRIGGER "materialized_set/fs_snapshot/metadata_is_dataless"
 AFTER UPDATE OF metadata_is_dataless ON fs_snapshot
  WHEN old.metadata_is_dataless != new.metadata_is_dataless
BEGIN
  -- Mark the item as updated in the reconciliation table if present
  UPDATE reconciliation_table
     SET enumeration_anchor = NEXT_ANCHOR((SELECT anchor FROM enumeration_view))
   WHERE fs_id = new.id AND fp_id IS NOT NULL;
CREATE TRIGGER "materialized_set/tombstone_table/garbage_collect"
 AFTER UPDATE OF enumeration_anchor, last_change ON tombstone_table
  WHEN new.enumeration_anchor IS NULL AND new.last_change IS NULL
BEGIN
  DELETE FROM tombstone_table
   WHERE rowID = new.rowID;
CREATE TRIGGER "materialized_set/reconciliation_table/remove_item_fs_id"
 AFTER DELETE ON reconciliation_table
  WHEN old.fs_id IS NOT NULL
BEGIN
  INSERT INTO tombstone_table (fs_id, fp_id, enumeration_anchor, last_change)
       VALUES (old.fs_id, NULL, NULL, PROPAGATION_DATE_CHANGED(0, NULL));
CREATE TRIGGER "materialized_set/reconciliation_table/remove_item_fp_id"
 AFTER DELETE ON reconciliation_table
  WHEN old.fp_id IS NOT NULL
BEGIN
  -- Add the entry in tombstone table. Propagate the anchor from the reconciliation table
  -- if the item was monitored at the time of removal
  INSERT INTO tombstone_table (fs_id, fp_id, enumeration_anchor, last_change)
       VALUES (NULL, old.fp_id,
               CASE
                   WHEN old.enumeration_anchor IS NULL THEN NULL
                   WHEN EXISTS (SELECT id FROM fs_snapshot WHERE id = old.fs_id AND metadata_is_dataless = 0)
                   THEN NEXT_ANCHOR(MAX((SELECT anchor FROM enumeration_view), old.enumeration_anchor))
                   ELSE old.enumeration_anchor
               END,
               PROPAGATION_DATE_CHANGED(0, NULL));
CREATE TRIGGER "materialized_set/reconciliation_table/unbind_fs_id"
 AFTER UPDATE OF fs_id ON reconciliation_table
  WHEN old.fs_id IS NOT NULL AND (new.fs_id IS NULL OR old.fs_id != new.fs_id)
BEGIN
  -- Add the entry in tombstone table. Propagate the anchor from the reconciliation table
  -- if the item was monitored at the time of removal
  INSERT INTO tombstone_table (fs_id, fp_id, enumeration_anchor, last_change)
       VALUES (old.fs_id, NULL, NULL, PROPAGATION_DATE_CHANGED(0, NULL));
  -- Update the anchor for the corresponding item
  UPDATE reconciliation_table
     SET enumeration_anchor = NEXT_ANCHOR((SELECT anchor FROM enumeration_view))
   WHERE rowID = old.rowID AND old.enumeration_anchor IS NOT NULL;
CREATE TRIGGER "materialized_set/reconciliation_table/unbind_fp_id"
 AFTER UPDATE OF fp_id ON reconciliation_table
  WHEN old.fp_id IS NOT NULL AND (new.fp_id IS NULL OR old.fp_id != new.fp_id)
BEGIN
  -- Add the entry in tombstone table. Propagate the anchor from the reconciliation table
  -- if the item was monitored at the time of removal
  INSERT INTO tombstone_table (fs_id, fp_id, enumeration_anchor, last_change)
       VALUES (NULL, old.fp_id,
               CASE
                   WHEN old.enumeration_anchor IS NULL THEN NULL
                   WHEN EXISTS (SELECT id FROM fs_snapshot WHERE id = old.fs_id AND metadata_is_dataless = 0)
                   THEN NEXT_ANCHOR((SELECT anchor FROM enumeration_view))
                   ELSE old.enumeration_anchor
               END,
               PROPAGATION_DATE_CHANGED(0, NULL));
  -- Clear the enumeration anchor in the reconciliation table
  -- Must be executed after the previous update to preserve the previous anchor
  -- in the computation of the enumeration_view
  UPDATE reconciliation_table
     SET enumeration_anchor = NULL
   WHERE rowID = old.rowID;
CREATE TRIGGER "materialized_set/reconciliation_table/bind_fs_id"
 AFTER UPDATE OF fs_id ON reconciliation_table
  WHEN new.fs_id IS NOT NULL
BEGIN
  -- Mark the item has updated if we lost the binding and were previously dataless
  UPDATE reconciliation_table
     SET enumeration_anchor = NEXT_ANCHOR((SELECT anchor FROM enumeration_view))
   WHERE rowID = new.rowID
     AND EXISTS (SELECT id FROM fs_snapshot WHERE id = new.fs_id AND metadata_is_dataless = 0);
  -- Delete the entry from the tombstone table if the fs_id is present
  -- in the reconciliation table. If the the item was actually present
  -- in the tombstone, a followup trigger will be called to move
  -- the anchor from the tombstone table to the reconciliation table
  -- Must be executed after the previous update to preserve the previous anchor
  -- in the computation of the enumeration_view
  DELETE FROM tombstone_table
   WHERE fs_id = new.fs_id;
CREATE TRIGGER "materialized_set/reconciliation_table/bind_fp_id"
 AFTER UPDATE OF fp_id ON reconciliation_table
  WHEN new.fp_id IS NOT NULL
BEGIN
  -- Mark the item has updated if we lost the binding and were previously dataless
  UPDATE reconciliation_table
     SET enumeration_anchor = NEXT_ANCHOR((SELECT anchor FROM enumeration_view))
   WHERE rowID = new.rowID
     AND EXISTS (SELECT id FROM fs_snapshot WHERE id = new.fs_id AND metadata_is_dataless = 0);
  -- Delete the entry from the tombstone table if the fp_id is present
  -- in the reconciliation table. If the the item was actually present
  -- in the tombstone, a followup trigger will be called to move
  -- the anchor from the tombstone table to the reconciliation table
  -- Must be executed after the previous update to preserve the previous anchor
  -- in the computation of the enumeration_view
  DELETE FROM tombstone_table
   WHERE fp_id = new.fp_id;
CREATE TRIGGER "materialized_set/reconciliation_table/insert"
 AFTER INSERT ON reconciliation_table
BEGIN
  -- Mark the item has updated if we are interested in its children, otherwise
  UPDATE reconciliation_table
     SET enumeration_anchor = NEXT_ANCHOR((SELECT anchor FROM enumeration_view))
   WHERE rowID = new.rowID
     AND EXISTS (SELECT id FROM fs_snapshot WHERE id = new.fs_id AND metadata_is_dataless = 0);
  -- Delete the entry from the tombstone table if the fp_id is present
  -- in the reconciliation table. If the the item was actually present
  -- in the tombstone, a followup trigger will be called to move
  -- the anchor from the tombstone table to the reconciliation table
  -- Must be executed after the previous update to preserve the previous anchor
  -- in the computation of the enumeration_view
  DELETE FROM tombstone_table
   WHERE (fp_id = new.fp_id OR fs_id = new.fs_id);
CREATE VIEW enumeration_view (anchor)
    AS SELECT IFNULL(MAX(anchor), 0)
         FROM (SELECT MAX(enumeration_anchor) as anchor
                 FROM reconciliation_table
                UNION ALL
               SELECT MAX(enumeration_anchor) as anchor
                 FROM tombstone_table)
DROP VIEW IF EXISTS enumeration_view
DROP TRIGGER IF EXISTS "materialized_set/tombstone_table/remove_entry"
DROP TRIGGER IF EXISTS "materialized_set/reconciliation_table/remove_item"
DROP TRIGGER IF EXISTS "materialized_set/reconciliation_table/remove_fp_id"
DROP TRIGGER IF EXISTS "materialized_set/fs_snapshot/delete"
DROP TRIGGER IF EXISTS "materialized_set/fs_snapshot/insert"
DROP TRIGGER IF EXISTS "materialized_set/fs_snapshot/metadata_is_dataless"
DROP TRIGGER IF EXISTS "materialized_set/reconciliation_table/bind_fs_id"
DROP TRIGGER IF EXISTS "materialized_set/reconciliation_table/bind_fp_id"
DROP TRIGGER IF EXISTS "materialized_set/reconciliation_table/insert"
CREATE INDEX reconciliation_table__locked_items
          ON reconciliation_table(fs_id, item_is_flocked != 0)
DROP INDEX reconciliation_item_is_flocked__fs_id
CREATE INDEX reconciliation_pending_set
          ON reconciliation_table(fp_id, fs_scheduling_state, fp_scheduling_state,
                                  scheduling_timestamp ASC, fp_updated_fields, fs_updated_fields,
                                  fp_deletion_status, fs_deletion_status, fs_id,
                                  fp_scheduling_state_conditions)
CREATE INDEX tombstone_table_asc ON tombstone_table(last_change ASC, fs_id, fp_id)
CREATE INDEX tombstone_table_anchor ON tombstone_table(enumeration_anchor)
ALTER TABLE tombstone_table_copy RENAME TO tombstone_table
DROP TABLE tombstone_table
INSERT INTO tombstone_table_copy (fs_id, fp_id, enumeration_anchor, last_change)
     SELECT NULL, fp_id, enumeration_anchor, 0
       FROM tombstone_table
CREATE TABLE tombstone_table_copy (
  fs_id 
 NULL UNIQUE,
  fp_id 
 NULL UNIQUE,
  enumeration_anchor INT NULL,
  last_change INT NULL
ALTER TABLE reconciliation_table ADD COLUMN fs_domain_version UNSIGNED INT NOT NULL DEFAULT 0
fs_content_version 
fs_structural_version 
fp_content_version 
fp_structural_version 
fp_structural_parent_id 
 NULL,
fp_structural_filename TEXT NULL
fp_vfs_fileid INT NULL,
fp_vfs_generationid INT NULL,
fp_content_size INT NULL
fs_structural_parent_id 
 NULL,
fs_structural_filename TEXT NULL
fs_vfs_fileid INT NULL,
fs_vfs_generationid INT NULL,
fs_content_size INT NULL
CREATE INDEX reconciliation_item_is_flocked__fs_id ON reconciliation_table(item_is_flocked, fs_id)
CREATE INDEX reconciliation_state_scheduling_ordering
    ON reconciliation_table(fs_scheduling_state,
                            fp_scheduling_state,
                            scheduling_priority DESC,
                            scheduling_timestamp)
CREATE INDEX reconciliation_fs_disk_import_status__fp_id ON reconciliation_table(fs_disk_import_status, fp_id)
CREATE INDEX reconciliation_fs_disk_import_status__fs_id ON reconciliation_table(fs_disk_import_status, fs_id)
CREATE INDEX reconciliation_table_last_change ON reconciliation_table(last_change)
CREATE INDEX reconciliation_table_anchor ON reconciliation_table(enumeration_anchor)
CREATE INDEX reconciliation__fp_scheduling_state__fp_id ON reconciliation_table(fp_scheduling_state, fp_id)
CREATE INDEX reconciliation__fp_scheduling_state__fs_id ON reconciliation_table(fp_scheduling_state, fs_id)
CREATE INDEX reconciliation_fp_scheduling_state ON reconciliation_table(fp_scheduling_state)
CREATE INDEX reconciliation__fs_scheduling_state__fp_id ON reconciliation_table(fs_scheduling_state, fp_id)
CREATE INDEX reconciliation__fs_scheduling_state__fs_id ON reconciliation_table(fs_scheduling_state, fs_id)
CREATE INDEX reconciliation_fs_scheduling_state ON reconciliation_table(fs_scheduling_state)
CREATE TABLE tombstone_table (
  fp_id BLOB PRIMARY KEY,
  enumeration_anchor INT NOT NULL
CREATE TABLE reconciliation_table (
  fs_id 
 NULL UNIQUE,
  fs_deletion_status TINYINT NOT NULL,
  fs_updated_fields SMALLINT NOT NULL,
  fs_materialization_status TINYINT NULL,
  fs_content_status TINYINT NOT NULL,
  fs_was_dataless_before_disk_import BOOL NOT NULL,
  fs_disk_import_status TINYINT NULL,
  fs_captured_content_file_id UNSIGNED INT NULL,
  fs_captured_content_test_content BLOB NULL,
  fs_scheduling_state TINYINT NOT NULL,
  fs_scheduling_state_conditions SMALLINT NOT NULL,
  fp_id 
 NULL UNIQUE,
  fp_deletion_status TINYINT NOT NULL,
  fp_updated_fields SMALLINT NOT NULL,
  fp_materialization_status TINYINT NULL,
  fp_content_status TINYINT NOT NULL,
  fp_was_dataless_before_disk_import BOOL NOT NULL,
  fp_disk_import_status TINYINT NULL,
  fp_captured_content_file_id UNSIGNED INT NULL,
  fp_captured_content_test_content BLOB NULL,
  fp_scheduling_state TINYINT NOT NULL,
  fp_scheduling_state_conditions SMALLINT NOT NULL,
  kind TINYINT,
  colliding_id BLOB NULL,
  scheduling_priority UNSIGNED INTEGER NOT NULL,
  scheduling_timestamp INTEGER NOT NULL,
  item_is_flocked BOOL,
  -- In order to be able to enumerate changes in the list of items that are
  -- materialized on disk, we track the items from the reconciliation table
  -- for which the children status (or has been) of interest.
  --
  -- In order to allow the change-based enumeration, we use an auto-incremented
  -- integer and assign its value to items for which the children monitoring
  -- has changed. This is done in two places:
  --  - in reconciliation_table for items that are still live and reconciled
  --  - in the new tombstone_table for delete items
  enumeration_anchor INT NULL,
  -- Update the enumeration on an item by keeping track of the last known
  -- change for that item on disk or on the FP
  last_change INT NULL
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/fssync/libfssync/interfaces/persistence/types/ItemReconciliation.swift
already fetching content on the other side
item is already being propagated from the other side
item is already being propagated
kind not defined in 
no id defined in 
SELECT fs_id
  FROM reconciliation_table
 WHERE item_is_flocked != 0
_snapshot AS snap
 INNER JOIN reconciliation_table AS rt ON rt.
   AND +snap.id != snap.parent_id
AND +snap.filename = 
  FROM reconciliation_table AS parent_rt
 INNER JOIN 
_snapshot AS snap ON snap.parent_id = parent_rt.
 INNER JOIN reconciliation_table AS rt ON rt.
_id = snap.id
 WHERE parent_rt.
_id = snap.parent_id
 WHERE snap.id = 
 AND +snap.parent_id != snap.id
   AND 
WITH RECURSIVE parent_dirs(id, parent_id) AS (
  SELECT snap.id, snap.parent_id
    FROM 
_snapshot AS snap
   WHERE snap.id = 
  UNION ALL
  SELECT snap.id, snap.parent_id
    FROM 
_snapshot AS snap
   INNER JOIN parent_dirs AS pd ON pd.parent_id = snap.id
   WHERE snap.id != pd.id
   LIMIT 128
SELECT rt.rowid, 
  FROM parent_dirs AS pd
 INNER JOIN reconciliation_table AS rt ON pd.id == rt.
 WITH RECURSIVE parent_dirs(id, parent_id) AS (
   SELECT snap.id, snap.parent_id
     FROM 
_snapshot AS snap
    INNER JOIN reconciliation_table AS rt ON rt.
_id = snap.id
    WHERE rt.
   UNION ALL
   SELECT snap.id, snap.parent_id
     FROM 
_snapshot AS snap
    INNER JOIN parent_dirs AS pd ON pd.parent_id = snap.id
    WHERE snap.id != pd.id
    LIMIT 128
 SELECT rt.rowid, 
   FROM parent_dirs AS pd
  INNER JOIN reconciliation_table AS rt ON rt.
_id = pd.id
  WHERE 
 SELECT rt.rowid, 
   FROM reconciliation_table AS original_rt
  INNER JOIN 
_snapshot AS original_snap ON (original_snap.id = original_rt.
_id)
  INNER JOIN reconciliation_table AS parent_rt ON parent_rt.
_id = original_snap.parent_id
  INNER JOIN 
_snapshot AS sibling_snap ON (
               sibling_snap.parent_id = parent_rt.
               AND sibling_snap.filename = original_snap.filename 
               AND +sibling_snap.id != 
  INNER JOIN reconciliation_table AS rt ON rt.
_id = sibling_snap.id
  WHERE original_rt.
SQLDB: Fetch pending indexing deletions
SELECT fs_id, fp_id, last_change
  FROM tombstone_table
 WHERE last_change > 
 ORDER BY last_change ASC
 LIMIT 
UPDATE tombstone_table
   SET last_change = NULL
 WHERE last_change <= 
SQLDB: Decoration Query
SQLDB: Decoration Decoding
SELECT fs.metadata_is_dataless, fs.recursive_dataless_count, fs.recursive_evictable_count,
       fs.vfs_fileid, fs.vfs_generationid, fs.metadata_size, fs.metadata_is_package, fs.metadata_kind,
       fs.parent_id, fs.filename,
       fp.metadata_is_pinned, fp.metadata_is_in_pinned_folder,
       fp.content_version, fp.structural_version,
       fp.recursive_disallow_deletion_count, fp.recursive_disallow_exclusion_count,
       
  FROM reconciliation_table AS rt
  LEFT JOIN fs_snapshot AS fs ON (fs.id = rt.fs_id)
  LEFT JOIN fp_snapshot AS fp ON (fp.id = rt.fp_id)
 WHERE 
SQLDB: Fetch pending indexing items
       fs.recursive_dataless_count, fs.recursive_evictable_count,
       fp.metadata_is_pinned, fp.metadata_is_in_pinned_folder,
       fp.content_version, fp.structural_version,
       fp.recursive_disallow_deletion_count, fp.recursive_disallow_exclusion_count,
       rt.last_change,
       
  FROM reconciliation_table AS rt
  LEFT JOIN fs_snapshot AS fs ON (rt.fs_id = fs.id)
  LEFT JOIN fp_snapshot AS fp ON (rt.fp_id = fp.id)
 WHERE rt.last_change > 
 ORDER BY rt.last_change ASC
 LIMIT 
SELECT COUNT(fp.metadata_size), SUM(MAX(1, fp.metadata_size))
  FROM jobs
 INNER JOIN fp_snapshot AS fp ON (fp.id = jobs.source_item_id)
 INNER JOIN reconciliation_table AS rt ON (rt.fp_id = jobs.source_item_id)
 WHERE jobs.side = 
   AND ((jobs.type = 
         AND jobs.diffs & 
         AND fp.metadata_kind IN 
        OR (jobs.type = 
            AND fp.metadata_kind IN (
   AND rt.fp_content_status = 
SELECT COUNT(fp.metadata_size), SUM(MAX(1, fp.metadata_size))
  FROM reconciliation_table AS rt
 INNER JOIN fp_snapshot AS fp ON (fp.id = rt.fp_id)
 WHERE rt.fs_materialization_status == 
   AND rt.kind = 
   AND +rt.fp_updated_fields & 
SELECT COUNT(fp.metadata_size), SUM(MAX(1, fp.metadata_size))
  FROM reconciliation_table AS rt
 INNER JOIN fp_snapshot AS fp ON (fp.id = rt.fp_id)
 WHERE rt.fp_updated_fields & 
   AND rt.fp_content_status IN 
   AND NOT (fs_id IS NULL AND fp_scheduling_state_conditions == 
SELECT COUNT(fs.metadata_size), SUM(MAX(1, fs.metadata_size))
  FROM jobs
 INNER JOIN reconciliation_table AS rt ON (fs.id = rt.fs_id)
 INNER JOIN fs_snapshot AS fs ON (fs.id = jobs.source_item_id)
 WHERE ((jobs.type == 
        OR jobs.type == 
   AND jobs.side == 
   AND +fs.metadata_kind IN 
   AND rt.fs_deletion_status & 
SELECT COUNT(fs.metadata_size), SUM(MAX(1, fs.metadata_size))
  FROM reconciliation_table AS rt
 INNER JOIN fs_snapshot AS fs ON (fs.id = rt.fs_id)
 WHERE rt.kind IN 
   AND rt.fs_updated_fields & 
SELECT rowID, parent_rt.fs_id
  FROM reconciliation_table AS parent_rt
 WHERE parent_rt.fs_id IS NOT NULL
   AND parent_rt.fs_deletion_status & 
 = 0
   AND EXISTS (SELECT snap.id
                 FROM fs_snapshot AS snap
           INNER JOIN reconciliation_table AS child_rt ON (child_rt.fs_id = snap.id)
                WHERE snap.parent_id = parent_rt.fs_id
                  AND snap.parent_id != snap.id
                  AND child_rt.fs_deletion_status & 
SELECT fs_id
  FROM reconciliation_table
 WHERE fs_scheduling_state =  
   AND fs_scheduling_state_conditions & 
   AND fs_id IS NOT NULL
 ORDER BY scheduling_priority DESC, scheduling_timestamp
 LIMIT 100
  fp_scheduling_state != 
  OR (fp_scheduling_state_conditions & 
SELECT rowID
  FROM reconciliation_table
 WHERE fp_scheduling_state IN 
(fp_scheduling_state_conditions & 
SELECT rowID
  FROM reconciliation_table
 WHERE item_is_flocked != 0
 LIMIT 1
  fs_scheduling_state != 
  OR (fs_scheduling_state_conditions & 
SELECT rowID
  FROM reconciliation_table
 WHERE fs_scheduling_state IN 
(fs_scheduling_state_conditions & 
  FROM reconciliation_table
 WHERE (fs_scheduling_state = 
        AND fs_scheduling_state_conditions == 
    OR (fp_scheduling_state = 
        AND fp_scheduling_state_conditions == 
SELECT fs_id
  FROM reconciliation_table
 WHERE fs_id IS NOT NULL
   AND fp_id IS NOT NULL
   AND fp_scheduling_state = 
   AND fp_scheduling_state_conditions & 
key value 
  FROM reconciliation_table
 WHERE fs_scheduling_state = 
   AND fp_scheduling_state NOT IN 
   AND rowID NOT IN 
 ORDER BY scheduling_priority DESC, scheduling_timestamp
 LIMIT 
  FROM reconciliation_table
 WHERE fp_scheduling_state = 
   AND fs_scheduling_state NOT IN (
                                   
 ORDER BY scheduling_priority DESC, scheduling_timestamp
 LIMIT 
SELECT rowID
  FROM reconciliation_table
 WHERE fs_id IS NOT NULL AND fp_id IS NOT NULL AND fs_deletion_status & 
SQLDB: Scan pending reimport items
  FROM reconciliation_table
 WHERE fs_disk_import_status = 
SELECT fs_id
  FROM reconciliation_table
 WHERE fs_disk_import_status = 
SELECT fs_id
  FROM reconciliation_table
 WHERE fs_disk_import_status IN 
 wasDataless 
SELECT fs_id, fs_was_dataless_before_disk_import
  FROM reconciliation_table
 WHERE fs_disk_import_status = 
SQLDB: Scan ignored items
  FROM reconciliation_table
  WHERE fs_deletion_status & 
 ORDER BY rowID ASC
 LIMIT 
Output is limited to 
 rows, dump may be incomplete...
FROM reconciliation_table
ORDER BY
CASE
WHEN fs_id IS NULL AND fp_scheduling_state  == 
 THEN 1
WHEN fs_scheduling_state == 
 AND
     fp_scheduling_state  == 
 THEN 2
ELSE 0
SQLDB: reconciliation delete
  reconciliation delete: %{public}ld
DELETE FROM reconciliation_table
 WHERE rowID = 
SELECT fs_captured_content_file_id, fp_captured_content_file_id
  FROM reconciliation_table
 WHERE rowID = 
SQLDB: reconciliation insert
  reconciliation insert: %{public}s
INSERT INTO reconciliation_table (
SQLDB: fetch reconciliation FP id
SELECT fp_id
  FROM reconciliation_table
 WHERE fs_id = 
SQLDB: fetch reconciliation FS id
SELECT fs_id
  FROM reconciliation_table
 WHERE fp_id = 
libfssync/SQLReconciliationTable.swift
cannot reconcile item: 
SELECT fp_id, last_change
  FROM reconciliation_table INDEXED BY reconciliation_pending_set
 WHERE fp_id IS NOT NULL
   AND scheduling_timestamp < 
   AND ((fs_scheduling_state IN 
         fs_updated_fields != 0 OR
         fs_deletion_status != 0) OR
         fs_materialization_status == 
SELECT fp_id, last_change
  FROM reconciliation_table INDEXED BY reconciliation_pending_set
 WHERE scheduling_timestamp < 
   AND ((fp_scheduling_state IN 
         fp_updated_fields != 0 OR
         fp_deletion_status != 0))
   AND NOT (fs_id IS NULL AND fp_scheduling_state_conditions == 
SQLDB: Scan decorated
       fs.recursive_dataless_count, fs.recursive_evictable_count,
       fp.metadata_is_pinned, fp.metadata_is_in_pinned_folder,
       fp.content_version, fp.structural_version,
       fp.recursive_disallow_deletion_count, fp.recursive_disallow_exclusion_count,
       
  FROM fs_snapshot AS fs
  LEFT JOIN reconciliation_table AS rt ON (rt.fs_id = fs.id)
  LEFT JOIN fp_snapshot AS fp ON (rt.fp_id = fp.id)
 WHERE fs.parent_id = 
 AND fs.id != fs.parent_id
 ORDER BY fs.rowID ASC
 LIMIT 
SELECT fp_id, is_watched, enumeration_anchor, parent_id, filename, kind
  FROM (SELECT fp_id AS fp_id,
               fs_snapshot.metadata_is_dataless = 0 AS is_watched,
               enumeration_anchor AS enumeration_anchor,
               fp_snapshot.parent_id AS parent_id,
               fp_snapshot.filename AS filename,
               fp_snapshot.metadata_kind AS kind
          FROM reconciliation_table
         INNER JOIN fp_snapshot ON fp_id = fp_snapshot.id
          LEFT JOIN fs_snapshot ON fs_id = fs_snapshot.id
         WHERE fp_snapshot.parent_id IS NOT NULL
     UNION ALL
       SELECT fp_id AS fp_id,
              0 AS is_watched,
              enumeration_anchor AS enumeration_anchor,
              NULL AS parent_id,
              NULL AS filename,
              NULL AS kind
         FROM tombstone_table)
    WHERE enumeration_anchor > 
 ORDER BY enumeration_anchor
 LIMIT 
UPDATE tombstone_table
   SET enumeration_anchor = NULL
 WHERE enumeration_anchor < 
captured_content
bouncing_context
source_snapshot_version
Unhandled job type
libfssync/FileTree.swift
_TtC9libfssync12Continuation
_TtC9libfssync19RequestContinuation
_TtC9libfssync18FPFSGlobalProgress
proxies
activeCounters
doneCounters
noActivity
publishedProgress
Unpublishing global progress %s
Publishing global progress %s for download
publishProgress(completed:total:)
Publishing global progress %s for upload
updateSchedulingState(_:)
pausing failed: %@
received resume request on progress
received paused request on progress
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/fssync/fpfs/FPFSGlobalProgress.swift
parentEnumerated
permanentThrottling
streamCalmsDown
moveOutCompleted
safelyMaterialized
setEvictability
recursiveDeletionBackOff
childrenEviction
childrenDeletion
childrenCreation
parentCreation
_TtC9libfssync17FPSnapshotChecker
reconciliationForDomainID
filesCheckedDuringFPSnapshotEnumeration
fetchItem(with:inDomain:)
Error fetching the item in the FPSnapshot: %{public}@
Error fetching the item in the reconciliation table: %{public}@
_TtC9libfssync14FPFSSyncEngine
uploadProgress
downloadProgress
waitingItemsWatchingQueue
waitingItemsSource
engineUUID
normalizeError(_:synchronous:completionHandler:)
activate()
Publishing at url %s progress %@
make sure we get idle stream notification
notify scheduler we are ready
suspending the scheduler
changing scheduling state to %s
setFileTreeHandlers()
processPendingStreamResetOrIdle()
  aggregate incoming FP tree changes
  aggregate incoming FS tree changes
: waiting-items-watching
vfsItemFromURL(_:skipResetingItems:pkgItemsLookupPolicy:options:)
resolving URL for %s for %s
create fault at %s for %s
_TtC9libfssyncP33_695A112A250415316549FF403B18C66413DummyObserver
_TtC9libfssyncP33_695A112A250415316549FF403B18C66416LifetimeExtender
Ti,N,R,VrequestEffectivePID
_TtC9libfssync11FPFSIndexer
@36@0:8@16@24B32
enumerator
lastIndexedAnchor
spotlightIndexer
learnNeedsAuthenticationFromBatchError
v12@?0B8
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/fssync/fpfs/enumerators/ChangeEnumerator.swift
  pushing batch: updating=%s, deleting=%s hasMore=%{bool}d
  batch indexation succeeded for anchor %s
  indexing failed: %@
libfssync.FPFSIndexer
init(with:domain:enabled:)
  current anchor is unknown, fetching from spotlight
enumerateChanges(fromAnchor:suggestedBatchSize:reply:)
  indexing from %s
cannot decorate item: %@
Decoration
Type identifier resolution
libfssync/VFSFileTree.swift
  enumeration error: %@
  restarting indexing from scratch
TQ,N
FPSpotlightIndexerDelegate
v24@0:8@"FPSpotlightIndexer"16
B24@0:8@16
creation on both sides is an impossible state
_TtC9libfssync13ReadOnlyWharf
libfssync/ReadOnlyWharf.swift
fpck should not use the wharf
itemID
snapshotVersion
targetFilename
bouncingContext
baseVersion
parentID
no requested state
otherCollidingItemID
otherCollidingFilename
otherCollidingParentID
DeviceClassNumber
fetch metadata for pending event: %s, reason: %s
fileTree
canSetEvictability
libfssync/Snapshot.swift
order
updateEpoch
libfssync/Schedulable.swift
_TtC9libfssync19FPFSSQLBackupEngine
@32@0:8@16@24
outputUserURL
destinationDirectoryURL
backupManifestURL
~/Library/Application Support/FileProvider does not exist. No need to back up.
backup_manifest.db
Failed to remove directory %s: %@
libfssync.FPFSSQLBackupEngine
Unable to create destination directory %s: %@
Calling completion handler with %s
Unable to delete existing destination directory at %s: %@
Library/Mobile Documents/
Library/CloudStorage/
Failed to get contents of %s: %@
Could not get canonical path for %s
_NSURLGenerationCountKey
Failed to get enumerator for %s
Failed to fetch resource values for %s: %@
Failed to get canonical path for %s
Failed to get the inode for %s
Failed to get gen count for %s
Failed to get is directory for %s
targetItem
capturedContent
sourceID
targetID
collect-captured-content
cancel-fetch-content
sync anchor expired
fetch-event-stream
asking to enumerate folder before selection for import
fetch-children-metadata
resnapshot-children
unfault-directory-in-tree
fault-directory-in-tree
delete-rejected-in-tree
mark-parent-deleted
delete-folder-if-empty
provideWithExistingItem(for:db:result:completion:)
capturedContent item 
handle(reply:strictVersioning:itemUnchanged:error:lastKnownVersion:request:db:result:completion:)
_TtC9libfssync17FPDNetworkMonitor
pathmon
Network path update %s
 error:<see throttling>
not supported on FP
item does not exist anymore
item is not ignored anymore
not ready while job on continuation
materialize-ignored-item
item not needed anymore
of priority 
requestCompleted(isIgnored:db:)
materialize-parent-hierarchy
_TtC9libfssync20FPFSSQLRestoreEngine
v24@0:8@?16
userURL
fpDatabaseURLs
_TtC9libfssync31RestoreUpgradeSchemaVFSFileTree
_TtC9libfssync30RestoreUpgradeSchemaFPFileTree
libfssync.FPFSSQLRestoreEngine
Failed to populate the backup manifest %s with new columns: %@
Failed to create indexes on %s: %@
Calling completion handler with success.
Creating indexes
No file at %s, so no need to patch.
Failed to open database at %s: %@
Failed to disable foreign keys: %@
Failed to patch the jobs table: %@
Failed to patch the fs_item_jobs table: %@
Failed to patch the fs_throttle table: %@
Failed to patch the reconciliation_table table: %@
Failed to patch the background_downloader table: %@
Failed to patch the fs_snapshot table: %@
Couldn't flush database %s: %@
Patching database at %s
B16@?0@"PQLConnection"8
UPDATE fs_snapshot
SET id = 
vfs_generationid = 
SELECT rowid, id, parent_id, vfs_fileid, vfs_generationid, structural_version
FROM fs_snapshot
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/fssync/libfssync/implementations/file-system/persistence/Prequelite+FSSyncAdditions.swift
UPDATE background_downloader
SET id = 
SELECT rowid, id
FROM background_downloader
UPDATE reconciliation_table
SET fs_id = 
fs_structural_version = 
SELECT rowid, fs_id, fs_version, fs_structural_version
FROM reconciliation_table
UPDATE fs_throttle
SET item_id = 
SELECT rowid, item_id
FROM fs_throttle
UPDATE fs_item_jobs
SET item_id = 
SELECT rowid, item_id
FROM fs_item_jobs
UPDATE jobs
SET other_id = 
other_structural_version = 
other_version = 
SELECT rowid, other_id, other_structural_version, other_version
FROM jobs
WHERE side == 
libfssync/Prequelite+FSSyncAdditions.swift
unexpected binding
PRAGMA foreign_keys = ON
UPDATE jobs
SET item_id = 
state_parent_id = 
base_version = 
base_structural_version = 
SELECT rowid, item_id, state_parent_id, base_version, base_structural_version, bouncing_context, captured_content
FROM jobs
WHERE side == 
PRAGMA foreign_keys = OFF
/tmp/should_not_be_used/
libfssync/FPFSSQLRestoreEngine.swift
Failed to create the SQLDatabase: 
Library/Application Support/FileProvider
Failed to enumerate %s: %@
  Removing all conflict losers for item %s ...
 in 
  Updating conflicting losers with versions: %s for item %s ...
populate-conflicts
rootURL
disable-sync-root
_TtC9libfssync11VFSFileTree
v52@0:8@16@24Q32Q40I48
v32@0:8@16q24
_isCaseSensitive
lookupScope
coordinatorPurposeIdentifer
runningCoordinators
coordinatorsByItemID
operationQueue
queue
fsChangeMonitor
fsChangeSubscription
tombstoneSlayer
flockedDispatchDict
flockedTimerDispatchDict
flockedGroup
_rootURL
_rootURLLock
idLookupCache
_lastFSEventID
_fakeEventSeq
lastFSEventIDShortWaitSubscription
lastFSEventIDLongWaitSubscription
eventAggregator
counters
preventedEvictabilityTable
 droppedEventCount=
  FS: waiting for barrier on %s
 FS: barrier wait completed
marking sync root bit for folder %s
Eviction of %s failed with %@
can't create enumerator at %s
com.apple.fileprovider.before-bounce#P
Can't enumerate: %s: %@
-fail-with-errno-
com.apple.fileprovider.dir#N
FSTree update to new url %s new parent %s
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/fssync/libfssync/implementations/file-system/tree/VFSFileTree.swift
 denying update on busy file %{public}s
Invalid (nil) parent ID
missing beforeBounceFilename when bouncing file 
FS stage creation
Coordination: Acquiring for Creation
coordination on 
FS creation [under coordination]
  Impossible to fetch URL for Item %s, can not update conflict losers for this item...
  Item %s not found, can not update conflict losers for this item...
  Removing %ld conflicts...
  Adding %ld conflicts...
  There are %ld existing conflicts...
  Error when storing conflict loser with version %s: %@
Impossible to fetch URL for Item %s, can not fetch conflict losers for this item...
Item %s not found, can not fetch conflict losers for this item...
  lookup of %s timed out after %f (backoff: %sns)
  lookup of %s timed out after %f (backoff: %sns), item is stale, consider it's dead
close()
cancel()
stopEventAggregation()
starting without a FSEvent ID
starting without a an FSEvent stream UUID
no FSEvent UUID stream for current volume
Unable to retrieve FSEvent stream UUID for device %d
Reset stream
deduplicating FSEvent parent lookup for %s
failed to bump parent mTime %@
If the item is the domain root %s, no need to handle parent mtime
ESTALE: root/trash changed during enumeration.
%llu, %llu,
%llu, %s
FSEvent stream got reason: 
deduplicating FSEvent lookup for %llu at %s
Unable to resolve FSEvent item attributes for event on fileID(%{public}llu)
Ignoring unresolved own-event on fileID(%{public}llu)
Delivering FSEvent notification for change on %s
Ignoring event for item in an ignored folder fileID(%{public}llu)
error when resolving item: %@
Item mismatch when resolving FSEvent: got %s when expecting %s
Dropping fsevent for %{public}llu (event#%llu, flags:%x)
dropping fsevent without file ID (event#%llu, flags:%x)
Failed to identify root of rename event #%llu against package at %s: %@
%s was moved inside package %s
 ignoring event for busy file %{public}s
Handling FSEvent for %{public}s
event at an ignored path
Failed to capture a stable version of item: %{public}s != %{public}s
can't activate subscription on 
starting to observe fsevent on %s (was %s)
droppedEventCount
  FS: barrier observed, waiting for flocks to be released
vfstree
idle stream timeouts: %ldms, long: %ldms
com.apple.fssync.fstree
FSChangeSubscriptionDelegate
v24@0:8@"FSChangeSubscription"16
v52@0:8@"FSChangeSubscription"16@"NSString"24Q32Q40I48
v32@0:8@"FSChangeSubscription"16q24
unspecified reason
adding new subscription
device UUID changed
fsevents ID wrapped
root needs deep scan
dropped historical event
kernel dropped event
  readingOptions=%{public, signpost.telemetry:string1, name=readingOptions,public}s
  enableTelemetry=YES
  state=%{public, signpost.telemetry:string2, name=state,public}s
  providerID=%{public, signpost.telemetry:number1, name=providerID,public}llu
[Error] Interval already ended
  state=%{public, signpost.telemetry:string2, name=state,public}s
  providerID=%{public, signpost.telemetry:number1, name=providerID,public}llu
  size=%{public, signpost.telemetry:number2, name=size,public}ld
_TtC9libfssync13DocumentWharf
label
fsRoot
wharfHandle
deferredWQ
invalidated
activated
requestedXattrs
reporter
document-wharf-resurrect
libfssync/fpfs_open.swift
path should not be nil
i28@?0i8^{dirent=QQSSC[1024c]}12r*20
i16@?0r*8
i20@?0^{fpfs_item_handle=QQII*Q}8B16
i32@?0^{fpfs_item_handle=QQII*Q}8^{fpfs_item_handle=QQII*Q}16q24
i20@?0i8^{dirent=QQSSC[1024c]}12
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/fssync/libfssync/wharf/DocumentWharf.swift
ESTALE: item changed in wharf during wharfUnload.
%u, %u,
%llu, %llu,
%u, %u
Cannot clear deletion directory: %{public}@
Failed to set _kCFURLIsExcludedFromCloudBackupKey on %s
Failed to set _kCFURLIsExcludedFromCloudBackupKey on %s: %@
: wharf-housekeeping
registrationKeys
_debouncedUnregistration
registrationQueue
debounceQueue
debouncePublisher
corrupted table background_downloader: 
SELECT id, state, reason
  FROM background_downloader
com.apple.fileproviderd.background-download
SELECT id
  FROM background_downloader
 WHERE state = 
  finished background download <i:%s>
  throttling background download <i:%s>
DELETE FROM background_downloader
      WHERE id = 
 BRM Materialization failed with %@, falling back to full materialization
SELECT id, extent_location, extent_length
  FROM background_downloader
 WHERE state = 
 AND
       reason != 0
 ORDER BY scheduling_timestamp
CREATE TRIGGER "background_download/purge"
 AFTER UPDATE ON background_downloader
  WHEN new.reason = 0 AND new.state != 
BEGIN
  DELETE FROM background_downloader
   WHERE (id = new.id
      AND extent_location IS old.extent_location
      AND extent_length IS old.extent_length);
CREATE INDEX background_downloader__state__scheduling_timestamp
    ON background_downloader(state, scheduling_timestamp)
ALTER TABLE background_downloader_copy RENAME TO background_downloader
DROP TABLE background_downloader
INSERT INTO background_downloader_copy (id, scheduling_timestamp, state, reason)
    SELECT id, scheduling_timestamp, state, reason
        FROM background_downloader
CREATE TABLE background_downloader_copy (
          id 
 INT NOT NULL,
          extent_location INT DEFAULT NULL,
          extent_length INT DEFAULT NULL,
          scheduling_timestamp INT NOT NULL,
          state TINYINT NOT NULL,
          reason INT NOT NULL,
          CONSTRAINT PK_background_download PRIMARY KEY (id, extent_location, extent_length)
CREATE TRIGGER "content_policy_downloader/fs_snapshot/fs_update"
 AFTER UPDATE ON fs_snapshot
 WHEN new.metadata_is_dataless
BEGIN
 SELECT SCHEDULE_BACKGROUND_DOWNLOAD(new.id, 1, 
 FROM fs_snapshot AS fs
 LEFT JOIN reconciliation_table AS rt ON (fs.id = rt.fs_id)
 LEFT JOIN fp_snapshot AS fp ON (fp.id = rt.fp_id)
 WHERE fs.rowID = new.rowID
 AND 
(CASE fp.decoration_content_policy
  WHEN 
 THEN
    fp.decoration_inherited_content_policy == 
  ELSE
    fp.decoration_content_policy == 
CREATE TRIGGER "content_policy_downloader/fs_snapshot/fs_insert"
 AFTER INSERT ON fs_snapshot
 WHEN new.metadata_is_dataless
BEGIN
 SELECT SCHEDULE_BACKGROUND_DOWNLOAD(new.id, 1, 
CREATE TRIGGER "content_policy_downloader/reconciliation_table/rt_update"
 AFTER UPDATE ON reconciliation_table
  WHEN new.fs_id IS NOT NULL
  AND new.fp_id IS NOT NULL
  AND (old.fs_id IS NULL OR old.fp_id IS NULL)
BEGIN
  SELECT SCHEDULE_BACKGROUND_DOWNLOAD(new.fs_id, 1, 
  FROM reconciliation_table AS rt
  LEFT JOIN fp_snapshot AS fp ON (rt.fp_id = fp.id)
  WHERE rt.rowID = new.rowID
  AND rt.fp_content_status != 
CREATE TRIGGER "background_download/fs_snapshot/insert"
 AFTER INSERT ON fs_snapshot
  WHEN new.metadata_is_in_pinned_folder AND new.metadata_is_dataless
BEGIN
  SELECT SCHEDULE_BACKGROUND_DOWNLOAD(new.id, 1, 
CREATE TRIGGER "background_download/fs_snapshot/update"
 AFTER UPDATE ON fs_snapshot
  WHEN (old.metadata_is_dataless AND old.metadata_is_in_pinned_folder)
       != (new.metadata_is_dataless AND new.metadata_is_in_pinned_folder)
BEGIN
  SELECT SCHEDULE_BACKGROUND_DOWNLOAD(new.id,
                                      new.metadata_is_dataless AND new.metadata_is_in_pinned_folder,
                                      
CREATE TRIGGER "background_download/fs_snapshot/delete"
 AFTER DELETE ON fs_snapshot
BEGIN
  DELETE FROM background_downloader
   WHERE id = old.id;
BEGIN
  DELETE FROM background_downloader
   WHERE id = new.id;
CREATE TABLE background_downloader (
  id 
 PRIMARY KEY,
  scheduling_timestamp INT NOT NULL,
  state TINYINT NOT NULL,
  reason INT NOT NULL
/Library/Caches/com.apple.xbs/Sources/FileProviderExtensions_Sim/fssync/libfssync/implementations/file-system/persistence/SQLBackgroundDownloader.swift
:SQLBackgroundDownloaderRegistrationQueue
:SQLBackgroundDownloaderDebounceQueue
SELECT COUNT(id)
  FROM background_downloader
 WHERE state = 
missing database
valueForKey:
typeWithFilenameExtension:conformingToType:
substringWithRange:
subarrayWithRange:
stringWithUTF8String:
stringWithFormat:
stringByAppendingFormat:
string
setInvalidationHandler:
setInterruptionHandler:
setExportedObject:
setExportedInterface:
removeObjectsInRange:
removeObjectsInArray:
removeObjectAtIndex:
removeObject:
removeAllObjects
regularExpressionWithPattern:options:error:
rangeAtIndex:
objectForKey:
objectAtIndexedSubscript:
objectAtIndex:
lowercaseString
length
isEqualToString:
interfaceWithProtocol:
insertObject:atIndex:
initWithUUIDString:
initWithCapacity:
hashTableWithOptions:
hasSuffix:
hasPrefix:
fpfs_initWithFSEventsFlags:
fp_realpath
fp_pathWithFileSystemRepresentation:
fp_errorWithPOSIXCode:itemURL:debugDescription:
fp_errorWithPOSIXCode:
fp_cachedTypeWithIdentifier:
firstMatchInString:options:range:
fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
errorWithDomain:code:userInfo:
endpoint
countByEnumeratingWithState:objects:count:
count
copy
containsString:
conformsToType:
componentsJoinedByString:
arrayWithObjects:count:
arrayWithObjects:
arrayWithCapacity:
arrayByAddingObject:
appendString:
appendFormat:
anonymousListener
addObjectsFromArray:
UUID
URLByAppendingPathComponent:isDirectory:
init
validation_allowValidation:
validation_evictDocumentWithCompletionHandler:
validation_shareDocumentWithCompletionHandler:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
listener:shouldAcceptNewConnection:
makeListenerEndpointAndReturnError:
serviceName
isRestricted
T@"NSString",R,C,N
restricted
TB,R,N,GisRestricted
initWithFileProviderExtension:itemIdentifier:
.cxx_destruct
_fileProviderExtension
_itemIdentifier
_operationQueue
_listeners
fp_prettyPath
didUpdateItems:
didDeleteItemsWithIdentifiers:
finishEnumeratingChangesUpToSyncAnchor:moreComing:
finishEnumeratingWithError:
suggestedBatchSize
itemIdentifier
parentItemIdentifier
filename
contentType
typeIdentifier
typeAndCreator
capabilities
fileSystemFlags
documentSize
childItemCount
creationDate
contentModificationDate
extendedAttributes
lastUsedDate
tagData
favoriteRank
isTrashed
isUploaded
isUploading
uploadingError
isDownloaded
isDownloading
downloadingError
isMostRecentVersionDownloaded
isShared
isSharedByCurrentUser
ownerNameComponents
mostRecentEditorNameComponents
versionIdentifier
itemVersion
symlinkTargetPath
userInfo
contentPolicy
defaultManager
URLsForDirectory:inDomains:
removeItemAtURL:error:
legacyDefaultManager
signalEnumeratorForContainerItemIdentifier:completionHandler:
getResourceValue:forKey:error:
boolValue
documentsURL
setResourceValue:forKey:error:
enumerateItemsForObserver:startingAtPage:
enumerateChangesForObserver:fromSyncAnchor:
currentSyncAnchorWithCompletionHandler:
invalidate
initWithDomain:code:userInfo:
fp_isFolder
finishEnumeratingUpToPage:
didEnumerateItems:
suggestedPageSize
fileURL
fp_defaultManager
permanentStorageForItemAtURL:allocateIfNone:error:
fp_isAppInboxOrDescendants
dealloc
hasUnresolvedConflicts
containerDisplayName
isDownloadRequested
isHidden
providerIdentifier
sharingPermissions
fp_spotlightDomainIdentifier
fp_domainIdentifier
fp_parentDomainIdentifier
fp_isUbiquitous
conflictingVersions
fp_isContainer
fp_isContainerPristine
fp_cloudContainerIdentifier
fp_cloudContainerClientBundleIdentifiers
displayName
isTopLevelSharedItem
quarantineBlob
isSyncRoot
setSyncRoot:
fileSystemFilename
isExcludedFromSync
fp_isLastModifiedByCurrentUser
fp_isAddedByCurrentUser
fp_addedByNameComponents
preformattedOwnerName
preformattedMostRecentEditorName
isCollaborationInvitation
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
fp_relativePathOf:
fp_shortDescription
unsignedLongLongValue
initWithDomain:
URLForItemWithPersistentIdentifier:
persistentIdentifierForItemAtURL:
itemForIdentifier:error:
providePlaceholderAtURL:completionHandler:
startProvidingItemAtURL:completionHandler:
stopProvidingItemAtURL:
itemChangedAtURL:
fetchContentsForItemWithIdentifier:version:completionHandler:
enumeratorForContainerItemIdentifier:error:
importDocumentAtURL:toParentItemIdentifier:completionHandler:
createDirectoryWithName:inParentItemIdentifier:completionHandler:
renameItemWithIdentifier:toName:completionHandler:
reparentItemWithIdentifier:toParentItemWithIdentifier:newName:completionHandler:
_trashItemAtURLWithoutCoordination:completionHandler:
trashItemWithIdentifier:completionHandler:
untrashItemWithIdentifier:toParentItemIdentifier:completionHandler:
deleteItemWithIdentifier:completionHandler:
setLastUsedDate:forItemIdentifier:completionHandler:
setTagData:forItemIdentifier:completionHandler:
setFavoriteRank:forItemIdentifier:completionHandler:
supportedServiceSourcesForItemIdentifier:error:
_removeTrashedItemsOlderThanDate:completionHandler:
_defaultApplicationContainerForBundleIdentifier:completionHandler:
_dumpInternalStateToTermDumper:completionHandler:
changeItem:baseVersion:changedFields:contents:options:completionHandler:
waitForStabilizationWithCompletionHandler:
fp_relationshipToItemAtURL:
setPurposeIdentifier:
coordinateWritingItemAtURL:options:error:byAccessor:
coordinateWritingItemAtURL:options:writingItemAtURL:options:error:byAccessor:
metadataVersion
contentVersion
initWithSuiteName:
boolForKey:
fp_trashUnderFolder:allowCoordination:completionHandler:
fp_reparentUnderFolder:allowBouncing:allowCoordination:completionHandler:
fileProviderErrorForCollisionWithItem:
fp_makeWritableWithError:
put:
startFgColor:
reset
startFgColor:attr:
bundleID
fp_deleteAllowingCoordination:completionHandler:
fp_reparentUnderFolder:withNewName:allowCoordination:completionHandler:
fp_renameWithNewName:allowCoordination:completionHandler:
fp_createSubFolder:completionHandler:
fp_importUnderFolder:allowCoordination:completionHandler:
isDownloadedTestingImpl
isUploadedTestingImpl
documentStorageURL
startProvidingItemAtURL:readingOptions:completionHandler:
movingItemAtURL:requiresProvidingWithDestinationURL:completionHandler:
_propertiesForItemAtURL:error:
_additionalDumpInfoWithCompletionHandler:
fetchThumbnailsForItemIdentifiers:requestedSize:perThumbnailCompletionHandlerWithType:completionHandler:
reparentItemWithIdentifier:toParentItemWithIdentifier:completionHandler:
fetchPublishingURLForItemIdentifier:completionHandler:
evictItemWithIdentifier:completionHandler:
disconnectWithOptions:completionHandler:
handleEventsForBackgroundURLSession:completionHandler:
attemptRecoveryFromError:optionIndex:completionHandler:
preflightTrashItemWithIdentifier:completionHandler:
preflightReparentItemWithIdentifier:toParentItemWithIdentifier:completionHandler:
customPushTopics
fetchTrashIdentifiersWithCompletionHandler:
identifier
pathRelativeToDocumentStorage
setFileURL:
decorations
initWithContentVersion:metadataVersion:lastEditorDeviceName:
initWithContentVersion:metadataVersion:
fp_checkSandboxFileMetadataRead
fpfs_isSafeSaveTempFile:
longLongValue
stringFromByteCount:countStyle:
fp_obfuscatedFilename
appRegistry:didUpdateApps:
appRegistry:didRemoveAppsWithBundleIDs:
listOfMonitoredApps
setDelegate:
isManaged
deleteSearchableItemsWithSpotlightDomainIdentifiers:completionHandler:
initWithContentsOfURL:options:error:
fp_collidingURL
initWithString:
redactedDescription
_string
adopt
fork
section
domainInfoWithDomainID:usingFPFS:andRootPaths:
initWithDomainID:usingFPFS:andRootPaths:
usingFPFS
setUsingFPFS:
rootPaths
setRootPaths:
domainID
setDomainID:
_usingFPFS
_rootPaths
_domainID
TB,V_usingFPFS
T@"NSArray",&,V_rootPaths
T@"NSString",&,V_domainID
checkPath:providerDomainID:usingFPFS:completionHandler:
enumerateFromPaths:andCallHandlerForEachItem:
itemIsInsideAPackage
setItemIsInsideAPackage:
itemIsInsideAnIgnoredFolder
setItemIsInsideAnIgnoredFolder:
_itemIsInsideAPackage
_itemIsInsideAnIgnoredFolder
TB,V_itemIsInsideAPackage
TB,V_itemIsInsideAnIgnoredFolder
initWithPath:fd:reader:sinceEventID:streamUUID:ignoreOwnEvents:delegate:purpose:
activateWithError:
rootParent
waitableBarrierCanCreate:
waitableBarrier
resetBarrier
didProcessEventID:
didProcessBarrierEventUUID:
dispose
root
rootfd
rootFileID
delegate
lastDeliveredEventID
setLastDeliveredEventID:
eventStreamUUID
setEventStreamUUID:
state
setState:
isActivated
setIsActivated:
ignoreOwnEvents
_barrierGroup
_notifyStreamUUID
_notifyEventId
_weakReader
_purpose
_ownRootFD
_isActivated
_ignoreOwnEvents
_rootfd
_root
_rootFileID
_delegate
_lastDeliveredEventID
_eventStreamUUID
_state
T@"NSString",R,N,V_root
T@"NSString",R,N
TQ,R,N,V_rootFileID
Ti,R,N,V_rootfd
T@"<FSChangeSubscriptionDelegate>",W,V_delegate
TQ,N,V_state
TB,R,N,V_ignoreOwnEvents
TQ,N,V_lastDeliveredEventID
T@"NSUUID",&,N,V_eventStreamUUID
TB,N,V_isActivated
label
group
cancelled
fpfs_extractFSEventsBarrierUUID
fpfs_extractFSEventsNotifyUUID
fpfs_filenameExtension
sharedManager
scheduleFPCKRun:databasesBackupsPath:url:options:fpfs:ciconia:completionHandler:
dumpDatabaseAt:fullDump:writeTo:completionHandler:
workQueue
eventStreamUUIDForDevice:
setupForPath:error:
mountPath
deviceID
_stfs
_deviceID
Ti,R,N,V_deviceID
T@"NSUUID",R,N
purgeabilityErrorForReason:atURL:
fp_nonEvictableChildrenErrorWithFD:trashIno:busyIno:
initWithUserURL:outputUserURL:
backUpWithCompletionHandler:
backupEngine
setBackupEngine:
_backupEngine
T@"_TtC9libfssync19FPFSSQLBackupEngine",&,N,V_backupEngine
initWithUserURL:
restoreWithCompletionHandler:
restoreEngine
setRestoreEngine:
_restoreEngine
T@"_TtC9libfssync20FPFSSQLRestoreEngine",&,N,V_restoreEngine
T@"GSStorageManager",R
initWithLabel:workloop:
subscribeToEventsAtPath:fd:sinceEventID:streamUUID:ignoreOwnEvents:delegate:purpose:
_activateSubscription:error:
activateSubscription:error:
disableSubscription:
foreachSubscriptionInState:apply:
oldestStartingPoint
latency
hasBufferedEvents
_createStreamNamed:since:criteria:
liveFSEventsXPCActivityCriteria
setUpStreamForReason:error:
_queueEvents:markSelfEncountered:
queueEvents:markSelfEncountered:
processFseventBatch
deliverBarrierEvents
handleFSEvent:indexInBatch:batchSize:
flushStream
_close
close
resetWithReason:newFSEventID:
suspend
resume
_cancel
cancel
delegationQueue
barrierFolderURL
setBarrierFolderURL:
hasPlannedRescan
setPlannedRescan:
_resetCount
_suspendCount
_stream
_streamQueue
_processQueue
_delegationQueue
_fseventsProcessSource
_fseventsToProcess
_maxFSEventQueueSize
_fseventProcessBatchSize
_isCancelled
_drainEvents
_createNoDelay
_hasMarkSelf
_optimizeOutOwnEvents
_isProcessingHistory
_volume
_subscriptions
_pendingBarrierEvents
_log
_plannedRescan
_barrierFolderURL
T@"NSObject<OS_dispatch_queue>",R,N,V_delegationQueue
T@"NSURL",&,N,V_barrierFolderURL
TB,R,N
Td,R,N
plannedRescan
TB,N,GhasPlannedRescan,V_plannedRescan
flags
initWithPath:fileID:flags:eventID:
isBarrier
additionalDebugFlagsForHistoricalStream:
path
setPath:
rawFlags
eventID
barrierUUID
isNotification
fileID
additionalDebugFlags
_path
_fileID
_rawFlags
_eventID
_barrierUUID
_isNotification
_additionalDebugFlags
T@"NSString",&,N,V_path
TQ,R,N,V_fileID
TI,R,N
TI,R,N,V_rawFlags
TQ,R,N,V_eventID
TB,R,N,V_isNotification
T@"NSUUID",R,N,V_barrierUUID
TI,R,N,V_additionalDebugFlags
isProviderInitiated
asyncUnregisterLifetimeExtensionForObject:
contentsOfDirectoryAtPath:error:
initWithIdentifier:displayName:pathRelativeToDocumentStorage:
currentPersona
generateAndRestorePersonaContextWithPersonaUniqueString:
userPersonaUniqueString
pathComponents
stringByDeletingLastPathComponent
personaCloudStoragePath
appSupportPath
fp_bouncedNameWithIndex:isDir:
homeDirectory
lastPathComponent
changes
setLastError:
allObjects
addObject:
initWithBase64EncodedString:options:
initWithBytesNoCopy:length:freeWhenDone:
base64EncodedStringWithOptions:
openAtURL:withFlags:error:
setupPragmas
useBatchingWithDelay:changeCount:
setUserVersion:
unsignedIntAtIndex:
stringByAppendingPathComponent:
bindStringParameter:
serialQueue
bindBooleanParameter:
assertOnQueue
lastInsertedRowID
proxifiedDescription
operationDidProgressWithInfo:error:completionHandler:
progressWithTotalUnitCount:
setCompletedUnitCount:
initWithName:bundleIdentifier:
coreSpotlightIdentifier
deleteSearchableItemsWithIdentifiers:completionHandler:
inheritedUserInfo
parentItemID
fileProviderErrorForNonExistentItemWithIdentifier:
shortDescription
timeout
timeoutState
setTimeoutState:
requestEffectivePID
prettyDescription
sanitizeErrors
initWithConnection:protocol:orError:name:requestPid:requestWillBegin:
initWithConnection:protocol:orError:name:requestPid:requestWillBegin:requestDidBegin:
initWithConnection:protocol:orError:name:requestPid:
enumerationResultsDidChange
didUpdateItem:
provider
defaultStore
softConcurrentOperationLimit
hardConcurrentOperationLimit
uploadPipelineDepth
integerValue
descriptor
downloadPipelineDepth
upcallExcutionTimeLimitProgressCancellationGracePeriod
session
terminateWithReason:
registerLifetimeExtensionForObject:
userEnabled
initWithProviderID:domainIdentifier:itemIdentifier:
setEnumeratedItemID:
setDomainVersion:
fetchAndStartEnumeratingWithSettings:observer:request:completionHandler:
nsfpRequestForSession:
hasUpcallExecutionTimeLimits
newFileProviderProxyWithTimeout:pid:
upcallExecutionTimeLimitBase
unregisterLifetimeExtensionForObject:
requestForSelf
enumerateChangesFromToken:suggestedBatchSize:reply:
enumerateItemsFromPage:suggestedPageSize:reply:
currentSyncAnchorWithCompletion:
isFlattenedPackage
domainVersion
stringByDeletingPathExtension
setFilename:
setContentType:
setExtendedAttributes:
upcallExecutionTimeLimitPerKiloByte
indexer
clearNeedsAuth
setNeedsAuth
importDidFinishWithCompletionHandler:
deleteItemWithID:baseVersion:options:request:completionHandler:
fp_userInfoFPItem
providerDomainID
setItemVersion:
fp_uniqueTempFolderWithError:
archiveItemsWithURLs:compressionFormat:destinationFolderURL:completionHandler:
initWithURL:packageURL:error:
createItemBasedOnTemplate:fields:contents:options:request:bounce:completionHandler:
modifyItem:baseVersion:changedFields:contents:options:request:completionHandler:
isPackage
pathExtension
fetchContentsForItemWithID:version:usingExistingContentsAtURL:existingVersion:request:completionHandler:
isCancelled
moveItemAtURL:toURL:error:
unarchiveItemAtURL:passphrases:destinationFolderURL:acceptedFormats:completionHandler:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
requestedExtent
valueWithRange:
fetchContentsForItemWithID:version:request:extent:options:shouldForwardVersion:completionHandler:
setProvidedExtent:
providedExtent
rangeValue
itemID
itemForItemID:request:completionHandler:
rootItemIDWithProviderIdentifier:domainIdentifier:
appliesChangesAtomically
pluginUUID
bundleVersion
initWithProviderDomainID:itemIdentifier:
initWithVersion:filename:url:modificationDate:lastEditorNameComponents:
extensionPid
sequenceNumber
callDescription
domainUserInfo
setDomainUserInfo:forDomainIdentifier:completionHandler:
server
signalProviderChangesWithLowPriority
fp_prettyDescription
defaultBackend
providerVersion
sessionForDomainID:providerVersion:
isConnectedToAppExtension
asAppExtensionBackedProvider
wantsFlattenedPackages
keepAliveConnectionForRegisteredObserver:
enumeratorBecameFrontmost:inWindow:completionHandler:
remoteObjectProxy
remoteObjectProxyWithErrorHandler:
synchronousRemoteObjectProxyWithErrorHandler:
beginRequestWithDomain:alternateContentsDictionary:domainServicer:providerDomain:domainVersion:completionHandler:
evictItemAtURL:completionHandler:
itemChangedAtURL:completionHandler:
identifierForItemAtURL:completionHandler:
itemForURL:completionHandler:
trashItemAtURL:completionHandler:
bulkEvictItemsWithItemIDs:completionHandler:
fetchServicesForItemID:allowRestrictedSources:completionHandler:
fetchVendorEndpoint:
fetchOperationServiceEndpoint:
dropDomainWithCompletionHandler:
fetchCustomPushTopicsWithCompletionHandler:
wakeForPushWithCompletionHandler:
valuesForAttributes:forItemID:completionHandler:
didChangeItemID:completionHandler:
URLForItemID:creatingPlaceholderIfMissing:ignoreAlternateContentsURL:completionHandler:
setAlternateContentsURL:forDocumentWithItemID:completionHandler:
didUpdateAlternateContentsDocumentForDocumentWithItemID:completionHandler:
deleteSearchableItemsWithSpotlightDomainIdentifiers:domainIdentifier:completionHandler:
removeTrashedItemsOlderThanDate:domainIdentifier:completionHandler:
dumpInternalStateToTermDumper:domainIdentifier:completionHandler:
indexOneBatchInDomain:completionHandler:
dropIndexForDomain:completionHandler:
dumpIndexStateForDomain:toFileHandler:completionHandler:
signalEnumeratorForMaterializedItemsWithCompletionHandler:
signalEnumeratorForPendingItemsWithCompletionHandler:
_test_callFileProviderManagerAPIs:
startOperation:toFetchThumbnailsForItemIdentifiers:size:completionHandler:
preflightReparentItemIDs:underParentID:reply:
deleteItemsWithIDs:baseVersions:options:reply:
singleItemChange:changedFields:bounce:completionHandler:
bulkItemChanges:changedFields:completionHandler:
fetchHierarchyForItemID:recursively:reply:
fetchDefaultContainerForBundleIdentifier:defaultName:inDomainIdentifier:reply:
fetchItemID:reply:
preflightTrashItemIDs:completionHandler:
fetchPublishingURLForItemID:completionHandler:
disconnectDomainID:options:completionHandler:
performActionWithIdentifier:onItemsWithIdentifiers:domainIdentifier:completionHandler:
wakeForSessionIdentifier:completionHandler:
userCheckedSuppressionCheckboxForUserInteractionIdentifier:domainIdentifier:completionHandler:
userInteractionErrorsForPerformingAction:sourceItems:destinationItem:fpProviderDomainId:sourceItemKeysAllowList:destinationItemKeysAllowList:completionHandler:
updateIgnoreStateOfItemWithIdentifiers:ignoreState:completionHandler:
_removeSubscriber:
doubleForKey:
initWithLongLong:
fractionCompleted
initWithDouble:
executablePath
integerForKey:
_addSubscriberForFileURL:withPublishingHandler:
fp_isOfFileOperationKind:
doubleAtIndex:
longLongAtIndex:
unsignedLongLongAtIndex:
intAtIndex:
shortAtIndex:
unsignedShortAtIndex:
charAtIndex:
unsignedCharAtIndex:
compare:
userPackageExtensions
nsDomain
manager
fp_obfuscatedProviderDomainID
fileExistsAtPath:
extensionBackend
enter
setResultURL:
itemForURL:request:completionHandler:
discreteProgressWithTotalUnitCount:
setCancellable:
setCancellationHandler:
searchQuery
enumeratedItemID
signalErrorResolved:completionHandler:
backingStoreIdentity
setBackingStoreIdentity:
rootURLs
temporaryDirectoryURLWithCompletionHandler:
errorGenerationCount
uploadsArePaused
updateRootAfterDomainChangeWithError:
copyDatabaseToURL:completionHandler:
start
needsRootsCreation
createRootByImportingURL:error:
cleanupDomainWithMode:error:
isProviderForURL:
dumpStateTo:limitNumberOfItems:
waitForChangesOnItemsBelowItemWithIdentifier:request:completionHandler:
waitForStabilizationForRequest:completionHandler:
itemIDForURL:request:completionHandler:
startProvidingItemAtURL:readerID:readingOptions:request:completionHandler:
downloadItemWithItemID:request:progress:completionHandler:
evictItemAtURL:request:completionHandler:
evictItemWithID:request:completionHandler:
materializeItemWithID:requestedRange:request:completionHandler:
itemChangedAtURL:request:
URLForItemID:creatingPlaceholderIfMissing:ignoreAlternateContentsURL:isForTheProvider:request:completionHandler:
fakeFSEventAtURL:
enumerateMaterializedSetFromSyncAnchor:suggestedBatchSize:completionHandler:
currentMaterializedSetSyncAnchorWithCompletionHandler:
enumeratePendingSetFromSyncAnchor:suggestedBatchSize:completionHandler:
currentPendingSetSyncAnchorWithCompletionHandler:
stateWithCompletionHandler:
didChangeItemID:
workingSetDidChangeWithCompletionHandler:
enumerateWithSettings:lifetimeExtender:observer:completionHandler:
fetchFSItemsForItemIdentifiers:materializingIfNeeded:request:completionHandler:
decorateItems:completionHandler:
nonEvictableSpace
telemetryReport
reimportItemsBelowItemWithID:removeCachedItems:markItemDataless:completionHandler:
createIndexerWithExtension:enabled:error:
valuesForAttributes:forURL:request:completionHandler:
materializedURLForItemID:
isItemDataless:
createItemBasedOnTemplate:fields:urlWrapper:options:bounceOnCollision:request:completionHandler:
forceIngestionForItemID:completionHandler:
forceFSIngestionForItemID:completionHandler:
forceIngestionAtURL:
pinItemWithID:request:completionHandler:
unpinItemWithID:request:completionHandler:
ingestFromCacheItemWithID:requestedFields:request:completionHandler:
bulkItemChanges:changedFields:request:completionHandler:
trashItemAtURL:request:completionHandler:
resolveConflictAtURL:completionHandler:
fetchOperationServiceOrEndpointWithRequest:completionHandler:
fetchServicesForItemID:allowRestrictedSources:request:completionHandler:
fetchVendorEndpointWithRequest:completionHandler:
didChangeNeedsAuthentification:
listAvailableTestingOperationsWithRequest:completionHandler:
runTestingOperations:request:completionHandler:
subscribeToUploadProgressUpdates:completionHandler:
subscribeToDownloadProgressUpdates:completionHandler:
getCountersArrayWithCompletionHandler:
resetCountersWithCompletionHandler:
hasNonUploadedFilesWithCompletionHandler:
registerXPCActivities
fp_libnotifyPerUserNotificationName
synchronousRemoteObjectProxy
needsAuthentication
signalProviderChanges
personaIdentifier
requestedExtendedAttributes
purposeIdentifier
testingModes
sessionForProvider:version:
fetchSwift:error:
next
stringAtIndex:
isNullAtIndex:
longAtIndex:
signalChangesWithCompletionHandler:
domain
code
initFileURLWithPath:
URLByAppendingPathComponent:
moveItemAtPath:toPath:error:
postReportWithCategory:type:payload:error:
forceRunningWithReason:
initWithOperationIdentifier:itemIdentifier:
initWithOperationIdentifier:itemIdentifier:item:
initWithOperationIdentifier:renamedItem:snapshotVersion:
initWithOperationIdentifier:sourceItemIdentifier:targetItemIdentifier:targetItemBaseVersion:domainVersion:
initWithOperationIdentifier:sourceItem:targetItemIdentifier:targetItemBaseVersion:changedFields:domainVersion:rawFields:snapshotVersion:
initWithOperationIdentifier:sourceItem:domainVersion:snapshotVersion:
strippedCopy
setTrashed:
setParentItemIdentifier:
totalUnitCount
setTotalUnitCount:
addChild:withPendingUnitCount:
fp_maximumBounceLevel
setDateStyle:
setTimeStyle:
stringFromDate:
setFp_displayName:
initWithExtension:domain:enabled:
reloadDomain:unableToStartup:completionHandler:
leave
initWithUnsignedInteger:
initWithInteger:
integerAtIndex:
boolAtIndex:
unsignedLongAtIndex:
initWithProviderDomainID:itemIdentifier:parentItemIdentifier:filename:isDirectory:
requestForPID:
initWithProviderDomainID:itemIdentifier:parentItemIdentifier:filename:contentType:
executeSwift:error:
wrapperWithURL:readonly:error:
setRequestedExtent:
allowsResurrection
initWithDomain:callbackQueue:
isFromPOSIX
downloadURL:recursively:request:withCompletion:
localizedName
itemAtURL:willMoveToURL:
fp_bouncedNameWithIndex:
itemAtURL:didMoveToURL:
removeKey:
initWithLabel:criteria:
fp_createPathIfNeeded:
addKey:executor:
markDoneForKey:
shouldPause
ping
backupToURL:progress:
lastError
fp_isFileProviderInternalError:
errorGenerationUpdateSeconds
willIndexOneBatch
didIndexOneBatchWithError:updatedItems:deletedIDs:anchor:domainVersion:anchorPersisted:
didFinishIndexing
reportProgressUpdate:totalUnitCount:completedFileCount:totalFileCount:
domainVersionWithVersion:
version
bindUnsignedLongParameter:
bindIntegerParameter:
bindUnsignedShortParameter:
bindShortParameter:
bindUnsignedCharParameter:
bindCharParameter:
bindDoubleParameter:
unarchivedObjectOfClass:atIndex:
archivedDataWithRootObject:requiringSecureCoding:error:
UTF8String
queue
stringWithFileSystemRepresentation:length:
tags
collaborationIdentifier
lastEditorDeviceName
isContainer
isContainerPristine
fp_appContainerBundleIdentifier
cloudContainerIdentifier
fp_displayName
initWithUserInfo:
keys
values
unsupportedFields
setFormerIdentifier:
setUbiquitous:
setCollaborationIdentifier:
initWithUnsignedInt:
setConflictingVersions:
setContentModificationDate:
setCreationDate:
setFavoriteRank:
setTags:
setLastUsedDate:
setTypeAndCreator:
setFileSystemFilename:
stringFromPersonNameComponents:
dumpDatabaseAt:fullDump:writeTo:error:
numberOfFilesChecked
setNumberOfFilesChecked:
numberOfBrokenFilesInFSAndFSSnapshotCheck
setNumberOfBrokenFilesInFSAndFSSnapshotCheck:
numberOfBrokenFilesInFSSnapshotAndFPSnapshotCheck
setNumberOfBrokenFilesInFSSnapshotAndFPSnapshotCheck:
setTelemetryReport:
initWithDatabasesBackupsPaths:providerDomainID:usingFPFS:isCiconia:
launchFromURL:options:error:resultHandler:
enumerateItemsOnDiskFromPath:providerDomainID:usingFPFS:saveBrokenInvariantsAndCompareEachItemWithFSSnapshot:
setUsesSignificantDigits:
setMaximumSignificantDigits:
stringFromNumber:
numberFromString:
softConcurrentContentUpdateLimit
hardConcurrentContentUpdateLimit
softConcurrentProvideFileLimit
hardConcurrentProvideFileLimit
fileDescriptor
initWithFd:forceColor:
userVersion
unsignedIntValue
dataAtIndex:
flushMessagesSynchronouslyWithError:
setPostFlushHook:
close:
setTraced:
setLabel:
setShouldUseWALJournalMode:
useBatchingOnTargetQueue:delay:changeCount:
setProfilingHook:
synchronousMode
setSynchronousMode:
columns
runIfPossible:
selectedForMaterialization
date
groupInBatch:
registerFunction:nArgs:handler:
weakObjectsHashTable
autovacuumableSpaceInBytes
forceBatchStart
incrementalVacuum:
writeData:
beforeFirstSyncComponent
isFPFS
fp_isiCloudDriveOrCloudDocsIdentifier
mergeWithUserInfo:intoParentUserInfo:
fp_stringByDeletingPathBounceNo:andPathExtension:
unsignedIntegerValue
name
removeAdditions:completionHandler:
enumeratorForAdditionsInNameSpace:withOptions:withoutOptions:ordering:
nextObject
modificationDate
prepareAdditionCreationWithItemAtURL:byMoving:creationInfo:error:
createAdditionStagedAtURL:creationInfo:completionHandler:
initWithLabel:color:
color
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
sourceItemIdentifier
snapshotVersion
rawFields
sourceItem
renamedItem
setDateFormat:
providerID
domainIdentifier
addLRUSignature:
swift_bookmarkForItemID:consumerIdentifier:installSessionIdentifier:
swift_verifyBookmark:consumerIdentifier:installSessionIdentifier:
swift_parseUnverifiedBookmark:
lookupLRUSignature:
keyForBundleIdentifier:generateIfNotFound:keyGenBlock:
initWithLabel:criteriaBuilder:
UUIDString
unpublish
fp_setFileOperationKind:
publish
setPausable:
setPausingHandler:
setResumingHandler:
pause
isFinished
fileProviderErrorForRejectedDeletionOfItem:
learnNeedsAuthenticationFromBatchError
indexOneBatchWithCompletionHandler:
dumpStateTo:
spotlightIndexerDidReindexAllSearchableItems:
indexOneBatchFromAnchor:toAnchor:updatedItems:deletedItems:completionHandler:
providerDomainForDomain:
nsDomainOrNilForDefault
initWithDomain:providerDomain:log:
setDomain:
setProviderDomain:
fetchCurrentIndexingAnchorWithCompletionHandler:
setFileID:
setFileSystemFlags:
setInheritedUserInfo:
setQuarantineBlob:
setCapabilities:
setFp_pinned:
setFp_inPinnedFolder:
isFolder
setDownloaded:
setRecursivelyDownloaded:
setMostRecentVersionDownloaded:
setSupportsMostRecentVersionDownloaded:
setChildItemCount:
isIgnoreRoot
setExcludedFromSync:
setDownloading:
setUploaded:
setUploading:
setFp_lastModifiedByCurrentUser:
setAllowsContextualMenuDownloadEntry:
setExclusionType:
setDocumentID:
allowsContextualMenuDownloadEntry
fp_isInPinnedFolder
fp_isPinned
allowsUserControlledEviction
setIgnoreRoot:
setDocumentSize:
setUploadingError:
setDownloadingError:
setShared:
setTopLevelSharedItem:
setSharedByCurrentUser:
setSharingPermissions:
setIsContainer:
setIsContainerPristine:
setFp_appContainerBundleIdentifier:
setCloudContainerIdentifier:
setContainerDisplayName:
setHasUnresolvedConflicts:
setDecorations:
setUserInfo:
setContentPolicy:
initWithKeys:values:
personNameComponentsFromString:
setMostRecentEditorNameComponents:
setOwnerNameComponents:
setTypeIdentifier:
formerItemID
fp_isSyncAnchorExpiredError
fileURLWithPath:
fp_relativePathWithRealpath:
dateAtIndex:
setSelectedForMaterialization:
makeNextFlushFullSync
flush
performWithFlags:action:
bindLongParameter:
bindUnsignedIntegerParameter:
bindObjectParameter:
subscriptionWillHandleBatchOfEvents:
subscriptionDidHandleBatchOfEvents:
subscription:handleEventAtPath:targetItemID:eventID:flags:
subscriptionHandleDroppedEvent:
subscription:handleResetWithReason:
subscriptionHandleTermination:
writingIntentWithURL:options:
coordinateAccessWithIntents:queue:byAccessor:
fileSystemRepresentation
__itemAtURL:didResolveConflictVersionWithClientID:name:purposeID:
waitUntilAllOperationsAreFinished
readingIntentWithURL:options:
fp_realpathURL
setUnderlyingQueue:
setMaxConcurrentOperationCount:
fp_coordinatorReadingOptions:
NSFileProviderValidationServiceV1
FileProviderValidationServiceSource
NSXPCListenerDelegate
NSObject
NSFileProviderServiceSource
FPPublicLog
FPLoggerScope
FSCheckerDomainInfo
FSChecker
FSChangeSubscription
fp_task_tracker
FSPathAdditions
FPCKTask
FSVolume
FPFSAdditions
FPFSSQLBackupManager
FPFSSQLRestoreManager
SwiftWorkaround
FSChangeMonitor
FSChangeRecord
v24@0:8@?16
v24@0:8@?<v@?B@"NSDictionary">16
v24@0:8@?<v@?@"NSError">16
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@24@0:8^@16
@"NSXPCListenerEndpoint"24@0:8^@16
@32@0:8@16@24
v16@0:8
@"NSFileProviderExtension"
@"NSString"
@"NSOperationQueue"
@"NSHashTable"
@36@0:8@16B24@28
@"NSArray"
v44@0:8@16@24B32@?36
v32@0:8@16@?24
@72@0:8@16i24@28Q36@44B52@56@64
B24@0:8^@16
@20@0:8B16
v24@0:8Q16
i16@0:8
v24@0:8@16
v20@0:8B16
@"NSObject<OS_dispatch_group>"
@"NSUUID"
@"FSChangeMonitor"
@"<FSChangeSubscriptionDelegate>"
B20@0:8B16
v64@0:8@16@24@32Q40B48B52@?56
v44@0:8@16B24@28@?36
@20@0:8i16
B32@0:8@16^@24
{statfs="f_bsize"I"f_iosize"i"f_blocks"Q"f_bfree"Q"f_bavail"Q"f_files"Q"f_ffree"Q"f_fsid"{fsid="val"[2i]}"f_owner"I"f_type"I"f_flags"I"f_fssubtype"I"f_fstypename"[16c]"f_mntonname"[1024c]"f_mntfromname"[1024c]"f_flags_ext"I"f_reserved"[7I]}
@32@0:8Q16@24
@36@0:8i16Q20Q28
@"_TtC9libfssync19FPFSSQLBackupEngine"
@24@0:8@16
@"_TtC9libfssync20FPFSSQLRestoreEngine"
@64@0:8@16i24Q28@36B44@48@56
v32@0:8Q16@?24
d16@0:8
^{fpfs_fsevent_stream=}40@0:8@16Q24@32
B32@0:8q16^@24
B28@0:8@16B24
v28@0:8@16B24
B32@0:8@16I24I28
v32@0:8q16Q24
^{fpfs_fsevent_stream=}
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_dispatch_source>"
@"NSMutableArray"
@"FSVolume"
@"NSObject<OS_os_log>"
@"NSURL"
I16@0:8
@44@0:8@16Q24I32Q36
I20@0:8B16
So8NSStringC
$sSY
$ss21_ObjectiveCBridgeableP
$ss25ExpressibleByArrayLiteralP
$ss9OptionSetP
So7NSErrorC
_AAt
So6NSDataC
$s10Foundation18_ErrorCodeProtocolP
$s10Foundation21_BridgedStoredNSErrorP
SvSg
ySSG
ySSG
AAIgyd_
So13FPAppMetadataCSbIggd_
So8NSObjectC
So28NSFileProviderChangeObserver_p
SgXw
So17OS_dispatch_queueC
Sb8inserted_
17memberAfterInsertt
So18NSFileProviderItem_p
Gz_Xx
_pIeggdzo_
3url_
Sg4itemt
So13FPAppMetadataCSg
So24OS_dispatch_source_timer_pSg
ySSypG
SS_ypt
$s24LocalStorageFileProvider21FSEventReaderDelegateP
_pSgXw
So21OS_dispatch_semaphoreC
yXlG
yXlG
_yXlt
_ypt
_ypt
So23NSFileProviderExtensionC
SgXw
_pSgcSg
So7NSErrorCSgIeyBy_
So18NSFileProviderItem_pSg
So7NSErrorCSgIeyByyyy_
So25NSFileProviderItemVersionC
So18NSFileProviderItem_pSg
_pSgIeggyyg_
_pSg
z_Xx
z_Xx
_pSgz_Xx
Iegn_
Ign_
AAIgnn_
3url_
Sg4itemtSg
So18NSFileProviderItem_pSg
_pSgIeggg_
_yptG
So18NSFileProviderItem_pSg
_pSgIeggng_
SgSg
SnySiG
ySnySiGG
Siz_Xx
_pSgIgg_
So27NSFileProviderServiceSource_p
_pSgIegg_
So18NSFileProviderItem_pSgSo7NSErrorCSgIeyByy_
So5NSURLCSgSo7NSErrorCSgIeyByy_
_pSgIegng_
_pSgIgng_
So5NSURLCSgSo18NSFileProviderItem_pSgSo7NSErrorCSgIeyByyy_
So8NSNumberCSg
SSSg
SDySS
SaySo25NSFileProviderItemVersionCGSg
SgSg
Igyd_
_yptG
_A13At
So13FPAppRegistryC
SDySSSo13FPAppMetadataCG
SaySo13FPAppMetadataCG
ySSSo13FPAppMetadataC_G
ySo13FPAppMetadataCG
yyXlG
ySSSo13FPAppMetadataCG
ySo25NSFileProviderItemVersionCG
ySo18NSFileProviderItem_pG
Sg_ABt
ySo27NSFileProviderServiceSource_pG
SgIeyBy_
_A2At
So6FPItemCG_So10NSProgressC
yyctt
So6FPItemCG_So10NSProgressC
_pSgctG
So10NSProgressCSgXw
yxq_GSgXwz_x_q_
RzADR_r0_lXX
So10NSProgressCSgXwz_Xx
yxq_G
yxq_G
G0R1_
G1R0_
_pKc_ABtG
ySSyXlXpG
So6FPItemCGG
ySo6FPItemC_GG
So6FPItemCG_Sayy
_pSgcGt
So6FPItemCGSayy
_pSgcGG
So6FPItemCGG
2at_t
So6FPItemCG_
_pSgctGG
So6FPItemCG_
_pSgctGG
ySo6FPItemC
_pSgctGG
So6FPItemC_Gt
So6FPItemC_GG
So6FPItemCGG
ySSSay
ySo6FPItemCGG5rules_AF9blockedBytG
ySo6FPItemCG
ySSSay
GG5rules_AE9blockedBytG
yS2SG
So6FPItemCGG
So6FPItemCG_Si5rowIDtG
ySo6FPItemCGSgt
ySo6FPItemCGSgG
GSgt
GSgG
qd__
G1R3_
_pGSg
_pGSgz_Xx
G0R4_
G1R4_
G0R2_
G1R2_
_pGIegn_
y2ID
QzAbCQy_G
G0R5_
G1R5_
yxq_GSg
_pGIegn_
yxq__G
yq_xG
Qy_Sg
y2ID
QzAcDQy_G
_pGIegg_
ypGSgG
So6FPItemCGSg
So6FPItemCGSg
_pGIegn_
So6FPItemC_G
So6FPItemCG
So6FPItemCGSg
So6FPItemC_G
So6FPItemCG_
_pSgctG
_pGIegg_
_pGIegn_
ySo6FPItemC
ySo6FPItemC
_pSgctG
So6FPItemCG
ShySo17NSFileCoordinatorCGG
ySo17NSFileCoordinatorCG
So6FPItemCGG
ySo6FPItemC
So6FPItemCGG
So6FPItemCG_
So6FPItemCG
ySo18FPTestingOperationC
So6FPItemCG_So18FPTestingOperationCt
So6FPItemCGSo18FPTestingOperationCG
_ypt
So6FPItemC_G
So6FPItemC_G
So18OS_dispatch_sourceCG
_AAt
_A1023At
yxq_GSgXw
Qy_Iegr_
SSIego_
QzIegr_
2fs_AA2fpt
yxq__G
yycSg
G_Sb16isEnumeratedItemtSg
G_Sbt
GSg_ADSbt
G_Sb16isEnumeratedItemt
SaySo6FPItemCG
SgSo19FPExtensionResponseCSg
_pSgIegggggg_
ySaySo6FPItemCG_
_pGIegg_
ySaySo6FPItemCG_
_pGIegn_
ySaySo6FPItemCG_SaySo0A2IDCGSb
_pGIegn_
3key_
G5valuet
3key_
G5valuetSg
GtSg
G__G
ySaySo6FPItemCG_SaySo0A2IDCGSb
So7NSArrayC
SgSo19FPExtensionResponseCSgSo7NSErrorCSgIeyByyyyy_
SgSo7NSErrorCSgIeyByy_
_pSgIeggg_
_pSgIegng_
_GSo17OS_dispatch_queueCG
y14ContentVersion
Qz010StructuralB0ACQzG_Sb13contentInSyncSb08metadataeF0t
Sg_Sb27applyInconsistentTransitiont
Sg4from_AB2to
5ordert
y2ID
QzAbCQy_G_
Qz_AaBQy_
y2ID
QzAbCQy_G
y2ID
QzAbCQy_G_
y2ID
QzAbCQy_G_AFt
y2ID
QzAbCQy_G_
yq_Gt
y2ID
QzAbCQy_G_
yxGt
y2ID
QzAbCQy_G_
y2ID
QzAbCQy_G_
$ss26ExpressibleByStringLiteralP
$ss43ExpressibleByExtendedGraphemeClusterLiteralP
$ss33ExpressibleByUnicodeScalarLiteralP
SSyc
SDySS
So19FPDExtensionManagerCSg
_pIgyrzo_
SgSg
_pIgyrzo_
_pIgyrzo_
_pIgyrzo_
_pIgyrzo_
SgSg
_pIgyrzo_
SgSg
_pIgyrzo_
ytSgSg
ytSg
_pIgyrzo_
_pIgyrzo_
_pIgyrzo_
SgSg
_pIgyrzo_
yxq__G
yxq__GG
$s9libfssync14SQLMultiColumnP
yxq_G
y2ID
QzAbCQy_G
yxq_GSgXw
yxq_GSgXwz_x_q_
RzADR_r0_lXX
$ss12CaseIterableP
Qz_AaBQy_t
y2ID
QzAbCQy_G_AF8inParentt
yxGSg4from_AC2to
5diffst
yq_GSg4from_AC2to
5diffst
yq_G
y2ID
QzAbCQy_G_AFSg
y2ID
QzAbCQy_G_
Sg4fromAH2tot
y2ID
QzAbCQy_G_
_p5errort
y2ID
QzAbCQy_G_
2ont
y2ID
QzAbCQy_G_
y2ID
QzAcDQy_Gt
_Sb8longWaitt
y2ID
QzAbCQy_G5below_t
y2ID
QzAbCQy_G_Sb9isIgnoredt
y2ID
QzAbCQy_G_AF2int
y2ID
QzAbCQy_G_
Sg4namet
QzSg
7jobType_2ID
Qz04itemC0t
7jobType_2ID
Qy_04itemC0t
yxGG
SDySSSay
yxGG5rules_AC9blockedBytG
So11NSHashTableCy
yxGG
Qz2in_t
Qz_AC4fromAC2tot
Qz_ACSg2int
SgtG
yxq_G
$s9libfssync10FileItemIDP
yxq_G
So15PQLQueryBuilderC
yxq_G
yxq_G
So13FPCancellable_p
So17FPOperationClient_p
ypGSg
Sg_So27NSFileProviderDomainVersionCSgt
_pGIegn_
Sg_So27NSFileProviderDomainVersionCSgt
SaySo6FPItemCGSg
ShySSGSg
_pGIegg_
So6FPItemCSgIegg_
_pGSgIegg_
So12NSDictionaryCSgACSo7NSErrorCSgIeyByyy_
So6FPItemCGSgSDyAA
_pGSgAF_pSgIegggg_
So6FPItemCGSgSDyAA
_pGSgAF_pSgIegnng_
ySo6FPItemC
_pGIegg_
ySo6FPItemC
_pGIegn_
So6FPItemCq0_q1_GSgXwz_AB_AD
AdBRszADRs_
yABGRb0_
R0_AIyADGRb1_
R1_AB13URLBackedItem
Rt0_r2__lXX
So7NSErrorCIeyBy_
So7NSArrayCSgIeyBy_
SaySo6FPItemCGSg
_pSgIeggg_
SaySo6FPItemCGSg
_pSgIegng_
So6FPItemCq0_q1_GSgXwz_AB_AD
SayADGSgABRszADRs_
yABGRb0_
R0_AKyADGRb1_
R1_AB13URLBackedItem
Rt0_r2__lXX
So6FPItemC_G
ySo6FPItemC
SaySo7NSErrorCG
SaySo7NSErrorCGz_Xx
So13FPXEnumerator_pSg
yq_xG
yxq_GSg
So10FPDRequestC
So24FPXPCAutomaticErrorProxyC
ySo6FPItemCG
So9FPDDomainCXo
So10NSProgressCG
SgACtSg
So22FPDRTCReportingSessionCSgSg
_SiSSSgtSg
SgXw
ySo6FPItemC_G
_pGSay
GIeggg_
So27NSFileProviderDomainVersionCSg
ySo6FPItemC_G
_pGIegn_
So24FPXPCAutomaticErrorProxy_So9FPXVendorp
So13FPXEnumerator_p
Ieg_Iegggg_
So13FPXEnumerator_p
Ieg_
So19FPExtensionResponseCSg
SaySo6FPItemCG
SaySo8FPItemIDCG
ySo6FPItemC_GG
So8NSObjectCSg
_pIegg_
ySo6FPItemCSg_So27NSFileProviderDomainVersionCSgt
_pGIegn_
ySo6FPItemCSg_So27NSFileProviderDomainVersionCSgt
_pGIegg_
So9OS_os_logCSg
_pGIegg_
_pGIegn_
ySo6FPItemCG
ACGtSg
ySo6FPItemCGSg_So27NSFileProviderDomainVersionCSgt
_pGIegn_
So6FPItemCSg
SbSo27NSFileProviderDomainVersionCSg
_pSgIeggyygg_
So6FPItemC
So6FPItemCz_Xx
ySo22FPSandboxingURLWrapperCSg
_pGIeg_Ieggg_
ySo22FPSandboxingURLWrapperC
_pGIeg_Ieggg_
ySo22FPSandboxingURLWrapperC
_pGIegn_
GSbIgyd_
Ieg_z_Xx
So6FPItemCSg
ySo6FPItemCGSg_So27NSFileProviderDomainVersionCSgt
z_Xx
_So6FPItemCtSg
_pGIegn_
7content_
ADG7versiont
So10FPDRequestCSg
_So6FPItemCtSg
_pGIegg_
So10NSProgressCSg
So10NSProgressCSgz_Xx
_So6FPItemCtSg
_pGIegg_z_Xx
Ieg_Sg
So19FPExtensionResponseC
So22FPSandboxingURLWrapperCSg
Igyd_
_So6FPItemCtSg
_pGIegn_
So13NSFileManagerC
_pGIegn_
ABGSg
So7NSValueCSg
SaySo15FPConflictLoserCG
SaySo15FPConflictLoserCGz_Xx
ySaySo15FPConflictLoserCG
_pGIegg_
_pGIegg_
SaySo6FPItemCG
Ieggd_
_pGIegn_
ySo6FPItemCSg
_pGIegn_
ySo6FPItemCSg
_pGIegg_
ySo15FPConflictLoserC
_pGIegg_
So11FPDProviderC
SDySS
So24OS_dispatch_source_timer_p
So22FPDRTCReportingSessionCSg
3key_
5valuetSg
3key_
5valuet
3key_
5valuet
SS3key_
5valuet
SgXw
SgXw
SgXwz_Xx
SgXwz_Xx
y_So10NSProgressC
y_So10NSProgressC
GSo17OS_dispatch_queueCG
y_So10NSProgressC
GSo17OS_dispatch_queueCG
y_So10NSProgressCSdG
y_So10NSProgressCSdGSo17OS_dispatch_queueCG
y_So10NSProgressCSdGSo17OS_dispatch_queueCG
14expirationDate_t
14lastChangeDate_t
y5ItemA
Qz0A1BACQzG
xSgXw
$s9libfssync8FileItemP
_pIgyrzo_
_pIgyrzo_
GGSg
So6FPItemC_G
ySo6FPItemC
ABGG
SaySSGSg
ABGGSg
_pIgyrzo_
So6FPItemCG
So6FPItemCG
So8FPItemIDCSg
_pSgIeggg_
So8FPItemIDCSgSo7NSErrorCSgIeyByy_
So6FPItemCSgSo7NSErrorCSgIeyByy_
SgXw
SgXwz_Xx
So10NSProgressC
So8FPItemIDC
SbIegy_
IeyBy_
So8FPItemIDCSg
_pSgIegng_
_pSgSo22FPSandboxingURLWrapperCSgAEIegggg_
_pSgSo22FPSandboxingURLWrapperCSgAEIeggnn_
SaySo6FPItemCGSaySo0A2IDCGSb
SgSo19FPExtensionResponseCSg
_pSgIegggyggg_
So7NSArrayCAB
SgSo19FPExtensionResponseCSgSo7NSErrorCSgIeyByyyyyy_
SgIegg_
_pSgIegyg_
So7NSErrorCSgIeyByy_
So13FPXEnumerator_pSg
_pSgIeggg_
So30FPExtensionEnumerationSettingsC
So19FPDLifetimeExtender_p
So21FPXEnumeratorObserver_p
So13FPXEnumerator_pSg
_pSgIegng_
So6FPItemCG
_pSgIeggg_
So12NSDictionaryCSo7NSErrorCSgIeyByy_
SaySo6FPItemCGIegg_
So7NSArrayCIeyBy_
ypGSg
_pSgIeggg_
So12NSDictionaryCSgSo7NSErrorCSgIeyByy_
Sgz_Xx
SgIegn_
Sbz_Xx
_pSgIegyg_
So6FPItemCSg
_pSgIeggg_
So6FPItemCSg
_pSgIegng_
So6FPItemCG
G2of_So10FPDRequestC2byt
_pGz_Xx
So6FPItemCGz_Xx
So6FPItemCG
Iegg_
So6FPItemCGSgSDyAA
_pGSgIeggg_
So12NSDictionaryCSgACIeyByy_
So21NSXPCListenerEndpointCSgSaySo20FPXServiceDescriptorCGSg
_pSgIegggg_
ySo8FPItemIDC
_pGIegg_
ySo8FPItemIDC
_pGIegn_
So21NSXPCListenerEndpointCSgSo7NSArrayCSgSo7NSErrorCSgIeyByyy_
So21NSXPCListenerEndpointCSg
_pSgIeggg_
So21NSXPCListenerEndpointCSg
_pSgIegng_
So21NSXPCListenerEndpointCSgSo7NSErrorCSgIeyByy_
SaySo18FPTestingOperationCGSg
_pSgIeggg_
SaySo18FPTestingOperationCGSg
_pSgIegng_
So7NSArrayCSgSo7NSErrorCSgIeyByy_
SDySo18FPTestingOperationC
_pGSgAC_pSgIeggg_
SaySo18FPTestingOperationCG
SDySo18FPTestingOperationC
_pGSgAC_pSgIegng_
So18FPProgressProtocol_p
SayypGSg
_pSgIeggg_
SayypGSg
_pSgIegng_
So7NSErrorCSgIeyByy_
$s9libfssync18ObservedEnumeratorP
So9FPDDomainCSgXw
So20NSFileProviderDomainC
So26OS_dispatch_source_data_or_pSg
SDySO
SbSg
_pSgXw
So6FPItemCG
ySo6FPItemC
So6FPItemCG
ySo6FPItemC
So6FPItemCG
GSgSg
_pIgrzo_
So6FPItemCG
GSg_ADSbtSg
_pIgrzo_AF_pIegyzo_
So9FPDDomainC
So6FPItemCG
SO3key_
5valuet
GSg_ADSbtSgSg
GSg_ADSbtSg
So6FPItemCGSg
SaySo8FPItemIDCGSgSDy
AEGSg
_pSgIegggg_
SaySo8FPItemIDCGSgSDy
AEGSg
_pSgIegnng_
So6FPItemC
yypG
SayypG
So6FPItemCG
So10FPDRequestC2by_t
So6FPItemCGSo18FPTestingOperationCG
ySDy
So6FPItemCG
_pGAG_pGIegg_
So6FPItemCGG
yShy
So6FPItemCGG
_pGIegg_
IeyB_
So6FPItemCGG
ySDy
So6FPItemCG
_pGAG_pGIegn_
So6FPItemCG
yxq_G
_pGz_
_So6FPItemC
RzAJR_
yxGRb0_AKyq_GRb1_r2_lXX
So6FPItemCG
GSg4itemSu7versionSo27NSFileProviderDomainVersionCSg06domainF0t
GSg4item
Sg17destinationItemID
AKGSg11baseVersion
6fieldsSu7versionSo020NSFileProviderDomainF0CSg06domainF0t
GSg4item
7newNameSu7versiont
Sg4itemt
ySo6FPItemC
ySo6FPItemCGSg4itemSu7versionSo27NSFileProviderDomainVersionCSg06domainG0t
ySo6FPItemCG
ySo6FPItemCGSg4item
Sg17destinationItemID
yAHGGSg11baseVersion
6fieldsSu7versionSo020NSFileProviderDomainG0CSg06domainG0t
ySo6FPItemCGSg4item
7newNameSu7versiont
So6FPItemCG
So6FPItemCG_AEt
ySo6FPItemCGSg
So6FPItemCG3key_
_p5valuetSg
So6FPItemCG3key_
_p5valuet
So6FPItemCG
So6FPItemC_G
So6FPItemCGG
SgSg
_pIgrzo_
2at_So10FPDRequestC2byt
So6FPItemC
GSgXw
So6FPItemCq0_q1_GSgXwz_AB_AD
ADSgABRszADRs_
yABGRb0_
R0_AJyADGRb1_
R1_AB13URLBackedItem
Rt0_r2__lXX
Gz_Xx
z_Xx
_pGIegg_
SS2id_
2atSo10FPDRequestC2bySu7optionst
_pGIegn_
3url_
6parenttSg
3url_
6parentt
GSg_So27NSFileProviderDomainVersionCSgt
GSg_So27NSFileProviderDomainVersionCSgt
So6FPItemCq0_q1_GSgXwz_AB_AD
ABRszADRs_
yABGRb0_
R0_AIyADGRb1_
R1_AB13URLBackedItem
Rt0_r2_lXX
2of_So10FPDRequestC2byt
ySo6FPItemC
Sg6itemID_So10FPDRequestC2byt
ypGSg
ypGSgz_Xx
_yptG
So6FPItemCG
SDySSSo8NSNumberCGSgSg
SDySSSo8NSNumberCGSg
_pIgrzo_
S2StSg
_pIgrzo_
So6FPItemCG
So6FPItemCG
_pSgIegng_
So6FPItemCq0_q1_GSgXwz_AB_AD
ADGABRszADRs_
yABGRb0_
R0_AKyADGRb1_
R1_AB13URLBackedItem
Rt0_r2__lXX
3for_So10FPDRequestC2byt
So8FPFSItemC
So13FPXEnumerator_pSgSo7NSErrorCSgIeyByy_
So6FPItemCq0_q1_GSgXwz_AB_AD
So13FPXEnumerator_pSgABRszADRs_
yABGRb0_
R0_AKyADGRb1_
R1_AB13URLBackedItem
Rt0_r2__lXX
_pGIegg_
SgXw
SgXwz_Xx
2id_AA8parentIDSS8filename
Sg11contentTypet
6itemID_
Sg0A0
yACGSg13fetchStrategyt
So7NSErrorCSgSo22FPSandboxingURLWrapperCSgAFIeyByyy_
So6FPItemCq0_q1_GSgXwz_AB_AD
So22FPSandboxingURLWrapperCSgAkBRszADRs_
yABGRb0_
R0_ALyADGRb1_
R1_AB13URLBackedItem
Rt0_r2_0_lXX
Si_SitSg
Si_Sit
_pIgrzo_
ytIegr_
So13FPDDownloaderCSgXw
So13FPDDownloaderCSgXwz_Xx
ytIegr_Sg
ytIegr_
_pIgrzo_
ySS_yptG
Gz_Xx
5below_So10FPDRequestC2byt
So6FPItemCGSgXw
yxq_GSgXwz_
_So6FPItemC
RzAGR_r0_lXX
GSbSay
_pIegodozo_
So17NSFileCoordinatorC
_pIgngzo_
So17NSFileCoordinatorC
ytSg
_pIgrzo_
ySi_GSo17OS_dispatch_queueCG
5ItemA
5ItemB
yxq_G
yxq_G
yq_xG
qd__Sgqd_0_Sg
_pSgIegnng_
qd_0_
yqd__
_pGIegn_
ypXmT_
y14ContentVersionABQz010StructuralC0ABQzGSg2att
8filenameAC5belowt
8filename_2ID
Qz5belowt
QzSg8expected_AC8receivedt
14ContentVersion
Qz8expected_AC8receivedt
14ContentVersion
17StructuralVersion
14ContentVersion
QzSg
17StructuralVersion
QzSg
So15fp_task_trackerC
yq_x_G
y14ContentVersion
Qy_010StructuralB0ACQy_GSg
SuSg
y2ID
QzGSg
yxGSg
_p_So27NSFileProviderDomainVersionCSg010propagatedD0tSg
SgSSSg
_pSgIegggg_
yxq_G
yxq__G
ShySo17NSFileCoordinatorCG
So6FPItemCG_Si5rowIDt
ySo6FPItemCG
So6FPItemC_GypG
ySo6FPItemC
ySo6FPItemC
ySo6FPItemC
So6FPItemC_G
So6FPItemC_G
So6FPItemC_G
So6FPItemC_G
So6FPItemC_G
So6FPItemC_G
ySo6FPItemC
ySo6FPItemC
ySo6FPItemC
So6FPItemC_GG
So6FPItemC_GG
So6FPItemC_G
So6FPItemCG_
_pSgctG
So6FPItemCG_So10NSProgressC
_pSgct
So6FPItemC_GSg
So6FPItemCG_
_pSgctG
ySo6FPItemC
_pSgctG
Sayy
_pSgcG
ySo6FPItemC_G
_GypG
_GypG
ySo6FPItemCGSgSg
ySSSuG
SE_pSg
ySSSiG
So10NSProgressCG
ySSSo8NSNumberCG
yq_xG
yxq__G
y14ContentVersion
Qz010StructuralB0ACQzGSg
y2ID
Qy_GSg
Qy__
y14ContentVersionABQy_010StructuralC0ABQy_GtSg
yq_GSg
yq_xG
yxq__G
yq_xG
yq_Sg_So27NSFileProviderDomainVersionCSgt
yxq__G
y2ID
Qy_G
y14ContentVersion
Qz010StructuralB0ACQzG
yq_GSg_So27NSFileProviderDomainVersionCSgt
y14ContentVersion
Qy_010StructuralB0ACQy_G
yxq__G
yq__G
yq_GSg
Qz_SS6reasont
yq_G
So15FPCTLTermDumperC
_SStSg
_SSt
_pGIegn_
GSgxSg
_pIgyrzo_
Igyd_
_pIgyrzo_
ySiG
ySS_
_ptG
ySSSgG
ACGG
So6FPItemCGG
yxSg
_pGIegn_
ySay
yx_GG_Say
_pSgcSgtcSg
yxGycSg
y2ID
tcSg
yycSg2ID
Qz_So10NSProgressC
tcSg
$s9libfssync23URLBackedFileTreeWriterP
13URLBackedItem
$s9libfssync26DomainBackedFileTreeWriterP
Qz04itemA0_xSg0B0
yxGSg13fetchStrategyt
Qz04itemA0_t
Sb11deferRescan_SS6reasont
Sb8longWait_t
yx_G
_pGIegn_
SayxG
Say2ID
So8NSStringCIeyBy_
SDySSSuG
SDySSypGSg
So6FPItemCGG
ShySSG
Sb_So21OS_dispatch_semaphoreCSgtycSg
So6FPItemCG
GGSg
SSIegg_
SaySSGz_Xx
So6FPItemCGSgG
So6FPItemCGSg
ySSSu_G
SE_p
ySSSE_pG
ySo6FPItemC
_pGSg
yxSg
_pGSgz_
RzlXX
Ieggd_
ySo6FPItemCSg
_pGSg
yxSg
_pGSgz_So6FPItemC_
RzlXX
ySo6FPItemCG
Sb11deferRescan_SS6reasontSg
ySo6FPItemCG
ySo6FPItemCG
So6FPItemCG_
yyct
So6FPItemCG_
yyctSg
ySo6FPItemC
yyct
ySo6FPItemC
yyctSg
So6FPItemCG_So10NSProgressC
yyctSg
So6FPItemCG_So10NSProgressC
yyct
So6FPItemC_G
3key_
So6FPItemC_G5valuetSg
3key_
So6FPItemC_G5valuet
_pSgytIegnr_
So6FPItemCGSgXw
So6FPItemCG_GG
So13PQLConnectionCSg
yxq_GSg_
_ptKc
SayyyKcG
yxGSg_ACSbtSgyKXEKcSg
Shy2ID
Qy_G
yxq_GSgXwz_
_So6FPItemC
RzAGR_r0_lXX
So6FPItemC_G
ySo6FPItemC
So6FPItemC_G
So6FPItemC_G
So6FPItemCG
ySay
So6FPItemCGGAFG
ySo6FPItemCG
ySo6FPItemCG4from_AD2to
SS6reasont
ySo6FPItemCG_SS6reasont
G4from_AC2to
SS6reasont
G_SS6reasont
ySo6FPItemC
ySo6FPItemC
So6FPItemC_G
ySo6FPItemC
So6FPItemC_G
So6FPItemC_G
ySo6FPItemC
ySo6FPItemC
ySo6FPItemC
So6FPItemC_G
So6FPItemC_G
ySo6FPItemCGSg4from_AE2to
5diffst
GSg4from_AD2to
5diffst
So6FPItemC_G
ySo6FPItemC
So6FPItemCGSg
ySay
GSSG
ySo6FPItemC
ySo6FPItemC
_GtG
ySo6FPItemC
ySo6FPItemC
ySo6FPItemC
So6FPItemC_GtG
So6FPItemC_G
So6FPItemC_G
So6FPItemCG
So12PQLResultSetC_
So6FPItemC_GSg
So6FPItemC_G
So6FPItemC_G
So6FPItemC_G
So6FPItemC_G
So6FPItemC_G
So6FPItemC_G
So6FPItemC_G
So6FPItemC_G
So6FPItemC_G
So6FPItemC_G
ySo6FPItemC
So6FPItemC_G
So6FPItemC_G
So6FPItemC_G
So6FPItemC_G
So6FPItemC_G
So6FPItemC_G
So6FPItemC_G
So6FPItemC_G
So6FPItemC_G
So6FPItemC_G
So6FPItemC_G
ySo6FPItemC
_GSg
ySo6FPItemC
ySo6FPItemC
ySo6FPItemC
ySo6FPItemC
ySo6FPItemC
ySo6FPItemC
ySo6FPItemC
ySo6FPItemC
ySo6FPItemC
ySo6FPItemC
ySo6FPItemC
ySo6FPItemC
ySo6FPItemC
So6FPItemC_G
ySo6FPItemC
ySo6FPItemC
ySo6FPItemC
ySo6FPItemC
ySo6FPItemC
ySo6FPItemC
ySo6FPItemC
ySo6FPItemC
ySo6FPItemC
ySo6FPItemC
ySo6FPItemC
ySo6FPItemC
ySo6FPItemC
So6FPItemCGSg_
yAbDGt
Igr_
ySay
GSSG
ySo6FPItemC
GSg_
yAcDGt
So6FPItemCGSgXw
yxq_GSgXwz_
_So6FPItemC
RzAGR_r0_lXX
So6FPItemCG
ySo6FPItemC
ySo6FPItemC
So6FPItemCG
So6FPItemC_GG
ySo6FPItemC
So6FPItemCGSg
So6FPItemCG
So6FPItemCG
ySo6FPItemC
So6FPItemCG_
_pSgct
So6FPItemCG_
yyct
So6FPItemCG_
_pSgctG
ySaySny
_pIegzo_
ySO_
So6FPItemCG_So10NSProgressC
_pSgcttG
So6FPItemCG_
_pSgct
ySo6FPItemC
_pSgct
ABGSg
_GSg
G7oldItem_AC03newB0
5diffsSS6reasont
GSgSb11isRecursiveSS6reasont
G4from_Sb15mayAlreadyExistSS6reasont
GSg_ADt
ySo6FPItemCACGSg
ySo6FPItemCACG
ySo6FPItemC
ySo6FPItemCG7oldItem_AD03newC0
5diffsSS6reasont
ySo6FPItemC
ySo6FPItemCGSgSb11isRecursiveSS6reasont
ySo6FPItemCG4from_Sb15mayAlreadyExistSS6reasont
ySo6FPItemCGSg_AEt
ySo6FPItemC
ySay
ySo6FPItemC
GGAFG
So13PQLConnectionCIgg_
_pKc_ABttG
So6FPItemCGXo
_pyt
_pIegnrzo_
_pXp
ySo6FPItemC
Igr_
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
AB_G
ySay
GSSG
_GSg
SSIgr_
So6FPItemCG
_GSg
ySo6FPItemCG
So6FPItemCGSgG
ySo6FPItemCGG
ytIgr_
So6FPItemCGSgXw
ySo6FPItemC
GSgXw
So6FPItemCGSgXw
yxq_G
ySd_G
qd__Sg
qd__
_pIgrzo_
yxq_GSgXw
yxq_GSgXwz_x_q_
RzADR_r0_lXX
ySi_SitSg
SbIgr_
So6FPItemCGG
Si_Sit
So6FPItemCxq_GSgXw
yxq_GG
yxq_GG
yxq_GG
_pSg
$s9libfssync14SyncStateStoreP
$s9libfssync6DumperP
So12NSFileHandleC
yxq_G
So13FPLoggerScopeC
yxq_G
yx_GSg
yx_GG
SS_yptSg
yxq_GSgXwz_x_q_
RzADR_r0_lXX
SDy2ID
yxGSgG
S2SIggo_
So10FPUserInfoC
$s9libfssync15ConflictManagerP
SgXw
SgXwz_Xx
SDySS
SaySo15FPConflictLoserCGSgSDySS
_pGIeggg_
SDySS
_pGz_Xx
SDySS
_pGAA_pSgIeggg_
So16GSStorageManagerC
3key_
_p5valuet
So15FPConflictLoserC
SDySSypG
ySS_
$sSt
$s9libfssync6BitSetP
7ElementSTQz
8RawValueSYQz
$s9libfssync29CustomStringConvertibleBitSetP
yq_G7oldItem_AAyxG03newB0
5diffsSS6reasont
Qy__
yq_GSgSb11isRecursiveSS6reasont
yxG4from_Sb15mayAlreadyExistSS6reasont
SS6reason_t
yq_xG
$s9libfssync5JobIDP
$s9libfssync16FileTreeProtocolP
8ItemType
yq_xG
yxq_GSgXw
$s9libfssync16DatabaseDelegateP
SbIegd_
yxq_G
yq_xG
yxq_GAAyq_xGIeggo_
yq_G
$ss27ExpressibleByIntegerLiteralP
$sSx
So6FPItemCGG
yxG_SS6reasont
yxG4from_AB2to
SS6reasont
Qz_SbSg11isRecursiveSS6reasont
Qz_Sb11recursivelySS6reasont
yxq_G
yxq_G
So13PQLConnectionC
yxq_G
yq_xG
So17OS_dispatch_groupC
ypSg
So15PQLQueryBuilderCSSIggo_
ySaySiGSSG
yq_xG
yxq_G
_pSg
yxq_G
G0R3_
yAAySay
GSiGSSG
yShySiGSSG
G1R1_
yxGSg4itemSu7versionSo27NSFileProviderDomainVersionCSg06domainG0t
yxGSg4itemAaBQy_Sg015destinationItemA0
y14ContentVersionABQy_010StructuralF0ABQy_GSg04baseF0
6fieldsSu7versionSo020NSFileProviderDomainF0CSg06domainF0t
Qz_AaBQy_Sg015destinationItemA0
y14ContentVersionABQy_010StructuralE0ABQy_GSg04baseE0SbSg9recursiveSo020NSFileProviderDomainE0CSg06domainE0t
yxGSg4item
7newNameSu7versiont
Qz_xSg4itemt
yxq_G
yq_xG
$s9libfssync8SQLTableP
$s9libfssync12CodableClassP
Qy_3for_So10FPDRequestC2byt
Qy_Sg04itemA0_So10FPDRequestC2byt
Qy_2of_So10FPDRequestC2byt
y2ID
QzAbCQy_G2of_So10FPDRequestC2byt
y2ID
QzAbCQy_G2of_
8priorityt
Qy_5below_So10FPDRequestC2byt
So10FPDRequestCSg2by_
8priorityt
8priority_t
Qy_5below_t
SS9signature_
8provider
6domain
14itemIdentifiertSg
z_Xx
_pIgrzo_
So26OS_dispatch_source_data_or_p
yq_G
SDySS
yxq_GG
So17OS_os_transaction_pSg
yxq_GSg
SDy2ID
yxq__GG
SDy2ID
Qy_Say
yq_xG_
_pSgctGG
SDy2ID
QzSay
yxq_G_
_pSgctGG
yxq_G_y
_pSgctG
SDy2ID
QzSay
yxq_G_
_pSgctGG
yxq_GG
yxq_GSayy
_pSgcGG
yq_G
yxq_GG
y2ID
QzAbCQy_G
yxq_GG
yxq_GSgG
SDySO
yxq_G_So10NSProgressC
_pSgctG
SDy2ID
yx_GG
_pSgc
ySiG
yxq__G
_pIegoddzo_
yxGSg
Sg5oldID_AB03newB0t
Sg6bugfixt
ypSg_SSt
$s9libfssync12SQLFieldTypeP
9SQLFields
17SQLFieldsSequence
_7ElementSTQZ
17SQLFieldsSequence
$s9libfssync15SQLSingleColumnP
$s9libfssync23SQLCodableTableAccessorP
6Fields
$s9libfssync10SQLCodableP
6Fields
Qy_xc
SDyxypG
SbSPy
So6NSUUIDC
yxq_G_
GSpySo8NSObjectCSgGSgSpyypGSgytIeglllr_
y2ID
QzAbCQy_G
yxq_G_Si03rowA0tG
SDySi
yxq_GG
SaySiG
So6FPItemCG
So6FPItemC_G
ySo6FPItemC
GSg_
ySo6FPItemC
Iegr_
Iegr_
So6FPItemCGSg_
So6FPItemCGSg_AFt
So6FPItemCG_AEt
ySo6FPItemC
G_AEt
So6FPItemC_GSg
ySo6FPItemCG
yxq_G
yAAySay
GSiGSSG
ySay
Sg_ABt
yxq__G
yxq__GG
SDy2ID
QzxG
SDy2ID
QzxGz_x_
RzlXX
yxSg
_pGSgz_x_
RzlXX
SayxG
Ieggd_
4nsec_t
So18FPProgressProtocol_pSgXw
SgXw
ySo6FPItemC
So6FPItemCGG
$s9libfssync7VersionP
ySsG
ySny
SgtG
ySo6FPItemC
So6FPItemC_Gt
So6FPItemCGG
ySo6FPItemC
ySo6FPItemC
_pSgcG
SgtG
GSg_ABySo6FPItemCGSg
So6FPItemCGG
yyKc
yyyKcG
So6FPItemCG_y
_pSgct
So6FPItemCG_y
_pSgctG
So6FPItemCG_yyct
ySo6FPItemC
2id_AB8parentIDSS8filename
Sg11contentTypetG
SgXw
So10NSProgressC
Ieg_SgIeggggo_
So6FPItemC
So16FPDDomainIndexerC
SgSg
So18FPSpotlightIndexerCSg
_pGIegn_
ySaySo6FPItemCG_SaySo0A2IDCGSb
ySaySo6FPItemCG_SaySo0A2IDCGSb
_pGIegn_
GSg_AAySo6FPItemCGSg
SaySo6FPItemCG_SaySo0A2IDCGSb
SiSg
SgSg
yq_G
y2ID
QzAbCQy_GG
So27NSFileProviderDomainVersionCSgt
yxq__GSg
yxq__G
y2ID
QzG_
y14ContentVersionADQz010StructuralC0ADQzGt
_pGIegn_
yxq__G
y2ID
yxGSg_So27NSFileProviderDomainVersionCSgt
yxq__G
yxSg_So27NSFileProviderDomainVersionCSgt
yxq__G
yx_G
SDy2ID
yxGG
yxq__G
SDy2ID
yxGGz_x_q_
RzAGR_r0_lXX
yxq__G
yxq__G
yxq__G
yxq__G
_q_t
15capturedContent_x4itemtSg
yxq__G
yx_G
3for_
Sg4witht
Sg4with_t
_p4with_t
yxq__G
yxq__G
SgSg
So13PQLConnectionC
_pIggrzo_
So13PQLConnectionCSbIggd_
So13PQLConnectionC
_pIggrzo_
6fileID_
8genCounttSg
So13PQLConnectionC
6fileID_
8genCountt
_pIggrzo_
So13PQLConnectionCyt
_pIggrzo_
So13PQLConnectionCSb
_pIggrzo_
yxq__G
yxq__G
$s9libfssync16VFSIDLookupCacheP
SbSgSg
ShySo17NSFileCoordinatorCGG
So16NSOperationQueueC
So15FSChangeMonitorC
So20FSChangeSubscriptionCSg
So18OS_dispatch_sourceCG
_pSgXw
ySi_SitSg
_pGIegg_
ySi_SitSg
_pGIegn_
So17NSFileCoordinatorCSg
_pSgIeggg_
ySo17NSFileCoordinatorCG
ySo18NSFileAccessIntentCG
So18NSFileAccessIntentC
Sg_So27NSFileProviderDomainVersionCSgt
SaySsG
GSg_So27NSFileProviderDomainVersionCSgt
_pGIegn_
z_Xx
So18NSFileAccessIntentCSg
GSg_So27NSFileProviderDomainVersionCSgt
_pGIegn_z_Xx
So18NSFileAccessIntentCSgz_Xx
GGz_Xx
ySaySny
_pGIegg_
ySaySny
_pGIegn_
ySo15FPConflictLoserCG
_pGIegn_
_pIgnzo_
SgXw
SgXwz_Xx
So6FPItemCGm
So6FPItemCGmG
ySo6FPItemC
ySo6FPItemC
So6FPItemCGG
ySo6FPItemC
So6FPItemCGG
ySo8FPItemIDCG
ySo6FPItemCG
ySo7NSErrorCG
ySo18FPProgressProtocol_pG
ySiG
So6FPItemCGG
_pGIegn_
ySo10GSAdditionCG
ySo5FPTagCG
So6FPItemCGG
ySo18FPTestingOperationCG
_GABySi_GG
_GACySi_GGSo17OS_dispatch_queueCG
So9OS_os_logC
GSSyt
_pIgygrzo_
GSgSPy
GSgAAIgyyyd_
GSgSb
Igyyd_
GSgAC
Igyyyd_
_pIgygrzo_
_pIgygrzo_
GSgAAIgyyd_
yxq_GSgycSg
SaySSG
ySiG
So17OS_dispatch_queueCSg
yxq_G
yxq_G
yxq__G
_pGSg
_pIgrzo_
yxq_GSgXw
yxq_GSgXwz_x_q_
RzADR_r0_lXX
G0R0_
ySi_G
ySi_GSo17OS_dispatch_queueCG
_pGSg
_pIgrzo_
$ss10SetAlgebraP
$sST
_rawValue
rawValue
type
creator
RawValue
_ObjectiveCType
ArrayLiteralElement
Element
_nsError
st_dev
st_mode
st_nlink
st_ino
st_uid
st_gid
st_rdev
st_atimespec
st_mtimespec
st_ctimespec
st_birthtimespec
st_size
st_blocks
st_blksize
st_flags
st_gen
st_lspare
st_qspare
urls
domain
recursively
offset
limit
directoryEnumerationOptionsFor
item_handle
metadata
pathlen
_ErrorType
Code
tv_sec
tv_nsec
file_id
parent_id
doc_id
gen_count
name
padding
permissions
document_size
creation_time
modification_time
last_use_time
favorite_rank
tag_data
__Anonymous_field21
os_type
closest_sync_root
physical_size
before_bounce_filename
quarantine_info_size
quarantine_info
syncable_xattrs
protection_class
collaboration_identifier
__finder_color
xattr_data
xattr_length
label_color
next
value_size
deviceUUID
pathBasedStreamEventID
docBasedStreamEventID
streamMode
offset
containerListVersion
version
RawValue
observedID
domain
reader
deviceUUID
shouldSignalChange
observer
localFileEnumerator
shouldUpdateFileIDInGenstore
fsChangesEnumerator
observedID
itemURL
urls
domain
notifier
enumerators
enumeratorsQueue
currentToken
numberOfChanges
numberOfReaderCaughtUp
observedID
domain
reader
observer
startupFSEventID
source
stream
streamQueue
originalFSEventID
lastProcessedFSEventID
urls
domain
mode
latency
verbose
ownerDescription
delegate
gatherPhaseResumeStatus
sema
pathBased
docIDBased
deletionOccurred
canResume
cantReplayHistoricalFSEvents
RawValue
queue
localDomain
barrierURL
timer
reader
provider
hasFired
hasNotified
onStabilize
cachedRootInodeNum
cachedRootDeviceID
displayName
rootURL
isDefault
version
RawValue
itemIdentifier
parentItemIdentifier
filename
contentType
capabilities
documentSize
childItemCount
creationDate
contentModificationDate
lastUsedDate
tagData
favoriteRank
isTrashed
isAncestorInTrash
itemVersion
isExcludedFromSync
typeAndCreator
mostRecentEditorNameComponents
isUploadedTestingImpl
isDownloadedTestingImpl
fileURL
fp_isUbiquitous
fp_spotlightDomainIdentifier
fileSystemFlags
extendedAttributes
conflictingVersions
decorations
domain
isFolder
isPackage
isRegularItem
$__lazy_storage_$_containerItem
container
isHidden
isRoot
isTrash
isParentedToRoot
domain
appRegistry
version
monitoredAppsByID
queue
forwardDeletionToSpotlightOnUpgrade
persistToDiskOnUpgrade
containers
sversion
displayName
rootURL
isReadWrite
RawValue
rootID
domain
fileEnumerator
containerSnapshot
_nsError
_rawValue
rawValue
location
length
_os_unfair_lock_opaque
dev_id
dir_id
generation_count
read_count
unread_count
needs_seek
root_path
fsid
device_id
root_fd
fs_root_fd
data_protection_class
step_ino
quarantine_name
RawValue
_ObjectiveCType
ArrayLiteralElement
Element
Code
_ErrorType
width
height
returnIfAlreadyOnFS
propagateToFS
reconciledWithFP
fpID
shouldBeHidden
isImported
d_ino
d_seekoff
d_reclen
d_namlen
d_type
d_name
database
deleteChildren
updateOnlyIfExist
updateOrInsert
delete
none
rowID
oldEntry
newEntry
changedFields
persistAction
observer
logger
backend
vfsItemID
fpItemID
extensionEnumerator
lifetimeExtender
keepAlive
invalidated
cancellable
previousAnchor
_currentAnchor
changedItemsByID
deletedItemsIDs
addUnappliedFields
removeUnappliedFields
addNeedsDelete
updateIsRecursivelyDeleted
updateNeedsEmptyingBeforeDeletion
updateDeleteIgnoredItem
updateParentDeleted
updateBaseVersion
updateDomainVersion
updateContentStatus
updateDiskImportStatus
updateSchedulingState
updateMaterializationStatus
updateCapturedContent
setDeletionRunning
setRejected
unbind
setWasDatalessOnDiskBeforeImport
createItem
bindItemIDs
deleteReconciliation
deleteChildrenReconciliations
addCollidingItemID
removeCollidingItemID
onOther
onMain
setItemFlockStatus
updateSchedulingOrder
rawValue
ArrayLiteralElement
RawValue
Element
Iterator
RawValue
StringLiteralType
ExtendedGraphemeClusterLiteralType
UnicodeScalarLiteralType
rawValue
RawValue
kind
childItemCount
posixPermissions
creationDate
contentModificationDate
isLocked
isHidden
isEvictable
isPinned
isInPinnedFolder
isPathExtensionHidden
beforeBounceFilename
isSyncRoot
isIgnoreRoot
isInIgnoreRoot
closestSyncRoot
isDataless
size
physicalSize
isPackage
hasBundleBit
lastUsedDate
tags
favoriteRank
extendedAttributes
quarantineBlob
osType
isResurrected
linkCount
collaborationIdentifier
providerDomainID
nsDomain
manager
appSupportURL
rootURL
wharfDirectoryURL
dbDirectoryURL
dbURL
temporaryDirectoryURL
appSupport
cloudStorage
startDate
deletionDetectionDate
hasSeenBusy
isStale
backoff
timeSource
side
table
throttleColumns
keyColumns
deleteDisabledThrottles
disableRetries
nextRetryDate
database
waitGroup
hasPendingDeletionBackoff
xpcActivityRegistered
jobThrottlingParameters
itemThrottlingParameters
fileTreeThrottlingParameters
SQLFields
SQLFieldsSequence
delayedContinuation
jobRunningAtStartup
upcallSoftTimeout
upcallHardTimeout
workingSetEnumeratorExcessiveTime
kind
itemID
jobType
AllCases
RawValue
itemBound
itemEmptyInSnapshot
itemMaterializedOnDisk
itemMaterializationCompleted
itemEvicted
itemUpdatedInFSSnapshot
itemUpdatedInFPSnapshot
itemDeletionRejectedInFS
itemDeletionRejectedInFP
itemDeletedWhileNotInSnapshot
itemContentStatusChanged
itemDiskImportStatusChanged
throttle
throttleExpired
itemMaterializationFailed
itemEvictionFailed
capturedContentReleased
itemRescanned
itemUnbound
itemContentCaptured
requestCompleted
jobScheduled
jobContinuationScheduled
jobCompleted
streamIsIdle
meaningfulRecursivePropertyChange
evictabilityCanBeSet
cycleDetected
release
itemIgnoreStateChanged
moveOutCompleted
parentHierarchyIsIgnored
itemReadyToDelete
itemChildrenDeletedOrMoved
readyToDelete
itemUnpaused
flushed
diskImportAllowed
startup
childOf
childOfItemReconciledWith
parentOf
ancestorOf
ancestorOfItemReconciledWith
pathMatchingSiblingOf
anyPendingRecursiveDeletionRoot
conditions
jobTypes
itemID
anyInconditionally
rules
activeRules
blockedJobsRules
aggregators
createItem
updateItem
fetchItem
listFolder
recursivelyDeleting
fetchEventStream
runningJobs
blockedJobs
blockingRules
jobID
database
pending
verified
root
trash
regular
SQL_BACKUP_MANIFEST_SCHEMA_VERSION
database
table
resourceValuesToFetch
side
table
schedulingColumns
throttle
deleteFinishedJobs
database
rowID
cancellable
client
idMap
request
backend
extender
handle
isDir
extent
extentOffset
extentLength
RawValue
wrapped
itemIdentifier
requestor
timeout
timeoutState
domain
queue
tracker
fetchProgressByItemID
uploadProgressByItemID
schedulingState
pauseAffordanceTimerSource
pauseHardTermination
lastReceivedUpdate
forceFlattenedPackages
$__lazy_storage_$__cachedRTCReporter
previousSequenceNumber
workingSetSyncAnchor
progress
requestor
subscriber
progressReportingCancellable
progressCalculatingCancellable
noProgressSoftDelay
noProgressHardDelay
expirationDate
expirationPolicy
progressPerURL
cancelledRequests
cancelledBinaries
source
lastChangeDate
notificationPresenter
rtcReporter
wait
cancel
binaryPath
request
uuid
expiredPOSIXCall
staleDownload
unresponsiveApplication
wrapped
ItemA
ItemB
ContentVersion
StructuralVersion
fileID
genCount
size
parentID
name
metadata
nonSyncableAttributes
contentVersion
cachedURL
deviceID
docID
domain
providerDomainID
nsDomain
pathsManager
__cachedURL
__fpfs
backingStoreIdentity
queue
startupQueue
itemChangedQueue
workingSetChangedQueue
pendingSetWatchingQueue
startStatus
itemsChangedSource
enumerationAnchorChangedSource
runningEnumerator
pendingSetSource
initializationGroup
started
invalidated
progressMonitor
periodicFPCKRunner
pendingSetState
onActivatePendingSetNotification
pendingSetStateURL
errorGenerationRecord
_signaledErrorGenerationDebouncer
uuid
refreshDate
previousRefreshDate
currentItems
updatedItems
deletedItems
currentDomainVersion
domainVersionChanged
persistedState
lastEnumeratedRefreshDate
failure
shouldRestart
enumerator
valueCache
subscription
propertyQueue
vfsCounters
dbCounters
fsSnapshotCounters
fpSnapshotCounters
jobsWaitingForPersistence
jobsNeedingFlushRunning
fsJobsNeedingFlushWaitingForFlush
fpJobsNeedingFlushWaitingForFlush
isStarving
reconciliationTable
jobRegistry
snapshotA
snapshotB
syncState
operationCancelled
unknownItem
itemDeleted
materializationFailed
evictionFailed
itemNotFound
itemCollision
cannotBounce
directoryNotEmpty
itemMismatch
lookupNotPermitted_OBSOLETE_DO_NOT_USE
itemContentVersionMismatch
collidingItemChangedBeforeBounce
capturedContentMissing
itemNotEvictable
directoryChangedWhileEnumerating
downloadCancelled
itemKindMismatch
itemIsFlockedCanNotPropagate
itemNeedDelayPropagation
uploadCancelled
uploadInterrupted
expectedContentVersion
receivedContentVersion
itemID
expectedItemID
receivedItemID
currentContentVersion
expectedStructuralVersion
currentStructuralVersion
requestedContentVersion
availableContentVersion
requestedStructuralVersion
availableStructuralVersion
filename
below
parentID
contentVersion
structuralVersion
contentUnavailable
versionConflict
lookupNotPermitted
itemType
RawValue
main
other
tracker
invalidated
rowID
RawValue
propagationJob
propagatedVersion
propagatedSnapshotVersion
requestedState
actualItem
stillPendingFields
shouldFetchContent
domainVersion
error
pendingReconciliation
pendingParentImport
pendingSelection
scanningDisk
scanningProvider
pendingCleanup
databaseError
databaseInitError
reimportRoot
reimportFolder
reimportDataless
reimportRemovingCachedItems
partialReimport
AllCases
RawValue
SQLFields
SQLFieldsSequence
fileID
testContent
location
length
AllCases
RawValue
capturedContent
schedulingState
itemID
deletionStatus
unappliedFields
materializationStatus
contentStatus
diskImportStatus
wasDatalessOnDiskBeforeImport
genCount
size
parentID
filename
contentVersion
structuralVersion
domainVersion
schedulingOrder
kind
collidingItemIDs
itemIsFlocked
rank
sourceItemID
domainVersion
sourceItemSnapshotVersion
otherVersion
requestedState
capturedContent
revivedIDAndVersion
diffs
itemID
baseVersion
parentID
snapshotVersion
isRecursive
targetItem
itemChangedDuringPropagation
parentItemNotYetPropagated
rootIsPinnedCache
invalidated
ItemA
ItemB
priority
timestamp
rawValue
RawValue
dumper
indent
remapped
exposed
hidden
ContentVersion
StructuralVersion
SQLFields
SQLFieldsSequence
capabilities
isUploading
isUploaded
uploadingError
downloadingError
isExcludedFromSync
isShared
isTopLevelSharedItem
isSharedByCurrentUser
preformattedOwnerName
preformattedMostRecentEditorName
lastEditedByCurrentUser
sharingPermissions
isContainer
isContainerPristine
appContainerBundleIdentifier
cloudContainerIdentifier
containerDisplayName
displayName
hasUnresolvedConflicts
itemDecoration
userInfo
contentPolicy
inheritedContentPolicy
conflictingVersions
lastEditorDeviceName
AllCases
RawValue
Element
Iterator
RawValue
ArrayLiteralElement
rawValue
item
stillPendingFields
shouldFetchContent
fileTreeChangesHandler
newJobLockAggregator
itemLockingChangeHandler
canSetEvictabilityHandler
concurrentOperationLimit
concurrentContentUpdateLimit
concurrentProvideFileLimit
hasPlannedRescan
publishHandler
wharf
itemChange
forgetChange
resetStream
streamIsIdle
streamWasSignaled
updatedItems
deletedIDs
hasMore
continuation
numberOfFilesChecked
numberOfBrokenFilesInFSAndFSSnapshotCheck
numberOfBrokenFilesInFSSnapshotAndFPSnapshotCheck
accumulatedSuccesses
accumulatedErrors
accumulatedDomains
totalDatalessItems
totalMaterializedItems
accumulatedFileSizes
accumulatedSizeOfDisk
accumulatedDownloads
accumulatedUploads
multipleHardlinksExtensions
telemetryReport
fsSnapshotChecker
fpSnapshotChecker
openBackupDatabases
providerDomainID
usingFPFS
isCiconia
diskVsFSSnapshotIgnoredFilenames
launchOptions
shouldPause
discoveredDiskBrokenInvariantsCounters
repairedDiskBrokenInvariantsCounters
discoveredDiskVsFSSnapshotDiffCounters
repairedDiskVsFSSnapshotDiffCounters
discoveredFSSnapshotVsFPSnapshotDiffCounters
discoveredReconciliationTableBrokenInvariantsCounters
providerVersion
rawValue
ArrayLiteralElement
RawValue
Element
Iterator
roDB
invalidated
uuid
onError
onNextDurableFlush
flushTimer
isUnsafe
historyTable
enumerationAnchorChanged
onEnumerationAnchorChanged
lastPropagationDateChanged
onLastPropagationDateChanged
onEnumeratorShouldUpdate
onFolderHasBeenIgnored
itemWithPinningChange
itemForEvictabilityReevaluation
keepDownloadedItemsWithDatalessParent
vacuumBatchSize
hasRunTableVacuum
hasRunWharfVacuum
isVacuumInProgress
rawValue
RawValue
unlockedValue
lock
fpfs
dbUUID
updatedItemsRank
deletedIDsRank
wrapped
extraLogs
snapshotMutations
reconciliationMutations
jobs
domainVersion
currentPosition
completed
rootFD
limit
lookupScope
lookupCache
domainID
rootURL
positionDirectoryID
positionGenerationCount
positionReadCount
positionUnreadCount
positionOffset
RawValue
running
pausingUploads
dbUUID
dbBugfixRevision
fsStreamUUID
fsStreamEventID
fpStreamSyncToken
domainVersion
featureFlags
schedulingState
errorGeneration
RawValue
rawValue
ArrayLiteralElement
Element
Iterator
string
indent
handle
dumper
data
itemVersion
metadata
content
ledn
RawValue
position
roDB
table
itemColumnCount
itemColumns
nonSyncableAttributesColumns
nonSyncableAttributesColumnsCount
cacheByID
cacheCleared
RawValue
parentID
filename
metadata
limit
executionTimer
executionIsTooLong
onNewSlot
runningJobs
currentJobsLimit
softJobsLimit
hardJobsLimit
fetchContentJobsForA
fetchContentJobsForB
updateContentJobsForA
updateContentJobsForB
otherJobsForA
otherJobsForB
backgroundDownloads
main
other
relativePath
fileID
docID
genCount
isDirectory
Element
update
delete
create
none
SQLFields
SQLFieldsSequence
metadata
itemID
parentID
filename
fileID
genCount
contentVersion
structuralVersion
wrapped
ContentVersion
StructuralVersion
parentID
version
name
filenameBeforeBounce
metadata
nonSyncableAttributes
fsRecursiveProperties
fpRecursiveProperties
unsupportedFields
limitSlot
state
schedulingOrder
reason
itemID
name
color
tags
Element
Iterator
RawValue
ArrayLiteralElement
rawValue
wrapped
ItemA
ItemB
docID
fileID
root
trash
dbUUID
anchor
forSnapshotA
forSnapshotB
rawValue
IntegerLiteralType
Stride
RawValue
pendingSetUUID
pendingSetRefreshDate
offset
isInitialGathering
fileID
parentID
docID
genCount
name
snapshotForDomainID
fsForDomainID
filesCheckedDuringDiskEnumeration
filesCheckedDuringFSSnapshotEnumeration
FSSnapShotGivenRootID
basePath
side
insertIntoSnapshot
updateSnapshot
deleteFromSnapshot
deleteChildrenFromSnapshot
none
initialState
state
resolvedWithDB
rawValue
ArrayLiteralElement
RawValue
Element
Iterator
fsItemJobs
fpItemJobs
backgroundDownloader
deleteFinishedJobs
throttleWaitGroup
fsOrFPJobColumns
creationJobTypes
propagationJobTypes
rawValue
rowID
computation
$__lazy_storage_$_value
creation
update
deletion
bounce
fetchContent
listChildren
ingestEvent
fetchMetadata
subTables
capabilities
isUploading
isUploaded
uploadingError
downloadingError
isShared
isTopLevelSharedItem
isSharedByCurrentUser
preformattedOwnerName
preformattedMostRecentEditorName
lastEditedByCurrentUser
sharingPermissions
collaborationIdentifier
isContainer
isContainerPristine
appContainerBundleIdentifier
cloudContainerIdentifier
containerDisplayName
displayName
hasUnresolvedConflicts
itemDecoration
userInfo
contentPolicy
inheritedContentPolicy
conflictingVersions
lastEditorDeviceName
keys
values
wrapped
name
RawValue
downloadRequest
deletionRequest
coordination
urlForItemIDResolution
enumerationOf
itemCreation
urlEvictionRequest
forceIngestion
forceIngestionForItemID
itemEvictionRequest
startDownload
backgroundDownload
pinItem
unpinItem
ignoreItem
unignoreItem
singleItemChange
bulkItemChange
trashItem
materializeParentHierarchy
uploadBarrier
stabilization
listTestingOperations
runTestingOperations
testingHarnessMaterialization
testingHarnessEviction
testingHarnessPropagation
testingHarnessBarrier
swapped
backgroundWork
testingHarnessStabilization
testingHarnessScheduling
RawValue
AllCases
document
directory
symlink
finderAlias
Element
Iterator
RawValue
ArrayLiteralElement
rawValue
queueStorage
wasReopenedForReading
optionsStorage
schedulerQueueStorage
schedulerIsEnabled
scheduleStateStorage
onSchedulingStateChange
source
backgroundDownloadLimit
jobLockForAStorage
jobLockForBStorage
isCancelling
persistenceCounterStorage
tracker
jobGroupStorage
wharf
runningJobMap
runningJobsOSTransaction
schedulerOSTransaction
$__lazy_storage_$_swappedStorage
telemetry
materializationWaiters
propagationFromFPWaiters
propagationFromFSWaiters
stabilizationWaiters
ingestionFromFSWaiters
fsBarrierWaiters
fpBarrierWaiters
flushWaiters
testingOperationWaiters
ingestionSource
fsChanges
fpChanges
jobSchedulerEpoch
domainVersionStorage
triggersEnabled
pendingTriggers
pendingReconciliations
delegateStore
osLog
shouldDumpState
counters
finishedUploadJobs
finishedDownloadJobs
uploadJobs
downloadJobs
_isInDiskImportStorage
isUpcallTimeoutSchedulerRegister
flushCount
resetDate
rawValue
materialization
maximumQoS
completions
changes
position
resetStream
streamIsIdleWithLongWait
streamWasSignaled
positionPersisted
ArrayLiteralElement
RawValue
Element
Iterator
itemID
item
lock
vfsRootHasChanged
cannotOpenDatabase
cannotInitializeDatabase
unsupportedDatabaseVersion
invalidateValueType
inconsistentDatabase
SQLFields
SQLFieldsSequence
state
retryCount
nextRetryDate
lastErrorDate
lastError
priority
domainWideError
AllCases
RawValue
invalidValue
unexpectedNull
parent
converter
table
Fields
deviceID
rootInode
trashInode
disableTrash
shouldSyncXattr
rootURL
trashURL
database
providerDomainID
usingFPFS
state
runnable
idle
running
paused
minimumNsecsBetweenRetries
maximumNsecsBetweenRetries
nsecsBeforeForgettingCounter
finalRetryCount
randomizeDelays
delayBeforeDeletion
delayBeforeRescan
none
notAuthenticated
delayedContinuation
insufficientQuota
serverUnreachable
cannotSynchronize
excludedFromSync
upcallTimeout
disabled
pending
expired
state
priority
retryCount
nextRetryDate
lastErrorDate
lastError
domainWideError
RawValue
directoryID
page
anchor
RawValue
entry
rowID
fsRootID
fpRootID
columns
prefixedColumns
entryCachePerID
entryCachePerRowID
notDirectoryKinds
interestedContents
itemID
lastChange
reconcilition
isDataless
fileID
parentID
recursiveDatalessCount
recursiveEvictableCount
recursiveDisallowDeletionCount
recursiveDisallowExclusionCount
isPinned
isInPinnedFolder
nonSyncableAttributes
createItem
updateItem
deleteItem
fetchItemMetadata
deleteFolderFromSnapshotIfEmpty
reSnapshotChildren
fetchChildrenMetadata
materializeItem
evictItem
evictChildren
bounceItem
collectCapturedContent
deleteRejectedItemFromTree
markDirectoryDiskImportDone
faultDirectoryInTree
cancelFetchFileContent
diskImportFinished
continueDiskImport
unfaultDirectoryInTree
unfaultDirectoryAndChildren
mergeItems
materializeParentHierarchy
cancelUpdate
fetchContent
fetchEventStream
materializeIgnoredItem
unblockEvictability
markPackagesAsEvictable
markPackagesAsSyncRoot
unblockIgnoreFolderProcessing
ignoreChildrenOfIgnoredHierarchy
markDirectoriesAsLocked
deferredRescan
markParentDeleted
unpauseReconciliation
retriggerResolvedVendorExclusion
resolveItemEvictability
populateConflicts
cleanConflicts
updateClosestSyncRoot
rescanParentDeletedChildren
RawValue
SQLFields
SQLFieldsSequence
state
order
reason
sourceItemID
sourceItemSnapshotVersion
targetItemID
targetFilename
bouncingContext
capturedContent
diffs
domainVersion
metadata
parentID
filename
conditions
continuation
priority
timestamp
side
type
AllCases
ItemType
continueScan
abortScan
scheduleAfter
scheduleAfterCondition
scheduleBeforePendingJobs
scheduleAfterPendingJobs
proxies
activeCounters
doneCounters
kind
noActivity
publishedProgress
rootURL
count
size
proxy
rawValue
ArrayLiteralElement
RawValue
Element
Iterator
snapshotForDomainID
reconciliationForDomainID
filesCheckedDuringFPSnapshotEnumeration
content
structure
lastEditorDeviceName
testContent
extent
uploadProgress
downloadProgress
waitingItemsWatchingQueue
waitingItemsSource
engineUUID
rawValue
requestEffectivePID
prettyDescription
enumerator
lastIndexedAnchor
spotlightIndexer
deletionStatus
unappliedFields
materializationStatus
version
contentStatus
diskImportStatus
wasDatalessOnDiskBeforeImport
schedulingState
capturedContent
domainVersion
itemIsFlocked
kind
collidingItemIDs
schedulingOrder
rank
notInterested
snapshotting
watching
importingFromDisk
partiallyMaterialized
materializing
evicting
materializingParent
rawValue
propagateAtoB
propagateBtoA
nothingToDo
alreadyBusy
deleteReconciliation
delayPropagation
readyToPropagate
nothingToPropagate
RawValue
ArrayLiteralElement
Element
Iterator
itemID
snapshotVersion
targetFilename
bouncingContext
domainVersion
requestedState
baseVersion
parentID
filename
otherCollidingItemID
otherCollidingFilename
otherCollidingParentID
RawValue
fileTree
database
side
canSetEvictability
counters
datalessChildren
nonEvictableChildren
evictableChildren
disallowedDeletions
disallowedExclusions
createCount
updateCount
deleteCount
resetDate
ItemType
order
updateEpoch
SQLFields
SQLFieldsSequence
kind
isDataless
size
isLocked
posixPermissions
creationDate
contentModificationDate
lastUsedDate
tagData
favoriteRank
isPackage
isHidden
isPathExtensionHidden
childItemCount
extendedAttributes
physicalSize
isEvictable
isPinned
isInPinnedFolder
beforeBounceFilename
quarantineBlob
isSyncRoot
isIgnoreRoot
closestSyncRoot
osType
linkCount
collaborationIdentifier
AllCases
RawValue
userURL
outputUserURL
destinationDirectoryURL
backupManifestURL
targetItem
capturedContent
sourceID
targetID
queue
pathmon
AllCases
RawValue
waiting
runnable
running
failed
cancelled
completed
userURL
fpDatabaseURLs
targetItem
URLBackedItem
_isCaseSensitive
lookupScope
coordinatorPurposeIdentifer
runningCoordinators
coordinatorsByItemID
operationQueue
queue
tracker
fsChangeMonitor
fsChangeSubscription
tombstoneSlayer
flockedDispatchDict
flockedTimerDispatchDict
flockedGroup
_rootURL
_rootURLLock
idLookupCache
_lastFSEventID
_fakeEventSeq
lastFSEventIDShortWaitSubscription
lastFSEventIDLongWaitSubscription
eventAggregator
counters
preventedEvictabilityTable
lookupCount
scanCount
droppedEventCount
resetDate
lock
changes
statesByKey
positionPersisted
processedFileIDAndPaths
processedPaths
fileID
path
name
providerIDHash
ossignposter
signpostID
signposter
interval
label
root
fsRoot
wharfHandle
deferredWQ
invalidated
activated
requestedXattrs
reporter
database
registrationKeys
_debouncedUnregistration
registrationQueue
debounceQueue
debouncePublisher
subTables
rawValue
pending
running
throttled
ArrayLiteralElement
RawValue
Element
Iterator
[DEBUG] 
  no reader (%@) or associated barrier folder URL
[DEBUG] 
  no existing barrierGroup and denied permission to create one
[DEBUG] 
  setting up new barrier with rendez-vous %@ (currentID=%llu)
[DEBUG] 
  updating existing barrier to new rendez-vous %@
[DEBUG] 
  handle event on barrier %@
[DEBUG] Creating new FSEvent stream %s
[DEBUG] Suspending FSEvent stream %s
[DEBUG] Resuming FSEvent stream %s <XPC activity already running>
[DEBUG] Resuming FSEvent stream %s <XPC activity running>
[DEBUG] Stop processing of FSEvents on stream %s
[DEBUG] Defer processing of FSEvents on stream %s per XPC activity
[DEBUG] Observing %@ (%s)
[DEBUG] Creating stream with name %s since %llu
[DEBUG] Already need deep scan.  Dropping all incoming events
[DEBUG] Incoming events need deep scan.  Dropping all existing events
[WARNING] We still have too many events in the queue, blocking until events are flushed
[DEBUG] %@ (handling barrier - %@)
[WARNING] %lu barrier event%s not delivered, dropping!
[DEBUG] Dequeueing event: %u/%u path:'%@' fileID:%llu flags:%@ id:%llu
[INFO] fsevents id wrapped
[INFO] done processing history
[INFO] kernel dropped an event
[INFO] dropped event during the processing of the historical stream
[INFO] dropped event during the processing of the live stream
[DEBUG] %@ ignore event #%llu (own event)
[DEBUG] Historical stream is being processed - enqueuing barrier event %@
[DEBUG] %@ (dropped event)
[DEBUG] %@ (ignored uninteresting path)
[ERROR] Cannot stat root at '%@' after fsevent:%{errno}d
[CRIT] The root fileID changed from %llu to %llu
[INFO] %@ root needs deep-scan
[DEBUG] %@ processing
[DEBUG] 
%llx closing the %@
[DEBUG] resetting the %@ because of %@
[DEBUG] 
%llx reset: drained all fsevents from the old stream
[DEBUG] creating the new stream
[DEBUG] suspending - suspendCount:%d->%d
[DEBUG] resuming - suspendCount:%d->%d
[DEBUG] Starting FSEvents stream
[ERROR] Dropping FSEvent, eventPaths=%p with numEvents=%zd (eventInfo.count=%lu): %@
[DEBUG] draining %zd fsevents
[DEBUG] Enqueuing event: %zd/%zd %@
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.FileProvider.LocalStorage</string>
<key>com.apple.fileprovider.enumerate</key>
<true/>
<key>com.apple.private.MobileContainerManager.otherIdLookup</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.security.container-required</key>
<true/>
<key>com.apple.private.security.storage.MobileDocuments</key>
<true/>
<key>com.apple.private.vfs.authorized-access</key>
<true/>
<key>com.apple.private.vfs.open-by-id</key>
<true/>
<key>com.apple.private.vfs.skip-mtime-updates</key>
<true/>
<key>com.apple.security.app-sandbox</key>
<true/>
<key>com.apple.security.application-groups</key>
<array>
<string>group.com.apple.FileProvider.LocalStorage</string>
</array>
<key>com.apple.security.exception.files.absolute-path.read-only</key>
<array>
<string>/</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>/Containers/</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.lsd.mapdb</string>
</array>
</dict>
</plist>
TPhm
/.docid
.DS_Store
.DS_Store
silaSCAM
BLOB
BLOB
BLOB
