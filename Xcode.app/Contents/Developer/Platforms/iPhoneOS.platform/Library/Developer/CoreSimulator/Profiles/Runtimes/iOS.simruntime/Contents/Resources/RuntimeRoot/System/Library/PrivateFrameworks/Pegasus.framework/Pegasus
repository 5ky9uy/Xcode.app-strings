?ffffff
?333333
333333
M@333333
v8@?0
%@ may only be initialized by PGPictureInPictureController.
pid: %ui- bundle: %@
v24@?0@"BSProcessHandle"8@"NSError"16
v16@?0@"NSDictionary"8
CFBundleIdentifier
com.apple.pictureinpicture
PIPVisible
TransientTask
+[PGProcessAssertion assertionWithDomainAttribute:forProcessWithIdentifier:explanation:]
%@ - %@
PGProcessAssertion.m
Trying to acquire assertion when we already have one
Initially invalidated, which should not be possible
com.apple.pegasus.assertions
-[PGProcessAssertion acquireWithTarget:domainAttribute:]
-[PGProcessAssertion acquireWithTarget:domainAttribute:]_block_invoke
v24@?0@"RBSAssertion"8@"NSError"16
Released %@ without invalidating first.
-[PGProcessAssertion invalidate]
com.apple.InCallService
com.apple.mediaserverd
com.apple.avconferenced
com.apple.pegasus.PGPictureInPictureController %p
B16@?0@"PGPictureInPictureRemoteObject"8
B24@?0@"PGPictureInPictureRemoteObject"8^B16
v20@?0B8@"NSError"12
-[PGPictureInPictureController cancelPictureInPictureForApplication:sceneSessionPersistentIdentifier:]
-[PGPictureInPictureController pictureInPictureInterruptionBeganWithReason:attribution:]
-[PGPictureInPictureController pictureInPictureInterruptionEndedWithReason:attribution:]
TelephonyUtilities
expanseEnabled
@16@?0@"PGPictureInPictureRemoteObject"8
AVConference
UseAvconferenced
-[PGPictureInPictureController _updateAllRemoteObjectsForPIPPossibleAndExemptAttributions]
-[PGPictureInPictureController listener:shouldAcceptNewConnection:]
pictureInPictureApplications
-[PGPictureInPictureController pictureInPictureRemoteObject:willShowPictureInPictureViewController:]
pictureInPictureActive
activePictureInPictureApplication
-[PGPictureInPictureController backgroundPIPService:didGrantBackgroundPIPAuthorizationForActivitySessionWithIdentifier:]
-[PGPictureInPictureController backgroundPIPService:didRevokeBackgroundPIPAuthorizationForActivitySessionWithIdentifier:]
-[PGPictureInPictureController backgroundPIPService:canAuthorizeBackgroundPIPForActivitySessionWithIdentifier:appBundleIdentifier:]
_PGInterruption
%@: %@ - %@
<nil>
PictureInPicture - PGInterruptionAssistant - %p
@8@?0
isInterrupted:%@; interruptions: %@; exempt attribution:%@;
@16@?0@"_PGInterruption"8
B16@?0@"_PGInterruption"8
Unspecified
UILocked
Camera
Prevent Background Audio
Changed Tethering While Stashed
invalid
PGCommand.m
Invalid parameter not satisfying: %@
action != PGSystemActionSendToProxy
action != 0
v32@?0@"NSNumber"8@"NSNumber"16^B24
skipByInterval
skipToLive
setPlaying
setMuted
setSuspended
beginInterruption
endInterruption
skipPreroll
endOrLeaveActivity
setCameraEnabled
setMicrophoneMuted
switchCamera
menuItemSelected
showHUD
playbackAction
faceTimeAction
systemAction
testingAction
associatedBoolValue
associatedDoubleValue
associatedIntegerValue
sendToProxy
sendActionButtonTapped
cancelPIP
restoreFromPIP
toggleVisibility
toggleZoom
startPIP
invalidateFromProxy
v16@?0@"NSError"8
v24@?0@8@"PGDisplayLink"16
AD_PREROLL_LABEL
SPONSORED_PREROLL_LABEL
Sponsored
SKIP_PREROLL_IN_N_SECONDS
'IN N ', as in skip 'IN N' seconds.
SKIP_PREROLL
Skip
forward.end.fill
v16@?0q8
none
acquiring
aquired
pipStarted
refused
revoked
PGBackgroundPIPAuthorization.m
identifier != nil
com.apple.pegasus.background-pip-authorization-request
-[PGBackgroundPIPAuthorization initWithActivitySessionIdentifier:appBundleIdentifier:stateTransitionHandler:]_block_invoke_2
v16@?0@"BSServiceConnection"8
-[PGBackgroundPIPAuthorization initWithActivitySessionIdentifier:appBundleIdentifier:stateTransitionHandler:]_block_invoke
v16@?0@"<BSServiceConnectionConfiguring>"8
-[PGBackgroundPIPAuthorization initWithActivitySessionIdentifier:appBundleIdentifier:stateTransitionHandler:]
-[PGBackgroundPIPAuthorization transitionToState:]
%@ - %@.%@ - %@
Released %@ without revoking it first
Unknown Reason
v16@?0@"BSSimpleAssertion"8
v16@?0@"NSTimer"8
inputRadius
inputNormalizeEdges
inputQuality
inputIntermediateBitDepth
inputColorMatrix
PGCABackdropLayerView.m
[groupLeader _isCaptureOnly] || groupLeader == nil
groupLeader != self
v16@?0@"PGCABackdropLayerView"8
-[_PGBackgroundPIPServiceConnectionTarget transitionToStateIfPossible:]
%@ cxn: %@ activitySessionIdentifier: %@ bundleId: %@ state: %@
v24@?0^{__CFRunLoopObserver=}8Q16
com.apple.pegasus
nVh/gwNpy7Jv1NOk00CMrw
_UIHostedWindowHostingHandle
v24@?0@"PGControlsView"8@"PGDisplayLink"16
PGControlsView.m
You cannot do this, but Xcode thinks you can.
LIVE_INDICATOR_BADGE
LIVE
Common
%@ (%p) %@
Maiden
Initializing
Idle
RequestingAutomaticStart
SettingUpStart
Starting
Active
SettingUpStop
RequestingStop
RequestingTwoStageStop
RequestingCancel
Stopping
Suspended
Invalidating
Invalid
unspecified
uilocked
camera
preventBackgroundAudio
changedTetheringWhileStashed
com.apple.pegasus.PGPictureInPictureRemoteObject %p
PictureInPicture - PGPictureInPictureRemoteObject - %p
%@ is not a valid initializer. You must call -[%@ initWithConnection:].
application
sourceSceneSessionPersistentIdentifier
activitySessionIdentifier
controlsStyle
isPictureInPicturePossible
exemptAttribution
isInterrupted
currentState
pictureInPictureShouldStartWhenEnteringBackground
stashed
isInMicroPIP
isUnderLock
initialLayerFrame
com.apple.MissingBundleIdentifier
UIApplicationSceneSettings
B24@?0@"FBScene"8^B16
-[PGPictureInPictureRemoteObject startPictureInPictureEnteringBackgroundAnimated:withCompletionHandler:]
-[PGPictureInPictureRemoteObject sendStartPictureInPictureTestAction]
PGPictureInPictureRemoteObject.m
Tried to BG PIP a remote object %@ that has NO for pip is possible
-[PGPictureInPictureRemoteObject startPictureInPictureFromBackground]
Start PIP from Background
-[PGPictureInPictureRemoteObject pictureInPictureInterruptionBeganWithReason:attribution:]
-[PGPictureInPictureRemoteObject suspend]
-[PGPictureInPictureRemoteObject resume]
-[PGPictureInPictureRemoteObject cancel]
-[PGPictureInPictureRemoteObject invalidate]
-[PGPictureInPictureRemoteObject setCurrentResourcesUsageReductionReasons:]
-[PGPictureInPictureRemoteObject _setUILockedResourcesUsageReductionReasons:]
-[PGPictureInPictureRemoteObject canTetherRemoteObjectAsMicroPIP:]
+[PGPictureInPictureRemoteObject tetherRemoteObject:toRemoteObject:mode:]
tetheredObject != nil || tetheringObject != nil
Failed to tether [%@] to [%@]. isStoppingTethering[%u] canStartTethering[%u]
%@ attempted transition from %@ to %@,  which is not allowed.
-[PGPictureInPictureRemoteObject _setCurrentState:]
Cancel PIP Task Assertion
-[PGPictureInPictureRemoteObject _invalidateAllAssertions]
-[PGPictureInPictureRemoteObject _isAssociatedWithOtherObject:]
Invalidate for failure to start stop or cancel
{CGSize=dd}
-[PGPictureInPictureRemoteObject startPictureInPictureAnimated:completionHandler:]
{CGRect={CGPoint=dd}{CGSize=dd}}
v12@?0B8
-[PGPictureInPictureRemoteObject stopPictureInPictureAnimated:withFinalInterfaceOrientation:finalLayerFrame:completionHandler:]
-[PGPictureInPictureRemoteObject setPictureInPictureShouldStartWhenEnteringBackground:completionHandler:]
-[PGPictureInPictureRemoteObject updatePlaybackStateWithDiff:]
-[PGPictureInPictureRemoteObject updateMenuItems:]
v16@?0@"PGMenuItem"8
@16@?0@"NSDictionary"8
-[PGPictureInPictureRemoteObject setActivitySessionIdentifier:]_block_invoke
-[PGPictureInPictureRemoteObject stopPictureInPictureAndRestoreUserInterface]
-[PGPictureInPictureRemoteObject setExemptAttribution:]
-[PGPictureInPictureRemoteObject _acquireOrInvalidateProcessAssertionIfNeeded]
PIP Visible Assertion
interruption began assertion
-[PGPictureInPictureRemoteObject pictureInPictureViewControllerDidRequestStop:]
-[PGPictureInPictureRemoteObject pictureInPictureViewControllerDidRequestCancel:]
FBSceneManager
Class getFBSceneManagerClass(void)_block_invoke
Unable to find class %s
void *FrontBoardLibrary(void)
PGMaterialView.m
view == _contentView || view == _backdropLayerView
com.apple.pegasus.background-pip-service
None
Playback
FaceTime
HomeKitCamera
Minimal
SelfView
Unknown
VideoOnDemand
LiveBroadcast
SecurityCamera
VideoCall
ScreenSharing
PGPictureInPictureViewControllerPrefersIdleTimerDisabledDidChangeNotification
-[_PGPictureInPictureContainerView willMoveToSuperview:]
-[_PGPictureInPictureContainerView didMoveToSuperview]
PG-PictureInPictureViewController
%@ is not a valid initializer. You must call -[%@ initWithControlsStyle:].
%@ does not support unarchiving from a nib.
PGPictureInPictureViewController.m
contentContainer[%@] does not implement `-[SBPIPPegasusContainerAdapter notePictureInPictureViewControllerTetheringDidUpdate]` but tethering was initiated.
PGPictureInPictureViewController.AnimationType
PGPictureInPictureViewController.InitialSpringVelocity
not hidden
hidden
v16@?0B8B12
-[PGPictureInPictureViewController viewDidLoad]
Toggle visibility action should not be sent to PictureInPictureViewController.
-[PGPictureInPictureViewController updatePlaybackStateWithDiff:]
-[PGPictureInPictureViewController _insertContentContainerViewIfNeeded]
com.apple.pegasus.PG_dispatch_async_with_timeout
v16@?0@"NSNotification"8
v16@?0@?<v@?>8
PGPlaybackState.m
No invalid key.
Elapsed Time
v32@?0@"NSNumber"8@16^B24
AnchorContentTime
AnchorWallTime
ContentType
ContentDuration
TimeControlStatus
PlaybackRate
Muted
RequiresLinearPlayback
RoutingVideoToHostedWindow
BackgroundAudioPolicy
PrerollAttributes
FaceTime-SupportsActions
FaceTime-CameraActive
FaceTime-MicrophoneMuted
FaceTime-CanSwitchCamera
FaceTime-DisablesLayerCloning
SecurityCam-HasMicrophone
Paused
Playing
WaitingToPlayAtSpecifiedRate
Legacy
Automatic
Pauses
ContinuesIfPossible
requiredLinearPlaybackEndTime
Content Type
preferredTintColor
r: %@ g: %@ b: %@ a: %@
Advertisement
unknown
com.apple.pegasus.backgroundPIPServiceEntitlement
com.apple.pegasus.PGBackgroundPIPService
com.apple.frontboard
v16@?0@"<BSServiceConnectionListenerConfiguring>"8
-[PGBackgroundPIPService listener:didReceiveConnection:withContext:]
-[PGBackgroundPIPService listener:didReceiveConnection:withContext:]_block_invoke_2
v16@?0@"BSServiceConnection<BSServiceConnectionContext>"8
-[PGBackgroundPIPService listener:didReceiveConnection:withContext:]_block_invoke
v16@?0@"BSServiceConnection<BSServiceConnectionHost>"8
-[PGBackgroundPIPService _handleInvalidatedTarget:]
-[PGBackgroundPIPService _handleInvalidatedTarget:]_block_invoke
-[PGBackgroundPIPService backgroundPIPTargetRequestsAuthorization:]
-[PGBackgroundPIPService backgroundPIPTargetRequestsAuthorization:]_block_invoke
UIView.CornerRadius
PGPictureInPictureProxyPictureInPictureActiveChangedNotification
PGPictureInPictureProxy.m
%@ needs valid viewController!
com.apple.pegasus.PGPictureInPictureProxy %p
UIWindowSceneDidEndLiveResizeNotification
%@ is not a valid initializer. You must call -[%@ initWithControlsStyle:viewController:].
shouldShowAlternateActionButtonImage
v28@?0B8@"NSError"12B20B24
resetting internal state
_resetInternalState
-[PGPictureInPictureProxy setPictureInPictureShouldStartWhenEnteringBackground:]
-[PGPictureInPictureProxy preferredContentSizeDidChangeForViewController]
Client Update
-[PGPictureInPictureProxy _viewFrameForInteractiveTransitionAnimationWhenEnteringBackgroundDidChangeForViewControllerWithReason:]
Client request
-[PGPictureInPictureProxy _windowSceneForInteractiveTransitionAnimationWhenEnteringBackgroundDidChangeForViewControllerWithReason:]
window scene change
-[PGPictureInPictureProxy startPictureInPicture]
-[PGPictureInPictureProxy stopPictureInPictureAndRestoreUserInterface:]
-[PGPictureInPictureProxy rotateContentContainer:withCompletionHandler:]
v28@?0B8@"NSError"12@"BKSAnimationFenceHandle"20
v16@?0@"<PGMutablePlaybackStateFaceTimeSupport>"8
Connection was nil and setClientSessionIdentifier called
v16@?0@"<PGMutablePlaybackState>"8
-[PGPictureInPictureProxy setControlsStyle:animated:withCompletionHandler:]
automaticallyInterruptsForLegacyFaceTimeBehaviors == NO
automaticallyInterruptsForLegacyFaceTimeBehaviors changed
-[PGPictureInPictureProxy _setActivationState:reason:]
_setActivationState: %@
-[PGPictureInPictureProxy _startPictureInPictureAnimated:enteringBackground:reason:withCompletionHandler:]
_startPictureInPictureAnimated: %@
_startPictureInPictureAnimated succeeded
We failed to start, but activation state remained activating and nobody cleaned up after the failure
_startPictureInPictureAnimated failed
-[PGPictureInPictureProxy _startPictureInPictureAnimated:enteringBackground:reason:withCompletionHandler:]_block_invoke
completionHandler != nil
successHandler != nil && failureHandler != nil
-[PGPictureInPictureProxy __setupStartWithAnimationType:initialLayerFrame:successHandler:failureHandler:]
starting two stage stop
two stage stop finalize block
v48@?0{CGRect={CGPoint=dd}{CGSize=dd}}8q40
appActivationError
_stopPictureInPictureAnimated
_stopPictureInPictureAnimated finalize block
B8@?0
-[PGPictureInPictureProxy __actuallyStopAnimated:reason:finalLayerFrame:finalInterfaceOrientation:completionHandler:]
-[PGPictureInPictureProxy __actuallyStopAnimated:reason:finalLayerFrame:finalInterfaceOrientation:completionHandler:]_block_invoke_2
starting deactivating without being PGProxyActivationStateDeactivating
deactivation
begin deactivation
ending deactivating without being PGProxyActivationStateDeactivating
end deactivation
-[PGPictureInPictureProxy setReadyForDisplay:]
_prewarmAndStartAfterTimeout
Prewarming timeout fired
_cancelPrewarming
became ready for display with a non-zero size while prewarming
H:|[view]|
view
V:|[view]|
B16@?0@"UIScene"8
Scene Connection and _sceneSessionPersistentIdentifier is not connected
Scene Disconnection
Attempted to establish connection but %@ already had one
-[PGPictureInPictureProxy _establishConnection]_block_invoke
-[PGPictureInPictureProxy _updatePlaybackStateIfNeeded]
application did become active and no connection
deactivateIfNeededForInterruptedConnection
-[PGPictureInPictureProxy _legacyPictureInPictureInterruptionBegan]
-[PGPictureInPictureProxy _legacyPictureInPictureInterruptionEnded]
-[PGPictureInPictureProxy _setPictureInPictureActive:]
pip active
-[PGPictureInPictureProxy _setPictureInPictureSuspended:]
pictureInPictureSuspended
suspended changed
-[PGPictureInPictureProxy _setPictureInPicturePossible:]
pictureInPicturePossible
-[PGPictureInPictureProxy _setStashedOrUnderLock:reason:]
stashed or underlock
stashed or underlock changed
-[PGPictureInPictureProxy _setInterruptedForDefaultReason:initiatedByRemoteObject:]
default reason initiated by remote
default reason initiated locally
-[PGPictureInPictureProxy pictureInPictureStartRequestedAnimated:withCompletionHandler:]
remote request
-[PGPictureInPictureProxy pictureInPictureStopRequestedAnimated:withCompletionHandler:]
-[PGPictureInPictureProxy beginTwoStagePictureInPictureStopByRestoringUserInterfaceWithCompletionHandler:]
_twoStageStopForPictureInPictureRestoreWithContinueAfterUserInterfaceRestoreBlock completed without error, but a __pipStopFinalStageCompletionHandler was not available
-[PGPictureInPictureProxy endTwoStagePictureInPictureStopWithCompletionBlock:]
-[PGPictureInPictureProxy pictureInPictureCancelRequestedAnimated:withCompletionHandler:]
-[PGPictureInPictureProxy updatePictureInPicturePossible:]
-[PGPictureInPictureProxy pictureInPictureInvalidated]
pictureInPictureInvalidated starting
pictureInPictureInvalidated finished
remote message
-[PGPictureInPictureProxy setResourcesUsageReductionReasons:]
-[PGPictureInPictureProxy _setResourcesUsageReductionReasons:]_block_invoke
-[PGPictureInPictureProxy handleCommand:]
PGSystemActionStartPIP
Received command to end or leave without at least being activated, which should never happen
PG-StashedView
chevron.compact.left
chevron.compact.right
PGPegasusErrorDomain
MobilePIP
Opacity
Radius
Offset X
Offset Y
Continuous Corner Radius
PiP Shadow Settings
Restore Defaults
com.apple.pegasus.canShowScreenSharing
filters.gaussianBlur.inputRadius
gaussianBlur
inputHardEdges
com.apple.pegasus.menuitemprovider
title
symbolName
identifier
xmark
RESTORE_FULLSCREEN
Restore fullscreen
CLOSE_PIP
Close Picture in Picture
mic.fill
UNMUTE
Unmute
MUTE
Mute
play.slash.fill
play.fill
pause.fill
gobackward.10
goforward.10
SKIP_FORWARD_10_SECONDS
Skip forward 10 seconds
SKIP_BACK_10_SECONDS
Skip back 10 seconds
PLAY
Play
PAUSE
Pause
STOP
Stop
stop.fill
controlsShouldAutoHide
restoreButtonAccessibilityIdentifier
cancelButtonAccessibilityIdentifier
actionButtonAccessibilityIdentifier
skipBackButtonAccessibilityIdentifier
skipForwardButtonAccessibilityIdentifier
includesLiveIndicatorBadge
includesRestoreButton
includesCancelButton
includesActionButton
includesSkipBackButton
includesSkipForwardButton
includesContentLoadingIndicator
includesWaitingToPlayIndicator
isSkipBackButtonEnabled
isActionButtonEnabled
isSkipForwardButtonEnabled
includesSingleTapGestureRecognizer
includesDoubleTapGestureRecognizer
includesDoubleDoubleTapGestureRecognizer
includesProgressBar
progressBarShouldUpdate
actionButtonSystemImageName
actionButtonImageTintColor
actionButtonBackgroundTintColor
skipBackButtonImageTintColor
skipBackButtonBackgroundTintColor
skipForwardButtonImageTintColor
skipForwardButtonBackgroundTintColor
cancelButtonImageTintColor
cancelButtonBackgroundTintColor
skipForwardButtonSystemImageName
skipBackButtonSystemImageName
cancelButtonSystemImageName
prerollAttributes
cancelButtonWantsBackground
restoreButtonWantsBackground
actionButtonsWantBackground
cancelButtonCustomText
cancelButtonCustomImage
pip.exit
%s Will ignore %{public}@ because there wasn't a valid pid
%s %{public}@ target: %{public}@ domain: %{public}@
%s Acquiring %{public}@
%s %{public}@ invalidated
%s Failed to acquire %{public}@
%s Invalidating %{public}@. was valid: %{BOOL}u
%@ needs to be invoked on the main thread!
%s %{public}@ %{public}@
%s Starting PIP for FaceTime Video Call upon unlock
Multiple remote object response for attempted action, desired effect is ambiguous
Could remoteObject{%p} start pip upon backgrounding? %{BOOL}u, since we have at least the following: matchesSceneIdentifier{%{bool}u} shouldStartPictureInPictureEnteringBackground{%{bool}u}
%s Revoking authorization for %{public}@ because the delegate forbids background pip for the app %{public}@
%s Attempting to start backgroundPIP for %{public}@
%s %p %{public}@
%@ may not be invoked on the main thread!
%{public}@ - Connection with PID %d interrupted!
%{public}@ - Connection with PID %d invalidated!
%s Will tether because new object %p can tether %p as micropip
%s Will tether because active object %p can tether %p as micropip
%s Allowing remote object %p to coexist with active %p because one is QNBacklink
%s New object %p suspending active %p
%s New object %p canceling active %p
%s removing objects for swap
%s %{public}@ %{public}@ canAuthorizeBackgroundPIPForActivitySessionWithIdentifier before checking interruptions %{BOOL}u
%s Controller changed mind and decided to reject auth due for %{public}@ %{public}@ to camera interruption.
%@ - Sending touch delivery policy %@ failed with error: %@
%s Connection Activated: %{public}@
%s Received interruption for connection: %{public}@
%s Received invalidation for connection: %{public}@
%s Authorizing identifier %{public}@
%s %@
%s requestedState: %{public}@ for %{public}@
%s Refusing requestedState: %{public}@ for %{public}@
Remote object(%p) shouldStartPictureInPictureEnteringBackground check result:%{BOOL}u. State: possible(%{BOOL}u) shouldStartEnteringBackground(%{BOOL}u) canStartAutomaticallyOrIsStartingAutomatically(%{BOOL}u) isInterrupted(%{BOOL}u) %{public}@
isPictureInPicturePossible - %{public}@ %@
Called endTwoStageStopPictureInPictureWithCompletionBlock on object that hasn't begun.
%s %p: %{public}@ isInterrupted %{BOOL}u 
pictureInPictureInterruptionEndedWithReason: %{public}@ isInterrupted %{BOOL}u %p
%s %p %{public}@ %{BOOL}u || _currentState: %{public}@ [otherObject canStartMicroPIP] %{BOOL}u ![self canStartMicroPIP] %{BOOL}u _tetheredMicroPIP == nil %{BOOL}u [self _isAssociatedWithOtherObject:otherObject] %{BOOL}u
%s %p tether %p to %p for mode %@
%s %p %{public}@ -> %{public}@
Invalidation timeout fired while isStoppingOrCancelling: %{BOOL}u.
%s Associating %p %{public}@ with %p %{public}@ because hasMatchingSessionIdentifierAndBundleIdentifier
%s Associating %p %{public}@ with %p %{public}@ because one of them is a video call and we always associate ICS with itself
%s Associating %p %{public}@ with %p %{public}@ because micropip is active between the objects
%s Associating %p %{public}@ with %p %{public}@ because it has backgroundPIPAuthorization.
%s Associating %p %{public}@ with %p %{public}@ because it has an expanse-like activity session identifier and the facetime video call has an ICS bundle for its activity session identifier.
%@ preferredContentSize:%{public}@
Using default initial preferred content size due to background PIP authorization %@
invalid preferredContentSize %{public}@ %@
invalid initialLayerFrame %{public}@ %@
*** WARNING: Updating menu without the proper entitlement has no effect. ***
%s %p %{public}@ --> %{public}@
%s %p %@
%s %p Acquiring process assertion
%s %p Invalidating process assertion
remote object %p notifying proxy of pictureInPictureInterruptionBegan
remote object %p notifying proxy of pictureInPictureInterruptionEnded shouldResumeSuggestion %{BOOL}u
%s %p canStop: %{BOOL}u
%s %p canCancel: %{BOOL}u
%{public}@ setStashed:%{bool}u [self _isUnderLock]:%{bool}u
%s %p newSuperview is VC's view: %{BOOL}u
%@ may not be called before view is loaded!
[Layout] %{public}@:%d Stash view set %{public}@
[Layout] Removing Stash Tab Views
%{public}@ Preparing animation with initial layer frame: %@
Should have nil _analyticsSessionUUID
%@ %{bool}u
Pointer interaction view not in a window
%s %p REMOTE: %{public}@
%s %{public}@
%s Activated connection %{public}@ for target %{public}@
%s Invalidated connection %{public}@ for target: %{public}@
%s Activating connection %{public}@
%s Invalidating unvalidated client %{public}@
%s existingTargetForIdentifier %{public}@
%s BackgroundPIP: Revoking authorization for identifier %{public}@
Refusing authorization for %{public}@ because an authorization request (%{public}@) for this activitySessionIdentifier already exists %{public}@ and has not yet been revoked.
%s BackgroundPIP: Authorizing identifier %{public}@
Refusing authorization for %{public}@ because delegate didn't allow it.
%@ %{public}@
%s %p 
%s %p %ld
%s %p %{public}@ -> %{public}@ reason: %{public}@
%s %p Not updating activation state because we are no longer activating and it's not our responsibility to maintain activation state.
%{public}@ failed because not inactive.
%{public}@
Failed to setup start with error: %{public}@
[TwoStageStop] Failed to finalize with error %{public}@.
[TwoStageStop] Failed to __setupStopAnimated:::::
Timed out attempting to activate app on PIP stop
Timed out attempting to restore UI on PIP stop, attempt proceeding anyway
%s Skipping deactivation as we are no longer deactivating.
%s Skipping deactivation as our state is not deactivating. Error had been: %{public}@
%@ must be invoked on the main thread!
%s %p Ready for display: %{BOOL}u
PGHostedWindow root view controller *is* now containing: %{public}@[%p]
PGHostedWindow root view controller is *not* anymore containing: %{public}@[%p]
%{public}@ %{public}@
%s %p - Connection interrupted!
%s %p - Connection invalidated
%s %p APP: %{public}@
%s %p %{BOOL}u
%{public}@ Did update stashed or under lock state. stashedOrUnderLock{%{bool}u} reason: %{public}@
%{public}@ Did update _isInterruptedForAnyReason %{BOOL}u --> shouldBeInterruptedForAnyReason %{BOOL}u reason: %{public}@ canBeInterrupted %{BOOL}u _isInterruptedForDefaultReason %{BOOL}u initiatedByRemoteObject: %{BOOL}u
%{public}@ %{bool}u
%s Informing %{public}@ of didUpdateResourcesUsageReductionReasons:%@ oldReasons:%@
%@ oldReasons cannot equal new ones.
%@ %@
%{public}@ isActiveOrStarting: %{BOOL}u handle command %{public}@ should notify: %{BOOL}u
[Layout] progress{%.2f} thresholdedProgress{%.2f} backdropScale{%.2f}
%@ - Acquiring remote object proxy for connection %@ failed with error: %@
updatePlaybackStateWithDiff: %@
playback state after updates: %@
softlink:r:path:/System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard
PGVibrancyEffects
PGPictureInPictureApplication
NSCopying
PGProcessAssertion
Utility
PGPictureInPictureController
NSXPCListenerDelegate
NSObject
PGPictureInPictureRemoteObjectDelegate
PGBackgroundPIPServiceDelegate
PGAdditions
PGDisplayLink
BSInvalidatable
PGHostedWindow
PGHostedWindowHostingHandle
_PGInterruption
PGInterruptionAssistant
PGCommand
PGLayerHostView
_PGBundle
PGPortalView
PGPrerollIndicatorView
PGButtonViewDelegate
PGProgressIndicator
PGVibrantFillView
PGDimmingView
PGBackgroundPIPAuthorization
PGBackgroundPIPServerToClientInterface
PGControlsContainerView
PGControlsViewModelDelegate
UIGestureRecognizerDelegate
PGCABackdropLayerView
PGCABackdropLayer
PGCABackdropLayerViewSupport
_PGBackgroundPIPServiceConnectionTarget
PGBackgroundPIPClientToServerInterface
PGRunLoopObserver
PGPictureInPictureRemoteObjectInterface
PGPictureInPictureExportedInterface
PGLayoutContainerView
PGControlsView
PGPictureInPictureRemoteObject
PGPictureInPictureViewControllerDelegate
BSDescriptionProviding
PGCommandHandler
PGMaterialView
PGBackgroundPIPServiceSpecification
_PGPictureInPictureContainerView
PGPictureInPictureViewControllerClippingView
PGPictureInPictureViewControllerBackgroundView
PGHitTestExtendableView
PGPictureInPictureViewController
UIPointerInteractionDelegate
PTSettingsKeyPathObserver
PGPlaybackStateDiffConsumer
PGPlaybackState
PGMutablePlaybackState
FaceTimeSupport
PGMutablePlaybackStateFaceTimeSupport
SecurityCameraSupport
PGMutablePlaybackStateSecurityCameraSupport
PGPlaybackStatePrerollAttributes
PGBackgroundPIPService
BSServiceConnectionListenerDelegate
_PGBackgroundPIPServiceConnectionTargetDelegate
PGStashedMaskView
PGPictureInPictureProxy
_PGPictureInPictureConnectionExportedObject
PGStashView
__PGView
_PGButton
PGButtonView
PGTransientLocal
PGMobilePIPSettingsDomain
PGMobilePIPSettings
PGMicroPIPButtonView
PGBackdropView
PGMenuItem
PGMenuItemWSupport
PGControlsViewModel
PGControlsViewModelValues
CGColor
PG_acquireAssertionToPreventAutoHideOfControlsWithReason:
T@"UIColor",R,N
PG_allowsGroupBlending
TB,N,GisEnabled
PG_animateUsingDefaultDampedSpringWithInitialSpringVelocity:animations:completion:
TQ,N,V_preferredFramesPerSecond
PG_animateUsingDefaultTimingWithOptions:animations:completion:
Tq,R,N,V_reason
PG_appProxyWithDebugMethodAndPointerProem:errorHandler:
__cleanupWithCompletionHandler:
PG_compositingFilter
_backgroundView
PG_disablesLayerCloning
_chevronsHidden
PG_hasScreenSharingEntitlement
_controlsViewVisibilityAnimator
PG_performWithoutRetargetingAnimation:
_includesWaitingToPlayIndicator
PG_recursivelyDisallowGroupBlending
_invalidateConnectionForFailure
PG_remoteObjectProxyWithDebugMethodAndPointerProem:errorHandler:
_lock_activitySessionIdentifier
PG_remoteObjectWithDebugMethodAndPointerProem:errorHandler:
_pictureInPictureViewController
PG_setAllowsEdgeAntialiasing:
_reason
PG_setAnchorPoint:
_skipBackButton
PG_updateVibrancyEffectForTintColor
_updatePrefersIdleTimerDisabled
T#,R
_vcForDebugging
T@"<PGButtonViewDelegate>",W,N,V_delegate
acquireInterfaceOrientationLock
T@"<PGControlsViewModelDelegate>",W,N,V_delegate
actionButtonBackgroundTintColor
T@"<PGPictureInPictureControllerDelegate>",W,N
activationState
T@"<PGPictureInPictureRemoteObjectDelegate>",W,N,V_delegate
allKeys
T@"<PGPictureInPictureViewControllerDelegate>",W,N,V_delegate
bs_map:
T@"BSServiceInterface",R,C,N
bundleForClass:
T@"NSArray",C,N,V_animatedLayerProperties
canSwitchCamera
T@"NSDictionary",R,N
connectedScenes
T@"NSHashTable",R,N,V_dependents
contentDuration
T@"NSMutableDictionary",R,N,V_mutableDictionary
dealloc
T@"NSSet",R,C,N,V_identifiersForAuthorizedActivitySessions
didAnimatePictureInPictureStart
T@"NSSet",R,N,V_pictureInPictureApplications
displayLinkWithTarget:selector:
T@"NSString",C,N,V_exemptAttribution
enabled
T@"NSString",R,C
filters
T@"NSString",R,C,N,V_activitySessionIdentifier
handleSingleTap
T@"NSString",R,C,N,V_attribution
hitRect
T@"NSString",R,N,V_bundleIdentifier
initWithActivityIndicatorStyle:
T@"NSXPCConnection",R,N
isInterruptible
T@"PGButtonView",W,N,V_buttonView
isPrerollActive
T@"PGCABackdropLayerView",W,N,V_groupLeader
isShowingControlsForHoverActive
T@"PGControlsViewModel",R,N,V_viewModel
locationInView:
T@"PGDisplayLink",R,N,V_displayLink
microphoneMuted
T@"PGHostedWindowHostingHandle",&,N,V_microPIPHostedWindowHostingHandle
numberWithLong:
T@"PGPictureInPictureApplication",R,N,V_activePictureInPictureApplication
readyForDisplay
T@"PGPictureInPictureApplication",R,W,N,V_application
removeObserver:
T@"PGPictureInPictureRemoteObject",&,N,V_tetheringRemoteObject
serviceWithDefaultShellEndpoint
T@"PGPictureInPictureViewController",R,W,N,V_tetheredViewController
T@"PGPictureInPictureViewController",W,N,V_vcForDebugging
setAnchorPoint:
T@"PGPlaybackState",R,N
setBorderWidth:
T@"PGPlaybackStatePrerollAttributes",R,N
setContentType:
T@"UIColor",C,N,V_customBackgroundColor
setCustomElapsedTrackTintColor:
T@"UIImage",&,N,V_image
setGroupLeader:
T@"UIPointerInteraction",W,N,V_pointerInteraction
setInterrupted:
T@"UIView",W,N,V_hitTestExtenderView
setSourceLayer:
T@"UIView",W,N,V_tabShadowView
setTetheredViewController:mode:
T@"UIViewPropertyAnimator",W,N,V_highlightAnimator
setupStopAnimated:needsApplicationActivation:completionHandler:
T@,&,N,SPG_setCompositingFilter:
snapshotViewAfterScreenUpdates:
T@?,C,N,V__pipStopFinalStageCompletionHandler
stashedTabWidth
T@?,C,N,V_actions
systemImageName
T@?,C,N,V_waitForUIFinalizationCompletionBlock
updateMenuItems
T@?,R,C,N,V_linkFired
willAnimatePictureInPictureStop
TB,GisExemptFromUILockInterruptionsWhenActive
.cxx_destruct
PG_cornerRadius
PG_allowsEdgeAntialiasing
T@"UIImage",R,N
PG_anchorPoint
TB,R,N,GisMuted
PG_animateUsingDefaultTimingWithAnimations:completion:
Td,N,V_progress
PG_appProxyWithDebugMethodAndPointerProem:
__actuallyStartWithAnimationType:successHandler:failureHandler:
PG_backdropGroupLeader
_action
PG_constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:priority:
_beginDeactivatingPictureInPictureWithAnimationType:stopReason:
PG_hasMenuItemProviderEntitlement
_commandHandler
PG_performWithoutAnimation:
_frameForInteractiveTransitions
PG_preferredVisibilityForView:
_integerForKey:
PG_remoteObjectProxyWithDebugMethodAndPointerProem:
_isICSVideoCall
PG_remoteObjectWithDebugMethodAndPointerProem:
_mainBodyBounds
PG_removeVibrancyEffect
_prefersHiddenFromClonedDisplay
PG_setAllowsGroupBlending:
_resourcesUsageReductionReasons
PG_setCompositingFilter:
_stashTabHidden
PG_wantsVibrancyEffect
_values
T@"<PGBackgroundPIPServiceDelegate>",W,N,V_delegate
_viewController
T@"<PGCommandHandler>",W,N,V_commandHandler
acquireWithInvalidationHandler:
T@"<PGPictureInPictureAnalyticsDelegate>",W,N,V_analyticsDelegate
actions
T@"<PGPictureInPictureProxyDelegate>",W,N
addInteraction:
T@"<PGPictureInPictureViewControllerContentContainer>",W,N,V_contentContainer
backgroundColor
T@"<_PGBackgroundPIPServiceConnectionTargetDelegate>",W,N,V_delegate
builder
T@"BSServiceQuality",R,C,N
buttonWithType:
T@"NSArray",C,N,V_menuItems
cancelButtonBackgroundTintColor
T@"NSDictionary",R,N,V_dictionaryRepresentation
containsObject:
T@"NSMutableDictionary",R,N,V_dictionaryRepresentation
coordinateSpace
T@"NSObject<OS_dispatch_queue>",R,N
descriptionWithMultilinePrefix:
T@"NSSet",R,N
didMoveToWindow
T@"NSString",C,N
domainGroupName
T@"NSString",C,N,V_systemImageName
filterWithType:
T@"NSString",R,C,N
handleDoubleTap
T@"NSString",R,C,N,V_appBundleIdentifier
hasEntitlement:
T@"NSString",R,N
includesContentLoadingIndicator
T@"NSString",R,N,V_sourceSceneSessionPersistentIdentifier
isEqualToArray:
T@"PGButtonView",R,N,V_skipPrerollButtonView
isMuted
T@"PGCABackdropLayer",R,D,N
isProxy
T@"PGControlsViewModel",R,N
isValid
T@"PGControlsViewModelValues",R,C,N,V_values
materialFilters
T@"PGHostedWindowHostingHandle",&,N
numberWithBool:
T@"PGHostedWindowHostingHandle",R,N
preferredHeight
T@"PGPictureInPictureApplication",R,N,V_pictureInPictureApplication
release
T@"PGPictureInPictureRemoteObject",&,N,V_tetheredRemoteObject
runLoopObserver
T@"PGPictureInPictureViewController",R,N,V_pictureInPictureViewController
session
T@"PGPictureInPictureViewController",R,W,N,V_tetheringViewController
setAdjustsImageWhenHighlighted:
T@"PGPlaybackState",R,C,N,V_playbackState
setBorderColor:
T@"PGPlaybackStatePrerollAttributes",&,N
setCaptureOnly:
T@"UIColor",&,N,V_customElapsedTrackTintColor
setCornerCurve:
T@"UIFont",C,N
setFrameOrigin:
T@"UILabel",R,N,V_contentTypeLabel
setHighlighted:
T@"UIView",R,N
setProxyActive:
T@"UIView",W,N,V_sourceView
setTargetQueue:
T@"UIViewController<PGPictureInPictureViewController>",R,N,V_viewController
setWithObjects:
T@"_PGButton",&,N,V_actualButton
skipForwardButtonImageTintColor
T@,R,W,N,V_owner
stashed
T@?,C,N,V__pipStopUserInterfaceRestoreContinuationBlock
suspend
T@?,C,N,V_coordinatedAnimationsForControlsVisibiity
traitCollection
T@?,R,C,N,V_action
updatePictureInPicturePossible:
T@?,R,C,V_stateTransitionHandler
willMoveToParentViewController:
TB,GisProxyActive
TB,N
TB,N,GisBackdropHidden
TB,N,GisCameraActive
TB,N,GisCircular,V_circular
TB,N,GisHighlighted,V_highlighted
TB,N,GisInActivitySession,V_inActivitySession
TB,N,GisInteractivelyResizing,V_interactivelyResizing
TB,N,GisInterrupted
TB,N,GisInterrupted,V_interrupted
TB,N,GisMicrophoneMuted
TB,N,GisMuted
TB,N,GisPictureInPicturePossible
TB,N,GisPictureInPictureStashed,V_stashed
TB,N,GisReadyForDisplay,V_readyForDisplay
TB,N,GisRoutingVideoToHostedWindow
TB,N,GisShowingControlsForHoverActive,V_showingControlsForHoverActive
TB,N,SPG_setAllowsEdgeAntialiasing:
TB,N,SPG_setAllowsGroupBlending:
TB,N,V_canStartShowingChrome
TB,N,V_ignoreCornerRadiusUpdates
TB,N,V_includesWaitingToPlayIndicator
TB,N,V_prefersControlsHidden
TB,N,V_prefersStashTabSuppressed
TB,N,V_showsPictureInPictureUnavailableIndicator
TB,N,V_stashed
TB,R
TB,R,GisInterrupted
TB,R,N
TB,R,N,GisConnectionActive
TB,R,N,GisInterrupted
TB,R,N,GisPictureInPictureActive
TB,R,N,GisPictureInPictureActive,V_pictureInPictureActive
TB,R,N,GisPictureInPictureInterrupted
TB,R,N,GisPictureInPicturePossible
TB,R,N,GisPictureInPictureStashedOrUnderLock,V_pictureInPictureStashedOrUnderLock
TB,R,N,GisPictureInPictureSuspended
TB,R,N,GisRoutingVideoToHostedWindow
TB,R,N,GisVideoCall
TB,R,N,V_prefersHiddenFromClonedDisplay
TQ,R
TQ,R,N,V_resourcesUsageReductionReasons
T^{__CFRunLoopObserver=},N,V_runLoopObserver
Td,N
Td,N,V_blurProgress
Td,N,V_cornerRadiusScale
Td,N,V_currentContentCornerRadius
Td,N,V_glyphSize
Td,N,V_shadowContinuousCornerRadius
Td,N,V_shadowOffsetX
Td,N,V_shadowOffsetY
Td,N,V_shadowOpacity
Td,N,V_shadowRadius
Td,N,V_stashedTabWidth
Td,R,N
Ti,R,N,V_processIdentifier
Tq,N
Tq,N,V_controlsStyle
Tq,R,N
Tq,R,N,V_controlsStyle
Tq,R,N,V_currentState
Tq,R,N,V_tetheringMode
T{CGPoint=dd},N,SPG_setAnchorPoint:
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_initialLayerFrameForInteractiveTransitionAnimationUponBackgrounding
T{CGSize=dd},N,V_labelSize
T{CGSize=dd},N,V_microPIPSize
T{CGSize=dd},N,V_minimumStashTabSize
T{CGSize=dd},R,N,V_preferredContentSize
UTF8String
UUID
UUIDString
_UILockedResourcesUsageReductionReasons
__actuallyStopAnimated:reason:completionHandler:
__actuallyStopAnimated:reason:finalLayerFrame:finalInterfaceOrientation:completionHandler:
__coordinateStartAnimated:withCompletionHandler:
__didStartWithAnimationType:completionHandler:
__pipStopFinalStageCompletionHandler
__pipStopUserInterfaceRestoreContinuationBlock
__restoreUserInterfaceAnimated:reason:completionHandler:
__setConnection:
__setupStartWithAnimationType:initialLayerFrame:successHandler:failureHandler:
__setupStopAnimated:needsApplicationActivation:successHandler:failureHandler:
__setupStopAnimated:needsApplicationActivation:waitForApplicationActivation:successHandler:failureHandler:
__updateCancellationPolicyWithSuccessHandler:failureHandler:
__waitForApplicationActivationWithSuccessHandler:failureHandler:
_acquireOrInvalidateProcessAssertionIfNeeded
_acquirePreventAutoHideOfControlsAssertionWithReason:
_acquired
_actionButton
_actions
_activationState
_activePictureInPictureApplication
_activePictureInPictureRemoteObjects
_activitySessionIdentifier
_activitySessionIdentifierForLastActivePIPSession
_actualButton
_addDependent:
_addMaskViewSubviewIfNeeded
_addRemoteObject:
_addViewControllerToHostedWindowIfNeeded
_addWindowSceneActivationStateObserverIfNeeded:
_allButtons
_analyticsDelegate
_analyticsSessionUUID
_analyticsSourceUUID
_animateUsingDefaultDampedSpringWithDelay:initialSpringVelocity:options:animations:completion:
_animateUsingDefaultTimingWithOptions:animations:completion:
_animateUsingSpringBehavior:tracking:animations:completion:
_animatedLayerProperties
_appBundleIdentifier
_application
_applicationDidBecomeActive
_applicationKeyWindow
_applyPulseState
_applyShadowSettingsToView:
_assertion
_attribution
_automaticallyInterruptsForLegacyFaceTimeBehaviors
_averageColorFilter
_backdropLayerView
_backdropView
_backgroundColor
_backgroundPIPService
_beginDeactivatingPictureInPicture
_bestKnownConnectedSceneSessionPersistentIdentifier
_blurProgress
_boolForKey:
_bs_hash
_bundleIdentifier
_buttonView
_canBeShownInMicroPIPMode
_canBecomeKeyWindow
_canSendPlaybackState
_canStartShowingChrome
_canTransitionToState:
_cancelButton
_cancelPictureInPictureFinishTaskAssertion
_cancelPrewarming
_captureOnlyView
_circular
_clientSessionIdentifier
_clientSessionIdentifierAccordingToRemoteObject
_completeTrack
_connection
_connectionListener
_considerStashedPlaybackAsBackgroundAudioTimer
_containerView
_containerViewVisibilityAnimator
_contentClippingView
_contentContainer
_contentContainerRespondsTo
_contentLoadingIndicator
_contentLoadingIndicatorContainerView
_contentTypeLabel
_contentView
_contextId
_continuousCornerRadius
_controlsContainerView
_controlsShouldAutoHide
_controlsStyle
_controlsView
_coordinatedAnimationsForControlsVisibiity
_cornerRadius
_cornerRadiusScale
_currentAnimationDuration
_currentContentCornerRadius
_currentCustomImage
_currentGlyphImageName
_currentGlyphSize
_currentState
_currentStateAllowsProcessAssertion
_customBackgroundColor
_customElapsedTrackTintColor
_darkTintView
_deactivateIfNeededForInterruptedOrInvalidatedConnection
_delegate
_delegateRespondsTo
_dependents
_dictionaryForKey:
_dictionaryRepresentation
_dimmingView
_displayLink
_displayLinkForProgressUpdates
_doubleDoubleTapGestureRecognizer
_doubleForKey:
_doubleTapGestureRecognizer
_elapsedTrack
_endDeactivatingPictureInPictureIfNeededWithAnimationType:stopReason:
_endDeactivatingPictureInPictureIfNeededWithAnimationType:stopReason:cleanupHandlerOrNil:
_ensureDependents
_ensureMutableDictionary
_enumerateDependents:
_error
_establishConnection
_executeDelegateCallbackBlock:assumeApplicationActive:
_exemptAttribution
_expectedScene
_explanation
_externalResourcesUsageReductionReasons
_faceTimeVideoCallInterruptionExemption
_faceTimeVideoCallRemoteObject
_finishCleanup
_finishTaskInvalidationUUID
_gaussianBlurFilter
_generatePlaybackStateDiffAndMarkAsSent
_glyphSize
_groupLeader
_groupNameBase
_handleDoubleDoubleTapGestureRecognizer:
_handleDoubleTapGestureRecognizer:
_handleDragEnter:
_handleDragExit:
_handleHoverGestureRecognizer:
_handleInvalidatedTarget:
_handleSceneConnectionChangedNotification:
_handleSingleTapGestureRecognizer:
_handleTapWhileStashedGestureRecognizer:
_handleTouchDown:
_handleTouchUpInside:
_handleTouchUpOrCancel:
_hasActiveNonVideoCallRemoteObjectAuthorizedForBackgroundPIP
_hasAnyDependentsThatWantsCapturedBlur
_hasBegun
_hasBegunTwoStageStop
_hasPendingCancellationRequest
_hasPendingStopRequest
_hidableControlsVisibilityAnimator
_hidableItemsLayoutContainerView
_hideControlsAfterDelayTimer
_highlightAnimator
_highlighted
_hitTestExtenderView
_hostedWindow
_hostedWindowHostingHandle
_hoverGestureRecognizer
_identifiersForAuthorizedActivitySessions
_ignoreCornerRadiusUpdates
_image
_inActivitySession
_inFlightStashProgressAnimationIdentifier
_inFlightStashTabAnimationIdentifier
_initialLayerFrameForInteractiveTransitionAnimationUponBackgrounding
_initialLayerFrameIsNull
_initializeWithControlsStyle:viewController:reason:
_insertContentContainerViewIfNeeded
_interactivelyResizing
_interfaceOrientationForTransitionAnimationAssumeApplicationActive:
_interrupted
_interruptionAssistant
_interruptionBeganFinishTaskAssertion
_interruptionDimmingView
_interruptionsDescription
_invalidateAllAssertions
_invalidateForFailureToStartStopOrCancel
_invalidateInterruptionBeganFinishTaskAssertion
_invalidateTimer
_invalidated
_invalidationTimerWithTimeout:
_invalidationTimerWithTimeout:block:
_isAppICS
_isAssociatedWithOtherObject:
_isCaptureOnly
_isChevronShownLeft
_isHostedWindowSizeChangeDuringPinchGesture
_isInAWindow
_isInActivitySession
_isInCallService
_isInViewService
_isInactive
_isInterruptedForAnyReason
_isInterruptedForDefaultReason
_isInterruptedForStash
_isInvalidated
_isMicroPIP
_isObservingViewController
_isPictureInPictureActive
_isPictureInPicturePossible
_isPictureInPictureSuspended
_isShowingChrome
_isSuspended
_isTransparentOrHasTransparentAncestor
_isUnderLock
_isViewControllerWindowSceneActive
_isViewControllerWindowSceneConsideredActive
_isWindowServerHostingManaged
_labelSize
_lastKnownElapsedTime
_layerHostView
_layoutContentTypeLabel
_layoutSkipPrerollButton
_layoutStashTabViewsIfNeeded
_leftChevron
_leftSideContentPortalView
_legacyPictureInPictureInterruptionBegan
_legacyPictureInPictureInterruptionEnded
_lightTintView
_link
_linkFired
_linkFired:
_listener
_listenerQueue
_liveIndicatorBadgeButton
_loadShadowViewIfNeeded
_loadTabShadowViewIfNeeded
_loadedTimeRanges
_lock
_lock_allowsResumingAfterInterruptionEnds
_lock_bundleIdentifier
_lock_calculateIsInterrupted
_lock_connection
_lock_connectionIfInterrupted
_lock_exemptAttribution
_lock_exemptFromUILockInterruptionsWhenActive
_lock_interruptions
_lock_invalidated
_lock_isInterrupted
_lock_isInterruptedAccordingToProxy
_lock_isProxyActive
_lock_pictureInPictureRemoteObjects
_lock_state
_lock_targets
_lock_targetsByActivitySessionIdentifier
_mainBody
_manageSharingOfTouchesBetweenClientAndHostContext
_markConnectionAsInterrupted
_menuItems
_microPIPHostedWindowHostingHandle
_microPIPSize
_minimumStashTabSize
_mutableDictionary
_mutableIdentifiersForAuthorizedActivitySessions
_needsReinitialization
_newShadowView
_noteTetheringDidUpdate
_notifyActionButtonTapped
_notifyProxyOfStashedOrUnderLock:
_numberForKey:
_objectForKey:
_owner
_performLayout
_performStartAnimationWithCompletionHandler:
_performStopAnimationWithFinalInterfaceOrientation:finalLayerFrame:completionHandler:
_performVisibilityTransitionAnimated:existingAnimator:animations:success:
_performWithoutRetargetingAnimations:
_pictureInPictureActive
_pictureInPictureApplication
_pictureInPictureApplications
_pictureInPictureProxy
_pictureInPictureRemoteObjects
_pictureInPictureRemoteObjectsSupportingActiveSessionCancellationOnStart
_pictureInPictureShouldStartWhenEnteringBackground
_pictureInPictureStartedAutomatically
_pictureInPictureStashedOrUnderLock
_pictureInPictureWasStartedWhenEnteringBackground
_pipStopFinalStageCompletionHandler
_pipStopUserInterfaceRestoreContinuationBlock
_playbackProgress
_playbackRate
_playbackState
_playbackStateAccordingToRemoteObject
_pointerInteraction
_portalsWereActive
_portalsWereActiveLeft
_preferredBackgroundColor
_preferredContentSize
_preferredEffect
_preferredFramesPerSecond
_prefersControlsHidden
_prefersIdleTimerDisabled
_prefersStashTabSuppressed
_prerollAttributes
_prerollIndicatorFrameWithScaling:
_prerollIndicatorView
_preventAutoHideOfControlsAssertion
_preventAutoHideOfControlsAssertionIdentifiers
_prewarmAndStartAfterTimeout
_prewarmingTimeoutTimer
_processAssertion
_processIdentifier
_progress
_progressIndicator
_progressIndicatorFrameWithScaling:
_pulseAnimator
_pulseState
_queue
_queue_notifyProxyOfInterruptionBegan
_queue_notifyProxyOfInterruptionEnded
_queue_outstandingRotationAnimationsCount
_readyForDisplay
_remoteObject
_remoteObjectForPictureInPictureApplication:passingTest:error:
_remoteObjectForPictureInPictureApplication:sceneSessionPersistentIdentifier:error:
_remoteObjectForTestApplicationWithBundleIdentifier:
_remoteObjectThatCanCancelPictureInPictureApplication:sceneSessionPersistentIdentifier:error:
_remoteObjectThatCanEndTwoStageStopPictureInPictureApplication:error:
_remoteObjectThatCanStopPictureInPictureApplication:sceneSessionPersistentIdentifier:error:
_remoteObjectThatRequestedStop
_remoteObjectThatShouldStartPictureInPictureEnteringBackgroundForPictureInPictureApplication:sceneSessionPersistentIdentifier:error:
_remoteObjectWithErrorHandler:
_remoteObjectsForPictureInPictureApplication:
_remoteView
_removeDependent:
_removeRemoteObject:
_removeViewControllerFromHostedWindowIfNeeded
_resetInternalState
_resetStashTabViewsIfPossible
_restoreButton
_restoreInterruptedConnectionIfNeeded
_rightChevron
_rightSideContentPortalView
_rootViewController
_runLoopObserver
_sceneSessionPersistentIdentifier
_sceneSessionPersistentIdentifierAccordingToRemoteObject
_setActivationState:reason:
_setBool:forKey:
_setContinuousCornerRadius:
_setControlsHidden:animated:
_setCornerRadius:
_setCurrentState:
_setDictionaryOrNotFound:forKey:
_setDouble:forKey:
_setInteger:forKey:
_setInterruptedForDefaultReason:initiatedByRemoteObject:
_setInvalidated:
_setMaybeNeedsUpdatePlaybackState
_setPictureInPictureActive:
_setPictureInPicturePossible:
_setPictureInPictureSuspended:
_setPortalActive:left:
_setPrefersControlsHidden:animated:
_setQueue:
_setResolvedResourcesUsageReductionReasons:
_setResourcesUsageReductionReasons:
_setStashMaskActive:
_setStashedOrUnderLock:reason:
_setStashedTabHidden:left:
_setStateValue:forKey:
_setTextColorFollowsTintColor:
_setUILockedResourcesUsageReductionReasons:
_settings
_shadowContinuousCornerRadius
_shadowOffsetX
_shadowOffsetY
_shadowOpacity
_shadowRadius
_shadowView
_shouldAnimatePropertyWithKey:
_shouldCancelActivePictureInPictureOnStart
_shouldCancelUponActivation
_shouldDisablePointerInteraction
_shouldHitTest
_shouldPullCancellationPolicyOnStart
_shouldShowAlternateActionButtonImage
_shouldShowLoadingIndicator
_shouldStopUponActivation
_showingControlsForHoverActive
_showsDimmingView
_showsPictureInPictureUnavailableIndicator
_singleTapGestureRecognizer
_skipForwardButton
_skipPrerollButtonView
_sourceScene
_sourceSceneSessionPersistentIdentifier
_sourceView
_startBackgroundPIPAssertion
_startBackgroundPIPWhilePrewarmingIfNeeded
_startPictureInPictureAnimated:enteringBackground:reason:withCompletionHandler:
_startedAutomatically
_stashMaskView
_stashTabShownLeft
_stashTabSpringBehavior
_stashView
_stashed
_stashedTabWidth
_stashedTapGestureRecognizer
_stateCaptureInvalidatable
_stateDumpInvalidatable
_stateTransitionHandler
_stopObservingWindowSceneActivationState
_stopPictureInPictureAnimated:restoreUserInterface:withCompletionHandler:
_stopTethering
_stringForKey:
_subviewTransform
_suspendedPictureInPictureRemoteObject
_synchronizeDrawingWithFence:
_synchronizedDrawingFence
_systemAnimationFenceExemptQueue
_systemImageName
_tab
_tabBottomCornerFill
_tabHidden
_tabLeftBottomCornerDestOut
_tabLeftTopCornerDestOut
_tabRightBottomCornerDestOut
_tabRightTopCornerDestOut
_tabShadowView
_tabShownLeft
_tabTopCornerFill
_targetForIdentifier:
_tetheredRemoteObject
_tetheredViewController
_tetheringMode
_tetheringRemoteObject
_tetheringViewController
_timerForInvalidatingIfStopOrCancelFails
_touchDeliveryPolicyAssertion
_transitionToPulseStateIfNeeded:
_transitionToState:
_twoStageStopForPictureInPictureRestoreWithContinueAfterUserInterfaceRestoreBlock:completionHandler:
_updateActiveProxyAndViewControllerOfInterruptionIfNeeded
_updateAllRemoteObjectsForPIPPossibleAndExemptAttributions
_updateAutoPIPSettingsAndNotifyRemoteObjectIfNeeded
_updateAutoPIPSettingsAndNotifyRemoteObjectWithReason:
_updateContentCornerRadiusForMaskActive:
_updateCornerRadii
_updateElapsedTrackTintColor
_updateFaceTimePlaybackStateUsingBlock:
_updateFilters
_updateForCircularAppearanceIfNeeded
_updateGlyphConfigurationIfNeeded
_updateHideControlsAfterDelayTimer
_updateInteractiveFrameWorkaroundFor_100127310:
_updateIsInterruptedIfNeededForReason:
_updateIsInterruptedIfNeededForReason:initiatedByRemoteObject:
_updatePictureInPictureActive:
_updatePlaybackStateContentTypeIfNeeded
_updatePlaybackStateIfNeeded
_updatePointerEffect
_updatePreferredContentSize:withCompletionHandler:
_updatePulseAnimatorIfNeeded
_updateScreenSharingInfoIfNeeded
_updateStashTabStateWithBehavior:
_updateViewModelValues
_updateVisibilityOfView:hidden:animated:existingAnimator:
_viewFrameForInteractiveTransitionAnimationWhenEnteringBackgroundDidChangeForViewControllerWithReason:
_viewFrameForTransitionAnimationAssumeApplicationActive:
_viewModel
_waitForUIFinalizationCompletionBlock
_wantsCapturedBlur
_wantsProcessAssertion
_windowSceneActivationStateObserver
_windowSceneForInteractiveTransitionAnimationWhenEnteringBackgroundDidChangeForViewControllerWithReason:
accessibilityIdentifier
acquireWithTarget:domainAttribute:
action
actionButtonAccessibilityIdentifier
actionButtonImageTintColor
actionButtonSystemImageName
actionButtonTapped
actionButtonsWantBackground
actionWithSettingsKeyPath:
activate
activateBackgroundPIPAuthorizationService
activateConstraints:
activePictureInPictureApplication
activePictureInPictureApplications
activeSceneSessionIdentifiersByApplication
activitySessionIdentifier
actualButton
addChildViewController:
addCompletion:
addEntriesFromDictionary:
addGestureRecognizer:
addKeyPathObserver:
addObject:
addObserver:forKeyPath:options:context:
addObserver:selector:name:object:
addObserverForName:object:queue:usingBlock:
addReason:attribution:
addSubview:
addTarget:action:forControlEvents:
addToRunLoop:forMode:
allowsEdgeAntialiasing
allowsGroupBlending
allowsResumingAfterInterruptionEnds
alpha
analyticsDelegate
anchorContentTime
anchorPoint
anchorWallTime
animateViewWithAnimationType:initialSpringVelocity:animations:completion:
animateWithDuration:delay:options:animations:completion:
animatedLayerProperties
anyObject
appBundleIdentifier
appendBodySectionWithName:multilinePrefix:block:
appendBool:withName:
appendDescriptionForKey:value:toBuilder:
appendDouble:withName:decimalPrecision:
appendInteger:
appendInteger:withName:
appendString:
appendString:withName:
appendString:withName:skipIfEmpty:
application
applicationInfoForPID:completion:
applicationState
array
arrayWithObject:
arrayWithObjects:count:
assertionWithDomainAttribute:forProcessWithIdentifier:explanation:
associatedBoolValue
associatedDoubleValue
associatedIntegerValue
attributeWithCompletionPolicy:
attributeWithDomain:name:
attribution
auditToken
automaticallyInterruptsForLegacyFaceTimeBehaviors
autorelease
backdropHidden
backdropScale
backgroundAudioPolicy
backgroundPIPService:canAuthorizeBackgroundPIPForActivitySessionWithIdentifier:appBundleIdentifier:
backgroundPIPService:didGrantBackgroundPIPAuthorizationForActivitySessionWithIdentifier:
backgroundPIPService:didRevokeBackgroundPIPAuthorizationForActivitySessionWithIdentifier:
backgroundPIPTargetDidInvalidate:
backgroundPIPTargetRequestsAuthorization:
begin
beginIgnoringInteractionEvents
beginTwoStagePictureInPictureStopByRestoringUserInterfaceWithCompletionHandler:
beginTwoStageStopPictureInPictureByRestoringUserInterfaceWithCompletionHandler:
beginTwoStageStopPictureInPictureForApplication:withSceneSessionPersistentIdentifier:animated:byRestoringUserInterfaceWithCompletionHandler:
blackColor
blurProgress
boolValue
bounds
bs_containsObjectPassingTest:
bs_firstObjectPassingTest:
build
builderWithObject:
bundle
bundleIdentifier
bundleInfoValueForKey:PID:
button
buttonView
buttonView:contentEdgeInsetsForProposedInsets:
buttonView:imageRectForContentRect:proposedRect:
buttonView:titleRectForContentRect:proposedRect:
buttonViewDidReceiveTouchUpInside:
buttonWithDelegate:
cameraActive
cameraHasMicrophone
cameraInterruptionAttributions
canActivateUntetheredAlongsideOtherObject:
canBecomeFirstResponder
canCancelPictureInPicture
canEndTwoStageStopPictureInPicture
canPreventOrSuspendRemoteObject:
canStartBackgroundPIPForCurrentActivitySessionIdentifier
canStartMicroPIP
canStartShowingChrome
canStopPictureInPicture
canTetherRemoteObjectAsMicroPIP:
cancel
cancelButtonAccessibilityIdentifier
cancelButtonCustomImage
cancelButtonCustomText
cancelButtonImageTintColor
cancelButtonSystemImageName
cancelButtonWantsBackground
cancelPictureInPictureForApplication:
cancelPictureInPictureForApplication:sceneSessionPersistentIdentifier:
captureOnly
center
checkActivePictureInPictureCancellationPolicyWithCompletion:
childViewControllers
circular
class
cleanupWithCompletionHandler:
clearColor
clientSessionIdentifier
colorWithRed:green:blue:alpha:
colorWithWhite:alpha:
commandForBeginInterruption
commandForCancelPIP
commandForEndInterruptionWithShouldResumeSuggestion:
commandForEndOrLeaveActivityRequested
commandForFaceTimeAction:
commandForFaceTimeAction:associatedBoolValue:
commandForFaceTimeAction:associatedIntegerValue:
commandForInvalidateFromProxy
commandForMenuItemSelected:
commandForPlaybackAction:
commandForPlaybackAction:associatedBoolValue:
commandForPlaybackAction:associatedDoubleValue:
commandForRestoreFromPIP
commandForSendActionButtonTapped
commandForSetCameraEnabled:
commandForSetMicrophoneMuted:
commandForSetMuted:
commandForSetPlaying:
commandForSetSuspended:
commandForShowHUD
commandForSkipByInterval:
commandForSkipPreroll
commandForSkipToLive
commandForStartPIP
commandForSwitchCamera
commandForSystemAction:
commandForTestStartPIP
commandForTestingAction:
commandForToggleControlsVisibility
commandForToggleZoom
commandHandler
commit
componentsJoinedByString:
compositingFilter
configurationWithFont:
configureConnection:
conformsToProtocol:
connection
connectionActive
connectionWithEndpoint:
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:
constraintsWithVisualFormat:options:metrics:views:
containsPoint:
contentContainer
contentContainerView
contentEdgeInsets
contentType
contentTypeLabel
contentTypePictureInPictureApplication:sceneSessionPersistentIdentifier:
contentView
contextID
controlsShouldAutoHide
controlsStyle
controlsViewModel:didIssueCommand:
controlsViewModel:valuesChangedFromOldValue:
convertPoint:fromView:
convertPoint:toView:
convertRect:fromCoordinateSpace:
coordinatedAnimationsForControlsVisibiity
copy
copyWithExemptAttribution:
copyWithZone:
cornerRadiusScale
count
countByEnumeratingWithState:objects:count:
currentConnection
currentContentCornerRadius
currentHandler
currentState
customBackgroundColor
customElapsedTrackTintColor
darkGrayColor
deactivateAnalyticsSessionIfNeeded
debugDescription
defaultCenter
defaultContentCornerRadius
defaultPrerollTintColor
defaultShellMachName
defaultValueForKey:
delegate
dependents
description
descriptionBuilderWithMultilinePrefix:
dictionary
dictionaryRepresentation
dictionaryWithCapacity:
dictionaryWithObjects:forKeys:count:
didAnimatePictureInPictureStop
didChangeValueForKey:
didMoveToParentViewController:
didMoveToSuperview
diffFromPlaybackState:
disableUpdateMask
disabledTintColor
disablesLayerCloning
displayLink
displayScale
domainName
doubleValue
effectWithPreview:
elapsedTime
enabledTintColor
endIgnoringInteractionEvents
endTwoStagePictureInPictureStopWithCompletionBlock:
endTwoStageStopPictureInPictureForApplication:withSceneSessionPersistentIdentifier:animated:completionHandler:
endTwoStageStopPictureInPictureWithCompletionBlock:
endpoint
endpointForMachName:service:instance:
enumerateKeysAndObjectsUsingBlock:
errorWithDomain:code:userInfo:
exemptAttribution
exemptFromUILockInterruptionsWhenActive
existingPictureInPictureApplicationForBundleIdentifier:
faceTimeAction
finishAnimationAtPosition:
fixedCoordinateSpace
flashControls
font
fontDescriptor
fontDescriptorByAddingAttributes:
fontWithDescriptor:size:
frame
gaussianBlurRadius
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveEvent:
gestureRecognizer:shouldReceivePress:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizerShouldBegin:
getRed:green:blue:alpha:
glyphSize
grantAuthorizationForActivitySessionWithIdentifier:bundleIdentifier:
groupLeader
groupName
handleActionButtonTapped
handleCancelButtonTapped
handleCommand:
handleDoubleDoubleTap
handleDoubleTapGesture
handleFailureInFunction:file:lineNumber:description:
handleFailureInMethod:object:file:lineNumber:description:
handleRestoreButtonTapped
handleSkipBackButtonTapped
handleSkipForwardButtonTapped
handleSkipPrerollButtonTapped
handleTapWhileStashedGesture
hasAcquiredAuthorizationForActivitySessionWithIdentifier:appBundleIdentifier:
hasInterruptionReason:
hasInvalidTiming
hash
highlightAnimator
highlighted
hitTest:withEvent:
hitTestExtenderView
hostedWindowHostingHandle
hostedWindowSizeChangeBegan
hostedWindowSizeChangeEnded
hostingHandle
identifier
identifiersForAuthorizedActivitySessions
ignoreCornerRadiusUpdates
image
imageForState:
imageRectForContentRect:
imageView
imageWithRenderingMode:
inActivitySession
includesActionButton
includesCancelButton
includesDoubleDoubleTapGestureRecognizer
includesDoubleTapGestureRecognizer
includesLiveIndicatorBadge
includesProgressBar
includesRestoreButton
includesSingleTapGestureRecognizer
includesSkipBackButton
includesSkipForwardButton
includesWaitingToPlayIndicator
init
initWithActivitySessionIdentifier:appBundleIdentifier:stateTransitionHandler:
initWithApplication:sourceSceneSessionPersistentIdentifier:controlsStyle:
initWithCoder:
initWithConnection:delegate:
initWithConnection:interruptionAssistant:
initWithControlsStyle:viewController:
initWithDelegate:
initWithDictionary:
initWithDictionary:action:
initWithDictionaryRepresentation:
initWithDuration:curve:animations:
initWithExplanation:
initWithExplanation:target:attributes:
initWithFrame:
initWithFrame:captureOnly:
initWithFrame:minimumStashTabSize:
initWithFrame:viewModel:
initWithIdentifier:forReason:invalidationBlock:
initWithImage:
initWithMachServiceName:
initWithMachServiceName:options:
initWithNibName:bundle:
initWithOwner:linkFired:
initWithPictureInPictureProxy:
initWithProcessIdentifier:
initWithReason:attribution:
initWithRequiredLinearPlaybackEndTime:preferredTintColor:contentType:
initWithTarget:action:
initWithTitle:symbolName:action:
initWithView:
initialFrameForInteractivePictureInPictureAnimationEnteringBackgroundForApplication:
initialFrameForInteractivePictureInPictureAnimationEnteringBackgroundForApplication:sceneSessionPersistentIdentifier:
initialLayerFrameForInteractiveTransitionAnimationUponBackgrounding
initializePictureInPictureWithControlsStyle:preferredContentSize:completionHandler:
insertSubview:atIndex:
insertSubview:belowSubview:
integerValue
interactivelyResizing
interface
interfaceOrientation
interfaceWithProtocol:
interfaceWithServer:client:
interrupted
invalidate
invokeAction
ipc_addPolicy:
isActionButtonEnabled
isAnimating
isAssociatedWithRemoteObject:
isBackdropHidden
isCameraActive
isCircular
isConnectionActive
isDescendantOfView:
isEnabled
isEqual:
isEqualToDictionary:
isEqualToNumber:
isEqualToPGPictureInPictureApplication:
isEqualToString:
isEquivalentToPlaybackState:
isExemptFromUILockInterruptionsWhenActive
isHidden
isHighlighted
isInActivitySession
isInteractivelyResizing
isInterrupted
isKindOfClass:
isMainThread
isMemberOfClass:
isMicrophoneMuted
isPaused
isPictureInPictureActive
isPictureInPictureInterrupted
isPictureInPicturePossible
isPictureInPictureStashed
isPictureInPictureStashedOrUnderLock
isPictureInPictureSupported
isPictureInPictureSuspended
isPrerollSkippable
isProxyActive
isReadyForDisplay
isRoutingVideoToHostedWindow
isRunning
isSkipBackButtonEnabled
isSkipForwardButtonEnabled
isStartingPictureInPicture
isStartingStoppingOrCancellingPictureInPicture
isStashTabHidden
isStoppingOrCancellingPictureInPicture
isStoppingOrCancellingPictureInPictureForApplication:sceneSessionPersistentIdentifier:
isVideoCall
isViewLoaded
keysForEqualityOfNumberValues
labelSize
labelText
labelWidth
layer
layerClass
layoutIfNeeded
layoutStashChevrons
layoutSubviews
length
linkFired
listener:didReceiveConnection:withContext:
listener:shouldAcceptNewConnection:
listenerWithConfigurator:
loadView
loadedTimeRanges
localizedDescription
localizedStringForKey:value:table:
mainBundle
mainRunLoop
mainScreen
maskView
matchesSceneSessionIdentifier:
menuItems
microPIPHostedWindowHostingHandle
microPIPSize
minValue:maxValue:
minimumStashTabSize
minusSet:
moduleWithTitle:contents:
mutableCopy
mutableDictionary
muted
name
normalizedProgress
noteDidNotifyProxyOfInterruptionBegan
noteDidNotifyProxyOfInterruptionEnded
notePictureInPictureStartedAutomatically:
notePictureInPictureViewControllerPrefersHiddenFromClonedDisplayDidChange
notePictureInPictureViewControllerTetheringDidUpdate
notePictureInPictureWillStopForAppRequest:preferredFullScreenRestore:
null
numberWithDouble:
numberWithInteger:
numberWithUnsignedInteger:
object
objectForKey:
objectForKeyedSubscript:
objectForSetting:
objectsPassingTest:
observeValueForKeyPath:ofObject:change:context:
openApplication:withOptions:completion:
optionsWithDictionary:
origin
owner
parentViewController
performAsync:
performResumeAnimationWithCompletionHandler:
performRotateAnimationWithRotation:completionHandler:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performStartAnimated:withCompletionHandler:
performStartAnimationWithCompletionHandler:
performStartInIsolationWithCompletionHandler:
performStopAnimated:withFinalInterfaceOrientation:finalLayerFrame:completionHandler:
performStopAnimationWithFinalInterfaceOrientation:finalLayerFrame:completionHandler:
performStopInIsolationWithCompletionHandler:
performSuspendAnimationWithCompletionHandler:
performWithoutAnimation:
persistenceIdentifier
persistentIdentifier
pg_hasVisiblePIPContent
pictureInPictureActive
pictureInPictureApplication
pictureInPictureApplicationWithProcessIdentifier:
pictureInPictureApplications
pictureInPictureCancelRequestedAnimated:withCompletionHandler:
pictureInPictureClientDidRequestStashing
pictureInPictureController:didCreatePictureInPictureViewController:
pictureInPictureController:didHidePictureInPictureViewController:
pictureInPictureController:didRequestStopForPictureInPictureViewController:sourceSceneSessionIdentifier:animated:
pictureInPictureController:requestActivationOfSceneWithPersistenceIdentier:pictureInPictureViewController:completion:
pictureInPictureController:shouldAuthorizeBackgroundPIPForAppWithBundleIdentifier:
pictureInPictureController:shouldCancelPictureInPictureForApplication:whenStartingPictureInPictureForApplication:
pictureInPictureController:shouldDenyNewConnection:
pictureInPictureController:willDestroyPictureInPictureViewController:
pictureInPictureController:willHidePictureInPictureViewController:
pictureInPictureControllerCanBackgroundStartForFaceTimeVideoCall:
pictureInPictureDidActivateAnalyticsSessionWithUUID:analyticsSourceUUID:automatically:
pictureInPictureDidChangeStashStateForAnalyticsSessionWithUUID:stashed:
pictureInPictureDidCreateAnalyticsSessionWithUUID:bundleIdentifier:contentType:
pictureInPictureDidCreateAnalyticsSourceWithUUID:bundleIdentifier:contentType:
pictureInPictureDidDeactivateAnalyticsSessionWithUUID:analyticsSourceUUID:appStoppedSession:restoredFullScreen:
pictureInPictureDidDestroyAnalyticsSessionWithUUID:
pictureInPictureDidDestroyAnalyticsSourceWithUUID:
pictureInPictureInterrupted
pictureInPictureInterruptionBegan
pictureInPictureInterruptionBeganWithReason:
pictureInPictureInterruptionBeganWithReason:attribution:
pictureInPictureInterruptionEnded
pictureInPictureInterruptionEndedWithReason:
pictureInPictureInterruptionEndedWithReason:attribution:
pictureInPictureInvalidated
pictureInPicturePossible
pictureInPictureProxy:didReceivePlaybackCommand:
pictureInPictureProxy:didReceiveTestingCommand:
pictureInPictureProxy:didRequestFaceTimeAction:
pictureInPictureProxy:didStartPictureInPictureWithAnimationType:
pictureInPictureProxy:didStopPictureInPictureWithAnimationType:reason:
pictureInPictureProxy:didUpdateResourcesUsageReductionReasons:oldReasons:
pictureInPictureProxy:didUpdateStashedOrUnderLockState:
pictureInPictureProxy:failedToStartPictureInPictureWithAnimationType:error:
pictureInPictureProxy:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:
pictureInPictureProxy:willStartPictureInPictureWithAnimationType:
pictureInPictureProxy:willStopPictureInPictureWithAnimationType:reason:
pictureInPictureProxyCanIssueOptionalCommand:
pictureInPictureProxyContentType:
pictureInPictureProxyInterfaceOrientationForTransitionAnimation:
pictureInPictureProxyPictureInPictureInterruptionBegan:
pictureInPictureProxyPictureInPictureInterruptionEnded:
pictureInPictureProxySupportsPrewarming:
pictureInPictureProxyViewControllerWindowForTransitionAnimation:
pictureInPictureProxyViewFrameForTransitionAnimation:
pictureInPictureProxyWillSetupPictureInPictureStop:
pictureInPictureProxyWithControlsStyle:viewController:
pictureInPictureRemoteObject:didCreatePictureInPictureViewController:
pictureInPictureRemoteObject:didHidePictureInPictureViewController:
pictureInPictureRemoteObject:didRequestPictureInPictureStopForViewController:sourceSceneSessionIdentifier:animated:
pictureInPictureRemoteObject:didShowPictureInPictureViewController:
pictureInPictureRemoteObject:requestActivationOfSceneWithPersistenceIdentier:completion:
pictureInPictureRemoteObject:willDestroyPictureInPictureViewController:
pictureInPictureRemoteObject:willHidePictureInPictureViewController:
pictureInPictureRemoteObject:willShowPictureInPictureViewController:
pictureInPictureRemoteObjectHasBackgroundPIPAuthorization:
pictureInPictureRemoteObjectInterruptionAssistant:
pictureInPictureRemoteObjectNeedsActivationAndInterruptionPolicyUpdate:
pictureInPictureRemoteObjectShouldAcceptSetupRequest:
pictureInPictureRemoteObjectShouldCancelActivePictureInPictureOnStart:
pictureInPictureRemoteObjectShouldUpdateCancellationPolicyOnStart:
pictureInPictureShouldStartWhenEnteringBackground
pictureInPictureStartRequestedAnimated:withCompletionHandler:
pictureInPictureStashedOrUnderLock
pictureInPictureStopRequestedAnimated:withCompletionHandler:
pictureInPictureSuspended
pictureInPictureViewController
pictureInPictureViewController:didReceiveCommand:
pictureInPictureViewController:didTransitionToStashed:
pictureInPictureViewController:updateHostedWindowSize:animationType:initialSpringVelocity:
pictureInPictureViewControllerDidRequestCancel:
pictureInPictureViewControllerDidRequestStop:
pictureInPictureViewControllerHostedWindowSizeChangeBegan:
pictureInPictureViewControllerHostedWindowSizeChangeEnded:
pictureInPictureViewControllerShouldHideTetheredViewControllerAlongsideControls:
pictureInPictureViewControllerWantsStashTabSuppression:
pictureInPictureWasStartedWhenEnteringBackground
pipDidStartForRemoteObject:
pipDidStopForRemoteObject:
pipVisibleAssertionForProcessWithIdentifier:explanation:
pipVisibleDomainAttribute
playbackAction
playbackProgress
playbackRate
playbackSourceDidUpdateIsRoutingVideoToHostedWindow:
playbackState
pointInside:withEvent:
pointerInteraction
pointerInteraction:regionForRequest:defaultRegion:
pointerInteraction:styleForRegion:
pointerInteraction:willEnterRegion:animator:
pointerInteraction:willExitRegion:animator:
policyRequiringSharingOfTouchesDeliveredToChildContextId:withHostContextId:
portalLayer
position
postNotificationName:object:
preferredContentSize
preferredContentSizeDidChangeForPictureInPictureViewController
preferredContentSizeDidChangeForViewController
preferredContentSizeForActivePictureInPictureWithApplication:sceneSessionPersistentIdentifier:
preferredContentSizeForInteractivePictureInPictureAnimationEnteringBackgroundForApplication:
preferredContentSizeForInteractivelyEnteringBackgroundForApplication:sceneSessionPersistentIdentifier:
preferredFramesPerSecond
preferredInterfaceOrientationForPresentation
preferredMinimumWidth
preferredTintColor
preferredTintColorDescription
prefersControlsHidden
prefersHiddenFromClonedDisplay
prefersIdleTimerDisabled
prefersStashTabSuppressed
prepareStartAnimationWithInitialInterfaceOrientation:initialLayerFrame:completionHandler:
prepareStopAnimationWithCompletionHandler:
prerollAttributes
prerollAttributesForAdContentWithRequiredLinearPlaybackEndTime:preferredTintColor:
prerollAttributesForSponsoredContentWithRequiredLinearPlaybackEndTime:preferredTintColor:
prerollTintColor
processIdentifier
progress
progressBarShouldUpdate
protocolForProtocol:
proxyActive
quaternaryLabelColor
queue
raise:format:
rangeOfString:
reason
recommendedUpdateCadenceForProgressBarWithWidthInPixels:
reducedTransparencyColor
relinquishInterfaceOrientationLock
remoteObjectProxyWithErrorHandler:
remoteProcess
remoteTarget
removeFromParentViewController
removeFromSuperview
removeGestureRecognizer:
removeInteraction:
removeObject:
removeObserver:forKeyPath:context:
removeObserver:name:object:
removeReason:attribution:
renderingMode
requiredLinearPlaybackEndTime
requiresLinearPlayback
resetChevronState
resourcesUsageReductionReasons
respondsToSelector:
restoreButtonAccessibilityIdentifier
restoreButtonSystemImageName
restoreButtonWantsBackground
restorePictureInPictureTestActionForApplicationWithBundleIdentifier:
resume
retain
retainCount
revoke
revokeAuthorization
revokeAuthorizationActivitySessionWithIdentifier:
rootSettings
rootSettingsClass
rotateContentContainer:withCompletionHandler:
routingVideoToHostedWindow
rowWithTitle:action:
rowWithTitle:valueKeyPath:
scale
scenesPassingTest:
scheduledTimerWithTimeInterval:repeats:block:
screen
secondaryLabelColor
secondsUntilPrerollSkippable
sectionWithRows:
sectionWithRows:title:
self
sendStartPictureInPictureTestAction
serviceQuality
setAccessibilityIdentifier:
setActions:
setActivationHandler:
setActivitySessionIdentifier:
setActualButton:
setAdjustsImageWhenDisabled:
setAllowsEdgeAntialiasing:
setAllowsGroupBlending:
setAllowsHitTesting:
setAlpha:
setAnalyticsDelegate:
setAnalyticsDelegate:analyticsSourceUUID:
setAnimatedLayerProperties:
setAnimationDuration:
setAssertionEndpoint:
setAutomaticallyInterruptsForLegacyFaceTimeBehaviors:
setBackdropHidden:
setBackdropScale:
setBackgroundAudioPolicy:
setBackgroundColor:
setBlurProgress:
setBounds:
setButtonView:
setCameraActive:
setCameraHasMicrophone:
setCanStartShowingChrome:
setCanSwitchCamera:
setCenter:
setChevronHidden:left:
setCircular:
setClasses:forSelector:argumentIndex:ofReply:
setClientSessionIdentifier:
setClipsToBounds:
setCommandHandler:
setCompositingFilter:
setContentContainer:
setContentCornerRadius:animated:
setContentDuration:
setContentEdgeInsets:
setContentViewHidden:
setContentsScale:
setControlsContainerHidden:animated:
setControlsStyle:
setControlsStyle:animated:withCompletionHandler:
setCoordinatedAnimationsForControlsVisibiity:
setCornerRadius:
setCornerRadiusScale:
setCurrentContentCornerRadius:
setCurrentResourcesUsageReductionReasons:
setCustomBackgroundColor:
setDefaultValues
setDelaysTouchesEnded:
setDelegate:
setDisableActions:
setDisablesLayerCloning:
setDomain:
setEnabled:
setExemptAttribution:
setExemptFromUILockInterruptionsWhenActive:
setExportedInterface:
setExportedObject:
setFilters:
setFont:
setFrame:
setGaussianBlurRadius:
setGlyphSize:
setGroupName:
setHidden:
setHighlightAnimator:
setHitTestExtenderView:
setHitTestsAsOpaque:
setHostedWindowHostingHandle:
setHoverGestureDisbaled:
setIgnoreCornerRadiusUpdates:
setImage:
setImage:forState:
setInActivitySession:
setIncludesWaitingToPlayIndicator:
setInteractivelyResizing:
setInterface:
setInterfaceTarget:
setInterruptionHandler:
setInvalidationHandler:
setLabelSize:
setLabelText:
setLineBreakMode:
setLoadedTimeRanges:
setMaskView:
setMatchesTransform:
setMenuItems:
setMicroPIPHostedWindowHostingHandle:
setMicroPIPSize:
setMicrophoneMuted:
setMinimumStashTabSize:
setMuted:
setName:
setNeedsLayout
setNumberOfTapsRequired:
setNumberOfTouchesRequired:
setObject:forKey:
setObject:forKeyedSubscript:
setObject:forSetting:
setOverrideUserInterfaceStyle:
setPaused:
setPg_hasVisiblePIPContent:
setPictureInPicturePossible:
setPictureInPictureShouldStartWhenEnteringBackground:
setPictureInPictureShouldStartWhenEnteringBackground:completionHandler:
setPlaybackProgress:playbackRate:
setPlaybackRate:elapsedTime:timeControlStatus:
setPointerInteraction:
setPosition:
setPreferredContentSize:
setPreferredFramesPerSecond:
setPreferredTintMode:
setPrefersControlsHidden:
setPrefersShadow:
setPrefersStashTabSuppressed:
setPrerollAttributes:
setPriority:
setProgress:
setReadyForDisplay:
setRemoteObjectInterface:
setRequiresLinearPlayback:
setResourcesUsageReductionReasons:
setRootViewController:
setRoutingVideoToHostedWindow:
setRunLoopObserver:
setScale:
setScreenSharingTitle:avatar:
setService:
setServiceQuality:
setShadowContinuousCornerRadius:
setShadowOffset:
setShadowOffsetX:
setShadowOffsetY:
setShadowOpacity:
setShadowPathIsBounds:
setShadowRadius:
setShouldDisablePointerInteraction:
setShowingControlsForHoverActive:
setShowsPictureInPictureUnavailableIndicator:
setSourceSceneSessionPersistentIdentifier:
setSourceView:
setStashProgress:
setStashTabHidden:left:withSpringBehavior:
setStashed:
setStashedOrUnderLock:
setStashedTabWidth:
setSupportsFaceTimeActions:
setSystemImageName:
setTabHidden:left:
setTabShadowView:
setTetheredRemoteObject:
setTetheringRemoteObject:
setTetheringViewController:mode:
setText:
setTextAlignment:
setTextColor:
setTimeRemainingText:
setTintColor:
setTitle:forState:
setTransform:
setTranslatesAutoresizingMaskIntoConstraints:
setUserInteractionEnabled:
setValue:forKey:
setValue:forKeyPath:
setVcForDebugging:
setView:
setWaitForUIFinalizationCompletionBlock:
setWithArray:
setWithCapacity:
set_pipStopFinalStageCompletionHandler:
set_pipStopUserInterfaceRestoreContinuationBlock:
settings
settings:changedValueForKeyPath:
settingsControllerModule
setupStartAnimated:hostedWindowHostingHandle:sceneSessionPersistentIdentifier:preferredContentSize:initialInterfaceOrientation:initialLayerFrame:completionHandler:
shadowContinuousCornerRadius
shadowOffsetX
shadowOffsetY
shadowOpacity
shadowRadius
sharedApplication
sharedInstance
shouldAutorotate
shouldNotifyProxyOfInterruptionBegan
shouldNotifyProxyOfInterruptionEnded
shouldShowAlternateActionButtonImage
shouldStartPictureInPictureEnteringBackground
shouldStartPictureInPictureForApplicationEnteringBackground:
shouldStartPictureInPictureForApplicationEnteringBackground:sceneSessionPersistentIdentifier:
showChrome:animated:
showingControlsForHoverActive
showsPictureInPictureUnavailableIndicator
sizeToFit
sizeWithAttributes:
skipBackButtonAccessibilityIdentifier
skipBackButtonBackgroundTintColor
skipBackButtonImageTintColor
skipBackButtonSystemImageName
skipForwardButtonAccessibilityIdentifier
skipForwardButtonBackgroundTintColor
skipForwardButtonSystemImageName
skipForwardButtonTappedWithTimeInterval:
skipPrerollButtonView
sourceSceneSessionPersistentIdentifier
sourceView
startAnimating
startAnimation
startListener
startMicroPIPIfPossibleForVideoCallWithScenePersistenceIdentifier:
startPictureInPicture
startPictureInPictureAnimated:completionHandler:
startPictureInPictureEnteringBackgroundAnimated:withCompletionHandler:
startPictureInPictureForApplicationEnteringBackground:animated:completionHandler:
startPictureInPictureForApplicationEnteringBackground:sceneSessionPersistentIdentifier:animated:completionHandler:
startPictureInPictureFromBackground
startPictureInPictureResourcesUsageReductionForApplication:requestingViewController:
startPictureInPictureTestActionForApplicationWithBundleIdentifier:
state
stateTransitionHandler
stopAnimating
stopAnimation:
stopPictureInPictureAndRestoreUserInterface
stopPictureInPictureAndRestoreUserInterface:
stopPictureInPictureAnimated:withCompletionHandler:
stopPictureInPictureAnimated:withFinalInterfaceOrientation:finalLayerFrame:completionHandler:
stopPictureInPictureForApplication:animated:completionHandler:
stopPictureInPictureForApplication:sceneSessionPersistentIdentifier:animated:completionHandler:
stopPictureInPictureResourcesUsageReductionForApplication:requestingViewController:
stringWithFormat:
stringWithUTF8String:
styleWithEffect:shape:
substringFromIndex:
substringToIndex:
subviews
succinctDescription
succinctDescriptionBuilder
superclass
superview
supportsFaceTimeActions
supportsMicroPIP
suspendedPictureInPictureApplication
symbolName
systemAction
systemFontOfSize:weight:
systemImageNamed:withConfiguration:
systemWhiteColor
systemYellowColor
tabShadowView
tabViewBounds
targetWithPid:
testingAction
tetherRemoteObject:toRemoteObject:mode:
tetherViewController:toViewController:mode:
tetheredRemoteObject
tetheredViewController
tetheringMode
tetheringModeForSceneSessionPersistentIdentifier:
tetheringRemoteObject
tetheringViewController
text
timeControlStatus
timeRemainingText
tintColor
tintColorDidChange
title
titleForState:
titleLabel
titleRectForContentRect:
transform
transientLocalSettings
transientTaskAssertionForProcessWithIdentifier:explanation:
transientTaskDomainAttribute
transitionToState:
transitionToStateIfPossible:
updateControlsAlpha
updateControlsHidden
updateEffects
updateHostedWindowSize:
updateHostedWindowSize:animationType:initialSpringVelocity:synchronizationFence:
updateInitialLayerFrameForInteractiveTransitionAnimationUponBackgrounding:withCompletionHandler:
updateMenuItems:
updatePlaybackStateUsingBlock:
updatePlaybackStateWithDiff:
updatePreferredContentSize:withCompletionHandler:
updateProgress
updateSourceSceneSessionPersistentIdentifierForInteractiveTransitionAnimationUponBackgrounding:withCompletionHandler:
updateValues
userInitiated
valueForEntitlement:
valueForKeyPath:
valueWithBytes:objCType:
valueWithCAColorMatrix:
values
vcForDebugging
videoCall
view
viewController
viewDidLoad
viewDidResize
viewFrameForInteractiveTransitionAnimationWhenEnteringBackgroundDidChangeForViewController
viewIfLoaded
viewModel
viewModelDidUpdateValuesFromOldValues:
viewWillLayoutSubviews
viewWillResize
viewWithHostedWindowHostingHandle:
waitForUIFinalizationCompletionBlock
wantsStashTabSuppression
weakObjectsHashTable
whiteColor
willAnimatePictureInPictureStart
willChangeValueForKey:
willMoveToSuperview:
window
windowScene
windowSceneForInteractiveTransitionAnimationWhenEnteringBackgroundDidChangeForViewController
zone
B16@0:8
v16@0:8
@20@0:8i16
@24@0:8^{_NSZone=}16
@16@0:8
B24@0:8@16
Q16@0:8
i16@0:8
@"NSString"
@28@0:8i16@20
@36@0:8@16i24@28
@24@0:8@16
v32@0:8@16@24
v20@0:8B16
@"RBSAssertion"
@"NSObject<OS_dispatch_queue>"
@"NSError"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v44@0:8@16@24@32B40
v24@0:8@16
v40@0:8@16@24@?32
B24@0:8@"PGPictureInPictureRemoteObject"16
v44@0:8@"PGPictureInPictureRemoteObject"16@"PGPictureInPictureViewController"24@"NSString"32B40
v32@0:8@"PGPictureInPictureRemoteObject"16@"PGPictureInPictureViewController"24
v24@0:8@"PGPictureInPictureRemoteObject"16
v40@0:8@"PGPictureInPictureRemoteObject"16@"NSString"24@?<v@?B>32
B40@0:8@16@24@32
B40@0:8@"PGBackgroundPIPService"16@"NSString"24@"NSString"32
v32@0:8@"PGBackgroundPIPService"16@"NSString"24
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16
{CGSize=dd}24@0:8@16
v36@0:8@16B24@?28
q32@0:8@16@24
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8@16@24
{CGSize=dd}32@0:8@16@24
q24@0:8@16
v44@0:8@16@24B32@?36
v24@0:8q16
B32@0:8q16@24
v32@0:8q16@24
@40@0:8@16@?24^@32
@40@0:8@16@24^@32
@32@0:8@16^@24
@"NSMutableSet"
@"NSXPCListener"
@"PGPictureInPictureRemoteObject"
@"PGBackgroundPIPService"
@"PGInterruptionAssistant"
@"<PGPictureInPictureControllerDelegate>"
{?="pictureInPictureController_didCreatePictureInPictureViewController"b1"pictureInPictureController_willDestroyPictureInPictureViewController"b1"pictureInPictureController_willHidePictureInPictureViewController"b1"pictureInPictureController_didHidePictureInPictureViewController"b1"pictureInPictureController_shouldCancelPictureInPictureForApplication_whenStartingPictureInPictureForApplication"b1"pictureInPictureController_shouldDenyNewConnection"b1"pictureInPictureController_didRequestStopForPictureInPictureViewController_sourceSceneSessionIdentifier_animated"b1}
@"NSSet"
@"PGPictureInPictureApplication"
@"<PGPictureInPictureAnalyticsDelegate>"
@76@0:8@16q24q32@40q48d56d64f72
@32@0:8@16@?24
v24@0:8Q16
@?16@0:8
@"CADisplayLink"
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@32@0:8q16@24
q16@0:8
B24@0:8q16
@"NSMutableDictionary"
@"<BSInvalidatable>"
@24@0:8q16
@28@0:8q16B24
@32@0:8q16d24
@20@0:8B16
@24@0:8d16
@32@0:8q16q24
d16@0:8
v40@0:8q16@24@32
@"NSDictionary"
v24@0:8d16
@"_UIRemoteView"
@"BKSTouchDeliveryPolicyAssertion"
@"UIView"
{CGRect={CGPoint=dd}{CGSize=dd}}88@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24{CGRect={CGPoint=dd}{CGSize=dd}}56
{UIEdgeInsets=dddd}56@0:8@16{UIEdgeInsets=dddd}24
v24@0:8@"PGButtonView"16
{CGRect={CGPoint=dd}{CGSize=dd}}88@0:8@"PGButtonView"16{CGRect={CGPoint=dd}{CGSize=dd}}24{CGRect={CGPoint=dd}{CGSize=dd}}56
{UIEdgeInsets=dddd}56@0:8@"PGButtonView"16{UIEdgeInsets=dddd}24
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
@40@0:8{CGPoint=dd}16@32
{CGAffineTransform=dddddd}16@0:8
{CGSize=dd}16@0:8
v32@0:8{CGSize=dd}16
@"PGControlsViewModel"
@"UILabel"
@"PGButtonView"
@"PGDisplayLink"
{CGSize="width"d"height"d}
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"PGVibrantFillView"
@"UIViewPropertyAnimator"
@"UIColor"
Vv24@0:8@16
Vv24@0:8@"NSNumber"16
@40@0:8@16@24@?32
@"BSServiceConnection"
v32@0:8@"PGControlsViewModel"16@"PGControlsViewModelValues"24
v32@0:8@"PGControlsViewModel"16@"PGCommand"24
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
B32@0:8@"UIGestureRecognizer"16@"UIEvent"24
v24@0:8B16B20
@40@0:8@16B24B28@32
@44@0:8B16@20@?28@?36
v24@0:8@?16
@"PGControlsView"
@"UITapGestureRecognizer"
@"UIGestureRecognizer"
@"NSTimer"
@"<PGCommandHandler>"
@52@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16B48
B40@0:8{CGPoint=dd}16@32
@"PGCABackdropLayerView"
@"NSHashTable"
Vv32@0:8@16@24
Vv32@0:8@"NSString"16@"NSString"24
@32@0:8@16@24
@"<_PGBackgroundPIPServiceConnectionTargetDelegate>"
^{__CFRunLoopObserver=}16@0:8
v24@0:8^{__CFRunLoopObserver=}16
^{__CFRunLoopObserver=}
Vv48@0:8q16{CGSize=dd}24@?40
Vv100@0:8B16@20@28{CGSize=dd}36q52{CGRect={CGPoint=dd}{CGSize=dd}}60@?92
Vv28@0:8B16@?20
Vv56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@?48
Vv32@0:8@16@?24
Vv40@0:8{CGSize=dd}16@?32
Vv24@0:8@?16
Vv32@0:8q16@?24
Vv32@0:8B16B20@?24
Vv68@0:8B16q20{CGRect={CGPoint=dd}{CGSize=dd}}28@?60
Vv48@0:8q16{CGSize=dd}24@?<v@?B@"NSError">40
Vv100@0:8B16@"PGHostedWindowHostingHandle"20@"NSString"28{CGSize=dd}36q52{CGRect={CGPoint=dd}{CGSize=dd}}60@?<v@?B@"NSError">92
Vv28@0:8B16@?<v@?B@"NSError">20
Vv56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@?<v@?B@"NSError">48
Vv32@0:8@"NSString"16@?<v@?B@"NSError">24
Vv40@0:8{CGSize=dd}16@?<v@?B@"NSError">32
Vv24@0:8@?<v@?B@"NSError"BB>16
Vv32@0:8q16@?<v@?B@"NSError"@"BKSAnimationFenceHandle">24
Vv32@0:8B16B20@?<v@?B@"NSError">24
Vv68@0:8B16q20{CGRect={CGPoint=dd}{CGSize=dd}}28@?<v@?B@"NSError"@"BKSAnimationFenceHandle">60
Vv24@0:8@?<v@?B@"NSError">16
Vv24@0:8@"NSDictionary"16
Vv24@0:8@"NSArray"16
Vv24@0:8@"NSString"16
Vv20@0:8B16
Vv56@0:8{CGSize=dd}16q32d40@48
Vv24@0:8Q16
Vv56@0:8{CGSize=dd}16q32d40@"BKSAnimationFenceHandle"48
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8d16
@"UIActivityIndicatorView"
@"PGLayoutContainerView"
@"PGProgressIndicator"
@"PGPrerollIndicatorView"
@"NSArray"
v40@0:8@16@24q32
v56@0:8@16{CGSize=dd}24q40d48
v28@0:8@16B24
v56@0:8@"PGPictureInPictureViewController"16{CGSize=dd}24q40d48
v24@0:8@"PGPictureInPictureViewController"16
v32@0:8@"PGPictureInPictureViewController"16@"PGCommand"24
v28@0:8@"PGPictureInPictureViewController"16B24
B24@0:8@"PGPictureInPictureViewController"16
@"NSString"24@0:8@"NSString"16
@"BSDescriptionBuilder"24@0:8@"NSString"16
@"BSDescriptionBuilder"16@0:8
v24@0:8@"PGCommand"16
v28@0:8B16@?20
@32@0:8d16@?24
v40@0:8{CGSize=dd}16@?32
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
@"NSXPCConnection"
@"PGProcessAssertion"
@"NSUUID"
@"PGPlaybackState"
@"FBScene"
@"<PGPictureInPictureRemoteObjectDelegate>"
@"PGPictureInPictureViewController"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
v48@0:8q16d24@?32@?40
@40@0:8@16@24@32
v40@0:8@16@24@32
@"UIPointerRegion"40@0:8@"UIPointerInteraction"16@"UIPointerRegionRequest"24@"UIPointerRegion"32
@"UIPointerStyle"32@0:8@"UIPointerInteraction"16@"UIPointerRegion"24
v40@0:8@"UIPointerInteraction"16@"UIPointerRegion"24@"<UIPointerInteractionAnimating>"32
v32@0:8@"PTSettings"16@"NSString"24
v24@0:8@"NSDictionary"16
@40@0:8@16@24q32
v32@0:8@16q24
v28@0:8d16B24
v32@0:8B16B20@24
v64@0:8q16{CGRect={CGPoint=dd}{CGSize=dd}}24@?56
v68@0:8B16q20{CGRect={CGPoint=dd}{CGSize=dd}}28@?60
v32@0:8q16@?24
@"PGHostedWindowHostingHandle"
@"PGPictureInPictureViewControllerBackgroundView"
@"PGLayerHostView"
@"PGPictureInPictureViewControllerClippingView"
@"PGControlsContainerView"
@"PGStashView"
@"PGStashedMaskView"
@"PGPortalView"
@"<PGPictureInPictureViewControllerContentContainer>"
@"<PGPictureInPictureViewControllerDelegate>"
{?="prepareStopAnimationWithCompletionHandler"b1"acquireInterfaceOrientationLock"b1"relinquishInterfaceOrientationLock"b1"handleTapWhileStashedGesture"b1"handleDoubleTapGesture"b1"performRotateAnimationWithRotation"b1}
@"PGMobilePIPSettings"
@"UIPointerInteraction"
v40@0:8d16d24q32
@"PGPlaybackStatePrerollAttributes"16@0:8
v24@0:8@"PGPlaybackStatePrerollAttributes"16
q24@0:8q16
d24@0:8q16
v32@0:8q16q24
v32@0:8d16q24
v28@0:8B16q20
@"PGPlaybackStatePrerollAttributes"
@32@0:8d16@24
@40@0:8d16@24q32
v40@0:8@"BSServiceConnectionListener"16@"BSServiceConnection<BSServiceConnectionHost>"24@"<BSXPCDecoding>"32
v24@0:8@"_PGBackgroundPIPServiceConnectionTarget"16
@"BSServiceConnectionListener"
@"<PGBackgroundPIPServiceDelegate>"
{CGPoint=dd}16@0:8
v32@0:8{CGPoint=dd}16
v32@0:8@?16@?24
v40@0:8Q16@?24@?32
v40@0:8d16@?24@?32
@64@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGSize=dd}48
@24@0:8@?16
v32@0:8d16d24
v36@0:8q16B24@?28
v48@0:8@16@24@32^v40
v40@0:8B16B20@24@?32
v72@0:8q16{CGRect={CGPoint=dd}{CGSize=dd}}24@?56@?64
v40@0:8q16@?24@?32
v32@0:8B16B20@?24
v40@0:8B16B20@?24@?32
v44@0:8B16B20B24@?28@?36
v36@0:8B16q20@?28
v76@0:8B16q20{CGRect={CGPoint=dd}{CGSize=dd}}28q60@?68
v40@0:8q16q24@?32
q20@0:8B16
{CGRect={CGPoint=dd}{CGSize=dd}}20@0:8B16
v28@0:8@?16B24
v28@0:8B16@20
@"PGRunLoopObserver"
@"PGHostedWindow"
@"UIViewController"
@"<PGPictureInPictureProxyDelegate>"
{?="pictureInPictureProxyInterfaceOrientationForTransitionAnimation"b1"pictureInPictureProxyViewFrameForTransitionAnimation"b1"pictureInPictureProxyViewControllerWindowForTransitionAnimation"b1"pictureInPictureProxy_willStartPictureInPictureWithAnimationType"b1"pictureInPictureProxy_didStartPictureInPictureWithAnimationType"b1"pictureInPictureProxy_failedToStartPictureInPictureWithAnimationType_error"b1"pictureInPictureProxy_restoreUserInterfaceForPictureInPictureStopWithCompletionHandler"b1"pictureInPictureProxy_willStopPictureInPictureWithAnimationType_reason"b1"pictureInPictureProxy_didStopPictureInPictureWithAnimationType_reason"b1"pictureInPictureProxyPictureInPictureInterruptionBegan"b1"pictureInPictureProxyPictureInPictureInterruptionEnded"b1"pictureInPictureProxy_didUpdateStashedOrUnderLockState"b1"pictureInPictureProxy_didUpdateResourcesUsageReductionReasons_oldReasons"b1"pictureInPictureProxyWillSetupPictureInPictureStop"b1}
@"UIViewController<PGPictureInPictureViewController>"
@"PGPictureInPictureProxy"
@"PGBackdropView"
@"UIImageView"
v32@0:8@16Q24
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"UIImage"
@"<PGButtonViewDelegate>"
@"_PGButton"
@"CAFilter"
Q24@0:8d16
@"<PGControlsViewModelDelegate>"
@"PGControlsViewModelValues"
v8@?0
%@ may only be initialized by PGPictureInPictureController.
pid: %ui- bundle: %@
v24@?0@"BSProcessHandle"8@"NSError"16
v16@?0@"NSDictionary"8
CFBundleIdentifier
com.apple.pictureinpicture
PIPVisible
TransientTask
+[PGProcessAssertion assertionWithDomainAttribute:forProcessWithIdentifier:explanation:]
%@ - %@
PGProcessAssertion.m
Trying to acquire assertion when we already have one
Initially invalidated, which should not be possible
com.apple.pegasus.assertions
-[PGProcessAssertion acquireWithTarget:domainAttribute:]
-[PGProcessAssertion acquireWithTarget:domainAttribute:]_block_invoke
v24@?0@"RBSAssertion"8@"NSError"16
Released %@ without invalidating first.
-[PGProcessAssertion invalidate]
com.apple.InCallService
com.apple.mediaserverd
com.apple.avconferenced
com.apple.pegasus.PGPictureInPictureController %p
B16@?0@"PGPictureInPictureRemoteObject"8
B24@?0@"PGPictureInPictureRemoteObject"8^B16
v20@?0B8@"NSError"12
-[PGPictureInPictureController cancelPictureInPictureForApplication:sceneSessionPersistentIdentifier:]
-[PGPictureInPictureController pictureInPictureInterruptionBeganWithReason:attribution:]
-[PGPictureInPictureController pictureInPictureInterruptionEndedWithReason:attribution:]
TelephonyUtilities
expanseEnabled
@16@?0@"PGPictureInPictureRemoteObject"8
AVConference
UseAvconferenced
-[PGPictureInPictureController _updateAllRemoteObjectsForPIPPossibleAndExemptAttributions]
-[PGPictureInPictureController listener:shouldAcceptNewConnection:]
pictureInPictureApplications
-[PGPictureInPictureController pictureInPictureRemoteObject:willShowPictureInPictureViewController:]
pictureInPictureActive
activePictureInPictureApplication
-[PGPictureInPictureController backgroundPIPService:didGrantBackgroundPIPAuthorizationForActivitySessionWithIdentifier:]
-[PGPictureInPictureController backgroundPIPService:didRevokeBackgroundPIPAuthorizationForActivitySessionWithIdentifier:]
-[PGPictureInPictureController backgroundPIPService:canAuthorizeBackgroundPIPForActivitySessionWithIdentifier:appBundleIdentifier:]
_PGInterruption
%@: %@ - %@
<nil>
PictureInPicture - PGInterruptionAssistant - %p
@8@?0
isInterrupted:%@; interruptions: %@; exempt attribution:%@;
@16@?0@"_PGInterruption"8
B16@?0@"_PGInterruption"8
Unspecified
UILocked
Camera
Prevent Background Audio
Changed Tethering While Stashed
invalid
PGCommand.m
Invalid parameter not satisfying: %@
action != PGSystemActionSendToProxy
action != 0
v32@?0@"NSNumber"8@"NSNumber"16^B24
skipByInterval
skipToLive
setPlaying
setMuted
setSuspended
beginInterruption
endInterruption
skipPreroll
endOrLeaveActivity
setCameraEnabled
setMicrophoneMuted
switchCamera
menuItemSelected
showHUD
playbackAction
faceTimeAction
systemAction
testingAction
associatedBoolValue
associatedDoubleValue
associatedIntegerValue
sendToProxy
sendActionButtonTapped
cancelPIP
restoreFromPIP
toggleVisibility
toggleZoom
startPIP
invalidateFromProxy
v16@?0@"NSError"8
v24@?0@8@"PGDisplayLink"16
AD_PREROLL_LABEL
SPONSORED_PREROLL_LABEL
Sponsored
SKIP_PREROLL_IN_N_SECONDS
'IN N ', as in skip 'IN N' seconds.
SKIP_PREROLL
Skip
forward.end.fill
v16@?0q8
none
acquiring
aquired
pipStarted
refused
revoked
PGBackgroundPIPAuthorization.m
identifier != nil
com.apple.pegasus.background-pip-authorization-request
-[PGBackgroundPIPAuthorization initWithActivitySessionIdentifier:appBundleIdentifier:stateTransitionHandler:]_block_invoke_2
v16@?0@"BSServiceConnection"8
-[PGBackgroundPIPAuthorization initWithActivitySessionIdentifier:appBundleIdentifier:stateTransitionHandler:]_block_invoke
v16@?0@"<BSServiceConnectionConfiguring>"8
-[PGBackgroundPIPAuthorization initWithActivitySessionIdentifier:appBundleIdentifier:stateTransitionHandler:]
-[PGBackgroundPIPAuthorization transitionToState:]
%@ - %@.%@ - %@
Released %@ without revoking it first
Unknown Reason
v16@?0@"BSSimpleAssertion"8
v16@?0@"NSTimer"8
inputRadius
inputNormalizeEdges
inputQuality
inputIntermediateBitDepth
inputColorMatrix
PGCABackdropLayerView.m
[groupLeader _isCaptureOnly] || groupLeader == nil
groupLeader != self
v16@?0@"PGCABackdropLayerView"8
-[_PGBackgroundPIPServiceConnectionTarget transitionToStateIfPossible:]
%@ cxn: %@ activitySessionIdentifier: %@ bundleId: %@ state: %@
v24@?0^{__CFRunLoopObserver=}8Q16
com.apple.pegasus
nVh/gwNpy7Jv1NOk00CMrw
_UIHostedWindowHostingHandle
v24@?0@"PGControlsView"8@"PGDisplayLink"16
PGControlsView.m
You cannot do this, but Xcode thinks you can.
LIVE_INDICATOR_BADGE
LIVE
Common
%@ (%p) %@
Maiden
Initializing
Idle
RequestingAutomaticStart
SettingUpStart
Starting
Active
SettingUpStop
RequestingStop
RequestingTwoStageStop
RequestingCancel
Stopping
Suspended
Invalidating
Invalid
unspecified
uilocked
camera
preventBackgroundAudio
changedTetheringWhileStashed
com.apple.pegasus.PGPictureInPictureRemoteObject %p
PictureInPicture - PGPictureInPictureRemoteObject - %p
%@ is not a valid initializer. You must call -[%@ initWithConnection:].
application
sourceSceneSessionPersistentIdentifier
activitySessionIdentifier
controlsStyle
isPictureInPicturePossible
exemptAttribution
isInterrupted
currentState
pictureInPictureShouldStartWhenEnteringBackground
stashed
isInMicroPIP
isUnderLock
initialLayerFrame
com.apple.MissingBundleIdentifier
UIApplicationSceneSettings
B24@?0@"FBScene"8^B16
-[PGPictureInPictureRemoteObject startPictureInPictureEnteringBackgroundAnimated:withCompletionHandler:]
-[PGPictureInPictureRemoteObject sendStartPictureInPictureTestAction]
PGPictureInPictureRemoteObject.m
Tried to BG PIP a remote object %@ that has NO for pip is possible
-[PGPictureInPictureRemoteObject startPictureInPictureFromBackground]
Start PIP from Background
-[PGPictureInPictureRemoteObject pictureInPictureInterruptionBeganWithReason:attribution:]
-[PGPictureInPictureRemoteObject suspend]
-[PGPictureInPictureRemoteObject resume]
-[PGPictureInPictureRemoteObject cancel]
-[PGPictureInPictureRemoteObject invalidate]
-[PGPictureInPictureRemoteObject setCurrentResourcesUsageReductionReasons:]
-[PGPictureInPictureRemoteObject _setUILockedResourcesUsageReductionReasons:]
-[PGPictureInPictureRemoteObject canTetherRemoteObjectAsMicroPIP:]
+[PGPictureInPictureRemoteObject tetherRemoteObject:toRemoteObject:mode:]
tetheredObject != nil || tetheringObject != nil
Failed to tether [%@] to [%@]. isStoppingTethering[%u] canStartTethering[%u]
%@ attempted transition from %@ to %@,  which is not allowed.
-[PGPictureInPictureRemoteObject _setCurrentState:]
Cancel PIP Task Assertion
-[PGPictureInPictureRemoteObject _invalidateAllAssertions]
-[PGPictureInPictureRemoteObject _isAssociatedWithOtherObject:]
Invalidate for failure to start stop or cancel
{CGSize=dd}
-[PGPictureInPictureRemoteObject startPictureInPictureAnimated:completionHandler:]
{CGRect={CGPoint=dd}{CGSize=dd}}
v12@?0B8
-[PGPictureInPictureRemoteObject stopPictureInPictureAnimated:withFinalInterfaceOrientation:finalLayerFrame:completionHandler:]
-[PGPictureInPictureRemoteObject setPictureInPictureShouldStartWhenEnteringBackground:completionHandler:]
-[PGPictureInPictureRemoteObject updatePlaybackStateWithDiff:]
-[PGPictureInPictureRemoteObject updateMenuItems:]
v16@?0@"PGMenuItem"8
@16@?0@"NSDictionary"8
-[PGPictureInPictureRemoteObject setActivitySessionIdentifier:]_block_invoke
-[PGPictureInPictureRemoteObject stopPictureInPictureAndRestoreUserInterface]
-[PGPictureInPictureRemoteObject setExemptAttribution:]
-[PGPictureInPictureRemoteObject _acquireOrInvalidateProcessAssertionIfNeeded]
PIP Visible Assertion
interruption began assertion
-[PGPictureInPictureRemoteObject pictureInPictureViewControllerDidRequestStop:]
-[PGPictureInPictureRemoteObject pictureInPictureViewControllerDidRequestCancel:]
FBSceneManager
Class getFBSceneManagerClass(void)_block_invoke
Unable to find class %s
void *FrontBoardLibrary(void)
PGMaterialView.m
view == _contentView || view == _backdropLayerView
com.apple.pegasus.background-pip-service
None
Playback
FaceTime
HomeKitCamera
Minimal
SelfView
Unknown
VideoOnDemand
LiveBroadcast
SecurityCamera
VideoCall
ScreenSharing
PGPictureInPictureViewControllerPrefersIdleTimerDisabledDidChangeNotification
-[_PGPictureInPictureContainerView willMoveToSuperview:]
-[_PGPictureInPictureContainerView didMoveToSuperview]
PG-PictureInPictureViewController
%@ is not a valid initializer. You must call -[%@ initWithControlsStyle:].
%@ does not support unarchiving from a nib.
PGPictureInPictureViewController.m
contentContainer[%@] does not implement `-[SBPIPPegasusContainerAdapter notePictureInPictureViewControllerTetheringDidUpdate]` but tethering was initiated.
PGPictureInPictureViewController.AnimationType
PGPictureInPictureViewController.InitialSpringVelocity
not hidden
hidden
v16@?0B8B12
-[PGPictureInPictureViewController viewDidLoad]
Toggle visibility action should not be sent to PictureInPictureViewController.
-[PGPictureInPictureViewController updatePlaybackStateWithDiff:]
-[PGPictureInPictureViewController _insertContentContainerViewIfNeeded]
com.apple.pegasus.PG_dispatch_async_with_timeout
v16@?0@"NSNotification"8
v16@?0@?<v@?>8
PGPlaybackState.m
No invalid key.
Elapsed Time
v32@?0@"NSNumber"8@16^B24
AnchorContentTime
AnchorWallTime
ContentType
ContentDuration
TimeControlStatus
PlaybackRate
Muted
RequiresLinearPlayback
RoutingVideoToHostedWindow
BackgroundAudioPolicy
PrerollAttributes
FaceTime-SupportsActions
FaceTime-CameraActive
FaceTime-MicrophoneMuted
FaceTime-CanSwitchCamera
FaceTime-DisablesLayerCloning
SecurityCam-HasMicrophone
Paused
Playing
WaitingToPlayAtSpecifiedRate
Legacy
Automatic
Pauses
ContinuesIfPossible
requiredLinearPlaybackEndTime
Content Type
preferredTintColor
r: %@ g: %@ b: %@ a: %@
Advertisement
unknown
com.apple.pegasus.backgroundPIPServiceEntitlement
com.apple.pegasus.PGBackgroundPIPService
com.apple.frontboard
v16@?0@"<BSServiceConnectionListenerConfiguring>"8
-[PGBackgroundPIPService listener:didReceiveConnection:withContext:]
-[PGBackgroundPIPService listener:didReceiveConnection:withContext:]_block_invoke_2
v16@?0@"BSServiceConnection<BSServiceConnectionContext>"8
-[PGBackgroundPIPService listener:didReceiveConnection:withContext:]_block_invoke
v16@?0@"BSServiceConnection<BSServiceConnectionHost>"8
-[PGBackgroundPIPService _handleInvalidatedTarget:]
-[PGBackgroundPIPService _handleInvalidatedTarget:]_block_invoke
-[PGBackgroundPIPService backgroundPIPTargetRequestsAuthorization:]
-[PGBackgroundPIPService backgroundPIPTargetRequestsAuthorization:]_block_invoke
UIView.CornerRadius
PGPictureInPictureProxyPictureInPictureActiveChangedNotification
PGPictureInPictureProxy.m
%@ needs valid viewController!
com.apple.pegasus.PGPictureInPictureProxy %p
UIWindowSceneDidEndLiveResizeNotification
%@ is not a valid initializer. You must call -[%@ initWithControlsStyle:viewController:].
shouldShowAlternateActionButtonImage
v28@?0B8@"NSError"12B20B24
resetting internal state
_resetInternalState
-[PGPictureInPictureProxy setPictureInPictureShouldStartWhenEnteringBackground:]
-[PGPictureInPictureProxy preferredContentSizeDidChangeForViewController]
Client Update
-[PGPictureInPictureProxy _viewFrameForInteractiveTransitionAnimationWhenEnteringBackgroundDidChangeForViewControllerWithReason:]
Client request
-[PGPictureInPictureProxy _windowSceneForInteractiveTransitionAnimationWhenEnteringBackgroundDidChangeForViewControllerWithReason:]
window scene change
-[PGPictureInPictureProxy startPictureInPicture]
-[PGPictureInPictureProxy stopPictureInPictureAndRestoreUserInterface:]
-[PGPictureInPictureProxy rotateContentContainer:withCompletionHandler:]
v28@?0B8@"NSError"12@"BKSAnimationFenceHandle"20
v16@?0@"<PGMutablePlaybackStateFaceTimeSupport>"8
Connection was nil and setClientSessionIdentifier called
v16@?0@"<PGMutablePlaybackState>"8
-[PGPictureInPictureProxy setControlsStyle:animated:withCompletionHandler:]
automaticallyInterruptsForLegacyFaceTimeBehaviors == NO
automaticallyInterruptsForLegacyFaceTimeBehaviors changed
-[PGPictureInPictureProxy _setActivationState:reason:]
_setActivationState: %@
-[PGPictureInPictureProxy _startPictureInPictureAnimated:enteringBackground:reason:withCompletionHandler:]
_startPictureInPictureAnimated: %@
_startPictureInPictureAnimated succeeded
We failed to start, but activation state remained activating and nobody cleaned up after the failure
_startPictureInPictureAnimated failed
-[PGPictureInPictureProxy _startPictureInPictureAnimated:enteringBackground:reason:withCompletionHandler:]_block_invoke
completionHandler != nil
successHandler != nil && failureHandler != nil
-[PGPictureInPictureProxy __setupStartWithAnimationType:initialLayerFrame:successHandler:failureHandler:]
starting two stage stop
two stage stop finalize block
v48@?0{CGRect={CGPoint=dd}{CGSize=dd}}8q40
appActivationError
_stopPictureInPictureAnimated
_stopPictureInPictureAnimated finalize block
B8@?0
-[PGPictureInPictureProxy __actuallyStopAnimated:reason:finalLayerFrame:finalInterfaceOrientation:completionHandler:]
-[PGPictureInPictureProxy __actuallyStopAnimated:reason:finalLayerFrame:finalInterfaceOrientation:completionHandler:]_block_invoke_2
starting deactivating without being PGProxyActivationStateDeactivating
deactivation
begin deactivation
ending deactivating without being PGProxyActivationStateDeactivating
end deactivation
-[PGPictureInPictureProxy setReadyForDisplay:]
_prewarmAndStartAfterTimeout
Prewarming timeout fired
_cancelPrewarming
became ready for display with a non-zero size while prewarming
H:|[view]|
view
V:|[view]|
B16@?0@"UIScene"8
Scene Connection and _sceneSessionPersistentIdentifier is not connected
Scene Disconnection
Attempted to establish connection but %@ already had one
-[PGPictureInPictureProxy _establishConnection]_block_invoke
-[PGPictureInPictureProxy _establishConnection]_block_invoke_2
-[PGPictureInPictureProxy _updatePlaybackStateIfNeeded]
application did become active and no connection
deactivateIfNeededForInterruptedConnection
-[PGPictureInPictureProxy _legacyPictureInPictureInterruptionBegan]
-[PGPictureInPictureProxy _legacyPictureInPictureInterruptionEnded]
-[PGPictureInPictureProxy _setPictureInPictureActive:]
pip active
-[PGPictureInPictureProxy _setPictureInPictureSuspended:]
pictureInPictureSuspended
suspended changed
-[PGPictureInPictureProxy _setPictureInPicturePossible:]
pictureInPicturePossible
-[PGPictureInPictureProxy _setStashedOrUnderLock:reason:]
stashed or underlock
stashed or underlock changed
-[PGPictureInPictureProxy _setInterruptedForDefaultReason:initiatedByRemoteObject:]
default reason initiated by remote
default reason initiated locally
-[PGPictureInPictureProxy pictureInPictureStartRequestedAnimated:withCompletionHandler:]
remote request
-[PGPictureInPictureProxy pictureInPictureStopRequestedAnimated:withCompletionHandler:]
-[PGPictureInPictureProxy beginTwoStagePictureInPictureStopByRestoringUserInterfaceWithCompletionHandler:]
_twoStageStopForPictureInPictureRestoreWithContinueAfterUserInterfaceRestoreBlock completed without error, but a __pipStopFinalStageCompletionHandler was not available
-[PGPictureInPictureProxy endTwoStagePictureInPictureStopWithCompletionBlock:]
-[PGPictureInPictureProxy pictureInPictureCancelRequestedAnimated:withCompletionHandler:]
-[PGPictureInPictureProxy updatePictureInPicturePossible:]
-[PGPictureInPictureProxy pictureInPictureInvalidated]
pictureInPictureInvalidated starting
pictureInPictureInvalidated finished
remote message
-[PGPictureInPictureProxy setResourcesUsageReductionReasons:]
-[PGPictureInPictureProxy _setResourcesUsageReductionReasons:]_block_invoke
-[PGPictureInPictureProxy handleCommand:]
PGSystemActionStartPIP
Received command to end or leave without at least being activated, which should never happen
PG-StashedView
chevron.compact.left
chevron.compact.right
PGPegasusErrorDomain
MobilePIP
Opacity
Radius
Offset X
Offset Y
Continuous Corner Radius
PiP Shadow Settings
Restore Defaults
com.apple.pegasus.canShowScreenSharing
filters.gaussianBlur.inputRadius
gaussianBlur
inputHardEdges
com.apple.pegasus.menuitemprovider
title
symbolName
identifier
xmark
RESTORE_FULLSCREEN
Restore fullscreen
CLOSE_PIP
Close Picture in Picture
mic.fill
UNMUTE
Unmute
MUTE
Mute
play.slash.fill
play.fill
pause.fill
gobackward.10
goforward.10
SKIP_FORWARD_10_SECONDS
Skip forward 10 seconds
SKIP_BACK_10_SECONDS
Skip back 10 seconds
PLAY
Play
PAUSE
Pause
STOP
Stop
stop.fill
controlsShouldAutoHide
restoreButtonAccessibilityIdentifier
cancelButtonAccessibilityIdentifier
actionButtonAccessibilityIdentifier
skipBackButtonAccessibilityIdentifier
skipForwardButtonAccessibilityIdentifier
includesLiveIndicatorBadge
includesRestoreButton
includesCancelButton
includesActionButton
includesSkipBackButton
includesSkipForwardButton
includesContentLoadingIndicator
includesWaitingToPlayIndicator
isSkipBackButtonEnabled
isActionButtonEnabled
isSkipForwardButtonEnabled
includesSingleTapGestureRecognizer
includesDoubleTapGestureRecognizer
includesDoubleDoubleTapGestureRecognizer
includesProgressBar
progressBarShouldUpdate
actionButtonSystemImageName
actionButtonImageTintColor
actionButtonBackgroundTintColor
skipBackButtonImageTintColor
skipBackButtonBackgroundTintColor
skipForwardButtonImageTintColor
skipForwardButtonBackgroundTintColor
cancelButtonImageTintColor
cancelButtonBackgroundTintColor
skipForwardButtonSystemImageName
skipBackButtonSystemImageName
cancelButtonSystemImageName
prerollAttributes
cancelButtonWantsBackground
restoreButtonWantsBackground
actionButtonsWantBackground
cancelButtonCustomText
cancelButtonCustomImage
pip.exit
%s Will ignore %{public}@ because there wasn't a valid pid
%s %{public}@ target: %{public}@ domain: %{public}@
%s Acquiring %{public}@
%s %{public}@ invalidated
%s Failed to acquire %{public}@
%s Invalidating %{public}@. was valid: %{BOOL}u
%@ needs to be invoked on the main thread!
%s %{public}@ %{public}@
%s Starting PIP for FaceTime Video Call upon unlock
Multiple remote object response for attempted action, desired effect is ambiguous
Could remoteObject{%p} start pip upon backgrounding? %{BOOL}u, since we have at least the following: matchesSceneIdentifier{%{bool}u} shouldStartPictureInPictureEnteringBackground{%{bool}u}
%s Revoking authorization for %{public}@ because the delegate forbids background pip for the app %{public}@
%s Attempting to start backgroundPIP for %{public}@
%s %p %{public}@
%@ may not be invoked on the main thread!
%{public}@ - Connection with PID %d interrupted!
%{public}@ - Connection with PID %d invalidated!
%s Will tether because new object %p can tether %p as micropip
%s Will tether because active object %p can tether %p as micropip
%s Allowing remote object %p to coexist with active %p because one is QNBacklink
%s New object %p suspending active %p
%s New object %p canceling active %p
%s removing objects for swap
%s %{public}@
%s %{public}@ %{public}@ canAuthorizeBackgroundPIPForActivitySessionWithIdentifier before checking interruptions %{BOOL}u
%s Controller changed mind and decided to reject auth due for %{public}@ %{public}@ to camera interruption.
%@ - Sending touch delivery policy %@ failed with error: %@
%s Connection Activated: %{public}@
%s Received interruption for connection: %{public}@
%s Received invalidation for connection: %{public}@
%s Authorizing identifier %{public}@
%s %@
%s requestedState: %{public}@ for %{public}@
%s Refusing requestedState: %{public}@ for %{public}@
Remote object(%p) shouldStartPictureInPictureEnteringBackground check result:%{BOOL}u. State: possible(%{BOOL}u) shouldStartEnteringBackground(%{BOOL}u) canStartAutomaticallyOrIsStartingAutomatically(%{BOOL}u) isInterrupted(%{BOOL}u) %{public}@
isPictureInPicturePossible - %{public}@ %@
%s %p 
Called endTwoStageStopPictureInPictureWithCompletionBlock on object that hasn't begun.
%s %p: %{public}@ isInterrupted %{BOOL}u 
pictureInPictureInterruptionEndedWithReason: %{public}@ isInterrupted %{BOOL}u %p
%s %p %{public}@ %{BOOL}u || _currentState: %{public}@ [otherObject canStartMicroPIP] %{BOOL}u ![self canStartMicroPIP] %{BOOL}u _tetheredMicroPIP == nil %{BOOL}u [self _isAssociatedWithOtherObject:otherObject] %{BOOL}u
%s %p tether %p to %p for mode %@
%s %p %{public}@ -> %{public}@
Invalidation timeout fired while isStoppingOrCancelling: %{BOOL}u.
%s Associating %p %{public}@ with %p %{public}@ because hasMatchingSessionIdentifierAndBundleIdentifier
%s Associating %p %{public}@ with %p %{public}@ because one of them is a video call and we always associate ICS with itself
%s Associating %p %{public}@ with %p %{public}@ because micropip is active between the objects
%s Associating %p %{public}@ with %p %{public}@ because it has backgroundPIPAuthorization.
%s Associating %p %{public}@ with %p %{public}@ because it has an expanse-like activity session identifier and the facetime video call has an ICS bundle for its activity session identifier.
%@ preferredContentSize:%{public}@
Using default initial preferred content size due to background PIP authorization %@
invalid preferredContentSize %{public}@ %@
invalid initialLayerFrame %{public}@ %@
%s %p %{BOOL}u
%s %p %@
*** WARNING: Updating menu without the proper entitlement has no effect. ***
%s %p %{public}@ --> %{public}@
%s %p Acquiring process assertion
%s %p Invalidating process assertion
remote object %p notifying proxy of pictureInPictureInterruptionBegan
remote object %p notifying proxy of pictureInPictureInterruptionEnded shouldResumeSuggestion %{BOOL}u
%s %p canStop: %{BOOL}u
%s %p canCancel: %{BOOL}u
%{public}@ setStashed:%{bool}u [self _isUnderLock]:%{bool}u
%s %p newSuperview is VC's view: %{BOOL}u
%@ may not be called before view is loaded!
[Layout] %{public}@:%d Stash view set %{public}@
[Layout] Removing Stash Tab Views
%{public}@ Preparing animation with initial layer frame: %@
Should have nil _analyticsSessionUUID
%@ %{bool}u
Pointer interaction view not in a window
%s %p REMOTE: %{public}@
%s Activated connection %{public}@ for target %{public}@
%s Invalidated connection %{public}@ for target: %{public}@
%s Activating connection %{public}@
%s Invalidating unvalidated client %{public}@
%s existingTargetForIdentifier %{public}@
%s BackgroundPIP: Revoking authorization for identifier %{public}@
Refusing authorization for %{public}@ because an authorization request (%{public}@) for this activitySessionIdentifier already exists %{public}@ and has not yet been revoked.
%s BackgroundPIP: Authorizing identifier %{public}@
Refusing authorization for %{public}@ because delegate didn't allow it.
%@ %{public}@
%s %p %ld
%s %p %{public}@ -> %{public}@ reason: %{public}@
%s %p Not updating activation state because we are no longer activating and it's not our responsibility to maintain activation state.
%{public}@ failed because not inactive.
%{public}@
Failed to setup start with error: %{public}@
[TwoStageStop] Failed to finalize with error %{public}@.
[TwoStageStop] Failed to __setupStopAnimated:::::
Timed out attempting to activate app on PIP stop
Timed out attempting to restore UI on PIP stop, attempt proceeding anyway
%s Skipping deactivation as we are no longer deactivating.
%s Skipping deactivation as our state is not deactivating. Error had been: %{public}@
%@ must be invoked on the main thread!
%s %p Ready for display: %{BOOL}u
PGHostedWindow root view controller *is* now containing: %{public}@[%p]
PGHostedWindow root view controller is *not* anymore containing: %{public}@[%p]
%{public}@ %{public}@
%s %p - Connection interrupted!
%s %p - Connection invalidated
%s %p APP: %{public}@
%{public}@ Did update stashed or under lock state. stashedOrUnderLock{%{bool}u} reason: %{public}@
%{public}@ Did update _isInterruptedForAnyReason %{BOOL}u --> shouldBeInterruptedForAnyReason %{BOOL}u reason: %{public}@ canBeInterrupted %{BOOL}u _isInterruptedForDefaultReason %{BOOL}u initiatedByRemoteObject: %{BOOL}u
%{public}@ %{bool}u
%s Informing %{public}@ of didUpdateResourcesUsageReductionReasons:%@ oldReasons:%@
%@ oldReasons cannot equal new ones.
%@ %@
%{public}@ isActiveOrStarting: %{BOOL}u handle command %{public}@ should notify: %{BOOL}u
[Layout] progress{%.2f} thresholdedProgress{%.2f} backdropScale{%.2f}
%@ - Acquiring remote object proxy for connection %@ failed with error: %@
updatePlaybackStateWithDiff: %@
playback state after updates: %@
?ffffff
?333333
?)\
%H/P25
0369
4c8b
333333
?333333
softlink:r:path:/System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard
PGVibrancyEffects
PGPictureInPictureApplication
NSCopying
PGProcessAssertion
Utility
PGPictureInPictureController
NSXPCListenerDelegate
NSObject
PGPictureInPictureRemoteObjectDelegate
PGBackgroundPIPServiceDelegate
PGAdditions
PGDisplayLink
BSInvalidatable
PGHostedWindow
PGHostedWindowHostingHandle
_PGInterruption
PGInterruptionAssistant
PGCommand
PGLayerHostView
_PGBundle
PGPortalView
PGPrerollIndicatorView
PGButtonViewDelegate
PGProgressIndicator
PGVibrantFillView
PGDimmingView
PGBackgroundPIPAuthorization
PGBackgroundPIPServerToClientInterface
PGControlsContainerView
PGControlsViewModelDelegate
UIGestureRecognizerDelegate
PGCABackdropLayerView
PGCABackdropLayer
PGCABackdropLayerViewSupport
_PGBackgroundPIPServiceConnectionTarget
PGBackgroundPIPClientToServerInterface
PGRunLoopObserver
PGPictureInPictureRemoteObjectInterface
PGPictureInPictureExportedInterface
PGLayoutContainerView
PGControlsView
PGPictureInPictureRemoteObject
PGPictureInPictureViewControllerDelegate
BSDescriptionProviding
PGCommandHandler
PGMaterialView
PGBackgroundPIPServiceSpecification
_PGPictureInPictureContainerView
PGPictureInPictureViewControllerClippingView
PGPictureInPictureViewControllerBackgroundView
PGHitTestExtendableView
PGPictureInPictureViewController
UIPointerInteractionDelegate
PTSettingsKeyPathObserver
PGPlaybackStateDiffConsumer
PGPlaybackState
PGMutablePlaybackState
FaceTimeSupport
PGMutablePlaybackStateFaceTimeSupport
SecurityCameraSupport
PGMutablePlaybackStateSecurityCameraSupport
PGPlaybackStatePrerollAttributes
PGBackgroundPIPService
BSServiceConnectionListenerDelegate
_PGBackgroundPIPServiceConnectionTargetDelegate
PGStashedMaskView
PGPictureInPictureProxy
_PGPictureInPictureConnectionExportedObject
PGStashView
__PGView
_PGButton
PGButtonView
PGTransientLocal
PGMobilePIPSettingsDomain
PGMobilePIPSettings
PGMicroPIPButtonView
PGBackdropView
PGMenuItem
PGMenuItemWSupport
PGControlsViewModel
PGControlsViewModelValues
CGColor
PG_acquireAssertionToPreventAutoHideOfControlsWithReason:
T@"UIColor",R,N
PG_allowsGroupBlending
TB,N,GisEnabled
PG_animateUsingDefaultDampedSpringWithInitialSpringVelocity:animations:completion:
TQ,N,V_preferredFramesPerSecond
PG_animateUsingDefaultTimingWithOptions:animations:completion:
Tq,R,N,V_reason
PG_appProxyWithDebugMethodAndPointerProem:errorHandler:
__cleanupWithCompletionHandler:
PG_compositingFilter
_backgroundView
PG_disablesLayerCloning
_chevronsHidden
PG_hasScreenSharingEntitlement
_controlsViewVisibilityAnimator
PG_performWithoutRetargetingAnimation:
_includesWaitingToPlayIndicator
PG_recursivelyDisallowGroupBlending
_invalidateConnectionForFailure
PG_remoteObjectProxyWithDebugMethodAndPointerProem:errorHandler:
_lock_activitySessionIdentifier
PG_remoteObjectWithDebugMethodAndPointerProem:errorHandler:
_pictureInPictureViewController
PG_setAllowsEdgeAntialiasing:
_reason
PG_setAnchorPoint:
_skipBackButton
PG_updateVibrancyEffectForTintColor
_updatePrefersIdleTimerDisabled
T#,R
_vcForDebugging
T@"<PGButtonViewDelegate>",W,N,V_delegate
acquireInterfaceOrientationLock
T@"<PGControlsViewModelDelegate>",W,N,V_delegate
actionButtonBackgroundTintColor
T@"<PGPictureInPictureControllerDelegate>",W,N
activationState
T@"<PGPictureInPictureRemoteObjectDelegate>",W,N,V_delegate
allKeys
T@"<PGPictureInPictureViewControllerDelegate>",W,N,V_delegate
bs_map:
T@"BSServiceInterface",R,C,N
bundleForClass:
T@"NSArray",C,N,V_animatedLayerProperties
canSwitchCamera
T@"NSDictionary",R,N
connectedScenes
T@"NSHashTable",R,N,V_dependents
contentDuration
T@"NSMutableDictionary",R,N,V_mutableDictionary
dealloc
T@"NSSet",R,C,N,V_identifiersForAuthorizedActivitySessions
didAnimatePictureInPictureStart
T@"NSSet",R,N,V_pictureInPictureApplications
displayLinkWithTarget:selector:
T@"NSString",C,N,V_exemptAttribution
enabled
T@"NSString",R,C
filters
T@"NSString",R,C,N,V_activitySessionIdentifier
handleSingleTap
T@"NSString",R,C,N,V_attribution
hitRect
T@"NSString",R,N,V_bundleIdentifier
initWithActivityIndicatorStyle:
T@"NSXPCConnection",R,N
isInterruptible
T@"PGButtonView",W,N,V_buttonView
isPrerollActive
T@"PGCABackdropLayerView",W,N,V_groupLeader
isShowingControlsForHoverActive
T@"PGControlsViewModel",R,N,V_viewModel
locationInView:
T@"PGDisplayLink",R,N,V_displayLink
microphoneMuted
T@"PGHostedWindowHostingHandle",&,N,V_microPIPHostedWindowHostingHandle
numberWithLong:
T@"PGPictureInPictureApplication",R,N,V_activePictureInPictureApplication
readyForDisplay
T@"PGPictureInPictureApplication",R,W,N,V_application
removeObserver:
T@"PGPictureInPictureRemoteObject",&,N,V_tetheringRemoteObject
serviceWithDefaultShellEndpoint
T@"PGPictureInPictureViewController",R,W,N,V_tetheredViewController
T@"PGPictureInPictureViewController",W,N,V_vcForDebugging
setAnchorPoint:
T@"PGPlaybackState",R,N
setBorderWidth:
T@"PGPlaybackStatePrerollAttributes",R,N
setContentType:
T@"UIColor",C,N,V_customBackgroundColor
setCustomElapsedTrackTintColor:
T@"UIImage",&,N,V_image
setGroupLeader:
T@"UIPointerInteraction",W,N,V_pointerInteraction
setInterrupted:
T@"UIView",W,N,V_hitTestExtenderView
setSourceLayer:
T@"UIView",W,N,V_tabShadowView
setTetheredViewController:mode:
T@"UIViewPropertyAnimator",W,N,V_highlightAnimator
setupStopAnimated:needsApplicationActivation:completionHandler:
T@,&,N,SPG_setCompositingFilter:
snapshotViewAfterScreenUpdates:
T@?,C,N,V__pipStopFinalStageCompletionHandler
stashedTabWidth
T@?,C,N,V_actions
systemImageName
T@?,C,N,V_waitForUIFinalizationCompletionBlock
updateMenuItems
T@?,R,C,N,V_linkFired
willAnimatePictureInPictureStop
TB,GisExemptFromUILockInterruptionsWhenActive
.cxx_destruct
PG_cornerRadius
PG_allowsEdgeAntialiasing
T@"UIImage",R,N
PG_anchorPoint
TB,R,N,GisMuted
PG_animateUsingDefaultTimingWithAnimations:completion:
Td,N,V_progress
PG_appProxyWithDebugMethodAndPointerProem:
__actuallyStartWithAnimationType:successHandler:failureHandler:
PG_backdropGroupLeader
_action
PG_constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:priority:
_beginDeactivatingPictureInPictureWithAnimationType:stopReason:
PG_hasMenuItemProviderEntitlement
_commandHandler
PG_performWithoutAnimation:
_frameForInteractiveTransitions
PG_preferredVisibilityForView:
_integerForKey:
PG_remoteObjectProxyWithDebugMethodAndPointerProem:
_isICSVideoCall
PG_remoteObjectWithDebugMethodAndPointerProem:
_mainBodyBounds
PG_removeVibrancyEffect
_prefersHiddenFromClonedDisplay
PG_setAllowsGroupBlending:
_resourcesUsageReductionReasons
PG_setCompositingFilter:
_stashTabHidden
PG_wantsVibrancyEffect
_values
T@"<PGBackgroundPIPServiceDelegate>",W,N,V_delegate
_viewController
T@"<PGCommandHandler>",W,N,V_commandHandler
acquireWithInvalidationHandler:
T@"<PGPictureInPictureAnalyticsDelegate>",W,N,V_analyticsDelegate
actions
T@"<PGPictureInPictureProxyDelegate>",W,N
addInteraction:
T@"<PGPictureInPictureViewControllerContentContainer>",W,N,V_contentContainer
backgroundColor
T@"<_PGBackgroundPIPServiceConnectionTargetDelegate>",W,N,V_delegate
builder
T@"BSServiceQuality",R,C,N
buttonWithType:
T@"NSArray",C,N,V_menuItems
cancelButtonBackgroundTintColor
T@"NSDictionary",R,N,V_dictionaryRepresentation
containsObject:
T@"NSMutableDictionary",R,N,V_dictionaryRepresentation
coordinateSpace
T@"NSObject<OS_dispatch_queue>",R,N
descriptionWithMultilinePrefix:
T@"NSSet",R,N
didMoveToWindow
T@"NSString",C,N
domainGroupName
T@"NSString",C,N,V_systemImageName
filterWithType:
T@"NSString",R,C,N
handleDoubleTap
T@"NSString",R,C,N,V_appBundleIdentifier
hasEntitlement:
T@"NSString",R,N
includesContentLoadingIndicator
T@"NSString",R,N,V_sourceSceneSessionPersistentIdentifier
isEqualToArray:
T@"PGButtonView",R,N,V_skipPrerollButtonView
isMuted
T@"PGCABackdropLayer",R,D,N
isProxy
T@"PGControlsViewModel",R,N
isValid
T@"PGControlsViewModelValues",R,C,N,V_values
materialFilters
T@"PGHostedWindowHostingHandle",&,N
numberWithBool:
T@"PGHostedWindowHostingHandle",R,N
preferredHeight
T@"PGPictureInPictureApplication",R,N,V_pictureInPictureApplication
release
T@"PGPictureInPictureRemoteObject",&,N,V_tetheredRemoteObject
runLoopObserver
T@"PGPictureInPictureViewController",R,N,V_pictureInPictureViewController
session
T@"PGPictureInPictureViewController",R,W,N,V_tetheringViewController
setAdjustsImageWhenHighlighted:
T@"PGPlaybackState",R,C,N,V_playbackState
setBorderColor:
T@"PGPlaybackStatePrerollAttributes",&,N
setCaptureOnly:
T@"UIColor",&,N,V_customElapsedTrackTintColor
setCornerCurve:
T@"UIFont",C,N
setFrameOrigin:
T@"UILabel",R,N,V_contentTypeLabel
setHighlighted:
T@"UIView",R,N
setProxyActive:
T@"UIView",W,N,V_sourceView
setTargetQueue:
T@"UIViewController<PGPictureInPictureViewController>",R,N,V_viewController
setWithObjects:
T@"_PGButton",&,N,V_actualButton
skipForwardButtonImageTintColor
T@,R,W,N,V_owner
stashed
T@?,C,N,V__pipStopUserInterfaceRestoreContinuationBlock
suspend
T@?,C,N,V_coordinatedAnimationsForControlsVisibiity
traitCollection
T@?,R,C,N,V_action
updatePictureInPicturePossible:
T@?,R,C,V_stateTransitionHandler
willMoveToParentViewController:
TB,GisProxyActive
TB,N
TB,N,GisBackdropHidden
TB,N,GisCameraActive
TB,N,GisCircular,V_circular
TB,N,GisHighlighted,V_highlighted
TB,N,GisInActivitySession,V_inActivitySession
TB,N,GisInteractivelyResizing,V_interactivelyResizing
TB,N,GisInterrupted
TB,N,GisInterrupted,V_interrupted
TB,N,GisMicrophoneMuted
TB,N,GisMuted
TB,N,GisPictureInPicturePossible
TB,N,GisPictureInPictureStashed,V_stashed
TB,N,GisReadyForDisplay,V_readyForDisplay
TB,N,GisRoutingVideoToHostedWindow
TB,N,GisShowingControlsForHoverActive,V_showingControlsForHoverActive
TB,N,SPG_setAllowsEdgeAntialiasing:
TB,N,SPG_setAllowsGroupBlending:
TB,N,V_canStartShowingChrome
TB,N,V_ignoreCornerRadiusUpdates
TB,N,V_includesWaitingToPlayIndicator
TB,N,V_prefersControlsHidden
TB,N,V_prefersStashTabSuppressed
TB,N,V_showsPictureInPictureUnavailableIndicator
TB,N,V_stashed
TB,R
TB,R,GisInterrupted
TB,R,N
TB,R,N,GisConnectionActive
TB,R,N,GisInterrupted
TB,R,N,GisPictureInPictureActive
TB,R,N,GisPictureInPictureActive,V_pictureInPictureActive
TB,R,N,GisPictureInPictureInterrupted
TB,R,N,GisPictureInPicturePossible
TB,R,N,GisPictureInPictureStashedOrUnderLock,V_pictureInPictureStashedOrUnderLock
TB,R,N,GisPictureInPictureSuspended
TB,R,N,GisRoutingVideoToHostedWindow
TB,R,N,GisVideoCall
TB,R,N,V_prefersHiddenFromClonedDisplay
TQ,R
TQ,R,N,V_resourcesUsageReductionReasons
T^{__CFRunLoopObserver=},N,V_runLoopObserver
Td,N
Td,N,V_blurProgress
Td,N,V_cornerRadiusScale
Td,N,V_currentContentCornerRadius
Td,N,V_glyphSize
Td,N,V_shadowContinuousCornerRadius
Td,N,V_shadowOffsetX
Td,N,V_shadowOffsetY
Td,N,V_shadowOpacity
Td,N,V_shadowRadius
Td,N,V_stashedTabWidth
Td,R,N
Ti,R,N,V_processIdentifier
Tq,N
Tq,N,V_controlsStyle
Tq,R,N
Tq,R,N,V_controlsStyle
Tq,R,N,V_currentState
Tq,R,N,V_tetheringMode
T{CGPoint=dd},N,SPG_setAnchorPoint:
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_initialLayerFrameForInteractiveTransitionAnimationUponBackgrounding
T{CGSize=dd},N,V_labelSize
T{CGSize=dd},N,V_microPIPSize
T{CGSize=dd},N,V_minimumStashTabSize
T{CGSize=dd},R,N,V_preferredContentSize
UTF8String
UUID
UUIDString
_UILockedResourcesUsageReductionReasons
__actuallyStopAnimated:reason:completionHandler:
__actuallyStopAnimated:reason:finalLayerFrame:finalInterfaceOrientation:completionHandler:
__coordinateStartAnimated:withCompletionHandler:
__didStartWithAnimationType:completionHandler:
__pipStopFinalStageCompletionHandler
__pipStopUserInterfaceRestoreContinuationBlock
__restoreUserInterfaceAnimated:reason:completionHandler:
__setConnection:
__setupStartWithAnimationType:initialLayerFrame:successHandler:failureHandler:
__setupStopAnimated:needsApplicationActivation:successHandler:failureHandler:
__setupStopAnimated:needsApplicationActivation:waitForApplicationActivation:successHandler:failureHandler:
__updateCancellationPolicyWithSuccessHandler:failureHandler:
__waitForApplicationActivationWithSuccessHandler:failureHandler:
_acquireOrInvalidateProcessAssertionIfNeeded
_acquirePreventAutoHideOfControlsAssertionWithReason:
_acquired
_actionButton
_actions
_activationState
_activePictureInPictureApplication
_activePictureInPictureRemoteObjects
_activitySessionIdentifier
_activitySessionIdentifierForLastActivePIPSession
_actualButton
_addDependent:
_addMaskViewSubviewIfNeeded
_addRemoteObject:
_addViewControllerToHostedWindowIfNeeded
_addWindowSceneActivationStateObserverIfNeeded:
_allButtons
_analyticsDelegate
_analyticsSessionUUID
_analyticsSourceUUID
_animateUsingDefaultDampedSpringWithDelay:initialSpringVelocity:options:animations:completion:
_animateUsingDefaultTimingWithOptions:animations:completion:
_animateUsingSpringBehavior:tracking:animations:completion:
_animatedLayerProperties
_appBundleIdentifier
_application
_applicationDidBecomeActive
_applicationKeyWindow
_applyPulseState
_applyShadowSettingsToView:
_assertion
_attribution
_automaticallyInterruptsForLegacyFaceTimeBehaviors
_averageColorFilter
_backdropLayerView
_backdropView
_backgroundColor
_backgroundPIPService
_beginDeactivatingPictureInPicture
_bestKnownConnectedSceneSessionPersistentIdentifier
_blurProgress
_boolForKey:
_bs_hash
_bundleIdentifier
_buttonView
_canBeShownInMicroPIPMode
_canBecomeKeyWindow
_canSendPlaybackState
_canStartShowingChrome
_canTransitionToState:
_cancelButton
_cancelPictureInPictureFinishTaskAssertion
_cancelPrewarming
_captureOnlyView
_circular
_clientSessionIdentifier
_clientSessionIdentifierAccordingToRemoteObject
_completeTrack
_connection
_connectionListener
_considerStashedPlaybackAsBackgroundAudioTimer
_containerView
_containerViewVisibilityAnimator
_contentClippingView
_contentContainer
_contentContainerRespondsTo
_contentLoadingIndicator
_contentLoadingIndicatorContainerView
_contentTypeLabel
_contentView
_contextId
_continuousCornerRadius
_controlsContainerView
_controlsShouldAutoHide
_controlsStyle
_controlsView
_coordinatedAnimationsForControlsVisibiity
_cornerRadius
_cornerRadiusScale
_currentAnimationDuration
_currentContentCornerRadius
_currentCustomImage
_currentGlyphImageName
_currentGlyphSize
_currentState
_currentStateAllowsProcessAssertion
_customBackgroundColor
_customElapsedTrackTintColor
_darkTintView
_deactivateIfNeededForInterruptedOrInvalidatedConnection
_delegate
_delegateRespondsTo
_dependents
_dictionaryForKey:
_dictionaryRepresentation
_dimmingView
_displayLink
_displayLinkForProgressUpdates
_doubleDoubleTapGestureRecognizer
_doubleForKey:
_doubleTapGestureRecognizer
_elapsedTrack
_endDeactivatingPictureInPictureIfNeededWithAnimationType:stopReason:
_endDeactivatingPictureInPictureIfNeededWithAnimationType:stopReason:cleanupHandlerOrNil:
_ensureDependents
_ensureMutableDictionary
_enumerateDependents:
_error
_establishConnection
_executeDelegateCallbackBlock:assumeApplicationActive:
_exemptAttribution
_expectedScene
_explanation
_externalResourcesUsageReductionReasons
_faceTimeVideoCallInterruptionExemption
_faceTimeVideoCallRemoteObject
_finishCleanup
_finishTaskInvalidationUUID
_gaussianBlurFilter
_generatePlaybackStateDiffAndMarkAsSent
_glyphSize
_groupLeader
_groupNameBase
_handleDoubleDoubleTapGestureRecognizer:
_handleDoubleTapGestureRecognizer:
_handleDragEnter:
_handleDragExit:
_handleHoverGestureRecognizer:
_handleInvalidatedTarget:
_handleSceneConnectionChangedNotification:
_handleSingleTapGestureRecognizer:
_handleTapWhileStashedGestureRecognizer:
_handleTouchDown:
_handleTouchUpInside:
_handleTouchUpOrCancel:
_hasActiveNonVideoCallRemoteObjectAuthorizedForBackgroundPIP
_hasAnyDependentsThatWantsCapturedBlur
_hasBegun
_hasBegunTwoStageStop
_hasPendingCancellationRequest
_hasPendingStopRequest
_hidableControlsVisibilityAnimator
_hidableItemsLayoutContainerView
_hideControlsAfterDelayTimer
_highlightAnimator
_highlighted
_hitTestExtenderView
_hostedWindow
_hostedWindowHostingHandle
_hoverGestureRecognizer
_identifiersForAuthorizedActivitySessions
_ignoreCornerRadiusUpdates
_image
_inActivitySession
_inFlightStashProgressAnimationIdentifier
_inFlightStashTabAnimationIdentifier
_initialLayerFrameForInteractiveTransitionAnimationUponBackgrounding
_initialLayerFrameIsNull
_initializeWithControlsStyle:viewController:reason:
_insertContentContainerViewIfNeeded
_interactivelyResizing
_interfaceOrientationForTransitionAnimationAssumeApplicationActive:
_interrupted
_interruptionAssistant
_interruptionBeganFinishTaskAssertion
_interruptionDimmingView
_interruptionsDescription
_invalidateAllAssertions
_invalidateForFailureToStartStopOrCancel
_invalidateInterruptionBeganFinishTaskAssertion
_invalidateTimer
_invalidated
_invalidationTimerWithTimeout:
_invalidationTimerWithTimeout:block:
_isAppICS
_isAssociatedWithOtherObject:
_isCaptureOnly
_isChevronShownLeft
_isHostedWindowSizeChangeDuringPinchGesture
_isInAWindow
_isInActivitySession
_isInCallService
_isInViewService
_isInactive
_isInterruptedForAnyReason
_isInterruptedForDefaultReason
_isInterruptedForStash
_isInvalidated
_isMicroPIP
_isObservingViewController
_isPictureInPictureActive
_isPictureInPicturePossible
_isPictureInPictureSuspended
_isShowingChrome
_isSuspended
_isTransparentOrHasTransparentAncestor
_isUnderLock
_isViewControllerWindowSceneActive
_isViewControllerWindowSceneConsideredActive
_isWindowServerHostingManaged
_labelSize
_lastKnownElapsedTime
_layerHostView
_layoutContentTypeLabel
_layoutSkipPrerollButton
_layoutStashTabViewsIfNeeded
_leftChevron
_leftSideContentPortalView
_legacyPictureInPictureInterruptionBegan
_legacyPictureInPictureInterruptionEnded
_lightTintView
_link
_linkFired
_linkFired:
_listener
_listenerQueue
_liveIndicatorBadgeButton
_loadShadowViewIfNeeded
_loadTabShadowViewIfNeeded
_loadedTimeRanges
_lock
_lock_allowsResumingAfterInterruptionEnds
_lock_bundleIdentifier
_lock_calculateIsInterrupted
_lock_connection
_lock_connectionIfInterrupted
_lock_exemptAttribution
_lock_exemptFromUILockInterruptionsWhenActive
_lock_interruptions
_lock_invalidated
_lock_isInterrupted
_lock_isInterruptedAccordingToProxy
_lock_isProxyActive
_lock_pictureInPictureRemoteObjects
_lock_state
_lock_targets
_lock_targetsByActivitySessionIdentifier
_mainBody
_manageSharingOfTouchesBetweenClientAndHostContext
_markConnectionAsInterrupted
_menuItems
_microPIPHostedWindowHostingHandle
_microPIPSize
_minimumStashTabSize
_mutableDictionary
_mutableIdentifiersForAuthorizedActivitySessions
_needsReinitialization
_newShadowView
_noteTetheringDidUpdate
_notifyActionButtonTapped
_notifyProxyOfStashedOrUnderLock:
_numberForKey:
_objectForKey:
_owner
_performLayout
_performStartAnimationWithCompletionHandler:
_performStopAnimationWithFinalInterfaceOrientation:finalLayerFrame:completionHandler:
_performVisibilityTransitionAnimated:existingAnimator:animations:success:
_performWithoutRetargetingAnimations:
_pictureInPictureActive
_pictureInPictureApplication
_pictureInPictureApplications
_pictureInPictureProxy
_pictureInPictureRemoteObjects
_pictureInPictureRemoteObjectsSupportingActiveSessionCancellationOnStart
_pictureInPictureShouldStartWhenEnteringBackground
_pictureInPictureStartedAutomatically
_pictureInPictureStashedOrUnderLock
_pictureInPictureWasStartedWhenEnteringBackground
_pipStopFinalStageCompletionHandler
_pipStopUserInterfaceRestoreContinuationBlock
_playbackProgress
_playbackRate
_playbackState
_playbackStateAccordingToRemoteObject
_pointerInteraction
_portalsWereActive
_portalsWereActiveLeft
_preferredBackgroundColor
_preferredContentSize
_preferredEffect
_preferredFramesPerSecond
_prefersControlsHidden
_prefersIdleTimerDisabled
_prefersStashTabSuppressed
_prerollAttributes
_prerollIndicatorFrameWithScaling:
_prerollIndicatorView
_preventAutoHideOfControlsAssertion
_preventAutoHideOfControlsAssertionIdentifiers
_prewarmAndStartAfterTimeout
_prewarmingTimeoutTimer
_processAssertion
_processIdentifier
_progress
_progressIndicator
_progressIndicatorFrameWithScaling:
_pulseAnimator
_pulseState
_queue
_queue_notifyProxyOfInterruptionBegan
_queue_notifyProxyOfInterruptionEnded
_queue_outstandingRotationAnimationsCount
_readyForDisplay
_remoteObject
_remoteObjectForPictureInPictureApplication:passingTest:error:
_remoteObjectForPictureInPictureApplication:sceneSessionPersistentIdentifier:error:
_remoteObjectForTestApplicationWithBundleIdentifier:
_remoteObjectThatCanCancelPictureInPictureApplication:sceneSessionPersistentIdentifier:error:
_remoteObjectThatCanEndTwoStageStopPictureInPictureApplication:error:
_remoteObjectThatCanStopPictureInPictureApplication:sceneSessionPersistentIdentifier:error:
_remoteObjectThatRequestedStop
_remoteObjectThatShouldStartPictureInPictureEnteringBackgroundForPictureInPictureApplication:sceneSessionPersistentIdentifier:error:
_remoteObjectWithErrorHandler:
_remoteObjectsForPictureInPictureApplication:
_remoteView
_removeDependent:
_removeRemoteObject:
_removeViewControllerFromHostedWindowIfNeeded
_resetInternalState
_resetStashTabViewsIfPossible
_restoreButton
_restoreInterruptedConnectionIfNeeded
_rightChevron
_rightSideContentPortalView
_rootViewController
_runLoopObserver
_sceneSessionPersistentIdentifier
_sceneSessionPersistentIdentifierAccordingToRemoteObject
_setActivationState:reason:
_setBool:forKey:
_setContinuousCornerRadius:
_setControlsHidden:animated:
_setCornerRadius:
_setCurrentState:
_setDictionaryOrNotFound:forKey:
_setDouble:forKey:
_setInteger:forKey:
_setInterruptedForDefaultReason:initiatedByRemoteObject:
_setInvalidated:
_setMaybeNeedsUpdatePlaybackState
_setPictureInPictureActive:
_setPictureInPicturePossible:
_setPictureInPictureSuspended:
_setPortalActive:left:
_setPrefersControlsHidden:animated:
_setQueue:
_setResolvedResourcesUsageReductionReasons:
_setResourcesUsageReductionReasons:
_setStashMaskActive:
_setStashedOrUnderLock:reason:
_setStashedTabHidden:left:
_setStateValue:forKey:
_setTextColorFollowsTintColor:
_setUILockedResourcesUsageReductionReasons:
_settings
_shadowContinuousCornerRadius
_shadowOffsetX
_shadowOffsetY
_shadowOpacity
_shadowRadius
_shadowView
_shouldAnimatePropertyWithKey:
_shouldCancelActivePictureInPictureOnStart
_shouldCancelUponActivation
_shouldDisablePointerInteraction
_shouldHitTest
_shouldPullCancellationPolicyOnStart
_shouldShowAlternateActionButtonImage
_shouldShowLoadingIndicator
_shouldStopUponActivation
_showingControlsForHoverActive
_showsDimmingView
_showsPictureInPictureUnavailableIndicator
_singleTapGestureRecognizer
_skipForwardButton
_skipPrerollButtonView
_sourceScene
_sourceSceneSessionPersistentIdentifier
_sourceView
_startBackgroundPIPAssertion
_startBackgroundPIPWhilePrewarmingIfNeeded
_startPictureInPictureAnimated:enteringBackground:reason:withCompletionHandler:
_startedAutomatically
_stashMaskView
_stashTabShownLeft
_stashTabSpringBehavior
_stashView
_stashed
_stashedTabWidth
_stashedTapGestureRecognizer
_stateCaptureInvalidatable
_stateDumpInvalidatable
_stateTransitionHandler
_stopObservingWindowSceneActivationState
_stopPictureInPictureAnimated:restoreUserInterface:withCompletionHandler:
_stopTethering
_stringForKey:
_subviewTransform
_suspendedPictureInPictureRemoteObject
_synchronizeDrawingWithFence:
_synchronizedDrawingFence
_systemAnimationFenceExemptQueue
_systemImageName
_tab
_tabBottomCornerFill
_tabHidden
_tabLeftBottomCornerDestOut
_tabLeftTopCornerDestOut
_tabRightBottomCornerDestOut
_tabRightTopCornerDestOut
_tabShadowView
_tabShownLeft
_tabTopCornerFill
_targetForIdentifier:
_tetheredRemoteObject
_tetheredViewController
_tetheringMode
_tetheringRemoteObject
_tetheringViewController
_timerForInvalidatingIfStopOrCancelFails
_touchDeliveryPolicyAssertion
_transitionToPulseStateIfNeeded:
_transitionToState:
_twoStageStopForPictureInPictureRestoreWithContinueAfterUserInterfaceRestoreBlock:completionHandler:
_updateActiveProxyAndViewControllerOfInterruptionIfNeeded
_updateAllRemoteObjectsForPIPPossibleAndExemptAttributions
_updateAutoPIPSettingsAndNotifyRemoteObjectIfNeeded
_updateAutoPIPSettingsAndNotifyRemoteObjectWithReason:
_updateContentCornerRadiusForMaskActive:
_updateCornerRadii
_updateElapsedTrackTintColor
_updateFaceTimePlaybackStateUsingBlock:
_updateFilters
_updateForCircularAppearanceIfNeeded
_updateGlyphConfigurationIfNeeded
_updateHideControlsAfterDelayTimer
_updateInteractiveFrameWorkaroundFor_100127310:
_updateIsInterruptedIfNeededForReason:
_updateIsInterruptedIfNeededForReason:initiatedByRemoteObject:
_updatePictureInPictureActive:
_updatePlaybackStateContentTypeIfNeeded
_updatePlaybackStateIfNeeded
_updatePointerEffect
_updatePreferredContentSize:withCompletionHandler:
_updatePulseAnimatorIfNeeded
_updateScreenSharingInfoIfNeeded
_updateStashTabStateWithBehavior:
_updateViewModelValues
_updateVisibilityOfView:hidden:animated:existingAnimator:
_viewFrameForInteractiveTransitionAnimationWhenEnteringBackgroundDidChangeForViewControllerWithReason:
_viewFrameForTransitionAnimationAssumeApplicationActive:
_viewModel
_waitForUIFinalizationCompletionBlock
_wantsCapturedBlur
_wantsProcessAssertion
_windowSceneActivationStateObserver
_windowSceneForInteractiveTransitionAnimationWhenEnteringBackgroundDidChangeForViewControllerWithReason:
accessibilityIdentifier
acquireWithTarget:domainAttribute:
action
actionButtonAccessibilityIdentifier
actionButtonImageTintColor
actionButtonSystemImageName
actionButtonTapped
actionButtonsWantBackground
actionWithSettingsKeyPath:
activate
activateBackgroundPIPAuthorizationService
activateConstraints:
activePictureInPictureApplication
activePictureInPictureApplications
activeSceneSessionIdentifiersByApplication
activitySessionIdentifier
actualButton
addChildViewController:
addCompletion:
addEntriesFromDictionary:
addGestureRecognizer:
addKeyPathObserver:
addObject:
addObserver:forKeyPath:options:context:
addObserver:selector:name:object:
addObserverForName:object:queue:usingBlock:
addReason:attribution:
addSubview:
addTarget:action:forControlEvents:
addToRunLoop:forMode:
allowsEdgeAntialiasing
allowsGroupBlending
allowsResumingAfterInterruptionEnds
alpha
analyticsDelegate
anchorContentTime
anchorPoint
anchorWallTime
animateViewWithAnimationType:initialSpringVelocity:animations:completion:
animateWithDuration:delay:options:animations:completion:
animatedLayerProperties
anyObject
appBundleIdentifier
appendBodySectionWithName:multilinePrefix:block:
appendBool:withName:
appendDescriptionForKey:value:toBuilder:
appendDouble:withName:decimalPrecision:
appendInteger:
appendInteger:withName:
appendString:
appendString:withName:
appendString:withName:skipIfEmpty:
application
applicationInfoForPID:completion:
applicationState
array
arrayWithObject:
arrayWithObjects:count:
assertionWithDomainAttribute:forProcessWithIdentifier:explanation:
associatedBoolValue
associatedDoubleValue
associatedIntegerValue
attributeWithCompletionPolicy:
attributeWithDomain:name:
attribution
auditToken
automaticallyInterruptsForLegacyFaceTimeBehaviors
autorelease
backdropHidden
backdropScale
backgroundAudioPolicy
backgroundPIPService:canAuthorizeBackgroundPIPForActivitySessionWithIdentifier:appBundleIdentifier:
backgroundPIPService:didGrantBackgroundPIPAuthorizationForActivitySessionWithIdentifier:
backgroundPIPService:didRevokeBackgroundPIPAuthorizationForActivitySessionWithIdentifier:
backgroundPIPTargetDidInvalidate:
backgroundPIPTargetRequestsAuthorization:
begin
beginIgnoringInteractionEvents
beginTwoStagePictureInPictureStopByRestoringUserInterfaceWithCompletionHandler:
beginTwoStageStopPictureInPictureByRestoringUserInterfaceWithCompletionHandler:
beginTwoStageStopPictureInPictureForApplication:withSceneSessionPersistentIdentifier:animated:byRestoringUserInterfaceWithCompletionHandler:
blackColor
blurProgress
boolValue
bounds
bs_containsObjectPassingTest:
bs_firstObjectPassingTest:
build
builderWithObject:
bundle
bundleIdentifier
bundleInfoValueForKey:PID:
button
buttonView
buttonView:contentEdgeInsetsForProposedInsets:
buttonView:imageRectForContentRect:proposedRect:
buttonView:titleRectForContentRect:proposedRect:
buttonViewDidReceiveTouchUpInside:
buttonWithDelegate:
cameraActive
cameraHasMicrophone
cameraInterruptionAttributions
canActivateUntetheredAlongsideOtherObject:
canBecomeFirstResponder
canCancelPictureInPicture
canEndTwoStageStopPictureInPicture
canPreventOrSuspendRemoteObject:
canStartBackgroundPIPForCurrentActivitySessionIdentifier
canStartMicroPIP
canStartShowingChrome
canStopPictureInPicture
canTetherRemoteObjectAsMicroPIP:
cancel
cancelButtonAccessibilityIdentifier
cancelButtonCustomImage
cancelButtonCustomText
cancelButtonImageTintColor
cancelButtonSystemImageName
cancelButtonWantsBackground
cancelPictureInPictureForApplication:
cancelPictureInPictureForApplication:sceneSessionPersistentIdentifier:
captureOnly
center
checkActivePictureInPictureCancellationPolicyWithCompletion:
childViewControllers
circular
class
cleanupWithCompletionHandler:
clearColor
clientSessionIdentifier
colorWithRed:green:blue:alpha:
colorWithWhite:alpha:
commandForBeginInterruption
commandForCancelPIP
commandForEndInterruptionWithShouldResumeSuggestion:
commandForEndOrLeaveActivityRequested
commandForFaceTimeAction:
commandForFaceTimeAction:associatedBoolValue:
commandForFaceTimeAction:associatedIntegerValue:
commandForInvalidateFromProxy
commandForMenuItemSelected:
commandForPlaybackAction:
commandForPlaybackAction:associatedBoolValue:
commandForPlaybackAction:associatedDoubleValue:
commandForRestoreFromPIP
commandForSendActionButtonTapped
commandForSetCameraEnabled:
commandForSetMicrophoneMuted:
commandForSetMuted:
commandForSetPlaying:
commandForSetSuspended:
commandForShowHUD
commandForSkipByInterval:
commandForSkipPreroll
commandForSkipToLive
commandForStartPIP
commandForSwitchCamera
commandForSystemAction:
commandForTestStartPIP
commandForTestingAction:
commandForToggleControlsVisibility
commandForToggleZoom
commandHandler
commit
componentsJoinedByString:
compositingFilter
configurationWithFont:
configureConnection:
conformsToProtocol:
connection
connectionActive
connectionWithEndpoint:
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:
constraintsWithVisualFormat:options:metrics:views:
containsPoint:
contentContainer
contentContainerView
contentEdgeInsets
contentType
contentTypeLabel
contentTypePictureInPictureApplication:sceneSessionPersistentIdentifier:
contentView
contextID
controlsShouldAutoHide
controlsStyle
controlsViewModel:didIssueCommand:
controlsViewModel:valuesChangedFromOldValue:
convertPoint:fromView:
convertPoint:toView:
convertRect:fromCoordinateSpace:
coordinatedAnimationsForControlsVisibiity
copy
copyWithExemptAttribution:
copyWithZone:
cornerRadiusScale
count
countByEnumeratingWithState:objects:count:
currentConnection
currentContentCornerRadius
currentHandler
currentState
customBackgroundColor
customElapsedTrackTintColor
darkGrayColor
deactivateAnalyticsSessionIfNeeded
debugDescription
defaultCenter
defaultContentCornerRadius
defaultPrerollTintColor
defaultShellMachName
defaultValueForKey:
delegate
dependents
description
descriptionBuilderWithMultilinePrefix:
dictionary
dictionaryRepresentation
dictionaryWithCapacity:
dictionaryWithObjects:forKeys:count:
didAnimatePictureInPictureStop
didChangeValueForKey:
didMoveToParentViewController:
didMoveToSuperview
diffFromPlaybackState:
disableUpdateMask
disabledTintColor
disablesLayerCloning
displayLink
displayScale
domainName
doubleValue
effectWithPreview:
elapsedTime
enabledTintColor
endIgnoringInteractionEvents
endTwoStagePictureInPictureStopWithCompletionBlock:
endTwoStageStopPictureInPictureForApplication:withSceneSessionPersistentIdentifier:animated:completionHandler:
endTwoStageStopPictureInPictureWithCompletionBlock:
endpoint
endpointForMachName:service:instance:
enumerateKeysAndObjectsUsingBlock:
errorWithDomain:code:userInfo:
exemptAttribution
exemptFromUILockInterruptionsWhenActive
existingPictureInPictureApplicationForBundleIdentifier:
faceTimeAction
finishAnimationAtPosition:
fixedCoordinateSpace
flashControls
font
fontDescriptor
fontDescriptorByAddingAttributes:
fontWithDescriptor:size:
frame
gaussianBlurRadius
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveEvent:
gestureRecognizer:shouldReceivePress:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizerShouldBegin:
getRed:green:blue:alpha:
glyphSize
grantAuthorizationForActivitySessionWithIdentifier:bundleIdentifier:
groupLeader
groupName
handleActionButtonTapped
handleCancelButtonTapped
handleCommand:
handleDoubleDoubleTap
handleDoubleTapGesture
handleFailureInFunction:file:lineNumber:description:
handleFailureInMethod:object:file:lineNumber:description:
handleRestoreButtonTapped
handleSkipBackButtonTapped
handleSkipForwardButtonTapped
handleSkipPrerollButtonTapped
handleTapWhileStashedGesture
hasAcquiredAuthorizationForActivitySessionWithIdentifier:appBundleIdentifier:
hasInterruptionReason:
hasInvalidTiming
hash
highlightAnimator
highlighted
hitTest:withEvent:
hitTestExtenderView
hostedWindowHostingHandle
hostedWindowSizeChangeBegan
hostedWindowSizeChangeEnded
hostingHandle
identifier
identifiersForAuthorizedActivitySessions
ignoreCornerRadiusUpdates
image
imageForState:
imageRectForContentRect:
imageView
imageWithRenderingMode:
inActivitySession
includesActionButton
includesCancelButton
includesDoubleDoubleTapGestureRecognizer
includesDoubleTapGestureRecognizer
includesLiveIndicatorBadge
includesProgressBar
includesRestoreButton
includesSingleTapGestureRecognizer
includesSkipBackButton
includesSkipForwardButton
includesWaitingToPlayIndicator
init
initWithActivitySessionIdentifier:appBundleIdentifier:stateTransitionHandler:
initWithApplication:sourceSceneSessionPersistentIdentifier:controlsStyle:
initWithCoder:
initWithConnection:delegate:
initWithConnection:interruptionAssistant:
initWithControlsStyle:viewController:
initWithDelegate:
initWithDictionary:
initWithDictionary:action:
initWithDictionaryRepresentation:
initWithDuration:curve:animations:
initWithExplanation:
initWithExplanation:target:attributes:
initWithFrame:
initWithFrame:captureOnly:
initWithFrame:minimumStashTabSize:
initWithFrame:viewModel:
initWithIdentifier:forReason:invalidationBlock:
initWithImage:
initWithMachServiceName:
initWithMachServiceName:options:
initWithNibName:bundle:
initWithOwner:linkFired:
initWithPictureInPictureProxy:
initWithProcessIdentifier:
initWithReason:attribution:
initWithRequiredLinearPlaybackEndTime:preferredTintColor:contentType:
initWithTarget:action:
initWithTitle:symbolName:action:
initWithView:
initialFrameForInteractivePictureInPictureAnimationEnteringBackgroundForApplication:
initialFrameForInteractivePictureInPictureAnimationEnteringBackgroundForApplication:sceneSessionPersistentIdentifier:
initialLayerFrameForInteractiveTransitionAnimationUponBackgrounding
initializePictureInPictureWithControlsStyle:preferredContentSize:completionHandler:
insertSubview:atIndex:
insertSubview:belowSubview:
integerValue
interactivelyResizing
interface
interfaceOrientation
interfaceWithProtocol:
interfaceWithServer:client:
interrupted
invalidate
invokeAction
ipc_addPolicy:
isActionButtonEnabled
isAnimating
isAssociatedWithRemoteObject:
isBackdropHidden
isCameraActive
isCircular
isConnectionActive
isDescendantOfView:
isEnabled
isEqual:
isEqualToDictionary:
isEqualToNumber:
isEqualToPGPictureInPictureApplication:
isEqualToString:
isEquivalentToPlaybackState:
isExemptFromUILockInterruptionsWhenActive
isHidden
isHighlighted
isInActivitySession
isInteractivelyResizing
isInterrupted
isKindOfClass:
isMainThread
isMemberOfClass:
isMicrophoneMuted
isPaused
isPictureInPictureActive
isPictureInPictureInterrupted
isPictureInPicturePossible
isPictureInPictureStashed
isPictureInPictureStashedOrUnderLock
isPictureInPictureSupported
isPictureInPictureSuspended
isPrerollSkippable
isProxyActive
isReadyForDisplay
isRoutingVideoToHostedWindow
isRunning
isSkipBackButtonEnabled
isSkipForwardButtonEnabled
isStartingPictureInPicture
isStartingStoppingOrCancellingPictureInPicture
isStashTabHidden
isStoppingOrCancellingPictureInPicture
isStoppingOrCancellingPictureInPictureForApplication:sceneSessionPersistentIdentifier:
isVideoCall
isViewLoaded
keysForEqualityOfNumberValues
labelSize
labelText
labelWidth
layer
layerClass
layoutIfNeeded
layoutStashChevrons
layoutSubviews
length
linkFired
listener:didReceiveConnection:withContext:
listener:shouldAcceptNewConnection:
listenerWithConfigurator:
loadView
loadedTimeRanges
localizedDescription
localizedStringForKey:value:table:
mainBundle
mainRunLoop
mainScreen
maskView
matchesSceneSessionIdentifier:
menuItems
microPIPHostedWindowHostingHandle
microPIPSize
minValue:maxValue:
minimumStashTabSize
minusSet:
moduleWithTitle:contents:
mutableCopy
mutableDictionary
muted
name
normalizedProgress
noteDidNotifyProxyOfInterruptionBegan
noteDidNotifyProxyOfInterruptionEnded
notePictureInPictureStartedAutomatically:
notePictureInPictureViewControllerPrefersHiddenFromClonedDisplayDidChange
notePictureInPictureViewControllerTetheringDidUpdate
notePictureInPictureWillStopForAppRequest:preferredFullScreenRestore:
null
numberWithDouble:
numberWithInteger:
numberWithUnsignedInteger:
object
objectForKey:
objectForKeyedSubscript:
objectForSetting:
objectsPassingTest:
observeValueForKeyPath:ofObject:change:context:
openApplication:withOptions:completion:
optionsWithDictionary:
origin
owner
parentViewController
performAsync:
performResumeAnimationWithCompletionHandler:
performRotateAnimationWithRotation:completionHandler:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performStartAnimated:withCompletionHandler:
performStartAnimationWithCompletionHandler:
performStartInIsolationWithCompletionHandler:
performStopAnimated:withFinalInterfaceOrientation:finalLayerFrame:completionHandler:
performStopAnimationWithFinalInterfaceOrientation:finalLayerFrame:completionHandler:
performStopInIsolationWithCompletionHandler:
performSuspendAnimationWithCompletionHandler:
performWithoutAnimation:
persistenceIdentifier
persistentIdentifier
pg_hasVisiblePIPContent
pictureInPictureActive
pictureInPictureApplication
pictureInPictureApplicationWithProcessIdentifier:
pictureInPictureApplications
pictureInPictureCancelRequestedAnimated:withCompletionHandler:
pictureInPictureClientDidRequestStashing
pictureInPictureController:didCreatePictureInPictureViewController:
pictureInPictureController:didHidePictureInPictureViewController:
pictureInPictureController:didRequestStopForPictureInPictureViewController:sourceSceneSessionIdentifier:animated:
pictureInPictureController:requestActivationOfSceneWithPersistenceIdentier:pictureInPictureViewController:completion:
pictureInPictureController:shouldAuthorizeBackgroundPIPForAppWithBundleIdentifier:
pictureInPictureController:shouldCancelPictureInPictureForApplication:whenStartingPictureInPictureForApplication:
pictureInPictureController:shouldDenyNewConnection:
pictureInPictureController:willDestroyPictureInPictureViewController:
pictureInPictureController:willHidePictureInPictureViewController:
pictureInPictureControllerCanBackgroundStartForFaceTimeVideoCall:
pictureInPictureDidActivateAnalyticsSessionWithUUID:analyticsSourceUUID:automatically:
pictureInPictureDidChangeStashStateForAnalyticsSessionWithUUID:stashed:
pictureInPictureDidCreateAnalyticsSessionWithUUID:bundleIdentifier:contentType:
pictureInPictureDidCreateAnalyticsSourceWithUUID:bundleIdentifier:contentType:
pictureInPictureDidDeactivateAnalyticsSessionWithUUID:analyticsSourceUUID:appStoppedSession:restoredFullScreen:
pictureInPictureDidDestroyAnalyticsSessionWithUUID:
pictureInPictureDidDestroyAnalyticsSourceWithUUID:
pictureInPictureInterrupted
pictureInPictureInterruptionBegan
pictureInPictureInterruptionBeganWithReason:
pictureInPictureInterruptionBeganWithReason:attribution:
pictureInPictureInterruptionEnded
pictureInPictureInterruptionEndedWithReason:
pictureInPictureInterruptionEndedWithReason:attribution:
pictureInPictureInvalidated
pictureInPicturePossible
pictureInPictureProxy:didReceivePlaybackCommand:
pictureInPictureProxy:didReceiveTestingCommand:
pictureInPictureProxy:didRequestFaceTimeAction:
pictureInPictureProxy:didStartPictureInPictureWithAnimationType:
pictureInPictureProxy:didStopPictureInPictureWithAnimationType:reason:
pictureInPictureProxy:didUpdateResourcesUsageReductionReasons:oldReasons:
pictureInPictureProxy:didUpdateStashedOrUnderLockState:
pictureInPictureProxy:failedToStartPictureInPictureWithAnimationType:error:
pictureInPictureProxy:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:
pictureInPictureProxy:willStartPictureInPictureWithAnimationType:
pictureInPictureProxy:willStopPictureInPictureWithAnimationType:reason:
pictureInPictureProxyCanIssueOptionalCommand:
pictureInPictureProxyContentType:
pictureInPictureProxyInterfaceOrientationForTransitionAnimation:
pictureInPictureProxyPictureInPictureInterruptionBegan:
pictureInPictureProxyPictureInPictureInterruptionEnded:
pictureInPictureProxySupportsPrewarming:
pictureInPictureProxyViewControllerWindowForTransitionAnimation:
pictureInPictureProxyViewFrameForTransitionAnimation:
pictureInPictureProxyWillSetupPictureInPictureStop:
pictureInPictureProxyWithControlsStyle:viewController:
pictureInPictureRemoteObject:didCreatePictureInPictureViewController:
pictureInPictureRemoteObject:didHidePictureInPictureViewController:
pictureInPictureRemoteObject:didRequestPictureInPictureStopForViewController:sourceSceneSessionIdentifier:animated:
pictureInPictureRemoteObject:didShowPictureInPictureViewController:
pictureInPictureRemoteObject:requestActivationOfSceneWithPersistenceIdentier:completion:
pictureInPictureRemoteObject:willDestroyPictureInPictureViewController:
pictureInPictureRemoteObject:willHidePictureInPictureViewController:
pictureInPictureRemoteObject:willShowPictureInPictureViewController:
pictureInPictureRemoteObjectHasBackgroundPIPAuthorization:
pictureInPictureRemoteObjectInterruptionAssistant:
pictureInPictureRemoteObjectNeedsActivationAndInterruptionPolicyUpdate:
pictureInPictureRemoteObjectShouldAcceptSetupRequest:
pictureInPictureRemoteObjectShouldCancelActivePictureInPictureOnStart:
pictureInPictureRemoteObjectShouldUpdateCancellationPolicyOnStart:
pictureInPictureShouldStartWhenEnteringBackground
pictureInPictureStartRequestedAnimated:withCompletionHandler:
pictureInPictureStashedOrUnderLock
pictureInPictureStopRequestedAnimated:withCompletionHandler:
pictureInPictureSuspended
pictureInPictureViewController
pictureInPictureViewController:didReceiveCommand:
pictureInPictureViewController:didTransitionToStashed:
pictureInPictureViewController:updateHostedWindowSize:animationType:initialSpringVelocity:
pictureInPictureViewControllerDidRequestCancel:
pictureInPictureViewControllerDidRequestStop:
pictureInPictureViewControllerHostedWindowSizeChangeBegan:
pictureInPictureViewControllerHostedWindowSizeChangeEnded:
pictureInPictureViewControllerShouldHideTetheredViewControllerAlongsideControls:
pictureInPictureViewControllerWantsStashTabSuppression:
pictureInPictureWasStartedWhenEnteringBackground
pipDidStartForRemoteObject:
pipDidStopForRemoteObject:
pipVisibleAssertionForProcessWithIdentifier:explanation:
pipVisibleDomainAttribute
playbackAction
playbackProgress
playbackRate
playbackSourceDidUpdateIsRoutingVideoToHostedWindow:
playbackState
pointInside:withEvent:
pointerInteraction
pointerInteraction:regionForRequest:defaultRegion:
pointerInteraction:styleForRegion:
pointerInteraction:willEnterRegion:animator:
pointerInteraction:willExitRegion:animator:
policyRequiringSharingOfTouchesDeliveredToChildContextId:withHostContextId:
portalLayer
position
postNotificationName:object:
preferredContentSize
preferredContentSizeDidChangeForPictureInPictureViewController
preferredContentSizeDidChangeForViewController
preferredContentSizeForActivePictureInPictureWithApplication:sceneSessionPersistentIdentifier:
preferredContentSizeForInteractivePictureInPictureAnimationEnteringBackgroundForApplication:
preferredContentSizeForInteractivelyEnteringBackgroundForApplication:sceneSessionPersistentIdentifier:
preferredFramesPerSecond
preferredInterfaceOrientationForPresentation
preferredMinimumWidth
preferredTintColor
preferredTintColorDescription
prefersControlsHidden
prefersHiddenFromClonedDisplay
prefersIdleTimerDisabled
prefersStashTabSuppressed
prepareStartAnimationWithInitialInterfaceOrientation:initialLayerFrame:completionHandler:
prepareStopAnimationWithCompletionHandler:
prerollAttributes
prerollAttributesForAdContentWithRequiredLinearPlaybackEndTime:preferredTintColor:
prerollAttributesForSponsoredContentWithRequiredLinearPlaybackEndTime:preferredTintColor:
prerollTintColor
processIdentifier
progress
progressBarShouldUpdate
protocolForProtocol:
proxyActive
quaternaryLabelColor
queue
raise:format:
rangeOfString:
reason
recommendedUpdateCadenceForProgressBarWithWidthInPixels:
reducedTransparencyColor
relinquishInterfaceOrientationLock
remoteObjectProxyWithErrorHandler:
remoteProcess
remoteTarget
removeFromParentViewController
removeFromSuperview
removeGestureRecognizer:
removeInteraction:
removeObject:
removeObserver:forKeyPath:context:
removeObserver:name:object:
removeReason:attribution:
renderingMode
requiredLinearPlaybackEndTime
requiresLinearPlayback
resetChevronState
resourcesUsageReductionReasons
respondsToSelector:
restoreButtonAccessibilityIdentifier
restoreButtonSystemImageName
restoreButtonWantsBackground
restorePictureInPictureTestActionForApplicationWithBundleIdentifier:
resume
retain
retainCount
revoke
revokeAuthorization
revokeAuthorizationActivitySessionWithIdentifier:
rootSettings
rootSettingsClass
rotateContentContainer:withCompletionHandler:
routingVideoToHostedWindow
rowWithTitle:action:
rowWithTitle:valueKeyPath:
scale
scenesPassingTest:
scheduledTimerWithTimeInterval:repeats:block:
screen
secondaryLabelColor
secondsUntilPrerollSkippable
sectionWithRows:
sectionWithRows:title:
self
sendStartPictureInPictureTestAction
serviceQuality
setAccessibilityIdentifier:
setActions:
setActivationHandler:
setActivitySessionIdentifier:
setActualButton:
setAdjustsImageWhenDisabled:
setAllowsEdgeAntialiasing:
setAllowsGroupBlending:
setAllowsHitTesting:
setAlpha:
setAnalyticsDelegate:
setAnalyticsDelegate:analyticsSourceUUID:
setAnimatedLayerProperties:
setAnimationDuration:
setAssertionEndpoint:
setAutomaticallyInterruptsForLegacyFaceTimeBehaviors:
setBackdropHidden:
setBackdropScale:
setBackgroundAudioPolicy:
setBackgroundColor:
setBlurProgress:
setBounds:
setButtonView:
setCameraActive:
setCameraHasMicrophone:
setCanStartShowingChrome:
setCanSwitchCamera:
setCenter:
setChevronHidden:left:
setCircular:
setClasses:forSelector:argumentIndex:ofReply:
setClientSessionIdentifier:
setClipsToBounds:
setCommandHandler:
setCompositingFilter:
setContentContainer:
setContentCornerRadius:animated:
setContentDuration:
setContentEdgeInsets:
setContentViewHidden:
setContentsScale:
setControlsContainerHidden:animated:
setControlsStyle:
setControlsStyle:animated:withCompletionHandler:
setCoordinatedAnimationsForControlsVisibiity:
setCornerRadius:
setCornerRadiusScale:
setCurrentContentCornerRadius:
setCurrentResourcesUsageReductionReasons:
setCustomBackgroundColor:
setDefaultValues
setDelaysTouchesEnded:
setDelegate:
setDisableActions:
setDisablesLayerCloning:
setDomain:
setEnabled:
setExemptAttribution:
setExemptFromUILockInterruptionsWhenActive:
setExportedInterface:
setExportedObject:
setFilters:
setFont:
setFrame:
setGaussianBlurRadius:
setGlyphSize:
setGroupName:
setHidden:
setHighlightAnimator:
setHitTestExtenderView:
setHitTestsAsOpaque:
setHostedWindowHostingHandle:
setHoverGestureDisbaled:
setIgnoreCornerRadiusUpdates:
setImage:
setImage:forState:
setInActivitySession:
setIncludesWaitingToPlayIndicator:
setInteractivelyResizing:
setInterface:
setInterfaceTarget:
setInterruptionHandler:
setInvalidationHandler:
setLabelSize:
setLabelText:
setLineBreakMode:
setLoadedTimeRanges:
setMaskView:
setMatchesTransform:
setMenuItems:
setMicroPIPHostedWindowHostingHandle:
setMicroPIPSize:
setMicrophoneMuted:
setMinimumStashTabSize:
setMuted:
setName:
setNeedsLayout
setNumberOfTapsRequired:
setNumberOfTouchesRequired:
setObject:forKey:
setObject:forKeyedSubscript:
setObject:forSetting:
setOverrideUserInterfaceStyle:
setPaused:
setPg_hasVisiblePIPContent:
setPictureInPicturePossible:
setPictureInPictureShouldStartWhenEnteringBackground:
setPictureInPictureShouldStartWhenEnteringBackground:completionHandler:
setPlaybackProgress:playbackRate:
setPlaybackRate:elapsedTime:timeControlStatus:
setPointerInteraction:
setPosition:
setPreferredContentSize:
setPreferredFramesPerSecond:
setPreferredTintMode:
setPrefersControlsHidden:
setPrefersShadow:
setPrefersStashTabSuppressed:
setPrerollAttributes:
setPriority:
setProgress:
setReadyForDisplay:
setRemoteObjectInterface:
setRequiresLinearPlayback:
setResourcesUsageReductionReasons:
setRootViewController:
setRoutingVideoToHostedWindow:
setRunLoopObserver:
setScale:
setScreenSharingTitle:avatar:
setService:
setServiceQuality:
setShadowContinuousCornerRadius:
setShadowOffset:
setShadowOffsetX:
setShadowOffsetY:
setShadowOpacity:
setShadowPathIsBounds:
setShadowRadius:
setShouldDisablePointerInteraction:
setShowingControlsForHoverActive:
setShowsPictureInPictureUnavailableIndicator:
setSourceSceneSessionPersistentIdentifier:
setSourceView:
setStashProgress:
setStashTabHidden:left:withSpringBehavior:
setStashed:
setStashedOrUnderLock:
setStashedTabWidth:
setSupportsFaceTimeActions:
setSystemImageName:
setTabHidden:left:
setTabShadowView:
setTetheredRemoteObject:
setTetheringRemoteObject:
setTetheringViewController:mode:
setText:
setTextAlignment:
setTextColor:
setTimeRemainingText:
setTintColor:
setTitle:forState:
setTransform:
setTranslatesAutoresizingMaskIntoConstraints:
setUserInteractionEnabled:
setValue:forKey:
setValue:forKeyPath:
setVcForDebugging:
setView:
setWaitForUIFinalizationCompletionBlock:
setWithArray:
setWithCapacity:
set_pipStopFinalStageCompletionHandler:
set_pipStopUserInterfaceRestoreContinuationBlock:
settings
settings:changedValueForKeyPath:
settingsControllerModule
setupStartAnimated:hostedWindowHostingHandle:sceneSessionPersistentIdentifier:preferredContentSize:initialInterfaceOrientation:initialLayerFrame:completionHandler:
shadowContinuousCornerRadius
shadowOffsetX
shadowOffsetY
shadowOpacity
shadowRadius
sharedApplication
sharedInstance
shouldAutorotate
shouldNotifyProxyOfInterruptionBegan
shouldNotifyProxyOfInterruptionEnded
shouldShowAlternateActionButtonImage
shouldStartPictureInPictureEnteringBackground
shouldStartPictureInPictureForApplicationEnteringBackground:
shouldStartPictureInPictureForApplicationEnteringBackground:sceneSessionPersistentIdentifier:
showChrome:animated:
showingControlsForHoverActive
showsPictureInPictureUnavailableIndicator
sizeToFit
sizeWithAttributes:
skipBackButtonAccessibilityIdentifier
skipBackButtonBackgroundTintColor
skipBackButtonImageTintColor
skipBackButtonSystemImageName
skipForwardButtonAccessibilityIdentifier
skipForwardButtonBackgroundTintColor
skipForwardButtonSystemImageName
skipForwardButtonTappedWithTimeInterval:
skipPrerollButtonView
sourceSceneSessionPersistentIdentifier
sourceView
startAnimating
startAnimation
startListener
startMicroPIPIfPossibleForVideoCallWithScenePersistenceIdentifier:
startPictureInPicture
startPictureInPictureAnimated:completionHandler:
startPictureInPictureEnteringBackgroundAnimated:withCompletionHandler:
startPictureInPictureForApplicationEnteringBackground:animated:completionHandler:
startPictureInPictureForApplicationEnteringBackground:sceneSessionPersistentIdentifier:animated:completionHandler:
startPictureInPictureFromBackground
startPictureInPictureResourcesUsageReductionForApplication:requestingViewController:
startPictureInPictureTestActionForApplicationWithBundleIdentifier:
state
stateTransitionHandler
stopAnimating
stopAnimation:
stopPictureInPictureAndRestoreUserInterface
stopPictureInPictureAndRestoreUserInterface:
stopPictureInPictureAnimated:withCompletionHandler:
stopPictureInPictureAnimated:withFinalInterfaceOrientation:finalLayerFrame:completionHandler:
stopPictureInPictureForApplication:animated:completionHandler:
stopPictureInPictureForApplication:sceneSessionPersistentIdentifier:animated:completionHandler:
stopPictureInPictureResourcesUsageReductionForApplication:requestingViewController:
stringWithFormat:
stringWithUTF8String:
styleWithEffect:shape:
substringFromIndex:
substringToIndex:
subviews
succinctDescription
succinctDescriptionBuilder
superclass
superview
supportsFaceTimeActions
supportsMicroPIP
suspendedPictureInPictureApplication
symbolName
systemAction
systemFontOfSize:weight:
systemImageNamed:withConfiguration:
systemWhiteColor
systemYellowColor
tabShadowView
tabViewBounds
targetWithPid:
testingAction
tetherRemoteObject:toRemoteObject:mode:
tetherViewController:toViewController:mode:
tetheredRemoteObject
tetheredViewController
tetheringMode
tetheringModeForSceneSessionPersistentIdentifier:
tetheringRemoteObject
tetheringViewController
text
timeControlStatus
timeRemainingText
tintColor
tintColorDidChange
title
titleForState:
titleLabel
titleRectForContentRect:
transform
transientLocalSettings
transientTaskAssertionForProcessWithIdentifier:explanation:
transientTaskDomainAttribute
transitionToState:
transitionToStateIfPossible:
updateControlsAlpha
updateControlsHidden
updateEffects
updateHostedWindowSize:
updateHostedWindowSize:animationType:initialSpringVelocity:synchronizationFence:
updateInitialLayerFrameForInteractiveTransitionAnimationUponBackgrounding:withCompletionHandler:
updateMenuItems:
updatePlaybackStateUsingBlock:
updatePlaybackStateWithDiff:
updatePreferredContentSize:withCompletionHandler:
updateProgress
updateSourceSceneSessionPersistentIdentifierForInteractiveTransitionAnimationUponBackgrounding:withCompletionHandler:
updateValues
userInitiated
valueForEntitlement:
valueForKeyPath:
valueWithBytes:objCType:
valueWithCAColorMatrix:
values
vcForDebugging
videoCall
view
viewController
viewDidLoad
viewDidResize
viewFrameForInteractiveTransitionAnimationWhenEnteringBackgroundDidChangeForViewController
viewIfLoaded
viewModel
viewModelDidUpdateValuesFromOldValues:
viewWillLayoutSubviews
viewWillResize
viewWithHostedWindowHostingHandle:
waitForUIFinalizationCompletionBlock
wantsStashTabSuppression
weakObjectsHashTable
whiteColor
willAnimatePictureInPictureStart
willChangeValueForKey:
willMoveToSuperview:
window
windowScene
windowSceneForInteractiveTransitionAnimationWhenEnteringBackgroundDidChangeForViewController
zone
B16@0:8
v16@0:8
@20@0:8i16
@24@0:8^{_NSZone=}16
@16@0:8
B24@0:8@16
Q16@0:8
i16@0:8
@"NSString"
@28@0:8i16@20
@36@0:8@16i24@28
@24@0:8@16
v32@0:8@16@24
v20@0:8B16
@"RBSAssertion"
@"NSObject<OS_dispatch_queue>"
@"NSError"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v44@0:8@16@24@32B40
v24@0:8@16
v40@0:8@16@24@?32
B24@0:8@"PGPictureInPictureRemoteObject"16
v44@0:8@"PGPictureInPictureRemoteObject"16@"PGPictureInPictureViewController"24@"NSString"32B40
v32@0:8@"PGPictureInPictureRemoteObject"16@"PGPictureInPictureViewController"24
v24@0:8@"PGPictureInPictureRemoteObject"16
v40@0:8@"PGPictureInPictureRemoteObject"16@"NSString"24@?<v@?B>32
B40@0:8@16@24@32
B40@0:8@"PGBackgroundPIPService"16@"NSString"24@"NSString"32
v32@0:8@"PGBackgroundPIPService"16@"NSString"24
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16
{CGSize=dd}24@0:8@16
v36@0:8@16B24@?28
q32@0:8@16@24
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8@16@24
{CGSize=dd}32@0:8@16@24
q24@0:8@16
v44@0:8@16@24B32@?36
v24@0:8q16
B32@0:8q16@24
v32@0:8q16@24
@40@0:8@16@?24^@32
@40@0:8@16@24^@32
@32@0:8@16^@24
@"NSMutableSet"
@"NSXPCListener"
@"PGPictureInPictureRemoteObject"
@"PGBackgroundPIPService"
@"PGInterruptionAssistant"
@"<PGPictureInPictureControllerDelegate>"
{?="pictureInPictureController_didCreatePictureInPictureViewController"b1"pictureInPictureController_willDestroyPictureInPictureViewController"b1"pictureInPictureController_willHidePictureInPictureViewController"b1"pictureInPictureController_didHidePictureInPictureViewController"b1"pictureInPictureController_shouldCancelPictureInPictureForApplication_whenStartingPictureInPictureForApplication"b1"pictureInPictureController_shouldDenyNewConnection"b1"pictureInPictureController_didRequestStopForPictureInPictureViewController_sourceSceneSessionIdentifier_animated"b1}
@"NSSet"
@"PGPictureInPictureApplication"
@"<PGPictureInPictureAnalyticsDelegate>"
@76@0:8@16q24q32@40q48d56d64f72
@32@0:8@16@?24
v24@0:8Q16
@?16@0:8
@"CADisplayLink"
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@32@0:8q16@24
q16@0:8
B24@0:8q16
@"NSMutableDictionary"
@"<BSInvalidatable>"
@24@0:8q16
@28@0:8q16B24
@32@0:8q16d24
@20@0:8B16
@24@0:8d16
@32@0:8q16q24
d16@0:8
v40@0:8q16@24@32
@"NSDictionary"
v24@0:8d16
@"_UIRemoteView"
@"BKSTouchDeliveryPolicyAssertion"
@"UIView"
{CGRect={CGPoint=dd}{CGSize=dd}}88@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24{CGRect={CGPoint=dd}{CGSize=dd}}56
{UIEdgeInsets=dddd}56@0:8@16{UIEdgeInsets=dddd}24
v24@0:8@"PGButtonView"16
{CGRect={CGPoint=dd}{CGSize=dd}}88@0:8@"PGButtonView"16{CGRect={CGPoint=dd}{CGSize=dd}}24{CGRect={CGPoint=dd}{CGSize=dd}}56
{UIEdgeInsets=dddd}56@0:8@"PGButtonView"16{UIEdgeInsets=dddd}24
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
@40@0:8{CGPoint=dd}16@32
{CGAffineTransform=dddddd}16@0:8
{CGSize=dd}16@0:8
v32@0:8{CGSize=dd}16
@"PGControlsViewModel"
@"UILabel"
@"PGButtonView"
@"PGDisplayLink"
{CGSize="width"d"height"d}
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"PGVibrantFillView"
@"UIViewPropertyAnimator"
@"UIColor"
Vv24@0:8@16
Vv24@0:8@"NSNumber"16
@40@0:8@16@24@?32
@"BSServiceConnection"
v32@0:8@"PGControlsViewModel"16@"PGControlsViewModelValues"24
v32@0:8@"PGControlsViewModel"16@"PGCommand"24
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
B32@0:8@"UIGestureRecognizer"16@"UIEvent"24
v24@0:8B16B20
@40@0:8@16B24B28@32
@44@0:8B16@20@?28@?36
v24@0:8@?16
@"PGControlsView"
@"UITapGestureRecognizer"
@"UIGestureRecognizer"
@"NSTimer"
@"<PGCommandHandler>"
@52@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16B48
B40@0:8{CGPoint=dd}16@32
@"PGCABackdropLayerView"
@"NSHashTable"
Vv32@0:8@16@24
Vv32@0:8@"NSString"16@"NSString"24
@32@0:8@16@24
@"<_PGBackgroundPIPServiceConnectionTargetDelegate>"
^{__CFRunLoopObserver=}16@0:8
v24@0:8^{__CFRunLoopObserver=}16
^{__CFRunLoopObserver=}
Vv48@0:8q16{CGSize=dd}24@?40
Vv100@0:8B16@20@28{CGSize=dd}36q52{CGRect={CGPoint=dd}{CGSize=dd}}60@?92
Vv28@0:8B16@?20
Vv56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@?48
Vv32@0:8@16@?24
Vv40@0:8{CGSize=dd}16@?32
Vv24@0:8@?16
Vv32@0:8q16@?24
Vv32@0:8B16B20@?24
Vv68@0:8B16q20{CGRect={CGPoint=dd}{CGSize=dd}}28@?60
Vv48@0:8q16{CGSize=dd}24@?<v@?B@"NSError">40
Vv100@0:8B16@"PGHostedWindowHostingHandle"20@"NSString"28{CGSize=dd}36q52{CGRect={CGPoint=dd}{CGSize=dd}}60@?<v@?B@"NSError">92
Vv28@0:8B16@?<v@?B@"NSError">20
Vv56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@?<v@?B@"NSError">48
Vv32@0:8@"NSString"16@?<v@?B@"NSError">24
Vv40@0:8{CGSize=dd}16@?<v@?B@"NSError">32
Vv24@0:8@?<v@?B@"NSError"BB>16
Vv32@0:8q16@?<v@?B@"NSError"@"BKSAnimationFenceHandle">24
Vv32@0:8B16B20@?<v@?B@"NSError">24
Vv68@0:8B16q20{CGRect={CGPoint=dd}{CGSize=dd}}28@?<v@?B@"NSError"@"BKSAnimationFenceHandle">60
Vv24@0:8@?<v@?B@"NSError">16
Vv24@0:8@"NSDictionary"16
Vv24@0:8@"NSArray"16
Vv24@0:8@"NSString"16
Vv20@0:8B16
Vv56@0:8{CGSize=dd}16q32d40@48
Vv24@0:8Q16
Vv56@0:8{CGSize=dd}16q32d40@"BKSAnimationFenceHandle"48
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8d16
@"UIActivityIndicatorView"
@"PGLayoutContainerView"
@"PGProgressIndicator"
@"PGPrerollIndicatorView"
@"NSArray"
v40@0:8@16@24q32
v56@0:8@16{CGSize=dd}24q40d48
v28@0:8@16B24
v56@0:8@"PGPictureInPictureViewController"16{CGSize=dd}24q40d48
v24@0:8@"PGPictureInPictureViewController"16
v32@0:8@"PGPictureInPictureViewController"16@"PGCommand"24
v28@0:8@"PGPictureInPictureViewController"16B24
B24@0:8@"PGPictureInPictureViewController"16
@"NSString"24@0:8@"NSString"16
@"BSDescriptionBuilder"24@0:8@"NSString"16
@"BSDescriptionBuilder"16@0:8
v24@0:8@"PGCommand"16
v28@0:8B16@?20
@32@0:8d16@?24
v40@0:8{CGSize=dd}16@?32
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
@"NSXPCConnection"
@"PGProcessAssertion"
@"NSUUID"
@"PGPlaybackState"
@"FBScene"
@"<PGPictureInPictureRemoteObjectDelegate>"
@"PGPictureInPictureViewController"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
v48@0:8q16d24@?32@?40
@40@0:8@16@24@32
v40@0:8@16@24@32
@"UIPointerRegion"40@0:8@"UIPointerInteraction"16@"UIPointerRegionRequest"24@"UIPointerRegion"32
@"UIPointerStyle"32@0:8@"UIPointerInteraction"16@"UIPointerRegion"24
v40@0:8@"UIPointerInteraction"16@"UIPointerRegion"24@"<UIPointerInteractionAnimating>"32
v32@0:8@"PTSettings"16@"NSString"24
v24@0:8@"NSDictionary"16
@40@0:8@16@24q32
v32@0:8@16q24
v28@0:8d16B24
v32@0:8B16B20@24
v64@0:8q16{CGRect={CGPoint=dd}{CGSize=dd}}24@?56
v68@0:8B16q20{CGRect={CGPoint=dd}{CGSize=dd}}28@?60
v32@0:8q16@?24
@"PGHostedWindowHostingHandle"
@"PGPictureInPictureViewControllerBackgroundView"
@"PGLayerHostView"
@"PGPictureInPictureViewControllerClippingView"
@"PGControlsContainerView"
@"PGStashView"
@"PGStashedMaskView"
@"PGPortalView"
@"<PGPictureInPictureViewControllerContentContainer>"
@"<PGPictureInPictureViewControllerDelegate>"
{?="prepareStopAnimationWithCompletionHandler"b1"acquireInterfaceOrientationLock"b1"relinquishInterfaceOrientationLock"b1"handleTapWhileStashedGesture"b1"handleDoubleTapGesture"b1"performRotateAnimationWithRotation"b1}
@"PGMobilePIPSettings"
@"UIPointerInteraction"
v40@0:8d16d24q32
@"PGPlaybackStatePrerollAttributes"16@0:8
v24@0:8@"PGPlaybackStatePrerollAttributes"16
q24@0:8q16
d24@0:8q16
v32@0:8q16q24
v32@0:8d16q24
v28@0:8B16q20
@"PGPlaybackStatePrerollAttributes"
@32@0:8d16@24
@40@0:8d16@24q32
v40@0:8@"BSServiceConnectionListener"16@"BSServiceConnection<BSServiceConnectionHost>"24@"<BSXPCDecoding>"32
v24@0:8@"_PGBackgroundPIPServiceConnectionTarget"16
@"BSServiceConnectionListener"
@"<PGBackgroundPIPServiceDelegate>"
{CGPoint=dd}16@0:8
v32@0:8{CGPoint=dd}16
v32@0:8@?16@?24
v40@0:8Q16@?24@?32
v40@0:8d16@?24@?32
@64@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGSize=dd}48
@24@0:8@?16
v32@0:8d16d24
v36@0:8q16B24@?28
v48@0:8@16@24@32^v40
v40@0:8B16B20@24@?32
v72@0:8q16{CGRect={CGPoint=dd}{CGSize=dd}}24@?56@?64
v40@0:8q16@?24@?32
v32@0:8B16B20@?24
v40@0:8B16B20@?24@?32
v44@0:8B16B20B24@?28@?36
v36@0:8B16q20@?28
v76@0:8B16q20{CGRect={CGPoint=dd}{CGSize=dd}}28q60@?68
v40@0:8q16q24@?32
q20@0:8B16
{CGRect={CGPoint=dd}{CGSize=dd}}20@0:8B16
v28@0:8@?16B24
v28@0:8B16@20
@"PGRunLoopObserver"
@"PGHostedWindow"
@"UIViewController"
@"<PGPictureInPictureProxyDelegate>"
{?="pictureInPictureProxyInterfaceOrientationForTransitionAnimation"b1"pictureInPictureProxyViewFrameForTransitionAnimation"b1"pictureInPictureProxyViewControllerWindowForTransitionAnimation"b1"pictureInPictureProxy_willStartPictureInPictureWithAnimationType"b1"pictureInPictureProxy_didStartPictureInPictureWithAnimationType"b1"pictureInPictureProxy_failedToStartPictureInPictureWithAnimationType_error"b1"pictureInPictureProxy_restoreUserInterfaceForPictureInPictureStopWithCompletionHandler"b1"pictureInPictureProxy_willStopPictureInPictureWithAnimationType_reason"b1"pictureInPictureProxy_didStopPictureInPictureWithAnimationType_reason"b1"pictureInPictureProxyPictureInPictureInterruptionBegan"b1"pictureInPictureProxyPictureInPictureInterruptionEnded"b1"pictureInPictureProxy_didUpdateStashedOrUnderLockState"b1"pictureInPictureProxy_didUpdateResourcesUsageReductionReasons_oldReasons"b1"pictureInPictureProxyWillSetupPictureInPictureStop"b1}
@"UIViewController<PGPictureInPictureViewController>"
@"PGPictureInPictureProxy"
@"PGBackdropView"
@"UIImageView"
v32@0:8@16Q24
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"UIImage"
@"<PGButtonViewDelegate>"
@"_PGButton"
@"CAFilter"
Q24@0:8d16
@"<PGControlsViewModelDelegate>"
@"PGControlsViewModelValues"
