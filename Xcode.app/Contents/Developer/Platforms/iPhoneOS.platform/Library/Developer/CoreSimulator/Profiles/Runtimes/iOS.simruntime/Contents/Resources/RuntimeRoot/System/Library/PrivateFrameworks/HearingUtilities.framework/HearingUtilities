@(#)PROGRAM:HearingUtilities  PROJECT:Hearing-1
com.apple.HearingUtilities.HUHeadphoneLevelController.DataQueue
com.apple.HearingUtilities.HUHeadphoneLevelController.IDSQueue
v8@?0
ax_hearing_should_register_client_key
ADAMAudioDataReceiver
Unable to find class %s
ADAFMetadataKeyHAEDataForGauge
AXIDSServices
AXIDSServiceMessageKey
ADAMAudioDataAnalysisSample
hu_device_updates_queue
UPDATING %@ - %@
%s:%d %@
-[HUDeviceController device:didUpdateProperty:]
v32@?0@8@"NSMutableDictionary"16^B24
v32@?0@?<v@?@"NSDictionary">8Q16^B24
Stopping Updates
-[HUDeviceController stopPropertyUpdates]
hu_nearby_media
Media server died.
-[HUNearbyHearingAidController mediaServerDied]
Bluetooth isn't available. Not requesting connection.
-[HUNearbyHearingAidController shouldRequestAudioConnectionForCall:withCompletion:]
Should request audio %d, %d, %d, %d, %d, %d
-[HUNearbyHearingAidController shouldRequestAudioConnectionForCall:withCompletion:]_block_invoke
Requesting connection from %ld - %@
-[HUNearbyHearingAidController requestConnectionForReason:]_block_invoke
com.apple.hearing.hearingaids
v16@?0@"HUNearbyDevice"8
B32@?0@"HUNearbyDevice"8Q16^B24
B16@?0@"TUCall"8
%d - [%d, %d, %d]
-[HUNearbyHearingAidController shouldRelinquishConnectionForReason:]
Reliquishing for reason %ld
-[HUNearbyHearingAidController relinquishConnectionForReason:]
v16@?0@"NSString"8
-[HUNearbyHearingAidController start]_block_invoke
Sending checkin to %@
-[HUNearbyHearingAidController start]_block_invoke_2
v16@?0@"NSArray"8
v24@?0@"HUNearbyDevice"8@"NSDictionary"16
Stopping
-[HUNearbyHearingAidController stop]
Updating state to %ld - %@
-[HUNearbyHearingAidController updateStateOnDeviceQueue]
Checking connection %@
-[HUNearbyHearingAidController checkConnectionPeers:]_block_invoke
Checking connection %@ - %@
-[HUNearbyHearingAidController checkConnectionToHearingDevice:]_block_invoke
-[HUNearbyHearingAidController hasConnectionToHearingDevice]
%ld== %@ - %@
-[HUNearbyHearingAidController device:didReceiveMessage:]
We shouldn't be connected
-[HUNearbyHearingAidController device:didReceiveMessage:]_block_invoke
Relinquishing connection %d
v12@?0B8
We shouldn't be connecting
No connected peer. Connecting
Asking for device property read but device is nil
v32@?0@"NSNumber"8@16^B24
Unknown device ID %@ - %@
Updating controller %@
Requesting %@
-[HUNearbyHearingAidController updateProperty:forDeviceID:]_block_invoke
Writing %@ = %@
-[HUNearbyHearingAidController writeValue:forProperty:andDeviceID:]
Skipping write because value didn't change
RTTTelephonyUtilities
User requested handoff
void UserRequestedAudioTransferNotification(CFNotificationCenterRef, void *, CFStringRef, void *, CFDictionaryRef)
initWithDeviceType fake PSAP
-[AXFakePSAPDevice initWithDeviceType:]
Nathan's PSAP Device
AppleLeft-%d
AppleRight-%d
New PSAP Company
DEMO
PL3FT
PR1G4T
PB0TH
PDEMO
Default
Concert
v32@?0@"AXHearingAidMode"8Q16^B24
v32@?0@"NSNumber"8@"CBUUID"16^B24
WRITING %d for %@
-[AXFakePSAPDevice writeInt:toEar:forProperty:]
ax_hearing_device_fake_type_key
ax_psap_is_psap_key
T1111
Hello World
0x4C74BF03-0ED7-41B4-AB6F-D19A18BD15BF
0x4DE76FB3-819F-49B7-9738-C829B8E922FF
0x7B82D5C7-2516-4D68-A252-090A032F6CFE
0x0B80499D-B3F5-4815-818C-AFD793232BC4
0x75C8FA23-0E92-4762-9733-40AA89E98CBC
0x7C7260EC-A345-4C7D-A04F-CDC2F36DDD08
0x8E7A6FB6-C418-41F4-A550-AA8AEA223ADD
0x248B0918-5225-445E-BBEF-50A983BF39AF
0xED387E9D-1994-4E1A-B212-5B2CF23BCC48
v32@?0@"NSNumber"8@"NSArray"16^B24
Handle incoming messsage ID: %llu %@
-[AXHAServer handleMessageWithPayload:forIdentifier:]
Unexpect messsage ID: %llu
Availability %@
v32@?0@"NSString"8@16^B24
B32@?0@"AXRemoteHearingAidDevice"8Q16^B24
v32@?0@"NSString"8@"NSDictionary"16^B24
v32@?0@"NSArray"8Q16^B24
B32@?0@"NSArray"8Q16^B24
ax_hearing_should_begin_searching_key
Sending payload %@
-[AXHAServer writeValue:forProperty:andDeviceID:]
controller
reason
0x24E1DFF3-AE90-41BF-BFBD-2CF8DF42BF87
0x8D17AC2F-1D54-4742-A49A-EF4B20784EB3
0xC97D21D3-D79D-4DF8-9230-BB33FA805F4E
0x497EEB9E-B194-4F35-BC82-36FD300482A6
0xF3F594F9-E210-48F3-85E2-4B0CF235A9D3
0x6AC46200-24EA-46D8-A136-81133C65840A
0x21FF4275-C41D-4486-A0E3-DC11138BCDE6
0xA391C6F1-20BB-495A-ABBF-2017098FBC61
0xA28B6BE1-2FA4-42F8-AEB2-B15A1DBD837A
0x7BE94A55-8D91-4592-BC0F-EA3664CCD3A9
0x9C12A3DB-9CE8-4865-A217-D394B3BC9311
0xADC3023D-BFD2-43FD-86F6-7AE05A619092
0x16438C66-E95A-4C6F-8117-A6B745BD86FC
0xAEA12A32-60ED-43BA-BE6F-BA6092000FDB
0xEAF6FB18-090C-4EF7-AAB8-06518E16D502
0x76B3DB1F-44C4-46CC-A7B5-E9CE7DFBEF50
0x98924A39-6559-40A8-B302-3C8E40DBF834
0x066E7E7F-93E9-4D26-89AC-AECCDBAFA825
0x4656D3AC-C2DF-4096-96E7-713580B69CCD
0xF6E6AC8D-248E-433F-BC2C-E51E47DF3ECA
0xC60E7C73-203B-4B7C-AFC5-2FE79C5F2F01
0x4603580D-3C15-4FEC-93BE-B86B243ADA64
0xE893C687-7C43-4999-8FD0-6CB11D0F88CD
0x8E750BB1-40C1-48DF-B450-97F245C57E0C
%@_%@
HearingAidLabel
v32@?0@"CBCharacteristic"8Q16^B24
v32@?0@"CBService"8Q16^B24
ax_hearing_device_man_key
ax_hearing_device_model_key
ax_hearing_device_man_model_key
ax_hearing_device_name_key
ax_hearing_device_lr_key
ax_hearing_device_left_peripheral_key
ax_hearing_device_right_peripheral_key
ax_hearing_device_isleft_key
ax_hearing_device_hiid_key
ax_hearing_device_hiidother_key
ax_hearing_device_uuid_key
v32@?0@8@16^B24
Missing left peripheral UUID %@
-[AXHearingAidDevice initWithLeftDevice:andRightDevice:]
Missing right peripheral UUID %@
Left HA
Right HA
Connection state: (%d, %d)
-[AXHearingAidDevice connectionDidChange]
Paired: %@ - %@
-[AXHearingAidDevice connectionDidChange]_block_invoke
v16@?0B8B12
Hearing aid isn't paired, but we're changing streaming prefs %@
Checking %@
-[AXHearingAidDevice didLoadOptionalBasicProperties]_block_invoke
Adding available %@ - %@
v32@?0@8Q16^B24
No optional properties on left
-[AXHearingAidDevice didLoadOptionalBasicProperties]
No optional properties on right
{%d} LEFT [%d, %d] RIGHT [%d, %d]
{%d} LEFT [%d]: (%d, %d, %d) RIGHT [%d]: (%d, %d, %d)
-[AXHearingAidDevice didLoadBasicProperties]
{%d} LEFT [%d]: (%d, %d, %d, %d, %d) RIGHT [%d]: (%d, %d, %d, %d, %d)
-[AXHearingAidDevice didLoadRequiredProperties]
MATE: self: %@ other %@
-[AXHearingAidDevice mateWithDevice:]
q24@?0@"AXHearingAidMode"8@"AXHearingAidMode"16
Setting notify %d for peripheral: %@ - %@
-[AXHearingAidDevice setNotify:forPeripheral:]
Not completely loaded, trying again
-[AXHearingAidDevice setKeepInSync:]
Loading %@ for %@
-[AXHearingAidDevice loadProperties:forPeripheral:withRetryPeriod:]
Not loading %@, %d, %d - %@ = %@
-[AXHearingAidDevice loadProperties:forPeripheral:withRetryPeriod:]_block_invoke_2
Loading required properties for %@ - (%d, %d, %d, %d, %d, %d)
-[AXHearingAidDevice loadRequiredProperties]_block_invoke
(%@ - %@)
-[AXHearingAidDevice loadFailedProperties]
New name: %@
-[AXHearingAidDevice updateNameWithAdvertisingData:]
FAILED left write response check %lld
-[AXHearingAidDevice writeValueForProperty:]
FAILED right write response check %lld
Left %lld - Right %lld
-[AXHearingAidDevice _sendDelayedWrites]
Not paired
Not writing because peripheral isn't paired
-[AXHearingAidDevice delayWriteProperty:forPeripheral:]_block_invoke
[%d] %lld - %@
Writing %d for %@ - %@
-[AXHearingAidDevice writeInt:toEar:forProperty:]
-[AXHearingAidDevice writeSignedInt:toEar:forProperty:]
Reading %@ from %@
-[AXHearingAidDevice readValueForCharacteristic:fromPeripheral:]
Reading nil characteristic
B32@?0@8Q16^B24
Attempting to set readonly property: %ld
-[AXHearingAidDevice setValue:forProperty:]
Unknown property: %ld
Reading component property %@
-[AXHearingAidDevice valueForProperty:]
Compound property: %ld
Ignored property without characteristic: %ld
DeviceUUID NULL %@
-[AXHearingAidDevice deviceDescription]
v32@?0@"NSNumber"8Q16^B24
Reloading services %@, %@
-[AXHearingAidDevice peripheral:didModifyServices:]
EMPTY SERVICES
-[AXHearingAidDevice peripheral:didDiscoverServices:]
%@ - %@
v32@?0@8@"CBUUID"16^B24
Unknown service: %@ - %@
-[AXHearingAidDevice peripheral:didDiscoverServices:]_block_invoke
Error discovering services (%@): %@
EMPTY CHARACTERISTICS %@
-[AXHearingAidDevice peripheral:didDiscoverCharacteristicsForService:error:]
Loaded auth service characteristics
Unknown service: (%d) %@ - %@
IsMFiAuthenticated_CertClass0B
Error discovering characteristics (%@): %@
Error reading characteristic value (%@)(%@): %@
-[AXHearingAidDevice peripheral:didUpdateValueForCharacteristic:error:]
Manufacturer found: |%@|
-[AXHearingAidDevice peripheral:didUpdateCharacteristic:]
Hearing aid Manufacturer found: %@
Model Number found: |%@|
Hearing aid Model Number found: %@
Firmware version found: %@
Hearing aid right firmware version found: %@
Hearing aid left firmware version found: %@
Hardware version found: %@
Hearing aid right hardware version found: %@
Hearing aid left hardware version found: %@
Getting property: %@ (%@) for %@ - %@
Left
Right
B32@?0@"AXHearingAidMode"8Q16^B24
DefaultProgramName
Not reading presets, already reading
Not setting category
Hearing aid out of spec: %d
DisableLEA
Resetting connection to disable streaming %@
%@ peripheral %@, services %@
-[AXHearingAidDevice peripheral:didInvalidateServices:]
-[AXHearingAidDevice peripheral:didWriteValueForCharacteristic:error:]
Error writing characteristic value (%@): %@
Did pair with result %d - %@
-[AXHearingAidDevice pairingDidCompleteForPeripheral:]_block_invoke
Did Unpair: %@
-[AXHearingAidDevice peripheralDidUnpair:]
AXHearingAidDevice:%p:[%@] [%@, %@, %@, %@] L:%d R:%d,  l-uuid: %@ r-uuid: %@ - [%@, %@] [%@, %@]
LOADED
NOT LOADED
PAIRED
NOT PAIRED
PERSISTENT
NOT PERSISTENT
Available
NOT Available
Adding periperal %@ - %@
-[AXHearingAidDevice addPeripheral:]
-[AXHearingAidDevice addPeripheral:asLeft:]
HUAccessoryManagerLoggingKey
HUAccessoryManagerUpdateKey
HUAccessoryManagerDiscoveryKey
v32@?0@"CBPeripheral"8Q16^B24
Writing to %@
Checking %d, %@ = %@
Writing %@ to %@ - %@
Found peripherals %@
Skipping discovery %d, %d
Central state (%ld) %d
centralManager ON
centralManager OFF
Connected to %@ - %@
Disconnected from %@ - %@
B32@?0@"CBPeripheral"8Q16^B24
Connection changed %ld - %@
Found characteristics %@ - %@
Did write to peripheral %@ - %@ - %@
Updated
-[AXHAController init]_block_invoke
Current controller is device %d, %d, %d - %@
-[AXHAController currentDeviceController]
Current controller is nearby
Checking paired %d
-[AXHAController hearingAidsPaired]
Changing pairing %@ - %@
-[AXHAController setListenForAvailableDeviceUpdates:]_block_invoke_2
Missing info %@
-[AXHAController setListenForAvailableDeviceUpdates:]_block_invoke
v32@?0@"AXHearingAidDevice"8Q16^B24
No_HA_Devices
Available Devices: %@
%d, %d, %d - %@ - %@ == %d, %@
-[AXHAController setPairedHearingAid:]
HearingAidPairing
Skipping nearby because no hearing aids paired.
UPDATE %@
-[AXHAController setPairedHearingAid:]_block_invoke
v16@?0@"NSDictionary"8
Starting connection handoff
-[AXHAController connectToPairedDevice]
v20@?0B8@"HUNearbyDevice"12
com.apple.CoreRoutine.preferences
Registing for device availability %d, %d, %lf
-[AXHAController registerForAvailableDevicesUpdates:]_block_invoke
Setting active scan %d, %d
-[AXHAController registerForAvailableDevicesUpdates:]_block_invoke_2
Found more than one matching hearing aid %@
-[AXHAController writeDeviceProperty:]
hw.model
hearingaid-power-reduction
hearingaid-audio-equalization
hearingaid-low-energy-audio
PairedHearingUUIDsPreference
KnownPeripheralUUIDsPreference
WatchSyncPairedUUIDsPreference
CloudHearingAidsPreference
CloudHearingDevicesPreference
HearingAidEarIndependencePreference
HearingAidControlAvailableOnLockScreen
ClearPartialPairingPreference
HearingAidStreamToLeft
HearingAidStreamToRight
HearingAidsCallAudioRoute
HearingAidsMediaAudioRoute
HearingAidsCloudDenylist
HearingAidMultideviceSettings
HearingAidMultideviceAudio
HearingAidSystemSoundsStream
HearingAidComplicationPreferredDisplayMode
HearingFeatureUsagePreference
HearingAidsLiveListenExport
LiveHeadphoneLevelEnabled
hearing-icloud-initialization
Skipping iCloud setup. Device is locked
-[HUHearingAidSettings init]
Account: %d
-[HUHearingAidSettings _initializeICloudSetup]
ax_hearing_device_version_key
application-identifier
Unable to get entitlements for client task. Error: %@
-[HUHearingAidSettings shouldUseiCloud]
com.apple.accessibility.heard
New iCloud %d
-[HUHearingAidSettings iCloudAccountDidChange:]_block_invoke
Should we push local aids to cloud? should use cloud: %d, should local aids be pushed: %d, fake hearing aids %d
-[HUHearingAidSettings pushLocalHearingAidsToiCloud]
Pushing local aids to iCloud %@
Removing from iCloud
-[HUHearingAidSettings logMessage:]
UnknownKey
Changing paired hearing aids %@
-[HUHearingAidSettings setPairedHearingAids:]
Siri
accessible_announce
Setting Announce Notifications on Hearing Aids Supported: %d
B32@?0@"NSString"8Q16^B24
Accessibility
HeadphoneLiveLevel_WatchSupport
HeadphoneLiveLevel_NP_WatchSupport
.GlobalPreferences
AppleLocale
Setting nano value %@ - %@
-[HANanoSettings setValue:forPreferenceKey:]
Error synchronizing accessor %@
-[HANanoSettings _valueForPreferenceKey:]
AFPreferences
/System/Library/ControlCenter/Bundles/HearingAidsModule.bundle
com.apple.accessibility.controlcenter.hearingdevices
com.apple.accessibility.hearing.setup.ready
com.apple.accessibility.hearing.ui.availability
com.apple.accessibility.hearing.audio.transfer.availability
com.apple.accessibility.hearing.audio.transfer
com.apple.accessibility.hearing.audio.transfer.complete
com.apple.accessibility.hearingaid.audio.route.changed
com.apple.accessibility.hearingaid.nearby.devices.changed
com.apple.accessibility.hearing.wireless.splitter.changed
com.apple.accessibility.hearingaid.trustchain
7D74F4BD-C74A-4431-862C-CCE884371592
180a
8341F2B4-C013-4F04-8197-C4CDB42E26DC
EBC9A4A0-44FB-4D20-8B4C-4808AFDBCEE8
9FBF120D-6301-42D9-8C58-25E699A21DBD
2a29
2a27
2a26
2a24
HUEDSlowLeqIdentifier
HUEDFastLeqIdentifier
HUEDEnabledIdentifier
HUEDThresholdCrossedIdentifier
com.apple.noise.onboarding
com.apple.noise.threshold
HUGizmoIDSRequestDataKey
HUGizmoAudioLevelIdentifier
RouteCurrentlyPicked
RouteUID
Speaker
AVAudioRouteName
OutputRoute
RouteName
RouteType
IsPreferredExternalRoute
PreferredExternalRouteDetails_IsActive
BTDetails_IsHFPRoute
BluetoothLEOutput
Headset
Headphone
CarAudioOutput
AirTunes
HUNearbyControllerLoggingKey
v32@?0@"NSString"8Q16^B24
HUNearbyControllerMessageKey
HUNearbyControllerDiscoveryKey
hu_nearby_updates_queue
v32@?0@8@"NSDictionary"16^B24
com.apple.private.alloy.hearing
Device not found. Creating
Checking %@ - %@
Added device %@
v32@?0@"IDSDevice"8Q16^B24
Added device with identifier %@
Incoming message %@ - %@ - %@
v32@?0@"NSString"8@?<v@?@"HUNearbyDevice"@"NSDictionary">16^B24
Connected devices changed %@
Nearby devices changed %@
v32@?0@"NSString"8@?<v@?@"NSArray">16^B24
v32@?0@"NSString"8@"NSMutableDictionary"16^B24
Sending %@ to %@ with %@
v32@?0@"HUNearbyDevice"8Q16^B24
Sending %@ to %@ - %@
Error sending %@
com.apple.ax.hearingaids
ha_updates_queue
Device stopped advertising. Removing %@
-[AXHearingAidDeviceController clearMissingHearingAids]_block_invoke_3
v32@?0@8@"NSDate"16^B24
Starting scan %@
-[AXHearingAidDeviceController searchForAvailableDevices]_block_invoke_2
Already scanning
-[AXHearingAidDeviceController searchForAvailableDevices]
Resetting connection to %@
-[AXHearingAidDeviceController resetConnectionToPeripheral:]
Requesting connection [%ld] to %@
-[AXHearingAidDeviceController connectToPeripheral:]_block_invoke
Enabling streaming to LEFT %@
Disabling streaming to LEFT %@
Enabling streaming to RIGHT %@
Disabling streaming to RIGHT %@
Requesting disconnect: %@
-[AXHearingAidDeviceController disconnectFromPeripheral:]_block_invoke
Disconnection from %@
-[AXHearingAidDeviceController disconnectFromHearingAidWithDeviceUUID:]
Cancelling connections
-[AXHearingAidDeviceController cancelPendingConnections]
Stopping scan
-[AXHearingAidDeviceController stopSearching]
B32@?0@"AXHearingAidDevice"8Q16^B24
Should relinquish %d, %d, %d, %d
-[AXHearingAidDeviceController shouldRelinquishForPartialConnection:]
Wrong number of paired devices %@
Partial pair %d = %@
-[AXHearingAidDeviceController checkPartiallyPairedWithCompletion:]_block_invoke_2
-[AXHearingAidDeviceController checkPartiallyPairedWithCompletion:]
Found connected device %@
-[AXHearingAidDeviceController isConnected]_block_invoke
v32@?0@?<v@?@"NSArray">8Q16^B24
Replacing %@ with %@
-[AXHearingAidDeviceController replaceDevice:withDevice:]
Device %@ did merge with: %@
-[AXHearingAidDeviceController mergeDevice:withDevice:]
Device finished loading %@
-[AXHearingAidDeviceController deviceDidFinishLoading:]
BT not available. Caching [%ld, %d]
-[AXHearingAidDeviceController sendRequestToCentralManager:]
Central state (%ld) %d = %d
-[AXHearingAidDeviceController centralManagerDidUpdateState:]
-[AXHearingAidDeviceController centralManager:didRetrievePeripherals:]
-[AXHearingAidDeviceController centralManager:didRetrieveConnectedPeripherals:]
%@ - %@ - %@ - %@
-[AXHearingAidDeviceController centralManager:didDiscoverPeripheral:advertisementData:RSSI:]
v32@?0@"CBUUID"8Q16^B24
Connecting %d = [%d, %d, %d, %d]
%@ in %@
-[AXHearingAidDeviceController centralManager:didConnectPeripheral:]
More than one valid hearing device %@
No device for peripheral %@
IsHearingAid
-[AXHearingAidDeviceController centralManager:didFailToConnectPeripheral:error:]
Non fatal error. Attempting reconnect
Fatal error
%@ - %@ - %@
-[AXHearingAidDeviceController centralManager:didDisconnectPeripheral:error:]
Pairing completed %@ - %@
-[AXHearingAidDeviceController pairingAgent:peerDidCompletePairing:]
Found easy paired peripheral %@ - %@
Creating new easy pairing device %@
Peripheral missing tag %@
Not iCloud paired. Storing UUIDs %@
Skipping pairing becuase not a hearing device %@
-[AXHearingAidDeviceController pairingAgent:peerDidFailToCompletePairing:error:]
Did Unpair %@ in device %@
-[AXHearingAidDeviceController pairingAgent:peerDidUnpair:]
Unpairing [%d] %@
-[AXHearingAidDeviceController unpairPeripheralWithUUID:]_block_invoke
Not unpairing %@
Not Unpairing %@
-[AXHearingAidDeviceController unpairPeripheralWithUUID:]
New aids: %@
-[AXHearingAidDeviceController pairedHearingAidsDidChange]
Persistent device %@, %@
No BT peripherals with identifiers, unpairing %@
-[AXHearingAidDeviceController pairedHearingAidsDidChange]_block_invoke
Adding peripheral to device [%d] %@
No BT identifiers %@, unpairing rep %@
HAFakeSearch
Unknown: %@
Battery
Left/Right
HA ID
Other HA ID
Mic Attenuation
Stream Attenuation
Available Programs
Active Program
Program Name Selector
Program Name
Program Category
Services
Characteristics
Program Update
Name
Manufacturer
Model
Connection Status
Firmware
Hardware
Device ID
Device Description
Paired Status
Spec Version
Bluetooth Pairing
Substantially Different
Sensitivity
Stream Step Size
Microphone Step Size
Sensitivity Step Size
Active Streaming Program
Treble
Bass
Mixed Volume
Mixed Volume Step Size
Properties %@
 and 
HearingUtilities_Noise
HearingAidSupport
HearingAidInputOptionsLeft
HearingAidInputOptionsNeither
HearingAidInputOptionsRight
HearingAidInputOptionsAutomatic
complication.preferred.display.mic.volume
complication.preferred.display.program
%@%@
v32@?0@"BluetoothDevice"8Q16^B24
AXSHARoutePicked
Bluetooth Audio
AXSHARouteHearingAid
AXSHARouteSpeaker
AXSHARouteHeadset
AXSHARouteAirTunes
AXSHARouteDefault
v32@?0@"NSDictionary"8Q16^B24
ha_routing_queue
-[HUUtilities mediaServerDied]
AXSHARouteLiveListen
v12@?0I8
Retried media pause, %@
success
fail
-[HUUtilities pauseNowPlaying:withQueue:andCompletion:]_block_invoke_3
Media Pause command %@
-[HUUtilities pauseNowPlaying:withQueue:andCompletion:]_block_invoke
Retried media play, %@
-[HUUtilities pauseNowPlaying:withQueue:andCompletion:]_block_invoke_2
Media Play command %@
HearingAidMultiDeviceV3
hai.%@
hai.
Selecting program %@ - %@
-[NSArray(_AX_HA_PROGRAMS_ARRAY_) setProgram:withOtherSidePrograms:selected:]
q24@?0@8@16
Skipping tag %@ - %@
-[CBPeripheral(_AX_HA_) axTag:]
Skipping untag %@ - %@
-[CBPeripheral(_AX_HA_) axUntag:]
RTTSettings
Requesting connect: %@
-[AXRemoteHearingAidDevice connect]
-[AXRemoteHearingAidDevice disconnectAndUnpair:]
Haven't loaded %@
-[AXRemoteHearingAidDevice checkDidLoadProperties:]
-[AXRemoteHearingAidDevice _updateSelectedProgramsProperties]
AXHearingPropertyStreamingProgramActive not available
-[AXRemoteHearingAidDevice _writeAllProgramSelectionsToPeripheral]
-[AXRemoteHearingAidDevice setKeepInSync:]
%p = property:%@ - value:%@
-[AXRemoteHearingAidDevice setValue:forProperty:]
AXHearingPropertyProgramsAvailable %@
Unknown property: %lld
-[AXRemoteHearingAidDevice _valueForProperty:]
AXRemoteHearingAidDevice:%p:[%@] [%@, %@] [%d] {%@}
_AXNotification_
com.apple.Noise
NoiseEnabled
OnboardingCompleted
NotificationsEnabled
NotificationsThreshold
NotificationsMuteDate
CurrentLeq
LeqTimestamp
LeqDuration
ThresholdMigration
ThresholdVersion
NoiseInternalLogging
NanoNoiseSettingsChanged
com.apple.noise
enabled
@"NSDictionary"8@?0
ENABLE_NOISE
ENVIRONMENTAL_TITLE
ENVIRONMENTAL_MEASUREMENT_FOOTER
NOISE_NOTIFICATIONS
NOISE_THRESHOLD
NSLink
NOISE_THRESHOLD_FOOTER
NOISE_THRESHOLD_FOOTER_LINK
https://support.apple.com/HT209593
DECIBELS
NO_NOTIFICATIONS
LIMIT_PER_DAY
THRESHOLD_DESCRIPTION_FOOTER
THRESHOLD_DESCRIPTION_FOOTER_NO_DECIBELS
name
category
index
isSelected
%@ - %@ (%@) - %d: Category: %ld Ear: %d
selected
not selected
com.apple.private.tty.database
com.apple.private.contactsui
com.apple.Contacts.database-allow
com.apple.CoreTelephony.CommCenterHelper.allow
com.apple.private.tty.settings
com.apple.accessibility.automation.client
com.apple.accessibility.AccessibilityUIServer
com.apple.private.kernel.jetsam
com.apple.private.security.storage.universalaccess
com.apple.accessibility.environmentaldosimetry
com.apple.carousel.clockfacestatusview
com.apple.BTServer.le
personal_audio_access_queue
v16@?0Q8
Hearing aid control status: %d
-[AXHeardController updateHearingControlCenterModule]_block_invoke
v20@?0B8@"NSError"12
Added hearing to control center: %@ success: %d
Not adding hearing module %lu - %d, %d, %d, %d
-[AXHeardController updateHearingControlCenterModule]
heard should be running. Continuing
-[AXHeardController shutdownIfPossible]
heard still shouldn't be running. Shutting down.
heard shouldn't be running. Starting timer,
@"HCXPCMessage"16@?0@"HCXPCMessage"8
com.apple.SoundDetectionNotifications
v16@?0@"NSObject<OS_xpc_object>"8
XPC error: %s
-[AXHeardController startServer]_block_invoke_14
Error in client connection event handler
-[AXHeardController handleNewConnection:]_block_invoke
v32@?0@"HCXPCClient"8Q16^B24
Message missing entitlement %d - %llu - %s: %@
Malformed message %@
v16@?0@"NSError"8
Error: %@
-[AXHeardController sendMessage:withError:]_block_invoke
-[AXHeardController sendUpdateMessage:forIdentifier:]_block_invoke_2
Client %@ doesn't want update for: %d
-[AXHeardController sendUpdateMessage:forIdentifier:]_block_invoke
-[AXHeardController sendClientsMessageWithPayload:excluding:]_block_invoke_2
B32@?0@"HCXPCClient"8Q16^B24
Found clients %llu = %@
-[AXHeardController countOfClientsListeningForIdentifier:]
%llu - %@
-[AXHeardController handleMessage:forIdentifier:]
Setting boost %@
-[AXHeardController boostPriority:]
User level setup available
void UserLevelHearingSetupAvailable(CFNotificationCenterRef, void *, CFStringRef, void *, CFDictionaryRef)
CCSControlCenterService
RTTController
SaW+DA+cbiqDHrex8MTABA
Initializing HUNoiseController
-[HUNoiseController init]
com.apple.HearingUtilities.HUNoiseController.DataQueue
Notification mute date changed: %@
-[HUNoiseController init]_block_invoke
NoiseAlertTitle
NoiseAlertLevelContent80
NoiseAlertLevelDetailedContent80
NoiseAlertLevelContent85
NoiseAlertLevelDetailedContent85
NoiseAlertLevelContent90
NoiseAlertLevelDetailedContent90
NoiseAlertLevelContent95
NoiseAlertLevelDetailedContent95
NoiseAlertLevelContent100
NoiseAlertLevelDetailedContent100
NoiseAlertDamageWarning
Notification request failed to add to notification center with error: %@
-[HUNoiseController showNotificationForAlertType:]_block_invoke
Notification request added to notification center: %@
-[HUNoiseController showNotificationForAlertType:]
Didn't receive measurements from ADAM.
-[HUNoiseController restartADAMTimer]_block_invoke
FastData
stop receiving audio dosage samples. clearing cached values
-[HUNoiseController stopReceivingAudioDosageSamples]
Resetting notifications since it has past the notification mute date of %@
-[HUNoiseController applyNotificationLogicForSPL:withDuration:]
Failed while checking to reset notifications because buffer is empty.
-[HUNoiseController checkToResetNotificationsForSPL:withDuration:andBuffer:forTime:]
Resetting notifications for Leq %0.1f dB being under %i dB threshold for minimum reset time
Resetting notifications since it has been more than general reset time
Failed while checking to surface notification because buffer is empty.
-[HUNoiseController checkToSurfaceNotificationForSPL:withDuration:andBuffer:forTime:]
Sample is above threshold of %i dB and buffered more than %i ms
Leq buffer gating date: %@
Sample is beyond gate date: %0.1f, %@
-[HUNoiseController checkToSurfaceNotificationForSPL:withDuration:andBuffer:forTime:]_block_invoke
v32@?0@"HUNoiseSample"8Q16^B24
Total count of samples beyond gate date: %i
Count of samples beyond gate date and above threshold: %i
Checking to surface notification: %i percent of last %i seconds of samples are above %i dB set threshold - calculating leq
Calculated Leq: %0.1f dB
Leq over last 3 minutes is %0.0f dB, which is over set threshold of %i dB.
Completed surfacing notification at %@ for Leq %0.1f dB and writing sample to HK
com.apple.noise.notification
timeNotified
notificationThreshold
[Analytics]: Failed while checking to reset notifications because buffer is empty.
-[HUNoiseController checkToResetAnalyticsNotificationsForSPL:withDuration:andBuffer:forTime:andThreshold:]
[Analytics]: Resetting notifications for Leq %0.1f dB being under %i dB threshold for minimum reset time
[Analytics] Resetting notifications since it has been more than general reset time for %i dB threshold
[Analytics] Failed while checking to surface notification because buffer is empty.
-[HUNoiseController checkToSurfaceAnalyticsNotificationForSPL:withDuration:andBuffer:forTime:andThreshold:]
[Analytics] Sample is above threshold of %i dB and buffered more than %i ms
[Analytics] Leq buffer gating date for %i dB threshold: %@
[Analytics] Sample is beyond gate date for %i dB threshold: %0.1f, %@
-[HUNoiseController checkToSurfaceAnalyticsNotificationForSPL:withDuration:andBuffer:forTime:andThreshold:]_block_invoke
[Analytics] Total count of samples beyond gate date for %i dB threshold: %i
[Analytics] Count of samples beyond gate date and above %i dB threshold: %i
[Analytics] Checking to surface notification: %i percent of last %i seconds of samples are above %i dB set threshold - calculating leq
[Analytics] Leq over last 3 minutes is %0.0f dB, which is over set threshold of %i dB.
com.apple.noise.alertCount
decibel
[Analytics] Analytics notification surfaced for Leq %0.1f dB and analytics threshold %i dB
Failed to maintain circular buffer because buffer is empty.
-[HUNoiseController maintainCircularBuffer:forTime:]
Failed to calculate Leq for buffer because buffer is empty.
-[HUNoiseController calculateLeqForBuffer:]
Low power changed
-[HUNoiseController lowPowerModeChanged:]
Low power enabled. Stopping measurements.
Low power disabled. Resuming measurements.
Nathan's Hearing Aid
Carbondale
That Fruit Company
L3FT
R1G4T
B0TH
T0B1AS
IL5440
Theater
Restaurant
Television streamer
Mixing streamer
Mixing streamer 2
Park
Bowling
Skydiving
Parking lot
Baseball game
Space Station Ring Toss Jacuzzi
-[AXFakeHearingAidDevice writeInt:toEar:forProperty:]
T66574jhsgjd
LadyBug Whisperer
%@ - %@ [%@] %ld - %@
Local: Start receiving headphone audio updates
Local: Stop receiving headphone audio updates
Start receiving ADAM headphone audio data
Stop receiving ADAM headphone audio data
Headphone level didn't receive measurements from ADAM
Remote: Start requesting headphone audio updates for %llu
Remote: Stop requesting headphone audio updates for %llu
Publishing audio data(HCMessageIdentifierRemoteHeadphoneLevelUpdates) to Gizmo.
Publishing audio data(HCMessageIdentifierRemoteHeadphoneLevelChangesUpdates) to Gizmo.
Publishing request audio data to Companion.
Receiving request audio data from Gizmo. shouldStreamingDataToGizmo: %i, streamingDataToGizmoType: %llu
Receiving audio data from Companion.
Gizmo is not connected anymore. Stop streaming to Gizmo.
Lost connection to AXUIServer
Restarting AXUIServer + IDS connection
Received automation request for sample headphone level data
Waiting %fs for current automation sample to finish
Starting new automation sample
No automation sample data left
Processing automation request for sample %@
%{public}s
Watch is in family mode. Not requesting remote live headphone data
Watch is in family mode. Not requesting remote headphone data changes
Device paired but doesn't contain peripheral %@
Routes %@
Message missing entitlement %d - %s, message: %llu: %@
softlink:r:path:/System/Library/PrivateFrameworks/AudioDataAnalysis.framework/AudioDataAnalysis
softlink:o:path:/System/Library/PrivateFrameworks/AXIDSServices.framework/AXIDSServices
softlink:r:path:/System/Library/PrivateFrameworks/RTTUtilities.framework/RTTUtilities
softlink:r:path:/System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices
softlink:r:path:/System/Library/PrivateFrameworks/RTTUtilities.framework/RTTUtilities
softlink:r:path:/System/Library/PrivateFrameworks/ControlCenterServices.framework/ControlCenterServices
softlink:r:path:/System/Library/PrivateFrameworks/RTTUtilities.framework/RTTUtilities
HUHeadphoneLevelController
ADAMAudioDataReceiverDelegate
NSObject
AXIDSServicesClient
HUDeviceController
AXHARemoteUpdateProtocol
HUNearbyHearingAidController
AXFakePSAPDevice
HUNoiseSample
AXPSAPDevice
AXHAServer
AXHAListenerHelper
AXHearingAidDevice
CBPeripheralDelegate
AXHADeviceProtocol
2y,dB
HUAccessoryListenerHelper
HUAccessoryManager
CBCentralManagerDelegate
AXHAController
HUHearingAidSettings
HANanoSettings
AXHASettings
HUNearbyListenerHelper
HUNearbyController
IDSServiceDelegate
AXHearingAidDeviceController
AXHADeviceControllerProtocol
HUUtilities
_AX_HA_
_AX_HA_PROGRAMS_ARRAY_
_AX_HA_DEPENDENT_ENUMERATION_
HUFakeXPCClient
AXRemoteHearingAidDevice
HUNoiseSettingsListenerHelper
HUNoiseSettings
AXHearingAidMode
NSSecureCoding
NSCoding
AXHAMessageHandlerContext
AXHeardController
HCHeardControllerProtocol
UNUserNotificationCenterDelegate
HUNoiseController
AXFakeHearingAidDevice
HUNearbyDevice
init
mainBundle
bundleIdentifier
initWithIdentifier:
setDelegate:
stopReceivingAudioSampleType:
initWithTargetSerialQueue:
isInternalInstall
_startIDSConnection
_stopIDSConnection
_unregisterMediaNotification
dealloc
payload
objectForKey:
boolValue
client
setWantsUpdates:forIdentifier:
_startRecevingADAMAudioSample:
sharedServer
countOfClientsListeningForIdentifier:
sharedInstance
anyGizmoLiveHeadphoneLevelEnabled
shouldStreamingDataToGizmo
receiver
startReceivingAudioSampleType:
cancel
setMeasurementEnabled:
setFastLeq:
setSlowLeq:
pushValuesToLocalOrIDSListeners
pushValuesToRemoteListeners
afterDelay:processBlock:
slowLeq
numberWithFloat:
fastLeq
isMeasurementEnabled
numberWithBool:
thresholdLevel
numberWithUnsignedInteger:
dictionaryWithObjectsAndKeys:
dataQueue
_pushPayload
_pushValues:identifier:
_publishAudioDataIDSMessage:
streamingToGizmoAudioLevel
dictionaryWithObjects:forKeys:count:
messagePayloadFromDictionary:andIdentifier:
messageWithPayload:
sendUpdateMessage:forIdentifier:
data
floatValue
metadata
setThresholdLevel:
restartADAMTimer
_sendIDSRequestToCompanion:messageIdentifier:
_publishRequestAudioDataIDSMessage:
idsQueue
registerForIncomingData:
setIsCompanionConnectedToIDS:
deregisterForIncomingData:
streamingDataToGizmoType
publishDirectIDSMessage:
_audioLevelFromAudioDict:
setStreamingToGizmoAudioLevel:
objectForKeyedSubscript:
unsignedLongLongValue
setStreamingDataToGizmoType:
setShouldStreamingDataToGizmo:
unsignedIntegerValue
pushValuesToRemoteChangeListeners
count
_registerMediaNotification
setAutomationSampleData:
automationSampleData
mutableCopy
_automationPlaySampleData
lastObject
removeLastObject
date
initWithStartDate:duration:
initAudioSampleWithType:data:dateInterval:metadata:
receiveAudioSample:
sharedController
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
didReceiveIncomingData:
connectedDevicesDidChange:
serverConnectionWasInterrupted
registerForHeadphoneLevelUpdates:
registerForRemoteHeadphoneLevelUpdates:
registerForRemoteHeadphoneLevelChangesUpdates:
_mediaPlaybackDidChange:
_automationStartPlayingSampleData:
setReceiver:
adamSuspendedTimer
setAdamSuspendedTimer:
setDataQueue:
isCompanionConnectedToIDS
setIdsQueue:
.cxx_destruct
_measurementEnabled
_isCompanionConnectedToIDS
_shouldStreamingDataToGizmo
_slowLeq
_fastLeq
_receiver
_adamSuspendedTimer
_dataQueue
_thresholdLevel
_idsQueue
_streamingDataToGizmoType
_streamingToGizmoAudioLevel
_automationSampleData
T@"ADAMAudioDataReceiver",&,N,V_receiver
T@"AXDispatchTimer",&,N,V_adamSuspendedTimer
T@"NSObject<OS_dispatch_queue>",&,N,V_dataQueue
Tf,N,V_slowLeq
Tf,N,V_fastLeq
measurementEnabled
TB,N,GisMeasurementEnabled,V_measurementEnabled
TQ,N,V_thresholdLevel
TB,N,V_isCompanionConnectedToIDS
T@"NSObject<OS_dispatch_queue>",&,N,V_idsQueue
TB,N,V_shouldStreamingDataToGizmo
TQ,N,V_streamingDataToGizmoType
TQ,N,V_streamingToGizmoAudioLevel
T@"NSMutableArray",&,N,V_automationSampleData
setDeviceUpdatesQueue:
array
setUpdateDeviceBlocks:
updateDeviceBlocks
stringWithFormat:
UTF8String
deviceUUID
copy
deviceUpdatesDescription
deviceUpdatesQueue
hearingAidForDeviceID:
representsLocalDevices
valueForProperty:
setObject:forKey:
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
setDeviceUpdatesDescription:
dictionary
addEntriesFromDictionary:
numberWithUnsignedLongLong:
addObject:
removeAllObjects
device:didUpdateProperty:
setValue:forProperty:
updateProperty:forDeviceID:
writeValue:forProperty:andDeviceID:
registerForPropertyUpdates:
stopPropertyUpdates
_deviceUpdatesQueue
_deviceUpdatesDescription
_updateDeviceBlocks
T@"NSObject<OS_dispatch_queue>",&,N,V_deviceUpdatesQueue
T@"NSMutableDictionary",&,N,V_deviceUpdatesDescription
T@"NSMutableArray",&,N,V_updateDeviceBlocks
multideviceSettingsEnabled
delegate
availableRemoteControllersDidChange
registerUpdateBlock:forRetrieveSelector:withListener:
setMediaQueue:
defaultCenter
callStatusDidChange:
addObserver:selector:name:object:
routesDidChange:
mediaQueue
setSendConnectionToCompanionTimer:
unregisterMediaNotifications
registerMediaNotifications
isBluetoothAvailable
callAudioRoute
mediaAudioRoute
isConnected
isPartiallyConnected
hasConnectionToHearingDevice
multideviceAudioEnabled
pairedHearingAids
shouldStreamToLeftAid
shouldStreamToRightAid
isPairedWithFakeHearingAids
isiCloudPaired
sendConnectionToCompanionIfPossible:
sendConnectionToCompanionTimer
numberWithInteger:
arrayWithObjects:count:
sendMessage:withDomain:toDevices:withPriority:
sendMessage:toDevicesWithDomain:withPriority:
connectToPairedDevice
getConnectedPeer:
availableDevices
stateForDomain:
indexOfObjectPassingTest:
sharedCallCenter
anyCallIsEndpointOnCurrentDevice
callsWithStatus:
status
callsPassingTest:
performCallCenterTask:
shouldRelinquishConnectionForReason:
setState:
transitionToPeer
state
updateStateOnDeviceQueue
registerQueue:forDomain:
registerLoggingBlock:forDomain:withListener:
nearbyDevices
sendMessage:toDevices:
registerDiscoveryBlock:forDomain:withListener:
device:didReceiveMessage:
registerMessageBlock:forDomain:withListener:
discoverNearbyDevicesWithDomain:
relinquishConnectionForReason:
sendConnectionUpdateToPeers
sendMessageToAllDevices:
stopDiscoveringDevicesWithDomain:
connectedPeer
pairedDeviceUUID
disconnectFromHearingAidWithDeviceUUID:
cancelPendingConnections
length
objectAtIndex:
localDevice
initWithPersistentRepresentation:
setUpdateDelegate:
setLocalDevice:
sendConnectionToCompanionIfPossible
sendWrite:toDevices:
dictionaryWithObject:forKey:
setState:forDomain:
shouldRelinquishForPartialConnection:
connect
hearingDevice
didLoadRequiredPeerProperties
loadRequiredProperties
valueForProperty:forDeviceID:
writeValue:forProperty:andDeviceID:toDevices:
integerValue
allKeys
isEqualToString:
dictionaryWithDictionary:
removeObjectForKey:
mediaServerDied
shouldRequestAudioConnectionForCall:withCompletion:
mediaPlaybackDidChange:
requestHandoffForMedia
requestConnectionForReason:
checkPairedPeerExists:
start
stop
updateState
checkConnectionPeers:
checkConnectionToHearingDevice:
sendWriteToAllDevices:
holdingMediaForConnection
setHoldingMediaForConnection:
holdingPhoneForConnection
setHoldingPhoneForConnection:
_holdingMediaForConnection
_holdingPhoneForConnection
_state
_delegate
_localDevice
_mediaQueue
_sendConnectionToCompanionTimer
T@"AXRemoteHearingAidDevice",&,N,V_localDevice
T@"NSObject<OS_dispatch_queue>",&,N,V_mediaQueue
T@"AXDispatchTimer",&,N,V_sendConnectionToCompanionTimer
TB,N,V_holdingMediaForConnection
TB,N,V_holdingPhoneForConnection
Tq,N,V_state
T@"<HUNearbyHearingAidControllerDelegate>",W,N,V_delegate
initWithPeripheral:
setType:
setName:
manufacturerForType
setManufacturer:
modelForType
setModel:
setLeftUUID:
setRightUUID:
leftAvailable
setLeftMicrophoneVolume:
setLeftStreamVolume:
setLeftFirmwareVersion:
setLeftHardwareVersion:
availableEars
setAvailableEars:
rightAvailable
setRightMicrophoneVolume:
setRightFirmwareVersion:
setRightHardwareVersion:
createPrograms
programs
firstObject
selectProgram:forEar:
setDeviceType:
type
setConnected:
connected
setCategory:
setIndex:
setEar:
index
setLeftPresetBitmask:
setRightPresetBitmask:
arrayWithArray:
characteristicsUUIDs
excludedProperties
availablePropertiesForPeripheral:
supportsCombinedPresets
independentHearingAidSettings
requiresCombinedPresets
programsListsAreEqual
leftPrograms
rightPrograms
leftSelectedProgram
rightSelectedProgram
leftSelectedStreamingProgram
rightSelectedStreamingProgram
numberWithUnsignedChar:
numberWithChar:
persistentRepresentation
numberWithUnsignedInt:
arrayWithObjects:
setPairedHearingAids:
initWithDeviceType:
disconnect
isLeftConnected
isRightConnected
hasConnection
isPersistent
deviceSupportsProperty:
propertyIsAvailable:forEar:
showCombinedPrograms
writeInt:toEar:forProperty:
writeSignedInt:toEar:forProperty:
didLoadBasicProperties
didLoadRequiredProperties
persist
registerWriteBlock:
setNewName:
isFakeDevice
deviceType
name
manufacturer
model
leftUUID
rightUUID
isConnecting
setIsConnecting:
leftFirmwareVersion
rightFirmwareVersion
leftHardwareVersion
rightHardwareVersion
leftPeripheral
setLeftPeripheral:
rightPeripheral
setRightPeripheral:
setExcludedProperties:
_leftFakePrograms
_rightFakePrograms
_writeBlock
_isConnecting
_connected
_deviceType
_name
_manufacturer
_model
_leftUUID
_rightUUID
_leftFirmwareVersion
_rightFirmwareVersion
_leftHardwareVersion
_rightHardwareVersion
_type
_excludedProperties
TB,N,V_connected
T@"NSString",&,N,V_name
T@"NSArray",&,N,V_manufacturer
T@"NSArray",&,N,V_model
T@"NSString",&,N,V_leftUUID
T@"NSString",&,N,V_rightUUID
TB,N,V_isConnecting
T@"NSString",&,N,V_leftFirmwareVersion
T@"NSString",&,N,V_rightFirmwareVersion
T@"NSString",&,N,V_leftHardwareVersion
T@"NSString",&,N,V_rightHardwareVersion
TQ,N,V_deviceType
TQ,N,V_type
TQ,N,V_excludedProperties
T@"CBPeripheral",&,N,VleftPeripheral
T@"CBPeripheral",&,N,VrightPeripheral
setSampleDate:
setSplValue:
setSampleDuration:
initWithSampleDate:splValue:andDuration:
sampleDate
splValue
sampleDuration
_splValue
_sampleDuration
_sampleDate
T@"NSDate",&,N,V_sampleDate
Tf,N,V_splValue
Tf,N,V_sampleDuration
UUIDWithString:
initWithObjectsAndKeys:
serviceUUID
requiredProperties
setUpdates:
sendMessageWithPayload:andIdentifier:
startServerWithDelegate:
resetConnection
updates
availableHearingAids
availableDevicesDidUpdate:
deviceDidUpdateProperty:
liveListenDidUpdate:
setAvailableControllers:
setHearingDeviceName:
setHearingAidReachableForAudioTransfer:
hearingAidConnectedOrReachable
postNotificationName:object:
setConnectedDeviceName:
setHearingAidConnectedOrReachable:
environmentalDosimetryDidUpdate:
_headphoneLevelDidUpdate:messageIdentifier:
controlMessageDidUpdate:
hearingAidConnectionDidChange:
intValue
containsPeripheralWithUUID:
initWithRemoteRepresentation:andDeviceID:
setAvailableHearingAids:
doubleValue
unregisterUpdateListenerHash:
_unregisterUpdateListenerHash:
connectionQueue
registerUpdateBlock:forIdentier:withListener:listenerHash:
initWithListenerAddress:
objectAtIndexedSubscript:
indexesOfObjectsPassingTest:
removeObjectsAtIndexes:
_registerListener:forAvailableDeviceHandler:beginSearching:
registerUpdateBlock:forIdentier:withListener:
null
_registerListener:forLiveHeadphoneLevelHandler:messageIdentifier:
_unregisterLiveHeadphoneLevelHandler:messageIdentifier:
sharedUtilities
deviceIsTinker
shouldRestartOnInterruption
handleMessageWithPayload:forIdentifier:
unregisterUpdateListener:
registerResponseBlock:forUUID:
registerListener:forAvailableDeviceHandler:
registerPassiveListener:forAvailableDeviceHandler:
registerListener:forPropertyUpdateHandler:
connectToControllerWithID:
requestHearingAidConnectionWithReason:
cancelHearingAidConnectionRequest
hearingAidReachable
registerListener:forLiveListenLevelsHandler:
startLiveListen
stopLiveListen
registerListener:forLiveDosimetryUpdates:withDoseHandler:
unregisterDoseHandler:
registerListener:forLiveHeadphoneLevelHandler:
unregisterLiveHeadphoneLevelHandler:
registerListener:forRemoteLiveHeadphoneLevelHandler:
unregisterRemoteLiveHeadphoneLevelHandler:
registerListener:forRemoteLiveHeadphoneLevelChangesHandler:
unregisterRemoteLiveHeadphoneLevelChangesHandler:
registerListener:forControlMessageHandler:
unregisterControlMessageHandler:
availableControllers
hearingAidReachableForAudioTransfer
hearingDeviceName
connectedDeviceName
_responseBlocks
_hearingAidReachableForAudioTransfer
_hearingAidConnectedOrReachable
_availableHearingAids
_availableControllers
_hearingDeviceName
_connectedDeviceName
_updates
T@"NSArray",C,N,V_availableHearingAids
T@"NSArray",&,N,V_availableControllers
TB,N,V_hearingAidConnectedOrReachable
TB,N,V_hearingAidReachableForAudioTransfer
T@"NSString",&,N,V_hearingDeviceName
T@"NSString",&,N,V_connectedDeviceName
T@"NSMutableDictionary",&,N,V_updates
TB,R,N
T@"<AXHAServerDelegate>",W,D,N
_listenerAddress
setRightPrograms:
setLeftPrograms:
setLeftPropertiesLoadCount:
setRightPropertiesLoadCount:
setCurrentLeftProgram:
setCurrentRightProgram:
setCurrentLeftStreamingProgram:
setCurrentRightStreamingProgram:
setSupportsBinauralStreaming:
setSupportsCombinedPresets:
setSupportsCombinedVolumes:
setRequiresCombinedPresets:
setRequiresCombinedVolumes:
setRequiresBinauralStreaming:
setLeftMicrophoneVolumeSteps:
setLeftSensitivitySteps:
setLeftStreamVolumeSteps:
setLeftMixedVolumeSteps:
setRightMicrophoneVolumeSteps:
setRightSensitivitySteps:
setRightStreamVolumeSteps:
setRightMixedVolumeSteps:
_init
identifier
UUIDString
setLeftPeripheralUUID:
updateName
services
characteristics
peripheral:didUpdateCharacteristic:
replaceObjectAtIndex:withObject:
setArray:
stringValue
hasPrefix:
setRightPeripheralUUID:
setIsPersistent:
setIsPaired:
leftMicrophoneVolume
leftBatteryLevel
setLeftBatteryLevel:
currentLeftProgram
leftLoadedProperties
setLeftLoadedProperties:
leftStreamVolumeSteps
leftSensitivitySteps
leftSensitivity
setLeftSensitivity:
leftMicrophoneVolumeSteps
leftTreble
setLeftTreble:
leftBass
setLeftBass:
leftMixedVolume
setLeftMixedVolume:
leftMixedVolumeSteps
rightMicrophoneVolume
rightBatteryLevel
setRightBatteryLevel:
currentRightProgram
rightLoadedProperties
setRightLoadedProperties:
rightStreamVolumeSteps
rightSensitivitySteps
rightSensitivity
setRightSensitivity:
rightMicrophoneVolumeSteps
rightTreble
setRightTreble:
rightBass
setRightBass:
rightMixedVolume
setRightMixedVolume:
rightMixedVolumeSteps
currentRightStreamingProgram
currentLeftStreamingProgram
isPaired
supportsBinauralStreaming
supportsCombinedVolumes
requiresBinauralStreaming
requiresCombinedVolumes
tag:
disconnectAndUnpair:
setLeftBatteryLowDate:
setRightBatteryLowDate:
setShouldStreamToLeftAid:
connectToPeripheral:
disconnectFromPeripheral:
leftPeripheralUUID
unpairPeripheralWithUUID:
rightPeripheralUUID
rightPropertiesLoadCount
leftPropertiesLoadCount
setNotify:forPeripheral:
loadProperties:forPeripheral:withRetryPeriod:
loadBasicProperties
checkPairingStatusWithCompletion:
resetConnectionToPeripheral:
deviceIDFromLeftID:andRightID:
peripheral:characteristicForProperty:
peripheral:didLoadProperty:
didLoadOptionalBasicProperties
mergeDevice:withDevice:
replaceDevice:withDevice:
arrayByAddingObjectsFromArray:
sortedArrayUsingComparator:
UUID
peripheral:propertyForCharacteristic:
setNotifyValue:forCharacteristic:
loadFailedProperties
numberWithInt:
readValueForCharacteristic:fromPeripheral:
checkPeripheralPaired:withCompletion:
updateNameWithAdvertisingData:
newlineCharacterSet
stringByTrimmingCharactersInSet:
volumeValueForProperty:andPeripheral:
signedValueForProperty:andPeripheral:
writeValueForProperty:
keepInSync
_sendDelayedWrites
isPending
dataWithBytes:length:
writeValue:forCharacteristic:type:
leftWriteResponseProperties
setLeftWriteResponseProperties:
rightWriteResponseProperties
setRightWriteResponseProperties:
readValueForCharacteristic:
isStreamOrMixingStream
setLeftSelectedStreamingProgram:
setLeftSelectedProgram:
category
setRightSelectedStreamingProgram:
setRightSelectedProgram:
isSelected
delayWriteProperty:forPeripheral:
setRightStreamVolume:
setMixedVolume:forLeft:
countByEnumeratingWithState:objects:count:
initWithRepresentation:
setIsSelected:
shortValue
charValue
setTreble:forLeft:
setBass:forLeft:
numberWithDouble:
leftStreamVolume
rightStreamVolume
transportRepresentation
numberWithShort:
discoverServices:
discoverCharacteristics:forService:
hasTag:
service
value
initWithData:encoding:
whitespaceAndNewlineCharacterSet
containsObject:
getBytes:length:
leftBatteryLowDate
dateWithTimeIntervalSinceNow:
rightBatteryLowDate
updateBatteryServiceForPeripheral:
bytes
controlCharacterSet
hearingAidsForUUID:
mateWithDevice:
rightPresetBitmask
leftPresetBitmask
localizedStringFromNumber:numberStyle:
readProperty:fromPeripheral:
syncAttempts
initWithBytes:length:encoding:
setSyncAttempts:
rightProgramVersion
leftProgramVersion
setShouldStreamToRightAid:
deviceDidFinishLoading:
setLeftPeripheralPaired:
setRightPeripheralPaired:
peripheral:characteristicForUUID:
pairingDidCompleteForPeripheral:
peripheralDidUpdateName:
peripheral:didModifyServices:
peripheralDidUpdateRSSI:error:
peripheral:didReadRSSI:error:
peripheral:didDiscoverServices:
peripheral:didDiscoverIncludedServicesForService:error:
peripheral:didDiscoverCharacteristicsForService:error:
peripheral:didUpdateValueForCharacteristic:error:
peripheral:didWriteValueForCharacteristic:error:
peripheral:didUpdateNotificationStateForCharacteristic:error:
peripheral:didDiscoverDescriptorsForCharacteristic:error:
peripheral:didUpdateValueForDescriptor:error:
peripheral:didWriteValueForDescriptor:error:
peripheralIsReadyToSendWriteWithoutResponse:
peripheral:didOpenL2CAPChannel:error:
selectedPrograms
selectedProgramIndexes
setKeepInSync:
TB,N
T@"NSString",R,&,N
T@"NSMutableArray",R,&,N
Ti,N
Td,N
Tc,N
Td,R,N
T@"NSDate",R,&,N
Ts,R,N
T@"NSArray",R,C,N
T@"AXHearingAidMode",R,&,N
initWithLeftDevice:andRightDevice:
connectionDidChange
didLoadPersistentProperties
connectedEars
deviceDescription
readsWatchSupportCharacteristic
peripheral:didInvalidateServices:
peripheral:didFinishPairingWithResult:
peripheralDidUnpair:
addPeripheral:
addPeripheral:asLeft:
leftWriteRequestProperties
setLeftWriteRequestProperties:
rightWriteRequestProperties
setRightWriteRequestProperties:
setLeftProgramVersion:
setRightProgramVersion:
availableInputEars
setAvailableInputEars:
earsSupportingWatch
setEarsSupportingWatch:
leftPeripheralPaired
rightPeripheralPaired
_leftVolume
_rightVolume
_leftMicrophoneVolume
_rightMicrophoneVolume
_leftStreamVolume
_rightStreamVolume
_leftTreble
_rightTreble
_leftBass
_rightBass
_keepInSync
_finishedLoading
initialLoadToken
_propertyWriteTimer
_isListeningForStreamingChanges
_leftPowerSouceID
_rightPowerSourceID
_leftPowerSouceDictionary
_rightPowerSourceDictionary
_supportsBinauralStreaming
_supportsCombinedPresets
_supportsCombinedVolumes
_requiresBinauralStreaming
_requiresCombinedPresets
_requiresCombinedVolumes
_leftPeripheralPaired
_rightPeripheralPaired
_leftMicrophoneVolumeSteps
_rightMicrophoneVolumeSteps
_leftStreamVolumeSteps
_rightStreamVolumeSteps
_leftSensitivitySteps
_rightSensitivitySteps
_leftMixedVolumeSteps
_rightMixedVolumeSteps
_availableEars
_leftPresetBitmask
_rightPresetBitmask
_availableInputEars
_earsSupportingWatch
_leftSelectedProgram
_rightSelectedProgram
_leftSelectedStreamingProgram
_rightSelectedStreamingProgram
_leftSensitivity
_rightSensitivity
_leftMixedVolume
_rightMixedVolume
_leftWriteResponseProperties
_rightWriteResponseProperties
_leftBatteryLowDate
_rightBatteryLowDate
T@"NSString",&,N,Vname
T@"NSMutableArray",&,N,Vmanufacturer
T@"NSMutableArray",&,N,Vmodel
T@"NSString",&,N,VleftFirmwareVersion
T@"NSString",&,N,VrightFirmwareVersion
T@"NSString",&,N,VleftHardwareVersion
T@"NSString",&,N,VrightHardwareVersion
T@"NSString",&,N,VleftUUID
T@"NSString",&,N,VrightUUID
T@"NSString",&,N,VleftPeripheralUUID
T@"NSString",&,N,VrightPeripheralUUID
Td,N,VrightBatteryLevel
Td,N,VleftBatteryLevel
T@"NSArray",C,N,VrightPrograms
T@"NSArray",C,N,VleftPrograms
Ts,N,V_leftMicrophoneVolumeSteps
Ts,N,V_rightMicrophoneVolumeSteps
Ts,N,V_leftStreamVolumeSteps
Ts,N,V_rightStreamVolumeSteps
Ts,N,V_leftSensitivitySteps
Ts,N,V_rightSensitivitySteps
Ts,N,V_leftMixedVolumeSteps
Ts,N,V_rightMixedVolumeSteps
TB,N,V_supportsBinauralStreaming
TB,N,V_supportsCombinedPresets
TB,N,V_supportsCombinedVolumes
TB,N,V_requiresBinauralStreaming
TB,N,V_requiresCombinedPresets
TB,N,V_requiresCombinedVolumes
T@"AXHearingAidMode",&,N,VcurrentRightStreamingProgram
T@"AXHearingAidMode",&,N,VcurrentLeftStreamingProgram
T@"AXHearingAidMode",&,N,VcurrentRightProgram
T@"AXHearingAidMode",&,N,VcurrentLeftProgram
TB,N,VisConnecting
TQ,N,VleftLoadedProperties
TQ,N,VrightLoadedProperties
TQ,N,VleftWriteRequestProperties
TQ,N,VrightWriteRequestProperties
TQ,N,V_leftWriteResponseProperties
TQ,N,V_rightWriteResponseProperties
T@"NSMutableDictionary",&,N,VleftPropertiesLoadCount
T@"NSMutableDictionary",&,N,VrightPropertiesLoadCount
TI,N,VleftProgramVersion
TI,N,VrightProgramVersion
T@"NSDate",&,N,V_leftBatteryLowDate
T@"NSDate",&,N,V_rightBatteryLowDate
Ti,N,V_availableInputEars
Ti,N,V_earsSupportingWatch
TB,N,V_leftPeripheralPaired
TB,N,V_rightPeripheralPaired
TB,N,VisPaired
TB,N,V_keepInSync
TB,N,VisPersistent
Td,N,V_rightMicrophoneVolume
Td,N,V_leftMicrophoneVolume
Td,N,V_rightStreamVolume
Td,N,V_leftStreamVolume
T@"AXHearingAidMode",&,N,V_leftSelectedProgram
T@"AXHearingAidMode",&,N,V_rightSelectedProgram
T@"AXHearingAidMode",&,N,V_leftSelectedStreamingProgram
T@"AXHearingAidMode",&,N,V_rightSelectedStreamingProgram
TI,N,V_leftPresetBitmask
TI,N,V_rightPresetBitmask
Ti,N,V_availableEars
Td,N,V_rightSensitivity
Td,N,V_leftSensitivity
Td,N,V_rightMixedVolume
Td,N,V_leftMixedVolume
Tc,N,V_rightTreble
Tc,N,V_leftTreble
Tc,N,V_rightBass
Tc,N,V_leftBass
registerLoggingBlock:withListener:
registerDiscoveryBlock:withListener:
registerUpdateBlock:withListener:
initWithListenerAddress:andDelegate:
addKey:
_keys
bluetoothManagerQueue
initWithDelegate:queue:options:
updateBluetoothAvailability
setUuidToAddress:
setLoggingUpdates:
setUpdateUpdates:
setDiscoveryUpdates:
setPeripherals:
initWithFormat:locale:arguments:
peripherals
uuidToAddress
valueForKey:
hcSafeAddObject:
characteristicWithUUID:forPeripheral:
logMessage:
registerForConnectionEventsWithOptions:
retrieveConnectedPeripheralsWithServices:
connectPeripheral:options:
discoverAccessories
deviceFromIdentifier:
address
setValue:forKey:
ax_removeObjectsFromArrayUsingBlock:
arrayByAddingObject:
centralManagerDidUpdateState:
centralManager:willRestoreState:
centralManager:didDiscoverPeripheral:advertisementData:RSSI:
centralManager:didConnectPeripheral:
centralManager:didFailToConnectPeripheral:error:
centralManager:didDisconnectPeripheral:error:
centralManager:connectionEventDidOccur:forPeripheral:
centralManager:didUpdateANCSAuthorizationForPeripheral:
sharedQueue
availableAddresses
availableAddressesWithCharacteristicSupport:
readValueForCharacteristicUUID:
writeValue:forCharacteristicUUID:andAddress:
bluetoothAvailabilityDidChange:
centralManager
setCentralManager:
bluetoothCentralQueue
setBluetoothCentralQueue:
loggingUpdates
updateUpdates
discoveryUpdates
_centralIsOn
_bluetoothAvailable
_syncLock
_centralManager
_peripherals
_uuidToAddress
_bluetoothCentralQueue
_loggingUpdates
_updateUpdates
_discoveryUpdates
T@"CBCentralManager",&,N,V_centralManager
T@"NSArray",&,N,V_peripherals
T@"NSMutableDictionary",&,N,V_uuidToAddress
T@"NSObject<OS_dispatch_queue>",&,N,V_bluetoothCentralQueue
T@"NSMutableDictionary",&,N,V_loggingUpdates
T@"NSMutableDictionary",&,N,V_updateUpdates
T@"NSMutableDictionary",&,N,V_discoveryUpdates
setPairedHearingAid:
checkPartiallyPairedWithCompletion:
hearingAidsPaired
setListenForAvailableDeviceUpdates:
setPairedDeviceUUID:
setAvailableDevicesDescription:
removeObserver:
setDictionary:
searchForAvailableDevicesWithCompletion:
stopSearching
currentDeviceController
setTransaction:
forgetDevice:
updateNearbyDeviceAvailability
hasEntitlement:
shouldActiveScan
setShouldActiveScan:
availableDevicesDescription
replyMessageWithPayload:
longLongValue
sendClientsMessageWithPayload:excluding:
sendUpdatesForProperties:excludingClient:
willSwitchUser
registerForAvailableDevicesUpdates:
registerForDeviceUpdates:
readDeviceProperty:
writeDeviceProperty:
registerForControlMessageUpdates:
readAvailableDevices:
readAvailableControllers:
disconnectAndForceClient:
transaction
liveListenMessage
setLiveListenMessage:
_isListening
_liveListenLevelsTimer
_pairedDeviceUUID
_transaction
_availableDevicesDescription
_liveListenMessage
T@"NSObject<OS_os_transaction>",&,N,V_transaction
T@"NSString",&,N,V_pairedDeviceUUID
T@"NSDictionary",&,N,V_availableDevicesDescription
T@"HCXPCMessage",&,N,V_liveListenMessage
stringWithUTF8String:
lowercaseString
setIcloudInitializationQueue:
isProtectedDataAvailable
icloudInitializationQueue
_initializeICloudSetup
shouldUseiCloud
icloudHearingSettingsDidChange:
defaultStore
synchronize
pushLocalHearingAidsToiCloud
accountTypeWithAccountTypeIdentifier:
accountsWithAccountType:
iCloudAccountDidChange:
dictionaryForKey:
setLocalHearingAidsFromiCloud:
convertPersistentRepresentation:fromVersion:toVersion:
deviceIDForPairingInformation:
isDeviceIDOnCloudDenylist:
deviceIsWatch
shouldPushLocalAidsToiCloud
setDictionary:forKey:
knownPeripheralUUIDs
allowHearingAidControlOnLockScreen
exportsLiveListenToFile
shouldStreamSystemSounds
complicationPreferredDisplayMode
clearPartialPairing
usedHearingFeatures
liveHeadphoneLevelEnabled
removeObject:
objectValueForKey:withClass:andDefaultValue:
updateStreamingPreference
_updateTripleClickOptionsForPairedAids:
addDeviceIDToCloudDenylist:
setValue:forPreferenceKey:
removeDeviceIDFromCloudDenylist:
sharedPreferences
announceNotificationsOnHearingAidsSupported
setAnnounceNotificationsOnHearingAidsSupported:
boolValueForPreferenceKey:withDefaultValue:
integerValueForKey:withDefaultValue:
removeObjectAtIndex:
gizmoLiveHeadphoneLevelEnabled
gizmoLiveHeadphoneLevelNPEnabled
isPairedWithRealHearingAids
preferenceDomainForPreferenceKey:
shouldStoreLocally
keysToSync
preferenceKeyForSelector:
setClearPartialPairing:
setKnownPeripheralUUIDs:
setIndependentHearingAidSettings:
setAllowHearingAidControlOnLockScreen:
setCallAudioRoute:
setMediaAudioRoute:
setExportsLiveListenToFile:
setMultideviceSettingsEnabled:
setMultideviceAudioEnabled:
setShouldStreamSystemSounds:
setComplicationPreferredDisplayMode:
setUsedHearingFeatures:
_accessibilitySettingsChangedOnCompanion
setLiveHeadphoneLevelEnabled:
setAnyGizmoLiveHeadphoneLevelEnabled:
setGizmoLiveHeadphoneLevelEnabled:
setGizmoLiveHeadphoneLevelNPEnabled:
_accountStore
_contentProtectionNotifyToken
_finishediCloudSetup
_anyGizmoLiveHeadphoneLevelEnabled
_gizmoLiveHeadphoneLevelEnabled
_gizmoLiveHeadphoneLevelNPEnabled
_icloudInitializationQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_icloudInitializationQueue
T@"NSDictionary",&,N
Tq,N
TQ,N
TB,N,V_anyGizmoLiveHeadphoneLevelEnabled
TB,N,V_gizmoLiveHeadphoneLevelEnabled
TB,N,V_gizmoLiveHeadphoneLevelNPEnabled
initWithDomain:
pairedWatchDidChange:
nanoDomainAccessor
setWithArray:
synchronizeNanoDomain:keys:
currentLocale
_valueForPreferenceKey:
domainAccessor
setDomainAccessor:
globalDomainAccessor
setGlobalDomainAccessor:
_domainAccessor
_globalDomainAccessor
T@"NPSDomainAccessor",&,N,V_domainAccessor
T@"NPSDomainAccessor",&,N,V_globalDomainAccessor
addKey:forDomain:
setNearbyUpdatesQueue:
setDomainQueues:
setRegisteredDomains:
setMessageUpdates:
nearbyUpdatesQueue
registeredDomains
indexOfObject:
initWithService:
setWantsCrossAccountMessaging:
addDelegate:withDelegateProperties:queue:
devices
service:nearbyDevicesChanged:
containsString:
uniqueID
nearbyDeviceWithIDSDevice:
nearbyDeviceWithIDSIdentifier:
setAvailableDevices:
nearbyDevicesDidUpdateWithNewDevices:forDomain:
nearbyDeviceWithIdentifier:
objectFromXDCObject:
messageUpdates
domainQueues
XDCObjectFromObject:
sendMessage:toDestinations:priority:options:identifier:error:
registerBlock:forKey:withUpdateGroup:forDomain:withListener:
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:connectedDevicesChanged:
service:linkedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantUpdate:context:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
setService:
_availableDevices
_nearbyUpdatesQueue
_service
_domainQueues
_registeredDomains
_messageUpdates
T@"NSObject<OS_dispatch_queue>",&,N,V_nearbyUpdatesQueue
T@"NSArray",C,N,V_availableDevices
T@"IDSService",&,N,V_service
T@"NSMutableDictionary",&,N,V_domainQueues
T@"NSMutableArray",&,N,V_registeredDomains
T@"NSMutableDictionary",&,N,V_messageUpdates
connectedDevices
persistentDevices
availablePeripherals
loadedDevices
objectsAtIndexes:
availableSearchBlocks
connectedSearchBlocks
searchForAvailableDevices
currentProcessIsHeard
setAvailablePeripherals:
setLoadedDevices:
setConnectedDevices:
setCentralRequestBlocks:
setPersistentDevices:
setAutomaticallyCancelPendingBlockUponSchedulingNewBlock:
pairedHearingAidsDidChange
setAvailableSearchBlocks:
setConnectedSearchBlocks:
timeIntervalSinceDate:
removeLoadedDevice:
removeAvailableDevice:
isScanning
clearMissingHearingAids
initWithUUIDString:
retrievePeripheralsWithIdentifiers:
scanForPeripheralsWithServices:options:
centralManager:didRetrievePeripherals:
sendRequestToCentralManager:
loadedDevicesDidChange
centralManager:didRetrieveConnectedPeripherals:
hearingAidForPeripheral:
axUntag:
axTag:
cancelPeripheralConnection:options:
centralRequestBlocks
stopScan
firstIndex
isActive
afterDelay:processBlock:cancelBlock:
removeConnectedDevice:
addConnectedDevice:
addLoadedDevice:
addAvailableDevice:
clearAvailableDevices
clearConnectedDevices
clearLoadedDevices
hearingAidsForPeripheral:
enumerateObjectsAtIndexes:options:usingBlock:
code
sharedPairingAgent
unpairPeer:
isPeerPaired:
searchForConnectedDevices
pairingAgent:peerDidCompletePairing:
pairingAgent:peerDidFailToCompletePairing:error:
pairingAgent:peerDidUnpair:
persistPairedHearingAids
_bluetoothManager
_centralRequestsLock
_isScanning
_availableSearchBlocks
_connectedSearchBlocks
_advertisingTimeoutTimer
_advertisingTimestamps
_availableDeviceTimer
_shouldActiveScan
_availablePeripherals
_loadedDevices
_connectedDevices
_persistentDevices
T@"NSMutableArray",&,N,V_availablePeripherals
T@"NSMutableArray",&,V_loadedDevices
T@"NSMutableArray",&,N,V_connectedDevices
T@"NSMutableArray",&,N,V_persistentDevices
T@"NSMutableArray",&,N,VcentralRequestBlocks
T@"NSMutableArray",&,N,V_availableSearchBlocks
T@"NSMutableArray",&,N,V_connectedSearchBlocks
TB,N,V_shouldActiveScan
bundleForClass:
componentsJoinedByString:
localizedStringForKey:value:table:
pairedDevices
featureCapability:
registerNotifications
pickableAudioRoutesDidChange:
routingQueue
isEqualToDictionary:
currentPickableAudioRoutes
clearAudioRoutes
oldRoutes:equalToNewRoutes:
checkAudioPlayingWithQueue:origin:andCompletion:
checkAudioPlayingWithQueue:andCompletion:
TTYHardwareEnabled
TTYSoftwareEnabled
componentsSeparatedByString:
shouldUseMultideviceV3
currentPickableAudioRoutesIfExist
pauseNowPlaying:withQueue:andCompletion:
addHearingFeatureUsage:
updateHearingFeatureUsage
setRoutingQueue:
takingConnection
setTakingConnection:
_pickableRoutes
_routingLock
_takingConnection
_routingQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_routingQueue
TB,N,V_takingConnection
programThatMatchesProgram:
isMixingStream
isStream
setProgram:withOtherSidePrograms:selected:
enumerateKeysAndObjectsInDependentOrderUsingBlock:
untag:
wantsUpdatesForIdentifier:
registerMessageBlock:
sendMessage:errorBlock:
_updateBlock
setRequiredProperties:
setDeviceUUID:
updateDelegate
leftConnected
rightConnected
rangeOfString:
loadedProperties
checkDidLoadProperties:
didLoadProperty:
leftAvailableProperties
rightAvailableProperties
pendingPropertyWrites
setPendingPropertyWrites:
_delayWriteProperties
writeVolumesForProperty:
supportsCombinedVolumesForProperty:
_updateSelectedProgramsProperties
_writeAllProgramSelectionsToPeripheral
setLoadedProperties:
setLeftConnected:
setRightConnected:
setIsBluetoothPaired:
setLeftAvailableProperties:
setRightAvailableProperties:
isBluetoothPaired
_valueForProperty:
allValues
programAtIndex:forEar:
shouldDisplayCombinedVolume
shouldOnlyShowIndividualVolumesForProperty:
combinedPrograms
combinedVolumeForProperty:
_delayWritePending
_isBluetoothPaired
_isPaired
_leftConnected
_rightConnected
_updateDelegate
_leftPeripheralUUID
_rightPeripheralUUID
_rightBatteryLevel
_leftBatteryLevel
_rightPrograms
_leftPrograms
_deviceUUID
_requiredProperties
_loadedProperties
_pendingPropertyWrites
_leftAvailableProperties
_rightAvailableProperties
TB,N,V_isPaired
TB,N,V_leftConnected
TB,N,V_rightConnected
T@"NSMutableArray",&,N,V_manufacturer
T@"NSMutableArray",&,N,V_model
T@"NSString",&,N,V_leftPeripheralUUID
T@"NSString",&,N,V_rightPeripheralUUID
Td,N,V_rightBatteryLevel
Td,N,V_leftBatteryLevel
T@"NSArray",C,N,V_rightPrograms
T@"NSArray",C,N,V_leftPrograms
T@"NSString",&,N,V_deviceUUID
TQ,N,V_requiredProperties
TQ,N,V_loadedProperties
TQ,N,V_pendingPropertyWrites
TQ,N,V_leftAvailableProperties
TQ,N,V_rightAvailableProperties
TB,N,V_isBluetoothPaired
T@"<AXHARemoteUpdateProtocol>",W,N,V_updateDelegate
Ti,N,VavailableEars
addSelectorKey:
_selectorKeys
stringByReplacingOccurrencesOfString:withString:
lock
synchronizePreferences
updateBlocks
unlock
noiseEnabled
onboardingCompleted
notificationsEnabled
notificationThreshold
notificationMuteDate
currentLeq
leqTimestamp
leqDuration
migratedThreshold
thresholdVersion
internalLoggingEnabled
registeredNotifications
notificationForPreferenceKey:
performSynchronousWritingBlock:
_preferenceKeyForSelector:
_registerForNotification:
_synchronizeIfNecessary:
_setValue:forPreferenceKey:
sharedConnection
isHealthDataSubmissionAllowed
notificationsEnabledOverride
notificationsThreshholdOverride
dateWithTimeIntervalSinceReferenceDate:
timeIntervalSinceReferenceDate
noiseThresholdFooterDescription
initWithString:
noiseThresholdFooterLinkURL
noiseThresholdFooterLinkTitle
setAttributes:range:
URLWithString:
localizedStringWithFormat:
setHour:
setMinute:
localizedStringFromDateComponents:unitsStyle:
noiseThresholdCurrentValue
noiseThresholdMinutesThreshold
_handlePreferenceChanged:
preferenceIsSetForRetrieveSelector:
setNoiseEnabled:
setOnboardingCompleted:
setNotificationsEnabled:
setNotificationThreshold:
setNotificationMuteDate:
setCurrentLeq:
setLeqTimestamp:
setLeqDuration:
setMigratedThreshold:
setThresholdVersion:
setInternalLoggingEnabled:
launchNoiseOnboardingTitle
environmentalMeasurementsTitleDescription
environmentalMeasurementsFooterDescription
noiseThresholdSectionTitle
noiseThresholdTitleDescription
noiseThresholdFooterDescriptionWithLink
noiseThresholdOptions
localizedNoiseThresholdValue:
localizedNoiseThresholdDetailValue:
noiseThresholdValueFooterDescription
setNotificationsEnabledOverride:
setNotificationsThreshholdOverride:
setRegisteredNotifications:
setSynchronizePreferences:
setUpdateBlocks:
_synchronizeDomainsLock
_notificationsEnabledOverride
_notificationsThreshholdOverride
_registeredNotifications
_synchronizePreferences
_updateBlocks
T@"NSMutableSet",&,N,V_registeredNotifications
T@"NSMutableSet",&,N,V_synchronizePreferences
T@"NSMutableDictionary",&,N,V_updateBlocks
T@"NSDate",&,N
T@"NSString",R,N
T@"NSAttributedString",R,N
T@"NSURL",R,N
Tq,R,N
T@"NSArray",R,N
T@"NSNumber",&,N,V_notificationsEnabledOverride
T@"NSNumber",&,N,V_notificationsThreshholdOverride
decodeObjectOfClass:forKey:
decodeIntegerForKey:
decodeIntForKey:
decodeBoolForKey:
encodeObject:forKey:
encodeInteger:forKey:
encodeInt:forKey:
encodeBool:forKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
_index
_isSelected
_ear
_category
T@"NSString",C,N,V_name
Tq,N,V_category
TC,N,V_index
TB,N,V_isSelected
Ti,N,V_ear
Ti,N,VsyncAttempts
initWithTarget:block:
target
block
_target
_block
T@,R,N,V_target
T@?,R,N,V_block
setClients:
setHandlers:
setSharedInstanceQueue:
continueSetup
requestEnableModuleWithIdentifier:completionHandler:
getEnabledStateOfModuleWithIdentifier:completionHandler:
deviceSupportsEnvironmentalDosimetry
shutdownIfPossible
addHandler:andBlock:forMessageIdentifier:
boostPriority:
registerForEnvironmentalDosimetryUpdates:
displayCallPrompt:
handleDatabaseRequest:
handleDictionaryRequest:
handleSettingsRequest:
handleIncomingNotificationSuppressionChange:
handleMediaAction:
handleRTTControllerIsVisible:
initWithBundleIdentifier:
setWantsNotificationResponsesDelivered
clientWithConnection:
clients
clientRemoved:
teardownConnection
dictionaryFromXPCMessage:error:
connection:hasEntitlementForMessage:
messageWithPayload:xpcMessage:andClient:
handleMessage:forIdentifier:
handlers
sendMessage:withError:
setBoostMessage:
boostMessage
entitlementsForMessageID:
userNotificationCenter:willPresentNotification:withCompletionHandler:
userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:
userNotificationCenter:openSettingsForNotification:
updateHearingControlCenterModule
updateAnalytics
updatePersonalAudioSettingsOnAccessories
startServer
handleNewConnection:
registerFakeClient:
personalAudioQueue
setPersonalAudioQueue:
_transparencyHysteresisTimer
_shutdownTimer
_shouldShutdown
_finishedSetup
_clients
_handlers
_personalAudioQueue
_boostMessage
T@"NSArray",&,N,V_clients
T@"NSDictionary",&,N,V_handlers
T@"NSObject<OS_dispatch_queue>",&,N,V_personalAudioQueue
T@"HCXPCMessage",&,N,V_boostMessage
_clearCachedValues
setAttenuationBuffer:
timeIntervalSinceNow
setMuted:
stringByAppendingFormat:
categoryWithIdentifier:actions:intentIdentifiers:options:
setWithObject:
setNotificationCategories:
setCategoryIdentifier:
setThreadIdentifier:
setExpirationDate:
setTitle:
setSubtitle:
setBody:
defaultSound
setSound:
setInterruptionLevel:
requestWithIdentifier:content:trigger:destinations:
addNotificationRequest:withCompletionHandler:
_sendUpdateMessageForCurrentValues
applyNotificationLogicForSPL:withDuration:
applyAnalyticsNotificationLogicForSPL:withDuration:
attenuationLevel
isNotified
isMuted
setNotified:
checkToResetNotificationsForSPL:withDuration:andBuffer:forTime:
checkToSurfaceNotificationForSPL:withDuration:andBuffer:forTime:
maintainCircularBuffer:forTime:
calculateLeqForBuffer:
dateByAddingTimeInterval:
compare:
alertTypeFromLevel:
showNotificationForAlertType:
setTimeNotified:
localizedStringFromDate:dateStyle:timeStyle:
isNotified80
checkToResetAnalyticsNotificationsForSPL:withDuration:andBuffer:forTime:andThreshold:
checkToSurfaceAnalyticsNotificationForSPL:withDuration:andBuffer:forTime:andThreshold:
isNotified85
isNotified90
setNotified80:
setNotified85:
setNotified90:
setTimeNotified80:
setTimeNotified85:
setTimeNotified90:
removeObjectsInArray:
processInfo
isLowPowerModeEnabled
readEnvironmentalDosimetryLevels
processMeasurement:withMetadata:
stopReceivingAudioDosageSamples
lowPowerModeChanged:
edDummyDataTimer
setEdDummyDataTimer:
leqBuffer
setLeqBuffer:
attenuationBuffer
setAttenuationLevel:
timeNotified
leqBuffer80Threshold
setLeqBuffer80Threshold:
leqBuffer85Threshold
setLeqBuffer85Threshold:
leqBuffer90Threshold
setLeqBuffer90Threshold:
timeNotified80
timeNotified85
timeNotified90
userNotificationCenter
_measurementSuspensionNotifyToken
_notified
_muted
_notified80
_notified85
_notified90
_attenuationLevel
_edDummyDataTimer
_leqBuffer
_attenuationBuffer
_timeNotified
_leqBuffer80Threshold
_leqBuffer85Threshold
_leqBuffer90Threshold
_timeNotified80
_timeNotified85
_timeNotified90
_userNotificationCenter
T@"AXDispatchTimer",&,N,V_edDummyDataTimer
T@"NSMutableArray",&,N,V_leqBuffer
T@"NSMutableArray",&,N,V_attenuationBuffer
Tf,N,V_attenuationLevel
T@"NSDate",&,N,V_timeNotified
notified
TB,N,GisNotified,V_notified
muted
TB,N,GisMuted,V_muted
T@"NSMutableArray",&,N,V_leqBuffer80Threshold
T@"NSMutableArray",&,N,V_leqBuffer85Threshold
T@"NSMutableArray",&,N,V_leqBuffer90Threshold
notified80
TB,N,GisNotified80,V_notified80
notified85
TB,N,GisNotified85,V_notified85
notified90
TB,N,GisNotified90,V_notified90
T@"NSDate",&,N,V_timeNotified80
T@"NSDate",&,N,V_timeNotified85
T@"NSDate",&,N,V_timeNotified90
T@"UNUserNotificationCenter",R,N,V_userNotificationCenter
Ti,N,V_type
initWithIDSDevice:
initWithIDSIdentifier:
setIdsDevice:
setUpdateDomains:
setIdentifierWithoutDevice:
idsDevice
identifierWithoutDevice
representsAWatch
updateDomains
_idsDevice
_updateDomains
_identifierWithoutDevice
T@"NSMutableArray",&,N,V_updateDomains
T@"NSMutableDictionary",&,N,V_state
T@"NSString",&,N,V_identifierWithoutDevice
T@"IDSDevice",&,N,V_idsDevice
@16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@16
v24@0:8@"ADAMAudioDataAnalysisSample"16
v16@0:8
v24@0:8@"NSDictionary"16
v24@0:8@"NSArray"16
@24@0:8@16
v20@0:8B16
v32@0:8@16Q24
@32@0:8@16Q24
Q24@0:8@16
f16@0:8
v20@0:8f16
v24@0:8Q16
@"ADAMAudioDataReceiver"
@"AXDispatchTimer"
@"NSObject<OS_dispatch_queue>"
@"NSMutableArray"
v32@0:8Q16@24
v40@0:8@16Q24@32
v32@0:8Q16@"NSString"24
v40@0:8@16Q24@"NSString"32
v24@0:8@?16
@"NSMutableDictionary"
v28@0:8B16@?20
v24@0:8q16
B24@0:8q16
v32@0:8@16@24
v48@0:8@16Q24@32@40
@32@0:8@16@24
q16@0:8
@"<HUNearbyHearingAidControllerDelegate>"
@"AXRemoteHearingAidDevice"
@24@0:8Q16
B24@0:8Q16
B28@0:8Q16i24
v32@0:8C16i20Q24
v32@0:8c16i20Q24
@"NSString"
@"NSArray"
@"CBPeripheral"
@32@0:8@16f24f28
@"NSDate"
v32@0:8@?16@24
v32@0:8@16@?24
v36@0:8@16@?24B32
v36@0:8@16B24@?28
v40@0:8@16@?24Q32
@"NSNumber"
v40@0:8@16@24@32
v24@0:8@"CBPeripheral"16
v32@0:8@"CBPeripheral"16@"NSArray"24
v32@0:8@"CBPeripheral"16@"NSError"24
v40@0:8@"CBPeripheral"16@"NSNumber"24@"NSError"32
v40@0:8@"CBPeripheral"16@"CBService"24@"NSError"32
v40@0:8@"CBPeripheral"16@"CBCharacteristic"24@"NSError"32
v40@0:8@"CBPeripheral"16@"CBDescriptor"24@"NSError"32
v40@0:8@"CBPeripheral"16@"CBL2CAPChannel"24@"NSError"32
v28@0:8@16i24
i16@0:8
v20@0:8i16
d16@0:8
v24@0:8d16
c16@0:8
v20@0:8c16
s16@0:8
@24@0:8@"NSDictionary"16
B24@0:8@"NSString"16
@"NSArray"16@0:8
v28@0:8@"AXHearingAidMode"16i24
@"NSIndexSet"16@0:8
@"NSMutableArray"16@0:8
@"NSDate"16@0:8
@"AXHearingAidMode"16@0:8
B32@0:8@16Q24
Q32@0:8@16@24
v28@0:8B16@20
v40@0:8Q16@24d32
c32@0:8Q16@24
C32@0:8Q16@24
v24@0:8c16B20
v28@0:8d16B24
B28@0:8@16B24
I16@0:8
v20@0:8I16
v20@0:8s16
^{OpaqueIOPSPowerSourceID=}
@"AXHearingAidMode"
@"HUAccessoryManager"
v48@0:8@16@24@32@40
v40@0:8@16q24@32
v24@0:8@"CBCentralManager"16
v32@0:8@"CBCentralManager"16@"NSDictionary"24
v48@0:8@"CBCentralManager"16@"CBPeripheral"24@"NSDictionary"32@"NSNumber"40
v32@0:8@"CBCentralManager"16@"CBPeripheral"24
v40@0:8@"CBCentralManager"16@"CBPeripheral"24@"NSError"32
v40@0:8@"CBCentralManager"16q24@"CBPeripheral"32
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"CBCentralManager"
@"NSObject<OS_os_transaction>"
@"NSDictionary"
@"HCXPCMessage"
@"ACAccountStore"
@"NPSDomainAccessor"
@"HUNearbyController"
v64@0:8@16@24@32@40@48@56
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v40@0:8@16@24@?32
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32@"IDSMessageContext"40
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v40@0:8@16@24Q32
v48@0:8@16@24@32Q40
v40@0:8@?16@24@32
@"IDSService"
v32@0:8@"<AXHADeviceProtocol>"16Q24
v24@0:8@?<v@?@"NSDictionary">16
@32@0:8Q16@24
@"NSLock"
B32@0:8@16@24
v40@0:8@16^v24@?32
v36@0:8B16@20@?28
v36@0:8@16@24B32
B32@0:8@16@?24
@24@0:8C16i20
d24@0:8Q16
@"<AXHARemoteUpdateProtocol>"
v24@0:8:16
v40@0:8@?16:24@32
@24@0:8q16
@"NSMutableSet"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
C16@0:8
v20@0:8C16
@32@0:8@16@?24
@?16@0:8
B32@0:8@16^@24
Q24@0:8Q16
B32@0:8@"HCXPCMessage"16^@24
v32@0:8@"HCXPCMessage"16Q24
v32@0:8@"NSDictionary"16@"HCXPCClient"24
v40@0:8@"UNUserNotificationCenter"16@"UNNotification"24@?<v@?Q>32
v40@0:8@"UNUserNotificationCenter"16@"UNNotificationResponse"24@?<v@?>32
v32@0:8@"UNUserNotificationCenter"16@"UNNotification"24
@"NSObject<OS_xpc_object>"
Q20@0:8f16
v24@0:8f16f20
v36@0:8f16f20@24f32
v44@0:8f16f20@24f32q36
v28@0:8@16f24
f24@0:8@16
@"UNUserNotificationCenter"
@20@0:8i16
@"IDSDevice"
@(#)PROGRAM:HearingUtilities  PROJECT:Hearing-1
com.apple.HearingUtilities.HUHeadphoneLevelController.DataQueue
com.apple.HearingUtilities.HUHeadphoneLevelController.IDSQueue
v8@?0
ax_hearing_should_register_client_key
ADAMAudioDataReceiver
Unable to find class %s
ADAFMetadataKeyHAEDataForGauge
AXIDSServices
AXIDSServiceMessageKey
ADAMAudioDataAnalysisSample
hu_device_updates_queue
UPDATING %@ - %@
%s:%d %@
-[HUDeviceController device:didUpdateProperty:]
v32@?0@8@"NSMutableDictionary"16^B24
v32@?0@?<v@?@"NSDictionary">8Q16^B24
Stopping Updates
-[HUDeviceController stopPropertyUpdates]
hu_nearby_media
Media server died.
-[HUNearbyHearingAidController mediaServerDied]
Bluetooth isn't available. Not requesting connection.
-[HUNearbyHearingAidController shouldRequestAudioConnectionForCall:withCompletion:]
Should request audio %d, %d, %d, %d, %d, %d
-[HUNearbyHearingAidController shouldRequestAudioConnectionForCall:withCompletion:]_block_invoke
Requesting connection from %ld - %@
-[HUNearbyHearingAidController requestConnectionForReason:]_block_invoke
com.apple.hearing.hearingaids
v16@?0@"HUNearbyDevice"8
B32@?0@"HUNearbyDevice"8Q16^B24
B16@?0@"TUCall"8
%d - [%d, %d, %d]
-[HUNearbyHearingAidController shouldRelinquishConnectionForReason:]
Reliquishing for reason %ld
-[HUNearbyHearingAidController relinquishConnectionForReason:]
v16@?0@"NSString"8
-[HUNearbyHearingAidController start]_block_invoke
Sending checkin to %@
-[HUNearbyHearingAidController start]_block_invoke_2
v16@?0@"NSArray"8
v24@?0@"HUNearbyDevice"8@"NSDictionary"16
Stopping
-[HUNearbyHearingAidController stop]
Updating state to %ld - %@
-[HUNearbyHearingAidController updateStateOnDeviceQueue]
Checking connection %@
-[HUNearbyHearingAidController checkConnectionPeers:]_block_invoke
Checking connection %@ - %@
-[HUNearbyHearingAidController checkConnectionToHearingDevice:]_block_invoke
-[HUNearbyHearingAidController hasConnectionToHearingDevice]
%ld== %@ - %@
-[HUNearbyHearingAidController device:didReceiveMessage:]
We shouldn't be connected
-[HUNearbyHearingAidController device:didReceiveMessage:]_block_invoke
Relinquishing connection %d
v12@?0B8
We shouldn't be connecting
No connected peer. Connecting
Asking for device property read but device is nil
v32@?0@"NSNumber"8@16^B24
Unknown device ID %@ - %@
Updating controller %@
Requesting %@
-[HUNearbyHearingAidController updateProperty:forDeviceID:]_block_invoke
Writing %@ = %@
-[HUNearbyHearingAidController writeValue:forProperty:andDeviceID:]
Skipping write because value didn't change
RTTTelephonyUtilities
User requested handoff
void UserRequestedAudioTransferNotification(CFNotificationCenterRef, void *, CFStringRef, void *, CFDictionaryRef)
initWithDeviceType fake PSAP
-[AXFakePSAPDevice initWithDeviceType:]
Nathan's PSAP Device
AppleLeft-%d
AppleRight-%d
New PSAP Company
DEMO
PL3FT
PR1G4T
PB0TH
PDEMO
Default
Concert
v32@?0@"AXHearingAidMode"8Q16^B24
v32@?0@"NSNumber"8@"CBUUID"16^B24
WRITING %d for %@
-[AXFakePSAPDevice writeInt:toEar:forProperty:]
ax_hearing_device_fake_type_key
ax_psap_is_psap_key
T1111
Hello World
0x4C74BF03-0ED7-41B4-AB6F-D19A18BD15BF
0x4DE76FB3-819F-49B7-9738-C829B8E922FF
0x7B82D5C7-2516-4D68-A252-090A032F6CFE
0x0B80499D-B3F5-4815-818C-AFD793232BC4
0x75C8FA23-0E92-4762-9733-40AA89E98CBC
0x7C7260EC-A345-4C7D-A04F-CDC2F36DDD08
0x8E7A6FB6-C418-41F4-A550-AA8AEA223ADD
0x248B0918-5225-445E-BBEF-50A983BF39AF
0xED387E9D-1994-4E1A-B212-5B2CF23BCC48
v32@?0@"NSNumber"8@"NSArray"16^B24
Handle incoming messsage ID: %llu %@
-[AXHAServer handleMessageWithPayload:forIdentifier:]
Unexpect messsage ID: %llu
Availability %@
v32@?0@"NSString"8@16^B24
B32@?0@"AXRemoteHearingAidDevice"8Q16^B24
v32@?0@"NSString"8@"NSDictionary"16^B24
v32@?0@"NSArray"8Q16^B24
B32@?0@"NSArray"8Q16^B24
ax_hearing_should_begin_searching_key
Sending payload %@
-[AXHAServer writeValue:forProperty:andDeviceID:]
controller
reason
0x24E1DFF3-AE90-41BF-BFBD-2CF8DF42BF87
0x8D17AC2F-1D54-4742-A49A-EF4B20784EB3
0xC97D21D3-D79D-4DF8-9230-BB33FA805F4E
0x497EEB9E-B194-4F35-BC82-36FD300482A6
0xF3F594F9-E210-48F3-85E2-4B0CF235A9D3
0x6AC46200-24EA-46D8-A136-81133C65840A
0x21FF4275-C41D-4486-A0E3-DC11138BCDE6
0xA391C6F1-20BB-495A-ABBF-2017098FBC61
0xA28B6BE1-2FA4-42F8-AEB2-B15A1DBD837A
0x7BE94A55-8D91-4592-BC0F-EA3664CCD3A9
0x9C12A3DB-9CE8-4865-A217-D394B3BC9311
0xADC3023D-BFD2-43FD-86F6-7AE05A619092
0x16438C66-E95A-4C6F-8117-A6B745BD86FC
0xAEA12A32-60ED-43BA-BE6F-BA6092000FDB
0xEAF6FB18-090C-4EF7-AAB8-06518E16D502
0x76B3DB1F-44C4-46CC-A7B5-E9CE7DFBEF50
0x98924A39-6559-40A8-B302-3C8E40DBF834
0x066E7E7F-93E9-4D26-89AC-AECCDBAFA825
0x4656D3AC-C2DF-4096-96E7-713580B69CCD
0xF6E6AC8D-248E-433F-BC2C-E51E47DF3ECA
0xC60E7C73-203B-4B7C-AFC5-2FE79C5F2F01
0x4603580D-3C15-4FEC-93BE-B86B243ADA64
0xE893C687-7C43-4999-8FD0-6CB11D0F88CD
0x8E750BB1-40C1-48DF-B450-97F245C57E0C
%@_%@
HearingAidLabel
v32@?0@"CBCharacteristic"8Q16^B24
v32@?0@"CBService"8Q16^B24
ax_hearing_device_man_key
ax_hearing_device_model_key
ax_hearing_device_man_model_key
ax_hearing_device_name_key
ax_hearing_device_lr_key
ax_hearing_device_left_peripheral_key
ax_hearing_device_right_peripheral_key
ax_hearing_device_isleft_key
ax_hearing_device_hiid_key
ax_hearing_device_hiidother_key
ax_hearing_device_uuid_key
v32@?0@8@16^B24
Missing left peripheral UUID %@
-[AXHearingAidDevice initWithLeftDevice:andRightDevice:]
Missing right peripheral UUID %@
Left HA
Right HA
Connection state: (%d, %d)
-[AXHearingAidDevice connectionDidChange]
Paired: %@ - %@
-[AXHearingAidDevice connectionDidChange]_block_invoke
v16@?0B8B12
Hearing aid isn't paired, but we're changing streaming prefs %@
Checking %@
-[AXHearingAidDevice didLoadOptionalBasicProperties]_block_invoke
Adding available %@ - %@
v32@?0@8Q16^B24
No optional properties on left
-[AXHearingAidDevice didLoadOptionalBasicProperties]
No optional properties on right
{%d} LEFT [%d, %d] RIGHT [%d, %d]
{%d} LEFT [%d]: (%d, %d, %d) RIGHT [%d]: (%d, %d, %d)
-[AXHearingAidDevice didLoadBasicProperties]
{%d} LEFT [%d]: (%d, %d, %d, %d, %d) RIGHT [%d]: (%d, %d, %d, %d, %d)
-[AXHearingAidDevice didLoadRequiredProperties]
MATE: self: %@ other %@
-[AXHearingAidDevice mateWithDevice:]
q24@?0@"AXHearingAidMode"8@"AXHearingAidMode"16
Setting notify %d for peripheral: %@ - %@
-[AXHearingAidDevice setNotify:forPeripheral:]
Not completely loaded, trying again
-[AXHearingAidDevice setKeepInSync:]
Loading %@ for %@
-[AXHearingAidDevice loadProperties:forPeripheral:withRetryPeriod:]
Not loading %@, %d, %d - %@ = %@
-[AXHearingAidDevice loadProperties:forPeripheral:withRetryPeriod:]_block_invoke_2
Loading required properties for %@ - (%d, %d, %d, %d, %d, %d)
-[AXHearingAidDevice loadRequiredProperties]_block_invoke
(%@ - %@)
-[AXHearingAidDevice loadFailedProperties]
New name: %@
-[AXHearingAidDevice updateNameWithAdvertisingData:]
FAILED left write response check %lld
-[AXHearingAidDevice writeValueForProperty:]
FAILED right write response check %lld
Left %lld - Right %lld
-[AXHearingAidDevice _sendDelayedWrites]
Not paired
Not writing because peripheral isn't paired
-[AXHearingAidDevice delayWriteProperty:forPeripheral:]_block_invoke
[%d] %lld - %@
Writing %d for %@ - %@
-[AXHearingAidDevice writeInt:toEar:forProperty:]
-[AXHearingAidDevice writeSignedInt:toEar:forProperty:]
Reading %@ from %@
-[AXHearingAidDevice readValueForCharacteristic:fromPeripheral:]
Reading nil characteristic
B32@?0@8Q16^B24
Attempting to set readonly property: %ld
-[AXHearingAidDevice setValue:forProperty:]
Unknown property: %ld
Reading component property %@
-[AXHearingAidDevice valueForProperty:]
Compound property: %ld
Ignored property without characteristic: %ld
DeviceUUID NULL %@
-[AXHearingAidDevice deviceDescription]
v32@?0@"NSNumber"8Q16^B24
Reloading services %@, %@
-[AXHearingAidDevice peripheral:didModifyServices:]
EMPTY SERVICES
-[AXHearingAidDevice peripheral:didDiscoverServices:]
%@ - %@
v32@?0@8@"CBUUID"16^B24
Unknown service: %@ - %@
-[AXHearingAidDevice peripheral:didDiscoverServices:]_block_invoke
Error discovering services (%@): %@
EMPTY CHARACTERISTICS %@
-[AXHearingAidDevice peripheral:didDiscoverCharacteristicsForService:error:]
Loaded auth service characteristics
Unknown service: (%d) %@ - %@
IsMFiAuthenticated_CertClass0B
Error discovering characteristics (%@): %@
Error reading characteristic value (%@)(%@): %@
-[AXHearingAidDevice peripheral:didUpdateValueForCharacteristic:error:]
Manufacturer found: |%@|
-[AXHearingAidDevice peripheral:didUpdateCharacteristic:]
Hearing aid Manufacturer found: %@
Model Number found: |%@|
Hearing aid Model Number found: %@
Firmware version found: %@
Hearing aid right firmware version found: %@
Hearing aid left firmware version found: %@
Hardware version found: %@
Hearing aid right hardware version found: %@
Hearing aid left hardware version found: %@
Getting property: %@ (%@) for %@ - %@
Left
Right
B32@?0@"AXHearingAidMode"8Q16^B24
DefaultProgramName
Not reading presets, already reading
Not setting category
Hearing aid out of spec: %d
DisableLEA
Resetting connection to disable streaming %@
%@ peripheral %@, services %@
-[AXHearingAidDevice peripheral:didInvalidateServices:]
-[AXHearingAidDevice peripheral:didWriteValueForCharacteristic:error:]
Error writing characteristic value (%@): %@
Did pair with result %d - %@
-[AXHearingAidDevice pairingDidCompleteForPeripheral:]_block_invoke
Did Unpair: %@
-[AXHearingAidDevice peripheralDidUnpair:]
AXHearingAidDevice:%p:[%@] [%@, %@, %@, %@] L:%d R:%d,  l-uuid: %@ r-uuid: %@ - [%@, %@] [%@, %@]
LOADED
NOT LOADED
PAIRED
NOT PAIRED
PERSISTENT
NOT PERSISTENT
Available
NOT Available
Adding periperal %@ - %@
-[AXHearingAidDevice addPeripheral:]
-[AXHearingAidDevice addPeripheral:asLeft:]
HUAccessoryManagerLoggingKey
HUAccessoryManagerUpdateKey
HUAccessoryManagerDiscoveryKey
v32@?0@"CBPeripheral"8Q16^B24
Writing to %@
Checking %d, %@ = %@
Writing %@ to %@ - %@
Found peripherals %@
Skipping discovery %d, %d
Central state (%ld) %d
centralManager ON
centralManager OFF
Connected to %@ - %@
Disconnected from %@ - %@
B32@?0@"CBPeripheral"8Q16^B24
Connection changed %ld - %@
Found characteristics %@ - %@
Did write to peripheral %@ - %@ - %@
Updated
-[AXHAController init]_block_invoke
Current controller is device %d, %d, %d - %@
-[AXHAController currentDeviceController]
Current controller is nearby
Checking paired %d
-[AXHAController hearingAidsPaired]
Changing pairing %@ - %@
-[AXHAController setListenForAvailableDeviceUpdates:]_block_invoke_2
Missing info %@
-[AXHAController setListenForAvailableDeviceUpdates:]_block_invoke
v32@?0@"AXHearingAidDevice"8Q16^B24
No_HA_Devices
Available Devices: %@
%d, %d, %d - %@ - %@ == %d, %@
-[AXHAController setPairedHearingAid:]
HearingAidPairing
Skipping nearby because no hearing aids paired.
UPDATE %@
-[AXHAController setPairedHearingAid:]_block_invoke_2
v16@?0@"NSDictionary"8
Starting connection handoff
-[AXHAController connectToPairedDevice]
v20@?0B8@"HUNearbyDevice"12
com.apple.CoreRoutine.preferences
Registing for device availability %d, %d, %lf
-[AXHAController registerForAvailableDevicesUpdates:]_block_invoke
Setting active scan %d, %d
-[AXHAController registerForAvailableDevicesUpdates:]_block_invoke_2
Found more than one matching hearing aid %@
-[AXHAController writeDeviceProperty:]
hw.model
hearingaid-power-reduction
hearingaid-audio-equalization
hearingaid-low-energy-audio
PairedHearingUUIDsPreference
KnownPeripheralUUIDsPreference
WatchSyncPairedUUIDsPreference
CloudHearingAidsPreference
CloudHearingDevicesPreference
HearingAidEarIndependencePreference
HearingAidControlAvailableOnLockScreen
ClearPartialPairingPreference
HearingAidStreamToLeft
HearingAidStreamToRight
HearingAidsCallAudioRoute
HearingAidsMediaAudioRoute
HearingAidsCloudDenylist
HearingAidMultideviceSettings
HearingAidMultideviceAudio
HearingAidSystemSoundsStream
HearingAidComplicationPreferredDisplayMode
HearingFeatureUsagePreference
HearingAidsLiveListenExport
LiveHeadphoneLevelEnabled
hearing-icloud-initialization
Skipping iCloud setup. Device is locked
-[HUHearingAidSettings init]
Account: %d
-[HUHearingAidSettings _initializeICloudSetup]
ax_hearing_device_version_key
application-identifier
Unable to get entitlements for client task. Error: %@
-[HUHearingAidSettings shouldUseiCloud]
com.apple.accessibility.heard
New iCloud %d
-[HUHearingAidSettings iCloudAccountDidChange:]_block_invoke
Should we push local aids to cloud? should use cloud: %d, should local aids be pushed: %d, fake hearing aids %d
-[HUHearingAidSettings pushLocalHearingAidsToiCloud]
Pushing local aids to iCloud %@
Removing from iCloud
-[HUHearingAidSettings logMessage:]
UnknownKey
Changing paired hearing aids %@
-[HUHearingAidSettings setPairedHearingAids:]
Siri
accessible_announce
Setting Announce Notifications on Hearing Aids Supported: %d
B32@?0@"NSString"8Q16^B24
Accessibility
HeadphoneLiveLevel_WatchSupport
HeadphoneLiveLevel_NP_WatchSupport
.GlobalPreferences
AppleLocale
Setting nano value %@ - %@
-[HANanoSettings setValue:forPreferenceKey:]
Error synchronizing accessor %@
-[HANanoSettings _valueForPreferenceKey:]
AFPreferences
/System/Library/ControlCenter/Bundles/HearingAidsModule.bundle
com.apple.accessibility.controlcenter.hearingdevices
com.apple.accessibility.hearing.setup.ready
com.apple.accessibility.hearing.ui.availability
com.apple.accessibility.hearing.audio.transfer.availability
com.apple.accessibility.hearing.audio.transfer
com.apple.accessibility.hearing.audio.transfer.complete
com.apple.accessibility.hearingaid.audio.route.changed
com.apple.accessibility.hearingaid.nearby.devices.changed
com.apple.accessibility.hearing.wireless.splitter.changed
com.apple.accessibility.hearingaid.trustchain
7D74F4BD-C74A-4431-862C-CCE884371592
180a
8341F2B4-C013-4F04-8197-C4CDB42E26DC
EBC9A4A0-44FB-4D20-8B4C-4808AFDBCEE8
9FBF120D-6301-42D9-8C58-25E699A21DBD
2a29
2a27
2a26
2a24
HUEDSlowLeqIdentifier
HUEDFastLeqIdentifier
HUEDEnabledIdentifier
HUEDThresholdCrossedIdentifier
com.apple.noise.onboarding
com.apple.noise.threshold
HUGizmoIDSRequestDataKey
HUGizmoAudioLevelIdentifier
RouteCurrentlyPicked
RouteUID
Speaker
AVAudioRouteName
OutputRoute
RouteName
RouteType
IsPreferredExternalRoute
PreferredExternalRouteDetails_IsActive
BTDetails_IsHFPRoute
BluetoothLEOutput
Headset
Headphone
CarAudioOutput
AirTunes
HUNearbyControllerLoggingKey
v32@?0@"NSString"8Q16^B24
HUNearbyControllerMessageKey
HUNearbyControllerDiscoveryKey
hu_nearby_updates_queue
v32@?0@8@"NSDictionary"16^B24
com.apple.private.alloy.hearing
Device not found. Creating
Checking %@ - %@
Added device %@
v32@?0@"IDSDevice"8Q16^B24
Added device with identifier %@
Incoming message %@ - %@ - %@
v32@?0@"NSString"8@?<v@?@"HUNearbyDevice"@"NSDictionary">16^B24
Connected devices changed %@
Nearby devices changed %@
v32@?0@"NSString"8@?<v@?@"NSArray">16^B24
v32@?0@"NSString"8@"NSMutableDictionary"16^B24
Sending %@ to %@ with %@
v32@?0@"HUNearbyDevice"8Q16^B24
Sending %@ to %@ - %@
Error sending %@
com.apple.ax.hearingaids
ha_updates_queue
Device stopped advertising. Removing %@
-[AXHearingAidDeviceController clearMissingHearingAids]_block_invoke_3
v32@?0@8@"NSDate"16^B24
Starting scan %@
-[AXHearingAidDeviceController searchForAvailableDevices]_block_invoke_2
Already scanning
-[AXHearingAidDeviceController searchForAvailableDevices]
Resetting connection to %@
-[AXHearingAidDeviceController resetConnectionToPeripheral:]
Requesting connection [%ld] to %@
-[AXHearingAidDeviceController connectToPeripheral:]_block_invoke
Enabling streaming to LEFT %@
Disabling streaming to LEFT %@
Enabling streaming to RIGHT %@
Disabling streaming to RIGHT %@
Requesting disconnect: %@
-[AXHearingAidDeviceController disconnectFromPeripheral:]_block_invoke
Disconnection from %@
-[AXHearingAidDeviceController disconnectFromHearingAidWithDeviceUUID:]
Cancelling connections
-[AXHearingAidDeviceController cancelPendingConnections]
Stopping scan
-[AXHearingAidDeviceController stopSearching]
B32@?0@"AXHearingAidDevice"8Q16^B24
Should relinquish %d, %d, %d, %d
-[AXHearingAidDeviceController shouldRelinquishForPartialConnection:]
Wrong number of paired devices %@
Partial pair %d = %@
-[AXHearingAidDeviceController checkPartiallyPairedWithCompletion:]_block_invoke_2
-[AXHearingAidDeviceController checkPartiallyPairedWithCompletion:]
Found connected device %@
-[AXHearingAidDeviceController isConnected]_block_invoke
v32@?0@?<v@?@"NSArray">8Q16^B24
Replacing %@ with %@
-[AXHearingAidDeviceController replaceDevice:withDevice:]
Device %@ did merge with: %@
-[AXHearingAidDeviceController mergeDevice:withDevice:]
Device finished loading %@
-[AXHearingAidDeviceController deviceDidFinishLoading:]
BT not available. Caching [%ld, %d]
-[AXHearingAidDeviceController sendRequestToCentralManager:]
Central state (%ld) %d = %d
-[AXHearingAidDeviceController centralManagerDidUpdateState:]
-[AXHearingAidDeviceController centralManager:didRetrievePeripherals:]
-[AXHearingAidDeviceController centralManager:didRetrieveConnectedPeripherals:]
%@ - %@ - %@ - %@
-[AXHearingAidDeviceController centralManager:didDiscoverPeripheral:advertisementData:RSSI:]
v32@?0@"CBUUID"8Q16^B24
Connecting %d = [%d, %d, %d, %d]
%@ in %@
-[AXHearingAidDeviceController centralManager:didConnectPeripheral:]
More than one valid hearing device %@
No device for peripheral %@
IsHearingAid
-[AXHearingAidDeviceController centralManager:didFailToConnectPeripheral:error:]
Non fatal error. Attempting reconnect
Fatal error
%@ - %@ - %@
-[AXHearingAidDeviceController centralManager:didDisconnectPeripheral:error:]
Pairing completed %@ - %@
-[AXHearingAidDeviceController pairingAgent:peerDidCompletePairing:]
Found easy paired peripheral %@ - %@
Creating new easy pairing device %@
Peripheral missing tag %@
Not iCloud paired. Storing UUIDs %@
Skipping pairing becuase not a hearing device %@
-[AXHearingAidDeviceController pairingAgent:peerDidFailToCompletePairing:error:]
Did Unpair %@ in device %@
-[AXHearingAidDeviceController pairingAgent:peerDidUnpair:]
Unpairing [%d] %@
-[AXHearingAidDeviceController unpairPeripheralWithUUID:]_block_invoke
Not unpairing %@
Not Unpairing %@
-[AXHearingAidDeviceController unpairPeripheralWithUUID:]
New aids: %@
-[AXHearingAidDeviceController pairedHearingAidsDidChange]
Persistent device %@, %@
No BT peripherals with identifiers, unpairing %@
-[AXHearingAidDeviceController pairedHearingAidsDidChange]_block_invoke_4
Adding peripheral to device [%d] %@
-[AXHearingAidDeviceController pairedHearingAidsDidChange]_block_invoke
No BT identifiers %@, unpairing rep %@
HAFakeSearch
Unknown: %@
Battery
Left/Right
HA ID
Other HA ID
Mic Attenuation
Stream Attenuation
Available Programs
Active Program
Program Name Selector
Program Name
Program Category
Services
Characteristics
Program Update
Name
Manufacturer
Model
Connection Status
Firmware
Hardware
Device ID
Device Description
Paired Status
Spec Version
Bluetooth Pairing
Substantially Different
Sensitivity
Stream Step Size
Microphone Step Size
Sensitivity Step Size
Active Streaming Program
Treble
Bass
Mixed Volume
Mixed Volume Step Size
Properties %@
 and 
HearingUtilities_Noise
HearingAidSupport
HearingAidInputOptionsLeft
HearingAidInputOptionsNeither
HearingAidInputOptionsRight
HearingAidInputOptionsAutomatic
complication.preferred.display.mic.volume
complication.preferred.display.program
%@%@
v32@?0@"BluetoothDevice"8Q16^B24
AXSHARoutePicked
Bluetooth Audio
AXSHARouteHearingAid
AXSHARouteSpeaker
AXSHARouteHeadset
AXSHARouteAirTunes
AXSHARouteDefault
v32@?0@"NSDictionary"8Q16^B24
ha_routing_queue
-[HUUtilities mediaServerDied]
AXSHARouteLiveListen
v12@?0I8
Retried media pause, %@
success
fail
-[HUUtilities pauseNowPlaying:withQueue:andCompletion:]_block_invoke_3
Media Pause command %@
-[HUUtilities pauseNowPlaying:withQueue:andCompletion:]_block_invoke
Retried media play, %@
-[HUUtilities pauseNowPlaying:withQueue:andCompletion:]_block_invoke_2
Media Play command %@
HearingAidMultiDeviceV3
hai.%@
hai.
Selecting program %@ - %@
-[NSArray(_AX_HA_PROGRAMS_ARRAY_) setProgram:withOtherSidePrograms:selected:]
q24@?0@8@16
Skipping tag %@ - %@
-[CBPeripheral(_AX_HA_) axTag:]
Skipping untag %@ - %@
-[CBPeripheral(_AX_HA_) axUntag:]
RTTSettings
Requesting connect: %@
-[AXRemoteHearingAidDevice connect]
-[AXRemoteHearingAidDevice disconnectAndUnpair:]
Haven't loaded %@
-[AXRemoteHearingAidDevice checkDidLoadProperties:]
-[AXRemoteHearingAidDevice _updateSelectedProgramsProperties]
AXHearingPropertyStreamingProgramActive not available
-[AXRemoteHearingAidDevice _writeAllProgramSelectionsToPeripheral]
-[AXRemoteHearingAidDevice setKeepInSync:]
%p = property:%@ - value:%@
-[AXRemoteHearingAidDevice setValue:forProperty:]
AXHearingPropertyProgramsAvailable %@
Unknown property: %lld
-[AXRemoteHearingAidDevice _valueForProperty:]
AXRemoteHearingAidDevice:%p:[%@] [%@, %@] [%d] {%@}
_AXNotification_
com.apple.Noise
NoiseEnabled
OnboardingCompleted
NotificationsEnabled
NotificationsThreshold
NotificationsMuteDate
CurrentLeq
LeqTimestamp
LeqDuration
ThresholdMigration
ThresholdVersion
NoiseInternalLogging
NanoNoiseSettingsChanged
com.apple.noise
enabled
@"NSDictionary"8@?0
ENABLE_NOISE
ENVIRONMENTAL_TITLE
ENVIRONMENTAL_MEASUREMENT_FOOTER
NOISE_NOTIFICATIONS
NOISE_THRESHOLD
NSLink
NOISE_THRESHOLD_FOOTER
NOISE_THRESHOLD_FOOTER_LINK
https://support.apple.com/HT209593
DECIBELS
NO_NOTIFICATIONS
LIMIT_PER_DAY
THRESHOLD_DESCRIPTION_FOOTER
THRESHOLD_DESCRIPTION_FOOTER_NO_DECIBELS
name
category
index
isSelected
%@ - %@ (%@) - %d: Category: %ld Ear: %d
selected
not selected
com.apple.private.tty.database
com.apple.private.contactsui
com.apple.Contacts.database-allow
com.apple.CoreTelephony.CommCenterHelper.allow
com.apple.private.tty.settings
com.apple.accessibility.automation.client
com.apple.accessibility.AccessibilityUIServer
com.apple.private.kernel.jetsam
com.apple.private.security.storage.universalaccess
com.apple.accessibility.environmentaldosimetry
com.apple.carousel.clockfacestatusview
com.apple.BTServer.le
personal_audio_access_queue
v16@?0Q8
Hearing aid control status: %d
-[AXHeardController updateHearingControlCenterModule]_block_invoke
v20@?0B8@"NSError"12
Added hearing to control center: %@ success: %d
Not adding hearing module %lu - %d, %d, %d, %d
-[AXHeardController updateHearingControlCenterModule]
heard should be running. Continuing
-[AXHeardController shutdownIfPossible]
heard still shouldn't be running. Shutting down.
heard shouldn't be running. Starting timer,
@"HCXPCMessage"16@?0@"HCXPCMessage"8
com.apple.SoundDetectionNotifications
v16@?0@"NSObject<OS_xpc_object>"8
XPC error: %s
-[AXHeardController startServer]_block_invoke_24
Error in client connection event handler
-[AXHeardController handleNewConnection:]_block_invoke
v32@?0@"HCXPCClient"8Q16^B24
Message missing entitlement %d - %llu - %s: %@
-[AXHeardController handleNewConnection:]_block_invoke_4
Malformed message %@
v16@?0@"NSError"8
Error: %@
-[AXHeardController sendMessage:withError:]_block_invoke
-[AXHeardController sendUpdateMessage:forIdentifier:]_block_invoke_2
Client %@ doesn't want update for: %d
-[AXHeardController sendUpdateMessage:forIdentifier:]_block_invoke
-[AXHeardController sendClientsMessageWithPayload:excluding:]_block_invoke_2
B32@?0@"HCXPCClient"8Q16^B24
Found clients %llu = %@
-[AXHeardController countOfClientsListeningForIdentifier:]
%llu - %@
-[AXHeardController handleMessage:forIdentifier:]
Setting boost %@
-[AXHeardController boostPriority:]
User level setup available
void UserLevelHearingSetupAvailable(CFNotificationCenterRef, void *, CFStringRef, void *, CFDictionaryRef)
CCSControlCenterService
RTTController
SaW+DA+cbiqDHrex8MTABA
Initializing HUNoiseController
-[HUNoiseController init]
com.apple.HearingUtilities.HUNoiseController.DataQueue
Notification mute date changed: %@
-[HUNoiseController init]_block_invoke
NoiseAlertTitle
NoiseAlertLevelContent80
NoiseAlertLevelDetailedContent80
NoiseAlertLevelContent85
NoiseAlertLevelDetailedContent85
NoiseAlertLevelContent90
NoiseAlertLevelDetailedContent90
NoiseAlertLevelContent95
NoiseAlertLevelDetailedContent95
NoiseAlertLevelContent100
NoiseAlertLevelDetailedContent100
NoiseAlertDamageWarning
Notification request failed to add to notification center with error: %@
-[HUNoiseController showNotificationForAlertType:]_block_invoke
Notification request added to notification center: %@
-[HUNoiseController showNotificationForAlertType:]
Didn't receive measurements from ADAM.
-[HUNoiseController restartADAMTimer]_block_invoke
FastData
stop receiving audio dosage samples. clearing cached values
-[HUNoiseController stopReceivingAudioDosageSamples]
Resetting notifications since it has past the notification mute date of %@
-[HUNoiseController applyNotificationLogicForSPL:withDuration:]
Failed while checking to reset notifications because buffer is empty.
-[HUNoiseController checkToResetNotificationsForSPL:withDuration:andBuffer:forTime:]
Resetting notifications for Leq %0.1f dB being under %i dB threshold for minimum reset time
Resetting notifications since it has been more than general reset time
Failed while checking to surface notification because buffer is empty.
-[HUNoiseController checkToSurfaceNotificationForSPL:withDuration:andBuffer:forTime:]
Sample is above threshold of %i dB and buffered more than %i ms
Leq buffer gating date: %@
Sample is beyond gate date: %0.1f, %@
-[HUNoiseController checkToSurfaceNotificationForSPL:withDuration:andBuffer:forTime:]_block_invoke
v32@?0@"HUNoiseSample"8Q16^B24
Total count of samples beyond gate date: %i
Count of samples beyond gate date and above threshold: %i
Checking to surface notification: %i percent of last %i seconds of samples are above %i dB set threshold - calculating leq
Calculated Leq: %0.1f dB
Leq over last 3 minutes is %0.0f dB, which is over set threshold of %i dB.
Completed surfacing notification at %@ for Leq %0.1f dB and writing sample to HK
com.apple.noise.notification
timeNotified
notificationThreshold
[Analytics]: Failed while checking to reset notifications because buffer is empty.
-[HUNoiseController checkToResetAnalyticsNotificationsForSPL:withDuration:andBuffer:forTime:andThreshold:]
[Analytics]: Resetting notifications for Leq %0.1f dB being under %i dB threshold for minimum reset time
[Analytics] Resetting notifications since it has been more than general reset time for %i dB threshold
[Analytics] Failed while checking to surface notification because buffer is empty.
-[HUNoiseController checkToSurfaceAnalyticsNotificationForSPL:withDuration:andBuffer:forTime:andThreshold:]
[Analytics] Sample is above threshold of %i dB and buffered more than %i ms
[Analytics] Leq buffer gating date for %i dB threshold: %@
[Analytics] Sample is beyond gate date for %i dB threshold: %0.1f, %@
-[HUNoiseController checkToSurfaceAnalyticsNotificationForSPL:withDuration:andBuffer:forTime:andThreshold:]_block_invoke
[Analytics] Total count of samples beyond gate date for %i dB threshold: %i
[Analytics] Count of samples beyond gate date and above %i dB threshold: %i
[Analytics] Checking to surface notification: %i percent of last %i seconds of samples are above %i dB set threshold - calculating leq
[Analytics] Leq over last 3 minutes is %0.0f dB, which is over set threshold of %i dB.
com.apple.noise.alertCount
decibel
[Analytics] Analytics notification surfaced for Leq %0.1f dB and analytics threshold %i dB
Failed to maintain circular buffer because buffer is empty.
-[HUNoiseController maintainCircularBuffer:forTime:]
Failed to calculate Leq for buffer because buffer is empty.
-[HUNoiseController calculateLeqForBuffer:]
Low power changed
-[HUNoiseController lowPowerModeChanged:]
Low power enabled. Stopping measurements.
Low power disabled. Resuming measurements.
Nathan's Hearing Aid
Carbondale
That Fruit Company
L3FT
R1G4T
B0TH
T0B1AS
IL5440
Theater
Restaurant
Television streamer
Mixing streamer
Mixing streamer 2
Park
Bowling
Skydiving
Parking lot
Baseball game
Space Station Ring Toss Jacuzzi
-[AXFakeHearingAidDevice writeInt:toEar:forProperty:]
T66574jhsgjd
LadyBug Whisperer
%@ - %@ [%@] %ld - %@
Local: Start receiving headphone audio updates
Local: Stop receiving headphone audio updates
Start receiving ADAM headphone audio data
Stop receiving ADAM headphone audio data
Headphone level didn't receive measurements from ADAM
Remote: Start requesting headphone audio updates for %llu
Remote: Stop requesting headphone audio updates for %llu
Publishing audio data(HCMessageIdentifierRemoteHeadphoneLevelUpdates) to Gizmo.
Publishing audio data(HCMessageIdentifierRemoteHeadphoneLevelChangesUpdates) to Gizmo.
Publishing request audio data to Companion.
Receiving request audio data from Gizmo. shouldStreamingDataToGizmo: %i, streamingDataToGizmoType: %llu
Receiving audio data from Companion.
Gizmo is not connected anymore. Stop streaming to Gizmo.
Lost connection to AXUIServer
Restarting AXUIServer + IDS connection
Received automation request for sample headphone level data
Waiting %fs for current automation sample to finish
Starting new automation sample
No automation sample data left
Processing automation request for sample %@
%{public}s
Watch is in family mode. Not requesting remote live headphone data
Watch is in family mode. Not requesting remote headphone data changes
Device paired but doesn't contain peripheral %@
Routes %@
Message missing entitlement %d - %s, message: %llu: %@
softlink:r:path:/System/Library/PrivateFrameworks/AudioDataAnalysis.framework/AudioDataAnalysis
softlink:o:path:/System/Library/PrivateFrameworks/AXIDSServices.framework/AXIDSServices
softlink:r:path:/System/Library/PrivateFrameworks/RTTUtilities.framework/RTTUtilities
softlink:r:path:/System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices
softlink:r:path:/System/Library/PrivateFrameworks/RTTUtilities.framework/RTTUtilities
softlink:r:path:/System/Library/PrivateFrameworks/ControlCenterServices.framework/ControlCenterServices
softlink:r:path:/System/Library/PrivateFrameworks/RTTUtilities.framework/RTTUtilities
HUHeadphoneLevelController
ADAMAudioDataReceiverDelegate
NSObject
AXIDSServicesClient
HUDeviceController
AXHARemoteUpdateProtocol
HUNearbyHearingAidController
AXFakePSAPDevice
HUNoiseSample
AXPSAPDevice
AXHAServer
AXHAListenerHelper
AXHearingAidDevice
CBPeripheralDelegate
AXHADeviceProtocol
2y,dB
HUAccessoryListenerHelper
HUAccessoryManager
CBCentralManagerDelegate
AXHAController
HUHearingAidSettings
HANanoSettings
AXHASettings
HUNearbyListenerHelper
HUNearbyController
IDSServiceDelegate
AXHearingAidDeviceController
AXHADeviceControllerProtocol
HUUtilities
_AX_HA_
_AX_HA_PROGRAMS_ARRAY_
_AX_HA_DEPENDENT_ENUMERATION_
HUFakeXPCClient
AXRemoteHearingAidDevice
HUNoiseSettingsListenerHelper
HUNoiseSettings
AXHearingAidMode
NSSecureCoding
NSCoding
AXHAMessageHandlerContext
AXHeardController
HCHeardControllerProtocol
UNUserNotificationCenterDelegate
HUNoiseController
AXFakeHearingAidDevice
HUNearbyDevice
numberWithInt:
rangeOfString:
encodeInt:forKey:
removeObjectAtIndex:
numberWithInteger:
allKeys
setTitle:
unsignedIntegerValue
encodeInteger:forKey:
removeObjectForKey:
startReceivingAudioSampleType:
setInterruptionLevel:
numberWithShort:
allValues
encodeObject:forKey:
removeObjectsAtIndexes:
categoryWithIdentifier:actions:intentIdentifiers:options:
numberWithUnsignedChar:
enumerateKeysAndObjectsUsingBlock:
announceNotificationsOnHearingAidsSupported
untag:
removeObjectsInArray:
anyCallIsEndpointOnCurrentDevice
numberWithUnsignedInt:
deviceFromIdentifier:
UUIDWithString:
connectionQueue
enumerateObjectsAtIndexes:options:usingBlock:
removeObserver:
status
numberWithUnsignedInteger:
enumerateObjectsUsingBlock:
setMinute:
numberWithUnsignedLongLong:
containsObject:
isEqualToDictionary:
readValueForCharacteristic:
charValue
messagePayloadFromDictionary:andIdentifier:
replaceObjectAtIndex:withObject:
objectAtIndex:
isEqualToString:
setBody:
replyMessageWithPayload:
containsString:
array
objectAtIndexedSubscript:
deviceIsWatch
characteristics
messageWithPayload:
indexOfObject:
stopReceivingAudioSampleType:
objectForKey:
arrayByAddingObject:
scanForPeripheralsWithServices:options:
isHealthDataSubmissionAllowed
indexOfObjectPassingTest:
controlCharacterSet
featureCapability:
requestEnableModuleWithIdentifier:completionHandler:
isInternalInstall
objectForKeyedSubscript:
arrayByAddingObjectsFromArray:
messageWithPayload:xpcMessage:andClient:
stopScan
firstIndex
indexesOfObjectsPassingTest:
setCategoryIdentifier:
metadata
arrayWithArray:
firstObject
setNotificationCategories:
setValue:forKey:
URLWithString:
requestWithIdentifier:content:trigger:destinations:
arrayWithObjects:
objectValueForKey:withClass:andDefaultValue:
TTYSoftwareEnabled
floatValue
isLowPowerModeEnabled
initAudioSampleWithType:data:dateInterval:metadata:
copy
arrayWithObjects:count:
objectsAtIndexes:
count
initWithBundleIdentifier:
stringByAppendingFormat:
getBytes:length:
registerForConnectionEventsWithOptions:
countByEnumeratingWithState:objects:count:
initWithBytes:length:encoding:
setWantsCrossAccountMessaging:
devices
stringByReplacingOccurrencesOfString:withString:
mutableCopy
initWithData:encoding:
dictionary
setWantsNotificationResponsesDelivered
stringByTrimmingCharactersInSet:
pairedDevices
getEnabledStateOfModuleWithIdentifier:completionHandler:
setWantsUpdates:forIdentifier:
stringValue
initWithDelegate:queue:options:
dictionaryForKey:
UUID
setWithArray:
stringWithFormat:
setNotifyValue:forCharacteristic:
dictionaryFromXPCMessage:error:
value
retrieveConnectedPeripheralsWithServices:
initWithDomain:
setObject:forKey:
dictionaryWithDictionary:
setWithObject:
stringWithUTF8String:
sendMessage:toDestinations:priority:options:identifier:error:
registerForIncomingData:
valueForKey:
setSharedInstanceQueue:
handleDatabaseRequest:
sharedCallCenter
initWithFormat:locale:arguments:
retrievePeripheralsWithIdentifiers:
payload
dictionaryWithObject:forKey:
handleDictionaryRequest:
sharedConnection
dictionaryWithObjects:forKeys:count:
UTF8String
handleIncomingNotificationSuppressionChange:
currentProcessIsHeard
dictionaryWithObjectsAndKeys:
performCallCenterTask:
length
handleMediaAction:
initWithIdentifier:
accountTypeWithAccountTypeIdentifier:
performSynchronousWritingBlock:
accountsWithAccountType:
sharedPairingAgent
isPeerPaired:
whitespaceAndNewlineCharacterSet
data
newlineCharacterSet
sharedPreferences
sendMessageWithPayload:andIdentifier:
isPending
synchronize
handleRTTControllerIsVisible:
setSound:
synchronizeNanoDomain:keys:
initWithObjectsAndKeys:
handleSettingsRequest:
dataWithBytes:length:
addDelegate:withDelegateProperties:queue:
ax_removeObjectsFromArrayUsingBlock:
isProtectedDataAvailable
date
shortValue
tag:
client
writeValue:forCharacteristic:type:
setDictionary:
addEntriesFromDictionary:
bluetoothManagerQueue
dateByAddingTimeInterval:
teardownConnection
UUIDString
setDictionary:forKey:
dateWithTimeIntervalSinceNow:
clientRemoved:
boolValue
hasEntitlement:
clientWithConnection:
dateWithTimeIntervalSinceReferenceDate:
boolValueForPreferenceKey:withDefaultValue:
hasPrefix:
setSubtitle:
decodeBoolForKey:
postNotificationName:object:
timeIntervalSinceDate:
hasTag:
code
localizedStringForKey:value:table:
initWithService:
decodeIntForKey:
timeIntervalSinceNow
hcSafeAddObject:
processInfo
setExpirationDate:
compare:
initWithStartDate:duration:
localizedStringFromDate:dateStyle:timeStyle:
decodeIntegerForKey:
services
addNotificationRequest:withCompletionHandler:
discoverCharacteristics:forService:
bundleForClass:
timeIntervalSinceReferenceDate
componentsJoinedByString:
localizedStringFromDateComponents:unitsStyle:
addObject:
initWithString:
bundleIdentifier
decodeObjectOfClass:forKey:
localizedStringFromNumber:numberStyle:
componentsSeparatedByString:
addObserver:selector:name:object:
defaultCenter
lastObject
discoverServices:
bytes
setAnnounceNotificationsOnHearingAidsSupported:
removeAllObjects
localizedStringWithFormat:
setThreadIdentifier:
initWithTargetSerialQueue:
TTYHardwareEnabled
setArray:
defaultSound
connectPeripheral:options:
lock
null
defaultStore
initWithUUIDString:
publishDirectIDSMessage:
uniqueID
displayCallPrompt:
numberWithBool:
intValue
callsPassingTest:
unlock
longLongValue
setAttributes:range:
setHour:
integerValue
numberWithChar:
address
callsWithStatus:
doubleValue
setAutomaticallyCancelPendingBlockUponSchedulingNewBlock:
removeLastObject
unpairPeer:
lowercaseString
afterDelay:processBlock:
deregisterForIncomingData:
numberWithDouble:
cancel
integerValueForKey:withDefaultValue:
mainBundle
isActive
numberWithFloat:
sortedArrayUsingComparator:
afterDelay:processBlock:cancelBlock:
encodeBool:forKey:
removeObject:
cancelPeripheralConnection:options:
init
dealloc
sharedController
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
receiveAudioSample:
didReceiveIncomingData:
connectedDevicesDidChange:
serverConnectionWasInterrupted
registerForHeadphoneLevelUpdates:
_startRecevingADAMAudioSample:
restartADAMTimer
_pushPayload
pushValuesToLocalOrIDSListeners
pushValuesToRemoteListeners
pushValuesToRemoteChangeListeners
_pushValues:identifier:
registerForRemoteHeadphoneLevelUpdates:
registerForRemoteHeadphoneLevelChangesUpdates:
_sendIDSRequestToCompanion:messageIdentifier:
_startIDSConnection
_stopIDSConnection
_publishAudioDataIDSMessage:
_audioLevelFromAudioDict:
_publishRequestAudioDataIDSMessage:
_registerMediaNotification
_unregisterMediaNotification
_mediaPlaybackDidChange:
_automationStartPlayingSampleData:
_automationPlaySampleData
isMeasurementEnabled
setMeasurementEnabled:
receiver
setReceiver:
adamSuspendedTimer
setAdamSuspendedTimer:
dataQueue
setDataQueue:
slowLeq
setSlowLeq:
fastLeq
setFastLeq:
thresholdLevel
setThresholdLevel:
isCompanionConnectedToIDS
setIsCompanionConnectedToIDS:
idsQueue
setIdsQueue:
shouldStreamingDataToGizmo
setShouldStreamingDataToGizmo:
streamingDataToGizmoType
setStreamingDataToGizmoType:
streamingToGizmoAudioLevel
setStreamingToGizmoAudioLevel:
automationSampleData
setAutomationSampleData:
.cxx_destruct
_measurementEnabled
_isCompanionConnectedToIDS
_shouldStreamingDataToGizmo
_slowLeq
_fastLeq
_receiver
_adamSuspendedTimer
_dataQueue
_thresholdLevel
_idsQueue
_streamingDataToGizmoType
_streamingToGizmoAudioLevel
_automationSampleData
T@"ADAMAudioDataReceiver",&,N,V_receiver
T@"AXDispatchTimer",&,N,V_adamSuspendedTimer
T@"NSObject<OS_dispatch_queue>",&,N,V_dataQueue
Tf,N,V_slowLeq
Tf,N,V_fastLeq
measurementEnabled
TB,N,GisMeasurementEnabled,V_measurementEnabled
TQ,N,V_thresholdLevel
TB,N,V_isCompanionConnectedToIDS
T@"NSObject<OS_dispatch_queue>",&,N,V_idsQueue
TB,N,V_shouldStreamingDataToGizmo
TQ,N,V_streamingDataToGizmoType
TQ,N,V_streamingToGizmoAudioLevel
T@"NSMutableArray",&,N,V_automationSampleData
updateProperty:forDeviceID:
writeValue:forProperty:andDeviceID:
hearingAidForDeviceID:
device:didUpdateProperty:
registerForPropertyUpdates:
stopPropertyUpdates
representsLocalDevices
deviceUpdatesQueue
setDeviceUpdatesQueue:
deviceUpdatesDescription
setDeviceUpdatesDescription:
updateDeviceBlocks
setUpdateDeviceBlocks:
_deviceUpdatesQueue
_deviceUpdatesDescription
_updateDeviceBlocks
T@"NSObject<OS_dispatch_queue>",&,N,V_deviceUpdatesQueue
T@"NSMutableDictionary",&,N,V_deviceUpdatesDescription
T@"NSMutableArray",&,N,V_updateDeviceBlocks
multideviceSettingsEnabled
callStatusDidChange:
routesDidChange:
sharedInstance
registerMediaNotifications
unregisterMediaNotifications
mediaServerDied
shouldRequestAudioConnectionForCall:withCompletion:
mediaPlaybackDidChange:
requestHandoffForMedia
sendConnectionToCompanionIfPossible
sendConnectionToCompanionIfPossible:
requestConnectionForReason:
checkPairedPeerExists:
shouldRelinquishConnectionForReason:
relinquishConnectionForReason:
start
stop
updateStateOnDeviceQueue
updateState
availableDevices
getConnectedPeer:
connectedPeer
hearingDevice
checkConnectionPeers:
checkConnectionToHearingDevice:
hasConnectionToHearingDevice
sendConnectionUpdateToPeers
sendMessageToAllDevices:
sendMessage:toDevices:
sendWriteToAllDevices:
sendWrite:toDevices:
writeValue:forProperty:andDeviceID:toDevices:
device:didReceiveMessage:
state
setState:
delegate
setDelegate:
localDevice
setLocalDevice:
mediaQueue
setMediaQueue:
sendConnectionToCompanionTimer
setSendConnectionToCompanionTimer:
holdingMediaForConnection
setHoldingMediaForConnection:
holdingPhoneForConnection
setHoldingPhoneForConnection:
_holdingMediaForConnection
_holdingPhoneForConnection
_state
_delegate
_localDevice
_mediaQueue
_sendConnectionToCompanionTimer
T@"AXRemoteHearingAidDevice",&,N,V_localDevice
T@"NSObject<OS_dispatch_queue>",&,N,V_mediaQueue
T@"AXDispatchTimer",&,N,V_sendConnectionToCompanionTimer
TB,N,V_holdingMediaForConnection
TB,N,V_holdingPhoneForConnection
Tq,N,V_state
T@"<HUNearbyHearingAidControllerDelegate>",W,N,V_delegate
initWithPeripheral:
persistentRepresentation
valueForProperty:
setValue:forProperty:
initWithDeviceType:
manufacturerForType
modelForType
connect
disconnect
leftAvailable
rightAvailable
isConnected
isLeftConnected
isRightConnected
hasConnection
isPersistent
createPrograms
leftPrograms
rightPrograms
availablePropertiesForPeripheral:
deviceSupportsProperty:
propertyIsAvailable:forEar:
showCombinedPrograms
programsListsAreEqual
writeInt:toEar:forProperty:
writeSignedInt:toEar:forProperty:
didLoadBasicProperties
didLoadRequiredProperties
persist
registerWriteBlock:
setNewName:
isFakeDevice
deviceType
setDeviceType:
name
setName:
manufacturer
setManufacturer:
model
setModel:
leftUUID
setLeftUUID:
rightUUID
setRightUUID:
isConnecting
setIsConnecting:
leftFirmwareVersion
setLeftFirmwareVersion:
rightFirmwareVersion
setRightFirmwareVersion:
leftHardwareVersion
setLeftHardwareVersion:
rightHardwareVersion
setRightHardwareVersion:
leftPeripheral
setLeftPeripheral:
rightPeripheral
setRightPeripheral:
type
setType:
excludedProperties
setExcludedProperties:
connected
setConnected:
_leftFakePrograms
_rightFakePrograms
_writeBlock
_isConnecting
_connected
_deviceType
_name
_manufacturer
_model
_leftUUID
_rightUUID
_leftFirmwareVersion
_rightFirmwareVersion
_leftHardwareVersion
_rightHardwareVersion
_type
_excludedProperties
TB,N,V_connected
T@"NSString",&,N,V_name
T@"NSArray",&,N,V_manufacturer
T@"NSArray",&,N,V_model
T@"NSString",&,N,V_leftUUID
T@"NSString",&,N,V_rightUUID
TB,N,V_isConnecting
T@"NSString",&,N,V_leftFirmwareVersion
T@"NSString",&,N,V_rightFirmwareVersion
T@"NSString",&,N,V_leftHardwareVersion
T@"NSString",&,N,V_rightHardwareVersion
TQ,N,V_deviceType
TQ,N,V_type
TQ,N,V_excludedProperties
T@"CBPeripheral",&,N,VleftPeripheral
T@"CBPeripheral",&,N,VrightPeripheral
initWithSampleDate:splValue:andDuration:
sampleDate
setSampleDate:
splValue
setSplValue:
sampleDuration
setSampleDuration:
_splValue
_sampleDuration
_sampleDate
T@"NSDate",&,N,V_sampleDate
Tf,N,V_splValue
Tf,N,V_sampleDuration
characteristicsUUIDs
serviceUUID
requiredProperties
startServerWithDelegate:
resetConnection
hearingAidConnectionDidChange:
shouldRestartOnInterruption
availableHearingAids
setAvailableHearingAids:
handleMessageWithPayload:forIdentifier:
deviceDidUpdateProperty:
availableDevicesDidUpdate:
liveListenDidUpdate:
unregisterUpdateListener:
unregisterUpdateListenerHash:
_unregisterUpdateListenerHash:
registerUpdateBlock:forIdentier:withListener:
registerUpdateBlock:forIdentier:withListener:listenerHash:
registerResponseBlock:forUUID:
registerListener:forAvailableDeviceHandler:
registerPassiveListener:forAvailableDeviceHandler:
_registerListener:forAvailableDeviceHandler:beginSearching:
registerListener:forPropertyUpdateHandler:
connectToControllerWithID:
requestHearingAidConnectionWithReason:
cancelHearingAidConnectionRequest
hearingAidReachable
registerListener:forLiveListenLevelsHandler:
startLiveListen
stopLiveListen
registerListener:forLiveDosimetryUpdates:withDoseHandler:
unregisterDoseHandler:
environmentalDosimetryDidUpdate:
registerListener:forLiveHeadphoneLevelHandler:
unregisterLiveHeadphoneLevelHandler:
registerListener:forRemoteLiveHeadphoneLevelHandler:
unregisterRemoteLiveHeadphoneLevelHandler:
registerListener:forRemoteLiveHeadphoneLevelChangesHandler:
unregisterRemoteLiveHeadphoneLevelChangesHandler:
_registerListener:forLiveHeadphoneLevelHandler:messageIdentifier:
_unregisterLiveHeadphoneLevelHandler:messageIdentifier:
_headphoneLevelDidUpdate:messageIdentifier:
registerListener:forControlMessageHandler:
unregisterControlMessageHandler:
controlMessageDidUpdate:
availableControllers
setAvailableControllers:
hearingAidReachableForAudioTransfer
setHearingAidReachableForAudioTransfer:
hearingDeviceName
setHearingDeviceName:
connectedDeviceName
setConnectedDeviceName:
hearingAidConnectedOrReachable
setHearingAidConnectedOrReachable:
updates
setUpdates:
_responseBlocks
_hearingAidReachableForAudioTransfer
_hearingAidConnectedOrReachable
_availableHearingAids
_availableControllers
_hearingDeviceName
_connectedDeviceName
_updates
T@"NSArray",C,N,V_availableHearingAids
T@"NSArray",&,N,V_availableControllers
TB,N,V_hearingAidConnectedOrReachable
TB,N,V_hearingAidReachableForAudioTransfer
T@"NSString",&,N,V_hearingDeviceName
T@"NSString",&,N,V_connectedDeviceName
T@"NSMutableDictionary",&,N,V_updates
TB,R,N
T@"<AXHAServerDelegate>",W,D,N
initWithListenerAddress:
_listenerAddress
shouldStreamToLeftAid
shouldStreamToRightAid
deviceIDFromLeftID:andRightID:
peripheralDidUpdateName:
peripheral:didModifyServices:
peripheralDidUpdateRSSI:error:
peripheral:didReadRSSI:error:
peripheral:didDiscoverServices:
peripheral:didDiscoverIncludedServicesForService:error:
peripheral:didDiscoverCharacteristicsForService:error:
peripheral:didUpdateValueForCharacteristic:error:
peripheral:didWriteValueForCharacteristic:error:
peripheral:didUpdateNotificationStateForCharacteristic:error:
peripheral:didDiscoverDescriptorsForCharacteristic:error:
peripheral:didUpdateValueForDescriptor:error:
peripheral:didWriteValueForDescriptor:error:
peripheralIsReadyToSendWriteWithoutResponse:
peripheral:didOpenL2CAPChannel:error:
initWithPersistentRepresentation:
disconnectAndUnpair:
containsPeripheralWithUUID:
loadRequiredProperties
programs
selectProgram:forEar:
selectedPrograms
selectedProgramIndexes
isPaired
keepInSync
setKeepInSync:
availableEars
setAvailableEars:
leftPeripheralUUID
rightPeripheralUUID
rightMicrophoneVolume
setRightMicrophoneVolume:
leftMicrophoneVolume
setLeftMicrophoneVolume:
rightStreamVolume
setRightStreamVolume:
leftStreamVolume
setLeftStreamVolume:
rightSensitivity
setRightSensitivity:
leftSensitivity
setLeftSensitivity:
rightMixedVolume
setRightMixedVolume:
leftMixedVolume
setLeftMixedVolume:
rightTreble
setRightTreble:
leftTreble
setLeftTreble:
rightBass
setRightBass:
leftBass
setLeftBass:
rightBatteryLevel
leftBatteryLevel
leftBatteryLowDate
rightBatteryLowDate
leftMicrophoneVolumeSteps
rightMicrophoneVolumeSteps
leftStreamVolumeSteps
rightStreamVolumeSteps
leftSensitivitySteps
rightSensitivitySteps
leftMixedVolumeSteps
rightMixedVolumeSteps
supportsBinauralStreaming
supportsCombinedPresets
supportsCombinedVolumes
requiresBinauralStreaming
requiresCombinedPresets
requiresCombinedVolumes
leftSelectedProgram
rightSelectedProgram
leftSelectedStreamingProgram
rightSelectedStreamingProgram
deviceUUID
TB,N
T@"NSString",R,&,N
T@"NSMutableArray",R,&,N
Ti,N
Td,N
Tc,N
Td,R,N
T@"NSDate",R,&,N
Ts,R,N
T@"NSArray",R,C,N
T@"AXHearingAidMode",R,&,N
_init
initWithLeftDevice:andRightDevice:
connectionDidChange
peripheral:didLoadProperty:
didLoadPersistentProperties
didLoadOptionalBasicProperties
mateWithDevice:
connectedEars
peripheral:propertyForCharacteristic:
peripheral:characteristicForProperty:
peripheral:characteristicForUUID:
setNotify:forPeripheral:
loadProperties:forPeripheral:withRetryPeriod:
loadBasicProperties
loadFailedProperties
updateName
updateNameWithAdvertisingData:
updateBatteryServiceForPeripheral:
writeValueForProperty:
_sendDelayedWrites
delayWriteProperty:forPeripheral:
readValueForCharacteristic:fromPeripheral:
readProperty:fromPeripheral:
signedValueForProperty:andPeripheral:
volumeValueForProperty:andPeripheral:
setTreble:forLeft:
setBass:forLeft:
setMixedVolume:forLeft:
deviceDescription
peripheral:didUpdateCharacteristic:
readsWatchSupportCharacteristic
peripheral:didInvalidateServices:
pairingDidCompleteForPeripheral:
peripheral:didFinishPairingWithResult:
peripheralDidUnpair:
checkPairingStatusWithCompletion:
addPeripheral:
addPeripheral:asLeft:
setRightBatteryLevel:
setLeftBatteryLevel:
setRightPrograms:
setLeftPrograms:
currentRightProgram
setCurrentRightProgram:
currentLeftProgram
setCurrentLeftProgram:
currentLeftStreamingProgram
setCurrentLeftStreamingProgram:
currentRightStreamingProgram
setCurrentRightStreamingProgram:
setIsPaired:
setIsPersistent:
setLeftSelectedProgram:
setRightSelectedProgram:
setLeftSelectedStreamingProgram:
setRightSelectedStreamingProgram:
leftLoadedProperties
setLeftLoadedProperties:
rightLoadedProperties
setRightLoadedProperties:
leftPropertiesLoadCount
setLeftPropertiesLoadCount:
rightPropertiesLoadCount
setRightPropertiesLoadCount:
setLeftPeripheralUUID:
setRightPeripheralUUID:
leftWriteRequestProperties
setLeftWriteRequestProperties:
rightWriteRequestProperties
setRightWriteRequestProperties:
leftProgramVersion
setLeftProgramVersion:
rightProgramVersion
setRightProgramVersion:
leftPresetBitmask
setLeftPresetBitmask:
rightPresetBitmask
setRightPresetBitmask:
setLeftMicrophoneVolumeSteps:
setRightMicrophoneVolumeSteps:
setLeftStreamVolumeSteps:
setRightStreamVolumeSteps:
setLeftSensitivitySteps:
setRightSensitivitySteps:
setLeftMixedVolumeSteps:
setRightMixedVolumeSteps:
setSupportsBinauralStreaming:
setSupportsCombinedPresets:
setSupportsCombinedVolumes:
setRequiresBinauralStreaming:
setRequiresCombinedPresets:
setRequiresCombinedVolumes:
leftWriteResponseProperties
setLeftWriteResponseProperties:
rightWriteResponseProperties
setRightWriteResponseProperties:
setLeftBatteryLowDate:
setRightBatteryLowDate:
availableInputEars
setAvailableInputEars:
earsSupportingWatch
setEarsSupportingWatch:
leftPeripheralPaired
setLeftPeripheralPaired:
rightPeripheralPaired
setRightPeripheralPaired:
_leftVolume
_rightVolume
_leftMicrophoneVolume
_rightMicrophoneVolume
_leftStreamVolume
_rightStreamVolume
_leftTreble
_rightTreble
_leftBass
_rightBass
_keepInSync
_finishedLoading
initialLoadToken
_propertyWriteTimer
_isListeningForStreamingChanges
_leftPowerSouceID
_rightPowerSourceID
_leftPowerSouceDictionary
_rightPowerSourceDictionary
_supportsBinauralStreaming
_supportsCombinedPresets
_supportsCombinedVolumes
_requiresBinauralStreaming
_requiresCombinedPresets
_requiresCombinedVolumes
_leftPeripheralPaired
_rightPeripheralPaired
_leftMicrophoneVolumeSteps
_rightMicrophoneVolumeSteps
_leftStreamVolumeSteps
_rightStreamVolumeSteps
_leftSensitivitySteps
_rightSensitivitySteps
_leftMixedVolumeSteps
_rightMixedVolumeSteps
_availableEars
_leftPresetBitmask
_rightPresetBitmask
_availableInputEars
_earsSupportingWatch
_leftSelectedProgram
_rightSelectedProgram
_leftSelectedStreamingProgram
_rightSelectedStreamingProgram
_leftSensitivity
_rightSensitivity
_leftMixedVolume
_rightMixedVolume
_leftWriteResponseProperties
_rightWriteResponseProperties
_leftBatteryLowDate
_rightBatteryLowDate
T@"NSString",&,N,Vname
T@"NSMutableArray",&,N,Vmanufacturer
T@"NSMutableArray",&,N,Vmodel
T@"NSString",&,N,VleftFirmwareVersion
T@"NSString",&,N,VrightFirmwareVersion
T@"NSString",&,N,VleftHardwareVersion
T@"NSString",&,N,VrightHardwareVersion
T@"NSString",&,N,VleftUUID
T@"NSString",&,N,VrightUUID
T@"NSString",&,N,VleftPeripheralUUID
T@"NSString",&,N,VrightPeripheralUUID
Td,N,VrightBatteryLevel
Td,N,VleftBatteryLevel
T@"NSArray",C,N,VrightPrograms
T@"NSArray",C,N,VleftPrograms
Ts,N,V_leftMicrophoneVolumeSteps
Ts,N,V_rightMicrophoneVolumeSteps
Ts,N,V_leftStreamVolumeSteps
Ts,N,V_rightStreamVolumeSteps
Ts,N,V_leftSensitivitySteps
Ts,N,V_rightSensitivitySteps
Ts,N,V_leftMixedVolumeSteps
Ts,N,V_rightMixedVolumeSteps
TB,N,V_supportsBinauralStreaming
TB,N,V_supportsCombinedPresets
TB,N,V_supportsCombinedVolumes
TB,N,V_requiresBinauralStreaming
TB,N,V_requiresCombinedPresets
TB,N,V_requiresCombinedVolumes
T@"AXHearingAidMode",&,N,VcurrentRightStreamingProgram
T@"AXHearingAidMode",&,N,VcurrentLeftStreamingProgram
T@"AXHearingAidMode",&,N,VcurrentRightProgram
T@"AXHearingAidMode",&,N,VcurrentLeftProgram
TB,N,VisConnecting
TQ,N,VleftLoadedProperties
TQ,N,VrightLoadedProperties
TQ,N,VleftWriteRequestProperties
TQ,N,VrightWriteRequestProperties
TQ,N,V_leftWriteResponseProperties
TQ,N,V_rightWriteResponseProperties
T@"NSMutableDictionary",&,N,VleftPropertiesLoadCount
T@"NSMutableDictionary",&,N,VrightPropertiesLoadCount
TI,N,VleftProgramVersion
TI,N,VrightProgramVersion
T@"NSDate",&,N,V_leftBatteryLowDate
T@"NSDate",&,N,V_rightBatteryLowDate
Ti,N,V_availableInputEars
Ti,N,V_earsSupportingWatch
TB,N,V_leftPeripheralPaired
TB,N,V_rightPeripheralPaired
TB,N,VisPaired
TB,N,V_keepInSync
TB,N,VisPersistent
Td,N,V_rightMicrophoneVolume
Td,N,V_leftMicrophoneVolume
Td,N,V_rightStreamVolume
Td,N,V_leftStreamVolume
T@"AXHearingAidMode",&,N,V_leftSelectedProgram
T@"AXHearingAidMode",&,N,V_rightSelectedProgram
T@"AXHearingAidMode",&,N,V_leftSelectedStreamingProgram
T@"AXHearingAidMode",&,N,V_rightSelectedStreamingProgram
TI,N,V_leftPresetBitmask
TI,N,V_rightPresetBitmask
Ti,N,V_availableEars
Td,N,V_rightSensitivity
Td,N,V_leftSensitivity
Td,N,V_rightMixedVolume
Td,N,V_leftMixedVolume
Tc,N,V_rightTreble
Tc,N,V_leftTreble
Tc,N,V_rightBass
Tc,N,V_leftBass
initWithListenerAddress:andDelegate:
addKey:
_keys
centralManagerDidUpdateState:
centralManager:willRestoreState:
centralManager:didDiscoverPeripheral:advertisementData:RSSI:
centralManager:didConnectPeripheral:
centralManager:didFailToConnectPeripheral:error:
centralManager:didDisconnectPeripheral:error:
centralManager:connectionEventDidOccur:forPeripheral:
centralManager:didUpdateANCSAuthorizationForPeripheral:
sharedQueue
logMessage:
registerLoggingBlock:withListener:
registerUpdateBlock:withListener:
registerDiscoveryBlock:withListener:
availableAddresses
availableAddressesWithCharacteristicSupport:
readValueForCharacteristicUUID:
writeValue:forCharacteristicUUID:andAddress:
bluetoothAvailabilityDidChange:
updateBluetoothAvailability
discoverAccessories
characteristicWithUUID:forPeripheral:
centralManager
setCentralManager:
peripherals
setPeripherals:
uuidToAddress
setUuidToAddress:
bluetoothCentralQueue
setBluetoothCentralQueue:
loggingUpdates
setLoggingUpdates:
updateUpdates
setUpdateUpdates:
discoveryUpdates
setDiscoveryUpdates:
_centralIsOn
_bluetoothAvailable
_syncLock
_centralManager
_peripherals
_uuidToAddress
_bluetoothCentralQueue
_loggingUpdates
_updateUpdates
_discoveryUpdates
T@"CBCentralManager",&,N,V_centralManager
T@"NSArray",&,N,V_peripherals
T@"NSMutableDictionary",&,N,V_uuidToAddress
T@"NSObject<OS_dispatch_queue>",&,N,V_bluetoothCentralQueue
T@"NSMutableDictionary",&,N,V_loggingUpdates
T@"NSMutableDictionary",&,N,V_updateUpdates
T@"NSMutableDictionary",&,N,V_discoveryUpdates
pairedHearingAids
willSwitchUser
currentDeviceController
hearingAidsPaired
setListenForAvailableDeviceUpdates:
setPairedHearingAid:
connectToPairedDevice
transitionToPeer
availableRemoteControllersDidChange
registerForAvailableDevicesUpdates:
registerForDeviceUpdates:
readDeviceProperty:
sendUpdatesForProperties:excludingClient:
writeDeviceProperty:
registerForControlMessageUpdates:
updateNearbyDeviceAvailability
readAvailableDevices:
readAvailableControllers:
disconnectAndForceClient:
pairedDeviceUUID
setPairedDeviceUUID:
transaction
setTransaction:
availableDevicesDescription
setAvailableDevicesDescription:
liveListenMessage
setLiveListenMessage:
_isListening
_liveListenLevelsTimer
_pairedDeviceUUID
_transaction
_availableDevicesDescription
_liveListenMessage
T@"NSObject<OS_os_transaction>",&,N,V_transaction
T@"NSString",&,N,V_pairedDeviceUUID
T@"NSDictionary",&,N,V_availableDevicesDescription
T@"HCXPCMessage",&,N,V_liveListenMessage
icloudHearingSettingsDidChange:
iCloudAccountDidChange:
knownPeripheralUUIDs
independentHearingAidSettings
allowHearingAidControlOnLockScreen
callAudioRoute
mediaAudioRoute
exportsLiveListenToFile
multideviceAudioEnabled
shouldStreamSystemSounds
complicationPreferredDisplayMode
clearPartialPairing
usedHearingFeatures
liveHeadphoneLevelEnabled
_initializeICloudSetup
isPairedWithFakeHearingAids
isiCloudPaired
isPairedWithRealHearingAids
convertPersistentRepresentation:fromVersion:toVersion:
shouldUseiCloud
setLocalHearingAidsFromiCloud:
shouldPushLocalAidsToiCloud
pushLocalHearingAidsToiCloud
preferenceDomainForPreferenceKey:
shouldStoreLocally
keysToSync
preferenceKeyForSelector:
_updateTripleClickOptionsForPairedAids:
updateStreamingPreference
deviceIDForPairingInformation:
setPairedHearingAids:
setClearPartialPairing:
setKnownPeripheralUUIDs:
setIndependentHearingAidSettings:
setAllowHearingAidControlOnLockScreen:
setShouldStreamToLeftAid:
setShouldStreamToRightAid:
setCallAudioRoute:
setMediaAudioRoute:
setExportsLiveListenToFile:
setMultideviceSettingsEnabled:
setMultideviceAudioEnabled:
setShouldStreamSystemSounds:
setComplicationPreferredDisplayMode:
setUsedHearingFeatures:
_accessibilitySettingsChangedOnCompanion
addDeviceIDToCloudDenylist:
removeDeviceIDFromCloudDenylist:
isDeviceIDOnCloudDenylist:
setLiveHeadphoneLevelEnabled:
anyGizmoLiveHeadphoneLevelEnabled
gizmoLiveHeadphoneLevelEnabled
gizmoLiveHeadphoneLevelNPEnabled
setAnyGizmoLiveHeadphoneLevelEnabled:
setGizmoLiveHeadphoneLevelEnabled:
setGizmoLiveHeadphoneLevelNPEnabled:
icloudInitializationQueue
setIcloudInitializationQueue:
_accountStore
_contentProtectionNotifyToken
_finishediCloudSetup
_anyGizmoLiveHeadphoneLevelEnabled
_gizmoLiveHeadphoneLevelEnabled
_gizmoLiveHeadphoneLevelNPEnabled
_icloudInitializationQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_icloudInitializationQueue
T@"NSDictionary",&,N
Tq,N
TQ,N
TB,N,V_anyGizmoLiveHeadphoneLevelEnabled
TB,N,V_gizmoLiveHeadphoneLevelEnabled
TB,N,V_gizmoLiveHeadphoneLevelNPEnabled
pairedWatchDidChange:
nanoDomainAccessor
currentLocale
setValue:forPreferenceKey:
_valueForPreferenceKey:
domainAccessor
setDomainAccessor:
globalDomainAccessor
setGlobalDomainAccessor:
_domainAccessor
_globalDomainAccessor
T@"NPSDomainAccessor",&,N,V_domainAccessor
T@"NPSDomainAccessor",&,N,V_globalDomainAccessor
addKey:forDomain:
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:linkedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantUpdate:context:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
setAvailableDevices:
nearbyDevices
discoverNearbyDevicesWithDomain:
stopDiscoveringDevicesWithDomain:
nearbyDeviceWithIdentifier:
nearbyDevicesDidUpdateWithNewDevices:forDomain:
sendMessage:toDevicesWithDomain:withPriority:
sendMessage:withDomain:toDevices:withPriority:
registerBlock:forKey:withUpdateGroup:forDomain:withListener:
registerQueue:forDomain:
registerLoggingBlock:forDomain:withListener:
registerDiscoveryBlock:forDomain:withListener:
registerMessageBlock:forDomain:withListener:
nearbyUpdatesQueue
setNearbyUpdatesQueue:
service
setService:
domainQueues
setDomainQueues:
registeredDomains
setRegisteredDomains:
messageUpdates
setMessageUpdates:
_availableDevices
_nearbyUpdatesQueue
_service
_domainQueues
_registeredDomains
_messageUpdates
T@"NSObject<OS_dispatch_queue>",&,N,V_nearbyUpdatesQueue
T@"NSArray",C,N,V_availableDevices
T@"IDSService",&,N,V_service
T@"NSMutableDictionary",&,N,V_domainQueues
T@"NSMutableArray",&,N,V_registeredDomains
T@"NSMutableDictionary",&,N,V_messageUpdates
searchForAvailableDevicesWithCompletion:
clearMissingHearingAids
searchForAvailableDevices
searchForConnectedDevices
resetConnectionToPeripheral:
connectToPeripheral:
disconnectFromPeripheral:
disconnectFromHearingAidWithDeviceUUID:
cancelPendingConnections
isBluetoothAvailable
stopSearching
isScanning
shouldRelinquishForPartialConnection:
checkPartiallyPairedWithCompletion:
isPartiallyConnected
hearingAidsForUUID:
hearingAidForPeripheral:
hearingAidsForPeripheral:
loadedDevicesDidChange
addLoadedDevice:
removeLoadedDevice:
clearLoadedDevices
addAvailableDevice:
removeAvailableDevice:
clearAvailableDevices
addConnectedDevice:
removeConnectedDevice:
clearConnectedDevices
replaceDevice:withDevice:
mergeDevice:withDevice:
deviceDidFinishLoading:
forgetDevice:
sendRequestToCentralManager:
centralManager:didRetrievePeripherals:
centralManager:didRetrieveConnectedPeripherals:
pairingAgent:peerDidCompletePairing:
pairingAgent:peerDidFailToCompletePairing:error:
pairingAgent:peerDidUnpair:
checkPeripheralPaired:withCompletion:
unpairPeripheralWithUUID:
persistPairedHearingAids
pairedHearingAidsDidChange
valueForProperty:forDeviceID:
availablePeripherals
setAvailablePeripherals:
loadedDevices
setLoadedDevices:
connectedDevices
setConnectedDevices:
centralRequestBlocks
setCentralRequestBlocks:
availableSearchBlocks
setAvailableSearchBlocks:
connectedSearchBlocks
setConnectedSearchBlocks:
persistentDevices
setPersistentDevices:
shouldActiveScan
setShouldActiveScan:
_bluetoothManager
_centralRequestsLock
_isScanning
_availableSearchBlocks
_connectedSearchBlocks
_advertisingTimeoutTimer
_advertisingTimestamps
_availableDeviceTimer
_shouldActiveScan
_availablePeripherals
_loadedDevices
_connectedDevices
_persistentDevices
T@"NSMutableArray",&,N,V_availablePeripherals
T@"NSMutableArray",&,V_loadedDevices
T@"NSMutableArray",&,N,V_connectedDevices
T@"NSMutableArray",&,N,V_persistentDevices
T@"NSMutableArray",&,N,VcentralRequestBlocks
T@"NSMutableArray",&,N,V_availableSearchBlocks
T@"NSMutableArray",&,N,V_connectedSearchBlocks
TB,N,V_shouldActiveScan
pickableAudioRoutesDidChange:
sharedUtilities
shouldUseMultideviceV3
XDCObjectFromObject:
objectFromXDCObject:
currentPickableAudioRoutesIfExist
currentPickableAudioRoutes
registerNotifications
oldRoutes:equalToNewRoutes:
clearAudioRoutes
checkAudioPlayingWithQueue:origin:andCompletion:
checkAudioPlayingWithQueue:andCompletion:
pauseNowPlaying:withQueue:andCompletion:
addHearingFeatureUsage:
updateHearingFeatureUsage
deviceIsTinker
routingQueue
setRoutingQueue:
takingConnection
setTakingConnection:
_pickableRoutes
_routingLock
_takingConnection
_routingQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_routingQueue
TB,N,V_takingConnection
unsignedLongLongValue
setProgram:withOtherSidePrograms:selected:
programThatMatchesProgram:
enumerateKeysAndObjectsInDependentOrderUsingBlock:
axTag:
axUntag:
wantsUpdatesForIdentifier:
registerMessageBlock:
sendMessage:errorBlock:
_updateBlock
initWithRemoteRepresentation:andDeviceID:
didLoadProperty:
didLoadRequiredPeerProperties
checkDidLoadProperties:
_delayWriteProperties
writeVolumesForProperty:
programAtIndex:forEar:
supportsCombinedVolumesForProperty:
shouldDisplayCombinedVolume
shouldOnlyShowIndividualVolumesForProperty:
combinedPrograms
_updateSelectedProgramsProperties
_writeAllProgramSelectionsToPeripheral
_valueForProperty:
combinedVolumeForProperty:
updateDelegate
setUpdateDelegate:
isBluetoothPaired
setIsBluetoothPaired:
leftConnected
setLeftConnected:
rightConnected
setRightConnected:
setDeviceUUID:
setRequiredProperties:
loadedProperties
setLoadedProperties:
pendingPropertyWrites
setPendingPropertyWrites:
leftAvailableProperties
setLeftAvailableProperties:
rightAvailableProperties
setRightAvailableProperties:
_delayWritePending
_isBluetoothPaired
_isPaired
_leftConnected
_rightConnected
_updateDelegate
_leftPeripheralUUID
_rightPeripheralUUID
_rightBatteryLevel
_leftBatteryLevel
_rightPrograms
_leftPrograms
_deviceUUID
_requiredProperties
_loadedProperties
_pendingPropertyWrites
_leftAvailableProperties
_rightAvailableProperties
TB,N,V_isPaired
TB,N,V_leftConnected
TB,N,V_rightConnected
T@"NSMutableArray",&,N,V_manufacturer
T@"NSMutableArray",&,N,V_model
T@"NSString",&,N,V_leftPeripheralUUID
T@"NSString",&,N,V_rightPeripheralUUID
Td,N,V_rightBatteryLevel
Td,N,V_leftBatteryLevel
T@"NSArray",C,N,V_rightPrograms
T@"NSArray",C,N,V_leftPrograms
T@"NSString",&,N,V_deviceUUID
TQ,N,V_requiredProperties
TQ,N,V_loadedProperties
TQ,N,V_pendingPropertyWrites
TQ,N,V_leftAvailableProperties
TQ,N,V_rightAvailableProperties
TB,N,V_isBluetoothPaired
T@"<AXHARemoteUpdateProtocol>",W,N,V_updateDelegate
Ti,N,VavailableEars
addSelectorKey:
_selectorKeys
noiseEnabled
onboardingCompleted
notificationsEnabled
notificationThreshold
notificationMuteDate
currentLeq
leqTimestamp
leqDuration
migratedThreshold
thresholdVersion
internalLoggingEnabled
_handlePreferenceChanged:
notificationForPreferenceKey:
_preferenceKeyForSelector:
_registerForNotification:
registerUpdateBlock:forRetrieveSelector:withListener:
preferenceIsSetForRetrieveSelector:
_setValue:forPreferenceKey:
_synchronizeIfNecessary:
setNoiseEnabled:
setOnboardingCompleted:
setNotificationsEnabled:
setNotificationThreshold:
setNotificationMuteDate:
setCurrentLeq:
setLeqTimestamp:
setLeqDuration:
setMigratedThreshold:
setThresholdVersion:
setInternalLoggingEnabled:
launchNoiseOnboardingTitle
environmentalMeasurementsTitleDescription
environmentalMeasurementsFooterDescription
noiseThresholdSectionTitle
noiseThresholdTitleDescription
noiseThresholdFooterDescriptionWithLink
noiseThresholdFooterDescription
noiseThresholdFooterLinkTitle
noiseThresholdFooterLinkURL
noiseThresholdMinutesThreshold
noiseThresholdCurrentValue
noiseThresholdOptions
localizedNoiseThresholdValue:
localizedNoiseThresholdDetailValue:
noiseThresholdValueFooterDescription
setNotificationsEnabledOverride:
setNotificationsThreshholdOverride:
notificationsEnabledOverride
notificationsThreshholdOverride
registeredNotifications
setRegisteredNotifications:
synchronizePreferences
setSynchronizePreferences:
updateBlocks
setUpdateBlocks:
_synchronizeDomainsLock
_notificationsEnabledOverride
_notificationsThreshholdOverride
_registeredNotifications
_synchronizePreferences
_updateBlocks
T@"NSMutableSet",&,N,V_registeredNotifications
T@"NSMutableSet",&,N,V_synchronizePreferences
T@"NSMutableDictionary",&,N,V_updateBlocks
T@"NSDate",&,N
T@"NSString",R,N
T@"NSAttributedString",R,N
T@"NSURL",R,N
Tq,R,N
T@"NSArray",R,N
T@"NSNumber",&,N,V_notificationsEnabledOverride
T@"NSNumber",&,N,V_notificationsThreshholdOverride
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
initWithRepresentation:
transportRepresentation
isStreamOrMixingStream
isStream
isMixingStream
category
setCategory:
index
setIndex:
isSelected
setIsSelected:
setEar:
syncAttempts
setSyncAttempts:
_index
_isSelected
_ear
_category
T@"NSString",C,N,V_name
Tq,N,V_category
TC,N,V_index
TB,N,V_isSelected
Ti,N,V_ear
Ti,N,VsyncAttempts
initWithTarget:block:
target
block
_target
_block
T@,R,N,V_target
T@?,R,N,V_block
sharedServer
entitlementsForMessageID:
sendMessage:withError:
sendUpdateMessage:forIdentifier:
sendClientsMessageWithPayload:excluding:
countOfClientsListeningForIdentifier:
userNotificationCenter:willPresentNotification:withCompletionHandler:
userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:
userNotificationCenter:openSettingsForNotification:
updateHearingControlCenterModule
continueSetup
shutdownIfPossible
updateAnalytics
updatePersonalAudioSettingsOnAccessories
startServer
connection:hasEntitlementForMessage:
clients
setClients:
handlers
setHandlers:
handleNewConnection:
addHandler:andBlock:forMessageIdentifier:
handleMessage:forIdentifier:
boostPriority:
registerFakeClient:
personalAudioQueue
setPersonalAudioQueue:
boostMessage
setBoostMessage:
_transparencyHysteresisTimer
_shutdownTimer
_shouldShutdown
_finishedSetup
_clients
_handlers
_personalAudioQueue
_boostMessage
T@"NSArray",&,N,V_clients
T@"NSDictionary",&,N,V_handlers
T@"NSObject<OS_dispatch_queue>",&,N,V_personalAudioQueue
T@"HCXPCMessage",&,N,V_boostMessage
deviceSupportsEnvironmentalDosimetry
showNotificationForAlertType:
alertTypeFromLevel:
processMeasurement:withMetadata:
readEnvironmentalDosimetryLevels
_sendUpdateMessageForCurrentValues
_clearCachedValues
stopReceivingAudioDosageSamples
applyNotificationLogicForSPL:withDuration:
checkToResetNotificationsForSPL:withDuration:andBuffer:forTime:
checkToSurfaceNotificationForSPL:withDuration:andBuffer:forTime:
applyAnalyticsNotificationLogicForSPL:withDuration:
checkToResetAnalyticsNotificationsForSPL:withDuration:andBuffer:forTime:andThreshold:
checkToSurfaceAnalyticsNotificationForSPL:withDuration:andBuffer:forTime:andThreshold:
maintainCircularBuffer:forTime:
calculateLeqForBuffer:
lowPowerModeChanged:
registerForEnvironmentalDosimetryUpdates:
edDummyDataTimer
setEdDummyDataTimer:
leqBuffer
setLeqBuffer:
attenuationBuffer
setAttenuationBuffer:
attenuationLevel
setAttenuationLevel:
timeNotified
setTimeNotified:
isNotified
setNotified:
isMuted
setMuted:
leqBuffer80Threshold
setLeqBuffer80Threshold:
leqBuffer85Threshold
setLeqBuffer85Threshold:
leqBuffer90Threshold
setLeqBuffer90Threshold:
isNotified80
setNotified80:
isNotified85
setNotified85:
isNotified90
setNotified90:
timeNotified80
setTimeNotified80:
timeNotified85
setTimeNotified85:
timeNotified90
setTimeNotified90:
userNotificationCenter
_measurementSuspensionNotifyToken
_notified
_muted
_notified80
_notified85
_notified90
_attenuationLevel
_edDummyDataTimer
_leqBuffer
_attenuationBuffer
_timeNotified
_leqBuffer80Threshold
_leqBuffer85Threshold
_leqBuffer90Threshold
_timeNotified80
_timeNotified85
_timeNotified90
_userNotificationCenter
T@"AXDispatchTimer",&,N,V_edDummyDataTimer
T@"NSMutableArray",&,N,V_leqBuffer
T@"NSMutableArray",&,N,V_attenuationBuffer
Tf,N,V_attenuationLevel
T@"NSDate",&,N,V_timeNotified
notified
TB,N,GisNotified,V_notified
muted
TB,N,GisMuted,V_muted
T@"NSMutableArray",&,N,V_leqBuffer80Threshold
T@"NSMutableArray",&,N,V_leqBuffer85Threshold
T@"NSMutableArray",&,N,V_leqBuffer90Threshold
notified80
TB,N,GisNotified80,V_notified80
notified85
TB,N,GisNotified85,V_notified85
notified90
TB,N,GisNotified90,V_notified90
T@"NSDate",&,N,V_timeNotified80
T@"NSDate",&,N,V_timeNotified85
T@"NSDate",&,N,V_timeNotified90
T@"UNUserNotificationCenter",R,N,V_userNotificationCenter
Ti,N,V_type
nearbyDeviceWithIDSDevice:
nearbyDeviceWithIDSIdentifier:
initWithIDSDevice:
initWithIDSIdentifier:
identifier
representsAWatch
setState:forDomain:
stateForDomain:
idsDevice
setIdsDevice:
updateDomains
setUpdateDomains:
identifierWithoutDevice
setIdentifierWithoutDevice:
_idsDevice
_updateDomains
_identifierWithoutDevice
T@"NSMutableArray",&,N,V_updateDomains
T@"NSMutableDictionary",&,N,V_state
T@"NSString",&,N,V_identifierWithoutDevice
T@"IDSDevice",&,N,V_idsDevice
@16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@16
v24@0:8@"ADAMAudioDataAnalysisSample"16
v16@0:8
v24@0:8@"NSDictionary"16
v24@0:8@"NSArray"16
@24@0:8@16
v20@0:8B16
v32@0:8@16Q24
@32@0:8@16Q24
Q24@0:8@16
f16@0:8
v20@0:8f16
v24@0:8Q16
@"ADAMAudioDataReceiver"
@"AXDispatchTimer"
@"NSObject<OS_dispatch_queue>"
@"NSMutableArray"
v32@0:8Q16@24
v40@0:8@16Q24@32
v32@0:8Q16@"NSString"24
v40@0:8@16Q24@"NSString"32
v24@0:8@?16
@"NSMutableDictionary"
v28@0:8B16@?20
v24@0:8q16
B24@0:8q16
v32@0:8@16@24
v48@0:8@16Q24@32@40
@32@0:8@16@24
q16@0:8
@"<HUNearbyHearingAidControllerDelegate>"
@"AXRemoteHearingAidDevice"
@24@0:8Q16
B24@0:8Q16
B28@0:8Q16i24
v32@0:8C16i20Q24
v32@0:8c16i20Q24
@"NSString"
@"NSArray"
@"CBPeripheral"
@32@0:8@16f24f28
@"NSDate"
v32@0:8@?16@24
v32@0:8@16@?24
v36@0:8@16@?24B32
v36@0:8@16B24@?28
v40@0:8@16@?24Q32
@"NSNumber"
v40@0:8@16@24@32
v24@0:8@"CBPeripheral"16
v32@0:8@"CBPeripheral"16@"NSArray"24
v32@0:8@"CBPeripheral"16@"NSError"24
v40@0:8@"CBPeripheral"16@"NSNumber"24@"NSError"32
v40@0:8@"CBPeripheral"16@"CBService"24@"NSError"32
v40@0:8@"CBPeripheral"16@"CBCharacteristic"24@"NSError"32
v40@0:8@"CBPeripheral"16@"CBDescriptor"24@"NSError"32
v40@0:8@"CBPeripheral"16@"CBL2CAPChannel"24@"NSError"32
v28@0:8@16i24
i16@0:8
v20@0:8i16
d16@0:8
v24@0:8d16
c16@0:8
v20@0:8c16
s16@0:8
@24@0:8@"NSDictionary"16
B24@0:8@"NSString"16
@"NSArray"16@0:8
v28@0:8@"AXHearingAidMode"16i24
@"NSIndexSet"16@0:8
@"NSMutableArray"16@0:8
@"NSDate"16@0:8
@"AXHearingAidMode"16@0:8
B32@0:8@16Q24
Q32@0:8@16@24
v28@0:8B16@20
v40@0:8Q16@24d32
c32@0:8Q16@24
C32@0:8Q16@24
v24@0:8c16B20
v28@0:8d16B24
B28@0:8@16B24
I16@0:8
v20@0:8I16
v20@0:8s16
^{OpaqueIOPSPowerSourceID=}
@"AXHearingAidMode"
@"HUAccessoryManager"
v48@0:8@16@24@32@40
v40@0:8@16q24@32
v24@0:8@"CBCentralManager"16
v32@0:8@"CBCentralManager"16@"NSDictionary"24
v48@0:8@"CBCentralManager"16@"CBPeripheral"24@"NSDictionary"32@"NSNumber"40
v32@0:8@"CBCentralManager"16@"CBPeripheral"24
v40@0:8@"CBCentralManager"16@"CBPeripheral"24@"NSError"32
v40@0:8@"CBCentralManager"16q24@"CBPeripheral"32
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"CBCentralManager"
@"NSObject<OS_os_transaction>"
@"NSDictionary"
@"HCXPCMessage"
@"ACAccountStore"
@"NPSDomainAccessor"
@"HUNearbyController"
v64@0:8@16@24@32@40@48@56
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v40@0:8@16@24@?32
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32@"IDSMessageContext"40
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v40@0:8@16@24Q32
v48@0:8@16@24@32Q40
v40@0:8@?16@24@32
@"IDSService"
v32@0:8@"<AXHADeviceProtocol>"16Q24
v24@0:8@?<v@?@"NSDictionary">16
@32@0:8Q16@24
@"NSLock"
B32@0:8@16@24
v40@0:8@16^v24@?32
v36@0:8B16@20@?28
v36@0:8@16@24B32
B32@0:8@16@?24
@24@0:8C16i20
d24@0:8Q16
@"<AXHARemoteUpdateProtocol>"
v24@0:8:16
v40@0:8@?16:24@32
@24@0:8q16
@"NSMutableSet"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
C16@0:8
v20@0:8C16
@32@0:8@16@?24
@?16@0:8
B32@0:8@16^@24
Q24@0:8Q16
B32@0:8@"HCXPCMessage"16^@24
v32@0:8@"HCXPCMessage"16Q24
v32@0:8@"NSDictionary"16@"HCXPCClient"24
v40@0:8@"UNUserNotificationCenter"16@"UNNotification"24@?<v@?Q>32
v40@0:8@"UNUserNotificationCenter"16@"UNNotificationResponse"24@?<v@?>32
v32@0:8@"UNUserNotificationCenter"16@"UNNotification"24
@"NSObject<OS_xpc_object>"
Q20@0:8f16
v24@0:8f16f20
v36@0:8f16f20@24f32
v44@0:8f16f20@24f32q36
v28@0:8@16f24
f24@0:8@16
@"UNUserNotificationCenter"
@20@0:8i16
@"IDSDevice"
