@(#)PROGRAM:CryptoKitCBridging  PROJECT:CryptoKit-1
Failed on import with share import
%@ %@
version
share_x
share_y
threshold
ciphertext
associated_data
-[SSPBSecretShare writeTo:]
SSPBSecretShare.m
nil != self->_shareY
nil != self->_iv
nil != self->_ciphertext
nil != self->_tag
SEPUtils
CKSSShare
CKCBCorecryptoECScalar
CKCBCorecryptoECPoint
SSPBSecretShare
NSCopying
T@"NSData",&,N,V_associatedData
T@"NSData",&,N,V_ciphertext
T@"NSData",&,N,V_shareY
_shareY
TB,N
dataWithLength:
TI,N,V_shareX
initWithLength:
TI,N,V_version
inverseModOrder
Tr^Q,R,N,V_corecryptoScalar
_ciphertext
_group
.cxx_destruct
_associatedData
T@"NSData",&,N,V_iv
_shareX
T@"NSData",&,N,V_tag
copyTo:
TB,R,N
dealloc
TI,N,V_threshold
initWithScalarPointer:forGroup:
T^{ccec_affine_point=[1Q]},R,N,V_point
setTag:
Tr^{ccec_cp=QQ^{cczp_funcs}[0Q]},R,N,V_group
version
_corecryptoScalar
_has
_newZeroingDataWithBytes:length:
_point
_share
_share_size
_tag
_threshold
_version
add:corecryptoError:
allocWithZone:
associatedData
bytes
ciphertext
copyWithZone:
corecryptoScalar
dataFromACL:
description
dictionary
dictionaryRepresentation
group
groupOrderByteCountForCP:
hasAssociatedData
hasThreshold
hash
init
initFromPublicKeyBytes:inGroup:compressed:corecryptoError:
initPoint:onGroup:
initWithData:inGroup:reduction:corecryptoError:
initWithGeneratorForCP:
initWithParams:share:
initWithParams:x:y:
initWithPublicKey:
initWithRandomScalarInGroup:
initWithx963Representation:group:
isEqual:
isMemberOfClass:
length
mapToCurve_SSWU_RandomOracle
mergeFrom:
multiply:corecryptoError:
mutableBytes
numberWithUnsignedInt:
point
pointAllocationSizeForGroup:
readFrom:
scalarAllocationSizeForGroup:
serializedBigEndianScalar
serializedPublicKey:
setAssociatedData:
setCiphertext:
setHasThreshold:
setIv:
setObject:forKey:
setShareX:
setShareY:
setThreshold:
setVersion:
share
shareX
shareY
stringWithFormat:
sub:corecryptoError:
threshold
writeTo:
x963Representation
@24@0:8^{__SecAccessControl=}16
@36@0:8^{ccss_shamir_parameters=I{cczp=QQ^{cczp_funcs}[0Q]}}16I24@28
@32@0:8^{ccss_shamir_parameters=I{cczp=QQ^{cczp_funcs}[0Q]}}16^{ccss_shamir_share=^{cczp}I[0Q]}24
I16@0:8
@16@0:8
^{ccss_shamir_share=^{cczp}I[0Q]}16@0:8
v16@0:8
^{ccss_shamir_share=^{cczp}I[0Q]}
Q24@0:8^{ccec_cp=QQ^{cczp_funcs}[0Q]}16
@32@0:8@16^{ccec_cp=QQ^{cczp_funcs}[0Q]}24
@32@0:8^Q16^{ccec_cp=QQ^{cczp_funcs}[0Q]}24
@24@0:8^{ccec_cp=QQ^{cczp_funcs}[0Q]}16
@44@0:8@16^{ccec_cp=QQ^{cczp_funcs}[0Q]}24B32^i36
@32@0:8@16^i24
B24@0:8@16
r^{ccec_cp=QQ^{cczp_funcs}[0Q]}16@0:8
r^Q16@0:8
r^{ccec_cp=QQ^{cczp_funcs}[0Q]}
@32@0:8^{ccec_affine_point=[1Q]}16^{ccec_cp=QQ^{cczp_funcs}[0Q]}24
@24@0:8^{ccec_pub_ctx=^{ccec_cp}[0{ccec_projective_point=[1Q]}]}16
@20@0:8B16
^{ccec_affine_point=[1Q]}16@0:8
^{ccec_affine_point=[1Q]}
@24@0:8^{_NSZone=}16
v20@0:8I16
v20@0:8B16
B16@0:8
v24@0:8@16
Q16@0:8
@"NSData"
{?="threshold"b1}
@(#)PROGRAM:CryptoKitCBridging  PROJECT:CryptoKit-1
#>Ddjpu
Failed on import with share import
%@ %@
version
share_x
share_y
threshold
ciphertext
associated_data
-[SSPBSecretShare writeTo:]
SSPBSecretShare.m
nil != self->_shareY
nil != self->_iv
nil != self->_ciphertext
nil != self->_tag
SEPUtils
CKSSShare
CKCBCorecryptoECScalar
CKCBCorecryptoECPoint
SSPBSecretShare
NSCopying
T@"NSData",&,N,V_associatedData
T@"NSData",&,N,V_ciphertext
T@"NSData",&,N,V_shareY
_shareY
TB,N
dataWithLength:
TI,N,V_shareX
initWithLength:
TI,N,V_version
inverseModOrder
Tr^Q,R,N,V_corecryptoScalar
_ciphertext
_group
.cxx_destruct
_associatedData
T@"NSData",&,N,V_iv
_shareX
T@"NSData",&,N,V_tag
copyTo:
TB,R,N
dealloc
TI,N,V_threshold
initWithScalarPointer:forGroup:
T^{ccec_affine_point=[1Q]},R,N,V_point
setTag:
Tr^{ccec_cp=QQ^{cczp_funcs}[0Q]},R,N,V_group
version
_corecryptoScalar
_has
_newZeroingDataWithBytes:length:
_point
_share
_share_size
_tag
_threshold
_version
add:corecryptoError:
allocWithZone:
associatedData
bytes
ciphertext
copyWithZone:
corecryptoScalar
dataFromACL:
description
dictionary
dictionaryRepresentation
group
groupOrderByteCountForCP:
hasAssociatedData
hasThreshold
hash
init
initFromPublicKeyBytes:inGroup:compressed:corecryptoError:
initPoint:onGroup:
initWithData:inGroup:reduction:corecryptoError:
initWithGeneratorForCP:
initWithParams:share:
initWithParams:x:y:
initWithPublicKey:
initWithRandomScalarInGroup:
initWithx963Representation:group:
isEqual:
isMemberOfClass:
length
mapToCurve_SSWU_RandomOracle
mergeFrom:
multiply:corecryptoError:
mutableBytes
numberWithUnsignedInt:
point
pointAllocationSizeForGroup:
readFrom:
scalarAllocationSizeForGroup:
serializedBigEndianScalar
serializedPublicKey:
setAssociatedData:
setCiphertext:
setHasThreshold:
setIv:
setObject:forKey:
setShareX:
setShareY:
setThreshold:
setVersion:
share
shareX
shareY
stringWithFormat:
sub:corecryptoError:
threshold
writeTo:
x963Representation
@24@0:8^{__SecAccessControl=}16
@36@0:8^{ccss_shamir_parameters=I{cczp=QQ^{cczp_funcs}[0Q]}}16I24@28
@32@0:8^{ccss_shamir_parameters=I{cczp=QQ^{cczp_funcs}[0Q]}}16^{ccss_shamir_share=^{cczp}I[0Q]}24
I16@0:8
@16@0:8
^{ccss_shamir_share=^{cczp}I[0Q]}16@0:8
v16@0:8
^{ccss_shamir_share=^{cczp}I[0Q]}
Q24@0:8^{ccec_cp=QQ^{cczp_funcs}[0Q]}16
@32@0:8@16^{ccec_cp=QQ^{cczp_funcs}[0Q]}24
@32@0:8^Q16^{ccec_cp=QQ^{cczp_funcs}[0Q]}24
@24@0:8^{ccec_cp=QQ^{cczp_funcs}[0Q]}16
@44@0:8@16^{ccec_cp=QQ^{cczp_funcs}[0Q]}24B32^i36
@32@0:8@16^i24
B24@0:8@16
r^{ccec_cp=QQ^{cczp_funcs}[0Q]}16@0:8
r^Q16@0:8
r^{ccec_cp=QQ^{cczp_funcs}[0Q]}
@32@0:8^{ccec_affine_point=[1Q]}16^{ccec_cp=QQ^{cczp_funcs}[0Q]}24
@24@0:8^{ccec_pub_ctx=^{ccec_cp}[0{ccec_projective_point=[1Q]}]}16
@20@0:8B16
^{ccec_affine_point=[1Q]}16@0:8
^{ccec_affine_point=[1Q]}
@24@0:8^{_NSZone=}16
v20@0:8I16
v20@0:8B16
B16@0:8
v24@0:8@16
Q16@0:8
@"NSData"
{?="threshold"b1}
