@(#)PROGRAM:CryptoKitCBridging  PROJECT:CryptoKit-1
Failed on import with share import
%@ %@
version
share_x
share_y
threshold
ciphertext
associated_data
-[SSPBSecretShare writeTo:]
SSPBSecretShare.m
nil != self->_shareY
nil != self->_iv
nil != self->_ciphertext
nil != self->_tag
SEPUtils
CKSSShare
CKCBCorecryptoECScalar
CKCBCorecryptoECPoint
SSPBSecretShare
NSCopying
dataFromACL:
length
bytes
init
initWithLength:
mutableBytes
dealloc
initWithParams:x:y:
initWithParams:share:
share
_share
_share_size
scalarAllocationSizeForGroup:
initWithScalarPointer:forGroup:
serializedBigEndianScalar
group
initWithGeneratorForCP:
multiply:corecryptoError:
serializedPublicKey:
dataWithLength:
_newZeroingDataWithBytes:length:
corecryptoScalar
initWithPublicKey:
initWithx963Representation:group:
x963Representation
initWithRandomScalarInGroup:
initWithData:inGroup:reduction:corecryptoError:
mapToCurve_SSWU_RandomOracle
add:corecryptoError:
sub:corecryptoError:
isEqual:
inverseModOrder
_group
_corecryptoScalar
Tr^{ccec_cp=QQ^{cczp_funcs}[0Q]},R,N,V_group
Tr^Q,R,N,V_corecryptoScalar
pointAllocationSizeForGroup:
initPoint:onGroup:
point
groupOrderByteCountForCP:
initFromPublicKeyBytes:inGroup:compressed:corecryptoError:
_point
T^{ccec_affine_point=[1Q]},R,N,V_point
description
dictionaryRepresentation
stringWithFormat:
dictionary
numberWithUnsignedInt:
setObject:forKey:
setShareY:
setIv:
setCiphertext:
setTag:
setAssociatedData:
allocWithZone:
copyWithZone:
isMemberOfClass:
hash
setThreshold:
setHasThreshold:
hasThreshold
hasAssociatedData
readFrom:
writeTo:
copyTo:
mergeFrom:
version
setVersion:
shareX
setShareX:
shareY
threshold
ciphertext
associatedData
.cxx_destruct
_associatedData
_ciphertext
_shareX
_shareY
_tag
_threshold
_version
_has
TI,N,V_version
TI,N,V_shareX
T@"NSData",&,N,V_shareY
TB,N
TI,N,V_threshold
T@"NSData",&,N,V_iv
T@"NSData",&,N,V_ciphertext
T@"NSData",&,N,V_tag
TB,R,N
T@"NSData",&,N,V_associatedData
@24@0:8^{__SecAccessControl=}16
@36@0:8^{ccss_shamir_parameters=I{cczp=QQ^{cczp_funcs}[0Q]}}16I24@28
@32@0:8^{ccss_shamir_parameters=I{cczp=QQ^{cczp_funcs}[0Q]}}16^{ccss_shamir_share=^{cczp}I[0Q]}24
I16@0:8
@16@0:8
^{ccss_shamir_share=^{cczp}I[0Q]}16@0:8
v16@0:8
^{ccss_shamir_share=^{cczp}I[0Q]}
Q24@0:8^{ccec_cp=QQ^{cczp_funcs}[0Q]}16
@32@0:8@16^{ccec_cp=QQ^{cczp_funcs}[0Q]}24
@32@0:8^Q16^{ccec_cp=QQ^{cczp_funcs}[0Q]}24
@24@0:8^{ccec_cp=QQ^{cczp_funcs}[0Q]}16
@44@0:8@16^{ccec_cp=QQ^{cczp_funcs}[0Q]}24B32^i36
@32@0:8@16^i24
B24@0:8@16
r^{ccec_cp=QQ^{cczp_funcs}[0Q]}16@0:8
r^Q16@0:8
r^{ccec_cp=QQ^{cczp_funcs}[0Q]}
@32@0:8^{ccec_affine_point=[1Q]}16^{ccec_cp=QQ^{cczp_funcs}[0Q]}24
@24@0:8^{ccec_pub_ctx=^{ccec_cp}[0{ccec_projective_point=[1Q]}]}16
@20@0:8B16
^{ccec_affine_point=[1Q]}16@0:8
^{ccec_affine_point=[1Q]}
@24@0:8^{_NSZone=}16
v20@0:8I16
v20@0:8B16
B16@0:8
v24@0:8@16
Q16@0:8
@"NSData"
{?="threshold"b1}
@(#)PROGRAM:CryptoKitCBridging  PROJECT:CryptoKit-1
#>Ddjpu
Failed on import with share import
%@ %@
version
share_x
share_y
threshold
ciphertext
associated_data
-[SSPBSecretShare writeTo:]
SSPBSecretShare.m
nil != self->_shareY
nil != self->_iv
nil != self->_ciphertext
nil != self->_tag
SEPUtils
CKSSShare
CKCBCorecryptoECScalar
CKCBCorecryptoECPoint
SSPBSecretShare
NSCopying
allocWithZone:
initWithLength:
numberWithUnsignedInt:
setObject:forKey:
dataWithLength:
stringWithFormat:
length
_newZeroingDataWithBytes:length:
dictionary
bytes
isMemberOfClass:
mutableBytes
dataFromACL:
init
dealloc
initWithParams:x:y:
initWithParams:share:
share
_share
_share_size
scalarAllocationSizeForGroup:
initWithx963Representation:group:
initWithScalarPointer:forGroup:
x963Representation
initWithRandomScalarInGroup:
initWithData:inGroup:reduction:corecryptoError:
serializedBigEndianScalar
mapToCurve_SSWU_RandomOracle
add:corecryptoError:
sub:corecryptoError:
multiply:corecryptoError:
isEqual:
inverseModOrder
group
corecryptoScalar
_group
_corecryptoScalar
Tr^{ccec_cp=QQ^{cczp_funcs}[0Q]},R,N,V_group
Tr^Q,R,N,V_corecryptoScalar
groupOrderByteCountForCP:
pointAllocationSizeForGroup:
initPoint:onGroup:
initFromPublicKeyBytes:inGroup:compressed:corecryptoError:
initWithGeneratorForCP:
initWithPublicKey:
serializedPublicKey:
point
_point
T^{ccec_affine_point=[1Q]},R,N,V_point
description
copyWithZone:
setThreshold:
setHasThreshold:
hasThreshold
hasAssociatedData
dictionaryRepresentation
readFrom:
writeTo:
copyTo:
hash
mergeFrom:
version
setVersion:
shareX
setShareX:
shareY
setShareY:
threshold
setIv:
ciphertext
setCiphertext:
setTag:
associatedData
setAssociatedData:
.cxx_destruct
_associatedData
_ciphertext
_shareX
_shareY
_tag
_threshold
_version
_has
TI,N,V_version
TI,N,V_shareX
T@"NSData",&,N,V_shareY
TB,N
TI,N,V_threshold
T@"NSData",&,N,V_iv
T@"NSData",&,N,V_ciphertext
T@"NSData",&,N,V_tag
TB,R,N
T@"NSData",&,N,V_associatedData
@24@0:8^{__SecAccessControl=}16
@36@0:8^{ccss_shamir_parameters=I{cczp=QQ^{cczp_funcs}[0Q]}}16I24@28
@32@0:8^{ccss_shamir_parameters=I{cczp=QQ^{cczp_funcs}[0Q]}}16^{ccss_shamir_share=^{cczp}I[0Q]}24
I16@0:8
@16@0:8
^{ccss_shamir_share=^{cczp}I[0Q]}16@0:8
v16@0:8
^{ccss_shamir_share=^{cczp}I[0Q]}
Q24@0:8^{ccec_cp=QQ^{cczp_funcs}[0Q]}16
@32@0:8@16^{ccec_cp=QQ^{cczp_funcs}[0Q]}24
@32@0:8^Q16^{ccec_cp=QQ^{cczp_funcs}[0Q]}24
@24@0:8^{ccec_cp=QQ^{cczp_funcs}[0Q]}16
@44@0:8@16^{ccec_cp=QQ^{cczp_funcs}[0Q]}24B32^i36
@32@0:8@16^i24
B24@0:8@16
r^{ccec_cp=QQ^{cczp_funcs}[0Q]}16@0:8
r^Q16@0:8
r^{ccec_cp=QQ^{cczp_funcs}[0Q]}
@32@0:8^{ccec_affine_point=[1Q]}16^{ccec_cp=QQ^{cczp_funcs}[0Q]}24
@24@0:8^{ccec_pub_ctx=^{ccec_cp}[0{ccec_projective_point=[1Q]}]}16
@20@0:8B16
^{ccec_affine_point=[1Q]}16@0:8
^{ccec_affine_point=[1Q]}
@24@0:8^{_NSZone=}16
v20@0:8I16
v20@0:8B16
B16@0:8
v24@0:8@16
Q16@0:8
@"NSData"
{?="threshold"b1}
