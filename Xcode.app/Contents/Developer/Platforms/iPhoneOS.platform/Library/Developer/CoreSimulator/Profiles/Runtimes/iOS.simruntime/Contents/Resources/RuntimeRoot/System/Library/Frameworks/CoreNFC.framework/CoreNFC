@(#)PROGRAM:CoreNFC  PROJECT:CoreNFC-1
records
%c[%{public}s %{public}s]:%i Total size of all NDEF records exceeds the size limit
%c[%{public}s %{public}s]:%i Node size must be 2 bytes long
v8@?0
%c[%{public}s %{public}s]:%i System code must not contain the 0xFF wildcard value
v24@?0@"NSData"8@"NSError"16
%c[%{public}s %{public}s]:%i Number of nodes must be between 1 to 32 inclusively
%c[%{public}s %{public}s]:%i Number of service codes must be between 1 to 16 inclusively
%c[%{public}s %{public}s]:%i Block list element must be 2 or 3 bytes long
%c[%{public}s %{public}s]:%i Number of elements in the block list and the block data list does not match
%c[%{public}s %{public}s]:%i Block list size exceeds the maximum limit
%c[%{public}s %{public}s]:%i Block data length must be 16 bytes long
%c[%{public}s %{public}s]:%i Command packet length must be between 1 to 254 inclusively
NFCISO15693ReaderSessionTag.m
Invalid UID length
%c[%{public}s %{public}s]:%i 
%c[%{public}s %{public}s]:%i %@ with response length = %lu
%c[%{public}s %{public}s]:%i %@ in commandConfiguration asNSDataWithError
%c[%{public}s %{public}s]:%i %@
%c[%{public}s %{public}s]:%i %@ in readConfiguration asNSDataArrayWithUID
typeNameFormat
type
identifier
payload
chunkSize
%c[%{public}s %{public}s]:%i NDEF payload exceeds the size limit
TNF=%d, Payload Type=%@, Payload ID=%@, Payload=%@, ChunkSize=%zu
%c[%{public}s %{public}s]:%i Record serialization error
%c[%{public}s %{public}s]:%i Invalid UTF8 URI string
%c[%{public}s %{public}s]:%i Missing URI field
NFCNDEFPayload.m
Please use -wellKnownTypeTextPayloadWithString:locale: replacement
%c[%{public}s %{public}s]:%i Invalid payload length
%c[%{public}s %{public}s]:%i Empty string
%c[%{public}s %{public}s]:%i Invalid UTF8 character
%%%02X
com.apple.corenfc.session.xpc
nfcd
%c[%{public}s %{public}s]:%i Failed to connect to NFCD
XPC Error
sessionKey
configuration
NFCTag.m
Missing session key
%c[%{public}s %{public}s]:%i Session has been invalidated
Nil delegateQueue
Nil hardwareManager
%c[%{public}s %{public}s]:%i Tag is not connected
%c[%{public}s %{public}s]:%i Error=%@
Nil session
Nil session queue
%c[%{public}s %{public}s]:%i Session queue is not available; dispatching on main queue
v16@?0@"NSError"8
Unavailable initializer
Not available
%c[%{public}s %{public}s]:%i No suitable NDEF tag found
%c[%{public}s %{public}s]:%i Delegate conforms to [NFCNDEFReaderSessionDelegate readerSession:didDetectTags]; polling is auto restarted.
%c[%{public}s %{public}s]:%i Invalid tag object
%c[%{public}s %{public}s]:%i Only tag from the current session is allowed
%c[%{public}s %{public}s]:%i Delegate does not implement -readerSessionDidBecomeActive: method
%c[%{public}s %{public}s]:%i Unknown delegate type: %ld
NFCNDEFTag.m
%c[%{public}s %{public}s]:%i Invalid expectedResponseLength value; should be from 1 to 65536 or -1
%c[%{public}s %{public}s]:%i Invalid APDU format
%c[%{public}s %{public}s]:%i Unexpected Lc & Le field combination
%c[%{public}s %{public}s]:%i Missing data specified by Lc
%c[%{public}s %{public}s]:%i Unexpected extended Lc & short Le combination
%c[%{public}s %{public}s]:%i Unexpected short Lc & extended Le combination
%c[%{public}s %{public}s]:%i Unexpected lc & le field combination
%c[%{public}s %{public}s]:%i Missing data when Lc is > 0
0x%02X, 
0x%02X
Feature not supported
Missing required entitlement
Invalid parameter
Invalid parameter length
Parameter value is out of bound
Tag connection lost
Maximum retries exceeded
Tag response error
Session invalidated
Tag is not connected
Packet length has exceeded the limit
Session invalidated by user
Session timeout
Session invalidated unexpectedly
System resource unavailable
First NDEF tag read
Invalid configuration parameters
NDEF tag is read only
NDEF tag write failed
Insufficient space on NDEF tag
NDEF tag does not contain any NDEF message
NFC radio is disabled
Tag response error / no response
Stack Error
Tag Not NDEF formatted
Reader mode prohibit timer
%c[%{public}s %{public}s]:%i Data block length must be greater than 0
%c[%{public}s %{public}s]:%i Block range must be between 0 to 255 inclusively
%c[%{public}s %{public}s]:%i Unexpected block size of 0
%c[%{public}s %{public}s]:%i Specified range length does not match the number of elements in the data block list
%c[%{public}s %{public}s]:%i Elements in the data block list are inconsistent in size
v64@?0@"NSData"8q16q24q32q40q48@"NSError"56
%c[%{public}s %{public}s]:%i Custom command code must be between 0xA0 to 0xDF inclusively
%c[%{public}s %{public}s]:%i Forcing minimum 20ms delay
%c[%{public}s %{public}s]:%i Invalid NFCPollingOption parameter: 0x%lx
%c[%{public}s %{public}s]:%i PACE-polling enabled
%c[%{public}s %{public}s]:%i Delegate does not implement -tagReaderSessionDidBecomeActive: method
%c[%{public}s %{public}s]:%i Delegate does not implement -tagReaderSession:didDetectTags: method
%c[%{public}s %{public}s]:%i No suitable tag found
{Mode=%ld, passId=%@, url=%@}
B24@?0@8@"NSDictionary"16
v24@?0@"NSError"8@"NSArray"16
MerchantId
SignupUrl
TerminalCap
TerminalProtocol
PassData
Token
StatusCode
%c[%{public}s %{public}s]:%i Restart polling
com.apple.corenfc.useractivity.ndefmessagepayload
%c[%{public}s %{public}s]:%i Unarchive error: %@
%c[%{public}s %{public}s]:%i Unexpected class type for the message
%c[%{public}s %{public}s]:%i Archive error: %@
NFCError
ISO15693TagResponseErrorCode
TagResponseInvalidLength
http://www.
https://www.
http://
https://
tel:
mailto:
ftp://anonymous:anonymous@
ftp://ftp.
ftps://
sftp://
smb://
nfs://
ftp://
dav://
news:
telnet://
imap:
rtsp://
urn:
pop:
sip:
sips:
tftp:
btspp://
btl2cap://
btgoep://
tcpobex://
irdaobex://
file://
urn:epc:id:
urn:epc:tag:
urn:epc:pat:
urn:epc:raw:
urn:epc:
urn:nfc:
%c[%{public}s %{public}s]:%i XPC error: %@
no error
%c[%{public}s %{public}s]:%i Not implemented
%c[%{public}s %{public}s]:%i sessionState=%ld, proxy=%@, error=%@
%c[%{public}s %{public}s]:%i sessionState=%ld, proxy=%@
%c[%{public}s %{public}s]:%i Current connectedTag: %@
None
%c[%{public}s %{public}s]:%i ConnectedTag[%ld]: %@
%c[%{public}s %{public}s]:%i Invalid tag index: %ld
%c[%{public}s %{public}s]:%i External reader detected
NFCReaderSession.m
Session queue is nil
%c[%{public}s %{public}s]:%i Session queue is nil
Delegate queue is nil
%c[%{public}s %{public}s]:%i Defaulting to CoreNFCSessionTypeUnknown
com.apple.corenfc.readersession.delegate
com.apple.corenfc.readersession
%c[%{public}s %{public}s]:%i Dispatch resource init failed
UNKNOWN
NFCReaderSessionDelegate
NFCTagReaderSessionDelegate
NFCNDEFReaderSessionDelegate
NFCVASReaderSessionDelegate
%c[%{public}s %{public}s]:%i Delegate object does not conform to %@ protocol
Unsupported poll mode
%c[%{public}s %{public}s]:%i Disconnecting previous tag
v20@?0@"NSError"8B16
v32@?0@"<NFTag>"8@"NSData"16@"NSError"24
%c[%{public}s %{public}s]:%i Session has not begun
%c[%{public}s %{public}s]:%i code=%ld, finalUIState=%ld, activateCallback=%ld
%c[%{public}s %{public}s]:%i Session does not support invalidation with error
v32@?0q8Q16@"NSError"24
v24@?0@"NSError"8@"<NFNdefMessage>"16
%c[%{public}s %{public}s]:%i Delegate does not implement -readerSession:didDetectTags: method
com.apple.nfcd.service.corenfc
%c[%{public}s %{public}s]:%i error=%@
v28@?0@"NSObject<NFReaderSessionInterface>"8B16@"NSError"20
v20@?0B8@"NSError"12
%c[%{public}s %{public}s]:%i Stack error: %@
%c[%{public}s %{public}s]:%i XPC Error: %@
%c[%{public}s %{public}s]:%i Previous operation in progress
%c[%{public}s %{public}s]:%i HW state query timeout
%c[%{public}s %{public}s]:%i HW support state update: %lu
v32@?0@"<NFCHardwareManagerCallbacks>"8Q16^B24
v32@?0@"<NFCSessionCallbacks>"8Q16^B24
%c[%{public}s %{public}s]:%i Total size of all NDEF records exceeds the size limit
NFCFeliCaTag pollingWithSystemCode:requestCode:timeSlot:completionHandler:
%c[%{public}s %{public}s]:%i Node size must be 2 bytes long
%c[%{public}s %{public}s]:%i System code must not contain the 0xFF wildcard value
NFCFeliCaTag requestServiceWithNodeCodeList:completionHandler:
%c[%{public}s %{public}s]:%i Number of nodes must be between 1 to 32 inclusively
NFCFeliCaTag requestResponseWithCompletionHandler:
NFCFeliCaTag readWithoutEncryptionWithServiceCodeList:blockList:completionHandler:
%c[%{public}s %{public}s]:%i Number of service codes must be between 1 to 16 inclusively
%c[%{public}s %{public}s]:%i Block list element must be 2 or 3 bytes long
NFCFeliCaTag writeWithoutEncryptionWithServiceCodeList:blockList:blockData:completionHandler:
%c[%{public}s %{public}s]:%i Number of elements in the block list and the block data list does not match
%c[%{public}s %{public}s]:%i Block list size exceeds the maximum limit
%c[%{public}s %{public}s]:%i Block data length must be 16 bytes long
NFCFeliCaTag requestSystemCodeWithCompletionHandler:
NFCFeliCaTag requestServiceV2WithNodeCodeList:completionHandler:
NFCFeliCaTag requestSpecificationVersionWithCompletionHandler:
NFCFeliCaTag resetModeWithCompletionHandler:
NFCFeliCaTag sendFeliCaCommandPacket:completionHandler:
%c[%{public}s %{public}s]:%i Command packet length must be between 1 to 254 inclusively
NFCMiFareTag sendMiFareCommand:completionHandler:
NFCMiFareTag sendMiFareISO7816Command:completionHandler:
NFCISO15693ReaderSessionTag sendCustomCommandWithConfiguration:completionHandler:
%c[%{public}s %{public}s]:%i 
%c[%{public}s %{public}s]:%i %@ with response length = %lu
%c[%{public}s %{public}s]:%i %@ in commandConfiguration asNSDataWithError
NFCISO15693ReaderSessionTag readMultipleBlocksWithConfiguration:completionHandler:
%c[%{public}s %{public}s]:%i %@
%c[%{public}s %{public}s]:%i %@ in readConfiguration asNSDataArrayWithUID
%c[%{public}s %{public}s]:%i NDEF payload exceeds the size limit
%c[%{public}s %{public}s]:%i Record serialization error
%c[%{public}s %{public}s]:%i Invalid UTF8 URI string
%c[%{public}s %{public}s]:%i Missing URI field
%c[%{public}s %{public}s]:%i Invalid payload length
%c[%{public}s %{public}s]:%i Empty string
%c[%{public}s %{public}s]:%i Invalid UTF8 character
%c[%{public}s %{public}s]:%i Failed to connect to NFCD
NFCSession xpcInvalidated
NFCSession xpcInterrupted
%c[%{public}s %{public}s]:%i Session has been invalidated
%c[%{public}s %{public}s]:%i Tag is not connected
%c[%{public}s %{public}s]:%i Error=%@
NFCNDEFTag queryNDEFStatusWithCompletionHandler:
NFCNDEFTag readNDEFWithCompletionHandler:
NFCNDEFTag writeLockWithCompletionHandler:
NFCNDEFTag writeNDEF:completionHandler:
%c[%{public}s %{public}s]:%i Session queue is not available; dispatching on main queue
%c[%{public}s %{public}s]:%i No suitable NDEF tag found
NFCNDEFReaderSession restartPolling
%c[%{public}s %{public}s]:%i Delegate conforms to [NFCNDEFReaderSessionDelegate readerSession:didDetectTags]; polling is auto restarted.
NFCNDEFReaderSession connectToTag:completionHandler
%c[%{public}s %{public}s]:%i Invalid tag object
%c[%{public}s %{public}s]:%i Only tag from the current session is allowed
%c[%{public}s %{public}s]:%i Delegate does not implement -readerSessionDidBecomeActive: method
%c[%{public}s %{public}s]:%i Unknown delegate type: %ld
%c[%{public}s %{public}s]:%i Invalid expectedResponseLength value; should be from 1 to 65536 or -1
%c[%{public}s %{public}s]:%i Invalid APDU format
%c[%{public}s %{public}s]:%i Unexpected Lc & Le field combination
%c[%{public}s %{public}s]:%i Missing data specified by Lc
%c[%{public}s %{public}s]:%i Unexpected extended Lc & short Le combination
%c[%{public}s %{public}s]:%i Unexpected short Lc & extended Le combination
%c[%{public}s %{public}s]:%i Unexpected lc & le field combination
%c[%{public}s %{public}s]:%i Missing data when Lc is > 0
NFCISO7816Tag sendCommandAPDU:completionHandler:
NFCISO15693Tag stayQuietWithCompletionHandler:
NFCISO15693Tag readSingleBlockWithRequestFlags:blockNumber:completionHandler:
NFCISO15693Tag writeSingleBlockWithRequestFlags:blockNumber:dataBlock:completionHandler:
%c[%{public}s %{public}s]:%i Data block length must be greater than 0
NFCISO15693Tag lockBlockWithRequestFlags:blockNumber:completionHandler:
NFCISO15693Tag readMultipleBlocksWithRequestFlags:blockRange:completionHandler:
%c[%{public}s %{public}s]:%i Block range must be between 0 to 255 inclusively
%c[%{public}s %{public}s]:%i Unexpected block size of 0
NFCISO15693Tag writeMultipleBlocksWithRequestFlags:blockRange:dataBlocks:completionHandler:
%c[%{public}s %{public}s]:%i Specified range length does not match the number of elements in the data block list
%c[%{public}s %{public}s]:%i Elements in the data block list are inconsistent in size
NFCISO15693Tag selectWithRequestFlags:completionHandler:
NFCISO15693Tag resetToReadyWithRequestFlags:completionHandler:
NFCISO15693Tag writeAFIWithRequestFlag:afi:completionHandler:
NFCISO15693Tag lockAFIWithRequestFlag:completionHandler:
NFCISO15693Tag writeDSFIDWithRequestFlag:dsfid:completionHandler:
NFCISO15693Tag getSystemInfoAndUIDWithRequestFlag:completionHandler:
NFCISO15693Tag getMultipleBlockSecurityStatusWithRequestFlag:blockRange:completionHandler:
NFCISO15693Tag fastReadMultipleBlocksWithRequestFlag:blockRange:completionHandler:
NFCISO15693Tag customCommandWithRequestFlag:customCommandCode:customRequestParameters:completionHandler:
%c[%{public}s %{public}s]:%i Custom command code must be between 0xA0 to 0xDF inclusively
NFCISO15693Tag extendedReadSingleBlockWithRequestFlags:blockNumber:completionHandler:
NFCISO15693Tag extendedWriteSingleBlockWithRequestFlags:blockNumber:dataBlock:completionHandler:
NFCISO15693Tag extendedLockBlockWithRequestFlags:blockNumber:completionHandler:
NFCISO15693Tag extendedReadMultipleBlocksWithRequestFlags:blockRange:completionHandler:
NFCISO15693Tag extendedWriteMultipleBlocksWithRequestFlags:blockRange:dataBlock:completionHandler:
NFCISO15693Tag authenticateWithRequestFlags:cryptoSuiteIdentifier:message:completionHandler:
NFCISO15693Tag keyUpdateWithRequestFlags:keyIdentifier:message:completionHandler:
NFCISO15693Tag challengeWithRequestFlags:cryptoSuiteIdentifier:message:completionHandler:
NFCISO15693Tag readBufferWithRequestFlags:completionHandler:
NFCISO15693Tag extendedGetMultipleBlockSecurityStatusWithRequestFlag:blockRange:completionHandler:
%c[%{public}s %{public}s]:%i Forcing minimum 20ms delay
NFCISO15693Tag extendedFastReadMultipleBlocksWithRequestFlag:blockRange:completionHandler:
NFCISO15693Tag sendRequestWithFlag:commandCode:data:completionHandler:
%c[%{public}s %{public}s]:%i Invalid NFCPollingOption parameter: 0x%lx
%c[%{public}s %{public}s]:%i PACE-polling enabled
NFCTagReaderSession restartPolling
NFCTagReaderSession connectToTag:completionHandler:
%c[%{public}s %{public}s]:%i Delegate does not implement -tagReaderSessionDidBecomeActive: method
%c[%{public}s %{public}s]:%i Delegate does not implement -tagReaderSession:didDetectTags: method
%c[%{public}s %{public}s]:%i No suitable tag found
com.apple.nfcd.vas.presenceCheckTimer
NFCVASReaderSession beginSessionWithConfig:
%c[%{public}s %{public}s]:%i Restart polling
%c[%{public}s %{public}s]:%i Unarchive error: %@
%c[%{public}s %{public}s]:%i Unexpected class type for the message
%c[%{public}s %{public}s]:%i Archive error: %@
NFCReaderSession setAlertMessage:
%c[%{public}s %{public}s]:%i XPC error: %@
NFCReaderSession invalidateSession
NFCReaderSession invalidateSessionWithErrorMessage:
%c[%{public}s %{public}s]:%i Not implemented
%c[%{public}s %{public}s]:%i sessionState=%ld, proxy=%@, error=%@
%c[%{public}s %{public}s]:%i sessionState=%ld, proxy=%@
%c[%{public}s %{public}s]:%i Current connectedTag: %@
%c[%{public}s %{public}s]:%i ConnectedTag[%ld]: %@
%c[%{public}s %{public}s]:%i Invalid tag index: %ld
%c[%{public}s %{public}s]:%i External reader detected
%c[%{public}s %{public}s]:%i Session queue is nil
%c[%{public}s %{public}s]:%i Defaulting to CoreNFCSessionTypeUnknown
NFCReaderSession beginSessionWithConfig:
%c[%{public}s %{public}s]:%i Dispatch resource init failed
%c[%{public}s %{public}s]:%i Delegate object does not conform to %@ protocol
%c[%{public}s %{public}s]:%i Disconnecting previous tag
%c[%{public}s %{public}s]:%i Session has not begun
%c[%{public}s %{public}s]:%i code=%ld, finalUIState=%ld, activateCallback=%ld
%c[%{public}s %{public}s]:%i Session does not support invalidation with error
%c[%{public}s %{public}s]:%i Delegate does not implement -readerSession:didDetectTags: method
NFCISO15693ReaderSession restartPolling
%c[%{public}s %{public}s]:%i error=%@
%c[%{public}s %{public}s]:%i Stack error: %@
%c[%{public}s %{public}s]:%i XPC Error: %@
%c[%{public}s %{public}s]:%i Previous operation in progress
%c[%{public}s %{public}s]:%i HW state query timeout
%c[%{public}s %{public}s]:%i HW support state update: %lu
NFCNDEFMessage
NSSecureCoding
NSCoding
NFCFeliCaTag
NFCTag
NSObject
NSCopying
NFCNDEFTag
NFCMiFareTag
NFCISO15693CustomCommandConfiguration
NFCISO15693ReadMultipleBlocksConfiguration
NFCISO15693ReaderSessionTag
NFCISO15693Tag
NFCHardwareManagerInterface
NFCHardwareManagerCallbacks
NFCNDEFPayload
ConvenienceHelpers
NFCSession
NFCTagCommandConfiguration
NFReaderSessionInterface
NFSessionInterface
NFReaderSessionCallbacks
NFSessionCallbackInterface
NFCNDEFReaderSessionDelegate
NFCNDEFReaderSession
NFCISO7816APDU
NFCISO7816Tag
NFCError
NFCTagReaderSession
NFCVASCommandConfiguration
NFCVASResponse
NFCVASReaderSession
CoreNFC
NFCReaderSessionDelegate
NFCTagReaderSessionDelegate
NFCVASReaderSessionDelegate
NFCReaderSession
NFCSessionCallbacks
NFCISO15693ReaderSession
NFCHardwareManager
T@"<NFTag>",R,N
NF_asHexString
TB,R,N,GisReady
T#,R
T@"<NFCTag>",R,&,N,V_connectedTag
_exportedObject
T@"NSArray",C,N,V_records
_maximumRetries
T@"NSData",C,N,V_payload
_status
T@"NSData",C,N,V_type
addRecordArray:
T@"NSData",R,&,N,V_mobileToken
asNFCISO7816Tag
T@"NSData",R,C,N
chunked
T@"NSObject<NFReaderSessionInterface><NSXPCProxyCreating>",R,&,N
dealloc
T@"NSString",&,N,V_passTypeIdentifier
historicalBytes
T@"NSString",R,&,N
initWithString:
T@"NSURL",&,N,V_url
isEqualToNFTag:
TB,R
isProxy
TB,R,N,GisAvailable
numberWithChar:
TC,N,V_flags
records
TC,R,N
resetModeWithCompletionHandler:
TQ,N,V_customCommandCode
setUrl:
TQ,N,V_maximumRetries
tagReaderSession:didDetectTags:
TQ,N,V_pollMethod
vasData
TQ,R
writeLockWithCompletionHandler:
.cxx_destruct
T@"NSArray",R,C,N,GgetDelegates
SystemCode
Tq,R,N,V_status
T@"<NFCReaderSession>",R,W,N
_connectionLock
T@"NFCHardwareManager",R,N,V_hardwareManager
T@"NSData",C,N,V_identifier
_setConnection:
T@"NSData",C,N,V_requestParameters
_typeNameFormat
T@"NSData",R,&,N
applicationData
T@"NSData",R,&,N,V_vasData
checkNdefSupportWithCompletion:
T@"NSNumber",R,N,V_sessionId
connectToTag:completionHandler:
T@"NSObject<OS_dispatch_queue>",R,N
hardwareManager
T@"NSString",C,N
initWithFormat:
T@"NSString",R,C
instructionCode
T@,R,W,N
isNDEFFormatted
TB,R,N
isReady
TB,R,N,GisInvalidated
payload
TC,N,V_typeNameFormat
release
TQ,N,V_chunkSize
session
TQ,N,V_manufacturerCode
stayQuietWithCompletionHandler:
TQ,N,V_mifareFamily
TQ,N,V_sessionConfig
wellKnownTypeURIPayloadWithURL:
TQ,R,N
Td,N,V_retryInterval
Tq,N,V_mode
Tq,R,N
Tq,R,N,V_delegateType
T{_NSRange=QQ},N,V_range
UTF8String
_MaxRetry
_MaxRetryInterval
_alertMessage
_callbackDidBecomeActive
_callbackDidInvalidateWithError:
_chunkSize
_configuration
_configureInterface:
_connectIfNeeded
_connectTag:error:
_connectWithCompletionHandler:
_connectWithError:
_connectWithSession:outError:
_connectedTag
_connection
_convertMessageToInternal:
_convertVASConfigToInternalRequest:
_convertVASResponseToExternal:
_currentTag
_customCommandCode
_delegate
_delegateQueue
_delegateQueueStarted
_delegateType
_delegates
_disconnectWithError:
_exportedObjectClassName
_exportedObjectInterface
_flags
_fullPacket
_generateRequestHeader:flags:
_getInternalReaderSession
_getPayloadsFromNDEFRecords:
_getURLsFromNDEFMessage:
_hardwareManager
_hwSupportStateUpdate
_identifier
_initWithRecords:
_invalidate
_invalidateAfterFirstRead
_invalidateSessionAndActivateCallbackWithCode:
_invalidateSessionWithCode:
_invalidateSessionWithCode:message:finalUIState:activateCallback:
_invalidationCode
_machServiceName
_manufacturerCode
_mifareFamily
_mobileToken
_mode
_parseResponseData:outError:
_parseResponseErrorWithData:
_passTypeIdentifier
_payload
_payloadForIdentifier:
_payloadOffset
_pollMethod
_presenceCheckTimer
_proxy
_queuedReaderSessions
_range
_readerSessionLock
_records
_remoteObjectInterface
_requestParameters
_restartPollingWithCompletionHandler:
_resumeDelegateQueue
_retryInterval
_sendAPDU:completionHandler:
_sendVASRequests:error:
_sessionConfig
_sessionId
_sessionKey
_sessionQueue
_sessionStartInProgress
_sessionState
_setDelegateQueue:
_setNDEFAvailability:
_setNDEFContainerSize:
_setPayload:object:identifier:dirty:
_setQueue:
_setSession:
_setTag:
_startPollingWithMethod:sessionConfig:completionHandler:
_stopPollingWithCompletionHandler:
_swiftDelegateWrapper
_tag
_tagsRead
_transceiveWithData:completionHandler:
_transceiveWithData:receivedData:commandConfig:error:
_transceiveWithSession:sendData:receivedData:error:
_type
_updateNdefStatusWithSession:
_url
_validateRecords:fromOriginal:
_vasConfig
_vasData
_writeLocked
_wtxRetryWithCommnand:maxRetry:completionHandler:
_xpcQueue
_xpcSession
absoluteString
activateWithToken:completion:
addEntriesFromDictionary:
addNFCHardwareManagerCallbacksListener:
addObject:
alertMessage
allKeysForObject:
allObjects
appendBytes:length:
appendData:
appendFormat:
appendString:
applicationDataCoding
archivedDataWithRootObject:requiringSecureCoding:error:
areFeaturesSupported:completion:
areFeaturesSupported:expiry:completion:
areFeaturesSupported:outError:
asData
asNFCFeliCaTag
asNFCISO15693Tag
asNFCMiFareTag
asNSDataArrayWithUID:error:
asNSDataWithError:
authenticateWithRequestFlags:cryptoSuiteIdentifier:message:completionHandler:
autorelease
available
beginSession
beginSessionWithConfig:
bytes
capacity
challengeWithRequestFlags:cryptoSuiteIdentifier:message:completionHandler:
checkPresenceWithCompletion:
checkPresenceWithError:
chunkSize
class
cleanupNFCHardwareManagerRegistration
code
coder:decodeArrayOfClass:forKey:
compare:options:range:
componentsWithString:
configuration
conformsToProtocol:
connect:completion:
connectTag:completionHandler:
connectTag:error:
connectedTag
copy
copyWithZone:
count
countByEnumeratingWithState:objects:count:
createHandoffTokenWithCompletion:
currentHandler
currentIDm
currentSystemCode
currentTag
customCommandCode
customCommandWithRequestFlag:customCommandCode:customRequestParameters:completionHandler:
data
dataUsingEncoding:
dataUsingEncoding:allowLossyConversion:
debugDescription
decodeIdentifier:manufacturerCode:serialNumber:
decodeIntegerForKey:
decodeObjectOfClass:forKey:
delegate
delegateType
delegates
dequeueReaderSession:
description
dictionaryWithObjects:forKeys:count:
didDetectExternalReaderWithNotification:
didDetectNDEFMessages:fromTags:connectedTagIndex:updateUICallback:
didDetectTags:connectedTagIndex:
didInvalidate
didStartSession:
didTerminate:
didUIControllerInvalidate:
disconnect
disconnectTagWithError:
disconnectWithCardRemoval:completion:
dispatchBlockOnDelegateQueueAsync:
dispatchOnDelegateQueueAsync:
domain
encodeInteger:forKey:
encodeObject:forKey:
encodeWithCoder:
endSession:
enumerateObjectsUsingBlock:
errorWithCode:
errorWithCode:userInfo:
errorWithNFCDError:defaultNFCErrorCode:
exceptionWithName:reason:userInfo:
expectedResponseLength
extendedFastReadMultipleBlocksWithRequestFlag:blockRange:completionHandler:
extendedGetMultipleBlockSecurityStatusWithRequestFlag:blockRange:completionHandler:
extendedLockBlockWithRequestFlags:blockNumber:completionHandler:
extendedReadMultipleBlocksWithRequestFlags:blockRange:completionHandler:
extendedReadSingleBlockWithRequestFlags:blockNumber:completionHandler:
extendedWriteMultipleBlocksWithRequestFlags:blockRange:dataBlocks:completionHandler:
extendedWriteSingleBlockWithRequestFlags:blockNumber:dataBlock:completionHandler:
fastReadMultipleBlocksWithRequestFlag:blockRange:completionHandler:
featureAvailable:
filteredArrayUsingPredicate:
firstObject
flags
getBytes:length:
getDelegates
getMultipleBlockSecurityStatusWithRequestFlag:blockRange:completionHandler:
getReaderSessionWithKey:
getSystemInfoAndUIDWithRequestFlag:completionHandler:
getSystemInfoWithRequestFlag:completionHandler:
handleFailureInMethod:object:file:lineNumber:description:
handleSessionResumed
handleSessionSuspended:
hash
hwStateDidChange:
icManufacturerCode
icSerialNumber
identifier
init
initWithArray:
initWithBytes:length:
initWithCallback:queue:
initWithCapacity:
initWithCode:userInfo:
initWithCoder:
initWithData:
initWithData:encoding:
initWithDelegate:queue:
initWithDelegate:queue:invalidateAfterFirstRead:
initWithDelegate:queue:pollMethod:
initWithDelegate:sessionDelegateType:queue:pollMethod:sessionConfig:
initWithDomain:code:userInfo:
initWithEmptyNdefMessage
initWithFormat:type:identifier:payload:
initWithFormat:type:identifier:payload:chunkSize:
initWithFormatType:type:identifier:payload:chunkSize:
initWithInstructionClass:instructionCode:p1Parameter:p2Parameter:data:expectedResponseLength:
initWithMachServiceName:options:
initWithMachServiceName:remoteObjectInterface:exportedObjectInterface:exportedObject:delegate:
initWithManufacturerCode:customCommandCode:requestParameters:
initWithManufacturerCode:customCommandCode:requestParameters:maximumRetries:retryInterval:
initWithNDEFRecords:
initWithNFNdefMessage:
initWithObjects:
initWithObjectsAndKeys:
initWithPollingOption:delegate:delegateType:queue:
initWithPollingOption:delegate:queue:
initWithPollingOption:swiftDelegate:queue:
initWithRange:chunkSize:
initWithRange:chunkSize:maximumRetries:retryInterval:
initWithSession:tag:startupConfig:
initWithStatus:data:mobileToken:
initWithVASCommandConfigurations:delegate:queue:
initWithVASMode:passTypeIdentifier:url:
initialSelectedAID
instructionClass
interface
interfaceWithProtocol:
invalidate
invalidateSession
invalidateSessionWithErrorMessage:
invalidateSessionWithReason:
invalidated
isAvailable
isEqual:
isEqualToData:
isEqualToNumber:
isEqualToString:
isInvalidated
isKindOfClass:
isMatchingSession:outError:
isMemberOfClass:
isReadOnly
keyUpdateWithRequestFlags:keyIdentifier:message:completionHandler:
languageCode
length
localeWithLocaleIdentifier:
localizedDescription
lock
lockAFIWithRequestFlag:completionHandler:
lockBlockWithRequestFlags:blockNumber:completionHandler:
lockDFSIDWithRequestFlag:completionHandler:
lockDSFIDWithRequestFlag:completionHandler:
manufacturerCode
maximumRetries
messageBegin
messageEnd
mifareFamily
mobileToken
mode
ndefAvailability
ndefContainerSize
ndefMessagePayload
ndefMessageWithData:
ndefReadWithCompletion:
ndefStatus:maxMessageLength:
ndefWrite:completion:
numberWithInt:
numberWithInteger:
numberWithUnsignedChar:
numberWithUnsignedInteger:
objectAtIndex:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
p1Parameter
p2Parameter
passConfigWithMode:passIdentifier:
passTypeIdentifier
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performVAS:completion:
pollMethod
pollingWithSystemCode:requestCode:timeSlot:completionHandler:
predicateWithBlock:
prioritizeSessionWithCompletion:
proprietaryApplicationDataCoding
pupi
queryNDEFStatusWithCompletionHandler:
queueReaderSession:sessionConfig:completion:
queueReaderSession:sessionConfig:completionHandler:
range
readBufferWithRequestFlags:completionHandler:
readMultipleBlocksWithConfiguration:completionHandler:
readMultipleBlocksWithRequestFlags:blockRange:completionHandler:
readNDEFWithCompletionHandler:
readNdefMessageWithError:
readSingleBlockWithRequestFlags:blockNumber:completionHandler:
readWithoutEncryptionWithServiceCodeList:blockList:completionHandler:
readerProxy
readerSession:didDetectNDEFs:
readerSession:didDetectTags:
readerSession:didInvalidateWithError:
readerSession:didReceiveVASResponses:
readerSessionDidBecomeActive:
readingAvailable
ready
recordsFromBytes:length:
recordsWithTNF:type:identifier:payload:chunkSize:outError:
remoteObjectProxy
removeObjectsForKeys:
requestParameters
requestResponseWithCompletionHandler:
requestServiceV2WithNodeCodeList:completionHandler:
requestServiceWithNodeCodeList:completionHandler:
requestSpecificationVersionWithCompletionHandler:
requestSystemCodeWithCompletionHandler:
resetToReadyWithRequestFlags:completionHandler:
resolveURIString:
respondsToSelector:
restartPolling
restartPollingWithCompletion:
resume
retain
retainCount
retryInterval
reverseByteOrder:
selectWithRequestFlags:completionHandler:
selectedAID
self
sendCommandAPDU:completionHandler:
sendCustomCommandWithConfiguration:completionHandler:
sendFeliCaCommandPacket:completionHandler:
sendMiFareCommand:completionHandler:
sendMiFareISO7816Command:completionHandler:
sendRequestWithFlag:commandCode:data:completionHandler:
sessionConfig
sessionConfigWithUIMode:sessionType:initialScanText:vasPass:
sessionId
sessionQueue
setAlertMessage:
setChunkSize:
setClasses:forSelector:argumentIndex:ofReply:
setCustomCommandCode:
setECPPayload:completion:
setExportedInterface:
setExportedObject:
setFlags:
setIdentifier:
setInterface:forSelector:argumentIndex:ofReply:
setInterruptionHandler:
setInvalidationHandler:
setManufacturerCode:
setMaximumRetries:
setMifareFamily:
setMode:
setNdefMessagePayload:
setObject:forKey:
setObject:forKeyedSubscript:
setPassTypeIdentifier:
setPayload:
setPollMethod:
setRange:
setRecords:
setRemoteObjectInterface:
setRequestParameters:
setRetryInterval:
setSessionConfig:
setType:
setTypeNameFormat:
sharedHardwareManager
startPollingForNDEFMessagesWithSessionConfig:completion:
startPollingForTags:sessionConfig:completion:
startTimer:
status
stopPollingWithCompletion:
stopTimer
stringWithUTF8String:
subdataWithRange:
submitBlockOnDelegateQueue:
submitBlockOnSessionQueue:
submitBlockOnSessionQueueWithDelay:block:
substringFromIndex:
substringWithRange:
superclass
supportsSecureCoding
synchronousRemoteObjectProxyWithErrorHandler:
systemCode
tagA
tagB
tagF
tagID
tagReaderSession:didInvalidateWithError:
tagReaderSessionDidBecomeActive:
technology
transceive:completion:
transceive:tagUpdate:error:
type
typeNameFormat
unarchivedObjectOfClass:fromData:error:
unlock
unsignedShortValue
updateSharingUIScanText:completion:
updateSharingUIStateOnInvalidation:completion:
validateDelegate:expectedType:
weakObjectsHashTable
wellKnowTypeTextPayloadWithString:locale:
wellKnownTypeTextPayloadWithLocale:
wellKnownTypeTextPayloadWithString:locale:
wellKnownTypeURIPayload
wellKnownTypeURIPayloadWithString:
writeAFIWithRequestFlag:afi:completionHandler:
writeDSFIDWithRequestFlag:dsfid:completionHandler:
writeLockNdef
writeMultipleBlocksWithRequestFlags:blockRange:dataBlocks:completionHandler:
writeNDEF:completionHandler:
writeNdefMessage:error:
writeProtectNDEFTagWithCompletion:
writeSingleBlockWithRequestFlags:blockNumber:dataBlock:completionHandler:
writeWithoutEncryptionWithServiceCodeList:blockList:blockData:completionHandler:
zone
B16@0:8
@24@0:8@16
B32@0:8@16@24
v24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@16@0:8
Q16@0:8
v16@0:8
@"NSArray"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8^{_NSZone=}16
@"<NFCISO15693Tag>"16@0:8
@"<NFCISO7816Tag>"16@0:8
@"<NFCFeliCaTag>"16@0:8
@"<NFCMiFareTag>"16@0:8
@"<NFCReaderSession>"16@0:8
v24@0:8@?16
v32@0:8@16@?24
v24@0:8@?<v@?QQ@"NSError">16
v24@0:8@?<v@?@"NFCNDEFMessage"@"NSError">16
v32@0:8@"NFCNDEFMessage"16@?<v@?@"NSError">24
v24@0:8@?<v@?@"NSError">16
v48@0:8@16q24q32@?40
v40@0:8@16@24@?32
v48@0:8@16@24@32@?40
v48@0:8@"NSData"16q24q32@?<v@?@"NSData"@"NSData"@"NSError">40
v32@0:8@"NSArray"16@?<v@?@"NSArray"@"NSError">24
v24@0:8@?<v@?q@"NSError">16
v40@0:8@"NSArray"16@"NSArray"24@?<v@?qq@"NSArray"@"NSError">32
v48@0:8@"NSArray"16@"NSArray"24@"NSArray"32@?<v@?qq@"NSError">40
v24@0:8@?<v@?@"NSArray"@"NSError">16
v32@0:8@"NSArray"16@?<v@?qqq@"NSArray"@"NSArray"@"NSError">24
v24@0:8@?<v@?qq@"NSData"@"NSData"@"NSError">16
v24@0:8@?<v@?qq@"NSError">16
v32@0:8@"NSData"16@?<v@?@"NSData"@"NSError">24
@"NSData"16@0:8
v32@0:8@"NFCISO7816APDU"16@?<v@?@"NSData"CC@"NSError">24
@40@0:8@16@24q32
v24@0:8Q16
@40@0:8Q16Q24@32
@56@0:8Q16Q24@32Q40d48
@24@0:8^@16
C16@0:8
v20@0:8C16
@"NSData"
@56@0:8{_NSRange=QQ}16Q32Q40d48
@40@0:8{_NSRange=QQ}16Q32
@32@0:8@16^@24
{_NSRange=QQ}16@0:8
v32@0:8{_NSRange=QQ}16
{_NSRange="location"Q"length"Q}
B40@0:8@16^Q24^@32
v32@0:8C16C20@?24
v40@0:8C16C20@24@?32
v44@0:8C16{_NSRange=QQ}20@?36
v52@0:8C16{_NSRange=QQ}20@36@?44
v28@0:8C16@?20
v44@0:8C16q20@28@?36
v36@0:8C16q20@?28
v48@0:8q16q24@32@?40
v32@0:8@"NFCISO15693CustomCommandConfiguration"16@?<v@?@"NSData"@"NSError">24
v32@0:8@"NFCISO15693ReadMultipleBlocksConfiguration"16@?<v@?@"NSData"@"NSError">24
v32@0:8C16C20@?<v@?@"NSData"@"NSError">24
v40@0:8C16C20@"NSData"24@?<v@?@"NSError">32
v32@0:8C16C20@?<v@?@"NSError">24
v44@0:8C16{_NSRange=QQ}20@?<v@?@"NSArray"@"NSError">36
v52@0:8C16{_NSRange=QQ}20@"NSArray"36@?<v@?@"NSError">44
v28@0:8C16@?<v@?@"NSError">20
v28@0:8C16@?<v@?qqqqq@"NSError">20
v28@0:8C16@?<v@?@"NSData"qqqqq@"NSError">20
v44@0:8C16q20@"NSData"28@?<v@?@"NSData"@"NSError">36
v36@0:8C16q20@?<v@?@"NSData"@"NSError">28
v44@0:8C16q20@"NSData"28@?<v@?@"NSError">36
v36@0:8C16q20@?<v@?@"NSError">28
v44@0:8C16q20@"NSData"28@?<v@?C@"NSData"@"NSError">36
v28@0:8C16@?<v@?C@"NSData"@"NSError">20
v48@0:8q16q24@"NSData"32@?<v@?C@"NSData"@"NSError">40
B48@0:8@16^@24@32^@40
Q24@0:8@16
Vv40@0:8@16@24@?32
Vv32@0:8Q16@?24
Vv40@0:8@"NSObject<NFReaderSessionCallbacks>"16@"NFReaderSessionConfig"24@?<v@?@"NSObject<NFReaderSessionInterface>"B@"NSError">32
Vv32@0:8Q16@?<v@?B@"NSError">24
v20@0:8I16
@44@0:8C16@20@28@36
@52@0:8C16@20@28@36Q44
@32@0:8@16@24
@56@0:8@16@24@32@40@48
@24@0:8@?16
@"NSLock"
@"NSXPCConnection"
@"NSObject<OS_dispatch_queue>"
@"NSXPCInterface"
@"NSString"
@"<NFCSessionCallbacks>"
d16@0:8
v24@0:8d16
q16@0:8
B32@0:8@16^@24
B24@0:8^@16
B48@0:8@16@24^@32^@40
@"<NFTag>"
@"NSNumber"
@"NFCHardwareManager"
Vv24@0:8@?16
Vv32@0:8@16@?24
Vv24@0:8@?<v@?>16
Vv24@0:8@?<v@?@"NSData"@"NSError">16
Vv32@0:8@"NSData"16@?<v@?@"NSError">24
Vv40@0:8Q16Q24@?32
Vv28@0:8B16@?20
Vv32@0:8q16@?24
Vv40@0:8Q16Q24@?<v@?@"NSError">32
Vv32@0:8Q16@?<v@?@"NSError">24
Vv24@0:8@?<v@?@"NSError">16
Vv32@0:8@"<NFTag>"16@?<v@?@"NSError">24
Vv28@0:8B16@?<v@?@"NSError">20
Vv32@0:8@"NSData"16@?<v@?@"<NFTag>"@"NSData"@"NSError">24
Vv24@0:8@?<v@?@"NSError"B>16
Vv32@0:8@"NSString"16@?<v@?@"NSError">24
Vv32@0:8q16@?<v@?@"NSError">24
Vv24@0:8@?<v@?@"NSError"@"<NFNdefMessage>">16
Vv32@0:8@"<NFNdefMessage>"16@?<v@?@"NSError">24
Vv24@0:8@?<v@?qQ@"NSError">16
Vv32@0:8@"NSArray"16@?<v@?@"NSError"@"NSArray">24
v24@0:8@"NSError"16
v24@0:8@"NSData"16
v32@0:8@16Q24
v48@0:8@16@24Q32@?40
v32@0:8@"NSArray"16Q24
v48@0:8@"NSArray"16@"NSArray"24Q32@?<v@?q>40
v24@0:8@"NFFieldNotification"16
v32@0:8@16@24
v32@0:8@"NFCNDEFReaderSession"16@"NSError"24
v32@0:8@"NFCNDEFReaderSession"16@"NSArray"24
v24@0:8@"NFCNDEFReaderSession"16
@56@0:8@16q24@32Q40Q48
@40@0:8@16@24Q32
@36@0:8@16@24B32
@48@0:8C16C20C24C28@32q40
@24@0:8q16
@32@0:8q16@24
@32@0:8@16q24
@24@0:8C16C20
v40@0:8@16q24@?32
@48@0:8q16@24q32@40
@40@0:8q16@24@32
@"<NFCTag>"
v24@0:8q16
@"NSURL"
@40@0:8@16@24@32
@"NFTimer"
v24@0:8@"NFCReaderSession"16
v32@0:8@"NFCReaderSession"16@"NSError"24
v32@0:8@"NFCReaderSession"16@"NSArray"24
v32@0:8@"NFCTagReaderSession"16@"NSError"24
v24@0:8@"NFCTagReaderSession"16
v32@0:8@"NFCTagReaderSession"16@"NSArray"24
v32@0:8@"NFCVASReaderSession"16@"NSError"24
v32@0:8@"NFCVASReaderSession"16@"NSArray"24
v24@0:8@"NFCVASReaderSession"16
B24@0:8Q16
v24@0:8@"NSString"16
v32@0:8Q16@?24
B32@0:8@16q24
v40@0:8Q16Q24@?32
@40@0:8@16^@24^@32
v44@0:8q16@24q32B40
@32@0:8^q16^Q24
@"NSObject<NFReaderSessionInterface><NSXPCProxyCreating>"
@"NSObject<OS_dispatch_group>"
B32@0:8Q16^@24
v40@0:8Q16d24@?32
@"NSHashTable"
@"NFCSession"
@"NSMutableDictionary"
@"NSObject<OS_dispatch_semaphore>"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@(#)PROGRAM:CoreNFC  PROJECT:CoreNFC-1
258);
records
%c[%{public}s %{public}s]:%i Total size of all NDEF records exceeds the size limit
%c[%{public}s %{public}s]:%i Node size must be 2 bytes long
v8@?0
%c[%{public}s %{public}s]:%i System code must not contain the 0xFF wildcard value
v24@?0@"NSData"8@"NSError"16
%c[%{public}s %{public}s]:%i Number of nodes must be between 1 to 32 inclusively
%c[%{public}s %{public}s]:%i Number of service codes must be between 1 to 16 inclusively
%c[%{public}s %{public}s]:%i Block list element must be 2 or 3 bytes long
%c[%{public}s %{public}s]:%i Number of elements in the block list and the block data list does not match
%c[%{public}s %{public}s]:%i Block list size exceeds the maximum limit
%c[%{public}s %{public}s]:%i Block data length must be 16 bytes long
%c[%{public}s %{public}s]:%i Command packet length must be between 1 to 254 inclusively
NFCISO15693ReaderSessionTag.m
Invalid UID length
%c[%{public}s %{public}s]:%i 
%c[%{public}s %{public}s]:%i %@ with response length = %lu
%c[%{public}s %{public}s]:%i %@ in commandConfiguration asNSDataWithError
%c[%{public}s %{public}s]:%i %@
%c[%{public}s %{public}s]:%i %@ in readConfiguration asNSDataArrayWithUID
typeNameFormat
type
identifier
payload
chunkSize
%c[%{public}s %{public}s]:%i NDEF payload exceeds the size limit
TNF=%d, Payload Type=%@, Payload ID=%@, Payload=%@, ChunkSize=%zu
%c[%{public}s %{public}s]:%i Record serialization error
%c[%{public}s %{public}s]:%i Invalid UTF8 URI string
%c[%{public}s %{public}s]:%i Missing URI field
NFCNDEFPayload.m
Please use -wellKnownTypeTextPayloadWithString:locale: replacement
%c[%{public}s %{public}s]:%i Invalid payload length
%c[%{public}s %{public}s]:%i Empty string
%c[%{public}s %{public}s]:%i Invalid UTF8 character
%%%02X
com.apple.corenfc.session.xpc
nfcd
%c[%{public}s %{public}s]:%i Failed to connect to NFCD
XPC Error
sessionKey
configuration
NFCTag.m
Missing session key
%c[%{public}s %{public}s]:%i Session has been invalidated
Nil delegateQueue
Nil hardwareManager
%c[%{public}s %{public}s]:%i Tag is not connected
%c[%{public}s %{public}s]:%i Error=%@
Nil session
Nil session queue
%c[%{public}s %{public}s]:%i Session queue is not available; dispatching on main queue
v16@?0@"NSError"8
Unavailable initializer
Not available
%c[%{public}s %{public}s]:%i No suitable NDEF tag found
%c[%{public}s %{public}s]:%i Delegate conforms to [NFCNDEFReaderSessionDelegate readerSession:didDetectTags]; polling is auto restarted.
%c[%{public}s %{public}s]:%i Invalid tag object
%c[%{public}s %{public}s]:%i Only tag from the current session is allowed
%c[%{public}s %{public}s]:%i Delegate does not implement -readerSessionDidBecomeActive: method
%c[%{public}s %{public}s]:%i Unknown delegate type: %ld
NFCNDEFTag.m
%c[%{public}s %{public}s]:%i Invalid expectedResponseLength value; should be from 1 to 65536 or -1
%c[%{public}s %{public}s]:%i Invalid APDU format
%c[%{public}s %{public}s]:%i Unexpected Lc & Le field combination
%c[%{public}s %{public}s]:%i Missing data specified by Lc
%c[%{public}s %{public}s]:%i Unexpected extended Lc & short Le combination
%c[%{public}s %{public}s]:%i Unexpected short Lc & extended Le combination
%c[%{public}s %{public}s]:%i Unexpected lc & le field combination
%c[%{public}s %{public}s]:%i Missing data when Lc is > 0
0x%02X, 
0x%02X
Feature not supported
Missing required entitlement
Invalid parameter
Invalid parameter length
Parameter value is out of bound
Tag connection lost
Maximum retries exceeded
Tag response error
Session invalidated
Tag is not connected
Packet length has exceeded the limit
Session invalidated by user
Session timeout
Session invalidated unexpectedly
System resource unavailable
First NDEF tag read
Invalid configuration parameters
NDEF tag is read only
NDEF tag write failed
Insufficient space on NDEF tag
NDEF tag does not contain any NDEF message
NFC radio is disabled
Tag response error / no response
Stack Error
Tag Not NDEF formatted
Reader mode prohibit timer
%c[%{public}s %{public}s]:%i Data block length must be greater than 0
%c[%{public}s %{public}s]:%i Block range must be between 0 to 255 inclusively
%c[%{public}s %{public}s]:%i Unexpected block size of 0
%c[%{public}s %{public}s]:%i Specified range length does not match the number of elements in the data block list
%c[%{public}s %{public}s]:%i Elements in the data block list are inconsistent in size
v64@?0@"NSData"8q16q24q32q40q48@"NSError"56
%c[%{public}s %{public}s]:%i Custom command code must be between 0xA0 to 0xDF inclusively
%c[%{public}s %{public}s]:%i Forcing minimum 20ms delay
%c[%{public}s %{public}s]:%i Invalid NFCPollingOption parameter: 0x%lx
%c[%{public}s %{public}s]:%i PACE-polling enabled
%c[%{public}s %{public}s]:%i Delegate does not implement -tagReaderSessionDidBecomeActive: method
%c[%{public}s %{public}s]:%i Delegate does not implement -tagReaderSession:didDetectTags: method
%c[%{public}s %{public}s]:%i No suitable tag found
{Mode=%ld, passId=%@, url=%@}
B24@?0@8@"NSDictionary"16
v24@?0@"NSError"8@"NSArray"16
MerchantId
SignupUrl
TerminalCap
TerminalProtocol
PassData
Token
StatusCode
%c[%{public}s %{public}s]:%i Restart polling
com.apple.corenfc.useractivity.ndefmessagepayload
%c[%{public}s %{public}s]:%i Unarchive error: %@
%c[%{public}s %{public}s]:%i Unexpected class type for the message
%c[%{public}s %{public}s]:%i Archive error: %@
NFCError
ISO15693TagResponseErrorCode
TagResponseInvalidLength
http://www.
https://www.
http://
https://
tel:
mailto:
ftp://anonymous:anonymous@
ftp://ftp.
ftps://
sftp://
smb://
nfs://
ftp://
dav://
news:
telnet://
imap:
rtsp://
urn:
pop:
sip:
sips:
tftp:
btspp://
btl2cap://
btgoep://
tcpobex://
irdaobex://
file://
urn:epc:id:
urn:epc:tag:
urn:epc:pat:
urn:epc:raw:
urn:epc:
urn:nfc:
%c[%{public}s %{public}s]:%i XPC error: %@
no error
%c[%{public}s %{public}s]:%i Not implemented
%c[%{public}s %{public}s]:%i sessionState=%ld, proxy=%@, error=%@
%c[%{public}s %{public}s]:%i sessionState=%ld, proxy=%@
%c[%{public}s %{public}s]:%i Current connectedTag: %@
None
%c[%{public}s %{public}s]:%i ConnectedTag[%ld]: %@
%c[%{public}s %{public}s]:%i Invalid tag index: %ld
%c[%{public}s %{public}s]:%i External reader detected
NFCReaderSession.m
Session queue is nil
%c[%{public}s %{public}s]:%i Session queue is nil
Delegate queue is nil
%c[%{public}s %{public}s]:%i Defaulting to CoreNFCSessionTypeUnknown
com.apple.corenfc.readersession.delegate
com.apple.corenfc.readersession
%c[%{public}s %{public}s]:%i Dispatch resource init failed
UNKNOWN
NFCReaderSessionDelegate
NFCTagReaderSessionDelegate
NFCNDEFReaderSessionDelegate
NFCVASReaderSessionDelegate
%c[%{public}s %{public}s]:%i Delegate object does not conform to %@ protocol
Unsupported poll mode
%c[%{public}s %{public}s]:%i Disconnecting previous tag
v20@?0@"NSError"8B16
v32@?0@"<NFTag>"8@"NSData"16@"NSError"24
%c[%{public}s %{public}s]:%i Session has not begun
%c[%{public}s %{public}s]:%i code=%ld, finalUIState=%ld, activateCallback=%ld
%c[%{public}s %{public}s]:%i Session does not support invalidation with error
v32@?0q8Q16@"NSError"24
v24@?0@"NSError"8@"<NFNdefMessage>"16
%c[%{public}s %{public}s]:%i Delegate does not implement -readerSession:didDetectTags: method
com.apple.nfcd.service.corenfc
%c[%{public}s %{public}s]:%i error=%@
v28@?0@"NSObject<NFReaderSessionInterface>"8B16@"NSError"20
v20@?0B8@"NSError"12
%c[%{public}s %{public}s]:%i Stack error: %@
%c[%{public}s %{public}s]:%i XPC Error: %@
%c[%{public}s %{public}s]:%i Previous operation in progress
%c[%{public}s %{public}s]:%i HW state query timeout
%c[%{public}s %{public}s]:%i HW support state update: %lu
v32@?0@"<NFCHardwareManagerCallbacks>"8Q16^B24
v32@?0@"<NFCSessionCallbacks>"8Q16^B24
%c[%{public}s %{public}s]:%i Total size of all NDEF records exceeds the size limit
NFCFeliCaTag pollingWithSystemCode:requestCode:timeSlot:completionHandler:
%c[%{public}s %{public}s]:%i Node size must be 2 bytes long
%c[%{public}s %{public}s]:%i System code must not contain the 0xFF wildcard value
NFCFeliCaTag requestServiceWithNodeCodeList:completionHandler:
%c[%{public}s %{public}s]:%i Number of nodes must be between 1 to 32 inclusively
NFCFeliCaTag requestResponseWithCompletionHandler:
NFCFeliCaTag readWithoutEncryptionWithServiceCodeList:blockList:completionHandler:
%c[%{public}s %{public}s]:%i Number of service codes must be between 1 to 16 inclusively
%c[%{public}s %{public}s]:%i Block list element must be 2 or 3 bytes long
NFCFeliCaTag writeWithoutEncryptionWithServiceCodeList:blockList:blockData:completionHandler:
%c[%{public}s %{public}s]:%i Number of elements in the block list and the block data list does not match
%c[%{public}s %{public}s]:%i Block list size exceeds the maximum limit
%c[%{public}s %{public}s]:%i Block data length must be 16 bytes long
NFCFeliCaTag requestSystemCodeWithCompletionHandler:
NFCFeliCaTag requestServiceV2WithNodeCodeList:completionHandler:
NFCFeliCaTag requestSpecificationVersionWithCompletionHandler:
NFCFeliCaTag resetModeWithCompletionHandler:
NFCFeliCaTag sendFeliCaCommandPacket:completionHandler:
%c[%{public}s %{public}s]:%i Command packet length must be between 1 to 254 inclusively
NFCMiFareTag sendMiFareCommand:completionHandler:
NFCMiFareTag sendMiFareISO7816Command:completionHandler:
NFCISO15693ReaderSessionTag sendCustomCommandWithConfiguration:completionHandler:
%c[%{public}s %{public}s]:%i 
%c[%{public}s %{public}s]:%i %@ with response length = %lu
%c[%{public}s %{public}s]:%i %@ in commandConfiguration asNSDataWithError
NFCISO15693ReaderSessionTag readMultipleBlocksWithConfiguration:completionHandler:
%c[%{public}s %{public}s]:%i %@
%c[%{public}s %{public}s]:%i %@ in readConfiguration asNSDataArrayWithUID
%c[%{public}s %{public}s]:%i NDEF payload exceeds the size limit
%c[%{public}s %{public}s]:%i Record serialization error
%c[%{public}s %{public}s]:%i Invalid UTF8 URI string
%c[%{public}s %{public}s]:%i Missing URI field
%c[%{public}s %{public}s]:%i Invalid payload length
%c[%{public}s %{public}s]:%i Empty string
%c[%{public}s %{public}s]:%i Invalid UTF8 character
%c[%{public}s %{public}s]:%i Failed to connect to NFCD
NFCSession xpcInvalidated
NFCSession xpcInterrupted
%c[%{public}s %{public}s]:%i Session has been invalidated
%c[%{public}s %{public}s]:%i Tag is not connected
%c[%{public}s %{public}s]:%i Error=%@
NFCNDEFTag queryNDEFStatusWithCompletionHandler:
NFCNDEFTag readNDEFWithCompletionHandler:
NFCNDEFTag writeLockWithCompletionHandler:
NFCNDEFTag writeNDEF:completionHandler:
%c[%{public}s %{public}s]:%i Session queue is not available; dispatching on main queue
%c[%{public}s %{public}s]:%i No suitable NDEF tag found
NFCNDEFReaderSession restartPolling
%c[%{public}s %{public}s]:%i Delegate conforms to [NFCNDEFReaderSessionDelegate readerSession:didDetectTags]; polling is auto restarted.
NFCNDEFReaderSession connectToTag:completionHandler
%c[%{public}s %{public}s]:%i Invalid tag object
%c[%{public}s %{public}s]:%i Only tag from the current session is allowed
%c[%{public}s %{public}s]:%i Delegate does not implement -readerSessionDidBecomeActive: method
%c[%{public}s %{public}s]:%i Unknown delegate type: %ld
%c[%{public}s %{public}s]:%i Invalid expectedResponseLength value; should be from 1 to 65536 or -1
%c[%{public}s %{public}s]:%i Invalid APDU format
%c[%{public}s %{public}s]:%i Unexpected Lc & Le field combination
%c[%{public}s %{public}s]:%i Missing data specified by Lc
%c[%{public}s %{public}s]:%i Unexpected extended Lc & short Le combination
%c[%{public}s %{public}s]:%i Unexpected short Lc & extended Le combination
%c[%{public}s %{public}s]:%i Unexpected lc & le field combination
%c[%{public}s %{public}s]:%i Missing data when Lc is > 0
NFCISO7816Tag sendCommandAPDU:completionHandler:
NFCISO15693Tag stayQuietWithCompletionHandler:
NFCISO15693Tag readSingleBlockWithRequestFlags:blockNumber:completionHandler:
NFCISO15693Tag writeSingleBlockWithRequestFlags:blockNumber:dataBlock:completionHandler:
%c[%{public}s %{public}s]:%i Data block length must be greater than 0
NFCISO15693Tag lockBlockWithRequestFlags:blockNumber:completionHandler:
NFCISO15693Tag readMultipleBlocksWithRequestFlags:blockRange:completionHandler:
%c[%{public}s %{public}s]:%i Block range must be between 0 to 255 inclusively
%c[%{public}s %{public}s]:%i Unexpected block size of 0
NFCISO15693Tag writeMultipleBlocksWithRequestFlags:blockRange:dataBlocks:completionHandler:
%c[%{public}s %{public}s]:%i Specified range length does not match the number of elements in the data block list
%c[%{public}s %{public}s]:%i Elements in the data block list are inconsistent in size
NFCISO15693Tag selectWithRequestFlags:completionHandler:
NFCISO15693Tag resetToReadyWithRequestFlags:completionHandler:
NFCISO15693Tag writeAFIWithRequestFlag:afi:completionHandler:
NFCISO15693Tag lockAFIWithRequestFlag:completionHandler:
NFCISO15693Tag writeDSFIDWithRequestFlag:dsfid:completionHandler:
NFCISO15693Tag getSystemInfoAndUIDWithRequestFlag:completionHandler:
NFCISO15693Tag getMultipleBlockSecurityStatusWithRequestFlag:blockRange:completionHandler:
NFCISO15693Tag fastReadMultipleBlocksWithRequestFlag:blockRange:completionHandler:
NFCISO15693Tag customCommandWithRequestFlag:customCommandCode:customRequestParameters:completionHandler:
%c[%{public}s %{public}s]:%i Custom command code must be between 0xA0 to 0xDF inclusively
NFCISO15693Tag extendedReadSingleBlockWithRequestFlags:blockNumber:completionHandler:
NFCISO15693Tag extendedWriteSingleBlockWithRequestFlags:blockNumber:dataBlock:completionHandler:
NFCISO15693Tag extendedLockBlockWithRequestFlags:blockNumber:completionHandler:
NFCISO15693Tag extendedReadMultipleBlocksWithRequestFlags:blockRange:completionHandler:
NFCISO15693Tag extendedWriteMultipleBlocksWithRequestFlags:blockRange:dataBlock:completionHandler:
NFCISO15693Tag authenticateWithRequestFlags:cryptoSuiteIdentifier:message:completionHandler:
NFCISO15693Tag keyUpdateWithRequestFlags:keyIdentifier:message:completionHandler:
NFCISO15693Tag challengeWithRequestFlags:cryptoSuiteIdentifier:message:completionHandler:
NFCISO15693Tag readBufferWithRequestFlags:completionHandler:
NFCISO15693Tag extendedGetMultipleBlockSecurityStatusWithRequestFlag:blockRange:completionHandler:
%c[%{public}s %{public}s]:%i Forcing minimum 20ms delay
NFCISO15693Tag extendedFastReadMultipleBlocksWithRequestFlag:blockRange:completionHandler:
NFCISO15693Tag sendRequestWithFlag:commandCode:data:completionHandler:
%c[%{public}s %{public}s]:%i Invalid NFCPollingOption parameter: 0x%lx
%c[%{public}s %{public}s]:%i PACE-polling enabled
NFCTagReaderSession restartPolling
NFCTagReaderSession connectToTag:completionHandler:
%c[%{public}s %{public}s]:%i Delegate does not implement -tagReaderSessionDidBecomeActive: method
%c[%{public}s %{public}s]:%i Delegate does not implement -tagReaderSession:didDetectTags: method
%c[%{public}s %{public}s]:%i No suitable tag found
com.apple.nfcd.vas.presenceCheckTimer
NFCVASReaderSession beginSessionWithConfig:
%c[%{public}s %{public}s]:%i Restart polling
%c[%{public}s %{public}s]:%i Unarchive error: %@
%c[%{public}s %{public}s]:%i Unexpected class type for the message
%c[%{public}s %{public}s]:%i Archive error: %@
NFCReaderSession setAlertMessage:
%c[%{public}s %{public}s]:%i XPC error: %@
NFCReaderSession invalidateSession
NFCReaderSession invalidateSessionWithErrorMessage:
%c[%{public}s %{public}s]:%i Not implemented
%c[%{public}s %{public}s]:%i sessionState=%ld, proxy=%@, error=%@
%c[%{public}s %{public}s]:%i sessionState=%ld, proxy=%@
%c[%{public}s %{public}s]:%i Current connectedTag: %@
%c[%{public}s %{public}s]:%i ConnectedTag[%ld]: %@
%c[%{public}s %{public}s]:%i Invalid tag index: %ld
%c[%{public}s %{public}s]:%i External reader detected
%c[%{public}s %{public}s]:%i Session queue is nil
%c[%{public}s %{public}s]:%i Defaulting to CoreNFCSessionTypeUnknown
NFCReaderSession beginSessionWithConfig:
%c[%{public}s %{public}s]:%i Dispatch resource init failed
%c[%{public}s %{public}s]:%i Delegate object does not conform to %@ protocol
%c[%{public}s %{public}s]:%i Disconnecting previous tag
%c[%{public}s %{public}s]:%i Session has not begun
%c[%{public}s %{public}s]:%i code=%ld, finalUIState=%ld, activateCallback=%ld
%c[%{public}s %{public}s]:%i Session does not support invalidation with error
%c[%{public}s %{public}s]:%i Delegate does not implement -readerSession:didDetectTags: method
NFCISO15693ReaderSession restartPolling
%c[%{public}s %{public}s]:%i error=%@
%c[%{public}s %{public}s]:%i Stack error: %@
%c[%{public}s %{public}s]:%i XPC Error: %@
%c[%{public}s %{public}s]:%i Previous operation in progress
%c[%{public}s %{public}s]:%i HW state query timeout
%c[%{public}s %{public}s]:%i HW support state update: %lu
NFCNDEFMessage
NSSecureCoding
NSCoding
NFCFeliCaTag
NFCTag
NSObject
NSCopying
NFCNDEFTag
NFCMiFareTag
NFCISO15693CustomCommandConfiguration
NFCISO15693ReadMultipleBlocksConfiguration
NFCISO15693ReaderSessionTag
NFCISO15693Tag
NFCHardwareManagerInterface
NFCHardwareManagerCallbacks
NFCNDEFPayload
ConvenienceHelpers
NFCSession
NFCTagCommandConfiguration
NFReaderSessionInterface
NFSessionInterface
NFReaderSessionCallbacks
NFSessionCallbackInterface
NFCNDEFReaderSessionDelegate
NFCNDEFReaderSession
NFCISO7816APDU
NFCISO7816Tag
NFCError
NFCTagReaderSession
NFCVASCommandConfiguration
NFCVASResponse
NFCVASReaderSession
CoreNFC
NFCReaderSessionDelegate
NFCTagReaderSessionDelegate
NFCVASReaderSessionDelegate
NFCReaderSession
NFCSessionCallbacks
NFCISO15693ReaderSession
NFCHardwareManager
T@"<NFTag>",R,N
NF_asHexString
TB,R,N,GisReady
T#,R
T@"<NFCTag>",R,&,N,V_connectedTag
_exportedObject
T@"NSArray",C,N,V_records
_maximumRetries
T@"NSData",C,N,V_payload
_status
T@"NSData",C,N,V_type
addRecordArray:
T@"NSData",R,&,N,V_mobileToken
asNFCISO7816Tag
T@"NSData",R,C,N
chunked
T@"NSObject<NFReaderSessionInterface><NSXPCProxyCreating>",R,&,N
dealloc
T@"NSString",&,N,V_passTypeIdentifier
historicalBytes
T@"NSString",R,&,N
initWithString:
T@"NSURL",&,N,V_url
isEqualToNFTag:
TB,R
isProxy
TB,R,N,GisAvailable
numberWithChar:
TC,N,V_flags
records
TC,R,N
resetModeWithCompletionHandler:
TQ,N,V_customCommandCode
setUrl:
TQ,N,V_maximumRetries
tagReaderSession:didDetectTags:
TQ,N,V_pollMethod
vasData
TQ,R
writeLockWithCompletionHandler:
.cxx_destruct
T@"NSArray",R,C,N,GgetDelegates
SystemCode
Tq,R,N,V_status
T@"<NFCReaderSession>",R,W,N
_connectionLock
T@"NFCHardwareManager",R,N,V_hardwareManager
T@"NSData",C,N,V_identifier
_setConnection:
T@"NSData",C,N,V_requestParameters
_typeNameFormat
T@"NSData",R,&,N
applicationData
T@"NSData",R,&,N,V_vasData
checkNdefSupportWithCompletion:
T@"NSNumber",R,N,V_sessionId
connectToTag:completionHandler:
T@"NSObject<OS_dispatch_queue>",R,N
hardwareManager
T@"NSString",C,N
initWithFormat:
T@"NSString",R,C
instructionCode
T@,R,W,N
isNDEFFormatted
TB,R,N
isReady
TB,R,N,GisInvalidated
payload
TC,N,V_typeNameFormat
release
TQ,N,V_chunkSize
session
TQ,N,V_manufacturerCode
stayQuietWithCompletionHandler:
TQ,N,V_mifareFamily
TQ,N,V_sessionConfig
wellKnownTypeURIPayloadWithURL:
TQ,R,N
Td,N,V_retryInterval
Tq,N,V_mode
Tq,R,N
Tq,R,N,V_delegateType
T{_NSRange=QQ},N,V_range
UTF8String
_MaxRetry
_MaxRetryInterval
_alertMessage
_callbackDidBecomeActive
_callbackDidInvalidateWithError:
_chunkSize
_configuration
_configureInterface:
_connectIfNeeded
_connectTag:error:
_connectWithCompletionHandler:
_connectWithError:
_connectWithSession:outError:
_connectedTag
_connection
_convertMessageToInternal:
_convertVASConfigToInternalRequest:
_convertVASResponseToExternal:
_currentTag
_customCommandCode
_delegate
_delegateQueue
_delegateQueueStarted
_delegateType
_delegates
_disconnectWithError:
_exportedObjectClassName
_exportedObjectInterface
_flags
_fullPacket
_generateRequestHeader:flags:
_getInternalReaderSession
_getPayloadsFromNDEFRecords:
_getURLsFromNDEFMessage:
_hardwareManager
_hwSupportStateUpdate
_identifier
_initWithRecords:
_invalidate
_invalidateAfterFirstRead
_invalidateSessionAndActivateCallbackWithCode:
_invalidateSessionWithCode:
_invalidateSessionWithCode:message:finalUIState:activateCallback:
_invalidationCode
_machServiceName
_manufacturerCode
_mifareFamily
_mobileToken
_mode
_parseResponseData:outError:
_parseResponseErrorWithData:
_passTypeIdentifier
_payload
_payloadForIdentifier:
_payloadOffset
_pollMethod
_presenceCheckTimer
_proxy
_queuedReaderSessions
_range
_readerSessionLock
_records
_remoteObjectInterface
_requestParameters
_restartPollingWithCompletionHandler:
_resumeDelegateQueue
_retryInterval
_sendAPDU:completionHandler:
_sendVASRequests:error:
_sessionConfig
_sessionId
_sessionKey
_sessionQueue
_sessionStartInProgress
_sessionState
_setDelegateQueue:
_setNDEFAvailability:
_setNDEFContainerSize:
_setPayload:object:identifier:dirty:
_setQueue:
_setSession:
_setTag:
_startPollingWithMethod:sessionConfig:completionHandler:
_stopPollingWithCompletionHandler:
_swiftDelegateWrapper
_tag
_tagsRead
_transceiveWithData:completionHandler:
_transceiveWithData:receivedData:commandConfig:error:
_transceiveWithSession:sendData:receivedData:error:
_type
_updateNdefStatusWithSession:
_url
_validateRecords:fromOriginal:
_vasConfig
_vasData
_writeLocked
_wtxRetryWithCommnand:maxRetry:completionHandler:
_xpcQueue
_xpcSession
absoluteString
activateWithToken:completion:
addEntriesFromDictionary:
addNFCHardwareManagerCallbacksListener:
addObject:
alertMessage
allKeysForObject:
allObjects
appendBytes:length:
appendData:
appendFormat:
appendString:
applicationDataCoding
archivedDataWithRootObject:requiringSecureCoding:error:
areFeaturesSupported:completion:
areFeaturesSupported:expiry:completion:
areFeaturesSupported:outError:
asData
asNFCFeliCaTag
asNFCISO15693Tag
asNFCMiFareTag
asNSDataArrayWithUID:error:
asNSDataWithError:
authenticateWithRequestFlags:cryptoSuiteIdentifier:message:completionHandler:
autorelease
available
beginSession
beginSessionWithConfig:
bytes
capacity
challengeWithRequestFlags:cryptoSuiteIdentifier:message:completionHandler:
checkPresenceWithCompletion:
checkPresenceWithError:
chunkSize
class
cleanupNFCHardwareManagerRegistration
code
coder:decodeArrayOfClass:forKey:
compare:options:range:
componentsWithString:
configuration
conformsToProtocol:
connect:completion:
connectTag:completionHandler:
connectTag:error:
connectedTag
copy
copyWithZone:
count
countByEnumeratingWithState:objects:count:
createHandoffTokenWithCompletion:
currentHandler
currentIDm
currentSystemCode
currentTag
customCommandCode
customCommandWithRequestFlag:customCommandCode:customRequestParameters:completionHandler:
data
dataUsingEncoding:
dataUsingEncoding:allowLossyConversion:
debugDescription
decodeIdentifier:manufacturerCode:serialNumber:
decodeIntegerForKey:
decodeObjectOfClass:forKey:
delegate
delegateType
delegates
dequeueReaderSession:
description
dictionaryWithObjects:forKeys:count:
didDetectExternalReaderWithNotification:
didDetectNDEFMessages:fromTags:connectedTagIndex:updateUICallback:
didDetectTags:connectedTagIndex:
didInvalidate
didStartSession:
didTerminate:
didUIControllerInvalidate:
disconnect
disconnectTagWithError:
disconnectWithCardRemoval:completion:
dispatchBlockOnDelegateQueueAsync:
dispatchOnDelegateQueueAsync:
domain
encodeInteger:forKey:
encodeObject:forKey:
encodeWithCoder:
endSession:
enumerateObjectsUsingBlock:
errorWithCode:
errorWithCode:userInfo:
errorWithNFCDError:defaultNFCErrorCode:
exceptionWithName:reason:userInfo:
expectedResponseLength
extendedFastReadMultipleBlocksWithRequestFlag:blockRange:completionHandler:
extendedGetMultipleBlockSecurityStatusWithRequestFlag:blockRange:completionHandler:
extendedLockBlockWithRequestFlags:blockNumber:completionHandler:
extendedReadMultipleBlocksWithRequestFlags:blockRange:completionHandler:
extendedReadSingleBlockWithRequestFlags:blockNumber:completionHandler:
extendedWriteMultipleBlocksWithRequestFlags:blockRange:dataBlocks:completionHandler:
extendedWriteSingleBlockWithRequestFlags:blockNumber:dataBlock:completionHandler:
fastReadMultipleBlocksWithRequestFlag:blockRange:completionHandler:
featureAvailable:
filteredArrayUsingPredicate:
firstObject
flags
getBytes:length:
getDelegates
getMultipleBlockSecurityStatusWithRequestFlag:blockRange:completionHandler:
getReaderSessionWithKey:
getSystemInfoAndUIDWithRequestFlag:completionHandler:
getSystemInfoWithRequestFlag:completionHandler:
handleFailureInMethod:object:file:lineNumber:description:
handleSessionResumed
handleSessionSuspended:
hash
hwStateDidChange:
icManufacturerCode
icSerialNumber
identifier
init
initWithArray:
initWithBytes:length:
initWithCallback:queue:
initWithCapacity:
initWithCode:userInfo:
initWithCoder:
initWithData:
initWithData:encoding:
initWithDelegate:queue:
initWithDelegate:queue:invalidateAfterFirstRead:
initWithDelegate:queue:pollMethod:
initWithDelegate:sessionDelegateType:queue:pollMethod:sessionConfig:
initWithDomain:code:userInfo:
initWithEmptyNdefMessage
initWithFormat:type:identifier:payload:
initWithFormat:type:identifier:payload:chunkSize:
initWithFormatType:type:identifier:payload:chunkSize:
initWithInstructionClass:instructionCode:p1Parameter:p2Parameter:data:expectedResponseLength:
initWithMachServiceName:options:
initWithMachServiceName:remoteObjectInterface:exportedObjectInterface:exportedObject:delegate:
initWithManufacturerCode:customCommandCode:requestParameters:
initWithManufacturerCode:customCommandCode:requestParameters:maximumRetries:retryInterval:
initWithNDEFRecords:
initWithNFNdefMessage:
initWithObjects:
initWithObjectsAndKeys:
initWithPollingOption:delegate:delegateType:queue:
initWithPollingOption:delegate:queue:
initWithPollingOption:swiftDelegate:queue:
initWithRange:chunkSize:
initWithRange:chunkSize:maximumRetries:retryInterval:
initWithSession:tag:startupConfig:
initWithStatus:data:mobileToken:
initWithVASCommandConfigurations:delegate:queue:
initWithVASMode:passTypeIdentifier:url:
initialSelectedAID
instructionClass
interface
interfaceWithProtocol:
invalidate
invalidateSession
invalidateSessionWithErrorMessage:
invalidateSessionWithReason:
invalidated
isAvailable
isEqual:
isEqualToData:
isEqualToNumber:
isEqualToString:
isInvalidated
isKindOfClass:
isMatchingSession:outError:
isMemberOfClass:
isReadOnly
keyUpdateWithRequestFlags:keyIdentifier:message:completionHandler:
languageCode
length
localeWithLocaleIdentifier:
localizedDescription
lock
lockAFIWithRequestFlag:completionHandler:
lockBlockWithRequestFlags:blockNumber:completionHandler:
lockDFSIDWithRequestFlag:completionHandler:
lockDSFIDWithRequestFlag:completionHandler:
manufacturerCode
maximumRetries
messageBegin
messageEnd
mifareFamily
mobileToken
mode
ndefAvailability
ndefContainerSize
ndefMessagePayload
ndefMessageWithData:
ndefReadWithCompletion:
ndefStatus:maxMessageLength:
ndefWrite:completion:
numberWithInt:
numberWithInteger:
numberWithUnsignedChar:
numberWithUnsignedInteger:
objectAtIndex:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
p1Parameter
p2Parameter
passConfigWithMode:passIdentifier:
passTypeIdentifier
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performVAS:completion:
pollMethod
pollingWithSystemCode:requestCode:timeSlot:completionHandler:
predicateWithBlock:
prioritizeSessionWithCompletion:
proprietaryApplicationDataCoding
pupi
queryNDEFStatusWithCompletionHandler:
queueReaderSession:sessionConfig:completion:
queueReaderSession:sessionConfig:completionHandler:
range
readBufferWithRequestFlags:completionHandler:
readMultipleBlocksWithConfiguration:completionHandler:
readMultipleBlocksWithRequestFlags:blockRange:completionHandler:
readNDEFWithCompletionHandler:
readNdefMessageWithError:
readSingleBlockWithRequestFlags:blockNumber:completionHandler:
readWithoutEncryptionWithServiceCodeList:blockList:completionHandler:
readerProxy
readerSession:didDetectNDEFs:
readerSession:didDetectTags:
readerSession:didInvalidateWithError:
readerSession:didReceiveVASResponses:
readerSessionDidBecomeActive:
readingAvailable
ready
recordsFromBytes:length:
recordsWithTNF:type:identifier:payload:chunkSize:outError:
remoteObjectProxy
removeObjectsForKeys:
requestParameters
requestResponseWithCompletionHandler:
requestServiceV2WithNodeCodeList:completionHandler:
requestServiceWithNodeCodeList:completionHandler:
requestSpecificationVersionWithCompletionHandler:
requestSystemCodeWithCompletionHandler:
resetToReadyWithRequestFlags:completionHandler:
resolveURIString:
respondsToSelector:
restartPolling
restartPollingWithCompletion:
resume
retain
retainCount
retryInterval
reverseByteOrder:
selectWithRequestFlags:completionHandler:
selectedAID
self
sendCommandAPDU:completionHandler:
sendCustomCommandWithConfiguration:completionHandler:
sendFeliCaCommandPacket:completionHandler:
sendMiFareCommand:completionHandler:
sendMiFareISO7816Command:completionHandler:
sendRequestWithFlag:commandCode:data:completionHandler:
sessionConfig
sessionConfigWithUIMode:sessionType:initialScanText:vasPass:
sessionId
sessionQueue
setAlertMessage:
setChunkSize:
setClasses:forSelector:argumentIndex:ofReply:
setCustomCommandCode:
setECPPayload:completion:
setExportedInterface:
setExportedObject:
setFlags:
setIdentifier:
setInterface:forSelector:argumentIndex:ofReply:
setInterruptionHandler:
setInvalidationHandler:
setManufacturerCode:
setMaximumRetries:
setMifareFamily:
setMode:
setNdefMessagePayload:
setObject:forKey:
setObject:forKeyedSubscript:
setPassTypeIdentifier:
setPayload:
setPollMethod:
setRange:
setRecords:
setRemoteObjectInterface:
setRequestParameters:
setRetryInterval:
setSessionConfig:
setType:
setTypeNameFormat:
sharedHardwareManager
startPollingForNDEFMessagesWithSessionConfig:completion:
startPollingForTags:sessionConfig:completion:
startTimer:
status
stopPollingWithCompletion:
stopTimer
stringWithUTF8String:
subdataWithRange:
submitBlockOnDelegateQueue:
submitBlockOnSessionQueue:
submitBlockOnSessionQueueWithDelay:block:
substringFromIndex:
substringWithRange:
superclass
supportsSecureCoding
synchronousRemoteObjectProxyWithErrorHandler:
systemCode
tagA
tagB
tagF
tagID
tagReaderSession:didInvalidateWithError:
tagReaderSessionDidBecomeActive:
technology
transceive:completion:
transceive:tagUpdate:error:
type
typeNameFormat
unarchivedObjectOfClass:fromData:error:
unlock
unsignedShortValue
updateSharingUIScanText:completion:
updateSharingUIStateOnInvalidation:completion:
validateDelegate:expectedType:
weakObjectsHashTable
wellKnowTypeTextPayloadWithString:locale:
wellKnownTypeTextPayloadWithLocale:
wellKnownTypeTextPayloadWithString:locale:
wellKnownTypeURIPayload
wellKnownTypeURIPayloadWithString:
writeAFIWithRequestFlag:afi:completionHandler:
writeDSFIDWithRequestFlag:dsfid:completionHandler:
writeLockNdef
writeMultipleBlocksWithRequestFlags:blockRange:dataBlocks:completionHandler:
writeNDEF:completionHandler:
writeNdefMessage:error:
writeProtectNDEFTagWithCompletion:
writeSingleBlockWithRequestFlags:blockNumber:dataBlock:completionHandler:
writeWithoutEncryptionWithServiceCodeList:blockList:blockData:completionHandler:
zone
B16@0:8
@24@0:8@16
B32@0:8@16@24
v24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@16@0:8
Q16@0:8
v16@0:8
@"NSArray"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8^{_NSZone=}16
@"<NFCISO15693Tag>"16@0:8
@"<NFCISO7816Tag>"16@0:8
@"<NFCFeliCaTag>"16@0:8
@"<NFCMiFareTag>"16@0:8
@"<NFCReaderSession>"16@0:8
v24@0:8@?16
v32@0:8@16@?24
v24@0:8@?<v@?QQ@"NSError">16
v24@0:8@?<v@?@"NFCNDEFMessage"@"NSError">16
v32@0:8@"NFCNDEFMessage"16@?<v@?@"NSError">24
v24@0:8@?<v@?@"NSError">16
v48@0:8@16q24q32@?40
v40@0:8@16@24@?32
v48@0:8@16@24@32@?40
v48@0:8@"NSData"16q24q32@?<v@?@"NSData"@"NSData"@"NSError">40
v32@0:8@"NSArray"16@?<v@?@"NSArray"@"NSError">24
v24@0:8@?<v@?q@"NSError">16
v40@0:8@"NSArray"16@"NSArray"24@?<v@?qq@"NSArray"@"NSError">32
v48@0:8@"NSArray"16@"NSArray"24@"NSArray"32@?<v@?qq@"NSError">40
v24@0:8@?<v@?@"NSArray"@"NSError">16
v32@0:8@"NSArray"16@?<v@?qqq@"NSArray"@"NSArray"@"NSError">24
v24@0:8@?<v@?qq@"NSData"@"NSData"@"NSError">16
v24@0:8@?<v@?qq@"NSError">16
v32@0:8@"NSData"16@?<v@?@"NSData"@"NSError">24
@"NSData"16@0:8
v32@0:8@"NFCISO7816APDU"16@?<v@?@"NSData"CC@"NSError">24
@40@0:8@16@24q32
v24@0:8Q16
@40@0:8Q16Q24@32
@56@0:8Q16Q24@32Q40d48
@24@0:8^@16
C16@0:8
v20@0:8C16
@"NSData"
@56@0:8{_NSRange=QQ}16Q32Q40d48
@40@0:8{_NSRange=QQ}16Q32
@32@0:8@16^@24
{_NSRange=QQ}16@0:8
v32@0:8{_NSRange=QQ}16
{_NSRange="location"Q"length"Q}
B40@0:8@16^Q24^@32
v32@0:8C16C20@?24
v40@0:8C16C20@24@?32
v44@0:8C16{_NSRange=QQ}20@?36
v52@0:8C16{_NSRange=QQ}20@36@?44
v28@0:8C16@?20
v44@0:8C16q20@28@?36
v36@0:8C16q20@?28
v48@0:8q16q24@32@?40
v32@0:8@"NFCISO15693CustomCommandConfiguration"16@?<v@?@"NSData"@"NSError">24
v32@0:8@"NFCISO15693ReadMultipleBlocksConfiguration"16@?<v@?@"NSData"@"NSError">24
v32@0:8C16C20@?<v@?@"NSData"@"NSError">24
v40@0:8C16C20@"NSData"24@?<v@?@"NSError">32
v32@0:8C16C20@?<v@?@"NSError">24
v44@0:8C16{_NSRange=QQ}20@?<v@?@"NSArray"@"NSError">36
v52@0:8C16{_NSRange=QQ}20@"NSArray"36@?<v@?@"NSError">44
v28@0:8C16@?<v@?@"NSError">20
v28@0:8C16@?<v@?qqqqq@"NSError">20
v28@0:8C16@?<v@?@"NSData"qqqqq@"NSError">20
v44@0:8C16q20@"NSData"28@?<v@?@"NSData"@"NSError">36
v36@0:8C16q20@?<v@?@"NSData"@"NSError">28
v44@0:8C16q20@"NSData"28@?<v@?@"NSError">36
v36@0:8C16q20@?<v@?@"NSError">28
v44@0:8C16q20@"NSData"28@?<v@?C@"NSData"@"NSError">36
v28@0:8C16@?<v@?C@"NSData"@"NSError">20
v48@0:8q16q24@"NSData"32@?<v@?C@"NSData"@"NSError">40
B48@0:8@16^@24@32^@40
Q24@0:8@16
Vv40@0:8@16@24@?32
Vv32@0:8Q16@?24
Vv40@0:8@"NSObject<NFReaderSessionCallbacks>"16@"NFReaderSessionConfig"24@?<v@?@"NSObject<NFReaderSessionInterface>"B@"NSError">32
Vv32@0:8Q16@?<v@?B@"NSError">24
v20@0:8I16
@44@0:8C16@20@28@36
@52@0:8C16@20@28@36Q44
@32@0:8@16@24
@56@0:8@16@24@32@40@48
@24@0:8@?16
@"NSLock"
@"NSXPCConnection"
@"NSObject<OS_dispatch_queue>"
@"NSXPCInterface"
@"NSString"
@"<NFCSessionCallbacks>"
d16@0:8
v24@0:8d16
q16@0:8
B32@0:8@16^@24
B24@0:8^@16
B48@0:8@16@24^@32^@40
@"<NFTag>"
@"NSNumber"
@"NFCHardwareManager"
Vv24@0:8@?16
Vv32@0:8@16@?24
Vv24@0:8@?<v@?>16
Vv24@0:8@?<v@?@"NSData"@"NSError">16
Vv32@0:8@"NSData"16@?<v@?@"NSError">24
Vv40@0:8Q16Q24@?32
Vv28@0:8B16@?20
Vv32@0:8q16@?24
Vv40@0:8Q16Q24@?<v@?@"NSError">32
Vv32@0:8Q16@?<v@?@"NSError">24
Vv24@0:8@?<v@?@"NSError">16
Vv32@0:8@"<NFTag>"16@?<v@?@"NSError">24
Vv28@0:8B16@?<v@?@"NSError">20
Vv32@0:8@"NSData"16@?<v@?@"<NFTag>"@"NSData"@"NSError">24
Vv24@0:8@?<v@?@"NSError"B>16
Vv32@0:8@"NSString"16@?<v@?@"NSError">24
Vv32@0:8q16@?<v@?@"NSError">24
Vv24@0:8@?<v@?@"NSError"@"<NFNdefMessage>">16
Vv32@0:8@"<NFNdefMessage>"16@?<v@?@"NSError">24
Vv24@0:8@?<v@?qQ@"NSError">16
Vv32@0:8@"NSArray"16@?<v@?@"NSError"@"NSArray">24
v24@0:8@"NSError"16
v24@0:8@"NSData"16
v32@0:8@16Q24
v48@0:8@16@24Q32@?40
v32@0:8@"NSArray"16Q24
v48@0:8@"NSArray"16@"NSArray"24Q32@?<v@?q>40
v24@0:8@"NFFieldNotification"16
v32@0:8@16@24
v32@0:8@"NFCNDEFReaderSession"16@"NSError"24
v32@0:8@"NFCNDEFReaderSession"16@"NSArray"24
v24@0:8@"NFCNDEFReaderSession"16
@56@0:8@16q24@32Q40Q48
@40@0:8@16@24Q32
@36@0:8@16@24B32
@48@0:8C16C20C24C28@32q40
@24@0:8q16
@32@0:8q16@24
@32@0:8@16q24
@24@0:8C16C20
v40@0:8@16q24@?32
@48@0:8q16@24q32@40
@40@0:8q16@24@32
@"<NFCTag>"
v24@0:8q16
@"NSURL"
@40@0:8@16@24@32
@"NFTimer"
v24@0:8@"NFCReaderSession"16
v32@0:8@"NFCReaderSession"16@"NSError"24
v32@0:8@"NFCReaderSession"16@"NSArray"24
v32@0:8@"NFCTagReaderSession"16@"NSError"24
v24@0:8@"NFCTagReaderSession"16
v32@0:8@"NFCTagReaderSession"16@"NSArray"24
v32@0:8@"NFCVASReaderSession"16@"NSError"24
v32@0:8@"NFCVASReaderSession"16@"NSArray"24
v24@0:8@"NFCVASReaderSession"16
B24@0:8Q16
v24@0:8@"NSString"16
v32@0:8Q16@?24
B32@0:8@16q24
v40@0:8Q16Q24@?32
@40@0:8@16^@24^@32
v44@0:8q16@24q32B40
@32@0:8^q16^Q24
@"NSObject<NFReaderSessionInterface><NSXPCProxyCreating>"
@"NSObject<OS_dispatch_group>"
B32@0:8Q16^@24
v40@0:8Q16d24@?32
@"NSHashTable"
@"NFCSession"
@"NSMutableDictionary"
@"NSObject<OS_dispatch_semaphore>"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
