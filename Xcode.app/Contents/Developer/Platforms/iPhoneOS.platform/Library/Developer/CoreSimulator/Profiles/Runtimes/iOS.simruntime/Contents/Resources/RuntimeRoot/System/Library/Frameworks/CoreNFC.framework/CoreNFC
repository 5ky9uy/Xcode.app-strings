@(#)PROGRAM:CoreNFC  PROJECT:CoreNFC-1
records
%c[%s %s]:%i Total size of all NDEF records exceeds the size limit
%c[%s %s]:%i Node size must be 2 bytes long
v8@?0
%c[%s %s]:%i System code must not contain the 0xFF wildcard value
v24@?0@"NSData"8@"NSError"16
%c[%s %s]:%i Number of nodes must be between 1 to 32 inclusively
%c[%s %s]:%i Number of service codes must be between 1 to 16 inclusively
%c[%s %s]:%i Block list element must be 2 or 3 bytes long
%c[%s %s]:%i Number of elements in the block list and the block data list does not match
%c[%s %s]:%i Block list size exceeds the maximum limit
%c[%s %s]:%i Block data length must be 16 bytes long
%c[%s %s]:%i Command packet length must be between 1 to 254 inclusively
NFCISO15693ReaderSessionTag.m
Invalid UID length
%c[%s %s]:%i 
%c[%s %s]:%i %@ with response length = %lu
%c[%s %s]:%i %@ in commandConfiguration asNSDataWithError
%c[%s %s]:%i %@
%c[%s %s]:%i %@ in readConfiguration asNSDataArrayWithUID
typeNameFormat
type
identifier
payload
chunkSize
%c[%s %s]:%i NDEF payload exceeds the size limit
TNF=%d, Payload Type=%@, Payload ID=%@, Payload=%@, ChunkSize=%zu
%c[%s %s]:%i Record serialization error
%c[%s %s]:%i Invalid UTF8 URI string
%c[%s %s]:%i Missing URI field
NFCNDEFPayload.m
Please use -wellKnownTypeTextPayloadWithString:locale: replacement
%c[%s %s]:%i Invalid payload length
%c[%s %s]:%i Empty string
%c[%s %s]:%i Invalid UTF8 character
%%%02X
com.apple.corenfc.session.xpc
nfcd
%c[%s %s]:%i Failed to connect to NFCD
XPC Error
sessionKey
configuration
NFCTag.m
Missing session key
%c[%s %s]:%i Session has been invalidated
Nil delegateQueue
Nil hardwareManager
%c[%s %s]:%i Tag is not connected
%c[%s %s]:%i Error=%@
Nil session
Nil session queue
%c[%s %s]:%i Session queue is not available; dispatching on main queue
v16@?0@"NSError"8
Unavailable initializer
Not available
%c[%s %s]:%i No suitable NDEF tag found
%c[%s %s]:%i Delegate conforms to [NFCNDEFReaderSessionDelegate readerSession:didDetectTags]; polling is auto restarted.
%c[%s %s]:%i Invalid tag object
%c[%s %s]:%i Only tag from the current session is allowed
%c[%s %s]:%i Delegate does not implement -readerSessionDidBecomeActive: method
%c[%s %s]:%i Unknown delegate type: %ld
NFCNDEFTag.m
%c[%s %s]:%i Invalid expectedResponseLength value; should be from 1 to 65536 or -1
%c[%s %s]:%i Invalid APDU format
%c[%s %s]:%i Unexpected Lc & Le field combination
%c[%s %s]:%i Missing data specified by Lc
%c[%s %s]:%i Unexpected extended Lc & short Le combination
%c[%s %s]:%i Unexpected short Lc & extended Le combination
%c[%s %s]:%i Unexpected lc & le field combination
%c[%s %s]:%i Missing data when Lc is > 0
0x%02X, 
0x%02X
Feature not supported
Missing required entitlement
Invalid parameter
Invalid parameter length
Parameter value is out of bound
Tag connection lost
Maximum retries exceeded
Tag response error
Session invalidated
Tag is not connected
Packet length has exceeded the limit
Session invalidated by user
Session timeout
Session invalidated unexpectedly
System resource unavailable
First NDEF tag read
Invalid configuration parameters
NDEF tag is read only
NDEF tag write failed
Insufficient space on NDEF tag
NDEF tag does not contain any NDEF message
NFC radio is disabled
Tag response error / no response
Stack Error
Tag Not NDEF formatted
Reader mode prohibit timer
%c[%s %s]:%i Data block length must be greater than 0
%c[%s %s]:%i Block range must be between 0 to 255 inclusively
%c[%s %s]:%i Unexpected block size of 0
%c[%s %s]:%i Specified range length does not match the number of elements in the data block list
%c[%s %s]:%i Elements in the data block list are inconsistent in size
v64@?0@"NSData"8q16q24q32q40q48@"NSError"56
%c[%s %s]:%i Custom command code must be between 0xA0 to 0xDF inclusively
%c[%s %s]:%i Forcing minimum 20ms delay
%c[%s %s]:%i Invalid NFCPollingOption parameter: 0x%lx
%c[%s %s]:%i PACE-polling enabled
%c[%s %s]:%i Delegate does not implement -tagReaderSessionDidBecomeActive: method
%c[%s %s]:%i Delegate does not implement -tagReaderSession:didDetectTags: method
%c[%s %s]:%i No suitable tag found
{Mode=%ld, passId=%@, url=%@}
B24@?0@8@"NSDictionary"16
v24@?0@"NSError"8@"NSArray"16
MerchantId
SignupUrl
TerminalCap
TerminalProtocol
PassData
Token
StatusCode
%c[%s %s]:%i Restart polling
com.apple.corenfc.useractivity.ndefmessagepayload
%c[%s %s]:%i Unarchive error: %@
%c[%s %s]:%i Unexpected class type for the message
%c[%s %s]:%i Archive error: %@
NFCError
ISO15693TagResponseErrorCode
TagResponseInvalidLength
http://www.
https://www.
http://
https://
tel:
mailto:
ftp://anonymous:anonymous@
ftp://ftp.
ftps://
sftp://
smb://
nfs://
ftp://
dav://
news:
telnet://
imap:
rtsp://
urn:
pop:
sip:
sips:
tftp:
btspp://
btl2cap://
btgoep://
tcpobex://
irdaobex://
file://
urn:epc:id:
urn:epc:tag:
urn:epc:pat:
urn:epc:raw:
urn:epc:
urn:nfc:
%c[%s %s]:%i XPC error: %@
no error
%c[%s %s]:%i Not implemented
%c[%s %s]:%i sessionState=%ld, proxy=%@, error=%@
%c[%s %s]:%i sessionState=%ld, proxy=%@
%c[%s %s]:%i Current connectedTag: %@
None
%c[%s %s]:%i ConnectedTag[%ld]: %@
%c[%s %s]:%i Invalid tag index: %ld
%c[%s %s]:%i External reader detected
NFCReaderSession.m
Session queue is nil
%c[%s %s]:%i Session queue is nil
Delegate queue is nil
%c[%s %s]:%i Defaulting to CoreNFCSessionTypeUnknown
com.apple.corenfc.readersession.delegate
com.apple.corenfc.readersession
%c[%s %s]:%i Dispatch resource init failed
UNKNOWN
NFCReaderSessionDelegate
NFCTagReaderSessionDelegate
NFCNDEFReaderSessionDelegate
NFCVASReaderSessionDelegate
%c[%s %s]:%i Delegate object does not conform to %@ protocol
Unsupported poll mode
%c[%s %s]:%i Disconnecting previous tag
v20@?0@"NSError"8B16
v32@?0@"<NFTag>"8@"NSData"16@"NSError"24
%c[%s %s]:%i Session has not begun
%c[%s %s]:%i code=%ld, finalUIState=%ld, activateCallback=%ld
%c[%s %s]:%i Session does not support invalidation with error
v32@?0q8Q16@"NSError"24
v24@?0@"NSError"8@"<NFNdefMessage>"16
%c[%s %s]:%i Delegate does not implement -readerSession:didDetectTags: method
com.apple.nfcd.service.corenfc
%c[%s %s]:%i error=%@
v28@?0@"NSObject<NFReaderSessionInterface>"8B16@"NSError"20
v20@?0B8@"NSError"12
%c[%s %s]:%i Stack error: %@
%c[%s %s]:%i XPC Error: %@
%c[%s %s]:%i Previous operation in progress
%c[%s %s]:%i HW state query timeout
%c[%s %s]:%i HW support state update: %lu
v32@?0@"<NFCHardwareManagerCallbacks>"8Q16^B24
v32@?0@"<NFCSessionCallbacks>"8Q16^B24
%c[%s %s]:%i Total size of all NDEF records exceeds the size limit
NFCFeliCaTag pollingWithSystemCode:requestCode:timeSlot:completionHandler:
%c[%s %s]:%i Node size must be 2 bytes long
%c[%s %s]:%i System code must not contain the 0xFF wildcard value
NFCFeliCaTag requestServiceWithNodeCodeList:completionHandler:
%c[%s %s]:%i Number of nodes must be between 1 to 32 inclusively
NFCFeliCaTag requestResponseWithCompletionHandler:
NFCFeliCaTag readWithoutEncryptionWithServiceCodeList:blockList:completionHandler:
%c[%s %s]:%i Number of service codes must be between 1 to 16 inclusively
%c[%s %s]:%i Block list element must be 2 or 3 bytes long
NFCFeliCaTag writeWithoutEncryptionWithServiceCodeList:blockList:blockData:completionHandler:
%c[%s %s]:%i Number of elements in the block list and the block data list does not match
%c[%s %s]:%i Block list size exceeds the maximum limit
%c[%s %s]:%i Block data length must be 16 bytes long
NFCFeliCaTag requestSystemCodeWithCompletionHandler:
NFCFeliCaTag requestServiceV2WithNodeCodeList:completionHandler:
NFCFeliCaTag requestSpecificationVersionWithCompletionHandler:
NFCFeliCaTag resetModeWithCompletionHandler:
NFCFeliCaTag sendFeliCaCommandPacket:completionHandler:
%c[%s %s]:%i Command packet length must be between 1 to 254 inclusively
NFCMiFareTag sendMiFareCommand:completionHandler:
NFCMiFareTag sendMiFareISO7816Command:completionHandler:
NFCISO15693ReaderSessionTag sendCustomCommandWithConfiguration:completionHandler:
%c[%s %s]:%i 
%c[%s %s]:%i %@ with response length = %lu
%c[%s %s]:%i %@ in commandConfiguration asNSDataWithError
NFCISO15693ReaderSessionTag readMultipleBlocksWithConfiguration:completionHandler:
%c[%s %s]:%i %@
%c[%s %s]:%i %@ in readConfiguration asNSDataArrayWithUID
%c[%s %s]:%i NDEF payload exceeds the size limit
%c[%s %s]:%i Record serialization error
%c[%s %s]:%i Invalid UTF8 URI string
%c[%s %s]:%i Missing URI field
%c[%s %s]:%i Invalid payload length
%c[%s %s]:%i Empty string
%c[%s %s]:%i Invalid UTF8 character
%c[%s %s]:%i Failed to connect to NFCD
NFCSession xpcInvalidated
NFCSession xpcInterrupted
%c[%s %s]:%i Session has been invalidated
%c[%s %s]:%i Tag is not connected
%c[%s %s]:%i Error=%@
NFCNDEFTag queryNDEFStatusWithCompletionHandler:
NFCNDEFTag readNDEFWithCompletionHandler:
NFCNDEFTag writeLockWithCompletionHandler:
NFCNDEFTag writeNDEF:completionHandler:
%c[%s %s]:%i Session queue is not available; dispatching on main queue
%c[%s %s]:%i No suitable NDEF tag found
NFCNDEFReaderSession restartPolling
%c[%s %s]:%i Delegate conforms to [NFCNDEFReaderSessionDelegate readerSession:didDetectTags]; polling is auto restarted.
NFCNDEFReaderSession connectToTag:completionHandler
%c[%s %s]:%i Invalid tag object
%c[%s %s]:%i Only tag from the current session is allowed
%c[%s %s]:%i Delegate does not implement -readerSessionDidBecomeActive: method
%c[%s %s]:%i Unknown delegate type: %ld
%c[%s %s]:%i Invalid expectedResponseLength value; should be from 1 to 65536 or -1
%c[%s %s]:%i Invalid APDU format
%c[%s %s]:%i Unexpected Lc & Le field combination
%c[%s %s]:%i Missing data specified by Lc
%c[%s %s]:%i Unexpected extended Lc & short Le combination
%c[%s %s]:%i Unexpected short Lc & extended Le combination
%c[%s %s]:%i Unexpected lc & le field combination
%c[%s %s]:%i Missing data when Lc is > 0
NFCISO7816Tag sendCommandAPDU:completionHandler:
NFCISO15693Tag stayQuietWithCompletionHandler:
NFCISO15693Tag readSingleBlockWithRequestFlags:blockNumber:completionHandler:
NFCISO15693Tag writeSingleBlockWithRequestFlags:blockNumber:dataBlock:completionHandler:
%c[%s %s]:%i Data block length must be greater than 0
NFCISO15693Tag lockBlockWithRequestFlags:blockNumber:completionHandler:
NFCISO15693Tag readMultipleBlocksWithRequestFlags:blockRange:completionHandler:
%c[%s %s]:%i Block range must be between 0 to 255 inclusively
%c[%s %s]:%i Unexpected block size of 0
NFCISO15693Tag writeMultipleBlocksWithRequestFlags:blockRange:dataBlocks:completionHandler:
%c[%s %s]:%i Specified range length does not match the number of elements in the data block list
%c[%s %s]:%i Elements in the data block list are inconsistent in size
NFCISO15693Tag selectWithRequestFlags:completionHandler:
NFCISO15693Tag resetToReadyWithRequestFlags:completionHandler:
NFCISO15693Tag writeAFIWithRequestFlag:afi:completionHandler:
NFCISO15693Tag lockAFIWithRequestFlag:completionHandler:
NFCISO15693Tag writeDSFIDWithRequestFlag:dsfid:completionHandler:
NFCISO15693Tag getSystemInfoAndUIDWithRequestFlag:completionHandler:
NFCISO15693Tag getMultipleBlockSecurityStatusWithRequestFlag:blockRange:completionHandler:
NFCISO15693Tag fastReadMultipleBlocksWithRequestFlag:blockRange:completionHandler:
NFCISO15693Tag customCommandWithRequestFlag:customCommandCode:customRequestParameters:completionHandler:
%c[%s %s]:%i Custom command code must be between 0xA0 to 0xDF inclusively
NFCISO15693Tag extendedReadSingleBlockWithRequestFlags:blockNumber:completionHandler:
NFCISO15693Tag extendedWriteSingleBlockWithRequestFlags:blockNumber:dataBlock:completionHandler:
NFCISO15693Tag extendedLockBlockWithRequestFlags:blockNumber:completionHandler:
NFCISO15693Tag extendedReadMultipleBlocksWithRequestFlags:blockRange:completionHandler:
NFCISO15693Tag extendedWriteMultipleBlocksWithRequestFlags:blockRange:dataBlock:completionHandler:
NFCISO15693Tag authenticateWithRequestFlags:cryptoSuiteIdentifier:message:completionHandler:
NFCISO15693Tag keyUpdateWithRequestFlags:keyIdentifier:message:completionHandler:
NFCISO15693Tag challengeWithRequestFlags:cryptoSuiteIdentifier:message:completionHandler:
NFCISO15693Tag readBufferWithRequestFlags:completionHandler:
NFCISO15693Tag extendedGetMultipleBlockSecurityStatusWithRequestFlag:blockRange:completionHandler:
%c[%s %s]:%i Forcing minimum 20ms delay
NFCISO15693Tag extendedFastReadMultipleBlocksWithRequestFlag:blockRange:completionHandler:
NFCISO15693Tag sendRequestWithFlag:commandCode:data:completionHandler:
%c[%s %s]:%i Invalid NFCPollingOption parameter: 0x%lx
%c[%s %s]:%i PACE-polling enabled
NFCTagReaderSession restartPolling
NFCTagReaderSession connectToTag:completionHandler:
%c[%s %s]:%i Delegate does not implement -tagReaderSessionDidBecomeActive: method
%c[%s %s]:%i Delegate does not implement -tagReaderSession:didDetectTags: method
%c[%s %s]:%i No suitable tag found
com.apple.nfcd.vas.presenceCheckTimer
NFCVASReaderSession beginSessionWithConfig:
%c[%s %s]:%i Restart polling
%c[%s %s]:%i Unarchive error: %@
%c[%s %s]:%i Unexpected class type for the message
%c[%s %s]:%i Archive error: %@
NFCReaderSession setAlertMessage:
%c[%s %s]:%i XPC error: %@
NFCReaderSession invalidateSession
NFCReaderSession invalidateSessionWithErrorMessage:
%c[%s %s]:%i Not implemented
%c[%s %s]:%i sessionState=%ld, proxy=%@, error=%@
%c[%s %s]:%i sessionState=%ld, proxy=%@
%c[%s %s]:%i Current connectedTag: %@
%c[%s %s]:%i ConnectedTag[%ld]: %@
%c[%s %s]:%i Invalid tag index: %ld
%c[%s %s]:%i External reader detected
%c[%s %s]:%i Session queue is nil
%c[%s %s]:%i Defaulting to CoreNFCSessionTypeUnknown
NFCReaderSession beginSessionWithConfig:
%c[%s %s]:%i Dispatch resource init failed
%c[%s %s]:%i Delegate object does not conform to %@ protocol
%c[%s %s]:%i Disconnecting previous tag
%c[%s %s]:%i Session has not begun
%c[%s %s]:%i code=%ld, finalUIState=%ld, activateCallback=%ld
%c[%s %s]:%i Session does not support invalidation with error
%c[%s %s]:%i Delegate does not implement -readerSession:didDetectTags: method
NFCISO15693ReaderSession restartPolling
%c[%s %s]:%i error=%@
%c[%s %s]:%i Stack error: %@
%c[%s %s]:%i XPC Error: %@
%c[%s %s]:%i Previous operation in progress
%c[%s %s]:%i HW state query timeout
%c[%s %s]:%i HW support state update: %lu
NFCNDEFMessage
NSSecureCoding
NSCoding
NFCFeliCaTag
NFCTag
NSObject
NSCopying
NFCNDEFTag
NFCMiFareTag
NFCISO15693CustomCommandConfiguration
NFCISO15693ReadMultipleBlocksConfiguration
NFCISO15693ReaderSessionTag
NFCISO15693Tag
NFCHardwareManagerInterface
NFCHardwareManagerCallbacks
NFCNDEFPayload
ConvenienceHelpers
NFCSession
NFCTagCommandConfiguration
NFReaderSessionInterface
NFSessionInterface
NFReaderSessionCallbacks
NFSessionCallbackInterface
NFCNDEFReaderSessionDelegate
NFCNDEFReaderSession
NFCISO7816APDU
NFCISO7816Tag
NFCError
NFCTagReaderSession
NFCVASCommandConfiguration
NFCVASResponse
NFCVASReaderSession
CoreNFC
NFCReaderSessionDelegate
NFCTagReaderSessionDelegate
NFCVASReaderSessionDelegate
NFCReaderSession
NFCSessionCallbacks
NFCISO15693ReaderSession
NFCHardwareManager
init
coder:decodeArrayOfClass:forKey:
encodeObject:forKey:
count
initWithEmptyNdefMessage
countByEnumeratingWithState:objects:count:
type
length
identifier
payload
_initWithRecords:
copy
records
typeNameFormat
initWithFormatType:type:identifier:payload:chunkSize:
addObject:
initWithObjects:
initWithNDEFRecords:
bytes
recordsFromBytes:length:
_validateRecords:fromOriginal:
_getPayloadsFromNDEFRecords:
description
chunkSize
recordsWithTNF:type:identifier:payload:chunkSize:outError:
addRecordArray:
asData
subdataWithRange:
exceptionWithName:reason:userInfo:
messageBegin
messageEnd
chunked
appendData:
initWithData:
wellKnownTypeURIPayload
supportsSecureCoding
ndefMessageWithData:
encodeWithCoder:
initWithCoder:
TB,R
initWithNFNdefMessage:
_getURLsFromNDEFMessage:
setRecords:
.cxx_destruct
_records
T@"NSArray",C,N,V_records
TQ,R,N
copyWithZone:
systemCode
errorWithCode:
dispatchOnDelegateQueueAsync:
initWithBytes:length:
dictionaryWithObjects:forKeys:count:
errorWithCode:userInfo:
sendFeliCaCommandPacket:completionHandler:
appendBytes:length:
_transceiveWithData:completionHandler:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
asNFCISO15693Tag
asNFCISO7816Tag
asNFCFeliCaTag
asNFCMiFareTag
session
isAvailable
T@"<NFCReaderSession>",R,W,N
available
TB,R,N,GisAvailable
queryNDEFStatusWithCompletionHandler:
readNDEFWithCompletionHandler:
writeNDEF:completionHandler:
writeLockWithCompletionHandler:
pollingWithSystemCode:requestCode:timeSlot:completionHandler:
requestServiceWithNodeCodeList:completionHandler:
requestResponseWithCompletionHandler:
readWithoutEncryptionWithServiceCodeList:blockList:completionHandler:
writeWithoutEncryptionWithServiceCodeList:blockList:blockData:completionHandler:
requestSystemCodeWithCompletionHandler:
requestServiceV2WithNodeCodeList:completionHandler:
requestSpecificationVersionWithCompletionHandler:
resetModeWithCompletionHandler:
currentSystemCode
currentIDm
T@"NSData",R,&,N
initWithSession:tag:startupConfig:
_sendAPDU:completionHandler:
sendMiFareCommand:completionHandler:
sendMiFareISO7816Command:completionHandler:
mifareFamily
historicalBytes
T@"NSData",R,C,N
setMifareFamily:
_mifareFamily
TQ,N,V_mifareFamily
setManufacturerCode:
setCustomCommandCode:
setRequestParameters:
setFlags:
initWithManufacturerCode:customCommandCode:requestParameters:maximumRetries:retryInterval:
setMaximumRetries:
setRetryInterval:
initWithManufacturerCode:customCommandCode:requestParameters:
asNSDataWithError:
manufacturerCode
customCommandCode
requestParameters
flags
_flags
_manufacturerCode
_customCommandCode
_requestParameters
TC,N,V_flags
TQ,N,V_manufacturerCode
TQ,N,V_customCommandCode
T@"NSData",C,N,V_requestParameters
setRange:
setChunkSize:
initWithRange:chunkSize:maximumRetries:retryInterval:
initWithRange:chunkSize:
asNSDataArrayWithUID:error:
range
_chunkSize
_range
T{_NSRange=QQ},N,V_range
TQ,N,V_chunkSize
maximumRetries
_MaxRetry
retryInterval
_MaxRetryInterval
_getInternalReaderSession
_transceiveWithSession:sendData:receivedData:error:
code
initWithCapacity:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
reverseByteOrder:
decodeIdentifier:manufacturerCode:serialNumber:
_parseResponseErrorWithData:
numberWithUnsignedInteger:
_transceiveWithData:receivedData:commandConfig:error:
_parseResponseData:outError:
sendCustomCommandWithConfiguration:completionHandler:
readMultipleBlocksWithConfiguration:completionHandler:
stayQuietWithCompletionHandler:
readSingleBlockWithRequestFlags:blockNumber:completionHandler:
writeSingleBlockWithRequestFlags:blockNumber:dataBlock:completionHandler:
lockBlockWithRequestFlags:blockNumber:completionHandler:
readMultipleBlocksWithRequestFlags:blockRange:completionHandler:
writeMultipleBlocksWithRequestFlags:blockRange:dataBlocks:completionHandler:
selectWithRequestFlags:completionHandler:
resetToReadyWithRequestFlags:completionHandler:
writeAFIWithRequestFlag:afi:completionHandler:
lockAFIWithRequestFlag:completionHandler:
writeDSFIDWithRequestFlag:dsfid:completionHandler:
lockDFSIDWithRequestFlag:completionHandler:
lockDSFIDWithRequestFlag:completionHandler:
getSystemInfoWithRequestFlag:completionHandler:
getSystemInfoAndUIDWithRequestFlag:completionHandler:
getMultipleBlockSecurityStatusWithRequestFlag:blockRange:completionHandler:
fastReadMultipleBlocksWithRequestFlag:blockRange:completionHandler:
customCommandWithRequestFlag:customCommandCode:customRequestParameters:completionHandler:
extendedReadSingleBlockWithRequestFlags:blockNumber:completionHandler:
extendedWriteSingleBlockWithRequestFlags:blockNumber:dataBlock:completionHandler:
extendedLockBlockWithRequestFlags:blockNumber:completionHandler:
extendedReadMultipleBlocksWithRequestFlags:blockRange:completionHandler:
extendedWriteMultipleBlocksWithRequestFlags:blockRange:dataBlocks:completionHandler:
authenticateWithRequestFlags:cryptoSuiteIdentifier:message:completionHandler:
keyUpdateWithRequestFlags:keyIdentifier:message:completionHandler:
challengeWithRequestFlags:cryptoSuiteIdentifier:message:completionHandler:
readBufferWithRequestFlags:completionHandler:
extendedGetMultipleBlockSecurityStatusWithRequestFlag:blockRange:completionHandler:
extendedFastReadMultipleBlocksWithRequestFlag:blockRange:completionHandler:
sendRequestWithFlag:commandCode:data:completionHandler:
icManufacturerCode
icSerialNumber
queueReaderSession:sessionConfig:completion:
areFeaturesSupported:completion:
interfaceWithProtocol:
interface
setInterface:forSelector:argumentIndex:ofReply:
setClasses:forSelector:argumentIndex:ofReply:
hwStateDidChange:
decodeIntegerForKey:
decodeObjectOfClass:forKey:
encodeInteger:forKey:
initWithFormat:
initWithFormat:type:identifier:payload:
initWithFormat:type:identifier:payload:chunkSize:
setTypeNameFormat:
setType:
setIdentifier:
setPayload:
_typeNameFormat
_type
_identifier
_payload
TC,N,V_typeNameFormat
T@"NSData",C,N,V_type
T@"NSData",C,N,V_identifier
T@"NSData",C,N,V_payload
compare:options:range:
substringFromIndex:
dataUsingEncoding:allowLossyConversion:
dataUsingEncoding:
absoluteString
wellKnownTypeURIPayloadWithString:
languageCode
isEqualToData:
getBytes:length:
appendString:
initWithData:encoding:
componentsWithString:
resolveURIString:
localeWithLocaleIdentifier:
UTF8String
substringWithRange:
appendFormat:
wellKnownTypeTextPayloadWithLocale:
wellKnownTypeURIPayloadWithURL:
wellKnowTypeTextPayloadWithString:locale:
wellKnownTypeTextPayloadWithString:locale:
_invalidate
dealloc
_connection
stringWithUTF8String:
initWithDomain:code:userInfo:
synchronousRemoteObjectProxyWithErrorHandler:
_connectIfNeeded
lock
initWithMachServiceName:options:
unlock
setRemoteObjectInterface:
setExportedInterface:
setExportedObject:
_connectionLock
invalidate
_setConnection:
didInvalidate
setInvalidationHandler:
setInterruptionHandler:
_setQueue:
resume
initWithMachServiceName:remoteObjectInterface:exportedObjectInterface:exportedObject:delegate:
_exportedObjectClassName
_xpcQueue
_remoteObjectInterface
_exportedObjectInterface
_machServiceName
_exportedObject
_delegate
_maximumRetries
_retryInterval
TQ,N,V_maximumRetries
Td,N,V_retryInterval
sharedHardwareManager
getReaderSessionWithKey:
sessionQueue
_setTag:
_setSession:
_setDelegateQueue:
currentTag
isEqualToNFTag:
ndefStatus:maxMessageLength:
submitBlockOnDelegateQueue:
submitBlockOnSessionQueue:
readNdefMessageWithError:
errorWithNFCDError:defaultNFCErrorCode:
writeLockNdef
writeNdefMessage:error:
checkPresenceWithError:
_connectWithSession:outError:
hardwareManager
sessionId
technology
tagB
pupi
tagID
tagA
selectedAID
tagF
SystemCode
applicationData
applicationDataCoding
_disconnectWithError:
connectTag:error:
connectTag:completionHandler:
disconnectTagWithError:
transceive:tagUpdate:error:
isEqualToNumber:
isReadOnly
isNDEFFormatted
capacity
proprietaryApplicationDataCoding
disconnect
configuration
_connectWithCompletionHandler:
isMatchingSession:outError:
_tag
_sessionKey
_delegateQueue
_configuration
_hardwareManager
Tq,R,N
T@"NFCHardwareManager",R,N,V_hardwareManager
endSession:
prioritizeSessionWithCompletion:
createHandoffTokenWithCompletion:
activateWithToken:completion:
startPollingForTags:sessionConfig:completion:
startPollingForNDEFMessagesWithSessionConfig:completion:
stopPollingWithCompletion:
restartPollingWithCompletion:
connect:completion:
disconnectWithCardRemoval:completion:
transceive:completion:
checkPresenceWithCompletion:
updateSharingUIScanText:completion:
updateSharingUIStateOnInvalidation:completion:
ndefReadWithCompletion:
ndefWrite:completion:
checkNdefSupportWithCompletion:
writeProtectNDEFTagWithCompletion:
setECPPayload:completion:
performVAS:completion:
_configureInterface:
didStartSession:
handleSessionSuspended:
handleSessionResumed
didTerminate:
didUIControllerInvalidate:
didDetectTags:connectedTagIndex:
didDetectNDEFMessages:fromTags:connectedTagIndex:updateUICallback:
didDetectExternalReaderWithNotification:
delegateType
delegate
initWithArray:
readerSession:didDetectTags:
objectAtIndexedSubscript:
readerSession:didDetectNDEFs:
invalidateSessionWithReason:
initWithDelegate:queue:invalidateAfterFirstRead:
readerSession:didInvalidateWithError:
readerSessionDidBecomeActive:
initWithDelegate:sessionDelegateType:queue:pollMethod:sessionConfig:
featureAvailable:
restartPolling
readingAvailable
initWithDelegate:queue:pollMethod:
connectToTag:completionHandler:
_callbackDidBecomeActive
_invalidateAfterFirstRead
_tagsRead
ndefAvailability
ndefContainerSize
dispatchBlockOnDelegateQueueAsync:
_setNDEFAvailability:
_setNDEFContainerSize:
_updateNdefStatusWithSession:
_connectWithError:
_writeLocked
initWithString:
initWithInstructionClass:instructionCode:p1Parameter:p2Parameter:data:expectedResponseLength:
instructionClass
instructionCode
p1Parameter
p2Parameter
data
expectedResponseLength
_payloadOffset
_fullPacket
TC,R,N
NF_asHexString
sendCommandAPDU:completionHandler:
initialSelectedAID
T@"NSString",R,&,N
TB,R,N
initWithCode:userInfo:
initWithObjectsAndKeys:
addEntriesFromDictionary:
domain
isEqualToString:
numberWithUnsignedChar:
_generateRequestHeader:flags:
firstObject
numberWithChar:
_wtxRetryWithCommnand:maxRetry:completionHandler:
submitBlockOnSessionQueueWithDelay:block:
initWithPollingOption:delegate:delegateType:queue:
tagReaderSessionDidBecomeActive:
tagReaderSession:didDetectTags:
objectAtIndex:
initWithPollingOption:delegate:queue:
initWithPollingOption:swiftDelegate:queue:
connectedTag
_swiftDelegateWrapper
_connectedTag
T@"<NFCTag>",R,&,N,V_connectedTag
initWithVASMode:passTypeIdentifier:url:
setMode:
setPassTypeIdentifier:
setUrl:
mode
passTypeIdentifier
_mode
_passTypeIdentifier
_url
Tq,N,V_mode
T@"NSString",&,N,V_passTypeIdentifier
T@"NSURL",&,N,V_url
initWithStatus:data:mobileToken:
status
vasData
mobileToken
_status
_vasData
_mobileToken
Tq,R,N,V_status
T@"NSData",R,&,N,V_vasData
T@"NSData",R,&,N,V_mobileToken
predicateWithBlock:
filteredArrayUsingPredicate:
startTimer:
initWithCallback:queue:
stopTimer
passConfigWithMode:passIdentifier:
alertMessage
sessionConfigWithUIMode:sessionType:initialScanText:vasPass:
beginSessionWithConfig:
readerProxy
setObject:forKeyedSubscript:
numberWithInt:
objectForKeyedSubscript:
unsignedShortValue
_convertVASConfigToInternalRequest:
_sendVASRequests:error:
_convertVASResponseToExternal:
readerSession:didReceiveVASResponses:
initWithVASCommandConfigurations:delegate:queue:
beginSession
_presenceCheckTimer
_vasConfig
_payloadForIdentifier:
unarchivedObjectOfClass:fromData:error:
archivedDataWithRootObject:requiringSecureCoding:error:
_setPayload:object:identifier:dirty:
ndefMessagePayload
setNdefMessagePayload:
cleanupNFCHardwareManagerRegistration
_invalidateSessionAndActivateCallbackWithCode:
_invalidateSessionWithCode:message:finalUIState:activateCallback:
_invalidateSessionWithCode:
_startPollingWithMethod:sessionConfig:completionHandler:
_callbackDidInvalidateWithError:
_resumeDelegateQueue
validateDelegate:expectedType:
dequeueReaderSession:
tagReaderSession:didInvalidateWithError:
isInvalidated
_connectTag:error:
_restartPollingWithCompletionHandler:
remoteObjectProxy
_convertMessageToInternal:
invalidateSession
invalidateSessionWithErrorMessage:
isReady
setAlertMessage:
ready
TB,R,N,GisReady
T@"NSString",C,N
_stopPollingWithCompletionHandler:
pollMethod
setPollMethod:
sessionConfig
setSessionConfig:
_sessionQueue
_proxy
_sessionState
_delegateQueueStarted
_invalidationCode
_currentTag
_sessionStartInProgress
_alertMessage
_pollMethod
_sessionConfig
_sessionId
_delegateType
TQ,N,V_pollMethod
TQ,N,V_sessionConfig
invalidated
TB,R,N,GisInvalidated
T@"NSObject<NFReaderSessionInterface><NSXPCProxyCreating>",R,&,N
T@"<NFTag>",R,N
T@"NSNumber",R,N,V_sessionId
Tq,R,N,V_delegateType
T@,R,W,N
T@"NSObject<OS_dispatch_queue>",R,N
initWithDelegate:queue:
weakObjectsHashTable
numberWithInteger:
localizedDescription
setObject:forKey:
allKeysForObject:
removeObjectsForKeys:
allObjects
areFeaturesSupported:outError:
objectForKey:
enumerateObjectsUsingBlock:
queueReaderSession:sessionConfig:completionHandler:
getDelegates
addNFCHardwareManagerCallbacksListener:
areFeaturesSupported:expiry:completion:
_delegates
_xpcSession
_queuedReaderSessions
_hwSupportStateUpdate
_readerSessionLock
delegates
T@"NSArray",R,C,N,GgetDelegates
B16@0:8
@24@0:8@16
B32@0:8@16@24
v24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@16@0:8
Q16@0:8
v16@0:8
@"NSArray"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8^{_NSZone=}16
@"<NFCISO15693Tag>"16@0:8
@"<NFCISO7816Tag>"16@0:8
@"<NFCFeliCaTag>"16@0:8
@"<NFCMiFareTag>"16@0:8
@"<NFCReaderSession>"16@0:8
v24@0:8@?16
v32@0:8@16@?24
v24@0:8@?<v@?QQ@"NSError">16
v24@0:8@?<v@?@"NFCNDEFMessage"@"NSError">16
v32@0:8@"NFCNDEFMessage"16@?<v@?@"NSError">24
v24@0:8@?<v@?@"NSError">16
v48@0:8@16q24q32@?40
v40@0:8@16@24@?32
v48@0:8@16@24@32@?40
v48@0:8@"NSData"16q24q32@?<v@?@"NSData"@"NSData"@"NSError">40
v32@0:8@"NSArray"16@?<v@?@"NSArray"@"NSError">24
v24@0:8@?<v@?q@"NSError">16
v40@0:8@"NSArray"16@"NSArray"24@?<v@?qq@"NSArray"@"NSError">32
v48@0:8@"NSArray"16@"NSArray"24@"NSArray"32@?<v@?qq@"NSError">40
v24@0:8@?<v@?@"NSArray"@"NSError">16
v32@0:8@"NSArray"16@?<v@?qqq@"NSArray"@"NSArray"@"NSError">24
v24@0:8@?<v@?qq@"NSData"@"NSData"@"NSError">16
v24@0:8@?<v@?qq@"NSError">16
v32@0:8@"NSData"16@?<v@?@"NSData"@"NSError">24
@"NSData"16@0:8
v32@0:8@"NFCISO7816APDU"16@?<v@?@"NSData"CC@"NSError">24
@40@0:8@16@24q32
v24@0:8Q16
@40@0:8Q16Q24@32
@56@0:8Q16Q24@32Q40d48
@24@0:8^@16
C16@0:8
v20@0:8C16
@"NSData"
@56@0:8{_NSRange=QQ}16Q32Q40d48
@40@0:8{_NSRange=QQ}16Q32
@32@0:8@16^@24
{_NSRange=QQ}16@0:8
v32@0:8{_NSRange=QQ}16
{_NSRange="location"Q"length"Q}
B40@0:8@16^Q24^@32
v32@0:8C16C20@?24
v40@0:8C16C20@24@?32
v44@0:8C16{_NSRange=QQ}20@?36
v52@0:8C16{_NSRange=QQ}20@36@?44
v28@0:8C16@?20
v44@0:8C16q20@28@?36
v36@0:8C16q20@?28
v48@0:8q16q24@32@?40
v32@0:8@"NFCISO15693CustomCommandConfiguration"16@?<v@?@"NSData"@"NSError">24
v32@0:8@"NFCISO15693ReadMultipleBlocksConfiguration"16@?<v@?@"NSData"@"NSError">24
v32@0:8C16C20@?<v@?@"NSData"@"NSError">24
v40@0:8C16C20@"NSData"24@?<v@?@"NSError">32
v32@0:8C16C20@?<v@?@"NSError">24
v44@0:8C16{_NSRange=QQ}20@?<v@?@"NSArray"@"NSError">36
v52@0:8C16{_NSRange=QQ}20@"NSArray"36@?<v@?@"NSError">44
v28@0:8C16@?<v@?@"NSError">20
v28@0:8C16@?<v@?qqqqq@"NSError">20
v28@0:8C16@?<v@?@"NSData"qqqqq@"NSError">20
v44@0:8C16q20@"NSData"28@?<v@?@"NSData"@"NSError">36
v36@0:8C16q20@?<v@?@"NSData"@"NSError">28
v44@0:8C16q20@"NSData"28@?<v@?@"NSError">36
v36@0:8C16q20@?<v@?@"NSError">28
v44@0:8C16q20@"NSData"28@?<v@?C@"NSData"@"NSError">36
v28@0:8C16@?<v@?C@"NSData"@"NSError">20
v48@0:8q16q24@"NSData"32@?<v@?C@"NSData"@"NSError">40
B48@0:8@16^@24@32^@40
Q24@0:8@16
Vv40@0:8@16@24@?32
Vv32@0:8Q16@?24
Vv40@0:8@"NSObject<NFReaderSessionCallbacks>"16@"NFReaderSessionConfig"24@?<v@?@"NSObject<NFReaderSessionInterface>"B@"NSError">32
Vv32@0:8Q16@?<v@?B@"NSError">24
v20@0:8I16
@44@0:8C16@20@28@36
@52@0:8C16@20@28@36Q44
@32@0:8@16@24
@56@0:8@16@24@32@40@48
@24@0:8@?16
@"NSLock"
@"NSXPCConnection"
@"NSObject<OS_dispatch_queue>"
@"NSXPCInterface"
@"NSString"
@"<NFCSessionCallbacks>"
d16@0:8
v24@0:8d16
q16@0:8
B32@0:8@16^@24
B24@0:8^@16
B48@0:8@16@24^@32^@40
@"<NFTag>"
@"NSNumber"
@"NFCHardwareManager"
Vv24@0:8@?16
Vv32@0:8@16@?24
Vv24@0:8@?<v@?>16
Vv24@0:8@?<v@?@"NSData"@"NSError">16
Vv32@0:8@"NSData"16@?<v@?@"NSError">24
Vv40@0:8Q16Q24@?32
Vv28@0:8B16@?20
Vv32@0:8q16@?24
Vv40@0:8Q16Q24@?<v@?@"NSError">32
Vv32@0:8Q16@?<v@?@"NSError">24
Vv24@0:8@?<v@?@"NSError">16
Vv32@0:8@"<NFTag>"16@?<v@?@"NSError">24
Vv28@0:8B16@?<v@?@"NSError">20
Vv32@0:8@"NSData"16@?<v@?@"<NFTag>"@"NSData"@"NSError">24
Vv24@0:8@?<v@?@"NSError"B>16
Vv32@0:8@"NSString"16@?<v@?@"NSError">24
Vv32@0:8q16@?<v@?@"NSError">24
Vv24@0:8@?<v@?@"NSError"@"<NFNdefMessage>">16
Vv32@0:8@"<NFNdefMessage>"16@?<v@?@"NSError">24
Vv24@0:8@?<v@?qQ@"NSError">16
Vv32@0:8@"NSArray"16@?<v@?@"NSError"@"NSArray">24
v24@0:8@"NSError"16
v24@0:8@"NSData"16
v32@0:8@16Q24
v48@0:8@16@24Q32@?40
v32@0:8@"NSArray"16Q24
v48@0:8@"NSArray"16@"NSArray"24Q32@?<v@?q>40
v24@0:8@"NFFieldNotification"16
v32@0:8@16@24
v32@0:8@"NFCNDEFReaderSession"16@"NSError"24
v32@0:8@"NFCNDEFReaderSession"16@"NSArray"24
v24@0:8@"NFCNDEFReaderSession"16
@56@0:8@16q24@32Q40Q48
@40@0:8@16@24Q32
@36@0:8@16@24B32
@48@0:8C16C20C24C28@32q40
@24@0:8q16
@32@0:8q16@24
@32@0:8@16q24
@24@0:8C16C20
v40@0:8@16q24@?32
@48@0:8q16@24q32@40
@40@0:8q16@24@32
@"<NFCTag>"
v24@0:8q16
@"NSURL"
@40@0:8@16@24@32
@"NFTimer"
v24@0:8@"NFCReaderSession"16
v32@0:8@"NFCReaderSession"16@"NSError"24
v32@0:8@"NFCReaderSession"16@"NSArray"24
v32@0:8@"NFCTagReaderSession"16@"NSError"24
v24@0:8@"NFCTagReaderSession"16
v32@0:8@"NFCTagReaderSession"16@"NSArray"24
v32@0:8@"NFCVASReaderSession"16@"NSError"24
v32@0:8@"NFCVASReaderSession"16@"NSArray"24
v24@0:8@"NFCVASReaderSession"16
B24@0:8Q16
v24@0:8@"NSString"16
v32@0:8Q16@?24
B32@0:8@16q24
v40@0:8Q16Q24@?32
@40@0:8@16^@24^@32
v44@0:8q16@24q32B40
@32@0:8^q16^Q24
@"NSObject<NFReaderSessionInterface><NSXPCProxyCreating>"
@"NSObject<OS_dispatch_group>"
B32@0:8Q16^@24
v40@0:8Q16d24@?32
@"NSHashTable"
@"NFCSession"
@"NSMutableDictionary"
@"NSObject<OS_dispatch_semaphore>"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@(#)PROGRAM:CoreNFC  PROJECT:CoreNFC-1
258);
records
%c[%s %s]:%i Total size of all NDEF records exceeds the size limit
%c[%s %s]:%i Node size must be 2 bytes long
v8@?0
%c[%s %s]:%i System code must not contain the 0xFF wildcard value
v24@?0@"NSData"8@"NSError"16
%c[%s %s]:%i Number of nodes must be between 1 to 32 inclusively
%c[%s %s]:%i Number of service codes must be between 1 to 16 inclusively
%c[%s %s]:%i Block list element must be 2 or 3 bytes long
%c[%s %s]:%i Number of elements in the block list and the block data list does not match
%c[%s %s]:%i Block list size exceeds the maximum limit
%c[%s %s]:%i Block data length must be 16 bytes long
%c[%s %s]:%i Command packet length must be between 1 to 254 inclusively
NFCISO15693ReaderSessionTag.m
Invalid UID length
%c[%s %s]:%i 
%c[%s %s]:%i %@ with response length = %lu
%c[%s %s]:%i %@ in commandConfiguration asNSDataWithError
%c[%s %s]:%i %@
%c[%s %s]:%i %@ in readConfiguration asNSDataArrayWithUID
typeNameFormat
type
identifier
payload
chunkSize
%c[%s %s]:%i NDEF payload exceeds the size limit
TNF=%d, Payload Type=%@, Payload ID=%@, Payload=%@, ChunkSize=%zu
%c[%s %s]:%i Record serialization error
%c[%s %s]:%i Invalid UTF8 URI string
%c[%s %s]:%i Missing URI field
NFCNDEFPayload.m
Please use -wellKnownTypeTextPayloadWithString:locale: replacement
%c[%s %s]:%i Invalid payload length
%c[%s %s]:%i Empty string
%c[%s %s]:%i Invalid UTF8 character
%%%02X
com.apple.corenfc.session.xpc
nfcd
%c[%s %s]:%i Failed to connect to NFCD
XPC Error
sessionKey
configuration
NFCTag.m
Missing session key
%c[%s %s]:%i Session has been invalidated
Nil delegateQueue
Nil hardwareManager
%c[%s %s]:%i Tag is not connected
%c[%s %s]:%i Error=%@
Nil session
Nil session queue
%c[%s %s]:%i Session queue is not available; dispatching on main queue
v16@?0@"NSError"8
Unavailable initializer
Not available
%c[%s %s]:%i No suitable NDEF tag found
%c[%s %s]:%i Delegate conforms to [NFCNDEFReaderSessionDelegate readerSession:didDetectTags]; polling is auto restarted.
%c[%s %s]:%i Invalid tag object
%c[%s %s]:%i Only tag from the current session is allowed
%c[%s %s]:%i Delegate does not implement -readerSessionDidBecomeActive: method
%c[%s %s]:%i Unknown delegate type: %ld
NFCNDEFTag.m
%c[%s %s]:%i Invalid expectedResponseLength value; should be from 1 to 65536 or -1
%c[%s %s]:%i Invalid APDU format
%c[%s %s]:%i Unexpected Lc & Le field combination
%c[%s %s]:%i Missing data specified by Lc
%c[%s %s]:%i Unexpected extended Lc & short Le combination
%c[%s %s]:%i Unexpected short Lc & extended Le combination
%c[%s %s]:%i Unexpected lc & le field combination
%c[%s %s]:%i Missing data when Lc is > 0
0x%02X, 
0x%02X
Feature not supported
Missing required entitlement
Invalid parameter
Invalid parameter length
Parameter value is out of bound
Tag connection lost
Maximum retries exceeded
Tag response error
Session invalidated
Tag is not connected
Packet length has exceeded the limit
Session invalidated by user
Session timeout
Session invalidated unexpectedly
System resource unavailable
First NDEF tag read
Invalid configuration parameters
NDEF tag is read only
NDEF tag write failed
Insufficient space on NDEF tag
NDEF tag does not contain any NDEF message
NFC radio is disabled
Tag response error / no response
Stack Error
Tag Not NDEF formatted
Reader mode prohibit timer
%c[%s %s]:%i Data block length must be greater than 0
%c[%s %s]:%i Block range must be between 0 to 255 inclusively
%c[%s %s]:%i Unexpected block size of 0
%c[%s %s]:%i Specified range length does not match the number of elements in the data block list
%c[%s %s]:%i Elements in the data block list are inconsistent in size
v64@?0@"NSData"8q16q24q32q40q48@"NSError"56
%c[%s %s]:%i Custom command code must be between 0xA0 to 0xDF inclusively
%c[%s %s]:%i Forcing minimum 20ms delay
%c[%s %s]:%i Invalid NFCPollingOption parameter: 0x%lx
%c[%s %s]:%i PACE-polling enabled
%c[%s %s]:%i Delegate does not implement -tagReaderSessionDidBecomeActive: method
%c[%s %s]:%i Delegate does not implement -tagReaderSession:didDetectTags: method
%c[%s %s]:%i No suitable tag found
{Mode=%ld, passId=%@, url=%@}
B24@?0@8@"NSDictionary"16
v24@?0@"NSError"8@"NSArray"16
MerchantId
SignupUrl
TerminalCap
TerminalProtocol
PassData
Token
StatusCode
%c[%s %s]:%i Restart polling
com.apple.corenfc.useractivity.ndefmessagepayload
%c[%s %s]:%i Unarchive error: %@
%c[%s %s]:%i Unexpected class type for the message
%c[%s %s]:%i Archive error: %@
NFCError
ISO15693TagResponseErrorCode
TagResponseInvalidLength
http://www.
https://www.
http://
https://
tel:
mailto:
ftp://anonymous:anonymous@
ftp://ftp.
ftps://
sftp://
smb://
nfs://
ftp://
dav://
news:
telnet://
imap:
rtsp://
urn:
pop:
sip:
sips:
tftp:
btspp://
btl2cap://
btgoep://
tcpobex://
irdaobex://
file://
urn:epc:id:
urn:epc:tag:
urn:epc:pat:
urn:epc:raw:
urn:epc:
urn:nfc:
%c[%s %s]:%i XPC error: %@
no error
%c[%s %s]:%i Not implemented
%c[%s %s]:%i sessionState=%ld, proxy=%@, error=%@
%c[%s %s]:%i sessionState=%ld, proxy=%@
%c[%s %s]:%i Current connectedTag: %@
None
%c[%s %s]:%i ConnectedTag[%ld]: %@
%c[%s %s]:%i Invalid tag index: %ld
%c[%s %s]:%i External reader detected
NFCReaderSession.m
Session queue is nil
%c[%s %s]:%i Session queue is nil
Delegate queue is nil
%c[%s %s]:%i Defaulting to CoreNFCSessionTypeUnknown
com.apple.corenfc.readersession.delegate
com.apple.corenfc.readersession
%c[%s %s]:%i Dispatch resource init failed
UNKNOWN
NFCReaderSessionDelegate
NFCTagReaderSessionDelegate
NFCNDEFReaderSessionDelegate
NFCVASReaderSessionDelegate
%c[%s %s]:%i Delegate object does not conform to %@ protocol
Unsupported poll mode
%c[%s %s]:%i Disconnecting previous tag
v20@?0@"NSError"8B16
v32@?0@"<NFTag>"8@"NSData"16@"NSError"24
%c[%s %s]:%i Session has not begun
%c[%s %s]:%i code=%ld, finalUIState=%ld, activateCallback=%ld
%c[%s %s]:%i Session does not support invalidation with error
v32@?0q8Q16@"NSError"24
v24@?0@"NSError"8@"<NFNdefMessage>"16
%c[%s %s]:%i Delegate does not implement -readerSession:didDetectTags: method
com.apple.nfcd.service.corenfc
%c[%s %s]:%i error=%@
v28@?0@"NSObject<NFReaderSessionInterface>"8B16@"NSError"20
v20@?0B8@"NSError"12
%c[%s %s]:%i Stack error: %@
%c[%s %s]:%i XPC Error: %@
%c[%s %s]:%i Previous operation in progress
%c[%s %s]:%i HW state query timeout
%c[%s %s]:%i HW support state update: %lu
v32@?0@"<NFCHardwareManagerCallbacks>"8Q16^B24
v32@?0@"<NFCSessionCallbacks>"8Q16^B24
%c[%s %s]:%i Total size of all NDEF records exceeds the size limit
NFCFeliCaTag pollingWithSystemCode:requestCode:timeSlot:completionHandler:
%c[%s %s]:%i Node size must be 2 bytes long
%c[%s %s]:%i System code must not contain the 0xFF wildcard value
NFCFeliCaTag requestServiceWithNodeCodeList:completionHandler:
%c[%s %s]:%i Number of nodes must be between 1 to 32 inclusively
NFCFeliCaTag requestResponseWithCompletionHandler:
NFCFeliCaTag readWithoutEncryptionWithServiceCodeList:blockList:completionHandler:
%c[%s %s]:%i Number of service codes must be between 1 to 16 inclusively
%c[%s %s]:%i Block list element must be 2 or 3 bytes long
NFCFeliCaTag writeWithoutEncryptionWithServiceCodeList:blockList:blockData:completionHandler:
%c[%s %s]:%i Number of elements in the block list and the block data list does not match
%c[%s %s]:%i Block list size exceeds the maximum limit
%c[%s %s]:%i Block data length must be 16 bytes long
NFCFeliCaTag requestSystemCodeWithCompletionHandler:
NFCFeliCaTag requestServiceV2WithNodeCodeList:completionHandler:
NFCFeliCaTag requestSpecificationVersionWithCompletionHandler:
NFCFeliCaTag resetModeWithCompletionHandler:
NFCFeliCaTag sendFeliCaCommandPacket:completionHandler:
%c[%s %s]:%i Command packet length must be between 1 to 254 inclusively
NFCMiFareTag sendMiFareCommand:completionHandler:
NFCMiFareTag sendMiFareISO7816Command:completionHandler:
NFCISO15693ReaderSessionTag sendCustomCommandWithConfiguration:completionHandler:
%c[%s %s]:%i 
%c[%s %s]:%i %@ with response length = %lu
%c[%s %s]:%i %@ in commandConfiguration asNSDataWithError
NFCISO15693ReaderSessionTag readMultipleBlocksWithConfiguration:completionHandler:
%c[%s %s]:%i %@
%c[%s %s]:%i %@ in readConfiguration asNSDataArrayWithUID
%c[%s %s]:%i NDEF payload exceeds the size limit
%c[%s %s]:%i Record serialization error
%c[%s %s]:%i Invalid UTF8 URI string
%c[%s %s]:%i Missing URI field
%c[%s %s]:%i Invalid payload length
%c[%s %s]:%i Empty string
%c[%s %s]:%i Invalid UTF8 character
%c[%s %s]:%i Failed to connect to NFCD
NFCSession xpcInvalidated
NFCSession xpcInterrupted
%c[%s %s]:%i Session has been invalidated
%c[%s %s]:%i Tag is not connected
%c[%s %s]:%i Error=%@
NFCNDEFTag queryNDEFStatusWithCompletionHandler:
NFCNDEFTag readNDEFWithCompletionHandler:
NFCNDEFTag writeLockWithCompletionHandler:
NFCNDEFTag writeNDEF:completionHandler:
%c[%s %s]:%i Session queue is not available; dispatching on main queue
%c[%s %s]:%i No suitable NDEF tag found
NFCNDEFReaderSession restartPolling
%c[%s %s]:%i Delegate conforms to [NFCNDEFReaderSessionDelegate readerSession:didDetectTags]; polling is auto restarted.
NFCNDEFReaderSession connectToTag:completionHandler
%c[%s %s]:%i Invalid tag object
%c[%s %s]:%i Only tag from the current session is allowed
%c[%s %s]:%i Delegate does not implement -readerSessionDidBecomeActive: method
%c[%s %s]:%i Unknown delegate type: %ld
%c[%s %s]:%i Invalid expectedResponseLength value; should be from 1 to 65536 or -1
%c[%s %s]:%i Invalid APDU format
%c[%s %s]:%i Unexpected Lc & Le field combination
%c[%s %s]:%i Missing data specified by Lc
%c[%s %s]:%i Unexpected extended Lc & short Le combination
%c[%s %s]:%i Unexpected short Lc & extended Le combination
%c[%s %s]:%i Unexpected lc & le field combination
%c[%s %s]:%i Missing data when Lc is > 0
NFCISO7816Tag sendCommandAPDU:completionHandler:
NFCISO15693Tag stayQuietWithCompletionHandler:
NFCISO15693Tag readSingleBlockWithRequestFlags:blockNumber:completionHandler:
NFCISO15693Tag writeSingleBlockWithRequestFlags:blockNumber:dataBlock:completionHandler:
%c[%s %s]:%i Data block length must be greater than 0
NFCISO15693Tag lockBlockWithRequestFlags:blockNumber:completionHandler:
NFCISO15693Tag readMultipleBlocksWithRequestFlags:blockRange:completionHandler:
%c[%s %s]:%i Block range must be between 0 to 255 inclusively
%c[%s %s]:%i Unexpected block size of 0
NFCISO15693Tag writeMultipleBlocksWithRequestFlags:blockRange:dataBlocks:completionHandler:
%c[%s %s]:%i Specified range length does not match the number of elements in the data block list
%c[%s %s]:%i Elements in the data block list are inconsistent in size
NFCISO15693Tag selectWithRequestFlags:completionHandler:
NFCISO15693Tag resetToReadyWithRequestFlags:completionHandler:
NFCISO15693Tag writeAFIWithRequestFlag:afi:completionHandler:
NFCISO15693Tag lockAFIWithRequestFlag:completionHandler:
NFCISO15693Tag writeDSFIDWithRequestFlag:dsfid:completionHandler:
NFCISO15693Tag getSystemInfoAndUIDWithRequestFlag:completionHandler:
NFCISO15693Tag getMultipleBlockSecurityStatusWithRequestFlag:blockRange:completionHandler:
NFCISO15693Tag fastReadMultipleBlocksWithRequestFlag:blockRange:completionHandler:
NFCISO15693Tag customCommandWithRequestFlag:customCommandCode:customRequestParameters:completionHandler:
%c[%s %s]:%i Custom command code must be between 0xA0 to 0xDF inclusively
NFCISO15693Tag extendedReadSingleBlockWithRequestFlags:blockNumber:completionHandler:
NFCISO15693Tag extendedWriteSingleBlockWithRequestFlags:blockNumber:dataBlock:completionHandler:
NFCISO15693Tag extendedLockBlockWithRequestFlags:blockNumber:completionHandler:
NFCISO15693Tag extendedReadMultipleBlocksWithRequestFlags:blockRange:completionHandler:
NFCISO15693Tag extendedWriteMultipleBlocksWithRequestFlags:blockRange:dataBlock:completionHandler:
NFCISO15693Tag authenticateWithRequestFlags:cryptoSuiteIdentifier:message:completionHandler:
NFCISO15693Tag keyUpdateWithRequestFlags:keyIdentifier:message:completionHandler:
NFCISO15693Tag challengeWithRequestFlags:cryptoSuiteIdentifier:message:completionHandler:
NFCISO15693Tag readBufferWithRequestFlags:completionHandler:
NFCISO15693Tag extendedGetMultipleBlockSecurityStatusWithRequestFlag:blockRange:completionHandler:
%c[%s %s]:%i Forcing minimum 20ms delay
NFCISO15693Tag extendedFastReadMultipleBlocksWithRequestFlag:blockRange:completionHandler:
NFCISO15693Tag sendRequestWithFlag:commandCode:data:completionHandler:
%c[%s %s]:%i Invalid NFCPollingOption parameter: 0x%lx
%c[%s %s]:%i PACE-polling enabled
NFCTagReaderSession restartPolling
NFCTagReaderSession connectToTag:completionHandler:
%c[%s %s]:%i Delegate does not implement -tagReaderSessionDidBecomeActive: method
%c[%s %s]:%i Delegate does not implement -tagReaderSession:didDetectTags: method
%c[%s %s]:%i No suitable tag found
com.apple.nfcd.vas.presenceCheckTimer
NFCVASReaderSession beginSessionWithConfig:
%c[%s %s]:%i Restart polling
%c[%s %s]:%i Unarchive error: %@
%c[%s %s]:%i Unexpected class type for the message
%c[%s %s]:%i Archive error: %@
NFCReaderSession setAlertMessage:
%c[%s %s]:%i XPC error: %@
NFCReaderSession invalidateSession
NFCReaderSession invalidateSessionWithErrorMessage:
%c[%s %s]:%i Not implemented
%c[%s %s]:%i sessionState=%ld, proxy=%@, error=%@
%c[%s %s]:%i sessionState=%ld, proxy=%@
%c[%s %s]:%i Current connectedTag: %@
%c[%s %s]:%i ConnectedTag[%ld]: %@
%c[%s %s]:%i Invalid tag index: %ld
%c[%s %s]:%i External reader detected
%c[%s %s]:%i Session queue is nil
%c[%s %s]:%i Defaulting to CoreNFCSessionTypeUnknown
NFCReaderSession beginSessionWithConfig:
%c[%s %s]:%i Dispatch resource init failed
%c[%s %s]:%i Delegate object does not conform to %@ protocol
%c[%s %s]:%i Disconnecting previous tag
%c[%s %s]:%i Session has not begun
%c[%s %s]:%i code=%ld, finalUIState=%ld, activateCallback=%ld
%c[%s %s]:%i Session does not support invalidation with error
%c[%s %s]:%i Delegate does not implement -readerSession:didDetectTags: method
NFCISO15693ReaderSession restartPolling
%c[%s %s]:%i error=%@
%c[%s %s]:%i Stack error: %@
%c[%s %s]:%i XPC Error: %@
%c[%s %s]:%i Previous operation in progress
%c[%s %s]:%i HW state query timeout
%c[%s %s]:%i HW support state update: %lu
NFCNDEFMessage
NSSecureCoding
NSCoding
NFCFeliCaTag
NFCTag
NSObject
NSCopying
NFCNDEFTag
NFCMiFareTag
NFCISO15693CustomCommandConfiguration
NFCISO15693ReadMultipleBlocksConfiguration
NFCISO15693ReaderSessionTag
NFCISO15693Tag
NFCHardwareManagerInterface
NFCHardwareManagerCallbacks
NFCNDEFPayload
ConvenienceHelpers
NFCSession
NFCTagCommandConfiguration
NFReaderSessionInterface
NFSessionInterface
NFReaderSessionCallbacks
NFSessionCallbackInterface
NFCNDEFReaderSessionDelegate
NFCNDEFReaderSession
NFCISO7816APDU
NFCISO7816Tag
NFCError
NFCTagReaderSession
NFCVASCommandConfiguration
NFCVASResponse
NFCVASReaderSession
CoreNFC
NFCReaderSessionDelegate
NFCTagReaderSessionDelegate
NFCVASReaderSessionDelegate
NFCReaderSession
NFCSessionCallbacks
NFCISO15693ReaderSession
NFCHardwareManager
filteredArrayUsingPredicate:
initWithObjects:
isEqualToData:
_setNDEFAvailability:
tagB
setExportedObject:
stopTimer
numberWithChar:
chunked
lock
tagA
setExportedInterface:
addRecordArray:
copy
localizedDescription
resume
passConfigWithMode:passIdentifier:
archivedDataWithRootObject:requiringSecureCoding:error:
setObject:forKeyedSubscript:
decodeObjectOfClass:forKey:
exceptionWithName:reason:userInfo:
invalidate
addObject:
startTimer:
setObject:forKey:
UTF8String
applicationDataCoding
objectForKeyedSubscript:
objectForKey:
localeWithLocaleIdentifier:
decodeIntegerForKey:
addEntriesFromDictionary:
weakObjectsHashTable
setClasses:forSelector:argumentIndex:ofReply:
interfaceWithProtocol:
substringWithRange:
initWithData:encoding:
absoluteString
technology
ndefContainerSize
initWithMachServiceName:options:
appendString:
languageCode
dataUsingEncoding:allowLossyConversion:
removeObjectsForKeys:
substringFromIndex:
NF_asHexString
enumerateObjectsUsingBlock:
objectAtIndexedSubscript:
bytes
objectAtIndex:
handleFailureInMethod:object:file:lineNumber:description:
ndefAvailability
SystemCode
initWithString:
appendFormat:
dataUsingEncoding:
componentsWithString:
dictionaryWithObjects:forKeys:count:
_payloadForIdentifier:
remoteObjectProxy
sessionConfigWithUIMode:sessionType:initialScanText:vasPass:
setInvalidationHandler:
appendData:
compare:options:range:
numberWithUnsignedInteger:
initWithCapacity:
isEqualToString:
pupi
initWithCallback:queue:
messageEnd
recordsWithTNF:type:identifier:payload:chunkSize:outError:
setInterruptionHandler:
_setQueue:
encodeObject:forKey:
numberWithUnsignedChar:
appendBytes:length:
currentHandler
unsignedShortValue
allObjects
coder:decodeArrayOfClass:forKey:
numberWithInteger:
_setPayload:object:identifier:dirty:
predicateWithBlock:
recordsFromBytes:length:
messageBegin
getBytes:length:
isEqualToNumber:
tagID
initWithFormat:
encodeInteger:forKey:
setInterface:forSelector:argumentIndex:ofReply:
countByEnumeratingWithState:objects:count:
code
firstObject
allKeysForObject:
initWithBytes:length:
subdataWithRange:
initWithObjectsAndKeys:
setRemoteObjectInterface:
unlock
domain
_setNDEFContainerSize:
tagF
count
numberWithInt:
initWithArray:
unarchivedObjectOfClass:fromData:error:
stringWithUTF8String:
init
supportsSecureCoding
ndefMessageWithData:
_validateRecords:fromOriginal:
_getPayloadsFromNDEFRecords:
encodeWithCoder:
initWithCoder:
TB,R
initWithNDEFRecords:
_initWithRecords:
initWithNFNdefMessage:
initWithEmptyNdefMessage
description
asData
length
_getURLsFromNDEFMessage:
records
setRecords:
.cxx_destruct
_records
T@"NSArray",C,N,V_records
TQ,R,N
copyWithZone:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
asNFCISO15693Tag
asNFCISO7816Tag
asNFCFeliCaTag
asNFCMiFareTag
type
session
isAvailable
T@"<NFCReaderSession>",R,W,N
available
TB,R,N,GisAvailable
queryNDEFStatusWithCompletionHandler:
readNDEFWithCompletionHandler:
writeNDEF:completionHandler:
writeLockWithCompletionHandler:
pollingWithSystemCode:requestCode:timeSlot:completionHandler:
requestServiceWithNodeCodeList:completionHandler:
requestResponseWithCompletionHandler:
readWithoutEncryptionWithServiceCodeList:blockList:completionHandler:
writeWithoutEncryptionWithServiceCodeList:blockList:blockData:completionHandler:
requestSystemCodeWithCompletionHandler:
requestServiceV2WithNodeCodeList:completionHandler:
requestSpecificationVersionWithCompletionHandler:
resetModeWithCompletionHandler:
sendFeliCaCommandPacket:completionHandler:
currentSystemCode
currentIDm
T@"NSData",R,&,N
initWithSession:tag:startupConfig:
sendMiFareCommand:completionHandler:
sendMiFareISO7816Command:completionHandler:
mifareFamily
identifier
historicalBytes
T@"NSData",R,C,N
setMifareFamily:
_mifareFamily
TQ,N,V_mifareFamily
setMaximumRetries:
setRetryInterval:
initWithManufacturerCode:customCommandCode:requestParameters:
initWithManufacturerCode:customCommandCode:requestParameters:maximumRetries:retryInterval:
asNSDataWithError:
manufacturerCode
setManufacturerCode:
customCommandCode
setCustomCommandCode:
requestParameters
setRequestParameters:
flags
setFlags:
_flags
_manufacturerCode
_customCommandCode
_requestParameters
TC,N,V_flags
TQ,N,V_manufacturerCode
TQ,N,V_customCommandCode
T@"NSData",C,N,V_requestParameters
initWithRange:chunkSize:maximumRetries:retryInterval:
initWithRange:chunkSize:
asNSDataArrayWithUID:error:
range
setRange:
chunkSize
setChunkSize:
_chunkSize
_range
T{_NSRange=QQ},N,V_range
TQ,N,V_chunkSize
reverseByteOrder:
decodeIdentifier:manufacturerCode:serialNumber:
sendCustomCommandWithConfiguration:completionHandler:
readMultipleBlocksWithConfiguration:completionHandler:
stayQuietWithCompletionHandler:
readSingleBlockWithRequestFlags:blockNumber:completionHandler:
writeSingleBlockWithRequestFlags:blockNumber:dataBlock:completionHandler:
lockBlockWithRequestFlags:blockNumber:completionHandler:
readMultipleBlocksWithRequestFlags:blockRange:completionHandler:
writeMultipleBlocksWithRequestFlags:blockRange:dataBlocks:completionHandler:
selectWithRequestFlags:completionHandler:
resetToReadyWithRequestFlags:completionHandler:
writeAFIWithRequestFlag:afi:completionHandler:
lockAFIWithRequestFlag:completionHandler:
writeDSFIDWithRequestFlag:dsfid:completionHandler:
lockDFSIDWithRequestFlag:completionHandler:
lockDSFIDWithRequestFlag:completionHandler:
getSystemInfoWithRequestFlag:completionHandler:
getSystemInfoAndUIDWithRequestFlag:completionHandler:
getMultipleBlockSecurityStatusWithRequestFlag:blockRange:completionHandler:
fastReadMultipleBlocksWithRequestFlag:blockRange:completionHandler:
customCommandWithRequestFlag:customCommandCode:customRequestParameters:completionHandler:
extendedReadSingleBlockWithRequestFlags:blockNumber:completionHandler:
extendedWriteSingleBlockWithRequestFlags:blockNumber:dataBlock:completionHandler:
extendedLockBlockWithRequestFlags:blockNumber:completionHandler:
extendedReadMultipleBlocksWithRequestFlags:blockRange:completionHandler:
extendedWriteMultipleBlocksWithRequestFlags:blockRange:dataBlocks:completionHandler:
authenticateWithRequestFlags:cryptoSuiteIdentifier:message:completionHandler:
keyUpdateWithRequestFlags:keyIdentifier:message:completionHandler:
challengeWithRequestFlags:cryptoSuiteIdentifier:message:completionHandler:
readBufferWithRequestFlags:completionHandler:
extendedGetMultipleBlockSecurityStatusWithRequestFlag:blockRange:completionHandler:
extendedFastReadMultipleBlocksWithRequestFlag:blockRange:completionHandler:
sendRequestWithFlag:commandCode:data:completionHandler:
icManufacturerCode
icSerialNumber
_transceiveWithData:receivedData:commandConfig:error:
_parseResponseErrorWithData:
_parseResponseData:outError:
queueReaderSession:sessionConfig:completion:
areFeaturesSupported:completion:
interface
hwStateDidChange:
initWithFormat:type:identifier:payload:
initWithFormat:type:identifier:payload:chunkSize:
initWithFormatType:type:identifier:payload:chunkSize:
typeNameFormat
setTypeNameFormat:
setType:
setIdentifier:
payload
setPayload:
_typeNameFormat
_type
_identifier
_payload
TC,N,V_typeNameFormat
T@"NSData",C,N,V_type
T@"NSData",C,N,V_identifier
T@"NSData",C,N,V_payload
wellKnownTypeURIPayload
wellKnownTypeTextPayloadWithLocale:
resolveURIString:
wellKnownTypeURIPayloadWithString:
wellKnownTypeURIPayloadWithURL:
wellKnowTypeTextPayloadWithString:locale:
wellKnownTypeTextPayloadWithString:locale:
dealloc
initWithMachServiceName:remoteObjectInterface:exportedObjectInterface:exportedObject:delegate:
synchronousRemoteObjectProxyWithErrorHandler:
_connection
_setConnection:
_connectionLock
_exportedObjectClassName
_connectIfNeeded
_invalidate
_xpcQueue
_remoteObjectInterface
_exportedObjectInterface
_machServiceName
_exportedObject
_delegate
maximumRetries
retryInterval
_maximumRetries
_retryInterval
TQ,N,V_maximumRetries
Td,N,V_retryInterval
_MaxRetry
_MaxRetryInterval
isReadOnly
isNDEFFormatted
capacity
selectedAID
systemCode
applicationData
proprietaryApplicationDataCoding
disconnect
configuration
_setTag:
_setSession:
_setDelegateQueue:
isEqualToNFTag:
_getInternalReaderSession
dispatchOnDelegateQueueAsync:
_connectWithSession:outError:
_connectWithCompletionHandler:
_disconnectWithError:
_transceiveWithData:completionHandler:
_transceiveWithSession:sendData:receivedData:error:
_sendAPDU:completionHandler:
isMatchingSession:outError:
hardwareManager
_tag
_sessionKey
_delegateQueue
_configuration
_hardwareManager
Tq,R,N
T@"NFCHardwareManager",R,N,V_hardwareManager
endSession:
prioritizeSessionWithCompletion:
createHandoffTokenWithCompletion:
activateWithToken:completion:
startPollingForTags:sessionConfig:completion:
startPollingForNDEFMessagesWithSessionConfig:completion:
stopPollingWithCompletion:
restartPollingWithCompletion:
connect:completion:
disconnectWithCardRemoval:completion:
transceive:completion:
checkPresenceWithCompletion:
updateSharingUIScanText:completion:
updateSharingUIStateOnInvalidation:completion:
ndefReadWithCompletion:
ndefWrite:completion:
checkNdefSupportWithCompletion:
writeProtectNDEFTagWithCompletion:
setECPPayload:completion:
performVAS:completion:
_configureInterface:
didStartSession:
handleSessionSuspended:
handleSessionResumed
didTerminate:
didUIControllerInvalidate:
didDetectTags:connectedTagIndex:
didDetectNDEFMessages:fromTags:connectedTagIndex:updateUICallback:
didDetectExternalReaderWithNotification:
readerSession:didInvalidateWithError:
readerSession:didDetectNDEFs:
readerSession:didDetectTags:
readerSessionDidBecomeActive:
initWithDelegate:sessionDelegateType:queue:pollMethod:sessionConfig:
restartPolling
readingAvailable
initWithDelegate:queue:pollMethod:
initWithDelegate:queue:invalidateAfterFirstRead:
connectToTag:completionHandler:
_callbackDidBecomeActive
_invalidateAfterFirstRead
_tagsRead
_updateNdefStatusWithSession:
_connectWithError:
dispatchBlockOnDelegateQueueAsync:
_writeLocked
initWithInstructionClass:instructionCode:p1Parameter:p2Parameter:data:expectedResponseLength:
initWithData:
instructionClass
instructionCode
p1Parameter
p2Parameter
data
expectedResponseLength
_payloadOffset
_fullPacket
TC,R,N
sendCommandAPDU:completionHandler:
initialSelectedAID
T@"NSString",R,&,N
TB,R,N
initWithDomain:code:userInfo:
errorWithCode:
errorWithCode:userInfo:
errorWithNFCDError:defaultNFCErrorCode:
initWithCode:userInfo:
_generateRequestHeader:flags:
_wtxRetryWithCommnand:maxRetry:completionHandler:
tagReaderSessionDidBecomeActive:
tagReaderSession:didDetectTags:
initWithPollingOption:delegate:delegateType:queue:
initWithPollingOption:delegate:queue:
initWithPollingOption:swiftDelegate:queue:
connectedTag
_swiftDelegateWrapper
_connectedTag
T@"<NFCTag>",R,&,N,V_connectedTag
initWithVASMode:passTypeIdentifier:url:
mode
setMode:
passTypeIdentifier
setPassTypeIdentifier:
setUrl:
_mode
_passTypeIdentifier
_url
Tq,N,V_mode
T@"NSString",&,N,V_passTypeIdentifier
T@"NSURL",&,N,V_url
initWithStatus:data:mobileToken:
status
vasData
mobileToken
_status
_vasData
_mobileToken
Tq,R,N,V_status
T@"NSData",R,&,N,V_vasData
T@"NSData",R,&,N,V_mobileToken
beginSessionWithConfig:
initWithVASCommandConfigurations:delegate:queue:
beginSession
_sendVASRequests:error:
_convertVASConfigToInternalRequest:
_convertVASResponseToExternal:
_presenceCheckTimer
_vasConfig
ndefMessagePayload
setNdefMessagePayload:
tagReaderSession:didInvalidateWithError:
readerSession:didReceiveVASResponses:
featureAvailable:
didInvalidate
invalidateSession
invalidateSessionWithErrorMessage:
isReady
alertMessage
setAlertMessage:
ready
TB,R,N,GisReady
T@"NSString",C,N
isInvalidated
invalidateSessionWithReason:
delegate
sessionQueue
submitBlockOnSessionQueue:
submitBlockOnSessionQueueWithDelay:block:
submitBlockOnDelegateQueue:
_resumeDelegateQueue
cleanupNFCHardwareManagerRegistration
validateDelegate:expectedType:
_startPollingWithMethod:sessionConfig:completionHandler:
_stopPollingWithCompletionHandler:
_restartPollingWithCompletionHandler:
currentTag
connectTag:completionHandler:
connectTag:error:
_connectTag:error:
disconnectTagWithError:
checkPresenceWithError:
transceive:tagUpdate:error:
_callbackDidInvalidateWithError:
_invalidateSessionWithCode:
_invalidateSessionAndActivateCallbackWithCode:
_invalidateSessionWithCode:message:finalUIState:activateCallback:
readerProxy
ndefStatus:maxMessageLength:
readNdefMessageWithError:
_convertMessageToInternal:
writeNdefMessage:error:
writeLockNdef
pollMethod
setPollMethod:
sessionConfig
setSessionConfig:
sessionId
delegateType
_sessionQueue
_proxy
_sessionState
_delegateQueueStarted
_invalidationCode
_currentTag
_sessionStartInProgress
_alertMessage
_pollMethod
_sessionConfig
_sessionId
_delegateType
TQ,N,V_pollMethod
TQ,N,V_sessionConfig
invalidated
TB,R,N,GisInvalidated
T@"NSObject<NFReaderSessionInterface><NSXPCProxyCreating>",R,&,N
T@"<NFTag>",R,N
T@"NSNumber",R,N,V_sessionId
Tq,R,N,V_delegateType
T@,R,W,N
T@"NSObject<OS_dispatch_queue>",R,N
initWithDelegate:queue:
sharedHardwareManager
queueReaderSession:sessionConfig:completionHandler:
dequeueReaderSession:
getDelegates
addNFCHardwareManagerCallbacksListener:
areFeaturesSupported:outError:
areFeaturesSupported:expiry:completion:
getReaderSessionWithKey:
_delegates
_xpcSession
_queuedReaderSessions
_hwSupportStateUpdate
_readerSessionLock
delegates
T@"NSArray",R,C,N,GgetDelegates
B16@0:8
@24@0:8@16
B32@0:8@16@24
v24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@16@0:8
Q16@0:8
v16@0:8
@"NSArray"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8^{_NSZone=}16
@"<NFCISO15693Tag>"16@0:8
@"<NFCISO7816Tag>"16@0:8
@"<NFCFeliCaTag>"16@0:8
@"<NFCMiFareTag>"16@0:8
@"<NFCReaderSession>"16@0:8
v24@0:8@?16
v32@0:8@16@?24
v24@0:8@?<v@?QQ@"NSError">16
v24@0:8@?<v@?@"NFCNDEFMessage"@"NSError">16
v32@0:8@"NFCNDEFMessage"16@?<v@?@"NSError">24
v24@0:8@?<v@?@"NSError">16
v48@0:8@16q24q32@?40
v40@0:8@16@24@?32
v48@0:8@16@24@32@?40
v48@0:8@"NSData"16q24q32@?<v@?@"NSData"@"NSData"@"NSError">40
v32@0:8@"NSArray"16@?<v@?@"NSArray"@"NSError">24
v24@0:8@?<v@?q@"NSError">16
v40@0:8@"NSArray"16@"NSArray"24@?<v@?qq@"NSArray"@"NSError">32
v48@0:8@"NSArray"16@"NSArray"24@"NSArray"32@?<v@?qq@"NSError">40
v24@0:8@?<v@?@"NSArray"@"NSError">16
v32@0:8@"NSArray"16@?<v@?qqq@"NSArray"@"NSArray"@"NSError">24
v24@0:8@?<v@?qq@"NSData"@"NSData"@"NSError">16
v24@0:8@?<v@?qq@"NSError">16
v32@0:8@"NSData"16@?<v@?@"NSData"@"NSError">24
@"NSData"16@0:8
v32@0:8@"NFCISO7816APDU"16@?<v@?@"NSData"CC@"NSError">24
@40@0:8@16@24q32
v24@0:8Q16
@40@0:8Q16Q24@32
@56@0:8Q16Q24@32Q40d48
@24@0:8^@16
C16@0:8
v20@0:8C16
@"NSData"
@56@0:8{_NSRange=QQ}16Q32Q40d48
@40@0:8{_NSRange=QQ}16Q32
@32@0:8@16^@24
{_NSRange=QQ}16@0:8
v32@0:8{_NSRange=QQ}16
{_NSRange="location"Q"length"Q}
B40@0:8@16^Q24^@32
v32@0:8C16C20@?24
v40@0:8C16C20@24@?32
v44@0:8C16{_NSRange=QQ}20@?36
v52@0:8C16{_NSRange=QQ}20@36@?44
v28@0:8C16@?20
v44@0:8C16q20@28@?36
v36@0:8C16q20@?28
v48@0:8q16q24@32@?40
v32@0:8@"NFCISO15693CustomCommandConfiguration"16@?<v@?@"NSData"@"NSError">24
v32@0:8@"NFCISO15693ReadMultipleBlocksConfiguration"16@?<v@?@"NSData"@"NSError">24
v32@0:8C16C20@?<v@?@"NSData"@"NSError">24
v40@0:8C16C20@"NSData"24@?<v@?@"NSError">32
v32@0:8C16C20@?<v@?@"NSError">24
v44@0:8C16{_NSRange=QQ}20@?<v@?@"NSArray"@"NSError">36
v52@0:8C16{_NSRange=QQ}20@"NSArray"36@?<v@?@"NSError">44
v28@0:8C16@?<v@?@"NSError">20
v28@0:8C16@?<v@?qqqqq@"NSError">20
v28@0:8C16@?<v@?@"NSData"qqqqq@"NSError">20
v44@0:8C16q20@"NSData"28@?<v@?@"NSData"@"NSError">36
v36@0:8C16q20@?<v@?@"NSData"@"NSError">28
v44@0:8C16q20@"NSData"28@?<v@?@"NSError">36
v36@0:8C16q20@?<v@?@"NSError">28
v44@0:8C16q20@"NSData"28@?<v@?C@"NSData"@"NSError">36
v28@0:8C16@?<v@?C@"NSData"@"NSError">20
v48@0:8q16q24@"NSData"32@?<v@?C@"NSData"@"NSError">40
B48@0:8@16^@24@32^@40
Q24@0:8@16
Vv40@0:8@16@24@?32
Vv32@0:8Q16@?24
Vv40@0:8@"NSObject<NFReaderSessionCallbacks>"16@"NFReaderSessionConfig"24@?<v@?@"NSObject<NFReaderSessionInterface>"B@"NSError">32
Vv32@0:8Q16@?<v@?B@"NSError">24
v20@0:8I16
@44@0:8C16@20@28@36
@52@0:8C16@20@28@36Q44
@32@0:8@16@24
@56@0:8@16@24@32@40@48
@24@0:8@?16
@"NSLock"
@"NSXPCConnection"
@"NSObject<OS_dispatch_queue>"
@"NSXPCInterface"
@"NSString"
@"<NFCSessionCallbacks>"
d16@0:8
v24@0:8d16
q16@0:8
B32@0:8@16^@24
B24@0:8^@16
B48@0:8@16@24^@32^@40
@"<NFTag>"
@"NSNumber"
@"NFCHardwareManager"
Vv24@0:8@?16
Vv32@0:8@16@?24
Vv24@0:8@?<v@?>16
Vv24@0:8@?<v@?@"NSData"@"NSError">16
Vv32@0:8@"NSData"16@?<v@?@"NSError">24
Vv40@0:8Q16Q24@?32
Vv28@0:8B16@?20
Vv32@0:8q16@?24
Vv40@0:8Q16Q24@?<v@?@"NSError">32
Vv32@0:8Q16@?<v@?@"NSError">24
Vv24@0:8@?<v@?@"NSError">16
Vv32@0:8@"<NFTag>"16@?<v@?@"NSError">24
Vv28@0:8B16@?<v@?@"NSError">20
Vv32@0:8@"NSData"16@?<v@?@"<NFTag>"@"NSData"@"NSError">24
Vv24@0:8@?<v@?@"NSError"B>16
Vv32@0:8@"NSString"16@?<v@?@"NSError">24
Vv32@0:8q16@?<v@?@"NSError">24
Vv24@0:8@?<v@?@"NSError"@"<NFNdefMessage>">16
Vv32@0:8@"<NFNdefMessage>"16@?<v@?@"NSError">24
Vv24@0:8@?<v@?qQ@"NSError">16
Vv32@0:8@"NSArray"16@?<v@?@"NSError"@"NSArray">24
v24@0:8@"NSError"16
v24@0:8@"NSData"16
v32@0:8@16Q24
v48@0:8@16@24Q32@?40
v32@0:8@"NSArray"16Q24
v48@0:8@"NSArray"16@"NSArray"24Q32@?<v@?q>40
v24@0:8@"NFFieldNotification"16
v32@0:8@16@24
v32@0:8@"NFCNDEFReaderSession"16@"NSError"24
v32@0:8@"NFCNDEFReaderSession"16@"NSArray"24
v24@0:8@"NFCNDEFReaderSession"16
@56@0:8@16q24@32Q40Q48
@40@0:8@16@24Q32
@36@0:8@16@24B32
@48@0:8C16C20C24C28@32q40
@24@0:8q16
@32@0:8q16@24
@32@0:8@16q24
@24@0:8C16C20
v40@0:8@16q24@?32
@48@0:8q16@24q32@40
@40@0:8q16@24@32
@"<NFCTag>"
v24@0:8q16
@"NSURL"
@40@0:8@16@24@32
@"NFTimer"
v24@0:8@"NFCReaderSession"16
v32@0:8@"NFCReaderSession"16@"NSError"24
v32@0:8@"NFCReaderSession"16@"NSArray"24
v32@0:8@"NFCTagReaderSession"16@"NSError"24
v24@0:8@"NFCTagReaderSession"16
v32@0:8@"NFCTagReaderSession"16@"NSArray"24
v32@0:8@"NFCVASReaderSession"16@"NSError"24
v32@0:8@"NFCVASReaderSession"16@"NSArray"24
v24@0:8@"NFCVASReaderSession"16
B24@0:8Q16
v24@0:8@"NSString"16
v32@0:8Q16@?24
B32@0:8@16q24
v40@0:8Q16Q24@?32
@40@0:8@16^@24^@32
v44@0:8q16@24q32B40
@32@0:8^q16^Q24
@"NSObject<NFReaderSessionInterface><NSXPCProxyCreating>"
@"NSObject<OS_dispatch_group>"
B32@0:8Q16^@24
v40@0:8Q16d24@?32
@"NSHashTable"
@"NFCSession"
@"NSMutableDictionary"
@"NSObject<OS_dispatch_semaphore>"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
