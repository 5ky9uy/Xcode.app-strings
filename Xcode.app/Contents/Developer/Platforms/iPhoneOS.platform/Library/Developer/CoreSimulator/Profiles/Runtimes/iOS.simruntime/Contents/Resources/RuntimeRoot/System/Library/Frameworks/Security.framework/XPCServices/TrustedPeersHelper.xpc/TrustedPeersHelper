TrustedPeersHelper
ServiceDelegate
TPPeerStatus
CuttlefishResetReason
TPPBCustodianRecoveryKey_Kind
TPPBPeerStableInfoUserControllableViewStatus
CFString
NCFStringRef
CoreFoundation
SetValueTransformer
RecoveryKey
CustodianRecoveryKey
InheritanceKey
Error
Decrypter
RecoveryKeySet
RecoveryKeySetError
RawPolicy
TrustedPeersHelper
OctagonSelfPeerKeys
OctagonSelfPeerKeysError
ConfiguredCloudKit
ConfiguredCuttlefishAPIAsync
RetryingCKCodeService
CKOperationRunner
CuttlefishCKCodeOperationRunner
ContainerNameToCKOperationRunner
CuttlefishCKOperationRunnerCreator
ContainerMap
SignedPeerPermanentInfo
SignedPeerStableInfo
SignedPeerDynamicInfo
SignedRecoveryVoucher
SignedCustodianRecoveryKey
PolicyDocumentKey
PolicyDocumentMapEntry
ValidationTLKShare
ValidateOctagonPeer
ValidationOctagon
ValidateEscrowRecord
ValidationEscrowRecord
ValidationResult
EstablishRequest
EstablishResponse
JoinWithVoucherRequest
JoinWithVoucherResponse
UpdateTrustRequest
UpdateTrustResponse
SetRecoveryKeyRequest
SetRecoveryKeyResponse
RemoveRecoveryKeyRequest
RemoveRecoveryKeyResponse
PerformATOPRVActionsRequest
PerformATOPRVActionsResponse
AddCustodianRecoveryKeyRequest
AddCustodianRecoveryKeyResponse
FetchChangesRequest
FetchChangesResponse
FetchViableBottlesRequest
FetchViableBottlesResponse
FetchRecoverableTLKSharesRequest
FetchRecoverableTLKSharesResponse
FetchPolicyDocumentsRequest
FetchPolicyDocumentsResponse
ValidatePeersRequest
ValidatePeersResponse
ReportHealthRequest
ReportHealthResponse
PushHealthInquiryRequest
PushHealthInquiryResponse
GetRepairActionRequest
EscrowProxyFederationMoveRecordRequest
GetRepairActionResponse
SupportAppDevice
GetSupportAppInfoRequest
GetSupportAppInfoResponse
ResetAccountCDPContentsRequest
ResetAccountCDPContentsResponse
GetClubCertificatesRequest
GetClubCertificatesResponse
EscrowInformation
FetchSOSiCloudIdentityRequest
FetchSOSiCloudIdentityResponse
ViewKeyClass
ResetReason
FilteringRequest
RepairAction
SupportAppDeviceStatus
RecordStatus
SOSViability
SignedVoucher
Peer
PeerDifference
OneOf_Operation
TLKShare
ViewKey
ViewKeys
ViewKeysRecords
Bottle
EscrowPair
Changes
ValidateSOSPeer
ValidationSOS
OneOf_Result
ResetRequest
ResetResponse
View
SupportAppView
Federation
ClubCertificate
Metadata
ClientMetadata
_StorageClass
TrustedPeersHelper
ContainerError
Container
ContainerName
StableChanges
Client
CuttlefishAPI
ResetOperation
EstablishOperation
JoinWithVoucherOperation
UpdateTrustOperation
SetRecoveryKeyOperation
AddCustodianRecoveryKeyOperation
FetchChangesOperation
FetchViableBottlesOperation
FetchRecoverableTlksharesOperation
FetchPolicyDocumentsOperation
ValidatePeersOperation
ReportHealthOperation
PushHealthInquiryOperation
GetRepairActionOperation
GetSupportAppInfoOperation
GetClubCertificatesOperation
FetchSosiCloudIdentityOperation
ResetAccountCdpcontentsOperation
RemoveRecoveryKeyOperation
PerformAtoprvactionsOperation
CuttlefishAPIAsync
CuttlefishAPIAsyncClient
CuttlefishAPIAsyncOperation
CuttlefishAPIAsyncOperationClient
EscrowKeys
EscrowKeysError
BottledPeer
Error
TPPolicyVersion
BottleMO
CustodianRecoveryKeyMO
ContainerMO
EscrowClientMetadataMO
EscrowMetadataMO
EscrowRecordMO
MachineMO
PeerMO
PolicyMO
RecoveryVoucherMO
VoucherMO
@(#)PROGRAM:TrustedPeersHelper  PROJECT:Security-60420.100.335.0.3
3333
T@"CKKSAESSIVKey",&,V_aessivkey
CKKSGroupWithName:
T@"NSString",&,N,V_federationId
JSONObjectWithData:options:error:
T@"NSString",&,V_receiverPeerID
StringAsRecordStatus:
T@"NSString",R,V_appleAccountID
StringAsRecoveryStatus:
TB,V_isExcluded
T#,R
T@"CKKSKeychainBackedKey",&,V_classA
_bottleValidity
T@"CKKSKeychainBackedKey",&,V_tlk
_classC
T@"CKRecordZoneID",&,V_zoneID
_devicePlatform
T@"NSData",&,N,V_backupKeybagDigest
_peerID
T@"NSData",&,N,V_escrowedEncryptionSPKI
_recoveryStatus
T@"NSData",&,N,V_escrowedSpki
_serial
T@"NSData",&,N,V_key
_zoneID
T@"NSData",&,N,V_peerEncryptionSPKI
addPeersObject:
T@"NSData",&,N,V_peerSigningSPKI
allowed
T@"NSData",&,N,V_reserved2
base64EncodedStringWithOptions:
T@"NSData",&,N,V_reserved4
bottles
T@"NSData",&,N,V_reserved6
ccsha384_diSize
T@"NSData",&,N,V_signingSPKI
containsObject:
T@"NSData",&,V_encryptionSPKI
crkInfo
T@"NSData",&,V_signature
dataForSigning:
T@"NSData",&,V_signingSPKI
dealloc
T@"NSDictionary",&,V_peerCountsByMachineID
escrowFetchDate
T@"NSDictionary",&,V_viablePeerCountsByModelID
hasCreationDate
T@"NSSet",&,V_successfulKeysRecovered
hasFederationId
T@"NSSet",R,V_viewList
hasSerialNumber
T@"NSString",&,N,V_bottleId
initRandomKeyPairWithSpecifier:
T@"NSString",&,N,V_currentFederation
initWithLength:
T@"NSString",&,N,V_deviceEnclosureColor
initWithUUID:encryptionKey:signingKey:recoveryString:salt:kind:
T@"NSString",&,N,V_deviceModel
T@"NSString",&,N,V_deviceModelVersion
keyPair
T@"NSString",&,N,V_escrowRecordLabel
makeCKContainer
T@"NSString",&,N,V_intendedFederation
options
T@"NSString",&,N,V_label
preflightPreapprovedJoinWithSpecificUser:preapprovedKeys:reply:
T@"NSString",&,N,V_recordId
prepareInheritancePeerWithSpecificUser:epoch:machineID:bottleSalt:bottleID:modelID:deviceName:serialNumber:osVersion:policyVersion:policySecrets:syncUserControllableViews:secureElementIdentity:signingPrivKeyPersistentRef:encPrivKeyPersistentRef:crk:reply:
T@"NSString",&,N,V_uuid
receiverPublicEncryptionKeySPKI
T@"NSString",&,V_egoPeerID
release
T@"NSString",&,V_osVersion
serviceListener
T@"NSString",&,V_peerID
setAccessGroup:
T@"NSString",&,V_senderPeerID
setCurrentSelf:
T@"NSString",&,V_tlkUUID
setDeviceModel:
T@"NSString",R
setKey:
T@"NSString",R,V_altDSID
setMergePolicy:
T@"NSString",R,V_octagonContextID
setPersistentStoreDescriptions:
T@"NSString",R,V_personaUniqueString
setSigningSPKI:
T@"OTAuthenticatedCiphertext",&,N,V_contents
setVoucherInfo:
T@"OTEscrowRecordMetadataClientMetadata",&,N,V_clientMetadata
T@"OTPrivateKey",&,N,V_peerSigningPrivKey
T@"TPPBPeerStableInfoSetting",&,V_webAccess
trigger
T@"_SFECKeyPair",&,V_encryptionKey
version
T@"_SFECPublicKey",R
zeroKey
.cxx_destruct
T@"NSData",&,N,V_encryptionSPKI
CKPropertiesDescription
T@"NSString",&,N,V_serialNumber
StringAsKeyType:
T@"NSString",&,V_recoveryString
StringAsRecordViability:
T@"_SFECKeyPair",&,V_signingKey
StringAsViabilityStatus:
TQ,V_peerStatus
T@"<CKKSSelfPeer>",&,V_currentSelf
_appleAccountID
T@"CKKSKeychainBackedKey",&,V_classC
_classA
T@"CKKSWrappedAESSIVKey",&,V_wrappedkey
_clientMetadata
T@"NSData",&,N,V_authenticationCode
_encryptionSPKI
T@"NSData",&,N,V_ciphertext
_receiverPeerID
T@"NSData",&,N,V_escrowedSigningSPKI
_recoveryString
T@"NSData",&,N,V_initializationVector
_walrus
T@"NSData",&,N,V_keyData
addCustodianRecoveryKeysObject:
T@"NSData",&,N,V_peerInfo
allKeys
T@"NSData",&,N,V_reserved1
altDSID
T@"NSData",&,N,V_reserved3
bestWebAccessAcrossTrustedPeers
T@"NSData",&,N,V_reserved5
bundleForClass:
T@"NSData",&,N,V_reserved7
ckksIsCKErrorRecordChangedError
T@"NSData",&,V_encryptionKey
copyTo:
T@"NSData",&,V_receiverPublicEncryptionKeySPKI
currentStatePossiblyMissingData
T@"NSData",&,V_signingKey
dataWithLength:
T@"NSData",&,V_wrappedTLK
enabled
T@"NSDictionary",&,V_tlkRecoveryErrors
excludedPeerIDs
T@"NSSet",&,V_allSelves
hasEscrowedSpki
T@"NSSet",&,V_viewList
hasRecordStatus
T@"NSString",&,N,V_bottleID
includedPeerIDs
T@"NSString",&,N,V_bottleValidity
initWithBase64:
T@"NSString",&,N,V_deviceColor
initWithSecKey:
T@"NSString",&,N,V_deviceMid
isProxy
T@"NSString",&,N,V_deviceModelClass
keyData
T@"NSString",&,N,V_deviceName
keyType
T@"NSString",&,N,V_expectedFederationId
modelID
T@"NSString",&,N,V_keyclass
peerSigningSPKI
T@"NSString",&,N,V_peerID
preflightRecoverOctagonUsingRecoveryKey:recoveryKey:salt:reply:
T@"NSString",&,N,V_serial
randomKeyWrappedByParent:error:
T@"NSString",&,N,V_zoneName
recordViability
T@"NSString",&,V_egoPeerMachineID
removeFullyViableEscrowRecords:
T@"NSString",&,V_parentKeyUUID
T@"NSString",&,V_salt
setChangeToken:
T@"NSString",&,V_spid
setDeviceColor:
T@"NSString",&,V_uuid
setDynamicInfo:
T@"NSString",R,C
setKeyMaterialInKeychain:error:
T@"NSString",R,V_cloudkitContainerName
setMoreChanges:
T@"NSString",R,V_peerID
setRecoveryKeyWithSpecificUser:recoveryKey:salt:ckksKeys:reply:
T@"NSString<SecCKKSKeyClass>",&,V_keyclass
setTlk:
T@"OTEscrowRecordMetadata",&,N,V_escrowInformationMetadata
shouldHaveView:
T@"OTPrivateKey",&,N,V_peerEncryptionPrivKey
stringFromDate:
T@"TPPBPeerStableInfoSetting",&,V_walrus
tlkUUID
T@"TPPBSecureElementIdentity",&,V_secureElementIdentity
userPersonaType
T@"_SFECKeyPair",R
viabilityStatus
T@"_SFECPublicKey",R,V_publicEncryptionKey
T@"_SFECPublicKey",R,V_publicSigningKey
TB,N
TB,R
TB,R,N
TB,R,V_isPrimaryAccount
TB,V_identityIsPreapproved
TB,V_isLocked
TB,V_memberChanges
TB,V_newUpload
TB,V_unknownMachineIDsPresent
TPPBPolicyCategoriesByViewWithView:categories:
TPPBPolicyIntroducersByCategoryWithCategory:introducers:
TPPBPolicyKeyViewMappingWithView:matchingRule:
TPPBPolicyModelToCategoryWithPrefix:category:
TQ,N,V_coolOffEnd
TQ,N,V_creationDate
TQ,N,V_devicePlatform
TQ,N,V_remainingAttempts
TQ,N,V_secureBackupMetadataTimestamp
TQ,N,V_secureBackupNumericPassphraseLength
TQ,N,V_secureBackupTimestamp
TQ,N,V_secureBackupUsesComplexPassphrase
TQ,N,V_secureBackupUsesMultipleIcscs
TQ,N,V_secureBackupUsesNumericPassphrase
TQ,N,V_silentAttemptAllowed
TQ,R
TQ,V_egoStatus
TQ,V_numberOfPeersInOctagon
TQ,V_version
Ti,N,V_keyType
Ti,N,V_recordStatus
Ti,N,V_recordViability
Ti,N,V_recoveryStatus
Ti,N,V_viabilityStatus
Ti,V_kind
Tq,V_curve
Tq,V_epoch
Tq,V_poisoned
Tq,V_totalTLKSharesRecovered
URLForResource:withExtension:
UTF8String
UUID
UUIDString
_aessivkey
_allSelves
_altDSID
_authenticationCode
_backupKeybagDigest
_bottleID
_bottleId
_ciphertext
_cloudkitContainerName
_contents
_coolOffEnd
_creationDate
_currentFederation
_currentSelf
_curve
_deviceColor
_deviceEnclosureColor
_deviceMid
_deviceModel
_deviceModelClass
_deviceModelVersion
_deviceName
_egoPeerID
_egoPeerMachineID
_egoStatus
_encryptionKey
_epoch
_escrowInformationMetadata
_escrowRecordLabel
_escrowedEncryptionSPKI
_escrowedSigningSPKI
_escrowedSpki
_expectedFederationId
_federationId
_has
_identityIsPreapproved
_initializationVector
_intendedFederation
_isCKServerInternalError
_isExcluded
_isLocked
_isPrimaryAccount
_isRetryableAKError
_isRetryableNSURLError
_key
_keyData
_keyType
_keyclass
_kind
_label
_memberChanges
_newUpload
_newZeroingDataWithBytes:length:
_numberOfPeersInOctagon
_octagonContextID
_osVersion
_parentKeyUUID
_peerCountsByMachineID
_peerEncryptionPrivKey
_peerEncryptionSPKI
_peerInfo
_peerSigningPrivKey
_peerSigningSPKI
_peerStatus
_personaUniqueString
_poisoned
_publicEncryptionKey
_publicSigningKey
_receiverPublicEncryptionKeySPKI
_recordId
_recordStatus
_recordViability
_remainingAttempts
_reserved1
_reserved2
_reserved3
_reserved4
_reserved5
_reserved6
_reserved7
_salt
_secureBackupMetadataTimestamp
_secureBackupNumericPassphraseLength
_secureBackupTimestamp
_secureBackupUsesComplexPassphrase
_secureBackupUsesMultipleIcscs
_secureBackupUsesNumericPassphrase
_secureElementIdentity
_senderPeerID
_serialNumber
_signature
_signingKey
_signingSPKI
_silentAttemptAllowed
_spid
_successfulKeysRecovered
_tlk
_tlkRecoveryErrors
_tlkUUID
_totalTLKSharesRecovered
_unknownMachineIDsPresent
_uuid
_version
_viabilityStatus
_viablePeerCountsByModelID
_viewList
_webAccess
_wrappedTLK
_wrappedkey
_zoneName
accountOverrideInfo
addAllowedMachineIDsWithSpecificUser:machineIDs:reply:
addBottlesObject:
addFullyViableEscrowRecordsObject:
addLegacyEscrowRecordsObject:
addMachinesObject:
addPartiallyViableEscrowRecordsObject:
addPoliciesObject:
addVouchersObject:
aes256BitSize
aessivkey
allCustodianRecoveryKeys
allMachineIDs
allPeerIDs
allPeers
allPolicyVersions
allRegisteredPolicyVersions
allSelves
allValues
allVouchers
allocWithZone:
allowedMachineIDs
allowsReverseTransformation
andMatch:
appendBytes:length:
appendData:
appleAccountID
archivedDataWithRootObject:requiringSecureCoding:error:
arrayWithObjects:count:
asECKeyPair:
asSFAuthenticatedCiphertext
attemptPreapprovedJoinWithSpecificUser:ckksKeys:tlkShares:preapprovedKeys:reply:
authenticationCode
autorelease
backupKeybagDigest
base64EncodedDataWithOptions:
base64WrappedKey
beneficiaryID
bestPolicyVersion
bestRecoveryKeyForStableInfo:dynamicInfo:vouchers:
bestWalrusAcrossTrustedPeers
bestWalrusForStableInfo:dynamicInfo:walrusStableChanges:
bestWebAccessForStableInfo:dynamicInfo:webAccessStableChanges:
bottleID
bottleId
bottleValidity
bytes
cStringUsingEncoding:
calculateDynamicInfoForPeerWithID:addingPeerIDs:removingPeerIDs:preapprovedKeys:signingKeyPair:currentMachineIDs:error:
ccec384Context
changeToken
checkIntroductionForCandidate:stableInfo:withSponsorID:error:
ciphertext
class
classA
classC
clientMetadata
clock
cloudkitContainerName
code
codeServiceWithName:databaseScope:
compare:
configuration
conformsToProtocol:
containerIDForContainerIdentifier:
contents
contextFree:
coolOffEnd
copy
copyWithZone:
count
countByEnumeratingWithState:objects:count:
createCustodianRecoveryKeyWithSpecificUser:recoveryKey:salt:ckksKeys:uuid:kind:reply:
createSecKey:
createStableInfoWithFrozenPolicyVersion:flexiblePolicyVersion:policySecrets:syncUserControllableViews:secureElementIdentity:walrusSetting:webAccess:deviceName:serialNumber:osVersion:signingKeyPair:recoverySigningPubKey:recoveryEncryptionPubKey:isInheritedAccount:error:
createVoucherForCandidate:stableInfo:withSponsorID:reason:signingKeyPair:error:
creationDate
crkInfoSig
currentFederation
currentPersona
currentSelf
currentThreadIsForPrimaryiCloudAccount
currentThreadPersonaUniqueString
curve
custodianPeerWithID:
custodianRecoveryKeyWithData:sig:keyFactory:
custodianRecoveryKeys
cuttlefishRetryAfter
data
dataUsingEncoding:
databaseScope
debugDescription
decodeBoolForKey:
decodeBytesForKey:returnedLength:
decodeInt32ForKey:
decodeInt64ForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
decrypt:withKey:error:
decryptData:authenticatedData:error:
decryptData:withKey:error:
defaultManager
deleteKeyMaterialFromKeychain:
deleteObject:
deletePeerWithID:
departByDistrustingSelfWithSpecificUser:reply:
description
destroyPersistentStoreAtURL:withType:options:error:
deviceColor
deviceEnclosureColor
deviceMid
deviceModel
deviceModelClass
deviceModelVersion
deviceName
devicePlatform
dictionary
dictionaryRepresentation
dictionaryWithObjects:forKeys:count:
digestUsingSha384:
distrustPeerIDsWithSpecificUser:peerIDs:reply:
doSIV:nonce:text:buffer:bufferLength:authenticatedData:error:
domain
doubleValue
dumpWithSpecificUser:reply:
dynamicInfo
dynamicInfoForJoiningPeerID:peerPermanentInfo:peerStableInfo:sponsorID:preapprovedKeys:signingKeyPair:currentMachineIDs:error:
dynamicInfoSig
dynamicInfoWithData:sig:
egoPeerID
egoPeerMachineID
egoPeerPermanentInfo
egoPeerPermanentInfoSig
egoPeerStableInfo
egoPeerStableInfoSig
egoStatus
encodeBool:forKey:
encodeBytes:length:forKey:
encodeInt32:forKey:
encodeInt64:forKey:
encodeObject:forKey:
encodeSubjectPublicKeyInfo
encodeWithCoder:
encodedData
encrypt:withKey:error:
encryptData:authenticatedData:error:
encryptionKey
encryptionKeyData
encryptionPubKey
encryptionPublicKey
encryptionSPKI
endpoint
ensureKeyLoadedFromKeychain:
enumerateKeysAndObjectsUsingBlock:
epoch
error
errorWithDomain:code:description:
errorWithDomain:code:description:underlying:
errorWithDomain:code:userInfo:
escrowInformationMetadata
escrowMetadata
escrowRecordLabel
escrowedEncryptionSPKI
escrowedSPKI
escrowedSigningSPKI
escrowedSpki
establishWithSpecificUser:ckksKeys:tlkShares:preapprovedKeys:reply:
exceptionWithName:reason:userInfo:
executeRequest:error:
expectedFederationID
expectedFederationId
federationID
federationId
fetchAccountSettingsWithSpecificUser:forceFetch:reply:
fetchAllowedMachineIDsWithSpecificUser:reply:
fetchCurrentPolicyWithSpecificUser:modelIDOverride:isInheritedAccount:reply:
fetchEgoEpochWithSpecificUser:reply:
fetchEscrowContentsWithSpecificUser:reply:
fetchKeyMaterialItemFromKeychain:resave:error:
fetchKeyPairWithPrivateKeyPersistentRef:error:
fetchPolicyDocumentsWithSpecificUser:versions:reply:
fetchRecoverableTLKSharesWithSpecificUser:peerID:reply:
fetchTrustStateWithSpecificUser:reply:
fetchViableBottlesWithSpecificUser:source:reply:
fetchViableEscrowRecordsWithSpecificUser:source:reply:
fieldMatch:fieldRegex:
findCustodianRecoveryKeyWithUUID:
finishDecoding
fromECKeyPair:
fromSFAuthenticatedCiphertext:
fullyViableEscrowRecords
generateAndRestorePersonaContextWithPersonaUniqueString:
getDynamicInfoForPeerWithID:
getPeerIDsTrustedByPeerWithDynamicInfo:toAccessView:error:
getStableInfoForPeerWithID:
getSupportAppInfoWithSpecificUser:reply:
getViewsForCRK:donorPermanentInfo:donorStableInfo:error:
getViewsForPeer:stableInfo:error:
hasBackupKeybagDigest
hasBottleID
hasBottleId
hasBottleValidity
hasClientMetadata
hasContents
hasCoolOffEnd
hasCurrentFederation
hasDeviceColor
hasDeviceEnclosureColor
hasDeviceMid
hasDeviceModel
hasDeviceModelClass
hasDeviceModelVersion
hasDeviceName
hasDevicePlatform
hasEncryptionSPKI
hasEscrowInformationMetadata
hasEscrowRecordLabel
hasEscrowedEncryptionSPKI
hasEscrowedSigningSPKI
hasExpectedFederationId
hasIntendedFederation
hasLabel
hasPeerEncryptionPrivKey
hasPeerEncryptionSPKI
hasPeerID
hasPeerInfo
hasPeerSigningPrivKey
hasPeerSigningSPKI
hasPeerWithID:
hasPotentiallyTrustedPeerPreapprovingKey:
hasPotentiallyTrustedPeerWithSigningKey:
hasPrefix:
hasRecordId
hasRecordViability
hasRecoveryStatus
hasRemainingAttempts
hasReserved1
hasReserved2
hasReserved3
hasReserved4
hasReserved5
hasReserved6
hasReserved7
hasSecureBackupMetadataTimestamp
hasSecureBackupNumericPassphraseLength
hasSecureBackupTimestamp
hasSecureBackupUsesComplexPassphrase
hasSecureBackupUsesMultipleIcscs
hasSecureBackupUsesNumericPassphrase
hasSerial
hasSigningSPKI
hasSilentAttemptAllowed
hasSuffix:
hasViabilityStatus
hash
hashWithAlgo:ofData:
honorIDMSListChanges
identityForIdentifier:
identityIsPreapproved
init
init:sender:receiver:curve:version:epoch:poisoned:zoneID:
initForKey:senderPeerID:recieverPeerID:receiverEncPublicKeySPKI:curve:version:epoch:poisoned:wrappedKey:signature:zoneID:
initForReadingFromData:error:
initRequiringSecureCoding:
initTapToRadar:description:radar:
initWithAESKey:wrappedAESKey:uuid:parentKeyUUID:keyclass:zoneID:
initWithAccessibility:sharingPolicy:
initWithAltDSID:
initWithArray:
initWithBase64EncodedData:options:
initWithBase64EncodedString:options:
initWithBitSize:
initWithBytes:len:
initWithBytes:length:
initWithBytesNoCopy:length:freeWhenDone:
initWithCiphertext:authenticationCode:initializationVector:
initWithClock:frozenPolicyVersion:flexiblePolicyVersion:policySecrets:syncUserControllableViews:secureElementIdentity:walrusSetting:webAccess:deviceName:serialNumber:osVersion:signingKeyPair:recoverySigningPubKey:recoveryEncryptionPubKey:isInheritedAccount:error:
initWithCloudkitContainerName:octagonContextID:appleAccountID:altDSID:isPrimaryPersona:personaUniqueString:
initWithCoder:
initWithContainerID:options:
initWithContentsOfURL:
initWithContext:
initWithCurrent:allSelves:
initWithCurve:
initWithData:
initWithData:sig:
initWithData:signature:
initWithData:specifier:error:
initWithDecrypter:
initWithDomain:code:userInfo:
initWithEgoPeerID:egoPeerMachineID:status:viablePeerCountsByModelID:peerCountsByMachineID:isExcluded:isLocked:
initWithEntity:insertIntoManagedObjectContext:
initWithEntityName:
initWithEntries:
initWithFetchRequest:
initWithKeyPair:
initWithKeySpecifier:
initWithKeySpecifier:digestOperation:
initWithMachineID:status:modified:
initWithName:managedObjectModel:
initWithPeerID:encryptionPublicKey:signingPublicKey:viewList:
initWithPeerID:isPreapproved:status:memberChanges:unknownMachineIDs:osVersion:walrus:webAccess:
initWithPeerID:signingSPKI:encryptionSPKI:secureElementIdentity:viewList:
initWithSOSPeerID:encryptionKey:signingKey:viewList:
initWithSOSPeerID:encryptionPublicKey:signingPublicKey:viewList:
initWithSecureElementIdentity:
initWithSigningKeyData:encryptionKeyData:
initWithStableInfo:
initWithSuccessfulKeyUUIDs:totalTLKSharesRecovered:tlkRecoveryErrors:
initWithTLK:classA:classC:newUpload:
initWithURL:
initWithUUID:signingPublicKey:encryptionPublicKey:signingKeyPair:kind:error:
initWithVersion:hash:
initWithVersion:modelToCategory:categoriesByView:introducersByCategory:redactions:keyViewMapping:userControllableViewList:piggybackViews:priorityViews:inheritedExcludedViews:hashAlgo:
initWithViableBottles:partialBottles:
initWithWrappedAESKey:uuid:parentKeyUUID:keyclass:zoneID:
initWithZoneName:ownerName:
initializationVector
intValue
intendedEmptyIdentity
intendedFederation
interfaceWithProtocol:
isCKKSServerPluginError:
isCKServerInternalError
isCustodianRecoveryKeyTrusted:
isCuttlefishError:
isEqual:
isEqualToPolicyDocument:
isEqualToString:
isExcluded
isInheritedAccount
isKindOfClass:
isLocked
isMemberOfClass:
isPrimaryAccount
isRecoveryKeyEnrolled
isRecoveryKeySet:reply:
isRetryable
joinWithSpecificUser:voucherData:voucherSig:ckksKeys:tlkShares:preapprovedKeys:reply:
key:wrappedByKey:uuid:parentKeyUUID:keyclass:zoneID:error:
keyMaterial
keyTypeAsString:
keyWithSubjectPublicKeyInfo:
keyWrappedBySelf:uuid:keyclass:zoneID:error:
keyclass
kind
label
legacyEscrowRecords
length
listener:shouldAcceptNewConnection:
loadFromProtobuf:error:
loadKeyMaterialFromKeychain:
loadPersistentStoresWithCompletionHandler:
localResetWithSpecificUser:reply:
machineID
machineIDsInStatus:
machines
matchesPeer:
memberChanges
mergeByPropertyStoreTrumpMergePolicy
mergeFrom:
modified
mungeModelID:
mutableBytes
mutableCopy
newBackgroundContext
newUpload
numberOfPeersInOctagon
numberWithUnsignedLongLong:
objectEnumerator
objectForKey:
objectForKeyedSubscript:
octagonContextID
operatingSystemVersionString
orMatch:
osVersion
parentKeyUUID
partialBottles
partiallyViableEscrowRecords
peerCountsByMachineID
peerEncryptionPrivKey
peerEncryptionSPKI
peerID
peerIDThatTrustsCustodianRecoveryKeys:canIntroducePeer:stableInfo:
peerIDThatTrustsRecoveryKeys:canIntroducePeer:stableInfo:
peerIdentifier
peerInfo
peerSigningPrivKey
peerStatus
peerWithID:
peers
performATOPRVActionsWithSpecificUser:reply:
performBlockAndWait:
performBlockWithPersonaIdentifier:block:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
permanentInfo
permanentInfoSig
permanentInfoWithMachineID:modelID:epoch:signingKeyPair:encryptionKeyPair:peerIDHashAlgo:error:
permanentInfoWithPeerID:data:sig:keyFactory:
persistentStoreCoordinator
personaUniqueString
pingWithReply:
poisoned
policies
policyData
policyDocWithHash:data:
policyForPeerIDs:candidatePeerID:candidateStableInfo:error:
policyHash
policySecrets
policyWithSecrets:decrypter:error:
policyWithVersion:
post:
preapprovals
preflightVouchWithBottleWithSpecificUser:bottleID:reply:
preflightVouchWithCustodianRecoveryKeyWithSpecificUser:crk:reply:
preflightVouchWithRecoveryKeyWithSpecificUser:recoveryKey:salt:reply:
prepareThreadForKeychainAPIUseForPersonaIdentifier:
prepareWithSpecificUser:epoch:machineID:bottleSalt:bottleID:modelID:deviceName:serialNumber:osVersion:policyVersion:policySecrets:syncUserControllableViews:secureElementIdentity:setting:signingPrivKeyPersistentRef:encPrivKeyPersistentRef:reply:
privateCloudDatabase
processInfo
protobuf
publicEncryptionKey
publicKey
publicSigningKey
pushHealthInquiryWithSpecificUser:reply:
queryKeyMaterialInKeychain:error:
randomKey:
randomKeyWrappedByParent:keyclass:error:
randomKeyWrappedBySelf:error:
readFrom:
receiverPeerID
recordId
recordStatus
recordStatusAsString:
recordViabilityAsString:
recoverTLK:trustedPeers:ckrecord:error:
recoverTLKSharesForInheritorWithSpecificUser:crk:tlkShares:reply:
recoveryEncryptionPublicKey
recoveryKeyEncryptionSPKI
recoveryKeySigningSPKI
recoverySigningPublicKey
recoveryStatus
recoveryStatusAsString:
recoveryString
refetchLevel
registerCustodianRecoveryKey:
registerPeerWithPermanentInfo:
registerPolicyDocument:
registerVoucher:
remainingAttempts
removeAllowedMachineIDsWithSpecificUser:machineIDs:reply:
removeBottles:
removeCustodianRecoveryKey:
removeCustodianRecoveryKeyWithSpecificUser:uuid:reply:
removeCustodianRecoveryKeys:
removeEscrowCacheWithSpecificUser:reply:
removeLegacyEscrowRecords:
removeMachinesObject:
removeObject:
removePartiallyViableEscrowRecords:
removePeersObject:
removeRecoveryKey
removeRecoveryKey:reply:
removeVouchersObject:
reportHealthWithSpecificUser:stateMachineState:trustState:reply:
requestHealthCheckWithSpecificUser:requiresEscrowCheck:knownFederations:reply:
requestUUID
reserved1
reserved2
reserved3
reserved4
reserved5
reserved6
reserved7
resetAccountCDPContentsWithSpecificUser:idmsTargetContext:idmsCuttlefishPassword:notifyIdMS:reply:
resetWithSpecificUser:resetReason:idmsTargetContext:idmsCuttlefishPassword:notifyIdMS:reply:
respondsToSelector:
resultType
resume
retain
retainCount
retryInterval
reverseTransformedValue:
safeErrorClasses
salt
save:
saveKeyMaterialToKeychain:
saveKeyMaterialToKeychain:error:
secureBackupMetadataTimestamp
secureBackupNumericPassphraseLength
secureBackupTimestamp
secureBackupUsesComplexPassphrase
secureBackupUsesMultipleIcscs
secureBackupUsesMultipleiCSCS
secureBackupUsesNumericPassphrase
secureElementIdentity
seenOnFullList
self
senderPeerID
serial
serialNumber
serializeAsProtobuf:
setAccountOverrideInfo:
setAessivkey:
setAllSelves:
setAllowed:
setAllowedMachineIDs:
setAllowedMachineIDsWithSpecificUser:allowedMachineIDs:honorIDMSListChanges:reply:
setApplicationBundleIdentifierOverride:
setAuthenticationCode:
setAutomaticallyRetryNetworkFailures:
setBackupKeybagDigest:
setBottleID:
setBottleId:
setBottleValidity:
setBottles:
setByAddingObject:
setBypassPCSEncryption:
setCiphertext:
setClassA:
setClassC:
setClasses:forSelector:argumentIndex:ofReply:
setClientMetadata:
setContainer:
setContents:
setCoolOffEnd:
setCreationDate:
setCrkInfo:
setCrkInfoSig:
setCurrentFederation:
setCurve:
setDefaultRetryIntervalForTests:
setDelegate:
setDeviceEnclosureColor:
setDeviceMid:
setDeviceModelClass:
setDeviceModelVersion:
setDeviceName:
setDevicePlatform:
setDiscretionaryNetworkBehavior:
setDynamicInfoSig:
setEgoPeerID:
setEgoPeerMachineID:
setEgoPeerPermanentInfo:
setEgoPeerPermanentInfoSig:
setEgoPeerStableInfo:
setEgoPeerStableInfoSig:
setEgoStatus:
setEncryptionKey:
setEncryptionSPKI:
setEpoch:
setEscrowFetchDate:
setEscrowInformationMetadata:
setEscrowMetadata:
setEscrowRecordLabel:
setEscrowedEncryptionSPKI:
setEscrowedSPKI:
setEscrowedSigningSPKI:
setEscrowedSpki:
setExpectedFederationID:
setExpectedFederationId:
setExpectedReceiveSize:
setExpectedSendSize:
setExportedInterface:
setExportedObject:
setFederationID:
setFederationId:
setHasCoolOffEnd:
setHasCreationDate:
setHasDevicePlatform:
setHasRecordStatus:
setHasRecordViability:
setHasRecoveryStatus:
setHasRemainingAttempts:
setHasSecureBackupMetadataTimestamp:
setHasSecureBackupNumericPassphraseLength:
setHasSecureBackupTimestamp:
setHasSecureBackupUsesComplexPassphrase:
setHasSecureBackupUsesMultipleIcscs:
setHasSecureBackupUsesNumericPassphrase:
setHasSilentAttemptAllowed:
setHasViabilityStatus:
setHonorIDMSListChanges:
setIdentity:forIdentifier:accessPolicy:error:
setIdentityIsPreapproved:
setInitializationVector:
setIntendedFederation:
setIsCloudKitSupportOperation:
setIsEgoPeer:
setIsExcluded:
setIsLocked:
setKeyData:
setKeyType:
setKeyclass:
setKind:
setLabel:
setMachineID:
setMemberChanges:
setModified:
setName:
setNewUpload:
setNumberOfPeersInOctagon:
setObject:forKey:
setObject:forKeyedSubscript:
setOsVersion:
setParentKeyUUID:
setPeerCountsByMachineID:
setPeerEncryptionPrivKey:
setPeerEncryptionSPKI:
setPeerID:
setPeerInfo:
setPeerSigningPrivKey:
setPeerSigningSPKI:
setPeerStatus:
setPeers:
setPermanentInfo:
setPermanentInfoSig:
setPoisoned:
setPolicyData:
setPolicyHash:
setPreapprovedKeysWithSpecificUser:preapprovedKeys:reply:
setPredicate:
setPublicEncryptionKey:
setPublicSigningKey:
setQualityOfService:
setReceiverPeerID:
setReceiverPublicEncryptionKeySPKI:
setRecordId:
setRecordStatus:
setRecordViability:
setRecoveryKeyEncryptionSPKI:
setRecoveryKeySigningSPKI:
setRecoveryKeys:
setRecoveryStatus:
setRecoveryString:
setRefetchLevel:
setRemainingAttempts:
setRequestCompletedBlock:
setReserved1:
setReserved2:
setReserved3:
setReserved4:
setReserved5:
setReserved6:
setReserved7:
setSalt:
setSecureBackupMetadataTimestamp:
setSecureBackupNumericPassphraseLength:
setSecureBackupTimestamp:
setSecureBackupUsesComplexPassphrase:
setSecureBackupUsesMultipleIcscs:
setSecureBackupUsesMultipleiCSCS:
setSecureBackupUsesNumericPassphrase:
setSecureElementIdentity:
setSeenOnFullList:
setSenderPeerID:
setSerial:
setSerialNumber:
setSignature:
setSignatureUsingEscrowKey:
setSignatureUsingPeerKey:
setSigningKey:
setSilentAttemptAllowed:
setSosViability:
setSpid:
setStableInfo:
setStableInfoSig:
setStatus:
setSuccessfulKeysRecovered:
setTlkRecoveryErrors:
setTlkUUID:
setTotalTLKSharesRecovered:
setUnknownMachineIDsPresent:
setUuid:
setValue:
setValueTransformer:forName:
setVersion:
setViabilityStatus:
setViablePeerCountsByModelID:
setViewList:
setVoucherInfoSig:
setWalrus:
setWebAccess:
setWithArray:
setWithObject:
setWithSet:
setWrappedTLK:
setWrappedkey:
setZoneID:
setZoneName:
share:as:to:epoch:poisoned:error:
sharedManager
sign:withKey:error:
signRecord:ckrecord:error:
signature
signatureUsingEscrowKey
signatureUsingPeerKey
signatureVerifiesWithPeerSet:ckrecord:error:
signingKey
signingKeyData
signingPubKey
signingPublicKey
signingSPKI
silentAttemptAllowed
size
sleepForTimeInterval:
sortedArrayUsingSelector:
sosViability
spid
spki
sponsorID
stableInfo
stableInfoSig
status
statusOfPeerWithID:
stringByAppendingFormat:
stringByAppendingString:
stringByReplacingOccurrencesOfString:withString:
stringForObjectValue:
stringWithFormat:
subdataWithRange:
substringFromIndex:
successfulKeysRecovered
superclass
supportsSecureCoding
syncUserControllableViews
syncingPolicyForModel:syncUserControllableViews:isInheritedAccount:error:
tlkRecoveryErrors
totalTLKSharesRecovered
transformedValue:
transformedValueClass
trueMatch
trustStatusWithSpecificUser:reply:
trustedPeerIDs
trySelfWrappedKeyCandidate:error:
type
unionSet:
unknownMachineIDsPresent
unsignedIntegerValue
unsignedLongLongValue
unwrapAESKey:error:
unwrapSelfWithAESKey:error:
unwrapUsing:error:
updateDynamicInfo:forPeerWithID:error:
updateStableInfo:forPeerWithID:error:
updateTLKsWithSpecificUser:ckksKeys:tlkShares:reply:
updateWithSpecificUser:forceRefetch:deviceName:serialNumber:osVersion:policyVersion:policySecrets:syncUserControllableViews:secureElementIdentity:walrusSetting:webAccess:reply:
userInfo
userPersonaUniqueString
userViewSyncabilityConsensusAmongTrustedPeers:
uuid
validatePeersWithSpecificUser:reply:
value
valueForEntitlement:
verify:withKey:error:
verifySignature:verifyingPeer:ckrecord:error:
versionNumber
viabilityStatusAsString:
viableBottles
viablePeerCountsByModelID
viewList
vouchWithBottleWithSpecificUser:bottleID:entropy:bottleSalt:tlkShares:reply:
vouchWithCustodianRecoveryKeyWithSpecificUser:crk:tlkShares:reply:
vouchWithRecoveryKeyWithSpecificUser:recoveryKey:salt:tlkShares:reply:
vouchWithSpecificUser:peerID:permanentInfo:permanentInfoSig:stableInfo:stableInfoSig:ckksKeys:reply:
voucherInfo
voucherInfoSig
voucherInfoWithData:sig:
vouchers
walrus
walrusSetting
webAccess
wrap:publicKey:error:
wrapAESKey:error:
wrapUnder:error:
wrappedData
wrappedTLK
wrappedkey
wrapsSelf
writeTo:
zeroedKey
zone
zoneID
zoneName
com.apple.security.trustedpeers
Starting up
ProtectedCloudStorage
SecureObjectSync
_TtC18TrustedPeersHelper15ServiceDelegate
B32@0:8@16@24
@16@0:8
com.apple.private.trustedpeershelper.client
client(%{public}@ is missing entitlement '%{public}s'
client(%{public}@ has wrong boolean value for '%{public}s' (%{bool}d), rejecting
client(%{public}@ has wrong integer value for '%{public}s' (%ld), rejecting
client has entitlement '%{public}s'
Received a new client: %{public}@
com.apple.security.TrustedPeersHelper.ContainerMap
#16@0:8
B16@0:8
@24@0:8@16
Failed to deserialize a purported Set: %{public}s
Failed to serialize a Set: %{public}s
_TtC18TrustedPeersHelper11RecoveryKey
peerKeys
_TtC18TrustedPeersHelper20CustodianRecoveryKey
tpCustodian
_TtC18TrustedPeersHelper14InheritanceKey
tpInheritance
keys generated by the entropy+salt do not match the Recovery contents
failed to create entropy
failed to create recovery keys
failed to create private key
failed to create authenticated ciphertext
failed to create Recovery
public and private peer signing keys do not match
Failed to instantiate octagon peer keys
could not decrypt Recovery contents
Failed to deserialize Recovery peer
TrustedPeersHelper.RecoveryKey
_TtC18TrustedPeersHelper9Decrypter
@40@0:8@16@24^@32
_TtC18TrustedPeersHelper14RecoveryKeySet
signingKey
Failed to generate random key
Key generation crypto failed 
Unsupported Key Type 
Failed to save item to keychain: 
Item does not exist
Key generation failed
com.apple.security.trustedpeers.RecoveryKeySetError
com.apple.security.octagon
Recoveryed Encryption Key-%@
Recoveryed Signing Key-%@
Recovery Signing Private Key
Recovery Encryption Private Key
TrustedPeersHelper.RecoveryKeySet
init()
SHA256:/4gt8WFEXCVLYI+C+8/2MiMz6Srv0vpcvlkJ4gkepHQ=
SHA256:O/ECQlWhvNlLmlDNh2+nal/yekUC87bXpV3k+6kznSo=
SHA256:TLXrcQmY4ue3oP5pCX1pwsi9BF8cKfohlJBilCroeBs=
CAESDgoGaVBob25lEgRmdWxsEgwKBGlQYWQSBGZ1bGwSCwoDTWFjEgRmdWxsEgwKBGlNYWMSBGZ1bGwSDQoHQXBwbGVUVhICdHYSDgoFV2F0Y2gSBXdhdGNoGhEKCVBDU0VzY3JvdxIEZnVsbBoXCgRXaUZpEgRmdWxsEgJ0dhIFd2F0Y2gaGQoRU2FmYXJpQ3JlZGl0Q2FyZHMSBGZ1bGwiDAoEZnVsbBIEZnVsbCIUCgV3YXRjaBIEZnVsbBIFd2F0Y2giDgoCdHYSBGZ1bGwSAnR2
SafariCreditCards
SHA256:ZL1WBUCyO155rHBJQeghomCCKGmfjtS0jvsK+UEvx5o=
CAISDgoGaUN5Y2xlEgRmdWxsEg4KBmlQaG9uZRIEZnVsbBIMCgRpUGFkEgRmdWxsEgsKA01hYxIEZnVsbBIMCgRpTWFjEgRmdWxsEg0KB0FwcGxlVFYSAnR2Eg4KBVdhdGNoEgV3YXRjaBoRCglQQ1NFc2Nyb3cSBGZ1bGwaFwoEV2lGaRIEZnVsbBICdHYSBXdhdGNoGhkKEVNhZmFyaUNyZWRpdENhcmRzEgRmdWxsIgwKBGZ1bGwSBGZ1bGwiFAoFd2F0Y2gSBGZ1bGwSBXdhdGNoIg4KAnR2EgRmdWxsEgJ0dg==
SHA256:JZzazSuHXrUhiOfSgElsg6vYKpnvvEPVpciR8FewRWg=
CAMSDgoGaVBob25lEgRmdWxsEgwKBGlQYWQSBGZ1bGwSCwoDTWFjEgRmdWxsEgwKBGlNYWMSBGZ1bGwSDQoHQXBwbGVUVhICdHYSDgoFV2F0Y2gSBXdhdGNoEhcKDkF1ZGlvQWNjZXNzb3J5EgVhdWRpbxocCg1EZXZpY2VQYWlyaW5nEgRmdWxsEgV3YXRjaBoXCghBcHBsZVBheRIEZnVsbBIFd2F0Y2gaJAoVUHJvdGVjdGVkQ2xvdWRTdG9yYWdlEgRmdWxsEgV3YXRjaBoXCghCYWNrc3RvcBIEZnVsbBIFd2F0Y2gaGQoKQXV0b1VubG9jaxIEZnVsbBIFd2F0Y2gaHwoQU2VjdXJlT2JqZWN0U3luYxIEZnVsbBIFd2F0Y2gaIAoRU2FmYXJpQ3JlZGl0Q2FyZHMSBGZ1bGwSBXdhdGNoGhMKBEhvbWUSBGZ1bGwSBXdhdGNoGh4KD1NhZmFyaVBhc3N3b3JkcxIEZnVsbBIFd2F0Y2gaGwoMQXBwbGljYXRpb25zEgRmdWxsEgV3YXRjaBoVCgZFbmdyYW0SBGZ1bGwSBXdhdGNoGi0KE0xpbWl0ZWRQZWVyc0FsbG93ZWQSBGZ1bGwSBXdhdGNoEgJ0dhIFYXVkaW8aFgoHTWFuYXRlZRIEZnVsbBIFd2F0Y2gaHgoEV2lGaRIEZnVsbBIFd2F0Y2gSAnR2EgVhdWRpbxoVCgZIZWFsdGgSBGZ1bGwSBXdhdGNoIhMKBGZ1bGwSBGZ1bGwSBXdhdGNoIhsKBWF1ZGlvEgRmdWxsEgV3YXRjaBIFYXVkaW8iFAoFd2F0Y2gSBGZ1bGwSBXdhdGNoIhUKAnR2EgRmdWxsEgV3YXRjaBICdHYyIgoWAAQiEgIEdndodAoKXkFwcGxlUGF5JBIIQXBwbGVQYXkyJgoYAAQiFAIEdndodAoMXkF1dG9VbmxvY2skEgpBdXRvVW5sb2NrMh4KFAAEIhACBHZ3aHQKCF5FbmdyYW0kEgZFbmdyYW0yHgoUAAQiEAIEdndodAoIXkhlYWx0aCQSBkhlYWx0aDIaChIABCIOAgR2d2h0CgZeSG9tZSQSBEhvbWUyIAoVAAQiEQIEdndodAoJXk1hbmF0ZWUkEgdNYW5hdGVlMjgKIQAEIh0CBHZ3aHQKFV5MaW1pdGVkUGVlcnNBbGxvd2VkJBITTGltaXRlZFBlZXJzQWxsb3dlZDJdClAAAhIeAAQiGgIEdndodAoSXkNvbnRpbnVpdHlVbmxvY2skEhUABCIRAgR2d2h0CgleSG9tZUtpdCQSFQAEIhECBHZ3aHQKCV5BcHBsZVRWJBIJTm90U3luY2VkMisKGwAEIhcCBGFncnAKD15bMC05QS1aXXsxMH1cLhIMQXBwbGljYXRpb25zMsUBCrABAAISNAABChMABCIPAgVjbGFzcwoGXmdlbnAkChsABCIXAgRhZ3JwCg9eY29tLmFwcGxlLnNiZCQSPQABChMABCIPAgVjbGFzcwoGXmtleXMkCiQABCIgAgRhZ3JwChheY29tLmFwcGxlLnNlY3VyaXR5LnNvcyQSGQAEIhUCBHZ3aHQKDV5CYWNrdXBCYWdWMCQSHAAEIhgCBHZ3aHQKEF5pQ2xvdWRJZGVudGl0eSQSEFNlY3VyZU9iamVjdFN5bmMyYwpbAAISEgAEIg4CBHZ3aHQKBl5XaUZpJBJDAAEKEwAEIg8CBWNsYXNzCgZeZ2VucCQKEwAEIg8CBGFncnAKB15hcHBsZSQKFQAEIhECBHN2Y2UKCV5BaXJQb3J0JBIEV2lGaTLbAgrBAgACEhkABCIVAgR2d2h0Cg1eUENTQ2xvdWRLaXQkEhcABCITAgR2d2h0CgteUENTRXNjcm93JBIUAAQiEAIEdndodAoIXlBDU0ZERSQSGQAEIhUCBHZ3aHQKDV5QQ1NGZWxkc3BhciQSGQAEIhUCBHZ3aHQKDV5QQ1NNYWlsRHJvcCQSGgAEIhYCBHZ3aHQKDl5QQ1NNYXN0ZXJLZXkkEhYABCISAgR2d2h0CgpeUENTTm90ZXMkEhcABCITAgR2d2h0CgteUENTUGhvdG9zJBIYAAQiFAIEdndodAoMXlBDU1NoYXJpbmckEh0ABCIZAgR2d2h0ChFeUENTaUNsb3VkQmFja3VwJBIcAAQiGAIEdndodAoQXlBDU2lDbG91ZERyaXZlJBIZAAQiFQIEdndodAoNXlBDU2lNZXNzYWdlJBIVUHJvdGVjdGVkQ2xvdWRTdG9yYWdlMkAKKwAEIicCBGFncnAKH15jb20uYXBwbGUuc2FmYXJpLmNyZWRpdC1jYXJkcyQSEVNhZmFyaUNyZWRpdENhcmRzMjQKIQAEIh0CBGFncnAKFV5jb20uYXBwbGUuY2ZuZXR3b3JrJBIPU2FmYXJpUGFzc3dvcmRzMm0KXAACEh4ABCIaAgR2d2h0ChJeQWNjZXNzb3J5UGFpcmluZyQSGgAEIhYCBHZ3aHQKDl5OYW5vUmVnaXN0cnkkEhwABCIYAgR2d2h0ChBeV2F0Y2hNaWdyYXRpb24kEg1EZXZpY2VQYWlyaW5nMi0KIQAEIh0CBGFncnAKFV5jb20uYXBwbGUuY2ZuZXR3b3JrJBIIQmFja3N0b3A=
LimitedPeersAllowed
^LimitedPeersAllowed$
^ContinuityUnlock$
^com.apple.security.sos$
^iCloudIdentity$
^PCSiCloudBackup$
^PCSiCloudDrive$
^com.apple.safari.credit-cards$
^com.apple.cfnetwork$
^AccessoryPairing$
^WatchMigration$
SHA256:Tjdu5QrWGvKWMx7k3VWFrEWSsBDPZAwCql9ybDkvFs8=
CAQSDgoGaVBob25lEgRmdWxsEgwKBGlQYWQSBGZ1bGwSCwoDTWFjEgRmdWxsEgwKBGlNYWMSBGZ1bGwSDQoHQXBwbGVUVhICdHYSDgoFV2F0Y2gSBXdhdGNoEhcKDkF1ZGlvQWNjZXNzb3J5EgVhdWRpbxoTCgRIb21lEgRmdWxsEgV3YXRjaBobCgxBcHBsaWNhdGlvbnMSBGZ1bGwSBXdhdGNoGh4KBFdpRmkSBGZ1bGwSBXdhdGNoEgJ0dhIFYXVkaW8aGQoKQXV0b1VubG9jaxIEZnVsbBIFd2F0Y2gaFwoIQXBwbGVQYXkSBGZ1bGwSBXdhdGNoGhUKBkhlYWx0aBIEZnVsbBIFd2F0Y2gaFgoHTWFuYXRlZRIEZnVsbBIFd2F0Y2gaLQoTTGltaXRlZFBlZXJzQWxsb3dlZBIEZnVsbBIFd2F0Y2gSAnR2EgVhdWRpbxokChVQcm90ZWN0ZWRDbG91ZFN0b3JhZ2USBGZ1bGwSBXdhdGNoGhgKCVBhc3N3b3JkcxIEZnVsbBIFd2F0Y2gaHAoNRGV2aWNlUGFpcmluZxIEZnVsbBIFd2F0Y2gaHwoQU2VjdXJlT2JqZWN0U3luYxIEZnVsbBIFd2F0Y2gaFQoGRW5ncmFtEgRmdWxsEgV3YXRjaBoaCgtDcmVkaXRDYXJkcxIEZnVsbBIFd2F0Y2giGwoFYXVkaW8SBGZ1bGwSBXdhdGNoEgVhdWRpbyITCgRmdWxsEgRmdWxsEgV3YXRjaCIUCgV3YXRjaBIEZnVsbBIFd2F0Y2giFQoCdHYSBGZ1bGwSBXdhdGNoEgJ0djIiChYABCISAgR2d2h0CgpeQXBwbGVQYXkkEghBcHBsZVBheTImChgABCIUAgR2d2h0CgxeQXV0b1VubG9jayQSCkF1dG9VbmxvY2syHgoUAAQiEAIEdndodAoIXkVuZ3JhbSQSBkVuZ3JhbTIeChQABCIQAgR2d2h0CgheSGVhbHRoJBIGSGVhbHRoMhoKEgAEIg4CBHZ3aHQKBl5Ib21lJBIESG9tZTIgChUABCIRAgR2d2h0CgleTWFuYXRlZSQSB01hbmF0ZWUyOAohAAQiHQIEdndodAoVXkxpbWl0ZWRQZWVyc0FsbG93ZWQkEhNMaW1pdGVkUGVlcnNBbGxvd2VkMl0KUAACEh4ABCIaAgR2d2h0ChJeQ29udGludWl0eVVubG9jayQSFQAEIhECBHZ3aHQKCV5Ib21lS2l0JBIVAAQiEQIEdndodAoJXkFwcGxlVFYkEglOb3RTeW5jZWQyKwobAAQiFwIEYWdycAoPXlswLTlBLVpdezEwfVwuEgxBcHBsaWNhdGlvbnMyxQEKsAEAAhI0AAEKEwAEIg8CBWNsYXNzCgZeZ2VucCQKGwAEIhcCBGFncnAKD15jb20uYXBwbGUuc2JkJBI9AAEKEwAEIg8CBWNsYXNzCgZea2V5cyQKJAAEIiACBGFncnAKGF5jb20uYXBwbGUuc2VjdXJpdHkuc29zJBIZAAQiFQIEdndodAoNXkJhY2t1cEJhZ1YwJBIcAAQiGAIEdndodAoQXmlDbG91ZElkZW50aXR5JBIQU2VjdXJlT2JqZWN0U3luYzJjClsAAhISAAQiDgIEdndodAoGXldpRmkkEkMAAQoTAAQiDwIFY2xhc3MKBl5nZW5wJAoTAAQiDwIEYWdycAoHXmFwcGxlJAoVAAQiEQIEc3ZjZQoJXkFpclBvcnQkEgRXaUZpMucCCs0CAAISGgAEIhYCBHZ3aHQKDl5QQ1MtQ2xvdWRLaXQkEhgABCIUAgR2d2h0CgxeUENTLUVzY3JvdyQSFQAEIhECBHZ3aHQKCV5QQ1MtRkRFJBIaAAQiFgIEdndodAoOXlBDUy1GZWxkc3BhciQSGgAEIhYCBHZ3aHQKDl5QQ1MtTWFpbERyb3AkEhsABCIXAgR2d2h0Cg9eUENTLU1hc3RlcktleSQSFwAEIhMCBHZ3aHQKC15QQ1MtTm90ZXMkEhgABCIUAgR2d2h0CgxeUENTLVBob3RvcyQSGQAEIhUCBHZ3aHQKDV5QQ1MtU2hhcmluZyQSHgAEIhoCBHZ3aHQKEl5QQ1MtaUNsb3VkQmFja3VwJBIdAAQiGQIEdndodAoRXlBDUy1pQ2xvdWREcml2ZSQSGgAEIhYCBHZ3aHQKDl5QQ1MtaU1lc3NhZ2UkEhVQcm90ZWN0ZWRDbG91ZFN0b3JhZ2UyOgorAAQiJwIEYWdycAofXmNvbS5hcHBsZS5zYWZhcmkuY3JlZGl0LWNhcmRzJBILQ3JlZGl0Q2FyZHMyLgohAAQiHQIEYWdycAoVXmNvbS5hcHBsZS5jZm5ldHdvcmskEglQYXNzd29yZHMybQpcAAISHgAEIhoCBHZ3aHQKEl5BY2Nlc3NvcnlQYWlyaW5nJBIaAAQiFgIEdndodAoOXk5hbm9SZWdpc3RyeSQSHAAEIhgCBHZ3aHQKEF5XYXRjaE1pZ3JhdGlvbiQSDURldmljZVBhaXJpbmc=
^PCS-iCloudBackup$
^PCS-iCloudDrive$
CAUSDgoGaVBob25lEgRmdWxsEgwKBGlQYWQSBGZ1bGwSDAoEaVBvZBIEZnVsbBILCgNNYWMSBGZ1bGwSDAoEaU1hYxIEZnVsbBINCgdBcHBsZVRWEgJ0dhIOCgVXYXRjaBIFd2F0Y2gSFwoOQXVkaW9BY2Nlc3NvcnkSBWF1ZGlvGhsKDEFwcGxpY2F0aW9ucxIEZnVsbBIFd2F0Y2gaHwoQU2VjdXJlT2JqZWN0U3luYxIEZnVsbBIFd2F0Y2gaHAoNRGV2aWNlUGFpcmluZxIEZnVsbBIFd2F0Y2gaGgoLQ3JlZGl0Q2FyZHMSBGZ1bGwSBXdhdGNoGhUKBkhlYWx0aBIEZnVsbBIFd2F0Y2gaLQoTTGltaXRlZFBlZXJzQWxsb3dlZBIEZnVsbBIFd2F0Y2gSAnR2EgVhdWRpbxokChVQcm90ZWN0ZWRDbG91ZFN0b3JhZ2USBGZ1bGwSBXdhdGNoGhcKCEFwcGxlUGF5EgRmdWxsEgV3YXRjaBoZCgpBdXRvVW5sb2NrEgRmdWxsEgV3YXRjaBoWCgdNYW5hdGVlEgRmdWxsEgV3YXRjaBoYCglQYXNzd29yZHMSBGZ1bGwSBXdhdGNoGhUKBkVuZ3JhbRIEZnVsbBIFd2F0Y2gaHgoEV2lGaRIEZnVsbBIFd2F0Y2gSAnR2EgVhdWRpbxoTCgRIb21lEgRmdWxsEgV3YXRjaCIbCgVhdWRpbxIEZnVsbBIFd2F0Y2gSBWF1ZGlvIhMKBGZ1bGwSBGZ1bGwSBXdhdGNoIhUKAnR2EgRmdWxsEgV3YXRjaBICdHYiFAoFd2F0Y2gSBGZ1bGwSBXdhdGNoMiIKFgAEIhICBHZ3aHQKCl5BcHBsZVBheSQSCEFwcGxlUGF5MiYKGAAEIhQCBHZ3aHQKDF5BdXRvVW5sb2NrJBIKQXV0b1VubG9jazIeChQABCIQAgR2d2h0CgheRW5ncmFtJBIGRW5ncmFtMh4KFAAEIhACBHZ3aHQKCF5IZWFsdGgkEgZIZWFsdGgyGgoSAAQiDgIEdndodAoGXkhvbWUkEgRIb21lMiAKFQAEIhECBHZ3aHQKCV5NYW5hdGVlJBIHTWFuYXRlZTI4CiEABCIdAgR2d2h0ChVeTGltaXRlZFBlZXJzQWxsb3dlZCQSE0xpbWl0ZWRQZWVyc0FsbG93ZWQyXQpQAAISHgAEIhoCBHZ3aHQKEl5Db250aW51aXR5VW5sb2NrJBIVAAQiEQIEdndodAoJXkhvbWVLaXQkEhUABCIRAgR2d2h0CgleQXBwbGVUViQSCU5vdFN5bmNlZDIrChsABCIXAgRhZ3JwCg9eWzAtOUEtWl17MTB9XC4SDEFwcGxpY2F0aW9uczLFAQqwAQACEjQAAQoTAAQiDwIFY2xhc3MKBl5nZW5wJAobAAQiFwIEYWdycAoPXmNvbS5hcHBsZS5zYmQkEj0AAQoTAAQiDwIFY2xhc3MKBl5rZXlzJAokAAQiIAIEYWdycAoYXmNvbS5hcHBsZS5zZWN1cml0eS5zb3MkEhkABCIVAgR2d2h0Cg1eQmFja3VwQmFnVjAkEhwABCIYAgR2d2h0ChBeaUNsb3VkSWRlbnRpdHkkEhBTZWN1cmVPYmplY3RTeW5jMmMKWwACEhIABCIOAgR2d2h0CgZeV2lGaSQSQwABChMABCIPAgVjbGFzcwoGXmdlbnAkChMABCIPAgRhZ3JwCgdeYXBwbGUkChUABCIRAgRzdmNlCgleQWlyUG9ydCQSBFdpRmkynQMKgwMAAhIYAAQiFAIEdndodAoMXlBDUy1CYWNrdXAkEhoABCIWAgR2d2h0Cg5eUENTLUNsb3VkS2l0JBIYAAQiFAIEdndodAoMXlBDUy1Fc2Nyb3ckEhUABCIRAgR2d2h0CgleUENTLUZERSQSGgAEIhYCBHZ3aHQKDl5QQ1MtRmVsZHNwYXIkEhoABCIWAgR2d2h0Cg5eUENTLU1haWxEcm9wJBIaAAQiFgIEdndodAoOXlBDUy1NYWlsZHJvcCQSGwAEIhcCBHZ3aHQKD15QQ1MtTWFzdGVyS2V5JBIXAAQiEwIEdndodAoLXlBDUy1Ob3RlcyQSGAAEIhQCBHZ3aHQKDF5QQ1MtUGhvdG9zJBIZAAQiFQIEdndodAoNXlBDUy1TaGFyaW5nJBIeAAQiGgIEdndodAoSXlBDUy1pQ2xvdWRCYWNrdXAkEh0ABCIZAgR2d2h0ChFeUENTLWlDbG91ZERyaXZlJBIaAAQiFgIEdndodAoOXlBDUy1pTWVzc2FnZSQSFVByb3RlY3RlZENsb3VkU3RvcmFnZTI6CisABCInAgRhZ3JwCh9eY29tLmFwcGxlLnNhZmFyaS5jcmVkaXQtY2FyZHMkEgtDcmVkaXRDYXJkczIuCiEABCIdAgRhZ3JwChVeY29tLmFwcGxlLmNmbmV0d29yayQSCVBhc3N3b3JkczJtClwAAhIeAAQiGgIEdndodAoSXkFjY2Vzc29yeVBhaXJpbmckEhoABCIWAgR2d2h0Cg5eTmFub1JlZ2lzdHJ5JBIcAAQiGAIEdndodAoQXldhdGNoTWlncmF0aW9uJBINRGV2aWNlUGFpcmluZzIOCgIABhIIQmFja3N0b3A=
SHA256:L2Px1aYyR1tgChe8dIyTBSmCHCWEFJirZ3ELMFXz2PY=
CAYSDgoGaVBob25lEgRmdWxsEgwKBGlQYWQSBGZ1bGwSDAoEaVBvZBIEZnVsbBILCgNNYWMSBGZ1bGwSDAoEaU1hYxIEZnVsbBINCgdBcHBsZVRWEgJ0dhIOCgVXYXRjaBIFd2F0Y2gSFwoOQXVkaW9BY2Nlc3NvcnkSBWF1ZGlvGhoKC0NyZWRpdENhcmRzEgRmdWxsEgV3YXRjaBofChBTZWN1cmVPYmplY3RTeW5jEgRmdWxsEgV3YXRjaBoVCgZIZWFsdGgSBGZ1bGwSBXdhdGNoGhkKCkF1dG9VbmxvY2sSBGZ1bGwSBXdhdGNoGh4KBFdpRmkSBGZ1bGwSBXdhdGNoEgJ0dhIFYXVkaW8aHgoESG9tZRIEZnVsbBIFd2F0Y2gSAnR2EgVhdWRpbxokChVQcm90ZWN0ZWRDbG91ZFN0b3JhZ2USBGZ1bGwSBXdhdGNoGi0KE0xpbWl0ZWRQZWVyc0FsbG93ZWQSBGZ1bGwSBXdhdGNoEgJ0dhIFYXVkaW8aGAoJUGFzc3dvcmRzEgRmdWxsEgV3YXRjaBobCgxBcHBsaWNhdGlvbnMSBGZ1bGwSBXdhdGNoGhwKDURldmljZVBhaXJpbmcSBGZ1bGwSBXdhdGNoGhcKCEFwcGxlUGF5EgRmdWxsEgV3YXRjaBoWCgdNYW5hdGVlEgRmdWxsEgV3YXRjaBoVCgZFbmdyYW0SBGZ1bGwSBXdhdGNoIhsKBWF1ZGlvEgRmdWxsEgV3YXRjaBIFYXVkaW8iFQoCdHYSBGZ1bGwSBXdhdGNoEgJ0diIUCgV3YXRjaBIEZnVsbBIFd2F0Y2giEwoEZnVsbBIEZnVsbBIFd2F0Y2gyIgoWAAQiEgIEdndodAoKXkFwcGxlUGF5JBIIQXBwbGVQYXkyJgoYAAQiFAIEdndodAoMXkF1dG9VbmxvY2skEgpBdXRvVW5sb2NrMh4KFAAEIhACBHZ3aHQKCF5FbmdyYW0kEgZFbmdyYW0yHgoUAAQiEAIEdndodAoIXkhlYWx0aCQSBkhlYWx0aDIaChIABCIOAgR2d2h0CgZeSG9tZSQSBEhvbWUyIAoVAAQiEQIEdndodAoJXk1hbmF0ZWUkEgdNYW5hdGVlMjgKIQAEIh0CBHZ3aHQKFV5MaW1pdGVkUGVlcnNBbGxvd2VkJBITTGltaXRlZFBlZXJzQWxsb3dlZDJdClAAAhIeAAQiGgIEdndodAoSXkNvbnRpbnVpdHlVbmxvY2skEhUABCIRAgR2d2h0CgleSG9tZUtpdCQSFQAEIhECBHZ3aHQKCV5BcHBsZVRWJBIJTm90U3luY2VkMisKGwAEIhcCBGFncnAKD15bMC05QS1aXXsxMH1cLhIMQXBwbGljYXRpb25zMsoBCrUBAAISNgABChMABCIPAgVjbGFzcwoGXmdlbnAkCh0ABCIZAgRhZ3JwChFeY29tXC5hcHBsZVwuc2JkJBJAAAEKEwAEIg8CBWNsYXNzCgZea2V5cyQKJwAEIiMCBGFncnAKG15jb21cLmFwcGxlXC5zZWN1cml0eVwuc29zJBIZAAQiFQIEdndodAoNXkJhY2t1cEJhZ1YwJBIcAAQiGAIEdndodAoQXmlDbG91ZElkZW50aXR5JBIQU2VjdXJlT2JqZWN0U3luYzJjClsAAhISAAQiDgIEdndodAoGXldpRmkkEkMAAQoTAAQiDwIFY2xhc3MKBl5nZW5wJAoTAAQiDwIEYWdycAoHXmFwcGxlJAoVAAQiEQIEc3ZjZQoJXkFpclBvcnQkEgRXaUZpMp0DCoMDAAISGAAEIhQCBHZ3aHQKDF5QQ1MtQmFja3VwJBIaAAQiFgIEdndodAoOXlBDUy1DbG91ZEtpdCQSGAAEIhQCBHZ3aHQKDF5QQ1MtRXNjcm93JBIVAAQiEQIEdndodAoJXlBDUy1GREUkEhoABCIWAgR2d2h0Cg5eUENTLUZlbGRzcGFyJBIaAAQiFgIEdndodAoOXlBDUy1NYWlsRHJvcCQSGgAEIhYCBHZ3aHQKDl5QQ1MtTWFpbGRyb3AkEhsABCIXAgR2d2h0Cg9eUENTLU1hc3RlcktleSQSFwAEIhMCBHZ3aHQKC15QQ1MtTm90ZXMkEhgABCIUAgR2d2h0CgxeUENTLVBob3RvcyQSGQAEIhUCBHZ3aHQKDV5QQ1MtU2hhcmluZyQSHgAEIhoCBHZ3aHQKEl5QQ1MtaUNsb3VkQmFja3VwJBIdAAQiGQIEdndodAoRXlBDUy1pQ2xvdWREcml2ZSQSGgAEIhYCBHZ3aHQKDl5QQ1MtaU1lc3NhZ2UkEhVQcm90ZWN0ZWRDbG91ZFN0b3JhZ2UyPQouAAQiKgIEYWdycAoiXmNvbVwuYXBwbGVcLnNhZmFyaVwuY3JlZGl0LWNhcmRzJBILQ3JlZGl0Q2FyZHMyMAojAAQiHwIEYWdycAoXXmNvbVwuYXBwbGVcLmNmbmV0d29yayQSCVBhc3N3b3JkczJtClwAAhIeAAQiGgIEdndodAoSXkFjY2Vzc29yeVBhaXJpbmckEhoABCIWAgR2d2h0Cg5eTmFub1JlZ2lzdHJ5JBIcAAQiGAIEdndodAoQXldhdGNoTWlncmF0aW9uJBINRGV2aWNlUGFpcmluZzIOCgIABhIIQmFja3N0b3A=
^com\.apple\.sbd$
^com\.apple\.security\.sos$
^com\.apple\.safari\.credit-cards$
^com\.apple\.cfnetwork$
SHA256:dL8Qujqzprhp6FdH5GzNMtPlnZtLWMwfiiF7aykr8WU=
CAcSDgoGaVBob25lEgRmdWxsEgwKBGlQYWQSBGZ1bGwSDAoEaVBvZBIEZnVsbBILCgNNYWMSBGZ1bGwSDAoEaU1hYxIEZnVsbBINCgdBcHBsZVRWEgJ0dhIOCgVXYXRjaBIFd2F0Y2gSFwoOQXVkaW9BY2Nlc3NvcnkSBWF1ZGlvGh4KBEhvbWUSBGZ1bGwSBXdhdGNoEgJ0dhIFYXVkaW8aJAoVUHJvdGVjdGVkQ2xvdWRTdG9yYWdlEgRmdWxsEgV3YXRjaBoYCglQYXNzd29yZHMSBGZ1bGwSBXdhdGNoGh8KEFNlY3VyZU9iamVjdFN5bmMSBGZ1bGwSBXdhdGNoGh4KBFdpRmkSBGZ1bGwSBXdhdGNoEgJ0dhIFYXVkaW8aGgoLQ3JlZGl0Q2FyZHMSBGZ1bGwSBXdhdGNoGhcKCEFwcGxlUGF5EgRmdWxsEgV3YXRjaBoVCgZIZWFsdGgSBGZ1bGwSBXdhdGNoGhkKCkF1dG9VbmxvY2sSBGZ1bGwSBXdhdGNoGi0KE0xpbWl0ZWRQZWVyc0FsbG93ZWQSBGZ1bGwSBXdhdGNoEgJ0dhIFYXVkaW8aHAoNRGV2aWNlUGFpcmluZxIEZnVsbBIFd2F0Y2gaFgoHTWFuYXRlZRIEZnVsbBIFd2F0Y2gaFQoGRW5ncmFtEgRmdWxsEgV3YXRjaBoXCghCYWNrc3RvcBIEZnVsbBIFd2F0Y2gaGwoMQXBwbGljYXRpb25zEgRmdWxsEgV3YXRjaCITCgRmdWxsEgRmdWxsEgV3YXRjaCIVCgJ0dhIEZnVsbBIFd2F0Y2gSAnR2IhQKBXdhdGNoEgRmdWxsEgV3YXRjaCIbCgVhdWRpbxIEZnVsbBIFd2F0Y2gSBWF1ZGlvMiIKFgAEIhICBHZ3aHQKCl5BcHBsZVBheSQSCEFwcGxlUGF5MiYKGAAEIhQCBHZ3aHQKDF5BdXRvVW5sb2NrJBIKQXV0b1VubG9jazIeChQABCIQAgR2d2h0CgheRW5ncmFtJBIGRW5ncmFtMh4KFAAEIhACBHZ3aHQKCF5IZWFsdGgkEgZIZWFsdGgyGgoSAAQiDgIEdndodAoGXkhvbWUkEgRIb21lMiAKFQAEIhECBHZ3aHQKCV5NYW5hdGVlJBIHTWFuYXRlZTI4CiEABCIdAgR2d2h0ChVeTGltaXRlZFBlZXJzQWxsb3dlZCQSE0xpbWl0ZWRQZWVyc0FsbG93ZWQyXQpQAAISHgAEIhoCBHZ3aHQKEl5Db250aW51aXR5VW5sb2NrJBIVAAQiEQIEdndodAoJXkhvbWVLaXQkEhUABCIRAgR2d2h0CgleQXBwbGVUViQSCU5vdFN5bmNlZDIrChsABCIXAgRhZ3JwCg9eWzAtOUEtWl17MTB9XC4SDEFwcGxpY2F0aW9uczLKAQq1AQACEjYAAQoTAAQiDwIFY2xhc3MKBl5nZW5wJAodAAQiGQIEYWdycAoRXmNvbVwuYXBwbGVcLnNiZCQSQAABChMABCIPAgVjbGFzcwoGXmtleXMkCicABCIjAgRhZ3JwChteY29tXC5hcHBsZVwuc2VjdXJpdHlcLnNvcyQSGQAEIhUCBHZ3aHQKDV5CYWNrdXBCYWdWMCQSHAAEIhgCBHZ3aHQKEF5pQ2xvdWRJZGVudGl0eSQSEFNlY3VyZU9iamVjdFN5bmMyYwpbAAISEgAEIg4CBHZ3aHQKBl5XaUZpJBJDAAEKEwAEIg8CBWNsYXNzCgZeZ2VucCQKEwAEIg8CBGFncnAKB15hcHBsZSQKFQAEIhECBHN2Y2UKCV5BaXJQb3J0JBIEV2lGaTKdAwqDAwACEhgABCIUAgR2d2h0CgxeUENTLUJhY2t1cCQSGgAEIhYCBHZ3aHQKDl5QQ1MtQ2xvdWRLaXQkEhgABCIUAgR2d2h0CgxeUENTLUVzY3JvdyQSFQAEIhECBHZ3aHQKCV5QQ1MtRkRFJBIaAAQiFgIEdndodAoOXlBDUy1GZWxkc3BhciQSGgAEIhYCBHZ3aHQKDl5QQ1MtTWFpbERyb3AkEhoABCIWAgR2d2h0Cg5eUENTLU1haWxkcm9wJBIbAAQiFwIEdndodAoPXlBDUy1NYXN0ZXJLZXkkEhcABCITAgR2d2h0CgteUENTLU5vdGVzJBIYAAQiFAIEdndodAoMXlBDUy1QaG90b3MkEhkABCIVAgR2d2h0Cg1eUENTLVNoYXJpbmckEh4ABCIaAgR2d2h0ChJeUENTLWlDbG91ZEJhY2t1cCQSHQAEIhkCBHZ3aHQKEV5QQ1MtaUNsb3VkRHJpdmUkEhoABCIWAgR2d2h0Cg5eUENTLWlNZXNzYWdlJBIVUHJvdGVjdGVkQ2xvdWRTdG9yYWdlMj0KLgAEIioCBGFncnAKIl5jb21cLmFwcGxlXC5zYWZhcmlcLmNyZWRpdC1jYXJkcyQSC0NyZWRpdENhcmRzMjAKIwAEIh8CBGFncnAKF15jb21cLmFwcGxlXC5jZm5ldHdvcmskEglQYXNzd29yZHMybQpcAAISHgAEIhoCBHZ3aHQKEl5BY2Nlc3NvcnlQYWlyaW5nJBIaAAQiFgIEdndodAoOXk5hbm9SZWdpc3RyeSQSHAAEIhgCBHZ3aHQKEF5XYXRjaE1pZ3JhdGlvbiQSDURldmljZVBhaXJpbmcyDgoCAAYSCEJhY2tzdG9w
SHA256:TeQdvkO5GhKk6ayq004RlKDspusM8keCq3sXvKlmp7g=
CAgSDgoGaVBob25lEgRmdWxsEgwKBGlQYWQSBGZ1bGwSDAoEaVBvZBIEZnVsbBILCgNNYWMSBGZ1bGwSDAoEaU1hYxIEZnVsbBINCgdBcHBsZVRWEgJ0dhIOCgVXYXRjaBIFd2F0Y2gSFwoOQXVkaW9BY2Nlc3NvcnkSBWF1ZGlvGhsKDEFwcGxpY2F0aW9ucxIEZnVsbBIFd2F0Y2gaLwoVUHJvdGVjdGVkQ2xvdWRTdG9yYWdlEgRmdWxsEgV3YXRjaBICdHYSBWF1ZGlvGhgKCVBhc3N3b3JkcxIEZnVsbBIFd2F0Y2gaFwoIQmFja3N0b3ASBGZ1bGwSBXdhdGNoGh4KBFdpRmkSBGZ1bGwSBXdhdGNoEgJ0dhIFYXVkaW8aHwoQU2VjdXJlT2JqZWN0U3luYxIEZnVsbBIFd2F0Y2gaFwoIQXBwbGVQYXkSBGZ1bGwSBXdhdGNoGhUKBkhlYWx0aBIEZnVsbBIFd2F0Y2gaGQoKQXV0b1VubG9jaxIEZnVsbBIFd2F0Y2gaLQoTTGltaXRlZFBlZXJzQWxsb3dlZBIEZnVsbBIFd2F0Y2gSAnR2EgVhdWRpbxocCg1EZXZpY2VQYWlyaW5nEgRmdWxsEgV3YXRjaBoWCgdNYW5hdGVlEgRmdWxsEgV3YXRjaBoVCgZFbmdyYW0SBGZ1bGwSBXdhdGNoGh4KBEhvbWUSBGZ1bGwSBXdhdGNoEgJ0dhIFYXVkaW8aGgoLQ3JlZGl0Q2FyZHMSBGZ1bGwSBXdhdGNoIhMKBGZ1bGwSBGZ1bGwSBXdhdGNoIhQKBXdhdGNoEgRmdWxsEgV3YXRjaCIbCgVhdWRpbxIEZnVsbBIFd2F0Y2gSBWF1ZGlvIhUKAnR2EgRmdWxsEgV3YXRjaBICdHYyIgoWAAQiEgIEdndodAoKXkFwcGxlUGF5JBIIQXBwbGVQYXkyJgoYAAQiFAIEdndodAoMXkF1dG9VbmxvY2skEgpBdXRvVW5sb2NrMh4KFAAEIhACBHZ3aHQKCF5FbmdyYW0kEgZFbmdyYW0yHgoUAAQiEAIEdndodAoIXkhlYWx0aCQSBkhlYWx0aDIaChIABCIOAgR2d2h0CgZeSG9tZSQSBEhvbWUyIAoVAAQiEQIEdndodAoJXk1hbmF0ZWUkEgdNYW5hdGVlMjgKIQAEIh0CBHZ3aHQKFV5MaW1pdGVkUGVlcnNBbGxvd2VkJBITTGltaXRlZFBlZXJzQWxsb3dlZDJdClAAAhIeAAQiGgIEdndodAoSXkNvbnRpbnVpdHlVbmxvY2skEhUABCIRAgR2d2h0CgleSG9tZUtpdCQSFQAEIhECBHZ3aHQKCV5BcHBsZVRWJBIJTm90U3luY2VkMisKGwAEIhcCBGFncnAKD15bMC05QS1aXXsxMH1cLhIMQXBwbGljYXRpb25zMsoBCrUBAAISNgABChMABCIPAgVjbGFzcwoGXmdlbnAkCh0ABCIZAgRhZ3JwChFeY29tXC5hcHBsZVwuc2JkJBJAAAEKEwAEIg8CBWNsYXNzCgZea2V5cyQKJwAEIiMCBGFncnAKG15jb21cLmFwcGxlXC5zZWN1cml0eVwuc29zJBIZAAQiFQIEdndodAoNXkJhY2t1cEJhZ1YwJBIcAAQiGAIEdndodAoQXmlDbG91ZElkZW50aXR5JBIQU2VjdXJlT2JqZWN0U3luYzJjClsAAhISAAQiDgIEdndodAoGXldpRmkkEkMAAQoTAAQiDwIFY2xhc3MKBl5nZW5wJAoTAAQiDwIEYWdycAoHXmFwcGxlJAoVAAQiEQIEc3ZjZQoJXkFpclBvcnQkEgRXaUZpMp0DCoMDAAISGAAEIhQCBHZ3aHQKDF5QQ1MtQmFja3VwJBIaAAQiFgIEdndodAoOXlBDUy1DbG91ZEtpdCQSGAAEIhQCBHZ3aHQKDF5QQ1MtRXNjcm93JBIVAAQiEQIEdndodAoJXlBDUy1GREUkEhoABCIWAgR2d2h0Cg5eUENTLUZlbGRzcGFyJBIaAAQiFgIEdndodAoOXlBDUy1NYWlsRHJvcCQSGgAEIhYCBHZ3aHQKDl5QQ1MtTWFpbGRyb3AkEhsABCIXAgR2d2h0Cg9eUENTLU1hc3RlcktleSQSFwAEIhMCBHZ3aHQKC15QQ1MtTm90ZXMkEhgABCIUAgR2d2h0CgxeUENTLVBob3RvcyQSGQAEIhUCBHZ3aHQKDV5QQ1MtU2hhcmluZyQSHgAEIhoCBHZ3aHQKEl5QQ1MtaUNsb3VkQmFja3VwJBIdAAQiGQIEdndodAoRXlBDUy1pQ2xvdWREcml2ZSQSGgAEIhYCBHZ3aHQKDl5QQ1MtaU1lc3NhZ2UkEhVQcm90ZWN0ZWRDbG91ZFN0b3JhZ2UyXApNAAISLgAEIioCBGFncnAKIl5jb21cLmFwcGxlXC5zYWZhcmlcLmNyZWRpdC1jYXJkcyQSGQAEIhUCBHZ3aHQKDV5DcmVkaXRDYXJkcyQSC0NyZWRpdENhcmRzMqYBCpgBAAISIwAEIh8CBGFncnAKF15jb21cLmFwcGxlXC5jZm5ldHdvcmskEioABCImAgRhZ3JwCh5eY29tXC5hcHBsZVwucGFzc3dvcmQtbWFuYWdlciQSKgAEIiYCBGFncnAKHl5jb21cLmFwcGxlXC5XZWJLaXRcLldlYkF1dGhuJBIXAAQiEwIEdndodAoLXlBhc3N3b3JkcyQSCVBhc3N3b3JkczJtClwAAhIeAAQiGgIEdndodAoSXkFjY2Vzc29yeVBhaXJpbmckEhoABCIWAgR2d2h0Cg5eTmFub1JlZ2lzdHJ5JBIcAAQiGAIEdndodAoQXldhdGNoTWlncmF0aW9uJBINRGV2aWNlUGFpcmluZzIOCgIABhIIQmFja3N0b3A6DEFwcGxpY2F0aW9uczoIQmFja3N0b3A6C0NyZWRpdENhcmRzOglQYXNzd29yZHM6BFdpRmlCCVBhc3N3b3Jkcw==
^com\.apple\.password-manager$
^com\.apple\.WebKit\.WebAuthn$
SHA256:uynvb6IWdFbCM2AQX0aKv0yUMLg8Z2wZjZY5k4jtAj8=
CAkSDgoGaVBob25lEgRmdWxsEgwKBGlQYWQSBGZ1bGwSDAoEaVBvZBIEZnVsbBILCgNNYWMSBGZ1bGwSDAoEaU1hYxIEZnVsbBINCgdBcHBsZVRWEgJ0dhIOCgVXYXRjaBIFd2F0Y2gSFwoOQXVkaW9BY2Nlc3NvcnkSBWF1ZGlvGh4KBEhvbWUSBGZ1bGwSBXdhdGNoEgJ0dhIFYXVkaW8aLwoVUHJvdGVjdGVkQ2xvdWRTdG9yYWdlEgRmdWxsEgV3YXRjaBICdHYSBWF1ZGlvGhgKCVBhc3N3b3JkcxIEZnVsbBIFd2F0Y2gaHwoQU2VjdXJlT2JqZWN0U3luYxIEZnVsbBIFd2F0Y2gaHgoEV2lGaRIEZnVsbBIFd2F0Y2gSAnR2EgVhdWRpbxobCgxBcHBsaWNhdGlvbnMSBGZ1bGwSBXdhdGNoGhcKCEFwcGxlUGF5EgRmdWxsEgV3YXRjaBoVCgZIZWFsdGgSBGZ1bGwSBXdhdGNoGhkKCkF1dG9VbmxvY2sSBGZ1bGwSBXdhdGNoGi0KE0xpbWl0ZWRQZWVyc0FsbG93ZWQSBGZ1bGwSBXdhdGNoEgJ0dhIFYXVkaW8aHAoNRGV2aWNlUGFpcmluZxIEZnVsbBIFd2F0Y2gaFgoHTWFuYXRlZRIEZnVsbBIFd2F0Y2gaFQoGRW5ncmFtEgRmdWxsEgV3YXRjaBoXCghCYWNrc3RvcBIEZnVsbBIFd2F0Y2gaGgoLQ3JlZGl0Q2FyZHMSBGZ1bGwSBXdhdGNoIhMKBGZ1bGwSBGZ1bGwSBXdhdGNoIhsKBWF1ZGlvEgRmdWxsEgV3YXRjaBIFYXVkaW8iFQoCdHYSBGZ1bGwSBXdhdGNoEgJ0diIUCgV3YXRjaBIEZnVsbBIFd2F0Y2gyIgoWAAQiEgIEdndodAoKXkFwcGxlUGF5JBIIQXBwbGVQYXkyJgoYAAQiFAIEdndodAoMXkF1dG9VbmxvY2skEgpBdXRvVW5sb2NrMh4KFAAEIhACBHZ3aHQKCF5FbmdyYW0kEgZFbmdyYW0yHgoUAAQiEAIEdndodAoIXkhlYWx0aCQSBkhlYWx0aDIaChIABCIOAgR2d2h0CgZeSG9tZSQSBEhvbWUyIAoVAAQiEQIEdndodAoJXk1hbmF0ZWUkEgdNYW5hdGVlMjgKIQAEIh0CBHZ3aHQKFV5MaW1pdGVkUGVlcnNBbGxvd2VkJBITTGltaXRlZFBlZXJzQWxsb3dlZDJdClAAAhIeAAQiGgIEdndodAoSXkNvbnRpbnVpdHlVbmxvY2skEhUABCIRAgR2d2h0CgleSG9tZUtpdCQSFQAEIhECBHZ3aHQKCV5BcHBsZVRWJBIJTm90U3luY2VkMisKGwAEIhcCBGFncnAKD15bMC05QS1aXXsxMH1cLhIMQXBwbGljYXRpb25zMsoBCrUBAAISNgABChMABCIPAgVjbGFzcwoGXmdlbnAkCh0ABCIZAgRhZ3JwChFeY29tXC5hcHBsZVwuc2JkJBJAAAEKEwAEIg8CBWNsYXNzCgZea2V5cyQKJwAEIiMCBGFncnAKG15jb21cLmFwcGxlXC5zZWN1cml0eVwuc29zJBIZAAQiFQIEdndodAoNXkJhY2t1cEJhZ1YwJBIcAAQiGAIEdndodAoQXmlDbG91ZElkZW50aXR5JBIQU2VjdXJlT2JqZWN0U3luYzJjClsAAhISAAQiDgIEdndodAoGXldpRmkkEkMAAQoTAAQiDwIFY2xhc3MKBl5nZW5wJAoTAAQiDwIEYWdycAoHXmFwcGxlJAoVAAQiEQIEc3ZjZQoJXkFpclBvcnQkEgRXaUZpMp0DCoMDAAISGAAEIhQCBHZ3aHQKDF5QQ1MtQmFja3VwJBIaAAQiFgIEdndodAoOXlBDUy1DbG91ZEtpdCQSGAAEIhQCBHZ3aHQKDF5QQ1MtRXNjcm93JBIVAAQiEQIEdndodAoJXlBDUy1GREUkEhoABCIWAgR2d2h0Cg5eUENTLUZlbGRzcGFyJBIaAAQiFgIEdndodAoOXlBDUy1NYWlsRHJvcCQSGgAEIhYCBHZ3aHQKDl5QQ1MtTWFpbGRyb3AkEhsABCIXAgR2d2h0Cg9eUENTLU1hc3RlcktleSQSFwAEIhMCBHZ3aHQKC15QQ1MtTm90ZXMkEhgABCIUAgR2d2h0CgxeUENTLVBob3RvcyQSGQAEIhUCBHZ3aHQKDV5QQ1MtU2hhcmluZyQSHgAEIhoCBHZ3aHQKEl5QQ1MtaUNsb3VkQmFja3VwJBIdAAQiGQIEdndodAoRXlBDUy1pQ2xvdWREcml2ZSQSGgAEIhYCBHZ3aHQKDl5QQ1MtaU1lc3NhZ2UkEhVQcm90ZWN0ZWRDbG91ZFN0b3JhZ2UyXApNAAISLgAEIioCBGFncnAKIl5jb21cLmFwcGxlXC5zYWZhcmlcLmNyZWRpdC1jYXJkcyQSGQAEIhUCBHZ3aHQKDV5DcmVkaXRDYXJkcyQSC0NyZWRpdENhcmRzMtIBCsQBAAISIwAEIh8CBGFncnAKF15jb21cLmFwcGxlXC5jZm5ldHdvcmskEioABCImAgRhZ3JwCh5eY29tXC5hcHBsZVwucGFzc3dvcmQtbWFuYWdlciQSKgAEIiYCBGFncnAKHl5jb21cLmFwcGxlXC5XZWJLaXRcLldlYkF1dGhuJBIqAAQiJgIEYWdycAoeXmNvbVwuYXBwbGVcLndlYmtpdFwud2ViYXV0aG4kEhcABCITAgR2d2h0CgteUGFzc3dvcmRzJBIJUGFzc3dvcmRzMm0KXAACEh4ABCIaAgR2d2h0ChJeQWNjZXNzb3J5UGFpcmluZyQSGgAEIhYCBHZ3aHQKDl5OYW5vUmVnaXN0cnkkEhwABCIYAgR2d2h0ChBeV2F0Y2hNaWdyYXRpb24kEg1EZXZpY2VQYWlyaW5nMg4KAgAGEghCYWNrc3RvcDoMQXBwbGljYXRpb25zOghCYWNrc3RvcDoLQ3JlZGl0Q2FyZHM6CVBhc3N3b3JkczoEV2lGaUIJUGFzc3dvcmRzShVQcm90ZWN0ZWRDbG91ZFN0b3JhZ2VKEFNlY3VyZU9iamVjdFN5bmM=
^com\.apple\.webkit\.webauthn$
SHA256:KOpJ0KvNFWPNJpDTVQwRRP30fm3zhvDQznROVmAKtJY=
CAoSDgoGaVBob25lEgRmdWxsEgwKBGlQYWQSBGZ1bGwSDAoEaVBvZBIEZnVsbBILCgNNYWMSBGZ1bGwSDAoEaU1hYxIEZnVsbBINCgdBcHBsZVRWEgJ0dhIOCgVXYXRjaBIFd2F0Y2gSFwoOQXVkaW9BY2Nlc3NvcnkSBWF1ZGlvEhAKBVdpblBDEgd3aW5kb3dzGhsKDEFwcGxpY2F0aW9ucxIEZnVsbBIFd2F0Y2gaOAoVUHJvdGVjdGVkQ2xvdWRTdG9yYWdlEgd3aW5kb3dzEgRmdWxsEgV3YXRjaBICdHYSBWF1ZGlvGiEKCVBhc3N3b3JkcxIEZnVsbBIFd2F0Y2gSB3dpbmRvd3MaHwoQU2VjdXJlT2JqZWN0U3luYxIEZnVsbBIFd2F0Y2gaHgoEV2lGaRIEZnVsbBIFd2F0Y2gSAnR2EgVhdWRpbxoXCghCYWNrc3RvcBIEZnVsbBIFd2F0Y2gaFwoIQXBwbGVQYXkSBGZ1bGwSBXdhdGNoGhkKCkF1dG9VbmxvY2sSBGZ1bGwSBXdhdGNoGhUKBkhlYWx0aBIEZnVsbBIFd2F0Y2gaNgoTTGltaXRlZFBlZXJzQWxsb3dlZBIHd2luZG93cxIEZnVsbBIFd2F0Y2gSAnR2EgVhdWRpbxocCg1EZXZpY2VQYWlyaW5nEgRmdWxsEgV3YXRjaBoWCgdNYW5hdGVlEgRmdWxsEgV3YXRjaBoVCgZFbmdyYW0SBGZ1bGwSBXdhdGNoGh4KBEhvbWUSBGZ1bGwSBXdhdGNoEgJ0dhIFYXVkaW8aGgoLQ3JlZGl0Q2FyZHMSBGZ1bGwSBXdhdGNoIhYKB3dpbmRvd3MSBGZ1bGwSBXdhdGNoIhMKBGZ1bGwSBGZ1bGwSBXdhdGNoIhUKAnR2EgRmdWxsEgV3YXRjaBICdHYiGwoFYXVkaW8SBGZ1bGwSBXdhdGNoEgVhdWRpbyIUCgV3YXRjaBIEZnVsbBIFd2F0Y2gyIgoWAAQiEgIEdndodAoKXkFwcGxlUGF5JBIIQXBwbGVQYXkyJgoYAAQiFAIEdndodAoMXkF1dG9VbmxvY2skEgpBdXRvVW5sb2NrMh4KFAAEIhACBHZ3aHQKCF5FbmdyYW0kEgZFbmdyYW0yHgoUAAQiEAIEdndodAoIXkhlYWx0aCQSBkhlYWx0aDIaChIABCIOAgR2d2h0CgZeSG9tZSQSBEhvbWUyIAoVAAQiEQIEdndodAoJXk1hbmF0ZWUkEgdNYW5hdGVlMjgKIQAEIh0CBHZ3aHQKFV5MaW1pdGVkUGVlcnNBbGxvd2VkJBITTGltaXRlZFBlZXJzQWxsb3dlZDJdClAAAhIeAAQiGgIEdndodAoSXkNvbnRpbnVpdHlVbmxvY2skEhUABCIRAgR2d2h0CgleSG9tZUtpdCQSFQAEIhECBHZ3aHQKCV5BcHBsZVRWJBIJTm90U3luY2VkMisKGwAEIhcCBGFncnAKD15bMC05QS1aXXsxMH1cLhIMQXBwbGljYXRpb25zMsoBCrUBAAISNgABChMABCIPAgVjbGFzcwoGXmdlbnAkCh0ABCIZAgRhZ3JwChFeY29tXC5hcHBsZVwuc2JkJBJAAAEKEwAEIg8CBWNsYXNzCgZea2V5cyQKJwAEIiMCBGFncnAKG15jb21cLmFwcGxlXC5zZWN1cml0eVwuc29zJBIZAAQiFQIEdndodAoNXkJhY2t1cEJhZ1YwJBIcAAQiGAIEdndodAoQXmlDbG91ZElkZW50aXR5JBIQU2VjdXJlT2JqZWN0U3luYzJjClsAAhISAAQiDgIEdndodAoGXldpRmkkEkMAAQoTAAQiDwIFY2xhc3MKBl5nZW5wJAoTAAQiDwIEYWdycAoHXmFwcGxlJAoVAAQiEQIEc3ZjZQoJXkFpclBvcnQkEgRXaUZpMp0DCoMDAAISGAAEIhQCBHZ3aHQKDF5QQ1MtQmFja3VwJBIaAAQiFgIEdndodAoOXlBDUy1DbG91ZEtpdCQSGAAEIhQCBHZ3aHQKDF5QQ1MtRXNjcm93JBIVAAQiEQIEdndodAoJXlBDUy1GREUkEhoABCIWAgR2d2h0Cg5eUENTLUZlbGRzcGFyJBIaAAQiFgIEdndodAoOXlBDUy1NYWlsRHJvcCQSGgAEIhYCBHZ3aHQKDl5QQ1MtTWFpbGRyb3AkEhsABCIXAgR2d2h0Cg9eUENTLU1hc3RlcktleSQSFwAEIhMCBHZ3aHQKC15QQ1MtTm90ZXMkEhgABCIUAgR2d2h0CgxeUENTLVBob3RvcyQSGQAEIhUCBHZ3aHQKDV5QQ1MtU2hhcmluZyQSHgAEIhoCBHZ3aHQKEl5QQ1MtaUNsb3VkQmFja3VwJBIdAAQiGQIEdndodAoRXlBDUy1pQ2xvdWREcml2ZSQSGgAEIhYCBHZ3aHQKDl5QQ1MtaU1lc3NhZ2UkEhVQcm90ZWN0ZWRDbG91ZFN0b3JhZ2UyXApNAAISLgAEIioCBGFncnAKIl5jb21cLmFwcGxlXC5zYWZhcmlcLmNyZWRpdC1jYXJkcyQSGQAEIhUCBHZ3aHQKDV5DcmVkaXRDYXJkcyQSC0NyZWRpdENhcmRzMtIBCsQBAAISIwAEIh8CBGFncnAKF15jb21cLmFwcGxlXC5jZm5ldHdvcmskEioABCImAgRhZ3JwCh5eY29tXC5hcHBsZVwucGFzc3dvcmQtbWFuYWdlciQSKgAEIiYCBGFncnAKHl5jb21cLmFwcGxlXC5XZWJLaXRcLldlYkF1dGhuJBIqAAQiJgIEYWdycAoeXmNvbVwuYXBwbGVcLndlYmtpdFwud2ViYXV0aG4kEhcABCITAgR2d2h0CgteUGFzc3dvcmRzJBIJUGFzc3dvcmRzMm0KXAACEh4ABCIaAgR2d2h0ChJeQWNjZXNzb3J5UGFpcmluZyQSGgAEIhYCBHZ3aHQKDl5OYW5vUmVnaXN0cnkkEhwABCIYAgR2d2h0ChBeV2F0Y2hNaWdyYXRpb24kEg1EZXZpY2VQYWlyaW5nMg4KAgAGEghCYWNrc3RvcDoMQXBwbGljYXRpb25zOghCYWNrc3RvcDoLQ3JlZGl0Q2FyZHM6CVBhc3N3b3JkczoEV2lGaUIJUGFzc3dvcmRzShVQcm90ZWN0ZWRDbG91ZFN0b3JhZ2VKEFNlY3VyZU9iamVjdFN5bmM=
SHA256:Cm1JV53DOukT+DcNYpkbTc8+rH3cAb/1Cop6Zn7PC28=
CAsSDgoGaVBob25lEgRmdWxsEgwKBGlQYWQSBGZ1bGwSDAoEaVBvZBIEZnVsbBILCgNNYWMSBGZ1bGwSDAoEaU1hYxIEZnVsbBINCgdBcHBsZVRWEgJ0dhIOCgVXYXRjaBIFd2F0Y2gSFwoOQXVkaW9BY2Nlc3NvcnkSBWF1ZGlvEhAKBVdpblBDEgd3aW5kb3dzGhsKDEFwcGxpY2F0aW9ucxIEZnVsbBIFd2F0Y2gaOAoVUHJvdGVjdGVkQ2xvdWRTdG9yYWdlEgd3aW5kb3dzEgRmdWxsEgV3YXRjaBICdHYSBWF1ZGlvGiEKCVBhc3N3b3JkcxIEZnVsbBIFd2F0Y2gSB3dpbmRvd3MaHgoESG9tZRIEZnVsbBIFd2F0Y2gSAnR2EgVhdWRpbxoeCgRXaUZpEgRmdWxsEgV3YXRjaBICdHYSBWF1ZGlvGh8KEFNlY3VyZU9iamVjdFN5bmMSBGZ1bGwSBXdhdGNoGhcKCEFwcGxlUGF5EgRmdWxsEgV3YXRjaBoZCgpBdXRvVW5sb2NrEgRmdWxsEgV3YXRjaBoVCgZIZWFsdGgSBGZ1bGwSBXdhdGNoGjYKE0xpbWl0ZWRQZWVyc0FsbG93ZWQSB3dpbmRvd3MSBGZ1bGwSBXdhdGNoEgJ0dhIFYXVkaW8aHAoNRGV2aWNlUGFpcmluZxIEZnVsbBIFd2F0Y2gaFgoHTWFuYXRlZRIEZnVsbBIFd2F0Y2gaFQoGRW5ncmFtEgRmdWxsEgV3YXRjaBoSCgNNRmkSBGZ1bGwSBXdhdGNoGhcKCEJhY2tzdG9wEgRmdWxsEgV3YXRjaBoaCgtDcmVkaXRDYXJkcxIEZnVsbBIFd2F0Y2giFgoHd2luZG93cxIEZnVsbBIFd2F0Y2giEwoEZnVsbBIEZnVsbBIFd2F0Y2giFAoFd2F0Y2gSBGZ1bGwSBXdhdGNoIhUKAnR2EgRmdWxsEgV3YXRjaBICdHYiGwoFYXVkaW8SBGZ1bGwSBXdhdGNoEgVhdWRpbzIiChYABCISAgR2d2h0CgpeQXBwbGVQYXkkEghBcHBsZVBheTImChgABCIUAgR2d2h0CgxeQXV0b1VubG9jayQSCkF1dG9VbmxvY2syHgoUAAQiEAIEdndodAoIXkVuZ3JhbSQSBkVuZ3JhbTIeChQABCIQAgR2d2h0CgheSGVhbHRoJBIGSGVhbHRoMhoKEgAEIg4CBHZ3aHQKBl5Ib21lJBIESG9tZTIgChUABCIRAgR2d2h0CgleTWFuYXRlZSQSB01hbmF0ZWUyOAohAAQiHQIEdndodAoVXkxpbWl0ZWRQZWVyc0FsbG93ZWQkEhNMaW1pdGVkUGVlcnNBbGxvd2VkMl0KUAACEh4ABCIaAgR2d2h0ChJeQ29udGludWl0eVVubG9jayQSFQAEIhECBHZ3aHQKCV5Ib21lS2l0JBIVAAQiEQIEdndodAoJXkFwcGxlVFYkEglOb3RTeW5jZWQyGAoRAAQiDQIEdndodAoFXk1GaSQSA01GaTIrChsABCIXAgRhZ3JwCg9eWzAtOUEtWl17MTB9XC4SDEFwcGxpY2F0aW9uczLKAQq1AQACEjYAAQoTAAQiDwIFY2xhc3MKBl5nZW5wJAodAAQiGQIEYWdycAoRXmNvbVwuYXBwbGVcLnNiZCQSQAABChMABCIPAgVjbGFzcwoGXmtleXMkCicABCIjAgRhZ3JwChteY29tXC5hcHBsZVwuc2VjdXJpdHlcLnNvcyQSGQAEIhUCBHZ3aHQKDV5CYWNrdXBCYWdWMCQSHAAEIhgCBHZ3aHQKEF5pQ2xvdWRJZGVudGl0eSQSEFNlY3VyZU9iamVjdFN5bmMyYwpbAAISEgAEIg4CBHZ3aHQKBl5XaUZpJBJDAAEKEwAEIg8CBWNsYXNzCgZeZ2VucCQKEwAEIg8CBGFncnAKB15hcHBsZSQKFQAEIhECBHN2Y2UKCV5BaXJQb3J0JBIEV2lGaTKdAwqDAwACEhgABCIUAgR2d2h0CgxeUENTLUJhY2t1cCQSGgAEIhYCBHZ3aHQKDl5QQ1MtQ2xvdWRLaXQkEhgABCIUAgR2d2h0CgxeUENTLUVzY3JvdyQSFQAEIhECBHZ3aHQKCV5QQ1MtRkRFJBIaAAQiFgIEdndodAoOXlBDUy1GZWxkc3BhciQSGgAEIhYCBHZ3aHQKDl5QQ1MtTWFpbERyb3AkEhoABCIWAgR2d2h0Cg5eUENTLU1haWxkcm9wJBIbAAQiFwIEdndodAoPXlBDUy1NYXN0ZXJLZXkkEhcABCITAgR2d2h0CgteUENTLU5vdGVzJBIYAAQiFAIEdndodAoMXlBDUy1QaG90b3MkEhkABCIVAgR2d2h0Cg1eUENTLVNoYXJpbmckEh4ABCIaAgR2d2h0ChJeUENTLWlDbG91ZEJhY2t1cCQSHQAEIhkCBHZ3aHQKEV5QQ1MtaUNsb3VkRHJpdmUkEhoABCIWAgR2d2h0Cg5eUENTLWlNZXNzYWdlJBIVUHJvdGVjdGVkQ2xvdWRTdG9yYWdlMlwKTQACEi4ABCIqAgRhZ3JwCiJeY29tXC5hcHBsZVwuc2FmYXJpXC5jcmVkaXQtY2FyZHMkEhkABCIVAgR2d2h0Cg1eQ3JlZGl0Q2FyZHMkEgtDcmVkaXRDYXJkczLSAQrEAQACEiMABCIfAgRhZ3JwChdeY29tXC5hcHBsZVwuY2ZuZXR3b3JrJBIqAAQiJgIEYWdycAoeXmNvbVwuYXBwbGVcLnBhc3N3b3JkLW1hbmFnZXIkEioABCImAgRhZ3JwCh5eY29tXC5hcHBsZVwuV2ViS2l0XC5XZWJBdXRobiQSKgAEIiYCBGFncnAKHl5jb21cLmFwcGxlXC53ZWJraXRcLndlYmF1dGhuJBIXAAQiEwIEdndodAoLXlBhc3N3b3JkcyQSCVBhc3N3b3JkczJtClwAAhIeAAQiGgIEdndodAoSXkFjY2Vzc29yeVBhaXJpbmckEhoABCIWAgR2d2h0Cg5eTmFub1JlZ2lzdHJ5JBIcAAQiGAIEdndodAoQXldhdGNoTWlncmF0aW9uJBINRGV2aWNlUGFpcmluZzIOCgIABhIIQmFja3N0b3A6DEFwcGxpY2F0aW9uczoIQmFja3N0b3A6C0NyZWRpdENhcmRzOglQYXNzd29yZHM6BFdpRmlCCVBhc3N3b3Jkc0oVUHJvdGVjdGVkQ2xvdWRTdG9yYWdlShBTZWN1cmVPYmplY3RTeW5j
SHA256:9Tb43EoxMTKvR1FTnPrWBKXf+Y20uaRdFa2TF6zR6xs=
CAwSDQoHQXBwbGVUVhICdHYSFwoOQXVkaW9BY2Nlc3NvcnkSBWF1ZGlvEgsKA01hYxIEZnVsbBIOCgVXYXRjaBIFd2F0Y2gSEAoFV2luUEMSB3dpbmRvd3MSDAoEaU1hYxIEZnVsbBIMCgRpUGFkEgRmdWxsEg4KBmlQaG9uZRIEZnVsbBIMCgRpUG9kEgRmdWxsGhcKCEFwcGxlUGF5EgRmdWxsEgV3YXRjaBobCgxBcHBsaWNhdGlvbnMSBGZ1bGwSBXdhdGNoGhkKCkF1dG9VbmxvY2sSBGZ1bGwSBXdhdGNoGhcKCEJhY2tzdG9wEgRmdWxsEgV3YXRjaBoaCgtDcmVkaXRDYXJkcxIEZnVsbBIFd2F0Y2gaHAoNRGV2aWNlUGFpcmluZxIEZnVsbBIFd2F0Y2gaFQoGRW5ncmFtEgRmdWxsEgV3YXRjaBoVCgZIZWFsdGgSBGZ1bGwSBXdhdGNoGh4KBEhvbWUSBGZ1bGwSBXdhdGNoEgJ0dhIFYXVkaW8aNgoTTGltaXRlZFBlZXJzQWxsb3dlZBIHd2luZG93cxIEZnVsbBIFd2F0Y2gSAnR2EgVhdWRpbxoSCgNNRmkSBGZ1bGwSBXdhdGNoGhYKB01hbmF0ZWUSBGZ1bGwSBXdhdGNoGiEKCVBhc3N3b3JkcxIEZnVsbBIFd2F0Y2gSB3dpbmRvd3MaOAoVUHJvdGVjdGVkQ2xvdWRTdG9yYWdlEgd3aW5kb3dzEgRmdWxsEgV3YXRjaBICdHYSBWF1ZGlvGh8KEFNlY3VyZU9iamVjdFN5bmMSBGZ1bGwSBXdhdGNoGh4KBFdpRmkSBGZ1bGwSBXdhdGNoEgJ0dhIFYXVkaW8iGwoFYXVkaW8SBGZ1bGwSBXdhdGNoEgVhdWRpbyITCgRmdWxsEgRmdWxsEgV3YXRjaCIVCgJ0dhIEZnVsbBIFd2F0Y2gSAnR2IhQKBXdhdGNoEgRmdWxsEgV3YXRjaCIWCgd3aW5kb3dzEgRmdWxsEgV3YXRjaDIiChYABCISAgR2d2h0CgpeQXBwbGVQYXkkEghBcHBsZVBheTImChgABCIUAgR2d2h0CgxeQXV0b1VubG9jayQSCkF1dG9VbmxvY2syHgoUAAQiEAIEdndodAoIXkVuZ3JhbSQSBkVuZ3JhbTIeChQABCIQAgR2d2h0CgheSGVhbHRoJBIGSGVhbHRoMhoKEgAEIg4CBHZ3aHQKBl5Ib21lJBIESG9tZTIgChUABCIRAgR2d2h0CgleTWFuYXRlZSQSB01hbmF0ZWUyOAohAAQiHQIEdndodAoVXkxpbWl0ZWRQZWVyc0FsbG93ZWQkEhNMaW1pdGVkUGVlcnNBbGxvd2VkMl0KUAACEh4ABCIaAgR2d2h0ChJeQ29udGludWl0eVVubG9jayQSFQAEIhECBHZ3aHQKCV5Ib21lS2l0JBIVAAQiEQIEdndodAoJXkFwcGxlVFYkEglOb3RTeW5jZWQyGAoRAAQiDQIEdndodAoFXk1GaSQSA01GaTIrChsABCIXAgRhZ3JwCg9eWzAtOUEtWl17MTB9XC4SDEFwcGxpY2F0aW9uczLKAQq1AQACEjYAAQoTAAQiDwIFY2xhc3MKBl5nZW5wJAodAAQiGQIEYWdycAoRXmNvbVwuYXBwbGVcLnNiZCQSQAABChMABCIPAgVjbGFzcwoGXmtleXMkCicABCIjAgRhZ3JwChteY29tXC5hcHBsZVwuc2VjdXJpdHlcLnNvcyQSGQAEIhUCBHZ3aHQKDV5CYWNrdXBCYWdWMCQSHAAEIhgCBHZ3aHQKEF5pQ2xvdWRJZGVudGl0eSQSEFNlY3VyZU9iamVjdFN5bmMyYwpbAAISEgAEIg4CBHZ3aHQKBl5XaUZpJBJDAAEKEwAEIg8CBWNsYXNzCgZeZ2VucCQKEwAEIg8CBGFncnAKB15hcHBsZSQKFQAEIhECBHN2Y2UKCV5BaXJQb3J0JBIEV2lGaTKdAwqDAwACEhgABCIUAgR2d2h0CgxeUENTLUJhY2t1cCQSGgAEIhYCBHZ3aHQKDl5QQ1MtQ2xvdWRLaXQkEhgABCIUAgR2d2h0CgxeUENTLUVzY3JvdyQSFQAEIhECBHZ3aHQKCV5QQ1MtRkRFJBIaAAQiFgIEdndodAoOXlBDUy1GZWxkc3BhciQSGgAEIhYCBHZ3aHQKDl5QQ1MtTWFpbERyb3AkEhoABCIWAgR2d2h0Cg5eUENTLU1haWxkcm9wJBIbAAQiFwIEdndodAoPXlBDUy1NYXN0ZXJLZXkkEhcABCITAgR2d2h0CgteUENTLU5vdGVzJBIYAAQiFAIEdndodAoMXlBDUy1QaG90b3MkEhkABCIVAgR2d2h0Cg1eUENTLVNoYXJpbmckEh4ABCIaAgR2d2h0ChJeUENTLWlDbG91ZEJhY2t1cCQSHQAEIhkCBHZ3aHQKEV5QQ1MtaUNsb3VkRHJpdmUkEhoABCIWAgR2d2h0Cg5eUENTLWlNZXNzYWdlJBIVUHJvdGVjdGVkQ2xvdWRTdG9yYWdlMlwKTQACEi4ABCIqAgRhZ3JwCiJeY29tXC5hcHBsZVwuc2FmYXJpXC5jcmVkaXQtY2FyZHMkEhkABCIVAgR2d2h0Cg1eQ3JlZGl0Q2FyZHMkEgtDcmVkaXRDYXJkczLSAQrEAQACEiMABCIfAgRhZ3JwChdeY29tXC5hcHBsZVwuY2ZuZXR3b3JrJBIqAAQiJgIEYWdycAoeXmNvbVwuYXBwbGVcLnBhc3N3b3JkLW1hbmFnZXIkEioABCImAgRhZ3JwCh5eY29tXC5hcHBsZVwuV2ViS2l0XC5XZWJBdXRobiQSKgAEIiYCBGFncnAKHl5jb21cLmFwcGxlXC53ZWJraXRcLndlYmF1dGhuJBIXAAQiEwIEdndodAoLXlBhc3N3b3JkcyQSCVBhc3N3b3JkczJtClwAAhIeAAQiGgIEdndodAoSXkFjY2Vzc29yeVBhaXJpbmckEhoABCIWAgR2d2h0Cg5eTmFub1JlZ2lzdHJ5JBIcAAQiGAIEdndodAoQXldhdGNoTWlncmF0aW9uJBINRGV2aWNlUGFpcmluZzIOCgIABhIIQmFja3N0b3A6DEFwcGxpY2F0aW9uczoIQmFja3N0b3A6C0NyZWRpdENhcmRzOglQYXNzd29yZHM6BFdpRmlCCVBhc3N3b3Jkc0oVUHJvdGVjdGVkQ2xvdWRTdG9yYWdlShBTZWN1cmVPYmplY3RTeW5jUglQYXNzd29yZHM=
SHA256:lZrYULdc8y/68PbqIz3wBGs82z4R+LYUITiTs87SMyg=
CA0SDQoHQXBwbGVUVhICdHYSFwoOQXVkaW9BY2Nlc3NvcnkSBWF1ZGlvEgsKA01hYxIEZnVsbBIOCgVXYXRjaBIFd2F0Y2gSEAoFV2luUEMSB3dpbmRvd3MSDAoEaU1hYxIEZnVsbBIMCgRpUGFkEgRmdWxsEg4KBmlQaG9uZRIEZnVsbBIMCgRpUG9kEgRmdWxsGhcKCEFwcGxlUGF5EgRmdWxsEgV3YXRjaBobCgxBcHBsaWNhdGlvbnMSBGZ1bGwSBXdhdGNoGhkKCkF1dG9VbmxvY2sSBGZ1bGwSBXdhdGNoGhcKCEJhY2tzdG9wEgRmdWxsEgV3YXRjaBoaCgtDcmVkaXRDYXJkcxIEZnVsbBIFd2F0Y2gaHAoNRGV2aWNlUGFpcmluZxIEZnVsbBIFd2F0Y2gaFQoGRW5ncmFtEgRmdWxsEgV3YXRjaBoVCgZIZWFsdGgSBGZ1bGwSBXdhdGNoGh4KBEhvbWUSBGZ1bGwSBXdhdGNoEgJ0dhIFYXVkaW8aNgoTTGltaXRlZFBlZXJzQWxsb3dlZBIHd2luZG93cxIEZnVsbBIFd2F0Y2gSAnR2EgVhdWRpbxoTCgRNYWlsEgRmdWxsEgV3YXRjaBoSCgNNRmkSBGZ1bGwSBXdhdGNoGhYKB01hbmF0ZWUSBGZ1bGwSBXdhdGNoGiEKCVBhc3N3b3JkcxIEZnVsbBIFd2F0Y2gSB3dpbmRvd3MaOAoVUHJvdGVjdGVkQ2xvdWRTdG9yYWdlEgd3aW5kb3dzEgRmdWxsEgV3YXRjaBICdHYSBWF1ZGlvGh8KEFNlY3VyZU9iamVjdFN5bmMSBGZ1bGwSBXdhdGNoGh4KBFdpRmkSBGZ1bGwSBXdhdGNoEgJ0dhIFYXVkaW8iGwoFYXVkaW8SBGZ1bGwSBXdhdGNoEgVhdWRpbyITCgRmdWxsEgRmdWxsEgV3YXRjaCIVCgJ0dhIEZnVsbBIFd2F0Y2gSAnR2IhQKBXdhdGNoEgRmdWxsEgV3YXRjaCIWCgd3aW5kb3dzEgRmdWxsEgV3YXRjaDIiChYABCISAgR2d2h0CgpeQXBwbGVQYXkkEghBcHBsZVBheTImChgABCIUAgR2d2h0CgxeQXV0b1VubG9jayQSCkF1dG9VbmxvY2syHgoUAAQiEAIEdndodAoIXkVuZ3JhbSQSBkVuZ3JhbTIeChQABCIQAgR2d2h0CgheSGVhbHRoJBIGSGVhbHRoMhoKEgAEIg4CBHZ3aHQKBl5Ib21lJBIESG9tZTIgChUABCIRAgR2d2h0CgleTWFuYXRlZSQSB01hbmF0ZWUyOAohAAQiHQIEdndodAoVXkxpbWl0ZWRQZWVyc0FsbG93ZWQkEhNMaW1pdGVkUGVlcnNBbGxvd2VkMl0KUAACEh4ABCIaAgR2d2h0ChJeQ29udGludWl0eVVubG9jayQSFQAEIhECBHZ3aHQKCV5Ib21lS2l0JBIVAAQiEQIEdndodAoJXkFwcGxlVFYkEglOb3RTeW5jZWQyGAoRAAQiDQIEdndodAoFXk1GaSQSA01GaTIaChIABCIOAgR2d2h0CgZeTWFpbCQSBE1haWwyKwobAAQiFwIEYWdycAoPXlswLTlBLVpdezEwfVwuEgxBcHBsaWNhdGlvbnMyygEKtQEAAhI2AAEKEwAEIg8CBWNsYXNzCgZeZ2VucCQKHQAEIhkCBGFncnAKEV5jb21cLmFwcGxlXC5zYmQkEkAAAQoTAAQiDwIFY2xhc3MKBl5rZXlzJAonAAQiIwIEYWdycAobXmNvbVwuYXBwbGVcLnNlY3VyaXR5XC5zb3MkEhkABCIVAgR2d2h0Cg1eQmFja3VwQmFnVjAkEhwABCIYAgR2d2h0ChBeaUNsb3VkSWRlbnRpdHkkEhBTZWN1cmVPYmplY3RTeW5jMmMKWwACEhIABCIOAgR2d2h0CgZeV2lGaSQSQwABChMABCIPAgVjbGFzcwoGXmdlbnAkChMABCIPAgRhZ3JwCgdeYXBwbGUkChUABCIRAgRzdmNlCgleQWlyUG9ydCQSBFdpRmkynQMKgwMAAhIYAAQiFAIEdndodAoMXlBDUy1CYWNrdXAkEhoABCIWAgR2d2h0Cg5eUENTLUNsb3VkS2l0JBIYAAQiFAIEdndodAoMXlBDUy1Fc2Nyb3ckEhUABCIRAgR2d2h0CgleUENTLUZERSQSGgAEIhYCBHZ3aHQKDl5QQ1MtRmVsZHNwYXIkEhoABCIWAgR2d2h0Cg5eUENTLU1haWxEcm9wJBIaAAQiFgIEdndodAoOXlBDUy1NYWlsZHJvcCQSGwAEIhcCBHZ3aHQKD15QQ1MtTWFzdGVyS2V5JBIXAAQiEwIEdndodAoLXlBDUy1Ob3RlcyQSGAAEIhQCBHZ3aHQKDF5QQ1MtUGhvdG9zJBIZAAQiFQIEdndodAoNXlBDUy1TaGFyaW5nJBIeAAQiGgIEdndodAoSXlBDUy1pQ2xvdWRCYWNrdXAkEh0ABCIZAgR2d2h0ChFeUENTLWlDbG91ZERyaXZlJBIaAAQiFgIEdndodAoOXlBDUy1pTWVzc2FnZSQSFVByb3RlY3RlZENsb3VkU3RvcmFnZTJcCk0AAhIuAAQiKgIEYWdycAoiXmNvbVwuYXBwbGVcLnNhZmFyaVwuY3JlZGl0LWNhcmRzJBIZAAQiFQIEdndodAoNXkNyZWRpdENhcmRzJBILQ3JlZGl0Q2FyZHMy0gEKxAEAAhIjAAQiHwIEYWdycAoXXmNvbVwuYXBwbGVcLmNmbmV0d29yayQSKgAEIiYCBGFncnAKHl5jb21cLmFwcGxlXC5wYXNzd29yZC1tYW5hZ2VyJBIqAAQiJgIEYWdycAoeXmNvbVwuYXBwbGVcLldlYktpdFwuV2ViQXV0aG4kEioABCImAgRhZ3JwCh5eY29tXC5hcHBsZVwud2Via2l0XC53ZWJhdXRobiQSFwAEIhMCBHZ3aHQKC15QYXNzd29yZHMkEglQYXNzd29yZHMybQpcAAISHgAEIhoCBHZ3aHQKEl5BY2Nlc3NvcnlQYWlyaW5nJBIaAAQiFgIEdndodAoOXk5hbm9SZWdpc3RyeSQSHAAEIhgCBHZ3aHQKEF5XYXRjaE1pZ3JhdGlvbiQSDURldmljZVBhaXJpbmcyDgoCAAYSCEJhY2tzdG9wOgxBcHBsaWNhdGlvbnM6CEJhY2tzdG9wOgtDcmVkaXRDYXJkczoJUGFzc3dvcmRzOgRXaUZpQglQYXNzd29yZHNKFVByb3RlY3RlZENsb3VkU3RvcmFnZUoQU2VjdXJlT2JqZWN0U3luY1IJUGFzc3dvcmRz
CBASDQoHQXBwbGVUVhICdHYSFwoOQXVkaW9BY2Nlc3NvcnkSBWF1ZGlvEgsKA01hYxIEZnVsbBIOCgVXYXRjaBIFd2F0Y2gSEAoFV2luUEMSB3dpbmRvd3MSDAoEaU1hYxIEZnVsbBIMCgRpUGFkEgRmdWxsEg4KBmlQaG9uZRIEZnVsbBIMCgRpUG9kEgRmdWxsGhcKCEFwcGxlUGF5EgRmdWxsEgV3YXRjaBobCgxBcHBsaWNhdGlvbnMSBGZ1bGwSBXdhdGNoGhkKCkF1dG9VbmxvY2sSBGZ1bGwSBXdhdGNoGhcKCEJhY2tzdG9wEgRmdWxsEgV3YXRjaBoaCgtDcmVkaXRDYXJkcxIEZnVsbBIFd2F0Y2gaFwoIQ29udGFjdHMSBGZ1bGwSBXdhdGNoGhwKDURldmljZVBhaXJpbmcSBGZ1bGwSBXdhdGNoGhUKBkVuZ3JhbRIEZnVsbBIFd2F0Y2gaFQoGSGVhbHRoEgRmdWxsEgV3YXRjaBoeCgRIb21lEgRmdWxsEgV3YXRjaBICdHYSBWF1ZGlvGjYKE0xpbWl0ZWRQZWVyc0FsbG93ZWQSB3dpbmRvd3MSBGZ1bGwSBXdhdGNoEgJ0dhIFYXVkaW8aEwoETWFpbBIEZnVsbBIFd2F0Y2gaEgoDTUZpEgRmdWxsEgV3YXRjaBoWCgdNYW5hdGVlEgRmdWxsEgV3YXRjaBohCglQYXNzd29yZHMSBGZ1bGwSBXdhdGNoEgd3aW5kb3dzGjgKFVByb3RlY3RlZENsb3VkU3RvcmFnZRIHd2luZG93cxIEZnVsbBIFd2F0Y2gSAnR2EgVhdWRpbxofChBTZWN1cmVPYmplY3RTeW5jEgRmdWxsEgV3YXRjaBoeCgRXaUZpEgRmdWxsEgV3YXRjaBICdHYSBWF1ZGlvIhsKBWF1ZGlvEgRmdWxsEgV3YXRjaBIFYXVkaW8iEwoEZnVsbBIEZnVsbBIFd2F0Y2giFQoCdHYSBGZ1bGwSBXdhdGNoEgJ0diIUCgV3YXRjaBIEZnVsbBIFd2F0Y2giFgoHd2luZG93cxIEZnVsbBIFd2F0Y2gyIgoWAAQiEgIEdndodAoKXkFwcGxlUGF5JBIIQXBwbGVQYXkyJgoYAAQiFAIEdndodAoMXkF1dG9VbmxvY2skEgpBdXRvVW5sb2NrMh4KFAAEIhACBHZ3aHQKCF5FbmdyYW0kEgZFbmdyYW0yHgoUAAQiEAIEdndodAoIXkhlYWx0aCQSBkhlYWx0aDIaChIABCIOAgR2d2h0CgZeSG9tZSQSBEhvbWUyIAoVAAQiEQIEdndodAoJXk1hbmF0ZWUkEgdNYW5hdGVlMjgKIQAEIh0CBHZ3aHQKFV5MaW1pdGVkUGVlcnNBbGxvd2VkJBITTGltaXRlZFBlZXJzQWxsb3dlZDJdClAAAhIeAAQiGgIEdndodAoSXkNvbnRpbnVpdHlVbmxvY2skEhUABCIRAgR2d2h0CgleSG9tZUtpdCQSFQAEIhECBHZ3aHQKCV5BcHBsZVRWJBIJTm90U3luY2VkMhgKEQAEIg0CBHZ3aHQKBV5NRmkkEgNNRmkyGgoSAAQiDgIEdndodAoGXk1haWwkEgRNYWlsMiIKFgAEIhICBHZ3aHQKCl5Db250YWN0cyQSCENvbnRhY3RzMisKGwAEIhcCBGFncnAKD15bMC05QS1aXXsxMH1cLhIMQXBwbGljYXRpb25zMsoBCrUBAAISNgABChMABCIPAgVjbGFzcwoGXmdlbnAkCh0ABCIZAgRhZ3JwChFeY29tXC5hcHBsZVwuc2JkJBJAAAEKEwAEIg8CBWNsYXNzCgZea2V5cyQKJwAEIiMCBGFncnAKG15jb21cLmFwcGxlXC5zZWN1cml0eVwuc29zJBIZAAQiFQIEdndodAoNXkJhY2t1cEJhZ1YwJBIcAAQiGAIEdndodAoQXmlDbG91ZElkZW50aXR5JBIQU2VjdXJlT2JqZWN0U3luYzJjClsAAhISAAQiDgIEdndodAoGXldpRmkkEkMAAQoTAAQiDwIFY2xhc3MKBl5nZW5wJAoTAAQiDwIEYWdycAoHXmFwcGxlJAoVAAQiEQIEc3ZjZQoJXkFpclBvcnQkEgRXaUZpMp0DCoMDAAISGAAEIhQCBHZ3aHQKDF5QQ1MtQmFja3VwJBIaAAQiFgIEdndodAoOXlBDUy1DbG91ZEtpdCQSGAAEIhQCBHZ3aHQKDF5QQ1MtRXNjcm93JBIVAAQiEQIEdndodAoJXlBDUy1GREUkEhoABCIWAgR2d2h0Cg5eUENTLUZlbGRzcGFyJBIaAAQiFgIEdndodAoOXlBDUy1NYWlsRHJvcCQSGgAEIhYCBHZ3aHQKDl5QQ1MtTWFpbGRyb3AkEhsABCIXAgR2d2h0Cg9eUENTLU1hc3RlcktleSQSFwAEIhMCBHZ3aHQKC15QQ1MtTm90ZXMkEhgABCIUAgR2d2h0CgxeUENTLVBob3RvcyQSGQAEIhUCBHZ3aHQKDV5QQ1MtU2hhcmluZyQSHgAEIhoCBHZ3aHQKEl5QQ1MtaUNsb3VkQmFja3VwJBIdAAQiGQIEdndodAoRXlBDUy1pQ2xvdWREcml2ZSQSGgAEIhYCBHZ3aHQKDl5QQ1MtaU1lc3NhZ2UkEhVQcm90ZWN0ZWRDbG91ZFN0b3JhZ2UyXApNAAISLgAEIioCBGFncnAKIl5jb21cLmFwcGxlXC5zYWZhcmlcLmNyZWRpdC1jYXJkcyQSGQAEIhUCBHZ3aHQKDV5DcmVkaXRDYXJkcyQSC0NyZWRpdENhcmRzMtIBCsQBAAISIwAEIh8CBGFncnAKF15jb21cLmFwcGxlXC5jZm5ldHdvcmskEioABCImAgRhZ3JwCh5eY29tXC5hcHBsZVwucGFzc3dvcmQtbWFuYWdlciQSKgAEIiYCBGFncnAKHl5jb21cLmFwcGxlXC5XZWJLaXRcLldlYkF1dGhuJBIqAAQiJgIEYWdycAoeXmNvbVwuYXBwbGVcLndlYmtpdFwud2ViYXV0aG4kEhcABCITAgR2d2h0CgteUGFzc3dvcmRzJBIJUGFzc3dvcmRzMm0KXAACEh4ABCIaAgR2d2h0ChJeQWNjZXNzb3J5UGFpcmluZyQSGgAEIhYCBHZ3aHQKDl5OYW5vUmVnaXN0cnkkEhwABCIYAgR2d2h0ChBeV2F0Y2hNaWdyYXRpb24kEg1EZXZpY2VQYWlyaW5nMg4KAgAGEghCYWNrc3RvcDoMQXBwbGljYXRpb25zOghCYWNrc3RvcDoLQ3JlZGl0Q2FyZHM6CVBhc3N3b3JkczoEV2lGaUIJUGFzc3dvcmRzShVQcm90ZWN0ZWRDbG91ZFN0b3JhZ2VKEFNlY3VyZU9iamVjdFN5bmNSCVBhc3N3b3Jkcw==
raw policy doesn't match encoded bytes, new hash would be: %{public}s new data: %{public}s
v8@?0
preflightVouchWithBottle failed; forcing refetch and retrying: %{public}s
preflightVouchWithBottle unable to fetch current peers: %{public}s
preflightVouchWithBottle unable to fetch viable bottles: %{public}s
preflightVouchWithBottle failed after refetches: %{public}s
preflightVouchWithBottle unable to fetch policy documents: %{public}s
fetchCurrentPolicy failed to find ego peer information
fetchCurrentPolicy failed to create TPPeerPermanentInfo
no peer ID given
preflightVouchWithBottle found no peer to match bottle
preflightVouchWithBottle sponsor peer has no stable info
preflightVouchWithBottle complete: %{public}s
_TtC18TrustedPeersHelper19OctagonSelfPeerKeys
v24@0:8@16
B24@0:8@16
v16@0:8
encryptionKey
publicEncryptionKey
publicSigningKey
encryptionVerificationKey
signingVerificationKey
T@"_SFECKeyPair",N,&,VencryptionKey
T@"_SFECKeyPair",N,&,VsigningKey
T@"NSString",N,C
T@"_SFECPublicKey",N,&,VpublicEncryptionKey
T@"_SFECPublicKey",N,&,VpublicSigningKey
description
T@"NSString",N,R
T@"_SFECPublicKey",N,R
TrustedPeersHelper.OctagonSelfPeerKeys
<OctagonSelfPeerKeys: 
preflightRecoverOctagonWithRecoveryKey unable to fetch changes: %{public}s
preflightRecoverOctagonWithRecoveryKey: failed to create recovery keys: %{public}s
preflightRecoverOctagonWithRecoveryKey: recovery Key is not enrolled
preflightRecoverOctagonWithRecoveryKey: recovery Key is incorrect
preflightRecoverOctagonWithRecoveryKey complete: %{public}s
preflightCustodianRecoveryKey unable to fetch current peers: %{public}s
preflightCustodianRecoveryKey: no ego peer ID
Unable to parse uuid %{public}s
Unable to find custodian recovery key %{public}s on model
preflightCustodianRecoveryKey: failed to create custodian recovery keys: %{public}s
preflightCustodianRecoveryKey: custodian recovery Key is not enrolled
preflightCustodianRecoveryKey Untrusted custodian recovery key
preflightCustodianRecoveryKey Failed to find peer with ID
preflightCustodianRecoveryKey: error fetching policy: %{public}s
preflightCustodianRecoveryKey unable to fetch policy documents: %{public}s
preflightCustodianRecoveryKey complete: %{public}s
preflightRecoveryKey unable to fetch current peers: %{public}s
preflightRecoveryKey: no ego peer ID
cannot create TPPeerStableInfo
preflightRecoveryKey: failed to create recovery keys: %{public}s
preflightRecoveryKey: recovery Key is not enrolled
preflightRecoveryKey Untrusted recovery key set
preflightRecoveryKey Failed to find peer with ID
preflightRecoveryKey: error fetching policy: %{public}s
preflightRecoveryKey unable to fetch policy documents: %{public}s
preflightRecoveryKey complete: %{public}s
com.apple.security.cuttlefish
v16@?0@"CKRequestInfo"8
reset(_:completion:)
establish(_:completion:)
joinWithVoucher(_:completion:)
updateTrust(_:completion:)
setRecoveryKey(_:completion:)
fetchChanges(_:completion:)
fetchViableBottles(_:completion:)
fetchPolicyDocuments(_:completion:)
validatePeers(_:completion:)
reportHealth(_:completion:)
pushHealthInquiry(_:completion:)
getRepairAction(_:completion:)
getSupportAppInfo(_:completion:)
getClubCertificates(_:completion:)
fetchSosiCloudIdentity(_:completion:)
resetAccountCdpcontents(_:completion:)
addCustodianRecoveryKey(_:completion:)
fetchRecoverableTlkshares(_:completion:)
removeRecoveryKey(_:completion:)
performAtoprvactions(_:completion:)
_TtC18TrustedPeersHelper21RetryingCKCodeService
underlyingCKOperationRunner
queue
_TtC18TrustedPeersHelper31CuttlefishCKCodeOperationRunner
underlyingCodeService
ckContainer
_TtC18TrustedPeersHelper34CuttlefishCKOperationRunnerCreator
_TtC18TrustedPeersHelper12ContainerMap
ckCodeOperationRunnerCreator
personaAdapter
containers
.TrustedPeersHelper.db
%{public}s error: %{public}s (retrying, now=%{public}s, deadline=%{public}s
performATOPRVActions
removeRecoveryKey
fetchRecoverableTLKShares
addCustodianRecoveryKey
resetAccountCDPContents
fetchSOSiCloudIdentity
getClubCertificates
getSupportAppInfo
pushHealthInquiry
fetchPolicyDocuments
fetchViableBottles
ckoperation request finished: %{public}s %{public}s
Mismatch between primary CKContainer and requested user %{public}@
Mismatch between configured CKContainer (altDSID %{public}s and requested user %{public}s
FetchRecoverableTLKSharesResponse.View
EscrowInformation.Metadata
EscrowInformation.Metadata.ClientMetadata
_TtCV18TrustedPeersHelper8ViewKeysP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass
_view
_newTlk
_newClassA
_newClassC
_oldTlk
_TtCV18TrustedPeersHelper10EscrowPairP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass
_escrowRecordID
_bottle
_record
_TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass
_peer
_viewKeys
_tlkShares
_TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass
_changeToken
_TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass
_peerID
_stableInfoAndSig
_dynamicInfoAndSig
_TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass
_backupKeybagDigest
_clientMetadata
_secureBackupUsesMultipleIcscs
_bottleID
_secureBackupTimestamp
_escrowedSpki
_peerInfo
_serial
cloud_identity
secure_backup_metadata_timestamp
secure_backup_numeric_passphrase_length
secure_backup_uses_complex_passphrase
secure_backup_uses_numeric_passphrase
device_color
device_enclosure_color
device_mid
device_model
device_model_class
device_model_version
device_name
device_platform
backup_keybag_digest
client_metadata
secure_backup_uses_multiple_icscs
bottle_id
secure_backup_timestamp
escrowed_spki
peer_info
serial
creation_date
remaining_attempts
escrow_information_metadata
silent_attempt_allowed
record_status
viability_status
federation_id
expected_federation_id
certificates
certdata
federations
trusted_root_cert_versions
reset_reason
idmsTargetContext
idmsCuttlefishPassword
testingNotifyIdms
devices
passwordKeychainItemCount
octagon
escrow
serial_number
views
last_health_report
model_id
last_report
enabled
repair_action
escrow_record_move_request
escrow_record_label
current_federation
intended_federation
peer_id
requires_escrow_check
known_federations
state_machine_state
octagon_ego_identity
octagon_trust_state
device_machine_id
octagon_peer_id
sos_trust_state
sos_peer_id
validators_health
results
entries
keys
view
tlk_shares
viable_bottles
partial_bottles
legacy_records
filter_request
changes
change_token
zone_key_hierarchy_records
peer
stable_info_and_sig
dynamic_info_and_sig
recovery_signing_pub_key
recovery_encryption_pub_key
view_keys
bottle
success
account_health
failure_description
tlk_share
escrow_records
peers
graph_valid
graph_validation_error
peer_graph
trusted_peers
peer_name
machine_id
os_version
octagon_signing_key
octagon_encryption_key
escrow_record_id
included
excluded
preapprovals
valid_peer
all_peers_count
invalid_peers_count
missing_peers
value
version
hash
differences
more
record
escrowed_signing_spki
signature_using_escrow_key
signature_using_peer_key
class_a
class_c
new_tlk
new_class_a
new_class_c
old_tlk
uuid
parentkey_uuid
keyclass
wrappedkey_base64
upload_os_version
curve
epoch
key_uuid
poisoned
receiver
receiver_public_encryption_key
sender
wrappedkey
remove
update
permanent_info_and_sig
recovery_voucher
custodian_recovery_key_and_sig
custodian_recovery_key
voucher
peer_dynamic_info
peer_stable_info
peer_permanent_info
SOS_VIABLE_UNKNOWN
SOS_VIABLE
SOS_NOT_VIABLE
RECORD_STATUS_VALID
RECORD_STATUS_INVALID
SUPPORT_APP_DEVICE_STATUS_HEALTHY
SUPPORT_APP_DEVICE_STATUS_BROKEN
REPAIR_ACTION_NO_ACTION
REPAIR_ACTION_POST_REPAIR_ACCOUNT
REPAIR_ACTION_POST_REPAIR_ESCROW
REPAIR_ACTION_RESET_OCTAGON
REPAIR_ACTION_LEAVE_TRUST
FILTERING_REQUEST_UNKNOWN
FILTERING_REQUEST_BY_OCTAGON_ONLY
RESET_REASON_UNKNOWN
RESET_REASON_USER_INITIATED_RESET
RESET_REASON_HEALTH_CHECK
RESET_REASON_NO_BOTTLE_DURING_ESCROW_RECOVERY
RESET_REASON_LEGACY_JOIN_CIRCLE
RESET_REASON_RECOVERY_KEY
RESET_REASON_TEST_GENERATED
RESET_REASON_SUPPORT_APP_INITIATED_RESET
VIEW_KEY_CLASS_TLK
VIEW_KEY_CLASS_CLASS_A
VIEW_KEY_CLASS_CLASS_C
Preflighted recovery key is not correct
No escrow cache available
failed to create recovery key peer
failed to get peer views
No user specified
Existing container configuration does not match user 
 not found in database
No peers preapproved by the local peer
Unknown syncUserControllableViews number: 
Internal code failed, but didn't return error
Failed to encode protobuf data
SecurityFoundation returned an unknown type
failed to store the secret in the keychain 
peerID is invalid
failed to assemble bottle for peer
Failed to load secret due to type mismatch (value was not dictionary)
failed to load secret: 
Response missing from CloudKit
unknown error from cloudkit
The peer that created the bottle was not found
recovery key is not enrolled with octagon
no bottle present
untrusted recovery keys
failed to fetch escrow contents
bottle does not contain escrowed key spki
failed to verify signature
failed to create a bottled peer
bottle does not contain peer id
bottle does not contain peer signature
bottle does not contain escrow signature
bottle does not contain encrypted contents
0 bottles exist for escrow record id
failed to restore bottle
no bottle exists for peer
too many bottles exist for peer
policy document from server doesn't validate
no peers preapprove prepared identity
could not load allowed machineID list
prepared identity (
) not on allowed machineID list
unknown policy version: 
sponsor not registered: 
invalid voucher or signature
invalid stable info or signature
invalid permanent info or signature
missing dynamic info
missing stable info
needs authentication
failed to stored identity
no prepared identity
unable to create key pair
com.apple.security.trustedpeers.container
_TtC18TrustedPeersHelper9Container
cuttlefish
semaphore
persistentContainer
containerMO
model
escrowCacheTimeout
policyVersionOverride
testIgnoreCustodianUpdates
testDontSetAccountSetting
darwinNotifier
performATOPRVActions failed: %{public}s
recoveryKey is enrolled %{bool}d, privacy: .public)
isRecoveryKeySet complete %{public}s
getSupportAppInfo failed: %{public}s
getSupportAppInfo complete: %{public}s
validatePeers failed: %{public}s
validatePeers complete %{public}s
fetchRecoverableTlkshares succeeded: found %ld views and %ld total TLKShares
fetchRecoverableTlkshares failed: %{public}s
Fatal error
Down-casted Array element failed to match the target type
Expected 
NSArray element failed to match the Swift Array Element type
Expected 
FetchPolicyDocuments failed: %{public}s
Can't make policy document with hash %{public}s and data %{public}s
Received a policy version we didn't request: %llu
Requested hash %{public}s does not match fetched hash %{public}s
fetchPolicyDocuments complete: %{public}s
fetchViableBottles failed with %{public}s
fetchViableBottles succeeded with %{public}ld viable bottles and %{public}ld partial bottles
preapprovedJoin unable to fetch changes: %{public}s
preapprovedJoin: no prepared identity
Device not IDMS trusted
preapprovedJoin: self machineID %{public}s (me) not on list
preapprovedJoin but no existing peers, attempting establish
Unable to load signing key: %{public}s
Unable to load encryption key: %{public}s
preapprovedJoin: Don't have my own keys: can't join: %{public}s
preapprovedJoin: no peers preapprove our key
Unable to create peer for joining: %{public}s
Unable to create new peer stable info for joining
Unable to process keys before joining: %{public}s
preapprovedJoin unable to encode peer: %{public}s
preapprovedJoin peer: %{public}s
preapprovedJoin: uploading %ld tlk shares
preapprovedJoin voucher signatures: %{public}s
preapprovedJoin vouchers: %{public}s
preapprovedJoin dynamicInfoSig: %{public}s
preapprovedJoin dynamicInfo: %{public}s
preapprovedJoin stableInfoSig: %{public}s
preapprovedJoin stableInfo: %{public}s
preapprovedJoin permanentInfoSig: %{public}s
preapprovedJoin permanentInfo: %{public}s
Beginning preapprovedJoin for peer %{public}s
preapprovedJoin failed: %{public}s
preapprovedJoin succeeded
preapprovedJoin complete: %{public}s
preflightPreapprovedJoin unable to fetch changes: %{public}s
preflightPreapprovedJoin: error fetching all requested policies (continuing anyway): %{public}s
preflightPreapprovedJoin: no prepared identity
preflightPreapprovedJoin: invalid permanent info
preflightPreapprovedJoin: no peers preapprove our key
preflightPreapprovedJoin: no reciprocal trust for existing peers
preflightPreapprovedJoin complete: %{public}s
join: self machineID %{public}s not on list
Don't have my own peer keys; can't join: %{public}s
Error checking introduction: %{public}s
Join unable to encode peer: %{public}s
Join peer: %{public}s
Uploading %ld tlk shares
Join voucher signatures: %{public}s
Join vouchers: %{public}s
Join dynamicInfoSig: %{public}s
Join dynamicInfo: %{public}s
Join stableInfoSig: %{public}s
Join stableInfo: %{public}s
Join permanentInfoSig: %{public}s
Join permanentInfo: %{public}s
Beginning join for peer %{public}s
joinWithVoucher failed: %{public}s
JoinWithVoucher failed: %{public}s
JoinWithVoucher succeeded
join: error fetching all requested policies (continuing anyway): %{public}s
join complete: %{public}s
Unable to parse uuid: %{public}s
Custodian Recovery Key is not enrolled
failed to create custodian recovery keys: %{public}s
com.apple.security.egoIdentities
prepareInheritancePeer encryptionPubKey: %{public}s
prepareInheritancePeer signingPubKey: %{public}s
prepareInheritancePeer unable to fetch changes: %{public}s
Unable to save encryption key: %{public}s
fetchPolicyDocument: didn't return policy of version: %{public}s
Unable to fetch policy: %{public}s
Unable to save inheritance identity: %{public}s
permanentInfo does not exist
permanentInfoSig does not exist
stableInfo does not exist
stableInfoSig does not exist
Invalid stableinfo or signature
failed to create syncing policy: %{public}s
Unable to save signing key: %{public}s
prepareInheritancePeer complete peerID: %{public}s %{public}s
bottle creation failed: %{public}s
Unable to save identity: %{public}s
prepare complete peerID: %{public}s %{public}s
beginning a removeRecoveryKey
no prepared identity, cannot remove recovery key
permInfoSig does not exist
cannot create TPPeerPermanentInfo
cannot create peerViews
cannot create recovery key peer
handle: no signing key pair: %{public}s
Error creating recovery key peerid: %{public}s
Error preparing dynamic info: %{public}s
removeRecoveryKey failed: %{public}s
removeRecoveryKey handling failed: %{public}s
removeRecoveryKey succeeded
removeRecoveryKey complete: %{public}s
reportHealth complete %{public}s
Intending to set user-controllable views to %{public}s
peerID == %@ && container == %@
NSFetchRequestResult
Ignoring Custodian update due to test request: %{public}s
failed to parse custodian recovery key
Register CRK with peerID %{public}s
Local delete failed: %{public}s
Saved model with %ld peers
Deleting all CloudKit data
loadModel: no allowedMachineIDs?
loadModel: disallowedMachineIDs: %{public}s
loadModel: allowedMachineIDs: %{public}s
loadModel: recovery key not set in model, but is set on ego peer
loadModel: loaded %ld CRKs
loadModel: loaded %ld vouchers
loadModel: loaded %ld peers
loadModel: peer %{public}s has no dynamic info
loadModel: peer %{public}s has unparseable dynamic info
loadModel unable to update dynamic info for peer(%{public}@): %{public}s
loadModel: peer %{public}s has no stable info
loadModel: peer %{public}s has unparseable stable info
loadModel unable to update stable info for peer(%{public}@): %{public}s
Currently know about %ld peers
escrow cache and viable bottles are no longer valid
persist: New change token: %{public}s
persist: Received %ld peer differences, more: %{bool}d
updateTrustIfNeeded: No identity.
updateTrustIfNeeded: no signing key pair: %{public}s
not yet preapproved
updateTrustIfNeeded: ego peer is not in model, is %{public}s
updateTrustIfNeeded: couldn't calculate dynamic info: %{public}s
updateTrustIfNeeded: attempting updateTrust for %{public}s with: %{public}@
updateTrustIfNeeded: unable to compute a new syncing policy: %{public}s
updateTrustIfNeeded: unable to remove untrusted MachineIDs: %{public}s
updateTrustIfNeeded: complete.
updateTrustIfNeeded: produced a dynamicInfo: %{public}s
updateTrustIfNeeded: produced a stableInfo: %{public}s
UpdateTrust failed: %{public}s
fetchChangesAndUpdateTrustIfNeeded: fetching failed: %{public}s
updateTrustIfNeeded: error fetching all requested policies (continuing anyway): %{public}s
Fetching with change token: %{public}s
Could not fetch changes: %{public}s
Fetch error is an unknown error: %{public}s
change token is expired; resetting local CK storage
Could not persist changes: %{public}s
persist: no more changes!
persist: More changes indicated. Fetching...
Failed to reset local data: %{public}s
Model would like a full refetch, but we've done one at this refetch level: %lld
Forcing a full refetch due to model: last refetch level: %lld
Forcing a full refetch: by request
Have no self identity, can't make tlk shares
Couldn't parse self identity: %{public}s
Don't have my own peer keys; can't upload new TLKs: %{public}s
Unable to fetch dynamic info for self
Unable to process keys before uploading: %{public}s
Received %ld CKRecords back
Uploading some new TLKs: %{public}s
updateTLKs complete: %{public}s
setPreapprovedKeys: No identity.
setPreapprovedKeys: %{public}s
setPreapprovedKeys: no signing key pair: %{public}s
setPreapprovedKeys: couldn't calculate dynamic info: %{public}s
setPreapprovedKeys: attempting updateTrust for %{public}s with: %{public}@
setPreapprovedKeys: no change; nothing to do.
setPreapprovedKeys: produced a dynamicInfo: %{public}@
setPreapprovedKeys: updateTrust succeeded
setPreapprovedKeys: failed: %{public}s
setPreapprovedKeys complete: %{public}s
update complete: %{public}s
fetchAccountSettings unable to fetch changes: %{public}s
fetchAccountSettings complete: %{public}s
resetCDPAccountData failed: %{public}s
resetCDPAccountData complete: %{public}s
requestHealthCheck requiring escrow check: %{bool}d, knownFederations: %{public}s
requestHealthCheck: No identity.
health check complete: %{public}s
join: setting 'user view sync' control as: %{public}s
Unable to create TLKShares for keyset %{public}@: %{public}s
Planning to share %{public}s with peers %{public}s
No TLK contents for %{public}s, no TLK share possible
Making TLKShare for %{public}s for key %{public}s
best policy(%{public}@) is missing?
Ignoring policy version from pre-CKKS4All peer
no model ID override; returning error
prevailing policy is missing?
fetchCurrentPolicy failed to prevailing policy: %{public}s
returning a policy for model ID %{public}s
fetchCurrentPolicy failed to create TPPeerStableInfo
Fetching the syncing policy failed: %{public}s
fetchCurrentPolicy with no dynamic info
fetchCurrentPolicy complete: %{public}s
starting fetchViableBottlesWithSemaphoreFromCuttlefish
fetchViableBottles unable to save bottles and records with %{public}s
fetchViableBottles returned partial bottles: %{public}s
fetchViableBottles returned viable bottles: %{public}s
fetchViableBottles saved bottles and records
Requesting Cuttlefish to filter records by Octagon Only
starting fetchEscrowRecordsFromCacheWithSemaphore and will check timeout: %{bool}d
starting fetchFromEscrowCacheWithSemaphore and will check timeout: %{bool}d
skipping timeout check and directly returning cached records
escrow cache no longer valid
escrow cache still valid
no cached records were found, no saved escrowFetchDate either, returning no cache error
starting fetchViableBottlesFromCacheWithSemaphore and will check timeout: %{bool}d
starting fetchEscrowRecordsWithSemaphore from source %ld
fetchEscrowRecordsFromCache did not return any records, checking cuttlefish
fetchEscrowRecordsFromCache returned records
beginning a fetchViableBottles from source %ld
fetchViableBottlesFromCache did not return any bottles, checking cuttlefish
fetchViableBottlesFromCache returned bottles
beginning a removeEscrowCache
removeEscrowCache complete %{public}s
fetchViableBottles returned no viable bottles
fetchViableBottles returned no legacy escrow records
fetchViableBottles returned no partially viable bottles, but that's ok
ignoring double enrollment record %{public}s
fetchViableBottles already knows about legacy record %{public}s, re-adding entry
fetchViableBottles saving new bottle: %{public}@
fetchViableBottles already knows about bottle: %{public}s
fetchViableBottles already knows about record, re-adding entry: %{public}s
fetchViableBottles already knows about record, re-adding entry, label = %{public}s
beginning a fetchEscrowContents
fetchEscrowContents failed
fetchEscrowContents no bottle matches peerID
fetchEscrowContents failed to load entropy: %{public}s
fetchEscrowContents failed to load entropy
fetchEscrowContents no escrow signing spki
fetchEscrowContents complete: %{public}s
No dynamic info for self?
No longer have signing key pair; can't sign distrust: %{public}s
attempting distrust for %{public}s with: %{public}@
updateTrust failed: %{public}s
distrust handling failed: %{public}s
distrust succeeded
Self-distrust via peerID not allowed
distrust complete: %{public}s
departByDistrustingSelf complete: %{public}s
As a nonmember, can't vouch for someone else
Invalid permenent info or signature; can't vouch for them
Invalid stableinfo or signature; van't vouch for them
Don't have my own keys: can't vouch for %{public}s(%{public}@): %{public}s
Unknown policy for beneficiary: %{public}s
Error creating voucher: %{public}s
Unable to make TLKShares for beneficiary %{public}s(%{public}@): %{public}s
No TLKShares to upload for new peer, returning voucher
Unable to upload new tlkshares: %{public}s
Uploaded new tlkshares: %{public}s
vouch complete: %{public}s
beginning a vouchWithCustodianRecoveryKey
Don't have my own peer keys; can't establish: %{public}s
Untrusted custodian recovery key set
Error creating voucher using custodian recovery key set: %{public}s
vouchWithCustodianRecoveryKey encryptionPubKey: %{public}s
vouchWithCustodianRecoveryKey signingPubKey: %{public}s
Recovered TLKs: %{public}s
Skipping %{public}s (wrong peerID)
Failed to recover share %{public}s: %{public}s
Recovered %{public}s (from %{public}s
No ego peer in model; no trusted peers
Unable to create dynamic info for share recovery: %{public}s
Using computed dynamic info for share recovery: %{public}@
No peer for trusted ID %{public}s
vouchWithCustodianRecoveryKey complete: %{public}s
beginning a recoverTLKSharesForInheritor
Error making CKKSTLKShares for inheritor: %{public}s
recoverTLKSharesForInheritor encryptionPubKey: %{public}s
recoverTLKSharesForInheritor signingPubKey: %{public}s
recoverTLKSharesForInheritor complete: %{public}s
beginning a vouchWithRecoveryKey
Don't have my own peer keys; can't vouch with recovery key: %{public}s
failed to create recovery keys: %{public}s
Recovery Key is not enrolled
Untrusted recovery key set
Error creating voucher using recovery key set: %{public}s
vouchWithRecoveryKey encryptionPubKey: %{public}s
vouchWithRecoveryKey signingPubKey: %{public}s
vouchWithRecoveryKey complete: %{public}s
vouchWithBottle failed preflight: %{public}s
vouchWithBottle: Unable to find peer that created the bottle
vouchWithBottle: Unable to create a sponsor public key
vouchWithBottle: Verification of bottled signature failed: %{public}s
Creation of Bottled Peer failed: %{public}s
Have a bottle for peer %{public}s
Creation of Bottled Peer failed with bottle salt: %{public}s
Attempting with empty bottle salt
Error loading ego peer keys: %{public}s
Error creating voucher with bottle: %{public}s
Attempting to recover %ld shares for peer %{public}s
vouchWithBottle complete: %{public}s
removeCustodianRecoveryKey complete: %{public}s
beginning a createCustodianRecoveryKey
no prepared identity, cannot create custodian recovery key
createCustodianRecoveryKey encryptionPubKey: %{public}s
createCustodianRecoveryKey signingPubKey: %{public}s
CreateCustodianRecoveryKey failed: %{public}s
CreateCustodianRecoveryKey handling failed: %{public}s
CreateCustodianRecoveryKey succeeded
createCustodianRecoveryKey complete: %{public}s
beginning a setRecoveryKey
no prepared identity, cannot set recovery key
setRecoveryKey encryptionPubKey: %{public}s
setRecoveryKey signingPubKey: %{public}s
setRecoveryKey failed: %{public}s
setRecoveryKey handling failed: %{public}s
setRecoveryKey succeeded
setRecoveryKey complete: %{public}s
establish: self machineID %{public}s not on list
Unable to make TLKShares for self: %{public}s
Establish unable to encode bottle/peer: %{public}s
Establish peer: %{public}s
Establish bottle: %{public}s
Establish introducing %ld key sets, %ld tlk shares
Establish dynamicInfoSig: %{public}s
Establish dynamicInfo: %{public}s
Establish stableInfoSig: %{public}s
Establish stableInfo: %{public}s
Establish permanentInfoSig: %{public}s
Establish permanentInfo: %{public}s
Beginning establish for peer %{public}s
dynamic info: %{public}@
establish failed: %{public}s
establish returned failed, trying fetch
establish handling failed: %{public}s
establish succeeded
establish succeeded, but more changes need fetching...
Establish returned changes, but they can't be serialized
Establish returned changes: %{public}s
Establish: viewKeys: %{public}s
fetch-after-establish succeeded
fetch-after-establish failed: %{public}s
fetchAfterEstablish failed to reset local data: %{public}s
fetchAfterEstablish failed to fetch changes: %{public}s
fetchAfterEstablish: failed to fetch egoPeerID
fetchAfterEstablish: did not find peer %{public}s in model
fetchAfterEstablish failed: %{public}s
fetchAfterEstablish succeeded
fetchAfterEstablish failed to update TLKs: %{public}s
establish complete peer: %{public}s %{public}s
getEgoEpoch complete: %llu %{public}s
localReset complete %{public}s
reset failed: %{public}s
reset persist failed: %{public}s
reset succeded
TrustedPeersHelper/Container.swift
unknown reset reason: 
reset complete %{public}s
machineIDsAllowed
machineIDsDisallowed
modelRecoverySigningPublicKey
modelRecoveryEncryptionPublicKey
registeredPolicyVersions
custodian_recovery_keys
signatureUsingPeerKey
signatureUsingSPKI
dump complete: %{public}s
No peer ID => no trusted peers
fetchTrustState failed to create TPPeerPermanentInfo
Returning trust state: %{public}@ %{public}s
Unable to add RK as a trusted peer: %{public}s
fetchTrustState: ego peer is %{public}s
fetch trust state complete: %{public}s %{public}s
Unable to fetch changes, trust status is unknown: %{public}s
trustStatus complete: %{public}s %{public}s
Existing peers in account, but we don't have a peer ID. We are excluded.
No existing peers in account
trust status: No error but Ego Peer Keys are nil
trust status: Lost the ego key pair, returning 'excluded' in hopes of fixing up the identity
trust status: Unable to load ego keys: %{public}s
TrustedPeersHelper.Container
v24@?0@"NSPersistentStoreDescription"8@"NSError"16
ensureEgoConsistency failed to find ego peer information
ensureEgoConsistency failed to create TPPeerStableInfo from container
ensureEgoConsistency failed to create TPPeerStableInfo from model
com.apple.security.TrustedPeersHelper.nsObjectModels
UNKNOWN
DISABLED
ENABLED
FOLLOWING
(unknown: %i)
_TtC18TrustedPeersHelper6Client
v24@0:8@?16
v32@0:8@16@?24
v60@0:8@16q24@32@40B48@?52
v44@0:8@16@24B32@?36
v40@0:8@16@24@?32
v148@0:8@16Q24@32@40@48@56@64@72@80@88@96i104@108@116@124@132@?140
v56@0:8@16@24@32@40@?48
v80@0:8@16@24@32@40@48@56@64@?72
v64@0:8@16@24@32@40@48@?56
v48@0:8@16@24@32@?40
v72@0:8@16@24@32@40@48@56@?64
v108@0:8@16B24@28@36@44@52@60@68@76@84@92@?100
v40@0:8@16q24@?32
v68@0:8@16@24@32@40@48i56@?60
v44@0:8@16B24@28@?36
v52@0:8@16@24@32B40@?44
v36@0:8@16B24@?28
endpoint
containerMap
preflightRecoverOctagon failed for %{public}s: %{public}s
preflightRecoverOctagon for %{public}s
performATOPRVActions failed for %{public}s: %{public}s
performATOPRVActions for %{public}s
removeRecoveryKey failed for %{public}s: %{public}s
removeRecoveryKey for %{public}s
isRecoveryKeySet failed for %{public}s: %{public}s
isRecoveryKeySet for %{public}s
fetchAccountSettings failed for %{public}s: %{public}s
fetchAccountSettings for %{public}s
resetAccountCDPContents failed for %{public}s: %{public}s
resetAccountCDPContents for %{public}s
removeEscrowCache failed for %{public}s: %{public}s
removeEscrowCache for %{public}s
getSupportInfo failed for %{public}s: %{public}s
getSupportAppInfo for %{public}s
Health Check! failed for %{public}s: %{public}s
Health Check! requiring escrow check? %{bool}d for %{public}s
PushHealthInquiry failed for %{public}s: %{public}s
PushHealthInquiry for %{public}s
%{public}s finished for %{public}s
%{public}s errored for %{public}s: %{public}s
ReportHealth failed for %{public}s: %{public}s
ReportHealth for %{public}s
RemoveCustodianRecoveryKey failed for %{public}s: %{public}s
RemoveCustodianRecoveryKey for %{public}s
removeCustodianRecoveryKey
CreateCustodianRecoveryKey failed for %{public}s: %{public}s
CreateCustodianRecoveryKey for %{public}s
createCustodianRecoveryKey
SetRecoveryKey failed for %{public}s: %{public}s
SetRecoveryKey for %{public}s
ValidatePeers failed for %{public}s: %{public}s
ValidatePeers for %{public}s
fetchRecoverableTLKShares failed for %{public}s: %{public}s
Fetching recoverable TLKShares %{public}s with peerID filter: %{public}s
fetchPolicyDocuments failed for %{public}s: %{public}s
Fetching policy documents %{public}s with versions: %{public}s
fetchCurrentPolicy failed for %{public}s: %{public}s
Fetching policy+views for %{public}s
fetchEscrowContents failed for %{public}s: %{public}s
fetchEscrowContents in %{public}s
fetchViableEscrowRecords in %{public}s from source (%{public}ld
fetchViableBottles failed for %{public}s: %{public}s
fetchViableBottles in %{public}s from source (%{public}ld
distrustPeerIDs failed for %{public}s: %{public}s
Distrusting %{public}s in %{public}s
departByDistrustingSelf failed for %{public}s: %{public}s
Departing %{public}s
updateTLKs failed for %{public}s: %{public}s
Updating TLKs for %{public}s
setPreapprovedKeys failed for %{public}s: %{public}s
setPreapprovedKeys %{public}s
update failed for %{public}s: %{public}s
Updating %{public}s
attemptPreapprovedJoin failed for %{public}s: %{public}s
Attempting a preapproved join for %{public}s
preflightPreapprovedJoin failed for %{public}s: %{public}s
Attempting to preflight a preapproved join for %{public}s
Joining failed for %{public}s: %{public}s
Joining %{public}s
Vouching with Custodian Recovery Key failed for %{public}s: %{public}s
Vouching With Custodian Recovery Key %{public}s
Vouching With Custodian Recovery Key
Recovering TLKShares for Inheritor failed for %{public}s: %{public}s
Recovering TLKShares for Inheritor %{public}s
Recovering TLKShares for Inheritor
Vouching with Recovery Key failed for %{public}s: %{public}s
Vouching With Recovery Key %{public}s
Vouching With Recovery Key
Preflighting Vouch With CustodianRecoveryKey failed for %{public}s: %{public}s
Preflight Vouch With CustodianRecoveryKey %{public}s
Preflight Vouch With CustodianRecoveryKey
Preflighting Vouch With RecoveryKey failed for %{public}s: %{public}s
Preflight Vouch With RecoveryKey %{public}s
Preflight Vouch With RecoveryKey
Vouching with Bottle failed for %{public}s: %{public}s
Vouching With Bottle %{public}s
Vouching With Bottle
Preflighting Vouch With Bottle failed for %{public}s: %{public}s
Preflight Vouch With Bottle %{public}s
Preflight Vouch With Bottle
Vouching failed for %{public}s: %{public}s
Vouching %{public}s
Establishing failed for %{public}s: %{public}s
Establishing %{public}s
prepareInheritancePeer failed for %{public}s: %{public}s
Preparing new identity for inheritance peer %{public}s
prepareInheritancePeer
Prepare failed for %{public}s: %{public}s
Preparing new identity for %{public}s
Epoch retrieval failed for %{public}s: %{public}s
retrieving epoch for %{public}s
Fetching allowed machineIDs failed for %{public}s: %{public}s
Fetching allowed machineIDs for %{public}s
Fetched allowed machineIDs
Removing allowed machineID failed for %{public}s: %{public}s
Removing allowed machineIDs for %{public}s: %{public}s
Removing allowed machineIDs
Adding allowed machineID failed for %{public}s: %{public}s
Adding allowed machineIDs for %{public}s: %{public}s
Adding allowed machineIDs
Setting allowed machineIDs failed for %{public}s: %{public}s
Setting allowed machineIDs for %{public}s to %{public}s
Setting allowed machineIDs
Local reset failed for %{public}s: %{public}s
Performing local reset for %{public}s
Resetting failed for %{public}s: %{public}s
Resetting for %{public}s
Fetch Trust State failed for %{public}s: %{public}s
Fetch Trust State for %{public}s
Trust status failed for %{public}s: %{public}s
Dumping failed for %{public}s: %{public}s
Dumping for %{public}s
TrustedPeersHelper.ResetOperation
init(functionName:request:)
TrustedPeersHelper.EstablishOperation
TrustedPeersHelper.JoinWithVoucherOperation
TrustedPeersHelper.UpdateTrustOperation
TrustedPeersHelper.SetRecoveryKeyOperation
TrustedPeersHelper.AddCustodianRecoveryKeyOperation
TrustedPeersHelper.FetchChangesOperation
TrustedPeersHelper.FetchViableBottlesOperation
TrustedPeersHelper.FetchRecoverableTlksharesOperation
TrustedPeersHelper.FetchPolicyDocumentsOperation
TrustedPeersHelper.ValidatePeersOperation
TrustedPeersHelper.ReportHealthOperation
TrustedPeersHelper.PushHealthInquiryOperation
TrustedPeersHelper.GetRepairActionOperation
TrustedPeersHelper.GetSupportAppInfoOperation
TrustedPeersHelper.GetClubCertificatesOperation
TrustedPeersHelper.FetchSosiCloudIdentityOperation
TrustedPeersHelper.ResetAccountCdpcontentsOperation
TrustedPeersHelper.RemoveRecoveryKeyOperation
TrustedPeersHelper.PerformAtoprvactionsOperation
_TtCO18TrustedPeersHelper13CuttlefishAPI14ResetOperation
_TtCO18TrustedPeersHelper13CuttlefishAPI18EstablishOperation
_TtCO18TrustedPeersHelper13CuttlefishAPI24JoinWithVoucherOperation
_TtCO18TrustedPeersHelper13CuttlefishAPI20UpdateTrustOperation
_TtCO18TrustedPeersHelper13CuttlefishAPI23SetRecoveryKeyOperation
_TtCO18TrustedPeersHelper13CuttlefishAPI32AddCustodianRecoveryKeyOperation
_TtCO18TrustedPeersHelper13CuttlefishAPI21FetchChangesOperation
_TtCO18TrustedPeersHelper13CuttlefishAPI27FetchViableBottlesOperation
_TtCO18TrustedPeersHelper13CuttlefishAPI34FetchRecoverableTlksharesOperation
_TtCO18TrustedPeersHelper13CuttlefishAPI29FetchPolicyDocumentsOperation
_TtCO18TrustedPeersHelper13CuttlefishAPI22ValidatePeersOperation
_TtCO18TrustedPeersHelper13CuttlefishAPI21ReportHealthOperation
_TtCO18TrustedPeersHelper13CuttlefishAPI26PushHealthInquiryOperation
_TtCO18TrustedPeersHelper13CuttlefishAPI24GetRepairActionOperation
_TtCO18TrustedPeersHelper13CuttlefishAPI26GetSupportAppInfoOperation
_TtCO18TrustedPeersHelper13CuttlefishAPI28GetClubCertificatesOperation
_TtCO18TrustedPeersHelper13CuttlefishAPI31FetchSosiCloudIdentityOperation
_TtCO18TrustedPeersHelper13CuttlefishAPI32ResetAccountCdpcontentsOperation
_TtCO18TrustedPeersHelper13CuttlefishAPI26RemoveRecoveryKeyOperation
_TtCO18TrustedPeersHelper13CuttlefishAPI29PerformAtoprvactionsOperation
_TtC18TrustedPeersHelper24CuttlefishAPIAsyncClient
codeService
_TtC18TrustedPeersHelper33CuttlefishAPIAsyncOperationClient
not enforcing idms list changes; allowing %{public}s
machineID %{public}s not found on list
machineID %{public}s not explicitly allowed: %{public}s
Fetching allowed machine IDs
fetchAllowedMachineIDs complete: %{public}s
Removing allowed machine IDs: %{public}s
Suspicious of new machine ID: %{public}s
Now suspicious of machine ID: %{public}s
removeAllow complete: %{public}s
Adding allowed machine IDs: %{public}s
Newly trusted machine ID: %{public}s
Continue to trust machine ID: %{public}s
addAllow complete: %{public}s
Setting allowed machine IDs: %{public}s
Error setting machine ID list: %{public}s
Believe we're in a demo account, not enforcing IDMS list
Peer machineID is unknown, beginning grace period: %{public}s
Machine has no ID: %{public}s
Unknown machine ID last modified %{public}s; distrusting: %{public}s
Unknown machine ID last modified %{public}s; leaving unknown: %{public}s
Allowed-but-unseen machine ID isn't on full list, last modified %{public}s, distrusting: %{public}s
Allowed-but-unseen machine ID isn't on full list, last modified %{public}s, ignoring: %{public}s
Newly distrusted machine ID: %{public}s
Machine ID newly retrusted: %{public}s
Machine ID still trusted: %{public}s
setAllowedMachineIDs complete: %{public}s
Dropping knowledge of machineID %{public}s
Not enforcing IDMS list changes
_TtC18TrustedPeersHelper10EscrowKeys
symmetricKey
secret
bottleSalt
Key generation error 
com.apple.security.trustedpeers.EscrowKeys
TrustedPeersHelper.EscrowKeys
Escrowed Symmetric Key-%@
Escrowed Encryption Key-%@
Escrowed Signing Key-%@
Escrow Signing Private Key
Escrow Encryption Private Key
Escrow Symmetric Key
fetchEscrowRecords failed with %{public}s
fetchEscrowRecords succeeded with %{public}ld records
setEscrowRecord saving new escrow record: %{public}@
_TtC18TrustedPeersHelper11BottledPeer
escrowKeys
bottleID
signatureUsingEscrowKey
escrowSigningPublicKey
escrowSigningSPKI
peersigningSPKI
contents
keys generated by the entropy+salt do not match the bottle contents
failed to create escrow keys
failed to create bottle
could not decrypt bottle contents
Failed to deserialize bottle peer
TrustedPeersHelper.BottledPeer
escrow key not an SFECPublicKey?
Unable to deserialize bottle
Bottled SPKI does not match re-created SPKI
@32@0:8@16@24
TrustedPeersHelper
T@"NSString",N,D,C
T@"NSData",N,D,C
escrowedSigningSPKI
peerID
T@"ContainerMO",N,D,&
CustodianRecoveryKey
crkInfo
crkInfoSig
container
accountDSID
allowedMachineIDs
T@"NSSet",N,D,&
changeToken
egoPeerID
egoPeerPermanentInfo
egoPeerPermanentInfoSig
egoPeerStableInfo
egoPeerStableInfoSig
escrowFetchDate
T@"NSDate",N,D,C
honorIDMSListChanges
moreChanges
name
recoveryKeyEncryptionSPKI
recoveryKeySigningSPKI
refetchLevel
Tq,N,D
bottles
custodianRecoveryKeys
fullyViableEscrowRecords
legacyEscrowRecords
machines
partiallyViableEscrowRecords
policies
TrustedPeersHelper1
TrustedPeersHelper2
TrustedPeersHelper3
TrustedPeersHelper4
TrustedPeersHelper5
TrustedPeersHelper6
TrustedPeersHelper7
TrustedPeersHelper8
EscrowClientMetadata
deviceColor
deviceEnclosureColor
deviceMid
deviceModel
deviceModelClass
deviceModelVersion
deviceName
devicePlatform
secureBackupMetadataTimestamp
secureBackupNumericPassphraseLength
secureBackupUsesComplexPassphrase
secureBackupUsesNumericPassphrase
escrowMetadata
T@"EscrowMetadataMO",N,D,&
backupKeybagDigest
escrowedSPKI
peerInfo
secureBackupTimestamp
secureBackupUsesMultipleiCSCS
clientMetadata
T@"EscrowClientMetadataMO",N,D,&
escrowRecord
T@"EscrowRecordMO",N,D,&
creationDate
expectedFederationID
federationID
label
recordStatus
remainingAttempts
silentAttemptAllowed
sosViability
allowed
machineID
modified
seenOnFullList
status
dynamicInfo
dynamicInfoSig
isEgoPeer
TB,N,D
permanentInfo
permanentInfoSig
stableInfo
stableInfoSig
recoveryVoucher
T@"RecoveryVoucherMO",N,D,&
vouchers
policyData
policyHash
recoverySigningPubKey
recoveryVoucherInfo
signature
T@"PeerMO",N,D,&
voucherInfo
voucherInfoSig
beneficiary
CKErrorDomain
CKInternalErrorDomain
CKRetryAfter
CKPartialErrors
AKAuthenticationError
v32@?0@8@"NSError"16^B24
persona
ckks-persona
%@ %@
escrowRecordLabel
currentFederation
intendedFederation
WrongKeySizeException
length (%lu) was not %d
corecrypto
CCRandomGenerateBytes failed with %d
No key given
wrapped key size does not match key size
unwrapped key size does not match key size
CommonCrypto
IV generation failed
ciphertext too short
no mode given
could not ccsiv_init
could not ccsiv_set_nonce
could not ccsiv_aad
could not ccsiv_crypt
bottle_validity
label
record_id
recovery_status
cool_off_end
record_viability
RECOVERY_STATUS_VALID
RECOVERY_STATUS_SOFT_LIMIT_REACHED
RECOVERY_STATUS_HARD_LIMIT_REACHED
RECORD_VIABILITY_FULLY_VIABLE
RECORD_VIABILITY_PARTIALLY_VIABLE
RECORD_VIABILITY_LEGACY
%@_%@
<TPSpecificUser: altDSID:%@ o:%@ ck:%@ p:%@/%@ aaID:%@>
primary
secondary
cloudkit
aaID
altDSID
isPrimary
ciphertext
authenticationCode
initializationVector
SecError
<TPHPeerState: %@ preapproved:%d status:%@ memberChanges: %@ unk. mIDs: %@ osVersion: %@ walrus: %@ webAccess: %@>
unknown
peerID
identityIsPreapproved
peerStatus
memberChanges
unknownMachineIDs
osVersion
walrus
webAccess
<TPHEgoPeerState: %@ (mid:%@)>
egoStatus
viablePeerCountsByModelID
peerCountsByMachineID
isExcluded
isLocked
<TPHPeer: %@ %@ %@ se:%@ (%lu views)>
signingSPKI
encryptionSPKI
seIdentity
viewList
<CustodianRecoveryKey: %@, (%@)>
encryptionKey
recoveryString
salt
kind
<TLKRecoveryResult: %@ totalTLKSharesRecovered:%d>
totalShares
errors
RECOVERY_KEY
INHERITANCE_KEY
<CKKSTLKShareCore(%@): recv:%@ send:%@>
server_
ckksshare
Peer(%@) has no signing key
No TLK share from %@
zoneID
tlkUUID
senderPeerID
wrappedTLK
signature
receiverPeerID
receiverSPKI
No trusted peer signed %@
Signed UUID doesn't match unsigned UUID for %@
ckks
classA
classC
parentkeyref
receiverPublicEncryptionKey
CKKSErrorDomain
iphone(sim)
kern.osrelease
kern.osversion
%s (%s)
Version
keyType
keyData
EC_NIST_CURVES
CloudkitKeychainService
<CKAccountInfo: %@>
<TrustedPeersHelperIntendedTPPBSecureElementIdentity: %@>
identity
reserved3
reserved4
reserved5
reserved6
escrowedEncryptionSPKI
peerSigningSPKI
peerEncryptionSPKI
reserved7
contents
ckks-logger
com.apple.security.ckks
spid-
<CKKSSelves: %@ %@>
(no past selves)
<CKKSActualPeer(%@): pubEnc:%@ pubSign:%@ views:%d>
<CKKSSOSPeer(%@): pubEnc:%@ pubSign:%@ views:%d>
%@%@
spid
<CKKSSOSSelfPeer(%@): pubEnc:%@ pubSign:%@ views:%d>
ckkskey
%@ is not self-wrapped
securityd
Couldn't save %@ to keychain: %d
-nonsync
SecItemUpdate: %d
SecItemAdd: %d
SecItemCopyMatching: %d
Couldn't load %@ from keychain: %d
-piggy
%@-piggy
unable to unbase64 key: %@
Couldn't delete %@ from keychain: %d
<%@(%@): %@ (%@)>
Data failed to parse as a CKKSSerializedKey
parentKeyUUID
<CKKSKeychainBackedKeySet: tlk:%@, classA:%@, classC:%@, newUpload:%d>
newUpload
reserved1
reserved2
peerSigningPrivKey
peerEncryptionPrivKey
zoneName
%@/%@
Library/Keychains
So8NSObjectC
ypSg
So8NSObjectCSg
$sSY
So18NSValueTransformerC
yyXlXpG
So22TPCustodianRecoveryKeyC
So12_SFECKeyPairC
ySSypG
SS_ypt
_yptG
_ypt
_ABtG
_ypt
ySo15TPPolicyVersionCSo0A8DocumentCG
ySSSo8NSNumberCG
ySSSo25TPPBPeerStableInfoSettingCG
ySSSo21CKKSKeychainBackedKeyCG
ySSSay
_pGG
yS2SG
So20NSManagedObjectModelCG
_So20NSManagedObjectModelCt
9errorCode_t
SS7keyType_t
15corecryptoError_t
yyXlG
ySSG
So15TPPolicyVersionC
So16TPPolicyDocumentC
Sg_ABt
Sg_ABt
Sg_ABt
Sg_ABt
SSSgSo15TPSyncingPolicyCSgSb
_pSgIegggyg_
_pSg
SaySSGSgAB
_pSgIegggg_
ySSG
So14_SFECPublicKeyCSg
So14_SFECPublicKeyC
ySo8CKRecordCSgG
_pSgIegyg_
SSSgSo15TPSyncingPolicyCSg
_pSgIegggg_
So38TrustedPeersHelperCustodianRecoveryKeyC
_pGIegn_
yxq_GIego_
yxq_G
G0R0_
G1R0_
$s18TrustedPeersHelper18ConfiguredCloudKitP
$s18TrustedPeersHelper28ConfiguredCuttlefishAPIAsyncP
So17OS_dispatch_queueC
$s18TrustedPeersHelper17CKOperationRunnerP
So13CKCodeServiceC
So11CKContainerC
$s18TrustedPeersHelper32ContainerNameToCKOperationRunnerP
So12CKKSNotifier_pXp
So16OTPersonaAdapter_p
_pGIegn_
GIego_
_pGIegn_
GIego_
_pGIegn_
GIego_
_pGIegn_
GIego_
_pGIegn_
GIego_
_pGIegn_
GIego_
_pGIegn_
GIego_
_pGIegn_
GIego_
_pGIegn_
GIego_
_pGIegn_
GIego_
_pGIegn_
GIego_
_pGIegn_
GIego_
_pGIegn_
GIego_
_pGIegn_
GIego_
_pGIegn_
GIego_
_pGIegn_
GIego_
_pGIegn_
GIego_
_pGIegn_
GIego_
_pGIegn_
GIego_
_pGIegn_
GIego_
$ss12CaseIterableP
SaySSG
ySi_
Sg_ABt
Sg_ABt
Sg_ABt
Sg_ABt
Sg_ABt
Sg_ABt
Sg_ABt
Sg_ABt
_AAt
_AAt
Sg_ABt
Sg_ABt
Sg_ABt
Sg_ABt
Sg_ABt
Sg_ABt
Sg_ABt
Si9errorCode_t
5value_t
So14TPSpecificUserC
So21OS_dispatch_semaphoreC
So22NSManagedObjectContextC
So21NSPersistentContainerC
So7TPModelC
So15TPPolicyVersionCSg
SbSg
So8CKRecordCSg
ySiG
SDySo15TPPolicyVersionC
_pSgIeggg_
ShySo15TPPolicyVersionCG
SDySo15TPPolicyVersionCSo0A8DocumentCG
SDySo15TPPolicyVersionCSo0A8DocumentCGSg
_pSgIeggg_
ShySo15TPPolicyVersionCGz_Xx
SDySo15TPPolicyVersionCSo0A8DocumentCGz_Xx
ySo15TPPolicyVersionC
ySo15TPPolicyVersionCG
ySo15TPPolicyVersionC_G
SaySo24CKKSKeychainBackedKeySetCG
SaySo12CKKSTLKShareCG
SSSgSaySo8CKRecordCGSo15TPSyncingPolicyCSg
_pSgIeggggg_
So19TPPeerPermanentInfoC
So16TPPeerStableInfoC
So6TPPeerC
So9TPVoucherC
SSSg
SgA3CSo15TPSyncingPolicyCSgAASaySo8CKRecordCGSg
_pSgIegggggggggg_
SDySS
So25TPPBSecureElementIdentityCSg
SSSg
So16TPPolicyDocumentCSg
_pSgIeggg_
SDySo15TPPolicyVersionCSo0A8DocumentCGSg
So15TPSyncingPolicyC
So8NSStringCSgSo6NSDataCSgA3FSo15TPSyncingPolicyCSgSo7NSErrorCSgIeyByyyyyyy_
SSSg
SgA3CSo15TPSyncingPolicyCSg
_pSgIegggggggg_
So17OTAccountSettingsCSg
So22TrustedPeersHelperPeerC
_pSgIegg_
So20NSFetchRequestResult_p
yypG
So27TrustedPeersHelperPeerStateCSgSo15TPSyncingPolicyCSg
_pSgIegggg_
So16TPPeerStableInfoCSg
SaySo8CKRecordCGSg
_pSgIeggg_
So27TrustedPeersHelperPeerStateCSg
_pSgIeggg_
SDySSSo25TPPBPeerStableInfoSettingCGSg
_pSgIeggg_
S4bSo26OTEscrowMoveRequestContextCSg
_pSgIegyyyygg_
ySo12CKKSTLKShareCSgG
So12CKKSTLKShareCSg
So8CKKSPeer_p
So15TPSyncingPolicyCSg
_pSgIeggyg_
ySaySSG_ABt
_pGIegg_
ySaySSG_ABt
ySay
_pGIegg_
ySay
SgSSSgAB
_pSgIeggggg_
ShySSG
SgAB
_pSgIegggg_
SgABSaySo12CKKSTLKShareCGSgSo35TrustedPeersHelperTLKRecoveryResultCSg
_pSgIegggggg_
SaySo12CKKSTLKShareCGSgSo35TrustedPeersHelperTLKRecoveryResultCSg
_pSgIegggg_
SaySo21CKKSKeychainBackedKeyCG
So35TrustedPeersHelperTLKRecoveryResultC
SaySo8CKRecordCGSgSo38TrustedPeersHelperCustodianRecoveryKeyCSg
_pSgIegggg_
SaySo8CKRecordCG
_pSgIegyg_
ypGSg
_pSgIeggg_
ySS_SStG
SDyS2SG
SDySSypG
ySS_yptG
ySnySiGG
SaySDySSypGG
ySo9TPVoucherC_G
SayypG
ySDySSypGG
So27TrustedPeersHelperPeerStateCSgSaySo0abcD0CGSg
_pSgIegggg_
So27TrustedPeersHelperPeerStateCSg
So31TrustedPeersHelperEgoPeerStatusC
_pSgIeggg_
Sbz_Xx
z_Xx
So19TPPeerPermanentInfoCSg
SDySSSo8NSNumberCG
So7TPModelCSg
So28NSPersistentStoreDescriptionC
So51TrustedPeersHelperIntendedTPPBSecureElementIdentityCSg
So25TPPBPeerStableInfoSettingCSg
So21NSXPCListenerEndpointCSg
So7NSErrorCSgIeyByy_
So14TPSpecificUserCSg
ySS_
So7NSErrorCSgIeyBy_
So12NSDictionaryCSgSo7NSErrorCSgIeyByy_
So6NSDataCSgSo7NSErrorCSgIeyByy_
_pSgIeggg_
A3ASo26OTEscrowMoveRequestContextCSgSo7NSErrorCSgIeyByyyyyy_
So7NSArrayCSgSo38TrustedPeersHelperCustodianRecoveryKeyCSgSo7NSErrorCSgIeyByyy_
So7NSArrayCSgSo7NSErrorCSgIeyByy_
So15TPSyncingPolicyCSg
So7NSErrorCSgIeyByyy_
So6NSDataCSgSo8NSStringCSgACSo7NSErrorCSgIeyByyyy_
_pSgIeggg_
So7NSArrayCSgACSo7NSErrorCSgIeyByyy_
So27TrustedPeersHelperPeerStateCSgSo7NSErrorCSgIeyByy_
So27TrustedPeersHelperPeerStateCSgSo15TPSyncingPolicyCSgSo7NSErrorCSgIeyByyy_
So8NSStringCSgSo7NSArrayCSgSo15TPSyncingPolicyCSgSo7NSErrorCSgIeyByyyy_
SSSgSaySo8CKRecordCGSgSo15TPSyncingPolicyCSg
_pSgIeggggg_
So6NSDataCSgACSo7NSArrayCSgSo35TrustedPeersHelperTLKRecoveryResultCSgSo7NSErrorCSgIeyByyyyy_
So7NSArrayCSgSo35TrustedPeersHelperTLKRecoveryResultCSgSo7NSErrorCSgIeyByyy_
So8NSStringCSgSo15TPSyncingPolicyCSgSo7NSErrorCSgIeyByyy_
So8NSStringCSgSo15TPSyncingPolicyCSg
So7NSErrorCSgIeyByyyy_
So6NSDataCSgACSo7NSErrorCSgIeyByyy_
So8NSStringCSgSo6NSDataCSgA3FSo15TPSyncingPolicyCSgACSo7NSArrayCSgSo7NSErrorCSgIeyByyyyyyyyy_
So7NSErrorCSgIeyByy_
So5NSSetCSgSo7NSErrorCSgIeyByy_
ShySSGSg
_pSgIeggg_
So27TrustedPeersHelperPeerStateCSgSo7NSArrayCSgSo7NSErrorCSgIeyByyy_
So31TrustedPeersHelperEgoPeerStatusCSo7NSErrorCSgIeyByy_
$s18TrustedPeersHelper18CuttlefishAPIAsyncP
$s18TrustedPeersHelper27CuttlefishAPIAsyncOperationP
So9_SFAESKeyC
So15NSManagedObjectC
$ss12IdentifiableP
rawValue
RawValue
peerKeys
tpCustodian
tpInheritance
OTErrorDeserializationFailure
OTErrorDecryptionFailure
OTErrorKeyInstantiation
OTErrorKeyMismatch
OTErrorRecoveryCreation
OTErrorAuthCipherTextCreation
OTErrorPrivateKeyCreation
OTErrorRecoveryKeyCreation
OTErrorEntropyCreation
OTErrorEntropyKeyMismatch
encryptionKey
signingKey
failedToSaveToKeychain
unsupportedKeyType
corecryptoKeyGeneration
keyGeneration
itemDoesNotExist
failedToGenerateRandomKey
version
policyData
plaintextPolicy
encryptionKey
signingKey
peerID
publicEncryptionKey
publicSigningKey
encryptionVerificationKey
signingVerificationKey
noPublicKeys
underlyingCKOperationRunner
queue
underlyingCodeService
ckContainer
ckCodeOperationRunnerCreator
darwinNotifier
personaAdapter
containers
RawValue
AllCases
UNRECOGNIZED
classA
classC
unknown
userInitiatedReset
healthCheck
noBottleDuringEscrowRecovery
legacyJoinCircle
recoveryKey
testGenerated
supportAppInitiatedReset
byOctagonOnly
noAction
postRepairAccount
postRepairEscrow
resetOctagon
leaveTrust
healthy
broken
valid
invalid
sosViableUnknown
sosViable
sosNotViable
peerPermanentInfo
unknownFields
peerStableInfo
peerDynamicInfo
voucher
recoveryVoucher
custodianRecoveryKey
peerID
vouchers
_permanentInfoAndSig
_stableInfoAndSig
_dynamicInfoAndSig
_recoveryVoucher
_custodianRecoveryKeyAndSig
operation
remove
update
view
curve
epoch
keyUuid
poisoned
receiver
receiverPublicEncryptionKey
sender
signature
version
wrappedkey
uuid
parentkeyUuid
keyclass
wrappedkeyBase64
uploadOsVersion
_storage
_tlk
_classA
_classC
contents
escrowedSigningSpki
signatureUsingEscrowKey
signatureUsingPeerKey
bottleID
changeToken
differences
recoverySigningPubKey
recoveryEncryptionPubKey
more
hash
value
_key
allPeersCount
invalidPeersCount
missingPeers
peerName
views
serialNumber
machineID
octagonSigningKey
octagonEncryptionKey
validPeer
escrowRecordID
osVersion
peers
included
excluded
preapprovals
graphValid
graphValidationError
peerGraph
trustedPeers
label
deviceMid
deviceName
remainingAttempts
escrowRecords
name
success
accountHealth
failureDescription
result
tlkShare
octagon
escrow
resetReason
idmsTargetContext
idmsCuttlefishPassword
testingNotifyIdms
_changes
zoneKeyHierarchyRecords
tlkShares
viewKeys
filterRequest
viableBottles
partialBottles
legacyRecords
_keys
keys
entries
validatorsHealth
results
stateMachineState
octagonEgoIdentity
octagonTrustState
deviceMachineID
octagonPeerID
sosTrustState
sosPeerID
requiresEscrowCheck
knownFederations
escrowRecordLabel
currentFederation
intendedFederation
repairAction
_escrowRecordMoveRequest
enabled
_lastReport
status
modelID
_lastHealthReport
devices
passwordKeychainItemCount
trustedRootCertVersions
federations
certdata
certificates
silentAttemptAllowed
recordStatus
viabilityStatus
federationID
expectedFederationID
_creationDate
_escrowInformationMetadata
secureBackupNumericPassphraseLength
secureBackupUsesComplexPassphrase
secureBackupUsesNumericPassphrase
deviceColor
deviceEnclosureColor
deviceModel
deviceModelClass
deviceModelVersion
devicePlatform
_secureBackupMetadataTimestamp
cloudIdentity
_view
_newTlk
_newClassA
_newClassC
_oldTlk
_escrowRecordID
_bottle
_record
_peer
_viewKeys
_tlkShares
_changeToken
_peerID
_backupKeybagDigest
_clientMetadata
_secureBackupUsesMultipleIcscs
_bottleID
_secureBackupTimestamp
_escrowedSpki
_peerInfo
_serial
sponsorNotRegistered
unknownPolicyVersion
preparedIdentityNotOnAllowedList
failedToLoadSecret
failedToStoreSecret
unknownSyncUserControllableViewsValue
peerRegisteredButNotStored
configuredContainerDoesNotMatchSpecifiedUser
unableToCreateKeyPair
noPreparedIdentity
failedToStoreIdentity
needsAuthentication
missingStableInfo
missingDynamicInfo
nonMember
invalidPermanentInfoOrSig
invalidStableInfoOrSig
invalidVoucherOrSig
couldNotLoadAllowedList
noPeersPreapprovePreparedIdentity
policyDocumentDoesNotValidate
tooManyBottlesForPeer
noBottleForPeer
restoreBottleFailed
noBottlesForEscrowRecordID
bottleDoesNotContainContents
bottleDoesNotContainEscrowKeySignature
bottleDoesNotContainerPeerKeySignature
bottleDoesNotContainPeerID
failedToCreateBottledPeer
signatureVerificationFailed
bottleDoesNotContainerEscrowKeySPKI
failedToFetchEscrowContents
failedToCreateRecoveryKey
untrustedRecoveryKeys
noBottlesPresent
recoveryKeysNotEnrolled
bottleCreatingPeerNotFound
unknownCloudKitError
cloudkitResponseMissing
failedToLoadSecretDueToType
failedToAssembleBottle
invalidPeerID
unknownSecurityFoundationError
failedToSerializeData
unknownInternalError
noPeersPreapprovedBySelf
noSpecifiedUser
failedToGetPeerViews
cannotCreateRecoveryKeyPeer
noEscrowCache
recoveryKeyIsNotCorrect
name
cuttlefish
semaphore
persistentContainer
containerMO
model
escrowCacheTimeout
policyVersionOverride
testIgnoreCustodianUpdates
testDontSetAccountSetting
darwinNotifier
container
context
deviceName
serialNumber
osVersion
policyVersion
policySecrets
setSyncUserControllableViews
secureElementIdentity
walrusSetting
webAccess
endpoint
containerMap
codeService
encryptionKey
signingKey
symmetricKey
secret
bottleSalt
failedToSaveToKeychain
unsupportedKeyType
corecryptoKeyGeneration
keyGeneration
itemDoesNotExist
escrowKeys
secret
peerID
bottleID
peerKeys
signatureUsingEscrowKey
signatureUsingPeerKey
escrowSigningPublicKey
escrowSigningSPKI
peersigningSPKI
contents
OTErrorDeserializationFailure
OTErrorDecryptionFailure
OTErrorKeyInstantiation
OTErrorKeyMismatch
OTErrorBottleCreation
OTErrorAuthCipherTextCreation
OTErrorPrivateKeyCreation
OTErrorEscrowKeyCreation
OTErrorEntropyCreation
OTErrorEntropyKeyMismatch
NSXPCListenerDelegate
CKKSNotifier
OTPersonaAdapter
NSFetchRequestResult
CKKSPeer
TrustedPeersHelperProtocol
NSObject
TPDecrypter
CKKSSelfPeer
Octagon
OTPersonaActualAdapter
OTEscrowMoveRequestContext
NSCopying
CKKSBaseAESSIVKey
CKKSWrappedAESSIVKey
NSSecureCoding
NSCoding
CKKSAESSIVKey
OTEscrowRecordMetadata
SecurityFoundation
OTEscrowRecord
TPSpecificUser
OTAuthenticatedCiphertext
TrustedPeersHelperPeerState
TrustedPeersHelperEgoPeerStatus
TrustedPeersHelperPeer
TrustedPeersHelperCustodianRecoveryKey
TrustedPeersHelperTLKRecoveryResult
CKKSTLKShare
CKKSNotifyPostNotifier
OTPrivateKey
CKKS
TrustedPeersHelperIntendedTPPBSecureElementIdentity
OTBottle
TPHObjectiveC
OTEscrowRecordMetadataClientMetadata
OTRecovery
CKKSSelves
CKKSActualPeer
CKKSRemotePeerProtocol
CKKSSOSPeer
CKKSSOSPeerProtocol
CKKSSOSSelfPeer
CKKSKeychainBackedKey
CKKSKeychainBackedKeySet
OTBottleContents
CKKSSerializedKey
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v24@0:8@16
v24@0:8@"NSString"16
B16@0:8
@16@0:8
v32@0:8@16@?24
@"NSString"16@0:8
v32@0:8@"NSString"16@?<v@?>24
B24@0:8@16
B24@0:8@"<CKKSPeer>"16
@"_SFECPublicKey"16@0:8
v24@0:8@?16
v40@0:8@16@24@?32
v60@0:8@16q24@32@40B48@?52
v44@0:8@16@24B32@?36
v148@0:8@16Q24@32@40@48@56@64@72@80@88@96i104@108@116@124@132@?140
v56@0:8@16@24@32@40@?48
v80@0:8@16@24@32@40@48@56@64@?72
v64@0:8@16@24@32@40@48@?56
v48@0:8@16@24@32@?40
v72@0:8@16@24@32@40@48@56@?64
v108@0:8@16B24@28@36@44@52@60@68@76@84@92@?100
v40@0:8@16q24@?32
v68@0:8@16@24@32@40@48i56@?60
v44@0:8@16B24@28@?36
v52@0:8@16@24@32B40@?44
v36@0:8@16B24@?28
v24@0:8@?<v@?>16
v32@0:8@"TPSpecificUser"16@?<v@?@"NSDictionary"@"NSError">24
v32@0:8@"TPSpecificUser"16@?<v@?@"NSError">24
v40@0:8@"TPSpecificUser"16@"NSSet"24@?<v@?@"NSError">32
v32@0:8@"TPSpecificUser"16@?<v@?@"TrustedPeersHelperEgoPeerStatus"@"NSError">24
v60@0:8@"TPSpecificUser"16q24@"NSString"32@"NSString"40B48@?<v@?@"NSError">52
v44@0:8@"TPSpecificUser"16@"NSSet"24B32@?<v@?B@"NSError">36
v40@0:8@"TPSpecificUser"16@"NSArray"24@?<v@?@"NSError">32
v32@0:8@"TPSpecificUser"16@?<v@?@"NSSet"@"NSError">24
v32@0:8@"TPSpecificUser"16@?<v@?Q@"NSError">24
v148@0:8@"TPSpecificUser"16Q24@"NSString"32@"NSString"40@"NSString"48@"NSString"56@"NSString"64@"NSString"72@"NSString"80@"TPPolicyVersion"88@"NSDictionary"96i104@"TPPBSecureElementIdentity"108@"OTAccountSettings"116@"NSData"124@"NSData"132@?<v@?@"NSString"@"NSData"@"NSData"@"NSData"@"NSData"@"TPSyncingPolicy"@"NSError">140
v148@0:8@"TPSpecificUser"16Q24@"NSString"32@"NSString"40@"NSString"48@"NSString"56@"NSString"64@"NSString"72@"NSString"80@"TPPolicyVersion"88@"NSDictionary"96i104@"TPPBSecureElementIdentity"108@"NSData"116@"NSData"124@"TrustedPeersHelperCustodianRecoveryKey"132@?<v@?@"NSString"@"NSData"@"NSData"@"NSData"@"NSData"@"TPSyncingPolicy"@"NSString"@"NSArray"@"NSError">140
v56@0:8@"TPSpecificUser"16@"NSArray"24@"NSArray"32@"NSArray"40@?<v@?@"NSString"@"NSArray"@"TPSyncingPolicy"@"NSError">48
v80@0:8@"TPSpecificUser"16@"NSString"24@"NSData"32@"NSData"40@"NSData"48@"NSData"56@"NSArray"64@?<v@?@"NSData"@"NSData"@"NSError">72
v40@0:8@"TPSpecificUser"16@"NSString"24@?<v@?@"NSString"@"TPSyncingPolicy"B@"NSError">32
v64@0:8@"TPSpecificUser"16@"NSString"24@"NSData"32@"NSString"40@"NSArray"48@?<v@?@"NSData"@"NSData"@"NSArray"@"TrustedPeersHelperTLKRecoveryResult"@"NSError">56
v48@0:8@"TPSpecificUser"16@"NSString"24@"NSString"32@?<v@?@"NSString"@"TPSyncingPolicy"@"NSError">40
v40@0:8@"TPSpecificUser"16@"TrustedPeersHelperCustodianRecoveryKey"24@?<v@?@"NSString"@"TPSyncingPolicy"@"NSError">32
v56@0:8@"TPSpecificUser"16@"NSString"24@"NSString"32@"NSArray"40@?<v@?@"NSData"@"NSData"@"NSArray"@"TrustedPeersHelperTLKRecoveryResult"@"NSError">48
v48@0:8@"TPSpecificUser"16@"TrustedPeersHelperCustodianRecoveryKey"24@"NSArray"32@?<v@?@"NSArray"@"TrustedPeersHelperTLKRecoveryResult"@"NSError">40
v48@0:8@"TPSpecificUser"16@"TrustedPeersHelperCustodianRecoveryKey"24@"NSArray"32@?<v@?@"NSData"@"NSData"@"NSArray"@"TrustedPeersHelperTLKRecoveryResult"@"NSError">40
v72@0:8@"TPSpecificUser"16@"NSData"24@"NSData"32@"NSArray"40@"NSArray"48@"NSArray"56@?<v@?@"NSString"@"NSArray"@"TPSyncingPolicy"@"NSError">64
v40@0:8@"TPSpecificUser"16@"NSArray"24@?<v@?B@"NSError">32
v108@0:8@"TPSpecificUser"16B24@"NSString"28@"NSString"36@"NSString"44@"NSNumber"52@"NSDictionary"60@"NSNumber"68@"TrustedPeersHelperIntendedTPPBSecureElementIdentity"76@"TPPBPeerStableInfoSetting"84@"TPPBPeerStableInfoSetting"92@?<v@?@"TrustedPeersHelperPeerState"@"TPSyncingPolicy"@"NSError">100
v40@0:8@"TPSpecificUser"16@"NSArray"24@?<v@?@"TrustedPeersHelperPeerState"@"NSError">32
v48@0:8@"TPSpecificUser"16@"NSArray"24@"NSArray"32@?<v@?@"NSArray"@"NSError">40
v40@0:8@"TPSpecificUser"16q24@?<v@?@"NSArray"@"NSArray"@"NSError">32
v40@0:8@"TPSpecificUser"16q24@?<v@?@"NSArray"@"NSError">32
v32@0:8@"TPSpecificUser"16@?<v@?@"NSData"@"NSString"@"NSData"@"NSError">24
v40@0:8@"TPSpecificUser"16@"NSSet"24@?<v@?@"NSDictionary"@"NSError">32
v40@0:8@"TPSpecificUser"16@"NSString"24@?<v@?@"NSArray"@"NSError">32
v44@0:8@"TPSpecificUser"16@"NSString"24B32@?<v@?@"TPSyncingPolicy"i@"NSError">36
v32@0:8@"TPSpecificUser"16@?<v@?@"TrustedPeersHelperPeerState"@"NSArray"@"NSError">24
v56@0:8@"TPSpecificUser"16@"NSString"24@"NSString"32@"NSArray"40@?<v@?@"NSArray"@"NSError">48
v68@0:8@"TPSpecificUser"16@"NSString"24@"NSString"32@"NSArray"40@"NSUUID"48i56@?<v@?@"NSArray"@"TrustedPeersHelperCustodianRecoveryKey"@"NSError">60
v40@0:8@"TPSpecificUser"16@"NSUUID"24@?<v@?@"NSError">32
v48@0:8@"TPSpecificUser"16@"NSString"24@"NSString"32@?<v@?@"NSError">40
v44@0:8@"TPSpecificUser"16B24@"NSArray"28@?<v@?BBBB@"OTEscrowMoveRequestContext"@"NSError">36
v32@0:8@"TPSpecificUser"16@?<v@?@"NSData"@"NSError">24
v52@0:8@"TPSpecificUser"16@"NSString"24@"NSString"32B40@?<v@?@"NSError">44
v36@0:8@"TPSpecificUser"16B24@?<v@?@"NSDictionary"@"NSError">28
v32@0:8@"TPSpecificUser"16@?<v@?B@"NSError">24
v48@0:8@"TPSpecificUser"16@"NSString"24@"NSString"32@?<v@?B@"NSError">40
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@40@0:8@16@24^@32
@"NSData"40@0:8@"NSData"16@"NSData"24^@32
@"_SFECKeyPair"16@0:8
B24@0:8q16
d16@0:8
v24@0:8d16
@24@0:8^{_NSZone=}16
v16@0:8
@"NSString"
@32@0:8*16Q24
@24@0:8@16
[80C]
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^@16
@32@0:8@16^@24
B72@0:8r^{ccmode_siv=QQ^?^?^?^?^?^{ccmode_cbc}^{ccmode_ctr}}16@24@32*40Q48@56^@64
v24@0:8Q16
v20@0:8B16
@"NSData"
@"OTEscrowRecordMetadataClientMetadata"
{?="secureBackupTimestamp"b1"secureBackupUsesMultipleIcscs"b1}
^{__SecKey=}24@0:8@16
i16@0:8
v20@0:8i16
@20@0:8i16
i24@0:8@16
@"OTEscrowRecordMetadata"
{?="coolOffEnd"b1"creationDate"b1"remainingAttempts"b1"silentAttemptAllowed"b1"recordStatus"b1"recordViability"b1"recoveryStatus"b1"viabilityStatus"b1}
@60@0:8@16@24@32@40B48@52
@68@0:8@16B24Q28B36B40@44@52@60
@"TPPBPeerStableInfoSetting"
@64@0:8@16@24Q32@40@48B56B60
@"NSDictionary"
@56@0:8@16@24@32@40@48
@"NSSet"
@"TPPBSecureElementIdentity"
@60@0:8@16@24@32@40@48i56
@40@0:8@16q24@32
q16@0:8
v24@0:8q16
@64@0:8@16@24@32q40q48^@56
@80@0:8@16@24@32q40Q48q56q64@72
@104@0:8@16@24@32@40q48Q56q64q72@80@88@96
B48@0:8@16@24@32^@40
B40@0:8@16@24^@32
@48@0:8@16@24@32^@40
@"CKRecordZoneID"
@"OTAuthenticatedCiphertext"
^{ccec_full_ctx=^{ccec_cp}[0{ccec_projective_point=[1Q]}]}16@0:8
v24@0:8^v16
{?="devicePlatform"b1"secureBackupMetadataTimestamp"b1"secureBackupNumericPassphraseLength"b1"secureBackupUsesComplexPassphrase"b1"secureBackupUsesNumericPassphrase"b1}
@32@0:8@16@24
@"<CKKSSelfPeer>"
B24@0:8@"NSString"16
@48@0:8@16@24@32@40
@"_SFECPublicKey"
@"_SFECKeyPair"
@56@0:8@16@24@32@40^@48
@72@0:8@16@24@32@40@48@56^@64
@40@0:8@16^B24^@32
@64@0:8@16@24@32@40@48@56
B32@0:8@16^@24
B24@0:8^@16
B28@0:8B16^@20
@"NSString<SecCKKSKeyClass>"
@"CKKSWrappedAESSIVKey"
@"CKKSAESSIVKey"
@44@0:8@16@24@32B40
@"CKKSKeychainBackedKey"
@"OTPrivateKey"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.TrustedPeersHelper</string>
<key>aps-environment</key>
<string>serverPreferred</string>
<key>com.apple.application-identifier</key>
<string>com.apple.TrustedPeersHelper</string>
<key>com.apple.developer.aps-environment</key>
<string>serverPreferred</string>
<key>com.apple.developer.icloud-container-environment</key>
<string>Production</string>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudKit</string>
</array>
<key>com.apple.private.appleaccount.app-hidden-from-icloud-settings</key>
<true/>
<key>com.apple.private.cloudkit.allowUnverifiedAccount</key>
<true/>
<key>com.apple.private.cloudkit.buddyAccess</key>
<true/>
<key>com.apple.private.cloudkit.customAccounts</key>
<true/>
<key>com.apple.private.cloudkit.prefix</key>
<string>com.apple.security.cuttlefish</string>
<key>com.apple.private.cloudkit.spi</key>
<true/>
<key>com.apple.private.cloudkit.supportservice</key>
<true/>
<key>com.apple.private.cloudkit.systemService</key>
<true/>
<key>com.apple.private.security.storage.Keychains</key>
<true/>
<key>com.apple.security.exception.files.absolute-path.read-write</key>
<array>
<string>/private/var/Keychains/</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.accountsd.accountmanager</string>
<string>com.apple.mobile.usermanagerd.xpc</string>
<string>com.apple.security.sfkeychainserver</string>
<string>com.apple.securityd</string>
</array>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.TrustedPeersHelper</string>
<string>com.apple.security</string>
</array>
<key>com.apple.security.ts.cloudkit-client</key>
<true/>
<key>com.apple.symptom_diagnostics.report</key>
<true/>
<key>com.apple.usermanagerd.persona.fetch</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>com.apple.security.sos</string>
<string>com.apple.security.ckks</string>
<string>com.apple.security.octagon</string>
<string>com.apple.security.egoIdentities</string>
</array>
<key>seatbelt-profiles</key>
<array>
<string>temporary-sandbox</string>
</array>
</dict>
</plist>
application-identifier
com.apple.TrustedPeersHelper0"
aps-environment
serverPreferred0@ com.apple.application-identifier
com.apple.TrustedPeersHelper06#com.apple.developer.aps-environment
serverPreferred0>0com.apple.developer.icloud-container-environment
Production01#com.apple.developer.icloud-services0
CloudKit0C>com.apple.private.appleaccount.app-hidden-from-icloud-settings
061com.apple.private.cloudkit.allowUnverifiedAccount
0+&com.apple.private.cloudkit.buddyAccess
0.)com.apple.private.cloudkit.customAccounts
0B!com.apple.private.cloudkit.prefix
com.apple.security.cuttlefish0#
com.apple.private.cloudkit.spi
0.)com.apple.private.cloudkit.supportservice
0-(com.apple.private.cloudkit.systemService
01,com.apple.private.security.storage.Keychains
0X;com.apple.security.exception.files.absolute-path.read-write0
/private/var/Keychains/0
4com.apple.security.exception.mach-lookup.global-name0
"com.apple.accountsd.accountmanager!com.apple.mobile.usermanagerd.xpc#com.apple.security.sfkeychainserver
com.apple.securityd0o9com.apple.security.exception.shared-preference.read-write02
com.apple.TrustedPeersHelper
com.apple.security0*%com.apple.security.ts.cloudkit-client
0)$com.apple.symptom_diagnostics.report
0)$com.apple.usermanagerd.persona.fetch
keychain-access-groups0o
com.apple.security.sos
com.apple.security.ckks
com.apple.security.octagon com.apple.security.egoIdentities0(
seatbelt-profiles0
temporary-sandbox
Received unexpected Universal/Managed/other persona; treating as not for primary account: %@(%d)
Unable to adopt persona %@: %@
Adopted persona for id '%@'
TrustedPeersHelperSetupProtocol failed, continuing, but you might crash later: %@
no signing key for peer: %@
signature didn't verify for %@ %@: %@
couldn't share %@ (wrap failed): %@
couldn't share %@ (signing failed): %@
posting notification %@
couldn't wrap key: %@
loaded a piggy TLK (%@)
loaded a stashed TLK (%@)
Unable to unbase64 key: %@
Resaving %@ as per request
Resaving %@ failed: %@
full
full
watch
full
full
full
watch
full
full
full
watch
full
full
full
watch
full
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
audio
full
watch
full
watch
audio
full
watch
full
watch
full
watch
audio
full
watch
full
watch
full
watch
full
watch
full
watch
audio
full
watch
full
watch
full
watch
full
watch
full
watch
audio
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
audio
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
audio
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
audio
full
watch
full
watch
audio
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
audio
full
watch
audio
full
watch
full
watch
audio
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
audio
full
watch
full
watch
full
watch
full
watch
audio
full
watch
full
watch
full
watch
full
watch
audio
full
watch
full
watch
full
watch
full
watch
full
watch
audio
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
audio
full
watch
full
watch
audio
full
watch
full
watch
full
watch
audio
full
watch
full
watch
full
watch
full
watch
full
watch
audio
full
watch
full
watch
full
watch
full
watch
audio
full
watch
full
watch
full
watch
full
watch
audio
full
watch
Applications
Backstop
CreditCards
Passwords
WiFi
Passwords
full
watch
audio
full
watch
audio
full
watch
full
watch
full
watch
audio
full
watch
full
watch
full
watch
full
watch
full
watch
audio
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
audio
full
watch
full
watch
Applications
Backstop
CreditCards
Passwords
WiFi
Passwords
full
watch
windows
full
watch
audio
full
watch
windows
full
watch
full
watch
audio
full
watch
full
watch
full
watch
full
watch
windows
full
watch
audio
full
watch
full
watch
full
watch
full
watch
audio
full
watch
full
watch
full
watch
full
watch
full
watch
audio
full
watch
Applications
Backstop
CreditCards
Passwords
WiFi
Passwords
full
watch
windows
full
watch
audio
full
watch
windows
full
watch
audio
full
watch
audio
full
watch
full
watch
full
watch
full
watch
windows
full
watch
audio
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
audio
Applications
Backstop
CreditCards
Passwords
WiFi
Passwords
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
audio
windows
full
watch
audio
full
watch
full
watch
full
watch
windows
windows
full
watch
audio
full
watch
full
watch
audio
full
watch
audio
full
watch
full
watch
full
watch
full
watch
Applications
Backstop
CreditCards
Passwords
WiFi
Passwords
Passwords
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
audio
windows
full
watch
audio
full
watch
full
watch
full
watch
full
watch
windows
windows
full
watch
audio
full
watch
full
watch
audio
full
watch
audio
full
watch
full
watch
full
watch
full
watch
Applications
Backstop
CreditCards
Passwords
WiFi
Passwords
Passwords
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
audio
windows
full
watch
audio
full
watch
full
watch
full
watch
full
watch
windows
windows
full
watch
audio
full
watch
full
watch
audio
full
watch
audio
full
watch
full
watch
full
watch
full
watch
Applications
Backstop
CreditCards
Passwords
WiFi
Passwords
Passwords
SignedVoucher
Peer
PeerDifference
TLKShare
ViewKey
ViewKeys
ViewKeysRecords
Bottle
EscrowPair
Changes
ValidateSOSPeer
ValidationSOS
ResetRequest
ResetResponse
SupportAppView
Federation
ClubCertificate
TrustedPeersHelper
ServiceDelegate
TPPeerStatus
CuttlefishResetReason
TPPBCustodianRecoveryKey_Kind
TPPBPeerStableInfoUserControllableViewStatus
CFString
NCFStringRef
CoreFoundation
SetValueTransformer
RecoveryKey
CustodianRecoveryKey
InheritanceKey
Error
Decrypter
RecoveryKeySet
RecoveryKeySetError
RawPolicy
TrustedPeersHelper
OctagonSelfPeerKeys
OctagonSelfPeerKeysError
ConfiguredCloudKit
ConfiguredCuttlefishAPIAsync
RetryingCKCodeService
CKOperationRunner
CuttlefishCKCodeOperationRunner
ContainerNameToCKOperationRunner
CuttlefishCKOperationRunnerCreator
ContainerMap
(8L\
!#%')
 -!#)8
3333
*19@
 "$&(*
GJMPSYV
SignedPeerPermanentInfo
SignedPeerStableInfo
SignedPeerDynamicInfo
SignedRecoveryVoucher
SignedCustodianRecoveryKey
PolicyDocumentKey
PolicyDocumentMapEntry
ValidationTLKShare
ValidateOctagonPeer
ValidationOctagon
ValidateEscrowRecord
ValidationEscrowRecord
ValidationResult
EstablishRequest
EstablishResponse
JoinWithVoucherRequest
JoinWithVoucherResponse
UpdateTrustRequest
UpdateTrustResponse
SetRecoveryKeyRequest
SetRecoveryKeyResponse
RemoveRecoveryKeyRequest
RemoveRecoveryKeyResponse
PerformATOPRVActionsRequest
PerformATOPRVActionsResponse
AddCustodianRecoveryKeyRequest
AddCustodianRecoveryKeyResponse
FetchChangesRequest
FetchChangesResponse
FetchViableBottlesRequest
FetchViableBottlesResponse
FetchRecoverableTLKSharesRequest
FetchRecoverableTLKSharesResponse
FetchPolicyDocumentsRequest
FetchPolicyDocumentsResponse
ValidatePeersRequest
ValidatePeersResponse
ReportHealthRequest
ReportHealthResponse
PushHealthInquiryRequest
PushHealthInquiryResponse
GetRepairActionRequest
EscrowProxyFederationMoveRecordRequest
GetRepairActionResponse
SupportAppDevice
GetSupportAppInfoRequest
GetSupportAppInfoResponse
ResetAccountCDPContentsRequest
ResetAccountCDPContentsResponse
GetClubCertificatesRequest
GetClubCertificatesResponse
EscrowInformation
FetchSOSiCloudIdentityRequest
FetchSOSiCloudIdentityResponse
ViewKeyClass
ResetReason
FilteringRequest
RepairAction
SupportAppDeviceStatus
RecordStatus
SOSViability
SignedVoucher
Peer
PeerDifference
OneOf_Operation
TLKShare
ViewKey
ViewKeys
ViewKeysRecords
Bottle
EscrowPair
Changes
ValidateSOSPeer
ValidationSOS
OneOf_Result
ResetRequest
ResetResponse
View
SupportAppView
Federation
ClubCertificate
Metadata
ClientMetadata
_StorageClass
TrustedPeersHelper
ContainerError
Container
ContainerName
StableChanges
Client
CuttlefishAPI
ResetOperation
EstablishOperation
JoinWithVoucherOperation
UpdateTrustOperation
SetRecoveryKeyOperation
AddCustodianRecoveryKeyOperation
FetchChangesOperation
FetchViableBottlesOperation
FetchRecoverableTlksharesOperation
FetchPolicyDocumentsOperation
ValidatePeersOperation
ReportHealthOperation
PushHealthInquiryOperation
GetRepairActionOperation
GetSupportAppInfoOperation
GetClubCertificatesOperation
FetchSosiCloudIdentityOperation
ResetAccountCdpcontentsOperation
RemoveRecoveryKeyOperation
PerformAtoprvactionsOperation
CuttlefishAPIAsync
CuttlefishAPIAsyncClient
CuttlefishAPIAsyncOperation
CuttlefishAPIAsyncOperationClient
EscrowKeys
EscrowKeysError
BottledPeer
Error
TPPolicyVersion
BottleMO
CustodianRecoveryKeyMO
ContainerMO
EscrowClientMetadataMO
EscrowMetadataMO
EscrowRecordMO
MachineMO
PeerMO
PolicyMO
RecoveryVoucherMO
VoucherMO
&EKjpv|
"(.4:@O
@(#)PROGRAM:TrustedPeersHelper  PROJECT:Security-60420.100.335.0.3
3333
T@"CKKSAESSIVKey",&,V_aessivkey
CKKSGroupWithName:
T@"NSString",&,N,V_federationId
JSONObjectWithData:options:error:
T@"NSString",&,V_receiverPeerID
StringAsRecordStatus:
T@"NSString",R,V_appleAccountID
StringAsRecoveryStatus:
TB,V_isExcluded
T#,R
T@"CKKSKeychainBackedKey",&,V_classA
_bottleValidity
T@"CKKSKeychainBackedKey",&,V_tlk
_classC
T@"CKRecordZoneID",&,V_zoneID
_devicePlatform
T@"NSData",&,N,V_backupKeybagDigest
_peerID
T@"NSData",&,N,V_escrowedEncryptionSPKI
_recoveryStatus
T@"NSData",&,N,V_escrowedSpki
_serial
T@"NSData",&,N,V_key
_zoneID
T@"NSData",&,N,V_peerEncryptionSPKI
addPeersObject:
T@"NSData",&,N,V_peerSigningSPKI
allowed
T@"NSData",&,N,V_reserved2
base64EncodedStringWithOptions:
T@"NSData",&,N,V_reserved4
bottles
T@"NSData",&,N,V_reserved6
ccsha384_diSize
T@"NSData",&,N,V_signingSPKI
containsObject:
T@"NSData",&,V_encryptionSPKI
crkInfo
T@"NSData",&,V_signature
dataForSigning:
T@"NSData",&,V_signingSPKI
dealloc
T@"NSDictionary",&,V_peerCountsByMachineID
escrowFetchDate
T@"NSDictionary",&,V_viablePeerCountsByModelID
hasCreationDate
T@"NSSet",&,V_successfulKeysRecovered
hasFederationId
T@"NSSet",R,V_viewList
hasSerialNumber
T@"NSString",&,N,V_bottleId
initRandomKeyPairWithSpecifier:
T@"NSString",&,N,V_currentFederation
initWithLength:
T@"NSString",&,N,V_deviceEnclosureColor
initWithUUID:encryptionKey:signingKey:recoveryString:salt:kind:
T@"NSString",&,N,V_deviceModel
T@"NSString",&,N,V_deviceModelVersion
keyPair
T@"NSString",&,N,V_escrowRecordLabel
makeCKContainer
T@"NSString",&,N,V_intendedFederation
options
T@"NSString",&,N,V_label
preflightPreapprovedJoinWithSpecificUser:preapprovedKeys:reply:
T@"NSString",&,N,V_recordId
prepareInheritancePeerWithSpecificUser:epoch:machineID:bottleSalt:bottleID:modelID:deviceName:serialNumber:osVersion:policyVersion:policySecrets:syncUserControllableViews:secureElementIdentity:signingPrivKeyPersistentRef:encPrivKeyPersistentRef:crk:reply:
T@"NSString",&,N,V_uuid
receiverPublicEncryptionKeySPKI
T@"NSString",&,V_egoPeerID
release
T@"NSString",&,V_osVersion
serviceListener
T@"NSString",&,V_peerID
setAccessGroup:
T@"NSString",&,V_senderPeerID
setCurrentSelf:
T@"NSString",&,V_tlkUUID
setDeviceModel:
T@"NSString",R
setKey:
T@"NSString",R,V_altDSID
setMergePolicy:
T@"NSString",R,V_octagonContextID
setPersistentStoreDescriptions:
T@"NSString",R,V_personaUniqueString
setSigningSPKI:
T@"OTAuthenticatedCiphertext",&,N,V_contents
setVoucherInfo:
T@"OTEscrowRecordMetadataClientMetadata",&,N,V_clientMetadata
T@"OTPrivateKey",&,N,V_peerSigningPrivKey
T@"TPPBPeerStableInfoSetting",&,V_webAccess
trigger
T@"_SFECKeyPair",&,V_encryptionKey
version
T@"_SFECPublicKey",R
zeroKey
.cxx_destruct
T@"NSData",&,N,V_encryptionSPKI
CKPropertiesDescription
T@"NSString",&,N,V_serialNumber
StringAsKeyType:
T@"NSString",&,V_recoveryString
StringAsRecordViability:
T@"_SFECKeyPair",&,V_signingKey
StringAsViabilityStatus:
TQ,V_peerStatus
T@"<CKKSSelfPeer>",&,V_currentSelf
_appleAccountID
T@"CKKSKeychainBackedKey",&,V_classC
_classA
T@"CKKSWrappedAESSIVKey",&,V_wrappedkey
_clientMetadata
T@"NSData",&,N,V_authenticationCode
_encryptionSPKI
T@"NSData",&,N,V_ciphertext
_receiverPeerID
T@"NSData",&,N,V_escrowedSigningSPKI
_recoveryString
T@"NSData",&,N,V_initializationVector
_walrus
T@"NSData",&,N,V_keyData
addCustodianRecoveryKeysObject:
T@"NSData",&,N,V_peerInfo
allKeys
T@"NSData",&,N,V_reserved1
altDSID
T@"NSData",&,N,V_reserved3
bestWebAccessAcrossTrustedPeers
T@"NSData",&,N,V_reserved5
bundleForClass:
T@"NSData",&,N,V_reserved7
ckksIsCKErrorRecordChangedError
T@"NSData",&,V_encryptionKey
copyTo:
T@"NSData",&,V_receiverPublicEncryptionKeySPKI
currentStatePossiblyMissingData
T@"NSData",&,V_signingKey
dataWithLength:
T@"NSData",&,V_wrappedTLK
enabled
T@"NSDictionary",&,V_tlkRecoveryErrors
excludedPeerIDs
T@"NSSet",&,V_allSelves
hasEscrowedSpki
T@"NSSet",&,V_viewList
hasRecordStatus
T@"NSString",&,N,V_bottleID
includedPeerIDs
T@"NSString",&,N,V_bottleValidity
initWithBase64:
T@"NSString",&,N,V_deviceColor
initWithSecKey:
T@"NSString",&,N,V_deviceMid
isProxy
T@"NSString",&,N,V_deviceModelClass
keyData
T@"NSString",&,N,V_deviceName
keyType
T@"NSString",&,N,V_expectedFederationId
modelID
T@"NSString",&,N,V_keyclass
peerSigningSPKI
T@"NSString",&,N,V_peerID
preflightRecoverOctagonUsingRecoveryKey:recoveryKey:salt:reply:
T@"NSString",&,N,V_serial
randomKeyWrappedByParent:error:
T@"NSString",&,N,V_zoneName
recordViability
T@"NSString",&,V_egoPeerMachineID
removeFullyViableEscrowRecords:
T@"NSString",&,V_parentKeyUUID
T@"NSString",&,V_salt
setChangeToken:
T@"NSString",&,V_spid
setDeviceColor:
T@"NSString",&,V_uuid
setDynamicInfo:
T@"NSString",R,C
setKeyMaterialInKeychain:error:
T@"NSString",R,V_cloudkitContainerName
setMoreChanges:
T@"NSString",R,V_peerID
setRecoveryKeyWithSpecificUser:recoveryKey:salt:ckksKeys:reply:
T@"NSString<SecCKKSKeyClass>",&,V_keyclass
setTlk:
T@"OTEscrowRecordMetadata",&,N,V_escrowInformationMetadata
shouldHaveView:
T@"OTPrivateKey",&,N,V_peerEncryptionPrivKey
stringFromDate:
T@"TPPBPeerStableInfoSetting",&,V_walrus
tlkUUID
T@"TPPBSecureElementIdentity",&,V_secureElementIdentity
userPersonaType
T@"_SFECKeyPair",R
viabilityStatus
T@"_SFECPublicKey",R,V_publicEncryptionKey
T@"_SFECPublicKey",R,V_publicSigningKey
TB,N
TB,R
TB,R,N
TB,R,V_isPrimaryAccount
TB,V_identityIsPreapproved
TB,V_isLocked
TB,V_memberChanges
TB,V_newUpload
TB,V_unknownMachineIDsPresent
TPPBPolicyCategoriesByViewWithView:categories:
TPPBPolicyIntroducersByCategoryWithCategory:introducers:
TPPBPolicyKeyViewMappingWithView:matchingRule:
TPPBPolicyModelToCategoryWithPrefix:category:
TQ,N,V_coolOffEnd
TQ,N,V_creationDate
TQ,N,V_devicePlatform
TQ,N,V_remainingAttempts
TQ,N,V_secureBackupMetadataTimestamp
TQ,N,V_secureBackupNumericPassphraseLength
TQ,N,V_secureBackupTimestamp
TQ,N,V_secureBackupUsesComplexPassphrase
TQ,N,V_secureBackupUsesMultipleIcscs
TQ,N,V_secureBackupUsesNumericPassphrase
TQ,N,V_silentAttemptAllowed
TQ,R
TQ,V_egoStatus
TQ,V_numberOfPeersInOctagon
TQ,V_version
Ti,N,V_keyType
Ti,N,V_recordStatus
Ti,N,V_recordViability
Ti,N,V_recoveryStatus
Ti,N,V_viabilityStatus
Ti,V_kind
Tq,V_curve
Tq,V_epoch
Tq,V_poisoned
Tq,V_totalTLKSharesRecovered
URLForResource:withExtension:
UTF8String
UUID
UUIDString
_aessivkey
_allSelves
_altDSID
_authenticationCode
_backupKeybagDigest
_bottleID
_bottleId
_ciphertext
_cloudkitContainerName
_contents
_coolOffEnd
_creationDate
_currentFederation
_currentSelf
_curve
_deviceColor
_deviceEnclosureColor
_deviceMid
_deviceModel
_deviceModelClass
_deviceModelVersion
_deviceName
_egoPeerID
_egoPeerMachineID
_egoStatus
_encryptionKey
_epoch
_escrowInformationMetadata
_escrowRecordLabel
_escrowedEncryptionSPKI
_escrowedSigningSPKI
_escrowedSpki
_expectedFederationId
_federationId
_has
_identityIsPreapproved
_initializationVector
_intendedFederation
_isCKServerInternalError
_isExcluded
_isLocked
_isPrimaryAccount
_isRetryableAKError
_isRetryableNSURLError
_key
_keyData
_keyType
_keyclass
_kind
_label
_memberChanges
_newUpload
_newZeroingDataWithBytes:length:
_numberOfPeersInOctagon
_octagonContextID
_osVersion
_parentKeyUUID
_peerCountsByMachineID
_peerEncryptionPrivKey
_peerEncryptionSPKI
_peerInfo
_peerSigningPrivKey
_peerSigningSPKI
_peerStatus
_personaUniqueString
_poisoned
_publicEncryptionKey
_publicSigningKey
_receiverPublicEncryptionKeySPKI
_recordId
_recordStatus
_recordViability
_remainingAttempts
_reserved1
_reserved2
_reserved3
_reserved4
_reserved5
_reserved6
_reserved7
_salt
_secureBackupMetadataTimestamp
_secureBackupNumericPassphraseLength
_secureBackupTimestamp
_secureBackupUsesComplexPassphrase
_secureBackupUsesMultipleIcscs
_secureBackupUsesNumericPassphrase
_secureElementIdentity
_senderPeerID
_serialNumber
_signature
_signingKey
_signingSPKI
_silentAttemptAllowed
_spid
_successfulKeysRecovered
_tlk
_tlkRecoveryErrors
_tlkUUID
_totalTLKSharesRecovered
_unknownMachineIDsPresent
_uuid
_version
_viabilityStatus
_viablePeerCountsByModelID
_viewList
_webAccess
_wrappedTLK
_wrappedkey
_zoneName
accountOverrideInfo
addAllowedMachineIDsWithSpecificUser:machineIDs:reply:
addBottlesObject:
addFullyViableEscrowRecordsObject:
addLegacyEscrowRecordsObject:
addMachinesObject:
addPartiallyViableEscrowRecordsObject:
addPoliciesObject:
addVouchersObject:
aes256BitSize
aessivkey
allCustodianRecoveryKeys
allMachineIDs
allPeerIDs
allPeers
allPolicyVersions
allRegisteredPolicyVersions
allSelves
allValues
allVouchers
allocWithZone:
allowedMachineIDs
allowsReverseTransformation
andMatch:
appendBytes:length:
appendData:
appleAccountID
archivedDataWithRootObject:requiringSecureCoding:error:
arrayWithObjects:count:
asECKeyPair:
asSFAuthenticatedCiphertext
attemptPreapprovedJoinWithSpecificUser:ckksKeys:tlkShares:preapprovedKeys:reply:
authenticationCode
autorelease
backupKeybagDigest
base64EncodedDataWithOptions:
base64WrappedKey
beneficiaryID
bestPolicyVersion
bestRecoveryKeyForStableInfo:dynamicInfo:vouchers:
bestWalrusAcrossTrustedPeers
bestWalrusForStableInfo:dynamicInfo:walrusStableChanges:
bestWebAccessForStableInfo:dynamicInfo:webAccessStableChanges:
bottleID
bottleId
bottleValidity
bytes
cStringUsingEncoding:
calculateDynamicInfoForPeerWithID:addingPeerIDs:removingPeerIDs:preapprovedKeys:signingKeyPair:currentMachineIDs:error:
ccec384Context
changeToken
checkIntroductionForCandidate:stableInfo:withSponsorID:error:
ciphertext
class
classA
classC
clientMetadata
clock
cloudkitContainerName
code
codeServiceWithName:databaseScope:
compare:
configuration
conformsToProtocol:
containerIDForContainerIdentifier:
contents
contextFree:
coolOffEnd
copy
copyWithZone:
count
countByEnumeratingWithState:objects:count:
createCustodianRecoveryKeyWithSpecificUser:recoveryKey:salt:ckksKeys:uuid:kind:reply:
createSecKey:
createStableInfoWithFrozenPolicyVersion:flexiblePolicyVersion:policySecrets:syncUserControllableViews:secureElementIdentity:walrusSetting:webAccess:deviceName:serialNumber:osVersion:signingKeyPair:recoverySigningPubKey:recoveryEncryptionPubKey:isInheritedAccount:error:
createVoucherForCandidate:stableInfo:withSponsorID:reason:signingKeyPair:error:
creationDate
crkInfoSig
currentFederation
currentPersona
currentSelf
currentThreadIsForPrimaryiCloudAccount
currentThreadPersonaUniqueString
curve
custodianPeerWithID:
custodianRecoveryKeyWithData:sig:keyFactory:
custodianRecoveryKeys
cuttlefishRetryAfter
data
dataUsingEncoding:
databaseScope
debugDescription
decodeBoolForKey:
decodeBytesForKey:returnedLength:
decodeInt32ForKey:
decodeInt64ForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
decrypt:withKey:error:
decryptData:authenticatedData:error:
decryptData:withKey:error:
defaultManager
deleteKeyMaterialFromKeychain:
deleteObject:
deletePeerWithID:
departByDistrustingSelfWithSpecificUser:reply:
description
destroyPersistentStoreAtURL:withType:options:error:
deviceColor
deviceEnclosureColor
deviceMid
deviceModel
deviceModelClass
deviceModelVersion
deviceName
devicePlatform
dictionary
dictionaryRepresentation
dictionaryWithObjects:forKeys:count:
digestUsingSha384:
distrustPeerIDsWithSpecificUser:peerIDs:reply:
doSIV:nonce:text:buffer:bufferLength:authenticatedData:error:
domain
doubleValue
dumpWithSpecificUser:reply:
dynamicInfo
dynamicInfoForJoiningPeerID:peerPermanentInfo:peerStableInfo:sponsorID:preapprovedKeys:signingKeyPair:currentMachineIDs:error:
dynamicInfoSig
dynamicInfoWithData:sig:
egoPeerID
egoPeerMachineID
egoPeerPermanentInfo
egoPeerPermanentInfoSig
egoPeerStableInfo
egoPeerStableInfoSig
egoStatus
encodeBool:forKey:
encodeBytes:length:forKey:
encodeInt32:forKey:
encodeInt64:forKey:
encodeObject:forKey:
encodeSubjectPublicKeyInfo
encodeWithCoder:
encodedData
encrypt:withKey:error:
encryptData:authenticatedData:error:
encryptionKey
encryptionKeyData
encryptionPubKey
encryptionPublicKey
encryptionSPKI
endpoint
ensureKeyLoadedFromKeychain:
enumerateKeysAndObjectsUsingBlock:
epoch
error
errorWithDomain:code:description:
errorWithDomain:code:description:underlying:
errorWithDomain:code:userInfo:
escrowInformationMetadata
escrowMetadata
escrowRecordLabel
escrowedEncryptionSPKI
escrowedSPKI
escrowedSigningSPKI
escrowedSpki
establishWithSpecificUser:ckksKeys:tlkShares:preapprovedKeys:reply:
exceptionWithName:reason:userInfo:
executeRequest:error:
expectedFederationID
expectedFederationId
federationID
federationId
fetchAccountSettingsWithSpecificUser:forceFetch:reply:
fetchAllowedMachineIDsWithSpecificUser:reply:
fetchCurrentPolicyWithSpecificUser:modelIDOverride:isInheritedAccount:reply:
fetchEgoEpochWithSpecificUser:reply:
fetchEscrowContentsWithSpecificUser:reply:
fetchKeyMaterialItemFromKeychain:resave:error:
fetchKeyPairWithPrivateKeyPersistentRef:error:
fetchPolicyDocumentsWithSpecificUser:versions:reply:
fetchRecoverableTLKSharesWithSpecificUser:peerID:reply:
fetchTrustStateWithSpecificUser:reply:
fetchViableBottlesWithSpecificUser:source:reply:
fetchViableEscrowRecordsWithSpecificUser:source:reply:
fieldMatch:fieldRegex:
findCustodianRecoveryKeyWithUUID:
finishDecoding
fromECKeyPair:
fromSFAuthenticatedCiphertext:
fullyViableEscrowRecords
generateAndRestorePersonaContextWithPersonaUniqueString:
getDynamicInfoForPeerWithID:
getPeerIDsTrustedByPeerWithDynamicInfo:toAccessView:error:
getStableInfoForPeerWithID:
getSupportAppInfoWithSpecificUser:reply:
getViewsForCRK:donorPermanentInfo:donorStableInfo:error:
getViewsForPeer:stableInfo:error:
hasBackupKeybagDigest
hasBottleID
hasBottleId
hasBottleValidity
hasClientMetadata
hasContents
hasCoolOffEnd
hasCurrentFederation
hasDeviceColor
hasDeviceEnclosureColor
hasDeviceMid
hasDeviceModel
hasDeviceModelClass
hasDeviceModelVersion
hasDeviceName
hasDevicePlatform
hasEncryptionSPKI
hasEscrowInformationMetadata
hasEscrowRecordLabel
hasEscrowedEncryptionSPKI
hasEscrowedSigningSPKI
hasExpectedFederationId
hasIntendedFederation
hasLabel
hasPeerEncryptionPrivKey
hasPeerEncryptionSPKI
hasPeerID
hasPeerInfo
hasPeerSigningPrivKey
hasPeerSigningSPKI
hasPeerWithID:
hasPotentiallyTrustedPeerPreapprovingKey:
hasPotentiallyTrustedPeerWithSigningKey:
hasPrefix:
hasRecordId
hasRecordViability
hasRecoveryStatus
hasRemainingAttempts
hasReserved1
hasReserved2
hasReserved3
hasReserved4
hasReserved5
hasReserved6
hasReserved7
hasSecureBackupMetadataTimestamp
hasSecureBackupNumericPassphraseLength
hasSecureBackupTimestamp
hasSecureBackupUsesComplexPassphrase
hasSecureBackupUsesMultipleIcscs
hasSecureBackupUsesNumericPassphrase
hasSerial
hasSigningSPKI
hasSilentAttemptAllowed
hasSuffix:
hasViabilityStatus
hash
hashWithAlgo:ofData:
honorIDMSListChanges
identityForIdentifier:
identityIsPreapproved
init
init:sender:receiver:curve:version:epoch:poisoned:zoneID:
initForKey:senderPeerID:recieverPeerID:receiverEncPublicKeySPKI:curve:version:epoch:poisoned:wrappedKey:signature:zoneID:
initForReadingFromData:error:
initRequiringSecureCoding:
initTapToRadar:description:radar:
initWithAESKey:wrappedAESKey:uuid:parentKeyUUID:keyclass:zoneID:
initWithAccessibility:sharingPolicy:
initWithAltDSID:
initWithArray:
initWithBase64EncodedData:options:
initWithBase64EncodedString:options:
initWithBitSize:
initWithBytes:len:
initWithBytes:length:
initWithBytesNoCopy:length:freeWhenDone:
initWithCiphertext:authenticationCode:initializationVector:
initWithClock:frozenPolicyVersion:flexiblePolicyVersion:policySecrets:syncUserControllableViews:secureElementIdentity:walrusSetting:webAccess:deviceName:serialNumber:osVersion:signingKeyPair:recoverySigningPubKey:recoveryEncryptionPubKey:isInheritedAccount:error:
initWithCloudkitContainerName:octagonContextID:appleAccountID:altDSID:isPrimaryPersona:personaUniqueString:
initWithCoder:
initWithContainerID:options:
initWithContentsOfURL:
initWithContext:
initWithCurrent:allSelves:
initWithCurve:
initWithData:
initWithData:sig:
initWithData:signature:
initWithData:specifier:error:
initWithDecrypter:
initWithDomain:code:userInfo:
initWithEgoPeerID:egoPeerMachineID:status:viablePeerCountsByModelID:peerCountsByMachineID:isExcluded:isLocked:
initWithEntity:insertIntoManagedObjectContext:
initWithEntityName:
initWithEntries:
initWithFetchRequest:
initWithKeyPair:
initWithKeySpecifier:
initWithKeySpecifier:digestOperation:
initWithMachineID:status:modified:
initWithName:managedObjectModel:
initWithPeerID:encryptionPublicKey:signingPublicKey:viewList:
initWithPeerID:isPreapproved:status:memberChanges:unknownMachineIDs:osVersion:walrus:webAccess:
initWithPeerID:signingSPKI:encryptionSPKI:secureElementIdentity:viewList:
initWithSOSPeerID:encryptionKey:signingKey:viewList:
initWithSOSPeerID:encryptionPublicKey:signingPublicKey:viewList:
initWithSecureElementIdentity:
initWithSigningKeyData:encryptionKeyData:
initWithStableInfo:
initWithSuccessfulKeyUUIDs:totalTLKSharesRecovered:tlkRecoveryErrors:
initWithTLK:classA:classC:newUpload:
initWithURL:
initWithUUID:signingPublicKey:encryptionPublicKey:signingKeyPair:kind:error:
initWithVersion:hash:
initWithVersion:modelToCategory:categoriesByView:introducersByCategory:redactions:keyViewMapping:userControllableViewList:piggybackViews:priorityViews:inheritedExcludedViews:hashAlgo:
initWithViableBottles:partialBottles:
initWithWrappedAESKey:uuid:parentKeyUUID:keyclass:zoneID:
initWithZoneName:ownerName:
initializationVector
intValue
intendedEmptyIdentity
intendedFederation
interfaceWithProtocol:
isCKKSServerPluginError:
isCKServerInternalError
isCustodianRecoveryKeyTrusted:
isCuttlefishError:
isEqual:
isEqualToPolicyDocument:
isEqualToString:
isExcluded
isInheritedAccount
isKindOfClass:
isLocked
isMemberOfClass:
isPrimaryAccount
isRecoveryKeyEnrolled
isRecoveryKeySet:reply:
isRetryable
joinWithSpecificUser:voucherData:voucherSig:ckksKeys:tlkShares:preapprovedKeys:reply:
key:wrappedByKey:uuid:parentKeyUUID:keyclass:zoneID:error:
keyMaterial
keyTypeAsString:
keyWithSubjectPublicKeyInfo:
keyWrappedBySelf:uuid:keyclass:zoneID:error:
keyclass
kind
label
legacyEscrowRecords
length
listener:shouldAcceptNewConnection:
loadFromProtobuf:error:
loadKeyMaterialFromKeychain:
loadPersistentStoresWithCompletionHandler:
localResetWithSpecificUser:reply:
machineID
machineIDsInStatus:
machines
matchesPeer:
memberChanges
mergeByPropertyStoreTrumpMergePolicy
mergeFrom:
modified
mungeModelID:
mutableBytes
mutableCopy
newBackgroundContext
newUpload
numberOfPeersInOctagon
numberWithUnsignedLongLong:
objectEnumerator
objectForKey:
objectForKeyedSubscript:
octagonContextID
operatingSystemVersionString
orMatch:
osVersion
parentKeyUUID
partialBottles
partiallyViableEscrowRecords
peerCountsByMachineID
peerEncryptionPrivKey
peerEncryptionSPKI
peerID
peerIDThatTrustsCustodianRecoveryKeys:canIntroducePeer:stableInfo:
peerIDThatTrustsRecoveryKeys:canIntroducePeer:stableInfo:
peerIdentifier
peerInfo
peerSigningPrivKey
peerStatus
peerWithID:
peers
performATOPRVActionsWithSpecificUser:reply:
performBlockAndWait:
performBlockWithPersonaIdentifier:block:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
permanentInfo
permanentInfoSig
permanentInfoWithMachineID:modelID:epoch:signingKeyPair:encryptionKeyPair:peerIDHashAlgo:error:
permanentInfoWithPeerID:data:sig:keyFactory:
persistentStoreCoordinator
personaUniqueString
pingWithReply:
poisoned
policies
policyData
policyDocWithHash:data:
policyForPeerIDs:candidatePeerID:candidateStableInfo:error:
policyHash
policySecrets
policyWithSecrets:decrypter:error:
policyWithVersion:
post:
preapprovals
preflightVouchWithBottleWithSpecificUser:bottleID:reply:
preflightVouchWithCustodianRecoveryKeyWithSpecificUser:crk:reply:
preflightVouchWithRecoveryKeyWithSpecificUser:recoveryKey:salt:reply:
prepareThreadForKeychainAPIUseForPersonaIdentifier:
prepareWithSpecificUser:epoch:machineID:bottleSalt:bottleID:modelID:deviceName:serialNumber:osVersion:policyVersion:policySecrets:syncUserControllableViews:secureElementIdentity:setting:signingPrivKeyPersistentRef:encPrivKeyPersistentRef:reply:
privateCloudDatabase
processInfo
protobuf
publicEncryptionKey
publicKey
publicSigningKey
pushHealthInquiryWithSpecificUser:reply:
queryKeyMaterialInKeychain:error:
randomKey:
randomKeyWrappedByParent:keyclass:error:
randomKeyWrappedBySelf:error:
readFrom:
receiverPeerID
recordId
recordStatus
recordStatusAsString:
recordViabilityAsString:
recoverTLK:trustedPeers:ckrecord:error:
recoverTLKSharesForInheritorWithSpecificUser:crk:tlkShares:reply:
recoveryEncryptionPublicKey
recoveryKeyEncryptionSPKI
recoveryKeySigningSPKI
recoverySigningPublicKey
recoveryStatus
recoveryStatusAsString:
recoveryString
refetchLevel
registerCustodianRecoveryKey:
registerPeerWithPermanentInfo:
registerPolicyDocument:
registerVoucher:
remainingAttempts
removeAllowedMachineIDsWithSpecificUser:machineIDs:reply:
removeBottles:
removeCustodianRecoveryKey:
removeCustodianRecoveryKeyWithSpecificUser:uuid:reply:
removeCustodianRecoveryKeys:
removeEscrowCacheWithSpecificUser:reply:
removeLegacyEscrowRecords:
removeMachinesObject:
removeObject:
removePartiallyViableEscrowRecords:
removePeersObject:
removeRecoveryKey
removeRecoveryKey:reply:
removeVouchersObject:
reportHealthWithSpecificUser:stateMachineState:trustState:reply:
requestHealthCheckWithSpecificUser:requiresEscrowCheck:knownFederations:reply:
requestUUID
reserved1
reserved2
reserved3
reserved4
reserved5
reserved6
reserved7
resetAccountCDPContentsWithSpecificUser:idmsTargetContext:idmsCuttlefishPassword:notifyIdMS:reply:
resetWithSpecificUser:resetReason:idmsTargetContext:idmsCuttlefishPassword:notifyIdMS:reply:
respondsToSelector:
resultType
resume
retain
retainCount
retryInterval
reverseTransformedValue:
safeErrorClasses
salt
save:
saveKeyMaterialToKeychain:
saveKeyMaterialToKeychain:error:
secureBackupMetadataTimestamp
secureBackupNumericPassphraseLength
secureBackupTimestamp
secureBackupUsesComplexPassphrase
secureBackupUsesMultipleIcscs
secureBackupUsesMultipleiCSCS
secureBackupUsesNumericPassphrase
secureElementIdentity
seenOnFullList
self
senderPeerID
serial
serialNumber
serializeAsProtobuf:
setAccountOverrideInfo:
setAessivkey:
setAllSelves:
setAllowed:
setAllowedMachineIDs:
setAllowedMachineIDsWithSpecificUser:allowedMachineIDs:honorIDMSListChanges:reply:
setApplicationBundleIdentifierOverride:
setAuthenticationCode:
setAutomaticallyRetryNetworkFailures:
setBackupKeybagDigest:
setBottleID:
setBottleId:
setBottleValidity:
setBottles:
setByAddingObject:
setBypassPCSEncryption:
setCiphertext:
setClassA:
setClassC:
setClasses:forSelector:argumentIndex:ofReply:
setClientMetadata:
setContainer:
setContents:
setCoolOffEnd:
setCreationDate:
setCrkInfo:
setCrkInfoSig:
setCurrentFederation:
setCurve:
setDefaultRetryIntervalForTests:
setDelegate:
setDeviceEnclosureColor:
setDeviceMid:
setDeviceModelClass:
setDeviceModelVersion:
setDeviceName:
setDevicePlatform:
setDiscretionaryNetworkBehavior:
setDynamicInfoSig:
setEgoPeerID:
setEgoPeerMachineID:
setEgoPeerPermanentInfo:
setEgoPeerPermanentInfoSig:
setEgoPeerStableInfo:
setEgoPeerStableInfoSig:
setEgoStatus:
setEncryptionKey:
setEncryptionSPKI:
setEpoch:
setEscrowFetchDate:
setEscrowInformationMetadata:
setEscrowMetadata:
setEscrowRecordLabel:
setEscrowedEncryptionSPKI:
setEscrowedSPKI:
setEscrowedSigningSPKI:
setEscrowedSpki:
setExpectedFederationID:
setExpectedFederationId:
setExpectedReceiveSize:
setExpectedSendSize:
setExportedInterface:
setExportedObject:
setFederationID:
setFederationId:
setHasCoolOffEnd:
setHasCreationDate:
setHasDevicePlatform:
setHasRecordStatus:
setHasRecordViability:
setHasRecoveryStatus:
setHasRemainingAttempts:
setHasSecureBackupMetadataTimestamp:
setHasSecureBackupNumericPassphraseLength:
setHasSecureBackupTimestamp:
setHasSecureBackupUsesComplexPassphrase:
setHasSecureBackupUsesMultipleIcscs:
setHasSecureBackupUsesNumericPassphrase:
setHasSilentAttemptAllowed:
setHasViabilityStatus:
setHonorIDMSListChanges:
setIdentity:forIdentifier:accessPolicy:error:
setIdentityIsPreapproved:
setInitializationVector:
setIntendedFederation:
setIsCloudKitSupportOperation:
setIsEgoPeer:
setIsExcluded:
setIsLocked:
setKeyData:
setKeyType:
setKeyclass:
setKind:
setLabel:
setMachineID:
setMemberChanges:
setModified:
setName:
setNewUpload:
setNumberOfPeersInOctagon:
setObject:forKey:
setObject:forKeyedSubscript:
setOsVersion:
setParentKeyUUID:
setPeerCountsByMachineID:
setPeerEncryptionPrivKey:
setPeerEncryptionSPKI:
setPeerID:
setPeerInfo:
setPeerSigningPrivKey:
setPeerSigningSPKI:
setPeerStatus:
setPeers:
setPermanentInfo:
setPermanentInfoSig:
setPoisoned:
setPolicyData:
setPolicyHash:
setPreapprovedKeysWithSpecificUser:preapprovedKeys:reply:
setPredicate:
setPublicEncryptionKey:
setPublicSigningKey:
setQualityOfService:
setReceiverPeerID:
setReceiverPublicEncryptionKeySPKI:
setRecordId:
setRecordStatus:
setRecordViability:
setRecoveryKeyEncryptionSPKI:
setRecoveryKeySigningSPKI:
setRecoveryKeys:
setRecoveryStatus:
setRecoveryString:
setRefetchLevel:
setRemainingAttempts:
setRequestCompletedBlock:
setReserved1:
setReserved2:
setReserved3:
setReserved4:
setReserved5:
setReserved6:
setReserved7:
setSalt:
setSecureBackupMetadataTimestamp:
setSecureBackupNumericPassphraseLength:
setSecureBackupTimestamp:
setSecureBackupUsesComplexPassphrase:
setSecureBackupUsesMultipleIcscs:
setSecureBackupUsesMultipleiCSCS:
setSecureBackupUsesNumericPassphrase:
setSecureElementIdentity:
setSeenOnFullList:
setSenderPeerID:
setSerial:
setSerialNumber:
setSignature:
setSignatureUsingEscrowKey:
setSignatureUsingPeerKey:
setSigningKey:
setSilentAttemptAllowed:
setSosViability:
setSpid:
setStableInfo:
setStableInfoSig:
setStatus:
setSuccessfulKeysRecovered:
setTlkRecoveryErrors:
setTlkUUID:
setTotalTLKSharesRecovered:
setUnknownMachineIDsPresent:
setUuid:
setValue:
setValueTransformer:forName:
setVersion:
setViabilityStatus:
setViablePeerCountsByModelID:
setViewList:
setVoucherInfoSig:
setWalrus:
setWebAccess:
setWithArray:
setWithObject:
setWithSet:
setWrappedTLK:
setWrappedkey:
setZoneID:
setZoneName:
share:as:to:epoch:poisoned:error:
sharedManager
sign:withKey:error:
signRecord:ckrecord:error:
signature
signatureUsingEscrowKey
signatureUsingPeerKey
signatureVerifiesWithPeerSet:ckrecord:error:
signingKey
signingKeyData
signingPubKey
signingPublicKey
signingSPKI
silentAttemptAllowed
size
sleepForTimeInterval:
sortedArrayUsingSelector:
sosViability
spid
spki
sponsorID
stableInfo
stableInfoSig
status
statusOfPeerWithID:
stringByAppendingFormat:
stringByAppendingString:
stringByReplacingOccurrencesOfString:withString:
stringForObjectValue:
stringWithFormat:
subdataWithRange:
substringFromIndex:
successfulKeysRecovered
superclass
supportsSecureCoding
syncUserControllableViews
syncingPolicyForModel:syncUserControllableViews:isInheritedAccount:error:
tlkRecoveryErrors
totalTLKSharesRecovered
transformedValue:
transformedValueClass
trueMatch
trustStatusWithSpecificUser:reply:
trustedPeerIDs
trySelfWrappedKeyCandidate:error:
type
unionSet:
unknownMachineIDsPresent
unsignedIntegerValue
unsignedLongLongValue
unwrapAESKey:error:
unwrapSelfWithAESKey:error:
unwrapUsing:error:
updateDynamicInfo:forPeerWithID:error:
updateStableInfo:forPeerWithID:error:
updateTLKsWithSpecificUser:ckksKeys:tlkShares:reply:
updateWithSpecificUser:forceRefetch:deviceName:serialNumber:osVersion:policyVersion:policySecrets:syncUserControllableViews:secureElementIdentity:walrusSetting:webAccess:reply:
userInfo
userPersonaUniqueString
userViewSyncabilityConsensusAmongTrustedPeers:
uuid
validatePeersWithSpecificUser:reply:
value
valueForEntitlement:
verify:withKey:error:
verifySignature:verifyingPeer:ckrecord:error:
versionNumber
viabilityStatusAsString:
viableBottles
viablePeerCountsByModelID
viewList
vouchWithBottleWithSpecificUser:bottleID:entropy:bottleSalt:tlkShares:reply:
vouchWithCustodianRecoveryKeyWithSpecificUser:crk:tlkShares:reply:
vouchWithRecoveryKeyWithSpecificUser:recoveryKey:salt:tlkShares:reply:
vouchWithSpecificUser:peerID:permanentInfo:permanentInfoSig:stableInfo:stableInfoSig:ckksKeys:reply:
voucherInfo
voucherInfoSig
voucherInfoWithData:sig:
vouchers
walrus
walrusSetting
webAccess
wrap:publicKey:error:
wrapAESKey:error:
wrapUnder:error:
wrappedData
wrappedTLK
wrappedkey
wrapsSelf
writeTo:
zeroedKey
zone
zoneID
zoneName
com.apple.security.trustedpeers
Starting up
ProtectedCloudStorage
SecureObjectSync
_TtC18TrustedPeersHelper15ServiceDelegate
B32@0:8@16@24
@16@0:8
com.apple.private.trustedpeershelper.client
client(%{public}@ is missing entitlement '%{public}s'
client(%{public}@ has wrong boolean value for '%{public}s' (%{bool}d), rejecting
client(%{public}@ has wrong integer value for '%{public}s' (%ld), rejecting
client has entitlement '%{public}s'
Received a new client: %{public}@
com.apple.security.TrustedPeersHelper.ContainerMap
#16@0:8
B16@0:8
@24@0:8@16
Failed to deserialize a purported Set: %{public}s
Failed to serialize a Set: %{public}s
_TtC18TrustedPeersHelper11RecoveryKey
peerKeys
_TtC18TrustedPeersHelper20CustodianRecoveryKey
tpCustodian
_TtC18TrustedPeersHelper14InheritanceKey
tpInheritance
keys generated by the entropy+salt do not match the Recovery contents
failed to create entropy
failed to create recovery keys
failed to create private key
failed to create authenticated ciphertext
failed to create Recovery
public and private peer signing keys do not match
Failed to instantiate octagon peer keys
could not decrypt Recovery contents
Failed to deserialize Recovery peer
TrustedPeersHelper.RecoveryKey
_TtC18TrustedPeersHelper9Decrypter
@40@0:8@16@24^@32
_TtC18TrustedPeersHelper14RecoveryKeySet
signingKey
Failed to generate random key
Key generation crypto failed 
Unsupported Key Type 
Failed to save item to keychain: 
Item does not exist
Key generation failed
com.apple.security.trustedpeers.RecoveryKeySetError
com.apple.security.octagon
Recoveryed Encryption Key-%@
Recoveryed Signing Key-%@
Recovery Signing Private Key
Recovery Encryption Private Key
TrustedPeersHelper.RecoveryKeySet
init()
SHA256:/4gt8WFEXCVLYI+C+8/2MiMz6Srv0vpcvlkJ4gkepHQ=
SHA256:O/ECQlWhvNlLmlDNh2+nal/yekUC87bXpV3k+6kznSo=
SHA256:TLXrcQmY4ue3oP5pCX1pwsi9BF8cKfohlJBilCroeBs=
CAESDgoGaVBob25lEgRmdWxsEgwKBGlQYWQSBGZ1bGwSCwoDTWFjEgRmdWxsEgwKBGlNYWMSBGZ1bGwSDQoHQXBwbGVUVhICdHYSDgoFV2F0Y2gSBXdhdGNoGhEKCVBDU0VzY3JvdxIEZnVsbBoXCgRXaUZpEgRmdWxsEgJ0dhIFd2F0Y2gaGQoRU2FmYXJpQ3JlZGl0Q2FyZHMSBGZ1bGwiDAoEZnVsbBIEZnVsbCIUCgV3YXRjaBIEZnVsbBIFd2F0Y2giDgoCdHYSBGZ1bGwSAnR2
SafariCreditCards
SHA256:ZL1WBUCyO155rHBJQeghomCCKGmfjtS0jvsK+UEvx5o=
CAISDgoGaUN5Y2xlEgRmdWxsEg4KBmlQaG9uZRIEZnVsbBIMCgRpUGFkEgRmdWxsEgsKA01hYxIEZnVsbBIMCgRpTWFjEgRmdWxsEg0KB0FwcGxlVFYSAnR2Eg4KBVdhdGNoEgV3YXRjaBoRCglQQ1NFc2Nyb3cSBGZ1bGwaFwoEV2lGaRIEZnVsbBICdHYSBXdhdGNoGhkKEVNhZmFyaUNyZWRpdENhcmRzEgRmdWxsIgwKBGZ1bGwSBGZ1bGwiFAoFd2F0Y2gSBGZ1bGwSBXdhdGNoIg4KAnR2EgRmdWxsEgJ0dg==
SHA256:JZzazSuHXrUhiOfSgElsg6vYKpnvvEPVpciR8FewRWg=
CAMSDgoGaVBob25lEgRmdWxsEgwKBGlQYWQSBGZ1bGwSCwoDTWFjEgRmdWxsEgwKBGlNYWMSBGZ1bGwSDQoHQXBwbGVUVhICdHYSDgoFV2F0Y2gSBXdhdGNoEhcKDkF1ZGlvQWNjZXNzb3J5EgVhdWRpbxocCg1EZXZpY2VQYWlyaW5nEgRmdWxsEgV3YXRjaBoXCghBcHBsZVBheRIEZnVsbBIFd2F0Y2gaJAoVUHJvdGVjdGVkQ2xvdWRTdG9yYWdlEgRmdWxsEgV3YXRjaBoXCghCYWNrc3RvcBIEZnVsbBIFd2F0Y2gaGQoKQXV0b1VubG9jaxIEZnVsbBIFd2F0Y2gaHwoQU2VjdXJlT2JqZWN0U3luYxIEZnVsbBIFd2F0Y2gaIAoRU2FmYXJpQ3JlZGl0Q2FyZHMSBGZ1bGwSBXdhdGNoGhMKBEhvbWUSBGZ1bGwSBXdhdGNoGh4KD1NhZmFyaVBhc3N3b3JkcxIEZnVsbBIFd2F0Y2gaGwoMQXBwbGljYXRpb25zEgRmdWxsEgV3YXRjaBoVCgZFbmdyYW0SBGZ1bGwSBXdhdGNoGi0KE0xpbWl0ZWRQZWVyc0FsbG93ZWQSBGZ1bGwSBXdhdGNoEgJ0dhIFYXVkaW8aFgoHTWFuYXRlZRIEZnVsbBIFd2F0Y2gaHgoEV2lGaRIEZnVsbBIFd2F0Y2gSAnR2EgVhdWRpbxoVCgZIZWFsdGgSBGZ1bGwSBXdhdGNoIhMKBGZ1bGwSBGZ1bGwSBXdhdGNoIhsKBWF1ZGlvEgRmdWxsEgV3YXRjaBIFYXVkaW8iFAoFd2F0Y2gSBGZ1bGwSBXdhdGNoIhUKAnR2EgRmdWxsEgV3YXRjaBICdHYyIgoWAAQiEgIEdndodAoKXkFwcGxlUGF5JBIIQXBwbGVQYXkyJgoYAAQiFAIEdndodAoMXkF1dG9VbmxvY2skEgpBdXRvVW5sb2NrMh4KFAAEIhACBHZ3aHQKCF5FbmdyYW0kEgZFbmdyYW0yHgoUAAQiEAIEdndodAoIXkhlYWx0aCQSBkhlYWx0aDIaChIABCIOAgR2d2h0CgZeSG9tZSQSBEhvbWUyIAoVAAQiEQIEdndodAoJXk1hbmF0ZWUkEgdNYW5hdGVlMjgKIQAEIh0CBHZ3aHQKFV5MaW1pdGVkUGVlcnNBbGxvd2VkJBITTGltaXRlZFBlZXJzQWxsb3dlZDJdClAAAhIeAAQiGgIEdndodAoSXkNvbnRpbnVpdHlVbmxvY2skEhUABCIRAgR2d2h0CgleSG9tZUtpdCQSFQAEIhECBHZ3aHQKCV5BcHBsZVRWJBIJTm90U3luY2VkMisKGwAEIhcCBGFncnAKD15bMC05QS1aXXsxMH1cLhIMQXBwbGljYXRpb25zMsUBCrABAAISNAABChMABCIPAgVjbGFzcwoGXmdlbnAkChsABCIXAgRhZ3JwCg9eY29tLmFwcGxlLnNiZCQSPQABChMABCIPAgVjbGFzcwoGXmtleXMkCiQABCIgAgRhZ3JwChheY29tLmFwcGxlLnNlY3VyaXR5LnNvcyQSGQAEIhUCBHZ3aHQKDV5CYWNrdXBCYWdWMCQSHAAEIhgCBHZ3aHQKEF5pQ2xvdWRJZGVudGl0eSQSEFNlY3VyZU9iamVjdFN5bmMyYwpbAAISEgAEIg4CBHZ3aHQKBl5XaUZpJBJDAAEKEwAEIg8CBWNsYXNzCgZeZ2VucCQKEwAEIg8CBGFncnAKB15hcHBsZSQKFQAEIhECBHN2Y2UKCV5BaXJQb3J0JBIEV2lGaTLbAgrBAgACEhkABCIVAgR2d2h0Cg1eUENTQ2xvdWRLaXQkEhcABCITAgR2d2h0CgteUENTRXNjcm93JBIUAAQiEAIEdndodAoIXlBDU0ZERSQSGQAEIhUCBHZ3aHQKDV5QQ1NGZWxkc3BhciQSGQAEIhUCBHZ3aHQKDV5QQ1NNYWlsRHJvcCQSGgAEIhYCBHZ3aHQKDl5QQ1NNYXN0ZXJLZXkkEhYABCISAgR2d2h0CgpeUENTTm90ZXMkEhcABCITAgR2d2h0CgteUENTUGhvdG9zJBIYAAQiFAIEdndodAoMXlBDU1NoYXJpbmckEh0ABCIZAgR2d2h0ChFeUENTaUNsb3VkQmFja3VwJBIcAAQiGAIEdndodAoQXlBDU2lDbG91ZERyaXZlJBIZAAQiFQIEdndodAoNXlBDU2lNZXNzYWdlJBIVUHJvdGVjdGVkQ2xvdWRTdG9yYWdlMkAKKwAEIicCBGFncnAKH15jb20uYXBwbGUuc2FmYXJpLmNyZWRpdC1jYXJkcyQSEVNhZmFyaUNyZWRpdENhcmRzMjQKIQAEIh0CBGFncnAKFV5jb20uYXBwbGUuY2ZuZXR3b3JrJBIPU2FmYXJpUGFzc3dvcmRzMm0KXAACEh4ABCIaAgR2d2h0ChJeQWNjZXNzb3J5UGFpcmluZyQSGgAEIhYCBHZ3aHQKDl5OYW5vUmVnaXN0cnkkEhwABCIYAgR2d2h0ChBeV2F0Y2hNaWdyYXRpb24kEg1EZXZpY2VQYWlyaW5nMi0KIQAEIh0CBGFncnAKFV5jb20uYXBwbGUuY2ZuZXR3b3JrJBIIQmFja3N0b3A=
LimitedPeersAllowed
^LimitedPeersAllowed$
^ContinuityUnlock$
^com.apple.security.sos$
^iCloudIdentity$
^PCSiCloudBackup$
^PCSiCloudDrive$
^com.apple.safari.credit-cards$
^com.apple.cfnetwork$
^AccessoryPairing$
^WatchMigration$
SHA256:Tjdu5QrWGvKWMx7k3VWFrEWSsBDPZAwCql9ybDkvFs8=
CAQSDgoGaVBob25lEgRmdWxsEgwKBGlQYWQSBGZ1bGwSCwoDTWFjEgRmdWxsEgwKBGlNYWMSBGZ1bGwSDQoHQXBwbGVUVhICdHYSDgoFV2F0Y2gSBXdhdGNoEhcKDkF1ZGlvQWNjZXNzb3J5EgVhdWRpbxoTCgRIb21lEgRmdWxsEgV3YXRjaBobCgxBcHBsaWNhdGlvbnMSBGZ1bGwSBXdhdGNoGh4KBFdpRmkSBGZ1bGwSBXdhdGNoEgJ0dhIFYXVkaW8aGQoKQXV0b1VubG9jaxIEZnVsbBIFd2F0Y2gaFwoIQXBwbGVQYXkSBGZ1bGwSBXdhdGNoGhUKBkhlYWx0aBIEZnVsbBIFd2F0Y2gaFgoHTWFuYXRlZRIEZnVsbBIFd2F0Y2gaLQoTTGltaXRlZFBlZXJzQWxsb3dlZBIEZnVsbBIFd2F0Y2gSAnR2EgVhdWRpbxokChVQcm90ZWN0ZWRDbG91ZFN0b3JhZ2USBGZ1bGwSBXdhdGNoGhgKCVBhc3N3b3JkcxIEZnVsbBIFd2F0Y2gaHAoNRGV2aWNlUGFpcmluZxIEZnVsbBIFd2F0Y2gaHwoQU2VjdXJlT2JqZWN0U3luYxIEZnVsbBIFd2F0Y2gaFQoGRW5ncmFtEgRmdWxsEgV3YXRjaBoaCgtDcmVkaXRDYXJkcxIEZnVsbBIFd2F0Y2giGwoFYXVkaW8SBGZ1bGwSBXdhdGNoEgVhdWRpbyITCgRmdWxsEgRmdWxsEgV3YXRjaCIUCgV3YXRjaBIEZnVsbBIFd2F0Y2giFQoCdHYSBGZ1bGwSBXdhdGNoEgJ0djIiChYABCISAgR2d2h0CgpeQXBwbGVQYXkkEghBcHBsZVBheTImChgABCIUAgR2d2h0CgxeQXV0b1VubG9jayQSCkF1dG9VbmxvY2syHgoUAAQiEAIEdndodAoIXkVuZ3JhbSQSBkVuZ3JhbTIeChQABCIQAgR2d2h0CgheSGVhbHRoJBIGSGVhbHRoMhoKEgAEIg4CBHZ3aHQKBl5Ib21lJBIESG9tZTIgChUABCIRAgR2d2h0CgleTWFuYXRlZSQSB01hbmF0ZWUyOAohAAQiHQIEdndodAoVXkxpbWl0ZWRQZWVyc0FsbG93ZWQkEhNMaW1pdGVkUGVlcnNBbGxvd2VkMl0KUAACEh4ABCIaAgR2d2h0ChJeQ29udGludWl0eVVubG9jayQSFQAEIhECBHZ3aHQKCV5Ib21lS2l0JBIVAAQiEQIEdndodAoJXkFwcGxlVFYkEglOb3RTeW5jZWQyKwobAAQiFwIEYWdycAoPXlswLTlBLVpdezEwfVwuEgxBcHBsaWNhdGlvbnMyxQEKsAEAAhI0AAEKEwAEIg8CBWNsYXNzCgZeZ2VucCQKGwAEIhcCBGFncnAKD15jb20uYXBwbGUuc2JkJBI9AAEKEwAEIg8CBWNsYXNzCgZea2V5cyQKJAAEIiACBGFncnAKGF5jb20uYXBwbGUuc2VjdXJpdHkuc29zJBIZAAQiFQIEdndodAoNXkJhY2t1cEJhZ1YwJBIcAAQiGAIEdndodAoQXmlDbG91ZElkZW50aXR5JBIQU2VjdXJlT2JqZWN0U3luYzJjClsAAhISAAQiDgIEdndodAoGXldpRmkkEkMAAQoTAAQiDwIFY2xhc3MKBl5nZW5wJAoTAAQiDwIEYWdycAoHXmFwcGxlJAoVAAQiEQIEc3ZjZQoJXkFpclBvcnQkEgRXaUZpMucCCs0CAAISGgAEIhYCBHZ3aHQKDl5QQ1MtQ2xvdWRLaXQkEhgABCIUAgR2d2h0CgxeUENTLUVzY3JvdyQSFQAEIhECBHZ3aHQKCV5QQ1MtRkRFJBIaAAQiFgIEdndodAoOXlBDUy1GZWxkc3BhciQSGgAEIhYCBHZ3aHQKDl5QQ1MtTWFpbERyb3AkEhsABCIXAgR2d2h0Cg9eUENTLU1hc3RlcktleSQSFwAEIhMCBHZ3aHQKC15QQ1MtTm90ZXMkEhgABCIUAgR2d2h0CgxeUENTLVBob3RvcyQSGQAEIhUCBHZ3aHQKDV5QQ1MtU2hhcmluZyQSHgAEIhoCBHZ3aHQKEl5QQ1MtaUNsb3VkQmFja3VwJBIdAAQiGQIEdndodAoRXlBDUy1pQ2xvdWREcml2ZSQSGgAEIhYCBHZ3aHQKDl5QQ1MtaU1lc3NhZ2UkEhVQcm90ZWN0ZWRDbG91ZFN0b3JhZ2UyOgorAAQiJwIEYWdycAofXmNvbS5hcHBsZS5zYWZhcmkuY3JlZGl0LWNhcmRzJBILQ3JlZGl0Q2FyZHMyLgohAAQiHQIEYWdycAoVXmNvbS5hcHBsZS5jZm5ldHdvcmskEglQYXNzd29yZHMybQpcAAISHgAEIhoCBHZ3aHQKEl5BY2Nlc3NvcnlQYWlyaW5nJBIaAAQiFgIEdndodAoOXk5hbm9SZWdpc3RyeSQSHAAEIhgCBHZ3aHQKEF5XYXRjaE1pZ3JhdGlvbiQSDURldmljZVBhaXJpbmc=
^PCS-iCloudBackup$
^PCS-iCloudDrive$
CAUSDgoGaVBob25lEgRmdWxsEgwKBGlQYWQSBGZ1bGwSDAoEaVBvZBIEZnVsbBILCgNNYWMSBGZ1bGwSDAoEaU1hYxIEZnVsbBINCgdBcHBsZVRWEgJ0dhIOCgVXYXRjaBIFd2F0Y2gSFwoOQXVkaW9BY2Nlc3NvcnkSBWF1ZGlvGhsKDEFwcGxpY2F0aW9ucxIEZnVsbBIFd2F0Y2gaHwoQU2VjdXJlT2JqZWN0U3luYxIEZnVsbBIFd2F0Y2gaHAoNRGV2aWNlUGFpcmluZxIEZnVsbBIFd2F0Y2gaGgoLQ3JlZGl0Q2FyZHMSBGZ1bGwSBXdhdGNoGhUKBkhlYWx0aBIEZnVsbBIFd2F0Y2gaLQoTTGltaXRlZFBlZXJzQWxsb3dlZBIEZnVsbBIFd2F0Y2gSAnR2EgVhdWRpbxokChVQcm90ZWN0ZWRDbG91ZFN0b3JhZ2USBGZ1bGwSBXdhdGNoGhcKCEFwcGxlUGF5EgRmdWxsEgV3YXRjaBoZCgpBdXRvVW5sb2NrEgRmdWxsEgV3YXRjaBoWCgdNYW5hdGVlEgRmdWxsEgV3YXRjaBoYCglQYXNzd29yZHMSBGZ1bGwSBXdhdGNoGhUKBkVuZ3JhbRIEZnVsbBIFd2F0Y2gaHgoEV2lGaRIEZnVsbBIFd2F0Y2gSAnR2EgVhdWRpbxoTCgRIb21lEgRmdWxsEgV3YXRjaCIbCgVhdWRpbxIEZnVsbBIFd2F0Y2gSBWF1ZGlvIhMKBGZ1bGwSBGZ1bGwSBXdhdGNoIhUKAnR2EgRmdWxsEgV3YXRjaBICdHYiFAoFd2F0Y2gSBGZ1bGwSBXdhdGNoMiIKFgAEIhICBHZ3aHQKCl5BcHBsZVBheSQSCEFwcGxlUGF5MiYKGAAEIhQCBHZ3aHQKDF5BdXRvVW5sb2NrJBIKQXV0b1VubG9jazIeChQABCIQAgR2d2h0CgheRW5ncmFtJBIGRW5ncmFtMh4KFAAEIhACBHZ3aHQKCF5IZWFsdGgkEgZIZWFsdGgyGgoSAAQiDgIEdndodAoGXkhvbWUkEgRIb21lMiAKFQAEIhECBHZ3aHQKCV5NYW5hdGVlJBIHTWFuYXRlZTI4CiEABCIdAgR2d2h0ChVeTGltaXRlZFBlZXJzQWxsb3dlZCQSE0xpbWl0ZWRQZWVyc0FsbG93ZWQyXQpQAAISHgAEIhoCBHZ3aHQKEl5Db250aW51aXR5VW5sb2NrJBIVAAQiEQIEdndodAoJXkhvbWVLaXQkEhUABCIRAgR2d2h0CgleQXBwbGVUViQSCU5vdFN5bmNlZDIrChsABCIXAgRhZ3JwCg9eWzAtOUEtWl17MTB9XC4SDEFwcGxpY2F0aW9uczLFAQqwAQACEjQAAQoTAAQiDwIFY2xhc3MKBl5nZW5wJAobAAQiFwIEYWdycAoPXmNvbS5hcHBsZS5zYmQkEj0AAQoTAAQiDwIFY2xhc3MKBl5rZXlzJAokAAQiIAIEYWdycAoYXmNvbS5hcHBsZS5zZWN1cml0eS5zb3MkEhkABCIVAgR2d2h0Cg1eQmFja3VwQmFnVjAkEhwABCIYAgR2d2h0ChBeaUNsb3VkSWRlbnRpdHkkEhBTZWN1cmVPYmplY3RTeW5jMmMKWwACEhIABCIOAgR2d2h0CgZeV2lGaSQSQwABChMABCIPAgVjbGFzcwoGXmdlbnAkChMABCIPAgRhZ3JwCgdeYXBwbGUkChUABCIRAgRzdmNlCgleQWlyUG9ydCQSBFdpRmkynQMKgwMAAhIYAAQiFAIEdndodAoMXlBDUy1CYWNrdXAkEhoABCIWAgR2d2h0Cg5eUENTLUNsb3VkS2l0JBIYAAQiFAIEdndodAoMXlBDUy1Fc2Nyb3ckEhUABCIRAgR2d2h0CgleUENTLUZERSQSGgAEIhYCBHZ3aHQKDl5QQ1MtRmVsZHNwYXIkEhoABCIWAgR2d2h0Cg5eUENTLU1haWxEcm9wJBIaAAQiFgIEdndodAoOXlBDUy1NYWlsZHJvcCQSGwAEIhcCBHZ3aHQKD15QQ1MtTWFzdGVyS2V5JBIXAAQiEwIEdndodAoLXlBDUy1Ob3RlcyQSGAAEIhQCBHZ3aHQKDF5QQ1MtUGhvdG9zJBIZAAQiFQIEdndodAoNXlBDUy1TaGFyaW5nJBIeAAQiGgIEdndodAoSXlBDUy1pQ2xvdWRCYWNrdXAkEh0ABCIZAgR2d2h0ChFeUENTLWlDbG91ZERyaXZlJBIaAAQiFgIEdndodAoOXlBDUy1pTWVzc2FnZSQSFVByb3RlY3RlZENsb3VkU3RvcmFnZTI6CisABCInAgRhZ3JwCh9eY29tLmFwcGxlLnNhZmFyaS5jcmVkaXQtY2FyZHMkEgtDcmVkaXRDYXJkczIuCiEABCIdAgRhZ3JwChVeY29tLmFwcGxlLmNmbmV0d29yayQSCVBhc3N3b3JkczJtClwAAhIeAAQiGgIEdndodAoSXkFjY2Vzc29yeVBhaXJpbmckEhoABCIWAgR2d2h0Cg5eTmFub1JlZ2lzdHJ5JBIcAAQiGAIEdndodAoQXldhdGNoTWlncmF0aW9uJBINRGV2aWNlUGFpcmluZzIOCgIABhIIQmFja3N0b3A=
SHA256:L2Px1aYyR1tgChe8dIyTBSmCHCWEFJirZ3ELMFXz2PY=
CAYSDgoGaVBob25lEgRmdWxsEgwKBGlQYWQSBGZ1bGwSDAoEaVBvZBIEZnVsbBILCgNNYWMSBGZ1bGwSDAoEaU1hYxIEZnVsbBINCgdBcHBsZVRWEgJ0dhIOCgVXYXRjaBIFd2F0Y2gSFwoOQXVkaW9BY2Nlc3NvcnkSBWF1ZGlvGhoKC0NyZWRpdENhcmRzEgRmdWxsEgV3YXRjaBofChBTZWN1cmVPYmplY3RTeW5jEgRmdWxsEgV3YXRjaBoVCgZIZWFsdGgSBGZ1bGwSBXdhdGNoGhkKCkF1dG9VbmxvY2sSBGZ1bGwSBXdhdGNoGh4KBFdpRmkSBGZ1bGwSBXdhdGNoEgJ0dhIFYXVkaW8aHgoESG9tZRIEZnVsbBIFd2F0Y2gSAnR2EgVhdWRpbxokChVQcm90ZWN0ZWRDbG91ZFN0b3JhZ2USBGZ1bGwSBXdhdGNoGi0KE0xpbWl0ZWRQZWVyc0FsbG93ZWQSBGZ1bGwSBXdhdGNoEgJ0dhIFYXVkaW8aGAoJUGFzc3dvcmRzEgRmdWxsEgV3YXRjaBobCgxBcHBsaWNhdGlvbnMSBGZ1bGwSBXdhdGNoGhwKDURldmljZVBhaXJpbmcSBGZ1bGwSBXdhdGNoGhcKCEFwcGxlUGF5EgRmdWxsEgV3YXRjaBoWCgdNYW5hdGVlEgRmdWxsEgV3YXRjaBoVCgZFbmdyYW0SBGZ1bGwSBXdhdGNoIhsKBWF1ZGlvEgRmdWxsEgV3YXRjaBIFYXVkaW8iFQoCdHYSBGZ1bGwSBXdhdGNoEgJ0diIUCgV3YXRjaBIEZnVsbBIFd2F0Y2giEwoEZnVsbBIEZnVsbBIFd2F0Y2gyIgoWAAQiEgIEdndodAoKXkFwcGxlUGF5JBIIQXBwbGVQYXkyJgoYAAQiFAIEdndodAoMXkF1dG9VbmxvY2skEgpBdXRvVW5sb2NrMh4KFAAEIhACBHZ3aHQKCF5FbmdyYW0kEgZFbmdyYW0yHgoUAAQiEAIEdndodAoIXkhlYWx0aCQSBkhlYWx0aDIaChIABCIOAgR2d2h0CgZeSG9tZSQSBEhvbWUyIAoVAAQiEQIEdndodAoJXk1hbmF0ZWUkEgdNYW5hdGVlMjgKIQAEIh0CBHZ3aHQKFV5MaW1pdGVkUGVlcnNBbGxvd2VkJBITTGltaXRlZFBlZXJzQWxsb3dlZDJdClAAAhIeAAQiGgIEdndodAoSXkNvbnRpbnVpdHlVbmxvY2skEhUABCIRAgR2d2h0CgleSG9tZUtpdCQSFQAEIhECBHZ3aHQKCV5BcHBsZVRWJBIJTm90U3luY2VkMisKGwAEIhcCBGFncnAKD15bMC05QS1aXXsxMH1cLhIMQXBwbGljYXRpb25zMsoBCrUBAAISNgABChMABCIPAgVjbGFzcwoGXmdlbnAkCh0ABCIZAgRhZ3JwChFeY29tXC5hcHBsZVwuc2JkJBJAAAEKEwAEIg8CBWNsYXNzCgZea2V5cyQKJwAEIiMCBGFncnAKG15jb21cLmFwcGxlXC5zZWN1cml0eVwuc29zJBIZAAQiFQIEdndodAoNXkJhY2t1cEJhZ1YwJBIcAAQiGAIEdndodAoQXmlDbG91ZElkZW50aXR5JBIQU2VjdXJlT2JqZWN0U3luYzJjClsAAhISAAQiDgIEdndodAoGXldpRmkkEkMAAQoTAAQiDwIFY2xhc3MKBl5nZW5wJAoTAAQiDwIEYWdycAoHXmFwcGxlJAoVAAQiEQIEc3ZjZQoJXkFpclBvcnQkEgRXaUZpMp0DCoMDAAISGAAEIhQCBHZ3aHQKDF5QQ1MtQmFja3VwJBIaAAQiFgIEdndodAoOXlBDUy1DbG91ZEtpdCQSGAAEIhQCBHZ3aHQKDF5QQ1MtRXNjcm93JBIVAAQiEQIEdndodAoJXlBDUy1GREUkEhoABCIWAgR2d2h0Cg5eUENTLUZlbGRzcGFyJBIaAAQiFgIEdndodAoOXlBDUy1NYWlsRHJvcCQSGgAEIhYCBHZ3aHQKDl5QQ1MtTWFpbGRyb3AkEhsABCIXAgR2d2h0Cg9eUENTLU1hc3RlcktleSQSFwAEIhMCBHZ3aHQKC15QQ1MtTm90ZXMkEhgABCIUAgR2d2h0CgxeUENTLVBob3RvcyQSGQAEIhUCBHZ3aHQKDV5QQ1MtU2hhcmluZyQSHgAEIhoCBHZ3aHQKEl5QQ1MtaUNsb3VkQmFja3VwJBIdAAQiGQIEdndodAoRXlBDUy1pQ2xvdWREcml2ZSQSGgAEIhYCBHZ3aHQKDl5QQ1MtaU1lc3NhZ2UkEhVQcm90ZWN0ZWRDbG91ZFN0b3JhZ2UyPQouAAQiKgIEYWdycAoiXmNvbVwuYXBwbGVcLnNhZmFyaVwuY3JlZGl0LWNhcmRzJBILQ3JlZGl0Q2FyZHMyMAojAAQiHwIEYWdycAoXXmNvbVwuYXBwbGVcLmNmbmV0d29yayQSCVBhc3N3b3JkczJtClwAAhIeAAQiGgIEdndodAoSXkFjY2Vzc29yeVBhaXJpbmckEhoABCIWAgR2d2h0Cg5eTmFub1JlZ2lzdHJ5JBIcAAQiGAIEdndodAoQXldhdGNoTWlncmF0aW9uJBINRGV2aWNlUGFpcmluZzIOCgIABhIIQmFja3N0b3A=
^com\.apple\.sbd$
^com\.apple\.security\.sos$
^com\.apple\.safari\.credit-cards$
^com\.apple\.cfnetwork$
SHA256:dL8Qujqzprhp6FdH5GzNMtPlnZtLWMwfiiF7aykr8WU=
CAcSDgoGaVBob25lEgRmdWxsEgwKBGlQYWQSBGZ1bGwSDAoEaVBvZBIEZnVsbBILCgNNYWMSBGZ1bGwSDAoEaU1hYxIEZnVsbBINCgdBcHBsZVRWEgJ0dhIOCgVXYXRjaBIFd2F0Y2gSFwoOQXVkaW9BY2Nlc3NvcnkSBWF1ZGlvGh4KBEhvbWUSBGZ1bGwSBXdhdGNoEgJ0dhIFYXVkaW8aJAoVUHJvdGVjdGVkQ2xvdWRTdG9yYWdlEgRmdWxsEgV3YXRjaBoYCglQYXNzd29yZHMSBGZ1bGwSBXdhdGNoGh8KEFNlY3VyZU9iamVjdFN5bmMSBGZ1bGwSBXdhdGNoGh4KBFdpRmkSBGZ1bGwSBXdhdGNoEgJ0dhIFYXVkaW8aGgoLQ3JlZGl0Q2FyZHMSBGZ1bGwSBXdhdGNoGhcKCEFwcGxlUGF5EgRmdWxsEgV3YXRjaBoVCgZIZWFsdGgSBGZ1bGwSBXdhdGNoGhkKCkF1dG9VbmxvY2sSBGZ1bGwSBXdhdGNoGi0KE0xpbWl0ZWRQZWVyc0FsbG93ZWQSBGZ1bGwSBXdhdGNoEgJ0dhIFYXVkaW8aHAoNRGV2aWNlUGFpcmluZxIEZnVsbBIFd2F0Y2gaFgoHTWFuYXRlZRIEZnVsbBIFd2F0Y2gaFQoGRW5ncmFtEgRmdWxsEgV3YXRjaBoXCghCYWNrc3RvcBIEZnVsbBIFd2F0Y2gaGwoMQXBwbGljYXRpb25zEgRmdWxsEgV3YXRjaCITCgRmdWxsEgRmdWxsEgV3YXRjaCIVCgJ0dhIEZnVsbBIFd2F0Y2gSAnR2IhQKBXdhdGNoEgRmdWxsEgV3YXRjaCIbCgVhdWRpbxIEZnVsbBIFd2F0Y2gSBWF1ZGlvMiIKFgAEIhICBHZ3aHQKCl5BcHBsZVBheSQSCEFwcGxlUGF5MiYKGAAEIhQCBHZ3aHQKDF5BdXRvVW5sb2NrJBIKQXV0b1VubG9jazIeChQABCIQAgR2d2h0CgheRW5ncmFtJBIGRW5ncmFtMh4KFAAEIhACBHZ3aHQKCF5IZWFsdGgkEgZIZWFsdGgyGgoSAAQiDgIEdndodAoGXkhvbWUkEgRIb21lMiAKFQAEIhECBHZ3aHQKCV5NYW5hdGVlJBIHTWFuYXRlZTI4CiEABCIdAgR2d2h0ChVeTGltaXRlZFBlZXJzQWxsb3dlZCQSE0xpbWl0ZWRQZWVyc0FsbG93ZWQyXQpQAAISHgAEIhoCBHZ3aHQKEl5Db250aW51aXR5VW5sb2NrJBIVAAQiEQIEdndodAoJXkhvbWVLaXQkEhUABCIRAgR2d2h0CgleQXBwbGVUViQSCU5vdFN5bmNlZDIrChsABCIXAgRhZ3JwCg9eWzAtOUEtWl17MTB9XC4SDEFwcGxpY2F0aW9uczLKAQq1AQACEjYAAQoTAAQiDwIFY2xhc3MKBl5nZW5wJAodAAQiGQIEYWdycAoRXmNvbVwuYXBwbGVcLnNiZCQSQAABChMABCIPAgVjbGFzcwoGXmtleXMkCicABCIjAgRhZ3JwChteY29tXC5hcHBsZVwuc2VjdXJpdHlcLnNvcyQSGQAEIhUCBHZ3aHQKDV5CYWNrdXBCYWdWMCQSHAAEIhgCBHZ3aHQKEF5pQ2xvdWRJZGVudGl0eSQSEFNlY3VyZU9iamVjdFN5bmMyYwpbAAISEgAEIg4CBHZ3aHQKBl5XaUZpJBJDAAEKEwAEIg8CBWNsYXNzCgZeZ2VucCQKEwAEIg8CBGFncnAKB15hcHBsZSQKFQAEIhECBHN2Y2UKCV5BaXJQb3J0JBIEV2lGaTKdAwqDAwACEhgABCIUAgR2d2h0CgxeUENTLUJhY2t1cCQSGgAEIhYCBHZ3aHQKDl5QQ1MtQ2xvdWRLaXQkEhgABCIUAgR2d2h0CgxeUENTLUVzY3JvdyQSFQAEIhECBHZ3aHQKCV5QQ1MtRkRFJBIaAAQiFgIEdndodAoOXlBDUy1GZWxkc3BhciQSGgAEIhYCBHZ3aHQKDl5QQ1MtTWFpbERyb3AkEhoABCIWAgR2d2h0Cg5eUENTLU1haWxkcm9wJBIbAAQiFwIEdndodAoPXlBDUy1NYXN0ZXJLZXkkEhcABCITAgR2d2h0CgteUENTLU5vdGVzJBIYAAQiFAIEdndodAoMXlBDUy1QaG90b3MkEhkABCIVAgR2d2h0Cg1eUENTLVNoYXJpbmckEh4ABCIaAgR2d2h0ChJeUENTLWlDbG91ZEJhY2t1cCQSHQAEIhkCBHZ3aHQKEV5QQ1MtaUNsb3VkRHJpdmUkEhoABCIWAgR2d2h0Cg5eUENTLWlNZXNzYWdlJBIVUHJvdGVjdGVkQ2xvdWRTdG9yYWdlMj0KLgAEIioCBGFncnAKIl5jb21cLmFwcGxlXC5zYWZhcmlcLmNyZWRpdC1jYXJkcyQSC0NyZWRpdENhcmRzMjAKIwAEIh8CBGFncnAKF15jb21cLmFwcGxlXC5jZm5ldHdvcmskEglQYXNzd29yZHMybQpcAAISHgAEIhoCBHZ3aHQKEl5BY2Nlc3NvcnlQYWlyaW5nJBIaAAQiFgIEdndodAoOXk5hbm9SZWdpc3RyeSQSHAAEIhgCBHZ3aHQKEF5XYXRjaE1pZ3JhdGlvbiQSDURldmljZVBhaXJpbmcyDgoCAAYSCEJhY2tzdG9w
SHA256:TeQdvkO5GhKk6ayq004RlKDspusM8keCq3sXvKlmp7g=
CAgSDgoGaVBob25lEgRmdWxsEgwKBGlQYWQSBGZ1bGwSDAoEaVBvZBIEZnVsbBILCgNNYWMSBGZ1bGwSDAoEaU1hYxIEZnVsbBINCgdBcHBsZVRWEgJ0dhIOCgVXYXRjaBIFd2F0Y2gSFwoOQXVkaW9BY2Nlc3NvcnkSBWF1ZGlvGhsKDEFwcGxpY2F0aW9ucxIEZnVsbBIFd2F0Y2gaLwoVUHJvdGVjdGVkQ2xvdWRTdG9yYWdlEgRmdWxsEgV3YXRjaBICdHYSBWF1ZGlvGhgKCVBhc3N3b3JkcxIEZnVsbBIFd2F0Y2gaFwoIQmFja3N0b3ASBGZ1bGwSBXdhdGNoGh4KBFdpRmkSBGZ1bGwSBXdhdGNoEgJ0dhIFYXVkaW8aHwoQU2VjdXJlT2JqZWN0U3luYxIEZnVsbBIFd2F0Y2gaFwoIQXBwbGVQYXkSBGZ1bGwSBXdhdGNoGhUKBkhlYWx0aBIEZnVsbBIFd2F0Y2gaGQoKQXV0b1VubG9jaxIEZnVsbBIFd2F0Y2gaLQoTTGltaXRlZFBlZXJzQWxsb3dlZBIEZnVsbBIFd2F0Y2gSAnR2EgVhdWRpbxocCg1EZXZpY2VQYWlyaW5nEgRmdWxsEgV3YXRjaBoWCgdNYW5hdGVlEgRmdWxsEgV3YXRjaBoVCgZFbmdyYW0SBGZ1bGwSBXdhdGNoGh4KBEhvbWUSBGZ1bGwSBXdhdGNoEgJ0dhIFYXVkaW8aGgoLQ3JlZGl0Q2FyZHMSBGZ1bGwSBXdhdGNoIhMKBGZ1bGwSBGZ1bGwSBXdhdGNoIhQKBXdhdGNoEgRmdWxsEgV3YXRjaCIbCgVhdWRpbxIEZnVsbBIFd2F0Y2gSBWF1ZGlvIhUKAnR2EgRmdWxsEgV3YXRjaBICdHYyIgoWAAQiEgIEdndodAoKXkFwcGxlUGF5JBIIQXBwbGVQYXkyJgoYAAQiFAIEdndodAoMXkF1dG9VbmxvY2skEgpBdXRvVW5sb2NrMh4KFAAEIhACBHZ3aHQKCF5FbmdyYW0kEgZFbmdyYW0yHgoUAAQiEAIEdndodAoIXkhlYWx0aCQSBkhlYWx0aDIaChIABCIOAgR2d2h0CgZeSG9tZSQSBEhvbWUyIAoVAAQiEQIEdndodAoJXk1hbmF0ZWUkEgdNYW5hdGVlMjgKIQAEIh0CBHZ3aHQKFV5MaW1pdGVkUGVlcnNBbGxvd2VkJBITTGltaXRlZFBlZXJzQWxsb3dlZDJdClAAAhIeAAQiGgIEdndodAoSXkNvbnRpbnVpdHlVbmxvY2skEhUABCIRAgR2d2h0CgleSG9tZUtpdCQSFQAEIhECBHZ3aHQKCV5BcHBsZVRWJBIJTm90U3luY2VkMisKGwAEIhcCBGFncnAKD15bMC05QS1aXXsxMH1cLhIMQXBwbGljYXRpb25zMsoBCrUBAAISNgABChMABCIPAgVjbGFzcwoGXmdlbnAkCh0ABCIZAgRhZ3JwChFeY29tXC5hcHBsZVwuc2JkJBJAAAEKEwAEIg8CBWNsYXNzCgZea2V5cyQKJwAEIiMCBGFncnAKG15jb21cLmFwcGxlXC5zZWN1cml0eVwuc29zJBIZAAQiFQIEdndodAoNXkJhY2t1cEJhZ1YwJBIcAAQiGAIEdndodAoQXmlDbG91ZElkZW50aXR5JBIQU2VjdXJlT2JqZWN0U3luYzJjClsAAhISAAQiDgIEdndodAoGXldpRmkkEkMAAQoTAAQiDwIFY2xhc3MKBl5nZW5wJAoTAAQiDwIEYWdycAoHXmFwcGxlJAoVAAQiEQIEc3ZjZQoJXkFpclBvcnQkEgRXaUZpMp0DCoMDAAISGAAEIhQCBHZ3aHQKDF5QQ1MtQmFja3VwJBIaAAQiFgIEdndodAoOXlBDUy1DbG91ZEtpdCQSGAAEIhQCBHZ3aHQKDF5QQ1MtRXNjcm93JBIVAAQiEQIEdndodAoJXlBDUy1GREUkEhoABCIWAgR2d2h0Cg5eUENTLUZlbGRzcGFyJBIaAAQiFgIEdndodAoOXlBDUy1NYWlsRHJvcCQSGgAEIhYCBHZ3aHQKDl5QQ1MtTWFpbGRyb3AkEhsABCIXAgR2d2h0Cg9eUENTLU1hc3RlcktleSQSFwAEIhMCBHZ3aHQKC15QQ1MtTm90ZXMkEhgABCIUAgR2d2h0CgxeUENTLVBob3RvcyQSGQAEIhUCBHZ3aHQKDV5QQ1MtU2hhcmluZyQSHgAEIhoCBHZ3aHQKEl5QQ1MtaUNsb3VkQmFja3VwJBIdAAQiGQIEdndodAoRXlBDUy1pQ2xvdWREcml2ZSQSGgAEIhYCBHZ3aHQKDl5QQ1MtaU1lc3NhZ2UkEhVQcm90ZWN0ZWRDbG91ZFN0b3JhZ2UyXApNAAISLgAEIioCBGFncnAKIl5jb21cLmFwcGxlXC5zYWZhcmlcLmNyZWRpdC1jYXJkcyQSGQAEIhUCBHZ3aHQKDV5DcmVkaXRDYXJkcyQSC0NyZWRpdENhcmRzMqYBCpgBAAISIwAEIh8CBGFncnAKF15jb21cLmFwcGxlXC5jZm5ldHdvcmskEioABCImAgRhZ3JwCh5eY29tXC5hcHBsZVwucGFzc3dvcmQtbWFuYWdlciQSKgAEIiYCBGFncnAKHl5jb21cLmFwcGxlXC5XZWJLaXRcLldlYkF1dGhuJBIXAAQiEwIEdndodAoLXlBhc3N3b3JkcyQSCVBhc3N3b3JkczJtClwAAhIeAAQiGgIEdndodAoSXkFjY2Vzc29yeVBhaXJpbmckEhoABCIWAgR2d2h0Cg5eTmFub1JlZ2lzdHJ5JBIcAAQiGAIEdndodAoQXldhdGNoTWlncmF0aW9uJBINRGV2aWNlUGFpcmluZzIOCgIABhIIQmFja3N0b3A6DEFwcGxpY2F0aW9uczoIQmFja3N0b3A6C0NyZWRpdENhcmRzOglQYXNzd29yZHM6BFdpRmlCCVBhc3N3b3Jkcw==
^com\.apple\.password-manager$
^com\.apple\.WebKit\.WebAuthn$
SHA256:uynvb6IWdFbCM2AQX0aKv0yUMLg8Z2wZjZY5k4jtAj8=
CAkSDgoGaVBob25lEgRmdWxsEgwKBGlQYWQSBGZ1bGwSDAoEaVBvZBIEZnVsbBILCgNNYWMSBGZ1bGwSDAoEaU1hYxIEZnVsbBINCgdBcHBsZVRWEgJ0dhIOCgVXYXRjaBIFd2F0Y2gSFwoOQXVkaW9BY2Nlc3NvcnkSBWF1ZGlvGh4KBEhvbWUSBGZ1bGwSBXdhdGNoEgJ0dhIFYXVkaW8aLwoVUHJvdGVjdGVkQ2xvdWRTdG9yYWdlEgRmdWxsEgV3YXRjaBICdHYSBWF1ZGlvGhgKCVBhc3N3b3JkcxIEZnVsbBIFd2F0Y2gaHwoQU2VjdXJlT2JqZWN0U3luYxIEZnVsbBIFd2F0Y2gaHgoEV2lGaRIEZnVsbBIFd2F0Y2gSAnR2EgVhdWRpbxobCgxBcHBsaWNhdGlvbnMSBGZ1bGwSBXdhdGNoGhcKCEFwcGxlUGF5EgRmdWxsEgV3YXRjaBoVCgZIZWFsdGgSBGZ1bGwSBXdhdGNoGhkKCkF1dG9VbmxvY2sSBGZ1bGwSBXdhdGNoGi0KE0xpbWl0ZWRQZWVyc0FsbG93ZWQSBGZ1bGwSBXdhdGNoEgJ0dhIFYXVkaW8aHAoNRGV2aWNlUGFpcmluZxIEZnVsbBIFd2F0Y2gaFgoHTWFuYXRlZRIEZnVsbBIFd2F0Y2gaFQoGRW5ncmFtEgRmdWxsEgV3YXRjaBoXCghCYWNrc3RvcBIEZnVsbBIFd2F0Y2gaGgoLQ3JlZGl0Q2FyZHMSBGZ1bGwSBXdhdGNoIhMKBGZ1bGwSBGZ1bGwSBXdhdGNoIhsKBWF1ZGlvEgRmdWxsEgV3YXRjaBIFYXVkaW8iFQoCdHYSBGZ1bGwSBXdhdGNoEgJ0diIUCgV3YXRjaBIEZnVsbBIFd2F0Y2gyIgoWAAQiEgIEdndodAoKXkFwcGxlUGF5JBIIQXBwbGVQYXkyJgoYAAQiFAIEdndodAoMXkF1dG9VbmxvY2skEgpBdXRvVW5sb2NrMh4KFAAEIhACBHZ3aHQKCF5FbmdyYW0kEgZFbmdyYW0yHgoUAAQiEAIEdndodAoIXkhlYWx0aCQSBkhlYWx0aDIaChIABCIOAgR2d2h0CgZeSG9tZSQSBEhvbWUyIAoVAAQiEQIEdndodAoJXk1hbmF0ZWUkEgdNYW5hdGVlMjgKIQAEIh0CBHZ3aHQKFV5MaW1pdGVkUGVlcnNBbGxvd2VkJBITTGltaXRlZFBlZXJzQWxsb3dlZDJdClAAAhIeAAQiGgIEdndodAoSXkNvbnRpbnVpdHlVbmxvY2skEhUABCIRAgR2d2h0CgleSG9tZUtpdCQSFQAEIhECBHZ3aHQKCV5BcHBsZVRWJBIJTm90U3luY2VkMisKGwAEIhcCBGFncnAKD15bMC05QS1aXXsxMH1cLhIMQXBwbGljYXRpb25zMsoBCrUBAAISNgABChMABCIPAgVjbGFzcwoGXmdlbnAkCh0ABCIZAgRhZ3JwChFeY29tXC5hcHBsZVwuc2JkJBJAAAEKEwAEIg8CBWNsYXNzCgZea2V5cyQKJwAEIiMCBGFncnAKG15jb21cLmFwcGxlXC5zZWN1cml0eVwuc29zJBIZAAQiFQIEdndodAoNXkJhY2t1cEJhZ1YwJBIcAAQiGAIEdndodAoQXmlDbG91ZElkZW50aXR5JBIQU2VjdXJlT2JqZWN0U3luYzJjClsAAhISAAQiDgIEdndodAoGXldpRmkkEkMAAQoTAAQiDwIFY2xhc3MKBl5nZW5wJAoTAAQiDwIEYWdycAoHXmFwcGxlJAoVAAQiEQIEc3ZjZQoJXkFpclBvcnQkEgRXaUZpMp0DCoMDAAISGAAEIhQCBHZ3aHQKDF5QQ1MtQmFja3VwJBIaAAQiFgIEdndodAoOXlBDUy1DbG91ZEtpdCQSGAAEIhQCBHZ3aHQKDF5QQ1MtRXNjcm93JBIVAAQiEQIEdndodAoJXlBDUy1GREUkEhoABCIWAgR2d2h0Cg5eUENTLUZlbGRzcGFyJBIaAAQiFgIEdndodAoOXlBDUy1NYWlsRHJvcCQSGgAEIhYCBHZ3aHQKDl5QQ1MtTWFpbGRyb3AkEhsABCIXAgR2d2h0Cg9eUENTLU1hc3RlcktleSQSFwAEIhMCBHZ3aHQKC15QQ1MtTm90ZXMkEhgABCIUAgR2d2h0CgxeUENTLVBob3RvcyQSGQAEIhUCBHZ3aHQKDV5QQ1MtU2hhcmluZyQSHgAEIhoCBHZ3aHQKEl5QQ1MtaUNsb3VkQmFja3VwJBIdAAQiGQIEdndodAoRXlBDUy1pQ2xvdWREcml2ZSQSGgAEIhYCBHZ3aHQKDl5QQ1MtaU1lc3NhZ2UkEhVQcm90ZWN0ZWRDbG91ZFN0b3JhZ2UyXApNAAISLgAEIioCBGFncnAKIl5jb21cLmFwcGxlXC5zYWZhcmlcLmNyZWRpdC1jYXJkcyQSGQAEIhUCBHZ3aHQKDV5DcmVkaXRDYXJkcyQSC0NyZWRpdENhcmRzMtIBCsQBAAISIwAEIh8CBGFncnAKF15jb21cLmFwcGxlXC5jZm5ldHdvcmskEioABCImAgRhZ3JwCh5eY29tXC5hcHBsZVwucGFzc3dvcmQtbWFuYWdlciQSKgAEIiYCBGFncnAKHl5jb21cLmFwcGxlXC5XZWJLaXRcLldlYkF1dGhuJBIqAAQiJgIEYWdycAoeXmNvbVwuYXBwbGVcLndlYmtpdFwud2ViYXV0aG4kEhcABCITAgR2d2h0CgteUGFzc3dvcmRzJBIJUGFzc3dvcmRzMm0KXAACEh4ABCIaAgR2d2h0ChJeQWNjZXNzb3J5UGFpcmluZyQSGgAEIhYCBHZ3aHQKDl5OYW5vUmVnaXN0cnkkEhwABCIYAgR2d2h0ChBeV2F0Y2hNaWdyYXRpb24kEg1EZXZpY2VQYWlyaW5nMg4KAgAGEghCYWNrc3RvcDoMQXBwbGljYXRpb25zOghCYWNrc3RvcDoLQ3JlZGl0Q2FyZHM6CVBhc3N3b3JkczoEV2lGaUIJUGFzc3dvcmRzShVQcm90ZWN0ZWRDbG91ZFN0b3JhZ2VKEFNlY3VyZU9iamVjdFN5bmM=
^com\.apple\.webkit\.webauthn$
SHA256:KOpJ0KvNFWPNJpDTVQwRRP30fm3zhvDQznROVmAKtJY=
CAoSDgoGaVBob25lEgRmdWxsEgwKBGlQYWQSBGZ1bGwSDAoEaVBvZBIEZnVsbBILCgNNYWMSBGZ1bGwSDAoEaU1hYxIEZnVsbBINCgdBcHBsZVRWEgJ0dhIOCgVXYXRjaBIFd2F0Y2gSFwoOQXVkaW9BY2Nlc3NvcnkSBWF1ZGlvEhAKBVdpblBDEgd3aW5kb3dzGhsKDEFwcGxpY2F0aW9ucxIEZnVsbBIFd2F0Y2gaOAoVUHJvdGVjdGVkQ2xvdWRTdG9yYWdlEgd3aW5kb3dzEgRmdWxsEgV3YXRjaBICdHYSBWF1ZGlvGiEKCVBhc3N3b3JkcxIEZnVsbBIFd2F0Y2gSB3dpbmRvd3MaHwoQU2VjdXJlT2JqZWN0U3luYxIEZnVsbBIFd2F0Y2gaHgoEV2lGaRIEZnVsbBIFd2F0Y2gSAnR2EgVhdWRpbxoXCghCYWNrc3RvcBIEZnVsbBIFd2F0Y2gaFwoIQXBwbGVQYXkSBGZ1bGwSBXdhdGNoGhkKCkF1dG9VbmxvY2sSBGZ1bGwSBXdhdGNoGhUKBkhlYWx0aBIEZnVsbBIFd2F0Y2gaNgoTTGltaXRlZFBlZXJzQWxsb3dlZBIHd2luZG93cxIEZnVsbBIFd2F0Y2gSAnR2EgVhdWRpbxocCg1EZXZpY2VQYWlyaW5nEgRmdWxsEgV3YXRjaBoWCgdNYW5hdGVlEgRmdWxsEgV3YXRjaBoVCgZFbmdyYW0SBGZ1bGwSBXdhdGNoGh4KBEhvbWUSBGZ1bGwSBXdhdGNoEgJ0dhIFYXVkaW8aGgoLQ3JlZGl0Q2FyZHMSBGZ1bGwSBXdhdGNoIhYKB3dpbmRvd3MSBGZ1bGwSBXdhdGNoIhMKBGZ1bGwSBGZ1bGwSBXdhdGNoIhUKAnR2EgRmdWxsEgV3YXRjaBICdHYiGwoFYXVkaW8SBGZ1bGwSBXdhdGNoEgVhdWRpbyIUCgV3YXRjaBIEZnVsbBIFd2F0Y2gyIgoWAAQiEgIEdndodAoKXkFwcGxlUGF5JBIIQXBwbGVQYXkyJgoYAAQiFAIEdndodAoMXkF1dG9VbmxvY2skEgpBdXRvVW5sb2NrMh4KFAAEIhACBHZ3aHQKCF5FbmdyYW0kEgZFbmdyYW0yHgoUAAQiEAIEdndodAoIXkhlYWx0aCQSBkhlYWx0aDIaChIABCIOAgR2d2h0CgZeSG9tZSQSBEhvbWUyIAoVAAQiEQIEdndodAoJXk1hbmF0ZWUkEgdNYW5hdGVlMjgKIQAEIh0CBHZ3aHQKFV5MaW1pdGVkUGVlcnNBbGxvd2VkJBITTGltaXRlZFBlZXJzQWxsb3dlZDJdClAAAhIeAAQiGgIEdndodAoSXkNvbnRpbnVpdHlVbmxvY2skEhUABCIRAgR2d2h0CgleSG9tZUtpdCQSFQAEIhECBHZ3aHQKCV5BcHBsZVRWJBIJTm90U3luY2VkMisKGwAEIhcCBGFncnAKD15bMC05QS1aXXsxMH1cLhIMQXBwbGljYXRpb25zMsoBCrUBAAISNgABChMABCIPAgVjbGFzcwoGXmdlbnAkCh0ABCIZAgRhZ3JwChFeY29tXC5hcHBsZVwuc2JkJBJAAAEKEwAEIg8CBWNsYXNzCgZea2V5cyQKJwAEIiMCBGFncnAKG15jb21cLmFwcGxlXC5zZWN1cml0eVwuc29zJBIZAAQiFQIEdndodAoNXkJhY2t1cEJhZ1YwJBIcAAQiGAIEdndodAoQXmlDbG91ZElkZW50aXR5JBIQU2VjdXJlT2JqZWN0U3luYzJjClsAAhISAAQiDgIEdndodAoGXldpRmkkEkMAAQoTAAQiDwIFY2xhc3MKBl5nZW5wJAoTAAQiDwIEYWdycAoHXmFwcGxlJAoVAAQiEQIEc3ZjZQoJXkFpclBvcnQkEgRXaUZpMp0DCoMDAAISGAAEIhQCBHZ3aHQKDF5QQ1MtQmFja3VwJBIaAAQiFgIEdndodAoOXlBDUy1DbG91ZEtpdCQSGAAEIhQCBHZ3aHQKDF5QQ1MtRXNjcm93JBIVAAQiEQIEdndodAoJXlBDUy1GREUkEhoABCIWAgR2d2h0Cg5eUENTLUZlbGRzcGFyJBIaAAQiFgIEdndodAoOXlBDUy1NYWlsRHJvcCQSGgAEIhYCBHZ3aHQKDl5QQ1MtTWFpbGRyb3AkEhsABCIXAgR2d2h0Cg9eUENTLU1hc3RlcktleSQSFwAEIhMCBHZ3aHQKC15QQ1MtTm90ZXMkEhgABCIUAgR2d2h0CgxeUENTLVBob3RvcyQSGQAEIhUCBHZ3aHQKDV5QQ1MtU2hhcmluZyQSHgAEIhoCBHZ3aHQKEl5QQ1MtaUNsb3VkQmFja3VwJBIdAAQiGQIEdndodAoRXlBDUy1pQ2xvdWREcml2ZSQSGgAEIhYCBHZ3aHQKDl5QQ1MtaU1lc3NhZ2UkEhVQcm90ZWN0ZWRDbG91ZFN0b3JhZ2UyXApNAAISLgAEIioCBGFncnAKIl5jb21cLmFwcGxlXC5zYWZhcmlcLmNyZWRpdC1jYXJkcyQSGQAEIhUCBHZ3aHQKDV5DcmVkaXRDYXJkcyQSC0NyZWRpdENhcmRzMtIBCsQBAAISIwAEIh8CBGFncnAKF15jb21cLmFwcGxlXC5jZm5ldHdvcmskEioABCImAgRhZ3JwCh5eY29tXC5hcHBsZVwucGFzc3dvcmQtbWFuYWdlciQSKgAEIiYCBGFncnAKHl5jb21cLmFwcGxlXC5XZWJLaXRcLldlYkF1dGhuJBIqAAQiJgIEYWdycAoeXmNvbVwuYXBwbGVcLndlYmtpdFwud2ViYXV0aG4kEhcABCITAgR2d2h0CgteUGFzc3dvcmRzJBIJUGFzc3dvcmRzMm0KXAACEh4ABCIaAgR2d2h0ChJeQWNjZXNzb3J5UGFpcmluZyQSGgAEIhYCBHZ3aHQKDl5OYW5vUmVnaXN0cnkkEhwABCIYAgR2d2h0ChBeV2F0Y2hNaWdyYXRpb24kEg1EZXZpY2VQYWlyaW5nMg4KAgAGEghCYWNrc3RvcDoMQXBwbGljYXRpb25zOghCYWNrc3RvcDoLQ3JlZGl0Q2FyZHM6CVBhc3N3b3JkczoEV2lGaUIJUGFzc3dvcmRzShVQcm90ZWN0ZWRDbG91ZFN0b3JhZ2VKEFNlY3VyZU9iamVjdFN5bmM=
SHA256:Cm1JV53DOukT+DcNYpkbTc8+rH3cAb/1Cop6Zn7PC28=
CAsSDgoGaVBob25lEgRmdWxsEgwKBGlQYWQSBGZ1bGwSDAoEaVBvZBIEZnVsbBILCgNNYWMSBGZ1bGwSDAoEaU1hYxIEZnVsbBINCgdBcHBsZVRWEgJ0dhIOCgVXYXRjaBIFd2F0Y2gSFwoOQXVkaW9BY2Nlc3NvcnkSBWF1ZGlvEhAKBVdpblBDEgd3aW5kb3dzGhsKDEFwcGxpY2F0aW9ucxIEZnVsbBIFd2F0Y2gaOAoVUHJvdGVjdGVkQ2xvdWRTdG9yYWdlEgd3aW5kb3dzEgRmdWxsEgV3YXRjaBICdHYSBWF1ZGlvGiEKCVBhc3N3b3JkcxIEZnVsbBIFd2F0Y2gSB3dpbmRvd3MaHgoESG9tZRIEZnVsbBIFd2F0Y2gSAnR2EgVhdWRpbxoeCgRXaUZpEgRmdWxsEgV3YXRjaBICdHYSBWF1ZGlvGh8KEFNlY3VyZU9iamVjdFN5bmMSBGZ1bGwSBXdhdGNoGhcKCEFwcGxlUGF5EgRmdWxsEgV3YXRjaBoZCgpBdXRvVW5sb2NrEgRmdWxsEgV3YXRjaBoVCgZIZWFsdGgSBGZ1bGwSBXdhdGNoGjYKE0xpbWl0ZWRQZWVyc0FsbG93ZWQSB3dpbmRvd3MSBGZ1bGwSBXdhdGNoEgJ0dhIFYXVkaW8aHAoNRGV2aWNlUGFpcmluZxIEZnVsbBIFd2F0Y2gaFgoHTWFuYXRlZRIEZnVsbBIFd2F0Y2gaFQoGRW5ncmFtEgRmdWxsEgV3YXRjaBoSCgNNRmkSBGZ1bGwSBXdhdGNoGhcKCEJhY2tzdG9wEgRmdWxsEgV3YXRjaBoaCgtDcmVkaXRDYXJkcxIEZnVsbBIFd2F0Y2giFgoHd2luZG93cxIEZnVsbBIFd2F0Y2giEwoEZnVsbBIEZnVsbBIFd2F0Y2giFAoFd2F0Y2gSBGZ1bGwSBXdhdGNoIhUKAnR2EgRmdWxsEgV3YXRjaBICdHYiGwoFYXVkaW8SBGZ1bGwSBXdhdGNoEgVhdWRpbzIiChYABCISAgR2d2h0CgpeQXBwbGVQYXkkEghBcHBsZVBheTImChgABCIUAgR2d2h0CgxeQXV0b1VubG9jayQSCkF1dG9VbmxvY2syHgoUAAQiEAIEdndodAoIXkVuZ3JhbSQSBkVuZ3JhbTIeChQABCIQAgR2d2h0CgheSGVhbHRoJBIGSGVhbHRoMhoKEgAEIg4CBHZ3aHQKBl5Ib21lJBIESG9tZTIgChUABCIRAgR2d2h0CgleTWFuYXRlZSQSB01hbmF0ZWUyOAohAAQiHQIEdndodAoVXkxpbWl0ZWRQZWVyc0FsbG93ZWQkEhNMaW1pdGVkUGVlcnNBbGxvd2VkMl0KUAACEh4ABCIaAgR2d2h0ChJeQ29udGludWl0eVVubG9jayQSFQAEIhECBHZ3aHQKCV5Ib21lS2l0JBIVAAQiEQIEdndodAoJXkFwcGxlVFYkEglOb3RTeW5jZWQyGAoRAAQiDQIEdndodAoFXk1GaSQSA01GaTIrChsABCIXAgRhZ3JwCg9eWzAtOUEtWl17MTB9XC4SDEFwcGxpY2F0aW9uczLKAQq1AQACEjYAAQoTAAQiDwIFY2xhc3MKBl5nZW5wJAodAAQiGQIEYWdycAoRXmNvbVwuYXBwbGVcLnNiZCQSQAABChMABCIPAgVjbGFzcwoGXmtleXMkCicABCIjAgRhZ3JwChteY29tXC5hcHBsZVwuc2VjdXJpdHlcLnNvcyQSGQAEIhUCBHZ3aHQKDV5CYWNrdXBCYWdWMCQSHAAEIhgCBHZ3aHQKEF5pQ2xvdWRJZGVudGl0eSQSEFNlY3VyZU9iamVjdFN5bmMyYwpbAAISEgAEIg4CBHZ3aHQKBl5XaUZpJBJDAAEKEwAEIg8CBWNsYXNzCgZeZ2VucCQKEwAEIg8CBGFncnAKB15hcHBsZSQKFQAEIhECBHN2Y2UKCV5BaXJQb3J0JBIEV2lGaTKdAwqDAwACEhgABCIUAgR2d2h0CgxeUENTLUJhY2t1cCQSGgAEIhYCBHZ3aHQKDl5QQ1MtQ2xvdWRLaXQkEhgABCIUAgR2d2h0CgxeUENTLUVzY3JvdyQSFQAEIhECBHZ3aHQKCV5QQ1MtRkRFJBIaAAQiFgIEdndodAoOXlBDUy1GZWxkc3BhciQSGgAEIhYCBHZ3aHQKDl5QQ1MtTWFpbERyb3AkEhoABCIWAgR2d2h0Cg5eUENTLU1haWxkcm9wJBIbAAQiFwIEdndodAoPXlBDUy1NYXN0ZXJLZXkkEhcABCITAgR2d2h0CgteUENTLU5vdGVzJBIYAAQiFAIEdndodAoMXlBDUy1QaG90b3MkEhkABCIVAgR2d2h0Cg1eUENTLVNoYXJpbmckEh4ABCIaAgR2d2h0ChJeUENTLWlDbG91ZEJhY2t1cCQSHQAEIhkCBHZ3aHQKEV5QQ1MtaUNsb3VkRHJpdmUkEhoABCIWAgR2d2h0Cg5eUENTLWlNZXNzYWdlJBIVUHJvdGVjdGVkQ2xvdWRTdG9yYWdlMlwKTQACEi4ABCIqAgRhZ3JwCiJeY29tXC5hcHBsZVwuc2FmYXJpXC5jcmVkaXQtY2FyZHMkEhkABCIVAgR2d2h0Cg1eQ3JlZGl0Q2FyZHMkEgtDcmVkaXRDYXJkczLSAQrEAQACEiMABCIfAgRhZ3JwChdeY29tXC5hcHBsZVwuY2ZuZXR3b3JrJBIqAAQiJgIEYWdycAoeXmNvbVwuYXBwbGVcLnBhc3N3b3JkLW1hbmFnZXIkEioABCImAgRhZ3JwCh5eY29tXC5hcHBsZVwuV2ViS2l0XC5XZWJBdXRobiQSKgAEIiYCBGFncnAKHl5jb21cLmFwcGxlXC53ZWJraXRcLndlYmF1dGhuJBIXAAQiEwIEdndodAoLXlBhc3N3b3JkcyQSCVBhc3N3b3JkczJtClwAAhIeAAQiGgIEdndodAoSXkFjY2Vzc29yeVBhaXJpbmckEhoABCIWAgR2d2h0Cg5eTmFub1JlZ2lzdHJ5JBIcAAQiGAIEdndodAoQXldhdGNoTWlncmF0aW9uJBINRGV2aWNlUGFpcmluZzIOCgIABhIIQmFja3N0b3A6DEFwcGxpY2F0aW9uczoIQmFja3N0b3A6C0NyZWRpdENhcmRzOglQYXNzd29yZHM6BFdpRmlCCVBhc3N3b3Jkc0oVUHJvdGVjdGVkQ2xvdWRTdG9yYWdlShBTZWN1cmVPYmplY3RTeW5j
SHA256:9Tb43EoxMTKvR1FTnPrWBKXf+Y20uaRdFa2TF6zR6xs=
CAwSDQoHQXBwbGVUVhICdHYSFwoOQXVkaW9BY2Nlc3NvcnkSBWF1ZGlvEgsKA01hYxIEZnVsbBIOCgVXYXRjaBIFd2F0Y2gSEAoFV2luUEMSB3dpbmRvd3MSDAoEaU1hYxIEZnVsbBIMCgRpUGFkEgRmdWxsEg4KBmlQaG9uZRIEZnVsbBIMCgRpUG9kEgRmdWxsGhcKCEFwcGxlUGF5EgRmdWxsEgV3YXRjaBobCgxBcHBsaWNhdGlvbnMSBGZ1bGwSBXdhdGNoGhkKCkF1dG9VbmxvY2sSBGZ1bGwSBXdhdGNoGhcKCEJhY2tzdG9wEgRmdWxsEgV3YXRjaBoaCgtDcmVkaXRDYXJkcxIEZnVsbBIFd2F0Y2gaHAoNRGV2aWNlUGFpcmluZxIEZnVsbBIFd2F0Y2gaFQoGRW5ncmFtEgRmdWxsEgV3YXRjaBoVCgZIZWFsdGgSBGZ1bGwSBXdhdGNoGh4KBEhvbWUSBGZ1bGwSBXdhdGNoEgJ0dhIFYXVkaW8aNgoTTGltaXRlZFBlZXJzQWxsb3dlZBIHd2luZG93cxIEZnVsbBIFd2F0Y2gSAnR2EgVhdWRpbxoSCgNNRmkSBGZ1bGwSBXdhdGNoGhYKB01hbmF0ZWUSBGZ1bGwSBXdhdGNoGiEKCVBhc3N3b3JkcxIEZnVsbBIFd2F0Y2gSB3dpbmRvd3MaOAoVUHJvdGVjdGVkQ2xvdWRTdG9yYWdlEgd3aW5kb3dzEgRmdWxsEgV3YXRjaBICdHYSBWF1ZGlvGh8KEFNlY3VyZU9iamVjdFN5bmMSBGZ1bGwSBXdhdGNoGh4KBFdpRmkSBGZ1bGwSBXdhdGNoEgJ0dhIFYXVkaW8iGwoFYXVkaW8SBGZ1bGwSBXdhdGNoEgVhdWRpbyITCgRmdWxsEgRmdWxsEgV3YXRjaCIVCgJ0dhIEZnVsbBIFd2F0Y2gSAnR2IhQKBXdhdGNoEgRmdWxsEgV3YXRjaCIWCgd3aW5kb3dzEgRmdWxsEgV3YXRjaDIiChYABCISAgR2d2h0CgpeQXBwbGVQYXkkEghBcHBsZVBheTImChgABCIUAgR2d2h0CgxeQXV0b1VubG9jayQSCkF1dG9VbmxvY2syHgoUAAQiEAIEdndodAoIXkVuZ3JhbSQSBkVuZ3JhbTIeChQABCIQAgR2d2h0CgheSGVhbHRoJBIGSGVhbHRoMhoKEgAEIg4CBHZ3aHQKBl5Ib21lJBIESG9tZTIgChUABCIRAgR2d2h0CgleTWFuYXRlZSQSB01hbmF0ZWUyOAohAAQiHQIEdndodAoVXkxpbWl0ZWRQZWVyc0FsbG93ZWQkEhNMaW1pdGVkUGVlcnNBbGxvd2VkMl0KUAACEh4ABCIaAgR2d2h0ChJeQ29udGludWl0eVVubG9jayQSFQAEIhECBHZ3aHQKCV5Ib21lS2l0JBIVAAQiEQIEdndodAoJXkFwcGxlVFYkEglOb3RTeW5jZWQyGAoRAAQiDQIEdndodAoFXk1GaSQSA01GaTIrChsABCIXAgRhZ3JwCg9eWzAtOUEtWl17MTB9XC4SDEFwcGxpY2F0aW9uczLKAQq1AQACEjYAAQoTAAQiDwIFY2xhc3MKBl5nZW5wJAodAAQiGQIEYWdycAoRXmNvbVwuYXBwbGVcLnNiZCQSQAABChMABCIPAgVjbGFzcwoGXmtleXMkCicABCIjAgRhZ3JwChteY29tXC5hcHBsZVwuc2VjdXJpdHlcLnNvcyQSGQAEIhUCBHZ3aHQKDV5CYWNrdXBCYWdWMCQSHAAEIhgCBHZ3aHQKEF5pQ2xvdWRJZGVudGl0eSQSEFNlY3VyZU9iamVjdFN5bmMyYwpbAAISEgAEIg4CBHZ3aHQKBl5XaUZpJBJDAAEKEwAEIg8CBWNsYXNzCgZeZ2VucCQKEwAEIg8CBGFncnAKB15hcHBsZSQKFQAEIhECBHN2Y2UKCV5BaXJQb3J0JBIEV2lGaTKdAwqDAwACEhgABCIUAgR2d2h0CgxeUENTLUJhY2t1cCQSGgAEIhYCBHZ3aHQKDl5QQ1MtQ2xvdWRLaXQkEhgABCIUAgR2d2h0CgxeUENTLUVzY3JvdyQSFQAEIhECBHZ3aHQKCV5QQ1MtRkRFJBIaAAQiFgIEdndodAoOXlBDUy1GZWxkc3BhciQSGgAEIhYCBHZ3aHQKDl5QQ1MtTWFpbERyb3AkEhoABCIWAgR2d2h0Cg5eUENTLU1haWxkcm9wJBIbAAQiFwIEdndodAoPXlBDUy1NYXN0ZXJLZXkkEhcABCITAgR2d2h0CgteUENTLU5vdGVzJBIYAAQiFAIEdndodAoMXlBDUy1QaG90b3MkEhkABCIVAgR2d2h0Cg1eUENTLVNoYXJpbmckEh4ABCIaAgR2d2h0ChJeUENTLWlDbG91ZEJhY2t1cCQSHQAEIhkCBHZ3aHQKEV5QQ1MtaUNsb3VkRHJpdmUkEhoABCIWAgR2d2h0Cg5eUENTLWlNZXNzYWdlJBIVUHJvdGVjdGVkQ2xvdWRTdG9yYWdlMlwKTQACEi4ABCIqAgRhZ3JwCiJeY29tXC5hcHBsZVwuc2FmYXJpXC5jcmVkaXQtY2FyZHMkEhkABCIVAgR2d2h0Cg1eQ3JlZGl0Q2FyZHMkEgtDcmVkaXRDYXJkczLSAQrEAQACEiMABCIfAgRhZ3JwChdeY29tXC5hcHBsZVwuY2ZuZXR3b3JrJBIqAAQiJgIEYWdycAoeXmNvbVwuYXBwbGVcLnBhc3N3b3JkLW1hbmFnZXIkEioABCImAgRhZ3JwCh5eY29tXC5hcHBsZVwuV2ViS2l0XC5XZWJBdXRobiQSKgAEIiYCBGFncnAKHl5jb21cLmFwcGxlXC53ZWJraXRcLndlYmF1dGhuJBIXAAQiEwIEdndodAoLXlBhc3N3b3JkcyQSCVBhc3N3b3JkczJtClwAAhIeAAQiGgIEdndodAoSXkFjY2Vzc29yeVBhaXJpbmckEhoABCIWAgR2d2h0Cg5eTmFub1JlZ2lzdHJ5JBIcAAQiGAIEdndodAoQXldhdGNoTWlncmF0aW9uJBINRGV2aWNlUGFpcmluZzIOCgIABhIIQmFja3N0b3A6DEFwcGxpY2F0aW9uczoIQmFja3N0b3A6C0NyZWRpdENhcmRzOglQYXNzd29yZHM6BFdpRmlCCVBhc3N3b3Jkc0oVUHJvdGVjdGVkQ2xvdWRTdG9yYWdlShBTZWN1cmVPYmplY3RTeW5jUglQYXNzd29yZHM=
SHA256:lZrYULdc8y/68PbqIz3wBGs82z4R+LYUITiTs87SMyg=
CA0SDQoHQXBwbGVUVhICdHYSFwoOQXVkaW9BY2Nlc3NvcnkSBWF1ZGlvEgsKA01hYxIEZnVsbBIOCgVXYXRjaBIFd2F0Y2gSEAoFV2luUEMSB3dpbmRvd3MSDAoEaU1hYxIEZnVsbBIMCgRpUGFkEgRmdWxsEg4KBmlQaG9uZRIEZnVsbBIMCgRpUG9kEgRmdWxsGhcKCEFwcGxlUGF5EgRmdWxsEgV3YXRjaBobCgxBcHBsaWNhdGlvbnMSBGZ1bGwSBXdhdGNoGhkKCkF1dG9VbmxvY2sSBGZ1bGwSBXdhdGNoGhcKCEJhY2tzdG9wEgRmdWxsEgV3YXRjaBoaCgtDcmVkaXRDYXJkcxIEZnVsbBIFd2F0Y2gaHAoNRGV2aWNlUGFpcmluZxIEZnVsbBIFd2F0Y2gaFQoGRW5ncmFtEgRmdWxsEgV3YXRjaBoVCgZIZWFsdGgSBGZ1bGwSBXdhdGNoGh4KBEhvbWUSBGZ1bGwSBXdhdGNoEgJ0dhIFYXVkaW8aNgoTTGltaXRlZFBlZXJzQWxsb3dlZBIHd2luZG93cxIEZnVsbBIFd2F0Y2gSAnR2EgVhdWRpbxoTCgRNYWlsEgRmdWxsEgV3YXRjaBoSCgNNRmkSBGZ1bGwSBXdhdGNoGhYKB01hbmF0ZWUSBGZ1bGwSBXdhdGNoGiEKCVBhc3N3b3JkcxIEZnVsbBIFd2F0Y2gSB3dpbmRvd3MaOAoVUHJvdGVjdGVkQ2xvdWRTdG9yYWdlEgd3aW5kb3dzEgRmdWxsEgV3YXRjaBICdHYSBWF1ZGlvGh8KEFNlY3VyZU9iamVjdFN5bmMSBGZ1bGwSBXdhdGNoGh4KBFdpRmkSBGZ1bGwSBXdhdGNoEgJ0dhIFYXVkaW8iGwoFYXVkaW8SBGZ1bGwSBXdhdGNoEgVhdWRpbyITCgRmdWxsEgRmdWxsEgV3YXRjaCIVCgJ0dhIEZnVsbBIFd2F0Y2gSAnR2IhQKBXdhdGNoEgRmdWxsEgV3YXRjaCIWCgd3aW5kb3dzEgRmdWxsEgV3YXRjaDIiChYABCISAgR2d2h0CgpeQXBwbGVQYXkkEghBcHBsZVBheTImChgABCIUAgR2d2h0CgxeQXV0b1VubG9jayQSCkF1dG9VbmxvY2syHgoUAAQiEAIEdndodAoIXkVuZ3JhbSQSBkVuZ3JhbTIeChQABCIQAgR2d2h0CgheSGVhbHRoJBIGSGVhbHRoMhoKEgAEIg4CBHZ3aHQKBl5Ib21lJBIESG9tZTIgChUABCIRAgR2d2h0CgleTWFuYXRlZSQSB01hbmF0ZWUyOAohAAQiHQIEdndodAoVXkxpbWl0ZWRQZWVyc0FsbG93ZWQkEhNMaW1pdGVkUGVlcnNBbGxvd2VkMl0KUAACEh4ABCIaAgR2d2h0ChJeQ29udGludWl0eVVubG9jayQSFQAEIhECBHZ3aHQKCV5Ib21lS2l0JBIVAAQiEQIEdndodAoJXkFwcGxlVFYkEglOb3RTeW5jZWQyGAoRAAQiDQIEdndodAoFXk1GaSQSA01GaTIaChIABCIOAgR2d2h0CgZeTWFpbCQSBE1haWwyKwobAAQiFwIEYWdycAoPXlswLTlBLVpdezEwfVwuEgxBcHBsaWNhdGlvbnMyygEKtQEAAhI2AAEKEwAEIg8CBWNsYXNzCgZeZ2VucCQKHQAEIhkCBGFncnAKEV5jb21cLmFwcGxlXC5zYmQkEkAAAQoTAAQiDwIFY2xhc3MKBl5rZXlzJAonAAQiIwIEYWdycAobXmNvbVwuYXBwbGVcLnNlY3VyaXR5XC5zb3MkEhkABCIVAgR2d2h0Cg1eQmFja3VwQmFnVjAkEhwABCIYAgR2d2h0ChBeaUNsb3VkSWRlbnRpdHkkEhBTZWN1cmVPYmplY3RTeW5jMmMKWwACEhIABCIOAgR2d2h0CgZeV2lGaSQSQwABChMABCIPAgVjbGFzcwoGXmdlbnAkChMABCIPAgRhZ3JwCgdeYXBwbGUkChUABCIRAgRzdmNlCgleQWlyUG9ydCQSBFdpRmkynQMKgwMAAhIYAAQiFAIEdndodAoMXlBDUy1CYWNrdXAkEhoABCIWAgR2d2h0Cg5eUENTLUNsb3VkS2l0JBIYAAQiFAIEdndodAoMXlBDUy1Fc2Nyb3ckEhUABCIRAgR2d2h0CgleUENTLUZERSQSGgAEIhYCBHZ3aHQKDl5QQ1MtRmVsZHNwYXIkEhoABCIWAgR2d2h0Cg5eUENTLU1haWxEcm9wJBIaAAQiFgIEdndodAoOXlBDUy1NYWlsZHJvcCQSGwAEIhcCBHZ3aHQKD15QQ1MtTWFzdGVyS2V5JBIXAAQiEwIEdndodAoLXlBDUy1Ob3RlcyQSGAAEIhQCBHZ3aHQKDF5QQ1MtUGhvdG9zJBIZAAQiFQIEdndodAoNXlBDUy1TaGFyaW5nJBIeAAQiGgIEdndodAoSXlBDUy1pQ2xvdWRCYWNrdXAkEh0ABCIZAgR2d2h0ChFeUENTLWlDbG91ZERyaXZlJBIaAAQiFgIEdndodAoOXlBDUy1pTWVzc2FnZSQSFVByb3RlY3RlZENsb3VkU3RvcmFnZTJcCk0AAhIuAAQiKgIEYWdycAoiXmNvbVwuYXBwbGVcLnNhZmFyaVwuY3JlZGl0LWNhcmRzJBIZAAQiFQIEdndodAoNXkNyZWRpdENhcmRzJBILQ3JlZGl0Q2FyZHMy0gEKxAEAAhIjAAQiHwIEYWdycAoXXmNvbVwuYXBwbGVcLmNmbmV0d29yayQSKgAEIiYCBGFncnAKHl5jb21cLmFwcGxlXC5wYXNzd29yZC1tYW5hZ2VyJBIqAAQiJgIEYWdycAoeXmNvbVwuYXBwbGVcLldlYktpdFwuV2ViQXV0aG4kEioABCImAgRhZ3JwCh5eY29tXC5hcHBsZVwud2Via2l0XC53ZWJhdXRobiQSFwAEIhMCBHZ3aHQKC15QYXNzd29yZHMkEglQYXNzd29yZHMybQpcAAISHgAEIhoCBHZ3aHQKEl5BY2Nlc3NvcnlQYWlyaW5nJBIaAAQiFgIEdndodAoOXk5hbm9SZWdpc3RyeSQSHAAEIhgCBHZ3aHQKEF5XYXRjaE1pZ3JhdGlvbiQSDURldmljZVBhaXJpbmcyDgoCAAYSCEJhY2tzdG9wOgxBcHBsaWNhdGlvbnM6CEJhY2tzdG9wOgtDcmVkaXRDYXJkczoJUGFzc3dvcmRzOgRXaUZpQglQYXNzd29yZHNKFVByb3RlY3RlZENsb3VkU3RvcmFnZUoQU2VjdXJlT2JqZWN0U3luY1IJUGFzc3dvcmRz
CBASDQoHQXBwbGVUVhICdHYSFwoOQXVkaW9BY2Nlc3NvcnkSBWF1ZGlvEgsKA01hYxIEZnVsbBIOCgVXYXRjaBIFd2F0Y2gSEAoFV2luUEMSB3dpbmRvd3MSDAoEaU1hYxIEZnVsbBIMCgRpUGFkEgRmdWxsEg4KBmlQaG9uZRIEZnVsbBIMCgRpUG9kEgRmdWxsGhcKCEFwcGxlUGF5EgRmdWxsEgV3YXRjaBobCgxBcHBsaWNhdGlvbnMSBGZ1bGwSBXdhdGNoGhkKCkF1dG9VbmxvY2sSBGZ1bGwSBXdhdGNoGhcKCEJhY2tzdG9wEgRmdWxsEgV3YXRjaBoaCgtDcmVkaXRDYXJkcxIEZnVsbBIFd2F0Y2gaFwoIQ29udGFjdHMSBGZ1bGwSBXdhdGNoGhwKDURldmljZVBhaXJpbmcSBGZ1bGwSBXdhdGNoGhUKBkVuZ3JhbRIEZnVsbBIFd2F0Y2gaFQoGSGVhbHRoEgRmdWxsEgV3YXRjaBoeCgRIb21lEgRmdWxsEgV3YXRjaBICdHYSBWF1ZGlvGjYKE0xpbWl0ZWRQZWVyc0FsbG93ZWQSB3dpbmRvd3MSBGZ1bGwSBXdhdGNoEgJ0dhIFYXVkaW8aEwoETWFpbBIEZnVsbBIFd2F0Y2gaEgoDTUZpEgRmdWxsEgV3YXRjaBoWCgdNYW5hdGVlEgRmdWxsEgV3YXRjaBohCglQYXNzd29yZHMSBGZ1bGwSBXdhdGNoEgd3aW5kb3dzGjgKFVByb3RlY3RlZENsb3VkU3RvcmFnZRIHd2luZG93cxIEZnVsbBIFd2F0Y2gSAnR2EgVhdWRpbxofChBTZWN1cmVPYmplY3RTeW5jEgRmdWxsEgV3YXRjaBoeCgRXaUZpEgRmdWxsEgV3YXRjaBICdHYSBWF1ZGlvIhsKBWF1ZGlvEgRmdWxsEgV3YXRjaBIFYXVkaW8iEwoEZnVsbBIEZnVsbBIFd2F0Y2giFQoCdHYSBGZ1bGwSBXdhdGNoEgJ0diIUCgV3YXRjaBIEZnVsbBIFd2F0Y2giFgoHd2luZG93cxIEZnVsbBIFd2F0Y2gyIgoWAAQiEgIEdndodAoKXkFwcGxlUGF5JBIIQXBwbGVQYXkyJgoYAAQiFAIEdndodAoMXkF1dG9VbmxvY2skEgpBdXRvVW5sb2NrMh4KFAAEIhACBHZ3aHQKCF5FbmdyYW0kEgZFbmdyYW0yHgoUAAQiEAIEdndodAoIXkhlYWx0aCQSBkhlYWx0aDIaChIABCIOAgR2d2h0CgZeSG9tZSQSBEhvbWUyIAoVAAQiEQIEdndodAoJXk1hbmF0ZWUkEgdNYW5hdGVlMjgKIQAEIh0CBHZ3aHQKFV5MaW1pdGVkUGVlcnNBbGxvd2VkJBITTGltaXRlZFBlZXJzQWxsb3dlZDJdClAAAhIeAAQiGgIEdndodAoSXkNvbnRpbnVpdHlVbmxvY2skEhUABCIRAgR2d2h0CgleSG9tZUtpdCQSFQAEIhECBHZ3aHQKCV5BcHBsZVRWJBIJTm90U3luY2VkMhgKEQAEIg0CBHZ3aHQKBV5NRmkkEgNNRmkyGgoSAAQiDgIEdndodAoGXk1haWwkEgRNYWlsMiIKFgAEIhICBHZ3aHQKCl5Db250YWN0cyQSCENvbnRhY3RzMisKGwAEIhcCBGFncnAKD15bMC05QS1aXXsxMH1cLhIMQXBwbGljYXRpb25zMsoBCrUBAAISNgABChMABCIPAgVjbGFzcwoGXmdlbnAkCh0ABCIZAgRhZ3JwChFeY29tXC5hcHBsZVwuc2JkJBJAAAEKEwAEIg8CBWNsYXNzCgZea2V5cyQKJwAEIiMCBGFncnAKG15jb21cLmFwcGxlXC5zZWN1cml0eVwuc29zJBIZAAQiFQIEdndodAoNXkJhY2t1cEJhZ1YwJBIcAAQiGAIEdndodAoQXmlDbG91ZElkZW50aXR5JBIQU2VjdXJlT2JqZWN0U3luYzJjClsAAhISAAQiDgIEdndodAoGXldpRmkkEkMAAQoTAAQiDwIFY2xhc3MKBl5nZW5wJAoTAAQiDwIEYWdycAoHXmFwcGxlJAoVAAQiEQIEc3ZjZQoJXkFpclBvcnQkEgRXaUZpMp0DCoMDAAISGAAEIhQCBHZ3aHQKDF5QQ1MtQmFja3VwJBIaAAQiFgIEdndodAoOXlBDUy1DbG91ZEtpdCQSGAAEIhQCBHZ3aHQKDF5QQ1MtRXNjcm93JBIVAAQiEQIEdndodAoJXlBDUy1GREUkEhoABCIWAgR2d2h0Cg5eUENTLUZlbGRzcGFyJBIaAAQiFgIEdndodAoOXlBDUy1NYWlsRHJvcCQSGgAEIhYCBHZ3aHQKDl5QQ1MtTWFpbGRyb3AkEhsABCIXAgR2d2h0Cg9eUENTLU1hc3RlcktleSQSFwAEIhMCBHZ3aHQKC15QQ1MtTm90ZXMkEhgABCIUAgR2d2h0CgxeUENTLVBob3RvcyQSGQAEIhUCBHZ3aHQKDV5QQ1MtU2hhcmluZyQSHgAEIhoCBHZ3aHQKEl5QQ1MtaUNsb3VkQmFja3VwJBIdAAQiGQIEdndodAoRXlBDUy1pQ2xvdWREcml2ZSQSGgAEIhYCBHZ3aHQKDl5QQ1MtaU1lc3NhZ2UkEhVQcm90ZWN0ZWRDbG91ZFN0b3JhZ2UyXApNAAISLgAEIioCBGFncnAKIl5jb21cLmFwcGxlXC5zYWZhcmlcLmNyZWRpdC1jYXJkcyQSGQAEIhUCBHZ3aHQKDV5DcmVkaXRDYXJkcyQSC0NyZWRpdENhcmRzMtIBCsQBAAISIwAEIh8CBGFncnAKF15jb21cLmFwcGxlXC5jZm5ldHdvcmskEioABCImAgRhZ3JwCh5eY29tXC5hcHBsZVwucGFzc3dvcmQtbWFuYWdlciQSKgAEIiYCBGFncnAKHl5jb21cLmFwcGxlXC5XZWJLaXRcLldlYkF1dGhuJBIqAAQiJgIEYWdycAoeXmNvbVwuYXBwbGVcLndlYmtpdFwud2ViYXV0aG4kEhcABCITAgR2d2h0CgteUGFzc3dvcmRzJBIJUGFzc3dvcmRzMm0KXAACEh4ABCIaAgR2d2h0ChJeQWNjZXNzb3J5UGFpcmluZyQSGgAEIhYCBHZ3aHQKDl5OYW5vUmVnaXN0cnkkEhwABCIYAgR2d2h0ChBeV2F0Y2hNaWdyYXRpb24kEg1EZXZpY2VQYWlyaW5nMg4KAgAGEghCYWNrc3RvcDoMQXBwbGljYXRpb25zOghCYWNrc3RvcDoLQ3JlZGl0Q2FyZHM6CVBhc3N3b3JkczoEV2lGaUIJUGFzc3dvcmRzShVQcm90ZWN0ZWRDbG91ZFN0b3JhZ2VKEFNlY3VyZU9iamVjdFN5bmNSCVBhc3N3b3Jkcw==
raw policy doesn't match encoded bytes, new hash would be: %{public}s new data: %{public}s
v8@?0
preflightVouchWithBottle failed; forcing refetch and retrying: %{public}s
preflightVouchWithBottle unable to fetch current peers: %{public}s
preflightVouchWithBottle unable to fetch viable bottles: %{public}s
preflightVouchWithBottle failed after refetches: %{public}s
preflightVouchWithBottle unable to fetch policy documents: %{public}s
fetchCurrentPolicy failed to find ego peer information
fetchCurrentPolicy failed to create TPPeerPermanentInfo
no peer ID given
preflightVouchWithBottle found no peer to match bottle
preflightVouchWithBottle sponsor peer has no stable info
preflightVouchWithBottle complete: %{public}s
_TtC18TrustedPeersHelper19OctagonSelfPeerKeys
v24@0:8@16
B24@0:8@16
v16@0:8
encryptionKey
publicEncryptionKey
publicSigningKey
encryptionVerificationKey
signingVerificationKey
T@"_SFECKeyPair",N,&,VencryptionKey
T@"_SFECKeyPair",N,&,VsigningKey
T@"NSString",N,C
T@"_SFECPublicKey",N,&,VpublicEncryptionKey
T@"_SFECPublicKey",N,&,VpublicSigningKey
description
T@"NSString",N,R
T@"_SFECPublicKey",N,R
TrustedPeersHelper.OctagonSelfPeerKeys
<OctagonSelfPeerKeys: 
preflightRecoverOctagonWithRecoveryKey unable to fetch changes: %{public}s
preflightRecoverOctagonWithRecoveryKey: failed to create recovery keys: %{public}s
preflightRecoverOctagonWithRecoveryKey: recovery Key is not enrolled
preflightRecoverOctagonWithRecoveryKey: recovery Key is incorrect
preflightRecoverOctagonWithRecoveryKey complete: %{public}s
preflightCustodianRecoveryKey unable to fetch current peers: %{public}s
preflightCustodianRecoveryKey: no ego peer ID
Unable to parse uuid %{public}s
Unable to find custodian recovery key %{public}s on model
preflightCustodianRecoveryKey: failed to create custodian recovery keys: %{public}s
preflightCustodianRecoveryKey: custodian recovery Key is not enrolled
preflightCustodianRecoveryKey Untrusted custodian recovery key
preflightCustodianRecoveryKey Failed to find peer with ID
preflightCustodianRecoveryKey: error fetching policy: %{public}s
preflightCustodianRecoveryKey unable to fetch policy documents: %{public}s
preflightCustodianRecoveryKey complete: %{public}s
preflightRecoveryKey unable to fetch current peers: %{public}s
preflightRecoveryKey: no ego peer ID
cannot create TPPeerStableInfo
preflightRecoveryKey: failed to create recovery keys: %{public}s
preflightRecoveryKey: recovery Key is not enrolled
preflightRecoveryKey Untrusted recovery key set
preflightRecoveryKey Failed to find peer with ID
preflightRecoveryKey: error fetching policy: %{public}s
preflightRecoveryKey unable to fetch policy documents: %{public}s
preflightRecoveryKey complete: %{public}s
com.apple.security.cuttlefish
v16@?0@"CKRequestInfo"8
reset(_:completion:)
establish(_:completion:)
joinWithVoucher(_:completion:)
updateTrust(_:completion:)
setRecoveryKey(_:completion:)
fetchChanges(_:completion:)
fetchViableBottles(_:completion:)
fetchPolicyDocuments(_:completion:)
validatePeers(_:completion:)
reportHealth(_:completion:)
pushHealthInquiry(_:completion:)
getRepairAction(_:completion:)
getSupportAppInfo(_:completion:)
getClubCertificates(_:completion:)
fetchSosiCloudIdentity(_:completion:)
resetAccountCdpcontents(_:completion:)
addCustodianRecoveryKey(_:completion:)
fetchRecoverableTlkshares(_:completion:)
removeRecoveryKey(_:completion:)
performAtoprvactions(_:completion:)
_TtC18TrustedPeersHelper21RetryingCKCodeService
underlyingCKOperationRunner
queue
_TtC18TrustedPeersHelper31CuttlefishCKCodeOperationRunner
underlyingCodeService
ckContainer
_TtC18TrustedPeersHelper34CuttlefishCKOperationRunnerCreator
_TtC18TrustedPeersHelper12ContainerMap
ckCodeOperationRunnerCreator
personaAdapter
containers
.TrustedPeersHelper.db
%{public}s error: %{public}s (retrying, now=%{public}s, deadline=%{public}s
performATOPRVActions
removeRecoveryKey
fetchRecoverableTLKShares
addCustodianRecoveryKey
resetAccountCDPContents
fetchSOSiCloudIdentity
getClubCertificates
getSupportAppInfo
pushHealthInquiry
fetchPolicyDocuments
fetchViableBottles
ckoperation request finished: %{public}s %{public}s
Mismatch between primary CKContainer and requested user %{public}@
Mismatch between configured CKContainer (altDSID %{public}s and requested user %{public}s
FetchRecoverableTLKSharesResponse.View
EscrowInformation.Metadata
EscrowInformation.Metadata.ClientMetadata
_TtCV18TrustedPeersHelper8ViewKeysP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass
_view
_newTlk
_newClassA
_newClassC
_oldTlk
_TtCV18TrustedPeersHelper10EscrowPairP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass
_escrowRecordID
_bottle
_record
_TtCV18TrustedPeersHelper16EstablishRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass
_peer
_viewKeys
_tlkShares
_TtCV18TrustedPeersHelper22JoinWithVoucherRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass
_changeToken
_TtCV18TrustedPeersHelper30AddCustodianRecoveryKeyRequestP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass
_peerID
_stableInfoAndSig
_dynamicInfoAndSig
_TtCVV18TrustedPeersHelper17EscrowInformation8MetadataP33_34B9299B76A248B7A76BCBE38D1FA2CF13_StorageClass
_backupKeybagDigest
_clientMetadata
_secureBackupUsesMultipleIcscs
_bottleID
_secureBackupTimestamp
_escrowedSpki
_peerInfo
_serial
cloud_identity
secure_backup_metadata_timestamp
secure_backup_numeric_passphrase_length
secure_backup_uses_complex_passphrase
secure_backup_uses_numeric_passphrase
device_color
device_enclosure_color
device_mid
device_model
device_model_class
device_model_version
device_name
device_platform
backup_keybag_digest
client_metadata
secure_backup_uses_multiple_icscs
bottle_id
secure_backup_timestamp
escrowed_spki
peer_info
serial
creation_date
remaining_attempts
escrow_information_metadata
silent_attempt_allowed
record_status
viability_status
federation_id
expected_federation_id
certificates
certdata
federations
trusted_root_cert_versions
reset_reason
idmsTargetContext
idmsCuttlefishPassword
testingNotifyIdms
devices
passwordKeychainItemCount
octagon
escrow
serial_number
views
last_health_report
model_id
last_report
enabled
repair_action
escrow_record_move_request
escrow_record_label
current_federation
intended_federation
peer_id
requires_escrow_check
known_federations
state_machine_state
octagon_ego_identity
octagon_trust_state
device_machine_id
octagon_peer_id
sos_trust_state
sos_peer_id
validators_health
results
entries
keys
view
tlk_shares
viable_bottles
partial_bottles
legacy_records
filter_request
changes
change_token
zone_key_hierarchy_records
peer
stable_info_and_sig
dynamic_info_and_sig
recovery_signing_pub_key
recovery_encryption_pub_key
view_keys
bottle
success
account_health
failure_description
tlk_share
escrow_records
peers
graph_valid
graph_validation_error
peer_graph
trusted_peers
peer_name
machine_id
os_version
octagon_signing_key
octagon_encryption_key
escrow_record_id
included
excluded
preapprovals
valid_peer
all_peers_count
invalid_peers_count
missing_peers
value
version
hash
differences
more
record
escrowed_signing_spki
signature_using_escrow_key
signature_using_peer_key
class_a
class_c
new_tlk
new_class_a
new_class_c
old_tlk
uuid
parentkey_uuid
keyclass
wrappedkey_base64
upload_os_version
curve
epoch
key_uuid
poisoned
receiver
receiver_public_encryption_key
sender
wrappedkey
remove
update
permanent_info_and_sig
recovery_voucher
custodian_recovery_key_and_sig
custodian_recovery_key
voucher
peer_dynamic_info
peer_stable_info
peer_permanent_info
SOS_VIABLE_UNKNOWN
SOS_VIABLE
SOS_NOT_VIABLE
RECORD_STATUS_VALID
RECORD_STATUS_INVALID
SUPPORT_APP_DEVICE_STATUS_HEALTHY
SUPPORT_APP_DEVICE_STATUS_BROKEN
REPAIR_ACTION_NO_ACTION
REPAIR_ACTION_POST_REPAIR_ACCOUNT
REPAIR_ACTION_POST_REPAIR_ESCROW
REPAIR_ACTION_RESET_OCTAGON
REPAIR_ACTION_LEAVE_TRUST
FILTERING_REQUEST_UNKNOWN
FILTERING_REQUEST_BY_OCTAGON_ONLY
RESET_REASON_UNKNOWN
RESET_REASON_USER_INITIATED_RESET
RESET_REASON_HEALTH_CHECK
RESET_REASON_NO_BOTTLE_DURING_ESCROW_RECOVERY
RESET_REASON_LEGACY_JOIN_CIRCLE
RESET_REASON_RECOVERY_KEY
RESET_REASON_TEST_GENERATED
RESET_REASON_SUPPORT_APP_INITIATED_RESET
VIEW_KEY_CLASS_TLK
VIEW_KEY_CLASS_CLASS_A
VIEW_KEY_CLASS_CLASS_C
Preflighted recovery key is not correct
No escrow cache available
failed to create recovery key peer
failed to get peer views
No user specified
Existing container configuration does not match user 
 not found in database
No peers preapproved by the local peer
Unknown syncUserControllableViews number: 
Internal code failed, but didn't return error
Failed to encode protobuf data
SecurityFoundation returned an unknown type
failed to store the secret in the keychain 
peerID is invalid
failed to assemble bottle for peer
Failed to load secret due to type mismatch (value was not dictionary)
failed to load secret: 
Response missing from CloudKit
unknown error from cloudkit
The peer that created the bottle was not found
recovery key is not enrolled with octagon
no bottle present
untrusted recovery keys
failed to fetch escrow contents
bottle does not contain escrowed key spki
failed to verify signature
failed to create a bottled peer
bottle does not contain peer id
bottle does not contain peer signature
bottle does not contain escrow signature
bottle does not contain encrypted contents
0 bottles exist for escrow record id
failed to restore bottle
no bottle exists for peer
too many bottles exist for peer
policy document from server doesn't validate
no peers preapprove prepared identity
could not load allowed machineID list
prepared identity (
) not on allowed machineID list
unknown policy version: 
sponsor not registered: 
invalid voucher or signature
invalid stable info or signature
invalid permanent info or signature
missing dynamic info
missing stable info
needs authentication
failed to stored identity
no prepared identity
unable to create key pair
com.apple.security.trustedpeers.container
_TtC18TrustedPeersHelper9Container
cuttlefish
semaphore
persistentContainer
containerMO
model
escrowCacheTimeout
policyVersionOverride
testIgnoreCustodianUpdates
testDontSetAccountSetting
darwinNotifier
performATOPRVActions failed: %{public}s
recoveryKey is enrolled %{bool}d, privacy: .public)
isRecoveryKeySet complete %{public}s
getSupportAppInfo failed: %{public}s
getSupportAppInfo complete: %{public}s
validatePeers failed: %{public}s
validatePeers complete %{public}s
fetchRecoverableTlkshares succeeded: found %ld views and %ld total TLKShares
fetchRecoverableTlkshares failed: %{public}s
Fatal error
Down-casted Array element failed to match the target type
Expected 
NSArray element failed to match the Swift Array Element type
Expected 
FetchPolicyDocuments failed: %{public}s
Can't make policy document with hash %{public}s and data %{public}s
Received a policy version we didn't request: %llu
Requested hash %{public}s does not match fetched hash %{public}s
fetchPolicyDocuments complete: %{public}s
fetchViableBottles failed with %{public}s
fetchViableBottles succeeded with %{public}ld viable bottles and %{public}ld partial bottles
preapprovedJoin unable to fetch changes: %{public}s
preapprovedJoin: no prepared identity
Device not IDMS trusted
preapprovedJoin: self machineID %{public}s (me) not on list
preapprovedJoin but no existing peers, attempting establish
Unable to load signing key: %{public}s
Unable to load encryption key: %{public}s
preapprovedJoin: Don't have my own keys: can't join: %{public}s
preapprovedJoin: no peers preapprove our key
Unable to create peer for joining: %{public}s
Unable to create new peer stable info for joining
Unable to process keys before joining: %{public}s
preapprovedJoin unable to encode peer: %{public}s
preapprovedJoin peer: %{public}s
preapprovedJoin: uploading %ld tlk shares
preapprovedJoin voucher signatures: %{public}s
preapprovedJoin vouchers: %{public}s
preapprovedJoin dynamicInfoSig: %{public}s
preapprovedJoin dynamicInfo: %{public}s
preapprovedJoin stableInfoSig: %{public}s
preapprovedJoin stableInfo: %{public}s
preapprovedJoin permanentInfoSig: %{public}s
preapprovedJoin permanentInfo: %{public}s
Beginning preapprovedJoin for peer %{public}s
preapprovedJoin failed: %{public}s
preapprovedJoin succeeded
preapprovedJoin complete: %{public}s
preflightPreapprovedJoin unable to fetch changes: %{public}s
preflightPreapprovedJoin: error fetching all requested policies (continuing anyway): %{public}s
preflightPreapprovedJoin: no prepared identity
preflightPreapprovedJoin: invalid permanent info
preflightPreapprovedJoin: no peers preapprove our key
preflightPreapprovedJoin: no reciprocal trust for existing peers
preflightPreapprovedJoin complete: %{public}s
join: self machineID %{public}s not on list
Don't have my own peer keys; can't join: %{public}s
Error checking introduction: %{public}s
Join unable to encode peer: %{public}s
Join peer: %{public}s
Uploading %ld tlk shares
Join voucher signatures: %{public}s
Join vouchers: %{public}s
Join dynamicInfoSig: %{public}s
Join dynamicInfo: %{public}s
Join stableInfoSig: %{public}s
Join stableInfo: %{public}s
Join permanentInfoSig: %{public}s
Join permanentInfo: %{public}s
Beginning join for peer %{public}s
joinWithVoucher failed: %{public}s
JoinWithVoucher failed: %{public}s
JoinWithVoucher succeeded
join: error fetching all requested policies (continuing anyway): %{public}s
join complete: %{public}s
Unable to parse uuid: %{public}s
Custodian Recovery Key is not enrolled
failed to create custodian recovery keys: %{public}s
com.apple.security.egoIdentities
prepareInheritancePeer encryptionPubKey: %{public}s
prepareInheritancePeer signingPubKey: %{public}s
prepareInheritancePeer unable to fetch changes: %{public}s
Unable to save encryption key: %{public}s
fetchPolicyDocument: didn't return policy of version: %{public}s
Unable to fetch policy: %{public}s
Unable to save inheritance identity: %{public}s
permanentInfo does not exist
permanentInfoSig does not exist
stableInfo does not exist
stableInfoSig does not exist
Invalid stableinfo or signature
failed to create syncing policy: %{public}s
Unable to save signing key: %{public}s
prepareInheritancePeer complete peerID: %{public}s %{public}s
bottle creation failed: %{public}s
Unable to save identity: %{public}s
prepare complete peerID: %{public}s %{public}s
beginning a removeRecoveryKey
no prepared identity, cannot remove recovery key
permInfoSig does not exist
cannot create TPPeerPermanentInfo
cannot create peerViews
cannot create recovery key peer
handle: no signing key pair: %{public}s
Error creating recovery key peerid: %{public}s
Error preparing dynamic info: %{public}s
removeRecoveryKey failed: %{public}s
removeRecoveryKey handling failed: %{public}s
removeRecoveryKey succeeded
removeRecoveryKey complete: %{public}s
reportHealth complete %{public}s
Intending to set user-controllable views to %{public}s
peerID == %@ && container == %@
NSFetchRequestResult
Ignoring Custodian update due to test request: %{public}s
failed to parse custodian recovery key
Register CRK with peerID %{public}s
Local delete failed: %{public}s
Saved model with %ld peers
Deleting all CloudKit data
loadModel: no allowedMachineIDs?
loadModel: disallowedMachineIDs: %{public}s
loadModel: allowedMachineIDs: %{public}s
loadModel: recovery key not set in model, but is set on ego peer
loadModel: loaded %ld CRKs
loadModel: loaded %ld vouchers
loadModel: loaded %ld peers
loadModel: peer %{public}s has no dynamic info
loadModel: peer %{public}s has unparseable dynamic info
loadModel unable to update dynamic info for peer(%{public}@): %{public}s
loadModel: peer %{public}s has no stable info
loadModel: peer %{public}s has unparseable stable info
loadModel unable to update stable info for peer(%{public}@): %{public}s
Currently know about %ld peers
escrow cache and viable bottles are no longer valid
persist: New change token: %{public}s
persist: Received %ld peer differences, more: %{bool}d
updateTrustIfNeeded: No identity.
updateTrustIfNeeded: no signing key pair: %{public}s
not yet preapproved
updateTrustIfNeeded: ego peer is not in model, is %{public}s
updateTrustIfNeeded: couldn't calculate dynamic info: %{public}s
updateTrustIfNeeded: attempting updateTrust for %{public}s with: %{public}@
updateTrustIfNeeded: unable to compute a new syncing policy: %{public}s
updateTrustIfNeeded: unable to remove untrusted MachineIDs: %{public}s
updateTrustIfNeeded: complete.
updateTrustIfNeeded: produced a dynamicInfo: %{public}s
updateTrustIfNeeded: produced a stableInfo: %{public}s
UpdateTrust failed: %{public}s
fetchChangesAndUpdateTrustIfNeeded: fetching failed: %{public}s
updateTrustIfNeeded: error fetching all requested policies (continuing anyway): %{public}s
Fetching with change token: %{public}s
Could not fetch changes: %{public}s
Fetch error is an unknown error: %{public}s
change token is expired; resetting local CK storage
Could not persist changes: %{public}s
persist: no more changes!
persist: More changes indicated. Fetching...
Failed to reset local data: %{public}s
Model would like a full refetch, but we've done one at this refetch level: %lld
Forcing a full refetch due to model: last refetch level: %lld
Forcing a full refetch: by request
Have no self identity, can't make tlk shares
Couldn't parse self identity: %{public}s
Don't have my own peer keys; can't upload new TLKs: %{public}s
Unable to fetch dynamic info for self
Unable to process keys before uploading: %{public}s
Received %ld CKRecords back
Uploading some new TLKs: %{public}s
updateTLKs complete: %{public}s
setPreapprovedKeys: No identity.
setPreapprovedKeys: %{public}s
setPreapprovedKeys: no signing key pair: %{public}s
setPreapprovedKeys: couldn't calculate dynamic info: %{public}s
setPreapprovedKeys: attempting updateTrust for %{public}s with: %{public}@
setPreapprovedKeys: no change; nothing to do.
setPreapprovedKeys: produced a dynamicInfo: %{public}@
setPreapprovedKeys: updateTrust succeeded
setPreapprovedKeys: failed: %{public}s
setPreapprovedKeys complete: %{public}s
update complete: %{public}s
fetchAccountSettings unable to fetch changes: %{public}s
fetchAccountSettings complete: %{public}s
resetCDPAccountData failed: %{public}s
resetCDPAccountData complete: %{public}s
requestHealthCheck requiring escrow check: %{bool}d, knownFederations: %{public}s
requestHealthCheck: No identity.
health check complete: %{public}s
join: setting 'user view sync' control as: %{public}s
Unable to create TLKShares for keyset %{public}@: %{public}s
Planning to share %{public}s with peers %{public}s
No TLK contents for %{public}s, no TLK share possible
Making TLKShare for %{public}s for key %{public}s
best policy(%{public}@) is missing?
Ignoring policy version from pre-CKKS4All peer
no model ID override; returning error
prevailing policy is missing?
fetchCurrentPolicy failed to prevailing policy: %{public}s
returning a policy for model ID %{public}s
fetchCurrentPolicy failed to create TPPeerStableInfo
Fetching the syncing policy failed: %{public}s
fetchCurrentPolicy with no dynamic info
fetchCurrentPolicy complete: %{public}s
starting fetchViableBottlesWithSemaphoreFromCuttlefish
fetchViableBottles unable to save bottles and records with %{public}s
fetchViableBottles returned partial bottles: %{public}s
fetchViableBottles returned viable bottles: %{public}s
fetchViableBottles saved bottles and records
Requesting Cuttlefish to filter records by Octagon Only
starting fetchEscrowRecordsFromCacheWithSemaphore and will check timeout: %{bool}d
starting fetchFromEscrowCacheWithSemaphore and will check timeout: %{bool}d
skipping timeout check and directly returning cached records
escrow cache no longer valid
escrow cache still valid
no cached records were found, no saved escrowFetchDate either, returning no cache error
starting fetchViableBottlesFromCacheWithSemaphore and will check timeout: %{bool}d
starting fetchEscrowRecordsWithSemaphore from source %ld
fetchEscrowRecordsFromCache did not return any records, checking cuttlefish
fetchEscrowRecordsFromCache returned records
beginning a fetchViableBottles from source %ld
fetchViableBottlesFromCache did not return any bottles, checking cuttlefish
fetchViableBottlesFromCache returned bottles
beginning a removeEscrowCache
removeEscrowCache complete %{public}s
fetchViableBottles returned no viable bottles
fetchViableBottles returned no legacy escrow records
fetchViableBottles returned no partially viable bottles, but that's ok
ignoring double enrollment record %{public}s
fetchViableBottles already knows about legacy record %{public}s, re-adding entry
fetchViableBottles saving new bottle: %{public}@
fetchViableBottles already knows about bottle: %{public}s
fetchViableBottles already knows about record, re-adding entry: %{public}s
fetchViableBottles already knows about record, re-adding entry, label = %{public}s
beginning a fetchEscrowContents
fetchEscrowContents failed
fetchEscrowContents no bottle matches peerID
fetchEscrowContents failed to load entropy: %{public}s
fetchEscrowContents failed to load entropy
fetchEscrowContents no escrow signing spki
fetchEscrowContents complete: %{public}s
No dynamic info for self?
No longer have signing key pair; can't sign distrust: %{public}s
attempting distrust for %{public}s with: %{public}@
updateTrust failed: %{public}s
distrust handling failed: %{public}s
distrust succeeded
Self-distrust via peerID not allowed
distrust complete: %{public}s
departByDistrustingSelf complete: %{public}s
As a nonmember, can't vouch for someone else
Invalid permenent info or signature; can't vouch for them
Invalid stableinfo or signature; van't vouch for them
Don't have my own keys: can't vouch for %{public}s(%{public}@): %{public}s
Unknown policy for beneficiary: %{public}s
Error creating voucher: %{public}s
Unable to make TLKShares for beneficiary %{public}s(%{public}@): %{public}s
No TLKShares to upload for new peer, returning voucher
Unable to upload new tlkshares: %{public}s
Uploaded new tlkshares: %{public}s
vouch complete: %{public}s
beginning a vouchWithCustodianRecoveryKey
Don't have my own peer keys; can't establish: %{public}s
Untrusted custodian recovery key set
Error creating voucher using custodian recovery key set: %{public}s
vouchWithCustodianRecoveryKey encryptionPubKey: %{public}s
vouchWithCustodianRecoveryKey signingPubKey: %{public}s
Recovered TLKs: %{public}s
Skipping %{public}s (wrong peerID)
Failed to recover share %{public}s: %{public}s
Recovered %{public}s (from %{public}s
No ego peer in model; no trusted peers
Unable to create dynamic info for share recovery: %{public}s
Using computed dynamic info for share recovery: %{public}@
No peer for trusted ID %{public}s
vouchWithCustodianRecoveryKey complete: %{public}s
beginning a recoverTLKSharesForInheritor
Error making CKKSTLKShares for inheritor: %{public}s
recoverTLKSharesForInheritor encryptionPubKey: %{public}s
recoverTLKSharesForInheritor signingPubKey: %{public}s
recoverTLKSharesForInheritor complete: %{public}s
beginning a vouchWithRecoveryKey
Don't have my own peer keys; can't vouch with recovery key: %{public}s
failed to create recovery keys: %{public}s
Recovery Key is not enrolled
Untrusted recovery key set
Error creating voucher using recovery key set: %{public}s
vouchWithRecoveryKey encryptionPubKey: %{public}s
vouchWithRecoveryKey signingPubKey: %{public}s
vouchWithRecoveryKey complete: %{public}s
vouchWithBottle failed preflight: %{public}s
vouchWithBottle: Unable to find peer that created the bottle
vouchWithBottle: Unable to create a sponsor public key
vouchWithBottle: Verification of bottled signature failed: %{public}s
Creation of Bottled Peer failed: %{public}s
Have a bottle for peer %{public}s
Creation of Bottled Peer failed with bottle salt: %{public}s
Attempting with empty bottle salt
Error loading ego peer keys: %{public}s
Error creating voucher with bottle: %{public}s
Attempting to recover %ld shares for peer %{public}s
vouchWithBottle complete: %{public}s
removeCustodianRecoveryKey complete: %{public}s
beginning a createCustodianRecoveryKey
no prepared identity, cannot create custodian recovery key
createCustodianRecoveryKey encryptionPubKey: %{public}s
createCustodianRecoveryKey signingPubKey: %{public}s
CreateCustodianRecoveryKey failed: %{public}s
CreateCustodianRecoveryKey handling failed: %{public}s
CreateCustodianRecoveryKey succeeded
createCustodianRecoveryKey complete: %{public}s
beginning a setRecoveryKey
no prepared identity, cannot set recovery key
setRecoveryKey encryptionPubKey: %{public}s
setRecoveryKey signingPubKey: %{public}s
setRecoveryKey failed: %{public}s
setRecoveryKey handling failed: %{public}s
setRecoveryKey succeeded
setRecoveryKey complete: %{public}s
establish: self machineID %{public}s not on list
Unable to make TLKShares for self: %{public}s
Establish unable to encode bottle/peer: %{public}s
Establish peer: %{public}s
Establish bottle: %{public}s
Establish introducing %ld key sets, %ld tlk shares
Establish dynamicInfoSig: %{public}s
Establish dynamicInfo: %{public}s
Establish stableInfoSig: %{public}s
Establish stableInfo: %{public}s
Establish permanentInfoSig: %{public}s
Establish permanentInfo: %{public}s
Beginning establish for peer %{public}s
dynamic info: %{public}@
establish failed: %{public}s
establish returned failed, trying fetch
establish handling failed: %{public}s
establish succeeded
establish succeeded, but more changes need fetching...
Establish returned changes, but they can't be serialized
Establish returned changes: %{public}s
Establish: viewKeys: %{public}s
fetch-after-establish succeeded
fetch-after-establish failed: %{public}s
fetchAfterEstablish failed to reset local data: %{public}s
fetchAfterEstablish failed to fetch changes: %{public}s
fetchAfterEstablish: failed to fetch egoPeerID
fetchAfterEstablish: did not find peer %{public}s in model
fetchAfterEstablish failed: %{public}s
fetchAfterEstablish succeeded
fetchAfterEstablish failed to update TLKs: %{public}s
establish complete peer: %{public}s %{public}s
getEgoEpoch complete: %llu %{public}s
localReset complete %{public}s
reset failed: %{public}s
reset persist failed: %{public}s
reset succeded
TrustedPeersHelper/Container.swift
unknown reset reason: 
reset complete %{public}s
machineIDsAllowed
machineIDsDisallowed
modelRecoverySigningPublicKey
modelRecoveryEncryptionPublicKey
registeredPolicyVersions
custodian_recovery_keys
signatureUsingPeerKey
signatureUsingSPKI
dump complete: %{public}s
No peer ID => no trusted peers
fetchTrustState failed to create TPPeerPermanentInfo
Returning trust state: %{public}@ %{public}s
Unable to add RK as a trusted peer: %{public}s
fetchTrustState: ego peer is %{public}s
fetch trust state complete: %{public}s %{public}s
Unable to fetch changes, trust status is unknown: %{public}s
trustStatus complete: %{public}s %{public}s
Existing peers in account, but we don't have a peer ID. We are excluded.
No existing peers in account
trust status: No error but Ego Peer Keys are nil
trust status: Lost the ego key pair, returning 'excluded' in hopes of fixing up the identity
trust status: Unable to load ego keys: %{public}s
TrustedPeersHelper.Container
v24@?0@"NSPersistentStoreDescription"8@"NSError"16
ensureEgoConsistency failed to find ego peer information
ensureEgoConsistency failed to create TPPeerStableInfo from container
ensureEgoConsistency failed to create TPPeerStableInfo from model
com.apple.security.TrustedPeersHelper.nsObjectModels
UNKNOWN
DISABLED
ENABLED
FOLLOWING
(unknown: %i)
_TtC18TrustedPeersHelper6Client
v24@0:8@?16
v32@0:8@16@?24
v60@0:8@16q24@32@40B48@?52
v44@0:8@16@24B32@?36
v40@0:8@16@24@?32
v148@0:8@16Q24@32@40@48@56@64@72@80@88@96i104@108@116@124@132@?140
v56@0:8@16@24@32@40@?48
v80@0:8@16@24@32@40@48@56@64@?72
v64@0:8@16@24@32@40@48@?56
v48@0:8@16@24@32@?40
v72@0:8@16@24@32@40@48@56@?64
v108@0:8@16B24@28@36@44@52@60@68@76@84@92@?100
v40@0:8@16q24@?32
v68@0:8@16@24@32@40@48i56@?60
v44@0:8@16B24@28@?36
v52@0:8@16@24@32B40@?44
v36@0:8@16B24@?28
endpoint
containerMap
preflightRecoverOctagon failed for %{public}s: %{public}s
preflightRecoverOctagon for %{public}s
performATOPRVActions failed for %{public}s: %{public}s
performATOPRVActions for %{public}s
removeRecoveryKey failed for %{public}s: %{public}s
removeRecoveryKey for %{public}s
isRecoveryKeySet failed for %{public}s: %{public}s
isRecoveryKeySet for %{public}s
fetchAccountSettings failed for %{public}s: %{public}s
fetchAccountSettings for %{public}s
resetAccountCDPContents failed for %{public}s: %{public}s
resetAccountCDPContents for %{public}s
removeEscrowCache failed for %{public}s: %{public}s
removeEscrowCache for %{public}s
getSupportInfo failed for %{public}s: %{public}s
getSupportAppInfo for %{public}s
Health Check! failed for %{public}s: %{public}s
Health Check! requiring escrow check? %{bool}d for %{public}s
PushHealthInquiry failed for %{public}s: %{public}s
PushHealthInquiry for %{public}s
%{public}s finished for %{public}s
%{public}s errored for %{public}s: %{public}s
ReportHealth failed for %{public}s: %{public}s
ReportHealth for %{public}s
RemoveCustodianRecoveryKey failed for %{public}s: %{public}s
RemoveCustodianRecoveryKey for %{public}s
removeCustodianRecoveryKey
CreateCustodianRecoveryKey failed for %{public}s: %{public}s
CreateCustodianRecoveryKey for %{public}s
createCustodianRecoveryKey
SetRecoveryKey failed for %{public}s: %{public}s
SetRecoveryKey for %{public}s
ValidatePeers failed for %{public}s: %{public}s
ValidatePeers for %{public}s
fetchRecoverableTLKShares failed for %{public}s: %{public}s
Fetching recoverable TLKShares %{public}s with peerID filter: %{public}s
fetchPolicyDocuments failed for %{public}s: %{public}s
Fetching policy documents %{public}s with versions: %{public}s
fetchCurrentPolicy failed for %{public}s: %{public}s
Fetching policy+views for %{public}s
fetchEscrowContents failed for %{public}s: %{public}s
fetchEscrowContents in %{public}s
fetchViableEscrowRecords in %{public}s from source (%{public}ld
fetchViableBottles failed for %{public}s: %{public}s
fetchViableBottles in %{public}s from source (%{public}ld
distrustPeerIDs failed for %{public}s: %{public}s
Distrusting %{public}s in %{public}s
departByDistrustingSelf failed for %{public}s: %{public}s
Departing %{public}s
updateTLKs failed for %{public}s: %{public}s
Updating TLKs for %{public}s
setPreapprovedKeys failed for %{public}s: %{public}s
setPreapprovedKeys %{public}s
update failed for %{public}s: %{public}s
Updating %{public}s
attemptPreapprovedJoin failed for %{public}s: %{public}s
Attempting a preapproved join for %{public}s
preflightPreapprovedJoin failed for %{public}s: %{public}s
Attempting to preflight a preapproved join for %{public}s
Joining failed for %{public}s: %{public}s
Joining %{public}s
Vouching with Custodian Recovery Key failed for %{public}s: %{public}s
Vouching With Custodian Recovery Key %{public}s
Vouching With Custodian Recovery Key
Recovering TLKShares for Inheritor failed for %{public}s: %{public}s
Recovering TLKShares for Inheritor %{public}s
Recovering TLKShares for Inheritor
Vouching with Recovery Key failed for %{public}s: %{public}s
Vouching With Recovery Key %{public}s
Vouching With Recovery Key
Preflighting Vouch With CustodianRecoveryKey failed for %{public}s: %{public}s
Preflight Vouch With CustodianRecoveryKey %{public}s
Preflight Vouch With CustodianRecoveryKey
Preflighting Vouch With RecoveryKey failed for %{public}s: %{public}s
Preflight Vouch With RecoveryKey %{public}s
Preflight Vouch With RecoveryKey
Vouching with Bottle failed for %{public}s: %{public}s
Vouching With Bottle %{public}s
Vouching With Bottle
Preflighting Vouch With Bottle failed for %{public}s: %{public}s
Preflight Vouch With Bottle %{public}s
Preflight Vouch With Bottle
Vouching failed for %{public}s: %{public}s
Vouching %{public}s
Establishing failed for %{public}s: %{public}s
Establishing %{public}s
prepareInheritancePeer failed for %{public}s: %{public}s
Preparing new identity for inheritance peer %{public}s
prepareInheritancePeer
Prepare failed for %{public}s: %{public}s
Preparing new identity for %{public}s
Epoch retrieval failed for %{public}s: %{public}s
retrieving epoch for %{public}s
Fetching allowed machineIDs failed for %{public}s: %{public}s
Fetching allowed machineIDs for %{public}s
Fetched allowed machineIDs
Removing allowed machineID failed for %{public}s: %{public}s
Removing allowed machineIDs for %{public}s: %{public}s
Removing allowed machineIDs
Adding allowed machineID failed for %{public}s: %{public}s
Adding allowed machineIDs for %{public}s: %{public}s
Adding allowed machineIDs
Setting allowed machineIDs failed for %{public}s: %{public}s
Setting allowed machineIDs for %{public}s to %{public}s
Setting allowed machineIDs
Local reset failed for %{public}s: %{public}s
Performing local reset for %{public}s
Resetting failed for %{public}s: %{public}s
Resetting for %{public}s
Fetch Trust State failed for %{public}s: %{public}s
Fetch Trust State for %{public}s
Trust status failed for %{public}s: %{public}s
Dumping failed for %{public}s: %{public}s
Dumping for %{public}s
TrustedPeersHelper.ResetOperation
init(functionName:request:)
TrustedPeersHelper.EstablishOperation
TrustedPeersHelper.JoinWithVoucherOperation
TrustedPeersHelper.UpdateTrustOperation
TrustedPeersHelper.SetRecoveryKeyOperation
TrustedPeersHelper.AddCustodianRecoveryKeyOperation
TrustedPeersHelper.FetchChangesOperation
TrustedPeersHelper.FetchViableBottlesOperation
TrustedPeersHelper.FetchRecoverableTlksharesOperation
TrustedPeersHelper.FetchPolicyDocumentsOperation
TrustedPeersHelper.ValidatePeersOperation
TrustedPeersHelper.ReportHealthOperation
TrustedPeersHelper.PushHealthInquiryOperation
TrustedPeersHelper.GetRepairActionOperation
TrustedPeersHelper.GetSupportAppInfoOperation
TrustedPeersHelper.GetClubCertificatesOperation
TrustedPeersHelper.FetchSosiCloudIdentityOperation
TrustedPeersHelper.ResetAccountCdpcontentsOperation
TrustedPeersHelper.RemoveRecoveryKeyOperation
TrustedPeersHelper.PerformAtoprvactionsOperation
_TtCO18TrustedPeersHelper13CuttlefishAPI14ResetOperation
_TtCO18TrustedPeersHelper13CuttlefishAPI18EstablishOperation
_TtCO18TrustedPeersHelper13CuttlefishAPI24JoinWithVoucherOperation
_TtCO18TrustedPeersHelper13CuttlefishAPI20UpdateTrustOperation
_TtCO18TrustedPeersHelper13CuttlefishAPI23SetRecoveryKeyOperation
_TtCO18TrustedPeersHelper13CuttlefishAPI32AddCustodianRecoveryKeyOperation
_TtCO18TrustedPeersHelper13CuttlefishAPI21FetchChangesOperation
_TtCO18TrustedPeersHelper13CuttlefishAPI27FetchViableBottlesOperation
_TtCO18TrustedPeersHelper13CuttlefishAPI34FetchRecoverableTlksharesOperation
_TtCO18TrustedPeersHelper13CuttlefishAPI29FetchPolicyDocumentsOperation
_TtCO18TrustedPeersHelper13CuttlefishAPI22ValidatePeersOperation
_TtCO18TrustedPeersHelper13CuttlefishAPI21ReportHealthOperation
_TtCO18TrustedPeersHelper13CuttlefishAPI26PushHealthInquiryOperation
_TtCO18TrustedPeersHelper13CuttlefishAPI24GetRepairActionOperation
_TtCO18TrustedPeersHelper13CuttlefishAPI26GetSupportAppInfoOperation
_TtCO18TrustedPeersHelper13CuttlefishAPI28GetClubCertificatesOperation
_TtCO18TrustedPeersHelper13CuttlefishAPI31FetchSosiCloudIdentityOperation
_TtCO18TrustedPeersHelper13CuttlefishAPI32ResetAccountCdpcontentsOperation
_TtCO18TrustedPeersHelper13CuttlefishAPI26RemoveRecoveryKeyOperation
_TtCO18TrustedPeersHelper13CuttlefishAPI29PerformAtoprvactionsOperation
_TtC18TrustedPeersHelper24CuttlefishAPIAsyncClient
codeService
_TtC18TrustedPeersHelper33CuttlefishAPIAsyncOperationClient
not enforcing idms list changes; allowing %{public}s
machineID %{public}s not found on list
machineID %{public}s not explicitly allowed: %{public}s
Fetching allowed machine IDs
fetchAllowedMachineIDs complete: %{public}s
Removing allowed machine IDs: %{public}s
Suspicious of new machine ID: %{public}s
Now suspicious of machine ID: %{public}s
removeAllow complete: %{public}s
Adding allowed machine IDs: %{public}s
Newly trusted machine ID: %{public}s
Continue to trust machine ID: %{public}s
addAllow complete: %{public}s
Setting allowed machine IDs: %{public}s
Error setting machine ID list: %{public}s
Believe we're in a demo account, not enforcing IDMS list
Peer machineID is unknown, beginning grace period: %{public}s
Machine has no ID: %{public}s
Unknown machine ID last modified %{public}s; distrusting: %{public}s
Unknown machine ID last modified %{public}s; leaving unknown: %{public}s
Allowed-but-unseen machine ID isn't on full list, last modified %{public}s, distrusting: %{public}s
Allowed-but-unseen machine ID isn't on full list, last modified %{public}s, ignoring: %{public}s
Newly distrusted machine ID: %{public}s
Machine ID newly retrusted: %{public}s
Machine ID still trusted: %{public}s
setAllowedMachineIDs complete: %{public}s
Dropping knowledge of machineID %{public}s
Not enforcing IDMS list changes
_TtC18TrustedPeersHelper10EscrowKeys
symmetricKey
secret
bottleSalt
Key generation error 
com.apple.security.trustedpeers.EscrowKeys
TrustedPeersHelper.EscrowKeys
Escrowed Symmetric Key-%@
Escrowed Encryption Key-%@
Escrowed Signing Key-%@
Escrow Signing Private Key
Escrow Encryption Private Key
Escrow Symmetric Key
fetchEscrowRecords failed with %{public}s
fetchEscrowRecords succeeded with %{public}ld records
setEscrowRecord saving new escrow record: %{public}@
_TtC18TrustedPeersHelper11BottledPeer
escrowKeys
bottleID
signatureUsingEscrowKey
escrowSigningPublicKey
escrowSigningSPKI
peersigningSPKI
contents
keys generated by the entropy+salt do not match the bottle contents
failed to create escrow keys
failed to create bottle
could not decrypt bottle contents
Failed to deserialize bottle peer
TrustedPeersHelper.BottledPeer
escrow key not an SFECPublicKey?
Unable to deserialize bottle
Bottled SPKI does not match re-created SPKI
@32@0:8@16@24
TrustedPeersHelper
T@"NSString",N,D,C
T@"NSData",N,D,C
escrowedSigningSPKI
peerID
T@"ContainerMO",N,D,&
CustodianRecoveryKey
crkInfo
crkInfoSig
container
accountDSID
allowedMachineIDs
T@"NSSet",N,D,&
changeToken
egoPeerID
egoPeerPermanentInfo
egoPeerPermanentInfoSig
egoPeerStableInfo
egoPeerStableInfoSig
escrowFetchDate
T@"NSDate",N,D,C
honorIDMSListChanges
moreChanges
name
recoveryKeyEncryptionSPKI
recoveryKeySigningSPKI
refetchLevel
Tq,N,D
bottles
custodianRecoveryKeys
fullyViableEscrowRecords
legacyEscrowRecords
machines
partiallyViableEscrowRecords
policies
TrustedPeersHelper1
TrustedPeersHelper2
TrustedPeersHelper3
TrustedPeersHelper4
TrustedPeersHelper5
TrustedPeersHelper6
TrustedPeersHelper7
TrustedPeersHelper8
EscrowClientMetadata
deviceColor
deviceEnclosureColor
deviceMid
deviceModel
deviceModelClass
deviceModelVersion
deviceName
devicePlatform
secureBackupMetadataTimestamp
secureBackupNumericPassphraseLength
secureBackupUsesComplexPassphrase
secureBackupUsesNumericPassphrase
escrowMetadata
T@"EscrowMetadataMO",N,D,&
backupKeybagDigest
escrowedSPKI
peerInfo
secureBackupTimestamp
secureBackupUsesMultipleiCSCS
clientMetadata
T@"EscrowClientMetadataMO",N,D,&
escrowRecord
T@"EscrowRecordMO",N,D,&
creationDate
expectedFederationID
federationID
label
recordStatus
remainingAttempts
silentAttemptAllowed
sosViability
allowed
machineID
modified
seenOnFullList
status
dynamicInfo
dynamicInfoSig
isEgoPeer
TB,N,D
permanentInfo
permanentInfoSig
stableInfo
stableInfoSig
recoveryVoucher
T@"RecoveryVoucherMO",N,D,&
vouchers
policyData
policyHash
recoverySigningPubKey
recoveryVoucherInfo
signature
T@"PeerMO",N,D,&
voucherInfo
voucherInfoSig
beneficiary
CKErrorDomain
CKInternalErrorDomain
CKRetryAfter
CKPartialErrors
AKAuthenticationError
v32@?0@8@"NSError"16^B24
persona
ckks-persona
%@ %@
escrowRecordLabel
currentFederation
intendedFederation
WrongKeySizeException
length (%lu) was not %d
corecrypto
CCRandomGenerateBytes failed with %d
No key given
wrapped key size does not match key size
unwrapped key size does not match key size
CommonCrypto
IV generation failed
ciphertext too short
no mode given
could not ccsiv_init
could not ccsiv_set_nonce
could not ccsiv_aad
could not ccsiv_crypt
bottle_validity
label
record_id
recovery_status
cool_off_end
record_viability
RECOVERY_STATUS_VALID
RECOVERY_STATUS_SOFT_LIMIT_REACHED
RECOVERY_STATUS_HARD_LIMIT_REACHED
RECORD_VIABILITY_FULLY_VIABLE
RECORD_VIABILITY_PARTIALLY_VIABLE
RECORD_VIABILITY_LEGACY
%@_%@
<TPSpecificUser: altDSID:%@ o:%@ ck:%@ p:%@/%@ aaID:%@>
primary
secondary
cloudkit
aaID
altDSID
isPrimary
ciphertext
authenticationCode
initializationVector
SecError
<TPHPeerState: %@ preapproved:%d status:%@ memberChanges: %@ unk. mIDs: %@ osVersion: %@ walrus: %@ webAccess: %@>
unknown
peerID
identityIsPreapproved
peerStatus
memberChanges
unknownMachineIDs
osVersion
walrus
webAccess
<TPHEgoPeerState: %@ (mid:%@)>
egoStatus
viablePeerCountsByModelID
peerCountsByMachineID
isExcluded
isLocked
<TPHPeer: %@ %@ %@ se:%@ (%lu views)>
signingSPKI
encryptionSPKI
seIdentity
viewList
<CustodianRecoveryKey: %@, (%@)>
encryptionKey
recoveryString
salt
kind
<TLKRecoveryResult: %@ totalTLKSharesRecovered:%d>
totalShares
errors
RECOVERY_KEY
INHERITANCE_KEY
<CKKSTLKShareCore(%@): recv:%@ send:%@>
server_
ckksshare
Peer(%@) has no signing key
No TLK share from %@
zoneID
tlkUUID
senderPeerID
wrappedTLK
signature
receiverPeerID
receiverSPKI
No trusted peer signed %@
Signed UUID doesn't match unsigned UUID for %@
ckks
classA
classC
parentkeyref
receiverPublicEncryptionKey
CKKSErrorDomain
iphone(sim)
kern.osrelease
kern.osversion
%s (%s)
Version
keyType
keyData
EC_NIST_CURVES
CloudkitKeychainService
<CKAccountInfo: %@>
<TrustedPeersHelperIntendedTPPBSecureElementIdentity: %@>
identity
reserved3
reserved4
reserved5
reserved6
escrowedEncryptionSPKI
peerSigningSPKI
peerEncryptionSPKI
reserved7
contents
ckks-logger
com.apple.security.ckks
spid-
<CKKSSelves: %@ %@>
(no past selves)
<CKKSActualPeer(%@): pubEnc:%@ pubSign:%@ views:%d>
<CKKSSOSPeer(%@): pubEnc:%@ pubSign:%@ views:%d>
%@%@
spid
<CKKSSOSSelfPeer(%@): pubEnc:%@ pubSign:%@ views:%d>
ckkskey
%@ is not self-wrapped
securityd
Couldn't save %@ to keychain: %d
-nonsync
SecItemUpdate: %d
SecItemAdd: %d
SecItemCopyMatching: %d
Couldn't load %@ from keychain: %d
-piggy
%@-piggy
unable to unbase64 key: %@
Couldn't delete %@ from keychain: %d
<%@(%@): %@ (%@)>
Data failed to parse as a CKKSSerializedKey
parentKeyUUID
<CKKSKeychainBackedKeySet: tlk:%@, classA:%@, classC:%@, newUpload:%d>
newUpload
reserved1
reserved2
peerSigningPrivKey
peerEncryptionPrivKey
zoneName
%@/%@
Library/Keychains
So8NSObjectC
ypSg
So8NSObjectCSg
$sSY
So18NSValueTransformerC
yyXlXpG
So22TPCustodianRecoveryKeyC
So12_SFECKeyPairC
ySSypG
SS_ypt
_yptG
_ypt
_ABtG
_ypt
ySo15TPPolicyVersionCSo0A8DocumentCG
ySSSo8NSNumberCG
ySSSo25TPPBPeerStableInfoSettingCG
ySSSo21CKKSKeychainBackedKeyCG
ySSSay
_pGG
yS2SG
So20NSManagedObjectModelCG
_So20NSManagedObjectModelCt
9errorCode_t
SS7keyType_t
15corecryptoError_t
yyXlG
ySSG
So15TPPolicyVersionC
So16TPPolicyDocumentC
Sg_ABt
Sg_ABt
Sg_ABt
Sg_ABt
SSSgSo15TPSyncingPolicyCSgSb
_pSgIegggyg_
_pSg
SaySSGSgAB
_pSgIegggg_
ySSG
So14_SFECPublicKeyCSg
So14_SFECPublicKeyC
ySo8CKRecordCSgG
_pSgIegyg_
SSSgSo15TPSyncingPolicyCSg
_pSgIegggg_
So38TrustedPeersHelperCustodianRecoveryKeyC
_pGIegn_
yxq_GIego_
yxq_G
G0R0_
G1R0_
$s18TrustedPeersHelper18ConfiguredCloudKitP
$s18TrustedPeersHelper28ConfiguredCuttlefishAPIAsyncP
So17OS_dispatch_queueC
$s18TrustedPeersHelper17CKOperationRunnerP
So13CKCodeServiceC
So11CKContainerC
$s18TrustedPeersHelper32ContainerNameToCKOperationRunnerP
So12CKKSNotifier_pXp
So16OTPersonaAdapter_p
_pGIegn_
GIego_
_pGIegn_
GIego_
_pGIegn_
GIego_
_pGIegn_
GIego_
_pGIegn_
GIego_
_pGIegn_
GIego_
_pGIegn_
GIego_
_pGIegn_
GIego_
_pGIegn_
GIego_
_pGIegn_
GIego_
_pGIegn_
GIego_
_pGIegn_
GIego_
_pGIegn_
GIego_
_pGIegn_
GIego_
_pGIegn_
GIego_
_pGIegn_
GIego_
_pGIegn_
GIego_
_pGIegn_
GIego_
_pGIegn_
GIego_
_pGIegn_
GIego_
$ss12CaseIterableP
SaySSG
ySi_
Sg_ABt
Sg_ABt
Sg_ABt
Sg_ABt
Sg_ABt
Sg_ABt
Sg_ABt
Sg_ABt
_AAt
_AAt
Sg_ABt
Sg_ABt
Sg_ABt
Sg_ABt
Sg_ABt
Sg_ABt
Sg_ABt
Si9errorCode_t
5value_t
So14TPSpecificUserC
So21OS_dispatch_semaphoreC
So22NSManagedObjectContextC
So21NSPersistentContainerC
So7TPModelC
So15TPPolicyVersionCSg
SbSg
So8CKRecordCSg
ySiG
SDySo15TPPolicyVersionC
_pSgIeggg_
ShySo15TPPolicyVersionCG
SDySo15TPPolicyVersionCSo0A8DocumentCG
SDySo15TPPolicyVersionCSo0A8DocumentCGSg
_pSgIeggg_
ShySo15TPPolicyVersionCGz_Xx
SDySo15TPPolicyVersionCSo0A8DocumentCGz_Xx
ySo15TPPolicyVersionC
ySo15TPPolicyVersionCG
ySo15TPPolicyVersionC_G
SaySo24CKKSKeychainBackedKeySetCG
SaySo12CKKSTLKShareCG
SSSgSaySo8CKRecordCGSo15TPSyncingPolicyCSg
_pSgIeggggg_
So19TPPeerPermanentInfoC
So16TPPeerStableInfoC
So6TPPeerC
So9TPVoucherC
SSSg
SgA3CSo15TPSyncingPolicyCSgAASaySo8CKRecordCGSg
_pSgIegggggggggg_
SDySS
So25TPPBSecureElementIdentityCSg
SSSg
So16TPPolicyDocumentCSg
_pSgIeggg_
SDySo15TPPolicyVersionCSo0A8DocumentCGSg
So15TPSyncingPolicyC
So8NSStringCSgSo6NSDataCSgA3FSo15TPSyncingPolicyCSgSo7NSErrorCSgIeyByyyyyyy_
SSSg
SgA3CSo15TPSyncingPolicyCSg
_pSgIegggggggg_
So17OTAccountSettingsCSg
So22TrustedPeersHelperPeerC
_pSgIegg_
So20NSFetchRequestResult_p
yypG
So27TrustedPeersHelperPeerStateCSgSo15TPSyncingPolicyCSg
_pSgIegggg_
So16TPPeerStableInfoCSg
SaySo8CKRecordCGSg
_pSgIeggg_
So27TrustedPeersHelperPeerStateCSg
_pSgIeggg_
SDySSSo25TPPBPeerStableInfoSettingCGSg
_pSgIeggg_
S4bSo26OTEscrowMoveRequestContextCSg
_pSgIegyyyygg_
ySo12CKKSTLKShareCSgG
So12CKKSTLKShareCSg
So8CKKSPeer_p
So15TPSyncingPolicyCSg
_pSgIeggyg_
ySaySSG_ABt
_pGIegg_
ySaySSG_ABt
ySay
_pGIegg_
ySay
SgSSSgAB
_pSgIeggggg_
ShySSG
SgAB
_pSgIegggg_
SgABSaySo12CKKSTLKShareCGSgSo35TrustedPeersHelperTLKRecoveryResultCSg
_pSgIegggggg_
SaySo12CKKSTLKShareCGSgSo35TrustedPeersHelperTLKRecoveryResultCSg
_pSgIegggg_
SaySo21CKKSKeychainBackedKeyCG
So35TrustedPeersHelperTLKRecoveryResultC
SaySo8CKRecordCGSgSo38TrustedPeersHelperCustodianRecoveryKeyCSg
_pSgIegggg_
SaySo8CKRecordCG
_pSgIegyg_
ypGSg
_pSgIeggg_
ySS_SStG
SDyS2SG
SDySSypG
ySS_yptG
ySnySiGG
SaySDySSypGG
ySo9TPVoucherC_G
SayypG
ySDySSypGG
So27TrustedPeersHelperPeerStateCSgSaySo0abcD0CGSg
_pSgIegggg_
So27TrustedPeersHelperPeerStateCSg
So31TrustedPeersHelperEgoPeerStatusC
_pSgIeggg_
Sbz_Xx
z_Xx
So19TPPeerPermanentInfoCSg
SDySSSo8NSNumberCG
So7TPModelCSg
So28NSPersistentStoreDescriptionC
So51TrustedPeersHelperIntendedTPPBSecureElementIdentityCSg
So25TPPBPeerStableInfoSettingCSg
So21NSXPCListenerEndpointCSg
So7NSErrorCSgIeyByy_
So14TPSpecificUserCSg
ySS_
So7NSErrorCSgIeyBy_
So12NSDictionaryCSgSo7NSErrorCSgIeyByy_
So6NSDataCSgSo7NSErrorCSgIeyByy_
_pSgIeggg_
A3ASo26OTEscrowMoveRequestContextCSgSo7NSErrorCSgIeyByyyyyy_
So7NSArrayCSgSo38TrustedPeersHelperCustodianRecoveryKeyCSgSo7NSErrorCSgIeyByyy_
So7NSArrayCSgSo7NSErrorCSgIeyByy_
So15TPSyncingPolicyCSg
So7NSErrorCSgIeyByyy_
So6NSDataCSgSo8NSStringCSgACSo7NSErrorCSgIeyByyyy_
_pSgIeggg_
So7NSArrayCSgACSo7NSErrorCSgIeyByyy_
So27TrustedPeersHelperPeerStateCSgSo7NSErrorCSgIeyByy_
So27TrustedPeersHelperPeerStateCSgSo15TPSyncingPolicyCSgSo7NSErrorCSgIeyByyy_
So8NSStringCSgSo7NSArrayCSgSo15TPSyncingPolicyCSgSo7NSErrorCSgIeyByyyy_
SSSgSaySo8CKRecordCGSgSo15TPSyncingPolicyCSg
_pSgIeggggg_
So6NSDataCSgACSo7NSArrayCSgSo35TrustedPeersHelperTLKRecoveryResultCSgSo7NSErrorCSgIeyByyyyy_
So7NSArrayCSgSo35TrustedPeersHelperTLKRecoveryResultCSgSo7NSErrorCSgIeyByyy_
So8NSStringCSgSo15TPSyncingPolicyCSgSo7NSErrorCSgIeyByyy_
So8NSStringCSgSo15TPSyncingPolicyCSg
So7NSErrorCSgIeyByyyy_
So6NSDataCSgACSo7NSErrorCSgIeyByyy_
So8NSStringCSgSo6NSDataCSgA3FSo15TPSyncingPolicyCSgACSo7NSArrayCSgSo7NSErrorCSgIeyByyyyyyyyy_
So7NSErrorCSgIeyByy_
So5NSSetCSgSo7NSErrorCSgIeyByy_
ShySSGSg
_pSgIeggg_
So27TrustedPeersHelperPeerStateCSgSo7NSArrayCSgSo7NSErrorCSgIeyByyy_
So31TrustedPeersHelperEgoPeerStatusCSo7NSErrorCSgIeyByy_
$s18TrustedPeersHelper18CuttlefishAPIAsyncP
$s18TrustedPeersHelper27CuttlefishAPIAsyncOperationP
So9_SFAESKeyC
So15NSManagedObjectC
$ss12IdentifiableP
rawValue
RawValue
peerKeys
tpCustodian
tpInheritance
OTErrorDeserializationFailure
OTErrorDecryptionFailure
OTErrorKeyInstantiation
OTErrorKeyMismatch
OTErrorRecoveryCreation
OTErrorAuthCipherTextCreation
OTErrorPrivateKeyCreation
OTErrorRecoveryKeyCreation
OTErrorEntropyCreation
OTErrorEntropyKeyMismatch
encryptionKey
signingKey
failedToSaveToKeychain
unsupportedKeyType
corecryptoKeyGeneration
keyGeneration
itemDoesNotExist
failedToGenerateRandomKey
version
policyData
plaintextPolicy
encryptionKey
signingKey
peerID
publicEncryptionKey
publicSigningKey
encryptionVerificationKey
signingVerificationKey
noPublicKeys
underlyingCKOperationRunner
queue
underlyingCodeService
ckContainer
ckCodeOperationRunnerCreator
darwinNotifier
personaAdapter
containers
RawValue
AllCases
UNRECOGNIZED
classA
classC
unknown
userInitiatedReset
healthCheck
noBottleDuringEscrowRecovery
legacyJoinCircle
recoveryKey
testGenerated
supportAppInitiatedReset
byOctagonOnly
noAction
postRepairAccount
postRepairEscrow
resetOctagon
leaveTrust
healthy
broken
valid
invalid
sosViableUnknown
sosViable
sosNotViable
peerPermanentInfo
unknownFields
peerStableInfo
peerDynamicInfo
voucher
recoveryVoucher
custodianRecoveryKey
peerID
vouchers
_permanentInfoAndSig
_stableInfoAndSig
_dynamicInfoAndSig
_recoveryVoucher
_custodianRecoveryKeyAndSig
operation
remove
update
view
curve
epoch
keyUuid
poisoned
receiver
receiverPublicEncryptionKey
sender
signature
version
wrappedkey
uuid
parentkeyUuid
keyclass
wrappedkeyBase64
uploadOsVersion
_storage
_tlk
_classA
_classC
contents
escrowedSigningSpki
signatureUsingEscrowKey
signatureUsingPeerKey
bottleID
changeToken
differences
recoverySigningPubKey
recoveryEncryptionPubKey
more
hash
value
_key
allPeersCount
invalidPeersCount
missingPeers
peerName
views
serialNumber
machineID
octagonSigningKey
octagonEncryptionKey
validPeer
escrowRecordID
osVersion
peers
included
excluded
preapprovals
graphValid
graphValidationError
peerGraph
trustedPeers
label
deviceMid
deviceName
remainingAttempts
escrowRecords
name
success
accountHealth
failureDescription
result
tlkShare
octagon
escrow
resetReason
idmsTargetContext
idmsCuttlefishPassword
testingNotifyIdms
_changes
zoneKeyHierarchyRecords
tlkShares
viewKeys
filterRequest
viableBottles
partialBottles
legacyRecords
_keys
keys
entries
validatorsHealth
results
stateMachineState
octagonEgoIdentity
octagonTrustState
deviceMachineID
octagonPeerID
sosTrustState
sosPeerID
requiresEscrowCheck
knownFederations
escrowRecordLabel
currentFederation
intendedFederation
repairAction
_escrowRecordMoveRequest
enabled
_lastReport
status
modelID
_lastHealthReport
devices
passwordKeychainItemCount
trustedRootCertVersions
federations
certdata
certificates
silentAttemptAllowed
recordStatus
viabilityStatus
federationID
expectedFederationID
_creationDate
_escrowInformationMetadata
secureBackupNumericPassphraseLength
secureBackupUsesComplexPassphrase
secureBackupUsesNumericPassphrase
deviceColor
deviceEnclosureColor
deviceModel
deviceModelClass
deviceModelVersion
devicePlatform
_secureBackupMetadataTimestamp
cloudIdentity
_view
_newTlk
_newClassA
_newClassC
_oldTlk
_escrowRecordID
_bottle
_record
_peer
_viewKeys
_tlkShares
_changeToken
_peerID
_backupKeybagDigest
_clientMetadata
_secureBackupUsesMultipleIcscs
_bottleID
_secureBackupTimestamp
_escrowedSpki
_peerInfo
_serial
sponsorNotRegistered
unknownPolicyVersion
preparedIdentityNotOnAllowedList
failedToLoadSecret
failedToStoreSecret
unknownSyncUserControllableViewsValue
peerRegisteredButNotStored
configuredContainerDoesNotMatchSpecifiedUser
unableToCreateKeyPair
noPreparedIdentity
failedToStoreIdentity
needsAuthentication
missingStableInfo
missingDynamicInfo
nonMember
invalidPermanentInfoOrSig
invalidStableInfoOrSig
invalidVoucherOrSig
couldNotLoadAllowedList
noPeersPreapprovePreparedIdentity
policyDocumentDoesNotValidate
tooManyBottlesForPeer
noBottleForPeer
restoreBottleFailed
noBottlesForEscrowRecordID
bottleDoesNotContainContents
bottleDoesNotContainEscrowKeySignature
bottleDoesNotContainerPeerKeySignature
bottleDoesNotContainPeerID
failedToCreateBottledPeer
signatureVerificationFailed
bottleDoesNotContainerEscrowKeySPKI
failedToFetchEscrowContents
failedToCreateRecoveryKey
untrustedRecoveryKeys
noBottlesPresent
recoveryKeysNotEnrolled
bottleCreatingPeerNotFound
unknownCloudKitError
cloudkitResponseMissing
failedToLoadSecretDueToType
failedToAssembleBottle
invalidPeerID
unknownSecurityFoundationError
failedToSerializeData
unknownInternalError
noPeersPreapprovedBySelf
noSpecifiedUser
failedToGetPeerViews
cannotCreateRecoveryKeyPeer
noEscrowCache
recoveryKeyIsNotCorrect
name
cuttlefish
semaphore
persistentContainer
containerMO
model
escrowCacheTimeout
policyVersionOverride
testIgnoreCustodianUpdates
testDontSetAccountSetting
darwinNotifier
container
context
deviceName
serialNumber
osVersion
policyVersion
policySecrets
setSyncUserControllableViews
secureElementIdentity
walrusSetting
webAccess
endpoint
containerMap
codeService
encryptionKey
signingKey
symmetricKey
secret
bottleSalt
failedToSaveToKeychain
unsupportedKeyType
corecryptoKeyGeneration
keyGeneration
itemDoesNotExist
escrowKeys
secret
peerID
bottleID
peerKeys
signatureUsingEscrowKey
signatureUsingPeerKey
escrowSigningPublicKey
escrowSigningSPKI
peersigningSPKI
contents
OTErrorDeserializationFailure
OTErrorDecryptionFailure
OTErrorKeyInstantiation
OTErrorKeyMismatch
OTErrorBottleCreation
OTErrorAuthCipherTextCreation
OTErrorPrivateKeyCreation
OTErrorEscrowKeyCreation
OTErrorEntropyCreation
OTErrorEntropyKeyMismatch
NSXPCListenerDelegate
CKKSNotifier
OTPersonaAdapter
NSFetchRequestResult
CKKSPeer
TrustedPeersHelperProtocol
NSObject
TPDecrypter
CKKSSelfPeer
Octagon
OTPersonaActualAdapter
OTEscrowMoveRequestContext
NSCopying
CKKSBaseAESSIVKey
CKKSWrappedAESSIVKey
NSSecureCoding
NSCoding
CKKSAESSIVKey
OTEscrowRecordMetadata
SecurityFoundation
OTEscrowRecord
TPSpecificUser
OTAuthenticatedCiphertext
TrustedPeersHelperPeerState
TrustedPeersHelperEgoPeerStatus
TrustedPeersHelperPeer
TrustedPeersHelperCustodianRecoveryKey
TrustedPeersHelperTLKRecoveryResult
CKKSTLKShare
CKKSNotifyPostNotifier
OTPrivateKey
CKKS
TrustedPeersHelperIntendedTPPBSecureElementIdentity
OTBottle
TPHObjectiveC
OTEscrowRecordMetadataClientMetadata
OTRecovery
CKKSSelves
CKKSActualPeer
CKKSRemotePeerProtocol
CKKSSOSPeer
CKKSSOSPeerProtocol
CKKSSOSSelfPeer
CKKSKeychainBackedKey
CKKSKeychainBackedKeySet
OTBottleContents
CKKSSerializedKey
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v24@0:8@16
v24@0:8@"NSString"16
B16@0:8
@16@0:8
v32@0:8@16@?24
@"NSString"16@0:8
v32@0:8@"NSString"16@?<v@?>24
B24@0:8@16
B24@0:8@"<CKKSPeer>"16
@"_SFECPublicKey"16@0:8
v24@0:8@?16
v40@0:8@16@24@?32
v60@0:8@16q24@32@40B48@?52
v44@0:8@16@24B32@?36
v148@0:8@16Q24@32@40@48@56@64@72@80@88@96i104@108@116@124@132@?140
v56@0:8@16@24@32@40@?48
v80@0:8@16@24@32@40@48@56@64@?72
v64@0:8@16@24@32@40@48@?56
v48@0:8@16@24@32@?40
v72@0:8@16@24@32@40@48@56@?64
v108@0:8@16B24@28@36@44@52@60@68@76@84@92@?100
v40@0:8@16q24@?32
v68@0:8@16@24@32@40@48i56@?60
v44@0:8@16B24@28@?36
v52@0:8@16@24@32B40@?44
v36@0:8@16B24@?28
v24@0:8@?<v@?>16
v32@0:8@"TPSpecificUser"16@?<v@?@"NSDictionary"@"NSError">24
v32@0:8@"TPSpecificUser"16@?<v@?@"NSError">24
v40@0:8@"TPSpecificUser"16@"NSSet"24@?<v@?@"NSError">32
v32@0:8@"TPSpecificUser"16@?<v@?@"TrustedPeersHelperEgoPeerStatus"@"NSError">24
v60@0:8@"TPSpecificUser"16q24@"NSString"32@"NSString"40B48@?<v@?@"NSError">52
v44@0:8@"TPSpecificUser"16@"NSSet"24B32@?<v@?B@"NSError">36
v40@0:8@"TPSpecificUser"16@"NSArray"24@?<v@?@"NSError">32
v32@0:8@"TPSpecificUser"16@?<v@?@"NSSet"@"NSError">24
v32@0:8@"TPSpecificUser"16@?<v@?Q@"NSError">24
v148@0:8@"TPSpecificUser"16Q24@"NSString"32@"NSString"40@"NSString"48@"NSString"56@"NSString"64@"NSString"72@"NSString"80@"TPPolicyVersion"88@"NSDictionary"96i104@"TPPBSecureElementIdentity"108@"OTAccountSettings"116@"NSData"124@"NSData"132@?<v@?@"NSString"@"NSData"@"NSData"@"NSData"@"NSData"@"TPSyncingPolicy"@"NSError">140
v148@0:8@"TPSpecificUser"16Q24@"NSString"32@"NSString"40@"NSString"48@"NSString"56@"NSString"64@"NSString"72@"NSString"80@"TPPolicyVersion"88@"NSDictionary"96i104@"TPPBSecureElementIdentity"108@"NSData"116@"NSData"124@"TrustedPeersHelperCustodianRecoveryKey"132@?<v@?@"NSString"@"NSData"@"NSData"@"NSData"@"NSData"@"TPSyncingPolicy"@"NSString"@"NSArray"@"NSError">140
v56@0:8@"TPSpecificUser"16@"NSArray"24@"NSArray"32@"NSArray"40@?<v@?@"NSString"@"NSArray"@"TPSyncingPolicy"@"NSError">48
v80@0:8@"TPSpecificUser"16@"NSString"24@"NSData"32@"NSData"40@"NSData"48@"NSData"56@"NSArray"64@?<v@?@"NSData"@"NSData"@"NSError">72
v40@0:8@"TPSpecificUser"16@"NSString"24@?<v@?@"NSString"@"TPSyncingPolicy"B@"NSError">32
v64@0:8@"TPSpecificUser"16@"NSString"24@"NSData"32@"NSString"40@"NSArray"48@?<v@?@"NSData"@"NSData"@"NSArray"@"TrustedPeersHelperTLKRecoveryResult"@"NSError">56
v48@0:8@"TPSpecificUser"16@"NSString"24@"NSString"32@?<v@?@"NSString"@"TPSyncingPolicy"@"NSError">40
v40@0:8@"TPSpecificUser"16@"TrustedPeersHelperCustodianRecoveryKey"24@?<v@?@"NSString"@"TPSyncingPolicy"@"NSError">32
v56@0:8@"TPSpecificUser"16@"NSString"24@"NSString"32@"NSArray"40@?<v@?@"NSData"@"NSData"@"NSArray"@"TrustedPeersHelperTLKRecoveryResult"@"NSError">48
v48@0:8@"TPSpecificUser"16@"TrustedPeersHelperCustodianRecoveryKey"24@"NSArray"32@?<v@?@"NSArray"@"TrustedPeersHelperTLKRecoveryResult"@"NSError">40
v48@0:8@"TPSpecificUser"16@"TrustedPeersHelperCustodianRecoveryKey"24@"NSArray"32@?<v@?@"NSData"@"NSData"@"NSArray"@"TrustedPeersHelperTLKRecoveryResult"@"NSError">40
v72@0:8@"TPSpecificUser"16@"NSData"24@"NSData"32@"NSArray"40@"NSArray"48@"NSArray"56@?<v@?@"NSString"@"NSArray"@"TPSyncingPolicy"@"NSError">64
v40@0:8@"TPSpecificUser"16@"NSArray"24@?<v@?B@"NSError">32
v108@0:8@"TPSpecificUser"16B24@"NSString"28@"NSString"36@"NSString"44@"NSNumber"52@"NSDictionary"60@"NSNumber"68@"TrustedPeersHelperIntendedTPPBSecureElementIdentity"76@"TPPBPeerStableInfoSetting"84@"TPPBPeerStableInfoSetting"92@?<v@?@"TrustedPeersHelperPeerState"@"TPSyncingPolicy"@"NSError">100
v40@0:8@"TPSpecificUser"16@"NSArray"24@?<v@?@"TrustedPeersHelperPeerState"@"NSError">32
v48@0:8@"TPSpecificUser"16@"NSArray"24@"NSArray"32@?<v@?@"NSArray"@"NSError">40
v40@0:8@"TPSpecificUser"16q24@?<v@?@"NSArray"@"NSArray"@"NSError">32
v40@0:8@"TPSpecificUser"16q24@?<v@?@"NSArray"@"NSError">32
v32@0:8@"TPSpecificUser"16@?<v@?@"NSData"@"NSString"@"NSData"@"NSError">24
v40@0:8@"TPSpecificUser"16@"NSSet"24@?<v@?@"NSDictionary"@"NSError">32
v40@0:8@"TPSpecificUser"16@"NSString"24@?<v@?@"NSArray"@"NSError">32
v44@0:8@"TPSpecificUser"16@"NSString"24B32@?<v@?@"TPSyncingPolicy"i@"NSError">36
v32@0:8@"TPSpecificUser"16@?<v@?@"TrustedPeersHelperPeerState"@"NSArray"@"NSError">24
v56@0:8@"TPSpecificUser"16@"NSString"24@"NSString"32@"NSArray"40@?<v@?@"NSArray"@"NSError">48
v68@0:8@"TPSpecificUser"16@"NSString"24@"NSString"32@"NSArray"40@"NSUUID"48i56@?<v@?@"NSArray"@"TrustedPeersHelperCustodianRecoveryKey"@"NSError">60
v40@0:8@"TPSpecificUser"16@"NSUUID"24@?<v@?@"NSError">32
v48@0:8@"TPSpecificUser"16@"NSString"24@"NSString"32@?<v@?@"NSError">40
v44@0:8@"TPSpecificUser"16B24@"NSArray"28@?<v@?BBBB@"OTEscrowMoveRequestContext"@"NSError">36
v32@0:8@"TPSpecificUser"16@?<v@?@"NSData"@"NSError">24
v52@0:8@"TPSpecificUser"16@"NSString"24@"NSString"32B40@?<v@?@"NSError">44
v36@0:8@"TPSpecificUser"16B24@?<v@?@"NSDictionary"@"NSError">28
v32@0:8@"TPSpecificUser"16@?<v@?B@"NSError">24
v48@0:8@"TPSpecificUser"16@"NSString"24@"NSString"32@?<v@?B@"NSError">40
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@40@0:8@16@24^@32
@"NSData"40@0:8@"NSData"16@"NSData"24^@32
@"_SFECKeyPair"16@0:8
B24@0:8q16
d16@0:8
v24@0:8d16
@24@0:8^{_NSZone=}16
v16@0:8
@"NSString"
@32@0:8*16Q24
@24@0:8@16
[80C]
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^@16
@32@0:8@16^@24
B72@0:8r^{ccmode_siv=QQ^?^?^?^?^?^{ccmode_cbc}^{ccmode_ctr}}16@24@32*40Q48@56^@64
v24@0:8Q16
v20@0:8B16
@"NSData"
@"OTEscrowRecordMetadataClientMetadata"
{?="secureBackupTimestamp"b1"secureBackupUsesMultipleIcscs"b1}
^{__SecKey=}24@0:8@16
i16@0:8
v20@0:8i16
@20@0:8i16
i24@0:8@16
@"OTEscrowRecordMetadata"
{?="coolOffEnd"b1"creationDate"b1"remainingAttempts"b1"silentAttemptAllowed"b1"recordStatus"b1"recordViability"b1"recoveryStatus"b1"viabilityStatus"b1}
@60@0:8@16@24@32@40B48@52
@68@0:8@16B24Q28B36B40@44@52@60
@"TPPBPeerStableInfoSetting"
@64@0:8@16@24Q32@40@48B56B60
@"NSDictionary"
@56@0:8@16@24@32@40@48
@"NSSet"
@"TPPBSecureElementIdentity"
@60@0:8@16@24@32@40@48i56
@40@0:8@16q24@32
q16@0:8
v24@0:8q16
@64@0:8@16@24@32q40q48^@56
@80@0:8@16@24@32q40Q48q56q64@72
@104@0:8@16@24@32@40q48Q56q64q72@80@88@96
B48@0:8@16@24@32^@40
B40@0:8@16@24^@32
@48@0:8@16@24@32^@40
@"CKRecordZoneID"
@"OTAuthenticatedCiphertext"
^{ccec_full_ctx=^{ccec_cp}[0{ccec_projective_point=[1Q]}]}16@0:8
v24@0:8^v16
{?="devicePlatform"b1"secureBackupMetadataTimestamp"b1"secureBackupNumericPassphraseLength"b1"secureBackupUsesComplexPassphrase"b1"secureBackupUsesNumericPassphrase"b1}
@32@0:8@16@24
@"<CKKSSelfPeer>"
B24@0:8@"NSString"16
@48@0:8@16@24@32@40
@"_SFECPublicKey"
@"_SFECKeyPair"
@56@0:8@16@24@32@40^@48
@72@0:8@16@24@32@40@48@56^@64
@40@0:8@16^B24^@32
@64@0:8@16@24@32@40@48@56
B32@0:8@16^@24
B24@0:8^@16
B28@0:8B16^@20
@"NSString<SecCKKSKeyClass>"
@"CKKSWrappedAESSIVKey"
@"CKKSAESSIVKey"
@44@0:8@16@24@32B40
@"CKKSKeychainBackedKey"
@"OTPrivateKey"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.TrustedPeersHelper</string>
<key>aps-environment</key>
<string>serverPreferred</string>
<key>com.apple.application-identifier</key>
<string>com.apple.TrustedPeersHelper</string>
<key>com.apple.developer.aps-environment</key>
<string>serverPreferred</string>
<key>com.apple.developer.icloud-container-environment</key>
<string>Production</string>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudKit</string>
</array>
<key>com.apple.private.appleaccount.app-hidden-from-icloud-settings</key>
<true/>
<key>com.apple.private.cloudkit.allowUnverifiedAccount</key>
<true/>
<key>com.apple.private.cloudkit.buddyAccess</key>
<true/>
<key>com.apple.private.cloudkit.customAccounts</key>
<true/>
<key>com.apple.private.cloudkit.prefix</key>
<string>com.apple.security.cuttlefish</string>
<key>com.apple.private.cloudkit.spi</key>
<true/>
<key>com.apple.private.cloudkit.supportservice</key>
<true/>
<key>com.apple.private.cloudkit.systemService</key>
<true/>
<key>com.apple.private.security.storage.Keychains</key>
<true/>
<key>com.apple.security.exception.files.absolute-path.read-write</key>
<array>
<string>/private/var/Keychains/</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.accountsd.accountmanager</string>
<string>com.apple.mobile.usermanagerd.xpc</string>
<string>com.apple.security.sfkeychainserver</string>
<string>com.apple.securityd</string>
</array>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.TrustedPeersHelper</string>
<string>com.apple.security</string>
</array>
<key>com.apple.security.ts.cloudkit-client</key>
<true/>
<key>com.apple.symptom_diagnostics.report</key>
<true/>
<key>com.apple.usermanagerd.persona.fetch</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>com.apple.security.sos</string>
<string>com.apple.security.ckks</string>
<string>com.apple.security.octagon</string>
<string>com.apple.security.egoIdentities</string>
</array>
<key>seatbelt-profiles</key>
<array>
<string>temporary-sandbox</string>
</array>
</dict>
</plist>
application-identifier
com.apple.TrustedPeersHelper0"
aps-environment
serverPreferred0@ com.apple.application-identifier
com.apple.TrustedPeersHelper06#com.apple.developer.aps-environment
serverPreferred0>0com.apple.developer.icloud-container-environment
Production01#com.apple.developer.icloud-services0
CloudKit0C>com.apple.private.appleaccount.app-hidden-from-icloud-settings
061com.apple.private.cloudkit.allowUnverifiedAccount
0+&com.apple.private.cloudkit.buddyAccess
0.)com.apple.private.cloudkit.customAccounts
0B!com.apple.private.cloudkit.prefix
com.apple.security.cuttlefish0#
com.apple.private.cloudkit.spi
0.)com.apple.private.cloudkit.supportservice
0-(com.apple.private.cloudkit.systemService
01,com.apple.private.security.storage.Keychains
0X;com.apple.security.exception.files.absolute-path.read-write0
/private/var/Keychains/0
4com.apple.security.exception.mach-lookup.global-name0
"com.apple.accountsd.accountmanager!com.apple.mobile.usermanagerd.xpc#com.apple.security.sfkeychainserver
com.apple.securityd0o9com.apple.security.exception.shared-preference.read-write02
com.apple.TrustedPeersHelper
com.apple.security0*%com.apple.security.ts.cloudkit-client
0)$com.apple.symptom_diagnostics.report
0)$com.apple.usermanagerd.persona.fetch
keychain-access-groups0o
com.apple.security.sos
com.apple.security.ckks
com.apple.security.octagon com.apple.security.egoIdentities0(
seatbelt-profiles0
temporary-sandbox
Received unexpected Universal/Managed/other persona; treating as not for primary account: %@(%d)
Unable to adopt persona %@: %@
Adopted persona for id '%@'
TrustedPeersHelperSetupProtocol failed, continuing, but you might crash later: %@
no signing key for peer: %@
signature didn't verify for %@ %@: %@
couldn't share %@ (wrap failed): %@
couldn't share %@ (signing failed): %@
posting notification %@
couldn't wrap key: %@
loaded a piggy TLK (%@)
loaded a stashed TLK (%@)
Unable to unbase64 key: %@
Resaving %@ as per request
Resaving %@ failed: %@
full
full
watch
full
full
full
watch
full
full
full
watch
full
full
full
watch
full
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
audio
full
watch
full
watch
audio
full
watch
full
watch
full
watch
audio
full
watch
full
watch
full
watch
full
watch
full
watch
audio
full
watch
full
watch
full
watch
full
watch
full
watch
audio
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
audio
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
audio
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
audio
full
watch
full
watch
audio
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
audio
full
watch
audio
full
watch
full
watch
audio
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
audio
full
watch
full
watch
full
watch
full
watch
audio
full
watch
full
watch
full
watch
full
watch
audio
full
watch
full
watch
full
watch
full
watch
full
watch
audio
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
audio
full
watch
full
watch
audio
full
watch
full
watch
full
watch
audio
full
watch
full
watch
full
watch
full
watch
full
watch
audio
full
watch
full
watch
full
watch
full
watch
audio
full
watch
full
watch
full
watch
full
watch
audio
full
watch
Applications
Backstop
CreditCards
Passwords
WiFi
Passwords
full
watch
audio
full
watch
audio
full
watch
full
watch
full
watch
audio
full
watch
full
watch
full
watch
full
watch
full
watch
audio
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
audio
full
watch
full
watch
Applications
Backstop
CreditCards
Passwords
WiFi
Passwords
full
watch
windows
full
watch
audio
full
watch
windows
full
watch
full
watch
audio
full
watch
full
watch
full
watch
full
watch
windows
full
watch
audio
full
watch
full
watch
full
watch
full
watch
audio
full
watch
full
watch
full
watch
full
watch
full
watch
audio
full
watch
Applications
Backstop
CreditCards
Passwords
WiFi
Passwords
full
watch
windows
full
watch
audio
full
watch
windows
full
watch
audio
full
watch
audio
full
watch
full
watch
full
watch
full
watch
windows
full
watch
audio
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
audio
Applications
Backstop
CreditCards
Passwords
WiFi
Passwords
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
audio
windows
full
watch
audio
full
watch
full
watch
full
watch
windows
windows
full
watch
audio
full
watch
full
watch
audio
full
watch
audio
full
watch
full
watch
full
watch
full
watch
Applications
Backstop
CreditCards
Passwords
WiFi
Passwords
Passwords
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
audio
windows
full
watch
audio
full
watch
full
watch
full
watch
full
watch
windows
windows
full
watch
audio
full
watch
full
watch
audio
full
watch
audio
full
watch
full
watch
full
watch
full
watch
Applications
Backstop
CreditCards
Passwords
WiFi
Passwords
Passwords
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
audio
windows
full
watch
audio
full
watch
full
watch
full
watch
full
watch
windows
windows
full
watch
audio
full
watch
full
watch
audio
full
watch
audio
full
watch
full
watch
full
watch
full
watch
Applications
Backstop
CreditCards
Passwords
WiFi
Passwords
Passwords
SignedVoucher
Peer
PeerDifference
TLKShare
ViewKey
ViewKeys
ViewKeysRecords
Bottle
EscrowPair
Changes
ValidateSOSPeer
ValidationSOS
ResetRequest
ResetResponse
SupportAppView
Federation
ClubCertificate
