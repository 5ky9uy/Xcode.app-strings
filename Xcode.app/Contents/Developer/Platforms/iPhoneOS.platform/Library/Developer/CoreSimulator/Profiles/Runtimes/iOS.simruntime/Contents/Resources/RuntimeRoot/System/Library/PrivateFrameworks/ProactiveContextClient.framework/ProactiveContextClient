@(#)PROGRAM:ProactiveContextClient  PROJECT:AppPrediction-1
v16@?0@"ATXModeAnchorModelSuggestionServerGuardedData"8
-[ATXModeAnchorModelSuggestionServer fetchCombinedSuggestionScoreForModeWithUUID:modeType:origin:originBundleId:originAnchorType:confidenceScore:secondsSinceSuggested:serializedTriggers:completionHandler:]_block_invoke_2
v16@?0@"NSError"8
-[ATXModeAnchorModelSuggestionServer fetchCombinedSuggestionScoreAndFlagsForModeWithUUID:modeType:origin:originBundleId:originAnchorType:confidenceScore:secondsSinceSuggested:serializedTriggers:completionHandler:]_block_invoke_2
v8@?0
Home
Work
School
currentLOI
previousLOI
lastUpdateDate
predictedNextLOIs
predictedExitTimes
locationsOfInterest
v16@?0@"ATXLocationOfInterest"8
focus-mode
C9FC4298-DE04-494A-9791-71AB71B52E27
00000000-0000-0000-0000-000000000000
FFFFFFFF-FFFF-FFFF-FFFF-FFFFFFFFFFFF
B16@?0@"BMStoreEvent"8
v16@?0@"BPSCompletion"8
v16@?0@"BMStoreEvent"8
com.apple.BiomeMicroLocationRestrictedLocalizationEvent.queue
FocusModes.Microlocation
iTunesCategory
location
namedLOI
timeComponents
microLocationUUID
audioDeviceIdentifier
bluetoothDeviceIdentifier
bluetoothDeviceName
@"<ATXTrigger>"16@?0@"NSData"8
@"NSData"16@?0@"<ATXTrigger>"8
com.apple.BiomeScreenShare.queue
FocusModes.ScreenShare
com.apple.proactive.ModeAnchorModelSuggestion.xpc
modeUUID
isStart
anchorType
score
numUniqueOccurrencesAfterAnchor
posteriorProbability
classConditionalProbability
triggers
com.apple.BiomeGameController.queue
FocusModes.GameController
com.apple.iBooks
FocusModes.ReadingMode
%@ %@
uuid
type
mode
intValue
strValue
startDate
endDate
jsonMeta
origin
originBundleId
-[ATXModePBEvent writeTo:]
ATXModePBEvent.m
nil != self->_uuid
ModeChange
StartsUp
(unknown: %i)
Custom
Unknown
Default
Working
Exercising
Driving
Bedtime
Gaming
Reading
Traveling
Learning
Streaming
ScreenSharing
ScreenRecording
AirPlayMirroring
Mindfulness
None
CoreMotion
CarPlay
DNDWD
CoreRoutine
Sleep
AppLaunch
WatchWorkout
WFHClassifier
Calendar
version
modeRecord
-[ATXModeScheduler runAfterDelaySecondsIfNotYetScheduled:]
Screen Sharing
Screen Recording
AirPlay Mirroring
Subclasses should implement -[ATXModeAppLaunchFeaturizer expectedGenreId]
Subclasses should implement -[ATXModeAppLaunchFeaturizer modeFeatureType]
Subclasses should implement -[ATXModeAppLaunchFeaturizer registrationId]
com.apple.BiomeAppLaunch.queue
v24@?0@"NSArray"8@"NSError"16
v32@?0@"RTSource"8Q16^B24
v24@?0q8@"NSError"16
ATXMicrolocationRecordingTriggerTimeBufferKey
com.apple.proactive.ProactiveContextClient.ATXMicrolocationRecordingTrigger.queue
ATXMicrolocationRecordingTrigger.Modes.%@.%@
v20@?0B8@"NSError"12
75BF0CD2-AB18-4E42-AD01-3D5CAADFDFF1
ATXMotionTypeWalking
ATXMotionTypeRunning
ATXMotionTypeCycling
ATXMotionTypeDriving
ATXMotionTypeUnknown
stringForMotionType called with invalid ATXMotionType of %tu
Error
com.apple.duetexpertd
workout-mode-identifier
v24@?0@"NSString"8@"NSDictionary"16
_HKWorkoutSessionStateName
HKWorkout
Unable to find class %s
ATXLocationManagerState
contextstored
-unrestricted
v12@?0i8
v16@?0@"ATXModeClassifierGuardedData"8
v28@?0@"NSNumber"8B16B20B24
v16@?0@"NSNumber"8
ATXPOICategoryVisitEvent categories: %@, startDate: %@, endDate: %@ hasExited: %d
unknown
com.apple.DuetExpertCenter.ProactiveContextClient
mode configurations
v32@?0@"NSString"8@"DNDModeConfiguration"16^B24
DNDModeConfigurationService
DNDModeConfiguration
com.apple.proactive.ATXPOICategoryVisitDataProvider.subscribe
ATXPOICategoryVisitDataProvider.subscribe.
v32@?0@"NSString"8Q16^B24
FocusModes.GamingMode
work
v32@?0@"EKEvent"8Q16^B24
B16@?0@"EKEvent"8
SGEventMetadataKey
userID
events
timezone
timestamp
com.apple.proactive.ProactiveContextClient.ATXMicrolocationLocalization.queue
com.apple.duetexpertd.modes
v32@?0@"NSNumber"8@16^B24
v28@?0i8@12^B20
archive contains illegal nil value for key "%@"
key "%@" not present
key "%@" maps to unexpected class
Invalid
LocationIsAtHome
LocationIsAtWork
WatchIsInWorkout
IsInAutoDND
IsUsingCarPlay
IsOperatingVehicle
IsInBedtime
IsGaming
IsWeekdayNineToFive
HadRecentWorkHandoff
HadMorningAlarm
HasMeetingToday
IsWithinFirstAndLastMeeting
IsWithinFirstAndLastWorkMeeting
IsReading
BundleId
IsScreenSharing
IsScreenRecording
IsGameControllerConnected
isAirPlayMirroring
IsSleepingBasedOnBacklightData
LocationIsAtGym
LocationIsAtSchool
IsPOIAtGym
IsAtWorkMicrolocation
IsCurrentlyInAWorkMeeting
IsWithinTwoWorkMeetings
com.apple.duetexpertd.atx
general
notifications
dailyroutines
modes
hero
anchor
lastModeLoggerSubmissionDate
uniqueModeUserID
en_US_POSIX
yyyy-MM-dd HH:mm:ss zzz
HH:mm
com.apple.DuetExpertCenter.AppPredictionExpert
EnableModeNotifications
RemoveModeSwitchEaseIn
RemoveModeSwitchCooldown
RemoveCalendarRefreshCoalesce
RemoveAppLaunchRequirement
RemoveLockScreenFiltersForSuggestions
DNDModeConfigurationsCache
SecondsToEngagement
SecondsToClear
AverageSecondsToEngagement
AverageSecondsToClear
numToggles
totalTime
numUnlocks
displayName
incomingMessages
outgoingMessages
incomingPhoneCalls
outgoingPhoneCalls
incomingFaceTimeAudio
outgoingFaceTimeAudio
incomingFaceTimeVideo
outgoingFaceTimeVideo
modeBackupRestoreTimeKey
modeScoreFilesUpgradeTimeKey
currentBuildForModeEntityTrainingKey
apps
contacts
widgets
com.apple.BiomeScreenRecording.queue
FocusModes.ScreenRecording
com.apple.BiomeSemanticLocation.queue
FocusModes.Routine
com.apple.BiomeBedtime.queue
FocusModes.Bedtime
ATXLocationManagerDidEnterRegionNotification
ATXLocationManagerDidExitRegionNotification
ATXLocationManagerRegionIdentifierUserInfoKey
ATXLocationManager_LOIUpdateQueue
v16@?0@"ATXLocationManagerGuardedData"8
v16@?0@"ATXLocationManagerState"8
horizontalAccuracy > kPreciseHorizontalAccuracyThreshold
horizontalAccuracy > kHorizontalAccuracyThreshold
location is valid, horizontal accuracy is valid, and last update was recent
location nil or horizontalAccuracy too large or timestamp too old
v24@?0{?=dd}8
v32@?0{?=dd}8d24
v24@?0@"CLLocation"8@"NSError"16
current
v24@?0@"ATXLocationOfInterest"8@"NSError"16
predictedLOIs
<CLLocation: lat: %f, long: %f, timestamp: %f>
Local device
Synced via cloud
Paired device
User Action
Scheduled
Automation
Do Not Disturb
Exercise
Personal Time
/System/Library/LocationBundles/CoreParsec.framework
_clCallbackQueue
-[ATXLocationManagerGPSCoreLocation stateForRegion:withTimeout:]
-[ATXLocationManagerGPSCoreLocation locationManager:didDetermineState:forRegion:]
start
%lld
modeOrigin
contextVector
process
q24@?0@"_DKEvent"8@"_DKEvent"16
pap/internal
Core Motion
DNDwD
Core Routine
App Launch
Watch Workout
Anchor Model
App Launch Model
Screen Share
Game Controller Connected
Backlight Data
FocusModes.DNDWD
com.apple.BiomeDriving.queue
v16@?0@"ATXModeHeuristicClassifierGuardedData"8
Classic DND
AnchorModel
AppLaunchModel
ScreenShare
GameControllerConnected
BacklightData
v16@?0@"ATXCachedMotion"8
v16@?0@"CMMotionActivity"8
walking
running
cycling
driving
%@|stationary
@16@?0@8
@16@?0@"CMMotionActivity"8
B32@?0@8Q16^B24
ATXDefaultHeroPOICategory
@"ATXPOICategoryEnterAndExitEvents"24@?0@"ATXPOICategoryEnterAndExitEvents"8@"BMStoreEvent"16
@"ATXPOICategoryVisitEvent"16@?0@"ATXPOICategoryEnterAndExitEvents"8
v16@?0@"ATXPOICategoryVisitEvent"8
q24@?0@"BMStoreEvent"8@"BMStoreEvent"16
@"NSString"16@?0@"BMStoreEvent"8
latitude
longitude
ATXLocationOfInterest uuid:%@ visits:%@ type:%ld lat:%f long:%f
%s: error with xpc connection: %@
ATXModeAnchorModelSuggestionServer: Received %{public}lu suggestions
ATXModeAnchorModelSuggestionServer: Suggestion modeId: %{public}@, isStart: %{public}@, anchorType: %{public}@
ATXModeAnchorModelSuggestionServer: Suggestion modeUUID: %{public}@ is not configured, skipping
ATXModeAnchorModelSuggestionServer: Updated suggestion to modeUUID: %{public}@, isStart: %{public}@, anchorType: %{public}@
ATXModeAnchorModelSuggestionServer: Rejecting connection %{public}@ without entitlement %{public}@
ATXModeAnchorModelSuggestionServer: XPC connection interrupted.
ATXModeAnchorModelSuggestionServer: XPC connection invalidated.
ATXModeAnchorModelSuggestionServer: accepts XPC connection: %{public}@
[%@][%@] Requesting feature set via pull based feature provider
[%@][%@] Successfully fetched last event from BMMicroLocationRestrictedLocalizationStream
[%@][%@] Error fetching last event: %@
[%@][%@] Nil BMMicroLocationRestrictedLocalizationEvent
[%@][%@] Warning: Localization scan was unexpectedly delayed by more than %f seconds
[%@][%@] Fetching predicted Microlocation for this device
[%@][%@] Probability that this device is at a work microlocation: %{private}f
[%@][%@] Probability that this device is outside of a work microlocation: %{private}f
[%@][%@] Probability that this device is at an unknown microlocation: %{private}f
[%@][%@] Device is predicted to be at a work microlocation
[%@][%@] Device was predicted to not be at a work microlocation
[%@][%@] Pushing work microlocation prediction to mode heurisic classifier
[%@][%@] registering for real time events from the BiomeMicroLocationRestrictedLocalizationEventStream
[%@][%@] successfully finished listening to MicroLocation Localization events
[%@][%@] listening to MicroLocation Localization events: %@
[%@][%@] Received new MicroLocation Localization event: %@
Could not deserialize trigger: %@
Could not serialize trigger: %@
ATXModeScreenShareFeaturizer: done fetching last screen share event
ATXModeScreenShareFeaturizer: error fetching last screen share event: %@
ATXModeScreenShareFeaturizer: updating screen share feature: isScreenSharing: %d, isAirPlayMirroring: %d
ATXModeScreenShareFeaturizer: registering for real time events
ATXModeScreenShareFeaturizer: done listening to screen share events
ATXModeScreenShareFeaturizer: error listening to screen share events: %@
ATXModeScreenShareFeaturizer: received new screen share event, isStart: %{public}@
ATXModeGameControllerFeaturizer: done fetching last event
ATXModeGameControllerFeaturizer: error fetching last event: %@
ATXModeGameControllerFeaturizer: updating game controller feature: %d
ATXModeGameControllerFeaturizer: registering for real time events
ATXModeGameControllerFeaturizer: done listening to game controller events
ATXModeGameControllerFeaturizer: error listening to game controller events: %@
ATXModeGameControllerFeaturizer: received new game controller event, isConnected: %{public}@
%s: an operation has already been scheduled at %@. Skip this request.
%s: schedule an operation with %.2lf seconds delay
DNDModeSemanticTypeToATXActivityType: DNDModeSemanticType %lu not handled in switch statement
ATXModeAppLaunchFeaturizer: done fetching last app launch event
ATXModeAppLaunchFeaturizer: error fetching last app launch event: %@
ATXModeAppLaunchFeaturizer: Initial state: %ld
ATXModeAppLaunchFeaturizer: State after cooldown: not active
ATXModeAppLaunchFeaturizer: State after ease-in: active
ATXModeAppLaunchFeaturizer: Entering ease in period before entering state
ATXModeAppLaunchFeaturizer: Already easing in and still not in state
ATXModeAppLaunchFeaturizer: Going back to inactive state since user quit prematurely
ATXModeAppLaunchFeaturizer: Entering cool down period before exiting state
ATXModeAppLaunchFeaturizer: Going back to proper state
ATXModeAppLaunchFeaturizer: Already cooling down and still not in state
ATXModeAppLaunchFeaturizer: Unexpected state %ld %ld
ATXModeAppLaunchFeaturizer: done listening to app launch events
ATXModeAppLaunchFeaturizer: error listening to app launch events: %@
ATXModeAppLaunchFeaturizer: Could not get application (BundleId: %@) record for inferring app genre: %@
ATXModeAppLaunchFeaturizer: Genre: %llu BundleId: %@
Predicted next loi type: %ld, confidence: %lf
Predicted Exit Time: %@, uncertainty: %lf, confidence %lf
Error while fetching routine mode from CoreRoutine. Error: %@
CoreRoutine did not return any routine mode. Returning ATXRoutineModeUnknown.
[%@][%@] subscribing to %@ and %@ streams
[%@][%@] Publisher was unexpectedly nil
[%@][%@] listening to stream %@ for mode start events
[%@][%@] successfully completed listening to mode events
[%@][%@] Error encountered while listening to mode events
[%@][%@] self is nil
[%@][%@] mode event received from %@
ATXMicrolocationRecordingTrigger: sink is nil
[%@][%@] scheduler identifier: %@
[%@][%@] unable to initialize Biome Scheduler: %@
[%@][%@] Starting Microlocation recording scan
[%@][%@] Unable to find an inferred mode event or user focus computed mode event in the past %f seconds
[%@][%@] user entered mode: %{public}@
[%@][%@] Historical label donations
[%@][%@] Error: Expected to see at least two events in either the inferred mode stream or the user computed stream
[%@][%@] Labeling scans between startDate: %@ and endDate: %@ with work label
[%@][%@] Error encountered while donating historical labels: %{public}s
[%@][%@] Successfully donated historical labels
[%@][%@]  Successfully requested MiLo recording scan
[%@][%@]  Error encountered while requesting MiLo recording scan: %{public}s
[%@][%@] TriggerId was unexpectedly nil
[%@][%@] Generated triggerId: %@
[%@][%@] Donating truth label: %@ for triggerId: %@
[%@][%@] Error encountered while requesting MiLo recording scan: %{public}s
[%@][%@] Successfully donated MiLo label %@ for triggerId: %@
stringForMotionType called with invalid ATXMotionType of %tu
Could not form workout predicate
self went away
No workout payload: %@
Workout payload is not dictionary: %@
Workout state string: %@
Failed to register Core Duet contextual change handler
Unable to retrieve all workout types from HealthKit
Error deserializing: %@
Error serializing: %@
Error writing location manager file
failed to open '%@': [%i] %s
ATXModeClassifier initing with current mode: %@
ATXModeClassifier finished initialization
ATXModeClassifier: not updating because new mode (%{public}@, %lu) is same as current mode (%{public}@, %lu)
ATXModeClassifier: mode updated from uuid:%{public}@, modeType:%lu to uuid:%{public}@, modeType:%lu, uiLocation of new suggestion: %lu
ATXModeClassifier: couldn't perform update operation because swelf is nil
ATXModeClassifier: fetching combined score for current mode (uuid: %{public}@, type:%lu) and new mode (uuid: %{public}@, type:%lu) to see if we should update
ATXModeClassifier: fetched score for current mode: %@. Fetching score and flags for new mode.
Comparing current mode: %{public}@ (combinedScore: %{public}@, with new mode: %{public}@ (combinedScore: %{public}@)
ATXModeClassifer: something went wrong fetching widget scores! currentModeScore: %@, newModeScore: %@
ATXModeClassifier: %{public}@ updated its mode prediction: modeUUID: %{public}@, modeType: %lu
ATXConfiguredModeService: Could not reference DNDModeConfigurationService
ATXConfiguredModeService: Adding a listener failed with error: %@
ATXConfiguredModeService: Caching DND mode configs as a backup
ATXConfiguredModeService: Could not get DNDModeConfiguration class
ATXConfiguredModeService: configured modes: %@
ATXConfiguredModeService: mode is no longer configured, updating suggestion to have nil modeUUID and userModeName
ATXConfiguredModeService: New mode (modeUUID: %{public}@, type: %lu) was updated to now allow smart trigger. Updating mode inference with smart entry enabled
ATXConfiguredModeService: Could not obtain DND mode configurations with error: %{public}@
ATXConfiguredModeService: historically configured mode semantic types: %@
ATXConfiguredModeService: mode configuration did change. Checking if this affects the current mode and if any new modes were added
ATXModeGymFeaturizer: error subscribing to stream: %@
ATXModeCalendarClassifier: Refreshing due to event change
ATXModeCalendarClassifier: skipping event due to participation status: %lu
[%@][%@] Last work event just ended at %@, and the next one doesn't start until %@, initiating microlocation localization
ATXModeCalendarClassifier: unknown participation status: %lu
ATXModeCalendarClassifier: Scheduling calendar refresh timer for: %@
ATXModeCalendarClassifier: Refreshing due to event start / end date passing
[%@][%@] Initiating localization scan in %f seconds
[%@][%@] Triggering localization scan now
ATXModeFeatureSet: error initWithCoder: %@
Found %ld events of mode changes from %@ to %@
ATXModeIsSleepingBasedOnBacklightDataFeaturizer: Failed to retrieve userIsFirstBacklightOnAfterWakeup
ATXModeIsSleepingBasedOnBacklightDataFeaturizer: Bedtime counted in the prediction:%@
ATXModeIsSleepingBasedOnBacklightDataFeaturizer: Wakeup time counted in the prediction:%@
Sorted bedtime array:%@
Sorted wakeup time array:%@
ATXModeIsSleepingBasedOnBacklightDataFeaturizer: Median begin date:%@ Median end date:%@
ATXModeIsSleepingBasedOnBacklightDataFeaturizer: is sleeping:%d
ATXModeIsSleepingBasedOnBacklightDataFeaturizer: Error querying Core Duet: %@
ATXModeIsSleepingBasedOnBacklightDataFeaturizer: Scheduling refresh timer for: %@
ATXModeIsSleepingBasedOnBacklightDataFeaturizer: Timer fired
ATXModeScreenRecordingFeaturizer: done fetching last event
ATXModeScreenRecordingFeaturizer: error fetching last event: %@
ATXModeScreenRecordingFeaturizer: updating screen recording feature: %d
ATXModeScreenRecordingFeaturizer: registering for real time events
ATXModeScreenRecordingFeaturizer: done listening to screen recording events
ATXModeScreenRecordingFeaturizer: error listening to screen recording events: %@
ATXModeScreenRecordingFeaturizer: received new screen recording event, isStart: %{public}@
ATXModeRoutineFeaturizer: done fetching last location event
ATXModeRoutineFeaturizer: error fetching last location event: %@
ATXModeRoutineFeaturizer: updating features. isAtHome: %d isAtWork: %d isAtGym: %d isAtSchool: %d
ATXModeRoutineFeaturizer: registering for real time events
ATXModeRoutineFeaturizer: done listening to location events
ATXModeRoutineFeaturizer: error listening to location events: %@
ATXModeRoutineFeaturizer: received new location event for semantic location: %{private}lu, is starting: %d
ATXModeBedtimeFeaturizer: done fetching last sleep event
ATXModeBedtimeFeaturizer: error fetching last sleep event: %@
ATXModeBedtimeFeaturizer: updating bedtime feature: %{BOOL}d
ATXModeBedtimeFeaturizer: registering for real time events
ATXModeBedtimeFeaturizer: done listening to sleep events
ATXModeBedtimeFeaturizer: error listening to sleep events: %@
ATXModeBedtimeFeaturizer: received new sleep event of state: %{public}@
loaded cache, cached work LOI: %f, %f, %f, cached home LOI: %f, %f, %f
%@ - currentLocationAndNeedsUpdate:%u lastRequestLocationDate %@ was too recent, using cached location: %{private}@
%@ - currentLocationAndNeedsUpdate:%u returning result: %@ and needsLocationUpdate: %u for reason: %{private}@
Shifting Location for China if needed.
Changing reference frame because location was shifted
Location shift successful.
Error while fetching shifted cordinate
Location shift not needed.
%@ getCurrentLocation_RequestPreciseLocation:%@ Updating location
%@ getCurrentLocation_RequestPreciseLocation:%@ Updated location: %{private}@
Updating location
Updated location: %{private}@
_updateLocationsOfInterestWithCurrentLocation: Horizontal accuracy for current location is greater than the threshold so won't fetch closest LOI
Current LOI at %@
LOI fetch timed out
LOI fetch successful
Checking cache with age: %f
Using cached %@ LOI
Fetching %@ LOI
Falling back to cache because Core Routine failed
%@ LOI: %{private}@
Disabling LOI updates due to error fetching %{public}@: %@
RT misuse fetching %{public}@: %@
Error fetching %{public}@: %@
Non-RT error fetching %{public}@: %@
Attempting to update location of interest since update age is %lf
Next Predicted LOIs: %@
Next predicted LOIs fetch timed out
Predicted Exit Times: %@
Predicted exit times fetch timed out
Updating predicted next lois in ATXLocationManager
Updating predicted exit times in ATXLocationManager
Next Predicted LOIs no current location
updatePredictedExitTimes: Returned because horizontal accuracy is greater than threshold
Distance to %@ LOI: %f meters
BMUserFocusComputedModeStream: done fetching last mode event
BMUserFocusComputedModeStream: error fetching last mode event: %@
BMUserFocusComputedModeStream: done fetching the last two mode events
BMUserFocusComputedModeStream: error fetching last two mode events: %@
BMUserFocusComputedModeEvent modeUpdateSourceAsString: undefined mode update source: %lu
BMUserFocusComputedModeEvent modeUpdateReasonAsString: undefined mode update reason: %lu
BMUserFocusComputedModeEvent modeSemanticTypeAsString: undefined mode semantic type: %lu
%@ - Querying GPS location now, requesting with precise location: %@
%@ - Timeout waiting for location update
Timeout waiting for region state update
%s: region: %@, state: %ld
%@ - Got location update: %@
Started monitoring region: %@
Failed to start monitoring region: %@ error: %@
did enter region: %@, region center: (%f, %f), region radius: %f
did enter region: %@, class: %@
did exit region: %@, region center: (%f, %f), region radius: %f
did exit region: %@, class: %@
Location error %@
BMInferredModeOrigin: %lu not handled in switch statement
ATXModeDrivingFeaturizer: Driving mode activated by Do Not Disturb While Driving
ATXModeDrivingFeaturizer: done fetching last DNDWD launch event
ATXModeDrivingFeaturizer: error fetching last DNDWD event: %@
ATXModeDrivingFeaturizer: done listening to DNDWD events
ATXModeDrivingFeaturizer: error listening to DNDWD events: %@
ATXModeDrivingFeaturizer: received new DNDWD event
ATXModeHeuristicClassifier finished initialization
ATXModeHeuristicClassifier update with %d feature sets in buffer
[%@][%@] Predicted mode: %@
BMInferredModeType: %lu not handled in switch statement
Found configured activity for type: %ld uuid: %{public}@
No configured activity for type: %ld, making generic suggestion
ATXModeHeuristicClassifier predict mode with features: %@
ATXModeHeuristicClassifier: %@ updated its features
BMInferredModeStream: done fetching last mode event. currentBMInferredModeEvent modeUUID:%{public}@, modeType: %lu
BMInferredModeStream: error fetching last mode event: %@
BMInferredModeStream: done fetching last mode event. previousBMInferredModeEvent modeUUID:%@, modeType: %lu
BMInferredModeStream: error fetching last mode event: %{public}@
BMInferredModeStream: done fetching the last two mode events
BMInferredModeStream: error fetching last two mode events: %@
BMInferredModeStream: done fetching mode event with suggestion UUID %{public}@, modeUUID:%{public}@, modeType:%lu
BMInferredModeStream: error fetching mode event with UUID %{public}@: %{public}@
BMInferredModeOriginIsHeuristic: mode origin: %ld not captured in switch statement
Error: motion activity query timed out
ATXMotionManagerWrapper: WALKING state changed to %d
ATXMotionManagerWrapper: RUNNING state changed to %d
ATXMotionManagerWrapper: CYCLING state changed to %d
ATXMotionManagerWrapper: AUTOMOTIVE state changed to %d
ATXMotionManagerWrapper: UNKNOWN state changed to %d
Current motion activities: %@
Scanning POI Category stream produced empty array
Successfully fetched %@ Biome events for POI Category between %f and %f
Error encountered while fetching events from Biome for POI Category between %f and %f: %@
softlink:r:path:/System/Library/Frameworks/HealthKit.framework/HealthKit
softlink:o:path:/System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb
ATXModeAnchorModelSuggestionServerGuardedData
ATXModeAnchorModelSuggestionServer
NSXPCListenerDelegate
NSObject
ATXModeAnchorModelSuggestionServerXPCInterface
ATXModeAnchorModelSuggestionClientXPCInterface
ATXModeClassifierClientModel
ATXLocationManagerKnownLOIs
NSSecureCoding
NSCoding
ATXLocationManagerState
ATXModeMicrolocationFeaturizer
ATXModeFeaturizer
ATXAppCategoryTrigger
ATXTrigger
ATXLocationEnteredTrigger
ATXLocationExitedTrigger
ATXTimeTrigger
ATXMicroLocationTrigger
ATXWiredAudioConnectedTrigger
ATXWiredAudioDisconnectedTrigger
ATXBluetoothConnectedTrigger
ATXBluetoothDisconnectedTrigger
ATXWorkCalendarEventTrigger
ATXGameControllerConnectedTrigger
ATXBedtimeTrigger
ATXWatchWorkoutTrigger
ATXIdleTimeBeginTrigger
ATXIdleTimeEndTrigger
ATXCoreMotionDrivingTrigger
ATXDNDWDTrigger
ATXCarPlayConnectedTrigger
ATXCarPlayDisconnectedTrigger
ATXChargerConnectedTrigger
ATXScreenShareTrigger
ATXScreenRecordingTrigger
ATXSmartTrigger
ATXModeScreenShareFeaturizer
ATXModeAnchorModelSuggestion
ATXModeGameControllerFeaturizer
ATXModeReadingFeaturizer
ATXModePBEvent
NSCopying
ATXModePBLogWrapper
ATXModeScheduler
ATXModeAppLaunchFeaturizer
ATXLocationManagerRoutineCR
ATXLocationManagerRoutine
ATXMicrolocationRecordingTrigger
ATXMotionTypes
ATXModeExerciseFeaturizer
ATXLocationManagerStateStoreOnDisk
ATXLocationManagerStateStore
ATXLocationManagerStateStoreOnDiskEnv
ATXPOICategoryStream
ATXModeClassifierGuardedData
ATXModeClassifier
ATXModeClassifierClientModelDelegate
ATXPOICategoryVisitEvent
ATXSleepScheduleUtilities
ATXConfiguredModeService
DNDModeConfigurationServiceListener
ATXPOICategoryVisitDataProvider
ATXModeGymFeaturizer
ATXModeGamingFeaturizer
ATXModeCalendarFeaturizer
ATXModePBRecord
ATXMicrolocationLocalization
ATXModeFeatureSet
ATXModeLogger
ATXModeIsSleepingBasedOnBacklightDataFeaturizer
ATXModeScreenRecordingFeaturizer
ATXModeRoutineFeaturizer
ATXModeBedtimeFeaturizer
ATXLocationManager
ATXLocationManagerGPSDelegate
ATXLocationManagerProtocol
ATXPredictedLocationsManagerProtocol
ATXLocationOfInterestManagerProtocol
ATXLocationManagerGuardedData
ATXExtras
ATXLocationManagerGPSCoreLocation
CLLocationManagerDelegate
ATXLocationManagerGPS
ATXModeDuetHelper
ATXModeDrivingFeaturizer
ATXModeHeuristicClassifierGuardedData
ATXModeHeuristicClassifier
ATXModeFeaturizerDelegate
ATXMotionManagerWrapper
ATXMotion
ATXCachedMotion
ATXPOICategoryEventAggregator
ATXPOICategoryEnterAndExitEvents
ATXPOICategoryGroupingResult
ATXLocationOfInterest
ATXNamedLOI
.cxx_destruct
xpcConnection
initWithMachServiceName:
initWithXPCListener:configuredModeService:
init
initWithGuardedData:
setDelegate:
resume
invalidate
runWithLockAcquired:
dealloc
modeUUID
modeType
origin
originBundleId
originAnchorType
confidenceScore
timeIntervalSinceReferenceDate
absoluteTimestamp
serializedTriggers
fetchCombinedSuggestionScoreForModeWithUUID:modeType:origin:originBundleId:originAnchorType:confidenceScore:secondsSinceSuggested:serializedTriggers:completionHandler:
remoteObjectProxyWithErrorHandler:
fetchCombinedSuggestionScoreAndFlagsForModeWithUUID:modeType:origin:originBundleId:originAnchorType:confidenceScore:secondsSinceSuggested:serializedTriggers:completionHandler:
count
countByEnumeratingWithState:objects:count:
isStart
numberWithBool:
anchorType
isActivityWithUUIDConfigured:activityType:allowsSmartEntry:userModeName:
_shouldUpdateHighestConfidenceSuggestion:newSuggestion:
delegate
score
clientModel:didUpdatePredictionWithUUID:userModeName:modeType:confidenceScore:modeOrigin:originBundleId:originAnchorType:serializedTriggers:
valueForEntitlement:
boolValue
setExportedInterface:
setExportedObject:
setInterruptionHandler:
setInvalidationHandler:
setRemoteObjectInterface:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
listener:shouldAcceptNewConnection:
pingWithCompletion:
anchorModelDidProvideModeSuggestions:
T@"<ATXModeClassifierClientModelDelegate>",W,N
initWithConfiguredModeService:
fetchCombinedSuggestionScoreForModeEvent:completionHandler:
_xpcListener
_lock
_modeService
_delegate
T@"<ATXModeClassifierClientModelDelegate>",W,N,V_delegate
encodeObject:forKey:
decodeObjectOfClass:forKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
Home
Work
School
distantPast
arrayWithObjects:count:
setWithArray:
decodeObjectOfClasses:forKey:
lastUpdateDate
earlierDate:
isEqualToDate:
uuid
removeLastObject
addObject:
previousLOI
currentLOI
lastObject
setCurrentLOI:
setPreviousLOI:
predictedNextLOIs
setPredictedNextLOIs:
predictedExitTimes
setPredictedExitTimes:
locationsOfInterest
valueForKey:
setValue:forKey:
setLastUpdateDate:
merge:with:
expirePreviousLOIBefore:
homeLOI
workLOI
schoolLOI
gymLOI
_currentLOI
_previousLOI
_predictedNextLOIs
_predictedExitTimes
_lastUpdateDate
_locationsOfInterest
T@"ATXLocationOfInterest",&,N,V_currentLOI
T@"ATXLocationOfInterest",&,N,V_previousLOI
T@"NSArray",&,N,V_predictedNextLOIs
T@"NSArray",&,N,V_predictedExitTimes
T@"NSDate",&,N,V_lastUpdateDate
T@"ATXLocationManagerKnownLOIs",R,N,V_locationsOfInterest
T@"CLLocation",R,N
isEqualToArray:
publisherFromStartTime:
last
eventBody
clientBundleIdentifier
isEqualToString:
filterWithIsIncluded:
state
error
sinkWithCompletion:receiveInput:
_provideFeaturesWithLocalizationEvent:
probabilityVector
labelIdentifier
initWithUUIDString:
probability
maxProbabilityLabelIdentifier
maxProbability
setValue:forBinaryFeatureOfType:
featurizer:didUpdateFeatures:
initWithIdentifier:targetQueue:
publisher
subscribeOn:
_processLocalizationEvent:
cancel
provideFeatures
beginListening
stopListening
T@"<ATXModeFeaturizerDelegate>",W,N
_queue
_scheduler
_sink
T@"<ATXModeFeaturizerDelegate>",W,N,V_delegate
unarchivedObjectOfClasses:fromData:error:
_pas_mappedArrayWithTransform:
archivedDataWithRootObject:requiringSecureCoding:error:
mutableCopy
decodeIntegerForKey:
initWithiTunesCategoryId:
encodeInteger:forKey:
type
Tq,R,N
iTunesCategoryId
_iTunesCategoryId
Tq,R,N,V_iTunesCategoryId
initWithLocationIdentifier:namedLOI:
namedLOI
locationIdentifier
_namedLOI
_locationIdentifier
TQ,R,N,V_namedLOI
T@"NSString",R,N,V_locationIdentifier
timeComponents
_timeComponents
T@"NSDateComponents",R,N,V_timeComponents
initWithLocationUUID:
_uuid
T@"NSString",R,N,V_uuid
initWithDeviceIdentifier:
deviceIdentifier
_deviceIdentifier
T@"NSString",R,N,V_deviceIdentifier
initWithDeviceIdentifier:deviceName:
deviceName
_deviceName
T@"NSString",R,N,V_deviceName
initWithObjects:
screenSharingStream
_provideFeaturesWithScreenShareEvent:
_processNewScreenShareEvent:
interfaceWithProtocol:
setClasses:forSelector:argumentIndex:ofReply:
copy
encodeBool:forKey:
encodeDouble:forKey:
decodeBoolForKey:
decodeDoubleForKey:
setWithObjects:
initWithModeUUID:isStart:anchorType:score:numUniqueOccurrencesAfterAnchor:posteriorProbability:classConditionalProbability:serializedTriggers:
numUniqueOccurrencesAfterAnchor
posteriorProbability
classConditionalProbability
_isStart
_modeUUID
_anchorType
_score
_numUniqueOccurrencesAfterAnchor
_posteriorProbability
_classConditionalProbability
_serializedTriggers
T@"NSString",R,N,V_modeUUID
TB,R,N,V_isStart
T@"NSString",R,N,V_anchorType
Td,R,N,V_score
TQ,R,N,V_numUniqueOccurrencesAfterAnchor
Td,R,N,V_posteriorProbability
Td,R,N,V_classConditionalProbability
T@"NSArray",R,N,V_serializedTriggers
gameControllerStream
_provideFeaturesWithGameControllerEvent:
isControllerConnected
_processNewGameControllerEvent:
setWithObject:
expectedGenreId
additionalAllowedBundleIds
modeFeatureType
registrationId
dictionaryRepresentation
stringWithFormat:
dictionary
setObject:forKey:
numberWithInt:
numberWithDouble:
setUuid:
setStrValue:
setJsonMeta:
setOriginBundleId:
allocWithZone:
copyWithZone:
typeAsString:
StringAsType:
mode
setMode:
setHasMode:
hasMode
modeAsString:
StringAsMode:
setIntValue:
setHasIntValue:
hasIntValue
hasStrValue
setStartDate:
setHasStartDate:
hasStartDate
setEndDate:
setHasEndDate:
hasEndDate
hasJsonMeta
setOrigin:
setHasOrigin:
hasOrigin
originAsString:
StringAsOrigin:
hasOriginBundleId
setIsStart:
setHasIsStart:
hasIsStart
readFrom:
writeTo:
copyTo:
mergeFrom:
setType:
intValue
strValue
startDate
endDate
jsonMeta
_endDate
_startDate
_intValue
_jsonMeta
_mode
_origin
_originBundleId
_strValue
_type
_has
T@"NSString",&,N,V_uuid
Ti,N,V_type
TB,N
Ti,N,V_mode
Ti,N,V_intValue
TB,R,N
T@"NSString",&,N,V_strValue
Td,N,V_startDate
Td,N,V_endDate
T@"NSString",&,N,V_jsonMeta
Ti,N,V_origin
T@"NSString",&,N,V_originBundleId
TB,N,V_isStart
setModeRecord:
setVersion:
setHasVersion:
hasVersion
hasModeRecord
version
modeRecord
_modeRecord
_version
Ti,N,V_version
T@"ATXModePBRecord",&,N,V_modeRecord
dispatchTimeWithSecondsFromNow:
cancelPendingOperation
dateWithTimeIntervalSinceNow:
initWithQueue:operationBlock:andLeeway:
runAfterDelaySecondsIfNotYetScheduled:
_timer
_block
_leewaySeconds
_scheduledDate
isInternalBuild
appLaunch
isStarting
bundleID
_latestAppLaunchBundleId
_provideFeaturesWithBundleId:
setState:
setString:forFeatureType:
setNullForFeatureType:
exceptionWithName:reason:userInfo:
runAfterDelaySeconds:coalescingBehavior:
cancelPendingOperations
_actuallyEndMode
initWithQueue:operation:
_actuallyStartMode
_processNewAppLaunchEvent:
easeInTimerIsEnabled
setEaseInTimerIsEnabled:
cooldownTimerIsEnabled
setCooldownTimerIsEnabled:
_cooldownTimer
_easeInTimer
_easeInTimerIsEnabled
_cooldownTimerIsEnabled
_state
Tq,V_state
TB,N,V_easeInTimerIsEnabled
TB,N,V_cooldownTimerIsEnabled
length
containsObject:
initWithBundleIdentifier:allowPlaceholder:error:
iTunesMetadata
genreIdentifier
initWithRoutineManager:
closestLOI:toLocation:
fetchLocationsOfInterestWithinDistance:ofLocation:withHandler:
firstObject
location
latitude
longitude
initWithLatitude:longitude:
fetchLocationsOfInterestOfType:withHandler:
initWithCapacity:
fetchLocationsOfInterestVisitedBetweenStartDate:endDate:withHandler:
locationOfInterest
confidence
sources
enumerateObjectsUsingBlock:
fetchNextPredictedLocationsOfInterestFromLocation:startDate:timeInterval:withHandler:
date
uncertainty
fetchPredictedExitDatesFromLocation:onDate:withHandler:
fetchRoutineModeFromLocation:withHandler:
waitForSemaphore:timeoutSeconds:onAcquire:onTimeout:
distanceFromLocation:
fetchClosestLOIWithinDistance:ofLocation:reply:
fetchLOILocationOfType:reply:
fetchLOIVisitedDuring:reply:
fetchNextPredictedLOIFromLocation:startDate:timeInterval:requireHighConfidence:reply:
fetchPredictedExitDatesFromLocation:onDate:requireHighConfidence:reply:
fetchRoutineModeFromLocation:
_routineManager
visits
entryDate
exitDate
valueWithRange:
identifier
initWithUUID:visits:coordinate:type:
_userDidEnterModeOrModeWasPredicted
_userDidExitModeOrModeWasNoLongerPredicted
initWithSuiteName:
doubleForKey:
_subscribeToModeChanges
_schedulerForStreamName:
_subscribeToStreamWithPublisher:scheduler:sink:
rootStreamIdentifiers
_triggerMicrolocationRecordingAtModeStartWithStoreEvent:
_triggerHistoricalLabelDonationAtModeEndWithStoreEvent:
_isUserFocusComputedModeEventEligibleForMicrolocationRecording:
_isInferredModeEventEligibleForMicrolocationRecording:
_isUserFocusComputedModeEventEligibleForHistoricalLabelDonations:
_isInferredModeEventEligibleForHistoricalLabelDonations:
modeSemanticType
processInfo
processName
currentBMUserFocusComputedStoreEvent
timestamp
numberWithUnsignedInteger:
currentBMInferredModeEvent
integerValue
_triggerMicroLocationRecordingScan
_truthLabelForMode:
_donateTruthLabelForTriggerUUID:truthLabel:
lastTwoUserFocusComputedStoreEvents
lastTwoInferredModeEvents
objectAtIndex:
initWithFirst:second:
second
first
dateWithTimeIntervalSinceReferenceDate:
_triggerMicroLocationHistoricalLabelDonationWithStartDate:endDate:
localizedDescription
UTF8String
donateMicroLocationTruthTagWithTagUUID:forRecordingEventsBetweenDate:andDate:handler:
getRecordingTriggerUUIDAndRequestMicroLocationRecordingScanWithAdditionalInformation:shouldForceRecording:handler:
donateMicroLocationTruthTagWithTagUUID:correspondingToTriggerUUID:handler:
initWithInferredModeStream:locationManager:
_coalescingTimerForRecordingScans
_coalescingTimerForHistoricalLabelDonations
_inferredModeStream
_inferredModeScheduler
_inferredModeStreamSink
_userFocusComputedModeStream
_userComputedModeScheduler
_userComputedModeStreamSink
_locationManager
_timeBuffer
raise:format:
stringForMotionType:
motionTypeForString:found:
isInWorkout
_setUpContextIfNecessary
_createWorkoutPredicate
objectForKeyedSubscript:
value
sessionState
setIsInWorkout:
registrationWithIdentifier:contextualPredicate:deviceTypes:clientIdentifier:mustWake:qualityOfService:callback:
registerCallback:
deregisterCallback:
_allWorkoutActivityTypes
predicateForFirstPartyWorkoutMatchingTypes:states:
userContext
_userContext
_registration
_isInWorkout
TB,V_isInWorkout
previousLOIExpirationTime
appPredictionDirectoryFile:
lowercaseString
knowledgeDirectory
stringByAppendingPathComponent:
stringByAppendingString:
initWithPath:environment:locationParameters:
openFileAtPath:dataProtectionClass:
_tryToOpen
cacheExpirationInterval
unarchivedObjectOfClass:fromData:error:
isLocked
defaultManager
fileExistsAtPath:
_deviceDidUnlock
callOnNextUnlock:
loadNowOrCallLater:
removeItemAtPath:error:
write:
clear
setCacheExpirationInterval:
initWithLocationParameters:
_path
_env
_deferredLoadCallback
_cacheExpirationInterval
Td,V_cacheExpirationInterval
unregisterForLockStateChangeNotifications:
isUnlocked
registerForLockStateChangeNotifications:
_stateChangeRegistration
poiCategory
publisherWithStartTime:endTime:maxEvents:lastN:reversed:
publisherForLastNEvents:
sinkOnScheduler:withCompletion:receiveInput:
_currentModeEvent
initWithDuetHelper:
runBlockWhenDeviceIsClassCUnlocked:
initWithDuetHelper:configuredModeService:locationManager:
update
_expireMode
_setUpModeExpirationTimerIfNeededWithModeOrigin:
initWithGuardedData:serialQueue:
_isModeType:uuid:sameAsModeFromEvent:
updateModeWithUUID:userModeName:modeType:modeOrigin:originAnchorType:originBundleId:uiLocation:confidenceScore:serializedTriggers:allowsSmartEntry:shouldSuggestTriggers:currentMode:stream:
isAutomationEnabled
uiLocation
suggestionUUID
userModeName
initWithAbsoluteTimestamp:modeUUID:origin:originBundleId:originAnchorType:isAutomationEnabled:uiLocation:isStart:confidenceScore:suggestionUUID:serializedTriggers:shouldSuggestTriggers:modeType:userModeName:
source
sendEvent:
UUIDString
_updateWithGuardedData:newModeUUID:userModeName:modeType:modeOrigin:originBundleId:originAnchorType:uiLocation:confidenceScore:serializedTriggers:allowsSmartEntry:shouldSuggestTriggers:
runAsyncWithLockAcquired:
_shouldUpdateMode:currentModeScore:newModeOrigin:newModeScore:
_updateWithNewModeUUID:userModeName:modeType:modeOrigin:originBundleId:originAnchorType:uiLocation:confidenceScore:serializedTriggers:allowsSmartEntry:shouldSuggestTriggers:
doubleValue
currentModeUUID:userModeName:modeType:confidenceScore:origin:originBundleId:serializedTrigger:allowsSmartEntry:
_updateWithNewModeUUIDIfNeeded:userModeName:modeType:modeOrigin:originBundleId:originAnchorType:confidenceScore:serializedTriggers:
provideModeClassifierWhenReadyWithDuetHelper:block:
currentMode
_anchorModelSuggestionServer
_heuristicModeClassifier
_microlocationRecordingTrigger
_modeExpirationTimer
possibleCategoryNames
hasExited
initWithFormat:
objectAtIndexedSubscript:
isEqualToATXPOICategoryVisitEvent:
initWithPossibleCategoryNames:startDate:endDate:hasExited:
_hasExited
_possibleCategoryNames
T@"NSDate",R,N,V_startDate
T@"NSDate",R,N,V_endDate
T@"NSOrderedSet",R,N,V_possibleCategoryNames
TB,R,N,V_hasExited
isTime:betweenStartTime:endTime:
initWithCacheFilePath:loggingHandle:debugName:
_createServiceIfNeeded
_cacheAndReturnDNDModeConfigurationDictionary
serviceForClientIdentifier:
addListener:withCompletionHandler:
_modeConfigurationsReturningError:
_cacheDNDModeConfigurationDictionary:
storeSecureCodedObject:error:
readSecureCodedObjectWithMaxValidAge:allowableClasses:error:
isActivityTypeConfigured:uuid:allowsSmartEntry:userModeName:
_isActivityTypeConfigured:uuid:allowsSmartEntry:userModeName:dndConfigs:
semanticType
name
allowSmartEntry
enumerateKeysAndObjectsUsingBlock:
DNDModeConfigurationForActivityWithUUID:
_DNDModeConfigurationForActivityWithUUID:dndConfigs:
_isActivityWithUUIDConfigured:activityType:allowsSmartEntry:userModeName:dndConfigs:
modeConfigurationsReturningError:
_retrieveCachedDNDModeConfigurationDictionary
objectForKey:
numberWithInteger:
allObjects
_updateUserDefaultsForAnyNewlyAddedModesWithDNDConfigs:
_checkIfConfigurationOfCurrentModeChangedWithDNDConfigs:
modeConfigurationService:didReceiveAvailableModesUpdate:
modeConfigurationService:didReceiveAppConfigurationContextUpdateForModeIdentifier:
isActivityTypeConfigured:
isActivityWithUUIDConfigured:
_service
_cache
initWithStream:
groupVisitsFromPublisher:startTimestamp:endTimestamp:
finalPOIWithoutExit
unsubscribeToPOIChanges
hasExitedAllCategories:
methodForSelector:
getCurrentVisit
subscribeToPOIChangesForCategories:observer:enterSelector:exitSelector:sinkCompletion:
streamAggregator
setStreamAggregator:
stream
setStream:
scheduler
setScheduler:
sink
setSink:
queue
setQueue:
_streamAggregator
_stream
T@"ATXPOICategoryEventAggregator",&,N,V_streamAggregator
T@"ATXPOICategoryStream",&,N,V_stream
T@"BMBiomeScheduler",&,N,V_scheduler
T@"BPSSink",&,N,V_sink
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
dataProvider
handleChange
setDataProvider:
_dataProvider
T@"ATXPOICategoryVisitDataProvider",&,N,V_dataProvider
_updateFeatures
initWithLocationManager:
defaultCenter
removeObserver:
title
localizedCaseInsensitiveContainsString:
supportsLocationDirectorySearches
isAffectingAvailability
participationStatus
_shouldConsiderEventBasedOnParticipantStatus:
laterDate:
calendar
isLikelyAWorkCalendar:
_isDate:betweenStartDate:andEndDate:
valueForFeatureType:
_shouldStayInWorkModeInBetweenMostRecentWorkEvent:andUpcomingWorkEvent:
_shouldInitiateMicrolocationLocalizationWithMostRecentWorkEvent:upcomingWorkEvent:now:
initiateLocalization
timeIntervalSince1970
initWithEKOptions:
currentCalendar
startOfDayForDate:
dateByAddingUnit:value:toDate:options:
predicateForEventsWithStartDate:endDate:calendars:
eventsMatchingPredicate:
status
isAllDay
hasAttendees
attendees
isCurrentUser
customObjectForKey:
_pas_filteredArrayWithTest:
fireAtDate:block:
_eventsDidChange:
addObserver:selector:name:object:
removeAllObjects
_fetchEligibleEventsForDay
_setFeaturesForEventsCurrentlyIn:now:featureSet:
_addTimerForDate:
calendarRefreshCoalesceTimerIsEnabled
setCalendarRefreshCoalesceTimerIsEnabled:
_timers
_featureUpdateTimer
_microlocationLocalization
_calendarRefreshCoalesceTimerIsEnabled
TB,N,V_calendarRefreshCoalesceTimerIsEnabled
numberWithUnsignedLongLong:
addEvents:
setUserID:
eventsCount
clearEvents
eventsAtIndex:
eventsType
hasUserID
setTimezone:
setHasTimezone:
hasTimezone
setTimestamp:
setHasTimestamp:
hasTimestamp
userID
events
setEvents:
timezone
_timestamp
_events
_timezone
_userID
T@"NSString",&,N,V_userID
T@"NSMutableArray",&,N,V_events
Ti,N,V_timezone
TQ,N,V_timestamp
_triggerMicroLocationLocalization
requestCurrentMicroLocationWithAdditionalInformation:
_coalescingTimer
setValue:forFeatureType:
setObject:forKeyedSubscript:
null
_enumerateFeaturesUsingBlock:
containsValueForKey:
dictionaryWithObjects:forKeys:count:
initWithDomain:code:userInfo:
failWithError:
initWithDictionary:
boolValueForFeatureType:
stringForFeatureType:
mergeWithFeatures:
_features
localeWithLocaleIdentifier:
setLocale:
setDateFormat:
stringFromDate:
_lastSubmissionDate
localTimeZone
secondsFromGMT
shareDiagnosticDataWrapper
modeStreamFrom:to:limit:
UUID
stringValue
_updateLastSubmissionDate:
_userDefaults
stringForKey:
dateByAddingTimeInterval:
dateWithTimeIntervalSince1970:
setDouble:forKey:
stringForDate:
logEventsFromModeStream
setShareDiagnosticDataWrapper:
_formatter
_defaults
_duetHelper
_shareDiagnosticDataWrapper
TB,V_shareDiagnosticDataWrapper
timers
queryEvents
returnValueOnError
defaultTimeZone
setTimeZone:
compare:
sortUsingSelector:
componentsSeparatedByString:
dateBySettingHour:minute:second:ofDate:options:
setDay:
addTimerForDate:
dateByAddingComponents:toDate:options:
getHour:minute:second:nanosecond:fromDate:
handleNewEvent
userIsFirstBacklightOnAfterWakeup
removeObserver:name:object:
sortDescriptorWithKey:ascending:
eventQueryWithPredicate:eventStreams:offset:limit:sortDescriptors:
knowledgeStore
executeQuery:error:
timeIntervalSinceDate:
setTimers:
T@"NSHashTable",&,N,V_timers
screenRecordingStream
_provideFeaturesWithScreenRecordingEvent:
_processNewScreenRecordingEvent:
semanticLocationStream
_provideFeaturesWithLocationEvent:
userSpecificPlaceType
_processNewLocationEvent:
sleepModeStream
_provideFeaturesWithSleepEvent:
sleepModeState
_processNewSleepEvent:
sharedInstance
initWithGPS:routine:stateStore:now:modeGlobals:
coordinate
locationEnabled
preciseLocationEnabled
currentLocationUpdateInterval
debugDescriptionForCLLocation:
horizontalAccuracy
tupleWithFirst:second:
getCurrentLocation_RequestPreciseLocation:
getCurrentLocation
shiftedLocationForChinaFromLocation:
getCurrentPreciseLocation
altitude
verticalAccuracy
course
courseAccuracy
speed
speedAccuracy
initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:course:courseAccuracy:speed:speedAccuracy:timestamp:
setReferenceFrame:
referenceFrame
isLocationShiftRequiredForCoordinate:
shifter
shiftCoordinate:accuracy:withCompletionHandler:mustGoToNetworkCallback:errorHandler:callbackQueue:
waitForSemaphore:timeoutSeconds:
clearLocationOfInterest
_currentLocationAndNeedsUpdate_RequestPreciseLocation:
updateLocationWithTimeout:requestPreciseLocation:
errorWithDomain:code:userInfo:
updateLocationWithCompletionHandler:
locationOfInterestSearchRadius
_handleRoutineError:forThing:
gotState:
_fetchLocationOfInterest:inGroup:
_updateLocationsOfInterestWithCurrentLocation:
waitForGroup:timeoutSeconds:
getCurrentLocationWithCompletionHandler:
stringForLOIType:
_gotLocation:forLocationOfInterest:
dateWithTimeInterval:sinceDate:
domain
code
distantFuture
locationOfInterestUpdateInterval
updateCurrentLocationOfInterest
updateCurrentLocationOfInterestWithCompletionHandler:
updateCurrentLocationOfInterestIfTimeElapsed
cachedLocationOfInterestAtCurrentLocation
_updateCurrentLocationOfInterestIfTimeElapsedWithCompletionHandler:
initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:timestamp:
_updatePredictedLocationsOfInterestIfTimeElapsed
_updatePredictedExitTimesIfTimeElapsed
predictedLocationsOfInterestUpdateInterval
updatePredictedLocationsOfInterest
predictedExitTimesUpdateInterval
updatePredictedExitTimes
_distanceOfCurrentLocationFrom:
initWithStartDate:endDate:
locationOfInterestAtCurrentLocation
frequentLOIMinimumVisits
isNearKnownTypeLocationOfInterest
isNearFrequentLocationOfInterest
isTouristWithCurrentDate:
getCurrentRoutineModeWithCurrentDate:
initWithName:object:userInfo:
postNotification:
beginMonitoringRegion:
stopMonitoringRegionWithIdentifier:
stateForRegion:withTimeout:
didChangeLocationEnabled:
didChangePreciseLocationEnabled:
locationManagerGPS:didEnterRegionWithIdentifier:
locationManagerGPS:didExitRegionWithIdentifier:
locationOfInterestAtCurrentLocationWithCompletionHandler:
distanceFromHomeOfCurrentLocationInMeters
distanceFromWorkOfCurrentLocationInMeters
distanceFromSchoolOfCurrentLocationInMeters
distanceFromGymOfCurrentLocationInMeters
fetchAllLocationsOfInterest:
fetchLocationsOfInterestVisitedDuring:handler:
invalidateLocationOfInterestCache
getCurrentLocationWithShiftInChina
getCurrentPreciseLocationWithShiftInChina
isTourist
isNearKnownTypeOrFrequentLocationOfInterest
predictedLocationsOfInterest
getPredictedLocationsOfInterestFromLOIName:startDate:
getPredictedExitTimesFromLOIName:startDate:
isAvailableLocationOfInterestType:
initWithStateStore:modeGlobals:
setNow:
previousLOIAndCurrentLOI
isLocationNearKnownTypeLocationOfInterest:
predictedNextLOITimeout
setPredictedNextLOITimeout:
predictedExitDateTimeout
setPredictedExitDateTimeout:
_gps
_routine
_stateStore
_shifter
_loiUpdateQueue
_modeGlobals
_now
_predictedNextLOITimeout
_predictedExitDateTimeout
T@"NSDate",&,N,V_now
Td,N,V_predictedNextLOITimeout
Td,N,V_predictedExitDateTimeout
currentLocation
lastRequestLocationDate
currentRoutineMode
lastLOIUpdateTimestamp
lastRoutineModeTimestamp
lastPredictedLOIsUpdateTimestamp
lastPredictedExitTimesUpdateTimestamp
currentBMUserFocusComputedModeEvent
currentModeUUID
modeUpdateSource
modeUpdateReason
modeUpdateSourceAsString
modeUpdateReasonAsString
modeSemanticTypeAsString
bundleWithPath:
initWithEffectiveBundle:delegate:onQueue:
setDesiredAccuracy:
authorizationStatus
accuracyAuthorization
_init
requestLocation
lock
_startUpdateIfNeededWithPreciseLocation:
waitUntilDate:
unlock
startMonitoringForRegion:
_requestStateIfNeededForRegion:
requestStateForRegion:
monitoredRegions
_existingRegionWithIdentifierOnCLQueue:
stopMonitoringForRegion:
broadcast
_updateConditionAndInvokeLocationBlocks:error:
center
radius
locationManager:didUpdateToLocation:fromLocation:
locationManager:didUpdateLocations:
locationManager:didUpdateHeading:
locationManagerShouldDisplayHeadingCalibration:
locationManager:didDetermineState:forRegion:
locationManager:didRangeBeacons:inRegion:
locationManager:rangingBeaconsDidFailForRegion:withError:
locationManager:didRangeBeacons:satisfyingConstraint:
locationManager:didFailRangingBeaconsForConstraint:error:
locationManager:didEnterRegion:
locationManager:didExitRegion:
locationManager:didFailWithError:
locationManager:monitoringDidFailForRegion:withError:
locationManager:didChangeAuthorizationStatus:
locationManagerDidChangeAuthorization:
locationManager:didStartMonitoringForRegion:
locationManagerDidPauseLocationUpdates:
locationManagerDidResumeLocationUpdates:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didVisit:
T@"<ATXLocationManagerGPSDelegate>",W,N
_clQueue
_updateCondition
_locationEnabled
_preciseLocationEnabled
_updatePending
_locationBlocksToInvoke
_requestStateCondition
_regionRequested
T@"<ATXLocationManagerGPSDelegate>",W,N,V_delegate
modeStreamFrom:to:ascending:limit:
_duetStreamShim
initWithTimeIntervalSinceReferenceDate:
eventWithStream:startDate:endDate:identifierStringValue:metadata:
sortUsingComparator:
_updateModeStreamEndDates:to:
metadata
eventWithStream:startDate:endDate:value:metadata:
eventStreamWithName:valueType:
_provideFeaturesWithLastDNDWDEvent:
_fetchMostRecentDNDWDEvent
doNotDisturbWhileDrivingStream
_processNewDNDWDEvent:
_beginListeningForDNDWDEvents
_DNDWDSink
_DNDWDScheduler
_aggregateFeatures
_lastFeatureUpdateDate
_featureBuffer
initWithFeaturizers:minUpdateInterval:duetHelper:configuredModeService:
arrayWithCapacity:
_updateIfNeededWithGuardedData:
_requestFeaturesFromAllFeaturizersAndUpdate
_predictModeWithFeature:
_updateWithGuardedData:
_triggersForMode:fromAggregateFeatures:
_isUserWorkingFromHomeWithAggregateFeatures:
_currentModeUUID:userModeName:modeType:confidenceScore:origin:originBundleId:serializedTrigger:allowsSmartEntry:guardedData:
_confidenceScoreForMode:fromAggregateFeatures:
_originForMode:fromAggregateFeatures:
_serializedTriggersForMode:fromAggregateFeatures:
updateWithFeatureSet:immediately:reply:
timeIntervalSinceNow
updateWithFeatureSet:
currentFeaturesInDictionary
reset
_minUpdateInterval
_featurizers
_logger
previousBMInferredModeEvent
inferredModeEventWithSuggestionUUID:
setMaxConcurrentOperationCount:
initWithATXMotion:
hasMotionActivity
updateCurrentActivity:
isActivityAvailable
queryActivityStartingFromDate:toDate:toQueue:withHandler:
_fetchMotionActivities
summarizeActivityStream:
update:
initFromCMMotionActivity:
isExpired
currentMotion
didUpdateMotionType:isActive:
walking
running
cycling
automotive
unknown
_motionActivityHandler
startActivityUpdatesToQueue:withHandler:
removeObject:
removeObjectForKey:
stopActivityUpdates
getCurrentActivity
startUpdatingMotionType:forDelegate:
stopUpdatingMotionType:forDelegate:
_motionActivityManager
_motionActivityQueue
_delegatesMonitoringForMotionType
_mostRecentActivity
_currentMotion
initFromCMMotionActivity:canPredictClipsGivenRecentMotion:
_getMotionTypeFromCMMotionActivity:
stationary
initWithMotionType:stationary:canPredictClipsGivenRecentMotion:
getMotionStringFromMotionType:
getMotionString
findMostCommonAndRecent:identityFunc:
canPredictClipsForActivityStream:
subarrayWithRange:
indexesOfObjectsPassingTest:
objectsAtIndexes:
_getMotionStringFromCMMotionActivity:
print
motiontype
canPredictClipsGivenRecentMotion
_stationary
_canPredictClipsGivenRecentMotion
_motiontype
Tq,R,N,V_motiontype
TB,R,N,V_stationary
TB,R,N,V_canPredictClipsGivenRecentMotion
lastUpdated
T@"ATXMotion",R,C,N,V_currentMotion
initWithCategoryEvents:exitEvent:
exitEvent
categoryEnterEvents
scanWithInitial:nextPartialResult:
visitEvent
mapWithTransform:
visitEventAllowingMissingExit:
initWithEvents:finalPOIWithoutExit:
initWithTimeIntervalSince1970:
rank
sortedArrayUsingComparator:
initWithArray:
_categoryEnterEvents
_exitEvent
T@"NSArray",R,N,V_categoryEnterEvents
T@"BMStoreEvent",R,N,V_exitEvent
_finalPOIWithoutExit
T@"NSArray",R,N,V_events
T@"ATXPOICategoryVisitEvent",R,N,V_finalPOIWithoutExit
arrayByAddingObject:
isEqualToLocation:
initWithUUID:visits:coordinate:
addVisitFrom:to:
setCoordinate:
_visits
_coordinate
T{CLLocationCoordinate2D=dd},N,V_coordinate
T@"NSUUID",R,N,V_uuid
T@"NSArray",R,N,V_visits
Tq,R,N,V_type
initWithName:type:
_name
v16@0:8
@"NSXPCConnection"
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v24@0:8@?16
v24@0:8@16
v24@0:8@?<v@?B>16
v24@0:8@"NSArray"16
v88@0:8@16Q24q32@40@48d56d64@72@?80
v88@0:8@"NSString"16Q24q32@"NSString"40@"NSString"48d56d64@"NSArray"72@?<v@?@"NSNumber">80
v88@0:8@"NSString"16Q24q32@"NSString"40@"NSString"48d56d64@"NSArray"72@?<v@?@"NSNumber"BBB>80
@"<ATXModeClassifierClientModelDelegate>"16@0:8
v24@0:8@"<ATXModeClassifierClientModelDelegate>"16
@24@0:8@16
@32@0:8@16@24
v32@0:8@16@?24
@"NSXPCListener"
@"_PASLock"
@"ATXConfiguredModeService"
@"<ATXModeClassifierClientModelDelegate>"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"CLLocation"
@"ATXLocationOfInterest"
@"NSArray"
@"NSDate"
@"ATXLocationManagerKnownLOIs"
@"ATXModeFeatureSet"16@0:8
@"<ATXModeFeaturizerDelegate>"16@0:8
v24@0:8@"<ATXModeFeaturizerDelegate>"16
@"NSObject<OS_dispatch_queue>"
@"BMBiomeScheduler"
@"BPSSink"
@"<ATXModeFeaturizerDelegate>"
q16@0:8
@24@0:8Q16
@32@0:8@16Q24
@"NSString"
@"NSDateComponents"
@76@0:8@16B24@28d36Q44d52d60@68
d16@0:8
i16@0:8
@24@0:8^{_NSZone=}16
@20@0:8i16
i24@0:8@16
v20@0:8i16
v20@0:8B16
v24@0:8d16
{?="endDate"b1"startDate"b1"intValue"b1"mode"b1"origin"b1"isStart"b1}
@"ATXModePBRecord"
{?="version"b1}
@40@0:8@16@?24d32
@24@0:8d16
@"NSObject<OS_dispatch_source>"
v24@0:8q16
@"_PASSimpleCoalescingTimer"
v40@0:8d16@24@?32
v32@0:8q16@?24
v52@0:8@16@24d32B40@?44
v44@0:8@16@24B32@?36
Q24@0:8@16
v40@0:8d16@"CLLocation"24@?<v@?@"ATXLocationOfInterest"@"NSError">32
v32@0:8q16@?<v@?@"CLLocation"@"NSError">24
v32@0:8@"NSDateInterval"16@?<v@?@"NSArray"@"NSError">24
v52@0:8@"CLLocation"16@"NSDate"24d32B40@?<v@?@"NSArray"@"NSError">44
v44@0:8@"CLLocation"16@"NSDate"24B32@?<v@?@"NSArray"@"NSError">36
Q24@0:8@"CLLocation"16
@"RTRoutineManager"
v40@0:8@16@24@32
v32@0:8@16@24
@"BMInferredModeStream"
@"BMUserFocusComputedModeStream"
@"CLLocationManager"
@24@0:8q16
q32@0:8@16^B24
@"_CDClientContext"
@"_CDContextualChangeRegistration"
@24@0:8@?16
@"ATXLocationManagerState"24@0:8@?<v@?@"ATXLocationManagerState">16
v24@0:8@"ATXLocationManagerState"16
@40@0:8@16@24@32
@"<ATXLocationManagerStateStoreOnDiskEnv>"
i28@0:8@16i24
i28@0:8@"NSString"16i24
v24@0:8@?<v@?>16
@40@0:8@16@?24@?32
@"BMInferredModeEvent"
@112@0:8@16@24Q32q40@48@56Q64d72@80B88B92@96@104
v88@0:8@16@24@32Q40d48q56@64@72@80
v88@0:8@"<ATXModeClassifierClientModel>"16@"NSString"24@"NSString"32Q40d48q56@"NSString"64@"NSString"72@"NSArray"80
B40@0:8Q16@24@32
v104@0:8@16@24@32Q40q48@56@64Q72d80@88B96B100
v96@0:8@16@24Q32q40@48@56Q64d72@80B88B92
v80@0:8@16@24Q32q40@48@56d64@72
B48@0:8q16@24q32@40
@"_PASQueueLock"
@"ATXModeAnchorModelSuggestionServer"
@"ATXModeHeuristicClassifier"
@"ATXMicrolocationRecordingTrigger"
@44@0:8@16@24@32B40
@"NSOrderedSet"
B40@0:8d16d24d32
v32@0:8@"DNDModeConfigurationService"16@"NSArray"24
v32@0:8@"DNDModeConfigurationService"16@"NSString"24
B24@0:8Q16
B48@0:8Q16^@24^B32^@40
B56@0:8Q16^@24^B32^@40@48
B48@0:8@16^Q24^B32^@40
B56@0:8@16^Q24^B32^@40@48
@24@0:8^@16
@"DNDModeConfigurationService"
@"ATXGenericFileBasedCache"
v56@0:8@16@24:32:40@?48
@"ATXPOICategoryEventAggregator"
@"ATXPOICategoryStream"
@"ATXPOICategoryVisitDataProvider"
B40@0:8@16@24@32
B24@0:8q16
@"NSHashTable"
@"ATXMicrolocationLocalization"
v24@0:8Q16
@"NSMutableArray"
{?="timestamp"b1"timezone"b1}
v24@0:8B16i20
v28@0:8@16i24
B20@0:8i16
@"NSMutableDictionary"
@"NSDateFormatter"
@"NSUserDefaults"
@"ATXModeDuetHelper"
v32@0:8@"<ATXLocationManagerGPS>"16@"NSString"24
q32@0:8@16d24
@"ATXLocationOfInterest"16@0:8
v24@0:8@?<v@?@"ATXLocationOfInterest"@"NSError">16
v24@0:8@?<v@?@"NSArray"@"NSError">16
@"CLLocation"16@0:8
v24@0:8@"CLRegion"16
v24@0:8@"NSString"16
q32@0:8@"CLRegion"16d24
B24@0:8@"NSDate"16
@"NSString"24@0:8q16
@"NSArray"16@0:8
@"NSArray"32@0:8@"NSString"16@"NSDate"24
@56@0:8@16@24@32@40@48
@20@0:8B16
v32@0:8q16@24
v32@0:8@16q24
d24@0:8@16
@"<ATXLocationManagerGPS>"
@"<ATXLocationManagerRoutine>"
@"<ATXLocationManagerStateStore>"
@"GEOLocationShifter"
@"<ATXLocationParameters>"
@"ATXLocationManagerState"
v40@0:8@16q24@32
v40@0:8@"CLLocationManager"16@"CLLocation"24@"CLLocation"32
v32@0:8@"CLLocationManager"16@"NSArray"24
v32@0:8@"CLLocationManager"16@"CLHeading"24
B24@0:8@"CLLocationManager"16
v40@0:8@"CLLocationManager"16q24@"CLRegion"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconRegion"32
v40@0:8@"CLLocationManager"16@"CLBeaconRegion"24@"NSError"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconIdentityConstraint"32
v40@0:8@"CLLocationManager"16@"CLBeaconIdentityConstraint"24@"NSError"32
v32@0:8@"CLLocationManager"16@"CLRegion"24
v32@0:8@"CLLocationManager"16@"NSError"24
v40@0:8@"CLLocationManager"16@"CLRegion"24@"NSError"32
v28@0:8@"CLLocationManager"16i24
v24@0:8@"CLLocationManager"16
v32@0:8@"CLLocationManager"16@"CLVisit"24
@28@0:8d16B24
@"CLLocation"28@0:8d16B24
v24@0:8@?<v@?@"CLLocation"@"NSError">16
@"<ATXLocationManagerGPSDelegate>"16@0:8
v24@0:8@"<ATXLocationManagerGPSDelegate>"16
@"NSCondition"
@"NSMutableSet"
@"CLRegion"
@"<ATXLocationManagerGPSDelegate>"
@40@0:8@16@24Q32
@44@0:8@16@24B32Q36
@"ATXModeFeatureSet"
v32@0:8@"<ATXModeFeaturizer>"16@"ATXModeFeatureSet"24
@48@0:8@16d24@32@40
@32@0:8Q16@24
v80@0:8^@16^@24^Q32^d40^q48^@56^@64^B72
v88@0:8^@16^@24^Q32^d40^q48^@56^@64^B72@80
q32@0:8Q16@24
d32@0:8Q16@24
v36@0:8@16B24@?28
@"ATXModeScheduler"
@"ATXModeLogger"
@?16@0:8
@"CMMotionActivityManager"
@"NSOperationQueue"
@"CMMotionActivity"
q24@0:8@16
@32@0:8@16@?24
@32@0:8q16B24B28
@28@0:8@16B24
@"ATXMotion"
@40@0:8@16d24d32
@"BMStoreEvent"
@"ATXPOICategoryVisitEvent"
@56@0:8@16@24{CLLocationCoordinate2D=dd}32q48
@48@0:8@16@24{CLLocationCoordinate2D=dd}32
v32@0:8Q16Q24
{CLLocationCoordinate2D=dd}16@0:8
v32@0:8{CLLocationCoordinate2D=dd}16
@"NSUUID"
{CLLocationCoordinate2D="latitude"d"longitude"d}
@32@0:8@16q24
@(#)PROGRAM:ProactiveContextClient  PROJECT:AppPrediction-1
)Hgm~
-6CLY
#)/5;___>_AG_
v16@?0@"ATXModeAnchorModelSuggestionServerGuardedData"8
-[ATXModeAnchorModelSuggestionServer fetchCombinedSuggestionScoreForModeWithUUID:modeType:origin:originBundleId:originAnchorType:confidenceScore:secondsSinceSuggested:serializedTriggers:completionHandler:]_block_invoke_2
v16@?0@"NSError"8
-[ATXModeAnchorModelSuggestionServer fetchCombinedSuggestionScoreAndFlagsForModeWithUUID:modeType:origin:originBundleId:originAnchorType:confidenceScore:secondsSinceSuggested:serializedTriggers:completionHandler:]_block_invoke_2
v8@?0
Home
Work
School
currentLOI
previousLOI
lastUpdateDate
predictedNextLOIs
predictedExitTimes
locationsOfInterest
v16@?0@"ATXLocationOfInterest"8
focus-mode
C9FC4298-DE04-494A-9791-71AB71B52E27
00000000-0000-0000-0000-000000000000
FFFFFFFF-FFFF-FFFF-FFFF-FFFFFFFFFFFF
B16@?0@"BMStoreEvent"8
v16@?0@"BPSCompletion"8
v16@?0@"BMStoreEvent"8
com.apple.BiomeMicroLocationRestrictedLocalizationEvent.queue
FocusModes.Microlocation
iTunesCategory
location
namedLOI
timeComponents
microLocationUUID
audioDeviceIdentifier
bluetoothDeviceIdentifier
bluetoothDeviceName
@"<ATXTrigger>"16@?0@"NSData"8
@"NSData"16@?0@"<ATXTrigger>"8
com.apple.BiomeScreenShare.queue
FocusModes.ScreenShare
com.apple.proactive.ModeAnchorModelSuggestion.xpc
modeUUID
isStart
anchorType
score
numUniqueOccurrencesAfterAnchor
posteriorProbability
classConditionalProbability
triggers
com.apple.BiomeGameController.queue
FocusModes.GameController
com.apple.iBooks
FocusModes.ReadingMode
%@ %@
uuid
type
mode
intValue
strValue
startDate
endDate
jsonMeta
origin
originBundleId
-[ATXModePBEvent writeTo:]
ATXModePBEvent.m
nil != self->_uuid
ModeChange
StartsUp
(unknown: %i)
Custom
Unknown
Default
Working
Exercising
Driving
Bedtime
Gaming
Reading
Traveling
Learning
Streaming
ScreenSharing
ScreenRecording
AirPlayMirroring
Mindfulness
None
CoreMotion
CarPlay
DNDWD
CoreRoutine
Sleep
AppLaunch
WatchWorkout
WFHClassifier
Calendar
version
modeRecord
-[ATXModeScheduler runAfterDelaySecondsIfNotYetScheduled:]
Screen Sharing
Screen Recording
AirPlay Mirroring
Subclasses should implement -[ATXModeAppLaunchFeaturizer expectedGenreId]
Subclasses should implement -[ATXModeAppLaunchFeaturizer modeFeatureType]
Subclasses should implement -[ATXModeAppLaunchFeaturizer registrationId]
com.apple.BiomeAppLaunch.queue
v24@?0@"NSArray"8@"NSError"16
v32@?0@"RTSource"8Q16^B24
v24@?0q8@"NSError"16
ATXMicrolocationRecordingTriggerTimeBufferKey
com.apple.proactive.ProactiveContextClient.ATXMicrolocationRecordingTrigger.queue
ATXMicrolocationRecordingTrigger.Modes.%@.%@
v20@?0B8@"NSError"12
75BF0CD2-AB18-4E42-AD01-3D5CAADFDFF1
ATXMotionTypeWalking
ATXMotionTypeRunning
ATXMotionTypeCycling
ATXMotionTypeDriving
ATXMotionTypeUnknown
stringForMotionType called with invalid ATXMotionType of %tu
Error
com.apple.duetexpertd
workout-mode-identifier
v24@?0@"NSString"8@"NSDictionary"16
_HKWorkoutSessionStateName
HKWorkout
Unable to find class %s
ATXLocationManagerState
contextstored
-unrestricted
v12@?0i8
v16@?0@"ATXModeClassifierGuardedData"8
v28@?0@"NSNumber"8B16B20B24
v16@?0@"NSNumber"8
ATXPOICategoryVisitEvent categories: %@, startDate: %@, endDate: %@ hasExited: %d
unknown
com.apple.DuetExpertCenter.ProactiveContextClient
mode configurations
v32@?0@"NSString"8@"DNDModeConfiguration"16^B24
DNDModeConfigurationService
DNDModeConfiguration
com.apple.proactive.ATXPOICategoryVisitDataProvider.subscribe
ATXPOICategoryVisitDataProvider.subscribe.
v32@?0@"NSString"8Q16^B24
FocusModes.GamingMode
work
v32@?0@"EKEvent"8Q16^B24
B16@?0@"EKEvent"8
SGEventMetadataKey
userID
events
timezone
timestamp
com.apple.proactive.ProactiveContextClient.ATXMicrolocationLocalization.queue
com.apple.duetexpertd.modes
v32@?0@"NSNumber"8@16^B24
v28@?0i8@12^B20
archive contains illegal nil value for key "%@"
key "%@" not present
key "%@" maps to unexpected class
Invalid
LocationIsAtHome
LocationIsAtWork
WatchIsInWorkout
IsInAutoDND
IsUsingCarPlay
IsOperatingVehicle
IsInBedtime
IsGaming
IsWeekdayNineToFive
HadRecentWorkHandoff
HadMorningAlarm
HasMeetingToday
IsWithinFirstAndLastMeeting
IsWithinFirstAndLastWorkMeeting
IsReading
BundleId
IsScreenSharing
IsScreenRecording
IsGameControllerConnected
isAirPlayMirroring
IsSleepingBasedOnBacklightData
LocationIsAtGym
LocationIsAtSchool
IsPOIAtGym
IsAtWorkMicrolocation
IsCurrentlyInAWorkMeeting
IsWithinTwoWorkMeetings
com.apple.duetexpertd.atx
general
notifications
dailyroutines
modes
hero
anchor
lastModeLoggerSubmissionDate
uniqueModeUserID
en_US_POSIX
yyyy-MM-dd HH:mm:ss zzz
HH:mm
com.apple.DuetExpertCenter.AppPredictionExpert
EnableModeNotifications
RemoveModeSwitchEaseIn
RemoveModeSwitchCooldown
RemoveCalendarRefreshCoalesce
RemoveAppLaunchRequirement
RemoveLockScreenFiltersForSuggestions
DNDModeConfigurationsCache
SecondsToEngagement
SecondsToClear
AverageSecondsToEngagement
AverageSecondsToClear
numToggles
totalTime
numUnlocks
displayName
incomingMessages
outgoingMessages
incomingPhoneCalls
outgoingPhoneCalls
incomingFaceTimeAudio
outgoingFaceTimeAudio
incomingFaceTimeVideo
outgoingFaceTimeVideo
modeBackupRestoreTimeKey
modeScoreFilesUpgradeTimeKey
currentBuildForModeEntityTrainingKey
apps
contacts
widgets
com.apple.BiomeScreenRecording.queue
FocusModes.ScreenRecording
com.apple.BiomeSemanticLocation.queue
FocusModes.Routine
com.apple.BiomeBedtime.queue
FocusModes.Bedtime
ATXLocationManagerDidEnterRegionNotification
ATXLocationManagerDidExitRegionNotification
ATXLocationManagerRegionIdentifierUserInfoKey
ATXLocationManager_LOIUpdateQueue
v16@?0@"ATXLocationManagerGuardedData"8
v16@?0@"ATXLocationManagerState"8
horizontalAccuracy > kPreciseHorizontalAccuracyThreshold
horizontalAccuracy > kHorizontalAccuracyThreshold
location is valid, horizontal accuracy is valid, and last update was recent
location nil or horizontalAccuracy too large or timestamp too old
v24@?0{?=dd}8
v32@?0{?=dd}8d24
v24@?0@"CLLocation"8@"NSError"16
current
v24@?0@"ATXLocationOfInterest"8@"NSError"16
predictedLOIs
<CLLocation: lat: %f, long: %f, timestamp: %f>
Local device
Synced via cloud
Paired device
User Action
Scheduled
Automation
Do Not Disturb
Exercise
Personal Time
/System/Library/LocationBundles/CoreParsec.framework
_clCallbackQueue
-[ATXLocationManagerGPSCoreLocation stateForRegion:withTimeout:]
-[ATXLocationManagerGPSCoreLocation locationManager:didDetermineState:forRegion:]
start
%lld
modeOrigin
contextVector
process
q24@?0@"_DKEvent"8@"_DKEvent"16
pap/internal
Core Motion
DNDwD
Core Routine
App Launch
Watch Workout
Anchor Model
App Launch Model
Screen Share
Game Controller Connected
Backlight Data
FocusModes.DNDWD
com.apple.BiomeDriving.queue
v16@?0@"ATXModeHeuristicClassifierGuardedData"8
Classic DND
AnchorModel
AppLaunchModel
ScreenShare
GameControllerConnected
BacklightData
v16@?0@"ATXCachedMotion"8
v16@?0@"CMMotionActivity"8
walking
running
cycling
driving
%@|stationary
@16@?0@8
@16@?0@"CMMotionActivity"8
B32@?0@8Q16^B24
ATXDefaultHeroPOICategory
@"ATXPOICategoryEnterAndExitEvents"24@?0@"ATXPOICategoryEnterAndExitEvents"8@"BMStoreEvent"16
@"ATXPOICategoryVisitEvent"16@?0@"ATXPOICategoryEnterAndExitEvents"8
v16@?0@"ATXPOICategoryVisitEvent"8
q24@?0@"BMStoreEvent"8@"BMStoreEvent"16
@"NSString"16@?0@"BMStoreEvent"8
latitude
longitude
ATXLocationOfInterest uuid:%@ visits:%@ type:%ld lat:%f long:%f
%s: error with xpc connection: %@
ATXModeAnchorModelSuggestionServer: Received %{public}lu suggestions
ATXModeAnchorModelSuggestionServer: Suggestion modeId: %{public}@, isStart: %{public}@, anchorType: %{public}@
ATXModeAnchorModelSuggestionServer: Suggestion modeUUID: %{public}@ is not configured, skipping
ATXModeAnchorModelSuggestionServer: Updated suggestion to modeUUID: %{public}@, isStart: %{public}@, anchorType: %{public}@
ATXModeAnchorModelSuggestionServer: Rejecting connection %{public}@ without entitlement %{public}@
ATXModeAnchorModelSuggestionServer: XPC connection interrupted.
ATXModeAnchorModelSuggestionServer: XPC connection invalidated.
ATXModeAnchorModelSuggestionServer: accepts XPC connection: %{public}@
[%@][%@] Requesting feature set via pull based feature provider
[%@][%@] Successfully fetched last event from BMMicroLocationRestrictedLocalizationStream
[%@][%@] Error fetching last event: %@
[%@][%@] Nil BMMicroLocationRestrictedLocalizationEvent
[%@][%@] Warning: Localization scan was unexpectedly delayed by more than %f seconds
[%@][%@] Fetching predicted Microlocation for this device
[%@][%@] Probability that this device is at a work microlocation: %{private}f
[%@][%@] Probability that this device is outside of a work microlocation: %{private}f
[%@][%@] Probability that this device is at an unknown microlocation: %{private}f
[%@][%@] Device is predicted to be at a work microlocation
[%@][%@] Device was predicted to not be at a work microlocation
[%@][%@] Pushing work microlocation prediction to mode heurisic classifier
[%@][%@] registering for real time events from the BiomeMicroLocationRestrictedLocalizationEventStream
[%@][%@] successfully finished listening to MicroLocation Localization events
[%@][%@] listening to MicroLocation Localization events: %@
[%@][%@] Received new MicroLocation Localization event: %@
Could not deserialize trigger: %@
Could not serialize trigger: %@
ATXModeScreenShareFeaturizer: done fetching last screen share event
ATXModeScreenShareFeaturizer: error fetching last screen share event: %@
ATXModeScreenShareFeaturizer: updating screen share feature: isScreenSharing: %d, isAirPlayMirroring: %d
ATXModeScreenShareFeaturizer: registering for real time events
ATXModeScreenShareFeaturizer: done listening to screen share events
ATXModeScreenShareFeaturizer: error listening to screen share events: %@
ATXModeScreenShareFeaturizer: received new screen share event, isStart: %{public}@
ATXModeGameControllerFeaturizer: done fetching last event
ATXModeGameControllerFeaturizer: error fetching last event: %@
ATXModeGameControllerFeaturizer: updating game controller feature: %d
ATXModeGameControllerFeaturizer: registering for real time events
ATXModeGameControllerFeaturizer: done listening to game controller events
ATXModeGameControllerFeaturizer: error listening to game controller events: %@
ATXModeGameControllerFeaturizer: received new game controller event, isConnected: %{public}@
%s: an operation has already been scheduled at %@. Skip this request.
%s: schedule an operation with %.2lf seconds delay
DNDModeSemanticTypeToATXActivityType: DNDModeSemanticType %lu not handled in switch statement
ATXModeAppLaunchFeaturizer: done fetching last app launch event
ATXModeAppLaunchFeaturizer: error fetching last app launch event: %@
ATXModeAppLaunchFeaturizer: Initial state: %ld
ATXModeAppLaunchFeaturizer: State after cooldown: not active
ATXModeAppLaunchFeaturizer: State after ease-in: active
ATXModeAppLaunchFeaturizer: Entering ease in period before entering state
ATXModeAppLaunchFeaturizer: Already easing in and still not in state
ATXModeAppLaunchFeaturizer: Going back to inactive state since user quit prematurely
ATXModeAppLaunchFeaturizer: Entering cool down period before exiting state
ATXModeAppLaunchFeaturizer: Going back to proper state
ATXModeAppLaunchFeaturizer: Already cooling down and still not in state
ATXModeAppLaunchFeaturizer: Unexpected state %ld %ld
ATXModeAppLaunchFeaturizer: done listening to app launch events
ATXModeAppLaunchFeaturizer: error listening to app launch events: %@
ATXModeAppLaunchFeaturizer: Could not get application (BundleId: %@) record for inferring app genre: %@
ATXModeAppLaunchFeaturizer: Genre: %llu BundleId: %@
Predicted next loi type: %ld, confidence: %lf
Predicted Exit Time: %@, uncertainty: %lf, confidence %lf
Error while fetching routine mode from CoreRoutine. Error: %@
CoreRoutine did not return any routine mode. Returning ATXRoutineModeUnknown.
[%@][%@] subscribing to %@ and %@ streams
[%@][%@] Publisher was unexpectedly nil
[%@][%@] listening to stream %@ for mode start events
[%@][%@] successfully completed listening to mode events
[%@][%@] Error encountered while listening to mode events
[%@][%@] self is nil
[%@][%@] mode event received from %@
ATXMicrolocationRecordingTrigger: sink is nil
[%@][%@] scheduler identifier: %@
[%@][%@] unable to initialize Biome Scheduler: %@
[%@][%@] Starting Microlocation recording scan
[%@][%@] Unable to find an inferred mode event or user focus computed mode event in the past %f seconds
[%@][%@] user entered mode: %{public}@
[%@][%@] Historical label donations
[%@][%@] Error: Expected to see at least two events in either the inferred mode stream or the user computed stream
[%@][%@] Labeling scans between startDate: %@ and endDate: %@ with work label
[%@][%@] Error encountered while donating historical labels: %{public}s
[%@][%@] Successfully donated historical labels
[%@][%@]  Successfully requested MiLo recording scan
[%@][%@]  Error encountered while requesting MiLo recording scan: %{public}s
[%@][%@] TriggerId was unexpectedly nil
[%@][%@] Generated triggerId: %@
[%@][%@] Donating truth label: %@ for triggerId: %@
[%@][%@] Error encountered while requesting MiLo recording scan: %{public}s
[%@][%@] Successfully donated MiLo label %@ for triggerId: %@
stringForMotionType called with invalid ATXMotionType of %tu
Could not form workout predicate
self went away
No workout payload: %@
Workout payload is not dictionary: %@
Workout state string: %@
Failed to register Core Duet contextual change handler
Unable to retrieve all workout types from HealthKit
Error deserializing: %@
Error serializing: %@
Error writing location manager file
failed to open '%@': [%i] %s
ATXModeClassifier initing with current mode: %@
ATXModeClassifier finished initialization
ATXModeClassifier: not updating because new mode (%{public}@, %lu) is same as current mode (%{public}@, %lu)
ATXModeClassifier: mode updated from uuid:%{public}@, modeType:%lu to uuid:%{public}@, modeType:%lu, uiLocation of new suggestion: %lu
ATXModeClassifier: couldn't perform update operation because swelf is nil
ATXModeClassifier: fetching combined score for current mode (uuid: %{public}@, type:%lu) and new mode (uuid: %{public}@, type:%lu) to see if we should update
ATXModeClassifier: fetched score for current mode: %@. Fetching score and flags for new mode.
Comparing current mode: %{public}@ (combinedScore: %{public}@, with new mode: %{public}@ (combinedScore: %{public}@)
ATXModeClassifer: something went wrong fetching widget scores! currentModeScore: %@, newModeScore: %@
ATXModeClassifier: %{public}@ updated its mode prediction: modeUUID: %{public}@, modeType: %lu
ATXConfiguredModeService: Could not reference DNDModeConfigurationService
ATXConfiguredModeService: Adding a listener failed with error: %@
ATXConfiguredModeService: Caching DND mode configs as a backup
ATXConfiguredModeService: Could not get DNDModeConfiguration class
ATXConfiguredModeService: configured modes: %@
ATXConfiguredModeService: mode is no longer configured, updating suggestion to have nil modeUUID and userModeName
ATXConfiguredModeService: New mode (modeUUID: %{public}@, type: %lu) was updated to now allow smart trigger. Updating mode inference with smart entry enabled
ATXConfiguredModeService: Could not obtain DND mode configurations with error: %{public}@
ATXConfiguredModeService: historically configured mode semantic types: %@
ATXConfiguredModeService: mode configuration did change. Checking if this affects the current mode and if any new modes were added
ATXModeGymFeaturizer: error subscribing to stream: %@
ATXModeCalendarClassifier: Refreshing due to event change
ATXModeCalendarClassifier: skipping event due to participation status: %lu
[%@][%@] Last work event just ended at %@, and the next one doesn't start until %@, initiating microlocation localization
ATXModeCalendarClassifier: unknown participation status: %lu
ATXModeCalendarClassifier: Scheduling calendar refresh timer for: %@
ATXModeCalendarClassifier: Refreshing due to event start / end date passing
[%@][%@] Initiating localization scan in %f seconds
[%@][%@] Triggering localization scan now
ATXModeFeatureSet: error initWithCoder: %@
Found %ld events of mode changes from %@ to %@
ATXModeIsSleepingBasedOnBacklightDataFeaturizer: Failed to retrieve userIsFirstBacklightOnAfterWakeup
ATXModeIsSleepingBasedOnBacklightDataFeaturizer: Bedtime counted in the prediction:%@
ATXModeIsSleepingBasedOnBacklightDataFeaturizer: Wakeup time counted in the prediction:%@
Sorted bedtime array:%@
Sorted wakeup time array:%@
ATXModeIsSleepingBasedOnBacklightDataFeaturizer: Median begin date:%@ Median end date:%@
ATXModeIsSleepingBasedOnBacklightDataFeaturizer: is sleeping:%d
ATXModeIsSleepingBasedOnBacklightDataFeaturizer: Error querying Core Duet: %@
ATXModeIsSleepingBasedOnBacklightDataFeaturizer: Scheduling refresh timer for: %@
ATXModeIsSleepingBasedOnBacklightDataFeaturizer: Timer fired
ATXModeScreenRecordingFeaturizer: done fetching last event
ATXModeScreenRecordingFeaturizer: error fetching last event: %@
ATXModeScreenRecordingFeaturizer: updating screen recording feature: %d
ATXModeScreenRecordingFeaturizer: registering for real time events
ATXModeScreenRecordingFeaturizer: done listening to screen recording events
ATXModeScreenRecordingFeaturizer: error listening to screen recording events: %@
ATXModeScreenRecordingFeaturizer: received new screen recording event, isStart: %{public}@
ATXModeRoutineFeaturizer: done fetching last location event
ATXModeRoutineFeaturizer: error fetching last location event: %@
ATXModeRoutineFeaturizer: updating features. isAtHome: %d isAtWork: %d isAtGym: %d isAtSchool: %d
ATXModeRoutineFeaturizer: registering for real time events
ATXModeRoutineFeaturizer: done listening to location events
ATXModeRoutineFeaturizer: error listening to location events: %@
ATXModeRoutineFeaturizer: received new location event for semantic location: %{private}lu, is starting: %d
ATXModeBedtimeFeaturizer: done fetching last sleep event
ATXModeBedtimeFeaturizer: error fetching last sleep event: %@
ATXModeBedtimeFeaturizer: updating bedtime feature: %{BOOL}d
ATXModeBedtimeFeaturizer: registering for real time events
ATXModeBedtimeFeaturizer: done listening to sleep events
ATXModeBedtimeFeaturizer: error listening to sleep events: %@
ATXModeBedtimeFeaturizer: received new sleep event of state: %{public}@
loaded cache, cached work LOI: %f, %f, %f, cached home LOI: %f, %f, %f
%@ - currentLocationAndNeedsUpdate:%u lastRequestLocationDate %@ was too recent, using cached location: %{private}@
%@ - currentLocationAndNeedsUpdate:%u returning result: %@ and needsLocationUpdate: %u for reason: %{private}@
Shifting Location for China if needed.
Changing reference frame because location was shifted
Location shift successful.
Error while fetching shifted cordinate
Location shift not needed.
%@ getCurrentLocation_RequestPreciseLocation:%@ Updating location
%@ getCurrentLocation_RequestPreciseLocation:%@ Updated location: %{private}@
Updating location
Updated location: %{private}@
_updateLocationsOfInterestWithCurrentLocation: Horizontal accuracy for current location is greater than the threshold so won't fetch closest LOI
Current LOI at %@
LOI fetch timed out
LOI fetch successful
Checking cache with age: %f
Using cached %@ LOI
Fetching %@ LOI
Falling back to cache because Core Routine failed
%@ LOI: %{private}@
Disabling LOI updates due to error fetching %{public}@: %@
RT misuse fetching %{public}@: %@
Error fetching %{public}@: %@
Non-RT error fetching %{public}@: %@
Attempting to update location of interest since update age is %lf
Next Predicted LOIs: %@
Next predicted LOIs fetch timed out
Predicted Exit Times: %@
Predicted exit times fetch timed out
Updating predicted next lois in ATXLocationManager
Updating predicted exit times in ATXLocationManager
Next Predicted LOIs no current location
updatePredictedExitTimes: Returned because horizontal accuracy is greater than threshold
Distance to %@ LOI: %f meters
BMUserFocusComputedModeStream: done fetching last mode event
BMUserFocusComputedModeStream: error fetching last mode event: %@
BMUserFocusComputedModeStream: done fetching the last two mode events
BMUserFocusComputedModeStream: error fetching last two mode events: %@
BMUserFocusComputedModeEvent modeUpdateSourceAsString: undefined mode update source: %lu
BMUserFocusComputedModeEvent modeUpdateReasonAsString: undefined mode update reason: %lu
BMUserFocusComputedModeEvent modeSemanticTypeAsString: undefined mode semantic type: %lu
%@ - Querying GPS location now, requesting with precise location: %@
%@ - Timeout waiting for location update
Timeout waiting for region state update
%s: region: %@, state: %ld
%@ - Got location update: %@
Started monitoring region: %@
Failed to start monitoring region: %@ error: %@
did enter region: %@, region center: (%f, %f), region radius: %f
did enter region: %@, class: %@
did exit region: %@, region center: (%f, %f), region radius: %f
did exit region: %@, class: %@
Location error %@
BMInferredModeOrigin: %lu not handled in switch statement
ATXModeDrivingFeaturizer: Driving mode activated by Do Not Disturb While Driving
ATXModeDrivingFeaturizer: done fetching last DNDWD launch event
ATXModeDrivingFeaturizer: error fetching last DNDWD event: %@
ATXModeDrivingFeaturizer: done listening to DNDWD events
ATXModeDrivingFeaturizer: error listening to DNDWD events: %@
ATXModeDrivingFeaturizer: received new DNDWD event
ATXModeHeuristicClassifier finished initialization
ATXModeHeuristicClassifier update with %d feature sets in buffer
[%@][%@] Predicted mode: %@
BMInferredModeType: %lu not handled in switch statement
Found configured activity for type: %ld uuid: %{public}@
No configured activity for type: %ld, making generic suggestion
ATXModeHeuristicClassifier predict mode with features: %@
ATXModeHeuristicClassifier: %@ updated its features
BMInferredModeStream: done fetching last mode event. currentBMInferredModeEvent modeUUID:%{public}@, modeType: %lu
BMInferredModeStream: error fetching last mode event: %@
BMInferredModeStream: done fetching last mode event. previousBMInferredModeEvent modeUUID:%@, modeType: %lu
BMInferredModeStream: error fetching last mode event: %{public}@
BMInferredModeStream: done fetching the last two mode events
BMInferredModeStream: error fetching last two mode events: %@
BMInferredModeStream: done fetching mode event with suggestion UUID %{public}@, modeUUID:%{public}@, modeType:%lu
BMInferredModeStream: error fetching mode event with UUID %{public}@: %{public}@
BMInferredModeOriginIsHeuristic: mode origin: %ld not captured in switch statement
Error: motion activity query timed out
ATXMotionManagerWrapper: WALKING state changed to %d
ATXMotionManagerWrapper: RUNNING state changed to %d
ATXMotionManagerWrapper: CYCLING state changed to %d
ATXMotionManagerWrapper: AUTOMOTIVE state changed to %d
ATXMotionManagerWrapper: UNKNOWN state changed to %d
Current motion activities: %@
Scanning POI Category stream produced empty array
Successfully fetched %@ Biome events for POI Category between %f and %f
Error encountered while fetching events from Biome for POI Category between %f and %f: %@
softlink:r:path:/System/Library/Frameworks/HealthKit.framework/HealthKit
softlink:o:path:/System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb
ATXModeAnchorModelSuggestionServerGuardedData
ATXModeAnchorModelSuggestionServer
NSXPCListenerDelegate
NSObject
ATXModeAnchorModelSuggestionServerXPCInterface
ATXModeAnchorModelSuggestionClientXPCInterface
ATXModeClassifierClientModel
ATXLocationManagerKnownLOIs
NSSecureCoding
NSCoding
ATXLocationManagerState
ATXModeMicrolocationFeaturizer
ATXModeFeaturizer
ATXAppCategoryTrigger
ATXTrigger
ATXLocationEnteredTrigger
ATXLocationExitedTrigger
ATXTimeTrigger
ATXMicroLocationTrigger
ATXWiredAudioConnectedTrigger
ATXWiredAudioDisconnectedTrigger
ATXBluetoothConnectedTrigger
ATXBluetoothDisconnectedTrigger
ATXWorkCalendarEventTrigger
ATXGameControllerConnectedTrigger
ATXBedtimeTrigger
ATXWatchWorkoutTrigger
ATXIdleTimeBeginTrigger
ATXIdleTimeEndTrigger
ATXCoreMotionDrivingTrigger
ATXDNDWDTrigger
ATXCarPlayConnectedTrigger
ATXCarPlayDisconnectedTrigger
ATXChargerConnectedTrigger
ATXScreenShareTrigger
ATXScreenRecordingTrigger
ATXSmartTrigger
ATXModeScreenShareFeaturizer
ATXModeAnchorModelSuggestion
ATXModeGameControllerFeaturizer
ATXModeReadingFeaturizer
ATXModePBEvent
NSCopying
ATXModePBLogWrapper
ATXModeScheduler
ATXModeAppLaunchFeaturizer
ATXLocationManagerRoutineCR
ATXLocationManagerRoutine
ATXMicrolocationRecordingTrigger
ATXMotionTypes
ATXModeExerciseFeaturizer
ATXLocationManagerStateStoreOnDisk
ATXLocationManagerStateStore
ATXLocationManagerStateStoreOnDiskEnv
ATXPOICategoryStream
ATXModeClassifierGuardedData
ATXModeClassifier
ATXModeClassifierClientModelDelegate
ATXPOICategoryVisitEvent
ATXSleepScheduleUtilities
ATXConfiguredModeService
DNDModeConfigurationServiceListener
ATXPOICategoryVisitDataProvider
ATXModeGymFeaturizer
ATXModeGamingFeaturizer
ATXModeCalendarFeaturizer
ATXModePBRecord
ATXMicrolocationLocalization
ATXModeFeatureSet
ATXModeLogger
ATXModeIsSleepingBasedOnBacklightDataFeaturizer
ATXModeScreenRecordingFeaturizer
ATXModeRoutineFeaturizer
ATXModeBedtimeFeaturizer
ATXLocationManager
ATXLocationManagerGPSDelegate
ATXLocationManagerProtocol
ATXPredictedLocationsManagerProtocol
ATXLocationOfInterestManagerProtocol
ATXLocationManagerGuardedData
ATXExtras
ATXLocationManagerGPSCoreLocation
CLLocationManagerDelegate
ATXLocationManagerGPS
ATXModeDuetHelper
ATXModeDrivingFeaturizer
ATXModeHeuristicClassifierGuardedData
ATXModeHeuristicClassifier
ATXModeFeaturizerDelegate
ATXMotionManagerWrapper
ATXMotion
ATXCachedMotion
ATXPOICategoryEventAggregator
ATXPOICategoryEnterAndExitEvents
ATXPOICategoryGroupingResult
ATXLocationOfInterest
ATXNamedLOI
invalidate
setDay:
numberWithBool:
currentCalendar
laterDate:
readSecureCodedObjectWithMaxValidAge:allowableClasses:error:
predicateForFirstPartyWorkoutMatchingTypes:states:
decodeObjectOfClass:forKey:
fetchRoutineModeFromLocation:withHandler:
initWithLatitude:longitude:
attendees
doubleForKey:
maxProbability
verticalAccuracy
rank
null
setDateFormat:
mapWithTransform:
exceptionWithName:reason:userInfo:
initWithCapacity:
predicateForEventsWithStartDate:endDate:calendars:
decodeIntegerForKey:
arrayWithObjects:count:
suggestionUUID
arrayWithCapacity:
getRecordingTriggerUUIDAndRequestMicroLocationRecordingScanWithAdditionalInformation:shouldForceRecording:handler:
donateMicroLocationTruthTagWithTagUUID:forRecordingEventsBetweenDate:andDate:handler:
eventsMatchingPredicate:
initWithUUIDString:
initWithCacheFilePath:loggingHandle:debugName:
startOfDayForDate:
center
runAfterDelaySeconds:coalescingBehavior:
setWithObjects:
isEqualToString:
fetchPredictedExitDatesFromLocation:onDate:withHandler:
valueWithRange:
decodeDoubleForKey:
initWithIdentifier:targetQueue:
lowercaseString
arrayByAddingObject:
name
raise:format:
donateMicroLocationTruthTagWithTagUUID:correspondingToTriggerUUID:handler:
startMonitoringForRegion:
postNotification:
rootStreamIdentifiers
initWithBundleIdentifier:allowPlaceholder:error:
setWithObject:
initWithArray:
initWithGuardedData:serialQueue:
initWithTimeIntervalSinceReferenceDate:
courseAccuracy
decodeBoolForKey:
setClasses:forSelector:argumentIndex:ofReply:
valueForKey:
radius
domain
setObject:forKeyedSubscript:
longitude
subscribeOn:
initWithTimeIntervalSince1970:
eventWithStream:startDate:endDate:value:metadata:
subarrayWithRange:
mutableCopy
isEqualToDate:
setWithArray:
fetchNextPredictedLocationsOfInterestFromLocation:startDate:timeInterval:withHandler:
monitoredRegions
doNotDisturbWhileDrivingStream
startActivityUpdatesToQueue:withHandler:
lock
course
archivedDataWithRootObject:requiringSecureCoding:error:
lastObject
initWithGuardedData:
getHour:minute:second:nanosecond:fromDate:
UUID
cancelPendingOperations
setObject:forKey:
queryActivityStartingFromDate:toDate:toQueue:withHandler:
poiCategory
initWithAbsoluteTimestamp:modeUUID:origin:originBundleId:originAnchorType:isAutomationEnabled:uiLocation:isStart:confidenceScore:suggestionUUID:serializedTriggers:shouldSuggestTriggers:modeType:userModeName:
unregisterForLockStateChangeNotifications:
appPredictionDirectoryFile:
isEqualToArray:
resume
sessionState
UTF8String
dateWithTimeIntervalSinceReferenceDate:
valueForEntitlement:
last
initWithSuiteName:
speedAccuracy
eventWithStream:startDate:endDate:identifierStringValue:metadata:
stringWithFormat:
requestStateForRegion:
distantPast
unlock
participationStatus
modeUpdateSource
serviceForClientIdentifier:
locationOfInterestUpdateInterval
setValue:forKey:
countByEnumeratingWithState:objects:count:
initWithFormat:
distantFuture
value
fetchLocationsOfInterestWithinDistance:ofLocation:withHandler:
stringValue
unknown
appLaunch
dateWithTimeIntervalSinceNow:
labelIdentifier
speed
eventStreamWithName:valueType:
requestLocation
knowledgeStore
publisherWithStartTime:endTime:maxEvents:lastN:reversed:
cancel
modeUpdateReason
dateWithTimeIntervalSince1970:
initWithFirst:second:
count
fetchLocationsOfInterestVisitedBetweenStartDate:endDate:withHandler:
initWithStartDate:endDate:
locationOfInterestSearchRadius
eventQueryWithPredicate:eventStreams:offset:limit:sortDescriptors:
stringFromDate:
requestCurrentMicroLocationWithAdditionalInformation:
dateWithTimeInterval:sinceDate:
distanceFromLocation:
publisherFromStartTime:
isCurrentUser
setMaxConcurrentOperationCount:
altitude
uncertainty
userSpecificPlaceType
sendEvent:
knowledgeDirectory
removeObserver:name:object:
sources
fetchLocationsOfInterestOfType:withHandler:
originAnchorType
dispatchTimeWithSecondsFromNow:
isControllerConnected
didUpdateMotionType:isActive:
copy
indexesOfObjectsPassingTest:
dateBySettingHour:minute:second:ofDate:options:
unarchivedObjectOfClasses:fromData:error:
eventBody
modeType
semanticType
allowSmartEntry
userModeName
source
isUnlocked
setLocale:
sortedArrayUsingComparator:
errorWithDomain:code:userInfo:
calendar
initWithEffectiveBundle:delegate:onQueue:
locationOfInterest
publisher
removeObserver:
isAutomationEnabled
unarchivedObjectOfClass:fromData:error:
semanticLocationStream
removeObjectForKey:
userIsFirstBacklightOnAfterWakeup
dateByAddingUnit:value:toDate:options:
allocWithZone:
stringForKey:
objectsAtIndexes:
initWithQueue:operation:
sortUsingSelector:
containsValueForKey:
uiLocation
error
isAllDay
dateByAddingTimeInterval:
removeObject:
secondsFromGMT
initWithEKOptions:
allObjects
userContext
bundleWithPath:
sortUsingComparator:
processName
genreIdentifier
isAffectingAvailability
dateByAddingComponents:toDate:options:
modeSemanticType
enumerateObjectsUsingBlock:
containsObject:
iTunesMetadata
dictionaryWithObjects:forKeys:count:
objectForKeyedSubscript:
second
stringByAppendingString:
isStarting
horizontalAccuracy
_allWorkoutActivityTypes
frequentLOIMinimumVisits
tupleWithFirst:second:
sortDescriptorWithKey:ascending:
processInfo
gameControllerStream
enumerateKeysAndObjectsUsingBlock:
objectForKey:
removeLastObject
confidenceScore
date
screenSharingStream
stringByAppendingPathComponent:
setTimeZone:
bundleID
walking
title
setInvalidationHandler:
initWithObjects:
probabilityVector
modeConfigurationsReturningError:
broadcast
removeItemAtPath:error:
entryDate
confidence
sleepModeStream
isActivityAvailable
initWithName:object:userInfo:
screenRecordingStream
initWithDomain:code:userInfo:
storeSecureCodedObject:error:
addObserver:selector:name:object:
objectAtIndexedSubscript:
localizedDescription
cycling
firstObject
componentsSeparatedByString:
dictionary
probability
setInterruptionHandler:
removeAllObjects
sleepModeState
waitUntilDate:
objectAtIndex:
_pas_mappedArrayWithTransform:
localizedCaseInsensitiveContainsString:
addObject:
previousLOIExpirationTime
deregisterCallback:
stopMonitoringForRegion:
first
failWithError:
setExportedObject:
localeWithLocaleIdentifier:
numberWithUnsignedLongLong:
methodForSelector:
remoteObjectProxyWithErrorHandler:
customObjectForKey:
fireAtDate:block:
runAsyncWithLockAcquired:
encodeObject:forKey:
_pas_filteredArrayWithTest:
metadata
addListener:withCompletionHandler:
code
sinkWithCompletion:receiveInput:
scanWithInitial:nextPartialResult:
setExportedInterface:
waitForSemaphore:timeoutSeconds:onAcquire:onTimeout:
registrationWithIdentifier:contextualPredicate:deviceTypes:clientIdentifier:mustWake:qualityOfService:callback:
interfaceWithProtocol:
encodeInteger:forKey:
timeIntervalSinceReferenceDate
timeIntervalSinceNow
waitForSemaphore:timeoutSeconds:
numberWithUnsignedInteger:
defaultTimeZone
localTimeZone
running
UUIDString
initWithMachServiceName:
stopActivityUpdates
accuracyAuthorization
integerValue
initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:timestamp:
encodeDouble:forKey:
isLocationShiftRequiredForCoordinate:
predictedLocationsOfInterestUpdateInterval
numberWithInteger:
waitForGroup:timeoutSeconds:
timeIntervalSinceDate:
setDouble:forKey:
defaultManager
hasAttendees
automotive
initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:course:courseAccuracy:speed:speedAccuracy:timestamp:
registerForLockStateChangeNotifications:
setDesiredAccuracy:
encodeBool:forKey:
setRemoteObjectInterface:
currentLocationUpdateInterval
predictedExitTimesUpdateInterval
numberWithInt:
absoluteTimestamp
runWithLockAcquired:
status
setReferenceFrame:
defaultCenter
shiftCoordinate:accuracy:withCompletionHandler:mustGoToNetworkCallback:errorHandler:callbackQueue:
length
filterWithIsIncluded:
timeIntervalSince1970
registerCallback:
clientBundleIdentifier
earlierDate:
runBlockWhenDeviceIsClassCUnlocked:
authorizationStatus
exitDate
fileExistsAtPath:
isInternalBuild
numberWithDouble:
latitude
referenceFrame
supportsLocationDirectorySearches
decodeObjectOfClasses:forKey:
doubleValue
executeQuery:error:
maxProbabilityLabelIdentifier
.cxx_destruct
xpcConnection
init
dealloc
boolValue
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
listener:shouldAcceptNewConnection:
pingWithCompletion:
anchorModelDidProvideModeSuggestions:
fetchCombinedSuggestionScoreForModeWithUUID:modeType:origin:originBundleId:originAnchorType:confidenceScore:secondsSinceSuggested:serializedTriggers:completionHandler:
fetchCombinedSuggestionScoreAndFlagsForModeWithUUID:modeType:origin:originBundleId:originAnchorType:confidenceScore:secondsSinceSuggested:serializedTriggers:completionHandler:
delegate
setDelegate:
T@"<ATXModeClassifierClientModelDelegate>",W,N
initWithConfiguredModeService:
initWithXPCListener:configuredModeService:
fetchCombinedSuggestionScoreForModeEvent:completionHandler:
_shouldUpdateHighestConfidenceSuggestion:newSuggestion:
_xpcListener
_lock
_modeService
_delegate
T@"<ATXModeClassifierClientModelDelegate>",W,N,V_delegate
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
Home
Work
School
merge:with:
expirePreviousLOIBefore:
homeLOI
workLOI
schoolLOI
gymLOI
currentLOI
setCurrentLOI:
previousLOI
setPreviousLOI:
predictedNextLOIs
setPredictedNextLOIs:
predictedExitTimes
setPredictedExitTimes:
lastUpdateDate
setLastUpdateDate:
locationsOfInterest
_currentLOI
_previousLOI
_predictedNextLOIs
_predictedExitTimes
_lastUpdateDate
_locationsOfInterest
T@"ATXLocationOfInterest",&,N,V_currentLOI
T@"ATXLocationOfInterest",&,N,V_previousLOI
T@"NSArray",&,N,V_predictedNextLOIs
T@"NSArray",&,N,V_predictedExitTimes
T@"NSDate",&,N,V_lastUpdateDate
T@"ATXLocationManagerKnownLOIs",R,N,V_locationsOfInterest
T@"CLLocation",R,N
provideFeatures
beginListening
stopListening
T@"<ATXModeFeaturizerDelegate>",W,N
_provideFeaturesWithLocalizationEvent:
_processLocalizationEvent:
_queue
_scheduler
_sink
T@"<ATXModeFeaturizerDelegate>",W,N,V_delegate
type
Tq,R,N
initWithiTunesCategoryId:
iTunesCategoryId
_iTunesCategoryId
Tq,R,N,V_iTunesCategoryId
initWithLocationIdentifier:namedLOI:
namedLOI
locationIdentifier
_namedLOI
_locationIdentifier
TQ,R,N,V_namedLOI
T@"NSString",R,N,V_locationIdentifier
timeComponents
_timeComponents
T@"NSDateComponents",R,N,V_timeComponents
initWithLocationUUID:
uuid
_uuid
T@"NSString",R,N,V_uuid
initWithDeviceIdentifier:
deviceIdentifier
_deviceIdentifier
T@"NSString",R,N,V_deviceIdentifier
initWithDeviceIdentifier:deviceName:
deviceName
_deviceName
T@"NSString",R,N,V_deviceName
_provideFeaturesWithScreenShareEvent:
_processNewScreenShareEvent:
initWithModeUUID:isStart:anchorType:score:numUniqueOccurrencesAfterAnchor:posteriorProbability:classConditionalProbability:serializedTriggers:
modeUUID
isStart
anchorType
score
numUniqueOccurrencesAfterAnchor
posteriorProbability
classConditionalProbability
serializedTriggers
_isStart
_modeUUID
_anchorType
_score
_numUniqueOccurrencesAfterAnchor
_posteriorProbability
_classConditionalProbability
_serializedTriggers
T@"NSString",R,N,V_modeUUID
TB,R,N,V_isStart
T@"NSString",R,N,V_anchorType
Td,R,N,V_score
TQ,R,N,V_numUniqueOccurrencesAfterAnchor
Td,R,N,V_posteriorProbability
Td,R,N,V_classConditionalProbability
T@"NSArray",R,N,V_serializedTriggers
_provideFeaturesWithGameControllerEvent:
_processNewGameControllerEvent:
expectedGenreId
additionalAllowedBundleIds
modeFeatureType
registrationId
copyWithZone:
typeAsString:
StringAsType:
mode
setMode:
setHasMode:
hasMode
modeAsString:
StringAsMode:
setIntValue:
setHasIntValue:
hasIntValue
hasStrValue
setStartDate:
setHasStartDate:
hasStartDate
setEndDate:
setHasEndDate:
hasEndDate
hasJsonMeta
origin
setOrigin:
setHasOrigin:
hasOrigin
originAsString:
StringAsOrigin:
hasOriginBundleId
setIsStart:
setHasIsStart:
hasIsStart
dictionaryRepresentation
readFrom:
writeTo:
copyTo:
mergeFrom:
setUuid:
setType:
intValue
strValue
setStrValue:
startDate
endDate
jsonMeta
setJsonMeta:
originBundleId
setOriginBundleId:
_endDate
_startDate
_intValue
_jsonMeta
_mode
_origin
_originBundleId
_strValue
_type
_has
T@"NSString",&,N,V_uuid
Ti,N,V_type
TB,N
Ti,N,V_mode
Ti,N,V_intValue
TB,R,N
T@"NSString",&,N,V_strValue
Td,N,V_startDate
Td,N,V_endDate
T@"NSString",&,N,V_jsonMeta
Ti,N,V_origin
T@"NSString",&,N,V_originBundleId
TB,N,V_isStart
setVersion:
setHasVersion:
hasVersion
hasModeRecord
version
modeRecord
setModeRecord:
_modeRecord
_version
Ti,N,V_version
T@"ATXModePBRecord",&,N,V_modeRecord
initWithQueue:operationBlock:andLeeway:
runAfterDelaySecondsIfNotYetScheduled:
cancelPendingOperation
_timer
_block
_leewaySeconds
_scheduledDate
_latestAppLaunchBundleId
_provideFeaturesWithBundleId:
_actuallyEndMode
_actuallyStartMode
_processNewAppLaunchEvent:
easeInTimerIsEnabled
setEaseInTimerIsEnabled:
cooldownTimerIsEnabled
setCooldownTimerIsEnabled:
state
setState:
_cooldownTimer
_easeInTimer
_easeInTimerIsEnabled
_cooldownTimerIsEnabled
_state
Tq,V_state
TB,N,V_easeInTimerIsEnabled
TB,N,V_cooldownTimerIsEnabled
closestLOI:toLocation:
fetchClosestLOIWithinDistance:ofLocation:reply:
fetchLOILocationOfType:reply:
fetchLOIVisitedDuring:reply:
fetchNextPredictedLOIFromLocation:startDate:timeInterval:requireHighConfidence:reply:
fetchPredictedExitDatesFromLocation:onDate:requireHighConfidence:reply:
fetchRoutineModeFromLocation:
initWithRoutineManager:
_routineManager
initWithInferredModeStream:locationManager:
_subscribeToModeChanges
_subscribeToStreamWithPublisher:scheduler:sink:
_triggerMicrolocationRecordingAtModeStartWithStoreEvent:
_triggerHistoricalLabelDonationAtModeEndWithStoreEvent:
_isUserFocusComputedModeEventEligibleForMicrolocationRecording:
_isUserFocusComputedModeEventEligibleForHistoricalLabelDonations:
_isInferredModeEventEligibleForMicrolocationRecording:
_isInferredModeEventEligibleForHistoricalLabelDonations:
_schedulerForStreamName:
_userDidEnterModeOrModeWasPredicted
_userDidExitModeOrModeWasNoLongerPredicted
_triggerMicroLocationHistoricalLabelDonationWithStartDate:endDate:
_triggerMicroLocationRecordingScan
_donateTruthLabelForTriggerUUID:truthLabel:
_truthLabelForMode:
_coalescingTimerForRecordingScans
_coalescingTimerForHistoricalLabelDonations
_inferredModeStream
_inferredModeScheduler
_inferredModeStreamSink
_userFocusComputedModeStream
_userComputedModeScheduler
_userComputedModeStreamSink
_locationManager
_timeBuffer
stringForMotionType:
motionTypeForString:found:
_createWorkoutPredicate
_setUpContextIfNecessary
isInWorkout
setIsInWorkout:
_userContext
_registration
_isInWorkout
TB,V_isInWorkout
loadNowOrCallLater:
write:
clear
cacheExpirationInterval
setCacheExpirationInterval:
initWithPath:environment:locationParameters:
initWithLocationParameters:
_tryToOpen
_deviceDidUnlock
_path
_env
_deferredLoadCallback
_cacheExpirationInterval
Td,V_cacheExpirationInterval
isLocked
openFileAtPath:dataProtectionClass:
callOnNextUnlock:
_stateChangeRegistration
publisherForLastNEvents:
sinkOnScheduler:withCompletion:receiveInput:
_currentModeEvent
provideModeClassifierWhenReadyWithDuetHelper:block:
updateModeWithUUID:userModeName:modeType:modeOrigin:originAnchorType:originBundleId:uiLocation:confidenceScore:serializedTriggers:allowsSmartEntry:shouldSuggestTriggers:currentMode:stream:
clientModel:didUpdatePredictionWithUUID:userModeName:modeType:confidenceScore:modeOrigin:originBundleId:originAnchorType:serializedTriggers:
initWithDuetHelper:
currentMode
_isModeType:uuid:sameAsModeFromEvent:
_updateWithGuardedData:newModeUUID:userModeName:modeType:modeOrigin:originBundleId:originAnchorType:uiLocation:confidenceScore:serializedTriggers:allowsSmartEntry:shouldSuggestTriggers:
_updateWithNewModeUUID:userModeName:modeType:modeOrigin:originBundleId:originAnchorType:uiLocation:confidenceScore:serializedTriggers:allowsSmartEntry:shouldSuggestTriggers:
_updateWithNewModeUUIDIfNeeded:userModeName:modeType:modeOrigin:originBundleId:originAnchorType:confidenceScore:serializedTriggers:
_shouldUpdateMode:currentModeScore:newModeOrigin:newModeScore:
_setUpModeExpirationTimerIfNeededWithModeOrigin:
_expireMode
_anchorModelSuggestionServer
_heuristicModeClassifier
_microlocationRecordingTrigger
_modeExpirationTimer
initWithPossibleCategoryNames:startDate:endDate:hasExited:
identifier
isEqualToATXPOICategoryVisitEvent:
possibleCategoryNames
hasExited
_hasExited
_possibleCategoryNames
T@"NSDate",R,N,V_startDate
T@"NSDate",R,N,V_endDate
T@"NSOrderedSet",R,N,V_possibleCategoryNames
TB,R,N,V_hasExited
isTime:betweenStartTime:endTime:
modeConfigurationService:didReceiveAvailableModesUpdate:
modeConfigurationService:didReceiveAppConfigurationContextUpdateForModeIdentifier:
_createServiceIfNeeded
_cacheAndReturnDNDModeConfigurationDictionary
_cacheDNDModeConfigurationDictionary:
_retrieveCachedDNDModeConfigurationDictionary
isActivityTypeConfigured:
isActivityTypeConfigured:uuid:allowsSmartEntry:userModeName:
_isActivityTypeConfigured:uuid:allowsSmartEntry:userModeName:dndConfigs:
isActivityWithUUIDConfigured:
isActivityWithUUIDConfigured:activityType:allowsSmartEntry:userModeName:
_isActivityWithUUIDConfigured:activityType:allowsSmartEntry:userModeName:dndConfigs:
DNDModeConfigurationForActivityWithUUID:
_DNDModeConfigurationForActivityWithUUID:dndConfigs:
_checkIfConfigurationOfCurrentModeChangedWithDNDConfigs:
_modeConfigurationsReturningError:
_updateUserDefaultsForAnyNewlyAddedModesWithDNDConfigs:
_service
_cache
initWithStream:
getCurrentVisit
subscribeToPOIChangesForCategories:observer:enterSelector:exitSelector:sinkCompletion:
hasExitedAllCategories:
unsubscribeToPOIChanges
streamAggregator
setStreamAggregator:
stream
setStream:
scheduler
setScheduler:
sink
setSink:
queue
setQueue:
_streamAggregator
_stream
T@"ATXPOICategoryEventAggregator",&,N,V_streamAggregator
T@"ATXPOICategoryStream",&,N,V_stream
T@"BMBiomeScheduler",&,N,V_scheduler
T@"BPSSink",&,N,V_sink
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
handleChange
dataProvider
setDataProvider:
_dataProvider
T@"ATXPOICategoryVisitDataProvider",&,N,V_dataProvider
_eventsDidChange:
isLikelyAWorkCalendar:
initWithLocationManager:
_updateFeatures
_setFeaturesForEventsCurrentlyIn:now:featureSet:
_shouldStayInWorkModeInBetweenMostRecentWorkEvent:andUpcomingWorkEvent:
_shouldInitiateMicrolocationLocalizationWithMostRecentWorkEvent:upcomingWorkEvent:now:
_isDate:betweenStartDate:andEndDate:
_shouldConsiderEventBasedOnParticipantStatus:
_fetchEligibleEventsForDay
_addTimerForDate:
calendarRefreshCoalesceTimerIsEnabled
setCalendarRefreshCoalesceTimerIsEnabled:
_timers
_featureUpdateTimer
_microlocationLocalization
_calendarRefreshCoalesceTimerIsEnabled
TB,N,V_calendarRefreshCoalesceTimerIsEnabled
eventsType
hasUserID
clearEvents
addEvents:
eventsCount
eventsAtIndex:
setTimezone:
setHasTimezone:
hasTimezone
setTimestamp:
setHasTimestamp:
hasTimestamp
userID
setUserID:
events
setEvents:
timezone
timestamp
_timestamp
_events
_timezone
_userID
T@"NSString",&,N,V_userID
T@"NSMutableArray",&,N,V_events
Ti,N,V_timezone
TQ,N,V_timestamp
initiateLocalization
_triggerMicroLocationLocalization
_coalescingTimer
initWithDictionary:
setValue:forBinaryFeatureOfType:
setValue:forFeatureType:
setNullForFeatureType:
setString:forFeatureType:
boolValueForFeatureType:
valueForFeatureType:
stringForFeatureType:
_enumerateFeaturesUsingBlock:
mergeWithFeatures:
_features
stringForDate:
logEventsFromModeStream
_userDefaults
_lastSubmissionDate
_updateLastSubmissionDate:
shareDiagnosticDataWrapper
setShareDiagnosticDataWrapper:
_formatter
_defaults
_duetHelper
_shareDiagnosticDataWrapper
TB,V_shareDiagnosticDataWrapper
compare:
handleNewEvent
returnValueOnError
queryEvents
addTimerForDate:
timers
setTimers:
T@"NSHashTable",&,N,V_timers
_provideFeaturesWithScreenRecordingEvent:
_processNewScreenRecordingEvent:
_provideFeaturesWithLocationEvent:
_processNewLocationEvent:
_provideFeaturesWithSleepEvent:
_processNewSleepEvent:
debugDescriptionForCLLocation:
stringForLOIType:
didChangeLocationEnabled:
didChangePreciseLocationEnabled:
locationManagerGPS:didEnterRegionWithIdentifier:
locationManagerGPS:didExitRegionWithIdentifier:
locationOfInterestAtCurrentLocation
locationOfInterestAtCurrentLocationWithCompletionHandler:
cachedLocationOfInterestAtCurrentLocation
distanceFromHomeOfCurrentLocationInMeters
distanceFromWorkOfCurrentLocationInMeters
distanceFromSchoolOfCurrentLocationInMeters
distanceFromGymOfCurrentLocationInMeters
fetchAllLocationsOfInterest:
fetchLocationsOfInterestVisitedDuring:handler:
clearLocationOfInterest
invalidateLocationOfInterestCache
getCurrentLocation
getCurrentLocationWithShiftInChina
getCurrentPreciseLocation
getCurrentPreciseLocationWithShiftInChina
beginMonitoringRegion:
stopMonitoringRegionWithIdentifier:
stateForRegion:withTimeout:
isTourist
isTouristWithCurrentDate:
isNearKnownTypeLocationOfInterest
isNearFrequentLocationOfInterest
isNearKnownTypeOrFrequentLocationOfInterest
predictedLocationsOfInterest
getPredictedLocationsOfInterestFromLOIName:startDate:
getPredictedExitTimesFromLOIName:startDate:
isAvailableLocationOfInterestType:
initWithStateStore:modeGlobals:
initWithGPS:routine:stateStore:now:modeGlobals:
setNow:
locationEnabled
preciseLocationEnabled
shifter
_currentLocationAndNeedsUpdate_RequestPreciseLocation:
shiftedLocationForChinaFromLocation:
getCurrentLocation_RequestPreciseLocation:
getCurrentLocationWithCompletionHandler:
_updateLocationsOfInterestWithCurrentLocation:
updateCurrentLocationOfInterest
updateCurrentLocationOfInterestWithCompletionHandler:
_fetchLocationOfInterest:inGroup:
_gotLocation:forLocationOfInterest:
gotState:
_handleRoutineError:forThing:
updateCurrentLocationOfInterestIfTimeElapsed
_updateCurrentLocationOfInterestIfTimeElapsedWithCompletionHandler:
previousLOIAndCurrentLOI
_updatePredictedLocationsOfInterestIfTimeElapsed
_updatePredictedExitTimesIfTimeElapsed
updatePredictedLocationsOfInterest
updatePredictedExitTimes
_distanceOfCurrentLocationFrom:
isLocationNearKnownTypeLocationOfInterest:
getCurrentRoutineModeWithCurrentDate:
predictedNextLOITimeout
setPredictedNextLOITimeout:
predictedExitDateTimeout
setPredictedExitDateTimeout:
_gps
_routine
_stateStore
_shifter
_loiUpdateQueue
_modeGlobals
_now
_predictedNextLOITimeout
_predictedExitDateTimeout
T@"NSDate",&,N,V_now
Td,N,V_predictedNextLOITimeout
Td,N,V_predictedExitDateTimeout
currentLocation
lastRequestLocationDate
currentRoutineMode
lastLOIUpdateTimestamp
lastRoutineModeTimestamp
lastPredictedLOIsUpdateTimestamp
lastPredictedExitTimesUpdateTimestamp
currentModeUUID
currentBMUserFocusComputedModeEvent
currentBMUserFocusComputedStoreEvent
lastTwoUserFocusComputedStoreEvents
modeUpdateSourceAsString
modeUpdateReasonAsString
modeSemanticTypeAsString
sharedInstance
locationManager:didUpdateToLocation:fromLocation:
locationManager:didUpdateLocations:
locationManager:didUpdateHeading:
locationManagerShouldDisplayHeadingCalibration:
locationManager:didDetermineState:forRegion:
locationManager:didRangeBeacons:inRegion:
locationManager:rangingBeaconsDidFailForRegion:withError:
locationManager:didRangeBeacons:satisfyingConstraint:
locationManager:didFailRangingBeaconsForConstraint:error:
locationManager:didEnterRegion:
locationManager:didExitRegion:
locationManager:didFailWithError:
locationManager:monitoringDidFailForRegion:withError:
locationManager:didChangeAuthorizationStatus:
locationManagerDidChangeAuthorization:
locationManager:didStartMonitoringForRegion:
locationManagerDidPauseLocationUpdates:
locationManagerDidResumeLocationUpdates:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didVisit:
updateLocationWithTimeout:requestPreciseLocation:
updateLocationWithCompletionHandler:
location
T@"<ATXLocationManagerGPSDelegate>",W,N
_init
_startUpdateIfNeededWithPreciseLocation:
_requestStateIfNeededForRegion:
_existingRegionWithIdentifierOnCLQueue:
_updateConditionAndInvokeLocationBlocks:error:
_clQueue
_updateCondition
_locationEnabled
_preciseLocationEnabled
_updatePending
_locationBlocksToInvoke
_requestStateCondition
_regionRequested
T@"<ATXLocationManagerGPSDelegate>",W,N,V_delegate
modeStreamFrom:to:limit:
modeStreamFrom:to:ascending:limit:
_updateModeStreamEndDates:to:
_duetStreamShim
_provideFeaturesWithLastDNDWDEvent:
_processNewDNDWDEvent:
_fetchMostRecentDNDWDEvent
_beginListeningForDNDWDEvents
_DNDWDSink
_DNDWDScheduler
_aggregateFeatures
_lastFeatureUpdateDate
_featureBuffer
featurizer:didUpdateFeatures:
initWithDuetHelper:configuredModeService:locationManager:
initWithFeaturizers:minUpdateInterval:duetHelper:configuredModeService:
update
_requestFeaturesFromAllFeaturizersAndUpdate
_updateIfNeededWithGuardedData:
_serializedTriggersForMode:fromAggregateFeatures:
_triggersForMode:fromAggregateFeatures:
_isUserWorkingFromHomeWithAggregateFeatures:
_updateWithGuardedData:
currentModeUUID:userModeName:modeType:confidenceScore:origin:originBundleId:serializedTrigger:allowsSmartEntry:
_currentModeUUID:userModeName:modeType:confidenceScore:origin:originBundleId:serializedTrigger:allowsSmartEntry:guardedData:
_originForMode:fromAggregateFeatures:
_confidenceScoreForMode:fromAggregateFeatures:
_predictModeWithFeature:
currentFeaturesInDictionary
updateWithFeatureSet:
updateWithFeatureSet:immediately:reply:
reset
_minUpdateInterval
_featurizers
_logger
currentBMInferredModeEvent
previousBMInferredModeEvent
lastTwoInferredModeEvents
inferredModeEventWithSuggestionUUID:
hasMotionActivity
_fetchMotionActivities
updateCurrentActivity:
getCurrentActivity
_motionActivityHandler
startUpdatingMotionType:forDelegate:
stopUpdatingMotionType:forDelegate:
_motionActivityManager
_motionActivityQueue
_delegatesMonitoringForMotionType
_mostRecentActivity
_currentMotion
_getMotionStringFromCMMotionActivity:
_getMotionTypeFromCMMotionActivity:
getMotionStringFromMotionType:
summarizeActivityStream:
canPredictClipsForActivityStream:
findMostCommonAndRecent:identityFunc:
initWithMotionType:stationary:canPredictClipsGivenRecentMotion:
initFromCMMotionActivity:
initFromCMMotionActivity:canPredictClipsGivenRecentMotion:
getMotionString
print
motiontype
stationary
canPredictClipsGivenRecentMotion
_stationary
_canPredictClipsGivenRecentMotion
_motiontype
Tq,R,N,V_motiontype
TB,R,N,V_stationary
TB,R,N,V_canPredictClipsGivenRecentMotion
initWithATXMotion:
update:
isExpired
currentMotion
lastUpdated
T@"ATXMotion",R,C,N,V_currentMotion
groupVisitsFromPublisher:startTimestamp:endTimestamp:
initWithCategoryEvents:exitEvent:
visitEvent
visitEventAllowingMissingExit:
categoryEnterEvents
exitEvent
_categoryEnterEvents
_exitEvent
T@"NSArray",R,N,V_categoryEnterEvents
T@"BMStoreEvent",R,N,V_exitEvent
initWithEvents:finalPOIWithoutExit:
finalPOIWithoutExit
_finalPOIWithoutExit
T@"NSArray",R,N,V_events
T@"ATXPOICategoryVisitEvent",R,N,V_finalPOIWithoutExit
initWithUUID:visits:coordinate:type:
initWithUUID:visits:coordinate:
addVisitFrom:to:
isEqualToLocation:
visits
coordinate
setCoordinate:
_visits
_coordinate
T{CLLocationCoordinate2D=dd},N,V_coordinate
T@"NSUUID",R,N,V_uuid
T@"NSArray",R,N,V_visits
Tq,R,N,V_type
initWithName:type:
_name
v16@0:8
@"NSXPCConnection"
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v24@0:8@?16
v24@0:8@16
v24@0:8@?<v@?B>16
v24@0:8@"NSArray"16
v88@0:8@16Q24q32@40@48d56d64@72@?80
v88@0:8@"NSString"16Q24q32@"NSString"40@"NSString"48d56d64@"NSArray"72@?<v@?@"NSNumber">80
v88@0:8@"NSString"16Q24q32@"NSString"40@"NSString"48d56d64@"NSArray"72@?<v@?@"NSNumber"BBB>80
@"<ATXModeClassifierClientModelDelegate>"16@0:8
v24@0:8@"<ATXModeClassifierClientModelDelegate>"16
@24@0:8@16
@32@0:8@16@24
v32@0:8@16@?24
@"NSXPCListener"
@"_PASLock"
@"ATXConfiguredModeService"
@"<ATXModeClassifierClientModelDelegate>"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"CLLocation"
@"ATXLocationOfInterest"
@"NSArray"
@"NSDate"
@"ATXLocationManagerKnownLOIs"
@"ATXModeFeatureSet"16@0:8
@"<ATXModeFeaturizerDelegate>"16@0:8
v24@0:8@"<ATXModeFeaturizerDelegate>"16
@"NSObject<OS_dispatch_queue>"
@"BMBiomeScheduler"
@"BPSSink"
@"<ATXModeFeaturizerDelegate>"
q16@0:8
@24@0:8Q16
@32@0:8@16Q24
@"NSString"
@"NSDateComponents"
@76@0:8@16B24@28d36Q44d52d60@68
d16@0:8
i16@0:8
@24@0:8^{_NSZone=}16
@20@0:8i16
i24@0:8@16
v20@0:8i16
v20@0:8B16
v24@0:8d16
{?="endDate"b1"startDate"b1"intValue"b1"mode"b1"origin"b1"isStart"b1}
@"ATXModePBRecord"
{?="version"b1}
@40@0:8@16@?24d32
@24@0:8d16
@"NSObject<OS_dispatch_source>"
v24@0:8q16
@"_PASSimpleCoalescingTimer"
v40@0:8d16@24@?32
v32@0:8q16@?24
v52@0:8@16@24d32B40@?44
v44@0:8@16@24B32@?36
Q24@0:8@16
v40@0:8d16@"CLLocation"24@?<v@?@"ATXLocationOfInterest"@"NSError">32
v32@0:8q16@?<v@?@"CLLocation"@"NSError">24
v32@0:8@"NSDateInterval"16@?<v@?@"NSArray"@"NSError">24
v52@0:8@"CLLocation"16@"NSDate"24d32B40@?<v@?@"NSArray"@"NSError">44
v44@0:8@"CLLocation"16@"NSDate"24B32@?<v@?@"NSArray"@"NSError">36
Q24@0:8@"CLLocation"16
@"RTRoutineManager"
v40@0:8@16@24@32
v32@0:8@16@24
@"BMInferredModeStream"
@"BMUserFocusComputedModeStream"
@"CLLocationManager"
@24@0:8q16
q32@0:8@16^B24
@"_CDClientContext"
@"_CDContextualChangeRegistration"
@24@0:8@?16
@"ATXLocationManagerState"24@0:8@?<v@?@"ATXLocationManagerState">16
v24@0:8@"ATXLocationManagerState"16
@40@0:8@16@24@32
@"<ATXLocationManagerStateStoreOnDiskEnv>"
i28@0:8@16i24
i28@0:8@"NSString"16i24
v24@0:8@?<v@?>16
@40@0:8@16@?24@?32
@"BMInferredModeEvent"
@112@0:8@16@24Q32q40@48@56Q64d72@80B88B92@96@104
v88@0:8@16@24@32Q40d48q56@64@72@80
v88@0:8@"<ATXModeClassifierClientModel>"16@"NSString"24@"NSString"32Q40d48q56@"NSString"64@"NSString"72@"NSArray"80
B40@0:8Q16@24@32
v104@0:8@16@24@32Q40q48@56@64Q72d80@88B96B100
v96@0:8@16@24Q32q40@48@56Q64d72@80B88B92
v80@0:8@16@24Q32q40@48@56d64@72
B48@0:8q16@24q32@40
@"_PASQueueLock"
@"ATXModeAnchorModelSuggestionServer"
@"ATXModeHeuristicClassifier"
@"ATXMicrolocationRecordingTrigger"
@44@0:8@16@24@32B40
@"NSOrderedSet"
B40@0:8d16d24d32
v32@0:8@"DNDModeConfigurationService"16@"NSArray"24
v32@0:8@"DNDModeConfigurationService"16@"NSString"24
B24@0:8Q16
B48@0:8Q16^@24^B32^@40
B56@0:8Q16^@24^B32^@40@48
B48@0:8@16^Q24^B32^@40
B56@0:8@16^Q24^B32^@40@48
@24@0:8^@16
@"DNDModeConfigurationService"
@"ATXGenericFileBasedCache"
v56@0:8@16@24:32:40@?48
@"ATXPOICategoryEventAggregator"
@"ATXPOICategoryStream"
@"ATXPOICategoryVisitDataProvider"
B40@0:8@16@24@32
B24@0:8q16
@"NSHashTable"
@"ATXMicrolocationLocalization"
v24@0:8Q16
@"NSMutableArray"
{?="timestamp"b1"timezone"b1}
v24@0:8B16i20
v28@0:8@16i24
B20@0:8i16
@"NSMutableDictionary"
@"NSDateFormatter"
@"NSUserDefaults"
@"ATXModeDuetHelper"
v32@0:8@"<ATXLocationManagerGPS>"16@"NSString"24
q32@0:8@16d24
@"ATXLocationOfInterest"16@0:8
v24@0:8@?<v@?@"ATXLocationOfInterest"@"NSError">16
v24@0:8@?<v@?@"NSArray"@"NSError">16
@"CLLocation"16@0:8
v24@0:8@"CLRegion"16
v24@0:8@"NSString"16
q32@0:8@"CLRegion"16d24
B24@0:8@"NSDate"16
@"NSString"24@0:8q16
@"NSArray"16@0:8
@"NSArray"32@0:8@"NSString"16@"NSDate"24
@56@0:8@16@24@32@40@48
@20@0:8B16
v32@0:8q16@24
v32@0:8@16q24
d24@0:8@16
@"<ATXLocationManagerGPS>"
@"<ATXLocationManagerRoutine>"
@"<ATXLocationManagerStateStore>"
@"GEOLocationShifter"
@"<ATXLocationParameters>"
@"ATXLocationManagerState"
v40@0:8@16q24@32
v40@0:8@"CLLocationManager"16@"CLLocation"24@"CLLocation"32
v32@0:8@"CLLocationManager"16@"NSArray"24
v32@0:8@"CLLocationManager"16@"CLHeading"24
B24@0:8@"CLLocationManager"16
v40@0:8@"CLLocationManager"16q24@"CLRegion"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconRegion"32
v40@0:8@"CLLocationManager"16@"CLBeaconRegion"24@"NSError"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconIdentityConstraint"32
v40@0:8@"CLLocationManager"16@"CLBeaconIdentityConstraint"24@"NSError"32
v32@0:8@"CLLocationManager"16@"CLRegion"24
v32@0:8@"CLLocationManager"16@"NSError"24
v40@0:8@"CLLocationManager"16@"CLRegion"24@"NSError"32
v28@0:8@"CLLocationManager"16i24
v24@0:8@"CLLocationManager"16
v32@0:8@"CLLocationManager"16@"CLVisit"24
@28@0:8d16B24
@"CLLocation"28@0:8d16B24
v24@0:8@?<v@?@"CLLocation"@"NSError">16
@"<ATXLocationManagerGPSDelegate>"16@0:8
v24@0:8@"<ATXLocationManagerGPSDelegate>"16
@"NSCondition"
@"NSMutableSet"
@"CLRegion"
@"<ATXLocationManagerGPSDelegate>"
@40@0:8@16@24Q32
@44@0:8@16@24B32Q36
@"ATXModeFeatureSet"
v32@0:8@"<ATXModeFeaturizer>"16@"ATXModeFeatureSet"24
@48@0:8@16d24@32@40
@32@0:8Q16@24
v80@0:8^@16^@24^Q32^d40^q48^@56^@64^B72
v88@0:8^@16^@24^Q32^d40^q48^@56^@64^B72@80
q32@0:8Q16@24
d32@0:8Q16@24
v36@0:8@16B24@?28
@"ATXModeScheduler"
@"ATXModeLogger"
@?16@0:8
@"CMMotionActivityManager"
@"NSOperationQueue"
@"CMMotionActivity"
q24@0:8@16
@32@0:8@16@?24
@32@0:8q16B24B28
@28@0:8@16B24
@"ATXMotion"
@40@0:8@16d24d32
@"BMStoreEvent"
@"ATXPOICategoryVisitEvent"
@56@0:8@16@24{CLLocationCoordinate2D=dd}32q48
@48@0:8@16@24{CLLocationCoordinate2D=dd}32
v32@0:8Q16Q24
{CLLocationCoordinate2D=dd}16@0:8
v32@0:8{CLLocationCoordinate2D=dd}16
@"NSUUID"
{CLLocationCoordinate2D="latitude"d"longitude"d}
@32@0:8@16q24
