@(#)PROGRAM:ProactiveContextClient  PROJECT:AppPrediction-1
%s: error with xpc connection: %@
ATXModeAnchorModelSuggestionServer: Received %{public}lu suggestions
ATXModeAnchorModelSuggestionServer: Suggestion modeId: %{public}@, isStart: %{public}@, anchorType: %{public}@
ATXModeAnchorModelSuggestionServer: Suggestion modeUUID: %{public}@ is not configured, skipping
ATXModeAnchorModelSuggestionServer: Updated suggestion to modeUUID: %{public}@, isStart: %{public}@, anchorType: %{public}@
ATXModeAnchorModelSuggestionServer: Rejecting connection %{public}@ without entitlement %{public}@
ATXModeAnchorModelSuggestionServer: XPC connection interrupted.
ATXModeAnchorModelSuggestionServer: XPC connection invalidated.
ATXModeAnchorModelSuggestionServer: accepts XPC connection: %{public}@
Could not deserialize trigger: %@
Could not serialize trigger: %@
ATXModeScreenShareFeaturizer: done fetching last screen share event
ATXModeScreenShareFeaturizer: error fetching last screen share event: %@
ATXModeScreenShareFeaturizer: updating screen share feature: isScreenSharing: %d, isAirPlayMirroring: %d
ATXModeScreenShareFeaturizer: registering for real time events
ATXModeScreenShareFeaturizer: done listening to screen share events
ATXModeScreenShareFeaturizer: error listening to screen share events: %@
ATXModeScreenShareFeaturizer: received new screen share event, isStart: %{public}@
ATXModeGameControllerFeaturizer: done fetching last event
ATXModeGameControllerFeaturizer: error fetching last event: %@
ATXModeGameControllerFeaturizer: updating game controller feature: %d
ATXModeGameControllerFeaturizer: registering for real time events
ATXModeGameControllerFeaturizer: done listening to game controller events
ATXModeGameControllerFeaturizer: error listening to game controller events: %@
ATXModeGameControllerFeaturizer: received new game controller event, isConnected: %{public}@
%s: an operation has already been scheduled at %@. Skip this request.
%s: schedule an operation with %.2lf seconds delay
DNDModeSemanticTypeToATXActivityType: DNDModeSemanticType %lu not handled in switch statement
ATXModeAppLaunchFeaturizer: done fetching last app launch event
ATXModeAppLaunchFeaturizer: error fetching last app launch event: %@
ATXModeAppLaunchFeaturizer: Initial state: %ld
ATXModeAppLaunchFeaturizer: State after cooldown: not active
ATXModeAppLaunchFeaturizer: State after ease-in: active
ATXModeAppLaunchFeaturizer: Entering ease in period before entering state
ATXModeAppLaunchFeaturizer: Already easing in and still not in state
ATXModeAppLaunchFeaturizer: Going back to inactive state since user quit prematurely
ATXModeAppLaunchFeaturizer: Entering cool down period before exiting state
ATXModeAppLaunchFeaturizer: Going back to proper state
ATXModeAppLaunchFeaturizer: Already cooling down and still not in state
ATXModeAppLaunchFeaturizer: Unexpected state %ld %ld
ATXModeAppLaunchFeaturizer: done listening to app launch events
ATXModeAppLaunchFeaturizer: error listening to app launch events: %@
ATXModeAppLaunchFeaturizer: Could not get application record for inferring app genre: %@
ATXModeAppLaunchFeaturizer: Genre: %llu
Predicted next LOI: %@, confidence: %lf
Predicted Exit Time: %@, uncertainty: %lf, confidence %lf
Error while fetching routine mode from CoreRoutine. Error: %@
CoreRoutine did not return any routine mode. Returning ATXRoutineModeUnknown.
stringForMotionType called with invalid ATXMotionType of %tu
Could not form workout predicate
self went away
No workout payload: %@
Workout payload is not dictionary: %@
Workout state string: %@
Failed to register Core Duet contextual change handler
Unable to retrieve all workout types from HealthKit
Failed to soft-link HealthKit: %s
Error deserializing: %@
Error serializing: %@
Error writing location manager file
failed to open '%@': [%i] %s
ATXModeClassifier initing with current mode: %@
ATXModeClassifier finished initialization
ATXModeClassifier: not updating because new mode (%{public}@, %lu) is same as current mode (%{public}@, %lu)
ATXModeClassifier: mode updated from uuid:%{public}@, modeType:%lu to uuid:%{public}@, modeType:%lu, uiLocation of new suggestion: %lu
ATXModeClassifier: couldn't perform update operation because swelf is nil
ATXModeClassifier: fetching combined score for current mode (uuid: %{public}@, type:%lu) and new mode (uuid: %{public}@, type:%lu) to see if we should update
ATXModeClassifier: fetched score for current mode: %@. Fetching score and flags for new mode.
Comparing current mode: %{public}@ (combinedScore: %{public}@, with new mode: %{public}@ (combinedScore: %{public}@)
ATXModeClassifer: something went wrong fetching widget scores! currentModeScore: %@, newModeScore: %@
ATXModeClassifier: %{public}@ updated its mode prediction: modeUUID: %{public}@, modeType: %lu
ATXConfiguredModeService: Could not reference DNDModeConfigurationService
ATXConfiguredModeService: Adding a listener failed with error: %@
ATXConfiguredModeService: Caching DND mode configs in user defaults as a backup.
ATXConfiguredModeService: Error writing DND mode config data to cache.
ATXConfiguredModeService: Could not obtain DND mode configurations with error: %{public}@
ATXConfiguredModeService: Error getting dndModeConfigurationClass.
ATXConfiguredModeService: configured modes: %@
ATXConfiguredModeService: mode is no longer configured, updating suggestion to have nil modeUUID and userModeName
ATXConfiguredModeService: New mode (modeUUID: %{public}@, type: %lu) was updated to now allow smart trigger. Updating mode inference with smart entry enabled
ATXConfiguredModeService: historically configured mode semantic types: %@
ATXConfiguredModeService: mode configuration did change. Checking if this affects the current mode and if any new modes were added
Failed to soft-link DoNotDisturb: %s
ATXModeCalendarClassifier: Refreshing due to event change
ATXModeCalendarClassifier: skipping event due to participation status: %lu
ATXModeCalendarClassifier: unknown participation status: %lu
ATXModeCalendarClassifier: Scheduling calendar refresh timer for: %@
ATXModeCalendarClassifier: Refreshing due to event start / end date passing
ATXModeFeatureSet: error initWithCoder: %@
Found %ld events of mode changes from %@ to %@
ATXModeScreenRecordingFeaturizer: done fetching last event
ATXModeScreenRecordingFeaturizer: error fetching last event: %@
ATXModeScreenRecordingFeaturizer: updating screen recording feature: %d
ATXModeScreenRecordingFeaturizer: registering for real time events
ATXModeScreenRecordingFeaturizer: done listening to screen recording events
ATXModeScreenRecordingFeaturizer: error listening to screen recording events: %@
ATXModeScreenRecordingFeaturizer: received new screen recording event, isStart: %{public}@
ATXModeRoutineFeaturizer: done fetching last location event
ATXModeRoutineFeaturizer: error fetching last location event: %@
ATXModeRoutineFeaturizer: updating features. isAtHome: %d isAtWork: %d
ATXModeRoutineFeaturizer: registering for real time events
ATXModeRoutineFeaturizer: done listening to location events
ATXModeRoutineFeaturizer: error listening to location events: %@
ATXModeRoutineFeaturizer: received new location event for semantic location: %lu, is starting: %d
ATXModeBedtimeFeaturizer: done fetching last sleep event
ATXModeBedtimeFeaturizer: error fetching last sleep event: %@
ATXModeBedtimeFeaturizer: updating bedtime feature: %{BOOL}d
ATXModeBedtimeFeaturizer: registering for real time events
ATXModeBedtimeFeaturizer: done listening to sleep events
ATXModeBedtimeFeaturizer: error listening to sleep events: %@
ATXModeBedtimeFeaturizer: received new sleep event of state: %{public}@
loaded cache, cached work LOI: %@, cached home LOI: %@
%@ - currentLocationAndNeedsUpdate:%u lastRequestLocationDate %@ was too recent, using cached location: %@
%@ - currentLocationAndNeedsUpdate:%u returning result: %@ and needsLocationUpdate: %u for reason: %@
Shifting Location for China if needed.
Changing reference frame because location was shifted
Location shift successful.
Error while fetching shifted cordinate
Location shift not needed.
%@ getCurrentLocation_RequestPreciseLocation:%@ Updating location
%@ getCurrentLocation_RequestPreciseLocation:%@ Updated location: %@
Updating location
Updated location: %@
Current LOI at %@
LOI fetch timed out
LOI fetch successful
Checking cache with age: %f
Using cached %@ LOI
Fetching %@ LOI
Falling back to cache because Core Routine failed
%@ LOI: %@
Disabling LOI updates due to error fetching %{public}@: %@
RT misuse fetching %{public}@: %@
Error fetching %{public}@: %@
Non-RT error fetching %{public}@: %@
Attempting to update location of interest since update age is %lf
Next Predicted LOIs: %@
Next predicted LOIs fetch timed out
Predicted Exit Times: %@
Predicted exit times fetch timed out
Updating predicted next lois in ATXLocationManager
Updating predicted exit times in ATXLocationManager
Distance to %@ LOI: %f meters
BMUserFocusComputedModeStream: done fetching last mode event
BMUserFocusComputedModeStream: error fetching last mode event: %@
BMUserFocusComputedModeEvent modeUpdateSourceAsString: undefined mode update source: %lu
BMUserFocusComputedModeEvent modeUpdateReasonAsString: undefined mode update reason: %lu
BMUserFocusComputedModeEvent modeSemanticTypeAsString: undefined mode semantic type: %lu
%@ - Querying GPS location now, requesting with precise location: %@
%@ - Timeout waiting for location update
Timeout waiting for region state update
%s: region: %@, state: %ld
%@ - Got location update: %@
Started monitoring region: %@
Failed to start monitoring region: %@ error: %@
did enter region: %@, region center: (%f, %f), region radius: %f
did enter region: %@, class: %@
did exit region: %@, region center: (%f, %f), region radius: %f
did exit region: %@, class: %@
Location error %@
Duet query: %@
Error querying Duet: %@
BMInferredModeOrigin: %lu not handled in switch statement
ATXModeDrivingFeaturizer: Driving mode activated by Do Not Disturb While Driving
ATXModeDrivingFeaturizer: done fetching last DNDWD launch event
ATXModeDrivingFeaturizer: error fetching last DNDWD event: %@
ATXModeDrivingFeaturizer: done listening to DNDWD events
ATXModeDrivingFeaturizer: error listening to DNDWD events: %@
ATXModeDrivingFeaturizer: received new DNDWD event
ATXModeHeuristicClassifier finished initialization
ATXModeHeuristicClassifier update with %d feature sets in buffer
BMInferredModeType: %lu not handled in switch statement
Found configured activity for type: %ld uuid: %{public}@
No configured activity for type: %ld, making generic suggestion
ATXModeHeuristicClassifier predict mode with features: %@
ATXModeHeuristicClassifier: %@ updated its features
BMInferredModeStream: done fetching last mode event. currentBMInferredModeEvent modeUUID:%{public}@, modeType: %lu
BMInferredModeStream: error fetching last mode event: %@
BMInferredModeStream: done fetching last mode event. previousBMInferredModeEvent modeUUID:%@, modeType: %lu
BMInferredModeStream: error fetching last mode event: %{public}@
BMInferredModeStream: done fetching mode event with suggestion UUID %{public}@, modeUUID:%{public}@, modeType:%lu
BMInferredModeStream: error fetching mode event with UUID %{public}@: %{public}@
BMInferredModeOriginIsHeuristic: mode origin: %ld not captured in switch statement
Error: motion activity query timed out
ATXMotionManagerWrapper: WALKING state changed to %d
ATXMotionManagerWrapper: RUNNING state changed to %d
ATXMotionManagerWrapper: CYCLING state changed to %d
ATXMotionManagerWrapper: AUTOMOTIVE state changed to %d
ATXMotionManagerWrapper: UNKNOWN state changed to %d
Current motion activities: %@
-[ATXModeAnchorModelSuggestionServer fetchCombinedSuggestionScoreForModeWithUUID:modeType:origin:originBundleId:originAnchorType:confidenceScore:secondsSinceSuggested:serializedTriggers:completionHandler:]_block_invoke
v16@?0@"NSError"8
-[ATXModeAnchorModelSuggestionServer fetchCombinedSuggestionScoreAndFlagsForModeWithUUID:modeType:origin:originBundleId:originAnchorType:confidenceScore:secondsSinceSuggested:serializedTriggers:completionHandler:]_block_invoke
v8@?0
Home
Work
School
currentLOI
previousLOI
lastUpdateDate
predictedNextLOIs
predictedExitTimes
locationsOfInterest
v16@?0@"ATXLocationOfInterest"8
iTunesCategory
location
namedLOI
timeComponents
microLocationUUID
audioDeviceIdentifier
bluetoothDeviceIdentifier
bluetoothDeviceName
@"<ATXTrigger>"16@?0@"NSData"8
@"NSData"16@?0@"<ATXTrigger>"8
v16@?0@"BPSCompletion"8
v16@?0@"BMStoreEvent"8
com.apple.BiomeScreenShare.queue
FocusModes.ScreenShare
com.apple.proactive.ModeAnchorModelSuggestion.xpc
modeUUID
isStart
anchorType
score
numUniqueOccurrencesAfterAnchor
posteriorProbability
classConditionalProbability
triggers
com.apple.BiomeGameController.queue
FocusModes.GameController
com.apple.iBooks
FocusModes.ReadingMode
%@ %@
uuid
type
mode
intValue
strValue
startDate
endDate
jsonMeta
origin
originBundleId
-[ATXModePBEvent writeTo:]
ATXModePBEvent.m
nil != self->_uuid
ModeChange
StartsUp
(unknown: %i)
Custom
Unknown
Default
Working
Exercising
Driving
Bedtime
Gaming
Reading
Traveling
Learning
Streaming
ScreenSharing
ScreenRecording
AirPlayMirroring
Mindfulness
None
CoreMotion
CarPlay
DNDWD
CoreRoutine
Sleep
AppLaunch
WatchWorkout
WFHClassifier
Calendar
version
modeRecord
-[ATXModeScheduler runAfterDelaySecondsIfNotYetScheduled:]
Screen Sharing
Screen Recording
AirPlay Mirroring
Subclasses should implement -[ATXModeAppLaunchFeaturizer expectedGenreId]
Subclasses should implement -[ATXModeAppLaunchFeaturizer modeFeatureType]
Subclasses should implement -[ATXModeAppLaunchFeaturizer registrationId]
com.apple.BiomeAppLaunch.queue
v24@?0@"NSArray"8@"NSError"16
v32@?0@"RTSource"8Q16^B24
v24@?0q8@"NSError"16
ATXMotionTypeWalking
ATXMotionTypeRunning
ATXMotionTypeCycling
ATXMotionTypeDriving
ATXMotionTypeUnknown
stringForMotionType called with invalid ATXMotionType of %tu
Error
com.apple.duetexpertd
workout-mode-identifier
v24@?0@"NSString"8@"NSDictionary"16
_HKWorkoutSessionStateName
/System/Library/Frameworks/HealthKit.framework/HealthKit
HKWorkout
ATXLocationManagerState
contextstored
-unrestricted
v12@?0i8
v16@?0@"ATXModeClassifierGuardedData"8
v28@?0@"NSNumber"8B16B20B24
v16@?0@"NSNumber"8
com.apple.DuetExpertCenter.ProactiveContextClient
v20@?0B8@"NSError"12
v32@?0@"NSString"8@"DNDModeConfiguration"16^B24
DNDModeConfigurationService
/System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb
DNDModeConfiguration
FocusModes.GamingMode
work
userID
events
timezone
timestamp
com.apple.duetexpertd.modes
v32@?0@"NSNumber"8@16^B24
v28@?0i8@12^B20
archive contains illegal nil value for key "%@"
key "%@" not present
key "%@" maps to unexpected class
Invalid
LocationIsAtHome
LocationIsAtWork
WatchIsInWorkout
IsInAutoDND
IsUsingCarPlay
IsOperatingVehicle
IsInBedtime
IsGaming
IsWeekdayNineToFive
HadRecentWorkHandoff
HadMorningAlarm
HasMeetingToday
IsWithinFirstAndLastMeeting
IsWithinFirstAndLastWorkMeeting
IsReading
BundleId
IsScreenSharing
IsScreenRecording
IsGameControllerConnected
isAirPlayMirroring
com.apple.duetexpertd.atx
general
notifications
dailyroutines
modes
hero
lastModeLoggerSubmissionDate
uniqueModeUserID
en_US_POSIX
yyyy-MM-dd HH:mm:ss zzz
com.apple.DuetExpertCenter.AppPredictionExpert
EnableModeNotifications
RemoveModeSwitchEaseIn
RemoveModeSwitchCooldown
RemoveCalendarRefreshCoalesce
RemoveAppLaunchRequirement
RemoveLockScreenFiltersForSuggestions
DNDModeConfigurationsCache
SecondsToEngagement
SecondsToClear
AverageSecondsToEngagement
AverageSecondsToClear
numToggles
totalTime
numUnlocks
displayName
incomingMessages
outgoingMessages
incomingPhoneCalls
outgoingPhoneCalls
incomingFaceTimeAudio
outgoingFaceTimeAudio
incomingFaceTimeVideo
outgoingFaceTimeVideo
modeBackupRestoreTimeKey
modeScoreFilesUpgradeTimeKey
currentBuildForModeEntityTrainingKey
apps
contacts
widgets
com.apple.BiomeScreenRecording.queue
FocusModes.ScreenRecording
com.apple.BiomeSemanticLocation.queue
FocusModes.Routine
com.apple.BiomeBedtime.queue
FocusModes.Bedtime
ATXLocationManagerDidEnterRegionNotification
ATXLocationManagerDidExitRegionNotification
ATXLocationManagerRegionIdentifierUserInfoKey
ATXLocationManager_LOIUpdateQueue
v16@?0@"ATXLocationManagerGuardedData"8
v16@?0@"ATXLocationManagerState"8
horizontalAccuracy > kPreciseHorizontalAccuracyThreshold
horizontalAccuracy > kHorizontalAccuracyThreshold
location is valid, horizontal accuracy is valid, and last update was recent
location nil or horizontalAccuracy too large or timestamp too old
v24@?0{?=dd}8
v32@?0{?=dd}8d24
v24@?0@"CLLocation"8@"NSError"16
current
v24@?0@"ATXLocationOfInterest"8@"NSError"16
predictedLOIs
<CLLocation: lat: %f, long: %f, timestamp: %f>
Local device
Synced via cloud
Paired device
User Action
Scheduled
Automation
Do Not Disturb
Exercise
Personal Time
/System/Library/LocationBundles/CoreParsec.framework
_clCallbackQueue
-[ATXLocationManagerGPSCoreLocation stateForRegion:withTimeout:]
-[ATXLocationManagerGPSCoreLocation locationManager:didDetermineState:forRegion:]
B16@?0@"BMStoreEvent"8
start
%lld
modeOrigin
contextVector
process
q24@?0@"_DKEvent"8@"_DKEvent"16
(startDate > %@ AND startDate < %@) OR (endDate > %@ AND endDate < %@)
Core Motion
DNDwD
Core Routine
App Launch
Watch Workout
Anchor Model
App Launch Model
Screen Share
Game Controller Connected
FocusModes.DNDWD
com.apple.BiomeDriving.queue
v16@?0@"ATXModeHeuristicClassifierGuardedData"8
Classic DND
v16@?0@"ATXCachedMotion"8
v16@?0@"CMMotionActivity"8
walking
running
cycling
driving
unknown
%@|stationary
@16@?0@8
B32@?0@8Q16^B24
latitude
longitude
ATXLocationOfInterest uuid:%@ visits:%@ type:%ld lat:%f long:%f
ATXModeAnchorModelSuggestionServer
NSXPCListenerDelegate
NSObject
ATXModeAnchorModelSuggestionServerXPCInterface
ATXModeAnchorModelSuggestionClientXPCInterface
ATXModeClassifierClientModel
ATXLocationManagerKnownLOIs
NSSecureCoding
NSCoding
ATXLocationManagerState
ATXAppCategoryTrigger
ATXTrigger
ATXLocationEnteredTrigger
ATXLocationExitedTrigger
ATXTimeTrigger
ATXMicroLocationTrigger
ATXWiredAudioConnectedTrigger
ATXWiredAudioDisconnectedTrigger
ATXBluetoothConnectedTrigger
ATXBluetoothDisconnectedTrigger
ATXWorkCalendarEventTrigger
ATXGameControllerConnectedTrigger
ATXBedtimeTrigger
ATXWatchWorkoutTrigger
ATXIdleTimeBeginTrigger
ATXIdleTimeEndTrigger
ATXCoreMotionDrivingTrigger
ATXDNDWDTrigger
ATXCarPlayConnectedTrigger
ATXCarPlayDisconnectedTrigger
ATXChargerConnectedTrigger
ATXScreenShareTrigger
ATXScreenRecordingTrigger
ATXSmartTrigger
ATXModeScreenShareFeaturizer
ATXModeFeaturizer
ATXModeAnchorModelSuggestion
ATXModeGameControllerFeaturizer
ATXModeReadingFeaturizer
ATXModePBEvent
NSCopying
ATXModePBLogWrapper
ATXModeScheduler
ATXModeAppLaunchFeaturizer
ATXLocationManagerRoutineCR
ATXLocationManagerRoutine
ATXMotionTypes
ATXModeExerciseFeaturizer
ATXLocationManagerStateStoreOnDisk
ATXLocationManagerStateStore
ATXLocationManagerStateStoreOnDiskEnv
ATXModeClassifierGuardedData
ATXModeClassifier
ATXModeClassifierClientModelDelegate
ATXConfiguredModeService
DNDModeConfigurationServiceListener
ATXModeGamingFeaturizer
ATXModeCalendarFeaturizer
ATXModePBRecord
ATXModeFeatureSet
ATXModeLogger
ATXModeScreenRecordingFeaturizer
ATXModeRoutineFeaturizer
ATXModeBedtimeFeaturizer
ATXLocationManager
ATXLocationManagerGPSDelegate
ATXLocationManagerProtocol
ATXPredictedLocationsManagerProtocol
ATXLocationOfInterestManagerProtocol
ATXLocationManagerGuardedData
ATXExtras
ATXLocationManagerGPSCoreLocation
CLLocationManagerDelegate
ATXLocationManagerGPS
ATXModeDuetHelper
ATXModeDrivingFeaturizer
ATXModeHeuristicClassifierGuardedData
ATXModeHeuristicClassifier
ATXModeFeaturizerDelegate
ATXTimer
ATXMotionManagerWrapper
ATXMotion
ATXCachedMotion
ATXLocationOfInterest
ATXNamedLOI
initWithMachServiceName:
initWithXPCListener:configuredModeService:
init
setDelegate:
resume
invalidate
dealloc
modeUUID
modeType
origin
originBundleId
originAnchorType
confidenceScore
timeIntervalSinceReferenceDate
absoluteTimestamp
serializedTriggers
fetchCombinedSuggestionScoreForModeWithUUID:modeType:origin:originBundleId:originAnchorType:confidenceScore:secondsSinceSuggested:serializedTriggers:completionHandler:
remoteObjectProxyWithErrorHandler:
fetchCombinedSuggestionScoreAndFlagsForModeWithUUID:modeType:origin:originBundleId:originAnchorType:confidenceScore:secondsSinceSuggested:serializedTriggers:completionHandler:
count
countByEnumeratingWithState:objects:count:
isStart
numberWithBool:
anchorType
isActivityWithUUIDConfigured:activityType:allowsSmartEntry:userModeName:
_shouldUpdateHighestConfidenceSuggestion:newSuggestion:
delegate
score
clientModel:didUpdatePredictionWithUUID:userModeName:modeType:confidenceScore:modeOrigin:originBundleId:originAnchorType:serializedTriggers:
valueForEntitlement:
boolValue
setExportedInterface:
setExportedObject:
setInterruptionHandler:
setInvalidationHandler:
setRemoteObjectInterface:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
listener:shouldAcceptNewConnection:
pingWithCompletion:
anchorModelDidProvideModeSuggestions:
T@"<ATXModeClassifierClientModelDelegate>",W,N
initWithConfiguredModeService:
fetchCombinedSuggestionScoreForModeEvent:completionHandler:
.cxx_destruct
_xpcListener
_xpcConnection
_modeService
_delegate
T@"<ATXModeClassifierClientModelDelegate>",W,N,V_delegate
encodeObject:forKey:
decodeObjectOfClass:forKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
Home
Work
School
distantPast
arrayWithObjects:count:
setWithArray:
decodeObjectOfClasses:forKey:
lastUpdateDate
earlierDate:
isEqualToDate:
uuid
addObject:
previousLOI
currentLOI
lastObject
setCurrentLOI:
removeLastObject
setPreviousLOI:
predictedNextLOIs
setPredictedNextLOIs:
predictedExitTimes
setPredictedExitTimes:
locationsOfInterest
valueForKey:
setValue:forKey:
setLastUpdateDate:
merge:with:
expirePreviousLOIBefore:
homeLOI
workLOI
schoolLOI
gymLOI
_currentLOI
_previousLOI
_predictedNextLOIs
_predictedExitTimes
_lastUpdateDate
_locationsOfInterest
T@"ATXLocationOfInterest",&,N,V_currentLOI
T@"ATXLocationOfInterest",&,N,V_previousLOI
T@"NSArray",&,N,V_predictedNextLOIs
T@"NSArray",&,N,V_predictedExitTimes
T@"NSDate",&,N,V_lastUpdateDate
T@"ATXLocationManagerKnownLOIs",R,N,V_locationsOfInterest
T@"CLLocation",R,N
isEqualToArray:
unarchivedObjectOfClasses:fromData:error:
_pas_mappedArrayWithTransform:
archivedDataWithRootObject:requiringSecureCoding:error:
mutableCopy
decodeIntegerForKey:
initWithiTunesCategoryId:
encodeInteger:forKey:
type
Tq,R,N
iTunesCategoryId
_iTunesCategoryId
Tq,R,N,V_iTunesCategoryId
initWithLocationIdentifier:namedLOI:
namedLOI
locationIdentifier
_namedLOI
_locationIdentifier
TQ,R,N,V_namedLOI
T@"NSString",R,N,V_locationIdentifier
timeComponents
_timeComponents
T@"NSDateComponents",R,N,V_timeComponents
initWithLocationUUID:
_uuid
T@"NSString",R,N,V_uuid
initWithDeviceIdentifier:
deviceIdentifier
_deviceIdentifier
T@"NSString",R,N,V_deviceIdentifier
initWithDeviceIdentifier:deviceName:
deviceName
_deviceName
T@"NSString",R,N,V_deviceName
initWithObjects:
screenSharingStream
publisherFromStartTime:
last
state
error
eventBody
sinkWithCompletion:receiveInput:
_provideFeaturesWithScreenShareEvent:
setValue:forBinaryFeatureOfType:
featurizer:didUpdateFeatures:
initWithIdentifier:targetQueue:
publisher
subscribeOn:
_processNewScreenShareEvent:
cancel
provideFeatures
beginListening
stopListening
T@"<ATXModeFeaturizerDelegate>",W,N
_queue
_scheduler
_sink
T@"<ATXModeFeaturizerDelegate>",W,N,V_delegate
interfaceWithProtocol:
setClasses:forSelector:argumentIndex:ofReply:
copy
encodeBool:forKey:
encodeDouble:forKey:
decodeBoolForKey:
decodeDoubleForKey:
setWithObjects:
initWithModeUUID:isStart:anchorType:score:numUniqueOccurrencesAfterAnchor:posteriorProbability:classConditionalProbability:serializedTriggers:
numUniqueOccurrencesAfterAnchor
posteriorProbability
classConditionalProbability
_isStart
_modeUUID
_anchorType
_score
_numUniqueOccurrencesAfterAnchor
_posteriorProbability
_classConditionalProbability
_serializedTriggers
T@"NSString",R,N,V_modeUUID
TB,R,N,V_isStart
T@"NSString",R,N,V_anchorType
Td,R,N,V_score
TQ,R,N,V_numUniqueOccurrencesAfterAnchor
Td,R,N,V_posteriorProbability
Td,R,N,V_classConditionalProbability
T@"NSArray",R,N,V_serializedTriggers
gameControllerStream
_provideFeaturesWithGameControllerEvent:
isControllerConnected
_processNewGameControllerEvent:
setWithObject:
expectedGenreId
additionalAllowedBundleIds
modeFeatureType
registrationId
dictionaryRepresentation
stringWithFormat:
dictionary
setObject:forKey:
numberWithInt:
numberWithDouble:
setUuid:
setStrValue:
setJsonMeta:
setOriginBundleId:
allocWithZone:
copyWithZone:
typeAsString:
StringAsType:
mode
setMode:
setHasMode:
hasMode
modeAsString:
StringAsMode:
setIntValue:
setHasIntValue:
hasIntValue
hasStrValue
setStartDate:
setHasStartDate:
hasStartDate
setEndDate:
setHasEndDate:
hasEndDate
hasJsonMeta
setOrigin:
setHasOrigin:
hasOrigin
originAsString:
StringAsOrigin:
hasOriginBundleId
setIsStart:
setHasIsStart:
hasIsStart
readFrom:
writeTo:
copyTo:
mergeFrom:
setType:
intValue
strValue
startDate
endDate
jsonMeta
_endDate
_startDate
_intValue
_jsonMeta
_mode
_origin
_originBundleId
_strValue
_type
_has
T@"NSString",&,N,V_uuid
Ti,N,V_type
TB,N
Ti,N,V_mode
Ti,N,V_intValue
TB,R,N
T@"NSString",&,N,V_strValue
Td,N,V_startDate
Td,N,V_endDate
T@"NSString",&,N,V_jsonMeta
Ti,N,V_origin
T@"NSString",&,N,V_originBundleId
TB,N,V_isStart
isEqualToString:
setModeRecord:
setVersion:
setHasVersion:
hasVersion
hasModeRecord
version
modeRecord
_modeRecord
_version
Ti,N,V_version
T@"ATXModePBRecord",&,N,V_modeRecord
dispatchTimeWithSecondsFromNow:
cancelPendingOperation
dateWithTimeIntervalSinceNow:
initWithQueue:operationBlock:andLeeway:
runAfterDelaySecondsIfNotYetScheduled:
_timer
_block
_leewaySeconds
_scheduledDate
isInternalBuild
appLaunch
isStarting
bundleID
_latestAppLaunchBundleId
_provideFeaturesWithBundleId:
setState:
setString:forFeatureType:
setNullForFeatureType:
exceptionWithName:reason:userInfo:
runAfterDelaySeconds:coalescingBehavior:
cancelPendingOperations
_actuallyEndMode
initWithQueue:operation:
_actuallyStartMode
_processNewAppLaunchEvent:
easeInTimerIsEnabled
setEaseInTimerIsEnabled:
cooldownTimerIsEnabled
setCooldownTimerIsEnabled:
_cooldownTimer
_easeInTimer
_easeInTimerIsEnabled
_cooldownTimerIsEnabled
_state
Tq,V_state
TB,N,V_easeInTimerIsEnabled
TB,N,V_cooldownTimerIsEnabled
length
containsObject:
initWithBundleIdentifier:allowPlaceholder:error:
iTunesMetadata
genreIdentifier
initWithRoutineManager:
closestLOI:toLocation:
fetchLocationsOfInterestWithinDistance:ofLocation:withHandler:
firstObject
location
latitude
longitude
initWithLatitude:longitude:
fetchLocationsOfInterestOfType:withHandler:
initWithCapacity:
fetchLocationsOfInterestVisitedBetweenStartDate:endDate:withHandler:
locationOfInterest
confidence
sources
enumerateObjectsUsingBlock:
fetchNextPredictedLocationsOfInterestFromLocation:startDate:timeInterval:withHandler:
date
uncertainty
fetchPredictedExitDatesFromLocation:onDate:withHandler:
fetchRoutineModeFromLocation:withHandler:
waitForSemaphore:timeoutSeconds:onAcquire:onTimeout:
distanceFromLocation:
fetchClosestLOIWithinDistance:ofLocation:reply:
fetchLOILocationOfType:reply:
fetchLOIVisitedDuring:reply:
fetchNextPredictedLOIFromLocation:startDate:timeInterval:requireHighConfidence:reply:
fetchPredictedExitDatesFromLocation:onDate:requireHighConfidence:reply:
fetchRoutineModeFromLocation:
_routineManager
visits
entryDate
exitDate
valueWithRange:
identifier
initWithUUID:visits:coordinate:type:
raise:format:
stringForMotionType:
motionTypeForString:found:
isInWorkout
_setUpContextIfNecessary
_createWorkoutPredicate
objectForKeyedSubscript:
value
sessionState
setIsInWorkout:
registrationWithIdentifier:contextualPredicate:deviceTypes:clientIdentifier:mustWake:qualityOfService:callback:
registerCallback:
deregisterCallback:
_allWorkoutActivityTypes
predicateForFirstPartyWorkoutMatchingTypes:states:
userContext
_userContext
_registration
_isInWorkout
TB,V_isInWorkout
previousLOIExpirationTime
appPredictionDirectoryFile:
processInfo
processName
lowercaseString
knowledgeDirectory
stringByAppendingPathComponent:
stringByAppendingString:
initWithPath:environment:locationParameters:
openFileAtPath:dataProtectionClass:
_tryToOpen
cacheExpirationInterval
unarchivedObjectOfClass:fromData:error:
isLocked
defaultManager
fileExistsAtPath:
_deviceDidUnlock
callOnNextUnlock:
loadNowOrCallLater:
removeItemAtPath:error:
write:
clear
setCacheExpirationInterval:
initWithLocationParameters:
_path
_env
_deferredLoadCallback
_cacheExpirationInterval
Td,V_cacheExpirationInterval
unregisterForLockStateChangeNotifications:
isUnlocked
UTF8String
registerForLockStateChangeNotifications:
_stateChangeRegistration
_currentModeEvent
initWithDuetHelper:
runBlockWhenDeviceIsClassCUnlocked:
initWithDuetHelper:configuredModeService:
update
_expireMode
currentBMInferredModeEvent
_setUpModeExpirationTimerIfNeededWithModeOrigin:
initWithGuardedData:serialQueue:
runWithLockAcquired:
_isModeType:uuid:sameAsModeFromEvent:
updateModeWithUUID:userModeName:modeType:modeOrigin:originAnchorType:originBundleId:uiLocation:confidenceScore:serializedTriggers:allowsSmartEntry:shouldSuggestTriggers:currentMode:stream:
isAutomationEnabled
uiLocation
suggestionUUID
userModeName
initWithAbsoluteTimestamp:modeUUID:origin:originBundleId:originAnchorType:isAutomationEnabled:uiLocation:isStart:confidenceScore:suggestionUUID:serializedTriggers:shouldSuggestTriggers:modeType:userModeName:
source
sendEvent:
UUIDString
_updateWithGuardedData:newModeUUID:userModeName:modeType:modeOrigin:originBundleId:originAnchorType:uiLocation:confidenceScore:serializedTriggers:allowsSmartEntry:shouldSuggestTriggers:
runAsyncWithLockAcquired:
_shouldUpdateMode:currentModeScore:newModeOrigin:newModeScore:
_updateWithNewModeUUID:userModeName:modeType:modeOrigin:originBundleId:originAnchorType:uiLocation:confidenceScore:serializedTriggers:allowsSmartEntry:shouldSuggestTriggers:
doubleValue
currentModeUUID:userModeName:modeType:confidenceScore:origin:originBundleId:serializedTrigger:allowsSmartEntry:
_updateWithNewModeUUIDIfNeeded:userModeName:modeType:modeOrigin:originBundleId:originAnchorType:confidenceScore:serializedTriggers:
provideModeClassifierWhenReadyWithDuetHelper:block:
currentMode
_lock
_inferredModeStream
_anchorModelSuggestionServer
_heuristicModeClassifier
_modeExpirationTimer
initWithCacheFilePath:
_createServiceIfNeeded
_cacheAndReturnDNDModeConfigurationDictionary
serviceForClientIdentifier:
addListener:withCompletionHandler:
_modeConfigurationsReturningError:
_cacheDNDModeConfigurationDictionary:
_nsDataFromDNDModeConfigurationDictionary:
storeData:
readWithMaxValidAge:unlink:cacheDataOut:cacheAgeOut:
dndModeConfigurationDictionaryFromNSData:
isActivityTypeConfigured:uuid:allowsSmartEntry:userModeName:
_isActivityTypeConfigured:uuid:allowsSmartEntry:userModeName:dndConfigs:
integerValue
semanticType
name
allowSmartEntry
enumerateKeysAndObjectsUsingBlock:
DNDModeConfigurationForActivityWithUUID:
_DNDModeConfigurationForActivityWithUUID:dndConfigs:
_isActivityWithUUIDConfigured:activityType:allowsSmartEntry:userModeName:dndConfigs:
modeConfigurationsReturningError:
_retrieveCachedDNDModeConfigurationDictionary
initWithSuiteName:
objectForKey:
numberWithInteger:
allObjects
_updateUserDefaultsForAnyNewlyAddedModesWithDNDConfigs:
_checkIfConfigurationOfCurrentModeChangedWithDNDConfigs:
modeConfigurationService:didReceiveAvailableModesUpdate:
isActivityTypeConfigured:
isActivityWithUUIDConfigured:
_service
_cache
_updateFeatures
defaultCenter
removeObserver:
isAllDay
hasAttendees
title
localizedCaseInsensitiveContainsString:
supportsLocationDirectorySearches
isAffectingAvailability
participationStatus
_shouldConsiderEventBasedOnParticipantStatus:
laterDate:
calendar
isLikelyAWorkCalendar:
initWithEKOptions:
currentCalendar
startOfDayForDate:
dateByAddingUnit:value:toDate:options:
predicateForEventsWithStartDate:endDate:calendars:
eventsMatchingPredicate:
fireAtDate:block:
_eventsDidChange:
addObserver:selector:name:object:
removeAllObjects
_fetchEventsForDay
_hasAnyEventsIn:now:
_setFeaturesForEventsCurrentlyIn:now:featureSet:
_addTimerForDate:
calendarRefreshCoalesceTimerIsEnabled
setCalendarRefreshCoalesceTimerIsEnabled:
_timers
_featureUpdateTimer
_calendarRefreshCoalesceTimerIsEnabled
TB,N,V_calendarRefreshCoalesceTimerIsEnabled
objectAtIndex:
numberWithUnsignedLongLong:
addEvents:
setUserID:
eventsCount
clearEvents
eventsAtIndex:
eventsType
hasUserID
setTimezone:
setHasTimezone:
hasTimezone
setTimestamp:
setHasTimestamp:
hasTimestamp
userID
events
setEvents:
timezone
timestamp
_timestamp
_events
_timezone
_userID
T@"NSString",&,N,V_userID
T@"NSMutableArray",&,N,V_events
Ti,N,V_timezone
TQ,N,V_timestamp
setValue:forFeatureType:
setObject:forKeyedSubscript:
null
valueForFeatureType:
_enumerateFeaturesUsingBlock:
containsValueForKey:
dictionaryWithObjects:forKeys:count:
initWithDomain:code:userInfo:
failWithError:
initWithDictionary:
boolValueForFeatureType:
stringForFeatureType:
mergeWithFeatures:
_features
localeWithLocaleIdentifier:
setLocale:
setDateFormat:
stringFromDate:
_lastSubmissionDate
localTimeZone
secondsFromGMT
timeIntervalSince1970
shareDiagnosticDataWrapper
modeStreamFrom:to:limit:
UUID
stringValue
_updateLastSubmissionDate:
_userDefaults
stringForKey:
doubleForKey:
dateByAddingTimeInterval:
dateWithTimeIntervalSince1970:
setDouble:forKey:
stringForDate:
logEventsFromModeStream
setShareDiagnosticDataWrapper:
_formatter
_defaults
_duetHelper
_shareDiagnosticDataWrapper
TB,V_shareDiagnosticDataWrapper
screenRecordingStream
_provideFeaturesWithScreenRecordingEvent:
_processNewScreenRecordingEvent:
semanticLocationStream
_provideFeaturesWithLocationEvent:
userSpecificPlaceType
_processNewLocationEvent:
sleepModeStream
_provideFeaturesWithSleepEvent:
sleepModeState
numberWithUnsignedInteger:
_processNewSleepEvent:
sharedInstance
initWithGPS:routine:stateStore:now:modeGlobals:
initWithGuardedData:
locationEnabled
preciseLocationEnabled
timeIntervalSinceDate:
currentLocationUpdateInterval
debugDescriptionForCLLocation:
horizontalAccuracy
tupleWithFirst:second:
getCurrentLocation_RequestPreciseLocation:
getCurrentLocation
shiftedLocationForChinaFromLocation:
getCurrentPreciseLocation
altitude
verticalAccuracy
course
courseAccuracy
speed
speedAccuracy
initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:course:courseAccuracy:speed:speedAccuracy:timestamp:
setReferenceFrame:
coordinate
referenceFrame
isLocationShiftRequiredForCoordinate:
shifter
shiftCoordinate:accuracy:withCompletionHandler:mustGoToNetworkCallback:errorHandler:callbackQueue:
waitForSemaphore:timeoutSeconds:
clearLocationOfInterest
_currentLocationAndNeedsUpdate_RequestPreciseLocation:
first
second
updateLocationWithTimeout:requestPreciseLocation:
errorWithDomain:code:userInfo:
updateLocationWithCompletionHandler:
locationOfInterestSearchRadius
_handleRoutineError:forThing:
gotState:
_fetchLocationOfInterest:inGroup:
_updateLocationsOfInterestWithCurrentLocation:
waitForGroup:timeoutSeconds:
getCurrentLocationWithCompletionHandler:
stringForLOIType:
_gotLocation:forLocationOfInterest:
dateWithTimeInterval:sinceDate:
domain
code
distantFuture
locationOfInterestUpdateInterval
updateCurrentLocationOfInterest
updateCurrentLocationOfInterestWithCompletionHandler:
updateCurrentLocationOfInterestIfTimeElapsed
cachedLocationOfInterestAtCurrentLocation
_updateCurrentLocationOfInterestIfTimeElapsedWithCompletionHandler:
initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:timestamp:
_updatePredictedLocationsOfInterestIfTimeElapsed
_updatePredictedExitTimesIfTimeElapsed
predictedLocationsOfInterestUpdateInterval
updatePredictedLocationsOfInterest
predictedExitTimesUpdateInterval
updatePredictedExitTimes
_distanceOfCurrentLocationFrom:
initWithFormat:
initWithStartDate:endDate:
locationOfInterestAtCurrentLocation
frequentLOIMinimumVisits
isNearKnownTypeLocationOfInterest
isNearFrequentLocationOfInterest
isTouristWithCurrentDate:
getCurrentRoutineModeWithCurrentDate:
initWithName:object:userInfo:
postNotification:
beginMonitoringRegion:
stopMonitoringRegionWithIdentifier:
stateForRegion:withTimeout:
didChangeLocationEnabled:
didChangePreciseLocationEnabled:
locationManagerGPS:didEnterRegionWithIdentifier:
locationManagerGPS:didExitRegionWithIdentifier:
locationOfInterestAtCurrentLocationWithCompletionHandler:
distanceFromHomeOfCurrentLocationInMeters
distanceFromWorkOfCurrentLocationInMeters
distanceFromSchoolOfCurrentLocationInMeters
distanceFromGymOfCurrentLocationInMeters
fetchAllLocationsOfInterest:
fetchLocationsOfInterestVisitedDuring:handler:
invalidateLocationOfInterestCache
getCurrentLocationWithShiftInChina
getCurrentPreciseLocationWithShiftInChina
isTourist
isNearKnownTypeOrFrequentLocationOfInterest
predictedLocationsOfInterest
getPredictedLocationsOfInterestFromLOIName:startDate:
getPredictedExitTimesFromLOIName:startDate:
isAvailableLocationOfInterestType:
initWithStateStore:modeGlobals:
setNow:
previousLOIAndCurrentLOI
isLocationNearKnownTypeLocationOfInterest:
predictedNextLOITimeout
setPredictedNextLOITimeout:
predictedExitDateTimeout
setPredictedExitDateTimeout:
_gps
_routine
_stateStore
_shifter
_loiUpdateQueue
_modeGlobals
_now
_predictedNextLOITimeout
_predictedExitDateTimeout
T@"NSDate",&,N,V_now
Td,N,V_predictedNextLOITimeout
Td,N,V_predictedExitDateTimeout
currentLocation
lastRequestLocationDate
currentRoutineMode
lastLOIUpdateTimestamp
lastRoutineModeTimestamp
lastPredictedLOIsUpdateTimestamp
lastPredictedExitTimesUpdateTimestamp
currentBMUserFocusComputedModeEvent
currentModeUUID
modeUpdateSource
modeUpdateReason
modeSemanticType
modeUpdateSourceAsString
modeUpdateReasonAsString
modeSemanticTypeAsString
bundleWithPath:
initWithEffectiveBundle:delegate:onQueue:
setDesiredAccuracy:
authorizationStatus
accuracyAuthorization
_init
requestLocation
lock
_startUpdateIfNeededWithPreciseLocation:
waitUntilDate:
unlock
startMonitoringForRegion:
_requestStateIfNeededForRegion:
requestStateForRegion:
monitoredRegions
_existingRegionWithIdentifierOnCLQueue:
stopMonitoringForRegion:
broadcast
_updateConditionAndInvokeLocationBlocks:error:
center
radius
locationManager:didUpdateToLocation:fromLocation:
locationManager:didUpdateLocations:
locationManager:didUpdateHeading:
locationManagerShouldDisplayHeadingCalibration:
locationManager:didDetermineState:forRegion:
locationManager:didRangeBeacons:inRegion:
locationManager:rangingBeaconsDidFailForRegion:withError:
locationManager:didRangeBeacons:satisfyingConstraint:
locationManager:didFailRangingBeaconsForConstraint:error:
locationManager:didEnterRegion:
locationManager:didExitRegion:
locationManager:didFailWithError:
locationManager:monitoringDidFailForRegion:withError:
locationManager:didChangeAuthorizationStatus:
locationManagerDidChangeAuthorization:
locationManager:didStartMonitoringForRegion:
locationManagerDidPauseLocationUpdates:
locationManagerDidResumeLocationUpdates:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didVisit:
T@"<ATXLocationManagerGPSDelegate>",W,N
_locationManager
_clQueue
_updateCondition
_locationEnabled
_preciseLocationEnabled
_updatePending
_locationBlocksToInvoke
_requestStateCondition
_regionRequested
T@"<ATXLocationManagerGPSDelegate>",W,N,V_delegate
modeStreamFrom:to:ascending:limit:
filterWithIsIncluded:
initWithTimeIntervalSinceReferenceDate:
focusModeStream
eventWithStream:startDate:endDate:identifierStringValue:metadata:
sortUsingComparator:
_updateModeStreamEndDates:to:
predicateWithFormat:
arrayByAddingObject:
andPredicateWithSubpredicates:
knowledgeStoreWithDirectReadOnlyAccess
sortDescriptorWithKey:ascending:
eventQueryWithPredicate:eventStreams:offset:limit:sortDescriptors:
executeQuery:error:
objectAtIndexedSubscript:
metadata
eventWithStream:startDate:endDate:value:metadata:
_queryDuetStreamUnbatched:startDate:endDate:ascending:otherPredicates:limit:
_provideFeaturesWithLastDNDWDEvent:
_fetchMostRecentDNDWDEvent
doNotDisturbWhileDrivingStream
_processNewDNDWDEvent:
_beginListeningForDNDWDEvents
_DNDWDSink
_DNDWDScheduler
_aggregateFeatures
_lastFeatureUpdateDate
_featureBuffer
initWithFeaturizers:minUpdateInterval:duetHelper:configuredModeService:
arrayWithCapacity:
_updateIfNeededWithGuardedData:
_requestFeaturesFromAllFeaturizersAndUpdate
_predictModeWithFeature:
_updateWithGuardedData:
_triggersForMode:fromAggregateFeatures:
_currentModeUUID:userModeName:modeType:confidenceScore:origin:originBundleId:serializedTrigger:allowsSmartEntry:guardedData:
_confidenceScoreForMode:fromAggregateFeatures:
_originForMode:fromAggregateFeatures:
_serializedTriggersForMode:fromAggregateFeatures:
updateWithFeatureSet:immediately:reply:
timeIntervalSinceNow
updateWithFeatureSet:
currentFeaturesInDictionary
reset
_minUpdateInterval
_featurizers
_logger
previousBMInferredModeEvent
inferredModeEventWithSuggestionUUID:
initWithDate:block:
_source
setMaxConcurrentOperationCount:
initWithATXMotion:
hasMotionActivity
updateCurrentActivity:
isActivityAvailable
queryActivityStartingFromDate:toDate:toQueue:withHandler:
_fetchMotionActivities
summarizeActivityStream:
update:
initFromCMMotionActivity:
isExpired
currentMotion
didUpdateMotionType:isActive:
walking
running
cycling
automotive
unknown
_motionActivityHandler
startActivityUpdatesToQueue:withHandler:
removeObject:
removeObjectForKey:
stopActivityUpdates
getCurrentActivity
startUpdatingMotionType:forDelegate:
stopUpdatingMotionType:forDelegate:
_motionActivityManager
_motionActivityQueue
_delegatesMonitoringForMotionType
_mostRecentActivity
_currentMotion
initFromCMMotionActivity:canPredictClipsGivenRecentMotion:
_getMotionTypeFromCMMotionActivity:
stationary
initWithMotionType:stationary:canPredictClipsGivenRecentMotion:
getMotionStringFromMotionType:
getMotionString
findMostCommonAndRecent:identityFunc:
canPredictClipsForActivityStream:
subarrayWithRange:
indexesOfObjectsPassingTest:
objectsAtIndexes:
_getMotionStringFromCMMotionActivity:
print
motiontype
canPredictClipsGivenRecentMotion
_stationary
_canPredictClipsGivenRecentMotion
_motiontype
Tq,R,N,V_motiontype
TB,R,N,V_stationary
TB,R,N,V_canPredictClipsGivenRecentMotion
lastUpdated
T@"ATXMotion",R,C,N,V_currentMotion
isEqualToLocation:
initWithUUID:visits:coordinate:
addVisitFrom:to:
setCoordinate:
_visits
_coordinate
T{CLLocationCoordinate2D=dd},N,V_coordinate
T@"NSUUID",R,N,V_uuid
T@"NSArray",R,N,V_visits
Tq,R,N,V_type
initWithName:type:
_name
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v24@0:8@?16
v24@0:8@16
v24@0:8@?<v@?B>16
v24@0:8@"NSArray"16
v88@0:8@16Q24q32@40@48d56d64@72@?80
v88@0:8@"NSString"16Q24q32@"NSString"40@"NSString"48d56d64@"NSArray"72@?<v@?@"NSNumber">80
v88@0:8@"NSString"16Q24q32@"NSString"40@"NSString"48d56d64@"NSArray"72@?<v@?@"NSNumber"BBB>80
@"<ATXModeClassifierClientModelDelegate>"16@0:8
v24@0:8@"<ATXModeClassifierClientModelDelegate>"16
@24@0:8@16
@32@0:8@16@24
v16@0:8
v32@0:8@16@?24
@"NSXPCListener"
@"NSXPCConnection"
@"ATXConfiguredModeService"
@"<ATXModeClassifierClientModelDelegate>"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"CLLocation"
@"ATXLocationOfInterest"
@"NSArray"
@"NSDate"
@"ATXLocationManagerKnownLOIs"
q16@0:8
@24@0:8Q16
@32@0:8@16Q24
@"NSString"
@"NSDateComponents"
@"ATXModeFeatureSet"16@0:8
@"<ATXModeFeaturizerDelegate>"16@0:8
v24@0:8@"<ATXModeFeaturizerDelegate>"16
@"NSObject<OS_dispatch_queue>"
@"BMBiomeScheduler"
@"BPSSink"
@"<ATXModeFeaturizerDelegate>"
@76@0:8@16B24@28d36Q44d52d60@68
d16@0:8
i16@0:8
@24@0:8^{_NSZone=}16
@20@0:8i16
i24@0:8@16
v20@0:8i16
v20@0:8B16
v24@0:8d16
{?="endDate"b1"startDate"b1"intValue"b1"mode"b1"origin"b1"isStart"b1}
@"ATXModePBRecord"
{?="version"b1}
@40@0:8@16@?24d32
@24@0:8d16
@"NSObject<OS_dispatch_source>"
v24@0:8q16
@"_PASSimpleCoalescingTimer"
v40@0:8d16@24@?32
v32@0:8q16@?24
v52@0:8@16@24d32B40@?44
v44@0:8@16@24B32@?36
Q24@0:8@16
v40@0:8d16@"CLLocation"24@?<v@?@"ATXLocationOfInterest"@"NSError">32
v32@0:8q16@?<v@?@"CLLocation"@"NSError">24
v32@0:8@"NSDateInterval"16@?<v@?@"NSArray"@"NSError">24
v52@0:8@"CLLocation"16@"NSDate"24d32B40@?<v@?@"NSArray"@"NSError">44
v44@0:8@"CLLocation"16@"NSDate"24B32@?<v@?@"NSArray"@"NSError">36
Q24@0:8@"CLLocation"16
@"RTRoutineManager"
@24@0:8q16
q32@0:8@16^B24
@"_CDClientContext"
@"_CDContextualChangeRegistration"
@24@0:8@?16
@"ATXLocationManagerState"24@0:8@?<v@?@"ATXLocationManagerState">16
v24@0:8@"ATXLocationManagerState"16
@40@0:8@16@24@32
@"<ATXLocationManagerStateStoreOnDiskEnv>"
i28@0:8@16i24
i28@0:8@"NSString"16i24
v24@0:8@?<v@?>16
@"BMInferredModeEvent"
@112@0:8@16@24Q32q40@48@56Q64d72@80B88B92@96@104
v88@0:8@16@24@32Q40d48q56@64@72@80
v88@0:8@"<ATXModeClassifierClientModel>"16@"NSString"24@"NSString"32Q40d48q56@"NSString"64@"NSString"72@"NSArray"80
B40@0:8Q16@24@32
v104@0:8@16@24@32Q40q48@56@64Q72d80@88B96B100
v96@0:8@16@24Q32q40@48@56Q64d72@80B88B92
v80@0:8@16@24Q32q40@48@56d64@72
B48@0:8q16@24q32@40
@"_PASQueueLock"
@"BMInferredModeStream"
@"ATXModeAnchorModelSuggestionServer"
@"ATXModeHeuristicClassifier"
v32@0:8@16@24
v32@0:8@"DNDModeConfigurationService"16@"NSArray"24
B24@0:8Q16
B48@0:8Q16^@24^B32^@40
B56@0:8Q16^@24^B32^@40@48
B48@0:8@16^Q24^B32^@40
B56@0:8@16^Q24^B32^@40@48
@24@0:8^@16
@"DNDModeConfigurationService"
@"ATXGenericFileBasedCache"
v40@0:8@16@24@32
B24@0:8q16
@"NSHashTable"
v24@0:8Q16
@"NSMutableArray"
{?="timestamp"b1"timezone"b1}
v24@0:8B16i20
v28@0:8@16i24
B20@0:8i16
@"NSMutableDictionary"
@"NSDateFormatter"
@"NSUserDefaults"
@"ATXModeDuetHelper"
v32@0:8@"<ATXLocationManagerGPS>"16@"NSString"24
q32@0:8@16d24
@"ATXLocationOfInterest"16@0:8
v24@0:8@?<v@?@"ATXLocationOfInterest"@"NSError">16
v24@0:8@?<v@?@"NSArray"@"NSError">16
@"CLLocation"16@0:8
v24@0:8@"CLRegion"16
v24@0:8@"NSString"16
q32@0:8@"CLRegion"16d24
B24@0:8@"NSDate"16
@"NSString"24@0:8q16
@"NSArray"16@0:8
@"NSArray"32@0:8@"NSString"16@"NSDate"24
@56@0:8@16@24@32@40@48
@20@0:8B16
v32@0:8q16@24
v32@0:8@16q24
d24@0:8@16
@"<ATXLocationManagerGPS>"
@"<ATXLocationManagerRoutine>"
@"<ATXLocationManagerStateStore>"
@"_PASLock"
@"GEOLocationShifter"
@"<ATXLocationParameters>"
@"ATXLocationManagerState"
v40@0:8@16q24@32
v40@0:8@"CLLocationManager"16@"CLLocation"24@"CLLocation"32
v32@0:8@"CLLocationManager"16@"NSArray"24
v32@0:8@"CLLocationManager"16@"CLHeading"24
B24@0:8@"CLLocationManager"16
v40@0:8@"CLLocationManager"16q24@"CLRegion"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconRegion"32
v40@0:8@"CLLocationManager"16@"CLBeaconRegion"24@"NSError"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconIdentityConstraint"32
v40@0:8@"CLLocationManager"16@"CLBeaconIdentityConstraint"24@"NSError"32
v32@0:8@"CLLocationManager"16@"CLRegion"24
v32@0:8@"CLLocationManager"16@"NSError"24
v40@0:8@"CLLocationManager"16@"CLRegion"24@"NSError"32
v28@0:8@"CLLocationManager"16i24
v24@0:8@"CLLocationManager"16
v32@0:8@"CLLocationManager"16@"CLVisit"24
@28@0:8d16B24
@"CLLocation"28@0:8d16B24
v24@0:8@?<v@?@"CLLocation"@"NSError">16
@"<ATXLocationManagerGPSDelegate>"16@0:8
v24@0:8@"<ATXLocationManagerGPSDelegate>"16
@"CLLocationManager"
@"NSCondition"
@"NSMutableSet"
@"CLRegion"
@"<ATXLocationManagerGPSDelegate>"
@40@0:8@16@24Q32
@44@0:8@16@24B32Q36
@60@0:8@16@24@32B40@44Q52
@"ATXModeFeatureSet"
v32@0:8@"<ATXModeFeaturizer>"16@"ATXModeFeatureSet"24
@48@0:8@16d24@32@40
@32@0:8Q16@24
v80@0:8^@16^@24^Q32^d40^q48^@56^@64^B72
v88@0:8^@16^@24^Q32^d40^q48^@56^@64^B72@80
q32@0:8Q16@24
d32@0:8Q16@24
v36@0:8@16B24@?28
@"ATXModeScheduler"
@"ATXModeLogger"
@32@0:8@16@?24
@?16@0:8
@"CMMotionActivityManager"
@"NSOperationQueue"
@"CMMotionActivity"
q24@0:8@16
@32@0:8q16B24B28
@28@0:8@16B24
@"ATXMotion"
@56@0:8@16@24{CLLocationCoordinate2D=dd}32q48
@48@0:8@16@24{CLLocationCoordinate2D=dd}32
v32@0:8Q16Q24
{CLLocationCoordinate2D=dd}16@0:8
v32@0:8{CLLocationCoordinate2D=dd}16
@"NSUUID"
{CLLocationCoordinate2D="latitude"d"longitude"d}
@32@0:8@16q24
@(#)PROGRAM:ProactiveContextClient  PROJECT:AppPrediction-1
"%(+.147:=
"%(+;
!$'*-0369)
&Ils
!$'*-0
!$'*-0369<?BE
"%(+.147
$;FWbs
&.6?gggDgIQg
!$'*-036
159=
%s: error with xpc connection: %@
ATXModeAnchorModelSuggestionServer: Received %{public}lu suggestions
ATXModeAnchorModelSuggestionServer: Suggestion modeId: %{public}@, isStart: %{public}@, anchorType: %{public}@
ATXModeAnchorModelSuggestionServer: Suggestion modeUUID: %{public}@ is not configured, skipping
ATXModeAnchorModelSuggestionServer: Updated suggestion to modeUUID: %{public}@, isStart: %{public}@, anchorType: %{public}@
ATXModeAnchorModelSuggestionServer: Rejecting connection %{public}@ without entitlement %{public}@
ATXModeAnchorModelSuggestionServer: XPC connection interrupted.
ATXModeAnchorModelSuggestionServer: XPC connection invalidated.
ATXModeAnchorModelSuggestionServer: accepts XPC connection: %{public}@
Could not deserialize trigger: %@
Could not serialize trigger: %@
ATXModeScreenShareFeaturizer: done fetching last screen share event
ATXModeScreenShareFeaturizer: error fetching last screen share event: %@
ATXModeScreenShareFeaturizer: updating screen share feature: isScreenSharing: %d, isAirPlayMirroring: %d
ATXModeScreenShareFeaturizer: registering for real time events
ATXModeScreenShareFeaturizer: done listening to screen share events
ATXModeScreenShareFeaturizer: error listening to screen share events: %@
ATXModeScreenShareFeaturizer: received new screen share event, isStart: %{public}@
ATXModeGameControllerFeaturizer: done fetching last event
ATXModeGameControllerFeaturizer: error fetching last event: %@
ATXModeGameControllerFeaturizer: updating game controller feature: %d
ATXModeGameControllerFeaturizer: registering for real time events
ATXModeGameControllerFeaturizer: done listening to game controller events
ATXModeGameControllerFeaturizer: error listening to game controller events: %@
ATXModeGameControllerFeaturizer: received new game controller event, isConnected: %{public}@
%s: an operation has already been scheduled at %@. Skip this request.
%s: schedule an operation with %.2lf seconds delay
DNDModeSemanticTypeToATXActivityType: DNDModeSemanticType %lu not handled in switch statement
ATXModeAppLaunchFeaturizer: done fetching last app launch event
ATXModeAppLaunchFeaturizer: error fetching last app launch event: %@
ATXModeAppLaunchFeaturizer: Initial state: %ld
ATXModeAppLaunchFeaturizer: State after cooldown: not active
ATXModeAppLaunchFeaturizer: State after ease-in: active
ATXModeAppLaunchFeaturizer: Entering ease in period before entering state
ATXModeAppLaunchFeaturizer: Already easing in and still not in state
ATXModeAppLaunchFeaturizer: Going back to inactive state since user quit prematurely
ATXModeAppLaunchFeaturizer: Entering cool down period before exiting state
ATXModeAppLaunchFeaturizer: Going back to proper state
ATXModeAppLaunchFeaturizer: Already cooling down and still not in state
ATXModeAppLaunchFeaturizer: Unexpected state %ld %ld
ATXModeAppLaunchFeaturizer: done listening to app launch events
ATXModeAppLaunchFeaturizer: error listening to app launch events: %@
ATXModeAppLaunchFeaturizer: Could not get application record for inferring app genre: %@
ATXModeAppLaunchFeaturizer: Genre: %llu
Predicted next LOI: %@, confidence: %lf
Predicted Exit Time: %@, uncertainty: %lf, confidence %lf
Error while fetching routine mode from CoreRoutine. Error: %@
CoreRoutine did not return any routine mode. Returning ATXRoutineModeUnknown.
stringForMotionType called with invalid ATXMotionType of %tu
Could not form workout predicate
self went away
No workout payload: %@
Workout payload is not dictionary: %@
Workout state string: %@
Failed to register Core Duet contextual change handler
Unable to retrieve all workout types from HealthKit
Failed to soft-link HealthKit: %s
Error deserializing: %@
Error serializing: %@
Error writing location manager file
failed to open '%@': [%i] %s
ATXModeClassifier initing with current mode: %@
ATXModeClassifier finished initialization
ATXModeClassifier: not updating because new mode (%{public}@, %lu) is same as current mode (%{public}@, %lu)
ATXModeClassifier: mode updated from uuid:%{public}@, modeType:%lu to uuid:%{public}@, modeType:%lu, uiLocation of new suggestion: %lu
ATXModeClassifier: couldn't perform update operation because swelf is nil
ATXModeClassifier: fetching combined score for current mode (uuid: %{public}@, type:%lu) and new mode (uuid: %{public}@, type:%lu) to see if we should update
ATXModeClassifier: fetched score for current mode: %@. Fetching score and flags for new mode.
Comparing current mode: %{public}@ (combinedScore: %{public}@, with new mode: %{public}@ (combinedScore: %{public}@)
ATXModeClassifer: something went wrong fetching widget scores! currentModeScore: %@, newModeScore: %@
ATXModeClassifier: %{public}@ updated its mode prediction: modeUUID: %{public}@, modeType: %lu
ATXConfiguredModeService: Could not reference DNDModeConfigurationService
ATXConfiguredModeService: Adding a listener failed with error: %@
ATXConfiguredModeService: Caching DND mode configs in user defaults as a backup.
ATXConfiguredModeService: Error writing DND mode config data to cache.
ATXConfiguredModeService: Could not obtain DND mode configurations with error: %{public}@
ATXConfiguredModeService: Error getting dndModeConfigurationClass.
ATXConfiguredModeService: configured modes: %@
ATXConfiguredModeService: mode is no longer configured, updating suggestion to have nil modeUUID and userModeName
ATXConfiguredModeService: New mode (modeUUID: %{public}@, type: %lu) was updated to now allow smart trigger. Updating mode inference with smart entry enabled
ATXConfiguredModeService: historically configured mode semantic types: %@
ATXConfiguredModeService: mode configuration did change. Checking if this affects the current mode and if any new modes were added
Failed to soft-link DoNotDisturb: %s
ATXModeCalendarClassifier: Refreshing due to event change
ATXModeCalendarClassifier: skipping event due to participation status: %lu
ATXModeCalendarClassifier: unknown participation status: %lu
ATXModeCalendarClassifier: Scheduling calendar refresh timer for: %@
ATXModeCalendarClassifier: Refreshing due to event start / end date passing
ATXModeFeatureSet: error initWithCoder: %@
Found %ld events of mode changes from %@ to %@
ATXModeScreenRecordingFeaturizer: done fetching last event
ATXModeScreenRecordingFeaturizer: error fetching last event: %@
ATXModeScreenRecordingFeaturizer: updating screen recording feature: %d
ATXModeScreenRecordingFeaturizer: registering for real time events
ATXModeScreenRecordingFeaturizer: done listening to screen recording events
ATXModeScreenRecordingFeaturizer: error listening to screen recording events: %@
ATXModeScreenRecordingFeaturizer: received new screen recording event, isStart: %{public}@
ATXModeRoutineFeaturizer: done fetching last location event
ATXModeRoutineFeaturizer: error fetching last location event: %@
ATXModeRoutineFeaturizer: updating features. isAtHome: %d isAtWork: %d
ATXModeRoutineFeaturizer: registering for real time events
ATXModeRoutineFeaturizer: done listening to location events
ATXModeRoutineFeaturizer: error listening to location events: %@
ATXModeRoutineFeaturizer: received new location event for semantic location: %lu, is starting: %d
ATXModeBedtimeFeaturizer: done fetching last sleep event
ATXModeBedtimeFeaturizer: error fetching last sleep event: %@
ATXModeBedtimeFeaturizer: updating bedtime feature: %{BOOL}d
ATXModeBedtimeFeaturizer: registering for real time events
ATXModeBedtimeFeaturizer: done listening to sleep events
ATXModeBedtimeFeaturizer: error listening to sleep events: %@
ATXModeBedtimeFeaturizer: received new sleep event of state: %{public}@
loaded cache, cached work LOI: %@, cached home LOI: %@
%@ - currentLocationAndNeedsUpdate:%u lastRequestLocationDate %@ was too recent, using cached location: %@
%@ - currentLocationAndNeedsUpdate:%u returning result: %@ and needsLocationUpdate: %u for reason: %@
Shifting Location for China if needed.
Changing reference frame because location was shifted
Location shift successful.
Error while fetching shifted cordinate
Location shift not needed.
%@ getCurrentLocation_RequestPreciseLocation:%@ Updating location
%@ getCurrentLocation_RequestPreciseLocation:%@ Updated location: %@
Updating location
Updated location: %@
Current LOI at %@
LOI fetch timed out
LOI fetch successful
Checking cache with age: %f
Using cached %@ LOI
Fetching %@ LOI
Falling back to cache because Core Routine failed
%@ LOI: %@
Disabling LOI updates due to error fetching %{public}@: %@
RT misuse fetching %{public}@: %@
Error fetching %{public}@: %@
Non-RT error fetching %{public}@: %@
Attempting to update location of interest since update age is %lf
Next Predicted LOIs: %@
Next predicted LOIs fetch timed out
Predicted Exit Times: %@
Predicted exit times fetch timed out
Updating predicted next lois in ATXLocationManager
Updating predicted exit times in ATXLocationManager
Distance to %@ LOI: %f meters
BMUserFocusComputedModeStream: done fetching last mode event
BMUserFocusComputedModeStream: error fetching last mode event: %@
BMUserFocusComputedModeEvent modeUpdateSourceAsString: undefined mode update source: %lu
BMUserFocusComputedModeEvent modeUpdateReasonAsString: undefined mode update reason: %lu
BMUserFocusComputedModeEvent modeSemanticTypeAsString: undefined mode semantic type: %lu
%@ - Querying GPS location now, requesting with precise location: %@
%@ - Timeout waiting for location update
Timeout waiting for region state update
%s: region: %@, state: %ld
%@ - Got location update: %@
Started monitoring region: %@
Failed to start monitoring region: %@ error: %@
did enter region: %@, region center: (%f, %f), region radius: %f
did enter region: %@, class: %@
did exit region: %@, region center: (%f, %f), region radius: %f
did exit region: %@, class: %@
Location error %@
Duet query: %@
Error querying Duet: %@
BMInferredModeOrigin: %lu not handled in switch statement
ATXModeDrivingFeaturizer: Driving mode activated by Do Not Disturb While Driving
ATXModeDrivingFeaturizer: done fetching last DNDWD launch event
ATXModeDrivingFeaturizer: error fetching last DNDWD event: %@
ATXModeDrivingFeaturizer: done listening to DNDWD events
ATXModeDrivingFeaturizer: error listening to DNDWD events: %@
ATXModeDrivingFeaturizer: received new DNDWD event
ATXModeHeuristicClassifier finished initialization
ATXModeHeuristicClassifier update with %d feature sets in buffer
BMInferredModeType: %lu not handled in switch statement
Found configured activity for type: %ld uuid: %{public}@
No configured activity for type: %ld, making generic suggestion
ATXModeHeuristicClassifier predict mode with features: %@
ATXModeHeuristicClassifier: %@ updated its features
BMInferredModeStream: done fetching last mode event. currentBMInferredModeEvent modeUUID:%{public}@, modeType: %lu
BMInferredModeStream: error fetching last mode event: %@
BMInferredModeStream: done fetching last mode event. previousBMInferredModeEvent modeUUID:%@, modeType: %lu
BMInferredModeStream: error fetching last mode event: %{public}@
BMInferredModeStream: done fetching mode event with suggestion UUID %{public}@, modeUUID:%{public}@, modeType:%lu
BMInferredModeStream: error fetching mode event with UUID %{public}@: %{public}@
BMInferredModeOriginIsHeuristic: mode origin: %ld not captured in switch statement
Error: motion activity query timed out
ATXMotionManagerWrapper: WALKING state changed to %d
ATXMotionManagerWrapper: RUNNING state changed to %d
ATXMotionManagerWrapper: CYCLING state changed to %d
ATXMotionManagerWrapper: AUTOMOTIVE state changed to %d
ATXMotionManagerWrapper: UNKNOWN state changed to %d
Current motion activities: %@
-[ATXModeAnchorModelSuggestionServer fetchCombinedSuggestionScoreForModeWithUUID:modeType:origin:originBundleId:originAnchorType:confidenceScore:secondsSinceSuggested:serializedTriggers:completionHandler:]_block_invoke
v16@?0@"NSError"8
-[ATXModeAnchorModelSuggestionServer fetchCombinedSuggestionScoreAndFlagsForModeWithUUID:modeType:origin:originBundleId:originAnchorType:confidenceScore:secondsSinceSuggested:serializedTriggers:completionHandler:]_block_invoke
v8@?0
Home
Work
School
currentLOI
previousLOI
lastUpdateDate
predictedNextLOIs
predictedExitTimes
locationsOfInterest
v16@?0@"ATXLocationOfInterest"8
iTunesCategory
location
namedLOI
timeComponents
microLocationUUID
audioDeviceIdentifier
bluetoothDeviceIdentifier
bluetoothDeviceName
@"<ATXTrigger>"16@?0@"NSData"8
@"NSData"16@?0@"<ATXTrigger>"8
v16@?0@"BPSCompletion"8
v16@?0@"BMStoreEvent"8
com.apple.BiomeScreenShare.queue
FocusModes.ScreenShare
com.apple.proactive.ModeAnchorModelSuggestion.xpc
modeUUID
isStart
anchorType
score
numUniqueOccurrencesAfterAnchor
posteriorProbability
classConditionalProbability
triggers
com.apple.BiomeGameController.queue
FocusModes.GameController
com.apple.iBooks
FocusModes.ReadingMode
%@ %@
uuid
type
mode
intValue
strValue
startDate
endDate
jsonMeta
origin
originBundleId
-[ATXModePBEvent writeTo:]
ATXModePBEvent.m
nil != self->_uuid
ModeChange
StartsUp
(unknown: %i)
Custom
Unknown
Default
Working
Exercising
Driving
Bedtime
Gaming
Reading
Traveling
Learning
Streaming
ScreenSharing
ScreenRecording
AirPlayMirroring
Mindfulness
None
CoreMotion
CarPlay
DNDWD
CoreRoutine
Sleep
AppLaunch
WatchWorkout
WFHClassifier
Calendar
version
modeRecord
-[ATXModeScheduler runAfterDelaySecondsIfNotYetScheduled:]
Screen Sharing
Screen Recording
AirPlay Mirroring
Subclasses should implement -[ATXModeAppLaunchFeaturizer expectedGenreId]
Subclasses should implement -[ATXModeAppLaunchFeaturizer modeFeatureType]
Subclasses should implement -[ATXModeAppLaunchFeaturizer registrationId]
com.apple.BiomeAppLaunch.queue
v24@?0@"NSArray"8@"NSError"16
v32@?0@"RTSource"8Q16^B24
v24@?0q8@"NSError"16
ATXMotionTypeWalking
ATXMotionTypeRunning
ATXMotionTypeCycling
ATXMotionTypeDriving
ATXMotionTypeUnknown
stringForMotionType called with invalid ATXMotionType of %tu
Error
com.apple.duetexpertd
workout-mode-identifier
v24@?0@"NSString"8@"NSDictionary"16
_HKWorkoutSessionStateName
/System/Library/Frameworks/HealthKit.framework/HealthKit
HKWorkout
ATXLocationManagerState
contextstored
-unrestricted
v12@?0i8
v16@?0@"ATXModeClassifierGuardedData"8
v28@?0@"NSNumber"8B16B20B24
v16@?0@"NSNumber"8
com.apple.DuetExpertCenter.ProactiveContextClient
v20@?0B8@"NSError"12
v32@?0@"NSString"8@"DNDModeConfiguration"16^B24
DNDModeConfigurationService
/System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb
DNDModeConfiguration
FocusModes.GamingMode
work
userID
events
timezone
timestamp
com.apple.duetexpertd.modes
v32@?0@"NSNumber"8@16^B24
v28@?0i8@12^B20
archive contains illegal nil value for key "%@"
key "%@" not present
key "%@" maps to unexpected class
Invalid
LocationIsAtHome
LocationIsAtWork
WatchIsInWorkout
IsInAutoDND
IsUsingCarPlay
IsOperatingVehicle
IsInBedtime
IsGaming
IsWeekdayNineToFive
HadRecentWorkHandoff
HadMorningAlarm
HasMeetingToday
IsWithinFirstAndLastMeeting
IsWithinFirstAndLastWorkMeeting
IsReading
BundleId
IsScreenSharing
IsScreenRecording
IsGameControllerConnected
isAirPlayMirroring
com.apple.duetexpertd.atx
general
notifications
dailyroutines
modes
hero
lastModeLoggerSubmissionDate
uniqueModeUserID
en_US_POSIX
yyyy-MM-dd HH:mm:ss zzz
com.apple.DuetExpertCenter.AppPredictionExpert
EnableModeNotifications
RemoveModeSwitchEaseIn
RemoveModeSwitchCooldown
RemoveCalendarRefreshCoalesce
RemoveAppLaunchRequirement
RemoveLockScreenFiltersForSuggestions
DNDModeConfigurationsCache
SecondsToEngagement
SecondsToClear
AverageSecondsToEngagement
AverageSecondsToClear
numToggles
totalTime
numUnlocks
displayName
incomingMessages
outgoingMessages
incomingPhoneCalls
outgoingPhoneCalls
incomingFaceTimeAudio
outgoingFaceTimeAudio
incomingFaceTimeVideo
outgoingFaceTimeVideo
modeBackupRestoreTimeKey
modeScoreFilesUpgradeTimeKey
currentBuildForModeEntityTrainingKey
apps
contacts
widgets
com.apple.BiomeScreenRecording.queue
FocusModes.ScreenRecording
com.apple.BiomeSemanticLocation.queue
FocusModes.Routine
com.apple.BiomeBedtime.queue
FocusModes.Bedtime
ATXLocationManagerDidEnterRegionNotification
ATXLocationManagerDidExitRegionNotification
ATXLocationManagerRegionIdentifierUserInfoKey
ATXLocationManager_LOIUpdateQueue
v16@?0@"ATXLocationManagerGuardedData"8
v16@?0@"ATXLocationManagerState"8
horizontalAccuracy > kPreciseHorizontalAccuracyThreshold
horizontalAccuracy > kHorizontalAccuracyThreshold
location is valid, horizontal accuracy is valid, and last update was recent
location nil or horizontalAccuracy too large or timestamp too old
v24@?0{?=dd}8
v32@?0{?=dd}8d24
v24@?0@"CLLocation"8@"NSError"16
current
v24@?0@"ATXLocationOfInterest"8@"NSError"16
predictedLOIs
<CLLocation: lat: %f, long: %f, timestamp: %f>
Local device
Synced via cloud
Paired device
User Action
Scheduled
Automation
Do Not Disturb
Exercise
Personal Time
/System/Library/LocationBundles/CoreParsec.framework
_clCallbackQueue
-[ATXLocationManagerGPSCoreLocation stateForRegion:withTimeout:]
-[ATXLocationManagerGPSCoreLocation locationManager:didDetermineState:forRegion:]
B16@?0@"BMStoreEvent"8
start
%lld
modeOrigin
contextVector
process
q24@?0@"_DKEvent"8@"_DKEvent"16
(startDate > %@ AND startDate < %@) OR (endDate > %@ AND endDate < %@)
Core Motion
DNDwD
Core Routine
App Launch
Watch Workout
Anchor Model
App Launch Model
Screen Share
Game Controller Connected
FocusModes.DNDWD
com.apple.BiomeDriving.queue
v16@?0@"ATXModeHeuristicClassifierGuardedData"8
Classic DND
v16@?0@"ATXCachedMotion"8
v16@?0@"CMMotionActivity"8
walking
running
cycling
driving
unknown
%@|stationary
@16@?0@8
B32@?0@8Q16^B24
latitude
longitude
ATXLocationOfInterest uuid:%@ visits:%@ type:%ld lat:%f long:%f
ATXModeAnchorModelSuggestionServer
NSXPCListenerDelegate
NSObject
ATXModeAnchorModelSuggestionServerXPCInterface
ATXModeAnchorModelSuggestionClientXPCInterface
ATXModeClassifierClientModel
ATXLocationManagerKnownLOIs
NSSecureCoding
NSCoding
ATXLocationManagerState
ATXAppCategoryTrigger
ATXTrigger
ATXLocationEnteredTrigger
ATXLocationExitedTrigger
ATXTimeTrigger
ATXMicroLocationTrigger
ATXWiredAudioConnectedTrigger
ATXWiredAudioDisconnectedTrigger
ATXBluetoothConnectedTrigger
ATXBluetoothDisconnectedTrigger
ATXWorkCalendarEventTrigger
ATXGameControllerConnectedTrigger
ATXBedtimeTrigger
ATXWatchWorkoutTrigger
ATXIdleTimeBeginTrigger
ATXIdleTimeEndTrigger
ATXCoreMotionDrivingTrigger
ATXDNDWDTrigger
ATXCarPlayConnectedTrigger
ATXCarPlayDisconnectedTrigger
ATXChargerConnectedTrigger
ATXScreenShareTrigger
ATXScreenRecordingTrigger
ATXSmartTrigger
ATXModeScreenShareFeaturizer
ATXModeFeaturizer
ATXModeAnchorModelSuggestion
ATXModeGameControllerFeaturizer
ATXModeReadingFeaturizer
ATXModePBEvent
NSCopying
ATXModePBLogWrapper
ATXModeScheduler
ATXModeAppLaunchFeaturizer
ATXLocationManagerRoutineCR
ATXLocationManagerRoutine
ATXMotionTypes
ATXModeExerciseFeaturizer
ATXLocationManagerStateStoreOnDisk
ATXLocationManagerStateStore
ATXLocationManagerStateStoreOnDiskEnv
ATXModeClassifierGuardedData
ATXModeClassifier
ATXModeClassifierClientModelDelegate
ATXConfiguredModeService
DNDModeConfigurationServiceListener
ATXModeGamingFeaturizer
ATXModeCalendarFeaturizer
ATXModePBRecord
ATXModeFeatureSet
ATXModeLogger
ATXModeScreenRecordingFeaturizer
ATXModeRoutineFeaturizer
ATXModeBedtimeFeaturizer
ATXLocationManager
ATXLocationManagerGPSDelegate
ATXLocationManagerProtocol
ATXPredictedLocationsManagerProtocol
ATXLocationOfInterestManagerProtocol
ATXLocationManagerGuardedData
ATXExtras
ATXLocationManagerGPSCoreLocation
CLLocationManagerDelegate
ATXLocationManagerGPS
ATXModeDuetHelper
ATXModeDrivingFeaturizer
ATXModeHeuristicClassifierGuardedData
ATXModeHeuristicClassifier
ATXModeFeaturizerDelegate
ATXTimer
ATXMotionManagerWrapper
ATXMotion
ATXCachedMotion
ATXLocationOfInterest
ATXNamedLOI
initWithMachServiceName:
initWithXPCListener:configuredModeService:
init
setDelegate:
resume
invalidate
dealloc
modeUUID
modeType
origin
originBundleId
originAnchorType
confidenceScore
timeIntervalSinceReferenceDate
absoluteTimestamp
serializedTriggers
fetchCombinedSuggestionScoreForModeWithUUID:modeType:origin:originBundleId:originAnchorType:confidenceScore:secondsSinceSuggested:serializedTriggers:completionHandler:
remoteObjectProxyWithErrorHandler:
fetchCombinedSuggestionScoreAndFlagsForModeWithUUID:modeType:origin:originBundleId:originAnchorType:confidenceScore:secondsSinceSuggested:serializedTriggers:completionHandler:
count
countByEnumeratingWithState:objects:count:
isStart
numberWithBool:
anchorType
isActivityWithUUIDConfigured:activityType:allowsSmartEntry:userModeName:
_shouldUpdateHighestConfidenceSuggestion:newSuggestion:
delegate
score
clientModel:didUpdatePredictionWithUUID:userModeName:modeType:confidenceScore:modeOrigin:originBundleId:originAnchorType:serializedTriggers:
valueForEntitlement:
boolValue
setExportedInterface:
setExportedObject:
setInterruptionHandler:
setInvalidationHandler:
setRemoteObjectInterface:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
listener:shouldAcceptNewConnection:
pingWithCompletion:
anchorModelDidProvideModeSuggestions:
T@"<ATXModeClassifierClientModelDelegate>",W,N
initWithConfiguredModeService:
fetchCombinedSuggestionScoreForModeEvent:completionHandler:
.cxx_destruct
_xpcListener
_xpcConnection
_modeService
_delegate
T@"<ATXModeClassifierClientModelDelegate>",W,N,V_delegate
encodeObject:forKey:
decodeObjectOfClass:forKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
Home
Work
School
distantPast
arrayWithObjects:count:
setWithArray:
decodeObjectOfClasses:forKey:
lastUpdateDate
earlierDate:
isEqualToDate:
uuid
addObject:
previousLOI
currentLOI
lastObject
setCurrentLOI:
removeLastObject
setPreviousLOI:
predictedNextLOIs
setPredictedNextLOIs:
predictedExitTimes
setPredictedExitTimes:
locationsOfInterest
valueForKey:
setValue:forKey:
setLastUpdateDate:
merge:with:
expirePreviousLOIBefore:
homeLOI
workLOI
schoolLOI
gymLOI
_currentLOI
_previousLOI
_predictedNextLOIs
_predictedExitTimes
_lastUpdateDate
_locationsOfInterest
T@"ATXLocationOfInterest",&,N,V_currentLOI
T@"ATXLocationOfInterest",&,N,V_previousLOI
T@"NSArray",&,N,V_predictedNextLOIs
T@"NSArray",&,N,V_predictedExitTimes
T@"NSDate",&,N,V_lastUpdateDate
T@"ATXLocationManagerKnownLOIs",R,N,V_locationsOfInterest
T@"CLLocation",R,N
isEqualToArray:
unarchivedObjectOfClasses:fromData:error:
_pas_mappedArrayWithTransform:
archivedDataWithRootObject:requiringSecureCoding:error:
mutableCopy
decodeIntegerForKey:
initWithiTunesCategoryId:
encodeInteger:forKey:
type
Tq,R,N
iTunesCategoryId
_iTunesCategoryId
Tq,R,N,V_iTunesCategoryId
initWithLocationIdentifier:namedLOI:
namedLOI
locationIdentifier
_namedLOI
_locationIdentifier
TQ,R,N,V_namedLOI
T@"NSString",R,N,V_locationIdentifier
timeComponents
_timeComponents
T@"NSDateComponents",R,N,V_timeComponents
initWithLocationUUID:
_uuid
T@"NSString",R,N,V_uuid
initWithDeviceIdentifier:
deviceIdentifier
_deviceIdentifier
T@"NSString",R,N,V_deviceIdentifier
initWithDeviceIdentifier:deviceName:
deviceName
_deviceName
T@"NSString",R,N,V_deviceName
initWithObjects:
screenSharingStream
publisherFromStartTime:
last
state
error
eventBody
sinkWithCompletion:receiveInput:
_provideFeaturesWithScreenShareEvent:
setValue:forBinaryFeatureOfType:
featurizer:didUpdateFeatures:
initWithIdentifier:targetQueue:
publisher
subscribeOn:
_processNewScreenShareEvent:
cancel
provideFeatures
beginListening
stopListening
T@"<ATXModeFeaturizerDelegate>",W,N
_queue
_scheduler
_sink
T@"<ATXModeFeaturizerDelegate>",W,N,V_delegate
interfaceWithProtocol:
setClasses:forSelector:argumentIndex:ofReply:
copy
encodeBool:forKey:
encodeDouble:forKey:
decodeBoolForKey:
decodeDoubleForKey:
setWithObjects:
initWithModeUUID:isStart:anchorType:score:numUniqueOccurrencesAfterAnchor:posteriorProbability:classConditionalProbability:serializedTriggers:
numUniqueOccurrencesAfterAnchor
posteriorProbability
classConditionalProbability
_isStart
_modeUUID
_anchorType
_score
_numUniqueOccurrencesAfterAnchor
_posteriorProbability
_classConditionalProbability
_serializedTriggers
T@"NSString",R,N,V_modeUUID
TB,R,N,V_isStart
T@"NSString",R,N,V_anchorType
Td,R,N,V_score
TQ,R,N,V_numUniqueOccurrencesAfterAnchor
Td,R,N,V_posteriorProbability
Td,R,N,V_classConditionalProbability
T@"NSArray",R,N,V_serializedTriggers
gameControllerStream
_provideFeaturesWithGameControllerEvent:
isControllerConnected
_processNewGameControllerEvent:
setWithObject:
expectedGenreId
additionalAllowedBundleIds
modeFeatureType
registrationId
dictionaryRepresentation
stringWithFormat:
dictionary
setObject:forKey:
numberWithInt:
numberWithDouble:
setUuid:
setStrValue:
setJsonMeta:
setOriginBundleId:
allocWithZone:
copyWithZone:
typeAsString:
StringAsType:
mode
setMode:
setHasMode:
hasMode
modeAsString:
StringAsMode:
setIntValue:
setHasIntValue:
hasIntValue
hasStrValue
setStartDate:
setHasStartDate:
hasStartDate
setEndDate:
setHasEndDate:
hasEndDate
hasJsonMeta
setOrigin:
setHasOrigin:
hasOrigin
originAsString:
StringAsOrigin:
hasOriginBundleId
setIsStart:
setHasIsStart:
hasIsStart
readFrom:
writeTo:
copyTo:
mergeFrom:
setType:
intValue
strValue
startDate
endDate
jsonMeta
_endDate
_startDate
_intValue
_jsonMeta
_mode
_origin
_originBundleId
_strValue
_type
_has
T@"NSString",&,N,V_uuid
Ti,N,V_type
TB,N
Ti,N,V_mode
Ti,N,V_intValue
TB,R,N
T@"NSString",&,N,V_strValue
Td,N,V_startDate
Td,N,V_endDate
T@"NSString",&,N,V_jsonMeta
Ti,N,V_origin
T@"NSString",&,N,V_originBundleId
TB,N,V_isStart
isEqualToString:
setModeRecord:
setVersion:
setHasVersion:
hasVersion
hasModeRecord
version
modeRecord
_modeRecord
_version
Ti,N,V_version
T@"ATXModePBRecord",&,N,V_modeRecord
dispatchTimeWithSecondsFromNow:
cancelPendingOperation
dateWithTimeIntervalSinceNow:
initWithQueue:operationBlock:andLeeway:
runAfterDelaySecondsIfNotYetScheduled:
_timer
_block
_leewaySeconds
_scheduledDate
isInternalBuild
appLaunch
isStarting
bundleID
_latestAppLaunchBundleId
_provideFeaturesWithBundleId:
setState:
setString:forFeatureType:
setNullForFeatureType:
exceptionWithName:reason:userInfo:
runAfterDelaySeconds:coalescingBehavior:
cancelPendingOperations
_actuallyEndMode
initWithQueue:operation:
_actuallyStartMode
_processNewAppLaunchEvent:
easeInTimerIsEnabled
setEaseInTimerIsEnabled:
cooldownTimerIsEnabled
setCooldownTimerIsEnabled:
_cooldownTimer
_easeInTimer
_easeInTimerIsEnabled
_cooldownTimerIsEnabled
_state
Tq,V_state
TB,N,V_easeInTimerIsEnabled
TB,N,V_cooldownTimerIsEnabled
length
containsObject:
initWithBundleIdentifier:allowPlaceholder:error:
iTunesMetadata
genreIdentifier
initWithRoutineManager:
closestLOI:toLocation:
fetchLocationsOfInterestWithinDistance:ofLocation:withHandler:
firstObject
location
latitude
longitude
initWithLatitude:longitude:
fetchLocationsOfInterestOfType:withHandler:
initWithCapacity:
fetchLocationsOfInterestVisitedBetweenStartDate:endDate:withHandler:
locationOfInterest
confidence
sources
enumerateObjectsUsingBlock:
fetchNextPredictedLocationsOfInterestFromLocation:startDate:timeInterval:withHandler:
date
uncertainty
fetchPredictedExitDatesFromLocation:onDate:withHandler:
fetchRoutineModeFromLocation:withHandler:
waitForSemaphore:timeoutSeconds:onAcquire:onTimeout:
distanceFromLocation:
fetchClosestLOIWithinDistance:ofLocation:reply:
fetchLOILocationOfType:reply:
fetchLOIVisitedDuring:reply:
fetchNextPredictedLOIFromLocation:startDate:timeInterval:requireHighConfidence:reply:
fetchPredictedExitDatesFromLocation:onDate:requireHighConfidence:reply:
fetchRoutineModeFromLocation:
_routineManager
visits
entryDate
exitDate
valueWithRange:
identifier
initWithUUID:visits:coordinate:type:
raise:format:
stringForMotionType:
motionTypeForString:found:
isInWorkout
_setUpContextIfNecessary
_createWorkoutPredicate
objectForKeyedSubscript:
value
sessionState
setIsInWorkout:
registrationWithIdentifier:contextualPredicate:deviceTypes:clientIdentifier:mustWake:qualityOfService:callback:
registerCallback:
deregisterCallback:
_allWorkoutActivityTypes
predicateForFirstPartyWorkoutMatchingTypes:states:
userContext
_userContext
_registration
_isInWorkout
TB,V_isInWorkout
previousLOIExpirationTime
appPredictionDirectoryFile:
processInfo
processName
lowercaseString
knowledgeDirectory
stringByAppendingPathComponent:
stringByAppendingString:
initWithPath:environment:locationParameters:
openFileAtPath:dataProtectionClass:
_tryToOpen
cacheExpirationInterval
unarchivedObjectOfClass:fromData:error:
isLocked
defaultManager
fileExistsAtPath:
_deviceDidUnlock
callOnNextUnlock:
loadNowOrCallLater:
removeItemAtPath:error:
write:
clear
setCacheExpirationInterval:
initWithLocationParameters:
_path
_env
_deferredLoadCallback
_cacheExpirationInterval
Td,V_cacheExpirationInterval
unregisterForLockStateChangeNotifications:
isUnlocked
UTF8String
registerForLockStateChangeNotifications:
_stateChangeRegistration
_currentModeEvent
initWithDuetHelper:
runBlockWhenDeviceIsClassCUnlocked:
initWithDuetHelper:configuredModeService:
update
_expireMode
currentBMInferredModeEvent
_setUpModeExpirationTimerIfNeededWithModeOrigin:
initWithGuardedData:serialQueue:
runWithLockAcquired:
_isModeType:uuid:sameAsModeFromEvent:
updateModeWithUUID:userModeName:modeType:modeOrigin:originAnchorType:originBundleId:uiLocation:confidenceScore:serializedTriggers:allowsSmartEntry:shouldSuggestTriggers:currentMode:stream:
isAutomationEnabled
uiLocation
suggestionUUID
userModeName
initWithAbsoluteTimestamp:modeUUID:origin:originBundleId:originAnchorType:isAutomationEnabled:uiLocation:isStart:confidenceScore:suggestionUUID:serializedTriggers:shouldSuggestTriggers:modeType:userModeName:
source
sendEvent:
UUIDString
_updateWithGuardedData:newModeUUID:userModeName:modeType:modeOrigin:originBundleId:originAnchorType:uiLocation:confidenceScore:serializedTriggers:allowsSmartEntry:shouldSuggestTriggers:
runAsyncWithLockAcquired:
_shouldUpdateMode:currentModeScore:newModeOrigin:newModeScore:
_updateWithNewModeUUID:userModeName:modeType:modeOrigin:originBundleId:originAnchorType:uiLocation:confidenceScore:serializedTriggers:allowsSmartEntry:shouldSuggestTriggers:
doubleValue
currentModeUUID:userModeName:modeType:confidenceScore:origin:originBundleId:serializedTrigger:allowsSmartEntry:
_updateWithNewModeUUIDIfNeeded:userModeName:modeType:modeOrigin:originBundleId:originAnchorType:confidenceScore:serializedTriggers:
provideModeClassifierWhenReadyWithDuetHelper:block:
currentMode
_lock
_inferredModeStream
_anchorModelSuggestionServer
_heuristicModeClassifier
_modeExpirationTimer
initWithCacheFilePath:
_createServiceIfNeeded
_cacheAndReturnDNDModeConfigurationDictionary
serviceForClientIdentifier:
addListener:withCompletionHandler:
_modeConfigurationsReturningError:
_cacheDNDModeConfigurationDictionary:
_nsDataFromDNDModeConfigurationDictionary:
storeData:
readWithMaxValidAge:unlink:cacheDataOut:cacheAgeOut:
dndModeConfigurationDictionaryFromNSData:
isActivityTypeConfigured:uuid:allowsSmartEntry:userModeName:
_isActivityTypeConfigured:uuid:allowsSmartEntry:userModeName:dndConfigs:
integerValue
semanticType
name
allowSmartEntry
enumerateKeysAndObjectsUsingBlock:
DNDModeConfigurationForActivityWithUUID:
_DNDModeConfigurationForActivityWithUUID:dndConfigs:
_isActivityWithUUIDConfigured:activityType:allowsSmartEntry:userModeName:dndConfigs:
modeConfigurationsReturningError:
_retrieveCachedDNDModeConfigurationDictionary
initWithSuiteName:
objectForKey:
numberWithInteger:
allObjects
_updateUserDefaultsForAnyNewlyAddedModesWithDNDConfigs:
_checkIfConfigurationOfCurrentModeChangedWithDNDConfigs:
modeConfigurationService:didReceiveAvailableModesUpdate:
isActivityTypeConfigured:
isActivityWithUUIDConfigured:
_service
_cache
_updateFeatures
defaultCenter
removeObserver:
isAllDay
hasAttendees
title
localizedCaseInsensitiveContainsString:
supportsLocationDirectorySearches
isAffectingAvailability
participationStatus
_shouldConsiderEventBasedOnParticipantStatus:
laterDate:
calendar
isLikelyAWorkCalendar:
initWithEKOptions:
currentCalendar
startOfDayForDate:
dateByAddingUnit:value:toDate:options:
predicateForEventsWithStartDate:endDate:calendars:
eventsMatchingPredicate:
fireAtDate:block:
_eventsDidChange:
addObserver:selector:name:object:
removeAllObjects
_fetchEventsForDay
_hasAnyEventsIn:now:
_setFeaturesForEventsCurrentlyIn:now:featureSet:
_addTimerForDate:
calendarRefreshCoalesceTimerIsEnabled
setCalendarRefreshCoalesceTimerIsEnabled:
_timers
_featureUpdateTimer
_calendarRefreshCoalesceTimerIsEnabled
TB,N,V_calendarRefreshCoalesceTimerIsEnabled
objectAtIndex:
numberWithUnsignedLongLong:
addEvents:
setUserID:
eventsCount
clearEvents
eventsAtIndex:
eventsType
hasUserID
setTimezone:
setHasTimezone:
hasTimezone
setTimestamp:
setHasTimestamp:
hasTimestamp
userID
events
setEvents:
timezone
timestamp
_timestamp
_events
_timezone
_userID
T@"NSString",&,N,V_userID
T@"NSMutableArray",&,N,V_events
Ti,N,V_timezone
TQ,N,V_timestamp
setValue:forFeatureType:
setObject:forKeyedSubscript:
null
valueForFeatureType:
_enumerateFeaturesUsingBlock:
containsValueForKey:
dictionaryWithObjects:forKeys:count:
initWithDomain:code:userInfo:
failWithError:
initWithDictionary:
boolValueForFeatureType:
stringForFeatureType:
mergeWithFeatures:
_features
localeWithLocaleIdentifier:
setLocale:
setDateFormat:
stringFromDate:
_lastSubmissionDate
localTimeZone
secondsFromGMT
timeIntervalSince1970
shareDiagnosticDataWrapper
modeStreamFrom:to:limit:
UUID
stringValue
_updateLastSubmissionDate:
_userDefaults
stringForKey:
doubleForKey:
dateByAddingTimeInterval:
dateWithTimeIntervalSince1970:
setDouble:forKey:
stringForDate:
logEventsFromModeStream
setShareDiagnosticDataWrapper:
_formatter
_defaults
_duetHelper
_shareDiagnosticDataWrapper
TB,V_shareDiagnosticDataWrapper
screenRecordingStream
_provideFeaturesWithScreenRecordingEvent:
_processNewScreenRecordingEvent:
semanticLocationStream
_provideFeaturesWithLocationEvent:
userSpecificPlaceType
_processNewLocationEvent:
sleepModeStream
_provideFeaturesWithSleepEvent:
sleepModeState
numberWithUnsignedInteger:
_processNewSleepEvent:
sharedInstance
initWithGPS:routine:stateStore:now:modeGlobals:
initWithGuardedData:
locationEnabled
preciseLocationEnabled
timeIntervalSinceDate:
currentLocationUpdateInterval
debugDescriptionForCLLocation:
horizontalAccuracy
tupleWithFirst:second:
getCurrentLocation_RequestPreciseLocation:
getCurrentLocation
shiftedLocationForChinaFromLocation:
getCurrentPreciseLocation
altitude
verticalAccuracy
course
courseAccuracy
speed
speedAccuracy
initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:course:courseAccuracy:speed:speedAccuracy:timestamp:
setReferenceFrame:
coordinate
referenceFrame
isLocationShiftRequiredForCoordinate:
shifter
shiftCoordinate:accuracy:withCompletionHandler:mustGoToNetworkCallback:errorHandler:callbackQueue:
waitForSemaphore:timeoutSeconds:
clearLocationOfInterest
_currentLocationAndNeedsUpdate_RequestPreciseLocation:
first
second
updateLocationWithTimeout:requestPreciseLocation:
errorWithDomain:code:userInfo:
updateLocationWithCompletionHandler:
locationOfInterestSearchRadius
_handleRoutineError:forThing:
gotState:
_fetchLocationOfInterest:inGroup:
_updateLocationsOfInterestWithCurrentLocation:
waitForGroup:timeoutSeconds:
getCurrentLocationWithCompletionHandler:
stringForLOIType:
_gotLocation:forLocationOfInterest:
dateWithTimeInterval:sinceDate:
domain
code
distantFuture
locationOfInterestUpdateInterval
updateCurrentLocationOfInterest
updateCurrentLocationOfInterestWithCompletionHandler:
updateCurrentLocationOfInterestIfTimeElapsed
cachedLocationOfInterestAtCurrentLocation
_updateCurrentLocationOfInterestIfTimeElapsedWithCompletionHandler:
initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:timestamp:
_updatePredictedLocationsOfInterestIfTimeElapsed
_updatePredictedExitTimesIfTimeElapsed
predictedLocationsOfInterestUpdateInterval
updatePredictedLocationsOfInterest
predictedExitTimesUpdateInterval
updatePredictedExitTimes
_distanceOfCurrentLocationFrom:
initWithFormat:
initWithStartDate:endDate:
locationOfInterestAtCurrentLocation
frequentLOIMinimumVisits
isNearKnownTypeLocationOfInterest
isNearFrequentLocationOfInterest
isTouristWithCurrentDate:
getCurrentRoutineModeWithCurrentDate:
initWithName:object:userInfo:
postNotification:
beginMonitoringRegion:
stopMonitoringRegionWithIdentifier:
stateForRegion:withTimeout:
didChangeLocationEnabled:
didChangePreciseLocationEnabled:
locationManagerGPS:didEnterRegionWithIdentifier:
locationManagerGPS:didExitRegionWithIdentifier:
locationOfInterestAtCurrentLocationWithCompletionHandler:
distanceFromHomeOfCurrentLocationInMeters
distanceFromWorkOfCurrentLocationInMeters
distanceFromSchoolOfCurrentLocationInMeters
distanceFromGymOfCurrentLocationInMeters
fetchAllLocationsOfInterest:
fetchLocationsOfInterestVisitedDuring:handler:
invalidateLocationOfInterestCache
getCurrentLocationWithShiftInChina
getCurrentPreciseLocationWithShiftInChina
isTourist
isNearKnownTypeOrFrequentLocationOfInterest
predictedLocationsOfInterest
getPredictedLocationsOfInterestFromLOIName:startDate:
getPredictedExitTimesFromLOIName:startDate:
isAvailableLocationOfInterestType:
initWithStateStore:modeGlobals:
setNow:
previousLOIAndCurrentLOI
isLocationNearKnownTypeLocationOfInterest:
predictedNextLOITimeout
setPredictedNextLOITimeout:
predictedExitDateTimeout
setPredictedExitDateTimeout:
_gps
_routine
_stateStore
_shifter
_loiUpdateQueue
_modeGlobals
_now
_predictedNextLOITimeout
_predictedExitDateTimeout
T@"NSDate",&,N,V_now
Td,N,V_predictedNextLOITimeout
Td,N,V_predictedExitDateTimeout
currentLocation
lastRequestLocationDate
currentRoutineMode
lastLOIUpdateTimestamp
lastRoutineModeTimestamp
lastPredictedLOIsUpdateTimestamp
lastPredictedExitTimesUpdateTimestamp
currentBMUserFocusComputedModeEvent
currentModeUUID
modeUpdateSource
modeUpdateReason
modeSemanticType
modeUpdateSourceAsString
modeUpdateReasonAsString
modeSemanticTypeAsString
bundleWithPath:
initWithEffectiveBundle:delegate:onQueue:
setDesiredAccuracy:
authorizationStatus
accuracyAuthorization
_init
requestLocation
lock
_startUpdateIfNeededWithPreciseLocation:
waitUntilDate:
unlock
startMonitoringForRegion:
_requestStateIfNeededForRegion:
requestStateForRegion:
monitoredRegions
_existingRegionWithIdentifierOnCLQueue:
stopMonitoringForRegion:
broadcast
_updateConditionAndInvokeLocationBlocks:error:
center
radius
locationManager:didUpdateToLocation:fromLocation:
locationManager:didUpdateLocations:
locationManager:didUpdateHeading:
locationManagerShouldDisplayHeadingCalibration:
locationManager:didDetermineState:forRegion:
locationManager:didRangeBeacons:inRegion:
locationManager:rangingBeaconsDidFailForRegion:withError:
locationManager:didRangeBeacons:satisfyingConstraint:
locationManager:didFailRangingBeaconsForConstraint:error:
locationManager:didEnterRegion:
locationManager:didExitRegion:
locationManager:didFailWithError:
locationManager:monitoringDidFailForRegion:withError:
locationManager:didChangeAuthorizationStatus:
locationManagerDidChangeAuthorization:
locationManager:didStartMonitoringForRegion:
locationManagerDidPauseLocationUpdates:
locationManagerDidResumeLocationUpdates:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didVisit:
T@"<ATXLocationManagerGPSDelegate>",W,N
_locationManager
_clQueue
_updateCondition
_locationEnabled
_preciseLocationEnabled
_updatePending
_locationBlocksToInvoke
_requestStateCondition
_regionRequested
T@"<ATXLocationManagerGPSDelegate>",W,N,V_delegate
modeStreamFrom:to:ascending:limit:
filterWithIsIncluded:
initWithTimeIntervalSinceReferenceDate:
focusModeStream
eventWithStream:startDate:endDate:identifierStringValue:metadata:
sortUsingComparator:
_updateModeStreamEndDates:to:
predicateWithFormat:
arrayByAddingObject:
andPredicateWithSubpredicates:
knowledgeStoreWithDirectReadOnlyAccess
sortDescriptorWithKey:ascending:
eventQueryWithPredicate:eventStreams:offset:limit:sortDescriptors:
executeQuery:error:
objectAtIndexedSubscript:
metadata
eventWithStream:startDate:endDate:value:metadata:
_queryDuetStreamUnbatched:startDate:endDate:ascending:otherPredicates:limit:
_provideFeaturesWithLastDNDWDEvent:
_fetchMostRecentDNDWDEvent
doNotDisturbWhileDrivingStream
_processNewDNDWDEvent:
_beginListeningForDNDWDEvents
_DNDWDSink
_DNDWDScheduler
_aggregateFeatures
_lastFeatureUpdateDate
_featureBuffer
initWithFeaturizers:minUpdateInterval:duetHelper:configuredModeService:
arrayWithCapacity:
_updateIfNeededWithGuardedData:
_requestFeaturesFromAllFeaturizersAndUpdate
_predictModeWithFeature:
_updateWithGuardedData:
_triggersForMode:fromAggregateFeatures:
_currentModeUUID:userModeName:modeType:confidenceScore:origin:originBundleId:serializedTrigger:allowsSmartEntry:guardedData:
_confidenceScoreForMode:fromAggregateFeatures:
_originForMode:fromAggregateFeatures:
_serializedTriggersForMode:fromAggregateFeatures:
updateWithFeatureSet:immediately:reply:
timeIntervalSinceNow
updateWithFeatureSet:
currentFeaturesInDictionary
reset
_minUpdateInterval
_featurizers
_logger
previousBMInferredModeEvent
inferredModeEventWithSuggestionUUID:
initWithDate:block:
_source
setMaxConcurrentOperationCount:
initWithATXMotion:
hasMotionActivity
updateCurrentActivity:
isActivityAvailable
queryActivityStartingFromDate:toDate:toQueue:withHandler:
_fetchMotionActivities
summarizeActivityStream:
update:
initFromCMMotionActivity:
isExpired
currentMotion
didUpdateMotionType:isActive:
walking
running
cycling
automotive
unknown
_motionActivityHandler
startActivityUpdatesToQueue:withHandler:
removeObject:
removeObjectForKey:
stopActivityUpdates
getCurrentActivity
startUpdatingMotionType:forDelegate:
stopUpdatingMotionType:forDelegate:
_motionActivityManager
_motionActivityQueue
_delegatesMonitoringForMotionType
_mostRecentActivity
_currentMotion
initFromCMMotionActivity:canPredictClipsGivenRecentMotion:
_getMotionTypeFromCMMotionActivity:
stationary
initWithMotionType:stationary:canPredictClipsGivenRecentMotion:
getMotionStringFromMotionType:
getMotionString
findMostCommonAndRecent:identityFunc:
canPredictClipsForActivityStream:
subarrayWithRange:
indexesOfObjectsPassingTest:
objectsAtIndexes:
_getMotionStringFromCMMotionActivity:
print
motiontype
canPredictClipsGivenRecentMotion
_stationary
_canPredictClipsGivenRecentMotion
_motiontype
Tq,R,N,V_motiontype
TB,R,N,V_stationary
TB,R,N,V_canPredictClipsGivenRecentMotion
lastUpdated
T@"ATXMotion",R,C,N,V_currentMotion
isEqualToLocation:
initWithUUID:visits:coordinate:
addVisitFrom:to:
setCoordinate:
_visits
_coordinate
T{CLLocationCoordinate2D=dd},N,V_coordinate
T@"NSUUID",R,N,V_uuid
T@"NSArray",R,N,V_visits
Tq,R,N,V_type
initWithName:type:
_name
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v24@0:8@?16
v24@0:8@16
v24@0:8@?<v@?B>16
v24@0:8@"NSArray"16
v88@0:8@16Q24q32@40@48d56d64@72@?80
v88@0:8@"NSString"16Q24q32@"NSString"40@"NSString"48d56d64@"NSArray"72@?<v@?@"NSNumber">80
v88@0:8@"NSString"16Q24q32@"NSString"40@"NSString"48d56d64@"NSArray"72@?<v@?@"NSNumber"BBB>80
@"<ATXModeClassifierClientModelDelegate>"16@0:8
v24@0:8@"<ATXModeClassifierClientModelDelegate>"16
@24@0:8@16
@32@0:8@16@24
v16@0:8
v32@0:8@16@?24
@"NSXPCListener"
@"NSXPCConnection"
@"ATXConfiguredModeService"
@"<ATXModeClassifierClientModelDelegate>"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"CLLocation"
@"ATXLocationOfInterest"
@"NSArray"
@"NSDate"
@"ATXLocationManagerKnownLOIs"
q16@0:8
@24@0:8Q16
@32@0:8@16Q24
@"NSString"
@"NSDateComponents"
@"ATXModeFeatureSet"16@0:8
@"<ATXModeFeaturizerDelegate>"16@0:8
v24@0:8@"<ATXModeFeaturizerDelegate>"16
@"NSObject<OS_dispatch_queue>"
@"BMBiomeScheduler"
@"BPSSink"
@"<ATXModeFeaturizerDelegate>"
@76@0:8@16B24@28d36Q44d52d60@68
d16@0:8
i16@0:8
@24@0:8^{_NSZone=}16
@20@0:8i16
i24@0:8@16
v20@0:8i16
v20@0:8B16
v24@0:8d16
{?="endDate"b1"startDate"b1"intValue"b1"mode"b1"origin"b1"isStart"b1}
@"ATXModePBRecord"
{?="version"b1}
@40@0:8@16@?24d32
@24@0:8d16
@"NSObject<OS_dispatch_source>"
v24@0:8q16
@"_PASSimpleCoalescingTimer"
v40@0:8d16@24@?32
v32@0:8q16@?24
v52@0:8@16@24d32B40@?44
v44@0:8@16@24B32@?36
Q24@0:8@16
v40@0:8d16@"CLLocation"24@?<v@?@"ATXLocationOfInterest"@"NSError">32
v32@0:8q16@?<v@?@"CLLocation"@"NSError">24
v32@0:8@"NSDateInterval"16@?<v@?@"NSArray"@"NSError">24
v52@0:8@"CLLocation"16@"NSDate"24d32B40@?<v@?@"NSArray"@"NSError">44
v44@0:8@"CLLocation"16@"NSDate"24B32@?<v@?@"NSArray"@"NSError">36
Q24@0:8@"CLLocation"16
@"RTRoutineManager"
@24@0:8q16
q32@0:8@16^B24
@"_CDClientContext"
@"_CDContextualChangeRegistration"
@24@0:8@?16
@"ATXLocationManagerState"24@0:8@?<v@?@"ATXLocationManagerState">16
v24@0:8@"ATXLocationManagerState"16
@40@0:8@16@24@32
@"<ATXLocationManagerStateStoreOnDiskEnv>"
i28@0:8@16i24
i28@0:8@"NSString"16i24
v24@0:8@?<v@?>16
@"BMInferredModeEvent"
@112@0:8@16@24Q32q40@48@56Q64d72@80B88B92@96@104
v88@0:8@16@24@32Q40d48q56@64@72@80
v88@0:8@"<ATXModeClassifierClientModel>"16@"NSString"24@"NSString"32Q40d48q56@"NSString"64@"NSString"72@"NSArray"80
B40@0:8Q16@24@32
v104@0:8@16@24@32Q40q48@56@64Q72d80@88B96B100
v96@0:8@16@24Q32q40@48@56Q64d72@80B88B92
v80@0:8@16@24Q32q40@48@56d64@72
B48@0:8q16@24q32@40
@"_PASQueueLock"
@"BMInferredModeStream"
@"ATXModeAnchorModelSuggestionServer"
@"ATXModeHeuristicClassifier"
v32@0:8@16@24
v32@0:8@"DNDModeConfigurationService"16@"NSArray"24
B24@0:8Q16
B48@0:8Q16^@24^B32^@40
B56@0:8Q16^@24^B32^@40@48
B48@0:8@16^Q24^B32^@40
B56@0:8@16^Q24^B32^@40@48
@24@0:8^@16
@"DNDModeConfigurationService"
@"ATXGenericFileBasedCache"
v40@0:8@16@24@32
B24@0:8q16
@"NSHashTable"
v24@0:8Q16
@"NSMutableArray"
{?="timestamp"b1"timezone"b1}
v24@0:8B16i20
v28@0:8@16i24
B20@0:8i16
@"NSMutableDictionary"
@"NSDateFormatter"
@"NSUserDefaults"
@"ATXModeDuetHelper"
v32@0:8@"<ATXLocationManagerGPS>"16@"NSString"24
q32@0:8@16d24
@"ATXLocationOfInterest"16@0:8
v24@0:8@?<v@?@"ATXLocationOfInterest"@"NSError">16
v24@0:8@?<v@?@"NSArray"@"NSError">16
@"CLLocation"16@0:8
v24@0:8@"CLRegion"16
v24@0:8@"NSString"16
q32@0:8@"CLRegion"16d24
B24@0:8@"NSDate"16
@"NSString"24@0:8q16
@"NSArray"16@0:8
@"NSArray"32@0:8@"NSString"16@"NSDate"24
@56@0:8@16@24@32@40@48
@20@0:8B16
v32@0:8q16@24
v32@0:8@16q24
d24@0:8@16
@"<ATXLocationManagerGPS>"
@"<ATXLocationManagerRoutine>"
@"<ATXLocationManagerStateStore>"
@"_PASLock"
@"GEOLocationShifter"
@"<ATXLocationParameters>"
@"ATXLocationManagerState"
v40@0:8@16q24@32
v40@0:8@"CLLocationManager"16@"CLLocation"24@"CLLocation"32
v32@0:8@"CLLocationManager"16@"NSArray"24
v32@0:8@"CLLocationManager"16@"CLHeading"24
B24@0:8@"CLLocationManager"16
v40@0:8@"CLLocationManager"16q24@"CLRegion"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconRegion"32
v40@0:8@"CLLocationManager"16@"CLBeaconRegion"24@"NSError"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconIdentityConstraint"32
v40@0:8@"CLLocationManager"16@"CLBeaconIdentityConstraint"24@"NSError"32
v32@0:8@"CLLocationManager"16@"CLRegion"24
v32@0:8@"CLLocationManager"16@"NSError"24
v40@0:8@"CLLocationManager"16@"CLRegion"24@"NSError"32
v28@0:8@"CLLocationManager"16i24
v24@0:8@"CLLocationManager"16
v32@0:8@"CLLocationManager"16@"CLVisit"24
@28@0:8d16B24
@"CLLocation"28@0:8d16B24
v24@0:8@?<v@?@"CLLocation"@"NSError">16
@"<ATXLocationManagerGPSDelegate>"16@0:8
v24@0:8@"<ATXLocationManagerGPSDelegate>"16
@"CLLocationManager"
@"NSCondition"
@"NSMutableSet"
@"CLRegion"
@"<ATXLocationManagerGPSDelegate>"
@40@0:8@16@24Q32
@44@0:8@16@24B32Q36
@60@0:8@16@24@32B40@44Q52
@"ATXModeFeatureSet"
v32@0:8@"<ATXModeFeaturizer>"16@"ATXModeFeatureSet"24
@48@0:8@16d24@32@40
@32@0:8Q16@24
v80@0:8^@16^@24^Q32^d40^q48^@56^@64^B72
v88@0:8^@16^@24^Q32^d40^q48^@56^@64^B72@80
q32@0:8Q16@24
d32@0:8Q16@24
v36@0:8@16B24@?28
@"ATXModeScheduler"
@"ATXModeLogger"
@32@0:8@16@?24
@?16@0:8
@"CMMotionActivityManager"
@"NSOperationQueue"
@"CMMotionActivity"
q24@0:8@16
@32@0:8q16B24B28
@28@0:8@16B24
@"ATXMotion"
@56@0:8@16@24{CLLocationCoordinate2D=dd}32q48
@48@0:8@16@24{CLLocationCoordinate2D=dd}32
v32@0:8Q16Q24
{CLLocationCoordinate2D=dd}16@0:8
v32@0:8{CLLocationCoordinate2D=dd}16
@"NSUUID"
{CLLocationCoordinate2D="latitude"d"longitude"d}
@32@0:8@16q24
