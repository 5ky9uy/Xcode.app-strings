[%@] Activity Sharing profile extension instantiated.
Responding to earned instances for incremental interval: %@
Responding to earned instances for historical interval: %@
Collecting completed competitions for %{public}@ - %@
Found %lu completed competitions
Building earned instance for competition participation: %{public}@, %lu - %lu
Competition is at index %lu
Building earned instance for competition victory
Error instantiating database competition lists during database retrieval: %{public}@
Error removing competitions: %{public}@
Error inserting competition lists %{public}@: %{public}@
Error inserting journaled competition lists %@: %{public}@
Error applying journal deletes for all competition lists %@: %{public}@
Bulletin expiration date is %{public}@
No expiration date for bulletin
FakingManager saving activity records
FakingManager saving competition scores
Fake competitions=%@
Faking Move Minutes
Faking Calories
Error parsing message queue with name %{public}@, serialized data is not a dictionary (%{public}@)
RelationshipManager setting activity data visibility to %{BOOL}d for friend with UUID: %{public}@
Could not find participant with email %@ on share.
Failed to fetch share participant with email %@.
Failed to fetch activity data share.
RelationshipManager not changing activity data visibility - already matches current visibility
RelationshipManager setting muting to %{BOOL}d for friend with UUID: %{public}@
RelationshipManager could not change muting - contact not found.
RelationshipManager not changing muting - already matches current state
RelationshipManager cannot insert competition for friendship that is not active
RelationshipManager checking for contacts that require a supported feature update
Relationship requires supported feature update: %{public}@ - %@
RelationshipManager serializing relationship records and saving to CloudKit
RelationshipManager error processing saved relationship, couldn't find contact with relationship UUID: %{public}@
RelationshipManager didn't find any relationships requiring a supported feature update
RelationshipManager starting invite flow for person with destination: %@, serviceIdentifier: %{public}@
RelationshipManager error: max number of friends reached
RelationshipManager looking up placeholder contact
RelationshipManager didn't find existing contact, creating new placeholder
RelationshipManager fetch complete, looking up contact again
RelationshipManager didn't find existing contact, copying the placeholder to save so the UUIDs match
RelationshipManager contact already exists, just update it with the invite data
RelationshipManager friendship already active, but activity data is not visible
RelationshipManager not sending invite to avoid triggering an unhide on the remote device
RelationshipManager sending invite with token %@ to destination: %@
RelationshipManager preparing to accept invite from friend with UUID: %{public}@
RelationshipManager couldn't find a contact with the given UUID
RelationshipManager error sending invite response: %{public}@
RelationshipManager sending invite response %ld with token %@ to %@
RelationshipManager attepting to withdraw invite request to friend with UUID: %{public}@
RelationshipManager couldn't find a person with the given UUID
RelationshipManager detected friendship is already active
RelationshipManager didn't find a pending outgoing request to this contact
RelationshipManager attempting to ignore incoming invite from friend with UUID: %{public}@
RelationshipManager not able to ignore invite, relationship doesn't have pending incoming request, status: %@
RelationshipManager received invite request from %@, cloudKitAddress=%@, callerID=%@
RelationshipManager invite info: handshakeToken=%@, buildNumber=%{public}@, version=%d
RelationshipManager not processing invite because activity app is not installed, persisting for later delivery
Could not determine gateway status: %{public}@, persisting message
RelationshipManager not processing invite because contact is a filtered contact.
RelationshipManager received an incompatible invite (current version = %d, inviter version = %d)
RelationshipManager already notified for invite request at %@; not notifying again
RelationshipManager not notifying via BB and not auto-accepting
RelationshipManager friendship already active for this person, automatically accepting
RelationshipManager notifying via user notifications
RelationshipManager device is a watch, processing invite block with delay
RelationshipManager received invite response from %@, cloudKitAddress=%@
RelationshipManager response info: handshakeToken=%@, buildNumber=%{public}@, version=%d
RelationshipManager not processing response because activity app is not installed, persisting for later delivery
RelationshipManager couldn't find previously invited friend with token: %@
RelationshipManager received an incompatible response (current version = %d, invitee version = %d)
RelationshipManager rejecting invite response because relationship doesn't have a pending outgoing invite request, current state is: %{public}@
RelationshipManager not inserting a placeholder began - remote side is already active
RelationshipManager accept received and processed, notify via BB
RelationshipManager sending finalize handshake with token: %@
RelationshipManager received final handshake, token: %@
RelationshipManager not finalizing, relationship doesn't has incoming invite request: %@
RelationshipManager remote relationship is already active, remove placeholder
RelationshipManager received withdraw invite, token: %@, person: %@
RelationshipManager didn't find a pending invite to withdraw - this invite may already have been acted upon
RelationshipManager current state is %{public}@
RelationshipManager processing withdraw will continue anyway
RelationshipManager received new relationship records from CloudKit, more coming: %{BOOL}d
RelationshipManager received multiple local relationships on a single record ID: %@, relationship: %@
RelationshipManager received new remote relationship records from CloudKit
RelationshipManager received multiple remote relationship records for a single share from CloudKitManager, taking only the newest
RelationshipManager finished processing remote relationships
RelationshipManager received BB response: %ld in ASActivitySharingManager
Relationship manager couldn't find person with UUID: %{public}@
RelationshipManager not processing persisted messages, activity app is not installed
RelationshipManager processing persisted invitation messages if available
RelationshipManager could not determine status for processing persisted invitations: %{public}@
RelationshipManager not processing persisted invitation messages at this time
RelationshipManager ending friendship, checking for existing relationship began placeholders
RelationshipManager ending friendship with friend with UUID: %{public}@
RelationshipManager found friendship is not currently active. Still attempting to remove person from shares, just to be safe
RelationshipManager removing contact with cloudKitAddress %@ from activity data share
RelationshipManager error removing friend from activity data share (could not remove particpant): %{public}@
RelationshipManager error removing friend from activity data share (could not fetch share): %{public}@
RelationshipManager contact does not have a cloudKitAddress, not attempting to remove from share
RelationshipManager coudn't find match, creating new contact
RelationshipManager found a match, but the cloudKit address was different
RelationshipManager creating a new contact for this unique cloudKit address
RelationshipManager creating new outgoing handshake token: %@
RelationshipManager outgoing handshake token already exists for this person: %@
RelationshipManager inserting placeholder contact
Removing placeholder relationship began for friend: %{public}@
No existing relationship began placeholder
Friendship began success, executing blocks waiting on success
RelationshipManager found existing placeholder began token for this contact: %@
RelationshipManager removing placeholder contact to avoid orphaning the token
RelationshipManager friendship is still finalizing, holding this action until complete
RelationshipManager fetching activity data share
RelationshipManager error fetching activity data share: %{public}@
RelationshipManager successfully fetched activity data share
RelationshipManager error fetching relationship share: %{public}@
RelationshipManager successfully fetched relationship share
RelationshipManager failed to fetch relationship share because relationship had no archived share ID
RelationshipManager error de-serializing relationships: %@
RelationshipManager successfully saved relationship record in CloudKit
RelationshipManager error fetching/creating activity data share when saving new relationship: %{public}@
RelationshipManager error creating or fetching relationship share: %{public}@
RelationshipManager successfully saved relationship record in CloudKit for UUID %{public}@
RelationshipManager creating new relationship share
RelationshipManager error saving relationship record in CloudKit: %{public}@
RelationshipManager saving relationship that requires a supported feature update, updating now
RelationshipManager adding person with cloudKitAddress %@ to my shares
RelationshipManager error adding person to shares: %{public}@
RelationshipManager succesfully added person to shares
RelationshipManager accepting shares: %@
RelationshipManager error accepting invitee shares %@, error: %{public}@
RelationshipManager success accepting shares
RelationshipManager reconciling new cloudKit relationships
RelationshipManager current fetch is full, overwrite instead of merging
RelationshipManager found %lu existing relationships, merging
RelationshipManager first merging on share ID
RelationshipManager found a conflict (%@/%@ vs %@/%@)
RelationshipManager determined the cloudKit relationship is newer, taking it
RelationshipManager determined cloudKit relationship is older, keeping the existing relationship
RelationshipManager found a new relationship that doesn't exist locally (%@/%@)
RelationshipManager checking for duplicate cloudKit addresses
RelationshipManager found relationship that didn't have a cloudKit address, not checking for duplicates: %@
RelationshipManager found a conflicting relationship - different share ID with the same cloudKit address
RelationshipManager relationship %@
RelationshipManager conflicts with %@
RelationshipManger resolved to the newest relationship: %@
RelationshipManager preparing to reconcile with address book (%lu relationships)
RelationshipManager deleting existing friends list
RelationshipManager starting reconcile pass: %{public}@ (%lu remaining relationships)
RelationshipManager create person without address book match is %d for this pass
RelationshipManager looking for contact with destinations: %@
RelationshipManager contact already has a relationship (possibly from a previous pass): %@
RelationshipManager not matching to avoid clobbering
RelationshipManager contact in address book: %d
RelationshipManager found a match for relationship: %@
RelationshipManager matching contact: %{public}@ - %@
RelationshipManager had previous existing contact for the relationship, putting back the original remote relationship
RelationshipManager saving match to %@
RelationshipManager didn't find a match
RelationshipManager reconcile didn't receive destinations, skipping this pass (%{public}@)
RelationshipManager reconcile complete, result:
%@ -> %@
RelationshipManager processing remote relationships
RelationshipManager unable to find contact with remote relationship zone ID: %@
RelationshipManager orphaned remote relationship: %@
RelationshipManager evaluating new remote relationship for contact: %{public}@ - %@
RelationshipManager new remote relationship: %@
RelationshipManager previous remote relationship: %@
RelationshipManager does not need to process remote relationship events, this is the first CK fetch
RelationshipManager local friendship is active, comparing final remote state with previous remote relationship
RelationshipManager checking if another invite flow is in progress: %d
RelationshipManager determined this relationship was ended remotely
RelationshipManager determined this relationship began remotely
RelationshipManager traversing new events at anchor %lu
RelationshipManager detected a friendship that was ended remotely, local activity data should be deleted
RelationshipManager waiting for asynchronous remote processing
RelationshipManager found a relationship that was missing a record ID: %@
RelationshipManager observed contact store change
RelationshipManager reconcile for new contacts already scheduled
RelationshipManager scheduling new reconcile for contact store change
RelationshipManager firing new reconcile for contact store change
RelationshipManager message didn't include an activity snapshot preview, not processing
RelationshipManager message included a snapshot, processing
RelationshipManager generated activity data preview: %@/%@ calories, %@/%@ moveMinutes, %@ workouts, %@ achievements
RelationshipManager received notification action response: %ld in ASActivitySharingManager
RelationshipManager wasPreviouslyActive=%d, isCurrentlyActive=%d
Showing gizmo OS too low notification
CompetitionsTemplateSource collecting templates
Adding participation template
Evaluting friends for victory templates
For friend %@ isCompetitionActive: %d hasCompetitionWonByMe %d
Adding victory template for friend: %{public}@ - %@
Returning templates: %@
Notifying delegate that we updated assets templates: %@
Responding to resource bundle for template: %@
Competition template source couldn't find friend: %{public}@
Competition template source building unused template names for friend: %{public}@ - %@
No wins against this friend and competition isn't active, victory template is now unused
Couldn't find a competition to determine badge style for friend: %{public}@ - %@
FriendUUID missing from template: %@
Couldn't find friend with UUID: %{public}@
Activity Sharing plugin loaded.
Not creating profile extension, Health Daemon does not support Activity Sharing.
Not creating profile extension for non-primary profile.
Health Daemon supports Activity Sharing, creating profile extension.
Running Activity Sharing migration from %ld, creating tables
Running Activity Sharing migration from %ld, dropping competitions table and re-creating with badge styles
Running Activity Sharing migration from %ld, dropping competition lists table and re-creating with owner
Running Activity Sharing migration from %ld, migrating competitions table to fixup unique constraint
Running Activity Sharing migration from %ld, migrating competitions table to add score cap
Adding notification request with identifier %@
Activity sharing notifications disabled in settings
%{public}@ error requesting notification request %{public}@
CompanionBulletinPostingManager enqueuing bulletins %@
Withdrawing bulletin with identifier %@
CompanionBulletinPostingManager received notification response: %{public}@
CompanionBulletinPostingManager failed to decode reply for notification response: %{public}@
CompanionBulletinPostingManager failed to decode friend list data for notification response: %{public}@
CompanionBulletinPostingManager failed to decode friend for notification response: %{public}@
CompanionBulletinPostingManager found unexpected ASBulletinType for notification response: %{public}@
CompanionBulletinPostingManager failed to create message payload for notification response: %{public}@
CompanionBulletinPostingManager sent message payload for notification response: %{public}@
CompanionBulletinPostingManager unable to decode achievement data %@
Error creating archiver for summary data: %@
Checking for change token expiration, timestamp=%f, now=%f
Persisting change tokens to disk
Found a change token with an unexpected type: %@
ActivityDataNotificationManager processing %lu new activity snapshots.
ActivityDataNotificationManager processing %lu new workouts.
ActivityDataNotificationManager processing %lu new achievements.
ActivityDataNotificationManager processing %lu new notification events.
ActivityDataNotificationManager received new data from CloudKit, showing notifications if required.
ActivityDataNotificationManager didn't receive any new data from CloudKit, not showing notifications
ActivityDataNotificationManager: samples removed, checking if any are workouts
ActivityDataNotificationManager: at least one sample is a workout, requesting push
Error: %{public}@ retrieving workout completion data from key value domain for friendUUID: %{public}@.
Error: %{public}@ saving workout completion data into key value domain. %{public}@: %{public}@
Error: %{public}@ retrieving achievement earned data from key value domain for friendUUID: %{public}@.
Achievement earned date is later than current time, not updating defaults
Error: %{public}@ saving achievement earned data into key value domain. %{public}@: %{public}@
Error: %{public}@ retrieving monthly achievement earned data from key value domain for friendUUID: %{public}@.
Error: %{public}@ saving monthly achievement earned data into key value domain. %{public}@: %{public}@
Error: %{public}@ retrieving goal completion data from key value domain for friendUUID: %{public}@.
Error: %{public}@ saving goal completion data into key value domain. %{public}@: %{public}@
Error: %{public}@ retrieving workout anchor data from key value domain. anchor: %{public}@
Error:%{public}@ saving workout anchor data into key value domain. anchor: %{public}@
Error: %{public}@ retrieving achievement anchor data from key value domain. anchor: %{public}@
Error: %{public}@ saving achievement anchor data into key value domain. anchor: %{public}@
Error: %{public}@ retrieving goal completion anchor data from key value domain. anchor: %{public}@
Error: %{public}@ saving goal completion anchor data into key value domain. anchor: %{public}@
ActivityDataNotificationManager: Showing friend notifications
Selected notifications:
Workouts: %lu
Achievements: %lu
Goal completions: %lu
Filtered notifications, posting
ActivityDataNotificationManager: Not showing notifications since pref is disabled.
Selecting workouts for notifications
Current workout anchor is %{public}@
Error: Failed to find friend with UUID %{public}@ for completed workout
Evaluating workout for friend with UUID %{public}@, end date (on remote device) is %{public}@
Last known workout completion date: %@
Last known workout is newer, skip this one
Error: %{public}@ fetching workouts
Updating most recent workout completion date: %@, for friend: %@
WorkoutAnchor set to: %{public}@
Selecting achievements for notifications
Current achievement anchor is %{public}@
Error: Failed to find friend with UUID %{public}@ for achievement
Evaluating new achievement for friend %{public}@, completed date %{public}@, monthly %{public}@
Last known monthly achievement completion date: %@
Last known achievement completion date: %@
Last known achievement is newer, skip this one
Error fetching ephemeral Achievement for template %@: %@
Unable to find achievement matching achievement: %@
Error: %{public}@ fetching achievements
Updating most recent achievement earned date: %@, for friend: %@
Updating most recent monthly achievement earned date: %@, for friend: %@
AchievementAnchor set to: %{public}@
Selecting goal completion snapshot notifications
Current goal completion anchor is %{public}@
Error: Failed to find friend with UUID %{public}@ for goal completion
Evaluating new snapshot with friend UUID %{public}@, index: %lld, date: %{public}@
Snapshot doesn't represent goal completion, skipping
Last known goal completion index: %@
Last known snapshot is newer, skip this one
Error: %{public}@ fetching snapshots
Updating most recent goal completion snapshot index: %@, for friend: %@
GoalCompletionAnchor set to: %{public}@
ActivityDataNotificationManager: at least one workout is in today or yesterday, request data push
Notification step trying to transform objects with no multi-record or single-record transformation blocks set.
Failed to create container with exception %{public}@
Failed to get CloudKit container with identifier %{public}@
Error initializing hasCompletedFirstFetch from key value domain: %{public}@
hasCompletedFirstFetch initialized to: %d
Cancelling all executing fetches
Fetching changes in private database failed with error: %{public}@
Fetched changes in private database successfully.
Fetching changes in shared database failed with error: %{public}@
Fetched changes in shared database successfully.
Change token cache is expired, doing full fetch
Change token cache is still valid, copying
Fetched changes: %ld private, %ld shared changed records.
Not handling changes because we found zero changed records.
A subscription notification came in during the last fetch, running another fetch now.
Fetched changes successfully, calling completions.
Failed to fetch changes with error %{public}@
Lower priority fetches are executing, cancelling all fetches before running higher priority fetch; current priority: %lu, requested priority: %lu
Running fetch with priority %lu now.
A same or higher priority fetch is executing, adding completion to pending completion block list; current priority: %lu, requested priority: %lu
Fetch requested if no fetch performed within last %lu seconds, last fetch was %lf seconds ago
Fetch requested if no fetch performed within last %lu seconds, no successful fetch performed yet
Last fetch is too recent, not fetching.
Error updating key value domain with completed first fetch: %{public}@
Updated has completed first fetch: %d
Cancelling all fetches and expiring change token immediately
Creating subscription to records with type %{public}@ in database %{public}@
Saved %lu subscriptions into database %{public}@.
Failed to save subscriptions into database %{public}@ with error: %{public}@
Received CloudKit push notification for subscription with id: %{public}@
CloudKit push received during coalescing period, ignoring.
Push notification coalescing interval starting, will take %lf seconds.
Push notification coalescing interval finished, fetching changes.
Push notification received during a fetch, fetching again after current fetch completes.
Push notification is low-priority, not fetching.
Error getting server APS preferred push environment: %{public}@
Timeout getting server preferred APS push environment
Using APS push environment: %{public}@
Received public token "%@" on connection %p
Received per-topic push token "%@" for topic "%{public}@" identifier "%@" on connection %p
APS push recieved: %@ %@
Recieved local notification of CloudKit account status changes; fetching 
New CloudKit account is now active, performing setup tasks.
Creating subscriptions.
Fetching changes.
Setup tasks complete, success: %{BOOL}d, error: %@
New account tasks are complete, not scheduling a retry.
New account tasks failed, scheduling a retry for %lf seconds from now
Error setting new CloudKit address in key value domain: %{public}@
Set %@ as CloudKit address in key value domain.
Error reading previous CloudKit address from key value domain: %{public}@
CloudKit address (%@) does not match previous CloudKit address (%@)
Error getting CloudKit account status: %{public}@
Fetched CloudKit account status: "%{public}@"
CloudKit account status changed, handling
Previous account status: "%{public}@"
isSignedOut=%d
isSignedInAfterBeingSignedOut=%d
isSignedInToNewAccount=%d
shouldClearStateAndEraseFriendList=%d
shouldCreateSubscriptions=%d
shouldPerformFetch=%d
Posted notification of CloudKit account status change
Apple ID is a managed account, reverting to unsigned-in behavior
Fetching cloudKit address
Error fetching CloudKit address: %{public}@
Fetched CloudKit address: %@
CloudKitManager added observer not yet ready to process changes: %@
CloudKitManager removing observer not yet ready to process changes: %@
CloudKitManager observer did become ready to process changes: %@
Notifying observers of changes with types: %{public}@
Evaluating shouldNotifyObserverBlock for observer of class %@
Notifying observer of class %@
Finished notifying observer of class %@
CloudKit Manager beginning update transaction.
CloudKit Manager status changed. Notifying observers
CloudKit Manager ending update transaction.
Notifying observers of [non-remote] relationship changes
Notified observers of [non-remote] relationship changes.
Notifying observers of [non-remote] activity data changes
Notified observers of [non-remote] activity data changes.
Notifying observers of [remote] relationship changes
Notified observers of [remote] relationship changes.
Notifying observers of activity data changes
Notified observers of activity data changes.
Notifying observers of notification event changes
Notified observers of notification event changes.
Notifying observers of [non-remote] competition changes
Notified observers of [non-remote] competition changes
Notifying observers of [remote] competition changes
Notified observers of [remote] competition changes
Creating workout bulletin for friend: %{public}@ - %@ with workout %@
Creating achievement bulletin for friend: %{public}@ - %@ with achievement %@
Creating goal completion bulletin for friend: %{public}@ - %@ with snapshot %@
Creating competition bulletin for friend: %{public}@ - %@, title: %@, competition: %@
[%{public}@] Transaction created with identifier: %{public}@
[%{public}@] Transaction starting, identifier: %{public}@
[%{public}@] Transaction lock operation timed out! identifier: %{public}@
[%{public}@] Transaction finished, identifier: %{public}@
AchievementManager requesting template update
Error getting templates from source: %@
Error removing templates during update: %@
Successfully removed %lu templates during update
Error adding templates during update: %@
Successfully added %lu templates during update
AchievementManager not requesting earned instance update - this device is not a watch
AchievementManager requesting earned instance update
Error adding earned instances: %@
Successfully added %lu earned instances
AchievementManager removing all unused templates
Achievement manager found friend with competition history but no wins: %@
Error removing unused template names: %@
Successfully removed %lu unused template names
AchievementManager removing unused templates for friend: %{public}@
Error removing unused templates for friend: %@
Successfully removed %lu unused template for friend
AchievementManager removing all competition templates
AchievementManager removed templates with result: %{BOOL}d, %{public}@
AchievementManager found %lu templates to remove
AchievementManager registering with the achievements subsystem
Competition award refresh interval reached, requesting awarding update
Competition award refresh interval not reached yet, not requesting awarding update
AchievementManager looking up templates for names: %@
AchievementManager removed unused templates with result: %{BOOL}d, %{public}@
IDSMessageCenter [%{public}@] processing retry messages
IDSMessageCenter [%{public}@] processing persisted messages
IDSMessageCenter message handled successfully
IDSMessageCenter persisting message for later use
IDSMessageCenter message needs retry, current count is %ld
IDSMessageCenter message has been retried too many times, discarding
IDSMessageCenter ignoring protobuf with unknown type %{public}@, guid: %{public}@, from: %@
IDSMessageCenter received protobuf of type %{public}@, guid: %{public}@, from: %@
IDSMessageCenter sent protobuf with guid %{public}@ to server with success: %d error: %{public}@
IDSMessageCenter successfully delivered protobuf with guid %{public}@ to remote device
IDSMessageCenter success sending protobuf with type %{public}@, guid %{public}@
IDSMessageCenter error sending protobuf with type %{public}@, guid %{public}@, error: %{public}@
IDSMessageCenter requesting send for protobuf of type %{public}@ to destinations: %@
IDSMessageCenter successfully requested send for protobuf of type %{public}@, guid: %{public}@
IDSMessageCenter error requesting send for protobuf of type %{public}@, error: %{public}@
IDSMessageCenter redelivering protobuf of type %{public}@, guid: %{public}@, from: %@
Updating local friend list from %lu contacts
Updating list for contact %{public}@ (%@)
Found existing friend %{public}@ - %@, updating contact reference
Protected data is not available, not getting data for contact %{public}@ (%@)
Friend list loaded %{public}@ - %@
Finished updating local friend list from contacts
Initial friend list update and competition data is available, notifying observers
Updated friend %{public}@ (%@) with new snapshot with index %lld
Failed to update friend list with snapshot with friend UUID %{public}@ because no friend was found with matching UUID
Updated friend %{public}@ (%@) with new achievement with template unique name %@
Failed to update friend list with achievement with friend UUID %{public}@ because no friend was found with matching UUID
Updated friend %{public}@ (%@) with new workout with UUID %{public}@
Failed to update friend list with workout with friend UUID %{public}@ because no friend was found with matching UUID
Updating friend list with %lu deleted workout events
Unable to find friend with UUID: %{public}@, skipping deleted workout with UUID: %{public}@
Removing deleted workout [%{public}@] for friend: %@
Successfully found deleted workout on snapshotIndex: %@
Not counting friend toward hasFriendsToShareWith because data is currently hidden: %{public}@ - %@
Checking current friend list for friends to share with: %{BOOL}d, checking defaults: %{public}@
Device is a watch, falling back to phone value if no friends are active currently
Current value is different than defaults
Current value is false, but defaults value was true and the contact set is empty - maintaining defaults value until contacts exist
Updating and syncing default for friends to share with, setting to: %{BOOL}d
Checked for friends to share with, found friends: %{BOOL}d
Clearing entire friend list!
Notifying observers of friend list changes %lu friends.
Has Friends default change notification received
Friends List did update: %lu friends
FriendListManager updating with initial competitions
Friend list not yet constructed, not updating
FriendListManager updating with new competitions
FriendListManager couldn't find friend with UUID: %{public}@
Error removing competition %{public}@/%ld: %{public}@
Error instantiating database competitions during database retrieval: %{public}@
Error inserting competitions %{public}@: %{public}@
Error inserting journaled competitions %@: %{public}@
Error applying journal deletes for competitions %@: %{public}@
Error applying journal delete for all competitions %@: %{public}@
CompetitionManager attempting to load cached competitions
CompetitionManager deleting all cached competitions
CompetitionManager attempting to send competition request to friend: %{public}@
CompetitionManager fetch complete, proceeding with send competition request
Unable to unhide from friend:%@
CompetitionManager checking friend eligibility
CompetitionManager relationship has completed competition, archiving and copying previous badge style
CompetitionManager relationship has archived competitions, copying previous badge style
CompetitionManager relationship doesn't have a previous competition, generating preferred badge styles
CompetitionManager building competition for friend: %{public}@ - %@
CompetitionManager built new competition: %@
CompetitionManager attempting to accept competition request to friend: %{public}@
CompetitionManager fetch complete, proceeding with accept
CompetitionManager unhiding from friend if hidden
CompetitionManager found friend with incoming request: %@
CompetitionManager couldn't find remote competition for friend
CompetitionManager UUID mismatch between local and remote competition: %@ vs %@
CompetitionManager updating competition start date before accepting
CompetitionManager attempting to ignore competition request from friend: %{public}@
CompetitionManager unable to ignore competition request, no incoming request found, relationship=%@
CompetitionManager preparing for new records
CompetitionManager existing friends awaiting my response: %@
CompetitionManager existing friends that accepted my request: %@
CompetitionManager existing friends with completed competitions: %@
CompetitionManager received new non-remote competitions
CompetitionManager existingCurrentCompetition=%@
CompetitionManager updatedCurrentCompetition=%@
CompetitionManager local view of competition has a higher score, keeping the current local value (%lu vs %lu)
CompetitionManager local view of competition has a higher opponent score, keeping the current local value (%lu vs %lu)
CompetitionManager found competition list missing a friendUUID: %@
CompetitionManager received new remote competitions
CompetitionManager couldn't find a matching friend for this remote competition list: %@
CompetitionManager CK fetch complete
CompetitionManager CK fetch is the first on this device, avoid notifying about already-processed changes
CompetitionManager checking each friend for updated competition state
CompetitionManager [%@] is awaiting response from me, alreadyProcessed=%d alreadyIgnored=%d alreadyNotified=%d
No paired watch supports competitions, showing upgrade notification
CompetitionManager [%@] accepted my request, alreadyProcessed=%d alreadyNotified=%d
CompetitionManager accepted [%@] request, requesting template update
CompetitionManager [%@] competition complete, alreadyNotified=%d
CompetitionManager responding to periodic update request for records
Competition has ended, not including in records to push: %{public}@
CompetitionManager found %lu competition records to save
CompetitionManager observed protected data availability: %{BOOL}d
CompetitionManager found protected data available, setting current score cap celebration anchor to %@
CompetitionManager not handling competition request, device does not participate in competition management
CompetitionManager handling competition request from friend: %{public}@ - %@
CompetitionManager already sent a pending competition request to this friend
CompetitionManager this is likely due to simultaneous requests from each side
CompetitionManager attempting to auto-accept this request
CompetitionManager friend is not in awaiting response state
CompetitionManager probably from another device saving to CK sooner - just notify
CompetitionManager incoming request failed validation, aborting
CompetitionManager couldn't find remote competition list for friend
CompetitionManager found remote competition: %@
CompetitionManager building local view of competition
Successfully handled incoming competition request, notifying via BB
CompetitionManager not handling accepted competition, device does not participate in competition management
CompetitionManager handling accepted competition from friend: %{public}@ - %@
CompetitionManager couldn't find a local competition for accepted competition
CompetitionManager local view has already acknowledged remote acceptance - just notify
CompetitionManager found an accepted request but no corresponding competition
CompetitionManager updating local view of competition
Successfully acknowledged accepted competition request, notifying via BB
CompetitionManager saving competition lists in CloudKit, current: %@ archived: %@
CompetitionManager current competition list doesn't exist yet, creating
CompetitionManager archived competition list doesn't exist yet, creating
CompetitionManager not updating scores, protected data not yet fetched
CompetitionManager updating scores for competitions with %lu friends, summaryIndex=%lld
Current competition for friend %@ is %@
Competition is active with friend, but couldn't find a current competition: %{public}@ - %@
CompetitionManager updating competition score for friend with UUID:%@ with current competition: %@
CompetitionManager calculated new scores: %@(=%lu)
CompetitionManager no change in scores, not persisting or notifying
CompetitionManager competition is ready to push final cache index, pushing immediately
CompetitionManager is evaluating whether score cap has been hit with friend with UUID: %@, competition: %@
CompetitionManager current score cap celebration anchor is %@
CompetitionManager score cap celebration has already been alerted about today
CompetitionManager today score of %lu is greater than score cap of %lu, posting score cap celebration
CompetitionManager not posting score cap celebration, couldn't find any friends with active competitions
CompetitionManager handling %ld competition list records
CompetitionManager local view of competition %@ has a more up-to-date opponent score, keeping it
CompetitionManager saving remote competition list: %@
CompetitionManager updating local competition to reflect remote opponent score
CompetitionManager competition UUIDs didn't match, not updating score: local=%@ remote=%@
Not posting competition request bulletin for friend UUID %@, previously posted
CompetitionManager posting competition request bulletin for friend: %{public}@ - %@
Not posting bulletin competition accepted bulletin for friend UUID %@, previously posted
CompetitionManager posting competition accepted bulletin for friend: %{public}@ - %@
Not posting bulletin competition completed bulletin for friend UUID %@, previously posted
CompetitionManager posting competition ended with friend: %{public}@ - %@
CompetitionManager posting score cap celebration with friends %@
CompetitionManager couldn't find a remote competition when auto-accepting
CompetitionManager couldn't find a local competition when auto-accepting
CompetitionManager comparing UUIDs to decide if we should accept
CompetitionManager this device should accept, rebuilding local competition in accepting role
CompetitionManager this device should *not* accept
CompetitionManager tried to check if competition is ready to complete, but couldn't find both a local and remote view of the competition: %{public}@ - %@, localCompetition=%@, remoteCompetition=%@
CompetitionManager competition with friend is ready to complete: %{public}@ - %@
CompetitionManager pushing competition one last time with updated opponent score
CompetitionManager failed to complete competition: %@
CompetitionManager successfully completed competition
CompetitionManager remote competition is also complete, we can notify
CompetitionManager building new archived competition list
CompetitionManager didn't find an existing competition to archive
CompetitionManager didn't find an existing archived competition list, creating one for friend: %{public}@
CompetitionManager built new archived competition list: %@
CompetitionManager didn't find an existing current competition list, creating one for friend: %{public}@
CompetitionManager not loading cached competitions, protected data is not available
Error: %{public}@ retrieving score cap celebration anchor data from key value domain. anchor: %{public}@
Error:%{public}@ saving score cap celebration anchor data into key value domain. anchor: %@
CompetitionManager updated score cap celebration anchor is %@
Completing competition with friend: %{public}@
Unable to complete competition - not currently active
Unable to complete competition - no competition found
CompetitionManager updating competition %@ with scores: %@
CompetitionManager my activity data is hidden, unhiding first
CompetitionManager my activity data is not hidden, proceeding immediately
Received NR pairing status changed notification
Running friend manager setup
This device is a watch or standalone phone; setting up activity data notification manager.
Data protected by first unlock available
ActivitySharingManager setup complete
ActivitySharingManager final setup skipped
Skipping friend manager setup
Attempting to start submanagers
Not starting submanagers, %{public}@ is not installed
Not starting submanagers, fitness apps are restricted
Not starting submanagers, processing has already started
Attempting to stop submanagers
Not stopping submanagers, %{public}@ is installed and fitness apps are not restricted
Not stopping submanagers, processing has not been started
Proceeding with submanager shutdown
Notifying object of class %{public}@ of Activity Sharing Manager ready.
ASActivitySharingManager method called when submanagers will not be initialized, waiting forever is expected.
NanoSyncManager updated status, completing setup if needed
ActivitySharingManager applications install state changed: %{public}@
ActivitySharingManager fitness apps restriction state changed: %ld
ActivitySharingManager activating after app install/restriction state changed
ActivitySharingManager data protected by first unlock not available, not responding to installation
ActivitySharingManager deactivating after app install/restriction state changed
ASActivitySharingManager not found
Removing legacy user defaults setup key
Syncing new user defaults setup key:  %{BOOL}d
Achievements updated, checking for new today achievements to push
Alerts are currently suppressed, not checking for achievements to push
Recieved %lu new notification events
Processing %lu new notification events
Received events for %lu deleted workout(s)
There are %lu new deleted workouts, handling.
Finished handling deleted workouts, calling changesProcessedHandler
No new deleted workouts, calling changesProcessedHandler
More notification events coming, calling changesProcessedHandler
Processing %lu snapshots of self.
Incoming snapshots for self are: %@
Final snapshot dict for self: %@
Error getting source UUID for active device: %{public}@
Could not find paired active device UUID.
Multiple devices sharing status requested for snapshot index: %{public}@, active device UUID: %{public}@
Are multiple devices sharing: %{BOOL}d
currentAchievements: Error getting all achievements: %@
Saved activity sharing data to database: %lu samples.
Error %{public}@ saving activity sharing data
Provenance is nil when trying to save fetched friend data.
No samples to save.
Deleting all friend data!
Failed to delete all friend data with error: %{public}@
Deleted friend data successfully, %lu samples.
Failed to remove ASAchievementEntity samples for friend UUUD: %{public}@
Removed %ld ASAchievementEntity samples for friend UUUD: %{public}@
Failed to remove ASActivitySnapshotEntity samples for friend UUUD: %{public}@
Removed %ld ASActivitySnapshotEntity samples for friend UUUD: %{public}@
Failed to remove ASWorkoutEntity samples for friend UUUD: %{public}@
Removed %ld ASWorkoutEntity samples for friend UUUD: %{public}@
Failed to get activity snapshots from entity with error: %{public}@
Failed to get friend achievements from entity with error: %{public}@
Failed to get friend workouts from entity with error: %{public}@
Not fetching friend data, protected data is unavailable
Error fetching snapshots from db: %{public}@
Error fetching workouts from db: %{public}@
Error fetching achievements from db: %{public}@
Protected data availability changed and we haven't fetched friends' data yet
Recieved a sample with invalid type: %{public}@
Friend samples were added to database: %lu snapshots, %lu workouts, %lu achievements.
New today activity summary available, but doesn't have a move goal yet - copying existing known goals
Today summary: %@ represents a goal completion, requesting immediate update
Failed to create Apple Watch samples predicate with error: %{public}@
Error: %{public}@ fetching workouts with predicate: %{public}@, anchor: %{public}@
Looking for achievements for snapshot index: %lld, date: %@
Error getting local source UUID to attach to snapshots: %{public}@
Alerts are currently suppressed, not pushing any achievements
Today snapshot is empty, not pushing any achievements
Getting achievements to push for today from the new system
Error getting achievements to push for today: %@
Got %lu achievements from awardsClient
Found %lu achievements for today
New today anchor token is: %@
Looking for today workouts to push with anchor %@
Found %lu workouts
Looking for yesterday workouts to push with anchor %@
Unexpected request to push activity summaries while a push is in progress
Creating records for %lu snapshots, %lu achievements, %lu workouts, %lu notification events.
Updating share: deleting %lu workout records
Looking for deleted workouts with anchor: %{public}@
Found deleted workout, id=%lld, uuid=%{public}@
Finished looking for deleted workouts
Error enumerating deleted workouts: %@
Received an event for deleted workout: %@
Error deleting workouts: %{public}@
Successfully deleted %lu workout(s)
Error reading %{public}@ from key value domain: %{public}@
Loaded %{public}@: %{public}@
Loaded %{public}@: [%{public}@]
Error updating %{public}@ in key value domain: %{public}@
Updated %{public}@ to %{public}@
Updated %{public}@ to [%{public}@]
Synchronously fetching alert suppression state
Timeout fetching alert suppression status, assuming alerts are not suppressed
New achievement not yet pushed: %@
ContactsManager loading cached contacts
ContactsManager has some contacts that already exist in memory! Replacing with contacts from disk cache
ContactsManager deleting legacy contacts
ContactsManager initialized cached contact: %{public}@ - %@
ContactsManager loaded %lu cached contacts
ContactsManager creating new contact with destinations: %@
ContactsManager resulting contact: %@
ContactsManager error saving contact, no UUID: %@
ContactsManager saving contact: %{public}@ - %@
ContactsManager error saving placeholder contact, no UUID: %@
ContactsManager saving placeholder contact (token=%{public}@): %{public}@ - %@
ContactsManager removing placeholder contact with token %{public}@
ContactsManager couldn't find contact with token %{public}@
ContactsManager found placeholder contact to remove %{public}@ - %@
ContactsManager removing all placeholder contacts (%lu placeholder contacts)
ContactsManager error setting contact, no UUID: %@
ContactsManager saving %lu contacts
ContactsManager beginning transaction
ContactsManager ending transaction
ContactsManager error, transaction timed out
ContactsManager persisting %lu contacts to disk
ContactsManager notifying %lu observer(s) of contacts update
ContactsManager error looking for contacts matching predicate: %@
ContactsManager multiple contacts matched destination: %@
ASFriendListQueryServer: Failed to find ASActivitySharingManagerProvider.
ASFriendListQueryServer: Starting.
ASFriendListQueryServer: Waiting for processing to start for add
ASFriendListQueryServer: Stopping.
ASFriendListQueryServer: Waiting for processing to start for remove
ASFriendListQueryServer calling deliverFriendList with %lu friends
ASFriendListQueryServer: Manager processing started
ASFriendListQueryServer: Activity sharing manager posted it started, but is not reporting it's started
ASFriendListQueryServer: Activity sharing manager started, but no queries enabled
ASFriendListQueryServer: Adding friend list observer after activity sharing manager started
ASFriendListQueryServer: Removing friend list observer after activity sharing manager started
Status for currentlyPairedWatchMeetsMinimumVersion: %{BOOL}d
Gateway status, iCloud signed in: %{BOOL}d, need to upgrade: %{BOOL}d
Checking whitelist and blacklist for contact %@
Should filter non-whitelisted incoming message from %@: %{bool}d
Checking destinations: %@ against contacts blacklist for incoming message
Should filter blacklisted incoming message from %@ = %{bool}d
Updating state - status for canProcessInvitation: %{BOOL}d
Gateway Manager status changed. Notifying observers
Batching %ld notifications
Found competition request bulletin record to withdraw for friend: %{public}@
Not posting queued notifications, isSuppressed=%{BOOL}d isOnWrist=%{BOOL}d protectedDataAvailable=%{BOOL}d
Posting queued notifications
Notifications to post: %ld
Notifications to defer: %ld
Posting standard notifications, deferring important notifications
No standard notifications to post, allowing important notifications
Not allowing important notifications - not enough time has elapsed since previous deferral
Publish date is %@
Dropping queued bulletin because it's been queued for too long: %lu / %@
At least one bulletin was deferred, scheduling another attempt
Deferred bulletin dispatch timer fired
GizmoBulletinPostingManager queue post notification requests
GizmoBulletinPostingManager post fake notification requests
GizmoBulletinPostingManager received notification response: %{public}@
Error creating cache directory (%@): %@
Error reading from file (%@): %@
Error writing to file (%@): %@
Filtered hidden data: %lu/%lu snapshots, %lu/%lu workouts, %lu/%lu achievements.
Not allowing sample for friend %{public}@ - %@
Sample date: %{public}@
Activity data visible: %d
Explicitly hiding: %d
Is on same day as friendship began: %d
CompetitionStore loading cached competitions
Unable to load cached competitions: %@
Filtering for competition list with friendUUID: %@
Unable to load cached competition lists: %@
Loaded %lu cached current competition lists
Loaded %lu cached archived competition lists
Loaded %lu cached remote competitions
Error deleting all cached competitions: %{public}@
CompetitionStore persisiting competition list to database for owner: %lu, competitionList: %@
CompetitionStore removing competitions of type %lu with friend %@
CompetitionStore saving competitions [%@]
Error saving competition lists: %@
CompetitionStore: Persisting competition list [%@] failed with error [%@]
CompetitionStore: Removing competitions of type %lu for friend with UUID [%@] failed with error [%@]
CompetitionStore: Persisting competitions to database [%@] failed with error [%@]
Unable to cache competition list with no friend UUID: %@
Archived competitions are not supported for remote owner
PeriodicUpdateManager registering xpc activity
PeriodicUpdateManager xpc activity fired, state=%zd
PeriodicUpdateManager failed to set xpc activity state to continue
PeriodicUpdateManager failed to set xpc activity state to defer
PeriodicUpdateManager setting update task as done
PeriodicUpdateManager failed to set xpc activity state to done
PeriodicUpdateManager unregistering xpc activity
Immediate periodic update requested.
Push in progress, queueing another push after this one completes
Not performing periodic update because we have no friends.
PeriodicUpdateManager device is a watch or standalone phone; requesting push
Periodic update save completed with result: %{BOOL}d, %@
Running queued push immediately
PeriodicUpdateManager device is a phone; updating supported features if necessary
PeriodicUpdateManager finished updating supported features
PeriodicUpdateManager initiating fetch changes from CloudKit
PeriodicUpdateManager fetch changes completed
PeriodicUpdateManager account status did change to %ld
Saved %lu subscriptions, deleted %lu subscriptions.
Failed to create record zones with IDs %@ with error: %{public}@
Created record zones in private database: %@
Failed to save records into private database with error: %{public}@
Saved %lu records into private database.
Zones not found when saving records, creating zones and re-trying save.
Cannot create a share with a root record in a different record zone.
Fetching share with ID: %@
Found share: %@
Failed to fetch share with ID %@, error: %{public}@
Accepted share with URL %@ and share ID %@
Failed to accept share with URL %@ with error: %{public}@
Accepted all shares successfully
Failed to accept shares with error: %{public}@
Fetched share metadata for URL %@ successfully
Error fetching share metadata: %{public}@
Fetching share metadata failed with error %{public}@; not accepting shares
Incorrect number of metadatas fetched; not accepting shares.
Accepting shares after fetching metadata (%lu metadatas)
Adding participant with address %@ to shares: %@
Trying to add owner of the share, skipping.
Adding participant %@ failed: saving shares failed with error: %{public}@
Added participant %@ to shares %@ successfully.
Adding participant %@ failed: failed to fetch user identity with error: %{public}@
Removing participant with address %@ from shares with IDs: %@
Trying to remove owner of the share, skipping.
Removing participant %@ failed: saving shares failed with error: %{public}@
Removed participant %@ from shares with IDs %@ successfully.
Removing participant %@ failed: failed to fetch user identity with error: %{public}@
Fetching changes in %lu record zones (database %{public}@)
Change token expired for zone %@
Failed to fetch changes in zone %@ with error %{public}@
Fetched changes successfully in zone %@
Finished fetching changes in database %{public}@, %lu records
Some change tokens have expired, fetching again.
Calling completion with %lu changed records
Fetching changes in database %{public}@
Ignoring changes in zone with ID: %{public}@
No changes in database %{public}@, not fetching.
Failed to fetch changed record zones in database %{public}@ with error %{public}@
Sharing is setup. Showing invite request with actions.
Showing invitation request bulletin from %{public}@ - %@
Sharing is not set up. Showing invite request without actions.
Notifying about invitation request from %{public}@ - %@
iCloud is not signed in. Showing invite request with prompts to sign in.
Watch(es) not all on latest watchOS. Showing invite request with prompts to upgrade.
Withdrawing invite notification from %{public}@ - %@
Showing version incompatible notification for %{public}@ - %@
Showing invitation response bulletin from %{public}@ - %@
Showing invite response error for %{public}@ - %@
Showing max number of friends limit
Handling notification action response: %{public}@ RESPONSE: %{public}@
Serial
ActivitySharingCompetitionAwardingSource
B16@?0@"ASCompetition"8
v8@?0
B32@?0@"ASCompetition"8Q16^B24
competition_list
friend_uuid
type
system_fields
owner
%@_%@
data_id
INTEGER PRIMARY KEY
BLOB
INTEGER
B40@?0q8@"NSArray"16^{HDSQLiteRow=}24^@32
B24@?0@"HDDatabaseTransaction"8^@16
B24@?0@"NSError"8^@16
v16@?0^{HDSQLiteStatementBinder=}8
com.apple.ActivityMonitorApp.challenges.thread
com.apple.ActivitySharing.competitions.thread
com.apple.ActivitySharing.default.thread
fakeContactName
Allen
fakeContactAddress
2025550184
fakeWorkoutType
fakeWorkoutGoalType
fakeWorkoutEnergyBurned
fakeWorkoutDistance
fakeWorkoutDuration
fakeWorkoutGoal
fakeWorkoutIsIndoor
fakeWorkoutVideoIdentifier
1537521179
fakeWorkoutGuidedRunIdentifier
1567714086
fakeWorkoutGuidedWalkIdentifier
1546163570
fakeSnapshotEnergyBurnedGoal
fakeSnapshotExerciseGoal
fakeSnapshotStandGoal
fakeSnapshotMoveMinuteGoal
fakeSnapshotMoveMinuteEnabled
fakeAchievementTemplateUniqueName
NewExerciseRecord
fakeAchievementWorkoutType
fakeAchievementValue
fakeFriendUUID
fakeCompetitionMyWinCount
fakeCompetitionOpponentWinCount
fakeCompetitionBadgeStyle
fakeCompetitionOpponentWonPreviously
v16@?0@"<ACHAchievementsProfileExtending>"8
video
breeze
guidedWalk
com.apple.SessionTracker
B16@?0@"ACHAchievement"8
v28@?0B8@"NSError"12@"NSArray"20
v24@?0Q8q16
Watch
iPod6,3
ASMessagePayloadKey
ASMessageTypeKey
ASMessageSenderAddressKey
ASMessageRetryCountKey
DefaultMessageQueue
v32@?0@"NSString"8@"NSDictionary"16^B24
v32@?0@"NSString"8@"ASMessage"16^B24
ASRelationshipTransaction
com.apple.ActivitySharing.RelationshipManager
com.apple.ActivityMonitorApp
com.apple.Fitness
RelationshipManagerTransaction
v32@?0@"NSString"8@"ASIDSMessageCenter"16^B24
B24@?0@"CKShareParticipant"8@"NSDictionary"16
v28@?0B8@"NSError"12@"ASRelationship"20
v28@?0B8@"NSError"12@"CKShareParticipant"20
v28@?0B8@"NSError"12@"CKShare"20
v16@?0@?<v@?>8
v20@?0B8@"NSError"12
@"CKRecord"16@?0@"ASRelationship"8
v44@?0B8@"NSError"12@"CKShare"20@"CKShare"28@"ASRelationship"36
v24@?0@"NSString"8@"NSError"16
v36@?0B8@"NSError"12@"CKShare"20@"CKShare"28
v28@?0B8B12B16@"NSError"20
B16@?0@"ASContact"8
v44@?0B8@"NSError"12@"CKShare"20@"CKRecord"28@"NSArray"36
v28@?0B8@"NSError"12@"NSDictionary"20
v32@?0@"CKRecordID"8@"ASRelationship"16^B24
q24@?0@"ASRelationship"8@"ASRelationship"16
v28@?0@"NSString"8B16@?<@"NSArray"@?@"ASRelationship">20
cloudKitAddress
@"NSArray"16@?0@"ASRelationship"8
preferredAddress
knownAddresses
createCloudKitAddress
createPreferredAddress
createKnownAddresses
@"NSSet"8@?0
v16@?0@"ASRelationship"8
BuildVersion
fakeFriendWorkout
v12@?0i8
fakeFriendVideoWorkout
fakeFriendGuidedRunWorkout
fakeFriendGuidedWalkWorkout
fakeFriendAchievement
fakeFriendGoalCompletion
fakeFriendBatch
fakeFriendGoalCompletionDuringCompetition
fakeFriendCompetitionRequest
fakeFriendCompetitionAccepted
fakeFriendCompetitionEndedWinner
fakeFriendCompetitionEndedLoser
fakeFriendCompetitionEndedTie
fakeCompetitionScoreCapCelebration
fakeShowInviteRequest
fakeShowInviteResponse
fakeShowInviteNeedsSetup
fakeShowNeedToSignIn
fakeShowNeedToUpgrade
johndoe@icloud.com
com.apple.ActivitySharing
ActivityDataZone
RelationshipZone
COMPETITION_UPDATE_WATCHOS_TITLE
Localizable
COMPETITION_UPDATE_WATCHOS_MESSAGE
B16@?0@"ASFriend"8
v32@?0@"ASFriend"8Q16^B24
com.apple.ActivityMonitorApp.activity-competition-participated
@"ASCodableBulletin"16@?0@"ASActivityDataNotification"8
CREATE TABLE IF NOT EXISTS %@_%@                      (%@ INTEGER PRIMARY KEY AUTOINCREMENT,                      %@ BLOB,                      %@ BLOB,                      %@ INTEGER,                      %@ INTEGER,                      %@ INTEGER,                      %@ BLOB,                      %@ BLOB,                      %@ BLOB,                      %@ BLOB,                      UNIQUE(%@, %@))
q40@?0@"HDDatabaseMigrator"8@"HDDatabaseMigrationTransaction"16q24^@32
CREATE TABLE IF NOT EXISTS %@_%@                      (%@ INTEGER PRIMARY KEY AUTOINCREMENT,                      %@ BLOB,                      %@ BLOB,                      %@ INTEGER,                      %@ INTEGER,                      %@ INTEGER,                      %@ BLOB,                      %@ BLOB,                      %@ BLOB,                      %@ BLOB,                      %@ BLOB,                      UNIQUE(%@, %@))
ALTER TABLE activitysharing_competitions RENAME TO activitysharing_competitions_old
INSERT INTO activitysharing_competitions SELECT * FROM activitysharing_competitions_old
DROP TABLE activitysharing_competitions_old
ALTER TABLE activitysharing_competitions ADD COLUMN %@ INTEGER
CREATE TABLE IF NOT EXISTS %@_%@             (%@ INTEGER PRIMARY KEY AUTOINCREMENT,             %@ BLOB,             %@ INTEGER,            %@ BLOB,             %@ INTEGER,             UNIQUE(%@, %@))
DROP TABLE IF EXISTS %@_%@
Reply
v16@?0@"NSSet"8
v16@?0@"NSError"8
@"NSString"16@?0@"UNNotificationTopic"8
FITNESS_APP_NAME
NOTIFICATION_TITLE_FORMAT_WORKOUT_
%@%@
v32@?0@"NSString"8@16^B24
v32@?0@"NSString"8@"CKServerChangeToken"16^B24
fitnessFriendsWorkoutAnchorKey
fitnessFriendsAchievementAnchorKey
fitnessFriendsGoalCompletionAnchorKey
workoutCompletion
achievementEarned
monthlyAchievementEarned
goalCompletionIndex
B24@?0@"_HKFitnessFriendWorkout"8^@16
v32@?0@"NSUUID"8@"NSDate"16^B24
B24@?0@"_HKFitnessFriendAchievement"8^@16
B24@?0@"_HKFitnessFriendActivitySnapshot"8^@16
v32@?0@"NSUUID"8@"NSNumber"16^B24
ActivitySharingCloudKitAccountKey
ActivitySharingHasCompletedFirstCloudKitFetchKeyVersion2
ActivitySharingSharedDataSubscription
ActivitySharingPrivateDataSubscription
ASCloudKitFetch
com.apple.ActivitySharing.CloudKitManager
@16@?0@"CKRecord"8
%@-%@
Observer
ChangeToken
v36@?0B8@"NSError"12@"NSArray"20@"NSArray"28
v28@?0B8@"NSError"12@"NSSet"20
Achievement
ActivitySnapshot
Event
Relationship
Workout
aps-environment
v24@?0q8@"NSError"16
v32@?0@"NSPersonNameComponents"8@"NSString"16@"NSError"24
@"NSArray"24@?0@"ASCloudKitManager"8@"NSArray"16
B16@?0@"<ASCloudKitManagerChangesObserver>"8
v52@?0@"ASCloudKitManager"8@"<ASCloudKitManagerChangesObserver>"16@"CKRecordZoneID"24B32@"NSArray"36@?<v@?>44
@"_HKFitnessFriendActivitySnapshot"24@?0@"ASCloudKitManager"8@"CKRecord"16
@"_HKFitnessFriendWorkout"24@?0@"ASCloudKitManager"8@"CKRecord"16
@"_HKFitnessFriendAchievement"24@?0@"ASCloudKitManager"8@"CKRecord"16
@"ASNotificationEvent"24@?0@"ASCloudKitManager"8@"CKRecord"16
@"ASCompetitionList"24@?0@"ASCloudKitManager"8@"CKRecord"16
B16@?0^@8
v32@?0@"CKRecordZoneID"8@"NSArray"16^B24
NOTIFICATION_TITLE_FORMAT_WORKOUT
NOTIFICATION_TITLE_FORMAT_WORKOUT_VIDEO
Localizable-seymour
NOTIFICATION_TITLE_FORMAT_ACHIEVEMENT
NOTIFICATION_TITLE_FORMAT_GOAL_COMPLETION_MOVE_ONLY
NOTIFICATION_TITLE_FORMAT_GOAL_COMPLETION
BULLETIN_TITLE_COMPETITION_REQUEST
BULLETIN_TITLE_COMPETITION_ACCEPTED
BULLETIN_TITLE_COMPETITION_ENDED_TIED
BULLETIN_TITLE_COMPETITION_ENDED_WINNER
BULLETIN_TITLE_COMPETITION_ENDED_LOSER
BULLETIN_TITLE_COMPETITION_SCORE_CAP_CELEBRATION
ActivitySharingLastTemplateRefreshTimestamp
v32@?0@"NSSet"8@"NSSet"16@"NSError"24
@"NSSet"16@?0@"NSDateInterval"8
B16@?0@"ACHTemplate"8
@"ACHTemplate"16@?0@"NSString"8
outgoing
incoming
%@-outgoing
%@-retry
%@-persisted
v24@?0@"NSString"8@"ASMessage"16
v16@?0q8
v16@?0^?8
tel:
mailto:
ActivitySharingHasFriendsChangedNotification
FriendList
B24@?0@"_HKFitnessFriendWorkout"8@"NSDictionary"16
v32@?0@"NSNumber"8@"NSSet"16^B24
com.apple.ActivityMonitorApp.activity-shared
competition
friendUUID
competition_uuid
competition_type
current_cache_index
last_pushed_cache_index
scores
opponent_scores
start_date_components
duration_date_components
preferred_victory_badge_styles
maximum_points_per_day
ActivitySharingScoreCapCelebrationAnchor
CompetitionManagerTransaction
v28@?0B8@"NSError"12@"ASContact"20
@16@?0@"ASContact"8
B16@?0@"CKRecord"8
@"ASCompetitionList"16@?0@"CKRecord"8
@"NSUUID"16@?0@"ASCompetitionList"8
@"CKRecord"16@?0@"ASContact"8
ActivitySharingMangerProcessingStartedNotification
ReadWrite
SubmanagerBarrier
v24@?0B8B12@"NSError"16
com.apple.private.healthkit
LastPushedWorkoutAnchor
LastPushedDeletedWorkoutAnchor
LastPushedTodayAchievementAnchorToken
LastPushedGoalCompletionAnchor
CloudKitManagerObserver
HealthData
ActivitySummary
v12@?0B8
B24@?0@"ASNotificationEvent"8@"NSDictionary"16
v24@?0@"NSSet"8@"NSNumber"16
Watch%
@"_HKFitnessFriendAchievement"16@?0@"ACHAchievement"8
@"ASNotificationEvent"16@?0@"_HKFitnessFriendWorkout"8
@"ASNotificationEvent"16@?0@"_HKFitnessFriendAchievement"8
v24@?0@"NSArray"8@"NSNumber"16
B40@?0@"HKWorkout"8@"HKDeletedObject"16q24^@32
@"NSString"16@?0@"_HKFitnessFriendAchievement"8
q24@?0@"NSString"8@"NSString"16
contacts
observer
persist
v32@?0@"NSUUID"8@"NSArray"16^B24
MasqueradeActivitySharingInviteVersion
notificationQueue
v32@?0@"ASCodableBulletin"8Q16^B24
ActivitySharingNotificationIcon
B16@?0@"ASCodableBulletin"8
@16@?0@"ASFriendNotificationContainer"8
ASMessageTypeInviteRequest
ASMessageTypeInviteResponse
ASMessageTypeFinalizeHandshake
ASMessageTypeWithdrawInviteRequest
Unknown (%d)
Contacts
contacts.dat
contacts2.dat
ContactsCache/
.dat
@16@?0@"NSURL"8
B16@?0@"_HKFitnessFriendWorkout"8
@"_HKFitnessFriendAchievement"16@?0@"_HKFitnessFriendAchievement"8
B24@?0@"<ASFilterableSample>"8@"NSDictionary"16
B24@?0@"_HKFitnessFriendActivitySnapshot"8@"NSDictionary"16
v16@?0@"ASCodableDatabaseCompetitionListEntry"8
com.apple.FitnessFriends.PeriodicUpdateActivity
Provider
v16@?0@"NSObject<OS_xpc_object>"8
ActivitySharing.Notifications
ActivitySharing.Notifications.Synced
ActivitySharing
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
v24@?0@"NSDictionary"8@"NSError"16
v32@?0@"CKShareMetadata"8@"CKShare"16@"NSError"24
v32@?0@"NSURL"8@"CKShareMetadata"16@"NSError"24
v16@?0@"CKShareParticipant"8
v16@?0@"CKRecord"8
v32@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24
v44@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24B32@"NSError"36
v16@?0@"CKRecordZoneID"8
v28@?0@"CKServerChangeToken"8B16@"NSError"20
Accept
Ignore
ASUserInfoIDContactUUID
ASUserInfoNotificationTypeInviteRequest
ASUserInfoNotificationTypeKey
InviteRequest
InviteAttemptNeedsSetup
InviteAttemptNeedToSignIn
InviteAttemptedNeedToUpgrade
InviteIncompatibleVersion
ACCEPT
IGNORE
ACTIVITY_SHARING_INVITATION_REQUEST_SETUP_TITLE
ACTIVITY_SHARING_INVITATION_REQUEST_SETUP_BODY
ACTIVITY_SHARING_INVITATION_REQUEST_SIGNIN_TITLE
ACTIVITY_SHARING_INVITATION_REQUEST_SIGNIN_BODY
ACTIVITY_SHARING_INVITATION_REQUEST_UPGRADE_TITLE
ACTIVITY_SHARING_INVITATION_REQUEST_UPGRADE_BODY
ACTIVITY_SHARING_VERSION_TOO_LOW_TITLE
ACTIVITY_SHARING_INCOMING_REQUEST_VERSION_TOO_LOW_BODY
ACTIVITY_SHARING_OUTGOING_REQUEST_VERSION_TOO_LOW_BODY
ACTIVITY_SHARING_VERSION_TOO_HIGH_TITLE
ACTIVITY_SHARING_OUTGOING_REQUEST_VERSION_TOO_HIGH_TITLE
ACTIVITY_SHARING_INVITATION_RESPONSE_BODY
ACTIVITY_SHARING_INVITATION_RESPONSE_BODY_WITH_CLOUDKIT_ADDRESS
ACTIVITY_SHARING_INVITE_ACCEPT_ERROR
ACTIVITY_SHARING_FRIEND_LIMIT_MESSAGE_TITLE
ACTIVITY_SHARING_FRIEND_LIMIT_MESSAGE_BODY
ACTIVITY_SHARING_INVITATION_REQUEST_TITLE
ACTIVITY_SHARING_INVITATION_REQUEST_BODY
ASActivitySharingProfileExtension
HDProfileExtension
NSObject
ASActivitySharingManagerProvider
ASActivitySharingPluginInterface
ASCompetitionAwardingSource
ACHEarnedInstanceAwarding
ASDatabaseCompetitionListEntryEntity
ASDatabaseCompetitionListEntryEncoder
ASDatabaseCompetitionListEntryJournalEntry
ASDatabaeCompetitionListEntryBulkDeletionJournalEntry
ASFakingManager
ASActivitySharingManagerReadyObserver
ASMessage
ASMessageQueue
ASRelationshipBeganPlaceholder
ASRelationshipManager
ASIDSMessageCenterDelegate
ASCloudKitManagerChangesObserver
ASGatewayManagerChangesObserver
ASFriendInviteBulletinManagerDelegate
ASOnWristMonitor
ASFakeBulletinManager
ASFriendNotificationContainer
ASCompetitionBulletinManager
ASCompetitionTemplateSource
ACHTemplateSource
ASActivityDataBulletinManager
ASActivitySharingPlugin
HDPlugin
HDDatabaseSchemaProvider
HDTaskServerClassProvider
ASCompanionBulletinPostingManagerSubtitleBodyPair
ASCompanionBulletinPostingManager
UNUserNotificationCenterDelegate
ASBulletinPostingManager
ASCloudKitServerChangeTokenCache
NSCopying
ASActivityDataNotificationManager
HDDataObserver
ASNotificationStep
ASCloudKitManager
APSConnectionDelegate
ASAsyncTransactionQueue
ASAchievementManager
ASCompetitionTemplateSourceDataProvider
ASCompetitionAwardingSourceDataProvider
ASFriendListObserver
ASMessageHandler
ASIDSMessageCenter
IDSServiceDelegate
ASFriendListManager
ASContactsManagerObserver
ASCompetitionManagerObserver
CHFitnessAppBadgeCountProvider
ASDatabaseCompetitionEntity
ASDatabseCompetitionEncoder
ASDatabaseCompetitionJournalEntry
ASDatabaseCompetitionDeletionJournalEntry
ASDatabaseCompetitionBulkDeletionJournalEntry
ASCompetitionManager
HDDatabaseProtectedDataObserver
ASActivityDataManagerObserver
ASPeriodicUpdateRecordProvider
ASActivitySharingManager
HDHealthDaemonReadyObserver
HDNanoSyncManagerObserver
FIFitnessAppsStateObserverDelegate
ASServer
HDTaskServer
_HKXPCExportable
ASServerInterface
ASSetupManager
Filterable
ASActivityDataManager
HDCurrentActivitySummaryHelperObserver
ACHAchievementStoreObserving
_ASContactPlaceholder
ASContactsManager
ASFriendListQueryServer
ASGatewayManager
ASGizmoBulletinPostingManager
ASOnWristMonitorDelegate
HDNanoAlertSuppressionObserver
ASActivityDataValidator
ASCompetitionStore
ASPeriodicUpdateManager
ASNotificationSentinelKeys
ASCloudKitUtility
ASFriendInviteBulletinManager
ASBulletinPostingManagerDelegate
T@"ASCodableDatabaseCompetitionListEntry",R,N,V_competitionList
T#,N,V_protobufClass
T@"NSSet",R,C,N
T:,N,V_handleErrorSendingMessageAction
TB,N,GisExpired
T@"<ASBulletinPostingManager>",R,N,V_bulletinPostingManager
T@"<ASBulletinPostingManagerDelegate>",W,N,V_delegate
_activateActivitySharingManager
T@"<ASCompetitionTemplateSourceDataProvider>",W,N,V_dataProvider
_batchedNotificationRequestsFromCodableBulletins:withAdditions:
T@"<ASIDSMessageCenterDelegate>",W,N,V_delegate
_competitionForVictoryTemplate:
T@"ACHAchievement",R,N
_contactsWithActiveCompetitions
T@"ASAchievementManager",W,N,V_achievementManager
_fakeSnapshotWithCompleteRings:
T@"ASActivityDataBulletinManager",W,N,V_activityDataBulletinManager
_hasMoveGoalForActivitySummary:
T@"ASActivityDataManager",W,N,V_activityDataManager
_isSharingSetup
T@"ASActivityDataNotificationRulesEngine",&,N,V_notificationRulesEngine
_lastPushedGoalCompletionAnchor
T@"ASActivitySharingManager",W,N,V_activitySharingManager
_notificationRequestForInvitationFromContact:requestIdentifier:
T@"ASCloudKitManager",W,N,V_cloudKitManager
_onWristMonitor
T@"ASCodableDatabaseCompetition",R,N,V_databaseCompetition
_readWriteQueue
T@"ASCompetitionManager",R,N,V_competitionManager
_requestAwardsUpdateIfNecessary
T@"ASContact",&,N,V_contact
activityDataNotificationManager
T@"ASContactsManager",W,N,V_contactsManager
addParticipant:
T@"ASFakingManager",R,N,V_fakingManager
appleStandHours
T@"ASFriendInviteBulletinManager",R,N,V_friendInviteBulletinManager
cloudKitAddress
T@"ASFriendListManager",W,N,V_friendListManager
cloudKitUtility
T@"ASPeriodicUpdateManager",R,N,V_periodicUpdateManager
competitionList
T@"ASRelationshipManager",R,N,V_relationshipManager
contactsManager
T@"ASSetupManager",R,N,V_setupManager
containsString:
T@"HDKeyValueDomain",R,N,V_deviceLocalActivitySharingKeyValueDomain
context
T@"HDProfile",W,N,V_profile
currentWorkouts
T@"NSData",&,N,V_payload
dealloc
T@"NSNumber",&,N
endDate
T@"NSObject<ACHTemplateSourceDelegate>",W,N,Vdelegate
fakeAchievement
T@"NSSet",C,N
friendWithUUID:
T@"NSSet",R,N,V_blocksWaitingOnSuccess
handleErrorSendingMessageAction
T@"NSString",&,N,V_subtitle
hk_map:
T@"NSString",R,C
initWithZoneID:
T@"NSString",R,N
inviterCallerID
T@"NSString",R,N,V_serviceIdentifier
isProxy
T@"_HKFitnessFriendAchievement",R,N
kilocalorieUnit
T@,&,N,V_token
T@?,C,N,V_ephemeralCompletionBlock
nanoSyncManager
T@?,C,N,V_objectTransformationBlock
numberWithBool:
T@?,C,N,V_shouldNotifyObserverBlock
predicateMatchingAllPredicates:
TB,R
profileExtensionWithIdentifier:
TB,R,N,V_hasRegisteredForUpdates
registerNotificationCategories:
TB,V_readyForOperations
remoteInterface
Ti,N,V_type
removeObserver:
Tq,N,V_retryCount
request
Tq,R,N,V_notificationRequestType
URLWithString:
setActivityDataBulletinManager:
UUID
setCreatedDate:
_acceptShareMetadatas:completion:
setGoalCompletionNotifications:
_achievementNotificationStep
setPreferredVictoryBadgeStyles:
_achievementsToPushWithYesterdaySnapshot:todaySnapshot:currentTodayAchievementAnchorToken:currentYesterdayAchievementAnchorToken:
setWorkoutData:
_activityDataManager
stringByAppendingPathComponent:
.cxx_destruct
T@"CKContainer",&,N,V_container
T#,R
T@"_HKFitnessFriendWorkout",R,N
T:,N,V_handleReceiveMessageAction
TB,R,N,V_hasCompletedFirstFetch
T@"<ASBulletinPostingManagerDelegate>",W,N
_achievementForAchievementData:
T@"<ASCompetitionAwardingSourceDataProvider>",W,N,V_dataProvider
_appIsInstalled
T@"<ASFriendInviteBulletinManagerDelegate>",W,N,V_delegate
_client
T@"<ASOnWristMonitorDelegate>",W,N,V_delegate
_contactsByUUID
T@"ASAchievementManager",R,N,V_achievementManager
_endTransaction
T@"ASActivityDataBulletinManager",R,N,V_activityDataBulletinManager
_gatewayManager
T@"ASActivityDataManager",R,N,V_activityDataManager
_idsIdentifiersForDestinations:
T@"ASActivityDataNotificationManager",R,N,V_activityDataNotificationManager
_lastPushedDeletedWorkoutAnchor
T@"ASActivitySharingManager",&,N,V_activitySharingManager
_messageCenters
T@"ASCloudKitManager",R,N,V_cloudKitManager
_observerQueue_performNotificationStep:onRecords:dispatchGroup:
T@"ASCloudKitUtility",&,N,V_cloudKitUtility
_queue_executingFetchOperations
T@"ASCompetitionBulletinManager",R,N,V_competitionBulletinManager
_relationshipRecordsToReconcile
T@"ASCompetitionManager",W,N,V_competitionManager
achievementData
T@"ASContactsManager",R,N,V_contactsManager
activitySummary
T@"ASFakeBulletinManager",R,N,V_fakeBulletinManager
allAchievements
T@"ASFriend",R,N
arrayWithArray:
T@"ASFriendListManager",R,N,V_friendListManager
cloudKitManager
T@"ASGatewayManager",R,N,V_gatewayManager
codableSnapshot
T@"ASPeriodicUpdateManager",W,N,V_periodicUpdateManager
contact
T@"ASRelationshipManager",W,N,V_relationshipManager
containsObject:
T@"FIFitnessAppsStateObserver",R,N,V_fitnessAppsStateObserver
content
T@"HDProfile",R,W,N,V_profile
currentCalendar
T@"HKActivitySummary",R,N
T@"NSDate",&,N,V_dateOfLastSuccessfulFetch
earnedInstances
T@"NSObject<ACHTemplateSourceDelegate>",W,N
expired
T@"NSSet",&,N,V_recordTypes
fi_activityType
T@"NSSet",R,N
friends
T@"NSString",&,N,V_body
hk_isAfterDate:
T@"NSString",C,N,V_senderAddress
initWithDomain:
T@"NSString",R,C,N
insertOrReplaceEntity:database:properties:error:bindingHandler:
T@"NSString",R,N,V_friendUUID
isMyActivityDataCurrentlyHidden
T@"UNNotificationRequest",R,N,V_notificationRequest
isWatch
T@"_HKFitnessFriendActivitySnapshot",R,N
localizationKey
T@,R,N,V_token
T@?,C,N,V_notifyObserverBlock
notifyCompetitionEndWinnerToken
T@?,C,N,V_objectsTransformationBlock
payload
TB,N,V_isWatch
profile
TB,R,N
protectionClass
TB,R,N,V_isWatch
release
TQ,R
removeDelegate:
Tq,N,V_managerStartAction
removeProvider:
Tq,R,N
serviceSpaceDidBecomeAvailable:
URLByAppendingPathComponent:
setAcceptSharesCompletionBlock:
UTF8String
setCompetition:
UUIDString
setFetchRecordsCompletionBlock:
_achievementManager
setMaximumNumberOfPointsPerDay:
_achievementStore
setRecordTypes:
_activityDataBulletinManager
setXpcActivity:
_activityDataNotificationCategories
_activityDataNotificationManager
_activityDataShare
_activityDataShareRecordID
_activitySharingAchievementForAchievementData:
_activitySharingHasFriendsChangedToken
_activitySharingManager
_activitySharingManagerProcessingStarted
_activitySharingWorkoutForWorkoutData:
_activitySnapshotForSnapshotData:
_activitySnapshotNotificationStep
_activitySnapshotsToPushWithYesterdaySnapshot:todaySnapshot:
_activitySummaryIndex
_activitySummaryQueue
_allCompetitionsOrderedByEndDate
_allContactsPreferringPlaceholderContacts
_appBundleIdentifier
_appInstalled
_apsConnection
_archivedCompetitionListByMergingCurrentCompetitionList:
_archivedCompetitionListCache
_batchedNotificationRequestsFromCodableBulletins:
_beginTransaction
_blocksWaitingOnFetch
_blocksWaitingOnSuccess
_body
_bulletinPostingManager
_cachedCompetitionListForFriendWithUUID:type:owner:
_calendar
_cancelNewAccountTasksTimer
_changeTokenQueue
_ckQueue_handleDeletedWorkoutEvents:completion:
_ckQueue_handleNewSnapshotsForSelf:moreComing:
_ckQueue_processActivitySnapshotsForSelf:
_cloudKitAccountStatus
_cloudKitAccountStatusChanged:
_cloudKitManager
_cloudKitManagerObserverQueue
_cloudKitUtility
_competitionAwardingSource
_competitionBulletinManager
_competitionDataAvailable
_competitionList
_competitionManager
_competitionNotificationStep
_competitionStore
_competitionTemplateSource
_competitionsWithPredicate:profile:error:
_contact
_contactStore
_contactStoreContactWithIdentifier:
_contactStoreDidChangeNotification:
_contactWithFakeCompetitionStatus:
_contactWithIncomingHandshakeToken:
_contactWithInviteRequest:fromSender:
_contactWithOutgoingHandshakeToken:
_contactWithRemoteRelationshipRecordZoneID:
_contactWithUUIDPreferringPlaceholders:
_contactsManager
_contactsQueue
_contactsTransactionBarrier
_container
_copyAchievement:
_createActivityDataShareWithCompletion:
_createNotificationSteps
_createRecordZonesWithIDs:priority:completion:
_createTableSQLStringForCompetitionLists
_creatorDevice
_currentActivityDataPreview
_currentActivitySummary
_currentCompetitionListCache
_currentDeletedWorkoutAnchor
_currentFetchPriority
_currentFetchType
_currentGoalCompletionAnchor
_currentInProgressPushActivitySummary
_currentLastPushedActivitySummary
_currentTodayAchievementAnchorToken
_currentWorkoutAnchor
_currentlyPairedWatchMeetsMinimumVersion
_dataManager
_dataProvider
_databaseChangeTokensByDatabaseScope
_databaseCompetition
_dateOfLastSuccessfulFetch
_deactivateActivitySharingManager
_deferredBulletinTimestamp
_delegate
_description
_deviceLocalActivitySharingKeyValueDomain
_deviceParticipatesInAutomaticCompetitionManagement
_dispatchAction:invocationBlock:
_domainName
_dropTableSQLStringForCompetitionLists
_dropTableSQLStringForCompetitions
_endDatePredicate
_ephemeralCompletionBlock
_existingFriendUUIDsAwaitingMyCompetitionResponse
_existingFriendUUIDsWithAcceptedCompetitionRequestsFromMe
_existingFriendUUIDsWithCompletedCompetitions
_fakeBulletinManager
_fakeCompetitionHistory
_fakeCompetitionWithStartDate:opponentScores:scores:
_fakeContact
_fakingManager
_fetchAllChangesWithPriority:activity:
_fetchAllChangesWithPriority:activity:completion:
_fetchChangesInDatabase:serverChangeTokenCache:priority:activity:completion:
_fetchChangesInZones:inDatabase:serverChangeTokenCache:priority:allowRetry:completion:
_fetchCloudKitAccountStatusAndNotifyOfChanges
_fetchCloudKitAddressWithCompletion:
_fetchShareWithShareRecordID:completion:
_fetchTransaction
_filterAchievements:forSnapshotIndex:
_findDeletedWorkoutEventsWithAnchor:completion:
_findMatchingContactStoreContactForDestinations:
_fitnessAppsRestricted
_fitnessAppsStateObserver
_friendForVictoryTemplate:
_friendInviteBulletinManager
_friendListManager
_friendListQueue
_friendUUID
_friendUUIDToCompetitionRequestNotificationRequestRecordMap
_friendUUIDsByZoneID
_friendUUIDsWithUpdatedCompetitions
_friends
_handleAcceptedCompetitionFromFriendWithUUID:
_handleAccountStatusChange:
_handleActivityDataNotificationResponse:
_handleCompetitionRequestFromFriendWithUUID:
_handleErrorForMessage:
_handleErrorSendingFinalizeHandshake:
_handleErrorSendingInviteRequest:
_handleErrorSendingInviteResponse:
_handleErrorSendingMessageAction
_handleErrorSendingWithdrawInviteRequest:
_handleFinalizeHandshake:fromSenderAddress:messageHandledCompletion:
_handleHasFriendsChanged
_handleIncomingNotification:
_handleInviteRequest:fromSenderAddress:messageHandledCompletion:
_handleInviteResponse:fromSenderAddress:messageHandledCompletion:
_handleMessage:identifier:
_handleMessageSendSuccess:error:identifier:
_handleNewPrivateDatabaseRecordChanges:sharedDatabaseRecordChanges:fetchType:
_handleNewSnapshots:workouts:achievements:moreComing:
_handleReceiveMessageAction
_handleWithdrawInviteRequest:fromSenderAddress:messageHandledCompletion:
_hasAppleMoveMinutesGoal
_hasCompletedFirstFetch
_hasEnergyBurnedGoal
_hasFetchedProtectedData
_hasFriendsToShareWith
_hasPendingContactsReconcile
_hasQueuedPush
_hasRegisteredForUpdates
_healthDataQueue
_identifierToMessageDictionary
_idsIdentifierForDestination:
_idsService
_incomingDispatchQueue
_insertCompetition:database:error:
_insertCompetitionList:database:error:
_insertCompetitionLists:profile:error:
_insertCompetitions:profile:error:
_insertInviteForContact:destination:serviceIdentifier:
_inviteNotificationCategories
_isAlertSuppressionEnabled
_isCloudKitManagerProcessingData
_isPostingAllowed
_isPushInProgress
_isStandalonePhoneSummary
_isWatch
_lastPushedTodayAchievementAnchorToken
_lastPushedWorkoutAnchor
_lastReportedFriendsDate
_lastReportedNumberOfFriends
_loadCachedCompetitionsAndNotifyObservers
_loadOrCreateCurrentCompetitionListForFriendWithUUID:
_localCompetitionForRemoteCompetition:friendUUID:
_localSourceUUID
_localUserDefaultsDomainWithProfile:
_lockingQueue
_mainQueue_completeSetupIfNeeded
_mainQueue_nanoRegistryInfoChanged
_mainQueue_notifySubmanagersOfManagerReady
_mainQueue_shouldCompleteSetup
_mainQueue_startSubmanagerProcessingIfNeeded
_mainQueue_stopSubmanagerProcessingIfNeeded
_managerStartAction
_messageHandlerForType:
_migrateToTwoWaySyncSetupDefault
_mostRecentAchievementEarnedDateForFriendWithUUID:
_mostRecentGoalCompletedSnapshotIndexForFriendWithUUID:
_mostRecentMonthlyAchievementEarnedDateForFriendWithUUID:
_mostRecentWorkoutCompletionDateForFriendWithUUID:
_mostSignificantSnapshot:
_mostSignificantSnapshotAmongSnapshots:
_nanoUserDefaultsDomainKeyForFriendWithUUID:keyTypeString:
_nanoUserDefaultsDomainWithProfile:
_newAccountTasksTimer
_newAchievements
_newDeletedWorkoutEvents
_newPrepolulatedUserInfoForInvitationFromContactUUID:categoryIdentifier:notificationContent:title:message:
_newPrepopulatedNotificationContentForNotificationContent:title:message:
_newSnapshots
_newSnapshotsForSelf
_newWorkouts
_notificationEventNotificationStep
_notificationPostingManager
_notificationQueue
_notificationRequest
_notificationRequestForCodableBulletin:
_notificationRequestForInvitationFromContact:categoryIdentifier:requestIdentifier:title:formatString:
_notificationRequestForInvitationFromContactUUID:categoryIdentifier:requestIdentifier:title:message:
_notificationRequestFromCodableBulletin:
_notificationRequestFromCodableBulletin:withAdditions:
_notificationRequestType
_notificationRequests
_notificationRulesEngine
_notificationStore
_notifyAboutWorkoutsDetectionIfRequired:
_notifyObserverBlock
_objectTransformationBlock
_objectsTransformationBlock
_observerQueue
_observerQueue_clearFriendUUIDByZoneIDCache
_observerQueue_friendUUIDForActivityDataShareRecordZoneID:
_observerQueue_notifyObserversOfBeginUpdatesForFetchWithType:
_observerQueue_notifyObserversOfEndUpdatesForFetchWithType:
_observers
_observersNotReady
_observersNotReadyGroup
_outgoingDispatchQueue
_outgoingMessageQueue
_pairingStatusChangedToken
_payload
_performAndRetryNewAccountTasksIfNecessaryWithShouldCreateSubscriptions:shouldFetch:
_performAndRetryNewAccountTasksWithRetryInterval:shouldCreateSubscriptions:shouldFetch:
_performBlockWaitingForFriendshipBeganForFriendWithUUID:block:
_performBlockWhenAllObserversBecomeReady:
_performNewAccountTasksCreatingSubscriptions:fetching:completion:
_periodicUpdateManager
_persistContacts:
_persistQueue
_persistedAnchorTokenWithKey:
_persistedAnchorWithKey:
_persistedMessageQueue
_placeholderContactsByUUID
_placeholderFriendshipBeganTokens
_postNotificationRequest:
_postQueuedNotificationRequestsIfPossible
_postedFriendInviteIdentifiersForContactUUID
_privateDatabaseActivitySnapshotNotificationStep
_privateDatabaseCompetitionNotificationStep
_processActivityDataPreview:friendUUID:
_processMessageQueue:preprocessingBlock:
_processPersistedMessagesIfNeeded
_profile
_protobufClass
_providerQueue
_providers
_pushNotificationRecieved
_queue
_queueName
_queue_acceptShares:forRelationship:contact:completion:
_queue_activitySharingManagerProcessingStarted
_queue_addPersonWithCloudKitAddress:toShares:completion:
_queue_allContacts
_queue_allContactsByRecordID
_queue_allRelationshipsByRecordID
_queue_apsEnvironmentString
_queue_autoAcceptCompetitionRequestFromContact:completion:
_queue_callFetchCompletionBlocksWithSuccess:error:
_queue_cancelAllExecutingFetches
_queue_clearChangeTokenCacheAndFriendListWithCompletion:
_queue_competitionListCacheForType:owner:
_queue_completeCompetitionIfNecessaryForFriendWithUUID:
_queue_deleteActivityDataForFriendWithUUID:
_queue_deleteAllActivitySharingData
_queue_earnedInstancesForInterval:selectingCompetitionsUsingFilter:
_queue_fetchSharesForRelationship:completion:
_queue_friendListDidUpdate
_queue_friendWithUUID:
_queue_getAndHandleAllActivitySharingData
_queue_handleNewRemoteCompetitionList:contact:
_queue_handleNewSnapshots:workouts:achievements:
_queue_handleSavedCompetitionListRecords:
_queue_handleSavedRecords:forContact:
_queue_hasFriendsToShareWith
_queue_insertPlaceholderFriendshipDidBeginForContactWithUUID:
_queue_insertSamples:
_queue_isLastCloudKitAddressDifferentFromNewCloudKitAddress:
_queue_notifyObservers
_queue_notifyObserversOfCompetitionUpdatesForFriendsWithUUIDs:
_queue_notifyObserversOfCompetitionsLoaded
_queue_notifyObserversOfFriendListChanges
_queue_notifyObserversOfStatusChanged:
_queue_performUpdateForActivity:withCompletion:
_queue_persistAnchorTokenValue:forKey:
_queue_persistAnchorValue:forKey:
_queue_postNotificationRequests:
_queue_processRemoteRelationships:completion:
_queue_pushDisable
_queue_pushEnable
_queue_reconcileAddressBookAgainstRelationships:
_queue_reconcileCloudKitRelationships:
_queue_removeFriendWithUUID:eventType:completion:
_queue_removePlaceholderRelationshipBeganForContactWithUUID:success:
_queue_samplesAdded:
_queue_saveCompetitionListsToCache:owner:
_queue_saveFitnessFriendActivitySnapshots:workouts:achievements:
_queue_saveRelationship:contact:completion:
_queue_saveRelationship:contact:withExtraRecords:completion:
_queue_saveRelationshipAndFetchOrCreateShares:contact:completion:
_queue_selectAchievementNotifications
_queue_selectGoalCompletionNotifications
_queue_selectWorkoutNotifications
_queue_setActivityDataVisibleIfNecessaryForContact:completion:
_queue_setHasCompletedFirstFetch:
_queue_setLastPushedDeletedWorkoutAnchor:
_queue_setLastPushedGoalCompletionAnchor:
_queue_setLastPushedTodayAchievementAnchorToken:
_queue_setLastPushedWorkoutAnchor:
_queue_showCompetitionAcceptedForFriendWithUUID:competition:
_queue_showCompetitionEndedWithFriendWithUUID:
_queue_showCompetitionRequestFromFriendWithUUID:competition:
_queue_showFriendNotificationsIfRequired
_queue_showScoreCapCelebrationForFriendsWithCappedInProgressCompetitions:
_queue_start
_queue_startFetchAllChangesOperationWithPriority:activity:changeTokenCache:completion:
_queue_stop
_queue_updateFriendList
_queue_updateScoresWithTodaySummary:yesterdaySummary:
_readyForOperations
_receivedChangesFromCloudKit
_recordForCurrentCompetitionList:contact:
_recordTypes
_relationshipManager
_relationshipNotificationStep
_remoteCompetitionListCache
_remoteRelationshipNotificationStep
_remoteRelationshipRecordsToProcess
_removeAllUnusedTemplatesUsingClient
_removeAllUnusedTemplatesUsingProfile
_removeCompetitionsWithFriendFromDatabase:type:error:
_removeInvalidWorkouts:
_removeUnusedTemplatesForFriendWithUUID:templateStore:
_retryCount
_retryMessageQueue
_saveCloudKitAddressToKeyValueStore
_saveCompetitionListToDatabase:owner:error:
_saveCompetitionLists:owner:
_saveCompetitionsToDatabase:friendUUID:type:error:
_saveCurrentCompetitionList:archivedCompetitionList:contact:completion:
_saveRecordsIntoPrivateDatabase:recordIDsToDelete:savePolicy:priority:activity:completion:
_saveRecordsIntoPrivateDatabaseCreatingZones:recordIDsToDelete:savePolicy:priority:activity:completion:
_scoreCapCelebrationAnchor
_scoreCapCelebrationAnchorWithProfile:
_screenTimeConversation
_sendMessage:type:destinations:completion:
_senderAddress
_serialQueue
_serverChangeTokenCache
_serviceIdentifier
_setActivitySummaryIndex:
_setContacts:waitForTransaction:
_setEndDate:
_setMostRecentAchievementEarnedDate:forFriendWithUUID:
_setMostRecentGoalCompletedSnapshotIndex:forFriendWithUUID:
_setMostRecentMonthlyAchievementEarnedDate:forFriendWithUUID:
_setMostRecentWorkoutCompletionDate:forFriendWithUUID:
_setPushCount:
_setScoreCapCelebrationAnchor:
_setSourceRevision:
_setStartDate:
_setUUID:
_setWheelchairUse:
_setupManager
_shiftedAchievements:friendTimeZones:friendListManager:
_shouldExecuteWhenProtectedDataIsUnavailable
_shouldFilterBlacklistContactDestinations:
_shouldFilterWhitelistContactDestinations:
_shouldListenForUpdates
_shouldNotifyObserverBlock
_showFakeAchievementNotification
_showFakeBatchNotification
_showFakeCompetitionAcceptedNotification
_showFakeCompetitionEndedLoserNotification
_showFakeCompetitionEndedTieNotification
_showFakeCompetitionEndedWinnerNotification
_showFakeCompetitionRequestNotification
_showFakeCompetitionScoreCapCelebrationNotification
_showFakeGoalCompletionDuringCompetitionNotification
_showFakeGoalCompletionNotification
_showFakeGuidedRunWorkoutNotification
_showFakeGuidedWalkWorkoutNotification
_showFakeInvitationRequest
_showFakeInvitationResponse
_showFakeInviteAttemptNeedsSetup
_showFakeNeedToSignIn
_showFakeNeedToUpgrade
_showFakeVideoWorkoutNotification
_showFakeWorkoutNotification
_showFakeWorkoutNotificationWithWorkout:
_showIncompatibleVersionForContact:title:formatString:
_snapshotSourceUUIDsByIndex
_sourceWithBundleIdentifier:name:productType:options:
_stripFZIDPrefix
_submanagerBarrierGroup
_submanagerBarrierQueue
_submanagerInitializationComplete
_submanagerProcessingStarted
_submanagersProcessingStartedLock
_submitNotificationRequest:forContact:
_subscribeToChangesInDatabase:subscriptionPrefix:recordTypes:recordTypesToDelete:completion:
_subscribeToChangesInPrivateDatabaseWithCompletion:
_subscribeToChangesInSharedDatabaseWithCompletion:
_subscriptionNotificationWasReceivedDuringCurrentFetch
_subtitle
_subtitleBodyPairForAchievementCodableBulletin:
_subtitleBodyPairForCodableBulletin:
_subtitleBodyPairForWorkoutCodableBulletin:
_synchronizePreferences
_targetQueue
_taskUUID
_timestamp
_token
_transactionQueue
_type
_unhiddenSamplesInFilterableSamples:friendTimeZones:friendListManager:
_updateSubmanagerProcessingStarted:
_useNewAchievementsSystem
_userInfoForInvitationResponseFromContact:notificationContent:message:
_userNotificationCenter
_verifyOrCreateSubscriptionsWithCompletion:
_waitForTransaction
_waitUntilSubmanagersReady
_withdrawNotificationRequestsWithIdentifiers:
_workoutNotificationStep
_workoutsAfterAnchor:withPredicate:profile:
_workoutsForActivitySnapshot:anchor:completion:
_workoutsToPushWithYesterdaySnapshot:todaySnapshot:currentWorkoutAnchor:
_yesterdayActivitySummary
_yesterdayInProgressPushActivitySummary
_yesterdayLastPushedActivitySummary
_zoneChangeTokensByZoneID
aa_isManagedAppleID
aa_primaryAppleAccount
absoluteString
acceptCompetitionRequestFromFriendWithUUID:completion:
acceptInviteRequestFromFriendWithUUID:completion:
acceptSharesWithURLs:completion:
accountStatusWithCompletionHandler:
achievementAnchor
achievementCompletionEventWithAchievement:
achievementManager
achievementNotifications
achievementStore
achievementStore:didAddAchievements:
achievementStore:didRemoveAchievements:
achievementStore:didUpdateAchievements:
achievementStoreDidFinishInitialFetch:
achievementWithTemplateUniqueName:
achievementWithTemplateUniqueName:completedDate:value:friendUUID:
achievements
achievementsForFriendWithUUID:
actionIdentifier
actionWithIdentifier:title:options:
activeDeviceInfo
activeEnergyBurned
activeEnergyBurnedGoal
activityDataBulletinManager
activityDataManager
activityDataManager:didUpdateTodaySummary:yesterdaySummary:
activityDataPreview
activityDataRecordZoneID
activityDataRootRecordID
activityMoveMode
activityShareURL
activitySharingManager
activitySharingManagerForProfile:
activitySharingManagerReady:
activitySnapshot
activitySnapshotsForFriendWithUUID:
addBulletins:
addDelegate:queue:
addEarnedInstances:completion:
addEntriesFromDictionary:
addFriendListObserver:
addJournalEntries:error:
addJournalEntry:error:
addMigrationForSchema:toVersion:foreignKeyStatus:handler:
addNotificationRequest:withCompletionHandler:
addObject:
addObjectsFromArray:
addObserver:
addObserver:forDataType:
addObserver:selector:name:object:
addOperation:
addParticipantWithCloudKitAddress:toShares:completion:
addProtectedDataObserver:
addProvider:
addTemplates:completion:
addresses
alertBody
alertSuppressionInvalidatedForSuppressionId:reason:
alertSuppressionService
allAchievementsWithError:
allDatabaseCompetitionsWithProfile:withError:
allFriends
allObjects
allTemplates
allValues
allocWithZone:
allowableByContactsHandles:
allowedByScreenTime
anyObject
appleExerciseTime
appleExerciseTimeGoal
appleMoveMinutes
appleMoveMinutesGoal
appleStandHoursGoal
applyEntries:withProfile:
applyPropertiesToObject:persistentID:row:error:
archivedCompetitionListForFriendWithUUID:
archivedDataWithRootObject:requiringSecureCoding:error:
areFitnessAppsRestricted
array
arrayByAddingObject:
arrayByAddingObjectsFromArray:
arrayWithObjects:count:
as_autoreleasingCompactMap:
autorelease
awaitingSentinelKey
badgeCount
beginHandlingOperations
beginObserving
beginObservingData
beginPeriodicUpdates
beginReceivingMessages
behavior
blocksWaitingOnSuccess
body
boolForKey:
boolValue
bulletinPostingManager
bulletinPostingManager:didReceiveNotificationResponse:
bulletins
cancel
cancelAllExecutingFetches
capabilities
categoryWithIdentifier:actions:intentIdentifiers:options:
changeTokenCacheFromUserDefaultsWithSerialQueue:
class
clearFriendListWithCompletion:
clientProxy
client_deliverFriendList:queryUUID:
cloudKitAccountStatusWithCompletion:
cloudKitManager:didBeginUpdatesForFetchWithType:
cloudKitManager:didEndUpdatesForFetchWithType:
cloudKitManager:didReceiveNewActivitySnapshotsForSelf:moreComing:changesProcessedHandler:
cloudKitManager:didReceiveNewCompetitionLists:moreComing:changesProcessedHandler:
cloudKitManager:didReceiveNewCompetitionListsForSelf:moreComing:changesProcessedHandler:
cloudKitManager:didRecieveNewActivitySnapshots:moreComing:changesProcessedHandler:
cloudKitManager:didRecieveNewFriendAchievements:moreComing:changesProcessedHandler:
cloudKitManager:didRecieveNewFriendWorkouts:moreComing:changesProcessedHandler:
cloudKitManager:didRecieveNewNotificationEvents:moreComing:changesProcessedHandler:
cloudKitManager:didRecieveNewRelationships:fromRecordZoneWithID:moreComing:changesProcessedHandler:
cloudKitManager:didRecieveNewRemoteRelationships:fromRecordZoneWithID:moreComing:changesProcessedHandler:
cloudKitManager:didUpdateAccountStatus:
codableContactIncludingCloudKitFields:
codableDatabaseCompetitionListEntryForOwner:
codableDatabaseCompetitionsFromCompetitions:withFriendWithUUID:withType:
codableFriendIncludingCloudKitFields:
codableRepresentationForPersistentID:row:error:
codableWorkout
code
columnDefinitionsWithCount:
compare:
compare:options:
competition
competitionBulletinManager
competitionListFromCodableDatabaseCompetitionList:codableCompetitions:withType:
competitionListWithRecord:
competitionManager
competitionManager:didUpdateCompetitionsForFriendsWithUUIDs:
competitionManagerDidLoadCachedCompetitions:
competitionStage
competitions
competitionsForFriendWithUUID:
completeCompetitionWithFriendWithUUID:completion:
completedCompetitions
completedDate
components:fromDate:
components:fromDate:toDate:options:
compoundPredicateWithPredicate:otherPredicate:
configurationClass
conformsToProtocol:
connection
connection:channelSubscriptionsFailedWithFailures:
connection:didChangeConnectedStatus:
connection:didFailToSendOutgoingMessage:error:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didReceivePublicToken:
connection:didReceiveToken:forInfo:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveURLToken:forInfo:
connection:didReceiveURLTokenError:forInfo:
connection:didSendOutgoingMessage:
connectionConfigured
connectionDidReconnect:
connectionInterrupted
connectionInvalidated
contactMatchingCriteriaBlock:
contactWithCodableContact:
contactWithDestinations:
contactWithUUID:
contacts
contactsManagerDidUpdateContacts:
container
containerWithIdentifier:
containerWithNotificationRequest:friendUUID:bulletinType:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
copy
copyWithZone:
count
countByEnumeratingWithState:objects:count:
countUnit
createContactWithDestinations:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
createShareAndAssociatedZoneWithShareRecordID:rootRecord:otherRecordsToSave:completion:
createShareWithRootRecord:otherRecordsToSave:completion:
createTaskServerWithUUID:configuration:client:delegate:error:
createdDate
currentAchievements
currentActivitySnapshot
currentActivitySummary
currentActivitySummaryHelper
currentActivitySummaryHelper:didUpdateTodayActivitySummary:changedFields:
currentActivitySummaryHelper:didUpdateYesterdayActivitySummary:changedFields:
currentCacheIndex
currentCompetition
currentCompetitionListForFriendWithUUID:
currentOrMostRecentCompetition
currentRelationshipEventAnchor
currentRemoteCompetitionForContact:
currentSchemaVersionForProtectionClass:
customPlaceholderValuesForTemplate:
customPlaceholderValuesForTemplate:error:
daemon
daemonReady:
data
dataManager
dataProvenanceManager
dataProvider
dataWithContentsOfURL:options:error:
database
database:protectedDataDidBecomeAvailable:
databaseCompetition
databaseEntitiesForProtectionClass:
databaseForEntityClass:
databaseScope
databaseTable
date
dateActivityDataInitiallyBecameVisibleToMe
dateByAddingTimeInterval:
dateByAddingUnit:value:toDate:options:
dateForKey:error:
dateForLatestIncomingCompetitionRequest
dateForLatestIncomingInviteRequest
dateForLatestOutgoingCompetitionRequest
dateFromComponents:
dateOfLastSuccessfulFetch
dateWithTimeIntervalSinceReferenceDate:
debugDescription
decimalDigitCharacterSet
decodeIntegerForKey:
decodeObjectOfClass:forKey:
defaultCenter
defaultLocalDataProvenance
defaultManager
delegate
deleteActivityDataForFriendWithUUID:
deleteAllActivitySharingData
deleteCachedCompetitions
deleteDataObjectsOfClass:predicate:limit:deletedSampleCount:notifyObservers:generateDeletedObjects:recursiveDeleteAuthorizationBlock:error:
deleteEntitiesWithPredicate:healthDatabase:error:
deletedWorkoutEventWithUUID:
deregisterBulletins
description
descriptorForRequiredKeysForStyle:
destinations
deviceLocalActivitySharingKeyValueDomain
dictionary
dictionaryForKey:
dictionaryRepresentation
dictionaryWithCapacity:
dictionaryWithDictionary:
dictionaryWithObjects:forKeys:count:
didAddSamplesOfTypes:anchor:
discoverabilitySignal
displayName
distantPast
domain
doubleForKey:
doubleValue
doubleValueForUnit:
duration
durationDateComponents
earnedDateComponents
earnedInstancesForHistoricalInterval:
earnedInstancesForHistoricalInterval:databaseContext:
earnedInstancesForIncrementalInterval:
emailAddresses
encodeInteger:forKey:
encodeObject:forKey:
encodeWithCoder:
endDateCacheIndex
endHandlingOperations
endObserving
endObservingData
endPeriodicUpdates
endReceivingMessages
energyBurned
energyBurnedGoal
enqueueBulletins:withPostingSyle:
entityEncoderForProfile:transaction:purpose:encodingOptions:authorizationFilter:
entityEnumeratorWithType:profile:
enumerateAchievementsWithPredicate:anchor:profile:error:handler:
enumerateAllCompetitionListsWithProfile:error:handler:
enumerateIncludingDeletedObjects:error:handler:
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
enumeratePersistentIDsAndProperties:error:enumerationHandler:
enumerateProperties:withPredicate:healthDatabase:error:enumerationHandler:
enumerateQueuedMessagesUsingBlock:
enumerateSnapshotsWithPredicate:anchor:profile:error:handler:
enumerateWorkoutsWithPredicate:anchor:profile:error:handler:
ephemeralAchievementWithTemplateUniqueName:
ephemeralAchievementWithTemplateUniqueName:error:
ephemeralCompletionBlock
errorWithDomain:code:userInfo:
executeSQL:error:bindingHandler:enumerationHandler:
expireChangeTokenWithCompletion:
exportedInterface
extensionForHealthDaemon:
extensionForProfile:
fakeBulletinManager
fakeCompetitionWithStartDate:winningParticipant:
fakeCompleteSnapshot
fakeFirstGlanceFriendListForMarketing
fakeFriend
fakeFriendAchievement
fakeFriendWithCompetitionStatus:competition:
fakeGuidedRunWorkout
fakeGuidedWalkWorkout
fakeSnapshot
fakeTiedCompetitionWithStartDate:
fakeVideoWorkout
fakeWorkout
fakeWorkoutWithSeymourCatalogWorkoutIdentifier:seymourMediaType:
fakingManager
fetchActivityAlertSuppressionStateWithCompletion:
fetchAllChangesIfTimeSinceLastFetchIsGreaterThan:priority:activity:completion:
fetchAllChangesWithPriority:activity:completion:
fetchAllDataIfTimeSinceLastFetchIsGreaterThan:completion:
fetchAllDataWithCompletion:
fetchAreMultipleDevicesSharingDataForSnapshotIndex:withCompletion:
fetchChangesInPrivateDatabaseWithServerChangeTokenCache:priority:activity:completion:
fetchChangesInSharedDatabaseWithServerChangeTokenCache:priority:activity:completion:
fetchCloudKitAccountStatusWithCompletion:
fetchCloudKitAddressWithCompletion:
fetchFriendWithRemoteUUID:completion:
fetchFullNameAndPrimaryEmailOnAccountWithCompletionHandler:
fetchOrCreateActivityDataShareWithCompletion:
fetchShareParticipantForEmailAddress:completion:
fetchShareParticipantWithCloudKitAddress:completion:
fetchShareWithShareRecordID:completion:
fetchfriendDataWithRemoteUUID:completion:
fileURLWithPath:isDirectory:
filterNotificationGroup:
filter_date
filter_friendUUID
filteredArrayUsingPredicate:
filteredSetUsingPredicate:
finishDecoding
firstObject
fitnessAppsStateObserver
fitnessAppsStateObserver:applicationInstallStateDidChangeForBundleIdentifiers:
fitnessAppsStateObserver:restrictedStateDidChange:
fitnessFriendAchievementType
fitnessFriendAchievementWithRecord:friendUUID:
fitnessFriendActivitySnapshotType
fitnessFriendActivitySnapshotWithCodableSnapshot:friendUUID:uploadedDate:
fitnessFriendActivitySnapshotWithRecord:friendUUID:
fitnessFriendWorkoutFromHKWorkout:
fitnessFriendWorkoutType
fitnessFriendWorkoutWithCodableWorkout:
fitnessFriendWorkoutWithRecord:friendUUID:
fitnessFriendworkoutWithActivityType:friendUUID:startDate:endDate:duration:totalActiveEnergyBurned:totalBasalEnergyBurned:totalDistance:goalType:goal:bundleID:isWatchWorkout:isIndoorWorkout:deviceManufacturer:deviceModel:amm:seymourCatalogWorkoutIdentifier:seymourMediaType:
fitnessMode
forceSaveRecordsIntoPrivateDatabaseIgnoringServerChanges:recordIDsToDelete:priority:activity:completion:
friend
friendAchievedDescriptionForAchievement:
friendAchievedTitleForAchievement:
friendAchievements
friendInviteBulletinManager
friendInviteBulletinManagerDidReceiveActionResponse:fromContactWithUUID:
friendListData
friendListDidLoadCompetitions
friendListDidUpdate:
friendListManager
friendUUID
friendWorkouts
fullName
gatewayManager
gatewayManagerStatusDidChange
gatewayStatusWithCompletion:
getNotificationCategoriesWithCompletionHandler:
getWristState:
goalCompletionAnchor
goalCompletionEventWithActivitySummary:
goalCompletionNotifications
handleDatabaseObliteration
handleNotificationResponse:completion:
handleReceiveMessageAction
handshakeToken
hasCalculatedFinalScore
hasCompetitionHistory
hasCompletedCompetition
hasCompletedFirstFetch
hasFriendsToShareWith
hasIgnoredCompetitionRequest
hasIncomingCompetitionRequest
hasIncomingInviteRequest
hasInviteRequestFromMe
hasOutgoingCompetitionRequest
hasOutgoingInviteRequest
hasPushedFinalScore
hasReachedMaximumNumberOfFriends
hasRegisteredForUpdates
hash
hkWorkoutFromFriendWorkout
hk_UUIDWithData:
hk_dataForUUIDBytes
hk_filter:
hk_firstObjectPassingTest:
hk_gregorianCalendar
hk_isAfterOrEqualToDate:
hk_isBeforeDate:
hk_mapToSet:
hk_minus:
hk_startOfDateByAddingDays:toDate:
iconNamed:
identifier
ignoreCompetitionRequestFromFriendWithUUID:completion:
ignoreInviteRequestFromFriendWithUUID:completion:
incomingHandshakeToken
indexOfObjectPassingTest:
init
initForCreatorDevice:
initForReadingFromData:error:
initWithActionIdentifier:userInfo:
initWithActivitySnapshots:friendAchievements:friendWorkouts:contact:competitions:
initWithArray:
initWithBundleIdentifier:
initWithCapacity:
initWithCategory:domainName:profile:
initWithCodable:
initWithCoder:
initWithCompetitionList:
initWithConfiguration:
initWithContainer:
initWithData:
initWithDatabaseCompetition:
initWithDescription:targetSerialQueue:
initWithDictionary:
initWithFriendUUID:type:
initWithHealthEntityClass:profile:transaction:purpose:encodingOptions:authorizationFilter:
initWithIdentifier:bundleID:context:
initWithIsWatch:
initWithNotificationRequest:friendUUID:bulletinType:
initWithPreviousServerChangeToken:
initWithProfile:
initWithProfile:isWatch:
initWithProtobufData:type:isResponse:
initWithQueueName:
initWithRecordID:action:
initWithRecordIDs:
initWithRecordName:zoneID:
initWithRecordZoneIDs:configurationsByRecordZoneID:
initWithRecordZonesToSave:recordZoneIDsToDelete:
initWithRecordsToSave:recordIDsToDelete:
initWithRootRecord:shareID:
initWithSerialQueue:
initWithService:
initWithServiceIdentifier:
initWithSet:copyItems:
initWithShareMetadatas:
initWithShareURLs:
initWithSource:version:
initWithSubscriptionID:
initWithSubscriptionsToSave:subscriptionIDsToDelete:
initWithSubtitle:body:
initWithSuiteName:
initWithToken:
initWithUUID:client:activitySharingManager:
initWithUUID:configuration:client:delegate:
initWithUUIDString:
initWithUserIdentityLookupInfos:
initWithZoneName:ownerName:
initializeFriendListAndBeginObserving
insertDataObjects:withProvenance:creationDate:skipInsertionFilter:error:
insertEventWithType:
insertEventWithType:timestamp:
insertPlaceholderRelationshipEvent:friendUUID:
installStateForBundleIdentifier:
integerForKey:
integerValue
invalidate
inviteCompatibilityVersion
inviteRequestToMeWasAccepted
inviteeBuildNumber
inviteeCloudKitAddress
inviteeShareLocations
inviteeVersion
inviterBuildNumber
inviterCloudKitAddress
inviterShareLocations
inviterVersion
isActivityDataVisible
isActivityDataVisibleToMeForDate:
isAppleInternalInstall
isAppleWatch
isAwaitingCompetitionResponse
isAwaitingInviteResponse
isCompetitionActive
isDataProtectedByFirstUnlockAvailable
isDate:inSameDayAsDate:
isDateInToday:
isDateInYesterday:
isEqual:
isEqualToDate:
isEqualToNumber:
isEqualToSet:
isEqualToString:
isEquivalentToUserIdentity:
isEquivalentToUserIdentityOrPublicKey:
isExpired
isFriendshipActive
isFriendshipCurrentlyActive
isHidingActivityData
isHidingActivityDataFromMeForDate:
isInviteVersionCompatible:
isKindOfClass:
isMemberOfClass:
isMuteEnabled
isParticipantWinning:
isProtectedDataAvailable
isReadyToProcessChanges
isScoreTied
isStandalonePhoneFitnessMode
lastDayOfCompetition
lastObject
linkedContactStoreIdentifier
listenerEndpointForClient:error:
loadBulletins
loadCachedCompetitions
loadCachedContacts
localDeviceSourceWithError:
localTimeZone
localizationBundleURLForTemplate:
localizedName
localizedStringForKey:value:table:
localizedStringWithFormat:
longLongValue
lookupInfosWithEmails:
managerStartAction
maximumAllowedDuration
maximumNumberOfPointsPerDay
messageCenter:didReceiveFinalizeHandshake:fromSenderAddress:messageHandledCompletion:
messageCenter:didReceiveInviteRequest:fromSenderAddress:messageHandledCompletion:
messageCenter:didReceiveInviteResponse:fromSenderAddress:messageHandledCompletion:
messageCenter:didReceiveWithdrawInviteRequest:fromSenderAddress:messageHandledCompletion:
messageCenter:errorSendingFinalizeHandshake:
messageCenter:errorSendingInviteRequest:
messageCenter:errorSendingInviteResponse:
messageCenter:errorSendingWithdrawInviteRequest:
messageWithIdentifier:
meterUnit
methodForSelector:
mileUnit
minuteUnit
mobileAssetVersionForTemplate:
modificationDate
mostRecentlyCompletedCompetition
mutableCopy
myTotalScore
nanoSyncManager:pairedDevicesChanged:
negatedPredicate:
notification
notificationEventWithRecord:friendUUID:
notificationEventsToPushWithYesterdaySnapshot:todaySnapshot:achievements:workouts:currentDeletedWorkoutAnchor:currentGoalCompletionAnchor:
notificationFromRemoteNotificationDictionary:
notificationManager:didReceiveActionResponse:fromContactWithUUID:
notificationRequest
notificationRequestType
notificationRulesEngine
notificationTopics
notifyAchievementToken
notifyBatchToken
notifyCompetitionAcceptToken
notifyCompetitionEndLoserToken
notifyCompetitionEndTieToken
notifyCompetitionRequestToken
notifyCompetitionScoreCapCelebrationToken
notifyGoalCompletionDuringCompetitionToken
notifyGoalCompletionToken
notifyGuidedRunWorkoutToken
notifyGuidedWalkWorkoutToken
notifyInviteRequestToken
notifyInviteResponseToken
notifyObserverBlock
notifyOfFakeInviteNeedsSetupToken
notifyOfFakeSignInToken
notifyOfFakeUpgradeToken
notifyVideoWorkoutToken
notifyWorkoutToken
numberForKey:error:
numberOfCompetitionWinsByMe
numberWithDouble:
numberWithInt:
numberWithInteger:
numberWithLongLong:
numberWithUnsignedInt:
numberWithUnsignedInteger:
objectForKey:
objectForKeyedSubscript:
objectForPersistentID:row:error:
objectTransformationBlock
objectsTransformationBlock
objectsTransformedFromRecords:cloudKitManager:
observerDidBecomeReadyToProcessChanges:
onQueue:
onWristMonitorUpdatedOnWristState
opponentScores
opponentScoresCount
opponentTotalScore
orderedProperties
outgoingHandshakeToken
outgoingResponseIdentifier
owner
ownerName
pairedDevicesSnapshot
participants
path
performReadTransactionWithHealthDatabase:error:block:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performTransaction:
performWhenDataProtectedByFirstUnlockIsAvailable:
performWriteTransactionWithHealthDatabase:error:block:inaccessibilityHandler:
periodicUpdateManager
periodicUpdateManager:didFailToSaveRecords:
periodicUpdateManager:didSaveRecords:
persistToUserDefaults
phoneNumbers
placeholderContactWithUUID:
placeholderContacts
pluginIdentifier
postFakeBulletins:
postNotificationName:object:
postNotificationRequest:
predicate
predicateWithBlock:
predicateWithProperty:equalToValue:
predicateWithProperty:greaterThanOrEqualToValue:
predicateWithProperty:lessThanValue:
preferredReachableAddress
preferredReachableService
preferredVictoryBadgeStyles
preferredVictoryBadgeStylesCount
prepareForObliteration
primaryDestinationForMessaging
privateCloudDatabase
processPersistedMessageQueue
processRetryMessageQueue
processRetryMessages
processingStarted
profileExtensionsConformingToProtocol:
profileType
propertyListBundleURLForTemplate:
protectedDatabase
protobufClass
pushActivityDataToAllFriendsWithCompletion:
pushFakeActivityDataToAllFriendsWithCompletion:
quantityWithUnit:doubleValue:
queryAppBadgeCountWithCompletion:
queryClass
queryUUID
queryWithDatabase:predicate:
rangeOfCharacterFromSet:
readyForOperations
reason
recordID
recordIDForFriendUUID:
recordIDsToDelete
recordType
recordTypes
recordWithZoneID:
recordsFromActivityDataCodables:
recordsToSave
registerAlertSuppressionObserver:
registerBlockWaitingOnSuccess:
registerBulletins
registerForDaemonReady:
registerMigrationStepsForProtectionClass:migrator:
registerTemplateSource:awardingSource:
relationship
relationshipEvents
relationshipManager
relationshipShareID
relationshipShareURL
relationshipZone
relationshipsWithRelationshipAndEventRecords:
relevantEarnedInstance
remoteActivityDataShareID
remoteRelationship
remoteRelationshipShareID
remote_acceptCompetitionRequestFromFriendWithUUID:completion:
remote_acceptInviteRequestFromFriendWithUUID:completion:
remote_clearFriendListWithCompletion:
remote_cloudKitAccountStatusWithCompletion:
remote_completeCompetitionWithFriendWithUUID:completion:
remote_expireChangeTokenWithCompletion:
remote_fetchAllDataIfTimeSinceLastFetchIsGreaterThan:completion:
remote_fetchAllDataWithCompletion:
remote_fetchAreMultipleDevicesSharingDataForSnapshotIndex:withCompletion:
remote_friendWithRemoteUUID:completion:
remote_handleNotificationResponse:completion:
remote_ignoreCompetitionRequestFromFriendWithUUID:completion:
remote_ignoreInviteRequestFromFriendWithUUID:completion:
remote_pushActivityDataWithCompletion:
remote_pushFakeActivityDataWithCompletion:
remote_queryAppBadgeCountWithCompletion:
remote_removeFriendWithUUID:completion:
remote_sendCompetitionRequestToFriendWithUUID:completion:
remote_sendInviteRequestToDestination:callerID:serviceIdentifier:completion:
remote_sendWithdrawInviteRequestToFriendWithUUID:completion:
remote_setActivityDataVisible:toFriendWithUUID:completion:
remote_setMuteEnabled:forFriendWithUUID:completion:
removeAllBulletins
removeAllCompetitionListsWithProfile:error:
removeAllCompetitionsWithProfile:error:
removeAllObjects
removeAllPlaceholderContacts
removeAllTemplates
removeAllUnusedTemplates
removeBulletinsMatchingCriteria:
removeBulletinsOlderThanInterval:
removeCompetitionNotificationsForFriendUUID:
removeCompetitionsForFriendUUID:type:profile:withError:
removeDeliveredNotificationsWithIdentifiers:
removeFriendListObserver:
removeFriendWithUUID:completion:
removeItemAtPath:error:
removeMessageWithIdentifier:
removeNotificationWithIdentifier:
removeObject:
removeObjectForKey:
removeObserver:forDataType:
removeObserver:name:object:
removeParticipant:
removeParticpantWithCloudKitAddress:fromShares:completion:
removePersistentDomainForName:
removePlaceholderContactWithToken:
removePlaceholderRelationshipEventWithToken:
removeProtectedDataObserver:
removeRecordIDForFriendUUID:
removeTemplates:completion:
removeTemplates:error:
removeTemplatesForSource:completion:
removeTemplatesWithUniqueNames:completion:
removeUnusedTemplatesForFriendWithUUID:
requestEarnedInstanceUpdate
requestImmediateUpdateForTemplateSource:
requestImmediateUpdateWithCompletion:
requestIncrementalEvaluationForAwardingSource:evaluationBlock:
requestTemplateUpdate
requestWithIdentifier:content:trigger:
requiredEntitlements
resourceBundleURLForTemplate:
respondsToSelector:
responseCode
retain
retainCount
retryCount
runCadence
sample
sampleType
samplesAdded:anchor:
samplesJournaled:type:
samplesOfTypesWereRemoved:anchor:
samplesWithType:profile:encodingOptions:predicate:limit:anchor:error:
saveActivitySnapshots:workouts:achievements:
saveCompetitionList:profile:withError:
saveCompetitionLists:
saveCompetitions:profile:withError:
saveContact:
savePlaceholderContact:
saveRecordsIntoPrivateDatabase:priority:activity:completion:
saveRecordsIntoPrivateDatabase:priority:completion:
saveRemoteCompetitionList:
saveSubscriptions:andDeleteSubscriptionsWithIdentifiers:inDatabase:completion:
schemaName
scores
scoresCount
secondsFromGMT
self
sendCompetitionRequestToFriendWithUUID:completion:
sendEvent:
sendFinalizeHandshake:toDestinations:completion:
sendInviteRequest:toDestinations:completion:
sendInviteRequestToDestination:callerID:serviceIdentifier:completion:
sendInviteResponse:toDestinations:completion:
sendInviteToPersonWithDestination:callerID:serviceIdentifier:completion:
sendProtobuf:toDestinations:priority:options:identifier:error:
sendWithdrawInviteRequest:toDestinations:completion:
sendWithdrawInviteRequestToFriendWithUUID:completion:
senderAddress
sentInviteResponse
sentinelKey
serverChangeTokenForDatabase:
serverChangeTokenForRecordZoneID:
serverPreferredPushEnvironmentWithCompletionHandler:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:sentBytes:totalBytes:
service:account:incomingData:fromID:context:
service:account:incomingMessage:fromID:context:
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:receivedGroupSessionParticipantDataUpdate:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantUpdate:context:
service:activeAccountsChanged:
service:connectedDevicesChanged:
service:devicesChanged:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:didSwitchActivePairedDevice:acknowledgementBlock:
service:linkedDevicesChanged:
service:nearbyDevicesChanged:
serviceAllowedTrafficClassifiersDidReset:
serviceIdentifier
setAchievementAnchor:
setAchievementData:
setAchievementManager:
setAchievementNotifications:
setAchievements:
setActiveEnergyBurned:
setActiveEnergyBurnedGoal:
setActivityDataManager:
setActivityDataPreview:
setActivityDataVisible:toFriendWithUUID:completion:
setActivityMoveMode:
setActivityShareURL:
setActivitySharingManager:
setActivitySnapshot:
setAddresses:
setAlertBody:
setAlertTopic:
setAnchor:
setAppleExerciseTime:
setAppleExerciseTimeGoal:
setAppleMoveMinutesGoal:
setAppleMoveTime:
setAppleMoveTimeGoal:
setAppleStandHours:
setAppleStandHoursGoal:
setAssumedIdentity:
setAtomic:
setAutomaticallyRetryNetworkFailures:
setBody:
setByAddingObject:
setByAddingObjectsFromArray:
setByAddingObjectsFromSet:
setCapabilities:
setCategoryIdentifier:
setCloudKitAddress:
setCloudKitManager:
setCloudKitUtility:
setCompetitionManager:
setCompetitionStage:
setCompetitions:
setCompletedDate:
setConfiguration:
setContact:
setContacts:
setContactsManager:
setContactsUsingTransaction:
setContainer:
setCurrentCacheIndex:
setDataProvider:
setDate:
setDate:forKey:error:
setDateOfLastSuccessfulFetch:
setDelegate:
setDestinations:
setDiscretionaryNetworkBehavior:
setDistanceWalkingRunning:
setDouble:forKey:
setDurationDateComponents:
setEarnedDateComponents:
setEphemeralCompletionBlock:
setExpirationDate:
setExpired:
setFetchAllChanges:
setFetchDatabaseChangesCompletionBlock:
setFetchRecordZoneChangesCompletionBlock:
setFetchShareMetadataCompletionBlock:
setFetchShareParticipantsCompletionBlock:
setFriend:
setFriendAchievements:
setFriendListData:
setFriendListManager:
setFriendUUID:
setFriendWorkouts:
setFullName:
setGoalCompletionAnchor:
setHandleErrorSendingMessageAction:
setHandleReceiveMessageAction:
setHandshakeToken:
setHasCompletedFirstFetch:
setIcon:
setIncomingHandshakeToken:
setInviteeBuildNumber:
setInviteeCloudKitAddress:
setInviteeShareLocations:
setInviteeVersion:
setInviterBuildNumber:
setInviterCallerID:
setInviterCloudKitAddress:
setInviterShareLocations:
setInviterVersion:
setIsWatch:
setIsWatchWorkout:
setLimitCount:
setLinkedContactStoreIdentifier:
setManagerStartAction:
setMessage:identifier:
setModifyRecordZonesCompletionBlock:
setModifyRecordsCompletionBlock:
setModifySubscriptionsCompletionBlock:
setMuteEnabled:forFriendWithUUID:completion:
setName:
setNotificationCategories:
setNotificationInfo:
setNotificationRulesEngine:
setNotifyObserverBlock:
setNumber:forKey:error:
setObject:forKey:
setObject:forKeyedSubscript:
setObjectTransformationBlock:
setObjectsTransformationBlock:
setOpponentScores:
setOpponentScores:count:
setOutgoingHandshakeToken:
setOwner:
setParent:
setParticipantVisibility:
setPayload:
setPerShareCompletionBlock:
setPerShareMetadataBlock:
setPeriodicUpdateManager:
setPermission:
setPredicate:
setPreferredReachableAddress:
setPreferredReachableService:
setPreferredVictoryBadgeStyles:count:
setPreviousServerChangeToken:
setProfile:
setProtobufClass:
setQualityOfService:
setReadyForOperations:
setRecordChangedBlock:
setRecordType:
setRecordZoneChangeTokensUpdatedBlock:
setRecordZoneFetchCompletionBlock:
setRecordZoneWithIDChangedBlock:
setRelationship:
setRelationshipManager:
setRelationshipShareURL:
setRemoteActivityDataShareID:
setRemoteRelationship:
setRemoteRelationshipShareID:
setResponseCode:
setRetryCount:
setSample:
setSavePolicy:
setScores:
setScores:count:
setSenderAddress:
setServerChangeToken:forDatabase:
setServerChangeToken:forRecordZoneID:
setShareParticipantFetchedBlock:
setShortName:
setShouldNotifyObserverBlock:
setShouldSendContentAvailable:
setSnapshotData:
setSnapshots:
setSound:
setSourceApplicationBundleIdentifier:
setSourceUUID:
setStartDateComponents:
setStepCount:
setString:forKey:error:
setStyles:count:
setSubtitle:
setSystemFieldsOnlyRecord:
setTemplateUniqueName:
setThreadIdentifier:
setTimeZone:
setTimestamp:
setTitle:
setToken:
setTopicIdentifiers:
setType:
setUUID:
setUserInfo:
setUuid:
setValue:
setWantsNotificationResponsesDelivered
setWithArray:
setWithCapacity:
setWithObject:
setWithSet:
setWorkoutAnchor:
setWorkoutNotifications:
setWorkouts:
setupManager
seymourMediaType
share
shareURLForShare:
sharedBehavior
sharedCloudDatabase
shouldFilterIncomingMessageFromContact:
shouldLoadPluginForDaemon:
shouldNotifyObserverBlock
showActivityNotifications:withPostingStyle:
showCompetitionAcceptedNotificationForFriend:competition:withPostingStyle:
showCompetitionEndedNotificationForFriend:competition:withPostingStyle:
showCompetitionRequestNotificationForFriend:competition:withPostingStyle:
showCompetitionScoreCapCelebrationForFriends:withPostingStyle:
showErrorAcceptingInviteFrom:
showGizmoVersionTooLowForCompetitionRequestFrom:
showInviteAcceptResponseFrom:
showInviteAttemptNeedToSignInFrom:
showInviteAttemptNeedToUpgradeFrom:
showInviteAttemptNeedsSetupFromContact:
showInviteRequestFromContact:withPostingStyle:
showMaxNumberOfFriendsError
showVersionTooHighForOutgoingInviteTo:
showVersionTooLowForIncomingInviteFrom:
showVersionTooLowForOutgoingInviteTo:
snapshotData
snapshotIndex
snapshotUploadedDate
snapshotWithActivitySummary:
snapshots
sortedArrayUsingComparator:
soundWithAlertType:
source
sourceBundleIdentifier
sourceManager
sourceName
sourceShouldRunForDate:
sourceUUID
sourceUUIDForBundleIdentifier:error:
sourceUUIDWithHealthDatabase:error:
stage
standardUserDefaults
startDate
startDateComponents
startOfDayForDate:
stickerBundleURLForTemplate:
string
stringByAppendingString:
stringForKey:error:
stringValue
stringWithFormat:
stringWithUTF8String:
styles
stylesCount
subscriptionID
subtitle
superclass
supportsActivitySharing
supportsSecureCoding
synchronize
synchronizeUserDefaultsDomain:keys:
systemFieldsOnlyRecord
taskIdentifier
taskServerClasses
taskUUID
template
templateForUniqueName:
templateSourceDidUpdateAssets:
templateStore
templateUniqueName
templatesForDate:completion:
templatesForDate:databaseContext:completion:
timeIntervalSinceReferenceDate
timeZone
timestamp
timestampForMostRecentRelationshipEvent
tinkerModeEnabled
title
todayActivitySummary
token
topic
topicIdentifiers
transactionWithOwner:
transactionWithOwner:activityName:
traverseRelationshipHistoryStartingAtEventWithAnchor:block:
triggerUUID
truePredicate
type
unifiedContactWithIdentifier:keysToFetch:error:
unifiedContactsMatchingPredicate:keysToFetch:error:
uniqueName
uniquedColumns
unregisterAlertSuppressionObserver:
unsignedIntValue
unusedTemplateNamesForFriendWithUUID:
updateAllActiveCompetitionsWithScores:completion:
updateFriendListWithDeletedWorkoutEvents:
updateFriendListWithNewSnapshots:achievements:workouts:
updateRelationshipWithCompetitionEvent:friendUUID:completion:
updateRelationshipsForCurrentFeatureSupportWithCompletion:
updateState
userIdentity
userInfo
userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:
userNotificationCenter:openSettingsForNotification:
userNotificationCenter:willPresentNotification:withCompletionHandler:
uuid
validateClient:error:
validateConfiguration:client:error:
validatedSamplesFromAchievements:workouts:activitySnapshots:friendListManager:
value
valueForKey:
victoryBadgeStyle
weakObjectsHashTable
withdrawCompetitionRequestNotificationForFriendWithUUID:
withdrawInviteNotificationsForContact:
workoutActivityType
workoutAnchor
workoutCompletionEventWithWorkout:
workoutData
workoutNotifications
workoutType
workouts
workoutsForFriendWithUUID:
writeToURL:options:error:
yesterdayActivitySummary
zone
zoneID
zoneName
@24@0:8@16
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@32@0:8@16^@24
v16@0:8
@"NSXPCListenerEndpoint"32@0:8@"HDXPCClient"16^@24
@"ASActivitySharingManager"16@0:8
@"NSSet"16@0:8
v24@0:8@16
@"HDProfile"
@"ASActivitySharingManager"
@32@0:8@16@24
@"NSSet"24@0:8@"NSDateInterval"16
@"NSSet"32@0:8@"NSDateInterval"16@"HDDatabaseTransactionContext"24
@20@0:8C16
@32@0:8@16@?24
@"NSObject<OS_dispatch_queue>"
@"<ASCompetitionAwardingSourceDataProvider>"
r^{?=@@C}24@0:8^Q16
q16@0:8
@56@0:8@16@24q32@40@?48
B40@0:8@16@24^@32
B40@0:8@16^@24@?32
B32@0:8@16^@24
@40@0:8@16@24^@32
@40@0:8q16^{HDSQLiteRow=}24^@32
B48@0:8@16q24^{HDSQLiteRow=}32^@40
v32@0:8@16@24
@"ASCodableDatabaseCompetitionListEntry"
v24@0:8@"ASActivitySharingManager"16
@32@0:8q16@24
@32@0:8@16q24
@40@0:8@16@24@32
v24@0:8@?16
@24@0:8q16
@20@0:8B16
@"ACHAchievementStore"
@"ASActivityDataManager"
@"ASCloudKitManager"
@"ASCompetitionManager"
@"ASContactsManager"
v24@0:8q16
i16@0:8
v20@0:8i16
@?16@0:8
@"NSData"
@"NSString"
@"NSMutableDictionary"
^{__CFString=}
@"NSSet"
v48@0:8@16@24@32@?40
v48@0:8@"ASIDSMessageCenter"16@"ASCodableInviteRequest"24@"NSString"32@?<v@?q>40
v48@0:8@"ASIDSMessageCenter"16@"ASCodableInviteResponse"24@"NSString"32@?<v@?q>40
v48@0:8@"ASIDSMessageCenter"16@"ASCodableFinalizeHandshake"24@"NSString"32@?<v@?q>40
v48@0:8@"ASIDSMessageCenter"16@"ASCodableWithdrawInviteRequest"24@"NSString"32@?<v@?q>40
v32@0:8@"ASIDSMessageCenter"16@"ASCodableInviteRequest"24
v32@0:8@"ASIDSMessageCenter"16@"ASCodableInviteResponse"24
v32@0:8@"ASIDSMessageCenter"16@"ASCodableFinalizeHandshake"24
v32@0:8@"ASIDSMessageCenter"16@"ASCodableWithdrawInviteRequest"24
v32@0:8@16q24
v52@0:8@16@24@32B40@?44
v44@0:8@16@24B32@?36
v32@0:8@"ASCloudKitManager"16q24
v52@0:8@"ASCloudKitManager"16@"NSArray"24@"CKRecordZoneID"32B40@?<v@?>44
v44@0:8@"ASCloudKitManager"16@"NSArray"24B32@?<v@?>36
v32@0:8q16@24
v32@0:8q16@"NSUUID"24
v36@0:8B16@20@?28
v32@0:8@16@?24
v36@0:8S16@20@?28
v40@0:8@16q24@32
v36@0:8@16S24@?28
v40@0:8@16@24@32
@28@0:8S16@20
v28@0:8@16B24
v40@0:8@16@24@?32
@"ASAchievementManager"
@"ASFriendInviteBulletinManager"
@"ASFriendListManager"
@"ASGatewayManager"
@"<ASBulletinPostingManager>"
@"FIFitnessAppsStateObserver"
@"ASAsyncTransactionQueue"
@"NSDictionary"
@"CNContactStore"
@"<ASOnWristMonitorDelegate>"
@"ASActivityDataBulletinManager"
@"ASCompetitionBulletinManager"
@"ASFakingManager"
@40@0:8@16@24q32
@"UNNotificationRequest"
v40@0:8@16@24q32
q24@0:8@16
B24@0:8@"NSDate"16
v32@0:8@"NSDate"16@?<v@?@"NSSet"@"NSSet"@"NSError">24
@"NSURL"24@0:8@"ACHTemplate"16
v40@0:8@"NSDate"16@"HDDatabaseTransactionContext"24@?<v@?@"NSSet"@"NSSet"@"NSError">32
@"NSDictionary"32@0:8@"ACHTemplate"16^@24
q24@0:8@"ACHTemplate"16
@"NSObject<ACHTemplateSourceDelegate>"16@0:8
v24@0:8@"NSObject<ACHTemplateSourceDelegate>"16
@"NSObject<ACHTemplateSourceDelegate>"
@"<ASCompetitionTemplateSourceDataProvider>"
@"<HDHealthDaemonExtension>"24@0:8@"<HDHealthDaemon>"16
@"<HDProfileExtension>"24@0:8@"HDProfile"16
B24@0:8@"<HDHealthDaemon>"16
q24@0:8q16
@"NSArray"24@0:8q16
v32@0:8q16@"HDDatabaseMigrator"24
@"NSArray"16@0:8
v40@0:8@"UNUserNotificationCenter"16@"UNNotification"24@?<v@?Q>32
v40@0:8@"UNUserNotificationCenter"16@"UNNotificationResponse"24@?<v@?>32
v32@0:8@"UNUserNotificationCenter"16@"UNNotification"24
v24@0:8@"UNNotificationRequest"16
v24@0:8@"NSSet"16
v32@0:8@"NSSet"16q24
v24@0:8@"NSUUID"16
v24@0:8@"NSString"16
v32@0:8@"ASUserNotificationResponse"16@?<v@?B@"NSError">24
@"<ASBulletinPostingManagerDelegate>"16@0:8
v24@0:8@"<ASBulletinPostingManagerDelegate>"16
@"UNUserNotificationCenter"
@"<ASBulletinPostingManagerDelegate>"
@24@0:8^{_NSZone=}16
v20@0:8B16
v32@0:8@"NSArray"16@"NSNumber"24
v32@0:8@"NSSet"16@"NSNumber"24
v32@0:8@"NSArray"16@"HKSampleType"24
@"HDDataManager"
@"ASActivityDataNotificationRulesEngine"
@"ASPeriodicUpdateManager"
v48@0:8@16@24@32@40
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v40@0:8@"APSConnection"16@"NSData"24@"APSAppTokenInfo"32
v40@0:8@"APSConnection"16@"APSURLToken"24@"APSURLTokenInfo"32
v40@0:8@"APSConnection"16@"NSError"24@"APSURLTokenInfo"32
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
v48@0:8q16@24@32@?40
v28@0:8B16@20
v40@0:8q16@24@?32
v48@0:8Q16q24@32@?40
v56@0:8@16@24@32@40@?48
v56@0:8@16@24q32@40@?48
v40@0:8@16q24@?32
v32@0:8B16B20@?24
v32@0:8d16B24B28
v24@0:8B16B20
@"APSConnection"
@"CKShare"
@"NSHashTable"
@"ASNotificationStep"
@"NSArray"
@"ASCloudKitServerChangeTokenCache"
@"NSObject<OS_dispatch_source>"
@"NSObject<OS_dispatch_group>"
@"HDDaemonTransaction"
@"ASCloudKitUtility"
@"CKContainer"
@"NSDate"
@"ASFriend"24@0:8@"NSUUID"16
@"ASCompetitionAwardingSource"
@"ASCompetitionTemplateSource"
v24@0:8#16
:16@0:8
v24@0:8:16
v64@0:8@16@24@32@40@48@56
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32@"IDSMessageContext"40
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
@20@0:8i16
v36@0:8B16@20@28
v44@0:8@16i24@28@?36
v32@0:8:16@?24
@"IDSService"
@"ASMessageQueue"
@"<ASIDSMessageCenterDelegate>"
v24@0:8@"ASContactsManager"16
v24@0:8@"ASCompetitionManager"16
v32@0:8@"ASCompetitionManager"16@"NSSet"24
@"ASRelationshipManager"
B48@0:8@16q24@32^@40
@"ASCodableDatabaseCompetition"
@"NSUUID"
v28@0:8@"<HDHealthDatabase>"16B24
v40@0:8@"ASActivityDataManager"16@"HKActivitySummary"24@"HKActivitySummary"32
v32@0:8@"ASPeriodicUpdateManager"16@"NSArray"24
@"ASCompetitionStore"
@"NSNumber"
v24@0:8@"<HDHealthDaemon>"16
v32@0:8@"HDNanoSyncManager"16@"HKNanoSyncPairedDevicesSnapshot"24
v32@0:8@"FIFitnessAppsStateObserver"16q24
v32@0:8@"FIFitnessAppsStateObserver"16@"NSArray"24
@28@0:8@16B24
v32@0:8Q16@?24
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"ASActivityDataNotificationManager"
@"ASFakeBulletinManager"
@"ASSetupManager"
@"HDKeyValueDomain"
@56@0:8@16@24@32@40^@48
@"NSXPCInterface"16@0:8
@48@0:8@16@24@32@40
@48@0:8@"NSUUID"16@"HKTaskConfiguration"24@"HDHealthStoreClient"32@"<HDTaskServerDelegate>"40
@"NSUUID"16@0:8
@"<HDTaskServer>"56@0:8@"NSUUID"16@"HKTaskConfiguration"24@"HDHealthStoreClient"32@"<HDTaskServerDelegate>"40^@48
B32@0:8@"HDHealthStoreClient"16^@24
B40@0:8@"HKTaskConfiguration"16@"HDHealthStoreClient"24^@32
v48@0:8@"NSString"16@"NSString"24@"NSString"32@?<v@?B@"NSError">40
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v36@0:8B16@"NSString"20@?<v@?B@"NSError">28
v24@0:8@?<v@?B@"NSError">16
v32@0:8Q16@?<v@?B@"NSError">24
v24@0:8@?<v@?BB@"NSError">16
v32@0:8@"NSNumber"16@?<v@?BB@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSData"B@"NSError">24
v24@0:8@?<v@?@"NSNumber"B@"NSError">16
@"HDHealthStoreClient"
v40@0:8@16@24Q32
v40@0:8@"HDCurrentActivitySummaryHelper"16@"HKActivitySummary"24Q32
v32@0:8@"<ACHAchievementStoring>"16@"NSSet"24
v24@0:8@"<ACHAchievementStoring>"16
v44@0:8@16@24@32B40
@40@0:8^@16@24@32
@64@0:8@16@24@32@40@48@56
@"HKActivitySummary"
@"NSCalendar"
@"ASContact"
@24@0:8@?16
B20@0:8I16
I16@0:8
@"STConversation"
v32@0:8@"NSString"16q24
@"ASBulletinStore"
@"ASOnWristMonitor"
B32@0:8@16q24
B40@0:8@16q24^@32
B48@0:8@16@24q32^@40
@40@0:8@16q24q32
@32@0:8q16q24
v64@0:8@16@24q32q40@48@?56
v48@0:8@16q24@32@?40
v60@0:8@16@24@32q40B48@?52
v32@0:8@"<ASBulletinPostingManager>"16@"ASUserNotificationResponse"24
@56@0:8@16@24@32@40@48
@"<ASFriendInviteBulletinManagerDelegate>"
[%@] Activity Sharing profile extension instantiated.
Responding to earned instances for incremental interval: %@
Responding to earned instances for historical interval: %@
Collecting completed competitions for %{public}@ - %@
Found %lu completed competitions
Building earned instance for competition participation: %{public}@, %lu - %lu
Competition is at index %lu
Building earned instance for competition victory
Error instantiating database competition lists during database retrieval: %{public}@
Error removing competitions: %{public}@
Error inserting competition lists %{public}@: %{public}@
Error inserting journaled competition lists %@: %{public}@
Error applying journal deletes for all competition lists %@: %{public}@
Bulletin expiration date is %{public}@
No expiration date for bulletin
FakingManager saving activity records
FakingManager saving competition scores
Fake competitions=%@
Faking Move Minutes
Faking Calories
Error parsing message queue with name %{public}@, serialized data is not a dictionary (%{public}@)
RelationshipManager setting activity data visibility to %{BOOL}d for friend with UUID: %{public}@
Could not find participant with email %@ on share.
Failed to fetch share participant with email %@.
Failed to fetch activity data share.
RelationshipManager not changing activity data visibility - already matches current visibility
RelationshipManager setting muting to %{BOOL}d for friend with UUID: %{public}@
RelationshipManager could not change muting - contact not found.
RelationshipManager not changing muting - already matches current state
RelationshipManager cannot insert competition for friendship that is not active
RelationshipManager checking for contacts that require a supported feature update
Relationship requires supported feature update: %{public}@ - %@
RelationshipManager serializing relationship records and saving to CloudKit
RelationshipManager error processing saved relationship, couldn't find contact with relationship UUID: %{public}@
RelationshipManager didn't find any relationships requiring a supported feature update
RelationshipManager starting invite flow for person with destination: %@, serviceIdentifier: %{public}@
RelationshipManager error: max number of friends reached
RelationshipManager looking up placeholder contact
RelationshipManager didn't find existing contact, creating new placeholder
RelationshipManager fetch complete, looking up contact again
RelationshipManager didn't find existing contact, copying the placeholder to save so the UUIDs match
RelationshipManager contact already exists, just update it with the invite data
RelationshipManager friendship already active, but activity data is not visible
RelationshipManager not sending invite to avoid triggering an unhide on the remote device
RelationshipManager sending invite with token %@ to destination: %@
RelationshipManager preparing to accept invite from friend with UUID: %{public}@
RelationshipManager couldn't find a contact with the given UUID
RelationshipManager error sending invite response: %{public}@
RelationshipManager sending invite response %ld with token %@ to %@
RelationshipManager attepting to withdraw invite request to friend with UUID: %{public}@
RelationshipManager couldn't find a person with the given UUID
RelationshipManager detected friendship is already active
RelationshipManager didn't find a pending outgoing request to this contact
RelationshipManager attempting to ignore incoming invite from friend with UUID: %{public}@
RelationshipManager not able to ignore invite, relationship doesn't have pending incoming request, status: %@
RelationshipManager received invite request from %@, cloudKitAddress=%@, callerID=%@
RelationshipManager invite info: handshakeToken=%@, buildNumber=%{public}@, version=%d
RelationshipManager not processing invite because activity app is not installed, persisting for later delivery
Could not determine gateway status: %{public}@, persisting message
RelationshipManager not processing invite because contact is a filtered contact.
RelationshipManager received an incompatible invite (current version = %d, inviter version = %d)
RelationshipManager already notified for invite request at %@; not notifying again
RelationshipManager not notifying via BB and not auto-accepting
RelationshipManager friendship already active for this person, automatically accepting
RelationshipManager notifying via user notifications
RelationshipManager device is a watch, processing invite block with delay
RelationshipManager received invite response from %@, cloudKitAddress=%@
RelationshipManager response info: handshakeToken=%@, buildNumber=%{public}@, version=%d
RelationshipManager not processing response because activity app is not installed, persisting for later delivery
RelationshipManager couldn't find previously invited friend with token: %@
RelationshipManager received an incompatible response (current version = %d, invitee version = %d)
RelationshipManager rejecting invite response because relationship doesn't have a pending outgoing invite request, current state is: %{public}@
RelationshipManager not inserting a placeholder began - remote side is already active
RelationshipManager accept received and processed, notify via BB
RelationshipManager sending finalize handshake with token: %@
RelationshipManager received final handshake, token: %@
RelationshipManager not finalizing, relationship doesn't has incoming invite request: %@
RelationshipManager remote relationship is already active, remove placeholder
RelationshipManager received withdraw invite, token: %@, person: %@
RelationshipManager didn't find a pending invite to withdraw - this invite may already have been acted upon
RelationshipManager current state is %{public}@
RelationshipManager processing withdraw will continue anyway
RelationshipManager received new relationship records from CloudKit, more coming: %{BOOL}d
RelationshipManager received multiple local relationships on a single record ID: %@, relationship: %@
RelationshipManager received new remote relationship records from CloudKit
RelationshipManager received multiple remote relationship records for a single share from CloudKitManager, taking only the newest
RelationshipManager finished processing remote relationships
RelationshipManager received BB response: %ld in ASActivitySharingManager
Relationship manager couldn't find person with UUID: %{public}@
RelationshipManager not processing persisted messages, activity app is not installed
RelationshipManager processing persisted invitation messages if available
RelationshipManager could not determine status for processing persisted invitations: %{public}@
RelationshipManager not processing persisted invitation messages at this time
RelationshipManager ending friendship, checking for existing relationship began placeholders
RelationshipManager ending friendship with friend with UUID: %{public}@
RelationshipManager found friendship is not currently active. Still attempting to remove person from shares, just to be safe
RelationshipManager removing contact with cloudKitAddress %@ from activity data share
RelationshipManager error removing friend from activity data share (could not remove particpant): %{public}@
RelationshipManager error removing friend from activity data share (could not fetch share): %{public}@
RelationshipManager contact does not have a cloudKitAddress, not attempting to remove from share
RelationshipManager coudn't find match, creating new contact
RelationshipManager found a match, but the cloudKit address was different
RelationshipManager creating a new contact for this unique cloudKit address
RelationshipManager creating new outgoing handshake token: %@
RelationshipManager outgoing handshake token already exists for this person: %@
RelationshipManager inserting placeholder contact
Removing placeholder relationship began for friend: %{public}@
No existing relationship began placeholder
Friendship began success, executing blocks waiting on success
RelationshipManager found existing placeholder began token for this contact: %@
RelationshipManager removing placeholder contact to avoid orphaning the token
RelationshipManager friendship is still finalizing, holding this action until complete
RelationshipManager fetching activity data share
RelationshipManager error fetching activity data share: %{public}@
RelationshipManager successfully fetched activity data share
RelationshipManager error fetching relationship share: %{public}@
RelationshipManager successfully fetched relationship share
RelationshipManager failed to fetch relationship share because relationship had no archived share ID
RelationshipManager error de-serializing relationships: %@
RelationshipManager successfully saved relationship record in CloudKit
RelationshipManager error fetching/creating activity data share when saving new relationship: %{public}@
RelationshipManager error creating or fetching relationship share: %{public}@
RelationshipManager successfully saved relationship record in CloudKit for UUID %{public}@
RelationshipManager creating new relationship share
RelationshipManager error saving relationship record in CloudKit: %{public}@
RelationshipManager saving relationship that requires a supported feature update, updating now
RelationshipManager adding person with cloudKitAddress %@ to my shares
RelationshipManager error adding person to shares: %{public}@
RelationshipManager succesfully added person to shares
RelationshipManager accepting shares: %@
RelationshipManager error accepting invitee shares %@, error: %{public}@
RelationshipManager success accepting shares
RelationshipManager reconciling new cloudKit relationships
RelationshipManager current fetch is full, overwrite instead of merging
RelationshipManager found %lu existing relationships, merging
RelationshipManager first merging on share ID
RelationshipManager found a conflict (%@/%@ vs %@/%@)
RelationshipManager determined the cloudKit relationship is newer, taking it
RelationshipManager determined cloudKit relationship is older, keeping the existing relationship
RelationshipManager found a new relationship that doesn't exist locally (%@/%@)
RelationshipManager checking for duplicate cloudKit addresses
RelationshipManager found relationship that didn't have a cloudKit address, not checking for duplicates: %@
RelationshipManager found a conflicting relationship - different share ID with the same cloudKit address
RelationshipManager relationship %@
RelationshipManager conflicts with %@
RelationshipManger resolved to the newest relationship: %@
RelationshipManager preparing to reconcile with address book (%lu relationships)
RelationshipManager deleting existing friends list
RelationshipManager starting reconcile pass: %{public}@ (%lu remaining relationships)
RelationshipManager create person without address book match is %d for this pass
RelationshipManager looking for contact with destinations: %@
RelationshipManager contact already has a relationship (possibly from a previous pass): %@
RelationshipManager not matching to avoid clobbering
RelationshipManager contact in address book: %d
RelationshipManager found a match for relationship: %@
RelationshipManager matching contact: %{public}@ - %@
RelationshipManager had previous existing contact for the relationship, putting back the original remote relationship
RelationshipManager saving match to %@
RelationshipManager didn't find a match
RelationshipManager reconcile didn't receive destinations, skipping this pass (%{public}@)
RelationshipManager reconcile complete, result:
%@ -> %@
RelationshipManager processing remote relationships
RelationshipManager unable to find contact with remote relationship zone ID: %@
RelationshipManager orphaned remote relationship: %@
RelationshipManager evaluating new remote relationship for contact: %{public}@ - %@
RelationshipManager new remote relationship: %@
RelationshipManager previous remote relationship: %@
RelationshipManager does not need to process remote relationship events, this is the first CK fetch
RelationshipManager local friendship is active, comparing final remote state with previous remote relationship
RelationshipManager checking if another invite flow is in progress: %d
RelationshipManager determined this relationship was ended remotely
RelationshipManager determined this relationship began remotely
RelationshipManager traversing new events at anchor %lu
RelationshipManager detected a friendship that was ended remotely, local activity data should be deleted
RelationshipManager waiting for asynchronous remote processing
RelationshipManager found a relationship that was missing a record ID: %@
RelationshipManager observed contact store change
RelationshipManager reconcile for new contacts already scheduled
RelationshipManager scheduling new reconcile for contact store change
RelationshipManager firing new reconcile for contact store change
RelationshipManager message didn't include an activity snapshot preview, not processing
RelationshipManager message included a snapshot, processing
RelationshipManager generated activity data preview: %@/%@ calories, %@/%@ moveMinutes, %@ workouts, %@ achievements
RelationshipManager received notification action response: %ld in ASActivitySharingManager
RelationshipManager wasPreviouslyActive=%d, isCurrentlyActive=%d
Showing gizmo OS too low notification
CompetitionsTemplateSource collecting templates
Adding participation template
Evaluting friends for victory templates
For friend %@ isCompetitionActive: %d hasCompetitionWonByMe %d
Adding victory template for friend: %{public}@ - %@
Returning templates: %@
Notifying delegate that we updated assets templates: %@
Responding to resource bundle for template: %@
Competition template source couldn't find friend: %{public}@
Competition template source building unused template names for friend: %{public}@ - %@
No wins against this friend and competition isn't active, victory template is now unused
Couldn't find a competition to determine badge style for friend: %{public}@ - %@
FriendUUID missing from template: %@
Couldn't find friend with UUID: %{public}@
Activity Sharing plugin loaded.
Not creating profile extension, Health Daemon does not support Activity Sharing.
Not creating profile extension for non-primary profile.
Health Daemon supports Activity Sharing, creating profile extension.
Running Activity Sharing migration from %ld, creating tables
Running Activity Sharing migration from %ld, dropping competitions table and re-creating with badge styles
Running Activity Sharing migration from %ld, dropping competition lists table and re-creating with owner
Running Activity Sharing migration from %ld, migrating competitions table to fixup unique constraint
Running Activity Sharing migration from %ld, migrating competitions table to add score cap
Adding notification request with identifier %@
Activity sharing notifications disabled in settings
%{public}@ error requesting notification request %{public}@
CompanionBulletinPostingManager enqueuing bulletins %@
Withdrawing bulletin with identifier %@
CompanionBulletinPostingManager received notification response: %{public}@
CompanionBulletinPostingManager failed to decode reply for notification response: %{public}@
CompanionBulletinPostingManager failed to decode friend list data for notification response: %{public}@
CompanionBulletinPostingManager failed to decode friend for notification response: %{public}@
CompanionBulletinPostingManager found unexpected ASBulletinType for notification response: %{public}@
CompanionBulletinPostingManager failed to create message payload for notification response: %{public}@
CompanionBulletinPostingManager sent message payload for notification response: %{public}@
CompanionBulletinPostingManager unable to decode achievement data %@
Error creating archiver for summary data: %@
Checking for change token expiration, timestamp=%f, now=%f
Persisting change tokens to disk
Found a change token with an unexpected type: %@
ActivityDataNotificationManager processing %lu new activity snapshots.
ActivityDataNotificationManager processing %lu new workouts.
ActivityDataNotificationManager processing %lu new achievements.
ActivityDataNotificationManager processing %lu new notification events.
ActivityDataNotificationManager received new data from CloudKit, showing notifications if required.
ActivityDataNotificationManager didn't receive any new data from CloudKit, not showing notifications
ActivityDataNotificationManager: samples removed, checking if any are workouts
ActivityDataNotificationManager: at least one sample is a workout, requesting push
Error: %{public}@ retrieving workout completion data from key value domain for friendUUID: %{public}@.
Error: %{public}@ saving workout completion data into key value domain. %{public}@: %{public}@
Error: %{public}@ retrieving achievement earned data from key value domain for friendUUID: %{public}@.
Achievement earned date is later than current time, not updating defaults
Error: %{public}@ saving achievement earned data into key value domain. %{public}@: %{public}@
Error: %{public}@ retrieving monthly achievement earned data from key value domain for friendUUID: %{public}@.
Error: %{public}@ saving monthly achievement earned data into key value domain. %{public}@: %{public}@
Error: %{public}@ retrieving goal completion data from key value domain for friendUUID: %{public}@.
Error: %{public}@ saving goal completion data into key value domain. %{public}@: %{public}@
Error: %{public}@ retrieving workout anchor data from key value domain. anchor: %{public}@
Error:%{public}@ saving workout anchor data into key value domain. anchor: %{public}@
Error: %{public}@ retrieving achievement anchor data from key value domain. anchor: %{public}@
Error: %{public}@ saving achievement anchor data into key value domain. anchor: %{public}@
Error: %{public}@ retrieving goal completion anchor data from key value domain. anchor: %{public}@
Error: %{public}@ saving goal completion anchor data into key value domain. anchor: %{public}@
ActivityDataNotificationManager: Showing friend notifications
Selected notifications:
Workouts: %lu
Achievements: %lu
Goal completions: %lu
Filtered notifications, posting
ActivityDataNotificationManager: Not showing notifications since pref is disabled.
Selecting workouts for notifications
Current workout anchor is %{public}@
Error: Failed to find friend with UUID %{public}@ for completed workout
Evaluating workout for friend with UUID %{public}@, end date (on remote device) is %{public}@
Last known workout completion date: %@
Last known workout is newer, skip this one
Error: %{public}@ fetching workouts
Updating most recent workout completion date: %@, for friend: %@
WorkoutAnchor set to: %{public}@
Selecting achievements for notifications
Current achievement anchor is %{public}@
Error: Failed to find friend with UUID %{public}@ for achievement
Evaluating new achievement for friend %{public}@, completed date %{public}@, monthly %{public}@
Last known monthly achievement completion date: %@
Last known achievement completion date: %@
Last known achievement is newer, skip this one
Error fetching ephemeral Achievement for template %@: %@
Unable to find achievement matching achievement: %@
Error: %{public}@ fetching achievements
Updating most recent achievement earned date: %@, for friend: %@
Updating most recent monthly achievement earned date: %@, for friend: %@
AchievementAnchor set to: %{public}@
Selecting goal completion snapshot notifications
Current goal completion anchor is %{public}@
Error: Failed to find friend with UUID %{public}@ for goal completion
Evaluating new snapshot with friend UUID %{public}@, index: %lld, date: %{public}@
Snapshot doesn't represent goal completion, skipping
Last known goal completion index: %@
Last known snapshot is newer, skip this one
Error: %{public}@ fetching snapshots
Updating most recent goal completion snapshot index: %@, for friend: %@
GoalCompletionAnchor set to: %{public}@
ActivityDataNotificationManager: at least one workout is in today or yesterday, request data push
Notification step trying to transform objects with no multi-record or single-record transformation blocks set.
Failed to create container with exception %{public}@
Failed to get CloudKit container with identifier %{public}@
Error initializing hasCompletedFirstFetch from key value domain: %{public}@
hasCompletedFirstFetch initialized to: %d
Cancelling all executing fetches
Fetching changes in private database failed with error: %{public}@
Fetched changes in private database successfully.
Fetching changes in shared database failed with error: %{public}@
Fetched changes in shared database successfully.
Change token cache is expired, doing full fetch
Change token cache is still valid, copying
Fetched changes: %ld private, %ld shared changed records.
Not handling changes because we found zero changed records.
A subscription notification came in during the last fetch, running another fetch now.
Fetched changes successfully, calling completions.
Failed to fetch changes with error %{public}@
Lower priority fetches are executing, cancelling all fetches before running higher priority fetch; current priority: %lu, requested priority: %lu
Running fetch with priority %lu now.
A same or higher priority fetch is executing, adding completion to pending completion block list; current priority: %lu, requested priority: %lu
Fetch requested if no fetch performed within last %lu seconds, last fetch was %lf seconds ago
Fetch requested if no fetch performed within last %lu seconds, no successful fetch performed yet
Last fetch is too recent, not fetching.
Error updating key value domain with completed first fetch: %{public}@
Updated has completed first fetch: %d
Cancelling all fetches and expiring change token immediately
Creating subscription to records with type %{public}@ in database %{public}@
Saved %lu subscriptions into database %{public}@.
Failed to save subscriptions into database %{public}@ with error: %{public}@
Received CloudKit push notification for subscription with id: %{public}@
CloudKit push received during coalescing period, ignoring.
Push notification coalescing interval starting, will take %lf seconds.
Push notification coalescing interval finished, fetching changes.
Push notification received during a fetch, fetching again after current fetch completes.
Push notification is low-priority, not fetching.
Error getting server APS preferred push environment: %{public}@
Timeout getting server preferred APS push environment
Using APS push environment: %{public}@
Received public token "%@" on connection %p
Received per-topic push token "%@" for topic "%{public}@" identifier "%@" on connection %p
APS push recieved: %@ %@
Recieved local notification of CloudKit account status changes; fetching 
New CloudKit account is now active, performing setup tasks.
Creating subscriptions.
Fetching changes.
Setup tasks complete, success: %{BOOL}d, error: %@
New account tasks are complete, not scheduling a retry.
New account tasks failed, scheduling a retry for %lf seconds from now
Error setting new CloudKit address in key value domain: %{public}@
Set %@ as CloudKit address in key value domain.
Error reading previous CloudKit address from key value domain: %{public}@
CloudKit address (%@) does not match previous CloudKit address (%@)
Error getting CloudKit account status: %{public}@
Fetched CloudKit account status: "%{public}@"
CloudKit account status changed, handling
Previous account status: "%{public}@"
isSignedOut=%d
isSignedInAfterBeingSignedOut=%d
isSignedInToNewAccount=%d
shouldClearStateAndEraseFriendList=%d
shouldCreateSubscriptions=%d
shouldPerformFetch=%d
Posted notification of CloudKit account status change
Apple ID is a managed account, reverting to unsigned-in behavior
Fetching cloudKit address
Error fetching CloudKit address: %{public}@
Fetched CloudKit address: %@
CloudKitManager added observer not yet ready to process changes: %@
CloudKitManager removing observer not yet ready to process changes: %@
CloudKitManager observer did become ready to process changes: %@
Notifying observers of changes with types: %{public}@
Evaluating shouldNotifyObserverBlock for observer of class %@
Notifying observer of class %@
Finished notifying observer of class %@
CloudKit Manager beginning update transaction.
CloudKit Manager status changed. Notifying observers
CloudKit Manager ending update transaction.
Notifying observers of [non-remote] relationship changes
Notified observers of [non-remote] relationship changes.
Notifying observers of [non-remote] activity data changes
Notified observers of [non-remote] activity data changes.
Notifying observers of [remote] relationship changes
Notified observers of [remote] relationship changes.
Notifying observers of activity data changes
Notified observers of activity data changes.
Notifying observers of notification event changes
Notified observers of notification event changes.
Notifying observers of [non-remote] competition changes
Notified observers of [non-remote] competition changes
Notifying observers of [remote] competition changes
Notified observers of [remote] competition changes
Creating workout bulletin for friend: %{public}@ - %@ with workout %@
Creating achievement bulletin for friend: %{public}@ - %@ with achievement %@
Creating goal completion bulletin for friend: %{public}@ - %@ with snapshot %@
Creating competition bulletin for friend: %{public}@ - %@, title: %@, competition: %@
[%{public}@] Transaction created with identifier: %{public}@
[%{public}@] Transaction starting, identifier: %{public}@
[%{public}@] Transaction lock operation timed out! identifier: %{public}@
[%{public}@] Transaction finished, identifier: %{public}@
AchievementManager requesting template update
Error getting templates from source: %@
Error removing templates during update: %@
Successfully removed %lu templates during update
Error adding templates during update: %@
Successfully added %lu templates during update
AchievementManager not requesting earned instance update - this device is not a watch
AchievementManager requesting earned instance update
Error adding earned instances: %@
Successfully added %lu earned instances
AchievementManager removing all unused templates
Achievement manager found friend with competition history but no wins: %@
Error removing unused template names: %@
Successfully removed %lu unused template names
AchievementManager removing unused templates for friend: %{public}@
Error removing unused templates for friend: %@
Successfully removed %lu unused template for friend
AchievementManager removing all competition templates
AchievementManager removed templates with result: %{BOOL}d, %{public}@
AchievementManager found %lu templates to remove
AchievementManager registering with the achievements subsystem
Competition award refresh interval reached, requesting awarding update
Competition award refresh interval not reached yet, not requesting awarding update
AchievementManager looking up templates for names: %@
AchievementManager removed unused templates with result: %{BOOL}d, %{public}@
IDSMessageCenter [%{public}@] processing retry messages
IDSMessageCenter [%{public}@] processing persisted messages
IDSMessageCenter message handled successfully
IDSMessageCenter persisting message for later use
IDSMessageCenter message needs retry, current count is %ld
IDSMessageCenter message has been retried too many times, discarding
IDSMessageCenter ignoring protobuf with unknown type %{public}@, guid: %{public}@, from: %@
IDSMessageCenter received protobuf of type %{public}@, guid: %{public}@, from: %@
IDSMessageCenter sent protobuf with guid %{public}@ to server with success: %d error: %{public}@
IDSMessageCenter successfully delivered protobuf with guid %{public}@ to remote device
IDSMessageCenter success sending protobuf with type %{public}@, guid %{public}@
IDSMessageCenter error sending protobuf with type %{public}@, guid %{public}@, error: %{public}@
IDSMessageCenter requesting send for protobuf of type %{public}@ to destinations: %@
IDSMessageCenter successfully requested send for protobuf of type %{public}@, guid: %{public}@
IDSMessageCenter error requesting send for protobuf of type %{public}@, error: %{public}@
IDSMessageCenter redelivering protobuf of type %{public}@, guid: %{public}@, from: %@
Updating local friend list from %lu contacts
Updating list for contact %{public}@ (%@)
Found existing friend %{public}@ - %@, updating contact reference
Protected data is not available, not getting data for contact %{public}@ (%@)
Friend list loaded %{public}@ - %@
Finished updating local friend list from contacts
Initial friend list update and competition data is available, notifying observers
Updated friend %{public}@ (%@) with new snapshot with index %lld
Failed to update friend list with snapshot with friend UUID %{public}@ because no friend was found with matching UUID
Updated friend %{public}@ (%@) with new achievement with template unique name %@
Failed to update friend list with achievement with friend UUID %{public}@ because no friend was found with matching UUID
Updated friend %{public}@ (%@) with new workout with UUID %{public}@
Failed to update friend list with workout with friend UUID %{public}@ because no friend was found with matching UUID
Updating friend list with %lu deleted workout events
Unable to find friend with UUID: %{public}@, skipping deleted workout with UUID: %{public}@
Removing deleted workout [%{public}@] for friend: %@
Successfully found deleted workout on snapshotIndex: %@
Not counting friend toward hasFriendsToShareWith because data is currently hidden: %{public}@ - %@
Checking current friend list for friends to share with: %{BOOL}d, checking defaults: %{public}@
Device is a watch, falling back to phone value if no friends are active currently
Current value is different than defaults
Current value is false, but defaults value was true and the contact set is empty - maintaining defaults value until contacts exist
Updating and syncing default for friends to share with, setting to: %{BOOL}d
Checked for friends to share with, found friends: %{BOOL}d
Clearing entire friend list!
Notifying observers of friend list changes %lu friends.
Has Friends default change notification received
Friends List did update: %lu friends
FriendListManager updating with initial competitions
Friend list not yet constructed, not updating
FriendListManager updating with new competitions
FriendListManager couldn't find friend with UUID: %{public}@
Error removing competition %{public}@/%ld: %{public}@
Error instantiating database competitions during database retrieval: %{public}@
Error inserting competitions %{public}@: %{public}@
Error inserting journaled competitions %@: %{public}@
Error applying journal deletes for competitions %@: %{public}@
Error applying journal delete for all competitions %@: %{public}@
CompetitionManager attempting to load cached competitions
CompetitionManager deleting all cached competitions
CompetitionManager attempting to send competition request to friend: %{public}@
CompetitionManager fetch complete, proceeding with send competition request
Unable to unhide from friend:%@
CompetitionManager checking friend eligibility
CompetitionManager relationship has completed competition, archiving and copying previous badge style
CompetitionManager relationship has archived competitions, copying previous badge style
CompetitionManager relationship doesn't have a previous competition, generating preferred badge styles
CompetitionManager building competition for friend: %{public}@ - %@
CompetitionManager built new competition: %@
CompetitionManager attempting to accept competition request to friend: %{public}@
CompetitionManager fetch complete, proceeding with accept
CompetitionManager unhiding from friend if hidden
CompetitionManager found friend with incoming request: %@
CompetitionManager couldn't find remote competition for friend
CompetitionManager UUID mismatch between local and remote competition: %@ vs %@
CompetitionManager updating competition start date before accepting
CompetitionManager attempting to ignore competition request from friend: %{public}@
CompetitionManager unable to ignore competition request, no incoming request found, relationship=%@
CompetitionManager preparing for new records
CompetitionManager existing friends awaiting my response: %@
CompetitionManager existing friends that accepted my request: %@
CompetitionManager existing friends with completed competitions: %@
CompetitionManager received new non-remote competitions
CompetitionManager existingCurrentCompetition=%@
CompetitionManager updatedCurrentCompetition=%@
CompetitionManager local view of competition has a higher score, keeping the current local value (%lu vs %lu)
CompetitionManager local view of competition has a higher opponent score, keeping the current local value (%lu vs %lu)
CompetitionManager found competition list missing a friendUUID: %@
CompetitionManager received new remote competitions
CompetitionManager couldn't find a matching friend for this remote competition list: %@
CompetitionManager CK fetch complete
CompetitionManager CK fetch is the first on this device, avoid notifying about already-processed changes
CompetitionManager checking each friend for updated competition state
CompetitionManager [%@] is awaiting response from me, alreadyProcessed=%d alreadyIgnored=%d alreadyNotified=%d
No paired watch supports competitions, showing upgrade notification
CompetitionManager [%@] accepted my request, alreadyProcessed=%d alreadyNotified=%d
CompetitionManager accepted [%@] request, requesting template update
CompetitionManager [%@] competition complete, alreadyNotified=%d
CompetitionManager responding to periodic update request for records
Competition has ended, not including in records to push: %{public}@
CompetitionManager found %lu competition records to save
CompetitionManager observed protected data availability: %{BOOL}d
CompetitionManager found protected data available, setting current score cap celebration anchor to %@
CompetitionManager not handling competition request, device does not participate in competition management
CompetitionManager handling competition request from friend: %{public}@ - %@
CompetitionManager already sent a pending competition request to this friend
CompetitionManager this is likely due to simultaneous requests from each side
CompetitionManager attempting to auto-accept this request
CompetitionManager friend is not in awaiting response state
CompetitionManager probably from another device saving to CK sooner - just notify
CompetitionManager incoming request failed validation, aborting
CompetitionManager couldn't find remote competition list for friend
CompetitionManager found remote competition: %@
CompetitionManager building local view of competition
Successfully handled incoming competition request, notifying via BB
CompetitionManager not handling accepted competition, device does not participate in competition management
CompetitionManager handling accepted competition from friend: %{public}@ - %@
CompetitionManager couldn't find a local competition for accepted competition
CompetitionManager local view has already acknowledged remote acceptance - just notify
CompetitionManager found an accepted request but no corresponding competition
CompetitionManager updating local view of competition
Successfully acknowledged accepted competition request, notifying via BB
CompetitionManager saving competition lists in CloudKit, current: %@ archived: %@
CompetitionManager current competition list doesn't exist yet, creating
CompetitionManager archived competition list doesn't exist yet, creating
CompetitionManager not updating scores, protected data not yet fetched
CompetitionManager updating scores for competitions with %lu friends, summaryIndex=%lld
Current competition for friend %@ is %@
Competition is active with friend, but couldn't find a current competition: %{public}@ - %@
CompetitionManager updating competition score for friend with UUID:%@ with current competition: %@
CompetitionManager calculated new scores: %@(=%lu)
CompetitionManager no change in scores, not persisting or notifying
CompetitionManager competition is ready to push final cache index, pushing immediately
CompetitionManager is evaluating whether score cap has been hit with friend with UUID: %@, competition: %@
CompetitionManager current score cap celebration anchor is %@
CompetitionManager score cap celebration has already been alerted about today
CompetitionManager today score of %lu is greater than score cap of %lu, posting score cap celebration
CompetitionManager not posting score cap celebration, couldn't find any friends with active competitions
CompetitionManager handling %ld competition list records
CompetitionManager local view of competition %@ has a more up-to-date opponent score, keeping it
CompetitionManager saving remote competition list: %@
CompetitionManager updating local competition to reflect remote opponent score
CompetitionManager competition UUIDs didn't match, not updating score: local=%@ remote=%@
Not posting competition request bulletin for friend UUID %@, previously posted
CompetitionManager posting competition request bulletin for friend: %{public}@ - %@
Not posting bulletin competition accepted bulletin for friend UUID %@, previously posted
CompetitionManager posting competition accepted bulletin for friend: %{public}@ - %@
Not posting bulletin competition completed bulletin for friend UUID %@, previously posted
CompetitionManager posting competition ended with friend: %{public}@ - %@
CompetitionManager posting score cap celebration with friends %@
CompetitionManager couldn't find a remote competition when auto-accepting
CompetitionManager couldn't find a local competition when auto-accepting
CompetitionManager comparing UUIDs to decide if we should accept
CompetitionManager this device should accept, rebuilding local competition in accepting role
CompetitionManager this device should *not* accept
CompetitionManager tried to check if competition is ready to complete, but couldn't find both a local and remote view of the competition: %{public}@ - %@, localCompetition=%@, remoteCompetition=%@
CompetitionManager competition with friend is ready to complete: %{public}@ - %@
CompetitionManager pushing competition one last time with updated opponent score
CompetitionManager failed to complete competition: %@
CompetitionManager successfully completed competition
CompetitionManager remote competition is also complete, we can notify
CompetitionManager building new archived competition list
CompetitionManager didn't find an existing competition to archive
CompetitionManager didn't find an existing archived competition list, creating one for friend: %{public}@
CompetitionManager built new archived competition list: %@
CompetitionManager didn't find an existing current competition list, creating one for friend: %{public}@
CompetitionManager not loading cached competitions, protected data is not available
Error: %{public}@ retrieving score cap celebration anchor data from key value domain. anchor: %{public}@
Error:%{public}@ saving score cap celebration anchor data into key value domain. anchor: %@
CompetitionManager updated score cap celebration anchor is %@
Completing competition with friend: %{public}@
Unable to complete competition - not currently active
Unable to complete competition - no competition found
CompetitionManager updating competition %@ with scores: %@
CompetitionManager my activity data is hidden, unhiding first
CompetitionManager my activity data is not hidden, proceeding immediately
Received NR pairing status changed notification
Running friend manager setup
This device is a watch or standalone phone; setting up activity data notification manager.
Data protected by first unlock available
ActivitySharingManager setup complete
ActivitySharingManager final setup skipped
Skipping friend manager setup
Attempting to start submanagers
Not starting submanagers, %{public}@ is not installed
Not starting submanagers, fitness apps are restricted
Not starting submanagers, processing has already started
Attempting to stop submanagers
Not stopping submanagers, %{public}@ is installed and fitness apps are not restricted
Not stopping submanagers, processing has not been started
Proceeding with submanager shutdown
Notifying object of class %{public}@ of Activity Sharing Manager ready.
ASActivitySharingManager method called when submanagers will not be initialized, waiting forever is expected.
NanoSyncManager updated status, completing setup if needed
ActivitySharingManager applications install state changed: %{public}@
ActivitySharingManager fitness apps restriction state changed: %ld
ActivitySharingManager activating after app install/restriction state changed
ActivitySharingManager data protected by first unlock not available, not responding to installation
ActivitySharingManager deactivating after app install/restriction state changed
ASActivitySharingManager not found
Removing legacy user defaults setup key
Syncing new user defaults setup key:  %{BOOL}d
Achievements updated, checking for new today achievements to push
Alerts are currently suppressed, not checking for achievements to push
Recieved %lu new notification events
Processing %lu new notification events
Received events for %lu deleted workout(s)
There are %lu new deleted workouts, handling.
Finished handling deleted workouts, calling changesProcessedHandler
No new deleted workouts, calling changesProcessedHandler
More notification events coming, calling changesProcessedHandler
Processing %lu snapshots of self.
Incoming snapshots for self are: %@
Final snapshot dict for self: %@
Error getting source UUID for active device: %{public}@
Could not find paired active device UUID.
Multiple devices sharing status requested for snapshot index: %{public}@, active device UUID: %{public}@
Are multiple devices sharing: %{BOOL}d
currentAchievements: Error getting all achievements: %@
Saved activity sharing data to database: %lu samples.
Error %{public}@ saving activity sharing data
Provenance is nil when trying to save fetched friend data.
No samples to save.
Deleting all friend data!
Failed to delete all friend data with error: %{public}@
Deleted friend data successfully, %lu samples.
Failed to remove ASAchievementEntity samples for friend UUUD: %{public}@
Removed %ld ASAchievementEntity samples for friend UUUD: %{public}@
Failed to remove ASActivitySnapshotEntity samples for friend UUUD: %{public}@
Removed %ld ASActivitySnapshotEntity samples for friend UUUD: %{public}@
Failed to remove ASWorkoutEntity samples for friend UUUD: %{public}@
Removed %ld ASWorkoutEntity samples for friend UUUD: %{public}@
Failed to get activity snapshots from entity with error: %{public}@
Failed to get friend achievements from entity with error: %{public}@
Failed to get friend workouts from entity with error: %{public}@
Not fetching friend data, protected data is unavailable
Error fetching snapshots from db: %{public}@
Error fetching workouts from db: %{public}@
Error fetching achievements from db: %{public}@
Protected data availability changed and we haven't fetched friends' data yet
Recieved a sample with invalid type: %{public}@
Friend samples were added to database: %lu snapshots, %lu workouts, %lu achievements.
New today activity summary available, but doesn't have a move goal yet - copying existing known goals
Today summary: %@ represents a goal completion, requesting immediate update
Failed to create Apple Watch samples predicate with error: %{public}@
Error: %{public}@ fetching workouts with predicate: %{public}@, anchor: %{public}@
Looking for achievements for snapshot index: %lld, date: %@
Error getting local source UUID to attach to snapshots: %{public}@
Alerts are currently suppressed, not pushing any achievements
Today snapshot is empty, not pushing any achievements
Getting achievements to push for today from the new system
Error getting achievements to push for today: %@
Got %lu achievements from awardsClient
Found %lu achievements for today
New today anchor token is: %@
Looking for today workouts to push with anchor %@
Found %lu workouts
Looking for yesterday workouts to push with anchor %@
Unexpected request to push activity summaries while a push is in progress
Creating records for %lu snapshots, %lu achievements, %lu workouts, %lu notification events.
Updating share: deleting %lu workout records
Looking for deleted workouts with anchor: %{public}@
Found deleted workout, id=%lld, uuid=%{public}@
Finished looking for deleted workouts
Error enumerating deleted workouts: %@
Received an event for deleted workout: %@
Error deleting workouts: %{public}@
Successfully deleted %lu workout(s)
Error reading %{public}@ from key value domain: %{public}@
Loaded %{public}@: %{public}@
Loaded %{public}@: [%{public}@]
Error updating %{public}@ in key value domain: %{public}@
Updated %{public}@ to %{public}@
Updated %{public}@ to [%{public}@]
Synchronously fetching alert suppression state
Timeout fetching alert suppression status, assuming alerts are not suppressed
New achievement not yet pushed: %@
ContactsManager loading cached contacts
ContactsManager has some contacts that already exist in memory! Replacing with contacts from disk cache
ContactsManager deleting legacy contacts
ContactsManager initialized cached contact: %{public}@ - %@
ContactsManager loaded %lu cached contacts
ContactsManager creating new contact with destinations: %@
ContactsManager resulting contact: %@
ContactsManager error saving contact, no UUID: %@
ContactsManager saving contact: %{public}@ - %@
ContactsManager error saving placeholder contact, no UUID: %@
ContactsManager saving placeholder contact (token=%{public}@): %{public}@ - %@
ContactsManager removing placeholder contact with token %{public}@
ContactsManager couldn't find contact with token %{public}@
ContactsManager found placeholder contact to remove %{public}@ - %@
ContactsManager removing all placeholder contacts (%lu placeholder contacts)
ContactsManager error setting contact, no UUID: %@
ContactsManager saving %lu contacts
ContactsManager beginning transaction
ContactsManager ending transaction
ContactsManager error, transaction timed out
ContactsManager persisting %lu contacts to disk
ContactsManager notifying %lu observer(s) of contacts update
ContactsManager error looking for contacts matching predicate: %@
ContactsManager multiple contacts matched destination: %@
ASFriendListQueryServer: Failed to find ASActivitySharingManagerProvider.
ASFriendListQueryServer: Starting.
ASFriendListQueryServer: Waiting for processing to start for add
ASFriendListQueryServer: Stopping.
ASFriendListQueryServer: Waiting for processing to start for remove
ASFriendListQueryServer calling deliverFriendList with %lu friends
ASFriendListQueryServer: Manager processing started
ASFriendListQueryServer: Activity sharing manager posted it started, but is not reporting it's started
ASFriendListQueryServer: Activity sharing manager started, but no queries enabled
ASFriendListQueryServer: Adding friend list observer after activity sharing manager started
ASFriendListQueryServer: Removing friend list observer after activity sharing manager started
Status for currentlyPairedWatchMeetsMinimumVersion: %{BOOL}d
Gateway status, iCloud signed in: %{BOOL}d, need to upgrade: %{BOOL}d
Checking whitelist and blacklist for contact %@
Should filter non-whitelisted incoming message from %@: %{bool}d
Checking destinations: %@ against contacts blacklist for incoming message
Should filter blacklisted incoming message from %@ = %{bool}d
Updating state - status for canProcessInvitation: %{BOOL}d
Gateway Manager status changed. Notifying observers
Batching %ld notifications
Found competition request bulletin record to withdraw for friend: %{public}@
Not posting queued notifications, isSuppressed=%{BOOL}d isOnWrist=%{BOOL}d protectedDataAvailable=%{BOOL}d
Posting queued notifications
Notifications to post: %ld
Notifications to defer: %ld
Posting standard notifications, deferring important notifications
No standard notifications to post, allowing important notifications
Not allowing important notifications - not enough time has elapsed since previous deferral
Publish date is %@
Dropping queued bulletin because it's been queued for too long: %lu / %@
At least one bulletin was deferred, scheduling another attempt
Deferred bulletin dispatch timer fired
GizmoBulletinPostingManager queue post notification requests
GizmoBulletinPostingManager post fake notification requests
GizmoBulletinPostingManager received notification response: %{public}@
Error creating cache directory (%@): %@
Error reading from file (%@): %@
Error writing to file (%@): %@
Filtered hidden data: %lu/%lu snapshots, %lu/%lu workouts, %lu/%lu achievements.
Not allowing sample for friend %{public}@ - %@
Sample date: %{public}@
Activity data visible: %d
Explicitly hiding: %d
Is on same day as friendship began: %d
CompetitionStore loading cached competitions
Unable to load cached competitions: %@
Filtering for competition list with friendUUID: %@
Unable to load cached competition lists: %@
Loaded %lu cached current competition lists
Loaded %lu cached archived competition lists
Loaded %lu cached remote competitions
Error deleting all cached competitions: %{public}@
CompetitionStore persisiting competition list to database for owner: %lu, competitionList: %@
CompetitionStore removing competitions of type %lu with friend %@
CompetitionStore saving competitions [%@]
Error saving competition lists: %@
CompetitionStore: Persisting competition list [%@] failed with error [%@]
CompetitionStore: Removing competitions of type %lu for friend with UUID [%@] failed with error [%@]
CompetitionStore: Persisting competitions to database [%@] failed with error [%@]
Unable to cache competition list with no friend UUID: %@
Archived competitions are not supported for remote owner
PeriodicUpdateManager registering xpc activity
PeriodicUpdateManager xpc activity fired, state=%zd
PeriodicUpdateManager failed to set xpc activity state to continue
PeriodicUpdateManager failed to set xpc activity state to defer
PeriodicUpdateManager setting update task as done
PeriodicUpdateManager failed to set xpc activity state to done
PeriodicUpdateManager unregistering xpc activity
Immediate periodic update requested.
Push in progress, queueing another push after this one completes
Not performing periodic update because we have no friends.
PeriodicUpdateManager device is a watch or standalone phone; requesting push
Periodic update save completed with result: %{BOOL}d, %@
Running queued push immediately
PeriodicUpdateManager device is a phone; updating supported features if necessary
PeriodicUpdateManager finished updating supported features
PeriodicUpdateManager initiating fetch changes from CloudKit
PeriodicUpdateManager fetch changes completed
PeriodicUpdateManager account status did change to %ld
Saved %lu subscriptions, deleted %lu subscriptions.
Failed to create record zones with IDs %@ with error: %{public}@
Created record zones in private database: %@
Failed to save records into private database with error: %{public}@
Saved %lu records into private database.
Zones not found when saving records, creating zones and re-trying save.
Cannot create a share with a root record in a different record zone.
Fetching share with ID: %@
Found share: %@
Failed to fetch share with ID %@, error: %{public}@
Accepted share with URL %@ and share ID %@
Failed to accept share with URL %@ with error: %{public}@
Accepted all shares successfully
Failed to accept shares with error: %{public}@
Fetched share metadata for URL %@ successfully
Error fetching share metadata: %{public}@
Fetching share metadata failed with error %{public}@; not accepting shares
Incorrect number of metadatas fetched; not accepting shares.
Accepting shares after fetching metadata (%lu metadatas)
Adding participant with address %@ to shares: %@
Trying to add owner of the share, skipping.
Adding participant %@ failed: saving shares failed with error: %{public}@
Added participant %@ to shares %@ successfully.
Adding participant %@ failed: failed to fetch user identity with error: %{public}@
Removing participant with address %@ from shares with IDs: %@
Trying to remove owner of the share, skipping.
Removing participant %@ failed: saving shares failed with error: %{public}@
Removed participant %@ from shares with IDs %@ successfully.
Removing participant %@ failed: failed to fetch user identity with error: %{public}@
Fetching changes in %lu record zones (database %{public}@)
Change token expired for zone %@
Failed to fetch changes in zone %@ with error %{public}@
Fetched changes successfully in zone %@
Finished fetching changes in database %{public}@, %lu records
Some change tokens have expired, fetching again.
Calling completion with %lu changed records
Fetching changes in database %{public}@
Ignoring changes in zone with ID: %{public}@
No changes in database %{public}@, not fetching.
Failed to fetch changed record zones in database %{public}@ with error %{public}@
Sharing is setup. Showing invite request with actions.
Showing invitation request bulletin from %{public}@ - %@
Sharing is not set up. Showing invite request without actions.
Notifying about invitation request from %{public}@ - %@
iCloud is not signed in. Showing invite request with prompts to sign in.
Watch(es) not all on latest watchOS. Showing invite request with prompts to upgrade.
Withdrawing invite notification from %{public}@ - %@
Showing version incompatible notification for %{public}@ - %@
Showing invitation response bulletin from %{public}@ - %@
Showing invite response error for %{public}@ - %@
Showing max number of friends limit
Handling notification action response: %{public}@ RESPONSE: %{public}@
Serial
ActivitySharingCompetitionAwardingSource
B16@?0@"ASCompetition"8
v8@?0
B32@?0@"ASCompetition"8Q16^B24
competition_list
friend_uuid
type
system_fields
owner
%@_%@
data_id
INTEGER PRIMARY KEY
BLOB
INTEGER
B40@?0q8@"NSArray"16^{HDSQLiteRow=}24^@32
B24@?0@"HDDatabaseTransaction"8^@16
B24@?0@"NSError"8^@16
v16@?0^{HDSQLiteStatementBinder=}8
com.apple.ActivityMonitorApp.challenges.thread
com.apple.ActivitySharing.competitions.thread
com.apple.ActivitySharing.default.thread
fakeContactName
Allen
fakeContactAddress
2025550184
fakeWorkoutType
fakeWorkoutGoalType
fakeWorkoutEnergyBurned
fakeWorkoutDistance
fakeWorkoutDuration
fakeWorkoutGoal
fakeWorkoutIsIndoor
fakeWorkoutVideoIdentifier
1537521179
fakeWorkoutGuidedRunIdentifier
1567714086
fakeWorkoutGuidedWalkIdentifier
1546163570
fakeSnapshotEnergyBurnedGoal
fakeSnapshotExerciseGoal
fakeSnapshotStandGoal
fakeSnapshotMoveMinuteGoal
fakeSnapshotMoveMinuteEnabled
fakeAchievementTemplateUniqueName
NewExerciseRecord
fakeAchievementWorkoutType
fakeAchievementValue
fakeFriendUUID
fakeCompetitionMyWinCount
fakeCompetitionOpponentWinCount
fakeCompetitionBadgeStyle
fakeCompetitionOpponentWonPreviously
v16@?0@"<ACHAchievementsProfileExtending>"8
video
breeze
guidedWalk
com.apple.SessionTracker
B16@?0@"ACHAchievement"8
v28@?0B8@"NSError"12@"NSArray"20
v24@?0Q8q16
Watch
iPod6,3
ASMessagePayloadKey
ASMessageTypeKey
ASMessageSenderAddressKey
ASMessageRetryCountKey
DefaultMessageQueue
v32@?0@"NSString"8@"NSDictionary"16^B24
v32@?0@"NSString"8@"ASMessage"16^B24
ASRelationshipTransaction
com.apple.ActivitySharing.RelationshipManager
com.apple.ActivityMonitorApp
com.apple.Fitness
RelationshipManagerTransaction
v32@?0@"NSString"8@"ASIDSMessageCenter"16^B24
B24@?0@"CKShareParticipant"8@"NSDictionary"16
v28@?0B8@"NSError"12@"ASRelationship"20
v28@?0B8@"NSError"12@"CKShareParticipant"20
v28@?0B8@"NSError"12@"CKShare"20
v16@?0@?<v@?>8
v20@?0B8@"NSError"12
@"CKRecord"16@?0@"ASRelationship"8
v44@?0B8@"NSError"12@"CKShare"20@"CKShare"28@"ASRelationship"36
v24@?0@"NSString"8@"NSError"16
v36@?0B8@"NSError"12@"CKShare"20@"CKShare"28
v28@?0B8B12B16@"NSError"20
B16@?0@"ASContact"8
v44@?0B8@"NSError"12@"CKShare"20@"CKRecord"28@"NSArray"36
v28@?0B8@"NSError"12@"NSDictionary"20
v32@?0@"CKRecordID"8@"ASRelationship"16^B24
q24@?0@"ASRelationship"8@"ASRelationship"16
v28@?0@"NSString"8B16@?<@"NSArray"@?@"ASRelationship">20
cloudKitAddress
@"NSArray"16@?0@"ASRelationship"8
preferredAddress
knownAddresses
createCloudKitAddress
createPreferredAddress
createKnownAddresses
@"NSSet"8@?0
v16@?0@"ASRelationship"8
BuildVersion
fakeFriendWorkout
v12@?0i8
fakeFriendVideoWorkout
fakeFriendGuidedRunWorkout
fakeFriendGuidedWalkWorkout
fakeFriendAchievement
fakeFriendGoalCompletion
fakeFriendBatch
fakeFriendGoalCompletionDuringCompetition
fakeFriendCompetitionRequest
fakeFriendCompetitionAccepted
fakeFriendCompetitionEndedWinner
fakeFriendCompetitionEndedLoser
fakeFriendCompetitionEndedTie
fakeCompetitionScoreCapCelebration
fakeShowInviteRequest
fakeShowInviteResponse
fakeShowInviteNeedsSetup
fakeShowNeedToSignIn
fakeShowNeedToUpgrade
johndoe@icloud.com
com.apple.ActivitySharing
ActivityDataZone
RelationshipZone
COMPETITION_UPDATE_WATCHOS_TITLE
Localizable
COMPETITION_UPDATE_WATCHOS_MESSAGE
B16@?0@"ASFriend"8
v32@?0@"ASFriend"8Q16^B24
com.apple.ActivityMonitorApp.activity-competition-participated
@"ASCodableBulletin"16@?0@"ASActivityDataNotification"8
CREATE TABLE IF NOT EXISTS %@_%@                      (%@ INTEGER PRIMARY KEY AUTOINCREMENT,                      %@ BLOB,                      %@ BLOB,                      %@ INTEGER,                      %@ INTEGER,                      %@ INTEGER,                      %@ BLOB,                      %@ BLOB,                      %@ BLOB,                      %@ BLOB,                      UNIQUE(%@, %@))
q40@?0@"HDDatabaseMigrator"8@"HDDatabaseMigrationTransaction"16q24^@32
CREATE TABLE IF NOT EXISTS %@_%@                      (%@ INTEGER PRIMARY KEY AUTOINCREMENT,                      %@ BLOB,                      %@ BLOB,                      %@ INTEGER,                      %@ INTEGER,                      %@ INTEGER,                      %@ BLOB,                      %@ BLOB,                      %@ BLOB,                      %@ BLOB,                      %@ BLOB,                      UNIQUE(%@, %@))
ALTER TABLE activitysharing_competitions RENAME TO activitysharing_competitions_old
INSERT INTO activitysharing_competitions SELECT * FROM activitysharing_competitions_old
DROP TABLE activitysharing_competitions_old
ALTER TABLE activitysharing_competitions ADD COLUMN %@ INTEGER
CREATE TABLE IF NOT EXISTS %@_%@             (%@ INTEGER PRIMARY KEY AUTOINCREMENT,             %@ BLOB,             %@ INTEGER,            %@ BLOB,             %@ INTEGER,             UNIQUE(%@, %@))
DROP TABLE IF EXISTS %@_%@
Reply
v16@?0@"NSSet"8
v16@?0@"NSError"8
@"NSString"16@?0@"UNNotificationTopic"8
FITNESS_APP_NAME
NOTIFICATION_TITLE_FORMAT_WORKOUT_
%@%@
v32@?0@"NSString"8@16^B24
v32@?0@"NSString"8@"CKServerChangeToken"16^B24
fitnessFriendsWorkoutAnchorKey
fitnessFriendsAchievementAnchorKey
fitnessFriendsGoalCompletionAnchorKey
workoutCompletion
achievementEarned
monthlyAchievementEarned
goalCompletionIndex
B24@?0@"_HKFitnessFriendWorkout"8^@16
v32@?0@"NSUUID"8@"NSDate"16^B24
B24@?0@"_HKFitnessFriendAchievement"8^@16
B24@?0@"_HKFitnessFriendActivitySnapshot"8^@16
v32@?0@"NSUUID"8@"NSNumber"16^B24
ActivitySharingCloudKitAccountKey
ActivitySharingHasCompletedFirstCloudKitFetchKeyVersion2
ActivitySharingSharedDataSubscription
ActivitySharingPrivateDataSubscription
ASCloudKitFetch
com.apple.ActivitySharing.CloudKitManager
@16@?0@"CKRecord"8
%@-%@
Observer
ChangeToken
v36@?0B8@"NSError"12@"NSArray"20@"NSArray"28
v28@?0B8@"NSError"12@"NSSet"20
Achievement
ActivitySnapshot
Event
Relationship
Workout
aps-environment
v24@?0q8@"NSError"16
v32@?0@"NSPersonNameComponents"8@"NSString"16@"NSError"24
@"NSArray"24@?0@"ASCloudKitManager"8@"NSArray"16
B16@?0@"<ASCloudKitManagerChangesObserver>"8
v52@?0@"ASCloudKitManager"8@"<ASCloudKitManagerChangesObserver>"16@"CKRecordZoneID"24B32@"NSArray"36@?<v@?>44
@"_HKFitnessFriendActivitySnapshot"24@?0@"ASCloudKitManager"8@"CKRecord"16
@"_HKFitnessFriendWorkout"24@?0@"ASCloudKitManager"8@"CKRecord"16
@"_HKFitnessFriendAchievement"24@?0@"ASCloudKitManager"8@"CKRecord"16
@"ASNotificationEvent"24@?0@"ASCloudKitManager"8@"CKRecord"16
@"ASCompetitionList"24@?0@"ASCloudKitManager"8@"CKRecord"16
B16@?0^@8
v32@?0@"CKRecordZoneID"8@"NSArray"16^B24
NOTIFICATION_TITLE_FORMAT_WORKOUT
NOTIFICATION_TITLE_FORMAT_WORKOUT_VIDEO
Localizable-seymour
NOTIFICATION_TITLE_FORMAT_ACHIEVEMENT
NOTIFICATION_TITLE_FORMAT_GOAL_COMPLETION_MOVE_ONLY
NOTIFICATION_TITLE_FORMAT_GOAL_COMPLETION
BULLETIN_TITLE_COMPETITION_REQUEST
BULLETIN_TITLE_COMPETITION_ACCEPTED
BULLETIN_TITLE_COMPETITION_ENDED_TIED
BULLETIN_TITLE_COMPETITION_ENDED_WINNER
BULLETIN_TITLE_COMPETITION_ENDED_LOSER
BULLETIN_TITLE_COMPETITION_SCORE_CAP_CELEBRATION
ActivitySharingLastTemplateRefreshTimestamp
v32@?0@"NSSet"8@"NSSet"16@"NSError"24
@"NSSet"16@?0@"NSDateInterval"8
B16@?0@"ACHTemplate"8
@"ACHTemplate"16@?0@"NSString"8
outgoing
incoming
%@-outgoing
%@-retry
%@-persisted
v24@?0@"NSString"8@"ASMessage"16
v16@?0q8
v16@?0^?8
tel:
mailto:
ActivitySharingHasFriendsChangedNotification
FriendList
B24@?0@"_HKFitnessFriendWorkout"8@"NSDictionary"16
v32@?0@"NSNumber"8@"NSSet"16^B24
com.apple.ActivityMonitorApp.activity-shared
competition
friendUUID
competition_uuid
competition_type
current_cache_index
last_pushed_cache_index
scores
opponent_scores
start_date_components
duration_date_components
preferred_victory_badge_styles
maximum_points_per_day
ActivitySharingScoreCapCelebrationAnchor
CompetitionManagerTransaction
v28@?0B8@"NSError"12@"ASContact"20
@16@?0@"ASContact"8
B16@?0@"CKRecord"8
@"ASCompetitionList"16@?0@"CKRecord"8
@"NSUUID"16@?0@"ASCompetitionList"8
@"CKRecord"16@?0@"ASContact"8
ActivitySharingMangerProcessingStartedNotification
ReadWrite
SubmanagerBarrier
v24@?0B8B12@"NSError"16
com.apple.private.healthkit
LastPushedWorkoutAnchor
LastPushedDeletedWorkoutAnchor
LastPushedTodayAchievementAnchorToken
LastPushedGoalCompletionAnchor
CloudKitManagerObserver
HealthData
ActivitySummary
v12@?0B8
B24@?0@"ASNotificationEvent"8@"NSDictionary"16
v24@?0@"NSSet"8@"NSNumber"16
Watch%
@"_HKFitnessFriendAchievement"16@?0@"ACHAchievement"8
@"ASNotificationEvent"16@?0@"_HKFitnessFriendWorkout"8
@"ASNotificationEvent"16@?0@"_HKFitnessFriendAchievement"8
v24@?0@"NSArray"8@"NSNumber"16
B40@?0@"HKWorkout"8@"HKDeletedObject"16q24^@32
@"NSString"16@?0@"_HKFitnessFriendAchievement"8
q24@?0@"NSString"8@"NSString"16
contacts
observer
persist
v32@?0@"NSUUID"8@"NSArray"16^B24
MasqueradeActivitySharingInviteVersion
notificationQueue
v32@?0@"ASCodableBulletin"8Q16^B24
ActivitySharingNotificationIcon
B16@?0@"ASCodableBulletin"8
@16@?0@"ASFriendNotificationContainer"8
ASMessageTypeInviteRequest
ASMessageTypeInviteResponse
ASMessageTypeFinalizeHandshake
ASMessageTypeWithdrawInviteRequest
Unknown (%d)
Contacts
contacts.dat
contacts2.dat
ContactsCache/
.dat
@16@?0@"NSURL"8
B16@?0@"_HKFitnessFriendWorkout"8
@"_HKFitnessFriendAchievement"16@?0@"_HKFitnessFriendAchievement"8
B24@?0@"<ASFilterableSample>"8@"NSDictionary"16
B24@?0@"_HKFitnessFriendActivitySnapshot"8@"NSDictionary"16
v16@?0@"ASCodableDatabaseCompetitionListEntry"8
com.apple.FitnessFriends.PeriodicUpdateActivity
Provider
v16@?0@"NSObject<OS_xpc_object>"8
ActivitySharing.Notifications
ActivitySharing.Notifications.Synced
ActivitySharing
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
v24@?0@"NSDictionary"8@"NSError"16
v32@?0@"CKShareMetadata"8@"CKShare"16@"NSError"24
v32@?0@"NSURL"8@"CKShareMetadata"16@"NSError"24
v16@?0@"CKShareParticipant"8
v16@?0@"CKRecord"8
v32@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24
v44@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24B32@"NSError"36
v16@?0@"CKRecordZoneID"8
v28@?0@"CKServerChangeToken"8B16@"NSError"20
Accept
Ignore
ASUserInfoIDContactUUID
ASUserInfoNotificationTypeInviteRequest
ASUserInfoNotificationTypeKey
InviteRequest
InviteAttemptNeedsSetup
InviteAttemptNeedToSignIn
InviteAttemptedNeedToUpgrade
InviteIncompatibleVersion
ACCEPT
IGNORE
ACTIVITY_SHARING_INVITATION_REQUEST_SETUP_TITLE
ACTIVITY_SHARING_INVITATION_REQUEST_SETUP_BODY
ACTIVITY_SHARING_INVITATION_REQUEST_SIGNIN_TITLE
ACTIVITY_SHARING_INVITATION_REQUEST_SIGNIN_BODY
ACTIVITY_SHARING_INVITATION_REQUEST_UPGRADE_TITLE
ACTIVITY_SHARING_INVITATION_REQUEST_UPGRADE_BODY
ACTIVITY_SHARING_VERSION_TOO_LOW_TITLE
ACTIVITY_SHARING_INCOMING_REQUEST_VERSION_TOO_LOW_BODY
ACTIVITY_SHARING_OUTGOING_REQUEST_VERSION_TOO_LOW_BODY
ACTIVITY_SHARING_VERSION_TOO_HIGH_TITLE
ACTIVITY_SHARING_OUTGOING_REQUEST_VERSION_TOO_HIGH_TITLE
ACTIVITY_SHARING_INVITATION_RESPONSE_BODY
ACTIVITY_SHARING_INVITATION_RESPONSE_BODY_WITH_CLOUDKIT_ADDRESS
ACTIVITY_SHARING_INVITE_ACCEPT_ERROR
ACTIVITY_SHARING_FRIEND_LIMIT_MESSAGE_TITLE
ACTIVITY_SHARING_FRIEND_LIMIT_MESSAGE_BODY
ACTIVITY_SHARING_INVITATION_REQUEST_TITLE
ACTIVITY_SHARING_INVITATION_REQUEST_BODY
ASActivitySharingProfileExtension
HDProfileExtension
NSObject
ASActivitySharingManagerProvider
ASActivitySharingPluginInterface
ASCompetitionAwardingSource
ACHEarnedInstanceAwarding
ASDatabaseCompetitionListEntryEntity
ASDatabaseCompetitionListEntryEncoder
ASDatabaseCompetitionListEntryJournalEntry
ASDatabaeCompetitionListEntryBulkDeletionJournalEntry
ASFakingManager
ASActivitySharingManagerReadyObserver
ASMessage
ASMessageQueue
ASRelationshipBeganPlaceholder
ASRelationshipManager
ASIDSMessageCenterDelegate
ASCloudKitManagerChangesObserver
ASGatewayManagerChangesObserver
ASFriendInviteBulletinManagerDelegate
ASOnWristMonitor
ASFakeBulletinManager
ASFriendNotificationContainer
ASCompetitionBulletinManager
ASCompetitionTemplateSource
ACHTemplateSource
ASActivityDataBulletinManager
ASActivitySharingPlugin
HDPlugin
HDDatabaseSchemaProvider
HDTaskServerClassProvider
ASCompanionBulletinPostingManagerSubtitleBodyPair
ASCompanionBulletinPostingManager
UNUserNotificationCenterDelegate
ASBulletinPostingManager
ASCloudKitServerChangeTokenCache
NSCopying
ASActivityDataNotificationManager
HDDataObserver
ASNotificationStep
ASCloudKitManager
APSConnectionDelegate
ASAsyncTransactionQueue
ASAchievementManager
ASCompetitionTemplateSourceDataProvider
ASCompetitionAwardingSourceDataProvider
ASFriendListObserver
ASMessageHandler
ASIDSMessageCenter
IDSServiceDelegate
ASFriendListManager
ASContactsManagerObserver
ASCompetitionManagerObserver
CHFitnessAppBadgeCountProvider
ASDatabaseCompetitionEntity
ASDatabseCompetitionEncoder
ASDatabaseCompetitionJournalEntry
ASDatabaseCompetitionDeletionJournalEntry
ASDatabaseCompetitionBulkDeletionJournalEntry
ASCompetitionManager
HDDatabaseProtectedDataObserver
ASActivityDataManagerObserver
ASPeriodicUpdateRecordProvider
ASActivitySharingManager
HDHealthDaemonReadyObserver
HDNanoSyncManagerObserver
FIFitnessAppsStateObserverDelegate
ASServer
HDTaskServer
_HKXPCExportable
ASServerInterface
ASSetupManager
Filterable
ASActivityDataManager
HDCurrentActivitySummaryHelperObserver
ACHAchievementStoreObserving
_ASContactPlaceholder
ASContactsManager
ASFriendListQueryServer
ASGatewayManager
ASGizmoBulletinPostingManager
ASOnWristMonitorDelegate
HDNanoAlertSuppressionObserver
ASActivityDataValidator
ASCompetitionStore
ASPeriodicUpdateManager
ASNotificationSentinelKeys
ASCloudKitUtility
ASFriendInviteBulletinManager
ASBulletinPostingManagerDelegate
T@"ASCodableDatabaseCompetitionListEntry",R,N,V_competitionList
T#,N,V_protobufClass
T@"NSSet",R,C,N
T:,N,V_handleErrorSendingMessageAction
TB,N,GisExpired
T@"<ASBulletinPostingManager>",R,N,V_bulletinPostingManager
T@"<ASBulletinPostingManagerDelegate>",W,N,V_delegate
_activateActivitySharingManager
T@"<ASCompetitionTemplateSourceDataProvider>",W,N,V_dataProvider
_batchedNotificationRequestsFromCodableBulletins:withAdditions:
T@"<ASIDSMessageCenterDelegate>",W,N,V_delegate
_competitionForVictoryTemplate:
T@"ACHAchievement",R,N
_contactsWithActiveCompetitions
T@"ASAchievementManager",W,N,V_achievementManager
_fakeSnapshotWithCompleteRings:
T@"ASActivityDataBulletinManager",W,N,V_activityDataBulletinManager
_hasMoveGoalForActivitySummary:
T@"ASActivityDataManager",W,N,V_activityDataManager
_isSharingSetup
T@"ASActivityDataNotificationRulesEngine",&,N,V_notificationRulesEngine
_lastPushedGoalCompletionAnchor
T@"ASActivitySharingManager",W,N,V_activitySharingManager
_notificationRequestForInvitationFromContact:requestIdentifier:
T@"ASCloudKitManager",W,N,V_cloudKitManager
_onWristMonitor
T@"ASCodableDatabaseCompetition",R,N,V_databaseCompetition
_readWriteQueue
T@"ASCompetitionManager",R,N,V_competitionManager
_requestAwardsUpdateIfNecessary
T@"ASContact",&,N,V_contact
activityDataNotificationManager
T@"ASContactsManager",W,N,V_contactsManager
addParticipant:
T@"ASFakingManager",R,N,V_fakingManager
appleStandHours
T@"ASFriendInviteBulletinManager",R,N,V_friendInviteBulletinManager
cloudKitAddress
T@"ASFriendListManager",W,N,V_friendListManager
cloudKitUtility
T@"ASPeriodicUpdateManager",R,N,V_periodicUpdateManager
competitionList
T@"ASRelationshipManager",R,N,V_relationshipManager
contactsManager
T@"ASSetupManager",R,N,V_setupManager
containsString:
T@"HDKeyValueDomain",R,N,V_deviceLocalActivitySharingKeyValueDomain
context
T@"HDProfile",W,N,V_profile
currentWorkouts
T@"NSData",&,N,V_payload
dealloc
T@"NSNumber",&,N
endDate
T@"NSObject<ACHTemplateSourceDelegate>",W,N,Vdelegate
fakeAchievement
T@"NSSet",C,N
friendWithUUID:
T@"NSSet",R,N,V_blocksWaitingOnSuccess
handleErrorSendingMessageAction
T@"NSString",&,N,V_subtitle
hk_map:
T@"NSString",R,C
initWithZoneID:
T@"NSString",R,N
inviterCallerID
T@"NSString",R,N,V_serviceIdentifier
isProxy
T@"_HKFitnessFriendAchievement",R,N
kilocalorieUnit
T@,&,N,V_token
T@?,C,N,V_ephemeralCompletionBlock
nanoSyncManager
T@?,C,N,V_objectTransformationBlock
numberWithBool:
T@?,C,N,V_shouldNotifyObserverBlock
predicateMatchingAllPredicates:
TB,R
profileExtensionWithIdentifier:
TB,R,N,V_hasRegisteredForUpdates
registerNotificationCategories:
TB,V_readyForOperations
remoteInterface
Ti,N,V_type
removeObserver:
Tq,N,V_retryCount
request
Tq,R,N,V_notificationRequestType
URLWithString:
setActivityDataBulletinManager:
UUID
setCreatedDate:
_acceptShareMetadatas:completion:
setGoalCompletionNotifications:
_achievementNotificationStep
setPreferredVictoryBadgeStyles:
_achievementsToPushWithYesterdaySnapshot:todaySnapshot:currentTodayAchievementAnchorToken:currentYesterdayAchievementAnchorToken:
setWorkoutData:
_activityDataManager
stringByAppendingPathComponent:
.cxx_destruct
T@"CKContainer",&,N,V_container
T#,R
T@"_HKFitnessFriendWorkout",R,N
T:,N,V_handleReceiveMessageAction
TB,R,N,V_hasCompletedFirstFetch
T@"<ASBulletinPostingManagerDelegate>",W,N
_achievementForAchievementData:
T@"<ASCompetitionAwardingSourceDataProvider>",W,N,V_dataProvider
_appIsInstalled
T@"<ASFriendInviteBulletinManagerDelegate>",W,N,V_delegate
_client
T@"<ASOnWristMonitorDelegate>",W,N,V_delegate
_contactsByUUID
T@"ASAchievementManager",R,N,V_achievementManager
_endTransaction
T@"ASActivityDataBulletinManager",R,N,V_activityDataBulletinManager
_gatewayManager
T@"ASActivityDataManager",R,N,V_activityDataManager
_idsIdentifiersForDestinations:
T@"ASActivityDataNotificationManager",R,N,V_activityDataNotificationManager
_lastPushedDeletedWorkoutAnchor
T@"ASActivitySharingManager",&,N,V_activitySharingManager
_messageCenters
T@"ASCloudKitManager",R,N,V_cloudKitManager
_observerQueue_performNotificationStep:onRecords:dispatchGroup:
T@"ASCloudKitUtility",&,N,V_cloudKitUtility
_queue_executingFetchOperations
T@"ASCompetitionBulletinManager",R,N,V_competitionBulletinManager
_relationshipRecordsToReconcile
T@"ASCompetitionManager",W,N,V_competitionManager
achievementData
T@"ASContactsManager",R,N,V_contactsManager
activitySummary
T@"ASFakeBulletinManager",R,N,V_fakeBulletinManager
allAchievements
T@"ASFriend",R,N
arrayWithArray:
T@"ASFriendListManager",R,N,V_friendListManager
cloudKitManager
T@"ASGatewayManager",R,N,V_gatewayManager
codableSnapshot
T@"ASPeriodicUpdateManager",W,N,V_periodicUpdateManager
contact
T@"ASRelationshipManager",W,N,V_relationshipManager
containsObject:
T@"FIFitnessAppsStateObserver",R,N,V_fitnessAppsStateObserver
content
T@"HDProfile",R,W,N,V_profile
currentCalendar
T@"HKActivitySummary",R,N
T@"NSDate",&,N,V_dateOfLastSuccessfulFetch
earnedInstances
T@"NSObject<ACHTemplateSourceDelegate>",W,N
expired
T@"NSSet",&,N,V_recordTypes
fi_activityType
T@"NSSet",R,N
friends
T@"NSString",&,N,V_body
hk_isAfterDate:
T@"NSString",C,N,V_senderAddress
initWithDomain:
T@"NSString",R,C,N
insertOrReplaceEntity:database:properties:error:bindingHandler:
T@"NSString",R,N,V_friendUUID
isMyActivityDataCurrentlyHidden
T@"UNNotificationRequest",R,N,V_notificationRequest
isWatch
T@"_HKFitnessFriendActivitySnapshot",R,N
localizationKey
T@,R,N,V_token
T@?,C,N,V_notifyObserverBlock
notifyCompetitionEndWinnerToken
T@?,C,N,V_objectsTransformationBlock
payload
TB,N,V_isWatch
profile
TB,R,N
protectionClass
TB,R,N,V_isWatch
release
TQ,R
removeDelegate:
Tq,N,V_managerStartAction
removeProvider:
Tq,R,N
serviceSpaceDidBecomeAvailable:
URLByAppendingPathComponent:
setAcceptSharesCompletionBlock:
UTF8String
setCompetition:
UUIDString
setFetchRecordsCompletionBlock:
_achievementManager
setMaximumNumberOfPointsPerDay:
_achievementStore
setRecordTypes:
_activityDataBulletinManager
setXpcActivity:
_activityDataNotificationCategories
_activityDataNotificationManager
_activityDataShare
_activityDataShareRecordID
_activitySharingAchievementForAchievementData:
_activitySharingHasFriendsChangedToken
_activitySharingManager
_activitySharingManagerProcessingStarted
_activitySharingWorkoutForWorkoutData:
_activitySnapshotForSnapshotData:
_activitySnapshotNotificationStep
_activitySnapshotsToPushWithYesterdaySnapshot:todaySnapshot:
_activitySummaryIndex
_activitySummaryQueue
_allCompetitionsOrderedByEndDate
_allContactsPreferringPlaceholderContacts
_appBundleIdentifier
_appInstalled
_apsConnection
_archivedCompetitionListByMergingCurrentCompetitionList:
_archivedCompetitionListCache
_batchedNotificationRequestsFromCodableBulletins:
_beginTransaction
_blocksWaitingOnFetch
_blocksWaitingOnSuccess
_body
_bulletinPostingManager
_cachedCompetitionListForFriendWithUUID:type:owner:
_calendar
_cancelNewAccountTasksTimer
_changeTokenQueue
_ckQueue_handleDeletedWorkoutEvents:completion:
_ckQueue_handleNewSnapshotsForSelf:moreComing:
_ckQueue_processActivitySnapshotsForSelf:
_cloudKitAccountStatus
_cloudKitAccountStatusChanged:
_cloudKitManager
_cloudKitManagerObserverQueue
_cloudKitUtility
_competitionAwardingSource
_competitionBulletinManager
_competitionDataAvailable
_competitionList
_competitionManager
_competitionNotificationStep
_competitionStore
_competitionTemplateSource
_competitionsWithPredicate:profile:error:
_contact
_contactStore
_contactStoreContactWithIdentifier:
_contactStoreDidChangeNotification:
_contactWithFakeCompetitionStatus:
_contactWithIncomingHandshakeToken:
_contactWithInviteRequest:fromSender:
_contactWithOutgoingHandshakeToken:
_contactWithRemoteRelationshipRecordZoneID:
_contactWithUUIDPreferringPlaceholders:
_contactsManager
_contactsQueue
_contactsTransactionBarrier
_container
_copyAchievement:
_createActivityDataShareWithCompletion:
_createNotificationSteps
_createRecordZonesWithIDs:priority:completion:
_createTableSQLStringForCompetitionLists
_creatorDevice
_currentActivityDataPreview
_currentActivitySummary
_currentCompetitionListCache
_currentDeletedWorkoutAnchor
_currentFetchPriority
_currentFetchType
_currentGoalCompletionAnchor
_currentInProgressPushActivitySummary
_currentLastPushedActivitySummary
_currentTodayAchievementAnchorToken
_currentWorkoutAnchor
_currentlyPairedWatchMeetsMinimumVersion
_dataManager
_dataProvider
_databaseChangeTokensByDatabaseScope
_databaseCompetition
_dateOfLastSuccessfulFetch
_deactivateActivitySharingManager
_deferredBulletinTimestamp
_delegate
_description
_deviceLocalActivitySharingKeyValueDomain
_deviceParticipatesInAutomaticCompetitionManagement
_dispatchAction:invocationBlock:
_domainName
_dropTableSQLStringForCompetitionLists
_dropTableSQLStringForCompetitions
_endDatePredicate
_ephemeralCompletionBlock
_existingFriendUUIDsAwaitingMyCompetitionResponse
_existingFriendUUIDsWithAcceptedCompetitionRequestsFromMe
_existingFriendUUIDsWithCompletedCompetitions
_fakeBulletinManager
_fakeCompetitionHistory
_fakeCompetitionWithStartDate:opponentScores:scores:
_fakeContact
_fakingManager
_fetchAllChangesWithPriority:activity:
_fetchAllChangesWithPriority:activity:completion:
_fetchChangesInDatabase:serverChangeTokenCache:priority:activity:completion:
_fetchChangesInZones:inDatabase:serverChangeTokenCache:priority:allowRetry:completion:
_fetchCloudKitAccountStatusAndNotifyOfChanges
_fetchCloudKitAddressWithCompletion:
_fetchShareWithShareRecordID:completion:
_fetchTransaction
_filterAchievements:forSnapshotIndex:
_findDeletedWorkoutEventsWithAnchor:completion:
_findMatchingContactStoreContactForDestinations:
_fitnessAppsRestricted
_fitnessAppsStateObserver
_friendForVictoryTemplate:
_friendInviteBulletinManager
_friendListManager
_friendListQueue
_friendUUID
_friendUUIDToCompetitionRequestNotificationRequestRecordMap
_friendUUIDsByZoneID
_friendUUIDsWithUpdatedCompetitions
_friends
_handleAcceptedCompetitionFromFriendWithUUID:
_handleAccountStatusChange:
_handleActivityDataNotificationResponse:
_handleCompetitionRequestFromFriendWithUUID:
_handleErrorForMessage:
_handleErrorSendingFinalizeHandshake:
_handleErrorSendingInviteRequest:
_handleErrorSendingInviteResponse:
_handleErrorSendingMessageAction
_handleErrorSendingWithdrawInviteRequest:
_handleFinalizeHandshake:fromSenderAddress:messageHandledCompletion:
_handleHasFriendsChanged
_handleIncomingNotification:
_handleInviteRequest:fromSenderAddress:messageHandledCompletion:
_handleInviteResponse:fromSenderAddress:messageHandledCompletion:
_handleMessage:identifier:
_handleMessageSendSuccess:error:identifier:
_handleNewPrivateDatabaseRecordChanges:sharedDatabaseRecordChanges:fetchType:
_handleNewSnapshots:workouts:achievements:moreComing:
_handleReceiveMessageAction
_handleWithdrawInviteRequest:fromSenderAddress:messageHandledCompletion:
_hasAppleMoveMinutesGoal
_hasCompletedFirstFetch
_hasEnergyBurnedGoal
_hasFetchedProtectedData
_hasFriendsToShareWith
_hasPendingContactsReconcile
_hasQueuedPush
_hasRegisteredForUpdates
_healthDataQueue
_identifierToMessageDictionary
_idsIdentifierForDestination:
_idsService
_incomingDispatchQueue
_insertCompetition:database:error:
_insertCompetitionList:database:error:
_insertCompetitionLists:profile:error:
_insertCompetitions:profile:error:
_insertInviteForContact:destination:serviceIdentifier:
_inviteNotificationCategories
_isAlertSuppressionEnabled
_isCloudKitManagerProcessingData
_isPostingAllowed
_isPushInProgress
_isStandalonePhoneSummary
_isWatch
_lastPushedTodayAchievementAnchorToken
_lastPushedWorkoutAnchor
_lastReportedFriendsDate
_lastReportedNumberOfFriends
_loadCachedCompetitionsAndNotifyObservers
_loadOrCreateCurrentCompetitionListForFriendWithUUID:
_localCompetitionForRemoteCompetition:friendUUID:
_localSourceUUID
_localUserDefaultsDomainWithProfile:
_lockingQueue
_mainQueue_completeSetupIfNeeded
_mainQueue_nanoRegistryInfoChanged
_mainQueue_notifySubmanagersOfManagerReady
_mainQueue_shouldCompleteSetup
_mainQueue_startSubmanagerProcessingIfNeeded
_mainQueue_stopSubmanagerProcessingIfNeeded
_managerStartAction
_messageHandlerForType:
_migrateToTwoWaySyncSetupDefault
_mostRecentAchievementEarnedDateForFriendWithUUID:
_mostRecentGoalCompletedSnapshotIndexForFriendWithUUID:
_mostRecentMonthlyAchievementEarnedDateForFriendWithUUID:
_mostRecentWorkoutCompletionDateForFriendWithUUID:
_mostSignificantSnapshot:
_mostSignificantSnapshotAmongSnapshots:
_nanoUserDefaultsDomainKeyForFriendWithUUID:keyTypeString:
_nanoUserDefaultsDomainWithProfile:
_newAccountTasksTimer
_newAchievements
_newDeletedWorkoutEvents
_newPrepolulatedUserInfoForInvitationFromContactUUID:categoryIdentifier:notificationContent:title:message:
_newPrepopulatedNotificationContentForNotificationContent:title:message:
_newSnapshots
_newSnapshotsForSelf
_newWorkouts
_notificationEventNotificationStep
_notificationPostingManager
_notificationQueue
_notificationRequest
_notificationRequestForCodableBulletin:
_notificationRequestForInvitationFromContact:categoryIdentifier:requestIdentifier:title:formatString:
_notificationRequestForInvitationFromContactUUID:categoryIdentifier:requestIdentifier:title:message:
_notificationRequestFromCodableBulletin:
_notificationRequestFromCodableBulletin:withAdditions:
_notificationRequestType
_notificationRequests
_notificationRulesEngine
_notificationStore
_notifyAboutWorkoutsDetectionIfRequired:
_notifyObserverBlock
_objectTransformationBlock
_objectsTransformationBlock
_observerQueue
_observerQueue_clearFriendUUIDByZoneIDCache
_observerQueue_friendUUIDForActivityDataShareRecordZoneID:
_observerQueue_notifyObserversOfBeginUpdatesForFetchWithType:
_observerQueue_notifyObserversOfEndUpdatesForFetchWithType:
_observers
_observersNotReady
_observersNotReadyGroup
_outgoingDispatchQueue
_outgoingMessageQueue
_pairingStatusChangedToken
_payload
_performAndRetryNewAccountTasksIfNecessaryWithShouldCreateSubscriptions:shouldFetch:
_performAndRetryNewAccountTasksWithRetryInterval:shouldCreateSubscriptions:shouldFetch:
_performBlockWaitingForFriendshipBeganForFriendWithUUID:block:
_performBlockWhenAllObserversBecomeReady:
_performNewAccountTasksCreatingSubscriptions:fetching:completion:
_periodicUpdateManager
_persistContacts:
_persistQueue
_persistedAnchorTokenWithKey:
_persistedAnchorWithKey:
_persistedMessageQueue
_placeholderContactsByUUID
_placeholderFriendshipBeganTokens
_postNotificationRequest:
_postQueuedNotificationRequestsIfPossible
_postedFriendInviteIdentifiersForContactUUID
_privateDatabaseActivitySnapshotNotificationStep
_privateDatabaseCompetitionNotificationStep
_processActivityDataPreview:friendUUID:
_processMessageQueue:preprocessingBlock:
_processPersistedMessagesIfNeeded
_profile
_protobufClass
_providerQueue
_providers
_pushNotificationRecieved
_queue
_queueName
_queue_acceptShares:forRelationship:contact:completion:
_queue_activitySharingManagerProcessingStarted
_queue_addPersonWithCloudKitAddress:toShares:completion:
_queue_allContacts
_queue_allContactsByRecordID
_queue_allRelationshipsByRecordID
_queue_apsEnvironmentString
_queue_autoAcceptCompetitionRequestFromContact:completion:
_queue_callFetchCompletionBlocksWithSuccess:error:
_queue_cancelAllExecutingFetches
_queue_clearChangeTokenCacheAndFriendListWithCompletion:
_queue_competitionListCacheForType:owner:
_queue_completeCompetitionIfNecessaryForFriendWithUUID:
_queue_deleteActivityDataForFriendWithUUID:
_queue_deleteAllActivitySharingData
_queue_earnedInstancesForInterval:selectingCompetitionsUsingFilter:
_queue_fetchSharesForRelationship:completion:
_queue_friendListDidUpdate
_queue_friendWithUUID:
_queue_getAndHandleAllActivitySharingData
_queue_handleNewRemoteCompetitionList:contact:
_queue_handleNewSnapshots:workouts:achievements:
_queue_handleSavedCompetitionListRecords:
_queue_handleSavedRecords:forContact:
_queue_hasFriendsToShareWith
_queue_insertPlaceholderFriendshipDidBeginForContactWithUUID:
_queue_insertSamples:
_queue_isLastCloudKitAddressDifferentFromNewCloudKitAddress:
_queue_notifyObservers
_queue_notifyObserversOfCompetitionUpdatesForFriendsWithUUIDs:
_queue_notifyObserversOfCompetitionsLoaded
_queue_notifyObserversOfFriendListChanges
_queue_notifyObserversOfStatusChanged:
_queue_performUpdateForActivity:withCompletion:
_queue_persistAnchorTokenValue:forKey:
_queue_persistAnchorValue:forKey:
_queue_postNotificationRequests:
_queue_processRemoteRelationships:completion:
_queue_pushDisable
_queue_pushEnable
_queue_reconcileAddressBookAgainstRelationships:
_queue_reconcileCloudKitRelationships:
_queue_removeFriendWithUUID:eventType:completion:
_queue_removePlaceholderRelationshipBeganForContactWithUUID:success:
_queue_samplesAdded:
_queue_saveCompetitionListsToCache:owner:
_queue_saveFitnessFriendActivitySnapshots:workouts:achievements:
_queue_saveRelationship:contact:completion:
_queue_saveRelationship:contact:withExtraRecords:completion:
_queue_saveRelationshipAndFetchOrCreateShares:contact:completion:
_queue_selectAchievementNotifications
_queue_selectGoalCompletionNotifications
_queue_selectWorkoutNotifications
_queue_setActivityDataVisibleIfNecessaryForContact:completion:
_queue_setHasCompletedFirstFetch:
_queue_setLastPushedDeletedWorkoutAnchor:
_queue_setLastPushedGoalCompletionAnchor:
_queue_setLastPushedTodayAchievementAnchorToken:
_queue_setLastPushedWorkoutAnchor:
_queue_showCompetitionAcceptedForFriendWithUUID:competition:
_queue_showCompetitionEndedWithFriendWithUUID:
_queue_showCompetitionRequestFromFriendWithUUID:competition:
_queue_showFriendNotificationsIfRequired
_queue_showScoreCapCelebrationForFriendsWithCappedInProgressCompetitions:
_queue_start
_queue_startFetchAllChangesOperationWithPriority:activity:changeTokenCache:completion:
_queue_stop
_queue_updateFriendList
_queue_updateScoresWithTodaySummary:yesterdaySummary:
_readyForOperations
_receivedChangesFromCloudKit
_recordForCurrentCompetitionList:contact:
_recordTypes
_relationshipManager
_relationshipNotificationStep
_remoteCompetitionListCache
_remoteRelationshipNotificationStep
_remoteRelationshipRecordsToProcess
_removeAllUnusedTemplatesUsingClient
_removeAllUnusedTemplatesUsingProfile
_removeCompetitionsWithFriendFromDatabase:type:error:
_removeInvalidWorkouts:
_removeUnusedTemplatesForFriendWithUUID:templateStore:
_retryCount
_retryMessageQueue
_saveCloudKitAddressToKeyValueStore
_saveCompetitionListToDatabase:owner:error:
_saveCompetitionLists:owner:
_saveCompetitionsToDatabase:friendUUID:type:error:
_saveCurrentCompetitionList:archivedCompetitionList:contact:completion:
_saveRecordsIntoPrivateDatabase:recordIDsToDelete:savePolicy:priority:activity:completion:
_saveRecordsIntoPrivateDatabaseCreatingZones:recordIDsToDelete:savePolicy:priority:activity:completion:
_scoreCapCelebrationAnchor
_scoreCapCelebrationAnchorWithProfile:
_screenTimeConversation
_sendMessage:type:destinations:completion:
_senderAddress
_serialQueue
_serverChangeTokenCache
_serviceIdentifier
_setActivitySummaryIndex:
_setContacts:waitForTransaction:
_setEndDate:
_setMostRecentAchievementEarnedDate:forFriendWithUUID:
_setMostRecentGoalCompletedSnapshotIndex:forFriendWithUUID:
_setMostRecentMonthlyAchievementEarnedDate:forFriendWithUUID:
_setMostRecentWorkoutCompletionDate:forFriendWithUUID:
_setPushCount:
_setScoreCapCelebrationAnchor:
_setSourceRevision:
_setStartDate:
_setUUID:
_setWheelchairUse:
_setupManager
_shiftedAchievements:friendTimeZones:friendListManager:
_shouldExecuteWhenProtectedDataIsUnavailable
_shouldFilterBlacklistContactDestinations:
_shouldFilterWhitelistContactDestinations:
_shouldListenForUpdates
_shouldNotifyObserverBlock
_showFakeAchievementNotification
_showFakeBatchNotification
_showFakeCompetitionAcceptedNotification
_showFakeCompetitionEndedLoserNotification
_showFakeCompetitionEndedTieNotification
_showFakeCompetitionEndedWinnerNotification
_showFakeCompetitionRequestNotification
_showFakeCompetitionScoreCapCelebrationNotification
_showFakeGoalCompletionDuringCompetitionNotification
_showFakeGoalCompletionNotification
_showFakeGuidedRunWorkoutNotification
_showFakeGuidedWalkWorkoutNotification
_showFakeInvitationRequest
_showFakeInvitationResponse
_showFakeInviteAttemptNeedsSetup
_showFakeNeedToSignIn
_showFakeNeedToUpgrade
_showFakeVideoWorkoutNotification
_showFakeWorkoutNotification
_showFakeWorkoutNotificationWithWorkout:
_showIncompatibleVersionForContact:title:formatString:
_snapshotSourceUUIDsByIndex
_sourceWithBundleIdentifier:name:productType:options:
_stripFZIDPrefix
_submanagerBarrierGroup
_submanagerBarrierQueue
_submanagerInitializationComplete
_submanagerProcessingStarted
_submanagersProcessingStartedLock
_submitNotificationRequest:forContact:
_subscribeToChangesInDatabase:subscriptionPrefix:recordTypes:recordTypesToDelete:completion:
_subscribeToChangesInPrivateDatabaseWithCompletion:
_subscribeToChangesInSharedDatabaseWithCompletion:
_subscriptionNotificationWasReceivedDuringCurrentFetch
_subtitle
_subtitleBodyPairForAchievementCodableBulletin:
_subtitleBodyPairForCodableBulletin:
_subtitleBodyPairForWorkoutCodableBulletin:
_synchronizePreferences
_targetQueue
_taskUUID
_timestamp
_token
_transactionQueue
_type
_unhiddenSamplesInFilterableSamples:friendTimeZones:friendListManager:
_updateSubmanagerProcessingStarted:
_useNewAchievementsSystem
_userInfoForInvitationResponseFromContact:notificationContent:message:
_userNotificationCenter
_verifyOrCreateSubscriptionsWithCompletion:
_waitForTransaction
_waitUntilSubmanagersReady
_withdrawNotificationRequestsWithIdentifiers:
_workoutNotificationStep
_workoutsAfterAnchor:withPredicate:profile:
_workoutsForActivitySnapshot:anchor:completion:
_workoutsToPushWithYesterdaySnapshot:todaySnapshot:currentWorkoutAnchor:
_yesterdayActivitySummary
_yesterdayInProgressPushActivitySummary
_yesterdayLastPushedActivitySummary
_zoneChangeTokensByZoneID
aa_isManagedAppleID
aa_primaryAppleAccount
absoluteString
acceptCompetitionRequestFromFriendWithUUID:completion:
acceptInviteRequestFromFriendWithUUID:completion:
acceptSharesWithURLs:completion:
accountStatusWithCompletionHandler:
achievementAnchor
achievementCompletionEventWithAchievement:
achievementManager
achievementNotifications
achievementStore
achievementStore:didAddAchievements:
achievementStore:didRemoveAchievements:
achievementStore:didUpdateAchievements:
achievementStoreDidFinishInitialFetch:
achievementWithTemplateUniqueName:
achievementWithTemplateUniqueName:completedDate:value:friendUUID:
achievements
achievementsForFriendWithUUID:
actionIdentifier
actionWithIdentifier:title:options:
activeDeviceInfo
activeEnergyBurned
activeEnergyBurnedGoal
activityDataBulletinManager
activityDataManager
activityDataManager:didUpdateTodaySummary:yesterdaySummary:
activityDataPreview
activityDataRecordZoneID
activityDataRootRecordID
activityMoveMode
activityShareURL
activitySharingManager
activitySharingManagerForProfile:
activitySharingManagerReady:
activitySnapshot
activitySnapshotsForFriendWithUUID:
addBulletins:
addDelegate:queue:
addEarnedInstances:completion:
addEntriesFromDictionary:
addFriendListObserver:
addJournalEntries:error:
addJournalEntry:error:
addMigrationForSchema:toVersion:foreignKeyStatus:handler:
addNotificationRequest:withCompletionHandler:
addObject:
addObjectsFromArray:
addObserver:
addObserver:forDataType:
addObserver:selector:name:object:
addOperation:
addParticipantWithCloudKitAddress:toShares:completion:
addProtectedDataObserver:
addProvider:
addTemplates:completion:
addresses
alertBody
alertSuppressionInvalidatedForSuppressionId:reason:
alertSuppressionService
allAchievementsWithError:
allDatabaseCompetitionsWithProfile:withError:
allFriends
allObjects
allTemplates
allValues
allocWithZone:
allowableByContactsHandles:
allowedByScreenTime
anyObject
appleExerciseTime
appleExerciseTimeGoal
appleMoveMinutes
appleMoveMinutesGoal
appleStandHoursGoal
applyEntries:withProfile:
applyPropertiesToObject:persistentID:row:error:
archivedCompetitionListForFriendWithUUID:
archivedDataWithRootObject:requiringSecureCoding:error:
areFitnessAppsRestricted
array
arrayByAddingObject:
arrayByAddingObjectsFromArray:
arrayWithObjects:count:
as_autoreleasingCompactMap:
autorelease
awaitingSentinelKey
badgeCount
beginHandlingOperations
beginObserving
beginObservingData
beginPeriodicUpdates
beginReceivingMessages
behavior
blocksWaitingOnSuccess
body
boolForKey:
boolValue
bulletinPostingManager
bulletinPostingManager:didReceiveNotificationResponse:
bulletins
cancel
cancelAllExecutingFetches
capabilities
categoryWithIdentifier:actions:intentIdentifiers:options:
changeTokenCacheFromUserDefaultsWithSerialQueue:
class
clearFriendListWithCompletion:
clientProxy
client_deliverFriendList:queryUUID:
cloudKitAccountStatusWithCompletion:
cloudKitManager:didBeginUpdatesForFetchWithType:
cloudKitManager:didEndUpdatesForFetchWithType:
cloudKitManager:didReceiveNewActivitySnapshotsForSelf:moreComing:changesProcessedHandler:
cloudKitManager:didReceiveNewCompetitionLists:moreComing:changesProcessedHandler:
cloudKitManager:didReceiveNewCompetitionListsForSelf:moreComing:changesProcessedHandler:
cloudKitManager:didRecieveNewActivitySnapshots:moreComing:changesProcessedHandler:
cloudKitManager:didRecieveNewFriendAchievements:moreComing:changesProcessedHandler:
cloudKitManager:didRecieveNewFriendWorkouts:moreComing:changesProcessedHandler:
cloudKitManager:didRecieveNewNotificationEvents:moreComing:changesProcessedHandler:
cloudKitManager:didRecieveNewRelationships:fromRecordZoneWithID:moreComing:changesProcessedHandler:
cloudKitManager:didRecieveNewRemoteRelationships:fromRecordZoneWithID:moreComing:changesProcessedHandler:
cloudKitManager:didUpdateAccountStatus:
codableContactIncludingCloudKitFields:
codableDatabaseCompetitionListEntryForOwner:
codableDatabaseCompetitionsFromCompetitions:withFriendWithUUID:withType:
codableFriendIncludingCloudKitFields:
codableRepresentationForPersistentID:row:error:
codableWorkout
code
columnDefinitionsWithCount:
compare:
compare:options:
competition
competitionBulletinManager
competitionListFromCodableDatabaseCompetitionList:codableCompetitions:withType:
competitionListWithRecord:
competitionManager
competitionManager:didUpdateCompetitionsForFriendsWithUUIDs:
competitionManagerDidLoadCachedCompetitions:
competitionStage
competitions
competitionsForFriendWithUUID:
completeCompetitionWithFriendWithUUID:completion:
completedCompetitions
completedDate
components:fromDate:
components:fromDate:toDate:options:
compoundPredicateWithPredicate:otherPredicate:
configurationClass
conformsToProtocol:
connection
connection:channelSubscriptionsFailedWithFailures:
connection:didChangeConnectedStatus:
connection:didFailToSendOutgoingMessage:error:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didReceivePublicToken:
connection:didReceiveToken:forInfo:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveURLToken:forInfo:
connection:didReceiveURLTokenError:forInfo:
connection:didSendOutgoingMessage:
connectionConfigured
connectionDidReconnect:
connectionInterrupted
connectionInvalidated
contactMatchingCriteriaBlock:
contactWithCodableContact:
contactWithDestinations:
contactWithUUID:
contacts
contactsManagerDidUpdateContacts:
container
containerWithIdentifier:
containerWithNotificationRequest:friendUUID:bulletinType:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
copy
copyWithZone:
count
countByEnumeratingWithState:objects:count:
countUnit
createContactWithDestinations:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
createShareAndAssociatedZoneWithShareRecordID:rootRecord:otherRecordsToSave:completion:
createShareWithRootRecord:otherRecordsToSave:completion:
createTaskServerWithUUID:configuration:client:delegate:error:
createdDate
currentAchievements
currentActivitySnapshot
currentActivitySummary
currentActivitySummaryHelper
currentActivitySummaryHelper:didUpdateTodayActivitySummary:changedFields:
currentActivitySummaryHelper:didUpdateYesterdayActivitySummary:changedFields:
currentCacheIndex
currentCompetition
currentCompetitionListForFriendWithUUID:
currentOrMostRecentCompetition
currentRelationshipEventAnchor
currentRemoteCompetitionForContact:
currentSchemaVersionForProtectionClass:
customPlaceholderValuesForTemplate:
customPlaceholderValuesForTemplate:error:
daemon
daemonReady:
data
dataManager
dataProvenanceManager
dataProvider
dataWithContentsOfURL:options:error:
database
database:protectedDataDidBecomeAvailable:
databaseCompetition
databaseEntitiesForProtectionClass:
databaseForEntityClass:
databaseScope
databaseTable
date
dateActivityDataInitiallyBecameVisibleToMe
dateByAddingTimeInterval:
dateByAddingUnit:value:toDate:options:
dateForKey:error:
dateForLatestIncomingCompetitionRequest
dateForLatestIncomingInviteRequest
dateForLatestOutgoingCompetitionRequest
dateFromComponents:
dateOfLastSuccessfulFetch
dateWithTimeIntervalSinceReferenceDate:
debugDescription
decimalDigitCharacterSet
decodeIntegerForKey:
decodeObjectOfClass:forKey:
defaultCenter
defaultLocalDataProvenance
defaultManager
delegate
deleteActivityDataForFriendWithUUID:
deleteAllActivitySharingData
deleteCachedCompetitions
deleteDataObjectsOfClass:predicate:limit:deletedSampleCount:notifyObservers:generateDeletedObjects:recursiveDeleteAuthorizationBlock:error:
deleteEntitiesWithPredicate:healthDatabase:error:
deletedWorkoutEventWithUUID:
deregisterBulletins
description
descriptorForRequiredKeysForStyle:
destinations
deviceLocalActivitySharingKeyValueDomain
dictionary
dictionaryForKey:
dictionaryRepresentation
dictionaryWithCapacity:
dictionaryWithDictionary:
dictionaryWithObjects:forKeys:count:
didAddSamplesOfTypes:anchor:
discoverabilitySignal
displayName
distantPast
domain
doubleForKey:
doubleValue
doubleValueForUnit:
duration
durationDateComponents
earnedDateComponents
earnedInstancesForHistoricalInterval:
earnedInstancesForHistoricalInterval:databaseContext:
earnedInstancesForIncrementalInterval:
emailAddresses
encodeInteger:forKey:
encodeObject:forKey:
encodeWithCoder:
endDateCacheIndex
endHandlingOperations
endObserving
endObservingData
endPeriodicUpdates
endReceivingMessages
energyBurned
energyBurnedGoal
enqueueBulletins:withPostingSyle:
entityEncoderForProfile:transaction:purpose:encodingOptions:authorizationFilter:
entityEnumeratorWithType:profile:
enumerateAchievementsWithPredicate:anchor:profile:error:handler:
enumerateAllCompetitionListsWithProfile:error:handler:
enumerateIncludingDeletedObjects:error:handler:
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
enumeratePersistentIDsAndProperties:error:enumerationHandler:
enumerateProperties:withPredicate:healthDatabase:error:enumerationHandler:
enumerateQueuedMessagesUsingBlock:
enumerateSnapshotsWithPredicate:anchor:profile:error:handler:
enumerateWorkoutsWithPredicate:anchor:profile:error:handler:
ephemeralAchievementWithTemplateUniqueName:
ephemeralAchievementWithTemplateUniqueName:error:
ephemeralCompletionBlock
errorWithDomain:code:userInfo:
executeSQL:error:bindingHandler:enumerationHandler:
expireChangeTokenWithCompletion:
exportedInterface
extensionForHealthDaemon:
extensionForProfile:
fakeBulletinManager
fakeCompetitionWithStartDate:winningParticipant:
fakeCompleteSnapshot
fakeFirstGlanceFriendListForMarketing
fakeFriend
fakeFriendAchievement
fakeFriendWithCompetitionStatus:competition:
fakeGuidedRunWorkout
fakeGuidedWalkWorkout
fakeSnapshot
fakeTiedCompetitionWithStartDate:
fakeVideoWorkout
fakeWorkout
fakeWorkoutWithSeymourCatalogWorkoutIdentifier:seymourMediaType:
fakingManager
fetchActivityAlertSuppressionStateWithCompletion:
fetchAllChangesIfTimeSinceLastFetchIsGreaterThan:priority:activity:completion:
fetchAllChangesWithPriority:activity:completion:
fetchAllDataIfTimeSinceLastFetchIsGreaterThan:completion:
fetchAllDataWithCompletion:
fetchAreMultipleDevicesSharingDataForSnapshotIndex:withCompletion:
fetchChangesInPrivateDatabaseWithServerChangeTokenCache:priority:activity:completion:
fetchChangesInSharedDatabaseWithServerChangeTokenCache:priority:activity:completion:
fetchCloudKitAccountStatusWithCompletion:
fetchCloudKitAddressWithCompletion:
fetchFriendWithRemoteUUID:completion:
fetchFullNameAndPrimaryEmailOnAccountWithCompletionHandler:
fetchOrCreateActivityDataShareWithCompletion:
fetchShareParticipantForEmailAddress:completion:
fetchShareParticipantWithCloudKitAddress:completion:
fetchShareWithShareRecordID:completion:
fetchfriendDataWithRemoteUUID:completion:
fileURLWithPath:isDirectory:
filterNotificationGroup:
filter_date
filter_friendUUID
filteredArrayUsingPredicate:
filteredSetUsingPredicate:
finishDecoding
firstObject
fitnessAppsStateObserver
fitnessAppsStateObserver:applicationInstallStateDidChangeForBundleIdentifiers:
fitnessAppsStateObserver:restrictedStateDidChange:
fitnessFriendAchievementType
fitnessFriendAchievementWithRecord:friendUUID:
fitnessFriendActivitySnapshotType
fitnessFriendActivitySnapshotWithCodableSnapshot:friendUUID:uploadedDate:
fitnessFriendActivitySnapshotWithRecord:friendUUID:
fitnessFriendWorkoutFromHKWorkout:
fitnessFriendWorkoutType
fitnessFriendWorkoutWithCodableWorkout:
fitnessFriendWorkoutWithRecord:friendUUID:
fitnessFriendworkoutWithActivityType:friendUUID:startDate:endDate:duration:totalActiveEnergyBurned:totalBasalEnergyBurned:totalDistance:goalType:goal:bundleID:isWatchWorkout:isIndoorWorkout:deviceManufacturer:deviceModel:amm:seymourCatalogWorkoutIdentifier:seymourMediaType:
fitnessMode
forceSaveRecordsIntoPrivateDatabaseIgnoringServerChanges:recordIDsToDelete:priority:activity:completion:
friend
friendAchievedDescriptionForAchievement:
friendAchievedTitleForAchievement:
friendAchievements
friendInviteBulletinManager
friendInviteBulletinManagerDidReceiveActionResponse:fromContactWithUUID:
friendListData
friendListDidLoadCompetitions
friendListDidUpdate:
friendListManager
friendUUID
friendWorkouts
fullName
gatewayManager
gatewayManagerStatusDidChange
gatewayStatusWithCompletion:
getNotificationCategoriesWithCompletionHandler:
getWristState:
goalCompletionAnchor
goalCompletionEventWithActivitySummary:
goalCompletionNotifications
handleDatabaseObliteration
handleNotificationResponse:completion:
handleReceiveMessageAction
handshakeToken
hasCalculatedFinalScore
hasCompetitionHistory
hasCompletedCompetition
hasCompletedFirstFetch
hasFriendsToShareWith
hasIgnoredCompetitionRequest
hasIncomingCompetitionRequest
hasIncomingInviteRequest
hasInviteRequestFromMe
hasOutgoingCompetitionRequest
hasOutgoingInviteRequest
hasPushedFinalScore
hasReachedMaximumNumberOfFriends
hasRegisteredForUpdates
hash
hkWorkoutFromFriendWorkout
hk_UUIDWithData:
hk_dataForUUIDBytes
hk_filter:
hk_firstObjectPassingTest:
hk_gregorianCalendar
hk_isAfterOrEqualToDate:
hk_isBeforeDate:
hk_mapToSet:
hk_minus:
hk_startOfDateByAddingDays:toDate:
iconNamed:
identifier
ignoreCompetitionRequestFromFriendWithUUID:completion:
ignoreInviteRequestFromFriendWithUUID:completion:
incomingHandshakeToken
indexOfObjectPassingTest:
init
initForCreatorDevice:
initForReadingFromData:error:
initWithActionIdentifier:userInfo:
initWithActivitySnapshots:friendAchievements:friendWorkouts:contact:competitions:
initWithArray:
initWithBundleIdentifier:
initWithCapacity:
initWithCategory:domainName:profile:
initWithCodable:
initWithCoder:
initWithCompetitionList:
initWithConfiguration:
initWithContainer:
initWithData:
initWithDatabaseCompetition:
initWithDescription:targetSerialQueue:
initWithDictionary:
initWithFriendUUID:type:
initWithHealthEntityClass:profile:transaction:purpose:encodingOptions:authorizationFilter:
initWithIdentifier:bundleID:context:
initWithIsWatch:
initWithNotificationRequest:friendUUID:bulletinType:
initWithPreviousServerChangeToken:
initWithProfile:
initWithProfile:isWatch:
initWithProtobufData:type:isResponse:
initWithQueueName:
initWithRecordID:action:
initWithRecordIDs:
initWithRecordName:zoneID:
initWithRecordZoneIDs:configurationsByRecordZoneID:
initWithRecordZonesToSave:recordZoneIDsToDelete:
initWithRecordsToSave:recordIDsToDelete:
initWithRootRecord:shareID:
initWithSerialQueue:
initWithService:
initWithServiceIdentifier:
initWithSet:copyItems:
initWithShareMetadatas:
initWithShareURLs:
initWithSource:version:
initWithSubscriptionID:
initWithSubscriptionsToSave:subscriptionIDsToDelete:
initWithSubtitle:body:
initWithSuiteName:
initWithToken:
initWithUUID:client:activitySharingManager:
initWithUUID:configuration:client:delegate:
initWithUUIDString:
initWithUserIdentityLookupInfos:
initWithZoneName:ownerName:
initializeFriendListAndBeginObserving
insertDataObjects:withProvenance:creationDate:skipInsertionFilter:error:
insertEventWithType:
insertEventWithType:timestamp:
insertPlaceholderRelationshipEvent:friendUUID:
installStateForBundleIdentifier:
integerForKey:
integerValue
invalidate
inviteCompatibilityVersion
inviteRequestToMeWasAccepted
inviteeBuildNumber
inviteeCloudKitAddress
inviteeShareLocations
inviteeVersion
inviterBuildNumber
inviterCloudKitAddress
inviterShareLocations
inviterVersion
isActivityDataVisible
isActivityDataVisibleToMeForDate:
isAppleInternalInstall
isAppleWatch
isAwaitingCompetitionResponse
isAwaitingInviteResponse
isCompetitionActive
isDataProtectedByFirstUnlockAvailable
isDate:inSameDayAsDate:
isDateInToday:
isDateInYesterday:
isEqual:
isEqualToDate:
isEqualToNumber:
isEqualToSet:
isEqualToString:
isEquivalentToUserIdentity:
isEquivalentToUserIdentityOrPublicKey:
isExpired
isFriendshipActive
isFriendshipCurrentlyActive
isHidingActivityData
isHidingActivityDataFromMeForDate:
isInviteVersionCompatible:
isKindOfClass:
isMemberOfClass:
isMuteEnabled
isParticipantWinning:
isProtectedDataAvailable
isReadyToProcessChanges
isScoreTied
isStandalonePhoneFitnessMode
lastDayOfCompetition
lastObject
linkedContactStoreIdentifier
listenerEndpointForClient:error:
loadBulletins
loadCachedCompetitions
loadCachedContacts
localDeviceSourceWithError:
localTimeZone
localizationBundleURLForTemplate:
localizedName
localizedStringForKey:value:table:
localizedStringWithFormat:
longLongValue
lookupInfosWithEmails:
managerStartAction
maximumAllowedDuration
maximumNumberOfPointsPerDay
messageCenter:didReceiveFinalizeHandshake:fromSenderAddress:messageHandledCompletion:
messageCenter:didReceiveInviteRequest:fromSenderAddress:messageHandledCompletion:
messageCenter:didReceiveInviteResponse:fromSenderAddress:messageHandledCompletion:
messageCenter:didReceiveWithdrawInviteRequest:fromSenderAddress:messageHandledCompletion:
messageCenter:errorSendingFinalizeHandshake:
messageCenter:errorSendingInviteRequest:
messageCenter:errorSendingInviteResponse:
messageCenter:errorSendingWithdrawInviteRequest:
messageWithIdentifier:
meterUnit
methodForSelector:
mileUnit
minuteUnit
mobileAssetVersionForTemplate:
modificationDate
mostRecentlyCompletedCompetition
mutableCopy
myTotalScore
nanoSyncManager:pairedDevicesChanged:
negatedPredicate:
notification
notificationEventWithRecord:friendUUID:
notificationEventsToPushWithYesterdaySnapshot:todaySnapshot:achievements:workouts:currentDeletedWorkoutAnchor:currentGoalCompletionAnchor:
notificationFromRemoteNotificationDictionary:
notificationManager:didReceiveActionResponse:fromContactWithUUID:
notificationRequest
notificationRequestType
notificationRulesEngine
notificationTopics
notifyAchievementToken
notifyBatchToken
notifyCompetitionAcceptToken
notifyCompetitionEndLoserToken
notifyCompetitionEndTieToken
notifyCompetitionRequestToken
notifyCompetitionScoreCapCelebrationToken
notifyGoalCompletionDuringCompetitionToken
notifyGoalCompletionToken
notifyGuidedRunWorkoutToken
notifyGuidedWalkWorkoutToken
notifyInviteRequestToken
notifyInviteResponseToken
notifyObserverBlock
notifyOfFakeInviteNeedsSetupToken
notifyOfFakeSignInToken
notifyOfFakeUpgradeToken
notifyVideoWorkoutToken
notifyWorkoutToken
numberForKey:error:
numberOfCompetitionWinsByMe
numberWithDouble:
numberWithInt:
numberWithInteger:
numberWithLongLong:
numberWithUnsignedInt:
numberWithUnsignedInteger:
objectForKey:
objectForKeyedSubscript:
objectForPersistentID:row:error:
objectTransformationBlock
objectsTransformationBlock
objectsTransformedFromRecords:cloudKitManager:
observerDidBecomeReadyToProcessChanges:
onQueue:
onWristMonitorUpdatedOnWristState
opponentScores
opponentScoresCount
opponentTotalScore
orderedProperties
outgoingHandshakeToken
outgoingResponseIdentifier
owner
ownerName
pairedDevicesSnapshot
participants
path
performReadTransactionWithHealthDatabase:error:block:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performTransaction:
performWhenDataProtectedByFirstUnlockIsAvailable:
performWriteTransactionWithHealthDatabase:error:block:inaccessibilityHandler:
periodicUpdateManager
periodicUpdateManager:didFailToSaveRecords:
periodicUpdateManager:didSaveRecords:
persistToUserDefaults
phoneNumbers
placeholderContactWithUUID:
placeholderContacts
pluginIdentifier
postFakeBulletins:
postNotificationName:object:
postNotificationRequest:
predicate
predicateWithBlock:
predicateWithProperty:equalToValue:
predicateWithProperty:greaterThanOrEqualToValue:
predicateWithProperty:lessThanValue:
preferredReachableAddress
preferredReachableService
preferredVictoryBadgeStyles
preferredVictoryBadgeStylesCount
prepareForObliteration
primaryDestinationForMessaging
privateCloudDatabase
processPersistedMessageQueue
processRetryMessageQueue
processRetryMessages
processingStarted
profileExtensionsConformingToProtocol:
profileType
propertyListBundleURLForTemplate:
protectedDatabase
protobufClass
pushActivityDataToAllFriendsWithCompletion:
pushFakeActivityDataToAllFriendsWithCompletion:
quantityWithUnit:doubleValue:
queryAppBadgeCountWithCompletion:
queryClass
queryUUID
queryWithDatabase:predicate:
rangeOfCharacterFromSet:
readyForOperations
reason
recordID
recordIDForFriendUUID:
recordIDsToDelete
recordType
recordTypes
recordWithZoneID:
recordsFromActivityDataCodables:
recordsToSave
registerAlertSuppressionObserver:
registerBlockWaitingOnSuccess:
registerBulletins
registerForDaemonReady:
registerMigrationStepsForProtectionClass:migrator:
registerTemplateSource:awardingSource:
relationship
relationshipEvents
relationshipManager
relationshipShareID
relationshipShareURL
relationshipZone
relationshipsWithRelationshipAndEventRecords:
relevantEarnedInstance
remoteActivityDataShareID
remoteRelationship
remoteRelationshipShareID
remote_acceptCompetitionRequestFromFriendWithUUID:completion:
remote_acceptInviteRequestFromFriendWithUUID:completion:
remote_clearFriendListWithCompletion:
remote_cloudKitAccountStatusWithCompletion:
remote_completeCompetitionWithFriendWithUUID:completion:
remote_expireChangeTokenWithCompletion:
remote_fetchAllDataIfTimeSinceLastFetchIsGreaterThan:completion:
remote_fetchAllDataWithCompletion:
remote_fetchAreMultipleDevicesSharingDataForSnapshotIndex:withCompletion:
remote_friendWithRemoteUUID:completion:
remote_handleNotificationResponse:completion:
remote_ignoreCompetitionRequestFromFriendWithUUID:completion:
remote_ignoreInviteRequestFromFriendWithUUID:completion:
remote_pushActivityDataWithCompletion:
remote_pushFakeActivityDataWithCompletion:
remote_queryAppBadgeCountWithCompletion:
remote_removeFriendWithUUID:completion:
remote_sendCompetitionRequestToFriendWithUUID:completion:
remote_sendInviteRequestToDestination:callerID:serviceIdentifier:completion:
remote_sendWithdrawInviteRequestToFriendWithUUID:completion:
remote_setActivityDataVisible:toFriendWithUUID:completion:
remote_setMuteEnabled:forFriendWithUUID:completion:
removeAllBulletins
removeAllCompetitionListsWithProfile:error:
removeAllCompetitionsWithProfile:error:
removeAllObjects
removeAllPlaceholderContacts
removeAllTemplates
removeAllUnusedTemplates
removeBulletinsMatchingCriteria:
removeBulletinsOlderThanInterval:
removeCompetitionNotificationsForFriendUUID:
removeCompetitionsForFriendUUID:type:profile:withError:
removeDeliveredNotificationsWithIdentifiers:
removeFriendListObserver:
removeFriendWithUUID:completion:
removeItemAtPath:error:
removeMessageWithIdentifier:
removeNotificationWithIdentifier:
removeObject:
removeObjectForKey:
removeObserver:forDataType:
removeObserver:name:object:
removeParticipant:
removeParticpantWithCloudKitAddress:fromShares:completion:
removePersistentDomainForName:
removePlaceholderContactWithToken:
removePlaceholderRelationshipEventWithToken:
removeProtectedDataObserver:
removeRecordIDForFriendUUID:
removeTemplates:completion:
removeTemplates:error:
removeTemplatesForSource:completion:
removeTemplatesWithUniqueNames:completion:
removeUnusedTemplatesForFriendWithUUID:
requestEarnedInstanceUpdate
requestImmediateUpdateForTemplateSource:
requestImmediateUpdateWithCompletion:
requestIncrementalEvaluationForAwardingSource:evaluationBlock:
requestTemplateUpdate
requestWithIdentifier:content:trigger:
requiredEntitlements
resourceBundleURLForTemplate:
respondsToSelector:
responseCode
retain
retainCount
retryCount
runCadence
sample
sampleType
samplesAdded:anchor:
samplesJournaled:type:
samplesOfTypesWereRemoved:anchor:
samplesWithType:profile:encodingOptions:predicate:limit:anchor:error:
saveActivitySnapshots:workouts:achievements:
saveCompetitionList:profile:withError:
saveCompetitionLists:
saveCompetitions:profile:withError:
saveContact:
savePlaceholderContact:
saveRecordsIntoPrivateDatabase:priority:activity:completion:
saveRecordsIntoPrivateDatabase:priority:completion:
saveRemoteCompetitionList:
saveSubscriptions:andDeleteSubscriptionsWithIdentifiers:inDatabase:completion:
schemaName
scores
scoresCount
secondsFromGMT
self
sendCompetitionRequestToFriendWithUUID:completion:
sendEvent:
sendFinalizeHandshake:toDestinations:completion:
sendInviteRequest:toDestinations:completion:
sendInviteRequestToDestination:callerID:serviceIdentifier:completion:
sendInviteResponse:toDestinations:completion:
sendInviteToPersonWithDestination:callerID:serviceIdentifier:completion:
sendProtobuf:toDestinations:priority:options:identifier:error:
sendWithdrawInviteRequest:toDestinations:completion:
sendWithdrawInviteRequestToFriendWithUUID:completion:
senderAddress
sentInviteResponse
sentinelKey
serverChangeTokenForDatabase:
serverChangeTokenForRecordZoneID:
serverPreferredPushEnvironmentWithCompletionHandler:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:sentBytes:totalBytes:
service:account:incomingData:fromID:context:
service:account:incomingMessage:fromID:context:
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:receivedGroupSessionParticipantDataUpdate:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantUpdate:context:
service:activeAccountsChanged:
service:connectedDevicesChanged:
service:devicesChanged:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:didSwitchActivePairedDevice:acknowledgementBlock:
service:linkedDevicesChanged:
service:nearbyDevicesChanged:
serviceAllowedTrafficClassifiersDidReset:
serviceIdentifier
setAchievementAnchor:
setAchievementData:
setAchievementManager:
setAchievementNotifications:
setAchievements:
setActiveEnergyBurned:
setActiveEnergyBurnedGoal:
setActivityDataManager:
setActivityDataPreview:
setActivityDataVisible:toFriendWithUUID:completion:
setActivityMoveMode:
setActivityShareURL:
setActivitySharingManager:
setActivitySnapshot:
setAddresses:
setAlertBody:
setAlertTopic:
setAnchor:
setAppleExerciseTime:
setAppleExerciseTimeGoal:
setAppleMoveMinutesGoal:
setAppleMoveTime:
setAppleMoveTimeGoal:
setAppleStandHours:
setAppleStandHoursGoal:
setAssumedIdentity:
setAtomic:
setAutomaticallyRetryNetworkFailures:
setBody:
setByAddingObject:
setByAddingObjectsFromArray:
setByAddingObjectsFromSet:
setCapabilities:
setCategoryIdentifier:
setCloudKitAddress:
setCloudKitManager:
setCloudKitUtility:
setCompetitionManager:
setCompetitionStage:
setCompetitions:
setCompletedDate:
setConfiguration:
setContact:
setContacts:
setContactsManager:
setContactsUsingTransaction:
setContainer:
setCurrentCacheIndex:
setDataProvider:
setDate:
setDate:forKey:error:
setDateOfLastSuccessfulFetch:
setDelegate:
setDestinations:
setDiscretionaryNetworkBehavior:
setDistanceWalkingRunning:
setDouble:forKey:
setDurationDateComponents:
setEarnedDateComponents:
setEphemeralCompletionBlock:
setExpirationDate:
setExpired:
setFetchAllChanges:
setFetchDatabaseChangesCompletionBlock:
setFetchRecordZoneChangesCompletionBlock:
setFetchShareMetadataCompletionBlock:
setFetchShareParticipantsCompletionBlock:
setFriend:
setFriendAchievements:
setFriendListData:
setFriendListManager:
setFriendUUID:
setFriendWorkouts:
setFullName:
setGoalCompletionAnchor:
setHandleErrorSendingMessageAction:
setHandleReceiveMessageAction:
setHandshakeToken:
setHasCompletedFirstFetch:
setIcon:
setIncomingHandshakeToken:
setInviteeBuildNumber:
setInviteeCloudKitAddress:
setInviteeShareLocations:
setInviteeVersion:
setInviterBuildNumber:
setInviterCallerID:
setInviterCloudKitAddress:
setInviterShareLocations:
setInviterVersion:
setIsWatch:
setIsWatchWorkout:
setLimitCount:
setLinkedContactStoreIdentifier:
setManagerStartAction:
setMessage:identifier:
setModifyRecordZonesCompletionBlock:
setModifyRecordsCompletionBlock:
setModifySubscriptionsCompletionBlock:
setMuteEnabled:forFriendWithUUID:completion:
setName:
setNotificationCategories:
setNotificationInfo:
setNotificationRulesEngine:
setNotifyObserverBlock:
setNumber:forKey:error:
setObject:forKey:
setObject:forKeyedSubscript:
setObjectTransformationBlock:
setObjectsTransformationBlock:
setOpponentScores:
setOpponentScores:count:
setOutgoingHandshakeToken:
setOwner:
setParent:
setParticipantVisibility:
setPayload:
setPerShareCompletionBlock:
setPerShareMetadataBlock:
setPeriodicUpdateManager:
setPermission:
setPredicate:
setPreferredReachableAddress:
setPreferredReachableService:
setPreferredVictoryBadgeStyles:count:
setPreviousServerChangeToken:
setProfile:
setProtobufClass:
setQualityOfService:
setReadyForOperations:
setRecordChangedBlock:
setRecordType:
setRecordZoneChangeTokensUpdatedBlock:
setRecordZoneFetchCompletionBlock:
setRecordZoneWithIDChangedBlock:
setRelationship:
setRelationshipManager:
setRelationshipShareURL:
setRemoteActivityDataShareID:
setRemoteRelationship:
setRemoteRelationshipShareID:
setResponseCode:
setRetryCount:
setSample:
setSavePolicy:
setScores:
setScores:count:
setSenderAddress:
setServerChangeToken:forDatabase:
setServerChangeToken:forRecordZoneID:
setShareParticipantFetchedBlock:
setShortName:
setShouldNotifyObserverBlock:
setShouldSendContentAvailable:
setSnapshotData:
setSnapshots:
setSound:
setSourceApplicationBundleIdentifier:
setSourceUUID:
setStartDateComponents:
setStepCount:
setString:forKey:error:
setStyles:count:
setSubtitle:
setSystemFieldsOnlyRecord:
setTemplateUniqueName:
setThreadIdentifier:
setTimeZone:
setTimestamp:
setTitle:
setToken:
setTopicIdentifiers:
setType:
setUUID:
setUserInfo:
setUuid:
setValue:
setWantsNotificationResponsesDelivered
setWithArray:
setWithCapacity:
setWithObject:
setWithSet:
setWorkoutAnchor:
setWorkoutNotifications:
setWorkouts:
setupManager
seymourMediaType
share
shareURLForShare:
sharedBehavior
sharedCloudDatabase
shouldFilterIncomingMessageFromContact:
shouldLoadPluginForDaemon:
shouldNotifyObserverBlock
showActivityNotifications:withPostingStyle:
showCompetitionAcceptedNotificationForFriend:competition:withPostingStyle:
showCompetitionEndedNotificationForFriend:competition:withPostingStyle:
showCompetitionRequestNotificationForFriend:competition:withPostingStyle:
showCompetitionScoreCapCelebrationForFriends:withPostingStyle:
showErrorAcceptingInviteFrom:
showGizmoVersionTooLowForCompetitionRequestFrom:
showInviteAcceptResponseFrom:
showInviteAttemptNeedToSignInFrom:
showInviteAttemptNeedToUpgradeFrom:
showInviteAttemptNeedsSetupFromContact:
showInviteRequestFromContact:withPostingStyle:
showMaxNumberOfFriendsError
showVersionTooHighForOutgoingInviteTo:
showVersionTooLowForIncomingInviteFrom:
showVersionTooLowForOutgoingInviteTo:
snapshotData
snapshotIndex
snapshotUploadedDate
snapshotWithActivitySummary:
snapshots
sortedArrayUsingComparator:
soundWithAlertType:
source
sourceBundleIdentifier
sourceManager
sourceName
sourceShouldRunForDate:
sourceUUID
sourceUUIDForBundleIdentifier:error:
sourceUUIDWithHealthDatabase:error:
stage
standardUserDefaults
startDate
startDateComponents
startOfDayForDate:
stickerBundleURLForTemplate:
string
stringByAppendingString:
stringForKey:error:
stringValue
stringWithFormat:
stringWithUTF8String:
styles
stylesCount
subscriptionID
subtitle
superclass
supportsActivitySharing
supportsSecureCoding
synchronize
synchronizeUserDefaultsDomain:keys:
systemFieldsOnlyRecord
taskIdentifier
taskServerClasses
taskUUID
template
templateForUniqueName:
templateSourceDidUpdateAssets:
templateStore
templateUniqueName
templatesForDate:completion:
templatesForDate:databaseContext:completion:
timeIntervalSinceReferenceDate
timeZone
timestamp
timestampForMostRecentRelationshipEvent
tinkerModeEnabled
title
todayActivitySummary
token
topic
topicIdentifiers
transactionWithOwner:
transactionWithOwner:activityName:
traverseRelationshipHistoryStartingAtEventWithAnchor:block:
triggerUUID
truePredicate
type
unifiedContactWithIdentifier:keysToFetch:error:
unifiedContactsMatchingPredicate:keysToFetch:error:
uniqueName
uniquedColumns
unregisterAlertSuppressionObserver:
unsignedIntValue
unusedTemplateNamesForFriendWithUUID:
updateAllActiveCompetitionsWithScores:completion:
updateFriendListWithDeletedWorkoutEvents:
updateFriendListWithNewSnapshots:achievements:workouts:
updateRelationshipWithCompetitionEvent:friendUUID:completion:
updateRelationshipsForCurrentFeatureSupportWithCompletion:
updateState
userIdentity
userInfo
userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:
userNotificationCenter:openSettingsForNotification:
userNotificationCenter:willPresentNotification:withCompletionHandler:
uuid
validateClient:error:
validateConfiguration:client:error:
validatedSamplesFromAchievements:workouts:activitySnapshots:friendListManager:
value
valueForKey:
victoryBadgeStyle
weakObjectsHashTable
withdrawCompetitionRequestNotificationForFriendWithUUID:
withdrawInviteNotificationsForContact:
workoutActivityType
workoutAnchor
workoutCompletionEventWithWorkout:
workoutData
workoutNotifications
workoutType
workouts
workoutsForFriendWithUUID:
writeToURL:options:error:
yesterdayActivitySummary
zone
zoneID
zoneName
@24@0:8@16
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@32@0:8@16^@24
v16@0:8
@"NSXPCListenerEndpoint"32@0:8@"HDXPCClient"16^@24
@"ASActivitySharingManager"16@0:8
@"NSSet"16@0:8
v24@0:8@16
@"HDProfile"
@"ASActivitySharingManager"
@32@0:8@16@24
@"NSSet"24@0:8@"NSDateInterval"16
@"NSSet"32@0:8@"NSDateInterval"16@"HDDatabaseTransactionContext"24
@20@0:8C16
@32@0:8@16@?24
@"NSObject<OS_dispatch_queue>"
@"<ASCompetitionAwardingSourceDataProvider>"
r^{?=@@C}24@0:8^Q16
q16@0:8
@56@0:8@16@24q32@40@?48
B40@0:8@16@24^@32
B40@0:8@16^@24@?32
B32@0:8@16^@24
@40@0:8@16@24^@32
@40@0:8q16^{HDSQLiteRow=}24^@32
B48@0:8@16q24^{HDSQLiteRow=}32^@40
v32@0:8@16@24
@"ASCodableDatabaseCompetitionListEntry"
v24@0:8@"ASActivitySharingManager"16
@32@0:8q16@24
@32@0:8@16q24
@40@0:8@16@24@32
v24@0:8@?16
@24@0:8q16
@20@0:8B16
@"ACHAchievementStore"
@"ASActivityDataManager"
@"ASCloudKitManager"
@"ASCompetitionManager"
@"ASContactsManager"
v24@0:8q16
i16@0:8
v20@0:8i16
@?16@0:8
@"NSData"
@"NSString"
@"NSMutableDictionary"
^{__CFString=}
@"NSSet"
v48@0:8@16@24@32@?40
v48@0:8@"ASIDSMessageCenter"16@"ASCodableInviteRequest"24@"NSString"32@?<v@?q>40
v48@0:8@"ASIDSMessageCenter"16@"ASCodableInviteResponse"24@"NSString"32@?<v@?q>40
v48@0:8@"ASIDSMessageCenter"16@"ASCodableFinalizeHandshake"24@"NSString"32@?<v@?q>40
v48@0:8@"ASIDSMessageCenter"16@"ASCodableWithdrawInviteRequest"24@"NSString"32@?<v@?q>40
v32@0:8@"ASIDSMessageCenter"16@"ASCodableInviteRequest"24
v32@0:8@"ASIDSMessageCenter"16@"ASCodableInviteResponse"24
v32@0:8@"ASIDSMessageCenter"16@"ASCodableFinalizeHandshake"24
v32@0:8@"ASIDSMessageCenter"16@"ASCodableWithdrawInviteRequest"24
v32@0:8@16q24
v52@0:8@16@24@32B40@?44
v44@0:8@16@24B32@?36
v32@0:8@"ASCloudKitManager"16q24
v52@0:8@"ASCloudKitManager"16@"NSArray"24@"CKRecordZoneID"32B40@?<v@?>44
v44@0:8@"ASCloudKitManager"16@"NSArray"24B32@?<v@?>36
v32@0:8q16@24
v32@0:8q16@"NSUUID"24
v36@0:8B16@20@?28
v32@0:8@16@?24
v36@0:8S16@20@?28
v40@0:8@16q24@32
v36@0:8@16S24@?28
v40@0:8@16@24@32
@28@0:8S16@20
v28@0:8@16B24
v40@0:8@16@24@?32
@"ASAchievementManager"
@"ASFriendInviteBulletinManager"
@"ASFriendListManager"
@"ASGatewayManager"
@"<ASBulletinPostingManager>"
@"FIFitnessAppsStateObserver"
@"ASAsyncTransactionQueue"
@"NSDictionary"
@"CNContactStore"
@"<ASOnWristMonitorDelegate>"
@"ASActivityDataBulletinManager"
@"ASCompetitionBulletinManager"
@"ASFakingManager"
@40@0:8@16@24q32
@"UNNotificationRequest"
v40@0:8@16@24q32
q24@0:8@16
B24@0:8@"NSDate"16
v32@0:8@"NSDate"16@?<v@?@"NSSet"@"NSSet"@"NSError">24
@"NSURL"24@0:8@"ACHTemplate"16
v40@0:8@"NSDate"16@"HDDatabaseTransactionContext"24@?<v@?@"NSSet"@"NSSet"@"NSError">32
@"NSDictionary"32@0:8@"ACHTemplate"16^@24
q24@0:8@"ACHTemplate"16
@"NSObject<ACHTemplateSourceDelegate>"16@0:8
v24@0:8@"NSObject<ACHTemplateSourceDelegate>"16
@"NSObject<ACHTemplateSourceDelegate>"
@"<ASCompetitionTemplateSourceDataProvider>"
@"<HDHealthDaemonExtension>"24@0:8@"<HDHealthDaemon>"16
@"<HDProfileExtension>"24@0:8@"HDProfile"16
B24@0:8@"<HDHealthDaemon>"16
q24@0:8q16
@"NSArray"24@0:8q16
v32@0:8q16@"HDDatabaseMigrator"24
@"NSArray"16@0:8
v40@0:8@"UNUserNotificationCenter"16@"UNNotification"24@?<v@?Q>32
v40@0:8@"UNUserNotificationCenter"16@"UNNotificationResponse"24@?<v@?>32
v32@0:8@"UNUserNotificationCenter"16@"UNNotification"24
v24@0:8@"UNNotificationRequest"16
v24@0:8@"NSSet"16
v32@0:8@"NSSet"16q24
v24@0:8@"NSUUID"16
v24@0:8@"NSString"16
v32@0:8@"ASUserNotificationResponse"16@?<v@?B@"NSError">24
@"<ASBulletinPostingManagerDelegate>"16@0:8
v24@0:8@"<ASBulletinPostingManagerDelegate>"16
@"UNUserNotificationCenter"
@"<ASBulletinPostingManagerDelegate>"
@24@0:8^{_NSZone=}16
v20@0:8B16
v32@0:8@"NSArray"16@"NSNumber"24
v32@0:8@"NSSet"16@"NSNumber"24
v32@0:8@"NSArray"16@"HKSampleType"24
@"HDDataManager"
@"ASActivityDataNotificationRulesEngine"
@"ASPeriodicUpdateManager"
v48@0:8@16@24@32@40
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v40@0:8@"APSConnection"16@"NSData"24@"APSAppTokenInfo"32
v40@0:8@"APSConnection"16@"APSURLToken"24@"APSURLTokenInfo"32
v40@0:8@"APSConnection"16@"NSError"24@"APSURLTokenInfo"32
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
v48@0:8q16@24@32@?40
v28@0:8B16@20
v40@0:8q16@24@?32
v48@0:8Q16q24@32@?40
v56@0:8@16@24@32@40@?48
v56@0:8@16@24q32@40@?48
v40@0:8@16q24@?32
v32@0:8B16B20@?24
v32@0:8d16B24B28
v24@0:8B16B20
@"APSConnection"
@"CKShare"
@"NSHashTable"
@"ASNotificationStep"
@"NSArray"
@"ASCloudKitServerChangeTokenCache"
@"NSObject<OS_dispatch_source>"
@"NSObject<OS_dispatch_group>"
@"HDDaemonTransaction"
@"ASCloudKitUtility"
@"CKContainer"
@"NSDate"
@"ASFriend"24@0:8@"NSUUID"16
@"ASCompetitionAwardingSource"
@"ASCompetitionTemplateSource"
v24@0:8#16
:16@0:8
v24@0:8:16
v64@0:8@16@24@32@40@48@56
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32@"IDSMessageContext"40
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
@20@0:8i16
v36@0:8B16@20@28
v44@0:8@16i24@28@?36
v32@0:8:16@?24
@"IDSService"
@"ASMessageQueue"
@"<ASIDSMessageCenterDelegate>"
v24@0:8@"ASContactsManager"16
v24@0:8@"ASCompetitionManager"16
v32@0:8@"ASCompetitionManager"16@"NSSet"24
@"ASRelationshipManager"
B48@0:8@16q24@32^@40
@"ASCodableDatabaseCompetition"
@"NSUUID"
v28@0:8@"<HDHealthDatabase>"16B24
v40@0:8@"ASActivityDataManager"16@"HKActivitySummary"24@"HKActivitySummary"32
v32@0:8@"ASPeriodicUpdateManager"16@"NSArray"24
@"ASCompetitionStore"
@"NSNumber"
v24@0:8@"<HDHealthDaemon>"16
v32@0:8@"HDNanoSyncManager"16@"HKNanoSyncPairedDevicesSnapshot"24
v32@0:8@"FIFitnessAppsStateObserver"16q24
v32@0:8@"FIFitnessAppsStateObserver"16@"NSArray"24
@28@0:8@16B24
v32@0:8Q16@?24
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"ASActivityDataNotificationManager"
@"ASFakeBulletinManager"
@"ASSetupManager"
@"HDKeyValueDomain"
@56@0:8@16@24@32@40^@48
@"NSXPCInterface"16@0:8
@48@0:8@16@24@32@40
@48@0:8@"NSUUID"16@"HKTaskConfiguration"24@"HDHealthStoreClient"32@"<HDTaskServerDelegate>"40
@"NSUUID"16@0:8
@"<HDTaskServer>"56@0:8@"NSUUID"16@"HKTaskConfiguration"24@"HDHealthStoreClient"32@"<HDTaskServerDelegate>"40^@48
B32@0:8@"HDHealthStoreClient"16^@24
B40@0:8@"HKTaskConfiguration"16@"HDHealthStoreClient"24^@32
v48@0:8@"NSString"16@"NSString"24@"NSString"32@?<v@?B@"NSError">40
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v36@0:8B16@"NSString"20@?<v@?B@"NSError">28
v24@0:8@?<v@?B@"NSError">16
v32@0:8Q16@?<v@?B@"NSError">24
v24@0:8@?<v@?BB@"NSError">16
v32@0:8@"NSNumber"16@?<v@?BB@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSData"B@"NSError">24
v24@0:8@?<v@?@"NSNumber"B@"NSError">16
@"HDHealthStoreClient"
v40@0:8@16@24Q32
v40@0:8@"HDCurrentActivitySummaryHelper"16@"HKActivitySummary"24Q32
v32@0:8@"<ACHAchievementStoring>"16@"NSSet"24
v24@0:8@"<ACHAchievementStoring>"16
v44@0:8@16@24@32B40
@40@0:8^@16@24@32
@64@0:8@16@24@32@40@48@56
@"HKActivitySummary"
@"NSCalendar"
@"ASContact"
@24@0:8@?16
B20@0:8I16
I16@0:8
@"STConversation"
v32@0:8@"NSString"16q24
@"ASBulletinStore"
@"ASOnWristMonitor"
B32@0:8@16q24
B40@0:8@16q24^@32
B48@0:8@16@24q32^@40
@40@0:8@16q24q32
@32@0:8q16q24
v64@0:8@16@24q32q40@48@?56
v48@0:8@16q24@32@?40
v60@0:8@16@24@32q40B48@?52
v32@0:8@"<ASBulletinPostingManager>"16@"ASUserNotificationResponse"24
@56@0:8@16@24@32@40@48
@"<ASFriendInviteBulletinManagerDelegate>"
