@(#)PROGRAM:ReplayKit  PROJECT:ReplayKit-1
?333333
/System/Library/Frameworks/ReplayKit.framework
v8@?0
CFBundleDisplayName
Localizable
+[NSBundle(RPExtensions) bundleWithPID:]
RPBroadcastExtensionKeyBroadcastConfiguration
RPBroadcastExtensionKeyMovieClipURL
RPBroadcastExtensionKeyExtensionUserInfo
RPBroadcastExtensionKeyRequestedFinish
RPBroadcastExtensionKeyExtensionSandboxToken
v24@?0@"<NSSecureCoding>"8@"NSError"16
v32@?0@"NSExtensionItem"8Q16^B24
com.apple.share-services
NSExtensionActivationRule
NSExtensionActivationSupportsReplayStreaming
v24@?0@"NSArray"8@"NSError"16
/private/var/mobile/Library/ReplayKit/
error: %@
MM-dd-yyyy HH:mm:ss
%@/ScreenRecording_%@.mp4
%@/ClipRecording_%@.mp4
%@/%@_%@.mp4
%@/%@_trimmed.mp4
v16@?0@"NSError"8
error = %@
%@/%@
self BEGINSWITH[cd] %@
-[RPPGPipViewController init]
-[RPPGPipViewController cameraWithPosition:]
-[RPPGPipViewController setupPreview]
-[RPPGPipViewController startPipSession]
-[RPPGPipViewController stopPipSession]
pictureInPicturePossible
-[RPPGPipViewController loadView]
-[RPPGPipViewController viewDidDisappear:]
-[RPPGPipViewController viewDidLayoutSubviews]
-[RPPGPipViewController layoutPreviewLayer]
-[RPPGPipViewController updateViewGeometry]
-[RPPGPipViewController observeValueForKeyPath:ofObject:change:context:]_block_invoke
-[RPPGPipViewController observeValueForKeyPath:ofObject:change:context:]
-[RPPGPipViewController didStartPreview]
-[RPPGPipViewController didStartPreview]_block_invoke
-[RPPGPipViewController didPausePreview]
-[RPPGPipViewController didStopPreview]
-[RPPGPipViewController cameraDidBecomeAvailableForUniqueID:]
-[RPPGPipViewController cameraDidBecomeInterruptedForForUniqueID:reason:]
-[RPPGPipViewController didChangeLocalVideoAttributes:]
-[RPPGPipViewController didChangeLocalScreenAttributes:]
ModuleIcon
-[RPSystemBroadcastPickerView screenCaptureChanged]
-[RPSystemBroadcastPickerView buttonPressed:]
com.apple.ReplayKit.RPRecordingErrorDomain
com.apple.ScreenCaptureKit.SCStreamErrorDomain
RECORDING_ERROR_UNKNOWN
RECORDING_ERROR_USER_DECLINED
RECORDING_ERROR_DISABLED
RECORDING_ERROR_FAILED_TO_START
RECORDING_ERROR_FAILED
RECORDING_ERROR_INSUFFICIENT_STORAGE
RECORDING_ERROR_INTERRUPTED
RECORDING_ERROR_CONTENT_RESIZE
RECORDING_ERROR_INVALID_BROADCAST_SESSION
RECORDING_ERROR_SYSTEM_DORMANCY
RECORDING_ERROR_ENTITLEMENTS
RECORDING_ERROR_ACTIVE_PHONE_CALL
RECORDING_ERROR_FAILED_TO_SAVE
RECORDING_ERROR_CARPLAY
RECORDING_ERROR_CONNECTION_INVALID
RECORDING_ERROR_CONNECTION_INTERRUPTED
RECORDING_ERROR_NO_CONTEXTID_MATCH
RECORDING_ERROR_MEDIASERVICES_FAILED
RECORDING_ERROR_MIXING_FAILURE
RECORDING_ERROR_BROADCAST_SETUP_FAILED
RECORDING_ERROR_FAILED_TO_OBTAIN_URL
RECORDING_ERROR_INCORRECT_TIME_STAMPS
RECORDING_ERROR_FAILED_PROCESS_FIRST_SAMPLE
RECORDING_ERROR_ASSET_WRITER_FAILED_TO_SAVE
RECORDING_ERROR_NO_ASSET_WRITER
RECORDING_ERROR_ASSET_WRITER_IN_WRONG_STATE
RECORDING_ERROR_ASSET_WRITER_EXPORT_FAILED
RECORDING_ERROR_FAILED_TO_REOMOVE_FILE
RECORDING_ERROR_ASSET_WRITER_EXPORT_CANCELED
RECORDING_ERROR_STOPING_NON_RECORDING
RECORDING_ERROR_STARTING_IN_RECORDING_STATE
RECORDING_ERROR_FAILED_TO_SAVE_TO_PHOTOS
RECORDING_ERROR_INVALID_SESSION
RECORDING_ERROR_FAILURE_IN_CAPTURE_STACK
RECORDING_ERROR_INVALID_PARAMETER
RECORDING_ERROR_FILE_PERMISSIONS
RECORDING_ERROR_SUCCESSFUL
RECORDING_ERROR_CLIP_IN_PROGRESS
SCSTREAM_ERROR_USER_DECLINED
SCSTREAM_ERROR_FAILED_TO_START
SCSTREAM_ERROR_ENTITLEMENTS
SCSTREAM_ERROR_CONNECTION_INVALID
SCSTREAM_ERROR_CONNECTION_INTERRUPTED
SCSTREAM_ERROR_NO_CONTEXTID_MATCH
SCSTREAM_ERROR_START_STREAM_STATE
SCSTREAM_ERROR_STOP_STREAM_STATE
SCSTREAM_ERROR_UPDATE_FILTER_STREAM
SCSTREAM_ERROR_UPDATE_CONFIG_STREAM
SCSTREAM_ERROR_FAILURE_IN_CAPTURE_STACK
SCSTREAM_ERROR_NO_WINDOW_LIST
SCSTREAM_ERROR_NO_DISPLAY_LIST
SCSTREAM_ERROR_NO_CAPTURE_SOURCE
SCSTREAM_ERROR_REMOVE_STREAM
SCSTREAM_ERROR_USER_STOPPED
SCSTREAM_ERROR_FAILED_TO_START_AUDIO
SCSTREAM_ERROR_FAILED_TO_STOP_AUDIO
SCSTREAM_ERROR_UNKNOWN
RPStoreInfoBundleIDKey
RPStoreInfoAppNameKey
RPStoreInfoAuthorKey
RPStoreInfoItemURLKey
com.apple.replayd
-[RPScreenRecorder init]
-[RPScreenRecorder setDelegate:]
-[RPScreenRecorder setSecondDelegate:]
-[RPScreenRecorder setMicrophoneEnabled:]
+[RPScreenRecorder sharedRecorder]
-[RPScreenRecorder isAvailable]
-[RPScreenRecorder startRecordingWithMicrophoneEnabled:handler:]
-[RPScreenRecorder stopRecordingWithVideoURLHandler:]
-[RPScreenRecorder stopRecordingWithAdditionalShareFileAttachment:overrideShareMessage:previewViewControllerOverrideTintColor:handler:]
-[RPScreenRecorder startRecordingWithHandler:]
-[RPScreenRecorder startRecordingWithHandler:]_block_invoke_2
-[RPScreenRecorder startRecordingWithHandler:]_block_invoke
v24@?0@"NSError"8B16B20
-[RPScreenRecorder stopRecordingWithHandler:]
-[RPScreenRecorder stopRecordingWithHandler:]_block_invoke
v16@?0@"RPPreviewViewController"8
v24@?0@"NSURL"8@"NSError"16
-[RPScreenRecorder stopRecordingWithOutputURL:completionHandler:]
-[RPScreenRecorder discardRecordingWithHandler:]
-[RPScreenRecorder pauseInAppRecording]
-[RPScreenRecorder resumeInAppRecording]
-[RPScreenRecorder resumeInAppRecording]_block_invoke
-[RPScreenRecorder startCaptureWithHandler:completionHandler:]
-[RPScreenRecorder startCaptureWithHandler:completionHandler:]_block_invoke_2
-[RPScreenRecorder startCaptureWithHandler:completionHandler:]_block_invoke
-[RPScreenRecorder stopCaptureWithHandler:]
-[RPScreenRecorder pauseInAppCapture]
-[RPScreenRecorder resumeInAppCapture]
-[RPScreenRecorder resumeInAppCapture]_block_invoke
-[RPScreenRecorder startInAppBroadcastWithHandler:]
-[RPScreenRecorder startInAppBroadcastWithHandler:]_block_invoke_2
-[RPScreenRecorder startInAppBroadcastWithHandler:]_block_invoke
-[RPScreenRecorder stopInAppBroadcastWithHandler:]
-[RPScreenRecorder stopInAppBroadcastWithHandler:]_block_invoke
-[RPScreenRecorder pauseInAppBroadcast]
-[RPScreenRecorder resumeInAppBroadcast]
-[RPScreenRecorder resumeInAppBroadcast]_block_invoke
-[RPScreenRecorder clientDidUpdateBroadcastServiceInfo:]
-[RPScreenRecorder startSystemRecordingWithMicrophoneEnabled:handler:]
FBRootWindow
-[RPScreenRecorder startSystemRecordingWithMicrophoneEnabled:handler:]_block_invoke
-[RPScreenRecorder stopSystemRecording:]
-[RPScreenRecorder stopSystemRecordingWithURLHandler:]
-[RPScreenRecorder resumeSystemRecording]
-[RPScreenRecorder resumeSystemRecording]_block_invoke
v12@?0B8
-[RPScreenRecorder setupSystemBroadcastWithExtension:handler:]
-[RPScreenRecorder setupSystemBroadcastWithExtension:handler:]_block_invoke
-[RPScreenRecorder startSystemBroadcastWithHandler:]
-[RPScreenRecorder startSystemBroadcastWithHandler:]_block_invoke
-[RPScreenRecorder stopSystemBroadcastWithHandler:]
-[RPScreenRecorder resumeSystemBroadcast]
-[RPScreenRecorder resumeSystemBroadcast]_block_invoke
-[RPScreenRecorder startClipBufferingWithCompletionHandler:]
-[RPScreenRecorder startClipBufferingWithCompletionHandler:]_block_invoke_2
-[RPScreenRecorder startClipBufferingWithCompletionHandler:]_block_invoke
-[RPScreenRecorder stopClipBufferingWithCompletionHandler:]
-[RPScreenRecorder stopClipBufferingWithCompletionHandler:]_block_invoke
-[RPScreenRecorder exportClipToURL:duration:completionHandler:]
-[RPScreenRecorder resumeInAppClip]
-[RPScreenRecorder resumeInAppClip]_block_invoke
-[RPScreenRecorder saveVideoToCameraRoll:handler:]
-[RPScreenRecorder saveClipToCameraRoll:handler:]
-[RPScreenRecorder saveVideo:handler:]
-[RPScreenRecorder removePipView]_block_invoke
-[RPScreenRecorder setCameraEnabled:]
-[RPScreenRecorder setCameraPosition:]
-[RPScreenRecorder instantiatePipView]
-[RPScreenRecorder isScreenRecordingAvailable]_block_invoke
-[RPScreenRecorder updateStateWithActive:error:]
-[RPScreenRecorder handleUnavailableState]
-[RPScreenRecorder applicationWindow]
-[RPScreenRecorder currentWindowSize]
-[RPScreenRecorder setWindowRotationLocked:]_block_invoke
com.replaykit.capture.AudioSampleQueue
com.replaykit.capture.VideoSampleQueue
com.replaykit.capture.ProcessQueue
-[RPScreenRecorder recordingLockInterrupted:]
-[RPScreenRecorder recordingTimerDidUpdate:]
-[RPScreenRecorder shouldResumeSessionType:]
RPInAppRecording
RPInAppCapture
RPInAppBroadcast
RPInAppClip
RPSystemRecording
RPSystemBroadcast
-[RPScreenRecorder updateScreenRecordingStateWithCurrentState:]
-[RPScreenRecorder recordingDidStopWithError:movieURL:]_block_invoke
-[RPScreenRecorder updateRecordingAvailability:]
-[RPScreenRecorder checkContextID:withHandler:]
-[RPPipViewController initWithOrientation:position:]
-[RPPipViewController dealloc]
-[RPPipViewController cameraWithPosition:]
-[RPPipViewController configurePipSessionWithCameraPosition:]
-[RPPipViewController setCameraPosition:]
-[RPPipViewController setUpPipSession]
-[RPPipViewController startPipSession]
-[RPPipViewController stopPipSession]
-[RPPipViewController loadView]
-[RPPipViewController viewWillAppear:]
-[RPPipViewController viewDidAppear:]
-[RPPipViewController viewDidDisappear:]
com.replaykit.broadcast.AudioSampleQueue
com.replaykit.broadcast.VideoSampleQueue
RPBroadcastProcessExtensionPayloadKeySampleType
RPBroadcastProcessExtensionPayloadKeyActionType
RPBroadcastProcessExtensionPayloadKeyFrontmostAppBundleID
+[RPAudioMixUtility mixAudioForMovie:finalMovieURL:withCompletionHandler:]
+[RPAudioMixUtility mixAudioForMovie:finalMovieURL:withCompletionHandler:]_block_invoke
%@/RPReplay_Final
.mp4
%@%@%@
RPVideoEditorExtensionMovieURLKey
RPVideoEditorExtensionAppNameKey
RPVideoEditorExtensionBundleIdentifierKey
RPVideoEditorExtensionFileAttachmentKey
RPVideoEditorExtensionOverrideShareMessageKey
RPVideoEditorExtensionOverrideTintColorKey
NSExtensionPointIdentifier %@ _extensionBundle %@
NSExtension
RPBroadcastProcessMode
RPBroadcastProcessModeSampleBuffer
-[RPDaemonProxy issueSandboxExtensionForMainBundleRead]
-[RPDaemonProxy issueSandboxExtensionForClientFileWrite:]
-[RPDaemonProxy consumeSandboxExtension:processNewConnection:]
-[RPDaemonProxy consumeSandboxExtension:processNewConnection:]_block_invoke
-[RPDaemonProxy setMicrophoneEnabled:]
-[RPDaemonProxy setMicrophoneEnabled:]_block_invoke
-[RPDaemonProxy getSystemBroadcastPickerInfo:]
-[RPDaemonProxy getSystemBroadcastPickerInfo:]_block_invoke
-[RPDaemonProxy setBroadcastPickerPreferredExt:showsMicButton:]
-[RPDaemonProxy setBroadcastPickerPreferredExt:showsMicButton:]_block_invoke
-[RPDaemonProxy openControlCenterSystemRecordingView]
-[RPDaemonProxy openControlCenterSystemRecordingView]_block_invoke
-[RPDaemonProxy captureHandlerWithSample:timingData:]
-[RPDaemonProxy captureHandlerWithAudioSample:bufferType:]
-[RPDaemonProxy connection:handleInvocation:isReply:]
RPVideoOverlayGlyphMask
RPVideoOverlayBackgroundMask
CFBundleIcons
CFBundlePrimaryIcon
CFBundleIconFiles
RPBroadcastExtensionKeyExtensionHostInfoAppName
RPBroadcastExtensionKeyExtensionHostInfoBundleID
RPBroadcastExtensionKeyExtensionHostInfoAppIcon
RPBroadcastExtensionKeyExtensionHostInfoBroadcastActivitiesNotInstalledAlertTitle
RPBroadcastExtensionKeyExtensionHostInfoBroadcastActivitiesNotInstalledAlertMessage
RPBroadcastExtensionKeyExtensionHostInfoPreferredExtension
com.apple.ReplayKit.RPBroadcastActivityViewControllerExtension
RPBroadcastExtensionKeyExtensionHostInfo
v16@?0@"_UIRemoteViewController"8
Error instantiating remote view controller for extension: %i
v32@?0@"<NSCopying>"8@"UIViewController"16@"NSError"24
ReplayKit
stereo_audio_control_center
Andromeda
j8/Omm6s1lsmTDFsXjsBfA
screen_recording_camera_pip
clipDuration
videoCompressionProperties
MMMM d hh:mm a
RPBroadcastExtensionKeyExtensionServiceInfo
v24@?0@"NSDictionary"8@"NSError"16
com.apple.ReplayKit.RPVideoEditorExtension
v16@?0@"NSXPCListenerEndpoint"8
RPSampleBufferVideoOrientation
RPApplicationInfoBundleIdentifier
kRPBroadcastExtensionKeyExtensionServiceURL
RPBroadcastExtensionKeyExtensionBundleIdentifier
loadBroadcastingApplicationInfoWithCompletion: Error loading item Provider: %@
loadBroadcastingApplicationInfoWithCompletion: Error unarchiving hostInfo %@
 [DEBUG] %{public}s:%d  executableURL:%@
 [DEBUG] %{public}s:%d  bundleURL:%@
broadcast configuration = %p
beginRequestWithExtensionContext
Error loading input item for type
received movie clip URL
received user info
received request finished
received sandbox token
received all data, consumed sandbox token ret=%llu
calling subclass method
_srSetupTempDirectory
error creating temp directory
_srDeleteFilesOlderThanTimeToLiveInSeconds: %i
error in _rkRemoveFile_srDeleteFilesOlderThanTimeToLiveInSeconds, error code: %i
deleting old file
_rkRemoveFile error: %i
_rkMoveFileFromURL error: %i
_rkDeleteFilesWithPrefix error: %i
 [INFO] %{public}s:%d %p
 [INFO] %{public}s:%d looking for camera in %d capture devices
 [INFO] %{public}s:%d no capture devices found
 [INFO] %{public}s:%d camera found with position %d UID %@
 [ERROR] %{public}s:%d Camera not found
 [INFO] %{public}s:%d 
 [INFO] %{public}s:%d localVideoAttributes %@
 [INFO] %{public}s:%d localScreenAttributes %@
 [INFO] %{public}s:%d pip not supported on device
 [INFO] %{public}s:%d preferred content size: w:%lf x h:%lf
 [INFO] %{public}s:%d not running, can start
 [INFO] %{public}s:%d pip already running
 [ERROR] %{public}s:%d _pegasusProxy removeObserver failed
 [INFO] %{public}s:%d viewDidLayoutSubviews
 [INFO] %{public}s:%d camera invalid
 [INFO] %{public}s:%d localVideoAttributes: %lf x %lf
 [INFO] %{public}s:%d view frame - origin:%lf, %lf size:%lf x %lf
 [INFO] %{public}s:%d width factor: %f height factor:%f
 [INFO] %{public}s:%d preview layer frame - origin:%lf, %lf size:%lf x %lf
 [INFO] %{public}s:%d screen bounds: %f x %f
 [INFO] %{public}s:%d pegasus started
 [ERROR] %{public}s:%d removeObserver failed
 [INFO] %{public}s:%d pip started
 [INFO] %{public}s:%d %@
RPStoreManager::performLookupWithBundleIdentifiers could not complete lookup with error:%@
RPStoreManager::AMSLookupItemArtwork::URLWithHeight could not find artwork with specified parameters
 [INFO] %{public}s:%d delegate %p
 [INFO] %{public}s:%d notify client available %d
 [INFO] %{public}s:%d secondDelegate %p
 [INFO] %{public}s:%d :%d from current mic state:%d
 [DEBUG] %{public}s:%d Accessing the sharedRecorder
 [INFO] %{public}s:%d isAvailable %d
 [ERROR] %{public}s:%d failed to start due to error: %@
 [INFO] %{public}s:%d started
 [ERROR] %{public}s:%d undefined completion handler
 [ERROR] %{public}s:%d failed to start because we're already active with another session
 [ERROR] %{public}s:%d stop recording error: %i
 [INFO] %{public}s:%d stop recording successful
 [ERROR] %{public}s:%d failed to stop in app recording because we're not recording
 [INFO] %{public}s:%d recording %d paused %d
 [INFO] %{public}s:%d can not resume with error %@
 [ERROR] %{public}s:%d failed to stop in app capture because we're not recording
 [ERROR] %{public}s:%d failed to stop in app broadacast due to error: %@
 [ERROR] %{public}s:%d failed to stop in app broadcast because we're not recording
 [INFO] %{public}s:%d activeBroadcastController: %@
 [INFO] %{public}s:%d activeBroadcastController delegate: %@
 [INFO] %{public}s:%d delegate responds to protocol
 [ERROR] %{public}s:%d delegate DOES NOT responds to protocol
 [ERROR] %{public}s:%d delegate does not exist
 [ERROR] %{public}s:%d No active broadcast controller
 [INFO] %{public}s:%d attempting to start system recording with mic:%d cam:%d
 [ERROR] %{public}s:%d failed to stop system recording because we're not recording
 [ERROR] %{public}s:%d Failed to resume system recording
 [ERROR] %{public}s:%d Error setting up broadcast, error code: %i
 [INFO] %{public}s:%d attempting to start system broadcast with mic:%d cam:%d
 [ERROR] %{public}s:%d failed to stop system broadcast because we're not recording
 [ERROR] %{public}s:%d Failed to resume system broadcast
 [INFO] %{public}s:%d stopped
 [ERROR] %{public}s:%d failed to stop in app clip recording because we're not recording
 [ERROR] %{public}s:%d failed to export app clip because clip buferring has not started
 [INFO] %{public}s:%d remove camera pip from view
 [INFO] %{public}s:%d camera enabled %d
 [INFO] %{public}s:%d Camera must be enabled first prior to startRecording
 [INFO] %{public}s:%d start camera pip
 [INFO] %{public}s:%d stop camera pip
 [INFO] %{public}s:%d camera position %d
 [INFO] %{public}s:%d create pip for camera position %d
 [INFO] %{public}s:%d recording available %i with display available %i, carplay active %d, allowed %i, and supported on device %i
 [INFO] %{public}s:%d update state with isActive %d error %d
 [ERROR] %{public}s:%d failed to start because screen is not allowed
 [ERROR] %{public}s:%d failed to start because screen is not available
 [INFO] %{public}s:%d appWindow: app doesn't have the window property set on UIApplicationDelegate. Using first window.
 [INFO] %{public}s:%d scaled window size width %.1f x height:%.1f
 [INFO] %{public}s:%d setWindowRotationLocked: %i
 [INFO] %{public}s:%d disabling autorotation
 [INFO] %{public}s:%d enabling autorotation
 [INFO] %{public}s:%d recordingLockInterrupted error[%d]
 [INFO] %{public}s:%d time[%@]
 [INFO] %{public}s:%d system recording %d isRecording %d paused %d
 [INFO] %{public}s:%d updateScreenRecordingStateWithCurrentState
 [INFO] %{public}s:%d movieURL: %@
 [INFO] %{public}s:%d previewViewController %@
 [ERROR] %{public}s:%d contextID is nil
error calling extension - %i
 [INFO] %{public}s:%d camera found with position %d
 [ERROR] %{public}s:%d Error creating capture device input: %@
 [ERROR] %{public}s:%d video input error %@
 [ERROR] %{public}s:%d can not add video input
completed extension request
RPVideoEditorHostViewController:extensionsDidFinish
RPVideoEditorExtensionHostContext:extensionsDidFinish
 [INFO] %{public}s:%d movieURL  %@
 [INFO] %{public}s:%d finalMovieURL %@
 [INFO] %{public}s:%d starting export session
 [INFO] %{public}s:%d AVAssetExportSessionFailed
 [INFO] %{public}s:%d AVAssetExportSessionStatusCancelled
 [INFO] %{public}s:%d AVAssetExportSession returned with no errors
 [ERROR] %{public}s:%d video URL is nil
 [DEBUG] %{public}s:%d 
 [INFO] %{public}s:%d Issued sandbox extension for client folder path %s
 [ERROR] %{public}s:%d Error issuing sandbox extension for client folder path %s
 [ERROR] %{public}s:%d proxy error: %d
RPDaemonProxy: updateScreenRecordingStateWithCurrentState
RPDaemonProxy: recordingDidStopWithError:movieURL:
RPDaemonProxy: shouldResumeSessionType
RPDaemonProxy: recordingDidPause
RPDaemonProxy: updateBroadcastServiceInfo:
RPDaemonProxy: updateBroadcastURL:
RPDaemonProxy: recordingLockInterrupted:
RPDaemonProxy: recordingTimerDidUpdate:
 [DEBUG] %{public}s:%d received reply for invocation
 [DEBUG] %{public}s:%d did not receive reply for invocation
RPDaemonProtocol: hasUserConsentForMicrophone: proxy error: %d
Connected to extension.
RPVideoPreviewViewController:loadPreviewViewControllerWithCompletion
error getting extension: %i
RPPreviewViewController:viewControllerForExtension
Error instantiating remote view controller for extension: %i
RPPreviewViewController:extensionDidFinish
Requested vendor protocol
Set endpoint
RPExtensions
RPBroadcastMP4ClipHandler
RPPGPipViewController
AVConferencePreviewClientDelegate
PGPictureInPictureProxyDelegate
NSObject
RPSystemBroadcastPickerView
NSCoding
ReplayKitErrors
RPStoreInfo
RPStoreManager
RPScreenRecorder
RPPreviewViewControllerDelegate
UINavigationControllerDelegate
UIPopoverPresentationControllerDelegate
UIAdaptivePresentationControllerDelegate
RPBroadcastActivityHostViewController
RPBroadcastActivityCommunicationHostProtocol
RPBroadcastActivityCommunicationProtocol
RPBroadcastActivityExtensionHostContext
RPPipView
RPPipViewController
ReplayKitString
RPBroadcastSampleHandler
RPExtensionContextDelegate
RPVideoEditorHostViewController
RPVideoEditorExtensionHostProtocol
RPVideoEditorExtensionProtocol
RPVideoEditorExtensionHostContext
RPAudioMixUtility
RPDaemonProxy
NSXPCConnectionDelegate
RPDaemonProtocol
RPClientProtocol
RPVideoOverlayButton
RPHighFidelityVideoOverlayButton
RPFlatVideoOverlayButton
RPBroadcastActivityViewController
RPFeatureFlagUtility
RPBroadcastConfiguration
NSSecureCoding
RPModalPresentationWindow
RPBroadcastExtensionProtocol
RPBroadcastDaemonProtocol
RPBroadcastHandler
NSXPCListenerDelegate
NSExtensionRequestHandling
RPBroadcastController
RPExtensionVendorProtocol
RPExtensionHostContext
RPPreviewViewController
RPVideoEditorViewControllerDelegate
RPExtensionContext
RPBroadcastHostViewController
RPBroadcastExtensionInitProtocol
RPBroadcastExtensionHostProtocol
RPBroadcastExtensionHostContext
RPBroadcastExtension
T@,W,N,V_target
AVConferencePreviewSingleton
Td,N,V_previousOrientationWidth
T:,N,V_action
_author
T@"<RPBroadcastControllerDelegate>",W,N,V_delegate
_cameraPosition
T@"<RPExtensionContextDelegate>",W,N,V_delegate
_extensionAuxiliaryHostProtocol
T@"<RPScreenRecordeScreenCapureKitDelegate>",&,N,V_screenCaptureKitDelegate
_processPayloadWithVideoSample:
T@"<RPScreenRecorderDelegate>",W,N,V_delegate
_srVideoOverlayButtonWithStyle:
T@"AVCaptureDevice",&,N,V_videoDevice
_windowToRecord
T@"AVCaptureSession",&,N,V_pipSession
appName
T@"NSDictionary",&,N,V_serviceInfo
attributedTitle
T@"NSExtensionContext",&,N,V_extensionContext
broadcastActivityViewController
T@"NSString",&,N,V_author
bundleForClass:
T@"NSString",&,N,V_bundleID
context
T@"NSString",&,N,V_previousAudioCategory
didChangeLocalScreenAttributes:
T@"NSString",R,N,V_broadcastExtensionBundleID
didPausePreview
T@"NSURL",&,N,V_appArtworkURL
initWithString:
T@"NSURL",&,N,V_itemURL
isInterfaceAutorotationDisabled
T@"NSXPCConnection",&,N,V_connection
itemURL
T@"NSXPCListenerEndpoint",&,N,V_listenerEndpoint
privateDelegate
T@"RPBroadcastActivityHostViewController",W,N,V_hostViewController
removeObserver:
T@"RPBroadcastController",&,N,V_activeBroadcastController
resumeInAppBroadcastWithWindowLayerContextID:completionHandler:
T@"RPBroadcastHostViewController",W,N,V_hostViewController
resumeInAppRecordingWithWindowLayerContextID:completionHandler:
T@"RPPipViewController",&,N,V_pipViewController
screenRecorder:didStopRecordingWithError:previewViewController:
T@"RPVideoEditorExtensionHostContext",&,N,V_hostContext
setAttachments:
T@"RPVideoEditorHostViewController",W,N,V_hostViewController
setDaemonProxy:
T@"UIPopoverPresentationController",&,N,V_popoverPresentationControllerProxy
setHostContext:
T@"UIWindow",&,N,V_windowToRecord
setServiceInfo:
T@?,C,N,V_didFinishHandler
setVideoDevice:
TB,N,GisAvailable,V_available
startInAppBroadcastWithHandler:
TB,N,GisMicrophoneEnabled,V_microphoneEnabled
stopSystemBroadcastWithHandler:
TB,N,GisRecording,V_recording
streamActivitiesWithCompletion:
TB,N,V_hasUserConsentForMicrophone
systemRecording
TB,N,V_systemRecording
updateProcessIDForAudioCapture:
TB,R
windows
.cxx_destruct
TB,R,N,V_alwaysOnDisplayEnabled
T#,R
_action
T@"<RPBroadcastActivityViewControllerDelegate>",W,N,V_delegate
_button
T@"<RPBroadcastDaemonProtocol>",&,N,V_daemonProxy
_captureHandler
T@"<RPPreviewViewControllerDelegate>",W,N,V_previewControllerDelegate
_paused
T@"<RPScreenRecorderDelegate>",&,N,V_secondDelegate
_secondDelegate
T@"<RPScreenRecorderPrivateDelegate>",&,N,V_privateDelegate
_target
T@"AVCaptureDeviceInput",&,N,V_videoInput
animateWithDuration:animations:
T@"AVCaptureVideoPreviewLayer",&,N,V_previewLayer
artwork
T@"NSDictionary",&,N,V_videoCompressionProperties
baseIdentifier:
T@"NSString",&,N,V_appName
broadcastPaused
T@"NSString",&,N,V_broadcastExtensionBundleIdentifier
buttonWithType:
T@"NSString",&,N,V_preferredExtension
dealloc
T@"NSString",R,C
didGetSnapshot:
T@"NSURL",&,N
didStartPreview
T@"NSURL",&,N,V_broadcastURL
isCameraEnabled
T@"NSURL",&,N,V_movieURL
isProxy
T@"NSXPCListener",&,N,V_listener
presentationInfoWithCompletion:
T@"RPBroadcastActivityHostViewController",&,N,V_hostViewController
release
T@"RPBroadcastActivityViewController",W,N,V_broadcastActivityViewController
resumeBroadcast
T@"RPBroadcastExtensionHostContext",&,N,V_hostContext
resumeInAppClip
T@"RPPGPipViewController",&,N,V_pgPipViewController
retainArguments
T@"RPPreviewViewController",W,N,V_previewViewController
screenRecorder:didStopRecordingWithPreviewViewController:error:
T@"RPVideoEditorHostViewController",&,N,V_hostViewController
setContentMode:
T@"UIButton",&,N,V_broadcastPickerButton
setHasUserConsentForMicrophone:
T@"UIView",&,N,V_cameraPreviewView
setPreviousAudioSessionOptions:
T@?,C,N,V_captureHandler
setUpPipSession
T@?,C,N,V_saveVideoToCameraRollCompletionBlock
setWindowLevel:
TB,N,GisCameraEnabled,V_cameraEnabled
startPipSession
TB,N,GisPaused,V_paused
stopSystemRecordingWithHandler:
TB,N,V_hasUserConsentForCamera
stringFromDate:
TB,N,V_showsMicrophoneButton
trackID
TB,N,V_wasStatusBarHidden
viewWillAppear:
TB,R,N
TB,R,N,GisBroadcasting
TB,R,N,GisPaused
TQ,N,V_previousAudioSessionOptions
TQ,R
Td,N,V_clipDuration
Td,N,V_previousOrientationHeight
Ti,N,SupdateProcessIDForAudioCapture:,V_processIDForAudioCapture
Tq,N,V_cameraPosition
Tq,N,V_initialOrientation
Tq,N,V_previousOrientation
URLWithHeight:width:cropStyle:format:
URLWithString:
UTF8String
_activeBroadcastController
_alwaysOnDisplayEnabled
_appArtworkURL
_appName
_auxiliaryConnection
_available
_backdropView
_broadcastActivityViewController
_broadcastExtensionBundleID
_broadcastExtensionBundleIdentifier
_broadcastPickerButton
_broadcastURL
_bundleID
_cameraEnabled
_cameraPreviewView
_captureVideoOrientationForUIDeviceOrientation:
_clipDuration
_completeRequestWithReturnItems:
_connection
_createOverlayImageWithBackgroundWhite:backgroundAlpha:glyphAlpha:
_daemonProxy
_delegate
_deviceOrientationDidChange
_didFinishHandler
_extensionAuxiliaryVendorProtocol
_extensionBundle
_extensionContext
_extensionContextForUUID:
_graphicsQuality
_handleTap:
_hasUserConsentForCamera
_hasUserConsentForMicrophone
_highlightedButtonImage
_hostContext
_hostViewController
_initialOrientation
_isRunning
_itemURL
_listener
_listenerEndpoint
_microphoneEnabled
_movieURL
_normalButtonImage
_pegasusProxy
_pgPipViewController
_pipSession
_pipView
_pipViewController
_playButtonActivate:
_playButtonDeactivate:
_playButtonTapped:
_popoverPresentationControllerProxy
_preferredExtension
_presentationViewController
_preview
_previewControllerDelegate
_previewLayer
_previewViewController
_previousAudioCategory
_previousAudioSessionOptions
_previousOrientation
_previousOrientationHeight
_previousOrientationWidth
_privateDelegate
_processIDForAudioCapture
_processPayload:
_processPayloadWithAudioSample:type:
_recording
_rpFrameworkBundle
_rpLocalizationNotNeeded:
_rpLocalizedAppName
_rpLocalizedAppNameFromBundleID:
_rpLocalizedStringFromFrameworkBundleWithKey:
_rpUserErrorForCode:userInfo:
_saveVideoToCameraRollCompletionBlock
_scUserErrorForCode:userInfo:
_screenCaptureKitDelegate
_screenRecordingCameraPip
_serviceInfo
_setBackdropMaskViewFlags:
_setupListenerWithEndpoint:
_showsMicrophoneButton
_srDeleteAllTempFiles
_srDeleteFilesOlderThanTimeToLiveInSeconds:
_srDeleteFilesWithPrefix:
_srDeviceFreeDiskSpace
_srDeviceHasSufficientFreeSpaceForRecording
_srDeviceHasSufficientSpaceForCurrentRecording
_srGetCreationDateForFile:
_srGetStringFromDate:
_srMoveFileFromURL:toURL:completion:
_srRemoveFile:completion:
_srSetupTempDirectory
_srSizeOfTempDir:
_srTempPath
_stereoAudioControlCenter
_style
_systemBannerEnabled
_systemRecording
_updateViewGeometry
_videoCompressionProperties
_videoDevice
_videoInput
_wasStatusBarHidden
action
activeBroadcastController
adaptivePresentationStyleForPresentationController:
adaptivePresentationStyleForPresentationController:traitCollection:
addBroadcastPickerButton
addChildViewController:
addInput:
addObject:
addObserver:forKeyPath:options:context:
addObserver:selector:name:object:
addPreviewLayer:
addSublayer:
addSubview:
addSystemPreferredCameraObserver
addTarget:action:forControlEvents:
allItems
allValues
alwaysOnDisplayEnabled
anonymousListener
appArtworkURL
applicationWindow
archivedDataWithRootObject:
array
arrayByAddingObject:
arrayWithObjects:count:
arrowDirection
artistName
assetWithURL:
attachments
attributes
attributesOfFileSystemForPath:error:
attributesOfItemAtPath:error:
audioMix
audioMixInputParameters
audioQueue
author
autorelease
available
bagForProfile:profileVersion:
bagKeySet
bagSubProfile
bagSubProfileVersion
beginConfiguration
beginDisablingInterfaceAutorotation
beginGeneratingDeviceOrientationNotifications
beginRequestWithExtensionContext:
blackColor
boolValue
bounds
broadcastActivityViewController:didFinishWithBroadcastController:error:
broadcastAnnotatedWithApplicationInfo:
broadcastController:didFinishWithError:
broadcastController:didUpdateBroadcastURL:
broadcastController:didUpdateServiceInfo:
broadcastExtensionBundleID
broadcastExtensionBundleIdentifier
broadcastFinished
broadcastPickerButton
broadcastResumed
broadcastStartedWithSetupInfo:
broadcastURL
broadcasting
bundleID
bundleIdentifier
bundleWithIdentifier:
bundleWithPID:
bundleWithURL:
buttonPressed:
camera
cameraCinematicFramingAvailabilityDidChange:
cameraDidBecomeAvailableForUniqueID:
cameraDidBecomeInterruptedForForUniqueID:reason:
cameraEnabled
cameraPosition
cameraPreviewView
cameraWithPosition:
cameraZoomAvailabilityDidChange:
cameraZoomAvailabilityDidChange:currentZoomFactor:maxZoomFactor:
canAddInput:
cancelRequestWithError:
captureHandler
captureHandlerWithAudioSample:bufferType:
captureHandlerWithSample:timingData:
checkContextID:withHandler:
class
clearColor
clientDidUpdateBroadcastServiceInfo:
clipDuration
code
commitConfiguration
completeRequestReturningItems:completionHandler:
completeRequestWithBroadcastURL:broadcastConfiguration:setupInfo:
completeRequestWithBroadcastURL:setupInfo:
completeSetupWithBroadcastURL:
componentsJoinedByString:
componentsSeparatedByString:
configurePipSessionWithCameraPosition:
conformsToProtocol:
connection
connection:handleInvocation:isReply:
consumeSandboxExtension:processNewConnection:
contentsOfDirectoryAtPath:error:
contextId
convertRect:toView:
copy
count
countByEnumeratingWithState:objects:count:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
currentDevice
currentWindowLayerContextID
currentWindowSize
daemonProxy
date
dateSuffix
debugDescription
decodeObjectOfClass:forKey:
defaultCenter
defaultManager
delegate
description
devicesWithMediaType:
dictionary
dictionaryWithObjects:forKeys:count:
didChangeLocalCameraUID:
didChangeLocalVideoAttributes:
didConnectToVendor:
didFinishHandler
didMoveToParentViewController:
didReceiveCommError
didReceiveErrorFromCameraUniqueID:error:
didReceiveFirstPreviewFrameFromCamera:
didReceiveFirstPreviewFrameFromCameraUniqueID:
didStopPreview
didStopRecordingWithError:previewViewController:
discardInAppRecordingWithHandler:
discardRecordingWithHandler:
dismissViewControllerAnimated:completion:
displayName
doAction:
doubleValue
drawAtPoint:blendMode:alpha:
effectiveBoolValueForSetting:
encodeObject:forKey:
encodeWithCoder:
endDisablingInterfaceAutorotation
endGeneratingDeviceOrientationNotifications
endpoint
enumerateObjectsUsingBlock:
errorWithDomain:code:userInfo:
executablePathWithPID:
exportAsynchronouslyWithCompletionHandler:
exportClipToURL:duration:completionHandler:
exportClipToURL:duration:extensionToken:completionHandler:
extensionContext
extensionContext:setEndpoint:
extensionDidFinishWithActivityTypes:
extensionDidFinishWithLaunchURL:broadcastURL:extensionBundleID:cancelled:
extensionObjectProxy
extensionPointIdentifier
extensionWithIdentifier:error:
extensionsWithMatchingAttributes:completion:
extensionsWithMatchingPointName:activationRule:completion:
extensionsWithMatchingPointName:baseIdentifier:activationRule:unwantedActivationRule:completion:
extensionsWithMatchingPointName:baseIdentifier:completion:
extensionsWithMatchingPointName:baseIdentifier:unwantedActivationRule:completion:
extensionsWithMatchingPointName:completion:
extensionsWithMatchingPointName:unwantedActivationRule:completion:
fallbackLanguage
fileExistsAtPath:
fileExistsAtPath:isDirectory:
fileModificationDate
fileSize
fileSystemRepresentation
fileURLWithPath:
filteredArrayUsingPredicate:
finishBroadcastWithError:
finishBroadcastWithHandler:
finishSystemBroadcastWithHandler:
finishedProcessingMP4ClipWithUpdatedBroadcastConfiguration:error:
firstObject
frame
getSystemBroadcastExtensionInfo:
getSystemBroadcastPickerInfo:
group
handleUnavailableState
hasItemConformingToTypeIdentifier:
hasPrefix:
hasUserConsentForCamera
hasUserConsentForMicrophone
hash
hostContext
hostViewController
identifier
imageNamed:
imageNamed:inBundle:
imageView
imageWithData:
imageWithRenderingMode:
infoDictionary
init
initWithApplicationExtension:
initWithAsset:presetName:
initWithBag:caller:keyProfile:
initWithBytes:length:encoding:
initWithCoder:
initWithControlsStyle:viewController:
initWithCurrentSession
initWithDevice:error:
initWithExtensionBundleID:broadcastURL:
initWithFrame:
initWithImage:
initWithItem:typeIdentifier:
initWithOrientation:position:
initWithPresentedViewController:presentingViewController:
initWithPrivateStyle:
initWithSession:
initWithString:attributes:
initWithStyle:
initialOrientation
inputItems
insertSubview:belowSubview:
instantiatePipView
instantiateViewControllerWithInputItems:connectionHandler:
integerValue
interfaceWithProtocol:
invoke
isAvailable
isBroadcasting
isCaptured
isEqual:
isEqualToString:
isInternalWindow
isKindOfClass:
isMemberOfClass:
isMicrophoneEnabled
isPaused
isPictureInPicturePossible
isPictureInPictureSupported
isPreviewRunning
isRecording
isScreenRecordingAvailable
isStatusBarHidden
issueSandboxExtensionForClientFileWrite:
issueSandboxExtensionForMainBundleRead
itemWithTitle:attachmentItem:
layer
layoutPreviewLayer
layoutSubviews
listener
listener:shouldAcceptNewConnection:
listenerEndpoint
load
loadBroadcastActivityViewControllerWithHandler:
loadBroadcastActivityViewControllerWithPreferredExtension:handler:
loadBroadcastActivityViewControllerWithPreferredExtension:handler:broadcastActivitiesNotInstalledAlertTitle:broadcastActivitiesNotInstalledAlertMessage:atPoint:fromWindow:
loadBroadcastingApplicationInfoWithCompletion:
loadItemDetailsForBundleIdentifier:completionHandler:
loadItemForTypeIdentifier:options:completionHandler:
loadPreviewViewControllerWithMovieURL:attachmentURL:overrideShareMessage:overrideTintColor:completion:
loadPreviewViewControllerWithMovieURL:completion:
loadView
localScreenAttributesForVideoAttributes:
localVideoAttributes
localizations
localizedDescription
localizedName
localizedStringForKey:value:table:
localizedStringForKey:value:table:localization:
macApplicationDidBecomeActiveWithContextID:completionHandler:
macApplicationDidResignActive
mainBundle
mainScreen
mainWindow
microphoneEnabled
mixAudioForMovie:finalMovieURL:withCompletionHandler:
mixAudioForMovie:withCompletionHandler:
modalPresentationStyle
moveItemAtURL:toURL:error:
movieURL
mutableCopy
navigationController:animationControllerForOperation:fromViewController:toViewController:
navigationController:didShowViewController:animated:
navigationController:interactionControllerForAnimationController:
navigationController:willShowViewController:animated:
navigationControllerPreferredInterfaceOrientationForPresentation:
navigationControllerSupportedInterfaceOrientations:
notifyDelegateOfUpdatedState
null
numberWithDouble:
numberWithUnsignedInt:
objectAtIndexedSubscript:
objectForInfoDictionaryKey:
objectForKey:
objectForKeyedSubscript:
observeValueForKeyPath:ofObject:change:context:
openControlCenterSystemRecordingView
openURL:options:completionHandler:
orientation
outputPath:bundleID:
path
pauseBroadcast
pauseInAppBroadcast
pauseInAppCapture
pauseInAppRecording
paused
performLookupWithBundleIdentifiers:itemIdentifiers:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
pgPipViewController
pictureInPictureProxy:didReceivePlaybackCommand:
pictureInPictureProxy:didReceiveTestingCommand:
pictureInPictureProxy:didRequestFaceTimeAction:
pictureInPictureProxy:didStartPictureInPictureWithAnimationType:
pictureInPictureProxy:didStopPictureInPictureWithAnimationType:reason:
pictureInPictureProxy:didUpdateResourcesUsageReductionReasons:oldReasons:
pictureInPictureProxy:didUpdateStashedOrUnderLockState:
pictureInPictureProxy:failedToStartPictureInPictureWithAnimationType:error:
pictureInPictureProxy:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:
pictureInPictureProxy:willStartPictureInPictureWithAnimationType:
pictureInPictureProxy:willStopPictureInPictureWithAnimationType:reason:
pictureInPictureProxyCanIssueOptionalCommand:
pictureInPictureProxyContentType:
pictureInPictureProxyInterfaceOrientationForTransitionAnimation:
pictureInPictureProxyPictureInPictureInterruptionBegan:
pictureInPictureProxyPictureInPictureInterruptionEnded:
pictureInPictureProxySupportsPrewarming:
pictureInPictureProxyViewControllerWindowForTransitionAnimation:
pictureInPictureProxyViewFrameForTransitionAnimation:
pictureInPictureProxyWillSetupPictureInPictureStop:
ping
pipSession
pipViewController
popoverArrowDirection
popoverControllerSourceRect
popoverPresentationController
popoverPresentationController:willRepositionPopoverToRect:inView:
popoverPresentationControllerDidDismissPopover:
popoverPresentationControllerProxy
popoverPresentationControllerShouldDismissPopover:
position
predicateWithFormat:
preferredContentSize
preferredContentSizeDidChangeForViewController
preferredExtension
preferredLanguage
preferredLanguages
preferredLocalizationsFromArray:forPreferences:
prepareForPopoverPresentation:
presentAlertController:animated:completion:
presentViewController:animated:completion:
presentationController:prepareAdaptivePresentationController:
presentationController:viewControllerForAdaptivePresentationStyle:
presentationController:willPresentWithAdaptiveStyle:transitionCoordinator:
presentationControllerDidAttemptToDismiss:
presentationControllerDidDismiss:
presentationControllerShouldDismiss:
presentationControllerWillDismiss:
presentedViewController
previewController:didFinishWithActivityTypes:
previewControllerDelegate
previewControllerDidFinish:
previewLayer
previewViewController
previousAudioCategory
previousAudioSessionOptions
previousOrientation
previousOrientationHeight
previousOrientationWidth
processIDForAudioCapture
processMP4ClipWithURL:setupInfo:finished:
processMode
processPayload:completion:
processQueue
processSampleBuffer:withType:
productPageURL
ratio
recording
recordingDidPause
recordingDidStopWithError:movieURL:
recordingLockInterrupted:
recordingTimerDidUpdate:
redColor
registerAppForStateChangeSetRotationLock:
registerBagKeySet:forProfile:profileVersion:
remoteObjectProxyWithErrorHandler:
removeFromSuperview
removeInput:
removeItemAtPath:error:
removeItemAtURL:error:
removeLastObject
removeObserver:forKeyPath:
removeObserver:name:object:
removePipView
removeSystemPrefferedCameraObserver
replacementObjectForXPCConnection:encoder:object:
reportCameraUsage:
respondsToSelector:
resultWithError:
resume
resumeInAppBroadcast
resumeInAppCapture
resumeInAppCaptureWithWindowLayerContextID:completionHandler:
resumeInAppClipWithWindowLayerContextID:completionHandler:
resumeInAppRecording
resumeSystemBroadcast
resumeSystemBroadcastWithCompletionHandler:
resumeSystemRecording
resumeSystemRecordingWithCompletionHandler:
retain
retainCount
rootViewController
saveClipToCameraRoll:handler:
saveVideo:extensionToken:handler:
saveVideo:handler:
saveVideoToCameraRoll:handler:
saveVideoToCameraRollCompletionBlock
scale
screenCaptureChanged
screenCaptureKitDelegate
screenRecorderDidChangeAvailability:
screenRecorderDidUpdateState:
screenRecordingAllowed
screenRecordingCameraPip
screenRecordingSupportedOnDevice
secondDelegate
self
serviceInfo
setAction:
setActiveBroadcastController:
setAlpha:
setAppArtworkURL:
setAppName:
setAttributedTitle:
setAudioMix:
setAuthor:
setAutoresizingMask:
setAvailable:
setBackgroundColor:
setBroadcastActivityViewController:
setBroadcastExtensionBundleIdentifier:
setBroadcastPickerButton:
setBroadcastPickerPreferredExt:showsMicButton:
setBroadcastURL:
setBundleID:
setCameraEnabled:
setCameraPosition:
setCameraPreviewView:
setCaptureHandler:
setClasses:forSelector:argumentIndex:ofReply:
setClipDuration:
setConnection:
setDateFormat:
setDelegate:
setDeliversTouchesForGesturesToSuperview:
setDidFinishHandler:
setEndpoint:completionHandler:
setExportedInterface:
setExportedObject:
setExtensionContext:
setFrame:
setHasUserConsentForCamera:
setHidden:
setHostViewController:
setImage:forState:
setInitialOrientation:
setInputParameters:
setItemURL:
setListener:
setListenerEndpoint:
setLocalCameraWithUID:
setLocalVideoLayer:front:
setLocalizedDateFormatFromTemplate:
setMasksToBounds:
setMicrophoneEnabled:
setModalPresentationStyle:
setMovieURL:
setObject:forKeyedSubscript:
setOpaque:
setOutputFileType:
setOutputURL:
setPaused:
setPgPipViewController:
setPipSession:
setPipViewController:
setPopoverPresentationControllerProxy:
setPreferredContentSize:
setPreferredExtension:
setPreviewControllerDelegate:
setPreviewLayer:
setPreviewViewController:
setPreviousAudioCategory:
setPreviousOrientation:
setPreviousOrientationHeight:
setPreviousOrientationWidth:
setPrivateDelegate:
setRecording:
setRemoteObjectInterface:
setRootViewController:
setSaveVideoToCameraRollCompletionBlock:
setScreen:
setScreenCaptureKitDelegate:
setSecondDelegate:
setSessionPreset:
setShowsMicrophoneButton:
setSizesWindowToScene:
setStatusBarHidden:
setSystemRecording:
setTarget:
setTarget:action:
setTimeZone:
setTintColor:
setTrackID:
setValue:forKey:
setVideoCompressionProperties:
setVideoGravity:
setVideoInput:
setVideoOrientation:
setView:
setWasStatusBarHidden:
setWindowRotationLocked:
setWindowToRecord:
setWithArray:
setWithObject:
setZPosition:
setupBroadcastWithHostBundleID:broadcastExtensionBundleID:broadcastConfigurationData:userInfo:handler:
setupPreview
setupSystemBroadcastWithExtension:handler:
setupSystemBroadcastWithHostBundleID:broadcastExtensionBundleID:broadcastConfigurationData:userInfo:handler:
sharedApplication
sharedConnection
sharedInstance
sharedManager
sharedRecorder
shouldNotifyDidStop
shouldResumeSessionType:
showsMicrophoneButton
size
sizeToFit
sourceRect
sourceView
startBroadcastWithHandler:
startCaptureWithHandler:completionHandler:
startClipBufferingWithCompletionHandler:
startClipBufferingWithContextID:windowSize:microphoneEnabled:cameraEnabled:withCompletionHandler:
startInAppBroadcastWithContextID:windowSize:microphoneEnabled:cameraEnabled:listenerEndpoint:withHandler:
startInAppCaptureWithContextID:windowSize:microphoneEnabled:cameraEnabled:withHandler:
startInAppRecordingWithContextID:windowSize:microphoneEnabled:cameraEnabled:withHandler:
startPictureInPicture
startPreview
startRecordingWithHandler:
startRecordingWithMicrophoneEnabled:handler:
startRunning
startSystemBroadcastWithContextID:windowSize:microphoneEnabled:cameraEnabled:listenerEndpoint:withHandler:
startSystemBroadcastWithHandler:
startSystemRecordingWithContextID:windowSize:microphoneEnabled:cameraEnabled:withHandler:
startSystemRecordingWithMicrophoneEnabled:handler:
status
stereoAudioControlCenter
stopAllActiveClients
stopCaptureWithHandler:
stopClipBufferingWithCompletionHandler:
stopCurrentActiveSessionWithHandler:
stopInAppBroadcastWithHandler:
stopInAppCaptureWithHandler:
stopInAppRecordingWithHandler:
stopInAppRecordingWithUrl:extensionToken:handler:
stopInAppRecordingWithUrl:handler:
stopPictureInPictureAndRestoreUserInterface:
stopPipSession
stopPreview
stopRecordingWithAdditionalShareFileAttachment:overrideShareMessage:previewViewControllerOverrideTintColor:handler:
stopRecordingWithHandler:
stopRecordingWithOutputURL:completionHandler:
stopRecordingWithVideoURLHandler:
stopRunning
stopSystemRecording:
stopSystemRecordingWithURLHandler:
string
stringByDeletingLastPathComponent
stringByExpandingTildeInPath
stringByReplacingOccurrencesOfString:withString:
stringValue
stringWithCString:encoding:
stringWithFormat:
style
superclass
superview
supportsSecureCoding
systemBannerEnabled
target
tempFileURL
timeIntervalSince1970
timeIntervalSinceDate:
timeZoneWithName:
tracksWithMediaType:
trimmedOutputPath:
unarchivedObjectOfClasses:fromData:error:
uniqueID
unsignedLongValue
updateBroadcastHandlerListenerEndpoint
updateBroadcastHandlerListenerEndpoint:
updateBroadcastServiceInfo:
updateBroadcastURL:
updateMaskViewsForView:
updateProcessIDForAudioCaptureWithPID:
updateRecordingAvailability:
updateScreenRecordingStateWithCurrentState:
updateServiceInfo:
updateStateWithActive:error:
updateViewGeometry
userInterfaceIdiom
videoCompressionProperties
videoDevice
videoEditor:didFinishWithActivityTypes:
videoInput
videoQueue
view
viewControllerForExtension:inputItems:completionHandler:
viewDidAppear:
viewDidDisappear:
viewDidLayoutSubviews
viewDidLoad
viewWillDisappear:
wasStatusBarHidden
window
windowToRecord
zone
@16@0:8
@24@0:8@16
@20@0:8i16
v36@0:8@16@24B32
v32@0:8@16@24
v24@0:8@16
v24@0:8@?16
v16@0:8
@28@0:8i16@20
q24@0:8^@16
q16@0:8
q24@0:8d16
v32@0:8@16@?24
v40@0:8@16@24@?32
B16@0:8
Q16@0:8
v20@0:8I16
v32@0:8@16q24
v20@0:8B16
v36@0:8B16d20d28
v24@0:8@"NSString"16
v24@0:8@"VideoAttributes"16
v32@0:8@"NSString"16@"NSError"24
v24@0:8@"NSData"16
v32@0:8@"NSString"16q24
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
q24@0:8@16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16
v40@0:8@16q24@32
v40@0:8@16q24q32
v28@0:8@16B24
v40@0:8@16Q24Q32
q24@0:8@"PGPictureInPictureProxy"16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@"PGPictureInPictureProxy"16
@"UIWindow"24@0:8@"PGPictureInPictureProxy"16
v32@0:8@"PGPictureInPictureProxy"16q24
v40@0:8@"PGPictureInPictureProxy"16q24@"NSError"32
v32@0:8@"PGPictureInPictureProxy"16@?<v@?B>24
v24@0:8@"PGPictureInPictureProxy"16
v40@0:8@"PGPictureInPictureProxy"16q24q32
v32@0:8@"PGPictureInPictureProxy"16@"PGCommand"24
v28@0:8@"PGPictureInPictureProxy"16B24
v40@0:8@"PGPictureInPictureProxy"16Q24Q32
B24@0:8@"PGCommand"16
B24@0:8@"PGPictureInPictureProxy"16
@24@0:8q16
v48@0:8@16@24@32^v40
@"CALayer"
@"AVConferencePreview"
@"PGPictureInPictureProxy"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"NSString"
@"UIButton"
@32@0:8q16@24
@"NSURL"
v24@0:8@"RPPreviewViewController"16
v32@0:8@"RPPreviewViewController"16@"NSSet"24
Q24@0:8@16
@32@0:8@16@24
@48@0:8@16q24@32@40
v36@0:8@"UINavigationController"16@"UIViewController"24B32
Q24@0:8@"UINavigationController"16
q24@0:8@"UINavigationController"16
@"<UIViewControllerInteractiveTransitioning>"32@0:8@"UINavigationController"16@"<UIViewControllerAnimatedTransitioning>"24
@"<UIViewControllerAnimatedTransitioning>"48@0:8@"UINavigationController"16q24@"UIViewController"32@"UIViewController"40
q32@0:8@16@24
@32@0:8@16q24
q24@0:8@"UIPresentationController"16
q32@0:8@"UIPresentationController"16@"UITraitCollection"24
v32@0:8@"UIPresentationController"16@"UIPresentationController"24
@"UIViewController"32@0:8@"UIPresentationController"16q24
v40@0:8@"UIPresentationController"16q24@"<UIViewControllerTransitionCoordinator>"32
B24@0:8@"UIPresentationController"16
v24@0:8@"UIPresentationController"16
v40@0:8@16N^{CGRect={CGPoint=dd}{CGSize=dd}}24N^@32
v24@0:8@"UIPopoverPresentationController"16
B24@0:8@"UIPopoverPresentationController"16
v40@0:8@"UIPopoverPresentationController"16N^{CGRect={CGPoint=dd}{CGSize=dd}}24N^@32
v28@0:8B16@?20
v48@0:8@16@24@32@?40
v32@0:8@?16@?24
v40@0:8@16d24@?32
v24@0:8q16
v28@0:8B16@20
{CGSize=dd}16@0:8
v20@0:8i16
B32@0:8@16@?24
v24@0:8Q16
@?16@0:8
i16@0:8
@"<RPScreenRecorderDelegate>"
@"UIView"
@"UIWindow"
@"RPPipViewController"
@"RPPGPipViewController"
@"RPBroadcastController"
@"<RPScreenRecorderPrivateDelegate>"
@"<RPScreenRecordeScreenCapureKitDelegate>"
Vv44@0:8@16@24@32B40
Vv24@0:8@?16
Vv44@0:8@"NSURL"16@"NSURL"24@"NSString"32B40
Vv24@0:8@?<v@?q{CGRect={CGPoint=dd}{CGSize=dd}}Q>16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
@"RPBroadcastActivityViewController"
@"RPBroadcastActivityHostViewController"
@"AVCaptureVideoPreviewLayer"
@32@0:8q16q24
q24@0:8q16
d16@0:8
v24@0:8d16
@"AVCaptureSession"
@"AVCaptureDevice"
@"AVCaptureDeviceInput"
v32@0:8@"RPExtensionContext"16@"NSXPCListenerEndpoint"24
v32@0:8^{opaqueCMSampleBuffer=}16q24
@"<RPBroadcastDaemonProtocol>"
Vv24@0:8@16
Vv24@0:8@"NSArray"16
@"RPPreviewViewController"
@"RPVideoEditorExtensionHostContext"
Vv24@0:8@"NSString"16
@"RPVideoEditorHostViewController"
v56@0:8@16@24@32@40@?48
@40@0:8@16@24@32
@"<NSSecureCoding>"40@0:8@"NSXPCConnection"16@"NSXPCCoder"24@32
v36@0:8@"NSXPCConnection"16@"NSInvocation"24B32
Vv56@0:8@16{CGSize=dd}24B40B44@?48
Vv32@0:8@16@?24
Vv64@0:8@16{CGSize=dd}24B40B44@48@?56
Vv56@0:8@16@24@32@40@?48
Vv20@0:8B16
Vv28@0:8@16B24
Vv40@0:8@16d24@?32
Vv20@0:8i16
Vv24@0:8q16
Vv40@0:8@16@24@?32
Vv48@0:8@16d24@32@?40
Vv56@0:8@"NSString"16{CGSize=dd}24B40B44@?<v@?@"NSError"BB>48
Vv24@0:8@?<v@?@"NSURL"@"NSError">16
Vv32@0:8@"NSURL"16@?<v@?@"NSError">24
Vv32@0:8@"NSString"16@?<v@?@"NSError"BB>24
Vv24@0:8@?<v@?>16
Vv24@0:8@?<v@?@"NSError">16
Vv64@0:8@"NSString"16{CGSize=dd}24B40B44@"NSXPCListenerEndpoint"48@?<v@?@"NSError"BB>56
Vv56@0:8@"NSString"16@"NSString"24@"NSData"32@"NSDictionary"40@?<v@?@"NSError">48
Vv24@0:8@"NSURL"16
Vv56@0:8@"NSString"16{CGSize=dd}24B40B44@?<v@?@"NSError">48
Vv24@0:8@?<v@?B>16
Vv64@0:8@"NSString"16{CGSize=dd}24B40B44@"NSXPCListenerEndpoint"48@?<v@?@"NSError">56
Vv24@0:8@?<v@?@"NSString"B>16
Vv28@0:8@"NSString"16B24
Vv40@0:8@"NSURL"16d24@?<v@?@"NSError">32
Vv24@0:8@?<v@?@"NSArray"@"NSError">16
Vv40@0:8@"NSURL"16@"NSString"24@?<v@?@"NSError">32
Vv48@0:8@"NSURL"16d24@32@?<v@?@"NSError">40
Vv32@0:8@16@24
Vv32@0:8@16q24
Vv24@0:8@"NSDictionary"16
Vv32@0:8@"RPIOSurfaceObject"16@"NSData"24
Vv32@0:8@"NSDictionary"16q24
Vv32@0:8@"NSError"16@"NSURL"24
Vv24@0:8@"NSError"16
@"NSXPCConnection"
v32@0:8@16:24
:16@0:8
v24@0:8:16
@"_UIBackdropView"
@40@0:8d16d24d32
v72@0:8@16@?24@32@40{CGPoint=dd}48@64
v44@0:8@16@24@32B40
@"<RPBroadcastActivityViewControllerDelegate>"
@"UIPopoverPresentationController"
@"NSDictionary"
v36@0:8@16B24@?28
v32@0:8@"NSDictionary"16@?<v@?>24
v24@0:8@"NSDictionary"16
v24@0:8@"NSURL"16
v24@0:8@"NSError"16
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v24@0:8@"NSExtensionContext"16
@"NSExtensionContext"
@"NSXPCListenerEndpoint"
@"NSXPCListener"
@"<RPBroadcastControllerDelegate>"
v32@0:8@"NSXPCListenerEndpoint"16@?<v@?>24
v32@0:8@"RPVideoEditorViewController"16@"NSArray"24
@"<RPPreviewViewControllerDelegate>"
@"<RPExtensionContextDelegate>"
@"RPBroadcastExtensionHostContext"
Vv24@0:8@?<v@?@"NSXPCListenerEndpoint">16
@"RPBroadcastHostViewController"
v40@0:8@16@24@32
@(#)PROGRAM:ReplayKit  PROJECT:ReplayKit-1
"%(+.147:=@CFILORUX[^adgjmp
?333333
/System/Library/Frameworks/ReplayKit.framework
v8@?0
CFBundleDisplayName
Localizable
+[NSBundle(RPExtensions) bundleWithPID:]
RPBroadcastExtensionKeyBroadcastConfiguration
RPBroadcastExtensionKeyMovieClipURL
RPBroadcastExtensionKeyExtensionUserInfo
RPBroadcastExtensionKeyRequestedFinish
RPBroadcastExtensionKeyExtensionSandboxToken
v24@?0@"<NSSecureCoding>"8@"NSError"16
v32@?0@"NSExtensionItem"8Q16^B24
com.apple.share-services
NSExtensionActivationRule
NSExtensionActivationSupportsReplayStreaming
v24@?0@"NSArray"8@"NSError"16
/private/var/mobile/Library/ReplayKit/
error: %@
MM-dd-yyyy HH:mm:ss
%@/ScreenRecording_%@.mp4
%@/ClipRecording_%@.mp4
%@/%@_%@.mp4
%@/%@_trimmed.mp4
v16@?0@"NSError"8
error = %@
%@/%@
self BEGINSWITH[cd] %@
-[RPPGPipViewController init]
-[RPPGPipViewController cameraWithPosition:]
-[RPPGPipViewController setupPreview]
-[RPPGPipViewController startPipSession]
-[RPPGPipViewController stopPipSession]
pictureInPicturePossible
-[RPPGPipViewController loadView]
-[RPPGPipViewController viewDidDisappear:]
-[RPPGPipViewController viewDidLayoutSubviews]
-[RPPGPipViewController layoutPreviewLayer]
-[RPPGPipViewController updateViewGeometry]
-[RPPGPipViewController observeValueForKeyPath:ofObject:change:context:]_block_invoke
-[RPPGPipViewController observeValueForKeyPath:ofObject:change:context:]
-[RPPGPipViewController didStartPreview]
-[RPPGPipViewController didStartPreview]_block_invoke
-[RPPGPipViewController didPausePreview]
-[RPPGPipViewController didStopPreview]
-[RPPGPipViewController cameraDidBecomeAvailableForUniqueID:]
-[RPPGPipViewController cameraDidBecomeInterruptedForForUniqueID:reason:]
-[RPPGPipViewController didChangeLocalVideoAttributes:]
-[RPPGPipViewController didChangeLocalScreenAttributes:]
ModuleIcon
-[RPSystemBroadcastPickerView screenCaptureChanged]
-[RPSystemBroadcastPickerView buttonPressed:]
com.apple.ReplayKit.RPRecordingErrorDomain
com.apple.ScreenCaptureKit.SCStreamErrorDomain
RECORDING_ERROR_UNKNOWN
RECORDING_ERROR_USER_DECLINED
RECORDING_ERROR_DISABLED
RECORDING_ERROR_FAILED_TO_START
RECORDING_ERROR_FAILED
RECORDING_ERROR_INSUFFICIENT_STORAGE
RECORDING_ERROR_INTERRUPTED
RECORDING_ERROR_CONTENT_RESIZE
RECORDING_ERROR_INVALID_BROADCAST_SESSION
RECORDING_ERROR_SYSTEM_DORMANCY
RECORDING_ERROR_ENTITLEMENTS
RECORDING_ERROR_ACTIVE_PHONE_CALL
RECORDING_ERROR_FAILED_TO_SAVE
RECORDING_ERROR_CARPLAY
RECORDING_ERROR_CONNECTION_INVALID
RECORDING_ERROR_CONNECTION_INTERRUPTED
RECORDING_ERROR_NO_CONTEXTID_MATCH
RECORDING_ERROR_MEDIASERVICES_FAILED
RECORDING_ERROR_MIXING_FAILURE
RECORDING_ERROR_BROADCAST_SETUP_FAILED
RECORDING_ERROR_FAILED_TO_OBTAIN_URL
RECORDING_ERROR_INCORRECT_TIME_STAMPS
RECORDING_ERROR_FAILED_PROCESS_FIRST_SAMPLE
RECORDING_ERROR_ASSET_WRITER_FAILED_TO_SAVE
RECORDING_ERROR_NO_ASSET_WRITER
RECORDING_ERROR_ASSET_WRITER_IN_WRONG_STATE
RECORDING_ERROR_ASSET_WRITER_EXPORT_FAILED
RECORDING_ERROR_FAILED_TO_REOMOVE_FILE
RECORDING_ERROR_ASSET_WRITER_EXPORT_CANCELED
RECORDING_ERROR_STOPING_NON_RECORDING
RECORDING_ERROR_STARTING_IN_RECORDING_STATE
RECORDING_ERROR_FAILED_TO_SAVE_TO_PHOTOS
RECORDING_ERROR_INVALID_SESSION
RECORDING_ERROR_FAILURE_IN_CAPTURE_STACK
RECORDING_ERROR_INVALID_PARAMETER
RECORDING_ERROR_FILE_PERMISSIONS
RECORDING_ERROR_SUCCESSFUL
RECORDING_ERROR_CLIP_IN_PROGRESS
SCSTREAM_ERROR_USER_DECLINED
SCSTREAM_ERROR_FAILED_TO_START
SCSTREAM_ERROR_ENTITLEMENTS
SCSTREAM_ERROR_CONNECTION_INVALID
SCSTREAM_ERROR_CONNECTION_INTERRUPTED
SCSTREAM_ERROR_NO_CONTEXTID_MATCH
SCSTREAM_ERROR_START_STREAM_STATE
SCSTREAM_ERROR_STOP_STREAM_STATE
SCSTREAM_ERROR_UPDATE_FILTER_STREAM
SCSTREAM_ERROR_UPDATE_CONFIG_STREAM
SCSTREAM_ERROR_FAILURE_IN_CAPTURE_STACK
SCSTREAM_ERROR_NO_WINDOW_LIST
SCSTREAM_ERROR_NO_DISPLAY_LIST
SCSTREAM_ERROR_NO_CAPTURE_SOURCE
SCSTREAM_ERROR_REMOVE_STREAM
SCSTREAM_ERROR_USER_STOPPED
SCSTREAM_ERROR_FAILED_TO_START_AUDIO
SCSTREAM_ERROR_FAILED_TO_STOP_AUDIO
SCSTREAM_ERROR_UNKNOWN
RPStoreInfoBundleIDKey
RPStoreInfoAppNameKey
RPStoreInfoAuthorKey
RPStoreInfoItemURLKey
com.apple.replayd
-[RPScreenRecorder init]
-[RPScreenRecorder setDelegate:]
-[RPScreenRecorder setSecondDelegate:]
-[RPScreenRecorder setMicrophoneEnabled:]
+[RPScreenRecorder sharedRecorder]
-[RPScreenRecorder isAvailable]
-[RPScreenRecorder startRecordingWithMicrophoneEnabled:handler:]
-[RPScreenRecorder stopRecordingWithVideoURLHandler:]
-[RPScreenRecorder stopRecordingWithAdditionalShareFileAttachment:overrideShareMessage:previewViewControllerOverrideTintColor:handler:]
-[RPScreenRecorder startRecordingWithHandler:]
-[RPScreenRecorder startRecordingWithHandler:]_block_invoke_2
-[RPScreenRecorder startRecordingWithHandler:]_block_invoke
v24@?0@"NSError"8B16B20
-[RPScreenRecorder stopRecordingWithHandler:]
-[RPScreenRecorder stopRecordingWithHandler:]_block_invoke
v16@?0@"RPPreviewViewController"8
v24@?0@"NSURL"8@"NSError"16
-[RPScreenRecorder stopRecordingWithOutputURL:completionHandler:]
-[RPScreenRecorder discardRecordingWithHandler:]
-[RPScreenRecorder pauseInAppRecording]
-[RPScreenRecorder resumeInAppRecording]
-[RPScreenRecorder resumeInAppRecording]_block_invoke
-[RPScreenRecorder startCaptureWithHandler:completionHandler:]
-[RPScreenRecorder startCaptureWithHandler:completionHandler:]_block_invoke_2
-[RPScreenRecorder startCaptureWithHandler:completionHandler:]_block_invoke
-[RPScreenRecorder stopCaptureWithHandler:]
-[RPScreenRecorder pauseInAppCapture]
-[RPScreenRecorder resumeInAppCapture]
-[RPScreenRecorder resumeInAppCapture]_block_invoke
-[RPScreenRecorder startInAppBroadcastWithHandler:]
-[RPScreenRecorder startInAppBroadcastWithHandler:]_block_invoke_2
-[RPScreenRecorder startInAppBroadcastWithHandler:]_block_invoke
-[RPScreenRecorder stopInAppBroadcastWithHandler:]
-[RPScreenRecorder stopInAppBroadcastWithHandler:]_block_invoke
-[RPScreenRecorder pauseInAppBroadcast]
-[RPScreenRecorder resumeInAppBroadcast]
-[RPScreenRecorder resumeInAppBroadcast]_block_invoke
-[RPScreenRecorder clientDidUpdateBroadcastServiceInfo:]
-[RPScreenRecorder startSystemRecordingWithMicrophoneEnabled:handler:]
FBRootWindow
-[RPScreenRecorder startSystemRecordingWithMicrophoneEnabled:handler:]_block_invoke
-[RPScreenRecorder stopSystemRecording:]
-[RPScreenRecorder stopSystemRecordingWithURLHandler:]
-[RPScreenRecorder resumeSystemRecording]
-[RPScreenRecorder resumeSystemRecording]_block_invoke
v12@?0B8
-[RPScreenRecorder setupSystemBroadcastWithExtension:handler:]
-[RPScreenRecorder setupSystemBroadcastWithExtension:handler:]_block_invoke
-[RPScreenRecorder startSystemBroadcastWithHandler:]
-[RPScreenRecorder startSystemBroadcastWithHandler:]_block_invoke
-[RPScreenRecorder stopSystemBroadcastWithHandler:]
-[RPScreenRecorder resumeSystemBroadcast]
-[RPScreenRecorder resumeSystemBroadcast]_block_invoke
-[RPScreenRecorder startClipBufferingWithCompletionHandler:]
-[RPScreenRecorder startClipBufferingWithCompletionHandler:]_block_invoke_2
-[RPScreenRecorder startClipBufferingWithCompletionHandler:]_block_invoke
-[RPScreenRecorder stopClipBufferingWithCompletionHandler:]
-[RPScreenRecorder stopClipBufferingWithCompletionHandler:]_block_invoke
-[RPScreenRecorder exportClipToURL:duration:completionHandler:]
-[RPScreenRecorder resumeInAppClip]
-[RPScreenRecorder resumeInAppClip]_block_invoke
-[RPScreenRecorder saveVideoToCameraRoll:handler:]
-[RPScreenRecorder saveClipToCameraRoll:handler:]
-[RPScreenRecorder saveVideo:handler:]
-[RPScreenRecorder removePipView]_block_invoke
-[RPScreenRecorder setCameraEnabled:]
-[RPScreenRecorder setCameraPosition:]
-[RPScreenRecorder instantiatePipView]
-[RPScreenRecorder isScreenRecordingAvailable]_block_invoke
-[RPScreenRecorder updateStateWithActive:error:]
-[RPScreenRecorder handleUnavailableState]
-[RPScreenRecorder applicationWindow]
-[RPScreenRecorder currentWindowSize]
-[RPScreenRecorder setWindowRotationLocked:]_block_invoke
com.replaykit.capture.AudioSampleQueue
com.replaykit.capture.VideoSampleQueue
com.replaykit.capture.ProcessQueue
-[RPScreenRecorder recordingLockInterrupted:]
-[RPScreenRecorder recordingTimerDidUpdate:]
-[RPScreenRecorder shouldResumeSessionType:]
RPInAppRecording
RPInAppCapture
RPInAppBroadcast
RPInAppClip
RPSystemRecording
RPSystemBroadcast
-[RPScreenRecorder updateScreenRecordingStateWithCurrentState:]
-[RPScreenRecorder recordingDidStopWithError:movieURL:]_block_invoke
-[RPScreenRecorder updateRecordingAvailability:]
-[RPScreenRecorder checkContextID:withHandler:]
-[RPPipViewController initWithOrientation:position:]
-[RPPipViewController dealloc]
-[RPPipViewController cameraWithPosition:]
-[RPPipViewController configurePipSessionWithCameraPosition:]
-[RPPipViewController setCameraPosition:]
-[RPPipViewController setUpPipSession]
-[RPPipViewController startPipSession]
-[RPPipViewController stopPipSession]
-[RPPipViewController loadView]
-[RPPipViewController viewWillAppear:]
-[RPPipViewController viewDidAppear:]
-[RPPipViewController viewDidDisappear:]
com.replaykit.broadcast.AudioSampleQueue
com.replaykit.broadcast.VideoSampleQueue
RPBroadcastProcessExtensionPayloadKeySampleType
RPBroadcastProcessExtensionPayloadKeyActionType
RPBroadcastProcessExtensionPayloadKeyFrontmostAppBundleID
+[RPAudioMixUtility mixAudioForMovie:finalMovieURL:withCompletionHandler:]
+[RPAudioMixUtility mixAudioForMovie:finalMovieURL:withCompletionHandler:]_block_invoke
%@/RPReplay_Final
.mp4
%@%@%@
RPVideoEditorExtensionMovieURLKey
RPVideoEditorExtensionAppNameKey
RPVideoEditorExtensionBundleIdentifierKey
RPVideoEditorExtensionFileAttachmentKey
RPVideoEditorExtensionOverrideShareMessageKey
RPVideoEditorExtensionOverrideTintColorKey
NSExtensionPointIdentifier %@ _extensionBundle %@
NSExtension
RPBroadcastProcessMode
RPBroadcastProcessModeSampleBuffer
-[RPDaemonProxy issueSandboxExtensionForMainBundleRead]
-[RPDaemonProxy issueSandboxExtensionForClientFileWrite:]
-[RPDaemonProxy consumeSandboxExtension:processNewConnection:]
-[RPDaemonProxy consumeSandboxExtension:processNewConnection:]_block_invoke
-[RPDaemonProxy setMicrophoneEnabled:]
-[RPDaemonProxy setMicrophoneEnabled:]_block_invoke
-[RPDaemonProxy getSystemBroadcastPickerInfo:]
-[RPDaemonProxy getSystemBroadcastPickerInfo:]_block_invoke
-[RPDaemonProxy setBroadcastPickerPreferredExt:showsMicButton:]
-[RPDaemonProxy setBroadcastPickerPreferredExt:showsMicButton:]_block_invoke
-[RPDaemonProxy openControlCenterSystemRecordingView]
-[RPDaemonProxy openControlCenterSystemRecordingView]_block_invoke
-[RPDaemonProxy captureHandlerWithSample:timingData:]
-[RPDaemonProxy captureHandlerWithAudioSample:bufferType:]
-[RPDaemonProxy connection:handleInvocation:isReply:]
RPVideoOverlayGlyphMask
RPVideoOverlayBackgroundMask
CFBundleIcons
CFBundlePrimaryIcon
CFBundleIconFiles
RPBroadcastExtensionKeyExtensionHostInfoAppName
RPBroadcastExtensionKeyExtensionHostInfoBundleID
RPBroadcastExtensionKeyExtensionHostInfoAppIcon
RPBroadcastExtensionKeyExtensionHostInfoBroadcastActivitiesNotInstalledAlertTitle
RPBroadcastExtensionKeyExtensionHostInfoBroadcastActivitiesNotInstalledAlertMessage
RPBroadcastExtensionKeyExtensionHostInfoPreferredExtension
com.apple.ReplayKit.RPBroadcastActivityViewControllerExtension
RPBroadcastExtensionKeyExtensionHostInfo
v16@?0@"_UIRemoteViewController"8
Error instantiating remote view controller for extension: %i
v32@?0@"<NSCopying>"8@"UIViewController"16@"NSError"24
ReplayKit
stereo_audio_control_center
Andromeda
j8/Omm6s1lsmTDFsXjsBfA
screen_recording_camera_pip
clipDuration
videoCompressionProperties
MMMM d hh:mm a
RPBroadcastExtensionKeyExtensionServiceInfo
v24@?0@"NSDictionary"8@"NSError"16
com.apple.ReplayKit.RPVideoEditorExtension
v16@?0@"NSXPCListenerEndpoint"8
RPSampleBufferVideoOrientation
RPApplicationInfoBundleIdentifier
kRPBroadcastExtensionKeyExtensionServiceURL
RPBroadcastExtensionKeyExtensionBundleIdentifier
loadBroadcastingApplicationInfoWithCompletion: Error loading item Provider: %@
loadBroadcastingApplicationInfoWithCompletion: Error unarchiving hostInfo %@
 [DEBUG] %{public}s:%d  executableURL:%@
 [DEBUG] %{public}s:%d  bundleURL:%@
broadcast configuration = %p
beginRequestWithExtensionContext
Error loading input item for type
received movie clip URL
received user info
received request finished
received sandbox token
received all data, consumed sandbox token ret=%llu
calling subclass method
_srSetupTempDirectory
error creating temp directory
_srDeleteFilesOlderThanTimeToLiveInSeconds: %i
error in _rkRemoveFile_srDeleteFilesOlderThanTimeToLiveInSeconds, error code: %i
deleting old file
_rkRemoveFile error: %i
_rkMoveFileFromURL error: %i
_rkDeleteFilesWithPrefix error: %i
 [INFO] %{public}s:%d %p
 [INFO] %{public}s:%d looking for camera in %d capture devices
 [INFO] %{public}s:%d no capture devices found
 [INFO] %{public}s:%d camera found with position %d UID %@
 [ERROR] %{public}s:%d Camera not found
 [INFO] %{public}s:%d 
 [INFO] %{public}s:%d localVideoAttributes %@
 [INFO] %{public}s:%d localScreenAttributes %@
 [INFO] %{public}s:%d pip not supported on device
 [INFO] %{public}s:%d preferred content size: w:%lf x h:%lf
 [INFO] %{public}s:%d not running, can start
 [INFO] %{public}s:%d pip already running
 [ERROR] %{public}s:%d _pegasusProxy removeObserver failed
 [INFO] %{public}s:%d viewDidLayoutSubviews
 [INFO] %{public}s:%d camera invalid
 [INFO] %{public}s:%d localVideoAttributes: %lf x %lf
 [INFO] %{public}s:%d view frame - origin:%lf, %lf size:%lf x %lf
 [INFO] %{public}s:%d width factor: %f height factor:%f
 [INFO] %{public}s:%d preview layer frame - origin:%lf, %lf size:%lf x %lf
 [INFO] %{public}s:%d screen bounds: %f x %f
 [INFO] %{public}s:%d pegasus started
 [ERROR] %{public}s:%d removeObserver failed
 [INFO] %{public}s:%d pip started
 [INFO] %{public}s:%d %@
RPStoreManager::performLookupWithBundleIdentifiers could not complete lookup with error:%@
RPStoreManager::AMSLookupItemArtwork::URLWithHeight could not find artwork with specified parameters
 [INFO] %{public}s:%d delegate %p
 [INFO] %{public}s:%d notify client available %d
 [INFO] %{public}s:%d secondDelegate %p
 [INFO] %{public}s:%d :%d from current mic state:%d
 [DEBUG] %{public}s:%d Accessing the sharedRecorder
 [INFO] %{public}s:%d isAvailable %d
 [ERROR] %{public}s:%d failed to start due to error: %@
 [INFO] %{public}s:%d started
 [ERROR] %{public}s:%d undefined completion handler
 [ERROR] %{public}s:%d failed to start because we're already active with another session
 [ERROR] %{public}s:%d stop recording error: %i
 [INFO] %{public}s:%d stop recording successful
 [ERROR] %{public}s:%d failed to stop in app recording because we're not recording
 [INFO] %{public}s:%d recording %d paused %d
 [INFO] %{public}s:%d can not resume with error %@
 [ERROR] %{public}s:%d failed to stop in app capture because we're not recording
 [ERROR] %{public}s:%d failed to stop in app broadacast due to error: %@
 [ERROR] %{public}s:%d failed to stop in app broadcast because we're not recording
 [INFO] %{public}s:%d activeBroadcastController: %@
 [INFO] %{public}s:%d activeBroadcastController delegate: %@
 [INFO] %{public}s:%d delegate responds to protocol
 [ERROR] %{public}s:%d delegate DOES NOT responds to protocol
 [ERROR] %{public}s:%d delegate does not exist
 [ERROR] %{public}s:%d No active broadcast controller
 [INFO] %{public}s:%d attempting to start system recording with mic:%d cam:%d
 [ERROR] %{public}s:%d failed to stop system recording because we're not recording
 [ERROR] %{public}s:%d Failed to resume system recording
 [ERROR] %{public}s:%d Error setting up broadcast, error code: %i
 [INFO] %{public}s:%d attempting to start system broadcast with mic:%d cam:%d
 [ERROR] %{public}s:%d failed to stop system broadcast because we're not recording
 [ERROR] %{public}s:%d Failed to resume system broadcast
 [INFO] %{public}s:%d stopped
 [ERROR] %{public}s:%d failed to stop in app clip recording because we're not recording
 [ERROR] %{public}s:%d failed to export app clip because clip buferring has not started
 [INFO] %{public}s:%d remove camera pip from view
 [INFO] %{public}s:%d camera enabled %d
 [INFO] %{public}s:%d Camera must be enabled first prior to startRecording
 [INFO] %{public}s:%d start camera pip
 [INFO] %{public}s:%d stop camera pip
 [INFO] %{public}s:%d camera position %d
 [INFO] %{public}s:%d create pip for camera position %d
 [INFO] %{public}s:%d recording available %i with display available %i, carplay active %d, allowed %i, and supported on device %i
 [INFO] %{public}s:%d update state with isActive %d error %d
 [ERROR] %{public}s:%d failed to start because screen is not allowed
 [ERROR] %{public}s:%d failed to start because screen is not available
 [INFO] %{public}s:%d appWindow: app doesn't have the window property set on UIApplicationDelegate. Using first window.
 [INFO] %{public}s:%d scaled window size width %.1f x height:%.1f
 [INFO] %{public}s:%d setWindowRotationLocked: %i
 [INFO] %{public}s:%d disabling autorotation
 [INFO] %{public}s:%d enabling autorotation
 [INFO] %{public}s:%d recordingLockInterrupted error[%d]
 [INFO] %{public}s:%d time[%@]
 [INFO] %{public}s:%d system recording %d isRecording %d paused %d
 [INFO] %{public}s:%d updateScreenRecordingStateWithCurrentState
 [INFO] %{public}s:%d movieURL: %@
 [INFO] %{public}s:%d previewViewController %@
 [ERROR] %{public}s:%d contextID is nil
error calling extension - %i
 [INFO] %{public}s:%d camera found with position %d
 [ERROR] %{public}s:%d Error creating capture device input: %@
 [ERROR] %{public}s:%d video input error %@
 [ERROR] %{public}s:%d can not add video input
completed extension request
RPVideoEditorHostViewController:extensionsDidFinish
RPVideoEditorExtensionHostContext:extensionsDidFinish
 [INFO] %{public}s:%d movieURL  %@
 [INFO] %{public}s:%d finalMovieURL %@
 [INFO] %{public}s:%d starting export session
 [INFO] %{public}s:%d AVAssetExportSessionFailed
 [INFO] %{public}s:%d AVAssetExportSessionStatusCancelled
 [INFO] %{public}s:%d AVAssetExportSession returned with no errors
 [ERROR] %{public}s:%d video URL is nil
 [DEBUG] %{public}s:%d 
 [INFO] %{public}s:%d Issued sandbox extension for client folder path %s
 [ERROR] %{public}s:%d Error issuing sandbox extension for client folder path %s
 [ERROR] %{public}s:%d proxy error: %d
RPDaemonProxy: updateScreenRecordingStateWithCurrentState
RPDaemonProxy: recordingDidStopWithError:movieURL:
RPDaemonProxy: shouldResumeSessionType
RPDaemonProxy: recordingDidPause
RPDaemonProxy: updateBroadcastServiceInfo:
RPDaemonProxy: updateBroadcastURL:
RPDaemonProxy: recordingLockInterrupted:
RPDaemonProxy: recordingTimerDidUpdate:
 [DEBUG] %{public}s:%d received reply for invocation
 [DEBUG] %{public}s:%d did not receive reply for invocation
RPDaemonProtocol: hasUserConsentForMicrophone: proxy error: %d
Connected to extension.
RPVideoPreviewViewController:loadPreviewViewControllerWithCompletion
error getting extension: %i
RPPreviewViewController:viewControllerForExtension
Error instantiating remote view controller for extension: %i
RPPreviewViewController:extensionDidFinish
Requested vendor protocol
Set endpoint
RPExtensions
RPBroadcastMP4ClipHandler
RPPGPipViewController
AVConferencePreviewClientDelegate
PGPictureInPictureProxyDelegate
NSObject
RPSystemBroadcastPickerView
NSCoding
ReplayKitErrors
RPStoreInfo
RPStoreManager
RPScreenRecorder
RPPreviewViewControllerDelegate
UINavigationControllerDelegate
UIPopoverPresentationControllerDelegate
UIAdaptivePresentationControllerDelegate
RPBroadcastActivityHostViewController
RPBroadcastActivityCommunicationHostProtocol
RPBroadcastActivityCommunicationProtocol
RPBroadcastActivityExtensionHostContext
RPPipView
RPPipViewController
ReplayKitString
RPBroadcastSampleHandler
RPExtensionContextDelegate
RPVideoEditorHostViewController
RPVideoEditorExtensionHostProtocol
RPVideoEditorExtensionProtocol
RPVideoEditorExtensionHostContext
RPAudioMixUtility
RPDaemonProxy
NSXPCConnectionDelegate
RPDaemonProtocol
RPClientProtocol
RPVideoOverlayButton
RPHighFidelityVideoOverlayButton
RPFlatVideoOverlayButton
RPBroadcastActivityViewController
RPFeatureFlagUtility
RPBroadcastConfiguration
NSSecureCoding
RPModalPresentationWindow
RPBroadcastExtensionProtocol
RPBroadcastDaemonProtocol
RPBroadcastHandler
NSXPCListenerDelegate
NSExtensionRequestHandling
RPBroadcastController
RPExtensionVendorProtocol
RPExtensionHostContext
RPPreviewViewController
RPVideoEditorViewControllerDelegate
RPExtensionContext
RPBroadcastHostViewController
RPBroadcastExtensionInitProtocol
RPBroadcastExtensionHostProtocol
RPBroadcastExtensionHostContext
RPBroadcastExtension
T@,W,N,V_target
AVConferencePreviewSingleton
Td,N,V_previousOrientationWidth
T:,N,V_action
_author
T@"<RPBroadcastControllerDelegate>",W,N,V_delegate
_cameraPosition
T@"<RPExtensionContextDelegate>",W,N,V_delegate
_extensionAuxiliaryHostProtocol
T@"<RPScreenRecordeScreenCapureKitDelegate>",&,N,V_screenCaptureKitDelegate
_processPayloadWithVideoSample:
T@"<RPScreenRecorderDelegate>",W,N,V_delegate
_srVideoOverlayButtonWithStyle:
T@"AVCaptureDevice",&,N,V_videoDevice
_windowToRecord
T@"AVCaptureSession",&,N,V_pipSession
appName
T@"NSDictionary",&,N,V_serviceInfo
attributedTitle
T@"NSExtensionContext",&,N,V_extensionContext
broadcastActivityViewController
T@"NSString",&,N,V_author
bundleForClass:
T@"NSString",&,N,V_bundleID
context
T@"NSString",&,N,V_previousAudioCategory
didChangeLocalScreenAttributes:
T@"NSString",R,N,V_broadcastExtensionBundleID
didPausePreview
T@"NSURL",&,N,V_appArtworkURL
initWithString:
T@"NSURL",&,N,V_itemURL
isInterfaceAutorotationDisabled
T@"NSXPCConnection",&,N,V_connection
itemURL
T@"NSXPCListenerEndpoint",&,N,V_listenerEndpoint
privateDelegate
T@"RPBroadcastActivityHostViewController",W,N,V_hostViewController
removeObserver:
T@"RPBroadcastController",&,N,V_activeBroadcastController
resumeInAppBroadcastWithWindowLayerContextID:completionHandler:
T@"RPBroadcastHostViewController",W,N,V_hostViewController
resumeInAppRecordingWithWindowLayerContextID:completionHandler:
T@"RPPipViewController",&,N,V_pipViewController
screenRecorder:didStopRecordingWithError:previewViewController:
T@"RPVideoEditorExtensionHostContext",&,N,V_hostContext
setAttachments:
T@"RPVideoEditorHostViewController",W,N,V_hostViewController
setDaemonProxy:
T@"UIPopoverPresentationController",&,N,V_popoverPresentationControllerProxy
setHostContext:
T@"UIWindow",&,N,V_windowToRecord
setServiceInfo:
T@?,C,N,V_didFinishHandler
setVideoDevice:
TB,N,GisAvailable,V_available
startInAppBroadcastWithHandler:
TB,N,GisMicrophoneEnabled,V_microphoneEnabled
stopSystemBroadcastWithHandler:
TB,N,GisRecording,V_recording
streamActivitiesWithCompletion:
TB,N,V_hasUserConsentForMicrophone
systemRecording
TB,N,V_systemRecording
updateProcessIDForAudioCapture:
TB,R
windows
.cxx_destruct
TB,R,N,V_alwaysOnDisplayEnabled
T#,R
_action
T@"<RPBroadcastActivityViewControllerDelegate>",W,N,V_delegate
_button
T@"<RPBroadcastDaemonProtocol>",&,N,V_daemonProxy
_captureHandler
T@"<RPPreviewViewControllerDelegate>",W,N,V_previewControllerDelegate
_paused
T@"<RPScreenRecorderDelegate>",&,N,V_secondDelegate
_secondDelegate
T@"<RPScreenRecorderPrivateDelegate>",&,N,V_privateDelegate
_target
T@"AVCaptureDeviceInput",&,N,V_videoInput
animateWithDuration:animations:
T@"AVCaptureVideoPreviewLayer",&,N,V_previewLayer
artwork
T@"NSDictionary",&,N,V_videoCompressionProperties
baseIdentifier:
T@"NSString",&,N,V_appName
broadcastPaused
T@"NSString",&,N,V_broadcastExtensionBundleIdentifier
buttonWithType:
T@"NSString",&,N,V_preferredExtension
dealloc
T@"NSString",R,C
didGetSnapshot:
T@"NSURL",&,N
didStartPreview
T@"NSURL",&,N,V_broadcastURL
isCameraEnabled
T@"NSURL",&,N,V_movieURL
isProxy
T@"NSXPCListener",&,N,V_listener
presentationInfoWithCompletion:
T@"RPBroadcastActivityHostViewController",&,N,V_hostViewController
release
T@"RPBroadcastActivityViewController",W,N,V_broadcastActivityViewController
resumeBroadcast
T@"RPBroadcastExtensionHostContext",&,N,V_hostContext
resumeInAppClip
T@"RPPGPipViewController",&,N,V_pgPipViewController
retainArguments
T@"RPPreviewViewController",W,N,V_previewViewController
screenRecorder:didStopRecordingWithPreviewViewController:error:
T@"RPVideoEditorHostViewController",&,N,V_hostViewController
setContentMode:
T@"UIButton",&,N,V_broadcastPickerButton
setHasUserConsentForMicrophone:
T@"UIView",&,N,V_cameraPreviewView
setPreviousAudioSessionOptions:
T@?,C,N,V_captureHandler
setUpPipSession
T@?,C,N,V_saveVideoToCameraRollCompletionBlock
setWindowLevel:
TB,N,GisCameraEnabled,V_cameraEnabled
startPipSession
TB,N,GisPaused,V_paused
stopSystemRecordingWithHandler:
TB,N,V_hasUserConsentForCamera
stringFromDate:
TB,N,V_showsMicrophoneButton
trackID
TB,N,V_wasStatusBarHidden
viewWillAppear:
TB,R,N
TB,R,N,GisBroadcasting
TB,R,N,GisPaused
TQ,N,V_previousAudioSessionOptions
TQ,R
Td,N,V_clipDuration
Td,N,V_previousOrientationHeight
Ti,N,SupdateProcessIDForAudioCapture:,V_processIDForAudioCapture
Tq,N,V_cameraPosition
Tq,N,V_initialOrientation
Tq,N,V_previousOrientation
URLWithHeight:width:cropStyle:format:
URLWithString:
UTF8String
_activeBroadcastController
_alwaysOnDisplayEnabled
_appArtworkURL
_appName
_auxiliaryConnection
_available
_backdropView
_broadcastActivityViewController
_broadcastExtensionBundleID
_broadcastExtensionBundleIdentifier
_broadcastPickerButton
_broadcastURL
_bundleID
_cameraEnabled
_cameraPreviewView
_captureVideoOrientationForUIDeviceOrientation:
_clipDuration
_completeRequestWithReturnItems:
_connection
_createOverlayImageWithBackgroundWhite:backgroundAlpha:glyphAlpha:
_daemonProxy
_delegate
_deviceOrientationDidChange
_didFinishHandler
_extensionAuxiliaryVendorProtocol
_extensionBundle
_extensionContext
_extensionContextForUUID:
_graphicsQuality
_handleTap:
_hasUserConsentForCamera
_hasUserConsentForMicrophone
_highlightedButtonImage
_hostContext
_hostViewController
_initialOrientation
_isRunning
_itemURL
_listener
_listenerEndpoint
_microphoneEnabled
_movieURL
_normalButtonImage
_pegasusProxy
_pgPipViewController
_pipSession
_pipView
_pipViewController
_playButtonActivate:
_playButtonDeactivate:
_playButtonTapped:
_popoverPresentationControllerProxy
_preferredExtension
_presentationViewController
_preview
_previewControllerDelegate
_previewLayer
_previewViewController
_previousAudioCategory
_previousAudioSessionOptions
_previousOrientation
_previousOrientationHeight
_previousOrientationWidth
_privateDelegate
_processIDForAudioCapture
_processPayload:
_processPayloadWithAudioSample:type:
_recording
_rpFrameworkBundle
_rpLocalizationNotNeeded:
_rpLocalizedAppName
_rpLocalizedAppNameFromBundleID:
_rpLocalizedStringFromFrameworkBundleWithKey:
_rpUserErrorForCode:userInfo:
_saveVideoToCameraRollCompletionBlock
_scUserErrorForCode:userInfo:
_screenCaptureKitDelegate
_screenRecordingCameraPip
_serviceInfo
_setBackdropMaskViewFlags:
_setupListenerWithEndpoint:
_showsMicrophoneButton
_srDeleteAllTempFiles
_srDeleteFilesOlderThanTimeToLiveInSeconds:
_srDeleteFilesWithPrefix:
_srDeviceFreeDiskSpace
_srDeviceHasSufficientFreeSpaceForRecording
_srDeviceHasSufficientSpaceForCurrentRecording
_srGetCreationDateForFile:
_srGetStringFromDate:
_srMoveFileFromURL:toURL:completion:
_srRemoveFile:completion:
_srSetupTempDirectory
_srSizeOfTempDir:
_srTempPath
_stereoAudioControlCenter
_style
_systemBannerEnabled
_systemRecording
_updateViewGeometry
_videoCompressionProperties
_videoDevice
_videoInput
_wasStatusBarHidden
action
activeBroadcastController
adaptivePresentationStyleForPresentationController:
adaptivePresentationStyleForPresentationController:traitCollection:
addBroadcastPickerButton
addChildViewController:
addInput:
addObject:
addObserver:forKeyPath:options:context:
addObserver:selector:name:object:
addPreviewLayer:
addSublayer:
addSubview:
addSystemPreferredCameraObserver
addTarget:action:forControlEvents:
allItems
allValues
alwaysOnDisplayEnabled
anonymousListener
appArtworkURL
applicationWindow
archivedDataWithRootObject:
array
arrayByAddingObject:
arrayWithObjects:count:
arrowDirection
artistName
assetWithURL:
attachments
attributes
attributesOfFileSystemForPath:error:
attributesOfItemAtPath:error:
audioMix
audioMixInputParameters
audioQueue
author
autorelease
available
bagForProfile:profileVersion:
bagKeySet
bagSubProfile
bagSubProfileVersion
beginConfiguration
beginDisablingInterfaceAutorotation
beginGeneratingDeviceOrientationNotifications
beginRequestWithExtensionContext:
blackColor
boolValue
bounds
broadcastActivityViewController:didFinishWithBroadcastController:error:
broadcastAnnotatedWithApplicationInfo:
broadcastController:didFinishWithError:
broadcastController:didUpdateBroadcastURL:
broadcastController:didUpdateServiceInfo:
broadcastExtensionBundleID
broadcastExtensionBundleIdentifier
broadcastFinished
broadcastPickerButton
broadcastResumed
broadcastStartedWithSetupInfo:
broadcastURL
broadcasting
bundleID
bundleIdentifier
bundleWithIdentifier:
bundleWithPID:
bundleWithURL:
buttonPressed:
camera
cameraCinematicFramingAvailabilityDidChange:
cameraDidBecomeAvailableForUniqueID:
cameraDidBecomeInterruptedForForUniqueID:reason:
cameraEnabled
cameraPosition
cameraPreviewView
cameraWithPosition:
cameraZoomAvailabilityDidChange:
cameraZoomAvailabilityDidChange:currentZoomFactor:maxZoomFactor:
canAddInput:
cancelRequestWithError:
captureHandler
captureHandlerWithAudioSample:bufferType:
captureHandlerWithSample:timingData:
checkContextID:withHandler:
class
clearColor
clientDidUpdateBroadcastServiceInfo:
clipDuration
code
commitConfiguration
completeRequestReturningItems:completionHandler:
completeRequestWithBroadcastURL:broadcastConfiguration:setupInfo:
completeRequestWithBroadcastURL:setupInfo:
completeSetupWithBroadcastURL:
componentsJoinedByString:
componentsSeparatedByString:
configurePipSessionWithCameraPosition:
conformsToProtocol:
connection
connection:handleInvocation:isReply:
consumeSandboxExtension:processNewConnection:
contentsOfDirectoryAtPath:error:
contextId
convertRect:toView:
copy
count
countByEnumeratingWithState:objects:count:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
currentDevice
currentWindowLayerContextID
currentWindowSize
daemonProxy
date
dateSuffix
debugDescription
decodeObjectOfClass:forKey:
defaultCenter
defaultManager
delegate
description
devicesWithMediaType:
dictionary
dictionaryWithObjects:forKeys:count:
didChangeLocalCameraUID:
didChangeLocalVideoAttributes:
didConnectToVendor:
didFinishHandler
didMoveToParentViewController:
didReceiveCommError
didReceiveErrorFromCameraUniqueID:error:
didReceiveFirstPreviewFrameFromCamera:
didReceiveFirstPreviewFrameFromCameraUniqueID:
didStopPreview
didStopRecordingWithError:previewViewController:
discardInAppRecordingWithHandler:
discardRecordingWithHandler:
dismissViewControllerAnimated:completion:
displayName
doAction:
doubleValue
drawAtPoint:blendMode:alpha:
effectiveBoolValueForSetting:
encodeObject:forKey:
encodeWithCoder:
endDisablingInterfaceAutorotation
endGeneratingDeviceOrientationNotifications
endpoint
enumerateObjectsUsingBlock:
errorWithDomain:code:userInfo:
executablePathWithPID:
exportAsynchronouslyWithCompletionHandler:
exportClipToURL:duration:completionHandler:
exportClipToURL:duration:extensionToken:completionHandler:
extensionContext
extensionContext:setEndpoint:
extensionDidFinishWithActivityTypes:
extensionDidFinishWithLaunchURL:broadcastURL:extensionBundleID:cancelled:
extensionObjectProxy
extensionPointIdentifier
extensionWithIdentifier:error:
extensionsWithMatchingAttributes:completion:
extensionsWithMatchingPointName:activationRule:completion:
extensionsWithMatchingPointName:baseIdentifier:activationRule:unwantedActivationRule:completion:
extensionsWithMatchingPointName:baseIdentifier:completion:
extensionsWithMatchingPointName:baseIdentifier:unwantedActivationRule:completion:
extensionsWithMatchingPointName:completion:
extensionsWithMatchingPointName:unwantedActivationRule:completion:
fallbackLanguage
fileExistsAtPath:
fileExistsAtPath:isDirectory:
fileModificationDate
fileSize
fileSystemRepresentation
fileURLWithPath:
filteredArrayUsingPredicate:
finishBroadcastWithError:
finishBroadcastWithHandler:
finishSystemBroadcastWithHandler:
finishedProcessingMP4ClipWithUpdatedBroadcastConfiguration:error:
firstObject
frame
getSystemBroadcastExtensionInfo:
getSystemBroadcastPickerInfo:
group
handleUnavailableState
hasItemConformingToTypeIdentifier:
hasPrefix:
hasUserConsentForCamera
hasUserConsentForMicrophone
hash
hostContext
hostViewController
identifier
imageNamed:
imageNamed:inBundle:
imageView
imageWithData:
imageWithRenderingMode:
infoDictionary
init
initWithApplicationExtension:
initWithAsset:presetName:
initWithBag:caller:keyProfile:
initWithBytes:length:encoding:
initWithCoder:
initWithControlsStyle:viewController:
initWithCurrentSession
initWithDevice:error:
initWithExtensionBundleID:broadcastURL:
initWithFrame:
initWithImage:
initWithItem:typeIdentifier:
initWithOrientation:position:
initWithPresentedViewController:presentingViewController:
initWithPrivateStyle:
initWithSession:
initWithString:attributes:
initWithStyle:
initialOrientation
inputItems
insertSubview:belowSubview:
instantiatePipView
instantiateViewControllerWithInputItems:connectionHandler:
integerValue
interfaceWithProtocol:
invoke
isAvailable
isBroadcasting
isCaptured
isEqual:
isEqualToString:
isInternalWindow
isKindOfClass:
isMemberOfClass:
isMicrophoneEnabled
isPaused
isPictureInPicturePossible
isPictureInPictureSupported
isPreviewRunning
isRecording
isScreenRecordingAvailable
isStatusBarHidden
issueSandboxExtensionForClientFileWrite:
issueSandboxExtensionForMainBundleRead
itemWithTitle:attachmentItem:
layer
layoutPreviewLayer
layoutSubviews
listener
listener:shouldAcceptNewConnection:
listenerEndpoint
load
loadBroadcastActivityViewControllerWithHandler:
loadBroadcastActivityViewControllerWithPreferredExtension:handler:
loadBroadcastActivityViewControllerWithPreferredExtension:handler:broadcastActivitiesNotInstalledAlertTitle:broadcastActivitiesNotInstalledAlertMessage:atPoint:fromWindow:
loadBroadcastingApplicationInfoWithCompletion:
loadItemDetailsForBundleIdentifier:completionHandler:
loadItemForTypeIdentifier:options:completionHandler:
loadPreviewViewControllerWithMovieURL:attachmentURL:overrideShareMessage:overrideTintColor:completion:
loadPreviewViewControllerWithMovieURL:completion:
loadView
localScreenAttributesForVideoAttributes:
localVideoAttributes
localizations
localizedDescription
localizedStringForKey:value:table:
localizedStringForKey:value:table:localization:
macApplicationDidBecomeActiveWithContextID:completionHandler:
macApplicationDidResignActive
mainBundle
mainScreen
mainWindow
microphoneEnabled
mixAudioForMovie:finalMovieURL:withCompletionHandler:
mixAudioForMovie:withCompletionHandler:
modalPresentationStyle
moveItemAtURL:toURL:error:
movieURL
mutableCopy
navigationController:animationControllerForOperation:fromViewController:toViewController:
navigationController:didShowViewController:animated:
navigationController:interactionControllerForAnimationController:
navigationController:willShowViewController:animated:
navigationControllerPreferredInterfaceOrientationForPresentation:
navigationControllerSupportedInterfaceOrientations:
notifyDelegateOfUpdatedState
null
numberWithDouble:
numberWithUnsignedInt:
objectAtIndexedSubscript:
objectForInfoDictionaryKey:
objectForKey:
objectForKeyedSubscript:
observeValueForKeyPath:ofObject:change:context:
openControlCenterSystemRecordingView
openURL:options:completionHandler:
orientation
outputPath:bundleID:
path
pauseBroadcast
pauseInAppBroadcast
pauseInAppCapture
pauseInAppRecording
paused
performLookupWithBundleIdentifiers:itemIdentifiers:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
pgPipViewController
pictureInPictureProxy:didReceivePlaybackCommand:
pictureInPictureProxy:didReceiveTestingCommand:
pictureInPictureProxy:didRequestFaceTimeAction:
pictureInPictureProxy:didStartPictureInPictureWithAnimationType:
pictureInPictureProxy:didStopPictureInPictureWithAnimationType:reason:
pictureInPictureProxy:didUpdateResourcesUsageReductionReasons:oldReasons:
pictureInPictureProxy:didUpdateStashedOrUnderLockState:
pictureInPictureProxy:failedToStartPictureInPictureWithAnimationType:error:
pictureInPictureProxy:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:
pictureInPictureProxy:willStartPictureInPictureWithAnimationType:
pictureInPictureProxy:willStopPictureInPictureWithAnimationType:reason:
pictureInPictureProxyCanIssueOptionalCommand:
pictureInPictureProxyContentType:
pictureInPictureProxyInterfaceOrientationForTransitionAnimation:
pictureInPictureProxyPictureInPictureInterruptionBegan:
pictureInPictureProxyPictureInPictureInterruptionEnded:
pictureInPictureProxySupportsPrewarming:
pictureInPictureProxyViewControllerWindowForTransitionAnimation:
pictureInPictureProxyViewFrameForTransitionAnimation:
pictureInPictureProxyWillSetupPictureInPictureStop:
ping
pipSession
pipViewController
popoverArrowDirection
popoverControllerSourceRect
popoverPresentationController
popoverPresentationController:willRepositionPopoverToRect:inView:
popoverPresentationControllerDidDismissPopover:
popoverPresentationControllerProxy
popoverPresentationControllerShouldDismissPopover:
position
predicateWithFormat:
preferredContentSize
preferredContentSizeDidChangeForViewController
preferredExtension
preferredLanguage
preferredLanguages
preferredLocalizationsFromArray:forPreferences:
prepareForPopoverPresentation:
presentAlertController:animated:completion:
presentViewController:animated:completion:
presentationController:prepareAdaptivePresentationController:
presentationController:viewControllerForAdaptivePresentationStyle:
presentationController:willPresentWithAdaptiveStyle:transitionCoordinator:
presentationControllerDidAttemptToDismiss:
presentationControllerDidDismiss:
presentationControllerShouldDismiss:
presentationControllerWillDismiss:
presentedViewController
previewController:didFinishWithActivityTypes:
previewControllerDelegate
previewControllerDidFinish:
previewLayer
previewViewController
previousAudioCategory
previousAudioSessionOptions
previousOrientation
previousOrientationHeight
previousOrientationWidth
processIDForAudioCapture
processMP4ClipWithURL:setupInfo:finished:
processMode
processPayload:completion:
processQueue
processSampleBuffer:withType:
productPageURL
ratio
recording
recordingDidPause
recordingDidStopWithError:movieURL:
recordingLockInterrupted:
recordingTimerDidUpdate:
redColor
registerAppForStateChangeSetRotationLock:
registerBagKeySet:forProfile:profileVersion:
remoteObjectProxyWithErrorHandler:
removeFromSuperview
removeInput:
removeItemAtPath:error:
removeItemAtURL:error:
removeLastObject
removeObserver:forKeyPath:
removeObserver:name:object:
removePipView
removeSystemPrefferedCameraObserver
replacementObjectForXPCConnection:encoder:object:
reportCameraUsage:
respondsToSelector:
resultWithError:
resume
resumeInAppBroadcast
resumeInAppCapture
resumeInAppCaptureWithWindowLayerContextID:completionHandler:
resumeInAppClipWithWindowLayerContextID:completionHandler:
resumeInAppRecording
resumeSystemBroadcast
resumeSystemBroadcastWithCompletionHandler:
resumeSystemRecording
resumeSystemRecordingWithCompletionHandler:
retain
retainCount
rootViewController
saveClipToCameraRoll:handler:
saveVideo:extensionToken:handler:
saveVideo:handler:
saveVideoToCameraRoll:handler:
saveVideoToCameraRollCompletionBlock
scale
screenCaptureChanged
screenCaptureKitDelegate
screenRecorderDidChangeAvailability:
screenRecorderDidUpdateState:
screenRecordingAllowed
screenRecordingCameraPip
screenRecordingSupportedOnDevice
secondDelegate
self
serviceInfo
setAction:
setActiveBroadcastController:
setAlpha:
setAppArtworkURL:
setAppName:
setAttributedTitle:
setAudioMix:
setAuthor:
setAutoresizingMask:
setAvailable:
setBackgroundColor:
setBroadcastActivityViewController:
setBroadcastExtensionBundleIdentifier:
setBroadcastPickerButton:
setBroadcastPickerPreferredExt:showsMicButton:
setBroadcastURL:
setBundleID:
setCameraEnabled:
setCameraPosition:
setCameraPreviewView:
setCaptureHandler:
setClasses:forSelector:argumentIndex:ofReply:
setClipDuration:
setConnection:
setDateFormat:
setDelegate:
setDeliversTouchesForGesturesToSuperview:
setDidFinishHandler:
setEndpoint:completionHandler:
setExportedInterface:
setExportedObject:
setExtensionContext:
setFrame:
setHasUserConsentForCamera:
setHidden:
setHostViewController:
setImage:forState:
setInitialOrientation:
setInputParameters:
setItemURL:
setListener:
setListenerEndpoint:
setLocalCameraWithUID:
setLocalVideoLayer:front:
setLocalizedDateFormatFromTemplate:
setMasksToBounds:
setMicrophoneEnabled:
setModalPresentationStyle:
setMovieURL:
setObject:forKeyedSubscript:
setOpaque:
setOutputFileType:
setOutputURL:
setPaused:
setPgPipViewController:
setPipSession:
setPipViewController:
setPopoverPresentationControllerProxy:
setPreferredContentSize:
setPreferredExtension:
setPreviewControllerDelegate:
setPreviewLayer:
setPreviewViewController:
setPreviousAudioCategory:
setPreviousOrientation:
setPreviousOrientationHeight:
setPreviousOrientationWidth:
setPrivateDelegate:
setRecording:
setRemoteObjectInterface:
setRootViewController:
setSaveVideoToCameraRollCompletionBlock:
setScreen:
setScreenCaptureKitDelegate:
setSecondDelegate:
setSessionPreset:
setShowsMicrophoneButton:
setSizesWindowToScene:
setStatusBarHidden:
setSystemRecording:
setTarget:
setTarget:action:
setTimeZone:
setTintColor:
setTrackID:
setValue:forKey:
setVideoCompressionProperties:
setVideoGravity:
setVideoInput:
setVideoOrientation:
setView:
setWasStatusBarHidden:
setWindowRotationLocked:
setWindowToRecord:
setWithArray:
setWithObject:
setZPosition:
setupBroadcastWithHostBundleID:broadcastExtensionBundleID:broadcastConfigurationData:userInfo:handler:
setupPreview
setupSystemBroadcastWithExtension:handler:
setupSystemBroadcastWithHostBundleID:broadcastExtensionBundleID:broadcastConfigurationData:userInfo:handler:
sharedApplication
sharedConnection
sharedInstance
sharedManager
sharedRecorder
shouldNotifyDidStop
shouldResumeSessionType:
showsMicrophoneButton
size
sizeToFit
sourceRect
sourceView
startBroadcastWithHandler:
startCaptureWithHandler:completionHandler:
startClipBufferingWithCompletionHandler:
startClipBufferingWithContextID:windowSize:microphoneEnabled:cameraEnabled:withCompletionHandler:
startInAppBroadcastWithContextID:windowSize:microphoneEnabled:cameraEnabled:listenerEndpoint:withHandler:
startInAppCaptureWithContextID:windowSize:microphoneEnabled:cameraEnabled:withHandler:
startInAppRecordingWithContextID:windowSize:microphoneEnabled:cameraEnabled:withHandler:
startPictureInPicture
startPreview
startRecordingWithHandler:
startRecordingWithMicrophoneEnabled:handler:
startRunning
startSystemBroadcastWithContextID:windowSize:microphoneEnabled:cameraEnabled:listenerEndpoint:withHandler:
startSystemBroadcastWithHandler:
startSystemRecordingWithContextID:windowSize:microphoneEnabled:cameraEnabled:withHandler:
startSystemRecordingWithMicrophoneEnabled:handler:
status
stereoAudioControlCenter
stopAllActiveClients
stopCaptureWithHandler:
stopClipBufferingWithCompletionHandler:
stopCurrentActiveSessionWithHandler:
stopInAppBroadcastWithHandler:
stopInAppCaptureWithHandler:
stopInAppRecordingWithHandler:
stopInAppRecordingWithUrl:extensionToken:handler:
stopInAppRecordingWithUrl:handler:
stopPictureInPictureAndRestoreUserInterface:
stopPipSession
stopPreview
stopRecordingWithAdditionalShareFileAttachment:overrideShareMessage:previewViewControllerOverrideTintColor:handler:
stopRecordingWithHandler:
stopRecordingWithOutputURL:completionHandler:
stopRecordingWithVideoURLHandler:
stopRunning
stopSystemRecording:
stopSystemRecordingWithURLHandler:
string
stringByDeletingLastPathComponent
stringByExpandingTildeInPath
stringByReplacingOccurrencesOfString:withString:
stringValue
stringWithCString:encoding:
stringWithFormat:
style
superclass
superview
supportsSecureCoding
systemBannerEnabled
target
tempFileURL
timeIntervalSince1970
timeIntervalSinceDate:
timeZoneWithName:
tracksWithMediaType:
trimmedOutputPath:
unarchivedObjectOfClasses:fromData:error:
uniqueID
unsignedLongValue
updateBroadcastHandlerListenerEndpoint
updateBroadcastHandlerListenerEndpoint:
updateBroadcastServiceInfo:
updateBroadcastURL:
updateMaskViewsForView:
updateProcessIDForAudioCaptureWithPID:
updateRecordingAvailability:
updateScreenRecordingStateWithCurrentState:
updateServiceInfo:
updateStateWithActive:error:
updateViewGeometry
userInterfaceIdiom
videoCompressionProperties
videoDevice
videoEditor:didFinishWithActivityTypes:
videoInput
videoQueue
view
viewControllerForExtension:inputItems:completionHandler:
viewDidAppear:
viewDidDisappear:
viewDidLayoutSubviews
viewDidLoad
viewWillDisappear:
wasStatusBarHidden
window
windowToRecord
zone
@16@0:8
@24@0:8@16
@20@0:8i16
v36@0:8@16@24B32
v32@0:8@16@24
v24@0:8@16
v24@0:8@?16
v16@0:8
@28@0:8i16@20
q24@0:8^@16
q16@0:8
q24@0:8d16
v32@0:8@16@?24
v40@0:8@16@24@?32
B16@0:8
Q16@0:8
v20@0:8I16
v32@0:8@16q24
v20@0:8B16
v36@0:8B16d20d28
v24@0:8@"NSString"16
v24@0:8@"VideoAttributes"16
v32@0:8@"NSString"16@"NSError"24
v24@0:8@"NSData"16
v32@0:8@"NSString"16q24
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
q24@0:8@16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16
v40@0:8@16q24@32
v40@0:8@16q24q32
v28@0:8@16B24
v40@0:8@16Q24Q32
q24@0:8@"PGPictureInPictureProxy"16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@"PGPictureInPictureProxy"16
@"UIWindow"24@0:8@"PGPictureInPictureProxy"16
v32@0:8@"PGPictureInPictureProxy"16q24
v40@0:8@"PGPictureInPictureProxy"16q24@"NSError"32
v32@0:8@"PGPictureInPictureProxy"16@?<v@?B>24
v24@0:8@"PGPictureInPictureProxy"16
v40@0:8@"PGPictureInPictureProxy"16q24q32
v32@0:8@"PGPictureInPictureProxy"16@"PGCommand"24
v28@0:8@"PGPictureInPictureProxy"16B24
v40@0:8@"PGPictureInPictureProxy"16Q24Q32
B24@0:8@"PGCommand"16
B24@0:8@"PGPictureInPictureProxy"16
@24@0:8q16
v48@0:8@16@24@32^v40
@"CALayer"
@"AVConferencePreview"
@"PGPictureInPictureProxy"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"NSString"
@"UIButton"
@32@0:8q16@24
@"NSURL"
v24@0:8@"RPPreviewViewController"16
v32@0:8@"RPPreviewViewController"16@"NSSet"24
Q24@0:8@16
@32@0:8@16@24
@48@0:8@16q24@32@40
v36@0:8@"UINavigationController"16@"UIViewController"24B32
Q24@0:8@"UINavigationController"16
q24@0:8@"UINavigationController"16
@"<UIViewControllerInteractiveTransitioning>"32@0:8@"UINavigationController"16@"<UIViewControllerAnimatedTransitioning>"24
@"<UIViewControllerAnimatedTransitioning>"48@0:8@"UINavigationController"16q24@"UIViewController"32@"UIViewController"40
q32@0:8@16@24
@32@0:8@16q24
q24@0:8@"UIPresentationController"16
q32@0:8@"UIPresentationController"16@"UITraitCollection"24
v32@0:8@"UIPresentationController"16@"UIPresentationController"24
@"UIViewController"32@0:8@"UIPresentationController"16q24
v40@0:8@"UIPresentationController"16q24@"<UIViewControllerTransitionCoordinator>"32
B24@0:8@"UIPresentationController"16
v24@0:8@"UIPresentationController"16
v40@0:8@16N^{CGRect={CGPoint=dd}{CGSize=dd}}24N^@32
v24@0:8@"UIPopoverPresentationController"16
B24@0:8@"UIPopoverPresentationController"16
v40@0:8@"UIPopoverPresentationController"16N^{CGRect={CGPoint=dd}{CGSize=dd}}24N^@32
v28@0:8B16@?20
v48@0:8@16@24@32@?40
v32@0:8@?16@?24
v40@0:8@16d24@?32
v24@0:8q16
v28@0:8B16@20
{CGSize=dd}16@0:8
v20@0:8i16
B32@0:8@16@?24
v24@0:8Q16
@?16@0:8
i16@0:8
@"<RPScreenRecorderDelegate>"
@"UIView"
@"UIWindow"
@"RPPipViewController"
@"RPPGPipViewController"
@"RPBroadcastController"
@"<RPScreenRecorderPrivateDelegate>"
@"<RPScreenRecordeScreenCapureKitDelegate>"
Vv44@0:8@16@24@32B40
Vv24@0:8@?16
Vv44@0:8@"NSURL"16@"NSURL"24@"NSString"32B40
Vv24@0:8@?<v@?q{CGRect={CGPoint=dd}{CGSize=dd}}Q>16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
@"RPBroadcastActivityViewController"
@"RPBroadcastActivityHostViewController"
@"AVCaptureVideoPreviewLayer"
@32@0:8q16q24
q24@0:8q16
d16@0:8
v24@0:8d16
@"AVCaptureSession"
@"AVCaptureDevice"
@"AVCaptureDeviceInput"
v32@0:8@"RPExtensionContext"16@"NSXPCListenerEndpoint"24
v32@0:8^{opaqueCMSampleBuffer=}16q24
@"<RPBroadcastDaemonProtocol>"
Vv24@0:8@16
Vv24@0:8@"NSArray"16
@"RPPreviewViewController"
@"RPVideoEditorExtensionHostContext"
Vv24@0:8@"NSString"16
@"RPVideoEditorHostViewController"
v56@0:8@16@24@32@40@?48
@40@0:8@16@24@32
@"<NSSecureCoding>"40@0:8@"NSXPCConnection"16@"NSXPCCoder"24@32
v36@0:8@"NSXPCConnection"16@"NSInvocation"24B32
Vv56@0:8@16{CGSize=dd}24B40B44@?48
Vv32@0:8@16@?24
Vv64@0:8@16{CGSize=dd}24B40B44@48@?56
Vv56@0:8@16@24@32@40@?48
Vv20@0:8B16
Vv28@0:8@16B24
Vv40@0:8@16d24@?32
Vv20@0:8i16
Vv24@0:8q16
Vv40@0:8@16@24@?32
Vv48@0:8@16d24@32@?40
Vv56@0:8@"NSString"16{CGSize=dd}24B40B44@?<v@?@"NSError"BB>48
Vv24@0:8@?<v@?@"NSURL"@"NSError">16
Vv32@0:8@"NSURL"16@?<v@?@"NSError">24
Vv32@0:8@"NSString"16@?<v@?@"NSError"BB>24
Vv24@0:8@?<v@?>16
Vv24@0:8@?<v@?@"NSError">16
Vv64@0:8@"NSString"16{CGSize=dd}24B40B44@"NSXPCListenerEndpoint"48@?<v@?@"NSError"BB>56
Vv56@0:8@"NSString"16@"NSString"24@"NSData"32@"NSDictionary"40@?<v@?@"NSError">48
Vv24@0:8@"NSURL"16
Vv56@0:8@"NSString"16{CGSize=dd}24B40B44@?<v@?@"NSError">48
Vv24@0:8@?<v@?B>16
Vv64@0:8@"NSString"16{CGSize=dd}24B40B44@"NSXPCListenerEndpoint"48@?<v@?@"NSError">56
Vv24@0:8@?<v@?@"NSString"B>16
Vv28@0:8@"NSString"16B24
Vv40@0:8@"NSURL"16d24@?<v@?@"NSError">32
Vv24@0:8@?<v@?@"NSArray"@"NSError">16
Vv40@0:8@"NSURL"16@"NSString"24@?<v@?@"NSError">32
Vv48@0:8@"NSURL"16d24@32@?<v@?@"NSError">40
Vv32@0:8@16@24
Vv32@0:8@16q24
Vv24@0:8@"NSDictionary"16
Vv32@0:8@"RPIOSurfaceObject"16@"NSData"24
Vv32@0:8@"NSDictionary"16q24
Vv32@0:8@"NSError"16@"NSURL"24
Vv24@0:8@"NSError"16
@"NSXPCConnection"
v32@0:8@16:24
:16@0:8
v24@0:8:16
@"_UIBackdropView"
@40@0:8d16d24d32
v72@0:8@16@?24@32@40{CGPoint=dd}48@64
v44@0:8@16@24@32B40
@"<RPBroadcastActivityViewControllerDelegate>"
@"UIPopoverPresentationController"
@"NSDictionary"
v36@0:8@16B24@?28
v32@0:8@"NSDictionary"16@?<v@?>24
v24@0:8@"NSDictionary"16
v24@0:8@"NSURL"16
v24@0:8@"NSError"16
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v24@0:8@"NSExtensionContext"16
@"NSExtensionContext"
@"NSXPCListenerEndpoint"
@"NSXPCListener"
@"<RPBroadcastControllerDelegate>"
v32@0:8@"NSXPCListenerEndpoint"16@?<v@?>24
v32@0:8@"RPVideoEditorViewController"16@"NSArray"24
@"<RPPreviewViewControllerDelegate>"
@"<RPExtensionContextDelegate>"
@"RPBroadcastExtensionHostContext"
Vv24@0:8@?<v@?@"NSXPCListenerEndpoint">16
@"RPBroadcastHostViewController"
v40@0:8@16@24@32
