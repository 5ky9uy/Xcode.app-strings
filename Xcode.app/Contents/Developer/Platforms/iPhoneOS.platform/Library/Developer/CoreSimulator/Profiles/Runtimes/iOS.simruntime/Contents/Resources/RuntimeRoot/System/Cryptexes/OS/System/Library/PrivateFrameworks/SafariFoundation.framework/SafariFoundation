com.apple.SafariFoundation.CredentialProviderExtensionHelper
v8@?0
v16@?0@"NSError"8
user
password
site
date
externalCredential
<%@: %p; site = %@; user = %@; date = %@
com.apple.SafariFoundation.%@.%p
sf_identity_matches_domains
v16@?0q8
CREATE TABLE credential_identities (id INTEGER PRIMARY KEY AUTOINCREMENT,identity_type INTEGER DEFAULT 0,service_id TEXT NOT NULL,service_id_type INTEGER NOT NULL DEFAULT 0,external_record_id TEXT DEFAULT NULL,user TEXT DEFAULT NULL,rank INTEGER NOT NULL DEFAULT 0,UNIQUE(service_id, service_id_type, external_record_id, user, identity_type) ON CONFLICT REPLACE)
CREATE INDEX credential_identities__service_id ON credential_identities (service_id)
B8@?0
DELETE FROM credential_identities WHERE service_id = ? AND service_id_type = ? AND external_record_id = ? AND user = ? AND identity_type = ?
DELETE FROM credential_identities
VACUUM
INSERT INTO credential_identities (identity_type, service_id, service_id_type, external_record_id, user, rank) VALUES (?, ?, ?, ?, ?, ?)
UPDATE credential_identities SET identity_type = ?, service_id = ?, service_id_type = ?, external_record_id = ?, user = ?, rank = ? WHERE id = ?
SELECT * FROM credential_identities WHERE sf_identity_matches_domains(service_id, service_id_type, ?) == 1
SELECT * FROM credential_identities
SELECT EXISTS(SELECT 1 FROM credential_identities)
domainSet
SFAutoFillHelperErrorDomain
com.apple.SafariFoundation.AutoFillHelper
com.apple.developer.authentication-services.autofill-credential-provider
com.apple.authentication-services.access-credential-identities
com.apple.authentication-services-credential-provider-ui
ASCredentialProviderExtensionShowsConfigurationUI
ASAccountAuthenticationModificationSupportsUpgradeToSignInWithApple
ASAccountAuthenticationModificationSupportsStrongPasswordChange
ASAccountAuthenticationModificationPasswordGenerationRequirements
com.apple.authentication-services-account-authentication-modification-ui
com.apple.authentication-services.coordinate-account-authentication-modification
ASAccountAuthenticationModificationOptOutOfSecurityPromptsOnSignIn
.app.link
.test-app.link
.adj.st
.ulink.adjust.com
.app.goo.gl
.bttn.io
.c00.adobe.com
.bnc.lt
.onelink.me
.storeapp-promotions.com
.page.link
.rover.io
.judo.app
.hastrk1.com
.hastrk2.com
.hastrk3.com
.api-01.com
.api-02.com
.api-03.com
.api-04.com
.api-05.com
.measurementapi.com
.tlnk.io
act.gov.au
apple.com
amazon.com
facebook.com
google.com
intuit.com
@"SFSharedWebCredentialsDatabaseEntry"16@?0@"NSString"8
v16@?0@"NSArray"8
@16@?0@"WBSSavedAccount"8
@"NSString"16@?0@"SFSharedWebCredentialsDatabaseEntry"8
v48@?0q8@"NSString"16@"NSArray"24@"NSArray"32@"WBSSavedAccount"40
v16@?0@"NSString"8
@"NSString"16@?0@"NSString"8
q24@?0@"SFSafariCredential"8@"SFSafariCredential"16
q24@?0@"SFSharedWebCredentialsDatabaseEntry"8@"SFSharedWebCredentialsDatabaseEntry"16
@"SFSharedWebCredentialsDatabaseEntry"16@?0@"SFSharedWebCredentialsDatabaseEntry"8
B16@?0@"SFSharedWebCredentialsDatabaseEntry"8
@16@?0@"_SWCServiceDetails"8
q24@?0@"SFPasswordCredentialIdentity"8@"SFPasswordCredentialIdentity"16
@"SFSafariCredential"16@?0@"SFPasswordCredentialIdentity"8
v24@?0@"SFCredentialProviderExtensionState"8@"NSArray"16
v16@?0@"NSExtension"8
%@@%@
www.
.com
v24@?0@"NSArray"8@"WBSPasskeyAutoFillFromNearbyDeviceOptions"16
@"SFAutoFillPasskey"16@?0@"WBSAutoFillPasskey"8
WBSAutoFillQuirks
plist
AutoFillQuirks
SFExternalCredentialIdentityStoreErrorDomain
rowIdentifier
serviceIdentifier
serviceIdentifierType
externalRecordIdentifier
rank
owningExtensionState
enabled
supportsIncrementalUpdates
localizedDisplayName
credentialIdentityStoreIdentifier
CardNameUIString
CardNumber
ExpirationDate
CardholderName
CardSecurityCode
com.apple.safari.credit-cards
SafariCreditCardEntries
@"NSDictionary"16@?0@"NSData"8
<%@: %p; domain = %@; appID = %@; service = %@; isApproved = %d
Unknown
coreIdentifier
v20@?0B8@"NSError"12
/SystemData/com.apple.AuthenticationServices
Identities
Identities.db
AutoFillFromAddressBook
com.apple.WebUI
AutoFillPasswords
DefaultValueForPasswordAndCreditCardAutoFill
NPSManager
Class getNPSManagerClass(void)_block_invoke
SFAutoFillFeatureManager.m
Unable to find class %s
void *NanoPreferencesSyncLibrary(void)
corePasskey
source
timestamp
GUID
displayCode
detectedCode
handle
machineReadableCode
domain
domainStrictMatch
embeddedDomain
embeddedDomains
<%@: %p; source=%@; code=<promised>%@; generator=%p; user="%@"; domain="%@">
<%@: %p; source=%@; code="%@"; machineReadableCode="%@"; displayCode="%@"; guid="%@"; handle="%@"; timeStamp="%@"; user="%@"; domain="%@" embeddedDomain="%@">
https
TOTPGenerator
Messages
Fill code %@
Verification code for %@
Verification code
NSString *getIMOneTimeCodeTimeStampKey(void)
SFAutoFillOneTimeCode.m
IMOneTimeCodeTimeStampKey
void *IMCoreLibrary(void)
NSString *getIMOneTimeCodeGuidKey(void)
IMOneTimeCodeGuidKey
NSString *getIMOneTimeCodeKey(void)
IMOneTimeCodeKey
NSString *getIMOneTimeCodeDisplayKey(void)
IMOneTimeCodeDisplayKey
NSString *getIMOneTimeCodeHandleKey(void)
IMOneTimeCodeHandleKey
NSString *getIMOneTimeCodeMachineReadableCodeKey(void)
IMOneTimeCodeMachineReadableCodeKey
NSString *getIMOneTimeCodeDomainKey(void)
IMOneTimeCodeDomainKey
NSString *getIMOneTimeCodeEmbeddedDomainKey(void)
IMOneTimeCodeEmbeddedDomainKey
NSString *getIMOneTimeCodeDomainStrictMatchKey(void)
IMOneTimeCodeDomainStrictMatchKey
NSString *getIMOneTimeCodeEmbeddedDomainsKey(void)
IMOneTimeCodeEmbeddedDomainsKey
From Messages
com.apple.SafariShared
AutoFill
Credentials
Passwords
PasswordSharing
CredentialProviderExtension
B16@?0@"SFSuggestedUser"8
v24@?0q8@"NSString"16
com.apple.AuthenticationServices.%@.%p
v24@?0@"NSArray"8@"NSError"16
B16@?0@"NSExtension"8
B24@?0@"NSExtension"8^B16
@16@?0@"NSExtension"8
suggestedUserValue
suggestedUserType
suggestedUserUsageFrequency
<%@ %p: value=%@; type=%@; usageFrequency=%@>
v24@?0@"<NSCopying>"8@"NSArray"16
v24@?0@"<NSCopying>"8@"NSError"16
v16@?0@"<NSCopying>"8
com.apple.SafariFoundation.SFAppAutoFillOneTimeCodeProvider.internal
@"NSArray"16@?0@"SFSharedWebCredentialsDatabaseEntry"8
B16@?0@"WBSSavedAccount"8
NOT 
com.apple.developer.web-browser
v16@?0@"WBSSavedAccountMatchResult"8
@"WBSSavedAccount"16@?0@"WBSSavedAccountMatch"8
@"NSSet"24@?0@"WBSSavedAccount"8@"NSMutableSet"16
@"SFAutoFillOneTimeCode"16@?0@"WBSTOTPGenerator"8
q24@?0@"SFAutoFillOneTimeCode"8@"SFAutoFillOneTimeCode"16
v16@?0@"NSTimer"8
IMOneTimeCodeAccelerator
Class getIMOneTimeCodeAcceleratorClass(void)_block_invoke
SFAppAutoFillOneTimeCodeProvider.m
username
displayName
highLevelDomain
notes
protectionSpaces
passkeyCredentialID
passkeyCredential
passkeyCredentialRelyingPartyID
data
hasPasskey
safaricredential
B16@?0@"NSURLQueryItem"8
com.apple.passwordsharing.%f
com.apple.sharing.safaripasswordsharing
Failed to get a remote proxy object with error: %{public}@
Failed to open credential identities database with error %ld
Failed to create identities table with error %{public}@
Failed to create index on identities table with error %{public}@
Failed to delete an entry from identities table with error %{public}@
Failed to delete an item from identities table with error %{public}@
Failed to delete entries from identities table with error %{public}@
Failed to vacuum identities table with error %{public}@
Failed to insert an item into identities table with error %{public}@
Failed to update an item of identities table with error %{public}@
Attempted to submit credential with user name that is not a string, got type: %@
%{public}@
User completed passkey AutoFill with identifier %{private}@ for operation %{public}@, didAuthenticate: %{private}@
SecItemCopyMatching failed with error %d
Failed to create directory for identities database with error %{public}@
Skipping extension %{public}@ because it is missing the %{public}@ entitlement
Skipping extension %{public}@ because its containing app is missing the %{public}@ entitlement
Error: Multiple credential provider extensions are active. Which one will be used as the primary extension is undefined
Current verification code is domain-bound to %{private}@.
Invalid audit token for app. Domain validation is not possible.
App %{private}@ has web browser entitlement. Checking domain against website URL %{private}@.
Checking domain against associated domains for app %{private}@.
Domain-bound verification code is %@valid for app %{private}@.
Will return at least a code from Messages.
Attempting to return a TOTP generated code. classification:%d
App %{private}@ has web browser entitlement. Getting passwords for website URL %{private}@.
Fetching passwords for associated domains for app %{private}@.
Codes for app: %{private}@
Domain-bound verification code is %@valid for frame URLs from web browser: %{private}@
Received verification code from Messages: %{private}@
Current one time code message expired at %{public}@.
Timed out waiting for web credentials for app.
Stopping generator observer timer.
Failed to unarchive sharable password with error %{public}@
Failed to create sharable password from URL because it has incorrect scheme
Failed to create sharable password from URL because it's missing data or key reference
Failed to create private key with error: %{public}@
Failed to encrypt password data with error: %{public}@
Failed to get persistent reference to private key with status: %d
Failed to get private key with status %d
Failed to decrypt password data with error %{public}@
softlink:r:path:/System/Library/PrivateFrameworks/NanoPreferencesSync.framework/NanoPreferencesSync
softlink:r:path:/System/Library/PrivateFrameworks/IMCore.framework/IMCore
softlink:r:path:/System/Library/PrivateFrameworks/IMCore.framework/IMCore
SFCredentialProviderExtensionHelperProtocol
SFCredentialProviderExtensionHelperProxy
SFSafariCredential
NSSecureCoding
NSCoding
SFSharablePasswordReceiver
SFExternalCredentialIdentityStore
SFAutoFillHelperProtocol
NSObject
SFAutoFillHelperProxy
AccountSavingExtras
SFDomainAssociationUtilities
SFSafariCredentialStore
SFAppAutoFillPasskeyProvider
SFStrongPasswordGenerator
SFPasswordCredentialIdentity
SFSafariPasswordCredential
NSCopying
SFCredentialProviderExtensionState
SFSafariCreditCardStore
SFSharedWebCredentialsDatabaseEntry
SFAutoFillPasskeyIdentifier
SFExternalCredentialIdentityStoreManager
SFAutoFillFeatureManager
MCProfileConnectionObserver
SFAutoFillPasskey
SFAutoFillOneTimeCodeEmbeddedDomainPair
SFAutoFillOneTimeCode
SFSuggestedUserProvider
SFCredentialProviderExtensionManager
SFSuggestedUser
SafariFoundationExtras
TOTPGeneratorSnapshot
SFAppAutoFillOneTimeCodeProvider
_SFSharablePasswordEncryptionInformation
SFSharablePassword
init
initWithServiceName:
getCredentialProviderExtensionStateWithCompletion:
saveCredentialIdentities:completion:
removeCredentialIdentities:completion:
removeAllCredentialIdentitiesWithCompletion:
replaceCredentialIdentitiesWithIdentities:completion:
fetchCredentialIdentitiesMatchingDomains:completion:
removeCredentialIdentityStoreForApplication:completion:
interfaceWithProtocol:
setWithObject:
setClasses:forSelector:argumentIndex:ofReply:
setWithObjects:
setRemoteObjectInterface:
setInvalidationHandler:
resume
invalidate
dealloc
safari_privacyPreservingDescription
remoteObjectProxyWithErrorHandler:
_proxyObject
credentialProviderExtensionWithDisabledState
errorWithDomain:code:userInfo:
.cxx_destruct
_connection
_lock
copy
user
password
site
creationDate
distantPast
isExternal
stringWithFormat:
externalCredential
isEqual:
hash
decodeObjectOfClasses:forKey:
initWithExternalCredential:
decodeObjectOfClass:forKey:
initWithUser:password:site:creationDate:
encodeObject:forKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
description
_user
_password
_site
_creationDate
_externalCredential
T@"<SFSafariPasswordCredential>",R,N,V_externalCredential
T@"NSString",R,N,V_user
T@"NSString",R,N,V_password
T@"NSString",R,N,V_site
T@"NSDate",R,N,V_creationDate
external
TB,R,N,GisExternal
initWithURL:protectionType:
UTF8String
databaseQueue
database
handle
initWithDatabase:
openAndCheckIntegrity:createIfNeeded:fallBackToMemoryStoreIfError:lockingPolicy:completionHandler:
lastErrorMessage
tryToPerformTransactionInBlock:
_saveCredentialIdentities:
_removeAllCredentialIdentities
_vacuum
_removeCredentialIdentities:
count
countByEnumeratingWithState:objects:count:
_removeCredentialIdentity:
statementForQuery:error:
serviceIdentifier
serviceIdentifierType
externalRecordIdentifier
execute
reset
rowIdentifier
_updateCredentialIdentity:
_insertCredentialIdentity:
rank
lastInsertRowID
setRowIdentifier:
_fetchCredentialIdentities
_fetchCredentialIdentitiesMatchingDomains:
int64AtIndex:
stringAtIndex:
initWithRowIdentifier:serviceIdentifier:serviceIdentifierType:externalRecordIdentifier:user:rank:
safari_highLevelDomainFromHost
lowercaseString
addObject:
initWithDatabase:query:
fetch
array
_credentialIdentityFromRow:
_fetchStoreIsEmpty
nextObject
initWithURL:
_databaseWillClose
_createFreshDatabaseSchema
_currentSchemaVersion
fetchCredentialIdentitiesWithCompletion:
fetchStoreEmptyStateWithCompletion:
_statements
_queue
stringWithUTF8String:
containsObject:
componentsWithString:
host
initWithDatabase:query:error:
code
reportErrorWithCode:statement:error:
bindString:atParameterIndex:
bindInt64:atParameterIndex:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
getAutomaticStrongPasswordForAppWithPasswordRules:confirmPasswordRules:completion:
getAutomaticStrongPasswordForAppWithPasswordRules:confirmPasswordRules:overrideApplicationIdentifier:completion:
getRemoteAutoFillAvailabilityWithCompletionHandler:
_getAutomaticStrongPasswordForAppWithPasswordRules:confirmPasswordRules:overrideApplicationIdentifier:completion:
_hasPasskeyData
_hasPasswordData
sharedStore
_usernameOrEmptyString
highLevelDomain
protectionSpaces
canSaveUser:password:forProtectionSpace:highLevelDomain:
_savePasswordAccount
_savePasskeyAccount
_mergeSavedAccountWithPasskey:toSavedAccountWithPassword:
_saveNotesEntryForSavedAccount:
_saveOneTimeCodeForSavedAccount:
username
length
passkeyCredential
passkeyCredentialID
saveUser:password:forProtectionSpace:highLevelDomain:
initWithFirst:second:
passkeyRelyingPartyID
_saveUser:passkeyCredential:passkeyRelyingPartyID:
notesEntry
saveNotesEntry:forSavedAccount:
otpAuthURL
initWithOTPAuthURL:
saveTOTPGenerator:forSavedAccount:
hasAnyCredentialData
hasPasswordWithConflicts
saveToKeychain
savePasskeyAccountAndMergeIntoSavedPasswordAccountIfNeeded:
TB,R,N
hasPrefix:
substringFromIndex:
safari_hasCaseInsensitiveSuffix:
safari_isCaseInsensitiveEqualToString:
domainByStrippingSubdomainWildcardPrefixIfNecessary:
domainIsProhibitedForSavingCredentials:
highLevelDomainHasSuiteOfAssociatedApps:
_approvedSharedWebCredentialsDatabaseEntriesForAppWithAppID:completionHandler:
sharedFeatureManager
shouldAutoFillPasswords
sharedManager
primaryExtensionSync
shouldAutoFillPasswordsFromKeychain
savedAccountsWithPasswords
hasPasswordsEligibleForAutoFill
hasPasskeysEligibleForAutoFill
isAppAutoFillAvailable
getCredentialsForAppWithAppID:websiteURL:completionHandler:
getCredentialsForAppWithAppID:externallyVerifiedAndApprovedSharedWebCredentialDomains:websiteURL:completionHandler:
_initWithDomain:appID:service:isApproved:
safari_mapObjectsUsingBlock:
mutableCopy
setWithArray:
_getCredentialsForAppWithApprovedAndValidSharedWebCredentialsDatabaseEntries:websiteURL:completionHandler:
_approvedAndValidSharedWebCredentialsDatabaseEntriesForAppWithAppID:completionHandler:
userIsNeverSaveMarker
sites
objectAtIndexedSubscript:
safari_simplifiedSiteNameForCredentialLookup
lastModifiedDate
safari_mapAndFilterObjectsUsingBlock:
_getExternalCredentialsMatchingSharedWebCredentialsDatabaseEntries:websiteURL:completion:
_credentialsMatchingSharedWebCredentialsDatabaseEntries:websiteURL:savedAccounts:
arrayByAddingObjectsFromArray:
domain
safari_setByApplyingBlock:
_highLevelDomainsFromDatabaseEntries:
_savedAccount:isRelatedToEntryHighLevelDomains:andWebsiteURL:
setObject:forKey:
countForObject:
objectForKey:
firstObject
replaceObjectAtIndex:withObject:
_sortCredentials:usingApprovedSharedWebCredentialsDatabaseEntries:
_getAllowedActionForAppCredentialsWithAppID:websiteURL:user:password:shouldAnalyzeExistingCredentials:completionHandler:
rangeOfString:
isEqualToString:
_getBundleIDForPrimaryCredentialProviderWithCompletionHandler:
service
addObjectsFromArray:
_bestDomainFromApprovedDomainsForWebCredentials:appLinks:otherServices:appID:allDomains:
orderedSet
allObjects
insertObject:atIndex:
initWithArray:
numberWithUnsignedInteger:
compare:
caseInsensitiveCompare:
sortWithOptions:usingComparator:
sortedArrayUsingComparator:
subarrayWithRange:
getApprovedSharedWebCredentialsEntriesForAppWithAppID:completionHandler:
isApproved
safari_filterObjectsUsingBlock:
_sharedWebCredentialsDatabaseEntriesForAppWithAppID:completionHandler:
initWithServiceType:applicationIdentifier:domain:
serviceDetailsWithServiceSpecifier:error:
initWithServiceDetails:
_credentialProviderExtensionHelperProxy
compareForQuickTypeBar:
setOwningExtensionState:
titleForPasswordCredentialIdentity:formURL:
owningExtensionState
localizedDisplayName
sf_bundleIdentifierForContainingApp
getPrimaryExtensionWithCompletion:
getAllApprovedSharedWebCredentialsEntries:
isRemoteAutoFillAvailable
getCredentialsForAppWithAppID:completionHandler:
getCredentialsForAppWithAppID:externallyVerifiedAndApprovedSharedWebCredentialDomains:completionHandler:
getAllCredentialsWithCompletionHandler:
getCanSaveCredentialsWithAppID:websiteURL:completionHandler:
getAllowedActionForAppCredentialsWithAppID:websiteURL:user:password:completionHandler:
bestDomainForAppID:completionHandler:
bestDomainForAutoFillFromDomains:appID:
getApprovedSharedWebCredentialsEntriesSortedByHighestValueForAppWithAppID:completionHandler:
textSuggestionHeaderForExternalCredential:
hasSuffix:
safari_countOfString:
componentsSeparatedByString:
reverseObjectEnumerator
componentsJoinedByString:
characterAtIndex:
getPasskeysForRunningAssertionWithApplicationIdentifier:withCompletionHandler:
identifier
corePasskey
operationUUID
userSelectedAutoFillPasskey:authenticatedLAContext:completionHandler:
getAvailablePasskeysForAppWithAuditToken:withCompletionHandler:
getAvailablePasskeysForApplicationIdentifier:completionHandler:
userSelectedPasskeyWithUserHandle:authenticatedLAContext:
userSelectedPasskey:authenticatedLAContext:
_proxy
initWithCoreAutoFillPasskey:
safari_safariCoreBundle
URLForResource:withExtension:
defaultManager
safari_autoFillQuirksDownloadDirectoryURL
initWithBuiltInQuirksURL:downloadsDirectoryURL:resourceName:resourceVersion:updateDateDefaultsKey:updateInterval:
setShouldAttemptToDownloadConfiguration:
beginLoadingQuirksFromDisk
passwordGenerationManager
generatedPasswordMatchingRequirements:
defaultRequirementsForDomain:
parsePasswordRules:error:
mergePasswordRuleSet:withPasswordRuleSet:
requirementsForPasswordRuleSet:respectingMinLength:maxLength:
generatedPasswordForAppWithAppID:associatedDomains:passwordRules:confirmPasswordRules:
_passwordGenerationManager
encodeInt64:forKey:
decodeInt64ForKey:
initWithRowIdentifier:serviceIdentifier:serviceIdentifierType:externalRecordIdentifier:user:rank:owningExtensionState:
safari_stringByRemovingWwwDotPrefix
_domainWithoutWWWDot
copyWithZone:
T@"NSString",R,C,N
T@"NSDate",R,N
initWithServiceIdentifier:serviceIdentifierType:externalRecordIdentifier:user:rank:
_rowIdentifier
_serviceIdentifierType
_serviceIdentifier
_externalRecordIdentifier
_rank
_owningExtensionState
Tq,N,V_rowIdentifier
T@"SFCredentialProviderExtensionState",&,N,V_owningExtensionState
Tq,R,N,V_serviceIdentifierType
T@"NSString",R,C,N,V_serviceIdentifier
T@"NSString",R,C,N,V_externalRecordIdentifier
T@"NSString",R,C,N,V_user
Tq,R,N,V_rank
initWithEnabledState:supportsIncrementalUpdates:
initWithEnabledState:supportsIncrementalUpdates:localizedDisplayName:credentialIdentityStoreIdentifier:
decodeBoolForKey:
encodeBool:forKey:
isEnabled
supportsIncrementalUpdates
credentialIdentityStoreIdentifier
_enabled
_supportsIncrementalUpdates
_localizedDisplayName
_credentialIdentityStoreIdentifier
enabled
TB,R,N,GisEnabled,V_enabled
TB,R,N,V_supportsIncrementalUpdates
T@"NSString",R,C,N,V_localizedDisplayName
T@"SFExternalCredentialIdentityStoreIdentifier",R,C,N,V_credentialIdentityStoreIdentifier
dictionaryWithObjects:forKeys:count:
propertyListWithData:options:format:error:
dictionary
objectForKeyedSubscript:
setObject:forKeyedSubscript:
savedCreditCardsWithError:
serviceSpecifier
applicationIdentifier
serviceType
appID
_approved
_domain
_appID
_service
T@"NSString",R,C,N,V_domain
T@"NSString",R,C,N,V_appID
Tq,R,N,V_service
approved
TB,R,N,GisApproved,V_approved
credentialID
coreIdentifier
initWithCoreIdentifier:
_coreIdentifier
T@"WBSPublicKeyCredentialIdentifier",R,C,N,V_coreIdentifier
_xpcConnection
containingAppForPlugInConnectedTo:
_credentialIdentityStoreWithIdentifier:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
removeItemAtURL:error:
getCredentialIdentityStoreWithIdentifier:completion:
removeCredentialIdentityStoreWithIdentifier:completion:
initWithBundleIdentifier:allowPlaceholder:error:
dataContainerURL
URLByAppendingPathComponent:isDirectory:
sharedConnection
registerObserver:
addObserver:
_refreshCachedAutoFillRestrictionValues
unregisterObserver:
removeObserver:
autoFillPreferencesDomain
_syncManager
synchronizeUserDefaultsDomain:keys:
defaultValueForPasswordAndCreditCardAutoFill
autoFillPreferencesDidChange
boolRestrictionForFeature:
effectiveBoolValueForSetting:
profileConnectionDidReceiveRestrictionChangedNotification:userInfo:
profileConnectionDidReceivePasscodeChangedNotification:userInfo:
profileConnectionDidReceivePasscodePolicyChangedNotification:userInfo:
profileConnectionDidReceiveProfileListChangedNotification:userInfo:
profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:
profileConnectionDidReceiveDefaultsChangedNotification:userInfo:
profileConnectionDidReceiveAppWhitelistChangedNotification:userInfo:
T@"SFAutoFillFeatureManager",R
Tr^{__CFString=},R
setShouldAutoFillPasswordsFromKeychain:
_cachedAutoFillRestrictionValue
_cachedPasswordAutoFillEffectiveValue
TB,N
preferredCredentialProviderForSaving
T@"NSString",&,D,N
currentHandler
handleFailureInFunction:file:lineNumber:description:
isEphemeralMultiUser
relyingPartyIdentifier
dataUsingEncoding:
userHandle
_corePasskey
T@"WBSAutoFillPasskey",R,C,N,V_corePasskey
T@"NSString",R,N
T@"SFAutoFillPasskeyIdentifier",R,C,N
T@"NSData",R,N
strict
setDomain:
setStrict:
_strict
T@"NSString",C,N,V_domain
TB,N,V_strict
boolValue
_embeddedDomainArrayFromIMCoreEmbeddedDomains:
date
codeForDate:
_stringForSource:
_domainBoundTopLevelURL
_matchURL:withBoundDomainURL:strict:
_matchBoundDomainAndEmbeddedDomainsWithFrameURLs:
_matchBoundDomainAndEmbeddedDomainWithFrameURLs:
_domainBoundEmbeddedURL
lastObject
_secureURLForDomain:
safari_hasSameOriginAsURL:
safari_hasSameSiteAsURL:
setScheme:
setHost:
encodeInteger:forKey:
decodeIntegerForKey:
decodeArrayOfObjectsOfClass:forKey:
initWithIMCoreDictionary:
initWithTOTPGenerator:user:highLevelDomain:
timestamp
detectedCode
matchDomainWithURL:
matchBoundDomainsWithFrameURLs:
localizedTitleForContext:
localizedSubtitleForContext:
source
machineReadableCode
displayCode
GUID
domainStrictMatch
embeddedDomain
embeddedDomains
totpGenerator
_timestamp
_detectedCode
_totpGenerator
_domainStrictMatch
_source
_machineReadableCode
_displayCode
_GUID
_handle
_embeddedDomain
_embeddedDomains
T@"NSURL",R,C,N
T@"WBSTOTPGenerator",R,N,V_totpGenerator
Tq,R,N,V_source
T@"NSString",R,C,N,V_machineReadableCode
T@"NSString",R,C,N,V_displayCode
T@"NSString",R,C,N,V_GUID
T@"NSString",R,C,N,V_handle
TB,R,N,V_domainStrictMatch
T@"NSString",R,C,N,V_embeddedDomain
T@"NSArray",R,C,N,V_embeddedDomains
defaultCenter
_accountStoreChangedNotification:
addObserver:selector:name:object:
sortUsingSelector:
_allCachedSuggestedUsersWithType:
value
safari_hasCaseInsensitivePrefix:
suggestedUsersOfType:matchingText:completionHandler:
_cachedSuggestedUsersWithType:matchingText:
_getSuggestedUsersFromSavedAccounts:suggestedEmails:suggestedNonEmails:
usageFrequency
setUsageFrequency:
suggestedUserWithValue:type:
safari_looksLikeEmailAddress
allValues
sortedArrayUsingSelector:
sharedProvider
suggestedUsersOfType:completionHandler:
_suggestedEmails
_suggestedNonEmails
endMatchingExtensions:
beginMatchingExtensionsWithAttributes:completion:
_updateExtensions:
_notifyObservers:
weakObjectsPointerArray
addPointer:
credentialProviderExtensionManagerExtensionListDidChange:
_extensions
extensionsWithMatchingAttributes:error:
_beginExtensionDiscovery
arrayWithObjects:count:
removeObject:
_endExtensionDiscovery
extensionIsEnabled:
primaryExtension
_plugIn
setUserElection:
containingUrl
localizedContainingName
extensionsSync
objectsPassingTest:
objectForInfoDictionaryKey:
attributes
safari_boolForKey:
T@"SFCredentialProviderExtensionManager",R
extensions
setExtension:isEnabled:
displayNameForExtension:
shouldShowConfigurationUIForEnablingExtension:
_extensionMatchingToken
_observers
_errorEncounteredDuringLastExtensionDiscovery
_observerLock
T@"NSSet",R,N
T@"NSExtension",R,N
entitlements
initWithURL:allowPlaceholder:error:
objectForKey:ofClass:
userElection
initWithValue:type:
numberWithInteger:
type
_value
_type
_usageFrequency
Tq,N,V_usageFrequency
T@"NSString",R,C,N,V_value
Tq,R,N,V_type
bundleIdentifier
setRequestCompletionBlock:
setRequestCancellationBlock:
setRequestInterruptionBlock:
_sf_addHandlerForRequestIdentifier:withBlock:
removeObjectForKey:
startDateOfInterval
setStartDateOfInterval:
oneTimeCode
setOneTimeCode:
_startDateOfInterval
_oneTimeCode
T@"NSDate",&,N,V_startDateOfInterval
T@"SFAutoFillOneTimeCode",&,N,V_oneTimeCode
initWithMessagesOneTimeCodeSupport:
_processOneTimeCodeFromMessages:
initWithBlockForUpdates:
_validateCurrentOneTimeCode
hasOneTimeCode
_associatedDomainEntriesForAppWithIdentifier:
_secureURLWithDomain:
_savedAccountsWithPasswordsForURL:
safari_flattenedArray
totpGenerators
safari_containsObjectPassingTest:
currentOneTimeCodesWithAuditToken:website:usernameHint:fieldClassification:
_appWithAuditTokenIsWebBrowser:
_validateURL:withURLFromOriginBoundCode:
_sortedOneTimeCodesFromSavedAccounts:
consumeOneTimeCode:
consumeCodeWithGuid:
weakObjectsHashTable
oneTimeCodeProvider:didUpdateOneTimeCode:
weakToStrongObjectsMapTable
startDateOfIntervalContainingDate:
_startGeneratorTimer
_stopGeneratorTimer
oneTimeCodeProviderReceivedCode:
appAutoFillOneTimeCodeProviderReceivedOneTimeCode:
dateByAddingTimeInterval:
timeIntervalSinceNow
initWithURL:options:partialUsername:associatedDomainsManager:webFrameIdentifier:
getSavedAccountsMatchingCriteria:withSynchronousCompletionHandler:
orderedMatches
savedAccount
userVisibleDomain
safari_reduceObjectsWithInitialValue:usingBlock:
keyEnumerator
isEqualToDate:
timerWithTimeInterval:repeats:block:
setTolerance:
mainRunLoop
addTimer:forMode:
hasOneTimeCodeForAppWithAuditToken:
currentOneTimeCodeWithAuditToken:website:
currentOneTimeCodesForWebBrowserWithWebsiteFrameURLs:fieldClassification:
consumeCurrentOneTimeCode
consumeMessagesOneTimeCodeWithGUID:
addObserver:forOneTimeCode:
removeObserverForOneTimeCode:
delegate
setDelegate:
associatedDomainsManager
setAssociatedDomainsManager:
_oneTimeCodeAccelerator
_internalQueue
_currentOneTimeCodeFromMessages
_generatorObservers
_generatorTimer
_delegate
_associatedDomainsManager
T@"<SFAppAutoFillOneTimeCodeProviderDelegate>",W,N,V_delegate
T@"WBSAutoFillAssociatedDomainsManager",&,N,V_associatedDomainsManager
initWithEncryptedPasswordData:encryptionKeyReference:
encryptedPasswordData
encryptionKeyReference
_encryptedPasswordData
_encryptionKeyReference
T@"NSData",R,C,N,V_encryptedPasswordData
T@"NSData",R,C,N,V_encryptionKeyReference
initWithUsername:password:displayName:highLevelDomain:passkeyRelyingPartyID:protectionSpaces:
exportableURLWithIssuer:username:
_exportPasskeyCredential
first
second
_decryptedDataForEncryptedData:encryptionKeyReference:
sharablePasswordFromData:
unarchivedObjectOfClass:fromData:error:
scheme
componentsWithURL:resolvingAgainstBaseURL:
queryItems
name
initWithBase64EncodedString:options:
_encryptionInformationWithNewKey
base64EncodedStringWithOptions:
passwordManagerURLWithDictionary:
_queryItemsForAirDropRepresentationWithEncryptionInformation:
setQueryItems:
displayName
queryItemWithName:value:
arrayWithObjects:
timeIntervalSinceReferenceDate
dateWithTimeIntervalSinceNow:
archivedDataWithRootObject:requiringSecureCoding:error:
sharablePasswordFromEncryptedData:encryptionKeyReference:
sharablePasswordFromURL:
safariCredentialURLHasPasskey:
initWithSavedPassword:
passwordManagerURL
urlRepresentationForAirDrop
_username
_displayName
_highLevelDomain
_otpAuthURL
_notesEntry
_protectionSpaces
_passkeyCredentialID
_passkeyCredential
_passkeyRelyingPartyID
T@"NSString",R,C,N,V_username
T@"NSString",R,C,N,V_password
T@"NSString",R,C,N,V_displayName
T@"NSString",R,C,N,V_highLevelDomain
T@"NSURL",R,C,N,V_otpAuthURL
T@"NSString",R,C,N,V_notesEntry
T@"NSArray",R,C,N,V_protectionSpaces
T@"NSURL",R,N
T@"NSData",R,C,N,V_passkeyCredentialID
T@"NSData",R,C,N,V_passkeyCredential
T@"NSString",R,C,N,V_passkeyRelyingPartyID
v24@0:8@?16
v32@0:8@16@?24
v24@0:8@?<v@?@"SFCredentialProviderExtensionState">16
v32@0:8@"NSArray"16@?<v@?B@"NSError">24
v24@0:8@?<v@?B@"NSError">16
v32@0:8@"NSArray"16@?<v@?@"SFCredentialProviderExtensionState"@"NSArray">24
v32@0:8@"NSString"16@?<v@?B@"NSError">24
@16@0:8
v16@0:8
@"NSXPCConnection"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
B16@0:8
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@48@0:8@16@24@32@40
B24@0:8@16
Q16@0:8
@"NSString"
@"NSDate"
@"<SFSafariPasswordCredential>"
@32@0:8@16q24
v44@0:8B16B20B24q28@?36
i16@0:8
i24@0:8@16
@"WBSSQLiteStatementCache"
@"NSObject<OS_dispatch_queue>"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v40@0:8@16@24@?32
v48@0:8@16@24@32@?40
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSString"@"NSError">32
v48@0:8@"NSString"16@"NSString"24@"NSString"32@?<v@?@"NSString"@"NSError">40
@40@0:8@16@24@32
v56@0:8@16@24@32@40@?48
v60@0:8@16@24@32@40B48@?52
@56@0:8@16@24@32@40^@48
@32@0:8@16@24
B40@0:8@16@24@32
v32@0:8@16@24
v56@0:8{?=[8I]}16@?48
@"WBSAuthenticationServicesAgentProxy"
@"WBSPasswordGenerationManager"
@24@0:8^{_NSZone=}16
@"NSDate"16@0:8
@64@0:8q16@24q32@40@48q56
@56@0:8@16q24@32@40q48
@72@0:8q16@24q32@40@48q56@64
q24@0:8@16
q16@0:8
v24@0:8q16
@"SFCredentialProviderExtensionState"
@24@0:8B16B20
@40@0:8B16B20@24@32
@"SFExternalCredentialIdentityStoreIdentifier"
@24@0:8^@16
@44@0:8@16@24q32B40
@"WBSPublicKeyCredentialIdentifier"
r^{__CFString=}16@0:8
v32@0:8@"MCProfileConnection"16@"NSDictionary"24
v20@0:8B16
@"WBSAutoFillPasskey"
q36@0:8@16@24B32
@24@0:8q16
@"WBSTOTPGenerator"
@"NSArray"
@32@0:8q16@24
v32@0:8q16@?24
v40@0:8q16@24@?32
v40@0:8@16^@24^@32
v28@0:8@16B24
@"NSSet"
@"NSMutableOrderedSet"
{os_unfair_recursive_lock_s="ourl_lock"{os_unfair_lock_s="_os_unfair_lock_opaque"I}"ourl_count"I}
@"SFAutoFillOneTimeCode"
@20@0:8B16
B48@0:8{?=[8I]}16
@56@0:8{?=[8I]}16@48
@72@0:8{?=[8I]}16@48@56q64
B32@0:8@16@24
@"IMOneTimeCodeAccelerator"
@"NSHashTable"
@"NSMapTable"
@"NSTimer"
@"<SFAppAutoFillOneTimeCodeProviderDelegate>"
@"WBSAutoFillAssociatedDomainsManager"
@"NSData"
@64@0:8@16@24@32@40@48@56
@"NSURL"
com.apple.SafariFoundation.CredentialProviderExtensionHelper
v8@?0
v16@?0@"NSError"8
user
password
site
date
externalCredential
<%@: %p; site = %@; user = %@; date = %@
com.apple.SafariFoundation.%@.%p
sf_identity_matches_domains
v16@?0q8
CREATE TABLE credential_identities (id INTEGER PRIMARY KEY AUTOINCREMENT,identity_type INTEGER DEFAULT 0,service_id TEXT NOT NULL,service_id_type INTEGER NOT NULL DEFAULT 0,external_record_id TEXT DEFAULT NULL,user TEXT DEFAULT NULL,rank INTEGER NOT NULL DEFAULT 0,UNIQUE(service_id, service_id_type, external_record_id, user, identity_type) ON CONFLICT REPLACE)
CREATE INDEX credential_identities__service_id ON credential_identities (service_id)
B8@?0
DELETE FROM credential_identities WHERE service_id = ? AND service_id_type = ? AND external_record_id = ? AND user = ? AND identity_type = ?
DELETE FROM credential_identities
VACUUM
INSERT INTO credential_identities (identity_type, service_id, service_id_type, external_record_id, user, rank) VALUES (?, ?, ?, ?, ?, ?)
UPDATE credential_identities SET identity_type = ?, service_id = ?, service_id_type = ?, external_record_id = ?, user = ?, rank = ? WHERE id = ?
SELECT * FROM credential_identities WHERE sf_identity_matches_domains(service_id, service_id_type, ?) == 1
SELECT * FROM credential_identities
SELECT EXISTS(SELECT 1 FROM credential_identities)
domainSet
SFAutoFillHelperErrorDomain
com.apple.SafariFoundation.AutoFillHelper
com.apple.developer.authentication-services.autofill-credential-provider
com.apple.authentication-services.access-credential-identities
com.apple.authentication-services-credential-provider-ui
ASCredentialProviderExtensionShowsConfigurationUI
ASAccountAuthenticationModificationSupportsUpgradeToSignInWithApple
ASAccountAuthenticationModificationSupportsStrongPasswordChange
ASAccountAuthenticationModificationPasswordGenerationRequirements
com.apple.authentication-services-account-authentication-modification-ui
com.apple.authentication-services.coordinate-account-authentication-modification
ASAccountAuthenticationModificationOptOutOfSecurityPromptsOnSignIn
.app.link
.test-app.link
.adj.st
.ulink.adjust.com
.app.goo.gl
.bttn.io
.c00.adobe.com
.bnc.lt
.onelink.me
.storeapp-promotions.com
.page.link
.rover.io
.judo.app
.hastrk1.com
.hastrk2.com
.hastrk3.com
.api-01.com
.api-02.com
.api-03.com
.api-04.com
.api-05.com
.measurementapi.com
.tlnk.io
act.gov.au
apple.com
amazon.com
facebook.com
google.com
intuit.com
@"SFSharedWebCredentialsDatabaseEntry"16@?0@"NSString"8
v16@?0@"NSArray"8
@16@?0@"WBSSavedAccount"8
@"NSString"16@?0@"SFSharedWebCredentialsDatabaseEntry"8
v48@?0q8@"NSString"16@"NSArray"24@"NSArray"32@"WBSSavedAccount"40
v16@?0@"NSString"8
@"NSString"16@?0@"NSString"8
q24@?0@"SFSafariCredential"8@"SFSafariCredential"16
q24@?0@"SFSharedWebCredentialsDatabaseEntry"8@"SFSharedWebCredentialsDatabaseEntry"16
@"SFSharedWebCredentialsDatabaseEntry"16@?0@"SFSharedWebCredentialsDatabaseEntry"8
B16@?0@"SFSharedWebCredentialsDatabaseEntry"8
@16@?0@"_SWCServiceDetails"8
q24@?0@"SFPasswordCredentialIdentity"8@"SFPasswordCredentialIdentity"16
@"SFSafariCredential"16@?0@"SFPasswordCredentialIdentity"8
v24@?0@"SFCredentialProviderExtensionState"8@"NSArray"16
v16@?0@"NSExtension"8
%@@%@
www.
.com
v24@?0@"NSArray"8@"WBSPasskeyAutoFillFromNearbyDeviceOptions"16
@"SFAutoFillPasskey"16@?0@"WBSAutoFillPasskey"8
WBSAutoFillQuirks
plist
AutoFillQuirks
SFExternalCredentialIdentityStoreErrorDomain
rowIdentifier
serviceIdentifier
serviceIdentifierType
externalRecordIdentifier
rank
owningExtensionState
enabled
supportsIncrementalUpdates
localizedDisplayName
credentialIdentityStoreIdentifier
CardNameUIString
CardNumber
ExpirationDate
CardholderName
CardSecurityCode
com.apple.safari.credit-cards
SafariCreditCardEntries
@"NSDictionary"16@?0@"NSData"8
<%@: %p; domain = %@; appID = %@; service = %@; isApproved = %d
Unknown
coreIdentifier
v20@?0B8@"NSError"12
/SystemData/com.apple.AuthenticationServices
Identities
Identities.db
AutoFillFromAddressBook
com.apple.WebUI
AutoFillPasswords
DefaultValueForPasswordAndCreditCardAutoFill
NPSManager
Class getNPSManagerClass(void)_block_invoke
SFAutoFillFeatureManager.m
Unable to find class %s
void *NanoPreferencesSyncLibrary(void)
corePasskey
source
timestamp
GUID
displayCode
detectedCode
handle
machineReadableCode
domain
domainStrictMatch
embeddedDomain
embeddedDomains
<%@: %p; source=%@; code=<promised>%@; generator=%p; user="%@"; domain="%@">
<%@: %p; source=%@; code="%@"; machineReadableCode="%@"; displayCode="%@"; guid="%@"; handle="%@"; timeStamp="%@"; user="%@"; domain="%@" embeddedDomain="%@">
https
TOTPGenerator
Messages
Fill code %@
Verification code for %@
Verification code
NSString *getIMOneTimeCodeTimeStampKey(void)
SFAutoFillOneTimeCode.m
IMOneTimeCodeTimeStampKey
void *IMCoreLibrary(void)
NSString *getIMOneTimeCodeGuidKey(void)
IMOneTimeCodeGuidKey
NSString *getIMOneTimeCodeKey(void)
IMOneTimeCodeKey
NSString *getIMOneTimeCodeDisplayKey(void)
IMOneTimeCodeDisplayKey
NSString *getIMOneTimeCodeHandleKey(void)
IMOneTimeCodeHandleKey
NSString *getIMOneTimeCodeMachineReadableCodeKey(void)
IMOneTimeCodeMachineReadableCodeKey
NSString *getIMOneTimeCodeDomainKey(void)
IMOneTimeCodeDomainKey
NSString *getIMOneTimeCodeEmbeddedDomainKey(void)
IMOneTimeCodeEmbeddedDomainKey
NSString *getIMOneTimeCodeDomainStrictMatchKey(void)
IMOneTimeCodeDomainStrictMatchKey
NSString *getIMOneTimeCodeEmbeddedDomainsKey(void)
IMOneTimeCodeEmbeddedDomainsKey
From Messages
com.apple.SafariShared
AutoFill
Credentials
Passwords
PasswordSharing
CredentialProviderExtension
B16@?0@"SFSuggestedUser"8
v24@?0q8@"NSString"16
com.apple.AuthenticationServices.%@.%p
v24@?0@"NSArray"8@"NSError"16
B16@?0@"NSExtension"8
B24@?0@"NSExtension"8^B16
@16@?0@"NSExtension"8
suggestedUserValue
suggestedUserType
suggestedUserUsageFrequency
<%@ %p: value=%@; type=%@; usageFrequency=%@>
v24@?0@"<NSCopying>"8@"NSArray"16
v24@?0@"<NSCopying>"8@"NSError"16
v16@?0@"<NSCopying>"8
com.apple.SafariFoundation.SFAppAutoFillOneTimeCodeProvider.internal
@"NSArray"16@?0@"SFSharedWebCredentialsDatabaseEntry"8
B16@?0@"WBSSavedAccount"8
NOT 
com.apple.developer.web-browser
v16@?0@"WBSSavedAccountMatchResult"8
@"WBSSavedAccount"16@?0@"WBSSavedAccountMatch"8
@"NSSet"24@?0@"WBSSavedAccount"8@"NSMutableSet"16
@"SFAutoFillOneTimeCode"16@?0@"WBSTOTPGenerator"8
q24@?0@"SFAutoFillOneTimeCode"8@"SFAutoFillOneTimeCode"16
v16@?0@"NSTimer"8
IMOneTimeCodeAccelerator
Class getIMOneTimeCodeAcceleratorClass(void)_block_invoke
SFAppAutoFillOneTimeCodeProvider.m
username
displayName
highLevelDomain
notes
protectionSpaces
passkeyCredentialID
passkeyCredential
passkeyCredentialRelyingPartyID
data
hasPasskey
safaricredential
B16@?0@"NSURLQueryItem"8
com.apple.passwordsharing.%f
com.apple.sharing.safaripasswordsharing
Failed to get a remote proxy object with error: %{public}@
Failed to open credential identities database with error %ld
Failed to create identities table with error %{public}@
Failed to create index on identities table with error %{public}@
Failed to delete an entry from identities table with error %{public}@
Failed to delete an item from identities table with error %{public}@
Failed to delete entries from identities table with error %{public}@
Failed to vacuum identities table with error %{public}@
Failed to insert an item into identities table with error %{public}@
Failed to update an item of identities table with error %{public}@
Attempted to submit credential with user name that is not a string, got type: %@
%{public}@
User completed passkey AutoFill with identifier %{private}@ for operation %{public}@, didAuthenticate: %{private}@
SecItemCopyMatching failed with error %d
Failed to create directory for identities database with error %{public}@
Skipping extension %{public}@ because it is missing the %{public}@ entitlement
Skipping extension %{public}@ because its containing app is missing the %{public}@ entitlement
Error: Multiple credential provider extensions are active. Which one will be used as the primary extension is undefined
Current verification code is domain-bound to %{private}@.
Invalid audit token for app. Domain validation is not possible.
App %{private}@ has web browser entitlement. Checking domain against website URL %{private}@.
Checking domain against associated domains for app %{private}@.
Domain-bound verification code is %@valid for app %{private}@.
Will return at least a code from Messages.
Attempting to return a TOTP generated code. classification:%d
App %{private}@ has web browser entitlement. Getting passwords for website URL %{private}@.
Fetching passwords for associated domains for app %{private}@.
Codes for app: %{private}@
Domain-bound verification code is %@valid for frame URLs from web browser: %{private}@
Received verification code from Messages: %{private}@
Current one time code message expired at %{public}@.
Timed out waiting for web credentials for app.
Stopping generator observer timer.
Failed to unarchive sharable password with error %{public}@
Failed to create sharable password from URL because it has incorrect scheme
Failed to create sharable password from URL because it's missing data or key reference
Failed to create private key with error: %{public}@
Failed to encrypt password data with error: %{public}@
Failed to get persistent reference to private key with status: %d
Failed to get private key with status %d
Failed to decrypt password data with error %{public}@
softlink:r:path:/System/Library/PrivateFrameworks/NanoPreferencesSync.framework/NanoPreferencesSync
softlink:r:path:/System/Library/PrivateFrameworks/IMCore.framework/IMCore
softlink:r:path:/System/Library/PrivateFrameworks/IMCore.framework/IMCore
SFCredentialProviderExtensionHelperProtocol
SFCredentialProviderExtensionHelperProxy
SFSafariCredential
NSSecureCoding
NSCoding
SFSharablePasswordReceiver
SFExternalCredentialIdentityStore
SFAutoFillHelperProtocol
NSObject
SFAutoFillHelperProxy
AccountSavingExtras
SFDomainAssociationUtilities
SFSafariCredentialStore
SFAppAutoFillPasskeyProvider
SFStrongPasswordGenerator
SFPasswordCredentialIdentity
SFSafariPasswordCredential
NSCopying
SFCredentialProviderExtensionState
SFSafariCreditCardStore
SFSharedWebCredentialsDatabaseEntry
SFAutoFillPasskeyIdentifier
SFExternalCredentialIdentityStoreManager
SFAutoFillFeatureManager
MCProfileConnectionObserver
SFAutoFillPasskey
SFAutoFillOneTimeCodeEmbeddedDomainPair
SFAutoFillOneTimeCode
SFSuggestedUserProvider
SFCredentialProviderExtensionManager
SFSuggestedUser
SafariFoundationExtras
TOTPGeneratorSnapshot
SFAppAutoFillOneTimeCodeProvider
_SFSharablePasswordEncryptionInformation
SFSharablePassword
setQueryItems:
encodeInt64:forKey:
beginLoadingQuirksFromDisk
sharedStore
rangeOfString:
lastModifiedDate
safari_boolForKey:
containingUrl
dateWithTimeIntervalSinceNow:
base64EncodedStringWithOptions:
initWithBlockForUpdates:
queryItems
objectsPassingTest:
synchronizeUserDefaultsDomain:keys:
saveNotesEntry:forSavedAccount:
weakToStrongObjectsMapTable
encodeBool:forKey:
containingAppForPlugInConnectedTo:
safari_autoFillQuirksDownloadDirectoryURL
lastInsertRowID
initWithBase64EncodedString:options:
dateByAddingTimeInterval:
queryItemWithName:value:
objectForKeyedSubscript:
weakObjectsPointerArray
effectiveBoolValueForSetting:
initWithServiceType:applicationIdentifier:domain:
generatedPasswordMatchingRequirements:
objectForKey:ofClass:
lastErrorMessage
date
safari_stringByRemovingWwwDotPrefix
weakObjectsHashTable
initWithArray:
setObject:forKeyedSubscript:
initWithServiceName:
keyEnumerator
consumeCodeWithGuid:
sharedConnection
reverseObjectEnumerator
firstObject
objectForKey:
attributes
safari_simplifiedSiteNameForCredentialLookup
substringFromIndex:
databaseQueue
propertyListWithData:options:format:error:
componentsWithURL:resolvingAgainstBaseURL:
setObject:forKey:
first
resume
UTF8String
objectForInfoDictionaryKey:
subarrayWithRange:
safari_setByApplyingBlock:
arrayWithObjects:count:
database
host
setInvalidationHandler:
reset
componentsWithString:
isEqualToString:
dataUsingEncoding:
safari_safariCoreBundle
arrayWithObjects:
stringWithUTF8String:
objectAtIndexedSubscript:
userVisibleDomain
setHost:
distantPast
isEqualToDate:
requirementsForPasswordRuleSet:respectingMinLength:maxLength:
componentsSeparatedByString:
setWithObjects:
fetch
safari_reduceObjectsWithInitialValue:usingBlock:
dataContainerURL
numberWithUnsignedInteger:
stringWithFormat:
passwordManagerURLWithDictionary:
userSelectedAutoFillPasskey:authenticatedLAContext:completionHandler:
arrayByAddingObjectsFromArray:
initWithOTPAuthURL:
componentsJoinedByString:
reportErrorWithCode:statement:error:
setWithObject:
numberWithInteger:
_exportPasskeyCredential
hasSuffix:
stringAtIndex:
safari_privacyPreservingDescription
passwordGenerationManager
userIsNeverSaveMarker
setClasses:forSelector:argumentIndex:ofReply:
array
_plugIn
isEphemeralMultiUser
replaceObjectAtIndex:withObject:
setWithArray:
currentHandler
archivedDataWithRootObject:requiringSecureCoding:error:
safari_mapObjectsUsingBlock:
hasPrefix:
userElection
dictionaryWithObjects:forKeys:count:
setUserElection:
extensionsWithMatchingAttributes:error:
safari_mapAndFilterObjectsUsingBlock:
hasPasswordsEligibleForAutoFill
nextObject
statementForQuery:error:
applicationIdentifier
serviceType
dictionary
initWithFirst:second:
codeForDate:
name
_mergeSavedAccountWithPasskey:toSavedAccountWithPassword:
hasPasskeysEligibleForAutoFill
startDateOfIntervalContainingDate:
credentialProviderExtensionManagerExtensionListDidChange:
safari_looksLikeEmailAddress
serviceSpecifier
appAutoFillOneTimeCodeProviderReceivedOneTimeCode:
removeObjectForKey:
setTolerance:
mutableCopy
safari_isCaseInsensitiveEqualToString:
allValues
exportableURLWithIssuer:username:
removeObject:
characterAtIndex:
interfaceWithProtocol:
handleFailureInFunction:file:lineNumber:description:
unarchivedObjectOfClass:fromData:error:
mergePasswordRuleSet:withPasswordRuleSet:
safari_highLevelDomainFromHost
defaultRequirementsForDomain:
parsePasswordRules:error:
allObjects
removeItemAtURL:error:
caseInsensitiveCompare:
int64AtIndex:
execute
sortedArrayUsingSelector:
safari_hasSameSiteAsURL:
addTimer:forMode:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
defaultManager
serviceDetailsWithServiceSpecifier:error:
tryToPerformTransactionInBlock:
setShouldAttemptToDownloadConfiguration:
insertObject:atIndex:
errorWithDomain:code:userInfo:
canSaveUser:password:forProtectionSpace:highLevelDomain:
mainRunLoop
getSavedAccountsMatchingCriteria:withSynchronousCompletionHandler:
totpGenerators
safari_hasSameOriginAsURL:
sortedArrayUsingComparator:
countForObject:
addPointer:
defaultCenter
initWithDatabase:query:error:
bundleIdentifier
entitlements
setScheme:
sortWithOptions:usingComparator:
second
safari_hasCaseInsensitiveSuffix:
countByEnumeratingWithState:objects:count:
addObserver:selector:name:object:
decodeObjectOfClasses:forKey:
initWithDatabase:query:
orderedSet
endMatchingExtensions:
boolValue
URLByAppendingPathComponent:isDirectory:
safari_hasCaseInsensitivePrefix:
scheme
sortUsingSelector:
orderedMatches
_saveUser:passkeyCredential:passkeyRelyingPartyID:
count
lowercaseString
decodeObjectOfClass:forKey:
initWithDatabase:
setRequestInterruptionBlock:
boolRestrictionForFeature:
remoteObjectProxyWithErrorHandler:
safari_flattenedArray
getPasskeysForRunningAssertionWithApplicationIdentifier:withCompletionHandler:
sites
decodeIntegerForKey:
operationUUID
addObjectsFromArray:
savedAccountsWithPasswords
setRequestCompletionBlock:
bindString:atParameterIndex:
localizedContainingName
safari_filterObjectsUsingBlock:
timerWithTimeInterval:repeats:block:
savedAccount
initWithURL:options:partialUsername:associatedDomainsManager:webFrameIdentifier:
decodeInt64ForKey:
addObject:
setRequestCancellationBlock:
encodeObject:forKey:
bindInt64:atParameterIndex:
safari_countOfString:
length
copy
timeIntervalSinceReferenceDate
initWithBundleIdentifier:allowPlaceholder:error:
initWithURL:allowPlaceholder:error:
_xpcConnection
decodeBoolForKey:
saveUser:password:forProtectionSpace:highLevelDomain:
beginMatchingExtensionsWithAttributes:completion:
encodeInteger:forKey:
URLForResource:withExtension:
setRemoteObjectInterface:
safari_containsObjectPassingTest:
lastObject
containsObject:
timeIntervalSinceNow
decodeArrayOfObjectsOfClass:forKey:
initWithBuiltInQuirksURL:downloadsDirectoryURL:resourceName:resourceVersion:updateDateDefaultsKey:updateInterval:
saveTOTPGenerator:forSavedAccount:
init
getCredentialProviderExtensionStateWithCompletion:
saveCredentialIdentities:completion:
removeCredentialIdentities:completion:
removeAllCredentialIdentitiesWithCompletion:
replaceCredentialIdentitiesWithIdentities:completion:
fetchCredentialIdentitiesMatchingDomains:completion:
removeCredentialIdentityStoreForApplication:completion:
dealloc
invalidate
_proxyObject
.cxx_destruct
_connection
_lock
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
initWithUser:password:site:creationDate:
initWithExternalCredential:
isExternal
description
isEqual:
hash
user
password
site
creationDate
externalCredential
_user
_password
_site
_creationDate
_externalCredential
T@"<SFSafariPasswordCredential>",R,N,V_externalCredential
T@"NSString",R,N,V_user
T@"NSString",R,N,V_password
T@"NSString",R,N,V_site
T@"NSDate",R,N,V_creationDate
external
TB,R,N,GisExternal
initWithURL:protectionType:
openAndCheckIntegrity:createIfNeeded:fallBackToMemoryStoreIfError:lockingPolicy:completionHandler:
initWithURL:
_databaseWillClose
_createFreshDatabaseSchema
_currentSchemaVersion
_removeCredentialIdentities:
_removeCredentialIdentity:
_removeAllCredentialIdentities
_vacuum
_saveCredentialIdentities:
_insertCredentialIdentity:
_updateCredentialIdentity:
fetchCredentialIdentitiesWithCompletion:
_credentialIdentityFromRow:
_fetchCredentialIdentitiesMatchingDomains:
_fetchCredentialIdentities
fetchStoreEmptyStateWithCompletion:
_fetchStoreIsEmpty
_statements
_queue
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
getAutomaticStrongPasswordForAppWithPasswordRules:confirmPasswordRules:completion:
getAutomaticStrongPasswordForAppWithPasswordRules:confirmPasswordRules:overrideApplicationIdentifier:completion:
getRemoteAutoFillAvailabilityWithCompletionHandler:
_getAutomaticStrongPasswordForAppWithPasswordRules:confirmPasswordRules:overrideApplicationIdentifier:completion:
hasAnyCredentialData
hasPasswordWithConflicts
saveToKeychain
savePasskeyAccountAndMergeIntoSavedPasswordAccountIfNeeded:
_usernameOrEmptyString
_hasPasswordData
_hasPasskeyData
_savePasswordAccount
_savePasskeyAccount
_saveNotesEntryForSavedAccount:
_saveOneTimeCodeForSavedAccount:
TB,R,N
domainByStrippingSubdomainWildcardPrefixIfNecessary:
domainIsProhibitedForSavingCredentials:
highLevelDomainHasSuiteOfAssociatedApps:
getAllApprovedSharedWebCredentialsEntries:
isAppAutoFillAvailable
isRemoteAutoFillAvailable
getCredentialsForAppWithAppID:completionHandler:
getCredentialsForAppWithAppID:websiteURL:completionHandler:
getCredentialsForAppWithAppID:externallyVerifiedAndApprovedSharedWebCredentialDomains:completionHandler:
getCredentialsForAppWithAppID:externallyVerifiedAndApprovedSharedWebCredentialDomains:websiteURL:completionHandler:
getAllCredentialsWithCompletionHandler:
_getCredentialsForAppWithApprovedAndValidSharedWebCredentialsDatabaseEntries:websiteURL:completionHandler:
_highLevelDomainsFromDatabaseEntries:
_credentialsMatchingSharedWebCredentialsDatabaseEntries:websiteURL:savedAccounts:
getCanSaveCredentialsWithAppID:websiteURL:completionHandler:
getAllowedActionForAppCredentialsWithAppID:websiteURL:user:password:completionHandler:
_getAllowedActionForAppCredentialsWithAppID:websiteURL:user:password:shouldAnalyzeExistingCredentials:completionHandler:
_bestDomainFromApprovedDomainsForWebCredentials:appLinks:otherServices:appID:allDomains:
bestDomainForAppID:completionHandler:
bestDomainForAutoFillFromDomains:appID:
_savedAccount:isRelatedToEntryHighLevelDomains:andWebsiteURL:
_sortCredentials:usingApprovedSharedWebCredentialsDatabaseEntries:
getApprovedSharedWebCredentialsEntriesForAppWithAppID:completionHandler:
getApprovedSharedWebCredentialsEntriesSortedByHighestValueForAppWithAppID:completionHandler:
_approvedAndValidSharedWebCredentialsDatabaseEntriesForAppWithAppID:completionHandler:
_approvedSharedWebCredentialsDatabaseEntriesForAppWithAppID:completionHandler:
_sharedWebCredentialsDatabaseEntriesForAppWithAppID:completionHandler:
_credentialProviderExtensionHelperProxy
_getExternalCredentialsMatchingSharedWebCredentialsDatabaseEntries:websiteURL:completion:
textSuggestionHeaderForExternalCredential:
titleForPasswordCredentialIdentity:formURL:
_getBundleIDForPrimaryCredentialProviderWithCompletionHandler:
getAvailablePasskeysForAppWithAuditToken:withCompletionHandler:
getAvailablePasskeysForApplicationIdentifier:completionHandler:
userSelectedPasskeyWithUserHandle:authenticatedLAContext:
userSelectedPasskey:authenticatedLAContext:
_proxy
generatedPasswordForAppWithAppID:associatedDomains:passwordRules:confirmPasswordRules:
_passwordGenerationManager
copyWithZone:
T@"NSString",R,C,N
T@"NSDate",R,N
initWithRowIdentifier:serviceIdentifier:serviceIdentifierType:externalRecordIdentifier:user:rank:
initWithServiceIdentifier:serviceIdentifierType:externalRecordIdentifier:user:rank:
initWithRowIdentifier:serviceIdentifier:serviceIdentifierType:externalRecordIdentifier:user:rank:owningExtensionState:
_domainWithoutWWWDot
compareForQuickTypeBar:
rowIdentifier
setRowIdentifier:
serviceIdentifierType
serviceIdentifier
externalRecordIdentifier
rank
owningExtensionState
setOwningExtensionState:
_rowIdentifier
_serviceIdentifierType
_serviceIdentifier
_externalRecordIdentifier
_rank
_owningExtensionState
Tq,N,V_rowIdentifier
T@"SFCredentialProviderExtensionState",&,N,V_owningExtensionState
Tq,R,N,V_serviceIdentifierType
T@"NSString",R,C,N,V_serviceIdentifier
T@"NSString",R,C,N,V_externalRecordIdentifier
T@"NSString",R,C,N,V_user
Tq,R,N,V_rank
credentialProviderExtensionWithDisabledState
initWithEnabledState:supportsIncrementalUpdates:
initWithEnabledState:supportsIncrementalUpdates:localizedDisplayName:credentialIdentityStoreIdentifier:
isEnabled
supportsIncrementalUpdates
localizedDisplayName
credentialIdentityStoreIdentifier
_enabled
_supportsIncrementalUpdates
_localizedDisplayName
_credentialIdentityStoreIdentifier
enabled
TB,R,N,GisEnabled,V_enabled
TB,R,N,V_supportsIncrementalUpdates
T@"NSString",R,C,N,V_localizedDisplayName
T@"SFExternalCredentialIdentityStoreIdentifier",R,C,N,V_credentialIdentityStoreIdentifier
savedCreditCardsWithError:
initWithServiceDetails:
_initWithDomain:appID:service:isApproved:
domain
appID
service
isApproved
_approved
_domain
_appID
_service
T@"NSString",R,C,N,V_domain
T@"NSString",R,C,N,V_appID
Tq,R,N,V_service
approved
TB,R,N,GisApproved,V_approved
initWithCoreIdentifier:
credentialID
coreIdentifier
_coreIdentifier
T@"WBSPublicKeyCredentialIdentifier",R,C,N,V_coreIdentifier
sharedManager
getCredentialIdentityStoreWithIdentifier:completion:
_credentialIdentityStoreWithIdentifier:
removeCredentialIdentityStoreWithIdentifier:completion:
registerObserver:
unregisterObserver:
sharedFeatureManager
_syncManager
autoFillPreferencesDidChange
defaultValueForPasswordAndCreditCardAutoFill
autoFillPreferencesDomain
profileConnectionDidReceiveRestrictionChangedNotification:userInfo:
profileConnectionDidReceivePasscodeChangedNotification:userInfo:
profileConnectionDidReceivePasscodePolicyChangedNotification:userInfo:
profileConnectionDidReceiveProfileListChangedNotification:userInfo:
profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:
profileConnectionDidReceiveDefaultsChangedNotification:userInfo:
profileConnectionDidReceiveAppWhitelistChangedNotification:userInfo:
T@"SFAutoFillFeatureManager",R
Tr^{__CFString=},R
shouldAutoFillPasswordsFromKeychain
setShouldAutoFillPasswordsFromKeychain:
shouldAutoFillPasswords
_refreshCachedAutoFillRestrictionValues
_cachedAutoFillRestrictionValue
_cachedPasswordAutoFillEffectiveValue
TB,N
preferredCredentialProviderForSaving
T@"NSString",&,D,N
initWithCoreAutoFillPasskey:
username
relyingPartyIdentifier
identifier
userHandle
corePasskey
_corePasskey
T@"WBSAutoFillPasskey",R,C,N,V_corePasskey
T@"NSString",R,N
T@"SFAutoFillPasskeyIdentifier",R,C,N
T@"NSData",R,N
setDomain:
strict
setStrict:
_strict
T@"NSString",C,N,V_domain
TB,N,V_strict
initWithIMCoreDictionary:
initWithTOTPGenerator:user:highLevelDomain:
code
timestamp
detectedCode
matchDomainWithURL:
matchBoundDomainsWithFrameURLs:
_matchBoundDomainAndEmbeddedDomainWithFrameURLs:
_matchBoundDomainAndEmbeddedDomainsWithFrameURLs:
_matchURL:withBoundDomainURL:strict:
_domainBoundTopLevelURL
_domainBoundEmbeddedURL
_secureURLForDomain:
_stringForSource:
_embeddedDomainArrayFromIMCoreEmbeddedDomains:
localizedTitleForContext:
localizedSubtitleForContext:
source
machineReadableCode
displayCode
GUID
handle
domainStrictMatch
embeddedDomain
embeddedDomains
totpGenerator
_timestamp
_detectedCode
_totpGenerator
_domainStrictMatch
_source
_machineReadableCode
_displayCode
_GUID
_handle
_embeddedDomain
_embeddedDomains
T@"NSURL",R,C,N
T@"WBSTOTPGenerator",R,N,V_totpGenerator
Tq,R,N,V_source
T@"NSString",R,C,N,V_machineReadableCode
T@"NSString",R,C,N,V_displayCode
T@"NSString",R,C,N,V_GUID
T@"NSString",R,C,N,V_handle
TB,R,N,V_domainStrictMatch
T@"NSString",R,C,N,V_embeddedDomain
T@"NSArray",R,C,N,V_embeddedDomains
_accountStoreChangedNotification:
compare:
sharedProvider
_allCachedSuggestedUsersWithType:
_cachedSuggestedUsersWithType:matchingText:
suggestedUsersOfType:completionHandler:
suggestedUsersOfType:matchingText:completionHandler:
_getSuggestedUsersFromSavedAccounts:suggestedEmails:suggestedNonEmails:
_suggestedEmails
_suggestedNonEmails
T@"SFCredentialProviderExtensionManager",R
getPrimaryExtensionWithCompletion:
_beginExtensionDiscovery
_endExtensionDiscovery
_updateExtensions:
_notifyObservers:
extensions
extensionsSync
_extensions
primaryExtension
primaryExtensionSync
addObserver:
removeObserver:
extensionIsEnabled:
setExtension:isEnabled:
displayNameForExtension:
shouldShowConfigurationUIForEnablingExtension:
_extensionMatchingToken
_observers
_errorEncounteredDuringLastExtensionDiscovery
_observerLock
T@"NSSet",R,N
T@"NSExtension",R,N
suggestedUserWithValue:type:
initWithValue:type:
value
type
usageFrequency
setUsageFrequency:
_value
_type
_usageFrequency
Tq,N,V_usageFrequency
T@"NSString",R,C,N,V_value
Tq,R,N,V_type
sf_bundleIdentifierForContainingApp
_sf_addHandlerForRequestIdentifier:withBlock:
startDateOfInterval
setStartDateOfInterval:
oneTimeCode
setOneTimeCode:
_startDateOfInterval
_oneTimeCode
T@"NSDate",&,N,V_startDateOfInterval
T@"SFAutoFillOneTimeCode",&,N,V_oneTimeCode
oneTimeCodeProvider:didUpdateOneTimeCode:
oneTimeCodeProviderReceivedCode:
initWithMessagesOneTimeCodeSupport:
hasOneTimeCode
hasOneTimeCodeForAppWithAuditToken:
currentOneTimeCodeWithAuditToken:website:
currentOneTimeCodesWithAuditToken:website:usernameHint:fieldClassification:
currentOneTimeCodesForWebBrowserWithWebsiteFrameURLs:fieldClassification:
consumeCurrentOneTimeCode
consumeMessagesOneTimeCodeWithGUID:
consumeOneTimeCode:
addObserver:forOneTimeCode:
removeObserverForOneTimeCode:
_processOneTimeCodeFromMessages:
_validateCurrentOneTimeCode
_validateURL:withURLFromOriginBoundCode:
_appWithAuditTokenIsWebBrowser:
_secureURLWithDomain:
_savedAccountsWithPasswordsForURL:
_sortedOneTimeCodesFromSavedAccounts:
_associatedDomainEntriesForAppWithIdentifier:
_startGeneratorTimer
_stopGeneratorTimer
delegate
setDelegate:
associatedDomainsManager
setAssociatedDomainsManager:
_oneTimeCodeAccelerator
_internalQueue
_currentOneTimeCodeFromMessages
_generatorObservers
_generatorTimer
_delegate
_associatedDomainsManager
T@"<SFAppAutoFillOneTimeCodeProviderDelegate>",W,N,V_delegate
T@"WBSAutoFillAssociatedDomainsManager",&,N,V_associatedDomainsManager
initWithEncryptedPasswordData:encryptionKeyReference:
encryptedPasswordData
encryptionKeyReference
_encryptedPasswordData
_encryptionKeyReference
T@"NSData",R,C,N,V_encryptedPasswordData
T@"NSData",R,C,N,V_encryptionKeyReference
sharablePasswordFromEncryptedData:encryptionKeyReference:
sharablePasswordFromData:
sharablePasswordFromURL:
safariCredentialURLHasPasskey:
_decryptedDataForEncryptedData:encryptionKeyReference:
initWithUsername:password:displayName:highLevelDomain:passkeyRelyingPartyID:protectionSpaces:
initWithSavedPassword:
passwordManagerURL
urlRepresentationForAirDrop
_queryItemsForAirDropRepresentationWithEncryptionInformation:
_encryptionInformationWithNewKey
displayName
highLevelDomain
otpAuthURL
notesEntry
protectionSpaces
passkeyCredentialID
passkeyCredential
passkeyRelyingPartyID
_username
_displayName
_highLevelDomain
_otpAuthURL
_notesEntry
_protectionSpaces
_passkeyCredentialID
_passkeyCredential
_passkeyRelyingPartyID
T@"NSString",R,C,N,V_username
T@"NSString",R,C,N,V_password
T@"NSString",R,C,N,V_displayName
T@"NSString",R,C,N,V_highLevelDomain
T@"NSURL",R,C,N,V_otpAuthURL
T@"NSString",R,C,N,V_notesEntry
T@"NSArray",R,C,N,V_protectionSpaces
T@"NSURL",R,N
T@"NSData",R,C,N,V_passkeyCredentialID
T@"NSData",R,C,N,V_passkeyCredential
T@"NSString",R,C,N,V_passkeyRelyingPartyID
v24@0:8@?16
v32@0:8@16@?24
v24@0:8@?<v@?@"SFCredentialProviderExtensionState">16
v32@0:8@"NSArray"16@?<v@?B@"NSError">24
v24@0:8@?<v@?B@"NSError">16
v32@0:8@"NSArray"16@?<v@?@"SFCredentialProviderExtensionState"@"NSArray">24
v32@0:8@"NSString"16@?<v@?B@"NSError">24
@16@0:8
v16@0:8
@"NSXPCConnection"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
B16@0:8
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@48@0:8@16@24@32@40
B24@0:8@16
Q16@0:8
@"NSString"
@"NSDate"
@"<SFSafariPasswordCredential>"
@32@0:8@16q24
v44@0:8B16B20B24q28@?36
i16@0:8
i24@0:8@16
@"WBSSQLiteStatementCache"
@"NSObject<OS_dispatch_queue>"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v40@0:8@16@24@?32
v48@0:8@16@24@32@?40
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSString"@"NSError">32
v48@0:8@"NSString"16@"NSString"24@"NSString"32@?<v@?@"NSString"@"NSError">40
@40@0:8@16@24@32
v56@0:8@16@24@32@40@?48
v60@0:8@16@24@32@40B48@?52
@56@0:8@16@24@32@40^@48
@32@0:8@16@24
B40@0:8@16@24@32
v32@0:8@16@24
v56@0:8{?=[8I]}16@?48
@"WBSAuthenticationServicesAgentProxy"
@"WBSPasswordGenerationManager"
@24@0:8^{_NSZone=}16
@"NSDate"16@0:8
@64@0:8q16@24q32@40@48q56
@56@0:8@16q24@32@40q48
@72@0:8q16@24q32@40@48q56@64
q24@0:8@16
q16@0:8
v24@0:8q16
@"SFCredentialProviderExtensionState"
@24@0:8B16B20
@40@0:8B16B20@24@32
@"SFExternalCredentialIdentityStoreIdentifier"
@24@0:8^@16
@44@0:8@16@24q32B40
@"WBSPublicKeyCredentialIdentifier"
r^{__CFString=}16@0:8
v32@0:8@"MCProfileConnection"16@"NSDictionary"24
v20@0:8B16
@"WBSAutoFillPasskey"
q36@0:8@16@24B32
@24@0:8q16
@"WBSTOTPGenerator"
@"NSArray"
@32@0:8q16@24
v32@0:8q16@?24
v40@0:8q16@24@?32
v40@0:8@16^@24^@32
v28@0:8@16B24
@"NSSet"
@"NSMutableOrderedSet"
{os_unfair_recursive_lock_s="ourl_lock"{os_unfair_lock_s="_os_unfair_lock_opaque"I}"ourl_count"I}
@"SFAutoFillOneTimeCode"
@20@0:8B16
B48@0:8{?=[8I]}16
@56@0:8{?=[8I]}16@48
@72@0:8{?=[8I]}16@48@56q64
B32@0:8@16@24
@"IMOneTimeCodeAccelerator"
@"NSHashTable"
@"NSMapTable"
@"NSTimer"
@"<SFAppAutoFillOneTimeCodeProviderDelegate>"
@"WBSAutoFillAssociatedDomainsManager"
@"NSData"
@64@0:8@16@24@32@40@48@56
@"NSURL"
