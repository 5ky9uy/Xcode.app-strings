com.apple.private.social.facebook.token
com.apple.private.social.facebook.profile
com.apple.private.social.facebook.like
com.apple.private.social.facebook.upload
getCompletedUploadInfoDictsAndClear
title
FB_UPLOAD_BULLETIN_TITLE
Localizable
message
FB_UPLOAD_BULLETIN_MESSAGE_VIDEO
Adding completed upload info %@
SLFacebookUploadCompletionAvailable
We now have %d uploads
Returning call from handler
TestData
TestKey
415566727427273|564eg4e5he923dh3e7f236317b777430
PostUpload delegate for post upload %@ called with success:%@
uploadPost request on behalf of pid %@
Post source identifier is %@
Client does not have proper entitlements to post or access upload information.
Cannot post, could not obtain a valid account credential
Cannot send post, unable to fetch a valid account credential
com.apple.sociald.facebookservice
Initializing new post upload with post %@
Suppressing alerts: %@
Calling client post transfer handler with success
Sending startUpload to post upload
Client is asking for upload status. We have %d uploads total
Returning %d upload statuses to client
Client does not have proper entitlements to like/unlike items. This will be a hard error soon.
v16@?0@"NSError"8
v24@?0@"NSDictionary"8@"NSError"16
Client does not have proper entitlements to access profile
https://graph.facebook.com/me/picture
picture
image/jpeg
v32@?0@8@"NSURLResponse"16@"NSError"24
Client does not have proper entitlements to revoke tokens
auth.expireAppSessionForSSOProxy
app_id
Client does not have proper entitlements to revoke tokens. This will be a hard error soon.
auth.invalidateSSOProxySessions
No master token to sign the invalidation request!
Client does not have proper entitlements to get facebook token. This will be a hard error soon.
tokenSecretForEntitledClientWithHandler requested
Trying to obtain privileged account for FBDSession
Accounts array is %@
v8@?0
Trying to play post sound
Returning completed uploads %@
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
accountStore
T@"ACAccountStore",R
FBDPostUpload: The response indicates an error
Parameters:%@. 
HTTP status %i
FBDPostUpload: Batch request send error with nil token
FBDPostUpload: The token is no longer valid
FBDPostUpload: No-auth error - asking for retry
Posting Error: %@.
Response has %lu failed request ids
Current post counts %lu images
%lu images are eligible to be re-uploaded.
Quiet retry failed count: %lu. Reached the limit of %lu. Prompting notification to user for approval befory retrying.
Updating current post with new images data (%lu) to upload.
FBDPostUpload: Upload success
FBDPostUpload: Notifying delegates
FBDPostUpload: Cannot notify delegate - it's nil or doesn't respond to selector
FBDPostUpload: Requesting credential renewal
FB_POST_RENEW_CREDENTIALS_REASON
v24@?0q8@"NSError"16
FBDPostUpload: Credential renewal returned
Adding image post %@ to upload queue
Adding video post %@ to upload queue
Post separation not needed
Cancel requested for post %@
_processUploadQueue
Cannot process upload queue, returned post is nil
Image asset URL's present, fetching assets
v24@?0@"NSArray"8@"NSError"16
Video asset URL's present, fetching assets
v24@?0@"NSData"8@"NSError"16
No asset urls, starting post
Asset data received with error %@
Video asset data received with error %@
FBDPostUpload: startUpload
me/photos
me/links
graph-video.facebook.com
me/videos
me/feed
%@/photos
FBDPostUpload: Upload path is %@
Performing request
Connection %p failed with error: %@. Current connection: %p
Connection %p finished loading. Current connection: %p
FB_FAILED_TITLE
FB_FAILED_CHECKPOINTED_MESSAGE
FB_FAILED_SAFARI_BUTTON
FB_FAILED_CANCEL_BUTTON
The user canceled the attempt clear the checkpoint
Invalid count passed.
FB_ITEMS_FAILED_TITLE
FB_FAILED_BODY_ITEM_FAILED_FORMAT
FB_FAILED_BODY_ITEMS_FAILED_FORMAT
FB_FAILED_RETRY_BUTTON
The user request upload retry
FB_FAILED_BODY_GENERIC_FORMAT
The user cancelled the request to retry upload
postIdentifier
T@"NSString",R,V_postIdentifier
post
T@"SLFacebookPost",&,V_post
sourceAppIdentifier
T@"NSString",&,V_sourceAppIdentifier
account
T@"ACAccount",&,V_account
delegate
T@"<FBDPostUploadDelegate><NSObject>",&,V_delegate
postCompletion
T@?,C,V_postCompletion
suppressAlerts
TB,V_suppressAlerts
totalBytes
TQ,R,V_totalBytes
transferredBytes
TQ,R,V_transferredBytes
postContainsVideo
TB,R
privacyParameterString is %@
privacy
Adding link  to request: %@
link
Adding place %@ to request
place
application_id
tags
file
video/quicktime
video.mov
Adding multipart data with length %u to to request
source
image-%lu.jpg
Adding multipart data with length %u to to request at index %u
The guaranteed request is being attempted.
The guaranteed request received this response: %@
v32@?0@"NSData"8@"NSHTTPURLResponse"16@"NSError"24
request
T@"SLFacebookRequest",&,N,V_request
set sharedURLCache memoryCapacity to %d and diskCapacity to %d
init
copy
count
endTransaction
_defaultUploadInfoDict
_addCompletedUploadWithUploadInfo:
bundleForClass:
localizedStringForKey:value:table:
dictionaryWithObjects:forKeys:count:
beginTransaction
addObject:
removeObject:
countByEnumeratingWithState:objects:count:
postIdentifier
isEqualToString:
dictionaryWithObject:forKey:
_playPostSound
postContainsVideo
removeUpload:
postCompletion
numberWithBool:
_uploadPost:withSourceAppIdentifier:suppressAlerts:trackPostStatus:completion:
intValue
boolValue
clientHasEntitlement:
errorWithDomain:code:userInfo:
_privilegedAccount
credential
initWithPost:account:
setDelegate:
setSuppressAlerts:
setSourceAppIdentifier:
addUpload:
setPostCompletion:
startUpload
post
videoAssetURLs
videoData
setUploadType:
setUploadID:
totalBytes
setTotalBytes:
transferredBytes
setTransferredBytes:
uploadWithIdentifier:
cancel
likeURL:account:completion:
unlikeURL:account:completion:
fetchLikeStatusForURL:flags:account:completion:
URLWithString:
initWithURL:parameters:requestMethod:
setAccount:
addMultipartData:withName:type:filename:
encodeableError
performRequestWithHandler:
URLForFacebookRESTMethod:
setParameterValue:forKey:
oauthToken
setAccessToken:
initWithRequest:
perform
_tokenSecret
accountStore
accountTypeWithAccountTypeIdentifier:
accountsWithAccountType:
objectAtIndex:
playToneAndVibrationForType:
_getCompletedUploadInfoDictsAndClear
_addCompletedUpload:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
completedUploadsWithHandler:
doTestCallWithDict:withHandler:
revokeAccessTokenForAppWithID:
revokeAllAccessTokensForDeviceWithCompletion:
tokenSecretForEntitledClientWithHandler:
uploadPost:withXPCTransferCompletion:
uploadPost:forPID:withXPCTransferCompletion:
uploadPost:suppressAlerts:withPostCompletion:
uploadsInProgress:
cancelUploadWithIdentifier:
likeURL:completion:
unlikeURL:completion:
fetchLikeStatusForURL:flags:completion:
uploadProfileImageData:withCompletion:
injectCompletedUploadWithCompletion:
finishedPostUpload:withSuccess:
.cxx_destruct
_accountStore
_activeAccountIdentifier
length
UTF8String
stringWithUTF8String:
setPost:
UUID
UUIDString
_releasePowerAssertion
dealloc
hasError
responseParameters
httpErrorCode
hasBadTokenError
hasMissingTokenOrAppID
_requestCredentialRenewal
_notifyDelegateWithSuccess:
checkpointURL
_directUserToCheckpointURL:
_handleRetry
failedRequestIDs
imageData
initWithCapacity:
integerValue
_promptRetryNotificationWithFailedRequestsCountNotice:
setImageData:
_handleQuietRetry
_uploadQueueEmpty
_processUploadQueue
delegate
account
renewCredentialsForAccount:reason:completion:
imageAssetURLs
setVideoAssetURLs:
setVideoData:
setImageAssetURLs:
_obtainPowerAssertion
objectAtIndexedSubscript:
removeObjectAtIndex:
_nextPost
assetDataProvider
_post:didReceiveAssetImageData:error:
fetchImageDataForAssetsURLs:maxByteSize:completion:
videoExportPreset
_post:didReceiveAssetVideoData:error:
_fetchDataForVideoURL:exportPreset:completion:
_startUploadWithPost:
isAssetURL
exportDataFromVideoAssetURL:toFileURL:exportPreset:completion:
mappedDataFromVideoAtFileURL:completion:
addVideoData:
link
album
identifier
stringWithFormat:
URLForFacebookGraphAPIWithDomain:path:
initWithServiceType:URL:parameters:requestMethod:
sourceAppIdentifier
addRequest:
place
preparedURLRequest
initWithRequest:delegate:startImmediately:
mainRunLoop
scheduleInRunLoop:forMode:
start
dataWithData:
appendData:
initWithResponseData:urlResponse:
handleResponse:withError:didRetry:
initWithData:encoding:
suppressAlerts
facebookIconURL
defaultWorkspace
openURL:
insertObject:atIndex:
connection:didFailWithError:
connectionShouldUseCredentialStorage:
connection:willSendRequestForAuthenticationChallenge:
connection:canAuthenticateAgainstProtectionSpace:
connection:didReceiveAuthenticationChallenge:
connection:didCancelAuthenticationChallenge:
connection:willSendRequest:redirectResponse:
connection:didReceiveResponse:
connection:didReceiveData:
connection:needNewBodyStream:
connection:didSendBodyData:totalBytesWritten:totalBytesExpectedToWrite:
connection:willCacheResponse:
connectionDidFinishLoading:
_uploadQueue
_request
_connection
_response
_responseData
_connectionError
_totalBytes
_transferredBytes
_canceled
_currentPost
_quietRetryFailedRequestsCount
_assetDataProvider
_powerAssertion
_suppressAlerts
_postIdentifier
_post
_sourceAppIdentifier
_account
_delegate
_postCompletion
privacySetting
parametersFormValueString
absoluteString
text
taggedUserIDs
componentsJoinedByString:
JSONObjectWithData:options:error:
request
setRequest:
sharedURLCache
setMemoryCapacity:
setDiskCapacity:
memoryCapacity
diskCapacity
initWithExportedSessionClass:serviceProtocol:
setServiceName:
FBDSession
SLFacebookRemoteSessionProtocol
SLRemoteUploadCompletion
NSObject
FBDPostUploadDelegate
FBDPostUpload
NSURLConnectionDataDelegate
NSURLConnectionDelegate
FBDGuaranteedRequest
@16@0:8
v24@0:8@16
@24@0:8@16
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@?16
v24@0:8@?<v@?@"NSArray">16
v32@0:8@16@?24
v40@0:8@16@24@?32
v32@0:8@"NSDictionary"16@?<v@?@"NSDictionary"@"NSError">24
v24@0:8@"NSString"16
v24@0:8@?<v@?@"NSNumber"@"NSError">16
v24@0:8@?<v@?@"NSString"@"NSError">16
v32@0:8@"SLFacebookPost"16@?<v@?@"NSNumber"@"NSError">24
v40@0:8@"SLFacebookPost"16@"NSNumber"24@?<v@?@"NSNumber"@"NSError">32
v32@0:8@"NSURL"16@?<v@?@@"NSError">24
v40@0:8@"NSURL"16@"NSNumber"24@?<v@?@"NSDictionary"@"NSError">32
v32@0:8@"NSData"16@?<v@?@"NSError">24
v24@0:8@?<v@?>16
v28@0:8@16B24
v28@0:8@"FBDPostUpload"16B24
v48@0:8@16@24B32B36@?40
v16@0:8
@"ACAccountStore"
@"NSString"
v32@0:8@16@24
B32@0:8@16@24
v32@0:8@"NSURLConnection"16@"NSError"24
B24@0:8@"NSURLConnection"16
v32@0:8@"NSURLConnection"16@"NSURLAuthenticationChallenge"24
B32@0:8@"NSURLConnection"16@"NSURLProtectionSpace"24
@40@0:8@16@24@32
@32@0:8@16@24
v48@0:8@16q24q32q40
@"NSURLRequest"40@0:8@"NSURLConnection"16@"NSURLRequest"24@"NSURLResponse"32
v32@0:8@"NSURLConnection"16@"NSURLResponse"24
v32@0:8@"NSURLConnection"16@"NSData"24
@"NSInputStream"32@0:8@"NSURLConnection"16@"NSURLRequest"24
v48@0:8@"NSURLConnection"16q24q32q40
@"NSCachedURLResponse"32@0:8@"NSURLConnection"16@"NSCachedURLResponse"24
v24@0:8@"NSURLConnection"16
v40@0:8@16@24^B32
v20@0:8B16
v40@0:8@16@24@32
B24@0:8Q16
@?16@0:8
@"NSMutableArray"
@"NSURLRequest"
@"NSURLConnection"
@"NSHTTPURLResponse"
@"NSMutableData"
@"NSError"
@"SLFacebookPost"
@"SLAssetDataProvider"
@"ACAccount"
@"<FBDPostUploadDelegate><NSObject>"
@"SLFacebookRequest"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.SystemConfiguration.SCPreferences-write-access</key>
<array>
<string>com.apple.twitter.plist</string>
</array>
<key>com.apple.accounts.applicationidfrompid</key>
<true/>
<key>com.apple.locationd.effective_bundle</key>
<true/>
<key>com.apple.locationd.prompt_behavior</key>
<true/>
<key>com.apple.locationd.status</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServicePhotos</string>
</array>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
</array>
<key>seatbelt-profiles</key>
<array>
<string>social-services</string>
</array>
</dict>
</plist>
