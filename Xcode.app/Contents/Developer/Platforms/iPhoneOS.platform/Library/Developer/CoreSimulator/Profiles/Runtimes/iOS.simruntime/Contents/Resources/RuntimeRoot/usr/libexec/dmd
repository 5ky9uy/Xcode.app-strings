@(#)PROGRAM:dmd  PROJECT:DeviceManagement-112
dmf_installSynthesizedProfileRequestWithAssetProviders:error:
dmf_removeSynthesizedProfileRequestWithError:
setWithObject:
sharedController
VPNUUIDString
setVPNUUIDString:forBundleIdentifier:error:
contentFilterUUIDString
setContentFilterUUIDString:forBundleIdentifier:error:
DNSProxyUUIDString
setDNSProxyUUIDString:forBundleIdentifier:error:
endOperationWithResultObject:
endOperationWithError:
whitelistedClassesForRequest
requiredEntitlements
runWithRequest:bundleIdentifier:
synthesizeProfileOutUUIDs:withOldUUIDs:assetProviders:
setProfile:
filterQueryForScope
dmfKeyFromDeviceInfoKey:
setPropertyKeys:
valuesByPropertyKey
errorsByPropertyKey
deviceInfoKeyFromDMFKey:
payloadQueries
minusSet:
addRMDSpecificResultsToDictionary:errors:
deviceInfoDeviceChannelKeys
deviceInfoUserChannelKeys
intersectSet:
deviceInfoSupervisedKeys
deviceInfoRMDKeys
payloadMessage
payloadPhoneNumber
setPhoneNumber:
fontURL
dataWithContentsOfURL:
init
setWithObjects:
decodeObjectOfClasses:forKey:
encodeObject:forKey:
supportsSecureCoding
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
encodeWithCoder:
initWithCoder:
TB,R
urlRepresentation
dataRepresentation
stringRepresentation
numberRepresentation
setFontURL:
.cxx_destruct
_fontURL
T@"NSURL",C,N,V_fontURL
resolver
resolveAssetWithContext:
fontDeclaration
declarationIdentifier
declarationServerHash
stringWithFormat:
payloadDescriptor
payloadReference
isExecuting
dmd_userFontDatabaseDirectoryURL
defaultManager
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
assetIdentifier
UUID
URLByAppendingPathComponent:
copyItemAtURL:toURL:error:
assetResolutionDidSucceedWithAssetURL:
assetResolutionFailedWithError:
assetDescriptor
assetReference
T@"NSString",R,C,N
T@"CEMAssetBaseDescriptor",R,C,N
T@"CEMAssetBaseReference",R,C,N
initWithFontDeclaration:resolver:
isAsynchronous
main
setFontDeclaration:
setResolver:
_fontDeclaration
_resolver
T@"CEMFontDeclaration",&,N,V_fontDeclaration
T@"<DMDRemoteAssetResolver>",&,N,V_resolver
installMetadata
path
fileExistsAtPath:
removeItemAtURL:error:
initWithFontDeclaration:installMetadata:
setInstallMetadata:
_installMetadata
T@"CEMFontAssetInstallMetadata",&,N,V_installMetadata
dmf_installAssetOperationWithReferenceResolver:error:
dmf_removeAssetOperationWithInstallMetadata:error:
imageURL
setImageURL:
_imageURL
T@"NSURL",C,N,V_imageURL
imageDeclaration
dmd_userImageDatabaseDirectoryURL
initWithImageDeclaration:resolver:
setImageDeclaration:
_imageDeclaration
T@"CEMImageDeclaration",&,N,V_imageDeclaration
initWithImageDeclaration:installMetadata:
T@"CEMImageAssetInstallMetadata",&,N,V_installMetadata
payloadEcho
payloadReturnStatus
payloadMode
payloadHostnames
payloadRatingRegion
accountTypeWithAccountTypeIdentifier:
accountsWithAccountType:
countByEnumeratingWithState:objects:count:
accountProperties
objectForKeyedSubscript:
boolValue
primaryAppleID
_extractComponentsFromBudgetPredicate:
_extractComponentsFromCompositeBudgetPredicate:
usageBudget
setRemainingTime:
usageMonitor
checkStatusOfBudgets:error:
stopMonitoringBudgets:completionHandler:
payloadMonitor
payloadIdentifiersVersion2
payloadTimeBudget
payloadDays
payloadSeconds
_budgetDays:duration:calendar:schedule:
initWithCategories:applications:webDomains:schedule:calendarIdentifier:identifier:
setUsageBudget:
payloadMonitors
payloadApps
payloadCategoriesVersion2
payloadCategories
payloadWebSites
startMonitoringBudgets:darwinNotificationName:notificationTimes:error:
remainingTime
setUsageMonitor:
_remainingTime
_usageBudget
_usageMonitor
T@"NSNumber",&,N,V_remainingTime
T@"USBudget",&,N,V_usageBudget
T@"USUsageMonitor",&,N,V_usageMonitor
initWithDelegate:uniqueIdentifier:predicate:
_extractComponentsFromPredicate:
_registerPredicateObserver
calendarIdentifier
calendarForIdentifier:
startDay
startHour
startMinute
startSecond
_nextDateAfter:matchingWeekday:hour:minute:second:inCalendar:
endDay
endHour
endMinute
endSecond
expiredNotificationTimes
removeAllObjects
notificationTimes
doubleValue
dateByAddingTimeInterval:
compare:
addObject:
setLastPredicateEvaluationValue:
predicateType
uniqueIdentifier
lastPredicateEvaluationValue
numberWithBool:
scheduledAlarmIdentifiers
UTF8String
invalidate
metadata
sortedArrayUsingSelector:
count
dictionaryWithObjects:forKeys:count:
setObject:forKeyedSubscript:
payloadCalendarIdentifier
setCalendarIdentifier:
payloadNotificationTimes
setWithArray:
setNotificationTimes:
setFormatOptions:
timeZone
setTimeZone:
payloadStartTime
dateFromString:
components:fromDate:
hour
setStartHour:
minute
setStartMinute:
second
setStartSecond:
payloadEndTime
setEndHour:
setEndMinute:
setEndSecond:
payloadStartDay
integerValue
setStartDay:
payloadEndDay
setEndDay:
maximumRangeOfUnit:
_datesForNextCurfewBoundary
timeIntervalSince1970
copy
setWeekday:
setHour:
setMinute:
setSecond:
nextDateAfterDate:matchingComponents:options:
initWithDelegate:uniqueIdentifier:curfewPredicate:
evaluatePredicateWithError:
updateObserverRegistration
setExpiredNotificationTimes:
setScheduledAlarmIdentifiers:
_calendarIdentifier
_notificationTimes
_expiredNotificationTimes
_scheduledAlarmIdentifiers
_startDay
_startHour
_startMinute
_startSecond
_endDay
_endHour
_endMinute
_endSecond
T@"NSString",C,N,V_calendarIdentifier
T@"NSSet",&,N,V_notificationTimes
T@"NSMutableArray",&,N,V_expiredNotificationTimes
T@"NSMutableArray",&,N,V_scheduledAlarmIdentifiers
Tq,N,V_startDay
Tq,N,V_startHour
Tq,N,V_startMinute
Tq,N,V_startSecond
Tq,N,V_endDay
Tq,N,V_endHour
Tq,N,V_endMinute
Tq,N,V_endSecond
aa_primaryAppleAccount
aa_personID
DSID
payloadDSID
setDSID:
_DSID
T@"NSString",C,N,V_DSID
endDate
payloadDateTime
setEndDate:
_endDate
T@"NSDate",&,N,V_endDate
status
outgoingPayloadMetadataReferences
identifier
serverHash
installed
sortUsingComparator:
allValues
mutableCopy
predicatePayloadMetadata
addEntriesFromDictionary:
isEqualToString:
setStateDictionary:
arrayWithObjects:count:
fetchRequest
predicateWithFormat:
setPredicate:
fetchRequestForActivationsFromOrganizationWithIdentifier:
updateStateDictionaryIfNeeded
T@"NSDictionary",&,D,N
subPredicateObservers
arrayWithCapacity:
reportActivationPredicateObserverDidTrigger
initWithDelegate:uniqueIdentifier:subPredicateObservers:predicate:
_subPredicateObservers
T@"NSArray",R,C,N,V_subPredicateObservers
subPredicateObserver
setSubPredicateObserver:
_subPredicateObserver
T@"DMDActivationPredicateObserver",&,N,V_subPredicateObserver
calendarWithIdentifier:
_lastPredicateEvaluationValue
_predicateType
_uniqueIdentifier
T@"<DMDActivationPredicateObserverDelegate>",W,N,V_delegate
TB,N,V_lastPredicateEvaluationValue
T@"NSString",R,C,N,V_predicateType
T@"NSString",R,C,N,V_uniqueIdentifier
activationPredicateObserversByIdentifier
_predicateObserverForPredicate:withUniqueIdentifier:
_reportChangeToObserver:
delegate
activationPredicateObserverManager:didObserveChangeForPredicateWithIdentifier:
enumerateKeysAndObjectsUsingBlock:
initWithDelegate:uniqueIdentifier:budgetPredicate:
initWithDelegate:uniqueIdentifier:compositeBudgetPredicate:
initWithDelegate:uniqueIdentifier:oneTimePredicate:
initWithDelegate:uniqueIdentifier:iCloudAccountPredicate:
payloadPredicate
initWithDelegate:uniqueIdentifier:subPredicateObserver:predicate:
payloadPredicates
_subPredicateObserversForCompoundSubPredicates:withUniqueIdentifier:
activationPredicateObserverForIdentifier:
_updateAllActivationPredicateObserverRegistrations
activationPredicateObserverDidTrigger:
handleAlarmWithIdentifier:
handleDistributedNotificationWithName:userInfo:
handleNotifyMatchingNotificationWithName:
handleManagedEffectiveSettingsChangeInGroup:
alarms
distributedNotificationNames
notifyMatchingNotifications
managedSettingsGroups
TB,R,N
T@"NSArray",R,N
addActivationPredicateObserverForPredicate:withUniqueIdentifier:
removeActivationPredicateObserverWithUniqueIdentifier:
setDelegate:
setActivationPredicateObserversByIdentifier:
_delegate
_activationPredicateObserversByIdentifier
T@"NSMutableDictionary",&,N,V_activationPredicateObserversByIdentifier
T@"<DMDActivationPredicateObserverManagerDelegate>",W,N,V_delegate
validateRequest:error:
name
cancel
endOperationIfNeeded
performSelectorOnMainThread:withObject:waitUntilDone:
setTransaction:
runConcurrently
runOnMainThread
runWithRequest:
transaction
_transaction
T@"NSObject<OS_os_transaction>",&,N,V_transaction
initPrivate
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
_outputContextForSessionType:
firstObject
setCurrentlyPickedDestinationName:
setCurrentlyPickedDestinationDeviceID:
currentlyPickedDestinationDeviceID
containsString:
_discoverDeviceWithDestinationDeviceID:scanWaitTime:error:
currentlyPickedDestinationName
_discoverDeviceWithDestinationName:scanWaitTime:sessionType:
_setOutputDevices:forSessionType:password:error:
objectAtIndexedSubscript:
_promptUserToMirrorOnDisplayNamed:withCompletion:
valueForKey:
numberWithInt:
setValue:forKey:
methodForSelector:
bundleForClass:
localizedStringForKey:value:table:
setHeader:
setDefaultButtonTitle:
setAlternateButtonTitle:
shared
deviceType
unsignedIntegerValue
setMessage:
showNotification:completion:
length
dataWithBytes:length:
bytes
T@"DMDAirPlayManager",R,N
startAirPlaySessionWithDestinationName:destinationDeviceID:password:scanWaitTime:sessionType:force:error:
stopAirPlaySessionOfType:error:
mDeviceIDIsMAC
_currentlyPickedDestinationName
_currentlyPickedDestinationDeviceID
T@"NSString",C,N,V_currentlyPickedDestinationName
T@"NSString",C,N,V_currentlyPickedDestinationDeviceID
metadataPath
dataWithContentsOfFile:
propertyListWithData:options:format:error:
_cleanUpStaleManagementStatesAndStartObservingApps
manifest
initWithQueue:name:stateHandlerBlock:
_metadataByBundleIdentifier
host
bundleIdentifier
_getEnterpriseAppMetadataForManifestURL:completion:
storeItemIdentifier
personaIdentifier
getBundleIdentifierForStoreItemIdentifier:personaIdentifier:completion:
manifestURL
getBundleIdentifierForManifestURL:completion:
getMetadataForNonEnterpriseAppRequest:completion:
_metadataForBundleIdentifier:
setState:
setOptions:
setRedemptionCode:
setUnusedRedemptionCode:
_newMetadataDictionary
state
numberWithUnsignedInteger:
options
redemptionCode
unusedRedemptionCode
_setMetadata:forBundleIdentifier:error:
dataWithPropertyList:format:options:error:
writeToFile:options:error:
managedBundleIdentifiers
arrayByAddingObject:
sharedManager
setBundlesIdentifiers:forPersonaWithPersonaUniqueString:completionHandler:
listAllPersonaWithAttributes
userPersonaBundleIDList
containsObject:
userPersonaUniqueString
updateBundleIDPersonaIDMappingForPersonaID:addingBundleID:completionHandler:
setRemovability:forAppWithBundleID:byClient:completion:
removabilityForAppWithBundleID:completion:
_applyChangeInLifeCycle:stateMap:
didFailInstallingForLifeCycle:
didFinishUpdatingForLifeCycle:
queue
allKeys
setVPNUUIDString:contentFilterUUIDString:DNSProxyUUIDString:associatedDomains:enableDirectDownloads:configuration:options:forBundleIdentifier:
setAssociatedDomains:forBundleIdentifier:error:
setAssociatedDomainsEnableDirectDownloads:forBundleIdentifier:error:
setConfiguration:forBundleIdentifier:error:
managementInformationForBundleIdentifier:
setManagementInformation:forBundleIdentifier:error:
stringForState:
_sendAppStatusChangeNotification
lifeCycleForBundleIdentifier:
currentState
setState:forBundleIdentifier:error:
addObserver:
filteredArrayUsingPredicate:
removeObserver:
stateForBundleIdentifier:
writeManagementInformationToDiskWithError:
dictionaryWithCapacity:
requestWithURL:
ephemeralSessionConfiguration
sessionWithConfiguration:
_getEnterpriseAppMetadataFromData:completion:
dataTaskWithRequest:completionHandler:
resume
setBundleIdentifier:
setStoreItemIdentifier:
setDisplayName:
setIsStoreApp:
setIsFree:
setIsUserLicensed:
willStartInstallingForLifeCycle:
didStartInstallingForLifeCycle:
didChangeInstallingProgressForLifeCycle:
didPauseInstallingForLifeCycle:
didResumeInstallingForLifeCycle:
didCancelInstallingForLifeCycle:
didFinishInstallingForLifeCycle:
willStartUpdatingForLifeCycle:
didStartUpdatingForLifeCycle:
didChangeUpdatingProgressForLifeCycle:
didPauseUpdatingForLifeCycle:
didResumeUpdatingForLifeCycle:
didCancelUpdatingForLifeCycle:
didFailUpdatingForLifeCycle:
willStartUninstallingForLifeCycle:
didFailUninstallingForLifeCycle:
didFinishUninstallingForLifeCycle:
T@"DMDAppController",R,N
T@"NSString",R,N
foregroundBundleIdentifiers
getBundleIdentifierForAppRequest:completion:
getMetadataForAppRequest:completion:
removePersonaMappingForBundleID:error:
VPNUUIDStringForBundleIdentifier:
contentFilterUUIDStringForBundleIdentifier:
DNSProxyUUIDStringForBundleIdentifier:
associatedDomainsForBundleIdentifier:
associatedDomainsEnableDirectDownloadsForBundleIdentifier:
removabilityForBundleIdentifier:
setRemovability:forBundleIdentifier:completion:
configurationForBundleIdentifier:
feedbackForBundleIdentifier:
setFeedback:forBundleIdentifier:error:
handleFetchRequest:completion:
startInstallingEnterpriseAppWithManifestURL:completion:
startInstallingNonEnterpriseAppForRequest:completion:
startRedeemingAppWithCode:completion:
cancelAppInstallationWithBundleIdentifier:completion:
resumeAppInstallationWithBundleIdentifier:completion:
startUpdatingAppForRequest:metadata:completion:
cancelAppUpdateWithBundleIdentifier:completion:
resumeAppUpdateWithBundleIdentifier:completion:
startUninstallingAppWithBundleIdentifier:completion:
setVPNUUIDString:associatedDomains:enableDirectDownloads:configuration:options:forBundleIdentifier:
advanceTransientStates
stateHandler
_queue
_manifest
_stateHandler
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
T@"NSMutableDictionary",R,N,V_manifest
T@"DMFOSStateHandler",R,N,V_stateHandler
T@"NSArray",R,C,N
updateState
_allPropertyKeys
storeItemID
bundleID
initWithJob:hasUpdateAvailable:propertyKeys:
appTypeFromProxy:
initWithApplicationRecord:hasUpdateAvailable:propertyKeys:
enumeratorForOrdinaryApps
enumeratorForUserAppPlaceholders
enumeratorForSystemAppPlaceholders
getJobsUsingBlock:
getUpdatesWithCompletionBlock:
getManagedUpdatesWithCompletionBlock:
enumeratorWithOptions:
systemPlaceholderEnumerator
applicationType
setShouldHideUserPrompts:
_installUserAppForRequest:completion:
_installDeviceLicensedAppForRequest:completion:
resumeJobsWithIDs:completionBlock:
_downloadAppForRequest:type:completion:
allowFreePurchases
configurationForDefaultMainDisplayMonitor
_updateForegroundBundleIdentifiers
setTransitionHandler:
monitorWithConfiguration:
_foregroundBundleIdentifiers
setShouldFilterExternalOriginatedDownloads:
initWithOptions:
bundleIDsToAssertions
setBundleIDsToAssertions:
initWithAuthenticationContext:
authenticatedAccount
startWithAuthenticateResponseBlock:
initWithItemIdentifer:externalVersionIdentifier:bundleIdentifier:bundleVersion:skipDownloads:
setRequestType:
_appStoreAccountIdentifierForPersona:
setAccountIdentifier:
changeTypeAsString:
sendRequestWithCompletionBlock:
_appleAccountForPersona:
ams_DSID
initWithBundleID:
startWithErrorHandler:
rereadManagedAppAttributes
_getMetadataForBundleIdentifier:storeItemIdentifier:personaIdentifier:completion:
initWithBundleIdentifierOfSystemPlaceholder:error:
itemID
localizedName
itemName
_managedDefaultsForBundleIdentifier:
_withSandboxExtensionForApp:do:
arrayWithObject:
_applyStoreDictionary:toAppMetadata:
sendAppRequestWithBundleIdentifier:storeItemIdentifier:personaIdentifier:type:skipDownloads:completion:
layoutMonitor
currentLayout
elements
set_foregroundBundleIdentifiers:
jobManager
updatesService
addTerminationAssertion:forBundleIdentifier:
removeTerminationAssertionForBundleIdentifier:
userIsSignedIn
promptUserToSignInWithCompletion:
installSystemAppWithBundleIdentifier:completion:
singleAppModeBundleIndentifier
setSingleAppModeBundleIndentifier:
setLayoutMonitor:
_singleAppModeBundleIndentifier
_bundleIDsToAssertions
_layoutMonitor
__foregroundBundleIdentifiers
T@"NSMutableDictionary",&,N,V_bundleIDsToAssertions
T@"FBSDisplayLayoutMonitor",&,N,V_layoutMonitor
T@"NSArray",&,N,V__foregroundBundleIdentifiers
T@"NSString",C,N,V_singleAppModeBundleIndentifier
T@"ASDJobManager",R,C,N
T@"ASDUpdatesService",R,C,N
initWithRedeemCodes:
setAuthenticationContext:
startWithRedeemResponseBlock:
cancelJobsWithIDs:completionBlock:
_uninstallAppWithBundleIdentifier:completion:
initWithBundleIdentifier:efficacy:name:withHandler:
resumeSync
uninstallAppWithBundleID:requestUserConfirmation:completion:
terminateSyncWithCompletionHandler:
_startUpdatingAppForRequest:metadata:completion:
_updateEndedForLifeCycle:
setLicenseType:
setPersonaIdentifier:
sharedService
openApplication:options:withResult:
_lifeCycleByBundleIdentifier
initWithTarget:
addStateWithName:
addTransitionToState:triggeringEvent:
stateWithName:
setInitialState:
setLogLevel:
stateMachine
eventWithTrigger:context:
transitionWithTriggeringEvent:
observers
pointerAtIndex:
removePointerAtIndex:
_removeLifeCycleForBundleIdentifier:
waitUntilAllOperationsAreFinished
cancelAndWaitUntilAllOperationsAreFinished
setObservers:
setStateMachine:
_progress
_observers
_stateMachine
T@"NSPointerArray",&,N,V_observers
T@"NSOperationQueue",&,N,V_queue
T@"CATStateMachine",&,N,V_stateMachine
T@"NSString",R,C,N,V_bundleIdentifier
T@"NSProgress",R,N,V_progress
initWithBundleIdentifier:allowPlaceholder:error:
compatibilityObject
appState
isInstalled
installType
installProgress
installState
stringForInstallationState:
isPlaceholder
initWithBundleIdentifier:currentState:
defaultWorkspace
proxyProgress
willStartInstalling
willStartUpdating
currentStateName
_findProxyInProxies:andCallBlock:
isDowngraded
didFinishUninstalling
didStartInstalling
didStartUpdating
didChangeInstallingProgress
didChangeUpdatingProgress
didPauseInstalling
didPauseUpdating
didResumeInstalling
didResumeUpdating
didCancelInstalling
didCancelUpdating
didFailInstalling
didFailUpdating
didFinishInstalling
didFinishUpdating
willStartUninstalling
didFailUninstalling
applicationInstallsDidStart:
applicationInstallsDidChange:
applicationInstallsDidUpdateIcon:
applicationsWillInstall:
applicationsDidInstall:
pluginsDidInstall:
applicationsDidFailToInstall:
applicationsWillUninstall:
pluginsWillUninstall:
applicationsDidUninstall:
pluginsDidUninstall:
applicationsDidFailToUninstall:
applicationInstallsArePrioritized:arePaused:
applicationInstallsDidPause:
applicationInstallsDidResume:
applicationInstallsDidCancel:
applicationInstallsDidPrioritize:
applicationStateDidChange:
applicationIconDidChange:
networkUsageChanged:
observeLaunchProhibitedApps
deviceManagementPolicyDidChange:
applicationsDidChangePersonas:
databaseWasRebuilt
initWithBundleIdentifier:
setProxyProgress:
_proxyProgress
T@"NSProgress",&,N,V_proxyProgress
lifeCycle
displayName
isStoreApp
isFree
isUserLicensed
needsRedownload
setNeedsRedownload:
_isStoreApp
_isFree
_isUserLicensed
_needsRedownload
_bundleIdentifier
_storeItemIdentifier
_displayName
T@"NSString",C,N,V_bundleIdentifier
T@"NSNumber",C,N,V_storeItemIdentifier
T@"NSString",C,N,V_displayName
TB,N,V_isStoreApp
TB,N,V_isFree
TB,N,V_isUserLicensed
TB,N,V_needsRedownload
T@"DMDAppLifeCycle",R,N
assetResolver
installOperationDidFinish:asset:
_assetResolver
T@"<DMDRemoteAssetResolver>",W,N,V_assetResolver
payloadMetadataObjectID
objectWithID:
payload
payloadDictionary
declarationForPayload:error:
verboseDescription
endOperationMarkingPayloadMetadata:failedWithError:
addStatusEntriesFromDictionary:
endOperationWithPayloadMetadata:
taskOperationProvider
database
prepareToRunOperation:withContext:withDatabase:
removeOperationDidFinish:asset:
addTarget:selector:forOperationEvents:userInfo:
enqueueOperation:
performBackgroundContextBlock:
error
setInstalled:
initWithUUID:
UUIDsToTransactions
setBlock:
block
blockOperationWithBlock:
_block
T@?,C,N,V_block
bluetoothManager
setEnabled:
setPowered:
setStillNeedsUpdate:
availabilityChanged:
stillNeedsUpdate
enabled
removeObserver:name:object:
T@"DMDBluetoothManager",R,N
_enabled
_stillNeedsUpdate
_bluetoothManager
T@"BluetoothManager",R,N,V_bluetoothManager
TB,N,V_enabled
TB,N,V_stillNeedsUpdate
clearStoredActivationLockBypassCode
clearRestrictionsPasscodeWithError:
handleFailureInFunction:file:lineNumber:description:
commandForPayload:error:
dmf_executeRequestWithContext:error:
dmf_executeOperationWithContext:error:
dmf_requestExecutesWithoutReturning
dmf_statusForResult:context:
unknownPayloadKeys
allObjects
payloadContext
organization
setOrganizationIdentifier:
setAssetProvidersByPayloadIdentifier:
operationClassForRequest:error:
initWithRequest:
operationDidFinish:userInfo:
resultObject
metadataWithPayloadDictionary:organizationIdentifier:context:error:
andPredicateWithSubpredicates:
fetchRequestForCommandsFromOrganizationWithIdentifier:matchingPredicate:
commandsWithPayloadDictionaries:organizationIdentifier:context:error:
fetchRequestForCommandsFromOrganizationWithIdentifier:
fetchRequestForCommandsPendingExecutionFromOrganizationWithIdentifier:
fetchRequestForCommandsPendingRemovalFromOrganizationWithIdentifier:
fetchRequestForCommandsPendingDeleteFromOrganizationWithIdentifier:
supportedConfigurationTypes
addObjectsFromArray:
supportedAssetTypes
supportedActivationTypes
caseInsensitiveCompare:
supportedCommandTypes
supportedDeclarationTypes
supportedEventTypes
supportedPredicateTypes
supportedMessageTypes
URLForResource:withExtension:
initWithContentsOfURL:
newBackgroundContext
execute:
performBlockAndWait:
setType:
setURL:
dmd_userConfigurationDatabaseURL
_newDatabaseWithURL:
descriptionForSQLiteStoreWithDatabaseURL:
setPersistentStoreDescriptions:
managedObjectModel
initWithName:managedObjectModel:
performBackgroundTask:
newUserDatabase
setName:
setMaxConcurrentOperationCount:
setSuspended:
setDatabase:
initWithCapacity:
eventStatusMessageWithPayloadIdentifier:
sendEvents:organizationIdentifier:completionHandler:
setEventsHandler:
databaseInitializationOperationDidFinish
initializationOperationDidFinish:
addTarget:selector:forOperationEvents:
addDependency:
addOperation:
mainQueue
operations
organizationControllerByIdentifier
databaseInitializationOperation
setDeviceStateProvider:
isMainThread
delegateDidResume
enqueueDeclarationProcessingOperationIfNeeded
setQueuePriority:
delegateWillSuspend
initializationError
setRequest:
organizationIdentifier
organizationDisplayName
enqueueDatabaseModificationOperation:completionHandler:
initWithObjects:forKeys:
setOrganizationsByIdentifier:
addOperationWithBlock:
eventSubscriptionManager
startDate
eventStatusesByPayloadIdentifierSinceStartDate:organizationIdentifier:
eventIdentifiers
setEventStatuses:
setClientIdentifier:
setCompletionHandler:
fetchRequestMatchingConfigurationOrganizationWithIdentifier:
fetchRequestForFailedDeclarationsFromOrganizationWithIdentifier:
executeFetchRequest:error:
setFailed:
save:
initWithContext:
subscriptionDeclaration
fetchRequestForActiveDeclarationFromOrganizationWithIdentifier:withIdentifier:serverHash:
setPayloadMetadata:
payloadMetadata
payloadEvents
setEvents:
payloadSchedule
setSchedule:
updateEventSubscriptions
fetchRequestMatchingRegistrationFromOrganizationWithIdentifier:payloadIdentifier:
deleteObject:
setOrganization:
setPayloadIdentifier:
setEventType:
setDate:
setDetails:
defaultCenter
postNotificationName:object:
initializationOperation
setInitializationOperation:
setDatabaseInitializationOperation:
userInfo
removeObjectForKey:
domain
code
errorWithDomain:code:userInfo:
setInitializationError:
cancelAllOperations
updateOrganizationControllers
_cleanupOrphanedPolicies
_updateOrganizationControllers
addObserver:selector:name:object:
declarationModificationOperationDidFinish:completionHandler:
deviceStateProvider
setTaskOperationProvider:
activationPredicateObserverManager
setActivationPredicateObserverManager:
enqueueOperations:
addOperations:waitUntilFinished:
viewContext
initWithOrganization:delegate:
removeObject:
setRelationshipKeyPathsForPrefetching:
setEventSubscriptionRegistrations:error:
setPropertiesToFetch:
setResultType:
valueForKeyPath:
initWithObjects:
policyPersistence
componentsJoinedByString:
removeOrphanedPoliciesNotBelongingToExistingOrganizationIdentifiers:completionHandler:
removeOrphanedPoliciesNotBelongingToExistingDeclarationIdentifiersByOrganizationIdentifier:completionHandler:
fetchRequestForPayloadMetadatasPendingStatusUpdateFromOrganizationWithIdentifier:
stateDictionary
stateChangeTimestamp
objectID
setLastStatusReportTimestamp:
fetchRequestMatchingEventsFromOrganizationWithIdentifier:
dictionaryRepresentation
refreshObject:mergeChanges:
configurationSourceWithIdentifier:
registerConfigurationSource:
updateWithConfigurationSource:
configurationEngineDidResume:
configurationEngineWillSuspend:
configurationSourceController:fetchStatusUpdatesWithCompletionHandler:
configurationSourceController:fetchEventsWithCompletionHandler:
engineProcessingOperation:enqueuedOperationsForOrganizationWithIdentifier:
engineProcessingOperation:assetResolverForOrganizationWithIdentifier:
registerConfigurationSourceOperation:didUpdateRegistrationForConfigurationSource:
initWithDatabase:policyPersistence:activationManager:
suspend
handleCreateConfigurationOrganizationRequest:completionHandler:
handleDeactivateConfigurationOrganizationRequest:completionHandler:
handleFetchConfigurationOrganizationsRequest:completionHandler:
handleFetchStreamEvents:completionHandler:
handleConfigurationSourceRegistrationRequest:clientIdentifier:completionHandler:
handleSetDeclarationsRequest:completionHandler:
handleUpdateDeclarationsRequest:completionHandler:
handleFetchDeclarationsRequest:completionHandler:
processDeclarationsForOrganizationWithIdentifier:completionHandler:
processStatusForOrganizationWithIdentifier:completionHandler:
refreshStatusForOrganizationWithIdentifier:completionHandler:
handleUpdateCommandsRequest:completionHandler:
handleInstallSubscriptionRequest:completionHandler:
handleRemoveSubscriptionRequest:completionHandler:
setQueue:
setOrganizationControllerByIdentifier:
setEventSubscriptionManager:
_policyPersistence
_deviceStateProvider
_taskOperationProvider
_activationPredicateObserverManager
_database
_initializationError
_databaseInitializationOperation
_initializationOperation
_organizationControllerByIdentifier
_eventSubscriptionManager
T@"DMDConfigurationDatabase",&,N,V_database
T@"CATOperationQueue",&,N,V_queue
T@"NSError",&,V_initializationError
T@"DMDEngineDatabaseInitializationOperation",&,N,V_databaseInitializationOperation
T@"CATOperation",&,N,V_initializationOperation
T@"NSMutableDictionary",&,N,V_organizationControllerByIdentifier
T@"DMDEventSubscriptionManager",&,N,V_eventSubscriptionManager
T@"DMDPolicyPersistence",R,V_policyPersistence
T@"<DMDConfigurationEngineDelegate>",W,N,V_delegate
T@"NSObject<DMDDeviceStateProvider>",&,N,V_deviceStateProvider
T@"NSObject<DMDTaskOperationProvider>",&,N,V_taskOperationProvider
T@"DMDActivationPredicateObserverManager",&,N,V_activationPredicateObserverManager
installationOperationDidFinish:userInfo:
isInserted
isDeleted
didSave
TB,D,N
T@"NSArray",C,D,N
updateWithOrganization:
type
persistentConfigurationSources
persistentConfigurationSourceControllersByIdentifier
configurationSourceControllers
setRegisteredConfigurationSources:
ephemeralConfigurationSources
ephemeralConfigurationSourceControllersByIdentifier
unregisterConfigurationSource:
setPersistentConfigurationSourceControllersByIdentifier:
setEphemeralConfigurationSourceControllersByIdentifier:
_type
_persistentConfigurationSourceControllersByIdentifier
_ephemeralConfigurationSourceControllersByIdentifier
T@"NSString",C,N,V_type
T@"NSMutableDictionary",&,N,V_persistentConfigurationSourceControllersByIdentifier
T@"NSMutableDictionary",&,N,V_ephemeralConfigurationSourceControllersByIdentifier
T@"DMFConfigurationOrganization",R,N
T@"<DMDConfigurationOrganizationControllerDelegate>",W,N,V_delegate
fetchRequestForAvailableConfigurationsFromOrganizationWithIdentifier:
fetchRequestForAvailableConfigurationsFromOrganizationWithIdentifier:payloadIdentifiers:
fetchRequestForConfigurationsPendingInstallFromOrganizationWithIdentifier:
fetchRequestForConfigurationsPendingRemoveFromOrganizationWithIdentifier:
fetchRequestForConfigurationsPendingInactiveFromOrganizationWithIdentifier:
dmf_installRequestWithContext:error:
dmf_replaceRequestWithContext:error:
dmf_removeRequestWithContext:error:
removalOperationDidFinish:userInfo:
setIdentifier:
machServiceName
setMachServiceName:
listenerEndpoint
setListenerEndpoint:
reportingRequirements
setReportingRequirements:
T@"NSString",C,N
T@"NSXPCListenerEndpoint",&,N
T@"DMFReportingRequirements",&,N
T@"DMDConfigurationOrganization",&,D,N
T@"NSString",C,D,N
T@"NSXPCListenerEndpoint",&,D,N
T@"DMFReportingRequirements",&,D,N
setValueTransformer:forName:
initialize
allowedTopLevelClasses
context
controller
configurationEngineRequestedAsset:completion:
fetchRemoteProxy:
setContext:
_context
T@"<DMDRemoteAssetResolutionContext>",&,N,V_context
source
initWithConfigurationSource:
setSource:
updateStatusChangeListener
statusForSourceDidChange:
eventsForSourceDidChange:
object
updateCoalescenceInterval
reportStatus
cancelPreviousPerformRequestsWithTarget:selector:object:
performSelector:withObject:afterDelay:
reportStatusTimeout
initWithController:
setController:
reportEvents
reportEventsTimeout
initWithConfigurationSource:delegate:
configurationSource
_identifier
_source
T@"CATSerialOperationQueue",&,N,V_queue
T@"DMDConfigurationSourceRepresentation",&,N,V_source
T@"<DMDConfigurationSourceControllerDelegate>",R,W,N,V_delegate
T@"NSString",R,C,N,V_identifier
T@"DMFConfigurationSource",R,N
configurationEventsDidChange:completion:
_organizationIdentifier
_machServiceName
_listenerEndpoint
_reportingRequirements
T@"NSString",C,N,V_identifier
T@"NSString",C,N,V_organizationIdentifier
T@"NSString",C,N,V_machServiceName
T@"NSXPCListenerEndpoint",&,N,V_listenerEndpoint
T@"DMFReportingRequirements",&,N,V_reportingRequirements
configurationStatusDidChange:completion:
_tryConnectingToNamedService:completion:
initWithMachServiceName:options:
setConnection:
anonymousEndpoint
initWithListenerEndpoint:
connection
setRemoteObjectInterface:
remoteObjectProxyWithErrorHandler:
probe:
setAnonymousEndpoint:
_controller
_connection
_anonymousEndpoint
T@"NSXPCConnection",&,N,V_connection
T@"NSXPCListenerEndpoint",&,N,V_anonymousEndpoint
T@"NSString",&,N,V_machServiceName
T@"DMDConfigurationSourceController",W,N,V_controller
stringWithString:
insertString:atIndex:
subscriberCellularProvider
carrierName
IMEI
MEID
formattedIMEIStringFromString:
formattedICCIDStringFromString:
modemFirmwareVersion
ICCID
currentNetworkName
carrierBundleVersion
currentMobileCountryCode
currentMobileNetworkCode
dataRoamingEnabled
setDataRoamingEnabled:
isSubscriptionRoaming:client:
isRoaming
voiceRoamingEnabled
setVoiceRoamingEnabled:
hasGSM
hasCDMA
_supportsVoiceRoaming
TB,N
fetchCachedVinylInfoWithCompletion:
refreshCellularPlansWithCSN:serverURL:completion:
ctContext
ctConnection
configurationEngine
organizationType
queueGroup
setServerHash:
arrayByAddingObjectsFromArray:
fetchRequestForDeclarationsFromOrganizationWithIdentifier:matchingPredicate:
failed
username
allUsers
hasDataToSync
forceDeletion
deleteUser:completionHandler:
currentDevicePropertyKeys
deviceWithKeys:
propertyNameForKey:
valueForKey:error:
setErrorsForKeys:
T@"DMDDeviceController",R,N
currentDevice
T@"DMFDevice",R,N
deviceLocatorServiceEnabledWithError:
sharedInstance
isManagedLostModeActive
isDiagnosticSubmissionAllowed
isAppAnalyticsAllowed
_isCloudBackupEnabled
activeSyncDeviceIdentifier
enforcedSoftwareUpdateDelayInDays
isActivationLockEnabledWithError:
_isPersonalHotspotEnabled
maxNumberOfUsers
_skippedSetupPanes
getPreferredDataSubscriptionContextSync:
slotId
_stringFromSubscriptionSlot:
getPhoneNumber:error:
number
userDefaultVoice
getSimLabel:error:
text
unique_id
copyCarrierBundleVersion:error:
getLocalizedOperatorName:error:
copyMobileCountryCode:error:
copyMobileNetworkCode:error:
getMobileEquipmentInfo:
meInfoList
numberWithInteger:
getSubscriptionInfoWithError:
subscriptionsInUse
slotID
_deviceInformationForEquipmentInfo:subscription:withClient:
fmipStateWithCompletion:
isActivationLockedWithCompletion:
aa_primaryAppleAccountWithPreloadedDataclasses
isEnabledForDataclass:
aa_isPrimaryEmailVerified
availableCapacity
batteryLevel
capacity
isDeviceLocatorServiceEnabled
isDoNotDisturbInEffect
isLostModeEnabled
isDiagnosticSubmissionEnabled
isAppAnalyticsEnabled
isCloudBackupEnabled
carrierSettingsVersion
cellularTechnology
currentCarrierNetwork
currentMCC
currentMNC
isDataRoamingEnabled
EASIdentifier
enforcedSoftwareUpdateDelay
isActivationLockEnabled
isEphemeralMultiUser
isPersonalHotspotEnabled
maximumResidentUsers
skippedSetupPanes
subscriberCarrierNetwork
subscriberMCC
subscriberMNC
isVoiceRoamingEnabled
serviceSubscriptions
bluetoothAddress
buildVersion
userAssignedDeviceName
hasAppleInternalInstallCapability
sharedConfiguration
isAwaitingConfiguration
defaultStore
activeAccount
iTunesAccountHashForUniqueIdentifier:
marketingName
modelNumber
deviceClass
productVersion
productType
serialNumber
wifiAddress
isSupervised
deviceLastCloudBackupDate
uniqueDeviceID
deviceName
isAppleInternal
isInSingleAppMode
iTunesStoreAccountHash
iTunesStoreAccountIsActive
model
modelName
osVersion
productName
lastCloudBackupDate
networkDidChange
keybagLockStateDidChange
setIsKeychainUnlocked:
setHasKeychainUnlockedSinceBoot:
isNetworkTethered
setIsNetworkTethered:
hasKeychainUnlockedSinceBoot
isKeychainUnlocked
startObservingChanges
stopObservingChanges
mKeychainFirstUnlockNotificationToken
mKeychainLockStateNotificationToken
mNetworkChangeNotificationToken
_hasKeychainUnlockedSinceBoot
_isKeychainUnlocked
_isNetworkTethered
TB,N,V_hasKeychainUnlockedSinceBoot
TB,N,V_isKeychainUnlocked
TB,N,V_isNetworkTethered
disableManagedLostModeWithLocatedMessage:completion:
echo
resultStatus
setEcho:
setResultStatus:
setDeclarationIdentifier:
policy
setPolicy:
priority
setPriority:
excludedIdentifiers
setExcludedIdentifiers:
Tq,N
T@"NSSet",C,N
Tq,D,N
_declarationIdentifier
_policy
_priority
T@"NSString",C,N,V_declarationIdentifier
Tq,N,V_policy
Tq,N,V_priority
T@"NSSet",C,N,VexcludedIdentifiers
valueForEntitlement:
remoteInterface
setExportedInterface:
setExportedObject:
listener:shouldAcceptNewConnection:
initWithPolicyPersistence:
T@"DMDPolicyPersistence",R,N,V_policyPersistence
setLostModeEnabled:
footnote
setFootnoteText:
setDisableSlideToUnlock:
enableManagedLostModeWithInfo:completion:
request
fetchRequestMatchingConfigurationOrganizationsOfType:
setActive:
performDatabaseModificationOperationWithManagedObjectContext:
_request
T@"DMFCreateConfigurationOrganizationRequest",&,N,V_request
removeObserver:forKeyPath:context:
isReady
observeValueForKeyPath:ofObject:change:context:
addObserver:forKeyPath:options:context:
operationWillStart
destroyLegacyDatabaseIfNeeded
fixupDatabaseWithCompletionHandler:
loadPersistentStoresWithCompletionHandler:
dmd_legacyUserConfigurationEngineDatabaseURL
checkResourceIsReachableAndReturnError:
stringByAppendingString:
persistentStoreDescriptions
persistentStoreCoordinator
persistentStores
metadataForPersistentStore:
updateMetadataForManagedObjectContext:error:
destroyPersistentStoresWithError:
setMetadata:forPersistentStore:
destroyPersistentStoreAtURL:withType:options:error:
lastPathComponent
active
payloadMetadatas
preprocessDatabaseInContext:forOrganization:error:
arrayWithArray:
processCommandPayloadsInContext:forOrganization:enqueuedOperations:assetResolver:error:
processDeclarationPayloadsInContext:forOrganization:enqueuedOperations:assetResolver:error:
fetchRequestForDeclarationsFromOrganizationWithIdentifier:
mutableSetValueForKey:
assetReferences
fetchRequestForActiveDeclarationsFromOrganizationWithIdentifier:withIdentifiers:
orPredicateWithSubpredicates:
substringFromIndex:
activeRestrictionsURL
writeToURL:options:error:
setResourceValue:forKey:error:
payloadIdentifier
initWithDatabase:payloadMetadataObjectID:payloadIdentifier:
requiresNetworkTether
setRequiresNetworkTether:
requiresUnlockedKeychain
setRequiresUnlockedKeychain:
setPredicatePayloadMetadata:
available
setOutgoingPayloadMetadataReferences:
payloadStandardConfigurations
initWithArray:
updateActiveRestrictionsInContext:error:
setAssetResolver:
dependencies
fetchRequestForDeclarationsPendingDeleteFromOrganizationWithIdentifier:
T@"<DMDEngineDatabaseProcessingOperationDelegate>",W,N,V_delegate
T@"<DMDTaskOperationProvider>",&,N,V_taskOperationProvider
setAvailable:
T@"DMFDeactivateConfigurationOrganizationRequest",&,N,V_request
payloadIdentifiers
fetchRequestForPayloadMetadatasFromOrganizationWithIdentifier:matchingPredicate:
completionHandler
includePayloadContents
includeInternalState
descriptiveProperties
null
_completionHandler
T@"DMFFetchDeclarationsRequest",&,N,V_request
T@?,C,N,V_completionHandler
T@"NSString",&,N,V_organizationIdentifier
clientIdentifier
configurationSourceName
delegateUpdatedDeclarationSourceAndEndOperation:
_clientIdentifier
T@"<DMDEngineRegisterConfigurationSourceOperationDelegate>",W,N,V_delegate
T@"DMFRegisterConfigurationSourceRequest",&,N,V_request
T@"NSString",C,N,V_clientIdentifier
fetchRequestForActiveDeclarationsFromOrganizationWithIdentifier:
declarations
declarationsWithDictionaries:organizationIdentifier:context:error:
T@"DMFSetDeclarationsRequest",&,N,V_request
addCommands
T@"DMFUpdateEnqueuedCommandsRequest",&,N,V_request
removeDeclarations
fetchRequestForDeclarationsFromOrganizationWithIdentifier:withIdentifiers:
upsertDeclarations
T@"DMFUpdateDeclarationsRequest",&,N,V_request
payloadFrequency
payloadLocalTime
payloadSpread
payloadDay
localTime
spread
scheduledTimerWithTimeInterval:repeats:block:
setTimer:
timer
_frequency
_localTime
_spread
_day
_timer
T@"NSTimer",&,N,V_timer
Tq,R,N,V_frequency
T@"NSString",R,C,N,V_localTime
T@"NSNumber",R,N,V_spread
T@"NSNumber",R,N,V_day
weakObjectsPointerArray
addPointer:
_registerListener:forKeys:inMap:
_registerEventStreamHandlers
stringWithUTF8String:
_dispatchToListenerForKey:inMap:withBlock:
startObservingChangesWithHandler:
initWithListeners:
alarmListeners
distributedNotificationNameToListenersMap
notifyMatchingNotificationToListenersMap
managedSettingsGroupsToListenersMap
_alarmListeners
_distributedNotificationNameToListenersMap
_notifyMatchingNotificationToListenersMap
_managedSettingsGroupsToListenersMap
T@"NSPointerArray",R,N,V_alarmListeners
T@"NSMutableDictionary",R,N,V_distributedNotificationNameToListenersMap
T@"NSMutableDictionary",R,N,V_notifyMatchingNotificationToListenersMap
T@"NSMutableDictionary",R,N,V_managedSettingsGroupsToListenersMap
eventType
timestamp
details
initWithEventType:details:
_eventType
_details
_timestamp
T@"NSString",R,C,N,V_eventType
T@"NSDictionary",R,C,N,V_details
T@"NSDate",R,N,V_timestamp
eventSubscriptionsByIdentifier
eventsHandler
setEventSubscriptionsByIdentifier:
_eventsHandler
_eventSubscriptionsByIdentifier
T@"NSMutableDictionary",&,N,V_eventSubscriptionsByIdentifier
T@?,C,N,V_eventsHandler
willChangeValueForKey:
setPrimitiveValue:forKey:
didChangeValueForKey:
automaticallyNotifiesObserversOfPayloadMetadata
T@"DMDPayloadMetadata",&,D,N
events
T@"NSArray",&,D,N
schedule
T@"CEMEventSubscriptionDeclaration_Schedule",&,D,N
updateWithSubscriptionRegistration:
_updateEventStreams:
initWithScheduleRegistration:
eventStreamByEventType
payloadType
lowercaseString
updateEvent:
frequency
streamEventsHandler
startNotificationStreamWithEventsHandler:
lastDateScheduleElapsed
eventStatusesSinceStartDate:
setLastDateScheduleElapsed:
startWithScheduleElapsedHandler:
eventStatusRollupSinceStartDate:
initWithSubscriptionRegistration:streamEventsHandler:
setEventStreamByEventType:
_payloadIdentifier
_schedule
_eventStreamByEventType
_streamEventsHandler
_lastDateScheduleElapsed
T@"DMDEventReportingSchedule",&,N,V_schedule
T@"NSMutableDictionary",&,N,V_eventStreamByEventType
T@?,R,N,V_streamEventsHandler
T@"NSDate",&,N,V_lastDateScheduleElapsed
T@"NSString",R,C,N,V_organizationIdentifier
T@"NSString",R,C,N,V_payloadIdentifier
fetchActivationLockBypassKeyWithError:
initWithBypassCode:
initWithAppsByBundleIdentifier:
fetchAppsForRequest:completion:
_fetchAppsForBundleIdentifier:type:completion:
bundleIdentifiers
managedAppsOnly
setInstallationState:
setVPNUUIDString:
setContentFilterUUIDString:
setDNSProxyUUIDString:
setAssociatedDomains:
setAssociatedDomainsEnableDirectDownloads:
setRemovable:
setConfiguration:
setFeedback:
setManagementInformation:
managementInformation
deleteFeedback
setBundleIdentifiers:
useDelay
initWithUpdate:
installedProfilesWithFilterFlags:
managedOnly
isManagedByMDM
payloads
certificatePersistentID
copyItemWithPersistentID:useSystemKeychain:
initWithCertificateRef:isIdentity:
initWithCertificates:
setSupportedCommands:
setSupportedAssets:
setSupportedConfigurations:
setSupportedEvents:
setSupportedActivations:
setSupportedPredicates:
setSupportedMessages:
setPayloadDescriptions:
propertyKeys
dictionaryWithValuesForKeys:
allKeysForObject:
removeObjectsForKeys:
errorsForKeys
initWithValuesByPropertyKey:errorsByPropertyKey:
sharedServer
initWithStateDescription:
initWithLocation:
initWithBook:
initWithBooks:
sharedInstallTask
productKeyOrDefaultFromStatus:
_downloadStatusAndPercentComplete:fromStatus:
initWithProductKey:status:downloadPercentComplete:
filterFlags
_profileListWithFilterFlags:
initWithProfiles:
sharedReader
installedProfileIdentifiersWithFilterFlags:
userProfileRestrictions
systemProfileRestrictions
defaultRestrictions
installedProfileWithIdentifier:
dependentsOfParent:inDomain:
signerCertificates
filterRestrictionDictionary:toIncludeOnlyRestrictionsThatDifferFromRestrictions:
initWithProfile:isManaged:signerCertificates:restrictions:
currentRestrictions
initWithRestrictions:
supportsBlockLevelEncryption
supportsFileLevelEncryption
isPasscodeSet
currentPasscodeIsCompliantWithGlobalRestrictionsOutError:
currentPasscodeIsCompliantWithProfileRestrictionsOutError:
effectiveValueForSetting:
userValueForSetting:
initWithSupportsBlockLevelEncryption:supportsFileLevelEncryption:passcodeIsSet:passcodeIsCompliantWithGlobalRestrictions:passcodeIsCompliantWithProfileRestrictions:passcodeLockGracePeriodEnforced:passcodeLockGracePeriod:
initWithSecurityInformation:
isEqualToUser:
initWithUser:isCurrentUser:
initWithUsers:
licenseType
endOperationWithDMFErrorCode:
setMetadata:
_runWithRequest:
_resumeInstallationForRequest:
installAppForRequest:
_metadata
T@"DMDAppMetadata",&,N,V_metadata
profile
_installProfile:withRequest:error:
_installRestrictionsPayload:withRequest:error:
_rollbackProfile:withRequest:completion:
installProfileData:options:outError:
removeProfileAsyncWithIdentifier:installationType:completion:
_mapMCRestrictionsFromPayload:error:
_applyHeuristicsToRestrictions:error:
applyRestrictionDictionary:clientType:clientUUID:localizedClientDescription:localizedWarningMessage:outRestrictionChanged:outEffectiveSettingsChanged:outError:
dictionary
MCMutableDeepCopy
_intersectionFeatureForPayloadRestrictionKey:
restrictionsAfterApplyingRestrictionsDictionary:toRestrictionsDictionary:outChangeDetected:outError:
sharedHacks
_applyHeuristicsToRestrictions:forProfile:outError:
_intersectionAliasToFeatures
persistentID
iTunesStoreID
originator
setPersistentID:
version
setVersion:
profileData
managingProfileIdentifier
style
isSetupBuddyDone
personaID
_installSilentProfileData:managingProfileIdentifier:personaID:
_installInteractiveProfile:
profileWithData:outError:
mustInstallProfileNonInteractively:
queueFileDataForAcceptance:originalFileName:outError:
installProvisioningProfileData:managingProfileIdentifier:outError:
conformsToOverridePatternWithKey:
restrictedAppBundleIDs
effectiveWhitelistedAppBundleIDs
openSensitiveURL:withOptions:error:
enableLostModeWithInfo:
standardUserDefaults
objectForKey:
integerForKey:
promptsAllowedBeforeAutomaticDenial
promptWindowInterval
_now
_removePromptTimestampsOutsideIntervalEnding:
promptTimestamps
promptsAllowed
setPromptTimestamps:
overrideDate
date
timeIntervalSinceDate:
promptResetTimeInterval
managementPromptPolicyPath
dictionaryWithContentsOfFile:
timestampsKey
_timestampDataForWritingToFile
_timestampDictionaryForWritingToFile
isPromptAllowedRightNow
recordNewPrompt
readTimestampsFromFile
writeTimestampsToFile
setOverrideDate:
_promptTimestamps
_promptsAllowed
_promptResetTimeInterval
_overrideDate
T@"NSArray",C,N,V_promptTimestamps
Tq,R,N,V_promptsAllowed
Td,R,N,V_promptResetTimeInterval
T@"NSDate",C,N,V_overrideDate
setDeviceName:outError:
T@"NSDate",R,C,N
isLoginUser
switchToLoginUserWithCompletionHandler:
setOriginator:
newAssertionForBundle:withReason:
setAuthorizationStatusByType:forBundle:
initWithEffectiveBundle:delegate:onQueue:
setLocationManager:
locationManager
setDesiredAccuracy:
setTimeoutTimerDispatchSource:
timeoutTimerDispatchSource
_cleanupAfterResponseFromLocationManagerOrTimeout
requestLocation
systemLostModeRequestPath
fileURLWithPath:isDirectory:
coordinateWritingItemAtURL:options:error:byAccessor:
dictionaryWithContentsOfURL:
coordinateReadingItemAtURL:options:error:byAccessor:
dateWithTimeIntervalSinceReferenceDate:
currentLocale
setLocale:
setTimeStyle:
stringFromDate:
setDateStyle:
lastObject
_updateLostModeFileForOriginator:
stopUpdatingLocation
timeIntervalSinceReferenceDate
writeToURL:atomically:
setResourceValues:error:
locationManager:didUpdateToLocation:fromLocation:
locationManager:didUpdateLocations:
locationManager:didUpdateHeading:
locationManagerShouldDisplayHeadingCalibration:
locationManager:didDetermineState:forRegion:
locationManager:didRangeBeacons:inRegion:
locationManager:rangingBeaconsDidFailForRegion:withError:
locationManager:didRangeBeacons:satisfyingConstraint:
locationManager:didFailRangingBeaconsForConstraint:error:
locationManager:didEnterRegion:
locationManager:didExitRegion:
locationManager:didFailWithError:
locationManager:monitoringDidFailForRegion:withError:
locationManager:didChangeAuthorizationStatus:
locationManagerDidChangeAuthorization:
locationManager:didStartMonitoringForRegion:
locationManagerDidPauseLocationUpdates:
locationManagerDidResumeLocationUpdates:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didVisit:
T@"DMDLostDeviceLocationManager",R,N
getCurrentLocationForOriginator:completion:
clearLastLocationRequestedDate
lastLocationRequestedDateMessage
_locationManager
_originator
_timeoutTimerDispatchSource
T@"CLLocationManager",&,N,V_locationManager
T@"NSString",C,N,V_originator
T@"NSObject<OS_dispatch_source>",&,N,V_timeoutTimerDispatchSource
promptUserForiTunesAccount:accountNameEditable:canCreateNewAccount:assertion:completionBlock:
initWithAccount:
contextForSignIn
setPromptStyle:
setAccountNameEditable:
setCanCreateNewAccount:
delegateWithAuthenticationContext:
startWithCompletionBlock:
promptUserToLoginToiTunesIfNeededTitle:message:assertion:completionBlock:
cleanUpWithAssertion:completionBlock:
memberQueue
memberQueueCleanUp
memberQueueRereadNonStoreBooksManifest
downloads
memberQueuePersistentIDToNonStoreBook
downloadIdentifier
longLongValue
persistentIdentifier
enumerateObjectsUsingBlock:
downloadPhaseIdentifier
friendlyName
failureError
setDownloadIdentifier:
removeObjectIdenticalTo:
finishDownloads:
cancelDownloads:completionBlock:
fullPath
memberQueueCommitNonStoreBooksManifest
memberQueueRereadStoreBooksManifest
memberQueueiTunesStoreIDToStoreBook
memberQueueCommitStoreBooksManifest
manifestDictionary
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
isEnterpriseBookBackupAllowed
writeToFile:atomically:
initWithManifestDictionary:
setMemberQueuePersistentIDToNonStoreBook:
setMemberQueueiTunesStoreIDToStoreBook:
kind
setFullPath:
setPreviousVersion:
MCHashedFilenameWithPrefix:extension:
setKind:
initWithURL:
initWithKind:
initWithDownloadMetadata:
initWithURLRequest:
setValue:forProperty:
addAsset:forType:
removeItemAtPath:error:
setState:forNonStoreBookWithPersistentID:
addDownloads:completionBlock:
cancelNonStoreDownloadsWithDownloadIdentifiers:completionBlock:
homeSharingCloudClient
updateJaliscoLibraryWithReason:completionHandler:
isVPPLicensed
shouldBypassVPPLicenseCheck
setITunesStoreID:
author
setAuthor:
redownloadParameters
setBuyParams:
searchBookPurchaseHistoryForiTunesStoreID:assertion:triesLeft:completionBlock:
refreshBookPurchaseHistoryCompletion:
loadBooksForStoreIDs:withCompletionHandler:
setStoreManagedBook:
searchBookPurchaseHistoryForiTunesStoreID:assertion:completionBlock:
initWithArray:copyItems:
memberQueueMoveTransientStatesForward
removePersistenceIdentifier:
T@"DMDManagedMediaManager",R,N
rereadNonStoreBooksManifestCompletionBlock:
rereadStoreBooksManifestCompletionBlock:
setNonStoreManagedBook:
setState:forStoreBookWithiTunesStoreID:
installNonStoreBook:fileExtension:URL:assertion:completionBlock:
installStoreBookWithiTunesStoreID:originator:assertion:completionBlock:
storeBooks
nonStoreBooks
moveTransientStatesForward
removeNonStoreBookWithPersistentID:assertion:completionBlock:
removeStoreBookWithiTunesStoreID:assertion:completionBlock:
uprootWithAssertion:completionBlock:
setMemberQueue:
_memberQueue
_memberQueuePersistentIDToNonStoreBook
_memberQueueiTunesStoreIDToStoreBook
T@"NSObject<OS_dispatch_queue>",&,N,V_memberQueue
T@"NSMutableDictionary",&,N,V_memberQueuePersistentIDToNonStoreBook
T@"NSMutableDictionary",&,N,V_memberQueueiTunesStoreIDToStoreBook
setDownloadKinds:
setPersistenceIdentifier:
initWithManagerOptions:
stringFromNumber:
dataUsingEncoding:
dmd_sha1Hash
base64EncodedStringWithOptions:
fileURLWithPath:
getResourceValue:forKey:error:
setSkipBackupAttribute:toItemAtPath:
_redeemAppWithRedemptionCode:
_installEnterpriseAppForRequest:
_installSystemAppWithBundleIdentifier:
_installStoreAppForRequest:
_setRedemptionCode:
_storeAppFormat
_setState:
_setUnusedRedemptionCode:
_showInstallationFailurePromptIfNeeded
_resetRemovabilityWithBundleIdentifier:
_promptIfNeededWithMessageFormat:success:
_applyManagementPiecesForRequest:
_redownloadDeviceAppForRequest:
descriptionForChangeType:
_redownloadUserAppForRequest:
_promptToSignInAndInstallAppForRequest:
_purchaseFreeAppForRequest:
_attemptSINFSwapForRequest:completion:
_downloadStoreAppForRequest:type:
_getRequiredAppIDFromDisk
stringWithValidatedFormat:validFormatSpecifiers:error:
_showStorePromptToSignInAndInstallAppForRequest:
_canManageBundleIdentifier:
_updateManagementInfoWithBlock:
internal
_manageApp
_promptIfPermittedByPolicyToManageApp:appDisplayName:originator:completion:
_promptToManageApp:appDisplayName:originator:completion:
_attemptSINFSwap
floatValue
numberWithDouble:
dataCapacity
dataAvailable
ethernetMacAddress
wifiAddressData
hasTelephonyCapability
hasCellularDataCapability
hasPersonalHotspotCapability
phoneNumber
mobileSubscriberCountryCode
mobileSubscriberNetworkCode
TQ,R,N
T@"NSNumber",R,C,N
T@"NSData",R,C,N
_systemGroupContainerPathWithGroupIdentifier:
configurationProfilesSystemGroupContainer
_userDirectory
_systemProfileStorageDirectory
stringByAppendingPathComponent:
purchasedBooksDirectory
_managedNonStoreBooksSystemGroupContainer
managedNonStoreBooksDirectory
_systemProfileLibraryDirectory
stringWithCString:encoding:
systemGroupContainerPath
homeDirectoryPath
managedAppsManifest
purchasedBooksManifest
managedStoreBooksManifestPath
managedNonStoreBooksManifestPath
mdmFilePath
removeObserver:forKeyPath:
subOperations
setSubOperations:
sharedDeclarationOperationQueue
managedObjectContext
setPayloadContext:
_requiresNetworkTether
_requiresUnlockedKeychain
_payloadMetadataObjectID
_payloadContext
_subOperations
_stateDictionary
T@"DMDPayloadContext",&,N,V_payloadContext
T@"NSMutableArray",&,N,V_subOperations
T@"NSMutableDictionary",&,N,V_stateDictionary
TB,N,V_requiresNetworkTether
TB,N,V_requiresUnlockedKeychain
T@"DMDConfigurationDatabase",R,N,V_database
T@"NSManagedObjectID",R,C,N,V_payloadMetadataObjectID
assetProvidersByPayloadIdentifier
_assetProvidersByPayloadIdentifier
T@"NSDictionary",C,N,V_assetProvidersByPayloadIdentifier
hasPrefix:
isSubclassOfClass:
entity
initWithEntity:insertIntoManagedObjectContext:
setPayload:
setPayloadDictionary:
applyPayloadDictionary:
validateProperties:
setPendingStatusUpdate:
primitiveValueForKey:
setStateChangeTimestamp:
lastStatusReportTimestamp
changedValues
validateForInsert:
validateForUpdate:
validateForDelete:
fetchRequestForActivePayloadMetadatasFromOrganizationWithIdentifier:withIdentifier:
keyPathsForValuesAffectingStatus
automaticallyNotifiesObserversOfStateDictionary
automaticallyNotifiesObserversOfLastStatusReportTimestamp
setNeedsRefreshStatus
willSave
pendingStatusUpdate
T@"DMDPayload",&,D,N
T@"NSDate",&,D,N
T@"NSDictionary",C,D,N
T@"NSDate",C,D,N
T@"NSSet",C,D,N
incomingPayloadMetadataReferences
T@,&,D,N
playSoundWithOptions:completion:
dmd_userEffectivePoliciesDatabaseURL
initWithPersistentStoreDescriptions:
setShouldAddStoreAsynchronously:
setOption:forKey:
initWithKeyOptions:valueOptions:capacity:
persistentContainer
isPersistentContainerLoaded
isEqualToNumber:
setIsPersistentContainerLoaded:
setInternalContext:
setRegistrationContext:
_loadPersistentStoreIfNeeded:
registrationContext
performBlock:
currentConnection
setObject:forKey:
internalContext
policyTypes
setPolicyTypes:
setModificationDate:
requestPoliciesForTypes:replyHandler:
_performRegistrationBackgroundTask:
sortDescriptorWithKey:ascending:
setSortDescriptors:
effectiveSettings
shield
applications
value
_effectivePolicyForManagedSettingsIdentifier:type:excludedIdentifiers:
webDomains
applicationCategoryPolicy
_effectiveCategoryPoliciesForCategoryShieldPolicy:type:excludedIdentifiersKey:
webDomainCategoryPolicy
account
denyiCloudLogout
numberWithLongLong:
unionSet:
initWithType:defaultPolicy:currentPoliciesByIdentifier:defaultPriority:prioritiesByIdentifier:excludedIdentifiers:
_performBackgroundTask:
excludedContent
specificCategories
downtimeCategoryIdentifiers
_upsertPolicy:forType:identifier:priority:organizationIdentifier:declarationIdentifier:policyToUpdate:managedObjectContext:
_notifyClientsRegisteredForPolicyType:
_removeOrphanedPoliciesFromFetchRequest:managedObjectContext:completionHandler:
hasChanges
emergencyModeQueue
currentCalendar
dateByAddingUnit:value:toDate:options:
_enableEmergencyModeUntilDate:referenceDate:withCompletionHandler:
dateWithTimeIntervalSince1970:
timeIntervalSinceNow
enableEmergencyModeWithCompletionHandler:
enableEmergencyModeForDuration:withCompletionHandler:
disableEmergencyModeWithCompletionHandler:
emergencyModeStatusWithCompletionHandler:
addRegistration:replyHandler:
setEffectivePolicy:forType:identifiers:priority:organizationIdentifier:declarationIdentifier:completionHandler:
removeEffectivePolicyFromOrganizationIdentifier:declarationIdentifier:completionHandler:
_contextsByXPCConnection
_isPersistentContainerLoaded
_internalContext
_registrationContext
_persistentContainer
_emergencyModeQueue
_effectiveSettings
TB,N,V_isPersistentContainerLoaded
T@"NSManagedObjectContext",&,N,V_internalContext
T@"NSManagedObjectContext",&,N,V_registrationContext
T@"NSPersistentContainer",R,N,V_persistentContainer
T@"NSObject<OS_dispatch_queue>",R,N,V_emergencyModeQueue
T@"MOEffectiveSettings",R,N,V_effectiveSettings
modificationDate
registerUserSwitchStakeHolder:
isMultiUser
currentUser
userType
sharedStakeholder
willSwitchUser
inEDUMode
initWithFormat:arguments:
initForOperation:
_retain
_release
dealloc
isParked
exceptionWithName:reason:userInfo:
setIsParked:
operation
taskWithName:reason:
setBlockingTask:
blockingTask
begin
assertionForOperation:
stayAliveThroughHereAtLeast
park
unpark
setOperation:
_isParked
_operation
_blockingTask
TB,N,V_isParked
T@"NSString",&,N,V_operation
T@"UMUserSwitchBlockingTask",&,N,V_blockingTask
eSIMServerURL
scheme
invalidResponseError:
setNumberOfUpdates:
clientBundleIdentifier
_removeRestrictionsWithRequest:error:
_removeProfile:withRequest:completion:
setSubscriptionDeclaration:
_subscriptionDeclaration
T@"CEMEventSubscriptionDeclaration",&,N,V_subscriptionDeclaration
profileIdentifier
removeProfileWithIdentifier:installationType:completion:
removeProtectedProfileAsyncWithIdentifier:installationType:completion:
removeProvisioningProfileWithUUID:outError:
destinationName
destinationDeviceID
password
scanWaitInterval
force
initWithReason:
setRebootType:
shutdownWithOptions:
initWithAction:productKey:error:
action
productKey
productKeyFromStatus:
endOperationWithWrongProductKey:action:
inReplyTo
dmd_createUserDMDDirectoryDataVault
initWithMachServiceName:
_setQueue:
taskServerDelegate
taskOperationServiceListener
policyServerListener
emergencyModeListener
T@"DMDServer",R,N
taskServerListenerDelegate
policyServerListenerDelegate
emergencyModeListenerDelegate
eventStreamDispatcher
_taskServerDelegate
_taskOperationServiceListener
_taskServerListenerDelegate
_policyServerListenerDelegate
_policyServerListener
_emergencyModeListenerDelegate
_emergencyModeListener
_eventStreamDispatcher
T@"DMDTaskServerListenerDelegate",R,N,V_taskServerListenerDelegate
T@"DMDPolicyServerListenerDelegate",R,N,V_policyServerListenerDelegate
T@"NSXPCListener",R,N,V_policyServerListener
T@"DMDEmergencyModeListenerDelegate",R,N,V_emergencyModeListenerDelegate
T@"NSXPCListener",R,N,V_emergencyModeListener
T@"DMDEventStreamDispatcher",R,N,V_eventStreamDispatcher
T@"DMDTaskServerDelegate",R,N,V_taskServerDelegate
T@"NSXPCListener",R,N,V_taskOperationServiceListener
setBoolValue:forSetting:
associatedDomains
configuration
removable
UUIDString
syncToken
decodeObjectOfClass:forKey:
identifiers
setIdentifiers:
_identifiers
TQ,N,V_priority
T@"NSArray",C,N,V_identifiers
seconds
setValue:forSetting:
_storeLoginFailedError
setAuthenticatedAccount:
authenticateResponseType
request:didFailWithError:
requestDidFinish:
authenticateRequest:didReceiveResponse:
_authenticatedAccount
T@"SSAccount",&,N,V_authenticatedAccount
T@"SSAuthenticateRequest",R,C,D,N
currentThread
mainThread
distantFuture
_timerDidFire:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
timeoutTimer
dateWithTimeIntervalSinceNow:
setFireDate:
start
setTimeoutTimer:
_timeoutTimer
T@"SSRequest",C,N,V_request
T@"NSTimer",C,N,V_timeoutTimer
removeAppMetadataForBundleIdentifier:error:
removeAppWithBundleIdentifier:completion:
T@"DMDSUManagerInstallTask",R,N
autoInstallOperation
download
progress
isDone
normalizedPercentComplete
descriptor
productBuildVersion
isInstalling
isDownloading
isDownloadComplete
downloadPercentComplete
setDownload:
installPolicy
setInstallPolicy:
setAutoInstallOperation:
_download
_installPolicy
_autoInstallOperation
T@"SUDownload",&,N,V_download
T@"SUInstallPolicy",&,N,V_installPolicy
T@"SUAutoInstallOperation",&,N,V_autoInstallOperation
Td,R,N
initWithDelegate:clientType:
setSoftwareUpdateServices:
softwareUpdateServices
purgeDownload:
setForced:
setRequestedPMV:
setMDMUseDelayPeriod:
scanForUpdates:withResult:
initWithDescriptor:
setAutoDownload:
setDownloadOnly:
isAutoDownload
isDownloadOnly
startDownloadWithMetadata:withResult:
_dmfDownloadErrorFromSUDownloadError:
installUpdateWithOptions:withResult:
_dmfInstallErrorFromSUInstallError:
downloadAndInstallState:
_dmfStatusErrorFromSUStatusError:
defaultProductKey
removeUpdateWithError:
availableUpdateWithVersion:useDelay:error:
startDownloadWithError:
startInstallWithError:
currentStatusWithError:
T@"SUManagerClient",&,N,VsoftwareUpdateServices
operationWillFinish
operationDidFinish
setConfigurationEngine:
T@"DMDTaskOperationContext",&,N
T@"DMDConfigurationEngine",&,N
T@"NSSet",R,N
_configurationEngine
T@"DMDTaskOperationContext",&,N,V_context
T@"DMDConfigurationEngine",&,N,V_configurationEngine
setClientBundleIdentifier:
setUid:
runAsUser
_runAsUser
_uid
_clientBundleIdentifier
T@"NSString",C,N,V_clientBundleIdentifier
TI,N,V_uid
TB,N,V_runAsUser
_nameForOperationGroup:
_currentLocaleDidChange:
concurrentOperationQueue
serialOperationQueuesByGroup
appendFormat:
deviceStateObserver
boolValueForEntitlement:
regularExpressionWithPattern:options:error:
firstMatchInString:options:range:
rangeAtIndex:
substringWithRange:
_specialCasedRequestNamesToOperationNames
isPermittedOnCurrentPlatform
clientUserInfo
transport
intValue
processIdentifier
server:clientSession:operationForRequest:error:
server:clientSession:didInterruptWithError:
server:clientSession:shouldConnectWithTransport:
server:clientSession:didReceiveNotificationWithName:userInfo:
server:clientSession:enqueueOperation:
server:clientSessionDidConnect:
server:clientSessionDidDisconnect:
server:clientSessionDidInvalidate:
serverDidInvalidate:
initWithPolicyPersistence:activationManager:
_concurrentOperationQueue
_serialOperationQueuesByGroup
_deviceStateObserver
T@"CATOperationQueue",R,N,V_concurrentOperationQueue
T@"NSDictionary",R,N,V_serialOperationQueuesByGroup
T@"DMDDeviceStateObserver",R,N,V_deviceStateObserver
T@"DMDConfigurationEngine",R,N,V_configurationEngine
operationForRequest:targetUID:appleID:transport:error:
effectiveUserIdentifier
setRunAsUser:
initWithXPCConnection:
taskServer
connectWithClientTransport:
initWithTaskServer:
_taskServer
T@"CATTaskServer",R,N,V_taskServer
_testEvent
isFinished
_runWithRequest:metadata:
_endOperationWithBundleIdentifier:
_resumeUpdateForBundleIdentifier:
_promptIfNeededAndUpdateAppForRequest:metadata:
_startUpdateAppForRequest:metadata:
setDidPromptUser:
_setState:forBundleIdentifier:
_showUpdateFailurePromptIfNeededForRequest:metadata:
associatedDomainsEnableDirectDownloads
managementOptions
didPromptUser
localizedStringWithFormat:
initWithBundleIdentifier:state:
_didPromptUser
TB,N,V_didPromptUser
notificationRef
setNotificationRef:
header
defaultButtonTitle
alternateButtonTitle
otherButtonTitle
setOtherButtonTitle:
displayWhenLocked
setDisplayWhenLocked:
timeout
setTimeout:
_notificationRef
_displayWhenLocked
_header
_defaultButtonTitle
_alternateButtonTitle
_otherButtonTitle
_timeout
T@"NSUUID",R,C,N,V_identifier
T@"NSString",C,N,V_header
T@"NSString",C,N,V_message
T@"NSString",C,N,V_defaultButtonTitle
T@"NSString",C,N,V_alternateButtonTitle
T@"NSString",C,N,V_otherButtonTitle
TB,N,V_displayWhenLocked
Td,N,V_timeout
notifications
completionsByIdentifier
_showNextNotification
_dictFromNotification:
_completeNotification:response:
T@"DMDUserNotificationController",R,N
_notificationRef:wasDismissedWithFlags:
_notifications
_completionsByIdentifier
T@"CATOperationQueue",R,N,V_queue
T@"NSMutableArray",R,N,V_notifications
T@"NSMutableDictionary",R,N,V_completionsByIdentifier
title
setTitle:
message
defaultButtonText
setDefaultButtonText:
alternateButtonText
setAlternateButtonText:
otherButtonText
setOtherButtonText:
displayOnLockScreen
setDisplayOnLockScreen:
displayInAppWhitelistModes
setDisplayInAppWhitelistModes:
dismissAfterTimeInterval
setDismissAfterTimeInterval:
completionBlock
setCompletionBlock:
notification
setNotification:
_displayOnLockScreen
_displayInAppWhitelistModes
_title
_message
_defaultButtonText
_alternateButtonText
_otherButtonText
_dismissAfterTimeInterval
_completionBlock
_notification
T@"NSString",&,N,V_identifier
T@"NSString",&,N,V_title
T@"NSString",&,N,V_message
T@"NSString",&,N,V_defaultButtonText
T@"NSString",&,N,V_alternateButtonText
T@"NSString",&,N,V_otherButtonText
TB,N,V_displayOnLockScreen
TB,N,V_displayInAppWhitelistModes
Td,N,V_dismissAfterTimeInterval
T@?,C,N,V_completionBlock
T@,&,N,V_notification
mainQueueDidReceiveAppWhitelistChangedNotification
addObserverForName:object:queue:usingBlock:
cancelAllNotificationsWithCompletionBlock:
sharedConnection
appWhitelistState
cancelNotificationEntriesMatchingPredicate:completionBlock:
predicateWithBlock:
removeObjectsInArray:
displayUserNotificationWithIdentifier:title:message:defaultButtonText:alternateButtonText:otherButtonText:displayOnLockScreen:displayInAppWhitelistModes:dismissAfterTimeInterval:assertion:completionBlock:
T@"DMDUserNotificationManager",R,N
displayUserNotificationWithTitle:message:defaultButtonText:alternateButtonText:otherButtonText:displayOnLockScreen:displayInAppWhitelistModes:dismissAfterTimeInterval:assertion:completionBlock:
promptUserToLogIntoiTunesWithTitle:message:assertion:completionBlock:
removeObjectAtIndex:
validateAppBundleIDs:completion:
initWithBundleIdentifier:propertyKeys:
setIsAppStoreVendable:
setHasUpdateAvailable:
externalVersionIdentifier
setExternalVersionIdentifier:
bundleVersion
shortVersionString
setShortVersion:
diskUsage
staticUsage
setStaticUsage:
dynamicUsage
setDynamicUsage:
onDemandResourcesUsage
setOnDemandResourcesUsage:
sharedUsage
setSharedUsage:
setIsPlaceholder:
isRestricted
setIsRestricted:
vppStateFlagsWithProxy:
setIsUserBasedVPP:
setIsLicenseExpired:
setIsLicenseRevoked:
hasMIDBasedSINF
isDeviceBasedVPP
setIsDeviceBasedVPP:
profileValidated
setIsUPP:
_proxyIsValidated:
setIsValidated:
appClipMetadata
setIsAppClip:
isAppStoreVendable
isBetaApp
setIsBetaApp:
isAdHocCodeSigned
setIsAdHocCodeSigned:
initWithPersistentID:iTunesStoreID:author:title:version:type:state:
initWithCommonName:data:isIdentity:
appleInternal
TB,R,N,GisAppleInternal
productKeyFromBuild:
updateType
humanReadableUpdateName
productSystemName
downloadSize
installationSize
initWithProductKey:humanReadableName:productName:version:build:downloadSize:installSize:isCritical:restartRequired:allowsInstallLater:
isEncrypted
payloadDescription
initWithType:identifier:payloadVersion:displayName:organization:payloadDescription:
profileDescription
isLocked
removalPasscode
initWithUUID:type:identifier:profileVersion:displayName:organization:profileDescription:isManaged:isLocked:hasRemovalPasscode:isEncrypted:signerCertificates:payloads:restrictions:
dataQuota
dataUsed
initWithUsername:dataQuota:dataUsed:hasDataToSync:isCurrentUser:
getFileSystemRepresentation:maxLength:
currentRunLoop
fileDescriptor
dmd_dataWithMappedContentsOfFileHandle:error:
localizedDescription
URLByAppendingPathComponent:isDirectory:
dmd_systemLibraryURL
dmd_systemDMDDirectoryURL
dmd_systemConfigurationEngineDirectoryURL
fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
dmd_userHomeURL
dmd_userLibraryURL
dmd_userDMDDirectoryURL
dmd_userConfigurationEngineDirectoryURL
fileSystemRepresentation
dmd_systemConfigurationDatabaseURL
dmd_userDarwinUserTempDirectoryURL
dmd_setUserDirSuffix:
com.apple.dmd.operation.set-app-extension-uuids
PayloadContent
Code
ErrorChain
Not Allowed
Not Supported
QueryResponses
ErrorResponses
fontURL
%@-%@
imageURL
Pending
Echo
Executed
countryCode
SBParentalControlsMCContentRestrictions
com.apple.springboard
appleId
primaryAccount
com.apple.dmd.budget.didChange
Categories
WebSites
%@.%@-%ld
%@.%@
ActivatedConfigurations
Install
Remove
q24@?0@"NSDictionary"8@"NSDictionary"16
%K = %@
organization.identifier
buddhist
chinese
coptic
ethiopic-amete-alem
ethiopic-amete-mihret
gregorian
hebrew
indian
islamic
islamic-civil
islamic-tbla
islamic-umalqura
iso8601
japanese
persian
SignificantTimeChangeNotification
v8@?0
v32@?0@"NSString"8@"DMDActivationPredicateObserver"16^B24
%@-%ld
request.name
com.apple.dmd-access
DMDAirPlayManager.m
must provide a destination name or deviceID
v16@?0Q8
AVOutputContextSetOutputDevicePasswordKey
avOutputContext
applicationProcessID
avOutputDevice
setOutputDevice:options:
AirPlay
DMFNotifications
Display
Cancel
iPod's screen
iPad's screen
iPhone's screen
Apple TV's output
Mac's screen
device
v32@?0^{__CFArray=}8^v16^{__CFError=}24
v16@?0^{__CFArray=}8
metadataByBundleID
state
flags
RedemptionCode
UnusedRedemptionCode
Attributes
VPNUUID
ContentFilterUUID
DNSProxyUUID
AssociatedDomains
AssociatedDomainsEnableDirectDownloads
Removable
com.apple.dmd.%@.%p
Apps
@8@?0
<%@: %p; Apps: %@>
DMDAppController.m
Invalid parameter not satisfying: %@
manifestURL
completion
v24@?0@"DMDAppMetadata"8@"NSError"16
request
bundleIdentifier
v16@?0@"NSError"8
v24@?0@"NSNumber"8@"NSError"16
v24@?0Q8@"NSError"16
%@ must implement %@
self == %@
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
items
metadata
kind
software
bundle-identifier
title
com.apple.
B24@?0@"NSString"8@"NSNumber"16
B16@?0@"ASDJob"8
managementInformation
v16@?0@"LSApplicationRecord"8
storeItemIdentifier
externalVersionIdentifier
version
shortVersion
staticUsage
dynamicUsage
onDemandResourcesUsage
sharedUsage
installationState
isRestricted
isBlocked
isUserBasedVPP
isDeviceBasedVPP
isLicenseExpired
isLicenseRevoked
isUPP
isValidated
isAppClip
isAppStoreVendable
isBetaApp
isAdHocCodeSigned
hasUpdateAvailable
VPNUUIDString
contentFilterUUIDString
DNSProxyUUIDString
associatedDomains
associatedDomainsEnableDirectDownloads
removable
configuration
feedback
v28@?0B8@"NSArray"12@"NSError"20
com.apple.configuration.managed
com.apple.feedback.managed
v32@?0@"FBSDisplayLayoutMonitor"8@"FBSDisplayLayout"16@"FBSDisplayLayoutTransitionContext"24
v24@?0@"SSAuthenticateResponse"8@"NSError"16
any user license
existing user license
device license
Undefined
override
v36@?0B8@"NSDictionary"12q20@"NSError"28
ASDManagedApplicationChangeTypeNone
ASDManagedApplicationChangeTypeInlineSinfSwap
ASDManagedApplicationChangeTypeMDMAppSinfUpdate
ASDManagedApplicationChangeTypeReDownloadInitiated
ASDManagedApplicationChangeTypeNeedsReDownload
ASDManagedApplicationChangeTypePurchasedFree
DMDAppController+iphoneOS.m
We must have a bundle identifier to be installing a system app
non-nil
mobile
v24@?0@"NSString"8Q16
v32@?0@"NSDictionary"8q16@"NSError"24
_updateForegroundBundleIdentifiers should always be called on the main thread
v24@?0@"SSRedeemCodesResponse"8@"NSError"16
v24@?0@"SSAccount"8@"NSError"16
com.apple.dmd.remove-foreground-app
DMDAppController+Remove+iphoneOS.m
Assertion couldn't be acquired: %@
DMDAppLifeCycle.m
com.apple.dmd.%@.%p(%@).queue
willStartInstalling
didStartInstalling
didCancelInstalling
didPauseInstalling
didFailInstalling
didFinishInstalling
didResumeInstalling
willStartUpdating
willStartUninstalling
didStartUpdating
didCancelUpdating
didPauseUpdating
didFailUpdating
didFinishUpdating
didFailUninstalling
didFinishUninstalling
v16@?0@"LSApplicationProxy"8
DMDAppLifeCycle+iphoneOS.m
request.bundleIdentifier
v24@?0@"NSString"8@"NSError"16
DMDAppOperation.m
v16@?0@"NSManagedObjectContext"8
com.apple.dmd.operation.begin-transaction
com.apple.dmd.operation.clear-activation-lock-bypass-code
com.apple.dmd.operation.clear-restrictions-password
STManagementState
Class getSTManagementStateClass(void)_block_invoke
DMDClearRestrictionsPasswordOperation+iOS.m
Unable to find class %s
void *ScreenTimeCoreLibrary(void)
available
installed
pendingStatusUpdate
com.apple.command.device.information
com.apple.command.device.lock
com.apple.command.device.restart
com.apple.command.management.test
com.apple.command.management.refresh.status
com.apple.asset.font
com.apple.asset.image
com.apple.configuration.account.settings
com.apple.configuration.account.webclip
com.apple.configuration.application.lock
com.apple.configuration.application.settings
com.apple.configuration.application.store
com.apple.configuration.application.store.macos
com.apple.configuration.device.conferenceroomdisplay
com.apple.configuration.event.subscription
com.apple.configuration.legacy.restrictions.apps
com.apple.configuration.management.test
com.apple.configuration.media.settings
com.apple.configuration.network.cellular.settings
com.apple.configuration.passcode.settings
com.apple.configuration.policy.application
com.apple.configuration.policy.category
com.apple.configuration.policy.icloud.account
com.apple.configuration.policy.website
com.apple.configuration.security.settings
com.apple.configuration.system.airdrop
com.apple.configuration.system.camera
com.apple.configuration.system.carplay
com.apple.configuration.system.dateandtime
com.apple.configuration.system.donotdisturb
com.apple.configuration.system.font
com.apple.configuration.system.gamecenter
com.apple.configuration.system.icloud
com.apple.configuration.system.keyboard
com.apple.configuration.system.music
com.apple.configuration.system.ratings
com.apple.configuration.system.search
com.apple.configuration.system.siri
com.apple.configuration.system.tvprovider
com.apple.configuration.system.web
com.apple.configuration.system.web.contentfilter.basic
com.apple.event.management.test
com.apple.activations.basic
com.apple.activations.simple
com.apple.predicate.not
com.apple.predicate.all
com.apple.predicate.any
com.apple.predicate.weeklytimerange
com.apple.predicate.onetime
com.apple.predicate.budget
com.apple.predicate.compositebudget
com.apple.predicate.icloudaccount
com.apple.message.management.test
DMDConfigurationDatabaseModel
momd
<%@: %p
DMDConfigurationDatabase.m
block
DMDConfigurationOrganizationsDidChangeNotification
DMDConfigurationSourceStatusDidChange
DMDConfigurationSourceEventsDidChange
DMDConfigurationEngine.m
database
%@.%p.configuration-engine
v32@?0@"NSString"8@"NSString"16@"NSArray"24
Database:
Engine operations:
Organizations:
%@ must be called from the main thread
Deactivate organization for %@
identifier
v32@?0@"NSString"8@"NSArray"16^B24
Process Declarations for %@
organizationIdentifier
Send Events for %@
Cannot enqueue an operation if we failed to initialize the database.
operation
payloadMetadata.organization
com.apple.dmd.policy.cleanup.org
com.apple.dmd.policy.cleanup.declaration
organization
v16@?0@"NSArray"8
completionHandler
self IN %@
type
DMDConfigurationOrganizationController.m
[self.identifier isEqualToString:organization.identifier]
identifier IN %@
failed
SUBQUERY(incomingPayloadMetadataReferences, $ref, ($ref.available == YES) && ($ref.predicatePayloadMetadata.%K.boolValue == YES)).@count > 0
SUBQUERY(incomingPayloadMetadataReferences, $ref, $ref.predicatePayloadMetadata.%K.boolValue == YES).@count == 0
%K != %@
status
SUBQUERY(incomingPayloadMetadataReferences, $ref, $ref.available == YES).@count = 0
displayName
machServiceName
reportingRequirements
DMDSecureUnarchiveFromConfigurationSourceDataTransformer
v24@?0@"NSURL"8@"NSError"16
v24@?0@"<DMFConfigurationSourceClientInterface>"8@"NSError"16
DMDConfigurationSourceController.m
source
source.identifier
queue
[self.identifier isEqualToString:source.identifier]
listenerEndpoint
v32@?0@"NSDictionary"8@"NSError"16@?<v@?@"NSError">24
com.apple.dmd.operation.create-configuration-organization
request.organizationIdentifier
request.organizationDisplayName
request.organizationType
com.apple.dmd.operation.deactivate-configuration-organization
serverHash
com.apple.dmd.operation.delete-user
request.message
DMDDeviceController+iOS.m
equipmentInfo != nil
client != nil
-[DMDiOSDeviceController _deviceInformationForEquipmentInfo:subscription:withClient:]
could not create CoreTelephonyClient
/private/var/mobile/Library/Application Support/com.apple.dmd-setup-option
hasKeychainUnlockedSinceBoot
isKeychainUnlocked
isNetworkTethered
com.apple.system.config.network_change
v12@?0i8
com.apple.dmd.operation.disable-lost-mode
com.apple.dmd.operation.echo
request.echo
request.resultStatus
com.apple.private.dmd.emergency-mode
com.apple.dmd.operation.enable-lost-mode
request.UUID
com.apple.dmd.operation.end-transaction
DMDEngineDatabaseFixedDigitalHealthUsageEventMetadataKey
isReady
-wal
-shm
DMDEngineDatabaseInitializationOperation.m
Configuration database does not have registered persistent stores
v24@?0@"NSPersistentStoreDescription"8@"NSError"16
DMDEngineDatabaseInitializationOperationContext
DMDEngineDatabaseOperation.m
A database must be provided to %@
%@ should have ended during %@
%@ must override %@
outgoingPayloadMetadataReferences
%@.%@-restrictions
DMDEngineDatabaseProcessingOperation.m
error
Debug
(null)
%@:%@
DMDEngineRegisterConfigurationSourceOperation.m
self != %@
Immediate
Minutely
Hourly
Weekly
Daily
00:00
frequency
localTime
spread
v16@?0@"NSTimer"8
com.apple.dmd.alarm
com.apple.distnoted.matching
com.apple.notifyd.matching
Date
com.apple.alarm
ShouldWake
UserInfo
v16@?0@"NSObject<OS_xpc_object>"8
v16@?0@8
v24@?0@"NSString"8@"NSSet"16
eventType
timestamp
v32@?0@"NSString"8@"DMDEventSubscriptionRegistrationController"16^B24
payloadMetadata
payloadMetadata.organization.identifier = %@ AND payloadMetadata.identifier = %@
DMDSecureUnarchiveFromEventSubscriptionRegistrationDataTransformer
DMDEventSubscriptionRegistrationController.m
subscriptionRegistration
Cannot update subscription controller with a subscription registration with a different identifier
v32@?0@"NSString"8@"<DMDEventTypeStream>"16^B24
com.apple.dmd.operation.fetch-activation-lock-bypass-code
com.apple.dmd.operation.fetch-apps
v24@?0@"NSDictionary"8@"NSError"16
DMDFetchAppsOperation.m
com.apple.dmd.operation.fetch-available-os-updates
default
DMDFetchAvailableOSUpdatesOperation.m
DMDFetchAvailableOSUpdatesOperation: no update returned
com.apple.dmd.operation.fetch-certificates
com.apple.dmd.operation.fetch-classroom-instructor-endpoint
com.apple.dmd.operation.fetch-declaration-capabilities
request.configurationSource
com.apple.dmd.operation.fetch-device-properties
request.propertyKeys
com.apple.dmd.operation.fetch-debug-state
Server:
Apps:
com.apple.dmd.operation.fetch-location
v24@?0@"CLLocation"8@"NSError"16
com.apple.dmd.operation.fetch-managed-books
DMDFetchManagedBooksOperation: run
com.apple.dmd.operation.fetch-organizations
v24@?0@"DMFFetchConfigurationOrganizationsResultObject"8@"NSError"16
com.apple.dmd.operation.fetch-os-update-status
com.apple.dmd.operation.fetch-profiles
com.apple.dmd.operation.fetch-provisioning-profiles
com.apple.dmd.operation.fetch-restrictions
com.apple.dmd.operation.fetch-safari-bookmarks
com.apple.dmd.operation.fetch-security-information
com.apple.dmd.operation.fetch-stream-events
v24@?0@"DMFFetchStreamEventsResultObject"8@"NSError"16
request.startDate
com.apple.dmd.operation.fetch-users
request.licenseType
com.apple.dmd.operation.install-app
com.apple.dmd.operation.install-configuration
request.profile
PayloadType
com.apple.applicationaccess
PayloadIdentifier
%@-restrictions
com.apple.dmd
whitelistedAppBundleIDs
request.subscriptionDeclaration
com.apple.dmd.operation.install-managed-book
request.originator
DMDInstallManagedBookOperation: run
v32@?0@"NSError"8@"MCBook"16@"NSString"24
com.apple.dmd.operation.install-profile
request.profileData
request.managingProfileIdentifier
com.apple.dmd.operation.install-provisioning-profile
com.apple.dmd.operation.invite-user-to-vpp
request.URL
vpp-licensing-invitation-url-pattern
DMDInviteUserToVPPOperation: run
%@ would like to assign apps and books to you.
Allow App and Book Assignment?
Continue
com.apple.dmd.operation.lock-device
DMDManagementPromptWindowMinutes
DMDMaxManagementDenialsBeforeAutomaticRefusal
PromptTimestamps
v16@?0q8
com.apple.dmd.operation.log-out-user
originator
organizationName
serverName
DMDLDLMServiceQueue
DMDLostDeviceLocationManager getCurrentLocationForOriginator:completion:
v16@?0@"NSURL"8
The location of this device was sent to %@ at %@ on %@.
v24@?0@"NSError"8@"SSAccount"16
epub
ibooks
Queued
PromptingForLogin
Updating
Installing
Managed
ManagedButUninstalled
Installed
Uninstalled
Failed
com.apple.mdmd.downloads.media.nonstore
DMDManagedMediaManager: init
Media operations cannot proceed when MDM migration is not complete.
DMDManagedMediaManager Member Queue
v32@?0@"SSDownload"8Q16^B24
Books
Path
-[DMDManagedMediaManager installNonStoreBook:fileExtension:URL:assertion:completionBlock:]
DMDManagedMediaManager+iOS.m
book.persistentID
com.apple.managedconfiguration.mdmd
MediaBypassVPPCheck
v12@?0B8
v24@?0@"NSArray"8@"NSError"16
Book Installation
Sign in to iTunes to allow %@ to manage and install books.
v24@?0@"NSError"8@"MCBook"16
RequiredAppIDForMDM
none
inline SINF swap
MDM app SINF update
re-download initiated
needs re-download
purchased or free
unknown change type (%ld)
v24@?0q8@"NSError"16
DMDMDMv1InstallAppOperation+iphoneOS.m
%@%@
App Installation
Sign in to iTunes to allow %1$@ to manage and install apps.
v16@?0@"DMFAppManagementInformation"8
com.apple.dmd.operation.start-managing-app
App Management Change
Manage
iPhone
iPod
iPad
AppleTV
Watch
AudioAccessory
apple-internal-install
DeviceClass
ProductType
ProductVersion
BuildVersion
marketing-name
SerialNumber
ModelNumber
UniqueDeviceID
UserAssignedDeviceName
DiskUsage
EthernetMacAddress
BluetoothAddress
WifiAddress
WifiAddressData
telephony
cellular-data
personal-hotspot
PhoneNumber
MobileSubscriberCountryCode
MobileSubscriberNetworkCode
systemgroup.com.apple.configurationprofiles
ManagementPromptPolicy.plist
MDMAppManagement.plist
Purchases.plist
/Media/Books/Purchases
ManagedBooks.plist
Library
Managed.plist
LostModeRequest.plist
MDM.plist
ConfigurationProfiles
systemgroup.com.apple.media.books.managed
Identifier
objectID
DMDPayloadActionOperationObservationContext
DMDPayloadActionOperation.m
%@ must be implemented by subclasses
com.apple.command
com.apple.activation
com.apple.asset
com.apple.configuration
com.apple.configuration.policy
requiresNetworkTether
requiresUnlockedKeychain
lastStatusReportTimestamp
stateChangeTimestamp
stateDictionary
DMDPayloadMetadata.m
%@ cannot call %@
DMDSecureUnarchiveFromPayloadMetadataDataTransformer
com.apple.dmd.operation.play-lost-mode-sound
DMDPlayLostModeSoundOperation: run
com.apple.dmd.emergency-mode.alarm
DMDEffectivePolicies
EffectivePolicies
com.apple.dmd.policy.emergency-mode
%K == %@
v24@?0@"NSManagedObjectContext"8@"NSError"16
priority
policy
domain
com.apple.ManagedSettings
com.apple.ManagedSettings.declaration-identifier
declarationIdentifier
(%K IN %@) AND (%K == %@) AND (%K == %@)
(%K == nil) AND (%K == %@) AND (%K == %@)
(%K == %@) AND (%K == %@)
NOT (%K IN %@)
(%K == %@) AND NOT (%K IN %@)
com.apple.LaunchServices.applicationRegistered
isPlaceholder
com.apple.private.dmd.policy
DMDPowerAssertion Queue
unknown
Trying to park a power assertion that's already parked.
Trying to unpark a power assertion that's not parked.
DMDSwitchBlockingTask
com.apple.dmd.operation.refresh-cellular-plans
http
https
request.eSIMServerURL
com.apple.dmd.operation.set-declarations
request.configurationSourceName
com.apple.dmd.operation.remove-app
DMDRemoveAppOperation.m
com.apple.dmd.operation.remove-configuration
request.declarationIdentifier
com.apple.dmd.operation.remove-managed-book
DMDRemoveManagedBookOperation: run
com.apple.dmd.operation.remove-os-update
com.apple.dmd.operation.remove-profile
request.profileIdentifier
com.apple.dmd.operation.remove-protected-profile
com.apple.dmd.operation.remove-provisioning-profile
com.apple.dmd.operation.request-airplay-mirroring
com.apple.dmd.operation.restart-device
dmd restart device
com.apple.dmd.operation.schedule-os-update
DMDScheduleOSUpdateOperation.m
unexpected action value
com.apple.dmd.operation.send-event
request.inRepyTo
request.eventType
com.apple.dmd.operation.set-app-analytics-enabled
com.apple.dmd.operation.set-app-associated-domains-enable-direct-downloads
com.apple.dmd.operation.set-app-associated-domains
com.apple.dmd.operation.set-app-configuration
com.apple.dmd.operation.set-app-removability
com.apple.dmd.operation.set-app-vpn-uuid
com.apple.dmd.operation.set-bluetooth-enabled
com.apple.dmd.operation.set-data-roaming-enabled
request.syncToken
com.apple.dmd.operation.set-device-name
com.apple.dmd.operation.set-diagnostic-submission-enabled
request.type
identifiers
com.apple.dmd.operation.set-maximum-resident-users
com.apple.dmd.operation.set-passcode-lock-grace-period
com.apple.dmd.operation.set-personal-hotspot-enabled
com.apple.dmd.operation.set-voice-roaming-enabled
com.apple.dmd.operation.shut-down-device
dmd shut down device
-[DMDSSRequestDelegate initWithRequest:]
DMDSSRequestDelegate+iOS.m
-[DMDSSRequestDelegate startWithCompletionBlock:]_block_invoke
!self.completionBlock
-[DMDSSRequestDelegate cancel]_block_invoke
self.completionBlock
com.apple.dmd.operation.stop-airplay-mirroring
com.apple.dmd.operation.stop-managing-app
com.apple.dmd.operation.stop-managing-books
DMDStopManagingBooksOperation: run
organization.identifier = %@
OSUpdate
com.apple.mdm
iOSUpdate
v20@?0B8@"NSError"12
v24@?0@"SUDescriptor"8@"NSError"16
v40@?0@"SUDownload"8@"SUInstallPolicy"16@"SUAutoInstallOperation"24@"NSError"32
%@.%p.concurrent
%@.%p.serial.%@
v32@?0@"NSNumber"8@"CATSerialOperationQueue"16^B24
Group: %@
Device state:
DMD serial operations:%@
DMD concurrent operations:
Configuration engine:
DMFServerErrors
^DM[DF](\w+)Request$
DMDTaskServerDelegate.m
DMD%@Operation
Queue must not be nil for operation: %@
FetchConfigurationOrganizations
FetchOrganizations
FetchGlobalRestrictions
FetchRestrictions
FetchInstalledCertificates
FetchCertificates
FetchInstalledProfiles
FetchProfiles
FetchInstalledProvisioningProfiles
FetchProvisioningProfiles
LogoutUser
LogOutUser
MDMv1UpdateApp
UpdateApp
declaration
unspecified
com.apple.dmd.operation.trigger-diagnostics
com.apple.dmd.operation.update-app
App Update
Update
Dismiss
com.apple.dmd.operation.enqueue-commands
DMDUserNotificationController.m
notification
v16@?0@"NSNotification"8
B16@?0@"DMDUserNotificationQueueEntry"8
B24@?0@"DMDUserNotificationQueueEntry"8@"NSDictionary"16
Sign In
DMDUserNotificationManager Queue
Unknown
Primary button selected
Secondary button selected
Tertiary button selected
Dismissed programatically
com.apple.dmd.operation.validate-applications
com.apple.DeviceManagement
ConfigurationEngine
Database
HOME
+[NSFileManager(DMDAdditions) dmd_userHomeURL]_block_invoke
NSFileManager+DMDAdditions.m
Failed to get passwd entry for uid %u: %@ (%d)
Failed to resolve user home directory: %@ (%d)
+[NSFileManager(DMDAdditions) dmd_userDarwinUserTempDirectoryURL]_block_invoke
Failed to initialize darwin user temp directory: %@ (%d)
Failed to resolve darwin user temp directory: %@ (%d)
Images
Font
Policies
+[NSFileManager(DMDAdditions) dmd_createUserDMDDirectoryDataVault]
Failed to create data vault directory: %@
Failed to enable data vault: %@ (%d)
+[NSFileManager(DMDAdditions) dmd_setUserDirSuffix:]
Failed to set the user directory suffix: %@ (%d)
Configurations
DMDSetAppExtensionUUIDsOperation
CEMFontAssetInstallMetadata
CEMAssetProvider
NSObject
NSSecureCoding
NSCoding
CEMFontInstallOperation
DMDRemoteAssetResolutionContext
CEMFontRemoveOperation
DMDAdditions
DMDOperationProvidingAsset
CEMImageAssetInstallMetadata
CEMImageInstallOperation
CEMImageRemoveOperation
DMDAccountUtilities
DMDActivationBudgetObserver
DMDActivationCurfewObserver
DMDActivationiCloudAccountObserver
DMDActivationOneTimeObserver
DMDActivationPayloadMetadata
DMDActivationPredicateAll
DMDActivationPredicateAny
DMDActivationPredicateCompound
DMDActivationPredicateFalse
DMDActivationPredicateNot
DMDActivationPredicateObserver
DMDActivationPredicateObserverManager
DMDActivationPredicateObserverDelegate
DMDEventStreamDispatcherRegistration
DMDActivationPredicateTrue
DMDActivityTransactionOperation
DMDAirPlayManager
DMDAppController
DMDAppLifeCycleObserving
Fetch
Install
DMDiphoneOSAppController
Redeem
Remove
Update
DMDAppLifeCycle
DMDiphoneOSAppLifeCycle
LSApplicationWorkspaceObserverProtocol
DMDAppMetadata
DMDAppOperation
DMDAssetActionOperation
DMDAssetInstallOperation
DMDAssetPayloadMetadata
DMDAssetRemoveOperation
DMDBeginTransactionOperation
DMDBlockOperation
DMDBluetoothManager
DMDClearActivationLockBypassCodeOperation
DMDClearRestrictionsPasswordOperation
DMDCommandActionOperation
DMDRequestProvidingCommand
DMDCommandExecuteOperation
DMDCommandPayloadMetadata
DMDCommandRemoveOperation
DMDConfigurationActionOperation
DMDConfigurationCapabilities
DMDConfigurationDatabase
DMDConfigurationEngine
DMDActivationPredicateObserverManagerDelegate
DMDConfigurationOrganizationControllerDelegate
DMDConfigurationSourceControllerDelegate
DMDEngineDatabaseProcessingOperationDelegate
DMDEngineRegisterConfigurationSourceOperationDelegate
DMDConfigurationInstallOperation
DMDConfigurationOrganization
DMDConfigurationOrganizationController
DMDRemoteAssetResolver
DMDConfigurationPayloadMetadata
DMDRequestProvidingConfiguration
DMDConfigurationRemoveOperation
DMDConfigurationReplaceOperation
DMDConfigurationSource
DMDSecureUnarchiveFromConfigurationSourceDataTransformer
DMDConfigurationSourceAssetResolveOperation
DMDConfigurationSourceController
DMDConfigurationSourceEventsOperation
DMDConfigurationSourceRepresentation
DMDConfigurationSourceStatusUpdateOperation
DMDConfigurationSourceTaskOperation
DMDCoreTelephonyUtilities
DMDCoreTelephonyConnection
DMDCreateConfigurationOrganizationOperation
DMDDeactivateConfigurationOrganizationOperation
DMDDeclarationActionOperation
DMDDeclarationPayloadMetadata
DMDDeleteUserOperation
DMDDeviceController
DMDiOSDeviceController
DMDiphoneOSDeviceController
DMDDeviceStateObserver
DMDDeviceStateProvider
DMDDisableLostModeOperation
DMDEchoOperation
DMDEffectivePolicy
DMDEffectivePolicyInteface
DMDManagedSettingsEffectivePolicy
DMDEmergencyModeListenerDelegate
NSXPCListenerDelegate
DMDEnableLostModeOperation
DMDEndTransactionOperation
DMDEngineCreateConfigurationOrganizationOperation
DMDEngineDatabaseInitializationOperation
DMDEngineDatabaseOperation
DMDEngineDatabaseProcessingOperation
DMDEngineDeactivateConfigurationOrganizationOperation
DMDEngineFetchDeclarationsOperation
DMDEngineProcessStatusOperation
DMDEngineRefreshStatusOperation
DMDEngineRegisterConfigurationSourceOperation
DMDEngineSetDeclarationsOperation
DMDEngineUpdateCommandsOperation
DMDEngineUpdateDeclarationsOperation
DMDEventReportingSchedule
DMDEventStreamDispatcher
DMDEventStreamEvent
DMDEventSubscriptionManager
DMDEventSubscriptionRegistration
DMDSecureUnarchiveFromEventSubscriptionRegistrationDataTransformer
DMDEventSubscriptionRegistrationController
DMDFetchActivationLockBypassCodeOperation
DMDFetchAppsOperation
DMDFetchAvailableOSUpdatesOperation
DMDFetchCertificatesOperation
iphoneOS
DMDFetchClassroomInstructorEndpointOperation
DMDFetchConfigurationSourceSyncTokenOperation
DMDFetchDeclarationCapabilitiesOperation
DMDFetchDeclarationsOperation
DMDFetchDevicePropertiesOperation
DMDFetchDMDStateOperation
DMDFetchLocationOperation
DMDFetchManagedBooksOperation
DMDFetchOrganizationsOperation
DMDFetchOSUpdateStatusOperation
DMDFetchProfilesOperation
DMDFetchProvisioningProfilesOperation
DMDFetchRestrictionsOperation
DMDFetchSafariBookmarksOperation
DMDFetchSecurityInformationOperation
DMDFetchStreamEventsOperation
DMDFetchUsersOperation
DMDInstallAppOperation
DMDInstallConfigurationOperation
DMDInstallEventSubscriptionOperation
DMDInstallEventSubscriptionRequest
DMDInstallManagedBookOperation
DMDInstallProfileOperation
DMDInstallProvisioningProfileOperation
DMDInviteUserToVPPOperation
DMDLockDeviceOperation
DMDManageAppPromptPolicy
DMDLockdownUtilities
DMDLogOutUserOperation
DMDLostDeviceLocationManager
CLLocationManagerDelegate
DMDManagedAssetManager
DMDManagedMediaManager
DMDMDMUtilities
DMDMDMv1InstallAppOperation
DMDMDMv1StartManagingAppOperation
iphoneOS_watchOS
DMDMobileGestalt
DMDNetworkTetherUtilities
DMDPaths
DMDPayload
DMDPayloadActionOperation
DMDPayloadContext
DMDPayloadMetadata
DMDSecureUnarchiveFromPayloadMetadataDataTransformer
DMDPlayLostModeSoundOperation
DMDPolicyPersistence
DMFEmergencyModeRemoteInterface
DMFPolicyRemoteInterface
DMDPolicyRegistration
DMDPolicyServerListenerDelegate
DMDUserSwitchStakeholder
UMUserSwitchStakeholder
DMDPowerAssertion
DMDProcessDeclarationsOperation
DMDProcessStatusOperation
DMDRefreshCellularPlansOperation
DMDRefreshStatusOperation
DMDRegisterConfigurationSourceOperation
DMDRemoveAppOperation
DMDRemoveConfigurationOperation
DMDRemoveEffectivePolicyOperation
DMDRemoveEffectivePolicyRequest
DMDRemoveEventSubscriptionOperation
DMDRemoveEventSubscriptionRequest
DMDRemoveManagedBookOperation
DMDRemoveOSUpdateOperation
DMDRemoveProfileOperation
DMDRemoveProtectedProfileOperation
DMDRemoveProvisioningProfileOperation
DMDRequestAirPlayMirroringOperation
DMDRestartDeviceOperation
DMDScheduleOSUpdateOperation
DMDSendEventOperation
DMDServer
DMDSetAppAnalyticsEnabledOperation
DMDSetAppAssociatedDomainsEnableDirectDownloadsOperation
DMDSetAppAssociatedDomainsOperation
DMDSetAppConfigurationOperation
DMDSetAppRemovabilityOperation
DMDSetAppVPNUUIDOperation
DMDSetBluetoothEnabledOperation
DMDSetDataRoamingEnabledOperation
DMDSetDeclarationsOperation
DMDSetDeviceNameOperation
DMDSetDiagnosticSubmissionEnabledOperation
DMDSetEffectivePolicyOperation
DMDSetEffectivePolicyRequest
DMDSetMaximumResidentUsersOperation
DMDSetPasscodeLockGracePeriodOperation
DMDSetPersonalHotspotEnabledOperation
DMDSetVoiceRoamingEnabledOperation
DMDShutDownDeviceOperation
DMDSSAuthenticationRequestDelegate
SSAuthenticateRequestDelegate
SSRequestDelegate
DMDSSRequestDelegate
DMDStopAirPlayMirroringOperation
DMDStopManagingAppOperation
DMDStopManagingBooksOperation
DMDSubscriptionEvent
DMDSUManagerInstallTask
DMDSUStatus
DMDSUManagerInstallTask_iOS
DMDTaskOperation
DMDTaskOperationProtocol
DMDTaskOperationContext
DMDTaskServerDelegate
DMDConfigurationEngineDelegate
CATTaskServerDelegate
DMDTaskOperationProvider
DMDiPhoneOSTaskServerDelegate
DMDTaskServerListenerDelegate
DMDTestEventStream
DMDEventTypeStream
DMDTriggerDiagnosticsOperation
DMDUpdateAppOperation
DMDUpdateDeclarationsOperation
DMDUpdateEnqueuedCommandsOperation
DMDUserNotification
DMDUserNotificationController
DMDUserNotificationQueueEntry
DMDUserNotificationManager
DMDValidateApplicationsOperation
ASDJob
BundleIdentifier
LSApplicationProxy
MCBook
SecCertificateRef
DMDFeatureFlags
SUDescriptor
MCProfile
UMUser
DMDMappedMemory
DMDUtilities
DMDLegacy
@16@0:8
v32@0:8@16@24
B16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSURL"16@0:8
@"NSData"16@0:8
@"NSNumber"16@0:8
v16@0:8
@"NSURL"
v24@0:8@"NSURL"16
v24@0:8@"NSError"16
@"CEMAssetBaseDescriptor"16@0:8
@"CEMAssetBaseReference"16@0:8
@32@0:8@16@24
@"CEMFontDeclaration"
@"<DMDRemoteAssetResolver>"
@"CEMFontAssetInstallMetadata"
@32@0:8@16^@24
@"CATOperation"32@0:8@"<DMDRemoteAssetResolver>"16^@24
@"CATOperation"32@0:8@"NSDictionary"16^@24
@"CEMImageDeclaration"
@"CEMImageAssetInstallMetadata"
B48@0:8@16@24@32@40
@"USBudget"
@"USUsageMonitor"
@40@0:8@16@24@32
@24@0:8^@16
@64@0:8@16q24q32q40q48@56
q16@0:8
v24@0:8q16
@"NSString"
@"NSSet"
@"NSMutableArray"
@48@0:8@16@24@32@40
@"NSArray"
@"DMDActivationPredicateObserver"
@"<DMDActivationPredicateObserverDelegate>"
v24@0:8@"DMDActivationPredicateObserver"16
v24@0:8@"NSString"16
v32@0:8@"NSString"16@"NSDictionary"24
@"NSArray"16@0:8
@"<DMDActivationPredicateObserverManagerDelegate>"
@"NSMutableDictionary"
B32@0:8@16^@24
@"NSObject<OS_os_transaction>"
B68@0:8@16@24@32d40Q48B56^@60
B32@0:8Q16^@24
^v24@0:8Q16
B48@0:8@16Q24@32^@40
v32@0:8@16@?24
@40@0:8@16d24^@32
@40@0:8@16d24Q32
v24@0:8@"DMDAppLifeCycle"16
B40@0:8@16@24^@32
B24@0:8^@16
v40@0:8@16@24@?32
v64@0:8@16@24@32@40Q48@56
v80@0:8@16@24@32@40@48@56Q64@72
Q24@0:8@16
B40@0:8Q16@24^@32
@"NSObject<OS_dispatch_queue>"
@"DMFOSStateHandler"
v40@0:8@16q24@?32
v60@0:8@16@24@32q40B48@?52
@"FBSDisplayLayoutMonitor"
@32@0:8@16Q24
@"NSOperationQueue"
@"CATStateMachine"
v24@0:8@"NSArray"16
v32@0:8@"NSArray"16@"NSArray"24
@"NSProgress"
v20@0:8B16
@"NSNumber"
@24@0:8@?16
@?16@0:8
v24@0:8@?16
@"BluetoothManager"
@"CATTaskRequest"32@0:8@"DMDPayloadContext"16^@24
@"CATOperation"32@0:8@"DMDPayloadContext"16^@24
@"NSDictionary"32@0:8@"CATTaskResultObject"16@"DMDPayloadContext"24
@48@0:8@16@24@32^@40
v32@0:8@"DMDActivationPredicateObserverManager"16@"NSString"24
v32@0:8@"DMDConfigurationSourceController"16@?<v@?@"NSDictionary"@"NSError"@?<v@?@"NSError">>24
@"NSArray"32@0:8@"DMDEngineDatabaseProcessingOperation"16@"NSString"24
@"<DMDRemoteAssetResolver>"32@0:8@"DMDEngineDatabaseProcessingOperation"16@"NSString"24
v32@0:8@"DMDEngineRegisterConfigurationSourceOperation"16@"<DMDConfigurationSource>"24
@"DMDPolicyPersistence"
@"<DMDConfigurationEngineDelegate>"
@"NSObject<DMDDeviceStateProvider>"
@"NSObject<DMDTaskOperationProvider>"
@"DMDActivationPredicateObserverManager"
@"DMDConfigurationDatabase"
@"CATOperationQueue"
@"NSError"
@"DMDEngineDatabaseInitializationOperation"
@"CATOperation"
@"DMDEventSubscriptionManager"
v24@0:8@"<DMDRemoteAssetResolutionContext>"16
@"<DMDConfigurationOrganizationControllerDelegate>"
@"NSXPCListenerEndpoint"16@0:8
v24@0:8@"NSXPCListenerEndpoint"16
@"DMFReportingRequirements"16@0:8
v24@0:8@"DMFReportingRequirements"16
@"<DMDRemoteAssetResolutionContext>"
@"<DMDConfigurationSourceControllerDelegate>"
@"CATSerialOperationQueue"
@"DMDConfigurationSourceRepresentation"
@"NSXPCListenerEndpoint"
@"DMFReportingRequirements"
v28@0:8B16@?20
@"DMDConfigurationSourceController"
@"NSXPCConnection"
B32@0:8@16@24
{?="version"q"info"^v"retain"^?"release"^?"copyDescription"^?}
^{__CTServerConnection=}
@24@0:8q16
@"NSSet"16@0:8
v24@0:8@"NSSet"16
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"DMFCreateConfigurationOrganizationRequest"
v48@0:8@16@24@32^v40
@56@0:8@16@24@32@40^@48
@"<DMDEngineDatabaseProcessingOperationDelegate>"
@"<DMDTaskOperationProvider>"
@"DMFDeactivateConfigurationOrganizationRequest"
@"DMFFetchDeclarationsRequest"
@"<DMDEngineRegisterConfigurationSourceOperationDelegate>"
@"DMFRegisterConfigurationSourceRequest"
@"DMFSetDeclarationsRequest"
@"DMFUpdateEnqueuedCommandsRequest"
@"DMFUpdateDeclarationsRequest"
v40@0:8@16@24@32
@"NSPointerArray"
@"NSDictionary"
@"NSDate"
@32@0:8@16@?24
@"DMDEventReportingSchedule"
v40@0:8@16Q24@?32
Q32@0:8^d16@24
@20@0:8i16
@"DMDAppMetadata"
v40@0:8@16q24@32
v28@0:8@16i24
v40@0:8@"CLLocationManager"16@"CLLocation"24@"CLLocation"32
v32@0:8@"CLLocationManager"16@"NSArray"24
v32@0:8@"CLLocationManager"16@"CLHeading"24
B24@0:8@"CLLocationManager"16
v40@0:8@"CLLocationManager"16q24@"CLRegion"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconRegion"32
v40@0:8@"CLLocationManager"16@"CLBeaconRegion"24@"NSError"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconIdentityConstraint"32
v40@0:8@"CLLocationManager"16@"CLBeaconIdentityConstraint"24@"NSError"32
v32@0:8@"CLLocationManager"16@"CLRegion"24
v32@0:8@"CLLocationManager"16@"NSError"24
v40@0:8@"CLLocationManager"16@"CLRegion"24@"NSError"32
v28@0:8@"CLLocationManager"16i24
v24@0:8@"CLLocationManager"16
v32@0:8@"CLLocationManager"16@"CLVisit"24
@"CLLocationManager"
@"NSObject<OS_dispatch_source>"
v48@0:8@16B24B28@32@?40
v56@0:8@16@24@32@40@?48
v44@0:8@16@24i32@?36
B28@0:8B16@20
v32@0:8@16q24
@"NSManagedObjectID"
@"DMDPayloadContext"
v32@0:8d16@?24
v24@0:8@?<v@?@"NSError">16
v32@0:8d16@?<v@?@"NSError">24
v24@0:8@?<v@?@"NSNumber"@"NSError">16
v32@0:8@"DMFPolicyRegistration"16@?<v@?@"NSDictionary"@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSDictionary"@"NSError">24
v72@0:8q16@24@32Q40@48@56@?64
B80@0:8q16@24@32Q40@48@56@64@72
@"NSMapTable"
@"NSManagedObjectContext"
@"NSPersistentContainer"
@"MOEffectiveSettings"
@"UMUserSwitchBlockingTask"
@"CEMEventSubscriptionDeclaration"
@"DMDTaskServerDelegate"
@"NSXPCListener"
@"DMDTaskServerListenerDelegate"
@"DMDPolicyServerListenerDelegate"
@"DMDEmergencyModeListenerDelegate"
@"DMDEventStreamDispatcher"
v24@0:8Q16
v32@0:8@"SSRequest"16@"NSError"24
v24@0:8@"SSRequest"16
v32@0:8@"SSAuthenticateRequest"16@"SSAuthenticateResponse"24
@"SSAccount"
@"SSRequest"
@"NSTimer"
d16@0:8
@"SUDownload"
@"SUInstallPolicy"
@"SUAutoInstallOperation"
@36@0:8@16B24^@28
@"SUManagerClient"
@"DMDTaskOperationContext"16@0:8
v24@0:8@"DMDTaskOperationContext"16
@"DMDConfigurationEngine"16@0:8
v24@0:8@"DMDConfigurationEngine"16
@"DMDTaskOperationContext"
@"DMDConfigurationEngine"
I16@0:8
v20@0:8I16
B40@0:8@16@24@32
v48@0:8@16@24@32@40
@"CATTaskOperation"48@0:8@"CATTaskServer"16@"CATTaskSession"24@"CATTaskRequest"32^@40
v40@0:8@"CATTaskServer"16@"CATTaskSession"24@"NSError"32
B40@0:8@"CATTaskServer"16@"CATTaskSession"24@"CATTransport"32
v48@0:8@"CATTaskServer"16@"CATTaskSession"24@"NSString"32@"NSDictionary"40
v40@0:8@"CATTaskServer"16@"CATTaskSession"24@"NSOperation"32
v32@0:8@"CATTaskServer"16@"CATTaskSession"24
v24@0:8@"CATTaskServer"16
#32@0:8@16^@24
#32@0:8@"CATTaskRequest"16^@24
v40@0:8@"CATOperation"16@"DMDTaskOperationContext"24@"DMDConfigurationDatabase"32
@24@0:8Q16
@"DMDDeviceStateObserver"
@52@0:8@16I24@28@36^@44
@"CATTaskServer"
v24@0:8@"CEMEventBase"16
v24@0:8@?<v@?@"NSArray">16
@"DMDEventStreamEvent"24@0:8@"NSDate"16
v32@0:8Q16@24
^{__CFUserNotification=}16@0:8
v24@0:8^{__CFUserNotification=}16
^{__CFUserNotification=}
@"NSUUID"
v32@0:8@16Q24
v32@0:8^{__CFUserNotification=}16Q24
v24@0:8d16
v32@0:8@?16@?24
v88@0:8@16@24@32@40@48B56B60d64@72@?80
v96@0:8@16@24@32@40@48@56B64B68d72@80@?88
v48@0:8@16@24@32@?40
@36@0:8@16B24@28
@28@0:8^{__SecCertificate=}16B24
@44@0:8@16B24@28@36
@28@0:8@16B24
v24@0:8*16
Request validation failed for installing profile: %{public}@
Request validation failed for removing profile: %{public}@
font asset data is nil
image asset data is nil
Request validation failed for setting policy: %{public}@
Request validation failed for removing policy: %{public}@
Predicate type: %{public}@ with unique identifier: %{public}@ failed checking status of Usage Tracking monitor with budget identifier: %{public}@, error: %{public}@
Predicate type: %{public}@ with unique identifier: %{public}@ succeeded checking status of Usage Tracking monitor with budget identifier %{public}@, expired notification times: %{public}@, remaining time: %{public}@ seconds
Predicate type: %{public}@ with unique identifier: %{public}@ evaluated predicate: %{public}@ for Usage Tracking monitor with identifier: %{public}@
Predicate type: %{public}@ with unique identifier: %{public}@ failed stopping Usage Tracking monitor with budget identifier: %{public}@, error: %{public}@
Predicate type: %{public}@ with unique identifier: %{public}@ succeeded stopping Usage Tracking monitor with budget identifier: %{public}@
Predicate type: %{public}@ with unique identifier: %{public}@ failed to extract a budget type
Predicate type: %{public}@ with unique identifier: %{public}@ failed to extract budgeted identifiers
Predicate type: %{public}@ with unique identifier: %{public}@ failed to extract a budget schedule
Predicate type: %{public}@ with unique identifier: %{public}@ extracted calendar identifier: %{public}@, budget type: %{public}@, budgeted identifiers: %{public}@, notification times: %{public}@, budget schedule: %{public}@
Predicate type: %{public}@ with unique identifier: %{public}@ extracted calendar identifier: %{public}@, budgeted application identifiers: %{public}@, budgeted category identifiers: %{public}@, budgeted website identifiers: %{public}@, notification times: %{public}@, budget schedule: %{public}@
Predicate type: %{public}@ with unique identifier: %{public}@ cannot have budget with invalid calendar day: %{public}@ calendar identifier: %{public}@
Predicate type: %{public}@ with unique identifier: %{public}@ cannot have multiple budgets for day: %{public}@ 
Predicate type: %{public}@ with unique identifier: %{public}@ failed starting usage monitor with budget identifier: %{public}@, error: %{public}@
Predicate type: %{public}@ with unique identifier: %{public}@ succeeded starting usage monitor with budget identifier: %{public}@
Predicate type: %{public}@ with unique identifier: %{public}@ evaluated predicate: %d, expired notification times: %{public}@, next start date: %{public}@, next end date: %{public}@, now: %{public}@
Predicate type: %{public}@ with unique identifier: %{public}@ failed to extract predicate with payload calendar identifier: %{public}@, payload notifications times: %{public}@, payload start day: %{public}@, payload start time: %{public}@, payload end day: %{public}@, payload end time: %{public}@
Predicate type: %{public}@ with unique identifier: %{public}@ extracted calendar identifier: %{public}@, notifications times: %{public}@, start day: %ld, start hour: %ld, start minute: %ld, start second: %ld, end day: %ld, end hour: %ld, end minute: %ld, end second: %ld
Predicate type: %{public}@ with unique identifier: %{public}@ will schedule alarm with identifier: %{public}@ to fire at date: %{public}@, epoch time in nano seconds: %lld
Predicate type: %{public}@ with unique identifier: %{public}@ failed to calculate the next curfew boundary date for next start date: %{public}@, next end date: %{public}@
Predicate type: %{public}@ with unique identifier: %{public}@ evaluated predicate: %d, DSID %{public}@, primary account DSID %{public}@
Predicate type: %{public}@ with unique identifier: %{public}@ extracted DSID: %{public}@
Predicate type: %{public}@ with unique identifier: %{public}@ evaluated predicate: %d, end date: %{public}@, now: %{public}@
Predicate type: %{public}@ with unique identifier: %{public}@ failed extracting: %{public}@ into a valid end date
Predicate type: %{public}@ with unique identifier: %{public}@ must have an end date
Predicate type: %{public}@ with unique identifier: %{public}@ extracted seconds: %f, end time string: %{public}@, end date: %{public}@, now: %{public}@
Predicate type: %{public}@ with unique identifier: %{public}@ will schedule alarm with identifier: %{public}@ to fire at date: %{public}@, epoch time in nano seconds: %lld, now: %{public}@
Predicate type: %{public}@ with unique identifier: %{public}@ cannot scheduled alarm to fire at date: %{public}@, now: %{public}@
Predicate type: %{public}@ with unique identifier: %{public}@ evaluated predicate: %d
Handling alarm with identifier: %{public}@
Handling notify matching notification with name: %{public}@
Could not read app management plist at path: %{public}@, error: %{public}@
Get bundle identifier for manifest URL from: %{public}@
Get bundle identifier for request: %{public}@
Get bundle identifier for store item identifier: %{public}@
Get metadata for non-enterprise app request: %{public}@
Could not write app management plist, error: %{public}@
Could not write app management plist, unknown error
Failed to set bundle identifiers %{public}@ for personaID %{public}@ with error: %{public}@
Set VPN UUID for bundle identifier: %{public}@
Set associated domains for bundle identifier: %{public}@
Set associated domains enable direct downloads for bundle identifier: %{public}@
Set removability for bundle identifier: %{public}@
Could not get removability for bundle identifier: %{bundleIdentifier}@, error: %{public}@
Could not set removability for bundle identifier: %{bundleIdentifier}@, error: %{public}@
Set VPN UUID, associated domains, configuration, and management information for bundle identifier: %{public}@
Could not set VPN UUID for app: %{public}@, error: %{public}@
Could not set content filter UUID for app: %{public}@, error: %{public}@
Could not set DNS proxy UUID for app: %{public}@, error: %{public}@
Could not set associated domains for app: %{public}@, error: %{public}@
Could not set associated domains enable direct downloads for app: %{public}@, error: %{public}@
Could not set configuration for app: %{public}@, error: %{public}@
Could not set management options for bundle identifier: %{public}@, error: %{public}@
Set state: %{public}@, for bundle identifier: %{public}@
Advance transient app states
Could not remove management information for bundle identifier: %{public}@, error: %{public}@
Could not set state to %{public}@ for bundle identifier: %{public}@, error: %{public}@
Could not set management information for bundle identifier: %{public}@, error: %{public}@
Clean up stale app states
Removing lifecycle observer for an app that is no longer managed: %{public}@
Observed change in life cycle from old state: %{public}@ to missing new state for bundle identifier: %{public}@
Observed change in life cycle from old state: %{public}@ to new state: %{public}@ for bundle identifier: %{public}@
Could not set new state: %{public}@, for bundle identifier: %{public}@, error: %{public}@
Set metadata for bundle identifier: %{public}@
Could not write management info to disk for bundle identifier: %{public}@
Get metadata for manifest URL from: %{public}@
Resume app installation for bundle identifier: %{public}@
Install device licensed app for request: %{public}@
Install user licensed app for request: %{public}@
Install free app for request: %{public}@
Add termination assertion for bundle identifier: %{public}@
Remove termination assertion for bundle identifier: %{public}@
Send app store request for bundle identifier: %{public}@, store item identifier: %{public}@, type: %{public}@, download: %{public}@, persona: %{public}@
Send app store request result: success: %{public}@, metadata: %{public}@, change type: %{public}@, error: %{public}@
persona:%{public}@ -> accountIdentifier:%{public}@
persona:%{public}@ -> accountIdentifier:<none>
Set configuration: %{public}@, for bundle identifier: %{public}@
container_acquire_sandbox_extension %{public}@ succeeded for path '%{public}@'
container_acquire_sandbox_extension %{public}@ failed, error %llu, path '%{public}@'
Could not acquire sandbox extension for app %{public}@ to read feedback. Attempting to read anyway. Error: %llu
Could not acquire app container path for app %{public}@ to read feedback.
Feedback is not a dictionary for bundle identifier: %{public}@
Set feedback: %{public}@, for bundle identifier: %{public}@
Could not acquire sandbox extension for app %{public}@ to write feedback. Attempting to write anyway. Error: %llu
Could not acquire app container path for app %{public}@ to write feedback.
Get metadata for bundle identifier: %{public}@, store item identifier: %{public}@, persona: %{public}@
Get metadata with device lookup for bundle identifier: %{public}@, store item identifier: %{public}@, persona: %{public}@
Could not get metadata: %{public}@
Update foreground bundle identifiers: %{public}@
Updating foreground app for request: %{public}@, so will take termination assertion
We will need to restart the app after updating bundle identifier: %{public}@
Start updating enterprise app with manifest URL from: %{public}@
Start updating non-enterprise app for request: %{public}@, new install request: %{public}@
Update ended for bundle identifier: %{public}@
Restart app with bundle identifier: %{public}@
Could not restart app: %{public}@, error: %{public}@
Initialize app life cycle with bundle identifier: %{public}@
Could not initialize app lifecycle because no LSApplicationRecord for bundle identifier %{public}@, error: %{public}@
App lifecycle for %{public}@
calculated install state:%{public}@
is installed: %{public}@
is placeholder: %{public}@
install type: %lu
install progress install state: %lu
App lifecycle for %{public}@ (no proxy)
assumed install state:%{public}@
lifecycle event: [%{public}@] uninstalled -> applicationsWillInstall -> willStartInstalling
lifecycle event: [%{public}@] installed -> applicationsWillInstall -> willStartUpdating
lifecycle event: [%{public}@] <%{public}@> -> applicationsWillInstall -> <no change>
lifecycle event: [%{public}@] uninstalling -> applicationInstallsDidStart -> didFinishUninstalling (special case)
lifecycle event: [%{public}@] uninstalling -> applicationInstallsDidStart -> <no change> (not special case)
lifecycle event: [%{public}@] uninstalled -> applicationInstallsDidStart -> willStartInstalling -> didStartInstalling
lifecycle event: [%{public}@] queued -> applicationInstallsDidStart -> didStartInstalling
lifecycle event: [%{public}@] installed -> applicationInstallsDidStart -> willStartUpdating -> didStartUpdating
lifecycle event: [%{public}@] queued -> applicationInstallsDidStart -> didStartUpdating
lifecycle event: [%{public}@] <%{public}@> -> applicationInstallsDidStart -> <no change>
lifecycle event: [%{public}@] installing -> applicationInstallsDidChange -> didChangeInstallingProgress
lifecycle event: [%{public}@] updating -> applicationInstallsDidChange -> didChangeUpdatingProgress
lifecycle event: [%{public}@] <%{public}@> -> applicationInstallsDidChange -> <no change>
lifecycle event: [%{public}@] installing -> applicationInstallsDidPause -> didPauseInstalling
lifecycle event: [%{public}@] updating -> applicationInstallsDidPause -> didPauseUpdating
lifecycle event: [%{public}@] <%{public}@> -> applicationInstallsDidPause -> <no change>
lifecycle event: [%{public}@] installation paused -> applicationInstallsDidResume -> didResumeInstalling
lifecycle event: [%{public}@] update paused -> applicationInstallsDidResume -> didResumeUpdating
lifecycle event: [%{public}@] <%{public}@> -> applicationInstallsDidResume -> <no change>
lifecycle event: [%{public}@] <installation queued | installing | installation paused> -> applicationInstallsDidCancel -> didCancelInstalling
lifecycle event: [%{public}@] <update queued | updating | update paused> -> applicationInstallsDidCancel -> didCancelUpdating
lifecycle event: [%{public}@] <%{public}@> -> applicationInstallsDidCancel -> <no change>
lifecycle event: [%{public}@] installation queued -> applicationsDidFailToInstall -> didStartInstalling -> didFailInstalling
lifecycle event: [%{public}@] <installing | installation paused> -> applicationsDidFailToInstall -> didFailInstalling
lifecycle event: [%{public}@] update queued -> applicationsDidFailToInstall -> didStartUpdating -> didFailUpdating
lifecycle event: [%{public}@] <updating | update paused> -> applicationsDidFailToInstall -> didFailUpdating
lifecycle event: [%{public}@] <%{public}@> -> applicationsDidFailToInstall -> <no change>
lifecycle event: [%{public}@] installation queued -> applicationsDidInstall -> didStartInstalling -> didFinishInstalling
lifecycle event: [%{public}@] installing -> applicationsDidInstall -> didFinishInstalling
lifecycle event: [%{public}@] installation paused -> applicationsDidInstall -> didResumeInstalling -> didFinishInstalling
lifecycle event: [%{public}@] update queued -> applicationsDidInstall -> didStartUpdating -> didFinishUpdating
lifecycle event: [%{public}@] updating -> applicationsDidInstall -> didFinishUpdating
lifecycle event: [%{public}@] update paused -> applicationsDidInstall -> didResumeUpdating -> didFinishUpdating
lifecycle event: [%{public}@] <%{public}@> -> applicationsDidInstall -> <no change>
lifecycle event: [%{public}@] installed -> applicationsWillUninstall -> willStartUninstalling
lifecycle event: [%{public}@] <installation queued | installing | installation paused> -> applicationsWillUninstall -> didCancelInstalling
lifecycle event: [%{public}@] <update queued | updating | update paused> -> applicationsWillUninstall -> didCancelUpdating
lifecycle event: [%{public}@] <%{public}@> -> applicationsWillUninstall -> <no change>
lifecycle event: [%{public}@] uninstalling -> applicationsDidFailToUninstall -> didFailUninstalling
lifecycle event: [%{public}@] <%{public}@> -> applicationsDidFailToUninstall -> <no change>
lifecycle event: [%{public}@] uninstalling -> applicationsDidUninstall -> didFinishUninstalling
lifecycle event: [%{public}@] <installation queued | installing | installation paused> -> applicationsDidUninstall -> didCancelInstalling
lifecycle event: [%{public}@] <update queued | updating | update paused> -> applicationsDidUninstall -> didCancelUpdating
lifecycle event: [%{public}@] <%{public}@> -> applicationsDidUninstall -> <no change>
App requests must have only one of bundle identifier, store item identifier, or manifest URL
%{public}@: Failed to initialize install operation for asset payload: %{public}@
%{public}@: Asset will install
%{public}@: Asset install operation failed: %{public}@
%{public}@: Installed asset successfully
%{public}@: Failed to initialize configuration payload for asset: %{public}@
%{public}@: Asset class (%{public}@) does not implement %{public}@
%{public}@: Uninstalled asset did remove successfully
%{public}@: Failed to initialize remove operation for installed asset payload: %{public}@
%{public}@: Installed asset will be removed
%{public}@: Failed to remove asset: %{public}@
%{public}@: Removed asset successfully
DMFBeginTransactionRequest is deprecated please use DMDActivityTransactionOperation instead
%{public}@: Failed to initialize configuration payload for command: %{public}@
%{public}@: %{public}@ does not conform to %{public}@
%{public}@: Failed to create operation from request for command execution: %{public}@
%{public}@: Failed to create request for command execution: %{public}@
%{public}@: Execute command will start
%{public}@: Execute command failed: %{public}@
%{public}@: Executed command successfully
Failed to initialize command payload for command removal %{public}@: %{public}@
Command did remove successfully %{public}@
Failed to send %lu events from subscription manager
Successfully sent %lu events from subscription manager
Engine did resume
Engine will suspend
Engine enqueuing operation to set declarations from %{public}@
Engine enqueuing operation to update declarations from %{public}@
Engine enqueuing operation to fetch declarations for %{public}@
Failed to clear failed state for existing declarations: %{public}@
process status operation failed with error: %{public}@
Failed to fetch payload metadata corresponding to %{public}@
Failed to save subscription to database %{public}@
Failed to fetch registration corresponding to %{public}@
Failed to delete subscription from database %{public}@
Could not fetch organizations from database: %{public}@
Could not find organization with identifier: %{public}@
Failed to save event in database: %{public}@
Engine will suspend due to error: %{public}@
Engine enqueuing operation to process pending declarations in database
Database processing operation failed with error: %{public}@
Failed to load organizations from database: %{public}@
Failed to update subscription registrations: %{public}@
Failed to load organizations from database while scrubbing policy orphans: %{public}@
Failed to fetch declarations while scrubbing policy orphans %{public}@
Declaration %{public}@ does not belong to an organization
Found policies orphaned from any known organization. Removed identifiers %{public}@
Found policies orphaned from any known declarations. Removed identifiers %{public}@
failed to fetch declarations pending status update %{public}@
failed to update status %{public}@
failed to fetch declarations to update their lastStatusUpdateTimestamp %{public}@
failed to save last updated timestamp in database %{public}@
declaration update operation failed with error: %{public}@
status update operation failed with error: %{public}@
Failed to fetch queued events for organization '%{public}@': %{public}@
failed to send event %{public}@
failed to delete events from database: %{public}@
Registering new configuration source %{public}@
Re-registering configuration source %{public}@
%{public}@: Failed to initialize configuration payload for configuration install: %{public}@
%{public}@: Failed to create request for configuration install: %{public}@
%{public}@: Failed to create operation from request for configuration install for %{public}@
%{public}@: Configuration will install
%{public}@: Ignoring expected removal error: %{public}@
%{public}@: Configuration failed install: %{public}@
%{public}@: Configuration did install successfully 
%{public}@ does not respond to %{public}@
%{public}@: Failed to initialize configuration payload for configuration remove: %{public}@
%{public}@: Uninstalled configuration did remove successfully
%{public}@: Failed to create request for installed configuration remove: %{public}@
%{public}@: Installed configuration did remove successfully
%{public}@: Failed to create operation from request for installed configuration removal: %{public}@
%{public}@: Installed configuration will remove
%{public}@: Configuration failed remove: %{public}@
%{public}@: Configuration did remove successfully
%{public}@: Failed to initialize configuration payload for configuration replace: %{public}@
%{public}@: Failed to create request for configuration replace: %{public}@
%{public}@: Failed to create configuration replace operation for request: %{public}@
%{public}@: Configuration will replace
%{public}@: Configuration failed replace: %{public}@
%{public}@: Configuration did replace successfully
%{public}@ failed to initate connection to resolve asset %{public}@: %{public}@
%{public}@ failed to resolve asset %{public}@: %{public}@
%{public}@ successfully resolved asset %{public}@
Reporting status to %{public}@
Reporting events to %{public}@
%{public}@ failed to fetch events %{public}@
%{public}@ skipping events because there are no updates to report
%{public}@ failed to send events remote proxy could not be created: %{public}@
%{public}@ failed to send events: %{public}@
%{public}@ successfully sent events
delegate does not conform to %{public}@
%{public}@ failed to fetch status update %{public}@
%{public}@ skipping status update because there are no updates to report
%{public}@ failed to send status updates remote proxy coun't be created: %{public}@
%{public}@ failed to send status updates: %{public}@
%{public}@ successfully sent status updates
Connected successfully to anonymous connection
Failing establishing anonymous connection with error: %{public}@
Connected successfully to named connection
Failing establishing connection to named service %{public}@ with error: %{public}@
device supports voice roaming: %{public}@
Could not get battery level. IOReturn Error Code: %d
getPreferredDataSubscriptionContextSync: in %s failed: %{public}@
getPhoneNumber:error: in %s failed: %{public}@
getPhoneNumber:error: in %s returned nil number
getSimLabel:error: in %s failed: %{public}@
getSimLabel:error: in %s label.text is nil
getSimLabel:error: in %s label.unique_id is nil
copyCarrierBundleVersion:error: in %s failed: %{public}@
getLocalizedOperatorName:error: in %s failed: %{public}@
copyMobileCountryCode:error: in %s failed: %{public}@
copyMobileNetworkCode:error: in %s failed: %{public}@
getMobileEquipmentInfo: failed: %{public}@
mobileEquipmentInfoList.meInfoList was unexpectedly nil
equipmentInfo has an unknown slotId, ignoring
equipmentInfo with duplicate slotId, discarding first instance
getSubscriptionInfoWithError: in %{public}@ failed: %{public}@
ServiceSubscriptionInfo subscriptionsInUse is unexpectedly nil
subscription has an unknown slotId, ignoring
subscription with duplicate slotId, discarding first instance
Can't query for device locator lock state. Error: %{public}@
Can't query for activation lock state. Error: %{public}@
Detected network change
Device is not in lost mode. Reporting success regardless.
Disabling lost mode...
Device was located while in lost mode. Alerting user with message 
%{public}@
Could not disable lost mode: %{public}@
Unexpected use of excludedIdentifiers
Client %{public}@ does not have required %{public}@ entitlement
DMFEndTransactionRequest is deprecated please use DMDActivityTransactionOperation instead
failed to fetch organizations of type 
%{public}@
: %{public}@
failed to fetch existing organizations with identifier 
%{public}@
: %{public}@
organization of type %{public}@ already exists
failed to load persistent stores: %{public}@
successfully loaded configuration database
removing legacy database...
failed to remove legacy database: %{public}@
deleted legacy database
unable to load persistent store %{public}@: %{public}@
successfully loaded persistent store: %{public}@
Could not set persistent store backup flag %{public}@: %{public}@
persistent store %{public}@ has not been fixed up yet
checking database for deprecated class
configuration database has been deprecated, destroying persistent stores and reloading
unable to remove persistent store %{public}@: %{public}@
%{public}@ failed to fetch configuration organizations: %{public}@
Deleting deactivated organization %@
%{public}@ preprocessing failed: %{public}@
Processing operation failed to commit changes: %{public}@
Failed to preproccess database while fetching all payloads: %{public}@
%{public}@: Failed to deserialize configuration engine model: %{public}@
Failed to fetch asset with identifier (%{public}@): %{public}@
%{public}@ failed to fetch configurations: %{public}@
Active restrictions: %@
%{public}@ failed to resolve restrictions plist URL
%{public}@ failed to write restrictions: %{public}@
Processing: Failed to fetch commands to execute %{public}@
%{public}@: Cancelling enqueued %{public}@ so we can enqueue an execute command operation
Processing: Failed to fetch commands to remove %{public}@
%{public}@: Cancelling enqueued %{public}@ so we can enqueue an remove command operation
Processing: Failed to fetch commands to delete %{public}@
--- Commands pending execution ---
--- Commands pending removal ---
--- Commands pending deletion ---
%{public}@
--- Enqueued command action operations ---
Failed to process activations: %{public}@
Failed to parse activation payload (%{public}@): %{public}@
Activation predicate with unique identifier %{public}@ for organization (%{public}@) is nil
Failed to evaluate activation predicate with unique identifier %{public}@ for organization (%{public}@): %{public}@ using last predicate evaluation %d
Failed to create activation predicate observer with unique identifier %{public}@ for organization (%{public}@) using last predicate evaluation %d
Failed to fetch available configurations for organization (%{public}@): %{public}@
Unknown activation type: %{public}@
Processing: Failed to fetch declarations pending removal %{public}@
Remove %{public}@: Declaration remove operation already enqueued, skipping
Remove %{public}@: Cancelling enqueued %{public}@ so we can enqueue a remove operation
Enqueued remove operation: %{public}@
Processing: Failed to fetch declarations pending install %{public}@
Install %{public}@: Declaration install operation already enqueued, skipping
Install %{public}@: Cancelling enqueued %{public}@ so we can enqueue an install operation
Enqueued configuration install operation: %{public}@
Install %{public}@: Cancelling enqueued %{public}@ so we can enqueue an asset install operation
Enqueued asset install operation: %{public}@
Processing: Failed to fetch declarations pending delete %{public}@
--- Declarations pending install ---
--- Declarations pending removal ---
--- Declarations pending deletion ---
--- Enqueued declaration action operations ---
Failed to fetch payload metadata for organization %{public}@
Refreshed %lu status items for organization %{public}@
Failed to fetch existing declarations: %{public}@
Failed to initialize declarations: %{public}@
Start set declarations for %{public}@
Declaration already present, skipping: %{public}@
Failed to save changes: %{public}@
Failed to instantiate payload metadata from payload dictionary: %{public}@
Failed to fetch existing declarations for removal: %{public}@
Marking configuration for removal: %{public}@
Failed to fetch existing declarations for update: %{public}@
Failed to initialize declarations for update: %{public}@
Declaration already installed, skipping: %{public}@
Unknown event stream frequency %{public}@, defaulting to Daily
Received xpc stream event (alarm) with name: %{public}@
Received xpc stream event (distributed notification matching) with name: %{public}@ user info: %{public}@
Received xpc stream event (notify matching) with name: %{public}@
Received effective settings change for event: %{public}@, groups: %{public}@
Unknown event stream type %{public}@, skipping
Fetch app with manifest url from: %{public}@
Fetch apps with bundle ids: %{public}@, store item id: %{public}@
Could not delete feedback for bundle identifier: %{public}@
fetch-available-os-updates starting
fetch-available-os-updates: product version = %@, use delay = %@
fetch-available-os-updates done
fetch-os-update-status starting
fetch-os-update-status end with error: %@
fetch-os-update-status done
Start installing enterprise app with manifest URL from: %{public}@
Start installing non-enterprise app for request: %{public}@
Could not serialize profile: %{public}@
Could not retrieve restrictions dictionary from payload: %{public}@
Could not process restriction heuristics for payload: %{public}@
Could not apply restrictions: %{public}@
Invite user to VPP: %{private}@
Invalid VPP invitation URL
The app store is not allowed, so we cannot invite to VPP
Error writing manage app prompt policy data to file: %{public}@
Error generating manage app prompt policy data from dictionary: %{public}@
Location Manager timed out
Could not remove device last located file: %@
Could not read device last location requested file: %@
Could not read device last located time interval: %@
Device last located on %{public}@. Creating localized message.
Location Manager returned a location.
Location Manager returned a location, but we can't report it because we can't record that fact. Throwing location information away.
Location Manager failed: error=%{public}@
Could not write device last located time interval URL resourve values: %@
Could not write device last located time interval
Could not read device last located time interval for update: %@
Cleaning up media manager manifests
Book failed to download: %{public}@
Error: %{public}@
Book completed downloading: %{public}@
Failed to set backup exclusion on managed books directory
Cannot write book without persistent ID to manifest: %{public}@
Cannot write book without iTunes Store ID to manifest: %{public}@
Cannot cancel downloads. Ignoring. Error: %{public}@
Starting installation of book: %{public}@
Replacing a book of kind %{public}@ with a book of kind %{public}@ is not allowed.
Beginning download of book %{public}@
Refreshing book purchase history and trying again.
Searching book purchase history for iTunes Store ID %{public}@
Could not look up book purchase history. Error: %{public}@
Found book: %{public}@
We found a book, but it was not VPP-licensed. Book %{public}@
Could not find book in VPP purchase history.
Starting installation of book with iTunes Store ID %{public}@
Removing %u non-store books because we have reported their transient state.
Removing %lu store books because we have reported their transient state.
Canceling all book downloads.
Removing managed books.
Error excluding %{public}@ from backup. Path does not exist.
Error excluding %{public}@ from backup %{public}@
Failing install app request because we are already prompting the user about bundle identifier: %{public}@
Start redeeming app with bundle identifier: %{public}@
Error associating app with persona: %{public}@, %{public}@
Start installing system app with bundle identifier: %{public}@
Attempting re-download of app because metadata says it is necessary: %{public}@
Attempting SINF swap to install app: %{public}@
SINF swap attempt complete for %{public}@, change type = %{public}@, error = %{public}@
Attempting to re-download of device-licensed app: %{public}@
Attempting to re-download a user-licensed app where we know the license exists: %{public}@
Failing install of app because free purchases are not allowed: %{public}@
Attempting to purchase free app: %{public}@
Error attempting SINF swap: %{public}@
attempt SINF swap, persona:%{public}@
appstored response for: %{public}@, metadata=%{public}@
Error getting app: %{public}@, %{public}@
_downloadStoreAppForRequest persona:%{public}@
Prompting user to install app: %{public}@
Invalid message format, error: %{public}@
Show our prompt to sign in
Show store prompt to sign in
Show user installation failure prompt
Set redemption code for bundle identifier: %{public}@
Set unused redemption code for bundle identifier: %{public}@
Update management information for bundle identifier: %{public}@
Could not update management info for bundle identifier: %{public}@, error: %{public}@
Error attempting to reset removability. Error: %{public}@
Request to manage app fast-tracked, supervised: %{public}@ internal: %{public}@
Request to manage app %{public}@ approved by user.
Prompt to manage app %{public}@ blocked by policy. Too many requests.
Request to manage app %{public}@ denied.
Marking an app in the installing state as managed but uninstalled
Associating app %{public}@ with persona %{public}@ in UserManagement
Unknown device type %{private}@
Failed to get profiles system group container
Failed to get managed books system group container
System group container for %{public}@ path is %{public}s
Error getting system group container for %{public}@: %llu
Payload has invalid type prefix (%{public}@) defaulting to generic payload metadata
Failed to fetch organization matching identifier (%{public}@): %{public}@
Could not play sound in MDM Lost Mode: %{public}@
Could not load effective policy persistent store, the device is locked, unlock it and this should never happen again.
Could not load effective policy persistent store with error: %{public}@
Error loading persistent store: %{public}@
Error fetching existing policy registration: %{public}@
Updating existing registration %{public}@ with identifier %{public}@
Adding new registration %{public}@ with identifier %{public}@
Error saving policy registration %{public}@: %{public}@
Error fetching existing policy by type: %{public}@
Error fetching existing policies: %{public}@
Error saving policies: %{public}@
Updating existing policy %{public}@ of type %{public}@ identifier %{public}@
Adding new policy %{public}@ of type %{public}@
Successfully removed policy types %{public}@ for declaration %{public}@
Error removing policies types %{public}@ for declaration %{public}@: %{public}@
Error fetching orphanied policies: %{public}@
Removing orphaned policy %{public}@ in organization %{public}@
Successfully removed orphaned policy types %{public}@ for declarations %{public}@
Could not remove orphaned policies types %{public}@ for declarations %{public}@: %{public}@
Posting notification for registration %{public}@
Error fetching registrations to notify: %{public}@
Failed to enable Emergency Mode because end date %@{public}@ is in the past
Failed to enable Emergency Mode because end date %@{public}@ does not have a positive Unix Epoch time
Enabling Emergency Mode until: %{public}@
Disabling Emergency Mode
Emergency Mode is not set
Emergency Mode does not have an end date
Emergency Mode ended on %{public}@, %f seconds ago
Emergency Mode will end on %{public}@, %f seconds from now
Handling distributed notification with name: %{public}@
Handling managed settings group change: %{public}@
Client %@ does not have required com.apple.private.dmd.policy entitlement
Beginning power assertion, operation: %{public}@
Ending power assertion, operation: %{public}@
unable to register configuration source because client doesn't have a valid entitlement for application-identifier
Could not remove VPN UUID for bundle identifier: %{bundleIdentifier}@, error: %{public}@
Could not remove content filter UUID for bundle identifier: %{bundleIdentifier}@, error: %{public}@
Could not remove DNS proxy UUID for bundle identifier: %{bundleIdentifier}@, error: %{public}@
Could not remove associated domains for bundle identifier: %{bundleIdentifier}@, error: %{public}@
Could not remove associated domains enable direct downloads for bundle identifier: %{bundleIdentifier}@, error: %{public}@
Could not remove configuration for bundle identifier: %{bundleIdentifier}@, error: %{public}@
Could not remove management information for bundle identifier: %{bundleIdentifier}@, error: %{public}@
Could not remove mapping to persona for for bundle identifier: %{bundleIdentifier}@, error: %{public}@
Remove app with bundle identifier: %{public}@
Cancel app installation with bundle identifier: %{public}@
Start uninstalling app with bundle identifier: %{public}@
Cancel app update with bundle identifier: %{public}@
Could not remove restrictions: %{public}@
remove-os-update starting
remove-os-update successful
remove-os-update end with error: %@
remove-os-update done
schedule-os-update starting, request = %{public}@
schedule-os-update wrong product key
schedule-os-update download action
schedule-os-update install action
schedule-os-update done, result = %{public}@
Running Server
Setting Bluetooth enabled: %{public}@
Setting data roaming enabled: %{public}@
Setting Personal Hotspot enabled: %{public}@
Setting voice roaming enabled: %{public}@
Not prompting for iTunes account in limited apps mode.
%{public}@ starting user authentication.
User successfully logged into iTunes account.
User failed to log into iTunes account. Reason code: %ld
Could not remove app removability for bundle identifier: %{bundleIdentifier}@, error: %{public}@
Could not remove UserManagement persona mapping for app %{public}@, error: %{public}@
remove software update started
remove software update failed: %{public}@
remove software update failed: no error returned
available-os-updates useDelay=%@
calling startDownloadWithMetadata:withResult:, autodownload is %{public}@, downloadOnly is %{public}@
could not get current software update status: %{public}@
Operation will start: %{public}@
Operation will finish: %{public}@
Operation did finish: %{public}@
Starting
Could not get operation class for request: %{public}@
Received request: %{public}@, from client: %{public}@
Connected %{public}@
Disconnected %{public}@
Invalidated %{public}@
Interrupted %{public}@: %{public}@
Notification %{public}@: %{public}@ %{public}@
Add operation: %{public}@
Declaration engine did resume
Declaration engine did suspend
Notified of locale change. Exiting when clean.
Resume update for bundle identifier: %{public}@
Start updating app for request: %{public}@
Error attempting to set removability to %{public}@ Error: %{public}@
Show user update failure prompt
Could not mark app state as %{public}@ for bundle identifier: %{public}@
Not displaying notification in limited app mode
Start user notification: %{public}@
Adding user notification: %{public}@
Could not get notification ref for user notification.
Could not get run loop source for user notification: %{public}@
User notification started: %{public}@
Removing user notification: %{public}@
User notification ended: %{public}@
Dismissing notification because we entered limited apps mode.
Canceling %d pending notifications because we entered limited apps mode.
Not displaying notification in limited apps mode.
An iTunes login prompt is already shown. Not showing another prompt.
Calling completions for %lu iTunes login events.
Displaying alert: %{public}@ - %{public}@ [%{public}@] [%{public}@] [%{public}@]
Scheduling automatic alert dismissal after %0.0f seconds.
Automatically dismissing alert.
Cannot display alert: can't create run loop source.
Cannot create alert. Error: %d
Alert dismissed with response: %{public}@
SIGTERM received, cleaning all outstanding XPC transactions
Could not get file information
Memory mapping failed
$HOME not set, falling back to using getpwuid
softlink:r:path:/System/Library/PrivateFrameworks/ScreenTimeCore.framework/ScreenTimeCore
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>20A241133</string>
<key>CFBundleAllowMixedLocalizations</key>
<true/>
<key>CFBundleDevelopmentRegion</key>
<string>English</string>
<key>CFBundleDisplayName</key>
<string>dmd</string>
<key>CFBundleExecutable</key>
<string>dmd</string>
<key>CFBundleIdentifier</key>
<string>com.apple.dmd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundlePackageType</key>
<string>com.apple.product-type.tool</string>
<key>CFBundleShortVersionString</key>
<string>1.0</string>
<key>CFBundleSignature</key>
<string>????</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>112</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>20A5302u</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>16.0</string>
<key>DTSDKBuild</key>
<string>20A5302u</string>
<key>DTSDKName</key>
<string>iphonesimulator16.0.internal</string>
<key>DTXcode</key>
<string>1400</string>
<key>DTXcodeBuild</key>
<string>14A6200i</string>
<key>MinimumOSVersion</key>
<string>16.0</string>
<key>NSAppTransportSecurity</key>
<dict>
<key>NSAllowsArbitraryLoads</key>
<false/>
</dict>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
<integer>2</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>allow-obliterate-device</key>
<true/>
<key>application-identifier</key>
<string>com.apple.dmd</string>
<key>aps-connection-initiate</key>
<true/>
<key>com.apple.BTServer.allowRestrictedServices</key>
<true/>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>spi</string>
<string>identity</string>
<string>vinyl-standalone</string>
</array>
<key>com.apple.Contacts.database-allow</key>
<true/>
<key>com.apple.GAX.SPI</key>
<true/>
<key>com.apple.MobileInternetSharing.allow</key>
<true/>
<key>com.apple.SystemConfiguration.SCPreferences-write-access</key>
<array>
<string>com.apple.AutoWake.xml</string>
<string>preferences.plist</string>
</array>
<key>com.apple.appletv.pbs.allow-active-application</key>
<true/>
<key>com.apple.appletv.pbs.osupdate-service-access</key>
<true/>
<key>com.apple.appstored.install-apps</key>
<true/>
<key>com.apple.appstored.private</key>
<true/>
<key>com.apple.appstored.xpc.updates</key>
<true/>
<key>com.apple.apsd.ios-device-push-token</key>
<true/>
<key>com.apple.avfoundation.allow-system-wide-context</key>
<true/>
<key>com.apple.avfoundation.allows-access-to-device-list</key>
<true/>
<key>com.apple.avfoundation.allows-set-output-device</key>
<true/>
<key>com.apple.bluetooth.system</key>
<true/>
<key>com.apple.bulletinboard.settings</key>
<true/>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.frontboard.shutdown</key>
<true/>
<key>com.apple.frontboardservices.display-layout-monitor</key>
<true/>
<key>com.apple.ibooks.BLService.private</key>
<true/>
<key>com.apple.icloud.FindMyDevice.FindMyDeviceHelperXPCService.access</key>
<true/>
<key>com.apple.icloud.findmydeviced.access</key>
<true/>
<key>com.apple.itunesstored.metrics</key>
<true/>
<key>com.apple.itunesstored.private</key>
<true/>
<key>com.apple.keystore.device</key>
<true/>
<key>com.apple.keystore.escrow.create</key>
<true/>
<key>com.apple.locationd.authorizeapplications</key>
<true/>
<key>com.apple.locationd.effective_bundle</key>
<true/>
<key>com.apple.locationd.emergency_enabler</key>
<true/>
<key>com.apple.lsapplicationproxy.deviceidentifierforvendor</key>
<true/>
<key>com.apple.managedconfiguration.mdmd-access</key>
<true/>
<key>com.apple.managedconfiguration.mdmuserd-access</key>
<true/>
<key>com.apple.managedconfiguration.profiled-access</key>
<true/>
<key>com.apple.managedconfiguration.profiled.configurationprofiles</key>
<array>
<string>Inspection</string>
<string>PopInstallationQueue</string>
<string>Removal</string>
<string>SilentNonUIInstallation</string>
<string>UIInstallation</string>
<string>CloudLockedRemoval</string>
</array>
<key>com.apple.managedconfiguration.profiled.get</key>
<array>
<string>MachineInfo</string>
<string>ManagedApplications</string>
<string>NetworkExtension</string>
<string>WiFiNetworks</string>
</array>
<key>com.apple.managedconfiguration.profiled.provisioningprofiles</key>
<array>
<string>Installation</string>
<string>PopInstallationQueue</string>
<string>Removal</string>
<string>Validation</string>
</array>
<key>com.apple.managedconfiguration.profiled.set</key>
<array>
<string>ActivationLock</string>
<string>ActivationRecord</string>
<string>Certificates</string>
<string>ClientRestrictions</string>
<string>CloudConfiguration</string>
<string>Passcode</string>
<string>Safari</string>
<string>UserSettings</string>
</array>
<key>com.apple.managedconfiguration.profiled.usercompliance</key>
<true/>
<key>com.apple.managedconfiguration.teslad-access</key>
<true/>
<key>com.apple.mkb.usersession.delete</key>
<true/>
<key>com.apple.mkb.usersession.info</key>
<true/>
<key>com.apple.mkb.usersession.loginwindow</key>
<true/>
<key>com.apple.mobile.keybagd.UserManager.bubblepop</key>
<true/>
<key>com.apple.multitasking.termination</key>
<true/>
<key>com.apple.private.InstallCoordination.allowed</key>
<true/>
<key>com.apple.private.MobileContainerManager.otherIdLookup</key>
<true/>
<key>com.apple.private.MobileGestalt.AllowedProtectedKeys</key>
<array>
<string>DeviceClass</string>
<string>ProductType</string>
<string>ProductVersion</string>
<string>BuildVersion</string>
<string>SerialNumber</string>
<string>ModelNumber</string>
<string>UniqueDeviceID</string>
<string>UserAssignedDeviceName</string>
<string>DiskUsage</string>
<string>TelephonyCapability</string>
<string>CellularDataCapability</string>
<string>PersonalHotspotCapability</string>
<string>PhoneNumber</string>
<string>EthernetMacAddress</string>
<string>BluetoothAddress</string>
<string>WifiAddress</string>
<string>WifiAddressData</string>
<string>MobileSubscriberCountryCode</string>
<string>MobileSubscriberNetworkCode</string>
</array>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.donotdisturb.state.request.client-identifiers</key>
<string>com.apple.dmd</string>
<key>com.apple.private.lockdown.finegrained-get</key>
<array>
<string>NULL/ActivationPrivateKey</string>
<string>NULL/DevicePrivateKey</string>
<string>NULL/DeviceCertificate</string>
<string>NULL/DeviceName</string>
<string>com.apple.mobile.backup/LastCloudBackupDate</string>
</array>
<key>com.apple.private.lockdown.finegrained-set</key>
<array>
<string>NULL/DeviceName</string>
</array>
<key>com.apple.private.mobileinstall.allowedSPI</key>
<array>
<string>Uninstall</string>
<string>Lookup</string>
<string>CopyDiskUsageForLaunchServices</string>
<string>UninstallForLaunchServices</string>
<string>InstallForLaunchServices</string>
</array>
<key>com.apple.private.screen-time</key>
<true/>
<key>com.apple.private.security.storage.AppDataContainers</key>
<true/>
<key>com.apple.private.sysdiagnose</key>
<true/>
<key>com.apple.private.system-keychain</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceMediaLibrary</string>
</array>
<key>com.apple.private.usage-tracking</key>
<true/>
<key>com.apple.rootless.storage.dmd</key>
<true/>
<key>com.apple.security.exception.carrier-bundle.read</key>
<true/>
<key>com.apple.security.exception.files.absolute-path.read-only</key>
<array>
<string>/private</string>
<string>/private/var</string>
<string>/private/var/containers/Bundle/Application/</string>
<string>/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.installcoordinationd/Library/InstallCoordination/Removability/</string>
<string>/private/var/db/MobileIdentityData/</string>
<string>/private/var/MobileAsset/</string>
<string>/private/var/MobileSoftwareUpdate/</string>
<string>/usr</string>
<string>/usr/libexec</string>
<string>/System</string>
</array>
<key>com.apple.security.exception.files.absolute-path.read-write</key>
<array>
<string>/private/var/mobile/Library/dmd/</string>
<string>/private/var/mobile/Library/Preferences/com.apple.springboard.plist</string>
<string>/private/var/tmp/com.apple.dmd/</string>
<string>/private/var/Managed Preferences/</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-only</key>
<array>
<string>/Library/Caches/com.apple.itunesstored/url-resolution.plist</string>
<string>/Library/com.apple.ManagedSettings/EffectiveSettings.plist</string>
<string>/Library/InstallCoordination/removability.plist</string>
<string>/Library/UserConfigurationProfiles/</string>
<string>/Media/Books/Purchases/Purchases.plist</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>/tmp/com.apple.dmd/</string>
<string>/Library/Caches/com.apple.dmd/</string>
<string>/Library/dmd/</string>
</array>
<key>com.apple.security.exception.framebuffer-access</key>
<true/>
<key>com.apple.security.exception.iokit-user-client-class</key>
<array>
<string>IOUSBDeviceInterfaceUserClient</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.AppSSO.service-xpc</string>
<string>com.apple.CARenderServer</string>
<string>com.apple.FileCoordination</string>
<string>com.apple.GSSCred</string>
<string>com.apple.MTLCompilerService</string>
<string>com.apple.MobileInternetSharing</string>
<string>com.apple.PineBoardServices</string>
<string>com.apple.PowerManagement.control</string>
<string>com.apple.ProgressReporting</string>
<string>com.apple.SBUserNotification</string>
<string>com.apple.ScreenTimeAgent.organization-status</string>
<string>com.apple.SystemConfiguration.configd</string>
<string>com.apple.UsageTrackingAgent</string>
<string>com.apple.UsageTrackingAgent.private</string>
<string>com.apple.WebKit.Networking</string>
<string>com.apple.WebKit.WebContent</string>
<string>com.apple.accessibility.AXBackBoardServer</string>
<string>com.apple.accessibility.gax.backboard</string>
<string>com.apple.accountsd.accountmanager</string>
<string>com.apple.appstored.xpc.storequeue</string>
<string>com.apple.cfnetwork.AuthBrokerAgent</string>
<string>com.apple.commcenter.coretelephony.xpc</string>
<string>com.apple.commcenter.xpc</string>
<string>com.apple.donotdisturb.service</string>
<string>com.apple.exchangesyncd</string>
<string>com.apple.icloud.findmydeviced</string>
<string>com.apple.imfoundation.IMRemoteURLConnectionAgent</string>
<string>com.apple.installcoordinationd</string>
<string>com.apple.iokit.powerdxpc</string>
<string>com.apple.itunescloudd.xpc</string>
<string>com.apple.locationd.registration</string>
<string>com.apple.locationd.synchronous</string>
<string>com.apple.lsd.mapdb</string>
<string>com.apple.lsd.xpc</string>
<string>com.apple.managedconfiguration.profiled</string>
<string>com.apple.misagent</string>
<string>com.apple.mobile.keybagd.UserManager.xpc</string>
<string>com.apple.mobile.usermanagerd.xpc</string>
<string>com.apple.mobile.keybagd.xpc</string>
<string>com.apple.mobileactivationd</string>
<string>com.apple.securityd</string>
<string>com.apple.softwareupdateservicesd</string>
<string>com.apple.springboard.services</string>
<string>com.apple.sysdiagnose.service.xpc</string>
<string>com.apple.trustd</string>
<string>com.apple.coremedia.routediscoverer.xpc</string>
<string>com.apple.coremedia.routingcontext.xpc</string>
<string>com.apple.coremedia.volumecontroller.xpc</string>
<string>com.apple.airplay.apsynccontroller.xpc</string>
<string>com.apple.mediaremoted.xpc</string>
<string>com.apple.server.bluetooth</string>
<string>com.apple.appstored.xpc</string>
</array>
<key>com.apple.security.exception.mobile-keybag-access</key>
<true/>
<key>com.apple.security.exception.shared-preference.read-only</key>
<array>
<string>com.apple.purplebuddy</string>
<string>com.apple.mobileipod</string>
</array>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.dmd</string>
<string>com.apple.softwareupdateservicesd</string>
<string>com.apple.carrier</string>
<string>com.apple.itunescloud</string>
</array>
<key>com.apple.security.exception.sysctl.read-only</key>
<array>
<string>net.routetable</string>
</array>
<key>com.apple.security.network.client</key>
<true/>
<key>com.apple.security.system-groups</key>
<array>
<string>systemgroup.com.apple.configurationprofiles</string>
<string>systemgroup.com.apple.installcoordinationd</string>
<string>systemgroup.com.apple.media.books.managed</string>
</array>
<key>com.apple.security.ts.lockdown-client</key>
<true/>
<key>com.apple.security.ts.mach-task-name</key>
<true/>
<key>com.apple.springboard.CFUserNotification</key>
<true/>
<key>com.apple.springboard.application-removability.proxy</key>
<true/>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>com.apple.springboard.remote-alert</key>
<true/>
<key>com.apple.usermanagerd.persona.fetch</key>
<true/>
<key>com.apple.usermanagerd.persona.setbundle</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
<string>com.apple.certificates</string>
<string>com.apple.identities</string>
<string>com.apple.preferences</string>
<string>com.apple.managed.vpn.shared</string>
<string>lockdown-identities</string>
</array>
<key>platform-application</key>
<true/>
<key>seatbelt-profiles</key>
<array>
<string>temporary-sandbox</string>
</array>
</dict>
</plist>
@(#)PROGRAM:dmd  PROJECT:DeviceManagement-112
88Yu88
c111
NNNN2
WNNe@NNNNsNNN@N
NNNN
6RRRR`RRnD
com.apple.dmd.operation.set-app-extension-uuids
PayloadContent
Code
ErrorChain
Not Allowed
Not Supported
QueryResponses
ErrorResponses
fontURL
%@-%@
imageURL
Pending
Echo
Executed
countryCode
SBParentalControlsMCContentRestrictions
com.apple.springboard
appleId
primaryAccount
com.apple.dmd.budget.didChange
Categories
WebSites
%@.%@-%ld
%@.%@
ActivatedConfigurations
Install
Remove
q24@?0@"NSDictionary"8@"NSDictionary"16
%K = %@
organization.identifier
buddhist
chinese
coptic
ethiopic-amete-alem
ethiopic-amete-mihret
gregorian
hebrew
indian
islamic
islamic-civil
islamic-tbla
islamic-umalqura
iso8601
japanese
persian
SignificantTimeChangeNotification
v8@?0
v32@?0@"NSString"8@"DMDActivationPredicateObserver"16^B24
%@-%ld
request.name
com.apple.dmd-access
DMDAirPlayManager.m
must provide a destination name or deviceID
v16@?0Q8
AVOutputContextSetOutputDevicePasswordKey
avOutputContext
applicationProcessID
avOutputDevice
setOutputDevice:options:
AirPlay
DMFNotifications
Display
Cancel
iPod's screen
iPad's screen
iPhone's screen
Apple TV's output
Mac's screen
device
v32@?0^{__CFArray=}8^v16^{__CFError=}24
v16@?0^{__CFArray=}8
metadataByBundleID
state
flags
RedemptionCode
UnusedRedemptionCode
Attributes
VPNUUID
ContentFilterUUID
DNSProxyUUID
AssociatedDomains
AssociatedDomainsEnableDirectDownloads
Removable
com.apple.dmd.%@.%p
Apps
@8@?0
<%@: %p; Apps: %@>
DMDAppController.m
Invalid parameter not satisfying: %@
manifestURL
completion
v24@?0@"DMDAppMetadata"8@"NSError"16
request
bundleIdentifier
v16@?0@"NSError"8
v24@?0@"NSNumber"8@"NSError"16
v24@?0Q8@"NSError"16
%@ must implement %@
self == %@
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
items
metadata
kind
software
bundle-identifier
title
com.apple.
B24@?0@"NSString"8@"NSNumber"16
B16@?0@"ASDJob"8
managementInformation
v16@?0@"LSApplicationRecord"8
storeItemIdentifier
externalVersionIdentifier
version
shortVersion
staticUsage
dynamicUsage
onDemandResourcesUsage
sharedUsage
installationState
isRestricted
isBlocked
isUserBasedVPP
isDeviceBasedVPP
isLicenseExpired
isLicenseRevoked
isUPP
isValidated
isAppClip
isAppStoreVendable
isBetaApp
isAdHocCodeSigned
hasUpdateAvailable
VPNUUIDString
contentFilterUUIDString
DNSProxyUUIDString
associatedDomains
associatedDomainsEnableDirectDownloads
removable
configuration
feedback
v28@?0B8@"NSArray"12@"NSError"20
com.apple.configuration.managed
com.apple.feedback.managed
v32@?0@"FBSDisplayLayoutMonitor"8@"FBSDisplayLayout"16@"FBSDisplayLayoutTransitionContext"24
v24@?0@"SSAuthenticateResponse"8@"NSError"16
any user license
existing user license
device license
Undefined
override
v36@?0B8@"NSDictionary"12q20@"NSError"28
ASDManagedApplicationChangeTypeNone
ASDManagedApplicationChangeTypeInlineSinfSwap
ASDManagedApplicationChangeTypeMDMAppSinfUpdate
ASDManagedApplicationChangeTypeReDownloadInitiated
ASDManagedApplicationChangeTypeNeedsReDownload
ASDManagedApplicationChangeTypePurchasedFree
DMDAppController+iphoneOS.m
We must have a bundle identifier to be installing a system app
non-nil
mobile
v24@?0@"NSString"8Q16
v32@?0@"NSDictionary"8q16@"NSError"24
_updateForegroundBundleIdentifiers should always be called on the main thread
v24@?0@"SSRedeemCodesResponse"8@"NSError"16
v24@?0@"SSAccount"8@"NSError"16
com.apple.dmd.remove-foreground-app
DMDAppController+Remove+iphoneOS.m
Assertion couldn't be acquired: %@
DMDAppLifeCycle.m
com.apple.dmd.%@.%p(%@).queue
willStartInstalling
didStartInstalling
didCancelInstalling
didPauseInstalling
didFailInstalling
didFinishInstalling
didResumeInstalling
willStartUpdating
willStartUninstalling
didStartUpdating
didCancelUpdating
didPauseUpdating
didFailUpdating
didFinishUpdating
didFailUninstalling
didFinishUninstalling
v16@?0@"LSApplicationProxy"8
DMDAppLifeCycle+iphoneOS.m
request.bundleIdentifier
DMDAppOperation.m
v16@?0@"NSManagedObjectContext"8
com.apple.dmd.operation.begin-transaction
com.apple.dmd.operation.clear-activation-lock-bypass-code
com.apple.dmd.operation.clear-restrictions-password
STManagementState
Class getSTManagementStateClass(void)_block_invoke
DMDClearRestrictionsPasswordOperation+iOS.m
Unable to find class %s
void *ScreenTimeCoreLibrary(void)
com.apple.command.device.information
com.apple.command.device.lock
com.apple.command.device.restart
com.apple.command.management.test
com.apple.command.management.refresh.status
com.apple.asset.font
com.apple.asset.image
com.apple.configuration.account.settings
com.apple.configuration.account.webclip
com.apple.configuration.application.lock
com.apple.configuration.application.settings
com.apple.configuration.application.store
com.apple.configuration.application.store.macos
com.apple.configuration.device.conferenceroomdisplay
com.apple.configuration.event.subscription
com.apple.configuration.legacy.restrictions.apps
com.apple.configuration.management.test
com.apple.configuration.media.settings
com.apple.configuration.network.cellular.settings
com.apple.configuration.passcode.settings
com.apple.configuration.policy.application
com.apple.configuration.policy.category
com.apple.configuration.policy.icloud.account
com.apple.configuration.policy.website
com.apple.configuration.security.settings
com.apple.configuration.system.airdrop
com.apple.configuration.system.camera
com.apple.configuration.system.carplay
com.apple.configuration.system.dateandtime
com.apple.configuration.system.donotdisturb
com.apple.configuration.system.font
com.apple.configuration.system.gamecenter
com.apple.configuration.system.icloud
com.apple.configuration.system.keyboard
com.apple.configuration.system.music
com.apple.configuration.system.ratings
com.apple.configuration.system.search
com.apple.configuration.system.siri
com.apple.configuration.system.tvprovider
com.apple.configuration.system.web
com.apple.configuration.system.web.contentfilter.basic
com.apple.event.management.test
com.apple.activations.basic
com.apple.activations.simple
com.apple.predicate.not
com.apple.predicate.all
com.apple.predicate.any
com.apple.predicate.weeklytimerange
com.apple.predicate.onetime
com.apple.predicate.budget
com.apple.predicate.compositebudget
com.apple.predicate.icloudaccount
com.apple.message.management.test
DMDConfigurationDatabaseModel
momd
<%@: %p
DMDConfigurationDatabase.m
block
DMDConfigurationOrganizationsDidChangeNotification
DMDConfigurationSourceStatusDidChange
DMDConfigurationSourceEventsDidChange
DMDConfigurationEngine.m
database
%@.%p.configuration-engine
v32@?0@"NSString"8@"NSString"16@"NSArray"24
Database:
Engine operations:
Organizations:
%@ must be called from the main thread
Deactivate organization for %@
identifier
v32@?0@"NSString"8@"NSArray"16^B24
Process Declarations for %@
organizationIdentifier
Send Events for %@
Cannot enqueue an operation if we failed to initialize the database.
operation
payloadMetadata.organization
com.apple.dmd.policy.cleanup.org
com.apple.dmd.policy.cleanup.declaration
organization
v16@?0@"NSArray"8
completionHandler
self IN %@
type
DMDConfigurationOrganizationController.m
[self.identifier isEqualToString:organization.identifier]
available
identifier IN %@
installed
failed
SUBQUERY(incomingPayloadMetadataReferences, $ref, ($ref.available == YES) && ($ref.predicatePayloadMetadata.%K.boolValue == YES)).@count > 0
SUBQUERY(incomingPayloadMetadataReferences, $ref, $ref.predicatePayloadMetadata.%K.boolValue == YES).@count == 0
%K != %@
status
SUBQUERY(incomingPayloadMetadataReferences, $ref, $ref.available == YES).@count = 0
displayName
machServiceName
reportingRequirements
DMDSecureUnarchiveFromConfigurationSourceDataTransformer
v24@?0@"NSURL"8@"NSError"16
v24@?0@"<DMFConfigurationSourceClientInterface>"8@"NSError"16
DMDConfigurationSourceController.m
source
source.identifier
queue
[self.identifier isEqualToString:source.identifier]
listenerEndpoint
v32@?0@"NSDictionary"8@"NSError"16@?<v@?@"NSError">24
com.apple.dmd.operation.create-configuration-organization
request.organizationIdentifier
request.organizationDisplayName
request.organizationType
com.apple.dmd.operation.deactivate-configuration-organization
serverHash
com.apple.dmd.operation.delete-user
request.message
DMDDeviceController+iOS.m
equipmentInfo != nil
client != nil
-[DMDiOSDeviceController _deviceInformationForEquipmentInfo:subscription:withClient:]
could not create CoreTelephonyClient
/private/var/mobile/Library/Application Support/com.apple.dmd-setup-option
com.apple.system.config.network_change
v12@?0i8
com.apple.dmd.operation.disable-lost-mode
com.apple.dmd.operation.echo
request.echo
request.resultStatus
com.apple.private.dmd.emergency-mode
com.apple.dmd.operation.enable-lost-mode
request.UUID
com.apple.dmd.operation.end-transaction
DMDEngineDatabaseFixedDigitalHealthUsageEventMetadataKey
hasKeychainUnlockedSinceBoot
isReady
-wal
-shm
DMDEngineDatabaseInitializationOperation.m
Configuration database does not have registered persistent stores
DMDEngineDatabaseInitializationOperationContext
DMDEngineDatabaseOperation.m
A database must be provided to %@
%@ should have ended during %@
%@ must override %@
outgoingPayloadMetadataReferences
%@.%@-restrictions
DMDEngineDatabaseProcessingOperation.m
error
Debug
(null)
%@:%@
DMDEngineRegisterConfigurationSourceOperation.m
self != %@
Immediate
Minutely
Hourly
Weekly
Daily
00:00
frequency
localTime
spread
v16@?0@"NSTimer"8
com.apple.dmd.alarm
com.apple.distnoted.matching
com.apple.notifyd.matching
Date
com.apple.alarm
ShouldWake
UserInfo
v16@?0@"NSObject<OS_xpc_object>"8
v16@?0@8
v24@?0@"NSString"8@"NSSet"16
eventType
timestamp
v32@?0@"NSString"8@"DMDEventSubscriptionRegistrationController"16^B24
payloadMetadata
payloadMetadata.organization.identifier = %@ AND payloadMetadata.identifier = %@
DMDSecureUnarchiveFromEventSubscriptionRegistrationDataTransformer
DMDEventSubscriptionRegistrationController.m
subscriptionRegistration
Cannot update subscription controller with a subscription registration with a different identifier
v32@?0@"NSString"8@"<DMDEventTypeStream>"16^B24
com.apple.dmd.operation.fetch-activation-lock-bypass-code
com.apple.dmd.operation.fetch-apps
v24@?0@"NSDictionary"8@"NSError"16
DMDFetchAppsOperation.m
v24@?0@"NSString"8@"NSError"16
com.apple.dmd.operation.fetch-available-os-updates
default
DMDFetchAvailableOSUpdatesOperation.m
DMDFetchAvailableOSUpdatesOperation: no update returned
com.apple.dmd.operation.fetch-certificates
com.apple.dmd.operation.fetch-classroom-instructor-endpoint
request.configurationSource
com.apple.dmd.operation.fetch-declaration-capabilities
com.apple.dmd.operation.fetch-device-properties
request.propertyKeys
com.apple.dmd.operation.fetch-debug-state
Server:
Apps:
com.apple.dmd.operation.fetch-location
v24@?0@"CLLocation"8@"NSError"16
com.apple.dmd.operation.fetch-managed-books
DMDFetchManagedBooksOperation: run
com.apple.dmd.operation.fetch-organizations
v24@?0@"DMFFetchConfigurationOrganizationsResultObject"8@"NSError"16
com.apple.dmd.operation.fetch-os-update-status
com.apple.dmd.operation.fetch-profiles
com.apple.dmd.operation.fetch-provisioning-profiles
com.apple.dmd.operation.fetch-restrictions
com.apple.dmd.operation.fetch-safari-bookmarks
com.apple.dmd.operation.fetch-security-information
com.apple.dmd.operation.fetch-stream-events
v24@?0@"DMFFetchStreamEventsResultObject"8@"NSError"16
request.startDate
com.apple.dmd.operation.fetch-users
request.licenseType
com.apple.dmd.operation.install-app
com.apple.dmd.operation.install-configuration
request.profile
PayloadType
com.apple.applicationaccess
PayloadIdentifier
%@-restrictions
com.apple.dmd
whitelistedAppBundleIDs
request.subscriptionDeclaration
com.apple.dmd.operation.install-managed-book
request.originator
DMDInstallManagedBookOperation: run
v32@?0@"NSError"8@"MCBook"16@"NSString"24
com.apple.dmd.operation.install-profile
request.profileData
com.apple.dmd.operation.install-provisioning-profile
com.apple.dmd.operation.invite-user-to-vpp
request.URL
vpp-licensing-invitation-url-pattern
DMDInviteUserToVPPOperation: run
%@ would like to assign apps and books to you.
Allow App and Book Assignment?
Continue
com.apple.dmd.operation.lock-device
DMDManagementPromptWindowMinutes
DMDMaxManagementDenialsBeforeAutomaticRefusal
PromptTimestamps
v16@?0q8
com.apple.dmd.operation.log-out-user
originator
organizationName
serverName
DMDLDLMServiceQueue
DMDLostDeviceLocationManager getCurrentLocationForOriginator:completion:
v16@?0@"NSURL"8
The location of this device was sent to %@ at %@ on %@.
epub
ibooks
Queued
PromptingForLogin
Updating
Installing
Managed
ManagedButUninstalled
Installed
Uninstalled
Failed
com.apple.mdmd.downloads.media.nonstore
DMDManagedMediaManager: init
Media operations cannot proceed when MDM migration is not complete.
DMDManagedMediaManager Member Queue
v32@?0@"SSDownload"8Q16^B24
Books
Path
-[DMDManagedMediaManager installNonStoreBook:fileExtension:URL:assertion:completionBlock:]
DMDManagedMediaManager+iOS.m
book.persistentID
com.apple.managedconfiguration.mdmd
MediaBypassVPPCheck
v12@?0B8
v24@?0@"NSArray"8@"NSError"16
Book Installation
Sign in to iTunes to allow %@ to manage and install books.
v24@?0@"NSError"8@"MCBook"16
RequiredAppIDForMDM
none
inline SINF swap
MDM app SINF update
re-download initiated
needs re-download
purchased or free
unknown change type (%ld)
v24@?0q8@"NSError"16
DMDMDMv1InstallAppOperation+iphoneOS.m
%@%@
App Installation
Sign in to iTunes to allow %1$@ to manage and install apps.
v16@?0@"DMFAppManagementInformation"8
com.apple.dmd.operation.start-managing-app
App Management Change
Manage
iPhone
iPod
iPad
AppleTV
Watch
AudioAccessory
apple-internal-install
DeviceClass
ProductType
ProductVersion
BuildVersion
marketing-name
SerialNumber
ModelNumber
UniqueDeviceID
UserAssignedDeviceName
DiskUsage
EthernetMacAddress
BluetoothAddress
WifiAddress
WifiAddressData
telephony
cellular-data
personal-hotspot
PhoneNumber
MobileSubscriberCountryCode
MobileSubscriberNetworkCode
systemgroup.com.apple.configurationprofiles
ManagementPromptPolicy.plist
MDMAppManagement.plist
Purchases.plist
/Media/Books/Purchases
ManagedBooks.plist
Library
Managed.plist
LostModeRequest.plist
MDM.plist
ConfigurationProfiles
systemgroup.com.apple.media.books.managed
Identifier
objectID
isNetworkTethered
isKeychainUnlocked
DMDPayloadActionOperationObservationContext
DMDPayloadActionOperation.m
%@ must be implemented by subclasses
pendingStatusUpdate
com.apple.command
com.apple.activation
com.apple.asset
com.apple.configuration
com.apple.configuration.policy
requiresNetworkTether
requiresUnlockedKeychain
lastStatusReportTimestamp
stateChangeTimestamp
stateDictionary
DMDPayloadMetadata.m
%@ cannot call %@
DMDSecureUnarchiveFromPayloadMetadataDataTransformer
com.apple.dmd.operation.play-lost-mode-sound
DMDPlayLostModeSoundOperation: run
com.apple.dmd.emergency-mode.alarm
DMDEffectivePolicies
EffectivePolicies
com.apple.dmd.policy.emergency-mode
v24@?0@"NSPersistentStoreDescription"8@"NSError"16
%K == %@
v24@?0@"NSManagedObjectContext"8@"NSError"16
priority
policy
domain
com.apple.ManagedSettings
com.apple.ManagedSettings.declaration-identifier
declarationIdentifier
(%K IN %@) AND (%K == %@) AND (%K == %@)
(%K == nil) AND (%K == %@) AND (%K == %@)
(%K == %@) AND (%K == %@)
NOT (%K IN %@)
(%K == %@) AND NOT (%K IN %@)
com.apple.LaunchServices.applicationRegistered
isPlaceholder
com.apple.private.dmd.policy
DMDPowerAssertion Queue
unknown
Trying to park a power assertion that's already parked.
Trying to unpark a power assertion that's not parked.
DMDSwitchBlockingTask
com.apple.dmd.operation.refresh-cellular-plans
http
https
request.eSIMServerURL
com.apple.dmd.operation.set-declarations
request.configurationSourceName
com.apple.dmd.operation.remove-app
DMDRemoveAppOperation.m
com.apple.dmd.operation.remove-configuration
request.declarationIdentifier
com.apple.dmd.operation.remove-managed-book
DMDRemoveManagedBookOperation: run
com.apple.dmd.operation.remove-os-update
com.apple.dmd.operation.remove-profile
com.apple.dmd.operation.remove-protected-profile
com.apple.dmd.operation.remove-provisioning-profile
request.profileIdentifier
request.managingProfileIdentifier
com.apple.dmd.operation.request-airplay-mirroring
com.apple.dmd.operation.restart-device
dmd restart device
com.apple.dmd.operation.schedule-os-update
DMDScheduleOSUpdateOperation.m
unexpected action value
com.apple.dmd.operation.send-event
request.inRepyTo
request.eventType
com.apple.dmd.operation.set-app-analytics-enabled
com.apple.dmd.operation.set-app-associated-domains-enable-direct-downloads
com.apple.dmd.operation.set-app-associated-domains
com.apple.dmd.operation.set-app-configuration
com.apple.dmd.operation.set-app-removability
com.apple.dmd.operation.set-app-vpn-uuid
com.apple.dmd.operation.set-bluetooth-enabled
com.apple.dmd.operation.set-data-roaming-enabled
request.syncToken
com.apple.dmd.operation.set-device-name
com.apple.dmd.operation.set-diagnostic-submission-enabled
request.type
identifiers
com.apple.dmd.operation.set-maximum-resident-users
com.apple.dmd.operation.set-passcode-lock-grace-period
com.apple.dmd.operation.set-personal-hotspot-enabled
com.apple.dmd.operation.set-voice-roaming-enabled
com.apple.dmd.operation.shut-down-device
dmd shut down device
v24@?0@"NSError"8@"SSAccount"16
-[DMDSSRequestDelegate initWithRequest:]
DMDSSRequestDelegate+iOS.m
-[DMDSSRequestDelegate startWithCompletionBlock:]_block_invoke
!self.completionBlock
-[DMDSSRequestDelegate cancel]_block_invoke
self.completionBlock
com.apple.dmd.operation.stop-airplay-mirroring
com.apple.dmd.operation.stop-managing-app
com.apple.dmd.operation.stop-managing-books
DMDStopManagingBooksOperation: run
organization.identifier = %@
OSUpdate
com.apple.mdm
iOSUpdate
v20@?0B8@"NSError"12
v24@?0@"SUDescriptor"8@"NSError"16
v40@?0@"SUDownload"8@"SUInstallPolicy"16@"SUAutoInstallOperation"24@"NSError"32
%@.%p.concurrent
%@.%p.serial.%@
v32@?0@"NSNumber"8@"CATSerialOperationQueue"16^B24
Group: %@
Device state:
DMD serial operations:%@
DMD concurrent operations:
Configuration engine:
DMFServerErrors
^DM[DF](\w+)Request$
DMDTaskServerDelegate.m
DMD%@Operation
Queue must not be nil for operation: %@
FetchConfigurationOrganizations
FetchOrganizations
FetchGlobalRestrictions
FetchRestrictions
FetchInstalledCertificates
FetchCertificates
FetchInstalledProfiles
FetchProfiles
FetchInstalledProvisioningProfiles
FetchProvisioningProfiles
LogoutUser
LogOutUser
MDMv1UpdateApp
UpdateApp
declaration
unspecified
com.apple.dmd.operation.trigger-diagnostics
com.apple.dmd.operation.update-app
App Update
Update
Dismiss
com.apple.dmd.operation.enqueue-commands
DMDUserNotificationController.m
notification
v16@?0@"NSNotification"8
B16@?0@"DMDUserNotificationQueueEntry"8
B24@?0@"DMDUserNotificationQueueEntry"8@"NSDictionary"16
Sign In
DMDUserNotificationManager Queue
Unknown
Primary button selected
Secondary button selected
Tertiary button selected
Dismissed programatically
com.apple.dmd.operation.validate-applications
com.apple.DeviceManagement
ConfigurationEngine
Database
HOME
+[NSFileManager(DMDAdditions) dmd_userHomeURL]_block_invoke
NSFileManager+DMDAdditions.m
Failed to get passwd entry for uid %u: %@ (%d)
Failed to resolve user home directory: %@ (%d)
+[NSFileManager(DMDAdditions) dmd_userDarwinUserTempDirectoryURL]_block_invoke
Failed to initialize darwin user temp directory: %@ (%d)
Failed to resolve darwin user temp directory: %@ (%d)
Images
Font
Policies
+[NSFileManager(DMDAdditions) dmd_createUserDMDDirectoryDataVault]
Failed to create data vault directory: %@
Failed to enable data vault: %@ (%d)
+[NSFileManager(DMDAdditions) dmd_setUserDirSuffix:]
Failed to set the user directory suffix: %@ (%d)
Configurations
DMDSetAppExtensionUUIDsOperation
CEMFontAssetInstallMetadata
CEMAssetProvider
NSObject
NSSecureCoding
NSCoding
CEMFontInstallOperation
DMDRemoteAssetResolutionContext
CEMFontRemoveOperation
DMDAdditions
DMDOperationProvidingAsset
CEMImageAssetInstallMetadata
CEMImageInstallOperation
CEMImageRemoveOperation
DMDAccountUtilities
DMDActivationBudgetObserver
DMDActivationCurfewObserver
DMDActivationiCloudAccountObserver
DMDActivationOneTimeObserver
DMDActivationPayloadMetadata
DMDActivationPredicateAll
DMDActivationPredicateAny
DMDActivationPredicateCompound
DMDActivationPredicateFalse
DMDActivationPredicateNot
DMDActivationPredicateObserver
DMDActivationPredicateObserverManager
DMDActivationPredicateObserverDelegate
DMDEventStreamDispatcherRegistration
DMDActivationPredicateTrue
DMDActivityTransactionOperation
DMDAirPlayManager
DMDAppController
DMDAppLifeCycleObserving
Fetch
Install
DMDiphoneOSAppController
Redeem
Remove
Update
DMDAppLifeCycle
DMDiphoneOSAppLifeCycle
LSApplicationWorkspaceObserverProtocol
DMDAppMetadata
DMDAppOperation
DMDAssetActionOperation
DMDAssetInstallOperation
DMDAssetPayloadMetadata
DMDAssetRemoveOperation
DMDBeginTransactionOperation
DMDBlockOperation
DMDBluetoothManager
DMDClearActivationLockBypassCodeOperation
DMDClearRestrictionsPasswordOperation
DMDCommandActionOperation
DMDRequestProvidingCommand
DMDCommandExecuteOperation
DMDCommandPayloadMetadata
DMDCommandRemoveOperation
DMDConfigurationActionOperation
DMDConfigurationCapabilities
DMDConfigurationDatabase
DMDConfigurationEngine
DMDActivationPredicateObserverManagerDelegate
DMDConfigurationOrganizationControllerDelegate
DMDConfigurationSourceControllerDelegate
DMDEngineDatabaseProcessingOperationDelegate
DMDEngineRegisterConfigurationSourceOperationDelegate
DMDRequestProvidingConfiguration
DMDConfigurationInstallOperation
DMDConfigurationOrganization
DMDConfigurationOrganizationController
DMDRemoteAssetResolver
DMDConfigurationPayloadMetadata
DMDConfigurationRemoveOperation
DMDConfigurationReplaceOperation
DMDConfigurationSource
DMDSecureUnarchiveFromConfigurationSourceDataTransformer
DMDConfigurationSourceAssetResolveOperation
DMDConfigurationSourceController
DMDConfigurationSourceEventsOperation
DMDConfigurationSourceRepresentation
DMDConfigurationSourceStatusUpdateOperation
DMDConfigurationSourceTaskOperation
DMDCoreTelephonyUtilities
DMDCoreTelephonyConnection
DMDCreateConfigurationOrganizationOperation
DMDDeactivateConfigurationOrganizationOperation
DMDDeclarationActionOperation
DMDDeclarationPayloadMetadata
DMDDeleteUserOperation
DMDDeviceController
DMDiOSDeviceController
DMDiphoneOSDeviceController
DMDDeviceStateObserver
DMDDeviceStateProvider
DMDDisableLostModeOperation
DMDEchoOperation
DMDEffectivePolicy
DMDEffectivePolicyInteface
DMDManagedSettingsEffectivePolicy
DMDEmergencyModeListenerDelegate
NSXPCListenerDelegate
DMDEnableLostModeOperation
DMDEndTransactionOperation
DMDEngineCreateConfigurationOrganizationOperation
DMDEngineDatabaseInitializationOperation
DMDEngineDatabaseOperation
DMDEngineDatabaseProcessingOperation
DMDEngineDeactivateConfigurationOrganizationOperation
DMDEngineFetchDeclarationsOperation
DMDEngineProcessStatusOperation
DMDEngineRefreshStatusOperation
DMDEngineRegisterConfigurationSourceOperation
DMDEngineSetDeclarationsOperation
DMDEngineUpdateCommandsOperation
DMDEngineUpdateDeclarationsOperation
DMDEventReportingSchedule
DMDEventStreamDispatcher
DMDEventStreamEvent
DMDEventSubscriptionManager
DMDEventSubscriptionRegistration
DMDSecureUnarchiveFromEventSubscriptionRegistrationDataTransformer
DMDEventSubscriptionRegistrationController
DMDFetchActivationLockBypassCodeOperation
DMDFetchAppsOperation
DMDFetchAvailableOSUpdatesOperation
DMDFetchCertificatesOperation
iphoneOS
DMDFetchClassroomInstructorEndpointOperation
DMDFetchConfigurationSourceSyncTokenOperation
DMDFetchDeclarationCapabilitiesOperation
DMDFetchDeclarationsOperation
DMDFetchDevicePropertiesOperation
DMDFetchDMDStateOperation
DMDFetchLocationOperation
DMDFetchManagedBooksOperation
DMDFetchOrganizationsOperation
DMDFetchOSUpdateStatusOperation
DMDFetchProfilesOperation
DMDFetchProvisioningProfilesOperation
DMDFetchRestrictionsOperation
DMDFetchSafariBookmarksOperation
DMDFetchSecurityInformationOperation
DMDFetchStreamEventsOperation
DMDFetchUsersOperation
DMDInstallAppOperation
DMDInstallConfigurationOperation
DMDInstallEventSubscriptionOperation
DMDInstallEventSubscriptionRequest
DMDInstallManagedBookOperation
DMDInstallProfileOperation
DMDInstallProvisioningProfileOperation
DMDInviteUserToVPPOperation
DMDLockDeviceOperation
DMDManageAppPromptPolicy
DMDLockdownUtilities
DMDLogOutUserOperation
DMDLostDeviceLocationManager
CLLocationManagerDelegate
DMDManagedAssetManager
DMDManagedMediaManager
DMDMDMUtilities
DMDMDMv1InstallAppOperation
DMDMDMv1StartManagingAppOperation
iphoneOS_watchOS
DMDMobileGestalt
DMDNetworkTetherUtilities
DMDPaths
DMDPayload
DMDPayloadActionOperation
DMDPayloadContext
DMDPayloadMetadata
DMDSecureUnarchiveFromPayloadMetadataDataTransformer
DMDPlayLostModeSoundOperation
DMDPolicyPersistence
DMFEmergencyModeRemoteInterface
DMFPolicyRemoteInterface
DMDPolicyRegistration
DMDPolicyServerListenerDelegate
DMDUserSwitchStakeholder
UMUserSwitchStakeholder
DMDPowerAssertion
DMDProcessDeclarationsOperation
DMDProcessStatusOperation
DMDRefreshCellularPlansOperation
DMDRefreshStatusOperation
DMDRegisterConfigurationSourceOperation
DMDRemoveAppOperation
DMDRemoveConfigurationOperation
DMDRemoveEffectivePolicyOperation
DMDRemoveEffectivePolicyRequest
DMDRemoveEventSubscriptionOperation
DMDRemoveEventSubscriptionRequest
DMDRemoveManagedBookOperation
DMDRemoveOSUpdateOperation
DMDRemoveProfileOperation
DMDRemoveProtectedProfileOperation
DMDRemoveProvisioningProfileOperation
DMDRequestAirPlayMirroringOperation
DMDRestartDeviceOperation
DMDScheduleOSUpdateOperation
DMDSendEventOperation
DMDServer
DMDSetAppAnalyticsEnabledOperation
DMDSetAppAssociatedDomainsEnableDirectDownloadsOperation
DMDSetAppAssociatedDomainsOperation
DMDSetAppConfigurationOperation
DMDSetAppRemovabilityOperation
DMDSetAppVPNUUIDOperation
DMDSetBluetoothEnabledOperation
DMDSetDataRoamingEnabledOperation
DMDSetDeclarationsOperation
DMDSetDeviceNameOperation
DMDSetDiagnosticSubmissionEnabledOperation
DMDSetEffectivePolicyOperation
DMDSetEffectivePolicyRequest
DMDSetMaximumResidentUsersOperation
DMDSetPasscodeLockGracePeriodOperation
DMDSetPersonalHotspotEnabledOperation
DMDSetVoiceRoamingEnabledOperation
DMDShutDownDeviceOperation
DMDSSAuthenticationRequestDelegate
SSAuthenticateRequestDelegate
SSRequestDelegate
DMDSSRequestDelegate
DMDStopAirPlayMirroringOperation
DMDStopManagingAppOperation
DMDStopManagingBooksOperation
DMDSubscriptionEvent
DMDSUManagerInstallTask
DMDSUStatus
DMDSUManagerInstallTask_iOS
DMDTaskOperation
DMDTaskOperationProtocol
DMDTaskOperationContext
DMDTaskServerDelegate
DMDConfigurationEngineDelegate
CATTaskServerDelegate
DMDTaskOperationProvider
DMDiPhoneOSTaskServerDelegate
DMDTaskServerListenerDelegate
DMDTestEventStream
DMDEventTypeStream
DMDTriggerDiagnosticsOperation
DMDUpdateAppOperation
DMDUpdateDeclarationsOperation
DMDUpdateEnqueuedCommandsOperation
DMDUserNotification
DMDUserNotificationController
DMDUserNotificationQueueEntry
DMDUserNotificationManager
DMDValidateApplicationsOperation
ASDJob
BundleIdentifier
LSApplicationProxy
MCBook
SecCertificateRef
DMDFeatureFlags
SUDescriptor
MCProfile
UMUser
DMDMappedMemory
DMDUtilities
DMDLegacy
currentUser
writeToURL:atomically:
writeToFile:options:error:
writeToFile:atomically:
willChangeValueForKey:
webDomains
webDomainCategoryPolicy
weakObjectsPointerArray
waitUntilAllOperationsAreFinished
vppStateFlagsWithProxy:
viewContext
version
verboseDescription
valuesByPropertyKey
valueForKeyPath:
valueForKey:error:
valueForKey:
valueForEntitlement:
value
validateAppBundleIDs:completion:
username
userValueForSetting:
userType
userProfileRestrictions
userPersonaUniqueString
userPersonaBundleIDList
userInfo
userDefaultVoice
useDelay
upsertDeclarations
updateType
updateState
updateJaliscoLibraryWithReason:completionHandler:
updateCoalescenceInterval
unusedRedemptionCode
unsignedIntegerValue
unknownPayloadKeys
unique_id
unionSet:
uninstallAppWithBundleID:requestUserConfirmation:completion:
transport
transitionWithTriggeringEvent:
timeZone
timeIntervalSinceReferenceDate
timeIntervalSinceNow
timeIntervalSinceDate:
timeIntervalSince1970
text
terminateSyncWithCompletionHandler:
taskWithName:reason:
systemProfileRestrictions
systemPlaceholderEnumerator
synthesizeProfileOutUUIDs:withOldUUIDs:assetProviders:
syncToken
switchToLoginUserWithCompletionHandler:
supportsFileLevelEncryption
supportsBlockLevelEncryption
substringWithRange:
substringFromIndex:
subscriptionsInUse
subscriberCellularProvider
style
stringWithValidatedFormat:validFormatSpecifiers:error:
stringWithUTF8String:
stringWithString:
stringWithFormat:
stringWithCString:encoding:
stringFromNumber:
stringFromDate:
stringForState:
stringForInstallationState:
stringByAppendingString:
stringByAppendingPathComponent:
storeItemID
stopUpdatingLocation
stopMonitoringBudgets:completionHandler:
staticUsage
stateWithName:
state
startWithRedeemResponseBlock:
startWithErrorHandler:
startWithAuthenticateResponseBlock:
startObservingChangesWithHandler:
startMonitoringBudgets:darwinNotificationName:notificationTimes:error:
startDownloadWithMetadata:withResult:
startDate
start
standardUserDefaults
specificCategories
sortedArrayUsingSelector:
sortUsingComparator:
sortDescriptorWithKey:ascending:
slotId
slotID
signerCertificates
shutdownWithOptions:
shortVersionString
shield
sharedUsage
sharedService
sharedReader
sharedInstance
sharedHacks
sharedConnection
sharedConfiguration
setWithObjects:
setWithObject:
setWithArray:
setWeekday:
setVersion:
setValueTransformer:forName:
setValue:forSetting:
setValue:forProperty:
setValue:forKey:
setVPNUUIDString:
setUnusedRedemptionCode:
setURL:
setTransitionHandler:
setTimeZone:
setTimeStyle:
setSuspended:
setSupportedPredicates:
setSupportedMessages:
setSupportedEvents:
setSupportedConfigurations:
setSupportedCommands:
setSupportedAssets:
setSupportedActivations:
setStaticUsage:
setStateChangeTimestamp:
setState:
setSortDescriptors:
setShouldHideUserPrompts:
setShouldFilterExternalOriginatedDownloads:
setShouldAddStoreAsynchronously:
setShortVersion:
setSharedUsage:
setServerHash:
setSecond:
setResultType:
setResultStatus:
setResourceValues:error:
setResourceValue:forKey:error:
setRequestedPMV:
setRequestType:
setRemovable:
setRemovability:forAppWithBundleID:byClient:completion:
setRemoteObjectInterface:
setRelationshipKeyPathsForPrefetching:
setRegisteredConfigurationSources:
setRedemptionCode:
setRebootType:
setQueuePriority:
setPropertyKeys:
setPropertiesToFetch:
setPromptStyle:
setProfile:
setPrimitiveValue:forKey:
setPreviousVersion:
setPredicatePayloadMetadata:
setPredicate:
setPowered:
setPolicyTypes:
setPhoneNumber:
setPersonaIdentifier:
setPersistentStoreDescriptions:
setPersistentID:
setPersistenceIdentifier:
setPendingStatusUpdate:
setPayloadIdentifier:
setPayloadDictionary:
setPayloadDescriptions:
setPayload:
setOutgoingPayloadMetadataReferences:
setOrganizationsByIdentifier:
setOrganization:
setOptions:
setOption:forKey:
setOnDemandResourcesUsage:
setObject:forKeyedSubscript:
setObject:forKey:
setNumberOfUpdates:
setName:
setModificationDate:
setMinute:
setMetadata:forPersistentStore:
setMaxConcurrentOperationCount:
setManagementInformation:
setMDMUseDelayPeriod:
setLostModeEnabled:
setLogLevel:
setLocale:
setLicenseType:
setKind:
setIsValidated:
setIsUserBasedVPP:
setIsUPP:
setIsRestricted:
setIsPlaceholder:
setIsLicenseRevoked:
setIsLicenseExpired:
setIsDeviceBasedVPP:
setIsBetaApp:
setIsAppStoreVendable:
setIsAppClip:
setIsAdHocCodeSigned:
setInstalled:
setInstallationState:
setInitialState:
setITunesStoreID:
setHour:
setHasUpdateAvailable:
setFullPath:
setFormatOptions:
setForced:
setFootnoteText:
setFireDate:
setFeedback:
setFailed:
setExternalVersionIdentifier:
setExportedObject:
setExportedInterface:
setEvents:
setEventType:
setEventStatuses:
setErrorsForKeys:
setEcho:
setDynamicUsage:
setDownloadOnly:
setDownloadKinds:
setDownloadIdentifier:
setDisableSlideToUnlock:
setDetails:
setDesiredAccuracy:
setDateStyle:
setDate:
setDNSProxyUUIDString:
setContentFilterUUIDString:
setConfiguration:
setCanCreateNewAccount:
setBuyParams:
setBundlesIdentifiers:forPersonaWithPersonaUniqueString:completionHandler:
setBundleIdentifiers:
setBoolValue:forSetting:
setAvailable:
setAutoDownload:
setAuthorizationStatusByType:forBundle:
setAuthor:
setAuthenticationContext:
setAssociatedDomainsEnableDirectDownloads:
setAssociatedDomains:
setActive:
setAccountNameEditable:
setAccountIdentifier:
sessionWithConfiguration:
sendRequestWithCompletionBlock:
seconds
second
scheme
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
scheduledTimerWithTimeInterval:repeats:block:
scanWaitInterval
scanForUpdates:withResult:
save:
resumeSync
resumeJobsWithIDs:completionBlock:
resultStatus
resultObject
restrictionsAfterApplyingRestrictionsDictionary:toRestrictionsDictionary:outChangeDetected:outError:
restrictedAppBundleIDs
rereadManagedAppAttributes
requestWithURL:
requestLocation
removeProvisioningProfileWithUUID:outError:
removeProtectedProfileAsyncWithIdentifier:installationType:completion:
removeProfileAsyncWithIdentifier:installationType:completion:
removePointerAtIndex:
removePersistenceIdentifier:
removeObserver:name:object:
removeObserver:forKeyPath:context:
removeObserver:forKeyPath:
removeObjectsInArray:
removeObjectsForKeys:
removeObjectIdenticalTo:
removeObjectForKey:
removeObjectAtIndex:
removeObject:
removeItemAtURL:error:
removeItemAtPath:error:
removeDeclarations
removeAllObjects
removalPasscode
removable
removabilityForAppWithBundleID:completion:
remoteObjectProxyWithErrorHandler:
remoteInterface
regularExpressionWithPattern:options:error:
registerUserSwitchStakeHolder:
refreshObject:mergeChanges:
redownloadParameters
redemptionCode
rangeAtIndex:
queueFileDataForAcceptance:originalFileName:outError:
purgeDownload:
propertyNameForKey:
propertyListWithData:options:format:error:
propertyKeys
profileWithData:outError:
profileValidated
profileIdentifier
profileDescription
profileData
profile
productSystemName
productKey
processIdentifier
probe:
primitiveValueForKey:
predicateWithFormat:
predicateWithBlock:
postNotificationName:object:
pointerAtIndex:
playSoundWithOptions:completion:
personaIdentifier
personaID
persistentStores
persistentStoreDescriptions
persistentStoreCoordinator
persistentIdentifier
persistentID
performSelectorOnMainThread:withObject:waitUntilDone:
performSelector:withObject:afterDelay:
performBlockAndWait:
performBlock:
payloads
payloadWebSites
payloadType
payloadTimeBudget
payloadStartTime
payloadStartDay
payloadStandardConfigurations
payloadSpread
payloadSeconds
payloadSchedule
payloadReturnStatus
payloadReference
payloadRatingRegion
payloadQueries
payloadPredicates
payloadPredicate
payloadPhoneNumber
payloadNotificationTimes
payloadMonitors
payloadMonitor
payloadMode
payloadMessage
payloadLocalTime
payloadIdentifiersVersion2
payloadIdentifiers
payloadHostnames
payloadFrequency
payloadEvents
payloadEndTime
payloadEndDay
payloadEcho
payloadDescriptor
payloadDescription
payloadDays
payloadDay
payloadDateTime
payloadDSID
payloadCategoriesVersion2
payloadCategories
payloadCalendarIdentifier
payloadApps
path
password
organizationType
organizationDisplayName
orPredicateWithSubpredicates:
options
operations
openSensitiveURL:withOptions:error:
openApplication:options:withResult:
onDemandResourcesUsage
objectWithID:
objectID
objectForKeyedSubscript:
objectForKey:
objectAtIndexedSubscript:
object
numberWithUnsignedInteger:
numberWithLongLong:
numberWithInteger:
numberWithInt:
numberWithDouble:
numberWithBool:
number
null
normalizedPercentComplete
nextDateAfterDate:matchingComponents:options:
newBackgroundContext
newAssertionForBundle:withReason:
name
mutableSetValueForKey:
mutableCopy
mustInstallProfileNonInteractively:
monitorWithConfiguration:
minute
minusSet:
methodForSelector:
metadataForPersistentStore:
installState
installProvisioningProfileData:managingProfileIdentifier:outError:
installProgress
installProfileData:options:outError:
insertString:atIndex:
initWithXPCConnection:
initWithValuesByPropertyKey:errorsByPropertyKey:
initWithUsers:
initWithUsername:dataQuota:dataUsed:hasDataToSync:isCurrentUser:
initWithUpdate:
initWithUUID:type:identifier:profileVersion:displayName:organization:profileDescription:isManaged:isLocked:hasRemovalPasscode:isEncrypted:signerCertificates:payloads:restrictions:
initWithUUID:
initWithURLRequest:
initWithURL:
initWithType:identifier:payloadVersion:displayName:organization:payloadDescription:
initWithType:defaultPolicy:currentPoliciesByIdentifier:defaultPriority:prioritiesByIdentifier:excludedIdentifiers:
initWithTarget:
initWithSupportsBlockLevelEncryption:supportsFileLevelEncryption:passcodeIsSet:passcodeIsCompliantWithGlobalRestrictions:passcodeIsCompliantWithProfileRestrictions:passcodeLockGracePeriodEnforced:passcodeLockGracePeriod:
initWithStateDescription:
initWithSecurityInformation:
initWithRestrictions:
initWithRedeemCodes:
initWithReason:
initWithQueue:name:stateHandlerBlock:
initWithProfiles:
initWithProductKey:status:downloadPercentComplete:
initWithProductKey:humanReadableName:productName:version:build:downloadSize:installSize:isCritical:restartRequired:allowsInstallLater:
initWithPersistentID:iTunesStoreID:author:title:version:type:state:
initWithOptions:
initWithObjects:forKeys:
initWithObjects:
initWithName:managedObjectModel:
initWithManifestDictionary:
initWithManagerOptions:
initWithMachServiceName:options:
initWithMachServiceName:
initWithLocation:
initWithListenerEndpoint:
initWithKind:
initWithKeyOptions:valueOptions:capacity:
initWithItemIdentifer:externalVersionIdentifier:bundleIdentifier:bundleVersion:skipDownloads:
initWithFormat:arguments:
initWithEffectiveBundle:delegate:onQueue:
initWithDownloadMetadata:
initWithDelegate:clientType:
initWithContentsOfURL:
initWithCommonName:data:isIdentity:
initWithCertificates:
initWithCategories:applications:webDomains:schedule:calendarIdentifier:identifier:
initWithCapacity:
initWithBypassCode:
initWithBundleIdentifierOfSystemPlaceholder:error:
initWithBundleIdentifier:state:
initWithBundleIdentifier:efficacy:name:withHandler:
initWithBundleIdentifier:allowPlaceholder:error:
initWithBundleID:
initWithBooks:
initWithAuthenticationContext:
initWithArray:copyItems:
initWithArray:
initWithAppsByBundleIdentifier:
initWithAction:productKey:error:
initWithAccount:
includePayloadContents
includeInternalState
inReplyTo
iTunesStoreID
humanReadableUpdateName
hour
host
hasPrefix:
hasMIDBasedSINF
hasDataToSync
hasChanges
handleFailureInMethod:object:file:lineNumber:description:
handleFailureInFunction:file:lineNumber:description:
getUpdatesWithCompletionBlock:
getSubscriptionInfoWithError:
getSimLabel:error:
getResourceValue:forKey:error:
getPreferredDataSubscriptionContextSync:
getPhoneNumber:error:
getMobileEquipmentInfo:
getManagedUpdatesWithCompletionBlock:
getLocalizedOperatorName:error:
getJobsUsingBlock:
getFileSystemRepresentation:maxLength:
fullPath
friendlyName
forceDeletion
force
footnote
fmipStateWithCompletion:
floatValue
firstObject
firstMatchInString:options:range:
finishDownloads:
filteredArrayUsingPredicate:
filterRestrictionDictionary:toIncludeOnlyRestrictionsThatDifferFromRestrictions:
filterFlags
fileURLWithPath:isDirectory:
fileURLWithPath:
fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
fileSystemRepresentation
fileExistsAtPath:
fileDescriptor
fetchRequest
fetchActivationLockBypassKeyWithError:
failureError
externalVersionIdentifier
executeFetchRequest:error:
execute:
excludedContent
exceptionWithName:reason:userInfo:
eventWithTrigger:context:
eventIdentifiers
errorsForKeys
errorsByPropertyKey
errorWithDomain:code:userInfo:
error
ephemeralSessionConfiguration
enumeratorWithOptions:
enumerateObjectsUsingBlock:
enumerateKeysAndObjectsUsingBlock:
entity
enforcedSoftwareUpdateDelayInDays
encodeObject:forKey:
enableManagedLostModeWithInfo:completion:
enableLostModeWithInfo:
elements
effectiveWhitelistedAppBundleIDs
effectiveValueForSetting:
effectiveUserIdentifier
echo
eSIMServerURL
dynamicUsage
downtimeCategoryIdentifiers
downloads
downloadSize
downloadPhaseIdentifier
downloadIdentifier
downloadAndInstallState:
doubleValue
domain
distantFuture
diskUsage
disableManagedLostModeWithLocatedMessage:completion:
didChangeValueForKey:
dictionaryWithValuesForKeys:
dictionaryWithObjects:forKeys:count:
dictionaryWithContentsOfURL:
dictionaryWithContentsOfFile:
dictionaryWithCapacity:
dictionary
destroyPersistentStoreAtURL:withType:options:error:
destinationName
destinationDeviceID
descriptor
dependentsOfParent:inDomain:
dependencies
denyiCloudLogout
deleteUser:completionHandler:
deleteObject:
deleteFeedback
defaultWorkspace
defaultStore
defaultRestrictions
defaultManager
defaultCenter
decodeObjectOfClasses:forKey:
decodeObjectOfClass:forKey:
declarations
declarationServerHash
declarationForPayload:error:
dateWithTimeIntervalSinceReferenceDate:
dateWithTimeIntervalSinceNow:
dateWithTimeIntervalSince1970:
dateFromString:
dateByAddingUnit:value:toDate:options:
dateByAddingTimeInterval:
dataWithPropertyList:format:options:error:
dataWithContentsOfURL:
dataWithContentsOfFile:
dataWithBytes:length:
dataUsingEncoding:
dataUsed
dataTaskWithRequest:completionHandler:
writeToURL:options:error:
dataQuota
currentThread
currentRunLoop
currentRestrictions
currentPasscodeIsCompliantWithProfileRestrictionsOutError:
currentPasscodeIsCompliantWithGlobalRestrictionsOutError:
currentLocale
currentLayout
currentHandler
currentDevicePropertyKeys
currentConnection
currentCalendar
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
countByEnumeratingWithState:objects:count:
count
copyMobileNetworkCode:error:
copyMobileCountryCode:error:
copyItemWithPersistentID:useSystemKeychain:
copyItemAtURL:toURL:error:
copyCarrierBundleVersion:error:
copy
coordinateWritingItemAtURL:options:error:byAccessor:
coordinateReadingItemAtURL:options:error:byAccessor:
contextForSignIn
contentFilterUUIDString
containsString:
containsObject:
connectWithClientTransport:
conformsToOverridePatternWithKey:
configurationStatusDidChange:completion:
configurationSourceName
configurationForDefaultMainDisplayMonitor
configurationEventsDidChange:completion:
configurationEngineRequestedAsset:completion:
configuration
componentsJoinedByString:
components:fromDate:
compatibilityObject
commandForPayload:error:
code
clientUserInfo
clearStoredActivationLockBypassCode
clearRestrictionsPasscodeWithError:
checkStatusOfBudgets:error:
checkResourceIsReachableAndReturnError:
changedValues
certificatePersistentID
cancelPreviousPerformRequestsWithTarget:selector:object:
cancelJobsWithIDs:completionBlock:
cancelDownloads:completionBlock:
cancelAllOperations
calendarWithIdentifier:
bytes
bundleVersion
bundleIdentifiers
bundleID
bundleForClass:
boolValueForEntitlement:
begin
base64EncodedStringWithOptions:
author
authenticateResponseType
associatedDomainsEnableDirectDownloads
associatedDomains
assetReferences
arrayWithObjects:count:
arrayWithObject:
arrayWithCapacity:
arrayWithArray:
arrayByAddingObjectsFromArray:
arrayByAddingObject:
applyRestrictionDictionary:clientType:clientUUID:localizedClientDescription:localizedWarningMessage:outRestrictionChanged:outEffectiveSettingsChanged:outError:
applications
applicationType
applicationCategoryPolicy
appendFormat:
appWhitelistState
appState
appClipMetadata
andPredicateWithSubpredicates:
ams_DSID
allowFreePurchases
allValues
allUsers
allObjects
allKeysForObject:
allKeys
addTransitionToState:triggeringEvent:
addTarget:selector:forOperationEvents:userInfo:
addTarget:selector:forOperationEvents:
addStateWithName:
addPointer:
addOperations:waitUntilFinished:
addOperationWithBlock:
addOperation:
addObserverForName:object:queue:usingBlock:
addObserver:selector:name:object:
addObserver:forKeyPath:options:context:
addObjectsFromArray:
addObject:
addEntriesFromDictionary:
addDownloads:completionBlock:
addDependency:
addCommands
addAsset:forType:
activeSyncDeviceIdentifier
activeRestrictionsURL
activeAccount
action
accountsWithAccountType:
accountTypeWithAccountTypeIdentifier:
accountProperties
account
aa_primaryAppleAccountWithPreloadedDataclasses
aa_primaryAppleAccount
aa_personID
aa_isPrimaryEmailVerified
_setQueue:
_applyHeuristicsToRestrictions:forProfile:outError:
VPNUUIDString
UUIDString
UUID
UTF8String
URLForResource:withExtension:
DNSProxyUUIDString
meInfoList
maximumRangeOfUnit:
maxNumberOfUsers
manifestURL
manifestDictionary
managingProfileIdentifier
managementOptions
managementInformation
managedOnly
managedObjectContext
managedAppsOnly
mainThread
mainQueue
lowercaseString
longLongValue
localizedStringWithFormat:
localizedStringForKey:value:table:
localizedName
localizedDescription
loadBooksForStoreIDs:withCompletionHandler:
listAllPersonaWithAttributes
licenseType
length
lastPathComponent
lastObject
kind
itemName
itemID
isVPPLicensed
isSubclassOfClass:
isSetupBuddyDone
isRestricted
isPlaceholder
isPermittedOnCurrentPlatform
isPasscodeSet
isMultiUser
isManagedLostModeActive
isManagedByMDM
isMainThread
isLoginUser
isLocked
isInstalled
isInserted
isFinished
isExecuting
isEqualToUser:
isEqualToString:
isEqualToNumber:
isEnterpriseBookBackupAllowed
isEncrypted
isEnabledForDataclass:
isDownloadOnly
isDowngraded
isDone
isDiagnosticSubmissionAllowed
isDeviceBasedVPP
isDeleted
isBetaApp
isAutoDownload
isAppStoreVendable
isAppAnalyticsAllowed
isAdHocCodeSigned
isActivationLockedWithCompletion:
intersectSet:
internal
integerValue
integerForKey:
intValue
installedProfilesWithFilterFlags:
installedProfileWithIdentifier:
installedProfileIdentifiersWithFilterFlags:
installationSize
installUpdateWithOptions:withResult:
installType
URLByAppendingPathComponent:
MCHashedFilenameWithPrefix:extension:
URLByAppendingPathComponent:isDirectory:
MCMutableDeepCopy
whitelistedClassesForRequest
requiredEntitlements
runWithRequest:bundleIdentifier:
dmf_installSynthesizedProfileRequestWithAssetProviders:error:
dmf_removeSynthesizedProfileRequestWithError:
filterQueryForScope
addRMDSpecificResultsToDictionary:errors:
deviceInfoSupervisedKeys
deviceInfoDeviceChannelKeys
deviceInfoUserChannelKeys
deviceInfoRMDKeys
dmfKeyFromDeviceInfoKey:
deviceInfoKeyFromDMFKey:
supportsSecureCoding
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
encodeWithCoder:
initWithCoder:
TB,R
urlRepresentation
dataRepresentation
stringRepresentation
numberRepresentation
fontURL
setFontURL:
.cxx_destruct
_fontURL
T@"NSURL",C,N,V_fontURL
init
assetResolutionDidSucceedWithAssetURL:
assetResolutionFailedWithError:
assetIdentifier
assetDescriptor
assetReference
T@"NSString",R,C,N
T@"CEMAssetBaseDescriptor",R,C,N
T@"CEMAssetBaseReference",R,C,N
initWithFontDeclaration:resolver:
isAsynchronous
main
fontDeclaration
setFontDeclaration:
resolver
setResolver:
_fontDeclaration
_resolver
T@"CEMFontDeclaration",&,N,V_fontDeclaration
T@"<DMDRemoteAssetResolver>",&,N,V_resolver
initWithFontDeclaration:installMetadata:
installMetadata
setInstallMetadata:
_installMetadata
T@"CEMFontAssetInstallMetadata",&,N,V_installMetadata
dmf_installAssetOperationWithReferenceResolver:error:
dmf_removeAssetOperationWithInstallMetadata:error:
imageURL
setImageURL:
_imageURL
T@"NSURL",C,N,V_imageURL
initWithImageDeclaration:resolver:
imageDeclaration
setImageDeclaration:
_imageDeclaration
T@"CEMImageDeclaration",&,N,V_imageDeclaration
initWithImageDeclaration:installMetadata:
T@"CEMImageAssetInstallMetadata",&,N,V_installMetadata
primaryAppleID
initWithDelegate:uniqueIdentifier:budgetPredicate:
initWithDelegate:uniqueIdentifier:compositeBudgetPredicate:
_extractComponentsFromBudgetPredicate:
_extractComponentsFromCompositeBudgetPredicate:
_budgetDays:duration:calendar:schedule:
remainingTime
setRemainingTime:
usageBudget
setUsageBudget:
usageMonitor
setUsageMonitor:
_remainingTime
_usageBudget
_usageMonitor
T@"NSNumber",&,N,V_remainingTime
T@"USBudget",&,N,V_usageBudget
T@"USUsageMonitor",&,N,V_usageMonitor
initWithDelegate:uniqueIdentifier:predicate:
invalidate
metadata
compare:
initWithDelegate:uniqueIdentifier:curfewPredicate:
evaluatePredicateWithError:
updateObserverRegistration
_extractComponentsFromPredicate:
_registerPredicateObserver
_datesForNextCurfewBoundary
_nextDateAfter:matchingWeekday:hour:minute:second:inCalendar:
calendarIdentifier
setCalendarIdentifier:
notificationTimes
setNotificationTimes:
expiredNotificationTimes
setExpiredNotificationTimes:
scheduledAlarmIdentifiers
setScheduledAlarmIdentifiers:
startDay
setStartDay:
startHour
setStartHour:
startMinute
setStartMinute:
startSecond
setStartSecond:
endDay
setEndDay:
endHour
setEndHour:
endMinute
setEndMinute:
endSecond
setEndSecond:
_calendarIdentifier
_notificationTimes
_expiredNotificationTimes
_scheduledAlarmIdentifiers
_startDay
_startHour
_startMinute
_startSecond
_endDay
_endHour
_endMinute
_endSecond
T@"NSString",C,N,V_calendarIdentifier
T@"NSSet",&,N,V_notificationTimes
T@"NSMutableArray",&,N,V_expiredNotificationTimes
T@"NSMutableArray",&,N,V_scheduledAlarmIdentifiers
Tq,N,V_startDay
Tq,N,V_startHour
Tq,N,V_startMinute
Tq,N,V_startSecond
Tq,N,V_endDay
Tq,N,V_endHour
Tq,N,V_endMinute
Tq,N,V_endSecond
initWithDelegate:uniqueIdentifier:iCloudAccountPredicate:
DSID
setDSID:
_DSID
T@"NSString",C,N,V_DSID
initWithDelegate:uniqueIdentifier:oneTimePredicate:
endDate
setEndDate:
_endDate
T@"NSDate",&,N,V_endDate
fetchRequestForActivationsFromOrganizationWithIdentifier:
updateStateDictionaryIfNeeded
predicatePayloadMetadata
T@"NSDictionary",&,D,N
reportActivationPredicateObserverDidTrigger
initWithDelegate:uniqueIdentifier:subPredicateObservers:predicate:
subPredicateObservers
_subPredicateObservers
T@"NSArray",R,C,N,V_subPredicateObservers
initWithDelegate:uniqueIdentifier:subPredicateObserver:predicate:
subPredicateObserver
setSubPredicateObserver:
_subPredicateObserver
T@"DMDActivationPredicateObserver",&,N,V_subPredicateObserver
calendarForIdentifier:
lastPredicateEvaluationValue
setLastPredicateEvaluationValue:
predicateType
_lastPredicateEvaluationValue
_predicateType
_uniqueIdentifier
T@"<DMDActivationPredicateObserverDelegate>",W,N,V_delegate
TB,N,V_lastPredicateEvaluationValue
T@"NSString",R,C,N,V_predicateType
T@"NSString",R,C,N,V_uniqueIdentifier
activationPredicateObserverManager:didObserveChangeForPredicateWithIdentifier:
activationPredicateObserverDidTrigger:
handleAlarmWithIdentifier:
handleDistributedNotificationWithName:userInfo:
handleNotifyMatchingNotificationWithName:
handleManagedEffectiveSettingsChangeInGroup:
alarms
distributedNotificationNames
notifyMatchingNotifications
managedSettingsGroups
TB,R,N
T@"NSArray",R,N
addActivationPredicateObserverForPredicate:withUniqueIdentifier:
removeActivationPredicateObserverWithUniqueIdentifier:
activationPredicateObserverForIdentifier:
_reportChangeToObserver:
_updateAllActivationPredicateObserverRegistrations
_predicateObserverForPredicate:withUniqueIdentifier:
_subPredicateObserversForCompoundSubPredicates:withUniqueIdentifier:
delegate
setDelegate:
activationPredicateObserversByIdentifier
setActivationPredicateObserversByIdentifier:
_delegate
_activationPredicateObserversByIdentifier
T@"NSMutableDictionary",&,N,V_activationPredicateObserversByIdentifier
T@"<DMDActivationPredicateObserverManagerDelegate>",W,N,V_delegate
validateRequest:error:
cancel
endOperationIfNeeded
runConcurrently
runOnMainThread
runWithRequest:
transaction
setTransaction:
_transaction
T@"NSObject<OS_os_transaction>",&,N,V_transaction
shared
T@"DMDAirPlayManager",R,N
initPrivate
startAirPlaySessionWithDestinationName:destinationDeviceID:password:scanWaitTime:sessionType:force:error:
stopAirPlaySessionOfType:error:
_outputContextForSessionType:
_setOutputDevices:forSessionType:password:error:
_promptUserToMirrorOnDisplayNamed:withCompletion:
_discoverDeviceWithDestinationDeviceID:scanWaitTime:error:
_discoverDeviceWithDestinationName:scanWaitTime:sessionType:
currentlyPickedDestinationName
setCurrentlyPickedDestinationName:
currentlyPickedDestinationDeviceID
setCurrentlyPickedDestinationDeviceID:
mDeviceIDIsMAC
_currentlyPickedDestinationName
_currentlyPickedDestinationDeviceID
T@"NSString",C,N,V_currentlyPickedDestinationName
T@"NSString",C,N,V_currentlyPickedDestinationDeviceID
sharedController
metadataPath
_sendAppStatusChangeNotification
willStartInstallingForLifeCycle:
didStartInstallingForLifeCycle:
didChangeInstallingProgressForLifeCycle:
didPauseInstallingForLifeCycle:
didResumeInstallingForLifeCycle:
didCancelInstallingForLifeCycle:
didFailInstallingForLifeCycle:
didFinishInstallingForLifeCycle:
willStartUpdatingForLifeCycle:
didStartUpdatingForLifeCycle:
didChangeUpdatingProgressForLifeCycle:
didPauseUpdatingForLifeCycle:
didResumeUpdatingForLifeCycle:
didCancelUpdatingForLifeCycle:
didFailUpdatingForLifeCycle:
didFinishUpdatingForLifeCycle:
willStartUninstallingForLifeCycle:
didFailUninstallingForLifeCycle:
didFinishUninstallingForLifeCycle:
T@"DMDAppController",R,N
T@"NSString",R,N
foregroundBundleIdentifiers
getBundleIdentifierForManifestURL:completion:
getBundleIdentifierForAppRequest:completion:
getMetadataForAppRequest:completion:
managementInformationForBundleIdentifier:
setManagementInformation:forBundleIdentifier:error:
writeManagementInformationToDiskWithError:
updateBundleIDPersonaIDMappingForPersonaID:addingBundleID:completionHandler:
removePersonaMappingForBundleID:error:
VPNUUIDStringForBundleIdentifier:
setVPNUUIDString:forBundleIdentifier:error:
contentFilterUUIDStringForBundleIdentifier:
setContentFilterUUIDString:forBundleIdentifier:error:
DNSProxyUUIDStringForBundleIdentifier:
setDNSProxyUUIDString:forBundleIdentifier:error:
associatedDomainsForBundleIdentifier:
setAssociatedDomains:forBundleIdentifier:error:
associatedDomainsEnableDirectDownloadsForBundleIdentifier:
setAssociatedDomainsEnableDirectDownloads:forBundleIdentifier:error:
removabilityForBundleIdentifier:
setRemovability:forBundleIdentifier:completion:
configurationForBundleIdentifier:
setConfiguration:forBundleIdentifier:error:
feedbackForBundleIdentifier:
setFeedback:forBundleIdentifier:error:
getBundleIdentifierForStoreItemIdentifier:personaIdentifier:completion:
getMetadataForNonEnterpriseAppRequest:completion:
handleFetchRequest:completion:
startInstallingEnterpriseAppWithManifestURL:completion:
startInstallingNonEnterpriseAppForRequest:completion:
startRedeemingAppWithCode:completion:
cancelAppInstallationWithBundleIdentifier:completion:
resumeAppInstallationWithBundleIdentifier:completion:
startUpdatingAppForRequest:metadata:completion:
cancelAppUpdateWithBundleIdentifier:completion:
resumeAppUpdateWithBundleIdentifier:completion:
startUninstallingAppWithBundleIdentifier:completion:
managedBundleIdentifiers
setVPNUUIDString:associatedDomains:enableDirectDownloads:configuration:options:forBundleIdentifier:
setVPNUUIDString:contentFilterUUIDString:DNSProxyUUIDString:associatedDomains:enableDirectDownloads:configuration:options:forBundleIdentifier:
stateForBundleIdentifier:
setState:forBundleIdentifier:error:
advanceTransientStates
_cleanUpStaleManagementStatesAndStartObservingApps
_applyChangeInLifeCycle:stateMap:
_metadataForBundleIdentifier:
_setMetadata:forBundleIdentifier:error:
_metadataByBundleIdentifier
_newMetadataDictionary
_getEnterpriseAppMetadataForManifestURL:completion:
_getEnterpriseAppMetadataFromData:completion:
queue
manifest
stateHandler
_queue
_manifest
_stateHandler
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
T@"NSMutableDictionary",R,N,V_manifest
T@"DMFOSStateHandler",R,N,V_stateHandler
T@"NSArray",R,C,N
appTypeFromProxy:
_allPropertyKeys
enumeratorForUserAppPlaceholders
enumeratorForSystemAppPlaceholders
enumeratorForOrdinaryApps
_installDeviceLicensedAppForRequest:completion:
_installUserAppForRequest:completion:
_downloadAppForRequest:type:completion:
_updateForegroundBundleIdentifiers
_appStoreAccountIdentifierForPersona:
_appleAccountForPersona:
changeTypeAsString:
jobManager
updatesService
addTerminationAssertion:forBundleIdentifier:
removeTerminationAssertionForBundleIdentifier:
userIsSignedIn
promptUserToSignInWithCompletion:
sendAppRequestWithBundleIdentifier:storeItemIdentifier:personaIdentifier:type:skipDownloads:completion:
installSystemAppWithBundleIdentifier:completion:
_withSandboxExtensionForApp:do:
_managedDefaultsForBundleIdentifier:
_applyStoreDictionary:toAppMetadata:
_getMetadataForBundleIdentifier:storeItemIdentifier:personaIdentifier:completion:
singleAppModeBundleIndentifier
setSingleAppModeBundleIndentifier:
bundleIDsToAssertions
setBundleIDsToAssertions:
layoutMonitor
setLayoutMonitor:
_foregroundBundleIdentifiers
set_foregroundBundleIdentifiers:
_singleAppModeBundleIndentifier
_bundleIDsToAssertions
_layoutMonitor
__foregroundBundleIdentifiers
T@"NSMutableDictionary",&,N,V_bundleIDsToAssertions
T@"FBSDisplayLayoutMonitor",&,N,V_layoutMonitor
T@"NSArray",&,N,V__foregroundBundleIdentifiers
T@"NSString",C,N,V_singleAppModeBundleIndentifier
T@"ASDJobManager",R,C,N
T@"ASDUpdatesService",R,C,N
_uninstallAppWithBundleIdentifier:completion:
_startUpdatingAppForRequest:metadata:completion:
_updateEndedForLifeCycle:
lifeCycleForBundleIdentifier:
_removeLifeCycleForBundleIdentifier:
_lifeCycleByBundleIdentifier
currentState
currentStateName
willStartInstalling
didStartInstalling
didPauseInstalling
didResumeInstalling
didCancelInstalling
didFailInstalling
didFinishInstalling
willStartUpdating
didStartUpdating
didPauseUpdating
didResumeUpdating
didCancelUpdating
didFailUpdating
didFinishUpdating
willStartUninstalling
didFailUninstalling
didFinishUninstalling
addObserver:
removeObserver:
didChangeInstallingProgress
didChangeUpdatingProgress
cancelAndWaitUntilAllOperationsAreFinished
observers
setObservers:
stateMachine
setStateMachine:
_progress
_observers
_stateMachine
T@"NSPointerArray",&,N,V_observers
T@"NSOperationQueue",&,N,V_queue
T@"CATStateMachine",&,N,V_stateMachine
T@"NSString",R,C,N,V_bundleIdentifier
T@"NSProgress",R,N,V_progress
initWithBundleIdentifier:currentState:
applicationInstallsDidStart:
applicationInstallsDidChange:
applicationInstallsDidUpdateIcon:
applicationsWillInstall:
applicationsDidInstall:
pluginsDidInstall:
applicationsDidFailToInstall:
applicationsWillUninstall:
pluginsWillUninstall:
applicationsDidUninstall:
pluginsDidUninstall:
applicationsDidFailToUninstall:
applicationInstallsArePrioritized:arePaused:
applicationInstallsDidPause:
applicationInstallsDidResume:
applicationInstallsDidCancel:
applicationInstallsDidPrioritize:
applicationStateDidChange:
applicationIconDidChange:
networkUsageChanged:
observeLaunchProhibitedApps
deviceManagementPolicyDidChange:
applicationsDidChangePersonas:
databaseWasRebuilt
initWithBundleIdentifier:
progress
_findProxyInProxies:andCallBlock:
proxyProgress
setProxyProgress:
_proxyProgress
T@"NSProgress",&,N,V_proxyProgress
lifeCycle
bundleIdentifier
setBundleIdentifier:
storeItemIdentifier
setStoreItemIdentifier:
displayName
setDisplayName:
isStoreApp
setIsStoreApp:
isFree
setIsFree:
isUserLicensed
setIsUserLicensed:
needsRedownload
setNeedsRedownload:
_isStoreApp
_isFree
_isUserLicensed
_needsRedownload
_bundleIdentifier
_storeItemIdentifier
_displayName
T@"NSString",C,N,V_bundleIdentifier
T@"NSNumber",C,N,V_storeItemIdentifier
T@"NSString",C,N,V_displayName
TB,N,V_isStoreApp
TB,N,V_isFree
TB,N,V_isUserLicensed
TB,N,V_needsRedownload
T@"DMDAppLifeCycle",R,N
installOperationDidFinish:asset:
assetResolver
setAssetResolver:
_assetResolver
T@"<DMDRemoteAssetResolver>",W,N,V_assetResolver
removeOperationDidFinish:asset:
UUIDsToTransactions
blockOperationWithBlock:
block
setBlock:
_block
T@?,C,N,V_block
availabilityChanged:
T@"DMDBluetoothManager",R,N
setEnabled:
bluetoothManager
enabled
stillNeedsUpdate
setStillNeedsUpdate:
_enabled
_stillNeedsUpdate
_bluetoothManager
T@"BluetoothManager",R,N,V_bluetoothManager
TB,N,V_enabled
TB,N,V_stillNeedsUpdate
endOperationMarkingPayloadMetadata:failedWithError:
dmf_executeRequestWithContext:error:
dmf_executeOperationWithContext:error:
dmf_requestExecutesWithoutReturning
operationDidFinish:userInfo:
commandsWithPayloadDictionaries:organizationIdentifier:context:error:
fetchRequestForCommandsFromOrganizationWithIdentifier:matchingPredicate:
fetchRequestForCommandsFromOrganizationWithIdentifier:
fetchRequestForCommandsPendingExecutionFromOrganizationWithIdentifier:
fetchRequestForCommandsPendingRemovalFromOrganizationWithIdentifier:
fetchRequestForCommandsPendingDeleteFromOrganizationWithIdentifier:
caseInsensitiveCompare:
supportedCommandTypes
supportedDeclarationTypes
supportedAssetTypes
supportedConfigurationTypes
supportedEventTypes
supportedActivationTypes
supportedPredicateTypes
supportedMessageTypes
performBackgroundTask:
managedObjectModel
descriptionForSQLiteStoreWithDatabaseURL:
newUserDatabase
_newDatabaseWithURL:
initializationOperationDidFinish:
updateEventSubscriptions
_updateOrganizationControllers
declarationModificationOperationDidFinish:completionHandler:
updateOrganizationControllers
configurationEngineDidResume:
configurationEngineWillSuspend:
configurationSourceController:fetchStatusUpdatesWithCompletionHandler:
configurationSourceController:fetchEventsWithCompletionHandler:
engineProcessingOperation:enqueuedOperationsForOrganizationWithIdentifier:
engineProcessingOperation:assetResolverForOrganizationWithIdentifier:
registerConfigurationSourceOperation:didUpdateRegistrationForConfigurationSource:
initWithDatabase:policyPersistence:activationManager:
setDeviceStateProvider:
resume
suspend
handleCreateConfigurationOrganizationRequest:completionHandler:
handleDeactivateConfigurationOrganizationRequest:completionHandler:
handleFetchConfigurationOrganizationsRequest:completionHandler:
handleFetchStreamEvents:completionHandler:
handleConfigurationSourceRegistrationRequest:clientIdentifier:completionHandler:
handleSetDeclarationsRequest:completionHandler:
handleUpdateDeclarationsRequest:completionHandler:
handleFetchDeclarationsRequest:completionHandler:
processDeclarationsForOrganizationWithIdentifier:completionHandler:
processStatusForOrganizationWithIdentifier:completionHandler:
refreshStatusForOrganizationWithIdentifier:completionHandler:
handleUpdateCommandsRequest:completionHandler:
handleInstallSubscriptionRequest:completionHandler:
handleRemoveSubscriptionRequest:completionHandler:
sendEvents:organizationIdentifier:completionHandler:
databaseInitializationOperationDidFinish
enqueueDatabaseModificationOperation:completionHandler:
enqueueDeclarationProcessingOperationIfNeeded
enqueueOperation:
enqueueOperations:
_cleanupOrphanedPolicies
delegateDidResume
delegateWillSuspend
policyPersistence
deviceStateProvider
taskOperationProvider
setTaskOperationProvider:
activationPredicateObserverManager
setActivationPredicateObserverManager:
database
setDatabase:
setQueue:
initializationError
setInitializationError:
databaseInitializationOperation
setDatabaseInitializationOperation:
initializationOperation
setInitializationOperation:
organizationControllerByIdentifier
setOrganizationControllerByIdentifier:
eventSubscriptionManager
setEventSubscriptionManager:
_policyPersistence
_deviceStateProvider
_taskOperationProvider
_activationPredicateObserverManager
_database
_initializationError
_databaseInitializationOperation
_initializationOperation
_organizationControllerByIdentifier
_eventSubscriptionManager
T@"DMDConfigurationDatabase",&,N,V_database
T@"CATOperationQueue",&,N,V_queue
T@"NSError",&,V_initializationError
T@"DMDEngineDatabaseInitializationOperation",&,N,V_databaseInitializationOperation
T@"CATOperation",&,N,V_initializationOperation
T@"NSMutableDictionary",&,N,V_organizationControllerByIdentifier
T@"DMDEventSubscriptionManager",&,N,V_eventSubscriptionManager
T@"DMDPolicyPersistence",R,V_policyPersistence
T@"<DMDConfigurationEngineDelegate>",W,N,V_delegate
T@"NSObject<DMDDeviceStateProvider>",&,N,V_deviceStateProvider
T@"NSObject<DMDTaskOperationProvider>",&,N,V_taskOperationProvider
T@"DMDActivationPredicateObserverManager",&,N,V_activationPredicateObserverManager
dmf_installRequestWithContext:error:
dmf_replaceRequestWithContext:error:
dmf_removeRequestWithContext:error:
dmf_statusForResult:context:
installationOperationDidFinish:userInfo:
didSave
fetchRequestMatchingConfigurationOrganizationWithIdentifier:
fetchRequestMatchingConfigurationOrganizationsOfType:
active
TB,D,N
T@"NSArray",C,D,N
payloadMetadatas
resolveAssetWithContext:
initWithOrganization:delegate:
updateWithOrganization:
organization
configurationSourceControllers
persistentConfigurationSources
ephemeralConfigurationSources
configurationSourceWithIdentifier:
registerConfigurationSource:
unregisterConfigurationSource:
identifier
type
setType:
persistentConfigurationSourceControllersByIdentifier
setPersistentConfigurationSourceControllersByIdentifier:
ephemeralConfigurationSourceControllersByIdentifier
setEphemeralConfigurationSourceControllersByIdentifier:
_identifier
_type
_persistentConfigurationSourceControllersByIdentifier
_ephemeralConfigurationSourceControllersByIdentifier
T@"NSString",C,N,V_type
T@"NSMutableDictionary",&,N,V_persistentConfigurationSourceControllersByIdentifier
T@"NSMutableDictionary",&,N,V_ephemeralConfigurationSourceControllersByIdentifier
T@"NSString",R,C,N,V_identifier
T@"DMFConfigurationOrganization",R,N
T@"<DMDConfigurationOrganizationControllerDelegate>",W,N,V_delegate
fetchRequestForAvailableConfigurationsFromOrganizationWithIdentifier:
fetchRequestForAvailableConfigurationsFromOrganizationWithIdentifier:payloadIdentifiers:
fetchRequestForConfigurationsPendingInstallFromOrganizationWithIdentifier:
fetchRequestForConfigurationsPendingRemoveFromOrganizationWithIdentifier:
fetchRequestForConfigurationsPendingInactiveFromOrganizationWithIdentifier:
removalOperationDidFinish:userInfo:
setIdentifier:
organizationIdentifier
setOrganizationIdentifier:
machServiceName
setMachServiceName:
listenerEndpoint
setListenerEndpoint:
reportingRequirements
setReportingRequirements:
T@"NSString",C,N
T@"NSXPCListenerEndpoint",&,N
T@"DMFReportingRequirements",&,N
T@"DMDConfigurationOrganization",&,D,N
T@"NSString",C,D,N
T@"NSXPCListenerEndpoint",&,D,N
T@"DMFReportingRequirements",&,D,N
initialize
allowedTopLevelClasses
context
setContext:
_context
T@"<DMDRemoteAssetResolutionContext>",&,N,V_context
statusForSourceDidChange:
eventsForSourceDidChange:
reportStatus
reportStatusTimeout
reportEvents
reportEventsTimeout
initWithConfigurationSource:delegate:
updateWithConfigurationSource:
configurationSource
updateStatusChangeListener
source
setSource:
_source
T@"CATSerialOperationQueue",&,N,V_queue
T@"DMDConfigurationSourceRepresentation",&,N,V_source
T@"<DMDConfigurationSourceControllerDelegate>",R,W,N,V_delegate
T@"DMFConfigurationSource",R,N
initWithConfigurationSource:
_organizationIdentifier
_machServiceName
_listenerEndpoint
_reportingRequirements
T@"NSString",C,N,V_identifier
T@"NSString",C,N,V_organizationIdentifier
T@"NSString",C,N,V_machServiceName
T@"NSXPCListenerEndpoint",&,N,V_listenerEndpoint
T@"DMFReportingRequirements",&,N,V_reportingRequirements
initWithController:
fetchRemoteProxy:
_tryConnectingToNamedService:completion:
controller
setController:
connection
setConnection:
anonymousEndpoint
setAnonymousEndpoint:
_controller
_connection
_anonymousEndpoint
T@"NSXPCConnection",&,N,V_connection
T@"NSXPCListenerEndpoint",&,N,V_anonymousEndpoint
T@"NSString",&,N,V_machServiceName
T@"DMDConfigurationSourceController",W,N,V_controller
formattedIMEIStringFromString:
formattedICCIDStringFromString:
IMEI
MEID
modemFirmwareVersion
ICCID
currentNetworkName
carrierName
carrierBundleVersion
currentMobileCountryCode
currentMobileNetworkCode
dataRoamingEnabled
setDataRoamingEnabled:
isSubscriptionRoaming:client:
isRoaming
voiceRoamingEnabled
setVoiceRoamingEnabled:
hasGSM
hasCDMA
_supportsVoiceRoaming
TB,N
dealloc
fetchCachedVinylInfoWithCompletion:
refreshCellularPlansWithCSN:serverURL:completion:
ctContext
ctConnection
queueGroup
declarationsWithDictionaries:organizationIdentifier:context:error:
fetchRequestForDeclarationsFromOrganizationWithIdentifier:matchingPredicate:
fetchRequestForDeclarationsFromOrganizationWithIdentifier:
fetchRequestForDeclarationsFromOrganizationWithIdentifier:withIdentifiers:
fetchRequestForActiveDeclarationsFromOrganizationWithIdentifier:
fetchRequestForActiveDeclarationsFromOrganizationWithIdentifier:withIdentifiers:
fetchRequestForActiveDeclarationFromOrganizationWithIdentifier:withIdentifier:serverHash:
fetchRequestForFailedDeclarationsFromOrganizationWithIdentifier:
fetchRequestForDeclarationsPendingDeleteFromOrganizationWithIdentifier:
serverHash
failed
T@"DMDDeviceController",R,N
currentDevice
deviceWithKeys:
T@"DMFDevice",R,N
_stringFromSubscriptionSlot:
availableCapacity
batteryLevel
capacity
isDeviceLocatorServiceEnabled
isDoNotDisturbInEffect
isLostModeEnabled
isDiagnosticSubmissionEnabled
isAppAnalyticsEnabled
isCloudBackupEnabled
carrierSettingsVersion
cellularTechnology
currentCarrierNetwork
currentMCC
currentMNC
isDataRoamingEnabled
EASIdentifier
enforcedSoftwareUpdateDelay
isActivationLockEnabled
isEphemeralMultiUser
isPersonalHotspotEnabled
maximumResidentUsers
skippedSetupPanes
subscriberCarrierNetwork
subscriberMCC
subscriberMNC
isVoiceRoamingEnabled
_deviceInformationForEquipmentInfo:subscription:withClient:
serviceSubscriptions
deviceLocatorServiceEnabledWithError:
isActivationLockEnabledWithError:
_isCloudBackupEnabled
_isPersonalHotspotEnabled
_skippedSetupPanes
deviceName
isAppleInternal
isAwaitingConfiguration
isInSingleAppMode
iTunesStoreAccountHash
iTunesStoreAccountIsActive
model
modelName
osVersion
productName
isSupervised
lastCloudBackupDate
uniqueIdentifier
hasKeychainUnlockedSinceBoot
isKeychainUnlocked
startObservingChanges
stopObservingChanges
keybagLockStateDidChange
networkDidChange
setHasKeychainUnlockedSinceBoot:
setIsKeychainUnlocked:
setIsNetworkTethered:
mKeychainFirstUnlockNotificationToken
mKeychainLockStateNotificationToken
mNetworkChangeNotificationToken
_hasKeychainUnlockedSinceBoot
_isKeychainUnlocked
_isNetworkTethered
TB,N,V_hasKeychainUnlockedSinceBoot
TB,N,V_isKeychainUnlocked
TB,N,V_isNetworkTethered
declarationIdentifier
setDeclarationIdentifier:
policy
setPolicy:
priority
setPriority:
excludedIdentifiers
setExcludedIdentifiers:
Tq,N
T@"NSSet",C,N
Tq,D,N
_declarationIdentifier
_policy
_priority
T@"NSString",C,N,V_declarationIdentifier
Tq,N,V_policy
Tq,N,V_priority
T@"NSSet",C,N,VexcludedIdentifiers
listener:shouldAcceptNewConnection:
initWithPolicyPersistence:
T@"DMDPolicyPersistence",R,N,V_policyPersistence
performDatabaseModificationOperationWithManagedObjectContext:
T@"DMFCreateConfigurationOrganizationRequest",&,N,V_request
isReady
observeValueForKeyPath:ofObject:change:context:
destroyLegacyDatabaseIfNeeded
loadPersistentStoresWithCompletionHandler:
fixupDatabaseWithCompletionHandler:
updateMetadataForManagedObjectContext:error:
destroyPersistentStoresWithError:
preprocessDatabaseInContext:forOrganization:error:
updateActiveRestrictionsInContext:error:
processCommandPayloadsInContext:forOrganization:enqueuedOperations:assetResolver:error:
processDeclarationPayloadsInContext:forOrganization:enqueuedOperations:assetResolver:error:
T@"<DMDEngineDatabaseProcessingOperationDelegate>",W,N,V_delegate
T@"<DMDTaskOperationProvider>",&,N,V_taskOperationProvider
T@"DMFDeactivateConfigurationOrganizationRequest",&,N,V_request
completionHandler
setCompletionHandler:
_completionHandler
T@"DMFFetchDeclarationsRequest",&,N,V_request
T@?,C,N,V_completionHandler
T@"NSString",&,N,V_organizationIdentifier
delegateUpdatedDeclarationSourceAndEndOperation:
request
setRequest:
clientIdentifier
setClientIdentifier:
_request
_clientIdentifier
T@"<DMDEngineRegisterConfigurationSourceOperationDelegate>",W,N,V_delegate
T@"DMFRegisterConfigurationSourceRequest",&,N,V_request
T@"NSString",C,N,V_clientIdentifier
T@"DMFSetDeclarationsRequest",&,N,V_request
T@"DMFUpdateEnqueuedCommandsRequest",&,N,V_request
T@"DMFUpdateDeclarationsRequest",&,N,V_request
initWithScheduleRegistration:
startWithScheduleElapsedHandler:
frequency
localTime
spread
timer
setTimer:
_frequency
_localTime
_spread
_day
_timer
T@"NSTimer",&,N,V_timer
Tq,R,N,V_frequency
T@"NSString",R,C,N,V_localTime
T@"NSNumber",R,N,V_spread
T@"NSNumber",R,N,V_day
initWithListeners:
_registerEventStreamHandlers
_registerListener:forKeys:inMap:
_dispatchToListenerForKey:inMap:withBlock:
alarmListeners
distributedNotificationNameToListenersMap
notifyMatchingNotificationToListenersMap
managedSettingsGroupsToListenersMap
_alarmListeners
_distributedNotificationNameToListenersMap
_notifyMatchingNotificationToListenersMap
_managedSettingsGroupsToListenersMap
T@"NSPointerArray",R,N,V_alarmListeners
T@"NSMutableDictionary",R,N,V_distributedNotificationNameToListenersMap
T@"NSMutableDictionary",R,N,V_notifyMatchingNotificationToListenersMap
T@"NSMutableDictionary",R,N,V_managedSettingsGroupsToListenersMap
initWithEventType:details:
eventStatusMessageWithPayloadIdentifier:
eventType
details
timestamp
_eventType
_details
_timestamp
T@"NSString",R,C,N,V_eventType
T@"NSDictionary",R,C,N,V_details
T@"NSDate",R,N,V_timestamp
setEventSubscriptionRegistrations:error:
eventStatusesByPayloadIdentifierSinceStartDate:organizationIdentifier:
eventsHandler
setEventsHandler:
eventSubscriptionsByIdentifier
setEventSubscriptionsByIdentifier:
_eventsHandler
_eventSubscriptionsByIdentifier
T@"NSMutableDictionary",&,N,V_eventSubscriptionsByIdentifier
T@?,C,N,V_eventsHandler
automaticallyNotifiesObserversOfPayloadMetadata
fetchRequestMatchingRegistrationFromOrganizationWithIdentifier:payloadIdentifier:
setPayloadMetadata:
payloadMetadata
T@"DMDPayloadMetadata",&,D,N
events
T@"NSArray",&,D,N
schedule
T@"CEMEventSubscriptionDeclaration_Schedule",&,D,N
initWithSubscriptionRegistration:streamEventsHandler:
updateWithSubscriptionRegistration:
_updateEventStreams:
setSchedule:
eventStatusesSinceStartDate:
payloadIdentifier
eventStreamByEventType
setEventStreamByEventType:
streamEventsHandler
lastDateScheduleElapsed
setLastDateScheduleElapsed:
_payloadIdentifier
_schedule
_eventStreamByEventType
_streamEventsHandler
_lastDateScheduleElapsed
T@"DMDEventReportingSchedule",&,N,V_schedule
T@"NSMutableDictionary",&,N,V_eventStreamByEventType
T@?,R,N,V_streamEventsHandler
T@"NSDate",&,N,V_lastDateScheduleElapsed
T@"NSString",R,C,N,V_organizationIdentifier
T@"NSString",R,C,N,V_payloadIdentifier
fetchAppsForRequest:completion:
_fetchAppsForBundleIdentifier:type:completion:
_downloadStatusAndPercentComplete:fromStatus:
_profileListWithFilterFlags:
installAppForRequest:
_runWithRequest:
_resumeInstallationForRequest:
setMetadata:
_metadata
T@"DMDAppMetadata",&,N,V_metadata
boolValue
_installProfile:withRequest:error:
_rollbackProfile:withRequest:completion:
_installRestrictionsPayload:withRequest:error:
_mapMCRestrictionsFromPayload:error:
_applyHeuristicsToRestrictions:error:
_intersectionFeatureForPayloadRestrictionKey:
_intersectionAliasToFeatures
subscriptionDeclaration
setSubscriptionDeclaration:
_subscriptionDeclaration
T@"CEMEventSubscriptionDeclaration",&,N,V_subscriptionDeclaration
_installSilentProfileData:managingProfileIdentifier:personaID:
_installInteractiveProfile:
timestampsKey
promptsAllowedBeforeAutomaticDenial
promptWindowInterval
isPromptAllowedRightNow
recordNewPrompt
_now
_removePromptTimestampsOutsideIntervalEnding:
readTimestampsFromFile
writeTimestampsToFile
_timestampDataForWritingToFile
_timestampDictionaryForWritingToFile
promptTimestamps
setPromptTimestamps:
promptsAllowed
promptResetTimeInterval
overrideDate
setOverrideDate:
_promptTimestamps
_promptsAllowed
_promptResetTimeInterval
_overrideDate
T@"NSArray",C,N,V_promptTimestamps
Tq,R,N,V_promptsAllowed
Td,R,N,V_promptResetTimeInterval
T@"NSDate",C,N,V_overrideDate
deviceLastCloudBackupDate
setDeviceName:outError:
T@"NSDate",R,C,N
locationManager:didUpdateToLocation:fromLocation:
locationManager:didUpdateLocations:
locationManager:didUpdateHeading:
locationManagerShouldDisplayHeadingCalibration:
locationManager:didDetermineState:forRegion:
locationManager:didRangeBeacons:inRegion:
locationManager:rangingBeaconsDidFailForRegion:withError:
locationManager:didRangeBeacons:satisfyingConstraint:
locationManager:didFailRangingBeaconsForConstraint:error:
locationManager:didEnterRegion:
locationManager:didExitRegion:
locationManager:didFailWithError:
locationManager:monitoringDidFailForRegion:withError:
locationManager:didChangeAuthorizationStatus:
locationManagerDidChangeAuthorization:
locationManager:didStartMonitoringForRegion:
locationManagerDidPauseLocationUpdates:
locationManagerDidResumeLocationUpdates:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didVisit:
T@"DMDLostDeviceLocationManager",R,N
getCurrentLocationForOriginator:completion:
clearLastLocationRequestedDate
lastLocationRequestedDateMessage
_cleanupAfterResponseFromLocationManagerOrTimeout
_updateLostModeFileForOriginator:
locationManager
setLocationManager:
originator
setOriginator:
timeoutTimerDispatchSource
setTimeoutTimerDispatchSource:
_locationManager
_originator
_timeoutTimerDispatchSource
T@"CLLocationManager",&,N,V_locationManager
T@"NSString",C,N,V_originator
T@"NSObject<OS_dispatch_source>",&,N,V_timeoutTimerDispatchSource
promptUserToLoginToiTunesIfNeededTitle:message:assertion:completionBlock:
promptUserForiTunesAccount:accountNameEditable:canCreateNewAccount:assertion:completionBlock:
homeSharingCloudClient
shouldBypassVPPLicenseCheck
T@"DMDManagedMediaManager",R,N
cleanUpWithAssertion:completionBlock:
memberQueueCleanUp
memberQueueCommitNonStoreBooksManifest
memberQueueCommitStoreBooksManifest
memberQueueRereadNonStoreBooksManifest
memberQueueRereadStoreBooksManifest
rereadNonStoreBooksManifestCompletionBlock:
rereadStoreBooksManifestCompletionBlock:
setNonStoreManagedBook:
setStoreManagedBook:
setState:forNonStoreBookWithPersistentID:
setState:forStoreBookWithiTunesStoreID:
cancelNonStoreDownloadsWithDownloadIdentifiers:completionBlock:
installNonStoreBook:fileExtension:URL:assertion:completionBlock:
refreshBookPurchaseHistoryCompletion:
searchBookPurchaseHistoryForiTunesStoreID:assertion:triesLeft:completionBlock:
searchBookPurchaseHistoryForiTunesStoreID:assertion:completionBlock:
installStoreBookWithiTunesStoreID:originator:assertion:completionBlock:
storeBooks
nonStoreBooks
memberQueueMoveTransientStatesForward
moveTransientStatesForward
removeNonStoreBookWithPersistentID:assertion:completionBlock:
removeStoreBookWithiTunesStoreID:assertion:completionBlock:
uprootWithAssertion:completionBlock:
memberQueue
setMemberQueue:
memberQueuePersistentIDToNonStoreBook
setMemberQueuePersistentIDToNonStoreBook:
memberQueueiTunesStoreIDToStoreBook
setMemberQueueiTunesStoreIDToStoreBook:
_memberQueue
_memberQueuePersistentIDToNonStoreBook
_memberQueueiTunesStoreIDToStoreBook
T@"NSObject<OS_dispatch_queue>",&,N,V_memberQueue
T@"NSMutableDictionary",&,N,V_memberQueuePersistentIDToNonStoreBook
T@"NSMutableDictionary",&,N,V_memberQueueiTunesStoreIDToStoreBook
iTunesAccountHashForUniqueIdentifier:
setSkipBackupAttribute:toItemAtPath:
_storeAppFormat
_getRequiredAppIDFromDisk
_redeemAppWithRedemptionCode:
_installEnterpriseAppForRequest:
_installSystemAppWithBundleIdentifier:
_installStoreAppForRequest:
_attemptSINFSwapForRequest:completion:
_redownloadDeviceAppForRequest:
_redownloadUserAppForRequest:
_purchaseFreeAppForRequest:
_downloadStoreAppForRequest:type:
_applyManagementPiecesForRequest:
_promptIfNeededWithMessageFormat:success:
_promptToSignInAndInstallAppForRequest:
_showStorePromptToSignInAndInstallAppForRequest:
_showInstallationFailurePromptIfNeeded
_setState:
_setRedemptionCode:
_setUnusedRedemptionCode:
_updateManagementInfoWithBlock:
_canManageBundleIdentifier:
_resetRemovabilityWithBundleIdentifier:
descriptionForChangeType:
_promptIfPermittedByPolicyToManageApp:appDisplayName:originator:completion:
_promptToManageApp:appDisplayName:originator:completion:
_manageApp
_attemptSINFSwap
deviceType
hasAppleInternalInstallCapability
deviceClass
productType
productVersion
buildVersion
marketingName
serialNumber
modelNumber
uniqueDeviceID
userAssignedDeviceName
dataCapacity
dataAvailable
ethernetMacAddress
bluetoothAddress
wifiAddress
wifiAddressData
hasTelephonyCapability
hasCellularDataCapability
hasPersonalHotspotCapability
phoneNumber
mobileSubscriberCountryCode
mobileSubscriberNetworkCode
TQ,R,N
T@"NSNumber",R,C,N
T@"NSData",R,C,N
isNetworkTethered
configurationProfilesSystemGroupContainer
systemGroupContainerPath
homeDirectoryPath
managementPromptPolicyPath
managedAppsManifest
purchasedBooksManifest
purchasedBooksDirectory
managedStoreBooksManifestPath
managedNonStoreBooksDirectory
managedNonStoreBooksManifestPath
systemLostModeRequestPath
mdmFilePath
_userDirectory
_systemProfileStorageDirectory
_systemProfileLibraryDirectory
_managedNonStoreBooksSystemGroupContainer
_systemGroupContainerPathWithGroupIdentifier:
payloadDictionary
sharedDeclarationOperationQueue
initWithDatabase:payloadMetadataObjectID:payloadIdentifier:
payloadContext
performBackgroundContextBlock:
addStatusEntriesFromDictionary:
endOperationWithPayloadMetadata:
setRequiresNetworkTether:
setRequiresUnlockedKeychain:
payloadMetadataObjectID
setPayloadContext:
subOperations
setSubOperations:
_requiresNetworkTether
_requiresUnlockedKeychain
_payloadMetadataObjectID
_payloadContext
_subOperations
_stateDictionary
T@"DMDPayloadContext",&,N,V_payloadContext
T@"NSMutableArray",&,N,V_subOperations
T@"NSMutableDictionary",&,N,V_stateDictionary
TB,N,V_requiresNetworkTether
TB,N,V_requiresUnlockedKeychain
T@"DMDConfigurationDatabase",R,N,V_database
T@"NSManagedObjectID",R,C,N,V_payloadMetadataObjectID
assetProvidersByPayloadIdentifier
setAssetProvidersByPayloadIdentifier:
_assetProvidersByPayloadIdentifier
T@"NSDictionary",C,N,V_assetProvidersByPayloadIdentifier
validateForInsert:
validateForUpdate:
validateForDelete:
initWithEntity:insertIntoManagedObjectContext:
fetchRequestForPayloadMetadatasFromOrganizationWithIdentifier:matchingPredicate:
fetchRequestForActivePayloadMetadatasFromOrganizationWithIdentifier:withIdentifier:
fetchRequestForPayloadMetadatasPendingStatusUpdateFromOrganizationWithIdentifier:
metadataWithPayloadDictionary:organizationIdentifier:context:error:
keyPathsForValuesAffectingStatus
automaticallyNotifiesObserversOfStateDictionary
automaticallyNotifiesObserversOfLastStatusReportTimestamp
applyPayloadDictionary:
descriptiveProperties
status
setNeedsRefreshStatus
setStateDictionary:
setLastStatusReportTimestamp:
willSave
validateProperties:
initWithContext:
pendingStatusUpdate
requiresNetworkTether
requiresUnlockedKeychain
payload
T@"DMDPayload",&,D,N
stateChangeTimestamp
T@"NSDate",&,D,N
available
installed
stateDictionary
T@"NSDictionary",C,D,N
lastStatusReportTimestamp
T@"NSDate",C,D,N
outgoingPayloadMetadataReferences
T@"NSSet",C,D,N
incomingPayloadMetadataReferences
T@,&,D,N
enableEmergencyModeWithCompletionHandler:
enableEmergencyModeForDuration:withCompletionHandler:
disableEmergencyModeWithCompletionHandler:
emergencyModeStatusWithCompletionHandler:
addRegistration:replyHandler:
requestPoliciesForTypes:replyHandler:
initWithPersistentStoreDescriptions:
_loadPersistentStoreIfNeeded:
_performRegistrationBackgroundTask:
_performBackgroundTask:
_effectiveCategoryPoliciesForCategoryShieldPolicy:type:excludedIdentifiersKey:
_effectivePolicyForManagedSettingsIdentifier:type:excludedIdentifiers:
setEffectivePolicy:forType:identifiers:priority:organizationIdentifier:declarationIdentifier:completionHandler:
_upsertPolicy:forType:identifier:priority:organizationIdentifier:declarationIdentifier:policyToUpdate:managedObjectContext:
removeEffectivePolicyFromOrganizationIdentifier:declarationIdentifier:completionHandler:
removeOrphanedPoliciesNotBelongingToExistingOrganizationIdentifiers:completionHandler:
removeOrphanedPoliciesNotBelongingToExistingDeclarationIdentifiersByOrganizationIdentifier:completionHandler:
_removeOrphanedPoliciesFromFetchRequest:managedObjectContext:completionHandler:
_notifyClientsRegisteredForPolicyType:
_enableEmergencyModeUntilDate:referenceDate:withCompletionHandler:
isPersistentContainerLoaded
setIsPersistentContainerLoaded:
internalContext
setInternalContext:
registrationContext
setRegistrationContext:
persistentContainer
emergencyModeQueue
effectiveSettings
_contextsByXPCConnection
_isPersistentContainerLoaded
_internalContext
_registrationContext
_persistentContainer
_emergencyModeQueue
_effectiveSettings
TB,N,V_isPersistentContainerLoaded
T@"NSManagedObjectContext",&,N,V_internalContext
T@"NSManagedObjectContext",&,N,V_registrationContext
T@"NSPersistentContainer",R,N,V_persistentContainer
T@"NSObject<OS_dispatch_queue>",R,N,V_emergencyModeQueue
T@"MOEffectiveSettings",R,N,V_effectiveSettings
modificationDate
policyTypes
sharedStakeholder
willSwitchUser
inEDUMode
assertionForOperation:
initForOperation:
stayAliveThroughHereAtLeast
park
unpark
_retain
_release
isParked
setIsParked:
operation
setOperation:
blockingTask
setBlockingTask:
_isParked
_operation
_blockingTask
TB,N,V_isParked
T@"NSString",&,N,V_operation
T@"UMUserSwitchBlockingTask",&,N,V_blockingTask
invalidResponseError:
removeAppMetadataForBundleIdentifier:error:
removeAppWithBundleIdentifier:completion:
_removeProfile:withRequest:completion:
_removeRestrictionsWithRequest:error:
removeProfileWithIdentifier:installationType:completion:
endOperationWithWrongProductKey:action:
sharedServer
T@"DMDServer",R,N
taskServerDelegate
taskOperationServiceListener
taskServerListenerDelegate
taskServer
policyServerListenerDelegate
policyServerListener
emergencyModeListenerDelegate
emergencyModeListener
eventStreamDispatcher
_taskServerDelegate
_taskOperationServiceListener
_taskServerListenerDelegate
_taskServer
_policyServerListenerDelegate
_policyServerListener
_emergencyModeListenerDelegate
_emergencyModeListener
_eventStreamDispatcher
T@"DMDTaskServerListenerDelegate",R,N,V_taskServerListenerDelegate
T@"CATTaskServer",R,N,V_taskServer
T@"DMDPolicyServerListenerDelegate",R,N,V_policyServerListenerDelegate
T@"NSXPCListener",R,N,V_policyServerListener
T@"DMDEmergencyModeListenerDelegate",R,N,V_emergencyModeListenerDelegate
T@"NSXPCListener",R,N,V_emergencyModeListener
T@"DMDEventStreamDispatcher",R,N,V_eventStreamDispatcher
T@"DMDTaskServerDelegate",R,N,V_taskServerDelegate
T@"NSXPCListener",R,N,V_taskOperationServiceListener
identifiers
setIdentifiers:
_identifiers
TQ,N,V_priority
T@"NSArray",C,N,V_identifiers
startWithCompletionBlock:
delegateWithAuthenticationContext:
request:didFailWithError:
requestDidFinish:
authenticateRequest:didReceiveResponse:
_storeLoginFailedError
authenticatedAccount
setAuthenticatedAccount:
_authenticatedAccount
T@"SSAccount",&,N,V_authenticatedAccount
T@"SSAuthenticateRequest",R,C,D,N
_timerDidFire:
timeoutTimer
setTimeoutTimer:
_timeoutTimer
T@"SSRequest",C,N,V_request
T@"NSTimer",C,N,V_timeoutTimer
fetchRequestMatchingEventsFromOrganizationWithIdentifier:
dictionaryRepresentation
date
sharedInstallTask
productKeyFromStatus:
productKeyOrDefaultFromStatus:
T@"DMDSUManagerInstallTask",R,N
isInstalling
isDownloading
isDownloadComplete
downloadPercentComplete
productBuildVersion
download
setDownload:
installPolicy
setInstallPolicy:
autoInstallOperation
setAutoInstallOperation:
_download
_installPolicy
_autoInstallOperation
T@"SUDownload",&,N,V_download
T@"SUInstallPolicy",&,N,V_installPolicy
T@"SUAutoInstallOperation",&,N,V_autoInstallOperation
Td,R,N
defaultProductKey
_dmfDownloadErrorFromSUDownloadError:
_dmfInstallErrorFromSUInstallError:
_dmfStatusErrorFromSUStatusError:
removeUpdateWithError:
availableUpdateWithVersion:useDelay:error:
startDownloadWithError:
startInstallWithError:
currentStatusWithError:
softwareUpdateServices
setSoftwareUpdateServices:
T@"SUManagerClient",&,N,VsoftwareUpdateServices
initWithRequest:
operationWillStart
operationWillFinish
operationDidFinish
configurationEngine
setConfigurationEngine:
T@"DMDTaskOperationContext",&,N
T@"DMDConfigurationEngine",&,N
T@"NSSet",R,N
endOperationWithDMFErrorCode:
_configurationEngine
T@"DMDTaskOperationContext",&,N,V_context
T@"DMDConfigurationEngine",&,N,V_configurationEngine
clientBundleIdentifier
setClientBundleIdentifier:
setUid:
runAsUser
setRunAsUser:
_runAsUser
_uid
_clientBundleIdentifier
T@"NSString",C,N,V_clientBundleIdentifier
TI,N,V_uid
TB,N,V_runAsUser
_currentLocaleDidChange:
_specialCasedRequestNamesToOperationNames
server:clientSession:operationForRequest:error:
server:clientSession:didInterruptWithError:
server:clientSession:shouldConnectWithTransport:
server:clientSession:didReceiveNotificationWithName:userInfo:
server:clientSession:enqueueOperation:
server:clientSessionDidConnect:
server:clientSessionDidDisconnect:
server:clientSessionDidInvalidate:
serverDidInvalidate:
operationClassForRequest:error:
prepareToRunOperation:withContext:withDatabase:
initWithPolicyPersistence:activationManager:
_nameForOperationGroup:
concurrentOperationQueue
serialOperationQueuesByGroup
deviceStateObserver
_concurrentOperationQueue
_serialOperationQueuesByGroup
_deviceStateObserver
T@"CATOperationQueue",R,N,V_concurrentOperationQueue
T@"NSDictionary",R,N,V_serialOperationQueuesByGroup
T@"DMDDeviceStateObserver",R,N,V_deviceStateObserver
T@"DMDConfigurationEngine",R,N,V_configurationEngine
operationForRequest:targetUID:appleID:transport:error:
initWithTaskServer:
updateEvent:
startNotificationStreamWithEventsHandler:
eventStatusRollupSinceStartDate:
_testEvent
endOperationWithResultObject:
endOperationWithError:
_runWithRequest:metadata:
_resumeUpdateForBundleIdentifier:
_promptIfNeededAndUpdateAppForRequest:metadata:
_startUpdateAppForRequest:metadata:
_showUpdateFailurePromptIfNeededForRequest:metadata:
_setState:forBundleIdentifier:
_endOperationWithBundleIdentifier:
didPromptUser
setDidPromptUser:
_didPromptUser
TB,N,V_didPromptUser
notificationRef
setNotificationRef:
header
setHeader:
defaultButtonTitle
setDefaultButtonTitle:
alternateButtonTitle
setAlternateButtonTitle:
otherButtonTitle
setOtherButtonTitle:
displayWhenLocked
setDisplayWhenLocked:
timeout
setTimeout:
_notificationRef
_displayWhenLocked
_header
_defaultButtonTitle
_alternateButtonTitle
_otherButtonTitle
_timeout
T@"NSUUID",R,C,N,V_identifier
T@"NSString",C,N,V_header
T@"NSString",C,N,V_message
T@"NSString",C,N,V_defaultButtonTitle
T@"NSString",C,N,V_alternateButtonTitle
T@"NSString",C,N,V_otherButtonTitle
TB,N,V_displayWhenLocked
Td,N,V_timeout
T@"DMDUserNotificationController",R,N
showNotification:completion:
_dictFromNotification:
_showNextNotification
_completeNotification:response:
_notificationRef:wasDismissedWithFlags:
notifications
completionsByIdentifier
_notifications
_completionsByIdentifier
T@"CATOperationQueue",R,N,V_queue
T@"NSMutableArray",R,N,V_notifications
T@"NSMutableDictionary",R,N,V_completionsByIdentifier
title
setTitle:
message
setMessage:
defaultButtonText
setDefaultButtonText:
alternateButtonText
setAlternateButtonText:
otherButtonText
setOtherButtonText:
displayOnLockScreen
setDisplayOnLockScreen:
displayInAppWhitelistModes
setDisplayInAppWhitelistModes:
dismissAfterTimeInterval
setDismissAfterTimeInterval:
completionBlock
setCompletionBlock:
notification
setNotification:
_displayOnLockScreen
_displayInAppWhitelistModes
_title
_message
_defaultButtonText
_alternateButtonText
_otherButtonText
_dismissAfterTimeInterval
_completionBlock
_notification
T@"NSString",&,N,V_identifier
T@"NSString",&,N,V_title
T@"NSString",&,N,V_message
T@"NSString",&,N,V_defaultButtonText
T@"NSString",&,N,V_alternateButtonText
T@"NSString",&,N,V_otherButtonText
TB,N,V_displayOnLockScreen
TB,N,V_displayInAppWhitelistModes
Td,N,V_dismissAfterTimeInterval
T@?,C,N,V_completionBlock
T@,&,N,V_notification
sharedManager
T@"DMDUserNotificationManager",R,N
mainQueueDidReceiveAppWhitelistChangedNotification
cancelAllNotificationsWithCompletionBlock:
cancelNotificationEntriesMatchingPredicate:completionBlock:
displayUserNotificationWithTitle:message:defaultButtonText:alternateButtonText:otherButtonText:displayOnLockScreen:displayInAppWhitelistModes:dismissAfterTimeInterval:assertion:completionBlock:
displayUserNotificationWithIdentifier:title:message:defaultButtonText:alternateButtonText:otherButtonText:displayOnLockScreen:displayInAppWhitelistModes:dismissAfterTimeInterval:assertion:completionBlock:
promptUserToLogIntoiTunesWithTitle:message:assertion:completionBlock:
initWithJob:hasUpdateAvailable:propertyKeys:
initWithBundleIdentifier:propertyKeys:
initWithApplicationRecord:hasUpdateAvailable:propertyKeys:
_proxyIsValidated:
initWithBook:
initWithCertificateRef:isIdentity:
appleInternal
TB,R,N,GisAppleInternal
initWithDescriptor:
productKeyFromBuild:
initWithProfile:isManaged:signerCertificates:restrictions:
initWithUser:isCurrentUser:
dmd_dataWithMappedContentsOfFileHandle:error:
dmd_sha1Hash
dmd_systemLibraryURL
dmd_systemDMDDirectoryURL
dmd_systemConfigurationEngineDirectoryURL
dmd_systemConfigurationDatabaseURL
dmd_userHomeURL
dmd_userLibraryURL
dmd_userDarwinUserTempDirectoryURL
dmd_userDMDDirectoryURL
dmd_userConfigurationEngineDirectoryURL
dmd_userConfigurationDatabaseURL
dmd_userImageDatabaseDirectoryURL
dmd_userFontDatabaseDirectoryURL
dmd_userEffectivePoliciesDatabaseURL
dmd_createUserDMDDirectoryDataVault
dmd_setUserDirSuffix:
dmd_legacyUserConfigurationEngineDatabaseURL
@16@0:8
v32@0:8@16@24
B16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSURL"16@0:8
@"NSData"16@0:8
@"NSNumber"16@0:8
v16@0:8
@"NSURL"
v24@0:8@"NSURL"16
v24@0:8@"NSError"16
@"CEMAssetBaseDescriptor"16@0:8
@"CEMAssetBaseReference"16@0:8
@32@0:8@16@24
@"CEMFontDeclaration"
@"<DMDRemoteAssetResolver>"
@"CEMFontAssetInstallMetadata"
@32@0:8@16^@24
@"CATOperation"32@0:8@"<DMDRemoteAssetResolver>"16^@24
@"CATOperation"32@0:8@"NSDictionary"16^@24
@"CEMImageDeclaration"
@"CEMImageAssetInstallMetadata"
B48@0:8@16@24@32@40
@"USBudget"
@"USUsageMonitor"
@40@0:8@16@24@32
@24@0:8^@16
@64@0:8@16q24q32q40q48@56
q16@0:8
v24@0:8q16
@"NSString"
@"NSSet"
@"NSMutableArray"
@"NSDate"
@48@0:8@16@24@32@40
@"NSArray"
@"DMDActivationPredicateObserver"
@"<DMDActivationPredicateObserverDelegate>"
v24@0:8@"DMDActivationPredicateObserver"16
v24@0:8@"NSString"16
v32@0:8@"NSString"16@"NSDictionary"24
@"NSArray"16@0:8
@"<DMDActivationPredicateObserverManagerDelegate>"
@"NSMutableDictionary"
B32@0:8@16^@24
@"NSObject<OS_os_transaction>"
B68@0:8@16@24@32d40Q48B56^@60
B32@0:8Q16^@24
^v24@0:8Q16
B48@0:8@16Q24@32^@40
v32@0:8@16@?24
@40@0:8@16d24^@32
@40@0:8@16d24Q32
v24@0:8@"DMDAppLifeCycle"16
B40@0:8@16@24^@32
B24@0:8^@16
v40@0:8@16@24@?32
v64@0:8@16@24@32@40Q48@56
v80@0:8@16@24@32@40@48@56Q64@72
Q24@0:8@16
B40@0:8Q16@24^@32
@"NSObject<OS_dispatch_queue>"
@"DMFOSStateHandler"
v40@0:8@16q24@?32
v60@0:8@16@24@32q40B48@?52
@"FBSDisplayLayoutMonitor"
@32@0:8@16Q24
@"NSOperationQueue"
@"CATStateMachine"
v24@0:8@"NSArray"16
v32@0:8@"NSArray"16@"NSArray"24
@"NSProgress"
v20@0:8B16
@"NSNumber"
@24@0:8@?16
@?16@0:8
v24@0:8@?16
@"BluetoothManager"
@"CATOperation"32@0:8@"DMDPayloadContext"16^@24
v32@0:8@"DMDActivationPredicateObserverManager"16@"NSString"24
v32@0:8@"DMDConfigurationSourceController"16@?<v@?@"NSDictionary"@"NSError"@?<v@?@"NSError">>24
@"NSArray"32@0:8@"DMDEngineDatabaseProcessingOperation"16@"NSString"24
@"<DMDRemoteAssetResolver>"32@0:8@"DMDEngineDatabaseProcessingOperation"16@"NSString"24
v32@0:8@"DMDEngineRegisterConfigurationSourceOperation"16@"<DMDConfigurationSource>"24
@"DMDPolicyPersistence"
@"<DMDConfigurationEngineDelegate>"
@"NSObject<DMDDeviceStateProvider>"
@"NSObject<DMDTaskOperationProvider>"
@"DMDActivationPredicateObserverManager"
@"DMDConfigurationDatabase"
@"CATOperationQueue"
@"NSError"
@"DMDEngineDatabaseInitializationOperation"
@"CATOperation"
@"DMDEventSubscriptionManager"
@"CATTaskRequest"32@0:8@"DMDPayloadContext"16^@24
@"NSDictionary"32@0:8@"CATTaskResultObject"16@"DMDPayloadContext"24
v24@0:8@"<DMDRemoteAssetResolutionContext>"16
@"<DMDConfigurationOrganizationControllerDelegate>"
@"NSXPCListenerEndpoint"16@0:8
v24@0:8@"NSXPCListenerEndpoint"16
@"DMFReportingRequirements"16@0:8
v24@0:8@"DMFReportingRequirements"16
@"<DMDRemoteAssetResolutionContext>"
@"<DMDConfigurationSourceControllerDelegate>"
@"CATSerialOperationQueue"
@"DMDConfigurationSourceRepresentation"
@"NSXPCListenerEndpoint"
@"DMFReportingRequirements"
v28@0:8B16@?20
@"DMDConfigurationSourceController"
@"NSXPCConnection"
B32@0:8@16@24
{?="version"q"info"^v"retain"^?"release"^?"copyDescription"^?}
^{__CTServerConnection=}
@24@0:8q16
@"NSSet"16@0:8
v24@0:8@"NSSet"16
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"DMFCreateConfigurationOrganizationRequest"
v48@0:8@16@24@32^v40
@56@0:8@16@24@32@40^@48
@"<DMDEngineDatabaseProcessingOperationDelegate>"
@"<DMDTaskOperationProvider>"
@"DMFDeactivateConfigurationOrganizationRequest"
@"DMFFetchDeclarationsRequest"
@"<DMDEngineRegisterConfigurationSourceOperationDelegate>"
@"DMFRegisterConfigurationSourceRequest"
@"DMFSetDeclarationsRequest"
@"DMFUpdateEnqueuedCommandsRequest"
@"DMFUpdateDeclarationsRequest"
v40@0:8@16@24@32
@"NSPointerArray"
@"NSDictionary"
@32@0:8@16@?24
@"DMDEventReportingSchedule"
v40@0:8@16Q24@?32
Q32@0:8^d16@24
@20@0:8i16
@"DMDAppMetadata"
@"CEMEventSubscriptionDeclaration"
v40@0:8@16q24@32
v28@0:8@16i24
v40@0:8@"CLLocationManager"16@"CLLocation"24@"CLLocation"32
v32@0:8@"CLLocationManager"16@"NSArray"24
v32@0:8@"CLLocationManager"16@"CLHeading"24
B24@0:8@"CLLocationManager"16
v40@0:8@"CLLocationManager"16q24@"CLRegion"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconRegion"32
v40@0:8@"CLLocationManager"16@"CLBeaconRegion"24@"NSError"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconIdentityConstraint"32
v40@0:8@"CLLocationManager"16@"CLBeaconIdentityConstraint"24@"NSError"32
v32@0:8@"CLLocationManager"16@"CLRegion"24
v32@0:8@"CLLocationManager"16@"NSError"24
v40@0:8@"CLLocationManager"16@"CLRegion"24@"NSError"32
v28@0:8@"CLLocationManager"16i24
v24@0:8@"CLLocationManager"16
v32@0:8@"CLLocationManager"16@"CLVisit"24
@"CLLocationManager"
@"NSObject<OS_dispatch_source>"
v48@0:8@16B24B28@32@?40
v56@0:8@16@24@32@40@?48
v44@0:8@16@24i32@?36
B28@0:8B16@20
v32@0:8@16q24
@"NSManagedObjectID"
@"DMDPayloadContext"
@48@0:8@16@24@32^@40
v32@0:8d16@?24
v24@0:8@?<v@?@"NSError">16
v32@0:8d16@?<v@?@"NSError">24
v24@0:8@?<v@?@"NSNumber"@"NSError">16
v32@0:8@"DMFPolicyRegistration"16@?<v@?@"NSDictionary"@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSDictionary"@"NSError">24
v72@0:8q16@24@32Q40@48@56@?64
B80@0:8q16@24@32Q40@48@56@64@72
@"NSMapTable"
@"NSManagedObjectContext"
@"NSPersistentContainer"
@"MOEffectiveSettings"
@"UMUserSwitchBlockingTask"
@"DMDTaskServerDelegate"
@"NSXPCListener"
@"DMDTaskServerListenerDelegate"
@"CATTaskServer"
@"DMDPolicyServerListenerDelegate"
@"DMDEmergencyModeListenerDelegate"
@"DMDEventStreamDispatcher"
v24@0:8Q16
v32@0:8@"SSRequest"16@"NSError"24
v24@0:8@"SSRequest"16
v32@0:8@"SSAuthenticateRequest"16@"SSAuthenticateResponse"24
@"SSAccount"
@"SSRequest"
@"NSTimer"
d16@0:8
@"SUDownload"
@"SUInstallPolicy"
@"SUAutoInstallOperation"
@36@0:8@16B24^@28
@"SUManagerClient"
@"DMDTaskOperationContext"16@0:8
v24@0:8@"DMDTaskOperationContext"16
@"DMDConfigurationEngine"16@0:8
v24@0:8@"DMDConfigurationEngine"16
@"DMDTaskOperationContext"
@"DMDConfigurationEngine"
I16@0:8
v20@0:8I16
B40@0:8@16@24@32
v48@0:8@16@24@32@40
@"CATTaskOperation"48@0:8@"CATTaskServer"16@"CATTaskSession"24@"CATTaskRequest"32^@40
v40@0:8@"CATTaskServer"16@"CATTaskSession"24@"NSError"32
B40@0:8@"CATTaskServer"16@"CATTaskSession"24@"CATTransport"32
v48@0:8@"CATTaskServer"16@"CATTaskSession"24@"NSString"32@"NSDictionary"40
v40@0:8@"CATTaskServer"16@"CATTaskSession"24@"NSOperation"32
v32@0:8@"CATTaskServer"16@"CATTaskSession"24
v24@0:8@"CATTaskServer"16
#32@0:8@16^@24
#32@0:8@"CATTaskRequest"16^@24
v40@0:8@"CATOperation"16@"DMDTaskOperationContext"24@"DMDConfigurationDatabase"32
@24@0:8Q16
@"DMDDeviceStateObserver"
@52@0:8@16I24@28@36^@44
v24@0:8@"CEMEventBase"16
v24@0:8@?<v@?@"NSArray">16
@"DMDEventStreamEvent"24@0:8@"NSDate"16
v32@0:8Q16@24
^{__CFUserNotification=}16@0:8
v24@0:8^{__CFUserNotification=}16
^{__CFUserNotification=}
@"NSUUID"
v32@0:8@16Q24
v32@0:8^{__CFUserNotification=}16Q24
v24@0:8d16
v32@0:8@?16@?24
v88@0:8@16@24@32@40@48B56B60d64@72@?80
v96@0:8@16@24@32@40@48@56B64B68d72@80@?88
v48@0:8@16@24@32@?40
@36@0:8@16B24@28
@28@0:8^{__SecCertificate=}16B24
@44@0:8@16B24@28@36
@28@0:8@16B24
v24@0:8*16
Request validation failed for installing profile: %{public}@
Request validation failed for removing profile: %{public}@
font asset data is nil
image asset data is nil
Request validation failed for setting policy: %{public}@
Request validation failed for removing policy: %{public}@
Predicate type: %{public}@ with unique identifier: %{public}@ failed checking status of Usage Tracking monitor with budget identifier: %{public}@, error: %{public}@
Predicate type: %{public}@ with unique identifier: %{public}@ succeeded checking status of Usage Tracking monitor with budget identifier %{public}@, expired notification times: %{public}@, remaining time: %{public}@ seconds
Predicate type: %{public}@ with unique identifier: %{public}@ evaluated predicate: %{public}@ for Usage Tracking monitor with identifier: %{public}@
Predicate type: %{public}@ with unique identifier: %{public}@ failed stopping Usage Tracking monitor with budget identifier: %{public}@, error: %{public}@
Predicate type: %{public}@ with unique identifier: %{public}@ succeeded stopping Usage Tracking monitor with budget identifier: %{public}@
Predicate type: %{public}@ with unique identifier: %{public}@ failed to extract a budget type
Predicate type: %{public}@ with unique identifier: %{public}@ failed to extract budgeted identifiers
Predicate type: %{public}@ with unique identifier: %{public}@ failed to extract a budget schedule
Predicate type: %{public}@ with unique identifier: %{public}@ extracted calendar identifier: %{public}@, budget type: %{public}@, budgeted identifiers: %{public}@, notification times: %{public}@, budget schedule: %{public}@
Predicate type: %{public}@ with unique identifier: %{public}@ extracted calendar identifier: %{public}@, budgeted application identifiers: %{public}@, budgeted category identifiers: %{public}@, budgeted website identifiers: %{public}@, notification times: %{public}@, budget schedule: %{public}@
Predicate type: %{public}@ with unique identifier: %{public}@ cannot have budget with invalid calendar day: %{public}@ calendar identifier: %{public}@
Predicate type: %{public}@ with unique identifier: %{public}@ cannot have multiple budgets for day: %{public}@ 
Predicate type: %{public}@ with unique identifier: %{public}@ failed starting usage monitor with budget identifier: %{public}@, error: %{public}@
Predicate type: %{public}@ with unique identifier: %{public}@ succeeded starting usage monitor with budget identifier: %{public}@
Predicate type: %{public}@ with unique identifier: %{public}@ evaluated predicate: %d, expired notification times: %{public}@, next start date: %{public}@, next end date: %{public}@, now: %{public}@
Predicate type: %{public}@ with unique identifier: %{public}@ failed to extract predicate with payload calendar identifier: %{public}@, payload notifications times: %{public}@, payload start day: %{public}@, payload start time: %{public}@, payload end day: %{public}@, payload end time: %{public}@
Predicate type: %{public}@ with unique identifier: %{public}@ extracted calendar identifier: %{public}@, notifications times: %{public}@, start day: %ld, start hour: %ld, start minute: %ld, start second: %ld, end day: %ld, end hour: %ld, end minute: %ld, end second: %ld
Predicate type: %{public}@ with unique identifier: %{public}@ will schedule alarm with identifier: %{public}@ to fire at date: %{public}@, epoch time in nano seconds: %lld
Predicate type: %{public}@ with unique identifier: %{public}@ failed to calculate the next curfew boundary date for next start date: %{public}@, next end date: %{public}@
Predicate type: %{public}@ with unique identifier: %{public}@ evaluated predicate: %d, DSID %{public}@, primary account DSID %{public}@
Predicate type: %{public}@ with unique identifier: %{public}@ extracted DSID: %{public}@
Predicate type: %{public}@ with unique identifier: %{public}@ evaluated predicate: %d, end date: %{public}@, now: %{public}@
Predicate type: %{public}@ with unique identifier: %{public}@ failed extracting: %{public}@ into a valid end date
Predicate type: %{public}@ with unique identifier: %{public}@ must have an end date
Predicate type: %{public}@ with unique identifier: %{public}@ extracted seconds: %f, end time string: %{public}@, end date: %{public}@, now: %{public}@
Predicate type: %{public}@ with unique identifier: %{public}@ will schedule alarm with identifier: %{public}@ to fire at date: %{public}@, epoch time in nano seconds: %lld, now: %{public}@
Predicate type: %{public}@ with unique identifier: %{public}@ cannot scheduled alarm to fire at date: %{public}@, now: %{public}@
Predicate type: %{public}@ with unique identifier: %{public}@ evaluated predicate: %d
Handling alarm with identifier: %{public}@
Handling notify matching notification with name: %{public}@
Could not read app management plist at path: %{public}@, error: %{public}@
Get bundle identifier for manifest URL from: %{public}@
Get bundle identifier for request: %{public}@
Get bundle identifier for store item identifier: %{public}@
Get metadata for non-enterprise app request: %{public}@
Could not write app management plist, error: %{public}@
Could not write app management plist, unknown error
Failed to set bundle identifiers %{public}@ for personaID %{public}@ with error: %{public}@
Set VPN UUID for bundle identifier: %{public}@
Set associated domains for bundle identifier: %{public}@
Set associated domains enable direct downloads for bundle identifier: %{public}@
Set removability for bundle identifier: %{public}@
Could not get removability for bundle identifier: %{bundleIdentifier}@, error: %{public}@
Could not set removability for bundle identifier: %{bundleIdentifier}@, error: %{public}@
Set VPN UUID, associated domains, configuration, and management information for bundle identifier: %{public}@
Could not set VPN UUID for app: %{public}@, error: %{public}@
Could not set content filter UUID for app: %{public}@, error: %{public}@
Could not set DNS proxy UUID for app: %{public}@, error: %{public}@
Could not set associated domains for app: %{public}@, error: %{public}@
Could not set associated domains enable direct downloads for app: %{public}@, error: %{public}@
Could not set configuration for app: %{public}@, error: %{public}@
Could not set management options for bundle identifier: %{public}@, error: %{public}@
Set state: %{public}@, for bundle identifier: %{public}@
Advance transient app states
Could not remove management information for bundle identifier: %{public}@, error: %{public}@
Could not set state to %{public}@ for bundle identifier: %{public}@, error: %{public}@
Could not set management information for bundle identifier: %{public}@, error: %{public}@
Clean up stale app states
Removing lifecycle observer for an app that is no longer managed: %{public}@
Observed change in life cycle from old state: %{public}@ to missing new state for bundle identifier: %{public}@
Observed change in life cycle from old state: %{public}@ to new state: %{public}@ for bundle identifier: %{public}@
Could not set new state: %{public}@, for bundle identifier: %{public}@, error: %{public}@
Set metadata for bundle identifier: %{public}@
Could not write management info to disk for bundle identifier: %{public}@
Get metadata for manifest URL from: %{public}@
Resume app installation for bundle identifier: %{public}@
Install device licensed app for request: %{public}@
Install user licensed app for request: %{public}@
Install free app for request: %{public}@
Add termination assertion for bundle identifier: %{public}@
Remove termination assertion for bundle identifier: %{public}@
Send app store request for bundle identifier: %{public}@, store item identifier: %{public}@, type: %{public}@, download: %{public}@, persona: %{public}@
Send app store request result: success: %{public}@, metadata: %{public}@, change type: %{public}@, error: %{public}@
persona:%{public}@ -> accountIdentifier:%{public}@
persona:%{public}@ -> accountIdentifier:<none>
Set configuration: %{public}@, for bundle identifier: %{public}@
container_acquire_sandbox_extension %{public}@ succeeded for path '%{public}@'
container_acquire_sandbox_extension %{public}@ failed, error %llu, path '%{public}@'
Could not acquire sandbox extension for app %{public}@ to read feedback. Attempting to read anyway. Error: %llu
Could not acquire app container path for app %{public}@ to read feedback.
Feedback is not a dictionary for bundle identifier: %{public}@
Set feedback: %{public}@, for bundle identifier: %{public}@
Could not acquire sandbox extension for app %{public}@ to write feedback. Attempting to write anyway. Error: %llu
Could not acquire app container path for app %{public}@ to write feedback.
Get metadata for bundle identifier: %{public}@, store item identifier: %{public}@, persona: %{public}@
Get metadata with device lookup for bundle identifier: %{public}@, store item identifier: %{public}@, persona: %{public}@
Could not get metadata: %{public}@
Update foreground bundle identifiers: %{public}@
Updating foreground app for request: %{public}@, so will take termination assertion
We will need to restart the app after updating bundle identifier: %{public}@
Start updating enterprise app with manifest URL from: %{public}@
Start updating non-enterprise app for request: %{public}@, new install request: %{public}@
Update ended for bundle identifier: %{public}@
Restart app with bundle identifier: %{public}@
Could not restart app: %{public}@, error: %{public}@
Initialize app life cycle with bundle identifier: %{public}@
Could not initialize app lifecycle because no LSApplicationRecord for bundle identifier %{public}@, error: %{public}@
App lifecycle for %{public}@
calculated install state:%{public}@
is installed: %{public}@
is placeholder: %{public}@
install type: %lu
install progress install state: %lu
App lifecycle for %{public}@ (no proxy)
assumed install state:%{public}@
lifecycle event: [%{public}@] uninstalled -> applicationsWillInstall -> willStartInstalling
lifecycle event: [%{public}@] installed -> applicationsWillInstall -> willStartUpdating
lifecycle event: [%{public}@] <%{public}@> -> applicationsWillInstall -> <no change>
lifecycle event: [%{public}@] uninstalling -> applicationInstallsDidStart -> didFinishUninstalling (special case)
lifecycle event: [%{public}@] uninstalling -> applicationInstallsDidStart -> <no change> (not special case)
lifecycle event: [%{public}@] uninstalled -> applicationInstallsDidStart -> willStartInstalling -> didStartInstalling
lifecycle event: [%{public}@] queued -> applicationInstallsDidStart -> didStartInstalling
lifecycle event: [%{public}@] installed -> applicationInstallsDidStart -> willStartUpdating -> didStartUpdating
lifecycle event: [%{public}@] queued -> applicationInstallsDidStart -> didStartUpdating
lifecycle event: [%{public}@] <%{public}@> -> applicationInstallsDidStart -> <no change>
lifecycle event: [%{public}@] installing -> applicationInstallsDidChange -> didChangeInstallingProgress
lifecycle event: [%{public}@] updating -> applicationInstallsDidChange -> didChangeUpdatingProgress
lifecycle event: [%{public}@] <%{public}@> -> applicationInstallsDidChange -> <no change>
lifecycle event: [%{public}@] installing -> applicationInstallsDidPause -> didPauseInstalling
lifecycle event: [%{public}@] updating -> applicationInstallsDidPause -> didPauseUpdating
lifecycle event: [%{public}@] <%{public}@> -> applicationInstallsDidPause -> <no change>
lifecycle event: [%{public}@] installation paused -> applicationInstallsDidResume -> didResumeInstalling
lifecycle event: [%{public}@] update paused -> applicationInstallsDidResume -> didResumeUpdating
lifecycle event: [%{public}@] <%{public}@> -> applicationInstallsDidResume -> <no change>
lifecycle event: [%{public}@] <installation queued | installing | installation paused> -> applicationInstallsDidCancel -> didCancelInstalling
lifecycle event: [%{public}@] <update queued | updating | update paused> -> applicationInstallsDidCancel -> didCancelUpdating
lifecycle event: [%{public}@] <%{public}@> -> applicationInstallsDidCancel -> <no change>
lifecycle event: [%{public}@] installation queued -> applicationsDidFailToInstall -> didStartInstalling -> didFailInstalling
lifecycle event: [%{public}@] <installing | installation paused> -> applicationsDidFailToInstall -> didFailInstalling
lifecycle event: [%{public}@] update queued -> applicationsDidFailToInstall -> didStartUpdating -> didFailUpdating
lifecycle event: [%{public}@] <updating | update paused> -> applicationsDidFailToInstall -> didFailUpdating
lifecycle event: [%{public}@] <%{public}@> -> applicationsDidFailToInstall -> <no change>
lifecycle event: [%{public}@] installation queued -> applicationsDidInstall -> didStartInstalling -> didFinishInstalling
lifecycle event: [%{public}@] installing -> applicationsDidInstall -> didFinishInstalling
lifecycle event: [%{public}@] installation paused -> applicationsDidInstall -> didResumeInstalling -> didFinishInstalling
lifecycle event: [%{public}@] update queued -> applicationsDidInstall -> didStartUpdating -> didFinishUpdating
lifecycle event: [%{public}@] updating -> applicationsDidInstall -> didFinishUpdating
lifecycle event: [%{public}@] update paused -> applicationsDidInstall -> didResumeUpdating -> didFinishUpdating
lifecycle event: [%{public}@] <%{public}@> -> applicationsDidInstall -> <no change>
lifecycle event: [%{public}@] installed -> applicationsWillUninstall -> willStartUninstalling
lifecycle event: [%{public}@] <installation queued | installing | installation paused> -> applicationsWillUninstall -> didCancelInstalling
lifecycle event: [%{public}@] <update queued | updating | update paused> -> applicationsWillUninstall -> didCancelUpdating
lifecycle event: [%{public}@] <%{public}@> -> applicationsWillUninstall -> <no change>
lifecycle event: [%{public}@] uninstalling -> applicationsDidFailToUninstall -> didFailUninstalling
lifecycle event: [%{public}@] <%{public}@> -> applicationsDidFailToUninstall -> <no change>
lifecycle event: [%{public}@] uninstalling -> applicationsDidUninstall -> didFinishUninstalling
lifecycle event: [%{public}@] <installation queued | installing | installation paused> -> applicationsDidUninstall -> didCancelInstalling
lifecycle event: [%{public}@] <update queued | updating | update paused> -> applicationsDidUninstall -> didCancelUpdating
lifecycle event: [%{public}@] <%{public}@> -> applicationsDidUninstall -> <no change>
App requests must have only one of bundle identifier, store item identifier, or manifest URL
%{public}@: Failed to initialize install operation for asset payload: %{public}@
%{public}@: Asset will install
%{public}@: Asset install operation failed: %{public}@
%{public}@: Installed asset successfully
%{public}@: Failed to initialize configuration payload for asset: %{public}@
%{public}@: Asset class (%{public}@) does not implement %{public}@
%{public}@: Uninstalled asset did remove successfully
%{public}@: Failed to initialize remove operation for installed asset payload: %{public}@
%{public}@: Installed asset will be removed
%{public}@: Failed to remove asset: %{public}@
%{public}@: Removed asset successfully
DMFBeginTransactionRequest is deprecated please use DMDActivityTransactionOperation instead
%{public}@: Failed to initialize configuration payload for command: %{public}@
%{public}@: Failed to create operation from request for command execution: %{public}@
%{public}@: Failed to create request for command execution: %{public}@
%{public}@: Execute command will start
%{public}@: Execute command failed: %{public}@
%{public}@: Executed command successfully
Failed to initialize command payload for command removal %{public}@: %{public}@
Command did remove successfully %{public}@
Failed to send %lu events from subscription manager
Successfully sent %lu events from subscription manager
Engine did resume
Engine will suspend
Engine enqueuing operation to set declarations from %{public}@
Engine enqueuing operation to update declarations from %{public}@
Engine enqueuing operation to fetch declarations for %{public}@
Failed to clear failed state for existing declarations: %{public}@
process status operation failed with error: %{public}@
Failed to fetch payload metadata corresponding to %{public}@
Failed to save subscription to database %{public}@
Failed to fetch registration corresponding to %{public}@
Failed to delete subscription from database %{public}@
Could not fetch organizations from database: %{public}@
Could not find organization with identifier: %{public}@
Failed to save event in database: %{public}@
Engine will suspend due to error: %{public}@
Engine enqueuing operation to process pending declarations in database
Database processing operation failed with error: %{public}@
Failed to load organizations from database: %{public}@
Failed to update subscription registrations: %{public}@
Failed to load organizations from database while scrubbing policy orphans: %{public}@
Failed to fetch declarations while scrubbing policy orphans %{public}@
Declaration %{public}@ does not belong to an organization
Found policies orphaned from any known organization. Removed identifiers %{public}@
Found policies orphaned from any known declarations. Removed identifiers %{public}@
failed to fetch declarations pending status update %{public}@
failed to update status %{public}@
failed to fetch declarations to update their lastStatusUpdateTimestamp %{public}@
failed to save last updated timestamp in database %{public}@
declaration update operation failed with error: %{public}@
status update operation failed with error: %{public}@
Failed to fetch queued events for organization '%{public}@': %{public}@
failed to send event %{public}@
failed to delete events from database: %{public}@
Registering new configuration source %{public}@
Re-registering configuration source %{public}@
%{public}@: Failed to initialize configuration payload for configuration install: %{public}@
%{public}@: %{public}@ does not conform to %{public}@
%{public}@: Failed to create request for configuration install: %{public}@
%{public}@: Failed to create operation from request for configuration install for %{public}@
%{public}@: Configuration will install
%{public}@: Ignoring expected removal error: %{public}@
%{public}@: Configuration failed install: %{public}@
%{public}@: Configuration did install successfully 
%{public}@ does not respond to %{public}@
%{public}@: Failed to initialize configuration payload for configuration remove: %{public}@
%{public}@: Uninstalled configuration did remove successfully
%{public}@: Failed to create request for installed configuration remove: %{public}@
%{public}@: Installed configuration did remove successfully
%{public}@: Failed to create operation from request for installed configuration removal: %{public}@
%{public}@: Installed configuration will remove
%{public}@: Configuration failed remove: %{public}@
%{public}@: Configuration did remove successfully
%{public}@: Failed to initialize configuration payload for configuration replace: %{public}@
%{public}@: Failed to create request for configuration replace: %{public}@
%{public}@: Failed to create configuration replace operation for request: %{public}@
%{public}@: Configuration will replace
%{public}@: Configuration failed replace: %{public}@
%{public}@: Configuration did replace successfully
%{public}@ failed to initate connection to resolve asset %{public}@: %{public}@
%{public}@ failed to resolve asset %{public}@: %{public}@
%{public}@ successfully resolved asset %{public}@
Reporting status to %{public}@
Reporting events to %{public}@
%{public}@ failed to fetch events %{public}@
%{public}@ skipping events because there are no updates to report
%{public}@ failed to send events remote proxy could not be created: %{public}@
%{public}@ failed to send events: %{public}@
%{public}@ successfully sent events
delegate does not conform to %{public}@
%{public}@ failed to fetch status update %{public}@
%{public}@ skipping status update because there are no updates to report
%{public}@ failed to send status updates remote proxy coun't be created: %{public}@
%{public}@ failed to send status updates: %{public}@
%{public}@ successfully sent status updates
Connected successfully to anonymous connection
Failing establishing anonymous connection with error: %{public}@
Connected successfully to named connection
Failing establishing connection to named service %{public}@ with error: %{public}@
device supports voice roaming: %{public}@
Could not get battery level. IOReturn Error Code: %d
getPreferredDataSubscriptionContextSync: in %s failed: %{public}@
getPhoneNumber:error: in %s failed: %{public}@
getPhoneNumber:error: in %s returned nil number
getSimLabel:error: in %s failed: %{public}@
getSimLabel:error: in %s label.text is nil
getSimLabel:error: in %s label.unique_id is nil
copyCarrierBundleVersion:error: in %s failed: %{public}@
getLocalizedOperatorName:error: in %s failed: %{public}@
copyMobileCountryCode:error: in %s failed: %{public}@
copyMobileNetworkCode:error: in %s failed: %{public}@
getMobileEquipmentInfo: failed: %{public}@
mobileEquipmentInfoList.meInfoList was unexpectedly nil
equipmentInfo has an unknown slotId, ignoring
equipmentInfo with duplicate slotId, discarding first instance
getSubscriptionInfoWithError: in %{public}@ failed: %{public}@
ServiceSubscriptionInfo subscriptionsInUse is unexpectedly nil
subscription has an unknown slotId, ignoring
subscription with duplicate slotId, discarding first instance
Can't query for device locator lock state. Error: %{public}@
Can't query for activation lock state. Error: %{public}@
Detected network change
Device is not in lost mode. Reporting success regardless.
Disabling lost mode...
Device was located while in lost mode. Alerting user with message 
%{public}@
Could not disable lost mode: %{public}@
Unexpected use of excludedIdentifiers
Client %{public}@ does not have required %{public}@ entitlement
DMFEndTransactionRequest is deprecated please use DMDActivityTransactionOperation instead
failed to fetch organizations of type 
%{public}@
: %{public}@
failed to fetch existing organizations with identifier 
%{public}@
: %{public}@
organization of type %{public}@ already exists
failed to load persistent stores: %{public}@
successfully loaded configuration database
removing legacy database...
failed to remove legacy database: %{public}@
deleted legacy database
unable to load persistent store %{public}@: %{public}@
successfully loaded persistent store: %{public}@
persistent store %{public}@ has not been fixed up yet
checking database for deprecated class
configuration database has been deprecated, destroying persistent stores and reloading
unable to remove persistent store %{public}@: %{public}@
%{public}@ failed to fetch configuration organizations: %{public}@
Deleting deactivated organization %@
%{public}@ preprocessing failed: %{public}@
Processing operation failed to commit changes: %{public}@
Failed to preproccess database while fetching all payloads: %{public}@
%{public}@: Failed to deserialize configuration engine model: %{public}@
Failed to fetch asset with identifier (%{public}@): %{public}@
%{public}@ failed to fetch configurations: %{public}@
Active restrictions: %@
%{public}@ failed to resolve restrictions plist URL
%{public}@ failed to write restrictions: %{public}@
Processing: Failed to fetch commands to execute %{public}@
%{public}@: Cancelling enqueued %{public}@ so we can enqueue an execute command operation
Processing: Failed to fetch commands to remove %{public}@
%{public}@: Cancelling enqueued %{public}@ so we can enqueue an remove command operation
Processing: Failed to fetch commands to delete %{public}@
--- Commands pending execution ---
--- Commands pending removal ---
--- Commands pending deletion ---
--- Enqueued command action operations ---
%{public}@
Failed to process activations: %{public}@
Failed to parse activation payload (%{public}@): %{public}@
Activation predicate with unique identifier %{public}@ for organization (%{public}@) is nil
Failed to evaluate activation predicate with unique identifier %{public}@ for organization (%{public}@): %{public}@ using last predicate evaluation %d
Failed to create activation predicate observer with unique identifier %{public}@ for organization (%{public}@) using last predicate evaluation %d
Failed to fetch available configurations for organization (%{public}@): %{public}@
Unknown activation type: %{public}@
Processing: Failed to fetch declarations pending removal %{public}@
Remove %{public}@: Declaration remove operation already enqueued, skipping
Remove %{public}@: Cancelling enqueued %{public}@ so we can enqueue a remove operation
Enqueued remove operation: %{public}@
Processing: Failed to fetch declarations pending install %{public}@
Install %{public}@: Declaration install operation already enqueued, skipping
Install %{public}@: Cancelling enqueued %{public}@ so we can enqueue an install operation
Enqueued configuration install operation: %{public}@
Install %{public}@: Cancelling enqueued %{public}@ so we can enqueue an asset install operation
Enqueued asset install operation: %{public}@
Processing: Failed to fetch declarations pending delete %{public}@
--- Declarations pending install ---
--- Declarations pending removal ---
--- Declarations pending deletion ---
--- Enqueued declaration action operations ---
Failed to fetch payload metadata for organization %{public}@
Refreshed %lu status items for organization %{public}@
Failed to fetch existing declarations: %{public}@
Failed to initialize declarations: %{public}@
Start set declarations for %{public}@
Declaration already present, skipping: %{public}@
Failed to instantiate payload metadata from payload dictionary: %{public}@
Failed to save changes: %{public}@
Failed to fetch existing declarations for removal: %{public}@
Marking configuration for removal: %{public}@
Failed to fetch existing declarations for update: %{public}@
Failed to initialize declarations for update: %{public}@
Declaration already installed, skipping: %{public}@
Unknown event stream frequency %{public}@, defaulting to Daily
Received xpc stream event (alarm) with name: %{public}@
Received xpc stream event (distributed notification matching) with name: %{public}@ user info: %{public}@
Received xpc stream event (notify matching) with name: %{public}@
Received effective settings change for event: %{public}@, groups: %{public}@
Unknown event stream type %{public}@, skipping
Fetch app with manifest url from: %{public}@
Fetch apps with bundle ids: %{public}@, store item id: %{public}@
Could not delete feedback for bundle identifier: %{public}@
fetch-available-os-updates starting
fetch-available-os-updates: product version = %@, use delay = %@
fetch-available-os-updates done
fetch-os-update-status starting
fetch-os-update-status end with error: %@
fetch-os-update-status done
Start installing enterprise app with manifest URL from: %{public}@
Start installing non-enterprise app for request: %{public}@
Could not serialize profile: %{public}@
Could not retrieve restrictions dictionary from payload: %{public}@
Could not process restriction heuristics for payload: %{public}@
Could not apply restrictions: %{public}@
Invite user to VPP: %{private}@
Invalid VPP invitation URL
The app store is not allowed, so we cannot invite to VPP
Error writing manage app prompt policy data to file: %{public}@
Error generating manage app prompt policy data from dictionary: %{public}@
Location Manager timed out
Could not remove device last located file: %@
Could not read device last location requested file: %@
Could not read device last located time interval: %@
Device last located on %{public}@. Creating localized message.
Location Manager returned a location.
Location Manager returned a location, but we can't report it because we can't record that fact. Throwing location information away.
Location Manager failed: error=%{public}@
Could not write device last located time interval URL resourve values: %@
Could not write device last located time interval
Could not read device last located time interval for update: %@
Cleaning up media manager manifests
Book failed to download: %{public}@
Error: %{public}@
Book completed downloading: %{public}@
Failed to set backup exclusion on managed books directory
Cannot write book without persistent ID to manifest: %{public}@
Cannot write book without iTunes Store ID to manifest: %{public}@
Cannot cancel downloads. Ignoring. Error: %{public}@
Starting installation of book: %{public}@
Replacing a book of kind %{public}@ with a book of kind %{public}@ is not allowed.
Beginning download of book %{public}@
Refreshing book purchase history and trying again.
Searching book purchase history for iTunes Store ID %{public}@
Could not look up book purchase history. Error: %{public}@
Found book: %{public}@
We found a book, but it was not VPP-licensed. Book %{public}@
Could not find book in VPP purchase history.
Starting installation of book with iTunes Store ID %{public}@
Removing %u non-store books because we have reported their transient state.
Removing %lu store books because we have reported their transient state.
Canceling all book downloads.
Removing managed books.
Error excluding %{public}@ from backup. Path does not exist.
Error excluding %{public}@ from backup %{public}@
Failing install app request because we are already prompting the user about bundle identifier: %{public}@
Start redeeming app with bundle identifier: %{public}@
Error associating app with persona: %{public}@, %{public}@
Start installing system app with bundle identifier: %{public}@
Attempting re-download of app because metadata says it is necessary: %{public}@
Attempting SINF swap to install app: %{public}@
SINF swap attempt complete for %{public}@, change type = %{public}@, error = %{public}@
Attempting to re-download of device-licensed app: %{public}@
Attempting to re-download a user-licensed app where we know the license exists: %{public}@
Failing install of app because free purchases are not allowed: %{public}@
Attempting to purchase free app: %{public}@
Error attempting SINF swap: %{public}@
attempt SINF swap, persona:%{public}@
appstored response for: %{public}@, metadata=%{public}@
Error getting app: %{public}@, %{public}@
_downloadStoreAppForRequest persona:%{public}@
Prompting user to install app: %{public}@
Invalid message format, error: %{public}@
Show our prompt to sign in
Show store prompt to sign in
Show user installation failure prompt
Set redemption code for bundle identifier: %{public}@
Set unused redemption code for bundle identifier: %{public}@
Update management information for bundle identifier: %{public}@
Could not update management info for bundle identifier: %{public}@, error: %{public}@
Error attempting to reset removability. Error: %{public}@
Request to manage app fast-tracked, supervised: %{public}@ internal: %{public}@
Request to manage app %{public}@ approved by user.
Prompt to manage app %{public}@ blocked by policy. Too many requests.
Request to manage app %{public}@ denied.
Marking an app in the installing state as managed but uninstalled
Associating app %{public}@ with persona %{public}@ in UserManagement
Unknown device type %{private}@
Failed to get profiles system group container
Failed to get managed books system group container
System group container for %{public}@ path is %{public}s
Error getting system group container for %{public}@: %llu
Payload has invalid type prefix (%{public}@) defaulting to generic payload metadata
Failed to fetch organization matching identifier (%{public}@): %{public}@
Could not play sound in MDM Lost Mode: %{public}@
Could not load effective policy persistent store, the device is locked, unlock it and this should never happen again.
Could not load effective policy persistent store with error: %{public}@
Could not set persistent store backup flag %{public}@: %{public}@
Error loading persistent store: %{public}@
Error fetching existing policy registration: %{public}@
Updating existing registration %{public}@ with identifier %{public}@
Adding new registration %{public}@ with identifier %{public}@
Error saving policy registration %{public}@: %{public}@
Error fetching existing policy by type: %{public}@
Error fetching existing policies: %{public}@
Error saving policies: %{public}@
Updating existing policy %{public}@ of type %{public}@ identifier %{public}@
Adding new policy %{public}@ of type %{public}@
Successfully removed policy types %{public}@ for declaration %{public}@
Error removing policies types %{public}@ for declaration %{public}@: %{public}@
Error fetching orphanied policies: %{public}@
Removing orphaned policy %{public}@ in organization %{public}@
Successfully removed orphaned policy types %{public}@ for declarations %{public}@
Could not remove orphaned policies types %{public}@ for declarations %{public}@: %{public}@
Posting notification for registration %{public}@
Error fetching registrations to notify: %{public}@
Failed to enable Emergency Mode because end date %@{public}@ is in the past
Failed to enable Emergency Mode because end date %@{public}@ does not have a positive Unix Epoch time
Enabling Emergency Mode until: %{public}@
Disabling Emergency Mode
Emergency Mode is not set
Emergency Mode does not have an end date
Emergency Mode ended on %{public}@, %f seconds ago
Emergency Mode will end on %{public}@, %f seconds from now
Handling distributed notification with name: %{public}@
Handling managed settings group change: %{public}@
Client %@ does not have required com.apple.private.dmd.policy entitlement
Beginning power assertion, operation: %{public}@
Ending power assertion, operation: %{public}@
unable to register configuration source because client doesn't have a valid entitlement for application-identifier
Could not remove VPN UUID for bundle identifier: %{bundleIdentifier}@, error: %{public}@
Could not remove content filter UUID for bundle identifier: %{bundleIdentifier}@, error: %{public}@
Could not remove DNS proxy UUID for bundle identifier: %{bundleIdentifier}@, error: %{public}@
Could not remove associated domains for bundle identifier: %{bundleIdentifier}@, error: %{public}@
Could not remove associated domains enable direct downloads for bundle identifier: %{bundleIdentifier}@, error: %{public}@
Could not remove configuration for bundle identifier: %{bundleIdentifier}@, error: %{public}@
Could not remove management information for bundle identifier: %{bundleIdentifier}@, error: %{public}@
Could not remove mapping to persona for for bundle identifier: %{bundleIdentifier}@, error: %{public}@
Remove app with bundle identifier: %{public}@
Cancel app installation with bundle identifier: %{public}@
Start uninstalling app with bundle identifier: %{public}@
Cancel app update with bundle identifier: %{public}@
Could not remove restrictions: %{public}@
remove-os-update starting
remove-os-update successful
remove-os-update end with error: %@
remove-os-update done
schedule-os-update starting, request = %{public}@
schedule-os-update wrong product key
schedule-os-update download action
schedule-os-update install action
schedule-os-update done, result = %{public}@
Running Server
Setting Bluetooth enabled: %{public}@
Setting data roaming enabled: %{public}@
Setting Personal Hotspot enabled: %{public}@
Setting voice roaming enabled: %{public}@
Not prompting for iTunes account in limited apps mode.
%{public}@ starting user authentication.
User successfully logged into iTunes account.
User failed to log into iTunes account. Reason code: %ld
Could not remove app removability for bundle identifier: %{bundleIdentifier}@, error: %{public}@
Could not remove UserManagement persona mapping for app %{public}@, error: %{public}@
remove software update started
remove software update failed: %{public}@
remove software update failed: no error returned
available-os-updates useDelay=%@
calling startDownloadWithMetadata:withResult:, autodownload is %{public}@, downloadOnly is %{public}@
could not get current software update status: %{public}@
Operation will start: %{public}@
Operation will finish: %{public}@
Operation did finish: %{public}@
Starting
Could not get operation class for request: %{public}@
Received request: %{public}@, from client: %{public}@
Connected %{public}@
Disconnected %{public}@
Invalidated %{public}@
Interrupted %{public}@: %{public}@
Notification %{public}@: %{public}@ %{public}@
Add operation: %{public}@
Declaration engine did resume
Declaration engine did suspend
Notified of locale change. Exiting when clean.
Resume update for bundle identifier: %{public}@
Start updating app for request: %{public}@
Error attempting to set removability to %{public}@ Error: %{public}@
Show user update failure prompt
Could not mark app state as %{public}@ for bundle identifier: %{public}@
Not displaying notification in limited app mode
Start user notification: %{public}@
Adding user notification: %{public}@
Could not get notification ref for user notification.
Could not get run loop source for user notification: %{public}@
User notification started: %{public}@
Removing user notification: %{public}@
User notification ended: %{public}@
Dismissing notification because we entered limited apps mode.
Canceling %d pending notifications because we entered limited apps mode.
Not displaying notification in limited apps mode.
An iTunes login prompt is already shown. Not showing another prompt.
Calling completions for %lu iTunes login events.
Displaying alert: %{public}@ - %{public}@ [%{public}@] [%{public}@] [%{public}@]
Scheduling automatic alert dismissal after %0.0f seconds.
Automatically dismissing alert.
Cannot display alert: can't create run loop source.
Cannot create alert. Error: %d
Alert dismissed with response: %{public}@
SIGTERM received, cleaning all outstanding XPC transactions
Could not get file information
Memory mapping failed
$HOME not set, falling back to using getpwuid
softlink:r:path:/System/Library/PrivateFrameworks/ScreenTimeCore.framework/ScreenTimeCore
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>20A241133</string>
<key>CFBundleAllowMixedLocalizations</key>
<true/>
<key>CFBundleDevelopmentRegion</key>
<string>English</string>
<key>CFBundleDisplayName</key>
<string>dmd</string>
<key>CFBundleExecutable</key>
<string>dmd</string>
<key>CFBundleIdentifier</key>
<string>com.apple.dmd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundlePackageType</key>
<string>com.apple.product-type.tool</string>
<key>CFBundleShortVersionString</key>
<string>1.0</string>
<key>CFBundleSignature</key>
<string>????</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>112</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>20A5302u</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>16.0</string>
<key>DTSDKBuild</key>
<string>20A5302u</string>
<key>DTSDKName</key>
<string>iphonesimulator16.0.internal</string>
<key>DTXcode</key>
<string>1400</string>
<key>DTXcodeBuild</key>
<string>14A6200i</string>
<key>MinimumOSVersion</key>
<string>16.0</string>
<key>NSAppTransportSecurity</key>
<dict>
<key>NSAllowsArbitraryLoads</key>
<false/>
</dict>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
<integer>2</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>allow-obliterate-device</key>
<true/>
<key>application-identifier</key>
<string>com.apple.dmd</string>
<key>aps-connection-initiate</key>
<true/>
<key>com.apple.BTServer.allowRestrictedServices</key>
<true/>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>spi</string>
<string>identity</string>
<string>vinyl-standalone</string>
</array>
<key>com.apple.Contacts.database-allow</key>
<true/>
<key>com.apple.GAX.SPI</key>
<true/>
<key>com.apple.MobileInternetSharing.allow</key>
<true/>
<key>com.apple.SystemConfiguration.SCPreferences-write-access</key>
<array>
<string>com.apple.AutoWake.xml</string>
<string>preferences.plist</string>
</array>
<key>com.apple.appletv.pbs.allow-active-application</key>
<true/>
<key>com.apple.appletv.pbs.osupdate-service-access</key>
<true/>
<key>com.apple.appstored.install-apps</key>
<true/>
<key>com.apple.appstored.private</key>
<true/>
<key>com.apple.appstored.xpc.updates</key>
<true/>
<key>com.apple.apsd.ios-device-push-token</key>
<true/>
<key>com.apple.avfoundation.allow-system-wide-context</key>
<true/>
<key>com.apple.avfoundation.allows-access-to-device-list</key>
<true/>
<key>com.apple.avfoundation.allows-set-output-device</key>
<true/>
<key>com.apple.bluetooth.system</key>
<true/>
<key>com.apple.bulletinboard.settings</key>
<true/>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.frontboard.shutdown</key>
<true/>
<key>com.apple.frontboardservices.display-layout-monitor</key>
<true/>
<key>com.apple.ibooks.BLService.private</key>
<true/>
<key>com.apple.icloud.FindMyDevice.FindMyDeviceHelperXPCService.access</key>
<true/>
<key>com.apple.icloud.findmydeviced.access</key>
<true/>
<key>com.apple.itunesstored.metrics</key>
<true/>
<key>com.apple.itunesstored.private</key>
<true/>
<key>com.apple.keystore.device</key>
<true/>
<key>com.apple.keystore.escrow.create</key>
<true/>
<key>com.apple.locationd.authorizeapplications</key>
<true/>
<key>com.apple.locationd.effective_bundle</key>
<true/>
<key>com.apple.locationd.emergency_enabler</key>
<true/>
<key>com.apple.lsapplicationproxy.deviceidentifierforvendor</key>
<true/>
<key>com.apple.managedconfiguration.mdmd-access</key>
<true/>
<key>com.apple.managedconfiguration.mdmuserd-access</key>
<true/>
<key>com.apple.managedconfiguration.profiled-access</key>
<true/>
<key>com.apple.managedconfiguration.profiled.configurationprofiles</key>
<array>
<string>Inspection</string>
<string>PopInstallationQueue</string>
<string>Removal</string>
<string>SilentNonUIInstallation</string>
<string>UIInstallation</string>
<string>CloudLockedRemoval</string>
</array>
<key>com.apple.managedconfiguration.profiled.get</key>
<array>
<string>MachineInfo</string>
<string>ManagedApplications</string>
<string>NetworkExtension</string>
<string>WiFiNetworks</string>
</array>
<key>com.apple.managedconfiguration.profiled.provisioningprofiles</key>
<array>
<string>Installation</string>
<string>PopInstallationQueue</string>
<string>Removal</string>
<string>Validation</string>
</array>
<key>com.apple.managedconfiguration.profiled.set</key>
<array>
<string>ActivationLock</string>
<string>ActivationRecord</string>
<string>Certificates</string>
<string>ClientRestrictions</string>
<string>CloudConfiguration</string>
<string>Passcode</string>
<string>Safari</string>
<string>UserSettings</string>
</array>
<key>com.apple.managedconfiguration.profiled.usercompliance</key>
<true/>
<key>com.apple.managedconfiguration.teslad-access</key>
<true/>
<key>com.apple.mkb.usersession.delete</key>
<true/>
<key>com.apple.mkb.usersession.info</key>
<true/>
<key>com.apple.mkb.usersession.loginwindow</key>
<true/>
<key>com.apple.mobile.keybagd.UserManager.bubblepop</key>
<true/>
<key>com.apple.multitasking.termination</key>
<true/>
<key>com.apple.private.InstallCoordination.allowed</key>
<true/>
<key>com.apple.private.MobileContainerManager.otherIdLookup</key>
<true/>
<key>com.apple.private.MobileGestalt.AllowedProtectedKeys</key>
<array>
<string>DeviceClass</string>
<string>ProductType</string>
<string>ProductVersion</string>
<string>BuildVersion</string>
<string>SerialNumber</string>
<string>ModelNumber</string>
<string>UniqueDeviceID</string>
<string>UserAssignedDeviceName</string>
<string>DiskUsage</string>
<string>TelephonyCapability</string>
<string>CellularDataCapability</string>
<string>PersonalHotspotCapability</string>
<string>PhoneNumber</string>
<string>EthernetMacAddress</string>
<string>BluetoothAddress</string>
<string>WifiAddress</string>
<string>WifiAddressData</string>
<string>MobileSubscriberCountryCode</string>
<string>MobileSubscriberNetworkCode</string>
</array>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.donotdisturb.state.request.client-identifiers</key>
<string>com.apple.dmd</string>
<key>com.apple.private.lockdown.finegrained-get</key>
<array>
<string>NULL/ActivationPrivateKey</string>
<string>NULL/DevicePrivateKey</string>
<string>NULL/DeviceCertificate</string>
<string>NULL/DeviceName</string>
<string>com.apple.mobile.backup/LastCloudBackupDate</string>
</array>
<key>com.apple.private.lockdown.finegrained-set</key>
<array>
<string>NULL/DeviceName</string>
</array>
<key>com.apple.private.mobileinstall.allowedSPI</key>
<array>
<string>Uninstall</string>
<string>Lookup</string>
<string>CopyDiskUsageForLaunchServices</string>
<string>UninstallForLaunchServices</string>
<string>InstallForLaunchServices</string>
</array>
<key>com.apple.private.screen-time</key>
<true/>
<key>com.apple.private.security.storage.AppDataContainers</key>
<true/>
<key>com.apple.private.sysdiagnose</key>
<true/>
<key>com.apple.private.system-keychain</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceMediaLibrary</string>
</array>
<key>com.apple.private.usage-tracking</key>
<true/>
<key>com.apple.rootless.storage.dmd</key>
<true/>
<key>com.apple.security.exception.carrier-bundle.read</key>
<true/>
<key>com.apple.security.exception.files.absolute-path.read-only</key>
<array>
<string>/private</string>
<string>/private/var</string>
<string>/private/var/containers/Bundle/Application/</string>
<string>/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.installcoordinationd/Library/InstallCoordination/Removability/</string>
<string>/private/var/db/MobileIdentityData/</string>
<string>/private/var/MobileAsset/</string>
<string>/private/var/MobileSoftwareUpdate/</string>
<string>/usr</string>
<string>/usr/libexec</string>
<string>/System</string>
</array>
<key>com.apple.security.exception.files.absolute-path.read-write</key>
<array>
<string>/private/var/mobile/Library/dmd/</string>
<string>/private/var/mobile/Library/Preferences/com.apple.springboard.plist</string>
<string>/private/var/tmp/com.apple.dmd/</string>
<string>/private/var/Managed Preferences/</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-only</key>
<array>
<string>/Library/Caches/com.apple.itunesstored/url-resolution.plist</string>
<string>/Library/com.apple.ManagedSettings/EffectiveSettings.plist</string>
<string>/Library/InstallCoordination/removability.plist</string>
<string>/Library/UserConfigurationProfiles/</string>
<string>/Media/Books/Purchases/Purchases.plist</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>/tmp/com.apple.dmd/</string>
<string>/Library/Caches/com.apple.dmd/</string>
<string>/Library/dmd/</string>
</array>
<key>com.apple.security.exception.framebuffer-access</key>
<true/>
<key>com.apple.security.exception.iokit-user-client-class</key>
<array>
<string>IOUSBDeviceInterfaceUserClient</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.AppSSO.service-xpc</string>
<string>com.apple.CARenderServer</string>
<string>com.apple.FileCoordination</string>
<string>com.apple.GSSCred</string>
<string>com.apple.MTLCompilerService</string>
<string>com.apple.MobileInternetSharing</string>
<string>com.apple.PineBoardServices</string>
<string>com.apple.PowerManagement.control</string>
<string>com.apple.ProgressReporting</string>
<string>com.apple.SBUserNotification</string>
<string>com.apple.ScreenTimeAgent.organization-status</string>
<string>com.apple.SystemConfiguration.configd</string>
<string>com.apple.UsageTrackingAgent</string>
<string>com.apple.UsageTrackingAgent.private</string>
<string>com.apple.WebKit.Networking</string>
<string>com.apple.WebKit.WebContent</string>
<string>com.apple.accessibility.AXBackBoardServer</string>
<string>com.apple.accessibility.gax.backboard</string>
<string>com.apple.accountsd.accountmanager</string>
<string>com.apple.appstored.xpc.storequeue</string>
<string>com.apple.cfnetwork.AuthBrokerAgent</string>
<string>com.apple.commcenter.coretelephony.xpc</string>
<string>com.apple.commcenter.xpc</string>
<string>com.apple.donotdisturb.service</string>
<string>com.apple.exchangesyncd</string>
<string>com.apple.icloud.findmydeviced</string>
<string>com.apple.imfoundation.IMRemoteURLConnectionAgent</string>
<string>com.apple.installcoordinationd</string>
<string>com.apple.iokit.powerdxpc</string>
<string>com.apple.itunescloudd.xpc</string>
<string>com.apple.locationd.registration</string>
<string>com.apple.locationd.synchronous</string>
<string>com.apple.lsd.mapdb</string>
<string>com.apple.lsd.xpc</string>
<string>com.apple.managedconfiguration.profiled</string>
<string>com.apple.misagent</string>
<string>com.apple.mobile.keybagd.UserManager.xpc</string>
<string>com.apple.mobile.usermanagerd.xpc</string>
<string>com.apple.mobile.keybagd.xpc</string>
<string>com.apple.mobileactivationd</string>
<string>com.apple.securityd</string>
<string>com.apple.softwareupdateservicesd</string>
<string>com.apple.springboard.services</string>
<string>com.apple.sysdiagnose.service.xpc</string>
<string>com.apple.trustd</string>
<string>com.apple.coremedia.routediscoverer.xpc</string>
<string>com.apple.coremedia.routingcontext.xpc</string>
<string>com.apple.coremedia.volumecontroller.xpc</string>
<string>com.apple.airplay.apsynccontroller.xpc</string>
<string>com.apple.mediaremoted.xpc</string>
<string>com.apple.server.bluetooth</string>
<string>com.apple.appstored.xpc</string>
</array>
<key>com.apple.security.exception.mobile-keybag-access</key>
<true/>
<key>com.apple.security.exception.shared-preference.read-only</key>
<array>
<string>com.apple.purplebuddy</string>
<string>com.apple.mobileipod</string>
</array>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.dmd</string>
<string>com.apple.softwareupdateservicesd</string>
<string>com.apple.carrier</string>
<string>com.apple.itunescloud</string>
</array>
<key>com.apple.security.exception.sysctl.read-only</key>
<array>
<string>net.routetable</string>
</array>
<key>com.apple.security.network.client</key>
<true/>
<key>com.apple.security.system-groups</key>
<array>
<string>systemgroup.com.apple.configurationprofiles</string>
<string>systemgroup.com.apple.installcoordinationd</string>
<string>systemgroup.com.apple.media.books.managed</string>
</array>
<key>com.apple.security.ts.lockdown-client</key>
<true/>
<key>com.apple.security.ts.mach-task-name</key>
<true/>
<key>com.apple.springboard.CFUserNotification</key>
<true/>
<key>com.apple.springboard.application-removability.proxy</key>
<true/>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>com.apple.springboard.remote-alert</key>
<true/>
<key>com.apple.usermanagerd.persona.fetch</key>
<true/>
<key>com.apple.usermanagerd.persona.setbundle</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
<string>com.apple.certificates</string>
<string>com.apple.identities</string>
<string>com.apple.preferences</string>
<string>com.apple.managed.vpn.shared</string>
<string>lockdown-identities</string>
</array>
<key>platform-application</key>
<true/>
<key>seatbelt-profiles</key>
<array>
<string>temporary-sandbox</string>
</array>
</dict>
</plist>
