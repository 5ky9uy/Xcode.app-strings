Asked to pick route: %@
Asked to pick route with unique identifier: %@
Asked to pick route when available with unique identifier: %@
Updated routes to %@
Handling server reconnect by requesting current route list
Handling server disconnect by resetting routes to an empty list
TUHardwareControlsBroadcaster starting to listen for hardware controls.
TUHardwareControlsBroadcaster deallocating - stopping listening for hardware controls.
TUHardwareControlsBroadcaster ignoring notification: %@
TUHardwareControlsBroadcaster sending hardware control notification: %@
TUHardwareControlsBroadcaster scheduling a long press timer
TUHardwareControlsBroadcaster long press timer fired, posting: %@
XPC connection invalidated.
XPC connection interrupted.
Could not add converation links due to connection error %@
Could not add conversation link descriptors due to connection error %@
Could not add or update converation links due to connection error %@
Could not add or update conversation link descriptors due to connection error %@
Could not retrieve conversation link count due to connection error %@
Could not retrieve conversation link descriptors due to connection error %@
Could not remove conversation link descriptors due to connection error %@
Could not update conversation link descriptors due to connection error %@
Could not update TU KV due to connection error %@
Could not fetch TU KV due to connection error %@
Could not synch fetch conversation link descriptors due to connection error %@
serviceForContacts is nil
Retrieving suggested contact matches by email address %@ failed with error %@.
Retrieving suggested contact matches by phone number %@ failed with error %@.
Handling Suggestions contacts change by refreshing
[WARN] TUSuggestionsMetadataCacheDataProvider waited too long for other requests and will not look up '%@'
dispatch_group_enter %@
Could not fetch suggested contact via [SGSuggestionsService namesForDetail:limitTo:prependMaybe:withCompletion:]: %@
dispatch_group_leave %@
Lookup failed when trying to retrieve a name for bundle ID %@ with error %@
[WARN] Not setting activity context: %@
[WARN] Couldn't parse query parameter: %@
Handling %s by refreshing
[WARN] No metadata destinationID found for phone number '%@'
Error retrieving first identification entries for phone numbers %@: %@
Resolving %@ to a geographic location failed with error %@
Skipping request, newer one coming
Processing request, no newer ones in the queue
Skipping post, newer request coming
Processing post, no newer ones in the queue
Requested value is different from cached value (cached = %@, current = %@)
Value is the same
Posting changed notification: %@
Asked to set VoLTE calling enabled to %d
Asked to set WiFi calling enabled to %d
Asked to set WiFi calling roaming enabled to %d
Asked to invalidate and refresh WiFi calling provisioning URL
Asked to set Thumper calling enabled to %d
Asked to invalidate and refresh Thumper calling provisioning URL
Asked to set Thumper calling allowed to %d on secondary device with ID %@
Asked to set Thumper calling allowed on paired secondary device to %d
Asked to request PIN from primary device for Thumper calling
Asked to cancel PIN from primary device for Thumper calling
WiFi capabilities changed from %d to %d
VoLTE capabilities changed from %d to %d
Thumper capabilities changed from (supported=%d overCellularData=%d enabled=%d provisioningStatus=%d, associated=%d, supportsDefaultPairedDevice=%d) to (supported=%d overCellularData=%d enabled=%d provisioningStatus=%d, associated=%d, supportsDefaultPairedDevice=%d)
WiFi calling URL changed from %@ to %@
Thumper calling URL changed from %@ to %@
Unable to extract pseudonym from URL: %@
Unable to extract conversationLink from URL: %@
Asked to set current input device to %@
Upgrading input device to depth camera device %@
Setting video orientation: %d
localFrontLayer: %@
localBackLayer: %@
[WARN] Cannot create TUVideoEffect named %@ with nil thumbnailImage
Starting preview with self.currentInputDevice: %@
Ignoring start preview with self.currentInputDevice: %@
Stopping preview with self.currentInputDevice: %@
Pausing preview with self.currentInputDevice: %@
Setting back camera zoom factor: %f
Setting ramp camera zoom factor: %f with rate: %f
Beginning animation to preview with self.currentInputDevice: %@
Setting local camera to back facing device %@
Setting local camera to front facing device %@
Ending animation to preview with self.currentInputDevice: %@
Beginning animation to PIP with self.currentInputDevice: %@
Ending animation to PIP with self.currentInputDevice: %@
Setting localPortraitAspectRatio: %@ localLandscapeAspectRatio: %@
cameraUID: %@, error: %@
cameraUID: %@
Starting preview because client wants preview and camera did become available
Provider received notice that local camera UID changed to %@
videoAttributes: %@
isZoomAvailable: %d
cameraBlurEnabledDidChange: %d
userPreferredCameraUIDDidChange: %@
didGetSnapshot: %p
momentCapturedForStreamToken: %ld requesterID: %@
Error registering moments captured stream token: %@
user notification provider xpc connection invalidated (client side)
user notification provider XPC connection interrupted (client side)
Calling AudioServicesPlaySystemSoundWithOptions() with system sound ID %d
[WARN] Requested to play DTMF tone for unknown key: %d
Asked to play DTMF sound type %ld
Dial assist value changed. Synchronizing prefs
International assist forced; overriding carrier bundle check
Calling: TUNumberToDial(inputNumber=%@, inputCountryCode=%@, outputCountryCode=%@, options=%@)
No input country code provided, assuming home country code: %@
No output country code provided, assuming network country code: %@
Non-existent or empty number
Invoking dial assist...
Returning %@
Home country code %@ is equal to our active country code %@, but we were asked to suppress local assist.
Home country code %@ is equal to our active country code %@.  We'll use local assist function.
Our home country code %@ is not equal to active country code %@.  We'll use international assist function.
PN says number %@ is not valid for home country %@.  Returning early with no assist.
Number looks valid.  Applying assist.
Assist function with input (%@) yielded %@, didAssist = %d
Error getting ISO country code (domain=%d, code=%d)
Dial assisting because the request is not valid for the local network
Dial assisting because the request matches a contact card
Not dial assisting for dial request %@, because is was local assisted (%d) or dial assist was not requested (%d) or is a valid number for the local network already (%d)
Not attempting dial assist for dial request %@ because request is nil (%d) or dial request is dialAssisted (%d) or handle is not a phone number (%d) dial assist is not enabled (%d)
Call History does not support displaying FaceTime Audio calls
Call History supports displaying FaceTime Audio calls
Error trying to fetch backing contact for identifier %@: %@
Could not normalize destination ID %@ to perform contacts lookup
No contacts found matching predicate %@ error: %@
Could not create a CNPhoneNumber using the normalized destination identifier '%@'.
Looking up contacts matching predicate %@
Found matching contacts %@, using first object
Asked to change wiFiCallingRoamingEnabled from %d to %d
Asked to change relayCallingEnabled from %d to %d
Asked to change relayCallingEnabled from %d to %d for %@
Telephony support changed from %d to %d
FaceTime Audio support changed from %d to %d
FaceTime Video support changed from %d to %d
FaceTime availability changed from (audio=%d video=%d) to (audio=%d video=%d)
Relay capabilities changed from (supported=%d enabled=%d) to (supported=%d enabled=%d)
Relay calling availability changed from %d to %d
Relay calling features changed from %d to %d
Cloud calling devices changed
Outgoing relay caller ID changed from %@ to %@
Emergency Callback Mode changed from %d to %d
Emergency Callback Possible changed from %d to %d
Determined lockdownModeEnabled: %@
mediaType: %d, provider: %@ participant: %@
transactionID: %@
registered, capabilities: %@, error: %@
provider: %@
Determined that Live Photo moments XPC Service should be enabled
capabilities: %@ token: %ld
momentDescriptor: %@
Asked to play sound with soundID: %d iterations: %@ pauseDurationBetweenIterations: %f
Calling AudioServicesPlaySystemSoundWithCompletion with soundID: %d options: %@
Calling AudioServicesStopSystemSound with soundID=%d
notification: %@
Registered for registerForMutedTalkerNotification
Audio devices changed
Setting mixesVoiceWithMedia: %d
Setting mediaPlaybackOnExternalDevice: %d
Error fetching backing contact for recent call %@: %@
providerIdentifier: %@
configuration: %@
identifier: %@
provider: %@ expiryDuration: %f uri: %@
pseudonymHandle: %@ provider: %@ expirationDate: %@
pseudonymHandle: %@ provider: %@
handle: %@ provider: %@
AVLess SharePlay isn't enabled. Please enable the AVLess SharePlay FeatureFlag.
Conversation %@ isn't eligible for downgrade since it doesn't support AVModeNone
Conversation isn't eligible for downgrade since we couldn't find an activitySession in the joined or handedOff state
Asked to find matching primary remote participant for lightweight handle: %@
Found remote participant for lightweight participant: %@
[WARN] Did not find remote participant for lightweight member: %@
TUNeighborhoodActivityConduit failed to encode state: %@
Deallocating TUNeighborhoodActivityConduit
Conduit delegate added: %{public}@
Conduit delegate removed: %{public}@
Setting approval delegate: %{public}@
Setting activeSplitSessionTV: oldValue: %@, newValue: %@
Failed to get initial state for nearby TVs: %@
Failed to get initial state for active split session TV: %@
Conversation not found for %@. TV incapable of handoff
Conversation not AVLess. TV is capable of handoff.
Conversation is AVLess. NearbyTVDevice: %@ capable of handoff: %d
TUConduit XPC connection established
No split session approval delegate installed
Cannot find conversation for approving split session
[WARN] +[AVSystemController sharedAVSystemController] returned nil value
[WARN] Could not weak link notification string '%@'. Not observing notifications for it.
Mute status changed: %@
Downlink mute status changed: %@
Volume changed: %@
Pickable Routes Changed: %@
Clearing cached current pickable routes and posting TUAudioSystemAudioPickableRoutesChanged
Media services were reset: %@
activeCategoryVolume = %f
Triggering an end of interruption for audio session with ID %@
Setting active category volume to %f
Failed to set active category volume to %f
isUplinkMuted = %d
isTTY = %d
setting isUplinkMuted value = %@
Failed to set isUplinkMuted: %@
Dispatching changed notification in response to setUplinkMuted
isDownlinkMuted = %d
setting isDownlinkMuted value = %@
Failed to set isDownlinkMuted: %@
Dispatching changed notification in response to setDownlinkMuted
pickableRoutesForTTY
_pickableRoutesForPhoneCallWithForceNewRequest
_pickableRoutesForPhoneCall is unsupported
_pickableRoutesForPlayAndRecordVoiceWithForceNewRequest
_pickableRoutesForPlayAndRecordVideoWithForceNewRequest
_pickableRoutesForPlayAndRecordRemoteVoiceWithForceNewRequest
_pickableRoutesForVoiceMailWithForceNewRequest
_pickableRoutesForVoiceMailWithForceNewRequest is unsupported
Fetched current pickable routes %@ and posting TUAudioSystemAudioPickableRoutesChanged
Unknown category (%@) and mode (%@) combination, using default pickable routes
Notifying AVSystemController to override to partner route
uniqueIdentifier: %@
using pickable routes %@
returning route %@
route: %@
Other sessions request no ringtone interruption: %d
Handling %s by setting up XPC connection
Server did disconnect
Setting up XPC connection for %@
TUCallCapabilitiesXPCClient - capabilityStateUpdated
Retrieving initial call capabilities state.
Error grabbing remote object proxy: %@
Received initial call capabilities state: %p
Updated to newState: %p
[WARN] Could not convert %@ to IDS fromID
[WARN] Could not convert %@ to IDS destination
TUContactsDataProvider: source is a '%{public}@'
Executing fetch request: %@
Finding the appropriate localized name to use for handles: %@
     - using formatted destination ID '%@'
     - call is to emergency services, we'll use the emergency services string: '%@'
     - call is blocked, we'll use the blocked string: '%@'
     - falling back to the unknown string: '%@'
Determined dataProviderResult: %@
Found contact: %@ for contactIdentifier %@: 
Error while fetching contact with identifier %@: %@
Not looking up contact for %@ because it is in our apple care handles
Error while fetching contacts for handle %@: %@
Determined compositeName: %@ for contacts: %@
     - we'll format the destinationID '%@' with the country code '%@'
     - handle can't/shouldn't be formatted as a phone number, so using the unmodified destination ID '%@'
[WARN] Could not look up legacy ABPerson for contact: %@
Encountered an error while serializing TUDialRequest: %@
Trying to attach TUDialRequest to a UserActivity with an unsupported activityType: %@
Attaching TUDialRequest to UserActivity
Encountered an error while serializing TUJoinConversationRequest: %@
Trying to attach TUJoinConversationRequest to a UserActivity with an unsupported activityType: %@
Attaching TUJoinConversationRequest to UserActivity
Unarchiving TUDialRequest from UserActivity
Error unarchiving TUDialRequest: %@
Unarchiving TUJoinConversationRequest from UserActivity
Error unarchiving TUJoinConversationRequest: %@
originating ui type from URL: %@
creating conversation members from intent contacts: %@
personHandle was empty: %@
userActivity with intent: %@
[WARN] Could not find class RTTSettings; RTTUtilities.framework may have failed to link.
[WARN] Could not find class RTTTelephonyUtilities; RTTUtilities.framework may have failed to link.
Unable to weak-link symbol kCAGravityResizeAspectFill
Error donating intent for provider with identifier: %@
Error requesting app launch: %@
Error requesting initial state: %@
_updateProvidersByIdentifier providersByIdentifier,: %@
_updateProvidersByIdentifier localProvidersByIdentifier: %@
_updateProvidersByIdentifier pairedHostDeviceProvidersByIdentifier: %@
Member with handle (%@) has a restricted status
Member with handle (%@) has a status limited by downtime
Member with handle (%@) has a status limited by screentime
Member with handle (%@) doesn't have a restricted status
TUFormattedPhoneNumber called with number: '%@' and country code '%@'
    - PNCreateFormattedStringWithCountry returned %@
    - we got nil, using fallback code PNCreateFormattedStringWithCountry(us) returned %@
    - that also failed, we'll return the original string %@
_CTServerConnectionIsEmergencyNumberWithWhitelistIncluded - encountered error %d %ld
_CTServerConnectionIsEmergencyNumber - encountered error %d %ld
_CTServerConnectionGetThumperName - encountered error %d %ld
Launching InCallService via NSUserActivity for join request: %@
Failed to archive join request object with error: %@
Failed to create application record for InCallService with error: %@
Failed to launch InCallService via NSUserActivity with error: %@
url: %@ isSensitive: %d promptToUnlock: %d
Failed to open URL %@: %@
allowCallsDuringScreenSharing=%d
url: %@
TUOpenHomeScreen Request
TUOpenFaceTimeApp Request
Link had a nickname to pre-fill for the web (%@); we have no use for it, so ignoring
[WARN] Ignoring unrecognized conversation link fragment query item: "%@"=>"%@"
Cannot return URL; missing URL fragment for %@
Failed to parse URL components for %@
RTCReporter: %@ is handling %@
%@ is ignoring notification because callUUID is nil: %@
RTCReporter: Reporting message with session %@ userInfo %@
[WARN] RTCReporter: Error while sending message with error: %@
RTCReporter: Created reporting session %@ with sessionInfo: %@, userInfo: %@
RTCReporter: Received backends %@
Making outgoing call via Siri to %@
Making outgoing call via Siri
Updating participants presentation contexts: %@ for conversation UUID: %@
[WARN] Attempting to get section results with out of bounds range (%li) for actual range (0..%li)
Executing contact fetch request %@ using contact store %@
Contact fetch request returned %lu results
Synchronizing user configuration for %@ to Apple Watch
Received a key-value observing notification for key path (%@) object (%@).
Handling %s by requesting current state
[WARN] Bad status received attempting to get server launched state: %d
%@: Setting up XPC connection
XPC connection invalidated
Handling XPC connection invalidation
XPC connection interrupted
Handling XPC connection interruption
_currentCalls: %@ currentCalls: %@
No cached call found for %@. Initialized new proxy call %p
Asked to tear down XPC connection
Requesting current state
Error using remote object proxy: %@
CSD hasn't launched since boot so assuming no current calls exist
Received current state with calls for asynchronousServer: %@
Dropping asynchronous response for current state, since we already have received initial state
Proxying fetch current calls
Received current state with calls for synchronousServer: %@
Waiting for initial state
Ignoring server disconnect
Disconnecting call with TUCallDisconnectedReasonComponentCrashed: %@
Proxying dial through CSD for %@
Error using remote object proxy for dial: %@
[WARN] Passing nil call to dialWithRequest completion block
Proxying joinConversationWithRequest request: %@
Updated joinConversationWithRequest videoEnable=%d uplinkMuted=%d
Proxying reportLocalPreviewStopped for %@
Proxying answer through CSD for %@
Proxying hold through CSD for %@
Proxying unhold through CSD for %@
Proxying upgrade video call through CSD for %@
Proxying disconnect through CSD for %@
Proxying groupCall through CSD for %@ and %@
Proxying ungroupCall through CSD for %@
Proxying swapCalls through CSD
Proxying playDTMFToneForCall:key: through CSD
Proxying disconnectCurrentCallAndActivateHeld through CSD
Proxying disconnectAllCalls through CSD
Proxying setTTYType:forCall: through CSD
Proxying pullRelayingCallsFromClient through CSD
Proxying pushRelayingCallsToHost through CSD
Proxying pullCallFromClientUsingHandoffActivityUserInfo through CSD with completion block (%@)
Error using remote object proxy for %@
Proxying pushHostedCallsToDestination through CSD for destination %@
Proxying pullHostedCallsFromPairedHostDevice through CSD
Proxying sendHardPauseDigits through CSD
Proxying updateCallWithProxy through CSD for proxy call %@
Proxying enteredForegroundForCallWithUniqueProxyIdentifier through CSD for uniqueProxyIdentifier %@
Proxying willEnterBackgroundForAllCalls through CSD
Proxying enteredBackgroundForAllCalls through CSD
Proxying setRemoteVideoPresentationSizeForCallWithUniqueProxyIdentifier through CSD for uniqueProxyIdentifier %@, size %@
Proxying setRemoteVideoPresentationStateForCallWithUniqueProxyIdentifier through CSD for uniqueProxyIdentifier %@, presentationState %d
Proxying setScreenShareAttributesForCallWithUniqueProxyIdentifier through CSD for uniqueProxyIdentifier %@, screenShareAttributes %@
Proxying setSharingScreen: %d through CSD for uniqueProxyIdentifier %@, screenShareAttributes %@
Proxying setBluetoothAudioFormatForCallWithUniqueProxyIdentifier through CSD for uniqueProxyIdentifier %@, bluetoothAudioFormat %ld
Sending MMI/USSD code through CSD for %@
Proxying setUplinkMuted=%d for %@
Proxying setDownlinkMuted=%d for %@
Proxying setIsSendingVideo=%d for %@
Proxying setMixesVoiceWithMedia=%d for %@
Proxying setSharingScreen=%d for %@
Proxying shouldSuppressInCallStatusBar=%d through CSD
Proxying shouldAllowRingingCallStatusIndicator=%d through CSD
Proying activateInCallUIWithActivityContinuationIdentifier=%@
CallServicesInterface: sendUserScoreToRTCReporting with UUID: %@ and Score: %d
Proxying setCurrentAudioInputDeviceToDeviceWithUID through CSD for UID %@
Proxying setCurrentOutputDeviceToDeviceWithUID through CSD for deviceUID %@
Proxying localRoutesByUniqueIdentifier synchronously
Error using remote object proxy when requesting synchronous local routes: %@
Proxying pairedHostDeviceRoutesByUniqueIdentifier synchronously
Error using remote object proxy when requesting synchronous paired host device routes: %@
Proxying pickLocalRouteWithUniqueIdentifier for %@ shouldWaitUntilAvailable: %d
Proxying pickPairedHostDeviceRouteWithUniqueIdentifier for %@ shouldWaitUntilAvailable: %d
Error using remote object proxy when requesting synchronous restricted handle check: %@
Error using remote object proxy when requesting synchronous policy check for addresses: %@
Error using remote object proxy when requesting synchronous restricted addresses check: %@
Error using remote object proxy when requesting synchronous unknown address check: %@
Proxying setClientCapabilities through CSD for capabilities %@
Handling current calls changed: %@
Handling call changed for disconnected calls: %@
Resetting call transition states and posting %@
Handling notification %@ for call with unique proxy identifier %@ userInfo %@
Received query status response for service %@: %@
Updated filtered destinations for Multiway service: %@ modern: %@ webCapable: %@ avLessSharePlayCapable: %@
Updating destinations for iMessage service: %@
Updated filtered destinations for Multiway service: %@
Could not find subscription context for the specified label identifier: %@
Retrieving active contexts from client %@ failed with error %@
Could not find subscription context for the specified UUID: %@
registeredStream: %ld withAvailability: %ld
Error reporting captured stream token: %@
didCleanUpForStream: %ld
Error reporting moments stream token: %@
didStartRequestForStream: %ld transactionID: %@
didReceiveResultsForStream: %ld transactionID: %@
reporting controller xpc connection invalidated (client side)
reporting controller provider XPC connection interrupted (client side)
TUConduitXPCClient: callservicesd restarted and requested re-connection
TUConduitXPCClient: informing delegate of connection restart
Registering TUNeighborhoodActivityConduitXPCClient %p with non-xpc server %p
Deallocating TUNeighborhoodActivityConduitXPCClient
TUConduit XPC connection is nil after prompting!
Error fetching nearby TVs: %@
Error fetching active split session TV: %@
Error inviting TV %@ to conversation %@: %@
Error disconnecting TV %@: %@
Sending approval registration: %s
Error registering as approval handler: %@
%{public}s: XPC connection invalidated
%{public}s: XPC connection interrupted
Register for cellular power spectrum - type: %lu, success: %d, error: %@
Unregister for cellular power spectrum - type: %lu, success: %d, error: %@
Audio power spectrum meter died: %@
Not playing sound since no valid sound descriptor was returned for type=%lu call=%@
Playing %@
Successfully consumed sandbox extension for URL %@
Unable to consume sandbox extension with token %@, received handle %lld
Unable to issue sandbox extension of class %@ for URL %@
dialRequest: %@
Opening URL because dial request is using a system provider
%@ did not complete before the %llu millisecond timeout.
Update (refresh) of data provider %@ did not complete before the %ld second timeout.
[WARN] URL does not contain a valid scheme: %@
[WARN] URL scheme is not in list of allowed schemes: %@ allowedSchemes: %@
Posting %@ with object %@ userInfo %@
statusChangedForCall %@
connectingChangedForCall %@
connectedChangedForCall %@
wantsHoldMusicChangedForCall %@
endpointOnCurrentDeviceChangedForCall %@
shouldSuppressRingtoneChangedForCall %@
faceTimeIDStatusChangedForCall %@
hardPauseDigitsStateChangedForCall %@
needsManualInCallSoundsChangedForCall %@
hasSentInvitationChangedForCall %@
isUsingBasebandChangedForCall %@
isOnHoldChangedForCall %@
isUplinkMutedChangedForCall %@
destinationIDChangedForCall %@
displayContextChangedForCall %@
isEmergencyChangedForCall %@
isFailureExpectedChangedForCall %@
supportsEmergencyFallbackChangedForCall %@
isSendingAudioChangedForCall %@
isSendingVideoChangedForCall %@
sharingScreenChangedForCall %@
isThirdPartyVideoChangedForCall %@
mediaStalledChangedForCall %@
videoDegradedChangedForCall %@
videoPausedChangedForCall %@
audioPropertiesChangedForCall %@
ttyTypeChangedForCall %@
bluetoothAudioFormatChangedForCall %@
remoteUplinkMutedChangedForCall %@
localSenderIdentityAccountUUIDChangedForCall %@
supportsTTYWithVoiceChangedForCall %@
remoteAspectRatioChangedForCall %@
remoteVideoContentRectChangedForCall %@
cameraTypeChangedForCall %@
videoMirroredChangedForCall %@
remoteCameraOrientationChangedForCall %@
remoteScreenOrientationChangedForCall %@
remoteScreenAspectRatioChangedForCall %@
providerContextChangedForCall %@
mediaPropertiesChangedForCall %@
videoStreamTokenChangedForCall %@
conversationChangedForCall %@
mixesVoiceWithMediaChangedForCall %@
prefersExclusiveAccessToCellularNetworkChangedForCall %@
modelChangedForCall %@
conferenceParticipantCallsChangedForCallContainer %@ conferenceParticipantCalls %@
TUConversationActivityMetadata Error creating folder at %@ error %@
TUConversationActivityMetadata %@ failed to create image folder, can't write to disk.
TUConversationActivityMetadata Error writing image data to %@ error %@
TUConversationActivityMetadata %@ successfully wrote image to path %@
TUConversationActivityMetadata %@ Wasn't able to delete image file error %@
TUConversationActivityMetadata deleted image
Failed to read image data for %@, error: %@
Error deserializing activity metadata %@,
TUNotifyOfReplyWithMessage: Sending BB message with name=%@ payload=%@
TUNotifyOfRemindMeLater: Sending BB message with name=%@ payload=%@
TUNotifyOfRemindMeLaterWhenILeave: Sending BB message with name=%@ payload=%@
Asked to set new messages group name: %@ on conversation: %@
Asked to set grid display mode to: %lu on conversation: %@
Asked to update messages group photo on conversation: %@
Asked to add remote members: %@ otherInvitedHandles: %@ to conversation: %@
Asked to add activity: %@ to conversation: %@
Asked to leave activitySession: %@ to conversation: %@
Asked to end activitySession: %@ to conversation: %@
Asked to present dismissal alert for activitySession: %@ on conversation: %@
Asked to set activity authorization to: %d for bundle identifier %@
Client request to set auto expanse enabled to %@
joinConversationWithRequest %@
leaveConversationWithUUID %@
Asked to launch application for activitySession %@
Asked to launch application for activitySession UUID %@
Asked to launch application for activitySession UUID %@ and override to background %@
Notified of airplay state: %@ for activity session %@
Asked to buzz member: %@ conversation: %@
Asked to refreshActiveConversations
Asked to kick member: %@ conversation: %@
Asked to set downlink muted to: (%d) for remote participants in conversation: %@
Asked to set audioEnabled to: (%d) for remote participant with ids identifier %llu in conversation: %@
Asked to set videoEnabled to: (%d) for remoteparticipant with ids identifier %llu in conversation: %@
Asked to get the latest remote screen share attributes
Asked to retrieve all active links
Asked to generate link for conversation: %@
Asked to generate link in advance of conversation with invited member handles: %@, linkLifetimeScope: %ld
Asked to add invited member handles %@ to link %@
Asked to invalidate link: %@
Asked to renew link %@ to new expiration date %@ with reason %lu
Asked to check validity for link: %@
Asked to get an inactive link for vending as suggestion
Asked to activate previously-vended link: %@
Asked to set a link name for link: %@
Asked to manually schedule a sync for activated conversation links
Asked to get the link sync state
Asked to approve a pending member waiting to be let in: %@
Asked to reject a pending member waiting to be let in: %@
Asked to %@ all let me in requests for link: %@
Asked to set screenEnabled %@ screenShareAttributes: %@ conversationWithUUID: %@
allowsScreenSharing: %@
allowsScreenSharingWithVideo: %@
allowsPortraitBlurWhenCaptionsEnabled: %{public}@
Fetching Messages group info for conversation: %@
Notified of new session-backed conversation %@ to replace non-session-backed conversation %@
Removing conversationsNotBackedByGroupSessions since dataSource got disconnected
No messages group provider is available to fetch details for messages group %@
activateConversationNoticeWithActionURL: %@ bundleID %@
UUID: %@
TUConversationManager app launch state %@ session %@ conversation %@
TUConversationManager receivedTrackedPendingMember %@ forConversationLink %@
TUConversationManager remoteScreenShareAttributesChanged %@, isLocallySharing: %@
TUConversationManager remoteScreenShareEndedWithReason: %@
TUConversationManager sharePlayAvailable: %d
TUConversationManager screenSharingAvailable: %d
Adding call %@ to calls pending upgrade to session-backed architecture
Stopping tracking conversation not backed by session %@ since it is now backed by session
Created conversation: %@ for call: %@
captureCapabilities: %ld
CMFBlockListAddItemForAllServices(%@)
CMFBlockListRemoveItemForAllServices(%@)
CMFBlockListCopyItemsForAllServicesService = %@
CMFItemCopyPhoneNumber(%@) = %@
CMFItemCopyEmailAddress(%@) = %@
CMFItemCopyBusinessID(%@) = %@
TUCall contacts data source is a '%{public}@'
Initialized dynamic display context: %@
Suggestions: Could not fetch suggested contact via namesForDetail: %@
Suggestions: Found name '%@' for '%@'
Suggestions: No suggested names found for '%@'
Found map item %@ for call: %@
Found call directory identification entry %@
Error retrieving call directory first identification entry for phone number %@: %@
Adding observer to %@ for key path %@
backTripleCameraDevices.count=%lu, backDualCameraDevices.count=%lu,  backDualWideCameraDevices.count =%lu, backWideCameraDevices.count=%lu
Could not find any front capture devices
Could not find any back capture devices
inputDevices = %@
AVCaptureDevice backgroundBlurControlMode is not in supported state. Ignoring to set %d
Camera blur changed to %@
userPreferredCamera changed to %@
[WARN] Unexpected value %@ for %@ entitlement: %@
[WARN] Unexpected NULL value returned from SecTaskCreateFromSelf()
[WARN] Unexpected value for %@ entitlement: %@
Because this is an internal install, com.apple.Superbox (aka Speakerbox) is acting as a system provider
setSupportsCurrentPlatform provider: %@ supportsCurrentPlatform: %d
Setting supportsCurrentPlatform to True for iOS and walkie-talkie, this should not happen
Asked to set %@ from %d to %d for %@. Posting necessary notifications and updating daemon
Asked to set %@ from %d to %d for %@. Posting necessary notifications
Asked to set uplinkMuted from %d to %d for %@. Posting necessary notifications and updating daemon
Asked to set downlinkMuted from %d to %d for %@. Posting necessary notifications and updating daemon
Asked to set isSendingVideo from %d to %d for %@. Posting necessary notifications and updating daemon
Asked to set sharingScreen from %d to %d for %@. Posting necessary notifications and updating daemon
Asked to set mixesVoiceWithMedia from %d to %d for self: %@. Posting necessary notifications and updating daemon
[WARN] Wrong use of API
Asked to set sharingScreen from %d to %d attributes: %@ for %@. Posting necessary notifications and updating daemon
Asked to set remote video layer %@ for mode %ld
Asked to set local video layer %@ for mode %ld
Updating video call attributes %@
Setting video layer %@ for mode %d
No layers to synchronize, set local TURemoteVideoClient to nil
Client asked to synchronize remote video layers but we don't have a AVCRemoteVideoClient which is only created once we have a nonzero videoStreamToken
No layers to synchronize so setting self.remoteVideo to nil
Creating AVCRemoteVideoClient with stream token %ld
self.videoStreamToken: %ld remoteVideoPresentationSize: %@
[WARN] Ignoring request to set remote video presentation size because call is not a video call: %@
self.videoStreamToken: %ld remoteVideoPresentationState: %d
[WARN] Ignoring request to set remote video presentation state because call is not a video call: %@
screenShareAttributes: %@
bluetoothAudioFormat: %ld
self.videoStreamToken: %ld didPause: %d
self.videoStreamToken: %ld didStall: %d
self.videoStreamToken: %ld screenAttributes: %@
self.videoStreamToken: %ld videoAttributes: %@
Initializing TUConversationProviderManagerXPCClient
Handling %s by setting up XPC connection for ProviderManager1
Handling %s by setting up XPC connection for ProviderManager2
Registering TUConversationProviderManagerXPCClient %p with async server %p
Error getting conversation provider with identifier: %@ error: %@
Error registering callbacks for conversation provider: %@ error: %@
Error registering conversation provider: %@ error: %@
Error generating pseudonym handle for conversation provider: %@ error: %@
Error renewing pseudonym handle: %@ for conversation provider: %@ error: %@
Error revoking pseudonym handle: %@ for conversation provider: %@ error: %@
Error when checking if pseudonym handle: %@ corresponds to conversation provider: %@ error: %@
Starting XPC Connection.
intent: %@ intent.triggerMethod: %ld
Intent contains an originatingDeviceIDSIdentifier: %@
Intent contains an _originatingDeviceRapportMediaSystemIdentifier: %@
Intent contains an originatingDeviceRapportEffectiveIdentifier: %@
Start call intent has audioRoute: %ld ttyType: %ld preferredCallProvider: %ld
Request is from a homepod, setting ttyType to none
It's an emergency call. Siri was triggered by HeySiri, and audioSourceIdentifier isn't set already. setting audioSourceIdentifier to speaker phone.
Determined call intent provider: %@
Start call audio intent has audioRoute: %ld ttyType: %ld preferredCallProvider: %ld
Intent contains a speakerphone audio route, setting audioSourceIdentifier to TUCallSourceIdentifierSpeakerRoute
Intent contains a Hey Siri audio route, setting audioSourceIdentifier to TUCallSourceIdentifierHeySiri
Intent contains a recordDeviceUID, setting audioSourceIdentifier to "%@"
Intent contains a recordDeviceIdentifier, setting audioSourceIdentifier to "%@"
Determined audio call intent provider: %@
Determined video call intent provider: %@
Determining destinationID and contactIdentifier for INPerson: %@ (personHandle=%@, personHandle.value=%@, contactIdentifier=%@)
Obtained CNContact from INPerson: %@
Using the following handle and contactIdentifier: %@, %@
Sender identities the device holds %@
Contact preferred accountUUIDData %@
Could not find sender identity for contact %@
[WARN] Error obtaining contact from INPerson %@: %@
Using third-party provider: %@
Setting originating UI type to =%d
Checking whether %@ is an emergency number for sender identity %@
Checking whether %@ is an emergency number for any of the following sender identities %@
No sender identities found on provider %@
Emergency or whitelisted number detected; updating dial request with emergency sender identity %@
[WARN] Could not create CNPhoneNumber from personHandle.value with phone number type: %@
[WARN] INPersonHandle has no type, attempting to infer from value %@
[WARN] Could not create CNPhoneNumber from personHandle.value with unknown type: %@
[WARN] Could not infer INPersonHandleType for person %@
Found %ld contacts matching INPerson, using %@
[WARN] Could not create contact search predicate for INPerson: %@
Call was emergency, but handle %@ is not considered to be an emergency handle. Setting redial dialType to normal.
[WARN] ZOMBIE FETCH %@ did receive results but current search is %@
Initializing TUCallHistoryControllerXPCClient
Handling %s by setting up XPC connection for CallHistoryController
Registering TUCallHistoryControllerXPCClient %p with async server %p
Error notifying CSD of deleted recent calls: %@ error: %@
Error notifying CSD of all call history deleted error: %@
Server disconnected.
Error updating outgoing local participant UUID: %@
Error registering stream token: %@
Error unregistering stream token: %@
Error starting request: %@
Error ending request: %@
Error registering moments connection: %@
Registered moments connection
Found default to enable LivePhotoXPCService - using new moments stack
Did not find default to enable LivePhotoXPCService - using old moments stack
Moments XPC connection invalidated (client side)
Moments XPC connection interrupted (client side)
[WARN] Timed out waiting for ICFCallProviderShouldAllowIncomingCall(). Defaulting to allowCall=YES, fromBlockList=NO
Initializing TUCallCenter %@
[WARN] Device does not support multiway
Initialized TUCallCenter %@
for %@
Fetching current calls
isVideoUpgrade: %d, allowVoiceWithData: %d, nonTelephonyCallExists: %d, telephonyBasebandCallExists: %d, dialRequest.provider.isTelephonyProvider: %d
isOutgoingCallSOS: %d outgoingCallCreatesMultipleSendingCalls: %d outgoingCallBreaksCallGroupLimit: %d outgoingCallCreatesMultipleVoicemailCalls: %d outgoingCallMixesVoiceWithData: %d emergencyCallExists: %d
relayCallingAvailability: %d isProviderAvailable: %d isRelayAllowed: %d isEmergency: %d supportsBasebandCalling: %d
performDial: %d useRelay: %d
isDialRequestValid: %d existingCallsAllowOutgoingCall: %d isCallingAvailable: %d
Dial attempt is returning a nil call
for dial request %@
Dial request with normal type appears to contain an MMI/USSD code: %@
Upgrading dialRequest to joinRequest with expanseProvider since it is a 1:1 FTA %@
[WARN] Cannot satisfy dial request. Returning nil call
interaction: %@
sendFieldModeDigits: %@ for provider: %@
answerOrJoinCall: %@
Not joining call since call is disconnecting/disconnected
call: %@ sourceIdentifier: %@
call: %@ sourceIdentifier: %@ wantsHoldMusic: %d
call: %@
answerRequest: %@ - Current calls are %@
We are asked to answer with bluetooth route for a video call - Ignoring to answer %@
TUOpenURLWithCompletion result: %@, error: %@
Encountered error while opening answer URL: %@ for call: %@
Another ringing call exists while we are trying to answer this call. Declining the other ringing call: %@
Overriding answer behavior to video upgrade
[WARN] No call found to answer for uniqueProxyIdentifier %@
call: %@ - Current calls are %@
Failing call: %@ to upgrade
- Current calls are %@
call: %@ otherCall: %@
Calls %@ not allowed to disconnect
call: %@ reason: %d - Current calls are %@
[WARN] Ignoring disconnectCall request because provided call was nil
Proceeding to disconnect all calls
Forwarding headset button press to MediaRemote because an activity session is controlling media playback
current calls are %@
userInfo: %@
sourceIdentifier: %@ - Current calls are %@
destination: %@ - Current calls are %@
Found route matching rapportMediaSystemIdentifier="%@", route=%@
Found route matching rapportEffectiveIdentifier="%@", route=%@
[WARN] Could not find any routes matching rapportMediaSystemIdentifier %@ or rapportEffectiveIdentifier %@ among availableRoutes %@, attempting to pick route when available...
Handing off conversation to this device using %@
Cannot continue handoff as could not find conversation with active handoff eligibility, or a conversation was already in non-waiting state. All conversations: %@
joinConversationWithConversationRequest - request: %@
Not joining conversation because Screen Time has restricted this join request
Found a matching call with staging area for join request: %@
Conversation provider does not support video, setting wantsStagingArea to NO
Bypassing checks for remote members, join request has conversation link: %@
Join request is asking to join a link that matches the currently-joined conversation, proceeding back to that conversation: %@
No remote members found for join request
Cannot launch join request, another sending call already exists
Identical call for this request exists and is ringing, answering it
Identical call for this request exists and isn't ringing, not creating a new call
for call %@
TUCallCenter shouldSuppressInCallStatusBar: %@
TUCallCenter shouldAllowRingingCallStatusIndicator: %@
sendUserScoreToRTCReporting: NULL UUID
TUCallCenter: sendUserScoreToRTCReporting: %@ for score: %d
URL is not a file system URL: %@
URL resource is not reachable: %@
Could not get file system representation for URL: %@
Client sandbox does not have access to the given file! (Error %i: %s)
Manually launching Expanse app with bundleIdentifier: %@ for activity session: %@ with activity identifier: %@
Application for activity session is not installed with bundleIdentifier: %@; error: %{public}@
Failed to open activity session with bundleIdentifier: %@; error: %{public}@
Failed to launch activity session: %@ with bundle identifier: %@
Failed to determine whether digits %@ are an emergency number due to error %@ for sender identity UUID %@.
Failed to determine whether digits %@ are a whitelisted emergency number due to error %@ for sender identity UUID %@.
Could not determine whether emergency callback mode warning should be presented due to error %@ for sender identity UUID %@.
Retrieving incoming pending conversations failed with error %@
Retrieving pseudonyms failed with error %@
Retrieving activated conversation links failed with error %@
Failed to fetch sharePlayAvailable error: %@
Failed to fetch screenSharingAvailable error: %@
Error updating remote members: %@
Error updating messages group name: %@
Error setting grid display mode: %@
Error updating messages group photo: %@
Error updating activity: %@
Error leaving activity: %@
Error ending activity: %@
Error letting CSD know airplay state for activity session: %@
Error presenting dismissal alert for activitySession: %@ on conversation: %@
Error setting activity authorization: (%d) for bundle identifier %@ with error: %@
Error setting auto expanse enabled with error: %@
joinConversationWithRequest error: %@
leaveConversationWithUUID error: %@
Error launching application for activitySession UUID: %@ with error: %@
LaunchApplication error: %@
Error buzzing member: %@
Error kicking member: %@
Error setting downlink muted: (%d) for remote participants in conversation: %@ with error: %@
Error setting audio enabled: (%d) for remote participant with identifier: %llu in conversation %@ with error: %@
Error setting video enabled: (%d) for remote participant with identifier: %llu in conversation %@ with error: %@
Failed to get latest remote screen share attributes with error: %@
Error requesting refreshActiveConversations: %@
Error in retrieving active links: %@
Error in generating link (for conversation): %@
Error in generating link (with invited member handles): %@
Error in adding invited members to link: %@
Error in invalidating link: %@
Error in renewing link to new expiration date: %@
Error in checking the validity of the link: %@
Error in obtaining an inactive pre-prepared link: %@
Error in activating a pre-prepared link: %@
Error in setting link name: %@
Error in scheduling a sync for activated conversation links: %@
Error in getting link sync state: %@
Error in approving pending member waiting to be let-in: %@
Error: %@ in setting screen enabled for conversationWithUUID: %@
Error in rejecting pending member waiting to be let-in: %@
Error in setting ignore let me in requests: %@
Error fetching upcoming notice: %@
Error in activating notice with actionURL %@ bundleIdentifier %@
Error in dismissing notice with UUID %@
Error setting presentation context: %@
Error setting messages group providing support: %@
Error getting messages group details: %@
[WARN] Bad state received when trying to get host conversation status: %lu
Error requesting initial activityAuthorizedBundleIdentifiers: %@
Host has no conversations
conversationsByGroupUUID keys: %@
conversationUpdatedMessagesGroupPhoto: %@
updateActivatedConversationLinks: %@
receivedTrackedPendingMember: %@ forConversationLink: %@
screenSharingChangedForParticipant: %llu
remoteScreenShareAttributesChanged: %@ isLocallySharing: %@
remoteScreenShareEndedWithReason: %@
sharePlayAvailable changed to: %d
screenSharingAvailable changed to: %d
addedMembersLocally: %@
buzzedMember: %@
App launch state %@ for %@
updateActivityAuthorizedBundleIdentifiers: %@
Setting audio/video mode failed with error %@
Registering messagesGroupUUID failed with error %@
Could not retrieve a call provider for the specified recent call %@.
<%@ %p availability=%d supportedMediaTypes=%@>
TUCarPlayHardwareControlEventNotification
kTUCarPlayHardwareControlButtonNameKey
kTUCarPlayHardwareControlKeypadValueKey
kTUCarPlayHardwareControlButtonGreenTelephone
kTUCarPlayHardwareControlButtonWhiteTelephone
kTUCarPlayHardwareControlButtonWhiteTelephoneLongPress
kTUCarPlayHardwareControlButtonRedTelephone
kTUCarPlayHardwareControlButtonKeypad
kTUCarPlayHardwareControlButtonMute
kTUCarPlayHardwareControlButtonDelete
DeviceUsage
Headset
v8@?0
v16@?0@"NSError"8
v20@?0B8@"NSError"12
v24@?0Q8@"NSError"16
v24@?0@"NSArray"8@"NSError"16
v24@?0q8@"NSError"16
v24@?0@"NSString"8@"NSError"16
SGSuggestionsService
CoreSuggestions
v24@?0@"NSArray"8@"NSArray"16
AppCanShowSiriSuggestionsBlacklist
com.apple.suggestions
com.apple.groupactivities.placeholder
<%@ %p
 UUID=%@
 bundleIdentifier=%@
 activityIdentifier=%@
 metadata=%@
 isSupported=%d
 originator=%@
 timestamp=%@
 trustedFromHandle=%@
 fallbackApplicationName=%@
 self.isSystemActivity=%d
 self.isPlaceholderActivity=%d
 self.startWhenStaged=%d
ACTIVITY
TelephonyUtilities
B24@?0@"NSURLQueryItem"8@"NSDictionary"16
?%@=%@
&%@=%@
CXCallDirectoryManager
CallKit
@"NSString"16@?0@"NSString"8
v24@?0@"NSArray"8@?<v@?@"NSDictionary"@"NSError">16
v12@?0i8
CALL_DIRECTORY_EXTENSION_%@_LABEL_%@
v24@?0@"NSDictionary"8@"NSError"16
CXCallDirectoryManagerIdentificationEntriesChangedNotification
PNRPhoneNumberResolver
Class getPNRPhoneNumberResolverClass(void)_block_invoke
TUGeoLocationMetadataCacheDataProvider.m
Unable to find class %s
void *PhoneNumberResolverLibrary(void)
** TUAssertion failure: %@
%s can only be called from devices with [TUCallCapabilities supportsPrimaryCalling] = YES
-[TUSenderIdentityCapabilities isThumperCallingAllowedOnSecondaryDeviceWithID:]
TUSenderIdentityCapabilities.m
-[TUSenderIdentityCapabilities isThumperCallingAllowedOnDefaultPairedSecondaryDevice]
-[TUSenderIdentityCapabilities setThumperCallingAllowed:onSecondaryDeviceWithID:]
-[TUSenderIdentityCapabilities setThumperCallingAllowedOnDefaultPairedSecondaryDevice:]
v16@?0@"<TUCallCapabilitiesDelegatePrivate>"8
== TUSenderIdentityCapabilities ==
CDMA:
    supportsSimultaneousVoiceAndData: %d
Wi-Fi calling:
    supportsWiFiCalling: %d
    isWiFiCallingEnabled: %d
    isWiFiCallingCurrentlyAvailable: %d
    supportsEmergencyWiFiCalling: %d
    isEmergencyWiFiCallingCurrentlyAvailable: %d
VoLTE calling:
    supportsVoLTECalling: %d
    isVoLTECallingEnabled: %d
    isVoLTECallingCurrentlyAvailable: %d
Thumper calling:
    supportsThumperCalling: %d
    isThumperCallingAllowedForCurrentDevice: %d
    isThumperCallingEnabled: %d
    supportsThumperCallingOverCellularData: %d
    isThumperCallingCurrentlyAvailable: %d
facetime
facetime-prompt
facetime-audio
facetime-audio-prompt
noprompt
facetime-group
incallservice-open-link
system-call-controls
system-screen-sharing
launchForIncomingCall
launchForOutgoingConversation
showInCallUI
showCarPlayInCallUI
answerSourceIdentifier
showSystemCallControls
showHandoffEligibleNearby
showIncomingTransmissionNotice
updateForegroundApp
bundleIdentifier
applicationType
viewLinkDetails
joinConversationLink
pseudonym
conversationLink
link
shouldBackgroundLaunch
\+?[0-9]+
%@://%@
%@://
facetimeapp
__INVALID_PROVISIONING_URL__
 %@=%d
 %@=%@
 %@=%p
<%@ %p 
%@=%d
%@=%@
%@=%ld
activated = %d
creationDate == %@
expirationDate == %@
expirationDate > %@
groupUUID == %@
ANY invitedHandles.normalizedValue ==[c] %@
ANY invitedHandles.type = %d
ANY invitedHandles.value ==[c] %@
ANY originatorHandle.normalizedValue ==[c] %@
ANY originatorHandle.type = %d
ANY originatorHandle.value ==[c] %@
pseudonym = %@
publicKey = %@
privateKey = %@
400.0.0
 sourceVersion=%@
 isAVLessCapable=%d
TUDispatcherDidFinishBoostQualityOfServiceNotification
%s is not available for use. To create an object instance use the designated initializer.
-[TUDispatcher init]
TUDispatcher.m
TUVideoDeviceControllerInputDevicesChanged
TUVideoDeviceControllerReceivedFirstPreviewFrame
TUVideoDeviceControllerDidChangeLocalCameraUIDNotification
TUVideoDeviceControllerDidChangeLocalCameraUIDDeviceUniqueIDKey
TUVideoDeviceControllerDidStartPreview
TUVideoDeviceControllerDidStopPreview
TUVideoDeviceControllerDidPausePreview
TUVideoDeviceControllerDidStartPreviewDeviceUniqueID
TUVideoDeviceControllerDeviceDidReceiveError
TUVideoDeviceControllerDeviceDidReceiveErrorCameraID
TUVideoDeviceControllerDeviceDidReceiveErrorError
TUVideoDeviceControllerDeviceBecameAvailable
TUVideoDeviceControllerDeviceBecameAvailableDeviceUniqueID
TUVideoDeviceControllerLocalAttributesChanged
TUVideoDeviceControllerLocalAttributesChangedAspectRatio
TUVideoDeviceControllerZoomAvailable
TUVideoDeviceControllerZoomUnavailable
TUVideoDeviceControllerCameraBlurEnabledChangedNotification
TUVideoDeviceControllerIsCameraBlurEnabledKey
TUVideoDeviceControllerUserPreferredCameraChangedNotification
TUVideoDeviceControllerUserPreferredCameraUIDKey
TUVideoDeviceControllerDidGetSnapshotNotification
TUVideoDeviceControllerSnapshotDataKey
TUVideoDeviceController.m
%s is not available. Use a designated initializer instead.
-[TUVideoDeviceController init]
 devices=%@
 followSystemCameraEnabled=%d
com.apple.avfoundation.avcapturedevice.built-in_video:1
AVCaptureDeviceDiscoverySession
AVFoundation
AVCaptureDeviceTypeBuiltInTrueDepthCamera
AVMediaTypeVideo
VideoAttributes
AVConference
RECENTS
com.apple.telephonyutilities.usernotificationproviderxpcclient
com.apple.telephonyutilities.callservicesdaemon.usernotificationprovider
CPGroupActivityGenericContext
CPGroupActivityCollaborationContext
CPGroupActivityListenTogetherContext
CPGroupActivityWatchTogetherContext
CPGroupActivityWorkoutTogetherContext
CPGroupActivityScreenSharingContext
CPGroupActivityPlayTogetherContext
v12@?0I8
AudioServicesPlaySystemSoundWithOptions
AudioToolbox
 type=%@
 pullContext=%@
Unknown
Pull
Push
PointOfPlayback
ControlCenterWithActivity
ControlCenterWithoutActivity
TUNumberToDialOptionsSuppressLocalAssist
telephony
ForceInternationalAssist
enable-dial-assist
 handleType=%ld
 notificationStyles=%ld
 notificationStyles.NoNotification=%@
 notificationStyles.UserNotification=%@
 notificationStyles.IncomingCall=%@
 notificationStyles.IndefiniteCall=%@
TUVideoEffect.m
-[TUVideoEffect init]
%s: parameter '%@' cannot be nil
-[TUVideoEffect initWithName:thumbnailImage:]
name
thumbnailImage
com.apple.telephonyutilities.turepeatingactor
com.apple.siri.announce-calls.enabled
u65_flag
@"NSDictionary"8@?0
TUCallHistoryControllerDidFinishBoostNotification
TUCallHistoryControllerRecentCallsDidChangeNotification
TUCallHistoryControllerUnreadCallCountDidChangeNotification
TUCallHistoryController.m
The controller should have been initialized with sharedControllerWithCoalescingStrategy: before attempting to access the instance with the sharedController convenience method
-[TUCallHistoryController init]
%@.%@
_simpleIvarAccess
B16@?0@"TUCallProvider"8
kCallHistoryDatabaseChangedNotification
CallHistory
CHManager
kCHCoalescingStrategyRecents
kCHServiceProviderFaceTime
!(mediaType == %@ && serviceProvider == %@)
kCHLimitServiceProviderKey
kCHLimitMediaTypeKey
kCHLimitTTYTypeKey
kCHServiceProviderTelephony
kCHCoalescingStrategyCollapseIfEqual
CHRecentCall
Class getCHRecentCallClass(void)_block_invoke
void *CallHistoryLibrary(void)
addressbook://%@
TUCallCapabilitiesSupportsTelephonyCallsChangedNotification
TUCallCapabilitiesSupportsFaceTimeAudioCallsChangedNotification
TUCallCapabilitiesSupportsFaceTimeVideoCallsChangedNotification
TUCallCapabilitiesWiFiCallingChangedNotification
TUCallCapabilitiesVoLTECallingChangedNotification
TUCallCapabilitiesThumperCallingChangedNotification
TUCallCapabilitiesRelayCallingChangedNotification
TUCallCapabilitiesWiFiCallingProvisioningURLChangedNotification
TUCallCapabilitiesThumperCallingProvisioningURLChangedNotification
TUCallCapabilitiesCloudCallingDevicesChangedNotification
TUCallCapabilitiesOutgoingRelayCallerIDChangedNotification
TUCallCapabilitiesRelayCallingAvailabilityChangedNotification
TUCallCapabilitiesFaceTimeAvailabilityChangedNotification
TUCallCapabilitiesEmergencyCallbackModeChangedNotification
TUCallCapabilitiesEmergencyCallbackPossibleChangedNotification
B24@?0@"TUSenderIdentityCapabilities"8^B16
== TUCallCapabilities ==
General Support:
    supportsTelephonyCalls: %d
    supportsFaceTimeAudioCalls: %d
    supportsFaceTimeVideoCalls: %d
    canAttemptTelephonyCallsWithoutCellularConnection: %d
    canAttemptEmergencyCallsWithoutCellularConnection: %d
Primary/Secondary Device:
    supportsPrimaryCalling: %d
Call support:
    telephonyCallSupport: %d
    faceTimeAudioCallSupport: %d
    faceTimeVideoCallSupport: %d
Displaying support:
    supportsDisplayingTelephonyCalls: %d
    supportsDisplayingFaceTimeAudioCalls: %d
    supportsDisplayingFaceTimeVideoCalls: %d
Call Availability:
    isDirectTelephonyCallingCurrentlyAvailable: %d
    isDirectFaceTimeAudioCallingCurrentlyAvailable: %d
    isDirectFaceTimeVideoCallingCurrentlyAvailable: %d
System capabilities:
Secondary calling:
    accountsMatchForSecondaryCalling: %d
    accountsSupportSecondaryCalling: %d
Relay calling:
    supportsRelayingToOtherDevices: %d
    supportsRelayCalling: %d
    isRelayCallingEnabled: %d
    isRelayCallingGuaranteed: %d
    areRelayCallingFeaturesEnabled: %d
Outgoing relay calling:
    supportsTelephonyRelayCalling: %d
    supportsFaceTimeAudioRelayCalling: %d
    supportsFaceTimeVideoRelayCalling: %d
    outgoingRelayCallerID: %@
Emergency callback mode:
    isEmergencyCallbackModeEnabled: %d
    isEmergencyCallbackPossible: %d
FaceTimePhotosEnabled
-[TUMomentsController init]
TUMomentsController.m
B8@?0
Invalid parameter not satisfying: %@
provider != nil
transactionID != nil
v24@?0@"TUMomentsCapabilities"8@"NSError"16
FaceTimePhotosOptIn
IMLockdownManager
IMFoundation
com.apple.telephonyutilities.tusoundplayer
Infinite
kAudioServicesPlaySystemSoundOptionLoopKey
TUSoundPlayer.m
Failed to weak link string named %s
v16@?0@?<v@?>8
AudioServicesStopSystemSound
appleCareHandles
+18006927753
shouldSuppressMutedTalkerNotification
AVAudioClient
com.apple.facetime.audioInputChangedNotification
TUAudioDeviceController.m
-[TUAudioDeviceController init]
<%@ %p devices=%@>
kAUVoiceIOProperty_MediaPlaybackOnExternalDevice
 sessionUUID=%@
 sessionEventType=%ld
 actionURL=%@
 item=%@
 queueItemType=%ld
 identifier=%lu
 handle=%@
 muted=%d
 audioEnabled=%d
 videoEnabled=%d
 screenEnabled=%d
 momentsAvailable=%d
 streamToken=%ld
 screenToken=%ld
 captionsToken=%ld
 capabilities=%@
 audioPaused=%d
 isRemoteAudioEnabled=%d
 isRemoteVideoEnabled=%d
 isLightweight=%d
 isLocalAccountHandle=%d
 association=%@
 isGuestModeEnabled=%d
 avMode=%ld
 senderCorrelationIdentifier=%@
 remoteCameraOrientation=%ld
 localVideoContextSlotIdentifier=%ld
 remoteVideoContextSlotIdentifier=%ld
Don't call %@, call designated initializer instead.
-[TUProxyRecentCall init]
TUProxyRecentCall.m
FaceTime
kCHCallStatusMissed
 uniqueIdentifier=%@
 name=%@
 deviceType=%ld
 isA2DPRoute=%d
 isCurrentlyPicked=%d
 isDefaultRoute=%d
 isReceiver=%d
 isSpeaker=%d
 isWiredHeadphones=%d
 isWiredHeadset=%d
 isWirelessHeadset=%d
 isAirTunes=%d
 isCarAudio=%d
 isGuest=%d
 isBluetooth=%d
 isBluetoothLE=%d
 isBluetoothManaged=%d
 bluetoothEndpointType=%ld
 isInEarDetectionEnabled=%d
 isInEarDetectionSupported=%d
 isPreferred=%d
 isPreferredAndActive=%d
 identifiersOfOtherConnectedDevices=%@
 supportsRelay=%d
 isPartnerRouteRoutable=%d
 isSiblingRoutePresent=%d
 supportsSharePlay=%d
 isTipiParticipant=%d
 isTriangleParticipant=%d
 isCarKitRoute=%d
-[TUProxyAutocompleteResult init]
TUProxyAutocompleteResult.m
 identifier=%llu
 pluginName=%@
MAYBE_NICKNAME_%@
%@_AND_%@
%@_%@_AND_%@
%@_%@_%@_AND_%@_OTHER
 groupUUID=%@
 link=%@
 messagesGroupUUID=%@
 messagesGroupName=%@
 state=%ld
 hasReceivedLetMeInRequest=%ld
 letMeInRequestState=%ld
 ignoreLMIRequests=%d
 isAudioEnabled=%d
 isVideoEnabled=%d
 isVideoPaused=%d
 isScreenEnabled=%d
 isLocallyCreated=%d
 hasJoined=%d
 mode=%ld
 remoteMembers=%@
 pendingMembers=%@
 kickedMembers=%@
 rejectedMembers=%@
 otherInvitedHandles=%@
 lightweightMembers=%@
 activeRemoteParticipants=%@
 activeLightweightParticipants=%@
 report=%@
 activities=%@
 stagedActivitySession=%@
 oneToOneModeEnabled=%d
 backedByGroupSession=%d
 provider=%@
 virtualParticipants=%@
 invitationPreferences=%@
 localMember=%@
 localParticipantIdentifier=%llu
 localParticipantAssociation=%@
 isOneToOneHandoffOngoing=%d
 handoffEligibility=%@
 isFromStorage=%d
 isAnyOtherAccountDeviceActive=%d
 mirageEnabled=%d
 supportedMediaTypes=%@
 systemActivitySessions=%@
IMSPIGetGroupPhotosForChatsWithGroupIDs
void *IMCoreLibrary(void)
TUConversation.m
NSDictionary *LocalIMSPIGetGroupPhotosForChatsWithGroupIDs(NSArray *__strong)
com.apple.iphone
IPHONE
com.apple.ipad
IPAD
com.apple.ipod
IPOD
com.apple.mac
 isEligible=%d
 isUplinkMuted=%d
 isSendingVideo=%d
 conversationGroupUUID=%@
 originatingDeviceType=%@
v32@?0@"TUCall"8Q16^B24
B16@?0@"TUCall"8
q24@?0@"TUCall"8@"TUCall"16
v24@?0@"TUCall"8^B16
 deviceFamily=%ld
 style=%ld
 displayScale=%@
 scaleFactor=%@
 displayID=%@
 frameRate=%@
 windowed=%d
 windowUUID=%@
 originalResolution=%@
FTDeviceSupport
FTServices
TUNeighborhoodActivityConduitErrorDomain
Conversation Not Active
The selected conversation is not active on the target device.
Conversation Not Found
The requested conversation could not be found.
Invalid Arguments
One or more input arguments were invalid.
Internal Status Error
The handoff system was in an unexpected state.
Operation Timed Out
The operation did not complete in a timely manner.
Not Yet Implemented
This operation has not yet been implemented. Please check back later.
Device Not Found
The requested device could not be located at this time.
Target Not Split Paired
The target device is not in a split session initiated by this device.
No Split Session Approver
There is no registered delegate that can approve split sessions.
Client Not Entitled
The XPC client does not have the requisite entitlement.
Approval Not Implemented
The XPC client has not implemented split-session approval.
Activity Not Continuable
The requested activity cannot be continued on tvOS.
No Caller ID
No caller ID is available for this device.
No Public Token
No public token is available for this device.
Pseudonym Provisioning Timeout
A timeout occurred when provisioning a pseudonym for this device.
Pseudonym Provisioning Failure
An error occurred when provisioning a pseudonym for this device.
Join In Progress
A join request is already in progress.
Canceled
The operation was canceled by the user.
Device Not Paired
The operation could not be completed because the target device is not paired.
Split Session Already Active
The device is already in a split session and cannot join another.
Apple TV is incapable of handoff
This Apple TV is not capable of shareplay with this iOS device (perhaps version is too old).
<nil>
TUNeighborhoodActivityConduit
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
nearbyTVs
currentSplitSessionTV
approvalDelegate
plistRepresentation
com.apple.faceTime.neighborhoodActivityConduit.defaultQueue
activeSplitSessionTV
v16@?0@"<TUNeighborhoodActivityConduitDelegate>"8
v24@?0@"NSSet"8@"NSError"16
v24@?0@"TUNearbyDeviceHandle"8@"NSError"16
TUAudioSystemActiveCategoryVolumeChangedNotification
TUAudioSystemUplinkMuteStatusChangedNotification
TUAudioSystemDownlinkMuteStatusChangedNotification
TUAudioSystemTTYChangedNotification
TUAudioSystemAudioPickableRoutesChanged
TUAudioSystemCategoryKey
TUAudioSystemModeKey
com.apple.TelephonyUtilities.TUAudioSystemController.UplinkMutedQueue
com.apple.TelephonyUtilities.TUAudioSystemController.DownlinkMutedQueue
com.apple.TelephonyUtilities.TUAudioSystemController.TTYQueue
com.apple.TelephonyUtilities.TUAudioSystemController.PickableRoutesQueue
AVAudioSessionMediaServicesWereResetNotification
AVAudioSession
AVSystemController_PostInterruptionEndedNotificationKey_AudioSessionID
MediaExperience
AVSystemController_PostInterruptionEndedNotificationKey_IsResumable
@8@?0
TTYCall
@"NSArray"8@?0
PhoneCall
Speaker
CarAudioOutput
kMXSessionAudioCategory_PlayAndRecord_NoBluetooth
kMXSessionAudioMode_VoiceChat
kMXSessionAudioMode_VideoChat
kMXSessionAudioMode_RemoteVoiceChat
kMXSessionAudioCategory_Voicemail
AirTunes
v16@?0@"NSArray"8
Voicemail
AVAudioSessionCategoryPhoneCall
AVSystemController
Class getAVSystemControllerClass(void)_block_invoke
TUAudioSystemController.m
void *MediaExperienceLibrary(void)
NSString *getAVSystemController_PickableRoutesDidChangeNotification(void)
AVSystemController_PickableRoutesDidChangeNotification
NSString *getAVSystemController_SystemVolumeDidChangeNotification(void)
AVSystemController_SystemVolumeDidChangeNotification
NSString *getAVSystemController_UplinkMuteDidChangeNotification(void)
AVSystemController_UplinkMuteDidChangeNotification
NSString *getAVSystemController_SubscribeToNotificationsAttribute(void)
AVSystemController_SubscribeToNotificationsAttribute
NSString *getAVSystemController_PostInterruptionEndedNotification(void)
AVSystemController_PostInterruptionEndedNotification
NSString *getAVSystemController_UplinkMuteAttribute(void)
AVSystemController_UplinkMuteAttribute
NSString *getAVSystemController_DownlinkMuteAttribute(void)
AVSystemController_DownlinkMuteAttribute
NSString *getAVSystemController_PickedRouteAttribute(void)
AVSystemController_PickedRouteAttribute
NSString *getAVSystemController_PickableRoutesAttribute(void)
AVSystemController_PickableRoutesAttribute
AVAudioSessionCategory getAVAudioSessionCategoryPhoneCall(void)
void *AudioSessionLibrary(void)
NSString *getAVSystemController_RouteDescriptionKey_RouteCurrentlyPicked(void)
AVSystemController_RouteDescriptionKey_RouteCurrentlyPicked
NSString *getAVSystemController_RouteDescriptionKey_RouteUID(void)
AVSystemController_RouteDescriptionKey_RouteUID
NSString *getAVSystemController_RouteDescriptionKey_AVAudioRouteName(void)
AVSystemController_RouteDescriptionKey_AVAudioRouteName
NSString *getAVSystemController_SomeSessionIsActiveThatPrefersNoInterruptionsByRingtonesAndAlertsAttribute(void)
AVSystemController_SomeSessionIsActiveThatPrefersNoInterruptionsByRingtonesAndAlertsAttribute
TUCallCapabilitiesThumperPinAlertNotification
pinCode
fromAlias
TUCallCapabilitiesThumperPinAlertCompletedNotification
success
cancelled
ThumperAvailableKey
com.apple.telephonyutilities.callcapabilitiesxpcclient
com.apple.telephonyutilities.callservicesdaemon.connectionrequest
com.apple.telephonyutilities.callservicesdaemon.callcapabilities
v16@?0@"TUCallCapabilitiesState"8
%@=%llu
 contacts=%@
 localizedName=%@
 companyName=%@
 contactLabel=%@
 legacyAddressBookIdentifier=%d
com.apple.mobilephone
com.apple.telephonyutilities.dialassist
LogDialAssist
TUDialAssistUserSettingChanged
com.apple.TelephonyUtilities.CallHistoryMarkedReadBulletinBoardMessage
CallUUIDs
B16@?0@"TUContactsDataProviderFetchRequest"8
q24@?0@"NSString"8@"NSString"16
UNKNOWN
%@_%@_%@_AND_ONE_OTHER
%@_%@_%@_AND_%@_OTHERS
EMERGENCY_SERVICES
BLOCKED
%@_%@_OR_%@_%@
%@_OR_%@_%@
%@_OR_%@
%@_OR_%@_OTHERS
%@_AND_%@_OTHERS
INJoinCallIntent
joinRequest
dialRequest
Call History Queue
Intents
 %@=%ld
 callerID=%@
 shouldSuppressInCallUI=%d
 wantsStagingArea=%d
 showUIPrompt=%d
 sendLetMeInRequest=%d
 isJoiningConversationWithLink=%d
 conversationLink=%@
 activity=%@
 audioSourceIdentifier=%@
 participantAssociation=%@
originatingUIType=%d
%ld,%ld
showUIPrompt
INPerson
INInteraction
RTTSettings
RTTUtilities
RTTTelephonyUtilities
TUMomentDescriptor.m
%s is unavailable
-[TUMomentDescriptor init]
photos://asset?identifier=%@&albumname=camera-roll
 pAI=%@
TUAnswerRequest.m
%s is unavailable, use a designated initializer instead
-[TUAnswerRequest init]
 uniqueProxyIdentifier=%@
 sourceIdentifier=%@
 wantsHoldMusic=%d
 pauseVideoToStart=%d
 downgradeToAudio=%d
 behavior=%ld
 localLandscapeAspectRatio=%@
 localPortraitAspectRatio=%@
 dateAnswered=%@
 allowBluetoothAnswerWithoutDowngrade=%d
 endpointIDSDestination=%@
 endpointRapportMediaSystemIdentifier=%@
 endpointRapportEffectiveIdentifier=%@
TURemoteVideoSubLayer
TURemoteVideoClient.m
-[TURemoteVideoClient init]
%@-%p
CATransaction
Class getCATransactionClass(void)_block_invoke
void *QuartzCoreLibrary(void)
CALayer
Class getCALayerClass(void)_block_invoke
CATransform3D _CATransform3DMakeAffineTransform(CGAffineTransform)
CATransform3DMakeAffineTransform
CGAffineTransform _CGAffineTransformMakeRotation(CGFloat)
CGAffineTransformMakeRotation
void *CoreGraphicsLibrary(void)
NSString *getkCAGravityResizeAspectFill(void)
kCAGravityResizeAspectFill
CAContext
Class getCAContextClass(void)_block_invoke
76,8194
76,8207
76,8206
76,8212
76,8198
76,8197
76,8208
76,8195
76,8201
76,8203
76,8204
76,8205
76,8202
76,8209
76,8210
76,8211
 bluetoothProductIdentifier=%@
Receiver
BluetoothLEOutput
Headphone
TUAudioRoute.m
NSString *getAVSystemController_RouteDescriptionKey_RouteName(void)
AVSystemController_RouteDescriptionKey_RouteName
NSString *getAVSystemController_RouteDescriptionKey_IsBTRoute(void)
AVSystemController_RouteDescriptionKey_IsBTRoute
NSString *getAVSystemController_RouteDescriptionKey_BTDetails_IsBTManaged(void)
AVSystemController_RouteDescriptionKey_BTDetails_IsBTManaged
NSString *getAVSystemController_RouteDescriptionKey_BTDetails_EndpointType(void)
AVSystemController_RouteDescriptionKey_BTDetails_EndpointType
NSString *getAVSystemController_RouteDescriptionKey_BTDetails_EndpointType_Headphones(void)
AVSystemController_RouteDescriptionKey_BTDetails_EndpointType_Headphones
NSString *getAVSystemController_RouteDescriptionKey_BTDetails_EndpointType_Vehicle(void)
AVSystemController_RouteDescriptionKey_BTDetails_EndpointType_Vehicle
NSString *getAVSystemController_RouteDescriptionKey_BTDetails_EndpointType_Speakers(void)
AVSystemController_RouteDescriptionKey_BTDetails_EndpointType_Speakers
NSString *getAVSystemController_RouteDescriptionKey_BTDetails_EndpointType_TTY(void)
AVSystemController_RouteDescriptionKey_BTDetails_EndpointType_TTY
NSString *getAVSystemController_RouteDescriptionKey_BTDetails_IsA2DPRoute(void)
AVSystemController_RouteDescriptionKey_BTDetails_IsA2DPRoute
NSString *getAVSystemController_RouteDescriptionKey_PreferredExternalRouteDetails_InEarDetectEnabled(void)
AVSystemController_RouteDescriptionKey_PreferredExternalRouteDetails_InEarDetectEnabled
NSString *getAVSystemController_RouteDescriptionKey_PreferredExternalRouteDetails_InEarDetectSupported(void)
AVSystemController_RouteDescriptionKey_PreferredExternalRouteDetails_InEarDetectSupported
NSString *getAVSystemController_HeadphoneJackHasInputAttribute(void)
AVSystemController_HeadphoneJackHasInputAttribute
NSString *getAVSystemController_PickableRouteType_Wireless(void)
AVSystemController_PickableRouteType_Wireless
NSString *getAVSystemController_PickableRouteType_Default(void)
AVSystemController_PickableRouteType_Default
NSString *getAVSystemController_RouteDescriptionKey_IsPreferredExternalRoute(void)
AVSystemController_RouteDescriptionKey_IsPreferredExternalRoute
NSString *getAVSystemController_RouteDescriptionKey_PreferredExternalRouteDetails_IsActive(void)
AVSystemController_RouteDescriptionKey_PreferredExternalRouteDetails_IsActive
NSString *getAVSystemController_RouteDescriptionKey_BTDetails_PartnerRouteRoutable(void)
AVSystemController_RouteDescriptionKey_BTDetails_PartnerRouteRoutable
NSString *getAVSystemController_RouteDescriptionKey_BTDetails_SiblingRoutePresent(void)
AVSystemController_RouteDescriptionKey_BTDetails_SiblingRoutePresent
NSString *getAVSystemController_RouteDescriptionKey_SupportsSharePlay(void)
AVSystemController_RouteDescriptionKey_SupportsSharePlay
NSString *getAVSystemController_RouteDescriptionKey_BTDetails_ProductID(void)
AVSystemController_RouteDescriptionKey_BTDetails_ProductID
NSString *getAVSystemController_HeadphoneJackIsConnectedAttribute(void)
AVSystemController_HeadphoneJackIsConnectedAttribute
NSString *getAVSystemController_RouteDescriptionKey_RouteType(void)
AVSystemController_RouteDescriptionKey_RouteType
NSString *getAVSystemController_RouteDescriptionKey_OtherDevicesConnected(void)
AVSystemController_RouteDescriptionKey_OtherDevicesConnected
NSString *getAVSystemController_RouteDescriptionKey_OtherDevicesConnected_UniqueID(void)
AVSystemController_RouteDescriptionKey_OtherDevicesConnected_UniqueID
com.apple.telephonyutilities.callprovidermanagerxpcclient
Error communicating with callservicesd
com.apple.telephonyutilities.callservicesdaemon.callprovidermanager
v32@?0@"NSDictionary"8@"NSDictionary"16@"NSDictionary"24
%@: %@
conversationOneToOneModeEnabled
conversationHandoffEnabled
vouchingEnabled
addTVAsActiveParticipant
groupFacetimeAsAServiceEnabled
filterGFTaaSCalls
uNNotificationsMacOSEnabled
offrampEnabled
expanseEnabled
sharePlayDisabled
sharePlayDiscoverabilityEnabled
AirPlay
SharePlayWithAirPlayVideo
TVApp
expanse
Music
potluck
aTVHandoff
ftvSpatialAudioEnabled
NonInterruptingCalls
ScreenSharingSupport
livePhotoXPCService
UserScoreFeedbackEnabled
individualAudioVideoToggleEnabled
qrPluginEncryptionEnabled
AudioDSP
Expanse_BT_HFP
TapToRadarBannerEnabled
Contacts
suggestions_reload_for_selected_recipients
EnableGFTDowngradeToOneToOne
UPlusNDowngrade
BluetoothFeatures
RingtoneOverA2DP
mochiEnabled
unreliableMessengerEnabled
ScreenCaptureKit
expanseAdoption
AVLessSharePlay
Wombat
ContinuityCapture
avcCameraSelectionEnabled
greenTeaLinksEnabled
screenSharingCALayerHostMode
screenSharingDeskViewEnabled
screenSharingDeskViewSqueegeeEnabled
GameCenter
shareplay_integration
TelephonyUtilitiesErrorDomain
com.apple.TelephonyUtilities.FTCServiceAvailabilityListenerID
TUUserActivityTypeJoinConversationRequest
TUUserActivityJoinConversationRequestUserInfoKey
LDMGlobalEnabled
DIAL_%@_LONG_FORMAT
DIAL_%@_SHORT_FORMAT
%@_MAC
%@_IPHONE
%@_IPOD
%@_IPAD
%@_WLAN
%@_WIFI
%@_IOS
com.apple.TelephonyUtilities
CTServerConnectionRef  _Nonnull TUCTServerConnection()_block_invoke
TUUtilities.m
Unable to get CT server connection
PHInCallRemoteAlertShellViewController
com.apple.mobilephone.callhandoff
com.apple.mobilephone.apphistory
MKLocalSearchRequest
MapKit
MKLocalSearch
v24@?0@"MKLocalSearchResponse"8@"NSError"16
com.apple.telephonyutilities.mapsearch.callbackqueue
LSApplicationWorkspace
MobileCoreService
MobileCoreServices
FBSOpenApplicationOptionKeyUnlockDevice
FrontBoardServices
FBSOpenApplicationOptionKeyPromptUnlockDevice
SBSInCallOpenApplicationOptionKeyPromptUnlockUI
NFD; Any-Latin; [:Mn:] Remove; Latin-ASCII; [^[:Letter:][:Nd:][+*#,;]] Remove; NFC
Name
Object
UserInfo
Telephony
FaceTimeAudio
FaceTimeVideo
Idle
Active
Held
Sending
Ringing
Disconnecting
Disconnected
multiwayMaxConcurrentStreams
enableLocalVideoRecording
SBAllowNotificationsDuringScreenSharing
FTServerBag
qr-member-block-timeout
disable-conversation-links
CoreServices
%@#%@
JwLB44/jEB8aFDpXQ16Tuw
TUConversationProviderIdentifierKey
com.apple.private.expanse
com.apple.telephonyutilities.callservicesd.FaceTimeProvider
com.apple.private.unknown
<%@ %p identifier: %@ providerConfiguration: %@>
https
facetime.apple.com/join
TUConversationLink.m
pseudonym != nil && pseudonym.destinationIdIsPseudonym
publicKey != nil && publicKey.length >= 1
pseud:
%@%@
 pseudonym=%@
 publicKey=%@
 URL=%@
 linkName=%@
 linkLifetimeScope=%ld
publicKey
groupUUID
originatorHandle
 hold=%d
 grp=%d
 ungrp=%d
 DTMF=%d
 uMPS=%d
 aC=%d
 sTV=%d
session
twoway
multiwayconference
telephonyutilities
com.apple.telephonyutilites.facetime
com.apple.telephonyutilites.phone
com.apple.telephonyutilities.rtcreporting
callUUID
endReason
incoming
connected
currentlyGrouped
relay
isConversation
fromLink
durationMs
setupTimeMs
connectionTimeMs
relativeStart
relativeEnd
bucketedDuration
com.apple.calls.telephonyutilities
Default
Oversized
com.apple.calls.telephonyutilities.logging
NeighborhoodActivityCore
com.apple.greentea
calls
 activitySessions=%@
 initiator=%@
 localParticipantIdentifier=%@
 virtualParticipantConfig=%@
 unreliableMessengerConfig=%@
TULabeledHandle.m
-[TULabeledHandle init]
<%@ %p handle=%@ label=%@>
abuid
wasAssisted
originatingUI
suppressAssist
forceAssist
isVoicemail
telemergencycall
telprompt
telSOS
%@://%@?%@=%@
&%@=%d
&%@=1
%@://?%@=1
callto
cellular-data
%@:%@
*5005*78283#
_TelephonyUtilities_telURLQueryParameters
 type=%zd
 isPrimary=%@
 avcIdentifier=%@
%@: %li sections, %li total results
Section %@ (%li)
groupType=%d
B32@?0@"<TUSearchResult>"8Q16^B24
com.apple.TelephonyUtilities.TUReplyWithMessageStoreChanged
TUReplyWithMessageStoreReplyArray
CANNED_REPLY_SENDING_%d
CANNED_REPLY_%d
CANNED_REPLY_ACTION_SHEET_OPTION_FORMAT_%@
qrPluginCertValidationEnabled
qrPluginCertHostname
qrPluginCertLeafMarkerOID
 connectionRetryIntervalMillis=%lu
 connectionMaxAttempts=%lu
 rpcStreamRetryIntervalMillis=%lu
 rpcStreamRetryIntervalMaxAttempts=%lu
 serverCertValidationEnabled=%s
 serverCertHostnameOverride=%@
 serverCertLeafMarkerOIDOverride=%@
 participantIdentifer=%llu
 videoQuality=%lu
 visibility=%lu
 prominence=%lu
 spatialPosition=(%f, %f, %f, %f)
 isInCanvas=%d
/System/Library/PrivateFrameworks/TelephonyUtilities.framework/callservicesd
tcc_identity_t tu_tcc_identity_create(tcc_identity_type_t, const char *)
NSBundle+TelephonyUtilities.m
tcc_identity_create
void *TCCLibrary(void)
v32@?0@"<TUDelegate>"8@"NSObject<OS_dispatch_queue>"16^B24
NPSManager
Class getNPSManagerClass(void)_block_invoke
TUUserConfiguration.m
void *NanoPreferencesSyncLibrary(void)
<%@ %p calls=%@>
com.apple.telephonyutilities.callservicesdaemon.callstatecontroller
v24@?0@"TUCall"8@"NSArray"16
Local daemon delegate must pass in a completion block
TUCallServicesInterface.m
non-nil
v16@?0@"NSDictionary"8
v12@?0B8
v16@?0Q8
<%@: %@>
<%@ %p %@=%@>
 screenSharingAvailable=%d
 gondolaCallingAvailable=%d
 mirageCallingAvailable=%d
 gftDowngradeToOneToOneAvailable=%d
 uPlusNDowngradeAvailable=%d
 sharePlayProtocolVersion=%@
TUIDSLookupManagerStatusChangedNotification
com.apple.telephonyutilities.callservicesd.tuidslookupmanager
@"<TUIDSBatchIDQueryController>"32@?0@"NSString"8@"<IDSBatchIDQueryControllerDelegate>"16@"NSObject<OS_dispatch_queue>"24
v32@?0@"NSString"8@"NSNumber"16^B24
v32@?0@"NSString"8@"NSArray"16^B24
v16@?0@"NSSet"8
com.apple.telephonyutilities.searchcontroller
v20@?0@"<TUSearchModuleProtocol>"8B16
<%@ %p provisioningStatus=%d provisioningURL=%@ provisioningPostData=%p canEnable=%d isEnabled=%d>
provisioningStatus
provisioningURL
provisioningPostData
canEnable
enabled
roamingEnabled
canEnableRoaming
com.apple.telephonyutilities.reportingcontrollerxpcclient
com.apple.telephonyutilities.callservicesdaemon.reportingcontroller
com.apple.telephonyservices.neighborhoodactivityconduitxpcclient
com.apple.telephonyutilities.callservicesdaemon.neighborhood-activities
%@_%@
%llu
<%@ %p category=%@ mode=%@>
AVCAudioPowerSpectrumMeter
<%@ %p soundType=%lu sound=%@ iterations=%@ pauseDuration=%f>
TUSandboxExtendedURL.m
-[TUSandboxExtendedURL init]
<%@ %p URL=%@ sandboxExtensionClass=%@ sandboxExtensionToken=%@ sandboxExtensionHandle=%lld>
<%@ %p>
Device Capabilities:
    supportsPrimaryCalling: %@
    supportsBasebandCalling: %@
    supportsCellularData: %@
    supportsDisplayingTelephonyCalls: %@
    supportsDisplayingFaceTimeAudioCalls: %@
    supportsDisplayingFaceTimeVideoCalls: %@
Calling Availability:
    isFaceTimeAudioAvailable: %@
    isFaceTimeVideoAvailable: %@
CT Capability Validity:
    areCTCapabilitiesValid: %@
    accountsMatchForSecondaryCalling: %@
    accountsSupportSecondaryCalling: %@
    supportsRelayCalling: %@
    areRelayCallingFeaturesEnabled: %@
    isRelayCallingEnabled: %@
    relayCallingAvailability: %d
    relayCallingDisabledForDeviceID: %@
    supportsTelephonyRelayCalling: %@
    supportsFaceTimeAudioRelayCalling: %@
    supportsFaceTimeVideoRelayCalling: %@
Devices:
    cloudCallingDevices: %@
Emergency callback:
    emergencyCallbackModeEnabled: %@
    emergencyCallbackPossible: %@
Sender Identity capabilities:
    senderIdentityCapabilitiesStateByUUID: %@
supportsPrimaryCalling
supportsBasebandCalling
supportsCellularData
supportsDisplayingTelephonyCalls
supportsDisplayingFaceTimeAudioCalls
supportsDisplayingFaceTimeVideoCalls
faceTimeAudioAvailable
faceTimeVideoAvailable
ctCapabilitiesValid
supportsRelayCalling
accountsMatchForSecondaryCalling
accountsSupportSecondaryCalling
relayCallingFeaturesEnabled
relayCallingEnabled
relayCallingAvailability
relayCallingDisabledForDeviceID
supportsTelephonyRelayCalling
supportsFaceTimeAudioRelayCalling
supportsFaceTimeVideoRelayCalling
outgoingRelayCallerID
cloudCallingDevices
emergencyCallbackModeEnabled
emergencyCallbackPossible
TUCallGroup.m
calls.count > 0
call != nil
Could not determine display name for TUCallGroup with an empty list of calls: %@
TUCallProviderManagerProvidersChangedNotification
com.apple.coretelephony
com.apple.telephonyutilities.callprovidermanager
<%@ %p providers=%@>
com.apple.telephonyutilities.callservicesd.TinCan
Cannot launch app for invalid dial request: %@
TUUserNotificationMissedCallHandleKey
MissedCallDestinationKey
MissedCallServiceKey
TUUserNotificationMissedCallUUIDkey
TUUserNotificationConversationUUIDKey
TUUserNotificationConversationRemoteMembersKey
TUUserNotificationConversationIdentifierKey
TUUserNotificationConversationGroupIdentifierKey
TUUserNotificationActivitySessionIdentifierKey
TUUserNotificationConversationPendingMemberKey
TUUserNotificationConversationLinkKey
TUUserNotificationPendingMemberNotificationTypeKey
TUUserNotificationSharePlayBundleIDKey
TUUserNotificationSharePlayCallbackURLKey
TUUserNotificationActivitySessionGetAppKey
TUUserNotificationConversationHandoffDynamicIdentifierKey
com.apple.telephonyutilities.TUMetadataCacheDidFinishUpdatingNotification
: <empty>
IDSCopyIDForTemporaryID
IDSCopyIDForPseudonymID
IDSCopyIDForPhoneNumber
IDSCopyIDForEmailAddress
-[TUParticipant initWithName:]
CGRectEqualToRect
CoreGraphics
deferredNotificationBlocks was not nil! This means that somehow calls to deferNotificationsUntilAfterPerformingBlock have been nested
TUCallNotificationManager.m
 unsafeDataHash=%tu
 encryptedDataHash=%tu
v32@?0@8Q16^B24
B32@?0@8Q16^B24
groupactivityimgpreview
 context=%@
 fallbackURL=%@
 invitationURL=%@
 supportsContinuationOnTV=%d
 title=%@
 subTitle=%@
 preferredBroadcastingAttributes=%ld
 imageFileURL=%@
 imageData=%@
 sceneAssociationBehavior=%@
com.apple.telephonyutilities.TUReplyWithMessageBulletinBoardMessage
Recipient
Destination
PersonID
Message
com.apple.telephonyutilities.TURemindMeLaterBulletinBoardMessage
Caller
IsWhenILeave
ReminderIdentifier
CallBackString
WhenILeaveString
LocationText
BBDataProviderSendMessage
BulletinBoard
com.apple.MobileSMS
com.apple.reminders
com.apple.telephonyutilities.metadatacache.mapsQueue
allowContactsOnly
silenceUnknownFaceTimeCallers
maxJunkLevel
TUConversationManagerMessagesErrorDomain
com.apple.telephonyutilities.conversationmanager
TUConversationManager.m
requestScreenShareFromMembers is deprecated and should not be used
ignore
allow
gft-legacy-upgrade-enabled
qr-max-participants
DeviceClassNumber
ChipID
No messages group details provider available
AVCScreenCapture
<%@ %p name=%@ modelIdentifier=%@ uniqueID=%@ linkedUserURIs=%@ isDefaultPairedDevice=%d supportsRestrictingSecondaryCalling=%d>
modelIdentifier
uniqueID
linkedUserURIs
defaultPairedDevice
supportsRestrictingSecondaryCalling
com.apple.TelephonyUtilities.TUPrivacyManager.RulesChanged
CMFItemCopyPhoneNumber for item with type CMFItemTypePhone returned nothing!
TUPrivacyManager.m
CMFItemCopyEmailAddress for item with type CMFItemTypeEmail returned nothing!
CMFItemCopyBusinessID for item with type CMFItemTypeBusiness returned nothing!
Type
PhoneNumber
Email
BusinessID
com.apple.facetime
com.apple.FaceTime.FTConversationService
com.apple.InCallService
com.apple.NanoPhone
com.apple.TelephonyUtilities.tutool
com.apple.telephonyutilities.callservicesd
com.apple.tincan
com.apple.FTLivePhotoService
com.apple.springboard
com.apple.VideoConference
com.apple.Safari
com.apple.ScreenSharing
com.apple.DeskCam
com.apple.FaceTimeLinkTrampoline
com.apple.CloudKit.ShareBear
com.apple.FaceTime.ScreenSharing
com.apple.facetime.handoff
com.apple.callservicesd
ckAppBundleIDs
B16@?0@"TURoute"8
Digits
CountryCode
TUDynamicCallDisplayContext.m
serialQueue != nil
contactsDataSource != nil
displayContext != nil
%s is not available. Use another initializer instead.
-[TUDynamicCallDisplayContext init]
-[TUDynamicCallDisplayContext initWithCoder:]
VOICEMAIL
v16@?0@"MKMapItem"8
v24@?0@"CXCallDirectoryIdentificationEntry"8@"NSError"16
 personNameComponents=%@
 suggestedName=%@
 label=%@
 mapName=%@
 location=%@
 contactName=%@
 callDirectoryLabel=%@
 callDirectoryLocalizedExtensionContainingAppName=%@
 callDirectoryExtensionIdentifier=%@
new-voicemail
new-voicemail-no-caller-id
new-voicemail-no-visual-voicemail
ShowDialAssist
TestEmergencyNumber
 applicationContext=%@
 share=%@
 staticActivity=%d
CKShare
Class getCKShareClass(void)_block_invoke
TUConversationActivityCreateSessionRequest.m
void *CloudKitLibrary(void)
 targetContentIdentifier=%@
 shouldAssociateScene=%d
B24@?0@"NSNumber"8^B16
 bundleID=%@
 serviceName=%@
 pseudonymFeatureID=%@
 supportsConversationHandoff=%d
 supportsLinks=%d
 wantsLeaveOnInvalidation=%d
backgroundBlurEnabled
userPreferredCamera
AVConferencePreview
AVCaptureDeviceWasConnectedNotification
AVCaptureDeviceWasDisconnectedNotification
AVCaptureDevice
AVCaptureDeviceTypeBuiltInWideAngleCamera
AVCaptureDeviceTypeBuiltInTripleCamera
AVCaptureDeviceTypeBuiltInDualWideCamera
AVCaptureDeviceTypeBuiltInDualCamera
AVCaptureDeviceTypeDeskViewCamera
disabled
AVTAnimoji
AvatarKit
access-call-providers
split-session-approval
access-collaboration
modify-pending-collaboration
 timebase=%@
 conversationID=%@
 establishChannelMaxAttempts=%lu
 establishChannelRetryIntervalMillis=%lu
 egressMessagePayloadMaxSizeBytes=%lu
 channelStreamMaxQueueSize=%lu
 channelStreamMaxTries=%lu
 channelStreamRetryIntervalMillis=%lu
CONTACTS
FOUND_IN_APPS
-[TUSenderIdentity initWithUUID:accountUUID:ISOCountryCode:localizedName:localizedShortName:localizedServiceName:handle:]
UUID
accountUUID
ISOCountryCode
localizedName
localizedShortName
localizedServiceName
 type=%ld
 queueItemType=%d
 url=%@
TUCallProvider.m
-[TUCallProvider init]
 identifier=%@
 bundleURL=%@
 sandboxExtendedRingtoneSoundURL=%@
 originalRingtoneSoundURL=%@
 iconTemplateImageData=%p
 maximumCallGroups=%lu
 maximumCallsPerCallGroup=%lu
 supportsAudioOnly=%d
 supportsAudioAndVideo=%d
 supportsEmergency=%d
 supportsVoicemail=%d
 supportsRecents=%d
 supportsCurrentPlatform=%d
 supportsRinging=%d
 audioSessionID=%u
 sandboxExtensionHandle=%lld
 supportedHandleTypes=%@
 emergencyHandles=%@
 emergencyLabeledHandles=%@
 handoffIdentifiers=%@
 prioritizedSenderIdentities=%@
com.apple.Superbox
disconnectedReason
shouldSuppressRingtone
wantsHoldMusic
isEndpointOnCurrentDevice
transitionStatus
videoPaused
mediaStalled
videoDegraded
AVCRemoteVideoClient
handle
isoCountryCode
callerNameFromNetwork
callStatus
hostedOnCurrentDevice
provider
outgoing
voicemail
isVideo
thirdPartyVideo
isSendingAudio
isSendingVideo
blocked
emergency
failureExpected
international
supportsEmergencyFallback
usingBaseband
ttyType
supportsTTYWithVoice
bluetoothAudioFormat
mixesVoiceWithMedia
audioCategory
audioMode
needsManualInCallSounds
endedReasonUserInfo
endedReasonString
endedErrorString
uplinkMuted
downlinkMuted
callRelaySupport
videoStreamToken
callGroupUUID
providerContext
displayContext
remoteParticipantHandles
remoteUplinkMuted
localSenderIdentityUUID
localSenderIdentityAccountUUID
shouldSuppressInCallUI
mutuallyExclusiveCall
wantsStagingArea
inputAudioPowerSpectrumToken
outputAudioPowerSpectrumToken
originatingUIType
sharingScreen
conversation
screenShareAttributes
CGSizeZero
-[TUHandle initWithType:value:]
value
TUHandle.m
-[TUHandle init]
Generic
EmailAddress
Unknown(%ld)
INPersonHandle
com.apple.telephonyutilities.conversationprovidermanagerxpcclient
CSDConversationProviderManagerClientsShouldConnectNotification
com.apple.telephonyutilities.callservicesdaemon.conversationprovidermanager
INStartAudioCallIntent
INStartVideoCallIntent
INStartCallIntent
TUDialRequestValidityErrorDomain
tincan
contactIdentifier
dialer
emergencyDialerLockscreen
sideButtonPresses
volumeLockHold
sideButtonHold
fallDetection
fallDetectionUserResponsive
phoneRecents
phoneFavorites
facetimeRecents
facetimeLink
contactCard
messagesContactCard
messagesAvatarBar
messagesBubble
facetimeOngoing
facetimeMissedCallNotification
facetimeGFTNotification
facetimeSpotlight
facetimeCreateCall
crashDetection
crashDetectionUserResponsive
siri
providerIdentifier
performDialAssist
performLocalDialAssist
dialAssisted
handleType
emailAddress
generic
phoneNumber
redial
providerCustomIdentifier
endpointIDSDestinationURI
endpointRapportMediaSystemIdentifier
endpointRapportEffectiveIdentifier
successNotification
failureNotification
unknown
none
direct
TUDialRequest.m
_INCallAudioRouteHeySiriAudioRoute
-[TUDialRequest init]
 dialType=%@
 contactIdentifier=%@
 providerCustomIdentifier=%@
 localSenderIdentityUUID=%@
 localSenderIdentityAccountUUID=%@
 video=%d
 performDialAssist=%d
 performLocalDialAssist=%d
 dialAssisted=%d
 ttyType=%@
 hostOnCurrentDevice=%d
 endpointOnCurrentDevice=%d
 endpointIDSDestinationURI=%@
 originatingUI=%ld
 sos=%d
 valid=%d
 redial=%d
 validityErrors=%@
Normal
Emergency
<Unknown value: %ld>
B24@?0@"NSString"8@"TUSenderIdentity"16
@"TUCallProviderManager"8@?0
@"NSString"20@?0@"CNContactStore"8i16
%@@%@
No provider specified
handle is non-nil (%@) and dialType is Voicemail
dialType (%lu) is not Normal but service (%d) is not Telephony
service (%d) is not relayable but endpointOnCurrentDevice is set
handle (%@) for emergency call dial request is not an emergency number (isEmergencyOrWhitelistedSOSNumber=%d isTelephonyApprovedEmergencyHandle=%d originatingUIType=%ld)
Requested video for a provider which doesn't support it
destinationID and contactIdentifier are both nil/empty and dialType is Normal
Provider does not support the specified handle type
Requested SOS for non emergency dialType
dialType
audioSourceIdentifier
video
uniqueProxyIdentifier
hostOnCurrentDevice
endpointOnCurrentDevice
localLandscapeAspectRatio
localPortraitAspectRatio
processHandle
 device=%@
 handoffContext=%@
    supportsSimultaneousVoiceAndData: %@
CT Capabilities State:
    csCallingCapabilitiesState: %@
    voLTECallingCapabilitiesState: %@
    wiFiCallingCapabilitiesState: %@
    thumperCallingCapabilitiesState: %@
TUCallDisplayContextChangedNotification
TUCallFaceTimeIDStatusChangedNotification
TUCallHardPauseDigitsStateChangedNotification
TUCallShouldSuppressRingingChangedNotification
TUCallIsUsingBasebandChangedNotification
TUCallPrefersExclusiveAccessToCellularNetworkChangedNotification
TUCallIsOnHoldChangedNotification
TUCallIsUplinkMutedChangedNotification
TUCallIsSendingVideoChangedNotification
TUCallTranscriptionStringChangedNotification
TUCallModelChangedNotification
TUCallActiveRemoteParticipantChangedNotification
TUCallImageURLChangedNotification
TUCallIsSendingAudioChangedNotification
TUCallIsSharingScreenChangedNotification
TUCallIsThirdPartyVideoChangedNotification
TUCallNeedsManualInCallSoundsChangedNotification
TUCallAudioPropertiesChangedNotification
TUCallTTYTypeChangedNotification
TUCallBluetoothAudioFormatChangedNotification
TUCallSupportsTTYWithVoiceChangedNotification
TUCallRemoteAspectRatioChangedNotification
TUCallRemoteVideoContentRectChangedNotification
TUCallCameraTypeChangedNotification
TUCallRemoteCameraOrientationChangedNotification
TUCallRemoteScreenOrientationChangedNotification
TUCallRemoteScreenAspectRatioChangedNotification
TUCallRemoteUplinkMutedChangedNotification
TUCallLocalSenderIdentityAccountUUIDChangedNotification
TUCallProviderContextChangedNotification
TUCallRemoteParticipantHandlesChangedNotification
TUVideoMirroredChangedNotification
TUCallVideoStreamTokenChangedNotification
TUCallConversationChangedNotification
TUCallMixesVoiceWithMediaChangedNotification
TUCallServiceStatusChangedNotification
TUCallTransmissionModeChangedNotification
TUCallTransmissionStateChangedNotification
TUCallRemoteUnavailableTitle
TUCallRemoteUnavailableMessage
TUCallRemoteUnavailableAlternateButton
TUCallRemoteUnavailableAlternateButtonURL
TUCallRemoteUnavailableOtherButton
TUCallRemoteUnavailableOtherButtonURL
TUCallUserActivityDestinationIDKey
TUCallUserActivityHandleKey
TUCallUserActivityProviderIdentifierKey
TUCallUserActivityHandoffContextKey
TUCallFaceTimeTransportTypeKey
TUCallFaceTimeRemoteIDSDestinationKey
TUCallFaceTimeRemoteMomentsAvailableKey
TUCallFaceTimeLocalizedHandoffRecipientDeviceCategoryKey
TUCallFaceTimeHandoffRecipientParticipantKey
@"<TUContactsDataSource>"8@?0
 p=%@
 svc=%@
 hdl=%@
 isoCC=%@
 stat=%@
 tStat=%d
 dR=%d
 fR=%d
 supportsR=%d
 uPI=%@
 grp=%@
 lSIUUID=%@
 lSIAccountUUID=%@
 hosted=%d
 endpt=%d
 callerNFN=%@
 srcID=%@
 aC=%@
 aM=%@
 iUB=%d
 vm=%d
 connStat=%d%d
 nMICS=%d
 sR=%ld
 iSA=%d
 iSV=%d
 iSS=%d
 wHM=%d
 hSI=%d
 vST=%ld
 iapST=%ld
 oapST=%ld
 vCA=%@
 model=%@
 em=%d
 iFE=%d
 sSR=%d
 sSUI=%d
 mX=%d
 iUM=%d
 iDM=%d
 tty=%ld
 ttyWV=%d
 convo=%d
 rUM=%d
 ver=%ld
 pri=%ld
 oUI=%ld
 jConf=%ld
 iCat=%ld
 iKC=%d
 JFL=%d
 btAF=%ld
 mVM=%d
 sEF=%d
 pCtx=%@
%02d:%02d:%02d
%02d:%02d
FACETIME_REMINDER
TELEPHONY_REMINDER
FACETIME_AUDIO_REMINDER
%@%@%@
_TO_NUMBER_%@
_TO_CONTACT_%@
_CARRIER
_RELAY
_FTA
DIAL_CALL
DIAL_CALL_FACETIME
FACETIME_AUDIO_SERVICE
FACETIME_SERVICE
IN_CALL_OUTGOING_RELAY
IN_CALL_INCOMING_RELAY
ALERT_RELAY_FAILED_CONFERENCE_FAILED_TITLE
ALERT_RELAY_FAILED_RELAY_DEVICE_UNAVAILABLE_TITLE
ALERT_HOST_DEVICE_BUSY_TITLE
ALERT_CLIENT_DEVICE_BUSY_TITLE
ALERT_GENERIC_FAILURE_TITLE
ALERT_RELAY_FAILED_NO_REMOTE_NETWORK_TITLE
ALERT_KICKED_OUT_TITLE
ALERT_REJECTED_TITLE
ALERT_LINKS_DISABLED_TITLE
NO_DESTINATIONS_AVAILABLE_TITLE_%@
ALERT_OFFRAMPED_TITLE
ALERT_RELAY_FAILED_RELAY_DEVICE_UNAVAILABLE_ACCOUNTS_MESSAGE
ALERT_RELAY_FAILED_RELAY_DEVICE_UNAVAILABLE_ENABLE_MESSAGE
ALERT_HOST_DEVICE_BUSY_MESSAGE
ALERT_CLIENT_DEVICE_BUSY_MESSAGE
FTNetworkSupport
ALERT_THUMPER_FAILED_CALLING_NOT_AVAILABLE_MESSAGE
ALERT_THUMPER_FAILED_NO_NETWORK_MESSAGE
ALERT_RELAY_FAILED_NO_REMOTE_NETWORK_MESSAGE
ALERT_KICKED_OUT_MESSAGE
ALERT_REJECTED_MESSAGE
ALERT_INVALID_LINK_MESSAGE
ALERT_LINKS_DISABLED_MESSAGE
NO_DESTINATIONS_AVAILABLE_MESSAGE_%@
ALERT_OFFRAMPED_MESSAGE
sourceIdentifier
filteredOutReason
supportsRecents
faceTimeIDStatus
dateCreated
dateAnsweredOrDialed
dateSentInvitation
dateStartedConnecting
dateConnected
dateEnded
wasDialAssisted
hardPauseDigitsState
hardPauseDigits
wasPulledToCurrentDevice
soundRegion
model
videoCallAttributes
verificationStatus
priority
junkConfidence
identificationCategory
isKnownCaller
joinedFromLink
hostCreationTime
hostMessageSendTime
clientMessageReceiveTime
CGRectZero
vouching-enabled
ForceVoucherVerificationFailures
com.apple.telephonyutilities.autocompletesearchmodule
CNAutocompleteFetchRequest
ContactsAutocomplete
CNAutocompleteFetchContext
CNAutocompleteStore
IMPreferredAccountForService
IMCore
IMService
com.apple.telephonyutilities.callhistorycontrollerxpcclient
CSDCallHistoryControllerClientsShouldConnectNotification
com.apple.telephonyutilities.callservicesdaemon.callhistorycontroller
TUCallHistoryControllerXPCClient.m
com.apple.telephonyutilities.callhistorymanagerxpcclient
com.apple.telephonyutilities.callservicesdaemon.callhistorymanager
TUContactsDataProviderFetchRequest.m
-[TUContactsDataProviderFetchRequest init]
handles != nil
handle != nil
 cI=%@
 uNCC=%d
 iEM=%d
 iBL=%d
 c=%d
 v=%d
 i=%d
 isoCN=%@
 hdls=%@
 pnpH=%@
 aKTF=%@
wantsCallDisconnectionOnInvalidation
wantsCallStopStreamingOnInvalidation
wantsFrequencyChangeNotifications
wantsCallNotificationsDisabledWhileSuspended
 wantsCallDisconnectionOnInvalidation: %d
 wantsFrequencyChangeNotifications: %d
 wantsCallStopStreamingOnInvalidation: %d
 wantsCallNotificationsDisabledWhileSuspended: %d
com.apple.telephonyutilities.momentscontrollerxpcclient
com.apple.telephonyutilities.callservicesdaemon.momentscontroller
 fromBlockList=%d
 allowCallForDestinationID=%d
v16@?0B8B12
v16@?0C8C12
TUCallCenterCallStatusChangedInternalNotification
TUCallCenterCallStatusChangedNotification
TUCallCenterVideoCallStatusChangedNotification
TUCallCenterCallWantsHoldMusicChangedNotification
TUCallCenterCallInvitationSentNotification
TUCallCenterVideoCallInvitationSentNotification
TUCallCenterModelStateChangedNotification
TUCallCenterCallerIDChangedNotification
TUCallCenterIsEmergencyChangedNotification
TUCallCenterIsFailureExpectedChangedNotification
TUCallCenterSupportsEmergencyFallbackChangedNotification
TUCallCenterRestartNotification
TUCallCenterControlFailureNotification
TUCallCenterCallStartedConnectingNotification
TUCallCenterCallConnectedNotification
TUCallCenterVideoCallMediaPropertiesChangedNotification
TUCallCenterVideoCallCameraOrientationKey
TUCallCenterVideoCallCameraAspectRatioKey
TUCallCenterVideoCallPauseChangedNotification
TUCallCenterVideoCallVideoQualityChangedNotification
TUCallCenterVideoCallMediaStalledChangedNotification
TUCallCenterCallContinuityStateChangedNotification
TUCallCenterConferenceParticipantsChangedNotification
TUCallCenterResetCallStateNotification
TUCallCenterCallControlErrorCode
TUCallSourceIdentifierKey
TUCallSourceIdentifierSpeakerRoute
TUCallSourceIdentifierMikeyRoute
TUCallSourceIdentifierCarPlay
TUCallSourceIdentifierHeySiri
TUCallCenterInCallServiceDialRequestFailureNotification
TUCallCenterInCallServiceDidAppearNotification
TUCallCenterInCallServiceLocalVideoDidAppearNotification
TUCallCenterPendingMemberAddedNotification
TUCallCenterHaveBeenLetInNotification
TUCallCenterDidStartCaptioningNotification
TUCallCenterDidStopCaptioningNotification
TUCallDowngradedToAudioNotification
TUCallUpgradedToVideoNotification
TUCallScreenShareAttributesChangedNotification
com.apple.InCallService.suppressincallstatusbar
com.apple.InCallService.allowringingcallstatusindicator
TUSplitSessionErrorDomain
TUCallCenter.m
-[TUCallCenter init]
B16@?0@"TUJoinConversationRequest"8
Call services interface: %@
Audio device controller: %@
Provider manager: %@
MRNowPlayingRequest
MediaRemote
MROrigin
v24@?0@"MRPlayerPath"8@"NSError"16
v24@?0@"TUConversation"8^B16
announceCalls
conversationLinkBaseURL
simulateFatalPersistentStoreError
simulateInternationalCall
TUConfigurationAnnounceCallsNever
TUConfigurationAnnounceCallsAlways
TUConfigurationAnnounceCallsHandsFree
TUConfigurationAnnounceCallsHeadphonesOnly
file-read-data
INPersonHandleLabel _INPersonHandleLabelForCNLabeledValue(CNLabeledValue *__strong)
TUIntentController.m
INPersonHandleLabelForCNLabeledValue
void *IntentsLibrary(void)
Class getINPersonClass(void)_block_invoke
Class getINStartCallIntentClass(void)_block_invoke
Class getINPersonHandleClass(void)_block_invoke
 state=%lu
 endpoint=%@
 audioSessionID=%@
 isLocallyInitiated=%d
 isLightweightPrimaryInitiated=%d
 isFirstJoin=%d
 isPermittedToJoin=%d
 isUsingAirplay=%d
 distributionCount=%ld
 persistentSceneIdentifier=%@
 applicationState=%lu
v24@?0B8B12@"NSError"16
LSApplicationRecord
v32@?0@"NSNumber"8@"NSString"16^B24
%@: %@ - %@ - %@ - %@
deviceModel
identifiers
capabilities
Effective identifier
Media route identifier
%@ %@
 remoteIDSDestinations=%@
 requesterID=%@
com.apple.telephonyutilities.conversationmanagerxpcclient
CSDConversationManagerClientsShouldConnectNotification
com.apple.telephonyutilities.callservicesdaemon.conversationmanager
 @UUUUUU
softlink:o:path:/System/Library/PrivateFrameworks/PhoneNumberResolver.framework/PhoneNumberResolver
softlink:r:path:/System/Library/PrivateFrameworks/CallHistory.framework/CallHistory
softlink:o:path:/System/Library/PrivateFrameworks/IMCore.framework/IMCore
softlink:r:path:/System/Library/PrivateFrameworks/MediaExperience.framework/MediaExperience
softlink:r:path:/System/Library/PrivateFrameworks/AudioSession.framework/AudioSession
softlink:r:path:/System/Library/Frameworks/QuartzCore.framework/QuartzCore
softlink:r:path:/System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
softlink:r:path:/System/Library/PrivateFrameworks/MediaExperience.framework/MediaExperience
softlink:r:path:/System/Library/PrivateFrameworks/TCC.framework/TCC
softlink:r:path:/System/Library/PrivateFrameworks/NanoPreferencesSync.framework/NanoPreferencesSync
softlink:r:path:/System/Library/Frameworks/CloudKit.framework/CloudKit
softlink:r:path:/System/Library/PrivateFrameworks/CallHistory.framework/CallHistory
softlink:o:path:/System/Library/Frameworks/Intents.framework/Intents
TUConversation
TURouteController
TUMomentsCapabilities
NSSecureCoding
NSCoding
TUHardwareControlsBroadcaster
TUConversationLinkDescriptorXPCClient
NSObject
TUConversationLinkDescriptorXPCServer
TUConversationLinkDescriptorXPCClientDataSource
TUConversationLinkDescriptorDataSource
TUConversationLinkKeyValueDataSource
TUSuggestionsMetadataCacheDataProvider
TUConversationActivity
NSCopying
QueryParameters
QueryParameterSupport
TelephonyUtilities
TUCallDirectoryMetadataCacheDataProvider
TUStringShareItem
TURecentsResults
TUGeoLocationMetadataCacheDataProvider
TUAudioController
Internal
TUSenderIdentityCapabilities
TUCTCapabilityInfo
FaceTime
FaceTime_PhoneNumber
TUCTCapabilitiesState
TUPubliclyAccessibleCopying
TUSecureCoding
CallHistoryAdditions
TUConversationLinkDescriptor
TUMutableConversationLinkDescriptor
TUManagedConversationLinkDescriptor
TUNearbyDeviceHandleCapabilities
TUDispatcher
TUVideoDeviceController
TUVideoDeviceControllerProviderDelegate
AVConferencePreviewClientDelegate
FTCallHistorySearchModuleAdditions
TUCallHistorySearchModule
TUSearchModuleProtocol
TUAdditions
TUUserNotificationsProviderXPCServer
TUUserNotificationProviderXPCClient
TUUserNotificationProviderDataSource
TUConversationActivityContext
TUDTMFSoundPlayer
TUNeighborhoodHandoffContext
TUDialAssist
TUOptionalObject
TUConversationInvitationPreference
TUVideoEffect
TULinkShareItem
TUConversationLinkOriginator
TURepeatingActor
TURepeatingAction
TUDiscoverabilitySignal
TUCallHistoryController
TUCallProviderManagerDelegate
TUSearchUtilities
TUClientIDSUtilities
TUCallCapabilities
TUSenderIdentityClient
TUMomentsController
TUMomentsControllerDataSourceDelegate
TUSoundPlayer
TUContactsDataProviderAppleCareHandles
TUAudioDeviceController
TUAudioDeviceControllerActions
TUAudioDeviceControllerXPCServer
TUConversationNotice
TUConversationNoticeProtocol
TUConversationParticipant
TUMutableConversationParticipant
TUVideoCallAttributes
TUProxyRecentCall
TUSearchResult
TUSearchResultData
TUIDSLookup
TURoute
NSMutableCopying
TUMutableRoute
TUConversationProviderManager
TUProxyAutocompleteResult
TUConversationVirtualParticipant
TUMutableConversation
TUConversationHandoffEligibility
TUCallContainer
TUMutableCallContainer
TUCallScreenShareAttributes
TUScreenShareAttributes
TUNeighborhoodActivityConduit
TUNeighborhoodActivityConduitXPCClientDelegate
TUAudioSystemController
TUCallCapabilitiesXPCClient
TUCallCapabilitiesXPCServer
TUCallCapabilitiesXPCServerActions
TUConversationMember
TUNotifyObserver
TUContactsDataProviderResult
TUContactsDataProvider
TUContactsDataSource
TUSearchResultsAdditions
TUJoinConversationRequest
TUFilteredRequest
TUTTYCoreTelephonyClient
TUCoreTelephonyClient
TUDelegateController
TUMomentDescriptor
TUAnswerRequest
TUCallRequest
TUVideoRequest
TUMetadataClientController
TUGroupTitle
TURemoteVideoClient
TUAudioRoute
TUCallProviderManagerXPCClient
TUCallProviderManagerXPCServer
TUCallProviderManagerDataSource
TUCallDisplayContext
TUMutableCallDisplayContext
TUCallFilterController
TUMetadataCacheDataProvider
TUFeatureFlags
TUConversationProvider
TUConversationLink
TUCallModel
TURTCCallReporter
TULogging
TUConversationMediaController
TUConversationMediaControllerDataSourceDelegate
TUConversationActivitySessionContainer
TULabeledHandle
Telephony
TUConversationMemberAssociation
TUSearchResults
TUResultGroup
TUContactProvider
TUReplyWithMessageStore
TUAdhocResult
TUConversationVirtualParticipantConfig
TUConversationParticipantPresentationContext
TUConfigurationDelegate
TUDelegate
TUUserConfiguration
TUCallServicesInterface
TUCallServicesXPCClient
TUCallCenterXPCClient
TURouteControllerXPCClient
TUCallServicesProxyCallActions
TUCallServicesClientCapabilitiesActions
TUCallServicesClientCapabilitiesXPCServer
TURouteControllerActions
TUCallFilterControllerActions
TUMetadataItem
TUMetadataDestinationID
TUConversationParticipantCapabilities
TUMutableConversationParticipantCapabilities
TUIDSLookupManager
TUIDSIDQueryController
TUIDSBatchIDQueryController
IDSBatchIDQueryControllerDelegate
TUSearchController
TUReportingControllerXPCServer
TUReportingControllerXPCClient
TUReportingControllerDataSource
TUNeighborhoodActivityConduitXPCClient
TUNeighborhoodActivityConduitXPCServer
TUConversationParticipantAssociation
TUAudioRouteCollectionKey
TUAudioFrequencyController
AVCAudioPowerSpectrumMeterDelegate
TUCallSoundPlayer
TUCallSoundPlayerDescriptor
TUSandboxExtendedURL
TUCallCapabilitiesState
TUCallGroup
TUBargeCall
TUCallProviderManager
TUCallProviderManagerDataSourceDelegate
TUMetadataCache
TUMetadataCacheDataProviderDelegate
TUParticipant
TUMutableParticipant
TUSanitizedCopying
TUCallNotificationManager
TUVoucher
TelephonyUtilitiesAdditions
TUConversationActivityMetadata
TUTelephonySubscription
TUMapsMetadataCacheDataProvider
TUHandle
TUHandleContactProvider
TUConversationManager
TUConversationManagerDataSourceDelegate
TUCloudCallingDevice
TUPrivacyManager
TUPrivacyRule
Predicate
TUPhoneNumber
TUThumperCTCapabilitiesState
TUDynamicCallDisplayContext
Carrier
TUConversationActivityCreateSessionRequest
TUMutableConversationActivityCreateSessionRequest
TUConversationActivitySceneAssociationBehavior
TUConversationProviderConfiguration
Emergency
TUEmergencyCoreTelephonyClient
TUVideoDeviceControllerProvider
TUVideoEffectsProvider
TUConversationReport
TUSearchModuleManager
TUConversationUnreliableMessengerConfig
TUAutocompleteResultPartitioner
TUSenderIdentity
TUConversationActivityEvent
TUCallProvider
TUProxyCall
AVCRemoteVideoClientDelegate
TUConversationProviderManagerXPCClient
TUConversationProviderManagerXPCServer
TUConversationProviderManagerDataSource
TUDialRequest
TUSplitSessionInfo
TUSenderIdentityCapabilitiesState
TUCall
TUVouchingEnablementImpl
TUVouchingEnablement
TUContactsAutocompleteSearchModule
CNAutocompleteFetchDelegate
TUCallHistoryControllerXPCClient
TUCallHistoryControllerXPCServer
TUCallHistoryControllerDataSource
TUCallHistoryManagerXPCClient
TUCallHistoryManagerXPCServer
TUCallHistoryManagerDataSource
TUContactsDataProviderFetchRequest
TUCallServicesClientCapabilities
TUMomentsControllerXPCClient
TUMomentsSandboxingDataSource
TUMomentsControllerXPCServer
TUMomentsControllerDataSource
TUICFQueryResult
TUICFInterface
TUCallCenter
TUCallHistoryManager
TUConfiguration
TUCallServicesXPCServer
TUCallCenterXPCServer
TURouteControllerXPCServer
TUCallFilterControllerXPCServer
TUCallServicesAdditions
TUIntentController
TUConversationActivitySession
TUMutableConversationActivitySession
TUNearbyDeviceHandle
TULocked
TUMomentsProvider
TUConversationManagerXPCClient
TUConversationMediaControllerXPCClient
TUConversationMessagesGroupProviderXPCClient
TUConversationManagerXPCServer
TUConversationMediaControllerXPCServer
TUConversationMessagesGroupProviderXPCServer
TUConversationManagerDataSource
TUConversationContactProvider
provider
assumedIdentity
mainBundle
tu_assumedIdentity
setAssumedIdentity:
tu_contactStoreConfigurationForConversation:
init
weakObjectsHashTable
queue
routesByUniqueIdentifier
allValues
routes
countByEnumeratingWithState:objects:count:
isCurrentlyPicked
isReceiver
isSpeaker
delegates
addObject:
removeObject:
uniqueIdentifier
pickRouteWithUniqueIdentifier:
actionsDelegate
pickRouteWithUniqueIdentifier:shouldWaitUntilAvailable:forRouteController:
routesByUniqueIdentifierForRouteController:
handleRoutesByUniqueIdentifierUpdated:
isEqualToString:
isEqualToDictionary:
setRoutesByUniqueIdentifier:
allObjects
routesChangedForRouteController:
requeryRoutes
initWithActionsDelegate:serialQueue:
pickedRoute
receiverRoute
speakerRoute
addDelegate:
removeDelegate:
pickRoute:
pickRouteWhenAvailableWithUniqueIdentifier:
routeWithSourceIdentifier:
handleServerReconnect
handleServerDisconnect
.cxx_destruct
_queue
_actionsDelegate
_delegates
_routesByUniqueIdentifier
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
T@"<TURouteControllerActions>",R,W,N,V_actionsDelegate
T@"NSHashTable",R,N,V_delegates
T@"NSDictionary",C,N,V_routesByUniqueIdentifier
T@"NSArray",R,C,N
T@"TURoute",R,C,N
copy
availability
supportedMediaTypes
componentsJoinedByString:
stringWithFormat:
hash
isEqualToCapabilities:
isEqualToSet:
decodeIntForKey:
setWithObjects:
decodeObjectOfClasses:forKey:
initWithAvailability:supportedMediaTypes:
encodeInt:forKey:
encodeObject:forKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
description
isEqual:
_availability
_supportedMediaTypes
Ti,R,N,V_availability
T@"NSSet",R,C,N,V_supportedMediaTypes
array
dictionaryWithObject:forKey:
dealloc
dictionaryWithObjects:forKeys:count:
notificationWithName:object:userInfo:
invalidate
userInfo
valueForKey:
eventTypeToIgnore
setEventTypeToIgnore:
defaultCenter
postNotification:
longPressTimerFired:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
_hidEventSystemClientRef
_eventTypeToIgnore
T@"NSString",&,V_eventTypeToIgnore
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
conversationLinkDescriptorsDidChange
interfaceWithProtocol:
addConversationLinkDescriptors:reply:
addOrUpdateConversationLinkDescriptors:reply:
conversationLinkDescriptorCountWithPredicate:reply:
conversationLinkDescriptorsWithPredicate:limit:offset:reply:
removeConversationLinkDescriptorsWithPredicate:reply:
setActivated:withRevision:forConversationLinkDescriptorsWithPredicate:reply:
setExpirationDate:withRevision:forConversationLinkDescriptorsWithPredicate:reply:
setInvitedHandles:withRevision:forConversationLinkDescriptorsWithPredicate:reply:
setName:withRevision:forConversationLinkDescriptorsWithPredicate:reply:
setInteger:forKey:reply:
integerForKey:reply:
setString:forKey:reply:
stringForKey:reply:
setClasses:forSelector:argumentIndex:ofReply:
setWithObject:
xpcConnection
remoteObjectProxyWithErrorHandler:
synchronousRemoteObjectProxyWithErrorHandler:
initWithServiceName:
serverXPCInterface
setRemoteObjectInterface:
clientXPCInterface
setExportedInterface:
setExportedObject:
setXpcConnection:
setInvalidationHandler:
setInterruptionHandler:
resume
synchronousServerWithErrorHandler:
asynchronousServerWithErrorHandler:
conversationLinkDescriptorDataSourceDelegate
conversationLinkDescriptorsDidChangeForDataSource:
asynchronousServer
setAsynchronousServer:
synchronousServer
setSynchronousServer:
addConversationLinkDescriptors:error:
addConversationLinkDescriptors:completion:
addOrUpdateConversationLinkDescriptors:error:
addOrUpdateConversationLinkDescriptors:completion:
conversationLinkDescriptorCountWithPredicate:error:
conversationLinkDescriptorCountWithPredicate:completion:
conversationLinkDescriptorsWithPredicate:limit:offset:error:
conversationLinkDescriptorsWithPredicate:limit:offset:completion:
removeConversationLinkDescriptorsWithPredicate:error:
removeConversationLinkDescriptorsWithPredicate:completion:
setActivated:withRevision:forConversationLinkDescriptorsWithPredicate:error:
setActivated:withRevision:forConversationLinkDescriptorsWithPredicate:completion:
setExpirationDate:withRevision:forConversationLinkDescriptorsWithPredicate:error:
setExpirationDate:withRevision:forConversationLinkDescriptorsWithPredicate:completion:
setInvitedHandles:withRevision:forConversationLinkDescriptorsWithPredicate:error:
setInvitedHandles:withRevision:forConversationLinkDescriptorsWithPredicate:completion:
setName:withRevision:forConversationLinkDescriptorsWithPredicate:error:
setName:withRevision:forConversationLinkDescriptorsWithPredicate:completion:
setConversationLinkDescriptorDataSourceDelegate:
T@"<TUConversationLinkDescriptorDataSourceDelegate>",&,N
setInteger:forKey:error:
setInteger:forKey:completion:
integerForKey:completion:
integerForKey:error:
setString:forKey:error:
setString:forKey:completion:
stringForKey:completion:
stringForKey:error:
T@"<TUConversationLinkDescriptorXPCServer>",&,N
T@"NSXPCInterface",R,N
accessorLock
_accessorLock
_conversationLinkDescriptorDataSourceDelegate
_xpcConnection
T{os_unfair_lock_s=I},R,N,V_accessorLock
T@"NSXPCConnection",&,N,V_xpcConnection
T@"<TUConversationLinkDescriptorDataSourceDelegate>",&,N,V_conversationLinkDescriptorDataSourceDelegate
serviceForContacts
sharedService
canUseSiriSuggestions
namesForDetail:limitTo:prependMaybe:onlySignificant:error:
namesForDetail:limitTo:prependMaybe:onlySignificant:withCompletion:
destinationIdIsEmailAddress
contactMatchesByEmailAddress:error:
destinationIdIsPhoneNumber
contactMatchesByPhoneNumber:error:
contact
recordId
numericValue
cnContact
refresh
registerContactsChangeObserver:
handle
normalizedValue
length
suggestionsServiceThrottleSemaphore
count
firstObject
setObject:forDestinationID:
suggestedNamesForDestinationID:onlySignificant:withCompletion:
suggestedNamesForDestinationID:onlySignificant:error:
newestSuggestedContactForDestinationID:
T@"<SGSuggestionsServiceContactsProtocol>",R,N
updateCacheWithDestinationIDs:withGroup:
setSuggestionsServiceThrottleSemaphore:
suggestionsContactsObserver
_suggestionsServiceThrottleSemaphore
_suggestionsContactsObserver
T@"NSObject<OS_dispatch_semaphore>",&,N,V_suggestionsServiceThrottleSemaphore
T@,R,N,V_suggestionsContactsObserver
containsObject:
bundleIdentifier
tu_assumedIdentityForBundleIdentifier:
T@"NSObject<OS_tcc_identity>",R,C,N
initWithBundleIdentifier:metadata:applicationContext:uuid:activityIdentifier:fallbackApplicationName:
lookupApplicationNameForBundleIdentifier:
metadata
sanitizedCopy
applicationContext
UUID
activityIdentifier
initWithBundleIdentifier:metadata:applicationContext:uuid:activityIdentifier:
isStaticActivity
data
initWithMetadata:applicationContext:uuid:activityIdentifier:
appendFormat:
isSupported
originator
timestamp
trustedFromHandle
fallbackApplicationName
isSystemActivity
isPlaceholderActivity
startWhenStaged
appendString:
isEqualToConversationActivity:
isEquivalentToActivityMetadata:
isEqualToData:
isEqualToDate:
allocWithZone:
setSupported:
setOriginator:
setTimestamp:
setSystemActivity:
setStaticActivity:
setTrustedFromHandle:
setStartWhenStaged:
sanitizedCopyWithZone:
decodeObjectOfClass:forKey:
decodeBoolForKey:
encodeBool:forKey:
isEligibleForWebBrowser
isScreenSharingActivity
platformScreenSharingBundleIdentifier
supportsContinuationOnTV
fallbackURL
host
localizedApplicationName
initWithBundleIdentifier:allowPlaceholder:error:
localizedName
title
subTitle
concatenatedMetadataDescription
localizedStringForKey:value:table:
context
placeholderActivity
copyWithZone:
initWithCreationRequest:bundleIdentifier:systemActivity:
isEquivalentToActivity:
representativeBundleIdentifier
isEligibleForHandoff
setBundleIdentifier:
representativeDisplayName
concatenatedDescription
activityContext
setActivityContext:
setUUID:
setApplicationContext:
setActivityIdentifier:
setMetadata:
setFallbackApplicationName:
_supported
_systemActivity
_staticActivity
_startWhenStaged
_UUID
_applicationContext
_bundleIdentifier
_activityIdentifier
_metadata
_originator
_trustedFromHandle
_timestamp
_fallbackApplicationName
T@"NSString",C,N,V_activityIdentifier
T@"NSUUID",&,N,V_UUID
T@"TUConversationActivityMetadata",&,N,V_metadata
T@"NSData",C,N,V_applicationContext
T@"NSString",C,N,V_bundleIdentifier
supported
TB,N,GisSupported,V_supported
T@"TUHandle",C,N,V_originator
T@"TUHandle",C,N,V_trustedFromHandle
T@"NSDate",C,N,V_timestamp
T@"NSString",C,N,V_fallbackApplicationName
systemActivity
TB,N,GisSystemActivity,V_systemActivity
staticActivity
TB,N,GisStaticActivity,V_staticActivity
TB,N,V_startWhenStaged
T@"NSString",R,C,N
T@"TUConversationActivityContext",R,C,N
eligibleForHandoff
TB,R,N,GisEligibleForHandoff
eligibleForWebBrowser
TB,R,N,GisEligibleForWebBrowser
TB,R,N,GisPlaceholderActivity
tuQueryParameters
query
absoluteString
componentsWithString:
dictionary
componentsSeparatedByString:
objectAtIndexedSubscript:
stringByRemovingPercentEncoding
setObject:forKeyedSubscript:
initWithURL:resolvingAgainstBaseURL:
queryItems
initWithName:value:
arrayByAddingObject:
setQueryItems:
name
predicateWithBlock:
filteredArrayUsingPredicate:
queryParameters
URLBySettingQueryParameterValue:forKey:
URLByDeletingQueryParameterWithKey:
string
allKeys
URLQueryAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
objectForKey:
stringWithString:
asQueryParameterString
isKeyAvailable:
emailAddresses
isSuggested
value
type
tu_labeledValueForEmailAddress:
tu_labeledValueForSocialProfileWithUsername:
isoCountryCode
initWithStringValue:countryCode:
tu_labeledValueForPhoneNumber:
phoneNumbers
isLikePhoneNumber:
socialProfiles
username
stringValue
countryCode
normalizedPhoneNumberHandleForValue:isoCountryCode:
normalizedEmailAddressHandleForValue:
tuHandlesForPhoneNumbers
tuHandlesForEmailAddresses
addObjectsFromArray:
tu_labeledValueForHandle:
allTUHandles
ITUCountryCodeForISOCountryCode:
callDirectoryManager
firstIdentificationEntriesForEnabledExtensionsWithPhoneNumbers:completionHandler:
pn_hasInternationalDirectDialingPrefix
nationalDirectDialingPrefixForISOCountryCode:
hasPrefix:
substringFromIndex:
countryDialingCode
stringByAppendingString:
firstIdentificationEntriesForEnabledExtensions
objectForKeyedSubscript:
localizedExtensionContainingAppName
localizedLabel
identificationEntriesChangedNotifyToken
setCountryDialingCode:
setFirstIdentificationEntriesForEnabledExtensions:
_identificationEntriesChangedNotifyToken
_callDirectoryManager
_countryDialingCode
_firstIdentificationEntriesForEnabledExtensions
T@"CXCallDirectoryManager",R,N,V_callDirectoryManager
Ti,R,N,V_identificationEntriesChangedNotifyToken
T@?,C,N,V_countryDialingCode
T@?,C,N,V_firstIdentificationEntriesForEnabledExtensions
setMessage:
initWithMessage:
message
_message
T@"NSString",C,N,V_message
numberOfSections
resultGroups
objectAtIndex:
results
addSearchResults:
allSearchItems
currentLocale
lowercaseString
phoneNumberResolver
resolvePhoneNumber:countryCode:error:
locationForMetadataIdentifier:
_phoneNumberResolver
T@"PNRPhoneNumberResolver",R,N,V_phoneNumberResolver
currentHandler
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
modifyingStateLock
setModifyingStateLock:
_modifyingStateLock
T@"NSObject<OS_dispatch_semaphore>",&,N,V_modifyingStateLock
_requestUpdatedValueWithBlock:object:isRequestingPointer:forceNewRequest:scheduleTimePointer:notificationString:notificationUserInfo:queue:
_acquireLock
_releaseLock
postNotificationName:object:userInfo:
_requestUpdatedValueWithBlock:object:isRequestingPointer:forceNewRequest:scheduleTimePointer:notificationString:queue:
isRTTSupportedForSenderIdentityUUID:
isTTYSoftwareAvailableForSenderIdentityUUID:
client
isRTTSupportedForSubscriptionUUID:
isTTYSupportedForSenderIdentityUUID:
isTTYHardwareAvailableForSenderIdentityUUID:
isTTYEnabledForSubscriptionUUID:
isTTYSupportedForSubscriptionUUID:
isTTYHardwareAvailableForSubscriptionUUID:
isTTYHardwareEnabledForSubscriptionUUID:
isTTYHardwareSupportedForSubscriptionUUID:
isTTYSoftwareAvailableForSubscriptionUUID:
isTTYSoftwareEnabledForSubscriptionUUID:
isTTYSoftwareSupportedForSubscriptionUUID:
isRTTAvailableForSenderIdentityUUID:
isTTYAvailableForSenderIdentityUUID:
isTTYEnabledForSenderIdentityUUID:
isTTYHardwareEnabledForSenderIdentityUUID:
isTTYHardwareSupportedForSenderIdentityUUID:
isTTYSoftwareEnabledForSenderIdentityUUID:
isTTYSoftwareSupportedForSenderIdentityUUID:
state
supportsSimultaneousVoiceAndData
isWiFiCallingCurrentlyAvailable
supportsPrimaryCalling
isThumperCallingCurrentlyAvailable
areRelayCallingFeaturesEnabled
canAttemptTelephonyCallsWithoutCellularConnection
isEmergencyWiFiCallingCurrentlyAvailable
csCallingCapabilitiesState
isCurrentlyAvailable
voLTECallingCapabilitiesState
supportsVoLTECalling
isEnabled
ctCapabilityInfo
isVoLTECallingEnabled
wiFiCallingCapabilitiesState
supportsWiFiCalling
isRoamingSupported
supportsWiFiCallingRoaming
isRoamingEnabled
isWiFiCallingEnabled
isEmergencySupported
isEmergencyCurrentlyAvailable
provisioningStatus
provisioningURL
isProvisioningURLInvalid
provisioningPostData
thumperCallingCapabilitiesState
supportsCellularData
isApproved
isThumperCallingEnabled
handleFailureInMethod:object:file:lineNumber:description:
approvedSecondaryDeviceIDs
supportsDefaultPairedDevice
defaultPairedDevice
uniqueID
isThumperCallingAllowedOnSecondaryDeviceWithID:
senderIdentityUUID
setVoLTECallingEnabled:forSenderIdentityWithUUID:
setWiFiCallingEnabled:forSenderIdentityWithUUID:
setWiFiCallingRoamingEnabled:forSenderIdentityWithUUID:
invalidateAndRefreshWiFiCallingProvisioningURLForSenderIdentityWithUUID:
setThumperCallingEnabled:forSenderIdentityWithUUID:
invalidateAndRefreshThumperCallingProvisioningURLForSenderIdentityWithUUID:
setThumperCallingAllowed:onSecondaryDeviceWithID:forSenderIdentityWithUUID:
setThumperCallingAllowedOnDefaultPairedDevice:forSenderIdentityWithUUID:
requestPinFromPrimaryDevice
cancelPinRequestFromPrimaryDevice
supportsThumperCalling
supportsThumperCallingOverCellularData
thumperCallingCapabilityInfo
wiFiCallingCapabilityInfo
isAssociated
didChangeWiFiCallingCapabilitiesForSenderIdentityWithUUID:
performDelegateCallbackBlock:
postNotificationName:object:
didChangeVoLTECallingCapabilitiesForSenderIdentityWithUUID:
didChangeThumperCallingCapabilitiesForSenderIdentityWithUUID:
didChangeWiFiCallingProvisionalURLForSenderIdentityWithUUID:
didChangeThumperCallingProvisionalURLForSenderIdentityWithUUID:
supportsEmergencyWiFiCalling
isVoLTECallingCurrentlyAvailable
isThumperCallingAllowedForCurrentDevice
initWithSenderIdentityUUID:state:client:
canAttemptEmergencyCallsWithoutCellularConnection
isCSCallingCurrentlyAvailable
voLTECallingCapabilityInfo
isWiFiCallingRoamingEnabled
wiFiCallingProvisioningStatus
wiFiCallingProvisioningURL
isWiFiCallingProvisioningURLInvalid
wiFiCallingProvisioningPostData
thumperCallingProvisioningStatus
thumperCallingProvisioningURL
isThumperCallingProvisioningURLInvalid
thumperCallingProvisioningPostData
isThumperCallingAllowedOnDefaultPairedSecondaryDevice
setVoLTECallingEnabled:
setWiFiCallingEnabled:
setWiFiCallingRoamingEnabled:
invalidateAndRefreshWiFiCallingProvisioningURL
setThumperCallingEnabled:
invalidateAndRefreshThumperCallingProvisioningURL
setThumperCallingAllowed:onSecondaryDeviceWithID:
setThumperCallingAllowedOnDefaultPairedSecondaryDevice:
requestPinFromPrimaryDeviceForThumperCalling
cancelPinRequestFromPrimaryDeviceForThumperCalling
_sendNotificationsAndCallbacksComparingToOldSenderIdentityCapabilities:
thumperCallingLocalDeviceID
setThumperCallingLocalDeviceID:
_senderIdentityUUID
_thumperCallingLocalDeviceID
_state
_client
T@"TUSenderIdentityCapabilitiesState",R,C,N,V_state
T@"TUCallCapabilitiesXPCClient",R,N,V_client
T@"TUCTCapabilityInfo",R,N
T@"NSUUID",R,C,N,V_senderIdentityUUID
TB,R,N
csCallingCurrentlyAvailable
TB,R,N,GisCSCallingCurrentlyAvailable
voLTECallingEnabled
TB,R,N,GisVoLTECallingEnabled
voLTECallingCurrentlyAvailable
TB,R,N,GisVoLTECallingCurrentlyAvailable
wiFiCallingEnabled
TB,R,N,GisWiFiCallingEnabled
wiFiCallingRoamingEnabled
TB,R,N,GisWiFiCallingRoamingEnabled
wiFiCallingCurrentlyAvailable
TB,R,N,GisWiFiCallingCurrentlyAvailable
emergencyWiFiCallingCurrentlyAvailable
TB,R,N,GisEmergencyWiFiCallingCurrentlyAvailable
Ti,R,N
T@"NSURL",R,C,N
wiFiCallingProvisioningURLInvalid
TB,R,N,GisWiFiCallingProvisioningURLInvalid
T@"NSData",R,C,N
thumperCallingAllowedForCurrentDevice
TB,R,N,GisThumperCallingAllowedForCurrentDevice
thumperCallingEnabled
TB,R,N,GisThumperCallingEnabled
thumperCallingCurrentlyAvailable
TB,R,N,GisThumperCallingCurrentlyAvailable
T@"NSString",C,N,V_thumperCallingLocalDeviceID
thumperCallingProvisioningURLInvalid
TB,R,N,GisThumperCallingProvisioningURLInvalid
thumperCallingAllowedOnDefaultPairedSecondaryDevice
TB,R,N,GisThumperCallingAllowedOnDefaultPairedSecondaryDevice
setProvisioningStatus:
setProvisioningURL:
setProvisioningPostData:
setCanEnable:
setEnabled:
setCanEnableRoaming:
setRoamingEnabled:
T@"TUCTCapabilityInfo",R,C,N
resourceSpecifier
rangeOfString:
substringToIndex:
rangeOfString:options:
handleWithDestinationID:
_faceTimeURLWithHandle:addressBookUID:audioOnly:
setScheme:
setHost:
queryItemForHandleType:
numberWithInt:
queryItemWithName:value:
_faceTimeURLWithDestinationID:addressBookUID:audioOnly:
faceTimeURLWithDestinationID:addressBookUID:audioOnly:
componentsWithURL:resolvingAgainstBaseURL:
arrayWithArray:
faceTimeTelephonyURLWithPhoneNumber:showPrompt:
URLHostAllowedCharacterSet
stringByAppendingFormat:
URLWithString:
isFaceTimeURL
isFaceTimeAudioURL
initWithFormat:
_applyFaceTimeScheme:toFaceTimeURL:
faceTimeUpdateForegroundAppURL
arrayWithObjects:count:
arrayByAddingObjectsFromArray:
faceTimeAppViewLinkDetailsURL
faceTimeAppJoinConversationLinkURL
scheme
isEqualToIgnoringCase:
isFaceTimeAppViewLinkDetailsURL
isFaceTimeOpenLinkURL
isFaceTimeAppJoinConversationLinkURL
isFaceTimePromptURL
isFaceTimeAudioPromptURL
caseInsensitiveCompare:
isLaunchForIncomingCallURL
isShowInCallUIURL
integerValue
faceTimeDestinationAccount
_isPhoneNumberID:
isFaceTimeMultiwayURL
isSystemCallControlsURL
pseudonymForLinkDetailsView
conversationLinkURLForOpenLinkURL
conversationLinkURLForJoinConversation
hasNoPromptOption
isDialCallURL
isLaunchForOutgoingConversationURL
isShowIncomingTransmissionNoticeURL
isShowCarPlayInCallUIURL
isShowSystemCallControlsURL
isShowHandoffEligibleNearbyURL
isShowScreenSharingURL
isUpdateForegroundAppURL
foregroundAppBundleIdentifier
foregroundAppApplicationType
isFaceTimeNeedsBackgroundLaunchURL
isAnswerRequestURL
answerRequestSourceIdentifier
faceTimeURLWithDestinationID:
faceTimeURLWithDestinationID:addressBookUID:
faceTimeURLWithDestinationID:addressBookUID:forceAssist:suppressAssist:wasAssisted:audioOnly:
faceTimeTelephonyURLWithPhoneNumber:
faceTimeURLWithURL:
faceTimePromptURLWithURL:
faceTimeLaunchForIncomingCallURL
faceTimeLaunchForOutgoingConversationURL
faceTimeShowInCallUIURL
faceTimeShowCarPlayInCallUIURL
faceTimeShowSystemCallControlsURL
faceTimeShowHandoffEligibleNearbyURL
faceTimeShowIncomingTransmissionNoticeUIURL
faceTimeNeedsBackgroundLaunchURL
faceTimeUpdateForegroundAppURLForBundleIdentifier:applicationType:
faceTimeAnswerURLWithSourceIdentifier:
faceTimeAppViewLinkDetailsURLForPseudonym:
faceTimeAppJoinConversationURLForConversationLinkURL:
screenSharingAppURL
faceTimeURLWithPhoneNumber:addressBookUID:forceAssist:suppressAssist:wasAssisted:
faceTimeURLWithPhoneNumber:addressBookUID:audioOnly:forceAssist:suppressAssist:wasAssisted:
boolValue
decodeInt32ForKey:
encodeInt32:forKey:
publiclyAccessibleCopyWithZone:
isEqualToCapabilitiesState:
setCurrentlyAvailable:
setRoamingSupported:
setEmergencySupported:
setEmergencyCurrentlyAvailable:
archivedDataWithRootObject:requiringSecureCoding:error:
unarchivedObjectClasses
unarchivedObjectOfClasses:fromData:error:
unarchivedObjectFromData:error:
publiclyAccessibleCopy
archivedDataWithError:
initWithCapabilityInfo:
invalidateProvisioningURL
setProvisioningURLInvalid:
_provisioningURLInvalid
_enabled
_currentlyAvailable
_roamingSupported
_roamingEnabled
_emergencySupported
_emergencyCurrentlyAvailable
_provisioningStatus
_provisioningURL
_provisioningPostData
Ti,N,V_provisioningStatus
T@"NSURL",C,N,V_provisioningURL
provisioningURLInvalid
TB,N,GisProvisioningURLInvalid,V_provisioningURLInvalid
T@"NSData",C,N,V_provisioningPostData
enabled
TB,N,GisEnabled,V_enabled
currentlyAvailable
TB,N,GisCurrentlyAvailable,V_currentlyAvailable
roamingSupported
TB,N,GisRoamingSupported,V_roamingSupported
roamingEnabled
TB,N,GisRoamingEnabled,V_roamingEnabled
emergencySupported
TB,N,GisEmergencySupported,V_emergencySupported
emergencyCurrentlyAvailable
TB,N,GisEmergencyCurrentlyAvailable,V_emergencyCurrentlyAvailable
metadataDestinationIDsForCHRecentCalls:
remoteParticipantHandles
normalizedGenericHandleForValue:
handleTypeForCHHandle:
initWithType:value:normalizedValue:
initWithHandle:
metadataDestinationIDsForCHRecentCall:
isActivated
creationDate
expirationDate
groupUUID
invitedHandles
privateKey
pseudonym
publicKey
version
linkLifetimeScope
encodeInteger:forKey:
decodeIntegerForKey:
initWithConversationLinkDescriptor:
isEqualToConversationLinkDescriptor:
initWithGroupUUID:originator:pseudonym:publicKey:
mutableCopyWithZone:
setActivated:
setCreationDate:
setExpirationDate:
setLinkLifetimeScope:
setGroupUUID:
setInvitedHandles:
setName:
setPrivateKey:
setPseudonym:
setPublicKey:
setVersion:
_activated
_version
_creationDate
_expirationDate
_linkLifetimeScope
_groupUUID
_invitedHandles
_name
_privateKey
_pseudonym
_publicKey
activated
TB,N,GisActivated,V_activated
T@"NSDate",&,N,V_creationDate
T@"NSDate",&,N,V_expirationDate
T@"NSUUID",&,N,V_groupUUID
T@"NSSet",C,N,V_invitedHandles
T@"NSString",C,N,V_name
T@"TUConversationLinkOriginator",&,N,V_originator
T@"NSData",C,N,V_privateKey
T@"NSString",C,N,V_pseudonym
T@"NSData",C,N,V_publicKey
Ti,N,V_version
Tq,N,V_linkLifetimeScope
TB,D,N,GisActivated
T@"NSDate",&,D,N
T@"NSUUID",&,D,N
T@"NSSet",C,D,N
T@"NSString",C,D,N
T@"TUConversationLinkOriginator",&,D,N
T@"NSData",C,D,N
Ti,D,N
Tq,D,N
predicateWithFormat:
tu_predicateForConversationLinkDescriptorsWithInvitedHandleValue:
tu_predicateForConversationLinkDescriptorsWithInvitedHandleNormalizedValue:
orPredicateWithSubpredicates:
tu_predicateForConversationLinkDescriptorsWithInvitedHandleType:
andPredicateWithSubpredicates:
tu_predicateForConversationLinkDescriptorsWithOriginatorHandleValue:
tu_predicateForConversationLinkDescriptorsWithOriginatorHandleNormalizedValue:
tu_predicateForConversationLinkDescriptorsWithOriginatorHandleType:
tu_predicateForConversationLinkDescriptorsWithActivated:
tu_predicateForConversationLinkDescriptorsWithCreationDate:
tu_predicateForConversationLinkDescriptorsWithExpirationDate:
tu_predicateForConversationLinkDescriptorsWithExpirationDateAfter:
tu_predicateForConversationLinkDescriptorsWithGroupUUID:
tu_predicateForConversationLinkDescriptorsWithInvitedHandle:
tu_predicateForConversationLinkDescriptorsWithOriginatorHandle:
tu_predicateForConversationLinkDescriptorsWithPseudonym:
tu_predicateForConversationLinkDescriptorsWithPublicKey:
tu_predicateForConversationLinkDescriptorsWithPrivateKey:
sourceVersion
isAVLessCapable
compare:options:
initWithSourceVersion:
_sourceVersion
T@"NSString",R,C,N,V_sourceVersion
avLessCapable
TB,R,N,GisAVLessCapable
initWithIdentifier:
initWithQueue:
dispatchQueue
qosUserInteractiveDispatchBlockForBlock:
UTF8String
dispatcherWithIdentifier:
dispatcherWithQueue:
dispatchSynchronousBlock:
dispatchAsynchronousBlock:
boostQualityOfService
_dispatchQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_dispatchQueue
prewarm
initWithProvider:serialQueue:featureFlags:
setDelegate:
inputDevices
isFollowSystemCameraEnabled
serialQueue
localCameraUID
currentInputDevice
formats
isCenterStageSupported
setCurrentInputDevice:isUserPreferred:
discoverySessionWithDeviceTypes:mediaType:position:
devices
setLocalCameraWithUID:
localVideoAttributes
orientation
_tuOrientationForVideoOrientation:
_videoOrientationForTUOrientation:
setOrientation:
setLocalVideoAttributes:
featureFlags
continuityCaptureEnabled
screenSharingDeskViewEnabled
hasAvailableDeskViewCameras
isPreviewRunning
localVideoLayer:
setLocalVideoLayer:front:
setCurrentVideoEffect:
currentVideoEffect
availableVideoEffects
thumbnailImageForVideoEffectName:
initWithName:thumbnailImage:
shouldIgnoreStartPreview
setWantsPreview:
startPreview
stopPreview
pausePreview
getSnapshot
supportsCameraBlurForDevice:
currentBackgroundBlurControlMode
setCurrentBackgroundBlurControlMode:
isCameraBlurEnabled
setCameraBlurEnabled:
setCameraZoomFactor:
rampCameraZoomFactor:withRate:
beginPIPToPreviewAnimation
position
setCurrentInputDevice:
endPIPToPreviewAnimation
beginPreviewToPIPAnimation
endPreviewToPIPAnimation
portraitScreenAttributes
setRatio:
setLocalScreenAttributes:
landscapeScreenAttributes
currentVideoOrientation
localScreenAttributesForVideoAttributes:
contentsRect
ratio
hasRefreshedPreviewAfterError
code
wantsPreview
setHasRefreshedPreviewAfterError:
valueWithSize:
numberWithBool:
didStartPreview
didPausePreview
didStopPreview
didReceiveFirstPreviewFrameFromCamera:
didReceiveFirstPreviewFrameFromCameraUniqueID:
didChangeLocalCameraUID:
didChangeLocalVideoAttributes:
didChangeLocalScreenAttributes:
didReceiveErrorFromCameraUniqueID:error:
didReceiveCommError
didGetSnapshot:
cameraDidBecomeAvailableForUniqueID:
cameraDidBecomeInterruptedForForUniqueID:reason:
cameraZoomAvailabilityDidChange:
cameraZoomAvailabilityDidChange:currentZoomFactor:maxZoomFactor:
cameraCinematicFramingAvailabilityDidChange:
didStartPreviewForProvider:
didPausePreviewForProvider:
didStopPreviewForProvider:
captureDevicesChangedForProvider:
provider:cameraDidBecomeAvailableForUniqueID:
provider:didChangeLocalVideoAttributes:
provider:didReceiveErrorFromCameraUniqueID:error:
provider:didReceiveFirstPreviewFrameFromCameraUniqueID:
provider:didChangeLocalCameraUID:
provider:cameraZoomAvailabilityDidChange:
provider:cameraBlurEnabledDidChange:
provider:userPreferredCameraUIDDidChange:
provider:didGetSnapshot:
initWithSerialQueue:
currentInputSupportsCinematicFraming
setCurrentVideoOrientation:
setFollowSystemCameraEnabled:
localFrontLayer
setLocalFrontLayer:
localBackLayer
setLocalBackLayer:
supportsCameraBlur
cameraBlurEnabled
noteBeginAnimationToPreview
flipCamera
noteEndAnimationToPreview
noteBeginAnimationToPIP
noteEndAnimationToPIP
setLocalPortraitAspectRatio:localLandscapeAspectRatio:
localScreenContentsRect
localVideoPortraitAspectRatio
localScreenPortraitAspectRatio
localVideoLandscapeAspectRatio
localScreenLandscapeAspectRatio
setIgnoreStartPreview:
_ignoreStartPreview
_wantsPreview
_hasRefreshedPreviewAfterError
_serialQueue
_provider
_featureFlags
T@"NSObject<OS_dispatch_queue>",R,N,V_serialQueue
T@"<TUVideoDeviceControllerProvider><TUVideoEffectsProvider>",R,N,V_provider
T@"<TUFeatureFlags>",R,N,V_featureFlags
TB,N,V_wantsPreview
TB,N,V_hasRefreshedPreviewAfterError
T@"AVCaptureDevice",&,N
Ti,N
previewRunning
TB,R,N,GisPreviewRunning
TB,N
T@"CALayer",&,N
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
T{CGSize=dd},R,N
T@"TUVideoEffect",&,N
followSystemCameraEnabled
TB,N,GisFollowSystemCameraEnabled
ignoreStartPreview
TB,N,GshouldIgnoreStartPreview,V_ignoreStartPreview
characterSetWithCharactersInString:
phoneNumberSeparatorCharacterSet
setSearchComplete:
previousSearchString
setPreviousSearchString:
currentResultsList
setCurrentResultsList:
sharedController
recentCalls
initWithCapacity:
initWithRecentCall:
searchController
setSearchController:
componentsSeparatedByCharactersInSet:
arrayWithCapacity:
callerId
containsString:
backingContact
displayName
initWithTitle:results:
addResultGroup:
searchForString:completion:
cancelSearch
isSearchComplete
searchResults
searchComplete
TB,R,GisSearchComplete
T@"TUSearchResults",R
T@"TUSearchController",W
_searchComplete
_searchController
_currentResultsList
_previousSearchString
T@"NSMutableArray",&,N,V_currentResultsList
T@"NSString",C,N,V_previousSearchString
TB,N,GisSearchComplete,V_searchComplete
T@"TUSearchController",W,V_searchController
givenName
setGivenName:
middleName
setMiddleName:
familyName
setFamilyName:
namePrefix
setNamePrefix:
nameSuffix
setNameSuffix:
nickname
setNickname:
phoneticGivenName
phoneticMiddleName
phoneticFamilyName
setPhoneticRepresentation:
personNameComponents
T@"NSPersonNameComponents",R,C,N
serverWithErrorHandler:
momentCapturedForStreamToken:requesterID:reply:
initWithMachServiceName:options:
userNotificationProviderServerXPCInterface
T@"<TUUserNotificationsProviderXPCServer>",&,N
typedIdentifier
mediaContextIdentifiers
isEqualToActivityContext:
actionDescription
ongoingDescription
completedDescription
initWithContextIdentifier:actionDescription:ongoingDescription:completedDescription:
identifier
isMedia
setTypedIdentifier:
setActionDescription:
setOngoingDescription:
setCompletedDescription:
_typedIdentifier
_actionDescription
_ongoingDescription
_completedDescription
T@"NSString",C,N,V_typedIdentifier
T@"NSString",C,N,V_actionDescription
T@"NSString",C,N,V_ongoingDescription
T@"NSString",C,N,V_completedDescription
media
TB,R,N,GisMedia
attemptToPlaySoundType:
playSystemSoundHandler
attemptToPlayKey:
setPlaySystemSoundHandler:
_playSystemSoundHandler
T@?,C,N,V_playSystemSoundHandler
pullContext
initWithPullContext:
initWithHandoffType:
_type
_pullContext
Tq,R,N,V_type
Tq,R,N,V_pullContext
firstQueryItemWithName:
percentEncodedQueryItems
containsQueryItemWithName:
containsPercentEncodedQueryItemWithName:
sharedInstance
T@"TUDialAssist",R,N
dialAssistUserSettingsChangedToken
_dialAssistUserSettingsChangedToken
Ti,R,N,V_dialAssistUserSettingsChangedToken
UUIDString
isDialAssistSupportedForSubscriptionLabelIdentifier:error:
setObject:forKey:
localSenderIdentityAccountUUID
prioritizedSenderIdentities
accountUUID
isDialAssisted
performLocalDialAssist
initWithType:value:
setHandle:
performDialAssist
contactIdentifier
setDialAssisted:
initWithValue:
_value
T@,R,C,N,V_value
validateNotificationStyles:
handleType
notificationStyles
isEqualToInvitationPreference:
initWithHandleType:notificationStyles:
initWithArray:
invitationPreferencesForAllHandlesWithStyles:
standardInvitationPreferencesForLink
letMeInResponseInvitationPreferences
noNotificationInvitationPreferences
incomingCallInvitationPreferences
T@"NSSet",R,N
_handleType
_notificationStyles
Tq,R,N,V_handleType
Tq,R,N,V_notificationStyles
raise:format:
isEqualToEffect:
thumbnailImage
_thumbnailImage
T@"NSString",R,C,N,V_name
T@"UIImage",R,C,N,V_thumbnailImage
setTuConversationLink:
setTitle:
setPlaceholder:
preferredBaseURL
linkName
initWithTUConversationLink:title:placeholder:
initWithTUConversationLink:
tuConversationLink
placeholder
_tuConversationLink
_title
_placeholder
T@"TUConversationLink",&,N,V_tuConversationLink
T@"NSString",C,N,V_title
T@"NSURL",C,N,V_placeholder
revision
initWithIdentifier:revision:handle:
isEqualToConversationLinkOriginator:
setIdentifier:
setRevision:
_handle
_identifier
_revision
T@"NSString",C,N,V_identifier
T@"TUHandle",&,N,V_handle
Tq,N,V_revision
currentRepeatingAction
beginRepeatingAction:iterations:pauseDurationBetweenIterations:completion:
initWithAction:
setCompletion:
setRemainingIterations:
setPauseDuration:
_beginRepeatingAction:
_stopWithDidFinish:
setCurrentRepeatingAction:
_attemptNextIteration
setPendingRepeatingAction:
isStopped
_hasIterationsRemaining
remainingIterations
setCurrentlyPerformingAction:
setAttemptNextIterationBlock:
pauseDuration
_completeWithDidFinish:
action
setStopped:
attemptNextIterationBlock
isCurrentlyPerformingAction
completion
pendingRepeatingAction
isRunning
beginRepeatingAction:iterations:completion:
stop
_stopped
_currentlyPerformingAction
_currentRepeatingAction
_pendingRepeatingAction
_attemptNextIterationBlock
stopped
TB,N,GisStopped,V_stopped
currentlyPerformingAction
TB,N,GisCurrentlyPerformingAction,V_currentlyPerformingAction
T@"TURepeatingAction",&,N,V_currentRepeatingAction
T@"TURepeatingAction",&,N,V_pendingRepeatingAction
T@?,C,N,V_attemptNextIterationBlock
running
TB,R,N,GisRunning
setAction:
_action
_completion
_remainingIterations
_pauseDuration
T@?,C,N,V_action
T@?,C,N,V_completion
TQ,N,V_remainingIterations
Td,N,V_pauseDuration
discoverabilitySignal
source
initWithIdentifier:bundleID:context:userInfo:
sendEvent:
isSeniorUser
primaryAuthKitAccount
userIsSeniorForAccount:
logTipKitAnalyticsEventNamed:
initWithIdentifier:context:
donateSignalWithCompletion:
_context
T@"NSString",R,N,V_identifier
T@"NSString",R,N,V_context
callHistoryControllerWithCoalescingStrategy:options:
initWithCoalescingStrategy:options:dataSource:
removeObserver:
dispatcher
_callHistoryCoalescingStrategyForCoalescingStrategy:
callHistoryManager
setCoalescingStrategy:
callHistoryManagerRecentCallsDispatchBlock
_updateCallHistoryManagerUsingCurrentOptions
simpleIvarDispatcher
clearDatabase
dataSource
allCallHistoryDeleted
deleteCalls:withCompletion:
arrayWithObject:
recentCallsDeleted:
predicateForCallsWithStatusRead:
markRecentCallsAsReadWithPredicate:
predicateForCallsWithMediaType:
setRead:forCallsWithPredicate:completion:
recentCallsWithPredicate:
setOptions:
bundleForClass:
addDelegate:queue:
dispatcherDidFinishBoost:
addObserver:selector:name:object:
loadDispatchQueue
callProviderManager
isSystemProvider
providersPassingTest:
setThirdPartyCallProviders:
callHistoryManagerInitializationDispatchBlock
callHistoryDatabaseChanged:
removeObserver:name:object:
setCallHistoryManager:
supportsDisplayingFaceTimeAudioCalls
subarrayWithRange:
setRecentCalls:
metadataPreCachedOptions
numberWithUnsignedInteger:
updateMetadataForRecentCalls:
countCallsWithPredicate:
setUnreadCallCount:
thirdPartyCallProviders
supportsAudioOnly
supportsAudioAndVideo
setLimitingCallKinds:
isEqualToArray:
sharedControllerWithCoalescingStrategy:options:
providersChangedForProviderManager:
T@"TUCallHistoryController",R,N
coalescingStrategy
options
unreadCallCount
deleteAllRecentCalls
deleteRecentCall:
deleteRecentCalls:
markRecentCallsAsRead
markRecentVideoCallsAsRead
markRecentAudioCallsAsRead
reloadWithOptions:
setCallProviderManager:
setDispatcher:
setSimpleIvarDispatcher:
setMetadataPreCachedOptions:
_coalescingStrategy
_options
_recentCalls
_unreadCallCount
_callHistoryManager
_callProviderManager
_dispatcher
_simpleIvarDispatcher
_thirdPartyCallProviders
_metadataPreCachedOptions
_dataSource
T@"CHManager",&,N,V_callHistoryManager
T@"TUCallProviderManager",&,N,V_callProviderManager
T@"TUDispatcher",&,N,V_dispatcher
T@"TUDispatcher",&,N,V_simpleIvarDispatcher
T@"NSArray",&,N,V_recentCalls
TQ,N,V_unreadCallCount
T@"NSArray",C,N,V_thirdPartyCallProviders
T@"NSMutableSet",&,N,V_metadataPreCachedOptions
T@"<TUCallHistoryControllerDataSource>",R,N,V_dataSource
TQ,N,V_coalescingStrategy
TQ,N,V_options
descriptorForRequiredKeysForStyle:
phoneNumberStrings
emailAddressStrings
arrayByApplyingSelector:
anyDestinationID
faceTimeQuicklookURL
keysToFetchForFaceTime
T@"NSString",R,N
T@"NSURL",R,N
T@"NSArray",R,N
IDSFormattedDestinationID
allIDSDestinations
setCountLimit:
contactForIdentifier:keysToFetch:
unifiedContactWithIdentifier:keysToFetch:error:
contactForDestinationId:keysToFetch:
normalizedHandleWithDestinationID:
_appearsToBePhoneNumber
phoneNumberWithStringValue:
predicateForContactsMatchingPhoneNumber:
unifiedContactsMatchingPredicate:keysToFetch:error:
predicateForContactsMatchingEmailAddress:
contactForIdentifier:
contactForDestinationId:
telephonyCallSupport
faceTimeAudioCallSupport
faceTimeVideoCallSupport
senderIdentityCapabilities
anyObject
senderIdentityCapabilitiesWithUUID:
canAttemptTelephonyCallsWithoutCellularConnectionWithSenderIdentityCapabilities:
supportsBasebandCalling
supportsDisplayingTelephonyCalls
isDirectTelephonyCallingCurrentlyAvailable
supportsTelephonyRelayCalling
isDirectFaceTimeAudioCallingCurrentlyAvailable
supportsFaceTimeAudioRelayCalling
supportsDisplayingFaceTimeVideoCalls
isDirectFaceTimeVideoCallingCurrentlyAvailable
supportsFaceTimeVideoRelayCalling
isFaceTimeAudioAvailable
isFaceTimeVideoAvailable
areCTCapabilitiesValid
tu_containsObjectPassingTest:
accountsMatchForSecondaryCalling
accountsSupportSecondaryCalling
cloudCallingDevices
tu_anyObjectPassingTest:
supportsRelayCalling
isRelayCallingEnabled
setRelayCallingEnabled:
relayCallingDisabledForDeviceID
isRelayCallingEnabledForDeviceWithID:
setRelayCallingEnabled:forDeviceWithID:
outgoingRelayCallerID
relayCallingAvailability
isEmergencyCallbackModeEnabled
endEmergencyCallbackMode
isEmergencyCallbackPossible
senderIdentityCapabilitiesStateByUUID
setWithCapacity:
dictionaryWithCapacity:
supportsTelephonyCalls
supportsFaceTimeAudioCalls
supportsFaceTimeVideoCalls
_senderIdentityCapabilitiesByUUID
didChangeTelephonyCallingSupport
didChangeFaceTimeAudioCallingSupport
didChangeFaceTimeVideoCallingSupport
didChangeFaceTimeCallingAvailability
didChangeRelayCallingCapabilities
didChangeRelayCallingAvailability
didChangeRelayCallingFeatures
didChangeCloudCallingDevices
didChangeOutgoingRelayCallerID
didChangeEmergencyCallbackMode
didChangeEmergencyCallbackPossible
mutableCopy
didRemoveCapabilitiesForSenderIdentityWithUUID:
didAddCapabilitiesForSenderIdentityWithUUID:
supportsRelayingToOtherDevices
initializeCachedValues
canAttemptEmergencyCallsWithoutCellularConnectionWithUUID:
supportsHostingTelephonyCalls
supportsHostingFaceTimeAudioCalls
supportsHostingFaceTimeVideoCalls
supportsWiFiEmergencyCalling
_sendNotificationsAndCallbacksAfterRunningBlock:
directTelephonyCallingCurrentlyAvailable
TB,R,N,GisDirectTelephonyCallingCurrentlyAvailable
directFaceTimeAudioCallingCurrentlyAvailable
TB,R,N,GisDirectFaceTimeAudioCallingCurrentlyAvailable
directFaceTimeVideoCallingCurrentlyAvailable
TB,R,N,GisDirectFaceTimeVideoCallingCurrentlyAvailable
relayCallingEnabled
TB,N,GisRelayCallingEnabled
T@"NSSet",R,C,N
emergencyCallbackModeEnabled
TB,R,N,GisEmergencyCallbackModeEnabled
emergencyCallbackPossible
TB,R,N,GisEmergencyCallbackPossible
dialRequestTTYTypeForCHRecentCallTTYType:
setClient:
T@"<TUCoreTelephonyClient>",&,N,V_client
initWithDelegate:dataSource:
streamToken
startRequestWithMediaType:forStreamToken:requesteeID:completion:
endRequestWithTransactionID:completion:
requesterID
remoteIDSDestinations
isRemoteMomentsAvailable
capabilitiesByVideoStreamToken
numberWithInteger:
providerByVideoStreamToken
registerStreamToken:requesterID:remoteIDSDestinations:remoteMomentsAvailable:completion:
unregisterStreamToken:completion:
isFaceTimePhotosRestricted
lockdownModeEnabled
isFaceTimePhotosEnabled
tu_defaults
boolForKey:
isFaceTimePhotosEnabledByDefault
registerDefaults:
faceTimePhotosEnabledDeterminer
isInternalInstall
livePhotoXPCServiceEnabled
setBool:forKey:
synchronize
delegate
momentsController:didUpdateCapabilities:forProvider:
momentsController:willCaptureRemoteRequestFromIdentifier:
momentsController:didReceiveLocallyRequestedMomentDescriptor:
processName
initWithURL:
setSandboxExtensionClass:
processIdentifier
setPid:
setFaceTimePhotosEnabledDeterminer:
isFaceTimePhotosXPCServiceEnabled
setFaceTimePhotosEnabled:
dataSource:didUpdateCapabilities:forVideoStreamToken:
dataSource:willCaptureRemoteRequestFromRequesterID:
dataSource:didReceiveLocallyRequestedMomentDescriptor:
dataSource:requestSandboxExtensionForURL:reply:
serverDiedForDataSource:
faceTimePhotosEnabledByDefault
TB,R,N,GisFaceTimePhotosEnabledByDefault
T@?,C,N
faceTimePhotosEnabled
TB,N,GisFaceTimePhotosEnabled
faceTimePhotosRestricted
TB,R,N,GisFaceTimePhotosRestricted
faceTimePhotosXPCServiceEnabled
TB,R,N,GisFaceTimePhotosXPCServiceEnabled
initWithDelegate:
startRequestWithMediaType:forProvider:requesteeID:completion:
registerProvider:completion:
unregisterProvider:completion:
capabilitiesForProvider:
setLockdownModeEnabled:
_delegate
_capabilitiesByVideoStreamToken
_providerByVideoStreamToken
_lockdownModeEnabled
T@"<TUMomentsControllerDataSource>",R,N,V_dataSource
T@"<TUMomentsControllerDelegate>",R,W,N,V_delegate
T@"NSMutableDictionary",R,N,V_capabilitiesByVideoStreamToken
T@"NSMutableDictionary",R,N,V_providerByVideoStreamToken
T@?,C,N,V_lockdownModeEnabled
playSound:iterations:pauseDurationBetweenIterations:
playSound:iterations:pauseDurationBetweenIterations:completion:
stopPlaying
setSoundID:
soundID
repeatingActor
isPlaying
playSound:
playSoundIndefinitely:pauseDurationBetweenIterations:
_soundID
_repeatingActor
T@"TURepeatingActor",R,N,V_repeatingActor
TI,N,V_soundID
playing
TB,R,N,GisPlaying
loadHandles
stringForKey:
appleCareHandles
contains:
_appleCareHandles
T@"NSSet",R,C,N,V_appleCareHandles
_handleCallStatusChangedNotification:
object
isFaceTimeProvider
isActive
registerForMutedTalkerNotification
audioDeviceControllerMutedTalkerDidStart:
audioDeviceControllerMutedTalkerDidEnd:
registerForMutedTalkerNotifications:
audioDeviceControllerDeviceListChanged:
unregisterFromMutedTalkerNotifications
audioClient
setMixingVoiceWithMediaEnabled:
setAudioSessionProperties:
currentOutputDevice
outputDevices
setCurrentAudioInputDeviceToDeviceWithUID:
setCurrentAudioOutputDeviceToDeviceWithUID:
notifyDelegatesOfDeviceListChange
setMixesVoiceWithMedia:
setMediaPlaybackOnExternalDevice:
setCurrentOutputDevice:
setFollowsSystemInputSetting:
setFollowsSystemOutputSetting:
setAudioClient:
setSerialQueue:
setDelegates:
setActionsDelegate:
_audioClient
T@"AVAudioClient",&,N,V_audioClient
T@"NSObject<OS_dispatch_queue>",&,N,V_serialQueue
T@"NSHashTable",&,N,V_delegates
T@"<TUAudioDeviceControllerActions>",W,N,V_actionsDelegate
T@"AVAudioDevice",&,N
sessionUUID
sessionEventType
actionURL
item
queueItemType
isEqualToConversationNotice:
session
initWithUUID:
setSessionEventType:
T@"NSUUID",R,N
Tq,N
setSessionUUID:
setActionURL:
setItem:
setQueueItemType:
setSession:
_sessionEventType
_sessionUUID
_actionURL
_item
_queueItemType
_session
T@"NSUUID",&,N,V_sessionUUID
T@"NSURL",&,N,V_actionURL
T@"NSString",C,N,V_item
Tq,N,V_queueItemType
T@"TUConversationActivitySession",&,N,V_session
T@"NSUUID",R,N,V_UUID
Tq,N,V_sessionEventType
initWithIdentifier:handle:senderCorrelationIdentifier:
initWithIdentifier:handle:
activeIDSDestination
isAudioEnabled
audioPriority
avcIdentifier
capabilities
isMomentsAvailable
isMuted
isScreenEnabled
screenToken
captionsToken
isVideoEnabled
videoPriority
isAudioPaused
isRemoteAudioEnabled
isRemoteVideoEnabled
isLocalAccountHandle
audioVideoMode
association
isLightweight
isGuestModeEnabled
senderCorrelationIdentifier
initWithConversationParticipant:
isEqualToParticipant:
isEqualToHandle:
setMuted:
setAudioVideoMode:
setAudioEnabled:
setVideoEnabled:
setScreenEnabled:
setAudioPaused:
setMomentsAvailable:
setLightweight:
setCapabilities:
setStreamToken:
setScreenToken:
setCaptionsToken:
setAudioPriority:
setVideoPriority:
setAvcIdentifier:
setRemoteAudioEnabled:
setRemoteVideoEnabled:
setActiveIDSDestination:
setLocalAccountHandle:
setAssociation:
setGuestModeEnabled:
_muted
_audioEnabled
_videoEnabled
_screenEnabled
_audioPaused
_momentsAvailable
_lightweight
_remoteAudioEnabled
_remoteVideoEnabled
_localAccountHandle
_guestModeEnabled
_audioVideoMode
_capabilities
_streamToken
_screenToken
_captionsToken
_audioPriority
_videoPriority
_avcIdentifier
_activeIDSDestination
_association
_senderCorrelationIdentifier
muted
TB,N,GisMuted,V_muted
audioEnabled
TB,N,GisAudioEnabled,V_audioEnabled
videoEnabled
TB,N,GisVideoEnabled,V_videoEnabled
screenEnabled
TB,N,GisScreenEnabled,V_screenEnabled
audioPaused
TB,N,GisAudioPaused,V_audioPaused
momentsAvailable
TB,N,GisMomentsAvailable,V_momentsAvailable
lightweight
TB,N,GisLightweight,V_lightweight
localAccountHandle
TB,N,GisLocalAccountHandle,V_localAccountHandle
guestModeEnabled
TB,N,GisGuestModeEnabled,V_guestModeEnabled
TQ,N,V_audioVideoMode
Tq,N,V_streamToken
Tq,N,V_screenToken
Tq,N,V_captionsToken
Tq,N,V_audioPriority
Tq,N,V_videoPriority
T@"NSString",C,N,V_avcIdentifier
T@"NSString",C,N,V_activeIDSDestination
T@"TUConversationParticipantCapabilities",C,N,V_capabilities
remoteAudioEnabled
TB,N,GisRemoteAudioEnabled,V_remoteAudioEnabled
remoteVideoEnabled
TB,N,GisRemoteVideoEnabled,V_remoteVideoEnabled
T@"TUConversationParticipantAssociation",C,N,V_association
TQ,R,N,V_identifier
T@"TUHandle",R,C,N,V_handle
T@"NSString",R,C,N,V_senderCorrelationIdentifier
TQ,D,N
T@"TUHandle",C,D,N
TB,D,N,GisMuted
TB,D,N,GisAudioEnabled
TB,D,N,GisVideoEnabled
TB,D,N,GisScreenEnabled
TB,D,N,GisMomentsAvailable
T@"TUConversationParticipantCapabilities",C,D,N
TB,N,GisLightweight
TB,D,N,GisRemoteAudioEnabled
TB,D,N,GisRemoteVideoEnabled
T@"TUConversationParticipantAssociation",C,D,N
TB,D,N,GisGuestModeEnabled
remoteCameraOrientation
localVideoContextSlotIdentifier
remoteVideoContextSlotIdentifier
isEqualToVideoCallAttributes:
setRemoteCameraOrientation:
setLocalVideoContextSlotIdentifier:
setRemoteVideoContextSlotIdentifier:
_remoteCameraOrientation
_localVideoContextSlotIdentifier
_remoteVideoContextSlotIdentifier
Tq,N,V_remoteCameraOrientation
Tq,N,V_localVideoContextSlotIdentifier
Tq,N,V_remoteVideoContextSlotIdentifier
mostRecentCallType
recentCall
callerIdSubStringForDisplay
forwardingTargetForSelector:
callerIdForDisplay
callerNameForDisplay
contactStore
domain
addressBookRecordId
destinationId
serviceProvider
mediaType
callStatus
backingContactId
backingContactIdentifier
handles
mostRecentCallWasMissed
T@"NSString",R
T@"CNContact",R
T@"NSArray",R
Tq,R
idsCanonicalDestinations
mostRecentCallInfo
setRecentCall:
_recentCall
T@"CHRecentCall",&,N,V_recentCall
T@"NSString",R,D
isA2DPRoute
setA2DPRoute:
isAirTunes
setAirTunes:
isBluetooth
setBluetooth:
bluetoothEndpointType
setBluetoothEndpointType:
isBluetoothLE
setBluetoothLE:
isBluetoothManaged
setBluetoothManaged:
isCarAudio
setCarAudio:
setCurrentlyPicked:
isDefaultRoute
setDefaultRoute:
deviceType
setDeviceType:
isGuest
setGuest:
identifiersOfOtherConnectedDevices
setIdentifiersOfOtherConnectedDevices:
isInEarDetectionEnabled
setInEarDetectionEnabled:
isInEarDetectionSupported
setInEarDetectionSupported:
isPreferred
setPreferred:
isPreferredAndActive
setPreferredAndActive:
setReceiver:
setSpeaker:
supportsRelay
setSupportsRelay:
setUniqueIdentifier:
isWiredHeadphones
setWiredHeadphones:
isWiredHeadset
setWiredHeadset:
isWirelessHeadset
setWirelessHeadset:
isPartnerRouteRoutable
setPartnerRouteRoutable:
isSiblingRoutePresent
setSiblingRoutePresent:
supportsSharePlay
setSupportsSharePlay:
isTipiParticipant
initWithRoute:
supportsHighQualityVoiceWithMedia
isTriangleParticipant
isCarKitRoute
customDescription
isEqualToRoute:
initWithUniqueIdentifier:name:
isHomePodFamily
isAirPodsRoute
isInEarDetected
supportsPreferredAndActive
setSupportsHighQualityVoiceWithMedia:
_A2DPRoute
_currentlyPicked
_defaultRoute
_receiver
_speaker
_wiredHeadphones
_wiredHeadset
_wirelessHeadset
_airTunes
_carAudio
_guest
_bluetooth
_bluetoothLE
_bluetoothManaged
_inEarDetectionEnabled
_inEarDetectionSupported
_preferred
_preferredAndActive
_partnerRouteRoutable
_siblingRoutePresent
_supportsHighQualityVoiceWithMedia
_supportsSharePlay
_supportsRelay
_uniqueIdentifier
_deviceType
_bluetoothEndpointType
_identifiersOfOtherConnectedDevices
A2DPRoute
TB,N,GisA2DPRoute,V_A2DPRoute
airTunes
TB,N,GisAirTunes,V_airTunes
carAudio
TB,N,GisCarAudio,V_carAudio
currentlyPicked
TB,N,GisCurrentlyPicked,V_currentlyPicked
bluetooth
TB,N,GisBluetooth,V_bluetooth
Tq,N,V_bluetoothEndpointType
bluetoothLE
TB,N,GisBluetoothLE,V_bluetoothLE
bluetoothManaged
TB,N,GisBluetoothManaged,V_bluetoothManaged
defaultRoute
TB,N,GisDefaultRoute,V_defaultRoute
Tq,N,V_deviceType
guest
TB,N,GisGuest,V_guest
T@"NSArray",C,N,V_identifiersOfOtherConnectedDevices
inEarDetectionEnabled
TB,N,GisInEarDetectionEnabled,V_inEarDetectionEnabled
inEarDetectionSupported
TB,N,GisInEarDetectionSupported,V_inEarDetectionSupported
preferred
TB,N,GisPreferred,V_preferred
preferredAndActive
TB,N,GisPreferredAndActive,V_preferredAndActive
receiver
TB,N,GisReceiver,V_receiver
speaker
TB,N,GisSpeaker,V_speaker
TB,N,V_supportsHighQualityVoiceWithMedia
TB,N,V_supportsRelay
T@"NSString",C,N,V_uniqueIdentifier
wiredHeadphones
TB,N,GisWiredHeadphones,V_wiredHeadphones
wiredHeadset
TB,N,GisWiredHeadset,V_wiredHeadset
wirelessHeadset
TB,N,GisWirelessHeadset,V_wirelessHeadset
partnerRouteRoutable
TB,N,GisPartnerRouteRoutable,V_partnerRouteRoutable
siblingRoutePresent
TB,N,GisSiblingRoutePresent,V_siblingRoutePresent
TB,N,V_supportsSharePlay
carKitRoute
TB,R,N,GisCarKitRoute
homePodFamily
TB,R,N,GisHomePodFamily
inEarDetected
TB,R,N,GisInEarDetected
tipiParticipant
TB,R,N,GisTipiParticipant
triangleParticipant
TB,R,N,GisTriangleParticipant
TB,D,N,GisCurrentlyPicked
TB,D,N,GisDefaultRoute
TB,D,N,GisReceiver
TB,D,N,GisSpeaker
TB,D,N,GisWiredHeadphones
TB,D,N,GisWiredHeadset
TB,D,N,GisWirelessHeadset
TB,D,N,GisAirTunes
TB,D,N,GisCarAudio
TB,D,N,GisGuest
TB,D,N,GisBluetooth
TB,D,N,GisBluetoothLE
TB,D,N,GisBluetoothManaged
TB,D,N,GisInEarDetectionEnabled
TB,D,N,GisInEarDetectionSupported
TB,D,N,GisPreferred
TB,D,N,GisPreferredAndActive
T@"NSArray",C,D,N
TB,D,N
initWithDataSource:
registerForCallbacksForProvider:completionHandler:
initWithConfiguration:
registerConversationProvider:completionHandler:
conversationProviderForIdentifier:completionHandler:
generatePseudonymHandleForConversationProvider:expiryDuration:URI:completionHandler:
renewPseudonymHandle:forConversationProvider:expirationDate:completionHandler:
revokePseudonymHandle:forConversationProvider:completionHandler:
doesHandle:correspondToConversationProvider:completionHandler:
registerConversationProviderForConfiguration:completionHandler:
T@"<TUConversationProviderManagerDataSource>",R,N,V_dataSource
setAutocompleteResult:
autocompleteResult
address
initWithAutocompleteResult:
_autocompleteResult
T@"CNAutocompleteResult",&,N,V_autocompleteResult
pluginName
isEqualToConversationVirtualParticipant:
initWithIdentifier:pluginName:
decodeInt64ForKey:
encodeInt64:forKey:
_pluginName
T@"NSString",R,N,V_pluginName
initWithUUID:groupUUID:
setState:
setLetMeInRequestState:
setParticipantHandles:
setRemoteMembers:
setPendingMembers:
setKickedMembers:
setRejectedMembers:
setOtherInvitedHandles:
setLightweightMembers:
setActiveRemoteParticipants:
setActiveLightweightParticipants:
setActivitySessions:
setVirtualParticipants:
setInvitationPreferences:
setSystemActivitySessions:
unknownProvider
initWithUUID:groupUUID:provider:
defaultAVMode
messagesGroupName
link
initWithContactsDataSource:
remoteMembers
localMember
isLightweightMember
lightweightPrimary
isEquivalentToHandle:
vouchingEnabled
validationSource
isPrimary
executeFetchRequest:
numberFormatter
stringFromNumber:
messagesGroupUUID
activeRemoteParticipants
avMode
supportsAVMode:
supportsMediaType:
avLessSharePlayEnabled
activitySessions
activity
joinedActivitySession
setAvMode:
setNumberStyle:
lightweightMembers
invitationPreferences
shouldShowInvitationOfStyles:forHandle:defaultValue:
stagedActivitySession
avcSessionIdentifier
avcSessionToken
isBackedByGroupSession
hasJoined
initiator
kickedMembers
rejectedMembers
otherInvitedHandles
hasReceivedLetMeInRequest
letMeInRequestState
ignoreLMIRequests
isLocallyCreated
localParticipantIdentifier
localParticipantAssociation
isOneToOneHandoffOngoing
handoffEligibility
maxVideoDecodesAllowed
isOneToOneModeEnabled
participantHandles
pendingMembers
report
isVideoPaused
virtualParticipants
activeLightweightParticipants
isFromStorage
isAnyOtherAccountDeviceActive
isMirageEnabled
decodeArrayOfObjectsOfClass:forKey:
systemActivitySessions
isPendingConversation
selectiveSharingSessionUUID
initWithConversation:
isEqualToConversation:
emptyConversationWithGroupUUID:
messagesGroupPhotoData
resolvedAudioVideoMode
setSupportedMediaTypes:
eligibleForDowngradeToAVModeNoneFromUI
hasJoinedActivitySession
isRepresentedByRemoteMembers:andLink:
isVideo
setVideo:
remoteParticipantForLightweightParticipantHandle:
shouldShowInvitationUserNotificationForHandle:
shouldShowInvitationRingingUIForHandle:
shouldShowInvitationRingingUIForAnyHandleType
contactNamesByHandleWithContactsDataSource:
setLink:
setHasReceivedLetMeInRequest:
setLocallyCreated:
setReport:
setStagedActivitySession:
setProvider:
setAvcSessionToken:
setAvcSessionIdentifier:
setVideoPaused:
setHasJoined:
setIsAnyOtherAccountDeviceActive:
setPendingConversation:
setLocalMember:
setLocalParticipantIdentifier:
setLocalParticipantAssociation:
setOneToOneHandoffOngoing:
setHandoffEligibility:
setIgnoreLMIRequests:
setMessagesGroupUUID:
setInitiator:
setMessagesGroupName:
setMaxVideoDecodesAllowed:
reportingHierarchyToken
setReportingHierarchyToken:
reportingHierarchySubToken
setReportingHierarchySubToken:
setOneToOneModeEnabled:
setBackedByGroupSession:
setFromStorage:
setSelectiveSharingSessionUUID:
setMirageEnabled:
conversationFailureContext
setConversationFailureContext:
setFeatureFlags:
_hasReceivedLetMeInRequest
_locallyCreated
_videoPaused
_hasJoined
_isAnyOtherAccountDeviceActive
_pendingConversation
_oneToOneHandoffOngoing
_ignoreLMIRequests
_oneToOneModeEnabled
_backedByGroupSession
_fromStorage
_mirageEnabled
_avMode
_link
_letMeInRequestState
_participantHandles
_remoteMembers
_pendingMembers
_kickedMembers
_rejectedMembers
_lightweightMembers
_otherInvitedHandles
_activeRemoteParticipants
_activeLightweightParticipants
_report
_activitySessions
_stagedActivitySession
_avcSessionToken
_avcSessionIdentifier
_localMember
_localParticipantIdentifier
_localParticipantAssociation
_handoffEligibility
_messagesGroupUUID
_initiator
_messagesGroupName
_maxVideoDecodesAllowed
_reportingHierarchyToken
_reportingHierarchySubToken
_systemActivitySessions
_virtualParticipants
_invitationPreferences
_selectiveSharingSessionUUID
_conversationFailureContext
T@"NSArray",C,N,V_supportedMediaTypes
T@"TUConversationLink",&,N,V_link
Tq,N,V_state
Tq,N,V_letMeInRequestState
TB,N,V_hasReceivedLetMeInRequest
Tq,N,V_avcSessionToken
T@"NSString",C,N,V_avcSessionIdentifier
videoPaused
TB,N,GisVideoPaused,V_videoPaused
TQ,N,V_avMode
locallyCreated
TB,N,GisLocallyCreated,V_locallyCreated
TB,N,GhasJoined,V_hasJoined
TB,N,V_isAnyOtherAccountDeviceActive
pendingConversation
TB,N,GisPendingConversation,V_pendingConversation
T@"TUConversationMember",&,N,V_localMember
TQ,N,V_localParticipantIdentifier
T@"TUConversationParticipantAssociation",&,N,V_localParticipantAssociation
oneToOneHandoffOngoing
TB,N,GisOneToOneHandoffOngoing,V_oneToOneHandoffOngoing
T@"TUConversationHandoffEligibility",&,N,V_handoffEligibility
T@"NSSet",C,N,V_remoteMembers
T@"NSSet",C,N,V_pendingMembers
T@"NSSet",C,N,V_kickedMembers
T@"NSSet",C,N,V_rejectedMembers
T@"NSSet",C,N,V_lightweightMembers
T@"NSSet",C,N,V_otherInvitedHandles
TB,N,V_ignoreLMIRequests
T@"NSUUID",&,N,V_messagesGroupUUID
T@"NSSet",C,N,V_participantHandles
T@"NSSet",C,N,V_activeRemoteParticipants
T@"NSSet",C,N,V_activeLightweightParticipants
T@"TUHandle",&,N,V_initiator
T@"NSString",C,N,V_messagesGroupName
Tq,N,V_maxVideoDecodesAllowed
T@"NSObject",&,N,V_reportingHierarchyToken
T@"NSObject",&,N,V_reportingHierarchySubToken
T@"TUConversationReport",C,N,V_report
oneToOneModeEnabled
TB,N,GisOneToOneModeEnabled,V_oneToOneModeEnabled
backedByGroupSession
TB,N,GisBackedByGroupSession,V_backedByGroupSession
T@"NSSet",C,N,V_activitySessions
T@"NSSet",C,N,V_systemActivitySessions
T@"TUConversationActivitySession",C,N,V_stagedActivitySession
T@"NSSet",C,N,V_virtualParticipants
T@"NSSet",C,N,V_invitationPreferences
fromStorage
TB,N,GisFromStorage,V_fromStorage
T@"NSUUID",&,N,V_selectiveSharingSessionUUID
mirageEnabled
TB,N,GisMirageEnabled,V_mirageEnabled
T@,&,N,V_conversationFailureContext
T@"TUConversationProvider",&,N,V_provider
T@"<TUFeatureFlags>",&,N,V_featureFlags
TQ,R,N
T@"TUConversationLink",&,D,N
TB,D,N,GisLocallyCreated
TB,D,N,GhasJoined
video
TB,D,N,GisVideo
T@"TUConversationMember",&,D,N
T@"TUHandle",&,D,N
T@"NSObject",&,D,N
T@"TUConversationReport",C,D,N
TB,D,N,GisOneToOneModeEnabled
T@"TUConversationParticipantAssociation",&,D,N
TB,D,N,GisOneToOneHandoffOngoing
T@"TUConversationHandoffEligibility",&,D,N
TB,D,N,GisBackedByGroupSession
TB,D,N,GisMirageEnabled
T@"<TUFeatureFlags>",&,D,N
isEligible
isUplinkMuted
isSendingVideo
conversationGroupUUID
originatingDeviceType
initWithHandoffEligibility:
isEqualToHandoffEligibility:
localizedDeviceCategory
setEligible:
setUplinkMuted:
setSendingVideo:
setConversationGroupUUID:
setOriginatingDeviceType:
_eligible
_uplinkMuted
_sendingVideo
_conversationGroupUUID
_originatingDeviceType
eligible
TB,N,GisEligible,V_eligible
uplinkMuted
TB,N,GisUplinkMuted,V_uplinkMuted
sendingVideo
TB,N,GisSendingVideo,V_sendingVideo
T@"NSUUID",&,N,V_conversationGroupUUID
T@"TUConversationParticipantAssociation",&,N,V_association
T@"NSString",&,N,V_originatingDeviceType
initWithCalls:
enumerateCallsWithOptions:invokingBlock:forCallsPassingTest:
calls
isPTT
enumerateObjectsWithOptions:usingBlock:
isHostedOnCurrentDevice
isEndpointOnCurrentDevice
status
isConferenced
dateConnected
compare:
enumerateCallsInvokingBlock:forCallsPassingTest:
callsPassingTest:
isConversation
conferenceCall
sortedArrayUsingComparator:
callGroupUUID
callPassingTest:withOptions:
callPassingTest:
incomingVideoCall
activeVideoCall
currentVideoCalls
lastObject
uniqueProxyIdentifier
callUUID
callPassingTest:sortedUsingComparator:
currentCallCount
incomingCall
callWithStatus:
currentAudioAndVideoCallCount
audioOrVideoCallWithStatus:
currentCalls
callDuration
countOfCallsPassingTest:
anyCallPassesTest:
service
allCallsPassTest:
currentAudioAndVideoCalls
_callGroupsFromCalls:
callsOnDefaultPairedDevice
conferenceParticipantCalls
removeObjectsInArray:
initWithCall:
callsWithStatus:
audioAndVideoCallsWithStatus:
callsWithGroupUUID:
videoCallWithStatus:
callWithUniqueProxyIdentifier:
callWithCallUUID:
displayedCallFromCalls:
allCallsAreOfService:
incomingCalls
displayedCalls
displayedAudioAndVideoCalls
callsHostedElsewhere
callsWithAnEndpointElsewhere
callsHostedOrAnEndpointElsewhere
currentVideoCall
currentVideoCallCount
callCountOnDefaultPairedDevice
hasCurrentCalls
hasCurrentAudioCalls
hasCurrentVideoCalls
anyCallIsHostedOnCurrentDevice
anyCallIsEndpointOnCurrentDevice
currentCallGroups
currentAudioAndVideoCallGroups
callGroupsOnDefaultPairedDevice
T@"TUCall",R,N
_allCalls
displayedCall
frontmostCall
frontmostAudioOrVideoCall
existingCallsHaveMultipleProviders
setCalls:
_calls
T@"NSArray",C,N,V_calls
setStyle:
currentDeviceFamily
setDeviceFamily:
defaultDisplayScale
setDisplayScale:
defaultScaleFactor
setScaleFactor:
valueWithRect:
setOriginalResolution:
deviceFamily
style
displayScale
scaleFactor
displayID
frameRate
isWindowed
windowUUID
originalResolution
isEqualToScreenShareAttributes:
defaultAttributes
isSignificantChangeFromAttributes:
setFrameRate:
setDisplayID:
setWindowed:
setWindowUUID:
T@"NSNumber",&,N
T@"NSValue",&,N
windowed
TB,N,GisWindowed
T@"NSUUID",&,N
Tq,R,N
T@"NSNumber",R,C,N
_windowed
_deviceFamily
_style
_displayScale
_scaleFactor
_frameRate
_displayID
_originalResolution
_windowUUID
Tq,N,V_deviceFamily
Tq,N,V_style
T@"NSNumber",&,N,V_displayScale
T@"NSNumber",&,N,V_scaleFactor
T@"NSNumber",&,N,V_frameRate
T@"NSNumber",&,N,V_displayID
T@"NSValue",&,N,V_originalResolution
TB,N,GisWindowed,V_windowed
T@"NSUUID",&,N,V_windowUUID
initWithDomain:code:userInfo:
initWithKeyOptions:valueOptions:capacity:
ensureConnection
_osStateDictionary
dataWithPropertyList:format:options:error:
getBytes:length:
sharedKeySetForKeys:
dictionaryWithSharedKeySet:
plistRepresentation
approvalDelegate
removeObjectForKey:
xpcClient
registerApprovalClientEnabled:
willChangeValueForKey:
didChangeValueForKey:
nearbyTVs
minusSet:
unionSet:
neighborhoodActivityConduit:tvDeviceDisappeared:
neighborhoodActivityConduit:tvDeviceAppeared:
_forEachDelegate:
nearbyTVDevicesWithCompletion:
setActiveSplitSessionTV:
neighborhoodActivityConduit:splitSessionStarted:
activeSplitSessionTVDeviceWithCompletion:
keyEnumerator
conversationManager
activeConversations
knownIdentifiersByHandleType
inviteTVDevice:toConversationWithUUID:completion:
disconnectTVDevice:completion:
_findConversationForUUID:
_requestInitialState
neighborhoodActivityConduit:splitSessionEnded:
approveSplitSessionForConversation:requestedFromDevice:pullContext:completion:
cancelSplitSessionApproval
connectionEstablishedForClient:
tvDeviceAppeared:
tvDeviceDisappeared:
splitSessionStarted:
splitSessionEnded:
approveSplitSessionForConversation:device:pullContext:completion:
initWithConversationManager:
setApprovalDelegate:
_grouped:forEachDelegate:
nearbyTVDeviceHandles
nearbyTVDevices
inviteTVDevice:toConversation:completion:
nearbyTVDevice:isCapableOfHandoffForConversation:
activeSplitSessionTV
stateHandle
setStateHandle:
_approvalDelegate
_activeSplitSessionTV
_nearbyTVs
_xpcClient
_conversationManager
_stateHandle
T@"NSMapTable",&,N,V_delegates
T@"NSMutableSet",R,N,V_nearbyTVs
T@"TUNearbyDeviceHandle",&,N,V_activeSplitSessionTV
T@"TUNeighborhoodActivityConduitXPCClient",R,N,V_xpcClient
T@"TUConversationManager",R,N,V_conversationManager
TQ,N,V_stateHandle
T@"<TUNeighborhoodActivityConduitApprovalDelegate>",W,N,V_approvalDelegate
T@"NSDictionary",R,N
tu_contactStoreConfigurationForBundleIdentifier:
tu_contactStoreConfigurationForCall:
sharedAVSystemController
sharedSystemController
setAttribute:forKey:error:
_handlePickableRoutesDidChangeNotification:
_handleVolumeDidChangeNotification:
_handleUplinkMuteDidChangeNotification:
_mediaServicesWereReset:
_updateCachedState
isDownlinkMuted
isTTY
pickableRoutesForTTY
_pickableRoutesForPhoneCallWithForceNewRequest:
_pickableRoutesForPlayAndRecordVideoWithForceNewRequest:
_pickableRoutesForPlayAndRecordVoiceWithForceNewRequest:
_pickableRoutesForPlayAndRecordRemoteVoiceWithForceNewRequest:
_pickableRoutesForVoiceMailWithForceNewRequest:
_pickableRoutesForTTYWithForceNewRequest:
getActiveCategoryVolume:andName:
setActiveCategoryVolumeTo:
attributeForKey:
isEqualToNumber:
initWithBool:
filteredPickableRoutesFromPickableRoutes:
hasActiveAudioSession
pickableRoutesForActiveCall
pickableRoutesForCategory:
pickableRoutesForCategory:andMode:
_getPickableRoutesForCategory:mode:onlyKnownCombinations:completion:
isPhoneCallAudioCategory:
bestGuessPickableRoutesForAnyCall
_loadCurrentPickableRoutesWithCompletion:
route
overrideToPartnerRoute
initWithDictionary:
sharedAudioSystemController
sourceIdentifierForRouteID:
T@"TUAudioSystemController",R,N
_handleDownlinkMuteDidChangeNotification:
activeCategoryVolume
triggerEndInterruptionForAudioSessionID:
setActiveCategoryVolume:
setDownlinkMuted:
pickedRouteAttribute
currentlyPickedRouteIdForCategory:andMode:
getPickableRoutesForCategory:mode:completion:
pickRoute:error:
switchBluetoothAudioFormats
pickableRouteWithUniqueIdentifier:
shouldSuppressCallUsingRoute:
otherSessionsRequestNoRingtoneInterruption
_uplinkMutedQueue
_downlinkMutedQueue
_ttyQueue
_pickableRoutesQueue
_isUplinkMutedCached
_isDownlinkMutedCached
_isTTYCached
_pickableRoutesForTTY
_pickableRoutesForPhoneCall
_pickableRoutesForPlayAndRecordVideo
_pickableRoutesForPlayAndRecordVoice
_pickableRoutesForPlayAndRecordRemoteVoice
_pickableRoutesForVoicemail
_currentPickableRoutes
_isRequestingUplinkMuted
_isRequestingDownlinkMuted
_isRequestingTTY
_isRequestingPickableRoutesForTTY
_isRequestingPickableRoutesForPhoneCall
_isRequestingPickableRoutesForPlayAndRecordVideo
_isRequestingPickableRoutesForPlayAndRecordVoice
_isRequestingPickableRoutesForPlayAndRecordRemoteVoice
_isRequestingPickableRoutesForVoicemail
_lastUplinkMutedRequestScheduleTime
_lastDownlinkMutedRequestScheduleTime
_lastTTYRequestScheduleTime
_lastTTYPickableRoutesScheduleTime
_lastPhoneCallCategoryRoutesScheduleTime
_lastPlayAndRecordVideoRoutesScheduleTime
_lastPlayAndRecordVoiceRoutesScheduleTime
_lastPlayAndRecordRemoteVoiceRoutesScheduleTime
_lastVoicemailRoutesScheduleTime
T@"<TUAudioSystemControllerDelegate>",W,N,V_delegate
Tf,N
TB,N,GisUplinkMuted
downlinkMuted
TB,N,GisDownlinkMuted
TB,R,N,GisTTY
T@"NSDictionary",R,C,N
weakToStrongObjectsMapTable
_retrieveState
registerClient:
callCapabilitiesServerXPCInterface
callCapabilitiesClientXPCInterface
remoteObjectProxy
delegateToQueue
unregisterClient:
_updateState:
callCapabilitiesState:
capabilityStateUpdated:
T@"<TUCallCapabilitiesXPCServer>",&,N
token
_token
_delegateToQueue
Ti,R,N,V_token
T@"NSMapTable",R,N,V_delegateToQueue
T@"TUCallCapabilitiesState",&,N,V_state
initWithHandle:nickname:joinedFromLetMeIn:
canonicalHandleForISOCountryCode:
initWithHandles:
initWithContact:additionalHandles:
isValidated
lightweightPrimaryParticipantIdentifier
joinedFromLetMeIn
dateReceivedLetMeIn
dateInitiatedLetMeIn
isOtherInvitedHandle
associationVoucher
idsDestination
setIsLightweightMember:
setLightweightPrimary:
destinationIdIsPseudonym
isEqualToMember:
setIsOtherInvitedHandle:
setDateReceivedLetMeIn:
setDateInitiatedLetMeIn:
setLightweightPrimaryParticipantIdentifier:
setValidationSource:
setAssociationVoucher:
initWithHandle:nickname:
initWithContact:
initWithDestination:
initWithDestinations:
idsFromID
idsDestinations
representsSameMemberAs:
setIsSplitSessionMember:
isSplitSessionMember
setSplitSessionPrimary:
splitSessionPrimary
setJoinedFromLetMeIn:
_isLightweightMember
_joinedFromLetMeIn
_isOtherInvitedHandle
_nickname
_validationSource
_dateReceivedLetMeIn
_dateInitiatedLetMeIn
_lightweightPrimary
_lightweightPrimaryParticipantIdentifier
_associationVoucher
T@"NSString",C,N,V_nickname
TB,N,V_joinedFromLetMeIn
TB,N,V_isOtherInvitedHandle
Tq,N,V_validationSource
T@"TUConversationMemberAssociation",C,N,V_association
T@"TUVoucher",&,N,V_associationVoucher
T@"TUHandle",R,N,V_handle
validated
TB,R,N,GisValidated
TB,N,V_isLightweightMember
T@"NSDate",N,V_dateReceivedLetMeIn
T@"NSDate",N,V_dateInitiatedLetMeIn
T@"TUHandle",C,N
T@"TUHandle",C,N,V_lightweightPrimary
TQ,N,V_lightweightPrimaryParticipantIdentifier
initWithNotificationName:queue:callback:
_endObserving
notificationName
callback
setToken:
beginObserving
endObserving
setCallback:
isObserving
observing
TB,R,N,GisObserving
initWithNotificationName:queue:
lock
setNotificationName:
_lock
_callback
_notificationName
T{os_unfair_lock_s=I},R,N,V_lock
T@"NSString",C,N,V_notificationName
Ti,N,V_token
T@?,C,N,V_callback
contacts
companyName
contactLabel
legacyAddressBookIdentifier
setLocalizedName:
setCompanyName:
setContactLabel:
setLegacyAddressBookIdentifier:
setContacts:
_legacyAddressBookIdentifier
_localizedName
_companyName
_contactLabel
_contacts
T@"NSArray",C,N,V_contacts
T@"NSString",C,N,V_localizedName
T@"NSString",C,N,V_companyName
T@"NSString",C,N,V_contactLabel
Ti,N,V_legacyAddressBookIdentifier
tu_contactStore
asianLocaleCountryCodes
useNetworkCountryCode
unsupportedLocalesForPrefixHint
ISOCountryCodeForHandle:fetchRequest:
defaultContactKeyDescriptors
contactsForHandle:countryCode:keysToFetch:prefixHint:
compositeNameForContacts:
formattedNameForHandle:countryCode:
localizedStandardCompare:
sortUsingComparator:
numberWithUnsignedLong:
auxiliaryKeysToFetch
contactWithIdentifier:keysToFetch:
unifiedContactsForFetchRequest:
personIDForContact:
contactLabelForContacts:matchingHandle:countryCode:
organizationName
compositeNameForFetchRequest:
isEmergency
isBlocked
labeledHandlesForContacts:
isCanonicallyEqualToHandle:isoCountryCode:
label
unformattedInternationalStringValue
localizedStringForLabel:
initWithHandle:label:isSuggested:
contactsDataSource
keysByCombiningDefaultKeysWithKeysToFetch:
isIncoming
isVerified
prefixHintForFetchRequest:
phoneNumberWithDigits:countryCode:
predicateForContactsMatchingPhoneNumber:prefixHint:
initWithUrlString:username:userIdentifier:service:
predicateForContactsMatchingSocialProfile:
localizedCaseInsensitiveCompare:
stringFromContact:style:
useAsianNameFormat
localizedCompositeNameForContact:secondContact:
personFromContact:
setWithArray:
localeSupportsPrefixHintForFetchRequest
phoneNumberPrefixHint
labeledHandlesForContactWithIdentifier:
setUseAsianNameFormat:
setLocaleSupportsPrefixHintForFetchRequest:
setAppleCareHandles:
_useAsianNameFormat
_localeSupportsPrefixHintForFetchRequest
_contactsDataSource
TB,N,V_useAsianNameFormat
T@?,C,N,V_localeSupportsPrefixHintForFetchRequest
T@"<TUContactsDataSource>",R,N,V_contactsDataSource
T@"TUContactsDataProviderAppleCareHandles",C,N,V_appleCareHandles
tu_contactsForContactHandles:keyDescriptors:error:
tu_contactsForHandles:keyDescriptors:error:
_initWithIntent:
activityType
_isActivityTypeAllowedForDialRequest:
setUserInfo:
_isActivityTypeAllowedForJoinRequest:
unarchivedObjectOfClass:fromData:error:
_internalUserActivity
dynamicIdentifier
dialRequestAttachment
joinRequestAttachment
tu_dynamicIdentifier
makeActivityWithIntent:dialRequestAttachment:
makeActivityWithIntent:joinRequestAttachment:
standardUserDefaults
initWithSuiteName:
boolForKey:withDefault:
T@"NSUserDefaults",R,N
initWithProvider:remoteMembers:otherInvitedHandles:
sanitizedMembersFromMembers:
initWithRemoteMembers:otherInvitedHandles:
faceTimeProvider
remoteMembersFromURLComponents:
otherInvitedHandlesFromURLComponents:
conversationLinkFromURLComponents:
joiningConversationWithLinkFromURLComponents:
invitationPreferencesFromURLComponents:
avModeFromURLComponents:
callerIDFromURLComponents:
shouldSuppressInCallUIFromURLComponents:
messagesGroupUUIDFromURLComponents:
messagesGroupNameFromURLComponents:
showUIPromptFromURLComponents:
participantAssociationFromURLComponents:namePrefix:
sendLetMeInRequestFromURLComponents:
initWithConversationLink:otherInvitedHandles:remoteMembers:sendLetMeInRequest:
videoFromURLComponents:
originatingUITypeFromURLComponents:
audioSourceIdentifierFromURLComponents:
uplinkMutedFromURLComponents:
videoEnabledFromURLComponents:
providerFromURLComponents:
wantsStagingAreaFromURLComponents:
collaborationIdentifierFromURLComponents:
initWithRemoteMembers:
interaction
intent
preferredCallProvider
conversationMembersForIntent:
callCapability
callerID
shouldSuppressInCallUI
wantsStagingArea
showUIPrompt
sendLetMeInRequest
isJoiningConversationWithLink
conversationLink
audioSourceIdentifier
participantAssociation
originatingUIType
isEqualToRequest:
shouldLaunchBackgroundInCallUI
controlCharacterSet
stringByTrimmingCharactersInSet:
remoteMembersQueryItem
otherInvitedHandlesQueryItem
callerIDQueryItem
videoEnabledQueryItem
uplinkMutedQueryItem
shouldSuppressInCallUIQueryItem
wantsStagingAreaQueryItem
messagesGroupUUIDQueryItem
messagesGroupNameQueryItem
showUIPromptQueryItem
sendLetMeInRequestQueryItem
joiningConversationWithLinkQueryItem
invitationPreferencesQueryItem
videoQueryItem
providerQueryItem
audioSourceIdentifierQueryItem
collaborationIdentifierQueryItem
originatingUIQueryItem
queryItemsWithNamePrefix:
avModeQueryItem
conversationLinkQueryItem
collaborationIdentifier
conversationLinkForURL:
initWithUUIDString:
intValue
providerForIdentifier:
personHandle
handleWithPersonHandle:
initWithPersonHandle:nameComponents:displayName:image:contactIdentifier:customIdentifier:
initWithCallRecordFilter:callRecordToCallBack:audioRoute:destinationType:preferredCallProvider:contacts:ttyType:callCapability:
initWithIntent:response:
setDirection:
initWithActivityType:
_setInteraction:donate:
setShouldSuppressInCallUI:
setWantsStagingArea:
setConversationLink:
setCallerID:
setSendLetMeInRequest:
setJoiningConversationWithLink:
setAudioSourceIdentifier:
setParticipantAssociation:
initWithProvider:remoteMemberHandles:
initWithConversationLink:otherInvitedHandles:sendLetMeInRequest:
initWithGroupUUID:localParticipantHandle:remoteParticipantHandles:
initWithUserActivity:
notificationStylesByHandleType
userActivityUsingStartCallIntents
setActivity:
setShouldLaunchBackgroundInCallUI:
setOriginatingUIType:
setShowUIPrompt:
setCollaborationIdentifier:
_shouldSuppressInCallUI
_wantsStagingArea
_shouldLaunchBackgroundInCallUI
_showUIPrompt
_sendLetMeInRequest
_joiningConversationWithLink
_originatingUIType
_audioSourceIdentifier
_conversationLink
_activity
_callerID
_collaborationIdentifier
_participantAssociation
T@"TUHandle",&,N,V_callerID
T@"NSUUID",C,N,V_messagesGroupUUID
TB,N,V_showUIPrompt
T@"NSString",&,N,V_collaborationIdentifier
TB,N,GisVideo
TB,N,V_sendLetMeInRequest
joiningConversationWithLink
TB,N,GisJoiningConversationWithLink,V_joiningConversationWithLink
T@"TUConversationParticipantAssociation",C,N,V_participantAssociation
T@"NSSet",R,C,N,V_otherInvitedHandles
T@"NSString",C,N,V_audioSourceIdentifier
TB,N,V_shouldSuppressInCallUI
TB,N,V_wantsStagingArea
T@"TUConversationLink",C,N,V_conversationLink
T@"TUConversationActivity",&,N,V_activity
TB,N,V_shouldLaunchBackgroundInCallUI
Ti,N,V_originatingUIType
RTTTelephonyUtilitiesClass
sharedUtilityProvider
isRTTSupportedForContext:
isRTTSupported
subscriptionForUUID:
isRTTSupportedForSubscription:
isTTYSoftwareEnabledForSubscription:
isTTYHardwareEnabledForSubscription:
isTTYEnabledForSubscription:
isTTYSupportedForContext:
isTTYSupported
isTTYSupportedForSubscription:
preferredTransportMethodForSubscription:
isTTYHardwareAvailableForSubscription:
RTTSettingsClass
TTYHardwareEnabledForContext:
TTYHardwareEnabled
hardwareTTYIsSupportedForContext:
hardwareTTYIsSupported
isTTYHardwareSupportedForSubscription:
isTTYSoftwareAvailableForSubscription:
TTYSoftwareEnabledForContext:
TTYSoftwareEnabled
softwareTTYIsSupportedForContext:
softwareTTYIsSupported
isTTYSoftwareSupportedForSubscription:
sharedRTTTelephonyUtilities
currentPreferredTransportMethodForContext:
currentPreferredTransportMethod
enumerateDelegatesUsingBlock:
delegateLock
_delegateLock
T{os_unfair_lock_s=I},R,N,V_delegateLock
photosAssetIdentifier
initWithPhotosAppAssetIdentifier:
photoViewingAppURL
_photosAssetIdentifier
T@"NSString",R,C,N,V_photosAssetIdentifier
initWithUniqueProxyIdentifier:
sourceIdentifier
wantsHoldMusic
pauseVideoToStart
downgradeToAudio
behavior
localLandscapeAspectRatio
localPortraitAspectRatio
dateAnswered
allowBluetoothAnswerWithoutDowngrade
endpointIDSDestination
endpointRapportMediaSystemIdentifier
endpointRapportEffectiveIdentifier
decodeSizeForKey:
encodeSize:forKey:
setUniqueProxyIdentifier:
T@"NSString",C,N
setLocalLandscapeAspectRatio:
setLocalPortraitAspectRatio:
T{CGSize=dd},N
setSourceIdentifier:
setEndpointIDSDestination:
setEndpointRapportMediaSystemIdentifier:
setEndpointRapportEffectiveIdentifier:
setWantsHoldMusic:
setPauseVideoToStart:
setDowngradeToAudio:
setBehavior:
setDateAnswered:
setAllowBluetoothAnswerWithoutDowngrade:
_wantsHoldMusic
_pauseVideoToStart
_downgradeToAudio
_allowBluetoothAnswerWithoutDowngrade
_uniqueProxyIdentifier
_sourceIdentifier
_endpointIDSDestination
_endpointRapportMediaSystemIdentifier
_endpointRapportEffectiveIdentifier
_behavior
_dateAnswered
_localLandscapeAspectRatio
_localPortraitAspectRatio
T@"NSDate",&,N,V_dateAnswered
TB,N,V_allowBluetoothAnswerWithoutDowngrade
T@"NSString",C,N,V_sourceIdentifier
T@"IDSDestination",&,N,V_endpointIDSDestination
T@"NSString",&,N,V_endpointRapportMediaSystemIdentifier
T@"NSString",&,N,V_endpointRapportEffectiveIdentifier
TB,N,V_wantsHoldMusic
TB,N,V_pauseVideoToStart
TB,N,V_downgradeToAudio
Tq,N,V_behavior
T@"NSString",C,N,V_uniqueProxyIdentifier
T{CGSize=dd},N,V_localLandscapeAspectRatio
T{CGSize=dd},N,V_localPortraitAspectRatio
initWithDataProviders:
metadataCache
metadataForDestinationID:
metadataForProvider:
_metadataDestinationIdForSearchItem:
suggestionForDestinationID:
locationForDestinationID:
directoryLabelForDestinationID:
metadataDestinationIDForCall:
updateMetadataForDestinationID:
updateCacheWithDestinationIDs:
updateCacheForEmptyDataProvidersWithDestinationIDs:
T@"TUMetadataClientController",R,N
suggestionForSearchItem:
locationForSearchItem:
directoryLabelForSearchItem:
updateMetadataForCall:
setMetadataCache:
_metadataCache
T@"TUMetadataCache",&,N,V_metadataCache
setValue:
initWithString:
T@"NSString",&,N,V_value
videoLayer
cleanUpSubLayerForLayer:
setVideoLayer:
begin
videoContextSlotIdentifier
insertSubLayerInLayer:videoSlotIdentifier:
commit
nameForSubLayer
sublayers
layer
addSublayer:
bounds
setBounds:
setPosition:
setTransform:
setContentsGravity:
objectForSlot:
setContents:
removeFromSuperlayer
setVideoLayer:forMode:
initWithVideoContextSlotIdentifier:
_videoContextSlotIdentifier
_videoLayer
Tq,R,N,V_videoContextSlotIdentifier
T@"CALayer",&,N,V_videoLayer
bluetoothProductIdentifier
decodeDictionaryWithKeysOfClasses:objectsOfClasses:forKey:
avAudioRouteName
isHeadphoneJackConnected
_routeTypeEqualTo:
hasSuffix:
isHandset
_avAudioRouteName
_route
T@"NSString",R,C,N,V_avAudioRouteName
headphoneJackConnected
TB,R,N,GisHeadphoneJackConnected
T@"NSDictionary",R,C,N,V_route
defaultProviders
requestedInitialState
donateUserIntentForProviderWithIdentifier:
errorWithDomain:code:userInfo:
launchAppForDialRequest:reply:
callProviderManagerServerXPCInterface
callProviderManagerClientXPCInterface
setRequestedInitialState:
_updateProvidersByIdentifier:localProvidersByIdentifier:pairedHostDeviceProvidersByIdentifier:
providersByIdentifier:
setProvidersByIdentifier:
setLocalProvidersByIdentifier:
setPairedHostDeviceProvidersByIdentifier:
providersChangedForDataSource:
updateProvidersByIdentifier:localProvidersByIdentifier:pairedHostDeviceProvidersByIdentifier:
callProviderManagerAllowedClasses
openURL:isSensitive:error:
launchAppForDialRequest:completion:
blockUntilInitialStateReceived
currentProcessCanAccessInitialState
providersByIdentifier
localProvidersByIdentifier
pairedHostDeviceProvidersByIdentifier
T@"<TUCallProviderManagerDataSourceDelegate>",W,N
T@"<TUCallProviderManagerXPCServer>",&,N
server
setQueue:
_requestedInitialState
_providersByIdentifier
_localProvidersByIdentifier
_pairedHostDeviceProvidersByIdentifier
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
TB,N,V_requestedInitialState
T@"NSDictionary",C,N,V_providersByIdentifier
T@"NSDictionary",C,N,V_localProvidersByIdentifier
T@"NSDictionary",C,N,V_pairedHostDeviceProvidersByIdentifier
T@"<TUCallProviderManagerDataSourceDelegate>",W,N,V_delegate
contactIdentifiers
setContactIdentifiers:
whitespaceAndNewlineCharacterSet
setPersonNameComponents:
mergeValuesFromDisplayContext:
suggestedName
contactName
mapName
location
callDirectoryLabel
callDirectoryLocalizedExtensionContainingAppName
callDirectoryExtensionIdentifier
setSuggestedName:
setLabel:
setContactName:
setMapName:
setLocation:
setCallDirectoryLabel:
setCallDirectoryLocalizedExtensionContainingAppName:
setCallDirectoryExtensionIdentifier:
setContactIdentifier:
firstName
setFirstName:
displayContextByMergingWithDisplayContext:
_personNameComponents
_suggestedName
_mapName
_location
_contactName
_callDirectoryLabel
_callDirectoryLocalizedExtensionContainingAppName
_callDirectoryExtensionIdentifier
_contactIdentifiers
_label
T@"NSPersonNameComponents",C,N,V_personNameComponents
T@"NSString",C,N,V_suggestedName
T@"NSString",C,N,V_label
T@"NSString",C,N,V_mapName
T@"NSString",C,N,V_location
T@"NSString",C,N,V_contactName
T@"NSString",C,N,V_callDirectoryLabel
T@"NSString",C,N,V_callDirectoryLocalizedExtensionContainingAppName
T@"NSString",C,N,V_callDirectoryExtensionIdentifier
T@"NSArray",C,N,V_contactIdentifiers
T@"NSPersonNameComponents",C,D,N
isUnknownAddress:normalizedAddress:forBundleIdentifier:
shouldRestrictDialRequest:performSynchronously:
dialType
isSOS
bundleIdentifierForCallProvider:
containsRestrictedHandle:forBundleIdentifier:performSynchronously:
filterStatusForAddresses:forBundleIdentifier:
policyForAddresses:forBundleIdentifier:
addressesToCheckForRestrictionsInConversation:
shouldRestrictAddresses:performSynchronously:
shouldRestrictAddresses:forBundleIdentifier:performSynchronously:
willRestrictAddresses:forBundleIdentifier:
isTelephonyProvider
silenceUnknownCallersEnabled
silenceUnknownFaceTimeCallersEnabled
isUnknownHandle:
shouldRestrictDialRequest:
callFilterStatusForDialRequest:
restrictedContacts:callProvider:
containsRestrictedHandle:forBundleIdentifier:
shouldRestrictConversation:performSynchronously:
shouldRestrictJoinConversationRequest:performSynchronously:
shouldRestrictAddresses:forBundleIdentifier:
T@"<TUCallFilterControllerActions>",R,W,N,V_actionsDelegate
classIdentifier
providerCache
removeAllObjects
dataProvider:requestedRefreshWithDestinationIDs:
isEmpty
_providerCache
T@"NSMutableDictionary",R,N,V_providerCache
T@"<TUMetadataCacheDataProviderDelegate>",W,N,V_delegate
empty
TB,R,N,GisEmpty
expanseEnabled
conversationOneToOneModeEnabled
conversationHandoffEnabled
addTVAsActiveParticipant
groupFacetimeAsAServiceEnabled
filterGFTaaSCalls
offrampEnabled
uNNotificationsMacOSEnabled
sharePlayDisabled
sharePlayDiscoverabilityEnabled
sharePlayWithAirplayEnabled
ftvSpatialAudioEnabled
FTUserScore
nonInterruptingCalls
qrPluginEncryptionEnabled
unreliableMessengerEnabled
supportsScreenSharing
individualAudioVideoToggleEnabled
expanseBTSwitchingEnabled
TTRBannerEnabled
aTVHandoff
suggestionsReloadForSelectedRecipients
gftDowngradeToOneToOne
uPlusNDowngrade
requestA2DPOverIncomingCalls
mochiEnabled
screenCaptureKitEnabled
avcCameraSelectionEnabled
greenTeaLinksEnabled
screenSharingCALayerHostMode
screenSharingDeskViewSqueegeeEnabled
gameCenterSharePlayIntegration
expanseEnabledForTV
expanseEnabledForMusic
currentThread
mainThread
bundleWithIdentifier:
fileExistsAtPath:isDirectory:
enumeratorAtPath:
attributesOfItemAtPath:error:
fileSize
defaultManager
stringWithCapacity:
characterAtIndex:
stringWithCharacters:length:
supportsWLAN
destinationIdIsTemporary
destinationIdIsTokenURI
normalizedTokenURI
processInfo
_setPhoneNumbers:
initWithRequest:
mapItems
startWithCompletionHandler:
_phoneOnlyStartWithCompletionHandler:queue:
areDigits:equalToDigits:usingCountryCode:
defaultWorkspace
openUserActivity:usingApplicationRecord:configuration:completionHandler:
openSensitiveURL:withOptions:error:
openURL:withOptions:error:
addEntriesFromDictionary:
initWithName:object:userInfo:
integerForKey:
objectForKey:inDomain:
unsignedIntegerValue
openURL:configuration:completionHandler:
openApplicationWithBundleIdentifier:configuration:completionHandler:
addListenerID:forService:
availabilityForListenerID:forService:
initWithService:
accounts
isUserVisible
localizedStringFromPersonNameComponents:style:options:
fragment
setFragment:
stringByReplacingOccurrencesOfString:withString:
setBundleID:
setSupportsLinks:
setSupportsConversationHandoff:
expanseProvider
serviceName
providerConfiguration
supportsLinks
bundleID
pseudonymFeatureID
initWithConversationProvider:
isEqualToConversationProvider:
matchesDefaultProviderIdentifier:
T@"TUConversationProvider",R,N
isDefaultProvider
supportsVideo
_providerConfiguration
T@"NSArray",R,C,N,V_supportedMediaTypes
T@"TUConversationProviderConfiguration",R,N,V_providerConfiguration
T@"NSString",R,C,N,V_identifier
originatorHandle
invitedMemberHandles
initWithPseudonym:publicKey:groupUUID:originatorHandle:creationDate:expirationDate:invitedMemberHandles:locallyCreated:linkName:linkLifetimeScope:
checkMatchingConversationLinkCriteriaForURL:
prefixedPseudonymFor:
publicKeyForBase64EncodedString:
conversationLinkComponentsFromURL:
conversationLinkVersion
URLFragment
baseURLComponentsForURL:
userConfiguration
conversationLinkBaseURLString
baseURLStrings
baseURLs
unprefixedPseudonym
base64PublicKey
tu_URLSafeBase64EncodedString
tu_dataForURLSafeBase64EncodedString:
path
isEqualToConversationLink:
isEquivalentToPseudonym:andPublicKey:
initWithPseudonym:publicKey:groupUUID:originatorHandle:
base64EncodedStringWithOptions:
preferredBaseURLString
T@"TUUserConfiguration",R,N
canCreateConversations
initWithDescriptor:
isEquivalentToConversationLink:
setOriginatorHandle:
setURLFragment:
setLinkName:
setInvitedMemberHandles:
_originatorHandle
_URLFragment
_linkName
_invitedMemberHandles
T@"TUHandle",&,N,V_originatorHandle
T@"NSString",&,N,V_URLFragment
T@"NSString",C,N,V_linkName
T@"NSSet",C,N,V_invitedMemberHandles
supportsHolding
supportsGrouping
supportsUngrouping
supportsDTMF
supportsUnambiguousMultiPartyState
supportsAddCall
supportsSendingToVoicemail
setSupportsHolding:
setSupportsGrouping:
setSupportsUngrouping:
setSupportsDTMF:
setSupportsUnambiguousMultiPartyState:
setSupportsAddCall:
setSupportsSendingToVoicemail:
_supportsHolding
_supportsGrouping
_supportsUngrouping
_supportsDTMF
_supportsUnambiguousMultiPartyState
_supportsAddCall
_supportsSendingToVoicemail
TB,N,V_supportsHolding
TB,N,V_supportsGrouping
TB,N,V_supportsUngrouping
TB,N,V_supportsDTMF
TB,N,V_supportsUnambiguousMultiPartyState
TB,N,V_supportsAddCall
TB,N,V_supportsSendingToVoicemail
callStatusChangedNotification:
disconnectedReason
callUUIDToConversation
report:withConversation:
callCenter
activeConversationForCall:
reportingSessionForCall:withConversation:
rtcCallInfoDictionary:withConversation:
sendMessageWithDictionary:error:
serviceName:withConversation:
isConnected
joinedFromLink
dictionaryWithDictionary:
numberWithDouble:
dateSentInvitation
dateCreated
timeIntervalSinceDate:
dateStartedConnecting
timebase
dateEnded
conversationID
clientName:
initWithSessionInfo:userInfo:frameworksToCheck:
startConfigurationWithCompletionHandler:
initWithCallCenter:
_callUUIDToConversation
_callCenter
T@"NSMutableDictionary",R,N,V_callUUIDToConversation
T@"TUCallCenter",R,N,V_callCenter
enablePhoneLogging
disablePhoneLogging
registerForShouldLogChangedNotification
unregisterForShouldLogChangedNotification
sendDirectoryToCrashReporter:error:
setMediaDelegate:
updateConversationWithUUID:participantPresentationContexts:
mediaController:participantMediaPrioritiesChangedForConversation:
mediaPrioritiesChangeForConversation:
initWithConversationDataSource:
T@"<TUConversationManagerDataSource>",R,N,V_dataSource
T@"<TUConversationMediaControllerDelegate>",W,N,V_delegate
virtualParticipantConfig
unreliableMessengerConfig
numberWithUnsignedLongLong:
setVirtualParticipantConfig:
setUnreliableMessengerConfig:
_virtualParticipantConfig
_unreliableMessengerConfig
T@"TUConversationVirtualParticipantConfig",C,N,V_virtualParticipantConfig
T@"TUConversationUnreliableMessengerConfig",C,N,V_unreliableMessengerConfig
isEqualToLabeledHandle:
_isSuggested
T@"NSString",R,C,N,V_label
TB,R,N,V_isSuggested
telephonyURLWithDestinationID:promptUser:
telephonyURLWithDestinationID:
_destinationIDConvertingNumbersToLatin:
hasTelephonyScheme
_mobilePhoneQueryParameters
isEmergencyCallURL
_dialAssistBooleanQueryParameterValueForKey:
_hasScheme:
isTelephonyPromptURL
isTelephonyURL
isVoicemailURL
phoneNumber
destinationIdIsCallControlCode
getCharacters:
telephonyURLForVoicemail
_mobilePhonePathParameters
addressBookUID
callService
originatingUIIdentifier
forceAssist
suppressAssist
wasAlreadyAssisted
formattedPhoneNumber
isWebSafeTelephoneURL
webSafeTelephoneURL
isBasebandLogURL
isEmergencyURL
telephonyParameterDictionary
telephonyURLWithDestinationID:addressBookUID:
telephonyURLWithDestinationID:addressBookUID:forceAssist:suppressAssist:wasAssisted:
telephonyURLForTelEmergencyCall
Ti,R
basebandLogURL
TB,R,N,GisBasebandLogURL
initWithMemberAssociation:
isEqualToAssociation:
initWithHandle:type:primary:
setType:
setPrimary:
_primary
Tq,N,V_type
primary
TB,N,GisPrimary,V_primary
TQ,N,V_identifier
addAdhocResultGroup
numberOfResults
setAllDataItemsCache:
setAllSearchItemsCache:
removeDuplicateResults
indexOfObjectPassingTest:
removeSearchItem:
setResultGroups:
_clearCaches
resultGroupForSection:
allSearchItemsCache
allDataItemsCache
searchTerm
initWithSearchTerm:shouldAddAdhocResults:
finalizeSearchResults
numberOfTableViewRows
allDataItems
setSearchTerm:
_searchTerm
_resultGroups
_allSearchItemsCache
_allDataItemsCache
T@"NSString",&,N,V_searchTerm
T@"NSMutableArray",&,N,V_resultGroups
T@"NSMutableArray",&,N,V_allSearchItemsCache
T@"NSMutableArray",&,N,V_allDataItemsCache
resultsCache
groupType
setResultsCache:
_resultsCache
T@"TUGroupTitle",&,N,V_title
T@"NSMutableArray",&,N,V_resultsCache
authorizationStatusForEntityType:
tu_authorizationStatus
setIncludeLocalContacts:
tu_contactsByContactHandleForContactHandles:keyDescriptors:error:
initWithKeysToFetch:
predicateForContactsMatchingHandleStrings:
setPredicate:
executeFetchRequest:error:
tu_contactsByHandleForHandles:keyDescriptors:error:
enumeratorForChangeHistoryFetchRequest:error:
tu_enumeratorForChangeHistoryFetchRequest:error:
tu_isAuthorized
tu_authorized
TB,R,N,Gtu_isAuthorized
T@"CNContactStore",R,N
_defaultRepliesForSending:
customReplies
replaceObjectAtIndex:withObject:
_cannedRepliesForSending:
cannedReplies
arrayWithObjects:
defaultReplies
cannedReplyActionSheetOptions
cannedRepliesForSending
setCustomReply:atIndex:
_handleMessagesStoreChanged
formattedDisplayID
connectionRetryIntervalMillis
connectionMaxAttempts
rpcStreamRetryIntervalMillis
rpcStreamMaxAttempts
serverCertValidationEnabled
serverCertHostnameOverride
serverCertLeafMarkerOIDOverride
isEqualToConversationVirtualParticipantConfig:
idsAliasingSalt
initWithConnectionRetryIntervalMillis:connectionMaxAttempts:rpcStreamRetryIntervalMillis:rpcStreamMaxAttempts:serverCertValidationEnabled:serverCertHostnameOverride:serverCertLeafMarkerOIDOverride:
setIdsAliasingSalt:
serverCertValidationEnabledUserDefaultsKey
serverCertHostnameUserDefaultsKey
serverCertLeafMarkerOIDUserDefaultsKey
_serverCertValidationEnabled
_connectionRetryIntervalMillis
_connectionMaxAttempts
_rpcStreamRetryIntervalMillis
_rpcStreamMaxAttempts
_serverCertHostnameOverride
_serverCertLeafMarkerOIDOverride
_idsAliasingSalt
TQ,R,N,V_connectionRetryIntervalMillis
TQ,R,N,V_connectionMaxAttempts
TQ,R,N,V_rpcStreamRetryIntervalMillis
TQ,R,N,V_rpcStreamMaxAttempts
TB,R,N,V_serverCertValidationEnabled
T@"NSString",R,C,N,V_serverCertHostnameOverride
T@"NSString",R,C,N,V_serverCertLeafMarkerOIDOverride
T@"NSData",C,N,V_idsAliasingSalt
queryItemValueForHandleType:
participantIdentifier
videoQuality
visibility
prominence
spatialPosition
isInCanvas
decodeObjectForKey:
decodeRectForKey:
initWithParticipantIdentifier:videoQuality:visibility:prominence:spatialPosition:isInCanvas:
encodeRect:forKey:
_isInCanvas
_participantIdentifier
_videoQuality
_visibility
_prominence
_spatialPosition
TQ,R,N,V_participantIdentifier
TQ,R,N,V_videoQuality
T@"NSNumber",R,N,V_visibility
T@"NSNumber",R,N,V_prominence
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_spatialPosition
TB,R,N,V_isInCanvas
registeredDefaults
userDefaults
addObserver:forKeyPath:options:context:
removeObserver:forKeyPath:context:
synchronizeUserDefaultsDomain:keys:
delegateController
propertiesDidChangeForConfiguration:
observeValueForKeyPath:ofObject:change:context:
queueContext
strongToWeakObjectsMapTable
initWithNotificationCenter:
setHasReceivedInitialState:
setLastDaemonConnectTime:
_tearDownXPCConnection
isServerLocal
connectionRequestNotificationToken
_setUpXPCConnection
callServicesServerXPCInterface
callServicesClientXPCInterface
setShouldHandleServerDisconnect:
handleServerDisconnectIfNecessary
performBlockOnQueue:
setCallServicesInterface:
_proxyCallWithCall:
setLocalProxyCalls:
setCurrentCalls:
_registerCall:
_updateCurrentCalls:
updateWithCall:
updateComparativeCall
comparativeCall
callNotificationManager
postNotificationsForCall:usingComparisonCall:afterUpdatesInBlock:
_proxyCallWithUniqueProxyIdentifier:
setIsVideo:
setProxyCallActionsDelegate:
uniqueProxyIdentifierToProxyCall
performBlockOnQueue:andWait:
setHasRequestedInitialState:
callServicesClientCapabilities
save
requestInitialState:
hasServerLaunched
hasReceivedInitialState
_updateCurrentCallsWithoutNotifications:
_handleCurrentCallsChanged:callsDisconnected:
requestCurrentStateWithCompletionHandler:handleInitialState:
_ignorePendingServerDisconnectionHandlers
setComparativeCall:
_updateCurrentCalls:withNotificationsUsingUpdatedCalls:
deferNotificationsUntilAfterPerformingBlock:
hasRequestedInitialState
requestCurrentStateWithCompletionHandler:
fetchCurrentCalls
setHasServerLaunched:
localRouteController
pairedHostDeviceRouteController
shouldHandleServerDisconnect
proxyCallWithCall:
setCallDisconnectedDueToComponentCrash
resetCallProvisionalStates
waitForInitialStateIfNecessary
dialWithRequest:reply:
registerCall:
setRemoteParticipantHandles:
setCallStatus:
localSenderIdentityUUID
setLocalSenderIdentityUUID:
setLocalSenderIdentityAccountUUID:
setOutgoing:
setVoicemail:
hostOnCurrentDevice
setHostedOnCurrentDevice:
endpointOnCurrentDevice
setEndpointOnCurrentDevice:
setIsSendingVideo:
setEmergency:
setSOS:
ttyType
setTtyType:
initWithCall:contactIdentifier:serialQueue:
setDisplayContext:
dialWithRequest:displayContext:
providerManager
providerWithIdentifier:
setConversation:
joinConversationWithRequest:
reportLocalPreviewStoppedForCallWithUniqueProxyIdentifier:
answerCallWithRequest:
holdCallWithUniqueProxyIdentifier:
unholdCallWithUniqueProxyIdentifier:
requestVideoUpgradeForCallWithUniqueProxyIdentifier:
disconnectCallWithUniqueProxyIdentifier:
groupCallWithUniqueProxyIdentifier:withOtherCallWithUniqueProxyIdentifier:
ungroupCallWithUniqueProxyIdentifier:
swapCalls
playDTMFToneForCallWithUniqueProxyIdentifier:key:
disconnectCurrentCallAndActivateHeld
disconnectAllCalls
setTTYType:forCallWithUniqueProxyIdentifier:
pullRelayingCallsFromClient
pushRelayingCallsToHostWithSourceIdentifier:
pullCallFromClientUsingHandoffActivityUserInfo:reply:
pushHostedCallsToDestination:
pullHostedCallsFromPairedHostDevice
sendHardPauseDigitsForCallWithUniqueProxyIdentifier:
updateCallWithProxy:
enteredForegroundForCallWithUniqueProxyIdentifier:
willEnterBackgroundForAllCalls
enteredBackgroundForAllCalls
setRemoteVideoPresentationSizeForCallWithUniqueProxyIdentifier:size:
setRemoteVideoPresentationStateForCallWithUniqueProxyIdentifier:presentationState:
setScreenShareAttributesForCallWithUniqueProxyIdentifier:attributes:
setSharingScreen:attributes:forCallWithUniqueProxyIdentifier:
setBluetoothAudioFormatForCallWithUniqueProxyIdentifier:bluetoothAudioFormat:
sendMMIOrUSSDCodeWithRequest:
setUplinkMuted:forCallWithUniqueProxyIdentifier:
setDownlinkMuted:forCallWithUniqueProxyIdentifier:
setIsSendingVideo:forCallWithUniqueProxyIdentifier:
setMixesVoiceWithMedia:forCallWithUniqueProxyIdentifier:
setSharingScreen:forCallWithUniqueProxyIdentifier:
shouldSuppressInCallStatusBar:
shouldAllowRingingCallStatusIndicator:
activateInCallUIWithActivityContinuationIdentifier:
sendUserScoreToRTCReporting:withScore:
localRoutesByUniqueIdentifier:
pairedHostDeviceRoutesByUniqueIdentifier:
pickLocalRouteWithUniqueIdentifier:shouldWaitUntilAvailable:
pickPairedHostDeviceRouteWithUniqueIdentifier:shouldWaitUntilAvailable:
containsRestrictedHandle:forBundleIdentifier:performSynchronously:reply:
policyForAddresses:forBundleIdentifier:reply:
willRestrictAddresses:forBundleIdentifier:reply:
shouldRestrictAddresses:forBundleIdentifier:performSynchronously:reply:
filterStatusForAddresses:forBundleIdentifier:reply:
isUnknownAddress:normalizedAddress:forBundleIdentifier:reply:
setClientCapabilities:
setRemoteFrequency:
setLocalFrequency:
setRemoteMeterLevel:
setLocalMeterLevel:
postNotificationsForCallContainer:afterUpdatesInBlock:
resetProvisionalState
postNotificationsForCall:afterUpdatesInBlock:
handleFrequencyChangedTo:inDirection:forCallsWithUniqueProxyIdentifiers:
handleMeterLevelChangedTo:inDirection:forCallsWithUniqueProxyIdentifiers:
handleCurrentCallsChanged:callDisconnected:
handleNotificationName:forCallWithUniqueProxyIdentifier:userInfo:
handleLocalRoutesByUniqueIdentifierUpdated:
handlePairedHostDeviceRoutesByUniqueIdentifierUpdated:
initWithQueue:callCenter:
tearDownXPCConnection
callContainer
dialWithRequest:completion:
pullCallFromClientUsingHandoffActivityUserInfo:completion:
setServer:
setCallCenter:
setLocalRouteController:
setPairedHostDeviceRouteController:
lastDaemonConnectTime
localProxyCalls
_hasRequestedInitialState
_hasReceivedInitialState
_shouldHandleServerDisconnect
_hasServerLaunched
_connectionRequestNotificationToken
_server
_callServicesClientCapabilities
_localRouteController
_pairedHostDeviceRouteController
_lastDaemonConnectTime
_currentCalls
_uniqueProxyIdentifierToProxyCall
_callNotificationManager
_localProxyCalls
T^v,R,N
Ti,R,N,V_connectionRequestNotificationToken
TB,N,V_hasRequestedInitialState
TB,N,V_hasReceivedInitialState
TB,N,V_shouldHandleServerDisconnect
T@"NSArray",C,N,V_currentCalls
T@"NSMapTable",R,N,V_uniqueProxyIdentifierToProxyCall
T@"TUCallNotificationManager",R,N,V_callNotificationManager
T@"TUFeatureFlags",R,N,V_featureFlags
T@"NSArray",C,N,V_localProxyCalls
serverLocal
TB,R,N,GisServerLocal
TB,N,V_hasServerLaunched
T@"TUCallCenter",W,N,V_callCenter
T@"<TUCallServicesXPCServer>",R,N
T@"<TUCallServicesXPCServer>",W,N,V_server
T@"TUCallServicesClientCapabilities",R,N,V_callServicesClientCapabilities
T@"TURouteController",&,N,V_localRouteController
T@"TURouteController",&,N,V_pairedHostDeviceRouteController
T@"<TUCallContainerPrivate>",R,N
T@"NSDate",N,V_lastDaemonConnectTime
callMetadata
setMetadata:forProvider:
_callMetadata
T@"NSMutableDictionary",R,N,V_callMetadata
isEqualToMetadataDestinationID:
initWithDestinationID:isoCountryCode:
isScreenSharingAvailable
isGondolaCallingAvailable
isMirageAvailable
isGFTDowngradeToOneToOneAvailable
isUPlusNDowngradeAvailable
sharePlayProtocolVersion
setScreenSharingAvailable:
setGondolaCallingAvailable:
setMirageAvailable:
setGftDowngradeToOneToOneAvailable:
setUPlusNDowngradeAvailable:
setSharePlayProtocolVersion:
_screenSharingAvailable
_gondolaCallingAvailable
_mirageAvailable
_gftDowngradeToOneToOneAvailable
_uPlusNDowngradeAvailable
_sharePlayProtocolVersion
screenSharingAvailable
TB,N,GisScreenSharingAvailable,V_screenSharingAvailable
gondolaCallingAvailable
TB,N,GisGondolaCallingAvailable,V_gondolaCallingAvailable
mirageAvailable
TB,N,GisMirageAvailable,V_mirageAvailable
gftDowngradeToOneToOneAvailable
TB,N,GisGFTDowngradeToOneToOneAvailable,V_gftDowngradeToOneToOneAvailable
uPlusNDowngradeAvailable
TB,N,GisUPlusNDowngradeAvailable,V_uPlusNDowngradeAvailable
TQ,N,V_sharePlayProtocolVersion
TB,D,N,GisScreenSharingAvailable
TB,D,N,GisGondolaCallingAvailable
TB,D,N,GisMirageAvailable
TB,D,N,GisGFTDowngradeToOneToOneAvailable
TB,D,N,GisUPlusNDowngradeAvailable
refreshIDStatusForDestinations:service:listenerID:queue:completionBlock:
requiredIDStatusForDestinations:service:listenerID:queue:completionBlock:
currentIDStatusForDestinations:service:listenerID:queue:completionBlock:
currentRemoteDevicesForDestinations:service:listenerID:queue:completionBlock:
setDestinations:
initWithQueryController:
initWithObject:
initWithService:delegate:queue:
cancelQueries
batchQueryControllerCreationBlock
isFaceTimeVideoAvailableForAnyDestinationInDestinations:
isFaceTimeAudioAvailableForAnyDestinationInDestinations:
isFaceTimeMultiwayAvailableForAnyDestinationInDestinations:
idsFaceTimeVideoStatuses
isAnyDestinationAvailableInDestinations:usingCache:
idsFaceTimeAudioStatuses
idsFaceTimeMultiwayStatuses
idsiMessageStatuses
idsAVLessSharePlayCapableStatuses
intersectsSet:
fzHandleIDStatusForDestination:usingCache:
idsModernStatuses
idsWebCapableStatuses
setObject:
beginQueryWithDestinations:includeMessages:
beginQueryWithDestination:onService:
handleIDSQueryResultWithDestinationStatus:onService:
queryController
beginBatchQueryWithDestinations:includeMessages:
batchQuerySearchVideoController
batchQuerySearchAudioController
batchQuerySearchMultiwayController
batchQuerySearchiMessageController
beginCachedQueryWithDestinations:includeMessages:
beginCachedQueryWithDestinations:onService:
performWhileLocked:
postStatusChangedNotification
filteredDestinationForMultiway:completionBlock:
isGreenTea
enumerateKeysAndObjectsUsingBlock:
valueForCapability:
initWithRequiredCapabilities:requiredMissingCapabilities:
queryHasEndpointWithCapabilities:forMultiwayDestinations:completionBlock:
requiredCapabilities
requiredMissingCapabilities
sharedManager
batchQueryController:updatedDestinationsStatus:onService:error:
idStatusUpdatedForDestinations:
idStatusUpdatedForDestinations:service:
T@"TUIDSLookupManager",R,N
isFaceTimeVideoAvailableForItem:
isFaceTimeAudioAvailableForItem:
isFaceTimeMultiwayAvailableForItem:
isiMessageAvailableForAnyDestinationInDestinations:
isAVLessSharePlayCapableForAnyDestinationInDestinations:
faceTimeAudioAvailabilityForDestination:
faceTimeVideoAvailabilityForDestination:
faceTimeMultiwayAvailabilityForDestination:
isModernFaceTimeAvailableForDestination:
isWebCapableFaceTimeAvailableForDestination:
beginQueryWithDestinations:
beginBatchQueryWithDestinations:
beginCachedQueryWithDestinations:
queryHasWebOnlyEndpointsForDestinations:completionBlock:
setBatchQuerySearchVideoController:
setBatchQuerySearchAudioController:
setBatchQuerySearchMultiwayController:
setBatchQuerySearchiMessageController:
setBatchQueryControllerCreationBlock:
_queryController
_idsFaceTimeVideoStatuses
_idsFaceTimeAudioStatuses
_idsFaceTimeMultiwayStatuses
_idsiMessageStatuses
_idsModernStatuses
_idsWebCapableStatuses
_idsAVLessSharePlayCapableStatuses
_batchQuerySearchVideoController
_batchQuerySearchAudioController
_batchQuerySearchMultiwayController
_batchQuerySearchiMessageController
_batchQueryControllerCreationBlock
T@"<TUIDSIDQueryController>",R,N,V_queryController
T@"TULocked",R,N,V_idsFaceTimeVideoStatuses
T@"TULocked",R,N,V_idsFaceTimeAudioStatuses
T@"TULocked",R,N,V_idsFaceTimeMultiwayStatuses
T@"TULocked",R,N,V_idsiMessageStatuses
T@"TULocked",R,N,V_idsModernStatuses
T@"TULocked",R,N,V_idsWebCapableStatuses
T@"TULocked",R,N,V_idsAVLessSharePlayCapableStatuses
T@"<TUIDSBatchIDQueryController>",&,N,V_batchQuerySearchVideoController
T@"<TUIDSBatchIDQueryController>",&,N,V_batchQuerySearchAudioController
T@"<TUIDSBatchIDQueryController>",&,N,V_batchQuerySearchMultiwayController
T@"<TUIDSBatchIDQueryController>",&,N,V_batchQuerySearchiMessageController
T@?,C,N,V_batchQueryControllerCreationBlock
doesNotRecognizeSelector:
getActiveContexts:
subscriptions
labelID
uuid
subscriptionForLabelIdentifier:
T@"CoreTelephonyClient",R,N,V_client
searchQueue
_cancelRecentSearches
recentsModuleClasses
setRecentsModules:
recentsModules
recentsModuleCompletionWithCompletion:
_cancelSearchsForSearchTerm:
searchModuleClasses
searchModules
searchModuleCompletionWithSearchTerm:completion:
_clearIdsDestinations
_searchModuleCompletionWithModules:searchTerm:resultsClass:completion:
_fetchIdsDestinationsIfNeeded:withReason:
T@"TUSearchController",R,N
recentsWithCompletion:
setContactStore:
setSearchModules:
setSearchQueue:
_searchModulesLock
_idsDestinations
_contactStore
_searchModules
_recentsModules
_searchQueue
T@"CNContactStore",&,N,V_contactStore
T@"NSMutableDictionary",&,N,V_searchModules
T@"NSMutableArray",&,N,V_recentsModules
T@"NSObject<OS_dispatch_queue>",&,N,V_searchQueue
canEnable
canEnableRoaming
_canEnable
_canEnableRoaming
TB,N,V_canEnable
TB,N,V_canEnableRoaming
TB,R,N,GisProvisioningURLInvalid
objectsPassingTest:
registeredStream:withAvailability:reply:
didCleanUpForStream:reply:
didStartRequestForStream:withTransactionID:reply:
didReceiveResultsForStream:withTransactionID:reply:
reportingControllerServerXPCInterface
T@"<TUReportingControllerXPCServer>",&,N
registerSplitSessionApprovalEnabled:
neighborhoodActivityServerXPCInterface
neighborhoodActivityClientXPCInterface
allowedXPCClasses
T@"<TUNeighborhoodActivityConduitXPCClientDelegate>",W,N,V_delegate
initWithParticipantAssociation:
isEqualToParticipantAssociation:
identifierFromURLComponents:namePrefix:
unsignedLongLongValue
avcIdentifierFromURLComponents:namePrefix:
queryItemName:prefix:
tu_unsignedLongLongNumber
identifierQueryItemWithNamePrefix:
avcIdentifierQueryItemWithNamePrefix:
category
mode
isEqualToAudioRouteCollectionKey:
initWithCategory:mode:
_category
_mode
T@"NSString",R,C,N,V_category
T@"NSString",R,C,N,V_mode
initWithConfig:delegate:queue:
powerSpectrumMeter
registerPowerSpectrumForStreamToken:
unregisterPowerSpectrumForStreamToken:
_avcTapTypeForTUTapType:
registerPowerSpectrumForCellularTapType:error:
unregisterPowerSpectrumForCellularTapType:error:
rawPowerLevelForPowerSpectrum:
channels
bins
powerLevel
frequencyController:audioPowerChanged:forParticipantWithStreamToken:
normalizedPowerLevelForPowerSpectrum:
frequencyController:rawValueForAudioPowerChanged:forParticipantWithStreamToken:
audioPowerSpectrumMeter:didUpdateAudioPowerSpectrums:
audioPowerSpectrumMeter:didUpdateLocalAudioPowerSpectrum:remoteAudioPowerSpectrums:
meterServerDidDisconnect:
meterSpectrumCaptureWasInterrupted:
initWithDelegate:queue:
registerParticipantPowerSpectrum:
unregisterParticipantPowerSpectrum:
registerCellularPowerSpectrum:
unregisterCellularPowerSpectrum:
_powerSpectrumMeter
T@"<TUAudioFrequencyControllerDelegate>",R,W,N,V_delegate
T@"AVCAudioPowerSpectrumMeter",R,N,V_powerSpectrumMeter
setPlayer:
attemptToPlaySoundType:forCall:completion:
initWithSoundType:call:
attemptToPlayDescriptor:completion:
soundType
currentlyPlayingSoundType
player
sound
unsignedIntValue
iterations
setCurrentlyPlayingSoundType:
attemptToPlaySoundType:forCall:
attemptToPlayDescriptor:
_currentlyPlayingSoundType
_player
T@"TUSoundPlayer",&,N,V_player
Tq,N,V_currentlyPlayingSoundType
soundRegion
initWithSoundType:provider:video:region:
initWithSoundType:sound:iterations:pauseDuration:
setSoundType:
setSound:
setIterations:
_soundType
_sound
_iterations
Tq,N,V_soundType
T@"NSNumber",&,N,V_sound
TQ,N,V_iterations
sandboxExtensionHandle
sandboxExtensionClass
sandboxExtensionToken
setSandboxExtensionHandle:
setSandboxExtensionToken:
isEqualToSandboxExtendedURL:
fileSystemRepresentation
initWithURL:withExtensionType:
setURL:
_pid
_sandboxExtensionClass
_URL
_sandboxExtensionToken
_sandboxExtensionHandle
T@"NSURL",&,N,V_URL
T@"NSString",C,N,V_sandboxExtensionToken
Tq,N,V_sandboxExtensionHandle
Ti,N,V_pid
T@"NSString",C,N,V_sandboxExtensionClass
isDefaultPairedDevice
setSupportsPrimaryCalling:
setSupportsBasebandCalling:
setSupportsCellularData:
setSupportsDisplayingTelephonyCalls:
setSupportsDisplayingFaceTimeAudioCalls:
setSupportsDisplayingFaceTimeVideoCalls:
setFaceTimeAudioAvailable:
setFaceTimeVideoAvailable:
setCtCapabilitiesValid:
setSupportsRelayCalling:
setAccountsMatchForSecondaryCalling:
setAccountsSupportSecondaryCalling:
setRelayCallingFeaturesEnabled:
setRelayCallingAvailability:
setRelayCallingDisabledForDeviceID:
setSupportsTelephonyRelayCalling:
setSupportsFaceTimeAudioRelayCalling:
setSupportsFaceTimeVideoRelayCalling:
setOutgoingRelayCallerID:
setCloudCallingDevices:
setEmergencyCallbackModeEnabled:
setEmergencyCallbackPossible:
setSenderIdentityCapabilitiesStateByUUID:
initWithArray:copyItems:
_supportsPrimaryCalling
_supportsBasebandCalling
_supportsCellularData
_supportsDisplayingTelephonyCalls
_supportsDisplayingFaceTimeAudioCalls
_supportsDisplayingFaceTimeVideoCalls
_faceTimeAudioAvailable
_faceTimeVideoAvailable
_ctCapabilitiesValid
_accountsMatchForSecondaryCalling
_accountsSupportSecondaryCalling
_supportsRelayCalling
_relayCallingEnabled
_relayCallingFeaturesEnabled
_supportsTelephonyRelayCalling
_supportsFaceTimeAudioRelayCalling
_supportsFaceTimeVideoRelayCalling
_emergencyCallbackModeEnabled
_emergencyCallbackPossible
_relayCallingAvailability
_relayCallingDisabledForDeviceID
_outgoingRelayCallerID
_cloudCallingDevices
_senderIdentityCapabilitiesStateByUUID
TB,N,V_supportsPrimaryCalling
TB,N,V_supportsBasebandCalling
TB,N,V_supportsCellularData
TB,N,V_supportsDisplayingTelephonyCalls
TB,N,V_supportsDisplayingFaceTimeAudioCalls
TB,N,V_supportsDisplayingFaceTimeVideoCalls
faceTimeAudioAvailable
TB,N,GisFaceTimeAudioAvailable,V_faceTimeAudioAvailable
faceTimeVideoAvailable
TB,N,GisFaceTimeVideoAvailable,V_faceTimeVideoAvailable
ctCapabilitiesValid
TB,N,GareCTCapabilitiesValid,V_ctCapabilitiesValid
TB,N,V_accountsMatchForSecondaryCalling
TB,N,V_accountsSupportSecondaryCalling
TB,N,V_supportsRelayCalling
TB,N,GisRelayCallingEnabled,V_relayCallingEnabled
relayCallingFeaturesEnabled
TB,N,GareRelayCallingFeaturesEnabled,V_relayCallingFeaturesEnabled
Ti,N,V_relayCallingAvailability
T@"NSDictionary",C,N,V_relayCallingDisabledForDeviceID
T@"NSString",C,N,V_outgoingRelayCallerID
TB,N,V_supportsTelephonyRelayCalling
TB,N,V_supportsFaceTimeAudioRelayCalling
TB,N,V_supportsFaceTimeVideoRelayCalling
T@"NSArray",C,N,V_cloudCallingDevices
T@"TUCloudCallingDevice",R,N
TB,N,GisEmergencyCallbackModeEnabled,V_emergencyCallbackModeEnabled
TB,N,GisEmergencyCallbackPossible,V_emergencyCallbackPossible
T@"NSDictionary",C,N,V_senderIdentityCapabilitiesStateByUUID
isEqualToCallGroup:
displayFirstName
methodSignatureForSelector:
selector
invokeWithTarget:
forwardInvocation:
T@"NSArray",R,C,N,V_calls
enumerateBargeCallsInvokingBlock:forCallsPassingTest:
bargeCallsPassingTest:
bargeCallWithStatus:
bargeCalls
bargeCallWithUniqueProxyIdentifier:
frontmostBargeCall
setSupportsAudioOnly:
setSupportsEmergency:
setSupportsVoicemail:
setSupportsRecents:
setSupportedHandleTypes:
setSupportsAudioAndVideo:
initWithType:
initWithDataSource:type:queue:
providers
telephonyProvider
providerForFavoritesEntryActionBundleIdentifier:
isValid
serviceForProvider:video:
initWithLocalProviders
initWithPairedHostDeviceProviders
defaultProvider
voicemailProvider
tinCanProvider
providerWithService:video:
emergencyProvider
providerForRecentCall:
providerForFavoritesEntry:
setDelegateToQueue:
TQ,R,N,V_type
T@"<TUCallProviderManagerDataSource>",R,N,V_dataSource
T@"NSMapTable",&,N,V_delegateToQueue
T@"TUCallProvider",R,N
handleForCHRecentCall:validHandlesOnly:
handlesForCHRecentCall:validHandlesOnly:
validRemoteParticipantHandles
handleForCHRecentCall:
handlesForCHRecentCall:
initWithQueue:dataProviders:
_updateCacheWithDestinationIDs:onlyEmptyProviders:
_providers
T@"NSArray",R,C,N,V_providers
destinationIdIsHardware
stringByRemovingCharactersFromSet:
_im_normalizedURIString
LTRString
stringByPaddingToLength:withString:startingAtIndex:
tu_conversationHandoffDynamicIdentifierWithGroupUUID:participantIdentifier:uplinkMuted:sendingVideo:
RTLString
normalizedDestination
tu_stringByStrippingBase64Padding
tu_stringByAddingBase64Padding
tu_handoffEligibility
tu_conversationHandoffDynamicIdentifierForEligibility:
T@"TUConversationHandoffEligibility",R,C,N
sandboxExtendedImageURL
setSandboxExtendedImageURL:
initWithParticipant:
imageURL
initWithName:
setImageURL:
_sandboxExtendedImageURL
T@"NSURL",&,N
T@"TUSandboxExtendedURL",&,N,V_sandboxExtendedImageURL
T@"NSURL",&,D,N
tu_defaultAllowedSchemes
sanitizedCopyWithZone:allowedSchemes:
activeRemoteParticipant
callerNameFromNetwork
isConnecting
shouldSuppressRingtone
faceTimeIDStatus
hardPauseDigits
hardPauseDigitsState
needsManualInCallSounds
hasSentInvitation
isUsingBaseband
isOnHold
isSendingAudio
isSharingScreen
isThirdPartyVideo
isMediaStalled
isVideoDegraded
isVideoMirrored
displayContext
isFailureExpected
supportsEmergencyFallback
audioCategory
audioMode
supportsTTYWithVoice
bluetoothAudioFormat
remoteAspectRatio
remoteVideoContentRect
cameraType
remoteScreenOrientation
remoteScreenAspectRatio
prefersExclusiveAccessToCellularNetwork
isRemoteUplinkMuted
model
providerContext
videoStreamToken
mixesVoiceWithMedia
screenShareAttributes
serviceStatus
transmissionMode
isReceivingTransmission
isSendingTransmission
statusChangedForCall:
_postNotificationName:object:
connectingChangedForCall:
connectedChangedForCall:
wantsHoldMusicChangedForCall:
endpointOnCurrentDeviceChangedForCall:
shouldSuppressRingtoneChangedForCall:
faceTimeIDStatusChangedForCall:
hardPauseDigitsStateChangedForCall:
needsManualInCallSoundsChangedForCall:
hasSentInvitationChangedForCall:
isUsingBasebandChangedForCall:
isOnHoldChangedForCall:
isUplinkMutedChangedForCall:
isSendingAudioChangedForCall:
isSendingVideoChangedForCall:
sharingScreenChangedForCall:
isThirdPartyVideoChangedForCall:
mediaStalledChangedForCall:
videoDegradedChangedForCall:
videoPausedChangedForCall:
destinationIDChangedForCall:
displayContextChangedForCall:
isEmergencyChangedForCall:
isFailureExpectedChangedForCall:
supportsEmergencyFallbackChangedForCall:
audioPropertiesChangedForCall:
ttyTypeChangedForCall:
supportsTTYWithVoiceChangedForCall:
bluetoothAudioFormatChangedForCall:
cameraTypeChangedForCall:
videoMirroredChangedForCall:
remoteScreenOrientationChangedForCall:
remoteScreenAspectRatioChangedForCall:
prefersExclusiveAccessToCellularNetworkChangedForCall:
remoteUplinkMutedChangedForCall:
localSenderIdentityAccountUUIDChangedForCall:
modelChangedForCall:
providerContextChangedForCall:
videoStreamTokenChangedForCall:
conversationChangedForCall:
mixesVoiceWithMediaChangedForCall:
remoteAspectRatioChangedForCall:
remoteVideoContentRectChangedForCall:
remoteCameraOrientationChangedForCall:
mediaPropertiesChangedForCall:remoteAspectRatioDidChange:remoteCameraOrientationDidChange:
deferredNotificationBlocks
conferenceParticipantCallsChangedForCallContainer:conferenceParticipantCalls:
setDeferredNotificationBlocks:
_postNotificationName:object:userInfo:
notificationCenter
postNotificationsForCall:usingComparisonCall:
_notificationCenter
_deferredNotificationBlocks
T@"NSMutableArray",&,N,V_deferredNotificationBlocks
T@"NSNotificationCenter",R,N,V_notificationCenter
encryptedData
tokenPrefixedURI
unsafeData
initWithVoucher:
isEqualToVoucher:
initWithHandle:tokenPrefixedURI:data:encryptedData:
_tokenPrefixedURI
_encryptedData
_unsafeData
T@"NSData",R,C,N,V_encryptedData
T@"NSData",R,C,N,V_unsafeData
T@"NSString",R,C,N,V_tokenPrefixedURI
tu_mapAndFilterObjectsUsingBlock:
tu_mapObjectsUsingBlock:
tu_firstObjectPassingTest:
defaultBehavior
initWithContext:linkMetadata:fallbackURL:invitationURL:supportsContinuationOnTV:title:subTitle:imageData:preferredBroadcastingAttributes:sceneAssociationBehavior:
linkMetadatablob
invitationURL
preferredBroadcastingAttributes
sceneAssociationBehavior
imageFileURL
imageData
connection
tu_clientSandboxCanAccessFileURL:
setImageFileURL:
stringByAppendingPathComponent:
_imagePreviewDirectoryPath
stringGUID
fileURLWithPath:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
_createImageFolderIfNeeded
_filePathForImage
writeToURL:options:error:
setImageData:
removeItemAtURL:error:
dataWithContentsOfURL:options:error:
_isEqualToActivityMetadata:
serializedData
activityMetadataWithDataBlob:
initWithContext:linkMetadata:fallbackURL:invitationURL:supportsContinuationOnTV:title:subTitle:imageData:
saveImageToDisk
removeImageDiskFile
setLinkMetadatablob:
setSupportsContinuationOnTV:
setPreferredBroadcastingAttributes:
_supportsContinuationOnTV
_linkMetadatablob
_fallbackURL
_invitationURL
_subTitle
_imageData
_preferredBroadcastingAttributes
_sceneAssociationBehavior
_imageFileURL
T@"TUSandboxExtendedURL",&,N,V_imageFileURL
T@"TUConversationActivityContext",R,C,N,V_context
T@"NSData",C,N,V_linkMetadatablob
T@"NSURL",R,C,N,V_fallbackURL
T@"NSURL",R,C,N,V_invitationURL
TB,N,V_supportsContinuationOnTV
T@"NSString",R,C,N,V_title
T@"NSString",R,C,N,V_subTitle
T@"NSData",C,N,V_imageData
Tq,N,V_preferredBroadcastingAttributes
T@"TUConversationActivitySceneAssociationBehavior",R,C,N,V_sceneAssociationBehavior
calendarItemIdentifier
null
_setAllowPhoneNumberLookupUsingCellular:
placemark
tu_contactHandlesForHandle:
initWithObjects:
initWithDataSource:notificationCenter:
callPropertiesChanged:
conversationsByGroupUUID
conversationsNotBackedByGroupSessions
setByAddingObjectsFromSet:
incomingPendingConversationsByGroupUUID
activatedConversationLinks
activityAuthorizedBundleIdentifiers
autoSharePlayEnabled
isSharePlayAvailable
conversationWithRemoteMembers:andLink:fromConversations:
conversationWithRemoteMembers:andLink:fromConversations:matchingVideo:backedByGroupSession:
pseudonymsByCallUUID
uniqueProxyIdentifierUUID
conversationWithPseudonym:fromConversations:
pendingConversationWithLink:fromConversations:
conversationsWithRemoteMembers:andLink:fromConversations:
registerWithCompletionHandler:
setNonSessionBackedConversationCreationMode:
addRemoteMembers:otherInvitedHandles:toConversation:
updateMessagesGroupName:onConversation:
setGridDisplayMode:conversation:
conversationUpdateMessagesGroupPhoto:
createActivitySession:onConversation:
leaveActivitySession:onConversation:
endActivitySession:onConversation:
presentDismissalAlertForActivitySession:onConversation:
setActivityAuthorization:forBundleIdentifier:
setAutoSharePlayEnabled:
leaveConversationWithUUID:
launchApplicationForActivitySessionUUID:completionHandler:
launchApplicationForActivitySessionUUID:forceBackground:completionHandler:
setUsingAirplay:onActivitySession:onConversationWithUUID:
buzzMember:conversation:
refreshActiveConversations
kickMember:conversation:
setDownlinkMuted:forRemoteParticipantsInConversation:
setAudioEnabled:forRemoteParticipantWithIdentifier:conversation:
setVideoEnabled:forRemoteParticipantWithIdentifier:conversation:
getLatestRemoteScreenShareAttributesWithCompletionHandler:
getActiveLinksWithCreatedOnly:completionHandler:
generateLinkForConversation:completionHandler:
generateLinkWithInvitedMemberHandles:linkLifetimeScope:completionHandler:
addInvitedMemberHandles:toConversationLink:completionHandler:
invalidateLink:completionHandler:
renewLink:expirationDate:reason:completionHandler:
checkLinkValidity:completionHandler:
getInactiveLinkWithCompletionHandler:
activateLink:completionHandler:
setLinkName:forConversationLink:completionHandler:
scheduleConversationLinkCheckInInitial:
linkSyncStateIncludeLinks:WithCompletion:
approvePendingMember:forConversation:
rejectPendingMember:forConversation:
setIgnoreLetMeInRequests:forConversation:
setScreenEnabled:withScreenShareAttributes:forConversationWithUUID:
multiwaySupported
memorySize
supportsFunCam
getMessagesGroupDetailsForConversationUUID:completionHandler:
setSupportsMessagesGroupProviding:
setLocalParticipantAudioVideoMode:forConversationUUID:
registerMessagesGroupUUIDForConversationUUID:
nonSessionBackedConversationCreationQueue
conversationsChangedForDataSource:oldConversationsByGroupUUID:newConversationsByGroupUUID:creationQueue:
conversationsChangedFromOldConversationsByGroupUUID:newConversationsByGroupUUID:
callPendingUpgradeInConversationsWithGroupUUID:
conversationWithUUID:fromConversations:
remoteMembersForCall:
conversationManager:migratingFromConversation:toConversation:
pruneConversationsPendingUpgradeInConversationsWithGroupUUID:
conversationsChangedForConversationManager:
conversationManager:conversationUpdatedMessagesGroupName:
conversationManager:conversationUpdatedMessagesGroupName:fromOldConversation:
conversationManager:conversationUpdatedMessagesGroupUUID:
conversationManager:stateChangedForConversation:
conversationManager:stateChangedForConversation:fromOldConversation:
conversationManager:letMeInRequestStateChangedForConversation:
conversationManager:letMeInRequestStateChangedForConversation:fromOldConversation:
conversationManager:localVideoToggledForConversation:
conversationManager:localVideoToggledForConversation:fromOldConversation:
conversationManager:remoteMembersChangedForConversation:
conversationManager:remoteMembersChangedForConversation:fromOldConversation:
conversationManager:pendingMembersChangedForConversation:
conversationManager:pendingMembersChangedForConversation:fromOldConversation:
conversationManager:kickedMembersChangedForConversation:
conversationManager:kickedMembersChangedForConversation:fromOldConversation:
conversationManager:otherInvitedHandlesChangedForConversation:
conversationManager:otherInvitedHandlesChangedForConversation:fromOldConversation:
conversationManager:activeRemoteParticipantsChangedForConversation:
conversationManager:activeRemoteParticipantsChangedForConversation:fromOldConversation:
conversationManager:oneToOneModeChangedForConversation:
conversationManager:oneToOneModeChangedForConversation:fromOldConversation:
conversationManager:avModeChangedForConversation:
conversationManager:avModeChangedForConversation:fromOldConversation:
conversationManager:resolvedAudioVideoModeChangedForConversation:
conversationManager:resolvedAudioVideoModeChangedForConversation:fromOldConversation:
conversationManager:activitySessionsChangedForConversation:
conversationManager:activitySessionsChangedForConversation:fromOldConversation:
conversationManager:linkChangedForConversation:
conversationManager:linkChangedForConversation:fromOldConversation:
conversationManager:linkInvitedMemberHandlesChangedForConversation:
conversationManager:linkInvitedMemberHandlesChangedForConversation:fromOldConversation:
conversationManager:removedActiveConversation:
conversationManager:addedActiveConversation:
conversationManager:ignoreLMIRequestsChangedForConversation:
conversationManager:rejectedMembersChangedForConversation:
conversationManager:rejectedMembersChangedForConversation:fromOldConversation:
conversationManager:handoffEligibilityChangedToConversation:fromPreviousConversation:
conversationManager:handoffEligibilityChangedForConversation:
conversationManager:systemActivitySessionsChangedForConversation:
conversationManager:systemActivitySessionsChangedForConversation:fromOldConversation:
serverDisconnectedForConversationManager:
conversationManager:conversation:participant:addedNotice:
conversationManager:conversation:addedMembersLocally:
conversationManager:conversation:buzzedMember:
conversationManager:updatedIncomingPendingConversations:
conversationManager:conversation:updatedMessagesGroupPhoto:
conversationManager:conversation:didChangeStateForActivitySession:
conversationManager:conversation:didChangeSceneAssociationForActivitySession:
conversationManager:conversation:receivedActivitySessionEvent:
conversationManager:didChangeActivatedLinks:
messagesGroupProvider
getMessagesGroupDetailsForGroupId:completion:
conversationManager:conversation:remoteParticipantWithIdentifier:updatedAudioEnabled:
conversationManager:conversation:remoteParticipantWithIdentifier:updatedVideoEnabled:
fetchUpcomingNoticeWithCompletionHandler:
activateConversationNoticeWithActionURL:bundleIdentifier:
removeConversationNoticeWithUUID:
conversationManager:conversation:launchStateChanged:forActivitySession:
conversationManager:trackedPendingMember:forConversationLink:
conversationManager:conversation:screenSharingChangedForParticipant:
conversationManager:remoteScreenShareAttributesChanged:isLocallySharing:
conversationManager:remoteScreenShareEndedWithReason:
conversationManager:sharePlayAvailableChanged:
conversationManager:screenSharingAvailableChanged:
conversationManager:changedActivityAuthorizationForBundleIdentifier:
updateConversationsNotBackedByGroupSessionWithCall:
nonSessionBackedConversationCreationMode
updateConversationsNotBackedByGroupSessionWithCall:conversationsByGroupUUID:creationQueue:
createConversationForCallNotBackedByGroupSession:
callsNotBackedByGroupSessionsPendingUpgrade
conversationsChangedForDataSource:oldConversationsByGroupUUID:
setConversationsNotBackedByGroupSessions:
conversationStateForCall:
activeRemoteParticipantsForCall:remoteMembers:
handoffEligibleConversationForEligibility:
supportsConversations
isAddPersonEnabled
maximumNumberOfInvitedMembers
allowsVideo
allowsScreenSharing
allowsScreenSharingWithVideo
allowsPortraitBlurWhenCaptionsEnabled
supportsEffects
conversationsChangedForDataSource:updatedIncomingPendingConversationsByGroupUUID:
conversation:receivedActivitySessionEvent:
serverDisconnectedForDataSource:oldConversationsByGroupUUID:
activityAuthorizationsChangedForDataSource:oldActivityAuthorizedBundleIdentifiers:
conversationManagerDataSource:didChangeActivatedConversationLinks:
conversationManagerDataSource:messagesGroupDetailsForMessagesGroupId:completionHandler:
conversation:remoteParticipantWithIdentifier:updatedAudioEnabled:
conversation:remoteParticipantWithIdentifier:updatedVideoEnabled:
conversation:participant:addedNotice:
conversation:addedMembersLocally:
conversation:buzzedMember:
conversationUpdatedMessagesGroupPhoto:
conversationManagerDataSource:conversation:appLaunchState:forActivitySession:
receivedTrackedPendingMember:forConversationLink:
conversation:screenSharingChangedForParticipant:
remoteScreenShareAttributesChanged:isLocallySharing:
remoteScreenShareEndedWithReason:
conversation:didChangeStateForActivitySession:
conversation:didChangeSceneAssociationForActivitySession:
sharePlayAvailableChanged:
screenSharingAvailableChanged:
addPersonEnabled
TB,R,N,GisAddPersonEnabled
incomingPendingConversations
activeConversationWithGroupUUID:
activeConversationWithRemoteMembers:andLink:
activeConversationWithRemoteMembers:andLink:matchingVideo:backedByGroupSession:
activeConversationWithLinkForCall:
pendingConversationWithLink:
setShouldCreateConversationsForCallsNotBackedByGroupSessions:
mediaController
addRemoteMembers:toConversation:
launchApplicationForActivitySession:completionHandler:
setUsingAirplay:onActivitySession:onConversation:
requestScreenShareFromMember:conversation:
generateLinkWithInvitedMemberHandles:completionHandler:
setIgnoreLMIRequests:forConversation:
setMessagesGroupProvider:
setNonSessionBackedConversationCreationQueue:
handoffEligibleConversation
avLessConversation
joinRequestForApplicableConversationWithHandoffEligibility:
currentProcessCanAccessCollaborations
setCallsNotBackedByGroupSessionsPendingUpgrade:
shouldCreateConversationsForCallsNotBackedByGroupSessions
_shouldCreateConversationsForCallsNotBackedByGroupSessions
_mediaController
_nonSessionBackedConversationCreationQueue
_callsNotBackedByGroupSessionsPendingUpgrade
_conversationsNotBackedByGroupSessions
_nonSessionBackedConversationCreationMode
_messagesGroupProvider
T@"NSObject<OS_dispatch_queue>",R,N,V_nonSessionBackedConversationCreationQueue
T@"NSMutableSet",&,N,V_callsNotBackedByGroupSessionsPendingUpgrade
T@"NSMutableSet",&,N,V_conversationsNotBackedByGroupSessions
TB,N,V_shouldCreateConversationsForCallsNotBackedByGroupSessions
TQ,N,V_nonSessionBackedConversationCreationMode
T@"TUConversationMediaController",R,N,V_mediaController
T@"<TUConversationMessagesGroupProviding>",W,N,V_messagesGroupProvider
sharePlayAvailable
TB,R,N,GisSharePlayAvailable
TB,R,N,GisScreenSharingAvailable
T@"TUConversation",R,C,N
captureCapabilities
modelIdentifier
linkedUserURIs
supportsRestrictingSecondaryCalling
setModelIdentifier:
setUniqueID:
setLinkedUserURIs:
setDefaultPairedDevice:
setSupportsRestrictingSecondaryCalling:
_defaultPairedDevice
_supportsRestrictingSecondaryCalling
_modelIdentifier
_uniqueID
_linkedUserURIs
T@"NSString",C,N,V_modelIdentifier
T@"NSString",C,N,V_uniqueID
T@"NSArray",C,N,V_linkedUserURIs
TB,N,GisDefaultPairedDevice,V_defaultPairedDevice
TB,N,V_supportsRestrictingSecondaryCalling
_handleBlockListChanged:
phoneNumberRef
setBlockIncomingCommunication:forPhoneNumber:
email
setBlockIncomingCommunication:forEmailAddress:
businessID
setBlockIncomingCommunication:forBusinessID:
_stripFZIDPrefix
privacyRules
phoneNumberWithCFPhoneNumberRef:
ruleForPhoneNumber:
ruleForEmail:
ruleForBusinessID:
enumerateObjectsUsingBlock:
sharedPrivacyManager
T@"TUPrivacyManager",R,N
addRule:
removeRule:
isIncomingCommunicationBlockedForPhoneNumber:
isIncomingCommunicationBlockedForEmailAddress:
isIncomingCommunicationBlockedForBusinessID:
isIncomingCommunicationBlockedForHandle:
allBlacklistRules
initForPhoneNumber:
initForEmail:
initForBusinessID:
_phoneNumber
_email
_businessID
Ti,R,N,V_type
T@"TUPhoneNumber",R,N,V_phoneNumber
T@"NSString",R,N,V_email
T@"NSString",R,N,V_businessID
predicateForInEarAudioRoute
predicateForPreferredRoute
T@?,R,N
initWithCFPhoneNumberRef:
initWithDigits:countryCode:
digits
formattedRepresentation
formattedInternationalRepresentation
unformattedInternationalRepresentation
setPhoneNumberRef:
_phoneNumberRef
T^{__CFPhoneNumber=},V_phoneNumberRef
accountID
localDeviceID
setApproved:
setApprovedSecondaryDeviceIDs:
setAccountID:
setAssociated:
setLocalDeviceID:
setSupportsDefaultPairedDevice:
_approved
_associated
_supportsDefaultPairedDevice
_approvedSecondaryDeviceIDs
_accountID
_localDeviceID
approved
TB,N,GisApproved,V_approved
T@"NSSet",C,N,V_approvedSecondaryDeviceIDs
T@"NSString",C,N,V_accountID
associated
TB,N,GisAssociated,V_associated
T@"NSString",C,N,V_localDeviceID
TB,N,V_supportsDefaultPairedDevice
contactsDataSourceCreationBlock
initWithCall:contactIdentifier:serialQueue:contactsDataSource:
_initializeSynchronousStateWithCall:contactIdentifier:contactsDataProvider:
isInternational
_initializeAsynchronousStateWithCall:
isVoicemail
displayContextChanged:
setCallDirectoryManager:
extensionIdentifier
firstIdentificationEntryForEnabledExtensionWithPhoneNumber:completionHandler:
initWithDisplayContext:call:serialQueue:
T@"CXCallDirectoryManager",&,N,V_callDirectoryManager
T@"<TUDynamicCallDisplayContextDelegate>",W,N,V_delegate
objectForKey:subscriptionLabelIdentifier:error:
initWithBundleType:
copyCarrierBundleValue:key:bundleType:error:
testEmergencyHandleForSubscriptionLabelIdentifier:error:
initWithMetadata:applicationContext:activityIdentifier:uuid:staticActivity:
share
isEqualToConversationActivitySessionCreationRequest:
setShare:
containsValueForKey:
initWithMetadata:applicationContext:activityIdentifier:uuid:
_share
T@"NSUUID",C,N,V_UUID
T@"CKShare",C,N,V_share
T@"NSUUID",C,D,N
T@"TUConversationActivityMetadata",&,D,N
T@"CKShare",C,D,N
TB,D,N,GisStaticActivity
initWithTargetContentIdentifier:shouldAssociateScene:
targetContentIdentifier
shouldAssociateScene
isEquivalentToSceneAssociationBehavior:
T@"TUConversationActivitySceneAssociationBehavior",R,N
_shouldAssociateScene
_targetContentIdentifier
T@"NSString",R,C,N,V_targetContentIdentifier
TB,R,N,V_shouldAssociateScene
supportsConversationHandoff
wantsLeaveOnInvalidation
setServiceName:
setWantsLeaveOnInvalidation:
setPseudonymFeatureID:
_supportsLinks
_supportsConversationHandoff
_wantsLeaveOnInvalidation
_serviceName
_pseudonymFeatureID
_bundleID
T@"NSString",C,N,V_serviceName
TB,N,V_supportsLinks
TB,N,V_supportsConversationHandoff
TB,N,V_wantsLeaveOnInvalidation
T@"NSString",C,N,V_pseudonymFeatureID
T@"NSString",C,N,V_bundleID
T@"NSSet",C,N,V_supportedMediaTypes
copyEmergencyModeWithError:
isEmergencyNumberForDigits:subscription:error:
isEmergencyNumberWithWhitelistIncluded:number:error:
isWhitelistedEmergencyNumberForDigits:subscription:error:
shouldShowEmergencyCallbackModeAlertForSubscription:error:
shouldShowUserWarningWhenDialingCallOnContext:error:
inEmergencyMode
isEmergencyNumberForDigits:subscriptionUUID:error:
isWhitelistedEmergencyNumberForDigits:subscriptionUUID:error:
shouldShowEmergencyCallbackModeAlertForSubscriptionUUID:error:
AVConferencePreviewSingleton
captureDevicesChanged:
removeObserver:forKeyPath:
preview
activeFormat
isBackgroundBlurSupported
backgroundBlurControlMode
setBackgroundBlurControlMode:
isBackgroundBlurEnabled
setBackgroundBlurEnabled:
setCameraZoomFactor:withRate:
setAnimoji:
animojiNames
thumbnailForAnimojiNamed:options:
T@"VideoAttributes",C,N
TB,N,GisCameraBlurEnabled
T@"<TUVideoDeviceControllerProviderDelegate>",W,N
_currentVideoEffect
_preview
T@"AVConferencePreview",R,N,V_preview
T@"<TUVideoDeviceControllerProviderDelegate>",W,N,V_delegate
T@"TUVideoEffect",&,N,V_currentVideoEffect
initWithConversationID:timebase:
isEqualToConversationReport:
_timebase
_conversationID
T@"NSDate",R,N,V_timebase
T@"NSUUID",R,N,V_conversationID
initWithEstablishChannelMaxAttempts:establishChannelRetryIntervalMillis:egressMessagePayloadMaxSizeBytes:channelStreamMaxQueueSize:channelStreamMaxTries:channelStreamRetryIntervalMillis:
establishChannelMaxAttempts
establishChannelRetryIntervalMillis
egressMessagePayloadMaxSizeBytes
channelStreamMaxQueueSize
channelStreamMaxTries
channelStreamRetryIntervalMillis
isEqualToConversationUnreliableMessengerConfig:
shared
_establishChannelMaxAttempts
_establishChannelRetryIntervalMillis
_egressMessagePayloadMaxSizeBytes
_channelStreamMaxQueueSize
_channelStreamMaxTries
_channelStreamRetryIntervalMillis
TQ,R,N,V_establishChannelMaxAttempts
TQ,R,N,V_establishChannelRetryIntervalMillis
TQ,R,N,V_egressMessagePayloadMaxSizeBytes
TQ,R,N,V_channelStreamMaxQueueSize
TQ,R,N,V_channelStreamMaxTries
TQ,R,N,V_channelStreamRetryIntervalMillis
sourceType
sourceTypeIsFoundInMail:
foundInMailResultsArray
sourceTypeIsFoundOnServers:
foundOnServersResultsArray
normalResultsArray
addResult:
setNormalResultsArray:
setFoundInMailResultsArray:
setFoundOnServersResultsArray:
_normalResultsArray
_foundInMailResultsArray
_foundOnServersResultsArray
T@"NSMutableArray",&,N,V_normalResultsArray
T@"NSMutableArray",&,N,V_foundInMailResultsArray
T@"NSMutableArray",&,N,V_foundOnServersResultsArray
initWithUUID:accountUUID:localizedName:localizedShortName:localizedServiceName:handle:
initWithUUID:accountUUID:ISOCountryCode:localizedName:localizedShortName:localizedServiceName:handle:
initWithSenderIdentity:
ISOCountryCode
localizedShortName
localizedServiceName
isEqualToSenderIdentity:
initWithUUID:accountUUID:localizedName:localizedShortName:handle:
_accountUUID
_ISOCountryCode
_localizedShortName
_localizedServiceName
T@"NSUUID",R,N,V_accountUUID
T@"NSString",R,C,N,V_ISOCountryCode
T@"NSString",R,C,N,V_localizedName
T@"NSString",R,C,N,V_localizedShortName
T@"NSString",R,C,N,V_localizedServiceName
isEqualToConversationActivityEvent:
initWithSessionUUID:originator:type:
setUrl:
localizedDescription
_localizedDescription
_url
T@"TUConversationParticipant",&,N,V_originator
T@"NSString",&,N,V_item
T@"NSString",R,N,V_localizedDescription
T@"NSURL",&,N,V_url
orderedSet
bundleURL
sandboxExtendedRingtoneSoundURL
originalRingtoneSoundURL
iconTemplateImageData
maximumCallGroups
maximumCallsPerCallGroup
supportsEmergency
supportsVoicemail
supportsRecents
supportsCurrentPlatform
supportsRinging
audioSessionID
supportedHandleTypes
emergencyHandles
emergencyLabeledHandles
handoffIdentifiers
isSuperboxProvider
isTinCanProvider
setSandboxExtendedRingtoneSoundURL:
orderedSetWithSet:
setPrioritizedSenderIdentities:
isEqualToCallProvider:
setBundleURL:
setEmergencyHandles:
setEmergencyLabeledHandles:
setHandoffIdentifiers:
setOriginalRingtoneSoundURL:
setIconTemplateImageData:
setMaximumCallGroups:
setMaximumCallsPerCallGroup:
setSupportsCurrentPlatform:
setSupportsRinging:
setAudioSessionID:
supportsHandleType:
base
hasRestrictionsInRetailEnvironment
senderIdentityForUUID:
senderIdentityForAccountUUID:
senderIdentityForHandle:
displayAppBundleIdentifier
inCallUIBundleIdentifier
ringtoneSoundURL
setRingtoneSoundURL:
setSenderIdentities:
senderIdentities
_supportsCurrentPlatform
_supportsAudioOnly
_supportsAudioAndVideo
_supportsEmergency
_supportsVoicemail
_supportsRecents
_supportsRinging
_audioSessionID
_supportedHandleTypes
_bundleURL
_emergencyHandles
_emergencyLabeledHandles
_handoffIdentifiers
_prioritizedSenderIdentities
_sandboxExtendedRingtoneSoundURL
_originalRingtoneSoundURL
_iconTemplateImageData
_maximumCallGroups
_maximumCallsPerCallGroup
T@"NSURL",C,N,V_bundleURL
T@"NSSet",C,N,V_supportedHandleTypes
T@"NSArray",C,N,V_emergencyHandles
T@"NSArray",C,N,V_emergencyLabeledHandles
T@"NSArray",C,N,V_handoffIdentifiers
T@"NSOrderedSet",C,N,V_prioritizedSenderIdentities
T@"TUSandboxExtendedURL",&,N,V_sandboxExtendedRingtoneSoundURL
T@"NSURL",&,N,V_originalRingtoneSoundURL
T@"NSData",C,N,V_iconTemplateImageData
TQ,N,V_maximumCallGroups
TQ,N,V_maximumCallsPerCallGroup
TB,N,V_supportsAudioOnly
TB,N,V_supportsAudioAndVideo
TB,N,V_supportsEmergency
TB,N,V_supportsVoicemail
TB,N,V_supportsRecents
TB,N,V_supportsCurrentPlatform
TB,N,V_supportsRinging
TI,N,V_audioSessionID
TB,R,N,GisTelephonyProvider
TB,R,N,GisFaceTimeProvider
superboxProvider
TB,R,N,GisSuperboxProvider
T@"TUCallProvider",R,C,N
initWithUniqueProxyIdentifier:endpointOnCurrentDevice:
isOutgoing
endedReasonUserInfo
endedErrorString
endedReasonString
callRelaySupport
localFrequency
remoteFrequency
localMeterLevel
remoteMeterLevel
isMutuallyExclusiveCall
inputAudioPowerSpectrumToken
outputAudioPowerSpectrumToken
videoCallAttributes
_updateVideoCallAttributes:
_updateVideoStreamToken:
disconnectWithReason:
proxyCallActionsDelegate
answerWithRequest:
setDisconnectedReason:
updateProxyCallWithDaemon
setShouldSuppressRingtone:
transitionStatus
setTransitionStatus:
setHardPauseDigitsState:
setHardPauseDigits:
avcRemoteVideoModeForMode:
remoteVideoModeToLayer
setRemoteVideoModeToLayer:
remoteVideo
_synchronizeRemoteVideo
localVideoModeToLayer
setLocalVideoModeToLayer:
localVideo
_synchronizeLocalVideo
setLocalVideo:
setRemoteVideo:
setVideoCallAttributes:
_createLocalVideoIfNecessary
requiresRemoteVideo
_createRemoteVideoIfNecessary
initWithStreamToken:delegate:
setMediaStalled:
setVideoDegraded:
localAspectRatioForOrientation:
remoteScreenPortraitAspectRatio
remoteScreenLandscapeAspectRatio
_orientationForVideoAttributesOrientation:
setRemoteScreenOrientation:
setRemoteScreenPortraitAspectRatio:
setRemoteScreenLandscapeAspectRatio:
setRemoteAspectRatio:
setRemoteVideoContentRect:
camera
_cameraTypeForVideoAttributeCamera:
setCameraType:
videoMirrored
setVideoMirrored:
remoteVideoClientDidReceiveFirstFrame:
remoteVideoClient:remoteVideoDidPause:
remoteVideoClient:remoteMediaDidStall:
remoteVideoClient:videoDidDegrade:
remoteVideoClient:videoDidSuspend:
remoteVideoClientDidReceiveLastFrame:
remoteVideoServerDidDie:
remoteVideoClient:remoteScreenAttributesDidChange:
remoteVideoClient:remoteVideoAttributesDidChange:
playDTMFToneForKey:
setBackingProvider:
setDisplayProvider:
setSharingScreen:
setSharingScreen:attributes:
sendHardPauseDigits
setRemoteVideoLayer:forMode:
setLocalVideoLayer:forMode:
setRequiresRemoteVideo:
setRemoteVideoPresentationSize:
setRemoteVideoPresentationState:
setScreenShareAttributes:
setBluetoothAudioFormat:
setActiveRemoteParticipant:
setCallUUID:
setIsoCountryCode:
setCallerNameFromNetwork:
setThirdPartyVideo:
setIsSendingAudio:
setBlocked:
setFailureExpected:
setInternational:
setSupportsEmergencyFallback:
setUsingBaseband:
setSupportsTTYWithVoice:
setAudioCategory:
setAudioMode:
setNeedsManualInCallSounds:
setEndedReasonUserInfo:
setEndedReasonString:
setEndedErrorString:
setCallRelaySupport:
setVideoStreamToken:
setInputAudioPowerSpectrumToken:
setOutputAudioPowerSpectrumToken:
setCallGroupUUID:
setProviderContext:
setPrefersExclusiveAccessToCellularNetwork:
setRemoteUplinkMuted:
setMutuallyExclusiveCall:
setServiceStatus:
setTransmissionMode:
setReceivingTransmission:
setSendingTransmission:
_hostedOnCurrentDevice
_outgoing
_voicemail
_isVideo
_thirdPartyVideo
_isSendingAudio
_isSendingVideo
_mediaStalled
_videoDegraded
_videoMirrored
_blocked
_emergency
_failureExpected
_international
_sos
_supportsEmergencyFallback
_usingBaseband
_supportsTTYWithVoice
_needsManualInCallSounds
_downlinkMuted
_requiresRemoteVideo
_prefersExclusiveAccessToCellularNetwork
_remoteUplinkMuted
_mutuallyExclusiveCall
_sharingScreen
_conversation
_receivingTransmission
_sendingTransmission
_mixesVoiceWithMedia
_callStatus
_ttyType
_callRelaySupport
_localMeterLevel
_remoteMeterLevel
_activeRemoteParticipant
_callUUID
_imageURL
_isoCountryCode
_callerNameFromNetwork
_cameraType
_bluetoothAudioFormat
_audioCategory
_audioMode
_endedReasonUserInfo
_endedReasonString
_endedErrorString
_localFrequency
_remoteFrequency
_videoStreamToken
_inputAudioPowerSpectrumToken
_outputAudioPowerSpectrumToken
_remoteScreenOrientation
_callGroupUUID
_providerContext
_displayContext
_remoteParticipantHandles
_localSenderIdentityUUID
_localSenderIdentityAccountUUID
_screenShareAttributes
_serviceStatus
_transmissionMode
_proxyCallActionsDelegate
_localVideo
_remoteVideo
_remoteVideoModeToLayer
_localVideoModeToLayer
_remoteAspectRatio
_remoteScreenPortraitAspectRatio
_remoteScreenLandscapeAspectRatio
_remoteVideoContentRect
T@"<TURemoteVideoClient>",&,N,V_localVideo
T@"<TURemoteVideoClient>",&,N,V_remoteVideo
T@"NSMutableDictionary",&,N,V_remoteVideoModeToLayer
T@"NSMutableDictionary",&,N,V_localVideoModeToLayer
T{CGSize=dd},N,V_remoteScreenPortraitAspectRatio
T{CGSize=dd},N,V_remoteScreenLandscapeAspectRatio
Tq,N,V_remoteScreenOrientation
T{CGSize=dd},N,V_remoteAspectRatio
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_remoteVideoContentRect
Tq,N,V_cameraType
T@"<TUCallServicesProxyCallActions>",W,N,V_proxyCallActionsDelegate
T@"TUParticipant",C,N,V_activeRemoteParticipant
T@"NSString",C,N,V_isoCountryCode
T@"NSString",C,N,V_callUUID
Ti,N,V_callStatus
Tq,N,V_serviceStatus
Tq,N,V_transmissionMode
receivingTransmission
TB,N,GisReceivingTransmission,V_receivingTransmission
sendingTransmission
TB,N,GisSendingTransmission,V_sendingTransmission
hostedOnCurrentDevice
TB,N,GisHostedOnCurrentDevice,V_hostedOnCurrentDevice
T@"TUCallProvider",&,N,V_provider
backingProvider
T@"TUCallProvider",&,N
displayProvider
outgoing
TB,N,GisOutgoing,V_outgoing
voicemail
TB,N,GisVoicemail,V_voicemail
T@"NSString",C,N,V_callerNameFromNetwork
TB,N,V_isVideo
blocked
TB,N,GisBlocked,V_blocked
emergency
TB,N,GisEmergency,V_emergency
failureExpected
TB,N,GisFailureExpected,V_failureExpected
international
TB,N,GisInternational,V_international
TB,N,GisSOS,SsetSOS:,V_sos
usingBaseband
TB,N,GisUsingBaseband,V_usingBaseband
TB,N,V_supportsEmergencyFallback
Ti,N,V_ttyType
TB,N,V_supportsTTYWithVoice
Tq,N,V_bluetoothAudioFormat
T@"NSString",C,N,V_audioCategory
T@"NSString",C,N,V_audioMode
TB,N,V_needsManualInCallSounds
T@"NSDictionary",C,N,V_endedReasonUserInfo
T@"NSString",C,N,V_endedErrorString
T@"NSString",C,N,V_endedReasonString
T@"NSData",&,N,V_localFrequency
T@"NSData",&,N,V_remoteFrequency
Tf,N,V_remoteMeterLevel
Tf,N,V_localMeterLevel
T@"NSUUID",C,N,V_callGroupUUID
Ti,N,V_callRelaySupport
mediaStalled
TB,N,GisMediaStalled,V_mediaStalled
videoDegraded
TB,N,GisVideoDegraded,V_videoDegraded
TB,N,GisVideoMirrored,V_videoMirrored
TB,N,V_isSendingAudio
thirdPartyVideo
TB,N,GisThirdPartyVideo,V_thirdPartyVideo
sharingScreen
TB,N,GisSharingScreen,V_sharingScreen
Tq,N,V_videoStreamToken
Tq,N,V_inputAudioPowerSpectrumToken
Tq,N,V_outputAudioPowerSpectrumToken
T@"NSDictionary",&,N,V_providerContext
T@"TUCallDisplayContext",C,N,V_displayContext
T@"NSSet",C,N,V_remoteParticipantHandles
TB,N,V_prefersExclusiveAccessToCellularNetwork
remoteUplinkMuted
TB,N,GisRemoteUplinkMuted,V_remoteUplinkMuted
T@"NSUUID",C,N,V_localSenderIdentityUUID
T@"NSUUID",C,N,V_localSenderIdentityAccountUUID
mutuallyExclusiveCall
TB,N,GisMutuallyExclusiveCall,V_mutuallyExclusiveCall
conversation
TB,N,GisConversation,V_conversation
senderIdentityClient
isRTTAvailable
isTTYAvailable
rttAvailable
TB,R,N,GisRTTAvailable
ttyAvailable
TB,R,N,GisTTYAvailable
initWithDestinationID:
initWithValue:type:
_appearsToBeEmail
stringForType:
setHasSetISOCountryCode:
handleWithDictionaryRepresentation:
isValidForISOCountryCode:
dictionaryRepresentation
hasSetISOCountryCode
_hasSetISOCountryCode
_normalizedValue
TB,N,V_hasSetISOCountryCode
T@"NSString",R,C,N,V_normalizedValue
T@"NSString",C,N,V_value
_requestInitialStateWithCompletionHandler:
_invokeCompletionHandler:
conversationProviderManagerServerXPCInterface
conversationProviderManagerClientXPCInterface
updateConversationProviders:
conversationProviderManagerAllowedClasses
conversationProviders:
conversationProviderForIdentifier:
T@"<TUConversationProviderManagerXPCServer>",&,N
_requestInitialStateIfNecessary
hasInitialState
setHasInitialState:
shouldConnectToken
setShouldConnectToken:
shouldConnectToHost
setShouldConnectToHost:
_hasInitialState
_shouldConnectToHost
_shouldConnectToken
TB,N,V_hasInitialState
Ti,N,V_shouldConnectToken
TB,N,V_shouldConnectToHost
callProviderManagerGeneratorBlock
initWithProvider:
callProviderFromURLComponents:video:
handleFromURL:
contactIdentifierFromURLComponents:
legacyAddressBookIdentifierFromURLComponents:
boolValueForQueryItemWithName:inURLComponents:
ttyTypeForString:
originatingUITypeForString:
initWithUserActivity:providerManager:
initWithUserActivity:providerManager:contactsDataSource:senderIdentityClient:
initWithDialIntent:providerManager:contactsDataSource:senderIdentityClient:
triggerMethod
_executionContext
originatingUITypeForExecutionContext:
_idiom
_originatingDeviceIDSIdentifier
_isOwnedByCurrentUser
_originatingDeviceRapportMediaSystemIdentifier
_originatingDeviceRapportEffectiveIdentifier
audioRoute
recordDeviceUID
recordDeviceIdentifier
destinationType
dialRequestTypeForIntentDestinationType:
ttyTypeForIntentTTYType:
emergencyType
callRecordToCallBack
providerId
providerForIntentPreferredCallProvider:recentCallProviderId:callCapability:providerManager:
_contactFromINPerson:contactsDataSource:bestGuessHandle:
predicateForContactsWithIdentifiers:
descriptorForRequiredKeys
contactGeminiManager
bestSenderIdentityForContact:error:
customIdentifier
stringForDialType:
providerCustomIdentifier
stringForTTYType:
endpointIDSDestinationURI
isRedial
validityErrors
sharedContactStore
isEmergencyNumberForDigits:senderIdentityUUID:
isWhitelistedEmergencyNumberForDigits:senderIdentityUUID:
destinationWithURI:
initWithCallProviderManager:
contactIdentifierFromPersonID:
user
destinationIDFromURL:
handleTypeForQueryItem:
legacyAddressBookIdentifierQueryItemName
URLScheme
URLHost
URLQueryItems
setEncodedHost:
handleTypeURLQueryItem
isVoicemailURLQueryItem
providerCustomIdentifierURLQueryItem
localSenderIdentityUUIDURLQueryItem
localSenderIdentityAccountUUIDURLQueryItem
contactIdentifierURLQueryItem
audioSourceIdentifierURLQueryItem
forceAssistURLQueryItem
suppressAssistURLQueryItem
dialAssistedURLQueryItem
ttyTypeURLQueryItem
originatingUIURLQueryItem
noPromptURLQueryItem
sosURLQueryItem
redialURLQueryItem
endpointIDSDestinationURIQueryItem
endpointRapportMediaSystemIdentifierQueryItem
endpointRapportEffectiveIdentifierQueryItem
successNotificationQueryItem
failureNotificationQueryItem
stringForOriginatingUIType:
successNotification
failureNotification
userActivityUsingDeprecatedCallingIntents:
intentTTYTypeForTTYType:
initWithContacts:
setLaunchId:
initWithDestinationType:contacts:
setTTYType:
setPreferredCallProvider:
_setOriginatingDeviceIdsIdentifier:
_setOriginatingDeviceRapportMediaSystemIdentifier:
_setOriginatingDeviceRapportEffectiveIdentifier:
validityErrorForUnspecifiedProvider
validityErrorForDestinationIDWithVoicemail
validityErrorForNonNormalDialTypeWithoutTelephony
validityErrorForEndpointNotOnCurrentDeviceForNonRelayableService
validityErrorForEmergencyCall
validityErrorForVideoUnsupported
validityErrorForNormalDialTypeWithUnknownDestination
validityErrorForUnsupportedHandleType
validityErrorForSOS
isEmergencyNumberOrIsWhitelistedBlock
isEmergencyNumberBlock
initWithStringValue:
predicateForContactsMatchingName:
isEqualToDialRequest:
dateDialed
setDialType:
setProviderCustomIdentifier:
setPerformDialAssist:
setPerformLocalDialAssist:
setHostOnCurrentDevice:
setRedial:
setEndpointIDSDestinationURI:
setSuccessNotification:
setFailureNotification:
setDateDialed:
processHandle
setProcessHandle:
setCallProviderManagerGeneratorBlock:
setLegacyAddressBookIdentifierToContactIdentifierTransformBlock:
legacyAddressBookIdentifierToContactIdentifierTransformBlock
useTTY
localSenderIdentity
destinationID
setDestinationID:
userActivity
dialRequestByReplacingProvider:
setContactGeminiManager:
setIsEmergencyNumberBlock:
setIsEmergencyNumberOrIsWhitelistedBlock:
_video
_performDialAssist
_performLocalDialAssist
_dialAssisted
_hostOnCurrentDevice
_endpointOnCurrentDevice
_redial
_senderIdentityClient
_contactGeminiManager
_dialType
_contactIdentifier
_providerCustomIdentifier
_providerManager
_isEmergencyNumberBlock
_isEmergencyNumberOrIsWhitelistedBlock
_dateDialed
_endpointIDSDestinationURI
_successNotification
_failureNotification
_processHandle
T@"TUCallProviderManager",R,N,V_providerManager
T@"CNGeminiManager",&,N,V_contactGeminiManager
T@?,C,N,V_isEmergencyNumberBlock
T@?,C,N,V_isEmergencyNumberOrIsWhitelistedBlock
T@"NSDate",&,N,V_dateDialed
T@"TUSenderIdentityClient",R,N,V_senderIdentityClient
TB,N,V_hostOnCurrentDevice
TB,N,V_endpointOnCurrentDevice
T@"NSString",C,N,V_endpointIDSDestinationURI
T@"IDSDestination",R,N
T@"NSString",C,N,V_endpointRapportMediaSystemIdentifier
T@"NSString",C,N,V_endpointRapportEffectiveIdentifier
T@"TUSenderIdentity",R,C,N
redial
TB,N,GisRedial,V_redial
T@"NSString",C,N,V_successNotification
T@"NSString",C,N,V_failureNotification
T@"BSProcessHandle",&,N,V_processHandle
Tq,N,V_dialType
T@"NSString",C,N,V_contactIdentifier
T@"NSString",C,N,V_providerCustomIdentifier
TB,N,GisVideo,V_video
TB,N,V_performDialAssist
TB,N,V_performLocalDialAssist
dialAssisted
TB,N,GisDialAssisted,V_dialAssisted
Tq,N,V_ttyType
valid
TB,R,N,GisValid
T@"NSUserActivity",R,N
device
handoffContext
initWithConversationID:device:handoffContext:
_device
_handoffContext
T@"TUNearbyDeviceHandle",R,N,V_device
T@"TUNeighborhoodHandoffContext",R,N,V_handoffContext
initWithSenderIdentityUUID:
setCsCallingCapabilitiesState:
setVoLTECallingCapabilitiesState:
setWiFiCallingCapabilitiesState:
setThumperCallingCapabilitiesState:
setSupportsSimultaneousVoiceAndData:
_supportsSimultaneousVoiceAndData
_csCallingCapabilitiesState
_voLTECallingCapabilitiesState
_wiFiCallingCapabilitiesState
_thumperCallingCapabilitiesState
TB,N,V_supportsSimultaneousVoiceAndData
T@"TUCTCapabilitiesState",C,N,V_csCallingCapabilitiesState
T@"TUCTCapabilitiesState",C,N,V_voLTECallingCapabilitiesState
T@"TUCTCapabilitiesState",C,N,V_wiFiCallingCapabilitiesState
T@"TUThumperCTCapabilitiesState",C,N,V_thumperCallingCapabilitiesState
dataWithBytes:length:
initWithBase64EncodedString:options:
initWithUUIDBytes:
getUUIDBytes:
tu_UUID
tu_dataForAuditToken:
tu_dataForUUID:
initWithUniqueProxyIdentifier:endpointOnCurrentDevice:notificationCenter:
_handleStatusChange
date
filteredOutReason
verificationStatus
priority
junkConfidence
identificationCategory
isKnownCaller
acceptableJunkConfidence
callServicesInterface
resetWantsHoldMusic
provisionalHoldStatus
holdCall:
unholdCall:
setProvisionalHoldStatus:
timeIntervalSinceReferenceDate
setRingtoneSuppressedRemotely:
suppressRingtone
wasDialAssisted
isEqualToCall:
timeIntervalSinceNow
localizedStringWithFormat:
isJunkConfidenceLevelJunk:
_supplementalDialTelephonyCallStringForLocString:destination:isPhoneNumber:includeFaceTimeAudio:
wiFiActiveAndReachable
dateAnsweredOrDialed
wasPulledToCurrentDevice
hostCreationTime
hostMessageSendTime
clientMessageReceiveTime
decodeDoubleForKey:
encodeDouble:forKey:
maxJunkConfidence
supplementalDialTelephonyCallStringForDestination:isPhoneNumber:
supplementalDialTelephonyCallString
faceTimeSupplementalDialTelephonyCallStringIncludingFTA:
setIsOnHold:
hold
unhold
hardPauseDigitsDisplayString
postNotificationsAfterUpdatesInBlock:
wasDeclined
startTime
suppressRingtoneDueToRemoteSuppression
isWiFiCall
isVoIPCall
isRTT
faceTimeTransportType
localizedHandoffRecipientDeviceCategory
handoffRecipientParticipant
dialRequestForRedial
groupWithOtherCall:
ungroup
shouldDisplayLocationIfAvailable
callHistoryIdentifier
callDurationString
reminderString
statusIsProvisional
isEmergencyCall
isJunk
isFromSiri
shouldPlayDTMFTone
supportsDTMFTones
suggestedDisplayName
abUID
hasRelaySupport:
serviceDisplayString
supplementalInCallString
errorAlertTitle
errorAlertMessage
callStats
isVideoUpgradeFromCall:
isDialRequestVideoUpgrade:
setFaceTimeIDStatus:
setDateAnsweredOrDialed:
setDateSentInvitation:
setDateStartedConnecting:
setDateConnected:
setDateEnded:
setWasDialAssisted:
setModel:
setFilteredOutReason:
setVerificationStatus:
setPriority:
setContactsDataSourceCreationBlock:
hasUpdatedAudio
setHasUpdatedAudio:
setSoundRegion:
ringtoneSuppressedRemotely
mediaPlaybackOnExternalDevice
setHostCreationTime:
setHostMessageSendTime:
setClientMessageReceiveTime:
setWasPulledToCurrentDevice:
setJoinedFromLink:
_shouldSuppressRingtone
_wasDialAssisted
_hasUpdatedAudio
_ptt
_ringtoneSuppressedRemotely
_mediaPlaybackOnExternalDevice
_wasPulledToCurrentDevice
_isKnownCaller
_joinedFromLink
_disconnectedReason
_faceTimeIDStatus
_filteredOutReason
_transitionStatus
_hardPauseDigitsState
_dateCreated
_dateAnsweredOrDialed
_dateSentInvitation
_dateStartedConnecting
_dateConnected
_dateEnded
_model
_comparativeCall
_callServicesInterface
_videoCallAttributes
_verificationStatus
_priority
_contactsDataSourceCreationBlock
_provisionalHoldStatus
_soundRegion
_hostCreationTime
_hostMessageSendTime
_clientMessageReceiveTime
_hardPauseDigits
_junkConfidence
_identificationCategory
_remoteScreenAspectRatio
T@"NSNotificationCenter",R,N,GnotificationCenter
TB,R,N,V_lockdownModeEnabled
T@"TUProxyCall",&,N,V_comparativeCall
Ti,N,V_filteredOutReason
T@"TUCallServicesInterface",W,N,V_callServicesInterface
T@"TUVideoCallAttributes",&,N,V_videoCallAttributes
T@"NSUUID",R,C,N
T@"NSDate",&,N,V_dateAnsweredOrDialed
T@"NSDate",&,N,V_dateSentInvitation
T@"NSDate",&,N,V_dateStartedConnecting
T@"NSDate",&,N,V_dateConnected
T@"NSDate",&,N,V_dateEnded
Tq,N,V_verificationStatus
Tq,N,V_priority
T@?,C,N,V_contactsDataSourceCreationBlock
T@"TUParticipant",R,C,N,V_activeRemoteParticipant
Tq,N,V_provisionalHoldStatus
Ti,N,V_disconnectedReason
T@"NSURL",R,N,V_imageURL
Tq,R,N,V_serviceStatus
Tq,R,N,V_transmissionMode
TB,R,N,GisReceivingTransmission
TB,R,N,GisSendingTransmission
Ti,N,V_transitionStatus
Ti,N,V_faceTimeIDStatus
TB,N,V_hasUpdatedAudio
Tq,N,V_soundRegion
TB,N,GisEndpointOnCurrentDevice,V_endpointOnCurrentDevice
TB,R,N,GisPTT,V_ptt
TB,R,N,GisSOS
TB,R,N,GisRemoteUplinkMuted
Tf,R,N
TB,N,V_shouldSuppressRingtone
TB,N,V_ringtoneSuppressedRemotely
wiFiCall
TB,R,N,GisWiFiCall
voipCall
TB,R,N,GisVoIPCall
T@"NSDictionary",R,N,V_providerContext
T@"NSNumber",R,N
TB,R,N,GisMediaStalled
TB,R,N,GisVideoDegraded
TB,R,N,GisVideoPaused
TB,R,N,GisVideoMirrored
T{CGSize=dd},R,N,V_remoteScreenAspectRatio
TB,N,V_mixesVoiceWithMedia
TB,N,V_mediaPlaybackOnExternalDevice
TB,R,N,GisThirdPartyVideo
Td,N,V_hostCreationTime
Td,N,V_hostMessageSendTime
Td,N,V_clientMessageReceiveTime
TB,N,V_wasPulledToCurrentDevice
Ti,N,V_hardPauseDigitsState
T@"NSString",C,N,V_hardPauseDigits
T@"TUCallModel",C,N,V_model
T@"TUCallDisplayContext",R,C,N
TB,R,N,GisMutuallyExclusiveCall
TB,R,N,GisConversation
Ti,R,N,V_originatingUIType
Tq,R,N,V_junkConfidence
Tq,R,N,V_identificationCategory
junk
TB,R,N,GisJunk
fromSiri
TB,R,N,GisFromSiri
TB,R,N,V_isKnownCaller
TB,N,V_joinedFromLink
T@"TUCallScreenShareAttributes",R,N,V_screenShareAttributes
TB,R,N,GisInternational,V_international
T@"TUCallCenter",R,W,N
TB,R,N,GisHostedOnCurrentDevice
TB,R,N,GisRTT
TB,R,N,GisVoicemail
T@"NSDate",R,N,V_dateCreated
connecting
TB,R,N,GisConnecting
connected
TB,R,N,GisConnected
TB,R,N,GisOutgoing
incoming
TB,R,N,GisIncoming
TB,R,N,GisBlocked
Td,R,N
conferenced
TB,R,N,GisConferenced
T@"TUHandle",R,N
TB,N,V_wasDialAssisted
emergencyCall
TB,R,N,GisEmergencyCall
TB,R,N,GisEmergency
TB,R,N,GisUsingBaseband
T@"NSData",R,N
T@"TUDialRequest",R,C,N
initWithFeatureFlags:userDefaults:serverBag:
serverBagValueForKey:withDefault:
shouldForceVerificationFailures
TB,R,N,GisEnabled
setUserDefaults:
serverBag
setServerBag:
_userDefaults
_serverBag
T@"NSUserDefaults",&,N,V_userDefaults
T@"FTServerBag",&,N,V_serverBag
_cleanup
fetchRequest
cancel
request
setSearchString:
setSearchType:
setIncludeContacts:
setIncludeRecents:
setIncludeSuggestions:
setIncludePredictions:
setIncludeDirectoryServers:
setIncludeCalendarServers:
facetimeService
setSendingAddressAccountIdentifier:
setFetchContext:
setAutocompleteStore:
autocompleteStore
scheduleFetchRequest:
setFetchRequest:
setCancelled:
autocompleteResultPartitioner
isCancelled
setAutocompleteResultPartitioner:
autocompleteFetch:didReceiveResults:
autocompleteFetch:didFailWithError:
autocompleteFetchDidFinish:
autocompleteFetchDidBeginNetworkActivity:
autocompleteFetchDidEndNetworkActivity:
autocompleteFetch:shouldExpectSupplementalResultsForRequest:completionHandler:
autocompleteFetch:willAdjustResults:
autocompleteFetch:willSortResults:
resultComparatorForAutocompleteFetch:
_cancelled
_autocompleteStore
_fetchRequest
_autocompleteResultPartitioner
T@"CNAutocompleteStore",&,N,V_autocompleteStore
T@"<CNAutocompleteCancelable>",&,N,V_fetchRequest
T@"TUAutocompleteResultPartitioner",&,N,V_autocompleteResultPartitioner
cancelled
TB,N,GisCancelled,V_cancelled
callHistoryControllerServerXPCInterface
callHistoryControllerClientXPCInterface
callHistoryControllerAllowedClasses
T@"<TUCallHistoryControllerXPCServer>",&,N
updateOutgoingLocalParticipantUUID:forCallsWithOutgoingLocalParticipantUUID:
callHistoryManagerAllowedClasses
callHistoryManagerServerXPCInterface
callHistoryManagerClientXPCInterface
T@"<TUCallHistoryManagerXPCServer>",&,N
setAuxiliaryKeysToFetch:
setPhoneNumberPrefixHint:
setUseNetworkCountryCode:
_useNetworkCountryCode
_verified
_incoming
_auxiliaryKeysToFetch
_phoneNumberPrefixHint
_handles
TB,R,N,GisEmergency,V_emergency
TB,R,N,GisBlocked,V_blocked
TB,R,N,GisConversation,V_conversation
verified
TB,R,N,GisVerified,V_verified
TB,R,N,GisIncoming,V_incoming
T@"NSString",R,C,N,V_isoCountryCode
T@"NSArray",R,C,N,V_handles
T@"NSArray",C,N,V_auxiliaryKeysToFetch
T@"NSString",C,N,V_phoneNumberPrefixHint
TB,N,V_useNetworkCountryCode
dataUsingEncoding:
tu_UUIDv5ForData:namespaceUUID:
bytes
tu_UUIDv5ForString:namespaceUUID:
wantsCallDisconnectionOnInvalidation
wantsFrequencyChangeNotifications
wantsCallStopStreamingOnInvalidation
wantsCallNotificationsDisabledWhileSuspended
setWantsCallDisconnectionOnInvalidation:
setWantsCallStopStreamingOnInvalidation:
setWantsFrequencyChangeNotifications:
setWantsCallNotificationsDisabledWhileSuspended:
_wantsCallDisconnectionOnInvalidation
_wantsCallStopStreamingOnInvalidation
_wantsFrequencyChangeNotifications
_wantsCallNotificationsDisabledWhileSuspended
T@"<TUCallServicesClientCapabilitiesActions>",W,N,V_delegate
TB,N,V_wantsCallDisconnectionOnInvalidation
TB,N,V_wantsCallStopStreamingOnInvalidation
TB,N,V_wantsFrequencyChangeNotifications
TB,N,V_wantsCallNotificationsDisabledWhileSuspended
processBundleIdentifier
_registerConnection
registerStreamToken:requesterID:remoteIDSDestinations:remoteMomentsAvailable:reply:
unregisterStreamToken:reply:
startRequestWithMediaType:forStreamToken:requesteeID:reply:
endRequestWithTransactionID:reply:
registerXPCClientWithReply:
momentsControllerServerXPCInterface
momentsControllerClientXPCInterface
requestSandboxExtensionForURL:reply:
didUpdateCapabilities:forVideoStreamToken:
willCaptureRemoteRequestFromRequesterID:
didReceiveLocallyRequestedMomentDescriptor:
T@"<TUMomentsControllerDataSourceDelegate>",W,N
T@"<TUMomentsControllerXPCServer>",&,N
T@"<TUMomentsControllerDataSourceDelegate>",W,N,V_delegate
isFromBlockList
allowCallForDestinationID
setAllowCallForDestinationID:
setFromBlockList:
_allowCallForDestinationID
_fromBlockList
TB,N,V_allowCallForDestinationID
fromBlockList
TB,N,GisFromBlockList,V_fromBlockList
allowCallForDestinationID:providerIdentifier:queue:completionHandler:
allowCallForDestinationID:providerIdentifier:
sharedInstanceWithQueue:server:shouldRegister:
callCenterWithQueue:server:shouldRegister:
initWithQueue:featureFlags:
supportsJoiningConversationWithRequest:
joinConversationWithConversationRequest:
audioDeviceController
isRelayCallingSupportedForProvider:isVideo:
_shouldPreferRelayOverDirectSecondaryCallingForRelayingCallingAvailability:isRelayCallingSupported:isEmergencyCallbackPossible:
_existingCallsAllowDialRequest:allowVoiceWithData:
_isEmergencyDialRequest:
callFilterController
_isCallingAvailableOnSecondaryDeviceWithRelayCallingAvailability:isProviderAvailable:isRelayAllowed:isEmergency:supportsBasebandCalling:shouldUseRelay:
_canDialWithRequest:shouldUseRelay:
_dialWithRequest:completion:
launchAppForJoinRequest:
_intents_bundleIdForLaunching
answerCall:withSourceIdentifier:wantsHoldMusic:
endActiveAndAnswerCall:
endHeldAndAnswerCall:
routeController
disconnectCall:withReason:
updateCall:withAnswerRequest:
_preflightDisconnectForCalls:withCompletion:
disconnectCallPreflight
disconnectAllCallsWithNoPreflight
handleActionForWiredHeadsetMiddleButtonPressWithSourceIdentifier:allowBluetoothAnswerWithoutDowngrade:shouldForceDowngradeToAudio:
isHoldAndAnswerAllowed
isEndAndAnswerAllowed
localOrigin
initWithOrigin:
sendCommand:options:queue:completion:
handleHeadsetButtonPressForActiveCalls
nowPlayingPlayerPathOnQueue:completion:
launchAppForJoinRequestBlock
continueHandoffForConversationWithEligibility:
isSubsetOfSet:
answerCall:
activeConversationForCall:backedByGroupSession:
isMergeable
_callGroupCountForCall:withCall:
_splitSessionErrorWithCode:underlyingError:
initWithType:identifier:name:
neighborhoodActivityConduit
callCenterWithQueue:
T@"TUCallCenter",R,N
videoDeviceController
isDirectCallingCurrentlyAvailableForProvider:isVideo:
shouldPreferRelayOverDirectSecondaryCallingForProvider:isVideo:
canDialWithRequest:
dialWithRequest:
applicationWillLaunchForStartCallInteraction:
sendFieldModeDigits:forProvider:
answerOrJoinCall:
answerCall:withSourceIdentifier:
answerCallWithHoldMusic:
holdActiveAndAnswerCall:
endActiveOrHeldAndAnswerCall:
reportLocalPreviewStoppedForCall:
requestVideoUpgradeForCall:
resumeCall:
groupCall:withOtherCall:
ungroupCall:
disconnectCall:
handleActionForWiredHeadsetMiddleButtonPress
handleActionForWiredHeadsetMiddleButtonLongPress
setTTYType:forCall:
pushRelayingCallsToHost
pickRouteForRapportDeviceWithMediaSystemIdentifier:effectiveIdentifier:
continueHandoffEligibleConversation
enteredForegroundForCall:
isSwappable
isHoldAllowed
isTakingCallsPrivateAllowed
isHardPauseAvailable
isSendToVoicemailAllowed
canMergeCalls
isAddCallAllowed
isAmbiguous
canGroupCall:withCall:
createSplitSessionWithDeviceMediaRouteIdentifier:completion:
disconnectDeviceFromSplitSessionUsingMediaRouteIdentifier:completion:
setAudioDeviceController:
setVideoDeviceController:
setRouteController:
setCallFilterController:
setNeighborhoodActivityConduit:
setProviderManager:
setDisconnectCallPreflight:
setLaunchAppForJoinRequestBlock:
setConversationManager:
_audioDeviceController
_videoDeviceController
_routeController
_callFilterController
_neighborhoodActivityConduit
_disconnectCallPreflight
_launchAppForJoinRequestBlock
T@"TUCallServicesInterface",&,N,V_callServicesInterface
T@"TUAudioDeviceController",&,N,V_audioDeviceController
T@"TUVideoDeviceController",&,N,V_videoDeviceController
T@"TURouteController",&,N,V_routeController
T@"TUCallFilterController",&,N,V_callFilterController
T@"TUNeighborhoodActivityConduit",&,N,V_neighborhoodActivityConduit
T@"TUCallProviderManager",&,N,V_providerManager
T@?,C,N,V_disconnectCallPreflight
T@?,C,N,V_launchAppForJoinRequestBlock
T@"TUConversationManager",&,N,V_conversationManager
addCallAllowed
TB,R,N,GisAddCallAllowed
ambiguous
TB,R,N,GisAmbiguous
endAndAnswerAllowed
TB,R,N,GisEndAndAnswerAllowed
holdAndAnswerAllowed
TB,R,N,GisHoldAndAnswerAllowed
updateOutgoingLocalParticipantUUID:forCallsWithLocalParticipantUUID:
T@"<TUCallHistoryManagerDataSource>",R,N,V_dataSource
numberForKey:
announceCalls
conversationLinkBaseURL
simulateFatalPersistentStoreError
simulateInternationalCall
setAnnounceCalls:
setConversationLinkBaseURLString:
setConversationLinkBaseURL:
setSimulateFatalPersistentStoreError:
setSimulateInternationalCall:
_delegateController
T@"TUDelegateController",R,N,V_delegateController
TQ,N
T@"NSString",&,N
T@"<TUKeyValueDataSource><TUMutableKeyValueDataSource>",R,N,V_dataSource
tu_stringWithTUConfigurationAnnounceCalls:
auditToken
isFileURL
checkResourceIsReachableAndReturnError:
startCallIntentByHandleForHandles:capability:destinationType:
descriptorForUsedKeys
contactProvider
tu_INPersonHandleForTUHandle:label:
componentsForContact:
personsByHandleForHandles:
initWithCallRecordFilter:callRecordToCallBack:audioRoute:destinationType:contacts:callCapability:
tu_INPersonHandleTypeForTUHandleType:
initWithValue:type:label:
initWithContactProvider:
voicemailStartCallIntentByHandleForHandles:
_contactProvider
T@"<TUHandleContactProvider>",R,N,V_contactProvider
endpoint
isLocallyInitiated
isLightweightPrimaryInitiated
isFirstJoin
distributionCount
isPermittedToJoin
isUsingAirplay
persistentSceneIdentifier
applicationState
clientAudioSessionID
initWithActivity:state:uuid:endpoint:locallyInitiated:timestamp:isFirstJoin:activeRemoteParticipants:applicationState:
initWithActivity:uuid:locallyInitiated:timestamp:isFirstJoin:
isEqualToConversationActivitySession:
timeIntervalSince1970
initWithTUConversationActivitySession:
setDistributionCount:
setIsLightweightPrimaryInitiated:
setPermittedToJoin:
setPersistentSceneIdentifier:
setUsingAirplay:
setClientAudioSessionID:
setFrontBoardOptions:
initWithActivity:state:endpoint:locallyInitiated:timestamp:isFirstJoin:
initWithActivity:locallyInitiated:timestamp:isFirstJoin:
launchApplicationWithForcedURL:completion:
publicCopy
setEndpoint:
setIsLocallyInitiated:
terminatingHandle
setTerminatingHandle:
_isLocallyInitiated
_isLightweightPrimaryInitiated
_isFirstJoin
_permittedToJoin
_usingAirplay
_endpoint
_clientAudioSessionID
_persistentSceneIdentifier
_distributionCount
_applicationState
_terminatingHandle
TQ,N,V_state
T@"NSXPCListenerEndpoint",&,N,V_endpoint
TB,N,V_isLocallyInitiated
usingAirplay
TB,N,GisUsingAirplay,V_usingAirplay
T@"NSDate",&,N,V_timestamp
T@"NSNumber",&,N,V_clientAudioSessionID
TB,N,V_isLightweightPrimaryInitiated
TB,R,N,V_isFirstJoin
permittedToJoin
TB,N,GisPermittedToJoin,V_permittedToJoin
T@"NSSet",R,N,V_activeRemoteParticipants
T@"NSString",&,N,V_persistentSceneIdentifier
TQ,N,V_distributionCount
TQ,R,N,V_applicationState
T@"TUHandle",&,N,V_terminatingHandle
T@"TUConversationActivity",&,D,N
T@"NSXPCListenerEndpoint",&,D,N
TB,D,N,GisPermittedToJoin
T@"NSSet",&,D,N
T@"NSString",&,D,N
TB,D,N,GisUsingAirplay
initWithName:knownIdentifiers:deviceModel:capabilities:
identifierDescription
deviceModel
initWithName:knownIdentifiers:deviceModel:
initWithName:knownIdentifiers:
initWithType:identifier:name:capabilities:
identifierWithType:
isEquivalentToDeviceHandle:
isEqualToDeviceHandle:
_deviceModel
_knownIdentifiersByHandleType
T@"NSDictionary",R,N,V_knownIdentifiersByHandleType
Tq,R,N,V_deviceModel
T@"TUNearbyDeviceHandleCapabilities",R,N,V_capabilities
isEmergencyNumberForDigits:senderIdentityUUID:error:
isWhitelistedEmergencyNumberForDigits:senderIdentityUUID:error:
shouldShowEmergencyCallbackModeAlertForSenderIdentityUUID:error:
shouldShowEmergencyCallbackModeAlertForSenderIdentityUUID:
testEmergencyHandleForAccountUUID:error:
unfairLockForTesting
_object
isEqualToProvider:
_remoteMomentsAvailable
_requesterID
_remoteIDSDestinations
Tq,R,N,V_streamToken
T@"NSString",R,C,N,V_requesterID
T@"NSDictionary",R,C,N,V_remoteIDSDestinations
remoteMomentsAvailable
TB,R,N,GisRemoteMomentsAvailable,V_remoteMomentsAvailable
incomingPendingConversationsByGroupUUID:
pseudonymsByCallUUID:
activatedConversationLinks:
setSharePlayAvailable:
getSharePlayAvailableWithCompletionHandler:
getScreenSharingAvailableWithCompletionHandler:
addRemoteMembers:otherInvitedHandles:toConversationWithUUID:
updateMessagesGroupName:onConversationWithUUID:
setGridDisplayMode:forConversationWithUUID:
updateMessagesGroupPhotoOnConversationWithUUID:
createActivitySession:onConversationWithUUID:
leaveActivitySession:onConversationWithUUID:
endActivitySession:onConversationWithUUID:
presentDismissalAlertForActivitySessionWithUUID:onConversationWithUUID:
buzzMember:conversationUUID:
kickMember:conversationUUID:
setDownlinkMuted:forRemoteParticipantsInConversationWithUUID:
setAudioEnabled:forRemoteParticipantWithIdentifier:conversationUUID:
setVideoEnabled:forRemoteParticipantWithIdentifier:conversationUUID:
generateLinkForConversationUUID:completionHandler:
approvePendingMember:forConversationUUID:
rejectPendingMember:forConversationUUID:
setIgnoreLetMeInRequests:forConversationUUID:
conversationsByGroupUUID:
activityAuthorizedBundleIdentifierState:
conversationManagerServerXPCInterface
conversationManagerClientXPCInterface
mediaDelegate
mediaPrioritiesChangedForConversation:
getMessagesGroupDetailsForMessagesGroupUUID:completionHandler:
updateConversationsByGroupUUID:
updateActivatedConversationLinks:
conversation:appLaunchState:forActivitySession:
updateActivityAuthorizedBundleIdentifierState:
updateIncomingPendingConversationsByGroupUUID:
conversationManagerAllowedClasses
T@"<TUConversationManagerDataSourceDelegate>",W,N
T@"<TUConversationMediaControllerDataSourceDelegate>",W,N
T@"<TUConversationManagerXPCServer>",&,N
setConversationsByGroupUUID:
setActivityAuthorizedBundleIdentifiers:
_autoSharePlayEnabled
_mediaDelegate
_conversationsByGroupUUID
_activityAuthorizedBundleIdentifiers
_sharePlayAvailable
T@"NSDictionary",C,N,V_conversationsByGroupUUID
T@"NSDictionary",C,N,V_activityAuthorizedBundleIdentifiers
T@"NSNumber",C,N,V_sharePlayAvailable
T@"NSNumber",C,N,V_screenSharingAvailable
TB,N,V_autoSharePlayEnabled
T@"<TUConversationManagerDataSourceDelegate>",W,N,V_delegate
T@"<TUConversationMediaControllerDataSourceDelegate>",W,N,V_mediaDelegate
tu_contactsByConversationMemberForConversationMembers:keyDescriptors:error:
tu_contactsByRemoteConversationMemberForConversations:keyDescriptors:error:
outgoingLocalParticipantUUID
dialRequestForRecentCall:
@24@0:8@16
@32@0:8@16@24
@16@0:8
v24@0:8@16
v16@0:8
@"NSObject<OS_dispatch_queue>"
@"<TURouteControllerActions>"
@"NSHashTable"
@"NSDictionary"
B16@0:8
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@28@0:8i16@20
Q16@0:8
B24@0:8@16
i16@0:8
@"NSSet"
^{__IOHIDEventSystemClient=}
@"NSString"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@?24
v48@0:8@16Q24Q32@?40
v44@0:8B16q20@28@?36
v48@0:8@16q24@32@?40
v40@0:8q16@24@?32
v40@0:8@16@24@?32
v32@0:8@"NSArray"16@?<v@?B@"NSError">24
v32@0:8@"NSPredicate"16@?<v@?Q@"NSError">24
v48@0:8@"NSPredicate"16Q24Q32@?<v@?@"NSArray"@"NSError">40
v44@0:8B16q20@"NSPredicate"28@?<v@?Q@"NSError">36
v48@0:8@"NSDate"16q24@"NSPredicate"32@?<v@?Q@"NSError">40
v48@0:8@"NSSet"16q24@"NSPredicate"32@?<v@?Q@"NSError">40
v48@0:8@"NSString"16q24@"NSPredicate"32@?<v@?Q@"NSError">40
v40@0:8q16@"NSString"24@?<v@?B@"NSError">32
v32@0:8@"NSString"16@?<v@?q@"NSError">24
v40@0:8@"NSString"16@"NSString"24@?<v@?B@"NSError">32
v32@0:8@"NSString"16@?<v@?@"NSString"@"NSError">24
B32@0:8@16^@24
Q32@0:8@16^@24
@48@0:8@16Q24Q32^@40
Q44@0:8B16q20@28^@36
Q48@0:8@16q24@32^@40
B32@0:8@"NSArray"16^@24
Q32@0:8@"NSPredicate"16^@24
@"NSArray"48@0:8@"NSPredicate"16Q24Q32^@40
Q44@0:8B16q20@"NSPredicate"28^@36
Q48@0:8@"NSDate"16q24@"NSPredicate"32^@40
Q48@0:8@"NSSet"16q24@"NSPredicate"32^@40
Q48@0:8@"NSString"16q24@"NSPredicate"32^@40
@"<TUConversationLinkDescriptorDataSourceDelegate>"16@0:8
v24@0:8@"<TUConversationLinkDescriptorDataSourceDelegate>"16
B40@0:8q16@24^@32
q32@0:8@16^@24
B40@0:8@16@24^@32
@32@0:8@16^@24
B40@0:8q16@"NSString"24^@32
q32@0:8@"NSString"16^@24
B40@0:8@"NSString"16@"NSString"24^@32
@"NSString"32@0:8@"NSString"16^@24
@24@0:8@?16
{os_unfair_lock_s=I}16@0:8
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"<TUConversationLinkDescriptorDataSourceDelegate>"
@"NSXPCConnection"
@36@0:8@16B24^@28
v36@0:8@16B24@?28
v32@0:8@16@24
@"NSObject<OS_dispatch_semaphore>"
@24@0:8^{_NSZone=}16
@48@0:8@16@24@32@40
@56@0:8@16@24@32@40@48
@64@0:8@16@24@32@40@48@56
@36@0:8@16@24B32
v20@0:8B16
@"NSUUID"
@"NSData"
@"TUConversationActivityMetadata"
@"TUHandle"
@"NSDate"
@?16@0:8
v24@0:8@?16
@"CXCallDirectoryManager"
@"PNRPhoneNumberResolver"
v68@0:8@?16^@24^B32B40^Q44@52@60
v76@0:8@?16^@24^B32B40^Q44@52@60@68
@40@0:8@16@24@32
v28@0:8B16@20
@"TUSenderIdentityCapabilitiesState"
@"TUCallCapabilitiesXPCClient"
q16@0:8
@32@0:8@16i24B28
@28@0:8@16i24
@44@0:8@16i24B28B32B36B40
@28@0:8@16B24
@32@0:8@16q24
@40@0:8@16i24B28B32B36
@24@0:8^@16
@"NSData"24@0:8^@16
@"NSSet"16@0:8
@32@0:8@"NSData"16^@24
v20@0:8i16
@"NSURL"
v24@0:8q16
@"TUConversationLinkOriginator"
@20@0:8B16
@24@0:8q16
@?24@0:8@?16
i20@0:8i16
v20@0:8I16
v32@0:8@16q24
v36@0:8B16d20d28
v24@0:8@"NSString"16
v24@0:8@"VideoAttributes"16
v32@0:8@"NSString"16@"NSError"24
v24@0:8@"NSData"16
v32@0:8@"NSString"16q24
v40@0:8@16@24@32
v28@0:8@16B24
v24@0:8@"<TUVideoDeviceControllerProvider>"16
v32@0:8@"<TUVideoDeviceControllerProvider>"16@"NSString"24
v32@0:8@"<TUVideoDeviceControllerProvider>"16@"VideoAttributes"24
v40@0:8@"<TUVideoDeviceControllerProvider>"16@"NSString"24@"NSError"32
v28@0:8@"<TUVideoDeviceControllerProvider>"16B24
v32@0:8@"<TUVideoDeviceControllerProvider>"16@"NSData"24
v24@0:8d16
v32@0:8d16d24
v48@0:8{CGSize=dd}16{CGSize=dd}32
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
{CGSize=dd}16@0:8
@"<TUVideoDeviceControllerProvider><TUVideoEffectsProvider>"
@"<TUFeatureFlags>"
v32@0:8@"NSString"16@?<v@?@"<TUSearchModuleProtocol>"B>24
@"TUSearchResults"16@0:8
@"TUSearchController"16@0:8
v24@0:8@"TUSearchController"16
@"TUSearchController"
@"NSMutableArray"
Vv40@0:8q16@24@?32
Vv40@0:8q16@"NSString"24@?<v@?@"NSError">32
v40@0:8q16@"NSString"24@?<v@?@"NSError">32
B20@0:8C16
q24@0:8q16
@32@0:8q16q24
@"UIImage"
@"TUConversationLink"
@40@0:8@16q24@32
v40@0:8@?16Q24@?32
v48@0:8@?16Q24d32@?40
@"TURepeatingAction"
v24@0:8Q16
d16@0:8
@32@0:8Q16Q24
v24@0:8@"TUCallProviderManager"16
@40@0:8Q16Q24@32
@24@0:8Q16
@"NSArray"
@"CHManager"
@"TUCallProviderManager"
@"TUDispatcher"
@"NSMutableSet"
@"<TUCallHistoryControllerDataSource>"
v36@0:8B16@20@28
@"<TUCoreTelephonyClient>"
v40@0:8@16@24q32
v40@0:8@"<TUMomentsControllerDataSource>"16@"TUMomentsCapabilities"24q32
v32@0:8@"<TUMomentsControllerDataSource>"16@"NSString"24
v32@0:8@"<TUMomentsControllerDataSource>"16@"TUMomentDescriptor"24
v40@0:8@"<TUMomentsControllerDataSource>"16@"NSURL"24@?<v@?@"TUSandboxExtendedURL"@"NSError">32
v24@0:8@"<TUMomentsControllerDataSource>"16
v44@0:8i16@20@28@?36
@"<TUMomentsControllerDataSource>"
@"<TUMomentsControllerDelegate>"
@"NSMutableDictionary"
I16@0:8
v28@0:8I16d20
v36@0:8I16Q20d28
v44@0:8I16Q20d28@?36
@"TURepeatingActor"
Vv24@0:8@16
Vv24@0:8@"NSString"16
@"AVAudioClient"
@"<TUAudioDeviceControllerActions>"
@"NSUUID"16@0:8
@"TUConversationActivitySession"
@40@0:8Q16@24@32
@32@0:8Q16@24
@"TUConversationParticipantCapabilities"
@"TUConversationParticipantAssociation"
@"CNContact"16@0:8
@"NSArray"16@0:8
@"CHRecentCall"
v48@0:8@16d24@32@?40
v48@0:8@16@24@32@?40
@"<TUConversationProviderManagerDataSource>"
@"CNAutocompleteResult"
B32@0:8@16@24
B36@0:8q16@24B32
B24@0:8Q16
B24@0:8q16
@"TUConversationReport"
@"TUConversationProvider"
@"TUConversationMember"
@"TUConversationHandoffEligibility"
@"NSObject"
@20@0:8i16
Q24@0:8@?16
B24@0:8@?16
B20@0:8i16
@"NSArray"24@0:8@?<B@?@"TUCall">16
@"NSArray"20@0:8i16
@"NSArray"24@0:8@"NSUUID"16
@"TUCall"24@0:8@?<B@?@"TUCall">16
@"TUCall"20@0:8i16
@"TUCall"24@0:8@"NSString"16
@"TUCall"24@0:8@"NSArray"16
Q24@0:8@?<B@?@"TUCall">16
B24@0:8@?<B@?@"TUCall">16
@"TUCall"16@0:8
v32@0:8@?16@?24
v40@0:8Q16@?24@?32
@32@0:8@?16Q24
@32@0:8@?16@?24
B24@0:8@"<TUScreenShareAttributes>"16
@"NSNumber"16@0:8
v24@0:8@"NSNumber"16
@"NSValue"16@0:8
v24@0:8@"NSValue"16
v24@0:8@"NSUUID"16
@"NSNumber"
@"NSValue"
v48@0:8@16@24q32@?40
v24@0:8@"TUNeighborhoodActivityConduitXPCClient"16
v24@0:8@"TUNearbyDeviceHandle"16
v48@0:8@"NSUUID"16@"TUNearbyDeviceHandle"24q32@?<v@?B@"NSError">40
@"<TUNeighborhoodActivityConduitApprovalDelegate>"
@"TUNearbyDeviceHandle"
@"NSMapTable"
@"TUNeighborhoodActivityConduitXPCClient"
@"TUConversationManager"
f16@0:8
v20@0:8f16
v44@0:8@16@24B32@?36
@"<TUAudioSystemControllerDelegate>"
Vv24@0:8@"TUCallCapabilitiesState"16
Vv20@0:8B16
Vv28@0:8B16@20
Vv36@0:8B16@20@28
Vv28@0:8B16@"NSString"20
Vv28@0:8B16@"NSUUID"20
Vv36@0:8B16@"NSString"20@"NSUUID"28
Vv24@0:8@"NSUUID"16
Vv24@0:8@?16
Vv24@0:8@?<v@?@"TUCallCapabilitiesState">16
v24@0:8@"<TUCallCapabilitiesXPCClient>"16
@"TUCallCapabilitiesState"
@"TUConversationMemberAssociation"
@"TUVoucher"
@?<v@?>16@0:8
v24@0:8@?<v@?>16
@40@0:8@16@24@?32
i24@0:8@16
@"<TUContactsDataSource>"
@"TUContactsDataProviderAppleCareHandles"
@40@0:8@16@24^@32
r^v24@0:8@16
@"NSDictionary"40@0:8@"NSArray"16@"NSArray"24^@32
@"CNContact"40@0:8@"NSString"16@"NSArray"24^@32
@"NSArray"40@0:8@"NSPredicate"16@"NSArray"24^@32
r^v24@0:8@"CNContact"16
@"CNContact"32@0:8@"NSString"16@"NSArray"24
B28@0:8@16B24
Q24@0:8@16
@"NSDictionary"24@0:8@"<TUContactsDataSource>"16
@44@0:8@16@24@32B40
@"TUConversationActivity"
B24@0:8@"NSUUID"16
v32@0:8{CGSize=dd}16
@"IDSDestination"
{CGSize="width"d"height"d}
@"TUMetadataCache"
v28@0:8@16i24
v28@0:8@"CALayer"16i24
@"CALayer"
Vv40@0:8@16@24@32
Vv40@0:8@"NSDictionary"16@"NSDictionary"24@"NSDictionary"32
Vv32@0:8@16@?24
Vv24@0:8@?<v@?@"NSDictionary"@"NSDictionary"@"NSDictionary">16
Vv32@0:8@"TUDialRequest"16@?<v@?@"NSError">24
v24@0:8@"<TUCallProviderManagerXPCClient>"16
B36@0:8@16B24^@28
B36@0:8@"NSURL"16B24^@28
v32@0:8@"TUDialRequest"16@?<v@?@"NSError">24
@"NSDictionary"16@0:8
@"<TUCallProviderManagerDataSourceDelegate>"16@0:8
v24@0:8@"<TUCallProviderManagerDataSourceDelegate>"16
@"<TUCallProviderManagerDataSourceDelegate>"
@"NSPersonNameComponents"
B36@0:8@16@24B32
B40@0:8@16@24@32
@"<TUCallFilterControllerActions>"
@"<TUMetadataCacheDataProviderDelegate>"
@"TUConversationProviderConfiguration"
@92@0:8@16@24@32@40@48@56@64B72@76q84
@"TUCallCenter"
v24@0:8@"TUConversation"16
@"<TUConversationMediaControllerDelegate>"
@"<TUConversationManagerDataSource>"
@"TUConversationVirtualParticipantConfig"
@"TUConversationUnreliableMessengerConfig"
@36@0:8@16q24B32
@"TUGroupTitle"
v32@0:8@16Q24
@68@0:8Q16Q24Q32Q40B48@52@60
@84@0:8Q16Q24@32@40{CGRect={CGPoint=dd}{CGSize=dd}}48B80
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
v24@0:8@"TUConfiguration"16
v48@0:8@16@24@32^v40
Vv36@0:8@16i24@28
Vv32@0:8f16i20@24
Vv32@0:8@16@24
Vv36@0:8@"NSData"16i24@"NSArray"28
Vv32@0:8f16i20@"NSArray"24
Vv32@0:8@"NSArray"16@"TUCall"24
Vv40@0:8@"NSString"16@"NSString"24@"NSDictionary"32
Vv24@0:8@"NSDictionary"16
Vv28@0:8@16C24
Vv28@0:8i16@20
Vv40@0:8@16{CGSize=dd}24
Vv28@0:8@16i24
Vv32@0:8@16q24
Vv24@0:8@"TUAnswerRequest"16
Vv32@0:8@"NSString"16@"NSString"24
Vv28@0:8@"NSString"16C24
Vv28@0:8i16@"NSString"20
Vv24@0:8@"IDSDestination"16
Vv24@0:8@"TUProxyCall"16
Vv40@0:8@"NSString"16{CGSize=dd}24
Vv28@0:8@"NSString"16i24
Vv24@0:8@"TUDialRequest"16
Vv32@0:8@"NSString"16@"TUCallScreenShareAttributes"24
Vv36@0:8B16@"TUCallScreenShareAttributes"20@"NSString"28
Vv32@0:8@"NSString"16q24
Vv24@0:8@"TUCallServicesClientCapabilities"16
v36@0:8@16B24@28
@"NSDictionary"24@0:8@"TURouteController"16
v36@0:8@"NSString"16B24@"TURouteController"28
Q32@0:8@16@24
B36@0:8@"TUHandle"16@"NSString"24B32
B36@0:8@"NSSet"16@"NSString"24B32
Q32@0:8@"NSSet"16@"NSString"24
@"NSDictionary"32@0:8@"NSSet"16@"NSString"24
B32@0:8@"NSSet"16@"NSString"24
B40@0:8@"NSString"16@"NSString"24@"NSString"32
^v16@0:8
v28@0:8@?16B24
@32@0:8@16@?24
@"<TUCallServicesXPCServer>"
@"TUCallServicesClientCapabilities"
@"TURouteController"
@"TUCallNotificationManager"
@"TUFeatureFlags"
v32@0:8@16#24
@24@0:8#16
B56@0:8@16@24@32@40@?48
B56@0:8@"NSArray"16@"NSString"24@"NSString"32@"NSObject<OS_dispatch_queue>"40@?<v@?@"NSDictionary">48
v24@0:8@"NSArray"16
I32@0:8@16@24
v48@0:8@16@24@32@40
v48@0:8@"IDSBatchIDQueryController"16@"NSDictionary"24@"NSString"32@"NSError"40
v24@0:8@"NSDictionary"16
v32@0:8@"NSDictionary"16@"NSString"24
I24@0:8@16
@"<TUIDSIDQueryController>"
@"TULocked"
@"<TUIDSBatchIDQueryController>"
@"CoreTelephonyClient"
@?32@0:8@16@?24
@?48@0:8@16@24#32@?40
@"CNContactStore"
Vv36@0:8q16i24@?28
Vv32@0:8q16@?24
Vv36@0:8q16i24@?<v@?@"NSError">28
Vv32@0:8q16@?<v@?@"NSError">24
v36@0:8q16i24@?28
v32@0:8q16@?24
v36@0:8q16i24@?<v@?@"NSError">28
v32@0:8q16@?<v@?@"NSError">24
Vv24@0:8@"TUNearbyDeviceHandle"16
v24@0:8@?<v@?@"NSSet"@"NSError">16
v24@0:8@?<v@?@"TUNearbyDeviceHandle"@"NSError">16
v40@0:8@"TUNearbyDeviceHandle"16@"NSUUID"24@?<v@?B@"NSError">32
v32@0:8@"TUNearbyDeviceHandle"16@?<v@?B@"NSError">24
v24@0:8@"<TUNeighborhoodActivityConduitXPCClient>"16
@"<TUNeighborhoodActivityConduitXPCClientDelegate>"
f24@0:8@16
v32@0:8@"AVCAudioPowerSpectrumMeter"16@"NSDictionary"24
v40@0:8@"AVCAudioPowerSpectrumMeter"16@"AVCAudioPowerSpectrum"24@"NSDictionary"32
v24@0:8@"AVCAudioPowerSpectrumMeter"16
I24@0:8q16
@"<TUAudioFrequencyControllerDelegate>"
@"AVCAudioPowerSpectrumMeter"
B32@0:8q16@24
B40@0:8q16@24@?32
B32@0:8@16@?24
@"TUSoundPlayer"
@48@0:8q16@24Q32d40
@32@0:8q16@24
@44@0:8q16@24B32q36
i28@0:8@16B24
v24@0:8@"<TUCallProviderManagerDataSource>"16
@40@0:8@16Q24@32
@28@0:8i16^B20
@"<TUCallProviderManagerDataSource>"
q24@0:8@16
v32@0:8@"TUMetadataCacheDataProvider"16@"NSSet"24
@40@0:8@16Q24B32B36
@"TUSandboxExtendedURL"
@32@0:8^{_NSZone=}16@24
v32@0:8@16B24B28
@"NSNotificationCenter"
@92@0:8@16@24@32@40B48@52@60@68q76@84
@76@0:8@16@24@32@40B48@52@60@68
@"TUConversationActivityContext"
@"TUConversationActivitySceneAssociationBehavior"
@24@0:8@"NSUUID"16
@48@0:8@16@24@32B40B44
v36@0:8@16Q24B32
v48@0:8@16@24Q32@40
v32@0:8@"<TUConversationManagerDataSource>"16@"NSDictionary"24
v32@0:8@"TUConversation"16@"TUConversationActivityEvent"24
v32@0:8@"<TUConversationManagerDataSource>"16@"NSArray"24
v40@0:8@"<TUConversationManagerDataSource>"16@"NSUUID"24@?<v@?@"NSString"@"NSString"@"NSError">32
v36@0:8@"TUConversation"16Q24B32
v40@0:8@"TUConversation"16@"TUConversationParticipant"24@"TUConversationNotice"32
v32@0:8@"TUConversation"16@"NSSet"24
v32@0:8@"TUConversation"16@"TUConversationMember"24
v48@0:8@"<TUConversationManagerDataSource>"16@"TUConversation"24Q32@"TUConversationActivitySession"40
v32@0:8@"TUConversationMember"16@"TUConversationLink"24
v32@0:8@"TUConversation"16@"TUConversationParticipant"24
v28@0:8@"<TUScreenShareAttributes>"16B24
v24@0:8@"NSError"16
v32@0:8@"TUConversation"16@"TUConversationActivitySession"24
@40@0:8@16@24B32B36
v32@0:8Q16@24
v36@0:8B16Q20@28
v28@0:8B16@?20
v40@0:8@16q24@?32
v48@0:8@16@24Q32@?40
@"TUConversationMediaController"
@"<TUConversationMessagesGroupProviding>"
@"TUPhoneNumber"
@24@0:8^{__CFPhoneNumber=}16
^{__CFPhoneNumber=}16@0:8
v24@0:8^{__CFPhoneNumber=}16
^{__CFPhoneNumber=}
@"<TUDynamicCallDisplayContextDelegate>"
@52@0:8@16@24@32@40B48
@"CKShare"
B40@0:8@"NSString"16@"NSUUID"24^@32
B32@0:8@"NSUUID"16^@24
@"TUHandle"32@0:8@"NSString"16^@24
@"CALayer"20@0:8B16
v28@0:8@"CALayer"16B24
@"VideoAttributes"24@0:8@"VideoAttributes"16
B24@0:8@"AVCaptureDevice"16
@"VideoAttributes"16@0:8
@"<TUVideoDeviceControllerProviderDelegate>"16@0:8
v24@0:8@"<TUVideoDeviceControllerProviderDelegate>"16
@"UIImage"24@0:8@"NSString"16
@"TUVideoEffect"16@0:8
v24@0:8@"TUVideoEffect"16
@"<TUVideoDeviceControllerProviderDelegate>"
@"TUVideoEffect"
@"AVConferencePreview"
@64@0:8Q16Q24Q32Q40Q48Q56
@72@0:8@16@24@32@40@48@56@64
@40@0:8@16@24q32
@"TUConversationParticipant"
@"NSOrderedSet"
v24@0:8@"AVCRemoteVideoClient"16
v28@0:8@"AVCRemoteVideoClient"16B24
v32@0:8@"AVCRemoteVideoClient"16@"VideoAttributes"24
v20@0:8C16
i24@0:8q16
{CGSize=dd}24@0:8q16
q20@0:8i16
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"TUParticipant"
@"TUCallProvider"
@"TUCallDisplayContext"
@"TUCallScreenShareAttributes"
@"<TUCallServicesProxyCallActions>"
@"<TURemoteVideoClient>"
@40@0:8q16@24@32
Vv24@0:8@"NSArray"16
Vv48@0:8@16d24@32@?40
Vv48@0:8@16@24@32@?40
Vv40@0:8@16@24@?32
Vv32@0:8@"NSString"16@?<v@?@"TUConversationProvider">24
Vv24@0:8@?<v@?@"NSArray">16
Vv32@0:8@"NSString"16@?<v@?@"NSError">24
Vv32@0:8@"TUConversationProvider"16@?<v@?@"NSError">24
Vv48@0:8@"TUConversationProvider"16d24@"NSString"32@?<v@?@"TUHandle"@"NSDate"@"NSError">40
Vv48@0:8@"TUHandle"16@"TUConversationProvider"24@"NSDate"32@?<v@?B@"NSDate"@"NSError">40
Vv40@0:8@"TUHandle"16@"TUConversationProvider"24@?<v@?B@"NSError">32
v24@0:8@"<TUConversationProviderManagerXPCClient>"16
v32@0:8@"NSString"16@?<v@?@"NSError">24
v32@0:8@"TUConversationProvider"16@?<v@?@"NSError">24
@"TUConversationProvider"24@0:8@"NSString"16
v32@0:8@"NSString"16@?<v@?@"TUConversationProvider">24
v48@0:8@"TUConversationProvider"16d24@"NSString"32@?<v@?@"TUHandle"@"NSDate"@"NSError">40
v48@0:8@"TUHandle"16@"TUConversationProvider"24@"NSDate"32@?<v@?B@"NSDate"@"NSError">40
v40@0:8@"TUHandle"16@"TUConversationProvider"24@?<v@?B@"NSError">32
@48@0:8q16@24q32@40
@32@0:8@16^B24
@"TUSenderIdentityClient"
@"CNGeminiManager"
@"BSProcessHandle"
@"TUNeighborhoodHandoffContext"
@"TUCTCapabilitiesState"
@"TUThumperCTCapabilitiesState"
@48@0:8{?=[8I]}16
@36@0:8@16B24@28
B20@0:8B16
@"TUCallModel"
@"TUProxyCall"
@"TUCallServicesInterface"
@"TUVideoCallAttributes"
@"NSUserDefaults"
@"FTServerBag"
B40@0:8@16@24@?32
@?24@0:8@16
v32@0:8@"<CNCancelable>"16@"NSArray"24
v32@0:8@"<CNCancelable>"16@"NSError"24
v24@0:8@"<CNCancelable>"16
B40@0:8@"<CNCancelable>"16@"CNAutocompleteFetchRequest"24@?<v@?@"NSArray"@"NSError">32
@"NSDictionary"32@0:8@"<CNCancelable>"16@"NSArray"24
@?<q@?@@>24@0:8@"<CNCancelable>"16
@"CNAutocompleteStore"
@"<CNAutocompleteCancelable>"
@"TUAutocompleteResultPartitioner"
v24@0:8@"<TUCallHistoryControllerXPCClient>"16
Vv32@0:8@"NSUUID"16@"NSUUID"24
v24@0:8@"<TUCallHistoryManagerXPCClient>"16
v32@0:8@"NSUUID"16@"NSUUID"24
@"<TUCallServicesClientCapabilitiesActions>"
Vv32@0:8@"NSURL"16@?<v@?@"TUSandboxExtendedURL"@"NSError">24
Vv32@0:8@"TUMomentsCapabilities"16q24
Vv24@0:8@"TUMomentDescriptor"16
Vv52@0:8q16@24@32B40@?44
Vv44@0:8i16q20@28@?36
Vv24@0:8@?<v@?>16
Vv52@0:8q16@"NSString"24@"NSDictionary"32B40@?<v@?@"TUMomentsCapabilities"@"NSError">44
Vv44@0:8i16q20@"NSString"28@?<v@?@"NSString"@"NSError">36
v24@0:8@"<TUMomentsControllerXPCClient>"16
v52@0:8q16@24@32B40@?44
v44@0:8i16q20@28@?36
v52@0:8q16@"NSString"24@"NSDictionary"32B40@?<v@?@"TUMomentsCapabilities"@"NSError">44
v44@0:8i16q20@"NSString"28@?<v@?@"NSString"@"NSError">36
@"<TUMomentsControllerDataSourceDelegate>"16@0:8
v24@0:8@"<TUMomentsControllerDataSourceDelegate>"16
@"<TUMomentsControllerDataSourceDelegate>"
B28@0:8i16B20B24
B44@0:8i16B20B24B28B32^B36
B32@0:8@16^B24
v36@0:8@16@24B32
v28@0:8i16@20
@"TUAudioDeviceController"
@"TUVideoDeviceController"
@"TUCallFilterController"
@"TUNeighborhoodActivityConduit"
@"<TUCallHistoryManagerDataSource>"
@"NSURL"16@0:8
@"<TUKeyValueDataSource><TUMutableKeyValueDataSource>"
@"TUDelegateController"
Vv32@0:8@"TUDialRequest"16@"TUCallDisplayContext"24
Vv32@0:8@"TUDialRequest"16@?<v@?@"TUCall"@"NSArray">24
Vv24@0:8@"TUJoinConversationRequest"16
Vv32@0:8@"NSDictionary"16@?<v@?@"TUCall"@"NSArray">24
Vv28@0:8@16B24
Vv24@0:8@?<v@?@"NSDictionary">16
Vv28@0:8@"NSString"16B24
Vv44@0:8@16@24B32@?36
Vv40@0:8@"NSSet"16@"NSString"24@?<v@?B>32
Vv44@0:8@"TUHandle"16@"NSString"24B32@?<v@?B>36
Vv44@0:8@"NSSet"16@"NSString"24B32@?<v@?B>36
Vv40@0:8@"NSSet"16@"NSString"24@?<v@?Q>32
Vv40@0:8@"NSSet"16@"NSString"24@?<v@?@"NSDictionary">32
Vv48@0:8@"NSString"16@"NSString"24@"NSString"32@?<v@?B>40
@40@0:8@16q24q32
@"<TUHandleContactProvider>"
@80@0:8@16Q24@32@40B48@52B60@64Q72
@56@0:8@16Q24@32B40@44B52
@48@0:8@16@24B32@36B44
@40@0:8@16B24@28B36
@"NSXPCListenerEndpoint"
@48@0:8@16@24q32@40
@48@0:8q16@24@32@40
@"TUNearbyDeviceHandleCapabilities"
^{os_unfair_recursive_lock_s={os_unfair_lock_s=I}I}16@0:8
{os_unfair_recursive_lock_s="ourl_lock"{os_unfair_lock_s="_os_unfair_lock_opaque"I}"ourl_count"I}
Vv24@0:8@"TUConversation"16
Vv32@0:8@"NSUUID"16@?<v@?@"NSString"@"NSString"@"NSError">24
Vv36@0:8@16Q24B32
Vv40@0:8@16Q24@32
Vv32@0:8@"TUConversation"16@"TUConversationActivityEvent"24
Vv36@0:8@"TUConversation"16Q24B32
Vv40@0:8@"TUConversation"16@"TUConversationParticipant"24@"TUConversationNotice"32
Vv32@0:8@"TUConversation"16@"NSSet"24
Vv32@0:8@"TUConversation"16@"TUConversationMember"24
Vv40@0:8@"TUConversation"16Q24@"TUConversationActivitySession"32
Vv32@0:8@"TUConversationMember"16@"TUConversationLink"24
Vv32@0:8@"TUConversation"16@"TUConversationParticipant"24
Vv32@0:8@"TUConversation"16@"TUConversationActivitySession"24
Vv28@0:8@"<TUScreenShareAttributes>"16B24
Vv24@0:8@"NSError"16
Vv32@0:8@"NSUUID"16@"NSArray"24
Vv36@0:8@16B24@?28
Vv36@0:8B16Q20@28
Vv32@0:8Q16@24
Vv28@0:8B16@?20
Vv40@0:8@16q24@?32
Vv48@0:8@16@24Q32@?40
Vv24@0:8@?<v@?@"NSSet">16
Vv40@0:8@"NSSet"16@"NSSet"24@"NSUUID"32
Vv32@0:8@"TUConversationActivitySession"16@"NSUUID"24
Vv32@0:8@"TUConversationActivity"16@"NSUUID"24
Vv32@0:8@"NSUUID"16@?<v@?@"NSError">24
Vv36@0:8@"NSUUID"16B24@?<v@?@"NSError">28
Vv36@0:8B16@"TUConversationActivitySession"20@"NSUUID"28
Vv36@0:8B16Q20@"NSUUID"28
Vv32@0:8@"TUConversationMember"16@"NSUUID"24
Vv32@0:8@"NSString"16@"NSUUID"24
Vv32@0:8Q16@"NSUUID"24
Vv24@0:8@?<v@?B>16
Vv24@0:8@?<v@?@"<TUScreenShareAttributes>">16
Vv28@0:8B16@?<v@?@"NSSet"@"NSError">20
Vv32@0:8@"NSUUID"16@?<v@?@"TUConversationLink"@"NSError">24
Vv40@0:8@"NSSet"16q24@?<v@?@"TUConversationLink"@"NSError">32
Vv40@0:8@"NSSet"16@"TUConversationLink"24@?<v@?@"TUConversationLink"@"NSError">32
Vv32@0:8@"TUConversationLink"16@?<v@?B@"NSError">24
Vv48@0:8@"TUConversationLink"16@"NSDate"24Q32@?<v@?B@"NSError">40
Vv32@0:8@"TUConversationLink"16@?<v@?B@"NSDate"@"NSError">24
Vv24@0:8@?<v@?@"TUConversationLink"@"NSError">16
Vv40@0:8@"NSString"16@"TUConversationLink"24@?<v@?@"TUConversationLink"@"NSError">32
Vv28@0:8B16@?<v@?@"NSString">20
Vv36@0:8B16@"TUScreenShareAttributes"20@"NSUUID"28
Vv32@0:8@"NSURL"16@24
Vv24@0:8@?<v@?@"TUConversationNotice"@"NSError">16
v24@0:8@"<TUConversationManagerXPCClient>"16
v32@0:8@"NSSet"16@"TUConversation"24
v40@0:8@"NSSet"16@"NSSet"24@"TUConversation"32
v32@0:8@"TUConversationActivity"16@"TUConversation"24
v32@0:8@"TUConversationActivitySession"16@"TUConversation"24
v28@0:8B16@"NSString"20
v32@0:8@"NSUUID"16@?<v@?@"NSError">24
v36@0:8@"NSUUID"16B24@?<v@?@"NSError">28
v36@0:8B16@"TUConversationActivitySession"20@"NSUUID"28
v32@0:8@"TUConversationMember"16@"TUConversation"24
v28@0:8B16@"TUConversation"20
v36@0:8B16Q20@"TUConversation"28
v32@0:8Q16@"NSUUID"24
v24@0:8@?<v@?@"<TUScreenShareAttributes>">16
v28@0:8B16@?<v@?@"NSSet"@"NSError">20
v32@0:8@"TUConversation"16@?<v@?@"TUConversationLink"@"NSError">24
v40@0:8@"NSSet"16q24@?<v@?@"TUConversationLink"@"NSError">32
v40@0:8@"NSSet"16@"TUConversationLink"24@?<v@?@"TUConversationLink"@"NSError">32
v32@0:8@"TUConversationLink"16@?<v@?B@"NSError">24
v48@0:8@"TUConversationLink"16@"NSDate"24Q32@?<v@?B@"NSError">40
v32@0:8@"TUConversationLink"16@?<v@?B@"NSDate"@"NSError">24
v24@0:8@?<v@?@"TUConversationLink"@"NSError">16
v40@0:8@"NSString"16@"TUConversationLink"24@?<v@?@"TUConversationLink"@"NSError">32
v36@0:8B16@"TUScreenShareAttributes"20@"NSUUID"28
v28@0:8B16@?<v@?@"NSString">20
v24@0:8@"TUJoinConversationRequest"16
v32@0:8@"NSURL"16@"NSString"24
v24@0:8@?<v@?@"TUConversationNotice"@"NSError">16
v32@0:8@"NSUUID"16@"NSArray"24
v32@0:8@"NSString"16@"TUConversation"24
v32@0:8Q16@"TUConversation"24
v32@0:8@"NSUUID"16@?<v@?@"NSString"@"NSString"@"NSError">24
@"<TUConversationManagerDataSourceDelegate>"16@0:8
v24@0:8@"<TUConversationManagerDataSourceDelegate>"16
@"<TUConversationMediaControllerDataSourceDelegate>"16@0:8
v24@0:8@"<TUConversationMediaControllerDataSourceDelegate>"16
@"<TUConversationManagerDataSourceDelegate>"
@"<TUConversationMediaControllerDataSourceDelegate>"
Asked to pick route: %@
Asked to pick route with unique identifier: %@
Asked to pick route when available with unique identifier: %@
Updated routes to %@
Handling server reconnect by requesting current route list
Handling server disconnect by resetting routes to an empty list
TUHardwareControlsBroadcaster starting to listen for hardware controls.
TUHardwareControlsBroadcaster deallocating - stopping listening for hardware controls.
TUHardwareControlsBroadcaster ignoring notification: %@
TUHardwareControlsBroadcaster sending hardware control notification: %@
TUHardwareControlsBroadcaster scheduling a long press timer
TUHardwareControlsBroadcaster long press timer fired, posting: %@
XPC connection invalidated.
XPC connection interrupted.
Could not add converation links due to connection error %@
Could not add conversation link descriptors due to connection error %@
Could not add or update converation links due to connection error %@
Could not add or update conversation link descriptors due to connection error %@
Could not retrieve conversation link count due to connection error %@
Could not retrieve conversation link descriptors due to connection error %@
Could not remove conversation link descriptors due to connection error %@
Could not update conversation link descriptors due to connection error %@
Could not update TU KV due to connection error %@
Could not fetch TU KV due to connection error %@
Could not synch fetch conversation link descriptors due to connection error %@
serviceForContacts is nil
Retrieving suggested contact matches by email address %@ failed with error %@.
Retrieving suggested contact matches by phone number %@ failed with error %@.
Handling Suggestions contacts change by refreshing
[WARN] TUSuggestionsMetadataCacheDataProvider waited too long for other requests and will not look up '%@'
dispatch_group_enter %@
Could not fetch suggested contact via [SGSuggestionsService namesForDetail:limitTo:prependMaybe:withCompletion:]: %@
dispatch_group_leave %@
Lookup failed when trying to retrieve a name for bundle ID %@ with error %@
[WARN] Not setting activity context: %@
[WARN] Couldn't parse query parameter: %@
Handling %s by refreshing
[WARN] No metadata destinationID found for phone number '%@'
Error retrieving first identification entries for phone numbers %@: %@
Resolving %@ to a geographic location failed with error %@
Skipping request, newer one coming
Processing request, no newer ones in the queue
Skipping post, newer request coming
Processing post, no newer ones in the queue
Requested value is different from cached value (cached = %@, current = %@)
Value is the same
Posting changed notification: %@
Asked to set VoLTE calling enabled to %d
Asked to set WiFi calling enabled to %d
Asked to set WiFi calling roaming enabled to %d
Asked to invalidate and refresh WiFi calling provisioning URL
Asked to set Thumper calling enabled to %d
Asked to invalidate and refresh Thumper calling provisioning URL
Asked to set Thumper calling allowed to %d on secondary device with ID %@
Asked to set Thumper calling allowed on paired secondary device to %d
Asked to request PIN from primary device for Thumper calling
Asked to cancel PIN from primary device for Thumper calling
WiFi capabilities changed from %d to %d
VoLTE capabilities changed from %d to %d
Thumper capabilities changed from (supported=%d overCellularData=%d enabled=%d provisioningStatus=%d, associated=%d, supportsDefaultPairedDevice=%d) to (supported=%d overCellularData=%d enabled=%d provisioningStatus=%d, associated=%d, supportsDefaultPairedDevice=%d)
WiFi calling URL changed from %@ to %@
Thumper calling URL changed from %@ to %@
Unable to extract pseudonym from URL: %@
Unable to extract conversationLink from URL: %@
Asked to set current input device to %@
Upgrading input device to depth camera device %@
Setting video orientation: %d
localFrontLayer: %@
localBackLayer: %@
[WARN] Cannot create TUVideoEffect named %@ with nil thumbnailImage
Starting preview with self.currentInputDevice: %@
Ignoring start preview with self.currentInputDevice: %@
Stopping preview with self.currentInputDevice: %@
Pausing preview with self.currentInputDevice: %@
Setting back camera zoom factor: %f
Setting ramp camera zoom factor: %f with rate: %f
Beginning animation to preview with self.currentInputDevice: %@
Setting local camera to back facing device %@
Setting local camera to front facing device %@
Ending animation to preview with self.currentInputDevice: %@
Beginning animation to PIP with self.currentInputDevice: %@
Ending animation to PIP with self.currentInputDevice: %@
Setting localPortraitAspectRatio: %@ localLandscapeAspectRatio: %@
cameraUID: %@, error: %@
cameraUID: %@
Starting preview because client wants preview and camera did become available
Provider received notice that local camera UID changed to %@
videoAttributes: %@
isZoomAvailable: %d
cameraBlurEnabledDidChange: %d
userPreferredCameraUIDDidChange: %@
didGetSnapshot: %p
momentCapturedForStreamToken: %ld requesterID: %@
Error registering moments captured stream token: %@
user notification provider xpc connection invalidated (client side)
user notification provider XPC connection interrupted (client side)
Calling AudioServicesPlaySystemSoundWithOptions() with system sound ID %d
[WARN] Requested to play DTMF tone for unknown key: %d
Asked to play DTMF sound type %ld
Dial assist value changed. Synchronizing prefs
International assist forced; overriding carrier bundle check
Calling: TUNumberToDial(inputNumber=%@, inputCountryCode=%@, outputCountryCode=%@, options=%@)
No input country code provided, assuming home country code: %@
No output country code provided, assuming network country code: %@
Non-existent or empty number
Invoking dial assist...
Returning %@
Home country code %@ is equal to our active country code %@, but we were asked to suppress local assist.
Home country code %@ is equal to our active country code %@.  We'll use local assist function.
Our home country code %@ is not equal to active country code %@.  We'll use international assist function.
PN says number %@ is not valid for home country %@.  Returning early with no assist.
Number looks valid.  Applying assist.
Assist function with input (%@) yielded %@, didAssist = %d
Error getting ISO country code (domain=%d, code=%d)
Dial assisting because the request is not valid for the local network
Dial assisting because the request matches a contact card
Not dial assisting for dial request %@, because is was local assisted (%d) or dial assist was not requested (%d) or is a valid number for the local network already (%d)
Not attempting dial assist for dial request %@ because request is nil (%d) or dial request is dialAssisted (%d) or handle is not a phone number (%d) dial assist is not enabled (%d)
Call History does not support displaying FaceTime Audio calls
Call History supports displaying FaceTime Audio calls
Error trying to fetch backing contact for identifier %@: %@
Could not normalize destination ID %@ to perform contacts lookup
No contacts found matching predicate %@ error: %@
Could not create a CNPhoneNumber using the normalized destination identifier '%@'.
Looking up contacts matching predicate %@
Found matching contacts %@, using first object
Asked to change wiFiCallingRoamingEnabled from %d to %d
Asked to change relayCallingEnabled from %d to %d
Asked to change relayCallingEnabled from %d to %d for %@
Telephony support changed from %d to %d
FaceTime Audio support changed from %d to %d
FaceTime Video support changed from %d to %d
FaceTime availability changed from (audio=%d video=%d) to (audio=%d video=%d)
Relay capabilities changed from (supported=%d enabled=%d) to (supported=%d enabled=%d)
Relay calling availability changed from %d to %d
Relay calling features changed from %d to %d
Cloud calling devices changed
Outgoing relay caller ID changed from %@ to %@
Emergency Callback Mode changed from %d to %d
Emergency Callback Possible changed from %d to %d
Determined lockdownModeEnabled: %@
mediaType: %d, provider: %@ participant: %@
transactionID: %@
provider: %@
registered, capabilities: %@, error: %@
Determined that Live Photo moments XPC Service should be enabled
capabilities: %@ token: %ld
momentDescriptor: %@
Asked to play sound with soundID: %d iterations: %@ pauseDurationBetweenIterations: %f
Calling AudioServicesPlaySystemSoundWithCompletion with soundID: %d options: %@
Calling AudioServicesStopSystemSound with soundID=%d
notification: %@
Registered for registerForMutedTalkerNotification
Audio devices changed
Setting mixesVoiceWithMedia: %d
Setting mediaPlaybackOnExternalDevice: %d
Error fetching backing contact for recent call %@: %@
providerIdentifier: %@
configuration: %@
identifier: %@
provider: %@ expiryDuration: %f uri: %@
pseudonymHandle: %@ provider: %@ expirationDate: %@
pseudonymHandle: %@ provider: %@
handle: %@ provider: %@
AVLess SharePlay isn't enabled. Please enable the AVLess SharePlay FeatureFlag.
Conversation %@ isn't eligible for downgrade since it doesn't support AVModeNone
Conversation isn't eligible for downgrade since we couldn't find an activitySession in the joined or handedOff state
Asked to find matching primary remote participant for lightweight handle: %@
Found remote participant for lightweight participant: %@
[WARN] Did not find remote participant for lightweight member: %@
TUNeighborhoodActivityConduit failed to encode state: %@
Deallocating TUNeighborhoodActivityConduit
Conduit delegate added: %{public}@
Conduit delegate removed: %{public}@
Setting approval delegate: %{public}@
Setting activeSplitSessionTV: oldValue: %@, newValue: %@
Failed to get initial state for nearby TVs: %@
Failed to get initial state for active split session TV: %@
Conversation not found for %@. TV incapable of handoff
Conversation not AVLess. TV is capable of handoff.
Conversation is AVLess. NearbyTVDevice: %@ capable of handoff: %d
TUConduit XPC connection established
No split session approval delegate installed
Cannot find conversation for approving split session
[WARN] +[AVSystemController sharedAVSystemController] returned nil value
[WARN] Could not weak link notification string '%@'. Not observing notifications for it.
Mute status changed: %@
Downlink mute status changed: %@
Volume changed: %@
Pickable Routes Changed: %@
Clearing cached current pickable routes and posting TUAudioSystemAudioPickableRoutesChanged
Media services were reset: %@
activeCategoryVolume = %f
Triggering an end of interruption for audio session with ID %@
Setting active category volume to %f
Failed to set active category volume to %f
isUplinkMuted = %d
isTTY = %d
setting isUplinkMuted value = %@
Failed to set isUplinkMuted: %@
Dispatching changed notification in response to setUplinkMuted
isDownlinkMuted = %d
setting isDownlinkMuted value = %@
Failed to set isDownlinkMuted: %@
Dispatching changed notification in response to setDownlinkMuted
pickableRoutesForTTY
_pickableRoutesForPhoneCallWithForceNewRequest
_pickableRoutesForPhoneCall is unsupported
_pickableRoutesForPlayAndRecordVoiceWithForceNewRequest
_pickableRoutesForPlayAndRecordVideoWithForceNewRequest
_pickableRoutesForPlayAndRecordRemoteVoiceWithForceNewRequest
_pickableRoutesForVoiceMailWithForceNewRequest
_pickableRoutesForVoiceMailWithForceNewRequest is unsupported
Fetched current pickable routes %@ and posting TUAudioSystemAudioPickableRoutesChanged
Unknown category (%@) and mode (%@) combination, using default pickable routes
Notifying AVSystemController to override to partner route
uniqueIdentifier: %@
using pickable routes %@
returning route %@
route: %@
Other sessions request no ringtone interruption: %d
Handling %s by setting up XPC connection
Server did disconnect
Setting up XPC connection for %@
TUCallCapabilitiesXPCClient - capabilityStateUpdated
Retrieving initial call capabilities state.
Error grabbing remote object proxy: %@
Received initial call capabilities state: %p
Updated to newState: %p
[WARN] Could not convert %@ to IDS fromID
[WARN] Could not convert %@ to IDS destination
TUContactsDataProvider: source is a '%{public}@'
Executing fetch request: %@
Finding the appropriate localized name to use for handles: %@
     - using formatted destination ID '%@'
     - call is to emergency services, we'll use the emergency services string: '%@'
     - call is blocked, we'll use the blocked string: '%@'
     - falling back to the unknown string: '%@'
Determined dataProviderResult: %@
Found contact: %@ for contactIdentifier %@: 
Error while fetching contact with identifier %@: %@
Not looking up contact for %@ because it is in our apple care handles
Error while fetching contacts for handle %@: %@
Determined compositeName: %@ for contacts: %@
     - we'll format the destinationID '%@' with the country code '%@'
     - handle can't/shouldn't be formatted as a phone number, so using the unmodified destination ID '%@'
[WARN] Could not look up legacy ABPerson for contact: %@
Encountered an error while serializing TUDialRequest: %@
Trying to attach TUDialRequest to a UserActivity with an unsupported activityType: %@
Attaching TUDialRequest to UserActivity
Encountered an error while serializing TUJoinConversationRequest: %@
Trying to attach TUJoinConversationRequest to a UserActivity with an unsupported activityType: %@
Attaching TUJoinConversationRequest to UserActivity
Unarchiving TUDialRequest from UserActivity
Error unarchiving TUDialRequest: %@
Unarchiving TUJoinConversationRequest from UserActivity
Error unarchiving TUJoinConversationRequest: %@
originating ui type from URL: %@
creating conversation members from intent contacts: %@
personHandle was empty: %@
userActivity with intent: %@
[WARN] Could not find class RTTSettings; RTTUtilities.framework may have failed to link.
[WARN] Could not find class RTTTelephonyUtilities; RTTUtilities.framework may have failed to link.
Unable to weak-link symbol kCAGravityResizeAspectFill
Error donating intent for provider with identifier: %@
Error requesting app launch: %@
Error requesting initial state: %@
_updateProvidersByIdentifier providersByIdentifier,: %@
_updateProvidersByIdentifier localProvidersByIdentifier: %@
_updateProvidersByIdentifier pairedHostDeviceProvidersByIdentifier: %@
Member with handle (%@) has a restricted status
Member with handle (%@) has a status limited by downtime
Member with handle (%@) has a status limited by screentime
Member with handle (%@) doesn't have a restricted status
TUFormattedPhoneNumber called with number: '%@' and country code '%@'
    - PNCreateFormattedStringWithCountry returned %@
    - we got nil, using fallback code PNCreateFormattedStringWithCountry(us) returned %@
    - that also failed, we'll return the original string %@
_CTServerConnectionIsEmergencyNumberWithWhitelistIncluded - encountered error %d %ld
_CTServerConnectionIsEmergencyNumber - encountered error %d %ld
_CTServerConnectionGetThumperName - encountered error %d %ld
Launching InCallService via NSUserActivity for join request: %@
Failed to archive join request object with error: %@
Failed to create application record for InCallService with error: %@
Failed to launch InCallService via NSUserActivity with error: %@
url: %@ isSensitive: %d promptToUnlock: %d
Failed to open URL %@: %@
allowCallsDuringScreenSharing=%d
url: %@
TUOpenHomeScreen Request
TUOpenFaceTimeApp Request
Link had a nickname to pre-fill for the web (%@); we have no use for it, so ignoring
[WARN] Ignoring unrecognized conversation link fragment query item: "%@"=>"%@"
Cannot return URL; missing URL fragment for %@
Failed to parse URL components for %@
RTCReporter: %@ is handling %@
%@ is ignoring notification because callUUID is nil: %@
RTCReporter: Reporting message with session %@ userInfo %@
[WARN] RTCReporter: Error while sending message with error: %@
RTCReporter: Created reporting session %@ with sessionInfo: %@, userInfo: %@
RTCReporter: Received backends %@
Making outgoing call via Siri to %@
Making outgoing call via Siri
Updating participants presentation contexts: %@ for conversation UUID: %@
[WARN] Attempting to get section results with out of bounds range (%li) for actual range (0..%li)
Executing contact fetch request %@ using contact store %@
Contact fetch request returned %lu results
Synchronizing user configuration for %@ to Apple Watch
Received a key-value observing notification for key path (%@) object (%@).
Handling %s by requesting current state
[WARN] Bad status received attempting to get server launched state: %d
%@: Setting up XPC connection
XPC connection invalidated
Handling XPC connection invalidation
XPC connection interrupted
Handling XPC connection interruption
_currentCalls: %@ currentCalls: %@
No cached call found for %@. Initialized new proxy call %p
Asked to tear down XPC connection
Requesting current state
Error using remote object proxy: %@
CSD hasn't launched since boot so assuming no current calls exist
Received current state with calls for asynchronousServer: %@
Dropping asynchronous response for current state, since we already have received initial state
Proxying fetch current calls
Received current state with calls for synchronousServer: %@
Waiting for initial state
Ignoring server disconnect
Disconnecting call with TUCallDisconnectedReasonComponentCrashed: %@
Proxying dial through CSD for %@
Error using remote object proxy for dial: %@
[WARN] Passing nil call to dialWithRequest completion block
Proxying joinConversationWithRequest request: %@
Updated joinConversationWithRequest videoEnable=%d uplinkMuted=%d
Proxying reportLocalPreviewStopped for %@
Proxying answer through CSD for %@
Proxying hold through CSD for %@
Proxying unhold through CSD for %@
Proxying upgrade video call through CSD for %@
Proxying disconnect through CSD for %@
Proxying groupCall through CSD for %@ and %@
Proxying ungroupCall through CSD for %@
Proxying swapCalls through CSD
Proxying playDTMFToneForCall:key: through CSD
Proxying disconnectCurrentCallAndActivateHeld through CSD
Proxying disconnectAllCalls through CSD
Proxying setTTYType:forCall: through CSD
Proxying pullRelayingCallsFromClient through CSD
Proxying pushRelayingCallsToHost through CSD
Proxying pullCallFromClientUsingHandoffActivityUserInfo through CSD with completion block (%@)
Error using remote object proxy for %@
Proxying pushHostedCallsToDestination through CSD for destination %@
Proxying pullHostedCallsFromPairedHostDevice through CSD
Proxying sendHardPauseDigits through CSD
Proxying updateCallWithProxy through CSD for proxy call %@
Proxying enteredForegroundForCallWithUniqueProxyIdentifier through CSD for uniqueProxyIdentifier %@
Proxying willEnterBackgroundForAllCalls through CSD
Proxying enteredBackgroundForAllCalls through CSD
Proxying setRemoteVideoPresentationSizeForCallWithUniqueProxyIdentifier through CSD for uniqueProxyIdentifier %@, size %@
Proxying setRemoteVideoPresentationStateForCallWithUniqueProxyIdentifier through CSD for uniqueProxyIdentifier %@, presentationState %d
Proxying setScreenShareAttributesForCallWithUniqueProxyIdentifier through CSD for uniqueProxyIdentifier %@, screenShareAttributes %@
Proxying setSharingScreen: %d through CSD for uniqueProxyIdentifier %@, screenShareAttributes %@
Proxying setBluetoothAudioFormatForCallWithUniqueProxyIdentifier through CSD for uniqueProxyIdentifier %@, bluetoothAudioFormat %ld
Sending MMI/USSD code through CSD for %@
Proxying setUplinkMuted=%d for %@
Proxying setDownlinkMuted=%d for %@
Proxying setIsSendingVideo=%d for %@
Proxying setMixesVoiceWithMedia=%d for %@
Proxying setSharingScreen=%d for %@
Proxying shouldSuppressInCallStatusBar=%d through CSD
Proxying shouldAllowRingingCallStatusIndicator=%d through CSD
Proying activateInCallUIWithActivityContinuationIdentifier=%@
CallServicesInterface: sendUserScoreToRTCReporting with UUID: %@ and Score: %d
Proxying setCurrentAudioInputDeviceToDeviceWithUID through CSD for UID %@
Proxying setCurrentOutputDeviceToDeviceWithUID through CSD for deviceUID %@
Proxying localRoutesByUniqueIdentifier synchronously
Error using remote object proxy when requesting synchronous local routes: %@
Proxying pairedHostDeviceRoutesByUniqueIdentifier synchronously
Error using remote object proxy when requesting synchronous paired host device routes: %@
Proxying pickLocalRouteWithUniqueIdentifier for %@ shouldWaitUntilAvailable: %d
Proxying pickPairedHostDeviceRouteWithUniqueIdentifier for %@ shouldWaitUntilAvailable: %d
Error using remote object proxy when requesting synchronous restricted handle check: %@
Error using remote object proxy when requesting synchronous policy check for addresses: %@
Error using remote object proxy when requesting synchronous restricted addresses check: %@
Error using remote object proxy when requesting synchronous unknown address check: %@
Proxying setClientCapabilities through CSD for capabilities %@
Handling current calls changed: %@
Handling call changed for disconnected calls: %@
Resetting call transition states and posting %@
Handling notification %@ for call with unique proxy identifier %@ userInfo %@
Received query status response for service %@: %@
Updated filtered destinations for Multiway service: %@ modern: %@ webCapable: %@ avLessSharePlayCapable: %@
Updating destinations for iMessage service: %@
Updated filtered destinations for Multiway service: %@
Could not find subscription context for the specified label identifier: %@
Retrieving active contexts from client %@ failed with error %@
Could not find subscription context for the specified UUID: %@
registeredStream: %ld withAvailability: %ld
Error reporting captured stream token: %@
didCleanUpForStream: %ld
Error reporting moments stream token: %@
didStartRequestForStream: %ld transactionID: %@
didReceiveResultsForStream: %ld transactionID: %@
reporting controller xpc connection invalidated (client side)
reporting controller provider XPC connection interrupted (client side)
TUConduitXPCClient: callservicesd restarted and requested re-connection
TUConduitXPCClient: informing delegate of connection restart
Registering TUNeighborhoodActivityConduitXPCClient %p with non-xpc server %p
Deallocating TUNeighborhoodActivityConduitXPCClient
TUConduit XPC connection is nil after prompting!
Error fetching nearby TVs: %@
Error fetching active split session TV: %@
Error inviting TV %@ to conversation %@: %@
Error disconnecting TV %@: %@
Sending approval registration: %s
Error registering as approval handler: %@
%{public}s: XPC connection invalidated
%{public}s: XPC connection interrupted
Register for cellular power spectrum - type: %lu, success: %d, error: %@
Unregister for cellular power spectrum - type: %lu, success: %d, error: %@
Audio power spectrum meter died: %@
Not playing sound since no valid sound descriptor was returned for type=%lu call=%@
Playing %@
Successfully consumed sandbox extension for URL %@
Unable to consume sandbox extension with token %@, received handle %lld
Unable to issue sandbox extension of class %@ for URL %@
dialRequest: %@
Opening URL because dial request is using a system provider
%@ did not complete before the %llu millisecond timeout.
Update (refresh) of data provider %@ did not complete before the %ld second timeout.
[WARN] URL does not contain a valid scheme: %@
[WARN] URL scheme is not in list of allowed schemes: %@ allowedSchemes: %@
Posting %@ with object %@ userInfo %@
statusChangedForCall %@
connectingChangedForCall %@
connectedChangedForCall %@
wantsHoldMusicChangedForCall %@
endpointOnCurrentDeviceChangedForCall %@
shouldSuppressRingtoneChangedForCall %@
faceTimeIDStatusChangedForCall %@
hardPauseDigitsStateChangedForCall %@
needsManualInCallSoundsChangedForCall %@
hasSentInvitationChangedForCall %@
isUsingBasebandChangedForCall %@
isOnHoldChangedForCall %@
isUplinkMutedChangedForCall %@
destinationIDChangedForCall %@
displayContextChangedForCall %@
isEmergencyChangedForCall %@
isFailureExpectedChangedForCall %@
supportsEmergencyFallbackChangedForCall %@
isSendingAudioChangedForCall %@
isSendingVideoChangedForCall %@
sharingScreenChangedForCall %@
isThirdPartyVideoChangedForCall %@
mediaStalledChangedForCall %@
videoDegradedChangedForCall %@
videoPausedChangedForCall %@
audioPropertiesChangedForCall %@
ttyTypeChangedForCall %@
bluetoothAudioFormatChangedForCall %@
remoteUplinkMutedChangedForCall %@
localSenderIdentityAccountUUIDChangedForCall %@
supportsTTYWithVoiceChangedForCall %@
remoteAspectRatioChangedForCall %@
remoteVideoContentRectChangedForCall %@
cameraTypeChangedForCall %@
videoMirroredChangedForCall %@
remoteCameraOrientationChangedForCall %@
remoteScreenOrientationChangedForCall %@
remoteScreenAspectRatioChangedForCall %@
providerContextChangedForCall %@
mediaPropertiesChangedForCall %@
videoStreamTokenChangedForCall %@
conversationChangedForCall %@
mixesVoiceWithMediaChangedForCall %@
prefersExclusiveAccessToCellularNetworkChangedForCall %@
modelChangedForCall %@
conferenceParticipantCallsChangedForCallContainer %@ conferenceParticipantCalls %@
TUConversationActivityMetadata Error creating folder at %@ error %@
TUConversationActivityMetadata %@ failed to create image folder, can't write to disk.
TUConversationActivityMetadata Error writing image data to %@ error %@
TUConversationActivityMetadata %@ successfully wrote image to path %@
TUConversationActivityMetadata %@ Wasn't able to delete image file error %@
TUConversationActivityMetadata deleted image
Failed to read image data for %@, error: %@
Error deserializing activity metadata %@,
TUNotifyOfReplyWithMessage: Sending BB message with name=%@ payload=%@
TUNotifyOfRemindMeLater: Sending BB message with name=%@ payload=%@
TUNotifyOfRemindMeLaterWhenILeave: Sending BB message with name=%@ payload=%@
Asked to set new messages group name: %@ on conversation: %@
Asked to set grid display mode to: %lu on conversation: %@
Asked to update messages group photo on conversation: %@
Asked to add remote members: %@ otherInvitedHandles: %@ to conversation: %@
Asked to add activity: %@ to conversation: %@
Asked to leave activitySession: %@ to conversation: %@
Asked to end activitySession: %@ to conversation: %@
Asked to present dismissal alert for activitySession: %@ on conversation: %@
Asked to set activity authorization to: %d for bundle identifier %@
Client request to set auto expanse enabled to %@
joinConversationWithRequest %@
leaveConversationWithUUID %@
Asked to launch application for activitySession %@
Asked to launch application for activitySession UUID %@
Asked to launch application for activitySession UUID %@ and override to background %@
Notified of airplay state: %@ for activity session %@
Asked to buzz member: %@ conversation: %@
Asked to refreshActiveConversations
Asked to kick member: %@ conversation: %@
Asked to set downlink muted to: (%d) for remote participants in conversation: %@
Asked to set audioEnabled to: (%d) for remote participant with ids identifier %llu in conversation: %@
Asked to set videoEnabled to: (%d) for remoteparticipant with ids identifier %llu in conversation: %@
Asked to get the latest remote screen share attributes
Asked to retrieve all active links
Asked to generate link for conversation: %@
Asked to generate link in advance of conversation with invited member handles: %@, linkLifetimeScope: %ld
Asked to add invited member handles %@ to link %@
Asked to invalidate link: %@
Asked to renew link %@ to new expiration date %@ with reason %lu
Asked to check validity for link: %@
Asked to get an inactive link for vending as suggestion
Asked to activate previously-vended link: %@
Asked to set a link name for link: %@
Asked to manually schedule a sync for activated conversation links
Asked to get the link sync state
Asked to approve a pending member waiting to be let in: %@
Asked to reject a pending member waiting to be let in: %@
Asked to %@ all let me in requests for link: %@
Asked to set screenEnabled %@ screenShareAttributes: %@ conversationWithUUID: %@
allowsScreenSharing: %@
allowsScreenSharingWithVideo: %@
allowsPortraitBlurWhenCaptionsEnabled: %{public}@
Fetching Messages group info for conversation: %@
Notified of new session-backed conversation %@ to replace non-session-backed conversation %@
Removing conversationsNotBackedByGroupSessions since dataSource got disconnected
No messages group provider is available to fetch details for messages group %@
activateConversationNoticeWithActionURL: %@ bundleID %@
UUID: %@
TUConversationManager app launch state %@ session %@ conversation %@
TUConversationManager receivedTrackedPendingMember %@ forConversationLink %@
TUConversationManager remoteScreenShareAttributesChanged %@, isLocallySharing: %@
TUConversationManager remoteScreenShareEndedWithReason: %@
TUConversationManager sharePlayAvailable: %d
TUConversationManager screenSharingAvailable: %d
Adding call %@ to calls pending upgrade to session-backed architecture
Stopping tracking conversation not backed by session %@ since it is now backed by session
Created conversation: %@ for call: %@
captureCapabilities: %ld
CMFBlockListAddItemForAllServices(%@)
CMFBlockListRemoveItemForAllServices(%@)
CMFBlockListCopyItemsForAllServicesService = %@
CMFItemCopyPhoneNumber(%@) = %@
CMFItemCopyEmailAddress(%@) = %@
CMFItemCopyBusinessID(%@) = %@
TUCall contacts data source is a '%{public}@'
Initialized dynamic display context: %@
Suggestions: Could not fetch suggested contact via namesForDetail: %@
Suggestions: Found name '%@' for '%@'
Suggestions: No suggested names found for '%@'
Found map item %@ for call: %@
Found call directory identification entry %@
Error retrieving call directory first identification entry for phone number %@: %@
Adding observer to %@ for key path %@
backTripleCameraDevices.count=%lu, backDualCameraDevices.count=%lu,  backDualWideCameraDevices.count =%lu, backWideCameraDevices.count=%lu
Could not find any front capture devices
Could not find any back capture devices
inputDevices = %@
AVCaptureDevice backgroundBlurControlMode is not in supported state. Ignoring to set %d
Camera blur changed to %@
userPreferredCamera changed to %@
[WARN] Unexpected value %@ for %@ entitlement: %@
[WARN] Unexpected NULL value returned from SecTaskCreateFromSelf()
[WARN] Unexpected value for %@ entitlement: %@
Because this is an internal install, com.apple.Superbox (aka Speakerbox) is acting as a system provider
setSupportsCurrentPlatform provider: %@ supportsCurrentPlatform: %d
Setting supportsCurrentPlatform to True for iOS and walkie-talkie, this should not happen
Asked to set %@ from %d to %d for %@. Posting necessary notifications and updating daemon
Asked to set %@ from %d to %d for %@. Posting necessary notifications
Asked to set uplinkMuted from %d to %d for %@. Posting necessary notifications and updating daemon
Asked to set downlinkMuted from %d to %d for %@. Posting necessary notifications and updating daemon
Asked to set isSendingVideo from %d to %d for %@. Posting necessary notifications and updating daemon
Asked to set sharingScreen from %d to %d for %@. Posting necessary notifications and updating daemon
Asked to set mixesVoiceWithMedia from %d to %d for self: %@. Posting necessary notifications and updating daemon
[WARN] Wrong use of API
Asked to set sharingScreen from %d to %d attributes: %@ for %@. Posting necessary notifications and updating daemon
Asked to set remote video layer %@ for mode %ld
Asked to set local video layer %@ for mode %ld
Updating video call attributes %@
Setting video layer %@ for mode %d
No layers to synchronize, set local TURemoteVideoClient to nil
Client asked to synchronize remote video layers but we don't have a AVCRemoteVideoClient which is only created once we have a nonzero videoStreamToken
No layers to synchronize so setting self.remoteVideo to nil
Creating AVCRemoteVideoClient with stream token %ld
self.videoStreamToken: %ld remoteVideoPresentationSize: %@
[WARN] Ignoring request to set remote video presentation size because call is not a video call: %@
self.videoStreamToken: %ld remoteVideoPresentationState: %d
[WARN] Ignoring request to set remote video presentation state because call is not a video call: %@
screenShareAttributes: %@
bluetoothAudioFormat: %ld
self.videoStreamToken: %ld didPause: %d
self.videoStreamToken: %ld didStall: %d
self.videoStreamToken: %ld screenAttributes: %@
self.videoStreamToken: %ld videoAttributes: %@
Initializing TUConversationProviderManagerXPCClient
Handling %s by setting up XPC connection for ProviderManager1
Handling %s by setting up XPC connection for ProviderManager2
Registering TUConversationProviderManagerXPCClient %p with async server %p
Error getting conversation provider with identifier: %@ error: %@
Error registering callbacks for conversation provider: %@ error: %@
Error registering conversation provider: %@ error: %@
Error generating pseudonym handle for conversation provider: %@ error: %@
Error renewing pseudonym handle: %@ for conversation provider: %@ error: %@
Error revoking pseudonym handle: %@ for conversation provider: %@ error: %@
Error when checking if pseudonym handle: %@ corresponds to conversation provider: %@ error: %@
Starting XPC Connection.
intent: %@ intent.triggerMethod: %ld
Intent contains an originatingDeviceIDSIdentifier: %@
Intent contains an _originatingDeviceRapportMediaSystemIdentifier: %@
Intent contains an originatingDeviceRapportEffectiveIdentifier: %@
Start call intent has audioRoute: %ld ttyType: %ld preferredCallProvider: %ld
It's an emergency call. Siri was triggered by HeySiri, and audioSourceIdentifier isn't set already. setting audioSourceIdentifier to speaker phone.
Determined call intent provider: %@
Start call audio intent has audioRoute: %ld ttyType: %ld preferredCallProvider: %ld
Intent contains a speakerphone audio route, setting audioSourceIdentifier to TUCallSourceIdentifierSpeakerRoute
Intent contains a Hey Siri audio route, setting audioSourceIdentifier to TUCallSourceIdentifierHeySiri
Intent contains a recordDeviceUID, setting audioSourceIdentifier to "%@"
Intent contains a recordDeviceIdentifier, setting audioSourceIdentifier to "%@"
Request is from a homepod, setting ttyType to none
Determined audio call intent provider: %@
Determined video call intent provider: %@
Determining destinationID and contactIdentifier for INPerson: %@ (personHandle=%@, personHandle.value=%@, contactIdentifier=%@)
Obtained CNContact from INPerson: %@
Using the following handle and contactIdentifier: %@, %@
Sender identities the device holds %@
Contact preferred accountUUIDData %@
Could not find sender identity for contact %@
[WARN] Error obtaining contact from INPerson %@: %@
Using third-party provider: %@
Setting originating UI type to =%d
Checking whether %@ is an emergency number for sender identity %@
Checking whether %@ is an emergency number for any of the following sender identities %@
No sender identities found on provider %@
Emergency or whitelisted number detected; updating dial request with emergency sender identity %@
[WARN] Could not create CNPhoneNumber from personHandle.value with phone number type: %@
[WARN] INPersonHandle has no type, attempting to infer from value %@
[WARN] Could not create CNPhoneNumber from personHandle.value with unknown type: %@
[WARN] Could not infer INPersonHandleType for person %@
Found %ld contacts matching INPerson, using %@
[WARN] Could not create contact search predicate for INPerson: %@
Call was emergency, but handle %@ is not considered to be an emergency handle. Setting redial dialType to normal.
[WARN] ZOMBIE FETCH %@ did receive results but current search is %@
Initializing TUCallHistoryControllerXPCClient
Handling %s by setting up XPC connection for CallHistoryController
Registering TUCallHistoryControllerXPCClient %p with async server %p
Error notifying CSD of deleted recent calls: %@ error: %@
Error notifying CSD of all call history deleted error: %@
Server disconnected.
Error updating outgoing local participant UUID: %@
Error registering stream token: %@
Error unregistering stream token: %@
Error starting request: %@
Error ending request: %@
Error registering moments connection: %@
Registered moments connection
Found default to enable LivePhotoXPCService - using new moments stack
Did not find default to enable LivePhotoXPCService - using old moments stack
Moments XPC connection invalidated (client side)
Moments XPC connection interrupted (client side)
[WARN] Timed out waiting for ICFCallProviderShouldAllowIncomingCall(). Defaulting to allowCall=YES, fromBlockList=NO
Initializing TUCallCenter %@
[WARN] Device does not support multiway
Initialized TUCallCenter %@
for %@
Fetching current calls
isVideoUpgrade: %d, allowVoiceWithData: %d, nonTelephonyCallExists: %d, telephonyBasebandCallExists: %d, dialRequest.provider.isTelephonyProvider: %d
isOutgoingCallSOS: %d outgoingCallCreatesMultipleSendingCalls: %d outgoingCallBreaksCallGroupLimit: %d outgoingCallCreatesMultipleVoicemailCalls: %d outgoingCallMixesVoiceWithData: %d emergencyCallExists: %d
relayCallingAvailability: %d isProviderAvailable: %d isRelayAllowed: %d isEmergency: %d supportsBasebandCalling: %d
performDial: %d useRelay: %d
isDialRequestValid: %d existingCallsAllowOutgoingCall: %d isCallingAvailable: %d
Dial attempt is returning a nil call
for dial request %@
Dial request with normal type appears to contain an MMI/USSD code: %@
Upgrading dialRequest to joinRequest with expanseProvider since it is a 1:1 FTA %@
[WARN] Cannot satisfy dial request. Returning nil call
interaction: %@
sendFieldModeDigits: %@ for provider: %@
call: %@
answerOrJoinCall: %@
Not joining call since call is disconnecting/disconnected
call: %@ sourceIdentifier: %@
call: %@ sourceIdentifier: %@ wantsHoldMusic: %d
answerRequest: %@ - Current calls are %@
We are asked to answer with bluetooth route for a video call - Ignoring to answer %@
TUOpenURLWithCompletion result: %@, error: %@
Encountered error while opening answer URL: %@ for call: %@
Another ringing call exists while we are trying to answer this call. Declining the other ringing call: %@
Overriding answer behavior to video upgrade
[WARN] No call found to answer for uniqueProxyIdentifier %@
call: %@ - Current calls are %@
Failing call: %@ to upgrade
- Current calls are %@
call: %@ otherCall: %@
Calls %@ not allowed to disconnect
call: %@ reason: %d - Current calls are %@
[WARN] Ignoring disconnectCall request because provided call was nil
Proceeding to disconnect all calls
Forwarding headset button press to MediaRemote because an activity session is controlling media playback
current calls are %@
userInfo: %@
sourceIdentifier: %@ - Current calls are %@
destination: %@ - Current calls are %@
Found route matching rapportMediaSystemIdentifier="%@", route=%@
Found route matching rapportEffectiveIdentifier="%@", route=%@
[WARN] Could not find any routes matching rapportMediaSystemIdentifier %@ or rapportEffectiveIdentifier %@ among availableRoutes %@, attempting to pick route when available...
Handing off conversation to this device using %@
Cannot continue handoff as could not find conversation with active handoff eligibility, or a conversation was already in non-waiting state. All conversations: %@
joinConversationWithConversationRequest - request: %@
Not joining conversation because Screen Time has restricted this join request
Found a matching call with staging area for join request: %@
Conversation provider does not support video, setting wantsStagingArea to NO
Bypassing checks for remote members, join request has conversation link: %@
Join request is asking to join a link that matches the currently-joined conversation, proceeding back to that conversation: %@
No remote members found for join request
Cannot launch join request, another sending call already exists
Identical call for this request exists and is ringing, answering it
Identical call for this request exists and isn't ringing, not creating a new call
for call %@
TUCallCenter shouldSuppressInCallStatusBar: %@
TUCallCenter shouldAllowRingingCallStatusIndicator: %@
sendUserScoreToRTCReporting: NULL UUID
TUCallCenter: sendUserScoreToRTCReporting: %@ for score: %d
URL is not a file system URL: %@
URL resource is not reachable: %@
Could not get file system representation for URL: %@
Client sandbox does not have access to the given file! (Error %i: %s)
Manually launching Expanse app with bundleIdentifier: %@ for activity session: %@ with activity identifier: %@
Application for activity session is not installed with bundleIdentifier: %@; error: %{public}@
Failed to open activity session with bundleIdentifier: %@; error: %{public}@
Failed to launch activity session: %@ with bundle identifier: %@
Failed to determine whether digits %@ are an emergency number due to error %@ for sender identity UUID %@.
Failed to determine whether digits %@ are a whitelisted emergency number due to error %@ for sender identity UUID %@.
Could not determine whether emergency callback mode warning should be presented due to error %@ for sender identity UUID %@.
Retrieving incoming pending conversations failed with error %@
Retrieving pseudonyms failed with error %@
Retrieving activated conversation links failed with error %@
Failed to fetch sharePlayAvailable error: %@
Failed to fetch screenSharingAvailable error: %@
Error updating remote members: %@
Error updating messages group name: %@
Error setting grid display mode: %@
Error updating messages group photo: %@
Error updating activity: %@
Error leaving activity: %@
Error ending activity: %@
Error letting CSD know airplay state for activity session: %@
Error presenting dismissal alert for activitySession: %@ on conversation: %@
Error setting activity authorization: (%d) for bundle identifier %@ with error: %@
Error setting auto expanse enabled with error: %@
joinConversationWithRequest error: %@
leaveConversationWithUUID error: %@
Error launching application for activitySession UUID: %@ with error: %@
LaunchApplication error: %@
Error buzzing member: %@
Error kicking member: %@
Error setting downlink muted: (%d) for remote participants in conversation: %@ with error: %@
Error setting audio enabled: (%d) for remote participant with identifier: %llu in conversation %@ with error: %@
Error setting video enabled: (%d) for remote participant with identifier: %llu in conversation %@ with error: %@
Failed to get latest remote screen share attributes with error: %@
Error requesting refreshActiveConversations: %@
Error in retrieving active links: %@
Error in generating link (for conversation): %@
Error in generating link (with invited member handles): %@
Error in adding invited members to link: %@
Error in invalidating link: %@
Error in renewing link to new expiration date: %@
Error in checking the validity of the link: %@
Error in obtaining an inactive pre-prepared link: %@
Error in activating a pre-prepared link: %@
Error in setting link name: %@
Error in scheduling a sync for activated conversation links: %@
Error in getting link sync state: %@
Error in approving pending member waiting to be let-in: %@
Error: %@ in setting screen enabled for conversationWithUUID: %@
Error in rejecting pending member waiting to be let-in: %@
Error in setting ignore let me in requests: %@
Error fetching upcoming notice: %@
Error in activating notice with actionURL %@ bundleIdentifier %@
Error in dismissing notice with UUID %@
Error setting presentation context: %@
Error setting messages group providing support: %@
Error getting messages group details: %@
[WARN] Bad state received when trying to get host conversation status: %lu
Error requesting initial activityAuthorizedBundleIdentifiers: %@
Host has no conversations
conversationsByGroupUUID keys: %@
conversationUpdatedMessagesGroupPhoto: %@
updateActivatedConversationLinks: %@
receivedTrackedPendingMember: %@ forConversationLink: %@
screenSharingChangedForParticipant: %llu
remoteScreenShareAttributesChanged: %@ isLocallySharing: %@
remoteScreenShareEndedWithReason: %@
sharePlayAvailable changed to: %d
screenSharingAvailable changed to: %d
addedMembersLocally: %@
buzzedMember: %@
App launch state %@ for %@
updateActivityAuthorizedBundleIdentifiers: %@
Setting audio/video mode failed with error %@
Registering messagesGroupUUID failed with error %@
Could not retrieve a call provider for the specified recent call %@.
<%@ %p availability=%d supportedMediaTypes=%@>
TUCarPlayHardwareControlEventNotification
kTUCarPlayHardwareControlButtonNameKey
kTUCarPlayHardwareControlKeypadValueKey
kTUCarPlayHardwareControlButtonGreenTelephone
kTUCarPlayHardwareControlButtonWhiteTelephone
kTUCarPlayHardwareControlButtonWhiteTelephoneLongPress
kTUCarPlayHardwareControlButtonRedTelephone
kTUCarPlayHardwareControlButtonKeypad
kTUCarPlayHardwareControlButtonMute
kTUCarPlayHardwareControlButtonDelete
DeviceUsage
Headset
v8@?0
v16@?0@"NSError"8
v20@?0B8@"NSError"12
v24@?0Q8@"NSError"16
v24@?0@"NSArray"8@"NSError"16
v24@?0q8@"NSError"16
v24@?0@"NSString"8@"NSError"16
SGSuggestionsService
CoreSuggestions
v24@?0@"NSArray"8@"NSArray"16
AppCanShowSiriSuggestionsBlacklist
com.apple.suggestions
com.apple.groupactivities.placeholder
<%@ %p
 UUID=%@
 bundleIdentifier=%@
 activityIdentifier=%@
 metadata=%@
 isSupported=%d
 originator=%@
 timestamp=%@
 trustedFromHandle=%@
 fallbackApplicationName=%@
 self.isSystemActivity=%d
 self.isPlaceholderActivity=%d
 self.startWhenStaged=%d
ACTIVITY
TelephonyUtilities
B24@?0@"NSURLQueryItem"8@"NSDictionary"16
?%@=%@
&%@=%@
CXCallDirectoryManager
CallKit
@"NSString"16@?0@"NSString"8
v24@?0@"NSArray"8@?<v@?@"NSDictionary"@"NSError">16
v12@?0i8
CALL_DIRECTORY_EXTENSION_%@_LABEL_%@
v24@?0@"NSDictionary"8@"NSError"16
CXCallDirectoryManagerIdentificationEntriesChangedNotification
PNRPhoneNumberResolver
Class getPNRPhoneNumberResolverClass(void)_block_invoke
TUGeoLocationMetadataCacheDataProvider.m
Unable to find class %s
void *PhoneNumberResolverLibrary(void)
** TUAssertion failure: %@
%s can only be called from devices with [TUCallCapabilities supportsPrimaryCalling] = YES
-[TUSenderIdentityCapabilities isThumperCallingAllowedOnSecondaryDeviceWithID:]
TUSenderIdentityCapabilities.m
-[TUSenderIdentityCapabilities isThumperCallingAllowedOnDefaultPairedSecondaryDevice]
-[TUSenderIdentityCapabilities setThumperCallingAllowed:onSecondaryDeviceWithID:]
-[TUSenderIdentityCapabilities setThumperCallingAllowedOnDefaultPairedSecondaryDevice:]
v16@?0@"<TUCallCapabilitiesDelegatePrivate>"8
== TUSenderIdentityCapabilities ==
CDMA:
    supportsSimultaneousVoiceAndData: %d
Wi-Fi calling:
    supportsWiFiCalling: %d
    isWiFiCallingEnabled: %d
    isWiFiCallingCurrentlyAvailable: %d
    supportsEmergencyWiFiCalling: %d
    isEmergencyWiFiCallingCurrentlyAvailable: %d
VoLTE calling:
    supportsVoLTECalling: %d
    isVoLTECallingEnabled: %d
    isVoLTECallingCurrentlyAvailable: %d
Thumper calling:
    supportsThumperCalling: %d
    isThumperCallingAllowedForCurrentDevice: %d
    isThumperCallingEnabled: %d
    supportsThumperCallingOverCellularData: %d
    isThumperCallingCurrentlyAvailable: %d
facetime
facetime-prompt
facetime-audio
facetime-audio-prompt
noprompt
facetime-group
incallservice-open-link
system-call-controls
system-screen-sharing
launchForIncomingCall
launchForOutgoingConversation
showInCallUI
showCarPlayInCallUI
answerSourceIdentifier
showSystemCallControls
showHandoffEligibleNearby
showIncomingTransmissionNotice
updateForegroundApp
bundleIdentifier
applicationType
viewLinkDetails
joinConversationLink
pseudonym
conversationLink
link
shouldBackgroundLaunch
\+?[0-9]+
%@://%@
%@://
facetimeapp
__INVALID_PROVISIONING_URL__
 %@=%d
 %@=%@
 %@=%p
<%@ %p 
%@=%d
%@=%@
%@=%ld
activated = %d
creationDate == %@
expirationDate == %@
expirationDate > %@
groupUUID == %@
ANY invitedHandles.normalizedValue ==[c] %@
ANY invitedHandles.type = %d
ANY invitedHandles.value ==[c] %@
ANY originatorHandle.normalizedValue ==[c] %@
ANY originatorHandle.type = %d
ANY originatorHandle.value ==[c] %@
pseudonym = %@
publicKey = %@
privateKey = %@
400.0.0
 sourceVersion=%@
 isAVLessCapable=%d
TUDispatcherDidFinishBoostQualityOfServiceNotification
%s is not available for use. To create an object instance use the designated initializer.
-[TUDispatcher init]
TUDispatcher.m
TUVideoDeviceControllerInputDevicesChanged
TUVideoDeviceControllerReceivedFirstPreviewFrame
TUVideoDeviceControllerDidChangeLocalCameraUIDNotification
TUVideoDeviceControllerDidChangeLocalCameraUIDDeviceUniqueIDKey
TUVideoDeviceControllerDidStartPreview
TUVideoDeviceControllerDidStopPreview
TUVideoDeviceControllerDidPausePreview
TUVideoDeviceControllerDidStartPreviewDeviceUniqueID
TUVideoDeviceControllerDeviceDidReceiveError
TUVideoDeviceControllerDeviceDidReceiveErrorCameraID
TUVideoDeviceControllerDeviceDidReceiveErrorError
TUVideoDeviceControllerDeviceBecameAvailable
TUVideoDeviceControllerDeviceBecameAvailableDeviceUniqueID
TUVideoDeviceControllerLocalAttributesChanged
TUVideoDeviceControllerLocalAttributesChangedAspectRatio
TUVideoDeviceControllerZoomAvailable
TUVideoDeviceControllerZoomUnavailable
TUVideoDeviceControllerCameraBlurEnabledChangedNotification
TUVideoDeviceControllerIsCameraBlurEnabledKey
TUVideoDeviceControllerUserPreferredCameraChangedNotification
TUVideoDeviceControllerUserPreferredCameraUIDKey
TUVideoDeviceControllerDidGetSnapshotNotification
TUVideoDeviceControllerSnapshotDataKey
TUVideoDeviceController.m
%s is not available. Use a designated initializer instead.
-[TUVideoDeviceController init]
 devices=%@
 followSystemCameraEnabled=%d
com.apple.avfoundation.avcapturedevice.built-in_video:1
AVCaptureDeviceDiscoverySession
AVFoundation
AVCaptureDeviceTypeBuiltInTrueDepthCamera
AVMediaTypeVideo
VideoAttributes
AVConference
RECENTS
com.apple.telephonyutilities.usernotificationproviderxpcclient
com.apple.telephonyutilities.callservicesdaemon.usernotificationprovider
CPGroupActivityGenericContext
CPGroupActivityCollaborationContext
CPGroupActivityListenTogetherContext
CPGroupActivityWatchTogetherContext
CPGroupActivityWorkoutTogetherContext
CPGroupActivityScreenSharingContext
CPGroupActivityPlayTogetherContext
v12@?0I8
AudioServicesPlaySystemSoundWithOptions
AudioToolbox
 type=%@
 pullContext=%@
Unknown
Pull
Push
PointOfPlayback
ControlCenterWithActivity
ControlCenterWithoutActivity
TUNumberToDialOptionsSuppressLocalAssist
telephony
ForceInternationalAssist
enable-dial-assist
 handleType=%ld
 notificationStyles=%ld
 notificationStyles.NoNotification=%@
 notificationStyles.UserNotification=%@
 notificationStyles.IncomingCall=%@
 notificationStyles.IndefiniteCall=%@
TUVideoEffect.m
-[TUVideoEffect init]
%s: parameter '%@' cannot be nil
-[TUVideoEffect initWithName:thumbnailImage:]
name
thumbnailImage
com.apple.telephonyutilities.turepeatingactor
com.apple.siri.announce-calls.enabled
u65_flag
@"NSDictionary"8@?0
TUCallHistoryControllerDidFinishBoostNotification
TUCallHistoryControllerRecentCallsDidChangeNotification
TUCallHistoryControllerUnreadCallCountDidChangeNotification
TUCallHistoryController.m
The controller should have been initialized with sharedControllerWithCoalescingStrategy: before attempting to access the instance with the sharedController convenience method
-[TUCallHistoryController init]
%@.%@
_simpleIvarAccess
B16@?0@"TUCallProvider"8
kCallHistoryDatabaseChangedNotification
CallHistory
CHManager
kCHCoalescingStrategyRecents
kCHServiceProviderFaceTime
!(mediaType == %@ && serviceProvider == %@)
kCHLimitServiceProviderKey
kCHLimitMediaTypeKey
kCHLimitTTYTypeKey
kCHServiceProviderTelephony
kCHCoalescingStrategyCollapseIfEqual
CHRecentCall
Class getCHRecentCallClass(void)_block_invoke
void *CallHistoryLibrary(void)
addressbook://%@
TUCallCapabilitiesSupportsTelephonyCallsChangedNotification
TUCallCapabilitiesSupportsFaceTimeAudioCallsChangedNotification
TUCallCapabilitiesSupportsFaceTimeVideoCallsChangedNotification
TUCallCapabilitiesWiFiCallingChangedNotification
TUCallCapabilitiesVoLTECallingChangedNotification
TUCallCapabilitiesThumperCallingChangedNotification
TUCallCapabilitiesRelayCallingChangedNotification
TUCallCapabilitiesWiFiCallingProvisioningURLChangedNotification
TUCallCapabilitiesThumperCallingProvisioningURLChangedNotification
TUCallCapabilitiesCloudCallingDevicesChangedNotification
TUCallCapabilitiesOutgoingRelayCallerIDChangedNotification
TUCallCapabilitiesRelayCallingAvailabilityChangedNotification
TUCallCapabilitiesFaceTimeAvailabilityChangedNotification
TUCallCapabilitiesEmergencyCallbackModeChangedNotification
TUCallCapabilitiesEmergencyCallbackPossibleChangedNotification
B24@?0@"TUSenderIdentityCapabilities"8^B16
== TUCallCapabilities ==
General Support:
    supportsTelephonyCalls: %d
    supportsFaceTimeAudioCalls: %d
    supportsFaceTimeVideoCalls: %d
    canAttemptTelephonyCallsWithoutCellularConnection: %d
    canAttemptEmergencyCallsWithoutCellularConnection: %d
Primary/Secondary Device:
    supportsPrimaryCalling: %d
Call support:
    telephonyCallSupport: %d
    faceTimeAudioCallSupport: %d
    faceTimeVideoCallSupport: %d
Displaying support:
    supportsDisplayingTelephonyCalls: %d
    supportsDisplayingFaceTimeAudioCalls: %d
    supportsDisplayingFaceTimeVideoCalls: %d
Call Availability:
    isDirectTelephonyCallingCurrentlyAvailable: %d
    isDirectFaceTimeAudioCallingCurrentlyAvailable: %d
    isDirectFaceTimeVideoCallingCurrentlyAvailable: %d
System capabilities:
Secondary calling:
    accountsMatchForSecondaryCalling: %d
    accountsSupportSecondaryCalling: %d
Relay calling:
    supportsRelayingToOtherDevices: %d
    supportsRelayCalling: %d
    isRelayCallingEnabled: %d
    isRelayCallingGuaranteed: %d
    areRelayCallingFeaturesEnabled: %d
Outgoing relay calling:
    supportsTelephonyRelayCalling: %d
    supportsFaceTimeAudioRelayCalling: %d
    supportsFaceTimeVideoRelayCalling: %d
    outgoingRelayCallerID: %@
Emergency callback mode:
    isEmergencyCallbackModeEnabled: %d
    isEmergencyCallbackPossible: %d
FaceTimePhotosEnabled
-[TUMomentsController init]
TUMomentsController.m
B8@?0
Invalid parameter not satisfying: %@
provider != nil
transactionID != nil
v24@?0@"TUMomentsCapabilities"8@"NSError"16
FaceTimePhotosOptIn
IMLockdownManager
IMFoundation
com.apple.telephonyutilities.tusoundplayer
Infinite
kAudioServicesPlaySystemSoundOptionLoopKey
TUSoundPlayer.m
Failed to weak link string named %s
v16@?0@?<v@?>8
AudioServicesStopSystemSound
appleCareHandles
+18006927753
shouldSuppressMutedTalkerNotification
AVAudioClient
com.apple.facetime.audioInputChangedNotification
TUAudioDeviceController.m
-[TUAudioDeviceController init]
<%@ %p devices=%@>
kAUVoiceIOProperty_MediaPlaybackOnExternalDevice
 sessionUUID=%@
 sessionEventType=%ld
 actionURL=%@
 item=%@
 queueItemType=%ld
 identifier=%lu
 handle=%@
 muted=%d
 audioEnabled=%d
 videoEnabled=%d
 screenEnabled=%d
 momentsAvailable=%d
 streamToken=%ld
 screenToken=%ld
 captionsToken=%ld
 capabilities=%@
 audioPaused=%d
 isRemoteAudioEnabled=%d
 isRemoteVideoEnabled=%d
 isLightweight=%d
 isLocalAccountHandle=%d
 association=%@
 isGuestModeEnabled=%d
 avMode=%ld
 senderCorrelationIdentifier=%@
 remoteCameraOrientation=%ld
 localVideoContextSlotIdentifier=%ld
 remoteVideoContextSlotIdentifier=%ld
Don't call %@, call designated initializer instead.
-[TUProxyRecentCall init]
TUProxyRecentCall.m
FaceTime
kCHCallStatusMissed
 uniqueIdentifier=%@
 name=%@
 deviceType=%ld
 isA2DPRoute=%d
 isCurrentlyPicked=%d
 isDefaultRoute=%d
 isReceiver=%d
 isSpeaker=%d
 isWiredHeadphones=%d
 isWiredHeadset=%d
 isWirelessHeadset=%d
 isAirTunes=%d
 isCarAudio=%d
 isGuest=%d
 isBluetooth=%d
 isBluetoothLE=%d
 isBluetoothManaged=%d
 bluetoothEndpointType=%ld
 isInEarDetectionEnabled=%d
 isInEarDetectionSupported=%d
 isPreferred=%d
 isPreferredAndActive=%d
 identifiersOfOtherConnectedDevices=%@
 supportsRelay=%d
 isPartnerRouteRoutable=%d
 isSiblingRoutePresent=%d
 supportsSharePlay=%d
 isTipiParticipant=%d
 isTriangleParticipant=%d
 isCarKitRoute=%d
-[TUProxyAutocompleteResult init]
TUProxyAutocompleteResult.m
 identifier=%llu
 pluginName=%@
MAYBE_NICKNAME_%@
%@_AND_%@
%@_%@_AND_%@
%@_%@_%@_AND_%@_OTHER
 groupUUID=%@
 link=%@
 messagesGroupUUID=%@
 messagesGroupName=%@
 state=%ld
 hasReceivedLetMeInRequest=%ld
 letMeInRequestState=%ld
 ignoreLMIRequests=%d
 isAudioEnabled=%d
 isVideoEnabled=%d
 isVideoPaused=%d
 isScreenEnabled=%d
 isLocallyCreated=%d
 hasJoined=%d
 mode=%ld
 remoteMembers=%@
 pendingMembers=%@
 kickedMembers=%@
 rejectedMembers=%@
 otherInvitedHandles=%@
 lightweightMembers=%@
 activeRemoteParticipants=%@
 activeLightweightParticipants=%@
 report=%@
 activities=%@
 stagedActivitySession=%@
 oneToOneModeEnabled=%d
 backedByGroupSession=%d
 provider=%@
 virtualParticipants=%@
 invitationPreferences=%@
 localMember=%@
 localParticipantIdentifier=%llu
 localParticipantAssociation=%@
 isOneToOneHandoffOngoing=%d
 handoffEligibility=%@
 isFromStorage=%d
 isAnyOtherAccountDeviceActive=%d
 mirageEnabled=%d
 supportedMediaTypes=%@
 systemActivitySessions=%@
IMSPIGetGroupPhotosForChatsWithGroupIDs
void *IMCoreLibrary(void)
TUConversation.m
NSDictionary *LocalIMSPIGetGroupPhotosForChatsWithGroupIDs(NSArray *__strong)
com.apple.iphone
IPHONE
com.apple.ipad
IPAD
com.apple.ipod
IPOD
com.apple.mac
 isEligible=%d
 isUplinkMuted=%d
 isSendingVideo=%d
 conversationGroupUUID=%@
 originatingDeviceType=%@
v32@?0@"TUCall"8Q16^B24
B16@?0@"TUCall"8
q24@?0@"TUCall"8@"TUCall"16
v24@?0@"TUCall"8^B16
 deviceFamily=%ld
 style=%ld
 displayScale=%@
 scaleFactor=%@
 displayID=%@
 frameRate=%@
 windowed=%d
 windowUUID=%@
 originalResolution=%@
FTDeviceSupport
FTServices
TUNeighborhoodActivityConduitErrorDomain
Conversation Not Active
The selected conversation is not active on the target device.
Conversation Not Found
The requested conversation could not be found.
Invalid Arguments
One or more input arguments were invalid.
Internal Status Error
The handoff system was in an unexpected state.
Operation Timed Out
The operation did not complete in a timely manner.
Not Yet Implemented
This operation has not yet been implemented. Please check back later.
Device Not Found
The requested device could not be located at this time.
Target Not Split Paired
The target device is not in a split session initiated by this device.
No Split Session Approver
There is no registered delegate that can approve split sessions.
Client Not Entitled
The XPC client does not have the requisite entitlement.
Approval Not Implemented
The XPC client has not implemented split-session approval.
Activity Not Continuable
The requested activity cannot be continued on tvOS.
No Caller ID
No caller ID is available for this device.
No Public Token
No public token is available for this device.
Pseudonym Provisioning Timeout
A timeout occurred when provisioning a pseudonym for this device.
Pseudonym Provisioning Failure
An error occurred when provisioning a pseudonym for this device.
Join In Progress
A join request is already in progress.
Canceled
The operation was canceled by the user.
Device Not Paired
The operation could not be completed because the target device is not paired.
Split Session Already Active
The device is already in a split session and cannot join another.
Apple TV is incapable of handoff
This Apple TV is not capable of shareplay with this iOS device (perhaps version is too old).
<nil>
TUNeighborhoodActivityConduit
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
nearbyTVs
currentSplitSessionTV
approvalDelegate
plistRepresentation
com.apple.faceTime.neighborhoodActivityConduit.defaultQueue
activeSplitSessionTV
v16@?0@"<TUNeighborhoodActivityConduitDelegate>"8
v24@?0@"NSSet"8@"NSError"16
v24@?0@"TUNearbyDeviceHandle"8@"NSError"16
TUAudioSystemActiveCategoryVolumeChangedNotification
TUAudioSystemUplinkMuteStatusChangedNotification
TUAudioSystemDownlinkMuteStatusChangedNotification
TUAudioSystemTTYChangedNotification
TUAudioSystemAudioPickableRoutesChanged
TUAudioSystemCategoryKey
TUAudioSystemModeKey
com.apple.TelephonyUtilities.TUAudioSystemController.UplinkMutedQueue
com.apple.TelephonyUtilities.TUAudioSystemController.DownlinkMutedQueue
com.apple.TelephonyUtilities.TUAudioSystemController.TTYQueue
com.apple.TelephonyUtilities.TUAudioSystemController.PickableRoutesQueue
AVAudioSessionMediaServicesWereResetNotification
AVAudioSession
AVSystemController_PostInterruptionEndedNotificationKey_AudioSessionID
MediaExperience
AVSystemController_PostInterruptionEndedNotificationKey_IsResumable
@8@?0
TTYCall
@"NSArray"8@?0
PhoneCall
Speaker
CarAudioOutput
kMXSessionAudioCategory_PlayAndRecord_NoBluetooth
kMXSessionAudioMode_VoiceChat
kMXSessionAudioMode_VideoChat
kMXSessionAudioMode_RemoteVoiceChat
kMXSessionAudioCategory_Voicemail
AirTunes
v16@?0@"NSArray"8
Voicemail
AVAudioSessionCategoryPhoneCall
AVSystemController
Class getAVSystemControllerClass(void)_block_invoke
TUAudioSystemController.m
void *MediaExperienceLibrary(void)
NSString *getAVSystemController_PickableRoutesDidChangeNotification(void)
AVSystemController_PickableRoutesDidChangeNotification
NSString *getAVSystemController_SystemVolumeDidChangeNotification(void)
AVSystemController_SystemVolumeDidChangeNotification
NSString *getAVSystemController_UplinkMuteDidChangeNotification(void)
AVSystemController_UplinkMuteDidChangeNotification
NSString *getAVSystemController_SubscribeToNotificationsAttribute(void)
AVSystemController_SubscribeToNotificationsAttribute
NSString *getAVSystemController_PostInterruptionEndedNotification(void)
AVSystemController_PostInterruptionEndedNotification
NSString *getAVSystemController_UplinkMuteAttribute(void)
AVSystemController_UplinkMuteAttribute
NSString *getAVSystemController_DownlinkMuteAttribute(void)
AVSystemController_DownlinkMuteAttribute
NSString *getAVSystemController_PickedRouteAttribute(void)
AVSystemController_PickedRouteAttribute
NSString *getAVSystemController_PickableRoutesAttribute(void)
AVSystemController_PickableRoutesAttribute
AVAudioSessionCategory getAVAudioSessionCategoryPhoneCall(void)
void *AudioSessionLibrary(void)
NSString *getAVSystemController_RouteDescriptionKey_RouteCurrentlyPicked(void)
AVSystemController_RouteDescriptionKey_RouteCurrentlyPicked
NSString *getAVSystemController_RouteDescriptionKey_RouteUID(void)
AVSystemController_RouteDescriptionKey_RouteUID
NSString *getAVSystemController_RouteDescriptionKey_AVAudioRouteName(void)
AVSystemController_RouteDescriptionKey_AVAudioRouteName
NSString *getAVSystemController_SomeSessionIsActiveThatPrefersNoInterruptionsByRingtonesAndAlertsAttribute(void)
AVSystemController_SomeSessionIsActiveThatPrefersNoInterruptionsByRingtonesAndAlertsAttribute
TUCallCapabilitiesThumperPinAlertNotification
pinCode
fromAlias
TUCallCapabilitiesThumperPinAlertCompletedNotification
success
cancelled
ThumperAvailableKey
com.apple.telephonyutilities.callcapabilitiesxpcclient
com.apple.telephonyutilities.callservicesdaemon.connectionrequest
com.apple.telephonyutilities.callservicesdaemon.callcapabilities
v16@?0@"TUCallCapabilitiesState"8
%@=%llu
 contacts=%@
 localizedName=%@
 companyName=%@
 contactLabel=%@
 legacyAddressBookIdentifier=%d
com.apple.mobilephone
com.apple.telephonyutilities.dialassist
LogDialAssist
TUDialAssistUserSettingChanged
com.apple.TelephonyUtilities.CallHistoryMarkedReadBulletinBoardMessage
CallUUIDs
B16@?0@"TUContactsDataProviderFetchRequest"8
q24@?0@"NSString"8@"NSString"16
UNKNOWN
%@_%@_%@_AND_ONE_OTHER
%@_%@_%@_AND_%@_OTHERS
EMERGENCY_SERVICES
BLOCKED
%@_%@_OR_%@_%@
%@_OR_%@_%@
%@_OR_%@
%@_OR_%@_OTHERS
%@_AND_%@_OTHERS
INJoinCallIntent
joinRequest
dialRequest
Call History Queue
Intents
 %@=%ld
 callerID=%@
 shouldSuppressInCallUI=%d
 wantsStagingArea=%d
 showUIPrompt=%d
 sendLetMeInRequest=%d
 isJoiningConversationWithLink=%d
 conversationLink=%@
 activity=%@
 audioSourceIdentifier=%@
 participantAssociation=%@
originatingUIType=%d
%ld,%ld
showUIPrompt
INPerson
INInteraction
RTTSettings
RTTUtilities
RTTTelephonyUtilities
TUMomentDescriptor.m
%s is unavailable
-[TUMomentDescriptor init]
photos://asset?identifier=%@&albumname=camera-roll
 pAI=%@
TUAnswerRequest.m
%s is unavailable, use a designated initializer instead
-[TUAnswerRequest init]
 uniqueProxyIdentifier=%@
 sourceIdentifier=%@
 wantsHoldMusic=%d
 pauseVideoToStart=%d
 downgradeToAudio=%d
 behavior=%ld
 localLandscapeAspectRatio=%@
 localPortraitAspectRatio=%@
 dateAnswered=%@
 allowBluetoothAnswerWithoutDowngrade=%d
 endpointIDSDestination=%@
 endpointRapportMediaSystemIdentifier=%@
 endpointRapportEffectiveIdentifier=%@
TURemoteVideoSubLayer
TURemoteVideoClient.m
-[TURemoteVideoClient init]
%@-%p
CATransaction
Class getCATransactionClass(void)_block_invoke
void *QuartzCoreLibrary(void)
CALayer
Class getCALayerClass(void)_block_invoke
CATransform3D _CATransform3DMakeAffineTransform(CGAffineTransform)
CATransform3DMakeAffineTransform
CGAffineTransform _CGAffineTransformMakeRotation(CGFloat)
CGAffineTransformMakeRotation
void *CoreGraphicsLibrary(void)
NSString *getkCAGravityResizeAspectFill(void)
kCAGravityResizeAspectFill
CAContext
Class getCAContextClass(void)_block_invoke
76,8194
76,8207
76,8206
76,8212
76,8198
76,8197
76,8208
76,8195
76,8201
76,8203
76,8204
76,8205
76,8202
76,8209
76,8210
76,8211
 bluetoothProductIdentifier=%@
Receiver
BluetoothLEOutput
Headphone
TUAudioRoute.m
NSString *getAVSystemController_RouteDescriptionKey_RouteName(void)
AVSystemController_RouteDescriptionKey_RouteName
NSString *getAVSystemController_RouteDescriptionKey_IsBTRoute(void)
AVSystemController_RouteDescriptionKey_IsBTRoute
NSString *getAVSystemController_RouteDescriptionKey_BTDetails_IsBTManaged(void)
AVSystemController_RouteDescriptionKey_BTDetails_IsBTManaged
NSString *getAVSystemController_RouteDescriptionKey_BTDetails_EndpointType(void)
AVSystemController_RouteDescriptionKey_BTDetails_EndpointType
NSString *getAVSystemController_RouteDescriptionKey_BTDetails_EndpointType_Headphones(void)
AVSystemController_RouteDescriptionKey_BTDetails_EndpointType_Headphones
NSString *getAVSystemController_RouteDescriptionKey_BTDetails_EndpointType_Vehicle(void)
AVSystemController_RouteDescriptionKey_BTDetails_EndpointType_Vehicle
NSString *getAVSystemController_RouteDescriptionKey_BTDetails_EndpointType_Speakers(void)
AVSystemController_RouteDescriptionKey_BTDetails_EndpointType_Speakers
NSString *getAVSystemController_RouteDescriptionKey_BTDetails_EndpointType_TTY(void)
AVSystemController_RouteDescriptionKey_BTDetails_EndpointType_TTY
NSString *getAVSystemController_RouteDescriptionKey_BTDetails_IsA2DPRoute(void)
AVSystemController_RouteDescriptionKey_BTDetails_IsA2DPRoute
NSString *getAVSystemController_RouteDescriptionKey_PreferredExternalRouteDetails_InEarDetectEnabled(void)
AVSystemController_RouteDescriptionKey_PreferredExternalRouteDetails_InEarDetectEnabled
NSString *getAVSystemController_RouteDescriptionKey_PreferredExternalRouteDetails_InEarDetectSupported(void)
AVSystemController_RouteDescriptionKey_PreferredExternalRouteDetails_InEarDetectSupported
NSString *getAVSystemController_HeadphoneJackHasInputAttribute(void)
AVSystemController_HeadphoneJackHasInputAttribute
NSString *getAVSystemController_PickableRouteType_Wireless(void)
AVSystemController_PickableRouteType_Wireless
NSString *getAVSystemController_PickableRouteType_Default(void)
AVSystemController_PickableRouteType_Default
NSString *getAVSystemController_RouteDescriptionKey_IsPreferredExternalRoute(void)
AVSystemController_RouteDescriptionKey_IsPreferredExternalRoute
NSString *getAVSystemController_RouteDescriptionKey_PreferredExternalRouteDetails_IsActive(void)
AVSystemController_RouteDescriptionKey_PreferredExternalRouteDetails_IsActive
NSString *getAVSystemController_RouteDescriptionKey_BTDetails_PartnerRouteRoutable(void)
AVSystemController_RouteDescriptionKey_BTDetails_PartnerRouteRoutable
NSString *getAVSystemController_RouteDescriptionKey_BTDetails_SiblingRoutePresent(void)
AVSystemController_RouteDescriptionKey_BTDetails_SiblingRoutePresent
NSString *getAVSystemController_RouteDescriptionKey_SupportsSharePlay(void)
AVSystemController_RouteDescriptionKey_SupportsSharePlay
NSString *getAVSystemController_RouteDescriptionKey_BTDetails_ProductID(void)
AVSystemController_RouteDescriptionKey_BTDetails_ProductID
NSString *getAVSystemController_HeadphoneJackIsConnectedAttribute(void)
AVSystemController_HeadphoneJackIsConnectedAttribute
NSString *getAVSystemController_RouteDescriptionKey_RouteType(void)
AVSystemController_RouteDescriptionKey_RouteType
NSString *getAVSystemController_RouteDescriptionKey_OtherDevicesConnected(void)
AVSystemController_RouteDescriptionKey_OtherDevicesConnected
NSString *getAVSystemController_RouteDescriptionKey_OtherDevicesConnected_UniqueID(void)
AVSystemController_RouteDescriptionKey_OtherDevicesConnected_UniqueID
com.apple.telephonyutilities.callprovidermanagerxpcclient
Error communicating with callservicesd
com.apple.telephonyutilities.callservicesdaemon.callprovidermanager
v32@?0@"NSDictionary"8@"NSDictionary"16@"NSDictionary"24
%@: %@
conversationOneToOneModeEnabled
conversationHandoffEnabled
vouchingEnabled
addTVAsActiveParticipant
groupFacetimeAsAServiceEnabled
filterGFTaaSCalls
uNNotificationsMacOSEnabled
offrampEnabled
expanseEnabled
sharePlayDisabled
sharePlayDiscoverabilityEnabled
AirPlay
SharePlayWithAirPlayVideo
TVApp
expanse
Music
potluck
aTVHandoff
ftvSpatialAudioEnabled
NonInterruptingCalls
ScreenSharingSupport
livePhotoXPCService
UserScoreFeedbackEnabled
individualAudioVideoToggleEnabled
qrPluginEncryptionEnabled
AudioDSP
Expanse_BT_HFP
TapToRadarBannerEnabled
Contacts
suggestions_reload_for_selected_recipients
EnableGFTDowngradeToOneToOne
UPlusNDowngrade
BluetoothFeatures
RingtoneOverA2DP
mochiEnabled
unreliableMessengerEnabled
ScreenCaptureKit
expanseAdoption
AVLessSharePlay
Wombat
ContinuityCapture
avcCameraSelectionEnabled
greenTeaLinksEnabled
screenSharingCALayerHostMode
screenSharingDeskViewEnabled
screenSharingDeskViewSqueegeeEnabled
GameCenter
shareplay_integration
TelephonyUtilitiesErrorDomain
com.apple.TelephonyUtilities.FTCServiceAvailabilityListenerID
TUUserActivityTypeJoinConversationRequest
TUUserActivityJoinConversationRequestUserInfoKey
LDMGlobalEnabled
DIAL_%@_LONG_FORMAT
DIAL_%@_SHORT_FORMAT
%@_MAC
%@_IPHONE
%@_IPOD
%@_IPAD
%@_WLAN
%@_WIFI
%@_IOS
com.apple.TelephonyUtilities
CTServerConnectionRef  _Nonnull TUCTServerConnection()_block_invoke
TUUtilities.m
Unable to get CT server connection
PHInCallRemoteAlertShellViewController
com.apple.mobilephone.callhandoff
com.apple.mobilephone.apphistory
MKLocalSearchRequest
MapKit
MKLocalSearch
v24@?0@"MKLocalSearchResponse"8@"NSError"16
com.apple.telephonyutilities.mapsearch.callbackqueue
LSApplicationWorkspace
MobileCoreService
MobileCoreServices
FBSOpenApplicationOptionKeyUnlockDevice
FrontBoardServices
FBSOpenApplicationOptionKeyPromptUnlockDevice
SBSInCallOpenApplicationOptionKeyPromptUnlockUI
NFD; Any-Latin; [:Mn:] Remove; Latin-ASCII; [^[:Letter:][:Nd:][+*#,;]] Remove; NFC
Name
Object
UserInfo
Telephony
FaceTimeAudio
FaceTimeVideo
Idle
Active
Held
Sending
Ringing
Disconnecting
Disconnected
multiwayMaxConcurrentStreams
enableLocalVideoRecording
SBAllowNotificationsDuringScreenSharing
FTServerBag
qr-member-block-timeout
disable-conversation-links
CoreServices
%@#%@
JwLB44/jEB8aFDpXQ16Tuw
TUConversationProviderIdentifierKey
com.apple.private.expanse
com.apple.telephonyutilities.callservicesd.FaceTimeProvider
com.apple.private.unknown
<%@ %p identifier: %@ providerConfiguration: %@>
https
facetime.apple.com/join
TUConversationLink.m
pseudonym != nil && pseudonym.destinationIdIsPseudonym
publicKey != nil && publicKey.length >= 1
pseud:
%@%@
 pseudonym=%@
 publicKey=%@
 URL=%@
 linkName=%@
 linkLifetimeScope=%ld
publicKey
groupUUID
originatorHandle
 hold=%d
 grp=%d
 ungrp=%d
 DTMF=%d
 uMPS=%d
 aC=%d
 sTV=%d
session
twoway
multiwayconference
telephonyutilities
com.apple.telephonyutilites.facetime
com.apple.telephonyutilites.phone
com.apple.telephonyutilities.rtcreporting
callUUID
endReason
incoming
connected
currentlyGrouped
relay
isConversation
fromLink
durationMs
setupTimeMs
connectionTimeMs
relativeStart
relativeEnd
bucketedDuration
com.apple.calls.telephonyutilities
Default
Oversized
com.apple.calls.telephonyutilities.logging
NeighborhoodActivityCore
com.apple.greentea
calls
 activitySessions=%@
 initiator=%@
 localParticipantIdentifier=%@
 virtualParticipantConfig=%@
 unreliableMessengerConfig=%@
TULabeledHandle.m
-[TULabeledHandle init]
<%@ %p handle=%@ label=%@>
abuid
wasAssisted
originatingUI
suppressAssist
forceAssist
isVoicemail
telemergencycall
telprompt
telSOS
%@://%@?%@=%@
&%@=%d
&%@=1
%@://?%@=1
callto
cellular-data
%@:%@
*5005*78283#
_TelephonyUtilities_telURLQueryParameters
 type=%zd
 isPrimary=%@
 avcIdentifier=%@
%@: %li sections, %li total results
Section %@ (%li)
groupType=%d
B32@?0@"<TUSearchResult>"8Q16^B24
com.apple.TelephonyUtilities.TUReplyWithMessageStoreChanged
TUReplyWithMessageStoreReplyArray
CANNED_REPLY_SENDING_%d
CANNED_REPLY_%d
CANNED_REPLY_ACTION_SHEET_OPTION_FORMAT_%@
qrPluginCertValidationEnabled
qrPluginCertHostname
qrPluginCertLeafMarkerOID
 connectionRetryIntervalMillis=%lu
 connectionMaxAttempts=%lu
 rpcStreamRetryIntervalMillis=%lu
 rpcStreamRetryIntervalMaxAttempts=%lu
 serverCertValidationEnabled=%s
 serverCertHostnameOverride=%@
 serverCertLeafMarkerOIDOverride=%@
 participantIdentifer=%llu
 videoQuality=%lu
 visibility=%lu
 prominence=%lu
 spatialPosition=(%f, %f, %f, %f)
 isInCanvas=%d
/System/Library/PrivateFrameworks/TelephonyUtilities.framework/callservicesd
tcc_identity_t tu_tcc_identity_create(tcc_identity_type_t, const char *)
NSBundle+TelephonyUtilities.m
tcc_identity_create
void *TCCLibrary(void)
v32@?0@"<TUDelegate>"8@"NSObject<OS_dispatch_queue>"16^B24
NPSManager
Class getNPSManagerClass(void)_block_invoke
TUUserConfiguration.m
void *NanoPreferencesSyncLibrary(void)
<%@ %p calls=%@>
com.apple.telephonyutilities.callservicesdaemon.callstatecontroller
v24@?0@"TUCall"8@"NSArray"16
Local daemon delegate must pass in a completion block
TUCallServicesInterface.m
non-nil
v16@?0@"NSDictionary"8
v12@?0B8
v16@?0Q8
<%@: %@>
<%@ %p %@=%@>
 screenSharingAvailable=%d
 gondolaCallingAvailable=%d
 mirageCallingAvailable=%d
 gftDowngradeToOneToOneAvailable=%d
 uPlusNDowngradeAvailable=%d
 sharePlayProtocolVersion=%@
TUIDSLookupManagerStatusChangedNotification
com.apple.telephonyutilities.callservicesd.tuidslookupmanager
@"<TUIDSBatchIDQueryController>"32@?0@"NSString"8@"<IDSBatchIDQueryControllerDelegate>"16@"NSObject<OS_dispatch_queue>"24
v32@?0@"NSString"8@"NSNumber"16^B24
v32@?0@"NSString"8@"NSArray"16^B24
v16@?0@"NSSet"8
com.apple.telephonyutilities.searchcontroller
v20@?0@"<TUSearchModuleProtocol>"8B16
<%@ %p provisioningStatus=%d provisioningURL=%@ provisioningPostData=%p canEnable=%d isEnabled=%d>
provisioningStatus
provisioningURL
provisioningPostData
canEnable
enabled
roamingEnabled
canEnableRoaming
com.apple.telephonyutilities.reportingcontrollerxpcclient
com.apple.telephonyutilities.callservicesdaemon.reportingcontroller
com.apple.telephonyservices.neighborhoodactivityconduitxpcclient
com.apple.telephonyutilities.callservicesdaemon.neighborhood-activities
%@_%@
%llu
<%@ %p category=%@ mode=%@>
AVCAudioPowerSpectrumMeter
<%@ %p soundType=%lu sound=%@ iterations=%@ pauseDuration=%f>
TUSandboxExtendedURL.m
-[TUSandboxExtendedURL init]
<%@ %p URL=%@ sandboxExtensionClass=%@ sandboxExtensionToken=%@ sandboxExtensionHandle=%lld>
<%@ %p>
Device Capabilities:
    supportsPrimaryCalling: %@
    supportsBasebandCalling: %@
    supportsCellularData: %@
    supportsDisplayingTelephonyCalls: %@
    supportsDisplayingFaceTimeAudioCalls: %@
    supportsDisplayingFaceTimeVideoCalls: %@
Calling Availability:
    isFaceTimeAudioAvailable: %@
    isFaceTimeVideoAvailable: %@
CT Capability Validity:
    areCTCapabilitiesValid: %@
    accountsMatchForSecondaryCalling: %@
    accountsSupportSecondaryCalling: %@
    supportsRelayCalling: %@
    areRelayCallingFeaturesEnabled: %@
    isRelayCallingEnabled: %@
    relayCallingAvailability: %d
    relayCallingDisabledForDeviceID: %@
    supportsTelephonyRelayCalling: %@
    supportsFaceTimeAudioRelayCalling: %@
    supportsFaceTimeVideoRelayCalling: %@
Devices:
    cloudCallingDevices: %@
Emergency callback:
    emergencyCallbackModeEnabled: %@
    emergencyCallbackPossible: %@
Sender Identity capabilities:
    senderIdentityCapabilitiesStateByUUID: %@
supportsPrimaryCalling
supportsBasebandCalling
supportsCellularData
supportsDisplayingTelephonyCalls
supportsDisplayingFaceTimeAudioCalls
supportsDisplayingFaceTimeVideoCalls
faceTimeAudioAvailable
faceTimeVideoAvailable
ctCapabilitiesValid
supportsRelayCalling
accountsMatchForSecondaryCalling
accountsSupportSecondaryCalling
relayCallingFeaturesEnabled
relayCallingEnabled
relayCallingAvailability
relayCallingDisabledForDeviceID
supportsTelephonyRelayCalling
supportsFaceTimeAudioRelayCalling
supportsFaceTimeVideoRelayCalling
outgoingRelayCallerID
cloudCallingDevices
emergencyCallbackModeEnabled
emergencyCallbackPossible
TUCallGroup.m
calls.count > 0
call != nil
Could not determine display name for TUCallGroup with an empty list of calls: %@
TUCallProviderManagerProvidersChangedNotification
com.apple.coretelephony
com.apple.telephonyutilities.callprovidermanager
<%@ %p providers=%@>
com.apple.telephonyutilities.callservicesd.TinCan
Cannot launch app for invalid dial request: %@
TUUserNotificationMissedCallHandleKey
MissedCallDestinationKey
MissedCallServiceKey
TUUserNotificationMissedCallUUIDkey
TUUserNotificationConversationUUIDKey
TUUserNotificationConversationRemoteMembersKey
TUUserNotificationConversationIdentifierKey
TUUserNotificationConversationGroupIdentifierKey
TUUserNotificationActivitySessionIdentifierKey
TUUserNotificationConversationPendingMemberKey
TUUserNotificationConversationLinkKey
TUUserNotificationPendingMemberNotificationTypeKey
TUUserNotificationSharePlayBundleIDKey
TUUserNotificationSharePlayCallbackURLKey
TUUserNotificationActivitySessionGetAppKey
TUUserNotificationConversationHandoffDynamicIdentifierKey
com.apple.telephonyutilities.TUMetadataCacheDidFinishUpdatingNotification
: <empty>
IDSCopyIDForTemporaryID
IDSCopyIDForPseudonymID
IDSCopyIDForPhoneNumber
IDSCopyIDForEmailAddress
-[TUParticipant initWithName:]
CGRectEqualToRect
CoreGraphics
deferredNotificationBlocks was not nil! This means that somehow calls to deferNotificationsUntilAfterPerformingBlock have been nested
TUCallNotificationManager.m
 unsafeDataHash=%tu
 encryptedDataHash=%tu
v32@?0@8Q16^B24
B32@?0@8Q16^B24
groupactivityimgpreview
 context=%@
 fallbackURL=%@
 invitationURL=%@
 supportsContinuationOnTV=%d
 title=%@
 subTitle=%@
 preferredBroadcastingAttributes=%ld
 imageFileURL=%@
 imageData=%@
 sceneAssociationBehavior=%@
com.apple.telephonyutilities.TUReplyWithMessageBulletinBoardMessage
Recipient
Destination
PersonID
Message
com.apple.telephonyutilities.TURemindMeLaterBulletinBoardMessage
Caller
IsWhenILeave
ReminderIdentifier
CallBackString
WhenILeaveString
LocationText
BBDataProviderSendMessage
BulletinBoard
com.apple.MobileSMS
com.apple.reminders
com.apple.telephonyutilities.metadatacache.mapsQueue
allowContactsOnly
silenceUnknownFaceTimeCallers
maxJunkLevel
TUConversationManagerMessagesErrorDomain
com.apple.telephonyutilities.conversationmanager
TUConversationManager.m
requestScreenShareFromMembers is deprecated and should not be used
ignore
allow
gft-legacy-upgrade-enabled
qr-max-participants
DeviceClassNumber
ChipID
No messages group details provider available
AVCScreenCapture
<%@ %p name=%@ modelIdentifier=%@ uniqueID=%@ linkedUserURIs=%@ isDefaultPairedDevice=%d supportsRestrictingSecondaryCalling=%d>
modelIdentifier
uniqueID
linkedUserURIs
defaultPairedDevice
supportsRestrictingSecondaryCalling
com.apple.TelephonyUtilities.TUPrivacyManager.RulesChanged
CMFItemCopyPhoneNumber for item with type CMFItemTypePhone returned nothing!
TUPrivacyManager.m
CMFItemCopyEmailAddress for item with type CMFItemTypeEmail returned nothing!
CMFItemCopyBusinessID for item with type CMFItemTypeBusiness returned nothing!
Type
PhoneNumber
Email
BusinessID
com.apple.facetime
com.apple.FaceTime.FTConversationService
com.apple.InCallService
com.apple.NanoPhone
com.apple.TelephonyUtilities.tutool
com.apple.telephonyutilities.callservicesd
com.apple.tincan
com.apple.FTLivePhotoService
com.apple.springboard
com.apple.VideoConference
com.apple.Safari
com.apple.ScreenSharing
com.apple.DeskCam
com.apple.FaceTimeLinkTrampoline
com.apple.CloudKit.ShareBear
com.apple.FaceTime.ScreenSharing
com.apple.facetime.handoff
com.apple.callservicesd
ckAppBundleIDs
B16@?0@"TURoute"8
Digits
CountryCode
TUDynamicCallDisplayContext.m
serialQueue != nil
contactsDataSource != nil
displayContext != nil
%s is not available. Use another initializer instead.
-[TUDynamicCallDisplayContext init]
-[TUDynamicCallDisplayContext initWithCoder:]
VOICEMAIL
v16@?0@"MKMapItem"8
v24@?0@"CXCallDirectoryIdentificationEntry"8@"NSError"16
 personNameComponents=%@
 suggestedName=%@
 label=%@
 mapName=%@
 location=%@
 contactName=%@
 callDirectoryLabel=%@
 callDirectoryLocalizedExtensionContainingAppName=%@
 callDirectoryExtensionIdentifier=%@
new-voicemail
new-voicemail-no-caller-id
new-voicemail-no-visual-voicemail
ShowDialAssist
TestEmergencyNumber
 applicationContext=%@
 share=%@
 staticActivity=%d
CKShare
Class getCKShareClass(void)_block_invoke
TUConversationActivityCreateSessionRequest.m
void *CloudKitLibrary(void)
 targetContentIdentifier=%@
 shouldAssociateScene=%d
B24@?0@"NSNumber"8^B16
 bundleID=%@
 serviceName=%@
 pseudonymFeatureID=%@
 supportsConversationHandoff=%d
 supportsLinks=%d
 wantsLeaveOnInvalidation=%d
backgroundBlurEnabled
userPreferredCamera
AVConferencePreview
AVCaptureDeviceWasConnectedNotification
AVCaptureDeviceWasDisconnectedNotification
AVCaptureDevice
AVCaptureDeviceTypeBuiltInWideAngleCamera
AVCaptureDeviceTypeBuiltInTripleCamera
AVCaptureDeviceTypeBuiltInDualWideCamera
AVCaptureDeviceTypeBuiltInDualCamera
AVCaptureDeviceTypeDeskViewCamera
disabled
AVTAnimoji
AvatarKit
access-call-providers
split-session-approval
access-collaboration
modify-pending-collaboration
 timebase=%@
 conversationID=%@
 establishChannelMaxAttempts=%lu
 establishChannelRetryIntervalMillis=%lu
 egressMessagePayloadMaxSizeBytes=%lu
 channelStreamMaxQueueSize=%lu
 channelStreamMaxTries=%lu
 channelStreamRetryIntervalMillis=%lu
CONTACTS
FOUND_IN_APPS
-[TUSenderIdentity initWithUUID:accountUUID:ISOCountryCode:localizedName:localizedShortName:localizedServiceName:handle:]
UUID
accountUUID
ISOCountryCode
localizedName
localizedShortName
localizedServiceName
 type=%ld
 queueItemType=%d
 url=%@
TUCallProvider.m
-[TUCallProvider init]
 identifier=%@
 bundleURL=%@
 sandboxExtendedRingtoneSoundURL=%@
 originalRingtoneSoundURL=%@
 iconTemplateImageData=%p
 maximumCallGroups=%lu
 maximumCallsPerCallGroup=%lu
 supportsAudioOnly=%d
 supportsAudioAndVideo=%d
 supportsEmergency=%d
 supportsVoicemail=%d
 supportsRecents=%d
 supportsCurrentPlatform=%d
 supportsRinging=%d
 audioSessionID=%u
 sandboxExtensionHandle=%lld
 supportedHandleTypes=%@
 emergencyHandles=%@
 emergencyLabeledHandles=%@
 handoffIdentifiers=%@
 prioritizedSenderIdentities=%@
com.apple.Superbox
disconnectedReason
shouldSuppressRingtone
wantsHoldMusic
isEndpointOnCurrentDevice
transitionStatus
videoPaused
mediaStalled
videoDegraded
AVCRemoteVideoClient
handle
isoCountryCode
callerNameFromNetwork
callStatus
hostedOnCurrentDevice
provider
outgoing
voicemail
isVideo
thirdPartyVideo
isSendingAudio
isSendingVideo
blocked
emergency
failureExpected
international
supportsEmergencyFallback
usingBaseband
ttyType
supportsTTYWithVoice
bluetoothAudioFormat
mixesVoiceWithMedia
audioCategory
audioMode
needsManualInCallSounds
endedReasonUserInfo
endedReasonString
endedErrorString
uplinkMuted
downlinkMuted
callRelaySupport
videoStreamToken
callGroupUUID
providerContext
displayContext
remoteParticipantHandles
remoteUplinkMuted
localSenderIdentityUUID
localSenderIdentityAccountUUID
shouldSuppressInCallUI
mutuallyExclusiveCall
wantsStagingArea
inputAudioPowerSpectrumToken
outputAudioPowerSpectrumToken
originatingUIType
sharingScreen
conversation
screenShareAttributes
CGSizeZero
-[TUHandle initWithType:value:]
value
TUHandle.m
-[TUHandle init]
Generic
EmailAddress
Unknown(%ld)
INPersonHandle
com.apple.telephonyutilities.conversationprovidermanagerxpcclient
CSDConversationProviderManagerClientsShouldConnectNotification
com.apple.telephonyutilities.callservicesdaemon.conversationprovidermanager
INStartAudioCallIntent
INStartVideoCallIntent
INStartCallIntent
TUDialRequestValidityErrorDomain
tincan
contactIdentifier
dialer
emergencyDialerLockscreen
sideButtonPresses
volumeLockHold
sideButtonHold
fallDetection
fallDetectionUserResponsive
phoneRecents
phoneFavorites
facetimeRecents
facetimeLink
contactCard
messagesContactCard
messagesAvatarBar
messagesBubble
facetimeOngoing
facetimeMissedCallNotification
facetimeGFTNotification
facetimeSpotlight
facetimeCreateCall
crashDetection
crashDetectionUserResponsive
siri
providerIdentifier
performDialAssist
performLocalDialAssist
dialAssisted
handleType
emailAddress
generic
phoneNumber
redial
providerCustomIdentifier
endpointIDSDestinationURI
endpointRapportMediaSystemIdentifier
endpointRapportEffectiveIdentifier
successNotification
failureNotification
unknown
none
direct
TUDialRequest.m
_INCallAudioRouteHeySiriAudioRoute
-[TUDialRequest init]
 dialType=%@
 contactIdentifier=%@
 providerCustomIdentifier=%@
 localSenderIdentityUUID=%@
 localSenderIdentityAccountUUID=%@
 video=%d
 performDialAssist=%d
 performLocalDialAssist=%d
 dialAssisted=%d
 ttyType=%@
 hostOnCurrentDevice=%d
 endpointOnCurrentDevice=%d
 endpointIDSDestinationURI=%@
 originatingUI=%ld
 sos=%d
 valid=%d
 redial=%d
 validityErrors=%@
Normal
Emergency
<Unknown value: %ld>
B24@?0@"NSString"8@"TUSenderIdentity"16
@"TUCallProviderManager"8@?0
@"NSString"20@?0@"CNContactStore"8i16
%@@%@
No provider specified
handle is non-nil (%@) and dialType is Voicemail
dialType (%lu) is not Normal but service (%d) is not Telephony
service (%d) is not relayable but endpointOnCurrentDevice is set
handle (%@) for emergency call dial request is not an emergency number (isEmergencyOrWhitelistedSOSNumber=%d isTelephonyApprovedEmergencyHandle=%d originatingUIType=%ld)
Requested video for a provider which doesn't support it
destinationID and contactIdentifier are both nil/empty and dialType is Normal
Provider does not support the specified handle type
Requested SOS for non emergency dialType
dialType
audioSourceIdentifier
video
uniqueProxyIdentifier
hostOnCurrentDevice
endpointOnCurrentDevice
localLandscapeAspectRatio
localPortraitAspectRatio
processHandle
 device=%@
 handoffContext=%@
    supportsSimultaneousVoiceAndData: %@
CT Capabilities State:
    csCallingCapabilitiesState: %@
    voLTECallingCapabilitiesState: %@
    wiFiCallingCapabilitiesState: %@
    thumperCallingCapabilitiesState: %@
TUCallDisplayContextChangedNotification
TUCallFaceTimeIDStatusChangedNotification
TUCallHardPauseDigitsStateChangedNotification
TUCallShouldSuppressRingingChangedNotification
TUCallIsUsingBasebandChangedNotification
TUCallPrefersExclusiveAccessToCellularNetworkChangedNotification
TUCallIsOnHoldChangedNotification
TUCallIsUplinkMutedChangedNotification
TUCallIsSendingVideoChangedNotification
TUCallTranscriptionStringChangedNotification
TUCallModelChangedNotification
TUCallActiveRemoteParticipantChangedNotification
TUCallImageURLChangedNotification
TUCallIsSendingAudioChangedNotification
TUCallIsSharingScreenChangedNotification
TUCallIsThirdPartyVideoChangedNotification
TUCallNeedsManualInCallSoundsChangedNotification
TUCallAudioPropertiesChangedNotification
TUCallTTYTypeChangedNotification
TUCallBluetoothAudioFormatChangedNotification
TUCallSupportsTTYWithVoiceChangedNotification
TUCallRemoteAspectRatioChangedNotification
TUCallRemoteVideoContentRectChangedNotification
TUCallCameraTypeChangedNotification
TUCallRemoteCameraOrientationChangedNotification
TUCallRemoteScreenOrientationChangedNotification
TUCallRemoteScreenAspectRatioChangedNotification
TUCallRemoteUplinkMutedChangedNotification
TUCallLocalSenderIdentityAccountUUIDChangedNotification
TUCallProviderContextChangedNotification
TUCallRemoteParticipantHandlesChangedNotification
TUVideoMirroredChangedNotification
TUCallVideoStreamTokenChangedNotification
TUCallConversationChangedNotification
TUCallMixesVoiceWithMediaChangedNotification
TUCallServiceStatusChangedNotification
TUCallTransmissionModeChangedNotification
TUCallTransmissionStateChangedNotification
TUCallRemoteUnavailableTitle
TUCallRemoteUnavailableMessage
TUCallRemoteUnavailableAlternateButton
TUCallRemoteUnavailableAlternateButtonURL
TUCallRemoteUnavailableOtherButton
TUCallRemoteUnavailableOtherButtonURL
TUCallUserActivityDestinationIDKey
TUCallUserActivityHandleKey
TUCallUserActivityProviderIdentifierKey
TUCallUserActivityHandoffContextKey
TUCallFaceTimeTransportTypeKey
TUCallFaceTimeRemoteIDSDestinationKey
TUCallFaceTimeRemoteMomentsAvailableKey
TUCallFaceTimeLocalizedHandoffRecipientDeviceCategoryKey
TUCallFaceTimeHandoffRecipientParticipantKey
@"<TUContactsDataSource>"8@?0
 p=%@
 svc=%@
 hdl=%@
 isoCC=%@
 stat=%@
 tStat=%d
 dR=%d
 fR=%d
 supportsR=%d
 uPI=%@
 grp=%@
 lSIUUID=%@
 lSIAccountUUID=%@
 hosted=%d
 endpt=%d
 callerNFN=%@
 srcID=%@
 aC=%@
 aM=%@
 iUB=%d
 vm=%d
 connStat=%d%d
 nMICS=%d
 sR=%ld
 iSA=%d
 iSV=%d
 iSS=%d
 wHM=%d
 hSI=%d
 vST=%ld
 iapST=%ld
 oapST=%ld
 vCA=%@
 model=%@
 em=%d
 iFE=%d
 sSR=%d
 sSUI=%d
 mX=%d
 iUM=%d
 iDM=%d
 tty=%ld
 ttyWV=%d
 convo=%d
 rUM=%d
 ver=%ld
 pri=%ld
 oUI=%ld
 jConf=%ld
 iCat=%ld
 iKC=%d
 JFL=%d
 btAF=%ld
 mVM=%d
 sEF=%d
 pCtx=%@
%02d:%02d:%02d
%02d:%02d
FACETIME_REMINDER
TELEPHONY_REMINDER
FACETIME_AUDIO_REMINDER
%@%@%@
_TO_NUMBER_%@
_TO_CONTACT_%@
_CARRIER
_RELAY
_FTA
DIAL_CALL
DIAL_CALL_FACETIME
FACETIME_AUDIO_SERVICE
FACETIME_SERVICE
IN_CALL_OUTGOING_RELAY
IN_CALL_INCOMING_RELAY
ALERT_RELAY_FAILED_CONFERENCE_FAILED_TITLE
ALERT_RELAY_FAILED_RELAY_DEVICE_UNAVAILABLE_TITLE
ALERT_HOST_DEVICE_BUSY_TITLE
ALERT_CLIENT_DEVICE_BUSY_TITLE
ALERT_GENERIC_FAILURE_TITLE
ALERT_RELAY_FAILED_NO_REMOTE_NETWORK_TITLE
ALERT_KICKED_OUT_TITLE
ALERT_REJECTED_TITLE
ALERT_LINKS_DISABLED_TITLE
NO_DESTINATIONS_AVAILABLE_TITLE_%@
ALERT_OFFRAMPED_TITLE
ALERT_RELAY_FAILED_RELAY_DEVICE_UNAVAILABLE_ACCOUNTS_MESSAGE
ALERT_RELAY_FAILED_RELAY_DEVICE_UNAVAILABLE_ENABLE_MESSAGE
ALERT_HOST_DEVICE_BUSY_MESSAGE
ALERT_CLIENT_DEVICE_BUSY_MESSAGE
FTNetworkSupport
ALERT_THUMPER_FAILED_CALLING_NOT_AVAILABLE_MESSAGE
ALERT_THUMPER_FAILED_NO_NETWORK_MESSAGE
ALERT_RELAY_FAILED_NO_REMOTE_NETWORK_MESSAGE
ALERT_KICKED_OUT_MESSAGE
ALERT_REJECTED_MESSAGE
ALERT_INVALID_LINK_MESSAGE
ALERT_LINKS_DISABLED_MESSAGE
NO_DESTINATIONS_AVAILABLE_MESSAGE_%@
ALERT_OFFRAMPED_MESSAGE
sourceIdentifier
filteredOutReason
supportsRecents
faceTimeIDStatus
dateCreated
dateAnsweredOrDialed
dateSentInvitation
dateStartedConnecting
dateConnected
dateEnded
wasDialAssisted
hardPauseDigitsState
hardPauseDigits
wasPulledToCurrentDevice
soundRegion
model
videoCallAttributes
verificationStatus
priority
junkConfidence
identificationCategory
isKnownCaller
joinedFromLink
hostCreationTime
hostMessageSendTime
clientMessageReceiveTime
CGRectZero
vouching-enabled
ForceVoucherVerificationFailures
com.apple.telephonyutilities.autocompletesearchmodule
CNAutocompleteFetchRequest
ContactsAutocomplete
CNAutocompleteFetchContext
CNAutocompleteStore
IMPreferredAccountForService
IMCore
IMService
com.apple.telephonyutilities.callhistorycontrollerxpcclient
CSDCallHistoryControllerClientsShouldConnectNotification
com.apple.telephonyutilities.callservicesdaemon.callhistorycontroller
TUCallHistoryControllerXPCClient.m
com.apple.telephonyutilities.callhistorymanagerxpcclient
com.apple.telephonyutilities.callservicesdaemon.callhistorymanager
TUContactsDataProviderFetchRequest.m
-[TUContactsDataProviderFetchRequest init]
handles != nil
handle != nil
 cI=%@
 uNCC=%d
 iEM=%d
 iBL=%d
 c=%d
 v=%d
 i=%d
 isoCN=%@
 hdls=%@
 pnpH=%@
 aKTF=%@
wantsCallDisconnectionOnInvalidation
wantsCallStopStreamingOnInvalidation
wantsFrequencyChangeNotifications
wantsCallNotificationsDisabledWhileSuspended
 wantsCallDisconnectionOnInvalidation: %d
 wantsFrequencyChangeNotifications: %d
 wantsCallStopStreamingOnInvalidation: %d
 wantsCallNotificationsDisabledWhileSuspended: %d
com.apple.telephonyutilities.momentscontrollerxpcclient
com.apple.telephonyutilities.callservicesdaemon.momentscontroller
 fromBlockList=%d
 allowCallForDestinationID=%d
v16@?0B8B12
v16@?0C8C12
TUCallCenterCallStatusChangedInternalNotification
TUCallCenterCallStatusChangedNotification
TUCallCenterVideoCallStatusChangedNotification
TUCallCenterCallWantsHoldMusicChangedNotification
TUCallCenterCallInvitationSentNotification
TUCallCenterVideoCallInvitationSentNotification
TUCallCenterModelStateChangedNotification
TUCallCenterCallerIDChangedNotification
TUCallCenterIsEmergencyChangedNotification
TUCallCenterIsFailureExpectedChangedNotification
TUCallCenterSupportsEmergencyFallbackChangedNotification
TUCallCenterRestartNotification
TUCallCenterControlFailureNotification
TUCallCenterCallStartedConnectingNotification
TUCallCenterCallConnectedNotification
TUCallCenterVideoCallMediaPropertiesChangedNotification
TUCallCenterVideoCallCameraOrientationKey
TUCallCenterVideoCallCameraAspectRatioKey
TUCallCenterVideoCallPauseChangedNotification
TUCallCenterVideoCallVideoQualityChangedNotification
TUCallCenterVideoCallMediaStalledChangedNotification
TUCallCenterCallContinuityStateChangedNotification
TUCallCenterConferenceParticipantsChangedNotification
TUCallCenterResetCallStateNotification
TUCallCenterCallControlErrorCode
TUCallSourceIdentifierKey
TUCallSourceIdentifierSpeakerRoute
TUCallSourceIdentifierMikeyRoute
TUCallSourceIdentifierCarPlay
TUCallSourceIdentifierHeySiri
TUCallCenterInCallServiceDialRequestFailureNotification
TUCallCenterInCallServiceDidAppearNotification
TUCallCenterInCallServiceLocalVideoDidAppearNotification
TUCallCenterPendingMemberAddedNotification
TUCallCenterHaveBeenLetInNotification
TUCallCenterDidStartCaptioningNotification
TUCallCenterDidStopCaptioningNotification
TUCallDowngradedToAudioNotification
TUCallUpgradedToVideoNotification
TUCallScreenShareAttributesChangedNotification
com.apple.InCallService.suppressincallstatusbar
com.apple.InCallService.allowringingcallstatusindicator
TUSplitSessionErrorDomain
TUCallCenter.m
-[TUCallCenter init]
B16@?0@"TUJoinConversationRequest"8
Call services interface: %@
Audio device controller: %@
Provider manager: %@
MRNowPlayingRequest
MediaRemote
MROrigin
v24@?0@"MRPlayerPath"8@"NSError"16
v24@?0@"TUConversation"8^B16
announceCalls
conversationLinkBaseURL
simulateFatalPersistentStoreError
simulateInternationalCall
TUConfigurationAnnounceCallsNever
TUConfigurationAnnounceCallsAlways
TUConfigurationAnnounceCallsHandsFree
TUConfigurationAnnounceCallsHeadphonesOnly
file-read-data
INPersonHandleLabel _INPersonHandleLabelForCNLabeledValue(CNLabeledValue *__strong)
TUIntentController.m
INPersonHandleLabelForCNLabeledValue
void *IntentsLibrary(void)
Class getINPersonClass(void)_block_invoke
Class getINStartCallIntentClass(void)_block_invoke
Class getINPersonHandleClass(void)_block_invoke
 state=%lu
 endpoint=%@
 audioSessionID=%@
 isLocallyInitiated=%d
 isLightweightPrimaryInitiated=%d
 isFirstJoin=%d
 isPermittedToJoin=%d
 isUsingAirplay=%d
 distributionCount=%ld
 persistentSceneIdentifier=%@
 applicationState=%lu
v24@?0B8B12@"NSError"16
LSApplicationRecord
v32@?0@"NSNumber"8@"NSString"16^B24
%@: %@ - %@ - %@ - %@
deviceModel
identifiers
capabilities
Effective identifier
Media route identifier
%@ %@
 remoteIDSDestinations=%@
 requesterID=%@
com.apple.telephonyutilities.conversationmanagerxpcclient
CSDConversationManagerClientsShouldConnectNotification
com.apple.telephonyutilities.callservicesdaemon.conversationmanager
@O^m|
!#%')+-
#*18?FM
"',16;@EJOTY^chm
UUUUUU
A>58;
pp>pppppppppQWp]
ppppc
oooooooooV\bvoooo
softlink:o:path:/System/Library/PrivateFrameworks/PhoneNumberResolver.framework/PhoneNumberResolver
softlink:r:path:/System/Library/PrivateFrameworks/CallHistory.framework/CallHistory
softlink:o:path:/System/Library/PrivateFrameworks/IMCore.framework/IMCore
softlink:r:path:/System/Library/PrivateFrameworks/MediaExperience.framework/MediaExperience
softlink:r:path:/System/Library/PrivateFrameworks/AudioSession.framework/AudioSession
softlink:r:path:/System/Library/Frameworks/QuartzCore.framework/QuartzCore
softlink:r:path:/System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
softlink:r:path:/System/Library/PrivateFrameworks/MediaExperience.framework/MediaExperience
softlink:r:path:/System/Library/PrivateFrameworks/TCC.framework/TCC
softlink:r:path:/System/Library/PrivateFrameworks/NanoPreferencesSync.framework/NanoPreferencesSync
softlink:r:path:/System/Library/Frameworks/CloudKit.framework/CloudKit
softlink:r:path:/System/Library/PrivateFrameworks/CallHistory.framework/CallHistory
softlink:o:path:/System/Library/Frameworks/Intents.framework/Intents
TUConversation
TURouteController
TUMomentsCapabilities
NSSecureCoding
NSCoding
TUHardwareControlsBroadcaster
TUConversationLinkDescriptorXPCClient
NSObject
TUConversationLinkDescriptorXPCServer
TUConversationLinkDescriptorXPCClientDataSource
TUConversationLinkDescriptorDataSource
TUConversationLinkKeyValueDataSource
TUSuggestionsMetadataCacheDataProvider
TUConversationActivity
NSCopying
QueryParameters
QueryParameterSupport
TelephonyUtilities
TUCallDirectoryMetadataCacheDataProvider
TUStringShareItem
TURecentsResults
TUGeoLocationMetadataCacheDataProvider
TUAudioController
Internal
TUSenderIdentityCapabilities
TUCTCapabilityInfo
FaceTime
FaceTime_PhoneNumber
TUCTCapabilitiesState
TUPubliclyAccessibleCopying
TUSecureCoding
CallHistoryAdditions
TUConversationLinkDescriptor
TUMutableConversationLinkDescriptor
TUManagedConversationLinkDescriptor
TUNearbyDeviceHandleCapabilities
TUDispatcher
TUVideoDeviceController
TUVideoDeviceControllerProviderDelegate
AVConferencePreviewClientDelegate
FTCallHistorySearchModuleAdditions
TUCallHistorySearchModule
TUSearchModuleProtocol
TUAdditions
TUUserNotificationsProviderXPCServer
TUUserNotificationProviderXPCClient
TUUserNotificationProviderDataSource
TUConversationActivityContext
TUDTMFSoundPlayer
TUNeighborhoodHandoffContext
TUDialAssist
TUOptionalObject
TUConversationInvitationPreference
TUVideoEffect
TULinkShareItem
TUConversationLinkOriginator
TURepeatingActor
TURepeatingAction
TUDiscoverabilitySignal
TUCallHistoryController
TUCallProviderManagerDelegate
TUSearchUtilities
TUClientIDSUtilities
TUCallCapabilities
TUSenderIdentityClient
TUMomentsController
TUMomentsControllerDataSourceDelegate
TUSoundPlayer
TUContactsDataProviderAppleCareHandles
TUAudioDeviceController
TUAudioDeviceControllerActions
TUAudioDeviceControllerXPCServer
TUConversationNotice
TUConversationNoticeProtocol
TUConversationParticipant
TUMutableConversationParticipant
TUVideoCallAttributes
TUProxyRecentCall
TUSearchResult
TUSearchResultData
TUIDSLookup
TURoute
NSMutableCopying
TUMutableRoute
TUConversationProviderManager
TUProxyAutocompleteResult
TUConversationVirtualParticipant
TUMutableConversation
TUConversationHandoffEligibility
TUCallContainer
TUMutableCallContainer
TUCallScreenShareAttributes
TUScreenShareAttributes
TUNeighborhoodActivityConduit
TUNeighborhoodActivityConduitXPCClientDelegate
TUAudioSystemController
TUCallCapabilitiesXPCClient
TUCallCapabilitiesXPCServer
TUCallCapabilitiesXPCServerActions
TUConversationMember
TUNotifyObserver
TUContactsDataProviderResult
TUContactsDataProvider
TUContactsDataSource
TUSearchResultsAdditions
TUJoinConversationRequest
TUFilteredRequest
TUTTYCoreTelephonyClient
TUCoreTelephonyClient
TUDelegateController
TUMomentDescriptor
TUAnswerRequest
TUCallRequest
TUVideoRequest
TUMetadataClientController
TUGroupTitle
TURemoteVideoClient
TUAudioRoute
TUCallProviderManagerXPCClient
TUCallProviderManagerXPCServer
TUCallProviderManagerDataSource
TUCallDisplayContext
TUMutableCallDisplayContext
TUCallFilterController
TUMetadataCacheDataProvider
TUFeatureFlags
TUConversationProvider
TUConversationLink
TUCallModel
TURTCCallReporter
TULogging
TUConversationMediaController
TUConversationMediaControllerDataSourceDelegate
TUConversationActivitySessionContainer
TULabeledHandle
Telephony
TUConversationMemberAssociation
TUSearchResults
TUResultGroup
TUContactProvider
TUReplyWithMessageStore
TUAdhocResult
TUConversationVirtualParticipantConfig
TUConversationParticipantPresentationContext
TUConfigurationDelegate
TUDelegate
TUUserConfiguration
TUCallServicesInterface
TUCallServicesXPCClient
TUCallCenterXPCClient
TURouteControllerXPCClient
TUCallServicesProxyCallActions
TUCallServicesClientCapabilitiesActions
TUCallServicesClientCapabilitiesXPCServer
TURouteControllerActions
TUCallFilterControllerActions
TUMetadataItem
TUMetadataDestinationID
TUConversationParticipantCapabilities
TUMutableConversationParticipantCapabilities
TUIDSLookupManager
TUIDSIDQueryController
TUIDSBatchIDQueryController
IDSBatchIDQueryControllerDelegate
TUSearchController
TUReportingControllerXPCServer
TUReportingControllerXPCClient
TUReportingControllerDataSource
TUNeighborhoodActivityConduitXPCClient
TUNeighborhoodActivityConduitXPCServer
TUConversationParticipantAssociation
TUAudioRouteCollectionKey
TUAudioFrequencyController
AVCAudioPowerSpectrumMeterDelegate
TUCallSoundPlayer
TUCallSoundPlayerDescriptor
TUSandboxExtendedURL
TUCallCapabilitiesState
TUCallGroup
TUBargeCall
TUCallProviderManager
TUCallProviderManagerDataSourceDelegate
TUMetadataCache
TUMetadataCacheDataProviderDelegate
TUParticipant
TUMutableParticipant
TUSanitizedCopying
TUCallNotificationManager
TUVoucher
TelephonyUtilitiesAdditions
TUConversationActivityMetadata
TUTelephonySubscription
TUMapsMetadataCacheDataProvider
TUHandle
TUHandleContactProvider
TUConversationManager
TUConversationManagerDataSourceDelegate
TUCloudCallingDevice
TUPrivacyManager
TUPrivacyRule
Predicate
TUPhoneNumber
TUThumperCTCapabilitiesState
TUDynamicCallDisplayContext
Carrier
TUConversationActivityCreateSessionRequest
TUMutableConversationActivityCreateSessionRequest
TUConversationActivitySceneAssociationBehavior
TUConversationProviderConfiguration
Emergency
TUEmergencyCoreTelephonyClient
TUVideoDeviceControllerProvider
TUVideoEffectsProvider
TUConversationReport
TUSearchModuleManager
TUConversationUnreliableMessengerConfig
TUAutocompleteResultPartitioner
TUSenderIdentity
TUConversationActivityEvent
TUCallProvider
TUProxyCall
AVCRemoteVideoClientDelegate
TUConversationProviderManagerXPCClient
TUConversationProviderManagerXPCServer
TUConversationProviderManagerDataSource
TUDialRequest
TUSplitSessionInfo
TUSenderIdentityCapabilitiesState
TUCall
TUVouchingEnablementImpl
TUVouchingEnablement
TUContactsAutocompleteSearchModule
CNAutocompleteFetchDelegate
TUCallHistoryControllerXPCClient
TUCallHistoryControllerXPCServer
TUCallHistoryControllerDataSource
TUCallHistoryManagerXPCClient
TUCallHistoryManagerXPCServer
TUCallHistoryManagerDataSource
TUContactsDataProviderFetchRequest
TUCallServicesClientCapabilities
TUMomentsControllerXPCClient
TUMomentsSandboxingDataSource
TUMomentsControllerXPCServer
TUMomentsControllerDataSource
TUICFQueryResult
TUICFInterface
TUCallCenter
TUCallHistoryManager
TUConfiguration
TUCallServicesXPCServer
TUCallCenterXPCServer
TURouteControllerXPCServer
TUCallFilterControllerXPCServer
TUCallServicesAdditions
TUIntentController
TUConversationActivitySession
TUMutableConversationActivitySession
TUNearbyDeviceHandle
TULocked
TUMomentsProvider
TUConversationManagerXPCClient
TUConversationMediaControllerXPCClient
TUConversationMessagesGroupProviderXPCClient
TUConversationManagerXPCServer
TUConversationMediaControllerXPCServer
TUConversationMessagesGroupProviderXPCServer
TUConversationManagerDataSource
TUConversationContactProvider
unregisterPowerSpectrumForCellularTapType:error:
appendFormat:
objectForKeyedSubscript:
substringToIndex:
setNumberStyle:
unregisterPowerSpectrumForStreamToken:
initWithCallRecordFilter:callRecordToCallBack:audioRoute:destinationType:preferredCallProvider:contacts:ttyType:callCapability:
appendString:
objectForSlot:
setCountLimit:
objectsPassingTest:
initWithCapacity:
setObject:forKey:
openApplicationWithBundleIdentifier:configuration:completionHandler:
setObject:forKeyedSubscript:
facetimeService
openSensitiveURL:withOptions:error:
descriptorForRequiredKeys
unsignedIntValue
setTransform:
initWithConfig:delegate:queue:
_idiom
descriptorForRequiredKeysForStyle:
openURL:configuration:completionHandler:
unsignedIntegerValue
descriptorForUsedKeys
setOrientation:
unsignedLongLongValue
_im_normalizedURIString
openURL:withOptions:error:
openUserActivity:usingApplicationRecord:configuration:completionHandler:
familyName
_initWithIntent:
initWithContacts:
orPredicateWithSubpredicates:
archivedDataWithRootObject:requiringSecureCoding:error:
orderedSet
callerIdForDisplay
isBackgroundBlurEnabled
orderedSetWithSet:
callerIdSubStringForDisplay
_intents_bundleIdForLaunching
organizationName
isBackgroundBlurSupported
callerNameForDisplay
_internalUserActivity
orientation
fileExistsAtPath:isDirectory:
array
fileSize
arrayByAddingObject:
fileSystemRepresentation
arrayByAddingObjectsFromArray:
fileURLWithPath:
arrayByApplyingSelector:
destinationType
arrayWithArray:
destinationWithURI:
arrayWithCapacity:
filteredArrayUsingPredicate:
setUserInfo:
_isOwnedByCurrentUser
arrayWithObject:
arrayWithObjects:
arrayWithObjects:count:
isRTTSupported
scheduleFetchRequest:
isCenterStageSupported
isRTTSupportedForContext:
camera
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
scheme
localOrigin
firstIdentificationEntriesForEnabledExtensionsWithPhoneNumbers:completionHandler:
firstIdentificationEntryForEnabledExtensionWithPhoneNumber:completionHandler:
_originatingDeviceIDSIdentifier
firstObject
setPhoneticRepresentation:
_originatingDeviceRapportEffectiveIdentifier
outgoingLocalParticipantUUID
query
_originatingDeviceRapportMediaSystemIdentifier
dictionary
setDirection:
formats
user
_phoneOnlyStartWithCompletionHandler:queue:
initWithDestinationType:contacts:
dictionaryWithCapacity:
setPosition:
overrideToPartnerRoute
dictionaryWithDictionary:
setPredicate:
cancel
dictionaryWithObject:forKey:
attributeForKey:
supportsFunCam
dictionaryWithObjects:forKeys:count:
attributesOfItemAtPath:error:
userInfo
queryItemWithName:value:
initWithDomain:code:userInfo:
dictionaryWithSharedKeySet:
userIsSeniorForAccount:
fragment
setPreferredCallProvider:
username
initWithFormat:
validRemoteParticipantHandles
selector
path
sendCommand:options:queue:completion:
raise:format:
sendEvent:
rangeOfString:
captureCapabilities
rangeOfString:options:
caseInsensitiveCompare:
ratio
localizedCaseInsensitiveCompare:
audioRoute
getActiveCategoryVolume:andName:
setEncodedHost:
setQueryItems:
getActiveContexts:
localizedExtensionContainingAppName
initWithIdentifier:bundleID:context:userInfo:
sendMessageWithDictionary:error:
percentEncodedQueryItems
getBytes:length:
didChangeValueForKey:
setRatio:
getCharacters:
channels
setRead:forCallsWithPredicate:completion:
characterAtIndex:
setWithArray:
characterSetWithCharactersInString:
setWithCapacity:
localizedStandardCompare:
initWithIntent:response:
auditToken
valueForCapability:
setWithObject:
localizedStringForKey:value:table:
initWithKeyOptions:valueOptions:capacity:
setExportedInterface:
authorizationStatusForEntityType:
getMessagesGroupDetailsForGroupId:completion:
setWithObjects:
localizedStringForLabel:
initWithKeysToFetch:
setExportedObject:
valueWithRect:
recordDeviceIdentifier
checkResourceIsReachableAndReturnError:
initWithMachServiceName:options:
valueWithSize:
recordDeviceUID
localizedStringWithFormat:
recordId
_setAllowPhoneNumberLookupUsingCellular:
clearDatabase
getUUIDBytes:
_setInteraction:donate:
setFamilyName:
givenName
_setOriginatingDeviceIdsIdentifier:
setFetchContext:
isSubsetOfSet:
sharedAVSystemController
_setOriginatingDeviceRapportEffectiveIdentifier:
initWithName:object:userInfo:
_setOriginatingDeviceRapportMediaSystemIdentifier:
supportsWLAN
setFragment:
lowercaseString
_setPhoneNumbers:
mainBundle
initWithName:value:
isEqualToArray:
setFrontBoardOptions:
mainThread
cnContact
registerContactsChangeObserver:
sharedKeySetForKeys:
mapItems
setGivenName:
availabilityForListenerID:forService:
handleFailureInFunction:file:lineNumber:description:
code
handleFailureInMethod:object:file:lineNumber:description:
registerDefaults:
initWithObjects:
_stripFZIDPrefix
setRemoteObjectInterface:
initWithOrigin:
phoneNumberWithStringValue:
synchronizeUserDefaultsDomain:keys:
synchronousRemoteObjectProxyWithErrorHandler:
phoneNumbers
registerForMutedTalkerNotifications:
commit
serviceForContacts
sharedUtilityProvider
phoneticFamilyName
AVConferencePreviewSingleton
phoneticGivenName
discoverabilitySignal
registerPowerSpectrumForCellularTapType:error:
initWithPersonHandle:nameComponents:displayName:image:contactIdentifier:customIdentifier:
discoverySessionWithDeviceTypes:mediaType:position:
phoneticMiddleName
compare:
registerPowerSpectrumForStreamToken:
copy
backgroundBlurControlMode
compare:options:
serviceProvider
copyCarrierBundleValue:key:bundleType:error:
copyEmergencyModeWithError:
componentsForContact:
mediaType
componentsJoinedByString:
countByEnumeratingWithState:objects:count:
componentsSeparatedByCharactersInSet:
countCallsWithPredicate:
base64EncodedStringWithOptions:
displayContextChanged:
componentsSeparatedByString:
componentsWithString:
setHost:
pickableRoutesForCategory:
thumbnailForAnimojiNamed:options:
componentsWithURL:resolvingAgainstBaseURL:
isTTYSupported
absoluteString
setActiveCategoryVolumeTo:
isTTYSupportedForContext:
isEqualToData:
placemark
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
isEqualToDate:
timeIntervalSince1970
timeIntervalSinceDate:
initWithRequest:
accounts
isEqualToDictionary:
timeIntervalSinceNow
initWithRequiredCapabilities:requiredMissingCapabilities:
shouldShowUserWarningWhenDialingCallOnContext:error:
begin
timeIntervalSinceReferenceDate
hardwareTTYIsSupported
setScheme:
hardwareTTYIsSupportedForContext:
doesNotRecognizeSelector:
hasActiveAudioSession
connection
isEqualToIgnoringCase:
domain
pn_hasInternationalDirectDialingPrefix
setIncludeCalendarServers:
dynamicIdentifier
setIncludeContacts:
weakObjectsHashTable
setAnimoji:
setIncludeDirectoryServers:
contact
weakToStrongObjectsMapTable
setSearchString:
middleName
initWithService:delegate:queue:
isEqualToNumber:
setIncludeLocalContacts:
remoteObjectProxy
whitespaceAndNewlineCharacterSet
setSearchType:
currentHandler
minusSet:
position
triggerMethod
setIncludePredictions:
remoteObjectProxyWithErrorHandler:
wiFiActiveAndReachable
setAssumedIdentity:
initWithSessionInfo:userInfo:frameworksToCheck:
postNotification:
emailAddresses
setIncludeRecents:
hasPrefix:
socialProfiles
postNotificationName:object:
setIncludeSuggestions:
setSendingAddressAccountIdentifier:
currentLocale
setAttribute:forKey:error:
softwareTTYIsSupported
postNotificationName:object:userInfo:
bestSenderIdentityForContact:error:
willChangeValueForKey:
softwareTTYIsSupportedForContext:
bins
sortUsingComparator:
currentPreferredTransportMethod
setInterruptionHandler:
emergencyType
contactIdentifierFromPersonID:
sortedArrayUsingComparator:
currentPreferredTransportMethodForContext:
setInvalidationHandler:
initWithStreamToken:delegate:
isEqualToSet:
encodeBool:forKey:
setAudioSessionProperties:
isEqualToString:
powerLevel
encodeDouble:forKey:
isUserVisible
writeToURL:options:error:
activeFormat
initWithStringValue:
encodeInt32:forKey:
hasSuffix:
initWithStringValue:countryCode:
predicateForCallsWithMediaType:
boolForKey:
encodeInt64:forKey:
initWithSuiteName:
currentThread
encodeInt:forKey:
predicateForCallsWithStatusRead:
contactMatchesByEmailAddress:error:
source
boolValue
encodeInteger:forKey:
predicateForContactsMatchingEmailAddress:
contactMatchesByPhoneNumber:error:
encodeObject:forKey:
predicateForContactsMatchingHandleStrings:
ITUCountryCodeForISOCountryCode:
multiwaySupported
sourceType
encodeRect:forKey:
predicateForContactsMatchingName:
host
mutableCopy
predicateForContactsMatchingPhoneNumber:
encodeSize:forKey:
bounds
bundleForClass:
predicateForContactsMatchingPhoneNumber:prefixHint:
removeAllObjects
predicateForContactsMatchingSocialProfile:
TTYHardwareEnabled
namePrefix
predicateForContactsWithIdentifiers:
TTYHardwareEnabledForContext:
nameSuffix
setBackgroundBlurControlMode:
customIdentifier
predicateWithBlock:
TTYSoftwareEnabled
namesForDetail:limitTo:prependMaybe:onlySignificant:error:
setBackgroundBlurEnabled:
predicateWithFormat:
TTYSoftwareEnabledForContext:
namesForDetail:limitTo:prependMaybe:onlySignificant:withCompletion:
initWithURL:resolvingAgainstBaseURL:
bundleWithIdentifier:
setLaunchId:
removeFromSuperlayer
nationalDirectDialingPrefixForISOCountryCode:
standardUserDefaults
containsObject:
removeItemAtURL:error:
activityType
preferredCallProvider
removeObject:
startConfigurationWithCompletionHandler:
removeObjectForKey:
bytes
removeObjectsInArray:
calendarItemIdentifier
removeObserver:
URLHostAllowedCharacterSet
containsString:
addEntriesFromDictionary:
initWithUUIDBytes:
setLimitingCallKinds:
URLQueryAllowedCharacterSet
containsValueForKey:
removeObserver:forKeyPath:
initWithUUIDString:
dataUsingEncoding:
contentsRect
removeObserver:forKeyPath:context:
neighborhoodActivityConduit:splitSessionEnded:
startWithCompletionHandler:
addListenerID:forService:
dataWithBytes:length:
removeObserver:name:object:
addObject:
setBool:forKey:
neighborhoodActivityConduit:splitSessionStarted:
dataWithContentsOfURL:options:error:
callCapability
URLWithString:
addObjectsFromArray:
dataWithPropertyList:format:options:error:
neighborhoodActivityConduit:tvDeviceAppeared:
setBounds:
UTF8String
neighborhoodActivityConduit:tvDeviceDisappeared:
initWithUrlString:username:userIdentifier:service:
addObserver:forKeyPath:options:context:
date
controlCharacterSet
addObserver:selector:name:object:
UUIDString
primaryAuthKitAccount
replaceObjectAtIndex:withObject:
setByAddingObjectsFromSet:
isFileURL
initWithValue:type:
_appearsToBeEmail
string
initWithValue:type:label:
_appearsToBePhoneNumber
stringByAddingPercentEncodingWithAllowedCharacters:
stringByAppendingFormat:
addSublayer:
stringByAppendingPathComponent:
stringByAppendingString:
address
addressBookRecordId
stringByPaddingToLength:withString:startingAtIndex:
processInfo
isGreenTea
request
stringByRemovingCharactersFromSet:
stringByRemovingPercentEncoding
decodeArrayOfObjectsOfClass:forKey:
decodeBoolForKey:
intValue
stringByReplacingOccurrencesOfString:withString:
indexOfObjectPassingTest:
stringByTrimmingCharactersInSet:
decodeDictionaryWithKeysOfClasses:objectsOfClasses:forKey:
integerForKey:
enumerateKeysAndObjectsUsingBlock:
decodeDoubleForKey:
enumerateObjectsUsingBlock:
integerValue
decodeInt32ForKey:
stringForKey:
setCameraZoomFactor:withRate:
enumerateObjectsWithOptions:usingBlock:
notificationWithName:object:userInfo:
decodeInt64ForKey:
intent
enumeratorAtPath:
keyEnumerator
decodeIntForKey:
allKeys
unarchivedObjectOfClass:fromData:error:
enumeratorForChangeHistoryFetchRequest:error:
allObjects
decodeIntegerForKey:
interaction
nowPlayingPlayerPathOnQueue:completion:
unarchivedObjectOfClasses:fromData:error:
errorWithDomain:code:userInfo:
conversationLinkDescriptorsDidChangeForDataSource:
requiredCapabilities
interfaceWithProtocol:
decodeObjectForKey:
null
decodeObjectOfClass:forKey:
stringFromContact:style:
intersectsSet:
unformattedInternationalStringValue
requiredMissingCapabilities
setClasses:forSelector:argumentIndex:ofReply:
decodeObjectOfClasses:forKey:
allValues
stringFromNumber:
initWithActivityType:
allocWithZone:
decodeRectForKey:
stringGUID
initWithArray:
decodeSizeForKey:
executeFetchRequest:error:
initWithArray:copyItems:
numberWithBool:
stringWithCapacity:
isKeyAvailable:
stringWithCharacters:length:
numberWithDouble:
resolvePhoneNumber:countryCode:error:
numberWithInt:
stringWithFormat:
defaultCenter
setMiddleName:
initWithBase64EncodedString:options:
stringWithString:
andPredicateWithSubpredicates:
numberWithInteger:
unionSet:
resourceSpecifier
initWithBool:
stringWithUTF8String:
numberWithUnsignedInteger:
animojiNames
extensionIdentifier
initWithBundleIdentifier:allowPlaceholder:error:
lastObject
numberWithUnsignedLong:
defaultManager
strongToWeakObjectsMapTable
setMixingVoiceWithMediaEnabled:
numberWithUnsignedLongLong:
isLikePhoneNumber:
_executionContext
setTTYType:
numericValue
initWithBundleType:
subarrayWithRange:
callRecordToCallBack
resume
objectAtIndex:
sublayers
objectAtIndexedSubscript:
setContents:
defaultWorkspace
setNamePrefix:
objectForKey:
setContentsGravity:
setNameSuffix:
providerId
layer
objectForKey:inDomain:
subscriptions
unregisterFromMutedTalkerNotifications
initWithCallProviderManager:
anyObject
substringFromIndex:
invokeWithTarget:
initWithCallRecordFilter:callRecordToCallBack:audioRoute:destinationType:contacts:callCapability:
tu_contactStoreConfigurationForConversation:
init
routesChangedForRouteController:
initWithActionsDelegate:serialQueue:
routes
pickedRoute
receiverRoute
speakerRoute
addDelegate:
removeDelegate:
pickRoute:
pickRouteWithUniqueIdentifier:
pickRouteWhenAvailableWithUniqueIdentifier:
requeryRoutes
routeWithSourceIdentifier:
routesByUniqueIdentifier
handleRoutesByUniqueIdentifierUpdated:
handleServerReconnect
handleServerDisconnect
queue
actionsDelegate
delegates
setRoutesByUniqueIdentifier:
.cxx_destruct
_queue
_actionsDelegate
_delegates
_routesByUniqueIdentifier
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
T@"<TURouteControllerActions>",R,W,N,V_actionsDelegate
T@"NSHashTable",R,N,V_delegates
T@"NSDictionary",C,N,V_routesByUniqueIdentifier
T@"NSArray",R,C,N
T@"TURoute",R,C,N
availability
supportedMediaTypes
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
initWithAvailability:supportedMediaTypes:
description
hash
isEqual:
isEqualToCapabilities:
_availability
_supportedMediaTypes
Ti,R,N,V_availability
T@"NSSet",R,C,N,V_supportedMediaTypes
dealloc
longPressTimerFired:
eventTypeToIgnore
setEventTypeToIgnore:
_hidEventSystemClientRef
_eventTypeToIgnore
T@"NSString",&,V_eventTypeToIgnore
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
conversationLinkDescriptorsDidChange
addConversationLinkDescriptors:reply:
addOrUpdateConversationLinkDescriptors:reply:
conversationLinkDescriptorCountWithPredicate:reply:
conversationLinkDescriptorsWithPredicate:limit:offset:reply:
removeConversationLinkDescriptorsWithPredicate:reply:
setActivated:withRevision:forConversationLinkDescriptorsWithPredicate:reply:
setExpirationDate:withRevision:forConversationLinkDescriptorsWithPredicate:reply:
setInvitedHandles:withRevision:forConversationLinkDescriptorsWithPredicate:reply:
setName:withRevision:forConversationLinkDescriptorsWithPredicate:reply:
setInteger:forKey:reply:
integerForKey:reply:
setString:forKey:reply:
stringForKey:reply:
asynchronousServer
setAsynchronousServer:
synchronousServer
setSynchronousServer:
clientXPCInterface
serverXPCInterface
addConversationLinkDescriptors:error:
addConversationLinkDescriptors:completion:
addOrUpdateConversationLinkDescriptors:error:
addOrUpdateConversationLinkDescriptors:completion:
conversationLinkDescriptorCountWithPredicate:error:
conversationLinkDescriptorCountWithPredicate:completion:
conversationLinkDescriptorsWithPredicate:limit:offset:error:
conversationLinkDescriptorsWithPredicate:limit:offset:completion:
removeConversationLinkDescriptorsWithPredicate:error:
removeConversationLinkDescriptorsWithPredicate:completion:
setActivated:withRevision:forConversationLinkDescriptorsWithPredicate:error:
setActivated:withRevision:forConversationLinkDescriptorsWithPredicate:completion:
setExpirationDate:withRevision:forConversationLinkDescriptorsWithPredicate:error:
setExpirationDate:withRevision:forConversationLinkDescriptorsWithPredicate:completion:
setInvitedHandles:withRevision:forConversationLinkDescriptorsWithPredicate:error:
setInvitedHandles:withRevision:forConversationLinkDescriptorsWithPredicate:completion:
setName:withRevision:forConversationLinkDescriptorsWithPredicate:error:
setName:withRevision:forConversationLinkDescriptorsWithPredicate:completion:
conversationLinkDescriptorDataSourceDelegate
setConversationLinkDescriptorDataSourceDelegate:
T@"<TUConversationLinkDescriptorDataSourceDelegate>",&,N
setInteger:forKey:error:
setInteger:forKey:completion:
integerForKey:completion:
integerForKey:error:
setString:forKey:error:
setString:forKey:completion:
stringForKey:completion:
stringForKey:error:
T@"<TUConversationLinkDescriptorXPCServer>",&,N
T@"NSXPCInterface",R,N
asynchronousServerWithErrorHandler:
synchronousServerWithErrorHandler:
xpcConnection
setXpcConnection:
accessorLock
_accessorLock
_conversationLinkDescriptorDataSourceDelegate
_xpcConnection
T{os_unfair_lock_s=I},R,N,V_accessorLock
T@"NSXPCConnection",&,N,V_xpcConnection
T@"<TUConversationLinkDescriptorDataSourceDelegate>",&,N,V_conversationLinkDescriptorDataSourceDelegate
canUseSiriSuggestions
sharedService
suggestedNamesForDestinationID:onlySignificant:error:
suggestedNamesForDestinationID:onlySignificant:withCompletion:
newestSuggestedContactForDestinationID:
T@"<SGSuggestionsServiceContactsProtocol>",R,N
updateCacheWithDestinationIDs:withGroup:
suggestionsServiceThrottleSemaphore
setSuggestionsServiceThrottleSemaphore:
suggestionsContactsObserver
_suggestionsServiceThrottleSemaphore
_suggestionsContactsObserver
T@"NSObject<OS_dispatch_semaphore>",&,N,V_suggestionsServiceThrottleSemaphore
T@,R,N,V_suggestionsContactsObserver
assumedIdentity
T@"NSObject<OS_tcc_identity>",R,C,N
bundleIdentifier
metadata
applicationContext
UUID
activityIdentifier
isSupported
originator
timestamp
fallbackApplicationName
isSystemActivity
isStaticActivity
trustedFromHandle
startWhenStaged
placeholderActivity
lookupApplicationNameForBundleIdentifier:
copyWithZone:
initWithMetadata:applicationContext:uuid:activityIdentifier:
initWithBundleIdentifier:metadata:applicationContext:uuid:activityIdentifier:
initWithBundleIdentifier:metadata:applicationContext:uuid:activityIdentifier:fallbackApplicationName:
initWithCreationRequest:bundleIdentifier:systemActivity:
isEquivalentToActivity:
isEqualToConversationActivity:
sanitizedCopy
sanitizedCopyWithZone:
representativeBundleIdentifier
isEligibleForHandoff
isEligibleForWebBrowser
isPlaceholderActivity
setBundleIdentifier:
localizedApplicationName
representativeDisplayName
isScreenSharingActivity
concatenatedMetadataDescription
concatenatedDescription
platformScreenSharingBundleIdentifier
activityContext
setActivityContext:
setUUID:
setApplicationContext:
setActivityIdentifier:
setMetadata:
setSupported:
setOriginator:
setSystemActivity:
setTrustedFromHandle:
setTimestamp:
setFallbackApplicationName:
setStaticActivity:
setStartWhenStaged:
_supported
_systemActivity
_staticActivity
_startWhenStaged
_UUID
_applicationContext
_bundleIdentifier
_activityIdentifier
_metadata
_originator
_trustedFromHandle
_timestamp
_fallbackApplicationName
T@"NSString",C,N,V_activityIdentifier
T@"NSUUID",&,N,V_UUID
T@"TUConversationActivityMetadata",&,N,V_metadata
T@"NSData",C,N,V_applicationContext
T@"NSString",C,N,V_bundleIdentifier
supported
TB,N,GisSupported,V_supported
T@"TUHandle",C,N,V_originator
T@"TUHandle",C,N,V_trustedFromHandle
T@"NSDate",C,N,V_timestamp
T@"NSString",C,N,V_fallbackApplicationName
systemActivity
TB,N,GisSystemActivity,V_systemActivity
staticActivity
TB,N,GisStaticActivity,V_staticActivity
TB,N,V_startWhenStaged
T@"NSString",R,C,N
T@"TUConversationActivityContext",R,C,N
eligibleForHandoff
TB,R,N,GisEligibleForHandoff
eligibleForWebBrowser
TB,R,N,GisEligibleForWebBrowser
TB,R,N,GisPlaceholderActivity
queryParameters
tuQueryParameters
URLBySettingQueryParameterValue:forKey:
URLByDeletingQueryParameterWithKey:
asQueryParameterString
tu_labeledValueForEmailAddress:
tu_labeledValueForHandle:
tu_labeledValueForPhoneNumber:
tu_labeledValueForSocialProfileWithUsername:
tuHandlesForPhoneNumbers
tuHandlesForEmailAddresses
allTUHandles
callDirectoryManager
identificationEntriesChangedNotifyToken
countryDialingCode
setCountryDialingCode:
firstIdentificationEntriesForEnabledExtensions
setFirstIdentificationEntriesForEnabledExtensions:
_identificationEntriesChangedNotifyToken
_callDirectoryManager
_countryDialingCode
_firstIdentificationEntriesForEnabledExtensions
T@"CXCallDirectoryManager",R,N,V_callDirectoryManager
Ti,R,N,V_identificationEntriesChangedNotifyToken
T@?,C,N,V_countryDialingCode
T@?,C,N,V_firstIdentificationEntriesForEnabledExtensions
initWithMessage:
message
setMessage:
_message
T@"NSString",C,N,V_message
allSearchItems
locationForMetadataIdentifier:
phoneNumberResolver
_phoneNumberResolver
T@"PNRPhoneNumberResolver",R,N,V_phoneNumberResolver
modifyingStateLock
setModifyingStateLock:
_modifyingStateLock
T@"NSObject<OS_dispatch_semaphore>",&,N,V_modifyingStateLock
_acquireLock
_releaseLock
_requestUpdatedValueWithBlock:object:isRequestingPointer:forceNewRequest:scheduleTimePointer:notificationString:queue:
_requestUpdatedValueWithBlock:object:isRequestingPointer:forceNewRequest:scheduleTimePointer:notificationString:notificationUserInfo:queue:
isRTTAvailableForSenderIdentityUUID:
isRTTSupportedForSenderIdentityUUID:
isTTYAvailableForSenderIdentityUUID:
isTTYEnabledForSenderIdentityUUID:
isTTYSupportedForSenderIdentityUUID:
isTTYHardwareAvailableForSenderIdentityUUID:
isTTYHardwareEnabledForSenderIdentityUUID:
isTTYHardwareSupportedForSenderIdentityUUID:
isTTYSoftwareAvailableForSenderIdentityUUID:
isTTYSoftwareEnabledForSenderIdentityUUID:
isTTYSoftwareSupportedForSenderIdentityUUID:
didChangeWiFiCallingCapabilitiesForSenderIdentityWithUUID:
didChangeVoLTECallingCapabilitiesForSenderIdentityWithUUID:
didChangeThumperCallingCapabilitiesForSenderIdentityWithUUID:
didChangeWiFiCallingProvisionalURLForSenderIdentityWithUUID:
didChangeThumperCallingProvisionalURLForSenderIdentityWithUUID:
initWithSenderIdentityUUID:state:client:
supportsSimultaneousVoiceAndData
canAttemptTelephonyCallsWithoutCellularConnection
canAttemptEmergencyCallsWithoutCellularConnection
isCSCallingCurrentlyAvailable
supportsVoLTECalling
isVoLTECallingEnabled
voLTECallingCapabilityInfo
isVoLTECallingCurrentlyAvailable
supportsWiFiCalling
isWiFiCallingEnabled
supportsWiFiCallingRoaming
isWiFiCallingRoamingEnabled
wiFiCallingCapabilityInfo
isWiFiCallingCurrentlyAvailable
supportsEmergencyWiFiCalling
isEmergencyWiFiCallingCurrentlyAvailable
wiFiCallingProvisioningStatus
wiFiCallingProvisioningURL
isWiFiCallingProvisioningURLInvalid
wiFiCallingProvisioningPostData
supportsThumperCalling
supportsThumperCallingOverCellularData
isThumperCallingAllowedForCurrentDevice
isThumperCallingEnabled
thumperCallingCapabilityInfo
isThumperCallingCurrentlyAvailable
thumperCallingProvisioningStatus
thumperCallingProvisioningURL
isThumperCallingProvisioningURLInvalid
thumperCallingProvisioningPostData
isThumperCallingAllowedOnSecondaryDeviceWithID:
isThumperCallingAllowedOnDefaultPairedSecondaryDevice
setVoLTECallingEnabled:
setWiFiCallingEnabled:
setWiFiCallingRoamingEnabled:
invalidateAndRefreshWiFiCallingProvisioningURL
setThumperCallingEnabled:
invalidateAndRefreshThumperCallingProvisioningURL
setThumperCallingAllowed:onSecondaryDeviceWithID:
setThumperCallingAllowedOnDefaultPairedSecondaryDevice:
requestPinFromPrimaryDeviceForThumperCalling
cancelPinRequestFromPrimaryDeviceForThumperCalling
_sendNotificationsAndCallbacksComparingToOldSenderIdentityCapabilities:
senderIdentityUUID
thumperCallingLocalDeviceID
setThumperCallingLocalDeviceID:
state
client
_senderIdentityUUID
_thumperCallingLocalDeviceID
_state
_client
T@"TUSenderIdentityCapabilitiesState",R,C,N,V_state
T@"TUCallCapabilitiesXPCClient",R,N,V_client
T@"TUCTCapabilityInfo",R,N
T@"NSUUID",R,C,N,V_senderIdentityUUID
TB,R,N
csCallingCurrentlyAvailable
TB,R,N,GisCSCallingCurrentlyAvailable
voLTECallingEnabled
TB,R,N,GisVoLTECallingEnabled
voLTECallingCurrentlyAvailable
TB,R,N,GisVoLTECallingCurrentlyAvailable
wiFiCallingEnabled
TB,R,N,GisWiFiCallingEnabled
wiFiCallingRoamingEnabled
TB,R,N,GisWiFiCallingRoamingEnabled
wiFiCallingCurrentlyAvailable
TB,R,N,GisWiFiCallingCurrentlyAvailable
emergencyWiFiCallingCurrentlyAvailable
TB,R,N,GisEmergencyWiFiCallingCurrentlyAvailable
Ti,R,N
T@"NSURL",R,C,N
wiFiCallingProvisioningURLInvalid
TB,R,N,GisWiFiCallingProvisioningURLInvalid
T@"NSData",R,C,N
thumperCallingAllowedForCurrentDevice
TB,R,N,GisThumperCallingAllowedForCurrentDevice
thumperCallingEnabled
TB,R,N,GisThumperCallingEnabled
thumperCallingCurrentlyAvailable
TB,R,N,GisThumperCallingCurrentlyAvailable
T@"NSString",C,N,V_thumperCallingLocalDeviceID
thumperCallingProvisioningURLInvalid
TB,R,N,GisThumperCallingProvisioningURLInvalid
thumperCallingAllowedOnDefaultPairedSecondaryDevice
TB,R,N,GisThumperCallingAllowedOnDefaultPairedSecondaryDevice
ctCapabilityInfo
T@"TUCTCapabilityInfo",R,C,N
faceTimeDestinationAccount
_isPhoneNumberID:
isFaceTimeURL
isFaceTimePromptURL
isFaceTimeAudioURL
isFaceTimeAudioPromptURL
isFaceTimeMultiwayURL
isSystemCallControlsURL
isFaceTimeAppViewLinkDetailsURL
pseudonymForLinkDetailsView
isFaceTimeOpenLinkURL
conversationLinkURLForOpenLinkURL
isFaceTimeAppJoinConversationLinkURL
conversationLinkURLForJoinConversation
hasNoPromptOption
isDialCallURL
isLaunchForIncomingCallURL
isLaunchForOutgoingConversationURL
isShowInCallUIURL
isShowIncomingTransmissionNoticeURL
isShowCarPlayInCallUIURL
isShowSystemCallControlsURL
isShowHandoffEligibleNearbyURL
isShowScreenSharingURL
isUpdateForegroundAppURL
foregroundAppBundleIdentifier
foregroundAppApplicationType
isFaceTimeNeedsBackgroundLaunchURL
isAnswerRequestURL
answerRequestSourceIdentifier
_faceTimeURLWithDestinationID:addressBookUID:audioOnly:
_faceTimeURLWithHandle:addressBookUID:audioOnly:
faceTimeURLWithDestinationID:
faceTimeURLWithDestinationID:addressBookUID:
faceTimeURLWithDestinationID:addressBookUID:audioOnly:
faceTimeURLWithDestinationID:addressBookUID:forceAssist:suppressAssist:wasAssisted:audioOnly:
faceTimeTelephonyURLWithPhoneNumber:
faceTimeTelephonyURLWithPhoneNumber:showPrompt:
_applyFaceTimeScheme:toFaceTimeURL:
faceTimeURLWithURL:
faceTimePromptURLWithURL:
faceTimeLaunchForIncomingCallURL
faceTimeLaunchForOutgoingConversationURL
faceTimeShowInCallUIURL
faceTimeShowCarPlayInCallUIURL
faceTimeShowSystemCallControlsURL
faceTimeShowHandoffEligibleNearbyURL
faceTimeShowIncomingTransmissionNoticeUIURL
faceTimeUpdateForegroundAppURL
faceTimeAppViewLinkDetailsURL
faceTimeNeedsBackgroundLaunchURL
faceTimeAppJoinConversationLinkURL
faceTimeUpdateForegroundAppURLForBundleIdentifier:applicationType:
faceTimeAnswerURLWithSourceIdentifier:
faceTimeAppViewLinkDetailsURLForPseudonym:
faceTimeAppJoinConversationURLForConversationLinkURL:
screenSharingAppURL
faceTimeURLWithPhoneNumber:addressBookUID:forceAssist:suppressAssist:wasAssisted:
faceTimeURLWithPhoneNumber:addressBookUID:audioOnly:forceAssist:suppressAssist:wasAssisted:
provisioningStatus
provisioningURL
provisioningPostData
isEnabled
isCurrentlyAvailable
isRoamingEnabled
isRoamingSupported
isEmergencySupported
isEmergencyCurrentlyAvailable
unarchivedObjectClasses
unarchivedObjectFromData:error:
publiclyAccessibleCopy
publiclyAccessibleCopyWithZone:
archivedDataWithError:
initWithCapabilityInfo:
isProvisioningURLInvalid
invalidateProvisioningURL
isEqualToCapabilitiesState:
setProvisioningStatus:
setProvisioningURL:
setProvisioningURLInvalid:
setProvisioningPostData:
setEnabled:
setCurrentlyAvailable:
setRoamingSupported:
setRoamingEnabled:
setEmergencySupported:
setEmergencyCurrentlyAvailable:
_provisioningURLInvalid
_enabled
_currentlyAvailable
_roamingSupported
_roamingEnabled
_emergencySupported
_emergencyCurrentlyAvailable
_provisioningStatus
_provisioningURL
_provisioningPostData
Ti,N,V_provisioningStatus
T@"NSURL",C,N,V_provisioningURL
provisioningURLInvalid
TB,N,GisProvisioningURLInvalid,V_provisioningURLInvalid
T@"NSData",C,N,V_provisioningPostData
enabled
TB,N,GisEnabled,V_enabled
currentlyAvailable
TB,N,GisCurrentlyAvailable,V_currentlyAvailable
roamingSupported
TB,N,GisRoamingSupported,V_roamingSupported
roamingEnabled
TB,N,GisRoamingEnabled,V_roamingEnabled
emergencySupported
TB,N,GisEmergencySupported,V_emergencySupported
emergencyCurrentlyAvailable
TB,N,GisEmergencyCurrentlyAvailable,V_emergencyCurrentlyAvailable
metadataDestinationIDsForCHRecentCall:
metadataDestinationIDsForCHRecentCalls:
isActivated
creationDate
expirationDate
groupUUID
invitedHandles
name
privateKey
pseudonym
publicKey
version
linkLifetimeScope
initWithGroupUUID:originator:pseudonym:publicKey:
initWithConversationLinkDescriptor:
mutableCopyWithZone:
isEqualToConversationLinkDescriptor:
setActivated:
setCreationDate:
setExpirationDate:
setLinkLifetimeScope:
setGroupUUID:
setInvitedHandles:
setName:
setPrivateKey:
setPseudonym:
setPublicKey:
setVersion:
_activated
_version
_creationDate
_expirationDate
_linkLifetimeScope
_groupUUID
_invitedHandles
_name
_privateKey
_pseudonym
_publicKey
activated
TB,N,GisActivated,V_activated
T@"NSDate",&,N,V_creationDate
T@"NSDate",&,N,V_expirationDate
T@"NSUUID",&,N,V_groupUUID
T@"NSSet",C,N,V_invitedHandles
T@"NSString",C,N,V_name
T@"TUConversationLinkOriginator",&,N,V_originator
T@"NSData",C,N,V_privateKey
T@"NSString",C,N,V_pseudonym
T@"NSData",C,N,V_publicKey
Ti,N,V_version
Tq,N,V_linkLifetimeScope
TB,D,N,GisActivated
T@"NSDate",&,D,N
T@"NSUUID",&,D,N
T@"NSSet",C,D,N
T@"NSString",C,D,N
T@"TUConversationLinkOriginator",&,D,N
T@"NSData",C,D,N
Ti,D,N
Tq,D,N
tu_predicateForConversationLinkDescriptorsWithActivated:
tu_predicateForConversationLinkDescriptorsWithCreationDate:
tu_predicateForConversationLinkDescriptorsWithExpirationDate:
tu_predicateForConversationLinkDescriptorsWithExpirationDateAfter:
tu_predicateForConversationLinkDescriptorsWithGroupUUID:
tu_predicateForConversationLinkDescriptorsWithInvitedHandle:
tu_predicateForConversationLinkDescriptorsWithInvitedHandleNormalizedValue:
tu_predicateForConversationLinkDescriptorsWithInvitedHandleType:
tu_predicateForConversationLinkDescriptorsWithInvitedHandleValue:
tu_predicateForConversationLinkDescriptorsWithOriginatorHandle:
tu_predicateForConversationLinkDescriptorsWithOriginatorHandleNormalizedValue:
tu_predicateForConversationLinkDescriptorsWithOriginatorHandleType:
tu_predicateForConversationLinkDescriptorsWithOriginatorHandleValue:
tu_predicateForConversationLinkDescriptorsWithPseudonym:
tu_predicateForConversationLinkDescriptorsWithPublicKey:
tu_predicateForConversationLinkDescriptorsWithPrivateKey:
sourceVersion
initWithSourceVersion:
isAVLessCapable
_sourceVersion
T@"NSString",R,C,N,V_sourceVersion
avLessCapable
TB,R,N,GisAVLessCapable
dispatcherWithIdentifier:
dispatcherWithQueue:
dispatchSynchronousBlock:
dispatchAsynchronousBlock:
boostQualityOfService
initWithIdentifier:
initWithQueue:
qosUserInteractiveDispatchBlockForBlock:
dispatchQueue
_dispatchQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_dispatchQueue
prewarm
_videoOrientationForTUOrientation:
_tuOrientationForVideoOrientation:
didStartPreview
didPausePreview
didStopPreview
didReceiveFirstPreviewFrameFromCamera:
didReceiveFirstPreviewFrameFromCameraUniqueID:
didChangeLocalCameraUID:
didChangeLocalVideoAttributes:
didChangeLocalScreenAttributes:
didReceiveErrorFromCameraUniqueID:error:
didReceiveCommError
didGetSnapshot:
cameraDidBecomeAvailableForUniqueID:
cameraDidBecomeInterruptedForForUniqueID:reason:
cameraZoomAvailabilityDidChange:
cameraZoomAvailabilityDidChange:currentZoomFactor:maxZoomFactor:
cameraCinematicFramingAvailabilityDidChange:
didStartPreviewForProvider:
didPausePreviewForProvider:
didStopPreviewForProvider:
captureDevicesChangedForProvider:
provider:cameraDidBecomeAvailableForUniqueID:
provider:didChangeLocalVideoAttributes:
provider:didReceiveErrorFromCameraUniqueID:error:
provider:didReceiveFirstPreviewFrameFromCameraUniqueID:
provider:didChangeLocalCameraUID:
provider:cameraZoomAvailabilityDidChange:
provider:cameraBlurEnabledDidChange:
provider:userPreferredCameraUIDDidChange:
provider:didGetSnapshot:
initWithSerialQueue:
initWithProvider:serialQueue:featureFlags:
currentInputDevice
currentInputSupportsCinematicFraming
setCurrentInputDevice:
setCurrentInputDevice:isUserPreferred:
currentVideoOrientation
setCurrentVideoOrientation:
isFollowSystemCameraEnabled
setFollowSystemCameraEnabled:
hasAvailableDeskViewCameras
inputDevices
isPreviewRunning
localFrontLayer
setLocalFrontLayer:
localBackLayer
setLocalBackLayer:
setCurrentVideoEffect:
currentVideoEffect
availableVideoEffects
startPreview
stopPreview
pausePreview
getSnapshot
supportsCameraBlur
currentBackgroundBlurControlMode
setCurrentBackgroundBlurControlMode:
cameraBlurEnabled
setCameraBlurEnabled:
setCameraZoomFactor:
rampCameraZoomFactor:withRate:
noteBeginAnimationToPreview
flipCamera
noteEndAnimationToPreview
noteBeginAnimationToPIP
noteEndAnimationToPIP
setLocalPortraitAspectRatio:localLandscapeAspectRatio:
localScreenContentsRect
localVideoPortraitAspectRatio
localScreenPortraitAspectRatio
localVideoLandscapeAspectRatio
localScreenLandscapeAspectRatio
portraitScreenAttributes
landscapeScreenAttributes
shouldIgnoreStartPreview
setIgnoreStartPreview:
serialQueue
provider
featureFlags
wantsPreview
setWantsPreview:
hasRefreshedPreviewAfterError
setHasRefreshedPreviewAfterError:
_ignoreStartPreview
_wantsPreview
_hasRefreshedPreviewAfterError
_serialQueue
_provider
_featureFlags
T@"NSObject<OS_dispatch_queue>",R,N,V_serialQueue
T@"<TUVideoDeviceControllerProvider><TUVideoEffectsProvider>",R,N,V_provider
T@"<TUFeatureFlags>",R,N,V_featureFlags
TB,N,V_wantsPreview
TB,N,V_hasRefreshedPreviewAfterError
T@"AVCaptureDevice",&,N
Ti,N
previewRunning
TB,R,N,GisPreviewRunning
TB,N
T@"CALayer",&,N
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
T{CGSize=dd},R,N
T@"TUVideoEffect",&,N
followSystemCameraEnabled
TB,N,GisFollowSystemCameraEnabled
ignoreStartPreview
TB,N,GshouldIgnoreStartPreview,V_ignoreStartPreview
phoneNumberSeparatorCharacterSet
searchForString:completion:
cancelSearch
isSearchComplete
searchResults
searchController
setSearchController:
searchComplete
TB,R,GisSearchComplete
T@"TUSearchResults",R
T@"TUSearchController",W
currentResultsList
setCurrentResultsList:
previousSearchString
setPreviousSearchString:
setSearchComplete:
_searchComplete
_searchController
_currentResultsList
_previousSearchString
T@"NSMutableArray",&,N,V_currentResultsList
T@"NSString",C,N,V_previousSearchString
TB,N,GisSearchComplete,V_searchComplete
T@"TUSearchController",W,V_searchController
personNameComponents
T@"NSPersonNameComponents",R,C,N
momentCapturedForStreamToken:requesterID:reply:
userNotificationProviderServerXPCInterface
T@"<TUUserNotificationsProviderXPCServer>",&,N
serverWithErrorHandler:
typedIdentifier
actionDescription
ongoingDescription
completedDescription
mediaContextIdentifiers
initWithContextIdentifier:actionDescription:ongoingDescription:completedDescription:
identifier
isMedia
isEqualToActivityContext:
setTypedIdentifier:
setActionDescription:
setOngoingDescription:
setCompletedDescription:
_typedIdentifier
_actionDescription
_ongoingDescription
_completedDescription
T@"NSString",C,N,V_typedIdentifier
T@"NSString",C,N,V_actionDescription
T@"NSString",C,N,V_ongoingDescription
T@"NSString",C,N,V_completedDescription
media
TB,R,N,GisMedia
attemptToPlayKey:
attemptToPlaySoundType:
playSystemSoundHandler
setPlaySystemSoundHandler:
_playSystemSoundHandler
T@?,C,N,V_playSystemSoundHandler
type
pullContext
initWithHandoffType:
initWithPullContext:
_type
_pullContext
Tq,R,N,V_type
Tq,R,N,V_pullContext
firstQueryItemWithName:
containsQueryItemWithName:
containsPercentEncodedQueryItemWithName:
sharedInstance
T@"TUDialAssist",R,N
dialAssistUserSettingsChangedToken
_dialAssistUserSettingsChangedToken
Ti,R,N,V_dialAssistUserSettingsChangedToken
initWithValue:
value
_value
T@,R,C,N,V_value
handleType
notificationStyles
validateNotificationStyles:
invitationPreferencesForAllHandlesWithStyles:
standardInvitationPreferencesForLink
letMeInResponseInvitationPreferences
noNotificationInvitationPreferences
incomingCallInvitationPreferences
T@"NSSet",R,N
initWithHandleType:notificationStyles:
isEqualToInvitationPreference:
_handleType
_notificationStyles
Tq,R,N,V_handleType
Tq,R,N,V_notificationStyles
initWithName:thumbnailImage:
isEqualToEffect:
thumbnailImage
_thumbnailImage
T@"NSString",R,C,N,V_name
T@"UIImage",R,C,N,V_thumbnailImage
initWithTUConversationLink:title:placeholder:
initWithTUConversationLink:
tuConversationLink
setTuConversationLink:
title
setTitle:
placeholder
setPlaceholder:
_tuConversationLink
_title
_placeholder
T@"TUConversationLink",&,N,V_tuConversationLink
T@"NSString",C,N,V_title
T@"NSURL",C,N,V_placeholder
handle
revision
initWithIdentifier:revision:handle:
isEqualToConversationLinkOriginator:
setHandle:
setIdentifier:
setRevision:
_handle
_identifier
_revision
T@"NSString",C,N,V_identifier
T@"TUHandle",&,N,V_handle
Tq,N,V_revision
currentRepeatingAction
setCurrentRepeatingAction:
isRunning
beginRepeatingAction:iterations:completion:
beginRepeatingAction:iterations:pauseDurationBetweenIterations:completion:
stop
_beginRepeatingAction:
_attemptNextIteration
_hasIterationsRemaining
_stopWithDidFinish:
_completeWithDidFinish:
isStopped
setStopped:
isCurrentlyPerformingAction
setCurrentlyPerformingAction:
pendingRepeatingAction
setPendingRepeatingAction:
attemptNextIterationBlock
setAttemptNextIterationBlock:
_stopped
_currentlyPerformingAction
_currentRepeatingAction
_pendingRepeatingAction
_attemptNextIterationBlock
stopped
TB,N,GisStopped,V_stopped
currentlyPerformingAction
TB,N,GisCurrentlyPerformingAction,V_currentlyPerformingAction
T@"TURepeatingAction",&,N,V_currentRepeatingAction
T@"TURepeatingAction",&,N,V_pendingRepeatingAction
T@?,C,N,V_attemptNextIterationBlock
running
TB,R,N,GisRunning
initWithAction:
action
setAction:
completion
setCompletion:
remainingIterations
setRemainingIterations:
pauseDuration
setPauseDuration:
_action
_completion
_remainingIterations
_pauseDuration
T@?,C,N,V_action
T@?,C,N,V_completion
TQ,N,V_remainingIterations
Td,N,V_pauseDuration
logTipKitAnalyticsEventNamed:
isSeniorUser
initWithIdentifier:context:
donateSignalWithCompletion:
context
_context
T@"NSString",R,N,V_identifier
T@"NSString",R,N,V_context
deleteCalls:withCompletion:
dispatcherDidFinishBoost:
callHistoryDatabaseChanged:
sharedController
sharedControllerWithCoalescingStrategy:options:
callHistoryControllerWithCoalescingStrategy:options:
providersChangedForProviderManager:
T@"TUCallHistoryController",R,N
coalescingStrategy
setCoalescingStrategy:
options
setOptions:
recentCalls
setRecentCalls:
unreadCallCount
setUnreadCallCount:
deleteAllRecentCalls
deleteRecentCall:
deleteRecentCalls:
markRecentCallsAsRead
markRecentVideoCallsAsRead
markRecentAudioCallsAsRead
markRecentCallsAsReadWithPredicate:
recentCallsWithPredicate:
reloadWithOptions:
initWithCoalescingStrategy:options:dataSource:
loadDispatchQueue
setCallHistoryManager:
callHistoryManagerInitializationDispatchBlock
callHistoryManagerRecentCallsDispatchBlock
_updateCallHistoryManagerUsingCurrentOptions
_callHistoryCoalescingStrategyForCoalescingStrategy:
callHistoryManager
callProviderManager
setCallProviderManager:
dispatcher
setDispatcher:
simpleIvarDispatcher
setSimpleIvarDispatcher:
thirdPartyCallProviders
setThirdPartyCallProviders:
metadataPreCachedOptions
setMetadataPreCachedOptions:
dataSource
_coalescingStrategy
_options
_recentCalls
_unreadCallCount
_callHistoryManager
_callProviderManager
_dispatcher
_simpleIvarDispatcher
_thirdPartyCallProviders
_metadataPreCachedOptions
_dataSource
T@"CHManager",&,N,V_callHistoryManager
T@"TUCallProviderManager",&,N,V_callProviderManager
T@"TUDispatcher",&,N,V_dispatcher
T@"TUDispatcher",&,N,V_simpleIvarDispatcher
T@"NSArray",&,N,V_recentCalls
TQ,N,V_unreadCallCount
T@"NSArray",C,N,V_thirdPartyCallProviders
T@"NSMutableSet",&,N,V_metadataPreCachedOptions
T@"<TUCallHistoryControllerDataSource>",R,N,V_dataSource
TQ,N,V_coalescingStrategy
TQ,N,V_options
stringValue
anyDestinationID
faceTimeQuicklookURL
phoneNumberStrings
emailAddressStrings
keysToFetchForFaceTime
T@"NSString",R,N
T@"NSURL",R,N
T@"NSArray",R,N
IDSFormattedDestinationID
allIDSDestinations
contactForIdentifier:
contactForIdentifier:keysToFetch:
contactForDestinationId:
contactForDestinationId:keysToFetch:
didChangeTelephonyCallingSupport
didChangeFaceTimeAudioCallingSupport
didChangeFaceTimeVideoCallingSupport
didChangeFaceTimeCallingAvailability
didChangeRelayCallingCapabilities
didChangeRelayCallingAvailability
didChangeRelayCallingFeatures
didChangeCloudCallingDevices
didChangeOutgoingRelayCallerID
didChangeEmergencyCallbackMode
didChangeEmergencyCallbackPossible
didRemoveCapabilitiesForSenderIdentityWithUUID:
didAddCapabilitiesForSenderIdentityWithUUID:
initializeCachedValues
supportsTelephonyCalls
supportsFaceTimeAudioCalls
supportsFaceTimeVideoCalls
canAttemptTelephonyCallsWithoutCellularConnectionWithSenderIdentityCapabilities:
canAttemptEmergencyCallsWithoutCellularConnectionWithUUID:
supportsPrimaryCalling
supportsBasebandCalling
telephonyCallSupport
faceTimeAudioCallSupport
faceTimeVideoCallSupport
supportsDisplayingTelephonyCalls
supportsDisplayingFaceTimeAudioCalls
supportsDisplayingFaceTimeVideoCalls
supportsHostingTelephonyCalls
supportsHostingFaceTimeAudioCalls
supportsHostingFaceTimeVideoCalls
isDirectTelephonyCallingCurrentlyAvailable
isDirectFaceTimeAudioCallingCurrentlyAvailable
isDirectFaceTimeVideoCallingCurrentlyAvailable
isFaceTimeAudioAvailable
isFaceTimeVideoAvailable
areCTCapabilitiesValid
supportsWiFiEmergencyCalling
accountsMatchForSecondaryCalling
accountsSupportSecondaryCalling
cloudCallingDevices
setThumperCallingAllowed:onSecondaryDeviceWithID:forSenderIdentityWithUUID:
supportsRelayingToOtherDevices
supportsRelayCalling
isRelayCallingEnabled
setRelayCallingEnabled:
areRelayCallingFeaturesEnabled
isRelayCallingEnabledForDeviceWithID:
setRelayCallingEnabled:forDeviceWithID:
outgoingRelayCallerID
relayCallingAvailability
supportsTelephonyRelayCalling
supportsFaceTimeAudioRelayCalling
supportsFaceTimeVideoRelayCalling
requestPinFromPrimaryDevice
cancelPinRequestFromPrimaryDevice
isEmergencyCallbackModeEnabled
endEmergencyCallbackMode
isEmergencyCallbackPossible
senderIdentityCapabilities
senderIdentityCapabilitiesWithUUID:
_senderIdentityCapabilitiesByUUID
addDelegate:queue:
_sendNotificationsAndCallbacksAfterRunningBlock:
directTelephonyCallingCurrentlyAvailable
TB,R,N,GisDirectTelephonyCallingCurrentlyAvailable
directFaceTimeAudioCallingCurrentlyAvailable
TB,R,N,GisDirectFaceTimeAudioCallingCurrentlyAvailable
directFaceTimeVideoCallingCurrentlyAvailable
TB,R,N,GisDirectFaceTimeVideoCallingCurrentlyAvailable
relayCallingEnabled
TB,N,GisRelayCallingEnabled
T@"NSSet",R,C,N
emergencyCallbackModeEnabled
TB,R,N,GisEmergencyCallbackModeEnabled
emergencyCallbackPossible
TB,R,N,GisEmergencyCallbackPossible
dialRequestTTYTypeForCHRecentCallTTYType:
setClient:
T@"<TUCoreTelephonyClient>",&,N,V_client
momentsController:didUpdateCapabilities:forProvider:
momentsController:willCaptureRemoteRequestFromIdentifier:
momentsController:didReceiveLocallyRequestedMomentDescriptor:
isFaceTimePhotosEnabledByDefault
faceTimePhotosEnabledDeterminer
setFaceTimePhotosEnabledDeterminer:
isFaceTimePhotosEnabled
isInternalInstall
isFaceTimePhotosXPCServiceEnabled
setFaceTimePhotosEnabled:
isFaceTimePhotosRestricted
dataSource:didUpdateCapabilities:forVideoStreamToken:
dataSource:willCaptureRemoteRequestFromRequesterID:
dataSource:didReceiveLocallyRequestedMomentDescriptor:
dataSource:requestSandboxExtensionForURL:reply:
serverDiedForDataSource:
faceTimePhotosEnabledByDefault
TB,R,N,GisFaceTimePhotosEnabledByDefault
T@?,C,N
faceTimePhotosEnabled
TB,N,GisFaceTimePhotosEnabled
faceTimePhotosRestricted
TB,R,N,GisFaceTimePhotosRestricted
faceTimePhotosXPCServiceEnabled
TB,R,N,GisFaceTimePhotosXPCServiceEnabled
initWithDelegate:
initWithDelegate:dataSource:
startRequestWithMediaType:forProvider:requesteeID:completion:
endRequestWithTransactionID:completion:
registerProvider:completion:
unregisterProvider:completion:
capabilitiesForProvider:
delegate
capabilitiesByVideoStreamToken
providerByVideoStreamToken
lockdownModeEnabled
setLockdownModeEnabled:
_delegate
_capabilitiesByVideoStreamToken
_providerByVideoStreamToken
_lockdownModeEnabled
T@"<TUMomentsControllerDataSource>",R,N,V_dataSource
T@"<TUMomentsControllerDelegate>",R,W,N,V_delegate
T@"NSMutableDictionary",R,N,V_capabilitiesByVideoStreamToken
T@"NSMutableDictionary",R,N,V_providerByVideoStreamToken
T@?,C,N,V_lockdownModeEnabled
soundID
setSoundID:
playSound:
playSoundIndefinitely:pauseDurationBetweenIterations:
playSound:iterations:pauseDurationBetweenIterations:
playSound:iterations:pauseDurationBetweenIterations:completion:
stopPlaying
isPlaying
repeatingActor
_soundID
_repeatingActor
T@"TURepeatingActor",R,N,V_repeatingActor
TI,N,V_soundID
playing
TB,R,N,GisPlaying
loadHandles
contains:
appleCareHandles
_appleCareHandles
T@"NSSet",R,C,N,V_appleCareHandles
_handleCallStatusChangedNotification:
audioDeviceControllerMutedTalkerDidStart:
audioDeviceControllerMutedTalkerDidEnd:
audioDeviceControllerDeviceListChanged:
setCurrentAudioInputDeviceToDeviceWithUID:
setCurrentAudioOutputDeviceToDeviceWithUID:
registerForMutedTalkerNotification
notifyDelegatesOfDeviceListChange
setMixesVoiceWithMedia:
setMediaPlaybackOnExternalDevice:
currentOutputDevice
setCurrentOutputDevice:
setFollowsSystemInputSetting:
setFollowsSystemOutputSetting:
devices
outputDevices
audioClient
setAudioClient:
setSerialQueue:
setDelegates:
setActionsDelegate:
_audioClient
T@"AVAudioClient",&,N,V_audioClient
T@"NSObject<OS_dispatch_queue>",&,N,V_serialQueue
T@"NSHashTable",&,N,V_delegates
T@"<TUAudioDeviceControllerActions>",W,N,V_actionsDelegate
T@"AVAudioDevice",&,N
sessionUUID
actionURL
sessionEventType
item
queueItemType
session
setSessionEventType:
T@"NSUUID",R,N
Tq,N
initWithUUID:
isEqualToConversationNotice:
setSessionUUID:
setActionURL:
setItem:
setQueueItemType:
setSession:
_sessionEventType
_sessionUUID
_actionURL
_item
_queueItemType
_session
T@"NSUUID",&,N,V_sessionUUID
T@"NSURL",&,N,V_actionURL
T@"NSString",C,N,V_item
Tq,N,V_queueItemType
T@"TUConversationActivitySession",&,N,V_session
T@"NSUUID",R,N,V_UUID
Tq,N,V_sessionEventType
activeIDSDestination
isAudioEnabled
audioPriority
avcIdentifier
capabilities
isMomentsAvailable
isMuted
isScreenEnabled
screenToken
streamToken
captionsToken
isVideoEnabled
videoPriority
isAudioPaused
isRemoteAudioEnabled
isRemoteVideoEnabled
isLocalAccountHandle
audioVideoMode
association
isLightweight
isGuestModeEnabled
senderCorrelationIdentifier
initWithIdentifier:handle:senderCorrelationIdentifier:
initWithIdentifier:handle:
initWithConversationParticipant:
isEqualToParticipant:
setMuted:
setAudioVideoMode:
setAudioEnabled:
setVideoEnabled:
setScreenEnabled:
setAudioPaused:
setMomentsAvailable:
setLightweight:
setCapabilities:
setStreamToken:
setScreenToken:
setCaptionsToken:
setAudioPriority:
setVideoPriority:
setAvcIdentifier:
setRemoteAudioEnabled:
setRemoteVideoEnabled:
setActiveIDSDestination:
setLocalAccountHandle:
setAssociation:
setGuestModeEnabled:
_muted
_audioEnabled
_videoEnabled
_screenEnabled
_audioPaused
_momentsAvailable
_lightweight
_remoteAudioEnabled
_remoteVideoEnabled
_localAccountHandle
_guestModeEnabled
_audioVideoMode
_capabilities
_streamToken
_screenToken
_captionsToken
_audioPriority
_videoPriority
_avcIdentifier
_activeIDSDestination
_association
_senderCorrelationIdentifier
muted
TB,N,GisMuted,V_muted
audioEnabled
TB,N,GisAudioEnabled,V_audioEnabled
videoEnabled
TB,N,GisVideoEnabled,V_videoEnabled
screenEnabled
TB,N,GisScreenEnabled,V_screenEnabled
audioPaused
TB,N,GisAudioPaused,V_audioPaused
momentsAvailable
TB,N,GisMomentsAvailable,V_momentsAvailable
lightweight
TB,N,GisLightweight,V_lightweight
localAccountHandle
TB,N,GisLocalAccountHandle,V_localAccountHandle
guestModeEnabled
TB,N,GisGuestModeEnabled,V_guestModeEnabled
TQ,N,V_audioVideoMode
Tq,N,V_streamToken
Tq,N,V_screenToken
Tq,N,V_captionsToken
Tq,N,V_audioPriority
Tq,N,V_videoPriority
T@"NSString",C,N,V_avcIdentifier
T@"NSString",C,N,V_activeIDSDestination
T@"TUConversationParticipantCapabilities",C,N,V_capabilities
remoteAudioEnabled
TB,N,GisRemoteAudioEnabled,V_remoteAudioEnabled
remoteVideoEnabled
TB,N,GisRemoteVideoEnabled,V_remoteVideoEnabled
T@"TUConversationParticipantAssociation",C,N,V_association
TQ,R,N,V_identifier
T@"TUHandle",R,C,N,V_handle
T@"NSString",R,C,N,V_senderCorrelationIdentifier
TQ,D,N
T@"TUHandle",C,D,N
TB,D,N,GisMuted
TB,D,N,GisAudioEnabled
TB,D,N,GisVideoEnabled
TB,D,N,GisScreenEnabled
TB,D,N,GisMomentsAvailable
T@"TUConversationParticipantCapabilities",C,D,N
TB,N,GisLightweight
TB,D,N,GisRemoteAudioEnabled
TB,D,N,GisRemoteVideoEnabled
T@"TUConversationParticipantAssociation",C,D,N
TB,D,N,GisGuestModeEnabled
remoteCameraOrientation
localVideoContextSlotIdentifier
remoteVideoContextSlotIdentifier
isEqualToVideoCallAttributes:
setRemoteCameraOrientation:
setLocalVideoContextSlotIdentifier:
setRemoteVideoContextSlotIdentifier:
_remoteCameraOrientation
_localVideoContextSlotIdentifier
_remoteVideoContextSlotIdentifier
Tq,N,V_remoteCameraOrientation
Tq,N,V_localVideoContextSlotIdentifier
Tq,N,V_remoteVideoContextSlotIdentifier
callerId
isoCountryCode
forwardingTargetForSelector:
displayName
backingContact
backingContactId
backingContactIdentifier
destinationId
handles
mostRecentCallType
mostRecentCallWasMissed
T@"NSString",R
T@"CNContact",R
T@"NSArray",R
Tq,R
idsCanonicalDestinations
initWithRecentCall:
mostRecentCallInfo
recentCall
setRecentCall:
_recentCall
T@"CHRecentCall",&,N,V_recentCall
T@"NSString",R,D
isA2DPRoute
isAirTunes
isBluetooth
bluetoothEndpointType
isBluetoothLE
isBluetoothManaged
isCarAudio
isCurrentlyPicked
isDefaultRoute
deviceType
isGuest
identifiersOfOtherConnectedDevices
isInEarDetectionEnabled
isInEarDetectionSupported
isPreferred
isPreferredAndActive
isReceiver
isSpeaker
supportsHighQualityVoiceWithMedia
supportsRelay
uniqueIdentifier
isWiredHeadphones
isWiredHeadset
isWirelessHeadset
isPartnerRouteRoutable
isSiblingRoutePresent
supportsSharePlay
initWithUniqueIdentifier:name:
initWithRoute:
customDescription
isHomePodFamily
isAirPodsRoute
isInEarDetected
isTipiParticipant
isTriangleParticipant
supportsPreferredAndActive
isEqualToRoute:
isCarKitRoute
setUniqueIdentifier:
setDeviceType:
setA2DPRoute:
setCurrentlyPicked:
setDefaultRoute:
setReceiver:
setSpeaker:
setWiredHeadphones:
setWiredHeadset:
setWirelessHeadset:
setAirTunes:
setCarAudio:
setGuest:
setBluetooth:
setBluetoothLE:
setBluetoothManaged:
setBluetoothEndpointType:
setInEarDetectionEnabled:
setInEarDetectionSupported:
setPreferred:
setPreferredAndActive:
setPartnerRouteRoutable:
setSiblingRoutePresent:
setSupportsHighQualityVoiceWithMedia:
setSupportsSharePlay:
setIdentifiersOfOtherConnectedDevices:
setSupportsRelay:
_A2DPRoute
_currentlyPicked
_defaultRoute
_receiver
_speaker
_wiredHeadphones
_wiredHeadset
_wirelessHeadset
_airTunes
_carAudio
_guest
_bluetooth
_bluetoothLE
_bluetoothManaged
_inEarDetectionEnabled
_inEarDetectionSupported
_preferred
_preferredAndActive
_partnerRouteRoutable
_siblingRoutePresent
_supportsHighQualityVoiceWithMedia
_supportsSharePlay
_supportsRelay
_uniqueIdentifier
_deviceType
_bluetoothEndpointType
_identifiersOfOtherConnectedDevices
A2DPRoute
TB,N,GisA2DPRoute,V_A2DPRoute
airTunes
TB,N,GisAirTunes,V_airTunes
carAudio
TB,N,GisCarAudio,V_carAudio
currentlyPicked
TB,N,GisCurrentlyPicked,V_currentlyPicked
bluetooth
TB,N,GisBluetooth,V_bluetooth
Tq,N,V_bluetoothEndpointType
bluetoothLE
TB,N,GisBluetoothLE,V_bluetoothLE
bluetoothManaged
TB,N,GisBluetoothManaged,V_bluetoothManaged
defaultRoute
TB,N,GisDefaultRoute,V_defaultRoute
Tq,N,V_deviceType
guest
TB,N,GisGuest,V_guest
T@"NSArray",C,N,V_identifiersOfOtherConnectedDevices
inEarDetectionEnabled
TB,N,GisInEarDetectionEnabled,V_inEarDetectionEnabled
inEarDetectionSupported
TB,N,GisInEarDetectionSupported,V_inEarDetectionSupported
preferred
TB,N,GisPreferred,V_preferred
preferredAndActive
TB,N,GisPreferredAndActive,V_preferredAndActive
receiver
TB,N,GisReceiver,V_receiver
speaker
TB,N,GisSpeaker,V_speaker
TB,N,V_supportsHighQualityVoiceWithMedia
TB,N,V_supportsRelay
T@"NSString",C,N,V_uniqueIdentifier
wiredHeadphones
TB,N,GisWiredHeadphones,V_wiredHeadphones
wiredHeadset
TB,N,GisWiredHeadset,V_wiredHeadset
wirelessHeadset
TB,N,GisWirelessHeadset,V_wirelessHeadset
partnerRouteRoutable
TB,N,GisPartnerRouteRoutable,V_partnerRouteRoutable
siblingRoutePresent
TB,N,GisSiblingRoutePresent,V_siblingRoutePresent
TB,N,V_supportsSharePlay
carKitRoute
TB,R,N,GisCarKitRoute
homePodFamily
TB,R,N,GisHomePodFamily
inEarDetected
TB,R,N,GisInEarDetected
tipiParticipant
TB,R,N,GisTipiParticipant
triangleParticipant
TB,R,N,GisTriangleParticipant
TB,D,N,GisCurrentlyPicked
TB,D,N,GisDefaultRoute
TB,D,N,GisReceiver
TB,D,N,GisSpeaker
TB,D,N,GisWiredHeadphones
TB,D,N,GisWiredHeadset
TB,D,N,GisWirelessHeadset
TB,D,N,GisAirTunes
TB,D,N,GisCarAudio
TB,D,N,GisGuest
TB,D,N,GisBluetooth
TB,D,N,GisBluetoothLE
TB,D,N,GisBluetoothManaged
TB,D,N,GisInEarDetectionEnabled
TB,D,N,GisInEarDetectionSupported
TB,D,N,GisPreferred
TB,D,N,GisPreferredAndActive
T@"NSArray",C,D,N
TB,D,N
initWithDataSource:
registerForCallbacksForProvider:completionHandler:
registerConversationProviderForConfiguration:completionHandler:
conversationProviderForIdentifier:completionHandler:
generatePseudonymHandleForConversationProvider:expiryDuration:URI:completionHandler:
renewPseudonymHandle:forConversationProvider:expirationDate:completionHandler:
revokePseudonymHandle:forConversationProvider:completionHandler:
doesHandle:correspondToConversationProvider:completionHandler:
T@"<TUConversationProviderManagerDataSource>",R,N,V_dataSource
initWithAutocompleteResult:
autocompleteResult
setAutocompleteResult:
_autocompleteResult
T@"CNAutocompleteResult",&,N,V_autocompleteResult
pluginName
initWithIdentifier:pluginName:
isEqualToConversationVirtualParticipant:
_pluginName
T@"NSString",R,N,V_pluginName
activeRemoteParticipants
activitySessions
avMode
stagedActivitySession
avcSessionIdentifier
avcSessionToken
isBackedByGroupSession
hasJoined
initiator
kickedMembers
rejectedMembers
otherInvitedHandles
hasReceivedLetMeInRequest
letMeInRequestState
ignoreLMIRequests
link
isLocallyCreated
localMember
localParticipantIdentifier
localParticipantAssociation
isOneToOneHandoffOngoing
handoffEligibility
maxVideoDecodesAllowed
messagesGroupName
messagesGroupUUID
isOneToOneModeEnabled
participantHandles
pendingMembers
remoteMembers
report
isVideoPaused
virtualParticipants
invitationPreferences
lightweightMembers
activeLightweightParticipants
isFromStorage
isAnyOtherAccountDeviceActive
isMirageEnabled
systemActivitySessions
isPendingConversation
selectiveSharingSessionUUID
emptyConversationWithGroupUUID:
numberFormatter
initWithUUID:groupUUID:
initWithUUID:groupUUID:provider:
initWithConversation:
messagesGroupPhotoData
resolvedAudioVideoMode
setAvMode:
setSupportedMediaTypes:
eligibleForDowngradeToAVModeNoneFromUI
joinedActivitySession
hasJoinedActivitySession
isRepresentedByRemoteMembers:andLink:
isVideo
setVideo:
remoteParticipantForLightweightParticipantHandle:
shouldShowInvitationOfStyles:forHandle:defaultValue:
shouldShowInvitationUserNotificationForHandle:
shouldShowInvitationRingingUIForHandle:
shouldShowInvitationRingingUIForAnyHandleType
supportsAVMode:
supportsMediaType:
contactNamesByHandleWithContactsDataSource:
isEqualToConversation:
setLink:
setState:
setHasReceivedLetMeInRequest:
setLetMeInRequestState:
setLocallyCreated:
setParticipantHandles:
setRemoteMembers:
setPendingMembers:
setKickedMembers:
setRejectedMembers:
setLightweightMembers:
setOtherInvitedHandles:
setActiveRemoteParticipants:
setActiveLightweightParticipants:
setReport:
setActivitySessions:
setStagedActivitySession:
setProvider:
setAvcSessionToken:
setAvcSessionIdentifier:
setVideoPaused:
setHasJoined:
setIsAnyOtherAccountDeviceActive:
setPendingConversation:
setLocalMember:
setLocalParticipantIdentifier:
setLocalParticipantAssociation:
setOneToOneHandoffOngoing:
setHandoffEligibility:
setIgnoreLMIRequests:
setMessagesGroupUUID:
setInitiator:
setMessagesGroupName:
setMaxVideoDecodesAllowed:
reportingHierarchyToken
setReportingHierarchyToken:
reportingHierarchySubToken
setReportingHierarchySubToken:
setOneToOneModeEnabled:
setBackedByGroupSession:
setSystemActivitySessions:
setVirtualParticipants:
setInvitationPreferences:
setFromStorage:
setSelectiveSharingSessionUUID:
setMirageEnabled:
conversationFailureContext
setConversationFailureContext:
setFeatureFlags:
_hasReceivedLetMeInRequest
_locallyCreated
_videoPaused
_hasJoined
_isAnyOtherAccountDeviceActive
_pendingConversation
_oneToOneHandoffOngoing
_ignoreLMIRequests
_oneToOneModeEnabled
_backedByGroupSession
_fromStorage
_mirageEnabled
_avMode
_link
_letMeInRequestState
_participantHandles
_remoteMembers
_pendingMembers
_kickedMembers
_rejectedMembers
_lightweightMembers
_otherInvitedHandles
_activeRemoteParticipants
_activeLightweightParticipants
_report
_activitySessions
_stagedActivitySession
_avcSessionToken
_avcSessionIdentifier
_localMember
_localParticipantIdentifier
_localParticipantAssociation
_handoffEligibility
_messagesGroupUUID
_initiator
_messagesGroupName
_maxVideoDecodesAllowed
_reportingHierarchyToken
_reportingHierarchySubToken
_systemActivitySessions
_virtualParticipants
_invitationPreferences
_selectiveSharingSessionUUID
_conversationFailureContext
T@"NSArray",C,N,V_supportedMediaTypes
T@"TUConversationLink",&,N,V_link
Tq,N,V_state
Tq,N,V_letMeInRequestState
TB,N,V_hasReceivedLetMeInRequest
Tq,N,V_avcSessionToken
T@"NSString",C,N,V_avcSessionIdentifier
videoPaused
TB,N,GisVideoPaused,V_videoPaused
TQ,N,V_avMode
locallyCreated
TB,N,GisLocallyCreated,V_locallyCreated
TB,N,GhasJoined,V_hasJoined
TB,N,V_isAnyOtherAccountDeviceActive
pendingConversation
TB,N,GisPendingConversation,V_pendingConversation
T@"TUConversationMember",&,N,V_localMember
TQ,N,V_localParticipantIdentifier
T@"TUConversationParticipantAssociation",&,N,V_localParticipantAssociation
oneToOneHandoffOngoing
TB,N,GisOneToOneHandoffOngoing,V_oneToOneHandoffOngoing
T@"TUConversationHandoffEligibility",&,N,V_handoffEligibility
T@"NSSet",C,N,V_remoteMembers
T@"NSSet",C,N,V_pendingMembers
T@"NSSet",C,N,V_kickedMembers
T@"NSSet",C,N,V_rejectedMembers
T@"NSSet",C,N,V_lightweightMembers
T@"NSSet",C,N,V_otherInvitedHandles
TB,N,V_ignoreLMIRequests
T@"NSUUID",&,N,V_messagesGroupUUID
T@"NSSet",C,N,V_participantHandles
T@"NSSet",C,N,V_activeRemoteParticipants
T@"NSSet",C,N,V_activeLightweightParticipants
T@"TUHandle",&,N,V_initiator
T@"NSString",C,N,V_messagesGroupName
Tq,N,V_maxVideoDecodesAllowed
T@"NSObject",&,N,V_reportingHierarchyToken
T@"NSObject",&,N,V_reportingHierarchySubToken
T@"TUConversationReport",C,N,V_report
oneToOneModeEnabled
TB,N,GisOneToOneModeEnabled,V_oneToOneModeEnabled
backedByGroupSession
TB,N,GisBackedByGroupSession,V_backedByGroupSession
T@"NSSet",C,N,V_activitySessions
T@"NSSet",C,N,V_systemActivitySessions
T@"TUConversationActivitySession",C,N,V_stagedActivitySession
T@"NSSet",C,N,V_virtualParticipants
T@"NSSet",C,N,V_invitationPreferences
fromStorage
TB,N,GisFromStorage,V_fromStorage
T@"NSUUID",&,N,V_selectiveSharingSessionUUID
mirageEnabled
TB,N,GisMirageEnabled,V_mirageEnabled
T@,&,N,V_conversationFailureContext
T@"TUConversationProvider",&,N,V_provider
T@"<TUFeatureFlags>",&,N,V_featureFlags
TQ,R,N
T@"TUConversationLink",&,D,N
TB,D,N,GisLocallyCreated
TB,D,N,GhasJoined
video
TB,D,N,GisVideo
T@"TUConversationMember",&,D,N
T@"TUHandle",&,D,N
T@"NSObject",&,D,N
T@"TUConversationReport",C,D,N
TB,D,N,GisOneToOneModeEnabled
T@"TUConversationParticipantAssociation",&,D,N
TB,D,N,GisOneToOneHandoffOngoing
T@"TUConversationHandoffEligibility",&,D,N
TB,D,N,GisBackedByGroupSession
TB,D,N,GisMirageEnabled
T@"<TUFeatureFlags>",&,D,N
isEligible
isUplinkMuted
isSendingVideo
conversationGroupUUID
originatingDeviceType
initWithHandoffEligibility:
localizedDeviceCategory
isEqualToHandoffEligibility:
setEligible:
setUplinkMuted:
setSendingVideo:
setConversationGroupUUID:
setOriginatingDeviceType:
_eligible
_uplinkMuted
_sendingVideo
_conversationGroupUUID
_originatingDeviceType
eligible
TB,N,GisEligible,V_eligible
uplinkMuted
TB,N,GisUplinkMuted,V_uplinkMuted
sendingVideo
TB,N,GisSendingVideo,V_sendingVideo
T@"NSUUID",&,N,V_conversationGroupUUID
T@"TUConversationParticipantAssociation",&,N,V_association
T@"NSString",&,N,V_originatingDeviceType
callsPassingTest:
callsWithStatus:
audioAndVideoCallsWithStatus:
callsWithGroupUUID:
callPassingTest:
callWithStatus:
videoCallWithStatus:
audioOrVideoCallWithStatus:
callWithUniqueProxyIdentifier:
callWithCallUUID:
displayedCallFromCalls:
countOfCallsPassingTest:
anyCallPassesTest:
allCallsPassTest:
allCallsAreOfService:
currentCalls
currentVideoCalls
currentAudioAndVideoCalls
incomingCalls
displayedCalls
displayedAudioAndVideoCalls
conferenceParticipantCalls
callsHostedElsewhere
callsWithAnEndpointElsewhere
callsHostedOrAnEndpointElsewhere
callsOnDefaultPairedDevice
incomingCall
incomingVideoCall
activeVideoCall
currentVideoCall
currentCallCount
currentVideoCallCount
currentAudioAndVideoCallCount
callCountOnDefaultPairedDevice
hasCurrentCalls
hasCurrentAudioCalls
hasCurrentVideoCalls
anyCallIsHostedOnCurrentDevice
anyCallIsEndpointOnCurrentDevice
currentCallGroups
currentAudioAndVideoCallGroups
callGroupsOnDefaultPairedDevice
T@"TUCall",R,N
initWithCalls:
enumerateCallsInvokingBlock:forCallsPassingTest:
enumerateCallsWithOptions:invokingBlock:forCallsPassingTest:
_allCalls
callPassingTest:withOptions:
callPassingTest:sortedUsingComparator:
displayedCall
conferenceCall
frontmostCall
frontmostAudioOrVideoCall
existingCallsHaveMultipleProviders
_callGroupsFromCalls:
calls
setCalls:
_calls
T@"NSArray",C,N,V_calls
deviceFamily
style
displayScale
scaleFactor
originalResolution
frameRate
displayID
isWindowed
windowUUID
defaultAttributes
currentDeviceFamily
defaultDisplayScale
defaultScaleFactor
isSignificantChangeFromAttributes:
setDeviceFamily:
setStyle:
setDisplayScale:
setScaleFactor:
setOriginalResolution:
setFrameRate:
setDisplayID:
setWindowed:
setWindowUUID:
T@"NSNumber",&,N
T@"NSValue",&,N
windowed
TB,N,GisWindowed
T@"NSUUID",&,N
Tq,R,N
T@"NSNumber",R,C,N
isEqualToScreenShareAttributes:
_windowed
_deviceFamily
_style
_displayScale
_scaleFactor
_frameRate
_displayID
_originalResolution
_windowUUID
Tq,N,V_deviceFamily
Tq,N,V_style
T@"NSNumber",&,N,V_displayScale
T@"NSNumber",&,N,V_scaleFactor
T@"NSNumber",&,N,V_frameRate
T@"NSNumber",&,N,V_displayID
T@"NSValue",&,N,V_originalResolution
TB,N,GisWindowed,V_windowed
T@"NSUUID",&,N,V_windowUUID
connectionEstablishedForClient:
tvDeviceAppeared:
tvDeviceDisappeared:
splitSessionStarted:
splitSessionEnded:
approveSplitSessionForConversation:device:pullContext:completion:
cancelSplitSessionApproval
initWithConversationManager:
_osStateDictionary
setApprovalDelegate:
setActiveSplitSessionTV:
_requestInitialState
_grouped:forEachDelegate:
_forEachDelegate:
_findConversationForUUID:
nearbyTVDeviceHandles
nearbyTVDevices
inviteTVDevice:toConversation:completion:
disconnectTVDevice:completion:
nearbyTVDevice:isCapableOfHandoffForConversation:
approvalDelegate
activeSplitSessionTV
nearbyTVs
xpcClient
conversationManager
stateHandle
setStateHandle:
_approvalDelegate
_activeSplitSessionTV
_nearbyTVs
_xpcClient
_conversationManager
_stateHandle
T@"NSMapTable",&,N,V_delegates
T@"NSMutableSet",R,N,V_nearbyTVs
T@"TUNearbyDeviceHandle",&,N,V_activeSplitSessionTV
T@"TUNeighborhoodActivityConduitXPCClient",R,N,V_xpcClient
T@"TUConversationManager",R,N,V_conversationManager
TQ,N,V_stateHandle
T@"<TUNeighborhoodActivityConduitApprovalDelegate>",W,N,V_approvalDelegate
T@"NSDictionary",R,N
tu_contactStoreConfigurationForBundleIdentifier:
tu_contactStoreConfigurationForCall:
_handlePickableRoutesDidChangeNotification:
_handleVolumeDidChangeNotification:
_handleUplinkMuteDidChangeNotification:
_mediaServicesWereReset:
sharedSystemController
sharedAudioSystemController
sourceIdentifierForRouteID:
filteredPickableRoutesFromPickableRoutes:
isPhoneCallAudioCategory:
T@"TUAudioSystemController",R,N
_updateCachedState
_handleDownlinkMuteDidChangeNotification:
activeCategoryVolume
triggerEndInterruptionForAudioSessionID:
setActiveCategoryVolume:
isTTY
isDownlinkMuted
setDownlinkMuted:
pickedRouteAttribute
_pickableRoutesForTTYWithForceNewRequest:
pickableRoutesForTTY
pickableRoutesForActiveCall
_pickableRoutesForPhoneCallWithForceNewRequest:
currentlyPickedRouteIdForCategory:andMode:
_pickableRoutesForPlayAndRecordVoiceWithForceNewRequest:
_pickableRoutesForPlayAndRecordVideoWithForceNewRequest:
_pickableRoutesForPlayAndRecordRemoteVoiceWithForceNewRequest:
_pickableRoutesForVoiceMailWithForceNewRequest:
_loadCurrentPickableRoutesWithCompletion:
bestGuessPickableRoutesForAnyCall
pickableRoutesForCategory:andMode:
getPickableRoutesForCategory:mode:completion:
_getPickableRoutesForCategory:mode:onlyKnownCombinations:completion:
pickRoute:error:
switchBluetoothAudioFormats
pickableRouteWithUniqueIdentifier:
shouldSuppressCallUsingRoute:
otherSessionsRequestNoRingtoneInterruption
setDelegate:
_uplinkMutedQueue
_downlinkMutedQueue
_ttyQueue
_pickableRoutesQueue
_isUplinkMutedCached
_isDownlinkMutedCached
_isTTYCached
_pickableRoutesForTTY
_pickableRoutesForPhoneCall
_pickableRoutesForPlayAndRecordVideo
_pickableRoutesForPlayAndRecordVoice
_pickableRoutesForPlayAndRecordRemoteVoice
_pickableRoutesForVoicemail
_currentPickableRoutes
_isRequestingUplinkMuted
_isRequestingDownlinkMuted
_isRequestingTTY
_isRequestingPickableRoutesForTTY
_isRequestingPickableRoutesForPhoneCall
_isRequestingPickableRoutesForPlayAndRecordVideo
_isRequestingPickableRoutesForPlayAndRecordVoice
_isRequestingPickableRoutesForPlayAndRecordRemoteVoice
_isRequestingPickableRoutesForVoicemail
_lastUplinkMutedRequestScheduleTime
_lastDownlinkMutedRequestScheduleTime
_lastTTYRequestScheduleTime
_lastTTYPickableRoutesScheduleTime
_lastPhoneCallCategoryRoutesScheduleTime
_lastPlayAndRecordVideoRoutesScheduleTime
_lastPlayAndRecordVoiceRoutesScheduleTime
_lastPlayAndRecordRemoteVoiceRoutesScheduleTime
_lastVoicemailRoutesScheduleTime
T@"<TUAudioSystemControllerDelegate>",W,N,V_delegate
Tf,N
TB,N,GisUplinkMuted
downlinkMuted
TB,N,GisDownlinkMuted
TB,R,N,GisTTY
T@"NSDictionary",R,C,N
capabilityStateUpdated:
setWiFiCallingEnabled:forSenderIdentityWithUUID:
setWiFiCallingRoamingEnabled:forSenderIdentityWithUUID:
setVoLTECallingEnabled:forSenderIdentityWithUUID:
setThumperCallingEnabled:forSenderIdentityWithUUID:
setThumperCallingAllowedOnDefaultPairedDevice:forSenderIdentityWithUUID:
invalidateAndRefreshWiFiCallingProvisioningURLForSenderIdentityWithUUID:
invalidateAndRefreshThumperCallingProvisioningURLForSenderIdentityWithUUID:
callCapabilitiesState:
registerClient:
unregisterClient:
callCapabilitiesClientXPCInterface
callCapabilitiesServerXPCInterface
T@"<TUCallCapabilitiesXPCServer>",&,N
performDelegateCallbackBlock:
invalidate
_retrieveState
_updateState:
token
delegateToQueue
_token
_delegateToQueue
Ti,R,N,V_token
T@"NSMapTable",R,N,V_delegateToQueue
T@"TUCallCapabilitiesState",&,N,V_state
nickname
isLightweightMember
isValidated
lightweightPrimary
lightweightPrimaryParticipantIdentifier
joinedFromLetMeIn
dateReceivedLetMeIn
dateInitiatedLetMeIn
isOtherInvitedHandle
associationVoucher
validationSource
initWithHandle:
initWithHandle:nickname:
initWithHandle:nickname:joinedFromLetMeIn:
initWithHandles:
initWithContact:additionalHandles:
initWithContact:
initWithDestination:
initWithDestinations:
idsFromID
idsDestination
idsDestinations
representsSameMemberAs:
setIsSplitSessionMember:
isSplitSessionMember
setSplitSessionPrimary:
splitSessionPrimary
setValidationSource:
isEqualToMember:
setNickname:
setIsLightweightMember:
setDateReceivedLetMeIn:
setDateInitiatedLetMeIn:
setLightweightPrimary:
setLightweightPrimaryParticipantIdentifier:
setJoinedFromLetMeIn:
setIsOtherInvitedHandle:
setAssociationVoucher:
_isLightweightMember
_joinedFromLetMeIn
_isOtherInvitedHandle
_nickname
_validationSource
_dateReceivedLetMeIn
_dateInitiatedLetMeIn
_lightweightPrimary
_lightweightPrimaryParticipantIdentifier
_associationVoucher
T@"NSString",C,N,V_nickname
TB,N,V_joinedFromLetMeIn
TB,N,V_isOtherInvitedHandle
Tq,N,V_validationSource
T@"TUConversationMemberAssociation",C,N,V_association
T@"TUVoucher",&,N,V_associationVoucher
T@"TUHandle",R,N,V_handle
validated
TB,R,N,GisValidated
TB,N,V_isLightweightMember
T@"NSDate",N,V_dateReceivedLetMeIn
T@"NSDate",N,V_dateInitiatedLetMeIn
T@"TUHandle",C,N
T@"TUHandle",C,N,V_lightweightPrimary
TQ,N,V_lightweightPrimaryParticipantIdentifier
beginObserving
endObserving
callback
setCallback:
isObserving
observing
TB,R,N,GisObserving
initWithNotificationName:queue:
initWithNotificationName:queue:callback:
_endObserving
lock
notificationName
setNotificationName:
setToken:
_lock
_callback
_notificationName
T{os_unfair_lock_s=I},R,N,V_lock
T@"NSString",C,N,V_notificationName
Ti,N,V_token
T@?,C,N,V_callback
contacts
localizedName
setLocalizedName:
companyName
setCompanyName:
contactLabel
setContactLabel:
legacyAddressBookIdentifier
setLegacyAddressBookIdentifier:
setContacts:
_legacyAddressBookIdentifier
_localizedName
_companyName
_contactLabel
_contacts
T@"NSArray",C,N,V_contacts
T@"NSString",C,N,V_localizedName
T@"NSString",C,N,V_companyName
T@"NSString",C,N,V_contactLabel
Ti,N,V_legacyAddressBookIdentifier
keysByCombiningDefaultKeysWithKeysToFetch:
defaultContactKeyDescriptors
unsupportedLocalesForPrefixHint
asianLocaleCountryCodes
initWithContactsDataSource:
executeFetchRequest:
contactLabelForContacts:matchingHandle:countryCode:
labeledHandlesForContactWithIdentifier:
labeledHandlesForContacts:
contactWithIdentifier:keysToFetch:
unifiedContactsForFetchRequest:
contactsForHandle:countryCode:keysToFetch:prefixHint:
localizedCompositeNameForContact:secondContact:
compositeNameForContacts:
compositeNameForFetchRequest:
formattedNameForHandle:countryCode:
personIDForContact:
prefixHintForFetchRequest:
ISOCountryCodeForHandle:fetchRequest:
useAsianNameFormat
setUseAsianNameFormat:
localeSupportsPrefixHintForFetchRequest
setLocaleSupportsPrefixHintForFetchRequest:
contactsDataSource
setAppleCareHandles:
_useAsianNameFormat
_localeSupportsPrefixHintForFetchRequest
_contactsDataSource
TB,N,V_useAsianNameFormat
T@?,C,N,V_localeSupportsPrefixHintForFetchRequest
T@"<TUContactsDataSource>",R,N,V_contactsDataSource
T@"TUContactsDataProviderAppleCareHandles",C,N,V_appleCareHandles
tu_contactsForContactHandles:keyDescriptors:error:
tu_contactsForHandles:keyDescriptors:error:
unifiedContactWithIdentifier:keysToFetch:error:
unifiedContactsMatchingPredicate:keysToFetch:error:
personFromContact:
dialRequestAttachment
joinRequestAttachment
tu_dynamicIdentifier
makeActivityWithIntent:dialRequestAttachment:
makeActivityWithIntent:joinRequestAttachment:
_isActivityTypeAllowedForDialRequest:
_isActivityTypeAllowedForJoinRequest:
boolForKey:withDefault:
tu_defaults
T@"NSUserDefaults",R,N
shouldSuppressInCallUI
wantsStagingArea
conversationLink
callerID
showUIPrompt
sendLetMeInRequest
isJoiningConversationWithLink
audioSourceIdentifier
collaborationIdentifier
originatingUIType
participantAssociation
activity
shouldLaunchBackgroundInCallUI
remoteMembersFromURLComponents:
otherInvitedHandlesFromURLComponents:
videoEnabledFromURLComponents:
uplinkMutedFromURLComponents:
videoFromURLComponents:
shouldSuppressInCallUIFromURLComponents:
wantsStagingAreaFromURLComponents:
conversationLinkFromURLComponents:
callerIDFromURLComponents:
messagesGroupUUIDFromURLComponents:
messagesGroupNameFromURLComponents:
showUIPromptFromURLComponents:
sendLetMeInRequestFromURLComponents:
joiningConversationWithLinkFromURLComponents:
audioSourceIdentifierFromURLComponents:
originatingUITypeFromURLComponents:
collaborationIdentifierFromURLComponents:
invitationPreferencesFromURLComponents:
providerFromURLComponents:
avModeFromURLComponents:
sanitizedMembersFromMembers:
initWithProvider:remoteMemberHandles:
initWithProvider:remoteMembers:otherInvitedHandles:
initWithRemoteMembers:
initWithRemoteMembers:otherInvitedHandles:
initWithConversationLink:otherInvitedHandles:sendLetMeInRequest:
initWithConversationLink:otherInvitedHandles:remoteMembers:sendLetMeInRequest:
initWithURL:
initWithGroupUUID:localParticipantHandle:remoteParticipantHandles:
initWithUserActivity:
isEqualToRequest:
notificationStylesByHandleType
queryItems
remoteMembersQueryItem
otherInvitedHandlesQueryItem
videoEnabledQueryItem
uplinkMutedQueryItem
videoQueryItem
shouldSuppressInCallUIQueryItem
wantsStagingAreaQueryItem
conversationLinkQueryItem
callerIDQueryItem
messagesGroupUUIDQueryItem
messagesGroupNameQueryItem
showUIPromptQueryItem
sendLetMeInRequestQueryItem
joiningConversationWithLinkQueryItem
audioSourceIdentifierQueryItem
collaborationIdentifierQueryItem
invitationPreferencesQueryItem
providerQueryItem
avModeQueryItem
originatingUIQueryItem
conversationMembersForIntent:
userActivityUsingStartCallIntents
setAudioSourceIdentifier:
setShouldSuppressInCallUI:
setWantsStagingArea:
setConversationLink:
setActivity:
setShouldLaunchBackgroundInCallUI:
setOriginatingUIType:
setCallerID:
setShowUIPrompt:
setCollaborationIdentifier:
setSendLetMeInRequest:
setJoiningConversationWithLink:
setParticipantAssociation:
_shouldSuppressInCallUI
_wantsStagingArea
_shouldLaunchBackgroundInCallUI
_showUIPrompt
_sendLetMeInRequest
_joiningConversationWithLink
_originatingUIType
_audioSourceIdentifier
_conversationLink
_activity
_callerID
_collaborationIdentifier
_participantAssociation
T@"TUHandle",&,N,V_callerID
T@"NSUUID",C,N,V_messagesGroupUUID
TB,N,V_showUIPrompt
T@"NSString",&,N,V_collaborationIdentifier
TB,N,GisVideo
TB,N,V_sendLetMeInRequest
joiningConversationWithLink
TB,N,GisJoiningConversationWithLink,V_joiningConversationWithLink
T@"TUConversationParticipantAssociation",C,N,V_participantAssociation
T@"NSSet",R,C,N,V_otherInvitedHandles
T@"NSString",C,N,V_audioSourceIdentifier
TB,N,V_shouldSuppressInCallUI
TB,N,V_wantsStagingArea
T@"TUConversationLink",C,N,V_conversationLink
T@"TUConversationActivity",&,N,V_activity
TB,N,V_shouldLaunchBackgroundInCallUI
Ti,N,V_originatingUIType
isRTTSupportedForSubscription:
isRTTSupportedForSubscriptionUUID:
isTTYEnabledForSubscription:
isTTYEnabledForSubscriptionUUID:
isTTYSupportedForSubscription:
isTTYSupportedForSubscriptionUUID:
isTTYHardwareAvailableForSubscription:
isTTYHardwareAvailableForSubscriptionUUID:
isTTYHardwareEnabledForSubscription:
isTTYHardwareEnabledForSubscriptionUUID:
isTTYHardwareSupportedForSubscription:
isTTYHardwareSupportedForSubscriptionUUID:
isTTYSoftwareAvailableForSubscription:
isTTYSoftwareAvailableForSubscriptionUUID:
isTTYSoftwareEnabledForSubscription:
isTTYSoftwareEnabledForSubscriptionUUID:
isTTYSoftwareSupportedForSubscription:
isTTYSoftwareSupportedForSubscriptionUUID:
preferredTransportMethodForSubscription:
RTTSettingsClass
RTTTelephonyUtilitiesClass
sharedRTTTelephonyUtilities
enumerateDelegatesUsingBlock:
delegateLock
_delegateLock
T{os_unfair_lock_s=I},R,N,V_delegateLock
photosAssetIdentifier
initWithPhotosAppAssetIdentifier:
photoViewingAppURL
_photosAssetIdentifier
T@"NSString",R,C,N,V_photosAssetIdentifier
uniqueProxyIdentifier
sourceIdentifier
endpointIDSDestination
endpointRapportMediaSystemIdentifier
endpointRapportEffectiveIdentifier
wantsHoldMusic
pauseVideoToStart
downgradeToAudio
behavior
localLandscapeAspectRatio
localPortraitAspectRatio
dateAnswered
setUniqueProxyIdentifier:
T@"NSString",C,N
setLocalLandscapeAspectRatio:
setLocalPortraitAspectRatio:
T{CGSize=dd},N
initWithUniqueProxyIdentifier:
initWithCall:
setSourceIdentifier:
setEndpointIDSDestination:
setEndpointRapportMediaSystemIdentifier:
setEndpointRapportEffectiveIdentifier:
setWantsHoldMusic:
setPauseVideoToStart:
setDowngradeToAudio:
setBehavior:
setDateAnswered:
allowBluetoothAnswerWithoutDowngrade
setAllowBluetoothAnswerWithoutDowngrade:
_wantsHoldMusic
_pauseVideoToStart
_downgradeToAudio
_allowBluetoothAnswerWithoutDowngrade
_uniqueProxyIdentifier
_sourceIdentifier
_endpointIDSDestination
_endpointRapportMediaSystemIdentifier
_endpointRapportEffectiveIdentifier
_behavior
_dateAnswered
_localLandscapeAspectRatio
_localPortraitAspectRatio
T@"NSDate",&,N,V_dateAnswered
TB,N,V_allowBluetoothAnswerWithoutDowngrade
T@"NSString",C,N,V_sourceIdentifier
T@"IDSDestination",&,N,V_endpointIDSDestination
T@"NSString",&,N,V_endpointRapportMediaSystemIdentifier
T@"NSString",&,N,V_endpointRapportEffectiveIdentifier
TB,N,V_wantsHoldMusic
TB,N,V_pauseVideoToStart
TB,N,V_downgradeToAudio
Tq,N,V_behavior
T@"NSString",C,N,V_uniqueProxyIdentifier
T{CGSize=dd},N,V_localLandscapeAspectRatio
T{CGSize=dd},N,V_localPortraitAspectRatio
T@"TUMetadataClientController",R,N
suggestionForDestinationID:
locationForDestinationID:
directoryLabelForDestinationID:
suggestionForSearchItem:
locationForSearchItem:
directoryLabelForSearchItem:
_metadataDestinationIdForSearchItem:
updateMetadataForCall:
updateMetadataForRecentCalls:
updateMetadataForDestinationID:
metadataCache
setMetadataCache:
_metadataCache
T@"TUMetadataCache",&,N,V_metadataCache
initWithString:
setValue:
T@"NSString",&,N,V_value
setVideoLayer:forMode:
initWithVideoContextSlotIdentifier:
insertSubLayerInLayer:videoSlotIdentifier:
nameForSubLayer
cleanUpSubLayerForLayer:
videoContextSlotIdentifier
videoLayer
setVideoLayer:
_videoContextSlotIdentifier
_videoLayer
Tq,R,N,V_videoContextSlotIdentifier
T@"CALayer",&,N,V_videoLayer
route
initWithDictionary:
isHandset
bluetoothProductIdentifier
isHeadphoneJackConnected
_routeTypeEqualTo:
avAudioRouteName
_avAudioRouteName
_route
T@"NSString",R,C,N,V_avAudioRouteName
headphoneJackConnected
TB,R,N,GisHeadphoneJackConnected
T@"NSDictionary",R,C,N,V_route
updateProvidersByIdentifier:localProvidersByIdentifier:pairedHostDeviceProvidersByIdentifier:
providersByIdentifier:
donateUserIntentForProviderWithIdentifier:
launchAppForDialRequest:reply:
callProviderManagerAllowedClasses
callProviderManagerClientXPCInterface
callProviderManagerServerXPCInterface
openURL:isSensitive:error:
launchAppForDialRequest:completion:
blockUntilInitialStateReceived
currentProcessCanAccessInitialState
providersByIdentifier
localProvidersByIdentifier
pairedHostDeviceProvidersByIdentifier
T@"<TUCallProviderManagerDataSourceDelegate>",W,N
T@"<TUCallProviderManagerXPCServer>",&,N
server
_updateProvidersByIdentifier:localProvidersByIdentifier:pairedHostDeviceProvidersByIdentifier:
setQueue:
requestedInitialState
setRequestedInitialState:
setProvidersByIdentifier:
setLocalProvidersByIdentifier:
setPairedHostDeviceProvidersByIdentifier:
_requestedInitialState
_providersByIdentifier
_localProvidersByIdentifier
_pairedHostDeviceProvidersByIdentifier
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
TB,N,V_requestedInitialState
T@"NSDictionary",C,N,V_providersByIdentifier
T@"NSDictionary",C,N,V_localProvidersByIdentifier
T@"NSDictionary",C,N,V_pairedHostDeviceProvidersByIdentifier
T@"<TUCallProviderManagerDataSourceDelegate>",W,N,V_delegate
suggestedName
label
contactName
mapName
location
callDirectoryLabel
callDirectoryLocalizedExtensionContainingAppName
callDirectoryExtensionIdentifier
contactIdentifiers
contactIdentifier
setContactIdentifier:
firstName
setFirstName:
displayContextByMergingWithDisplayContext:
setPersonNameComponents:
setSuggestedName:
setMapName:
setLocation:
setContactName:
setCallDirectoryLabel:
setCallDirectoryLocalizedExtensionContainingAppName:
setCallDirectoryExtensionIdentifier:
setContactIdentifiers:
setLabel:
_personNameComponents
_suggestedName
_mapName
_location
_contactName
_callDirectoryLabel
_callDirectoryLocalizedExtensionContainingAppName
_callDirectoryExtensionIdentifier
_contactIdentifiers
_label
T@"NSPersonNameComponents",C,N,V_personNameComponents
T@"NSString",C,N,V_suggestedName
T@"NSString",C,N,V_label
T@"NSString",C,N,V_mapName
T@"NSString",C,N,V_location
T@"NSString",C,N,V_contactName
T@"NSString",C,N,V_callDirectoryLabel
T@"NSString",C,N,V_callDirectoryLocalizedExtensionContainingAppName
T@"NSString",C,N,V_callDirectoryExtensionIdentifier
T@"NSArray",C,N,V_contactIdentifiers
mergeValuesFromDisplayContext:
T@"NSPersonNameComponents",C,D,N
silenceUnknownCallersEnabled
silenceUnknownFaceTimeCallersEnabled
isUnknownHandle:
shouldRestrictDialRequest:
shouldRestrictDialRequest:performSynchronously:
callFilterStatusForDialRequest:
restrictedContacts:callProvider:
policyForAddresses:forBundleIdentifier:
containsRestrictedHandle:forBundleIdentifier:
addressesToCheckForRestrictionsInConversation:
shouldRestrictConversation:performSynchronously:
shouldRestrictAddresses:performSynchronously:
containsRestrictedHandle:forBundleIdentifier:performSynchronously:
shouldRestrictJoinConversationRequest:performSynchronously:
shouldRestrictAddresses:forBundleIdentifier:performSynchronously:
shouldRestrictAddresses:forBundleIdentifier:
willRestrictAddresses:forBundleIdentifier:
isUnknownAddress:normalizedAddress:forBundleIdentifier:
bundleIdentifierForCallProvider:
T@"<TUCallFilterControllerActions>",R,W,N,V_actionsDelegate
dataProvider:requestedRefreshWithDestinationIDs:
classIdentifier
metadataForDestinationID:
setObject:forDestinationID:
refresh
isEmpty
providerCache
_providerCache
T@"NSMutableDictionary",R,N,V_providerCache
T@"<TUMetadataCacheDataProviderDelegate>",W,N,V_delegate
empty
TB,R,N,GisEmpty
conversationOneToOneModeEnabled
conversationHandoffEnabled
vouchingEnabled
addTVAsActiveParticipant
groupFacetimeAsAServiceEnabled
filterGFTaaSCalls
offrampEnabled
uNNotificationsMacOSEnabled
expanseEnabled
sharePlayDisabled
sharePlayDiscoverabilityEnabled
sharePlayWithAirplayEnabled
ftvSpatialAudioEnabled
FTUserScore
livePhotoXPCServiceEnabled
nonInterruptingCalls
qrPluginEncryptionEnabled
unreliableMessengerEnabled
supportsScreenSharing
individualAudioVideoToggleEnabled
expanseBTSwitchingEnabled
TTRBannerEnabled
aTVHandoff
suggestionsReloadForSelectedRecipients
gftDowngradeToOneToOne
uPlusNDowngrade
requestA2DPOverIncomingCalls
mochiEnabled
screenCaptureKitEnabled
avLessSharePlayEnabled
continuityCaptureEnabled
avcCameraSelectionEnabled
greenTeaLinksEnabled
screenSharingCALayerHostMode
screenSharingDeskViewEnabled
screenSharingDeskViewSqueegeeEnabled
gameCenterSharePlayIntegration
expanseEnabledForTV
expanseEnabledForMusic
providerConfiguration
expanseProvider
faceTimeProvider
unknownProvider
matchesDefaultProviderIdentifier:
providerForIdentifier:
T@"TUConversationProvider",R,N
isDefaultProvider
initWithConfiguration:
initWithConversationProvider:
defaultAVMode
supportsVideo
supportsLinks
pseudonymFeatureID
isEqualToConversationProvider:
_providerConfiguration
T@"NSArray",R,C,N,V_supportedMediaTypes
T@"TUConversationProviderConfiguration",R,N,V_providerConfiguration
T@"NSString",R,C,N,V_identifier
originatorHandle
invitedMemberHandles
linkName
userConfiguration
conversationLinkComponentsFromURL:
conversationLinkForURL:
baseURLStrings
baseURLs
preferredBaseURLString
preferredBaseURL
baseURLComponentsForURL:
conversationLinkVersion
prefixedPseudonymFor:
publicKeyForBase64EncodedString:
checkMatchingConversationLinkCriteriaForURL:
T@"TUUserConfiguration",R,N
canCreateConversations
initWithDescriptor:
initWithPseudonym:publicKey:groupUUID:originatorHandle:
initWithPseudonym:publicKey:groupUUID:originatorHandle:creationDate:expirationDate:invitedMemberHandles:locallyCreated:linkName:linkLifetimeScope:
URLFragment
unprefixedPseudonym
base64PublicKey
isEquivalentToConversationLink:
isEquivalentToPseudonym:andPublicKey:
isEqualToConversationLink:
valueForKey:
setOriginatorHandle:
setURLFragment:
setLinkName:
setInvitedMemberHandles:
_originatorHandle
_URLFragment
_linkName
_invitedMemberHandles
T@"TUHandle",&,N,V_originatorHandle
T@"NSString",&,N,V_URLFragment
T@"NSString",C,N,V_linkName
T@"NSSet",C,N,V_invitedMemberHandles
supportsHolding
supportsGrouping
supportsUngrouping
supportsDTMF
supportsUnambiguousMultiPartyState
supportsAddCall
supportsSendingToVoicemail
setSupportsHolding:
setSupportsGrouping:
setSupportsUngrouping:
setSupportsDTMF:
setSupportsUnambiguousMultiPartyState:
setSupportsAddCall:
setSupportsSendingToVoicemail:
_supportsHolding
_supportsGrouping
_supportsUngrouping
_supportsDTMF
_supportsUnambiguousMultiPartyState
_supportsAddCall
_supportsSendingToVoicemail
TB,N,V_supportsHolding
TB,N,V_supportsGrouping
TB,N,V_supportsUngrouping
TB,N,V_supportsDTMF
TB,N,V_supportsUnambiguousMultiPartyState
TB,N,V_supportsAddCall
TB,N,V_supportsSendingToVoicemail
callStatusChangedNotification:
initWithCallCenter:
report:withConversation:
rtcCallInfoDictionary:withConversation:
reportingSessionForCall:withConversation:
clientName:
serviceName:withConversation:
callUUIDToConversation
callCenter
_callUUIDToConversation
_callCenter
T@"NSMutableDictionary",R,N,V_callUUIDToConversation
T@"TUCallCenter",R,N,V_callCenter
enablePhoneLogging
disablePhoneLogging
registerForShouldLogChangedNotification
unregisterForShouldLogChangedNotification
sendDirectoryToCrashReporter:error:
mediaController:participantMediaPrioritiesChangedForConversation:
mediaPrioritiesChangeForConversation:
initWithConversationDataSource:
updateConversationWithUUID:participantPresentationContexts:
T@"<TUConversationManagerDataSource>",R,N,V_dataSource
T@"<TUConversationMediaControllerDelegate>",W,N,V_delegate
virtualParticipantConfig
unreliableMessengerConfig
setVirtualParticipantConfig:
setUnreliableMessengerConfig:
_virtualParticipantConfig
_unreliableMessengerConfig
T@"TUConversationVirtualParticipantConfig",C,N,V_virtualParticipantConfig
T@"TUConversationUnreliableMessengerConfig",C,N,V_unreliableMessengerConfig
isSuggested
initWithHandle:label:isSuggested:
isEqualToLabeledHandle:
_isSuggested
T@"NSString",R,C,N,V_label
TB,R,N,V_isSuggested
_destinationIDConvertingNumbersToLatin:
phoneNumber
addressBookUID
callService
originatingUIIdentifier
forceAssist
suppressAssist
wasAlreadyAssisted
_dialAssistBooleanQueryParameterValueForKey:
isTelephonyURL
isTelephonyPromptURL
hasTelephonyScheme
_hasScheme:
formattedPhoneNumber
isWebSafeTelephoneURL
webSafeTelephoneURL
isBasebandLogURL
isEmergencyURL
isEmergencyCallURL
isVoicemailURL
telephonyParameterDictionary
_mobilePhonePathParameters
_mobilePhoneQueryParameters
telephonyURLWithDestinationID:
telephonyURLWithDestinationID:promptUser:
telephonyURLWithDestinationID:addressBookUID:
telephonyURLWithDestinationID:addressBookUID:forceAssist:suppressAssist:wasAssisted:
telephonyURLForVoicemail
telephonyURLForTelEmergencyCall
Ti,R
basebandLogURL
TB,R,N,GisBasebandLogURL
isPrimary
initWithMemberAssociation:
initWithHandle:type:primary:
isEqualToAssociation:
setType:
setPrimary:
_primary
Tq,N,V_type
primary
TB,N,GisPrimary,V_primary
TQ,N,V_identifier
initWithSearchTerm:shouldAddAdhocResults:
numberOfSections
numberOfResults
resultGroupForSection:
_clearCaches
finalizeSearchResults
removeDuplicateResults
addAdhocResultGroup
addResultGroup:
addSearchResults:
removeSearchItem:
numberOfTableViewRows
allDataItems
searchTerm
setSearchTerm:
resultGroups
setResultGroups:
allSearchItemsCache
setAllSearchItemsCache:
allDataItemsCache
setAllDataItemsCache:
_searchTerm
_resultGroups
_allSearchItemsCache
_allDataItemsCache
T@"NSString",&,N,V_searchTerm
T@"NSMutableArray",&,N,V_resultGroups
T@"NSMutableArray",&,N,V_allSearchItemsCache
T@"NSMutableArray",&,N,V_allDataItemsCache
initWithTitle:results:
results
groupType
resultsCache
setResultsCache:
_resultsCache
T@"TUGroupTitle",&,N,V_title
T@"NSMutableArray",&,N,V_resultsCache
tu_contactsByContactHandleForContactHandles:keyDescriptors:error:
tu_enumeratorForChangeHistoryFetchRequest:error:
tu_authorizationStatus
tu_isAuthorized
tu_contactStore
tu_authorized
TB,R,N,Gtu_isAuthorized
T@"CNContactStore",R,N
count
_defaultRepliesForSending:
defaultReplies
customReplies
_cannedRepliesForSending:
cannedReplies
cannedReplyActionSheetOptions
cannedRepliesForSending
setCustomReply:atIndex:
_handleMessagesStoreChanged
connectionRetryIntervalMillis
connectionMaxAttempts
rpcStreamRetryIntervalMillis
rpcStreamMaxAttempts
serverCertValidationEnabled
serverCertHostnameOverride
serverCertLeafMarkerOIDOverride
idsAliasingSalt
serverCertValidationEnabledUserDefaultsKey
serverCertHostnameUserDefaultsKey
serverCertLeafMarkerOIDUserDefaultsKey
initWithConnectionRetryIntervalMillis:connectionMaxAttempts:rpcStreamRetryIntervalMillis:rpcStreamMaxAttempts:serverCertValidationEnabled:serverCertHostnameOverride:serverCertLeafMarkerOIDOverride:
isEqualToConversationVirtualParticipantConfig:
setIdsAliasingSalt:
_serverCertValidationEnabled
_connectionRetryIntervalMillis
_connectionMaxAttempts
_rpcStreamRetryIntervalMillis
_rpcStreamMaxAttempts
_serverCertHostnameOverride
_serverCertLeafMarkerOIDOverride
_idsAliasingSalt
TQ,R,N,V_connectionRetryIntervalMillis
TQ,R,N,V_connectionMaxAttempts
TQ,R,N,V_rpcStreamRetryIntervalMillis
TQ,R,N,V_rpcStreamMaxAttempts
TB,R,N,V_serverCertValidationEnabled
T@"NSString",R,C,N,V_serverCertHostnameOverride
T@"NSString",R,C,N,V_serverCertLeafMarkerOIDOverride
T@"NSData",C,N,V_idsAliasingSalt
queryItemForHandleType:
queryItemValueForHandleType:
participantIdentifier
videoQuality
visibility
prominence
spatialPosition
isInCanvas
initWithParticipantIdentifier:videoQuality:visibility:prominence:spatialPosition:isInCanvas:
_isInCanvas
_participantIdentifier
_videoQuality
_visibility
_prominence
_spatialPosition
TQ,R,N,V_participantIdentifier
TQ,R,N,V_videoQuality
T@"NSNumber",R,N,V_visibility
T@"NSNumber",R,N,V_prominence
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_spatialPosition
TB,R,N,V_isInCanvas
tu_assumedIdentity
tu_assumedIdentityForBundleIdentifier:
propertiesDidChangeForConfiguration:
registeredDefaults
userDefaults
synchronize
observeValueForKeyPath:ofObject:change:context:
handleFrequencyChangedTo:inDirection:forCallsWithUniqueProxyIdentifiers:
handleMeterLevelChangedTo:inDirection:forCallsWithUniqueProxyIdentifiers:
handleCurrentCallsChanged:callDisconnected:
resetCallProvisionalStates
handleNotificationName:forCallWithUniqueProxyIdentifier:userInfo:
handleLocalRoutesByUniqueIdentifierUpdated:
handlePairedHostDeviceRoutesByUniqueIdentifierUpdated:
answerCallWithRequest:
holdCallWithUniqueProxyIdentifier:
unholdCallWithUniqueProxyIdentifier:
requestVideoUpgradeForCallWithUniqueProxyIdentifier:
disconnectCallWithUniqueProxyIdentifier:
groupCallWithUniqueProxyIdentifier:withOtherCallWithUniqueProxyIdentifier:
ungroupCallWithUniqueProxyIdentifier:
swapCalls
playDTMFToneForCallWithUniqueProxyIdentifier:key:
disconnectCurrentCallAndActivateHeld
disconnectAllCalls
setTTYType:forCallWithUniqueProxyIdentifier:
pullRelayingCallsFromClient
pushRelayingCallsToHostWithSourceIdentifier:
pushHostedCallsToDestination:
pullHostedCallsFromPairedHostDevice
sendHardPauseDigitsForCallWithUniqueProxyIdentifier:
updateCallWithProxy:
enteredForegroundForCallWithUniqueProxyIdentifier:
willEnterBackgroundForAllCalls
enteredBackgroundForAllCalls
setRemoteVideoPresentationSizeForCallWithUniqueProxyIdentifier:size:
setRemoteVideoPresentationStateForCallWithUniqueProxyIdentifier:presentationState:
sendMMIOrUSSDCodeWithRequest:
setUplinkMuted:forCallWithUniqueProxyIdentifier:
setDownlinkMuted:forCallWithUniqueProxyIdentifier:
setIsSendingVideo:forCallWithUniqueProxyIdentifier:
setMixesVoiceWithMedia:forCallWithUniqueProxyIdentifier:
setSharingScreen:forCallWithUniqueProxyIdentifier:
setScreenShareAttributesForCallWithUniqueProxyIdentifier:attributes:
setSharingScreen:attributes:forCallWithUniqueProxyIdentifier:
setBluetoothAudioFormatForCallWithUniqueProxyIdentifier:bluetoothAudioFormat:
shouldSuppressInCallStatusBar:
shouldAllowRingingCallStatusIndicator:
activateInCallUIWithActivityContinuationIdentifier:
sendUserScoreToRTCReporting:withScore:
setClientCapabilities:
routesByUniqueIdentifierForRouteController:
pickRouteWithUniqueIdentifier:shouldWaitUntilAvailable:forRouteController:
filterStatusForAddresses:forBundleIdentifier:
initWithQueue:callCenter:
isServerLocal
hasServerLaunched
_setUpXPCConnection
_tearDownXPCConnection
_ignorePendingServerDisconnectionHandlers
_registerCall:
_updateCurrentCalls:
_updateCurrentCallsWithoutNotifications:
_updateCurrentCalls:withNotificationsUsingUpdatedCalls:
_proxyCallWithCall:
_proxyCallWithUniqueProxyIdentifier:
queueContext
performBlockOnQueue:
performBlockOnQueue:andWait:
registerCall:
tearDownXPCConnection
requestCurrentStateWithCompletionHandler:handleInitialState:
requestCurrentStateWithCompletionHandler:
fetchCurrentCalls
waitForInitialStateIfNecessary
handleServerDisconnectIfNecessary
callContainer
dialWithRequest:completion:
joinConversationWithRequest:
reportLocalPreviewStoppedForCallWithUniqueProxyIdentifier:
pullCallFromClientUsingHandoffActivityUserInfo:completion:
_handleCurrentCallsChanged:callsDisconnected:
setServer:
callServicesClientCapabilities
setCallCenter:
localRouteController
setLocalRouteController:
pairedHostDeviceRouteController
setPairedHostDeviceRouteController:
lastDaemonConnectTime
setLastDaemonConnectTime:
connectionRequestNotificationToken
hasRequestedInitialState
setHasRequestedInitialState:
hasReceivedInitialState
setHasReceivedInitialState:
shouldHandleServerDisconnect
setShouldHandleServerDisconnect:
setCurrentCalls:
uniqueProxyIdentifierToProxyCall
callNotificationManager
localProxyCalls
setLocalProxyCalls:
setHasServerLaunched:
_hasRequestedInitialState
_hasReceivedInitialState
_shouldHandleServerDisconnect
_hasServerLaunched
_connectionRequestNotificationToken
_server
_callServicesClientCapabilities
_localRouteController
_pairedHostDeviceRouteController
_lastDaemonConnectTime
_currentCalls
_uniqueProxyIdentifierToProxyCall
_callNotificationManager
_localProxyCalls
T^v,R,N
Ti,R,N,V_connectionRequestNotificationToken
TB,N,V_hasRequestedInitialState
TB,N,V_hasReceivedInitialState
TB,N,V_shouldHandleServerDisconnect
T@"NSArray",C,N,V_currentCalls
T@"NSMapTable",R,N,V_uniqueProxyIdentifierToProxyCall
T@"TUCallNotificationManager",R,N,V_callNotificationManager
T@"TUFeatureFlags",R,N,V_featureFlags
T@"NSArray",C,N,V_localProxyCalls
serverLocal
TB,R,N,GisServerLocal
TB,N,V_hasServerLaunched
T@"TUCallCenter",W,N,V_callCenter
T@"<TUCallServicesXPCServer>",R,N
T@"<TUCallServicesXPCServer>",W,N,V_server
T@"TUCallServicesClientCapabilities",R,N,V_callServicesClientCapabilities
T@"TURouteController",&,N,V_localRouteController
T@"TURouteController",&,N,V_pairedHostDeviceRouteController
T@"<TUCallContainerPrivate>",R,N
T@"NSDate",N,V_lastDaemonConnectTime
setMetadata:forProvider:
metadataForProvider:
callMetadata
_callMetadata
T@"NSMutableDictionary",R,N,V_callMetadata
metadataDestinationIDForCall:
initWithDestinationID:isoCountryCode:
isEqualToMetadataDestinationID:
isScreenSharingAvailable
isGondolaCallingAvailable
isMirageAvailable
isGFTDowngradeToOneToOneAvailable
isUPlusNDowngradeAvailable
sharePlayProtocolVersion
setScreenSharingAvailable:
setGondolaCallingAvailable:
setMirageAvailable:
setGftDowngradeToOneToOneAvailable:
setUPlusNDowngradeAvailable:
setSharePlayProtocolVersion:
_screenSharingAvailable
_gondolaCallingAvailable
_mirageAvailable
_gftDowngradeToOneToOneAvailable
_uPlusNDowngradeAvailable
_sharePlayProtocolVersion
screenSharingAvailable
TB,N,GisScreenSharingAvailable,V_screenSharingAvailable
gondolaCallingAvailable
TB,N,GisGondolaCallingAvailable,V_gondolaCallingAvailable
mirageAvailable
TB,N,GisMirageAvailable,V_mirageAvailable
gftDowngradeToOneToOneAvailable
TB,N,GisGFTDowngradeToOneToOneAvailable,V_gftDowngradeToOneToOneAvailable
uPlusNDowngradeAvailable
TB,N,GisUPlusNDowngradeAvailable,V_uPlusNDowngradeAvailable
TQ,N,V_sharePlayProtocolVersion
TB,D,N,GisScreenSharingAvailable
TB,D,N,GisGondolaCallingAvailable
TB,D,N,GisMirageAvailable
TB,D,N,GisGFTDowngradeToOneToOneAvailable
TB,D,N,GisUPlusNDowngradeAvailable
refreshIDStatusForDestinations:service:listenerID:queue:completionBlock:
requiredIDStatusForDestinations:service:listenerID:queue:completionBlock:
currentIDStatusForDestinations:service:listenerID:queue:completionBlock:
currentRemoteDevicesForDestinations:service:listenerID:queue:completionBlock:
setDestinations:
sharedManager
isAnyDestinationAvailableInDestinations:usingCache:
fzHandleIDStatusForDestination:usingCache:
batchQueryController:updatedDestinationsStatus:onService:error:
idStatusUpdatedForDestinations:
idStatusUpdatedForDestinations:service:
T@"TUIDSLookupManager",R,N
initWithQueryController:
batchQuerySearchVideoController
batchQuerySearchAudioController
batchQuerySearchMultiwayController
batchQuerySearchiMessageController
isFaceTimeVideoAvailableForItem:
isFaceTimeAudioAvailableForItem:
isFaceTimeMultiwayAvailableForItem:
isFaceTimeVideoAvailableForAnyDestinationInDestinations:
isFaceTimeAudioAvailableForAnyDestinationInDestinations:
isFaceTimeMultiwayAvailableForAnyDestinationInDestinations:
isiMessageAvailableForAnyDestinationInDestinations:
isAVLessSharePlayCapableForAnyDestinationInDestinations:
faceTimeAudioAvailabilityForDestination:
faceTimeVideoAvailabilityForDestination:
faceTimeMultiwayAvailabilityForDestination:
isModernFaceTimeAvailableForDestination:
isWebCapableFaceTimeAvailableForDestination:
cancelQueries
beginQueryWithDestinations:
beginQueryWithDestinations:includeMessages:
beginQueryWithDestination:onService:
beginBatchQueryWithDestinations:
beginBatchQueryWithDestinations:includeMessages:
beginCachedQueryWithDestinations:
beginCachedQueryWithDestinations:includeMessages:
beginCachedQueryWithDestinations:onService:
postStatusChangedNotification
handleIDSQueryResultWithDestinationStatus:onService:
filteredDestinationForMultiway:completionBlock:
queryHasWebOnlyEndpointsForDestinations:completionBlock:
queryHasEndpointWithCapabilities:forMultiwayDestinations:completionBlock:
queryController
idsFaceTimeVideoStatuses
idsFaceTimeAudioStatuses
idsFaceTimeMultiwayStatuses
idsiMessageStatuses
idsModernStatuses
idsWebCapableStatuses
idsAVLessSharePlayCapableStatuses
setBatchQuerySearchVideoController:
setBatchQuerySearchAudioController:
setBatchQuerySearchMultiwayController:
setBatchQuerySearchiMessageController:
batchQueryControllerCreationBlock
setBatchQueryControllerCreationBlock:
_queryController
_idsFaceTimeVideoStatuses
_idsFaceTimeAudioStatuses
_idsFaceTimeMultiwayStatuses
_idsiMessageStatuses
_idsModernStatuses
_idsWebCapableStatuses
_idsAVLessSharePlayCapableStatuses
_batchQuerySearchVideoController
_batchQuerySearchAudioController
_batchQuerySearchMultiwayController
_batchQuerySearchiMessageController
_batchQueryControllerCreationBlock
T@"<TUIDSIDQueryController>",R,N,V_queryController
T@"TULocked",R,N,V_idsFaceTimeVideoStatuses
T@"TULocked",R,N,V_idsFaceTimeAudioStatuses
T@"TULocked",R,N,V_idsFaceTimeMultiwayStatuses
T@"TULocked",R,N,V_idsiMessageStatuses
T@"TULocked",R,N,V_idsModernStatuses
T@"TULocked",R,N,V_idsWebCapableStatuses
T@"TULocked",R,N,V_idsAVLessSharePlayCapableStatuses
T@"<TUIDSBatchIDQueryController>",&,N,V_batchQuerySearchVideoController
T@"<TUIDSBatchIDQueryController>",&,N,V_batchQuerySearchAudioController
T@"<TUIDSBatchIDQueryController>",&,N,V_batchQuerySearchMultiwayController
T@"<TUIDSBatchIDQueryController>",&,N,V_batchQuerySearchiMessageController
T@?,C,N,V_batchQueryControllerCreationBlock
subscriptionForLabelIdentifier:
subscriptionForUUID:
T@"CoreTelephonyClient",R,N,V_client
T@"TUSearchController",R,N
contactStore
recentsWithCompletion:
_cancelRecentSearches
_cancelSearchsForSearchTerm:
_fetchIdsDestinationsIfNeeded:withReason:
_clearIdsDestinations
recentsModuleCompletionWithCompletion:
searchModuleCompletionWithSearchTerm:completion:
_searchModuleCompletionWithModules:searchTerm:resultsClass:completion:
setContactStore:
searchModules
setSearchModules:
recentsModules
setRecentsModules:
searchQueue
setSearchQueue:
_searchModulesLock
_idsDestinations
_contactStore
_searchModules
_recentsModules
_searchQueue
T@"CNContactStore",&,N,V_contactStore
T@"NSMutableDictionary",&,N,V_searchModules
T@"NSMutableArray",&,N,V_recentsModules
T@"NSObject<OS_dispatch_queue>",&,N,V_searchQueue
canEnable
setCanEnable:
canEnableRoaming
setCanEnableRoaming:
_canEnable
_canEnableRoaming
TB,N,V_canEnable
TB,N,V_canEnableRoaming
TB,R,N,GisProvisioningURLInvalid
tu_anyObjectPassingTest:
tu_containsObjectPassingTest:
registeredStream:withAvailability:reply:
didCleanUpForStream:reply:
didStartRequestForStream:withTransactionID:reply:
didReceiveResultsForStream:withTransactionID:reply:
reportingControllerServerXPCInterface
T@"<TUReportingControllerXPCServer>",&,N
approveSplitSessionForConversation:requestedFromDevice:pullContext:completion:
nearbyTVDevicesWithCompletion:
activeSplitSessionTVDeviceWithCompletion:
registerSplitSessionApprovalEnabled:
allowedXPCClasses
neighborhoodActivityClientXPCInterface
neighborhoodActivityServerXPCInterface
ensureConnection
inviteTVDevice:toConversationWithUUID:completion:
registerApprovalClientEnabled:
T@"<TUNeighborhoodActivityConduitXPCClientDelegate>",W,N,V_delegate
participantAssociationFromURLComponents:namePrefix:
identifierFromURLComponents:namePrefix:
queryItemName:prefix:
avcIdentifierFromURLComponents:namePrefix:
initWithParticipantAssociation:
isEqualToParticipantAssociation:
queryItemsWithNamePrefix:
identifierQueryItemWithNamePrefix:
avcIdentifierQueryItemWithNamePrefix:
initWithCategory:mode:
isEqualToAudioRouteCollectionKey:
category
mode
_category
_mode
T@"NSString",R,C,N,V_category
T@"NSString",R,C,N,V_mode
frequencyController:audioPowerChanged:forParticipantWithStreamToken:
frequencyController:rawValueForAudioPowerChanged:forParticipantWithStreamToken:
normalizedPowerLevelForPowerSpectrum:
rawPowerLevelForPowerSpectrum:
audioPowerSpectrumMeter:didUpdateAudioPowerSpectrums:
audioPowerSpectrumMeter:didUpdateLocalAudioPowerSpectrum:remoteAudioPowerSpectrums:
meterServerDidDisconnect:
meterSpectrumCaptureWasInterrupted:
initWithDelegate:queue:
registerParticipantPowerSpectrum:
unregisterParticipantPowerSpectrum:
registerCellularPowerSpectrum:
unregisterCellularPowerSpectrum:
_avcTapTypeForTUTapType:
powerSpectrumMeter
_powerSpectrumMeter
T@"<TUAudioFrequencyControllerDelegate>",R,W,N,V_delegate
T@"AVCAudioPowerSpectrumMeter",R,N,V_powerSpectrumMeter
attemptToPlaySoundType:forCall:
attemptToPlaySoundType:forCall:completion:
attemptToPlayDescriptor:
attemptToPlayDescriptor:completion:
currentlyPlayingSoundType
setCurrentlyPlayingSoundType:
player
setPlayer:
_currentlyPlayingSoundType
_player
T@"TUSoundPlayer",&,N,V_player
Tq,N,V_currentlyPlayingSoundType
initWithSoundType:sound:iterations:pauseDuration:
initWithSoundType:call:
initWithSoundType:provider:video:region:
soundType
setSoundType:
sound
setSound:
iterations
setIterations:
_soundType
_sound
_iterations
Tq,N,V_soundType
T@"NSNumber",&,N,V_sound
TQ,N,V_iterations
sandboxExtensionToken
initWithURL:withExtensionType:
isEqualToSandboxExtendedURL:
setPid:
sandboxExtensionClass
setSandboxExtensionClass:
setURL:
setSandboxExtensionToken:
sandboxExtensionHandle
setSandboxExtensionHandle:
_pid
_sandboxExtensionClass
_URL
_sandboxExtensionToken
_sandboxExtensionHandle
T@"NSURL",&,N,V_URL
T@"NSString",C,N,V_sandboxExtensionToken
Tq,N,V_sandboxExtensionHandle
Ti,N,V_pid
T@"NSString",C,N,V_sandboxExtensionClass
senderIdentityCapabilitiesStateByUUID
defaultPairedDevice
setSupportsPrimaryCalling:
setSupportsBasebandCalling:
supportsCellularData
setSupportsCellularData:
setSupportsDisplayingTelephonyCalls:
setSupportsDisplayingFaceTimeAudioCalls:
setSupportsDisplayingFaceTimeVideoCalls:
setFaceTimeAudioAvailable:
setFaceTimeVideoAvailable:
setCtCapabilitiesValid:
setAccountsMatchForSecondaryCalling:
setAccountsSupportSecondaryCalling:
setSupportsRelayCalling:
setRelayCallingFeaturesEnabled:
setRelayCallingAvailability:
relayCallingDisabledForDeviceID
setRelayCallingDisabledForDeviceID:
setOutgoingRelayCallerID:
setSupportsTelephonyRelayCalling:
setSupportsFaceTimeAudioRelayCalling:
setSupportsFaceTimeVideoRelayCalling:
setCloudCallingDevices:
setEmergencyCallbackModeEnabled:
setEmergencyCallbackPossible:
setSenderIdentityCapabilitiesStateByUUID:
_supportsPrimaryCalling
_supportsBasebandCalling
_supportsCellularData
_supportsDisplayingTelephonyCalls
_supportsDisplayingFaceTimeAudioCalls
_supportsDisplayingFaceTimeVideoCalls
_faceTimeAudioAvailable
_faceTimeVideoAvailable
_ctCapabilitiesValid
_accountsMatchForSecondaryCalling
_accountsSupportSecondaryCalling
_supportsRelayCalling
_relayCallingEnabled
_relayCallingFeaturesEnabled
_supportsTelephonyRelayCalling
_supportsFaceTimeAudioRelayCalling
_supportsFaceTimeVideoRelayCalling
_emergencyCallbackModeEnabled
_emergencyCallbackPossible
_relayCallingAvailability
_relayCallingDisabledForDeviceID
_outgoingRelayCallerID
_cloudCallingDevices
_senderIdentityCapabilitiesStateByUUID
TB,N,V_supportsPrimaryCalling
TB,N,V_supportsBasebandCalling
TB,N,V_supportsCellularData
TB,N,V_supportsDisplayingTelephonyCalls
TB,N,V_supportsDisplayingFaceTimeAudioCalls
TB,N,V_supportsDisplayingFaceTimeVideoCalls
faceTimeAudioAvailable
TB,N,GisFaceTimeAudioAvailable,V_faceTimeAudioAvailable
faceTimeVideoAvailable
TB,N,GisFaceTimeVideoAvailable,V_faceTimeVideoAvailable
ctCapabilitiesValid
TB,N,GareCTCapabilitiesValid,V_ctCapabilitiesValid
TB,N,V_accountsMatchForSecondaryCalling
TB,N,V_accountsSupportSecondaryCalling
TB,N,V_supportsRelayCalling
TB,N,GisRelayCallingEnabled,V_relayCallingEnabled
relayCallingFeaturesEnabled
TB,N,GareRelayCallingFeaturesEnabled,V_relayCallingFeaturesEnabled
Ti,N,V_relayCallingAvailability
T@"NSDictionary",C,N,V_relayCallingDisabledForDeviceID
T@"NSString",C,N,V_outgoingRelayCallerID
TB,N,V_supportsTelephonyRelayCalling
TB,N,V_supportsFaceTimeAudioRelayCalling
TB,N,V_supportsFaceTimeVideoRelayCalling
T@"NSArray",C,N,V_cloudCallingDevices
T@"TUCloudCallingDevice",R,N
TB,N,GisEmergencyCallbackModeEnabled,V_emergencyCallbackModeEnabled
TB,N,GisEmergencyCallbackPossible,V_emergencyCallbackPossible
T@"NSDictionary",C,N,V_senderIdentityCapabilitiesStateByUUID
methodSignatureForSelector:
isEqualToCallGroup:
status
forwardInvocation:
T@"NSArray",R,C,N,V_calls
bargeCallWithStatus:
bargeCalls
bargeCallWithUniqueProxyIdentifier:
bargeCallsPassingTest:
enumerateBargeCallsInvokingBlock:forCallsPassingTest:
frontmostBargeCall
defaultProviders
serviceForProvider:video:
providersChangedForDataSource:
initWithLocalProviders
initWithPairedHostDeviceProviders
initWithType:
initWithDataSource:type:queue:
defaultProvider
voicemailProvider
telephonyProvider
tinCanProvider
providerWithService:video:
emergencyProvider
providers
providerWithIdentifier:
providersPassingTest:
providerForRecentCall:
providerForFavoritesEntry:
providerForFavoritesEntryActionBundleIdentifier:
setDelegateToQueue:
TQ,R,N,V_type
T@"<TUCallProviderManagerDataSource>",R,N,V_dataSource
T@"NSMapTable",&,N,V_delegateToQueue
T@"TUCallProvider",R,N
handleForCHRecentCall:
handleForCHRecentCall:validHandlesOnly:
handlesForCHRecentCall:
handlesForCHRecentCall:validHandlesOnly:
handleTypeForCHHandle:
initWithDataProviders:
initWithQueue:dataProviders:
updateCacheWithDestinationIDs:
updateCacheForEmptyDataProvidersWithDestinationIDs:
_updateCacheWithDestinationIDs:onlyEmptyProviders:
_providers
T@"NSArray",R,C,N,V_providers
LTRString
RTLString
destinationIdIsTemporary
destinationIdIsPseudonym
destinationIdIsHardware
destinationIdIsEmailAddress
destinationIdIsTokenURI
destinationIdIsPhoneNumber
destinationIdIsCallControlCode
normalizedTokenURI
normalizedDestination
formattedDisplayID
tu_stringByStrippingBase64Padding
tu_stringByAddingBase64Padding
tu_unsignedLongLongNumber
tu_handoffEligibility
tu_conversationHandoffDynamicIdentifierWithGroupUUID:participantIdentifier:uplinkMuted:sendingVideo:
tu_conversationHandoffDynamicIdentifierForEligibility:
T@"TUConversationHandoffEligibility",R,C,N
sandboxExtendedImageURL
imageURL
initWithName:
initWithParticipant:
setImageURL:
setSandboxExtendedImageURL:
_sandboxExtendedImageURL
T@"NSURL",&,N
T@"TUSandboxExtendedURL",&,N,V_sandboxExtendedImageURL
T@"NSURL",&,D,N
sanitizedCopyWithZone:allowedSchemes:
tu_defaultAllowedSchemes
initWithNotificationCenter:
postNotificationsForCall:afterUpdatesInBlock:
postNotificationsForCall:usingComparisonCall:
postNotificationsForCall:usingComparisonCall:afterUpdatesInBlock:
postNotificationsForCallContainer:afterUpdatesInBlock:
deferNotificationsUntilAfterPerformingBlock:
_postNotificationName:object:
_postNotificationName:object:userInfo:
statusChangedForCall:
connectingChangedForCall:
connectedChangedForCall:
wantsHoldMusicChangedForCall:
endpointOnCurrentDeviceChangedForCall:
shouldSuppressRingtoneChangedForCall:
faceTimeIDStatusChangedForCall:
hardPauseDigitsStateChangedForCall:
needsManualInCallSoundsChangedForCall:
hasSentInvitationChangedForCall:
isUsingBasebandChangedForCall:
isOnHoldChangedForCall:
isUplinkMutedChangedForCall:
destinationIDChangedForCall:
displayContextChangedForCall:
isEmergencyChangedForCall:
isFailureExpectedChangedForCall:
supportsEmergencyFallbackChangedForCall:
isSendingAudioChangedForCall:
isSendingVideoChangedForCall:
sharingScreenChangedForCall:
isThirdPartyVideoChangedForCall:
mediaStalledChangedForCall:
videoDegradedChangedForCall:
videoPausedChangedForCall:
audioPropertiesChangedForCall:
ttyTypeChangedForCall:
bluetoothAudioFormatChangedForCall:
remoteUplinkMutedChangedForCall:
localSenderIdentityAccountUUIDChangedForCall:
supportsTTYWithVoiceChangedForCall:
remoteAspectRatioChangedForCall:
remoteVideoContentRectChangedForCall:
cameraTypeChangedForCall:
videoMirroredChangedForCall:
remoteCameraOrientationChangedForCall:
remoteScreenOrientationChangedForCall:
remoteScreenAspectRatioChangedForCall:
providerContextChangedForCall:
mediaPropertiesChangedForCall:remoteAspectRatioDidChange:remoteCameraOrientationDidChange:
videoStreamTokenChangedForCall:
conversationChangedForCall:
mixesVoiceWithMediaChangedForCall:
prefersExclusiveAccessToCellularNetworkChangedForCall:
modelChangedForCall:
conferenceParticipantCallsChangedForCallContainer:conferenceParticipantCalls:
notificationCenter
deferredNotificationBlocks
setDeferredNotificationBlocks:
_notificationCenter
_deferredNotificationBlocks
T@"NSMutableArray",&,N,V_deferredNotificationBlocks
T@"NSNotificationCenter",R,N,V_notificationCenter
encryptedData
tokenPrefixedURI
unsafeData
initWithHandle:tokenPrefixedURI:data:encryptedData:
initWithVoucher:
data
isEqualToVoucher:
_tokenPrefixedURI
_encryptedData
_unsafeData
T@"NSData",R,C,N,V_encryptedData
T@"NSData",R,C,N,V_unsafeData
T@"NSString",R,C,N,V_tokenPrefixedURI
tu_mapObjectsUsingBlock:
tu_mapAndFilterObjectsUsingBlock:
tu_firstObjectPassingTest:
linkMetadatablob
fallbackURL
invitationURL
supportsContinuationOnTV
subTitle
preferredBroadcastingAttributes
sceneAssociationBehavior
imageFileURL
imageData
activityMetadataWithDataBlob:
initWithContext:linkMetadata:fallbackURL:invitationURL:supportsContinuationOnTV:title:subTitle:imageData:preferredBroadcastingAttributes:sceneAssociationBehavior:
initWithContext:linkMetadata:fallbackURL:invitationURL:supportsContinuationOnTV:title:subTitle:imageData:
_imagePreviewDirectoryPath
_filePathForImage
_createImageFolderIfNeeded
saveImageToDisk
removeImageDiskFile
isEquivalentToActivityMetadata:
_isEqualToActivityMetadata:
length
serializedData
setLinkMetadatablob:
setSupportsContinuationOnTV:
setImageData:
setPreferredBroadcastingAttributes:
setImageFileURL:
_supportsContinuationOnTV
_linkMetadatablob
_fallbackURL
_invitationURL
_subTitle
_imageData
_preferredBroadcastingAttributes
_sceneAssociationBehavior
_imageFileURL
T@"TUSandboxExtendedURL",&,N,V_imageFileURL
T@"TUConversationActivityContext",R,C,N,V_context
T@"NSData",C,N,V_linkMetadatablob
T@"NSURL",R,C,N,V_fallbackURL
T@"NSURL",R,C,N,V_invitationURL
TB,N,V_supportsContinuationOnTV
T@"NSString",R,C,N,V_title
T@"NSString",R,C,N,V_subTitle
T@"NSData",C,N,V_imageData
Tq,N,V_preferredBroadcastingAttributes
T@"TUConversationActivitySceneAssociationBehavior",R,C,N,V_sceneAssociationBehavior
uuid
labelID
tu_contactsByHandleForHandles:keyDescriptors:error:
callPropertiesChanged:
conversationManager:migratingFromConversation:toConversation:
conversationsChangedForConversationManager:
conversationManager:conversationUpdatedMessagesGroupName:
conversationManager:conversationUpdatedMessagesGroupName:fromOldConversation:
conversationManager:conversationUpdatedMessagesGroupUUID:
conversationManager:stateChangedForConversation:
conversationManager:stateChangedForConversation:fromOldConversation:
conversationManager:letMeInRequestStateChangedForConversation:
conversationManager:letMeInRequestStateChangedForConversation:fromOldConversation:
conversationManager:localVideoToggledForConversation:
conversationManager:localVideoToggledForConversation:fromOldConversation:
conversationManager:remoteMembersChangedForConversation:
conversationManager:remoteMembersChangedForConversation:fromOldConversation:
conversationManager:pendingMembersChangedForConversation:
conversationManager:pendingMembersChangedForConversation:fromOldConversation:
conversationManager:kickedMembersChangedForConversation:
conversationManager:kickedMembersChangedForConversation:fromOldConversation:
conversationManager:otherInvitedHandlesChangedForConversation:
conversationManager:otherInvitedHandlesChangedForConversation:fromOldConversation:
conversationManager:activeRemoteParticipantsChangedForConversation:
conversationManager:activeRemoteParticipantsChangedForConversation:fromOldConversation:
conversationManager:oneToOneModeChangedForConversation:
conversationManager:oneToOneModeChangedForConversation:fromOldConversation:
conversationManager:avModeChangedForConversation:
conversationManager:avModeChangedForConversation:fromOldConversation:
conversationManager:resolvedAudioVideoModeChangedForConversation:
conversationManager:resolvedAudioVideoModeChangedForConversation:fromOldConversation:
conversationManager:activitySessionsChangedForConversation:
conversationManager:activitySessionsChangedForConversation:fromOldConversation:
conversationManager:linkChangedForConversation:
conversationManager:linkChangedForConversation:fromOldConversation:
conversationManager:linkInvitedMemberHandlesChangedForConversation:
conversationManager:linkInvitedMemberHandlesChangedForConversation:fromOldConversation:
conversationManager:removedActiveConversation:
conversationManager:addedActiveConversation:
conversationManager:ignoreLMIRequestsChangedForConversation:
conversationManager:rejectedMembersChangedForConversation:
conversationManager:rejectedMembersChangedForConversation:fromOldConversation:
conversationManager:handoffEligibilityChangedToConversation:fromPreviousConversation:
conversationManager:handoffEligibilityChangedForConversation:
conversationManager:systemActivitySessionsChangedForConversation:
conversationManager:systemActivitySessionsChangedForConversation:fromOldConversation:
serverDisconnectedForConversationManager:
conversationManager:conversation:participant:addedNotice:
conversationManager:conversation:addedMembersLocally:
conversationManager:conversation:buzzedMember:
conversationManager:updatedIncomingPendingConversations:
conversationManager:conversation:updatedMessagesGroupPhoto:
conversationManager:conversation:didChangeStateForActivitySession:
conversationManager:conversation:didChangeSceneAssociationForActivitySession:
conversationManager:conversation:receivedActivitySessionEvent:
conversationManager:didChangeActivatedLinks:
conversationManager:conversation:remoteParticipantWithIdentifier:updatedAudioEnabled:
conversationManager:conversation:remoteParticipantWithIdentifier:updatedVideoEnabled:
conversationManager:conversation:launchStateChanged:forActivitySession:
conversationManager:trackedPendingMember:forConversationLink:
conversationManager:conversation:screenSharingChangedForParticipant:
conversationManager:remoteScreenShareAttributesChanged:isLocallySharing:
conversationManager:remoteScreenShareEndedWithReason:
conversationManager:sharePlayAvailableChanged:
conversationManager:screenSharingAvailableChanged:
conversationManager:changedActivityAuthorizationForBundleIdentifier:
conversationWithRemoteMembers:andLink:fromConversations:
conversationWithRemoteMembers:andLink:fromConversations:matchingVideo:backedByGroupSession:
conversationsWithRemoteMembers:andLink:fromConversations:
conversationWithPseudonym:fromConversations:
pendingConversationWithLink:fromConversations:
remoteMembersForCall:
supportsConversations
isAddPersonEnabled
maximumNumberOfInvitedMembers
allowsVideo
allowsScreenSharing
allowsScreenSharingWithVideo
allowsPortraitBlurWhenCaptionsEnabled
supportsEffects
memorySize
conversationStateForCall:
activeRemoteParticipantsForCall:remoteMembers:
conversationWithUUID:fromConversations:
conversationsChangedForDataSource:oldConversationsByGroupUUID:
conversationsChangedForDataSource:updatedIncomingPendingConversationsByGroupUUID:
conversation:receivedActivitySessionEvent:
serverDisconnectedForDataSource:oldConversationsByGroupUUID:
activityAuthorizationsChangedForDataSource:oldActivityAuthorizedBundleIdentifiers:
conversationManagerDataSource:didChangeActivatedConversationLinks:
conversationManagerDataSource:messagesGroupDetailsForMessagesGroupId:completionHandler:
conversation:remoteParticipantWithIdentifier:updatedAudioEnabled:
conversation:remoteParticipantWithIdentifier:updatedVideoEnabled:
conversation:participant:addedNotice:
conversation:addedMembersLocally:
conversation:buzzedMember:
conversationUpdatedMessagesGroupPhoto:
conversationManagerDataSource:conversation:appLaunchState:forActivitySession:
receivedTrackedPendingMember:forConversationLink:
conversation:screenSharingChangedForParticipant:
remoteScreenShareAttributesChanged:isLocallySharing:
remoteScreenShareEndedWithReason:
conversation:didChangeStateForActivitySession:
conversation:didChangeSceneAssociationForActivitySession:
sharePlayAvailableChanged:
screenSharingAvailableChanged:
addPersonEnabled
TB,R,N,GisAddPersonEnabled
initWithDataSource:notificationCenter:
activeConversations
incomingPendingConversations
activatedConversationLinks
activityAuthorizedBundleIdentifiers
autoSharePlayEnabled
isSharePlayAvailable
activeConversationWithGroupUUID:
activeConversationWithRemoteMembers:andLink:
activeConversationWithRemoteMembers:andLink:matchingVideo:backedByGroupSession:
activeConversationWithLinkForCall:
pendingConversationWithLink:
registerWithCompletionHandler:
setShouldCreateConversationsForCallsNotBackedByGroupSessions:
mediaController
addRemoteMembers:toConversation:
updateMessagesGroupName:onConversation:
setGridDisplayMode:conversation:
conversationUpdateMessagesGroupPhoto:
addRemoteMembers:otherInvitedHandles:toConversation:
createActivitySession:onConversation:
leaveActivitySession:onConversation:
endActivitySession:onConversation:
presentDismissalAlertForActivitySession:onConversation:
setActivityAuthorization:forBundleIdentifier:
setAutoSharePlayEnabled:
leaveConversationWithUUID:
launchApplicationForActivitySession:completionHandler:
launchApplicationForActivitySessionUUID:completionHandler:
launchApplicationForActivitySessionUUID:forceBackground:completionHandler:
setUsingAirplay:onActivitySession:onConversation:
buzzMember:conversation:
refreshActiveConversations
requestScreenShareFromMember:conversation:
kickMember:conversation:
setDownlinkMuted:forRemoteParticipantsInConversation:
setAudioEnabled:forRemoteParticipantWithIdentifier:conversation:
setVideoEnabled:forRemoteParticipantWithIdentifier:conversation:
getLatestRemoteScreenShareAttributesWithCompletionHandler:
getActiveLinksWithCreatedOnly:completionHandler:
generateLinkForConversation:completionHandler:
generateLinkWithInvitedMemberHandles:completionHandler:
generateLinkWithInvitedMemberHandles:linkLifetimeScope:completionHandler:
addInvitedMemberHandles:toConversationLink:completionHandler:
invalidateLink:completionHandler:
renewLink:expirationDate:reason:completionHandler:
checkLinkValidity:completionHandler:
getInactiveLinkWithCompletionHandler:
activateLink:completionHandler:
setLinkName:forConversationLink:completionHandler:
scheduleConversationLinkCheckInInitial:
linkSyncStateIncludeLinks:WithCompletion:
approvePendingMember:forConversation:
rejectPendingMember:forConversation:
setIgnoreLMIRequests:forConversation:
setScreenEnabled:withScreenShareAttributes:forConversationWithUUID:
getMessagesGroupDetailsForConversationUUID:completionHandler:
setMessagesGroupProvider:
setLocalParticipantAudioVideoMode:forConversationUUID:
registerMessagesGroupUUIDForConversationUUID:
conversationsChangedForDataSource:oldConversationsByGroupUUID:newConversationsByGroupUUID:creationQueue:
conversationsChangedFromOldConversationsByGroupUUID:newConversationsByGroupUUID:
fetchUpcomingNoticeWithCompletionHandler:
activateConversationNoticeWithActionURL:bundleIdentifier:
removeConversationNoticeWithUUID:
setNonSessionBackedConversationCreationQueue:
updateConversationsNotBackedByGroupSessionWithCall:
updateConversationsNotBackedByGroupSessionWithCall:conversationsByGroupUUID:creationQueue:
pruneConversationsPendingUpgradeInConversationsWithGroupUUID:
callPendingUpgradeInConversationsWithGroupUUID:
createConversationForCallNotBackedByGroupSession:
handoffEligibleConversation
handoffEligibleConversationForEligibility:
avLessConversation
joinRequestForApplicableConversationWithHandoffEligibility:
currentProcessCanAccessCollaborations
nonSessionBackedConversationCreationQueue
callsNotBackedByGroupSessionsPendingUpgrade
setCallsNotBackedByGroupSessionsPendingUpgrade:
conversationsNotBackedByGroupSessions
setConversationsNotBackedByGroupSessions:
shouldCreateConversationsForCallsNotBackedByGroupSessions
nonSessionBackedConversationCreationMode
setNonSessionBackedConversationCreationMode:
messagesGroupProvider
_shouldCreateConversationsForCallsNotBackedByGroupSessions
_mediaController
_nonSessionBackedConversationCreationQueue
_callsNotBackedByGroupSessionsPendingUpgrade
_conversationsNotBackedByGroupSessions
_nonSessionBackedConversationCreationMode
_messagesGroupProvider
T@"NSObject<OS_dispatch_queue>",R,N,V_nonSessionBackedConversationCreationQueue
T@"NSMutableSet",&,N,V_callsNotBackedByGroupSessionsPendingUpgrade
T@"NSMutableSet",&,N,V_conversationsNotBackedByGroupSessions
TB,N,V_shouldCreateConversationsForCallsNotBackedByGroupSessions
TQ,N,V_nonSessionBackedConversationCreationMode
T@"TUConversationMediaController",R,N,V_mediaController
T@"<TUConversationMessagesGroupProviding>",W,N,V_messagesGroupProvider
sharePlayAvailable
TB,R,N,GisSharePlayAvailable
TB,R,N,GisScreenSharingAvailable
T@"TUConversation",R,C,N
modelIdentifier
setModelIdentifier:
uniqueID
setUniqueID:
isDefaultPairedDevice
setDefaultPairedDevice:
supportsRestrictingSecondaryCalling
setSupportsRestrictingSecondaryCalling:
linkedUserURIs
setLinkedUserURIs:
_defaultPairedDevice
_supportsRestrictingSecondaryCalling
_modelIdentifier
_uniqueID
_linkedUserURIs
T@"NSString",C,N,V_modelIdentifier
T@"NSString",C,N,V_uniqueID
T@"NSArray",C,N,V_linkedUserURIs
TB,N,GisDefaultPairedDevice,V_defaultPairedDevice
TB,N,V_supportsRestrictingSecondaryCalling
_handleBlockListChanged:
sharedPrivacyManager
T@"TUPrivacyManager",R,N
setBlockIncomingCommunication:forPhoneNumber:
setBlockIncomingCommunication:forEmailAddress:
setBlockIncomingCommunication:forBusinessID:
addRule:
removeRule:
isIncomingCommunicationBlockedForPhoneNumber:
isIncomingCommunicationBlockedForEmailAddress:
isIncomingCommunicationBlockedForBusinessID:
isIncomingCommunicationBlockedForHandle:
allBlacklistRules
privacyRules
ruleForPhoneNumber:
ruleForEmail:
ruleForBusinessID:
initForPhoneNumber:
initForEmail:
initForBusinessID:
email
businessID
_phoneNumber
_email
_businessID
Ti,R,N,V_type
T@"TUPhoneNumber",R,N,V_phoneNumber
T@"NSString",R,N,V_email
T@"NSString",R,N,V_businessID
predicateForInEarAudioRoute
predicateForPreferredRoute
T@?,R,N
phoneNumberWithCFPhoneNumberRef:
phoneNumberWithDigits:countryCode:
areDigits:equalToDigits:usingCountryCode:
initWithCFPhoneNumberRef:
initWithDigits:countryCode:
digits
countryCode
formattedRepresentation
formattedInternationalRepresentation
unformattedInternationalRepresentation
phoneNumberRef
setPhoneNumberRef:
_phoneNumberRef
T^{__CFPhoneNumber=},V_phoneNumberRef
accountID
isApproved
approvedSecondaryDeviceIDs
isAssociated
localDeviceID
supportsDefaultPairedDevice
setApproved:
setApprovedSecondaryDeviceIDs:
setAccountID:
setAssociated:
setLocalDeviceID:
setSupportsDefaultPairedDevice:
_approved
_associated
_supportsDefaultPairedDevice
_approvedSecondaryDeviceIDs
_accountID
_localDeviceID
approved
TB,N,GisApproved,V_approved
T@"NSSet",C,N,V_approvedSecondaryDeviceIDs
T@"NSString",C,N,V_accountID
associated
TB,N,GisAssociated,V_associated
T@"NSString",C,N,V_localDeviceID
TB,N,V_supportsDefaultPairedDevice
initWithCall:contactIdentifier:serialQueue:
initWithCall:contactIdentifier:serialQueue:contactsDataSource:
initWithDisplayContext:call:serialQueue:
_initializeSynchronousStateWithCall:contactIdentifier:contactsDataProvider:
_initializeAsynchronousStateWithCall:
setCallDirectoryManager:
T@"CXCallDirectoryManager",&,N,V_callDirectoryManager
T@"<TUDynamicCallDisplayContextDelegate>",W,N,V_delegate
isDialAssistSupportedForSubscriptionLabelIdentifier:error:
testEmergencyHandleForSubscriptionLabelIdentifier:error:
objectForKey:subscriptionLabelIdentifier:error:
share
initWithMetadata:applicationContext:activityIdentifier:uuid:
initWithMetadata:applicationContext:activityIdentifier:uuid:staticActivity:
isEqualToConversationActivitySessionCreationRequest:
setShare:
_share
T@"NSUUID",C,N,V_UUID
T@"CKShare",C,N,V_share
T@"NSUUID",C,D,N
T@"TUConversationActivityMetadata",&,D,N
T@"CKShare",C,D,N
TB,D,N,GisStaticActivity
targetContentIdentifier
shouldAssociateScene
defaultBehavior
T@"TUConversationActivitySceneAssociationBehavior",R,N
initWithTargetContentIdentifier:shouldAssociateScene:
isEquivalentToSceneAssociationBehavior:
_shouldAssociateScene
_targetContentIdentifier
T@"NSString",R,C,N,V_targetContentIdentifier
TB,R,N,V_shouldAssociateScene
serviceName
bundleID
supportsConversationHandoff
wantsLeaveOnInvalidation
initWithServiceName:
setServiceName:
setSupportsLinks:
setSupportsConversationHandoff:
setWantsLeaveOnInvalidation:
setPseudonymFeatureID:
setBundleID:
_supportsLinks
_supportsConversationHandoff
_wantsLeaveOnInvalidation
_serviceName
_pseudonymFeatureID
_bundleID
T@"NSString",C,N,V_serviceName
TB,N,V_supportsLinks
TB,N,V_supportsConversationHandoff
TB,N,V_wantsLeaveOnInvalidation
T@"NSString",C,N,V_pseudonymFeatureID
T@"NSString",C,N,V_bundleID
T@"NSSet",C,N,V_supportedMediaTypes
isEmergencyNumberWithWhitelistIncluded:number:error:
inEmergencyMode
isEmergencyNumberForDigits:subscriptionUUID:error:
isEmergencyNumberForDigits:subscription:error:
isWhitelistedEmergencyNumberForDigits:subscriptionUUID:error:
isWhitelistedEmergencyNumberForDigits:subscription:error:
shouldShowEmergencyCallbackModeAlertForSubscriptionUUID:error:
shouldShowEmergencyCallbackModeAlertForSubscription:error:
captureDevicesChanged:
setLocalCameraWithUID:
localVideoLayer:
setLocalVideoLayer:front:
localScreenAttributesForVideoAttributes:
setLocalScreenAttributes:
beginPreviewToPIPAnimation
endPreviewToPIPAnimation
beginPIPToPreviewAnimation
endPIPToPreviewAnimation
supportsCameraBlurForDevice:
localCameraUID
localVideoAttributes
setLocalVideoAttributes:
isCameraBlurEnabled
T@"VideoAttributes",C,N
TB,N,GisCameraBlurEnabled
T@"<TUVideoDeviceControllerProviderDelegate>",W,N
thumbnailImageForVideoEffectName:
preview
_currentVideoEffect
_preview
T@"AVConferencePreview",R,N,V_preview
T@"<TUVideoDeviceControllerProviderDelegate>",W,N,V_delegate
T@"TUVideoEffect",&,N,V_currentVideoEffect
conversationID
timebase
initWithConversationID:timebase:
isEqualToConversationReport:
_timebase
_conversationID
T@"NSDate",R,N,V_timebase
T@"NSUUID",R,N,V_conversationID
recentsModuleClasses
searchModuleClasses
establishChannelMaxAttempts
establishChannelRetryIntervalMillis
egressMessagePayloadMaxSizeBytes
channelStreamMaxQueueSize
channelStreamMaxTries
channelStreamRetryIntervalMillis
shared
initWithEstablishChannelMaxAttempts:establishChannelRetryIntervalMillis:egressMessagePayloadMaxSizeBytes:channelStreamMaxQueueSize:channelStreamMaxTries:channelStreamRetryIntervalMillis:
isEqualToConversationUnreliableMessengerConfig:
_establishChannelMaxAttempts
_establishChannelRetryIntervalMillis
_egressMessagePayloadMaxSizeBytes
_channelStreamMaxQueueSize
_channelStreamMaxTries
_channelStreamRetryIntervalMillis
TQ,R,N,V_establishChannelMaxAttempts
TQ,R,N,V_establishChannelRetryIntervalMillis
TQ,R,N,V_egressMessagePayloadMaxSizeBytes
TQ,R,N,V_channelStreamMaxQueueSize
TQ,R,N,V_channelStreamMaxTries
TQ,R,N,V_channelStreamRetryIntervalMillis
sourceTypeIsFoundInMail:
sourceTypeIsFoundOnServers:
addResult:
normalResultsArray
setNormalResultsArray:
foundInMailResultsArray
setFoundInMailResultsArray:
foundOnServersResultsArray
setFoundOnServersResultsArray:
_normalResultsArray
_foundInMailResultsArray
_foundOnServersResultsArray
T@"NSMutableArray",&,N,V_normalResultsArray
T@"NSMutableArray",&,N,V_foundInMailResultsArray
T@"NSMutableArray",&,N,V_foundOnServersResultsArray
accountUUID
ISOCountryCode
localizedShortName
localizedServiceName
initWithUUID:accountUUID:localizedName:localizedShortName:handle:
initWithUUID:accountUUID:localizedName:localizedShortName:localizedServiceName:handle:
initWithUUID:accountUUID:ISOCountryCode:localizedName:localizedShortName:localizedServiceName:handle:
initWithSenderIdentity:
isEqualToSenderIdentity:
_accountUUID
_ISOCountryCode
_localizedShortName
_localizedServiceName
T@"NSUUID",R,N,V_accountUUID
T@"NSString",R,C,N,V_ISOCountryCode
T@"NSString",R,C,N,V_localizedName
T@"NSString",R,C,N,V_localizedShortName
T@"NSString",R,C,N,V_localizedServiceName
initWithSessionUUID:originator:type:
isEqualToConversationActivityEvent:
localizedDescription
setUrl:
_localizedDescription
_url
T@"TUConversationParticipant",&,N,V_originator
T@"NSString",&,N,V_item
T@"NSString",R,N,V_localizedDescription
T@"NSURL",&,N,V_url
bundleURL
emergencyHandles
emergencyLabeledHandles
handoffIdentifiers
prioritizedSenderIdentities
sandboxExtendedRingtoneSoundURL
originalRingtoneSoundURL
iconTemplateImageData
maximumCallGroups
maximumCallsPerCallGroup
supportsAudioOnly
supportsAudioAndVideo
supportsEmergency
supportsVoicemail
supportsRecents
supportsCurrentPlatform
supportsRinging
audioSessionID
supportedHandleTypes
supportsHandleType:
base
isTelephonyProvider
isFaceTimeProvider
isSuperboxProvider
isTinCanProvider
isSystemProvider
hasRestrictionsInRetailEnvironment
senderIdentityForUUID:
setSupportsCurrentPlatform:
senderIdentityForAccountUUID:
senderIdentityForHandle:
displayAppBundleIdentifier
inCallUIBundleIdentifier
ringtoneSoundURL
setRingtoneSoundURL:
setSenderIdentities:
senderIdentities
isEqualToCallProvider:
setSupportsAudioOnly:
setSupportsAudioAndVideo:
setSupportsEmergency:
setSupportsVoicemail:
setSupportedHandleTypes:
setBundleURL:
setEmergencyHandles:
setEmergencyLabeledHandles:
setHandoffIdentifiers:
setPrioritizedSenderIdentities:
setSandboxExtendedRingtoneSoundURL:
setOriginalRingtoneSoundURL:
setIconTemplateImageData:
setMaximumCallGroups:
setMaximumCallsPerCallGroup:
setSupportsRecents:
setSupportsRinging:
setAudioSessionID:
_supportsCurrentPlatform
_supportsAudioOnly
_supportsAudioAndVideo
_supportsEmergency
_supportsVoicemail
_supportsRecents
_supportsRinging
_audioSessionID
_supportedHandleTypes
_bundleURL
_emergencyHandles
_emergencyLabeledHandles
_handoffIdentifiers
_prioritizedSenderIdentities
_sandboxExtendedRingtoneSoundURL
_originalRingtoneSoundURL
_iconTemplateImageData
_maximumCallGroups
_maximumCallsPerCallGroup
T@"NSURL",C,N,V_bundleURL
T@"NSSet",C,N,V_supportedHandleTypes
T@"NSArray",C,N,V_emergencyHandles
T@"NSArray",C,N,V_emergencyLabeledHandles
T@"NSArray",C,N,V_handoffIdentifiers
T@"NSOrderedSet",C,N,V_prioritizedSenderIdentities
T@"TUSandboxExtendedURL",&,N,V_sandboxExtendedRingtoneSoundURL
T@"NSURL",&,N,V_originalRingtoneSoundURL
T@"NSData",C,N,V_iconTemplateImageData
TQ,N,V_maximumCallGroups
TQ,N,V_maximumCallsPerCallGroup
TB,N,V_supportsAudioOnly
TB,N,V_supportsAudioAndVideo
TB,N,V_supportsEmergency
TB,N,V_supportsVoicemail
TB,N,V_supportsRecents
TB,N,V_supportsCurrentPlatform
TB,N,V_supportsRinging
TI,N,V_audioSessionID
TB,R,N,GisTelephonyProvider
TB,R,N,GisFaceTimeProvider
superboxProvider
TB,R,N,GisSuperboxProvider
T@"TUCallProvider",R,C,N
initWithUniqueProxyIdentifier:endpointOnCurrentDevice:
updateWithCall:
disconnectWithReason:
answerWithRequest:
setDisconnectedReason:
setShouldSuppressRingtone:
setEndpointOnCurrentDevice:
setTransitionStatus:
videoMirrored
activeRemoteParticipant
serviceStatus
transmissionMode
isReceivingTransmission
isSendingTransmission
proxyCallWithCall:
remoteVideoClientDidReceiveFirstFrame:
remoteVideoClient:remoteVideoDidPause:
remoteVideoClient:remoteMediaDidStall:
remoteVideoClient:videoDidDegrade:
remoteVideoClient:videoDidSuspend:
remoteVideoClientDidReceiveLastFrame:
remoteVideoServerDidDie:
remoteVideoClient:remoteScreenAttributesDidChange:
remoteVideoClient:remoteVideoAttributesDidChange:
playDTMFToneForKey:
setMediaStalled:
setVideoDegraded:
setBackingProvider:
setDisplayProvider:
setIsSendingVideo:
setSharingScreen:
setSharingScreen:attributes:
updateProxyCallWithDaemon
setCallDisconnectedDueToComponentCrash
sendHardPauseDigits
avcRemoteVideoModeForMode:
setRemoteVideoLayer:forMode:
setLocalVideoLayer:forMode:
setRequiresRemoteVideo:
_updateVideoCallAttributes:
_updateVideoStreamToken:
_synchronizeLocalVideo
_synchronizeRemoteVideo
_createLocalVideoIfNecessary
_createRemoteVideoIfNecessary
remoteScreenAspectRatio
localAspectRatioForOrientation:
setRemoteVideoPresentationSize:
setRemoteVideoPresentationState:
setScreenShareAttributes:
setBluetoothAudioFormat:
_cameraTypeForVideoAttributeCamera:
_orientationForVideoAttributesOrientation:
setActiveRemoteParticipant:
callUUID
setCallUUID:
callStatus
setCallStatus:
isHostedOnCurrentDevice
setHostedOnCurrentDevice:
setIsoCountryCode:
isOutgoing
setOutgoing:
isVoicemail
setVoicemail:
callerNameFromNetwork
setCallerNameFromNetwork:
setIsVideo:
isThirdPartyVideo
setThirdPartyVideo:
isSendingAudio
setIsSendingAudio:
isMediaStalled
isVideoDegraded
isVideoMirrored
setVideoMirrored:
remoteAspectRatio
setRemoteAspectRatio:
remoteVideoContentRect
setRemoteVideoContentRect:
cameraType
setCameraType:
isBlocked
setBlocked:
isEmergency
setEmergency:
isFailureExpected
setFailureExpected:
isInternational
setInternational:
isSOS
setSOS:
supportsEmergencyFallback
setSupportsEmergencyFallback:
isUsingBaseband
setUsingBaseband:
ttyType
setTtyType:
bluetoothAudioFormat
supportsTTYWithVoice
setSupportsTTYWithVoice:
audioCategory
setAudioCategory:
audioMode
setAudioMode:
needsManualInCallSounds
setNeedsManualInCallSounds:
endedReasonUserInfo
setEndedReasonUserInfo:
endedReasonString
setEndedReasonString:
endedErrorString
setEndedErrorString:
callRelaySupport
setCallRelaySupport:
localFrequency
setLocalFrequency:
remoteFrequency
setRemoteFrequency:
localMeterLevel
setLocalMeterLevel:
remoteMeterLevel
setRemoteMeterLevel:
videoStreamToken
setVideoStreamToken:
inputAudioPowerSpectrumToken
setInputAudioPowerSpectrumToken:
outputAudioPowerSpectrumToken
setOutputAudioPowerSpectrumToken:
requiresRemoteVideo
remoteScreenOrientation
setRemoteScreenOrientation:
callGroupUUID
setCallGroupUUID:
providerContext
setProviderContext:
displayContext
setDisplayContext:
remoteParticipantHandles
setRemoteParticipantHandles:
prefersExclusiveAccessToCellularNetwork
setPrefersExclusiveAccessToCellularNetwork:
isRemoteUplinkMuted
setRemoteUplinkMuted:
localSenderIdentityUUID
setLocalSenderIdentityUUID:
localSenderIdentityAccountUUID
setLocalSenderIdentityAccountUUID:
isMutuallyExclusiveCall
setMutuallyExclusiveCall:
isSharingScreen
isConversation
setConversation:
screenShareAttributes
setServiceStatus:
setTransmissionMode:
setReceivingTransmission:
setSendingTransmission:
mixesVoiceWithMedia
proxyCallActionsDelegate
setProxyCallActionsDelegate:
localVideo
setLocalVideo:
remoteVideo
setRemoteVideo:
remoteVideoModeToLayer
setRemoteVideoModeToLayer:
localVideoModeToLayer
setLocalVideoModeToLayer:
remoteScreenPortraitAspectRatio
setRemoteScreenPortraitAspectRatio:
remoteScreenLandscapeAspectRatio
setRemoteScreenLandscapeAspectRatio:
_hostedOnCurrentDevice
_outgoing
_voicemail
_isVideo
_thirdPartyVideo
_isSendingAudio
_isSendingVideo
_mediaStalled
_videoDegraded
_videoMirrored
_blocked
_emergency
_failureExpected
_international
_sos
_supportsEmergencyFallback
_usingBaseband
_supportsTTYWithVoice
_needsManualInCallSounds
_downlinkMuted
_requiresRemoteVideo
_prefersExclusiveAccessToCellularNetwork
_remoteUplinkMuted
_mutuallyExclusiveCall
_sharingScreen
_conversation
_receivingTransmission
_sendingTransmission
_mixesVoiceWithMedia
_callStatus
_ttyType
_callRelaySupport
_localMeterLevel
_remoteMeterLevel
_activeRemoteParticipant
_callUUID
_imageURL
_isoCountryCode
_callerNameFromNetwork
_cameraType
_bluetoothAudioFormat
_audioCategory
_audioMode
_endedReasonUserInfo
_endedReasonString
_endedErrorString
_localFrequency
_remoteFrequency
_videoStreamToken
_inputAudioPowerSpectrumToken
_outputAudioPowerSpectrumToken
_remoteScreenOrientation
_callGroupUUID
_providerContext
_displayContext
_remoteParticipantHandles
_localSenderIdentityUUID
_localSenderIdentityAccountUUID
_screenShareAttributes
_serviceStatus
_transmissionMode
_proxyCallActionsDelegate
_localVideo
_remoteVideo
_remoteVideoModeToLayer
_localVideoModeToLayer
_remoteAspectRatio
_remoteScreenPortraitAspectRatio
_remoteScreenLandscapeAspectRatio
_remoteVideoContentRect
T@"<TURemoteVideoClient>",&,N,V_localVideo
T@"<TURemoteVideoClient>",&,N,V_remoteVideo
T@"NSMutableDictionary",&,N,V_remoteVideoModeToLayer
T@"NSMutableDictionary",&,N,V_localVideoModeToLayer
T{CGSize=dd},N,V_remoteScreenPortraitAspectRatio
T{CGSize=dd},N,V_remoteScreenLandscapeAspectRatio
Tq,N,V_remoteScreenOrientation
T{CGSize=dd},N,V_remoteAspectRatio
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_remoteVideoContentRect
Tq,N,V_cameraType
T@"<TUCallServicesProxyCallActions>",W,N,V_proxyCallActionsDelegate
T@"TUParticipant",C,N,V_activeRemoteParticipant
T@"NSString",C,N,V_isoCountryCode
T@"NSString",C,N,V_callUUID
Ti,N,V_callStatus
Tq,N,V_serviceStatus
Tq,N,V_transmissionMode
receivingTransmission
TB,N,GisReceivingTransmission,V_receivingTransmission
sendingTransmission
TB,N,GisSendingTransmission,V_sendingTransmission
hostedOnCurrentDevice
TB,N,GisHostedOnCurrentDevice,V_hostedOnCurrentDevice
T@"TUCallProvider",&,N,V_provider
backingProvider
T@"TUCallProvider",&,N
displayProvider
outgoing
TB,N,GisOutgoing,V_outgoing
voicemail
TB,N,GisVoicemail,V_voicemail
T@"NSString",C,N,V_callerNameFromNetwork
TB,N,V_isVideo
blocked
TB,N,GisBlocked,V_blocked
emergency
TB,N,GisEmergency,V_emergency
failureExpected
TB,N,GisFailureExpected,V_failureExpected
international
TB,N,GisInternational,V_international
TB,N,GisSOS,SsetSOS:,V_sos
usingBaseband
TB,N,GisUsingBaseband,V_usingBaseband
TB,N,V_supportsEmergencyFallback
Ti,N,V_ttyType
TB,N,V_supportsTTYWithVoice
Tq,N,V_bluetoothAudioFormat
T@"NSString",C,N,V_audioCategory
T@"NSString",C,N,V_audioMode
TB,N,V_needsManualInCallSounds
T@"NSDictionary",C,N,V_endedReasonUserInfo
T@"NSString",C,N,V_endedErrorString
T@"NSString",C,N,V_endedReasonString
T@"NSData",&,N,V_localFrequency
T@"NSData",&,N,V_remoteFrequency
Tf,N,V_remoteMeterLevel
Tf,N,V_localMeterLevel
T@"NSUUID",C,N,V_callGroupUUID
Ti,N,V_callRelaySupport
mediaStalled
TB,N,GisMediaStalled,V_mediaStalled
videoDegraded
TB,N,GisVideoDegraded,V_videoDegraded
TB,N,GisVideoMirrored,V_videoMirrored
TB,N,V_isSendingAudio
thirdPartyVideo
TB,N,GisThirdPartyVideo,V_thirdPartyVideo
sharingScreen
TB,N,GisSharingScreen,V_sharingScreen
Tq,N,V_videoStreamToken
Tq,N,V_inputAudioPowerSpectrumToken
Tq,N,V_outputAudioPowerSpectrumToken
T@"NSDictionary",&,N,V_providerContext
T@"TUCallDisplayContext",C,N,V_displayContext
T@"NSSet",C,N,V_remoteParticipantHandles
TB,N,V_prefersExclusiveAccessToCellularNetwork
remoteUplinkMuted
TB,N,GisRemoteUplinkMuted,V_remoteUplinkMuted
T@"NSUUID",C,N,V_localSenderIdentityUUID
T@"NSUUID",C,N,V_localSenderIdentityAccountUUID
mutuallyExclusiveCall
TB,N,GisMutuallyExclusiveCall,V_mutuallyExclusiveCall
conversation
TB,N,GisConversation,V_conversation
isRTTAvailable
isTTYAvailable
rttAvailable
TB,R,N,GisRTTAvailable
ttyAvailable
TB,R,N,GisTTYAvailable
normalizedValue
handleWithDestinationID:
normalizedHandleWithDestinationID:
handleWithDictionaryRepresentation:
stringForType:
handleWithPersonHandle:
normalizedEmailAddressHandleForValue:
normalizedGenericHandleForValue:
normalizedPhoneNumberHandleForValue:isoCountryCode:
initWithDestinationID:
initWithType:value:
initWithType:value:normalizedValue:
personHandle
isValidForISOCountryCode:
isEqualToHandle:
isEquivalentToHandle:
canonicalHandleForISOCountryCode:
isCanonicallyEqualToHandle:isoCountryCode:
dictionaryRepresentation
hasSetISOCountryCode
setHasSetISOCountryCode:
_hasSetISOCountryCode
_normalizedValue
TB,N,V_hasSetISOCountryCode
T@"NSString",R,C,N,V_normalizedValue
T@"NSString",C,N,V_value
updateConversationProviders:
conversationProviders:
registerConversationProvider:completionHandler:
conversationProviderManagerAllowedClasses
conversationProviderManagerClientXPCInterface
conversationProviderManagerServerXPCInterface
conversationProviderForIdentifier:
T@"<TUConversationProviderManagerXPCServer>",&,N
_requestInitialStateIfNecessary
_requestInitialStateWithCompletionHandler:
_invokeCompletionHandler:
hasInitialState
setHasInitialState:
shouldConnectToken
setShouldConnectToken:
shouldConnectToHost
setShouldConnectToHost:
_hasInitialState
_shouldConnectToHost
_shouldConnectToken
TB,N,V_hasInitialState
Ti,N,V_shouldConnectToken
TB,N,V_shouldConnectToHost
dateDialed
stringForDialType:
handleTypeForQueryItem:
stringForTTYType:
ttyTypeForString:
dialRequestTypeForIntentDestinationType:
intentTTYTypeForTTYType:
ttyTypeForIntentTTYType:
providerForIntentPreferredCallProvider:recentCallProviderId:callCapability:providerManager:
originatingUITypeForExecutionContext:
stringForOriginatingUIType:
originatingUITypeForString:
callProviderManagerGeneratorBlock
setCallProviderManagerGeneratorBlock:
setLegacyAddressBookIdentifierToContactIdentifierTransformBlock:
legacyAddressBookIdentifierToContactIdentifierTransformBlock
initWithProvider:
initWithService:
initWithUserActivity:providerManager:
initWithUserActivity:providerManager:contactsDataSource:senderIdentityClient:
initWithDialIntent:providerManager:contactsDataSource:senderIdentityClient:
service
useTTY
localSenderIdentity
senderIdentityClient
isEmergencyNumberBlock
isEmergencyNumberOrIsWhitelistedBlock
destinationID
setDestinationID:
contactGeminiManager
boolValueForQueryItemWithName:inURLComponents:
callProviderFromURLComponents:video:
destinationIDFromURL:
handleFromURL:
contactIdentifierFromURLComponents:
legacyAddressBookIdentifierFromURLComponents:
legacyAddressBookIdentifierQueryItemName
URLScheme
URLHost
URLQueryItems
isVoicemailURLQueryItem
contactIdentifierURLQueryItem
providerCustomIdentifierURLQueryItem
localSenderIdentityUUIDURLQueryItem
localSenderIdentityAccountUUIDURLQueryItem
audioSourceIdentifierURLQueryItem
forceAssistURLQueryItem
suppressAssistURLQueryItem
dialAssistedURLQueryItem
handleTypeURLQueryItem
ttyTypeURLQueryItem
originatingUIURLQueryItem
noPromptURLQueryItem
sosURLQueryItem
redialURLQueryItem
endpointIDSDestinationURIQueryItem
endpointRapportMediaSystemIdentifierQueryItem
endpointRapportEffectiveIdentifierQueryItem
successNotificationQueryItem
failureNotificationQueryItem
userActivity
userActivityUsingDeprecatedCallingIntents:
isValid
validityErrors
validityErrorForUnspecifiedProvider
validityErrorForDestinationIDWithVoicemail
validityErrorForNonNormalDialTypeWithoutTelephony
validityErrorForEndpointNotOnCurrentDeviceForNonRelayableService
validityErrorForEmergencyCall
validityErrorForVideoUnsupported
validityErrorForNormalDialTypeWithUnknownDestination
validityErrorForUnsupportedHandleType
validityErrorForSOS
dialRequestByReplacingProvider:
_contactFromINPerson:contactsDataSource:bestGuessHandle:
isEqualToDialRequest:
setContactGeminiManager:
dialType
setDialType:
providerCustomIdentifier
setProviderCustomIdentifier:
performDialAssist
setPerformDialAssist:
performLocalDialAssist
setPerformLocalDialAssist:
isDialAssisted
setDialAssisted:
providerManager
setIsEmergencyNumberBlock:
setIsEmergencyNumberOrIsWhitelistedBlock:
setDateDialed:
hostOnCurrentDevice
setHostOnCurrentDevice:
endpointOnCurrentDevice
endpointIDSDestinationURI
setEndpointIDSDestinationURI:
isRedial
setRedial:
successNotification
setSuccessNotification:
failureNotification
setFailureNotification:
processHandle
setProcessHandle:
_video
_performDialAssist
_performLocalDialAssist
_dialAssisted
_hostOnCurrentDevice
_endpointOnCurrentDevice
_redial
_senderIdentityClient
_contactGeminiManager
_dialType
_contactIdentifier
_providerCustomIdentifier
_providerManager
_isEmergencyNumberBlock
_isEmergencyNumberOrIsWhitelistedBlock
_dateDialed
_endpointIDSDestinationURI
_successNotification
_failureNotification
_processHandle
T@"TUCallProviderManager",R,N,V_providerManager
T@"CNGeminiManager",&,N,V_contactGeminiManager
T@?,C,N,V_isEmergencyNumberBlock
T@?,C,N,V_isEmergencyNumberOrIsWhitelistedBlock
T@"NSDate",&,N,V_dateDialed
T@"TUSenderIdentityClient",R,N,V_senderIdentityClient
TB,N,V_hostOnCurrentDevice
TB,N,V_endpointOnCurrentDevice
T@"NSString",C,N,V_endpointIDSDestinationURI
T@"IDSDestination",R,N
T@"NSString",C,N,V_endpointRapportMediaSystemIdentifier
T@"NSString",C,N,V_endpointRapportEffectiveIdentifier
T@"TUSenderIdentity",R,C,N
redial
TB,N,GisRedial,V_redial
T@"NSString",C,N,V_successNotification
T@"NSString",C,N,V_failureNotification
T@"BSProcessHandle",&,N,V_processHandle
Tq,N,V_dialType
T@"NSString",C,N,V_contactIdentifier
T@"NSString",C,N,V_providerCustomIdentifier
TB,N,GisVideo,V_video
TB,N,V_performDialAssist
TB,N,V_performLocalDialAssist
dialAssisted
TB,N,GisDialAssisted,V_dialAssisted
Tq,N,V_ttyType
valid
TB,R,N,GisValid
T@"NSUserActivity",R,N
tu_contactHandlesForHandle:
device
handoffContext
initWithConversationID:device:handoffContext:
_device
_handoffContext
T@"TUNearbyDeviceHandle",R,N,V_device
T@"TUNeighborhoodHandoffContext",R,N,V_handoffContext
csCallingCapabilitiesState
voLTECallingCapabilitiesState
wiFiCallingCapabilitiesState
thumperCallingCapabilitiesState
initWithSenderIdentityUUID:
setSupportsSimultaneousVoiceAndData:
setCsCallingCapabilitiesState:
setVoLTECallingCapabilitiesState:
setWiFiCallingCapabilitiesState:
setThumperCallingCapabilitiesState:
_supportsSimultaneousVoiceAndData
_csCallingCapabilitiesState
_voLTECallingCapabilitiesState
_wiFiCallingCapabilitiesState
_thumperCallingCapabilitiesState
TB,N,V_supportsSimultaneousVoiceAndData
T@"TUCTCapabilitiesState",C,N,V_csCallingCapabilitiesState
T@"TUCTCapabilitiesState",C,N,V_voLTECallingCapabilitiesState
T@"TUCTCapabilitiesState",C,N,V_wiFiCallingCapabilitiesState
T@"TUThumperCTCapabilitiesState",C,N,V_thumperCallingCapabilitiesState
tu_URLSafeBase64EncodedString
tu_UUID
tu_dataForAuditToken:
tu_dataForURLSafeBase64EncodedString:
tu_dataForUUID:
_handleStatusChange
acceptableJunkConfidence
maxJunkConfidence
isJunkConfidenceLevelJunk:
_supplementalDialTelephonyCallStringForLocString:destination:isPhoneNumber:includeFaceTimeAudio:
supplementalDialTelephonyCallStringForDestination:isPhoneNumber:
supplementalDialTelephonyCallString
faceTimeSupplementalDialTelephonyCallStringIncludingFTA:
initWithUniqueProxyIdentifier:endpointOnCurrentDevice:notificationCenter:
updateComparativeCall
isOnHold
setIsOnHold:
hold
unhold
resetProvisionalState
hardPauseDigitsDisplayString
postNotificationsAfterUpdatesInBlock:
uniqueProxyIdentifierUUID
wasDeclined
startTime
hasSentInvitation
isConnecting
isConnected
isActive
isIncoming
isConferenced
resetWantsHoldMusic
suppressRingtone
suppressRingtoneDueToRemoteSuppression
isWiFiCall
isVoIPCall
isRTT
faceTimeTransportType
localizedHandoffRecipientDeviceCategory
handoffRecipientParticipant
dialRequestForRedial
groupWithOtherCall:
ungroup
shouldDisplayLocationIfAvailable
callHistoryIdentifier
isEqualToCall:
callDuration
callDurationString
reminderString
statusIsProvisional
isEmergencyCall
isJunk
isFromSiri
shouldPlayDTMFTone
supportsDTMFTones
displayFirstName
suggestedDisplayName
localizedLabel
abUID
hasRelaySupport:
serviceDisplayString
supplementalInCallString
errorAlertTitle
errorAlertMessage
callStats
isVideoUpgradeFromCall:
isDialRequestVideoUpgrade:
disconnectedReason
faceTimeIDStatus
setFaceTimeIDStatus:
isEndpointOnCurrentDevice
shouldSuppressRingtone
dateCreated
dateAnsweredOrDialed
setDateAnsweredOrDialed:
dateSentInvitation
setDateSentInvitation:
dateStartedConnecting
setDateStartedConnecting:
dateConnected
setDateConnected:
dateEnded
setDateEnded:
wasDialAssisted
setWasDialAssisted:
model
setModel:
comparativeCall
setComparativeCall:
filteredOutReason
setFilteredOutReason:
callServicesInterface
setCallServicesInterface:
videoCallAttributes
setVideoCallAttributes:
verificationStatus
setVerificationStatus:
priority
setPriority:
contactsDataSourceCreationBlock
setContactsDataSourceCreationBlock:
provisionalHoldStatus
setProvisionalHoldStatus:
transitionStatus
hasUpdatedAudio
setHasUpdatedAudio:
soundRegion
setSoundRegion:
isPTT
ringtoneSuppressedRemotely
setRingtoneSuppressedRemotely:
mediaPlaybackOnExternalDevice
hostCreationTime
setHostCreationTime:
hostMessageSendTime
setHostMessageSendTime:
clientMessageReceiveTime
setClientMessageReceiveTime:
wasPulledToCurrentDevice
setWasPulledToCurrentDevice:
hardPauseDigitsState
setHardPauseDigitsState:
hardPauseDigits
setHardPauseDigits:
junkConfidence
identificationCategory
isKnownCaller
joinedFromLink
setJoinedFromLink:
_shouldSuppressRingtone
_wasDialAssisted
_hasUpdatedAudio
_ptt
_ringtoneSuppressedRemotely
_mediaPlaybackOnExternalDevice
_wasPulledToCurrentDevice
_isKnownCaller
_joinedFromLink
_disconnectedReason
_faceTimeIDStatus
_filteredOutReason
_transitionStatus
_hardPauseDigitsState
_dateCreated
_dateAnsweredOrDialed
_dateSentInvitation
_dateStartedConnecting
_dateConnected
_dateEnded
_model
_comparativeCall
_callServicesInterface
_videoCallAttributes
_verificationStatus
_priority
_contactsDataSourceCreationBlock
_provisionalHoldStatus
_soundRegion
_hostCreationTime
_hostMessageSendTime
_clientMessageReceiveTime
_hardPauseDigits
_junkConfidence
_identificationCategory
_remoteScreenAspectRatio
T@"NSNotificationCenter",R,N,GnotificationCenter
TB,R,N,V_lockdownModeEnabled
T@"TUProxyCall",&,N,V_comparativeCall
Ti,N,V_filteredOutReason
T@"TUCallServicesInterface",W,N,V_callServicesInterface
T@"TUVideoCallAttributes",&,N,V_videoCallAttributes
T@"NSUUID",R,C,N
T@"NSDate",&,N,V_dateAnsweredOrDialed
T@"NSDate",&,N,V_dateSentInvitation
T@"NSDate",&,N,V_dateStartedConnecting
T@"NSDate",&,N,V_dateConnected
T@"NSDate",&,N,V_dateEnded
Tq,N,V_verificationStatus
Tq,N,V_priority
T@?,C,N,V_contactsDataSourceCreationBlock
T@"TUParticipant",R,C,N,V_activeRemoteParticipant
Tq,N,V_provisionalHoldStatus
Ti,N,V_disconnectedReason
T@"NSURL",R,N,V_imageURL
Tq,R,N,V_serviceStatus
Tq,R,N,V_transmissionMode
TB,R,N,GisReceivingTransmission
TB,R,N,GisSendingTransmission
Ti,N,V_transitionStatus
Ti,N,V_faceTimeIDStatus
TB,N,V_hasUpdatedAudio
Tq,N,V_soundRegion
TB,N,GisEndpointOnCurrentDevice,V_endpointOnCurrentDevice
TB,R,N,GisPTT,V_ptt
TB,R,N,GisSOS
TB,R,N,GisRemoteUplinkMuted
Tf,R,N
TB,N,V_shouldSuppressRingtone
TB,N,V_ringtoneSuppressedRemotely
wiFiCall
TB,R,N,GisWiFiCall
voipCall
TB,R,N,GisVoIPCall
T@"NSDictionary",R,N,V_providerContext
T@"NSNumber",R,N
TB,R,N,GisMediaStalled
TB,R,N,GisVideoDegraded
TB,R,N,GisVideoPaused
TB,R,N,GisVideoMirrored
T{CGSize=dd},R,N,V_remoteScreenAspectRatio
TB,N,V_mixesVoiceWithMedia
TB,N,V_mediaPlaybackOnExternalDevice
TB,R,N,GisThirdPartyVideo
Td,N,V_hostCreationTime
Td,N,V_hostMessageSendTime
Td,N,V_clientMessageReceiveTime
TB,N,V_wasPulledToCurrentDevice
Ti,N,V_hardPauseDigitsState
T@"NSString",C,N,V_hardPauseDigits
T@"TUCallModel",C,N,V_model
T@"TUCallDisplayContext",R,C,N
TB,R,N,GisMutuallyExclusiveCall
TB,R,N,GisConversation
Ti,R,N,V_originatingUIType
Tq,R,N,V_junkConfidence
Tq,R,N,V_identificationCategory
junk
TB,R,N,GisJunk
fromSiri
TB,R,N,GisFromSiri
TB,R,N,V_isKnownCaller
TB,N,V_joinedFromLink
T@"TUCallScreenShareAttributes",R,N,V_screenShareAttributes
TB,R,N,GisInternational,V_international
T@"TUCallCenter",R,W,N
TB,R,N,GisHostedOnCurrentDevice
TB,R,N,GisRTT
TB,R,N,GisVoicemail
T@"NSDate",R,N,V_dateCreated
connecting
TB,R,N,GisConnecting
connected
TB,R,N,GisConnected
TB,R,N,GisOutgoing
incoming
TB,R,N,GisIncoming
TB,R,N,GisBlocked
Td,R,N
conferenced
TB,R,N,GisConferenced
T@"TUHandle",R,N
TB,N,V_wasDialAssisted
emergencyCall
TB,R,N,GisEmergencyCall
TB,R,N,GisEmergency
TB,R,N,GisUsingBaseband
T@"NSData",R,N
T@"TUDialRequest",R,C,N
shouldForceVerificationFailures
TB,R,N,GisEnabled
initWithFeatureFlags:userDefaults:serverBag:
serverBagValueForKey:withDefault:
setUserDefaults:
serverBag
setServerBag:
_userDefaults
_serverBag
T@"NSUserDefaults",&,N,V_userDefaults
T@"FTServerBag",&,N,V_serverBag
autocompleteFetch:didReceiveResults:
autocompleteFetch:didFailWithError:
autocompleteFetchDidFinish:
autocompleteFetchDidBeginNetworkActivity:
autocompleteFetchDidEndNetworkActivity:
autocompleteFetch:shouldExpectSupplementalResultsForRequest:completionHandler:
autocompleteFetch:willAdjustResults:
autocompleteFetch:willSortResults:
resultComparatorForAutocompleteFetch:
_cleanup
autocompleteStore
setAutocompleteStore:
fetchRequest
setFetchRequest:
autocompleteResultPartitioner
setAutocompleteResultPartitioner:
isCancelled
setCancelled:
_cancelled
_autocompleteStore
_fetchRequest
_autocompleteResultPartitioner
T@"CNAutocompleteStore",&,N,V_autocompleteStore
T@"<CNAutocompleteCancelable>",&,N,V_fetchRequest
T@"TUAutocompleteResultPartitioner",&,N,V_autocompleteResultPartitioner
cancelled
TB,N,GisCancelled,V_cancelled
recentCallsDeleted:
allCallHistoryDeleted
callHistoryControllerAllowedClasses
callHistoryControllerClientXPCInterface
callHistoryControllerServerXPCInterface
T@"<TUCallHistoryControllerXPCServer>",&,N
updateOutgoingLocalParticipantUUID:forCallsWithOutgoingLocalParticipantUUID:
callHistoryManagerAllowedClasses
callHistoryManagerClientXPCInterface
callHistoryManagerServerXPCInterface
T@"<TUCallHistoryManagerXPCServer>",&,N
auxiliaryKeysToFetch
setAuxiliaryKeysToFetch:
phoneNumberPrefixHint
setPhoneNumberPrefixHint:
useNetworkCountryCode
setUseNetworkCountryCode:
isVerified
_useNetworkCountryCode
_verified
_incoming
_auxiliaryKeysToFetch
_phoneNumberPrefixHint
_handles
TB,R,N,GisEmergency,V_emergency
TB,R,N,GisBlocked,V_blocked
TB,R,N,GisConversation,V_conversation
verified
TB,R,N,GisVerified,V_verified
TB,R,N,GisIncoming,V_incoming
T@"NSString",R,C,N,V_isoCountryCode
T@"NSArray",R,C,N,V_handles
T@"NSArray",C,N,V_auxiliaryKeysToFetch
T@"NSString",C,N,V_phoneNumberPrefixHint
TB,N,V_useNetworkCountryCode
tu_UUIDv5ForString:namespaceUUID:
tu_UUIDv5ForData:namespaceUUID:
save
wantsCallDisconnectionOnInvalidation
setWantsCallDisconnectionOnInvalidation:
wantsCallStopStreamingOnInvalidation
setWantsCallStopStreamingOnInvalidation:
wantsFrequencyChangeNotifications
setWantsFrequencyChangeNotifications:
wantsCallNotificationsDisabledWhileSuspended
setWantsCallNotificationsDisabledWhileSuspended:
_wantsCallDisconnectionOnInvalidation
_wantsCallStopStreamingOnInvalidation
_wantsFrequencyChangeNotifications
_wantsCallNotificationsDisabledWhileSuspended
T@"<TUCallServicesClientCapabilitiesActions>",W,N,V_delegate
TB,N,V_wantsCallDisconnectionOnInvalidation
TB,N,V_wantsCallStopStreamingOnInvalidation
TB,N,V_wantsFrequencyChangeNotifications
TB,N,V_wantsCallNotificationsDisabledWhileSuspended
requestSandboxExtensionForURL:reply:
didUpdateCapabilities:forVideoStreamToken:
willCaptureRemoteRequestFromRequesterID:
didReceiveLocallyRequestedMomentDescriptor:
registerXPCClientWithReply:
registerStreamToken:requesterID:remoteIDSDestinations:remoteMomentsAvailable:reply:
unregisterStreamToken:reply:
startRequestWithMediaType:forStreamToken:requesteeID:reply:
endRequestWithTransactionID:reply:
momentsControllerClientXPCInterface
momentsControllerServerXPCInterface
registerStreamToken:requesterID:remoteIDSDestinations:remoteMomentsAvailable:completion:
unregisterStreamToken:completion:
startRequestWithMediaType:forStreamToken:requesteeID:completion:
processIdentifier
processName
T@"<TUMomentsControllerDataSourceDelegate>",W,N
T@"<TUMomentsControllerXPCServer>",&,N
processBundleIdentifier
_registerConnection
T@"<TUMomentsControllerDataSourceDelegate>",W,N,V_delegate
allowCallForDestinationID
setAllowCallForDestinationID:
isFromBlockList
setFromBlockList:
_allowCallForDestinationID
_fromBlockList
TB,N,V_allowCallForDestinationID
fromBlockList
TB,N,GisFromBlockList,V_fromBlockList
allowCallForDestinationID:providerIdentifier:
allowCallForDestinationID:providerIdentifier:queue:completionHandler:
sharedContactStore
sharedInstanceWithQueue:server:shouldRegister:
callCenterWithQueue:
callCenterWithQueue:server:shouldRegister:
supportsJoiningConversationWithRequest:
T@"TUCallCenter",R,N
initWithQueue:featureFlags:
audioDeviceController
videoDeviceController
routeController
callFilterController
neighborhoodActivityConduit
isRelayCallingSupportedForProvider:isVideo:
isDirectCallingCurrentlyAvailableForProvider:isVideo:
shouldPreferRelayOverDirectSecondaryCallingForProvider:isVideo:
_shouldPreferRelayOverDirectSecondaryCallingForRelayingCallingAvailability:isRelayCallingSupported:isEmergencyCallbackPossible:
_existingCallsAllowDialRequest:allowVoiceWithData:
_isCallingAvailableOnSecondaryDeviceWithRelayCallingAvailability:isProviderAvailable:isRelayAllowed:isEmergency:supportsBasebandCalling:shouldUseRelay:
_canDialWithRequest:shouldUseRelay:
_isEmergencyDialRequest:
canDialWithRequest:
dialWithRequest:
_dialWithRequest:completion:
applicationWillLaunchForStartCallInteraction:
sendFieldModeDigits:forProvider:
answerCall:
answerOrJoinCall:
answerCall:withSourceIdentifier:
answerCallWithHoldMusic:
answerCall:withSourceIdentifier:wantsHoldMusic:
holdActiveAndAnswerCall:
endActiveAndAnswerCall:
endHeldAndAnswerCall:
endActiveOrHeldAndAnswerCall:
reportLocalPreviewStoppedForCall:
updateCall:withAnswerRequest:
holdCall:
requestVideoUpgradeForCall:
unholdCall:
resumeCall:
groupCall:withOtherCall:
ungroupCall:
_preflightDisconnectForCalls:withCompletion:
disconnectCall:
disconnectCall:withReason:
disconnectAllCallsWithNoPreflight
handleActionForWiredHeadsetMiddleButtonPress
handleActionForWiredHeadsetMiddleButtonPressWithSourceIdentifier:allowBluetoothAnswerWithoutDowngrade:shouldForceDowngradeToAudio:
handleHeadsetButtonPressForActiveCalls
handleActionForWiredHeadsetMiddleButtonLongPress
setTTYType:forCall:
pushRelayingCallsToHost
pickRouteForRapportDeviceWithMediaSystemIdentifier:effectiveIdentifier:
launchAppForJoinRequest:
continueHandoffEligibleConversation
continueHandoffForConversationWithEligibility:
joinConversationWithConversationRequest:
enteredForegroundForCall:
activeConversationForCall:
activeConversationForCall:backedByGroupSession:
isSwappable
isMergeable
isHoldAllowed
isTakingCallsPrivateAllowed
isHardPauseAvailable
isSendToVoicemailAllowed
canMergeCalls
isAddCallAllowed
isAmbiguous
isEndAndAnswerAllowed
isHoldAndAnswerAllowed
canGroupCall:withCall:
_callGroupCountForCall:withCall:
createSplitSessionWithDeviceMediaRouteIdentifier:completion:
disconnectDeviceFromSplitSessionUsingMediaRouteIdentifier:completion:
_splitSessionErrorWithCode:underlyingError:
setAudioDeviceController:
setVideoDeviceController:
setRouteController:
setCallFilterController:
setNeighborhoodActivityConduit:
setProviderManager:
disconnectCallPreflight
setDisconnectCallPreflight:
launchAppForJoinRequestBlock
setLaunchAppForJoinRequestBlock:
setConversationManager:
_audioDeviceController
_videoDeviceController
_routeController
_callFilterController
_neighborhoodActivityConduit
_disconnectCallPreflight
_launchAppForJoinRequestBlock
T@"TUCallServicesInterface",&,N,V_callServicesInterface
T@"TUAudioDeviceController",&,N,V_audioDeviceController
T@"TUVideoDeviceController",&,N,V_videoDeviceController
T@"TURouteController",&,N,V_routeController
T@"TUCallFilterController",&,N,V_callFilterController
T@"TUNeighborhoodActivityConduit",&,N,V_neighborhoodActivityConduit
T@"TUCallProviderManager",&,N,V_providerManager
T@?,C,N,V_disconnectCallPreflight
T@?,C,N,V_launchAppForJoinRequestBlock
T@"TUConversationManager",&,N,V_conversationManager
addCallAllowed
TB,R,N,GisAddCallAllowed
ambiguous
TB,R,N,GisAmbiguous
endAndAnswerAllowed
TB,R,N,GisEndAndAnswerAllowed
holdAndAnswerAllowed
TB,R,N,GisHoldAndAnswerAllowed
updateOutgoingLocalParticipantUUID:forCallsWithLocalParticipantUUID:
T@"<TUCallHistoryManagerDataSource>",R,N,V_dataSource
announceCalls
conversationLinkBaseURLString
conversationLinkBaseURL
simulateFatalPersistentStoreError
simulateInternationalCall
setAnnounceCalls:
setConversationLinkBaseURLString:
setConversationLinkBaseURL:
setSimulateFatalPersistentStoreError:
setSimulateInternationalCall:
numberForKey:
delegateController
_delegateController
T@"TUDelegateController",R,N,V_delegateController
TQ,N
T@"NSString",&,N
T@"<TUKeyValueDataSource><TUMutableKeyValueDataSource>",R,N,V_dataSource
tu_stringWithTUConfigurationAnnounceCalls:
tu_clientSandboxCanAccessFileURL:
requestInitialState:
dialWithRequest:displayContext:
dialWithRequest:reply:
pullCallFromClientUsingHandoffActivityUserInfo:reply:
localRoutesByUniqueIdentifier:
pairedHostDeviceRoutesByUniqueIdentifier:
pickLocalRouteWithUniqueIdentifier:shouldWaitUntilAvailable:
pickPairedHostDeviceRouteWithUniqueIdentifier:shouldWaitUntilAvailable:
willRestrictAddresses:forBundleIdentifier:reply:
containsRestrictedHandle:forBundleIdentifier:performSynchronously:reply:
shouldRestrictAddresses:forBundleIdentifier:performSynchronously:reply:
filterStatusForAddresses:forBundleIdentifier:reply:
policyForAddresses:forBundleIdentifier:reply:
isUnknownAddress:normalizedAddress:forBundleIdentifier:reply:
callServicesServerXPCInterface
callServicesClientXPCInterface
tu_INPersonHandleTypeForTUHandleType:
tu_INPersonHandleForTUHandle:label:
initWithContactProvider:
voicemailStartCallIntentByHandleForHandles:
personsByHandleForHandles:
startCallIntentByHandleForHandles:capability:destinationType:
contactProvider
_contactProvider
T@"<TUHandleContactProvider>",R,N,V_contactProvider
endpoint
isLocallyInitiated
isFirstJoin
applicationState
distributionCount
isLightweightPrimaryInitiated
isPermittedToJoin
persistentSceneIdentifier
isUsingAirplay
clientAudioSessionID
initWithActivity:state:uuid:endpoint:locallyInitiated:timestamp:isFirstJoin:activeRemoteParticipants:applicationState:
initWithTUConversationActivitySession:
initWithActivity:state:endpoint:locallyInitiated:timestamp:isFirstJoin:
initWithActivity:uuid:locallyInitiated:timestamp:isFirstJoin:
initWithActivity:locallyInitiated:timestamp:isFirstJoin:
isEqualToConversationActivitySession:
launchApplicationWithForcedURL:completion:
publicCopy
setEndpoint:
setIsLocallyInitiated:
setClientAudioSessionID:
setIsLightweightPrimaryInitiated:
setPermittedToJoin:
setPersistentSceneIdentifier:
setDistributionCount:
terminatingHandle
setTerminatingHandle:
setUsingAirplay:
_isLocallyInitiated
_isLightweightPrimaryInitiated
_isFirstJoin
_permittedToJoin
_usingAirplay
_endpoint
_clientAudioSessionID
_persistentSceneIdentifier
_distributionCount
_applicationState
_terminatingHandle
TQ,N,V_state
T@"NSXPCListenerEndpoint",&,N,V_endpoint
TB,N,V_isLocallyInitiated
usingAirplay
TB,N,GisUsingAirplay,V_usingAirplay
T@"NSDate",&,N,V_timestamp
T@"NSNumber",&,N,V_clientAudioSessionID
TB,N,V_isLightweightPrimaryInitiated
TB,R,N,V_isFirstJoin
permittedToJoin
TB,N,GisPermittedToJoin,V_permittedToJoin
T@"NSSet",R,N,V_activeRemoteParticipants
T@"NSString",&,N,V_persistentSceneIdentifier
TQ,N,V_distributionCount
TQ,R,N,V_applicationState
T@"TUHandle",&,N,V_terminatingHandle
T@"TUConversationActivity",&,D,N
T@"NSXPCListenerEndpoint",&,D,N
TB,D,N,GisPermittedToJoin
T@"NSSet",&,D,N
T@"NSString",&,D,N
TB,D,N,GisUsingAirplay
knownIdentifiersByHandleType
deviceModel
initWithName:knownIdentifiers:deviceModel:capabilities:
initWithName:knownIdentifiers:deviceModel:
initWithName:knownIdentifiers:
initWithType:identifier:name:
initWithType:identifier:name:capabilities:
identifierDescription
plistRepresentation
identifierWithType:
isEquivalentToDeviceHandle:
isEqualToDeviceHandle:
_deviceModel
_knownIdentifiersByHandleType
T@"NSDictionary",R,N,V_knownIdentifiersByHandleType
Tq,R,N,V_deviceModel
T@"TUNearbyDeviceHandleCapabilities",R,N,V_capabilities
isEmergencyNumberForDigits:senderIdentityUUID:
isEmergencyNumberForDigits:senderIdentityUUID:error:
isWhitelistedEmergencyNumberForDigits:senderIdentityUUID:
isWhitelistedEmergencyNumberForDigits:senderIdentityUUID:error:
shouldShowEmergencyCallbackModeAlertForSenderIdentityUUID:
shouldShowEmergencyCallbackModeAlertForSenderIdentityUUID:error:
testEmergencyHandleForAccountUUID:error:
initWithObject:
performWhileLocked:
object
setObject:
unfairLockForTesting
_object
isEqualToProvider:
requesterID
remoteIDSDestinations
isRemoteMomentsAvailable
_remoteMomentsAvailable
_requesterID
_remoteIDSDestinations
Tq,R,N,V_streamToken
T@"NSString",R,C,N,V_requesterID
T@"NSDictionary",R,C,N,V_remoteIDSDestinations
remoteMomentsAvailable
TB,R,N,GisRemoteMomentsAvailable,V_remoteMomentsAvailable
mediaPrioritiesChangedForConversation:
getMessagesGroupDetailsForMessagesGroupUUID:completionHandler:
updateConversationsByGroupUUID:
updateActivatedConversationLinks:
conversation:appLaunchState:forActivitySession:
updateActivityAuthorizedBundleIdentifierState:
updateIncomingPendingConversationsByGroupUUID:
setSupportsMessagesGroupProviding:
conversationsByGroupUUID:
incomingPendingConversationsByGroupUUID:
pseudonymsByCallUUID:
activityAuthorizedBundleIdentifierState:
activatedConversationLinks:
addRemoteMembers:otherInvitedHandles:toConversationWithUUID:
leaveActivitySession:onConversationWithUUID:
endActivitySession:onConversationWithUUID:
presentDismissalAlertForActivitySessionWithUUID:onConversationWithUUID:
createActivitySession:onConversationWithUUID:
setUsingAirplay:onActivitySession:onConversationWithUUID:
setDownlinkMuted:forRemoteParticipantsInConversationWithUUID:
setAudioEnabled:forRemoteParticipantWithIdentifier:conversationUUID:
setVideoEnabled:forRemoteParticipantWithIdentifier:conversationUUID:
buzzMember:conversationUUID:
kickMember:conversationUUID:
updateMessagesGroupName:onConversationWithUUID:
setGridDisplayMode:forConversationWithUUID:
updateMessagesGroupPhotoOnConversationWithUUID:
getSharePlayAvailableWithCompletionHandler:
getScreenSharingAvailableWithCompletionHandler:
generateLinkForConversationUUID:completionHandler:
approvePendingMember:forConversationUUID:
rejectPendingMember:forConversationUUID:
setIgnoreLetMeInRequests:forConversationUUID:
conversationManagerAllowedClasses
conversationManagerClientXPCInterface
conversationManagerServerXPCInterface
setIgnoreLetMeInRequests:forConversation:
conversationsByGroupUUID
incomingPendingConversationsByGroupUUID
pseudonymsByCallUUID
mediaDelegate
setMediaDelegate:
T@"<TUConversationManagerDataSourceDelegate>",W,N
T@"<TUConversationMediaControllerDataSourceDelegate>",W,N
T@"<TUConversationManagerXPCServer>",&,N
setConversationsByGroupUUID:
setActivityAuthorizedBundleIdentifiers:
setSharePlayAvailable:
_autoSharePlayEnabled
_mediaDelegate
_conversationsByGroupUUID
_activityAuthorizedBundleIdentifiers
_sharePlayAvailable
T@"NSDictionary",C,N,V_conversationsByGroupUUID
T@"NSDictionary",C,N,V_activityAuthorizedBundleIdentifiers
T@"NSNumber",C,N,V_sharePlayAvailable
T@"NSNumber",C,N,V_screenSharingAvailable
TB,N,V_autoSharePlayEnabled
T@"<TUConversationManagerDataSourceDelegate>",W,N,V_delegate
T@"<TUConversationMediaControllerDataSourceDelegate>",W,N,V_mediaDelegate
tu_contactsByConversationMemberForConversationMembers:keyDescriptors:error:
tu_contactsByRemoteConversationMemberForConversations:keyDescriptors:error:
dialRequestForRecentCall:
@24@0:8@16
@32@0:8@16@24
@16@0:8
v24@0:8@16
v16@0:8
@"NSObject<OS_dispatch_queue>"
@"<TURouteControllerActions>"
@"NSHashTable"
@"NSDictionary"
B16@0:8
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@28@0:8i16@20
Q16@0:8
B24@0:8@16
i16@0:8
@"NSSet"
^{__IOHIDEventSystemClient=}
@"NSString"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@?24
v48@0:8@16Q24Q32@?40
v44@0:8B16q20@28@?36
v48@0:8@16q24@32@?40
v40@0:8q16@24@?32
v40@0:8@16@24@?32
v32@0:8@"NSArray"16@?<v@?B@"NSError">24
v32@0:8@"NSPredicate"16@?<v@?Q@"NSError">24
v48@0:8@"NSPredicate"16Q24Q32@?<v@?@"NSArray"@"NSError">40
v44@0:8B16q20@"NSPredicate"28@?<v@?Q@"NSError">36
v48@0:8@"NSDate"16q24@"NSPredicate"32@?<v@?Q@"NSError">40
v48@0:8@"NSSet"16q24@"NSPredicate"32@?<v@?Q@"NSError">40
v48@0:8@"NSString"16q24@"NSPredicate"32@?<v@?Q@"NSError">40
v40@0:8q16@"NSString"24@?<v@?B@"NSError">32
v32@0:8@"NSString"16@?<v@?q@"NSError">24
v40@0:8@"NSString"16@"NSString"24@?<v@?B@"NSError">32
v32@0:8@"NSString"16@?<v@?@"NSString"@"NSError">24
B32@0:8@16^@24
Q32@0:8@16^@24
@48@0:8@16Q24Q32^@40
Q44@0:8B16q20@28^@36
Q48@0:8@16q24@32^@40
B32@0:8@"NSArray"16^@24
Q32@0:8@"NSPredicate"16^@24
@"NSArray"48@0:8@"NSPredicate"16Q24Q32^@40
Q44@0:8B16q20@"NSPredicate"28^@36
Q48@0:8@"NSDate"16q24@"NSPredicate"32^@40
Q48@0:8@"NSSet"16q24@"NSPredicate"32^@40
Q48@0:8@"NSString"16q24@"NSPredicate"32^@40
@"<TUConversationLinkDescriptorDataSourceDelegate>"16@0:8
v24@0:8@"<TUConversationLinkDescriptorDataSourceDelegate>"16
B40@0:8q16@24^@32
q32@0:8@16^@24
B40@0:8@16@24^@32
@32@0:8@16^@24
B40@0:8q16@"NSString"24^@32
q32@0:8@"NSString"16^@24
B40@0:8@"NSString"16@"NSString"24^@32
@"NSString"32@0:8@"NSString"16^@24
@24@0:8@?16
{os_unfair_lock_s=I}16@0:8
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"<TUConversationLinkDescriptorDataSourceDelegate>"
@"NSXPCConnection"
@36@0:8@16B24^@28
v36@0:8@16B24@?28
v32@0:8@16@24
@"NSObject<OS_dispatch_semaphore>"
@24@0:8^{_NSZone=}16
@48@0:8@16@24@32@40
@56@0:8@16@24@32@40@48
@64@0:8@16@24@32@40@48@56
@36@0:8@16@24B32
v20@0:8B16
@"NSUUID"
@"NSData"
@"TUConversationActivityMetadata"
@"TUHandle"
@"NSDate"
@?16@0:8
v24@0:8@?16
@"CXCallDirectoryManager"
@"PNRPhoneNumberResolver"
v68@0:8@?16^@24^B32B40^Q44@52@60
v76@0:8@?16^@24^B32B40^Q44@52@60@68
@40@0:8@16@24@32
v28@0:8B16@20
@"TUSenderIdentityCapabilitiesState"
@"TUCallCapabilitiesXPCClient"
q16@0:8
@32@0:8@16i24B28
@28@0:8@16i24
@44@0:8@16i24B28B32B36B40
@28@0:8@16B24
@32@0:8@16q24
@40@0:8@16i24B28B32B36
@24@0:8^@16
@"NSData"24@0:8^@16
@"NSSet"16@0:8
@32@0:8@"NSData"16^@24
v20@0:8i16
@"NSURL"
v24@0:8q16
@"TUConversationLinkOriginator"
@20@0:8B16
@24@0:8q16
@?24@0:8@?16
i20@0:8i16
v20@0:8I16
v32@0:8@16q24
v36@0:8B16d20d28
v24@0:8@"NSString"16
v24@0:8@"VideoAttributes"16
v32@0:8@"NSString"16@"NSError"24
v24@0:8@"NSData"16
v32@0:8@"NSString"16q24
v40@0:8@16@24@32
v28@0:8@16B24
v24@0:8@"<TUVideoDeviceControllerProvider>"16
v32@0:8@"<TUVideoDeviceControllerProvider>"16@"NSString"24
v32@0:8@"<TUVideoDeviceControllerProvider>"16@"VideoAttributes"24
v40@0:8@"<TUVideoDeviceControllerProvider>"16@"NSString"24@"NSError"32
v28@0:8@"<TUVideoDeviceControllerProvider>"16B24
v32@0:8@"<TUVideoDeviceControllerProvider>"16@"NSData"24
v24@0:8d16
v32@0:8d16d24
v48@0:8{CGSize=dd}16{CGSize=dd}32
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
{CGSize=dd}16@0:8
@"<TUVideoDeviceControllerProvider><TUVideoEffectsProvider>"
@"<TUFeatureFlags>"
v32@0:8@"NSString"16@?<v@?@"<TUSearchModuleProtocol>"B>24
@"TUSearchResults"16@0:8
@"TUSearchController"16@0:8
v24@0:8@"TUSearchController"16
@"TUSearchController"
@"NSMutableArray"
Vv40@0:8q16@24@?32
Vv40@0:8q16@"NSString"24@?<v@?@"NSError">32
v40@0:8q16@"NSString"24@?<v@?@"NSError">32
B20@0:8C16
q24@0:8q16
@32@0:8q16q24
@"UIImage"
@"TUConversationLink"
@40@0:8@16q24@32
v40@0:8@?16Q24@?32
v48@0:8@?16Q24d32@?40
@"TURepeatingAction"
v24@0:8Q16
d16@0:8
@32@0:8Q16Q24
v24@0:8@"TUCallProviderManager"16
@40@0:8Q16Q24@32
@24@0:8Q16
@"NSArray"
@"CHManager"
@"TUCallProviderManager"
@"TUDispatcher"
@"NSMutableSet"
@"<TUCallHistoryControllerDataSource>"
v36@0:8B16@20@28
@"<TUCoreTelephonyClient>"
v40@0:8@16@24q32
v40@0:8@"<TUMomentsControllerDataSource>"16@"TUMomentsCapabilities"24q32
v32@0:8@"<TUMomentsControllerDataSource>"16@"NSString"24
v32@0:8@"<TUMomentsControllerDataSource>"16@"TUMomentDescriptor"24
v40@0:8@"<TUMomentsControllerDataSource>"16@"NSURL"24@?<v@?@"TUSandboxExtendedURL"@"NSError">32
v24@0:8@"<TUMomentsControllerDataSource>"16
v44@0:8i16@20@28@?36
@"<TUMomentsControllerDataSource>"
@"<TUMomentsControllerDelegate>"
@"NSMutableDictionary"
I16@0:8
v28@0:8I16d20
v36@0:8I16Q20d28
v44@0:8I16Q20d28@?36
@"TURepeatingActor"
Vv24@0:8@16
Vv24@0:8@"NSString"16
@"AVAudioClient"
@"<TUAudioDeviceControllerActions>"
@"NSUUID"16@0:8
@"TUConversationActivitySession"
@40@0:8Q16@24@32
@32@0:8Q16@24
@"TUConversationParticipantCapabilities"
@"TUConversationParticipantAssociation"
@"CNContact"16@0:8
@"NSArray"16@0:8
@"CHRecentCall"
v48@0:8@16d24@32@?40
v48@0:8@16@24@32@?40
@"<TUConversationProviderManagerDataSource>"
@"CNAutocompleteResult"
B32@0:8@16@24
B36@0:8q16@24B32
B24@0:8Q16
B24@0:8q16
@"TUConversationReport"
@"TUConversationProvider"
@"TUConversationMember"
@"TUConversationHandoffEligibility"
@"NSObject"
@20@0:8i16
Q24@0:8@?16
B24@0:8@?16
B20@0:8i16
@"NSArray"24@0:8@?<B@?@"TUCall">16
@"NSArray"20@0:8i16
@"NSArray"24@0:8@"NSUUID"16
@"TUCall"24@0:8@?<B@?@"TUCall">16
@"TUCall"20@0:8i16
@"TUCall"24@0:8@"NSString"16
@"TUCall"24@0:8@"NSArray"16
Q24@0:8@?<B@?@"TUCall">16
B24@0:8@?<B@?@"TUCall">16
@"TUCall"16@0:8
v32@0:8@?16@?24
v40@0:8Q16@?24@?32
@32@0:8@?16Q24
@32@0:8@?16@?24
B24@0:8@"<TUScreenShareAttributes>"16
@"NSNumber"16@0:8
v24@0:8@"NSNumber"16
@"NSValue"16@0:8
v24@0:8@"NSValue"16
v24@0:8@"NSUUID"16
@"NSNumber"
@"NSValue"
v48@0:8@16@24q32@?40
v24@0:8@"TUNeighborhoodActivityConduitXPCClient"16
v24@0:8@"TUNearbyDeviceHandle"16
v48@0:8@"NSUUID"16@"TUNearbyDeviceHandle"24q32@?<v@?B@"NSError">40
@"<TUNeighborhoodActivityConduitApprovalDelegate>"
@"TUNearbyDeviceHandle"
@"NSMapTable"
@"TUNeighborhoodActivityConduitXPCClient"
@"TUConversationManager"
f16@0:8
v20@0:8f16
v44@0:8@16@24B32@?36
@"<TUAudioSystemControllerDelegate>"
Vv24@0:8@"TUCallCapabilitiesState"16
Vv20@0:8B16
Vv28@0:8B16@20
Vv36@0:8B16@20@28
Vv28@0:8B16@"NSString"20
Vv28@0:8B16@"NSUUID"20
Vv36@0:8B16@"NSString"20@"NSUUID"28
Vv24@0:8@"NSUUID"16
Vv24@0:8@?16
Vv24@0:8@?<v@?@"TUCallCapabilitiesState">16
v24@0:8@"<TUCallCapabilitiesXPCClient>"16
@"TUCallCapabilitiesState"
@"TUConversationMemberAssociation"
@"TUVoucher"
@?<v@?>16@0:8
v24@0:8@?<v@?>16
@40@0:8@16@24@?32
i24@0:8@16
@"<TUContactsDataSource>"
@"TUContactsDataProviderAppleCareHandles"
@40@0:8@16@24^@32
r^v24@0:8@16
@"NSDictionary"40@0:8@"NSArray"16@"NSArray"24^@32
@"CNContact"40@0:8@"NSString"16@"NSArray"24^@32
@"NSArray"40@0:8@"NSPredicate"16@"NSArray"24^@32
r^v24@0:8@"CNContact"16
@"CNContact"32@0:8@"NSString"16@"NSArray"24
B28@0:8@16B24
Q24@0:8@16
@"NSDictionary"24@0:8@"<TUContactsDataSource>"16
@44@0:8@16@24@32B40
@"TUConversationActivity"
B24@0:8@"NSUUID"16
v32@0:8{CGSize=dd}16
@"IDSDestination"
{CGSize="width"d"height"d}
@"TUMetadataCache"
v28@0:8@16i24
v28@0:8@"CALayer"16i24
@"CALayer"
Vv40@0:8@16@24@32
Vv40@0:8@"NSDictionary"16@"NSDictionary"24@"NSDictionary"32
Vv32@0:8@16@?24
Vv24@0:8@?<v@?@"NSDictionary"@"NSDictionary"@"NSDictionary">16
Vv32@0:8@"TUDialRequest"16@?<v@?@"NSError">24
v24@0:8@"<TUCallProviderManagerXPCClient>"16
B36@0:8@16B24^@28
B36@0:8@"NSURL"16B24^@28
v32@0:8@"TUDialRequest"16@?<v@?@"NSError">24
@"NSDictionary"16@0:8
@"<TUCallProviderManagerDataSourceDelegate>"16@0:8
v24@0:8@"<TUCallProviderManagerDataSourceDelegate>"16
@"<TUCallProviderManagerDataSourceDelegate>"
@"NSPersonNameComponents"
B36@0:8@16@24B32
B40@0:8@16@24@32
@"<TUCallFilterControllerActions>"
@"<TUMetadataCacheDataProviderDelegate>"
@"TUConversationProviderConfiguration"
@92@0:8@16@24@32@40@48@56@64B72@76q84
@"TUCallCenter"
v24@0:8@"TUConversation"16
@"<TUConversationMediaControllerDelegate>"
@"<TUConversationManagerDataSource>"
@"TUConversationVirtualParticipantConfig"
@"TUConversationUnreliableMessengerConfig"
@36@0:8@16q24B32
@"TUGroupTitle"
v32@0:8@16Q24
@68@0:8Q16Q24Q32Q40B48@52@60
@84@0:8Q16Q24@32@40{CGRect={CGPoint=dd}{CGSize=dd}}48B80
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
v24@0:8@"TUConfiguration"16
v48@0:8@16@24@32^v40
Vv36@0:8@16i24@28
Vv32@0:8f16i20@24
Vv32@0:8@16@24
Vv36@0:8@"NSData"16i24@"NSArray"28
Vv32@0:8f16i20@"NSArray"24
Vv32@0:8@"NSArray"16@"TUCall"24
Vv40@0:8@"NSString"16@"NSString"24@"NSDictionary"32
Vv24@0:8@"NSDictionary"16
Vv28@0:8@16C24
Vv28@0:8i16@20
Vv40@0:8@16{CGSize=dd}24
Vv28@0:8@16i24
Vv32@0:8@16q24
Vv24@0:8@"TUAnswerRequest"16
Vv32@0:8@"NSString"16@"NSString"24
Vv28@0:8@"NSString"16C24
Vv28@0:8i16@"NSString"20
Vv24@0:8@"IDSDestination"16
Vv24@0:8@"TUProxyCall"16
Vv40@0:8@"NSString"16{CGSize=dd}24
Vv28@0:8@"NSString"16i24
Vv24@0:8@"TUDialRequest"16
Vv32@0:8@"NSString"16@"TUCallScreenShareAttributes"24
Vv36@0:8B16@"TUCallScreenShareAttributes"20@"NSString"28
Vv32@0:8@"NSString"16q24
Vv24@0:8@"TUCallServicesClientCapabilities"16
v36@0:8@16B24@28
@"NSDictionary"24@0:8@"TURouteController"16
v36@0:8@"NSString"16B24@"TURouteController"28
Q32@0:8@16@24
B36@0:8@"TUHandle"16@"NSString"24B32
B36@0:8@"NSSet"16@"NSString"24B32
Q32@0:8@"NSSet"16@"NSString"24
@"NSDictionary"32@0:8@"NSSet"16@"NSString"24
B32@0:8@"NSSet"16@"NSString"24
B40@0:8@"NSString"16@"NSString"24@"NSString"32
^v16@0:8
v28@0:8@?16B24
@32@0:8@16@?24
@"<TUCallServicesXPCServer>"
@"TUCallServicesClientCapabilities"
@"TURouteController"
@"TUCallNotificationManager"
@"TUFeatureFlags"
v32@0:8@16#24
@24@0:8#16
B56@0:8@16@24@32@40@?48
B56@0:8@"NSArray"16@"NSString"24@"NSString"32@"NSObject<OS_dispatch_queue>"40@?<v@?@"NSDictionary">48
v24@0:8@"NSArray"16
I32@0:8@16@24
v48@0:8@16@24@32@40
v48@0:8@"IDSBatchIDQueryController"16@"NSDictionary"24@"NSString"32@"NSError"40
v24@0:8@"NSDictionary"16
v32@0:8@"NSDictionary"16@"NSString"24
I24@0:8@16
@"<TUIDSIDQueryController>"
@"TULocked"
@"<TUIDSBatchIDQueryController>"
@"CoreTelephonyClient"
@?32@0:8@16@?24
@?48@0:8@16@24#32@?40
@"CNContactStore"
Vv36@0:8q16i24@?28
Vv32@0:8q16@?24
Vv36@0:8q16i24@?<v@?@"NSError">28
Vv32@0:8q16@?<v@?@"NSError">24
v36@0:8q16i24@?28
v32@0:8q16@?24
v36@0:8q16i24@?<v@?@"NSError">28
v32@0:8q16@?<v@?@"NSError">24
Vv24@0:8@"TUNearbyDeviceHandle"16
v24@0:8@?<v@?@"NSSet"@"NSError">16
v24@0:8@?<v@?@"TUNearbyDeviceHandle"@"NSError">16
v40@0:8@"TUNearbyDeviceHandle"16@"NSUUID"24@?<v@?B@"NSError">32
v32@0:8@"TUNearbyDeviceHandle"16@?<v@?B@"NSError">24
v24@0:8@"<TUNeighborhoodActivityConduitXPCClient>"16
@"<TUNeighborhoodActivityConduitXPCClientDelegate>"
f24@0:8@16
v32@0:8@"AVCAudioPowerSpectrumMeter"16@"NSDictionary"24
v40@0:8@"AVCAudioPowerSpectrumMeter"16@"AVCAudioPowerSpectrum"24@"NSDictionary"32
v24@0:8@"AVCAudioPowerSpectrumMeter"16
I24@0:8q16
@"<TUAudioFrequencyControllerDelegate>"
@"AVCAudioPowerSpectrumMeter"
B32@0:8q16@24
B40@0:8q16@24@?32
B32@0:8@16@?24
@"TUSoundPlayer"
@48@0:8q16@24Q32d40
@32@0:8q16@24
@44@0:8q16@24B32q36
i28@0:8@16B24
v24@0:8@"<TUCallProviderManagerDataSource>"16
@40@0:8@16Q24@32
@28@0:8i16^B20
@"<TUCallProviderManagerDataSource>"
q24@0:8@16
v32@0:8@"TUMetadataCacheDataProvider"16@"NSSet"24
@40@0:8@16Q24B32B36
@"TUSandboxExtendedURL"
@32@0:8^{_NSZone=}16@24
v32@0:8@16B24B28
@"NSNotificationCenter"
@92@0:8@16@24@32@40B48@52@60@68q76@84
@76@0:8@16@24@32@40B48@52@60@68
@"TUConversationActivityContext"
@"TUConversationActivitySceneAssociationBehavior"
@24@0:8@"NSUUID"16
@48@0:8@16@24@32B40B44
v36@0:8@16Q24B32
v48@0:8@16@24Q32@40
v32@0:8@"<TUConversationManagerDataSource>"16@"NSDictionary"24
v32@0:8@"TUConversation"16@"TUConversationActivityEvent"24
v32@0:8@"<TUConversationManagerDataSource>"16@"NSArray"24
v40@0:8@"<TUConversationManagerDataSource>"16@"NSUUID"24@?<v@?@"NSString"@"NSString"@"NSError">32
v36@0:8@"TUConversation"16Q24B32
v40@0:8@"TUConversation"16@"TUConversationParticipant"24@"TUConversationNotice"32
v32@0:8@"TUConversation"16@"NSSet"24
v32@0:8@"TUConversation"16@"TUConversationMember"24
v48@0:8@"<TUConversationManagerDataSource>"16@"TUConversation"24Q32@"TUConversationActivitySession"40
v32@0:8@"TUConversationMember"16@"TUConversationLink"24
v32@0:8@"TUConversation"16@"TUConversationParticipant"24
v28@0:8@"<TUScreenShareAttributes>"16B24
v24@0:8@"NSError"16
v32@0:8@"TUConversation"16@"TUConversationActivitySession"24
@40@0:8@16@24B32B36
v32@0:8Q16@24
v36@0:8B16Q20@28
v28@0:8B16@?20
v40@0:8@16q24@?32
v48@0:8@16@24Q32@?40
@"TUConversationMediaController"
@"<TUConversationMessagesGroupProviding>"
@"TUPhoneNumber"
@24@0:8^{__CFPhoneNumber=}16
^{__CFPhoneNumber=}16@0:8
v24@0:8^{__CFPhoneNumber=}16
^{__CFPhoneNumber=}
@"<TUDynamicCallDisplayContextDelegate>"
@52@0:8@16@24@32@40B48
@"CKShare"
B40@0:8@"NSString"16@"NSUUID"24^@32
B32@0:8@"NSUUID"16^@24
@"TUHandle"32@0:8@"NSString"16^@24
@"CALayer"20@0:8B16
v28@0:8@"CALayer"16B24
@"VideoAttributes"24@0:8@"VideoAttributes"16
B24@0:8@"AVCaptureDevice"16
@"VideoAttributes"16@0:8
@"<TUVideoDeviceControllerProviderDelegate>"16@0:8
v24@0:8@"<TUVideoDeviceControllerProviderDelegate>"16
@"UIImage"24@0:8@"NSString"16
@"TUVideoEffect"16@0:8
v24@0:8@"TUVideoEffect"16
@"<TUVideoDeviceControllerProviderDelegate>"
@"TUVideoEffect"
@"AVConferencePreview"
@64@0:8Q16Q24Q32Q40Q48Q56
@72@0:8@16@24@32@40@48@56@64
@40@0:8@16@24q32
@"TUConversationParticipant"
@"NSOrderedSet"
v24@0:8@"AVCRemoteVideoClient"16
v28@0:8@"AVCRemoteVideoClient"16B24
v32@0:8@"AVCRemoteVideoClient"16@"VideoAttributes"24
v20@0:8C16
i24@0:8q16
{CGSize=dd}24@0:8q16
q20@0:8i16
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"TUParticipant"
@"TUCallProvider"
@"TUCallDisplayContext"
@"TUCallScreenShareAttributes"
@"<TUCallServicesProxyCallActions>"
@"<TURemoteVideoClient>"
@40@0:8q16@24@32
Vv24@0:8@"NSArray"16
Vv48@0:8@16d24@32@?40
Vv48@0:8@16@24@32@?40
Vv40@0:8@16@24@?32
Vv32@0:8@"NSString"16@?<v@?@"TUConversationProvider">24
Vv24@0:8@?<v@?@"NSArray">16
Vv32@0:8@"NSString"16@?<v@?@"NSError">24
Vv32@0:8@"TUConversationProvider"16@?<v@?@"NSError">24
Vv48@0:8@"TUConversationProvider"16d24@"NSString"32@?<v@?@"TUHandle"@"NSDate"@"NSError">40
Vv48@0:8@"TUHandle"16@"TUConversationProvider"24@"NSDate"32@?<v@?B@"NSDate"@"NSError">40
Vv40@0:8@"TUHandle"16@"TUConversationProvider"24@?<v@?B@"NSError">32
v24@0:8@"<TUConversationProviderManagerXPCClient>"16
v32@0:8@"NSString"16@?<v@?@"NSError">24
v32@0:8@"TUConversationProvider"16@?<v@?@"NSError">24
@"TUConversationProvider"24@0:8@"NSString"16
v32@0:8@"NSString"16@?<v@?@"TUConversationProvider">24
v48@0:8@"TUConversationProvider"16d24@"NSString"32@?<v@?@"TUHandle"@"NSDate"@"NSError">40
v48@0:8@"TUHandle"16@"TUConversationProvider"24@"NSDate"32@?<v@?B@"NSDate"@"NSError">40
v40@0:8@"TUHandle"16@"TUConversationProvider"24@?<v@?B@"NSError">32
@48@0:8q16@24q32@40
@32@0:8@16^B24
@"TUSenderIdentityClient"
@"CNGeminiManager"
@"BSProcessHandle"
@"TUNeighborhoodHandoffContext"
@"TUCTCapabilitiesState"
@"TUThumperCTCapabilitiesState"
@48@0:8{?=[8I]}16
@36@0:8@16B24@28
B20@0:8B16
@"TUCallModel"
@"TUProxyCall"
@"TUCallServicesInterface"
@"TUVideoCallAttributes"
@"NSUserDefaults"
@"FTServerBag"
B40@0:8@16@24@?32
@?24@0:8@16
v32@0:8@"<CNCancelable>"16@"NSArray"24
v32@0:8@"<CNCancelable>"16@"NSError"24
v24@0:8@"<CNCancelable>"16
B40@0:8@"<CNCancelable>"16@"CNAutocompleteFetchRequest"24@?<v@?@"NSArray"@"NSError">32
@"NSDictionary"32@0:8@"<CNCancelable>"16@"NSArray"24
@?<q@?@@>24@0:8@"<CNCancelable>"16
@"CNAutocompleteStore"
@"<CNAutocompleteCancelable>"
@"TUAutocompleteResultPartitioner"
v24@0:8@"<TUCallHistoryControllerXPCClient>"16
Vv32@0:8@"NSUUID"16@"NSUUID"24
v24@0:8@"<TUCallHistoryManagerXPCClient>"16
v32@0:8@"NSUUID"16@"NSUUID"24
@"<TUCallServicesClientCapabilitiesActions>"
Vv32@0:8@"NSURL"16@?<v@?@"TUSandboxExtendedURL"@"NSError">24
Vv32@0:8@"TUMomentsCapabilities"16q24
Vv24@0:8@"TUMomentDescriptor"16
Vv52@0:8q16@24@32B40@?44
Vv44@0:8i16q20@28@?36
Vv24@0:8@?<v@?>16
Vv52@0:8q16@"NSString"24@"NSDictionary"32B40@?<v@?@"TUMomentsCapabilities"@"NSError">44
Vv44@0:8i16q20@"NSString"28@?<v@?@"NSString"@"NSError">36
v24@0:8@"<TUMomentsControllerXPCClient>"16
v52@0:8q16@24@32B40@?44
v44@0:8i16q20@28@?36
v52@0:8q16@"NSString"24@"NSDictionary"32B40@?<v@?@"TUMomentsCapabilities"@"NSError">44
v44@0:8i16q20@"NSString"28@?<v@?@"NSString"@"NSError">36
@"<TUMomentsControllerDataSourceDelegate>"16@0:8
v24@0:8@"<TUMomentsControllerDataSourceDelegate>"16
@"<TUMomentsControllerDataSourceDelegate>"
B28@0:8i16B20B24
B44@0:8i16B20B24B28B32^B36
B32@0:8@16^B24
v36@0:8@16@24B32
v28@0:8i16@20
@"TUAudioDeviceController"
@"TUVideoDeviceController"
@"TUCallFilterController"
@"TUNeighborhoodActivityConduit"
@"<TUCallHistoryManagerDataSource>"
@"NSURL"16@0:8
@"<TUKeyValueDataSource><TUMutableKeyValueDataSource>"
@"TUDelegateController"
Vv32@0:8@"TUDialRequest"16@"TUCallDisplayContext"24
Vv32@0:8@"TUDialRequest"16@?<v@?@"TUCall"@"NSArray">24
Vv24@0:8@"TUJoinConversationRequest"16
Vv32@0:8@"NSDictionary"16@?<v@?@"TUCall"@"NSArray">24
Vv28@0:8@16B24
Vv24@0:8@?<v@?@"NSDictionary">16
Vv28@0:8@"NSString"16B24
Vv44@0:8@16@24B32@?36
Vv40@0:8@"NSSet"16@"NSString"24@?<v@?B>32
Vv44@0:8@"TUHandle"16@"NSString"24B32@?<v@?B>36
Vv44@0:8@"NSSet"16@"NSString"24B32@?<v@?B>36
Vv40@0:8@"NSSet"16@"NSString"24@?<v@?Q>32
Vv40@0:8@"NSSet"16@"NSString"24@?<v@?@"NSDictionary">32
Vv48@0:8@"NSString"16@"NSString"24@"NSString"32@?<v@?B>40
@40@0:8@16q24q32
@"<TUHandleContactProvider>"
@80@0:8@16Q24@32@40B48@52B60@64Q72
@56@0:8@16Q24@32B40@44B52
@48@0:8@16@24B32@36B44
@40@0:8@16B24@28B36
@"NSXPCListenerEndpoint"
@48@0:8@16@24q32@40
@48@0:8q16@24@32@40
@"TUNearbyDeviceHandleCapabilities"
^{os_unfair_recursive_lock_s={os_unfair_lock_s=I}I}16@0:8
{os_unfair_recursive_lock_s="ourl_lock"{os_unfair_lock_s="_os_unfair_lock_opaque"I}"ourl_count"I}
Vv24@0:8@"TUConversation"16
Vv32@0:8@"NSUUID"16@?<v@?@"NSString"@"NSString"@"NSError">24
Vv36@0:8@16Q24B32
Vv40@0:8@16Q24@32
Vv32@0:8@"TUConversation"16@"TUConversationActivityEvent"24
Vv36@0:8@"TUConversation"16Q24B32
Vv40@0:8@"TUConversation"16@"TUConversationParticipant"24@"TUConversationNotice"32
Vv32@0:8@"TUConversation"16@"NSSet"24
Vv32@0:8@"TUConversation"16@"TUConversationMember"24
Vv40@0:8@"TUConversation"16Q24@"TUConversationActivitySession"32
Vv32@0:8@"TUConversationMember"16@"TUConversationLink"24
Vv32@0:8@"TUConversation"16@"TUConversationParticipant"24
Vv32@0:8@"TUConversation"16@"TUConversationActivitySession"24
Vv28@0:8@"<TUScreenShareAttributes>"16B24
Vv24@0:8@"NSError"16
Vv32@0:8@"NSUUID"16@"NSArray"24
Vv36@0:8@16B24@?28
Vv36@0:8B16Q20@28
Vv32@0:8Q16@24
Vv28@0:8B16@?20
Vv40@0:8@16q24@?32
Vv48@0:8@16@24Q32@?40
Vv24@0:8@?<v@?@"NSSet">16
Vv40@0:8@"NSSet"16@"NSSet"24@"NSUUID"32
Vv32@0:8@"TUConversationActivitySession"16@"NSUUID"24
Vv32@0:8@"TUConversationActivity"16@"NSUUID"24
Vv32@0:8@"NSUUID"16@?<v@?@"NSError">24
Vv36@0:8@"NSUUID"16B24@?<v@?@"NSError">28
Vv36@0:8B16@"TUConversationActivitySession"20@"NSUUID"28
Vv36@0:8B16Q20@"NSUUID"28
Vv32@0:8@"TUConversationMember"16@"NSUUID"24
Vv32@0:8@"NSString"16@"NSUUID"24
Vv32@0:8Q16@"NSUUID"24
Vv24@0:8@?<v@?B>16
Vv24@0:8@?<v@?@"<TUScreenShareAttributes>">16
Vv28@0:8B16@?<v@?@"NSSet"@"NSError">20
Vv32@0:8@"NSUUID"16@?<v@?@"TUConversationLink"@"NSError">24
Vv40@0:8@"NSSet"16q24@?<v@?@"TUConversationLink"@"NSError">32
Vv40@0:8@"NSSet"16@"TUConversationLink"24@?<v@?@"TUConversationLink"@"NSError">32
Vv32@0:8@"TUConversationLink"16@?<v@?B@"NSError">24
Vv48@0:8@"TUConversationLink"16@"NSDate"24Q32@?<v@?B@"NSError">40
Vv32@0:8@"TUConversationLink"16@?<v@?B@"NSDate"@"NSError">24
Vv24@0:8@?<v@?@"TUConversationLink"@"NSError">16
Vv40@0:8@"NSString"16@"TUConversationLink"24@?<v@?@"TUConversationLink"@"NSError">32
Vv28@0:8B16@?<v@?@"NSString">20
Vv36@0:8B16@"TUScreenShareAttributes"20@"NSUUID"28
Vv32@0:8@"NSURL"16@24
Vv24@0:8@?<v@?@"TUConversationNotice"@"NSError">16
v24@0:8@"<TUConversationManagerXPCClient>"16
v32@0:8@"NSSet"16@"TUConversation"24
v40@0:8@"NSSet"16@"NSSet"24@"TUConversation"32
v32@0:8@"TUConversationActivity"16@"TUConversation"24
v32@0:8@"TUConversationActivitySession"16@"TUConversation"24
v28@0:8B16@"NSString"20
v32@0:8@"NSUUID"16@?<v@?@"NSError">24
v36@0:8@"NSUUID"16B24@?<v@?@"NSError">28
v36@0:8B16@"TUConversationActivitySession"20@"NSUUID"28
v32@0:8@"TUConversationMember"16@"TUConversation"24
v28@0:8B16@"TUConversation"20
v36@0:8B16Q20@"TUConversation"28
v32@0:8Q16@"NSUUID"24
v24@0:8@?<v@?@"<TUScreenShareAttributes>">16
v28@0:8B16@?<v@?@"NSSet"@"NSError">20
v32@0:8@"TUConversation"16@?<v@?@"TUConversationLink"@"NSError">24
v40@0:8@"NSSet"16q24@?<v@?@"TUConversationLink"@"NSError">32
v40@0:8@"NSSet"16@"TUConversationLink"24@?<v@?@"TUConversationLink"@"NSError">32
v32@0:8@"TUConversationLink"16@?<v@?B@"NSError">24
v48@0:8@"TUConversationLink"16@"NSDate"24Q32@?<v@?B@"NSError">40
v32@0:8@"TUConversationLink"16@?<v@?B@"NSDate"@"NSError">24
v24@0:8@?<v@?@"TUConversationLink"@"NSError">16
v40@0:8@"NSString"16@"TUConversationLink"24@?<v@?@"TUConversationLink"@"NSError">32
v36@0:8B16@"TUScreenShareAttributes"20@"NSUUID"28
v28@0:8B16@?<v@?@"NSString">20
v24@0:8@"TUJoinConversationRequest"16
v32@0:8@"NSURL"16@"NSString"24
v24@0:8@?<v@?@"TUConversationNotice"@"NSError">16
v32@0:8@"NSUUID"16@"NSArray"24
v32@0:8@"NSString"16@"TUConversation"24
v32@0:8Q16@"TUConversation"24
v32@0:8@"NSUUID"16@?<v@?@"NSString"@"NSString"@"NSError">24
@"<TUConversationManagerDataSourceDelegate>"16@0:8
v24@0:8@"<TUConversationManagerDataSourceDelegate>"16
@"<TUConversationMediaControllerDataSourceDelegate>"16@0:8
v24@0:8@"<TUConversationMediaControllerDataSourceDelegate>"16
@"<TUConversationManagerDataSourceDelegate>"
@"<TUConversationMediaControllerDataSourceDelegate>"
