@(#)PROGRAM:sample  PROJECT:SamplingTools-64559.72.1
<pid | partial-process-name> [duration [samplingInterval]] [options...]
       sample <memgraph>
Specify the duration in seconds;  the default is %d seconds.
Specify the samplingInterval in milliseconds;  the default is %d millisecond.
options: [-wait] [-mayDie] [-fullPaths] [-e] [-file <filename>]
wait
wait until the process named (usually by partial name) exists, then start sampling
v8@?0
mayDie
reads symbol information right away
fullPaths
show full paths to source files if debug info is available
open the output in TextEdit
stdoutOnly
bySymbol
nodsyms
file
filename
specifies where results should be written
v24@?0@"NSString"8^@16
noSwiftAsync
just collect regular backtraces, not Swift Async extended backtraces
allProcesses
minimumPid
debug
Memgraph cannot be passed with additional options or duration
Invalid sampling interval (milliseconds): %@
sampling all threads of all processes, once
Waiting for '%s' to appear...  
%s appeared.
no process id or name or memgraph specified
%s[%d]: [fatal] unable to read input graph: %s
Sampling process %d once
Sampling process %d for %d second%s with %d millisecond%s of run time between samples
Sampling completed, processing symbols...
v16@?0i8I12
 [Interrupted]
Not currently sampling -- exiting immediately.
sample all tasks
sample
%5d %s:
  thread %2d: 
Unmapped pages caused truncated backtrace; re-sampled %d frames
notice
 %#llx
resampledUserFrames
task_threads() for %d failed
Unable to create VMUSampler for %d
task_read_for_pid(%d) failed
%5d %s: %s
v40@?0i8r*12B20I24I28^B32
sampled %u threads in %u tasks
This memgraph does not contain backtraces.
.memgraph
Command args:    %@
Target process:  %@ [%u]
Parent process:  %@ [%u]
Target process of memgraph:  %@ [%u]
%s[%d]: Unable to deallocate target task port: %d (%s)
SAMPLING_TOOLS_TARGET_PID
%s[%d]: [fatal] error acquiring target task port from parent.
%s[%d]: %s cannot find any existing process %s a name like '%s'%s.
you have access to which has
with
; try running with `sudo`
%s[%d]: cannot examine itself.
__check_mach_ports_lookup
i24@?0r^v8r^v16
task from parent for pid %u
%s[%d]: [fatal] Failed to get DYLD info for %s with error %s (%d). Assuming it's a minimal corpse which can't be analyzed, which we sometimes see for processes which use a lot of memory.
%s[%d]: Failed to get DYLD info for %s with error %s (%d). Assuming it's a minimal corpse which can't be analyzed, which we sometimes see for processes which use a lot of memory.
for unknown reasons
for unknown reasons, even though it appears to exist
because it no longer appears to be running
because the process does not exist
because you do not have appropriate privileges to examine it
%s[%d]: %s cannot examine process %d (%s) %s%s.
%s[%d]: %s cannot examine process %d (with name like '%s') %s.
%s[%d]: %s cannot examine process %d %s.
SIMULATOR_ROOT
SIMULATOR_SHARED_RESOURCES_DIRECTORY
arrayWithArray:
absoluteURL
bundleForClass:
appendFormat:
is64Bit
array
stringByAppendingPathComponent:
arrayWithObjects:count:
valueForEnvVar:
UTF8String
backtraceLength
addObject:
containsString:
arguments
arrayWithCapacity:
stringByResolvingSymlinksInPath
attributesOfItemAtPath:error:
backtrace
backtraces
bundlePath
callStackSymbols
componentsJoinedByString:
count
currentHandler
dataWithContentsOfFile:options:error:
defaultManager
description
dictionary
directedGraphWithData:error:
executablePath
fileExistsAtPath:
fileExistsAtPath:isDirectory:
fileSize
fileURLWithPath:
handleFailureInFunction:file:lineNumber:description:
hasPrefix:
hasSuffix:
initWithPID:options:
initWithPid:
initWithTask:
initWithTask:getBinariesList:
initWithTask:options:
intValue
isExecutableFileAtPath:
isSemiCriticalProcess
lastPathComponent
length
localizedDescription
mainBundle
name
numberWithInt:
numberWithUnsignedInt:
numberWithUnsignedLong:
numberWithUnsignedLongLong:
objectAtIndexedSubscript:
outputString
parentPid
parentProcessPath
parseArguments:withBlock:
path
preloadSymbols
processInfo
processName
reason
registerOptionWithLongName:shortName:argumentKind:argumentName:optionDescription:handler:
sampleBacktracesString
sampleForDuration:interval:
sampleThread:
setDiscussion:
setObject:atIndexedSubscript:
setObject:forKeyedSubscript:
setSingleHyphenLongNames:
setSyntaxDescription:
shouldAnalyzeWithCorpse
startWithMessage:
stop
stopSampling
string
stringByDeletingLastPathComponent
stringByStandardizingPath
stringValue
stringWithFormat:
stringWithUTF8String:
usage:
writeOutput:append:
[fatal] unable to read input graph: %s
examining %@ [%u]
[fatal] error acquiring target task port from parent.
[fatal] Failed to get DYLD info for %s with error %s (%d). Assuming it's a minimal corpse which can't be analyzed, which we sometimes see for processes which use a lot of memory.
ObjectLocalToThisFile
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>22A380007</string>
<key>CFBundleDevelopmentRegion</key>
<string>English</string>
<key>CFBundleIdentifier</key>
<string>com.apple.dt.SamplingTools.sample</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>SamplingTools</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1.0</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>20E5235a</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>16.4</string>
<key>DTSDKBuild</key>
<string>20E5235a</string>
<key>DTSDKName</key>
<string>iphonesimulator16.4.internal</string>
<key>DTXcode</key>
<string>1430</string>
<key>DTXcodeBuild</key>
<string>14E6097d</string>
<key>MinimumOSVersion</key>
<string>16.4</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.private.dt.instruments.dtservicehub.client</key>
<true/>
<key>com.apple.private.iosurfaceinfo</key>
<true/>
<key>com.apple.private.security.storage.AppDataContainers</key>
<true/>
<key>com.apple.rootless.datavault.metadata</key>
<true/>
<key>com.apple.security.iokit-user-client-class</key>
<array>
<string>IOSurfaceRootUserClient</string>
</array>
<key>com.apple.system-task-ports.read</key>
<true/>
<key>com.apple.system-task-ports.read.safe</key>
<true/>
</dict>
</plist>
d094com.apple.private.dt.instruments.dtservicehub.client
com.apple.private.iosurfaceinfo
094com.apple.private.security.storage.AppDataContainers
0*%com.apple.rootless.datavault.metadata
0G*com.apple.security.iokit-user-client-class0
IOSurfaceRootUserClient0% com.apple.system-task-ports.read
0*%com.apple.system-task-ports.read.safe
@(#)PROGRAM:sample  PROJECT:SamplingTools-64559.72.1
<pid | partial-process-name> [duration [samplingInterval]] [options...]
       sample <memgraph>
Specify the duration in seconds;  the default is %d seconds.
Specify the samplingInterval in milliseconds;  the default is %d millisecond.
options: [-wait] [-mayDie] [-fullPaths] [-e] [-file <filename>]
wait
wait until the process named (usually by partial name) exists, then start sampling
v8@?0
mayDie
reads symbol information right away
fullPaths
show full paths to source files if debug info is available
open the output in TextEdit
stdoutOnly
bySymbol
nodsyms
file
filename
specifies where results should be written
v24@?0@"NSString"8^@16
noSwiftAsync
just collect regular backtraces, not Swift Async extended backtraces
allProcesses
minimumPid
debug
Memgraph cannot be passed with additional options or duration
Invalid sampling interval (milliseconds): %@
sampling all threads of all processes, once
Waiting for '%s' to appear...  
%s appeared.
no process id or name or memgraph specified
%s[%d]: [fatal] unable to read input graph: %s
Sampling process %d once
Sampling process %d for %d second%s with %d millisecond%s of run time between samples
Sampling completed, processing symbols...
v16@?0i8I12
 [Interrupted]
Not currently sampling -- exiting immediately.
sample all tasks
sample
%5d %s:
  thread %2d: 
Unmapped pages caused truncated backtrace; re-sampled %d frames
notice
 %#llx
resampledUserFrames
task_threads() for %d failed
Unable to create VMUSampler for %d
task_read_for_pid(%d) failed
%5d %s: %s
v40@?0i8r*12B20I24I28^B32
sampled %u threads in %u tasks
This memgraph does not contain backtraces.
.memgraph
Command args:    %@
Target process:  %@ [%u]
Parent process:  %@ [%u]
Target process of memgraph:  %@ [%u]
%s[%d]: Unable to deallocate target task port: %d (%s)
SAMPLING_TOOLS_TARGET_PID
%s[%d]: [fatal] error acquiring target task port from parent.
%s[%d]: %s cannot find any existing process %s a name like '%s'%s.
you have access to which has
with
; try running with `sudo`
%s[%d]: cannot examine itself.
__check_mach_ports_lookup
i24@?0r^v8r^v16
task from parent for pid %u
%s[%d]: [fatal] Failed to get DYLD info for %s with error %s (%d). Assuming it's a minimal corpse which can't be analyzed, which we sometimes see for processes which use a lot of memory.
%s[%d]: Failed to get DYLD info for %s with error %s (%d). Assuming it's a minimal corpse which can't be analyzed, which we sometimes see for processes which use a lot of memory.
for unknown reasons
for unknown reasons, even though it appears to exist
because it no longer appears to be running
because the process does not exist
because you do not have appropriate privileges to examine it
%s[%d]: %s cannot examine process %d (%s) %s%s.
%s[%d]: %s cannot examine process %d (with name like '%s') %s.
%s[%d]: %s cannot examine process %d %s.
SIMULATOR_ROOT
SIMULATOR_SHARED_RESOURCES_DIRECTORY
[fatal] unable to read input graph: %s
examining %@ [%u]
[fatal] error acquiring target task port from parent.
[fatal] Failed to get DYLD info for %s with error %s (%d). Assuming it's a minimal corpse which can't be analyzed, which we sometimes see for processes which use a lot of memory.
ObjectLocalToThisFile
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>22A380007</string>
<key>CFBundleDevelopmentRegion</key>
<string>English</string>
<key>CFBundleIdentifier</key>
<string>com.apple.dt.SamplingTools.sample</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>SamplingTools</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1.0</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>20E5235a</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>16.4</string>
<key>DTSDKBuild</key>
<string>20E5235a</string>
<key>DTSDKName</key>
<string>iphonesimulator16.4.internal</string>
<key>DTXcode</key>
<string>1430</string>
<key>DTXcodeBuild</key>
<string>14E6097d</string>
<key>MinimumOSVersion</key>
<string>16.4</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.private.dt.instruments.dtservicehub.client</key>
<true/>
<key>com.apple.private.iosurfaceinfo</key>
<true/>
<key>com.apple.private.security.storage.AppDataContainers</key>
<true/>
<key>com.apple.rootless.datavault.metadata</key>
<true/>
<key>com.apple.security.iokit-user-client-class</key>
<array>
<string>IOSurfaceRootUserClient</string>
</array>
<key>com.apple.system-task-ports.read</key>
<true/>
<key>com.apple.system-task-ports.read.safe</key>
<true/>
</dict>
</plist>
d094com.apple.private.dt.instruments.dtservicehub.client
com.apple.private.iosurfaceinfo
094com.apple.private.security.storage.AppDataContainers
0*%com.apple.rootless.datavault.metadata
0G*com.apple.security.iokit-user-client-class0
IOSurfaceRootUserClient0% com.apple.system-task-ports.read
0*%com.apple.system-task-ports.read.safe
arrayWithArray:
addObject:
containsString:
arguments
stringByResolvingSymlinksInPath
arrayWithCapacity:
UTF8String
backtraceLength
appendFormat:
array
valueForEnvVar:
arrayWithObjects:count:
attributesOfItemAtPath:error:
backtrace
backtraces
componentsJoinedByString:
count
dataWithContentsOfFile:options:error:
defaultManager
description
dictionary
directedGraphWithData:error:
executablePath
fileExistsAtPath:isDirectory:
fileSize
hasSuffix:
initWithPID:options:
initWithPid:
initWithTask:getBinariesList:
initWithTask:options:
intValue
isExecutableFileAtPath:
lastPathComponent
length
localizedDescription
name
numberWithInt:
numberWithUnsignedLong:
numberWithUnsignedLongLong:
objectAtIndexedSubscript:
outputString
parentPid
parentProcessPath
parseArguments:withBlock:
preloadSymbols
processInfo
processName
registerOptionWithLongName:shortName:argumentKind:argumentName:optionDescription:handler:
sampleBacktracesString
sampleForDuration:interval:
sampleThread:
setDiscussion:
setObject:atIndexedSubscript:
setObject:forKeyedSubscript:
setSingleHyphenLongNames:
setSyntaxDescription:
startWithMessage:
stop
stopSampling
string
stringWithFormat:
usage:
writeOutput:append:
