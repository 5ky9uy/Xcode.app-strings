stringWithUTF8String:
addObject:
initWithLaunchArguments:
sharedAnalytics
daemonType
configureForDaemon
logEventWithType:context:
sharedDaemon
runWithLaunchContext:
countByEnumeratingWithState:objects:count:
intValue
clientWithIdentifier:
objectForKey:
constructNamespaceStatusEventForNamespace:withClient:
addNamespaceStatus:
setAvailableAssetDailyStatus:
sharedStream
emitMessage:
setTrialNamespace:
namespaceNameFromId:
compatibilityVersionWithNamespaceName:
setMajor:
setNamespaceCompatabilityVersion:
rolloutIdentifiersWithNamespaceName:
rolloutId
setRolloutId:
deploymentId
setDeployment:
factorPackId
setFactorPack:
setRollout:
factorLevelsWithNamespaceName:
level
directoryValue
fileValue
path
length
metadata
valueForKey:
factor
name
componentsSeparatedByString:
count
objectAtIndex:
setMinor:
setPatch:
setPrerelease:
setAssetVersion:
setAssetName:
stringByReplacingOccurrencesOfString:withString:
convertLanguageCodeToSchemaLocale:
setAssetLocale:
addAssets:
logAvailableAssetDailyStatus
dictionaryWithObjects:forKeys:count:
init
_descriptionWithIndent:
description
numberWithInteger:
initWithFormat:
arrayWithObjects:count:
componentsJoinedByString:
hash
allowsAWDL
allowsBLE
allowsInfraWiFi
decodeObjectOfClass:forKey:
integerValue
initWithAllowsAWDL:allowsBLE:allowsInfraWiFi:
encodeObject:forKey:
supportsSecureCoding
copyWithZone:
encodeWithCoder:
initWithCoder:
TB,R
isEqual:
_allowsAWDL
_allowsBLE
_allowsInfraWiFi
Tq,R,N,V_allowsAWDL
Tq,R,N,V_allowsBLE
Tq,R,N,V_allowsInfraWiFi
initWithBaseModel:
copy
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
setAllowsAWDL:
setAllowsBLE:
setAllowsInfraWiFi:
generate
.cxx_destruct
_baseModel
_mutationFlags
mutatedCopyWithMutator:
newWithBuilder:
_allAnchorsFromRequest:andResponse:
syncReason
_resetSyncVerification
setDeveloperMode:
clientIdentifier
_appMetaDataForAppProxy:clientIdentifier:syncSlots:
_intents_findAppsWithAnIntentsServiceExtension:
sharedDeviceConnection
fetchInstalledApplicationsForPairedDevice:completion:
_appMetaDataListFromVocabSources:appIdentifyingInfoList:
setSources:
setSyncReason:
setIncludeAllKnownAnchors:
setAppMetaDataList:
setWatchAppMetaDataList:
_addOutstandingAnchorsRequestId:
forceEagerDeserialization
_sync_isRequestBlockingSyncVerification
sources
setAnchors:
_removeOutstandingAnchorsRequestId:
_handleValidatedSyncGetAnchorsResponse:forGetAnchors:
current
_removeOutstandingSyncChunkId:
setClientIdentifier:
setPerformInternalVerification:
setFetchSyncDebugInfo:
_emptyVerificationSyncAnchorForKey:appBundleID:syncSlotName:
setChecksums:
_sync_continueVerificationIfConditionsMet
setPreGen:
databaseSyncEnabled
currentSyncDatabase
inTransaction
_syncRecordForKey:fromDomainObject:appMeta:
donate:error:
remove:error:
_addOutstandingSyncChunkId:
syncRecordWithKey:identifier:priority:debugValue:dataValue:addedValue:appMeta:
initRequiringSecureCoding:
encodeObject:
finishEncoding
encodedData
setDataValue:
setMetaValue:
fullDescription
setDebugValue:
_finishVerificationWithKeys:
isSubsetOfSet:
_sendSyncFinishedAndReferenceCurrentSyncPromise:
_prepareAndStartSyncVerification
_sync_isRequestBlockingSync
_syncChunkWindowFull
_cleanUpForFailureCommandWithRefId:
_hasOutstandingSyncChunkId:
_hasOutstandingAnchorsRequestId:
_requestAnchorsForKeys:appSources:watchAppSources:forceReset:includeAllKnownAnchors:reasons:
_fetchAllAppSourcesForSyncingWithCustomVocabInfo:completion:
itemID
setDonationService:
_sendContextPromiseForTypes:withAceId:
setPromiseTypes:
_setBackgroundContext
_updateFlowContext
_setAlertContext
_setRestrictedAppContext
_setSyncContext
setKeys:
setPreviewRestrictedApps:
_aceValue
setOrderedContext:
_ensureBackgroundContextSentToServer
orderedContext
initWithApplicationContexts:
_sendContextPromiseForTypes:
_getOrderedContextDictionaryForTransformedAFApplicationContext:completion:
_getTransformedApplicationContextForConext:completion:
_fetchAndSendApplicationContextForApplicationInfos:fetchedOrderedContextDictionaries:applicationContexts:refID:
_context_deviceState
associatedBundleIdentifier
arrayByAddingObjectsFromArray:
containsIndex:
bulletin
aceContext
contextDictionary
applicationId
_context_bundleIdHasSupportForCarPlayRequiredMessageIntents:
setAssociatedBundleIdentifier:
dictionaryArrayWithAceObjectArray:
setIsNew:
setStart:
setEnd:
sectionSubtype
setVoiceMail:
withContextManager:
_ad_timerRequestRepresentation
ad_aceResponseCommandGenericErrorRepresentation
_ad_timerResponseForResponse:
getSiriRequestForClientBoundAceCommand:completionHandler:
aceCommandForSiriResponse:responseError:forRequestCommand:
timer
_ad_setTimer:
setTimer:
_ad_timerWithState:
setState:
timerValue
setValue:
state
isEqualToString:
value
setTimerValue:
_ad_timer
setLanguageString:
setVoiceType:
setVoiceContentVersion:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
initWithServiceIdentifier:forRequests:requireConnectedPeer:
_account
_pairedDevice
modelIdentifier
productName
productVersion
productBuildVersion
uniqueIDOverride
isNearby
_service
devices
isDefaultPairedDevice
isConnected
initWithService:
addDelegate:queue:
accounts
anyObject
setWithObject:
_sendRequest:responseClass:fireAndForget:timeout:overrideRequireConnectedPeer:to:allowCloud:completion:
_hasConnectedPeer
initWithDomain:code:userInfo:
data
initWithProtobufData:type:isResponse:
setObject:forKey:
numberWithDouble:
_destination
sendProtobuf:toDestinations:priority:options:identifier:error:
_wrappedSendFailureError:
isResponse
initWithData:
removeObjectForKey:
incomingResponseIdentifier
outgoingResponseIdentifier
expectsPeerResponse
type
numberWithBool:
_invokeCompletionForIdentifier:response:error:
_sendResponse:forRequestId:
peerConnection:handlePBSubclass:completion:
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:linkedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
initWithServiceIdentifier:forRequests:
hasPeer
peerType
peerName
peerVersion
peerBuildVersion
deviceIsNearby:
serviceIdentifier
sendRequest:
sendRequest:fireAndForget:
sendRequest:responseClass:completion:
sendRequest:responseClass:timeout:completion:
sendRequest:responseClass:overrideRequireConnectedPeer:allowCloud:completion:
setDelegate:forRequestTypes:
_identifier
_requireConnectedPeer
_queue
_idsService
_completions
_responseClasses
_delegate
_requestMapFunc
_classMapFunc
numberWithUnsignedLongLong:
sequence
commandPushGenerationsRequest
commandPushGenerationsResponse
commandPullGenerationsRequest
commandPullGenerationsResponse
commandPullDeltaRequest
commandPullDeltaResponse
commandPullSnapshotRequest
commandPullSnapshotResponse
unsignedLongLongValue
initWithSequence:type:commandPushGenerationsRequest:commandPushGenerationsResponse:commandPullGenerationsRequest:commandPullGenerationsResponse:commandPullDeltaRequest:commandPullDeltaResponse:commandPullSnapshotRequest:commandPullSnapshotResponse:
_sequence
_type
_commandPushGenerationsRequest
_commandPushGenerationsResponse
_commandPullGenerationsRequest
_commandPullGenerationsResponse
_commandPullDeltaRequest
_commandPullDeltaResponse
_commandPullSnapshotRequest
_commandPullSnapshotResponse
TQ,R,N,V_sequence
Tq,R,N,V_type
T@"ADDeviceSyncCommandPushGenerationsRequest",R,C,N,V_commandPushGenerationsRequest
T@"ADDeviceSyncCommandPushGenerationsResponse",R,C,N,V_commandPushGenerationsResponse
T@"ADDeviceSyncCommandPullGenerationsRequest",R,C,N,V_commandPullGenerationsRequest
T@"ADDeviceSyncCommandPullGenerationsResponse",R,C,N,V_commandPullGenerationsResponse
T@"ADDeviceSyncCommandPullDeltaRequest",R,C,N,V_commandPullDeltaRequest
T@"ADDeviceSyncCommandPullDeltaResponse",R,C,N,V_commandPullDeltaResponse
T@"ADDeviceSyncCommandPullSnapshotRequest",R,C,N,V_commandPullSnapshotRequest
T@"ADDeviceSyncCommandPullSnapshotResponse",R,C,N,V_commandPullSnapshotResponse
setSequence:
setType:
setCommandPushGenerationsRequest:
setCommandPushGenerationsResponse:
setCommandPullGenerationsRequest:
setCommandPullGenerationsResponse:
setCommandPullDeltaRequest:
setCommandPullDeltaResponse:
setCommandPullSnapshotRequest:
setCommandPullSnapshotResponse:
_announceNotificationRequestTypeForNotification:appID:platform:
intentIdentifiers
notificationAnnouncementTypeForNotificationFromApp:withIntentIDs:onPlatform:
setNotification:
setAppID:
_appID
_announcementType
T@"UNNotification",&,N,V_notification
T@"NSString",C,N,V_appID
Tq,N,V_announcementType
initWithAudioDeviceID:
sharedSession
currentInputRoute
currentOutputRoute
_inputRoute
_outputRoute
deviceName
isBluetooth
_isBluetooth
_deviceName
_uid
_source
T@"NSString",R,C,N,V_deviceName
T@"NSString",R,C,N,V_uid
TB,R,N,V_isBluetooth
T@"NSString",R,C,N,V_source
T@"NSString",R,C,N,V_destination
hasLastKnownStreamId
_lastKnownStreamId
T@"NSString",&,N,V_lastKnownStreamId
_savedAudioFilesDirectory
_initWithType:pathGenerator:xorFileHandle:priority:
fileDescriptor
defaultCStringEncoding
stringWithCString:encoding:
removeItemAtURL:error:
fileURLWithPath:isDirectory:
_generateTemporaryFileURL
_delete
initWithFileDescriptor:closeOnDealloc:
initWithType:pathGenerator:priority:
initWithType:fileHandle:priority:
configureWithAudioStreamBasicDescription:
appendAudioData:
flushWithCompletion:
_audioFile
_asbd
_fileHandle
_underlyingError
dataType
initWithDataType:
_dataType
T@"NSString",R,C,N,V_dataType
setDataType:
dictionaryRepresentation
stringWithFormat:
dictionary
numberWithUnsignedInt:
setInterfaceName:
allocWithZone:
hasInterfaceName
setRttCurrent:
setHasRttCurrent:
hasRttCurrent
setRttSmoothed:
setHasRttSmoothed:
hasRttSmoothed
setRttVariance:
setHasRttVariance:
hasRttVariance
setRttBest:
setHasRttBest:
hasRttBest
setTxPackets:
setHasTxPackets:
hasTxPackets
setTxBytes:
setHasTxBytes:
hasTxBytes
setTxRetransmitBytes:
setHasTxRetransmitBytes:
hasTxRetransmitBytes
setTxUnacked:
setHasTxUnacked:
hasTxUnacked
setRxPackets:
setHasRxPackets:
hasRxPackets
setRxBytes:
setHasRxBytes:
hasRxBytes
setRxDuplicateBytes:
setHasRxDuplicateBytes:
hasRxDuplicateBytes
setRxOooBytes:
setHasRxOooBytes:
hasRxOooBytes
setSndBandwidth:
setHasSndBandwidth:
hasSndBandwidth
setSynRetransmits:
setHasSynRetransmits:
hasSynRetransmits
setTfoSynDataAcked:
setHasTfoSynDataAcked:
hasTfoSynDataAcked
readFrom:
writeTo:
copyTo:
mergeFrom:
interfaceName
rttCurrent
rttSmoothed
rttVariance
rttBest
txPackets
txBytes
txRetransmitBytes
txUnacked
rxPackets
rxBytes
rxDuplicateBytes
rxOooBytes
sndBandwidth
synRetransmits
tfoSynDataAcked
_rxBytes
_rxDuplicateBytes
_rxOooBytes
_rxPackets
_sndBandwidth
_txBytes
_txPackets
_txRetransmitBytes
_txUnacked
_interfaceName
_rttBest
_rttCurrent
_rttSmoothed
_rttVariance
_synRetransmits
_tfoSynDataAcked
_has
TB,R,N
T@"NSString",&,N,V_interfaceName
TB,N
TI,N,V_rttCurrent
TI,N,V_rttSmoothed
TI,N,V_rttVariance
TI,N,V_rttBest
TQ,N,V_txPackets
TQ,N,V_txBytes
TQ,N,V_txRetransmitBytes
TQ,N,V_txUnacked
TQ,N,V_rxPackets
TQ,N,V_rxBytes
TQ,N,V_rxDuplicateBytes
TQ,N,V_rxOooBytes
TQ,N,V_sndBandwidth
TI,N,V_synRetransmits
TI,N,V_tfoSynDataAcked
errorWithDomain:code:userInfo:
_errorWithCode:underylingError:
processInfo
systemUptime
_updatePairedDeviceInfo
_requestStreamEstablishment
_initWithServiceIdentifier:listener:
weakObjectsHashTable
removeObject:
setStreamId:
_wakeUpMessageFailedWithError:
_close
_invokeSocketCompletionWithCurrentSocketOrError:
peerStreamConnection:failedWithError:
_initiateOptimisticEagerStreamFetchRetry
_getSocketFromDevice
_streamPairInterruptedError
_wakeUpRemoteForStreamIdentifier:
_getSocketFromDeviceForStreamIdentifier:
_noDeviceError
_noNearbyPeerError
code
_deviceConnectionClosedErrorWithUnderlyingError:
close
sharedPreferences
setLastKnownProxyStreamId:
synchronize
initSocketWithDevice:options:completionHandler:queue:
_setPreferBTClassic:
_invokeMetricsCompletionWithMetrics:forIdentifier:
setConnectionMetricsForIDS:messageDelay:openErrorCode:
lastKnownProxyStreamId
setLastKnownStreamId:
setLinkPreferences:
isCloudConnected
numberWithUnsignedInteger:
initWithDictionary:
initWithCapacity:
addEntriesFromDictionary:
_failureMetricsContextDictionary
mutableCopy
updateSharedInfoWithIdentifier:productType:buildVersion:
_handleResponseProtobuf:forIdentifier:
_ad_performWithPeerStreamConnection:context:
streamId
peerStreamConnectionHasIncomingPeer:
peerStreamConnection:requestMetrics:
_ad_setMetrics:
lastKnownStreamId
_ad_metrics
averageLocalRTT
localMessageState
deviceBlackedOut
_establishEagerStreamPair
containsObject:
intersectSet:
sharedCommandCenter
updateSharedDataFromPeerUseCache:allowCloudMessaging:completion:
_preheat
sharedPeerStreamConnectionWithServiceIdentifier:listener:
addDelegate:
removeDelegate:
getSocketForConnection:completion:
closeForConnection:
getRemoteMetrics:
getAWDMetrics:completion:
hasNearbyPeer
setPreferBTClassic:
getMetricsContext:
_handleWakeUpMessage:context:
_handleGetMetricsMessage:context:
_handleReestablishMessage:context:
peerSupportsExtendedHeader
preheat
deviceIsNearby
_listener
_delegates
_currentPeerStreamConnection
_metricsResponses
_wakeupMessageIdentifier
_currentStreamIdentifier
_gettingDeviceSocket
_socketForConnectionHasBeenVended
_deviceConnection
_sockfd
_socketCompletion
_prefersBTClassic
_productType
_buildVersion
_peerSupportsNamedStreams
_nearbyDeviceIdentifiers
_lastSharedDataUpdateTimestamp
_optimisticRetriesAreBlocked
_peerSupportsExtendedHeader
_lastNearbyDevicesChangedTimestamp
_lastIDSMessageSentTimestamp
_lastIDSMessageStartSendTimestamp
_lastWakeUpMessageDuration
_lastStreamEstablishmentDuration
_lastOpenErrorCode
_lastIDSMetricsContext
_lastIDSMessageSuccess
metrics
initWithServiceIdentifier:delegate:listener:
getSocket:
getLocalMetrics:
_sharedConnection
_vendedDeviceConnection
destination
destinationURIs
initWithServicePort:
inMemoryKnowledgeStore
_inMemoryKnowledgeStore
defaultKnowledgeStore
knowledgeStoreWithName:
handleGetValuesForKeys:completion:
handleSetValuesForKeys:completion:
handleDeleteValueForKey:completion:
handleSetLinkedData:completion:
keys
storeName
storeType
knowledgeStoreWithName:type:error:
setStoreType:
setStoreName:
setEntries:
valuesForKeys:completionHandler:
entries
removeValueForKey:completionHandler:
sparqlQuery
setResult:
sparqlResultsForQuery:completionHandler:
linkedData
predicate
entityWithIdentifier:
linkTo:withPredicate:completionHandler:
commandCenter
handleGetLinkedData:completion:
setCommandCenter:
_commandCenter
T@"ADCommandCenter",W,N,V_commandCenter
ad_requiresDeviceContext
ad_requiresProximityInformationForDeviceContextTuples:
ad_executionDeviceForDeviceContextTuples:executionContext:proximityMap:sharedUserID:localDeviceIsFollower:
alarmIds
deviceInfo
timerIds
ad_executionDeviceForDeviceContextTuples:executionContext:proximityMap:localDeviceIsFollower:
idsDeviceUniqueIdentifier
af_validFlowContext
promptContextProto
sharedInstance
managedPeerInfoMatchingPeerInfo:
initWithAFPeerInfo:
identifier
initWithPeerInfo:contextIdentifier:proximity:commandRelayProxyIdentifier:error:
sharedManager
_initWithQueue:deviceProximityManager:
sharedObserver
addListener:
_updateContext:
content
enumerateObjectsUsingBlock:
getCurrentContextSnapshotWithCompletion:
peerInfo
getDeviceProximityRelativeToLocalDeviceWithDeviceContexts:includesAllReachableDevices:completion:
_fetchCurrentDeviceContextTuplesIfNecessaryWithCompletion:
requestLifecycleObserver:requestWillBeginWithInfo:origin:client:
requestLifecycleObserver:requestWasCancelledWithInfo:origin:client:
requestLifecycleObserver:requestDidEndWithInfo:origin:client:
initWithQueue:
updateContext:
getPreferredDeviceToHandleCommand:logNearbyDeviceMetrics:executionContext:sharedUserID:completion:
_currentDeviceContextTuples
_isLocalDeviceFollowerInStereoPair
_deviceProximityManager
initWithArray:
alarmSnapshot
alarmsByID
allValues
alarmURL
isFiring
indexesOfObjectsPassingTest:
objectsAtIndexes:
fromLocalDevice
indexOfObjectPassingTest:
objectAtIndexedSubscript:
firstObject
contextCollectorSource
timerSnapshot
timersByID
timerURL
originPeerInfo
numOfWords
trailingSilenceDuration
eosLikelihood
pauseCounts
silenceProbability
taskName
processedAudioDurationMs
initWithWordCount:trailingSilenceDuration:eosLikelihood:pauseCounts:silencePosterior:taskName:processedAudioDurationInMilliseconds:
_storageForDeviceWithIdentifier:
itemsByID
setTimersByID:
_invalidateStorageForDeviceWithIdentifier:
beginGrouping
endGroupingWithOptions:
_sendStereoPartnerAction:timerID:changes:completion:
initWithIdentifier:delegate:
clockItemStorageDidUpdate:insertedItemIDs:updatedItemIDs:deletedItemIDs:
getSnapshotForDeviceWithIdentifier:completion:
getSnapshotsByDeviceIdentifierWithCompletion:
prepareStorageForDeviceWithIdentifier:
finalizeStorageForDeviceWithIdentifier:
accessStorageForDeviceWithIdentifier:usingBlock:
updateTimerWithID:changes:completion:
removeTimerWithID:completion:
_storagesByDeviceIdentifier
_initWithQueue:
_publishCancelAndRemoveAllObjectsForReason:
dealloc
_publishObjectHasArrived:
aceId
_notificationIdentifiersForObject:
_publishFinishedAndRemoveAllObjectsForReason:
isEqualToArray:
_publishStateChanged:forIdentifiers:
defaultCenter
postNotificationName:object:userInfo:
context
configuration
scheme
absoluteString
substringFromIndex:
sharedPublisher
supportsPublishingArrivalForAceObject:
publishObjectHasArrived:
_currentlyAnnouncingNotificationIdentifiers
startMockServerWithReplayFile:withReply:
disconnect
checkResourceIsReachableAndReturnError:
_establishConnectionIfNeeded
_remoteProxy
assistantIdentifier
UUIDString
setNearbyDevicesPayloads:
setTargetedResult:
proximity
_setTargetedDeviceContextIdentifier:withAction:payload:
enumerateKeysAndObjectsUsingBlock:
initWithNearbyDevicesLoggingID:
addNearbyDeviceContexts:proximityInfo:
addCoreAnalyticsDeviceTargetedWithContextIdentifier:commandResultDescription:
nearbyDevicesLoggingID
nearbyDevicesPayloads
_nearbyDevicesLoggingID
_nearbyDevicesPayloads
T@"NSString",R,C,N,V_nearbyDevicesLoggingID
T@"NSMutableDictionary",&,N,V_nearbyDevicesPayloads
initWithDictionaryRepresentation:
buildDictionaryRepresentation
setContent:
hasContent
_content
T@"NSData",&,N,V_content
generation
date
items
setWithObjects:
decodeObjectOfClasses:forKey:
initWithGeneration:date:items:
_generation
_date
_items
TQ,R,N,V_generation
T@"NSDate",R,C,N,V_date
T@"NSArray",R,C,N,V_items
setGeneration:
setDate:
setItems:
_ring
_movingAverage
_size
_cursor
_ringFull
Tf,R,N,V_movingAverage
_offlineDictationStatusStringToDictionary:
setOfflineDictationStatus:
_updateOfflineDictationStatus:error:
getOfflineDictationStatusIgnoringCache:withCompletion:
offlineDictationStatusIgnoringCache:error:
_offlineDictationStatus
T@"NSDictionary",&,N,V_offlineDictationStatus
_handleCommand:forDomain:executionContext:reply:
_processPendingCallResultBlocks
_remoteExecute_remoteDeviceExecuteCommand:onDeviceForAssistantId:executionContext:completion:
setDomain:
_remoteExecute_remoteDeviceExecuteCommand:executionContext:completion:
_pendingCallResultBlocks
initWithClientBoundCommand:
setIdentifier:
initWithObjects:
_systemDomains
allObjects
arrayWithObject:
_saCommandFailed:completion:
_saCommandIgnored:completion:
_saSendCommands:completion:
_saAssistantDestroyed:completion:
_saCancelSucceeded:completion:
_saRollbackSucceeded:completion:
_saSetClientData:completion:
_saSetHandoffPayload:completion:
_saStartLocalRequest:completion:
_saAddResultObjects:completion:
_saExecuteCallbacks:completion:
_saInitiateHandoffOnCompanion:completion:
_saSetDeviceTTSMuteState:completion:
_saPing:completion:
_saWaitForCommands:completion:
_saSyncGetAnchorsResponse:completion:
_saSyncChunkDenied:completion:
_saSyncChunkAccepted:completion:
_saSASyncGetCachedSyncAnchors:completion:
_saSyncGetAnchors:completion:
_saSyncClientVerify:completion:
_saSyncServerVerifyResponse:completion:
_saSyncFinished:completion:
_saDomainObjectCreate:completion:
_saDomainObjectRetrieve:completion:
_saDomainObjectUpdate:completion:
_saDomainObjectCancel:completion:
_saDomainObjectDelete:completion:
_saDomainObjectCommit:completion:
_saDomainObjectPunchOut:completion:
_sasSpeechPartialResult:completion:
_sasSpeechFailure:completion:
_sasAbortSpeechRequest:completion:
_saStructuredDictationResult:completion:
_saStructuredDictationFailure:completion:
_sasVoiceSearchPartialResult:completion:
_sasVoiceSearchFinalResult:completion:
_sasSuspendClientEndpointer:completion:
_sasConfirmEndpoint:completion:
_sasPronunciationRecognized:completion:
_sasServerEndpointFeatures:completion:
_sasClientBoundConfusionNetwork:completion:
_saClientSetupInfo:completion:
_sasResultCandidate:completion:
_sasSpeechServerEndpointIdentified:completion:
_sasVoiceIdentificationSignal:completion:
_saAcknowledgeAlert:completion:
_saDeviceConfiguration:completion:
_saDeviceMyriadConfiguration:completion:
_saSetLatencyDiagnosticConfiguration:completion:
_saAIRequestSearch:completion:
_saAISearchCompleted:completion:
_saAIRetrySearch:completion:
_saLogSignatureWithABC:completion:
_saLogNumericEvent:completion:
_saLogStringEvent:completion:
_saPerformDataDetection:completion:
_saStartUIRequest:completion:
_saReplayRequestFromDMHypothesis:completion:
_saTTSGetSpeechSynthesisVolume:completion:
_saTTSSetSpeechSynthesisVolume:completion:
_saNotificationSearch:completion:
_saRequestCompleted:executionContext:completion:
_saCancelCrossDeviceRequest:executionContext:completion:
_saExecuteOnRemoteRequest:executionContext:completion:
_sasSpeechRecognized:executionContext:completion:
_sasSpeechMultilingualSpeechRecognized:executionContext:completion:
_sasExtractSpeechData:executionContext:completion:
_saQuickStop:executionContext:completion:
_saGetRequestOrigin:executionContext:completion:
_saPostPersonalDomainActivityNotification:executionContext:completion:
_saPostCalendarActivityNotification:executionContext:completion:
_saPostUpdatePersonalRequestSettingsNotification:executionContext:completion:
_saUnhandledObject:completion:
_handleExtractSpeechDataCompleted:inResponseTo:completion:
isSystemService
handle
domains
commandsForDomain:
implementsCommand:forDomain:
controlCenterLockRestrictedCommands
handleCommand:forDomain:executionContext:reply:
handleResponse:toCommand:completion:
_commandMap
_commandMapV2
UUID
invalidateTimer
initWithTimeoutInterval:onQueue:timeoutHandler:
start
cancel
startTimerOnQueue:withTimeoutHandler:
uuid
timedout
syncChunkHandler
setSyncChunkHandler:
_timer
_timedout
_uuid
_syncChunkHandler
T@"NSUUID",R,N,V_uuid
TB,R,N,V_timedout
T@?,C,N,V_syncChunkHandler
_ad_transformedShowActivityRequest
_ad_transformedHealthSuccessResponse
activityDataType
activityView
_initWithDataType:view:
domain
setRefId:
setErrorCode:
setReason:
T@"<ADDisplayScaleContextCollectorDelegate>",W,N,V_delegate
dictionaryWithContentsOfFile:
_timeouts:expiringAfter:
_timeoutsExpiringAfter:
_saveTimeouts:
supportedVocabularyStringTypes
_af_normalizedKeyForKey:appBundleID:syncSlotName:
anchors
suspendDurationInSeconds
_af_isValid
timeoutsExpiringAfter:
saveTimeouts:
setDictionary:
appIdentifyingInfo
bundleId
filterBlacklistedKeys:vocabSources:
dictionaryWithValuesForKeys:
filterBlacklistedAnchorsFrom:includingNewRestrictionsFromResponse:
filterBlacklistedKeys:appSources:
_cachedTimeoutTable
_handleMessage:messageType:fromDeviceWithIdentifier:completion:
processRemoteCommandWithPayload:fromPeer:withReply:
handleMessage:messageType:fromDeviceWithIdentifier:completion:
sendMessageWithPayload:toPeer:withReply:
activeAccountForInstanceContext:
isCurrent
_accountForIdentifier:infoDictionary:intanceContext:isReadOnly:
setIsReadOnly:
setInstanceContext:
setLocaleIdentifier:
setPeerHostname:
_keychainValueForKey:
_setKeychainValue:forKey:
setPeerLoggingAssistantIdentifier:
setPeerLanguageCode:
setPeerSiriEnabled:
setPairedWatches:
_markKeychainValuesAsDirty
_serverOverrideFromPreferences
rangeOfString:
_preferences
_hostnameQAOverride
autoupdatingCurrentLocale
_setKeychainValueSync:forKey:
resetCachedHostname
_onQueueSetKeychainValue:forKey:
pairedWatches
_infoDictionaryForPreferences
_removeKeychainValueForKey:
initWithMessageDictionary:
_hostnameOverride
clearAssistantDataDuringForcedRedirect
group
isReadOnly
instanceContext
_sharedDataChanged
_peerAssistantIdentifier
_peerLoggingAssistantIdentifier
_peerSpeechIdentifier
_peerUserAgentString
_peerHostname
_peerLanguageCode
_peerSiriEnabled
_keychainDataMutationFlags
_cachedHostname
_cachedServerCertificateData
_cachedValidataionData
_cachedLocalCryptoKeyData
_hasCachedHostnameQAOverride
_cachedHostnameQAOverride
_pairedWatches
_needsDestruction
_isReadOnly
_label
_loggingAssistantIdentifier
_speechIdentifier
_predefinedServer
_connectionPolicy
_connectionPolicyDate
_connectionPolicyHostname
_localeIdentifier
_lastAssistantDataAnchor
_validationExpiration
_validationVersion
_connectionPolicyFailureCount
_connectionPolicyFirstFailureDate
TB,N,V_isReadOnly
T@"AFInstanceContext",&,N,V_instanceContext
T@"NSString",C,N,V_label
T@"NSString",C,N,V_loggingAssistantIdentifier
T@"NSString",C,N,V_speechIdentifier
T@"NSString",C,N,V_hostname
T@"NSString",C,N,V_group
T@"NSString",C,N,V_predefinedServer
T@"NSDictionary",C,N,V_connectionPolicy
T@"NSDate",C,N,V_connectionPolicyDate
T@"NSString",C,N,V_connectionPolicyHostname
T@"NSString",C,N,V_localeIdentifier
T@"NSString",C,N,V_lastAssistantDataAnchor
T@"NSDate",C,N,V_validationExpiration
T@"NSNumber",C,N,V_validationVersion
TB,N,V_needsDestruction
TQ,N,V_connectionPolicyFailureCount
T@"NSDate",C,N,V_connectionPolicyFirstFailureDate
peerLoggingAssistantIdentifier
peerHostname
updateGizmoData:forUniqueId:
watchExistsForAssistantId:
connectionPolicyExpirationDate
responseCode
ad_aceResponseCommandRepresentationWithErrorCode:reason:
requestTypeCode
responseClass
_ADPBDeviceRequestType
postTransformationStream
publishInstrumentationToObserver:completion:
subscribeWithMessagesProduced:
registerMessageResolver:
defaultMessageStream
_siriOrDictationIsEnabled
sharedLogger
speechIdentifier
setValue:forUploadHeaderNamed:
initWithDefaultMessageStorage:
analyticsEnabled
messageStorageProviderWithDefaultMessageStorage:
messageStream
writeLogViewerIdentifierDefaults
_siriAnalyticsService
_siriAnalyticsMessagesSubscription
_globalDimensionsResolver
dataTypes
initWithDataTypes:
_dataTypes
T@"NSArray",R,C,N,V_dataTypes
setDataTypes:
hasStreamId
_streamId
T@"NSString",&,N,V_streamId
_ad_transformedSendEmailRequest
_ad_transformedMailSuccessResponse
email
recipientsTo
_personsForRecipients:
setToRecipients:
recipientsCc
setCcRecipients:
recipientsBcc
setBccRecipients:
receivingAddresses
setReceivingAddresses:
fromEmail
setSender:
subject
setSubject:
message
setMessageBody:
setMessageIdentifier:
setContactHandles:
displayText
setFullName:
logLocationSend
defaultContext
initWithInstanceContext:
service
initWithObject:
object
hasEqualOrHigherPrecedenceThanServiceRecord:
insertBeforeItem:
insertAfterItem:
previousItem
nextItem
syncKeys
initWithService:precedence:
_addServiceWithRecord:
removeFromList
precedence
requiredInfoDictionaryKeys
pathExtension
initWithURL:
bundlePath
infoDictionary
objectForKeyedSubscript:
setValue:forKey:
defaultManager
array
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
_buildFliteredInfoDictionaryFromBundleURL:
dataWithPropertyList:format:options:error:
writeToFile:options:error:
initWithContentsOfFile:
_generatedBundleServicesCache
_writeBundleServicesCache:toPath:
_bundleServicesCache:
initWithBundlePath:infoDictionary:instanceContext:
_addService:precedence:
_bundleServicesCache
_loadServiceFromBundlePath:infoDictionary:
_loadServicesIfNeeded
_serviceMap
requiresBootMaintenance
_syncKeyMap
serviceForIdentifier:
assistantIsEnabled
_removeService:
_reprioritizeService:
allKeys
customVocabSyncInfo
pruneCacheWithCurrentSynapseInfo:
allServices
firstUnlockRestrictedCommands
addObjectsFromArray:
lockRestrictedCommands
setCommandCenterClient:
preheatDomain:
cancelOperationsForRequestID:fromRemote:
hasSuffix:
isReloadServiceNotification:
substringToIndex:
_serviceBundleIDFromServiceReloadNotification:
_pendingServiceReloadNotifications
_reloadServices:
arrayWithCapacity:
fileURLWithPath:
removeService:
reload
servicesThatRequireBootMaintenance
serviceForDomain:command:
serviceForSyncAnchorKey:
addService:
addServiceWithLowPrecedence:
reprioritizeService:
allSyncAnchorKeys
allVocabSyncInfo
preheatServicesForDomain:
preheatBundleServices
cancelOperationsForRequest:fromRemote:
pendServiceReloadNotification:
reloadServiceForNotification:
reloadServicesForAllPendingServiceNotifications
_bundleServicesLoaded
_instanceContext
_precedence
setPostGen:
setValidity:
setKey:
setSyncSlots:
setBundleId:
setAppIdentifyingInfo:
setAppMetaData:
isValid
anchorWithKey:appID:syncType:
postGen
validity
_postGen
_validity
T@"NSString",C,N,V_postGen
T@"NSString",C,N,V_validity
UTF8String
_readFromDisk
stringByAppendingPathComponent:
_fetchSentAnchorsOnQueue:completion:
_save
_af_preferredBundleID
syncSlots
_scheduleSave
shouldIgnoreSyncKey:
appMetaData
_noteSendingPostGen:validity:key:appMetaData:
removeAllObjects
_storePath
propertyListWithData:options:format:error:
_pruneAppsCacheWithTruth:
removeItemAtPath:error:
writeToFile:atomically:
_cancelSaveTimer
fetchSentAnchorsOnQueue:completion:
noteSendingChunk:
deleteSavedSnapshots
_pluginCache
_appsCache
_saveTimer
setHasSuccess:
hasSuccess
_success
TB,N,V_success
genderString
loggingSharedUserId
setLoggingSharedUserId:
previousLanguageCode
utsRequiredRequestKeyValuePairs
setUtsRequiredRequestKeyValuePairs:
_sharedUserId
_loggingSharedUserId
_previousLanguageCode
_utsRequiredRequestKeyValuePairs
T@"NSString",C,N,V_assistantId
T@"NSString",C,N,V_loggingAssistantId
T@"NSString",C,N,V_speechId
T@"NSString",C,N,V_sharedUserId
T@"NSString",C,N,V_loggingSharedUserId
T@"NSString",C,N,V_previousLanguageCode
T@"AFVoiceInfo",C,N,V_previousOutputVoice
T@"AFVoiceInfo",C,N,V_outputVoice
T@"NSString",C,N,V_userAgent
T@"NSArray",C,N,V_notificationPreviewRestrictedApps
T@"NSString",C,N,V_airplayRouteId
T@"NSString",C,N,V_storeFrontId
T@"NSString",C,N,V_ekToken
T@"NSString",C,N,V_userToken
T@"NSString",C,N,V_userAssignedName
T@"NSDictionary",C,N,V_utsRequiredRequestKeyValuePairs
T@"NSString",C,N,V_dataSharingOptInStatus
effectiveDate
initWithEffectiveDate:
_effectiveDate
T@"NSDate",R,C,N,V_effectiveDate
setEffectiveDate:
setTimerURL:
setFireTimeInterval:
setFireDate:
setFiredDate:
setDismissedDate:
setLastModifiedDate:
setTimerID:
dismissedDate
lastModifiedDate
initOnQueue:withAccount:languageCode:connectionMode:sharedUserIdentifier:loggingSharedUserIdentifier:instanceContext:
setSessionType:
_setSessionId:
_incrementalChanges
T@"NSArray",R,C,N,V_incrementalChanges
setIncrementalChanges:
emitCoreAnalyticsEventForAnnouncementRequest:completionReason:
initWithAnnouncementRequestType:platform:completion:
completeRequestWithSuccess:forReason:
announcementIdentifier
requestInfo
setRequestInfo:
requestWasInterrupted
setRequestWasInterrupted:
completion
setCompletion:
requestType
setRequestType:
platform
timeOfRequestArrival
_requestWasInterrupted
_announcementIdentifier
_requestInfo
_completion
_requestType
_platform
_timeOfRequestArrival
T@"NSUUID",R,N,V_announcementIdentifier
T@"AFRequestInfo",&,N,V_requestInfo
TB,N,V_requestWasInterrupted
T@?,C,N,V_completion
TQ,N,V_requestType
Tq,R,N,V_platform
T@"NSDate",R,N,V_timeOfRequestArrival
setTimings:
eventType
eventData
setEventGeneratedTimestampRefId:
setEventGeneratedRelativeToBootTimeTimestampNs:
turnContext
providerStyle
packetsSent
bytesSent
bytesRetransmitted
bytesUnacked
packetsReceived
bytesReceived
duplicateBytesReceived
outOfOrderBytesReceived
sendBandwidth
connectionMethodHistory
firstTxByteDelay
carrierName
signalStrengthBars
rssi
wifiPhyMode
wifiChannelInfo
isCaptive
dnsResolutionTime
connectionStartTimeToDNSResolutionTimeMsec
connectionEstablishmentTimeMsec
connectionStartTimeToConnectionEstablishmentTimeMsec
tlsHandshakeTimeMsec
connectionStartTimeToTLSHandshakeTimeMsec
tlsVersion
simSubscriptions
symptomsBasedNetworkQuality
lengthOfBytesUsingEncoding:
reset
speechCapturingDidStopRecordingWithError:endpointMode:totalPacketCount:endpointerMetrics:
initWithDictation:codec:
speechCapturingDidStartRecordingSuccessfully:error:withInfo:
appendData:
speechCapturingDidRecordPCMAudioData:
mutableBytes
dataWithBytes:length:
replaceBytesInRange:withBytes:length:
speechCapturingDidRecordSpeechPackets:atTimestamp:totalPacketCount:
initWithQueue:speechController:audioSessionController:audioPlaybackService:experimentContext:
setDelegate:
releaseAudioSession
suspendAutomaticEndpointingInRange:
setSpeechRequestOptions:
setSpeechWasRecognizedForElapsedTime:isFinal:
setFingerprintWasRecognized
stopSpeechCaptureForEvent:suppressAlert:hostTime:
cancelSpeechCaptureSuppressingAlert:
setFingerprintingEnabled:
forceSuccessAudioAlertOnStop
setIsDriving:
getLastStartpointTimestampAndCurrentTime:
playRecordingStartAlert
updateServerEndpointFeatures:
updateEndpointHintForDuration:completion:
enforcePreviousEndpointHint
stopFingerprinting
setSpeechWasRecognizedForElapsedTime:
startCompressionNarrowband:
addAudioSampleData:
_audioConverter
_bufferedAudio
_packetIndex
_bytesConsumed
isAnnounceEnabled
handleHomeAnnouncementSnapshotUpdate:
registerSnapshotUpdater:
registerContextTransformer:forType:
dateByAddingTimeInterval:
initWithType:deliveryDate:expirationDate:redactedKeyPaths:historyConfiguration:
donateContext:withMetadata:pushToRemote:
getRedactedContextForContextSnapshot:metadata:privacyPolicy:completion:
getAceObjectsForContextSnapshot:completion:
initWithDonationService:instanceContext:
_donationService
_homeAnnouncementContextAdaptor
productID
setProductID:
btAddress
setBtAddress:
availableAnnouncementRequestTypes
setAvailableAnnouncementRequestTypes:
avscRouteDescription
setAvscRouteDescription:
_productID
_btAddress
_availableAnnouncementRequestTypes
_avscRouteDescription
T@"NSString",&,N,V_productID
T@"NSString",&,N,V_btAddress
TQ,N,V_availableAnnouncementRequestTypes
T@"NSDictionary",&,N,V_avscRouteDescription
_init
initWithName:options:queue:delegate:
fetchEligibleAnnouncementRequestTypesAndNotifyObservers:
addObserver:selector:name:object:
_fetchInitialState
_updateAudioRouteAvailabilityAndBroadcast:
updateWirelessSplitterSessionInfoAndObserve
_fetchWirelessSplitterSessionInfoAndStartObservingFromSourceWithCompletion:
_getCurrentHeadphonesAnnouncementRoute
currentlyRoutedHeadphonesRoute
provider:availableAnnouncementRequestTypesChanged:
fetchAvailableAnnouncementRequestTypesWithCompletion:
_fetchEligibleAnnouncementRequestTypesAndNotifyObservers
notifyObserversOfEligibleAnnouncementRequestTypes:
fetchEligibleAnnouncementRequestTypesWithCompletion:
provider:eligibleAnnouncementRequestTypesChanged:
_settingsConnection
getPairedBluetoothDeviceInfoArrayWithCompletion:
startObservingWirelessSplitterSession
getBluetoothWirelessSplitterSessionInfoWithCompletion:
notifyObserversOfAvailableAnnouncementRequestTypes
_setDelegate:
supportsSpokenNotification
supportsAnnounceCall
_fetchPairedBluetoothDevicesFromSourceWithCompletion:
fetchLocalVoiceAssetAvailabilityWithCompletion:
getStateWithCompletion:
provider
announceableIntentIdentifiersForUserNotificationAnnouncementType:
requiredIntentIdentifiersForUserNotificationAnnouncementType:
notifyObserver:didReceiveNotificationWithToken:
notifyObserver:didChangeStateFrom:to:
_settingsConnectionDidDisconnect
_settingsConnectionPartialVerificationResult:
_settingsConnectionServerVerificationReport:
lastKnownEligibleAnnouncementRequestTypes
fetchWirelessSplitterSessionInfoAndStartObservingSync
currentlyRoutedHeadphonesProductID
currentlyRoutedHeadphonesBTAddress
_routeCapabilitiesForRouteDescription:
setCurrentlyRoutedHeadphonesRoute:
_inWirelessSplitterSession
_inWirelessSplitterSessionStateValid
_localVoiceAssetAvailable
_pairedInfoChangeObserver
_wirelessSplitterSessionObserver
_wirelessGuestConnectionObserver
_forcedUpdateObserver
_group
_lastKnownAvailableAnnouncementRequests
_lastKnownEligibleAnnouncementRequests
_currentlyRoutedHeadphonesRoute
T@"AFHeadphonesAnnouncementRoute",&,N,V_currentlyRoutedHeadphonesRoute
initWithGeneration:date:timersByID:notifiedFiringTimerIDs:
_resetStateWithCompletion:
_didStopListening
_restartAndExtendListening
_stopListeningWithCompletion:
opportuneSpeakListeningType
_framesPerSecondForOpportuneSpeakListeningType:
deviceId
initWithSize:
_initializeVoiceThresholdsForOpportuneSpeakListeningType:
_scheduleTimerForMaxDelay:
_didStartListening
startListenWithOption:completion:
add:
movingAverage
_thresholdDetected
stopListenWithStateReset:completion:
_handleFrame:
opportuneSpeakListener:hasRemoteVADAvailable:
opportuneSpeakListener:hasVADAvailable:
opportuneSpeakListener:hasVADAvailable:withHostTime:
opportuneSpeakListener:didStopUnexpectly:
listenForUserSpeechWithOptions:forVoice:maxDelay:stopOnDetection:executeOnSuccess:onFail:
stopListeningWithCompletion:
modeDescriptionFor:
isListening
_currentHasAccel
_currentHasVAD
_avbuffer
_listeningOptions
_inVoice
_currentFrameCount
_currentPausedFrameCount
_currentVoiceFrameCount
_thresholdFrameCount
_successCompletionBlock
_failCompletionBlock
_dispatchQueue
_mode
_isStopping
_maxDelay
_voiceOnMin
_voiceOffMax
_shouldStopListeningOnDetection
_isListening
TB,R,N,V_isListening
_daemonDidLaunchWithContext:
mainRunLoop
_daemonWillShutdown
_proxyService
_peerLocationService
_sharedDataService
listenForSharedDataFromCloud
startListeningForRemote
createXPCListenerWithMachServiceName:
_setQueue:
resume
processIdentifier
_bundleID:andPath:forXPCConnection:
sharedMonitor
beginMonitoring
sharedService
beginEventsGrouping
preheatWithStyle:forOptions:completion:
acquireLocationInUseAssertionForReason:completion:
setRemoteObjectInterface:
setExportedInterface:
initWithXPCConnection:
setExportedObject:
connectionDisconnected
clientDisconnected:
releaseLocationInUseAssertionForReason:
endEventsGrouping
endMonitoring
setInvalidationHandler:
clientConnected:
numberWithInt:
countForObject:
startRequestActivityWithCompletion:
startRecordingForPendingDictationWithLanguageCode:options:speechOptions:reply:
startDictationWithLanguageCode:options:speechOptions:
cancelSpeech
stopSpeechWithOptions:
startRecordedAudioDictationWithOptions:language:narrowband:forceSampling:
addRecordedSpeechSampleData:
updateSpeechOptions:
sendSpeechCorrectionInfo:forCorrectionContext:
sendSpeechCorrectionInfo:interactionIdentifier:
preheatForLanguageCode:
preheatTestWithLanguage:options:
preheatWithRecordDeviceIdentifier:
endSession
recordFailureMetricsForError:
recordAWDSuccessMetrics
_startDictationWithURL:isNarrowBand:language:options:
_sendEngagementFeedback:voiceQueryIdentifier:
getInstalledOfflineLanguagesWithCompletion:
requestOfflineAssistantSupportForLanguage:completion:
requestOfflineDictationSupportForLanguage:completion:
reportIssueForError:eventType:context:
reportIssueForError:eventType:subtype:context:
sendUserSelectedAlternativeDictationLanguageCode:
interfaceWithProtocol:
remoteObjectProxy
initWithServiceDelegate:
queue
sanityCheckAutodownloadedAssetsForced:
auditToken
bundleRecordWithBundleIdentifier:allowPlaceholder:error:
_synapseAppBundleIDFromPossibleDeamonBundleID:
deleteEverything
recordVocabulary:forIntentSlot:withValidationCompletion:
askToSyncSlot:
fetchSiriAuthorization:
requestSiriAuthorization:
fetchCurrentSiriLanguageCode:
verifyProcessCanDonateIntentWithName:completion:
setWithArray:
setClasses:forSelector:argumentIndex:ofReply:
initWithBundleID:path:
setManagedStoreObject:forKey:
fetchManagedStoreObjectForKey:reply:
setKnowledgeStoreData:forKey:inStoreWithName:completion:
getKnowledgeStoreDataForKey:inStoreWithName:completion:
resetKnowledgeStoreWithName:completion:
sharedSiriAnalyticsServiceHost
setupXPCListener
connectionDisconnected:
connectionInterrupted:
setInterruptionHandler:
connectionConnected:
setObserverConnection:
personalDomainNotificationProvider
postNotificationRequest:completion:
withdrawNotificationRequestWithIdentifier:
initWithConnection:bundleIdentifier:notificationCategories:
receivedNotificationResponse:
invalidate
_clientListenerShouldAcceptNewConnection:
_settingsListenerShouldAcceptNewConnection:
_dictationListenerShouldAcceptNewConnection:
_managedStorageListenerShouldAcceptNewConnection:
_synapseSyncListenerShouldAcceptNewConnection:
_analyticsListenerShouldAcceptNewConnection:
_securityListenerShouldAcceptNewConnection:
_analyticsObservationListenerShouldAcceptNewConnection:
_notificationServiceListenerShouldAcceptNewConnection:
_audioSessionAssertionServiceListenerShouldAcceptNewConnection:
initWithUTF8String:
postNotificationName:object:
initWithActivationEvent:
updateSharedDataFromPeerUseCache:completion:
_syncForReason:withCoalescing:
_syncUrgently:
updateSpeechProfilesForReasons:
effectiveSettingsChanged
managedConfigurationEffectiveSettingsChanged
sharedDictationOfflineStatusObserver
fetchOfflineDictationStatusIgnoringCache:asynchronously:
resetCacheAndCompileAllAssets
syncForReason:withCoalescing:
_enabledBitsChanged:
sharedListener
startListening
listen
syncCoordinatorWithServiceName:
syncDidCompleteSending
syncDidComplete
pushSharedDataToPeer:
sharedInfoManager
offlineDictationStatus
boolValue
keysOfEntriesPassingTest:
setAssetsPurgeabilityExceptLanguages:assetType:
installedAssetSizeWithError:
purgeInstalledAssetsExceptLanguages:error:
audioSessionAssertionAcquisitionService
currentContext
_setupCacheDelete
_setupSessionLanguage
_setupInternal
_setupClientListener
_setupOfflineDictationStatusObserver
_setupDictationListener
_setupExternalRequestListener
_setupClientLiteListener
_setupSettingsListener
_setupRapportServices
_setupIDSServices
_setupManagedStorageListener
_setupSynapseSyncListener
_setupAnalyticsListener
_setupSiriAnalyticsListener
_setupContextListener
_setupSecurityListener
_setupAnalyticsObservationListener
_setupSyncListener
_registerForSyncNotifications
_setupTetherListener
_setupNotifyHandlers
_setupDistributedNotificationHandlers
_setupPairedSync
_setupHomeKit
_setupCloudKit
_setupMultiUserCloudSyncer
startAcceptingCloudSharesForMultiUserService
_setupMemoryPressureObservation
_setupWirelessCoexManagerSubscription
_setupNanoPreferences
_setupNotificationServiceListener
_setupAudioSessionAssertionAcquisitionService
_setupAudioSessionAssertionServiceListener
_setupMobileGestaltNotificationHandlers
tracerAllocationsWithQueue:
addQueue:heartBeatInterval:timeoutInterval:timeoutHandler:
prepareForShutdown
sharedDiagnostics
flush
setLanguageCodeIfNeeded
syncAnchorKeys:forceReset:reasons:
dictationIsEnabled
isDictationHIPAACompliant
keepAlive
_syncCoalesced
processLaunchTime
processLaunchMachTime
listener:shouldAcceptNewConnection:
syncCoordinator:beginSyncSession:
syncCoordinator:didInvalidateSyncSession:
syncCoordinatorDidChangeSyncRestriction:
supportsMigrationSync
syncCoordinatorDidReceiveStartSyncCommand:
shutdown
startUIRequestWithInfo:
startUISpeechRequest
scheduleDestroyJob
unscheduleDestroyJob
scheduleValidationRefreshForInterval:
scheduleUnlockedWork:
_analyticsListener
_analyticsObservationListener
_clientListener
_dictationListener
_settingsListener
_synapseSyncListener
_managedStorageListener
_securityListener
_notificationServiceListener
_audioSessionAssertionServiceListener
_syncListener
_externalRequestListener
_clientLiteListener
_siriTetherListener
_lastSyncRequested
_syncReasonsQueued
_syncActivityRegistered
_syncUrgentActivityRegistered
_proxyRemote
_peerLocationManagerRemote
_unlockedWorkQueueIsSuspended
_unlockedWorkQueue
_dictationListenerQueue
_dictationPidSet
_trialExperimentsQueue
_mg_notification_token
defrost
_sharedDataDidChange:
removeObserver:
_pushSharedDataToPeerFromNotification:completion:
userInfo
null
setPreviousLanguageCode:
setPreviousOutputVoice:
_sendData:
sendSharedData:toPeers:
_getDataWithCompletion:
_setDataFromSharedData:
getSharedDataForPeer:
_ad_setData:
languageCode
setSiriEnabled:
_ad_requestInfo
setSuccess:
errorWithCode:description:underlyingError:
handleExternalActivationRequest:completion:
_ad_performWithSharedDataRemote:completion:
peerExportsSharedData
getSharedDataFromPeerUseCache:allowCloudMessaging:completion:
_requestDataRemotelyAllowingCloudMessaging:completion:
_ad_data
sharedDataConnection:didUpdateSharedData:
_ad_setRequestInfo:
success
errorWithCode:
assistantId
dictionaryWithPlistData:
plistData
executeCommand:fromPeer:remoteExecutionInfo:reply:
peerConnection:peerAvailabilityDidChange:
initWithDelegate:
_getDataWithPBCompletion:
_startRemoteRequest:completion:
getSharedDataFromPeerUseCache:completion:
_dataDidUpdate:
startRemoteRequest:completion:
watchIsNearbyForAssistantId:
executeRemoteCommand:completion:
_handleExecuteRequestOnRemoteWatch:completion:
_peerConnection
_localData
_remoteData
_languageCodeDidChange:
_sharedAssistantdIdentifierDidChange:
_unregisterForPossibleSessionDestroyingNotifications
_unregisterForSleepNotification
_registerForPossibleSessionDestroyingNotifications
_resetWinningStateAndPurgeRequestMaps
_startSession:makeQuiet:
_canStartLocalSession
_updateSharedUserIdentifiers
_saConnectionMode
setAWDRequestRecordMetrics:
_startSessions:
_resetSessionsAndMakeQuiet:
resetSessionsAtNextRequestBoundaryWithCompletion:
_mapADRequestIdToSessionRequestId:forSession:
_ad_connectionModeFromEnabledState
_cancelOtherSessionRequests:forRefId:
_logContextForWinningSession:forReason:forRemoteSessionScore:forLocalSessionScore:
_resetResultObjectsTimer
_resultObjectsHoldTime
_resultObjectsTimerFired:
_evaluateResultObjects
_startResultObjectsTimer
mutatingCommand
_keyForRequestId:forSession:
_resetWinningState
_purgeRequestMaps
_registerForSleepNotification
_reverseMapSessionRequestIdToADRequestId:forSession:
_isDestructive:
_logCommandToMetrics:forSession:outbound:
_allowWhitelistedCommands:
_haveUsefulness:usefulnessScore:
_queueResultObject:forSession:
_hasAtleastOneActiveSessionBesides:
_logMetricsForSessionFailure:withError:completion:
_pickDefaultWinnerWithDroppingSession:
aggregator
beginSessionRetryPreferringWWAN:
_filterUnsupportedCommands:inGroup:onSession:
_convertEmbeddedRequestIds:originalCommand:session:
_sendCommand:opportunistically:logEvent:doSendPreProcessing:doSendPostProcessing:
_resetSessionOnRequestBoundaryIfNeeded
initWithTimestamp:reason:
updateOrchestratorRequestId:
resetNetId
logRequestLinkBetweenOrchestratorAndNetworkComponent
increaseSequenceNumber
connectionDidDrop
connectionDidFail
ad_deferredMetricsContext
remoteMetrics
getSequenceNumber
sessionConnectionNetworkFromSiriCoreConnectionMetrics:
flowNetworkInterfaceType
networkInterfacesFromDictionary:
setSequenceNumber:
setSnapshotTriggerReason:
setNetwork:
setNetworkInterfaces:
logSessionConnectionSnapshotCaptured:
debugSessionConnectionNetworkFromSiriCoreConnectionMetrics:
debugNetworkInterfacesFromSiriCoreConnectionMetrics:
pingInfoFromSiriCoreConnectionMetrics:
sessionConnectionQualityFromSiriCoreConnectionMetrics:
setPingInfo:
setQuality:
logDebugSessionConnectionSnapshotCaptured:
_preferredSessionType
speechError:
handleCommandInLocalSession:
sendCommand:
_mapAndSendSpeechFailure:toLocalSession:
_propagateCachedSpeechErrorToLocalSessions
assistantSessionShouldLogVisibleRequestFailure:forError:
_powerChangedMessageType:notificationID:
hasActiveSessionForSendingMetrics
hasClient
interceptor
_sharedUserIdentifierState
_isRegisteredForSessionDestroyingNotifications
_sessions
_callInProcess
_hasClient
_ioConnect
_ioNotificationPortRef
_ioNotifier
_aggregator
_proxiedIdMap
_reverseProxiedIdMap
_sessionOriginatedCommandTable
_winningSessionId
_resultObjectsEvaluationTimer
_isQueuingResultsForDelayedEvaluation
_timerFiredOnce
_continueWithPreviousWinner
_lastSessionError
_preferredRemoteSessionType
_savedSasSpeechRecognized
_savedSasSpeechRecognizedSubmitted
_savedSasSpeechFailure
_serverDrivenResultsHoldTime
_serverSpeechRecognitionArrived
_needsResetOnRequestBoundary
_assertions
_interceptor
_sessionResetOnRequestBoundaryCompletion
T@"<ADSessionManagerDelegate>",W,N,V_delegate
T@"<ADSessionManagerIntercepting>",W,N,V_interceptor
_attachToSession
_cleanUpWirelessSplitterProxy
_cleanUpDeviceProxies
_detachFromSession
_tearDownAccessoryManager
_tearDownLocalDevice
_setUpLocalDevice
_setUpAccessoryManager
_deviceProxies
_resetConnectedDeviceAddresses
_resetPairedDeviceAddresses
_reloadForDevice:
_handleListeningModeChangedForBTDevice:fromAccessoryManager:
_handleInEarStatusChangedForBTDevice:fromAccessoryManager:
address
getDeviceInfo:
updateHeadphoneInEarDetectionState:
updateHeadphoneListeningMode:
getUUIDBytes:
_deviceProxyWithAddress:createsIfAbsent:
_deviceProxyWithUID:createsIfAbsent:
_connectedDeviceProxies
_pairedDeviceProxies
initWithDataSource:queue:
initWithAddress:dataSource:queue:
initWithDeviceUID:dataSource:queue:
_fetchConnectedDeviceAddresses
_fetchPairedDeviceAddresses
_sessionAttached:result:
_sessionDetached:
_sessionTerminated:
device:serviceMask:serviceEventType:serviceSpecificEvent:result:
localDevice:event:result:
accessoryManager:event:device:state:
getBTDeviceWithAddress:completion:
getBTDeviceWithDeviceUID:completion:
getBTLocalDeviceWithCompletion:
deviceWithAddress:
deviceWithUID:
getConnectedDevicesWithCompletion:
getPairedDevicesWithCompletion:
wirelessSplitterSession
_session
_localDevice
_accessoryManager
_attachingToSession
_sessionSetupGroup
_deviceProxiesLock
_deviceProxiesByAddress
_deviceProxiesByDeviceUID
_wirelessSplitterSessionProxyLock
_wirelessSplitterSessionProxy
_connectedDeviceAddresses
_pairedDeviceAddresses
_updateDeviceInfo:
_fetchDeviceInfoWithCompletion:
_updateHeadphoneInEarDetectionState:
_updateHeadphoneListeningMode:
_reload:
_getDeviceInfo:
_getHeadphoneInEarDetectionState:
_getHeadphoneListeningMode:
_setHeadphoneListeningMode:completion:
_accessBTDeviceAndAccessoryManagerUsingBlock:
_invalidate
_fetchHeadphoneInEarDetectionStateWithCompletion:
_fetchHeadphoneListeningModeWithCompletion:
supportsInEarDetection
supportsListeningModeANC
supportsListeningModeTransparency
_changeHeadphoneListeningMode:completion:
bluetoothDevice:deviceInfoDidChangeFrom:to:
_enumerateObserversUsingBlock:
bluetoothDevice:headphoneInEarDetectionStateDidChangeFrom:to:
bluetoothDevice:headphoneListeningModeDidChangeFrom:to:
setDeviceUID:
bluetoothDeviceDidInvalidate:
setRepresentation
prewarm
getHeadphoneInEarDetectionState:
getHeadphoneListeningMode:
setHeadphoneListeningMode:completion:
connect:
disconnect:
addObserver:
updateDeviceInfo:
deviceUID
_dataSource
_observers
_deviceInfo
_headphoneInEarDetectionState
_headphoneListeningMode
_address
_deviceUID
T@"NSString",R,C,N,V_address
T@"NSUUID",R,C,N,V_deviceUID
initWithQueue:delegate:
_updateWirelessSplitterSessionInfo:
_fetchWirelessSplitterSessionInfoWithCompletion:
_getWirelessSplitterSessionInfo:
bluetoothWirelessSplitterSession:sessionInfoDidChangeFrom:to:
_accessBTLocalDeviceUsingBlock:
bluetoothWirelessSplitterSessionDidInvalidate:
getSessionInfo:
bluetoothWirelessSplitterSessionStateObserver:didChangeStateFrom:to:
updateWirelessSplitterSessionInfo:
_wirelessSplitterSessionInfo
_observer
setAddress:
setVendorID:
setIsAdvancedAppleAudioDevice:
setSupportsInEarDetection:
setSupportsVoiceTrigger:
setSupportsSpokenNotification:
setSupportsListeningModeANC:
setSupportsListeningModeTransparency:
setSupportsAnnounceCall:
setIsEnabled:
setPrimaryInEarStatus:
setSecondaryInEarStatus:
setDeviceAddresses:
statisticsRecordingEnabled
_saveStats
fileExistsAtPath:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
_statsDirectory
_serviceStatsPath
_statsDict
_commandTimes
_statsForCommand:
doubleValue
timeIntervalSinceDate:
initWithServiceIdentifier:
markIncomingCommand:
markResponseForCommand:
_serviceIdentifier
T@"NSString",R,N,V_serviceIdentifier
initWithUUID:timestamp:languageCode:options:speechRequestOptions:
_setSpeechRecognitionTransactionState:
_setAudioFileIOTransactionState:
speechRecognitionTransactionState
audioFileIOTransactionState
_transactionObjects
_options
_speechRecognitionTransactionState
_audioFileIOTransactionState
T@"NSString",R,C,N,V_uuid
T@"NSString",R,C,N,V_languageCode
T@"AFDictationOptions",R,N,V_options
T@"AFSpeechRequestOptions",R,N,V_speechRequestOptions
Tq,R,N,V_speechRecognitionTransactionState
Tq,R,N,V_audioFileIOTransactionState
siriConnection:willStartWithConnectionType:
siriConnection:didOpenWithConnectionType:delay:
initOnQueue:
sendCommand:errorHandler:
cancelWithCompletion:
T@"<ADSessionLocalConnectionDelegate>",W,N,V_delegate
callObserver:callStateDidChangeFrom:to:
adCallStateChangedCallInProcess:
adCallStateChangedCallIncoming:
callObserver:onSpeakerDidChange:
startObservingCallStateWithDelegate:
stopObservingCallStateWithCompletion:
_handleCallStateDidChangeTo:
_handleOnSpeakerDidChangeTo:
_serialQueue
_isObserving
_currentCallState
_onSpeaker
_ad_contextLoggerWithEventType:context:completion:
_initWithDelegate:deviceCircleManager:deviceProximityManager:
_initialize
keepReportingNowPlayingTimingEventsHeuristically
_setCollectingContext:
_startPeriodicContextFetchFromNearbyDevices
getContextCollectorDeviceIdentifiersWithCompletion:
_unregisterForBGUpdates
_registerForBGUpdates
_cancelNowPlayingCoalescingTimer
_filteredApplicationInfosForLockedStark:
pidRestrictedCenterNamed:
setTargetPID:
doesServerExist
sendMessageAndReceiveReplyName:userInfo:
aceObjectWithDictionary:
af_lenientMappedArray:
initWithAssociatedBundleIdentifier:bulletin:aceContext:contextDictionary:aceContexts:
aceContexts
arrayByAddingObject:
setAceContexts:
_appInfoWithBundleID:
_getCurrentUserActivityOnQueue:completion:
setInternalGUID:
_isEligibleForUserActivityReminders
setIsEligibleForReminders:
isEligibleForReminders
externalMediaContentIdentifier
setEligibileFunctions:
hasLocationData
setIsEligibleForDirections:
hasPhoneNumber
setIsEligibleForAppPunchout:
_fetchUserActivityWithUUID:intervalToWaitForDocumentSynchronizationToComplete:completionHandler:
_currentUserActivityUUIDWithOptions:completionHandler:
sectionID
saNotificationObject
_alarmAceObjectFromAlarm:withProximity:inDeviceContext:
_timerAceObjectFromTimer:withProximity:inDeviceContext:
setContext:
info
hasFiringAlarms
hasFiringTimers
getContextSnapshotForCurrentRequestWithCompletion:
URLByDeletingPathExtension
lastPathComponent
voicemailWithIdentifier:
markVoicemailAsRead:
_getNowPlayingMediaIsResumable:
queueState
listeningToItem
mediaType
applicationIdentifier
_isResumableFirstPartyBundleID:
applicationProxyForIdentifier:
genreID
_isResumableThirdPartyGenreID:
isEqualToNumber:
getContextIncludingKeys:excludingMandatoryKeys:timeOut:localContextCompletion:completion:
initWithBlock:
invoke
localPeerInfo
initWithInfo:content:
getLocalContextWithPrivacyClass:completion:
getContextSnapshotIncludingKeys:excludingMandatoryKeys:completion:
localContextWithPrivacyClass:
af_serviceDeviceContextForKeys:excludeContextExpiredBefore:proximity:
getContextSnapshotForForeignRequestID:completion:
getCapabilitiesForDevice:completion:
logEventWithType:machAbsoluteTime:context:
playbackStateSnapshot
playbackState
nowPlayingTimestamp
af_didHearVoiceTrigger
supportsVoiceTrigger
invokeWithSignal:
addIndex:
replaceObjectAtIndex:withObject:
enumerateIndexesUsingBlock:
fetchContextSnapshotFromDevicesWithPeerInfo:completion:
_getDevicesWithContexts:passingTest:capabilitesPassingTest:completion:
_fetchContextSnapshotForCurrentRequest
timestamp
localeWithLocaleIdentifier:
setLocale:
setLocalizedDateFormatFromTemplate:
stringFromDate:
wakeUpNearbyDevices
fetchContextSnapshotFromAllDevicesWithCompletion:
supportsTelephony
_inlineUpdatePhoneState
_inlineUpdateCurrentHomeKitHome
numberWithLong:
_updateNavStatusWithContext:completion:
_updateNowPlayingInfoWithContext:completion:
_updateSimpleThingsWithContext:completion:
_updateMusicPersonalizationTokenWithContext:completion:
_updateHomeAnnouncementWithContext:supplementalSnapshot:completion:
backgroundContextWithCachedObjects
setAceId:
getBackgroundContext:
_getBackgroundContext:
navStatusDidChange:
updateBackgroundContextIfHomeKitInfoChanged
_callStateDidChange:
_notePossiblePlayPausedStateChange:
_updateBackgroundContextIfNowPlayingInfoChanged:
_updateBackgroundContextIfMusicPersonalizationTokenChanged
_handleHomeAnnouncementSnapshotUpdate:
removeObserver:name:object:
unregisterSnapshotUpdater
startCollectingContext
stopCollectingContext
setIsFiring:
fireTimeInterval
fireDate
timeIntervalSinceNow
title
setTitle:
_dataSourceInfoWithProximity:deviceContext:
setDataSourceInfo:
hour
setHour:
minute
setMinute:
repeatOptions
arrayWithArray:
setFrequency:
setLabel:
setFiring:
isEnabled
setEnabled:
setProximityHint:
setContextIdentifier:
isCommunalDevice
setSourceDeviceOwnership:
initWithQueue:xpcConnection:delegate:
_addDeviceContextConnection:
_removeDeviceContextConnection:
donateSerializedContextMapByPrivacyClass:withMetadataMap:forType:pushToRemote:completion:
_stopPeriodicContextFetchFromNearbyDevices
updateLocalDeviceContext:
_enumerateDeviceContextConnectionsUsingBlock:
remoteContextStore
initWithSerializedBackingStore:fromLocalDevice:contextCollectorSource:
getSerializedDeviceContextSnapshotIncludingKeys:excludingMandatoryKeys:completion:
localContextStore
partialSerializedBackingStoreIncludingKeys:excludingMandatoryKeys:
setDeviceContext:includedKeys:excludedKeys:forDeviceWithPeerInfo:completion:
initWithData:encoding:
musicPersonalizationToken
setMusicPersonalizationToken:
lastError
shouldExcludeFromBackgroundRefresh
setShouldExcludeFromBackgroundRefresh:
lastUpdateAttemptTime
setLastUpdateAttemptTime:
sharedProvider
setAllMusicPersonalizationTokens:
allMusicPersonalizationTokens
tokenResult
token
setObject:forKeyedSubscript:
_makeUserTokenStatusWithICTokenStatus:icError:
errorCode
allMusicPersonalizationTokenStatuses
setAllMusicPersonalizationTokenStatuses:
getAllTokenStatusForAssistantForcingRefresh:completion:
getAllTokensForAssistantForcingRefresh:completion:
setMusicPersonalizationTokenStatus:
_updateMultiUserPersonalizationTokensWithSingleUserTokenChanged:completion:
getTokenStatusForcingRefresh:completion:
getTokenForcingRefresh:completion:
contextManagerDidUpdateBackgroundContext:
setCurrentHomeIdentifier:
currentHome
setCurrentHome:
navStatus
localSearchGetNavigationStatusCompleted
currentNavigationState
setStatusValue:
setNavStatus:
setLocalSearchGetNavigationStatusCompleted:
_sendServiceCommand:completion:
compare:
sortedArrayUsingSelector:
_reallyUpdateBackgroundContextIfNowPlayingInfoChangedForReason:
setQueueState:
_scheduleNowPlayingRefreshForReason:
_isInCall
_hasIncomingCall
setActive:
setIncoming:
phoneCallState
setPhoneCallState:
contextData
contextFetchDelay
errorWithCode:description:
_isCollectingContext
pushContextToContextCollectorIncludingKeys:excludingMandatoryKeys:expectingResponseIncludingKeys:excludingMandatoryKeys:completion:
getContextIncludingKeys:excludingMandatoryKeys:timeOut:completion:
setMyriadAdvertisementContext:completion:
homeAnnouncement
lastPlayedAnnouncement
URLWithString:
startedDate
setDatePlaybackStarted:
finishedDate
setDatePlaybackFinished:
setHomeAnnouncement:
getSnapshotWithCompletion:
deviceContextConnectionDidInvalidate:
deviceContextConnection:getLocalDeviceContextWithCompletion:
deviceContextConnection:donateSerializedContextMapByPrivacyClass:withMetadataMap:forType:pushToRemote:completion:
localContextStore:didUpdateDeviceContext:
contextCollectorChangedToDevicesWithIdentifiers:localDeviceIsCollector:
localPeerInfoUpdatedFrom:to:
setAlertContextDirty
alertContextIsDirty
clearAlertContextDirtyState
setBackgroundContextDirty
backgroundContextIsDirty
clearBackgroundContextDirtyState
getAppContextForDeviceState:applicationInfos:completion:
getAlertContextWithBulletins:externalAlarmSnapshot:timerSnapshot:nlAlertContextCompletion:fullAlertContextCompletion:
markBulletinAsAcknolwedgedForDomainObject:
getDomainObjectFromMessageContext:completion:
getNowPlayingMediaIsResumable:
getDeviceContextsForKeys:forForeignRequestID:includesNearbyDevices:completion:
pushContextSnapshotForCurrentRequestWithID:toDevice:
preheatBackgroundContext
_handlePushContextMessage:fromDeviceWithPeerInfo:completion:
_handleContextSnapshotPush:completion:
_updateSingleUserMusicPersonalizationTokenFromKeychainWithCompletion:
updateBackgroundContextIfNowPlayingInfoChanged
pushMyriadAdvertismentContextToContextCollector:completion:
delegate
_deviceCircleManager
_alertContextIsDirty
_bgContextIsDirty
_bgContextQueue
_registeredForContextUpdates
_bgContext
_analytics
_ignoreNowPlayingUpdatesAfterTimestamp
_nowPlayingCoalescingTimer
_coalescedNowPlayingUpdateSources
_deviceProblemsRegistrationToken
_musicPersonalizationTokenRegistrationToken
_queuedContextSnapshotCompletions
_contextSnapshotFetchTimedOut
_currentContextSnapshot
_currentRequestInfoUUID
_currentRequestDate
_contextSnapshotTimer
_contextHistory
_contextRefreshTimer
_contextSnapshotByForeignRequestID
_deviceContextServiceListener
_deviceContextConnections
_collectingContext
_localContextStore
_remoteContextStore
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
T@"ADLocalContextStore",R,N,V_localContextStore
T@"ADRemoteContextStore",R,N,V_remoteContextStore
collectingContext
TB,N,G_isCollectingContext,S_setCollectingContext:,V_collectingContext
T@"<ADContextManagerDelegate>",W,N,V_delegate
siriCurrentHome
currentHomeIdentifier
aceDictionary
setAceDictionary:
oldId
setOldId:
_aceDictionary
_oldId
T@"NSDictionary",C,N,V_aceDictionary
T@"NSString",C,N,V_oldId
setDomainObject:withOldId:forKey:
domainObjectForKey:
setDomainObject:forKey:
oldIdForKey:
_cacheEntriesByAceKey
_relinquishAssertionWithContext:error:options:
_finalizeWithContext:error:
acquireAudioSessionAssertionWithContext:relinquishmentHandler:
initWithBlock:defaultValue1:defaultValue2:
invokeWithValue:andValue:
_clearXPCConnection
relinquishWithError:options:
relinquishWithContext:options:
acquireAudioSessionWithContext:relinquishmentHandler:
relinquishAudioSessionWithContext:error:options:completion:
_processIdentifier
_assertion
_xpcConnection
_relinquishmentHandler
_ad_transformedMapsRequest
_ad_transformedMapsSuccessResponse
showDirections
itemSource
placeData2
extSessionGuid
extSessionGuidCreatedTimestamp
_initWithPlaceData:extSessionGuid:extSessionGuidCreatedTimestamp:
detailType
setIsCurrentLocation:
setGeoResult:
itemDestination
setResultType:
directionsType
arrivalDate
departureDate
_initWithStartLocation:destinationLocation:directionsType:arrivalDate:departureDate:extSessionGuid:extSessionGuidCreatedTimestamp:
rawData
_initWithLocation:extSessionGuid:extSessionGuidCreatedTimestamp:
timerManagerProxyForIntentSupport
T@"<MTTimerManagerIntentSupport>",R,N
errorWithCode:description:underlyingErrors:
_finalizeWithError:
_handleWatchdogTimeout
_beginSendingWithMessageSender:
_endSendingWithMessageSender:replyMessage:error:
_addError:
_finalizeWithResponseMessage:
_cancelWatchdogTimer
initWithQueue:deviceIdentifier:timeoutDuration:completion:
beginSendingWithMessageSender:
endSendingWithMessageSender:replyMessage:error:
_deviceIdentifier
_watchdogTimer
_numberOfActiveMessageSenders
_errors
_ad_handleSettingsRequestWithCompletionHandler:
initWithSettingType:valueBeforeUpdate:valueAfterUpdate:
applyChanges
setAirplaneMode:
createResponseWithSettingChanges:
airplaneMode
numberWithUnsignedChar:
setIsDelaying:
_delayForADOSMEDWithDelayType:completion:
requestDelayManager:interruptedWithType:
_resetDetector
dequeueDelayedCommandsAndSend:completion:
_delayedCommandHandlers
_delayedcontextCommandHandlers
_beginTimerForContextCommands
_bargeInTimeThresholdForDelayType:
requestDelayManager:didStopUnexpectly:
isInterceptingCommands
interceptCommand:completion:
sendMockInterruptedWithTypeSignal
stopDelayingAndSendCommands:completion:
beginTimerForContextCommands
_delayType
_stopListeningCompletion
_currentContextCommandsTimer
_isDelaying
T@"<ADRequestDelayManagerDelegate>",W,N,V_delegate
TB,V_isDelaying
_clearOutstandingSearchIds
setAcousticIdSessionId:
acousticIDHelperDidStartSession:
setFingerprint:
_addOutstandingSearchId:
_removeOutstandingSearchForRefId:
acousticIDHelper:didCompleteSessionSuccessfully:
minimumDurationForRetry
hasRelatedCommandForRefId:
currentSession
sessionIsComplete
startNewAcousticIDSessionWithRequestId:refId:
searchCommandForFingerprintData:withDuration:
cancelSessionCommand
handleSearchCompleted:
handleRetrySearch:
handleCommandFailed:
shouldSendFingerprintForDuration:
failCurrentSession
_currentSession
_outstandingSearches
_completed
_sessionIsComplete
_minumumFingerprintDuration
T@"<ADAcousticIDHelperDelegate>",W,N,V_delegate
_handleXPCConnectionInvalidation
_handleXPCConnectionInterruption
_remoteServiceDelegateWithErrorHandler:
_beginUpdateLocalDeviceContextWithReply:
_endUpdateLocalDeviceContext
remoteObjectProxyWithErrorHandler:
getLocalDeviceContextWithReply:
beginUpdateLocalDeviceContextWithReply:
endUpdateLocalDeviceContext
_isInvalid
_isUpdatingLocalDeviceContext
_updateLocalDeviceContextReply
_cancelBestLocationTimer
initWithEffectiveBundle:delegate:onQueue:
registerAsLocationClient
setDesiredAccuracy:
_locationManager
location
_executeBestLocationCompletionWithLocation:
_executeBestLocationCompletionWithLocationErrorWithCode:
startUpdatingLocation
ad_setLocation:
_startBestLocationTimer
_hasActiveBestLocationRequest
_startUpdatingLocation
stopUpdatingLocation
_executeBestLocationCompletionWithLocation:error:
_ad_performWithPeerLocationManagerRemote:completion:
lastObject
locationManager:didUpdateToLocation:fromLocation:
locationManager:didUpdateLocations:
locationManager:didUpdateHeading:
locationManagerShouldDisplayHeadingCalibration:
locationManager:didDetermineState:forRegion:
locationManager:didRangeBeacons:inRegion:
locationManager:rangingBeaconsDidFailForRegion:withError:
locationManager:didRangeBeacons:satisfyingConstraint:
locationManager:didFailRangingBeaconsForConstraint:error:
locationManager:didEnterRegion:
locationManager:didExitRegion:
locationManager:didFailWithError:
locationManager:monitoringDidFailForRegion:withError:
locationManager:didChangeAuthorizationStatus:
locationManagerDidChangeAuthorization:
locationManager:didStartMonitoringForRegion:
locationManagerDidPauseLocationUpdates:
locationManagerDidResumeLocationUpdates:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didVisit:
_getBestLocationWithCompletion:
_bestLocationTimer
_bestLocationCompletion
timerProxyForIntentSupport
addNotificationPreviewRestrictedApps:
setSpeechId:
setLanguageCode:
setAssistantId:
setHostname:
setSharedId:
setPreviousLangaugeCode:
setOutputVoice:
setUserAgent:
notificationPreviewRestrictedAppsCount
clearNotificationPreviewRestrictedApps
notificationPreviewRestrictedAppsAtIndex:
setTemperatureUnit:
setLoggingAssistantId:
setLoggingSharedId:
setStoreFrontId:
setAirplayRouteId:
setEkToken:
setUserToken:
setUserAssignedName:
setUtsRequiredRequestData:
setDataSharingOptInStatus:
notificationPreviewRestrictedAppsType
setHasSiriEnabled:
hasSiriEnabled
hasSpeechId
hasLanguageCode
hasAssistantId
hasHostname
setActivityContinuationAllowed:
setHasActivityContinuationAllowed:
hasActivityContinuationAllowed
setDictationEnabled:
setHasDictationEnabled:
hasDictationEnabled
hasSharedId
hasPreviousLangaugeCode
hasPreviousOutputVoice
hasOutputVoice
setCloudSyncEnabled:
setHasCloudSyncEnabled:
hasCloudSyncEnabled
setShouldCensorSpeech:
setHasShouldCensorSpeech:
hasShouldCensorSpeech
hasUserAgent
setIsLocationSharingDevice:
setHasIsLocationSharingDevice:
hasIsLocationSharingDevice
hasTemperatureUnit
hasLoggingAssistantId
hasLoggingSharedId
hasStoreFrontId
hasAirplayRouteId
hasEkToken
hasUserToken
setIsRemotePlaybackDevice:
setHasIsRemotePlaybackDevice:
hasIsRemotePlaybackDevice
hasUserAssignedName
hasUtsRequiredRequestData
hasDataSharingOptInStatus
siriEnabled
speechId
hostname
activityContinuationAllowed
dictationEnabled
sharedId
previousLangaugeCode
previousOutputVoice
outputVoice
cloudSyncEnabled
shouldCensorSpeech
userAgent
isLocationSharingDevice
notificationPreviewRestrictedApps
setNotificationPreviewRestrictedApps:
temperatureUnit
loggingAssistantId
loggingSharedId
storeFrontId
airplayRouteId
ekToken
userToken
isRemotePlaybackDevice
userAssignedName
utsRequiredRequestData
dataSharingOptInStatus
_airplayRouteId
_assistantId
_dataSharingOptInStatus
_ekToken
_hostname
_languageCode
_loggingAssistantId
_loggingSharedId
_notificationPreviewRestrictedApps
_outputVoice
_previousLangaugeCode
_previousOutputVoice
_sharedId
_speechId
_storeFrontId
_temperatureUnit
_userAgent
_userAssignedName
_userToken
_utsRequiredRequestData
_activityContinuationAllowed
_cloudSyncEnabled
_dictationEnabled
_isLocationSharingDevice
_isRemotePlaybackDevice
_shouldCensorSpeech
_siriEnabled
TB,N,V_siriEnabled
T@"NSString",&,N,V_speechId
T@"NSString",&,N,V_languageCode
T@"NSString",&,N,V_assistantId
T@"NSString",&,N,V_hostname
TB,N,V_activityContinuationAllowed
TB,N,V_dictationEnabled
T@"NSString",&,N,V_sharedId
T@"NSString",&,N,V_previousLangaugeCode
T@"_ADPBDeviceOutputVoiceInfo",&,N,V_previousOutputVoice
T@"_ADPBDeviceOutputVoiceInfo",&,N,V_outputVoice
TB,N,V_cloudSyncEnabled
TB,N,V_shouldCensorSpeech
T@"NSString",&,N,V_userAgent
TB,N,V_isLocationSharingDevice
T@"NSMutableArray",&,N,V_notificationPreviewRestrictedApps
T@"NSString",&,N,V_temperatureUnit
T@"NSString",&,N,V_loggingAssistantId
T@"NSString",&,N,V_loggingSharedId
T@"NSString",&,N,V_storeFrontId
T@"NSString",&,N,V_airplayRouteId
T@"NSString",&,N,V_ekToken
T@"NSString",&,N,V_userToken
TB,N,V_isRemotePlaybackDevice
T@"NSString",&,N,V_userAssignedName
T@"_ADPBDeviceStringKeyValueDictionary",&,N,V_utsRequiredRequestData
T@"NSString",&,N,V_dataSharingOptInStatus
includesFamily
includesHome
includesRemoraDevices
initWithIncludesFamily:includesHome:includesRemoraDevices:
_includesFamily
_includesHome
_includesRemoraDevices
Tq,R,N,V_includesFamily
Tq,R,N,V_includesHome
Tq,R,N,V_includesRemoraDevices
setIncludesFamily:
setIncludesHome:
setIncludesRemoraDevices:
initWithConfigurationIdentifier:configurationURL:maxTimeToSync:
serverConfigurationInfoForThemis
locationDataWasRecievedFromPeer
_ad_performForPeerLocationWithCompletion:
peerLocationConnectionSuggestsClearingCachedLocation:
peerLocationConnection:didReceiveUnsolicitedLocation:
locationPeerDidChange
peerLocationPolicySuggestsClearingCachedLocation:
getBestLocationWithCompletion:
_locationPolicy
ad_location
initWithRequest:replyCommand:
clientBoundCommand
createResponseWithReplyCommand:
_clientBoundCommand
_url
ad_isPeerConnectionError
ad_isPeerNotNearbyError
isCanceled
initWithTechnology:
setConnectionEdgeID:
setRemoteMetrics:
updateConnectionMetrics:completion:
connectionProvider:receivedError:
initListenerWithQueue:
setPeerStreamConnection:
setPolicyRoute:
setProviderConnectionPolicy:
setPrefersWWAN:
headerDataWithForceReconnect:
shouldFallbackQuickly
supportsInitialPayload
isPeerConnectionError:
isPeerNotNearbyError:
isMultipath
shouldFallbackFromError:
setScopeIsWiFiOnly
setKeepAlive:withInterval:withCount:
setRetransmitConnectionDropTime:
_setupStaleConnectionTimer
_getNWConnectionWithInitialData:completion:
connectionType
analysisInfo
_isListener
_checkBuddyState
_updateBuddyState
isPastBuddy
_isPastBuddy
setSourceIDSFirstRoutableDestination:
setSourceAirplayId:
hasSourceIDSFirstRoutableDestination
hasSourceAirplayId
sourceIDSFirstRoutableDestination
sourceAirplayId
_sourceAirplayId
_sourceIDSFirstRoutableDestination
T@"NSString",&,N,V_sourceIDSFirstRoutableDestination
T@"NSString",&,N,V_sourceAirplayId
initWithContainer:queue:
createMirroredZonesWithCompletion:
setVoiceName:
gender
setGender:
setHasGender:
hasGender
genderAsString:
StringAsGender:
hasVoiceName
voiceName
_gender
_voiceName
Ti,N,V_gender
T@"NSString",&,N,V_voiceName
createXPCListenerForMachService:targetQueue:flags:
setLegacyDirectActionIdentifier:
setActivationEvent:
initWithNotification:appID:platform:completion:
sharedNotificationRequestHandler
handleAnnouncementRequest:
initWithBytes:length:
initForReadingFromData:error:
finishDecoding
setStartLocalRequest:
getLocalRequestWithType:completion:
initWithBytesNoCopy:length:freeWhenDone:
unarchivedObjectOfClass:fromData:error:
setStartRequest:
setOptions:
initWithCall:completion:
isHomeAutomationBackgroundRequestEnabled
unarchivedObjectOfClasses:fromData:error:
mainBundle
bundleIdentifier
generateAsyncDialogResponse:reportingDomain:
handleAceCommand:afterCurrentRequest:waitForResponse:withDelegate:completion:
deactivateNotificationAnnouncementRequestForReason:notification:sourceAppId:platform:completion:
withdrawalAnnouncementRequestForNotification:completion:
_ad_timerStoreErrorWithCode:
handleFailureInFunction:file:lineNumber:description:
_createUnavailableError
getTimerWithCompletionHandler:
setTimer:completionHandler:
dismissTimersWithURLs:completionHandler:
_classForPlatform:
sessionWithConfiguration:delegate:delegateQueue:
diagnosticActions
requestWithURL:
verb
setHTTPMethod:
setUri:
setVerb:
setLatency:
dataTaskWithRequest:completionHandler:
setDiagnosticReports:
invalidateAndCancel
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
initWithMode:delegate:
channel
prepareForDeviceWithIdentifier:
_sessionWithDeviceIdentifier:
_getGenerationsForDataTypes:andPushToDeviceWithIdentifier:
finalizeForDeviceWithIdentifier:
messageReceiver
receiveMessage:completion:
initWithDeviceIdentifier:messagingService:
initWithQueue:deviceIdentifier:dataConsumersByType:dataProvidersByType:messageSenders:
getGenerationWithCompletion:
pushGenerationsByDataTypes:
deviceSyncMessageService:didFoundDeviceWithIdentifier:
deviceSyncMessageService:didLostDeviceWithIdentifier:
deviceSyncMessageService:didReceiveMessage:fromDeviceWithIdentifier:completion:
deviceSyncDataProviderDidUpdate:
_messagingServicesByChannel
_dataConsumersByType
_dataProvidersByType
_sessionsByDeviceIdentifier
_refId
appLaunchHandler:didLaunchAppForRequestId:
_ad_handleAppLaunchCommandWithRequest:completion:
handleSiriRequest:deliveryHandler:completionHandler:
T@"<ADSiriAppLaunchRequestHandlerDelegate>",W,N,V_delegate
serviceWithDefaultShellEndpoint
_turnId
logInstrumentation:machAbsoluteTime:turnIdentifier:
launchId
optionsWithDictionary:
openApplication:withOptions:completion:
canOpenApplication:reason:
appIds
setAppToItsRestrictionsMap:
applicationName
localizedName
appState
applicationType
isLaunchProhibited
appTags
setLocalizedBundleDisplayName:
shortVersionString
setVersion:
bundleVersion
setBuildNumber:
setFoundApps:
localizedStandardContainsString:
enumerateSubstringsInRange:options:usingBlock:
bundleURL
_ad_getMessagesRequestValueWithCompletionHandler:
_ad_replyCommandValue
smsIdentifier
_initWithDraftMessageIdentifier:
af_messageValue
_initWithMessage:
_pushGenerationsByDataType:completion:
_receiveMessage:completion:
_sendMessage:completion:
_handlePulledDeltaWithIncrementalChanges:forDataType:
_pullDeltaForDataType:generation:limit:completion:
_handlePulledSnapshot:forDataType:
_pullSnapshotForDataType:completion:
_handlePingWithCompletion:
_handlePushGenerationsByDataType:completion:
_handlePullGenerationsForDataTypes:completion:
limit
initWithIncrementalChanges:
_handlePullDeltaForDataType:generation:limit:completion:
_handlePullSnapshotForDataType:completion:
_handlePushedOrPulledGeneration:forDataType:
initWithDataType:generation:limit:
incrementalChanges
_pingWithCompletion:
_pullGenerationsForDataTypes:completion:
_incomingSequence
_outgoingSequence
_messageSenders
T@"<ADDeviceSyncMessageReceiving>",R,N
_initWithRequest:
replyCommand
_replyCommand
initWithDomainName:className:
_serviceCommandTypeWithDomainName:className:
stringByAppendingString:
qualifiedCommandName
isEqualToServiceCommandType:
domainName
className
domainObjectCreateTypeForDomainNamed:
domainObjectRetrieveTypeForDomainNamed:
domainObjectUpdateTypeForDomainNamed:
domainObjectDeleteTypeForDomainNamed:
domainObjectCancelTypeForDomainNamed:
domainObjectCommitTypeForDomainNamed:
_domainName
_className
_getVoiceOver:completion:
_registerCommandClass:forDomain:withSelector:forRegistry:
_setVoiceOver:completion:
_getPlaybackAudioRoute:completion:
_getNoiseManagement:completion:
_setNoiseManagement:completion:
_wrapBoolSettingValue:
_setBoolSetting:currentValueBlock:setValueBlock:completion:
audioCategory
noiseManagementOption
toggle
_registerCommandHandlersWithRegistry:
_recordingInfoProvider
T@"<CSSiriRecordingInfoProviding>",R,N,V_recordingInfoProvider
primaryInEarStatus
secondaryInEarStatus
initWithQueue:stateManager:
opportuneSpeakingPauseInterval
opportuneSpeakingTimeoutInterval
modelWithIdentifier:didUpdateScore:forSpeakable:
setDeviceId:
setOpportuneSpeakListeningType:
_detector
listenForPauseWithOptions:forPause:maxDelay:stopOnDetection:executeOnSuccess:onFail:
fetchCurrentlyRoutedHeadphonesCBUUIDWithCompletion:
startWithDelegate:
setSpeakable:
recordFeedbackOfType:forSpeakable:
stop
_stateManager
_deviceID
_modelIdentifier
setCodedLocation:
hasCodedLocation
codedLocation
_codedLocation
T@"NSData",&,N,V_codedLocation
_samplesPerInterval
_cleanUpConnection
initWithServiceName:
setSampleRate:
appendAcousticData:sampleCount:sampleRate:
getSignature:
_connectionInterrupted
_connectionInvalidated
_connection
_configureWithCurrentASBD
_needsConversion
initWithLength:
bytes
setLength:
_convertPCMDataForFingerprinting:
acousticFingerprinter:hasFingerprint:duration:
_serviceWithErrorHandler:
setFingerprintInterval:
setASBD:
appendPCMData:
_asxConnection
_totalSampleCount
_nextFingerprintSampleNumber
_sourceASBD
_interval
_fingerprinterConverter
T@"<ADAcousticFingerprinterDelegate>",W,N,V_delegate
streamUID
setStreamUID:
_streamUID
T@"NSString",&,N,V_streamUID
closeWithError:
stringByStandardizingPath
_insertEventRecords:error:
_fetchEventStreamUIDsWithError:
_fetchEventRecords:afterTimestamp:eventStreamUID:streamSpeechId:deliveryStream:error:
fetchEventRecords:afterTimestamp:eventStreamUID:streamSpeechId:deliveryStream:completion:
_deleteEventRecordsBeforeOrEqualToTimestamp:deliveryStream:eventStreamUID:streamSpeechId:error:
_deleteEventRecordsWithRecordIDs:error:
_purgeDeletedEventRecordsBeforeOrEqualToDate:error:
_fetchEventRecordsCreatedAfterDate:error:
fileExistsAtPath:isDirectory:
attributesOfItemAtPath:error:
_resetForReason:error:
logAnalyticsLocalStoragePurgedWithSize:
logAnalyticsLocalStorageSnapshotWithSize:
checkpointWriteAheadLogWithError:
_updateRecordsWithSpeechId:toUpdatedSpeechId:error:
lastKnownAnalyticsStoreState
setLastKnownAnalyticsStoreState:
initWithPath:dataProtectionClass:options:
openWithError:
performIntegrityCheckWithError:
initWithName:type:constraints:
defaultColumnConstraintWithName:value:
initWithName:columns:constraints:
fetchTableWithName:error:
columns
setWithCapacity:
alterTableWithName:addColumn:error:
createTable:error:
dropIndexWithName:error:
initWithName:tableName:columnNames:options:
createIndex:error:
isNullQueryCriterionWithColumnName:negation:
updateTableWithName:columnName:columnValue:criterion:error:
_preparedDatabaseWithError:
beginTransactionWithError:
subarrayWithRange:
removeObjectsInRange:
insertIntoTableWithName:record:error:
commitTransactionWithError:
rollbackTransactionWithError:
isQueryCriterionWithColumnName:value:negation:
lessThanOrEqualToQueryCriterionWithColumnName:value:
andQueryCriterionWithSubcriteria:
updateTableWithName:valueMap:criterion:error:
orQueryCriterionWithSubcriteria:
deleteFromTableWithName:indexedBy:criterion:error:
selectValueTuplesFromTableWithName:columnNames:behavior:indexedBy:criterion:order:range:error:
siriCoreSQLiteValue_toString
greaterThanQueryCriterionWithColumnName:value:
initWithColumnNames:mode:
initWithLimit:
selectRecordsFromTableWithName:columnNames:behavior:indexedBy:criterion:order:range:recordBuilder:error:
greaterThanOrEqualToQueryCriterionWithColumnName:value:
_countQueuedEventRecordsWithCriteria:withCompletion:
countValuesInTableWithName:columnName:behavior:indexedBy:criterion:range:error:
initWithPath:
insertEventRecords:completion:
fetchEventStreamUIDsWithCompletion:
fetchEventRecords:eventStreamUID:streamSpeechId:deliveryStream:completion:
deleteEventRecordsBeforeOrEqualToTimestamp:deliveryStream:eventStreamUID:streamSpeechId:completion:
deleteEventRecordsWithRecordIDs:completion:
purgeDeletedEventRecordsBeforeOrEqualToDate:completion:
fetchEventRecordsCreatedAfterDate:completion:
purgeWithCompletion:
resetWithCompletion:
checkpointWithCompletion:
updateRecordsWithSpeechId:toUpdatedSpeechId:withCompletion:
countQueuedEventRecordsWithCompletion:
countQueuedEventRecordsForDeliveryStream:withCompletion:
_database
_eventRecordBuilder
_path
T@"NSString",R,C,N,V_path
siriCoreSQLiteValue_toNumber
siriCoreSQLiteValue_toData
initWithDeliveryStream:type:timestamp:contextDataType:contextData:
dateWithTimeIntervalSince1970:
initWithEvent:streamUID:dateCreated:speechId:recordId:
setValue:forColumnName:
build
_streamUIDValue
_deliveryStreamValue
_typeValue
_timestampValue
_contextDataValue
_contextDataTypeValue
_dateCreatedValue
_speechIdValue
_recordIdValue
initWithMachServiceName:
fetchSiriKitApplicationsWithNotificationPreviewRestrictionsWithCompletion:
getPersonalSettingsForSharedUserID:completion:
fetchSiriRelatedNotificationPreviewRestrictedAppsWithCompletion:
setupListener
_tccAccessInfoForAppID:
privacyPolicy
privacyCategory
authorizationStatusForBundleIdentifier:
redactionTarget
ad_filteredDictionaryWithAppID:
parameters
useCaseId
initWithAppIdentifier:intentString:utterance:info:
backgroundLaunch
_setLaunchToForeground:
_setOriginatingAceID:
openSensitiveURL:
assistantLocalizedStringForKey:table:bundle:
isDeviceLockedWithPasscode
isDeviceInCarDND
peerInfoForCurrentCommand
prepareForAudioHandoffWithCompletion:
prepareForAudioHandoffFailedWithCompletion:
fetchContextsForKeys:includesNearbyDevices:completion:
isDeviceWatchAuthenticatedWithCompletion:
fetchContextsForKeys:forRequestID:includesNearbyDevices:completion:
taskmaster:didReceivePunchoutOutcome:
taskmaster:didLaunchApplicationForRequestWithId:
_ad_transformedWorkoutRequest
_ad_transformedWorkoutSuccessResponse
workoutType
workoutCategory
workoutLocationType
workoutUserMode
workoutGoal
workoutGoalUnitType
inchUnit
meterUnit
footUnit
yardUnit
mileUnit
secondUnit
minuteUnit
hourUnit
jouleUnit
kilocalorieUnit
goalValue
quantityWithUnit:doubleValue:
isCompatibleWithUnit:
isOpenGoal
skipActivitySetup
_initWithType:location:goal:goalType:userMode:isOpenGoal:skipActivitySetup:
targetWorkoutState
workoutStateValue
_initWithState:
getAVSystemControllerWithTimeout:completion:
passthroughEndpointer:wasConfiguredWithASBD:frameRate:
configureWithASBD:andFrameRate:
passthroughEndpointer:didReceivePCMData:
getStatus:
endpointMode
setEndpointMode:
startWaitTime
setStartWaitTime:
interspeechWaitTime
setInterspeechWaitTime:
endWaitTime
setEndWaitTime:
configureWithSampleRate:andFrameRate:
forwardingTargetForSelector:
functionalEndpointer
setFunctionalEndpointer:
_functionalEndpointer
T@"<ADPassthroughEndpointerDelegate>",W,N,V_delegate
T@"<Endpointer>",&,N,V_functionalEndpointer
_bundle
_getLocalRequestWithType:bundle:languageCode:outputVoiceInfo:completion:
setCommands:
setMessage:
setClientBoundCommands:
_initWithDonationService:instanceContext:queue:allowInitialUpdate:
initWithQueue:instanceContext:
_handleProxyGroupPlayerDidChangeFrom:to:
getProxyGroupPlayerStateWithCompletion:
_handlePlaybackStateDidChangeToState:fromState:onDate:lastPlayingDate:completion:
getPlaybackStateWithCompletion:
setIsProxyGroupPlayer:
_donateMediaPlaybackContextWithSnapshot:date:
lastActivationStoppedNowPlayingApp
getNowPlayingInfoForCurrentItemWithCompletion:
initWithPlaybackState:nowPlayingTimestamp:mediaType:groupIdentifier:isProxyGroupPlayer:
updateProximityObservationsForPlayState:
_updateExpirationDateForMediaPlaybackSnapshotBasedOnDate:
nowPlayingObserver:playbackStateDidChangeFrom:to:lastPlayingDate:
nowPlayingObserverNowPlayingInfoDidChange:
nowPlayingObserver:proxyGroupPlayerStateDidChangeFrom:to:
_previousState
_isProxyGroupPlayer
_proximityRescanTimer
_clientStateObserver
_lastSnapshotExpirationDateRenewal
_donation
threadIdentifier
_lastRequestIdentifierInQueue
_identifierForNotificationRequest:
_lastRequestAnnouncementTypeInQueue
_isAnnounceNotificationRequest:equalToRequest:
removeObjectAtIndex:
setNotification:fromSourceApp:
setAnnouncementType:
enqueueAnnouncementRequest:
nextAnnouncementRequest
completeCurrentRequestWithSuccess:forReason:
clearRequestQueue
notificationRequestForNotificationIdentifierInAnnouncementQueue:
removeAnnouncementRequest:
_numberOfThreads
_numberOfNotificationRequests
currentRequest
_queuedNotificationRequestIdentifiers
_queuedRequestMap
T@"ADAnnounceNotificationRequest",&,N,V_currentRequest
addSessionObserver:
_requestTypesForCarPlayAvailableOrConnected:
_isCarPlayConnectedWithCompletion:
waitForSessionInitialization
_setLastKnownAvailableAnnouncementRequestTypesAndNotifyObservers:
updateForCarPlaySessionConnected:
_availableAnnouncementRequestTypesForCarPlayConnectionWithCompletion:
isCarPlayConnectedWithCompletion:
_notifyObserversOfUpdatedAvailableAnnouncementRequestTypes:
startedConnectionAttemptOnTransport:
cancelledConnectionAttemptOnTransport:
sessionDidConnect:
sessionDidDisconnect:
session:didUpdateConfiguration:
_carSessionStatus
_providerQueue
_isCarPlayConnected
_lastKnownAvailableAnnouncementRequestTypes
_lastKnownEligibleAnnouncementRequestTypes
initWithListener:connection:
initWithWork:timeout:
enqueueObject:
_incrementAndTestExecutionCount
_doDelayedClientWorkIfAny:
_decrementAndTestExecutionCount
frontObject
dequeueObject
timeout
workItem
doClientWork:withTimeoutBlock:
doDelayedClientWorkIfAny
_workItemQueue
_executionCount
acquireShutdownAssertion
addBarrierBlock:
releaseShutdownAssertion:
invokeWithValue:andValue:andValue:
handleCommand:completion:
handleRemoteCommand:afterCurrentRequest:isOneWay:completion:
adRequestDidReceiveCommand:reply:
adRequestDidCompleteWithSuccess:error:
adRequestEncounteredIntermediateError:
adRequestWillReceiveCommand:
_outstandingCommandGroup
_handler
_workItem
_timeout
_updateForCarPlaySessionConnected:
_currentToken
_speechRequestOptions
T@"NSUUID",R,C,N,V_currentToken
T@"AFSpeechRequestOptions",R,C,N,V_speechRequestOptions
T@?,R,C,N,V_completion
commandIdentifiers
handleCommand:completionHandler:
extensionContext
airPlayRouteIdentifiers
_setAirPlayRouteIdentifiers:
_setRecordRoute:
_setRecordDeviceIdentifier:
_setRecordDeviceUID:
getAudioRecordRouteAndDeviceIdentificationWithCompletion:
_intentNeedsPreparation:
_preparePerson:meCardCache:
_intents_enumerateObjectsOfClass:withBlock:
commandCenterClient
adWantsToCacheImage:
adExtensionRequestWillStartForApplication:
adExtensionRequestFinishedForApplication:error:
handleIntentForwardingAction:inBackgroundApplicationWithBundleIdentifier:completionHandler:
_meCard
_meCardWithCache:
middleName
lastName
fullName
nickName
internalGUID
contactIdentifier
_replacement:forString:meCardCache:
setContactIdentifier:
displayName
setDisplayName:
nameComponents
_prepareNameComponents:meCardCache:
siriMatches
namePrefix
setNamePrefix:
givenName
setGivenName:
setMiddleName:
nameSuffix
setNameSuffix:
nickname
setNickname:
phoneticRepresentation
extensionService:suspendTimeout:
extensionService:processData:usingSecurityProcedure:completionHandler:
extensionService:processDataUsingSHA256WithInMemorySalt:completionHandler:
extensionService:wantsToCacheImage:
extensionService:extensionRequestWillStartForApplication:
extensionService:extensionRequestDidFinishForApplication:error:
extensionService:logEventWithType:context:contextNoCopy:
siriLanguageCodeForExtensionService:
extensionService:requiresHandlingCommand:completion:
extensionService:contextDictionaryForCommand:
extensionService:contextDictionaryForError:
extensionService:prepareForStartPlaybackWithDestination:intent:completion:
extensionService:handleFailedStartPlaybackWithDestination:completion:
extensionService:prepareIntent:
extensionService:handleIntent:inBackgroundAppWithBundleIdentifier:completionHandler:
extensionService:handleIntentForwardingAction:inBackgroundAppWithBundleIdentifier:completionHandler:
_extensionService
_commandCenterClient
T@"<ADCommandCenterClient>",W,N,V_commandCenterClient
_ADPBProxyRequestType
_initWithRapportLink:queue:deviceCircleManager:
_setContextCollectionAllowed:
deviceContextForDeviceContextKeys:excludingMandatoryKeys:
_enumerateDeviceContextsUsingBlock:
_fetchContextFromCollectorAndForceFetchingFromDevicesWithPeerInfo:completion:
objectForPeerInfo:
partiallyUpdatedContextForDeviceContextKeys:excludingMandatoryKeys:fromDeviceContext:
setObject:forPeerInfo:
_dumpStateForReason:
initWithRapportLink:queue:
_fetchContextFromDeviceWithPeerInfo:completion:
setDeviceContext:withIncludedKeys:excludedKeys:forDeviceWithIDSDeviceUniqueIdentifier:withCompletion:
_deviceContextMap
_contextCollectionAllowed
initWithBytes:length:encoding:
aceVersion
buildVersion
productType
userAssignedDeviceName
userInterfaceIdiom
homeAccessoryInfo
initWithAceVersion:assistantIdentifier:buildVersion:productType:sharedUserIdentifier:userAssignedDeviceName:userInterfaceIdiom:homeAccessoryInfo:
_aceVersion
_assistantIdentifier
_sharedUserIdentifier
_userAssignedDeviceName
_userInterfaceIdiom
_homeAccessoryInfo
T@"NSString",R,C,N,V_aceVersion
T@"NSString",R,C,N,V_assistantIdentifier
T@"NSString",R,C,N,V_buildVersion
T@"NSString",R,C,N,V_productType
T@"NSString",R,C,N,V_sharedUserIdentifier
T@"NSString",R,C,N,V_userAssignedDeviceName
T@"NSString",R,C,N,V_userInterfaceIdiom
T@"AFHomeAccessoryInfo",R,C,N,V_homeAccessoryInfo
setAceVersion:
setAssistantIdentifier:
setBuildVersion:
setProductType:
setSharedUserIdentifier:
setUserAssignedDeviceName:
setUserInterfaceIdiom:
setHomeAccessoryInfo:
deviceCount
setDeviceCount:
setTimestamp:
_deviceCount
_timestamp
TQ,N,V_deviceCount
T@"NSDate",&,N,V_timestamp
preferencesEnabledBitsDidChange:
activeAccountIdentifierDidChange:
preferencesSharedUserIdentifierDidChange:
_updateAssistantIdentifierAndSharedUserIdentifier
_updateCurrentAccessoryInfo:
getCurrentAccessoryInfoWithCompletion:
reportIssueForType:subType:context:processIdentifier:walkboutStatus:
_localPeerInfo
_managedPeerInfoMatchingPeerInfo:
_localPeerData
_updateLocalPeerInfo:
fetchActiveAccount:
_remotePeerInfoForAssistantIdentifier:
_remotePeerInfoForIDSDeviceUniqueIdentifier:
_remotePeerInfoForHomeKitAccessoryIdentifier:
homeKitAccessoryIdentifier
_remotePeerInfoForRapportEffectiveIdentifier:
rapportEffectiveIdentifier
_managedPeerInfoForAssistantIdentifier:
_managedPeerInfoForRapportEffectiveIdentifier:
_managedPeerInfoForIDSDeviceUniqueIdentifier:
_managedPeerInfoForHomeKitAccessoryIdentifier:
_removeRemotePeerInfoWithRapportEffectiveIdentifier:
homeInfoManager:didUpdateCurrentAccessoryInfo:
assistantIdForDeviceWithIdsDeviceUniqueIdentifier:
_setAssistantId:forDeviceWithIdsDeviceUniqueIdentifier:
idsDeviceUniqueIdentifierForDeviceWithAssistantId:
removeListener:
reelectContextCollectorWithBestScore
getCapabilitiesForReachableDevicesWithCompletion:
getManagedLocalAndRemotePeerInfoWithCompletion:
_updateRemotePeerInfo:
_rapportLinkInstabilityPenalty
_listeners
_currentCollectorIDs
_isCollector
_currentStationaryScore
_stationaryScoreTimer
_rollingRSSI
_rollingRSSICount
_rapportInstabilityPenalty
_deviceCountTrend
_lastReelectionBasedOnScore
_assistantIdMapLock
_assistantIdsByDeviceIDSID
_peerInfoLock
_currentAccessoryInfo
_remotePeerInfoByRapportEffectiveIdentifier
_rapportEffectiveIdentifiersByIDSDeviceUniqueIdentifier
_rapportEffectiveIdentifiersByAssistantIdentifier
_rapportEffectiveIdentifiersByHomeKitAccessoryIdentifier
setIdsDeviceUniqueIdentifier:
setIsDeviceOwnedByCurrentUser:
localPeerIDSDeviceUniqueIdentifier
setIdsIdentifier:
setName:
setMeanPing:
setPrimarySubflowInterfaceName:
setSubflowSwitchCounts:
setConnectionMethod:
setConnectionDelay:
setTCPInfoMetricsByInterfaceName:
timeUntilOpen
timeUntilFirstByteRead
meanPing
primarySubflowInterfaceName
subflowSwitchCounts
tcpInfoMetricsByInterfaceName
connectionMethod
connectionEdgeID
connectionDelay
T@"SiriCoreConnectionMetrics",C,N,S_ad_setMetrics:
_ad_handleTimerRequestWithCompletionHandler:
createResponseWithTimer:
timerURLs
outstandingResponses
setOutstandingResponses:
responseType
setResponseType:
responses
setResponses:
timeoutTimer
setTimeoutTimer:
_responseType
_outstandingResponses
_responses
_timeoutTimer
T@"NSString",C,N,V_identifier
Tq,N,V_outstandingResponses
TS,N,V_responseType
T@"NSMutableDictionary",&,N,V_responses
T@"AFWatchdogTimer",&,N,V_timeoutTimer
peer
setPeer:
proto
setProto:
error
setError:
_peer
_proto
_error
T@"ADPeerInfo",&,N,V_peer
T@"PBCodable",&,N,V_proto
T@"NSError",&,N,V_error
initWithKeyOptions:valueOptions:capacity:
uniqueID
companionIdentifier
_companionIdentifierDidChangeNotification:
_airplayRouteDidChange:
_updateActiveAccountState
idsIdentifier
hasPrefix:
_sendProto:ofType:originalRequestId:toPeers:responseType:completion:
isLostModeActive
_destinationsForPeers:
_timedOutError
_handleMessageResponse:ofType:orError:fromID:handler:
initWithIDSIdentifer:productType:buildVersion:name:
_peers
_uniqueIdentifierForPeer:
deviceForFromID:
_stripFZIDPrefix
_peerInfoForIDSDeviceUniqueIdentifier:allowNonPeers:
initWithUniqueIdentifer:
_companionPeer
peers
_peerInfoForAssistantId:allowNonPeers:
_cachedSharedDataForUniqueId:
isActive
_updateAirPlayRouteIdentifierWithCompletion:
currentDevice
getRouteIdentifierWithCompletion:
_sendProto:ofType:toPeers:
_pointerToBlockMap
_setCachedSharedData:forUniqueId:
objectEnumerator
_sendProto:ofType:toPeers:responseType:completion:
_unexpectedMessageError
_startRemoteRequest:onPeers:completion:
startRemoteSerialzedCommandExecution:onPeer:allowsRelay:executionContext:completion:
firstRoutableInternetDestinationForSelf
activeAccount
setRemoteRequestObserver:withHandle:
setIdsFirstRoutableDestination:
_ad_performWithCloudService:fromPeer:completion:
initWithIDSIdentifer:
cancelIfNotAlreadyCanceled
removeObjectsForKeys:
startRemoteExecution:onPeer:allowsRelay:throughProxyDevice:executionContext:completion:
startRemoteRequest:onPeer:completion:
hasActiveAccount
uniqueIdentifierForPeer:
peerInfoForIDSDeviceUniqueIdentifier:allowNonPeers:
companionPeer
companionPeerUniqueIdentifier
peerInfoForAssistantId:allowNonPeers:
cachedSharedDataForUniqueId:
setSharedDataObserver:withHandle:
_notifyObserversOfSharedData:fromPeer:
getSharedDataFromPeers:completion:
setSharedDataRequestObserver:withHandler:
_notifyObserversOfSharedDataRequestFromPeer:completion:
_notifyObserversOfRequestInfo:fromPeer:completion:
_handleRemoteExecution:peer:completion:
_sharedDataObservers
_sharedDataRequestObservers
_remoteRequestObservers
_companionIdentifier
_airPlayRouteIdentifier
_airPlayRouteIdentifierNeedsUpdate
_deviceIdentifiers
_peerSharedData
_hasActiveAccount
ad_isUnreachableError
ad_isUnrecoverablePeerError
ad_isStricterUnreachableError
ad_isPeerRemoteError
_ad_alarmStoreErrorWithCode:
initWithCriteria:searchOptions:
criteria
searchOptions
_criteria
_searchOptions
isSleepAlarm
label
daysOfWeek
hourOfDay
minuteOfHour
matchesAlarm:
addAlarm:completionHandler:
deleteAlarmsWithIdentifiers:completionHandler:
updateAlarms:completionHandler:
fetchAlarmsMatchingAnyOfQueries:completionHandler:
fetchAlarmsMeetingCriteria:searchOptions:completionHandler:
fetchAlarmsWithIdentifiers:completionHandler:
dismissAlarmsWithURLs:completionHandler:
setMeteringEnabled:
updateMeters
averagePowerForChannel:
peakPowerForChannel:
willBeginAccessPower
getAveragePower:andPeakPower:
didEndAccessPower
initWithChannel:speechController:
_channel
initWithDomainName:
fileLoggingIsEnabled
setDateFormat:
_dateFormatter
limitedAudioLoggingEnabled
_nowString
fileSystemRepresentation
appendSpeechPacket:
containsString:
buffersFromSpeechLogAtURL:isNarrowBand:
beginNewSpeechLogWithFormat:
appendSpeechPackets:
cancelCurrentSpeechLog
endSpeechLog
_logQueue
_filePath
handshakeRequestWithCertificateData:error:
completeWithHandshakeResponse:error:
signData:error:
sessionState
strategyVersion
TQ,R,N
_nacContext
_sessionState
TQ,R,N,V_sessionState
_peerLocationConnection
navStatusChanged:
defaultService
_cancelLocationTimer
authorizationStatusForBundle:
locationServicesEnabled
accuracyAuthorization
coordinate
setPreciseLocationEnabled:
setPropertiesWithCLLocation:
desiredAccuracy
isLocationShiftRequiredForCoordinate:
_locationShifter
horizontalAccuracy
altitude
verticalAccuracy
initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:timestamp:
shiftCoordinate:accuracy:withCompletionHandler:mustGoToNetworkCallback:errorHandler:callbackQueue:
setStatus:
_generateResponseForGetRequestOriginCommand:withStatus:completion:
stopMonitoringSignificantLocationChanges
_triggerLocationABCForSubtype:
_cancelLocationSLATimer
_bestCachedLocation
_generateResponseForGetRequestOriginCommand:withUnshiftedLocation:completion:
_generateLocationTimedOutResponseForGetRequestOriginCommand:completion:
_clearCompletionState
_stopMonitoringLocation
setLastLocation:
_scheduleLocationSLATimer
desiredCLAccuracy
_startMonitoringLocationWithDesiredAccuracy:
searchTimeout
_scheduleLocationTimerWithTimeout:
_shouldUseOneshotLocationRequest
maxAge
_af_isOlderThanAge:
_af_isWithinAccuracy:
requestLocation
_processUpdatedLocation:
_requestLocationWithBestAccuracy
lastLocation
_shouldSendLocationUpdate:fromLocation:forCommand:
locationManager:wantsToSetRequestOrigin:
logEventWithType:contextProvider:contextProvidingQueue:
_generateLocationDeniedResponseForGetRequestOriginCommand:completion:
_generateLocationUnknownResponseForGetRequestOriginCommand:completion:
authorizationStatus
_locationServicesIsEnabled
_generateLocationDisabledResponseForGetRequestOriginCommand:completion:
_setAuthorizationStatusToAuthorizedAndEnabled
setAccessState:
latitude
longitude
initWithSetRequestOrigin:
_locationUpdateIsCapableOfSucceeding
ignoreLocationWiFiStatus
_generateLocationWiFiOffResponseForGetRequestOriginCommand:completion:
_preferredPlatformLocationAccuracy
_requestLocationForGetRequestOrigin:completion:
_startMonitoringLocationForGetRequestOrigin:completion:
newAssertionForBundle:withReason:
raise:format:
getLocationIsRestricted:
initWithSerialQueue:
updateWithLocation:locationStatus:
updateLocationSnapshotWithCompletion:
updateLocationForCommand:completion:
stopLocationUpdates
needsToSendLocation
setNeedsToSendLocation:
_externalQueue
_needsToSendLocation
_isNavigating
_internalQueue
_lastLocationAuthorizationStatus
_lastLocationServicesIsEnabled
_lastPreciseLocationIsEnabled
_haveLastAuthorizationAndEnabledValues
_requestOriginCommand
_locationTimerSource
_locationSLATimerSource
_lastLocation
_locationInUseAssertion
_locationInUseAssertionRefCount
_lastPeerLocation
_updateCompletion
_greenTeaLogger
T@"CLLocation",C,V_lastLocation
T@"<ADLocationManagerDelegate>",W,N,V_delegate
TB,N,V_needsToSendLocation
_af_age
setHorizontalAccuracy:
setVerticalAccuracy:
setLatitude:
setLongitude:
setAltitude:
course
setDirection:
speed
setSpeed:
setAge:
serializedBackingStore
setSerializedContextSnapshot:withMetadata:
historyConfiguration
keepsHistory
historyBufferSize
backingStore
buildDescription
setFromLocalDevice:
setDeviceInfo:
setPrivacyClass:
setContextSnapshot:withMetadata:
removeContextSnapshotForType:
removeHistoricalContextForType:
TB,D,N
T@"NSUUID",C,D,N
T@"AFPeerInfo",C,D,N
privacyClass
Tq,D,N
mutableCopyWithZone:
_initWithInstanceContext:rapportLink:queue:delegate:deviceCircleManager:
strongToWeakObjectsMapTable
_initializeBuiltInContextProviders
_localContextWithPrivacyClass:
_deviceContextToVendForPrivacyClass:
_pushContextToCollector:forReason:includingKeys:excludingMandatoryKeys:includingKeysInResponse:excludingMandatoryKeysInResponse:completion:
initWithDonationService:instanceContext:queue:
arrayWithObjects:
initWithDonationService:
_didUpdateContext
_pushContextToCollectorsForReason:completion:
allContextKeys
contextMetadataForKey:
expirationDate
initWithInstanceContext:rapportLink:queue:delegate:
_builtInProviders
_localContext
_redactedContextByPrivacyClass
_contextTransformersByType
refId
_ad_mediaRemoteOptions
setSuppressAudioInterruptionEndedNotifications:
targetQueue
logSiriPausedMedia
_ad_performAudioPausingCommand:mediaRemoteService:replyHandler:
positionInMilliseconds
_ad_performWithMediaRemoteService:replyHandler:
repeatMode
shuffleMode
adjustmentInMilliseconds
hashedRouteUIDs
handleFailedStartPlaybackWithDestination:completion:
initWithReason:
appId
targetAppId
host
prepareForStartPlaybackWithDestination:intent:completion:
scalingFactor
logSiriMediaVolumeAction:
actionType
volumeValue
acknowledgedExceedingVolumeLimit
_ad_volumeAction
volumeTracker
setDirtySiriOutputVolumeHostTime:
setListeningToItem:
source
setListeningToMusicApplication:
setHashedGroupID:
position
_ad_performNextItemWithTargetQueue:completion:
_ad_performPreviousItemWithTargetQueue:completion:
_ad_performSeekToBeginningWithTargetQueue:completion:
initWithErrorCode:
_buildCacheOfWhaServiceSupportedCommands
_commandsForDomain:
removeObjectsInArray:
encodedClassName
initWithQueue:volumeTracker:whaService:
_commandsToIgnore
_whaService
_whaServiceSupportedCommands
_volumeTracker
T@"<ADVolumeTracking>",R,N,V_volumeTracker
timeIntervalSinceReferenceDate
metricsContext
dataUsingEncoding:
JSONObjectWithData:options:error:
dataWithJSONObject:options:error:
setMetricsContext:
_beginSpeechRecognitionTransactionForReason:session:
_beginAudioFileIOTransactionForReason:session:
_addSession:
_startedOrStartingSession
_sessionWithUUID:
_endSpeechRecognitionTransactionForReason:session:
_endAudioFileIOTransactionForReason:session:
_removeSession:
_endSessionTransactionForReason:session:isSpeechTransaction:
startSessionForReason:languageCode:options:speechRequestOptions:
stopSessionForReason:
notifySpeechRecognitionTransactionStoppedForReason:sessionUUID:
notifyAudioFileIOTransactionStoppedForReason:sessionUUID:
_activeSessions
_activeSessionsByUUID
defaultProvider
getActiveEXPExperimentsFromProvider:environment:
emitActiveExperiments:
getActiveABExperimentsFromProvider:environment:
getAllEXPExperimentsFromProvider:cursor:environment:fromDate:
emitUpdatedExperiments:
addStatusUpdateHandlerForEnvironment:queue:block:
abExperimentFromExperimentAllocationStatus:
experimentId
treatmentId
enumerateActiveExperimentsForEnvironment:error:block:
expExperimentFromExperimentAllocationStatus:
allocationStatus
lastUpdatedAtInMs
enumerateExperimentStatusesForEnvironment:startingFromCursor:error:block:
setDeploymentId:
setExperimentId:
setTreatmentId:
treatmentAllocationStatusFromAllocationStatusType:
setAllocationStatus:
namespaces
setExperimentNamespace:
setLastUpdatedAtInMs:
setAllocations:
setAllocationSnapshot:
setAllocationChangelogSnapshot:
_accountDidChange:
_dispatchCallbackForProcessedData:error:completion:
_retrieveKeyAndSaltWithCompletion:
_dispatchCallbackForProcessedDataMap:errorMap:completion:
setInternalAuthAppleConnectServiceTicket:
setInternalAuthSessionToken:
internalAuthAppleConnectServiceTicket
internalAuthSessionToken
localCryptoKeyData
setLocalCryptoKeyData:
processData:usingProcedure:completion:
processDataMap:usingProcedure:completion:
setKeychainValue:forKey:accountIdentifier:completion:
internalAuthAppleConnectServiceTicket:
setInternalAuthAppleConnectServiceTicket:completion:
internalAuthSessionToken:
setInternalAuthSessionToken:completion:
_procedureQueue
_keychainQueue
_callbackQueue
_inMemorySalt
deviceIDPair
objectsPassingTest:
af_lenientMappedDictionary:
observationDate
enumerateObjectsWithOptions:usingBlock:
_initWithQueue:donationService:deviceCircleManager:
setEvent:
_getAggregatedProximityObservationsWithCompletion:
dateWithTimeIntervalSinceNow:
performProximityScan
_stopScanning
getDeviceProximityRelativeToLocalDeviceWithCompletion:
_proximityObservations
_timersByDeviceIDPair
_cachedAFProximityRelativeToLocalDevice
_localIsCollector
_localDeviceIDSIdentifier
_proximityScanningTimer
_lastProximityScan
_heardVoiceTriggerObserver
_voiceTriggerFirstPassObserver
_currentVoiceTriggerExpirationDate
localizedCaseInsensitiveCompare:
adpm_sortedKeyString
roomName
af_mappedArray:
setProximity:
enablesProximityTracking
discoveryOptions
transportOptions
initWithDiscoveryOptions:transportOptions:enablesProximityTracking:
_discoveryOptions
_transportOptions
_enablesProximityTracking
T@"ADRapportLinkDiscoveryOptions",R,C,N,V_discoveryOptions
T@"ADRapportLinkTransportOptions",R,C,N,V_transportOptions
Tq,R,N,V_enablesProximityTracking
setDiscoveryOptions:
setTransportOptions:
setEnablesProximityTracking:
encodeBool:forKey:
decodeBoolForKey:
_twentyFourHourTimeDisplay
_region
_countryCode
_preferredLanguage
T@"NSString",C,N,V_temperatureUnit
TB,N,V_twentyFourHourTimeDisplay
T@"NSString",C,N,V_region
T@"NSString",C,N,V_countryCode
T@"NSString",C,N,V_preferredLanguage
_getConfigurationsByIdentifier
_getContext
_getServerConfigurationInfosByIdentifier
_getExperimentStateForServerConfigurationInfo:
configurationIdentifier
didEnd
_serverConfigurationForServerConfigurationInfo:completion:
_logDidVendExperiment:fetchDetails:error:
experimentsByConfigurationIdentifier
_experimentForExperimentConfiguration:
initWithExperimentsByConfigurationIdentifier:
deploymentGroupIdentifier
configurationVersion
_buildConfigurationsByIdentifier
_buildServerConfigurationInfosByIdentifier
configurationForInvocationFeedback
controlGroup
_buildContext
_experimentIdentifierForConfigurationIdentifier:
_setExperimentIdentifier:forConfigurationIdentifier:
_createExperimentForExperimentConfiguration:experimentIdentifier:
_groupOverrideIdentifierForExperimentConfiguration:
experimentGroups
version
initWithConfigurationIdentifier:configurationVersion:deploymentGroupIdentifier:deploymentGroupProperties:deploymentReason:
_experimentOverrideForExperimentConfiguration:
_experimentGroupHashForExperimentConfiguration:experimentIdentifier:
allGroups
allocation
salt
experimentIdentifierForConfigurationIdentifier:
setExperimentIdentifier:forConfigurationIdentifier:
_fallbackConfigurationForEndedExperimentWithIdentifier:experimentState:
maxTimeToSync
lastSyncDate
_fetchCachedServerConfigurationForConfigurationInfo:
setLastSyncDate:
endingGroupIdentifier
_isEndingGroupIdentifier:validForConfiguration:
_setExperimentState:forServerConfigurationInfo:
_storeServerConfig:completion:
_remoteFetchConfigMetadataWithServerConfigurationInfo:completion:
initWithIdentifier:allocation:properties:
initWithType:identifier:version:controlGroup:experimentGroups:salt:
ephemeralSessionConfiguration
setTimeoutIntervalForResource:
setAllowsCellularAccess:
sessionWithConfiguration:
configurationURL
statusCode
localizedStringForStatusCode:
_resolveDataTaskForURLSession:URL:completion:
dataTaskWithURL:completionHandler:
writeToURL:error:
_fetchDictionaryWithFileURL:
getExperimentStateForConfigurationIdentifier:
setExperimentState:forConfigurationIdentifier:
configurations
_configurationsByIdentifier
_serverConfigurationInfoByIdentifier
_currentContext
setDeviceWasRedirectedToProduction:
_speechManager
preheatWithOptions:
_sessionManager
preheatSessions
_preheatAllServices
_deviceSyncCoordinator
_contextManager
initWithInstanceContext:deviceCircleManager:
initWithPlatform:
_flowServiceListener
_context_reset
_createRootExecutionContextForRequestID:
_removeHandledCommandIdsForRequestId:
_removePostCommandHandlingBlocksForRequestId:
_destroyRootExecutionContextForRequestID:
requestID
_rootExecutionContextForRequestID:
executionID
_remoteExecutionContextForExecutionID:
initWithRequestID:inputDeviceID:inputAssistantID:
turnIdentifier
_restrictedCommands
initWithExecutionID:requestID:turnId:originPeerInfo:currentHomeInfo:endpointInfo:instanceInfo:speechInfo:requestHandlingContextSnapshot:deviceRestrictions:userInfo:
initWithInfo:
currentHomeInfo
turnId
afPeerInfo
endpointInfo
speechInfo
requestHandlingContextSnapshot
deviceRestrictions
_powerAssertionManager
takePowerAssertionWithName:
releasePowerAssertionWithName:
_hasOutstandingRequestId:
_hasRootExecutionContextForRequestID:
_handledCommandIdsForRequestId:
initWithCommandType:requestTransformer:responseTransformer:requestHandler:
_registerDomainSignalServiceWithServiceManager:
_registerNanoServicesWithServiceManager:
recordingInfoProvider
initWithRecordingInfoProvider:instanceContext:
isSiriRequestDispatcherEnabled
initOnQueue:account:instanceContext:
_requestDelayManager
setInterceptor:
_awdSessionStart
initWithIdentifier:
_motionManager
startUpdatingMotionActivityForReason:completion:
stopUpdatingMotionActivityForReason:completion:
_awdSessionEnd
setCurrentRequest:
_cancelSessionManager
_sync_reset
setClientConfiguration:
setHasActiveRequest:
_setCallIsLikely:
_awdRequestStart
requestWillBeginWithInfo:fromOrigin:client:
dequeueBlocksWaitingForMyriadDecision
speechRequestOptions
isVoiceTrigger
ignoreMyriadEvents:
_deviceRouter
requestDidEndWithInfo:fromOrigin:client:
_metrics_recordNetworkSnapshotForEvent:completion:
_setSpeechCapturingContext:
_setCurrentRequest:
_setLastRequest:
_stopLanguageDetectionWaitTimerIfNeeded
_acousticId_clearPartialResultTimer
_replaceRequestDelegate:withInfo:andCompletion:
beginUpdatingAssistantData
_cancelCurrentRequestForReason:andError:
_clearRequestDelegateState
_serviceManager
serviceIdentifierForRequestDelegate:
_requestWillStartWithInfo:showNetworkActivityIndicator:
_currentRequest
requestFailedWithAssistantId:requestId:
_addNetworkActivityTracingForLabel:start:withCompletionReason:andError:
_replaceSpeechDelegateWhenReady:waitForRecordingToFinish:suppressAlert:withCompletion:
isStopped
_speechCapturingContext
adSpeechRecordingDidFail:context:
_clearSpeechDelegateState
isLocallyRecognizingInDictationMode
adSpeechRecognitionDidFail:sessionUUID:
adSpeechSessionEnded
_acousticId_speechCaptureCompleted
logRequestLaunchedApp
ad_languageModel
resetExternalResources
makeObjectsPerformSelector:
makeObjectsPerformSelector:withObject:
sendCommand:opportunistically:logEvent:
_sendCommandToServer:opportunistically:
_sendCommandToServer:opportunistically:completion:
_addCompletion:forCommand:forKey:
_addOutstandingRequestId:forReason:
origin
startUnderstandingOnServerRequestWithAssistantId:requestId:inputOrigin:
sendRawCommand:opportunistically:logEvent:
_sendRequestToServer:
_sendCommandToServer:
setRequestId:
endRetryableRequestForCommand:
adInvalidateCurrentUserActivity
setIsCarryDevice:
adTextToSpeechIsMuted
setTextToSpeechIsMuted:
_startServerRequestWithStartRequest:requestInfo:
_sendRetryableRequestToServer:
activationEvent
startLocalRequestWithAssistantId:requestId:inputOrigin:
isEyesFree
_bargeInModes
_approximatePreviousTTSInterval:
sendRequestContextWithAssistantId:requestId:audioSource:audioDestination:isEyesFree:isVoiceTriggerEnabled:isTextToSpeechEnabled:isTriggerlessFollowup:bargeInModes:approximatePreviousTTSInterval:deviceRestrictions:
clientBoundCommands
_handleGenericConcreteAceCommand:withDelegate:interruptOutstandingRequest:reply:
_ad_speechRequestOptions
_reallyHandleNewStartLocalRequest:
_replaceSpeechDelegateWhenReady:suppressAlert:withCompletion:
_resultObjectCache
commandsForReply:toCommand:missingReferences:
_handleCommandAndClientReply:executionContext:commandCompletion:
initWithMissingReferences:forRequestId:
_handleNextCallbacksForReply:forCommand:forRequestId:withExecutionContext:
setFulfillmentBlock:
addMissingReferencesContext:
setObjectIdentifiers:
hasBeenFulfilled
_handleCommand:executionContext:completion:
logRequestCancelAfterSeconds:
setClientCancellationCode:
requestWasCancelledWithInfo:origin:client:
clearResultObjectsForRequestId:
_requestDidEnd
_removeOutstandingRequestId:forReason:
ad_parentRequest
_cancelCrossDeviceRequestOperationsForLocalRequestWithId:
_executionDevicesForLocalRequestWithId:
_removeExecutionDevicesForLocalRequestWithId:
_executionContextMatchingExecutionInfo:fallbackRequestID:
_remoteExecute_remoteDeviceExecuteCommand:onPeer:allowsRelay:throughProxyDevice:executionContext:completion:
creationDate
setCancelAssociatedRequests:
requestId
_sync_isSyncing
_shutdownAfterDelay:
_hasActiveClientOrSyncingOrInCall
sendMetricsToServerWithTimeout:requiresUnlimitedPower:requiresActiveSession:purgesOversizedStorage:ignoresMetricsSenderDisabledSetting:scheduledActivity:completion:
_removeAllSpeechCapturingContexts
_removeAllHandledCommandIds
_removeAllPostCommandHandlingBlocks
_invokeAllCompletionsWithError:
sharedNetworkActivityTracing
networkActivityTracingCancel
_sync_setSyncVerificationNeededAndFullReportNeeded:shouldPostNotification:
setRestrictions:
_headphonesAnnouncementRequestCapabilityManager
setRestrictionsToAdd:
adviseSessionArbiterToContinueWithPreviousWinner:
networkActivityStart:activate:
networkActivityStop:withReason:andError:
inputDeviceID
inputAssistantID
isFromRemote
_sync_hasCommandForRefId:
_acousticId_hasCommandForRefId:
_isRelevantCancellationCommand:
initWithDictionary:context:
groupIdentifier
T@"NSString",C,N
requiresResponse
setAppId:
callbacks
setCallbacks:
T@"NSArray",C,N
ad_requiresResponse
_invokeCompletionForCommand:
_shouldIgnoreCommand:executionContext:
_handleIgnoredCommand:executionContext:completion:
_preheatCallbacksForCommand:
_handleCommandResponse:error:forCommand:executionContext:completion:
delegateDidHandleCommand:
ad_getNetworkActivityTracingLabel
_handleServiceCommand:afterMyriadDecision:executionContext:completion:
ad_willHaveReply
_addHandledCommandId:forRequestId:
_dispatchAndRemovePostCommandHandlingBlocksForCommandId:requestId:
ad_shouldBeHandledByClientAsResponseToCommand:fromPeer:
_performCallbacksForCommand:reply:executionContext:error:
ad_hasCallbacks
_callIsLikely
callIsPossibleForRequestId:
ad_shouldIgnoreCallbacksOnReply
_firstChanceServiceForCommand:
ad_shouldLogToMetrics
resultCallbackCode
waitForMyriadDecisionForReason:withCompletion:
aceObjectWithGenericCommand:
startTestSpeechRequestWithAssistantId:requestId:enableASR:inputOrigin:location:jitContext:overrideModelPath:
eyesFree
postTestResultCandidateWithAssistantId:requestId:rcId:recognitionSausage:
postTestResultSelectedWithAssistantId:requestId:rcId:
_receivedLocation:locationStatus:
updateForCallIsLikelyDueToRequest:
updateForCallState:
_cancelCallKeepAlive
_scheduleCallKeepAlive
_startObservingCallState
_setIsInCall:
_setHasIncomingCall:
_shutdownSessionWhenIdle
_sync_continueIfConditionsMet
isDelaying
_refIdIsSpeechStart:
_endSpeechRequestForCommand:withError:suppressAlert:secureOfflineOnlyDictation:
_removeFirstChanceServiceForAceId:
_completeRequestForCurrentDelegate:error:
requestCompletedWithAssistantId:requestId:
setCompletionStatus:
sessionRequestIdForRefId:
addResultObjects:sessionRequestId:
_handleBareRequestCompleted:
ad_error
_acousticId_commandFailed:
_sync_commandFailed:
_sync_commandIgnored:
_handleSendCommands:forRequestDelegate:completion:
commands
_startNonSpeechRequest:forDelegate:withInfo:options:suppressAlert:completion:
holdToTalkThresholdInMilliseconds
ignoreServerManualEndpointingThreshold
setManualEndpointingThreshold:
getInfoForHandoffPayload:userInfo:wepageURL:
adSetUserActivityInfo:webpageURL:
_startLocalRequest:withRequestInfo:forDelegate:suppressCancelationAlertIfCapturingSpeech:completion:
commandReferences
setTurnIdentifier:
notificationText
setHandoffNotification:
setHandoffRequiresUserInteraction:
handoffPayload
_ad_setHandoffPayload:
targetDevice
startRemoteRequest:onTargetDevice:completion:
textToSpeechIsMuted
adServerRequestsTTSStateUnmuted:
commandAceIds
_addPostCommandHandlingBlock:forCommandId:requestId:
startRequest
cancelAssociatedRequests
cancelCurrentRequest
_clearContext
deactivateForReason:options:context:completion:
_hasRemoteExecutionContextForRequestID:
initialInterstitialDelay
initialInterstitialDelayForCarPlay
initialInterstitialDelayForVoiceTriggerOneShotWithoutAudioDucking
hasAudioSessionActivationDelay
audioSessionActivationDelay
setServerAudioSessionActivationDelay:
mediaPlaybackVolumeThresholdForAudioSessionActivationDelay
setServerMediaPlaybackVolumeThresholdForAudioSessionActivationDelay:
audioSessionActivationDelayAboveMediaPlaybackVolumeThreshold
setServerAudioSessionActivationDelayAboveMediaPlaybackVolumeThreshold:
myriadServerProvisioning
deviceClass
setMyriadDeviceClass:
deviceAdjustment
setMyriadDeviceAdjust:
deviceDelay
setMyriadDeviceDelay:
deviceTrumpDelay
setMyriadDeviceTrumpDelay:
setMyriadServerHasProvisioned:
deviceVTEndtimeDistanceThreshold
setMyriadDeviceVTEndTimeDistanceThreshold:
publishState:
sendCommandToLocalSession:
processedAudioDuration
resultId
_acceptResultCandidate:featuresToLog:completion:
setProcessedAudioDuration:
setResultId:
updateSelectedResultCandidateId:
setSpeechRecognizedContext:
recordUserAudio
resultCandidateId
selectedSharedUserId
updateAccessToRecordedAudioForVoiceIdentificationTraining:forResultCandidateId:sharedUserId:
eager
_languageModelForSpeechRequest:
_setSpeechRecognizedContext:
setSpeechRecognizedCommand:
setSpeechInfo:
updateInfoUsingBlock:
_cancelLocalRecognitionIfRequired
adSpeechRecognized:usingSpeechModel:sessionUUID:
_handleSpeechRecognizedWithDelegateBlock:
adSpeechMultilingualSpeechRecognized:sessionUUID:
_startLanguageDetectionWaitTimer
speechRecognizedByLanguage
adPronunciationRecognized:usingSpeechModel:sessionUUID:
updateOptionsAfterRecognitionForElapsedTime:isFinal:
activationDeviceIdentifier
setActivationDeviceIdentifier:
setIsOnPhoneCall:
stopSpeechCaptureWithOptions:
_dictationSessionDidComplete
logSpeechRecognized
af_bestTextInterpretation
tokens
endTime
longLongValue
adSpeechRecognizedPartialResult:
_awdRecordTimeToFirstWord
_handlePartialSpeechRecognitionForElapsedTime:WithDelegateBlock:
adSpeechRecognizedStructuredResult:usingSpeechModel:sessionUUID:
recognition
reasonDescription
adSpeechDidFindVoiceSearchPartialResult:
adSpeechDidFindVoiceSearchFinalResult:
_handleSuspendClientEndpointer:
audioProcessedMs
suspendDurationMs
endpointConfirmationTimestamp
setConfirmed:
setEndpointConfirmationTimestamp:
ad_csEndpointFeatures
threshold
setEndpointerThreshold:
delay
setEndpointerDelayedTrigger:
adWaitingForAudioFile
adSpeechRecordingDidEndWithContext:
sessionUUID
adSpeechLocalRecognitionDidSucceedWithSessionUUID:
_context_acknowledgeBulletinForObject:
locationSnapshot
ace_setRequestOrigin
locationMetadata
deliveryDate
_diagnosticsManager
updateLatencyDiagnosticConfiguration:completion:
subType
subTypeContext
eventName
eventOperation
eventValue
numberWithFloat:
setVolumeLevel:
smartSiriVolumeContextAwareEnabled
sharedController
getVolumeForTTSType:
_getSiriOutputVolumeForAudioRoute:completion:
setSmartSiriVolumePercentage:
setSmartSiriVolumeDirection:
setPermanentVolumeOffsetWithDirection:
_setSiriOutputVolume:forAudioRoute:operationType:completion:
isOnDeviceSearch
saOnDeviceNotificationObject
setNotifications:
supportsSpokenNotifications
afterNotificationId
_completeNotificationSearch:bulletins:completion:
fetchUnreadNotificationsFromThreadAfterNotificationWithID:completion:
sourceAppId
fetchBulletinsAfterBulletinWithID:completion:
bundleForClass:
localizedStringForKey:table:bundle:languageCode:
_postPersonalDomainActivityNotificationWithBody:command:executionContext:completion:
notificationBody
activityNotificationsEnabledForPersonalRequests
originatingDeviceName
setBody:
setShouldSuppressDefaultAction:
setCategoryIdentifier:
setHeader:
requestWithIdentifier:content:trigger:
_postUpdatePersonalRequestSettingsNotification:forLocalizationKey:executionContext:completion:
setHasDefaultAction:
setDefaultActionURL:
speechRequestId
audioOutputType
startTime
longValue
setSpeechDataUrl:
dataWithContentsOfURL:
setSpeechData:
speechDataUrl
speechData
_trimRecordedAudioWithIdentifier:offset:duration:outputFileType:completion:
writeToURL:options:error:
multilingualTimeoutInMillis
multilingualDisabled
isLanguageDetectorEnabledByServer
adSpeechLanguageDetectorFailedWithError:
dictationSessionDidComplete
cancelLocalRecognitionIfActive
dataDetectorWithTypes:error:
detectionTargets
setDetectionTarget:
range
setLocation:
resultType
setDataDetectionType:
enumerateMatchesInString:options:range:usingBlock:
setMatches:
setResults:
_handleClientReply:error:forSessionCommand:
commandRelayProxyIdentifier
contextIdentifier
_logCrossDeviceCommandEndedMetricsForCommand:targetProductType:targetDeviceID:targetDeviceContextIdentifier:targetProximity:coreAnalyticsEvent:response:error:
performBlock:
sharedLoggingService
logToCoreAnalyticsCrossDeviceRequestEvent:
ad_sendReplyEvenIfCallbacksExist
_sendCommandFailedForCommand:error:
_sendCommandFailedForCommand:reason:
hasResultObjectsForRequestId:
hasMissingRefContextsForId:
ad_isInAssistantErrorDomain
_acousticId_sessionFailed
_shouldRetryForError:
resetRetryManager
cancelSessions
_sessionDidFailWithError:
startRetry
isLocallyRecognizing
_metrics_destroyAllMetricsIfNeeded
_sync_assistantLoadedSyncRequest:
adSpeechRecognitionWillBeginRecognitionUpdateForTask:
codec
_sendStartSpeechCommandWithSpeechManager:info:context:
_sendContextAndRestrictionsForSpeechRequestWithInfo:
isDictation
dictationOptions
transcriptionMode
dictationLanguages
ad_startSpeechDictationWithAFDictationOptions:
setLanguages:
setApplicationName:
samplingInfo
setSelectedText:
applicationVersion
objectForInfoDictionaryKey:
setApplicationVersion:
interactionId
setInteractionId:
setTokenOffset:
setDomainObjectPropertyIdentifier:
orthography
setOrthography:
setLanguage:
ad_setParentRequest:
serverCommandId
setStructuredDictationType:
setDictationOptions:
setBargeInModes:
_startServerRequestWithSpeechRequest:recordingContext:recordingInfo:
ad_setAFSpeechRequestOptions:
ad_setCSSiriRecordingInfo:
motionActivity
setMotionActivity:
motionConfidence
setMotionConfidence:
audioSource
isTest
testRequestOptions
jitContext
overrideModelPath
startSpeechRequestWithAssistantId:requestId:inputOrigin:location:
speechEvent
audioDestination
updateStartSpeechId:
isDriving
setMultilingualDisabled:
setMultilingualTimeoutInMillis:
_saSetMultilingualDictationConfig:completion:
_sendCommandToServer:completion:
setEARLanguageDetectorSpeechRequestId:
_sendEnableServerEndpointerCommandWithRefID:
_sendLocationIfNeededForRequest
_sendGizmoSharedDataIfNeeded
sendGizmoData
releaseStoredContextCommandsAndSendCommands:
_context_updateContext
_sendRestrictionsInPreparationForRequest
adSpeechRecordingWillBeginWithInputAudioPowerXPCWrapper:context:
_awdRecordRecordingWillStart:
route
audioSessionID
deviceWithRecordingInfo:
adSpeechRecordingDidBeginOnAVRecordRoute:audioSessionID:bluetoothDevice:sessionRequestUUID:dictationOptions:context:
isFingerprintOnly
isSecureOfflineOnly
ad_updateWithRecordingInfo:speechRequestOptions:clientConfiguration:
ad_isDifferentFromStartSpeech:
isEndAlertInfo
audioSessionSetActiveEndHostTime
firstBufferHostTime
setPreTriggerToDuckingEndDuration:
setDuckingEventSyncDelay:
isDucking
triggeredTwoShotBorealis
estimatedSpeechEndHostTime
adSpeechRecordingDidChangeAVRecordRoute:bluetoothDevice:isDucking:isTwoShot:speechEndHostTime:context:
wantsRecordedAudioBufferLogs
usePrelisteningMode
setPackets:
setPacketNumber:
_sendSessionObject:opportunistically:
_acousticId_handleFingerprint:duration:
_acousticId_musicWasDetected
getDebugVoiceIdScores
_handleConfidenceScores:classification:classifiedUser:unknownUserScore:duration:version:thresholdingType:assetVersion:
setPacketCount:
ad_setAFEndpointMode:
ad_setCSEndpointerMetrics:
packetCount
totalAudioRecorded
_speechCaptureCompleted
adSpeechRecordingDidCancelWithContext:
_sendCancelSpeechForCommand:
adAudioFileFinishedWriting:error:context:
adSpeechDidBeginLocalRecognitionWithModelInfo:sessionUUID:
_metrics_markLocalSpeechStartedWithContext:
secureOfflineOnly
forceOfflineRecognition
siriDataSharingOptInStatus
_metrics_markLocalPartialSpeechRecognition
adSpeechRecordingDidRecognizeTokens:sessionUUID:
_metrics_markLocalEagerRecognitionCandidate:
aceRecognition
setRawRecognition:
phrases
utterances
detectUtterances
logLocalRecognitionWonForLanguage:
_handleLocalSpeechRecognitionForOfflineSupport:logText:
adSpeechRecordingDidRecognizePhrases:utterances:sessionUUID:refId:
setRecognition:
setSessionId:
_metrics_logSpeechRecognized:resultId:
interactionIdentifier
_metrics_markLocalSpeechPackage:interactionId:optedIn:
dictionaryWithDictionary:
_metrics_markLocalSpeechCompletedWithStatistics:
adSpeechRecordingDidDetectStartPointWithContext:
setEndpointTimestamp:
setLanguageDetected:
setConfidenceScoresByLanguage:
adSpeechRecordingDidDetectLanguage:confidenceScores:isConfident:
adSpeechRecordingPerformTwoShotPromptWithType:context:completion:
setTextToSpeechEnabled:
setEyesFree:
setInputOrigin:
setInteractionType:
setCategoryStopped:
alarmID
dismissAlarmWithIdentifier:
timerID
dismissTimerWithIdentifier:
_handleQuickStopCommandRoutedFromRemote:completion:
_directInvocationContextForSpeechRequestOptions:textToSpeechEnabled:
quickStopDirectInvocationPayload
runSiriKitExecutorCommandWithContext:payload:
_storeExtractedSpeechLocally:
adAudioSessionWillBecomeActive:
adAudioSessionDidBecomeActive:
audioSessionDidEnd
setProcessedAudioDurationMilliseconds:
setThresholdType:
setUserIdentityClassification:
setClassifiedUser:
getClassifiedUser
getUserIdentityClassification
setScores:
setScoringSchemeVersion:
adSpeechRecordingWillStopWithSignpostID:
views
dialogIdentifier
notificationType
setPresentedUIResponse:
languageDetectionUserContext
languageCodeOverride
getDictationLanguagesForSupportedLocales:error:
setLanguageDetectionUserContext:
preheatAndMakeQuiet:
prewarmDeviceWithIdentifier:
options
prepareAudioSystemWithContext:completion:
endSession:completion:
forceAudioSessionInactiveWithOptions:completion:
_setLanguageCode:outputVoice:isDefaultValue:
languageCodeWithFallback:
outputVoiceWithFallback:
isUsingDefaultLanguageSettings
setIsUsingDefaultLanguageSettings:
languageCodeWasChangedTo:
isValidForSiriSessionLanguage:
isThemisABEnabled
voiceSimilarToVoice:inSiriSessionLanguage:
voiceInfoForLanguageCode:
initWithLanguageCode:
_outputVoice_setOutputVoice:
isDeviceInStarkMode
_setStarkRestriction:
isDeviceInCarDNDMode
_setCarDNDRestriction:
isDeviceWatchAuthenticated
_setWatchAuthenticated:
_reallyEndSessionForDelegate:
setAdSpeechSessionEnded:
_replaceRequestDelegate:
locationStatus
remoteRequestInfo
_ad_requestCommandWithRequestHelper:
text
adStartUIRequestWithText:completion:
_ad_localRequestCommandWithRequestHelper:
handoffURLString
initWithString:
_openURL:completion:
setRemoteRequestInfo:
_reallyHandleNewStartRequest:info:
_lastRequest
notifyState
audioFileURL
_forceAudioSessionActiveWithContext:completion:
_startSpeechRequestWithURL:isNarrowBand:withDelegate:completion:
activationEventMachAbsoluteTime
activationEventTime
initWithTimestamp:
bargeInOptions
setBargeInOptions:
setIsMediaPlaying:
_acousticId_reset
cancelSpeechProfileUpdate
startSpeechCaptureForRequestWithOptions:sessionUUID:language:
audioFileType
_startSpeechRequestWithDelegate:withOptions:sessionUUID:completion:
_acousticId_startSessionWithContext:
startAcousticIDCaptureWithOptions:sessionUUID:
startSpeechCaptureWithURL:isNarrowBand:isDictation:sessionUUID:
_getDictationLanguages:options:speechOptions:delegate:completion:
dictationInputOrigin
setDictationInputOrigin:
applicationDisplayName
setApplicationDisplayName:
setApplicationBundleIdentifier:
_context_setSTApplicationContext:
setInitialDictationLanguage:
setPrimaryDictationLanguage:
setDictationLanguages:
startSpeechCaptureForDictationWithOptions:sessionUUID:secureOfflineOnly:
_startDictationWithLanguageCode:options:speechOptions:sessionUUID:delegate:completion:
startRecordedDictationCaptureWithSessionUUID:narrowband:secureOfflineOnly:
addRecordedDictationAudioSampleData:
_sendRollbackCommandForCommand:
_updateSpeechOptions:forDelegate:allowUpdateInSpeechCompletion:
endpointerOperationMode
setEndpointerOperationMode:
_sendWillStopRecordingForCommand:
ad_setAFSpeechCorrectionInfo:
ad_setAFCorrectionContext:
_startNonSpeechRequest:forDelegate:
_handleServiceCommand:executionContext:completion:
handleCommand:
initWithRequestDelegate:
_setFirstChanceService:forAceId:
acquireAssertionForReason:
relinquishAssertion:
barrier:
_areSiriUODAssetsAvailable:
assetsAvailableStatusForLanguage:
_getAssetStatusForLanguage:completionHandler:
resetWinningState
resetSessionsIfRequiredBasedOnAssetStatus:
_context_clearContextWithClearSiriKitContext:
startSessionWithAssistantId:languageCode:understandingOnDevice:
clearDomainObjects
locales
objectsForIds:missingReferences:
objects
accountIdentifiers
accountForIdentifier:
removeAndSave
setActiveAccountIdentifier:
_clearAccount
updateSharedDataFromCompanion
unregisterChangeHistory
needsDestruction
setNeedsDestruction:
save
deleteAllUserVocabularyFromAllAppsAsync
disableDESWithCompletion:
_metrics_destroyAllMetrics
resetSessionsAndMakeQuiet:
refreshValidationData
validationExpiration
_remoteRequestHelper
activateWithRequestInfo:context:completion:
handoffRequiresUserInteraction
userNotificationRequestForRemoteRequest
actionIdentifier
postNotificationRequest:options:responseHandler:
handleIntent:inBackgroundAppWithBundleId:reply:
adRequestRequestedOpenURL:completion:
_remoteSpeechRequestHelper
setSpeechRequestOptions:withCompletion:
currentToken
_domainObjectCache
_sync_syncAnchorKeys:forceReset:reasons:forSyncPromise:
_sync_setSyncDelegate:
_preheatWithStyle:forOptions:completion:
_forceAudioSessionInactiveWithOptions:completion:
onDemandDownloadForLanguageCode:withProgress:withCompletion:
_setAssistantIsEnabledLocal:
setAuthorizationStatus:forBundle:
setAuthorizationStatusByType:forBundle:
_setDictationIsEnabledLocal:
_setLanguageCode:outputVoice:isDefaultValue:withCompletion:
bestSupportedLanguageCodeForLanguageCode:
_clearQueuedLanguageCode
_clearQueuedOutputVoice
_languageCodeWithFallback:
_setLanguageCodeIfNeeded
setOutputVoice:withCompletion:
_processQueuedLanguageCode
_setLanguageCode:outputVoice:
_processQueuedLanguageCodeAndOutputVoice
_processQueuedOutputVoice
_setLockState:showingLockScreen:
_setConfiguration:forClient:
_endSessionForDelegate:
_startRequest:withDelegate:
_handleExternalActivationRequest:completion:
_handleRemoteSpeechRequest:completion:
_startSpeechRequestWithDelegate:withOptions:sessionUUID:
_startRecordingForPendingSpeechRequestForDelegate:withOptions:sessionUUID:completion:
getSpeechRecorderVTSatScore:
_startSpeechPronunciationRequestWithDelegate:withOptions:pronunciationContext:
_startAcousticIDRequestWithDelegate:withOptions:context:
_cancelRequestForDelegate:reason:error:
_rollbackRequestForDelegate:
_startRecordingForPendingDictationWithLanguageCode:options:speechOptions:sessionUUID:delegate:completion:
_startDictationWithLanguageCode:options:speechOptions:sessionUUID:delegate:
_startRecordedDictationWithLanguage:options:sessionUUID:narrowband:delegate:
_addRecordedSpeechSampleData:delegate:
_startDictationWithURL:isNarrowBand:language:options:sessionUUID:delegate:
_metrics_sendEngagementFeedback:voiceQueryIdentifier:
_removeDelegate:
_stopSpeechWithOptions:forDelegate:
_cancelSpeechForDelegate:
_updateSpeechOptions:forDelegate:
adRequestDidHandleFailedStartPlayback:
suppressAudioInterruptionEndedNotificationsAndEndSessionIfIdle:
adRequestWillProcessStartPlayback:intent:completion:
_sendSpeechCorrectionInfo:forCorrectionContext:
_sendSpeechCorrectionInfo:interactionIdentifier:
_handleGenericAceCommand:withDelegate:interruptOutstandingRequest:reply:
_context_rollbackClearContext
_context_willSetApplicationContextWithRefId:
_context_setApplicationContext:
_context_fetchAppicationContextForApplicationInfo:supplementalContext:refID:
_context_setOverriddenApplicationContext:withContext:
_context_setApplicationContextForApplicationInfos:withRefId:
_context_setAlertContextDirty
_prepareForPhoneCall
_telephonyRequestCompleted
_requestBarrier:
_metrics_sendUsageHeartbeatMetricsWithSiriEnabled:onLockscreen:dictationEnabled:voiceTriggerEnabled:starkHasBeenActiveWithin24Hours:raiseToSpeakEnabled:raiseToSpeakAssetVersion:activeAppleAudioDevices:spokenNotificationsEnabled:announceNotificationsEnabledOnHeadphones:carplayAnnounceEnablementType:isAnnounceNotificationsMutedForCarPlay:shouldSkipTriggerlessReplyConfirmation:spokenNotificationsProxCardSeen:spokenNotificationsControlCenterModuleEnabled:spokenNotificationsWhitelistSettings:announceCallsEnabled:preciseLocationEnabled:adaptiveSiriVolumeEnabled:adaptiveSiriVolumePermanentOffsetEnabled:adaptiveSiriVolumePermanentOffsetFactor:adaptiveSiriVolumeMostRecentIntent:
checkForMetricsUploadProblem
metricsSenderDisabled
_metrics_sendMetricsToServerUntilLimit:requiresUnlimitedPower:requiresActiveSession:purgesOversizedStorage:scheduledActivity:completion:
_fetchSupportedLanguagesWithCompletion:
fetchSupportedLanguagesWithCompletion:
_accounts
_deleteAccountWithIdentifier:
_activeAccountIdentifier
_setActiveAccountIdentifier:
_destroyActiveAccount
_refreshAssistantValidation
_rescheduleValidationRefresh
_managedStoreObjectForKey:
_setManagedStoreObject:forKey:
_context_fetchApplicationContextForApplicationInfos:completion:
_setUIService:
_startUpdatingMotionActivity
setHasClient:
myriadMonitorTimeOutInterval
startMonitoringWithTimeoutInterval:instanceContext:
_stopUpdatingMotionActivity
_resetServices
clearResultObjectsForAllRequestIdsExcept:
_sync_syncIfNeeded
stopMonitoring
_cancelCrossDeviceRequestOperationsForRemoteRequest
_clearAllExecutionDevices
adRequestRequestedOpenApplicationWithBundleID:URL:completion:
adRequestRequestedDismissAssistant
adWillProcessAppLaunchWithBundleIdentifier:
adFailedToLaunchAppWithBundleIdentifier:
areAnnouncementRequestsPermittedByPresentationWhileActive
handleCommand:withExecutionContextMatchingInfo:completion:
getOfflineDictationStatusIgnoringCache:completion:
_stopObservingCallStateWithCompletion:
cancelSynchronously
_getDeferredObjectsWithIdentifiers:completion:
_handleAceCommand:afterCurrentRequest:waitForResponse:withDelegate:completion:
updateSpeechSynthesisRecord:
startDelayingWithType:success:
setTextRequest:
voiceTriggerEventInfo
setVoiceTriggerEventInfo:
bargeInModes
durationSincePreviousTTSStart
setDurationSincePreviousTTSStart:
durationSincePreviousTTSFinish
setDurationSincePreviousTTSFinish:
setInteractionIdToBeCorrected:
utterance
setUtteranceToBeCorrected:
setTurnId:
_startServerRequestWithStartRequest:
startUnderstandingOnServerTextRequestWithAssistantId:requestId:inputOrigin:utterance:
_sendRequestContextDataWithRequestId:isTriggerlessFollowup:
requestPath
_signalUSTTestRequestWithStartRequest:requestInfo:
directAction
requestExecutionParameters
startDirectActionRequestWithAssistantId:requestId:inputOrigin:directAction:requestExecutionParameters:
previousUtterance
startCorrectionSpeechRequestWithAssistantId:requestId:inputOrigin:utterance:previousUtterance:
startTextRequestWithAssistantId:requestId:inputOrigin:utterance:
volumeServiceProvider
getSiriOutputVolumeForAudioRoute:completion:
getVolumeServiceUsingBlock:
setSiriOutputVolume:forAudioRoute:operationType:completion:
_accessRecordedAudioWithIdentifier:completion:
_speechCapturingContextForSessionUUID:
acquireRecordedAudioWithHandler:
resignCurrent
becomeCurrent
_adviseSessionArbiterToContinueWithPreviousWinner:
getInfoWithCompletion:
speechSynthesisRecord
beginTimestamp
endTimestamp
numberWithLongLong:
initWithStartDate:duration:
sharedQueue
assistantSessionManager:receivedCommand:
assistantSessionManager:receivedError:isRetryableError:
assistantSessionManager:shouldLogVisibleRequestFailureForError:
assistantSessionManagerSessionConnectionDidReset:
assistantSessionManagerSessionRemoteConnectionDidReset:
assistantSessionManagerShouldAttemptRetry:
assistantSessionManagerCommandsToRestoreStateOnNewConnection:
assistantSessionManager:didChangeRequestIdFrom:toId:
assistantSessionManagerDidCreateAssistant:
assistantSessionManagerDidDestroyAssistant:
assistantSessionManager:didLoadAssistantSyncRequested:
assistantSessionManager:willRetryOnError:
assistantSessionManager:didObserverIntermediateError:
assistantSessionManagerRetryingRequestOnRemoteSession:
assistantSessionManagerRetryingRequestOnLocalSession:
assistantSessionManagerRequestsObservingCallState:
speechManager:preheatWithRecordingInfo:context:
speechManager:willStartRecordingAtTimestamp:isFromFile:inputAudioPowerWrapper:context:
speechManager:didStartRecordingWithInfo:context:
speechManager:didUpdateRecordingWithInfo:context:
speechManager:capturedPackets:atTimestamp:totalCount:context:
speechManager:capturedFingerprint:duration:
speechManagerDidDetectMusic:
speechManagerDidDelayEndpointForMusic:
speechManager:didUpdateInputAveragePower:peakPower:
speechManager:didUpdateOutputAveragePower:peakPower:
speechManager:didReceiveLastAudioBufferWithEndpointMode:totalPacketCount:endpointerMetrics:context:
speechManager:didFinishWithCapturingMode:context:
speechManager:didCancelWithContext:
speechManager:didFailWithError:context:
speechManager:didFinishWritingAudioFile:error:context:
speechManager:didBeginLocalRecognitionWithContext:sessionUUID:
speechManager:didRecognizeTokens:sessionUUID:
speechManager:didRecognizeRawEagerRecognitionCandidate:sessionUUID:
speechManager:didRecognizePackage:sessionUUID:
speechManager:didProduceLocalLoggablePackage:sessionUUID:
speechManager:recognitionUpdateWillBeginForTask:
speechManager:recognitionDidCompleteWithError:secureOfflineOnlyRecognition:sessionUUID:statistics:
speechManager:didDetectStartpointAtTime:context:
speechManager:didDetectEndpointAtTime:context:
speechManager:didDetectLanguage:confidenceScores:isConfident:
speechManager:languageDetectorDidFail:
speechManager:performTwoShotPromptWithType:context:completion:
speechManager:didRequestQuickStopWithContext:
speechManager:didRequestShutdownUIWithContext:
speechManager:didChangeRecordingState:
speechManager:audioSessionWillBecomeActive:
speechManager:audioSessionDidBecomeActive:
speechManager:didReceiveConfidenceScores:classification:classifiedUser:unknownUserScore:duration:version:thresholdingType:assetVersion:
speechManager:willStopRecordingWithSignpostID:
UIService:executeHandler:forCommand:
UIService:didPresentUIResponseForCommand:withExecutionInfo:
_hasOutstandingRequests
_hasRemoteExecutionContextForExecutionID:
_beginRemoteExecutionContextForCommand:fromPeer:withRemoteExecutionInfo:
_endRemoteExecutionContext:
_addExecutionDevice:forCommandExecutionContext:
_hasCompletionForCommandId:
_didLaunchAppForRequestWithIdentifier:
_fetchStarkDeviceLockedStateWithCompletion:
setSyncVerificationNeededAndFullReportNeeded:shouldPostNotification:
postTestResultCandidateWithRcId:recognitionSausage:
postTestResultSelectedWithRcId:
recievedLocation:locationStatus:
startObservingCallState
_isRequestDelaying
fetchLastLocationWithCompletion:
resumeInterruptedAudioPlaybackIfNeeded
_setIsTimeoutSuspended:
_prepareForAppLaunchForRequest:
_firstChanceServiceChangeIdFrom:to:
areSiriUODAssetsAvailable:
getAssetStatusForLanguage:completionHandler:
_handleIntent:inBackgroundAppWithBundleId:reply:
setSyncDelegate:
startCloudKitSyncWeeklyForActivity:
forceAudioSessionActiveWithContext:completion:
_downloadMorphunAssets:
setAssistantEnabled:
setLanguageCode:withCompletion:
setLanguageCode:outputVoice:withCompletion:
setQueuedLanguageCode:
setQueuedLanguageCode:andQueuedOutputVoice:
setQueuedOutputVoice:
setLockState:showingLockScreen:
setWatchAuthenticated:
setCarDNDActive:
setConfiguration:forClient:
endSessionForDelegate:
startRequest:withDelegate:
handleRemoteSpeechRequest:completion:
startSpeechRequestWithDelegate:withOptions:
startRecordingForPendingSpeechRequestForDelegate:withOptions:completion:
startSpeechPronunciationRequestWithDelegate:withOptions:pronunciationContext:
startAcousticIDRequestWithDelegate:withOptions:context:
startSpeechRequestWithURL:isNarrowBand:withDelegate:
cancelRequestForDelegate:reason:error:
rollbackRequestForDelegate:
startRecordingForPendingDictationWithLanguageCode:options:speechOptions:sessionUUID:delegate:completion:
startDictationWithLanguageCode:options:speechOptions:sessionUUID:delegate:
startRecordedDictationWithLanguage:options:sessionUUID:narrowband:delegate:
addRecordedSpeechSampleData:delegate:
startDictationWithURL:isNarrowBand:language:options:sessionUUID:delegate:
sendEngagementFeedback:voiceQueryIdentifier:
stopSpeechWithOptions:forDelegate:
cancelSpeechForDelegate:
updateSpeechOptions:forDelegate:
handleGenericAceCommand:withDelegate:interruptOutstandingRequest:targetReplyQueue:reply:
clearContext
rollbackClearContext
willSetApplicationContextWithRefId:
setApplicationContext:
fetchAppicationContextForApplicationInfo:supplementalContext:refID:
setOverriddenApplicationContext:withContext:
setApplicationContextForApplicationInfos:withRefId:
getCrossDeviceContextWithCompletion:
getDeviceContextsForKeys:forRequestID:includesNearbyDevices:completion:
getOriginDeviceInfoForContextIdentifier:completion:
prepareForPhoneCall
telephonyRequestCompleted
requestBarrier:
sendUsageHeartbeatMetricsWithSiriEnabled:onLockscreen:dictationEnabled:voiceTriggerEnabled:starkHasBeenActiveWithin24Hours:raiseToSpeakEnabled:raiseToSpeakAssetVersion:activeAppleAudioDevices:spokenNotificationsEnabled:announceNotificationsEnabledOnHeadphones:carplayAnnounceEnablementType:isAnnounceNotificationsMutedForCarPlay:shouldSkipTriggerlessReplyConfirmation:spokenNotificationsProxCardSeen:spokenNotificationsControlCenterModuleEnabled:spokenNotificationsWhitelistSettings:announceCallsEnabled:preciseLocationEnabled:adaptiveSiriVolumeEnabled:adaptiveSiriVolumePermanentOffsetEnabled:adaptiveSiriVolumePermanentOffsetFactor:adaptiveSiriVolumeMostRecentIntent:
recordDefrostXPCMessageToProcessLaunchDuration:
fetchSupportedLanguages
fetchAccounts:
deleteAccountWithIdentifier:
fetchActiveAccountIdentifier:
destroyActiveAccount
refreshAssistantValidation
rescheduleValidationRefresh
fetchManagedStoreObjectForKey:completion:
fetchContextForApplicationInfo:completion:
openApplicationWithBundleID:URL:completion:
openURL:completion:
dismissAssistant
willProcessAppLaunchWithBundleIdentifier:
failedToLaunchAppWithBundleIdentifier:
isDeviceLocked
isInStarkMode
isInCarDNDModeWithCompletion:
isInCarDNDMode
isWatchAuthenticatedWithCompletion:
areAnnouncementRequestsPermittedByPresentationWhileActiveWithCompletion:
isTimeoutSuspended
getDeferredObjectsWithIdentifiers:completion:
startDelayingWithType:completion:
shutdownSessionIfIdle
pushMyriadAdvertisementContext:completionHandler:
accessRecordedAudioWithIdentifier:completion:
trimRecordedAudioWithIdentifier:offset:duration:outputFileType:completion:
getRecordedAudioDirectoryPathsWithCompletion:
_broadcastCommand:
_listInstalledServicesWithCompletion:
_awdRequestEnd:
_currentClient
_requestDelegate
_speechDelegate
_speechFileDelegate
_speechDelegateHasReceivedPartialResult
_deviceIsLocked
_isInStarkMode
_isInCarDNDMode
_isWatchAuthenticated
_isTimeoutSuspended
_siriUODSupported
_setSiriUODSupported:
_requestDispatcherService
_setRequestDispatcherService:
_requestCompletion
_requestGroup
_requestAssertion
_uiService
_fauxUIService
_carPlayAnnouncementRequestCapabilityManager
_deviceResolutionServiceListener
_assetManager
_speechManagerState
_speechCapturingContextSessionUUID
_speechCapturingContextsBySessionUUID
_speechCompletion
_requestBarrier
_currentSpeechRequestOptions
_startSpeechCommand
_speechRecognitionResultUUID
_finishSpeechCommand
_currentRequestInfo
_associatedRequestId
_startingPronunciationRequest
_pronunciationContext
_speechDelegateHasReceivedSpeechRecognized
_sessionExperiencedError
_hasReceivedServerSpeechRecognitions
_speechHasAcceptedResultCandidate
_hasReceivedAtLeastOneResultCandidate
_hasSentAtLeastOneUserConfidenceScore
_currentUodStatus
_speechAcceptedResultCandidateDuration
_selectedResultCandidate
_speechRequestGroup
_continuePendedRequestTimestamp
_droppedPackets
_outstandingRequestIds
_aceCompletionMap
_handledCommandIdsByRequestId
_postCommandHandlingBlockMap
_executionDevicesByExecutionID
_mostRecentRootExecutionContext
_rootExecutionContextsByRequestID
_mostRecentVisibleRemoteExecutionContext
_remoteExecutionContextsByExecutionID
_shutdownAssertions
_clientConfiguration
_deviceIsShowingLockScreen
_requestEffectiveStartTime
_disableServiceCommandExecution
_restrictionsWereSetForRequest
_requestEndCompletion
_deferredRequestEndIdentifier
_firstChanceServices
_callObserver
_callTransactionUUID
_callTransaction
_hasQueuedLanguageCode
_queuedLanguageCode
_hasQueuedOutputVoice
_queuedOutputVoice
_awdSiriSession
_awdRequestRecord
_isSmartLanguageSelectionActive
_hasReceivedDetectedLanguage
_langaugeDetectionWaitTimer
_multilingualSpeechRecognizedCommandHandler
_cachedConfidenceScoresFromRemote
_requestStatistics
_offlineMetricsManager
_isSendingAnalyticsEventStreamsAndOfflineMetrics
_vtStateManagerAccessQueue
_accountStoreQueue
_serviceMaintenanceGroup
_lastClearContext
_syncManager
_syncDelegate
_outstandingAnchorsRequests
_outstandingSyncChunks
_outstandingSyncPromiseKeys
_outstandingSyncPromiseID
_needsToSendSyncFinished
_syncAnchorsRequestQueue
_outstandingSyncVerificationRequestID
_shouldPostSyncVerifyFinishedNotification
_needVerificationFullReport
_verificationHelper
_acousticIDHelper
_partialResultAcousticIDTimer
_hasSanityCheckedAutodownloadedAssets
T@"SABaseCommand",&,N,S_setLastRequest:,V_lastRequest
T@"<ADCommandCenterClient>",R,N,V_currentClient
T@"<ADCommandCenterRequestDelegate>",R,N,V_requestDelegate
T@"<ADCommandCenterSpeechDelegate>",R,N,V_speechDelegate
T@"<ADCommandCenterSpeechDelegate>",R,N,V_speechFileDelegate
TB,R,N,V_speechDelegateHasReceivedPartialResult
T@"SABaseCommand",R,N,V_currentRequest
TB,R,N,V_deviceIsLocked
TB,R,N,V_isInStarkMode
TB,R,N,V_isInCarDNDMode
TB,R,N,V_isWatchAuthenticated
T@"ADSpeechManager",R,N
TB,N,S_setIsTimeoutSuspended:,V_isTimeoutSuspended
T@"NSString",R,N,V_selectedSharedUserID
T@"AFInstanceContext",R,N,V_instanceContext
TB,N,S_setSiriUODSupported:,V_siriUODSupported
T@"ADRequestDispatcherService",&,N,S_setRequestDispatcherService:,V_requestDispatcherService
resultObjects
ad_leadingSilence
ad_trailingSilence
ad_endTime
shouldLogForQA
stringByAppendingFormat:
setFallbackReason:
addMissingAsset:
setStartedOrChanged:
setServerFallbackContext:
setRecordDeviceIdentifier:
expectedActivationEventTime
initWithGeneration:date:alarmsByID:notifiedFiringAlarmIDs:
clockAlarmObserver:alarmDidFire:
clockAlarmObserver:alarmDidDismiss:
clockAlarmObserver:snapshotDidUpdateFrom:to:
initWithNSUUID:
setUuid:
setComponent:
_createRequestLinkInfoFromUUID:component:
startLocalRequest
initWithUUIDString:
setSource:
setTarget:
setVendorIdentifier:
setProductIdentifier:
notification
request
interruptionLevel
appID
announcementType
call
callProviderBundleID
callProviderIdentifier
setAnnouncementCategory:
setIsTimeSensitiveAnnouncement:
isFirstPartyApplicationWithBundleId:
setAppCategory:
_getCurrentlyConnectedHeadphonesANCAudioDevice
setTargetPlatform:
setConnectedAudioDevice:
setAppBundleId:
setIsRedactedDueToOptOut:
setAncId:
setEventMetadata:
_createEmptyANCClientEventWithMetadataForRequest:
_getAnnounceReceivedEventFromAnnouncementRequest:
setLinkId:
setNotificationReceived:
_getAnnounceReceivedTier1EventFromAnnouncementRequest:
setNotificationReceivedTier1:
setUserResponseCategory:
setUserResponseEvaluated:
connectedAudioDevice
productIdentifier
announcementCategory
isTimeSensitiveAnnouncement
announceSetting
effectiveGlobalAnnounceSetting
effectiveGlobalAnnounceHeadphonesSetting
_emitAnnounceEnablementEventFromSectionInfo:siriLocale:
_randomlySampleWithoutReplacementNumSamples:fromArray:
unsignedIntegerValue
getSectionInfoForActiveSectionsWithCompletion:
emitRequestLinkForAnnouncementRequest:
emitAnnouncementReceivedForAnnouncementRequest:
emitUserResponseSilenceForAnnouncementRequest:
emitCoreAnalyticsAnnounceNotificationApplicationEnablementEvents
initFileURLWithPath:isDirectory:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
URLByAppendingPathComponent:
_listenForAudioRouteChanges
_updateAudioRouteOnMainThread
audioSessionController
getAudioSessionID
retrieveSessionWithID:
currentRoute
outputs
portType
_notifyObservers:
registerObserver:
unregisterObserver:
_muteStateChanged:
useDeviceSpeakerForTTS
_listenForMuteStateChanges
_stopListeningForMuteStateChanges
_cleanupAudioRouteOnMainThread
audioSessionController:didReceiveAudioSessionInterruptionNotificationWithUserInfo:
audioSessionController:didReceiveAudioSessionRouteChangeNotificationWithUserInfo:
audioSessionController:didReceiveAudioSessionMediaServicesWereLostNotificationWithUserInfo:
audioSessionController:didReceiveAudioSessionMediaServicesWereResetNotificationWithUserInfo:
audioSessionController:didReceiveAudioSessionOwnerLostNotification:
audioSessionController:didReceiveAudioSessionOwnerResetNotification:
_currentRouteIsHandsFree
_stopListeningForAudioRouteChanges
_useDeviceSpeakerForTTSPreferenceChanged
addHandsFreeStateObserver:
removeHandsFreeStateObserver:
_useDeviceSpeakerForTTSPreference
_handsFreeLock
muteMode
applicationStateForApplication:
effectiveRestrictedBoolValueForSetting:
internalUserClassification
standardUserDefaults
persistentDomainForName:
defaultWorkspace
openSensitiveURL:withOptions:
beginMatchingExtensionsWithAttributes:completion:
endMatchingExtensions:
domainFromSADObject
expectedResponseClassName
siriServiceStream
keyPathForSiriServiceDataDictionary
domainKey
commandKey
dateByAddingUnit:value:toDate:options:
carPlayStream
publisherFromStartTime:
eventBody
isStart
sinkWithCompletion:receiveInput:
initFileURLWithPath:
dataWithLength:
stringValue
hexStringFromBytes:length:
fileModificationDate
setAttributes:ofItemAtPath:error:
systemLanguagePreferenceHasChanged
_notifyObserver
_changed
initWithUUIDBytes:
bundleProxyForIdentifier:
adShouldSpeakStateDidChange:
_initWithContext:
_homeManager
_siriDataSharingOptInStatusDidChange:
initWithOptions:
_currentHome
isDataSyncInProgress
_currentAccessory
home
owner
primaryHome
homes
currentUser
userSettingsForHome:
assistantAccessControlForHome:
uniqueIdentifier
_updateHomeUserSettings
accessories
_propagateSiriDataSharingOptInStatus:toAccessory:
rootGroup
sharedConnection
effectiveBoolValueForSetting:
isMultiUserEnabled
securePersonalDomainsRequireAuth
_allowExplicitContentSettingForUser:forHome:
_settingsForHomeUser:forHome:
_logRelevantAnalyticsOnHomeUserSettingsUpdateForCurrentSettings:allowVoiceIdSettingValue:isPrimaryUser:
users
setMultiUserVoiceIdentification:
restartSharing
status
_currentHomeInfo
category
categoryType
_setPreferredMediaUserForAccessory:
preferredMediaUser
setPreferredMediaUserHomeUserID:
setPreferredMediaUserSharedUserID:
_accessoryForIdentifier:inHome:
_startCloudKitActivityForHomes:homesToDelete:
updateValue:completionHandler:
isRemoraEnabled
accessoryWithSiriEndpointIdentifier:
setUniqueIdentifier:
model
setModel:
room
setRoomName:
setIsSpeaker:
manufacturer
setManufacturer:
setCategoryType:
setSchemaCategoryType:
_accessoryLoggingSalt
setLoggingUniqueIdentifier:
_enumerateListenersUsingBlock:
createMultiuserSettingsMessenger
numSharedUsers
numUsersCloudShareTrustNotConfigured
numUsersWithSettings
numUsersWithIdentifyVoiceOff
setNumGuestsAccepted:
setNumParticipantsWithTrust:
setNumVoiceProfilesAvailable:
setNumUsersWhoSyncedRecognizeMyVoice:
setNumUsersWithRecognizeMyVoiceEnabled:
sendFetchMultiuserSettingsRequest:
setRecognizeMyVoiceEnabled:
_homeManagerUpdatedHomes:homesToDelete:
_checkAndDisableVoiceIDIfRequired
_updateHomeContext:
_homeManagerUpdatedHomes:
_resolveSiriDataSharingStatusMismatch:
hmf_isEqualToUUID:
_updateCurrentAccessoryInfoWithAccessory:
infoForThisDevice
initWithHomeIdentifier:activityNotificationsEnabledForPersonalRequests:
_homesWithSiriCapableDevices
_activityNotificationsForHomes:
_hasSiriCapableDeviceInHome:
siriEndpointProfile
_getAccessoryCategoryForExecutionInfo:
localizedDescription
instanceInfo
applicationUUID
homeIdentifier
setActivityNotificationsEnabledForPersonalRequests:
areActivityNotificationsEnabledForPersonalRequests
homeManager:didUpdateAuthorizationStatus:
homeManagerDidUpdateHomes:
homeManagerDidUpdatePrimaryHome:
homeManager:didAddHome:
homeManager:didRemoveHome:
homeManager:didReceiveAddAccessoryRequest:
homeManager:didUpdateStateForIncomingInvitations:
homeManagerDidUpdateApplicationData:
homeManagerDidUpdateCurrentHome:
homeManagerDidUpdateDataSyncInProgress:
homeManagerDidUpdateDataSyncState:
homeManager:didUpdateStatus:
homeManager:didUpdateResidentEnabledForThisDevice:
homeManager:didUpdateAccessAllowedWhenLocked:
homeManager:didUpdateThisDeviceIsResidentCapable:
homeManager:residentProvisioningStatusChanged:
homeManagerWillStartBatchNotifications:
homeManagerDidEndBatchNotifications:
homeManager:didUpdateMultiUserStatus:reason:
homeManagerDidUpdateAssistantIdentifiers:
homeManagerDidRemoveCurrentAccessory:
homeManager:didUpdateHH2State:
user:didUpdateAssistantAccessControl:forHome:
user:didUpdateMediaContentProfileAccessControl:forHome:
user:didUpdatePhotosPersonManagerSettings:
user:didUpdatePersonManagerSettings:
user:didUpdatePairingIdentity:
user:didUpdateNeedsiTunesMultiUserRepair:
shareManager:didReceiveShareInvitation:completion:
shareManager:didReceiveShareInvitation:completionHandler:
shareManager:didReceiveRepairInfo:home:
homeDidUpdateName:
homeDidUpdateAccessControlForCurrentUser:
home:didAddAccessory:
home:didRemoveAccessory:
home:didAddUser:
home:didRemoveUser:
home:didUpdateRoom:forAccessory:
home:didAddRoom:
home:didRemoveRoom:
home:didUpdateNameForRoom:
home:didAddZone:
home:didRemoveZone:
home:didUpdateNameForZone:
home:didAddRoom:toZone:
home:didRemoveRoom:fromZone:
home:didAddServiceGroup:
home:didRemoveServiceGroup:
home:didUpdateNameForServiceGroup:
home:didAddService:toServiceGroup:
home:didRemoveService:fromServiceGroup:
home:didAddActionSet:
home:didRemoveActionSet:
home:didUpdateNameForActionSet:
home:didUpdateActionsForActionSet:
home:didAddTrigger:
home:didRemoveTrigger:
home:didUpdateNameForTrigger:
home:didUpdateTrigger:
home:didUnblockAccessory:
home:didEncounterError:forAccessory:
home:didUpdateHomeHubState:
homeDidUpdateSupportedFeatures:
settingsDidUpdate:
settingsWillUpdate:
settings:didUpdateForIdentifier:keyPath:
home:didAddResidentDevice:
home:didRemoveResidentDevice:
home:didUpdateLocation:
home:didUpdateStateForOutgoingInvitations:
home:didUpdateAccesoryInvitationsForUser:
homeDidUpdateApplicationData:
home:didUpdateApplicationDataForRoom:
home:didUpdateApplicationDataForServiceGroup:
home:didUpdateApplicationDataForActionSet:
home:didUpdateLastExecutionDateForActionSet:
home:didUpdateAccessControlForUser:
home:didEnableNotifications:
home:didUpdateAutomaticSoftwareUpdateEnabled:
home:didUpdateMinimumMediaUserPrivilege:
home:didUpdateMediaPeerToPeerEnabled:
home:didUpdateMediaPassword:
home:didAddMediaSystem:
home:didRemoveMediaSystem:
home:didUpdateReprovisionStateForAccessory:
homeDidUpdateProtectionMode:
homeDidUpdateNetworkRouterSupport:
homeDidUpdateHomeLocationStatus:
homeDidEnableMultiUser:
homeDidSetHasAnyUserAcknowledgedCameraRecordingOnboarding:
home:didAddAccessoryNetworkProtectionGroup:
home:didRemoveAccessoryNetworkProtectionGroup:
home:didUpdateAccessoryNetworkProtectionGroup:
homeDidSetEnableDoorbellChime:
home:didUpdatePersonManagerSettings:
home:didFailAccessorySetupWithError:
homeDidSetHasOnboardedForAccessCode:
homeDidAddWalletKey:
homeDidRemoveWalletKey:
home:didUpdateHasOnboardedForWalletKey:
homeDidUpdateAssistantIdentifiers:
homeDidUpdateToROAR:
accessoryDidUpdateName:
accessory:didUpdateNameForService:
accessory:didUpdateAssociatedServiceTypeForService:
accessoryDidUpdateServices:
accessory:didAddProfile:
accessory:didRemoveProfile:
accessoryDidUpdateReachability:
accessory:service:didUpdateValueForCharacteristic:
accessory:didUpdateFirmwareVersion:
accessoryDidUpdateApplicationData:
accessoryDidUpdateAdditionalSetupRequired:
accessory:didUpdateApplicationDataForService:
accessory:didUpdateBulletinBoardNotificationForService:
accessory:didUpdateBulletinBoardNotificationServiceGroupForService:
accessory:didUpdateHasAuthorizationDataForCharacteristic:
accessory:didUpdateBundleID:
accessory:didUpdateStoreID:
accessory:didUpdateSettings:
accessory:didUpdateFirmwareUpdateAvailable:
accessory:didUpdatePairingIdentity:
accessory:didUpdateSoftwareVersion:
accessory:didUpdateLoggedInAccount:
accessoryDidUpdateControllable:
accessory:didUpdateConfiguredNameForService:
accessory:didUpdateDefaultNameForService:
accessory:didUpdateServiceSubtypeForService:
accessory:didUpdateConfigurationStateForService:
accessoryDidUpdateTargetControlSupport:
accessory:didAddControlTarget:
accessory:didRemoveControlTarget:
accessory:didAddSymptomsHandler:
accessoryDidRemoveSymptomsHandler:
accessoryDidUpdateMultiUserSupport:
accessoryDidUpdateSupportsCompanionInitiatedRestart:
accessoryDidUpdateSupportsMusicAlarm:
accessoryDidUpdateSupportsAnnounce:
accessoryDidUpdateSupportsThirdPartyMusic:
accessoryDidUpdateSupportsDoorbellChime:
accessory:didUpdateLastKnownSleepDiscoveryModeForService:
accessory:didUpdateLastKnownOperatingStateResponseForService:
accessoryDidUpdateReachableTransports:
accessory:didUpdateDevice:
accessoryDidUpdatePairingIdentity:
accessoryDidUpdateAudioDestinationController:
accessoryDidUpdateAudioDestination:
accessoryDidUpdateDiagnosticsTransferSupport:
accessoryDidSetHasOnboardedForNaturalLighting:
accessoryDidUpdateSupportsPreferredMediaUser:
accessoryDidUpdatePreferredMediaUser:
accessory:didUpdateSupportsWalletKey:
accessoryDidUpdatePendingConfigurationIdentifier:
initWithHomeManager:queue:
currentHomeWithCompletion:
_homesWithMultiUserEnabled
_setPreferredMediaUserForAccessories:
getCurrentHomeMemberIds:
getHomeIdForAccessoryId:completion:
setAllowHeySiriHomeKitSetting:
getCurrentAccessoryWithCompletion:
getSpeakerCapabilityForAccessoryWithUUID:completionHandler:
restartShareDeletion
getHomeContext:
accessoryLoggingSalt
currentAccessoryInfo
fetchMultiUserMetricsWithCompletion:
updateHomeUserSettings
rootAfHomeInfoForThisDevice
areActivityNotificationsOffForAllHomes
getLocalizedAccessoryCategoryForExecutionInfo:completion:
getAccessoryCategoryForExecutionInfo:completion:
updatedHomeInfoForRootInfo:
_assistantRequestedToTurnOffVoiceID
_homeSharingStates
_homeContext
_preferredMediaUserInfo
T@"NSUUID",R,N
T@"AFHomeAccessoryInfo",R,N
preferredMediaUserHomeUserID
_preferredMediaUserSharedUserID
_preferredMediaUserHomeUserID
T@"NSString",&,N,V_preferredMediaUserSharedUserID
T@"NSString",&,N,V_preferredMediaUserHomeUserID
setSecurePersonalDomainsRequireAuth:
_personalDomainsIsEnabled
_securePersonalDomainsRequireAuth
_currentHomeIdentifier
TB,N,V_personalDomainsIsEnabled
TB,N,V_securePersonalDomainsRequireAuth
T@"NSUUID",&,N,V_currentHomeIdentifier
setEntityType:
setEntities:
setCurrentHomes:
string
appendFormat:
allowUnauthenticatedRequests
keyPath
groups
silenceStartTime
ad_speechEndTime
initWithName:queue:
_listeningEdgeDetectorIDsChanged
publishStateWithBlock:
beginListeningForEdgeDetectorWithID:
endListeningForEdgeDetectorWithID:
_listeningEdgeDetectorIDs
_state
_statePublisher
initWithStartTime:
offset
setEndTime:
_startTime
_offset
_endTime
TQ,R,N,V_startTime
T@"NSString",R,C,N,V_streamUID
Tq,R,N,V_offset
TQ,N,V_endTime
_acousticId_startSessionForSpeechRequest:
acousticIdSearchSessionId
setSuppressStopAlert:
_addListener:
_removeListener:
_listenersLock
generationsByDataType
initWithGenerationsByDataType:
_generationsByDataType
T@"NSDictionary",R,C,N,V_generationsByDataType
setGenerationsByDataType:
connection
_sendBuffer
_requireNLOnServer
_siriConnection:didEncounterError:analysisInfo:
deleteAttribute:
expirationDuration
reason
initWithTimestamp:reason:effectiveDate:expirationDuration:userInfo:
_reason
_expirationDuration
_userInfo
TQ,R,N,V_timestamp
T@"NSString",R,C,N,V_reason
Td,R,N,V_expirationDuration
T@"NSDictionary",R,C,N,V_userInfo
_registerForRingerMuteStateNotifications
_ringerStateToken
_updateRingerMuteState:
_unregisterForRingerMuteStateNotifications
notificationWithName:object:
postNotification:
_muteMode
_buildDeviceFixedContext
buildDeviceDynamicContextRelativeToTimestamp:withCompletion:
_triggerABCForNullAssistantIdentifier
setSiriInputLanguage:
setSiriVoiceLanguage:
setSiriDeviceID:
setSpeechID:
siriResponseShouldAlwaysPrint
setAlwaysShowSiriDialog:
alwaysObscureBackgroundContentWhenActive
setAlwaysBlurBackground:
alwaysShowRecognizedSpeech
setAlwaysShowUserSpeechTranscript:
setSiriUISettings:
setVoiceSettings:
setIsSatellitePaired:
wallClockTimeForTimestamp:
setHorizontalAccuracyInMeters:
dateWithTimeInterval:sinceDate:
logInstrumentationOfType:machAbsoluteTime:turnIdentifier:
_peerInfo
_contextIdentifier
_proximity
_commandRelayProxyIdentifier
T@"ADPeerInfo",R,C,N,V_peerInfo
T@"NSUUID",R,C,N,V_contextIdentifier
Tq,R,N,V_proximity
T@"NSString",R,C,N,V_commandRelayProxyIdentifier
T@"NSError",R,C,N,V_error
setPeerInfo:
setCommandRelayProxyIdentifier:
getCurrentFanInfo:
fanId
setFanId:
currentSpeed
setCurrentSpeed:
targetSpeed
setTargetSpeed:
_fanId
_currentSpeed
_targetSpeed
TQ,N,V_fanId
Tq,N,V_currentSpeed
Tq,N,V_targetSpeed
initWithName:reason:userInfo:
_ad_settingsRequestRepresentation
_ad_aceSettingsResponseCommandRepresentationForSiriResponse:
_ad_settingType
_ad_aceSettingsGetBooleanResponseRepresentation
_ad_aceSettingsResponseRepresentationForSetValueCommand:
_ad_getSettingsRequestForHandler:completion:
_ad_setting
_setSettings:
dryRun
_setApplyChanges:
_initWithSettingType:
settingsAction
_ad_aceSettingBooleanEntityRepresentation
valueBeforeUpdate
setPreviousValue:
valueAfterUpdate
failOnSiriDisconnectWarnings
settingType
setSetting:
settingChanges
_deleteLegacyOfflineMetricsFiles
_buildOfflineMetricsMap
offlineIdentifier
insertMetrics:withOfflineIdentifier:
deleteMetricsWithOfflineIdentifier:
setOfflineIdentifier:
fetchNextMetricsUsingBlock:
deleteAllMetrics
insertMetrics:
_map
_missingReferenceFulfillmentContexts
missingReferences
_missingReferenceFulfillmentContextsByRequestId
_requestMap
_mutableResolvedIds
resolvedReferences
setHasBeenFulfilled:
fulfillmentBlock
_removeMissingReferenceContext:
_addObjects:forRequestId:sessionRequestId:
ad_callbacks
_removeMissingRefContextsForRequestId:
allKeysForObject:
commandsForSuccessReplyToCommand:
_requestsWithPhoneCall
phoneSearchResults
commandOutcome
activeCallRemaining
phoneHangUpCallType
routeResponse
result
hasArrayForPropertyForKey:
confirmed
set_mutableResolvedIds:
_hasBeenFulfilled
_requestId
_missingReferences
_fulfillmentBlock
T@"NSMutableSet",&,N,V_mutableResolvedIds
TB,N,V_hasBeenFulfilled
T@"NSString",R,C,N,V_requestId
T@"NSArray",R,N,V_missingReferences
T@?,C,N,V_fulfillmentBlock
T@"NSSet",R,N
initWithComponentId:andBlockOnConfiguration:
_AWDTimestampTruncatedToHourPrecision
_currentTime
_setConnectionStartTime:
_submitMetricWithIdentifier:hotShipIdentifier:hotShipTimestamp:generation:
setConnectionType:
_connectionStartTime
_durationInMillisecondsFromTime:toTime:
setDuration:
setErrorDomain:
_setVoiceRecordingStartTime:
_setVoiceRecordingEndTime:
_voiceRecordingStartTime
_setVoiceSendStartTime:
_setVoiceSendEndTime:
_voiceSendStartTime
metricValue
_voiceRecordingEndTime
setDurationFromVoiceRecordingEnd:
_voiceSendEndTime
setDurationFromVoiceSendEnd:
_serverConnection
newMetricContainerWithIdentifier:
setMetric:
submitMetric:
_submitMetricWithIdentifier:generation:
getAWDTimestamp
logConnectionStart
logConnectionOpenWithConnectionType:
logConnectionFailedWithError:connectionType:
logVoiceRecordingStart
logVoiceRecordingEnd
logVoiceSendStart
logVoiceSendEnd
logNetworkAnalyzeRunWithResults:
T@"NSObject<OS_dispatch_queue>",R,N,G_queue,V_queue
serverConnection
T@"AWDServerConnection",R,N,G_serverConnection,V_serverConnection
connectionStartTime
T@"NSNumber",&,N,G_connectionStartTime,S_setConnectionStartTime:,V_connectionStartTime
voiceRecordingStartTime
T@"NSNumber",&,N,G_voiceRecordingStartTime,S_setVoiceRecordingStartTime:,V_voiceRecordingStartTime
voiceRecordingEndTime
T@"NSNumber",&,N,G_voiceRecordingEndTime,S_setVoiceRecordingEndTime:,V_voiceRecordingEndTime
voiceSendStartTime
T@"NSNumber",&,N,G_voiceSendStartTime,S_setVoiceSendStartTime:,V_voiceSendStartTime
voiceSendEndTime
T@"NSNumber",&,N,G_voiceSendEndTime,S_setVoiceSendEndTime:,V_voiceSendEndTime
isForUserRequest
setForUserRequest:
analyzedSuccessfulRetry
setAnalyzedSuccessfulRetry:
wwanPreferred
setWwanPreferred:
connectionInterface
setConnectionInterface:
sendBufferBytesRemaining
setSendBufferBytesRemaining:
knownURLLoadDuration
setKnownURLLoadDuration:
siriURLLoadDuration
setSiriURLLoadDuration:
siriSaltURLLoadDuration
setSiriSaltURLLoadDuration:
gatewayStatus
setGatewayStatus:
gatewayPingDuration
setGatewayPingDuration:
gatewayPingsSent
setGatewayPingsSent:
gatewayPingsDropped
setGatewayPingsDropped:
_forUserRequest
_analyzedSuccessfulRetry
_wwanPreferred
_connectionInterface
_sendBufferBytesRemaining
_knownURLLoadDuration
_siriURLLoadDuration
_siriSaltURLLoadDuration
_gatewayStatus
_gatewayPingDuration
_gatewayPingsSent
_gatewayPingsDropped
forUserRequest
TB,N,GisForUserRequest,V_forUserRequest
TB,N,V_analyzedSuccessfulRetry
TB,N,V_wwanPreferred
T@"NSNumber",C,N,V_connectionInterface
T@"NSNumber",C,N,V_sendBufferBytesRemaining
T@"NSNumber",C,N,V_knownURLLoadDuration
T@"NSNumber",C,N,V_siriURLLoadDuration
T@"NSNumber",C,N,V_siriSaltURLLoadDuration
Tq,N,V_gatewayStatus
T@"NSNumber",C,N,V_gatewayPingDuration
T@"NSNumber",C,N,V_gatewayPingsSent
T@"NSNumber",C,N,V_gatewayPingsDropped
setInterface:
setIsUserRequest:
setAnalyzingSuccessfulRetry:
_durationInMillisecondsForDuration:
unsignedIntValue
af_logDiagnostics
setHandoffUrlString:
hasText
hasHandoffData
hasHandoffUrlString
setRequiresUserInteraction:
setHasRequiresUserInteraction:
hasRequiresUserInteraction
hasHandoffNotification
hasHandoffOriginDeviceName
handoffData
handoffUrlString
requiresUserInteraction
_handoffData
_handoffNotification
_handoffOriginDeviceName
_handoffUrlString
_text
_requiresUserInteraction
T@"NSString",&,N,V_text
T@"NSData",&,N,V_handoffData
T@"NSString",&,N,V_handoffUrlString
TB,N,V_requiresUserInteraction
T@"NSString",&,N,V_handoffNotification
T@"NSString",&,N,V_handoffOriginDeviceName
initWithServiceHelper:asrBridgeDelegate:
clearContextWithAssistantId:
cancelRequestWithAssistantId:requestId:
handleCommand:executionContextInfo:reply:
startSpeechRequestWithAssistantId:requestId:inputOrigin:
sendRequestContextWithAssistantId:requestId:isEyesFree:isVoiceTriggerEnabled:isTextToSpeechEnabled:isTriggerlessFollowup:bargeInModes:approximatePreviousTTSInterval:deviceRestrictions:
startSessionWithAssistantId:languageCode:
startTestSpeechRequestWithAssistantId:requestId:inputOrigin:
setSalt:
setAllocation:
setControlGroup:
setExperimentGroups:
recencyDate
timeZone
previewRestricted
setApplicationId:
setDateIsAllDay:
setEndDate:
setRecencyDate:
setNotificationId:
setPreviewRestricted:
threadID
setThreadIdentifier:
_setStandardFieldsOnNotificationObject:
subtitle
setSubtitle:
feed
enabledForInstrumentation
ldcpDeliveryEnabled
storeMessages:
underlyingMessage
getAnyEventType
storageRepresentation
writeGenericInstrumentation:completion:
_defaultMessageStorage
logEventWithType:machAbsoluteTime:context:contextNoCopy:
logEventWithType:machAbsoluteTime:contextProvider:contextProvidingQueue:
logEventWithType:machAbsoluteTime:contextResolver:
logInstrumentation:machAbsoluteTime:turnContext:
setTurnID:
turnID
eventMetadata
setEventType:
_service:
stageUEIEventData:timestamp:
_stageEvent:
_stageEvents:
stageEvents:completion:
logEventWithType:contextResolver:
logInstrumentation:turnContext:
logInstrumentationOfType:turnIdentifier:
boostQueuedEvents:
setService:
logEvent:
logEvents:
anyEventType
initWithUserNotification:sourceAppId:platform:
requestCanBeHandled
hasEligibleSetup
supportedByApplicationWithBundleID:
canBeHandled
supportedOnPlatform
supportedForApplicationWithBundleId:
performRequestWithCompletion:
initWithUserNotification:sourceAppId:
deactivateRequestForReason:completion:
withdrawalRequestWithCompletion:
_notification
_sourceAppId
_initWithPlatform:
supportedAnnouncementTypesForBundleId:onPlatform:
notifyObserversOfCurrentEligibleSetupState:onPlatform:
fetchEligibleSetupStateWithCompletion:
fetchRequestCanBeHandledStateWithCompletion:
hasEligibleSetupChanged:onPlatform:
hasEligibleSetupChanged:
requestCanBeHandledChanged:onPlatform:
requestCanBeHandledChanged:
notifyObserversOfCurrentRequestCanBeHandledState:onPlatform:
_capabilityProvider
initWithNotifications:sourceAppId:
userActivityForID:
setUserActivity:forID:
_userActivitiesStore
contentAttributeSet
_resetTimer
_cancelTimer
allowedTimelimit
setAllowedTimelimit:
_timerSource
_allowedTimelimit
T@"<ADPeerLocationPolicyDelegate>",W,N,V_delegate
Td,N,V_allowedTimelimit
isCustom
VSSpeechFootprint
setFootprint:
setIsBuiltInVoice:
setContentVersion:
setMasteredVersion:
isBuiltInVoice
VSSpeechType
VSVoiceAsset
isMatchForVoiceAsset:
setObjects:
setUserTokenStatus:
setDefaultUserState:
_setDefaultToken:inDynamiteClientState:
_updateDefaultTokenInDynamiteClientState:
setSyncSharedUserId:
setInContextUsersStates:
_backgroundContextWithObjects:
errorIndicatorStatus
setErrorIndicatorStatus:
musicPersonalizationTokenStatus
playbackDeviceList
setPlaybackDeviceList:
_navStatus
_localSearchGetNavigationStatusCompleted
_queueState
_errorIndicatorStatus
_phoneCallState
_musicPersonalizationToken
_musicPersonalizationTokenStatus
_allMusicPersonalizationTokens
_allMusicPersonalizationTokenStatuses
_playbackDeviceList
_homeAnnouncement
T@"SANavStatus",&,N,V_navStatus
T@"SALocalSearchGetNavigationStatusCompleted",&,N,V_localSearchGetNavigationStatusCompleted
T@"SAMPQueueState",&,N,V_queueState
T@"SAErrorIndicatorStatus",&,N,V_errorIndicatorStatus
T@"SAHACurrentHome",&,N,V_currentHome
T@"SAPhoneCallState",&,N,V_phoneCallState
T@"NSString",C,N,V_musicPersonalizationToken
T@"SAUserTokenStatus",C,N,V_musicPersonalizationTokenStatus
T@"NSDictionary",C,N,V_allMusicPersonalizationTokens
T@"NSDictionary",C,N,V_allMusicPersonalizationTokenStatuses
T@"NSString",C,N,V_preferredMediaUserSharedUserID
T@"NSString",C,N,V_preferredMediaUserHomeUserID
T@"SARemotePlaybackDeviceList",&,N,V_playbackDeviceList
T@"SAHomeCommunicationAnnouncement",&,N,V_homeAnnouncement
authenticationStrategyVersion
_createDeviceAuthenticationSessionForVersion:
deviceAuthSession
_setRequestData:
_requestData
authenticationAvailable
initWithTargetQueue:authenticationStrategyVersion:
prepareWithCertificateData:completion:
requestData
setSessionInfo:duration:
signedDataForData:
sessionInfoDuration
_duration
_authStrategyVersion
_deviceAuthSession
_deviceAuthSessionState
T@"NSData",&,N,S_setRequestData:,V_requestData
shouldSimulateLanguageDetectorAssetsAvailability
simulatingLanguageCodes
supportedLocale:
setHandoffURLString:
handoffRequestData
_ad_setPayloadOnRequestInfo:
setHandoffRequestData:
expectedSpeakerSharedUserID
setUtterance:
setOrigin:
inputOrigin
setExpectedSelectedSharedUserId:
expectedSpeakerConfidenceScore
nonspeakerConfidenceScores
setVoiceIDConfidenceScores:
scores
legacyDirectActionIdentifier
setDirectAction:
correctedSpeech
correctedSpeechContext
combinedRank
setCombinedRank:
combinedScore
setCombinedScore:
onDeviceUtterancesPresent
setOnDeviceUtterancesPresent:
originalRank
setOriginalRank:
originalScore
setOriginalScore:
setPreviousUtterance:
utteranceSource
setUtteranceSource:
setPre:
post
setPost:
toAdd
setToAdd:
toRemove
setToRemove:
_pre
_post
_toAdd
_toRemove
T@"NSString",C,N,V_pre
T@"NSString",C,N,V_post
T@"NSArray",&,N,V_toAdd
T@"NSArray",&,N,V_toRemove
_answerHandler:completion:
_hangUpHandler:completion:
_incomingCallSearchHandler:completion:
_unhandledCommand:completion:
_hangUpCurrentCall
_addTimer:
_removeTimer:
_watchdogTimers
initWithLanguageCode:speechAssetManager:cdmClient:morphunAssetManager:assetFetchTimeout:registerAssetTracker:
_registerAssetStatusTrackers
_fetchAssetStatusForLanguage:withCompletion:
_subscribeToMorphunAssetStatusForLanguage:
_recordAssetsNeededForLanguage:resetPrevious:
_checkAssetsStatusForIntervalRecording
registerAssetDelegate:assetType:
registerWithAssetsDelegate:
isAssetReadyForLocale:
_shouldLogAssetsPreparedEvent
initWithLocaleIdentifier:
unsubscribeFromLocale:
subscribeToLocale:withCompletion:
_emitUODAssetPreparedEventWithLanguage:elapsed:
setElapsedSeconds:
setUodAssetsPrepared:
assetsAvailable
assetsAvailableForLocale:
assetsUnavailable
assetStatus:
_currentLanguageCode
_delegateQueue
_assetFetchTimeout
_assetFetchIntervalBeginDates
_speechAssetStatus
_speechAssetManager
_nlAssetStatus
_cdmClient
_morphunAssetsManager
syncManager:finishedSyncForKeys:postNotification:
_postSyncFinishedNotification
_setCurrentAnchor:
removeLastObject
_setContinueBlock:
syncManager:chunkForSyncInfo:chunkInfo:
syncManagerIsPausingSync:
_currentAnchor
_waitUntilSafeToContinue
_setCurrentAnchorToNext
initWithAnchor:forcingReset:
setReasons:
setForVerification:
_syncFinishedForService:error:
_syncingService:withSyncInfo:receivedChunk:continueBlock:
beginSyncForInfo:chunkHandler:
_finishSync
_preferredSyncKeyOrder
_sortedAnchorsFromAnchors:
_setAnchorsToSync:
_af_normalizedKey
_continueSync
_invokeContinueBlockWithKeepGoingArgument:
isSyncing
cancelSyncForAnchor:
syncManagerDidResetInProgressSync:
serviceTimedoutForSync:
initWithServiceManager:queue:
prepareSyncWithAnchors:forReasons:delegate:
addQueuedAnchors:forReasons:
clearQueuedAnchorsAndReasons
queuedAnchors
queuedReasons
continueSync
_forceResetOnNextSync
_setForceResetOnNextSync:
_continueBlock
getAnchorsRequest
setGetAnchorsRequest:
isVerifying
setIsVerifying:
_anchorsToSync
_currentSyncReasons
_queuedAnchorsByNormalizedKey
_queuedReasons
_syncedAnchors
_currentSyncService
_currentSyncID
_currentSyncShouldCancel
_timedoutServices
_isVerifying
_getAnchorsRequest
T@"SASyncAnchor",&,N,S_setCurrentAnchor:,V_currentAnchor
T@?,C,N,S_setContinueBlock:,V_continueBlock
T@"SASyncGetAnchors",&,N,V_getAnchorsRequest
TB,N,V_isVerifying
TB,N,S_setForceResetOnNextSync:,V_forceResetOnNextSync
syncKeysForReason:
shouldSyncEverythingForReason:
shouldIncludeAllKnownSiriKitAnchorsForReason:
shouldSyncThirdPartyUserVocabularyForSyncKeys:
shouldSyncIntentPolicyForSyncKeys:
siriCore_isProvisional
_pendingCommands
_sendServerCommands:
_addLimboId:
_shouldSendAssistantData
_sendAssistantDataChangedSinceAnchor:refId:
_sendPendingCommands
_sendServerCommand:
_addPendingCommand:
technology
sessionType
assistantSession:receivedCommand:
assistantSession:receivedError:isRetryableError:
assistantSession:willRetryOnError:
assistantSession:cannotHandleRequest:error:
setTLSSessionTicketsFlushPending:
anchor
setLastAssistantDataAnchor:
_waitingForAssistantData
lastAssistantDataAnchor
_clearLimbo
dataAnchor
requestSync
assistantSession:didLoadAssistantSyncRequested:
sendCommands:opportunistically:
_forceFastDormancy
_releaseDormancySuspension
_sendPendingDormantCommands
_startConnection
_setDormantWithStyle:
_probeSessionIfIdle
_pendDormantCommand:
siriCore_bufferingAllowedDuringActiveSession
_sendLimboCommand:
_startSession
sendCommand:opportunistically:
_handleAceObject:
_cancelSynchronously:
_resetServerConnectionSynchronously:completion:
_clearSendBuffer
_removeRequestForAssistantData
sessionClassForType:
_adSessionTypeFromString:
initOnQueue:withAccount:
supportsSync
_setSessionOpened
_removeLimboId:
_refIdIsLimboId:
_sendAssistantDataAndPendingCommandsIfNeeded:
_saConnectionType
_adSessionTypeString
_setRequestId:
setAWDRequestRecord:
awdRequestRecord
_passObjectToDelegate:
_informDelegateOfError:
_informDelegateWillRetryOnError:
_informDelegateCannotHandleRequest:error:
_sendCommandFailedWithRefId:
_sendDestroyAssistant
doSendPreProcessing:
doSendPostProcessing:
_setPendingAssistantDataAnchor:
_requestForAssistantData
_setAssistantDataAnchorIfNeeded:
_saGetAssistantData:
eagerlyFetchAssistantData
setCanHandleRequest:
canHandleRequest
delegateDidHandleCommand:didRecognizeSpeech:
getConnectionMetrics:
currentConnectionPreCachedMetrics
prepareForRetry
retryNakedCommandsIfNeeded
cancelSessionRequest:
resetConnection
setDormant:
hasLoadedAssistant
sessionIsActive
sessionIsAttemptingTryOrRetry
sessionIsWaitingForAssistantData
sessionId
sendRemoteGizmoDeviceToServer:
_setCurrentConnectionType:
_currentConnectionType
queueResultObjects:
dequeueResultObjects
setOrUpdateUsefulnessScore:
hasResultObjects
usefulnessScore
hasUsefulnessScore
setLoggingSharedUserIdentifier:
connectionMode
setConnectionMode:
dormant
_connectionMode
_pendingAssistantDataAnchor
_limboIds
_assistantDataRequested
_assistantDataRefId
_dormant
_dormantQueue
_sessionType
_sessionId
_resultObjectsQueue
_resultUsefulnessScore
_hasUsefulnessScore
_canHandleRequest
_loggingSharedUserIdentifier
Tq,N,V_state
TB,N,V_dormant
T@"<ADSessionDelegate>",W,N,V_delegate
Ti,N,V_sessionType
T@"NSString",C,N,V_languageCode
T@"NSString",C,N,V_connectionMode
T@"NSString",C,N,V_sharedUserIdentifier
T@"NSString",C,N,V_loggingSharedUserIdentifier
_readDictationSampledPlist
updateDateToCurrent
resetRequestCount
sampledCurrentSamplingDateKey
setRequestCount:
incrementRequestCount
_createDictationSampledPlistIfItDoesNotExist
date:matchesComponents:
isDictationOnDeviceSamplingDisabled
isSamplingDateCurrent
sampledLibraryDirectoryPath
sampledPlistFileName
dictionaryWithContentsOfURL:error:
createSamplingDirectory
_writeDictationSamplingVariablesToFile:
updateRequestCountWithFlag:
decrementRequestCount
isRequestSelectedForSampling
numberOfRequestsTillNow
setNumberOfRequestsTillNow:
currentSamplingDate
setCurrentSamplingDate:
dictationSamplingVaribles
setDictationSamplingVaribles:
isRequestConsideredForSampling
setIsRequestConsideredForSampling:
_isRequestConsideredForSampling
_numberOfRequestsTillNow
_currentSamplingDate
_dictationSamplingVaribles
Tq,N,V_numberOfRequestsTillNow
T@"NSDate",&,N,V_currentSamplingDate
T@"NSMutableDictionary",&,N,V_dictationSamplingVaribles
TB,N,V_isRequestConsideredForSampling
defaultObserver
pineBoardSystemState
_handleSleepStateChangedToState:fromState:
initWithSleepState:
_donateSystemStateContextWithSnapshot:
pineBoardSystemStateObserver:pineBoardStateDidChangeFrom:to:
_ad_getAlarmRequestRepresentationWithCompletionHandler:
_ad_alarmResponseForResponse:
enabled
frequency
setDaysOfWeek:
setHourOfDay:
setMinuteOfHour:
_ad_alarm
_ad_setAlarm:
isOverrideAlarm
setIsOverride:
bedtimeHour
setBedtimeHour:
bedtimeMinute
setBedtimeMinute:
setIsFiringNext:
_ad_internalAlarmIdentifiers
setAlarms:
alarmToCreate
setAlarm:
alarmIdentifier
setAlarmId:
modifications
alarmId
_ad_updateWithModification:
alarmIdentifiers
setAlarmIds:
includesSleepAlarms
setSleepAlarm:
setCriteria:
results
setAlarmIdentifiers:
setAlarmURLs:
addedFrequency
removedFrequency
stringByRemovingPercentEncoding
URLPathAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
defaultSynchedKnowledgeStore
_defaultStoreSpecificKeyPrefixForName:
_defaultStoreSpecificKeyForName:key:
_storeWithName:
removeValueForKey:error:
initWithMatchType:value:negated:
removeValuesMatching:completionHandler:
_storeMap
beginSyncWithAnchor:validity:forKey:beginInfo:
beginSyncWithAnchor:validity:count:forKey:beginInfo:
beginSyncWithAnchor:validity:count:forKey:beginInfo:configuration:
beginSyncWithInfo:configuration:
getChangeAfterAnchor:changeInfo:
syncDidEnd
syncSnapshotForKey:
currentSyncSnapshot
syncVerificationKeyForKey:
_offlineIdentifiers
setResourceValue:forKey:error:
stringByDeletingPathExtension
_updateSharedDataWithPairedPeerData:
updateSharedDataWithCloudData:fromPeer:
_resetPeerAccountSettingsWithSharedData:
_updateSharedDataFromPeers:completion:
isEqualToSet:
af_setAceTemperatureUnit:
_cloudSyncPreferenceDidChange
updateSharedDataFromCloudPeers:completion:
enqueueAudioDataWithAudioFileName:audioMetadataDict:folderPath:
setCodec:
makeValidWAVFile:withSamplingRateOf:
convertToALACWithPath:withSamplingRateOf:
deleteItemAtFilePath:
setSpeechIdString:
setAudioCreatedTimestampMs:
enqueueLargeMessageObjectFromPath:assetIdentifier:messageMetadata:completion:
stringByAppendingPathExtension:
dataWithContentsOfFile:
cStringUsingEncoding:
fileHandleForUpdatingAtPath:
seekToEndOfFile
writeData:
closeFile
initWithAudioDataFolders:samplingType:
sendAudioDataToServer
setQueue:
audioDataFolders
setAudioDataFolders:
samplingType
setSamplingType:
samplingComponent
setSamplingComponent:
_audioDataFolders
_samplingType
_samplingComponent
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
T@"NSArray",C,N,V_audioDataFolders
Tq,N,V_samplingType
T@"NSString",C,N,V_samplingComponent
setSamplingInfo:
fileHandleForReadingAtPath:
addAudioSamplesOnQueue:
readDataUpToLength:error:
setShouldStopAddingSamples:
initWithAudioDataFolders:
folderPath
setFolderPath:
audioFilePath
setAudioFilePath:
audioMetadataDict
setAudioMetadataDict:
sessionTracker
setSessionTracker:
shouldStopAddingSamples
maxChunkSize
setMaxChunkSize:
_shouldStopAddingSamples
_folderPath
_audioFilePath
_audioMetadataDict
_sessionTracker
_dictationOptions
_maxChunkSize
T@"NSMutableArray",&,N,V_audioDataFolders
T@"NSString",C,N,V_folderPath
T@"NSString",C,N,V_audioFilePath
T@"NSDictionary",C,N,V_audioMetadataDict
T@"ADDictationSessionTracker",&,N,V_sessionTracker
T@"AFDictationOptions",&,N,V_dictationOptions
TB,V_shouldStopAddingSamples
Tq,N,V_maxChunkSize
TB,N,VadSpeechSessionEnded
component
setOriginalAsrId:
setAsrId:
setSampledAudioFileEnqueued:
setSampledAudioFileEnqueueFailed:
setSampledAudioFileDeleted:
setSampledAudioFileDeletionFailed:
setUnderlyingErrorCode:
setUnderlyingErrorDomain:
sampledSubDirectoryNameFormat
timezone
timeZoneWithAbbreviation:
dateFromString:
components:fromDate:toDate:options:
createXPCConnectionWithMachServiceName:options:
initWithServiceConnection:syncQueue:
exportedObject
_bundleClassForDomain:commandName:
_timeoutForCommand:
_removeTimerForUUID:
_providerServiceWithErrorHandler:
doCommandForServicePath:className:infoDictionary:executionInfo:reply:
_addWatchdogTimer:forUUID:
_providerServiceDelegate
clearSyncRequestWithUUID:
serviceConnectionTimedoutForSync
setSyncRequest:forUUID:
syncRequestForUUID:
_syncClassForAnchorKey:
beginSyncForServicePath:className:requestUUID:info:reply:
fetchCurrentSyncSnapshotForServicePath:className:key:completion:
_providerService
clearDomainObjectsForServicePath:className:
preheatBundleForServicePath:
runMaintenanceWorkForServicePath:className:completion:
reloadServiceBundleAtPath:
_stopTimersWithContinuation
initWithIdentifier:path:commandMap:anchorMap:clearingClass:maintenanceClass:instanceContext:queue:
sendClientBoundCommand:domain:executionContext:reply:
sendBeginSyncWithInfo:chunkHandler:completion:
sendFetchSyncSnapshotForInfo:completion:
sendClearDomainObjects
preheatServiceBundle
_getLockStateWithReply:
_getCarDNDModeWithReply:
_getStarkModeWithReply:
_getWatchAuthenticationWithReply:
_handleCommand:executionInfo:completion:
_getTimeoutSuspendedWithReply:
_syncQueue
_serviceLoaded
_stats
_anchorKeyClassMap
_domainObjectClearingClassName
_maintenanceClassName
_preheated
_watchdogTimersByUUID
_suspendedWatchdogTimerUUIDs
T@"NSString",R,N,V_identifier
T@"<ADServiceConnectionDelegate>",W,N,V_delegate
syncChunksWithPreAnchor:postAnchor:updates:deletes:validity:forRequestUUID:reply:
openURL:reply:
getLockStateWithReply:
getCarDNDModeWithReply:
getStarkModeWithReply:
getWatchAuthenticatedWithReply:
handleCommand:executionInfo:completion:
getTimeoutSuspendedWithReply:
assistantServiceWillCrashForStuckSyncPluginAtPath:
_serviceConnection
_syncRequestsByUUID
hashedRouteUID
_outputVoiceWithFallback:
_cachedKeychainStringForKey:
_cacheAndSetKeychainString:forKey:completion:
_keychainCache
_keychainStringForKey:
myriadDeviceVTEndTimeDistanceThreshold
accountInfoForIdentifier:
setAccountInfo:forIdentifier:
activeAccountIdentifier
serverTimeoutInterval
serverOverride
productTypePrefix
redirectForServerURLString:
setRedirect:forServerURLString:
lastSyncVerificationDate
setLastSyncVerificationDate:
lastMetricsUploadDate
setLastMetricsUploadDate:
lastMetricsUploadFailureReportedOnDate
setLastMetricsUploadFailureReportedOnDate:
multiUserVoiceIdentification
deviceWasRedirectedToProduction
multiUserIsOnboardingDevice
multiUserSyncerSADAnchor
setMultiUserSyncerSADAnchor:
multiUserSyncerIdentifiersAnchor
setMultiUserSyncerIdentifiersAnchor:
multiUserSyncerBackupIdentifiersAnchor
setMultiUserSyncerBackupIdentifiersAnchor:
isMultiUserSyncerMeDevice
setIsMultiUserSyncerMeDevice:
setMultiUserHomeUUIDsForDeletion:
removeMultiUserHomeUUID:
multiUserHomeUUIDsForDeletion
setSharedUserIdentifier:loggingSharedUserIdentifier:
setCompanionIdentifier:
lastCompanionRemoteDataFetchDate
setLastCompanionRemoteDataFetchDate:
proxyConnectionDisabled
getMaximumOutputVolume:
getMinimumOutputVolume:
getAudioSessionActiveDelay:
overrideAudioSessionActiveDelay
serverAudioSessionActivationDelay
serverMediaPlaybackVolumeThresholdForAudioSessionActivationDelay
serverAudioSessionActivationDelayAboveMediaPlaybackVolumeThreshold
dictationLanguageDetectorEnabled
setSingleUserMeCard:
singleUserMeCard
setSingleUserCompanionACEHost:
singleUserCompanionACEHost
multiUserSetupStartTimes
setMultiUserSetUpStartTimes:
multiUserSetupCompleteTimes
setMultiUserSetUpCompleteTimes:
useDeviceAuthenticationVersion
setLastServerExperimentCheckDate:
lastServerExperimentCheckDate
setLastDeviceExperimentCheckDate:
lastDeviceExperimentCheckDate
_needToPostLanguageNotification
_needToPostOutputLanguageNotification
_redirects
insertedOrUpdatedItems
deletedItemUUIDs
initWithGeneration:date:insertedOrUpdatedItems:deletedItemUUIDs:
_insertedOrUpdatedItems
_deletedItemUUIDs
T@"NSArray",R,C,N,V_insertedOrUpdatedItems
T@"NSArray",R,C,N,V_deletedItemUUIDs
setInsertedOrUpdatedItems:
setDeletedItemUUIDs:
hasFailureType
initWithDeliveryStream:
setPayloadSize:
markStartTime
markEndTime
markSucceeded
markFailedWithType:
batchIdentifier
deliveryStream
serverEnvironment
setServerEnvironment:
processedCount
setProcessedCount:
outstandingCount
setOutstandingCount:
scheduledActivity
setScheduledActivity:
payloadSize
_succeeded
_failureType
_hasPayloadSize
_scheduledActivity
_batchIdentifier
_deliveryStream
_serverEnvironment
_processedCount
_outstandingCount
_payloadSize
T@"NSUUID",R,C,N,V_batchIdentifier
TQ,R,N,V_deliveryStream
T@"NSString",C,N,V_serverEnvironment
TQ,N,V_processedCount
TQ,N,V_outstandingCount
TB,N,V_scheduledActivity
TQ,N,V_payloadSize
serializedCommand
ad_preferredMessagingOption
ad_recipientDevicesType
isEqualToData:
storeMeCard:
removeMeCardObserver:
_cachedMeCardData
_ownerMeCard
ad_siriTaskHandlerAceTranslationFailureError
_informCommandCenter:willPerformLaunchApp:
_setRefId:
_setTurnId:
requestCommandAceType
_commandType
_requestTransformer
_responseTransformer
_requestHandler
ad_siriTaskHandlerErrorWithCode:
_isWakeSystemSupportedOnPlatform
_adui_shouldBeHandledByAssistantd
_adui_handleWithCompletion:
_adui_shouldNotifyOthersOfArrival
_adui_notifyOthersOfArrival
_shouldWakeSystemForHandlingCommand:executionContext:
_wakeSystemForHandlingCommand
_adui_presentsUIResponseInTranscript
_lastHandledContext
_soundIDInCarPlay:
URLForSoundID:
_soundURLInCarPlay:
initWithItemURL:itemData:numberOfLoops:volume:fadeInDuration:fadeOutDuration:userInfo:
notificationId
startRequest:options:preparationHandler:executionHandler:finalizationHandler:
_adui_should_adui_notifyOthersOfArrival
disableAssistantWhilePasscodeLocked
logEnabledState:
currentNotificationSettingsCenter
notificationSystemSettings
announcementSetting
announcementHeadphonesSetting
getEnabledStateOfModuleWithIdentifier:completionHandler:
initWithEffectiveBundle:
isAdaptiveSiriVolumePermanentOffsetEnabled
adaptiveSiriVolumePermanentOffset
adaptiveSiriVolumeRecentIntent
makeAdministrator
triggerMigration:
_runMaintenanceForServices:completion:
runBootTimeServiceMaintenanceWithCompletion:
_handleMessage:fromDeviceWithID:replyHandler:
_handleBeginAudioSessionRequest:fromDeviceWithID:responseHandler:
_handleKeepAudioSessionAliveRequest:fromDeviceWithID:responseHandler:
_handleEndAudioSessionRequest:fromDeviceWithID:responseHandler:
_sendMessage:toDeviceWithID:replyHandler:
_setUpRequestHandlers
_metrics_isSystemIdle
_metrics_isAssistantOrDictationEnabled
rawRecognition
aceMetrics
_reallyCommitOrSaveMetrics:
_metrics_sendNextAnalyticsEventStreamToServerUntilLimit:requiresUnlimitedPower:requiresActiveSession:prioritizedEventStreamUID:deliveryStreamContinuations:scheduledActivity:completion:
_metrics_sendNextOfflineMetricsToServerUntilLimit:requiresUnlimitedPower:requiresActiveSession:completion:
_sendMetrics:requiresActiveSession:batch:completion:
_metrics_processEventRecordsFromStore:batch:deliveryStream:eventStreamUID:streamSpeechId:untilLimit:uploadRecords:completion:
setEventTransmittedRelativeToBootTimeTimestampNs:
setEventTransmittedTimestampRefId:
recordId
_metrics_publishDailyDeviceStatus:completion:
buildDailyDeviceStatusHeartbeatMetricsWithSiriEnabled:onLockscreen:dictationEnabled:voiceTriggerEnabled:starkHasBeenActiveWithin24Hours:raiseToSpeakEnabled:activeAppleAudioDevices:spokenNotificationsEnabled:announceNotificationsEnabledOnHeadphones:carplayAnnounceEnablementType:isAnnounceNotificationsMutedForCarPlay:shouldSkipTriggerlessReplyConfirmation:spokenNotificationsProxCardSeen:spokenNotificationsControlCenterModuleEnabled:spokenNotificationsWhitelistSettings:announceCallsEnabled:preciseLocationEnabled:adaptiveSiriVolumeEnabled:adaptiveSiriVolumePermanentOffsetEnabled:adaptiveSiriVolumePermanentOffsetFactor:adaptiveSiriVolumeMostRecentIntent:withCompletion:
setCategory:
initWithUnsignedLong:
aa_primaryAppleAccount
aa_personID
setEventInformation:
wrapAsAnyEvent
setPayloadVersion:
setInstrumentationBatch:
setOriginalCommandId:
snapshotStateFromStringEvent:
setEnrolledUsers:
setMultiUserState:
fetchEnrolledUsersWithCompletion:
setPersonalDomainsSetup:
sharedStatusController
statusType
setAppleMusicSubscriber:
setPersonalization:
getSubscriptionStatusWithCompletionHandler:
setCarPlayActiveWithin24Hours:
setAudioDevicesActiveWithin24Hours:
setAnnounceMessagesEnabled:
setAnnounceCallsEnabled:
setProxCardSeen:
setReplyWithoutConfirmation:
setIsEnabledForHeadphones:
setIsCarPlayMuted:
setCarPlayStatus:
setAnnounceNotifications:
setHardwareButtonEnabled:
setHeySiriEnabled:
setAssistantOnLockscreen:
setRaiseToSpeakEnabled:
setSpokenNotificationsEnabled:
setHasHomekitHome:
getSiriDataSharingOptInStatus
setTypeToSiriEnabled:
setIsPreciseLocationEnabled:
setIsAdaptiveVolumeEnabled:
setAnnounceEnabledStatus:
setIsPermanentOffsetEnabled:
setPermanentOffsetFactor:
getAdaptiveVolumeUserIntent:
setMostRecentIntent:
setAdaptiveVolumeUserPreferences:
setVoiceFeedback:
fetchVoiceTriggerHeartBeatMetrics
setImplicitUtterances:
setExplicitUtterances:
setFirstPassTriggers:
setVoiceTrigger:
setSiriSpeechID:
setClientDeviceSamplingTimestampMs:
setDeviceOs:
setDeviceBuild:
setEnabledStatus:
setActiveStatus:
setSpokenNotificationsproxCardSeen:
setSpokenNotificationsControlCenterModuleEnabled:
setSpokenNotificationsWhitelistSettings:
setAggregatedMetrics:
setSiriLinkedSpeechID:
fetchAppleMusicSubscriptionForSharedUser:completion:
getSubscriptionStatusForUserIdentity:withCompletionHandler:
fetchICUserIdentityForSharedUser:completion:
ic_sharedAccountStore
ic_DSID
specificAccountWithDSID:
ic_storeAccountForHomeUserIdentifier:completion:
_metrics_recordUIMetrics:
interpretationIndices
removeSpaceBefore
removeSpaceAfter
wasInitalizedFromDictionaryRepresentation
_updateAutoDownloadedVoiceAssetsForOutputVoice
voiceNamesForOutputLanguageCode:gender:
setAutoDownloadedVoiceAssets:
sendMessage:toDeviceWithIdentifier:completion:
sendMessage:completion:
deviceIdentifier
T@"NSString",R,C,N
_messagingService
T@"NSString",R,C,N,V_deviceIdentifier
_af_analyticsContextDescription
_ad_finalMetricsContextWithResponse:error:
appIdentifier
taskmasterForUIApplicationWithBundleIdentifier:
_handleGenericIntentRequest:deliveryHandler:completionHandler:
speakableIdentifier
_recordImmediateNotificationInteractionAfterRecommendation:forSpeakable:
_processEnqueuedSpeakables
speakableDate
_remoteOSMService
recordNotificationUsageForSpeakableId:withStartDate:withEndDate:withCompletion:
_finishRunningCurrentSpeakableWithResult:error:
_withAllModelsExecute:
speakableDescription
recordFeedbackOfType:forSpeakableId:
_loadModelWithType:completion:
createModelWithType:completion:
_resetConnectionToOSMService
_connectionToOSMService
recordRecommendedAction:forSpeakableId:withModelIdentifier:
sharedModule
requestsToSpeak:withHandler:
recordSpokenRequestCancelledForSpeakable:
recordSpokenRequestCompletedForSpeakable:
_cleanUpAllModels
stateManager
_modelLoadingGroup
_currentSpeakable
_queuedSpeakables
_handlersBySpeakableID
_executionModelIdentifier
_executionModelType
_modelMap
_typeMap
_modelLoading
T@"ADOpportuneSpeakingStateManager",R,N,V_stateManager
snapshot
initWithSnapshot:
_snapshot
T@"ADDeviceSyncSnapshot",R,C,N,V_snapshot
setSnapshot:
onSpeaker
initWithCallState:onSpeaker:
_donateCallStateContextWithSnapshot:completion:
callState
_currentState
setBackgroundAction:
backgroundAction
clientLite
processMaintenanceResponse:
handleCommand:commandHandler:completion:
jsParameters
_getActivityDispatcher
runCollectorsDefinedInParameters:completion:
runMaintenanceWorkWithCompletion:
setClientLite:
setActivityDispatcher:
_clientLite
_activityDispatcher
T@"AFClientLite",W,N,V_clientLite
activityDispatcher
T@"ActivityDispatcher",&,N,G_getActivityDispatcher,V_activityDispatcher
_handleCommandInAMOS:completion:
_sendAMOSCommand:domain:toBundleWithIdentifier:completion:
_amosSADomainObjectCreate:completion:
_handleSADOCommandIfServiceDoesNotUseAMOS:allowInterposing:completion:
identifiers
setIdentifiers:
_sendAMOSCommandToService:responseHandler:
_amosSADomainObjectRetrieve:completion:
setFields
addFields
removeFields
updateUsingSet:add:remove:
_updateObjectFromService:sadIdentifier:completion:
_amosSADomainObjectUpdate:completion:
_amosSADomainObjectCancel:completion:
isAMOSIdentifier
_amosSADomainObjectDelete:completion:
_amosSADomainObjectCommit:completion:
_amosSADomainObjectPunchOut:completion:
deviceFixedContext
siriAccountInformation
_resolveDeviceFixedContext:
setDeviceFixedContext:
_resolveSiriAccountInformation:
setSiriAccountInformation:
setSystemLocale:
setSiriInputLocale:
setVoiceGender:
setVoiceAccent:
setSiriVoiceSettings:
setDataSharingOptInState:
localTimeZone
setTimeZone:
setTimezoneOffset:
setSystemBuild:
setDeviceType:
convertCountryCodeToSchemaCountryCode:
setIsStoreDemoMode:
hasTimeIntervalSince1970
setTimeIntervalSince1970:
setSiriDeviceId:
setSiriUserId:
setSiriSpeechId:
handlesMessage:
resolveMessage:completion:
saHomeMemberInfo:
_loadCloudSyncedUsersFromCache
_isHostingMultiUserLanguage
_refreshUsersAndVoiceProfiles:
resetAllUsers
_primaryUserSharedUserIdentifierDidChangeNotification:
_homeInfoDidChange:
_languageCodeDidChange
_setupMultiUserListener
refreshHomeKitOnboardedUsers
getHomeUserIdForSharedUserId:completion:
getSharedUserIdForHomeUserId:completion:
getConformingSharedUserIdForHomeUserId:completion:
getFirstNameForSharedUserId:completion:
getConformingSharedUserIds:
getMultiUserSettingsForSharedUserID:completion:
getHomeUserIdOfRecognizedUserWithCompletion:
getPreferredMediaUserHomeUserIDWithCompletion:
_multiUserListenerShouldAcceptNewConnection:
sharedUserIdentifier
loggingSharedUserIdentifier
sharedUserID
loggableSharedUserID
_resetPrimaryUser
_forceCloudSyncedUserDownload:
_updateHomeKitSettings:personalDomainSettingsChanged:
nonCloudSyncedUser
removeUserWithHomeUUID:completion:
isSATEnrolledForSiriProfileId:forLanguageCode:
_trackHomeUserUUIDForInFlightVoiceProfile:
localizedStringFromDate:dateStyle:timeStyle:
logEventWithType:contextProvider:
_untrackAllHomeUserUUIDsForInFlightVoiceProfile
_updateSAMultiUserInfo
_saveSharedUsers
settingsForMultiUserWithRefresh:completion:
provisionedVoiceProfilesForLocale:
appDomain
sharedSiriId
homeUserUUID
_untrackHomeUserUUIDForInFlightVoiceProfile:
minusSet:
removeUserWithSharedUserID:completion:
homeId
userName
addUser:sharedUserId:loggableSharedUserId:enrollmentName:isPrimary:nonCloudSyncedUser:completion:
multiUserPrimaryUser
initWithDictionary:attribute:
multiUserSharedUsers
discardSiriEnrollmentForProfileId:forLanguageCode:
setMultiUserPrimaryUser:
setMultiUserSharedUsers:
_isCurrentLanguageMultiUserCompatible
_inFlightVoiceProfilesByUUID
sharedUserId
enrollmentName
homeMembers
companionAssistantID
voiceIDAllowedByUser
lastVisitedAceHost
setMultiUserPitchComposition:
homeMemberSettings
setHomeMembers:
setVoiceProfilesAreInFlight:
isEqualToDictionary:
_describeSAMultiUserInfo:
personalDomainsIsEnabled
unauthenticatedRequestsAllowed
allowExplicitContent
setPersonalDomainsIsEnabled:
setUnauthenticatedRequestsAllowed:
setAllowExplicitContent:
setVoiceIDAllowedByUser:
_addUser:sharedUserId:loggableSharedUserId:enrollmentName:isPrimary:nonCloudSyncedUser:completion:
_allowVoiceIdentificationForThisUser:completion:
_profileLimitReached
reportIssueForError:type:context:processIdentifier:walkboutStatus:triggerForIDSIdentifiers:
setEnrollmentName:
setSharedUserID:
init:sharedUserId:loggableSharedUserId:attribute:
setNonCloudSyncedUserAttribute:
_logRelevantAnalyticsOnUserAddedWithSharedUserID:isPrimary:
shareOwnerName
_removeUser:homeUserID:sharedUserID:error:
_postRemovalStateCleanup
timeIntervalSince1970
_updateVoiceProfileInfo
userProperties
saRemoteDeviceForHomeMember:
_trackGhostVoiceProfile:
companionIDSIdentifier
_resetAllUsers
_removeGhostVoiceProfiles
_countVoiceProfiles
_countUsersWithSharedUserId
getVoiceSettingsForHomeMembers:
setCompanionAssistantID:
setCompanionSpeechID:
setCompanionIDSIdentifier:
setProductPrefix:
setAceHost:
setShareOwnerName:
testAndSetLoggingIsAllowed:
setSettings:
loggableMusicSyncSharedUserID
_selectedSharedUserID
meCard
firstName
initWithObjectsAndKeys:
sharedDataManager
_cachedAssistantData
twentyFourHourTimeDisplay
region
countryCode
preferredLanguage
settings
setTwentyFourHourTimeDisplay:
setRegion:
setCountryCode:
setPreferredLanguage:
preferredMediaUserInfo
preferredMediaUserSharedUserID
_confidenceScoreForSharedUserID:expectedSpeakerSharedUserID:expectedSpeakerConfidenceScore:confidenceScores:
uppercaseString
setSharedUserId:
setConfidenceScore:
caseInsensitiveCompare:
localMeCardDidUpdate:
_deleteShareForUser:
addUser:sharedUserId:loggableSharedUserId:enrollmentName:isPrimary:completion:
removeUserWithShareOwnerNames:completion:
showMultiUsersWithCompletion:
showPrimaryUserSharedUserIDWithCompletion:
showMultiUserSharedUserIDsCompletion:
multiUserSAObject
sharedRemoteDevices
validateAndReturnScores:classifiedUser:donatedScores:unknownUserSharedId:totalUsers:ghostVoiceProfileDetected:
voiceProfilesOutOfSync
updateVoiceProfiles
triggerMultiUserMetricsWithCompletion:
updateMultiUserWithSharedUserId:companionId:companionSpeechId:idsIdentifier:productPrefix:aceHost:completion:
setEnrollmentName:forHomeUser:
setShareOwnerName:homeMemberSettings:loggingAllowed:forSharedUserId:
getSharedUserIdForShareOwnerName:
getSyncableSharedUserIdForSharedUserId:
getSyncableSharedUserIdsForSharedUserIds:
getSharedUserIdForHomeUserId:
getAllowExplicitContentSettingForRecognizedUser
getIDSIdentifierForAssistantId:completion:
currentOwnerSharedUserID
confidenceScoresForMultiUserTestingExpectedSpeakerSharedUserID:expectedSpeakerConfidenceScore:nonspeakerConfidenceScores:
sharedUsersBySharedUserID
setSharedUsersBySharedUserID:
primaryUser
setPrimaryUser:
rawScores
setRawScores:
_saUnknownUser
_sharedUsersByHomeUserUUID
_homeUserSettings
_pitchesForHomeMembers
_multiUserInfo
_ghostVoiceProfileSharedUserIDs
_multiUserListener
_liveOnToken
_primaryUserIsFromLiveOnApp
_usersWithAvailableVoiceProfiles
_currentLanguage
_lastProfilesDownloadAttemptTime
_outOfSyncDownloadAttemptCount
_voiceProfileManager
_sharedUsersBySharedUserID
_primaryUser
_rawScores
T@"ADCommunalDeviceUser",&,N,V_primaryUser
T@"NSDictionary",C,N,V_rawScores
T@"NSMutableDictionary",&,N,V_sharedUsersBySharedUserID
multiUserStateSnapshot
confidenceScores
vtSatScore
floatValue
confidenceScore
numberWithUnsignedLong:
_meContactDidChange:
_firstUnlockStateDidChange:
_fetchMappedMeCard
contactStore
unifiedContactWithIdentifier:keysToFetch:error:
phoneNumbers
setHandle:
emailAddresses
unregisterChangeHistoryClientIdentifier:error:
descriptorsForRequiredKeysForConversionType:
_crossPlatformUnifiedMeContactWithKeysToFetch:error:
personFromMeContact:
contactHandlesForPerson:
setContactStore:
_contactStore
T@"CNContactStore",&,N,V_contactStore
initWithIdentifier:name:RSSI:state:
RSSI
index
setIndex:
_RSSI
_index
T@"NSUUID",R,N,V_identifier
T@"NSString",R,N,V_name
T@"NSNumber",R,N,V_RSSI
T@"NSString",R,N,V_state
T@"NSString",&,N,V_index
_retrieveConnectedDevicesInfoOnServices:completion:
UUIDWithString:
setRequestFlags:
performDeviceRequest:device:completion:
_adCoreBluetoothDeviceForPeripheral:RSSI:
cancelPeripheralConnection:
initWithDelegate:queue:options:
_getPeripheralStateDescriptionFromState:
connectPeripheral:options:
retrieveConnectedPeripheralsWithServices:allowAll:
_connectToPeripherals:
readRSSI
_didReadRSSI:forPeripheral:
retrieveConnectedDevicesInfoWithCompletion:
retrieveConnectedDevicesInfoOnDoAPServiceWithCompletion:
fetchCBUUIDForConnectedDeviceWithAddress:completion:
centralManagerDidUpdateState:
centralManager:willRestoreState:
centralManager:didDiscoverPeripheral:advertisementData:RSSI:
centralManager:didConnectPeripheral:
centralManager:didFailToConnectPeripheral:error:
centralManager:didDisconnectPeripheral:error:
centralManager:connectionEventDidOccur:forPeripheral:
centralManager:didUpdateANCSAuthorizationForPeripheral:
peripheralDidUpdateName:
peripheral:didModifyServices:
peripheralDidUpdateRSSI:error:
peripheral:didReadRSSI:error:
peripheral:didDiscoverServices:
peripheral:didDiscoverIncludedServicesForService:error:
peripheral:didDiscoverCharacteristicsForService:error:
peripheral:didUpdateValueForCharacteristic:error:
peripheral:didWriteValueForCharacteristic:error:
peripheral:didUpdateNotificationStateForCharacteristic:error:
peripheral:didDiscoverDescriptorsForCharacteristic:error:
peripheral:didUpdateValueForDescriptor:error:
peripheral:didWriteValueForDescriptor:error:
peripheralIsReadyToSendWriteWithoutResponse:
peripheral:didOpenL2CAPChannel:error:
_cbManager
_invalidated
_peripheralsPendingRSSI
_peripheralsWithRSSIRead
_servicesToScan
_completionWrapper
_counter
valueWithPointer:
pointerValue
_selectorForCommandClass:andDomain:
_commandRegistry
serializedHistoricalContextForKey:
historicalContextMetadataForKey:
updatedContextWithSerializedContextByKey:metadata:
homeAnnouncementSnapshot
setHandoffData:
sessionHandoffData
link
setShouldBackgroundDefaultAction:
localizations
preferredLocalizationsFromArray:forPreferences:
localizedStringForKey:value:table:
handoffNotification
requestWithActivityInfo:
_handoffNotificationID
_remoteRequestInfo
T@"AFRequestInfo",&,N,V_remoteRequestInfo
_ad_handleStopwatchRequestWithCompletionHandler:
updateVoiceIdScoreToUser:score:reset:completion:
_scoresBySharedID
keysSortedByValueUsingComparator:
_ad_handleAlarmRequestWithCompletionHandler:
alarm
createResponse
setAlarmIdentifier:
alarms
alarmURLs
initWithInterfaceName:rttCurrent:rttSmoothed:rttVariance:rttBest:packetsSent:bytesSent:bytesRetransmitted:bytesUnacked:packetsReceived:bytesReceived:duplicateBytesReceived:outOfOrderBytesReceived:sendBufferBytes:sendBandwidth:synRetransmits:tfoSynDataAcked:
_ADPBLocationRequestType
_appPunchOutHandler:forDomain:completion:
_unhandledCommand:error:forDomain:completion:
_unhandledCommand:forDomain:completion:
insertObject:atIndex:
T@"NSArray",R,N
savedCustomVocabularyOverviewDictionary
_processAndEvaluateSnapshot:
_setSnapshot:
setLastPlayedAnnouncement:
homeAnnouncementObserver:stateDidUpdateFrom:to:
homeAnnouncementObserver:snapshotDidUpdateFrom:to:
_snapshotUpdater
_setLastMyriadWin:
_syncLastWinWithStereoPartner
_setLastTimeStereoPartnerWon:
_handleRequest:fromDeviceWithIdentifier:completion:
_handleLastWinRequest:completion:
setMyriadDecisionResult:
lastMyriadWinForStereoPartner:
_setStereoPartnerIdentifier:
_lastTimeWon
_lastTimeStereoPartnerWon
_stereoPartnerIdentifier
_homeContextDidChange:
_multiUsersDidChange:
releaseDormancySuspendAssertion:
_networkManager
releaseWiFiAssertion
cancelSynchronously:onQueue:completion:
_retryManager
assistantSessionWillStartConnection:
_startConnectionPreferringWWAN:skipPeer:skipPeerError:useWiFiHint:forceReconnect:
acquireDormancySuspendAssertion:
_connectionURL
setPeerType:
setPeerVersion:
setPeerProviderClass:
setProductTypePrefix:
setDeviceIsInWalkaboutExperimentGroup:
setSiriConnectionUsesPeerManagedSync:
setUsesProxyConnection:
setUrl:
peerAssistantIdentifier
assistantSessionShouldPrewarmConnetion:
setSendPings:
getConnectionMetricsSynchronously:completion:
assistantSessionConnectionDidReset:
isWWAN
_recheckForWiFiTransition
startMonitoringNetworkForHost:
aceHost
connectionPolicy
connectionPolicyDate
connectionPolicyHostname
_resetConnectionPolicyBlacklisting
timeToLive
connectionPolicyFirstFailureDate
hasConnectionPolicyFailed
setConnectionPolicy:
setImposePolicyBan:
setTimeout:
setSkipPeer:
setSkipPeerError:
setUseWiFiHint:
setForceReconnect:
_authenticationDisabled
_cachedValidationData
_cachedServerCertificate
_authenticator
_setCachedServerCertificate:
_eagerAuthDidComplete
canUseWiFiDirectly
acquireWiFiAssertion:
_generateAWDMetricsForWillStartConnection:
diagnosticConnectionType
policyId
isEdge
_adjustAceHeaderTimeout:
assistantSession:didOpenConnectionWithPolicyId:routeId:connectionDelay:
_connectionOpened
_generateAWDMetricsForOpenedConnection:type:
assistantSessionConnectionDidClose:
_resetServerConnection
predefinedServer
_connectionErrorIsTimeout:
_generateAnalyticsContextWithError:
connectionURL
interfaceIndex
sendBufferSize
updateConnectionDidDropAggdMetrics
updateConnectionDidFailAggdMetrics
aggregatorConnectionType
updateConnectionSetConnectionType:
setDescription:
connectionTypeFromString:
connectionModeFromString:
sessionTypeFromString:
sessionStateFromString:
setNetworkSessionState:
setIsWwanPreferred:
setIsDormant:
setSendBufferSize:
setPolicyId:
setUnderlyingError:
sharedSiriCoreNetworkingAnalytics
logSessionConnectionFailed:
_generateAWDMetricsForConnectionError:
_connectionErrorSuggestsConnectionPolicyReset:
setConnectionPolicyDate:
setConnectionPolicyHostname:
_updateConnectionPolicyFailureCount:
_connectionErrorIsRedirect:
ad_isRetryableConnectionError
ad_isStricterRetryableConnectionError
_shouldRetry
assistantSessionShouldAttemptRetry:
_retryForFailedConnection:withType:onError:
connectionPolicyFailureCount
setConnectionPolicyFirstFailureDate:
ad_isNetworkDownError
setConnectionPolicyFailureCount:
assistantSession:didChangeRequestIdFrom:toId:
assistantSessionRetryingRequest:
ad_isRetryableSessionError
ad_isAssistantNotReadyError
validationVersion
serverCertificateData
_versionForCachedValidationDataMatchesCurrentVersion
setServerCertificateData:
setValidationVersion:
validationData
setValidationData:
setValidationExpiration:
_persistValidationData:withExpiration:
initWithTimeIntervalSinceNow:
setValidationDataSync:
_reallyRetryPreferringWWAN:skipPeer:skipPeerError:useWiFiHint:causedByError:forceReconnect:useSecondary:
assistantSession:beginSessionRetryPreferringWWAN:
assistantSessionCommandsToRestoreStateOnNewConnection:
prefersWWAN
ad_requiresDampedRetry:
_retryWithParameters:skipPeer:skipPeerError:causedByError:useSecondary:
_createAssistant
_sendLoadAssistantWithAccount:validationData:
_sendSetRemoteDevicesWithAccount:
_sendMultiUserInfo
_continueAuthentication
_authenticationFailed
_sendGetSessionCertificateData
_continueAuthWithCertificateData:
_sendCreateSessionInfoRequestWithData:
_authDataToSign
_setCachedValidationData:withDuration:
_continueSessionInitWithValidationData:
_saGetSessionCertificateResponse:
_saCreateSessionInfoResponse:
_saSessionValidationFailed:
_saAssistantCreated:
_saAssistantLoaded:
_saAssistantDestroyed:
_saAssistantNotFound:
_saAssistantNotReady:
_saSetConnectionHeader:
_saCommandFailed:
ad_shouldRetry
ad_afErrorCode
setViews:
certificate
sessionInfo
validityDuration
_performingInternalAuth
appleConnectSessionToken
_retrieveAndSendHomeContext
clearAssistantData
deliverLogViewerIdentifier:
assistantSessionDidDestroyAssistant:
aceHostHeader
reconnectNow
_assistantFailedForReason:error:
siriCore_invokeThunk
_sendServerCommandLogErrorForCommand:withContext:
siriCore_logDiagnostics
sendCommands:errorHandler:
setDeviceAuthVersion:
setSessionInfoRequest:
loggingAssistantIdentifier
_triggerABCForEmptyLocale
setSessionValidationData:
setLoggableAssistantId:
setLoggableSharedUserId:
setLastKnownAceHostOfCompanion:
setLinkedAssistantId:
peerSpeechIdentifier
setLinkedSpeechId:
_populateInternalAuthProperties:
setExperiments:
logLoadAssistant
setAppleConnectServiceTicket:
setAppleConnectSessionToken:
attributes
companionAssistantId
peerUserAgentString
peerLanguageCode
peerSiriEnabled
setPersonalDomainsEnabled:
setPersonalDomainsAuthenticationMode:
language
setRemoteDeviceHasNoAssistantId:
setRemoteDeviceUnreachable:
saRemoteDevice:
setBrandName:
setRemoteDevices:
_sendSetRemoteDevicesWithAccount:multiUserInfo:
_sendHomeContext:
barrierResultReturnedWithSuccess:
initWithThunk:barrier:
_connectionIsWWAN
assistantSessionShouldRestartConnectionOnWiFi:
forceFastDormancy
setLoggingAssistantIdentifier:
assistantSessionDidCreateAssistant:
logCreateAssistant
probeConnection
cellularInstant
cellularHistorical
wifiInstant
wifiHistorical
getQualityReport:
assistantSessionDictationHIPAAMDMStatusDidChange
setSymptomsBasedNetworkQuality:
_getReportSymptomsBasedNetworkQualityMetrics:
networkManagerNonWWANDidBecomeAvailable:
networkManagerLostNonWWANConnectivity:
networkManagerNetworkUnreachable:
siriConnection:didOpenWithConnectionType:routeId:delay:method:
siriConnection:didReceiveAceObject:
siriConnectionDidClose:
siriConnection:didEncounterError:analysisInfo:
siriConnection:didEncounterIntermediateError:
siriConnection:willStartConnectionWithHTTPHeaderFields:
setCoreSiriConnection:
_generateAWDTransportMetrics:moreComing:transportRecord:
_currentConnectionURL
_cachedValidationDataExpiration
_usingCachedCertificateData
_usingCachedValidationData
_forceValidationRefresh
_checkForWiFiTransitionOnRequestEnd
_prefersWWAN
_skipPeer
_skipPeerError
_forceReconnect
_hasCachedAuthDisabled
_cachedAuthDisabled
_peerType
_peerVersion
_productTypePrefix
_siriConnectionUsesPeerManagedSync
_useWiFiHint
_hasActiveRequest
_aceHeaderTimeout
_dormancySuspendAssertion
_isAttemptingRetry
_waitingForDelayedRetry
_requestStartTime
_requestEndTime
_lastRetryTimeOnQueue
_loadRetryStartTime
_sessionInitCommandId
_createSessionInfoRequestId
_badCachedCertRetryCounter
_certificateFailureCounter
_metricsCache
_pairedWatchUniqueId
_metricsGroup
_isRequestRetry
initWithAttribute:
aceObjectWithPlistData:
setCompanionAssistantId:
companionSpeechID
setCompanionSpeechId:
saCopy:
setAttributes:
speechID
loggableCompanionAssistantID
setLoggableCompanionAssistantId:
loggableMultiUserSharedUserID
setLoggableMultiUserSharedUserId:
setLastVisitedAceHost:
setHomeMemberSettings:
productPrefix
addAttribute:
setLoggableMultiUserSharedUserID:
setLoggableMusicSyncSharedUserID:
setLoggableCompanionAssistantID:
loggingIsAllowed
_unauthenticatedRequestsAllowed
_voiceIDAllowedByUser
_allowExplicitContent
_nonCloudSyncedUser
_loggingIsAllowed
_homeUserUUID
_sharedUserID
_loggableSharedUserID
_loggableMultiUserSharedUserID
_loggableMusicSyncSharedUserID
_loggableCompanionAssistantID
_companionAssistantID
_companionSpeechID
_enrollmentName
_attributes
_companionIDSIdentifier
_speechID
_productPrefix
_aceHost
_shareOwnerName
_settings
T@"NSString",R,C,N,V_homeUserUUID
T@"NSString",C,N,V_sharedUserID
T@"NSString",R,C,N,V_loggableSharedUserID
T@"NSString",C,N,V_loggableMultiUserSharedUserID
T@"NSString",C,N,V_loggableMusicSyncSharedUserID
T@"NSString",C,N,V_loggableCompanionAssistantID
T@"NSString",C,N,V_companionAssistantID
T@"NSString",C,N,V_companionSpeechID
T@"NSString",C,N,V_enrollmentName
T@"ADCommunalDeviceUserAttributes",C,N,V_attributes
T@"NSString",C,N,V_companionIDSIdentifier
T@"NSString",C,N,V_speechID
T@"NSString",C,N,V_productPrefix
T@"NSString",C,N,V_aceHost
TB,N,V_unauthenticatedRequestsAllowed
TB,N,V_voiceIDAllowedByUser
TB,N,V_allowExplicitContent
T@"NSString",C,N,V_shareOwnerName
TB,N,SsetNonCloudSyncedUserAttribute:,V_nonCloudSyncedUser
T@"NSDictionary",C,N,V_settings
TB,N,StestAndSetLoggingIsAllowed:,V_loggingIsAllowed
initWithKeepsHistory:historyBufferSize:
getTimerSnapshotWithCompletion:
clockTimerObserver:timerDidFire:
clockTimerObserver:timerDidDismiss:
clockTimerObserver:snapshotDidUpdateFrom:to:
getIncrementalChangesAfterGeneration:limit:completion:
T@"NSString",R,N
serviceName
entitlement
xpcInterface
logCrossDeviceRequestLink:halId:
_halActionFromAction:
_crossDeviceCommandExecutionStartedEvent:halId:
logCrossDeviceCommandEnded:action:actionResult:homeKitTarget:contextProximityPairs:
_halActionResultFromActionResult:
_halHomeKitTargetFromTarget:
_crossDeviceCommandExecutionEndedEvent:actionResult:halId:contextProximityPairs:homeKitTarget:
_shouldLogAFAnalyticsCrossDeviceEvent:
_logAFAnalyticsCrossDeviceCommandHandledEventWithResult:halActionResult:contextProximityPairs:
_resultStringFromHALAction:actionResult:
_crossDeviceCommandExecutionFailedEvent:halId:
getDeviceContextAndProximityMapIncludingAllReachableDevice:completion:
matchesCapabilityDescriptions:
getAllReachableDevicesWithCompletion:
getSourceDeviceForContextWithIdentifiers:completion:
getDevicesMatchingCapabilityDescriptions:completion:
getContextAndProximitySnapshotForCurrentRequestForDeviceUnits:serviceContexts:completion:
logCrossDeviceRequestLink:halRequestId:
logCrossDeviceCommandStarted:action:
logCrossDeviceCommandEnded:action:contextProximityPairs:
logCrossDeviceCommandEnded:action:homeKitTarget:contextProximityPairs:
logCrossDeviceCommandFailed:action:reason:
setIsCommunalDevice:
initWithIdentifier:assistantId:builder:
_handleNewConnection:
_xpcListener
_speechLogDecodingError
reverseObjectEnumerator
setSpeechWasRecognized
startPlaybackWithURL:narrowBand:dictation:completion:
_playbackSource
initWithIdentifier:queue:delegate:
setIsSupportedAndEnabled:
isSupportedAndEnabled
mediaRemoteDeviceInfoRouteIdentifierDidChange:
mediaRemoteDeviceInfoGroupIdentifierDidChange:
fetchAndUpdateMediaRemoteGroupIdentifierForReason:
fetchAndUpdateMediaRemoteRouteIdentifierForReason:
homeKitMediaSystemIdentifier
acquireRelinquishableAssertionWithContext:relinquishmentHandler:
numberOfActiveAssertions
getPendingAndActiveAssertionsWithCompletion:
setCurrentOrUpNextDateInterval:
setIsAudioSessionActive:
setLocalActiveAssertionContexts:
setLocalPendingAssertionContexts:
setRemoteActiveAssertionContexts:
setRemotePendingAssertionContexts:
_handleWillSetAudioSessionActive:
_handleDidSetAudioSessionActive:
setExpirationDuration:
setUserInfo:
relinquishAsertionsPassingTest:context:
_updateMediaRemoteRouteIdentifier:reason:
_updateMediaRemoteGroupIdentifier:reason:
getGroupIdentifierWithCompletion:
logEventWithType:context:contextNoCopy:
_handleAddedLocalAssertion:isFirst:
_handleAcquiredLocalAssertion:isFirst:
_handleAcquiredRemoteAssertion:isFirst:
_handleRelinquishedLocalAssertion:isLast:
_handleRelinquishedRemoteAssertion:isLast:
_handleRemovedLocalAssertion:isLast:
numberOfPendingAndActiveAssertions
_updateCurrentOrUpNextDateInterval:reason:
_endAudioSessionOnAllRemoteDevicesForReason:effectiveDate:
_resetKeepAliveListForReason:
_stopHeartBeat
_tearDownRequestHandlers
homeKitRoomName
setHomeKitRoomName:
_handleUpdatedLocalSystemInfoForReason:
setHomeKitMediaSystemIdentifier:
mediaRemoteGroupIdentifier
setMediaRemoteGroupIdentifier:
mediaRemoteRouteIdentifier
setMediaRemoteRouteIdentifier:
isEqualToDateInterval:
_handleUpdatedCurrentOrUpNextDateIntervalForReason:
_beginAudioSessionOnInRangeRemoteDevicesForReason:effectiveDate:expirationDuration:
_endAudioSessionOnOutOfRangeRemoteDevicesForReason:effectiveDate:
_startHeartBeatWithEffectiveDate:
_qualifiedInRangeDeviceIDs
initWithEffectiveDate:expirationDuration:
_sendBeginAudioSessionRequest:toDeviceWithID:responseHandler:
_addDeviceIDToKeepAliveList:reason:
initWithExpirationDuration:
_sendKeepAudioSessionAliveRequest:toDeviceWithID:responseHandler:
_enumerateKeepAliveListUsingBlock:
_qualifiedOutOfRangeDeviceIDs
_removeDeviceIDFromKeepAliveList:reason:
_sendEndAudioSessionRequest:toDeviceWithID:responseHandler:
_qualifiedDeviceIDs
unionSet:
_heartBeatFired
initWithIdentifier:queue:effectiveDate:expirationDuration:heartBeatInterval:heartBeatHandler:invalidationHandler:
_keepAudioSessionAliveOnRemoteDevicesForReason:expirationDuration:
_handleUpdatedLocalAssertionsForReason:pendingAssertions:activeAssertions:
audioSessionCoordinator:prepareAudioSessionWithContext:
audioSessionCoordinator:releaseAudioSessionWithContext:
assertionCoordinator:didAddAssertion:isFirstAssertion:
assertionCoordinator:didActivateAssertion:isFirstAssertion:
assertionCoordinator:didDeactivateAssertion:isLastAssertion:
assertionCoordinator:didRemoveAssertion:isLastAssertion:
initWithInstanceContext:delegate:
hasActiveAudioSessionAssertions
handleWillSetAudioSessionActive:
handleDidSetAudioSessionActive:
_sendRequestID:request:recipientID:responseHandler:
_registerRequestID:requestHandler:
_unregisterRequestID:
_acquireRemoteAssertionForSenderID:reason:effectiveDate:expirationDuration:error:
_relinquishRemoteAssertionForSenderID:reason:effectiveDate:error:
_updateHomeKitRoomName:reason:
_updateHomeKitMediaSystemIdentifier:reason:
_heartBeat
_currentOrUpNextDateInterval
_audioSessionState
_keepAliveDeviceIDs
_localSystemInfo
_localAssertionCoordinator
_remoteAssertionCoordinator
_hasLoggedAudioSessionCoordinationDisablement
addTcpInfoMetrics:
setPrimarySubflowIface:
setConnectionMethodName:
setConnectionEdgeIDName:
setConnectionEdgeType:
tcpInfoMetricsCount
clearTcpInfoMetrics
tcpInfoMetricsAtIndex:
tcpInfoMetricsType
setOpenInterval:
setHasOpenInterval:
hasOpenInterval
setFirstByteReadInterval:
setHasFirstByteReadInterval:
hasFirstByteReadInterval
setHasAttemptCount:
hasAttemptCount
setHasMetricsCount:
hasMetricsCount
setPingMean:
setHasPingMean:
hasPingMean
setPingCount:
setHasPingCount:
hasPingCount
setUnacknowledgedPingCount:
setHasUnacknowledgedPingCount:
hasUnacknowledgedPingCount
setSubflowCount:
setHasSubflowCount:
hasSubflowCount
setConnectedSubflowCount:
setHasConnectedSubflowCount:
hasConnectedSubflowCount
hasPrimarySubflowIface
setPrimarySubflowSwitchCount:
setHasPrimarySubflowSwitchCount:
hasPrimarySubflowSwitchCount
hasConnectionMethodName
hasConnectionEdgeIDName
hasConnectionEdgeType
setConnectionFallbackReason:
setHasConnectionFallbackReason:
hasConnectionFallbackReason
setTuscanyConnectionDelay:
setHasTuscanyConnectionDelay:
hasTuscanyConnectionDelay
openInterval
firstByteReadInterval
attemptCount
metricsCount
pingMean
pingCount
unacknowledgedPingCount
subflowCount
connectedSubflowCount
primarySubflowIface
primarySubflowSwitchCount
connectionMethodName
connectionEdgeIDName
connectionEdgeType
connectionFallbackReason
tuscanyConnectionDelay
tcpInfoMetrics
setTcpInfoMetrics:
_firstByteReadInterval
_openInterval
_pingMean
_tuscanyConnectionDelay
_attemptCount
_connectedSubflowCount
_connectionEdgeIDName
_connectionEdgeType
_connectionFallbackReason
_connectionMethodName
_pingCount
_primarySubflowIface
_primarySubflowSwitchCount
_subflowCount
_tcpInfoMetrics
_unacknowledgedPingCount
Td,N,V_openInterval
Td,N,V_firstByteReadInterval
TI,N,V_attemptCount
TI,N,V_metricsCount
Td,N,V_pingMean
TI,N,V_pingCount
TI,N,V_unacknowledgedPingCount
TI,N,V_subflowCount
TI,N,V_connectedSubflowCount
T@"NSString",&,N,V_primarySubflowIface
TI,N,V_primarySubflowSwitchCount
T@"NSString",&,N,V_connectionMethodName
T@"NSString",&,N,V_connectionEdgeIDName
T@"NSString",&,N,V_connectionEdgeType
TI,N,V_connectionFallbackReason
Td,N,V_tuscanyConnectionDelay
T@"NSMutableArray",&,N,V_tcpInfoMetrics
_isValidRestrictionsDomainInfo:
_parseInfoDictionary:
_domains
_syncKeys
_clearsDomainObjectsClassName
_lockRestrictedCommands
_connectionNeedsContextCleared
_fetchSyncFlagsOnDisk
_setSyncNeededFlagsForKeys:
_clearSyncNeededFlagsForKeys:
contentsOfDirectoryAtPath:error:
createFileAtPath:contents:attributes:
fetchKeysThatNeedToSync:
setSyncNeededFlagForKeys:
clearFlagsForKeys:
clearAllFlags
_cachedFlags
setItemsByID:
preferredPullingModeForDeviceWithIdentifier:fromGeneration:toGeneration:
getGenerationForDeviceWithIdentifier:completion:
applyIncrementalChanges:fromDeviceWithIdentifier:
applySnapshot:fromDeviceWithIdentifier:
_ad_handleShowNextEventRequestWithCompletionHandler:
_selectedCalendarsForEventStore:
CalDateForNow
dateByAddingWeeks:inCalendar:
initWithStartDate:endDate:
startDate
endDate
predicateForEventsWithStartDate:endDate:calendars:
eventsMatchingPredicate:
compareStartDateWithEvent:
_shouldExcludeEvent:allowAllDayEvents:
_nextEventFromFilteredEvents:
ad_calendarErrorWithCode:
nanoCalendarLaunchURLForEvent:
CalIsBetweenStartDate:endDate:
lastIndex
duration
removeObjectsAtIndexes:
rangeWithStartDate:endDate:
midpoint
CalIsBeforeDate:
calendar
isAllDay
hasAttendees
organizer
isCurrentUser
selfParticipantStatus
shared
deselectedCalendarSyncHashes
calendarsForEntityType:
_calendarIDsForSyncHashes:inCalendars:
calendarIdentifier
selectionSyncIdentifier
indexOfObject:
launchURL
initWithEnvironmentName:namedDelegatePort:queue:
_setEnabledTopics:
topic
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
connection:channelSubscriptionsFailedWithFailures:
_hmConnection
sendSiriCommand:completionHandler:
_targetQueue
_remoteExecute_shouldSendCommandToPrimaryUser:
_remoteExecute_primaryUserDevicesWithTypes:
_remoteExecute_remoteDeviceExecuteSerializedCommand:onPeer:allowsRelay:executionContext:completion:
_remoteExecute_remoteDeviceExecuteSerializedCommand:onDeviceForAssistantId:executionContext:completion:
remoteDevice
setRemoteDevice:
requiresResponseFromRemote
setResponseFromRemote:
suppressResponse
_remoteExecute_remoteDeviceExecuteSerializedCommand:onSpecifiedDeviceTypes:preferredMessagingOption:executionContext:completion:
filterUsingPredicate:
_startRemoteRequest:onPeer:completion:
_startRemoteRequest:onPeer:withContext:completion:
siriCore_serializedAceDataError:
siriCore_requestId
siriCore_setSessionRequestId:
siriCore_supportedByLocalSession
siriCore_supportedByRemoteLimitedSession
_thunkBlock
_barrierBlock
_barrierQueue
T@"NSString",C,N,VaceId
usesManagedStorageForDomain:
fetchSyncSnapshotForInfo:handler:
managedStorageDomains
setManagedStorageDomains:
setFirstUnlockRestrictedCommands:
setControlCenterLockRestrictedCommands:
setRequiresBootMaintenance:
_managedStorageDomains
_firstUnlockRestrictedCommands
_controlCenterLockRestrictedCommands
_requiresBootMaintenance
T@"NSSet",C,N,V_managedStorageDomains
T@"NSArray",C,N,V_firstUnlockRestrictedCommands
T@"NSArray",C,N,V_controlCenterLockRestrictedCommands
TB,N,V_requiresBootMaintenance
T@"<ADServiceDelegate>",W,N,V_delegate
_linkStoreForSysdiagnose
_unlinkStoreForSysdiagnose
_stopHouseKeepingTimer
_addConnection:
_signalConnectionDisruption:
_removeConnection:
_store
_suspendEventsStaging
_resumeEventsStaging
predicateWithBlock:
filteredArrayUsingPredicate:
_publishEventsToObserver:completion:
_beginEventsGrouping
_endEventsGrouping
_beginEventsFuzzingWithStartTime:
_endEventsFuzzingWithEndTime:
emitMessage:timestamp:
_executeDelegateBlockOnAllConnections:completion:
shouldHandleDeliveryStream:
deliverWrappedEvents:
_writeGenericInstrumentation:completion:
initWithEvent:streamUID:dateCreated:speechId:
_mapInstrumentationToLegacyAFAnalyticsEventWrapper:
payload
event
getEventType
setTurnContext:
whichEvent_Type
setEventData:
eventGeneratedRelativeToBootTimeTimestampNs
didObserveEvents:completion:
flushStagedEventsWithReply:
_stopObservingConnectionDisrupted:referenceId:
_observeConnectionDisrupted:observer:referenceId:
_enumerateConnectionsAsServiceDelegates:completion:
_startHouseKeepingTimer
_unstageEvents
contextDataType
_houseKeeperArrived
_processStagedEvents
createSymbolicLinkAtPath:withDestinationPath:error:
observeWithCompletion:
currentEventStreamUID
suspendEventsStaging
resumeEventsStaging
beginEventsFuzzingWithStartTime:
endEventsFuzzingWithEndTime:
boostAllConnections:
storeGenericInstrumentation:completion:
_houseKeepingTimer
_stagedEvents
_connections
_depthOfEventsGrouping
_instrumentationResolver
_observationCompletion
_observerConnection
_isSuspended
_isFuzzing
_isBoostingEventProducers
_currentFuzzingInterval
_fuzzingIntervals
_connectionDisruptedObservers
initWithBundleIdentifier:
setWantsNotificationResponsesDelivered
setNotificationCategories:
addNotificationRequest:withCompletionHandler:
removeDeliveredNotificationsWithIdentifiers:
_clearNotificationWithIdentifier:
configurationForDefaultMainDisplayMonitor
setNeedsUserInteractivePriority:
elements
_snoozeNotifications
setTransitionHandler:
monitorWithConfiguration:
_stopMonitoringUnlockActivity
_isMonitoringUnlockActivity
_startMonitoringUnlockActivity
trigger
userNotificationCenter:willPresentNotification:withCompletionHandler:
userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:
userNotificationCenter:openSettingsForNotification:
_notificationCenter
_responseHandlersByNotificationID
_notificationsToBeSnoozed
_layoutMonitor
rangeOfString:options:
_setContext:forPID:
initWithCollector:pid:connection:
sendContext:
_pid
_collector
_getContextForAppInfo:completion:
_invokeAllCompletionsWithError
_invokeCompletionWithContext:forPID:
_addCompletion:forPID:
getContextForAppInfos:completion:
_hasCompletionForPID:
_completionsByPID
_ad_handleAceDomainSignalRequestWithCompletionHandler:
_ad_preheatableServiceDomainForDomainSignalRequest
_ad_handleAceDomainSignalRequest:completionHandler:
_ad_preheatableDomain
appIdHints
_ad_likelyApplicationBundleIdentifiers
_ad_recordPreheatLaunchOf:
movieRestriction
tvRestriction
appRestriction
_ad_SADHash
initWithOptions:capacity:
getMeCard:
sharedStore
meCard:
addMeCardObserver:
_updateVoice:
_updateRestrictions:
_updateVoiceOverStatus:
_updateItunesStoreIdentifier:
sharedConfiguration
_onMainThreadUpdateCountryCodeWithCountryConfiguration:completion:
_generateAssistantData
_fetchDictationHIPAAMDMStatus:
_dictationIsAllowed
_updateDictationAllowedStatus
_locationRestrictionDidChange:
_currentLocaleDidChange:
_systemTimeZoneDidChange:
_outputVoiceDidChange:
_voiceAssetsUpdated:
_censorSpeechDidChange:
_storeFrontDidChange:
_countryCodeDidChange:
addiTunesObserver
removeiTunesObserver
_notifyObserversOfSAD:
_setAllowExplicitContentAndCensorSpeech:
_notifyObserversOfDictationHIPAAMDMStatus
ams_sharedAccountStore
resetSystemTimeZone
currentLocale
systemTimeZone
setTimeZoneId:
localeIdentifier
_cachedRestrictions
setParentalRestrictions:
setCensorSpeech:
setAllowUserGeneratedContent:
setMediaPlayerExplicitContentDisallowed:
setMediaContentRatingRestrictions:
displayScale
setUiScale:
setTtsVoice:
setMeCards:
setDeviceColor:
setDeviceEnclosure:
setInRetailStoreDemoMode:
preferredLanguages
setFullStorefrontId:
setDebugFlags:
setDeviceCapabilities:
af_aceTemperatureUnit
setVoiceOver:
manualEndpointingThreshold
setHoldToTalkThresholdInMilliseconds:
properties
objectsForKeys:notFoundMarker:
_redactedCopyMeCards:
setAnchor:
assistantDataManager:didUpdateAssistantData:meCards:unredactedAnchor:
assistantDataManager:didUpdateAssistantData:
setSiriDataSharingOptInStatus:
assistantDataManagerDictationHIPAAMDMStatusDidChange
_setDictationIsAllowed:
_fetchDictationAllowedStatus:
isMainThread
updateProvidersForCurrentCountry
_mcQueue
effectiveValueForSetting:
setMovieRestriction:
setTvRestriction:
setAppRestriction:
VSSpeechGender
getVoiceInfoForLanguageCode:name:footprint:gender:type:reply:
inProgressOutputVoice
languages
setInProgressOutputVoice:
ams_activeiTunesAccount
ams_storefront
ams_localiTunesAccount
profileConnectionDidReceiveRestrictionChangedNotification:userInfo:
profileConnectionDidReceivePasscodeChangedNotification:userInfo:
profileConnectionDidReceivePasscodePolicyChangedNotification:userInfo:
profileConnectionDidReceiveProfileListChangedNotification:userInfo:
profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:
profileConnectionDidReceiveDefaultsChangedNotification:userInfo:
profileConnectionDidReceiveAppWhitelistChangedNotification:userInfo:
addressBookManagerDidUpdateData:meCard:
contextCollector:didChangeDisplayScale:
requestAssistantDataUpdate
getiTunesStoreFrontIdentifierWithCompletion:
getMeCardsWithCompletion:
unredactedAnchor
setAllowExplicitContentAndCensorSpeech:
_safeUpdateVoiceOverStatus
_notifyAnnouncementEligibilityObserverVoiceAssetsDidChange
_setAllowExplicitContent:
voiceOverIsActive
setVoiceOverIsActive:
_addressBookManager
_cachedMeCards
_fetchingMeCardGroup
_cachedCensorSpeech
_cachedAllowUserGeneratedContent
_cachedInRetailStoreDemoMode
_cachedCountryCode
_receivedGeoCountryConfigurationResponse
_voiceTriggerEnabled
_cachedVoice
_initialFetchComplete
_cachedAllowsExplicitContent
_cachedContentRatingRestrictions
_cachedSupportsTelephonyCalls
_cachedIsDictationHIPAAMDMEnabled
_cachedIsDictationAllowed
_displayScaleMonitor
_cachedServerFlagsEnabled
_cachedStoreFrontId
_observingiTunesChanges
_cachedSAD
_unredactedAnchor
_voiceOverIsActive
addressBookManager
T@"ADAddressBookManager",R,N,G_addressBookManager,V_addressBookManager
TB,N,V_voiceOverIsActive
userDefaultsKnowledgeStore
enabledForLegacyMetrics
_deliverSerializedWrapper:
deliverWrappedEvent:
report:application:
setApplicationIdentifier:
_knowledgeStore
_enabledForInstrumentationFetched
_enabledForInstrumentation
_applicationIdentifier
TB,R,N,V_enabledForInstrumentation
T@"NSString",C,N,V_applicationIdentifier
saConnectionPolicy
routes
connectionPolicyStatus
cname
componentsWithURL:resolvingAgainstBaseURL:
setHost:
connectionId
_closePeerConnection
_closeNetworkConnection
_establishPeerConnection
_establishNetworkConnectionToURL:connectionId:withPOP:
hasActiveConnection
isEstablishing
_doMetricsBookkeepingForPeerStreamsStart
_waitForPeerData
openConnectionForURL:withConnectionId:initialPayload:completion:
_peerConnectionFailure
_restartConnectionProviders
_peerReadStreamErrorOccurred:
_hasPeerConnection
_hasOrIsEstablishingNetworkConnection
_connectionMetricsWithCompletion:
isReady
_establishNetworkConnectionToURL:connectionId:withPOP:countAgainstFallbacksAllowed:
_networkConnectionProvider
setConnectByPOPMethod:
setStaleInterval:
_doMetricsBookkeepingForNetworkStreamStart
_didEstablishNetworkConnectionForProvider:initialPayload:ofLength:error:
_networkConnectionFailure
_setupStaleNetworkTimerForProvider:
_networkConnectionDidOpen
_waitForNetworkData
_tryToWriteToNetworkConnection
_cancelStaleNetworkTimer
_fallbackWithSafetyNet
_peerConnectionReceivedData:
readData:
_tryToReadPeerStreamHeaderFromData:needsReconnect:
_tryToReadHTTPHeaderIntoMessage:fromData:isComplete:
_insertCompanionSpecificDataIntoHeader:
_prependHeader:toOutputBuffer:
writeData:completion:
_networkConnectionErrorOccurred:
_networkConnectionReceivedData:
_writeDataToPeer:
_writeDataToNetwork:
_prepareForSleep
setTimeUntilOpen:
setTimeUntilFirstByteRead:
setAttemptCount:
setMetricsCount:
connectionProvider:receivedViabilityChangeNotification:
connectionProviderReceivedBetterRouteNotification:
_peerConnectionDidEnd
_networkConnectionDidEnd
_peerProvider
_networkOutputBuffer
_dataHasBeenWrittenToNetwork
_staleNetworkTimerSource
_buffer
_networkURL
_outgoingHTTPHeader
_networkConnectionSequenceNumber
_safetyNetBuffer
_metricsCount
_currentStartTime
_firstStartTime
_currentOpenTime
_firstByteReadTime
_startCount
_networkURLFromPeer
_connectionId
_connectByPOP
_addQueue:heartBeatInterval:timeoutInterval:timeoutHandler:
_removeQueue:
_beginMonitoring
_endMonitoring
initWithQueue:heartBeatInterval:timeoutInterval:timeoutHandler:
startWithQueue:
removeQueue:
_numberOfTransactions
_observersByIdentifier
heartBeatFiredWithQueue:
timeoutDetected
_numberOfOccurrences
_heartBeatInterval
_timeoutInterval
_timeoutHandler
initWithUUID:properties:
_UUID
_properties
T@"NSUUID",R,C,N,V_UUID
T@"NSDictionary",R,C,N,V_properties
setUUID:
setProperties:
ad_OTTModelRepresentation
ad_OTTRequestRepresentation
_ad_getOTTRepresentationWithCompletionHandler:
_initWithChannel:
_ad_OTTRequestRepresentation
_announceNotificationRequestInfoFromNotificationRequest:previousRequest:synchronousBurstIndex:
_announceIncomingCallRequestInfoFromRequest:
_createAnnounceIncomingCallRequest:
_initWithShowUIDuringListening:playAlertBeforeListening:
setRequestCompletionOptions:
_createAnnounceMessageRequestFromNotification:appId:synchronousBurstIndex:
_createAnnounceInHomeRequestFromBundleID:announcementIdentifier:notificationType:synchronousBurstIndex:
_createAnnounceNotificationRequestFromNotification:appId:synchronousBurstIndex:isSameTypeAsLastAnnouncement:
_createAnnounceReminderRequestFromNotification:appId:synchronousBurstIndex:isSameTypeAsLastAnnouncement:appBundleIdOfPreviousAnnouncement:timeSinceLastAnnouncement:
_createAnnounceVoicemailRequestFromNotification:appId:synchronousBurstIndex:isSameTypeAsLastAnnouncement:appBundleIdOfPreviousAnnouncement:timeSinceLastAnnouncement:
_createAnnounceGroupFaceTimeInviteRequestFromNotification:appId:synchronousBurstIndex:isSameTypeAsLastAnnouncement:appBundleIdOfPreviousAnnouncement:timeSinceLastAnnouncement:
announceMessagesRequestFromNotificationIdentifier:fromApp:synchronousBurstIndex:
announceHomeAnnouncementRequestFromApp:withAnnouncementIdentifier:withUserNotificationType:synchronousBurstIndex:
announceNotificationsRequestFromNotification:fromApp:synchronousBurstIndex:isSameTypeAsLastAnnouncement:
announceRemindersRequestFromNotificationIdentifier:fromApp:synchronousBurstIndex:isSameTypeAsLastAnnouncement:appBundleIdOfLastAnnouncement:timeSinceLastAnnouncement:
announceVoicemailRequestForNotification:synchronousBurstIndex:isSameTypeAsLastAnnouncement:appBundleIdOfLastAnnouncement:timeSinceLastAnnouncement:
announceGroupFaceTimeInviteNotification:synchronousBurstIndex:isSameTypeAsLastAnnouncement:appBundleIdOfLastAnnouncement:timeSinceLastAnnouncement:
appMetadata
aceObjectArrayWithDictionaryArray:baseClass:
_groupKeyForSyncInfo:domainObject:
setDomainObjectClass:
setSyncAnchor:
setCount:
syncAnchor
setIdentifierChecksum:
handleSyncChunkInfo:withSyncInfo:completion:
checksums
_checksums
_idCRCChecksums
managerForBundleID:bundlePath:
_datastoreManager
_siriAuthorizationStatusForAppID:
writeLatestVocabularyItems:forIntentSlot:completion:
appBundleID
checkIfSyncSlot:isAllowedWithCompletion:
_triggerUserVocabularySyncAttributingApp:vocabType:
checkPermissionToSyncSlot:forApp:completion:
checkIfAnyUserVocabularyIsBlacklistedForApp:completion:
currentConnection
_requestSiriAuthorization:auditToken:
_appBundleID
_appPath
stopPlayback
_clearRequestCommands
siriCore_isRetryable
_commandRefsOrIsCurrentRequest:
commandRefsRestartCommand:
setLastResponseId:
lastResponseId
siriCore_isRestartable
_canRestartRequest
_objectsToRemapFromRefId:toRefId:retryFullRequest:commandsToRetry:
originalRequestId
beginRetryableRequest:
appendSessionObjectToRequest:
shouldRetryOnConnectionFailure
endRetryableRequestForCommandAceId:refId:
setLastReceivedCommand:
objectsToRetry
retryRequestId
latestMappedRequestId
setNeedsToRetryNakedObjects
nakedObjectsToRetry
clearNakedObjects
setLatestMappedRequestId:
_retryCount
_restartRequest
_requestObjects
_needsToRetryNakedObjects
_nakedObjects
_originalRequest
_latestMappedRequestId
T@"NSString",C,N,V_latestMappedRequestId
initWithBundleIdentifier:allowPlaceholder:error:
appInfoWithApplicationRecord:
_supportsAnnouncementType:forSupportedIntents:forBundleId:onPlatform:
eligibleAnnouncementRequestTypesChanged:onPlatform:
availableAnnouncementRequestTypesChanged:onPlatform:
_requiredBundleIDsForNotificationAnnouncementType:
setCrossDeviceCommandContext:
setHalId:
setFailed:
setAction:
setActionResult:
setHomeKitTarget:
setEnded:
_halDeviceFromContext:proximity:
setSelecteds:
_halDeviceProximityFromProximity:
setDeviceProximity:
_halDeviceFamilyFromInterfaceIdiom:
setDeviceFamily:
_halMediaPlayerStateFromPlaybackState:
setTimeSinceLastMediaPlaybackInSeconds:
_generalizeTimeIntervalsForPrivacy:
setMediaPlayerContext:
firedDate
setTimeSinceAlarmFiredInSeconds:
setAlarmContext:
setTimeSinceTimerFiredInSeconds:
setTimerContext:
heardVoiceTrigger
heardVoiceTriggerMetadata
setTimeSinceVoiceTriggerHeardInSeconds:
setVoiceTriggerContext:
setUnderlyingQueue:
setMaxConcurrentOperationCount:
isActivityAvailable
_setMotionActivity:
startActivityUpdatesToQueue:withHandler:
stopActivityUpdates
stationary
automotive
walking
running
cycling
unknown
confidence
_motionActivity
_motionActivityManager
_opQueue
T@"CMMotionActivity",C,N,S_setMotionActivity:,V_motionActivity
_shouldSpeak
_logShouldSpeakState:
_unregisterForRingerStateNotification
_removeAllSpeechCapturingContextsForReason:
_setBluetoothDevice:
_setRequestOptionsRequireTTS:
relinquishAudioSessionAssertionsWithContext:
adClientConnection_enterRequestGroup:
adClientConnection_leaveRequestGroup
requestHandleCommand:reply:
_handleRequestCompletedWithUUID:error:
aceConnectionWillRetryOnError:
requestRequestedOpenApplicationWithBundleID:URL:reply:
requestRequestedOpenURL:reply:
getBulletinContext:
cacheImage:
extensionRequestWillStartForApplication:
extensionRequestFinishedForApplication:error:
requestRequestedDismissAssistant
quickStopWasHandledWithActions:
acousticIDRequestWillStart
musicWasDetected
acousticIDRequestDidFinishWithSuccess:
setUserActivityInfo:webpageURL:
invalidateCurrentUserActivity
_setServerForcedTTS:
startPlaybackDidFail:
willProcessStartPlayback:intent:completion:
audioSessionWillBecomeActive:
audioSessionDidBecomeActive:
appLaunchFailedWithBundleIdentifier:
_updateShouldSpeak
_registerForRingerStateNotification
_computeShouldSpeak
shouldSpeakChanged:
speechRecordingWillBeginWithInputAudioPowerXPCWrapper:reply:
_addSpeechCapturingContext:
speechRecordingDidBeginOnAVRecordRoute:audioSessionID:reply:
speechRecordingDidChangeAVRecordRoute:isDucking:isTwoShot:speechEndHostTime:reply:
speechRecordingDidEndWithReply:
speechRecordingDidCancelWithReply:
speechRecordingDidFail:reply:
willStopRecordingWithSignpostID:
speechRecognized:
speechRecognizedPartialResult:
speechRecordingWillBeginRecognitionUpdateForTask:
speechRecognitionDidFail:
speechRecordingStartpointDetectedWithReply:
speechRecordingPerformTwoShotPromptWithType:reply:
_setADShouldSpeak:
audioSessionDidBeginInterruptionWithUserInfo:
audioSessionDidEndInterruption:userInfo:
audioSessionIDChanged:
audioPlaybackRequestWillStart:
audioPlaybackRequestDidStart:
audioPlaybackRequestDidStop:error:
setDeviceID:
setValue:forKey:completionHandler:
_setRequestCompletion:
sendSiriRequestStartedEventWithBundleIdentifier:context:userInfo:
_updateSpeechRequestOptions:
getAudioSessionIDWithCompletion:
_metrics_recordCancellationMetrics
sharedCache
cacheableObjectForIdentifier:
serializeCacheableObjects:completion:
adGetBulletinContext:
adAcousticIDRequestWillStart
adMusicWasDetected
adAcousticIDRequestDidFinishSuccessfully:
adQuickStopWasHandledWithActions:
preheatWithStyle:forOptions:
boostedPreheatWithStyle:completion:
setConfiguration:
willPresentUIWithReply:
didDismissUI
willPresentUsefulUserResultAtDate:
startRequestWithInfo:completion:
startRecordingForPendingSpeechRequestWithOptions:requestId:completion:
startSpeechPronunciationRequestWithOptions:context:completion:
startAcousticIDRequestWithOptions:context:completion:
continuePendingSpeechRequestWithId:fromTimestamp:
cancelRequestForReason:withError:
rollbackRequest
requestShouldSpeakStateWithReply:
requestStateUpdateWithReply:
performGenericAceCommand:interruptOutstandingRequest:reply:
recordUIMetrics:
recordCancellationMetrics
getSerializedCachedObjectsWithIdentifiers:completion:
getRemoteClockTimerSnapshotWithCompletion:
startAudioPlaybackRequest:options:reply:
reportIssueForError:type:context:
reportIssueForError:type:subtype:context:
reportIssueForType:subtype:context:
_listInstalledServicesWithReply:
_pingServiceForIdentifier:reply:
_sendLargeData:reply:
_performCommandDictionary:forBundleIdentifier:reply:
_performTaskCommandDictionary:forBundleIdentifier:reply:
_broadcastCommandDictionary:
_fetchAppContextForApplicationInfo:reply:
_clearAssistantInfoForAccountIdentifier:
_barrierWithReply:
_requestBarrierWithReply:
_startSpeechWithURL:isNarrowBand:
adAceConnectionWillRetryOnError:
_requestOptions
_requestUUID
_pendingRequestId
_pendingRequestTimestamp
_numberOfPresentedUIs
_presentedUIReply
_presentedUITransaction
_hasCachedADShouldSpeak
_cachedADShouldSpeak
_requestOptionsRequireTTS
_serverIsForcingTTS
_combinedShouldSpeakState
_isConnected
_bluetoothDevice
_speechCapturingContexts
_longLivedConnectionABCTimer
resultOptions
ad_transcriptionResultRequiresAddressBook
ad_transcriptionResultWithAddressBookManager:
_ad_personContactHandlesWithAddressBookManager:
emails
emailAddress
phones
number
resultData
placeResultType
forwardGeoProtobuf
contactId
setAddressBookID:
addressLabel
setAddressLabel:
contactName
setContactName:
_continuePendingSpeechRequestFromTimestamp:
_removeAllAudioSessionAssertionsForReason:
_invokeRequestCompletion
releaseAudioSessionOnRecordingCompletion
speechRecordingWillBeginWithInputAudioPowerXPCWrapper:
speechRecordingDidBeginWithOptions:sessionUUID:sessionRequestUUID:
_speechRecordingDidFinish
speechRecordingDidEnd
speechRecordingDidCancel
speechRecordingDidFail:
af_speechPhrases
af_speechUtterances
af_correctionContext
audioAnalytics
af_audioAnalytics
speechDidRecognizePhrases:utterances:usingSpeechModel:correctionContext:audioAnalytics:
speechRecognitionDidFinishWithError:
speechDidRecognizePartialResult:
voiceSearchResults
recognitionText
stable
speechDidReceiveSearchResults:recognitionText:stable:final:
speechDidRecognizeTokens:usingSpeechModel:
interpretations
appendString:
ad_transcriptionResults
speechDidRecognizeTranscriptionObjects:usingSpeechModel:
pronunciationData
ttsPronunciations
setPhonemeSuggestions:
speechDidFinishWritingAudioFile:error:
speechDidDetectLanguage:confidenceScores:isConfident:
languageDetectorFailedWithError:
speechDidRecognizeMultilingualSpeech:
speechDidBeginLocalRecognitionWithModelInfo:
setDetectUtterances:
_updateDictationOptions:
voiceSearchTypeOptions
_dictationWillStartWithLanguageCode:options:speechOptions:xpcconnection:
audioFileHandle
anonymousListener
endpoint
_updateDictationOptionsForOnDeviceDictation:language:
sendDictationRequestStartedEventWithBundleIdentifier:context:userInfo:
_startDictationWithLanguageCode:options:speechOptions:xpcconnection:
finishAudio
languageDetectorSetMostRecentRecognitionLanguage:
setPreheatLanguage:
setIsTest:
modelOverrideURL
setPreheatTestModelPath:
_metrics_recordFailureMetricsForError:
_metrics_awdRequestEnd
taskHint
offlineLanguage
recognitionOverrides
fieldLabel
_localSpeechRecognizerSupportingBackground:
originalAudioFileURL
farField
maximumRecognitionDuration
initWithLanguage:requestIdentifier:dictationUIInteractionIdentifier:task:loggingContext:applicationName:profile:overrides:modelOverrideURL:originalAudioFileURL:codec:narrowband:detectUtterances:censorSpeech:farField:secureOfflineOnly:shouldStoreAudioOnDevice:continuousListening:shouldHandleCapitalization:isSpeechAPIRequest:maximumRecognitionDuration:endpointStart:inputOrigin:location:jitGrammar:deliverEagerPackage:disableDeliveringAsrFeatures:
startSpeechRecognitionWithParameters:didStartHandler:
addAudioPacket:
reportIssueForError:type:subtype:context:processIdentifier:walkboutStatus:triggerForIDSIdentifiers:
isOnDeviceDictationForced
preferOnlineRecognitionEnabled
preferOnDeviceRecognition
forceOfflineRecognitionEnabled
setForceOfflineRecognition:
setSecureOfflineOnly:
continuousListening
utteranceDetectionEnabled
setContinuousListening:
instanceUUID
speechDidProcessAudioDuration:
speechDidRecognizePackage:
localSpeechRecognizer:didSelectRecognitionModelWithModelProperties:
localSpeechRecognizer:didRecognizeTokens:
localSpeechRecognizer:didProcessAudioDuration:
localSpeechRecognizer:didRecognizeRawEagerRecognitionCandidate:
localSpeechRecognizer:didRecognizePackage:
localSpeechRecognizer:didCompletionRecognitionWithStatistics:error:
localSpeechRecognizer:didProduceEndpointFeaturesWithWordCount:trailingSilenceDuration:eosLikelihood:pauseCounts:silencePosterior:processedAudioDurationInMilliseconds:
localSpeechRecognizer:didProduceLoggablePackage:
_addAudioSessionAssertion:
localSpeechRecognizer:didRecognizePhrases:utterances:
continuePendingSpeechRequestFromTimestamp:
_usingLocalSpeechRecognizer
_waitingForSpeechRecognition
_waitingForStructuredResultsOrVoiceSearch
_waitingForAudioFile
_waitingForKeyboardVisibleCheck
_pendingSpeechRequestListener
_pendingSpeechRequestConnection
_pendingSpeechRequestContinue
_disconnected
_isDetectingUtterances
_shouldFinalizeRequestOnNextFinalResult
_didFinalizeUtteranceDetectionRequest
_audioSessionAssertions
mostElevatedApplicationStateForPID:
setCall:
_call
T@"AFSiriIncomingCall",C,N,V_call
_initWithInstanceContext:
supportsAudioPowerUpdate
initWithProvider:queue:frequency:delegate:
initWithAudioSessionController:
_currentSpeechCaptureSource
_fetchAssetsForLanaugeOrEnablementNotification:
_speechRecorder
currentVTSatScore
stopAllRequestsSynchronously
_updateRecordRoute:andDeviceIdentifier:
_supportsVolumeService
_interactiveLocalSpeechRecognizer
resetDESWithCompletion:
writeDESRecord
_dispatchUpdateSpeechProfileForNextLanguage
endUpdate
_cleanUpDelegateInfo
_createNewXPCWrapper
_updateSpeechState:
_tellDelegateSpeechReceivedLastAudioBufferWithEndpointMode:totalPacketCount:endpointerMetrics:
_tellDelegateSpeechFailedWithError:
_tellDelegateSpeechCanceled
_lastAudioBufferReceivedWithEndpointMode:totalPacketCount:endpointerMetrics:
_tellDelegateSpeechFinished
_releaseSession
codecIsNarrowband
shouldHandleCapitalization
inlineItemList
preferOnlineRecognition
vendorId
productId
_detectOnDeviceDictationOrchestrationMismatchForLanguage:initialLanguage:eligibleForOnDeviceDictation:modelType:onDeviceRequest:context:
_tellDelegateSpeechStartedWithRecordingInfo:
_speechCodecError
_cancelRecordingWithError:suppressAlert:
_tellDelegateUpdateAudioInfo:
_tellDelegateSpeechWillStopRecordingWithSignpostID:
_recordingStoppedWithError:totalPacketCount:endpointMode:endpointerMetrics:
_tellDelegateAboutSpeechPackets:atTimestamp:count:
_tellDelegateAboutFingerprint:duration:
_tellDelegateMusicWasDetected
_tellDelegateEndpointWasDelayedForMusic
_tellDelegateAudioFileDidFinish:error:
_tellDelegateSpeechStartpointWasDetectedAtTime:
_tellDelegateSpeechEndpointWasDetectedAtTime:
_tellDelegateToPerformTwoShotPromptWithType:completion:
_tellDelegateQuickStopWasRequested
_tellDelegateShutdownUIWasRequested
_fetchSmartSiriVolume:
_updateSiriOutputVolume:completion:
_tellDelegateWillSetAudioSessionActive:
_tellDelegateDidSetAudioSessionActive:
_tellDelegateDidDetectLanguage:confidenceScores:isConfident:
_prepareAudioSystemWithContext:audioSessionAssertion:completion:
_volumeService
_recordingInfo
fetchRecordingInfo
_tellDelegateAboutInputAveragePower:peak:
resetLocalRecognizer
getOfflineAssetStatusIgnoringCache:assetType:withDetailedStatus:withCompletion:
eagerlyInitializeAudioRecording
skipPersonalizedASR
preheatTestModelPath
preheatLanguage
preheatSpeechRecognitionWithLanguage:modelOverrideURL:
fetchAudioSessionID
setAudioSessionID:
_addRecordStoppedCompletion:
performBlockAfterAlerts:timeout:
prepareSpeechCaptureWithOptions:error:
_startFixedPriorityCaptureForMode:options:sessionUUID:
startContext
initWithSessionUUID:turnIdentifier:
_startCaptureForMode:options:context:
_badStateError
prepareForMode:
isMediaPlaying
setMediaPlaybackVolume:
_updateCapturingStateWithOptions:
recordingInfoForPreheatWithEvent:
_tellDelegateSpeechShouldPreheatWithRecordingInfo:
_tellDelegateSpeechRecognitionUpdateWillBegin
acousticIdEnabled
setAudioFileType:
setAudioFileHandle:
speechRecordingEventListeningEndpoint
setSpeechRecordingEventListeningEndpoint:
disableInputAudioPowerUpdate
_tellDelegateSpeechWillBeginWithTimestamp:isFromFile:isAudioPowerUpdateDisabled:
startSpeechCaptureWithContext:willStartHandler:error:
isInitialBringUp
logTimeToBeepWithDuration:
beginUpdate
reloadSmartSiriVolume
suppressUtteranceGradingIfRequired
_speechCompressor
stopContext
_stopSpeechCaptureWithOptions:
suppressStopAlert
stopRecordingHostTime
setSuppressInterruptionEndedNotifications:
_endSessionIfIdle
_cancelRecordingIfNeededAndEndSessionWhenIdleWithCompletion:
speechProfileDataLastModifiedDataForLanguage:
_requestSpeechProfileUpdateForLanguages:
_updateSpeechProfileForLanguages:
_addLanguageUpdateToQueue:
speechCapturingDidUpdateRecordingInfo:
speechCapturingDidReceiveLastAudioBufferWithEndpointMode:totalPacketCount:endpointerMetrics:
speechCapturingWillStopRecording
speechCapturingWillStopRecordingWithSignpostID:
speechCapturing:didReceiveFingerprint:duration:
speechCapturingDidDetectMusic:
speechCapturingDidDelayEndpointForMusic:
speechCapturing:didFinishWritingAudioFile:error:
speechCapturing:didDetectStartpointAtTime:
speechCapturing:didDetectEndpointAtTime:
speechCapturing:performTwoShotPromptWithType:completion:
speechCapturingDidRequestQuickStop:
speechCapturingDidRequestShutdownUI:
speechCapturingDidRequestUpdateSiriOutputVolume:
speechCapturing:willSetAudioSessionActive:
speechCapturing:didSetAudioSessionActive:
speechCapturing:didInterruptAudioSession:
speechCapturing:didLoseAudioSessionOwnerOrMediaServices:
speechCapturing:didDetectLanguage:confidenceScores:isConfident:
speechCapturing:languageDetectorDidFail:
speechCapturingDidProvideConfidenceScores:classification:classifiedUser:unknownUserScore:duration:version:thresholdingType:assetVersion:
getRecordingInfoUsingBlock:
getRecordingInfo
audioPowerUpdaterDidUpdate:averagePower:peakPower:
asrBridgeReceivedPartialResult:language:tokens:
asrBridgeReceivedFinalResult:speechPackage:sessionUUID:
asrBridgeReceivedEagerRecognitionCandidate:rawRecognitionResult:duration:sessionUUID:
isLocallyRecognizingInSiriMiniMode
isCapturing
stopSpeechCaptureIfFingerprintingOnlyWithOptions:
stopFingerprintingForSuccess:
initialDictationLanguage
primaryDictationLanguage
setInlineItemList:
audioPowerUpdater
_localSpeechRecognizerTask
_profileUpdateDelayTimer
_profileUpdateCoalescingTimer
_profileUpdateIsActive
_profileUpdateLanguageQueue
_profileUpdateLanguageSet
_lastSpeechProfileUpdateForPortrait
_speechState
_shouldTalkToDelegate
_capturingMode
_capturingContext
_recordingError
_recordStartedCompletion
_recordStoppedCompletion
_releasesAudioSessionWhenRecordingStopped
_prepareAudioSystemTransactionCount
_releasesAudioSessionWhenPrepareAudioSystemDone
_speechLog
_audioSessionController
_currentCapturing
_playbackSimulator
_audioPlaybackService
_context
_isDriving
_isAudioSessionLikelyActive
_isReleaseAudioSessionRequired
_hasPreparedAudioSystemForPlayback
_recordRoute
_hasFetchedSmartSiriVolume
_hasUpdatedSiriOutputVolume
_dirtySiriOutputVolumeHostTime
_hasReceivedLastAudioBuffer
_initialDictationLanguage
_primaryDictationLanguage
_dictationLanguages
_inlineItemList
_audioPowerUpdater
_audioSessionCoordinator
T@"NSString",C,N,V_initialDictationLanguage
T@"NSString",C,N,V_primaryDictationLanguage
T@"NSArray",C,N,V_dictationLanguages
T@"AFDictationOptions",C,N,V_dictationOptions
T@,&,N,V_context
TB,N,V_isDriving
T@"NSArray",C,N,V_inlineItemList
T@"AFAudioPowerUpdater",R,N,V_audioPowerUpdater
T@"ADAudioSessionCoordinator",R,N,V_audioSessionCoordinator
T@"<AFAudioSessionAssertionAcquisitionService>",R,N
T@"CSAudioSessionController",R,N,V_audioSessionController
T@"CSSiriAudioPlaybackService",R,N,V_audioPlaybackService
T@"<ADVolumeTracking>",R,N
T@"<ADVolumeServiceProviding>",R,N
T@"<CSSiriRecordingInfoProviding>",R,N
_requestQueue
_clearTriggerlessUserReplyTimer
_sharedCommandCenter
_clearRequestState
_handleAnnouncementRequest:
_handleAnnounceNotificationRequest:
_handleAnnounceIncomingCallRequest:
isAnnounceGroupFaceTimeInviteEnabled
laterDate:
isEqualToDate:
_canAnnounceInCarPlay
_startAnnouncementRequest:
_completeNotificationsWithSuccess:forReason:
_changeCurrentStateToState:
_handleNotification:onPlatform:completion:
_cancelCurrentRequestWithReason:
_startTimerToResetStateFrom:
_clearCurrentNotificationTimer
requestInfoFromAnnouncementRequest:previousRequest:synchronousBurstIndex:
_startAnnouncementRequestWithRequestInfo:
_startRequestDelayManagerIfNeededForRequest:completion:
_deactivateForReason:source:event:completion:
_deactivateNotificationAnnouncementRequestForReason:notification:sourceAppId:platform:completion:
_deactivateCarPlayNotificationAnnouncementRequestForReason:notification:sourceAppId:completion:
_withdrawalAnnouncementRequestForNotification:completion:
isAnnounceMessagesInCarPlayEnabled
isAnnounceNotificationsEnabled
_startTriggerlessFollowupRequestWithRequestDelayManager:delayType:
_adCallStateChangedCallIncoming:
audioPlaybackService:willStartRequest:
audioPlaybackService:didStartRequest:
audioPlaybackService:didStopRequest:error:
voicePromptStyleDidChange:
_voicePromptStyleDidChange:
_currentNotificationTimer
_stateTimer
_triggerlessUserReplyTimer
_triggerlessUserReplyTimerTimedOut
_triggerlessRequestEnteredListeningState
_currentRequestDelayManager
_previousRequest
_synchronousBurstIndex
bundleInfoValueForKey:PID:
messageDictionary
setPredefinedServer:
setGroup:
setSpeechIdentifier:
setPeerAssistantIdentifier:
setPeerSpeechIdentifier:
setPeerUserAgentString:
_saveAccount:setActive:
deleteAllSamplingData
initWithLanguage:assetType:
_localSpeechRecognizer
fetchAssetsForAssetConfig:completion:
purgeInstalledAssetsExceptLanguages:assetType:error:
deleteAllDESRecordsForDictationPersonalization
setFileLoggingIsEnabled:
setCardLoggingEnabled:
setCommandLoggingEnabled:
setAVVCLoggingEnabled:
synchronizeLogPreferencesDomain
synchronizeAVVCPreferencesDomain
setConfigOverrides:
configOverrides
addObserverForName:object:queue:usingBlock:
runServiceMaintenanceWithCompletion:
archivedDataWithRootObject:requiringSecureCoding:error:
getExperimentForConfigurationIdentifier:completion:
synchronizeExperimentConfigurationsIfApplicableWithCompletion:
resetExperimentForConfigurationIdentifier:completion:
currentNetworkActivityTokenWithCompletion:
audioSessionCoordinator
initWithLanguageCode:gender:isCustom:
genderForVSSpeechGender:
footprint
contentVersion
masteredVersion
initWithLanguageCode:gender:isCustom:name:footprint:contentVersion:masteredVersion:
getLocalVoiceAssets:
initWithDelegate:instanceUUID:
getOfflineAssetStatusIgnoringCache:assetType:withCompletion:
updateSpeechProfileWithLanguage:modelOverridePath:completion:
createSpeechProfileWithLanguage:modelOverridePath:JSONData:completion:
setOfflineDictationProfileOverridePath:
setText:
setExpectedSpeakerSharedUserID:
setExpectedSpeakerConfidenceScore:
setNonspeakerConfidenceScores:
setAudioFileURL:
setNotifyState:
sharedServer
replayWithFileURL:completion:
_createMockServerIfNeededAndSetActiveWithCompletion:
handoffOriginDeviceName
setHandoffOriginDeviceName:
audioPlaybackService
startRequest:options:completion:
stopRequest:immediately:
stopAllRequests:completion:
setMultiUserIsOnboardingDevice:
accessStoreUsingBlock:
getConfigurationsWithCompletion:
getContextWithCompletion:
sharedWirelessSplitterSessionObserver
startObserving
stopObserving
donateAnnounceNotificationsInCarPlaySettingsChange:
resetSessionsAtNextRequestBoundary
_postWatchNotificationWithContext:withError:
initWithBlock:defaultValue:
invokeWithValue:
_setOnDeviceDictationAvailableAlertPresentedLocal:
successTitle
successBody
successButtonText
errorTitle
errorBody
errorButtonText
_serviceDelegate
syncVerificationPartialResult:
syncVerificationServerReport:
fetchSupportedLanguagesWithReply:
retrieveAccountMessageDictionariesWithReply:
saveAccountWithMessageDictionary:setActive:
_shutdownSessionIfIdle
_killDaemon
barrierWithReply:
_setSyncNeededForReason:
_clearSyncNeededForKey:
_syncDataWithAnchorKeys:forceReset:reason:reply:
_fetchPeerData:
_setSyncVerificationNeededAndFullReportNeeded:shouldPostNotification:completion:
_runServiceMaintenance
getAvailableVoicesIncludingAssetInfo:completion:
setLanguage:withCompletion:
setLanguage:outputVoice:withCompletion:
getOfflineAssistantStatusWithCompletion:
getOfflineDictationStatusWithCompletion:
updateOfflineSpeechProfileWithLanguage:modelOverridePath:completion:
createOfflineSpeechProfileWithLanguage:modelOverridePath:JSONData:completion:
setOfflineDictationProfileOverridePath:completion:
startUIRequestWithText:completion:
startUIRequestWithInfo:completion:
startUIRequestWithSpeechAudioFileURL:
startMultiUserUIRequestWithText:expectedSpeakerSharedUserID:expectedSpeakerConfidenceScore:nonspeakerConfidenceScores:completion:
dismissUI
startUIMockServerRequestWithReplayFileURL:completion:
getPeerIdentifiers:
startAudioPlaybackRequest:options:completion:
stopAudioPlaybackRequest:immediately:
stopAllAudioPlaybackRequests:
setEnableAssistantLogging:
setSupplementalLanguageDictionary:forProduct:completion:
setSupplementalLanguages:forProduct:forBuildVersion:completion:
getSupplementalLanguagesDictionary:
getSupplementalLanguagesModificationDate:
getSupplementalLanguageDictionaryForProduct:completion:
getSupplementalLanguagesForProduct:forBuildVersion:completion:
fetchEventRecordsFromAnalyticsStoreAtPath:completion:
purgeAnalyticsStoreWithCompletion:
resetAnalyticsStoreWithCompletion:
sendMetricsToServerWithCompletion:
fetchExperimentConfigurationsWithCompletion:
fetchExperimentContextWithCompletion:
disableAndDeleteCloudSyncWithCompletion:
getDevicesWithAvailablePHSAssetsForLanguage:completion:
getDevicesWithAvailablePHSAssetsOnDeviceCheck:
getStereoPartnerLastMyriadWinDate:
getStereoPairState:
setConfigOverrides:completion:
configOverrides:
getSharedCompanionInfo:
getContextCollectorsInfoWithCompletion:
setHardcodedBluetoothProximity:
getCapabilitiesDataFromReachableDevicesWithCompletion:
getProximityTuplesWithCompletion:
hasEverSetLanguageCodeWithCompletion:
setSiriOutputVolume:forAudioRoute:completion:
getBluetoothDeviceInfoWithAddress:completion:
getBluetoothDeviceInfoWithUID:completion:
getConnectedBluetoothDeviceInfoArrayWithCompletion:
startObservingBluetoothWirelessSplitterSession
stopObservingBluetoothWirelessSplitterSession
addMultiUserUser:sharedId:loggableSharedId:enrollmentName:isPrimary:completion:
removeMultiUserUser:completion:
removeMultiUserUserWithSharedUserId:completion:
showMultiUsers:
forceMultiUserSync:download:completion:
getSharedUserID:
fetchMultiUserVoiceIdentificationSetting:
homeOnboardingFlowInvoked:completion:
setNanoAssistantEnabled:withCompletion:
setNanoDictationEnabled:withCompletion:
setNanoPhraseSpotterEnabled:withCompletion:
setNanoRaiseToSpeakEnabled:withCompletion:
setNanoUseDeviceSpeakerForTTS:withCompletion:
setNanoTTSSpeakerVolume:withCompletion:
setNanoOutputVoice:withCompletion:
setNanoLanguage:withCompletion:
setNanoCrownActivationEnabled:withCompletion:
setNanoSiriDataSharingOptInStatus:withCompletion:
clearSpokenNotificationTemporarilyDisabledStatus
getSpokenNotificationIsAlwaysOpportuneWithCompletion:
setSpokenNotificationIsAlwaysOpportune:
getSpokenNotificationShouldAnnounceAllNotificationsWithCompletion:
setSpokenNotificationShouldAnnounceAllNotifications:
getSpokenNotificationShouldSkipTriggerlessRepliesWithCompletion:
setSpokenNotificationShouldSkipTriggerlessReplies:
setSpokenNotificationProxCardSeen:
getAnnounceNotificationsTemporarilyDisabledEndDateForPlatform:completion:
setAnnounceNotificationsTemporarilyDisabledUntil:platform:
getAnnounceNotificationsTemporarilyDisabledEndDateForApp:platform:completion:
setAnnounceNotificationsTemporarilyDisabledUntil:forApp:platform:
getAnnounceNotificationsInCarPlayTemporarilyDisabledWithCompletion:
setAnnounceNotificationsInCarPlayTemporarilyDisabled:
clearAnnounceNotificationsInCarPlayTemporarilyDisabled
getAnnounceNotificationsInCarPlayTypeWithCompletion:
setAnnounceNotificationsInCarPlayType:
clearAnnounceNotificationsInCarPlayType
setOpportuneSpeakingEdgeDetectorSignalOverride:
clearOpportuneSpeakingEdgeDetectorSignalOverride
getCurrentNWActivityIDWithCompletion:
getAudioSessionCoordinationSnapshotWithCompletion:
setSiriDataSharingOptInStatus:completion:
getSiriDataSharingOptInStatusWithCompletion:
setSiriDataSharingOptInAlertPresented:completion:
shouldSuppressSiriDataSharingOptInAlertWithCompletion:
deleteSiriHistoryWithContext:withCompletion:
setOnDeviceDictationAvailableAlertPresented:
setSiriDesignModeEnabled:completion:
siriDesignModeIsEnabled:
getCurrentRequestIsWatchAuthenticatedWithCompletion:
triggerABCForType:subType:context:completionHandler:
getAssistantIsEnabledForDeviceWithSiriInfo:withCompletion:
adSyncVerificationPartialResult:
adSyncVerificationServerReport:
_appIdentifierfromConnection:
_serviceDelegateWithErrorHandler:
initWithDeviceIDPair:proximity:observationDate:
_deviceIDPair
_observationDate
T@"NSSet",R,C,N,V_deviceIDPair
Ti,R,N,V_proximity
T@"NSDate",R,C,N,V_observationDate
setDeviceIDPair:
setObservationDate:
addPairs:
pairsCount
clearPairs
pairsAtIndex:
pairsType
pairs
setPairs:
_pairs
T@"NSMutableArray",&,N,V_pairs
hasKey
hasValue
_key
_value
T@"NSString",&,N,V_key
T@"NSString",&,N,V_value
_startObservingSystemVolumes
_fetchSystemVolumes
_startObservingSystemControllerLifecycle
_fetchSmartSiriVolume
_updateSiriVolume:completion:
_stopObservingSystemControllerLifecycle
_stopObservingSystemVolumes
deviceSetupFlowBeginDate
deviceSetupFlowEndDate
_updateSiriVolumeIfNeeded
outputVolume
adAVSystemControllerDidChange:
initWithQueue:instanceContext:speechController:
fetchSmartSiriVolume
updateSiriOutputVolume:completion:
waitUntilSiriOutputVolumeUpdatesAfterTimestamp:withTimeout:block:
systemVolumeChanged:
_handleSystemVolumeChangeForCategory:volume:audioCategory:reason:
_setNeedsUpdateSiriVolume
_mediaPlaybackVolume
_speechController
_isSmartSiriVolumeAvailable
_volumesByCategory
_smartSiriVolume
_needsUpdateSiriVolume
_lastSiriVolumeUpdateTimestamp
_pendingBlocks
_deviceSetupFlowSiriVolume
isSmartSiriVolumeAvailable
_ad_voiceInfo
_ad_setVoiceInfo:
T@"AFVoiceInfo",&,N,S_ad_setVoiceInfo:
_ad_dictionaryRepresentation
_ad_keyValueDictionaryWithDictionary:
T@"ADSharedData",C,N,S_ad_setData:
T@"AFRequestInfo",C,N,S_ad_setRequestInfo:
domainItem
_saCommandIgnored:
_sendLoadAssistant
siriConnection:didEncounterError:
headsetAddress
remoteDeviceUID
_fetchLostModeState
_isLostModeActive
_wirelessSplitterSession
_observerCount
_publisher
setSearchTypes:
voiceSearchHeaderFields
setHeaders:
voiceSearchQueryParameters
setQueryParameters:
setFieldLabel:
fieldIdentifier
setFieldId:
requestIdentifier
keyboardType
setKeyboardType:
setPostfixText:
setPrefixText:
keyboardIdentifier
setKeyboardIdentifier:
returnKeyType
setKeyboardReturnKey:
setEnablePartialResults:
alternativeSelectionCount
setAlternativeSelectCount:
characterModificationCount
setCharacterChangeCount:
correctedText
setCorrectionText:
setCorrectionSource:
ad_setAFSpeechEvent:
setAudioSource:
setAudioDestination:
setDeviceIdentifier:
modelName
setDeviceModel:
dspStatus
setDspStatus:
setHeadsetAddress:
headsetName
setHeadsetName:
headsetId
deviceModel
setProductId:
setVendorId:
setTriggeredTwoShotBorealis:
recordingInfo
deviceRingerSwitchState
setRingerSwitchOff:
audioAlertStyle
setAlertType:
firstBufferTimestamp
homeButtonDownEventTime
setButtonDowntime:
startRecordingTimestamp
setActivationTime:
setZeroLatencyLaunch:
activationAlertStartTimestamp
setActivationAudioAlertStartTime:
setActivationHapticAlertStartTime:
setRecordingInfo:
useStreamingDictation
setWasLaunchedForRequest:
endpointerModelVersion
setClientModelVersion:
packets
packetNumber
setEndpoint:
featuresAtEndpoint
setFeaturesAtEndpoint:
serverFeatureLatencyDistribution
setServerFeatureLatencyDistribution:
setTotalAudioRecorded:
userFacingReasonTitle
userFacingReasonDescription
ad_shouldClassLogToMetrics
T@"SABaseCommand",&,N,Sad_setParentRequest:
ad_shouldUseExtendedFlowTimeout
speakableText
isDeviceOwnedByCurrentUser
mediaSystemIdentifier
mediaRouteIdentifier
setMediaSystemIdentifier:
setRapportEffectiveIdentifier:
setHomeKitAccessoryIdentifier:
setMediaRouteIdentifier:
locallyPairedPeerInfo
setDeviceOwnedByCurrentUser:
idsFirstRoutableDestination
setAirPlayRouteIdentifiers:
preferredMessagingOptionsForCommands
setPreferredMessagingOptionsForCommands:
_deviceOwnedByCurrentUser
_idsIdentifier
_name
_idsDeviceUniqueIdentifier
_idsFirstRoutableDestination
_airPlayRouteIdentifiers
_rapportEffectiveIdentifier
_homeKitAccessoryIdentifier
_mediaSystemIdentifier
_roomName
_preferredMessagingOptionsForCommands
T@"NSString",R,C,N,V_idsIdentifier
T@"NSString",R,C,N,V_name
T@"NSDictionary",R,C,N
T@"NSString",C,N,V_idsDeviceUniqueIdentifier
deviceOwnedByCurrentUser
TB,N,GisDeviceOwnedByCurrentUser,V_deviceOwnedByCurrentUser
T@"NSString",C,N,V_assistantIdentifier
T@"NSString",C,N,V_idsFirstRoutableDestination
T@"NSArray",C,N,V_airPlayRouteIdentifiers
T@"NSString",C,N,V_rapportEffectiveIdentifier
T@"NSString",C,N,V_homeKitAccessoryIdentifier
T@"NSString",C,N,V_mediaSystemIdentifier
T@"NSString",C,N,V_roomName
TQ,N,V_preferredMessagingOptionsForCommands
T@"NSString",C,N,V_userInterfaceIdiom
T@"NSString",C,N,V_aceVersion
hostTime
payloadBeginAudioSessionRequest
payloadBeginAudioSessionResponse
payloadKeepAudioSessionAliveRequest
payloadKeepAudioSessionAliveResponse
payloadEndAudioSessionRequest
payloadEndAudioSessionResponse
initWithHostTime:type:payloadBeginAudioSessionRequest:payloadBeginAudioSessionResponse:payloadKeepAudioSessionAliveRequest:payloadKeepAudioSessionAliveResponse:payloadEndAudioSessionRequest:payloadEndAudioSessionResponse:
_hostTime
_payloadBeginAudioSessionRequest
_payloadBeginAudioSessionResponse
_payloadKeepAudioSessionAliveRequest
_payloadKeepAudioSessionAliveResponse
_payloadEndAudioSessionRequest
_payloadEndAudioSessionResponse
TQ,R,N,V_hostTime
T@"ADAudioSessionCoordinationMessageBeginAudioSessionRequest",R,C,N,V_payloadBeginAudioSessionRequest
T@"ADAudioSessionCoordinationMessageBeginAudioSessionResponse",R,C,N,V_payloadBeginAudioSessionResponse
T@"ADAudioSessionCoordinationMessageKeepAudioSessionAliveRequest",R,C,N,V_payloadKeepAudioSessionAliveRequest
T@"ADAudioSessionCoordinationMessageKeepAudioSessionAliveResponse",R,C,N,V_payloadKeepAudioSessionAliveResponse
T@"ADAudioSessionCoordinationMessageEndAudioSessionRequest",R,C,N,V_payloadEndAudioSessionRequest
T@"ADAudioSessionCoordinationMessageEndAudioSessionResponse",R,C,N,V_payloadEndAudioSessionResponse
setHostTime:
setPayloadBeginAudioSessionRequest:
setPayloadBeginAudioSessionResponse:
setPayloadKeepAudioSessionAliveRequest:
setPayloadKeepAudioSessionAliveResponse:
setPayloadEndAudioSessionRequest:
setPayloadEndAudioSessionResponse:
handleMultiUserDidReceiveScoresNotification:
initWithVtSatScore:
warmUp
checkIn
notifiedFiringAlarmIDs
notifiedFiringTimerIDs
_mergedClockAlarmSnapshot
_mergedClockTimerSnapshot
_dismissFiringItemsWithOptions:
_performBlock:
_enumerateAlarmSnapshotsUsingBlock:
_enumerateTimerSnapshotsUsingBlock:
setAlarmsByID:
initialize
getFiringStatesWithCompletion:
getSnapshotsWithCompletion:
_mutateMergedClockTimerSnapshotUsingBlock:
_enumerateAlarmsUsingBlock:
_enumerateTimersUsingBlock:
remoteTimerManager
localAlarmManager
localTimerManager
_localClockAlarmSnapshot
_localClockTimerSnapshot
_remoteClockAlarmSnapshotsByDeviceIdentifier
_remoteClockTimerSnapshotsByDeviceIdentifier
_remoteTimerManager
_localAlarmManager
_localTimerManager
T@"SOClockAlarmManager",R,N,V_localAlarmManager
T@"SOClockTimerManager",R,N,V_localTimerManager
T@"ADRemoteTimerManager",R,N,V_remoteTimerManager
_limit
TQ,R,N,V_limit
setLimit:
_currentHour
analyticsDictionary
currentCalendar
components:fromDate:
logAnalyticsBatchUploadedWithBatch:
bulletinForInternalID:
removeBulletinWithInternalID:
appendItemWithBulletin:
removeBulletinItem:
publisherBulletinID
allBulletins
setBulletin:forInternalID:
enumerateBulletinsAfterBulletinWithNotificationID:usingBlock:
_allBulletins
_orderedBulletinsHead
_orderedBulletinsTail
_setUpBBObserver
initWithQueue:calloutQueue:
_createBBObserverWithQueue:
setObserverFeed:
_getNotificationsFromBulletinBoard
_getRestrictedAppsFromBulletinBoard
_fetchFromDataSourceIfNecessary
internalIDForBBBulletinID:
actions
fetchBulletinWithID:completion:
actionForIdentifier:
bbAction
bbBulletin
responseForAction:
sendResponse:withCompletion:
appInfoWithAppProxy:
supportedIntents
_afbulletinForBBBulletin:forFeed:
internalID
setAvailableOnLockScreen:
intentIDs
_bulletinsDidChange
bulletinID
observer:purgeReferencesToBulletinID:
wasRemovedFromFeed:
availableOnLockScreen
fetchBulletinsOnLockScreenForNotificationManager:completion:
setRead:
setBulletin:forFeed:
requestNoticesBulletinsForAllSections
notificationManagerDidChangeBulletins:
sectionDisplayName
localizedNameForContext:
_isAppRestrictedAndSiriRelated:
spokenNotificationSetting
getSectionInfoWithCompletion:
allowsNotifications
lockScreenSetting
contentPreviewSetting
_siriRelatedRestrictedAppsForApps:
observer:addBulletin:forFeed:playLightsAndSirens:withReply:
observer:addBulletin:forFeed:
observer:modifyBulletin:forFeed:
observer:modifyBulletin:
observer:removeBulletin:forFeed:
observer:removeBulletin:
observer:updateSectionInfo:
observer:removeSection:
observer:updateGlobalSettings:
observer:noteSectionParametersChanged:forSectionID:
observer:noteInvalidatedBulletinIDs:
observer:noteServerConnectionStateChanged:
observer:noteServerReceivedResponseForBulletin:
observer:noteBulletinsLoadedForSectionID:
setDataSource:
fetchAllBulletinsWithCompletion:
fetchBulletinsOnLockScreenWithCompletion:
fetchActionsForBulletinWithID:completion:
performActionWithIdentifier:forBulletinWithIdentifier:completion:
fetchSpokenNotificationEnabledAppsWithCompletion:
_displayNameForBulletin:
dataSource
_notificationsGroup
_bulletinsOnLockScreen
_initialFetchSuccess
_settingsGroup
_batchedUpdatePending
_siriRelatedPreviewRestrictedApps
_spokenNotificationEnabledApps
T@"<ADNotificationManagerDelegate>",W,N,V_delegate
T@"<ADNotificationManagerDataSource>",W,N,V_dataSource
presentedUIResponse
_lock
_info
_voucher
_presentedUIResponse
_creationDate
T@"NSDate",R,N,V_creationDate
T@"AFCommandExecutionInfo",R,C,N
T@"ADPeerInfo",R,N
TB,N,V_presentedUIResponse
com.apple.assistantd
_ADEnterSandbox
+[ADAssetManager(Instrumentation) logAvailableAssetDailyStatus]
version
+[ADAssetManager(Instrumentation) constructNamespaceStatusEventForNamespace:withClient:]
locale
IOPrimaryInterface
IOBuiltin
IODeviceTree:/
IOPlatformSerialNumber
IOPlatformUUID
IOPower:/
Gq3489ugfi
Fyp98tpgj
kbjfrfpoJU
board-id
product-name
kern.osversion
kern.osrevision
IODeviceTree:/options
4D1EDE05-38C7-4A6A-9CC6-4BCCA8B38C14:ROM
4D1EDE05-38C7-4A6A-9CC6-4BCCA8B38C14:MLB
oycqAZloTNDm
abKPld1EcMni
IOEthernetInterface
IOPropertyMatch
IOService
IOMACAddress
%@ {%@}
allowsAWDL = %@
allowsBLE = %@
allowsInfraWiFi = %@
ADRapportLinkTransportOptions::allowsAWDL
ADRapportLinkTransportOptions::allowsBLE
ADRapportLinkTransportOptions::allowsInfraWiFi
ADSyncFinishedNotification
ADSyncVerificationFinishedNotification
ClientSideInitiatedSyncVerification
-[ADCommandCenter(Sync) _allAnchorsFromRequest:andResponse:]
-[ADCommandCenter(Sync) _handleValidatedSyncGetAnchorsResponse:forGetAnchors:]
-[ADCommandCenter(Sync) _appMetaDataListFromVocabSources:appIdentifyingInfoList:]
ADCommandCenterSyncAppSourcesFetching-%@
-[ADCommandCenter(Sync) _fetchAllAppSourcesForSyncingWithCustomVocabInfo:completion:]_block_invoke_2
-[ADCommandCenter(Sync) _requestAnchorsForKeys:appSources:watchAppSources:forceReset:includeAllKnownAnchors:reasons:]
SyncAnchorsQueue
-[ADCommandCenter(Sync) _requestAnchorsForKeys:appSources:watchAppSources:forceReset:includeAllKnownAnchors:reasons:]_block_invoke
-[ADCommandCenter(Sync) _sendSyncFinishedAndReferenceCurrentSyncPromise:]
-[ADCommandCenter(Sync) _saSyncGetAnchors:completion:]
-[ADCommandCenter(Sync) _saSyncGetAnchors:completion:]_block_invoke_4
-[ADCommandCenter(Sync) _saSyncGetAnchorsResponse:completion:]
-[ADCommandCenter(Sync) _saSASyncGetCachedSyncAnchors:completion:]
-[ADCommandCenter(Sync) _saSyncChunkDenied:completion:]
-[ADCommandCenter(Sync) _saSyncChunkAccepted:completion:]
-[ADCommandCenter(Sync) _saSyncFinished:completion:]
-[ADCommandCenter(Sync) _saSyncClientVerify:completion:]
-[ADCommandCenter(Sync) _saSyncServerVerifyResponse:completion:]
-[ADCommandCenter(Sync) _prepareAndStartSyncVerification]
syncVerification
-[ADCommandCenter(Sync) _finishVerificationWithKeys:]
-[ADCommandCenter(Sync) syncManager:chunkForSyncInfo:chunkInfo:]
META:%@
DATA:%@
-[ADCommandCenter(Sync) syncManager:finishedSyncForKeys:postNotification:]
-[ADCommandCenter(Sync) syncManagerDidResetInProgressSync:]
-[ADCommandCenter(Sync) _sync_syncIfNeeded]
-[ADCommandCenter(Sync) _sync_assistantLoadedSyncRequest:]
-[ADCommandCenter(Sync) _sync_syncAnchorKeys:forceReset:reasons:forSyncPromise:]
-[ADCommandCenter(Sync) _sync_syncAnchorKeys:forceReset:reasons:forSyncPromise:]_block_invoke
v24@?0@"NSMutableArray"8@"NSMutableArray"16
-[ADCommandCenter(Context) _context_rollbackClearContext]
-[ADCommandCenter(Context) _context_clearContextWithClearSiriKitContext:]
client_clear_context
-[ADCommandCenter(Context) _context_setAlertContextDirty]
-[ADCommandCenter(Context) _context_updateContext]
-[ADCommandCenter(Context) _setAlertContext]
v24@?0@"AFClockAlarmSnapshot"8@"AFClockTimerSnapshot"16
v16@?0@"SASetNLAlertContext"8
v16@?0@"SASetAlertContext"8
-[ADCommandCenter(Context) _setBackgroundContext]
-[ADCommandCenter(Context) _setBackgroundContext]_block_invoke_2
v16@?0@"SASetBackgroundContext"8
-[ADCommandCenter(Context) _setSyncContext]
-[ADCommandCenter(Context) _setRestrictedAppContext]
-[ADCommandCenter(Context) _setRestrictedAppContext]_block_invoke
-[ADCommandCenter(Context) _updateFlowContext]
-[ADCommandCenter(Context) _context_willSetApplicationContextWithRefId:]
-[ADCommandCenter(Context) _context_setSTApplicationContext:]
-[ADCommandCenter(Context) _context_setApplicationContext:]
-[ADCommandCenter(Context) _context_fetchAppicationContextForApplicationInfo:supplementalContext:refID:]
-[ADCommandCenter(Context) _context_fetchAppicationContextForApplicationInfo:supplementalContext:refID:]_block_invoke_2
v16@?0@"AFApplicationContext"8
-[ADCommandCenter(Context) _fetchAndSendApplicationContextForApplicationInfos:fetchedOrderedContextDictionaries:applicationContexts:refID:]
-[ADCommandCenter(Context) _fetchAndSendApplicationContextForApplicationInfos:fetchedOrderedContextDictionaries:applicationContexts:refID:]_block_invoke
B32@?0@"AFApplicationContext"8Q16^B24
v32@?0@"AFApplicationContext"8Q16^B24
-[ADCommandCenter(Context) _context_setOverriddenApplicationContext:withContext:]
com.apple.mobilePhone
com.apple.ace.phone
-[ADCommandCenter(Context) _context_setOverriddenApplicationContext:withContext:]_block_invoke
v24@?0@"SAGenericCommand"8@"NSError"16
com.apple.siri
-[ADCommandCenter(Context) _context_setApplicationContextForApplicationInfos:withRefId:]
-[ADCommandCenter(Context) _context_reset]
initINAppInfo_block_invoke
ADCommandCenter_Context.m
classINAppInfo
/System/Library/Intents/Intents.framework/Intents
ADTrialActiveExperimentsUpdate
ADRemoteConnectionErrorDomain
ADPeerConnection.m
Invalid parameter not satisfying: %@
identifier
func
ADRemotePeerConnection
-[ADPeerConnection _sendRequest:responseClass:fireAndForget:timeout:overrideRequireConnectedPeer:to:allowCloud:completion:]
-[ADPeerConnection _sendRequest:responseClass:fireAndForget:timeout:overrideRequireConnectedPeer:to:allowCloud:completion:]_block_invoke
v8@?0
-[ADPeerConnection _sendResponse:forRequestId:]
-[ADPeerConnection _sendResponse:forRequestId:]_block_invoke
-[ADPeerConnection service:account:incomingUnhandledProtobuf:fromID:context:]
-[ADPeerConnection service:account:incomingUnhandledProtobuf:fromID:context:]_block_invoke
v24@?0@"PBCodable"8@"NSError"16
-[ADPeerConnection service:account:identifier:didSendWithSuccess:error:]
type
commandPushGenerationsRequest
commandPushGenerationsResponse
commandPullGenerationsRequest
commandPullGenerationsResponse
commandPullDeltaRequest
commandPullDeltaResponse
commandPullSnapshotRequest
commandPullSnapshotResponse
sequence = %@
type = %ld (%@)
commandPushGenerationsRequest = %@
commandPushGenerationsResponse = %@
commandPullGenerationsRequest = %@
commandPullGenerationsResponse = %@
commandPullDeltaRequest = %@
commandPullDeltaResponse = %@
commandPullSnapshotRequest = %@
commandPullSnapshotResponse = %@
ADDeviceSyncMessage::sequence
ADDeviceSyncMessage::type
ADDeviceSyncMessage::commandPushGenerationsRequest
ADDeviceSyncMessage::commandPushGenerationsResponse
ADDeviceSyncMessage::commandPullGenerationsRequest
ADDeviceSyncMessage::commandPullGenerationsResponse
ADDeviceSyncMessage::commandPullDeltaRequest
ADDeviceSyncMessage::commandPullDeltaResponse
ADDeviceSyncMessage::commandPullSnapshotRequest
ADDeviceSyncMessage::commandPullSnapshotResponse
-[ADAnnounceNotificationRequest _announceNotificationRequestTypeForNotification:appID:platform:]
BluetoothA2DPOutput
BluetoothHFP
BluetoothLE
MicrophoneBuiltIn
Speaker
Headphones
MicrophoneWired
HDMIOutput
LineIn
USBAudio
ADAudioSessionPortOther
-[ADAudioSession currentInputRoute]_block_invoke
v24@?0^v8Q16
-[ADAudioSession currentOutputRoute]_block_invoke_3
_AudioObjectGetScalarArray
v20@?0I8r^{AudioObjectPropertyAddress=III}12
_AudioDeviceRegisterForChangedNotification
v16@?0^v8
_AudioObjectGetCFTypeRef
v12@?0I8
_AudioObjectGetIntValue
last_known_stream_id
ADAudioFileWriterErrorDomain
ADAudioFileWriterExtAudioFileErrorDomain
SavedAudioFile
ADAudioFileWriter.m
type != AFAudioFileTypeNone
AudioFileWriterQueue
-[ADAudioFileWriter _initWithType:pathGenerator:xorFileHandle:priority:]_block_invoke
-[ADAudioFileWriter _close]
-[ADAudioFileWriter _delete]
-[ADAudioFileWriter configureWithAudioStreamBasicDescription:]
AudioFile Already configured
-[ADAudioFileWriter configureWithAudioStreamBasicDescription:]_block_invoke
-[ADAudioFileWriter appendAudioData:]_block_invoke
-[ADAudioFileWriter flushWithCompletion:]_block_invoke
_AudioStreamBasicDescriptionForAFAudioFileType
dataType = %@
ADDeviceSyncCommandPullSnapshotRequest::dataType
%@ %@
interface_name
rtt_current
rtt_smoothed
rtt_variance
rtt_best
tx_packets
tx_bytes
tx_retransmit_bytes
tx_unacked
rx_packets
rx_bytes
rx_duplicate_bytes
rx_ooo_bytes
snd_bandwidth
syn_retransmits
tfo_syn_data_acked
com.apple.assistant.deviceAuth.session.badCertificateError
com.apple.assistant.deviceAuth.session.StateError
com.apple.assistant.deviceAuth.session.GenericError
ADPeerStreamConnectionErrorDomain
ADPeerStreamConnection.m
ADPeerStreamConnection
ADPeerStreamConnectionFactory
-[ADSharedPeerStreamConnection _wakeUpRemoteForStreamIdentifier:]
-[ADSharedPeerStreamConnection _wakeUpMessageFailedWithError:]
-[ADSharedPeerStreamConnection _initiateOptimisticEagerStreamFetchRetry]
-[ADSharedPeerStreamConnection _initiateOptimisticEagerStreamFetchRetry]_block_invoke
-[ADSharedPeerStreamConnection getSocketForConnection:completion:]_block_invoke
-[ADSharedPeerStreamConnection _getSocketFromDeviceForStreamIdentifier:]
-[ADSharedPeerStreamConnection _getSocketFromDeviceForStreamIdentifier:]_block_invoke
v20@?0i8@"NSError"12
-[ADSharedPeerStreamConnection _invokeSocketCompletionWithCurrentSocketOrError:]
-[ADSharedPeerStreamConnection closeForConnection:]_block_invoke
-[ADSharedPeerStreamConnection _close]
-[ADSharedPeerStreamConnection getRemoteMetrics:]_block_invoke
-[ADSharedPeerStreamConnection _requestStreamEstablishment]
-[ADSharedPeerStreamConnection _setPreferBTClassic:]
has_device
nearby
connected
cloud_connected
last_nearby_status_change
preferring_bt_classic
last_wakeup_duration
last_stream_open_duration
last_stream_open_error
time_since
success
last_ids_message_info
-[ADSharedPeerStreamConnection _updatePairedDeviceInfo]
-[ADSharedPeerStreamConnection service:account:incomingUnhandledProtobuf:fromID:context:]
-[ADSharedPeerStreamConnection _handleGetMetricsMessage:context:]_block_invoke
v16@?0@"SiriCoreConnectionMetrics"8
-[ADSharedPeerStreamConnection _handleReestablishMessage:context:]
-[ADSharedPeerStreamConnection _handleResponseProtobuf:forIdentifier:]
-[ADSharedPeerStreamConnection service:account:identifier:didSendWithSuccess:error:context:]
average_local_RTT
local_message_state
device_blacked_out
-[ADSharedPeerStreamConnection _establishEagerStreamPair]
-[ADSharedPeerStreamConnection service:nearbyDevicesChanged:]
-[ADSharedPeerStreamConnection service:devicesChanged:]
-[ADPeerStreamConnection getSocket:]_block_invoke
v28@?0@"IDSDeviceConnection"8i16@"NSError"20
-[ADPeerStreamConnection getLocalMetrics:]
-[PBCodable(ADPeerStreamConnection) _ad_performWithPeerStreamConnection:context:]
-[_ADPBProxyWakeUpRequest(ADPeerStreamConnection) _ad_performWithPeerStreamConnection:context:]
-[_ADPBProxyGetMetricsRequest(ADPeerStreamConnection) _ad_performWithPeerStreamConnection:context:]
-[_ADPBProxyReestablishRequest(ADPeerStreamConnection) _ad_performWithPeerStreamConnection:context:]
IDSLocalMessageStateOthers
IDSLocalMessageStateWaitDequeue
IDSLocalMessageStateWaitAck
IDSLocalMessageStateAcked
Invalid store type
Storage could not be initialized
Unhandled %@
-[ADKnowledgeService handleCommand:forDomain:executionContext:reply:]
-[ADKnowledgeService handleGetValuesForKeys:completion:]
-[ADKnowledgeService handleGetValuesForKeys:completion:]_block_invoke
v24@?0@"NSError"8@"NSArray"16
-[ADKnowledgeService handleSetValuesForKeys:completion:]
entry with no key %@
-[ADKnowledgeService handleDeleteValueForKey:completion:]
-[ADKnowledgeService handleDeleteValueForKey:completion:]_block_invoke
-[ADKnowledgeService handleGetLinkedData:completion:]
-[ADKnowledgeService handleGetLinkedData:completion:]_block_invoke
-[ADKnowledgeService handleSetLinkedData:completion:]
-[ADKnowledgeService handleSetLinkedData:completion:]_block_invoke_2
-[ADKnowledgeService runMaintenanceWorkWithCompletion:]
-[ADKnowledgeService runMaintenanceWorkWithCompletion:]_block_invoke
-[ADKnowledgeService adRequestDidReceiveCommand:reply:]
-[ADKnowledgeService adRequestDidCompleteWithSuccess:error:]
-[ADKnowledgeService adRequestEncounteredIntermediateError:]
dismiss
snooze
-[SAIntentGroupRunSiriKitExecutor(DeviceRouting) ad_executionDeviceForDeviceContextTuples:executionContext:proximityMap:sharedUserID:localDeviceIsFollower:]
-[ADDeviceRouter updateContext:]
-[ADDeviceRouter updateContext:]_block_invoke
-[ADDeviceRouter _updateContext:]
v32@?0@"AFPeerContentTuple"8Q16^B24
-[ADDeviceRouter _updateContext:]_block_invoke
-[ADDeviceRouter _fetchCurrentDeviceContextTuplesIfNecessaryWithCompletion:]
-[ADDeviceRouter _fetchCurrentDeviceContextTuplesIfNecessaryWithCompletion:]_block_invoke_2
v16@?0@"NSArray"8
-[ADDeviceRouter getPreferredDeviceToHandleCommand:logNearbyDeviceMetrics:executionContext:sharedUserID:completion:]
-[ADDeviceRouter getPreferredDeviceToHandleCommand:logNearbyDeviceMetrics:executionContext:sharedUserID:completion:]_block_invoke
local device
-[ADDeviceRouter requestLifecycleObserver:requestWillBeginWithInfo:origin:client:]_block_invoke_2
v12@?0B8
-[ADDeviceRouter requestLifecycleObserver:requestDidEndWithInfo:origin:client:]_block_invoke
B20@?0@"AFDeviceContext"8B16
B32@?0@"AFDeviceContext"8Q16^B24
ADDeviceRouterResultForDeviceContextWithFiringAlarm
ADDeviceRouterResultForDeviceContextWithFiringTimer
ADDeviceRouterResultForExcutionContextWithOriginPeer
update-timer
remove-timer
com.apple.assistant.remote-timer-manager
v16@?0@"<AFClockTimerSnapshotMutating>"8
v32@?0@"NSString"8@"AFClockItemStorage"16^B24
v24@?0@"MTTimer"8@"NSError"16
-[ADRemoteTimerManager _sendStereoPartnerAction:timerID:changes:completion:]
com.apple.assistant.announcement-state-manager
Dealloc called.
New request is starting but we have unfinished identifiers, which shouldn't be possible.
Request ended.
Request was cancelled.
-[ADUserNotificationAnnouncementSpeakingStatePublisher _publishObjectHasArrived:]
New object arrived and we are currently announcing.
-[ADUserNotificationAnnouncementSpeakingStatePublisher _publishStateChanged:forIdentifiers:]
-[ADUserNotificationAnnouncementSpeakingStatePublisher _publishCancelAndRemoveAllObjectsForReason:]
-[ADUserNotificationAnnouncementSpeakingStatePublisher _publishFinishedAndRemoveAllObjectsForReason:]
%@://
com.apple.siri.MockServer
-[ADMockServer _establishConnectionIfNeeded]_block_invoke
mock server connection not available
mock server requires mobile default com.apple.assistant 'Authentication Disabled' set to YES
-[ADMockServer replayWithFileURL:completion:]
-[AFCoreAnalyticsCrossDeviceEvent addNearbyDeviceContexts:proximityInfo:]_block_invoke
v32@?0@"AFDeviceContext"8Q16^B24
v16@?0@"<AFCoreAnalyticsDeviceContextPayloadMutating>"8
v32@?0@"NSString"8@"AFCoreAnalyticsDeviceContextPayload"16^B24
nearbyDevicesLoggingID = %@
nearbyDevicesPayloads = %@
content
date
generation = %@
date = %@
items = %@
ADDeviceSyncSnapshot::generation
ADDeviceSyncSnapshot::date
ADDeviceSyncSnapshot::items
-[ADDictationOfflineStatusObserver _updateOfflineDictationStatus:error:]
-[ADDictationOfflineStatusObserver setOfflineDictationStatus:]
Companion Routing Service Queue
-[ADCompanionRoutingService _handleCommand:forDomain:executionContext:reply:]
-[ADCompanionRoutingService _handleCommand:forDomain:executionContext:reply:]_block_invoke_2
-[ADCompanionRoutingService _handleCommand:forDomain:executionContext:reply:]_block_invoke
-[ADCompanionRoutingService preheatDomain:]
-[ADCompanionRoutingService preheatDomain:]_block_invoke
-[ADCompanionRoutingService _processPendingCallResultBlocks]
SystemService
No matching event was found
SyncTimeouts.plist
-[ADSyncBlacklist checkPermissionToSyncSlot:forApp:completion:]_block_invoke
-[ADSyncBlacklist filterBlacklistedAnchorsFrom:includingNewRestrictionsFromResponse:]
B32@?0@"NSString"8@"NSDate"16^B24
Core Speech Service Queue
-[ADCoreSpeechService _handleMessage:messageType:fromDeviceWithIdentifier:completion:]
-[ADCoreSpeechService sendMessageWithPayload:toPeer:withReply:]
https://guzzoni.apple.com
https://seed.siri.apple.com
Logging Assistant Identifier
Speech Identifier
Label
Hostname
Group
Predefined Server
Ace Host
Connection Policy
Connection Policy Date
Connection Policy First Failure Date
Connection Policy Hostname
Locale Identifier
Last Assistant Data Anchor
Server Certificate Data
Validation Data
Validation Expiration
Validation Version
Local Crypto Key Data
Peer Assistant Identifier
Peer Logging Assistant Identifier
Peer Speech Identifier
Peer User Agent String
Peer Hostname
Peer Language Code
Peer Siri Enabled
Watch Data Exists
Watch Assistant Identifier
Watch User Agent String
Watch Language
Watch Override Id
Needs Destruction
Build Version
+[ADAccount _accountForIdentifier:infoDictionary:intanceContext:isReadOnly:]
%@ {identifier = %@, label = %@, assistantIdentifier = %@, speechIdentifier = %@} (needsDestruction = %d, isReadOnly = %d)
Predefined Servers
Default Server Override
B32@?0@8@16^B24
Deprecated Servers
-[ADAccount _hostnameOverride]
apple.com
apple.com:
-[ADAccount _hostnameQAOverride]
-[ADAccount save]
-[ADAccount removeAndSave]
-[ADAccount(SharedData) setPairedWatches:]
-[ADAccount(SharedData) updateGizmoData:forUniqueId:]
-[ADAccount(SharedData) watchExistsForAssistantId:]
-[ADAccount(RemoteDevice) saRemoteDevice:]
com.apple.private.alloy.siri.device
com.apple.assistant.device-sync.messaging-service.rapport
-[ADDeviceSyncMessagingServiceRapport sendMessage:toDeviceWithIdentifier:completion:]
Rapport messaging channel is not supported.
userId
dataTypes = %@
ADDeviceSyncCommandPullGenerationsRequest::dataTypes
stream_id
assistantBundle
Build
ADServiceManager.m
Shouldn't already have a service with identifier %@
-[ADServiceManager _removeService:]
-[ADServiceManager _reprioritizeService:]
-[ADServiceManager _buildFliteredInfoDictionaryFromBundleURL:]
-[ADServiceManager _writeBundleServicesCache:toPath:]
-[ADServiceManager _bundleServicesCache:]
-[ADServiceManager _loadServiceFromBundlePath:infoDictionary:]
v32@?0@"NSString"8@"NSDictionary"16^B24
B32@?0@"ADService"8Q16^B24
com.apple.siri.vocabularyupdates
-[ADServiceManager serviceForSyncAnchorKey:]
-[ADServiceManager pendServiceReloadNotification:]
-[ADServiceManager reloadServiceForNotification:]
v24@?0@"NSString"8^B16
-[ADServiceManager _reloadServices:]
<%@: Identifier: %@>
Plugins
-[_ADChunkInfo initWithDictionary:]
SyncSnapshot.plist
v32@?0@"NSString"8@"_ADChunkInfo"16^B24
-[ADSyncSnapshot fetchSentAnchorsOnQueue:completion:]
-[ADSyncSnapshot _scheduleSave]
-[ADSyncSnapshot _noteSendingPostGen:validity:key:appMetaData:]
-[ADSyncSnapshot noteSendingChunk:]
-[ADSyncSnapshot deleteSavedSnapshots]_block_invoke
-[ADSyncSnapshot _readFromDisk]
-[ADSyncSnapshot _readFromDisk]_block_invoke
-[ADSyncSnapshot _pruneAppsCacheWithTruth:]
-[ADSyncSnapshot _save]
v32@?0@"NSString"8@"NSMutableDictionary"16^B24
%@ name: %@ enabled: %@ dictation: %@ assistant id: %@ logging assistant id: %@ speech id: %@ sharedUserId: %@ logging sharedUserId: %@ language: %@ prev language: %@ outputVoice: %@ %@ prev: outputVoice: %@ %@ hostname: %@ cloud sync enabled: %@ should censor speech: %@ user agent: %@ is location sharing device: %@ notification restricted apps: %@ temperature unit: %@ remote playback device: %@
effectiveDate
effectiveDate = %@
ADAudioSessionCoordinationMessageEndAudioSessionRequest::effectiveDate
timerURL
isFiring
title
state
duration
fireTimeInterval
fireDate
firedDate
dismissedDate
lastModifiedDate
v16@?0@"<AFClockTimerMutating>"8
v16@?0@"<ADDeviceSyncItemMutating>"8
%@.%@
incrementalChanges = %@
ADDeviceSyncCommandPullDeltaResponse::incrementalChanges
-[ADAnnouncementRequest dealloc]
Events
v32@?0@"AFAnalyticsEventRecord"8Q16^B24
ADAnalyticsSendInstrumentationForUEICreate_block_invoke
openTime
firstByteTime
attemptCount
metricsCount
meanPing
pingCount
unacknowledgedPingCount
provider
rttCurrent
rttSmoothed
rttVariance
rttBest
packetsSent
bytesSent
bytesRetransmitted
bytesUnacked
packetsReceived
bytesReceived
duplicateBytesReceived
outOfOrderBytesReceived
sendBandwidth
synRetransmits
tfoSynDataAcked
subflowCount
connectedSubflowCount
primarySubflowInterfaceName
subflowSwitchCount
ConnectionMethod
ConnectionFallbackFrom
ConnectionEdgeId
ConnectionEdgeType
NSPConnectionFallbackReason
TuscanyConnectionDelay
TuscanyFirstTxByteDelay
CarrierName
SignalStrengthBars
WiFiPhyMode
WiFiChannelInfo
Captive
dnsResolutionTime
startToDNSResolution
connectionEstablishmentTime
connectionStartToEstablishmentTime
tlsHandshakeTime
connectionStartToTLSHandshake
tlsVersion
simSubscriptions
%@.%@.%@
InterfaceNetworkType
Symptoms
_ADAnalyticsMetricsCreateTimingsAndEventInformationDictionaries
%@.%u
%@.%tu
SystemBootTime
StreamIdentifier
_ADAnalyticsMetricsGetEventInformationValue
ADSpeechCompressor.m
Already started compressor
AudioConverterNew failed: %x
AudioConverterSetProperty/kAudioConverterEncodeBitRate failed: %x
-[ADSpeechCompressor addAudioSampleData:]_block_invoke_2
Too many buffers
Cannot produce ASPD for PCM
i32@?0^I8^{AudioBufferList=I[1{AudioBuffer=II^v}]}16^^{AudioStreamPacketDescription}24
-[ADSpeechCompressor addAudioSampleData:]
v16@?0@"AFHomeAnnouncementSnapshot"8
-[ADHomeAnnouncementContextProvider handleHomeAnnouncementSnapshotUpdate:]
AFHeadphonesAnnouncementRequestCapabilityProvider
com.apple.bluetooth.GuestConnected
-[AFHeadphonesAnnouncementRequestCapabilityProvider updateWirelessSplitterSessionInfoAndObserve]_block_invoke_3
v24@?0@"AFBluetoothWirelessSplitterSessionInfo"8@"NSError"16
-[AFHeadphonesAnnouncementRequestCapabilityProvider notifyObserversOfAvailableAnnouncementRequestTypes]_block_invoke
v16@?0Q8
-[AFHeadphonesAnnouncementRequestCapabilityProvider fetchEligibleAnnouncementRequestTypesAndNotifyObservers:]
-[AFHeadphonesAnnouncementRequestCapabilityProvider _fetchEligibleAnnouncementRequestTypesAndNotifyObservers]
-[AFHeadphonesAnnouncementRequestCapabilityProvider _fetchEligibleAnnouncementRequestTypesAndNotifyObservers]_block_invoke
-[AFHeadphonesAnnouncementRequestCapabilityProvider notifyObserversOfEligibleAnnouncementRequestTypes:]
v24@?0@"NSArray"8@"NSError"16
-[AFHeadphonesAnnouncementRequestCapabilityProvider notifyObserver:didChangeStateFrom:to:]_block_invoke
-[AFHeadphonesAnnouncementRequestCapabilityProvider notifyObserver:didReceiveNotificationWithToken:]
-[AFHeadphonesAnnouncementRequestCapabilityProvider _settingsConnectionDidDisconnect]_block_invoke
-[AFHeadphonesAnnouncementRequestCapabilityProvider fetchEligibleAnnouncementRequestTypesWithCompletion:]
-[AFHeadphonesAnnouncementRequestCapabilityProvider fetchEligibleAnnouncementRequestTypesWithCompletion:]_block_invoke
-[AFHeadphonesAnnouncementRequestCapabilityProvider fetchAvailableAnnouncementRequestTypesWithCompletion:]
-[AFHeadphonesAnnouncementRequestCapabilityProvider fetchAvailableAnnouncementRequestTypesWithCompletion:]_block_invoke_3
BluetoothPairedStatusChangedNotification
initBluetoothPairedStatusChangedNotification_block_invoke
AFHeadphonesAnnouncementRequestCapabilityProvider.m
constant
/System/Library/PrivateFrameworks/BluetoothManager.framework/BluetoothManager
BluetoothManagerLibrary
frameworkLibrary
BluetoothFirstDeviceUnlockCompleted
initBluetoothFirstDeviceUnlockCompleted_block_invoke
INSearchForMessagesIntentIdentifier
initINSearchForMessagesIntentIdentifier_block_invoke
/System/Library/Frameworks/Intents.framework/Intents
IntentsLibrary
INReadAnnouncementIntentIdentifier
initINReadAnnouncementIntentIdentifier_block_invoke
INSearchForNotebookItemsIntentIdentifier
initINSearchForNotebookItemsIntentIdentifier_block_invoke
INPlayVoicemailIntentIdentifier
initINPlayVoicemailIntentIdentifier_block_invoke
INJoinCallIntentIdentifier
initINJoinCallIntentIdentifier_block_invoke
INSendMessageIntentIdentifier
initINSendMessageIntentIdentifier_block_invoke
-[ADTimerContextProvider clockTimerObserver:timerDidFire:]
-[ADTimerContextProvider clockTimerObserver:timerDidDismiss:]
-[ADTimerContextProvider clockTimerObserver:snapshotDidUpdateFrom:to:]
-[ADOpportuneSpeakingModuleEdgeDetector _framesPerSecondForOpportuneSpeakListeningType:]
-[ADOpportuneSpeakingModuleEdgeDetector _initializeVoiceThresholdsForOpportuneSpeakListeningType:]
-[ADOpportuneSpeakingModuleEdgeDetector _scheduleTimerForMaxDelay:]_block_invoke
-[ADOpportuneSpeakingModuleEdgeDetector listenForPauseWithOptions:forPause:maxDelay:stopOnDetection:executeOnSuccess:onFail:]
-[ADOpportuneSpeakingModuleEdgeDetector listenForPauseWithOptions:forPause:maxDelay:stopOnDetection:executeOnSuccess:onFail:]_block_invoke
-[ADOpportuneSpeakingModuleEdgeDetector listenForUserSpeechWithOptions:forVoice:maxDelay:stopOnDetection:executeOnSuccess:onFail:]
-[ADOpportuneSpeakingModuleEdgeDetector listenForUserSpeechWithOptions:forVoice:maxDelay:stopOnDetection:executeOnSuccess:onFail:]_block_invoke
-[ADOpportuneSpeakingModuleEdgeDetector _handleFrame:]
-[ADOpportuneSpeakingModuleEdgeDetector _thresholdDetected]
-[ADOpportuneSpeakingModuleEdgeDetector _stopListeningWithCompletion:]_block_invoke_2
-[ADOpportuneSpeakingModuleEdgeDetector _restartAndExtendListening]
-[ADOpportuneSpeakingModuleEdgeDetector _restartAndExtendListening]_block_invoke
-[ADOpportuneSpeakingModuleEdgeDetector _restartAndExtendListening]_block_invoke_2
ADOSMED_SPEECH
ADOSMED_PAUSE
-[ADOpportuneSpeakingModuleEdgeDetector opportuneSpeakListener:hasRemoteVADAvailable:]_block_invoke
-[ADOpportuneSpeakingModuleEdgeDetector opportuneSpeakListener:hasVADAvailable:]_block_invoke
-[ADOpportuneSpeakingModuleEdgeDetector opportuneSpeakListener:didStopUnexpectly:]_block_invoke
ADVoiceAssetsUpdatedNotification
ADFirstUnlockNotification
ADDaemon
keepAlive
-[ADDaemon _setupInternal]
CFNETWORK_DIAGNOSTICS
CFNETWORK_DIAGNOSTICS_NO_SYSLOG
-[ADDaemon _proxyService]
-[ADDaemon _peerLocationService]
com.apple.springboard
-[ADDaemon _clientListenerShouldAcceptNewConnection:]
_setupClientListener
client connection connected
-[ADDaemon _clientListenerShouldAcceptNewConnection:]_block_invoke
client connection was invalidated
-[ADDaemon _dictationListenerShouldAcceptNewConnection:]
-[ADDaemon _dictationListenerShouldAcceptNewConnection:]_block_invoke
-[ADDaemon _settingsListenerShouldAcceptNewConnection:]
-[ADDaemon _settingsListenerShouldAcceptNewConnection:]_block_invoke
-[ADDaemon _bundleID:andPath:forXPCConnection:]
com.apple.imagent
com.apple.MobileSMS
com.apple.photolibraryd
com.apple.assetsd
com.apple.cloudphotosd
com.apple.mobileslideshow
-[ADDaemon _synapseSyncListenerShouldAcceptNewConnection:]
-[ADDaemon _synapseSyncListenerShouldAcceptNewConnection:]_block_invoke
-[ADDaemon _managedStorageListenerShouldAcceptNewConnection:]
-[ADDaemon _managedStorageListenerShouldAcceptNewConnection:]_block_invoke
-[ADDaemon _analyticsListenerShouldAcceptNewConnection:]
-[ADDaemon _analyticsListenerShouldAcceptNewConnection:]_block_invoke
-[ADDaemon _analyticsObservationListenerShouldAcceptNewConnection:]
-[ADDaemon _analyticsObservationListenerShouldAcceptNewConnection:]_block_invoke
-[ADDaemon _securityListenerShouldAcceptNewConnection:]
-[ADDaemon _securityListenerShouldAcceptNewConnection:]_block_invoke
-[ADDaemon _notificationServiceListenerShouldAcceptNewConnection:]
-[ADDaemon _notificationServiceListenerShouldAcceptNewConnection:]_block_invoke
-[ADDaemon _audioSessionAssertionServiceListenerShouldAcceptNewConnection:]
-[ADDaemon _audioSessionAssertionServiceListenerShouldAcceptNewConnection:]_block_invoke
com.apple.notifyd.matching
-[ADDaemon _setupNotifyHandlers]_block_invoke
com.apple.MobileAsset.VoiceServices.VoiceResources.new-asset-installed
com.apple.voiceservices.notification.voice-update
com.apple.voicetrigger.EarlyDetect
com.apple.siri.preheat.quiet
com.apple.nanoregistry.devicedidpair
Safety net
com.apple.assistant.sync_homekit_urgent
com.apple.assistant.sync_homekit_now
com.apple.proactive.PersonalizationPortrait.namedEntitiesInvalidated
portrait_invalidated
com.apple.managedconfiguration.effectivesettingschanged
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.distnoted.matching
-[ADDaemon _setupDistributedNotificationHandlers]_block_invoke
UserInfo
UserAssignedDeviceName
v24@?0^{__CFString=}8^{__CFDictionary=}16
-[ADDaemon _setupSyncListener]
com.apple.assistant.sync
-[ADDaemon _setupSyncListener]_block_invoke
com.apple.pairedsync.siri
-[ADDaemon syncCoordinator:beginSyncSession:]
B32@?0@"NSString"8@"NSDictionary"16^B24
com.apple.siri.CacheDelete
r^{__CFDictionary=}20@?0i8r^{__CFDictionary=}12
-[ADDaemon _setupCacheDelete]_block_invoke
CACHE_DELETE_VOLUME
CACHE_DELETE_AMOUNT
-[ADDaemon _setupCacheDelete]_block_invoke_2
-[ADDaemon _setupCacheDelete]_block_invoke_3
@"<AFAudioSessionAssertionAcquisitionService>"8@?0
MobileAssistantDaemons_Sim-3102.9.1
-[ADDaemon _daemonDidLaunchWithContext:]
-[ADDaemon _daemonDidLaunchWithContext:]_block_invoke
systemBuild
com.apple.assistantd.trial
Queue %s did not respond to watchdog and is likely blocked.
-[ADDaemon _daemonWillShutdown]
-[ADDaemon _syncUrgently:]
-[ADDaemon _syncCoalesced]
-[ADDaemon _syncForReason:withCoalescing:]
UnlockedWorkQueue
name
sync_now
_ADHandleNewSyncPeer_block_invoke
sync_reason
defrost
mach_time
PSYSyncCoordinator
/System/Library/PrivateFrameworks/PairedSync.framework/PairedSync
ADSharedDataService
-[ADSharedDataService effectiveSettingsChanged]_block_invoke
-[ADSharedDataService _pushSharedDataToPeerFromNotification:completion:]
v16@?0@"ADSharedData"8
-[ADSharedDataService _sharedDataDidChange:]
-[ADSharedDataService _getDataWithPBCompletion:]_block_invoke
-[ADSharedDataService _setDataFromSharedData:]
v20@?0B8@"NSError"12
-[ADSharedDataService getSharedDataFromPeerUseCache:allowCloudMessaging:completion:]
-[ADSharedDataService watchIsNearbyForAssistantId:]
-[ADSharedDataService _handleExecuteRequestOnRemoteWatch:completion:]
-[ADSharedDataService _handleExecuteRequestOnRemoteWatch:completion:]_block_invoke
v24@?0@"NSDictionary"8@"NSError"16
-[_ADPBDeviceGetDataRequest(ADSharedDataService) _ad_performWithSharedDataRemote:completion:]
-[_ADPBDeviceStartRemoteRequest(ADSharedDataService) _ad_performWithSharedDataRemote:completion:]
-[_ADPBDeviceExecuteOnRemoteRequest(ADSharedDataService) _ad_performWithSharedDataRemote:completion:]
defaultSessionHasResults
timerFiredAndSomeSessionHadResults
sessionHasHigherUsefulnessScore
onlySessionHasResults
sessionCannotHandleRequest
arbiterReusedPreviousWinner
-[ADSessionManager _startSessions:]
-[ADSessionManager _startSession:makeQuiet:]
-[ADSessionManager _resetSessionsAndMakeQuiet:]
-[ADSessionManager resetSessionsAtNextRequestBoundaryWithCompletion:]
-[ADSessionManager endRetryableRequestForCommand:]
-[ADSessionManager _purgeRequestMaps]
-[ADSessionManager _sharedAssistantdIdentifierDidChange:]
-[ADSessionManager _enabledBitsChanged:]
-[ADSessionManager _languageCodeDidChange:]
-[ADSessionManager _languageCodeDidChange:]_block_invoke
-[ADSessionManager _powerChangedMessageType:notificationID:]
will sleep
can sleep
-[ADSessionManager _registerForSleepNotification]
-[ADSessionManager _unregisterForSleepNotification]
-[ADSessionManager _evaluateResultObjects]
-[ADSessionManager _resultObjectsHoldTime]
-[ADSessionManager _resultObjectsTimerFired:]
-[ADSessionManager _queueResultObject:forSession:]
-[ADSessionManager _isDestructive:]
-[ADSessionManager _cancelOtherSessionRequests:forRefId:]
-[ADSessionManager _pickDefaultWinnerWithDroppingSession:]
-[ADSessionManager adviseSessionArbiterToContinueWithPreviousWinner:]
-[ADSessionManager resetSessionsIfRequiredBasedOnAssetStatus:]
-[ADSessionManager assistantSessionWillStartConnection:]
-[ADSessionManager assistantSession:didOpenConnectionWithPolicyId:routeId:connectionDelay:]
-[ADSessionManager assistantSession:receivedCommand:]
Session Lost
-[ADSessionManager assistantSession:cannotHandleRequest:error:]
-[ADSessionManager assistantSession:receivedError:isRetryableError:]
-[ADSessionManager assistantSessionShouldLogVisibleRequestFailure:forError:]
-[ADSessionManager assistantSessionConnectionDidReset:]
-[ADSessionManager assistantSessionShouldAttemptRetry:]
-[ADSessionManager assistantSession:didChangeRequestIdFrom:toId:]
-[ADSessionManager assistantSessionDidCreateAssistant:]
-[ADSessionManager assistantSession:willRetryOnError:]
-[ADSessionManager assistantSession:beginSessionRetryPreferringWWAN:]
-[ADSessionManager _convertEmbeddedRequestIds:originalCommand:session:]
-[ADSessionManager handleCommand:]
-[ADSessionManager delegateDidHandleCommand:]
-[ADSessionManager _sendCommand:opportunistically:logEvent:doSendPreProcessing:doSendPostProcessing:]_block_invoke
-[ADSessionManager setCurrentRequest:]
-[ADSessionManager setHasActiveRequest:]
-[ADSessionManager acquireAssertionForReason:]
-[ADSessionManager relinquishAssertion:]
-[ADSessionManager _resetSessionOnRequestBoundaryIfNeeded]
originalRequestId
%@SessionProxyId
-[ADSessionManager setRequestId:]
-[ADSessionManager _logMetricsForSessionFailure:withError:completion:]_block_invoke
-[ADSessionManager _hasAtleastOneActiveSessionBesides:]
-[ADSessionManager _canStartLocalSession]
-[ADSessionManager _resetWinningState]
-[ADSessionManager _logContextForWinningSession:forReason:forRemoteSessionScore:forLocalSessionScore:]
remoteSessionScore
localSessionScore
-[ADSessionManager sendCommandToLocalSession:]
-[ADSessionManager handleCommandInLocalSession:]
%@ {timestamp = %llu, reason = %@, duration = %f seconds}
ADMobileBluetoothDeviceDataSource
-[ADMobileBluetoothDeviceDataSource init]_block_invoke
-[ADMobileBluetoothDeviceDataSource _cleanUpDeviceProxies]
-[ADMobileBluetoothDeviceDataSource _cleanUpWirelessSplitterProxy]
-[ADMobileBluetoothDeviceDataSource _detachFromSession]
-[ADMobileBluetoothDeviceDataSource _attachToSession]
-[ADMobileBluetoothDeviceDataSource _sessionAttached:result:]
-[ADMobileBluetoothDeviceDataSource _sessionDetached:]
-[ADMobileBluetoothDeviceDataSource _sessionTerminated:]
-[ADMobileBluetoothDeviceDataSource _setUpLocalDevice]
-[ADMobileBluetoothDeviceDataSource localDevice:event:result:]
-[ADMobileBluetoothDeviceDataSource _setUpAccessoryManager]
-[ADMobileBluetoothDeviceDataSource accessoryManager:event:device:state:]
v16@?0@"AFBluetoothDeviceInfo"8
-[ADMobileBluetoothDeviceDataSource _handleInEarStatusChangedForBTDevice:fromAccessoryManager:]
-[ADMobileBluetoothDeviceDataSource _handleListeningModeChangedForBTDevice:fromAccessoryManager:]
-[ADMobileBluetoothDeviceDataSource getBTDeviceWithAddress:completion:]_block_invoke
-[ADMobileBluetoothDeviceDataSource getBTDeviceWithDeviceUID:completion:]_block_invoke
-[ADMobileBluetoothDeviceDataSource getBTLocalDeviceWithCompletion:]_block_invoke
-[ADMobileBluetoothDeviceDataSource getConnectedDevicesWithCompletion:]_block_invoke
-[ADMobileBluetoothDeviceDataSource getPairedDevicesWithCompletion:]_block_invoke
-[ADMobileBluetoothDeviceDataSource wirelessSplitterSession]
-[ADMobileBluetoothDeviceDataSource _resetConnectedDeviceAddresses]
-[ADMobileBluetoothDeviceDataSource _fetchConnectedDeviceAddresses]
v32@?0@"NSString"8Q16^B24
-[ADMobileBluetoothDeviceDataSource _fetchConnectedDeviceAddresses]_block_invoke
-[ADMobileBluetoothDeviceDataSource _resetPairedDeviceAddresses]
-[ADMobileBluetoothDeviceDataSource _fetchPairedDeviceAddresses]
-[ADMobileBluetoothDeviceDataSource _fetchPairedDeviceAddresses]_block_invoke
%@ {deviceUID = %@}
%@ {address = %@}
-[ADMobileBluetoothDeviceProxy dealloc]
-[ADMobileBluetoothDeviceProxy initWithAddress:dataSource:queue:]
-[ADMobileBluetoothDeviceProxy initWithAddress:dataSource:queue:]_block_invoke
-[ADMobileBluetoothDeviceProxy initWithDeviceUID:dataSource:queue:]
-[ADMobileBluetoothDeviceProxy initWithDeviceUID:dataSource:queue:]_block_invoke
-[ADMobileBluetoothDeviceProxy deviceInfo]_block_invoke
-[ADMobileBluetoothDeviceProxy deviceInfo]
v24@?0^{BTDeviceImpl=}8^{BTAccessoryManagerImpl=}16
-[ADMobileBluetoothDeviceProxy _reload:]
-[ADMobileBluetoothDeviceProxy _reload:]_block_invoke
v16@?0@"AFBluetoothHeadphoneInEarDetectionState"8
v16@?0q8
v16@?0@"NSError"8
-[ADMobileBluetoothDeviceProxy _setHeadphoneListeningMode:completion:]_block_invoke
-[ADMobileBluetoothDeviceProxy _updateDeviceInfo:]
v16@?0@"<AFBluetoothDeviceObserver>"8
-[ADMobileBluetoothDeviceProxy _updateHeadphoneInEarDetectionState:]
-[ADMobileBluetoothDeviceProxy _updateHeadphoneListeningMode:]
-[ADMobileBluetoothDeviceProxy _fetchDeviceInfoWithCompletion:]
v16@?0@"<AFBluetoothDeviceInfoMutating>"8
-[ADMobileBluetoothDeviceProxy _fetchDeviceInfoWithCompletion:]_block_invoke
-[ADMobileBluetoothDeviceProxy _fetchHeadphoneInEarDetectionStateWithCompletion:]
-[ADMobileBluetoothDeviceProxy _fetchHeadphoneInEarDetectionStateWithCompletion:]_block_invoke
-[ADMobileBluetoothDeviceProxy _fetchHeadphoneListeningModeWithCompletion:]
-[ADMobileBluetoothDeviceProxy _fetchHeadphoneListeningModeWithCompletion:]_block_invoke
-[ADMobileBluetoothDeviceProxy _changeHeadphoneListeningMode:completion:]
-[ADMobileBluetoothDeviceProxy _changeHeadphoneListeningMode:completion:]_block_invoke
-[ADMobileBluetoothDeviceProxy _accessBTDeviceAndAccessoryManagerUsingBlock:]
-[ADMobileBluetoothDeviceProxy _accessBTDeviceAndAccessoryManagerUsingBlock:]_block_invoke
-[ADMobileBluetoothDeviceProxy _invalidate]
v24@?0@"<AFBluetoothDeviceObserver>"8^B16
-[ADMobileBluetoothWirelessSplitterSessionProxy dealloc]
-[ADMobileBluetoothWirelessSplitterSessionProxy initWithDataSource:queue:]
-[ADMobileBluetoothWirelessSplitterSessionProxy initWithDataSource:queue:]_block_invoke
v16@?0@"AFBluetoothWirelessSplitterSessionInfo"8
-[ADMobileBluetoothWirelessSplitterSessionProxy bluetoothWirelessSplitterSessionStateObserver:didChangeStateFrom:to:]
-[ADMobileBluetoothWirelessSplitterSessionProxy _reload:]
-[ADMobileBluetoothWirelessSplitterSessionProxy _reload:]_block_invoke
-[ADMobileBluetoothWirelessSplitterSessionProxy _updateWirelessSplitterSessionInfo:]
v16@?0@"<ADBluetoothWirelessSplitterSessionObserving>"8
-[ADMobileBluetoothWirelessSplitterSessionProxy _fetchWirelessSplitterSessionInfoWithCompletion:]
-[ADMobileBluetoothWirelessSplitterSessionProxy _fetchWirelessSplitterSessionInfoWithCompletion:]_block_invoke
v16@?0^{BTLocalDeviceImpl=}8
-[ADMobileBluetoothWirelessSplitterSessionProxy _accessBTLocalDeviceUsingBlock:]
-[ADMobileBluetoothWirelessSplitterSessionProxy _accessBTLocalDeviceUsingBlock:]_block_invoke
-[ADMobileBluetoothWirelessSplitterSessionProxy _invalidate]
v24@?0@"<ADBluetoothWirelessSplitterSessionObserving>"8^B16
ADBTResult
_ADBTDeviceGetAddress
_ADBTDeviceGetDeviceInfo
_ADBTDeviceGetHeadphoneInEarDetectionState
v16@?0@"<AFBluetoothHeadphoneInEarDetectionStateMutating>"8
_ADBTDeviceGetHeadphoneListeningMode
_ADBTDeviceSetHeadphoneListeningMode
_ADBTLocalDeviceGetWirelessSplitterSessionInfo
v16@?0@"<AFBluetoothWirelessSplitterSessionInfoMutating>"8
Response Time
Total Count
Library/Assistant/ServiceStatistics
-[ADServiceStatistics _statsDirectory]_block_invoke
%@.plist
-[ADServiceStatistics _statsDict]
-[ADServiceStatistics _saveStats]
-[ADServiceStatistics markIncomingCommand:]
-[ADServiceStatistics markResponseForCommand:]
-[ADDictationSession dealloc]
-[ADDictationSession _setSpeechRecognitionTransactionState:]
_setSpeechRecognitionTransactionState:
-[ADDictationSession _setAudioFileIOTransactionState:]
_setAudioFileIOTransactionState:
Call Observer Queue
-[ADCallObserver startObservingCallStateWithDelegate:]
-[ADCallObserver stopObservingCallStateWithCompletion:]
-[ADCallObserver _handleCallStateDidChangeTo:]
-[ADCallObserver _handleOnSpeakerDidChangeTo:]
ADCurrentHomeKitHomeChanged
-[ADContextManager _initWithDelegate:deviceCircleManager:deviceProximityManager:]
BackgroundContextQueue
ContextQueue
v20@?0@"NSArray"8B16
-[ADContextManager _initWithDelegate:deviceCircleManager:deviceProximityManager:]_block_invoke
-[ADContextManager reset]
-[ADContextManager dealloc]
-[ADContextManager keepReportingNowPlayingTimingEventsHeuristically]
com.apple.Maps
ContextCollation
-[ADContextManager getAppContextForDeviceState:applicationInfos:completion:]_block_invoke
@"AceObject"16@?0@"NSDictionary"8
-[ADContextManager getAppContextForDeviceState:applicationInfos:completion:]_block_invoke_3
v16@?0@"<AFApplicationContextMutating>"8
v24@?0@"SAUserActivity"8@"NSString"16
-[ADContextManager _getCurrentUserActivityOnQueue:completion:]_block_invoke
v24@?0@"NSUserActivity"8@"NSError"16
v32@?0@"NSUUID"8@"NSString"16@"NSError"24
com.apple.reminders
-[ADContextManager getAlertContextWithBulletins:externalAlarmSnapshot:timerSnapshot:nlAlertContextCompletion:fullAlertContextCompletion:]_block_invoke
-[ADContextManager getAlertContextWithBulletins:externalAlarmSnapshot:timerSnapshot:nlAlertContextCompletion:fullAlertContextCompletion:]_block_invoke_2
v32@?0@"NSUUID"8@"AFClockAlarm"16^B24
v32@?0@"NSUUID"8@"AFClockTimer"16^B24
-[ADContextManager getAlertContextWithBulletins:externalAlarmSnapshot:timerSnapshot:nlAlertContextCompletion:fullAlertContextCompletion:]_block_invoke_4
-[ADContextManager markBulletinAsAcknolwedgedForDomainObject:]
completion
-[ADContextManager _getNowPlayingMediaIsResumable:]
com.apple.Music
com.apple.podcasts
com.apple.iBooks
com.apple.NanoMusic
com.apple.NanoRadio
com.apple.NanoBooks
-[ADContextManager getContextIncludingKeys:excludingMandatoryKeys:timeOut:localContextCompletion:completion:]
-[ADContextManager getContextIncludingKeys:excludingMandatoryKeys:timeOut:localContextCompletion:completion:]_block_invoke
-[ADContextManager getContextIncludingKeys:excludingMandatoryKeys:timeOut:localContextCompletion:completion:]_block_invoke_2
v16@?0@"AFDeviceContext"8
-[ADContextManager getDeviceContextsForKeys:forForeignRequestID:includesNearbyDevices:completion:]
-[ADContextManager getDeviceContextsForKeys:forForeignRequestID:includesNearbyDevices:completion:]_block_invoke_3
@16@?0@"AFPeerContentTuple"8
-[ADContextManager _fetchContextSnapshotForCurrentRequest]
-[ADContextManager _fetchContextSnapshotForCurrentRequest]_block_invoke
context_collector_available
local_is_collector
v16@?0@"AFPeerContentTuple"8
B16@?0@"AFDeviceContext"8
B16@?0@"NSArray"8
B32@?0@"SVDCapability"8Q16^B24
timedOut
duration_in_ms
devices_count
-[ADContextManager _fetchContextSnapshotForCurrentRequest]_block_invoke_6
v24@?0Q8^B16
-[ADContextManager getContextSnapshotForCurrentRequestWithCompletion:]
-[ADContextManager getContextSnapshotForCurrentRequestWithCompletion:]_block_invoke
-[ADContextManager pushContextSnapshotForCurrentRequestWithID:toDevice:]
en_US
HH:mm:ss.SSS
-[ADContextManager requestLifecycleObserver:requestWillBeginWithInfo:origin:client:]_block_invoke
-[ADContextManager requestLifecycleObserver:requestDidEndWithInfo:origin:client:]_block_invoke
-[ADContextManager _startPeriodicContextFetchFromNearbyDevices]
-[ADContextManager _startPeriodicContextFetchFromNearbyDevices]_block_invoke_2
-[ADContextManager _startPeriodicContextFetchFromNearbyDevices]_block_invoke
-[ADContextManager _stopPeriodicContextFetchFromNearbyDevices]
group
-[ADContextManager _getBackgroundContext:]
(cache read)
(regenerating all values)
-[ADContextManager _getBackgroundContext:]_block_invoke
-[ADContextManager preheatBackgroundContext]
-[ADContextManager getBackgroundContext:]
v12@?0i8
-[ADContextManager _registerForBGUpdates]
-[ADContextManager _unregisterForBGUpdates]
-[ADContextManager _setCollectingContext:]
-[ADContextManager listener:shouldAcceptNewConnection:]
-[ADContextManager contextCollectorChangedToDevicesWithIdentifiers:localDeviceIsCollector:]_block_invoke
v16@?0@"ADDeviceContextConnection"8
-[ADContextManager _handlePushContextMessage:fromDeviceWithPeerInfo:completion:]_block_invoke_3
-[ADContextManager _handlePushContextMessage:fromDeviceWithPeerInfo:completion:]_block_invoke
-[ADContextManager _handleContextSnapshotPush:completion:]
-[ADContextManager _handleContextSnapshotPush:completion:]_block_invoke
v32@?0@8@16^B24
com.apple.assistant.music.fusetoken
-[ADContextManager _updateMultiUserPersonalizationTokensWithSingleUserTokenChanged:completion:]_block_invoke
v32@?0@"NSString"8@"ICLibraryAuthServiceClientTokenStatus"16^B24
v24@?0@"NSMutableDictionary"8@"NSError"16
-[ADContextManager _updateMusicPersonalizationTokenWithContext:completion:]_block_invoke_2
v24@?0@"ICLibraryAuthServiceClientTokenStatus"8@"NSError"16
v24@?0@"NSString"8@"NSError"16
source
notification
assistantd_current_home
com.apple.homed.current-home.changed
ADObserveCurrentHomeKitHomeChanges_block_invoke_2
current-home-notification
isNavigating
v16@?0@"SALocalSearchGetNavigationStatusCompleted"8
-[ADContextManager _updateNavStatusWithContext:completion:]_block_invoke_2
v24@?0@"AceObject"8@"NSError"16
-[ADContextManager _scheduleNowPlayingRefreshForReason:]_block_invoke
-[ADContextManager _scheduleNowPlayingRefreshForReason:]
UNKNOWN
-[ADContextManager _updateNowPlayingInfoWithContext:completion:]
-[ADContextManager _updateNowPlayingInfoWithContext:completion:]_block_invoke
v16@?0@"SAMPQueueState"8
-[ADContextManager _notePossiblePlayPausedStateChange:]
poll
-[ADContextManager _reallyUpdateBackgroundContextIfNowPlayingInfoChangedForReason:]
-[ADContextManager _updateBackgroundContextIfNowPlayingInfoChanged:]
PhoneCallState-notification
Invalid context data type
Nil Myriad advertisement context
-[ADContextManager pushMyriadAdvertismentContextToContextCollector:completion:]_block_invoke_2
-[ADContextManager _updateHomeAnnouncementWithContext:supplementalSnapshot:completion:]
-[ADContextManager _updateHomeAnnouncementWithContext:supplementalSnapshot:completion:]_block_invoke
-[ADContextManager _updateHomeAnnouncementWithContext:supplementalSnapshot:completion:]_block_invoke_2
-[ADContextManager _handleHomeAnnouncementSnapshotUpdate:]
v24@?0@"ADDeviceContextConnection"8^B16
didChange
com.apple.Preferences
com.apple.mobilephone
com.apple.MobileAddressBook
com.apple.mobilenotes
com.apple.mobilemail
com.apple.mobilecal
com.apple.PineBoard
com.apple.FaceTime
NSUserActivity
initNSUserActivity_block_invoke
ADContextManager.m
classNSUserActivity
/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
MediaPlayerLibrary
ADAlertContextQueue
VMVoicemailManager
initVMVoicemailManager_block_invoke
classVMVoicemailManager
/System/Library/PrivateFrameworks/VisualVoicemail.framework/VisualVoicemail
VisualVoicemailLibrary
ICLibraryAuthServiceClientTokenProvider
initICLibraryAuthServiceClientTokenProvider_block_invoke
classICLibraryAuthServiceClientTokenProvider
/System/Library/PrivateFrameworks/iTunesCloud.framework/iTunesCloud
iTunesCloudLibrary
com.apple.assistant.audio-session-assertion.server-connection
-[ADAudioSessionAssertionConnection initWithXPCConnection:]
%@ {pid = %d}
-[ADAudioSessionAssertionConnection dealloc]
%@ Deallocated
-[ADAudioSessionAssertionConnection acquireAudioSessionWithContext:relinquishmentHandler:]
-[ADAudioSessionAssertionConnection acquireAudioSessionWithContext:relinquishmentHandler:]_block_invoke
Assertion already acquired.
Failed to get acquisition service.
v24@?0@"AFAssertionContext"8@"NSError"16
Unable to acquire assertion from acquisition service.
-[ADAudioSessionAssertionConnection relinquishAudioSessionWithContext:error:options:completion:]
-[ADAudioSessionAssertionConnection relinquishAudioSessionWithContext:error:options:completion:]_block_invoke
-[ADAudioSessionAssertionConnection invalidate]
%@ Invalidated
-[ADAudioSessionAssertionConnection _finalizeWithContext:error:]
-[ADAudioSessionAssertionConnection _relinquishAssertionWithContext:error:options:]
-[ADAudioSessionAssertionConnection _clearXPCConnection]
Message sending failed.
Message sending timed out.
ADSettingsRequestHandler.m
request
-[AFSiriRequest(ADSettingsRequestHandler) _ad_handleSettingsRequestWithCompletionHandler:]
Unable to set setting with type "Unknown"
Unable to get setting with type "Unknown"
-[ADRequestDelayManager startDelayingWithType:success:]_block_invoke
-[ADRequestDelayManager stopDelayingAndSendCommands:completion:]_block_invoke
-[ADRequestDelayManager _resetDetector]
-[ADRequestDelayManager releaseStoredContextCommandsAndSendCommands:]
-[ADRequestDelayManager _beginTimerForContextCommands]
-[ADRequestDelayManager _beginTimerForContextCommands]_block_invoke
-[ADRequestDelayManager _bargeInTimeThresholdForDelayType:]
-[ADRequestDelayManager _delayForADOSMEDWithDelayType:completion:]_block_invoke
-[ADRequestDelayManager interceptCommand:completion:]
-[ADRequestDelayManager interceptCommand:completion:]_block_invoke
-[ADDeviceContextConnection dealloc]
com.apple.assistant.device-context.client-connection
-[ADDeviceContextConnection initWithQueue:xpcConnection:delegate:]
-[ADDeviceContextConnection updateLocalDeviceContext:]_block_invoke
-[ADDeviceContextConnection getLocalDeviceContextWithReply:]
-[ADDeviceContextConnection getLocalDeviceContextWithReply:]_block_invoke
-[ADDeviceContextConnection donateSerializedContextMapByPrivacyClass:withMetadataMap:forType:pushToRemote:completion:]
-[ADDeviceContextConnection _handleXPCConnectionInvalidation]
-[ADDeviceContextConnection _handleXPCConnectionInterruption]
-[ADDeviceContextConnection _clearXPCConnection]
-[ADDeviceContextConnection _invalidate]
-[ADDeviceContextConnection _remoteServiceDelegateWithErrorHandler:]
-[ADDeviceContextConnection _beginUpdateLocalDeviceContextWithReply:]
-[ADDeviceContextConnection _endUpdateLocalDeviceContext]
com.apple.siri.location.Error
ADPeerLocationRemote
-[ADPeerLocationRemote _startBestLocationTimer]
-[ADPeerLocationRemote _startBestLocationTimer]_block_invoke
-[ADPeerLocationRemote _cancelBestLocationTimer]
-[ADPeerLocationRemote _startUpdatingLocation]
-[ADPeerLocationRemote _getBestLocationWithCompletion:]_block_invoke
v24@?0@"_ADPBLocationSetPeerLocationRequest"8@"NSError"16
-[ADPeerLocationRemote _getBestLocationWithCompletion:]_block_invoke_2
looking up best location on behalf of peer
-[ADPeerLocationRemote _executeBestLocationCompletionWithLocation:error:]
found best location on behalf of peer
-[ADPeerLocationRemote peerConnection:handlePBSubclass:completion:]
-[ADPeerLocationRemote locationManager:didUpdateLocations:]
-[ADPeerLocationRemote locationManager:didFailWithError:]
-[ADPeerLocationRemote locationManager:didChangeAuthorizationStatus:]
-[ADPeerLocationRemote locationManagerDidPauseLocationUpdates:]
-[ADPeerLocationRemote locationManagerDidResumeLocationUpdates:]
-[_ADPBLocationGetPeerLocationRequest(ADPeerLocationRemote) _ad_performWithPeerLocationManagerRemote:completion:]
siri_enabled
speech_id
language_code
assistant_id
hostname
activity_continuation_allowed
dictation_enabled
shared_id
previous_langauge_code
previous_output_voice
output_voice
cloud_sync_enabled
should_censor_speech
user_agent
is_location_sharing_device
notification_preview_restricted_apps
temperature_unit
logging_assistant_id
logging_shared_id
store_front_id
airplay_route_id
ek_token
user_token
is_remote_playback_device
user_assigned_name
uts_required_request_data
data_sharing_opt_in_status
includesFamily = %@
includesHome = %@
includesRemoraDevices = %@
ADRapportLinkDiscoveryOptions::includesFamily
ADRapportLinkDiscoveryOptions::includesHome
ADRapportLinkDiscoveryOptions::includesRemoraDevices
https://configuration.apple.com/configurations/internetservices/cloudkit/siri-1.0.plist
ADPeerLocationConnection
v16@?0@"CLLocation"8
-[ADPeerLocationConnection getBestLocationWithCompletion:]_block_invoke
AcePassthroughSiriRequestClientBoundCommand
ADAcePassthroughSiriRequest.m
replyCommand
-[ADPeerConnectionProvider headerDataWithForceReconnect:]
-[ADPeerConnectionProvider _getNWConnectionWithInitialData:completion:]_block_invoke_2
-[ADPeerConnectionProvider _getNWConnectionWithInitialData:completion:]_block_invoke
Peer
v16@?0@"NSDictionary"8
beginAudioSessionRequest
beginAudioSessionResponse
keepAudioSessionAliveRequest
keepAudioSessionAliveResponse
endAudioSessionRequest
endAudioSessionResponse
ADBuddyStateDidChangeNotification
Buddy Monitor Queue
-[ADBuddyMonitor init]
complete
running
-[ADBuddyMonitor _updateBuddyState]_block_invoke
sourceIDSFirstRoutableDestination
source_airplay_id
gender
voice_name
MALE
FEMALE
(unknown: %i)
-[ADExternalRequestListener listen]_block_invoke
_ADHandleNewExternalRequestPeer_block_invoke
_ADHandleExternalRequestNotification
_ADRetrieveAnnounceNotificationRequestParametersFromMessage
_ADHandleExternalRequestLocalRequest_block_invoke
v16@?0@"SAStartLocalRequest"8
_ADHandleExternalRequestStartRequest
_ADHandleExternalRequestStartLocalRequest
_ADHandleExternalRequestStartLocalRequest_block_invoke
v16@?0@"AFSiriActivationResult"8
_ADHandleExternalRequestHomeAutomationBackgroundRequest
_ADHandleExternalRequestHomeAutomationBackgroundRequest_block_invoke
true
false
_ADHandleExternalRequestDeactivationRequest
_ADHandleExternalRequestNotificationWithdrawal
prefers_assistant_identifiers
included_context_types_in_request
excluded_context_keys_in_request
included_context_types_in_response
excluded_context_keys_in_response
request_id
context_snapshot
context_snapshot_by_assistant_identifier
com.apple.siri.TimerStore
+[ADSiriAnnouncementRequestCapabilityManager _classForPlatform:]
-[ADDiagnosticsManager updateLatencyDiagnosticConfiguration:completion:]
-[ADDiagnosticsManager updateLatencyDiagnosticConfiguration:completion:]_block_invoke
com.apple.assistant.device-sync.coordinator
-[ADDeviceSyncCoordinator deviceSyncMessageService:didFoundDeviceWithIdentifier:]
v32@?0@"NSString"8@"<ADDeviceSyncDataConsuming>"16^B24
-[ADDeviceSyncCoordinator deviceSyncMessageService:didLostDeviceWithIdentifier:]
-[ADDeviceSyncCoordinator deviceSyncMessageService:didReceiveMessage:fromDeviceWithIdentifier:completion:]
-[ADDeviceSyncCoordinator deviceSyncDataProviderDidUpdate:]
-[ADDeviceSyncCoordinator _sessionWithDeviceIdentifier:]
v32@?0@"NSString"8@"<ADDeviceSyncMessagingService>"16^B24
com.apple.assistant.device-sync.session.%@
v32@?0@"NSString"8@"ADDeviceSyncSession"16^B24
com.apple.siri.bksopenapplication.ErrorDomain
[request isKindOfClass:[ADAcePassthroughSiriRequest class]]
v28@?0@"AFSiriResponse"8B16@"NSError"20
-[SAAppsLaunchApp(ADSiriAppLaunchRequestHandler) _ad_handleAppLaunchCommandWithRequest:completion:]
v24@?0@"BSProcessHandle"8@"NSError"16
-[SAAppsGetRestrictedApps(ADSiriAppLaunchRequestHandler) _ad_handleAppLaunchCommandWithRequest:completion:]
System
hidden
v24@?0@"LSApplicationProxy"8^B16
-[SAAppsAppSearch(ADSiriAppLaunchRequestHandler) _ad_handleAppLaunchCommandWithRequest:completion:]
FBSOpenApplicationService
/System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices
FBSOpenApplicationOptions
FBSOpenApplicationServiceErrorDomain
initFBSOpenApplicationServiceErrorDomain_block_invoke
ADSiriAppLaunchRequestHandler.m
v56@?0@"NSString"8{_NSRange=QQ}16{_NSRange=QQ}32^B48
INAlternativeAppNames
INAlternativeAppName
B24@?0@"<ADDeviceSyncMessageSending>"8^B16
v24@?0@"ADDeviceSyncSnapshot"8@"NSError"16
-[ADDeviceSyncSession _receiveMessage:completion:]
v16@?0@"<ADDeviceSyncMessageMutating>"8
v16@?0@"ADDeviceSyncCommandPushGenerationsRequest"8
v16@?0@"ADDeviceSyncCommandPullGenerationsRequest"8
v16@?0@"ADDeviceSyncCommandPullDeltaRequest"8
v16@?0@"ADDeviceSyncCommandPullSnapshotRequest"8
There's no supported request in incoming message.
-[ADDeviceSyncSession _handlePingWithCompletion:]
-[ADDeviceSyncSession _handlePushGenerationsByDataType:completion:]
No data consumer for data types %@.
-[ADDeviceSyncSession _handlePullGenerationsForDataTypes:completion:]
No data provider for data types %@.
-[ADDeviceSyncSession _handlePullGenerationsForDataTypes:completion:]_block_invoke
-[ADDeviceSyncSession _handlePullDeltaForDataType:generation:limit:completion:]
-[ADDeviceSyncSession _handlePullDeltaForDataType:generation:limit:completion:]_block_invoke_2
-[ADDeviceSyncSession _handlePullDeltaForDataType:generation:limit:completion:]_block_invoke
No data provider for data type %@.
-[ADDeviceSyncSession _handlePullSnapshotForDataType:completion:]
-[ADDeviceSyncSession _handlePullSnapshotForDataType:completion:]_block_invoke_2
-[ADDeviceSyncSession _handlePullSnapshotForDataType:completion:]_block_invoke
-[ADDeviceSyncSession _sendMessage:completion:]
v24@?0@"ADDeviceSyncMessage"8@"NSError"16
-[ADDeviceSyncSession _pingWithCompletion:]
-[ADDeviceSyncSession _pingWithCompletion:]_block_invoke_3
There's no reply message.
-[ADDeviceSyncSession _pingWithCompletion:]_block_invoke
The sequence of the reply message is invalid.
There's no supported response in reply message.
-[ADDeviceSyncSession _pushGenerationsByDataType:completion:]
-[ADDeviceSyncSession _pushGenerationsByDataType:completion:]_block_invoke_2
-[ADDeviceSyncSession _pushGenerationsByDataType:completion:]_block_invoke
v16@?0@"ADDeviceSyncCommandPushGenerationsResponse"8
-[ADDeviceSyncSession _pullGenerationsForDataTypes:completion:]
-[ADDeviceSyncSession _pullGenerationsForDataTypes:completion:]_block_invoke_3
-[ADDeviceSyncSession _pullGenerationsForDataTypes:completion:]_block_invoke
v16@?0@"ADDeviceSyncCommandPullGenerationsResponse"8
-[ADDeviceSyncSession _pullDeltaForDataType:generation:limit:completion:]
-[ADDeviceSyncSession _pullDeltaForDataType:generation:limit:completion:]_block_invoke_2
-[ADDeviceSyncSession _pullDeltaForDataType:generation:limit:completion:]_block_invoke
v16@?0@"ADDeviceSyncCommandPullDeltaResponse"8
-[ADDeviceSyncSession _pullSnapshotForDataType:completion:]
-[ADDeviceSyncSession _pullSnapshotForDataType:completion:]_block_invoke_3
-[ADDeviceSyncSession _pullSnapshotForDataType:completion:]_block_invoke
v16@?0@"ADDeviceSyncCommandPullSnapshotResponse"8
AcePassthroughSiriResponseReplyCommand
<%@: %p %@>
-[ADSettingsService _getVoiceOver:completion:]
-[ADSettingsService _setVoiceOver:completion:]
-[ADSettingsService _getPlaybackAudioRoute:completion:]
-[ADSettingsService _getNoiseManagement:completion:]_block_invoke
-[ADSettingsService _getNoiseManagement:completion:]
-[ADSettingsService _setNoiseManagement:completion:]_block_invoke
-[ADSettingsService _setNoiseManagement:completion:]
-[ADSettingsService _setBoolSetting:currentValueBlock:setValueBlock:completion:]
Dry Run
ADValidateBluetoothDeviceForNoiseManagement
Voice Activity
-[ADOpportuneSpeakingVoiceActivityModel setSpeakable:]_block_invoke
B8@?0
coded_location
com.apple.siri.acousticsignature
ADAcousticFingerprinter
-[ADAcousticFingerprinter _connectionInterrupted]
-[ADAcousticFingerprinter _connectionInvalidated]
-[ADAcousticFingerprinter _configureWithCurrentASBD]
-[ADAcousticFingerprinter _convertPCMDataForFingerprinting:]
-[ADAcousticFingerprinter appendPCMData:]_block_invoke
v16@?0@"NSData"8
-[ADAcousticFingerprinter flush]_block_invoke_2
ASXSampleRateFromInt
events
stream_uid
delivery_stream
context_data
context_data_type
date_created
status
record_id
TEXT
INTEGER
BLOB
REAL
events_index_stream_uid
events_index_timestamp
events_index_date_created_status
events_index_covering_status_stream_uid
events_index_event_batch
events_index_record_uuid
com.apple.assistant.analytics-store
-[ADAnalyticsStore deleteEventRecordsWithRecordIDs:completion:]
-[ADAnalyticsStore purgeDeletedEventRecordsBeforeOrEqualToDate:completion:]
-[ADAnalyticsStore purgeWithCompletion:]
Large File Size (%@)
-[ADAnalyticsStore purgeWithCompletion:]_block_invoke
-[ADAnalyticsStore resetWithCompletion:]
Settings Client
-[ADAnalyticsStore resetWithCompletion:]_block_invoke
-[ADAnalyticsStore checkpointWithCompletion:]
-[ADAnalyticsStore checkpointWithCompletion:]_block_invoke_2
-[ADAnalyticsStore updateRecordsWithSpeechId:toUpdatedSpeechId:withCompletion:]
-[ADAnalyticsStore _resetForReason:error:]
reason
unknown
-[ADAnalyticsStore _preparedDatabaseWithError:]
retryCount
events_index_date_inserted
events_index_date_created
v24@?0@"NSString"8@"NSArray"16
UUID()
-[ADAnalyticsStore _insertEventRecords:error:]
-[ADAnalyticsStore _deleteEventRecordsBeforeOrEqualToTimestamp:deliveryStream:eventStreamUID:streamSpeechId:error:]
-[ADAnalyticsStore _deleteEventRecordsWithRecordIDs:error:]
-[ADAnalyticsStore _purgeDeletedEventRecordsBeforeOrEqualToDate:error:]
-[ADAnalyticsStore _fetchEventStreamUIDsWithError:]
-[ADAnalyticsStore _fetchEventRecords:afterTimestamp:eventStreamUID:streamSpeechId:deliveryStream:error:]
-[ADAnalyticsStore _fetchEventRecordsCreatedAfterDate:error:]
-[ADAnalyticsStore _updateRecordsWithSpeechId:toUpdatedSpeechId:error:]
ADFlowServiceListener
-[ADFlowServiceListener setupListener]_block_invoke
-[ADFlowServiceListener listener:shouldAcceptNewConnection:]
-[ADFlowServiceListener listener:shouldAcceptNewConnection:]_block_invoke
-[ADFlowServiceListener getPersonalSettingsForSharedUserID:completion:]
User Settings unavailable
-[SANodeIntent(ADGenericIntentRequestTransformer) ad_filteredDictionaryWithAppID:]
ADGenericIntentRequestTransformer.m
[aceCommand isKindOfClass:[SAIntentGroupSupportedIntentResponse class]]
com.apple.ActivityMonitorApp
com.apple.NanoMail
-[ADCommandCenter(NanoServices) taskmaster:didReceivePunchoutOutcome:]_block_invoke
-[ADCommandCenter(NanoServices) taskmaster:didLaunchApplicationForRequestWithId:]
-[ADCommandCenter(NanoServices) appLaunchHandler:didLaunchAppForRequestId:]
ADSiriUserNotificationRequestUUID
+[ADSiriUserNotificationRequestCapabilityManager _classForPlatform:]
com.apple.assistant.local-request-provider
ASSISTANT_SERVICES_LOCAL_MUSIC_SUBSCRIPTION_LEASE_%@
com.apple.siri.client-state-changed
-[ADMediaPlaybackContextProvider pineBoardSystemStateObserver:pineBoardStateDidChangeFrom:to:]
-[ADMediaPlaybackContextProvider nowPlayingObserver:playbackStateDidChangeFrom:to:lastPlayingDate:]
-[ADMediaPlaybackContextProvider nowPlayingObserverNowPlayingInfoDidChange:]
-[ADMediaPlaybackContextProvider nowPlayingObserver:proxyGroupPlayerStateDidChangeFrom:to:]
-[ADMediaPlaybackContextProvider _donateMediaPlaybackContextWithSnapshot:date:]
v16@?0@"<AFMediaPlaybackStateSnapshotMutating>"8
-[ADMediaPlaybackContextProvider _handlePlaybackStateDidChangeToState:fromState:onDate:lastPlayingDate:completion:]
-[ADMediaPlaybackContextProvider _handlePlaybackStateDidChangeToState:fromState:onDate:lastPlayingDate:completion:]_block_invoke
-[ADMediaPlaybackContextProvider updateProximityObservationsForPlayState:]
-[ADMediaPlaybackContextProvider _updateExpirationDateForMediaPlaybackSnapshotBasedOnDate:]
-[ADExternalNotificationRequestQueue enqueueAnnouncementRequest:]_block_invoke
v24@?0@"ADAnnounceNotificationRequest"8@"NSString"16
-[ADExternalNotificationRequestQueue enqueueAnnouncementRequest:]
-[ADExternalNotificationRequestQueue nextAnnouncementRequest]
-[ADExternalNotificationRequestQueue completeCurrentRequestWithSuccess:forReason:]
-[ADExternalNotificationRequestQueue clearRequestQueue]
-[ADExternalNotificationRequestQueue notificationRequestForNotificationIdentifierInAnnouncementQueue:]_block_invoke
v32@?0@"NSString"8@"NSMutableArray"16^B24
-[ADExternalNotificationRequestQueue removeAnnouncementRequest:]
-[ADExternalNotificationRequestQueue removeAnnouncementRequest:]_block_invoke
v32@?0@"ADAnnounceNotificationRequest"8Q16^B24
-[ADExternalNotificationRequestQueue fetchUnreadNotificationsFromThreadAfterNotificationWithID:completion:]
ADSiriRequestSucceededResponseTransformer.m
Request succeeded response transformer expected response of type %@, but got %@ instead; request command: %@
com.apple.assistant.announce.carplay
-[AFCarPlayAnnouncementRequestCapabilityProvider _notifyObserversOfUpdatedAvailableAnnouncementRequestTypes:]
CARSessionStatus
Class getCARSessionStatusClass(void)_block_invoke
AFCarPlayAnnouncementRequestCapabilityProvider.m
void *CarKitLibrary(void)
/System/Library/PrivateFrameworks/CarKit.framework/CarKit
/System/Library/PrivateFrameworks/CarKit.framework/Contents/MacOS/CarKit
NSString *getINSearchForMessagesIntentIdentifier(void)
void *IntentsLibrary(void)
/System/Library/Frameworks/Intents.framework/Contents/MacOS/Intents
NSString *getINSendMessageIntentIdentifier(void)
-[ADClientLiteListener listener:shouldAcceptNewConnection:]
-[ADClientLiteListener doClientWork:withTimeoutBlock:]
-[ADClientLiteListener doClientWork:withTimeoutBlock:]_block_invoke
-[ADClientLiteListener doDelayedClientWorkIfAny]
-[ADClientLiteListener _doDelayedClientWorkIfAny:]_block_invoke
-[ADClientLiteListener _incrementAndTestExecutionCount]
-[ADClientLiteListener _decrementAndTestExecutionCount]
-[ADClientLite handleRemoteCommand:afterCurrentRequest:isOneWay:completion:]
v24@?0B8@"NSError"12B20
v32@?0@"NSNumber"8@"NSError"16@"NSNumber"24
-[ADClientLite handleRemoteCommand:afterCurrentRequest:isOneWay:completion:]_block_invoke_2
v16@?0@"SABaseCommand"8
v24@?0@"SABaseCommand"8@"NSError"16
-[ADClientLite adRequestDidReceiveCommand:reply:]_block_invoke
Not resetting announce notifications.
Resetting announce notifications in CarPlay to unmuted.
Resetting announce notifications in CarPlay to muted.
-[ADCarPlayAnnouncementRequestCapabilityProvider _updateForCarPlaySessionConnected:]
ADExtensionServiceIdentifier
-[ADExtensionService handleCommand:forDomain:executionContext:reply:]
-[ADExtensionService handleCommand:forDomain:executionContext:reply:]_block_invoke_2
-[ADExtensionService handleCommand:forDomain:executionContext:reply:]_block_invoke
v32@?0@"NSString"8@"NSString"16@"NSUUID"24
-[ADExtensionService resetExternalResources]
-[ADExtensionService cancelOperationsForRequestID:fromRemote:]
-[ADExtensionService extensionService:prepareIntent:]
B16@?0@"INPerson"8
-[ADExtensionService extensionService:prepareForStartPlaybackWithDestination:intent:completion:]
-[ADExtensionService extensionService:handleFailedStartPlaybackWithDestination:completion:]
-[ADExtensionService _meCard]
a meCard
(null)
-[ADExtensionService _replacement:forString:meCardCache:]
-[ADExtensionService _preparePerson:meCardCache:]
-[ADExtensionService _prepareNameComponents:meCardCache:]
com.apple.private.alloy.siri.proxy
ADRemoteContextStore
-[ADRemoteContextStore startCollectingContext]_block_invoke
-[ADRemoteContextStore stopCollectingContext]_block_invoke
v24@?0@"AFPeerContentTuple"8^B16
-[ADRemoteContextStore getContextSnapshotIncludingKeys:excludingMandatoryKeys:completion:]
-[ADRemoteContextStore getContextSnapshotIncludingKeys:excludingMandatoryKeys:completion:]_block_invoke
v24@?0@"AFPeerInfo"8@"AFDeviceContext"16
-[ADRemoteContextStore _fetchContextFromCollectorAndForceFetchingFromDevicesWithPeerInfo:completion:]
-[ADRemoteContextStore setDeviceContext:includedKeys:excludedKeys:forDeviceWithPeerInfo:completion:]_block_invoke
deviceContextUpdate
-[ADRemoteContextStore getSerializedDeviceContextSnapshotIncludingKeys:excludingMandatoryKeys:completion:]_block_invoke
-[ADRemoteContextStore _dumpStateForReason:]_block_invoke
aceVersion
assistantIdentifier
buildVersion
productType
sharedUserIdentifier
userAssignedDeviceName
userInterfaceIdiom
homeAccessoryInfo
aceVersion = %@
assistantIdentifier = %@
buildVersion = %@
productType = %@
sharedUserIdentifier = %@
userAssignedDeviceName = %@
userInterfaceIdiom = %@
homeAccessoryInfo = %@
ADDeviceCirclePeerData::aceVersion
ADDeviceCirclePeerData::assistantIdentifier
ADDeviceCirclePeerData::buildVersion
ADDeviceCirclePeerData::productType
ADDeviceCirclePeerData::sharedUserIdentifier
ADDeviceCirclePeerData::userAssignedDeviceName
ADDeviceCirclePeerData::userInterfaceIdiom
ADDeviceCirclePeerData::homeAccessoryInfo
ADDeviceCircleManager
v16@?0@"AFHomeAccessoryInfo"8
-[ADDeviceCircleManager _initWithQueue:]_block_invoke
-[ADDeviceCircleManager _setAssistantId:forDeviceWithIdsDeviceUniqueIdentifier:]
v32@?0@"NSString"8@"NSString"16^B24
-[ADDeviceCircleManager getContextCollectorDeviceIdentifiersWithCompletion:]_block_invoke
homepod_without_context_collector
-[ADDeviceCircleManager _updateAssistantIdentifierAndSharedUserIdentifier]_block_invoke
v24@?0@"NSString"8@"NSString"16
v16@?0@"ADAccount"8
-[ADDeviceCircleManager _updateCurrentAccessoryInfo:]
ADDeviceCircleManager.m
[assistantIdentifier length] > 0
[idsDeviceUniqueIdentifier length] > 0
[homeKitAccessoryIdentifier length] > 0
[rapportEffectiveIdentifier length] > 0
peerInfoToMatch != nil
v16@?0@"<ADDeviceCirclePeerDataMutating>"8
-[ADDeviceCircleManager _updateLocalPeerInfo:]
-[ADDeviceCircleManager _updateRemotePeerInfo:]
v16@?0@"<AFPeerInfoMutating>"8
ADDeviceCircleGetBestPeerInfo
primary
v32@?0@"NSString"8@"SiriCoreConnectionTCPInfoMetrics"16^B24
-[AFSiriRequest(ADTimerRequestHandler) _ad_handleTimerRequestWithCompletionHandler:]
v24@?0@"STTimer"8@"NSError"16
v16@?0@"<ADTimerStoring>"8
ADPeerCloudServiceActiveAccountStatusDidChangeNotification
ADPeerCloudService
-[ADPeerCloudService _init]_block_invoke
com.apple.private.alloy.siri.icloud
-[ADPeerCloudService _sendProto:ofType:originalRequestId:toPeers:responseType:completion:]
-[ADPeerCloudService _uniqueIdentifierForPeer:]
-[ADPeerCloudService _peerInfoForIDSDeviceUniqueIdentifier:allowNonPeers:]
-[ADPeerCloudService localPeerIDSDeviceUniqueIdentifier]
-[ADPeerCloudService _updateActiveAccountState]
-[ADPeerCloudService _companionIdentifierDidChangeNotification:]
-[ADPeerCloudService _airplayRouteDidChange:]
-[ADPeerCloudService _updateAirPlayRouteIdentifierWithCompletion:]
-[ADPeerCloudService _updateAirPlayRouteIdentifierWithCompletion:]_block_invoke_2
v16@?0@"NSString"8
-[ADPeerCloudService sendSharedData:toPeers:]
-[ADPeerCloudService setSharedDataObserver:withHandle:]
-[ADPeerCloudService _notifyObserversOfSharedData:fromPeer:]
-[ADPeerCloudService getSharedDataFromPeers:completion:]
-[ADPeerCloudService getSharedDataFromPeers:completion:]_block_invoke_2
v24@?0@"NSSet"8@"NSError"16
-[ADPeerCloudService _notifyObserversOfSharedDataRequestFromPeer:completion:]
-[ADPeerCloudService _startRemoteRequest:onPeers:completion:]
-[ADPeerCloudService _startRemoteRequest:onPeers:completion:]_block_invoke_2
-[ADPeerCloudService startRemoteExecution:onPeer:allowsRelay:throughProxyDevice:executionContext:completion:]
-[ADPeerCloudService startRemoteSerialzedCommandExecution:onPeer:allowsRelay:executionContext:completion:]
-[ADPeerCloudService startRemoteSerialzedCommandExecution:onPeer:allowsRelay:executionContext:completion:]_block_invoke_3
-[ADPeerCloudService startListeningForRemote]
v32@?0@"AFRequestInfo"8@"ADPeerInfo"16@?<v@?B>24
-[ADPeerCloudService startListeningForRemote]_block_invoke
-[ADPeerCloudService _notifyObserversOfRequestInfo:fromPeer:completion:]
-[ADPeerCloudService _handleRemoteExecution:peer:completion:]
-[ADPeerCloudService _handleRemoteExecution:peer:completion:]_block_invoke
-[ADPeerCloudService service:account:incomingUnhandledProtobuf:fromID:context:]
v28@?0@"PBCodable"8S16@"NSError"20
-[ADPeerCloudService service:account:identifier:didSendWithSuccess:error:context:]
-[ADPeerCloudService _handleMessageResponse:ofType:orError:fromID:handler:]
-[ADPeerCloudService service:activeAccountsChanged:]
-[ADPeerCloudService service:devicesChanged:]
-[ADPeerCloudService service:devicesChanged:]_block_invoke
-[PBCodable(ADPeerCloudService) _ad_performWithCloudService:fromPeer:completion:]
-[_ADPBDeviceSetDataRequest(ADPeerCloudService) _ad_performWithCloudService:fromPeer:completion:]
-[_ADPBDeviceGetDataRequest(ADPeerCloudService) _ad_performWithCloudService:fromPeer:completion:]
-[_ADPBDeviceStartRemoteRequest(ADPeerCloudService) _ad_performWithCloudService:fromPeer:completion:]
-[_ADPBDeviceExecuteOnRemoteRequest(ADPeerCloudService) _ad_performWithCloudService:fromPeer:completion:]
unspecified
announced
inopportune
appTemporarilyMuted
announceTemporarilyMuted
siriAlreadyInUse
withdrawn
(unknown)
com.apple.siri.AlarmStore
com.apple.siri.ManagedObjectService.
ADSpeechLogQueue
en-US
yyyy_MM_dd-HHmmss
-[ADSpeechLog beginNewSpeechLogWithFormat:]_block_invoke
OPUS
%@/%@-%@.%@
format
path
-[ADSpeechLog cancelCurrentSpeechLog]_block_invoke
-[ADSpeechLog endSpeechLog]_block_invoke
Speex_NB
8000Hz
+[ADSpeechLog buffersFromSpeechLogAtURL:isNarrowBand:]
-[ADDeviceAuthenticationSessionV0 invalidate]
-[ADDeviceAuthenticationSessionV0 handshakeRequestWithCertificateData:error:]
method
NACInit
-[ADDeviceAuthenticationSessionV0 completeWithHandshakeResponse:error:]
NACKeyEstablishment
-[ADDeviceAuthenticationSessionV0 signData:error:]
NACSign
ADLocationRestrictionDidChangeNotification
ADLocationManager
-[ADLocationManager initWithSerialQueue:]_block_invoke
-[ADLocationManager _locationManager]
-[ADLocationManager _generateResponseForGetRequestOriginCommand:withUnshiftedLocation:completion:]_block_invoke
-[ADLocationManager _generateResponseForGetRequestOriginCommand:withUnshiftedLocation:completion:]
v32@?0{?=dd}8d24
-[ADLocationManager _stopMonitoringLocation]
-[ADLocationManager _cancelLocationSLATimer]
refID
-[ADLocationManager _triggerLocationABCForSubtype:]
-[ADLocationManager _scheduleLocationSLATimer]
-[ADLocationManager _scheduleLocationSLATimer]_block_invoke
slow_location_update
-[ADLocationManager _cancelLocationTimer]
-[ADLocationManager _scheduleLocationTimerWithTimeout:]
-[ADLocationManager _scheduleLocationTimerWithTimeout:]_block_invoke
timeout
NULL
location_timeout
desiredAccuracy
-[ADLocationManager _startMonitoringLocationForGetRequestOrigin:completion:]
-[ADLocationManager _shouldSendLocationUpdate:fromLocation:forCommand:]
-[ADLocationManager _requestLocationWithBestAccuracy]
-[ADLocationManager _requestLocationWithBestAccuracy]_block_invoke
-[ADLocationManager _requestLocationForGetRequestOrigin:completion:]
v16@?0@"SASetRequestOrigin"8
-[ADLocationManager peerLocationConnection:didReceiveUnsolicitedLocation:]
-[ADLocationManager peerLocationConnection:didReceiveUnsolicitedLocation:]_block_invoke
-[ADLocationManager peerLocationConnectionSuggestsClearingCachedLocation:]
-[ADLocationManager locationManager:didUpdateLocations:]
locationTimestamp
horizontalAccuracy
-[ADLocationManager locationManager:didFailWithError:]
errorCode
errorDomain
newAuthorization
lastAuthorization
lastEnabled
-[ADLocationManager locationManagerDidChangeAuthorization:]
-[ADLocationManager updateWithLocation:locationStatus:]
-[ADLocationManager updateWithLocation:locationStatus:]_block_invoke
v16@?0@"AFLocationSnapshot"8
-[ADLocationManager updateLocationSnapshotWithCompletion:]_block_invoke
v16@?0@"<AFLocationSnapshotMutating>"8
-[ADLocationManager updateLocationSnapshotWithCompletion:]_block_invoke_2
-[ADLocationManager updateLocationForCommand:completion:]_block_invoke
-[ADLocationManager acquireLocationInUseAssertionForReason:completion:]
-[ADLocationManager acquireLocationInUseAssertionForReason:completion:]_block_invoke
Assistant Daemon requires location to handle Siri & Dictation requests
-[ADLocationManager releaseLocationInUseAssertionForReason:]
%s: over-releasing location assertion due to %@
-[ADLocationManager releaseLocationInUseAssertionForReason:]_block_invoke
local_context_type
-[ADLocalContextStore _localContextWithPrivacyClass:]
-[ADLocalContextStore pushContextToContextCollectorIncludingKeys:excludingMandatoryKeys:expectingResponseIncludingKeys:excludingMandatoryKeys:completion:]_block_invoke
external_request
-[ADLocalContextStore _updateLocalPeerInfo:]
-[ADLocalContextStore _pushContextToCollector:forReason:includingKeys:excludingMandatoryKeys:includingKeysInResponse:excludingMandatoryKeysInResponse:completion:]
-[ADLocalContextStore donateContext:withMetadata:pushToRemote:]
-[ADLocalContextStore donateContext:withMetadata:pushToRemote:]_block_invoke_3
v24@?0@"<AFContextSnapshot>"8@"AFDeviceContextMetadata"16
-[ADLocalContextStore donateContext:withMetadata:pushToRemote:]_block_invoke
-[ADLocalContextStore donateSerializedContextMapByPrivacyClass:withMetadataMap:forType:pushToRemote:completion:]
ContextCollectorChanged
-[ADLocalContextStore contextCollectorChangedToDevicesWithIdentifiers:localDeviceIsCollector:]_block_invoke
-[ADLocalContextStore localPeerInfoUpdatedFrom:to:]_block_invoke
-[SADomainCommand(ADMediaRemote) _ad_performAudioPausingCommand:mediaRemoteService:replyHandler:]_block_invoke
v24@?0@"<SAAceCommand>"8@"NSError"16
-[SANPStartPlayback(ADMediaRemote) _ad_performWithMediaRemoteService:replyHandler:]
-[SANPStartPlayback(ADMediaRemote) _ad_performWithMediaRemoteService:replyHandler:]_block_invoke
local
remote
Client failed to prepare for StartPlayback
x-apple-siri-app
v20@?0I8^{__CFArray=}12
-[SANPGetVolumeLevel(ADMediaRemote) _ad_performWithMediaRemoteService:replyHandler:]
-[SANPSetVolumeLevel(ADMediaRemote) _ad_volumeAction]
-[SANPSetVolumeLevel(ADMediaRemote) _ad_performWithMediaRemoteService:replyHandler:]
-[SAMPGetState(ADMediaRemote) _ad_performWithMediaRemoteService:replyHandler:]
com.apple.music
Unsupported playback position request
-[ADMediaRemoteService _buildCacheOfWhaServiceSupportedCommands]
-[ADMediaRemoteService handleCommand:forDomain:executionContext:reply:]
com.apple.ace.media.SetQueue
metricsContext
_ADAddWHAIdentifiersToSAMPSetQueue
clientID
beginTime
WHAMetrics
metricsContextValue
com.apple.assistantd.dictation.session-controller
startSessionForReason:languageCode:options:speechRequestOptions:
-[ADDictationSessionTracker startSessionForReason:languageCode:options:speechRequestOptions:]_block_invoke
stopSessionForReason:
-[ADDictationSessionTracker stopSessionForReason:]_block_invoke
notifySpeechRecognitionTransactionStoppedForReason:sessionUUID:
-[ADDictationSessionTracker notifySpeechRecognitionTransactionStoppedForReason:sessionUUID:]_block_invoke
notifyAudioFileIOTransactionStoppedForReason:sessionUUID:
-[ADDictationSessionTracker notifyAudioFileIOTransactionStoppedForReason:sessionUUID:]_block_invoke
-[ADDictationSessionTracker _addSession:]
-[ADDictationSessionTracker _removeSession:]
Trying to retrieve the active session, but found %tu active sessions.
-[ADDictationSessionTracker _beginSpeechRecognitionTransactionForReason:session:]
Trying to begin a dictation transcription transaction (reason: %@), but found %tu active session(s).
Trying to begin a dictation transcription transaction (reason: %@), but the transaction state is %zd.
-[ADDictationSessionTracker _beginAudioFileIOTransactionForReason:session:]
Trying to begin a dictation audio file transaction (reason: %@), but found %tu active session(s).
Trying to begin a dictation audio file transaction (reason: %@), but the transaction state is %ld.
-[ADDictationSessionTracker _endSessionTransactionForReason:session:isSpeechTransaction:]
-[ADDictationSessionTracker _endSpeechRecognitionTransactionForReason:session:]
Trying to end a dictation transcription transaction (reason: %@), but the transaction state is stopped
-[ADDictationSessionTracker _endAudioFileIOTransactionForReason:session:]
Trying to end a dictation audio file transaction (reason: %@), but the transaction state is stopped
+[ADExperimentManager(Tracer) tracerAllocationsWithQueue:]
+[ADExperimentManager(Tracer) tracerAllocationsWithQueue:]_block_invoke
+[ADExperimentManager(Tracer) getActiveABExperimentsFromProvider:environment:]
+[ADExperimentManager(Tracer) getActiveABExperimentsFromProvider:environment:]_block_invoke
v24@?0@"TRIExperimentAllocationStatus"8^B16
+[ADExperimentManager(Tracer) getActiveEXPExperimentsFromProvider:environment:]
+[ADExperimentManager(Tracer) getActiveEXPExperimentsFromProvider:environment:]_block_invoke
+[ADExperimentManager(Tracer) getAllEXPExperimentsFromProvider:cursor:environment:fromDate:]
+[ADExperimentManager(Tracer) getAllEXPExperimentsFromProvider:cursor:environment:fromDate:]_block_invoke
v24@?0@"TRIAllocationStatus"8^B16
+[ADExperimentManager(Tracer) treatmentAllocationStatusFromAllocationStatusType:]
+[ADExperimentManager(Tracer) emitActiveExperiments:]
+[ADExperimentManager(Tracer) emitUpdatedExperiments:]
ADSecurityServiceEncryptionKeyDidChangeNotification
com.apple.assistant.security.service.procedure
com.apple.assistant.security.service.keychain
com.apple.assistant.security.service.callback
-[ADSecurityService init]_block_invoke
v32@?0@"NSData"8@"NSData"16@"NSError"24
error
v32@?0@"NSString"8@"NSData"16^B24
-[ADSecurityService _accountDidChange:]
B24@?0@"NSString"8^B16
@"NSDictionary"16@?0@"ADRapportProximityObservation"8
ADProximityTuplesForProximitySignals_block_invoke_2
ADProximityTuplesForProximitySignals_block_invoke
v32@?0@"NSString"8@"ADRapportProximityObservation"16^B24
ADProximityTuplesForProximitySignals
ADProximityObservationForHistoricalProximityObservations_block_invoke
v32@?0@"ADRapportProximityObservation"8Q16^B24
ADDeviceProximityManager
v16@?0@"<AFSiriActivationContextMutating>"8
-[ADDeviceProximityManager performProximityScan]
-[ADDeviceProximityManager _stopScanning]
-[ADDeviceProximityManager getDeviceProximityRelativeToLocalDeviceWithDeviceContexts:includesAllReachableDevices:completion:]_block_invoke_2
-[ADDeviceProximityManager getDeviceProximityRelativeToLocalDeviceWithDeviceContexts:includesAllReachableDevices:completion:]_block_invoke
@"NSDictionary"16@?0@"AFPeerContentTuple"8
v24@?0@"AFPeerInfo"8@"NSArray"16
@24@?0@"NSString"8@"NSArray"16
-[ADDeviceProximityManager requestLifecycleObserver:requestDidEndWithInfo:origin:client:]_block_invoke
-[ADDeviceProximityManager notifyObserver:didReceiveNotificationWithToken:]
-[ADDeviceProximityManager notifyObserver:didReceiveNotificationWithToken:]_block_invoke
_ADProximityTuplesForDeviceContexts
@"NSString"16@?0@"AFDeviceContext"8
_ADProximityTuplesForDeviceContexts_block_invoke
@"AFPeerContentTuple"16@?0@"AFPeerContentTuple"8
_ADProximityTuplesForPeerInfo
v16@?0@"<ADRapportProximityObservationMutating>"8
@16@?0@"ADRapportProximityObservation"8
discoveryOptions = %@
transportOptions = %@
enablesProximityTracking = %@
ADRapportLinkConfiguration::discoveryOptions
ADRapportLinkConfiguration::transportOptions
ADRapportLinkConfiguration::enablesProximityTracking
_temperatureUnit
_twentyFourHourTimeDisplay
_region
_countryCode
_preferredLanguage
experiments
com.apple.siri.experiment.vended
timeToResolve
fetchedRemote
groupIdentifier
configurationIdentifier
com.apple.assistant.experiment-manager
-[ADExperimentManager synchronizeExperimentConfigurationsIfApplicableWithCompletion:]
-[ADExperimentManager synchronizeExperimentConfigurationsIfApplicableWithCompletion:]_block_invoke
v28@?0@"AFExperimentConfiguration"8B16@"NSError"20
v28@?0@"AFExperiment"8B16@"NSError"20
-[ADExperimentManager _buildConfigurationsByIdentifier]
-[ADExperimentManager _buildServerConfigurationInfosByIdentifier]
v32@?0@"NSString"8@"AFExperimentConfiguration"16^B24
-[ADExperimentManager _createExperimentForExperimentConfiguration:experimentIdentifier:]
v16@?0@"<AFExperimentStateMutating>"8
-[ADExperimentManager _serverConfigurationForServerConfigurationInfo:completion:]_block_invoke_2
salt
-[ADExperimentManager _remoteFetchConfigMetadataWithServerConfigurationInfo:completion:]_block_invoke
v32@?0@"NSHTTPURLResponse"8@"NSData"16@"NSError"24
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
.plist
-[ADExperimentManager _storeServerConfig:completion:]
-[ADExperimentManager _fetchDictionaryWithFileURL:]
ADLanguageCodeKeepSame
ADCallStateDidChangeNotification
ADActiveAccountIdentifierDidChangeNotification
com.apple.Home
PersonalRequestsActivityCategory
com.apple.siri.PersonalRequestsActivity
ADCommandCenterQueue
-[ADCommandCenter init]
-[ADCommandCenter init]_block_invoke_2
-[ADCommandCenter _addOutstandingRequestId:forReason:]
-[ADCommandCenter _removeOutstandingRequestId:forReason:]
-[ADCommandCenter _createRootExecutionContextForRequestID:]
-[ADCommandCenter _destroyRootExecutionContextForRequestID:]
-[ADCommandCenter _beginRemoteExecutionContextForCommand:fromPeer:withRemoteExecutionInfo:]
-[ADCommandCenter _endRemoteExecutionContext:]
-[ADCommandCenter _addExecutionDevice:forCommandExecutionContext:]
-[ADCommandCenter _removeExecutionDevicesForLocalRequestWithId:]
-[ADCommandCenter _clearAllExecutionDevices]
-[ADCommandCenter _addCompletion:forCommand:forKey:]
-[ADCommandCenter _addCompletion:forCommand:forKey:]_block_invoke
-[ADCommandCenter _invokeCompletionForCommand:]
-[ADCommandCenter _invokeAllCompletionsWithError:]
-[ADCommandCenter _addHandledCommandId:forRequestId:]
-[ADCommandCenter _handledCommandIdsForRequestId:]
-[ADCommandCenter _addPostCommandHandlingBlock:forCommandId:requestId:]
com.apple.mobileipod.assistant
-[ADCommandCenter _serviceManager]
com.apple.assistand
-[ADCommandCenter _startUpdatingMotionActivity]_block_invoke
-[ADCommandCenter _stopUpdatingMotionActivity]_block_invoke
-[ADCommandCenter _setCurrentRequest:]
-[ADCommandCenter _requestWillStartWithInfo:showNetworkActivityIndicator:]
-[ADCommandCenter _requestDidEnd]
-[ADCommandCenter _clearRequestDelegateState]
-[ADCommandCenter _clearSpeechDelegateState]
-[ADCommandCenter _replaceRequestDelegate:withInfo:andCompletion:]
-[ADCommandCenter _completeRequestForCurrentDelegate:error:]
-[ADCommandCenter _replaceSpeechDelegateWhenReady:waitForRecordingToFinish:suppressAlert:withCompletion:]
-[ADCommandCenter _speechCaptureCompleted]
-[ADCommandCenter _didLaunchAppForRequestWithIdentifier:]
-[ADCommandCenter _refIdIsSpeechStart:]
-[ADCommandCenter _sendRequestToServer:]
-[ADCommandCenter _sendRollbackCommandForCommand:]
-[ADCommandCenter _reallyHandleNewStartRequest:info:]
-[ADCommandCenter _reallyHandleNewStartLocalRequest:]
request = %@, requestInfo = %@, delegate = %@
-[ADCommandCenter _startLocalRequest:withRequestInfo:forDelegate:suppressCancelationAlertIfCapturingSpeech:completion:]
-[ADCommandCenter _startLocalRequest:withRequestInfo:forDelegate:suppressCancelationAlertIfCapturingSpeech:completion:]_block_invoke
-[ADCommandCenter _handleNextCallbacksForReply:forCommand:forRequestId:withExecutionContext:]
-[ADCommandCenter _handleNextCallbacksForReply:forCommand:forRequestId:withExecutionContext:]_block_invoke
-[ADCommandCenter _cancelCurrentRequestForReason:andError:]
-[ADCommandCenter _cancelCrossDeviceRequestOperationsForLocalRequestWithId:]_block_invoke
-[ADCommandCenter _cancelCrossDeviceRequestOperationsForLocalRequestWithId:]
-[ADCommandCenter _cancelCrossDeviceRequestOperationsForRemoteRequest]
-[ADCommandCenter _cancelCrossDeviceRequestOperationsForRemoteRequest]_block_invoke
-[ADCommandCenter _shutdownAfterDelay:]_block_invoke
-[ADCommandCenter _shutdownAfterDelay:]
-[ADCommandCenter _restrictedCommands]
-[ADCommandCenter _shouldIgnoreCommand:executionContext:]
-[ADCommandCenter _handleIgnoredCommand:executionContext:completion:]
-[ADCommandCenter _handleCommand:executionContext:completion:]
-[ADCommandCenter _handleCommandResponse:error:forCommand:executionContext:completion:]
-[ADCommandCenter _preheatCallbacksForCommand:]
-[ADCommandCenter _performCallbacksForCommand:reply:executionContext:error:]
-[ADCommandCenter _handleServiceCommand:afterMyriadDecision:executionContext:completion:]
-[ADCommandCenter _handleServiceCommand:afterMyriadDecision:executionContext:completion:]_block_invoke_2
resultCallbackCode
-[ADCommandCenter _handleServiceCommand:afterMyriadDecision:executionContext:completion:]_block_invoke
(Service: %@, Domain %@, Command: %@(%@), RequestId: %@
-[ADCommandCenter _sendServiceCommand:completion:]_block_invoke
-[ADCommandCenter _receivedLocation:locationStatus:]
com.apple.assistant.command-center.call
-[ADCommandCenter adCallStateChangedCallInProcess:]_block_invoke
-[ADCommandCenter adCallStateChangedCallIncoming:]_block_invoke
-[ADCommandCenter _handleBareRequestCompleted:]
-[ADCommandCenter _saRequestCompleted:executionContext:completion:]
-[ADCommandCenter _saCommandFailed:completion:]
Speech not ready
-[ADCommandCenter _saCommandIgnored:completion:]
-[ADCommandCenter _saSetClientData:completion:]
-[ADCommandCenter _saSetHandoffPayload:completion:]
-[ADCommandCenter _saStartLocalRequest:completion:]
-[ADCommandCenter _saExecuteCallbacks:completion:]
-[ADCommandCenter _saInitiateHandoffOnCompanion:completion:]
-[ADCommandCenter _saSetDeviceTTSMuteState:completion:]
-[ADCommandCenter _saWaitForCommands:completion:]
-[ADCommandCenter _saWaitForCommands:completion:]_block_invoke_2
-[ADCommandCenter _saWaitForCommands:completion:]_block_invoke
-[ADCommandCenter _saReplayRequestFromDMHypothesis:completion:]
-[ADCommandCenter _saCancelCrossDeviceRequest:executionContext:completion:]
-[ADCommandCenter _saDeviceConfiguration:completion:]
-[ADCommandCenter _saDeviceMyriadConfiguration:completion:]
-[ADCommandCenter _sasResultCandidate:completion:]
-[ADCommandCenter _sasResultCandidate:completion:]_block_invoke
v20@?0B8@"NSArray"12
-[ADCommandCenter _acceptResultCandidate:featuresToLog:completion:]
features
-[ADCommandCenter _sasSpeechServerEndpointIdentified:completion:]
-[ADCommandCenter _sasVoiceIdentificationSignal:completion:]
-[ADCommandCenter _sasSpeechRecognized:executionContext:completion:]
v16@?0@"<AFSpeechInfoMutating>"8
v16@?0@"<AFCommandExecutionInfoMutating>"8
-[ADCommandCenter _sasSpeechMultilingualSpeechRecognized:executionContext:completion:]
-[ADCommandCenter _sasSpeechMultilingualSpeechRecognized:executionContext:completion:]_block_invoke
-[ADCommandCenter _sasPronunciationRecognized:completion:]
-[ADCommandCenter _handlePartialSpeechRecognitionForElapsedTime:WithDelegateBlock:]
-[ADCommandCenter _handleSpeechRecognizedWithDelegateBlock:]
-[ADCommandCenter _sasSpeechPartialResult:completion:]
bestTextInterpretation
-[ADCommandCenter _saStructuredDictationResult:completion:]
-[ADCommandCenter _saStructuredDictationFailure:completion:]
-[ADCommandCenter _sasSpeechFailure:completion:]
-[ADCommandCenter _sasAbortSpeechRequest:completion:]
-[ADCommandCenter _sasVoiceSearchPartialResult:completion:]
-[ADCommandCenter _sasVoiceSearchFinalResult:completion:]
-[ADCommandCenter _sasSuspendClientEndpointer:completion:]
v24@?0d8d16
-[ADCommandCenter _sasConfirmEndpoint:completion:]
-[ADCommandCenter _sasServerEndpointFeatures:completion:]
-[ADCommandCenter _sasClientBoundConfusionNetwork:completion:]
-[ADCommandCenter _saClientSetupInfo:completion:]
-[ADCommandCenter _endSpeechRequestForCommand:withError:suppressAlert:secureOfflineOnlyDictation:]
-[ADCommandCenter _endSpeechRequestForCommand:withError:suppressAlert:secureOfflineOnlyDictation:]_block_invoke
-[ADCommandCenter _saAcknowledgeAlert:completion:]
-[ADCommandCenter _saGetRequestOrigin:executionContext:completion:]
-[ADCommandCenter _saGetRequestOrigin:executionContext:completion:]_block_invoke
Failed getting request origin
Failed getting diagnostic report
v16@?0@"SADIAGLatencyDiagnosticReport"8
-[ADCommandCenter _saLogSignatureWithABC:completion:]
server_request
-[ADCommandCenter _saLogNumericEvent:completion:]
-[ADCommandCenter _saLogStringEvent:completion:]
-[ADCommandCenter _saTTSGetSpeechSynthesisVolume:completion:]
-[ADCommandCenter _saTTSGetSpeechSynthesisVolume:completion:]_block_invoke
v20@?0f8@"NSError"12
-[ADCommandCenter _saTTSSetSpeechSynthesisVolume:completion:]
-[ADCommandCenter _saNotificationSearch:completion:]
ASSISTANT_SERVICES_HOMEPOD_CALENDAR_ACTIVITY_NOTIFICATION_BODY
ASSISTANT_SERVICES_HOMEPOD_ACTIVITY_DEFAULT_BODY
-[ADCommandCenter _postPersonalDomainActivityNotificationWithBody:command:executionContext:completion:]
%@:%@
-[ADCommandCenter _postPersonalDomainActivityNotificationWithBody:command:executionContext:completion:]_block_invoke
Kettle
FeatureComplete
ASSISTANT_SERVICES_HOMEPOD_ACTIVITY_NOTIFICATION_TITLE
ASSISTANT_SERVICES_HOMEPOD_ACTIVITY_NOTIFICATION_HEADER
ASSISTANT_SERVICES_HOMEPOD_PROMPT_ENABLE_PERSONAL_DOMAINS_NOTIFICATION_BODY
ASSISTANT_SERVICES_REMORA_SPEAKER_PROMPT_ENABLE_PERSONAL_DOMAINS_NOTIFICATION_BODY
ASSISTANT_SERVICES_REMORA_ACCESSORY_PROMPT_ENABLE_PERSONAL_DOMAINS_NOTIFICATION_BODY
ASSISTANT_SERVICES_REMORA_DEVICE_PROMPT_ENABLE_PERSONAL_DOMAINS_NOTIFICATION_BODY
-[ADCommandCenter _saPostUpdatePersonalRequestSettingsNotification:executionContext:completion:]_block_invoke
Unhandled Object
-[ADCommandCenter _sasExtractSpeechData:executionContext:completion:]
-[ADCommandCenter _sasExtractSpeechData:executionContext:completion:]_block_invoke
v24@?0@"NSURL"8@"NSError"16
-[ADCommandCenter _storeExtractedSpeechLocally:]
-[ADCommandCenter _saSetMultilingualDictationConfig:completion:]
Server has disabled smart language selection
-[ADCommandCenter _cancelLocalRecognitionIfRequired]
-[ADCommandCenter _startLanguageDetectionWaitTimer]
-[ADCommandCenter _startLanguageDetectionWaitTimer]_block_invoke
-[ADCommandCenter _stopLanguageDetectionWaitTimerIfNeeded]
v32@?0@"NSTextCheckingResult"8Q16^B24
v24@?0@"ADDeviceRouterResult"8@"AFCoreAnalyticsCrossDeviceEvent"16
%@.succeeded
%@.error
%@%@.%@
-[ADCommandCenter _handleClientReply:error:forSessionCommand:]
bad response
-[ADCommandCenter _sessionDidFailWithError:]
-[ADCommandCenter assistantSessionManager:receivedError:isRetryableError:]
-[ADCommandCenter assistantSessionManagerShouldAttemptRetry:]
-[ADCommandCenter assistantSessionManagerSessionConnectionDidReset:]
-[ADCommandCenter assistantSessionManagerSessionRemoteConnectionDidReset:]
-[ADCommandCenter assistantSessionManager:didChangeRequestIdFrom:toId:]
-[ADCommandCenter speechManager:recognitionUpdateWillBeginForTask:]
-[ADCommandCenter _sendStartSpeechCommandWithSpeechManager:info:context:]
PhonemeTranscription
start_speech_request_without_speech_request_options
-[ADCommandCenter _sendEnableServerEndpointerCommandWithRefID:]
-[ADCommandCenter _sendLocationIfNeededForRequest]
-[ADCommandCenter _sendLocationIfNeededForRequest]_block_invoke
-[ADCommandCenter _sendContextAndRestrictionsForSpeechRequestWithInfo:]
-[ADCommandCenter speechManager:willStartRecordingAtTimestamp:isFromFile:inputAudioPowerWrapper:context:]
-[ADCommandCenter speechManager:didStartRecordingWithInfo:context:]_block_invoke_2
-[ADCommandCenter speechManager:didStartRecordingWithInfo:context:]_block_invoke
-[ADCommandCenter speechManager:didUpdateRecordingWithInfo:context:]_block_invoke
-[ADCommandCenter speechManager:capturedPackets:atTimestamp:totalCount:context:]
-[ADCommandCenter speechManager:capturedPackets:atTimestamp:totalCount:context:]_block_invoke
-[ADCommandCenter speechManagerDidDetectMusic:]
-[ADCommandCenter speechManagerDidDelayEndpointForMusic:]
-[ADCommandCenter speechManager:didReceiveLastAudioBufferWithEndpointMode:totalPacketCount:endpointerMetrics:context:]
-[ADCommandCenter speechManager:didReceiveLastAudioBufferWithEndpointMode:totalPacketCount:endpointerMetrics:context:]_block_invoke_2
-[ADCommandCenter speechManager:didFinishWithCapturingMode:context:]
-[ADCommandCenter speechManager:didCancelWithContext:]
-[ADCommandCenter speechManager:didFailWithError:context:]
-[ADCommandCenter speechManager:didFailWithError:context:]_block_invoke_2
-[ADCommandCenter speechManager:didFinishWritingAudioFile:error:context:]
-[ADCommandCenter speechManager:didRecognizeTokens:sessionUUID:]_block_invoke
<REDACTED>
-[ADCommandCenter speechManager:didRecognizeRawEagerRecognitionCandidate:sessionUUID:]_block_invoke
-[ADCommandCenter speechManager:didRecognizePackage:sessionUUID:]_block_invoke
v32@?0@"AFSpeechPhrase"8Q16^B24
v32@?0@"AFSpeechUtterance"8Q16^B24
-[ADCommandCenter speechManager:didProduceLocalLoggablePackage:sessionUUID:]_block_invoke
-[ADCommandCenter speechManager:recognitionDidCompleteWithError:secureOfflineOnlyRecognition:sessionUUID:statistics:]_block_invoke
dictationUIInteractionIdentifier
v32@?0@"NSString"8@"NSNumber"16^B24
Perform two shot prompt.
-[ADCommandCenter speechManager:performTwoShotPromptWithType:context:completion:]_block_invoke_3
%@ two shot prompt was rejected.
%@ is incapable of performing fake two shot prompt.
-[ADCommandCenter _handleQuickStopCommandRoutedFromRemote:completion:]_block_invoke_2
-[ADCommandCenter _handleQuickStopCommandRoutedFromRemote:completion:]_block_invoke
-[ADCommandCenter _saQuickStop:executionContext:completion:]
Not supported on this platform
-[ADCommandCenter _saQuickStop:executionContext:completion:]_block_invoke
-[ADCommandCenter speechManager:didRequestQuickStopWithContext:]
-[ADCommandCenter speechManager:didChangeRecordingState:]_block_invoke
-[ADCommandCenter speechManager:audioSessionWillBecomeActive:]_block_invoke
-[ADCommandCenter speechManager:audioSessionDidBecomeActive:]_block_invoke
-[ADCommandCenter _handleConfidenceScores:classification:classifiedUser:unknownUserScore:duration:version:thresholdingType:assetVersion:]
-[ADCommandCenter _handleConfidenceScores:classification:classifiedUser:unknownUserScore:duration:version:thresholdingType:assetVersion:]_block_invoke
-[ADCommandCenter UIService:executeHandler:forCommand:]
unsupportedFeatureIdiomDucs#unsupportedDuringRingingCall
-[ADCommandCenter UIService:didPresentUIResponseForCommand:withExecutionInfo:]_block_invoke
-[ADCommandCenter _getDictationLanguages:options:speechOptions:delegate:completion:]
-[ADCommandCenter _getDictationLanguages:options:speechOptions:delegate:completion:]_block_invoke_2
User context returned 0 dictation languages
-[ADCommandCenter _getDictationLanguages:options:speechOptions:delegate:completion:]_block_invoke
-[ADCommandCenter _preheatWithStyle:forOptions:completion:]
-[ADCommandCenter _forceAudioSessionActiveWithContext:completion:]
v16@?0@"<AFSetAudioSessionActiveContextMutating>"8
-[ADCommandCenter _forceAudioSessionInactiveWithOptions:completion:]
-[ADCommandCenter resumeInterruptedAudioPlaybackIfNeeded]_block_invoke
-[ADCommandCenter _setLanguageCode:outputVoice:isDefaultValue:]
-[ADCommandCenter _setLockState:showingLockScreen:]
Locked
Unlocked
On Lock Screen
Not on lock screen
-[ADCommandCenter _setWatchAuthenticated:]
Authenticated
Not Authenticated
-[ADCommandCenter _setStarkRestriction:]
#CarPlay Add Stark Restriction
#CarPlay Remove Stark Restriction
-[ADCommandCenter _setCarDNDRestriction:]
#rhodes Add Car DND Restriction
#rhodes Remove Car DND Restriction
-[ADCommandCenter _prepareForAppLaunchForRequest:]_block_invoke
-[ADCommandCenter _setConfiguration:forClient:]
-[ADCommandCenter _endSessionForDelegate:]
-[ADCommandCenter _reallyEndSessionForDelegate:]
-[ADCommandCenter _reallyEndSessionForDelegate:]_block_invoke
-[ADCommandCenter _prepareForPhoneCall]
-[ADCommandCenter _telephonyRequestCompleted]
-[ADCommandCenter _startRequest:withDelegate:]
Unable to start UI with text.
request = %@, requestInfo = %@, speechOptions = %@, suppressAlert = %d, delegate = %@
-[ADCommandCenter _startNonSpeechRequest:forDelegate:withInfo:options:suppressAlert:completion:]
-[ADCommandCenter _startNonSpeechRequest:forDelegate:withInfo:options:suppressAlert:completion:]_block_invoke
-[ADCommandCenter _startNonSpeechRequest:forDelegate:withInfo:options:suppressAlert:completion:]_block_invoke_2
speechOptions = %@, sessionUUID = %@, delegate = %@
-[ADCommandCenter _startSpeechRequestWithDelegate:withOptions:sessionUUID:completion:]
-[ADCommandCenter _startSpeechRequestWithDelegate:withOptions:sessionUUID:completion:]_block_invoke_2
-[ADCommandCenter _startSpeechRequestWithDelegate:withOptions:sessionUUID:]
-[ADCommandCenter _startRecordingForPendingSpeechRequestForDelegate:withOptions:sessionUUID:completion:]
-[ADCommandCenter _startRecordingForPendingSpeechRequestForDelegate:withOptions:sessionUUID:completion:]_block_invoke
prelistening
-[ADCommandCenter _startRecordingForPendingSpeechRequestForDelegate:withOptions:sessionUUID:completion:]_block_invoke_2
v16@?0d8
-[ADCommandCenter _startSpeechPronunciationRequestWithDelegate:withOptions:pronunciationContext:]
-[ADCommandCenter _startSpeechRequestWithURL:isNarrowBand:withDelegate:completion:]
-[ADCommandCenter _startDictationWithLanguageCode:options:speechOptions:sessionUUID:delegate:completion:]
-[ADCommandCenter _startDictationWithLanguageCode:options:speechOptions:sessionUUID:delegate:completion:]_block_invoke
languageCode = %@, dictationOptions = %@, speechOptions = %@, sessionUUID = %@, delegate = %@
-[ADCommandCenter _startRecordingForPendingDictationWithLanguageCode:options:speechOptions:sessionUUID:delegate:completion:]
-[ADCommandCenter _startRecordingForPendingDictationWithLanguageCode:options:speechOptions:sessionUUID:delegate:completion:]_block_invoke
-[ADCommandCenter _startRecordingForPendingDictationWithLanguageCode:options:speechOptions:sessionUUID:delegate:completion:]_block_invoke_2
-[ADCommandCenter _startDictationWithLanguageCode:options:speechOptions:sessionUUID:delegate:]
-[ADCommandCenter _startRecordedDictationWithLanguage:options:sessionUUID:narrowband:delegate:]
-[ADCommandCenter _addRecordedSpeechSampleData:delegate:]
-[ADCommandCenter _startDictationWithURL:isNarrowBand:language:options:sessionUUID:delegate:]
-[ADCommandCenter _cancelRequestForDelegate:reason:error:]
-[ADCommandCenter _rollbackRequestForDelegate:]
-[ADCommandCenter _updateSpeechOptions:forDelegate:allowUpdateInSpeechCompletion:]
-[ADCommandCenter _updateSpeechOptions:forDelegate:allowUpdateInSpeechCompletion:]_block_invoke
-[ADCommandCenter _stopSpeechWithOptions:forDelegate:]
-[ADCommandCenter _cancelSpeechForDelegate:]
-[ADCommandCenter _sendSpeechCorrectionInfo:forCorrectionContext:]
-[ADCommandCenter _sendSpeechCorrectionInfo:interactionIdentifier:]
-[ADCommandCenter _handleGenericConcreteAceCommand:withDelegate:interruptOutstandingRequest:reply:]
-[ADCommandCenter _handleAceCommand:afterCurrentRequest:waitForResponse:withDelegate:completion:]
-[ADCommandCenter _handleAceCommand:afterCurrentRequest:waitForResponse:withDelegate:completion:]_block_invoke
Executing one-off server-bound command %@ from client %@.
-[ADCommandCenter _clearContext]
SiriX
enableTelemetry=YES
-[ADCommandCenter _fetchSupportedLanguagesWithCompletion:]
-[ADCommandCenter _fetchSupportedLanguagesWithCompletion:]_block_invoke
-[ADCommandCenter _getDeferredObjectsWithIdentifiers:completion:]_block_invoke
-[ADCommandCenter _accounts]
encryption_key_did_change
-[ADCommandCenter _destroyActiveAccount]
-[ADCommandCenter _destroyActiveAccount]_block_invoke
-[ADCommandCenter _refreshAssistantValidation]
-[ADCommandCenter _rescheduleValidationRefresh]
-[ADCommandCenter _handleExternalActivationRequest:completion:]
-[ADCommandCenter _handleExternalActivationRequest:completion:]_block_invoke
v16@?0@"UNNotificationResponse"8
-[ADCommandCenter _handleIntent:inBackgroundAppWithBundleId:reply:]
-[ADCommandCenter _handleRemoteSpeechRequest:completion:]
-[ADCommandCenter _handleRemoteSpeechRequest:completion:]_block_invoke_2
-[ADCommandCenter _removeDelegate:]
-[ADCommandCenter _downloadMorphunAssets:]
(ADCommandCenter) _downloadMorphunAssets
-[ADCommandCenter _downloadMorphunAssets:]_block_invoke_2
-[ADCommandCenter _downloadMorphunAssets:]_block_invoke
-[ADCommandCenter setAssistantEnabled:]
v16@?0@"AFPreferences"8
-[ADCommandCenter setDictationEnabled:]
-[ADCommandCenter _setLanguageCode:outputVoice:isDefaultValue:withCompletion:]
-[ADCommandCenter _setLanguageCodeIfNeeded]
-[ADCommandCenter setQueuedLanguageCode:]
-[ADCommandCenter _processQueuedLanguageCode]
-[ADCommandCenter _clearQueuedLanguageCode]
-[ADCommandCenter setQueuedLanguageCode:andQueuedOutputVoice:]
-[ADCommandCenter _processQueuedLanguageCodeAndOutputVoice]
-[ADCommandCenter setQueuedOutputVoice:]
-[ADCommandCenter _processQueuedOutputVoice]
-[ADCommandCenter _clearQueuedOutputVoice]
-[ADCommandCenter startSpeechRequestWithDelegate:withOptions:]
-[ADCommandCenter startRecordingForPendingSpeechRequestForDelegate:withOptions:completion:]
v16@?0@"NSNumber"8
-[ADCommandCenter startRecordingForPendingSpeechRequestForDelegate:withOptions:completion:]_block_invoke_4
-[ADCommandCenter startRecordingForPendingSpeechRequestForDelegate:withOptions:completion:]_block_invoke_2
-[ADCommandCenter setSuppressAudioInterruptionEndedNotifications:]_block_invoke
-[ADCommandCenter handleFailedStartPlaybackWithDestination:completion:]_block_invoke
-[ADCommandCenter prepareForStartPlaybackWithDestination:intent:completion:]_block_invoke
non-local playback destination
ADCommandCenterClient failure
v16@?0B8B12
-[ADCommandCenter getOriginDeviceInfoForContextIdentifier:completion:]_block_invoke_2
-[ADCommandCenter getOriginDeviceInfoForContextIdentifier:completion:]_block_invoke
-[ADCommandCenter sendMetricsToServerWithTimeout:requiresUnlimitedPower:requiresActiveSession:purgesOversizedStorage:ignoresMetricsSenderDisabledSetting:scheduledActivity:completion:]
-[ADCommandCenter clientConnected:]_block_invoke
-[ADCommandCenter clientDisconnected:]_block_invoke
-[ADCommandCenter handleCommand:withExecutionContextMatchingInfo:completion:]
-[ADCommandCenter handleCommand:withExecutionContextMatchingInfo:completion:]_block_invoke
-[ADCommandCenter prepareForShutdown]_block_invoke
-[ADCommandCenter acquireShutdownAssertion]
-[ADCommandCenter releaseShutdownAssertion:]
-[ADCommandCenter shutdownSessionIfIdle]
-[ADCommandCenter _startServerRequestWithStartRequest:requestInfo:]
-[ADCommandCenter _getSiriOutputVolumeForAudioRoute:completion:]
-[ADCommandCenter _getSiriOutputVolumeForAudioRoute:completion:]_block_invoke
v16@?0@"ADVolumeService"8
-[ADCommandCenter _setSiriOutputVolume:forAudioRoute:operationType:completion:]
-[ADCommandCenter _setSiriOutputVolume:forAudioRoute:operationType:completion:]_block_invoke
-[ADCommandCenter _accessRecordedAudioWithIdentifier:completion:]
-[ADCommandCenter _accessRecordedAudioWithIdentifier:completion:]_block_invoke_2
v24@?0@"NSURL"8@?<v@?>16
Unable to locate recorded audio because there's no active speech request and speech request id is not specified.
-[ADCommandCenter _trimRecordedAudioWithIdentifier:offset:duration:outputFileType:completion:]
-[ADCommandCenter _trimRecordedAudioWithIdentifier:offset:duration:outputFileType:completion:]_block_invoke
-[ADCommandCenter _setSpeechCapturingContext:]
-[ADCommandCenter _removeAllSpeechCapturingContexts]
-[ADCommandCenter _listInstalledServicesWithCompletion:]_block_invoke
_LogARO
aceId
leadingSilence
trailingSilence
endTime
resultId
eager
languageCode
v32@?0@"NSString"8@"SASSpeechRecognized"16^B24
secondaryLanguages
com.apple.HOME-PRIVATE://personalRequestOptIn
%@?showEnablementSheet=%@
&homeId=%@
_EmitServerFallbackMessageForMissingAssets
_ADPreheatSpeechWithStyle
_ADPreheatSpeechManagerInBackgroundWithRecordDeviceIdentifier_block_invoke
ModifyActivenessPreferenceWithBlock
_LogActivationDeltasForOptions
-[ADAlarmContextProvider clockAlarmObserver:alarmDidFire:]
-[ADAlarmContextProvider clockAlarmObserver:alarmDidDismiss:]
-[ADAlarmContextProvider clockAlarmObserver:snapshotDidUpdateFrom:to:]
com.apple.SiriAnnounceNotificationsReceived
com.apple.SiriAnnounceNotificationsEnabled
com.apple
+[ADExternalNotificationInstrumentationEmitter _getCurrentlyConnectedHeadphonesANCAudioDevice]
airpodsModel
announceCategory
announceStatus
appBundleId
isTimeSensitiveAnnouncement
announce_notifications_enabled
app_bundle_id
device_locale
com.apple.siri.ADExternalNotificationInstrumentationEmitter
BBSettingsGateway
/System/Library/PrivateFrameworks/BulletinBoard.framework/BulletinBoard
ADShouldCensorSpeechDidChangeNotification
assistantdDidLaunch
Companion
MobileDevices
HomeDevices
SiriEdutainment
amos://%@
?committed=yes
-[ADTTSMutingObserver _updateAudioRouteOnMainThread]
-[ADTTSMutingObserver _muteStateChanged:]
-[ADTTSMutingObserver _listenForAudioRouteChanges]
-[ADTTSMutingObserver _stopListeningForAudioRouteChanges]
-[ADTTSMutingObserver _listenForMuteStateChanges]
-[ADTTSMutingObserver _stopListeningForMuteStateChanges]
-[ADTTSMutingObserver _useDeviceSpeakerForTTSPreferenceChanged]
-[ADTTSMutingObserver audioSessionController:didReceiveAudioSessionRouteChangeNotificationWithUserInfo:]
-[ADTTSMutingObserver audioSessionController:didReceiveAudioSessionOwnerLostNotification:]
-[ADTTSMutingObserver audioSessionController:didReceiveAudioSessionOwnerResetNotification:]
ADShowNetworkActivityIndicatorForApplicationIdentifier
ADHideNetworkActivityIndicatorForApplicationIdentifier
com.apple.assistant.sync_needed
AppleICUForce24HourTime
AppleICUForce12HourTime
%@#%@
AudioAccessory
AppleTV
ADShouldAllowSync
com.apple.da
ExperimentGroup
walkabout
carry
Siri Event
StoreDemoMode
com.apple.demo-settings
kern.bootsessionuuid
ADSystemGetBootSessionUUID_block_invoke
ADRecordCoreDuetEventForServiceCommandIfNeeded
com.apple.siri.duet
v16@?0@"BPSCompletion"8
ADCarPlayHasBeenActiveInLast24Hours_block_invoke
v16@?0@"BMStoreEvent"8
ADCarPlayHasBeenActiveInLast24Hours
File exists at path %@, but it is expected to be directory.
Unable to create directory at path %@.
ADCreateTrimmedAudioDirectory
Directory exists at path %@, but it is expected to be a file.
File does not exist at path %@.
ADAudioFileTrim
ExtAudioFileOpenURL() failed to open input audio file at %@. (status = %d)
ExtAudioFileSetProperty() failed to set client data format of input audio file. (status = %d)
.wav
.caf
%@%@
Output file type %ld is not supported.
ExtAudioFileCreateWithURL() failed to create output audio file at %@. (status = %d)
ExtAudioFileSetProperty() failed to set client data format of output audio file. (status = %d)
ExtAudioFileSeek() failed to seek to frame offset %lld in input audio file. (status = %d)
ExtAudioFileRead() failed to read %u frames from input audio file. (status = %d)
ExtAudioFileWrite() failed to write %u frames to output audio file. (status = %d)
ExtAudioFileDispose() failed to close input audio file. (status = %d)
ExtAudioFileDispose() failed to close output audio file. (status = %d)
com.apple.assistant.settings-client.paired-bluetooth-devices
ADSHAAnchorForData
ADClearTimestampForFileName
ADSystemLanguagePreferencesObserver
AppleLanguagePreferencesChangedNotification
_DKSystemEventStreams
/System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet
_DKSiriServiceMetadataKey
_CDContextQueries
/System/Library/PrivateFrameworks/CoreDuetContext.framework/CoreDuetContext
BMStreams
/System/Library/Frameworks/BiomeStreams.framework/BiomeStreams
mobile
Library/Assistant
ADDeleteItemAtPath
ADHomeKitAccessoryCategoryTypeHomePod
ADHomeKitAccessoryCategoryTypeRemoraSpeaker
ADHomeKitAccessoryCategoryTypeRemoraAccessory
ADHomeKitAccessoryCategoryTypeRemoraOtherDevice
personalDomainsIsEnabled
allowUnauthenticatedRequests
allowVoiceID
allowExplicitContent
root.siri.identifyVoice
root.general.analytics.shareSiriAnalytics
ADHomeInfoManager
-[ADHomeInfoManager _initWithContext:]_block_invoke
-[ADHomeInfoManager _homeManager]
-[ADHomeInfoManager dealloc]
-[ADHomeInfoManager _currentHome]
-[ADHomeInfoManager _currentHomeInfo]
-[ADHomeInfoManager _siriDataSharingOptInStatusDidChange:]
-[ADHomeInfoManager _siriDataSharingOptInStatusDidChange:]_block_invoke
-[ADHomeInfoManager _resolveSiriDataSharingStatusMismatch:]
-[ADHomeInfoManager _updateHomeUserSettings]
-[ADHomeInfoManager _homesWithMultiUserEnabled]
-[ADHomeInfoManager _setPreferredMediaUserForAccessories:]
-[ADHomeInfoManager _setPreferredMediaUserForAccessory:]
-[ADHomeInfoManager _setPreferredMediaUserForAccessory:]_block_invoke_2
-[ADHomeInfoManager _setPreferredMediaUserForAccessory:]_block_invoke
-[ADHomeInfoManager getCurrentHomeMemberIds:]_block_invoke
-[ADHomeInfoManager setRecognizeMyVoiceEnabled:]_block_invoke
-[ADHomeInfoManager _accessoryForIdentifier:inHome:]
v16@?0@"<AFHomeAccessoryInfoMutating>"8
-[ADHomeInfoManager _updateCurrentAccessoryInfoWithAccessory:]
v16@?0@"<ADHomeInfoListening>"8
-[ADHomeInfoManager fetchMultiUserMetricsWithCompletion:]
-[ADHomeInfoManager fetchMultiUserMetricsWithCompletion:]_block_invoke
v24@?0@"NSError"8@"HMMultiUserSettingsForMetrics"16
-[ADHomeInfoManager updateHomeUserSettings]
-[ADHomeInfoManager homeManagerDidUpdateHomes:]_block_invoke
-[ADHomeInfoManager homeManager:didAddHome:]
-[ADHomeInfoManager homeManager:didRemoveHome:]
-[ADHomeInfoManager homeManager:didUpdateStatus:]_block_invoke
-[ADHomeInfoManager homeManagerDidUpdateCurrentHome:]_block_invoke
-[ADHomeInfoManager homeManagerDidUpdateDataSyncState:]_block_invoke
-[ADHomeInfoManager homeManagerDidUpdateAssistantIdentifiers:]_block_invoke
-[ADHomeInfoManager settingsDidUpdate:]
-[ADHomeInfoManager settingsDidUpdate:]_block_invoke
-[ADHomeInfoManager settingsWillUpdate:]
-[ADHomeInfoManager user:didUpdateAssistantAccessControl:forHome:]_block_invoke
-[ADHomeInfoManager _propagateSiriDataSharingOptInStatus:toAccessory:]
-[ADHomeInfoManager _propagateSiriDataSharingOptInStatus:toAccessory:]_block_invoke
Opted-In
Opted-Out
-[ADHomeInfoManager shareManager:didReceiveShareInvitation:completion:]
-[ADHomeInfoManager homeDidUpdateName:]_block_invoke
-[ADHomeInfoManager home:didAddUser:]
-[ADHomeInfoManager home:didAddAccessory:]
-[ADHomeInfoManager home:didRemoveAccessory:]
-[ADHomeInfoManager home:didUpdateRoom:forAccessory:]
-[ADHomeInfoManager accessoryDidUpdateName:]
-[ADHomeInfoManager _getAccessoryCategoryForExecutionInfo:]
v16@?0@"<AFHomeInfoMutating>"8
ADHomeInfoForThisDeviceDidChangeNotification
ADHomeInfoHomeContextDidChangeNotification
%@, preferredMediaUserSharedUserID: %@, preferredMediaUserHomeUserID: %@
%@ Personal Domains Enabled: %d Auth Required: %d, currentHomeIdentifier: %@
createHomeContext
    %@/%@
_ADHomeGetInfoFromAccessControl
com.apple.siri.opportune-speaking-module-state-changed
-[ADOpportuneSpeakingStateManager beginListeningForEdgeDetectorWithID:]
-[ADOpportuneSpeakingStateManager endListeningForEdgeDetectorWithID:]
-[ADOpportuneSpeakingStateManager _listeningEdgeDetectorIDsChanged]_block_invoke
Q16@?0Q8
-[ADCommandCenter(AcousticId) _acousticId_handleFingerprint:duration:]
-[ADCommandCenter(AcousticId) _saAIRequestSearch:completion:]
-[ADCommandCenter(AcousticId) _saAISearchCompleted:completion:]
-[ADCommandCenter(AcousticId) _saAISearchCompleted:completion:]_block_invoke
-[ADCommandCenter(AcousticId) _saAIRetrySearch:completion:]
-[ADCommandCenter(AcousticId) acousticIDHelperDidStartSession:]
-[ADCommandCenter(AcousticId) acousticIDHelper:didCompleteSessionSuccessfully:]
event
requestWillBegin
requestWasCancelled
requestDidEnd
com.apple.assistant.request-lifecycle-observer
-[ADRequestLifecycleObserver requestWillBeginWithInfo:fromOrigin:client:]
v16@?0@"<ADRequestLifecycleListening>"8
-[ADRequestLifecycleObserver requestWasCancelledWithInfo:origin:client:]
-[ADRequestLifecycleObserver requestDidEndWithInfo:fromOrigin:client:]
-[ADRequestLifecycleObserver _handleMessage:messageType:fromDeviceWithIdentifier:completion:]
v24@?0@"<ADRequestLifecycleListening>"8^B16
generationsByDataType = %@
ADDeviceSyncCommandPushGenerationsRequest::generationsByDataType
-[ADSessionRemoteServerLimited _siriConnection:didEncounterError:analysisInfo:]
not 
idle
processing
reading
triggerlessListening
userReplying
expirationDuration
userInfo
timestamp = %@
reason = %@
expirationDuration = %@
userInfo = %@
AFAssertionContext::timestamp
AFAssertionContext::reason
AFAssertionContext::effectiveDate
AFAssertionContext::expirationDuration
AFAssertionContext::userInfo
ADAudioSessionCoordinationMessageKeepAudioSessionAliveRequest::expirationDuration
ADMuteModeDidChangeNotification
ADSystemMuteModeObserver
-[ADSystemMuteModeObserver _registerForRingerMuteStateNotifications]
com.apple.springboard.ringerstate
ADInstrumentationResolver.m
%s is marked as NS_UNAVAILABLE. Use 'initWithQueue:' instead.
-[ADInstrumentationResolver init]
-[ADInstrumentationResolver logInstrumentationOfType:machAbsoluteTime:turnIdentifier:]
v16@?0@"PBCodable"8
-[ADInstrumentationResolver _triggerABCForNullAssistantIdentifier]
SISchemaDeviceFixedContext
null_siriDeviceID
-[ADInstrumentationResolver _buildDeviceFixedContext]
%@_%@
proximity
peerInfo = %@
contextIdentifier = %@
proximity = %@
commandRelayProxyIdentifier = %@
error = %@
ADDeviceRouterResult::peerInfo
ADDeviceRouterResult::contextIdentifier
ADDeviceRouterResult::proximity
ADDeviceRouterResult::commandRelayProxyIdentifier
ADDeviceRouterResult::error
Unable to generate settings request representation for %@
-[AFGetSettingsResponse(ADSettingsTransformer) _ad_aceSettingsGetBooleanResponseRepresentation]
-[AFSetSettingsResponse(ADSettingsTransformer) _ad_aceSettingsResponseRepresentationForSetValueCommand:]
com.apple.assistant.offline-metrics
SiriOfflineMetrics.plist
offlineSAMetrics.plist
SiriMetrics
-[ADOfflineMetricsManager insertMetrics:]
-[ADOfflineMetricsManager deleteMetricsWithOfflineIdentifier:]
-[ADOfflineMetricsManager fetchNextMetricsUsingBlock:]
v24@?0@"SAMetrics"8@"NSString"16
-[ADOfflineMetricsManager deleteAllMetrics]
com.apple.siri.nilRequestId
-[ADResultObjectCache _addObjects:forRequestId:sessionRequestId:]
-[ADResultObjectCache commandsForReply:toCommand:missingReferences:]
com.apple.siri.calendar.Error
Siri diagnostics queue
-[AFDiagnostics logConnectionStart]
@"AWDSiriServerConnectionStart"8@?0
-[AFDiagnostics logConnectionOpenWithConnectionType:]
-[AFDiagnostics logConnectionOpenWithConnectionType:]_block_invoke_2
@"AWDSiriServerConnectionOpen"8@?0
-[AFDiagnostics logConnectionFailedWithError:connectionType:]
@"AWDSiriServerConnectionFailed"8@?0
-[AFDiagnostics logVoiceRecordingStart]
@"AWDSiriVoiceRecordingStart"8@?0
-[AFDiagnostics logVoiceRecordingEnd]
-[AFDiagnostics logVoiceRecordingEnd]_block_invoke_2
@"AWDSiriVoiceRecordingEnd"8@?0
-[AFDiagnostics logVoiceSendStart]
@"AWDSiriVoiceSendStart"8@?0
-[AFDiagnostics logVoiceSendEnd]
-[AFDiagnostics logVoiceSendEnd]_block_invoke_2
@"AWDSiriVoiceSendEnd"8@?0
-[AFDiagnostics logNetworkAnalyzeRunWithResults:]
@"AWDSiriNetworkAnalyzerRun"8@?0
-[AFDiagnostics logSpeechRecognized]
-[AFDiagnostics logSpeechRecognized]_block_invoke_2
-[AFDiagnostics logSpeechRecognized]_block_invoke
@"AWDSiriSpeechRecognized"8@?0
-[AFDiagnostics _submitMetricWithIdentifier:generation:]
-[AFDiagnostics _submitMetricWithIdentifier:hotShipIdentifier:hotShipTimestamp:generation:]_block_invoke
@8@?0
text
handoff_data
handoff_url_string
requiresUserInteraction
handoff_notification
handoff_origin_device_name
RequestDispatcherService
-[ADRequestDispatcherService cancelOperationsForRequestID:fromRemote:]
-[ADRequestDispatcherService startSpeechRequestWithAssistantId:requestId:inputOrigin:location:]
-[ADRequestDispatcherService sendRequestContextWithAssistantId:requestId:audioSource:audioDestination:isEyesFree:isVoiceTriggerEnabled:isTextToSpeechEnabled:isTriggerlessFollowup:bargeInModes:approximatePreviousTTSInterval:deviceRestrictions:]
-[ADRequestDispatcherService requestFailedWithAssistantId:requestId:]
-[ADRequestDispatcherService startSessionWithAssistantId:languageCode:understandingOnDevice:]
-[ADRequestDispatcherService startUnderstandingOnServerRequestWithAssistantId:requestId:inputOrigin:]
-[ADRequestDispatcherService startDirectActionRequestWithAssistantId:requestId:inputOrigin:directAction:requestExecutionParameters:]
-[ADRequestDispatcherService startTextRequestWithAssistantId:requestId:inputOrigin:utterance:]
-[ADRequestDispatcherService startCorrectionSpeechRequestWithAssistantId:requestId:inputOrigin:utterance:previousUtterance:]
-[ADRequestDispatcherService startUnderstandingOnServerTextRequestWithAssistantId:requestId:inputOrigin:utterance:]
v16@?0@"<AFExperimentConfigurationMutating>"8
1.0.0
DE3507E9-7F1D-4BC9-A2B1-E32FB56890D1
v16@?0@"<AFExperimentGroupMutating>"8
control
phase_one
phase_two
phase_three
phase_four
vADOverDoAP
vADOverPhoneCall
testing
CarPlay
x-apple-siri-notification://%@
-[AFBulletin(SANotificationObject) saNotificationObject]
-[AFBulletin(SANotificationObject) saOnDeviceNotificationObject]
-[ADSiriAnalyticsMessageStorage storeMessages:]
v32@?0@"SiriAnalyticsMessage"8Q16^B24
AFAnalytics.m
%s is marked as NS_UNAVAILABLE. Use the designated initializer instead.
-[AFAnalytics init]
com.apple.assistant.analytics.client
-[AFAnalytics logEventWithType:machAbsoluteTime:context:]
-[AFAnalytics logInstrumentation:machAbsoluteTime:turnContext:]
-[AFAnalytics boostQueuedEvents:]
-[AFAnalytics boostQueuedEvents:]_block_invoke
_AFAnalyticsEventCreate
_AFAnalyticsEventGetContextGuarded
AFSiriUserNotificationRequestCapabilityForceUpdate
-[AFSiriUserNotificationRequest performRequestWithCompletion:]
-[AFSiriUserNotificationRequest deactivateRequestForReason:completion:]
-[AFSiriUserNotificationRequest withdrawalRequestWithCompletion:]
AFSiriUserNotificationRequestCapabilityManager
+[AFSiriUserNotificationRequestCapabilityManager _classForPlatform:]
+[AFSiriUserNotificationRequestCapabilityManager supportedByApplicationWithBundleID:]
-[AFSiriUserNotificationRequestCapabilityManager hasEligibleSetup]
-[AFSiriUserNotificationRequestCapabilityManager hasEligibleSetup]_block_invoke
-[AFSiriUserNotificationRequestCapabilityManager requestCanBeHandled]
-[AFSiriUserNotificationRequestCapabilityManager notifyObserversOfCurrentRequestCanBeHandledState:onPlatform:]
ADPeerLocationPolicy
-[ADBackgroundContextCache _updateDefaultTokenInDynamiteClientState:]
v32@?0@"NSString"8@"SAUserTokenStatus"16^B24
v32@?0@"NSString"8@"SAUserState"16^B24
-[ADAuthenticator deviceAuthSession]
-[ADAuthenticator prepareWithCertificateData:completion:]
-[ADAuthenticator setSessionInfo:duration:]
-[ADAuthenticator signedDataForData:]
-[ADAuthenticator reset]
ADFetchLanguageDetectorSupportedLocales_block_invoke
Error fetching supported locales for language detection.
Language detector returned 0 supported locales.
-[AceObject(AFRequestInfo) _ad_setPayloadOnRequestInfo:]
12.216.PremiumTests
_RequestForInfo
Local Phone Service Queue
-[ADLocalPhoneService handleCommand:forDomain:executionContext:reply:]
-[ADLocalPhoneService _hangUpCurrentCall]
SPEECH
MORPHUN
ADAssetManager
ADAssetManager Delegate Queue
-[ADAssetManager assetsAvailableStatusForLanguage:]
-[ADAssetManager assetStatus:]_block_invoke
-[ADAssetManager assetsAvailableForLocale:]_block_invoke
-[ADAssetManager assetsUnavailable]_block_invoke
-[ADAssetManager _registerAssetStatusTrackers]_block_invoke
-[ADAssetManager _fetchAssetStatusForLanguage:withCompletion:]_block_invoke
-[ADAssetManager _subscribeToMorphunAssetStatusForLanguage:]_block_invoke
succeeded
failed
-[ADAssetManager _recordAssetsNeededForLanguage:resetPrevious:]
-[ADAssetManager _checkAssetsStatusForIntervalRecording]
LOCALE_%@
-[ADAssetManager _emitUODAssetPreparedEventWithLanguage:elapsed:]
/System/Library/PrivateFrameworks/CoreEmbeddedSpeechRecognition.framework/CoreEmbeddedSpeechRecognition
/System/Library/PrivateFrameworks/CoreEmbeddedSpeechRecognition.framework/Contents/MacOS/CoreEmbeddedSpeechRecognition
CESRTrialAssetManager
Class getCESRTrialAssetManagerClass(void)_block_invoke
ADAssetManager.m
Unable to find class %s
void *CoreEmbeddedSpeechRecognitionLibrary(void)
/System/Library/PrivateFrameworks/CDMFoundation.framework/CDMFoundation
/System/Library/PrivateFrameworks/CDMFoundation.framework/Contents/MacOS/CDMFoundation
CDMClient
Class getCDMClientClass(void)_block_invoke
void *CDMFoundationLibrary(void)
/System/Library/PrivateFrameworks/MorphunAssets.framework/MorphunAssets
/System/Library/PrivateFrameworks/MorphunAssets.framework/Contents/MacOS/MorphunAssets
MorphunAssets
Class getMorphunAssetsClass(void)_block_invoke
void *MorphunAssetsLibrary(void)
LOCALE_UNKNOWN_LOCALE
LOCALE_AR_AE
LOCALE_AR_SA
LOCALE_CA_ES
LOCALE_CS_CZ
LOCALE_DA_DK
LOCALE_DE_AT
LOCALE_DE_CH
LOCALE_DE_DE
LOCALE_EL_GR
LOCALE_EN_AE
LOCALE_EN_AU
LOCALE_EN_CA
LOCALE_EN_GB
LOCALE_EN_ID
LOCALE_EN_IE
LOCALE_EN_IN
LOCALE_EN_MY
LOCALE_EN_NZ
LOCALE_EN_PH
LOCALE_EN_SG
LOCALE_EN_SA
LOCALE_EN_US
LOCALE_EN_ZA
LOCALE_ES_CL
LOCALE_ES_CO
LOCALE_ES_ES
LOCALE_ES_MX
LOCALE_ES_US
LOCALE_FI_FI
LOCALE_FR_BE
LOCALE_FR_CA
LOCALE_FR_CH
LOCALE_FR_FR
LOCALE_HE_IL
LOCALE_HI_IN
LOCALE_HR_HR
LOCALE_HU_HU
LOCALE_ID_ID
LOCALE_IT_CH
LOCALE_IT_IT
LOCALE_JA_JP
LOCALE_KO_KR
LOCALE_MS_MY
LOCALE_NB_NO
LOCALE_NL_BE
LOCALE_NL_NL
LOCALE_PL_PL
LOCALE_PT_BR
LOCALE_PT_PT
LOCALE_RO_RO
LOCALE_RU_RU
LOCALE_SK_SK
LOCALE_SV_SE
LOCALE_TH_TH
LOCALE_TR_TR
LOCALE_UK_UA
LOCALE_VI_VN
LOCALE_WUU_CN
LOCALE_YUE_CN
LOCALE_ZH_CN
LOCALE_ZH_HK
LOCALE_ZH_TW
ADAudioSessionCoordinationMessageBeginAudioSessionRequest::effectiveDate
ADAudioSessionCoordinationMessageBeginAudioSessionRequest::expirationDuration
-[ADSyncManager initWithServiceManager:queue:]_block_invoke
-[ADSyncManager _finishSync]
-[ADSyncManager _syncingService:withSyncInfo:receivedChunk:continueBlock:]
ADSyncManager.m
Not expecting a sync chunk; already have a continue block
-[ADSyncManager _syncFinishedForService:error:]
-[ADSyncManager _continueSync]
-[ADSyncManager _continueSync]_block_invoke_2
-[ADSyncManager _continueSync]_block_invoke
v32@?0@"ADSyncChunkInfo"8@"NSError"16@?<v@?B>24
Already have a sync delegate, is sync still in progress?
-[ADSyncManager prepareSyncWithAnchors:forReasons:delegate:]
-[ADSyncManager addQueuedAnchors:forReasons:]
-[ADSyncManager continueSync]
-[ADSyncManager cancelSyncForAnchor:]
-[ADSyncManager reset]
-[ADSyncManager serviceTimedoutForSync:]
assistant_enabled
daily_sync
requested_by_assistantd
com.apple.assistant.sync_data_changed
remoteFull
remoteLimited
-[ADSession _sendPendingCommands]
-[ADSession _sendLimboCommand:]
-[ADSession _sendServerCommand:]
-[ADSession _sendServerCommands:]
-[ADSession _sendAssistantDataChangedSinceAnchor:refId:]
-[ADSession assistantDataManager:didUpdateAssistantData:]_block_invoke
-[ADSession _setAssistantDataAnchorIfNeeded:]
-[ADSession _sendPendingDormantCommands]
-[ADSession _setDormantWithStyle:]
dormant
-[ADSession preheatAndMakeQuiet:]
-[ADSession eagerlyFetchAssistantData]
-[ADSession refreshValidationData]
-[ADSession sendCommand:opportunistically:]
-[ADSession prepareForRetry]
-[ADSession cancelSessionRequest:]
initial
waiting
retryWaiting
connectionStarted
connectionOpened
openedDormant
authenticating
holding
createAssistant
loadAssistant
destroyAssistant
numberOfRequestsTillNow
-[ADDictationOnDeviceSampling decrementRequestCount]
-[ADDictationOnDeviceSampling isRequestSelectedForSampling]
%@/%@
+[ADDictationOnDeviceSampling _readDictationSampledPlist]
-[ADDictationOnDeviceSampling _createDictationSampledPlistIfItDoesNotExist]
-[ADDictationOnDeviceSampling _writeDictationSamplingVariablesToFile:]
-[ADSystemStateContextProvider _handleSleepStateChangedToState:fromState:]
-[ADAlarmTransformer aceCommandForSiriResponse:responseError:forRequestCommand:]
siri-alarm-internal:
-[SAAlarmAlarmShow(ADAlarmTransformer) _ad_getAlarmRequestRepresentationWithCompletionHandler:]_block_invoke_2
v16@?0@"<ADAlarmStoring>"8
-[SAAlarmUpdate(ADAlarmTransformer) _ad_getAlarmRequestRepresentationWithCompletionHandler:]
-[SAAlarmUpdate(ADAlarmTransformer) _ad_getAlarmRequestRepresentationWithCompletionHandler:]_block_invoke_2
-[SAAlarmDelete(ADAlarmTransformer) _ad_getAlarmRequestRepresentationWithCompletionHandler:]
-[SAAlarmDismiss(ADAlarmTransformer) _ad_getAlarmRequestRepresentationWithCompletionHandler:]
AFAlarmURLForAlarmIdentifier
_NULL_STORE
-[ADManagedStorageConnection setKnowledgeStoreData:forKey:inStoreWithName:completion:]_block_invoke
-[ADManagedStorageConnection getKnowledgeStoreDataForKey:inStoreWithName:completion:]_block_invoke
-[ADManagedStorageConnection resetKnowledgeStoreWithName:completion:]_block_invoke
_ADGlobalKnowledgeStoreQueue_block_invoke
DeleteSyncDataServiceValidity
com.apple.siri.sync.DisabledSyncDataToBeDeleted
-[ADDeleteSyncDataService beginSyncForInfo:chunkHandler:]
-[ADOfflineMetricsMap fetchNextMetricsUsingBlock:]
-[ADOfflineMetricsMap insertMetrics:withOfflineIdentifier:]
-[ADOfflineMetricsMap deleteMetricsWithOfflineIdentifier:]
-[ADOfflineMetricsMap deleteAllMetrics]
-[ADOfflineMetricsMap _offlineIdentifiers]
_ADOfflineMetricsMapGetOfflineIdentifiers
plist
ADSharedDataDidChangeNotification
ADSharedDataDidChangePreviousLanguageCodeKey
ADSharedDataDidChangePreviousOutputVoiceKey
ADSharedDataDidChangePeerSetKey
-[ADCommandCenter(SharedDataClient) _updateSharedDataWithPairedPeerData:]
v20@?0B8@"NSString"12
-[ADCommandCenter(SharedDataClient) updateSharedDataFromPeerUseCache:allowCloudMessaging:completion:]
-[ADCommandCenter(SharedDataClient) sharedDataConnection:didUpdateSharedData:]
-[ADCommandCenter(SharedDataClient) listenForSharedDataFromCloud]
v24@?0@"ADPeerInfo"8@?<v@?@"ADSharedData">16
-[ADCommandCenter(SharedDataClient) listenForSharedDataFromCloud]_block_invoke
v24@?0@"ADSharedData"8@"ADPeerInfo"16
-[ADCommandCenter(SharedDataClient) updateSharedDataFromCompanion]
-[ADCommandCenter(SharedDataClient) updateSharedDataFromCompanion]_block_invoke
-[ADCommandCenter(SharedDataClient) _resetPeerAccountSettingsWithSharedData:]
-[ADCommandCenter(SharedDataClient) updateSharedDataFromCloudPeers:completion:]
-[ADCommandCenter(SharedDataClient) _updateSharedDataFromPeers:completion:]
-[ADCommandCenter(SharedDataClient) _updateSharedDataFromPeers:completion:]_block_invoke
-[ADCommandCenter(SharedDataClient) updateSharedDataWithCloudData:fromPeer:]
-[ADCommandCenter(SharedDataClient) updateSharedDataWithCloudData:fromPeer:]_block_invoke
-[ADCommandCenter(SharedDataClient) sendGizmoData]
-[ADCommandCenter(SharedDataRemote) getSharedDataForPeer:]_block_invoke
OnDeviceDictationAudioData
codec
samplingRate
interactionIdentifier
asrSelfComponentIdentifier
applicationName
samplingTimestamp
com.apple.siri.speech.sampling.upload
-[ADSpeechSamplingSendAudioData dealloc]
-[ADSpeechSamplingSendAudioData sendAudioDataToServer]_block_invoke
-[ADSpeechSamplingSendAudioData enqueueAudioDataWithAudioFileName:audioMetadataDict:folderPath:]
ALAC_Mono_16000Hz
ALAC_Mono_8000Hz
-[ADSpeechSamplingSendAudioData enqueueAudioDataWithAudioFileName:audioMetadataDict:folderPath:]_block_invoke
-[ADSpeechSamplingSendAudioData makeValidWAVFile:withSamplingRateOf:]
RIFF
WAVE
fmt 
data
-[ADSpeechSamplingSendAudioData convertToALACWithPath:withSamplingRateOf:]
-[ADSpeechSamplingDictationAudioDataHandler initWithAudioDataFolders:]
-[ADSpeechSamplingDictationAudioDataHandler dealloc]
send on device dictation audio data
send on device dictation audio data to server is starting
-[ADSpeechSamplingDictationAudioDataHandler addAudioSamplesOnQueue:]
-[ADSpeechSamplingDictationAudioDataHandler adSpeechRecognitionDidFail:sessionUUID:]_block_invoke
-[ADSpeechSamplingDictationAudioDataHandler adSpeechRecognized:usingSpeechModel:sessionUUID:]_block_invoke
-[ADSpeechSamplingDictationAudioDataHandler adSpeechRecordingDidFail:context:]_block_invoke
_ADSamplingComponentFromSamplingType
_ADReadAudioMetadataPlist
wrapAndEmitTopLevelSelfEvent
deleted
Data older than maximum retention period.
description
UNDEFINED
unixTime
_ADStartSendingAudioDataToServer
_ADSpeechSamplingDeleteOldData
_ADGetDictationUIInteractionIdentifier
_ADSpeechSamplingSendSampledAudioDataToServer
_ADIsAudioDataFolderValidForProcessing
ADServiceConnectionSyncQueue
-[ADServiceConnection _connection]_block_invoke
ADServiceConnection.m
Must have a path
Must have a command
class
commandName
-[ADServiceConnection sendClientBoundCommand:domain:executionContext:reply:]
-[ADServiceConnection sendClientBoundCommand:domain:executionContext:reply:]_block_invoke
-[ADServiceConnection sendClientBoundCommand:domain:executionContext:reply:]_block_invoke_2
v32@?0@"NSDictionary"8@"NSArray"16@"NSError"24
-[ADServiceConnection sendBeginSyncWithInfo:chunkHandler:completion:]
-[ADServiceConnection sendBeginSyncWithInfo:chunkHandler:completion:]_block_invoke
-[ADServiceConnection sendBeginSyncWithInfo:chunkHandler:completion:]_block_invoke_3
-[ADServiceConnection sendFetchSyncSnapshotForInfo:completion:]
-[ADServiceConnection sendFetchSyncSnapshotForInfo:completion:]_block_invoke
v16@?0@"AFSyncSnapshot"8
-[ADServiceConnection _stopTimersWithContinuation]_block_invoke
-[ADServiceConnection _stopTimersWithContinuation]_block_invoke_2
-[ADServiceConnectionProviderServiceDelegate syncChunksWithPreAnchor:postAnchor:updates:deletes:validity:forRequestUUID:reply:]_block_invoke
stuck_sync_plugin
plugin_path
ADPreferencesLanguageCodeDidChangeNotification
ADPreferencesOutputVoiceDidChangeNotification
ADPreferencesSharedUserIdentifierDidChangeNotification
ADPreferencesCompanionIdentifierDidChangeNotification
ADMultiUserVoiceIdentificationDidChangeNotification
ADPreferencesSiriDataSharingOptInStatusDidChangeNotification
ADPreferencesEnabledBitsDidChangeNotification
ADDeviceUsedForHomePodSetupNotification
User Identifier
Logging User Identifier
MultiUser VoiceIdentification Enabled
Internal Auth AppleConnect Service Ticket
Internal Auth Session Token
Accounts
Active Account
StatisticsEnabled
Idle Timeout
Using Default Language Settings
Ignore Location WiFi Status
Server Override
Product Type Prefix
Server Redirect
Last Known Proxy Stream Id
Last Sync Verification Date
Last Metrics Upload Date
Last Metrics Failure Reported On Date
-[ADPreferences setMultiUserVoiceIdentification:]
Device Redirected
Multi User Primary User
Multi User Shared Users
MultiUser Device Used for Onboarding
Multi User Syncer SAD Anchor
Multi User Syncer Identifiers Anchor
Multi User Syncer Backup Identifiers Anchor
Multi User Syncer Me Device
Multi User UUID For Deletion
Companion Identifier
Last Companion Remote Data Fetch Date
Experiment Identifier
Experiment State
Metrics Sender Disabled
Proxy Connection Disabled
Last Known Analytics Store State
Maximum Siri Output Volume
Minimum Siri Output Volume
Audio Session Active Delay
Server Audio Session Activation Delay
Server Media Playback Volume Threshold for Audio Session Activation Delay
Server Audio Session Activation Delay Above Media Playback Volume Threshold
Allow Explicit Content
Local MeCard
Companion ACE Host
MultiUser Setup Start Times
MultiUser Setup Complete Times
Use Device Authentication Version
Last server experiment check date
Last client experiment check date
insertedOrUpdatedItems = %@
deletedItemUUIDs = %@
ADDeviceSyncIncrementalChange::generation
ADDeviceSyncIncrementalChange::date
ADDeviceSyncIncrementalChange::insertedOrUpdatedItems
ADDeviceSyncIncrementalChange::deletedItemUUIDs
serverEnvironment
deliveryStream
processed
outstanding
scheduled
opportunistic
elapsed
payloadSize
LocalMeCardStoreQueue
-[ADLocalMeCardStore _init]_block_invoke
-[ADLocalMeCardStore storeMeCard:]_block_invoke
-[ADLocalMeCardStore meCard:]_block_invoke
com.apple.siri.TaskServiceErrorDomain
SiriTaskService-%@
SiriTaskService-
-[ADSiriTaskService handleCommand:forDomain:executionContext:reply:]
-[ADSiriTaskService handleCommand:forDomain:executionContext:reply:]_block_invoke_2
-[ADSiriTaskService handleCommand:forDomain:executionContext:reply:]_block_invoke
v24@?0@"AFSiriResponse"8@"NSError"16
v16@?0@"AFSiriRequest"8
/System/Library/Audio/UISounds/nano/vc~invitation-accepted.caf
com.apple.siri.uiservice.%p
ADUIServiceQueue
-[ADUIService cancelOperationsForRequestID:fromRemote:]_block_invoke
v24@?0@"AceObject"8@"AceObject<SAAceCommand>"16
-[ADUIService handleCommand:forDomain:executionContext:reply:]_block_invoke
v24@?0@"AceObject<SAAceCommand>"8@"NSError"16
-[SABaseCommand(ADUIService) _adui_handleWithCompletion:]
-[AceObject(ADUIService) _adui_notifyOthersOfArrival]
-[SAUIPlayNotificationSound(ADUIService) _soundURLInCarPlay:]
-[SAUIPlayNotificationSound(ADUIService) _adui_handleWithCompletion:]
-[SAUIPlayNotificationSound(ADUIService) _adui_handleWithCompletion:]_block_invoke
v32@?0@"<AFRelinquishableAssertion>"8@"<AFBluetoothDevice>"16@"AFSetAudioSessionActiveResult"24
ADRegisterSyncNowActivity
ADRegisterSyncNowActivity_block_invoke
v24@?0@"NSObject<OS_xpc_object>"8@?<v@?>16
com.apple.siri.xpc_activity.sync.now
ADRegisterSyncUrgentActivity
ADRegisterSyncUrgentActivity_block_invoke
com.apple.siri.xpc_activity.sync.urgent
ADRegisterXPCActivities
_RegisterXPCActivity_block_invoke
_RegisterDailySyncActivity_block_invoke
com.apple.siri.xpc_activity.sync.daily
_RegisterPeerFetchActivity_block_invoke
com.apple.siri.xpc_activity.peer_fetch
_BackoffFromShortInterval
_RegisterCompanionFetchActivity_block_invoke
com.apple.siri.xpc_activity.companion_fetch
com.apple.siri.xpc_activity.refresh_validation
_RefreshValidationWithCompletion
_RegisterDestroyActivity_block_invoke_2
com.apple.siri.xpc_activity.destroy
com.apple.siri.xpc_activity.service_maintenance
_RegisterHeartbeatActivity_block_invoke_2
com.apple.siri.SpokenNotificationsModule
kSpokenMessageWhitelistLevel
_RegisterHeartbeatActivity_block_invoke
com.apple.siri.xpc_activity.heartbeat
UNNotificationSettingsCenter
/System/Library/PrivateFrameworks/UserNotificationsSettings.framework/UserNotificationsSettings
CCSControlCenterService
/System/Library/PrivateFrameworks/ControlCenterServices.framework/ControlCenterServices
_RegisterMetricsActivity_block_invoke_2
com.apple.siri.xpc_activity.metrics-sender
com.apple.siri.xpc_activity.internal-cleanup
com.apple.siri.xpc_activity.announce-messages-eligibility
com.apple.siri.xpc_activity.announce-notifications-enablement
com.apple.siri.xpc_activity.service_boot_maintenance
com.apple.siri.xpc_activity.speech-audio-sample-delete
com.apple.siri.xpc_activity.speech-audio-sampled
com.apple.siri.xpc_activity.context-collector-reelection
_RegisterExperimentConfigurationsSyncActivity_block_invoke_2
_RegisterExperimentConfigurationsSyncActivity_block_invoke
com.apple.siri.xpc_activity.experiment-configurations.syncing
_RegisterMultiUserMetricsActivity
com.apple.siri.apc_activity.multi-user.metrics
_RegisterMultiUserMetricsActivity_block_invoke_2
_RegisterMultiUserMetricsActivity_block_invoke
com.apple.siri.xpc_activity.siri-vocabulary-migration
com.apple.siri.xpc_activity.logviewer-identifier-defaults-write
_ADValidationRefreshCriteriaForInterval
-[ADCommandCenter(ServiceMaintenance) _runMaintenanceForServices:completion:]
-[ADCommandCenter(ServiceMaintenance) _runMaintenanceForServices:completion:]_block_invoke
-[ADCommandCenter(ServiceMaintenance) runServiceMaintenanceWithCompletion:]
-[ADCommandCenter(ServiceMaintenance) runBootTimeServiceMaintenanceWithCompletion:]
-[ADAudioSessionCoordinator(Messaging) _setUpRequestHandlers]
Unexpected request dictionary.
Unable to create message from request dictionary.
Unable to create response dictionary from reply message.
v24@?0@"ADAudioSessionCoordinationMessage"8@"NSError"16
v32@?0@"NSDictionary"8@"NSString"16@?<v@?@"NSDictionary"@"NSError">24
-[ADAudioSessionCoordinator(Messaging) _tearDownRequestHandlers]
-[ADAudioSessionCoordinator(Messaging) _handleMessage:fromDeviceWithID:replyHandler:]
-[ADAudioSessionCoordinator(Messaging) _handleMessage:fromDeviceWithID:replyHandler:]_block_invoke
Unexpected response for reply message.
v16@?0@"<ADAudioSessionCoordinationMessageMutating>"8
v24@?0@"ADAudioSessionCoordinationMessageBeginAudioSessionResponse"8@"NSError"16
Unexpected request in message.
v24@?0@"ADAudioSessionCoordinationMessageKeepAudioSessionAliveResponse"8@"NSError"16
v24@?0@"ADAudioSessionCoordinationMessageEndAudioSessionResponse"8@"NSError"16
Unexpected message type.
-[ADAudioSessionCoordinator(Messaging) _handleBeginAudioSessionRequest:fromDeviceWithID:responseHandler:]
Begin Audio Session
-[ADAudioSessionCoordinator(Messaging) _handleKeepAudioSessionAliveRequest:fromDeviceWithID:responseHandler:]
Keep Audio Session Alive
-[ADAudioSessionCoordinator(Messaging) _handleEndAudioSessionRequest:fromDeviceWithID:responseHandler:]
End Audio Session
-[ADAudioSessionCoordinator(Messaging) _sendMessage:toDeviceWithID:replyHandler:]
-[ADAudioSessionCoordinator(Messaging) _sendMessage:toDeviceWithID:replyHandler:]_block_invoke
Unable to create request dictionary from message.
Unexpected response dictionary.
Unable to create reply message from response dictionary.
-[ADAudioSessionCoordinator(Messaging) _sendBeginAudioSessionRequest:toDeviceWithID:responseHandler:]
Unexpected reply message type.
Unexpected response in reply message.
Unexpected request for message.
-[ADAudioSessionCoordinator(Messaging) _sendKeepAudioSessionAliveRequest:toDeviceWithID:responseHandler:]
-[ADAudioSessionCoordinator(Messaging) _sendEndAudioSessionRequest:toDeviceWithID:responseHandler:]
Paired Simulator Device
Paired Simulator
Paired Simulator Product Version
-[ADCommandCenter(Metrics) _reallyCommitOrSaveMetrics:]
-[ADCommandCenter(Metrics) _sendMetrics:requiresActiveSession:batch:completion:]
-[ADCommandCenter(Metrics) _sendMetrics:requiresActiveSession:batch:completion:]_block_invoke_2
-[ADCommandCenter(Metrics) _sendMetrics:requiresActiveSession:batch:completion:]_block_invoke
-[ADCommandCenter(Metrics) _metrics_isAssistantOrDictationEnabled]
-[ADCommandCenter(Metrics) _metrics_isSystemIdle]
-[ADCommandCenter(Metrics) _metrics_markLocalEagerRecognitionCandidate:]
rawRecognitionTokenConfidenceScores
rawRecognitionFirstTokenSilenceStartTime
recognitionFirstTokenSilenceStartTime
rawRecognitionLeadingSilence
rawRecognitionTrailingSilence
-[ADCommandCenter(Metrics) _metrics_recordUIMetrics:]_block_invoke
-[ADCommandCenter(Metrics) _metrics_recordFailureMetricsForError:]_block_invoke
-[ADCommandCenter(Metrics) _metrics_recordCancellationMetrics]_block_invoke
-[ADCommandCenter(Metrics) _metrics_sendMetricsToServerUntilLimit:requiresUnlimitedPower:requiresActiveSession:purgesOversizedStorage:scheduledActivity:completion:]
-[ADCommandCenter(Metrics) _metrics_sendMetricsToServerUntilLimit:requiresUnlimitedPower:requiresActiveSession:purgesOversizedStorage:scheduledActivity:completion:]_block_invoke_4
-[ADCommandCenter(Metrics) _metrics_sendMetricsToServerUntilLimit:requiresUnlimitedPower:requiresActiveSession:purgesOversizedStorage:scheduledActivity:completion:]_block_invoke
-[ADCommandCenter(Metrics) _metrics_sendNextOfflineMetricsToServerUntilLimit:requiresUnlimitedPower:requiresActiveSession:completion:]
-[ADCommandCenter(Metrics) _metrics_sendNextOfflineMetricsToServerUntilLimit:requiresUnlimitedPower:requiresActiveSession:completion:]_block_invoke
v16@?0@"SAMetrics"8
-[ADCommandCenter(Metrics) _metrics_sendNextAnalyticsEventStreamToServerUntilLimit:requiresUnlimitedPower:requiresActiveSession:prioritizedEventStreamUID:deliveryStreamContinuations:scheduledActivity:completion:]
-[ADCommandCenter(Metrics) _metrics_sendNextAnalyticsEventStreamToServerUntilLimit:requiresUnlimitedPower:requiresActiveSession:prioritizedEventStreamUID:deliveryStreamContinuations:scheduledActivity:completion:]_block_invoke
v32@?0@"ADAnalyticsCompositeStreamId"8Q16^B24
-[ADCommandCenter(Metrics) _metrics_sendNextAnalyticsEventStreamToServerUntilLimit:requiresUnlimitedPower:requiresActiveSession:prioritizedEventStreamUID:deliveryStreamContinuations:scheduledActivity:completion:]_block_invoke_2
v32@?0@"NSArray"8@"NSString"16@?<v@?B>24
-[ADCommandCenter(Metrics) _metrics_processEventRecordsFromStore:batch:deliveryStream:eventStreamUID:streamSpeechId:untilLimit:uploadRecords:completion:]
-[ADCommandCenter(Metrics) _metrics_processEventRecordsFromStore:batch:deliveryStream:eventStreamUID:streamSpeechId:untilLimit:uploadRecords:completion:]_block_invoke
-[ADCommandCenter(Metrics) _metrics_processEventRecordsFromStore:batch:deliveryStream:eventStreamUID:streamSpeechId:untilLimit:uploadRecords:completion:]_block_invoke_3
-[ADCommandCenter(Metrics) _metrics_sendUsageHeartbeatMetricsWithSiriEnabled:onLockscreen:dictationEnabled:voiceTriggerEnabled:starkHasBeenActiveWithin24Hours:raiseToSpeakEnabled:raiseToSpeakAssetVersion:activeAppleAudioDevices:spokenNotificationsEnabled:announceNotificationsEnabledOnHeadphones:carplayAnnounceEnablementType:isAnnounceNotificationsMutedForCarPlay:shouldSkipTriggerlessReplyConfirmation:spokenNotificationsProxCardSeen:spokenNotificationsControlCenterModuleEnabled:spokenNotificationsWhitelistSettings:announceCallsEnabled:preciseLocationEnabled:adaptiveSiriVolumeEnabled:adaptiveSiriVolumePermanentOffsetEnabled:adaptiveSiriVolumePermanentOffsetFactor:adaptiveSiriVolumeMostRecentIntent:]
-[ADCommandCenter(Metrics) _metrics_sendUsageHeartbeatMetricsWithSiriEnabled:onLockscreen:dictationEnabled:voiceTriggerEnabled:starkHasBeenActiveWithin24Hours:raiseToSpeakEnabled:raiseToSpeakAssetVersion:activeAppleAudioDevices:spokenNotificationsEnabled:announceNotificationsEnabledOnHeadphones:carplayAnnounceEnablementType:isAnnounceNotificationsMutedForCarPlay:shouldSkipTriggerlessReplyConfirmation:spokenNotificationsProxCardSeen:spokenNotificationsControlCenterModuleEnabled:spokenNotificationsWhitelistSettings:announceCallsEnabled:preciseLocationEnabled:adaptiveSiriVolumeEnabled:adaptiveSiriVolumePermanentOffsetEnabled:adaptiveSiriVolumePermanentOffsetFactor:adaptiveSiriVolumeMostRecentIntent:]_block_invoke_2
v16@?0@"SISchemaDailyDeviceStatus"8
EnabledAndActiveStatus
NONE
assistantIsEnabled
TRUE
FALSE
assistantOnLockscreen
dictationIsEnabled
voiceTriggerEnabled
carPlayHasBeenActiveWithin24Hours
raiseToSpeakEnabled
raiseToSpeakAssetVersion
appleAudioDevicesActiveWithin24Hours
spokenNotificationsEnabled
spokenNotificationsProxCardSeen
spokenNotificationsControlCenterModuleEnabled
spokenNotificationsWhitelistSettings
announceCallsEnabled
preciseLocationIsEnabled
asvEnabled
asvPermanentOffsetEnabled
asvPermanentOffsetFactor
asvMostRecentIntent
recordedDate
accountID
-[ADCommandCenter(Metrics) _metrics_publishDailyDeviceStatus:completion:]
v16@?0@"SISchemaAnyEvent"8
-[ADCommandCenter(Metrics) _metrics_publishDailyDeviceStatus:completion:]_block_invoke
SpotlightEngagementFeedback
Selected
LostFocus
Closed
Cleared
engagementInfo
-[ADCommandCenter(Metrics) _metrics_sendEngagementFeedback:voiceQueryIdentifier:]
-[ADCommandCenter(Metrics) _metrics_destroyAllMetricsIfNeeded]
-[ADCommandCenter(Metrics) _metrics_destroyAllMetrics]
-[ADCommandCenter(Metrics) _metrics_recordNetworkSnapshotForEvent:completion:]_block_invoke
snapshotEvent
-[ADCommandCenter(Metrics) buildDailyDeviceStatusHeartbeatMetricsWithSiriEnabled:onLockscreen:dictationEnabled:voiceTriggerEnabled:starkHasBeenActiveWithin24Hours:raiseToSpeakEnabled:activeAppleAudioDevices:spokenNotificationsEnabled:announceNotificationsEnabledOnHeadphones:carplayAnnounceEnablementType:isAnnounceNotificationsMutedForCarPlay:shouldSkipTriggerlessReplyConfirmation:spokenNotificationsProxCardSeen:spokenNotificationsControlCenterModuleEnabled:spokenNotificationsWhitelistSettings:announceCallsEnabled:preciseLocationEnabled:adaptiveSiriVolumeEnabled:adaptiveSiriVolumePermanentOffsetEnabled:adaptiveSiriVolumePermanentOffsetFactor:adaptiveSiriVolumeMostRecentIntent:withCompletion:]
v16@?0@"NSMutableArray"8
-[ADCommandCenter(Metrics) buildDailyDeviceStatusHeartbeatMetricsWithSiriEnabled:onLockscreen:dictationEnabled:voiceTriggerEnabled:starkHasBeenActiveWithin24Hours:raiseToSpeakEnabled:activeAppleAudioDevices:spokenNotificationsEnabled:announceNotificationsEnabledOnHeadphones:carplayAnnounceEnablementType:isAnnounceNotificationsMutedForCarPlay:shouldSkipTriggerlessReplyConfirmation:spokenNotificationsProxCardSeen:spokenNotificationsControlCenterModuleEnabled:spokenNotificationsWhitelistSettings:announceCallsEnabled:preciseLocationEnabled:adaptiveSiriVolumeEnabled:adaptiveSiriVolumePermanentOffsetEnabled:adaptiveSiriVolumePermanentOffsetFactor:adaptiveSiriVolumeMostRecentIntent:withCompletion:]_block_invoke
v24@?0@"ICMusicSubscriptionStatus"8@"NSError"16
-[ADCommandCenter(Metrics) _triggerABCForNullAssistantIdentifier]
SISchemaDailyDeviceStatus
-[ADCommandCenter(Metrics) fetchEnrolledUsersWithCompletion:]
-[ADCommandCenter(Metrics) fetchAppleMusicSubscriptionForSharedUser:completion:]
-[ADCommandCenter(Metrics) fetchAppleMusicSubscriptionForSharedUser:completion:]_block_invoke
v16@?0@"ICUserIdentity"8
-[ADCommandCenter(Metrics) fetchICUserIdentityForSharedUser:completion:]
-[ADCommandCenter(Metrics) fetchICUserIdentityForSharedUser:completion:]_block_invoke_2
-[ADCommandCenter(Metrics) fetchICUserIdentityForSharedUser:completion:]_block_invoke
v24@?0@"ACAccount"8@"NSError"16
ConfidenceMean
ConfidenceMax
ConfidenceMin
BestTranscription
recognition
rawRecognition
speechPackage
ICMusicSubscriptionStatusController
initICMusicSubscriptionStatusController_block_invoke
ADCommandCenter_Metrics.m
classICMusicSubscriptionStatusController
ICUserIdentity
initICUserIdentity_block_invoke
classICUserIdentity
-[ADCommandCenter(OutputVoice) _outputVoice_setOutputVoice:]
-[ADCommandCenter(OutputVoice) _updateAutoDownloadedVoiceAssetsForOutputVoice]
Messaging service is nil.
-[STGenericIntentRequest(Metrics) _ad_finalMetricsContextWithResponse:error:]
ADGenericIntentService.m
[request isKindOfClass:[STGenericIntentRequest class]]
Unknown
Minimal Alert
Speak Verbosely
ADOpportuneSpeakingModule
-[ADOpportuneSpeakingModule _finishRunningCurrentSpeakableWithResult:error:]
-[ADOpportuneSpeakingModule _processEnqueuedSpeakables]
-[ADOpportuneSpeakingModule _processEnqueuedSpeakables]_block_invoke
v16@?0@"<AFOpportuneSpeakingModel>"8
-[ADOpportuneSpeakingModule requestsToSpeak:withHandler:]
-[ADOpportuneSpeakingModule _withAllModelsExecute:]
-[ADOpportuneSpeakingModule _loadModelWithType:completion:]
-[ADOpportuneSpeakingModule _loadModelWithType:completion:]_block_invoke_2
v24@?0@"<AFOpportuneSpeakingModel>"8@"NSString"16
-[ADOpportuneSpeakingModule _loadModelWithType:completion:]_block_invoke
com.apple.siri.OpportuneSpeakingModelService
-[ADOpportuneSpeakingModule _connectionToOSMService]_block_invoke
-[ADOpportuneSpeakingModule _remoteOSMService]_block_invoke
-[ADOpportuneSpeakingModule modelWithIdentifier:didUpdateScore:forSpeakable:]
snapshot = %@
ADDeviceSyncCommandPullSnapshotResponse::snapshot
-[ADCallStateContextProvider callObserver:callStateDidChangeFrom:to:]
-[ADCallStateContextProvider callObserver:onSpeakerDidChange:]
-[ADCallStateContextProvider _donateCallStateContextWithSnapshot:completion:]
-[ADPostSiriEngagementService runMaintenanceWorkWithCompletion:]
-[ADPostSiriEngagementService runMaintenanceWorkWithCompletion:]_block_invoke
-[ADPostSiriEngagementService processMaintenanceResponse:]
-[ADPostSiriEngagementService processMaintenanceResponse:]_block_invoke
-[ADCommandCenter(AMOS) _sendAMOSCommand:domain:toBundleWithIdentifier:completion:]
-[ADCommandCenter(AMOS) _handleSADOCommandIfServiceDoesNotUseAMOS:allowInterposing:completion:]
-[ADCommandCenter(AMOS) _handleSADOCommandIfServiceDoesNotUseAMOS:allowInterposing:completion:]_block_invoke
v28@?0B8@"<SAAceCommand>"12@"NSError"20
-[ADCommandCenter(AMOS) _sendAMOSCommandToService:responseHandler:]_block_invoke
Unexpected response from service
-[ADCommandCenter(AMOS) _amosSADomainObjectRetrieve:completion:]
v20@?0@"<SAServerBoundCommand>"8i16
-[ADCommandCenter(AMOS) _updateObjectFromService:sadIdentifier:completion:]_block_invoke
Error retrieving object from service
Failed to retrieve object from service
-[ADCommandCenter(AMOS) _amosSADomainObjectUpdate:completion:]
-[ADCommandCenter(AMOS) _amosSADomainObjectDelete:completion:]
Failed to receive object from service
-[ADCommandCenter(AMOS) _amosSADomainObjectCommit:completion:]
Object not found in amos
-[ADCommandCenter(AMOS) _amosSADomainObjectCommit:completion:]_block_invoke
-[ADCommandCenter(AMOS) _amosSADomainObjectPunchOut:completion:]
No plugin for command
-[ADCommandCenter(AMOS) _handleCommandInAMOS:completion:]
Tried to handle non AMOS command as AMOS
-[ADSiriAnalyticsGlobalDimensionMessageResolver handlesMessage:]
-[ADSiriAnalyticsGlobalDimensionMessageResolver resolveMessage:completion:]
%@-%@
ZZZZZ
ADMultiUsersDidChangeNotification
ADMultiUserDidReceiveScoresNotification
vtSatScore
companion_device_score
nearby_devices_scores
MultiUserServiceQueue
com.apple.siri.corespeech.voiceprofilelist.change
-[ADMultiUserService _init]_block_invoke
-[ADMultiUserService _init]
-[ADMultiUserService _languageCodeDidChange]_block_invoke
-[ADMultiUserService _setupMultiUserListener]
-[ADMultiUserService _multiUserListenerShouldAcceptNewConnection:]
-[ADMultiUserService _multiUserListenerShouldAcceptNewConnection:]_block_invoke
-[ADMultiUserService _primaryUserSharedUserIdentifierDidChangeNotification:]_block_invoke
-[ADMultiUserService refreshHomeKitOnboardedUsers]_block_invoke
-[ADMultiUserService refreshHomeKitOnboardedUsers]_block_invoke_2
@"NSDictionary"8@?0
-[ADMultiUserService _refreshUsersAndVoiceProfiles:]
-[ADMultiUserService _refreshUsersAndVoiceProfiles:]_block_invoke
whatsinaname
-[ADMultiUserService _loadCloudSyncedUsersFromCache]
-[ADMultiUserService _resetAllUsers]
-[ADMultiUserService _forceCloudSyncedUserDownload:]
-[ADMultiUserService _isCurrentLanguageMultiUserCompatible]
-[ADMultiUserService _trackHomeUserUUIDForInFlightVoiceProfile:]
-[ADMultiUserService _untrackHomeUserUUIDForInFlightVoiceProfile:]
-[ADMultiUserService _untrackAllHomeUserUUIDsForInFlightVoiceProfile]
-[ADMultiUserService _updateVoiceProfileInfo]
-[ADMultiUserService _describeSAMultiUserInfo:]
-[ADMultiUserService _updateSAMultiUserInfo]
v32@?0@"SAHomeMemberInfo"8Q16^B24
missing_count
total
-[ADMultiUserService _updateHomeKitSettings:personalDomainSettingsChanged:]
-[ADMultiUserService _allowVoiceIdentificationForThisUser:completion:]
-[ADMultiUserService _allowVoiceIdentificationForThisUser:completion:]_block_invoke_2
-[ADMultiUserService _allowVoiceIdentificationForThisUser:completion:]_block_invoke
-[ADMultiUserService addUser:sharedUserId:loggableSharedUserId:enrollmentName:isPrimary:nonCloudSyncedUser:completion:]
-[ADMultiUserService _addUser:sharedUserId:loggableSharedUserId:enrollmentName:isPrimary:nonCloudSyncedUser:completion:]
-[ADMultiUserService removeUserWithShareOwnerNames:completion:]
-[ADMultiUserService removeUserWithShareOwnerNames:completion:]_block_invoke
-[ADMultiUserService _logRelevantAnalyticsOnUserAddedWithSharedUserID:isPrimary:]
user
owner
participant
timestamp
-[ADMultiUserService _removeUser:homeUserID:sharedUserID:error:]
-[ADMultiUserService removeUserWithHomeUUID:completion:]
-[ADMultiUserService removeUserWithSharedUserID:completion:]
-[ADMultiUserService showMultiUsersWithCompletion:]_block_invoke
-[ADMultiUserService validateAndReturnScores:classifiedUser:donatedScores:unknownUserSharedId:totalUsers:ghostVoiceProfileDetected:]
-[ADMultiUserService validateAndReturnScores:classifiedUser:donatedScores:unknownUserSharedId:totalUsers:ghostVoiceProfileDetected:]_block_invoke
local_scores
donated_scores
-[ADMultiUserService resetAllUsers]_block_invoke
-[ADMultiUserService voiceProfilesOutOfSync]_block_invoke_2
-[ADMultiUserService voiceProfilesOutOfSync]_block_invoke
-[ADMultiUserService _trackGhostVoiceProfile:]
-[ADMultiUserService _removeGhostVoiceProfiles]_block_invoke
-[ADMultiUserService updateVoiceProfiles]
-[ADMultiUserService triggerMultiUserMetricsWithCompletion:]_block_invoke_2
-[ADMultiUserService triggerMultiUserMetricsWithCompletion:]_block_invoke
voice recognition enabled users count
multi users count
voice profiles count
users with sharedUserId
-[ADMultiUserService updateMultiUserWithSharedUserId:companionId:companionSpeechId:idsIdentifier:productPrefix:aceHost:completion:]
-[ADMultiUserService updateMultiUserWithSharedUserId:companionId:companionSpeechId:idsIdentifier:productPrefix:aceHost:completion:]_block_invoke
-[ADMultiUserService updateMultiUserWithSharedUserId:companionId:companionSpeechId:idsIdentifier:productPrefix:aceHost:completion:]_block_invoke_2
-[ADMultiUserService getAllowExplicitContentSettingForRecognizedUser]_block_invoke
-[ADMultiUserService getHomeUserIdForSharedUserId:completion:]
-[ADMultiUserService getHomeUserIdForSharedUserId:completion:]_block_invoke
-[ADMultiUserService getSharedUserIdForHomeUserId:completion:]
-[ADMultiUserService getSharedUserIdForHomeUserId:completion:]_block_invoke
-[ADMultiUserService getConformingSharedUserIdForHomeUserId:completion:]_block_invoke
-[ADMultiUserService getConformingSharedUserIds:]_block_invoke
-[ADMultiUserService getHomeUserIdOfRecognizedUserWithCompletion:]_block_invoke
-[ADMultiUserService getMultiUserSettingsForSharedUserID:completion:]_block_invoke
-[ADMultiUserService getPreferredMediaUserHomeUserIDWithCompletion:]_block_invoke
Unable to determine the preferred media user
-[ADMultiUserService getIDSIdentifierForAssistantId:completion:]
-[ADMultiUserService getIDSIdentifierForAssistantId:completion:]_block_invoke
v32@?0@"AFSharedConfidenceScore"8Q16^B24
ADMultiUserServiceDonatedScoresFromDeviceContextTuples
ADAddressBookManager
com.apple.contact.people
-[ADAddressBookManager _fetchMappedMeCard]
-[ADAddressBookManager _meContactDidChange:]
-[ADAddressBookManager _firstUnlockStateDidChange:]
index
RSSI
+[ADCoreBluetoothManager fetchCBUUIDForConnectedDeviceWithAddress:completion:]_block_invoke
v24@?0@"CBDeviceResponse"8@"NSError"16
ADCoreBluetoothManagerQueue
-[ADCoreBluetoothManager _init]_block_invoke
-[ADCoreBluetoothManager _retrieveConnectedDevicesInfoOnServices:completion:]_block_invoke
disconnected
connecting
disconnecting
-[ADCoreBluetoothManager centralManagerDidUpdateState:]
-[ADCoreBluetoothManager centralManager:didConnectPeripheral:]
-[ADCoreBluetoothManager centralManager:didFailToConnectPeripheral:error:]
-[ADCoreBluetoothManager peripheral:didReadRSSI:error:]_block_invoke
Command not supported
ADDeviceContextDeduplicateTuples
@"NSString"16@?0@"AFPeerInfo"8
B16@?0@8
ADDeviceProximityGetMapByIDSDeviceUniqueIdentifierFromTuples
ADDeviceProximityGetMapByAssistantIdentifierFromTuples
@"AFDeviceContext"16@?0@"AFPeerContentTuple"8
ADDeviceContextTuplesAdjustedForDate_block_invoke_2
v32@?0@"AFDeviceContextMetadata"8Q16^B24
Data
ASSISTANT_SERVICES_HOMEPOD_REQUEST_HANDOFF_NOTIFICATION_TITLE
AppleLanguages
-[AFSiriRequest(ADTimerRequestHandler) _ad_handleStopwatchRequestWithCompletionHandler:]
ADMultiUserTestSupport
-[ADMultiUserTestSupport getClassifiedUser]
-[ADMultiUserTestSupport getUserIdentityClassification]
q24@?0@"NSNumber"8@"NSNumber"16
_ADMultiUserTestSupportSortSharedIDsByScoresDescending
-[AFSiriRequest(ADAlarmRequestHandler) _ad_handleAlarmRequestWithCompletionHandler:]
v24@?0@"STAlarm"8@"NSError"16
SiriCoreConnectionTCPInfoMetrics *ADConnectionTCPInfoMetricsCreateWithProtocolBufferProxy(_ADPBProxyTCPInfoMetrics *__strong)
ADConnectionTCPInfoMetricsUtilities.m
protocolBufferProxy != nil
SiriCoreConnectionTCPInfoMetrics *ADConnectionTCPInfoMetricsCreateWithLegacyProtocolBufferProxy(_ADPBProxyGetMetricsResponse *__strong)
legacyProtocolBufferProxy != nil
default
_ADPBProxyTCPInfoMetrics *ADConnectionTCPInfoMetricsCreateProtocolBufferProxy(SiriCoreConnectionTCPInfoMetrics *__strong)
tcpInfoMetrics != nil
void ADConnectionTCPInfoMetricsConfigureLegacyProtocolBufferProxy(SiriCoreConnectionTCPInfoMetrics *__strong, _ADPBProxyGetMetricsResponse *__strong)
com.apple.private.alloy.siri.location
Faux UI Service Queue
-[ADFauxUIService handleCommand:forDomain:executionContext:reply:]
-[ADFauxUIService handleCommand:forDomain:executionContext:reply:]_block_invoke_3
Command not supported 
com.apple.siri.SynapseSyncPlugin
-[ADHomeAnnouncementContextAdaptor initWithInstanceContext:]
com.apple.assistant.home-announcement-adaptor
-[ADHomeAnnouncementContextAdaptor registerSnapshotUpdater:]
-[ADHomeAnnouncementContextAdaptor unregisterSnapshotUpdater]
-[ADHomeAnnouncementContextAdaptor getSnapshotWithCompletion:]_block_invoke
-[ADHomeAnnouncementContextAdaptor _invalidate]
-[ADHomeAnnouncementContextAdaptor _processAndEvaluateSnapshot:]
-[ADHomeAnnouncementContextAdaptor _processAndEvaluateSnapshot:]_block_invoke
v16@?0@"<AFHomeAnnouncementSnapshotMutating>"8
-[ADHomeAnnouncementContextAdaptor _setSnapshot:]
ADHomeAnnouncementGetIsValid
Myriad Service Queue
-[ADMyriadService setMyriadDecisionResult:]
-[ADMyriadService _setStereoPartnerIdentifier:]
-[ADMyriadService _setLastTimeStereoPartnerWon:]
-[ADMyriadService _handleMessage:messageType:fromDeviceWithIdentifier:completion:]
-[ADMyriadService _handleRequest:fromDeviceWithIdentifier:completion:]
-[ADMyriadService _handleLastWinRequest:completion:]
-[ADAcePassthroughResponseTransformer aceCommandForSiriResponse:responseError:forRequestCommand:]
-[ADSessionRemoteServer dealloc]
-[ADSessionRemoteServer retryNakedCommandsIfNeeded]
/ace
-[ADSessionRemoteServer _connectionURL]
-[ADSessionRemoteServer _serverConnection]
SiriCoreSiriConnection
-[ADSessionRemoteServer _resetServerConnectionSynchronously:completion:]_block_invoke
v20@?0@"SiriCoreSiriConnection"8B16
-[ADSessionRemoteServer _resetServerConnectionSynchronously:completion:]_block_invoke_2
-[ADSessionRemoteServer _startConnectionPreferringWWAN:skipPeer:skipPeerError:useWiFiHint:forceReconnect:]
-[ADSessionRemoteServer siriConnection:willStartWithConnectionType:]
policyId
routeId
delay
connectionType
-[ADSessionRemoteServer siriConnection:didReceiveAceObject:]_block_invoke
-[ADSessionRemoteServer siriConnectionDidClose:]_block_invoke
-[ADSessionRemoteServer _siriConnection:didEncounterError:analysisInfo:]
connectionURL
interfaceIndex
sendBufferSize
wwanPreferred
-[ADSessionRemoteServer _updateConnectionPolicyFailureCount:]
-[ADSessionRemoteServer startRetry]
-[ADSessionRemoteServer resetRetryManager]
-[ADSessionRemoteServer _informDelegateOfError:]
-[ADSessionRemoteServer _cachedServerCertificate]
-[ADSessionRemoteServer _cachedValidationData]
-[ADSessionRemoteServer _setCachedValidationData:withDuration:]
-[ADSessionRemoteServer _persistValidationData:withExpiration:]
Assistant Identifier
9E5BD479-1D3E-400D-ADF7-ECB0A7DBFE06
-[ADSessionRemoteServer _reallyRetryPreferringWWAN:skipPeer:skipPeerError:useWiFiHint:causedByError:forceReconnect:useSecondary:]
oldId
newId
-[ADSessionRemoteServer _retryForFailedConnection:withType:onError:]
-[ADSessionRemoteServer _retryForFailedConnection:withType:onError:]_block_invoke
-[ADSessionRemoteServer _continueSessionInitWithValidationData:]
-[ADSessionRemoteServer _continueAuthWithCertificateData:]_block_invoke
-[ADSessionRemoteServer _continueAuthentication]
-[ADSessionRemoteServer refreshValidationData]
-[ADSessionRemoteServer _startSession]
-[ADSessionRemoteServer _connectionOpened]
-[ADSessionRemoteServer _eagerAuthDidComplete]
-[ADSessionRemoteServer _saSessionValidationFailed:]
refId
AppleConnect authentication is required. Please authenticate with the SiriAuthenticator app before trying your request again.
-[ADSessionRemoteServer _saGetSessionCertificateResponse:]
-[ADSessionRemoteServer _saCreateSessionInfoResponse:]
-[ADSessionRemoteServer _saAssistantCreated:]
-[ADSessionRemoteServer _saAssistantLoaded:]
sessionType
localACEHost
-[ADSessionRemoteServer _saAssistantDestroyed:]
-[ADSessionRemoteServer _saAssistantNotFound:]
-[ADSessionRemoteServer _saAssistantNotReady:]
Assistant not ready
-[ADSessionRemoteServer _saSetConnectionHeader:]
ACEHost
Local
SAConnectionHeader
-[ADSessionRemoteServer _assistantFailedForReason:error:]
-[ADSessionRemoteServer _assistantFailedForReason:error:]_block_invoke
-[ADSessionRemoteServer _saCommandFailed:]
classIdentifier
-[ADSessionRemoteServer _sendServerCommand:]
-[ADSessionRemoteServer _sendServerCommand:]_block_invoke
-[ADSessionRemoteServer _sendServerCommands:]
-[ADSessionRemoteServer _sendServerCommands:]_block_invoke
v24@?0@"<SiriCoreSessionObject>"8@"NSError"16
-[ADSessionRemoteServer _sendGetSessionCertificateData]
-[ADSessionRemoteServer _sendCreateSessionInfoRequestWithData:]
-[ADSessionRemoteServer _triggerABCForEmptyLocale]
LoadAssistant
null_locale
-[ADSessionRemoteServer _sendLoadAssistantWithAccount:validationData:]
assistantId
speechId
-[ADSessionRemoteServer _populateInternalAuthProperties:]
-[ADSessionRemoteServer _sendSetRemoteDevicesWithAccount:multiUserInfo:]
-[ADSessionRemoteServer _sendHomeContext:]
v16@?0@"SASetHomeContext"8
v16@?0@"ADSessionBarrier"8
-[ADSessionRemoteServer _homeInfoDidChange:]_block_invoke
-[ADSessionRemoteServer _homeContextDidChange:]_block_invoke
-[ADSessionRemoteServer _multiUsersDidChange:]_block_invoke
-[ADSessionRemoteServer networkManagerNonWWANDidBecomeAvailable:]_block_invoke
-[ADSessionRemoteServer networkManagerLostNonWWANConnectivity:]_block_invoke
-[ADSessionRemoteServer _recheckForWiFiTransition]
-[ADSessionRemoteServer _createAssistant]
-[ADSessionRemoteServer _probeSessionIfIdle]
sessionState
connectionMode
underlyingErrorDomain
underlyingErrorCode
Unavailable
Good
CellularInstant
CellularHistorical
WiFiInstant
WiFiHistorical
v16@?0@"SiriCoreNetworkQualityReport"8
-[ADSessionRemoteServer currentConnectionPreCachedMetrics]
sharedUserId
homeUserId
enrollmentName
loggableSharedUserId
companionAssistantId
companionSpeechId
companionIDSIdentifier
speechIdentifier
userAgent
aceHost
personalDomainEnabled
personalDomainUnauthenticatedRequestsAllowed
cloudShareOwnerName
voiceIDAllowedByUser
loggableMultiUserSharedUserId
loggableMusicSyncSharedUserId
loggableCompanionAssistantId
empty
homeMemberSettings
loggableUnknown
-[ADSiriClientStateContextProvider notifyObserver:didChangeStateFrom:to:]
-[ADDeviceSyncTimerProvider clockTimerObserver:timerDidFire:]
-[ADDeviceSyncTimerProvider clockTimerObserver:timerDidDismiss:]
-[ADDeviceSyncTimerProvider clockTimerObserver:snapshotDidUpdateFrom:to:]
-[ADDeviceSyncTimerProvider getGenerationWithCompletion:]
-[ADDeviceSyncTimerProvider getGenerationWithCompletion:]_block_invoke
v16@?0@"AFClockTimerSnapshot"8
-[ADDeviceSyncTimerProvider getIncrementalChangesAfterGeneration:limit:completion:]
Delta pulling mode is not supported for type %@.
-[ADDeviceSyncTimerProvider getSnapshotWithCompletion:]
-[ADDeviceSyncTimerProvider getSnapshotWithCompletion:]_block_invoke
v16@?0@"<ADDeviceSyncSnapshotMutating>"8
com.apple.assistant.device-sync.messaging-channel.rapport
-[ADDeviceResolutionServiceListener initWithInstanceContext:deviceCircleManager:]
ADDeviceResolutionServiceListener
-[ADDeviceResolutionServiceListener setupListener]_block_invoke
-[ADDeviceResolutionServiceListener listener:shouldAcceptNewConnection:]
-[ADDeviceResolutionServiceListener listener:shouldAcceptNewConnection:]_block_invoke
-[ADDeviceResolutionServiceListener logCrossDeviceRequestLink:halId:]
-[ADDeviceResolutionServiceListener logCrossDeviceCommandStarted:action:]
-[ADDeviceResolutionServiceListener logCrossDeviceCommandEnded:action:actionResult:homeKitTarget:contextProximityPairs:]
-[ADDeviceResolutionServiceListener _logAFAnalyticsCrossDeviceCommandHandledEventWithResult:halActionResult:contextProximityPairs:]
-[ADDeviceResolutionServiceListener logCrossDeviceCommandFailed:action:reason:]
-[ADDeviceResolutionServiceListener getContextAndProximitySnapshotForCurrentRequestForDeviceUnits:serviceContexts:completion:]
@16@?0@"AFServiceDeviceContext"8
@16@?0@"SVDDeviceUnit"8
-[ADDeviceResolutionServiceListener getContextAndProximitySnapshotForCurrentRequestForDeviceUnits:serviceContexts:completion:]_block_invoke_3
@"SVDDeviceUnit"16@?0@"AFPeerContentTuple"8
-[ADDeviceResolutionServiceListener getAllReachableDevicesWithCompletion:]_block_invoke_2
@"NSDictionary"16@?0@"SVDCapability"8
v32@?0@"NSString"8@"NSArray"16^B24
v16@?0@"<SVDDeviceUnitMutating>"8
-[ADSiriTetherListener init]
-[ADSiriTetherListener listen]_block_invoke
-[ADSiriTetherListener _handleNewConnection:]
-[ADSiriTetherListener _handleNewConnection:]_block_invoke
-[ADSpeechPlaybackSimulator startPlaybackWithURL:narrowBand:dictation:completion:]
com.apple.assistant.audio-session-coordination
com.apple.assistant.audio-session-coordination.assertion-coordinator.local
com.apple.assistant.audio-session-coordination.assertion-coordinator.remote
v16@?0@"<AFAudioSessionCoordinationSystemInfoMutating>"8
-[ADAudioSessionCoordinator initWithInstanceContext:delegate:]
Initialization
-[ADAudioSessionCoordinator initWithInstanceContext:delegate:]_block_invoke
-[ADAudioSessionCoordinator acquireAudioSessionAssertionWithContext:relinquishmentHandler:]
-[ADAudioSessionCoordinator acquireAudioSessionAssertionWithContext:relinquishmentHandler:]_block_invoke
v16@?0@"<AFAssertionContextMutating>"8
-[ADAudioSessionCoordinator acquireAudioSessionAssertionWithContext:relinquishmentHandler:]_block_invoke_2
-[ADAudioSessionCoordinator hasActiveAudioSessionAssertions]
@16@?0@"NSArray"8
v24@?0@"NSArray"8@"NSArray"16
v16@?0@"<AFAudioSessionCoordinationSnapshotMutating>"8
-[ADAudioSessionCoordinator getSnapshotWithCompletion:]_block_invoke
-[ADAudioSessionCoordinator handleWillSetAudioSessionActive:]
-[ADAudioSessionCoordinator handleDidSetAudioSessionActive:]
-[ADAudioSessionCoordinator _acquireRemoteAssertionForSenderID:reason:effectiveDate:expirationDuration:error:]
Sender ID is nil.
senderID
senderName
isRemote
-[ADAudioSessionCoordinator _acquireRemoteAssertionForSenderID:reason:effectiveDate:expirationDuration:error:]_block_invoke
B20@?0@"<AFAssertion>"8B16
-[ADAudioSessionCoordinator _relinquishRemoteAssertionForSenderID:reason:effectiveDate:error:]
-[ADAudioSessionCoordinator _relinquishRemoteAssertionForSenderID:reason:effectiveDate:error:]_block_invoke_2
-[ADAudioSessionCoordinator fetchAndUpdateMediaRemoteRouteIdentifierForReason:]
-[ADAudioSessionCoordinator fetchAndUpdateMediaRemoteRouteIdentifierForReason:]_block_invoke
-[ADAudioSessionCoordinator fetchAndUpdateMediaRemoteGroupIdentifierForReason:]
-[ADAudioSessionCoordinator fetchAndUpdateMediaRemoteGroupIdentifierForReason:]_block_invoke
-[ADAudioSessionCoordinator assertionCoordinator:didAddAssertion:isFirstAssertion:]
isFirst
-[ADAudioSessionCoordinator assertionCoordinator:didActivateAssertion:isFirstAssertion:]
-[ADAudioSessionCoordinator assertionCoordinator:didDeactivateAssertion:isLastAssertion:]
isLast
-[ADAudioSessionCoordinator assertionCoordinator:didRemoveAssertion:isLastAssertion:]
-[ADAudioSessionCoordinator mediaRemoteDeviceInfoRouteIdentifierDidChange:]
Notification (Optimistic)
Notification
-[ADAudioSessionCoordinator mediaRemoteDeviceInfoGroupIdentifierDidChange:]
-[ADAudioSessionCoordinator _invalidate]
Invalidation
-[ADAudioSessionCoordinator _addDeviceIDToKeepAliveList:reason:]
-[ADAudioSessionCoordinator _removeDeviceIDFromKeepAliveList:reason:]
-[ADAudioSessionCoordinator _resetKeepAliveListForReason:]
-[ADAudioSessionCoordinator _handleWillSetAudioSessionActive:]
-[ADAudioSessionCoordinator _handleDidSetAudioSessionActive:]
-[ADAudioSessionCoordinator _updateHomeKitRoomName:reason:]
-[ADAudioSessionCoordinator _updateHomeKitMediaSystemIdentifier:reason:]
-[ADAudioSessionCoordinator _updateMediaRemoteGroupIdentifier:reason:]
-[ADAudioSessionCoordinator _updateMediaRemoteRouteIdentifier:reason:]
-[ADAudioSessionCoordinator _updateCurrentOrUpNextDateInterval:reason:]
-[ADAudioSessionCoordinator _handleUpdatedLocalSystemInfoForReason:]
-[ADAudioSessionCoordinator _handleUpdatedCurrentOrUpNextDateIntervalForReason:]
-[ADAudioSessionCoordinator _beginAudioSessionOnInRangeRemoteDevicesForReason:effectiveDate:expirationDuration:]
-[ADAudioSessionCoordinator _keepAudioSessionAliveOnRemoteDevicesForReason:expirationDuration:]
-[ADAudioSessionCoordinator _endAudioSessionOnOutOfRangeRemoteDevicesForReason:effectiveDate:]
-[ADAudioSessionCoordinator _endAudioSessionOnAllRemoteDevicesForReason:effectiveDate:]
-[ADAudioSessionCoordinator _startHeartBeatWithEffectiveDate:]
com.apple.assistant.audio-session-coordination.heart-beat
-[ADAudioSessionCoordinator _startHeartBeatWithEffectiveDate:]_block_invoke
-[ADAudioSessionCoordinator _stopHeartBeat]
-[ADAudioSessionCoordinator _heartBeatFired]
Heart Beat
-[ADAudioSessionCoordinator _handleAddedLocalAssertion:isFirst:]
Local Assertion Addition
-[ADAudioSessionCoordinator _handleAcquiredLocalAssertion:isFirst:]
Local Assertion Activation
-[ADAudioSessionCoordinator _handleRelinquishedLocalAssertion:isLast:]
Local Assertion Deactivation
-[ADAudioSessionCoordinator _handleRemovedLocalAssertion:isLast:]
Local Assertion Removal
-[ADAudioSessionCoordinator _handleUpdatedLocalAssertionsForReason:pendingAssertions:activeAssertions:]
-[ADAudioSessionCoordinator _handleAcquiredRemoteAssertion:isFirst:]
-[ADAudioSessionCoordinator _handleRelinquishedRemoteAssertion:isLast:]
inactive
going inactive
going active
active
open_interval
first_byte_read_interval
attempt_count
metrics_count
ping_mean
ping_count
unacknowledged_ping_count
subflow_count
connected_subflow_count
primary_subflow_iface
primary_subflow_switch_count
connectionMethodName
connectionEdgeIDName
connectionEdgeType
connectionFallbackReason
tuscanyConnectionDelay
tcp_info_metrics
AssistantDomains
AssistantFirstUnlockRestrictedDomains
AssistantLockRestrictedDomains
AssistantControlCenterLockRestrictedDomains
AssistantSyncAnchorKeys
AssistantManagedStorageDomains
AssistantClearsDomainObjects
AssistantMaintenance
AssistantRequiresBootMaintenance
-[ADBundleService _parseInfoDictionary:]
v32@?0@"SAGenericCommand"8@"NSArray"16@"NSError"24
-[ADBundleService clearDomainObjects]
v24@?0@"ADSyncChunkInfo"8@?<v@?B>16
-[ADBundleService resetExternalResources]
-[ADBundleService resetExternalResources]_block_invoke
Path
Clears Domain Objects
ping
pong
ADSyncFlagManagerQueue
sync_flag
-[ADSyncFlagManager _setSyncNeededFlagsForKeys:]
-[ADDeviceSyncTimerConsumer prepareForDeviceWithIdentifier:]
-[ADDeviceSyncTimerConsumer finalizeForDeviceWithIdentifier:]
-[ADDeviceSyncTimerConsumer preferredPullingModeForDeviceWithIdentifier:fromGeneration:toGeneration:]
-[ADDeviceSyncTimerConsumer getGenerationForDeviceWithIdentifier:completion:]
-[ADDeviceSyncTimerConsumer getGenerationForDeviceWithIdentifier:completion:]_block_invoke
v16@?0@"AFClockItemStorage"8
-[ADDeviceSyncTimerConsumer applyIncrementalChanges:fromDeviceWithIdentifier:]
-[ADDeviceSyncTimerConsumer applySnapshot:fromDeviceWithIdentifier:]
-[ADDeviceSyncTimerConsumer applySnapshot:fromDeviceWithIdentifier:]_block_invoke
-[AFSiriRequest(ADShowNextEventRequestHandler) _ad_handleShowNextEventRequestWithCompletionHandler:]
B32@?0@"EKEvent"8Q16^B24
-[AFShowNextEventRequest(ADShowNextEventRequestHandler) _selectedCalendarsForEventStore:]
EKEventStore
initEKEventStore_block_invoke
ADShowNextEventRequestHandler.m
classEKEventStore
/System/Library/Frameworks/EventKit.framework/EventKit
EventKitLibrary
/System/Library/PrivateFrameworks/CalendarFoundation.framework/CalendarFoundation
CalendarFoundationLibrary
CalDateRange
initCalDateRange_block_invoke
classCalDateRange
EKPreferences
initEKPreferences_block_invoke
classEKPreferences
com.apple.alarm.label
com.apple.siri.corrections
com.apple.homekit.name
com.apple.siri.applications
com.apple.siri.appIntentSupportPolicyAndVocab
com.apple.siri.calendar.systemsetting
com.apple.siri.client.state.DynamiteClientState
com.apple.media.entities
com.apple.siri.appIntentSupportPolicyAndVocab.nano
com.apple.siri.surfstatus
com.apple.siri.parsecContext
com.apple.reminder.list.name
com.apple.siri.voice
com.apple.siri.voice.resource
com.apple.icloud.fmip
com.apple.maps
com.apple.siri.ParsecSubscriptionServiceSupport
com.apple.geoservices.siri_data_changed
com.apple.aps.assistantd.fmip
com.apple.icloud.fmip.voiceassistantsync
v16@?0@"NSSet"8
ADSetSyncNeededFlagForReason
registered_applications_changed
address_book
locale_change
siri_kit_app_vocabulary
dynamite_token_change
correction_profiles_change
surf_status_change
parsec_context_change
voice_assets
subcscirption_status
isPlaceholder
ADSyncNotificationShouldBeFilteredForReason
isForcedUpdate
updated
removed
Correction:
B24@?0r*8@"NSObject<OS_xpc_object>"16
B24@?0Q8@"NSObject<OS_xpc_object>"16
session_did_finish_timestamp
ADFMIPListener
-[ADFMIPListener connection:didReceivePublicToken:]
-[ADFMIPListener connection:didReceiveIncomingMessage:]
%@%s
.siri_data_changed
com.apple.chatkit.groups
com.apple.media.podcasts
CKPersistentStorageKeysAndValuesUpdated.
synched
CKPersistentStorageKeysRemoved.
AppleDatePreferencesChangedNotification
com.apple.LaunchServices.applicationRegistered
com.apple.LaunchServices.applicationUnregistered
MPStoreClientTokenDidChangeNotification
siri_settings_did_change
__ABDataBaseChangedByOtherProcessNotification
ABDatabaseChangedExternallyNotificationPriv
ABDistributedDatabaseChangedNotificationPriv
PKPeerPaymentRegistrationStatusChangedNotification
com.apple.parsecd.bag
com.apple.VideoSubscriberAccount.DidRegisterSubscription
Safety-net end-of-session sync
requested_by_server
sync_promise
sync_timestamp
ADHomeKitServiceTargetQueue
v24@?0@"NSError"8@"NSDictionary"16
B24@?0@"ADDictationSession"8^B16
v32@?0@"ADDictationSession"8Q16^B24
transport type
Rapport
Bluetooth
Wifi
Cloud
-[ADCommandCenter(RemoteExecute) executeCommand:fromPeer:remoteExecutionInfo:reply:]
-[ADCommandCenter(RemoteExecute) executeCommand:fromPeer:remoteExecutionInfo:reply:]_block_invoke_2
-[ADCommandCenter(RemoteExecute) executeCommand:fromPeer:remoteExecutionInfo:reply:]_block_invoke
-[ADCommandCenter(RemoteExecute) _remoteExecute_remoteDeviceExecuteCommand:executionContext:completion:]
-[ADCommandCenter(RemoteExecute) _remoteExecute_remoteDeviceExecuteCommand:onDeviceForAssistantId:executionContext:completion:]
-[ADCommandCenter(RemoteExecute) _remoteExecute_remoteDeviceExecuteCommand:onPeer:allowsRelay:throughProxyDevice:executionContext:completion:]
-[ADCommandCenter(RemoteExecute) _remoteExecute_remoteDeviceExecuteCommand:onPeer:allowsRelay:throughProxyDevice:executionContext:completion:]_block_invoke
-[ADCommandCenter(RemoteExecute) _remoteExecute_remoteDeviceExecuteSerializedCommand:onSpecifiedDeviceTypes:preferredMessagingOption:executionContext:completion:]
-[ADCommandCenter(RemoteExecute) _remoteExecute_remoteDeviceExecuteSerializedCommand:onSpecifiedDeviceTypes:preferredMessagingOption:executionContext:completion:]_block_invoke
v32@?0@"ADPeerInfo"8Q16^B24
-[ADCommandCenter(RemoteExecute) _remoteExecute_remoteDeviceExecuteSerializedCommand:onDeviceForAssistantId:executionContext:completion:]
-[ADCommandCenter(RemoteExecute) _remoteExecute_remoteDeviceExecuteSerializedCommand:onDeviceForAssistantId:executionContext:completion:]_block_invoke
-[ADCommandCenter(RemoteExecute) _remoteExecute_remoteDeviceExecuteSerializedCommand:onPeer:allowsRelay:executionContext:completion:]
-[ADCommandCenter(RemoteExecute) _remoteExecute_remoteDeviceExecuteSerializedCommand:onPeer:allowsRelay:executionContext:completion:]_block_invoke
-[ADCommandCenter(RemoteExecute) _saExecuteOnRemoteRequest:executionContext:completion:]
-[ADCommandCenter(RemoteExecute) _saExecuteOnRemoteRequest:executionContext:completion:]_block_invoke
-[ADCommandCenter(RemoteExecute) _remoteExecute_shouldSendCommandToPrimaryUser:]
B24@?0@"ADPeerInfo"8@"NSDictionary"16
-[ADCommandCenter(RemoteExecute) _startRemoteRequest:onPeer:withContext:completion:]
-[ADCommandCenter(RemoteExecute) startRemoteRequest:onTargetDevice:completion:]_block_invoke
iPhone
iPad
Watch
requestBegin
requestEnd
postSpeechCapture
ADServiceError
Domains
First Unlock Restricted Commands
Control Center Lock Restricted Commands
Managed Storage Domains
Sync Keys
Lock Restricted Commands
com.apple.assistant.analytics.service
-[ADAnalyticsService init]
-[ADAnalyticsService managedConfigurationEffectiveSettingsChanged]
-[ADAnalyticsService checkForMetricsUploadProblem]
-[ADAnalyticsService checkForMetricsUploadProblem]_block_invoke_2
-[ADAnalyticsService checkForMetricsUploadProblem]_block_invoke
analytics_deliverability
upload_stuck
v24@?0Q8@"NSError"16
-[ADAnalyticsService stageEvents:completion:]_block_invoke
B24@?0@"AFAnalyticsEvent"8@"NSDictionary"16
-[ADAnalyticsService boostAllConnections:]
v28@?0@"<AFAnalyticsServiceDelegate>"8i16@?<v@?>20
-[ADAnalyticsService boostAllConnections:]_block_invoke_3
-[ADAnalyticsService boostAllConnections:]_block_invoke_2
-[ADAnalyticsService storeGenericInstrumentation:completion:]
-[ADAnalyticsService writeGenericInstrumentation:completion:]
-[ADAnalyticsService _writeGenericInstrumentation:completion:]_block_invoke_2
-[ADAnalyticsService _publishEventsToObserver:completion:]_block_invoke_2
SiriAnalytics.db
-[ADAnalyticsService _executeDelegateBlockOnAllConnections:completion:]_block_invoke
v20@?0@"<AFAnalyticsServiceDelegate>"8i16
-[ADAnalyticsService _processStagedEvents]
-[ADAnalyticsService _processStagedEvents]_block_invoke
-[ADAnalyticsService _suspendEventsStaging]
-[ADAnalyticsService _resumeEventsStaging]
-[ADAnalyticsService _beginEventsFuzzingWithStartTime:]
-[ADAnalyticsService _endEventsFuzzingWithEndTime:]
-[ADAnalyticsService _endEventsFuzzingWithEndTime:]_block_invoke
-[ADAnalyticsService _linkStoreForSysdiagnose]
-[ADAnalyticsService _linkStoreForSysdiagnose]_block_invoke
-[ADAnalyticsService _unlinkStoreForSysdiagnose]
-snoozed
-[ADUserNotificationServiceProvider _startMonitoringUnlockActivity]_block_invoke
v32@?0@"FBSDisplayLayoutMonitor"8@"FBSDisplayLayout"16@"FBSDisplayLayoutTransitionContext"24
-[ADUserNotificationServiceProvider _snoozeNotifications]_block_invoke
-[ADUserNotificationServiceProvider postNotificationRequest:options:responseHandler:]_block_invoke
-[ADUserNotificationServiceProvider userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:]
-[ADUserNotificationServiceProvider userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:]_block_invoke_2
-[ADUserNotificationServiceProvider userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:]_block_invoke
-[ADPushContextReceiver sendContext:]
-[ADNotifyAndPushContextCollector _getContextForAppInfo:completion:]
Getting
-[ADNotifyAndPushContextCollector _invokeAllCompletionsWithError]
-[AFSiriRequest(ADAceDomainSignalRequestHandler) _ad_handleAceDomainSignalRequestWithCompletionHandler:]
-[SABaseClientBoundCommand(ADAceDomainSignalRequestHandler) _ad_handleAceDomainSignalRequest:completionHandler:]
com.apple.NanoAlarm
com.apple.NanoCalendar
com.apple.SessionTrackerApp
com.apple.NanoMaps
com.apple.NanoSettings
com.apple.private.NanoTimer
-[ADAceDomainSignalRequestHandler handleSiriRequest:deliveryHandler:completionHandler:]
ADAssistantDataManageriTunesStoreFrontIdentifierDidChangeNotification
%@-%ld-%ld-%ld
ADAssistantDataManager
v16@?0@"SAPerson"8
-[ADAssistantDataManager initWithInstanceContext:]_block_invoke_8
-[ADAssistantDataManager requestAssistantDataUpdate]
-[ADAssistantDataManager getMeCardsWithCompletion:]_block_invoke
-[ADAssistantDataManager profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:]
-[ADAssistantDataManager addressBookManagerDidUpdateData:meCard:]_block_invoke
-[ADAssistantDataManager contextCollector:didChangeDisplayScale:]
-[ADAssistantDataManager _voiceAssetsUpdated:]
-[ADAssistantDataManager _currentLocaleDidChange:]
-[ADAssistantDataManager _locationRestrictionDidChange:]
-[ADAssistantDataManager _storeFrontDidChange:]
-[ADAssistantDataManager _storeFrontDidChange:]_block_invoke_2
-[ADAssistantDataManager _systemTimeZoneDidChange:]
-[ADAssistantDataManager _outputVoiceDidChange:]
-[ADAssistantDataManager _countryCodeDidChange:]
-[ADAssistantDataManager _censorSpeechDidChange:]
-[ADAssistantDataManager _generateAssistantData]
-[ADAssistantDataManager _notifyObserversOfDictationHIPAAMDMStatus]_block_invoke_2
-[ADAssistantDataManager _notifyObserversOfDictationHIPAAMDMStatus]_block_invoke
-[ADAssistantDataManager _updateDictationAllowedStatus]_block_invoke_2
-[ADAssistantDataManager _updateDictationAllowedStatus]_block_invoke
ADAssistantDataManager.m
called from non-main thread
-[ADAssistantDataManager _onMainThreadUpdateCountryCodeWithCountryConfiguration:completion:]
-[ADAssistantDataManager _updateVoice:]_block_invoke_2
-[ADAssistantDataManager _updateVoice:]_block_invoke
v24@?0@"VSVoiceAsset"8@?<v@?B>16
v16@?0@"VSVoiceAsset"8
-[ADAssistantDataManager _updateItunesStoreIdentifier:]
-[ADAssistantDataManager _updateVoiceOverStatus:]
-[ADAssistantDataManager localMeCardDidUpdate:]_block_invoke
DisableFBFForUEI
-[ADAnalyticsFBFDeliveryInfrastructure deliverWrappedEvent:]
CKKnowledgeStore
/System/Library/PrivateFrameworks/CoreKnowledge.framework/CoreKnowledge
ADSiriConnectionRemoteErrorDomain
ADSiriConnectionRemote
-[ADSiriConnectionRemote init]
-[ADSiriConnectionRemote _establishPeerConnection]
-[ADSiriConnectionRemote _establishPeerConnection]_block_invoke
-[ADSiriConnectionRemote _tryToReadPeerStreamHeaderFromData:needsReconnect:]
B40@?0@"NSObject<OS_dispatch_data>"8Q16r^v24Q32
X-Companion-Type
X-Companion-Build
-[ADSiriConnectionRemote _fallbackWithSafetyNet]
-[ADSiriConnectionRemote _restartConnectionProviders]
-[ADSiriConnectionRemote _peerConnectionFailure]
-[ADSiriConnectionRemote _peerConnectionDidEnd]
-[ADSiriConnectionRemote peerStreamConnection:failedWithError:]
-[ADSiriConnectionRemote peerStreamConnectionHasIncomingPeer:]
-[ADSiriConnectionRemote peerStreamConnectionHasIncomingPeer:]_block_invoke
establishing
have active
-[ADSiriConnectionRemote peerStreamConnection:requestMetrics:]_block_invoke
-[ADSiriConnectionRemote _establishNetworkConnectionToURL:connectionId:withPOP:countAgainstFallbacksAllowed:]
ADSiriConnectionRemote.m
Programming error: network stream provider should support initial payload.
-[ADSiriConnectionRemote _establishNetworkConnectionToURL:connectionId:withPOP:countAgainstFallbacksAllowed:]_block_invoke
-[ADSiriConnectionRemote _didEstablishNetworkConnectionForProvider:initialPayload:ofLength:error:]
-[ADSiriConnectionRemote _closeNetworkConnection]
-[ADSiriConnectionRemote _networkConnectionFailure]
-[ADSiriConnectionRemote _networkConnectionDidEnd]
-[ADSiriConnectionRemote _setupStaleNetworkTimerForProvider:]_block_invoke
-[ADSiriConnectionRemote connectionProvider:receivedError:]
-[ADSiriConnectionRemote connectionProvider:receivedError:]_block_invoke
-[ADSiriConnectionRemote _waitForPeerData]_block_invoke
v24@?0@"NSObject<OS_dispatch_data>"8@"NSError"16
-[ADSiriConnectionRemote _peerConnectionReceivedData:]
-[ADSiriConnectionRemote _peerReadStreamErrorOccurred:]
-[ADSiriConnectionRemote _writeDataToPeer:]_block_invoke
-[ADSiriConnectionRemote _waitForNetworkData]_block_invoke
-[ADSiriConnectionRemote _networkConnectionReceivedData:]
-[ADSiriConnectionRemote _networkConnectionDidOpen]
-[ADSiriConnectionRemote _networkConnectionErrorOccurred:]
-[ADSiriConnectionRemote _writeDataToNetwork:]_block_invoke
-[ADSiriConnectionRemote _unregisterForSleepNotification]
com.apple.assistant.queue-monitor
-[ADQueueMonitor beginMonitoring]
-[ADQueueMonitor endMonitoring]
-[ADQueueMonitor _addQueue:heartBeatInterval:timeoutInterval:timeoutHandler:]
-[ADQueueMonitor _beginMonitoring]
-[ADQueueMonitor _endMonitoring]
-[_ADQueueObserver startWithQueue:]
com.apple.assistant.queue-observer.%s
-[_ADQueueObserver stop]
-[_ADQueueObserver timeoutDetected]
UUID = %@
properties = %@
ADDeviceSyncItem::UUID
ADDeviceSyncItem::properties
-[SADomainObject(ADMessageTransformer) ad_OTTModelRepresentation]
-[SABaseClientBoundCommand(ADMessageTransformer) ad_OTTRequestRepresentation]
+[AFRequestInfo(ADAnnouncementRequestBuilder) requestInfoFromAnnouncementRequest:previousRequest:synchronousBurstIndex:]
+[AFRequestInfo(ADAnnouncementRequestBuilder) _announceNotificationRequestInfoFromNotificationRequest:previousRequest:synchronousBurstIndex:]
-[ADSyncVerificationHelper handleSyncChunkInfo:withSyncInfo:completion:]
%lld
-[ADIntentVocabularyUpdateConnection initWithBundleID:path:]
-[ADIntentVocabularyUpdateConnection recordVocabulary:forIntentSlot:withValidationCompletion:]
-[ADIntentVocabularyUpdateConnection recordVocabulary:forIntentSlot:withValidationCompletion:]_block_invoke_2
-[ADIntentVocabularyUpdateConnection recordVocabulary:forIntentSlot:withValidationCompletion:]_block_invoke
Synapse.%@#%@
-[ADIntentVocabularyUpdateConnection _triggerUserVocabularySyncAttributingApp:vocabType:]
com.apple.assistant.app_vocabulary
-[ADIntentVocabularyUpdateConnection askToSyncSlot:]_block_invoke
-[ADIntentVocabularyUpdateConnection deleteEverything]
-[ADIntentVocabularyUpdateConnection deleteEverything]_block_invoke
RESET
-[ADIntentVocabularyUpdateConnection requestSiriAuthorization:]
com.apple.assistant.home-announcement-service
-[ADRetryManager beginRetryableRequest:]
-[ADRetryManager endRetryableRequestForCommand:]
-[ADRetryManager endRetryableRequestForCommandAceId:refId:]
-[ADRetryManager setLastReceivedCommand:]
-[ADRetryManager _objectsToRemapFromRefId:toRefId:retryFullRequest:commandsToRetry:]
for full request
restart request
-[ADRetryManager objectsToRetry]
+[AFSiriAnnouncementRequestCapabilityManager _classForPlatform:]
+[AFSiriAnnouncementRequestCapabilityManager supportedAnnouncementTypesForBundleId:onPlatform:]
-[AFSiriAnnouncementRequestCapabilityManager provider:eligibleAnnouncementRequestTypesChanged:]
-[AFSiriAnnouncementRequestCapabilityManager provider:availableAnnouncementRequestTypesChanged:]
com.apple.NanoHome
com.apple.NanoReminders
LSApplicationRecord
Class getLSApplicationRecordClass(void)_block_invoke
AFSiriAnnouncementRequestCapabilityManager.m
void *CoreServicesLibrary(void)
/System/Library/Frameworks/CoreServices.framework/CoreServices
/System/Library/Frameworks/CoreServices.framework/Contents/MacOS/CoreServices
INAppInfo
Class getINAppInfoClass(void)_block_invoke
appLaunch-Launch
appLaunch-DeviceDisambiguation
media-PlayContent
media-DeviceDisambiguation
resumeMedia
skipContent
skipTime
seekTime
setRepeatState
setSubtitleState
setShuffleState
setAudioLanguage
whatDidTheySay
QuickStop.QuickStopCompleted-confirmation
QuickStop.QuickStopCompleted-None
QuickStop.QuickStopCompleted-TTS
QuickStop.QuickStopCompleted-Announcement
SAAlarmDismiss.CommandSucceeded
SAAlarmSnooze.CommandSucceeded
QuickStop.QuickStopCompleted-Timer
SATimerDismiss.CommandSucceeded
v32@?0@"AFDeviceContext"8@"NSNumber"16^B24
v32@?0@"NSUUID"8Q16^B24
ADMotionManagerInternalQueue
ADMotionManagerExternalQueue
-[ADMotionManager init]_block_invoke
-[ADMotionManager startUpdatingMotionActivityForReason:completion:]
-[ADMotionManager startUpdatingMotionActivityForReason:completion:]_block_invoke
-[ADMotionManager startUpdatingMotionActivityForReason:completion:]_block_invoke_2
v16@?0@"CMMotionActivity"8
-[ADMotionManager stopUpdatingMotionActivityForReason:completion:]
-[ADMotionManager stopUpdatingMotionActivityForReason:completion:]_block_invoke
-[ADMotionManager motionActivity]
-[ADMotionManager motionConfidence]
-[ADMotionManager isDriving]
ClientConnection
-[ADClientConnection initWithXPCConnection:]
-[ADClientConnection initWithXPCConnection:]_block_invoke
client_connection
long_lived_connection
long_lived_duration
-[ADClientConnection dealloc]
Client Connection (pid = %d) Deallocated
-[ADClientConnection connectionDisconnected]
Client Connection (pid = %d) Disconnected
-[ADClientConnection _updateSpeechRequestOptions:]
Request Options Specified Release Audio Session On Recording Completion
-[ADClientConnection _setBluetoothDevice:]
-[ADClientConnection _addSpeechCapturingContext:]
-[ADClientConnection _removeAllSpeechCapturingContextsForReason:]
processIdentifier
-[ADClientConnection _addAudioSessionAssertion:]
-[ADClientConnection _removeAllAudioSessionAssertionsForReason:]
-[ADClientConnection adRequestDidReceiveCommand:reply:]_block_invoke
-[ADClientConnection _handleRequestCompletedWithUUID:error:]
-[ADClientConnection adRequestDidCompleteWithSuccess:error:]
-[ADClientConnection adRequestDidCompleteWithSuccess:error:]_block_invoke
-[ADClientConnection adRequestEncounteredIntermediateError:]
-[ADClientConnection adStartUIRequestWithText:completion:]_block_invoke_2
-[ADClientConnection adRequestRequestedOpenApplicationWithBundleID:URL:completion:]_block_invoke_2
-[ADClientConnection adRequestRequestedOpenURL:completion:]_block_invoke_2
-[ADClientConnection adGetBulletinContext:]_block_invoke_2
-[ADClientConnection adTextToSpeechIsMuted]
-[ADClientConnection adWantsToCacheImage:]_block_invoke_2
-[ADClientConnection _registerForRingerStateNotification]
-[ADClientConnection _computeShouldSpeak]
-[ADClientConnection _updateShouldSpeak]
-[ADClientConnection adSpeechRecordingWillBeginWithInputAudioPowerXPCWrapper:context:]_block_invoke
ClientConnection speechRecordingDidBegin
-[ADClientConnection adSpeechRecordingDidBeginOnAVRecordRoute:audioSessionID:bluetoothDevice:sessionRequestUUID:dictationOptions:context:]_block_invoke
-[ADClientConnection adSpeechRecordingDidChangeAVRecordRoute:bluetoothDevice:isDucking:isTwoShot:speechEndHostTime:context:]_block_invoke
speechRecordingDidEnd
-[ADClientConnection adSpeechRecordingDidEndWithContext:]_block_invoke
ClientConnection speechRecordingDidCancel
-[ADClientConnection adSpeechRecordingDidCancelWithContext:]_block_invoke
ClientConnection speechRecordingDidFail
-[ADClientConnection adSpeechRecordingDidFail:context:]_block_invoke
-[ADClientConnection adSpeechRecordingWillStopWithSignpostID:]_block_invoke
-[ADClientConnection adSpeechRecognized:usingSpeechModel:sessionUUID:]_block_invoke
-[ADClientConnection adSpeechRecognizedPartialResult:]_block_invoke
-[ADClientConnection adSpeechRecognitionDidFail:sessionUUID:]_block_invoke
-[ADClientConnection adSpeechRecordingDidDetectStartPointWithContext:]_block_invoke
-[ADClientConnection adSpeechRecordingPerformTwoShotPromptWithType:context:completion:]_block_invoke
v32@?0d8d16@"NSError"24
-[ADClientConnection audioSessionController:didReceiveAudioSessionInterruptionNotificationWithUserInfo:]
-[ADClientConnection audioSessionController:didReceiveAudioSessionRouteChangeNotificationWithUserInfo:]
-[ADClientConnection audioSessionController:didReceiveAudioSessionMediaServicesWereLostNotificationWithUserInfo:]
-[ADClientConnection audioSessionController:didReceiveAudioSessionMediaServicesWereResetNotificationWithUserInfo:]
-[ADClientConnection audioSessionController:didReceiveAudioSessionOwnerLostNotification:]
-[ADClientConnection audioSessionController:didReceiveAudioSessionOwnerResetNotification:]
-[ADClientConnection bluetoothDevice:deviceInfoDidChangeFrom:to:]
-[ADClientConnection bluetoothDevice:headphoneInEarDetectionStateDidChangeFrom:to:]
-[ADClientConnection bluetoothDevice:headphoneInEarDetectionStateDidChangeFrom:to:]_block_invoke
inSpokenNotification
-[ADClientConnection bluetoothDevice:headphoneListeningModeDidChangeFrom:to:]
-[ADClientConnection bluetoothDeviceDidInvalidate:]
Client Connection (pid = %d) Requested Force Audio Session Inactive
-[ADClientConnection willPresentUIWithReply:]
com.apple.assistant.client-connection.ui-presentation
-[ADClientConnection didDismissUI]
-[ADClientConnection setConfiguration:]
-[ADClientConnection endSession]
ClientConnection endSession
Client Connection (pid = %d) Requested End Session
-[ADClientConnection willPresentUsefulUserResultAtDate:]
-[ADClientConnection willPresentUsefulUserResultAtDate:]_block_invoke
-[ADClientConnection _setRequestCompletion:]
-[ADClientConnection startRequestWithInfo:completion:]
-[ADClientConnection startRecordingForPendingSpeechRequestWithOptions:requestId:completion:]
ClientConnection startRecordingForPendingSpeechRequest
-[ADClientConnection startRecordingForPendingSpeechRequestWithOptions:requestId:completion:]_block_invoke_2
-[ADClientConnection continuePendingSpeechRequestWithId:fromTimestamp:]
-[ADClientConnection updateSpeechOptions:]
-[ADClientConnection cancelRequestForReason:withError:]
ClientConnection cancelRequest
-[ADClientConnection rollbackRequest]
-[ADClientConnection cancelSpeech]
-[ADClientConnection stopSpeechWithOptions:]
v20@?0I8@"NSError"12
-[ADClientConnection clearContext]
-[ADClientConnection rollbackClearContext]
-[ADClientConnection reportIssueForType:subtype:context:]
Large Data Returned to sender
-[ADClientConnection _performCommandDictionary:forBundleIdentifier:reply:]_block_invoke_2
SA%@
-[ADClientConnection _performTaskCommandDictionary:forBundleIdentifier:reply:]_block_invoke_2
-[ADClientConnection _fetchAppContextForApplicationInfo:reply:]_block_invoke
-[ADClientConnection listener:shouldAcceptNewConnection:]
-[ADClientConnection _continuePendingSpeechRequestFromTimestamp:]
-[AceObject(ADClientConnectionSupport) adClientConnection_enterRequestGroup:]
-[AceObject(ADClientConnectionSupport) adClientConnection_enterRequestGroup:]_block_invoke
-[SAStructuredDictationItem(StructuredDictation) ad_transcriptionResults]
DictationConnection
-[ADDictationConnection initWithServiceDelegate:]
ADDictationConnection
com.apple.keyboard.isOnScreen
-[ADDictationConnection initWithServiceDelegate:]_block_invoke
-[ADDictationConnection dealloc]
Dictation Connection Disconnected
Dictation Options Specified Release Audio Session On Recording Completion
client
%@ %p
-[ADDictationConnection _removeAllAudioSessionAssertionsForReason:]
Dictation speechRecordingDidBegin
Dictation speechRecordingDidEnd
Dictation speechRecordingDidCancel
dictation audio recording was cancelled
-[ADDictationConnection adSpeechRecordingDidCancelWithContext:]_block_invoke
Dictation speechRecordingDidFail
-[ADDictationConnection adSpeechRecordingDidFail:context:]_block_invoke
dictation audio recording failed
dictation audio recording failed and an audio file is not being written
-[ADDictationConnection adSpeechRecognized:usingSpeechModel:sessionUUID:]_block_invoke
dictation speech was recognized remotely
dictation speech was recognized remotely and we're not waiting for structured results
-[ADDictationConnection adSpeechRecognizedPartialResult:]_block_invoke
voice search final result was returned
voice search final result result was returned and we're not recording an audio file
-[ADDictationConnection adSpeechRecordingDidRecognizePhrases:utterances:sessionUUID:refId:]_block_invoke
dictation speech was recognized locally
dictation speech was recognized locally and we're not waiting for search results or structured results
dictation structured result was returned
dictation structured result was returned and we're not recording an audio file
-[ADDictationConnection adSpeechRecognitionDidFail:sessionUUID:]
dictation speech recognition failed
-[ADDictationConnection adSpeechLocalRecognitionDidSucceedWithSessionUUID:]
-[ADDictationConnection adSpeechLocalRecognitionDidSucceedWithSessionUUID:]_block_invoke
dictation local speech recognition succeeded
audio file finished writing; file handle: %@; error: %@
dictation is starting
Location
Person
Text
Dictation start
mode
-[ADDictationConnection _dictationWillStartWithLanguageCode:options:speechOptions:xpcconnection:]
-[ADDictationConnection startRequestActivityWithCompletion:]_block_invoke
-[ADDictationConnection _invokeRequestCompletion]
-[ADDictationConnection startRecordingForPendingDictationWithLanguageCode:options:speechOptions:reply:]
-[ADDictationConnection startRecordingForPendingDictationWithLanguageCode:options:speechOptions:reply:]_block_invoke
v16@?0@?<v@?d>8
-[ADDictationConnection startDictationWithLanguageCode:options:speechOptions:]
language-code
dictation is canceling
dictation is stopping
-[ADDictationConnection sendUserSelectedAlternativeDictationLanguageCode:]
Dictation preheat
-[ADDictationConnection preheatForLanguageCode:]
Dictation Preheat Test
Dictation preheatWithRecordDeviceIdentifier
Dictation endSession
Dictation Connection Requested End Session
-[ADDictationConnection startRecordedAudioDictationWithOptions:language:narrowband:forceSampling:]
DictationCC
v32@?0@"NSString"8@"NSString"16@"NSError"24
recorded audio dictation is starting
-[ADDictationConnection _startDictationWithURL:isNarrowBand:language:options:]
Dictation startWithURL
file-based dictation is starting
-[ADDictationConnection reportIssueForError:eventType:context:]
-[ADDictationConnection reportIssueForError:eventType:subtype:context:]
-[ADDictationConnection _updateDictationOptionsForOnDeviceDictation:language:]
-[ADDictationConnection _localSpeechRecognizerSupportingBackground:]
-[ADDictationConnection localSpeechRecognizer:didRecognizeRawEagerRecognitionCandidate:]
-[ADDictationConnection localSpeechRecognizer:didCompletionRecognitionWithStatistics:error:]_block_invoke
-[ADDictationConnection listener:shouldAcceptNewConnection:]
-[ADDictationConnection _continuePendingSpeechRequestFromTimestamp:]
_GetKeyboardIsVisible
CheckPrerecordedConnectionAccess
ModelInfo
ModelType
ADSpeechManagerRootQueue
ADSpeechManagerQueue
-[ADSpeechManager _initWithInstanceContext:]_block_invoke
-[ADSpeechManager _speechRecorder]
-[ADSpeechManager _speechCompressor]
-[ADSpeechManager _currentSpeechCaptureSource]
-[ADSpeechManager _updateSpeechState:]
-[ADSpeechManager _updateRecordRoute:andDeviceIdentifier:]
-[ADSpeechManager _releaseSession]
wasAudioSessionActive
-[ADSpeechManager dictationSessionDidComplete]_block_invoke
-[ADSpeechManager _fetchAssetsForLanaugeOrEnablementNotification:]_block_invoke_2
-[ADSpeechManager _fetchAssetsForLanaugeOrEnablementNotification:]_block_invoke
-[ADSpeechManager _interactiveLocalSpeechRecognizer]
-[ADSpeechManager cancelLocalRecognitionIfActive]_block_invoke
-[ADSpeechManager _cleanUpDelegateInfo]
-[ADSpeechManager _tellDelegateSpeechCanceled]
-[ADSpeechManager _tellDelegateSpeechFailedWithError:]
-[ADSpeechManager _tellDelegateSpeechReceivedLastAudioBufferWithEndpointMode:totalPacketCount:endpointerMetrics:]
-[ADSpeechManager _tellDelegateSpeechFinished]
-[ADSpeechManager _tellDelegateSpeechShouldPreheatWithRecordingInfo:]
-[ADSpeechManager _tellDelegateSpeechRecognitionUpdateWillBegin]
-[ADSpeechManager _tellDelegateSpeechWillBeginWithTimestamp:isFromFile:isAudioPowerUpdateDisabled:]
-[ADSpeechManager _tellDelegateSpeechStartedWithRecordingInfo:]
-[ADSpeechManager _tellDelegateUpdateAudioInfo:]
-[ADSpeechManager _tellDelegateAboutSpeechPackets:atTimestamp:count:]
-[ADSpeechManager _tellDelegateAboutFingerprint:duration:]
-[ADSpeechManager _tellDelegateMusicWasDetected]
-[ADSpeechManager _tellDelegateEndpointWasDelayedForMusic]
-[ADSpeechManager _tellDelegateAboutInputAveragePower:peak:]
-[ADSpeechManager _cancelRecordingWithError:suppressAlert:]
-[ADSpeechManager _lastAudioBufferReceivedWithEndpointMode:totalPacketCount:endpointerMetrics:]
-[ADSpeechManager _recordingStoppedWithError:totalPacketCount:endpointMode:endpointerMetrics:]
-[ADSpeechManager _updateCapturingStateWithOptions:]
-[ADSpeechManager speechCapturingDidStartRecordingSuccessfully:error:withInfo:]
narrowband
farField
continuousListening
shouldHandleCapitalization
detectUtterances
recognitionOverrides
undefined
preferOnlineRecognition
forceOfflineRecognition
secureOfflineOnly
audioSource
vendorId
productId
fieldLabel
inputOrigin
task
-[ADSpeechManager speechCapturingDidStartRecordingSuccessfully:error:withInfo:]_block_invoke_2
unavailable
-[ADSpeechManager speechCapturingDidStartRecordingSuccessfully:error:withInfo:]_block_invoke
-[ADSpeechManager speechCapturingDidReceiveLastAudioBufferWithEndpointMode:totalPacketCount:endpointerMetrics:]
-[ADSpeechManager speechCapturingDidRecordSpeechPackets:atTimestamp:totalPacketCount:]
-[ADSpeechManager speechCapturingDidRequestQuickStop:]
-[ADSpeechManager speechCapturingDidRequestShutdownUI:]
-[ADSpeechManager speechCapturingDidRequestUpdateSiriOutputVolume:]
-[ADSpeechManager speechCapturing:willSetAudioSessionActive:]
-[ADSpeechManager speechCapturing:didSetAudioSessionActive:]
-[ADSpeechManager speechCapturing:didInterruptAudioSession:]
-[ADSpeechManager speechCapturing:didLoseAudioSessionOwnerOrMediaServices:]
-[ADSpeechManager audioSessionCoordinator:prepareAudioSessionWithContext:]
-[ADSpeechManager audioSessionCoordinator:prepareAudioSessionWithContext:]_block_invoke
-[ADSpeechManager audioSessionCoordinator:prepareAudioSessionWithContext:]_block_invoke_2
-[ADSpeechManager audioSessionCoordinator:releaseAudioSessionWithContext:]
-[ADSpeechManager audioSessionCoordinator:releaseAudioSessionWithContext:]_block_invoke
-[ADSpeechManager setDirtySiriOutputVolumeHostTime:]_block_invoke
-[ADSpeechManager localSpeechRecognizer:didRecognizeTokens:]_block_invoke
-[ADSpeechManager localSpeechRecognizer:didProcessAudioDuration:]
-[ADSpeechManager localSpeechRecognizer:didRecognizeRawEagerRecognitionCandidate:]_block_invoke
-[ADSpeechManager localSpeechRecognizer:didRecognizePackage:]_block_invoke
-[ADSpeechManager localSpeechRecognizer:didProduceLoggablePackage:]_block_invoke
-[ADSpeechManager localSpeechRecognizer:didCompletionRecognitionWithStatistics:error:]_block_invoke
+[ADSpeechManager _detectOnDeviceDictationOrchestrationMismatchForLanguage:initialLanguage:eligibleForOnDeviceDictation:modelType:onDeviceRequest:context:]
eventType
offlineDictationStatusMismatch
cachedOfflineDictationStatus
prefsOfflineDictationStatus
installed
highQuality
localRecognitionStartedContext
+[ADSpeechManager _detectOnDeviceDictationOrchestrationMismatchForLanguage:initialLanguage:eligibleForOnDeviceDictation:modelType:onDeviceRequest:context:]_block_invoke
-[ADSpeechManager preheatWithOptions:]
-[ADSpeechManager preheatWithOptions:]_block_invoke
Prepare Audio System
-[ADSpeechManager _prepareAudioSystemWithContext:audioSessionAssertion:completion:]
options
-[ADSpeechManager _prepareAudioSystemWithContext:audioSessionAssertion:completion:]_block_invoke
recordRoute
v16@?0@"<AFSetAudioSessionActiveResultMutating>"8
-[ADSpeechManager _prepareAudioSystemWithContext:audioSessionAssertion:completion:]_block_invoke_2
v16@?0@?<v@?>8
Safety continuation is dropped unexpectedly.
@"NSError"8@?0
-[ADSpeechManager startSpeechCaptureForDictationWithOptions:sessionUUID:secureOfflineOnly:]
-[ADSpeechManager _startCaptureForMode:options:context:]
-[ADSpeechManager _startCaptureForMode:options:context:]_block_invoke
-[ADSpeechManager startRecordedDictationCaptureWithSessionUUID:narrowband:secureOfflineOnly:]_block_invoke
-[ADSpeechManager startSpeechCaptureWithURL:isNarrowBand:isDictation:sessionUUID:]_block_invoke
-[ADSpeechManager startSpeechCaptureWithURL:isNarrowBand:isDictation:sessionUUID:]_block_invoke_2
-[ADSpeechManager cancelSpeechCaptureSuppressingAlert:]_block_invoke
-[ADSpeechManager _stopSpeechCaptureWithOptions:]
-[ADSpeechManager _stopSpeechCaptureWithOptions:]_block_invoke
-[ADSpeechManager endSession]
-[ADSpeechManager endSession]_block_invoke
-[ADSpeechManager endSession]_block_invoke_2
-[ADSpeechManager endSession:completion:]
-[ADSpeechManager _cancelRecordingIfNeededAndEndSessionWhenIdleWithCompletion:]
-[ADSpeechManager _cancelRecordingIfNeededAndEndSessionWhenIdleWithCompletion:]_block_invoke
-[ADSpeechManager _endSessionIfIdle]
-[ADSpeechManager suppressAudioInterruptionEndedNotificationsAndEndSessionIfIdle:]_block_invoke
-[ADSpeechManager setSpeechRecognizedContext:]_block_invoke
-[ADSpeechManager updateSpeechProfilesForReasons:]
assistant_tool
-[ADSpeechManager updateSpeechProfilesForReasons:]_block_invoke
portrait_changed
-[ADSpeechManager _requestSpeechProfileUpdateForLanguages:]_block_invoke
-[ADSpeechManager _dispatchUpdateSpeechProfileForNextLanguage]_block_invoke
-[ADSpeechManager _volumeService]
-[ADSpeechManager _fetchSmartSiriVolume:]
-[ADSpeechManager _updateSiriOutputVolume:completion:]
-[ADSpeechManager _updateSiriOutputVolume:completion:]_block_invoke
-[ADSpeechManager asrBridgeReceivedEagerRecognitionCandidate:rawRecognitionResult:duration:sessionUUID:]_block_invoke
-[ADSpeechManager asrBridgeReceivedFinalResult:speechPackage:sessionUUID:]_block_invoke
-[ADSpeechManager asrBridgeReceivedPartialResult:language:tokens:]_block_invoke
ADSpeechStateInitial
ADSpeechStateStarting
ADSpeechStateRecording
ADSpeechStateStopping
ADSpeechStateCanceling
ADExternalRequestDelayedActionHandler
-[ADExternalNotificationRequestHandler _completeNotificationsWithSuccess:forReason:]
-[ADExternalNotificationRequestHandler _clearTriggerlessUserReplyTimer]
-[ADExternalNotificationRequestHandler _changeCurrentStateToState:]
-[ADExternalNotificationRequestHandler _handleAnnouncementRequest:]
-[ADExternalNotificationRequestHandler _handleAnnounceNotificationRequest:]
Current State
Bundle ID
-[ADExternalNotificationRequestHandler _handleAnnounceNotificationRequest:]_block_invoke_3
v16@?0@"ADAnnounceNotificationRequest"8
-[ADExternalNotificationRequestHandler _handleAnnounceNotificationRequest:]_block_invoke
-[ADExternalNotificationRequestHandler _canAnnounceInCarPlay]
-[ADExternalNotificationRequestHandler _handleAnnounceIncomingCallRequest:]
-[ADExternalNotificationRequestHandler _handleNotification:onPlatform:completion:]
-[ADExternalNotificationRequestHandler _handleNotification:onPlatform:completion:]_block_invoke
-[ADExternalNotificationRequestHandler _handleNotification:onPlatform:completion:]_block_invoke_2
v24@?0q8@"NSError"16
-[ADExternalNotificationRequestHandler _startAnnouncementRequestWithRequestInfo:]_block_invoke_2
-[ADExternalNotificationRequestHandler _startAnnouncementRequestWithRequestInfo:]_block_invoke
-[ADExternalNotificationRequestHandler _startAnnouncementRequest:]
-[ADExternalNotificationRequestHandler _startAnnouncementRequest:]_block_invoke
-[ADExternalNotificationRequestHandler _startRequestDelayManagerIfNeededForRequest:completion:]
v20@?0B8@"ADRequestDelayManager"12
-[ADExternalNotificationRequestHandler _startTimerToResetStateFrom:]_block_invoke
-[ADExternalNotificationRequestHandler _cancelCurrentRequestWithReason:]
-[ADExternalNotificationRequestHandler _cancelCurrentRequestWithReason:]_block_invoke
-[ADExternalNotificationRequestHandler _deactivateNotificationAnnouncementRequestForReason:notification:sourceAppId:platform:completion:]
-[ADExternalNotificationRequestHandler _deactivateCarPlayNotificationAnnouncementRequestForReason:notification:sourceAppId:completion:]
-[ADExternalNotificationRequestHandler _deactivateCarPlayNotificationAnnouncementRequestForReason:notification:sourceAppId:completion:]_block_invoke
-[ADExternalNotificationRequestHandler _withdrawalAnnouncementRequestForNotification:completion:]
-[ADExternalNotificationRequestHandler audioSessionDidEnd]_block_invoke
-[ADExternalNotificationRequestHandler _startTriggerlessFollowupRequestWithRequestDelayManager:delayType:]_block_invoke_2
-[ADExternalNotificationRequestHandler _startTriggerlessFollowupRequestWithRequestDelayManager:delayType:]_block_invoke
-[ADExternalNotificationRequestHandler fetchUnreadNotificationsFromThreadAfterNotificationWithID:completion:]_block_invoke
-[ADExternalNotificationRequestHandler requestLifecycleObserver:requestWillBeginWithInfo:origin:client:]_block_invoke
-[ADExternalNotificationRequestHandler requestLifecycleObserver:requestWasCancelledWithInfo:origin:client:]_block_invoke
-[ADExternalNotificationRequestHandler requestLifecycleObserver:requestDidEndWithInfo:origin:client:]_block_invoke
-[ADExternalNotificationRequestHandler requestDelayManager:interruptedWithType:]
-[ADExternalNotificationRequestHandler requestDelayManager:didStopUnexpectly:]
-[ADExternalNotificationRequestHandler audioPlaybackService:didStartRequest:]_block_invoke
-[ADExternalNotificationRequestHandler notifyObserver:didChangeStateFrom:to:]
-[ADExternalNotificationRequestHandler _adCallStateChangedCallIncoming:]
-[ADSettingsClient fetchSupportedLanguagesWithReply:]
-[ADSettingsClient retrieveAccountMessageDictionariesWithReply:]
com.apple.assistant.siri_settings_did_change
-[ADSettingsClient fetchActiveAccount:]_block_invoke
-[ADSettingsClient setAssistantEnabled:]
-[ADSettingsClient setDictationEnabled:]_block_invoke
-[ADSettingsClient setDictationEnabled:]
-[ADSettingsClient setEnableAssistantLogging:]
Enabling
Disabling
-[ADSettingsClient _killDaemon]
-[ADSettingsClient _shutdownSessionIfIdle]
-[ADSettingsClient _syncDataWithAnchorKeys:forceReset:reason:reply:]
-[ADSettingsClient _syncDataWithAnchorKeys:forceReset:reason:reply:]_block_invoke
v16@?0@"NSNotification"8
-[ADSettingsClient _setSyncVerificationNeededAndFullReportNeeded:shouldPostNotification:completion:]_block_invoke
-[ADSettingsClient disableAndDeleteCloudSyncWithCompletion:]
@"NSData"16@?0@"SVDCapability"8
-[ADSettingsClient getExperimentForConfigurationIdentifier:completion:]_block_invoke
v24@?0@"AFExperiment"8@"NSError"16
v16@?0@"NSUUID"8
-[ADSettingsClient handleCommand:completion:]
-[ADSettingsClient handleCommand:completion:]_block_invoke
language
-[ADSettingsClient startMultiUserUIRequestWithText:expectedSpeakerSharedUserID:expectedSpeakerConfidenceScore:nonspeakerConfidenceScores:completion:]
B32@?0@"ADAccount"8Q16^B24
-[ADSettingsClient hasEverSetLanguageCodeWithCompletion:]
v16@?0@"ADAnalyticsStore"8
v16@?0@"AFExperimentContext"8
com.apple.assistant.settings-client.connected-bluetooth-devices
-[ADSettingsClient setAnnounceNotificationsInCarPlayTemporarilyDisabled:]
-[ADSettingsClient clearAnnounceNotificationsInCarPlayTemporarilyDisabled]
-[ADSettingsClient setAnnounceNotificationsInCarPlayType:]
-[ADSettingsClient clearAnnounceNotificationsInCarPlayType]
-[ADSettingsClient setSiriDataSharingOptInStatus:completion:]
-[ADSettingsClient getSiriDataSharingOptInStatusWithCompletion:]
-[ADSettingsClient deleteSiriHistoryWithContext:withCompletion:]
-[ADSettingsClient deleteSiriHistoryWithContext:withCompletion:]_block_invoke_2
-[ADSettingsClient deleteSiriHistoryWithContext:withCompletion:]_block_invoke
Completion block was dropped unexpectedly.
Client timed out because no server response was received in 20 seconds.
Server response is unexpected.
Server response is nil.
-[ADSettingsClient triggerABCForType:subType:context:completionHandler:]_block_invoke
deviceIDPair
observationDate
deviceIDPair = %@
observationDate = %@
ADRapportProximityObservation::deviceIDPair
ADRapportProximityObservation::proximity
ADRapportProximityObservation::observationDate
pairs
value
VoiceCommand
Audio/Video
-[ADVolumeService fetchSmartSiriVolume]
-[ADVolumeService updateSiriOutputVolume:completion:]
-[ADVolumeService waitUntilSiriOutputVolumeUpdatesAfterTimestamp:withTimeout:block:]
-[ADVolumeService setClientConfiguration:]_block_invoke
-[ADVolumeService getSiriOutputVolumeForAudioRoute:completion:]
-[ADVolumeService setSiriOutputVolume:forAudioRoute:operationType:completion:]
-[ADVolumeService _fetchSystemVolumes]
-[ADVolumeService systemVolumeChanged:]
-[ADVolumeService _handleSystemVolumeChangeForCategory:volume:audioCategory:reason:]
-[ADVolumeService _fetchSmartSiriVolume]
-[ADVolumeService _setNeedsUpdateSiriVolume]
-[ADVolumeService _updateSiriVolumeIfNeeded]
-[ADVolumeService _updateSiriVolume:completion:]
BOOL ADVolumeServiceSupportsSmartSiriVolume(AFInstanceContext *__strong)
ADVolumeService.m
instanceContext != nil
_ADVolumeServiceSmartSiriVolumeIsValid
-[ADSessionLocalServer _startSession]
-[ADSessionLocalServer setHasActiveRequest:]
-[ADSessionLocalServer _saAssistantNotReady:]
Mini not ready
-[ADSessionLocalServer _assistantFailedForReason:error:]
-[ADSessionLocalServer _saCommandFailed:]
-[ADSessionLocalServer _saAssistantLoaded:]
-[ADSessionLocalServer _handleAceObject:]
-[ADSessionLocalServer sendCommand:]
-[ADSessionLocalServer _sendServerCommand:]
-[ADSessionLocalServer _sendServerCommand:]_block_invoke
-[ADSessionLocalServer _sendLoadAssistant]
-[ADSessionLocalServer siriConnection:didOpenWithConnectionType:delay:]
-[ADSessionLocalServer siriConnection:didReceiveAceObject:]
-[ADSessionLocalServer siriConnectionDidClose:]
-[ADSessionLocalServer siriConnection:didEncounterError:]
-[ADSessionLocalServer _sendAssistantDataChangedSinceAnchor:refId:]
-[ADHeadphonesAnnouncementRequestCapabilityProvider fetchCurrentlyRoutedHeadphonesCBUUIDWithCompletion:]
-[ADHeadphonesAnnouncementRequestCapabilityProvider fetchCurrentlyRoutedHeadphonesCBUUIDWithCompletion:]_block_invoke
Find My Device Monitor Queue
-[ADFMDMonitor init]
lost
not lost
ADBluetoothWirelessSplitterSessionObserver
-[ADBluetoothWirelessSplitterSessionObserver bluetoothWirelessSplitterSession:sessionInfoDidChangeFrom:to:]
-[ADBluetoothWirelessSplitterSessionObserver bluetoothWirelessSplitterSessionDidInvalidate:]
%@ Recognition Text: "%@"
%@ Partial Recognition Text: "%@"
%@ key: %@
-[SASStartSpeech(ADSAExtensions) ad_setCSSiriRecordingInfo:]
-[SASUpdateAudioInfo(ADSAExtensions) ad_updateWithRecordingInfo:speechRequestOptions:clientConfiguration:]
[%@ count:%tu total:%ld
  aceId: %@
  refId: %@]
%@ errorCode: %ld reason: %@
-[SARDStartServerRequest(ADSAExtensions) ad_setCSSiriRecordingInfo:]
device:
ADPeerInfo
%@ idsIdentifier: %@ productType: %@ buildVersion: %@ name: %@
idsIdentifier
hostTime
payloadBeginAudioSessionRequest
payloadBeginAudioSessionResponse
payloadKeepAudioSessionAliveRequest
payloadKeepAudioSessionAliveResponse
payloadEndAudioSessionRequest
payloadEndAudioSessionResponse
hostTime = %@
payloadBeginAudioSessionRequest = %@
payloadBeginAudioSessionResponse = %@
payloadKeepAudioSessionAliveRequest = %@
payloadKeepAudioSessionAliveResponse = %@
payloadEndAudioSessionRequest = %@
payloadEndAudioSessionResponse = %@
ADAudioSessionCoordinationMessage::hostTime
ADAudioSessionCoordinationMessage::type
ADAudioSessionCoordinationMessage::payloadBeginAudioSessionRequest
ADAudioSessionCoordinationMessage::payloadBeginAudioSessionResponse
ADAudioSessionCoordinationMessage::payloadKeepAudioSessionAliveRequest
ADAudioSessionCoordinationMessage::payloadKeepAudioSessionAliveResponse
ADAudioSessionCoordinationMessage::payloadEndAudioSessionRequest
ADAudioSessionCoordinationMessage::payloadEndAudioSessionResponse
-[ADMultiUserStateContextProvider handleMultiUserDidReceiveScoresNotification:]
com.apple.assistant.clock-service
-[ADClockService init]
-[ADClockService getFiringStatesWithCompletion:]
-[ADClockService getFiringStatesWithCompletion:]_block_invoke_2
-[ADClockService getFiringStatesWithCompletion:]_block_invoke
v32@?0@"NSString"8@"AFClockAlarmSnapshot"16^B24
v32@?0@"NSString"8@"AFClockTimerSnapshot"16^B24
-[ADClockService getSnapshotsWithCompletion:]
-[ADClockService getSnapshotsWithCompletion:]_block_invoke
-[ADClockService requestLifecycleObserver:requestWillBeginWithInfo:origin:client:]_block_invoke
-[ADClockService requestLifecycleObserver:requestDidEndWithInfo:origin:client:]_block_invoke
-[ADClockService _mutateMergedClockTimerSnapshotUsingBlock:]
v24@?0@"NSString"8@"AFClockAlarmSnapshot"16
v24@?0@"NSString"8@"AFClockTimerSnapshot"16
-[ADClockService _mergedClockAlarmSnapshot]
-[ADClockService _mergedClockAlarmSnapshot]_block_invoke
v16@?0@"<AFClockAlarmSnapshotMutating>"8
-[ADClockService _mergedClockTimerSnapshot]
-[ADClockService _mergedClockTimerSnapshot]_block_invoke
-[ADClockService _dismissFiringItemsWithOptions:]
limit = %@
ADDeviceSyncCommandPullDeltaRequest::dataType
ADDeviceSyncCommandPullDeltaRequest::generation
ADDeviceSyncCommandPullDeltaRequest::limit
com.apple.siri.analytics.storage.purged
com.apple.siri.analytics.storage.snapshot
com.apple.siri.analytics.batchupload
hour
storageSize
ADNotificationManager
-[ADNotificationManager fetchAllBulletinsWithCompletion:]_block_invoke
-[ADNotificationManager fetchBulletinsOnLockScreenWithCompletion:]_block_invoke_2
v16@?0@"AFBulletin"8
-[ADNotificationManager fetchBulletinWithID:completion:]_block_invoke
-[ADNotificationManager performActionWithIdentifier:forBulletinWithIdentifier:completion:]
-[ADNotificationManager performActionWithIdentifier:forBulletinWithIdentifier:completion:]_block_invoke
com.apple.facetime
com.apple.NanoPhone
com.apple.tincan
-[ADNotificationManager observer:addBulletin:forFeed:]_block_invoke
-[ADNotificationManager observer:modifyBulletin:forFeed:]_block_invoke
-[ADNotificationManager observer:removeBulletin:forFeed:]_block_invoke
-[ADNotificationManager observer:purgeReferencesToBulletinID:]_block_invoke
-[ADNotificationManager observer:updateSectionInfo:]
-[ADNotificationManager observer:updateSectionInfo:]_block_invoke
-[ADNotificationManager observer:noteServerConnectionStateChanged:]
-[ADNotificationManager _getNotificationsFromBulletinBoard]
com.apple.cmas
-[ADNotificationManager _getRestrictedAppsFromBulletinBoard]
-[ADNotificationManager _getRestrictedAppsFromBulletinBoard]_block_invoke
-[ADNotificationManager _getRestrictedAppsFromBulletinBoard]_block_invoke_2
BBObserver
corespeech
myriad
requestlifecycle
methodType
methodName
lastWin
ADDeviceSyncCommandPullGenerationsResponse::generationsByDataType
com.apple.assistant.device-sync.data-type.alarm
com.apple.assistant.device-sync.data-type.timer
%@ (id = %@, requestID = %@, turnID = %@, originPeer = %@, instance = %@)
%s Failed to initialize temp directory.  errno: %{public}s
%s Logging asset daily status.
%s Asset daily status logging done.
%s Missing version info for asset %@
%s Version info is malformed for asset %@, version %@
%s Ignoring invalid anchor from server: %@
%s Queuing anchors from %@ because we are already syncing; active request: %@
%s Malformed app source - no clientIdentifier: %@
%s Error finding all Siri Extensions %{public}@
%s No paired watch found or unable to retrieve installed watch applications: %{public}@
%s Asking for anchor keys %@
%s Not forcing a reset since we're already in the middle of a sync. Wait and try again
%s Forcing a reset sync
%s Waiting for sync queue to start sync
%s Starting sync %@ for reasons %@
%s Resuming SyncAnchorsQueue
%s will reference promise %@: %d
%s Got snapshot for %@: %@
%s %@ isn't the get anchors response we were expecting. getAnchorsRequest:%@
%s Server is done sending sync data
%s Sync Verification request %@ is enqueued; ignoring %@
%s Already verified sync data over the last 24 hours, ignoring
%s Sending checksums for keys: %@
%s Could not open sync database for sync chunk processing err: %@
%s Could not begin sync database transaction for sync chunk processing err: %@
%s Could not add to sync database for sync chunk add %@ err: %@
%s Could not add to sync database for sync chunk remove %@ err: %@
%s Could not commit to sync database for sync chunk  err: %@
%s Could not rollback database after sync manager reset err: %@
%s Skipping sync because the process is running as an instance of a multi-instance service
%s Nothing to sync
%s Not syncing %@ because there's no sync plugin for it
%s SetBackgroundContext: %@
%s Got restricted apps: %@
%s fetching context from %@, additional context provided: %@
%s #context Starting ordered fetch for context - %p
%s #context Finished ordered fetch - %@ - %p
%s #context Starting app context fetch for - %@ with refId - %@, aceId - %@
%s #context Finished fetching app context - %@
%s Dispatching phone search for overridden application context %@
%s Phone search reply for %@ %@ %@
%s Resetting ContextManager %p
%s Total active experiments updated: %lu
%s Sending Request %d
%s Error sending request %{public}@
%s Ignoring response with no requestId %@
%s Error sending response %{public}@
%s Received %@ type %d fromId %@ incoming %@ outgoing %@ expects response %@
%s Handing protobuf to delegate
%s Error for request id %@ %{public}@
%s Tried to handle protobuf but couldn't find class or had no delegate %@ %@
%s Don't know how to handle protobuf %@ %@
%s Message send with identifier %@ failed %{public}@
%s Siri TCC not enabled for app: %@ using generic notification announcement
%s Input route changed
%s Output route changed
%s Failed getting audio property %{public}.4s %{public}d
%s Failed getting audio property size %{public}.4s %d{public}
%s Failed registering for property listener %{public}.4s %{public}d
%s Error getting file path from provided file handle; will create our own path and handle
%s Failure disposing audio file %{public}d
%s Error removing item at URL %{public}@
%s Configuring with asbd %.4s
%s Creating audio file at URL %@
%s Failed creating audio file at url %{public}@ %{public}d
%s Error setting input format %{public}d
%s No audio file to append data
%s Failed writing audio file %{public}d
%s No file url on flush
%s Failed opening fd for flushed audio file %{public}s
%s inASBD->mChannelsPerFrame = %lu
%s Error getting format info for type %{public}.4s %{public}.4s
%s %@
%s Optimistically trying eager fetch again on wake up timeout after socket success
%s Denying optimistic retry as we haven't vended socket since the last time.
%s Canceling optimistic socket fetch since we already have a _deviceConnection
%s Already have valid socket, returning immediately
%s Already getting device socket, waiting for completion
%s Asking for socket now
%s No Paired device returning immediately
%s no nearby device; returning immediately
%s got device connection completion for identifier %@ with error=%{public}@
%s got device connection completion for %@
%s device connection was closed while we were getting socket (expected %@; found %@); returning an error
%s Optimistically trying eager fetch again on socket success after wake up timeout
%s Not completing socket fetch since we have a new one outstanding
%s Ignoring close request since current streams have not been vended
%s Ignoring close request because connection %p did not open current stream %p
%s Wake up message failed %{public}@
%s Sending getRemoteMetrics request for id %@
%s Metrics response timed out
%s Reestablish message failed %{public}@
%s %@ %@ %@ %@
%s type = %d
%s Don't know how to make request for %d
%s Error sending metrics response %{public}@
%s Current Stream Identifier %@ Remote Stream Identifier %@
%s Eagerly getting device socket
%s %lu
%s Nearby device disappeared, closing cached streams
%s No completion, closing down.
%s No current IDS device connection
%s Error handling %@. %@
%s Key-value count mismatch %lu!=%lu
%s SKIP: unexpected value to set. Class=%@
%s %@:%@ %@ => %@
%s SKIP: invalid store for entry %@. %@
%s Run maintenance...
%s Unable to send command requesting background action with error %@
%s Finished running maintenance
%s Command: %@
%s %d, %@
%s Candidate: isCloseEnough? %d, flowPrompted? %d
%s #hal Not supported on this platform
%s #hal context already updated
%s #hal updating...
%s #hal updated
%s #hal %@
%s #hal context not updated, fetching now
%s #hal context updated after %llu milliseconds
%s #hal local device follower status not ready
%s #hal Preferred handling device is %@ for prox-based command: %@
%s #hal Preferred handling device is %@ for command: %@
%s #hal local device is a follower in a stereo pair? %d
%s #hal _currentDeviceContextTuples cleared
%s #hal %@ local alarms: %@
%s #hal %@ alarms: %@ on %@, proximity: %@
%s #hal %@ local timers: %@
%s #hal %@ timers: %@ on %@, proximity: %@
%s #hal executionContext: %@, doesn't have originPeer
%s Companion service is not supported on this platform.
%s Cannot publish arrival notification, aceId is empty for %@
%s Not publishing arrival, no identifiers exist for %@. Ignoring.
%s Received identifiers that we're already announcing. This is most likely a hint. Ignoring publishing.
%s Cannot publish notification, no identifiers exist.
%s Cannot publish notification, invalid state %li
%s Publishing state `%@` for identifiers: %@
%s Request cancelled for reason "%@". Sending cancelled speaking state.
%s Request ended for reason "%@". Sending finished speaking state.
%s MockServer XPC proxy error: %@
%s Cannot play MockServer replay file at: %@
%s payload for %@: %@
%s Received offline dictation status %@
%s Error getting offline dictation status. Error: %@
%s Resetting offline dictation status prefs
%s Prefs updated with new offline dictation status
%s Dispatching command (%@) for domain (%@)
%s Constructing failure response due to remote execution error %@
%s Waiting for Call to route to complete the request...
%s Timed out waiting for Call to route
%s preheating companion service domain: %@
%s received response: %@ error: %@
%s unsupported preheat domain: %@
%s Processing %ld pending Call result(s)
%s No normalized key could be computed for %@ %@
%s Unable to stop synching anchors of type %{public}@, because the example anchor is malformed aceID=%@
%s Invalid sync anchor was rejected by server %@
%s Anchor was throttled until %@ %@
%s %@ %@
%s Received message from unknown message type: %@
%s Migrating assistantIdentifier
%s Creating coupled assistantIdentifier
%s Migrating speechIdentifier
%s Found Predefined Server '%@' = %@
%s Bad server override %@
%s Using Server Override %@
%s Unable to save account info %@ because it is read only.
%s Saving account info %@
%s oldAssistantID:%{private}@
newAssistantID:%{private}@
%s Unable to remove and save account info %@ because it is read only.
%s updated assistant data
%s updated assistant for same device
%s inserted
%s Found paired watch
%s Couldn't create bundle at URL %{public}@
%s Can't serialize %@: %{public}@
%s Can't write to %{public}@: %{public}@
%s regenerating bundle service cache due to version mismatch %@ %@
%s Service loaded: %{public}@
%s Substituted to service:%@ for anchor:%@
%s Substituting %@ service for %@
%s Bad notification name for reload service. Expecting format to look like "<serviceBundleID>%{public}@". Instead, received "%{public}@"
%s Service reload notification %{public}@ is already pending for %{public}@, so this one will be ignored
%s Unable to find the service to reload for notification %{public}@
%s Unable to reload service (%{public}@), because the service's bundle path wasn't found
%s Unable to create bundle dictionary at from bundle path %{public}@
%s Done reload the following services: %{public}@
Bundle services cache written to: %{public}@
%s Non-string object under key %@
%s Invalid parameter is not a dictionary!
%s Can not get anchors without a completion block
%s Waiting %.4g seconds to save
%s Missing key, ignoring this sync chunk
%s Not caching %@
%s Nothing saved
%s Could not deserialize file %@
%s Saved data is invalid!
%s Dropping ignored sync data of type %@
%s Saved %@ data is invalid, continuing...
%s Loaded sent sync anchors (%@ plugin anchors, %@ SiriKit anchors)
%s App %@ no longer has synapse data, removing from cache.
%s %@/%@ info is no longer on disk, removing from cache.
%s No anchors to save, so removing any existing files.
%s Could not convert in-memory representation to plist %@
%s Failed to write plist to disk
%s Dealloc before completion called for announce request: %@
%s Unable to map event type %d to known instrumentation event class.
%s Unable to build metrics out of no event records.
%s Dropped %tu events because no timings can be extracted from the events.
%s Got asked for %u packets, have %u
%s [%02u of %02u] Opus packet with %u bytes
%s AudioConverter is sad: 0x%{public}xd
%s Sending %tu packets
%s #hal snapshot = %@
%s wireless splitter session state: %ld, error: %@
%s Notifying observers of available announcement requests: %lu
%s previous announcement request eligibility: %lu, now updating to %lu
%s Notifying observers, eligible announcement requests changed: %lu
%s wireless splitter session state changed from %llu to %llu
%s wireless guest connection state changed from %llu to %llu
%s forced update observer re-fetching eligibility
%s re-fetching eligibility after assistantd is ready
%s Announcements not supported on device
%s Always Opportune forcing eligible setup. This should only be used for testing.
%s Eligble Announcement Requests: %lu, Local Voice Asset Available: %d
%s Announcements not supported on this device
%s Always Opportune all requests available. This should only be used for testing.
%s Available annoucement requests: %lu, In wireless splitter session: %ld, guest connection state: %llu
%s Invalid listeningType passed to _framesPerSecondForOpportuneSpeakListeningType
%s Using voiceOnMin: %f, voiceOffMax: %f for listening type: %lu
%s OPPSPK - TIMEOUT frame = %d
%s shouldStopListeningOnDetection:%@
%s startListenWithOption : %{public}d, %{public}@
%s OPPSPK - startListenWithOption : %{public}d, %{public}@
%s Invalid frame type passed to _handleFrame
%s OPPSPK - VOICE STARTS frame = %d
%s OPPSPK - VOICE ENDS frame = %d
%s OPPSPK - frame %d/%d/%d wearer=%d ambient=%d moving=%f
%s OPPSPK - PAUSE SEEN frame = %d
%s OPPSPK - SPEECH SEEN frame = %d
%s OPPSPK - stop listening event detected, stopping listener
%s OPPSPK - stop listening event detected, not stopping listener
%s OPPSPK - will call completion but not stop listener
%s OPPSPK - restting state and continuing to send threshold events
%s OPPSPK - done sending threshold events
%s OPPSPK - stopListenWithCompletion : %{public}d, %{public}@
%s OPPSPK - Restarting listener to bypass 90 second recording limit
%s Has stopped listening
%s OPPSPK - Listening for speech stopped unexpectedly
%s OPPSPK - Listening for speech stopped normally
%s Enabling CFNetwork diagnostics
%s Starting Siri Connection Proxy
%s Starting Peer Location Service
%s Rejecting connection attempt by %@ because it is missing the entitlement %@
%s Rejecting connection attempt by PID %d because it is missing the entitlement %@
%s Preheating session on client connection
%s %@ Client Connection Connected (pid=%d])
%s %@ Client Connection Disconnected (pid=%d)
%s %@ Dictation Connection Connected (pid=%d])
%s Too many connections from pid %d, refusing connection
%s %@ Dictation Connection Disconnected (pid=%d])  %@
%s Rejecting attempt to connect by pid=%d because it is missing one of the entitlements %@ or %@ (either will do)
%s %@ Settings Connection Connected (pid=%d)
%s %@ Settings Connection Disconnected (pid=%d)
%s Could not get the bundle identifier for other-side of the XPC connection, are you missing an application identifier entitlement? %@
%s Could not get bundle path for other-side of XPC connection %@ %@
%s no '%@' entitlement for connection %{public}@
%s %@ Rejecting connection, because no kCFBundleIdentifierKey could be found for pid=%d but we expected it to be a .app bundle
%s assistantd accepted connection from app (pid=%d bundleID=%@) %@
%s Synapse Sync Connection Disconnected (pid=%d)
%s %@ Managed Storage Connection Connected (pid=%d)
%s %@ Managed Storage Connection Disconnected (pid=%d)
%s %@ Analytics Connection Connected (pid=%d])
%s Analytics Connection Invalidated (pid=%d)
%s Analytics Connection Interrupted (pid=%d)
%s %@ Analytics Observation Connection does not have required entitlements.
%s %@ Analytics Observation Connection Connected (pid=%d])
%s Analytics Observation Connection Invalidated (pid=%d)
%s Analytics Observation Connection Interrupted (pid=%d)
%s %@ Security Connection does not have required entitlements.
%s %@ Security Connection Connected (pid=%d])
%s Security Connection Invalidated (pid=%d)
%s Security Connection Interrupted (pid=%d)
%s %@ Notification Service Connection does not have required entitlements.
%s %@ Notification Service Connection Connected (pid=%d])
%s Notification Service Connection Invalidated (pid=%d)
%s Notification Service Connection Interrupted (pid=%d)
%s %@ Audio Session Assertion Service Connection does not have required entitlements.
%s %@ Audio Session Assertion Service Connection Connected (pid=%d])
%s Audio Session Assertion Service Connection Invalidated (pid=%d)
%s Audio Session Assertion Service Connection Interrupted (pid=%d)
%s Got xpc event for notification %s
%s Got xpc event for distributed notification %s
%s Notification payload: %s
%s Skipping setup for sync listener because the process is running as an instance of a multi-instance service.
%s Sync listener error %{public}s
%s Ignoring unexpected event type on sync listener
%s Returning no space to CacheDelete because it's not a special case
%s Could not get asset sizes: %{public}@
%s Deleting nothing for CacheDelete because it's not a special case
%s Could not purge assets: %{public}@
%s Purged assets to recover %{public}@ bytes
%s Could not register with CacheDelete: %d
%s Registered with CacheDelete
%s assistantd launched build %s~%s
%s Instance context set to %@
%s assistantd finished post launch setup
%s assistantd shutting down
%s Sync Urgent activity already registered
%s Sync now activity already registered
%s Assistant is not enabled, ignoring sync notification
%s HIPAA compliance for On-Device Dictation, ignoring sync notification
%s Sync requested recently; sync reasons enqueued: %@
%s Received sync now notification from UEA.
%s Received defrost XPC message
%s Process launched %fs after sending defrost XPC message.
%s Process launched before sending defrost XPC message.
%s Unexpected message on sync connection %s
%s Unexpected nameless message on sync connection
%s Sync peer shutting down due to %s
%s Ignoring unexpected type on sync connection
%s Censor setting changed, pushing to peer.
%s Not pushing shared data because we have no peer
%s Already have Peer Data returning now!
%s Getting Peer Data from ADCommandCenter
%s Sending ADCC Peer Data now!
%s Forcing Siri to off because peer does not support language
%s Peer does not export shared data.
%s got remote execution command: %@ -> %@
%s error executing remote command: %@
%s got command response: %@
%s Resetting %@ session with Id %@
%s Started a session with id %@, count = %tu
%s Starting sessions and make quiet: %d
%s Pending until request is over
%s Resetting immediately
%s language code changed to %@
%s Canceling connection due to power change notification %@
%s Error deregistering for power notifications %{public}d
%s Command %@
%s Session %@ (type %d) wins with reason %@ preferred %d remoteSessionScore %ld localSessionScore %ld
%s holdTime is %d
%s Restarting timer as there is no winning session yet
%s We have results from preferred session. Evaluate.
%s Started queueing result objects
%s Command is %@ and %d
%s Destructive command with no RefId. File bug.
%s Cannot remap to other sessions with refId %@
%s Out of band destructive commands with %@ refId
%s (refId %@) causing us to cancel other session request (refId %@)
%s Session %@ wins by default.
%s shouldContinue is %d
%s Assets available for siri session: %d
%s Changing from session type=%d to session type=%d
%s Session will start connection
%s Session did open connection with type %d
%s All sessions active now.
%s Dropping command not from winning session.
%s Sending CommandFailed as command required response.
%s Session %@ wins with command %@
%s Ignoring as the winner has been chosen already.
%s Session received error but other active sessions present. Ignoring error %@ %d
%s Session log visible request failure
%s Session %@ connection did reset
%s Session should attempt retry
%s Request Id is %@ and oldSessionRequestId is %@ newSessionRequestId is %@
%s Proxied map is %@ reverse Proxied map is %@
%s Session did create assistant
%s Session will retry on error
%s Session begin retry preferring WWAN
%s Setting RequestId to %@
%s Bounce back command is %@
%s Final speech recognition arrived
%s session %@ cannot handle request or has non null refId
%s command %@ filtered for session %@
%s not sending command %@ to session %@
%s command %@ does not belong to session %@
%s HIPAA compliance for On-Device Dictation, not sending command %@ to session %@
%s Dropped command: %@
%s Ignored because of active request (requestId = %@).
%s Ignored because %tu assertions.
%s     %@
%s Ignored because there's no need.
%s Resetting Sessions at Request Boundary
%s Request Id %@ for %@ session with Id %@ has proxied request Id %@
%s Previous winner session %@ reused for current request %@
%s metrics count %d
%s Session %@ is active or is in active retry
%s Siri Mini cannot be started for connection mode %@ language %@
%s Siri Mini not enabled
%s Reset winning session Id %@
%s sessionType is not defined
%s winningReason is not defined
%s Siri Mini result candidate called before sessions were set up
%s Tried to send unhandled command to Siri Mini
%s Filtering command %@ from Siri Mini as %@ is the winner
%s Detaching from session %p
%s Already attaching to session!
%s Attaching to session
%s Failed attaching to bt session %d
%s session = %p, result = %d
%s session = %p
%s Session is NULL.
%s Failed getting default local device from session %p (result = %d).
%s Failed adding callbacks to local device %p from session %p (result = %d).
%s localDevice = %p, event = %d, result = %d
%s Failed getting default accessory manager from session %p (result = %d).
%s Failed adding callbacks to accessory manager %p from session %p (result = %d).
%s accessoryManager = %p, accessoryEvent = %d, device = %p, state = %d
%s address = %@, headphoneInEarDetectionState = %@
%s address = %@, headphoneListeningMode = %ld
%s Failed getting device address from string %d
%s Failed getting device from address %d
%s BTDevice %p for address %@
%s BTAccessoryManager %p
%s Failed getting device from deviceUID %d
%s BTDevice %p for deviceUID %@
%s BTLocalDevice %p
%s connectedDevices = %@
%s pairedDevices = %@
%s Wireless Splitter is not supported on this platform.
%s Getting connected devices from local device %p...
%s Got %tu connected devices from local device %p.
%s     [%02tu] %@
%s Failed getting connected devices from local device %p (result = %d).
%s Local device is NULL.
%s Getting paired devices from local device %p...
%s Got %tu paired devices from local device %p.
%s Failed getting paired devices from local device %p (result = %d).
%s Loading device info for %@...
%s Loaded device info %@ for %@.
%s Using slow path...
%s Slow path took %f seconds.
%s Slow path timed out after 4 seconds.
%s Reloading device info for %@...
%s Reloaded device info %@ for %@.
%s Reloading headphone in-ear detection state for %@...
%s Reloaded headphone in-ear detection state %@ for %@.
%s Reloading headphone listening mode for %@...
%s Reloaded headphone listening mode %ld for %@.
%s Unable to set headphoneListeningMode to %ld, device does not support this mode
%s deviceInfo = %@
%s deviceInfo changed from %@ to %@
%s headphoneInEarDetectionState = %@
%s headphoneInEarDetectionState changed from %@ to %@
%s headphoneListeningMode = %ld
%s headphoneListeningMode changed from %ld to %ld
%s Fetching device info for %@...
%s Fetched device info %@ for %@.
%s Fetching headphone in-ear detection state for %@...
%s Fetched headphone in-ear detection state %@ for %@.
%s Fetching headphone listening mode for %@...
%s Fetched headphone listening mode %ld for %@.
%s Changing headphone listening mode to %ld for %@
%s Unable to set listening mode for BTDevice %p via BTAccessoryManager %p
%s Changed headphone listening mode to %ld for %@.
%s Getting BTDevice and BTAccessoryManager for %@...
%s Got BTDevice %p and BTAccessoryManager %p for %@.
%s Device UID and address of %@ are nil.
%s Data source of %@ is nil.
%s Failed getting BTDevice and BTAccessoryManager for %@.
%s Loading Wireless Splitter session info for %@...
%s Loaded Wireless Splitter session info %@ for %@.
%s observer = %@, fromState = %@, toState = %@
%s Reloading Wireless Splitter session info for %@...
%s Reloaded Wireless Splitter session info %@ for %@.
%s wirelessSplitterSessionInfo = %@
%s wirelessSplitterSessionInfo changed from %@ to %@
%s Fetching Wireless Splitter session info for %@...
%s Fetched Wireless Splitter session info %@ for %@.
%s Getting BTLocalDevice for %@...
%s Got BTLocalDevice %p for %@.
%s Failed getting BTLocalDevice for %@.
%s Failed getting address from BTDevice %p (result = %d).
%s Failed getting vendor id and product id from BTDevice %p (result = %d).
%s Failed getting InEar capability from BTDevice %p via BTAccessoryManager %p (result = %d).
%s Failed getting DoAP capability from BTDevice %p via BTAccessoryManager %p (result = %d).
%s Failed getting ANC capability from BTDevice %p via BTAccessoryManager %p (result = %d).
%s Failed getting Transparency capability from BTDevice %p via BTAccessoryManager %p (result = %d).
%s Failed getting Software Volume capability from BTDevice %p via BTAccessoryManager %p (result = %d).
%s Failed getting Announce Messages capability from BTDevice %p via BTAccessoryManager %p (result = %d).
%s Failed getting Announce Calls capability from BTDevice %p via BTAccessoryManager %p (result = %d).
%s Failed getting in-ear detection enable flag %d
%s Failed getting primary and secondary in-ear status %d
%s Unable to get bluetooth device listening mode, found NULL handles
%s Unable to determine listening mode for BTDevice %p via BTAccessoryManager %p (result = %d)
%s Listening mode for BTDevice %p is %ld
%s Unable to set bluetooth device listening mode, found NULL handles
%s Unable to set bluetooth device listening mode to undefined mode
%s Unable to set listening mode for BTDevice %p via BTAccessoryManager %p (result = %d)
%s Changed headphone listening mode to %ld.
%s Failed getting sharing enable flag %d
%s Failed getting sharing device addresses %d
%s Failed converting address from BTDeviceAddress (result = %d).
%s Couldn't create stats dir %{public}@
%s Error reading stats plist for %{public}@ %{public}@
%s Error serializing plist data for service %{public}@ %{public}@
%s Trying to mark command start for nil command
%s No start time for command %@ for service %{public}@
%s Can't mark response for nil command for service %{public}@
%s Will destroy os_transaction_t object
%s Transaction object nil
%s Did destroy os_transaction_t object with new XPC transaction count %ld
%s (oldState = %ld, newState = %ld)
%s Will call os_transaction_create()
%s Did call os_transaction_create() with new XPC transaction count %ld
%s will call os_transaction_create()
%s Device can receive incoming calls by proxy
%s Not observing call state
%s %p
%s Recording performance numbers on NowPlaying updates for %g seconds
%s ApplicationInfo identifier: %@
%s Attempting AFContextProvider lookup on %@
%s Skipping AFContextProvider lookup because %@ is not allow-listed
%s Reply context from remote center: %@
%s No AFContextProvider server for %@
%s Got activity for app context %@ %@
%s Error getting current user activity uuid %{public}@
%s Fetching NSUserActivity for %@ with %0.1g second timeout
%s Got NSUserActivity for %@
%s Error getting current user activity from uuid %{public}@
%s User activity (%@) isEligibleForReminders: %@
%s Sending notification %@
%s Skipped sending invalid notification. display name %@, date %{public}@
%s NLAlertContext [+] %@
%s AlertContext [+] %@
%s Marking voicemail as played: %@
%s Unable to find voicemail: %@
%s Voicemail contains invalid identifier: %@, %@
%s Now playing media was not interrupted. It should not be resumed.
%s Interrupted media is video. It should not be resumed.
%s Interrupted now playing app is a resumable first party app.
%s Interrupted now playing app has a resumable third party genre.
%s #hal includedKeys: %@, excludedKeys: %@, timeOut: %f
%s #hal timed out
%s #hal Local context: %@
%s #hal Error fetching remote context: %@
%s #hal Fetched %ld remote contexts
%s #hal Remote context: %@
%s #hal Skip remote context because it is from local. %@
%s #hal Add device context with proximity: %@, %@
%s _currentRequestInfoUUID = %@
%s #hal context snapshot fetch timed out, skip setting the snapshot
%s #hal context snapshot cleared
%s #hal skip setting context snapshot as the request has changed: %@ -> %@
%s #hal context snapshot set with %tu contexts.
%s #hal context snapshot %tu: %@
%s #hal context snapshot cleared on timeout
%s #hal dequeuing %tu snapshot completions
%s #hal Timed out force fetching from %@
%s #hal force fetched: %@, error: %@
%s Timed out fetching aggregated context
%s #hal current request is nil, skip fetching context
%s #hal return existing context snapshot
%s #hal queue context snapshot completion
%s #hal No request ID specified, skipping
%s #hal _currentRequestDate set to %@
%s Context refreshing error: %@
%s Context refreshing done
%s Start ctxg=%p %s
%s Got NavStatus ctxg=%p
%s Got NowPlaying ctxg=%p
%s Got Simple Context ctxg=%p
%s Got Music Personalization Token ctxg=%p
%s Got HomeAnnouncement ctxg=%p
%s Done ctxg=%p aceID=%@
%s Could not register for %s notification
%s observing notifications
%s No longer observing notifications
%s #hal %d
%s Reject the connection as it's missing entitlement
%s #hal collectorID(s): %@, isLocal: %d
%s #hal No collector device found
%s #hal No Assistant identifier in %@. Skipping %@.
%s #hal No IDS device unique identifier in %@. Skipping %@.
%s #hal malformed message: missing request ID
%s #hal received context_snapshot_push for request %@:
%s Received %lu tokens
%s No tokens found and error is %@
%s No tokens found, but no error either.
%s Received %lu token statuses
%s No changes to DynamiteClientState tokens
%s Received token status for sharedId %@: errorCode:%@ lastUpdateAttemptTime:%@ shouldExcludeFromBackgroundRefresh: %@
%s No changes to DynamiteClientState tokens or token statuses
%s No token statuses found and error is %@
%s No token statuses found, but no error either.
%s Token status errorCode:%@ lastUpdateAttemptTime:%@ shouldExcludeFromBackgroundRefresh: %@
%s Got %s notification
%s Could not fetch route! %@ %@
%s Updating NowPlaying info now for %@
%s Updating NowPlaying info in %.4g seconds
%s group=%p canceling _nowPlayingCoalescingTimer because we are starting an update now
%s group=%p didChange=%d queueState ID=%@
%s #hal Fetching context after %f seconds
%s supplementalSnapshot = %@
%s cachedHomeAnnouncement = %@, proposedHomeAnnouncement = %@
%s didChange = %d
%s fetchedSnapshot = %@
%s snapshot = %@
%s %p (pid = %d)
%s %p (pid = %d) context = %@
%s %p (pid = %d) assertion %@ already acquired
%s %p (pid = %d) failed to get acquisition service
%s %p (pid = %d) failed to acquire assertion from %@
%s %p (pid = %d) assertion = %@
%s %p (pid = %d) context = %@, error = %@, options = %@
%s %p (pid = %d) done
%s %p (pid = %d) error = %@
%s %p (pid = %d) xpcConnection = %@
%s Settings handler asked to handle request %@, but didn't know how
%s Starting delay with type %@
%s Can't start delaying because we are already delaying
%s Reseting the OSMED
%s Delaying already stopped, not sending commands
%s Stopping request delaying and sending commands: %s
%s Releasing %lu delayed context commands sendCommands: %d
%s Context command queue empty, not starting timer
%s Timeout reached for context commands, dropping commands
%s Starting/Resetting context commands timer
%s Invalid request delay type, unable to compute voice threshold
%s Invalid delay type for invoking ADOSMED.
%s Using %f seconds for detection threshold for ADOSMED
%s Whitelisted command received, bypassing delay: %@
%s Delaying sending command: %@
%s %p xpcConnection = %@
%s %p localDeviceContext = %@
%s %p error = %@
%s %p Ignored because the connection is invalidated.
%s %p isUpdatingLocalDeviceContext = %d
%s %p sending reply...
%s ADPeerLocationRemote best location timer firing
%s starting location updates
%s Sending unsolicited location: %{private}@
%s acquiring location-in-use assertion
%s %{private}@ %@
%s stopping location updates
%s has active request; calling completion
%s releasing location-in-use assertion
%s no active request
%s updated location %{private}@
%s %{public}@
%s authorized with active request; starting location updates
%s not authorized with active request; failing with error
%s Unable to get best location from peer: %{public}@
%s forceReconnect %d
%s %d %@
%s Connection closed before opening
%s Got an invalid socket
%s Closing valid socket due to other error before setup complete
%s Buddy is %@
%s Buddy is now %@
%s External Request connection missing entitlement
%s External Request Listener Error: %{public}s
%s Ignoring unexpected event type on External Request Listener
%s Unexpected external request message type %{public}lld
%s External Request peer error: %s
%s non-valid notification from XPC message.
%s non-valid sourceAppID from XPC message.
%s non-valid AFSiriAnnouncementPlatform: %lli, defaulting to AFSiriAnnouncementPlatformHeadphones.
%s startLocalRequest = %@
%s Archiving error %@
%s Error handling external activation %@
%s Getting requestInfo dictionary
%s Got identifier: %@ from requestInfo dictionary
%s Error obtaining the homeAutomationRequestInfo
%s Creating localRequest with identifier: %@ and reportingDomain: %@
%s Couldn't get the command from SKI
%s Request failed with error: %@
%s Background request sent successfully
%s Feature flag to enable HA background requests is not enabled. Ignoring the message Please enable: home_automation_background_request
%s Sending reply with isValidMessage state: %s
%s non-valid AFSiriDeactivationReason: %lli, defaulting to AFSiriDeactivationReasonUnspecified.
%s platform %li is not valid, using headphones provider.
%s Dispatching diagnostic request: %@
%s Could not complete %@: %@/%@
%s Completed %@: %@
%s deviceSyncMessageService = %@, deviceIdentifier = %@
%s deviceSyncMessageService = %@, deviceIdentifier = %@, incomingMessage = %@
%s deviceSyncDataProvider = %@
%s Creating session for device with identifier %@...
%s Created session %@ for device with identifier %@.
%s Logging UUFR ready for app launch with turnid: %@
%s Failed to find turnId for app launch UUFR
%s app (%@) can be launched - filtering
%s app (%@) can not be launched due to '%@' - bailing
%s Found %tu apps matching name %@: %@
%s deviceIdentifier = %@, incomingMessage = %@
%s generationsByDataType = %@
%s dataTypes = %@
%s dataType = %@, generation = %llu, limit = %llu
%s incrementalChanges = %@
%s dataType = %@
%s deviceIdentifier = %@, outgoingMessage = %@
%s error = %@
%s audioCategory = %@
%s %lu connected devices
%s Bluetooth device time outed while checking current listening mode
%s Bluetooth device does not support Siri noise management
%s Done getting bluetooth device noise management: %@
%s Unable to determine bluetooth device's current listening mode
%s Unable to set device noise management mode, %@
%s Unable to set device noise management mode for secondary device, %@
%s Done setting bluetooth device noise management from %@ to %@
%s %@ (%@ / prev: %@ / value: %@ / %@)
%s Unable to determine noise management mode because there is no bluetooth device
%s Bluetooth device timed out when trying to query in-ear or listening mode status
%s Bluetooth device is not in-ear or not connected
%s Bluetooth device does not support noise management
%s OPPSPK - Listening for voice pause
%s No preferred external headphones route found
%s OPPSPK - Chose device %@
%s OPPSPK - Voice pause detected
%s OPPSPK - Voice pause not detected
%s Setting sample rate to %d
%s Could not make Fingerprinter decoder: %{public}.4s
%s Error during conversion for fingerprinter %{public}.4s
%s Getting signature for duration %lf
%s Fingerprinter doesn't support rate %{public}ld
%s Will delete %lu records
%s Purging deleted records before date %@
%s Purging data from analytics store (%@)...
%s Unable to get file size of analytics store (%@).
%s Unable to get file attributes of analytics store (%@).
%s Purged data from analytics store (%@)...
%s Failed to purge data from analytics store (%@) due to error %@.
%s Resetting analytics store (%@)...
%s Reset analytics store (%@).
%s Checkpointing write-ahead log (%@)...
%s Checkpointed write-ahead log (%@)...
%s Updating records with speechId value (%@) to (%@)
%s Failed to close database (%@) due to %@.
%s Failed to remove database (%@) due to %@.
%s Failed to remove database at path %@ due to %@.
%s Failed to open analytics database (retry %tu/%tu) at path %@ with error %@.
%s Failed to perform integrity check on analytics database (retry %tu/%tu) at path %@ with error %@.
%s Failed to remove database (retry %tu out of %tu) at path %@ due to %@.
%s Failed to prepare analytics database after %tu retries due to %@.
%s Failed to add column '%@' to '%@' table with error %@
%s Failed to create '%@' table with error %@
%s %@ column added as part of DB migration, performing column value uniquification
%s Failed to update database records with UUIDs due to error %@
%s Failed to begin database transaction due to error %@
%s Failed to insert event record %@ into %@ table due to error %@
%s Failed to commit database transaction due to error %@
%s Failed to rollback database transaction due to error %@
%s Failed to update database records with deleted state due to error %@
%s Failed to update %lu database records with deleted state due to error %@
%s Failed to purge database records with deleted state due to error %@
%s Failed to select database records due to error %@
%s Attempting to updated event records to NULL speechId
%s Failed to update database records with speechId (%@) to speechId (%@) due to error %@
%s %@ Flow Service Connection does not have required entitlements.
%s %@ Flow Service Connection Connected (pid=%d])
%s Flow Service Connection Invalidated (pid=%d)
%s Flow Service Connection Interrupted (pid=%d)
%s Settings found
%s Settings not found
%s Application %@ does not have access to %@, removing %@ from the intent node
%s called with nil punchoutOutcome.
%s #hal
%s #hal Ignoring AppleTV in sleep state
%s #hal %d -> %d
%s #hal %llu toState = %@, fromState = %@, lastPlayingDate = %@
%s #hal %llu suppressing play state change caused by siri activation interruption
%s #hal %llu mediaType = %@
%s #hal %llu Failed fetching Now Playing Info with error: %@
%s #hal %llu groupIdentifier = %@
%s #hal %llu Cancelling donation because signal %zd is received.
%s #hal %llu Previous playbackState: %@, lastPlayingDate: %@
%s      #hal %llu New playbackState: %@, lastPlayingDate: %@
%s #hal %llu Donating %@...
%s #hal %llu Skipped donation because there's no change.
%s #hal %llu Waiting for aggregation to finish...
%s #hal %llu Finished aggregation, took %f seconds.
%s #hal %llu Donation invoked.
%s #hal %llu Donation cancelled.
%s #hal %llu Donation cleared.
%s #hal renewing media playback expiration (last renewed: %@)
%s unable to enqueue request, invalid identifier %@
%s enqueueing request: %@
%s current request type: %@, tail request type: %@, incoming announcement Type: %@
%s found a thread id match for message announcement, adding it to: %@
%s No thread id match for message announcement, enqueue request: %@
%s same type as current request, adding it to the current request's queue %@
%s same type as tail request, adding it to the tail request's queue
%s No head or tail match of request type, enqueueing request: %@
%s no current request, returning nil for next request
%s %lu unread notifications, starting request at first unread notification
%s removing %@ and associated requests from the request queue
%s request queue is empty, returning nil
%s next request is %@
%s completing request with id: %@ with success: %d for reason: %@
%s request failed, mark all requests in thread with failure
%s clearing request queue
%s found request with notification identifier: %@ in request queue
%s Current request is equal to request we are trying to remove. Ignoring as this is not supported.
%s Request to be removed has no completion, meaning we've already completed this request. Ignoring as this is not supported.
%s found request to remove: %@ in request queue at index: %lu
%s Couldn't find request to remove: %@
%s found request with identifier: %@ in request queue
%s Notifying observers, available announcement request types changed: %lu
%s Client with pid %{public}d does not have entitlement %@
%s Current execution count: %ld, enqueuing work
%s Unexpected execution count. File radar.
%s Now executing %@
%s Rejecting ClientLite command because Siri is disabled
%s command = %@, afterCurrent = %d, isOneWay = %d
%s Timing out ClientLite command %@
%s No client handler for command %@
%s New CarPlay connection with setting %@. %@
%s airPlayRouteIdentifiers = %@
%s recordRoute = %@
%s recordDeviceIdentifier = %@
%s recordDeviceUID = %@
%s requestID = %@, fromRemote = %d
%s Preparing INPerson in %@
%s Finished
%s Unexpected value for startPlaybackType: %ld, ignoring.
%s Timed out fetching meCard  after waiting %0.1g seconds
%s Got %@
%s No replacement for %@, but there should be one
%s setting contactIdentifier to %@
%s setting displayName to %@
%s setting nameComponents.namePrefix to %@
%s setting nameComponents.givenName to %@
%s setting nameComponents.middleName to %@
%s setting nameComponents.nameSuffix to %@
%s setting nameComponents.nickname to %@
%s #hal no key included. Skipping
%s #hal ContextSnapshot with included keys = %@, excluded keys = %@, updating with partial context
%s #hal Force fetching from devices through collector: %@
%s #hal no included keys. Skipping
%s #hal included keys = %@, excluded keys = %@, updating with partial context
%s #hal No included keys specified
%s #hal [%@] remote context: %{private}@
%s #hal Updated assistantId %@ for device %@
%s #hal Current collector count: %zd
%s Logging ABC for missing context collector on HomePod
%s assistantIdentifier = %@, sharedUserIdentifier = %@
%s currentAccessoryInfo = %@
%s %@ -> %@
%s Unable to add or update remote peer info %@ because its rapportEffectiveIdentifier is %@.
%s Timer handler asked to handle request %@, but didn't know how
%s Begin setting up IDS service.
%s End setting up IDS service %@.
%s Lost mode is active, not sending any outbound requests
%s No place to send this
%s Failed sending message type %d %{public}@
%s retrieved ID from URI: %@
%s Unable to find peer, creating faux element for identifier: %@
%s Fetching IDS device unique identifier for local device...
%s Fetched IDS device unique identifier %@ for local device.
%s Has active account: %d
%s AirPlay route did not change
%s %@ %{public}@
%s Request success %d
%s Dropping incoming message because Lost Mode is active
%s Dropping incoming message with unknown sender
%s Type %d from %@. Incoming %@ Outgoing %@ Expects Response %d
%s Response class is %d doesn't match %d
%s Handling response of type %d
%s Completing request
%s %ld responses remaining
%s %lu accounts
%s %lu devices
%s device: %@
%s Already have a log open, ignoring
%s Couldn't open file %{public}@
%s error removing file at path %{public}@ %{public}@
%s Logged speech file at path %@
%s Error opening speech log at URL %{public}@ %{public}s
%s buffer not big enough
%s Read incorrect number of bytes
%s Error destroying NACContext %{public}d
%s Error during NACInit %{public}d
%s Got context %p from NACInit
%s Disposing request data failed %{public}d
%s NACKeyEstablishment error %d
%s NACSign error %{public}d
%s Error disposing validation data %{public}d
%s Using cached authorization status = %d enabled = %d preciseLocationEnabled = %d
%s Fetching authorization status
%s Got authorization status = %d enabled = %d preciseLocationEnabled = %d
%s Zero latitude detected: %{private}@
%s Performing shift from location: %{private}@
%s Using unshifted location because location shift failed due to error: %@
%s Stopping location monitoring
%s Canceling Location-SLA timer
%s SERIOUS PROBLEM FETCHING LOCATION %@ %@
%s Already waiting for a response
%s Scheduling location-SLA timer for %lf
%s Location-SLA timer firing
%s Canceling location timer
%s Scheduling location timer for %lf
%s Location timer firing
%s Starting location monitoring
%s Should send location for desired accuracy %lf %@
%s Asking for location from peer
%s Received location from peer: %{private}@
%s Received empty location response from peer
%s Requesting best location
%s Ignoring location older than _lastPeerLocation
%s CLAuthorizationStatus changed %d isEnabled %@, preciseLocationEnabled %@
%s %@ %{private}@
%s Unknown status %{public}@
%s Given a location, but no explicit location status -- assuming we are authorized to use locations
%s Location Services Disabled
%s Location Services Denied for Siri
%s Zero latitude in SASetRequestOrigin. Latitude: %{private}f, Longitude: %{private}f
%s No cached location available
%s Location Services Denied for assistant
%s Using cached location
%s No cached location, waiting for first update
%s Acquiring location-in-use assertion for reason: %@
%s creating location-in-use assertion
%s Releasing location-in-use assertion for reason: %@
%s nilling out reference to location-in-use assertion
%s #hal Invalid local device context %@
%s #hal nothing specified in includedKeysInPush
%s #hal serialized context is nil
%s #hal not supported on this platform
%s #hal %{private}@ %@
%s #hal Redacted version: %{private}@ %@
%s #hal No transformer for %@, not pushing to remote
%s %@ context is active with expiration date: %@
%s #hal local peer info updated: %@
%s Sent MRMediaRemoteCommand %d, got %@ %@
%s reporting success
%s %s MRMediaRemoteCommandPlay did not return success %@
%s %s MRMediaRemoteCommandPlay returned success
%s Failed to prepare for StartPlayback, failing without sending MRMediaRemoteCommandPlay
%s Sending MRMediaRemoteCommandPlay to %@
%s Sent = %d mrError=%d statuses = %@
%s Sending MRMediaRemoteCommandPlay now
%s Unknown actionType %@
%s %@ %f
%s Ignoring %@ with aceId %@ because there is no completion handler. This command should only read state, and have no effect.
%s %@ overlapping commands %@
%s WARNING: No other media service found, handling everything in assistantd.
%s %@ command has explicit routes, passing to %@
%s %@ is NOT supported by %@, attempting to handle in assistantd after all
%s Handing SetQueue to %@
%s %@ %@ was not handled
%s Adding metrics info to SetQueue %@
%s Caught an exception %@ while converting metricsContext %@ to Foundation object. 
%s merging existing metricsContext dictionary
%s Value already exists for key %@, keeping it
%s merging existing non-dictionary metricsContext value of %@ under key %@
%s Successfully updated metricsContext on %@
%s Failed to update metricsContext error=%@ newContextDictionary=%@
%s sessionUUID = %@
%s Can not find an active session
%s Can not find an active session with UUID %@
%s Activating dictation session with sessionUUID = %@
%s Deactivating dictation session with sessionUUID = %@
%s Beginning dictation transcription XPC transaction because %@
%s Beginning dictation audio file XPC transaction because %@
%s Ending dictation transcription XPC transaction because %@
%s Search for active server experiments
%s Search for active client experiments
%s Search for server experiments from date %@
%s New Server Experiment Check Date: %@
%s Search for client experiments from date %@
%s New Client Experiment Check Date: %@
%s Active AB experiment for environment %d. ExperimentId: %@, DeploymentId: %@, TreatmentId: %@
%s Error enumerating active AB experiments for environment %d. Error: %@
%s Active EXP experiment for environment %d. ExperimentId: %@, DeploymentId: %lld, TreatmentId: %@, Status: %d, Date: %@
%s Error enumerating EXP active experiments for environment %d. Error: %@
%s Updated EXP experiment for environment %d. ExperimentId: %@, DeploymentId: %lld, TreatmentId: %@, Status: %d, Date: %@
%s Error enumerating updated EXP experiments for environment %d. Error: %@
%s Allocation Status Type Unknown
%s Snapshot of all Siri active experiments emitted. Total: %lu
%s No Siri updated experiments to emit
%s Snapshot of all Siri updated experiments emitted. Total: %lu
%s #hal Upgrading %@ to proximity: %@
%s #hal Adding %@ to proximity: %@
%s #hal Incorporated %lu from RP proximity: %@
%s #hal Most recent prox observation: %@
%s #hal cached %lu proximity tuples
%s #hal cached proximity tuple: %@
%s #hal cached proximity for request cleared due to timeout
%s #hal Using cached proximity
%s #hal cached proximity is empty, re-calculating based on context...
%s #hal Calculating proximity...
%s #hal cached proximity cleared
%s #hal Heard Voice Trigger
%s #hal Heard Voice Trigger expired
%s #hal Voice Trigger first pass
%s #hal Voice Trigger first pass expired
%s #hal Did not find any devices with `fromLocalDevice` set to true
%s #hal Upgrading %@ to Near because this device heard HS
%s #hal Upgrading %@ to Near because this room has a device that heard HS
%s #hal Primary Device Room Name: %@
%s Proximity by Room Name: %@
%s Not Synchronizing experiment %@ since user is not yet a participant.
%s Not synchronizing. %@ experiment ended
%s Encountered error while synchronizing %@: %@
%s Fished synchronizing configuration  %@
%s %@ has no identifier.
%s %@ has no control group.
%s Unable to select deployment group based on allocation.
%s Bad Ending Group Identifier Specified %@
%s Error downloading remote configuration plist: %{public}@
%s Connected to remote configuration plist server but got back non 200 response: %{public}@
%s Error downloading remote configuration plist
%s Error serializing plist data to dictionary: %@
%s Error no experiments specified in plist
%s Received remote configuration
%s Directory is unavailable for writing configuration cache
%s Not able to write remote configuration to cache. {writeError: %{public}@}
%s Could not deserialize configuration file %@
%s assistantIsEnabled = %d
%s dictationIsEnabled = %d
%s requestId = %@, reason = %@
%s command = %@, peer = %@, remoteExecutionInfo = %@
%s Missing executionID for %@
%s Added %@ for %@
%s Adding completion for %@
%s Calling command completion block for command %@ with error %@)
%s command = %@
%s Attempting to invoke completion block for command with msgId %@ again
%s Ignored command id %@ because request id %@ is unknown.
%s Ignored because request id %@ is unknown.
%s Ignored because commandId, requestId and block are all required.
%s Ignored post command handling block for command id %@ because request id %@ is unknown.
%s No Media plugin could be found, but one was expected. Please file a radar on Siri Frameworks.
%s Motion activity manager started: %@
%s Motion activity manager stopped
%s Invoking Request End Completion
%s Invoking Request Barrier
%s Entering request group %@ because there is no previous request and the current request is %@...
%s Leaving request group %@ because there is no current request and the previous request is %@...
%s Clearing request delegate state
%s Clearing speech delegate state
%s Interrupting current request delegate
%s Informing session it's ok to send assistant data
%s requestCompletion is set to %@.
%s requestDelegate is set to %@.
%s success = %d, error = %@
%s requestDelegate is set to nil.
%s requestCompletion invoked.
%s Interrupting current recording speech delegate
%s Waiting for recording to finish
%s Asking speech manager to release audio session...
%s Ignored releasing audio session because current client is %p and speech delegate is %p.
%s Invoking Speech Completion
%s Marking request did finish on app launch callback
%s StartSpeech msg id is %@
%s startRequest = %@
%s Understanding on device is enabled but assets are missing
%s Entering request group %@ (%@)...
%s Logging RequestLink for StartLocalRequest with requestId=%@
%s TurnId nil for local request with requestId=%@
%s Leaving request group %@ (%@)...
%s Ignoring command whose request %@ is not the current request
%s Handling command from result object cache %@
%s Missing command identifiers, asking for objects from the server
%s missing refs resolved
%s missing refs for %@ have already been fulfilled
%s GetResultObjects Response, trying to handle callbacks again.
%s Missing references still not fulfilled, failing
%s Ignore ARO for past requests
%s Failed getting result objects, error %@ request Id %@
%s Canceling current request with reason: %ld and error: %@
%s Logging Cancel for %d seconds
%s Invoking request completion on request cancelation
%s Failed to cancel cross device request %@ on %@
%s response: %@
%s Cancelling associated request...
%s Start sending metrics for %f seconds before shutting down...
%s Done sending metrics before shutting down.
%s Delaying shutdown block for %f seconds...
%s Shutting down session now...
%s Still active. Ignoring session shutdown request
%s _deviceIsLocked=%d AFHasUnlockedSinceBoot=%d ADVoiceDialingDisabledWhileLocked=%d _deviceIsShowingLockScreen=%d ADControlCenterDisabledWhileLocked=%d _isInStarkMode=%d _isInCarDNDMode=%d _isWatchAuthenticated=%d
%s Handling %@ for a request initiated on another device. (executionContext = %@)
%s Handling %@ because both ref id and request id are nil. (executionContext = %@)
%s Command %@ does not belong to an outstanding request or sync session or acoustic fingerprinting session, and an associated local execution context can not be found.
%s Command %@ does not have ref id and is not relevant cancellation command.
%s Execution context %@ does not belong to an outstanding request, and an associated local execution context can not be found
%s Execution context %@ does not have request id.
%s Ignoring %@ because it is not in scope. (executionContext = %@)
%s %@ (executionContext = %@)
type=%@
HandleCommand
%s Dispatching response to service %@
%s Searching callbacks for phone call command
%s Found phone call command
%s Call is already likely not checking again
%s No phone call command found
%s Ignoring callbacks in reply
%s We're in a callback context, asking callback manager for next commands
%s Command %@ will not be executed because service command execution is disabled.
%s Using first chance service %@ instead of originally found service %@
%s Dispatching command %@ to service %@
%s Service reply for %@ %@ %@
%s Dispatched command: %@
%s Wait for Myriad decision: %d  with reason: %@
%s Couldn't find service for %@ %@
%s Dispatching out of band service command %@ to service %@
%s Reply for out of band command %@
%s Updating with location %@
%s Got call state changed; call is in process: %d
%s Got call state changed; call is incoming: %d
%s requestCompleted = %@
%s Failing speech request on request completed since we never got a speech recognized
%s Request completed for id %@: %@ %@
%s CommandFailed for refId: %@ reason: %{public}@
%s SpeechCommand failed
%s CommandIgnored for refId %@
%s holdToTalkThresholdInMilliseconds: %@
%s ignoring server configured HTT threshold
%s first callback ACE IDs: %@
%s %@ (commands = %@)
%s Ignored %@ because request id %@ is unknown.
%s %@ timed out.
%s Start waiting for command %@ ...
%s Stop waiting for command %@.
%s Command %@ is already handled. No need to wait.
%s Done %@
%s %@, shouldCancelAssociatedRequest? %d
%s deviceConfiguration = %@
%s initialInterstitialDelay = %f
%s initialInterstitialDelayForCarPlay = %f
%s initialInterstitialDelayForVoiceTriggerOneShotWithoutAudioDucking = %f
%s hasAudioSessionActivationDelay = %d
%s audioSessionActivationDelay = %f
%s mediaPlaybackVolumeThresholdForAudioSessionActivationDelay = %f
%s audioSessionActivationDelayAboveMediaPlaybackVolumeThreshold = %f
%s Server sent Myriad device configuration. Notifying clients with state %llu
%s Server sent Myriad device configuration, but it was ignored
%s resultCandidate = %@
%s ResultCandidate for a different request. Ignoring.
%s %@ (processedAudioDuration = %f, resultId = %@)
%s selectedResultCandidate = %@ (processedAudioDuration = %f, resultId = %@)
%s speechAcceptedResultCandidateDuration = %f
%s accepted = %d
%s This is a race between a network layer RollbackRequest retry and Speech Endpointing. Ignore the RC.
%s Already accepted result candidate for request
%s ResultCandidate is out of scope in accept. Ignoring.
%s Accepted this ResultCandidate aceId: %@ refId: %@ with resultId %@
%s ServerEndpoint for a different request. Ignoring.
%s VoiceIdentificationSignal for a different request. Ignoring.
%s Updated _selectedSharedUserID from SASVoiceIdentificationSignal to: %@
%s Not updating _selectedSharedUserID with nil selectedSharedUserID from SASVoiceIdentificationSignal
%s %@ (recordUserAudio = %d, resultCandidateId = %@)
%s SpeechRecognized for a different request. Ignoring.
%s isEager %d
%s Multilingual SpeechRecognized for a different request. Ignoring.
%s Dispatching SASMultilingualSpeechRecognized command
%s SASMultilingualSpeechRecognized failed to return speech recognized command for primary language
 %@ %@
%s PronunciationRecognized for a different request. Ignoring
%s Ignoring Partial, SpeechRecognized has already been received
%s Ignoring Recognition, SpeechRecognized has already been received
%s Partial for a different request. Ignoring.
%s Failure for a different request. Ignoring.
%s Abort for a different request. Ignoring.
%s Got VoiceSearchPartialResult for something other than our current speech command. Ignoring.
%s Got voiceSearchFinalResult for something other than our current speech command. Ignoring.
%s Got suspendClientEndpointer for something other than our current speech command. Ignoring.
%s Got confirmEndpointRequest for something other than our current speech command. Ignoring.
%s Got serverEndpointFeatures for something other than our current speech command. Ignoring.
%s Got confusionNetwork for something other than our current speech command. Ignoring.
%s Got clientSetupInfo for refId %@. Ignoring. 
%s %@ %@ %d
%s Recognition failed, but we're waiting to write an audio file. Don't cancel recording
%s Clearing speech delegate in recording completion
%s Fetching location for request on a different device
%s SetRequestOrigin status: %@, for %@
%s Unable to get location from context cache
%s ttsGetSpeechSynthesisVolume = %@
%s Error occurred while getting the volume. Error=%@
%s ttsGetSpeechSynthesisVolume = %@, smartSiriVolumeContextAwareEnabled = %d
%s smartSiriVolume = %f
%s ttsSetSpeechSynthesisVolume = %@ (actionType = %@, volumeLevel = %@), smartSiriVolumeContextAwareEnabled = %d
%s Announcement notification search
%s Adding home id: %@ to notification content's user info.
%s Posting activity notification for accessory category = %@
%s Posting update-PR notification for accessory category = %@
%s extractSpeechData = %@ (speechRequestId = %@, audioOutputType = %@, startTime = %@, endTime = %@)
%s extractSpeechDataCompleted = %@ (speechDataUrl = %@), (speechData = %@)
%s error writing data %@
%s extractSpeechDataCompleted = %@ (speechDataUrl = %@)
%s data = %@ or URL = %@ are missing
%s Client timeout: %f server timeout: %f, client enabled %d, server enabled %d
%s _langaugeDetectionWaitTimer fired. Executing _multilingualSpeechRecognizedCommandHandlerBlock %@
%s %@ %@ %@
%s Suppressing reply since it was handled in callbacks
%s CommandFailed errorCode = %ld, reason %@
%s Command requires a response but it has no aceId to set as ref. Suppressing.
%s Command does not require a response, but we have a reply, so sending it along anyway.
%s Command has an unnecessary response. Suppressing
%s Ignoring session error since we're in a callback context
%s Ignoring session error (%@) because the speech manager is doing local speech recognition in dictation mode
%s Propagating session error because the speech manager is not doing local speech recognition or is not in dictation mode
%s Telling session not to retry because local dictation is active
%s Session is changing our request identifier from %@ to %@. Should not be called.
%s info = %@, context = %@
%s starting person dictation request
%s starting location dictation request
%s Sending %@ instead of StartSpeechRequest since session supports understanding on device
%s Sending %@ (origin = %@, source = %@)...
%s The device supports UOD but assets are missing for speech request
%s StartSpeech resultUUID : %@ AceID : %@
%s Skipped enable server endpointer command because ADSpeechCapturingGetUsesServerEndpointingFromRequestOptions == NO
%s Sent enable server endpointer command.
%s Location manager says we need to send location for this request
%s Location manager updated location
%s Fingerprint only request not sending start speech
%s Secure offline request not sending start speech
%s Recording Info didn't change, not sending update audio
%s firstBufferHostTime = %llu, audioSessionSetActiveEndHostTime = %llu
%s recordRoute = %@, bluetoothDevice = %@, isDucking = %d, isTwoShot = %d, speechEndHostTime = %llu
%s packets.count = %llu, timestamp = %f, count = %lld
%s Not sending audio packet to session because it has already failed and local recognition has taken over
%s Ignoring prelistening speech data from %lf. Threshold is %lf
%s endpointMode = %zd, totalPacketCount = %zd, endpointerMetrics = %@, context = %@
%s Sending %@ (packetCount = %zd, totalAudioRecorded = %f)...
%s capturingMode = %zd, context = %@
%s Post XPC event to notifyd: %s
%s Ignoring partial local recognitions because server results have arrived
%s Sending raw recognition to server %@
%s Phrases=<REDACTED>
%s Phrase[%lu]=%@
%s Utterance[%lu]=%@
%s Not handling phraseRecognition because this is a phoneme transcription request
%s Ignoring and canceling final local recognition because server results have arrived
%s Deferring final local recognition results for %f seconds while waiting for the server
%s Ignoring final local recognition because the previous request has already finished
%s Ignoring final local recognition because the server won the race
%s Giving up on final server recognition because local won the race
%s Local speech recognition failed, and so did the session: %{public}@
%s Local speech recognition failed: %{public}@
%s Ignoring local speech recognition failure because the session is still active: %{public}@
%s Myriad lost, twoshot prompt dropped.
%s QuickStop: Dismissed firing alarms.
%s QuickStop: Dismissed firing timers.
%s QuickStop: Nothing to stop
%s %@ is not supported on this platform
%s Nil payload returned by SKIMediaControlsInvocation
%s Nil RunSKE command returned by SKIDirectInvocation for context: %@, payload: %@
%s Current request ID: %@
%s QuickStop invocation completed with response: %@
%s QuickStop invocation failed with response: %@, error: %@
%s This code path should not be used. Please file a radar.
%s confidenceScores = %{private}@
%s classification = %ld, classifiedUser = %{private}@, unknownScore = %ld, duration = %ld, version = %ld, thresholdingType = %@, assetVersion = %@
%s Invalid classification: %ld
%s Using debug scores: %@
%s Using debug classifiedUser: %@
%s Using debug userIdentityClassification: %@
%s No scores found for tracked profiles.
%s Assistantd and CoreSpeech are out of sync. Attempt recovery.
%s Using cached scores: %@
%s called with nil command handler; returning
%s Unrelated reply to announced notification
%s Unrelated reply to announce call
%s Related reply to triggerless request
%s Related reply to announce call request
%s set most recent remote visible context for %@ to %@
%s Most recent remote visible context cleared
%s Trying to use language detector with language code: %@, user context: %@
%s Falling back to non LID dictation flow for reason: %@
%s Using language detector with languages: %@
%s Language detector is unavailable/disabled. Falling back to non LID dictation flow
%s %ld %@
%s context = %@ (updated)
%s options = %lu
%s Not forcing audio session inactive since we are in a phone call
%s Using default language settings: %d
%s Keeping language code the same
%s language code %@ is not supported for this device
%s language code changed from %@ to %@
%s no need to change language code to %@ because it is already set to that language code
%s output voice %@ is not supported for language code %@ for this device
%s Language code changed, using similar voice %@ to previously selected voice %@
%s Language code changed and no previous output voice selected. Using %@
%s Voice info nil
%s %@, %@
%s #WatchAuth authenticated: %@
%s configuration = %@, client = %@
%s delaying session end because there is an active request
%s ending session immediately
%s delegate %p, _speechDelegate %p, _requestDelegate %p
%s Asking command center to replace speech delegate with nil...
%s Ignored replacing speech delegate with nil because speech delegate is %p.
%s Asking command center to replace request delegate with nil...
%s Asking command center to reset request context...
%s Ignored resetting request context because current client is %p.
%s Ignored replacing request delegate with nil and resetting request context because request delegate is %p.
%s Looking up and sending the SARequestCompleted callback for %@
%s Updating with status=%@ location %@
%s No location in speechRequestOptions %@
%s Don't know how to make a local request for this info %@ %@
%s options = %@
%s [[ADMultiUserService sharedService] selectedSharedUserID] cleared on new user initiated activation
%s _associatedRequestId set to %@
%s %@ Event %ld
%s Entering speech group %@ (%@)...
%s Continue pending recording at %f (%@)...
%s Asking to play recording start alert on prelistening continue
%s Leaving speech group %@ (%@)...
%s Pronunciation Context: %@ refId %@
%s Entering _replaceSpeechDelegateWhenReady group
%s Leaving _replaceSpeechDelegateWhenReady group
%s Entering _getDictationLanguages group
%s Leaving _getDictationLanguages group
%s Dictation with session id %@ will start with primary language code %@ and dictation languages %@.
%s Ignored Dictation with session id %@ because the expected request delegate is nil and speech delegate is %@, but the actual request delegate is %@ and speech delegate is %@, delegate session ended %@.
%s Reason for cancelling the request - %@
%s Cancelling speech capture (suppressing alert: %d)
%s Trying to rollback a request, but don't have one
%s We're not the current delegate, but we have a speech completion. Will try to update in completion
%s Ignoring update speech options from invalid delegate
%s Skipped enable server endpointer command because (_currentRequest.aceId = %@) and (_speechManager.context.aceId = %@) mismatched.
%s Ignoring stop speech from invalid delegate
%s Ignoring cancel speech from invalid delegate
%s Requested command conflicts with existing: %@
%s Ignoring invalid ace command %@
%s Handling generic send commands
%s Handling generic server bound command
%s Handling generic client bound command
%s Don't know how to handle generic ace command %@
%s command = %@, delegate = %@
%s Performing commands %@ after request %d
%s Ignoring early return flag for non interrupting request
%s Create a transient root execution context %@ for locally submitted server-bound command %@.
%s Destroy the transient root execution context %@ for locally submitted server-bound command %@.
%s _selectedSharedUserID cleared in _clearContext.
%s %s
AssetFetch
%s Siri understanding on device status: %@
%s Sending fetch supported languages completion
%s Failed getting deferred objects
%s Error disabling fides: %{public}@
%s Successfully disabled DES
%s Ignoring reschedule refresh request because assistant isn't enabled
%s result = %@
%s Failed to handle remote request in %lfs
%s Failed to handle remote speech request in %lfs
%s Starting Morphun assets download for %@
%s Morphun assets for %@ downloaded successfully!
%s Morphun assets for %@ download failed.
%s Morphun assets download failure reason: %@
%s Morphun assets download failed with a nil error! (uh oh!)
%s Location authorization status for Siri is not determined, granting default authorization for Siri requests.
%s Ignoring attempt to set the language based on current system config, because we already have a language code saved.
%s No language code saved, but Assistant is enabled - saving language: %@
%s Ignoring queued language code: %@
%s Ignoring queued output voice: %@
%s Timed out fetching multi user state context
%s Score donation received: %@
%s No client, assuming success and returning immediately
%s success = %d, shouldSuppress= %d
%s Not ending session because of %s %s
%s Found %@ given context ID %@
%s Unable to find context ID %@ in %@
%s Skipped sending metrics to server because metrics sender is disabled.
%s Skipped sending metrics to server because the device has not been unlocked since boot.
%s Skipped sending metrics to server because we have HIPAA On-Device Dictation enabled.
%s Client disconnected, sanity checking
%s Client disconnected and no phone call underway, syncing if needed
%s command = %@, executionInfoToMatch = %@
%s matchedExecutionContext = %@
%s Canceling session for shutdown
%s Request %@ is of type %@ so must be handled on server
%s UOD is not supported and request %@ is of type %@ so must be handled on server
%s Replaced current request %@ %@ with an SARDStartServerRequest
%s Request type unsupported on Siri X UOD. Support might come soon
%s audioRoute = %@
%s volumeService = %@
%s volume = %f
%s Volume service is unavailable.
%s volume = %f, audioRoute = %@, operationType = %ld
%s success
%s identifier = %@
%s recordedAudioFileURL = %@
%s identifier = %@, offset = %f, duration = %f, outputFileType = %ld
%s offset = %f, duration = %f (effective)
%s trimmedAudioFileURL = %@
%s speechCapturingContext = %@
%s Services %@
%s Got AddResultObjects with %lu objects aceID=%@, refId=%@ 
%s  - %@ %@
%s And %lu resultObjects %@
%s The requestId=%@ is malformed for request
%s Preheating speech manager
%s assistantIsEnabled: %d -> %d
%s dictationIsEnabled: %d -> %d
%s Post (local) %@
%s Post (darwin) %@
%s Skipped post local and darwin notifications because Siri and Dictation enablement states did not change.
%s Destroy active account because Siri and Dictation are both disabled.
%s Current delta from expected activation: %lf activation: %lf
%s #hal updated snapshot: %@
%s Invalid bt product code for headphones: %@
%s Checking if route is hands free %@
%s Mute state changed %@
%s Listening for audio route changes
%s Stopping listening for audio route changes
%s Listening for mute state changes
%s Stopping listening for mute state changes
%s Use device speaker for TTS preference changed!
%s Audio route changed %@
%s Audio owner lost %@
%s Audio owner reset %@
%s *** Turning on data spinny
%s *** Turning off data spinny
%s Sync disallowed because device has not unlocked.
%s Sync disallowd because both Siri and Dictation are disabled.
%s Sync disallowd because we have HIPAA On-Device Dictation enabled.
%s Failed getting kern.bootsessionuuid with sysctlbyname() %s
%s kern.bootsessionuuid is %@
%s Duet domain and command must be non-nil: %@, %@
%s CarPlayPublisher completed with state: %ld; error: %@
%s Received CarPlay event isStart: %d
%s carPlayHasBeenActiveInLast24Hours: %d
%s totalFrameLength = %lld
%s frameOffset = %lld
%s dataByteSize = %u
%s numberOfFrames = %u (read)
%s numberOfFrames = %u (write)
%s Generating anchor for values %{private}@
%s Failed to remove timestamp at %@: %@
%s Successfully deleted item %@
%s Not Found %@
%s Failed to delete item at %@ - %@
%s homeManager = %@
%s Home manager is still syncing
%s Home owner %{private}@ home %{private}@
%s home (%{private}@) owner (%{private}@) %{private}@
%s Opt-in status: %@
%s Siri Data Sharing status is unspecified on this device, check if there's a mismatch between this and HomeKit accessory's setting and recover
%s Accessory setting thinks this HomePod is Opted-In, but HomePod is in unspecified state, resolving mismatch
%s Accessory setting thinks this HomePod is Opted-Out, but HomePod is in unspecified state, resolving mismatch
%s %@ value is null, no recovery needed
%s %@ setting does not exist on this HomePod, no recovery needed
%s Home is not present
%s primaryUser previous settings %{private}@ for home (%@)
%s primaryUser new settings %{private}@ for home (%@)
%s #multi-user _updateHomeUserSettings- MultiUserSetupHomepodUserAddedToHome primary user
%s Secondary user previous settings %{private}@ for home (%@)
%s Secondary user new settings %{private}@ for home (%@)
%s Voice ID setting is ON for %{private}@
%s #multi-user _updateHomeUserSettings- MultiUserSetupHomepodUserAddedToHome secondary user
%s currentUserSettings %{private}@ for home (%@)
%s Voice ID setting is ON for current user %{private}@
%s Start sharing
%s Settings (%@)
%s HomePod = %@
%s accessory = %{private}@
%s preferredMediaUser is not available, falling back to use home owner (%{private}@) as default
%s Unable to determine preferredMediaUser at this time for current home (%{private}@), home owner not available. Not setting preferredMediaUser for accessory (%{private}@)
%s Found sharedUserID (%{private}@) for homeUserID (%{private}@)
%s sharedUserID not found for homeUserID (%{private}@), likely not enrolled in MultiUser, setting homeUserID (%{private}@) as preferred media user
%s Error (%@) looking up sharedUserID for homeUserID (%{private}@). We will only set homeUserID
%s Unknown accessory type, ignoring
%s currentHome:%@
%s Setting is already VoiceID=%d
%s Setting VoiceID=%d
%s Settings operation completed with (%@) value (%d)
%s HMHomeManager not ready
%s Unable to look up for accessory in home because the identifier is nil.
%s Unable to look up for accessory in home because home manager is still syncing data.
%s home:%{private}@
%s accessory:%{private}@
%s found accessory
%s %@ -> %{private}@ (%{private}@)
%s currentAccessoryInfo: %@ -> %@
%s Could not fetch multiuser metrics due to error %@
%s Got metrics from homed %@
%s status is %d
%s homeManager is %@
%s home is %{private}@
%s Siri data sharing status: %@
%s %@ setting not found for this HomePod, ignoring
%s _currentHome (%@) home (%@)
%s First time setting HomePod accessory (%{private}@) because the setting has not been set before
%s Unable to set opt-in status for accessory (%{private}@), with error %@
%s Success setting Siri data sharing status (%ld) for accessory (%{private}@)
%s Not setting HomePod accessory (%{private}@) setting (%@) because it's already a known value of (%@)
%s Not setting (%{private}@) because the setting does not exist for accessory (%{private}@), so we won't touch it
%s Received a share URL
%s %{private}@
%s %{private}@ %{private}@
%s Unable to get accessoryIdentifier from AFCommandExecutionInfo: %@
%s Created homeContext with entities %@ 
currentHomes %@
%s Current accessory is not found in the access control list.
%s edgeDetectorID = %@
%s state: %llu -> %llu
%s Not sending SAAISearch because aidHelper said not to
%s Scheduling partial result acoustic ID timer
%s Canceling speech request because we have an acoustic identification but no partial results
%s origin = %ld client = %@ requestInfo = %@
%s deviceIdentifier = %@, messageType = %@
%s Execute NL on server %@required for connection open timeout
%s Failed to register for ringer switch state change
%s Nil instrumentation class provided
%s Unsupported instrumentation class provided %@
%s Reporting missing DeviceFixedContext > siriDeviceID to ABC
%s assistantIdentifier: %{private}@
%s has %ld settings, but can only handle one. Dropping all but the first on the floor.
%s has %ld setting changes, but can only handle one. Dropping all but the first on the floor.
%s metrics = %@
%s offlineIdentifier = %@
%s Setting refId to %@ from session request %@
%s reply = %@, command = %@
%s replyCode = %ld
%s callbackForReply = %@
%s Adding flowCommand %@
%s missingReferences %@
%s callbackCommands = %@
%s Received -logConnectionOpenWithConnectionType: with no corresponding -logConnectionStart. Unable to determine how long it took to open the connection.
%s Received -logVoiceRecordingEnd with no corresponding -logVoiceRecordingStart. Unable to determine how long voice recording lasted.
%s Received -logVoiceSendEnd with no corresponding -logVoiceSendStart. Unable to determine how long voice transfer lasted.
%s Received -logSpeechRecognized with no corresponding -logVoiceRecordingEnd. Unable to determine duration since voice recording completed.
%s Received -logSpeechRecognized with no corresponding -logVoiceSendEnd. Unable to determine duration since voice send completed.
%s Unable to submit AWD metric 0x%lx
%s Hot-ship metric 0x%lx does not respond to -setTimestamp:. Will not set timestamp.
%s request Id: %@, from remote: %d
%s Falling back to startSpeechRequestWithAssistantId:requestId:inputOrigin:
%s SRD has not implemented sendRequestContextWithAssistantId:requestId:audioSource:audioDestination:isEyesFree:isVoiceTriggerEnabled:isTextToSpeechEnabled:isTriggerlessFollowup:bargeInModes:approximatePreviousTTSInterval:deviceRestrictions: yet
%s SRD has not implemented requestFailedWithAssistantId:requestId: yet, failling back to cancelRequestWithAssistantId:requestId:
%s SRD has not implemented startSessionWithAssistantId:languageCode:understandingOnDevice: yet, falling back to implementation without understandingOnDevice
%s SRD has not implemented startUnderstandingOnServerRequestWithAssistantId yet
%s SRD has not implemented startDirectActionRequestWithAssistantId yet
%s SRD has not implemented startTextRequestWithAssistantId yet
%s SRD has not implemented startCorrectionSpeechRequestWithAssistantId yet
%s SRD has not implemented startUnderstandingOnServerTextRequestWithAssistantId:requestId:inputOrigin:utterance:
%s Invalid notification. applicationID %@, bulletinID %@
%s FBF enabled: %d
%s Not logging event %@ because it has no associated time. Context: %@
%s Not logging instrumentation event %@ because we have HIPAA On-Device Dictation enabled: %@
%s Attempted to log nil instrumentation event.
%s Not logging instrumentation event %@ because it has no associated time. Turn context: %@
%s Not logging instrumentation type %@ because it is of an unknown type. Context: %@
%s Completed boosting event producer queue %@
%s Failed to serialize context %@ to JSON due to exception %@.
%s Failed to serialize context %@ to JSON due to error %@.
%s An exception has been raised during the execution of the context provider block for logging event (name = %@, timestamp = %f): %@
%s Failed to serialize notification %@: %@
%s Sending xpc message for %@
%s Unable to send xpc message for %@
%s reason: %@
%s deactivation requests are currently only supported for CarPlay.
%s unspecified deactivation reason %li. Ignoring.
%s Sending xpc message for request deactivation.
%s Unable to send xpc message for request deactivation.
%s Allow all notifications to be announced. This should only be used for testing.
%s Always Opportune so marking as eligible setup. This should only be used for testing.
%s Eligible capabilities changed, notifying observers
%s Eligble Setup: %lu
%s Timed out fetching eligible setup
%s Always Opportune, requests can be handled. This should only be used for testing.
%s Request can be handled: %d
%s Timed out fetching request can be handled
%s Notifying %lu observers, request can be handled? %d
%s Using default musicPersonalizationToken since we didn't find one for preferredMediaUserSharedUserID or it wasn't set
%s Failed to init device authentication session.
%s Ignoring request to prepare
%s Error during handshakeRequestWithCertificateData: %{public}d
%s Attempted to init with nil sessionInfo
%s completeWithHandshakeResponse failed with %@
%s Error signing data: %@
%s Fetched supported locales - %@
%s Fetched supported locales (Simulated) - %@
%s Don't know how to set push off request payload
%s Using debug voiceID scores
%s Constructing voiceID scores
%s All provided scores are 0, defaulting to unknown user
%s Handling command (%@) for domain (%@)
%s Input language code is nil, calling completion with nil assets status
%s Retrieving asset status for %@ with timeout of %f seconds
%s Timed out retrieving asset status. Retuning asset status dict as unavailable for all asset types
ASRAssetCallback
%s Updating speech asset status: %@
NLAssetCallbackAvailable
%s NL asset became available for %@
NLAssetCallbackUnavailable
%s NL asset became unavailable for all locales
RegisterAsset
%s Registering ASR delegate
%s Registering NL delegate
%s Registering morphun delegate
%s Retrieved asset status ASR: %u, NL: %u, Morphun: %u
%s ADAssetManager is already deallocated, cannot update asset status
%s Error getting Morphun asset status: %@ for language %@
MorphunAssetCallback
%s Morphun assets subscribe %@ for %@
%s Saving date when %@ assets are first known to be needed
%s For measuring asset fetch time, status for %@: ASR=%u NL=%u Morphun=%u
%s Asset fetch for %@ began at %@ and took %u seconds
%s Emitting asset prepared event
%s %@, error: %@
%s anchorsToSync: %@
%s Forcing a reset on key %@
%s Ignoring sync chunk for service %@ that's not our current service %@
%s Ignoring sync chunk for ID %@ that's not our current ID %@
%s Sync manager couldn't find connection for anchor key %{public}@. Moving on.
%s Preparing sync with ID %@ for reasons: %@
%s Anchors in queue: %@ for reasons: %@
%s Sync Manager isn't waiting on a continue, ignoring request
%s Continuing sync
%s Canceling sync for anchor %@
%s Ignoring sync cancel for anchor %@. Current anchor is %@
%s In progress verification has been reset
%s In progress sync has been reset
%s Too many plugins have timed out for sync, reset and try later
%s Shouldn't reach this method
%s Unsupported language code %@, but sending SAD anyway
%s generated setAssistantData anchor %@ (previous anchor %@)
%s Assistant Data matches, not sending %@
%s Got updated assistant data for session %d!
%s Sending pending commands after SAD update
%s Session is active, clearing limbo now.
%s Still waiting on SAD, postponing clearing limbo.
%s Not waiting on SAD, clearing limbo now.
%s Sending pending dormant commands now that the session is no longer dormant for session %d
%s Setting dormant state for session %d to %@
%s Pending command because session is dormant for %d
%s Waking up dormant session because inopportunistic command needs to be sent.
%s Dictation Sampling: Done decrementing total number of dictation requests by 1, for the current sampling date.
%s Dictation Sampling: HIPAA Device, Sampling is DISABLED.
%s Dictation Sampling: Sampling is DISABLED.
%s Dictation Sampling: User is NOT opted in.
%s Dictation Sampling: Selected for sampling - number of requests was 0.
%s Dictation Sampling: Selected for sampling - Sampling Date has been changed.
%s Dictation Sampling: Selected for sampling.
%s Dictation Sampling: NOT Selected for sampling
%s Dictation Sampling: Error while reading plist at location %@ - %@
%s Dictation Sampling: Error while creating directory - %@
%s Dictation Sampling: Error while creating plist file. The dictationSampledPlistPath - %@ - is returned as Directory. Should not happen.
%s Dictation Sampling: Error while writing _dictationSamplingVaribles to plist - %@
%s #hal to: %@, from: %@
%s Got alarm response %@ for request %@
%s Unable to fetch alarms with identifiers %@: %{public}@
%s Searching for alarm %@ in order to do an update
%s Asking to delete alarms with identifiers %@
%s Asking to dismiss alarms with identifiers %@
%s Failed constructing URL identifier for %@
%s Clearing sync data of type %@
%s Unable to find offline metrics plist path at path %@.
%s Unable to read offline metrics plist file at path %@.
%s Unable to initialize offline metrics plist from file at path %@ due to error %@
%s Unexpected type of initialized offline metrics plist %@.
%s Unable to create SAMetrics object from offline metrics plist %@.
%s Unable to create directory at path %@ due to error %@.
%s Unable to remove file at path %@ due to error %@.
%s Offline metrics plist file already exists at path %@.
%s Unable to serialize offline metrics plist %@ due to error %@.
%s Unable to write to offline metrics plist %@ to path %@ due to error %@.
%s Unable to exclude offline metrics plist file at path %@ from backup due to error %@.
%s offlineIdentifiers += %@
%s Unable to remove metrics plist file at path %@ due to error %@.
%s offlineIdentifiers -= %@
%s Unable to remove directory at path %@ due to error %@.
%s offlineIdentifiers = %@
%s Updating sharing opt-in status: %{private}ld
%s Resetting sessions due to hostname change
%s %@ is requesting shared data
%s companion identifier is already set in account
%s resetting peer account...
%s using cached data for companion identifier
%s unable to sync because we cannot find the companion device among our peers
%s unable to sync because there is no configured companion device
%s Updating peer assistant id: %@
%s Updating peer speech id: %@
%s Updating peer user agent string: "%@"
%s Updating peer language code: %@
%s Setting new language code from cloud data
%s Not setting language code due to previous mismatch
%s current restricted: %@ new restricted: %@
%s Updating temperature unit to: %@
%s Resetting sessions due to account settings change
%s peers: %@
%s unable to sync data from empty peer set
%s unique device id for peer: %@
%s requesting preheat because assistantId is not configured
%s %@ Sampling: dealloc - done with %p
%s %@ Sampling: Audio metadata dict is nil for %@ - %@. It will be purged.
%s %@ Sampling: enqueueAudioDataWithAudioFileName: %@
%s %@ Sampling: Failed while converting audio
%s %@ Sampling: Failed while uploading audio: %@, error: %@
%s %@ Sampling: Successfully enqueued: %@
%s %@ Sampling: makeValidWAVFile: Adding wav headers to file at path: %@
%s %@ Sampling: makeValidWAVFile: Error opening wav file for writing: %@
%s %@ Sampling: makeValidWAVFile: WAV file at path: %@
%s %@ Sampling: convertToALACWithPath: Converted to ALAC at path: %@
%s %@ Sampling: convertToALACWithPath: Couldn't open wav file (r) %@ %i
%s %@ Sampling: convertToALACWithPath: Couldn't set input file format: %i
%s %@ Sampling: convertToALACWithPath: Couldn't open %@ %i
%s %@ Sampling: convertToALACWithPath: Couldn't set output's input file format: %i
%s %@ Sampling: convertToALACWithPath: Couldn't read from input file: %i
%s %@ Sampling: convertToALACWithPath: Failure during write: %i
%s %@ Sampling: convertToALACWithPath: Failure during write, so returning nil: %i
%s %@ Sampling: ALAC file at path: %@
%s Dictation Sampling: Audio metadata dict is nil for %@ - %@
%s Dictation Sampling: dealloc - done with %p
%s Dictation Sampling: Stopping adding audio samples after adding %ld bytes since _shouldStopAddingSamples was set
%s Dictation Sampling: Sending audio data of size: %ld, chunkSize: %ld, maxChunkSize: %ld
%s Dictation Sampling: Error while reading file - %@
%s Dictation Sampling: Done reading audio file and adding audio samples.
%s Dictation Sampling: Failed reading audio file and adding audio samples.
%s Dictation Sampling: Error while sending audio to server %@ - %@ - %@
%s Dictation Sampling: Done with sending audio to server. Deleting %@
%s Dictation Sampling: adSpeechRecordingDidFail for folder - %@ - %@
%s %@ Sampling: Unsupported ADSpeechSamplingType
%s %@ Sampling: Error while reading metadata plist at location %@ - %@
%s %@ Sampling: Failed trying to wrap and emit top-level ASR SELF event because event type was not mapped to loggable message type in the ASR SELF schema.
%s %@ Sampling: Wrapping and logging an ASR SELF event of type %@ with asrId %@
%s %@ Sampling: Number of audioDataFoldersToBeSentToServer: %ld
%s %@ Sampling: Done with sending audio data to server.
%s %@ Sampling - Deletion: Unsupported ADSpeechSamplingType
%s %@ Sampling - Deletion: Start deleting old On Device sampled audio data
%s %@ Sampling - Deletion: Number of data older than %ld days that will be purged: %ld
%s Dictation Sampling: Empty folderPath %@ or could not get contents.
%s %@ Sampling - Send to server: Start processing On Device sampled audio data
%s %@ Sampling - Send to server: Unsupported ADSpeechSamplingType
%s %@ Sampling - Send to server: No data to be pushed to server. error: %@, listOfFiles=%lu
%s %@ Sampling - Send to server: Number of audio folders that needs to be pushed to server: %ld
%s %@ Sampling - Send to server: audioDataFolderPath %@ does not contain valid contents. It will be purged.
%s %@ Sampling - Send to server: No data to be pushed to server.
%s %@ Sampling: Empty folderPath %@ or could not get contents.
%s Assistant Service Connection Interrupted
%s Assistant Service Connection Invalidated
%s Using timeout of %{public}@ seconds for %{public}@
%s Plugin timed out for message %{public}@
%s message timed out, ignoring provider service error %{public}@
%s Plugin failed for message %{public}@: %{public}@
%s message timed out, ignoring plugin reply %@
%s Bad plugin response %@
%s Plugin timed out for sync with info %@
%s Plugin already timed out for sync
%s %@ Sync failed for info %@: %@
%s %@ failed to fetch sync snapshot for info %@: %@
%s Stopping timer %@ now...
%s Timer %@ was already stopped %lu times, add one more time.
%s Resetting timer %@ now...
%s Timer %@ was still stopped %lu times.
%s Ignoring sync chunks as we have no chunk handler. (pre=%@, post=%@, validity=%@, updates=%@, deletes=%@)
%s voiceIdentification is %d
%s Reading stored MeCard: (%@)
%s No stored MeCard found
%s Saved MeCard:%@
%s Returning MeCard:%@
%s %@ handling %@
%s No transformed requests returned from request transformer %@ for command %@
%s Got response %@ (error=%@) for command: %@, handled by service: %@
%s RequestId: %@, fromRemote: %d, Last handled context: %@
%s Dismissing UI for remote request %@: %@
%s response: %@, error: %@
%s Request delegate unable to handle command. Allowing fallback handler a chance
%s No request delegate to handle command
%s This command is not supposed to be handled by assistantd
%s This command is not supposed to notify others of arrival
%s Unsupported notificationType: %@
%s Handled command %@ with response %@ and error %@.
%s Error resolving sound URL for SAUIPlayNotificationSound
%s Related reply to announce incoming request
%s Error activating audio session: %@
%s Enqueued playback %@ with %@
%s Starting playback %@
%s Started playback %@
%s Calling completion 1.3 second after playback started: %@
%s Failed playback %@: %@
%s Finished playback %@
%s Forcing Audio session inactive
%s Skipped register XPC activitiy for SyncNow because the process is running as an instance of a multi-instance service.
%s sync now xpc activity handled
%s sync now xpc activity registered
%s Skipped register XPC activitiy for SyncUrgent because the process is running as an instance of a multi-instance service.
%s SyncUrgent xpc activity handled
%s SyncUrgent xpc activity registered
%s Skipped register XPC activities because the process is running as an instance of a multi-instance service.
%s Failed setting activity state to continue
%s Failed setting activity state to done
%s Deferring activity:%@ deferred:%@
%s setting new daily criteria due to difference from checkin criteria
%s setting new peer fetch interval on initial checkin
%s Backing off to new interval %lld from %lld
%s setting new companion fetch interval on initial checkin
%s Assistant is now enabled, clearing destroy job
%s Did not log AssetDailyStatus event because the device is never unlocked since boot.
%s Running 'com.apple.siri.xpc_activity.metrics-sender' activity
%s Running 'com.apple.siri.xpc_activity.experiment-configurations.syncing' activity
%s Device does not support MultiUser, skipping %s registration
%s Running '%s' activity
%s %s activity error: %@
%s Registering %s activity
%s %lf
%s service %@ at index %d of count %d
%s service %@ at index %d of count %d complete
%s Service %@ still has safety block, timing out
%s %@ ---> %@
%s %@ <--- %@
%s deviceID = %@, request = %@
%s assertionUUID = %@
%s success = %d
%s No metrics to send.
%s Attempted to send metrics when system is busy.
%s Attempted to send metrics when Assistant and Dictation are disabled.
%s Attempted to send metrics when HIPAA compliance for On-Device Dictation.
%s Attempted to send metrics when session is inactive and active session is a requirement.
%s Sending metrics (%@:%@)...
%s Sending metrics (%@)...
%s Sent metrics (%@:%@).
%s Sent metrics (%@).
%s Failed to send metrics (%@:%@).
%s Failed to send metrics (%@).
%s NO (!assistantIsEnabled && !dictationIsEnabled)
%s NO (callIsLikely == YES)
%s NO (isInCall == YES)
%s NO (hasCurrentRequest == YES)
%s NO (hasActiveClients == YES)
%s NO (isRequestDelaying == YES)
%s YES
%s Local eager candidate log context: %@
%s Trying to commit nil interaction metrics!
%s limit = %f, requiresUnlimitedPower = %d, requiresActiveSession = %d
%s Skipped sending metrics to server because it is already sending.
%s Skipped sending metrics to server because the session is not active.
%s Failed to purge deleted analytics events with timestamp before [%@] due to error %@.
%s Failed to checkpoint analytics store due to error %@.
%s Done sending metrics to server.
%s Begin sending offline metrics...
%s End sending offline metrics.
%s Begin sending analytics event streams...
%s End sending analytics event streams.
%s Skipped sending analytics event streams to server because time limit is reached.
%s Skipped sending offline metrics to server because time limit is reached.
%s Attempted to send offline metrics when time limit is reached.
%s Attempted to send offline metrics when system is busy.
%s Attempted to send offline metrics when Assistant and Dictation are disabled.
%s Attempted to send offline metrics when HIPAA compliance for On-Device Dictation.
%s Attempted to send offline metrics when the device is on battery.
%s Fetching next offline metrics...
%s Fetched next offline metrics. (offlineIdentifier = %@, metrics = %@)
%s No next offline metrics was fetched.
%s Remaining batch runs: %lu
%s Attempted to send analytics event stream when time limit is reached.
%s Attempted to send analytics event stream when system is busy.
%s Attempted to send analytics event stream when Assistant and Dictation are disabled.
%s Attempted to send analytics event stream when HIPAA compliance for On-Device Dictation.
%s Attempted to send analytics event stream when the device is on battery.
%s Fetching analytics event stream UIDs...
%s Failed to fetch analytics event stream UIDs due to error %@
%s No analytics event stream UIDs was fetched.
%s Fetched %tu analytics event stream UIDs %@
%s Using prioritized event stream UID %@
%s Using current event stream UID %@
%s Converting %tu analytics events to Events metrics...
%s Recorded speechId was %@, using current %@
%s Converted %tu analytics events to Events metrics %@
%s Ceasing to process events from delivery stream %tu.
%s Event record process complete for delivery stream %lu, moving on to next iteration
%s Converting %tu analytics events to SendInstrumentation...
%s Converted %tu analytics events to SendInstrumentation metrics %@
%s SendInstrumentation command %@ failed due to error: %@
%s SendInstrumentation command %@ failed due to response: %@
%s Converting %tu analytics events to SendInstrumentation(Generic)...
%s Converted %tu analytics events to SendInstrumentation(Generic) %@
%s SendInstrumentation(Generic) command %@ failed due to error: %@
%s SendInstrumentation(Generic) command %@ failed due to response: %@
%s Ceasing to process events from all delivery streams.
%s Fetching 128 events from event stream with UID %@ speechId %@ in delivery stream %tu
%s Failed to fetch analytics events in delivery stream %tu due to error %@
%s No analytics events was fetched from event stream with UID %@ in delivery stream %tu.
%s Fetched %tu analytics events from event stream with UID %@ in delivery stream %tu.
%s Failed to delete %tu sent analytics events from event stream with UID %@ in delivery stream %tu due to error %@.
%s DailyDeviceStatus published
%s eventInfo %@ 
%s Assistant and Dictation are disabled. Dropping DailyDeviceStatus.
%s HIPAA On-Device Dictation enabled. Dropping DailyDeviceStatus.
%s Sending engagement feedback "%@" for aceId %@
%s Fetching Apple Music subscription status for the active account
%s Apple Music subscription status for the active account is %@
%s Error fetching AppleMusic subscription status for the active account: %{public}@
%s heartbeat wrapper: %{private}@
%s Reporting missing DailyDeviceStatus > siriDeviceID to ABC
%s Fetching enrolledUsers info: %{private}@
%s No enrolledUsers in sharedService
%s Fetching ICUserIdentity for sharedUser: %{private}@
%s Fetching Apple Music subscription status for ICUserIdentity: %{private}@
%s Error fetching AppleMusic subscription status: %{public}@
%s No userIdentity for sharedUser: %{private}@
%s no DSID for home ID : %{private}@
%s Error ic_storeAccountForHomeUserIdentifier %{public}@
%s output voice changed from %@ to %@
%s no need to change output voice to %@ because it is already set to %@
%s Not updating auto-downloaded voice assets because the platform doesn't support TTS
%s Substituting subscription for output voice '%@' with subscription for preferred Siri voice '%@'
%s unknown response %@
%s _currentSpeakable: %@
%s Always Opportune: Forcing all speakables to be spoken
%s Timeout: could not execute opportune speaking models in time (%f sec)
%s _currentSpeakable is nil while executing opportune speaking models, this is likely cause by timeout (length: %f sec)
%s Already loading models
%s loading model with type: %@
%s Loaded model on remote: %@
%s Loaded model into assistantd: %@
%s Unsupported model type: %@
%s Connection to Opportune Speaking Model Service interrupted
%s Connection to Opportune Speaking Model Service invalidated
%s Failed to communicate with Opportune Speaking Model Service: %@
%s model with identifier %@ returned score: %f speakable: %@
%s #hal from = %@, to = %@
%s #hal call onSpeaker=%d
%s #hal Previous callState: %@, onSpeaker: %d
%s      #hal New callState: %@, onSpeaker: %d
%s Requesting background action %@
%s Received response from handleCommand: [%@]
%s HandleCommand failed with success:%d, Error:%@
%s Command Response is null (ignoring)
%s Response command does not have jsParameters property (ignoring)
%s Command response: [%@], js parameters: %@
%s ActivityDispatcher completion Error status: %@ (null is good)
%s No service connection for command %@ identifier %@
%s Can't route to system service for command %@ identifier %@
%s Found service %@ for command %@ in domain %@
%s Service does NOT use AMOS for command
%s Services uses AMOS, but wants to intercept command
%s Service uses AMOS for command
%s Couldn't send SADOCommand %@ to service %{public}@
%s Unexpected response from service. Expecting %{public}@, got %{public}@ error: %{public}@
%s Retrieve looking in amos for key %@
%s Retrieve going to bundle for remaining identifiers %@
%s Unexpected count of retrieved objects: %@
%s Successfully retrieved object from service %@
%s Updated retrieved object to %@
%s Failed to retrieve object from service. status: %{public}d
%s Updating store object %@
%s Going to bundle for object update
%s Removing object with identifier %@ old identifier %@ from amos
%s Object not found in AMOS %@
%s Committing %@ with oldId %@
%s Keeping committed object around %@
%s We don't know how to generically punch out to domain objects. A non-ui plugin needs to handle this.
%s Unsuccessfully tried to handle non AMOS command as AMOS %@
%s Handling message: %@
%s Resolving deviceFixedContext for message: %@
%s Resolving siriAccountInformation for message: %@
%s Handling "%s" notification
%s Failed to listen to ProfileListModification change
%s Language changed to %@
%s Setting up MultiUser listener
%s %@ MultiUser Connection does not have required entitlements.
%s %@ MultiUser Connection Connected (pid=%d])
%s MultiUser Connection Invalidated (pid=%d)
%s MultiUser Connection Interrupted (pid=%d)
%s SharedUserId of primary user changed. Resetting primary user.
%s userSettings = %{private}@
%s Error when removing user (%@)
%s New user participating in multi-user
%s Triggering download
%s Download completed, success: %@
%s liveOnOnboardedProfilesDidChange = %@
%s _currentLanguage = %@
%s allUsers count = %lu
%s user = %@
%s Removed (%@) with error (%@)
%s Counts are same, but users are different. Falling down to best effort
%s Added %@
%s There was an error %@ adding %@
%s Configured LiveOn Users.
%s primaryUser key (%@), value (%{private}@)
%s sharedUser = %{private}@, homeUserUUID = %{private}@
%s NO shared users
%s Configured Cloud Synced Users.
%s Skipping _forceCloudSyncedUserDownload!
%s Current language %@ not supported for multi-user
%s Tracking voice profile in-flight for %{private}@. Total profiles in-flight: %lu
%s Untracking voice profile in-flight for %{private}@. Total profiles in-flight: %lu
%s Untracking all UUIDs for in-flight voice profiles. Total profiles in-flight was: %lu
%s allUsers = %lu
%s Voice Profiles Did Update: %d
%s Home members array is empty
%s homeMember sharedUserId: %{private}@
%s homeMember enrollmentName: %{private}@
%s Adding primaryUser with sharedUserId %{private}@ and homeUserUUID %{private}@
%s PrimaryUser %{private}@ has nil aceHost
%s HomeUserID (%{private}@) voice profile is available but it's still being tracked as in-flight. Stop tracking it
%s Adding user with sharedUserId %{private}@ and homeUserUUID %{private}@
%s SharedUser %{private}@ has nil aceHost
%s removed HomeUserID (%{private}@) voice profile is available but it's still being tracked as in-flight. Stop tracking it
%s No pitches available for HomeMembers
%s Send empty MultiUserInfo
%s MultiUserInfo profiles are in-flight: %@
%s Updating MultiUserInfo
%s allowExplicitContent: (%@) voiceIDAllowed: (%@) personalDomainsIsEnabled: (%@) unauthenticatedRequestsAllowed: (%@) for (%{private}@)
%s Missing setting for (%@) checking with HomeKit as they sometimes miss notifying us.
%s VoiceID disallowed for (%@) checking with HomeKit as they sometimes miss notifying us.
%s Missing all settings for (%@)
%s Missing setting even on fresh retrieval (%@)
%s VoiceID disallowed on fresh retrieval for (%@)
%s Active voice profile limit reached
%s Resetting sharedUserID on existing primary user since home User ID matches
%s #multi-user Logging userAddedWithSharedUserID:(%@) for primary User 
%s Secondary user exists for (%@), rewriting (%@)
%s Deleting %{private}@
%s Secondary user not added for (%@) due to conflicts
%s Secondary user added for (%@)
%s #multi-user Logging userAddedWithSharedUserID:(%@) for secondary User 
%s no shareOwnerNames
%s Adding (%@) for removal
%s Deleting shared user with home User ID (%{private}@) shared User ID (%{private}@)
%s Trying to delete the primary user with home User ID (%{private}@) shared User ID (%{private}@)
%s Multi user not found for home User ID (%{private}@) shared User ID (%{private}@)
%s Remove user with home user id %{private}@
%s Remove user with shared user id %{private}@
%s primaryUser:%@:
%s sharedUser:%@:
%s classifiedUser %{private}@ is enrolled, no cleanup needed
%s classifiedUser %{private}@ is not enrolled, its voice profile will be removed
%s Using primary user %@.
%s Using shared user %@.
%s Empty Score array from assistantId %{private}@ idsIdentifier %{private}@
%s Ghost voice profile detected for sharedUserID (%{private}@)
%s (%@)
%s (%{private}@)
%s Starting a download.
%s download status is (%d)
%s sharedUserID %{private}@
%s removing ghost voice profile for sharedUserID %{private}@
%s Unknown user will be substracted from multiuser count
%s Voice Recognition enabled users count: %ld, multi-user members count: %ld, voice profiles count: %ld, users with sharedUserId: %ld
%s Unable to gather multi-user metrics. Unable to determine home users and their voice settings
%s VoiceID disabled for existing user and we did not get a homeinfo change notification
%s We should have a user setting. File a bug.
%s AllowExplicitContent=%i for Primary user with sharedUserId=%{private}@
%s AllowExplicitContent=%i for Shared user with sharedUserId=%{private}@
%s Shared user with sharedUserId=%{private}@ not found
%s Primary user present
%s Primary user not present or home userId not found
%s Retrieving shared user id for homeUserId = %{private}@
%s Primary user present with sharedUserId = %{private}@
%s Primary user not present or sharedUserId not found
%s Found currently recognized user sharedUserID: %{private}@
%s No selectedSharedUserID found, returning nil
%s User found
%s User not found
%s preferredMediaUserSharedUserID (%{private}@)
%s Second user match found
%s Primary user not present or home user not found
%s Dropped %d in donated scores from %@ because there's no Assistant identifier.
%s Error retrieving me card: %@
%s Received %@ Changed!
%s CBController failed to find CBUUID for device with address: %@
%s Fatal error: ADCoreBluetoothManager is designed for one-time use!
%s Unable to read RSSI for peripheral %@ before timeout
%s Invalid CBCentral manager state: %ld
%s retrieving connected devices on services: %@
%s Ignoring update from irrelevant CB manager: %@, current manager is %@
%s %@ already invalidated
%s %@ connected, now reading RSSI
%s %@: %@
%s Error reading RSSI for %@: %@
%s Read RSSI for peripheral that we didn't sign up for: %@
%s Rejected %tu/%tu device context tuples.
%s Rejected %@ from %@.
%s #hal Adjusted context for %@
%s Stopwatch handler asked to handle request %@, but didn't know how
%s classifiedUser = %@
%s userIdentityClassification = %@
%s Sorted IDs: %@
%s sharedIDs dict: %@
%s Alarm handler asked to handle request %@, but didn't know how
%s Unable to bring up UI: %@
%s %p %@
%s Unable to get home announcement snapshot until a snapshot updater is registered.
%s %p snapshot = %@
%s lastPlayedAnnouncement %@ is valid with %f seconds until expiration.
%s Ignored expiration timer based reevaluation because snapshot was changed. (current = %@, expected = %@)
%s lastPlayedAnnouncement %@ is invalid.
%s %p %@ -> %@
%s announcement = %@, expirationDuration = %f
%s announcement is nil
%s announcement identifier is nil
%s timeIntervalSinceAnnouncementFinishedDate = %f
%s announcement finishedDate is nil
%s timeIntervalSinceAnnouncementStartedDate = %f
%s timeIntervalUntilExpiration = %f
%s announcement startedDate is nil
%s %d
%s stereo partner changed to: %@
%s lastWin changed to: %@
%s Received message with unhandled method type: %ld
%s Received message from device not in stereo pair: %@
%s Received message with unknown method name: %@
%s Received malformed lastWin data
%s Unexpected response %@
%s Retrying %lu naked commands %@
%s Redirecting %@ to %@
%s peer type %@ peer version %@
%s Adding metrics
%s Starting connection.
%s Hostname invalid in configuration
%s Account is being destroyed use default connection policy and clear our dns settings.
%s Connection policy expired at %@; ignoring it
%s Connection policy hostname %@ does not match account hostname %@; ignoring policy
%s Connection policy blacklisting timed out
%s Not using connection policy
%s Connection policy in use
%s Connection policy not in use
%s No custom connection policy; using default
%s Connection policy has no expiration date; ignoring it
%s Connection policy has no hostname; ignoring it
%s No cached validation data beginning eager auth
%s connectionType=%@
%s Received object %@
%s Ignoring connection close since we have an incoming retry
%s Connection closed %@
%s Connection closed with active request, treating as error
%s %{public}@ %{public}@
%s Not using a predefined server.
%s Server Unreachable
%s Error suggests bad connection policy; reverting to factory policy.
%s Got redirect %@ for %@
%s Ignoring redirect %{public}@ for %{public}@
%s Setting failure count of %d
%s Changing requestId from %@ to %@ 
%s Retrying %lu objects on session failure
%s Resetting retry manager
%s Not retrying shouldRetry %d retryableError %d
%s Resetting cached certificate data due to cached version not matching current version.
%s Resetting cached validation data due to cached version not matching current version.
%s Session data has expired %@
%s Validity is valid for %d seconds %@
%s Failed to persist validation data
%s %@ can't be remapped. Skipping
%s Remapping retry manager from %@ to %@
%s creating rollback request
%s Retrying after %lf seconds, now %lf error %@
%s Backing off for %lf seconds
%s Server connection is no longer current. ignoring backoff
%s Retrying after backoff
%s State has changed, not proceeding with retry.
%s Assistant needs destruction, sending destroy
%s Exceeded bad cached cert retry attempts, failing authentication
%s Exceeded NAC cert retry attempts, failing authentication
%s Authenticator is unable to prepare.
%s Sending request for certificate data
%s Have cached certificate data, preparing
%s Authenticator is still preparing, let's wait
%s Authenticator is prepared, but we still need session info
%s Authenticator is ready
%s Setting cached authentication data with duration %lf
%s We have no pending commands holding
%s Not continuing with authentication as session is already active
%s Session has already authenticated. Resetting authenticator to do it again.
%s Holding off on session start because we're dormant
%s Starting Session
%s Skipping authentication. Disabled or on simulator
%s Using cached validation data
%s Connection opened
%s Connection not opened yet, waiting
%s We've already authenticated, reset the authenticator since it's not needed anymore.
%s Unexpected refid in validation failed, ignoring
%s SASessionValidationFailed %{public}@
%s No certificate data in response trying anyway %@
%s Old session info response ignored
%s No valid sessionInfo returned
%s Saving new validity info since we're not currently authenticating
%s Assistant created response ignored
%s Assistant Loaded Version: %@
%s Looking for AppleConnect session token in SAAssistantLoaded command
%s Found AppleConnect session token in SAAssistantLoaded command - storing token in the Keychain
%s Assistant Loaded refId does not match our saved assistant command
%s Waiting on a pending destruction, doing nothing
%s Assistant Destroyed
%s Restarting connection because destroy came in during active request
%s Couldn't find the requested assistant %@; creating a new one
%s Assistant not ready.
%s local ACEHost:%@ setConnectionHeader ACEHost:%@
%s Failed loading/creating assistant %@ elapsed time %lf
%s Retrying after assistant failure
%s Assistant failure (%{public}@). Limit reached, returning error
%s Ignoring command failed for limbo id %@
%s Error sending command %@ %{public}@
%s Reporting missing LoadAssistant locale to ABC
%s assistantId: %{private}@ speechId: %{private}@ with language %@
%s Successfully populated internal auth related properties of SALoadAssistant command
%s Could not populate internal auth related properties of SALoadAssistant command. If the server requires these properties, it will respond with an SASessionValidationFailed.
%s Looking for AppleConnect service ticket in the Keychain
%s Found service ticket in the Keychain - adding it to SALoadAssistant command, and deleting the Keychain entry
%s No AppleConnect service ticket found in the Keychain. Looking for a session token instead.
%s No session token found in the Keychain
%s Found session token in the Keychain
%s assistant id mismatch
peerAssistantID:%@
primary multiuser assistantID:%@
%s assistantd id: %@ user agent: %@ language: %@ siri enabled: %d
%s personal requests are disabled, but the companion's assistantId is unknown
%s companion identifier: %@
%s companion has siri enabled: %d
%s companion is unreachable
%s Adding shared device for (%@)
%s No homeContext to send
%s WiFi became available and we're not on a request restarting connection
%s We're in a request, we'll check for a wifi transition afterward
%s Clearing flag to switch to WiFi on request end
%s Asking delegate if we should restart on wifi
%s Switching to WiFi on request end
%s assistantId: %@ loggingAssistantId: %@ speechId: %@
%s Probing the connection
%s Using precached metrics
%s AFSiriClientState changed from %llu to %llu
%s firedTimerID = %@
%s dismissedTimerID = %@
%s fromSnapshot = %@
%s toSnapshot = %@
%s Loading local timer generation...
%s Loaded local timer generation %llu.
%s generation = %llu, limit = %llu
%s Delta pulling mode is not supported for type %@.
%s Fetching local timer snapshot...
%s Fetched local timer snapshot %@.
%s Converted to device sync snapshot %@.
%s instanceContext = %@, deviceCircleManager = %@
%s listener = %@
%s %@ Device Resolution Service Connection does not have required entitlements.
%s %@ Device Resolution Service Connection Connected (pid=%d])
%s Device Resolution Service Connection Invalidated (pid=%d)
%s Device Resolution Service Connection Interrupted (pid=%d)
%s #hal Emitted RequestLink event to sharedStream
%s #hal Emitted commandStarted event %@ to sharedStream
%s #hal Emitted commandEnded %@ to sharedStream
%s #hal Emitted AFAnalyticsEventTypeDaemonContextCrossDeviceCommandHandled event with context: %@
%s #hal Emitted commandFailed %@ to sharedStream
%s #hal cacheDeviceContextProximity getContextAndProximitySnapshotForCurrentRequest result: %@
%s Missing assistantId for device: %@
%s Unable to create XPC listener from %@.
%s %{public}s
%s Ignoring unexpected event
%s Client missing entitlement %@
%s Tether attached %p
%s Message!
%s Clearing tether %p
%s Couldn't decode Speex / Opus buffers for speech log at URL %{public}@
%s Simulating immediate speech capture
%s Simulating buffered speech capture, speech packets sent every %f seconds
%s isSupportedAndEnabled = %d (initial)
%s context = %@
%s Checking Stereo Pair partner to decide whether legacy audio ducking coordination should be handled...
%s No media system identifier for local system.
%s Continue to handle legacy audio ducking coordination.
%s relinquishmentContext = %@
%s assertion = %@
%s numberOfActiveAssertions = %llu (local)
%s numberOfActiveAssertions = %llu (remote)
%s numberOfActiveAssertions = 0 (local + remote)
%s isActive = %d
%s senderID = %@, reason = %@, effectiveDate = %@ (%f seconds), expirationDuration = %f
%s Audio Session Coordination is NOT supported or enabled. This message will be logged only once.
%s effectiveDate = %@ (%f), expirationDuration = %f (Time Drift Mitigation)
%s Relinquished remote assertion %@.
%s Accquired remote assertion %@.
%s Remote assertion %@ will be relinquished now.
%s senderID = %@, reason = %@, effectiveDate = %@ (%f seconds)
%s Remote assertions from %@ will be relinquished in %f seconds.
%s routeIdentifier = %@ (%f seconds)
%s groupIdentifier = %@ (%f seconds)
%s assertionCoordinator = %@, assertion = %@, isFirstAssertion = %d
%s assertionCoordinator = %@, assertion = %@, isLastAssertion = %d
%s isSupportedAndEnabled = %d (updated)
%s notification = %@
%s deviceID = %@, reason = %@
%s keepAliveDeviceIDs += %@
%s keepAliveDeviceIDs -= %@
%s reason = %@
%s keepAliveDeviceIDs = %@
%s audioSessionState = %@
%s roomName = %@, reason = %@
%s roomName: %@ -> %@
%s mediaSystemIdentifier = %@, reason = %@
%s mediaSystemIdentifier: %@ -> %@
%s mediaRemoteGroupIdentifier = %@, reason = %@
%s mediaRemoteGroupIdentifier: %@ -> %@
%s mediaRemoteRouteIdentifier = %@, reason = %@
%s mediaRemoteRouteIdentifier: %@ -> %@
%s currentOrUpNextDateInterval = %@, reason = %@
%s currentOrUpNextDateInterval: %@ -> %@
%s effectiveDate = %@ (%f), expirationDuration = %f
%s effectiveDate = %@, expirationDuration = %f, reason = %@
%s qualifiedInRangeDeviceIDs = %@
%s expirationDuration = %f, reason = %@
%s effectiveDate = %@, reason = %@
%s qualifiedOutOfRangeDeviceIDs = %@
%s qualifiedDeviceIDs = %@
%s mergedDeviceIDs = %@
%s index = %tu
%s count = %tu
%s Starting %@...
%s Stopping %@...
%s Firing %@...
%s Effective date is in the future, no need to send keep-alive request.
%s Effective date is current or in the past, sending keep-alive request...
%s assertion = %@, isFirst = %d
%s suppressesAudioSessionActivation = %d
%s Asking delegate %@ to prepare audio session because remote assertion %@ is acquired and audio session is not active.
%s assertion = %@, isLast = %d
%s Asking delegate %@ to release audio session because the last local assertion %@ is relinquished and no remote assertion exists.
%s reason = %@, numberOfPendingAssertions = %tu, numberOfActiveAssertions = %tu
%s pendingAssertions = %@
%s activeAssertions = %@
%s currentOrUpNextDateInterval = %@
%s Asking delegate %@ to release audio session because the last remote assertion %@ is relinquished and no local assertion exists.
%s Malformed info plist value for key %{public}@ in bundle %{public}@
%s Deferring context clearing until we have a valid connection for %@
%s connection reset requested...
%s connection reset
%s Failed to create the sync flag for %@ at %@
%s deviceIdentifier = %@
%s deviceIdentifier = %@, fromGeneration = %llu, toGeneration = %llu
%s Loading synced timer generation for device %@...
%s Loaded synced timer generation %llu for device %@.
%s deviceIdentifier = %@, incrementalChanges = %@
%s Applying incremental changes is not supported for type %@.
%s deviceIdentifier = %@, snapshot = %@
%s Loading synced timer storage for device %@...
%s Loaded synced timer storage %@ for device %@.
%s Dumped device sync snapshot %@ from device %@ to synced timer storage %@.
%s Show next event handler asked to handle request %@, but didn't know how
%s Unable to get the shared instance of EKPreferences.
%s Ignoring App notification for placeholders
%s Ignoring App notification for forced update
%s Ignoring CK notification because there's no correction profile change
%s User hasn't used Siri or dictation in the past %tu days, not syncing for %@
%s Rejecting remote command because Siri is disabled
%s peer = %@, command = %@, remoteExecutionInfo = %@
%s response = %@
%s Executing command %@ on device for assistant id %@
%s preferred routing options: %@, allows relay: %d
%s Malformed command dictionary: %@
%s Response came back from the companion: %@
%s No eligible devices from primary user found for specified device types. Skipping.
%s Executing command on primary user device with identifier: %@
%s Executing command on shared user companion device with sharedUserID: %@
%s Executing command on device for assistant id: %@
%s Routing to multiuser device (%{private}@ / %{private}@)
%s No reachable multiuser device
%s Unable to find remote device for execution
%s Error: %@
%s Unable to find command for remote execution
%s Suppressing response/error, as suppressResponse is set on %@
%s shouldSendToPrimaryUser: %@ (isSharedUserNil=%@, isServerSelectedUserEqualToPrimaryUser=%@, isServerSelectedSharedUserInvalid=%@)
%s Unable to use boot session UUID as stream UID, falling back to in memory UUID instead.
%s streamUID = %@
%s Skipping check due to storage lock.
%s Error counting queued event records in analytics db: %@
%s Triggering ABC for upload failure since %@, recordCount: %lu, senderDisabled: %d
%s Hub events logged but no speechId currently available. Staging events using NULL in place of speechId.
%s Boosting events on connection: %@ pid: %d
%s Finished boosting all analytics connections
%s Failed to save %tu events to the analytics store due to error %@.
%s Connection disrupted for pid: %d, aborting boost request.
%s Timed out after %f seconds waiting for pid: %d
%s Dont unstage the events and send them, because we have HIPAA On-Device Dictation enabled
%s Attempted to suspend events staging while already suspended.
%s Attempted to resume events staging while not suspended.
%s Haven't ended previous fuzzing interval, unable to begin new one
%s Fuzzing time interval created with start time: %lld streamUID: %@
%s Haven't start a fuzzing interval, unable to end
%s Fuzzing time interval ended with end time: %lld streamUID: %@
%s Finished flushing, removing time interval
%s Created link at %@.
%s Failed to create link at %@ due to error %@.
%s Failed to create directory at %@ due to error %@.
%s Deleted link at %@.
%s Failed to delete link at %@ due to error %@.
%s No layout elements
%s Failed to snooze notification %@ with error %@
%s No identifier specified for %@
%s Failed to post notification %@ with error %@
%s Failed to connect to notification service client: %@
%s No response handler for %@
%s Got context for pid %d
%s %s push context for %s %d
%s Push context time out for pid %@
%s ACE domain signal request handler asked to handle request %@, but didn't know how
%s Initial fetch took too long, timing out.
%s Manually requesting assistant data update
%s Using local store
%s Found %@ meCard locally
%s Returning %lu meCards
%s Waiting for initial meCard fetch to complete
%s meCard fetch complete, got %lu meCards
%s No actual change, ignoring me card change notification
%s Updating assistant data for me card change notification
%s Unable to get the shared instance of ACAccountStore.
%s Current store front has changed to %{private}@; updating assistant data
%s Not generating assistant data because we don't have some necessary cached data
%s SADanchor:%@
unredacted:%@
%s Dictation HIPAA MDM status changed from %d -> %d
%s Dictation HIPAA MDM status enabled: %d
%s Dictation Allowed status changed from %d -> %d
%s Dictation Allowed status: %d
%s Updating country configuration for assistant data
%s Cached voice for assistant data updated from %@ to %@.
%s Cached voice for assistant data is still %@.
%s Retrieving best available voice asset for voice info %@...
%s Retrieved best available voice asset %@ for voice info %@.
%s InProgress Output Voice download complete
%s InProgress Output Voice changed during downloaded
%s InProgress Output Voice download already completed
%s Using local identifier
%s Unable to get the local iTunes Account.
%s No store front identifier available
%s VoiceOver status changed, updating assistant data
%s Delivering event of type: %d
%s _networkURL is set to nil
%s Already establishing peer streams!
%s Ignoring completion from stale provider
%s Error: %{public}@
%s Peer Provider open complete
%s Bad Peer Header
%s Read Peer Header %@ %d
%s Already %@ peer streams
%s Already %@ network connection
%s %@ %@ %d %d
%s Falling back
%s Using fallback path, but creating new safety net
%s Will open stream with initial payload length %lu
%s opening %lu
%s open complete %ld
%s sequence number %ld doesn't match current %ld. Ignoring
%s Provider doesn't match our current provider. Ignoring
%s We no longer care about the streams we opened here
%s Stream opened with initial payload length %lu, networkOutputBuffer length %lu
%s NetworkOutputBuffer has been reset; initial payload set on this pair of streams is no longer valid
%s Waiting for peer header before restarting peer streams
%s Stale network timer firing
%s Closing potentially stale network streams
%s Network Provider
%s Peer Provider
%s Unexpected %@
%s read %lu bytes
%s error: %@
%s read peer header %@ pop %d reconnect %d
%s HTTP Header is complete
%s HTTP Header is not complete
%s Establishing network connection
%s Waiting for network connection
%s Wrote: %lu
%s no data or error, possibly an already canceled connection
%s zero length data
%s read: %lu
%s Queue %@ is already being observed.
%s queue = %@
%s queue = %@, numberOfOccurrences = %tu
%s No OTT-model representation for %@
%s No OTT-request representation for %@
%s Creating announce incoming call request
%s Unspecified announcement request type unable to create a request.
%s Creating Announce in Home request
%s Unspecified announcement type unable to create a request.
%s Skipping triggerless reply, so don't show UI. This should only be used for testing
%s Sync Verification: domain objects in toRemove list for sync verification
%s with chunk info %@
%s Sync verification got domain object with no identifier %@
%s no bundleID!
%s got %@ items for %@ from %@
%s Vocabulary updates are disabled for %@, acting as-if there are no changes.
%s %{public}@ is not allowed to sync user vocabulary of type %{public}@
%s Posting sync notification for reason: %@
%s Ignoring attempt by %{public}@ to update %{public}@
%s Removed all local user-vocabulary for %{public}@
%s User-vocabulary updates are throttled for %{public}@ not pushing delete
%s Ignoring attempt by %{public}@ to request Siri authorization while not in the foreground
%s Interrupting outstanding request for new request
%s AceId of RestartRequest is %@ requestId is %@
%s object is %@ %@
%s Can restart request if %@
%s Retrying full request
%s latestMappedRequestId is not set for %@
%s Unable to retrieve LSApplicationRecord for bundle identifier %@: %@
%s application: %@ supports %@
%s Notifying observers eligible announcement request types changed: %lu
%s Notifying observers available announcement request types changed: %lu
%s Starting activity updates
%s motionActivity updated = %@
%s Stopping activity updates
%s motionActivity = %@
%s motionConfidence = %@
%s isDriving = %@
%s Long lived client connection (%lf seconds) triggered
%s %p options = %@
%s No location information in request options %@
%s %p bluetoothDevice = %@
%s %p speechCapturingContext = %@
%s %p reason = %@
%s %p Received reply %@ for command %@.
%s %p Sending command %@...
%s %p Failure sending ace command to client %{public}@
%s %p Invoking request completion with UUID %@...
%s %p Invoked request completion with UUID %@.
%s %p Ignored invoking request completion because UUID mismatched. (_requestUUID = %@, requestUUID = %@)
%s %p success = %d, error = %@
%s %p commandGroup exists, waiting until commandGroup is done...
%s %p commandGroup is done, handling request completed with UUID %@...
%s %p commandGroup does not exist, handling request completed with UUID %@...
%s Sending intermediate error %{public}@
%s failed with Error %{public}@
%s failed registering for ringer state token %{public}u
%s ADShouldSpeak: %d Request Wants TTS: %d Server Wants TTS: %d Stark Mode: %d Car DND: %d Request Info Options: %lu Combined: %d
%s Sending should speak update: %@ to current client %@
%s Entered request group %@.
%s Left request group %@ (signal = %ld).
%s %p Sending speech recognized %@...
%s %p Sending speech partial result %@...
%s Sending speech recognition failed %{public}@
%s userInfo = %@
%s %p bluetoothDevice = %@, from = %@, to = %@
%s %@ primary earbud becomes out of ear.
%s %@ secondary earbud becomes out of ear.
%s Asking activation service to deactivate...
%s %@ is not the current client.
%s %p bluetoothDevice = %@, from = %ld, to = %ld
%s %p numberOfPresentedUIs (%ld -> %ld)
%s %p configuration = %@
%s Adding last Siri UUFR timestamp to knowledgeStore
%s Unable to add Siri UUFR timestamp to knowledgeStore: %@
%s %p Invoking overlapping request completion with UUID %@...
%s %p Invoked overlapping request completion with UUID %@.
%s %p Set new request UUID as %@.
%s %p %@ %lu
%s Ignoring due to id mismatch %lu != %lu
%s Telling ABC about %@
%s returning bundle reply %@ %@
%s Sending context to tool %@
%s Entered request group %@ for command %@.
%s Left request group %@ for command %@ (signal = %ld).
%s Don't know how to create a transcription result for %@
%s Could not register keyboard notify: %ud
%s %p audioSessionAssertion = %@
%s Dictation transaction ended in cancel
%s Sending recording failed %{public}@
%s Dictation transaction ended in remote recognition
%s Partial result %@, Speech model %@
%s No keyboard visible during dictation; cancelling recognition
%s Did recognize phrases in utterance detection mode. Recognition might not be finished yet.
%s Dictation transaction ended in local recognition
%s Sending recognition failed %{public}@
%s Sending local recognition succeeded
%s Dictation transaction for utterance detection request ended in local recognition
%s Utterance detection for live recognition not yet supported; disabling. <rdar://problem/23691545>
%s Keyboard not yet visible, delaying visibility check to first result
%s %p request completion invoked
%s Dictation requested even though it is disabled
%s Shouldn't have a pending request, continuing and canceling it now.
%s No language provided, no language specific prewarm work will be done
%s Called from outside of an XPC connection
%s Could not make recognizer
%s Connection (%{public}@) requires entitlement for pre-recorded dictation
%s Reporting issue for error %@, event %@ with context %@
%s Dictation: force offline speech recognition. Language code: %@, asset language code: %@, status: High Quality model: %@
%s Dictation: offline speech recognition not available. Language code: %@, asset language code: %@, searchRequest=%d, searchModel=%d
%s Dictation for %{public}@ is supported=%d, installed=%d on device with forced offline recognition
%s %@ created speech recognizer (instanceUUID = %{uuid_t}.16P, for background = %{BOOL}d) %@
%s %@ raw eager candidate: %@
%s Speech recognition encountered error: %{public}@
%s timestamp = %f
%s Could not read keyboard visibility status: %ud
%s Connection (%{public}@) cannot use pre-recorded dictation; needs dictation prerecorded entitlement or speech recognition entitlement
%s Connection (%{public}@) cannot use pre-recorded speech recognition; cannot start from the background
%s %@ created local speech recorder %@
%s %@ created speech compressor %@
%s Speech capturing set to %@.
%s speechState: %@ -> %@
%s recordRoute: %@ -> %@
%s deviceIdentifier: %@ -> %@
%s isAudioSessionActive = %d (likely)
%s hasActiveAudioSessionAssertions = %d
%s hasActivatedAudioSession = %d
%s Rejected releasing audio session because audio session coordinator has active assertions.
%s Skipped releasing audio session because audio session has not been activated and audio session coordinator has no active assertions.
%s Deferred releasing audio session during audio system preparation.
%s Stopping audio playback, if any
%s Stopped audio playback, if any
%s hasFetchedSmartSiriVolume = %d, hasUpdatedSiriOutputVolume = %d
%s Dictation session did complete, enabling asset fetch in subsequent requests if needed
%s Assets for %@ already exist at %@
%s Error fetching assets for %{public}@: %{public}@
%s Started fetching assets for %@
%s On assistant enabling tried to fetch offline models, got %@, error: %@
%s %@ created speech recognizer %@
%s Canceling local recognition because servers results have arrived.
%s ADSpeechManager no longer talking to delegate
%s Speech finished dropping callback
%s %@ %d %@
%s %zd %zd %@ %@
%s %@ %zd %zd %@ %@
%s Asking AVVoiceController to release its audio session now because 'releasesAudioSessionWhenRecordingStopped' is set.
%s Invoking recording stopped completion (state = %@)
%s success = %d, error = %@, info = %@
%s Will start local speech recognition with task: %{public}@
%s Could not start local speech recognition for %{public}@: %{public}@
%s Local speech recognition started for %{public}@
%s Not starting local recognizer: language %@, task %@, dictation capable %@
%s Invoking recording started completion (state = %@)
%s Ignored because speech state is %@.
%s packets.count = %llu, timestamp = %f, totalPacketCount = %lld
%s flag = %d
%s audioSessionCoordinator = %@, context = %@
%s Preparing audio session...
%s Failed preparing audio session with error %@.
%s Done preparing audio session.
%s Skipped preparing audio session because %@ has no active assertions.
%s Skipped releasing audio session because %@ has active assertions.
%s Releasing audio session...
%s Done releasing audio session.
%s Failed releasing audio session.
%s dirtySiriOutputVolumeHostTime = %llu
%s Ignoring tokens from previous recognizer
%s Processed %.2f
%s Speech skipping sending raw eager recognition candidate callback
%s Ignoring phrases from previous recognizer
%s Ignoring package from previous recognizer
%s Ignoring completion from previous recognizer
%s Invalidating local speech recognizer connection for finish
%s Expected on-device request for language %{public}@
%s Expected installed HQ prefs asset for %{public}@, installed=%u, highQuality=%u
%s No offline dictation status for language %{public}@
%s Skipping preheating because language is nil
%s Preheating speech recognizer with state = %d
%s Begin preparing audio system with context %@. (speechState = %@)
%s End preparing audio system with error %@. (speechState = %@)
%s End preparing audio system. (speechState = %@)
%s audioSessionID = %lu
%s bluetoothDevice = %@
%s Release audio session now because releasing audio session was requested during audio system preparation.
%s Begin waiting for speech recording to stop. (speechState = %@)
%s End waiting for speech recording to stop. (signal = %ld, duration = %f)
%s Begin waiting for alerts to stop. (speechState = %@)
%s End waiting for alerts to stop with error %@. (duration = %f)
%s End waiting for alerts to stop. (duration = %f)
%s Skip speech recorder preparation because releasing audio session was requested. (speechState = %@)
%s Skipped speech recorder preparation because audio system has prepared for playback.
%s Begin speech recorder preparation. (speechState = %@)
%s End speech recorder preparation with error %@. (duration = %f)
%s End speech recorder preparation. (duration = %f)
%s Begin waiting for Siri output volume to update after host time %llu...
%s End waiting for Siri output volume to update after host time %llu. (duration = %f)
%s End waiting for Siri output volume to update after host time %llu due to timed out. (duration = %f)
%s secureOfflineOnly is %d
%s mode = %zd, options = %@, context = %@
%s Asked to start recording when we're already in state %{public}@
%s mediaPlaybackVolume = %f
%s Local speech recognition forced on for Siri
%s Not using local speech recognition for Siri because the kill switch is on, or options were set
%s Doing local speech recognition for Siri
%s Not using local speech recognition for mode %ld, dictation language %@, dictationCapable %@
%s Audio power updater disabled.
%s Audio power updater enabled.
%s Audio power updater not supported.
%s Inserting will start on speech failure
%s Not using local speech recognition for recorded %@
%s Canceling speech capture
%s Recording started canceling in record start completion
%s Canceling speech capture in completion
%s Recording failed to start, ignoring cancel in completion
%s Asked to cancel when we're in state %@
%s Stopping speech capture
%s Recording started stopping in record start completion
%s Stopping speech capture in completion
%s Recording failed to start, ignoring stop in completion
%s Error: asked to stop when we're in state %{public}@
%s Started, waiting for did start to stop recording then release session
%s Recording failed to start releasing session in completion
%s Recording, stopping record to release session
%s Stopping, waiting for did stop to release session
%s Asking AVVoiceController to release its audio session now
%s onlyIfIdle = %d
%s state = %@
%s Completion is invoked by the deallocation of the safety block. Something went wrong.
%s and we're idle
%s but we're NOT idle
%s Notifications suppressed
%s Skipping local speech profile(s) update because device doesn't support it
%s Skipping local speech profile update for dictation because device only updates profile during daily sync
%s Skipping offline profile update(s) because speech recognition is active for task %@
%s Skipping user profile update, since it's only for Portrait change and it's only been %f seconds since the last requested update from Portrait.
%s Skipping user profile update for %@ because it was last updated too recently (%@) and the update reasons (%@) are not immediate
%s Continuing user profile update for %@ because it was not updated recently (%@). Update reasons: (%@)
%s Continuing user profile update for %@ because update reasons were immediate (%@)
%s No viable offline locales available for profile update
%s Perform speech profile(s) update because delay timer fired
%s Perform speech profile(s) update because coalescing timer fired
%s Skipping offline profile(s) update because speech recognition has started for task %{public}@
%s Failed to create user %{public}@ speech profile : %{public}@
%s User profile updated for %@
%s hasFetchedSmartSiriVolume = %d, forceFetch = %d
%s hasUpdatedSiriOutputVolume = %d, forceUpdate = %d
%s success: %d, reason: %@
%s Changing state from %@ to %@
%s Unknown announcement request type for request : %@
%s %@ announcementType: %@, from app: %@, on platform:, %@, Current state: %@
%s Notification is not announceable by app: %@ on platform: %@
%s Announce Notifications is globably temporarily disabled until %@ on platform %@
%s Announce Notifications is temporarily disabled until %@ for app %@ on platform %@
%s Not permitted to Announce in CarPlay, rejecting notification
%s In an announce call request, rejecting notification
%s Not reading the notification: %@
%s Ongoing Siri session, but presentation allows announcements. Enqueueing request.
%s Ongoing Siri session, not reading announce request
%s Enqueueing announcement request
%s Currently listening but new notification came in, starting new reading request
%s Forcing to always announce. This should only used for Testing.
%s Announce in CarPlay is disabled.
%s Currently announcing a call, ignoring overlapping announce call activation
%s Announce incoming call request received from: %@
%s Ignoring using Opportune Speaking Module for CarPlay.
%s Timed out waiting for a decision from Opportune Speaking Module
%s recommended action: %@ current state: %@ error: %@
%s request failed with error: %@
%s request was interrupted: %d
%s Starting announcement request: %@, previous request: %@, Sync Burst Index: %lu
%s Error starting announcement request, current state: %@
%s Command delaying already started, proceeding with reading message
%s Force delayType to be %ld. This should only used for Testing
%s We are stuck in %@ state, resetting
%s Deactivating Siri with reason: %@
%s Unexpected announcement cancellation reason: %lu. Deactivation ignored.
%s Error dismissing Siri UI client: %@
%s Can only deactivate notification announcements in CarPlay.
%s Ignoring deactivation, nil completion
%s Deactivation was requested, but announcement requests are currently not permitted while the current presentation is active. Ignoring deactivation. appId: %@, notification: %@
%s Issuing deactivate request for appId: %@, notification: %@.
%s Deactivate announcement request %@
%s Attempt to withdrawal request which is not in queue. Ignoring withdrawal.
%s Attempt to withdrawal current request. Ignoring withdrawal.
%s Withdrawal for request: %@ successful: %{bool}d
%s audio session ended, current state: %@
%s New request in the queue after reply request, starting new request
%s Audio session taken over because user began speaking, audioSessionID = %lu, bluetoothDevice = %@, error = %@
%s Time window for triggerless user reply has passed, not starting new request for user reply
%s Triggerless reply activation error: %@, result: %@
%s Triggerless reply activation complete
%s Activating with non-BT triggerless path
%s Unpsecified request delay type
%s Fetching notifications after notification with id: %@
%s Call ended while setting up announcement request, cancelling announcement
%s CarPlay's audio session voice prompt style changed while setting up announcement request, cancelling announcement.
%s Announcement request began for request: %@
%s Timed out announcing the request for %@
%s Request started for unrelated request: %@
%s Record negative feedback signal for request %@
%s Triggerless listening request cancelled: %@ during %@ phase
%s Announcement request finished for request %@
%s Record positive feedback signal for request %@
%s Announcement request ended and we have another in the queue, reading it out now, syncBurstIndex = %lu
%s Skipping triggerless reply for CarPlay by going from reading state to idle state.
%s Testing mode set to always read out and reply. Transitioning to triggerless listening and starting reply manually
%s Starting timer for triggerless reply with time window of %f seconds
%s triggerless reply, time window of %f seconds timed out
%s type = %@
%s CSOSL stopped listening unexpectedly
%s playback request: %@, current request: %@
%s Starting readout for announce call
%s Call incoming: %d
%s Incoming call ended without user responding to announcement: %d
%s Call ended while setting up announcement request
%s Announcement request or reply ongoing shutting down request
%s Call ended during triggerless listening, transition back to Idle state
%s Settings is fetching supported languages
%s On dictation enabling tried to fetch offline models, got %@ into %@
%s %@ extra assistant logging
%s Shutting down at the request of settings
%s Got sync command on connection %@
%s Got sync finished notification %@
%s Got sync verification finished notification %@
%s Experiment: %@, Error: %@
%s Received %@
%s Responding %@ %@
%s Responding %@
%s %@ %@ %lu %@
%s Setting temporarily disable announce notifications in CarPlay: %i
%s Clearing temporarily disable announce notifications in CarPlay.
%s Setting announce notifications in CarPlay type to: %@
%s Clearing announce notifications in CarPlay type.
%s Failed with error %@.
%s Done
%s request = %@
%s response = %@, error = %@
%s Smart Siri Volume is not supported on this platform.
%s Ignored because no audio category is specified in the notification %@.
%s category = %@, volume = %f, audioCategory = %@, reason = %@
%s Resetting device setup volume due to %@ audio category volume change for %@.
%s Smart Siri volume is %f.
%s needsUpdateSiriVolume = %d
%s forceUpdate = %d
%s Cached Smart Siri volume is %f.
%s Setting device setup volume to %f
%s Setting resolved volume to device setup volume %f
%s Resetting device setup volume
%s Setting resolved volume to client configured output volume %f
%s Minimum Siri volume is set to %f.
%s Maximum Siri volume is set to %f.
%s Resolved Siri volume is %f.
%s Cached Siri volume is %f.
%s Cached Siri volume is missing.
%s Ignored because current Siri volume is %f and resolved Siri volume is %f. They are close enough.
%s Invalid Smart Siri Volume: %f
%s has active request %d
%s Mini not ready.
%s Mini failure (%{public}@).
%s Mini Loaded Version: %@
%s Mini Loaded refId does not match our saved assistant command
%s Handling ACE Object
%s Sending command to Siri Mini: %@
%s Sending server command to Local Server: %@
%s Logging Assistant Id %@, SharedUserId %@
%s Local session did open connection
%s Local session received Ace Object %@
%s Local session connection did close
%s Local session did encounter error %@
%s BTAddress for currently routed headset: %@
%s CBDiscovery found CBUUID: %@ for device with address: %@
%s Device is %@
%s Wireless Splitter session info changed from %@ to %@
%s Wireless Splitter session invalidated
%s audioSource = %@
%s audioDestination = %@
%s deviceRingerSwitchState = %@
%s SASRecordingInfo.ringerSwitchOff = %d
%s audioAlertStyle = %ld
%s SASRecordingInfo.alertType = %@
%s firstBufferTimestamp (baseline) = %f
%s homeButtonDownTimestamp = %f
%s SASRecordingInfo.buttonDowntime = %llu
%s startRecordingTimestamp = %f
%s SASRecordingInfo.activationTime = %llu
%s SASRecordingInfo.zeroLatencyLaunch = %d
%s activationAlertStartTimestamp = %f
%s SASRecordingInfo.activationAudioAlertStartTime = %llu
%s SASRecordingInfo.activationHapticAlertStartTime = %llu
%s #hal Invalid score
%s Unable to get an instance of SOClockAlarmManager.
%s Unable to get an instance of SOClockTimerManager.
%s Alarm %@ is not in notifiedFiringAlarmIDs, but isFiring is YES.
%s hasFiringAlarms = %d (local)
%s Found firing alarm %@ from device %@.
%s hasFiringAlarms = %d (remote)
%s Timer %@ is not in notifiedFiringTimerIDs, but isFiring is YES.
%s hasFiringTimers = %d (local)
%s Found firing timer %@ from device %@.
%s hasFiringTimers = %d (remote)
%s mergedClockAlarmSnapshot = %@.
%s mergedClockTimerSnapshot = %@.
%s origin = %ld, client = %@
%s Fetched local alarm snapshot %@.
%s Done fetching local alarm and timer snapshots.
%s Fetching remote timer snapshots...
%s Fetched remote timer snapshots %@.
%s Done fetching remote timer snapshots.
%s Dismissing firing alarms and timers...
%s Begin mutating timer snapshot.
%s End mutating timer snapshot.
%s Merging local and remote alarms...
%s Adding %tu alarms (local)...
%s Adding %tu alarms (remote %@)...
%s Merged %tu local and remote alarms.
%s Merging local and remote timers...
%s Adding %tu timers (local)...
%s Adding %tu timers (remote %@)...
%s Merged %tu local and remote timers.
%s includingAlarms = %d, includingTimers = %d
%s Alarm is not supported on this platform.
%s Timer is not supported on this platform.
%s No Bulletin found
%s Missing input
%s Could not find action to perform
%s %@ added
%s %@ added to lock screen feed
%s %@ eligible for spoken
%s Trying to modify a bulletin %@ that I don't already have.
%s %@ removed from lock screen feed
%s Asked to remove a bulletin from lock screen %@ that I don't already have.
%s removed %@
%s Asked to remove a bulletin %@ that I don't already have.
%s Batched update pending
%s timed out
%s observer callback is dropped before invocation
%s completion called
Instrumentation
Daemon
ADRapportLinkTransportOptions
NSCopying
NSSecureCoding
NSCoding
_ADRapportLinkTransportOptionsMutation
ADRapportLinkTransportOptionsMutating
NSObject
ADRapportLinkTransportOptionsMutability
Sync
Context
ADDeviceAuthenticationSessionV1
ADTimerTransformer
ADAceRequestTransformer
ADAceResponseTransformer
ADPeerConnection
IDSServiceDelegate
ADDeviceSyncMessage
_ADDeviceSyncMessageMutation
ADDeviceSyncMessageMutating
ADDeviceSyncMessageMutability
ADAnnounceNotificationRequest
ADAudioSession
ADAudioRoute
_ADPBProxyReestablishRequest
ADAudioFileWriter
ADDeviceSyncCommandPullSnapshotRequest
_ADDeviceSyncCommandPullSnapshotRequestMutation
ADDeviceSyncCommandPullSnapshotRequestMutating
ADDeviceSyncCommandPullSnapshotRequestMutability
_ADPBProxyTCPInfoMetrics
ADSharedPeerStreamConnection
ADPeerStreamConnection
ADKnowledgeService
DeviceRouting
ADDeviceRouter
ADRequestLifecycleListening
CoreSpeechExtensions
ADRemoteTimerManager
AFClockItemStorageDelegate
ADUserNotificationAnnouncementSpeakingStatePublisher
AMSMockServerProtocol
ADMockServer
AFCoreAnalyticsCrossDeviceEvent
ADAudioSessionCoordinationMessageBeginAudioSessionResponse
AFDictionaryConvertible
_ADAudioSessionCoordinationMessageBeginAudioSessionResponseMutation
ADAudioSessionCoordinationMessageBeginAudioSessionResponseMutating
ADAudioSessionCoordinationMessageBeginAudioSessionResponseMutability
_ADPBDeviceExecuteOnRemoteResponse
ADDeviceSyncSnapshot
_ADDeviceSyncSnapshotMutation
ADDeviceSyncSnapshotMutating
ADDeviceSyncSnapshotMutability
ADOpportuneSpeakingMovingAverageBuffer
ADDictationOfflineStatusObserver
ADCompanionRoutingService
ADAcePassthroughRequestTransformer
ADSystemService
ADSyncRequest
ADHealthTransformer
ADCalendarTransformer
ADDisplayScaleContextCollector
ADSyncBlacklist
ADCoreSpeechService
ADAccount
SharedData
ConnectionPolicy
RemoteDevice
ADGenericIntentResponseTransformer
_ADPBProxyGetMetricsRequest
_ADPBDevice
ADDeviceSyncMessagingServiceRapport
ADDeviceSyncMessagingService
ADSiriAnalyticsServiceHost
SiriAnalyticsServiceHostDelegate
ADDeviceSyncCommandPullGenerationsRequest
_ADDeviceSyncCommandPullGenerationsRequestMutation
ADDeviceSyncCommandPullGenerationsRequestMutating
ADDeviceSyncCommandPullGenerationsRequestMutability
_ADPBProxyWakeUpRequest
ADMailTransformer
ADGreenTeaLogger
ADServiceManager
ADServiceRecord
_ADChunkInfo
ADSyncSnapshot
_ADPBDeviceStartRemoteResponse
ADSharedData
ADAudioSessionCoordinationMessageEndAudioSessionRequest
_ADAudioSessionCoordinationMessageEndAudioSessionRequestMutation
ADAudioSessionCoordinationMessageEndAudioSessionRequestMutating
ADAudioSessionCoordinationMessageEndAudioSessionRequestMutability
ADSessionRemoteServerFull
ADDeviceSyncCommandPullDeltaResponse
_ADDeviceSyncCommandPullDeltaResponseMutation
ADDeviceSyncCommandPullDeltaResponseMutating
ADDeviceSyncCommandPullDeltaResponseMutability
ADAnnouncementRequest
ADSpeechCompressor
CSSiriSpeechCapturing
ADHomeAnnouncementContextProvider
AFContextSnapshotTransforming
AFHeadphonesAnnouncementRoute
AFHeadphonesAnnouncementRequestCapabilityProvider
AFNotifyObserverDelegate
AFSettingsDelegate
AFAnnouncementRequestCapabilityProviding
ADTimerContextProvider
ADOpportuneSpeakingModuleEdgeDetector
CSOpportuneSpeakListenerDelegate
AFDictationService
ADIntentPreferencesAndVocabularyUpdateService
INVocabularyUpdateService
AFManagedStorageService
AFUserNotificationService
AFUserNotificationServiceDelegate
ADDaemon
NSXPCListenerDelegate
PSYSyncCoordinatorDelegate
ADSharedDataService
ADPeerConnectionDelegate
ADSessionManager
ADSessionDelegate
ADSessionAssertion
ADSessionAsserting
ADMobileBluetoothDeviceDataSource
AFInvalidating
ADMobileBluetoothDeviceProxy
AFBluetoothDevice
ADMobileBluetoothWirelessSplitterSessionProxy
ADBluetoothWirelessSplitterSession
AFBluetoothWirelessSplitterSessionStateObserverDelegate
ADServiceStatistics
AFAWDSiriRequestRecord
ADDictationSession
ADSessionLocalConnection
ADCallObserver
ADContextExtras
ADContextManager
ADDeviceContextConnectionDelegate
ADLocalContextStoreDelegate
ADDeviceCircleManagerListening
_ADDomainObjectCacheEntry
ADDomainObjectCache
ADAudioSessionAssertionConnection
AFAudioSessionAssertionService
ADMapsTransformer
IntentSupport
ADDeviceSyncMessageSendingContext
ADSettingsRequestHandler
ADRequestDelayManager
ADSessionManagerIntercepting
ADAcousticIDHelper
ADDeviceContextConnection
AFDeviceContextService
ADPeerLocationRemote
CLLocationManagerDelegate
MTTimerIntentSupport
_ADPBDeviceSetDataRequest
ADRapportLinkDiscoveryOptions
_ADRapportLinkDiscoveryOptionsMutation
ADRapportLinkDiscoveryOptionsMutating
ADRapportLinkDiscoveryOptionsMutability
Themis
ADPeerLocationConnection
ADPeerLocationPolicyDelegate
ADAcePassthroughSiriRequest
ADPeerConnectionProvider
ADPeerStreamConnectionDelegate
ADBuddyMonitor
_ADPBDeviceExecuteOnRemoteRequest
ADCloudKitMirroredContainer
_ADPBDeviceOutputVoiceInfo
ADExternalRequestListener
ADTimerStore
ADUnavailableTimerStore
ADTimerStoring
ADSiriAnnouncementRequestCapabilityManager
ADDiagnosticsManager
NSURLSessionDataDelegate
NSURLSessionTaskDelegate
NSURLSessionDelegate
ADDeviceSyncCoordinator
ADDeviceSyncMessagingServiceDelegate
ADDeviceSyncDataProviderDelegate
ADSiriAppLaunchRequestHandler
AFSiriRequestHandling
ADAudioSessionCoordinationMessageKeepAudioSessionAliveResponse
_ADAudioSessionCoordinationMessageKeepAudioSessionAliveResponseMutation
ADAudioSessionCoordinationMessageKeepAudioSessionAliveResponseMutating
ADAudioSessionCoordinationMessageKeepAudioSessionAliveResponseMutability
ADMessagesTransformer
ADDeviceSyncSession
ADDeviceSyncMessageReceiving
ADAcePassthroughSiriResponse
ADServiceCommandType
ADSettingsService
ADOpportuneSpeakingVoiceActivityModel
AFOpportuneSpeakingModel
_ADPBLocationSetPeerLocationRequest
ASXSignatureExtracting
ADAcousticFingerprinter
ADAnalyticsCompositeStreamId
ADAnalyticsStore
ADAnalyticsEventRecordBuilder
SiriCoreSQLiteRecordBuilder
AFFlowService
AFDeviceStateService
ADFlowServiceListener
ADGenericIntentRequestTransformer
ADRequestDispatcherServiceHelper
AFRequestDispatcherServiceHelper
AFServiceHelper
NanoServices
ADSiriUserNotificationRequestCapabilityManager
ADWorkoutTransformer
ADDeviceSyncCommandPushGenerationsResponse
_ADDeviceSyncCommandPushGenerationsResponseMutation
ADDeviceSyncCommandPushGenerationsResponseMutating
ADDeviceSyncCommandPushGenerationsResponseMutability
ADAVSystemControllerLifecycleManager
ADPassthroughEndpointer
Endpointer
ADLocalRequestProvider
ADMediaPlaybackContextProvider
SOMediaNowPlayingListening
ADExternalNotificationRequestQueue
ADSiriRequestSucceededResponseTransformer
AFCarPlayAnnouncementRequestCapabilityProvider
CARSessionObserving
ADClientLiteListener
ADClientLite
AFClientLiteRemoteCommandHandling
ADCommandCenterRequestDelegate
ADClientLiteWorkItem
ADCarPlayAnnouncementRequestCapabilityProvider
ADRemoteSpeechRequestHelper
ADExtensionService
INSExtensionServiceDelegate
_ADPBProxy
ADRemoteContextStore
ADDeviceCirclePeerData
_ADDeviceCirclePeerDataMutation
ADDeviceCirclePeerDataMutating
ADDeviceCirclePeerDataMutability
ADDeviceCountAndTimestamp
ADDeviceCircleManager
ADHomeInfoListening
SiriHelper
ADTimerRequestHandler
ADCloudResponseHandler
ADPeerResponse
ADPeerCloudService
ADRemoteExecution
ADSiriUtilities
ADAlarmStore
ADAlarmQuery
AFAlarmMatching
ADUnavailableAlarmStore
ADAlarmStoring
ADAudioPowerCoreSpeechProvider
AFAudioPowerProviding
ADManagedObjectService
ADSpeechLog
ADDeviceAuthenticationSessionV0
ADDeviceAuthenticationSession
ADOfflineMetrics
ADLocationManager
ADPeerLocationConnectionDelegate
AssistantExtensions
ADLocationExtensions
AFMutableDeviceContext
MutableCopy
NSMutableCopying
ADLocalContextStore
AFContextDonation
Myriad
ADMediaRemote
ADMediaRemoteServiceCommand
ADMediaRemoteService
ADDictationSessionTracker
Tracer
ADSecurityService
AFSecurityService
ADDeviceProximityManager
ADRapportLinkConfiguration
_ADRapportLinkConfigurationMutation
ADRapportLinkConfigurationMutating
ADRapportLinkConfigurationMutability
AFPersonalUserSettings
ADExperimentManager
SAClientBoundCommand
SAAceCommand
SAAceSerializable
AceObject
SAAceReferable
SAServerBoundCommand
ADCommandCenterSpeechDelegate
ADCommandCenter
ADSessionManagerDelegate
ADSpeechManagerDelegate
ADLocationManagerDelegate
ADUIServiceDelegate
ADAlarmContextProvider
SOClockAlarmListening
ADExternalNotificationInstrumentationEmitter
ADTTSMutingObserver
CSAudioSessionControllerDelegate
ADSADOCommand
SADomainObjectCommand
SADExtras
ADSystemLanguagePreferencesObserver
ADHomeInfoManager
HMHomeManagerDelegate
HMHomeManagerDelegatePrivate
HMUserDelegatePrivate
HMUserCloudShareManagerDelegate
HMHomeDelegate
HMSettingsDelegate
HMHomeDelegatePrivate
HMAccessorySettingsDelegate
HMAccessoryDelegatePrivate
HMAccessoryDelegate
ADPreferredMediaUserInfo
ADHomeInfo
_ADPBLocationGetPeerLocationRequest
Analytics
ADOpportuneSpeakingStateManager
ADAnalyticsFuzzingInterval
AcousticId
ADRequestLifecycleObserver
ADDeviceSyncCommandPushGenerationsRequest
_ADDeviceSyncCommandPushGenerationsRequestMutation
ADDeviceSyncCommandPushGenerationsRequestMutating
ADDeviceSyncCommandPushGenerationsRequestMutability
ADSessionRemoteServerLimited
ADCommunalDeviceUserAttributes
AFAssertionContext
_AFAssertionContextMutation
AFAssertionContextMutating
AFAssertionContextMutability
ADAudioSessionCoordinationMessageKeepAudioSessionAliveRequest
_ADAudioSessionCoordinationMessageKeepAudioSessionAliveRequestMutation
ADAudioSessionCoordinationMessageKeepAudioSessionAliveRequestMutating
ADAudioSessionCoordinationMessageKeepAudioSessionAliveRequestMutability
ADSystemMuteModeObserver
ADInstrumentationResolver
ADDeviceRouterResult
_ADDeviceRouterResultMutation
ADDeviceRouterResultMutating
ADDeviceRouterResultMutability
ADFanInfoManager
ADFanInfo
ADSettingsTransformer
ADOfflineMetricsManager
ADResultObjectCache
ResultCallbacks
ADResultObjectCacheInternal
ADMissingReferencesContext
ADCalendarError
AFDiagnostics
AFDiagnosticsNetworkAnalyzerResults
AFDiagnosticsAdditions
AFAdditions
_ADPBDeviceStartRemoteRequest
SiriDaemonAdditions
ADRequestDispatcherService
InvocationFeedback
SANotificationObject
ADSiriAnalyticsMessageStorage
SiriAnalyticsMessageStorage
AFAnalytics
AFSiriUserNotificationRequest
AFSiriExternalRequest
AFSiriUserNotificationRequestCapabilityManager
AFAnnouncementRequestCapabilityProvidingDelegate
AFSiriNotificationRequest
ADAudioSessionCoordinationMessageEndAudioSessionResponse
_ADAudioSessionCoordinationMessageEndAudioSessionResponseMutation
ADAudioSessionCoordinationMessageEndAudioSessionResponseMutating
ADAudioSessionCoordinationMessageEndAudioSessionResponseMutability
ADIntentsUserActivityManager
Punchouts
ADPeerLocationPolicy
VSAdditions
ADBackgroundContextCache
ADAuthenticator
SiriAce
AFRequestInfo
ADSyncChunkInfo
ADLocalPhoneService
ADAssetManager
CDMTrialAssetsDelegate
CESRTrialAssetDelegate
ADAudioSessionCoordinationMessageBeginAudioSessionRequest
_ADAudioSessionCoordinationMessageBeginAudioSessionRequestMutation
ADAudioSessionCoordinationMessageBeginAudioSessionRequestMutating
ADAudioSessionCoordinationMessageBeginAudioSessionRequestMutability
ADSyncManager
ADServiceDelegate
SyncKeys
SyncKeysPrivate
ADSession
ADAssistantDataManagerObserver
ADDictationOnDeviceSampling
ADSystemStateContextProvider
AFPineBoardSystemStateListening
ADAlarmTransformer
ADManagedStorageConnection
ADDeleteSyncDataService
AFSyncHandler
ADOfflineMetricsMap
SharedDataClient
SharedDataRemote
ADSpeechSamplingSendAudioData
ADSpeechSamplingDictationAudioDataHandler
ADServiceConnection
ADServiceConnectionProviderServiceDelegate
AFProviderServiceDelegate
ADPreferences
ADDeviceSyncIncrementalChange
_ADDeviceSyncIncrementalChangeMutation
ADDeviceSyncIncrementalChangeMutating
ADDeviceSyncIncrementalChangeMutability
ADAnalyticsDeliveryBatch
RecipientDevicesSelection
ADLocalMeCardStore
ADSiriTaskService
ADUIService
ServiceMaintenance
Messaging
SimulatorIDSDevice
ADIDSSimulatorService
OutputVoice
ADDeviceSyncMessageSender
ADDeviceSyncMessageSending
ADGenericIntentService
Metrics
ADGenericIntentRequestHandler
ADOpportuneSpeakingModule
AFOpportuneSpeakingModelDelegate
ADDeviceSyncCommandPullSnapshotResponse
_ADDeviceSyncCommandPullSnapshotResponseMutation
ADDeviceSyncCommandPullSnapshotResponseMutating
ADDeviceSyncCommandPullSnapshotResponseMutability
ADCallStateContextProvider
ADCallObserverDelegate
ADPostSiriEngagementService
AMOS
ADSiriAnalyticsGlobalDimensionMessageResolver
SiriAnalyticsMessageResolver
AFMultiUserService
ADMultiUserService
ADLocalMeCardStoreObserving
ADAddressBookManager
ADCoreBluetoothDevice
ADCoreBluetoothManager
CBCentralManagerDelegate
CBPeripheralDelegate
ADBaseService
_ADPBDeviceGetDataRequest
ADRemoteRequestHelper
ADStopwatchRequestHandler
ADMultiUserTestSupport
ADAlarmRequestHandler
_ADPBLocation
ADFauxUIService
ADExtension
ADSynapseService
ADAceResponseAdditions
ADHomeAnnouncementContextAdaptor
AFHomeAnnouncementListening
ADMyriadService
ADAcePassthroughResponseTransformer
ADSessionRemoteServer
SiriCoreNetworkManagerObserver
SiriCoreSiriConnectionDelegate
ADCommunalDeviceUser
ADSiriClientStateContextProvider
ADDeviceSyncTimerProvider
SOClockTimerListening
ADDeviceSyncDataProviding
ADDeviceResolutionServiceListener
SVDDeviceResolutionXPCInterfacing
ADSiriTetherListener
ADSpeechPlaybackSimulator
ADAudioSessionCoordinator
AFAssertionCoordinatorDelegate
AFAudioSessionAssertionAcquisitionService
_ADPBProxyGetMetricsResponse
ADBundleService
ADServiceConnectionDelegate
ADSyncFlagManager
ADDeviceSyncTimerConsumer
ADDeviceSyncDataConsuming
ADShowNextEventRequestHandler
ADFMIPListener
APSConnectionDelegate
ADHomeKitService
RemoteExecute
ADSessionBarrier
SiriCoreSessionObject
SiriCoreThunking
ADService
ADAnalyticsService
AFAnalyticsObservationService
AFAnalyticsService
ADUserNotificationServiceProvider
UNUserNotificationCenterDelegate
ADPushContextListener
ADPushContextReceiver
ADNotifyAndPushContextCollector
ADAceDomainSignalRequestHandler
_ADSADAdditions
ADAssistantDataManager
MCProfileConnectionObserver
ADAddressBookManagerDelegate
ADDisplayScaleContextCollectorDelegate
ADAnalyticsFBFDeliveryInfrastructure
ADSiriConnectionRemote
SiriCoreConnectionProviderDelegate
ADQueueMonitor
_ADQueueObserver
ADDeviceSyncItem
_ADDeviceSyncItemMutation
ADDeviceSyncItemMutating
ADDeviceSyncItemMutability
ADMessageTransformer
ADOTTRequestTransformer
ADAnnouncementRequestBuilder
ADSyncVerificationHelper
ADIntentVocabularyUpdateConnection
ADHomeAnnouncementService
ADRetryManager
AFSiriAnnouncementRequestCapabilityManager
ADMotionManager
ADClientConnection
ADHandsFreeStateChangedObserver
AFBluetoothDeviceObserver
ADCommandCenterClient
AFClientService
ADClientConnectionSupport
StructuredDictation
ADDictationConnection
CoreEmbeddedSpeechRecognizerDelegate
ADAnnounceIncomingCallRequest
AFAWDSiriSession
ADSpeechManager
CSSiriSpeechCapturingDelegate
ADVolumeServiceProviding
ADVolumeTracking
CSSiriRecordingInfoProviding
AFAudioPowerUpdaterDelegate
ADAudioSessionCoordinatorDelegate
AFAsrBridgeDelegate
ADExternalNotificationRequestHandler
ADRequestDelayManagerDelegate
CSSiriAudioPlaybackServiceListening
ADSettingsClient
AFSettingsService
ADCommandCenterSyncDelegate
ADRapportProximityObservation
_ADRapportProximityObservationMutation
ADRapportProximityObservationMutating
ADRapportProximityObservationMutability
_ADPBDeviceStringKeyValueDictionary
_ADPBDeviceStringKeyValuePair
ADVolumeService
ADAVSystemControllerLifecycleObserver
ADSessionLocalServer
ADSessionLocalConnectionDelegate
ADBluetoothManager
ADSiriContextServiceClient
ADHeadphonesAnnouncementRequestCapabilityProvider
ADFMDMonitor
ADBluetoothWirelessSplitterSessionObserver
ADBluetoothWirelessSplitterSessionObserving
ADSAExtensions
ADPeerInfo
ADAudioSessionCoordinationMessage
_ADAudioSessionCoordinationMessageMutation
ADAudioSessionCoordinationMessageMutating
ADAudioSessionCoordinationMessageMutability
ADMultiUserStateContextProvider
ADClockService
ADDeviceSyncCommandPullDeltaRequest
_ADDeviceSyncCommandPullDeltaRequestMutation
ADDeviceSyncCommandPullDeltaRequestMutating
ADDeviceSyncCommandPullDeltaRequestMutability
ADCoreAnalyticsSideChannel
ADNotificationOrderedDictionary
ADNotificationManager
BBObserverDelegate
ADDeviceSyncCommandPullGenerationsResponse
_ADDeviceSyncCommandPullGenerationsResponseMutation
ADDeviceSyncCommandPullGenerationsResponseMutating
ADDeviceSyncCommandPullGenerationsResponseMutability
PersonalDomain
ADCommandExecutionContext
v16@0:8
@28@0:8I16@20
B16@0:8
@24@0:8^{_NSZone=}16
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@40@0:8q16q24q32
@16@0:8
@24@0:8Q16
Q16@0:8
B24@0:8@16
q16@0:8
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8q16
@"ADRapportLinkTransportOptions"
{_mutationFlags="isDirty"b1"hasAllowsAWDL"b1"hasAllowsBLE"b1"hasAllowsInfraWiFi"b1}
@24@0:8@?16
v56@0:8@16@24@32B40B44@48
v44@0:8@16B24@28@36
v32@0:8@16@?24
v32@0:8@"SABaseClientBoundCommand"16@?<v@?@"AFSiriRequest">24
@40@0:8@16@24@32
@"<SAAceCommand>"40@0:8@"AFSiriResponse"16@"NSError"24@"SABaseClientBoundCommand"32
@24@0:8q16
v64@0:8@16@24@32@40@48@56
v40@0:8@16@24@32
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v32@0:8@16@24
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v48@0:8@16@24@32@40
v40@0:8@16@24@?32
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
@36@0:8@16^?24B32
@32@0:8@16^?24
B24@0:8^@16
v28@0:8@16B24
v40@0:8@16#24@?32
v48@0:8@16#24d32@?40
v48@0:8@16#24B32B36@?40
v64@0:8@16#24B32d36B44B48B52@?56
v32@0:8@16^?24
@"NSString"
@"NSObject<OS_dispatch_queue>"
@"IDSService"
@"NSMutableDictionary"
@"<ADPeerConnectionDelegate>"
@96@0:8Q16q24@32@40@48@56@64@72@80@88
@"ADDeviceSyncCommandPushGenerationsRequest"
@"ADDeviceSyncCommandPushGenerationsResponse"
@"ADDeviceSyncCommandPullGenerationsRequest"
@"ADDeviceSyncCommandPullGenerationsResponse"
@"ADDeviceSyncCommandPullDeltaRequest"
@"ADDeviceSyncCommandPullDeltaResponse"
@"ADDeviceSyncCommandPullSnapshotRequest"
@"ADDeviceSyncCommandPullSnapshotResponse"
v24@0:8Q16
v24@0:8@"ADDeviceSyncCommandPushGenerationsRequest"16
v24@0:8@"ADDeviceSyncCommandPushGenerationsResponse"16
v24@0:8@"ADDeviceSyncCommandPullGenerationsRequest"16
v24@0:8@"ADDeviceSyncCommandPullGenerationsResponse"16
v24@0:8@"ADDeviceSyncCommandPullDeltaRequest"16
v24@0:8@"ADDeviceSyncCommandPullDeltaResponse"16
v24@0:8@"ADDeviceSyncCommandPullSnapshotRequest"16
v24@0:8@"ADDeviceSyncCommandPullSnapshotResponse"16
@"ADDeviceSyncMessage"
{_mutationFlags="isDirty"b1"hasSequence"b1"hasType"b1"hasCommandPushGenerationsRequest"b1"hasCommandPushGenerationsResponse"b1"hasCommandPullGenerationsRequest"b1"hasCommandPullGenerationsResponse"b1"hasCommandPullDeltaRequest"b1"hasCommandPullDeltaResponse"b1"hasCommandPullSnapshotRequest"b1"hasCommandPullSnapshotResponse"b1}
@48@0:8@16@24q32@?40
q40@0:8@16@24q32
@"ADAudioRoute"
@20@0:8I16
@36@0:8q16@?24I32
@36@0:8q16@24I32
@44@0:8q16@?24@32I40
v24@0:8r^{AudioStreamBasicDescription=dIIIIIIII}16
^{OpaqueExtAudioFile=}
@"NSFileHandle"
v24@0:8@"NSString"16
{_mutationFlags="isDirty"b1"hasDataType"b1}
v20@0:8I16
v20@0:8B16
I16@0:8
{?="rxBytes"b1"rxDuplicateBytes"b1"rxOooBytes"b1"rxPackets"b1"sndBandwidth"b1"txBytes"b1"txPackets"b1"txRetransmitBytes"b1"txUnacked"b1"rttBest"b1"rttCurrent"b1"rttSmoothed"b1"rttVariance"b1"synRetransmits"b1"tfoSynDataAcked"b1}
@32@0:8q16@24
@28@0:8@16B24
v24@0:8@?16
@"NSHashTable"
@"ADPeerStreamConnection"
@"IDSDeviceConnection"
@"NSMutableSet"
@"NSDictionary"
@36@0:8@16@24B32
@"ADSharedPeerStreamConnection"
@"<ADPeerStreamConnectionDelegate>"
@"ADCommandCenter"
@52@0:8@16@24@32@40B48
@44@0:8@16@24@32B40
v48@0:8@16@24q32@40
v48@0:8@"ADRequestLifecycleObserver"16@"AFRequestInfo"24q32@"<ADCommandCenterClient>"40
@32@0:8@16@24
v52@0:8@16B24@28@36@?44
@"NSArray"
@"ADDeviceProximityManager"
v48@0:8@"AFClockItemStorage"16@"NSSet"24@"NSSet"32@"NSSet"40
B32@0:8q16@24
v32@0:8@"NSURL"16@?<v@?@"NSError">24
@"<AMSMockServerProtocol>"
@24@0:8@"NSDictionary"16
@"NSDictionary"16@0:8
@"ADAudioSessionCoordinationMessageBeginAudioSessionResponse"
@"NSData"
@40@0:8Q16@24@32
@"NSDate"
v24@0:8@"NSDate"16
v24@0:8@"NSArray"16
@"ADDeviceSyncSnapshot"
{_mutationFlags="isDirty"b1"hasGeneration"b1"hasDate"b1"hasItems"b1}
v20@0:8C16
B32@0:8@16@24
v48@0:8@16@24@32@?40
^{__CFDictionary=}
@?16@0:8
@"AFWatchdogTimer"
@"NSUUID"
@"<ADDisplayScaleContextCollectorDelegate>"
{_keychainDataMutationFlags="assistantIdentifierIsDirty"b1"loggingAssistantIdentifierIsDirty"b1"speechIdentifierIsDirty"b1"peerAssistantIdentifierIsDirty"b1"peerLoggingAssistantIdentifierIsDirty"b1"peerSpeechIdentifierIsDirty"b1"peerUserAgentStringIsDirty"b1"peerLanguageCodeIsDirty"b1"peerSiriEnabledIsDirty"b1"gizmoDataIsDirty"b1}
v40@0:8@"ADDeviceSyncMessage"16@"NSString"24@?<v@?@"ADDeviceSyncMessage"@"NSError">32
@"<ADDeviceSyncMessagingServiceDelegate>"
@"<SiriAnalyticsMessageStorage>"24@0:8@"<SiriAnalyticsMessageStorage>"16
@"AssistantSiriAnalyticsService"
@"ADSiriAnalyticsGlobalDimensionMessageResolver"
{_mutationFlags="isDirty"b1"hasDataTypes"b1}
v32@0:8@16q24
@24@0:8^B16
@"AFInstanceContext"
@32@0:8@16q24
@"<ADService>"
@"NSObject<OS_dispatch_source>"
{?="success"b1}
@"ADAudioSessionCoordinationMessageEndAudioSessionRequest"
{_mutationFlags="isDirty"b1"hasEffectiveDate"b1}
@72@0:8@16@24@32@40@48@56@64
{_mutationFlags="isDirty"b1"hasIncrementalChanges"b1}
@40@0:8Q16q24@?32
v28@0:8B16q20
@"AFRequestInfo"
@56@0:8@16@24@32@40@48
v32@0:8{AFTimeRange=dd}16
v28@0:8d16B24
v36@0:8q16B24Q28
v32@0:8d16@?24
@56@0:8@"NSObject<OS_dispatch_queue>"16@"CSSpeechController"24@"CSAudioSessionController"32@"CSSiriAudioPlaybackService"40@"AFExperimentContext"48
v24@0:8@"<CSSiriSpeechCapturingDelegate>"16
v24@0:8@"AFSpeechRequestOptions"16
v24@0:8@?<v@?dd>16
v24@0:8@"CSServerEndpointFeatures"16
v32@0:8d16@?<v@?B@"NSArray">24
v24@0:8d16
@"<CSSiriSpeechCapturingDelegate>"
^{OpaqueAudioConverter=}
@"NSMutableData"
v48@0:8@16@24q32@?40
v48@0:8@"<AFContextSnapshot>"16@"AFDeviceContextMetadata"24q32@?<v@?@"<AFContextSnapshot>"@"AFDeviceContextMetadata">40
v32@0:8@"<AFContextSnapshot>"16@?<v@?@"NSArray">24
@"<AFContextDonation>"
@"ADHomeAnnouncementContextAdaptor"
v28@0:8@16i24
v40@0:8@16Q24Q32
v28@0:8@"AFNotifyObserver"16i24
v40@0:8@"AFNotifyObserver"16Q24Q32
v24@0:8@"NSDictionary"16
v24@0:8@"<AFAnnouncementRequestCapabilityProvidingDelegate>"16
v24@0:8@?<v@?Q>16
@"<AFAnnouncementRequestCapabilityProviding>"16@0:8
@"NSArray"24@0:8q16
B20@0:8B16
Q24@0:8@16
@"AFSettingsConnection"
@"AFNotifyObserver"
@"NSObject<OS_dispatch_group>"
@"AFHeadphonesAnnouncementRoute"
@"SOClockTimerObserver"
v32@0:8@16B24f28
v28@0:8@"CSOpportuneSpeakListener"16B24
v32@0:8@"CSOpportuneSpeakListener"16B24f28
I24@0:8Q16
v20@0:8f16
v52@0:8@16f24f28B32@?36@?44
@"ADOpportuneSpeakingMovingAverageBuffer"
@"CSOpportuneSpeakListener"
@"CSOpportuneSpeakListenerOption"
Vv24@0:8@?16
Vv48@0:8@16@24@32@?40
Vv40@0:8@16@24@32
Vv24@0:8@16
Vv40@0:8@16@24B32B36
Vv32@0:8@16@24
Vv44@0:8@16B24@28@36
Vv32@0:8q16@24
Vv32@0:8@16@?24
Vv40@0:8@16q24@32
Vv48@0:8@16q24@32@40
Vv24@0:8@?<v@?>16
Vv48@0:8@"NSString"16@"AFDictationOptions"24@"AFSpeechRequestOptions"32@?<v@?@"NSXPCListenerEndpoint">40
Vv40@0:8@"NSString"16@"AFDictationOptions"24@"AFSpeechRequestOptions"32
Vv24@0:8@"AFSpeechRequestOptions"16
Vv40@0:8@"AFDictationOptions"16@"NSString"24B32B36
Vv24@0:8@"NSData"16
Vv32@0:8@"AFSpeechCorrectionInfo"16@"NSDictionary"24
Vv32@0:8@"AFSpeechCorrectionInfo"16@"NSString"24
Vv24@0:8@"NSString"16
Vv32@0:8@"NSString"16@"AFDictationOptions"24
Vv24@0:8@"NSError"16
Vv44@0:8@"NSURL"16B24@"NSString"28@"AFDictationOptions"36
Vv32@0:8q16@"NSString"24
Vv24@0:8@?<v@?@"NSArray">16
Vv32@0:8@"NSString"16@?<v@?B@"NSError">24
Vv40@0:8@"NSError"16q24@"NSDictionary"32
Vv48@0:8@"NSError"16q24@"NSString"32@"NSDictionary"40
Vv40@0:8@16@24@?32
Vv40@0:8@"NSArray"16@"NSString"24@?<v@?B>32
v24@0:8@?<v@?q>16
v24@0:8@?<v@?@"NSString">16
v32@0:8@"NSString"16@?<v@?B>24
Vv32@0:8@"NSDictionary"16@"NSString"24
Vv32@0:8@"NSString"16@?<v@?@"NSDictionary">24
Vv48@0:8@"NSData"16@"NSString"24@"NSString"32@?<v@?>40
Vv40@0:8@"NSString"16@"NSString"24@?<v@?@"NSData">32
Vv32@0:8@"NSString"16@?<v@?>24
v32@0:8@"UNNotificationRequest"16@?<v@?@"NSError">24
v24@0:8@"UNNotificationResponse"16
d16@0:8
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v32@0:8@"PSYSyncCoordinator"16@"PSYServiceSyncSession"24
v24@0:8@"PSYSyncCoordinator"16
v40@0:8^@16^@24@32
@"NSXPCListener"
@"NSObject<OS_xpc_object>"
@"ADExternalRequestListener"
@"ADClientLiteListener"
@"ADSiriTetherListener"
@"ADSiriConnectionRemote"
@"ADPeerLocationRemote"
@"NSCountedSet"
^{MGNotificationTokenStruct=}
v40@0:8@"ADPeerConnection"16@"PBCodable"24@?<v@?@"PBCodable"@"NSError">32
v28@0:8@"ADPeerConnection"16B24
v28@0:8B16@?20
v32@0:8B16B20@?24
@"ADPeerConnection"
@"ADSharedData"
@"<ADSharedDataNotificationDelegate>"
v48@0:8@16@24@32d40
B24@0:8@"ADSession"16
v24@0:8@"ADSession"16
v32@0:8@"ADSession"16@"AceObject<SAAceCommand>"24
v40@0:8@"ADSession"16@"AceObject<SAAceCommand>"24@"NSError"32
v36@0:8@"ADSession"16@"NSError"24B32
B32@0:8@"ADSession"16@"NSError"24
@"NSArray"24@0:8@"ADSession"16
v40@0:8@"ADSession"16@"NSString"24@"NSString"32
v28@0:8@"ADSession"16B24
v48@0:8@"ADSession"16@"NSString"24@"NSString"32d40
v32@0:8@"ADSession"16@"NSError"24
v24@0:8i16B20
v28@0:8I16q20
v40@0:8@16B24B28B32B36
v48@0:8@16@24q32q40
@"<ADSessionManagerDelegate>"
^{IONotificationPort=}
@"AFAggregator"
@"SASSpeechRecognized"
@"SASSpeechFailure"
@"<ADSessionManagerIntercepting>"
v28@0:8^{BTSessionImpl=}16i24
v24@0:8^{BTSessionImpl=}16
v40@0:8^{BTDeviceImpl=}16I24i28I32i36
v32@0:8^{BTLocalDeviceImpl=}16i24i28
v40@0:8^{BTAccessoryManagerImpl=}16i24^{BTDeviceImpl=}28i36
v24@0:8^{BTDeviceImpl=}16
v32@0:8^{BTDeviceImpl=}16^{BTAccessoryManagerImpl=}24
^{BTSessionImpl=}
^{BTLocalDeviceImpl=}
^{BTAccessoryManagerImpl=}
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"ADMobileBluetoothWirelessSplitterSessionProxy"
v32@0:8q16@?24
@"AFBluetoothDeviceInfo"16@0:8
v24@0:8@?<v@?@"AFBluetoothDeviceInfo">16
v24@0:8@?<v@?@"AFBluetoothHeadphoneInEarDetectionState">16
v32@0:8q16@?<v@?@"NSError">24
v24@0:8@?<v@?B@"NSError">16
v24@0:8@"<AFBluetoothDeviceObserver>"16
@"ADMobileBluetoothDeviceDataSource"
@"AFBluetoothDeviceInfo"
@"AFBluetoothHeadphoneInEarDetectionState"
v24@0:8@?<v@?@"AFBluetoothWirelessSplitterSessionInfo">16
v24@0:8@"<ADBluetoothWirelessSplitterSessionObserving>"16
v40@0:8@16q24q32
v40@0:8@"AFBluetoothWirelessSplitterSessionStateObserver"16q24q32
@"AFBluetoothWirelessSplitterSessionInfo"
@"AFBluetoothWirelessSplitterSessionStateObserver"
@56@0:8@16Q24@32@40@48
@"AFDictationOptions"
@"<ADSessionLocalConnectionDelegate>"
@"<ADCallObserverDelegate>"
@?40@0:8q16@24@?32
v60@0:8@16@24@32@40B48@?52
v24@0:8@"ADDeviceContextConnection"16
v32@0:8@"ADDeviceContextConnection"16@?<v@?@"AFDeviceContext">24
v60@0:8@"ADDeviceContextConnection"16@"NSDictionary"24@"NSDictionary"32@"NSString"40B48@?<v@?>52
v32@0:8@"ADLocalContextStore"16@"AFDeviceContext"24
v28@0:8@"NSArray"16B24
v32@0:8@"AFPeerInfo"16@"AFPeerInfo"24
v40@0:8q16@24@?32
v56@0:8@16@24@32@?40@?48
v48@0:8@16@24d32@?40
v56@0:8@16@24d32@?40@?48
v44@0:8@16@24B32@?36
v48@0:8@16@?24@?32@?40
@40@0:8@16q24@32
@"<ADContextManagerDelegate>"
@"ADDeviceCircleManager"
@"ADBackgroundContextCache"
@"AFAnalytics"
@"NSMutableArray"
@"ADLocalContextStore"
@"ADRemoteContextStore"
Vv48@0:8@16@24Q32@?40
Vv32@0:8@"AFAssertionContext"16@?<v@?@"AFAssertionContext"@"NSError">24
Vv48@0:8@"AFAssertionContext"16@"NSError"24Q32@?<v@?>40
v40@0:8@16@24Q32
@"<AFRelinquishableAssertion>"
@"NSXPCConnection"
@"AFTwoArgumentSafetyBlock"
@48@0:8@16@24d32@?40
v32@0:8@"SABaseCommand<SiriCoreSessionObject><SiriCoreThunking>"16@?<v@?B>24
f24@0:8q16
@"<ADRequestDelayManagerDelegate>"
@"<ADAcousticIDHelperDelegate>"
@"SAAIStartSession"
@"SAAISearchCompleted"
Vv52@0:8@16@24@32B40@?44
Vv24@0:8@?<v@?@"AFDeviceContext">16
Vv52@0:8@"NSDictionary"16@"NSDictionary"24@"NSString"32B40@?<v@?>44
@"<ADDeviceContextConnectionDelegate>"
v40@0:8@16q24@32
v40@0:8@"CLLocationManager"16@"CLLocation"24@"CLLocation"32
v32@0:8@"CLLocationManager"16@"NSArray"24
v32@0:8@"CLLocationManager"16@"CLHeading"24
B24@0:8@"CLLocationManager"16
v40@0:8@"CLLocationManager"16q24@"CLRegion"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconRegion"32
v40@0:8@"CLLocationManager"16@"CLBeaconRegion"24@"NSError"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconIdentityConstraint"32
v40@0:8@"CLLocationManager"16@"CLBeaconIdentityConstraint"24@"NSError"32
v32@0:8@"CLLocationManager"16@"CLRegion"24
v32@0:8@"CLLocationManager"16@"NSError"24
v40@0:8@"CLLocationManager"16@"CLRegion"24@"NSError"32
v28@0:8@"CLLocationManager"16i24
v24@0:8@"CLLocationManager"16
v32@0:8@"CLLocationManager"16@"CLVisit"24
@"CLLocationManager"
@"_ADPBDeviceOutputVoiceInfo"
@"_ADPBDeviceStringKeyValueDictionary"
{?="activityContinuationAllowed"b1"cloudSyncEnabled"b1"dictationEnabled"b1"isLocationSharingDevice"b1"isRemotePlaybackDevice"b1"shouldCensorSpeech"b1"siriEnabled"b1}
@"ADRapportLinkDiscoveryOptions"
{_mutationFlags="isDirty"b1"hasIncludesFamily"b1"hasIncludesHome"b1"hasIncludesRemoraDevices"b1}
v24@0:8@"ADPeerLocationPolicy"16
@"<ADPeerLocationConnectionDelegate>"
@"ADPeerLocationPolicy"
@"SABaseClientBoundCommand"
v32@0:8@"ADPeerStreamConnection"16@"NSError"24
v24@0:8@"ADPeerStreamConnection"16
v32@0:8@"ADPeerStreamConnection"16@?<v@?@"SiriCoreConnectionMetrics">24
@20@0:8B16
v40@0:8d16d24Q32
@"<SiriCoreConnectionProviderDelegate>"
i16@0:8
v20@0:8i16
@20@0:8i16
i24@0:8@16
{?="gender"b1}
v24@0:8@?<v@?@"STTimer"@"NSError">16
v32@0:8@"STTimer"16@?<v@?@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSError">24
#24@0:8q16
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v56@0:8@16@24q32q40q48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
v32@0:8@"<ADDeviceSyncMessagingService>"16@"NSString"24
v48@0:8@"<ADDeviceSyncMessagingService>"16@"ADDeviceSyncMessage"24@"NSString"32@?<v@?@"ADDeviceSyncMessage"@"NSError">40
v24@0:8@"<ADDeviceSyncDataProviding>"16
v40@0:8@16@?24@?32
v40@0:8@"AFSiriRequest"16@?<v@?>24@?<v@?@"AFSiriResponse"@"NSError">32
@"<ADSiriAppLaunchRequestHandlerDelegate>"
@"ADAudioSessionCoordinationMessageKeepAudioSessionAliveResponse"
B32@0:8Q16@24
v48@0:8@16Q24Q32@?40
@"<SAAceCommand>"
@"<CSSiriRecordingInfoProviding>"
v24@0:8@"<AFOpportuneSpeakingModelDelegate>"16
v24@0:8@"<AFOpportuneSpeakable>"16
v32@0:8q16@"<AFOpportuneSpeakable>"24
@"<AFOpportuneSpeakingModelDelegate>"
@"ADOpportuneSpeakingModuleEdgeDetector"
@"ADOpportuneSpeakingStateManager"
Vv20@0:8i16
Vv32@0:8@16i24i28
Vv32@0:8@"NSData"16i24i28
Vv24@0:8@?<v@?@"NSData">16
v24@0:8^{AudioStreamBasicDescription=dIIIIIIII}16
@"<ADAcousticFingerprinterDelegate>"
{AudioStreamBasicDescription="mSampleRate"d"mFormatID"I"mFormatFlags"I"mBytesPerPacket"I"mFramesPerPacket"I"mBytesPerFrame"I"mChannelsPerFrame"I"mBitsPerChannel"I"mReserved"I}
v64@0:8Q16Q24@32@40Q48@?56
v56@0:8Q16@24@32Q40@?48
v56@0:8Q16Q24@32@40@?48
B32@0:8@16^@24
@24@0:8^@16
B56@0:8Q16Q24@32@40^@48
@64@0:8Q16Q24@32@40Q48^@56
@32@0:8@16^@24
v32@0:8Q16@?24
B40@0:8@16@24^@32
@"SiriCoreSQLiteDatabase"
@"ADAnalyticsEventRecordBuilder"
v32@0:8@"<SiriCoreSQLiteValue>"16@"NSString"24
@"<SiriCoreSQLiteRecord>"16@0:8
@"<SiriCoreSQLiteValue>"
B24@0:8@"NSURL"16
@"NSString"40@0:8@"NSString"16@"NSString"24@"NSBundle"32
v32@0:8@"SABaseCommand"16@?<v@?@"SABaseCommand"@"NSError">24
@"AFPeerInfo"16@0:8
v24@0:8@?<v@?>16
v36@0:8@"NSSet"16B24@?<v@?@"NSArray">28
@"AFEndpointInfo"16@0:8
@"AFInstanceInfo"16@0:8
@"AFSpeechInfo"16@0:8
v40@0:8@"SABaseCommand"16@"AFCommandExecutionInfo"24@?<v@?@"SABaseCommand"@"NSError">32
v44@0:8@"NSSet"16@"NSString"24B32@?<v@?@"NSArray">36
i24@0:8^{AudioQueueBuffer=I^vI^vI^{AudioStreamPacketDescription}I}16
B28@0:8d16I24
B28@0:8^{AudioStreamBasicDescription=dIIIIIIII}16I24
@"<ADPassthroughEndpointerDelegate>"
@"<Endpointer>"
v56@0:8q16@24@32@40@?48
@"NSBundle"
v48@0:8@16q24q32@40
v32@0:8@16B24B28
v48@0:8@"SOMediaNowPlayingObserver"16q24q32@"NSDate"40
v24@0:8@"SOMediaNowPlayingObserver"16
v32@0:8@"SOMediaNowPlayingObserver"16B24B28
v56@0:8q16q24@32@40@?48
@"AFMediaPlaybackStateSnapshot"
@"SOMediaNowPlayingObserver"
@"ADAnnounceNotificationRequest"
v24@0:8@"CARSession"16
v32@0:8@"CARSession"16@"CARSessionConfiguration"24
Q20@0:8B16
@"CARSessionStatus"
v32@0:8@?16@?24
@"AFQueue"
Vv40@0:8@16B24B28@?32
Vv40@0:8@"SABaseCommand"16B24B28@?<v@?B@"NSError">32
v28@0:8B16@20
v32@0:8@"AceObject<SAAceCommand>"16@?<v@?@"AceObject<SAAceCommand>"@"NSError">24
v28@0:8B16@"NSError"20
v24@0:8@"NSError"16
v24@0:8@"AceObject<SAAceCommand>"16
@"<AFClientLiteClientCommandHandling>"
@32@0:8@?16@?24
v44@0:8@16q24@32B40
v28@0:8@"INSExtensionService"16B24
v48@0:8@"INSExtensionService"16@"NSData"24q32@?<v@?@"NSData"@"NSError">40
v40@0:8@"INSExtensionService"16@"NSData"24@?<v@?@"NSData"@"NSError">32
v32@0:8@"INSExtensionService"16@"INImage"24
v32@0:8@"INSExtensionService"16@"NSString"24
v40@0:8@"INSExtensionService"16@"NSString"24@"NSError"32
v44@0:8@"INSExtensionService"16q24@"NSDictionary"32B40
@"NSString"24@0:8@"INSExtensionService"16
v40@0:8@"INSExtensionService"16@"SABaseCommand"24@?<v@?@"NSError">32
@"NSDictionary"32@0:8@"INSExtensionService"16@"SABaseCommand"24
@"NSDictionary"32@0:8@"INSExtensionService"16@"NSError"24
v48@0:8@"INSExtensionService"16q24@"INIntent"32@?<v@?B>40
v40@0:8@"INSExtensionService"16q24@?<v@?>32
v32@0:8@"INSExtensionService"16@"INIntent"24
v48@0:8@"INSExtensionService"16@"INIntent"24@"NSString"32@?<v@?@"INIntentResponse"@"NSError">40
v48@0:8@"INSExtensionService"16@"INIntentForwardingAction"24@"NSString"32@?<v@?@"INIntentForwardingActionResponse">40
B40@0:8^@16@24^@32
@"INSExtensionService"
@"AFPeerMap"
@80@0:8@16@24@32@40@48@56@64@72
@"AFHomeAccessoryInfo"
v24@0:8@"AFHomeAccessoryInfo"16
@"ADDeviceCirclePeerData"
{_mutationFlags="isDirty"b1"hasAceVersion"b1"hasAssistantIdentifier"b1"hasBuildVersion"b1"hasProductType"b1"hasSharedUserIdentifier"b1"hasUserAssignedDeviceName"b1"hasUserInterfaceIdiom"b1"hasHomeAccessoryInfo"b1}
v32@0:8@"ADHomeInfoManager"16@"AFHomeAccessoryInfo"24
@"AFPeerInfo"
S16@0:8
v20@0:8S16
@"ADPeerInfo"
@"PBCodable"
@"NSError"
v60@0:8@16@24B32@36@44@?52
v52@0:8@16@24B32@36@?44
v60@0:8@"<SAAceCommand>"16@"ADPeerInfo"24B32@"NSString"36@"ADCommandExecutionContext"44@?<v@?@"NSDictionary"@"NSError">52
v52@0:8@"NSData"16@"ADPeerInfo"24B32@"ADCommandExecutionContext"36@?<v@?@"NSDictionary"@"NSError">44
v40@0:8@"AFRequestInfo"16@"ADPeerInfo"24@?<v@?B>32
v36@0:8@16S24@28
v48@0:8@16S24@28S36@?40
v56@0:8@16S24@28@36S44@?48
v32@0:8@?16^v24
B40@0:8@16@24@?32
v52@0:8@16S24@28@36@44
@"NSMapTable"
B24@0:8^q16
@"STAlarm"
v40@0:8@16q24@?32
v32@0:8@"STAlarm"16@?<v@?@"STAlarm"@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSArray"@"NSError">24
v40@0:8@"STAlarm"16q24@?<v@?@"NSArray"@"NSError">32
B32@0:8^f16^f24
@32@0:8@16^B24
@"NSDateFormatter"
@"NSData"32@0:8@"NSData"16^@24
B32@0:8@"NSData"16^@24
^{NACContextOpaque_=}
v32@0:8@"ADPeerLocationConnection"16@"CLLocation"24
v24@0:8@"ADPeerLocationConnection"16
B40@0:8@16@24@32
@"<ADLocationManagerDelegate>"
@"ADPeerLocationConnection"
@"SAGetRequestOrigin"
@"CLLocation"
@"CLInUseAssertion"
@"GEOLocationShifter"
@"ADGreenTeaLogger"
B24@0:8d16
v36@0:8@16@24B32
v32@0:8@"<AFContextSnapshotTransforming>"16@"NSString"24
v36@0:8@"<AFContextSnapshot>"16@"AFDeviceContextMetadata"24B32
@48@0:8@16@24@32@40
v56@0:8@16@24@32@40@?48
v52@0:8@16@24@32B40@?44
@"AFMutableDeviceContext"
@"<ADLocalContextStoreDelegate>"
v36@0:8I16@20@?28
v32@0:8@"ADMediaRemoteService"16@?<v@?@"<SAAceCommand>"@"NSError">24
@"NSSet"
@"<ADVolumeTracking>"
@44@0:8@16@24i32@36
i20@0:8C16
Vv40@0:8@16q24@?32
Vv40@0:8@"NSData"16q24@?<v@?@"NSData"@"NSError">32
Vv40@0:8@"NSDictionary"16q24@?<v@?@"NSDictionary"@"NSDictionary">32
Vv48@0:8@"NSData"16@"NSString"24@"NSString"32@?<v@?@"NSError">40
Vv32@0:8@"NSString"16@?<v@?@"NSError">24
v36@0:8@16B24@?28
@"AFContextDonationService"
@40@0:8@16@24q32
v24@0:8@"ADRapportLinkDiscoveryOptions"16
v24@0:8@"ADRapportLinkTransportOptions"16
@"ADRapportLinkConfiguration"
{_mutationFlags="isDirty"b1"hasDiscoveryOptions"b1"hasTransportOptions"b1"hasEnablesProximityTracking"b1}
Q32@0:8@16@24
@"AFExperimentContext"
@"NSURLSession"
@32@0:8@"NSDictionary"16@"<AceContext>"24
@"NSMutableDictionary"16@0:8
@"NSArray"16@0:8
v60@0:8@16I24@28@36@44@52
v56@0:8@16@24B32B36Q40@48
v32@0:8@"AFXPCWrapper"16@"CSSiriSpeechRecordingContext"24
v60@0:8@"NSString"16I24@"<AFBluetoothDevice>"28@"NSString"36@"AFDictationOptions"44@"CSSiriSpeechRecordingContext"52
v56@0:8@"NSString"16@"<AFBluetoothDevice>"24B32B36Q40@"CSSiriSpeechRecordingContext"48
v24@0:8@"CSSiriSpeechRecordingContext"16
v32@0:8@"NSError"16@"CSSiriSpeechRecordingContext"24
v24@0:8@"SASSpeechPartialResult"16
v32@0:8@"NSArray"16@"NSString"24
v48@0:8@"NSArray"16@"NSArray"24@"NSString"32@"NSString"40
v40@0:8@"SASSpeechRecognized"16@"NSString"24@"NSString"32
v32@0:8@"NSError"16@"NSString"24
v32@0:8@"NSString"16@"NSString"24
v40@0:8@"SAStructuredDictationResult"16@"NSString"24@"NSString"32
v40@0:8@"NSFileHandle"16@"NSError"24@"CSSiriSpeechRecordingContext"32
v40@0:8@"SASPronunciationRecognized"16@"NSString"24@"NSString"32
v24@0:8@"SASVoiceSearchPartialResult"16
v24@0:8@"SASVoiceSearchFinalResult"16
v36@0:8@"NSString"16@"NSDictionary"24B32
v32@0:8@"SASMultilingualSpeechRecognized"16@"NSString"24
v40@0:8q16@"CSSiriSpeechRecordingContext"24@?<v@?dd@"NSError">32
v32@0:8@"ADSessionManager"16@"AceObject<SAAceCommand>"24
v36@0:8@"ADSessionManager"16@"NSError"24B32
B32@0:8@"ADSessionManager"16@"NSError"24
v24@0:8@"ADSessionManager"16
B24@0:8@"ADSessionManager"16
@"NSArray"24@0:8@"ADSessionManager"16
v40@0:8@"ADSessionManager"16@"NSString"24@"NSString"32
v28@0:8@"ADSessionManager"16B24
v32@0:8@"ADSessionManager"16@"NSError"24
v52@0:8@16d24B32@36@44
v56@0:8@16@24d32q40@48
v32@0:8@16f24f28
v56@0:8@16q24q32@40@48
v52@0:8@16@24B32@36@44
v40@0:8@16d24@32
v44@0:8@16@24@32B40
v48@0:8@16q24@32@?40
v88@0:8@16@24Q32@40q48q56q64@72@80
v40@0:8@"ADSpeechManager"16@"CSSiriRecordingInfo"24@"CSSiriSpeechRecordingContext"32
v52@0:8@"ADSpeechManager"16d24B32@"AFXPCWrapper"36@"CSSiriSpeechRecordingContext"44
v56@0:8@"ADSpeechManager"16@"NSArray"24d32q40@"CSSiriSpeechRecordingContext"48
v40@0:8@"ADSpeechManager"16@"NSData"24d32
v24@0:8@"ADSpeechManager"16
v32@0:8@"ADSpeechManager"16f24f28
v56@0:8@"ADSpeechManager"16q24q32@"CSEndpointerMetrics"40@"CSSiriSpeechRecordingContext"48
v40@0:8@"ADSpeechManager"16q24@"CSSiriSpeechRecordingContext"32
v32@0:8@"ADSpeechManager"16@"CSSiriSpeechRecordingContext"24
v40@0:8@"ADSpeechManager"16@"NSError"24@"CSSiriSpeechRecordingContext"32
v48@0:8@"ADSpeechManager"16@"NSFileHandle"24@"NSError"32@"CSSiriSpeechRecordingContext"40
v40@0:8@"ADSpeechManager"16@"NSDictionary"24@"NSString"32
v40@0:8@"ADSpeechManager"16@"NSArray"24@"NSString"32
v40@0:8@"ADSpeechManager"16@"AFSpeechRecognition"24@"NSString"32
v40@0:8@"ADSpeechManager"16@"AFSpeechPackage"24@"NSString"32
v32@0:8@"ADSpeechManager"16@"NSString"24
v52@0:8@"ADSpeechManager"16@"NSError"24B32@"NSString"36@"NSDictionary"44
v40@0:8@"ADSpeechManager"16d24@"CSSiriSpeechRecordingContext"32
v44@0:8@"ADSpeechManager"16@"NSString"24@"NSDictionary"32B40
v32@0:8@"ADSpeechManager"16@"NSError"24
v48@0:8@"ADSpeechManager"16q24@"CSSiriSpeechRecordingContext"32@?<v@?dd@"NSError">40
v28@0:8@"ADSpeechManager"16B24
v88@0:8@"ADSpeechManager"16@"NSDictionary"24Q32@"NSString"40q48q56q64@"NSString"72@"NSString"80
v32@0:8@"ADSpeechManager"16Q24
v32@0:8@"ADLocationManager"16@"SASetRequestOrigin"24
v40@0:8@16@?24@32
v40@0:8@"ADUIService"16@?<v@?>24@"<SAClientBoundCommand>"32
v40@0:8@"ADUIService"16@"<SAClientBoundCommand>"24@"AFCommandExecutionInfo"32
v40@0:8@?16@24@32
v40@0:8@16B24B28@?32
v24@0:8B16B20
v44@0:8q16B24q28@36
v44@0:8@16B24@28@?36
v40@0:8@16@24B32B36
v80@0:8@16@24@32@40q48@56@64@72
v80@0:8@16Q24@32q40q48q56@64@72
v64@0:8@16@24@32@40@48@?56
v60@0:8@16B24@28@36@44@52
v48@0:8@16B24B28@32@?40
v36@0:8@16B24@28
v128@0:8B16B20B24B28B32B36@40@48B56B60q64B72B76B80B84Q88B96B100B104B108@112@120
v52@0:8d16B24B28B32B36B40@?44
v44@0:8f16@20q28@?36
v56@0:8@16d24d32q40@?48
@"<ADCommandCenterClient>"
@"<ADCommandCenterRequestDelegate>"
@"<ADCommandCenterSpeechDelegate>"
@"AFSafetyBlock"
@"ADUIService"
@"ADFauxUIService"
@"ADAccount"
@"ADSessionManager"
@"ADDiagnosticsManager"
@"ADSpeechManager"
@"ADServiceManager"
@"ADDomainObjectCache"
@"ADResultObjectCache"
@"ADLocationManager"
@"ADMotionManager"
@"AFPowerAssertionManager"
@"ADRemoteRequestHelper"
@"ADRemoteSpeechRequestHelper"
@"ADDeviceSyncCoordinator"
@"ADRequestDelayManager"
@"ADDeviceRouter"
@"ADFlowServiceListener"
@"ADSiriAnnouncementRequestCapabilityManager"
@"ADDeviceResolutionServiceListener"
@"ADAssetManager"
@"AFSpeechRequestOptions"
@"SASStartSpeech"
@"SASFinishSpeech"
@"SABaseCommand"
@"SASPronunciationContext"
@"SASResultCandidate"
@"ADCommandExecutionContext"
@"AFClientConfiguration"
@"NSObject<OS_os_transaction>"
@"AFVoiceInfo"
@"AFAWDSiriSession"
@"AFAWDSiriRequestRecord"
@"ADRequestStatistics"
@"ADOfflineMetricsManager"
@"ADContextManager"
@"SAClearContext"
@"ADSyncManager"
@"<ADCommandCenterSyncDelegate>"
@"ADSyncVerificationHelper"
@"ADAcousticIDHelper"
@"ADSharedDataService"
@"ADRequestDispatcherService"
v32@0:8@"SOClockAlarmObserver"16@"NSUUID"24
v40@0:8@"SOClockAlarmObserver"16@"AFClockAlarmSnapshot"24@"AFClockAlarmSnapshot"32
@"SOClockAlarmObserver"
@28@0:8@16i24
@32@0:8Q16@24
v32@0:8@"CSAudioSessionController"16@"NSDictionary"24
^{__CFBag=}
v32@0:8@16Q24
v32@0:8@"HMHomeManager"16Q24
v24@0:8@"HMHomeManager"16
v32@0:8@"HMHomeManager"16@"HMHome"24
v32@0:8@"HMHomeManager"16@"HMAddAccessoryRequest"24
v32@0:8@"HMHomeManager"16@"NSArray"24
v28@0:8@"HMHomeManager"16B24
v40@0:8@"HMHomeManager"16q24@"NSString"32
v40@0:8@"HMUser"16@"HMAssistantAccessControl"24@"HMHome"32
v40@0:8@"HMUser"16@"HMMediaContentProfileAccessControl"24@"HMHome"32
v32@0:8@"HMUser"16@"HMPhotosPersonManagerSettings"24
v32@0:8@"HMUser"16@"HMFPairingIdentity"24
v28@0:8@"HMUser"16B24
v40@0:8@"HMUserCloudShareManager"16@"HMUserCloudShareInvitation"24@?<v@?B@"NSError">32
v40@0:8@"HMUserCloudShareManager"16@"HMUserCloudShareInvitation"24@?<v@?B@"HMUserCloudShareClientInfo"@"NSError">32
v40@0:8@"HMUserCloudShareManager"16@"HMUserCloudShareRepairInfo"24@"HMHome"32
v24@0:8@"HMHome"16
v32@0:8@"HMHome"16@"HMAccessory"24
v32@0:8@"HMHome"16@"HMUser"24
v40@0:8@"HMHome"16@"HMRoom"24@"HMAccessory"32
v32@0:8@"HMHome"16@"HMRoom"24
v32@0:8@"HMHome"16@"HMZone"24
v40@0:8@"HMHome"16@"HMRoom"24@"HMZone"32
v32@0:8@"HMHome"16@"HMServiceGroup"24
v40@0:8@"HMHome"16@"HMService"24@"HMServiceGroup"32
v32@0:8@"HMHome"16@"HMActionSet"24
v32@0:8@"HMHome"16@"HMTrigger"24
v40@0:8@"HMHome"16@"NSError"24@"HMAccessory"32
v32@0:8@"HMHome"16Q24
v24@0:8@"HMSettings"16
v40@0:8@"HMSettings"16@"NSUUID"24@"NSString"32
v32@0:8@"HMHome"16@"HMResidentDevice"24
v32@0:8@"HMHome"16@"CLLocation"24
v32@0:8@"HMHome"16@"NSArray"24
v28@0:8@"HMHome"16B24
v32@0:8@"HMHome"16q24
v32@0:8@"HMHome"16@"NSString"24
v32@0:8@"HMHome"16@"HMMediaSystem"24
v32@0:8@"HMHome"16@"HMAccessoryNetworkProtectionGroup"24
v32@0:8@"HMHome"16@"HMHomePersonManagerSettings"24
v32@0:8@"HMHome"16@"NSError"24
v24@0:8@"HMAccessorySettings"16
v40@0:8@"HMAccessorySettings"16@"NSUUID"24@"NSString"32
v24@0:8@"HMAccessory"16
v32@0:8@"HMAccessory"16@"HMService"24
v32@0:8@"HMAccessory"16@"HMAccessoryProfile"24
v40@0:8@"HMAccessory"16@"HMService"24@"HMCharacteristic"32
v32@0:8@"HMAccessory"16@"NSString"24
v32@0:8@"HMAccessory"16@"HMCharacteristic"24
v32@0:8@"HMAccessory"16@"HMAccessorySettings"24
v28@0:8@"HMAccessory"16B24
v32@0:8@"HMAccessory"16@"HMFPairingIdentity"24
v32@0:8@"HMAccessory"16@"HMFSoftwareVersion"24
v32@0:8@"HMAccessory"16@"ACAccount"24
v32@0:8@"HMAccessory"16@"HMAccessory"24
v32@0:8@"HMAccessory"16@"HMSymptomsHandler"24
v32@0:8@"HMAccessory"16@"HMDevice"24
v36@0:8@16q24B32
v32@0:8q16@24
@"HMHomeManager"
@"HMAccessory"
@"HMHome"
@"ADHomeInfo"
@"SASetHomeContext"
@"ADPreferredMediaUserInfo"
@"AFNotifyStatePublisher"
{_mutationFlags="isDirty"b1"hasGenerationsByDataType"b1}
@56@0:8Q16@24@32d40@48
@"AFAssertionContext"
{_mutationFlags="isDirty"b1"hasTimestamp"b1"hasReason"b1"hasEffectiveDate"b1"hasExpirationDuration"b1"hasUserInfo"b1}
@24@0:8d16
@"ADAudioSessionCoordinationMessageKeepAudioSessionAliveRequest"
{_mutationFlags="isDirty"b1"hasExpirationDuration"b1}
v40@0:8@16Q24@32
@56@0:8@16@24q32@40@48
v24@0:8@"ADPeerInfo"16
v24@0:8@"NSUUID"16
@"ADDeviceRouterResult"
{_mutationFlags="isDirty"b1"hasPeerInfo"b1"hasContextIdentifier"b1"hasProximity"b1"hasCommandRelayProxyIdentifier"b1"hasError"b1}
@"ADOfflineMetricsMap"
@40@0:8@16@24^@32
Q32@0:8d16d24
v28@0:8I16@?20
v40@0:8I16I20Q24@?32
@"AWDServerConnection"
@"NSNumber"
{?="requiresUserInteraction"b1}
v88@0:8@16@24@32@40B48B52B56B60@64@72@80
v68@0:8@16@24B32@36@44@52@60
@"<AFRequestDispatcher>"
@"<SiriAnalyticsMessageStorage>"
v40@0:8q16Q24@32
v36@0:8q16@24B32
v40@0:8q16@?24@32
v32@0:8#16@24
v40@0:8#16Q24@32
v44@0:8q16Q24@32B40
v48@0:8q16Q24@?32@40
v40@0:8q16Q24@?32
@"<AFAnalyticsService>"
v24@0:8@?<v@?B>16
@"UNNotification"
v32@0:8@"<AFAnnouncementRequestCapabilityProviding>"16Q24
@"<AFAnnouncementRequestCapabilityProviding>"
@"ADAudioSessionCoordinationMessageEndAudioSessionResponse"
@"<ADPeerLocationPolicyDelegate>"
q24@0:8q16
@"SANavStatus"
@"SALocalSearchGetNavigationStatusCompleted"
@"SAMPQueueState"
@"SAErrorIndicatorStatus"
@"SAHACurrentHome"
@"SAPhoneCallState"
@"SAUserTokenStatus"
@"SARemotePlaybackDeviceList"
@"SAHomeCommunicationAnnouncement"
@"<ADDeviceAuthenticationSession>"
v24@0:8@"NSLocale"16
@60@0:8@16@24@32@40d48B56
v28@0:8@16I24
@"CESRTrialAssetManager"
@"CDMClient"
@"MorphunAssets"
@32@0:8@16d24
@"ADAudioSessionCoordinationMessageBeginAudioSessionRequest"
{_mutationFlags="isDirty"b1"hasEffectiveDate"b1"hasExpirationDuration"b1}
v24@0:8@"ADService"16
@"SASyncAnchor"
@"ADService"
@"<ADSyncManagerDelegate>"
@"SASyncGetAnchors"
#20@0:8i16
v32@0:8@"ADAssistantDataManager"16@"SASetAssistantData"24
v48@0:8@"ADAssistantDataManager"16@"SASetAssistantData"24@"NSArray"32@"NSString"40
@"SiriCoreConnectionType"
@"<ADSessionDelegate>"
v40@0:8@"AFPineBoardSystemStateObserver"16q24q32
v32@0:8q16q24
v64@0:8@16@24q32@40@48@56
v48@0:8@"NSString"16@"NSString"24@"NSString"32@"<AFSyncBeginInfo>"40
v56@0:8@"NSString"16@"NSString"24q32@"NSString"40@"<AFSyncBeginInfo>"48
v64@0:8@"NSString"16@"NSString"24q32@"NSString"40@"<AFSyncBeginInfo>"48@"<AFSyncConfiguration>"56
v32@0:8@"<AFSyncBeginInfo>"16@"<AFSyncConfiguration>"24
v32@0:8@"NSString"16@"<AFSyncChangeInfo>"24
@"AFSyncSnapshot"24@0:8@"NSString"16
@"AFSyncSnapshot"16@0:8
@"NSString"24@0:8@"NSString"16
@"NSOrderedSet"
@"ADDictationSessionTracker"
d24@0:8@16
@"ADServiceStatistics"
@"<ADServiceConnectionDelegate>"
Vv72@0:8@"NSString"16@"NSString"24@"NSArray"32@"NSArray"40@"NSString"48@"NSUUID"56@?<v@?B>64
Vv32@0:8@"NSURL"16@?<v@?B>24
Vv40@0:8@"SABaseCommand"16@"AFCommandExecutionInfo"24@?<v@?@"SABaseCommand"@"NSError">32
Vv44@0:8@"NSSet"16@"NSString"24B32@?<v@?@"NSArray">36
@"ADServiceConnection"
B24@0:8^f16
B24@0:8^d16
@48@0:8Q16@24@32@40
@"ADDeviceSyncIncrementalChange"
{_mutationFlags="isDirty"b1"hasGeneration"b1"hasDate"b1"hasInsertedOrUpdatedItems"b1"hasDeletedItemUUIDs"b1}
@?32@0:8@16@24
@"ADServiceCommandType"
@"<ADAceRequestTransformer>"
@"<ADAceResponseTransformer>"
@"<AFSiriRequestHandling>"
@"<ADUIServiceDelegate>"
q20@0:8B16
v48@0:8d16B24B28B32B36@?40
v40@0:8d16B24B28@?32
v108@0:8d16B24B28@32{?={?=Bq}{?=Bq}{?=Bq}Q}40B96@?100
v80@0:8@16@24Q32@40@48d56@?64@?72
v128@0:8B16B20B24B28B32B36@40B48B52q56B64B68B72B76Q80B88B92B96B100@104@112@?120
i20@0:8i16
v32@0:8@"ADDeviceSyncMessage"16@?<v@?@"ADDeviceSyncMessage"@"NSError">24
@"<ADDeviceSyncMessagingService>"
v36@0:8@16f24@28
v36@0:8@"NSString"16f24@"<AFOpportuneSpeakable>"28
@"<AFOpportuneSpeakable>"
v24@0:8@"ADDeviceSyncSnapshot"16
{_mutationFlags="isDirty"b1"hasSnapshot"b1}
v40@0:8@"ADCallObserver"16Q24Q32
v28@0:8@"ADCallObserver"16B24
@"ADCallObserver"
@"AFCallStateSnapshot"
@"AFClientLite"
@"ActivityDispatcher"
B24@0:8@"SISchemaTopLevelUnionType"16
v32@0:8@"SISchemaTopLevelUnionType"16@?<v@?@"SISchemaTopLevelUnionType"B>24
Vv32@0:8@"NSString"16@?<v@?@"NSString"@"NSError">24
Vv32@0:8@"NSString"16@?<v@?@"NSString"@"NSString"@"NSError">24
Vv24@0:8@?<v@?@"NSDictionary"@"NSError">16
Vv32@0:8@"NSString"16@?<v@?@"AFPersonalUserSettings"@"NSError">24
Vv24@0:8@?<v@?@"NSString"@"NSError">16
v24@0:8@"SAPerson"16
B32@0:8@16^B24
v64@0:8@16@24@32@40B48B52@?56
B48@0:8@16@24@32^@40
@64@0:8@16@24@32^@40^Q48^B56
v72@0:8@16@24@32@40@48@56@?64
v44@0:8@16@24B32@36
@48@0:8@16@24q32@40
@"SAHomeMemberInfo"
@"SAMultiUserInfo"
@"SSRVoiceProfileManager"
@"ADCommunalDeviceUser"
@"SAPerson"
@"<ADAddressBookManagerDelegate>"
@"CNContactStore"
v24@0:8@"CBCentralManager"16
v32@0:8@"CBCentralManager"16@"NSDictionary"24
v48@0:8@"CBCentralManager"16@"CBPeripheral"24@"NSDictionary"32@"NSNumber"40
v32@0:8@"CBCentralManager"16@"CBPeripheral"24
v40@0:8@"CBCentralManager"16@"CBPeripheral"24@"NSError"32
v40@0:8@"CBCentralManager"16q24@"CBPeripheral"32
v24@0:8@"CBPeripheral"16
v32@0:8@"CBPeripheral"16@"NSArray"24
v32@0:8@"CBPeripheral"16@"NSError"24
v40@0:8@"CBPeripheral"16@"NSNumber"24@"NSError"32
v40@0:8@"CBPeripheral"16@"CBService"24@"NSError"32
v40@0:8@"CBPeripheral"16@"CBCharacteristic"24@"NSError"32
v40@0:8@"CBPeripheral"16@"CBDescriptor"24@"NSError"32
v40@0:8@"CBPeripheral"16@"CBL2CAPChannel"24@"NSError"32
@"CBCentralManager"
v48@0:8@16@24:32@40
:32@0:8@16@24
v40@0:8@16^@24^@32
v40@0:8@"AFHomeAnnouncementObserver"16Q24Q32
v40@0:8@"AFHomeAnnouncementObserver"16@"AFHomeAnnouncementSnapshot"24@"AFHomeAnnouncementSnapshot"32
@"AFHomeAnnouncementObserver"
@"AFHomeAnnouncementSnapshot"
v24@0:8@"SiriCoreNetworkManager"16
v56@0:8@16@24@32d40@48
v32@0:8@"<SiriCoreSiriConnection>"16@"SiriCoreConnectionType"24
v56@0:8@"<SiriCoreSiriConnection>"16@"SiriCoreConnectionType"24@"NSString"32d40@"NSString"48
v32@0:8@"<SiriCoreSiriConnection>"16@"AceObject"24
v24@0:8@"<SiriCoreSiriConnection>"16
v40@0:8@"<SiriCoreSiriConnection>"16@"NSError"24@"SiriCoreAceConnectionAnalysisInfo"32
v32@0:8@"<SiriCoreSiriConnection>"16@"NSError"24
v32@0:8@"<SiriCoreSiriConnection>"16@"NSDictionary"24
v40@0:8B16B20@24B32B36
v44@0:8B16B20@24@32B40
v52@0:8B16B20@24B32@36B44B48
@"<SiriCoreSiriConnection>"
@"NSURL"
@"ADAuthenticator"
@"ADRetryManager"
@48@0:8@16@24@32Q40
@32@0:8@16Q24
@"ADCommunalDeviceUserAttributes"
v32@0:8@"SOClockTimerObserver"16@"NSUUID"24
v40@0:8@"SOClockTimerObserver"16@"AFClockTimerSnapshot"24@"AFClockTimerSnapshot"32
v40@0:8Q16Q24@?32
v40@0:8Q16Q24@?<v@?@"NSArray"@"NSError">32
v24@0:8@?<v@?@"ADDeviceSyncSnapshot"@"NSError">16
@"<ADDeviceSyncDataProviderDelegate>"
v24@0:8@?<v@?@"NSArray">16
v32@0:8@"NSSet"16@?<v@?@"NSDictionary">24
v32@0:8@"NSArray"16@?<v@?@"NSDictionary">24
v40@0:8@"NSArray"16@"NSArray"24@?<v@?@"NSDictionary">32
v32@0:8@"NSString"16@"NSNumber"24
v40@0:8@"NSString"16@"NSNumber"24@"NSDictionary"32
v48@0:8@"NSString"16@"NSNumber"24@"NSNumber"32@"NSDictionary"40
v56@0:8@"NSString"16@"NSNumber"24@"NSNumber"32@"NSNumber"40@"NSDictionary"48
v40@0:8@"NSString"16@"NSNumber"24@"NSNumber"32
v32@0:8i16i20@24
v36@0:8@"AFAssertionCoordinator"16@"<AFAssertion>"24B32
@32@0:8@16@?24
@"<AFRelinquishableAssertion>"32@0:8@"AFAssertionContext"16@?<v@?@"AFAssertionContext"@"NSError">24
@56@0:8@16@24@32d40^@48
v40@0:8@16@24d32
v32@0:8@16d24
@"<ADAudioSessionCoordinatorDelegate>"
@"AFHeartBeat"
@"NSDateInterval"
@"AFAudioSessionCoordinationSystemInfo"
@"AFAssertionCoordinator"
{?="firstByteReadInterval"b1"openInterval"b1"pingMean"b1"rxBytes"b1"rxDuplicateBytes"b1"rxOooBytes"b1"rxPackets"b1"sndBandwidth"b1"tuscanyConnectionDelay"b1"txBytes"b1"txPackets"b1"txRetransmitBytes"b1"txUnacked"b1"attemptCount"b1"connectedSubflowCount"b1"connectionFallbackReason"b1"metricsCount"b1"pingCount"b1"primarySubflowSwitchCount"b1"rttBest"b1"rttCurrent"b1"rttSmoothed"b1"rttVariance"b1"subflowCount"b1"synRetransmits"b1"unacknowledgedPingCount"b1}
q40@0:8@16Q24Q32
q40@0:8@"NSString"16Q24Q32
v32@0:8@"NSString"16@?<v@?Q>24
v32@0:8@"ADDeviceSyncSnapshot"16@"NSString"24
B28@0:8@16B24
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
@"APSConnection"
@"HMClientConnection"
v56@0:8@16Q24Q32@40@?48
@"NSObject<OS_dispatch_data>"24@0:8^@16
@"NSArray"24@0:8@"NSString"16
B32@0:8@"NSString"16@"NSString"24
B24@0:8@"NSString"16
v48@0:8@"SABaseClientBoundCommand"16@"NSString"24@"ADCommandExecutionContext"32@?<v@?@"<SAAceCommand>"@"NSError">40
v40@0:8@"SABaseCommand"16@"SABaseClientBoundCommand"24@?<v@?>32
v32@0:8@"AFSyncInfo"16@?<v@?@"ADSyncChunkInfo"@"NSError"@?<v@?B>>24
v32@0:8@"AFSyncInfo"16@?<v@?@"AFSyncSnapshot">24
v28@0:8@"NSString"16B24
@"<ADServiceDelegate>"
Vv40@0:8@16Q24@32
Vv32@0:8@16Q24
Vv32@0:8@"NSArray"16@?<v@?>24
Vv40@0:8@"NSString"16Q24@"NSUUID"32
Vv32@0:8@"NSData"16Q24
v36@0:8i16@?20@28
v28@0:8i16@20
@"ADAnalyticsStore"
@"ADInstrumentationResolver"
@"ADAnalyticsFuzzingInterval"
v40@0:8@"UNUserNotificationCenter"16@"UNNotification"24@?<v@?Q>32
v40@0:8@"UNUserNotificationCenter"16@"UNNotificationResponse"24@?<v@?>32
v32@0:8@"UNUserNotificationCenter"16@"UNNotification"24
v40@0:8@16Q24@?32
@"UNUserNotificationCenter"
@"<AFUserNotificationServiceDelegate>"
@"FBSDisplayLayoutMonitor"
@"<NSXPCListenerDelegate>"
@36@0:8@16i24@28
@"ADNotifyAndPushContextCollector"
B20@0:8i16
v28@0:8@?16i24
v32@0:8@"MCProfileConnection"16@"NSDictionary"24
v32@0:8@"ADAddressBookManager"16@"SAPerson"24
v32@0:8@"ADDisplayScaleContextCollector"16d24
@"SAVoice"
@"SAMediaContentRatingRestrictions"
@"ADDisplayScaleContextCollector"
@"SASetAssistantData"
@"ADAddressBookManager"
B24@0:8Q16
@"CKKnowledgeStore"
v32@0:8@"<SiriCoreConnectionProvider>"16@"NSError"24
v28@0:8@"<SiriCoreConnectionProvider>"16B24
v24@0:8@"<SiriCoreConnectionProvider>"16
@40@0:8^{__CFHTTPMessage=}16@24^B32
v24@0:8^{__CFHTTPMessage=}16
@32@0:8^{__CFHTTPMessage=}16@24
v48@0:8@16@24Q32@40
@"ADPeerConnectionProvider"
@"NSObject<OS_dispatch_data>"
@"<SiriCoreConnectionProvider>"
[4096C]
^{__CFHTTPMessage=}
v48@0:8@16d24d32@?40
@48@0:8@16d24d32@?40
@"ADDeviceSyncItem"
{_mutationFlags="isDirty"b1"hasUUID"b1"hasProperties"b1}
@40@0:8@16@24Q32
@48@0:8@16@24q32Q40
@44@0:8@16@24Q32B40
@60@0:8@16@24Q32B40@44d52
@"_INVocabularyStoreManager"
@"SARestartRequest"
@"SABaseCommand<SAServerBoundCommand>"
B48@0:8Q16@24@32q40
@24@0:8i16i20
@28@0:8i16@20
@44@0:8i16i20@24@32i40
d24@0:8d16
i24@0:8q16
@"CMMotionActivityManager"
@"CMMotionActivity"
@"NSOperationQueue"
v40@0:8@"<AFBluetoothDevice>"16@"AFBluetoothDeviceInfo"24@"AFBluetoothDeviceInfo"32
v40@0:8@"<AFBluetoothDevice>"16@"AFBluetoothHeadphoneInEarDetectionState"24@"AFBluetoothHeadphoneInEarDetectionState"32
v40@0:8@"<AFBluetoothDevice>"16q24q32
v24@0:8@"<AFBluetoothDevice>"16
v40@0:8@"NSString"16@"NSURL"24@?<v@?B>32
v32@0:8@"NSURL"16@?<v@?B>24
v32@0:8@"NSDictionary"16@"NSURL"24
v24@0:8@"INImage"16
v32@0:8@"NSString"16@"NSError"24
v40@0:8q16@"INIntent"24@?<v@?BB>32
Vv32@0:8Q16@?24
Vv24@0:8B16B20
Vv32@0:8Q16d24
Vv36@0:8@16B24@?28
Vv32@0:8q16@"AFSpeechRequestOptions"24
Vv32@0:8@"AFSetAudioSessionActiveContext"16@?<v@?@"AFSetAudioSessionActiveResult">24
Vv32@0:8Q16@?<v@?>24
Vv24@0:8@"AFClientConfiguration"16
Vv24@0:8@"NSDate"16
Vv40@0:8@"AFSpeechRequestOptions"16Q24@?<v@?@"NSError">32
Vv40@0:8@"AFSpeechRequestOptions"16@"SASPronunciationContext"24@?<v@?@"NSError">32
Vv40@0:8@"AFSpeechRequestOptions"16@"NSString"24@?<v@?@"NSError">32
Vv32@0:8q16@"NSError"24
Vv24@0:8@?<v@?BI>16
Vv36@0:8@"NSDictionary"16B24@?<v@?B>28
Vv24@0:8@"SASetApplicationContext"16
Vv40@0:8@"NSArray"16@"NSArray"24@"NSString"32
Vv32@0:8@"NSArray"16@"NSString"24
Vv32@0:8@"NSString"16@24
Vv24@0:8@"AFMetrics"16
Vv32@0:8@"NSArray"16@?<v@?@"NSArray"@"NSError">24
Vv32@0:8@"NSSet"16@?<v@?@"NSDictionary">24
Vv24@0:8@?<v@?@"AFClockTimerSnapshot"@"NSError">16
Vv24@0:8@"AFSpeechSynthesisRecord"16
Vv40@0:8@"NSString"16@"NSString"24@"NSDictionary"32
Vv32@0:8@"NSData"16@?<v@?@"NSString"@"NSData">24
Vv40@0:8@"NSDictionary"16@"NSString"24@?<v@?@"NSDictionary"@"NSError">32
Vv24@0:8@"NSDictionary"16
Vv32@0:8@"AFApplicationInfo"16@?<v@?@"NSArray">24
Vv28@0:8@"NSURL"16B24
@"<AFBluetoothDevice>"
@"NSMutableOrderedSet"
v72@0:8@16q24q32d40@48d56q64
v32@0:8@"CoreEmbeddedSpeechRecognizer"16@"CESRModelProperties"24
v32@0:8@"CoreEmbeddedSpeechRecognizer"16@"NSArray"24
v32@0:8@"CoreEmbeddedSpeechRecognizer"16d24
v32@0:8@"CoreEmbeddedSpeechRecognizer"16@"AFSpeechRecognition"24
v32@0:8@"CoreEmbeddedSpeechRecognizer"16@"AFSpeechPackage"24
v40@0:8@"CoreEmbeddedSpeechRecognizer"16@"NSDictionary"24@"NSError"32
v72@0:8@"CoreEmbeddedSpeechRecognizer"16q24q32d40@"NSArray"48d56q64
Vv24@0:8d16
@"<AFDictationServiceDelegate>"
@"AFSiriIncomingCall"
v56@0:8@16@24B32@36B44@48
v36@0:8B16@20@28
v40@0:8@16d24q32
v40@0:8q16q24@32
v36@0:8B16@"NSError"20@"CSSiriRecordingInfo"28
v24@0:8@"CSSiriRecordingInfo"16
v40@0:8@"NSArray"16d24q32
v24@0:8@"NSData"16
v40@0:8q16q24@"CSEndpointerMetrics"32
v48@0:8@"NSError"16q24q32@"CSEndpointerMetrics"40
v40@0:8@"<CSSiriSpeechCapturing>"16@"NSData"24d32
v24@0:8@"<CSSiriSpeechCapturing>"16
v40@0:8@"<CSSiriSpeechCapturing>"16@"NSFileHandle"24@"NSError"32
v32@0:8@"<CSSiriSpeechCapturing>"16d24
v40@0:8@"<CSSiriSpeechCapturing>"16q24@?<v@?dd@"NSError">32
v28@0:8@"<CSSiriSpeechCapturing>"16B24
v32@0:8@"<CSSiriSpeechCapturing>"16@"NSDictionary"24
v44@0:8@"<CSSiriSpeechCapturing>"16@"NSString"24@"NSDictionary"32B40
v32@0:8@"<CSSiriSpeechCapturing>"16@"NSError"24
v80@0:8@"NSDictionary"16Q24@"NSString"32q40q48q56@"NSString"64@"NSString"72
v24@0:8@?<v@?@"ADVolumeService">16
v24@0:8@?<v@?@"CSSiriRecordingInfo">16
@"CSSiriRecordingInfo"16@0:8
v32@0:8@"AFAudioPowerUpdater"16f24f28
v32@0:8@"ADAudioSessionCoordinator"16@"NSDictionary"24
v48@0:8@16@24d32@40
v40@0:8@"NSUUID"16@"NSString"24@"NSArray"32
v40@0:8@"NSUUID"16@"AFSpeechPackage"24@"NSString"32
v48@0:8@"NSUUID"16@"AFSpeechRecognition"24d32@"NSString"40
v32@0:8d16B24B28
v24@0:8f16f20
@40@0:8q16@24@32
v40@0:8q16@24@32
v40@0:8@16B24B28@32
@"CSSiriSpeechRecordingContext"
@"<ADSpeechManagerDelegate>"
@"ADSpeechLog"
@"CSAudioSessionController"
@"<CSSiriSpeechCapturing>"
@"CSSiriSpeechRecorder"
@"ADSpeechPlaybackSimulator"
@"ADSpeechCompressor"
@"ADVolumeService"
@"CSSiriAudioPlaybackService"
@"AFAudioPowerUpdater"
@"ADAudioSessionCoordinator"
B32@0:8@16q24
B32@0:8@"ADRequestDelayManager"16q24
v28@0:8@"ADRequestDelayManager"16B24
v32@0:8@"CSSiriAudioPlaybackService"16@"AFAudioPlaybackRequest"24
v40@0:8@"CSSiriAudioPlaybackService"16@"AFAudioPlaybackRequest"24@"NSError"32
v56@0:8q16@24@32q40@?48
v48@0:8q16@24@32@?40
v48@0:8q16q24q32@?40
@"ADAnnouncementRequest"
@"ADExternalNotificationRequestQueue"
Vv28@0:8@16B24
Vv20@0:8B16
Vv44@0:8@16B24@28@?36
Vv28@0:8B16@?20
Vv56@0:8@16@24Q32@40@?48
Vv40@0:8@16Q24@?32
Vv36@0:8f16@20@?28
Vv60@0:8@16@24@32@40B48@?52
Vv44@0:8@16@24B32@?36
Vv32@0:8B16B20@?24
Vv72@0:8@16@24@32@40@48@56@?64
Vv32@0:8q16@?24
Vv32@0:8@16q24
Vv40@0:8@16@24q32
Vv24@0:8q16
Vv56@0:8@16d24d32q40@?48
Vv24@0:8@?<v@?@"NSArray"@"NSError">16
Vv28@0:8@"NSDictionary"16B24
Vv44@0:8@"NSArray"16B24@"NSString"28@?<v@?@"NSArray">36
v32@0:8B16B20@?<v@?@"NSArray">24
Vv28@0:8B16@?<v@?@"NSArray">20
Vv32@0:8@"AFVoiceInfo"16@?<v@?>24
Vv40@0:8@"NSString"16@"AFVoiceInfo"24@?<v@?@"NSDictionary"@"NSError">32
Vv40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError">32
Vv48@0:8@"NSString"16@"NSString"24@"NSData"32@?<v@?@"NSData"@"NSError">40
Vv32@0:8@"AFRequestInfo"16@?<v@?@"NSError">24
Vv24@0:8@"NSURL"16
Vv56@0:8@"NSString"16@"NSString"24Q32@"NSDictionary"40@?<v@?@"NSError">48
Vv32@0:8@"NSURL"16@?<v@?@"NSError">24
Vv40@0:8@"AFRequestInfo"16@"NSString"24@?<v@?@"NSError">32
Vv40@0:8@"AFAudioPlaybackRequest"16Q24@?<v@?@"NSError">32
Vv28@0:8@"AFAudioPlaybackRequest"16B24
Vv40@0:8@"NSDictionary"16@"NSString"24@?<v@?@"NSError">32
Vv48@0:8@"NSArray"16@"NSString"24@"NSString"32@?<v@?@"NSError">40
Vv24@0:8@?<v@?@"NSDate"@"NSError">16
Vv32@0:8@"NSString"16@?<v@?@"NSDictionary"@"NSError">24
Vv40@0:8@"NSString"16@"NSString"24@?<v@?@"NSArray"@"NSError">32
Vv32@0:8@"NSString"16@?<v@?@"NSArray"@"NSError">24
Vv24@0:8@?<v@?@"NSError">16
Vv24@0:8@?<v@?@"AFExperimentContext"@"NSError">16
Vv32@0:8@"NSString"16@?<v@?@"NSArray">24
Vv24@0:8@?<v@?@"SAPerson"@"NSError">16
Vv24@0:8@?<v@?B@"NSError">16
Vv32@0:8@"NSDictionary"16@?<v@?>24
Vv24@0:8@?<v@?@"NSDictionary">16
Vv32@0:8@"NSUUID"16@?<v@?@"AFPeerInfo">24
Vv24@0:8@?<v@?@"NSArray"B>16
Vv24@0:8@"NSNumber"16
Vv24@0:8@?<v@?@"AFPeerInfo"@"NSArray">16
Vv32@0:8@"NSString"16@?<v@?@"AFExperiment"@"NSError">24
Vv32@0:8@"NSString"16@?<v@?f@"NSError">24
Vv36@0:8f16@"NSString"20@?<v@?@"NSError">28
Vv32@0:8@"NSString"16@?<v@?@"AFBluetoothDeviceInfo">24
Vv32@0:8@"NSUUID"16@?<v@?@"AFBluetoothDeviceInfo">24
Vv24@0:8@?<v@?@"AFBluetoothWirelessSplitterSessionInfo">16
Vv60@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40B48@?<v@?@"NSError">52
Vv24@0:8@?<v@?@"NSString">16
Vv24@0:8@?<v@?@"NSString"@"NSArray">16
Vv44@0:8@"NSString"16@"NSString"24B32@?<v@?@"NSError">36
Vv32@0:8B16B20@?<v@?B>24
Vv72@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40@"NSString"48@"NSString"56@?<v@?@"NSError">64
Vv24@0:8@?<v@?@"NSString"@"NSString"@"NSError">16
Vv24@0:8@?<v@?B>16
Vv28@0:8B16@?<v@?@"NSError">20
Vv28@0:8B16@?<v@?>20
Vv32@0:8@"NSNumber"16@?<v@?>24
Vv32@0:8q16@?<v@?>24
Vv32@0:8q16@?<v@?@"NSDate">24
Vv32@0:8@"NSDate"16q24
Vv40@0:8@"NSString"16q24@?<v@?@"NSDate">32
Vv40@0:8@"NSDate"16@"NSString"24q32
Vv24@0:8@?<v@?q>16
Vv24@0:8@?<v@?@"NSUUID">16
Vv24@0:8@?<v@?@"AFAudioSessionCoordinationSnapshot">16
Vv32@0:8@"NSDictionary"16@?<v@?@"NSDictionary"@"NSError">24
Vv32@0:8@"AFDeleteSiriHistoryContext"16@?<v@?@"NSError">24
Vv32@0:8@"NSString"16@?<v@?@"NSURL"@"NSError">24
Vv56@0:8@"NSString"16d24d32q40@?<v@?@"NSURL"@"NSError">48
Vv32@0:8@"AFMyriadAdvertisementContext"16@?<v@?@"NSArray"@"NSError">24
Vv32@0:8@"NSUUID"16@?<v@?B@"NSError">24
Vv48@0:8@"NSString"16@"NSString"24@"NSDictionary"32@?<v@?@"NSError">40
Vv24@0:8@?<v@?@"AFHomeAccessoryInfo">16
Vv32@0:8@"NSString"16@"AFSpeechRecognition"24
Vv32@0:8@"NSDictionary"16@?<v@?B@"NSError">24
@"CoreEmbeddedSpeechRecognizer"
v24@0:8@"NSSet"16
@"ADRapportProximityObservation"
{_mutationFlags="isDirty"b1"hasDeviceIDPair"b1"hasProximity"b1"hasObservationDate"b1}
v24@0:8@"ADAVSystemControllerLifecycleManager"16
v40@0:8Q16d24@?32
v44@0:8@16f24@28@36
f16@0:8
@"CSSpeechController"
v32@0:8@"ADSessionLocalConnection"16@"SiriCoreConnectionType"24
v40@0:8@"ADSessionLocalConnection"16@"SiriCoreConnectionType"24d32
v32@0:8@"ADSessionLocalConnection"16@"AceObject"24
v24@0:8@"ADSessionLocalConnection"16
v32@0:8@"ADSessionLocalConnection"16@"NSError"24
@"ADSessionLocalConnection"
v40@0:8@"<ADBluetoothWirelessSplitterSession>"16@"AFBluetoothWirelessSplitterSessionInfo"24@"AFBluetoothWirelessSplitterSessionInfo"32
v24@0:8@"<ADBluetoothWirelessSplitterSession>"16
@"<ADBluetoothWirelessSplitterSession>"
@80@0:8Q16q24@32@40@48@56@64@72
v24@0:8@"ADAudioSessionCoordinationMessageBeginAudioSessionRequest"16
v24@0:8@"ADAudioSessionCoordinationMessageBeginAudioSessionResponse"16
v24@0:8@"ADAudioSessionCoordinationMessageKeepAudioSessionAliveRequest"16
v24@0:8@"ADAudioSessionCoordinationMessageKeepAudioSessionAliveResponse"16
v24@0:8@"ADAudioSessionCoordinationMessageEndAudioSessionRequest"16
v24@0:8@"ADAudioSessionCoordinationMessageEndAudioSessionResponse"16
@"ADAudioSessionCoordinationMessage"
{_mutationFlags="isDirty"b1"hasHostTime"b1"hasType"b1"hasPayloadBeginAudioSessionRequest"b1"hasPayloadBeginAudioSessionResponse"b1"hasPayloadKeepAudioSessionAliveRequest"b1"hasPayloadKeepAudioSessionAliveResponse"b1"hasPayloadEndAudioSessionRequest"b1"hasPayloadEndAudioSessionResponse"b1}
@"AFClockAlarmSnapshot"
@"AFClockTimerSnapshot"
@"ADRemoteTimerManager"
@"SOClockAlarmManager"
@"SOClockTimerManager"
@40@0:8@16Q24Q32
{_mutationFlags="isDirty"b1"hasDataType"b1"hasGeneration"b1"hasLimit"b1}
@"AFLinkedListItem"
v52@0:8@16@24Q32B40@?44
v52@0:8@"BBObserver"16@"BBBulletin"24Q32B40@?<v@?B>44
v40@0:8@"BBObserver"16@"BBBulletin"24Q32
v32@0:8@"BBObserver"16@"BBBulletin"24
v32@0:8@"BBObserver"16@"BBSectionInfo"24
v32@0:8@"BBObserver"16@"NSString"24
v32@0:8@"BBObserver"16@"BBGlobalSettings"24
v40@0:8@"BBObserver"16@"BBSectionParameters"24@"NSString"32
v32@0:8@"BBObserver"16@"NSSet"24
v28@0:8@"BBObserver"16B24
@"ADNotificationOrderedDictionary"
@"BBObserver"
@"<ADNotificationManagerDelegate>"
@"<ADNotificationManagerDataSource>"
@"AFCommandExecutionInfo"
@"NSObject<OS_voucher>"
RRRR
q:`jy:`jy:`jy:`jy
z"MTJ
ffffffffffffffff
RRRRRRRRRRRRRRRR
>13F
p8oQ{]
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNO
j>8C
Hf,\
?REW
\84@
ug|`<
m8#&
'k+{
piiPad3,5
\/aS
bD@>A
U\u<O
c/9p
u/-,
Yj(*}|L7
.'BB
n46.
O>Ov
[m}-
/JB 
}p'
6AEy
L:T^
xHK=
EiL4
4tC/
7M4X^
V|}O.>
Y[]WIk
Z^RFz>
\TLd
P@p 
_QCu/
Y[]WIk
Z^RFz>
\TLd
P@p 
_QCu/
QHlN
K%N8t
g@z}B
yA~j
`P*$
&n#+G
F,w:
(cb)Qp
g@z}B
yA~j
`P*$
&n#+G
F,w:
(cb)Qp
{iPad3,3
Oa@"5
mFYpB
9CqL
VqAz
9-+?se
r;1*
}=06
H3aT
kjO("h
HvFk
I366h
Ao,v
Dz-}
LW{C
iA"X
D-Py
w~Wc
;G(I{
dkq]
#[/4X
6K}Yy
BQ?~2
2?=,o
iPad2,2
AppleTV3,1
_Ey8
U!H8#5
Z.O@w
,X2i
OaDEy
Y\UAAN-
^P[S
Im3b%WR
NHLy
 V .
> r<
l'K)
&6Kw
j?l7
BAppleTV3,2
Y)Bx
TT]M"
!~O$
C%?l
/V2C
QvA`
#ck77f
iPhone5,2
2)<6
gp6p
e/*`
+ad.
m'"h
#il&
g-(b
)cf,o% j
!kn$
;qt>
u?:p3y|6
}72x
9sv<
w=8r
1{~4
rSpj
gR/j
K(>H
OBww
~Kz4
Wmp8
a^,&
o/ (d
tQb)
h3k-
E`2y
Q%[bH
iPhone3,3
G|Ri
g\rI
_dJq
Un@{
mVxC
uN`[
MvXc
E~Pk
}FhS
e^pK
]fHs
WlBy<
oTzA
wLbY
OtZa
zXU%
XI!a
5Y8+&
eQoY
>>d=
KZzS
af/`,
 ,&PY
qCu'
QK=$
i*~v
9c.1\
;(7/#
cowh{
&0H]
qn#y
BaXO%
@_GKW
VD6J
"LF*
0]$R_
X`S^(Q
u]p#
ghr%
k]\>
XB7.N
<.\rG
o&,@
eiHJu0a
j7N85
f-e_
z"E[
K:>s
7WN;!v
rG%$
b;|d
i^f:
.WUX
*l]F
,b@9
2z);
gWk$1I2Jh'dT\
6"$W
.7A[
Y3v'@x
aWV4
RH=$D
Cz>T
%Xdj
D[P\
 +tk
GR*<
ASj}
KqCM
>%ie
armuy
YGf>
98n[
(Z4j
'=KR
i.!F
(2G^>
-,N{
Vl$o
#vI]
ig(Uo
]QIVE
$b)}
&n=u
3YNwe
sEDt
laRj
GU'[
!L5CN
3]W;
v~N!>
2tE#o
'83?
EZQ]
<=H|
B{?UF
xB9j
]7sJ
UYRMX
t@54
Dk'Ap6
;7<#
:%-w
OC[DW
!K\e+
4|/g
A~|]Q
5: w
w.O!S
)0F\
(VXd
CWQ=
`lgx
/MC=
mryu
v+ E
9ckt
]7sJ
UYRMX
t@54
$\~1
{0g
K5;d
|ck1
M(#~
}qze
5KE'
!0sk
3|K
GALN7
@c-;
9.DQ
TGq3F
\mv:
!>&*6
K&9yI
48 ?,
($hsB
j"q9
TB:/`
h.e1
AJ|o
 j`[
58:C
+!dE
=lGx
{d)s
,:BW
<4`#
Gy5.
ie}bq
}VkY'
NB]/
1Qjd{>
I,w|MtG
O`Ni
4%8#
gf~9)
_dNQ
|IBAx
XVp= 
M?]4
qJApIz
^P5x
wK!1
lWYF
DOLu
U[}0-
RiC\
jks4$
%TX:
=;S{
<Zj[c
k3L$
oP]m
59&T"\
|`Vd
,{e`Ct
MAWO
#h>G;4
yjJY
.jyYR
|dr~
i=GpS
!H*X
o\eT_d
m EK
SLBy
]`:*
\gtx
5[Us>
JAB{F
)<}P
9QxB
MTjo
RqF<h
JXxk/
K]?M
1!nv
FYWl
x5P^
zIpAJX
%(eCM#
mTW\
<,vK
PGA)
ERC9
0aBu
g>7kKX
eQ<M
sB%C
Jb$"
3A#fT
Whe|
E`,m
)'8}
g .K
d0J}^
M%6x
#gtT_
*&0(
Y \S
BGy`
!oU|
G9[)
8>xP
Y?Xi
b,ye
FtB^
D]cf
$*.S
tKF_
+3|l
."=O
UFf:3j
xOl=
&IN_H
^BY)b
ZBTX
!.R+}6
aVu7
tDu7
-S)[:6%
qAoH
wrPI6
]L5Z
P#hR
) Uu
_ob]
r<iu
W)K9
(.h@
I/Hy
VdRN
A$*
o*5;
Y<2u
-&1S!
06pX
Q7Pa
nwzE
-oL{
BNX@
,g1H4;
neEV
i09D
 &"_
?aoj
%yp)
A;/~
>8<A
;gn7
L|Ru
JOmt
e*pc
0'6Lb
>-ijs
F4V?
g\RM
zAJ{Bq
U[>s
hWZj
l4K#
{gQc
2>!S%[
nYz+
CPp,%|
G;h>
]r+[
!:'6
H[{p
eRq3
^FP\
%*V/y2
+1K%
T$}R
1g4H
{way
NVuB8l
L\|o+
.=u*E
^$Ji
&s7@`
-qx!
=jK
(.*W
0AM/
(.Fn
VjXE
!;A/
TQov
7yCj
<0&>
O6JE
sji->
cp*e
bL6'0
odL$"
DuE#
k+)C
ey~0
#EuD|
"$LdT
129i
!0-6
c<P
O|Et
'UJF
6slbY9
2?rTZ4
zC@K
+;a\
GPV>
J]L6
?nMz
h18dDW
pj^@1{
nU[D
tl#3
HCrKx
\R7z
?/~ma
GXrI
6+f@N
nWT_
%OM(
JYyi>
\DR^
'(T-{0
gPsk
4\#{
L2D6)%
tFpl
BIJs-
=S]{6EZ
To|p
Uh2"
7_YN
[a*Y
|\) 
s`d;
Q&7 
6*1w
xN!|
Gr<;'
$hO0
Jsp{=
^ Z(IEVm
'{r+
<ZIM
"$ ]
~N`G
x}_F9
M@e
tFC_
\EHw
|NxO*p
yL>!-
JF'U9
bYsl
Nt?L
iI<5
|(ReF
iqgk
iz o
hF<-:
y`c'4
qb8w
p^$5"
ax{?,PY
BYE
fTb~
^ V$;7
;[`nq4
DHW%
F}vG~M
)e$
~marI
?/uH
+f@N 
&nWT_
T.@c
Fy=Jj
ajiP
ONV,
wLfy
_S2@
czX]
bEk[
IBbq5
Hk\&r
poE~
%I;ZV
Y`ch
a9CtW
*n}]
eyb$
F 37h
X^Z'
HxVq
NKip
^s2#
Hi>.
adZC
%chkR
uN]Q0B8F
?#$j_
[+2M
fF1u 
oL"X
C,s;(
r=by
-PTR
,c9*L
Wwd #:
CYmr
]~I3
bB7>
jZk)
3M7E$(;
|A0N
UY8J&
}Fls
;^k`cZ
9"?.
J "b
o#gj
9wpl
+-Emf
*L|M
8;0v
:\l]e
;=U}M
D]Po
l^[G
dV`W2h
wgT&95
zY7M
sS$`
{jwl
g(L
O\| )p
bUv'
.TER
`YZQ
(%hN@.
1!{F
]JL$
&;vP^
~GDO
WHbY
3?)(
!~Fh
:-<+0,
m;Tb
{=65
@qA'
k`H &1
o/-G
a}z4
`/uf
5"3Ig
;(lov
iJ$^
`@7s
2;Nn
K8sI
X>-)v
F@D9
{g|:
4pcC
']jI
0~ye
C)+k
"$Ldo
#EuD
*n}]
a9CtW
F 37h
X^Z'
eyb$
~LzM(r
m}N<#/
^GJu
vDA]
\lD,*
tL}M+
6L{X
?&%arR
WQU(
I/<f)
3="g
_z6w
Px>8
iX?Y
yNWE
`kC+-:
KzJ,
jvq?
d$&L
p6=>
_xVf
!^Ge`
IWRqF<h
KXxk/
%Z}1
2.)gR
xCP\=O5K
(nef_
a%Rr
4L6X{
mvkz
q}nU
#3iT
7z\R<
:rKHC
czDA
P_#ZG
+3%)
txnv
YzM7c
ASs`$
=rtg
!0u[|
~:d}
^s2'
adZC
Lv_7
:*mut
B]wL
3.cEK
kRQZ$F
g?ErQ
,h{[
@&51n
^X\!
>"%k^
$bijS
tO\P1C9G
Ta/(4
Y`ch.
M3I;ZVE~
MTjo
9Q<}P
RMCx
%5_c
l!DJ
n]dU^e
 I+Y
A^tO
9)nvw
0-`FH
hQRYl
.jyY
e=GpS
B$73l
\Z^#
vq`w
h<FqR
/kxXS
$jmq
7QaP
60Xp{
%&-k
8#>/
cfXA
tDIv
=U*r
}Oye
E;M? ,
dt;#
G5*&
wEs$
WNC|
upNW
DWw+"{
i^},
%_NY
Sr%5
Eh)8
_|K1i
Uuf"
{l}z
/RVP
`?;(N
f)s`
3$5Oa
=.jip
=O-Dl*,
}L+M
Yfkr
qmhZ
Kn"c
')6s
aV`R
`/uf
5"3Ig
;(lov
nwzE
Ftqm
06pX1S!
Q7PaV
N|J}
]M~
o*5;
E#Du
$"dL
k*fC
zcnQ
{>!/
92iV
 .1t
fQgU
MzK,J
:H*Ck-+
Li%d
vjo]
^alu
'48Y+Q/
5wFv
%[!S2>-
|L}?
%k>"
wjSbi
9G1C\P
ocum
BaV,x
CHh{?
o9V`
8/>)2.
\2HR
vV!e;"]
S<cI
b-+8
R(Fe
"1y&I
:92t
;urn
H" `
)/God
(N~O
yIxS
`\nEY
9Br
$V7;
H2*+
bT0U
4(/aT
2?{7
.hc`Y
~EVZ;I3M
odUlq
VZE7A?
)Irj
$8m#
 ,M?E;
!cRb
&:o!
mfWns
TXG5C=
%&-k
^LUb
\7QaP
!60Xp{
$jmq
NHL1
&?<xkK
j[-
/UbA
/@GVA
\Oo3:c
qFe4
PH^R
+$X!w<
FUue2
Qlq)
^)<'
Xt2@
h3G4
L@j%d
Uv#E}
xDC 3
(Kou
eRjc
KVy\C.
`0<Z
aI-p
]|'%
k5l>
6nW:
>>;h
&w^"^
;n_c
Y8ff
JAAp
p>@"
awaC
I;"t
@HWb
7caB
<Qz#
\HL&
l5q,
,Go
:tN
Evls
%oZ:
sV_X
#2T]
#)^kS
C+A]
K>re
)hK`
eX6]
%&8/k
' Dn
]80qu@
d=R'LE
6Ww(N
935!
j!r4
Z\Ox
:Ey1
l||S
%&W
E?aEN
#{Yk
Cbo"
376V
Vj81
|)%'
^.B#
cbr^
,M."
zt+@
Uo#g
ljA1
KR]$
aDa9/
1d&7
(RoW
K|RHc
kOy~C7
r5N>
D|.'<
} '#
4@>]
MI+2
1{d:
uCJ\
VyB)g
r):e
AlO#9
w%/:
H\zf`
hoQP@
5a6V
?vk G
(]]
:[]z
l4s;DL
N$'b
)"zl
`BcZ
K"#A
KtCi
_jf@
?sP+4Y
.bT@
Y7h-
9.^n
FTFY
ptur
kch`
]C[K
$dMX
r]H:yw
33OW
B uv
"9C?
84w?0
V_)I
x9mq
;YtG
\?rZ
"dp7Z
(@Jg
{)a SQ
~E]BV=
^vvtv
O#K:D
:}s$
`V,m
YSN;
=XKk
j>,%
])=5
Fa!d
Zmxk
l"<r
R}oqz6
rNDGZ
/@#A
6vj!
XW>} 
]5hD%
V08 .
`yX9
2l8M
OQt}
uM*}
!W$4
h7=J
j.7k
:J<n
ls9
?HB,
jTv([
sb5+
JgW}
)I)a
LK784
tGNg\?
MB,1e:
TteQ|
J(>a
 u=^a
nt>x
ck#4
5R&V
e6-Y
VZX<
d:'t
aXqM
zg)z
5`B
S$4l
%C$x
FF.4>
xMC~P5
AH!(i0
X~hHp
;PUT
qQN&
f^21W
_[Pgn
k5kI
=n+
mhe.
;Q`L
G+x8
D2Nq
"Os=
wVEt
u?f|
W2<_
<[Y"D
l%X\
p$/&xo
I!Mp
-*H 
_gQ^
=1h[
tQq%
:Bk\
bXw
l{n>
j&`Y
uEx-
#|}O
7KX1O
cfB%
5_GG
UF9,^lA
e>uw
$:w/
>!X!
Z*]qrd
c/?'Ka
47XI
p1w4
VaaL
1g<B
x_l
n.fi
W''N
)@H"Q
U+m#
52[j
SvcD
eVPo
,{y
|hpv
=6!{
8TwB
,Q4=
Eo1-
<vDd
iWi3
ax#C 
;S|(
"e5H
_Xyxw 
kRNW
S^/1
|@<@
*y9"
GIAJ
,$7E
%T:
uME
vm?n
i."x
o87=
9J)}
Rh|rZ#
r[WD
/U0B
6cy"
UMD=}5
lH&kD0
C#; ;
uj[9
1FAm
I$ap
)=W9
yY\<
/`Y^
?$Ji
]rsl
e4Dh
\1&>
6^OM
`gJ/
.KNs
=g+WE
 }uE
vDp'
F9Mk
6b{3N
=2iS
X+tRp
_dPV
%7gn
LX-|
A<b>iD
+^pr
;$UB
=w3o
qGNR
f*8'Wd
_/Zqna
lg]z
~k[
ZGnsQm
CyNH
uY}c
E$@/
%=vf
9FK+A
h-oy
^7!MvO
~d5R
$/U1
@$PTHo
q4QY
)XeQ
y<nT
f_@i
V"}%
6;Kl
_~# 
VNg)
Y#-G
%Y53
s`0Q
@=>6
zUk4
<I~]
At2mi
xqP;P
I!n)
_gCB
+wW,
ThtN
h,o #
1mN9
UfKi}
uU`_]
lc)?D
{]@>
Cs&z;
u:Fc
-PO23
hy{S
,AU5
"M'J
tt"(
bI~!
+)g*
r),O
C$eS
Eyk4
%`]}
l:vk
#@(
<^}d
5F7t
0$aM
D!WA
&wnD
F<et
Aq3J
|nPd
X/WXpW
y>4o
!0^-Y
v@vM
^55 o{
g0WvV~
3F+C
X&2u
@&Doh^
y#&9Q[
oYHm
(#i5P
$-A?U
t<l@
DAQ
$XgE
rab'
;;Ix
k_B}
y\2X
6{$K
`B!)
Z ^H
li>,
gln5
0&*,
>k-{
EN6 
ceJ}k.
CVaK
Z`(+
 x\T
Kwb(3
d@r2L8
}v;RU
wJ4/<
>r(b
COdRk
Zy-2r
c|OdK
Rr{(*
9aYM
DYw+L!
o>KU
v_PTh
#^3n
yB8,
/{=N
fDH;
Mrh5
)&3)
E~^?
%gh|
%<xt
 ^.M
C#PR
#:fs
<YHe
\@~,
l=C`
$u)
<4(G
a:OAIB
dwiq
;>3Z
"r^*l
>nWQ
\8nT
\0;5
Zm5R
T00
SMN$
s.(D
us&#
#J#A
kc(`
kg"=
(^Z)
rQkhz
Rb@k
6iEX
/_[
Lq1Gd
UGx'}?
1L}w
#dH4
v}~}
lC^'
Zhn
:z[E
Zcm
%.RI
!a6(
<'U"
\>ck
KB7_
B)oG
e$sg
&'ST
4yn)L
e?|>MG
5^Tq
.+_@
L}fE
vLu-
 upO
&(~(
F1Ha
+{;f\
9Kc>
st&g
I,dz
/h\T
yQY6
v$Bl
j"?D[Z
:K;!
0?)m
T4,=|
m1NkE
GV3x
{ZL|
Ct*8
>q%(
hH J
8,+O
4jNs
YeE<!
o,%%
id)uA
PaK#x
3O5?
nAXZ_
WD:f
}y.}
1IS@
{8r)Jv
OV0n
8%d`
\.a0tV
(Pm`
{Do`
Md\K
K9R,
+ de
4CJX
bzO:
d'A]
:TY-
vNs)^6
ox:IG
2v]O
Evy:=
qkKf
#Sy 
QX`P`
Hn)0
,e,`$.
`N6?
+4$-
-i*J
{P/(
bh%C
+&*7\
WN<Y
*oo 
H9V%
Re#`
@}Q#
yx3u
kX<P
=a92
]xGYVR?
tr`r
_-)(
idI1
dT(yL
]QJ/u
]O/yl
Dylz
dJM/U
9D J
Zj^Vr
zYu`R!
Rp06*
d9P/
M& Z
K{.=
b83b
Ha_2
u-oO
pO9v
2\8m
9/F
"_k~
a?rH
Z0(<
c5Jj
wv(c
 (\@
r&Lh
}&;FU^
[\bX
m|Qs
tBq)
"{tK
<i)Q
$&z,
D?Le
2r&e
nG:X
k%la
{1;s
HU0v
TG>`|?
mB\6E:
IYf!1
)zrP
0L;0
Lb,
JTOOB
jgdy
la)?"
hikM
'n}^
qWx<
]z}H
?,DM
!3s9
A*Ep
+28j
7Z<:
v<_l^w
O9=:g
N7ik
bs=j
g#Ya
q/.C@W
~JT'
(sQE
1BF.I
l jq
[?%@sG
3i0Z
TomT
69TQ
DD[_
rdh~
+S)*
kZHm
]z{F
['u!
;>Ch
@X'f
8>PC
^zhm
>c^$
hZ[F
w9u{
']~~
GDH7Ln
6\,w
3>zN
eT:TB
utq
6lmG
[j0I
%uSg
G#jb
 %7l
"iE.Z
eD\b
m,,$ET
T)Nr|Q
0"K"
')t!_
Sv=
|^bB
J:?]`
R8&z
F6p;
&/Fr
@k~\
vKMw
j(cJ
\um-
l[d
+4(t
e4v'
n1&C
XxFZ 
rkSpz
1Eno
vEY9
@9 
Lx"_d6
UNk?}
Bm<A
 IG
ly:1
D02&
QT9S
[S*R
,iuc
.NuC
xwp!
=a%d
1-[=
Q4mt
aIP8
7pUZ
H'pJ`_
9*yi
[|@l
^,$g
V4Bf
c3GI
o1 0
fc#B
2?MU
1/h}
Q6^4
WkPS
aKcx
~(ME
H'#;
6LC"
xuC"
.LF@
)S\L
t4je|
0DU
ec!q
0Jbl
S"y*{Z
7)|z
WL?b
K  >cX
i^zn
r%BhZ]
.G8>V
/+%n
pDDN
l63G]x
9$ E
<t9s
18TA
ZMrP
lmA{
tw2
;2~
s.\m
&7j$
CjdC
\am\
.NuK
E_{O
#1K^
~?,XVq
'X',_
JBWT
|b,]wHT
y)?!qQ
vAhg
KH_|c0
k{tJC
rM=*Z5
F8z>>
/CZ,
Lm$0
.S}#
uhFf
cIU -
ae%G
xT,%
.m)G
aj<
v@Ck^8
OE!=g=
Vsh]~
+N$m
KF;:3
SD@+
hS2G
5]U"
X7t=
g]4'
oi$z
_sRc
F*9l
0:G)
T1Bye
c,EL
m4 /\z
,TP?T
J"3VbZ
z6{l
~KU{
}Rc2
+kfP
N6h7
2LpC
duu!
b({F
1@1F
(vx&
lNV@D
L}}vd
V"?>.
`k_'
RP&.
dp]'oZ%
kXE9c 
nYz
qbML
5Zc*
"7!j
TVg:
=T<|
m07y
7BzK
SIuxb
^NB4
szT-
T*18,
bcQ!
)QHg
MZM7e"
t_/a\'
Ju(g
3R>7
ek;U
swnA
N;^<
c658
XkDxp
xXoNP 
an&.I
e#~-
<`A(
?7w6
_N|Wn
Fx5T
]aN3
z1*8
;Eyd
L:21
I8q0
ttAM
Jg<V
c$!@
3@*E
ey/'
gQJj
B@/s
8g9`
_KJFw3
xapW
sd 3
E-@*=
xji 
AX;iI
x]Y?R
<ewY
%S>9
*fZH
Uq~;-
%u^t._&
h=NF
-u+g
pI1<
p{LaX
PHgWx
I~.7a
eA[<
,!BB
*h:M
|Q?/
,54*
z1H
Md|[
0Y0k
c2"9
"n7f
b#n^J[
'>Sm
Ehjh
;SA)u
|0\r
}'mM
E5>$
4Gt{
:dq]
DB|
l]t?
\ Is
ucT&
#ZQD
s>ZA
iE3V
"+H 
G#wn
F M@
%uNk
=[j-E
<89<
ui}
X3<lpK
a6^:IN
'@r=
GYDt
qyw_
w$y8
,UM
^gd.
>~Rg
X:jI
$|t[
F*M^
8(b/
_0s~
=fJ{
86.p
>qV7F
K'L[
xCG^
{ctu
.zB<
$#:3
d ic
4Dbf
T]T/
#O!
uv$n
$H|'
CN!a
<,9x
KR!%3
s|Ga
IE5'x=
p@WqA8
LK;^
njn" 
*]AX
neo>F
wS&^_
u\j$;
,p><
5F}?
;ly5
q~SY
Y:@0
fd%#
P-E:(
O^JCg&
omauG
>w,`
'Is
GP:0
J<*>
,9>L
sq*
EE!N
N@AW
|]5I
*d0+
SC&8
BQpxj)
bb[NJ
?l<H
&Zu(
EtHWt:
%Q)4
$*"e
tN)`
aB|d
d *]
c)41
[IX
8hH;&@0
q~rFY
QMYpy5
5F\ 
C>v$;
k\g&
O^(_~
Vha?
2cdo:(
8h%W
Z~.`
fBQT
|Uigt-
?{Tx
~6..
bu3~J
[pQ(s
S>PL
5z42
cC1P
3':U
"WOt
| ,F
zB.7
BlHs
uy9o
\:$0
^/5
Zg*W
_X}'w 
Fn4Gn
`SA3
;Sxw
X}n^P6
xN-]
E"n-
%@@8
i %,
4Qju
-g#%
,&x"
PZoFa
Il&E
NpA'
q0o"
3tR9
wL|__4
nz5?F
"O>V
tv;4
r+5S
`gPB
[h(E
]5&"
]+`?
=c =
kZ%_
^VUP
;>.Z
rD6.
4!Jc?
8|*_
erMYM
EAfom9
&o[p
3E.$
\pF7
{a<vs*
Bd^ ga
=[Q(
kbTJ
h`Hd
Y/CVhW
m0,o
!$P5Y
g9P/Or
^<2yv
:77)
b"v6
|_(u
R9lM
0oUH
2F}3
R_Kz
>-eE
+xnB
B Q3
[Psn
pfS]
{%3e
u67V
.<V.`
H)Tx
My0s
88fO
d9O.
4]D+
TDrb
bdAI
+>jw 
)rpp
{ZaP
MzRq
-cd2
UBW-
j'.K
:C%N
lz ,
ml1i
E9=:
Cd3]
\Aw>t9
Ew>^m
yYX0
8Jrn
[dOr
'GS/
{Wd'J
ba-$
Q-a!yU
(A`c
5&dq
OG=m
v;rX
x;Gu
;8gF
u*B]
73M}
swL:
%NIX
Y4Q,
Z-ge
oi_K
<PZ)
iIl`
BS{%
N)`}
=`O$E
)/=s
r.Fi
O vfg
++s6
}3jr
q  _
8@9T
_Fdg
MNW>
-Waw
r?F\
c3Bg
fS8#
0j=A
673&
AK'9
wE+>
/r'}
ROkMz7
Ky"-c
r|@{Z
}d9*
(W\1
x4]!
uY1TD
lorW
.K`=
HEm+y
Qs$(
hvF~
X{b# 
+kPT
oS~2G+
ve7R^
OW!T
`I2%
6p7G
0-9 
&/~l
UZ7R
ZiSY
8?j\
B${<
$u0w
!%T|
e2hEMJ
Csmy
mdE 
;]@B
AzVQ
wZez
(:)4
#?y-
G'X6
`HCb>
"Vh$t
~gcXu
cIq#{
O)J(
iPad3,4
iPad2,7
jgGe]
5yN"
.^^o
2`dLX
bEYz
KGZF_nd
0XqJ/]
vU`|
D%G(
^:S#q
G%eV
Oy:9
_]bh0
iPad4,2
2f/
Y}l 
g(A!T
]O:/
P9m=
pk/
/c2.[
cTu!
k\})
j]|(
Q-'4
Iew[
{WEi
KguY
+CIZ
_q{h
!Ey#~
.g?Y^
zVDh
/Kw-p
 i1WP
{KAR
TxjF
wkar
;_c9d
4}%CD
g~tg
.Jv,q
!h0VQ
fJXt
kYS@
;_c9d
4}%CD
Pakx
1Ui3n
>w/IN
eI[w
HdvZ
(SYJ
(a9_X
yT0V
w[Ie
bN\p
XtfJ
iEW{
aM_s
nBP|
{WEi
}QCo
UykG
~Q[H
\pbN
DhzV
VzhD
6ciz
3Wk1l
<u-KL
B)#0
uYKg
yT0V
nBP|
W{iE
7hbq
8\`:g
7~&@G
%A}'z
*c;]Z
/Kw-p
 i1WP
$@|&{
+b:\[
%A}'z
*c;]Z
6Rn4i
9p(NI
P|nB
gKYu
oCQ}
#G{!|
,e=[\
{WEi
]qcO
VzhD
6rxk
"Fz }
-d<Z]
p\Nb
]qcO
iEW{
{WEi
\pbN
cSYJ
^1;(
W{iE
vZHd
l@R~
oys`
)Mq+v
&o7QV
Ocq]
/DN]
l@R~
~82!
Eh0j7
3Wk1l
<u-KL
[weI
Iew[
@l~R
 EO\
IJRP^
9[hUN^
wl0[~+
Z>}D
4#\6
fMi{
!(8S*
+N_o)L
@iPad2,3
6P\9
HXhQ
GnM'
Gf=/I
BdRr
Qnxc
kjck)
Uep^
/6.(
KPqJU>
Op<u
PZm$
q0e{{
foEb
MwP:
k_Aa
Ai|e
)LIAr
?%2W
(*KT*
+R$`q
!j&9)e1
U<E>H
EUfX
Ri/Fn;
}v~
IZn~UXd8
k.Aj
?2pl
?iPad3,6
aN=6
nZteSd
~>'6
#o^Ak
22!*&
LG*$
JT-/
P'ZW
t){1
~Y5
HW_MACHINE
gI
/p&h
DWN}
a9YV
FBLo
iPhone2,1
#@*)j4k
MeH$
r{Tu
_&PB
;AFD
dx*]0W
#{5X
Juwhq:
C{m;
$M-Q
,w[
H2&FTsEd
[)n+
6_fq
_&e9
+UXm
VKO|
H0zh
5MD#
iPad2,4
iPhone3,2
iPad4,3
kEA(
X1?
vTO$x
,NV6
#Cwx%
x#A7
)xCK
4nH 
{IMD
5]L6
7e7-.
k>( 
?`tev
=:+'{1#
n;Lc
VoZn
UZ_dUZ_dUZ_dUZ_dSW\bSW\bSW\bSW\bRY^eRY^eRY^eRY^eTX]cTX]cTX]cTX]c
\8@C
`8)F
-z=. 
A H5
 &u
:]Men
(,M~;
P:\/
PM,i
}'VM3
/U&n
Dab\
O*sg
{JKm
0[+}:q
iPhone4,2
O(zF
r:+"l^
03_C3AaZ
C%\m
`^EYIY
jHdb
+Lk$
I>;/K
sbDl='
Ji)eD
Jh5^1
$;X@
@Df]q
# L.
J($Bh
kmylA
{@Ln
itH[7[
w}&z0an
d[!
-Xvw
sBPE
fe#u
e |l
Ey_M
MB8]
s_u"L
o(DH
)riPhone5,3
y-|(
~*{/
,x)}
F;c*
i#j\
jK]cf.f
wN,_ 
[Cv!
>8V^
^/!#"
NB s
8HCf
=3,D
!>]19
a_^=o
Qq`@
tTEe
UuAa
BbsS
gGVv
FfRr
~^jJ
zZKk
mMyY
iIXx
Ll}]
q#k 
~PNJ
aXz]
lCP
]1*~
nUR(
!prpd
`QT\
@$_2
TiJ'L,
uOWG
?+5K
T<oe
Fm(N
v!\N3
"_M0
:GU(
9DV+
A<.S
B?-PZ'5H
Y$6K
C>,Q
@=/R
X%7J
[&4I
#^L1
 ]O28EW*
;FT)
!W3l?
?|qc
>&.ak
D~+dtS
1i-Y2 
3fmv
1)((l
zTSf
tXuq
(:|}
tm_Y
N#5;
TATP#
D~#_
&xu[;
u"_\~
3)pn
E6m'Ik
5(x&
!o`8
CD'4
1l~R
 T*Y
(.-=D
RR$;
^-q3
Cevwu
44@VT
i59r#tC2_
}ONW
pa#2BS
GV&7
gv4%UD
PA1 YH8)kz
=,\M
N_/>|m
*;KZ
o~<-]L
XI9(
xi+:J[
O^.?
FW'6te
"3CR
q`Q@0!cr
5$TE
!j& 
]QjH
yc'.
`s1QL
*s=~
S.AF
pLQ9#
M-^>
DC0J
v]>~&?
K!ijF
Yc,i
ng]a
O|;%L
T|P0
7AlB
Yo]W
+&n"w
2U&!
B4`?
\pOB
o>7f
(.C_
9H>trZ
Qex"3
Rhyca
s`<|
$J'jM
1u|q=
56 n
ZOx8d
f@8'(
HA{u
V&^&
=/_"
}[ct
pG4Y
<yQe
'mA00N
P WnG
uSwKbp
K4G;
504DAf
Dz&V
! a_Uv
l6?(
x&j3p
A6C8
J-W(O
hi;k
tqN1
X@'=
vl}lUZYwR_^FY\XH
tg3W
oJIUK
8+wM
91^K
iPad2,10
\hSI
/XI*Y
ziPhone6,1
_|dBhU-
N;&l,
]NlT
{A U
"\Ngv6
+SxD@a+8n
g.U8
(>-r
C%v!+dB
K{S,
r<Pb_
ZTcQ
e3\t
fn)-
Qw;G
CbUk
J8]I
!:*8*
DBU-
i*w9
^ZK0
?mz1
8QU0F
usu
QgD.
CM'd
M#Ft%
.ex,
kXYl-
?tId;
I+N,
(Du+
2i'2
%`z[
.TvI
9g19
$#V&w
``&tIP
2n48\
t Z9
7ozq
T1|Ts
#'6i{
N=0y
V}n
+dg5c
YOeI
qmw1
q,Rv/
)q&X@_
6tCXre
N&H/jK
NcrX
J>p9L
\J'Z
P)*y0
B!(7
&pYU=
NO<~
-XR]
:o@'?;/
qsfh`
Apple Inc.1&0$
Apple Certification Authority1
Apple Root CA0
060425214036Z
350209214036Z0b1
Apple Inc.1&0$
Apple Certification Authority1
Apple Root CA0
, op
https://www.apple.com/appleca/0
Reliance on this certificate by any party assumes acceptance of the then applicable standard terms and conditions of use, certificate policy and certification practice statements.0
=&g 
Sj[d
uu!iPad3,2
]?}z
{%M,q
/1j6
>guD0
;`{.
#C[f
l(*&
=p:T:
^L)7
T=R0E
<{w
>=Yc
7`8D'LAppleTV2,1
jeTT
?As~
"aRV
,1UW!
fWo\|
O}$<BH
_+=[E
PcRn]V
4Hq*.1
pfk*
']^m
MV6b
,jiPhone6,2
J+#U
RS[AVjE}
xS_50p
)g!oL
0~8vU
JBa/
[x6k%
+e#mN
2|:tW
3};uV
*d"lO
Ab,q?
(f nM
R"P'
(M1&
WNWH
soxm
iPhone5,1
I$D-
%'X\.
Npt
jM+N
>AAAA000BBBB1
iPod4,1
>?X@qAY
D`N cQ/
*UJ4
p=WL
L38~C
M!Ne>
Mv;!
cC;F
x9\m
v"^^
Flwu\
iPhone3,1
dhds*#
yQx
Yv@Gj
!UEZg
,#ii
eAvR
KoPt
mI~Z
Lh_{
D`Ws
}YnJ
uQfB
TpGc
\xOk
dx|oP4
Pr/E
uhH\
`d}O
iPad2,9
tvu+@
lP`(J
<& f
e{j
[.3=
,DJ]
`q9D
]A5NnXNn
Xss!4
~R&=]5
sw&v
-&Z&d%
NYnk
*LXL
69~P&UX
&$9U
p="w
SVo#
4M`!h
Y*JL
n?K%
KMcyA
L"S4v
f1;4
$m&F2
p7&>M
<7yV_
%,j
b7Q[
d|'R
l ze0
.>D
>Tzi
Jd36
KNrWC]
p |/
:k"+F#s
JSC6
"&JI
otXS
n9>Y
s\51LW
5'}:
qU&6
Bl'wh
$Wt'%
5#5;
iPad2,1
w]Op
,9ik
4iki
&^u
_SSS
z~<86l_
R&Tr
iPad2,5
~j%50
jqP{+$
A3x?9
VG:N
%H(lu
J3GD
,L+d*
O|)
wN`F
_/[r
&l-?/"
GfI}
6!IO7
[:^1pmxG
-^5/
/sya
7"|
6^51
4-gH
r6q[
|FQCs5i
PL#$
phqIL0
v(Te~!)
t72kH
<"u1
;Cmd
AcMt
["e~
}ozg
0`c=
qX&j
`f"`
W-;q5
!!aH
Q/+]
C}u)OXjsf
vn*4qA
Qp3K
:YT}\
Gc[j
_]{xrQ
2Y;Y
*Xb3B'm.b
 RN{
}6gq
1+rZ@
l8% !
le#V0
yq1W
,mVb
O,wD
hF$T
0Qx)g
B]~H
0dr#
Is"b}
:B\R
btr*
-'l3
bH3X
v>si
v!75`&
g~}"`
"Q8t
uq3;r
saySr
.BrQ,Br1-BrI,Br
,BrQ-Brq,Br
.Br9-Br
/Br1,Br
-Br-.Br
/Br=-Br
,Br1/Br
,Br)-Br
/Br].Br
.BrY-Br
.Bry-Br
-Bry/Br
-Br),Br
,Br!,Bri-Br
.Brm-Br
/BrQ.BrI/Br
/Br]-Br9/Br
,BrI-Br},Br
.Bri/Br
,Br!-Br
-Br9,Br
.Br9.Br
.Brm/Br
-BrM.Brm,Br
.Br!/BrM/Br
/BrU.Br
,Br--Br
-Br}.Br
-Bru.Br
,BrU,Br
-Bre/Br5/Bra.BrY.Br
.BrA-Br
,Br}/Br
/BrU-Br
/Br=,Br
,Brm.Br
.Bri.Br
.BrU/Br
/Br=/Br
.BrA.Br
.Br%-Br
/Brq.Br
/BrA/Br
-Br-/Brq-Br
,Br%/Br
-Bry,Bra/Bru,Br
,BrI.Bry.BrE/BrE.Br
-Bre,Bra,Br
-Brq/Br
-BrM,Br
.Br)/Br%.Br
.Bru/Bru-BrE,Br
,BrE-Br
/Bre.Br
,Br5.Br).Br
.BrY,BrY/Br
-Br}-Br
.Br5-Br=.Br
,Br%,Br
.BrM-Br
-Br!.Br
/Br1.Bre-Br
-Bra-Br
.Br],Br
.Br5,Br]/BrQ/Br
.Bri,BrA,Br-,Br
wG^a:
4~FC
L^HC
$nAe
)WB@
{LmzE
%P-\Yr
w-&~
/W(iO
^"wDt
*6Bx
~KP=
uih
;=r7!~
N8hhU
/>#!A
Fup!
kJO!
Lw)b
iPad3,1
ownhf
mUic
-.d&
sl|lPZTv
Q^YY\XL
>O_q
m>?kr
z|9f
Nc&-
!'oN
FzO0
6}6L
e|_(w
!Qy[G
K23L
:b_z
$vav
pae7
-:X/
|VHO
t/n>"
4I
;I(J
;RaCj
1@b3
_ `\
 nj#
0Hh~
b]9y
~6ks
q`Fs
iPad4,1
Hg-^
~r(_
e=F#
9+>e
X;SNr
>k~?
;Gsw
dl]k?
Ay~7
{TZ1
~aTm&:
>,,H
-(^L
CBN?ia
;47z
q,pF
Ps"3
X0rn0YE5
O7UU
,n,?
)e\uZ^IBx,
8}A0
iPod5,1
)jUs
VJGg&
"{g\oR
iPad2,6
iPad2,8
bk=y
 kE}
Q??5i
r.dB
Ko$8
frmaEVAWffac
mcpl
?333333
mcpl
?ffffff
@mcpl
softlink:r:path:/System/Library/PrivateFrameworks/CarKit.framework/CarKit
softlink:r:path:/System/Library/Frameworks/Intents.framework/Intents
softlink:o:path:/System/Library/PrivateFrameworks/CoreEmbeddedSpeechRecognition.framework/CoreEmbeddedSpeechRecognition
softlink:o:path:/System/Library/PrivateFrameworks/CDMFoundation.framework/CDMFoundation
softlink:o:path:/System/Library/PrivateFrameworks/MorphunAssets.framework/MorphunAssets
softlink:o:path:/System/Library/Frameworks/CoreServices.framework/CoreServices
softlink:r:path:/System/Library/Frameworks/Intents.framework/Intents
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>abs-client</key>
<string>1821501079</string>
<key>application-identifier</key>
<string>com.apple.assistant.assistantd</string>
<key>aps-connection-initiate</key>
<true/>
<key>aps-environment</key>
<string>production</string>
<key>com.CarPlayApp.service</key>
<true/>
<key>com.apple.BTServer.allowQuickRSSIRead</key>
<true/>
<key>com.apple.BTServer.allowRestrictedServices</key>
<true/>
<key>com.apple.CallHistory.sync.allow</key>
<true/>
<key>com.apple.CallKit.call-directory</key>
<array>
<string>synchronize-extensions</string>
<string>compact-store</string>
<string>query-identification-entries</string>
</array>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>spi</string>
</array>
<key>com.apple.CompanionLink</key>
<true/>
<key>com.apple.Contacts.database-allow</key>
<true/>
<key>com.apple.CoreRoutine.LocationOfInterest</key>
<true/>
<key>com.apple.SystemConfiguration.SCDynamicStore-write-access</key>
<true/>
<key>com.apple.SystemConfiguration.SCPreferences-read-access</key>
<array>
<string>com.apple.radios.plist</string>
</array>
<key>com.apple.TimeAppServices.timerclient</key>
<true/>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.airplay.carplayavvc</key>
<true/>
<key>com.apple.announced.client</key>
<true/>
<key>com.apple.announced.clientid</key>
<string>com.apple.assistant.assistantd</string>
<key>com.apple.assistant.analytics-observation</key>
<true/>
<key>com.apple.assistant.cdm.client</key>
<true/>
<key>com.apple.assistant.contextprovider</key>
<true/>
<key>com.apple.assistant.multiuser.service</key>
<true/>
<key>com.apple.assistant_service</key>
<true/>
<key>com.apple.atvcached.client</key>
<true/>
<key>com.apple.avfoundation.allow-system-wide-context</key>
<true/>
<key>com.apple.avfoundation.allows-access-to-device-list</key>
<true/>
<key>com.apple.avfoundation.allows-set-output-device</key>
<true/>
<key>com.apple.bluetooth.system</key>
<true/>
<key>com.apple.bulletinboard.dataprovider</key>
<true/>
<key>com.apple.bulletinboard.observer</key>
<true/>
<key>com.apple.bulletinboard.settings</key>
<true/>
<key>com.apple.companionappd.connect.allow</key>
<true/>
<key>com.apple.coreaudio.allow-amr-decode</key>
<true/>
<key>com.apple.coreaudio.allow-opus-codec</key>
<true/>
<key>com.apple.coreaudio.allow-speex-codec</key>
<true/>
<key>com.apple.coreaudio.register-internal-aus</key>
<true/>
<key>com.apple.coreduetd.allow</key>
<true/>
<key>com.apple.coreduetd.context</key>
<true/>
<key>com.apple.coreduetd.people</key>
<true/>
<key>com.apple.corespeech.corespeechd.voiceid.xpc</key>
<true/>
<key>com.apple.corespeech.corespeechd.xpc</key>
<true/>
<key>com.apple.corespeech.xpc</key>
<true/>
<key>com.apple.corespeechd.activation</key>
<true/>
<key>com.apple.developer.homekit</key>
<true/>
<key>com.apple.developer.icloud-container-environment</key>
<string>Production</string>
<key>com.apple.developer.icloud-container-identifiers</key>
<array>
<string>com.apple.siri.profile</string>
<string>com.apple.siri.data</string>
</array>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudKit</string>
</array>
<key>com.apple.developer.networking.multipath_extended</key>
<true/>
<key>com.apple.duet.appPreference.prediction</key>
<true/>
<key>com.apple.fileprovider.fetch-url</key>
<true/>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.frontboardservices.display-layout-monitor</key>
<true/>
<key>com.apple.icloud.fmfd.access</key>
<true/>
<key>com.apple.intents.extension.discovery</key>
<true/>
<key>com.apple.intents.intents-image-service</key>
<true/>
<key>com.apple.itunesstored.private</key>
<true/>
<key>com.apple.locationd.authorizeapplications</key>
<true/>
<key>com.apple.locationd.effective_bundle</key>
<true/>
<key>com.apple.locationd.usage_oracle</key>
<true/>
<key>com.apple.mediaremote.send-commands</key>
<true/>
<key>com.apple.networkd.set_account_identifier</key>
<true/>
<key>com.apple.pegasus.context</key>
<true/>
<key>com.apple.private.CacheDelete</key>
<array>
<string>CLIENT_ENTITLEMENT</string>
<string>PURGEABLE_ENTITLEMENT</string>
<string>ITEMIZED_PURGEABLE_ENTITLEMENT</string>
<string>PURGE_ENTITLEMENT</string>
<string>CANCEL_PURGE_ENTITLEMENT</string>
<string>SERVICE_ENTITLEMENT</string>
</array>
<key>com.apple.private.CallHistory.read-write</key>
<true/>
<key>com.apple.private.DistributedEvaluation.RecordAccess-com.apple.fides.asr</key>
<true/>
<key>com.apple.private.DistributedEvaluation.RecordAccess-com.apple.fides.borealis</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.applemediaservices</key>
<true/>
<key>com.apple.private.aps-connection-initiate</key>
<true/>
<key>com.apple.private.assets.accessible-asset-types</key>
<array>
<string>com.apple.MobileAsset.LanguageDetectorAssets</string>
<string>com.apple.MobileAsset.VoiceTriggerAssets</string>
<string>com.apple.MobileAsset.VoiceTriggerAssetsIPad</string>
<string>com.apple.MobileAsset.VoiceTriggerAssetsWatch</string>
<string>com.apple.MobileAsset.VoiceTriggerAssetsMarsh</string>
<string>com.apple.MobileAsset.SpeechEndpointAssets</string>
<string>com.apple.MobileAsset.SpeechEndpointAssetsWatch</string>
<string>com.apple.MobileAsset.RaiseToSpeakAssets</string>
<string>com.apple.MobileAsset.SpeakerRecognitionAssets</string>
<string>com.apple.MobileAsset.TempMorphunData</string>
</array>
<key>com.apple.private.attribution.implicitly-assumed-identity</key>
<dict>
<key>type</key>
<string>path</string>
<key>value</key>
<string>/System/Library/PrivateFrameworks/AssistantServices.framework/assistantd</string>
</dict>
<key>com.apple.private.biome.read-only</key>
<array>
<string>Notification</string>
<string>CarPlay</string>
</array>
<key>com.apple.private.biome.read-write</key>
<array>
<string>SiriPrivateLearningSELFEvent</string>
</array>
<key>com.apple.private.bmk.allow</key>
<true/>
<key>com.apple.private.canGetAppLinkInfo</key>
<true/>
<key>com.apple.private.carkit.app</key>
<true/>
<key>com.apple.private.cloudkit.buddyAccess</key>
<true/>
<key>com.apple.private.cloudkit.serviceNameForContainerMap</key>
<dict>
<key>com.apple.siri.data</key>
<string>com.apple.siri.data</string>
<key>com.apple.siri.profile</key>
<string>com.apple.siri.profile2</string>
</dict>
<key>com.apple.private.cloudkit.spi</key>
<true/>
<key>com.apple.private.cloudkit.systemService</key>
<true/>
<key>com.apple.private.contextkit.request-external-content</key>
<true/>
<key>com.apple.private.controlcenter.service.moduleidentifiers</key>
<array>
<string>com.apple.siri.SpokenNotificationsModule</string>
</array>
<key>com.apple.private.coreaudio.borrowaudiosession.allow</key>
<true/>
<key>com.apple.private.coreaudio.viewInterruptorName.allow</key>
<true/>
<key>com.apple.private.coreservices.cangetcurrentactivityinfo</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.coreservices.canopenactivity</key>
<true/>
<key>com.apple.private.corespeech.xpc.remote</key>
<true/>
<key>com.apple.private.corespotlight.internal</key>
<true/>
<key>com.apple.private.domain-extension</key>
<true/>
<key>com.apple.private.externalaccessory.showallaccessories</key>
<true/>
<key>com.apple.private.feedbacklogger</key>
<true/>
<key>com.apple.private.hid.client.event-monitor</key>
<true/>
<key>com.apple.private.homekit</key>
<true/>
<key>com.apple.private.homekit.assistant-identifiers</key>
<true/>
<key>com.apple.private.homekit.home-location</key>
<true/>
<key>com.apple.private.homekit.location</key>
<true/>
<key>com.apple.private.homekit.multi-user.setup</key>
<true/>
<key>com.apple.private.homekit.siri-audio-connection</key>
<true/>
<key>com.apple.private.ids.link-preferences</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.siri.proxy</string>
<string>com.apple.private.alloy.siri.device</string>
<string>com.apple.private.alloy.siri.location</string>
<string>com.apple.private.alloy.siri.icloud</string>
</array>
<key>com.apple.private.ids.messaging.urgent-priority</key>
<array>
<string>com.apple.private.alloy.siri.proxy</string>
<string>com.apple.private.alloy.siri.device</string>
<string>com.apple.private.alloy.siri.location</string>
<string>com.apple.private.alloy.siri.icloud</string>
</array>
<key>com.apple.private.ids.nearby</key>
<true/>
<key>com.apple.private.ids.registration</key>
<array>
<string>com.apple.ess</string>
<string>com.apple.private.ac</string>
</array>
<key>com.apple.private.ids.self-session</key>
<array>
<string>com.apple.private.alloy.siri.proxy</string>
</array>
<key>com.apple.private.intents.extension</key>
<true/>
<key>com.apple.private.librarian.container-proxy</key>
<true/>
<key>com.apple.private.memorystatus</key>
<true/>
<key>com.apple.private.mobiletimerd</key>
<true/>
<key>com.apple.private.network.socket-delegate</key>
<true/>
<key>com.apple.private.networkserviceproxy</key>
<true/>
<key>com.apple.private.rtcreportingd</key>
<true/>
<key>com.apple.private.security.storage.CallHistory</key>
<true/>
<key>com.apple.private.security.storage.HomeKit</key>
<true/>
<key>com.apple.private.security.storage.SiriReferenceResolution</key>
<true/>
<key>com.apple.private.security.storage.SiriVocabulary</key>
<true/>
<key>com.apple.private.security.storage.triald</key>
<true/>
<key>com.apple.private.siri-morphunassetsupdaterd</key>
<true/>
<key>com.apple.private.speech-model-training</key>
<true/>
<key>com.apple.private.suggestions.contacts</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServicePhotos</string>
<string>kTCCServiceAddressBook</string>
<string>kTCCServiceMicrophone</string>
<string>kTCCServiceCalendar</string>
<string>kTCCServiceWillow</string>
<string>kTCCServiceReminders</string>
<string>kTCCServiceLiverpool</string>
<string>kTCCServiceMotion</string>
</array>
<key>com.apple.private.tcc.manager</key>
<true/>
<key>com.apple.private.usernotifications.bundle-identifiers</key>
<array>
<string>com.apple.siri.NotificationSource</string>
<string>com.apple.Home</string>
<string>com.apple.NanoHome</string>
</array>
<key>com.apple.private.usernotifications.settings</key>
<array>
<string>read</string>
</array>
<key>com.apple.proactive.eventtracker</key>
<true/>
<key>com.apple.rapport.siri</key>
<true/>
<key>com.apple.runningboard.launchprocess</key>
<true/>
<key>com.apple.runningboard.process-state</key>
<true/>
<key>com.apple.security.app-sandbox</key>
<true/>
<key>com.apple.security.application-groups</key>
<array>
<string>group.com.apple.weather</string>
</array>
<key>com.apple.security.exception.files.absolute-path.read-only</key>
<array>
<string>/private/var/preferences/SystemConfiguration/preferences.plist</string>
<string>/private/var/MobileAsset/Assets/com_apple_MobileAsset_RaiseToSpeakAssets/</string>
<string>/private/var/containers/Bundle/Application/</string>
<string>/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/MDMAppManagement.plist</string>
<string>/private/var/db/MobileIdentityData/Version.plist</string>
</array>
<key>com.apple.security.exception.files.absolute-path.read-write</key>
<array>
<string>/private/var/tmp/com.apple.FeatureStore/</string>
<string>/private/var/tmp/SiriAutomation/</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-only</key>
<array>
<string>/Library/Trial/</string>
<string>/Library/UserConfigurationProfiles/EffectiveUserSettings.plist</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>/Library/Logs/com.apple.FeatureStore/</string>
<string>/Media/Purchases/Ringtones.plist</string>
<string>/Library/com.apple.siri.inference/</string>
<string>/Library/PeopleSuggester/</string>
<string>/Library/Application Support/SNLUOverrides.sqlite</string>
<string>/Library/Application Support/SNLUOverrides.sqlite-shm</string>
<string>/Library/Application Support/SNLUOverrides.sqlite-wal</string>
<string>/Library/Trial/Treatments/SIRI_UNDERSTANDING_NL_OVERRIDES/</string>
<string>/Library/Trial/Treatments/SIRI_TEXT_TO_SPEECH/</string>
<string>/Library/Caches/com.apple.assistantd/</string>
<string>/Library/Caches/GeoServices/</string>
<string>/Library/AddressBook/</string>
<string>/Library/Logs/CrashReporter/Assistant/</string>
<string>/Library/Logs/CrashReporter/SpeechLogs/</string>
<string>/Library/Logs/CrashReporter/VoiceTrigger/</string>
<string>/Library/Assistant/SiriReferenceResolution/</string>
<string>/Library/Voicemail/</string>
<string>/Library/Assistant/</string>
<string>/Library/VoiceTrigger/</string>
<string>/Library/Caches/VoiceTrigger/</string>
<string>/Library/Logs/CallHistory</string>
<string>/Library/CallHistoryDB/</string>
<string>/Media/Recordings/</string>
<string>/Media/</string>
<string>/Library/Caches/com.apple.siri.bundleservicecache.plist</string>
<string>/Library/Caches/com.apple.feedbacklogger/</string>
<string>/Library/Caches/com.apple.AssistantServices/</string>
</array>
<key>com.apple.security.exception.iokit-user-client-class</key>
<array>
<string>RootDomainUserClient</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.telephonyutilities.callservicesdaemon.conversationmanager</string>
<string>com.apple.remindd</string>
<string>com.apple.calaccessd</string>
<string>com.apple.suggestd.contacts</string>
<string>com.apple.carkit.app.service</string>
<string>com.apple.iap2d.xpc</string>
<string>com.apple.accessories.externalaccessory-server</string>
<string>com.apple.iaptransportd.ExternalAccessory.distributednotification.server</string>
<string>com.apple.coreduetd.knowledge.user</string>
<string>com.apple.coreduetd.knowledge</string>
<string>com.apple.appconduitd.device-connection</string>
<string>com.apple.siri.client_lite</string>
<string>com.apple.photos.service</string>
<string>com.apple.audio.AudioQueueServer</string>
<string>com.apple.server.bluetooth.le.att.xpc</string>
<string>com.apple.siri.UnifiedSiriTest.BridgeService</string>
<string>com.apple.corespeech.speechmodeltraining.xpc</string>
<string>com.apple.corespeech.corespeechd.endpointer.service</string>
<string>com.apple.siri.localspeechrecognitionbridge.xpc</string>
<string>com.apple.triald.namespace-management</string>
<string>com.apple.siriknowledged.SiriSessionService</string>
<string>com.apple.parsecd</string>
<string>com.apple.corespeech.corespeechd.ssv.service</string>
<string>com.apple.nanoprefsync</string>
<string>com.apple.assistant.multiuser.service</string>
<string>com.apple.trial.status</string>
<string>com.apple.siri.analytics.assistant</string>
<string>com.apple.ckdiscretionaryd</string>
<string>com.apple.SBUserNotification</string>
<string>com.apple.CARenderServer</string>
<string>com.apple.coremedia.routingcontext.xpc</string>
<string>com.apple.coremedia.volumecontroller.xpc</string>
<string>com.apple.coremedia.routediscoverer.xpc</string>
<string>com.apple.PairingManager</string>
<string>com.apple.NanoTimeKit.Siri</string>
<string>com.apple.corespeech.voicetriggerservice</string>
<string>com.apple.backboard.hid.services</string>
<string>com.apple.siriknowledged</string>
<string>com.apple.coremedia.endpoint.xpc</string>
<string>com.apple.fairplayd.versioned</string>
<string>com.apple.server.bluetooth</string>
<string>com.apple.awdd</string>
<string>com.apple.audio.AudioComponentRegistrar</string>
<string>com.apple.audio.AudioSession</string>
<string>com.apple.assistant.analytics</string>
<string>com.apple.commcenter.coretelephony.xpc</string>
<string>com.apple.apsd</string>
<string>com.apple.ABDatabaseDoctor</string>
<string>com.apple.assistant_service</string>
<string>com.apple.bulletinboard.observerconnection</string>
<string>com.apple.cloudd</string>
<string>com.apple.bulletinboard.settingsconnection</string>
<string>com.apple.coremedia.endpointremotecontrolsession.xpc</string>
<string>com.apple.coremedia.systemcontroller.xpc</string>
<string>com.apple.corespeech.corespeechd.xpc</string>
<string>com.apple.geod</string>
<string>com.apple.homed.xpc</string>
<string>com.apple.icloud.fmfd</string>
<string>com.apple.locationd.registration</string>
<string>com.apple.locationd.synchronous</string>
<string>com.apple.mediaremoted.xpc</string>
<string>com.apple.powerlog.plxpclogger.xpc</string>
<string>com.apple.soundboardservices.server</string>
<string>com.apple.springboard.services</string>
<string>com.apple.telephonyutilities.callservicesdaemon.callcapabilities</string>
<string>com.apple.voiceservices.tts</string>
<string>com.apple.siri.context.service</string>
<string>com.apple.CompanionLink</string>
<string>com.apple.siri.execution_service</string>
<string>com.apple.siri.activation</string>
<string>com.apple.siri.activation.horseman</string>
<string>com.apple.siri.activation.application</string>
<string>com.apple.FileCoordination</string>
<string>com.apple.MobileTimer.alarmserver</string>
<string>com.apple.MobileTimer.timerserver</string>
<string>com.apple.rapport.siri</string>
<string>com.apple.siri.VoiceShortcuts.xpc</string>
<string>com.apple.telephonyutilities.callservicesdaemon.callprovidermanager</string>
<string>com.apple.telephonyutilities.callservicesdaemon.callstatecontroller</string>
<string>com.apple.identityservicesd.embedded.auth</string>
<string>com.apple.CallHistorySyncHelper</string>
<string>com.apple.voicemail.vmd</string>
<string>com.apple.commcenter.xpc</string>
<string>com.apple.watchlistd.xpc</string>
<string>com.apple.usernotifications.usernotificationservice</string>
<string>com.apple.usernotifications.usernotificationsettingsservice</string>
<string>com.apple.itunescloud.music-subscription-status-service</string>
<string>com.apple.itunescloud.library-auth-token-provider</string>
<string>com.apple.siri.siriaudio-helper</string>
<string>com.apple.controlcenter.remoteservice</string>
<string>com.apple.announced.server</string>
<string>com.apple.announced.localplaybacksession</string>
<string>com.apple.siri.morphunassetsupdaterd</string>
<string>com.apple.misagent</string>
<string>com.apple.biome.PublicStreamAccessService</string>
<string>com.apple.siriknowledged.vocabulary.admin</string>
<string>com.apple.CarPlayApp.service</string>
<string>com.apple.remoted</string>
</array>
<key>com.apple.security.exception.mach-lookup.local-name</key>
<array>
<string>com.apple.assistant.contextprovider.com.apple.Preferences</string>
<string>com.apple.assistant.contextprovider.com.apple.springboard</string>
<string>com.apple.assistant.contextprovider.com.apple.Maps</string>
<string>com.apple.assistant.contextprovider.com.apple.mobilephone</string>
<string>com.apple.assistant.contextprovider.com.apple.MobileAddressBook</string>
<string>com.apple.assistant.contextprovider.com.apple.MobileSMS</string>
<string>com.apple.assistant.contextprovider.com.apple.mobilenotes</string>
<string>com.apple.assistant.contextprovider.com.apple.mobilemail</string>
<string>com.apple.assistant.contextprovider.com.apple.mobilecal</string>
<string>com.apple.assistant.contextprovider.com.apple.reminders</string>
</array>
<key>com.apple.security.exception.process-info</key>
<true/>
<key>com.apple.security.exception.shared-preference.read-only</key>
<array>
<string>com.apple.carplay</string>
<string>com.apple.ToneLibrary</string>
<string>com.apple.mobileslideshow</string>
<string>com.apple.itunescloud.internal</string>
<string>com.apple.announce</string>
<string>com.apple.MobileSMS</string>
<string>com.apple.mediaremote</string>
<string>com.apple.SiriViewService</string>
<string>com.apple.CloudKit</string>
<string>com.apple.GEO</string>
<string>com.apple.homed.notbackedup</string>
<string>com.apple.homed</string>
<string>com.apple.itunescloud</string>
<string>com.apple.purplebuddy</string>
<string>com.apple.TelephonyUtilities</string>
</array>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.mobilecal</string>
<string>com.apple.siri.morphun</string>
<string>com.apple.assistantd</string>
<string>com.apple.suggestions</string>
<string>com.apple.pairedsyncd</string>
<string>com.apple.raisetospeak</string>
<string>com.apple.Accessibility</string>
<string>com.apple.niservices</string>
<string>com.apple.siri.textinput</string>
<string>com.apple.springboard</string>
<string>com.apple.voiceservices</string>
<string>com.apple.voicetrigger</string>
<string>com.apple.voicetrigger.notbackedup</string>
<string>com.apple.coreaudio</string>
<string>com.apple.coremedia</string>
<string>com.apple.parsecd</string>
<string>com.apple.speakerrecognition</string>
<string>com.apple.siri.cdm</string>
<string>com.apple.assistant.nano</string>
<string>com.apple.nanoprefsyncd</string>
<string>com.apple.internal.ck</string>
<string>com.apple.assistant</string>
<string>com.apple.assistant.backedup</string>
<string>com.apple.assistant.support</string>
<string>com.apple.assistant.token</string>
<string>com.apple.assistant.logging</string>
<string>com.apple.assistant.AssistantServices</string>
<string>com.apple.AssistantServices</string>
<string>com.apple.assistant.settings</string>
<string>com.apple.itunescloud</string>
<string>com.apple.UIKit</string>
<string>com.apple.siri.DialogEngine</string>
<string>com.apple.voiceservices</string>
<string>com.apple.siri.analytics.assistant</string>
</array>
<key>com.apple.security.iokit-user-client-class</key>
<array>
<string>AGXCommandQueue</string>
<string>AGXDevice</string>
<string>AGXDeviceUserClient</string>
<string>AGXSharedUserClient</string>
<string>H11ANEInDirectPathClient</string>
<string>IOAccelContext</string>
<string>IOAccelContext2</string>
<string>IOAccelDevice</string>
<string>IOAccelDevice2</string>
<string>IOAccelSharedUserClient</string>
<string>IOAccelSharedUserClient2</string>
<string>IOAccelSubmitter2</string>
<string>IOSurfaceRootUserClient</string>
<string>IOTimeSyncClockManagerUserClient</string>
<string>IOTimeSyncDomainUserClient</string>
<string>IOTimeSyncgPTPManagerUserClient</string>
</array>
<key>com.apple.security.network.client</key>
<true/>
<key>com.apple.security.personal-information.addressbook</key>
<true/>
<key>com.apple.security.system-group-containers</key>
<array>
<string>systemgroup.com.apple.osanalytics</string>
</array>
<key>com.apple.security.temporary-exception.mach-lookup.global-name</key>
<array>
<string>com.apple.telephonyutilities.callservicesdaemon.callprovidermanager</string>
<string>com.apple.telephonyutilities.callservicesdaemon.callstatecontroller</string>
<string>com.apple.identityservicesd.desktop.auth</string>
<string>com.apple.CallHistorySyncHelper</string>
<string>com.apple.commcenter.xpc</string>
</array>
<key>com.apple.security.ts.addressbook</key>
<true/>
<key>com.apple.security.ts.asset-access</key>
<true/>
<key>com.apple.security.ts.geoservices</key>
<true/>
<key>com.apple.security.ts.identity-services-client</key>
<true/>
<key>com.apple.security.ts.location-services</key>
<true/>
<key>com.apple.security.ts.mach-task-name</key>
<true/>
<key>com.apple.security.ts.nano-preference.read-only</key>
<array>
<string>com.apple.ToneLibrary</string>
</array>
<key>com.apple.security.ts.springboard-services</key>
<true/>
<key>com.apple.security.ts.tmpdir</key>
<string>com.apple.assistantd</string>
<key>com.apple.siri.VoiceShortcuts.xpc</key>
<true/>
<key>com.apple.siri.acousticsignature</key>
<true/>
<key>com.apple.siri.activation</key>
<true/>
<key>com.apple.siri.analytics.assistant</key>
<true/>
<key>com.apple.siri.analyzer</key>
<true/>
<key>com.apple.siri.client_lite</key>
<true/>
<key>com.apple.siri.embeddedspeech</key>
<true/>
<key>com.apple.siri.execution_service</key>
<true/>
<key>com.apple.siri.opportune_speaking_model_service</key>
<true/>
<key>com.apple.siri.siriaudio-helper</key>
<true/>
<key>com.apple.siri.sync_deep_verification</key>
<true/>
<key>com.apple.siri.task.client</key>
<true/>
<key>com.apple.siri.vocabulary.admin</key>
<true/>
<key>com.apple.siriknowledged</key>
<true/>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>com.apple.springboard.openurlinbackground</key>
<true/>
<key>com.apple.symptom_analytics.query</key>
<true/>
<key>com.apple.symptom_diagnostics.report</key>
<true/>
<key>com.apple.telephonyutilities.callservicesd</key>
<array>
<string>access-calls</string>
<string>access-call-providers</string>
<string>modify-calls</string>
<string>access-call-capabilities</string>
<string>modify-call-capabilities</string>
</array>
<key>com.apple.trial.client</key>
<array>
<string>200</string>
<string>322</string>
<string>401</string>
<string>406</string>
<string>409</string>
<string>750</string>
<string>751</string>
<string>753</string>
<string>755</string>
<string>910</string>
</array>
<key>com.apple.trial.status.deployment-environment.allow</key>
<array>
<integer>0</integer>
<integer>3</integer>
</array>
<key>com.apple.visualvoicemail.client</key>
<true/>
<key>com.apple.voicetrigger.voicetriggerservice</key>
<true/>
<key>com.apple.watchlist.private</key>
<true/>
<key>com.apple.wifi.manager-access</key>
<true/>
<key>fairplay-client</key>
<string>511712240</string>
<key>keychain-access-groups</key>
<array>
<string>com.apple.assistant</string>
<string>apple</string>
</array>
<key>platform-application</key>
<true/>
<key>seatbelt-profiles</key>
<array>
<string>temporary-sandbox</string>
</array>
</dict>
</plist>
O+aM
!+aM
!+aM
