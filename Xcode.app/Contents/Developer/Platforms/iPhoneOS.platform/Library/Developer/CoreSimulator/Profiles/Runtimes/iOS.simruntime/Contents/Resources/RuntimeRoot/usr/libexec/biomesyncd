@(#)PROGRAM:biomesyncd  PROJECT:BiomeSync-100.12
CREATE TABLE Metadata (
 key TEXT UNIQUE PRIMARY KEY ON CONFLICT REPLACE NOT NULL,
 value
CREATE TABLE CKAtom (
 stream STRING NOT NULL,
 -- CKDistributedTimestamp
 site BLOB NOT NULL,
 clock INTEGER NOT NULL,
 type INTEGER NOT NULL,
 -- CRDTLocation
 location_id INTEGER NOT NULL,
 -- BMStoreBookmark
 segment_name TEXT,
 segment_offset INTEGER,
 -- CKAtomReference
 ref_type INTEGER,
 ref_site BLOB,
 ref_clock INTEGER,
 ref_location_id INTEGER,
 -- CKAtom value
 value_version INTEGER,
 value_data BLOB,
 on_disk BOOLEAN,
 CONSTRAINT "ref_type <=> (ref_site AND ref_clock)"
 CHECK ((ref_type IS NULL) == ((ref_site IS NULL) AND (ref_clock IS NULL))),
 CONSTRAINT "(ref_type, ref_site, ref_clock) != (type, site, clock)"
 CHECK (ref_type != type OR ref_site != site OR ref_clock != clock),
 CONSTRAINT "segment_name <=> segment_offset"
 CHECK ((segment_name IS NULL) == (segment_offset IS NULL)),
 CONSTRAINT "on_disk <=> segment_name"
 CHECK (CASE WHEN on_disk NOTNULL THEN segment_name NOTNULL ELSE segment_name ISNULL END),
 CONSTRAINT "on_disk <=> !data"
 CHECK (CASE WHEN on_disk NOTNULL THEN value_data ISNULL ELSE value_data NOTNULL END)
 FOREIGN KEY (location_id) REFERENCES CRDTLocation(id),
 FOREIGN KEY (ref_location_id) REFERENCES CRDTLocation(id)
 UNIQUE (stream, site, type, clock),
 UNIQUE (stream, site, clock, on_disk),
 UNIQUE (stream, site, type, clock, on_disk),
 UNIQUE (stream, site, type, segment_name, segment_offset)
CREATE INDEX idx_ckatom_ref_clock_type ON CKAtom(stream, ref_clock, type);
CREATE INDEX idx_ckatom_segment_name ON CKAtom(stream, segment_name);
CREATE TABLE CRDTLocation (
 id INTEGER primary key,
 stream STRING NOT NULL,
 site STRING NOT NULL,
 day INTEGER NOT NULL,
 state INTEGER NOT NULL
CREATE INDEX idx_crdt_location ON CRDTLocation(stream, site, day);
CREATE INDEX idx_crdt_location_state ON CRDTLocation(stream, site, state, day DESC);
CREATE TABLE TombstoneBookmark (
 stream STRING NOT NULL,
 site BLOB NOT NULL,
 segment_name TEXT,
 segment_offset INTEGER
CREATE INDEX idx_tombstone_bookmark ON TombstoneBookmark(stream, site);
CREATE TABLE DevicePeer (
 device_identifier STRING NOT NULL,
 me BOOLEAN,
 name STRING,
 model STRING,
 platform INTEGER,
 last_sync_date INTEGER,
 protocol_version INTEGER NOT NULL
CREATE TABLE SyncSessionLog (
 session_id BLOB,
 start_timestamp INTEGER,
 end_timestamp INTEGER,
 transport INTEGER,
 reason INTEGER,
 is_reciprocal BOOL,
 time_since_previous_sync INTEGER
CREATE TABLE SyncMessageLog (
 session_id BLOB,
 message_id INTEGER,
 timestamp INTEGER,
 device_identifier STRING,
 reachable BOOL,
 is_reciprocal BOOL,
 atom_batch_bytes INTEGER
CREATE INDEX idx_syncmessagelog_session_id ON SyncMessageLog(session_id);
CREATE TABLE AtomMergedLog (
 session_id BLOB,
 message_id INTEGER,
 stream STRING,
 merge_result INTEGER,
 owning_site_identifier STRING,
 relayed_by_site_identifier STRING,
 synced_at INTEGER,
 event_created_at INTEGER
CREATE INDEX idx_atommergedlog_session_id ON AtomMergedLog(session_id);
CREATE INDEX idx_atommergedlog_owning_site_identifier ON AtomMergedLog(owning_site_identifier);
CREATE TABLE CKRecord (
 location_id INTEGER,
 sync_to_cloud_kit BOOL,
 record_metadata BLOB,
 record_name STRING,
 stream_identifier STRING,
 local_mergeable_value BLOB,
 deleting BOOL,
 record_type INTEGER,
 deleted_crdt BOOL,
 PRIMARY KEY (stream_identifier, record_name)
 FOREIGN KEY (location_id) REFERENCES CRDTLocation(id)
CREATE INDEX idx_ckrecord ON CKRecord(record_name);
CREATE TABLE CKMergeableRecordValue (
 stream_name STRING,
 record_name STRING,
 server_mergeable_value BLOB,
 FOREIGN KEY (stream_name, record_name) REFERENCES CKRecord(stream_identifier, record_name)
CREATE TABLE CKZone (
 zone_name STRING NOT NULL,
 zone_uuid STRING NOT NULL,
 recovery_state INTEGER,
 attempted_recovery_date INTEGER
333333
FMDBUserVersion
CKAtomRowSiteIdentifiers
T@"CKContainer",&,N,V_container
DELETE_FROM:WHERE:
T@"NSArray",R,N,V_sqlStatements
INSERT_INTO:VALUES:
T@?,C,N,V_requestTimeoutHandler
SELECT_FROM:COLUMNS:JOIN:WHERE:GROUP_BY:HAVING:ORDER_BY:LIMIT:
TB,V_logsErrors
SELECT_FROM:COLUMNS:WHERE:
T^v,V_statement
SELECT_FROM:COLUMNS:WHERE:ORDER_BY:LIMIT:
Td,N,V_walltime
T@"<BMRapportManagerDelegate>",W,N,V_delegate
_client
T@"BMCloudKitSyncEngine",&,N,V_cloudKitSyncEngine
_databaseInPool
T@"BMMultiStreamVectorClock",&,N,V_vectorClock
_device
T@"BMStoreBookmark",R,N,V_bookmark
_openResultSets
T@"BMStreamCKCRDT",R,N,V_streamCRDT
_policy
T@"BMSyncCRDTLocationRow",R,N,V_location
_requestTimeout
T@"BMSyncCRDTLocationRow",R,N,V_referenceLocation
_siteIdentifier
T@"BMSyncDatabase",R,N,V_db
_traceExecution
T@"BMSyncDevicePeerStatusTracker",R,N,V_peerStatusTracker
arrayWithArray:
T@"BMSyncScheduler",&,N,V_syncScheduler
causalReference
T@"BMSyncSessionContext",R,N,V_sessionContext
computeAndSendAggregatedMetrics
T@"BMSyncStreamID",R,N,V_streamID
containsString:
T@"CKDistributedTimestamp",R,N,V_timestamp
T@"CKSyncEngineConfiguration",&,N,V_configuration
doubleForQuery:
T@"NSData",R,N,V_eventData
enumerateMergeableRecordValuesForRecordName:zoneName:withBlock:
T@"NSData",R,N,V_valueData
executeUpdate:error:withArgumentsInArray:orDictionary:orVAList:
T@"NSDate",R,N,V_attemptedRecoveryDate
getTableSchema:
T@"NSDictionary",&,N,V_atomBatches
handleSyncRecordDidFetchRecord:
T@"NSDictionary",&,N,V_errorFromDevice
initWithAtomType:value:version:
T@"NSDictionary",R,N,V_distributedSyncManagers
initWithTriple:
T@"NSMutableArray",&,N,V_requestQueue
isInTransaction
T@"NSMutableDictionary",&,V_cachedStatements
lastInsertRowId
T@"NSNumber",R,N,V_locationID
lowercaseString
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
numRowsInTable:
T@"NSObject<OS_xpc_object>",&,N,V_activity
numberWithLong:
T@"NSSet",&,N,V_inFlightToDevices
recordChangeTag
T@"NSString",&,N,V_bmDeviceIdentifier
recordZonesToSaveForSyncEngine:
T@"NSString",&,N,V_sessionID
releaseSavePointWithName:error:
T@"NSString",&,V_query
setAtomBatches:
T@"NSString",C,V_vfsName
setKey:
T@"NSString",R,C
setLastCloudKitSyncAttemptDate:
T@"NSString",R,C,N,V_model
setServiceType:
T@"NSString",R,N
setUnseenPeers:
T@"NSString",R,N,V_customFunctionName
setVectorClock:
T@"NSString",R,N,V_rapportIdentifier
shouldAutoClose
T@"NSString",R,N,V_siteIdentifier
stringForQuery:
T@"NSString",R,N,V_streamName
suggestedDeltaSizeForContainer:
T@"NSString",R,N,V_zoneName
upsertLocation:
T@"NSURL",R,N
version
T@"RPCompanionLinkClient",&,N,V_client
.cxx_destruct
T@"BMSyncDevicePeer",&,N,V_peer
CRDTLocationCount
T@"NSArray",R,N
FMDBVersion
T@"NSString",R,N,V_databasePath
SELECT_ATOMS_WHERE:ORDER_BY:LIMIT:
TB,V_checkedOut
SELECT_FROM:COLUMNS:JOIN:WHERE:ORDER_BY:LIMIT:
T^v,R,N
SELECT_FROM:COLUMNS:WHERE:GROUP_BY:
Td,N,V_maxBusyRetryTimeInterval
T#,R
_atomBatchBytes
T@"<CKSyncEngineDataSource>",&,N,V_dataSource
_config
T@"BMDistributedSyncMultiStreamManager",&,N,V_distributedSyncMultiStreamManager
T@"BMRapportSyncEngine",&,N,V_rapportSyncEngine
_isOpen
T@"BMStoreEventAtomValue",R,N,V_value
_operationQueue
T@"BMStreamCRDTLocation",R,N,V_location
_rapportManager
T@"BMSyncCRDTLocationRow",R,N,V_locationRow
_sessionContext
T@"BMSyncDatabase",&,N,V_database
_streamSyncName
T@"BMSyncDevicePeerMetadata",R,N,V_metadata
allKeys
T@"BMSyncPolicy",R,N,V_policy
atomBatchesInClockVector:ckFormatVersion:chunker:transportType:
T@"BMSyncSessionContext",&,N,V_sessionContext
changes
T@"BMSyncSessionMetricsCollector",&,N,V_metricsCollector
containsObject:
T@"CKAtomReference",R,N,V_causalReference
dateFromString:
T@"CKSyncEngine",&,N,V_ckSyncEngine
dealloc
T@"NSArray",&,N,V_unseenPeers
encryptedValues
T@"NSData",R,N,V_localMergeableValue
errorFromDevice
T@"NSDate",&,N
fetchAtomBatchesIsReciprocal:reason:activity:completionHandler:
T@"NSDate",R,N,V_day
handleFailedToSaveSyncRecordServerManateeDecryptionError:error:
T@"NSDictionary",&,N,V_deletedLocations
identifierForPublicStreamNamed:
T@"NSDictionary",R,N
initWithFormat:
T@"NSDictionary",R,N,V_streamNameToStreamDescriptorDict
initWithZoneID:
T@"NSMutableDictionary",&,N,V_registeredRequests
isProxy
T@"NSMutableDictionary",R
limitFor:value:
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
T@"NSObject<OS_dispatch_source>",&,N,V_requestTimeout
numberWithBool:
T@"NSSet",&,N,V_deliveredToDevices
protocolVersion
T@"NSString",&,N
recordIDsToSave
T@"NSString",&,N,V_originatingSiteIdentifier
release
T@"NSString",&,V_path
T@"NSString",C,V_path
setExpirationAfterTimeInterval:
T@"NSString",R
setKeyWithData:
T@"NSString",R,C,N,V_deviceIdentifier
setMaxConcurrentOperationCount:
T@"NSString",R,C,N,V_name
setState:error:
T@"NSString",R,N,V__error_ivar
setUserVersion:
T@"NSString",R,N,V_mergeableRecordValueKey
setWithObjects:
T@"NSString",R,N,V_recordName
stringByAppendingPathComponent:
T@"NSString",R,N,V_streamIdentifier
stringFromDate:
T@"NSString",R,N,V_streamSyncName
syncEngine:zoneWithIDWasPurged:
T@"NSString",R,N,V_zoneUUID
vectorClockForStreamIdentifier:
T@"NSUUID",&,N,V_uuid
vfsName
T@"RPCompanionLinkDevice",&,N,V_device
T@"_bmFMDatabase",&,N,V_parentDB
T@"_bmFMStatement",&,V_statement
T@,V_delegate
T@?,C,N,V_completionHandler
T@?,C,N,V_corruptionHandler
T@?,C,N,V_reciprocalCompletionBlock
T@?,C,N,V_requestBlock
T@?,R,C,N,V_block
TB,N,V_isOpen
TB,N,V_isReciprocalRequest
TB,N,V_moreComing
TB,N,V_shouldAutoClose
TB,N,V_shouldCacheStatements
TB,R
TB,R,N
TB,R,N,V_isInTransaction
TB,V_crashOnErrors
TB,V_inUse
TB,V_traceExecution
TI,N
TI,R,N
TI,R,N,V_dataVersion
TQ,N,V_atomBatchBytes
TQ,N,V_atomBatchVersion
TQ,N,V_batchSequenceNumber
TQ,N,V_batchSize
TQ,N,V_linkState
TQ,N,V_messageID
TQ,N,V_protocolVersion
TQ,N,V_state
TQ,R
TQ,R,N
TQ,R,N,V__internal_state_ivar
TQ,R,N,V_primaryKey
TQ,R,N,V_state
TQ,R,N,V_type
TQ,V_maximumNumberOfDatabasesToCreate
Td,R,N,V_dataTimestamp
Ti,R,N
Ti,R,N,V_recoveryState
Ti,R,V_openFlags
Tq,N,V_maxDeltaSize
Tq,R,N
Tq,R,N,V_platform
Tq,R,N,V_valueVersion
Tq,R,N,V_version
Tq,V_useCount
UPDATE:SET:WHERE:
UTF8String
UTF8StringForColumn:
UTF8StringForColumnIndex:
UTF8StringForColumnName:
UUID
UUIDString
_SELECT_FROM:COLUMNS:JOIN:WHERE:GROUP_BY:ORDER_BY:LIMIT:
__error_ivar
__internal_state_ivar
_activity
_atomBatchChunkerPolicy
_atomBatchVersion
_atomBatches
_atomCount
_attemptedRecoveryDate
_batchSequenceNumber
_batchSize
_block
_bmDeviceIdentifier
_bookmark
_cachedStatements
_causalReference
_checkedOut
_chunkerPolicy
_ckSyncEngine
_cloudKitSyncEngine
_cloudKitSyncWithSyncTriggeredHandler:syncCompletedHandler:
_columnNameToIndexMap
_completionHandler
_configuration
_container
_core
_corruptionHandler
_crashOnErrors
_customFunctionName
_dataReceivedFromSiteIdentifiers
_dataSource
_dataTimestamp
_dataVersion
_database
_databaseOutPool
_databasePath
_dateFormat
_dateFormatter
_day
_delegate
_deletedLocations
_deliveredToDevices
_deviceIdentifier
_devices
_discoveryClient
_discoveryClientState
_distributedSyncManagers
_distributedSyncMultiStreamManager
_errorFromDevice
_eventData
_executing
_finished
_flags
_fmdb
_has
_inFlightToDevices
_inUse
_isExecutingStatement
_isInTransaction
_isReciprocalRequest
_linkState
_listener
_localDeviceIdentifier
_localMergeableValue
_localSiteIdentifier
_location
_locationBuilder
_locationID
_locationRow
_locationRowCache
_lockQueue
_logsErrors
_maxBusyRetryTimeInterval
_maxBytes
_maxCount
_maxDeltaSize
_maximumNumberOfDatabasesToCreate
_mergeableRecordValueKey
_messageID
_metadata
_metricsCollector
_model
_moreComing
_name
_numPagesToVacuum
_openFlags
_openFunctions
_originatingSiteIdentifier
_parentDB
_path
_peer
_peerStatusTracker
_platform
_policyDictionary
_primaryKey
_protocolVersion
_query
_queue
_rapportIdentifier
_rapportSyncEngine
_rapportSyncWithSyncTriggeredHandler:syncCompletedHandler:
_reciprocalCompletionBlock
_recordName
_recoveryState
_referenceLocation
_registeredRequests
_reinitializeSiteIdentifier:
_requestBlock
_requestQueue
_requestTimeoutHandler
_sessionID
_sharedUse
_shouldAutoClose
_shouldCacheStatements
_sigtermSource
_sizeOfFileInKilobytes:
_sqlStatements
_startBusyRetryTime
_state
_statement
_streamCRDT
_streamID
_streamIdentifier
_streamName
_streamNameToStreamDescriptorDict
_supportsTransport:direction:outSupportedDirections:
_syncManager
_syncScheduler
_timestamp
_transaction
_tryOpen:
_type
_unseenPeers
_unsupportedDevices
_useCount
_usedBytes
_uuid
_value
_valueData
_valueVersion
_vectorClock
_version
_vfsName
_walltime
_writeEventData:dataVersion:timestamp:outBookmark:
_zoneName
_zoneUUID
aa_primaryAppleAccount
accountInfoWithCompletionHandler:
accountStatus
activateDirectLinkToDevice:completionHandler:
activateDiscoveryClientWithCompletion:
activateDiscoveryLinkWithCompletion:
activateWithCompletion:
activeDevices
activity
addAtomToAtomBatch:ifChunkerAllows:fromAtomTableRecord:atomValueData:version:atomValueVersion:
addAtomWithValueData:toAtomBatch:fromAtomTableRecord:version:atomValueVersion:
addCKAtomRow:inStream:
addClockValuesInIndexSet:forSiteIdentifier:
addClockValuesInIndexSet:withAtomState:forSiteIdentifier:
addDeltasToSaveFromMergeable:error:
addEntriesFromDictionary:
addObject:
addObjectsFromArray:
addOperation:
addRecordIDsToSave:recordIDsToDelete:
addRecordZonesToSave:recordZoneIDsToDelete:
allObjects
allPeers
allSiteIdentifiers
allValues
allocWithZone:
anyObject
appendAtomWithBlock:
appendFormat:
appendString:
appendWithProxyBlock:
applicationID
archivedDataWithRootObject:requiringSecureCoding:error:
array
arrayWithCapacity:
arrayWithObjects:count:
atomBatchBytes
atomBatchVersion
atomBatches
atomBatchesInClockVector:targetPlatform:transportType:direction:ckFormatVersion:chunker:
atomRowsInTimestampClockVector:forLocation:inStream:enumerateWithBlock:
atomRowsNotOnDiskReferencingSiteIdentifier:inStream:enumerateWithBlock:
atomType
atomValueFromData:version:
atomValueFromEvent:ofType:version:
atomsAtOrBeforeLocation:ofType:enumerateWithBlock:
atomsInClockVector:ckFormatVersion:chunker:transportType:enumerateWithBlock:
attemptedRecoveryDate
attributesOfItemAtPath:error:
autorelease
batchSequenceNumber
batchSize
beginDeferredTransaction
beginExclusiveTransaction
beginImmediateTransaction
beginTransaction
beginTransaction:withBlock:
bindObject:toColumn:inStatement:
bindStatement:WithArgumentsInArray:orDictionary:orVAList:
bindWithArray:
bindWithArray:orDictionary:orVAList:
bindWithDictionary:
block
bmDeviceIdentifier
bmUserDefaultsString:
bm_companionLinkDeviceIdentifier
bm_description
bookmark
boolForColumn:
boolForColumnIndex:
boolForEntitlement:
boolForQuery:
boolValue
buildAtomBatchRequestWithIsReciprocal:sequenceNumber:transportType:device:
busyRetryTimeout
bytes
cachedStatementForQuery:
cachedStatements
canAddAtomWithData:
charValue
characterAtIndex:
checkedOut
checkpoint:error:
checkpoint:name:error:
checkpoint:name:logFrameCount:checkpointCount:error:
ckAtomCount
ckAtomRowForAtomWithBookmark:type:forSiteIdentifier:inStream:
ckAtomRowWithTimestamp:inStream:
ckAtomTableRecordForEvent:ofType:atBookmark:previousTableRecord:siteIdentifier:
ckMergeableValueID
ckMergeableValueIDWithFormatVersion:
ckRecordCountForRecordType:
ckRecordExists:zoneName:recordType:
ckRecordForRecordName:zoneName:recordType:
ckRecordsToSyncToCloudKitForZone:
ckSyncEngine
ckSyncEngineMetaData
ckZoneExists:
ckZoneForZoneName:
ckZoneSetAttemptedRecoveryDate:state:forZoneName:
ckZoneSetAttemptingRecoveryForZoneName:state:
ckZoneSetZoneVersionUUID:forZoneName:
class
clearCKMergeableRecordValueServerMergeableValuesForRecordName:zoneName:
clearCKMergeableRecordValueServerMergeableValuesForZoneName:
clearCKRecordLocalMergeableValueAndSetToSyncForZone:
clearCKSyncEngineMetaData
clearCachedStatements
client
clockValue
clockValuesForSiteIdentifier:
clockVector
clockVectorForStreamsSupportingTransportType:direction:device:
close
closeOpenResultSets
cloudKitSyncEngine
cloudKitSyncWithReply:
code
columnCount
columnExists:columnName:
columnExists:inTableWithName:
columnIndexForName:
columnIndexIsNull:
columnIsNull:
columnNameForIndex:
columnNameToIndexMap
commit
compactAndDeleteSessionLogs
compare:
compareToTimestampVector:
compareToVector:
completeRequest:deliveredToDevices:withErrors:
completeRequestIfDeliveredToAllNearbyDevices:
completionHandler
componentsJoinedByString:
componentsSeparatedByString:
computeAggregatedSessionLogs
computeAndSendStateVectorMetrics
computeHighestLocationToDeleteUpToBookmark:forSiteIdentifier:inStream:
computeStateVectorMetrics
config
configForSyncStreamID:
configuration
conformsToProtocol:
container
containsCKAtomRowWithSegment:inStream:
containsCKAtomRowWithTimestamp:inStream:
containsCKAtomRowWithTimestamp:inStream:onDisk:
contentsVector
contextSyncManager
copy
copyWithZone:
corruptionHandler
count
countByEnumeratingWithState:objects:count:
countOfCheckedInDatabases
countOfCheckedOutDatabases
countOfOpenDatabases
crashOnErrors
createCKRecordFromRecordID:newRecord:recordType:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
createDiscoveryClientIfNotExists
createDiscoveryClientWithControlFlags:
createSharedDiscoveryClientIfNotExists
currentDevice
currentHandler
customFunctionName
data
dataForColumn:
dataForColumnIndex:
dataForQuery:
dataNoCopyForColumn:
dataNoCopyForColumnIndex:
dataSource
dataTimestamp
dataUsingEncoding:
dataVersion
dataWithBytes:length:
dataWithBytesNoCopy:length:freeWhenDone:
dataWithError:
database
databaseClass
databaseExists
databasePath
databasePool:didAddDatabase:
databasePool:shouldAddDatabaseToPool:
databasePoolWithPath:
databasePoolWithPath:flags:
databasePoolWithURL:
databasePoolWithURL:flags:
databaseQueueWithPath:
databaseQueueWithPath:flags:
databaseQueueWithURL:
databaseQueueWithURL:flags:
databaseSizeInKilobytes
databaseURL
databaseWithPath:
databaseWithURL:
datastorePath
dateForColumn:
dateForColumnIndex:
dateForQuery:
dateFormatter
dateOfLastVacuum
dateToRelativePositionDictionary
dateWithTimeIntervalSince1970:
dateWithTimeIntervalSinceReferenceDate:
dayFromRecordName:
debugDescription
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
defaultDatabasePath
defaultDatabaseWALPath
defaultManager
delegate
deleteAllAtomsAtOrBeforeLocation:
deleteAllCKRecordsInZone:
deleteAtOrBeforeHighestDeletedLocation:
deleteCKRecordAtLocation:
deleteCKRecordsAtOrBeforeLocation:
deleteCKRecordsForStreamName:
deleteEventAtBookmark:outTombstoneBookmark:
deleteLocationsUpToTTLAtTombstone:siteIdentifier:
deletedExpiredBufferedLocationsForSiteIdentifier:
deletedLocations
deletionReason
deliveredToDevices
deltaDeliveryRequirements
deregisterRequestID:
description
descriptor
deserialize:error:
device
device:didChange:
deviceIdentifier
devicePeerMetadata
deviceToDeviceEncryptionAvailability
deviceWithIdentifier:
dictionary
dictionaryRepresentation
dictionaryWithCapacity:
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:count:
dictionaryWithSyncDatabase:
didAddAtomWithData:
didChangeValueForKey:
didDiscoverDevice:
didLoseDevice:
directionsSupportedForTransport:
disableAllCKSyncRecordsForSite:stream:
disableStatementCachingForBlock:
discoveredDevices
dispatchQueue
distantPast
distributedSiteIdentifier
distributedSyncManagers
distributedSyncMultiStreamManager
distributedSyncMultiStreamManagerWithDatabase:
doCloudKitSyncNowWithReason:
doRapportSyncNowWithReason:
domain
doubleForColumn:
doubleForColumnIndex:
doubleValue
enableAllCKSyncRecordsPreviouslyDisabledForSite:stream:
encodeAsProto
encodeObject:forKey:
encodeSystemFieldsWithCoder:
encodeWithCoder:
encodedData
enumerateAllClockValuesUsingBlock:
enumerateAtomsWithOptions:usingBlock:
enumerateCKSyncRecordRecordsSetForDeletingUsingBlock:
enumerateObjectsUsingBlock:
enumerateRangesUsingBlock:
enumerateRecordsWithBlock:
enumerateWithBlock:
enumerateZonesWithBlock:
error
errorWithDomain:code:userInfo:
errorWithMessage:
eventBody
eventBodyClass
eventData
eventStringFromDescriptor:
exceptionWithName:reason:userInfo:
executeLocked:
executeOperationWithBlock:
executeQuery:
executeQuery:values:error:
executeQuery:withArgumentsInArray:
executeQuery:withArgumentsInArray:orDictionary:orVAList:shouldBind:
executeQuery:withParameterDictionary:
executeQuery:withVAList:
executeQueryWithFormat:
executeStatements:
executeStatements:withResultBlock:
executeUpdate:
executeUpdate:values:error:
executeUpdate:withArgumentsInArray:
executeUpdate:withErrorAndBindings:
executeUpdate:withParameterDictionary:
executeUpdate:withVAList:
executeUpdateWithFormat:
expirationTimeForStreamDesc:
extractSQL:argumentsList:intoString:arguments:
fetchAtomBatchesRequestHandler
fetchChangesWithCompletionHandler:
fetchChangesWithError:
fileExistsAtPath:
fileSize
fileSystemRepresentation
fileURLWithPath:
finishRequest:toDevice:withError:peerInfo:
finishWritingWithError:
finishedSendingRequestsToDevice:
firstIndex
floatValue
frame
gatherAllCKSyncRecordRecordsToBeDeleted
getSchema
getSystemFieldsDataForRecordName:zoneName:recordType:
goodConnection
hadError
handleActivationForDevice:error:
handleDeleteAtomRow:usingPruner:outBookmark:outTombstoneBookmark:
handleDeletedLocation:deleteCKRecord:
handleDidSaveRecordHighestDeletedLocation:
handleDidSaveRecordSyncRecord:
handleDidSaveRecordZoneVersionRecord:
handleDiscoveryClientActivationOrError:
handleDiscoveryClientInvalidation
handleFailedToSaveRecordHighestDeletedLocation:error:
handleFailedToSaveRecordSyncRecord:error:
handleFailedToSaveRecordZoneVersion:error:
handleFailedToSaveSyncRecordResaveRecord:
handleFailedToSaveSyncRecordServerRecordChanged:error:
handleFailedToSaveSyncRecordUnknownItem:
handleFailureInFunction:file:lineNumber:description:
handleFailureInMethod:object:file:lineNumber:description:
handleFetchAtomBatchesResponse:options:error:fromDevice:forRequest:isReciprocal:
handleHighestDeletedLocationDidFetchRecord:
handleHighestDeletedLocationRecordToSaveForRecordID:
handleInterruptionForDevice:
handleInvalidationWithError:
handleRecordWithIDDeletedSyncRecord:
handleServerRecordChangedForHighestDeletedLocationError:
handleSyncRecordRecordToSaveForRecordID:
handleTransitionToNewMergeableValueRecordValueKey
handleZoneReset:
handleZoneVersionDidFetchRecord:
handleZoneVersionRecordToSaveForRecordID:
hasAnotherRow
hasDateFormatter
hasOpenResultSets
hasPrefix:
hash
highestDeletedLocationForSiteIdentifier:inStream:
highestDeletedLocationsForStream:
highestLocationWithBufferedAtomsOlderThan:forSiteIdentifier:inStream:
identifier
identifierForPublicStreamNamed:UUID:
identifierForRestrictedStreamNamed:
identifierForRestrictedStreamNamed:UUID:
identifierFromDescriptor:
identifierFromDescriptor:UUID:
idsDeviceIdentifier
inDatabase:
inDeferredTransaction:
inExclusiveTransaction:
inFlightToDevices
inImmediateTransaction:
inSavePoint:
inTransaction
inTransaction:
inUse
indexSetWithIndex:
indexSetWithIndexesInRange:
ingestNewChangesForSite:transportType:
ingestNewChangesFromAllSitesInVectorClock:transportType:
init
initForReadingFromData:error:
initFromDictionary:
initRequiringSecureCoding:
initWithArray:
initWithAssignerPolicy:
initWithAsyncOperationBlock:
initWithAtomBatch:error:
initWithCKMergeableValueID:
initWithCKMergeableValueID:streamName:
initWithCapacity:
initWithChunkerPolicy:
initWithCoder:
initWithConfiguration:
initWithContainerID:options:
initWithContainerIdentifier:environment:
initWithCustomFunctionName:
initWithData:
initWithData:encoding:
initWithData:error:
initWithDatabase:
initWithDatabase:activity:
initWithDatabase:dataSource:metadata:
initWithDatabase:transcationBatchSize:
initWithDeviceIdentifier:metadata:protocolVersion:
initWithDictionary:
initWithDistributedSyncManagers:peerStatusTracker:
initWithDistributedSyncMultiStreamManager:database:queue:
initWithDistributedSyncMultiStreamManager:queue:database:
initWithDistributedSyncMultiStreamManager:rapportManager:atomBatchChunkerPolicy:queue:database:
initWithDomain:code:userInfo:
initWithEventData:dataVersion:dataTimestamp:
initWithFMResultSet:
initWithFMResultSet:modifier:
initWithFormat:arguments:
initWithIdentifier:
initWithIdentifier:modifier:
initWithIndex:
initWithLocaleIdentifier:
initWithLocation:state:
initWithLocation:state:primaryKey:
initWithLocation:timestamp:referenceLocation:causalReference:type:bookmark:
initWithLocation:timestamp:referenceLocation:causalReference:type:valueVersion:valueData:
initWithMachServiceName:
initWithMaxBytes:
initWithMaxCount:
initWithMergeableDelta:error:
initWithMergeableValueID:timestamp:type:
initWithName:model:platform:
initWithName:zoneID:
initWithPath:
initWithPath:flags:
initWithPath:flags:vfs:
initWithPath:queue:
initWithProto:
initWithProtoData:
initWithQueue:
initWithQueue:core:
initWithQueue:forSharedUse:
initWithRPCompanionLinkDevice:
initWithRapportSyncEngine:cloudKitSyncEngine:peerStatusTracker:database:queue:
initWithRecordName:zoneID:
initWithRecordType:recordID:
initWithSQLStatements:
initWithSiteIdentifierObject:clockValue:
initWithStoreBasePath:segmentSize:
initWithStream:config:
initWithStream:permission:config:includeTombstones:
initWithStream:segment:iterationStartTime:offset:
initWithStreamCRDT:database:localSiteIdentifier:policy:
initWithStreamCRDT:locationRow:database:queue:maxDeltaSize:sessionContext:
initWithStreamID:config:policy:locationAssignerPolicy:localSiteIdentifier:database:
initWithStreamID:policyDictionary:
initWithStreamName:siteIdentifier:day:
initWithTimeIntervalSinceReferenceDate:
initWithTimestamps:
initWithURL:
initWithURL:flags:
initWithURL:flags:vfs:
initWithUUID:activity:requestBlock:queue:completionHandler:
initWithZoneName:
initWithZoneName:ownerName:
initWithZoneName:recordName:
initWriterWithMergeableValueID:metadata:formatVersion:error:
insertLocationIfNotExists:withState:
intForColumn:
intForColumnIndex:
intForQuery:
intValue
integerValue
interfaceWithProtocol:
internalState
internalStepWithError:
interrupt
invalidate
invalidateClientWithError:
invalidateDirectLinkToDevice:
isAsynchronous
isCancelled
isEnabledForDataclass:
isEqual:
isEqualToDate:
isEqualToReference:
isEqualToSet:
isEqualToString:
isExecuting
isFinished
isKindOfClass:
isManateeAvailable:
isMemberOfClass:
isOpen
isReciprocalRequest
isRecordNewerThanMostRecentDeleteForSiteIdentifier:
isSQLiteThreadSafe
isSiriCloudSyncEnabled
isSubsetOfSet:
keyEnumerator
kvcMagic:
lastCloudKitSyncAttemptDate
lastCloudKitSyncDate
lastError
lastErrorCode
lastErrorMessage
lastExtendedErrorCode
lastIndex
lastObject
lastRapportSyncAttemptDate
lastRapportSyncDate
lastSyncDateFromAnyDevice
lastSyncDateOfDeviceWithIdentifier:
latestCKAtomRowForSiteIdentifier:inStream:
latestCKAtomRowOfType:forSiteIdentifier:inStream:
latestDistributedTimestampForSiteIdentifier:inStream:
latestTombstoneBookmarkForSiteIdentifier:inStream:
length
linkState
listener:shouldAcceptNewConnection:
loadAdditionalSyncPolicyDictionaries
localDevice
localDeviceIdentifierCreatingIfNecessary
localDeviceUpdated:
localDeviceUpdatingIfNeccesaryWithProtocolVersion:
localDeviceUpdatingIfNecessary
localMergeableValue
localNameForRemoteStream:
localSiteIdentifier
localizedFailureReason
location
locationID
locationRow
locationRowWithLocation:
locationRowWithLocationID:
locationWithStreamName:siteIdentifier:timestamp:
locationsInClockVector:inStream:enumerateWithBlock:
locationsWithState:
logsErrors
longForColumn:
longForColumnIndex:
longForQuery:
longLongIntForColumn:
longLongIntForColumnIndex:
longLongValue
longValue
makeFunctionNamed:arguments:block:
makeFunctionNamed:maximumArguments:withBlock:
markAsDeliveredToDevice:withError:
markAsInFlightToDevice:
markCKRecordsAtOrBeforeLocationToBeDeletedOnSync:
maxAge
maxBusyRetryTimeInterval
maxDeltaSize
maximumNumberOfDatabasesToCreate
mergeAtomBatch:deletedLocations:sessionContext:
mergeAtomBatch:sessionContext:
mergeAtomBatches:deletedLocations:sessionContext:
mergeAtomBatches:sessionContext:forLocation:
mergeDeltas:error:
mergeIntoMergeable:error:
mergeRecordValue:error:
mergeableDeltasForMetadata:error:
mergeableRecordValueKey
mergeableValueID
messageID
metadata
methodForSelector:
metricsCollector
migration_Schema20ToSchema21
migration_StarSkySchema11ToSydRoSchema12
minimumTimeBetweenSyncsAttemptsForTransport:
minimumTimeBetweenSyncsForTransport:
minusSet:
model
modifier
modifyPendingChangesWithCompletionHandler:
moreComing
multiStreamRangeClockVectorFromIndexClockVectors:
multiStreamTimestampClockVectorToVectorClock:
multiStreamVectorClockToTimestampVectorClock:
mutableCopy
name
newEnumeratorFromBookmark:options:
newEnumeratorFromBookmark:reader:
newEnumeratorFromStartTime:options:
newHighestDeletedLocationRecordIDFor:stream:
newRestrictedStreamDefaultConfiguration
newTombstoneEnumeratorFromBookmark:
newTombstoneEnumeratorFromBookmark:reader:
newTombstoneEnumeratorFromStartTime:
newZoneVersionRecordIDForZone:
next
nextEvent
nextObject
nextTombstoneEvent
nextWithError:
null
numberWithDouble:
numberWithFloat:
numberWithInt:
numberWithInteger:
numberWithLongLong:
numberWithShort:
numberWithUnsignedChar:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedLong:
numberWithUnsignedLongLong:
numberWithUnsignedShort:
objCType
objectAtIndex:
objectAtIndexedSubscript:
objectEnumerator
objectForColumn:
objectForColumnIndex:
objectForColumnName:
objectForKey:
objectForKeyedSubscript:
objectsPassingTest:
offset
open
openFlags
openWithFlags:
openWithFlags:vfs:
originatingSiteIdentifier
osBuildVersion
parentDB
path
pathForStreamIdentifier:streamType:
peer
peerInformationWithReply:
peerStatusTracker
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
platform
pointerValue
policy
policyForStreamID:
policyForStreamID:forPlatform:
popFirstObject
populateAtomBatch:withAtomsInClockVector:forLocation:ckFormatVersion:valueVersion:chunker:
prepare:
previousLocationRowBeforeLocationRow:
primaryKey
privateCloudDatabase
processWithXPCConnection:
proto
proximity
proxyAtIndex:
pruningPolicy
pushDatabaseBackInPool:
query
queue
raise
rangeTimestampClockVectorFromIndexClockVector:
rapportIdentifier
rapportManager:didDiscoverBMRapportDevice:
rapportManager:didLoseNearbyBMRapportDevice:
rapportManager:isDeviceSupported:
rapportManager:localDeviceUpdated:
rapportManagerDiscoveryTimedOut:
rapportSyncEngine
rapportSyncWithReply:
readFrom:
readerForSiteIdentifier:
reciprocalCompletionBlock
recordAtomMergeResult:inStream:ownerSite:originatingSite:eventCreatedAt:sessionContext:
recordAtomMergeResult:inStream:sessionID:messageID:ownerSite:originatingSite:eventCreatedAt:
recordFromSystemFieldsData:
recordID
recordIDsToDelete
recordMessageToDeviceIdentifier:reachable:bytes:isReciprocal:sessionContext:
recordMessageToDeviceIdentifier:sessionID:messageID:reachable:bytes:isReciprocal:
recordName
recordNameFromSite:day:
recordSessionEnd:lastSyncDate:
recordSessionEnd:timeSincePreviousSync:
recordSessionStart:transport:reason:isReciprocal:
recordType
recordZoneIDsToDeleteForSyncEngine:
recoveryState
reference
referenceLocation
references
registerEventID:eventHandler:
registerEventID:options:handler:
registerForSigterm
registerRequestID:options:handler:
registerRequestID:requestHandler:
registerRequests
registeredEventClass
registeredRequests
rekey:
rekeyWithData:
releaseAllDatabases
remoteStreamName
removeAllDeletedLocationsBeforeHighestDeletedLocation:
removeAllObjects
removeItemAtPath:error:
removeLastObject
removeObject:
removeObjectForKey:
requestBlock
requestQueue
requestTimeout
requestTimeoutDidFire
requestTimeoutHandler
resaveRecord:
resaveRecordOnError:
reset
resetCKRecordsMetaDataAndSetToSyncForZone:
resetMetadataForRecord:zoneName:
respondsToSelector:
resultData:context:
resultDict
resultDictionary
resultDouble:context:
resultError:context:
resultErrorCode:context:
resultErrorNoMemoryInContext:
resultErrorTooBigInContext:
resultInt:context:
resultLong:context:
resultNullInContext:
resultSetDidClose:
resultSetWithStatement:usingParentDatabase:shouldAutoClose:
resultString:context:
resume
retain
retainCount
rollback
rollbackToSavePointWithName:error:
runRequest:onDevice:
runRequestOnDevice:
saveCKMergeableRecordValueRecordName:zoneName:mergeableRecordValueData:
saveCKRecordHighestDeletedLocationRow:recordName:zoneName:recordExists:
saveCKRecordLocalMergeableValue:recordName:zoneName:locationRow:
saveCKRecordServerMergeableValue:recordName:zoneName:locationRow:
saveCKSyncEngineMetaData:
saveLatestTombstoneBookmark:forSiteIdentifier:inStream:
saveSystemFieldsDataForRecord:syncToCloudKit:recordType:crdtDeleted:
segmentName
segmentSize
self
sendCKRecordCRDTLog:
sendEvent:event:toDevice:completionHandler:
sendEvent:payload:
sendEventID:event:options:completion:
sendFetchAtomBatchesRequest:toDevice:forRequest:
sendNextRequestToDevice:
sendRequest:request:device:options:responseHandler:
sendRequest:request:toDevice:responseHandler:
sendRequestID:request:options:responseHandler:
sendSyncDatabaseSummaryWithDatabase:
sendSyncSessionLog:
serialize
serialize:
serializeProto
serviceTypes
sessionContext
sessionID
setActivity:
setApplicationID:
setAtomBatchBytes:
setAtomBatchVersion:
setAtomBehavior:
setAtomType:
setAutomaticSyncingEnabled:
setBatchSequenceNumber:
setBatchSize:
setBmDeviceIdentifier:
setBusyRetryTimeout:
setCachedStatement:forQuery:
setCachedStatements:
setCheckedOut:
setCkSyncEngine:
setClient:
setClock:
setCloudKitSyncEngine:
setCompletionHandler:
setConfiguration:
setContainer:
setControlFlags:
setCorruptionHandler:
setCrashOnErrors:
setDataSource:
setDatabase:
setDateFormat:
setDateOfLastVacuum:
setDelegate:
setDeletedLocations:
setDeliveredToDevices:
setDestinationDevice:
setDevice:
setDeviceChangedHandler:
setDeviceFoundHandler:
setDeviceLostHandler:
setDispatchQueue:
setDistributedSyncMultiStreamManager:
setErrorFromDevice:
setExportedInterface:
setExportedObject:
setFetchChangesForMergeableValues:
setIdentifier:
setInFlightToDevices:
setInUse:
setInterruptionHandler:
setInvalidationHandler:
setIsOpen:
setIsReciprocalRequest:
setLastCloudKitSyncDate:
setLastRapportSyncAttemptDate:
setLastRapportSyncDate:
setLastSyncDate:forDeviceWithIdentifier:
setLinkState:
setLocalDeviceIdentifier:
setLocalDeviceUpdatedHandler:
setLocale:
setLogsErrors:
setMaxBusyRetryTimeInterval:
setMaxDeltaSize:
setMaximumNumberOfDatabasesToCreate:
setMergeableRecordValueKey:
setMessageID:
setMetricsCollector:
setModifier:
setMoreComing:
setNeedsToFetchChanges
setObject:forKey:
setObject:forKeyedSubscript:
setOriginatingSiteIdentifier:
setParentDB:
setPath:
setPeer:
setProtocolVersion:
setQuery:
setQueue:
setRapportSyncEngine:
setReciprocalCompletionBlock:
setRegisteredRequests:
setRemoteObjectInterface:
setRemoteStreamName:
setRequestBlock:
setRequestQueue:
setRequestTimeout:
setRequestTimeoutHandler:
setSessionContext:
setSessionID:
setShouldAutoClose:
setShouldCacheStatements:
setShouldCacheStatementsWithoutClearingExistingStatements:
setSiteIdentifier:
setState:
setState:errorFormat:
setStatement:
setStoreLocationOption:
setSyncScheduler:
setTimeZone:
setTraceExecution:
setType:
setUnderlyingQueue:
setUnordered:
setUseCount:
setUuid:
setValue:
setValue:forKey:
setValue:forMetadataKey:
setVectorClockTo:forStreamIdentifier:
setVersion:
setVfsName:
setWalltime:
setWithArray:
sharedInstance
shortValue
shortenedRapportIdentifier
shouldCacheStatements
siteIdentifier
siteIdentifierObject
siteSuffix
size:error:
sizeOfSerializedStateVectorInBytes:
sizeOfTableInKilobytes:
splitWithMaximumSize:error:
sqlStatements
sqliteHandle
sqliteLibVersion
sqlitePath
standardUserDefaults
start
startClient
startRequestTimeout
startSavePointWithName:error:
startServer
startWithCompletionBlock:
state
stateVector
stateVectorForLocationRow:
statement
statusFlags
step
stepWithError:
stop
stopRequestTimeout
storeConfigurationForStream:
storeableDateFormat:
streamCRDT
streamDescriptorSupportsCloudKitSync:
streamForStreamIdentifier:
streamID
streamIdentifier
streamName
streamNameToStreamDescriptorDict
streamSupportsCloudKitSync:
streamSyncName
stringByAppendingString:
stringByDeletingLastPathComponent
stringByDeletingPathExtension
stringByReplacingOccurrencesOfString:withString:
stringForColumn:
stringForColumnIndex:
stringWithCapacity:
stringWithFormat:
stringWithUTF8String:
substringFromIndex:
substringToIndex:
substringWithRange:
superclass
supportsSecureCoding
supportsSyncingWithPlatform:overTransport:inDirection:
supportsTransport:direction:
syncAllTransportsNowIfPolicyAllowsWithReason:activity:
syncCloudKitNowIfPolicyAllowsWithReason:activity:completionHandler:
syncDirectory
syncEngine:accountChangedFromUserRecordID:toUserRecordID:
syncEngine:didCompleteModifyRecordsBatch:error:
syncEngine:didDeleteRecordWithID:
syncEngine:didDeleteRecordZoneWithID:
syncEngine:didEndFetchingChangesForZoneID:
syncEngine:didFetchRecord:
syncEngine:didSaveRecord:
syncEngine:didSaveRecordZone:
syncEngine:didUpdateMetadata:
syncEngine:failedToDeleteRecordWithID:error:
syncEngine:failedToDeleteRecordZoneWithID:error:
syncEngine:failedToFetchChangesForRecordZoneID:error:
syncEngine:failedToSaveRecord:error:
syncEngine:failedToSaveRecordZone:error:
syncEngine:nextBatchOfRecordsToModifyForZoneIDs:
syncEngine:recordToSaveForRecordID:
syncEngine:recordWithIDWasDeleted:recordType:
syncEngine:relatedApplicationBundleIdentifiersForZoneIDs:recordIDs:
syncEngine:shouldFetchAssetContentsForZoneID:
syncEngine:shouldFetchChangesForZoneID:
syncEngine:willBeginFetchingChangesForZoneIDs:
syncEngine:zoneWithIDChanged:
syncEngine:zoneWithIDWasDeleted:
syncEngine:zoneWithIDWasDeletedDueToUserEncryptedDataReset:
syncEngineDidBeginFetchingChanges:
syncEngineDidEndFetchingChanges:
syncEngineDidEndModifyingPendingChanges:
syncEngineWillBeginFetchingChanges:
syncEngineWillBeginModifyingPendingChanges:
syncNowIfPolicyAllowsWithReason:transportType:activity:
syncNowWithReason:activity:completionHandler:
syncRapportNowIfPolicyAllowsWithReason:activity:completionHandler:
syncScheduler
syncSessionDidEnd
syncSessionDidStartWithReason:
syncableStreamIDs
syncableStreamIDsForPlatform:
tableExists:
timeIntervalSince1970
timeIntervalSinceDate:
timeIntervalSinceNow
timeIntervalSinceReferenceDate
timeZoneForSecondsFromGMT:
timestamp
timestampClockVectorForStreamIdentifier:
timestampClockVectorForStreamName:
timestampClockVectorToTimeStampVector:
timestampCount
timestampCountForSiteIdentifier:
timestampCountForStateVector:
timestampVectorToTimeStampClockVector:
timestamps
traceExecution
triggerCloudKitSyncWithReply:
triggerRapportSyncWithReply:
triple
truncateDateToDay:
type
unarchivedObjectOfClass:fromData:error:
unarchivedObjectOfClasses:fromData:error:
unionSet:
unordered
unseenPeers
unsignedCharValue
unsignedIntValue
unsignedIntegerValue
unsignedLongLongIntForColumn:
unsignedLongLongIntForColumnIndex:
unsignedLongLongValue
unsignedLongValue
unsignedShortValue
update:withErrorAndBindings:
updateAllCKRecordsAtOrBeforeLocationToBeDeletedOnSync:
updateAllLocationsAtOrBefore:state:
updateCKAtomRow:inStream:
updateClockVectorByUnionWithUnseenSiteIdentifiers:
updateLocationState:forLocation:
uploadChangesWithError:
upsertCKRecordWithLocation:inStream:
upsertSyncDevicePeer:
upsertSyncDevicePeer:isMe:
useCount
userInfo
userVersion
uuid
vacuumWithShouldContinueBlock:
validateSQL:error:
value
valueData
valueData:
valueDouble:
valueForKey:
valueForMetadataKey:
valueInt:
valueLong:
valueString:
valueType:
valueVersion
valueWithNonretainedObject:
vectorClock
walSizeInKilobytes
walltime
warnInUse
willChangeValueForKey:
writeAtomValue:fromAtomRow:usingWriter:outBookmark:
writeEventBodyClass:
writeTo:
zone
zoneID
zoneName
zoneUUID
BiomeSync
v8@?0
<%@: location=%@, state=%lu>
location_
ref_location_
%@%@
stream
site
state
CRDTLocation
stream = ?
 AND site = ?
 AND day = ?
id = ?
 AND day <= ?
 AND state = ?
 AND day < ?
 AND NOT EXISTS (SELECT * FROM CKAtom WHERE location_id = id)
 AND NOT EXISTS (SELECT location_id FROM CKRecord WHERE location_id = id)
day DESC
state = ?
day = (select max(day) from CRDTLocation i where i.stream = ? and i.site=CRDTLocation.site
 and state = ?)
 AND stream = ?
 AND state = ? 
count(*)
no session ID
device_identifier
name
model
platform
protocol_version
DevicePeer
me IS ?
device_identifier = ?
max(last_sync_date)
last_sync_date
deviceIdentifier
deviceMetadata
protocolVersion
BMRapportRequest
v16@?0@"BMRapportDevice"8
com.apple.biomesyncd.fetchAtomBatches
v32@?0@"NSDictionary"8@"NSDictionary"16@"NSError"24
senderModelID
Unable to determine sender model info
Unknown platform
v24@?0@"NSArray"8@"NSArray"16
v32@?0@"NSDictionary"8@"NSDictionary"16@?<v@?@"NSDictionary"@"NSDictionary"@"NSError">24
relative_pos
state_vector_sites_cnt
state_vector_size_est
state_vector_timestamp_cnt
stream_name
v48@?0@"CKDistributedSiteIdentifier"8{_NSRange=QQ}16C32C36^B40
com.apple.biome.syncSessionLog
com.apple.biome.syncdatabase
com.apple.biome.ckrecordcrdt
database_size
wal_size
num_rows_CKAtom
CKAtom
table_size_CKAtom
num_rows_CKRecord
CKRecord
table_size_CKRecord
num_rows_CRDTLocation
time_since_vacuum
table_size_CRDTLocation
com.apple.biomesyncd
com.apple.biomesyncd.metrics-collection
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.biomesyncd.database-maintenance
B8@?0
com.apple.biomesyncd.periodic-sync
com.apple.notifyd.matching
Notification
com.apple.rapport.CompanionLinkDeviceAdded
com.apple.rapport.matching
replyRequired
context_sync
void *BiomeLibraryLibrary(void)
biomesyncd.m
vectorClock
BMStreamCKCRDT.m
Invalid parameter not satisfying: %@
streamID
config
database
v24@?0@"CKAtomReferenceMutableProxy"8Q16
v24@?0@"CKAtomMutableProxy"8Q16
v16@?0^B8
v24@?0@"BMSyncCKAtomRow"8^B16
v24@?0@"BMSyncCRDTLocationRow"8^B16
v32@?0@"BMSyncCRDTLocationRow"8Q16^B24
v32@?0@"CKAtomProxy"8Q16^B24
BMFrameStatePreWrite
BMFrameStateWritten
BMFrameStatePreDelete
BMFrameStateDeleted
BMFrameStateEOF
BMFrameStateUnknown
BMFrameStateUnknown(%lu)
%@ %@
type
value
Append
TTLDelete
RandomDelete
Modify
Unknown
(unknown: %i)
zone_name
zone_uuid
recovery_state
attempted_recovery_date
CKZone
zone_name = ?
UUID not set
com.apple.biomesyncd.rapport
v16@?0@"RPCompanionLinkDevice"8
v20@?0@"RPCompanionLinkDevice"8I16
v16@?0@"NSError"8
v12@?0B8
~~REQUEST_ID~~
~~RESPONSE_HANDLER~~
~~OPTIONS~~
failed with error, 
completed
BMRapportDevice[%@]: id=%@ bmID=%@ model=%@ name=%@
device
Immed
Near
peer
walltime
batchSize
batchSequenceNumber
isReciprocalRequest
atomBatchVersion
unseenPeers
atomBatches
moreComing
deletedLocations
biomesyncdStrings
AdditionalSyncPolicies
eventClass
restricted/feedbackSocialHighlights
BMSocialHighlightFeedbackEvent
public/DeviceMetadata
BMDeviceMetadataEvent
restricted/SiriMemoryReferenceResolutionStream
BMSiriMemoryReferenceResolutionEvent
public/AppLaunch
BMAppLaunchEvent
public/NowPlaying
BMNowPlayingEvent
5015B088-E292-411F-9AEB-40E2B4BF3931
overrideInternalPolicy
rapport
direction
outbound
cloudkit
none
BMSyncPolicy.m
Unexpected direction %lu
NSString *NSStringFromBMSyncTransportType(BMSyncTransportType)
No mapping found for BMSyncTransportType(%lu)
inbound
BMSyncDirection BMSyncDirectionFromNSString(NSString *__strong)
No mapping found for %@
BMSyncCKAtomRow.m
location
timestamp
<%@: type=%@, location=%@, atomID=%@, refID=%@ bookmarkOffset=%lu>
clock
segment_name
segment_offset
ref_type
ref_site
ref_clock
value_version
value_data
location_id
on_disk
ref_location_id
CKAtom.site = ?
 AND CKAtom.stream = ?
 AND clock = ?
 AND on_disk IS ?
clock DESC
max(clock)
v24@?0@"_bmFMResultSet"8^B16
location_id = ?
clock ASC
type = ?
 AND CKAtom.site = ?
 AND segment_name IS NOT ?
clock = ?
 AND type = ?
 AND segment_name = ?
 AND segment_offset = ?
site = ?
DISTINCT site
(ref_site = ?
 OR (ref_site IS NULL AND CKAtom.site = ?))
ref_clock ASC
type ASC
location.stream = ?
 AND location.site = ?
 AND location.day <= ?
ref_clock DESC
location_id IN (SELECT id from CRDTLocation where stream = ?
 AND day <= ?)
 AND clock != ?
 AND clock != (SELECT MAX(clock) FROM CKAtom WHERE stream = ?
 AND site = ?)
CKAtom.stream = ? 
 AND ((CKAtom.site = ? 
) OR (CKAtom.site = ? 
AND clock = ? 
OR clock = ? 
AND clock >= ? 
OR clock >= ? 
AND clock BETWEEN ? 
OR clock BETWEEN ? 
 AND ?
v32@?0{_NSRange=QQ}8^B24
)) AND on_disk IS ?
location.stream as location_stream
location.site as location_site
location.day as location_day
location.state as location_state
 LEFT JOIN CRDTLocation location ON location_id=location.id
location_id, location.stream, location.site, location.day, location.state
location.stream
location.site
location.day ASC
 AND CKAtom.location_id = ? 
CKAtom.stream = ?
COUNT ((CAST(segment_name AS INT) > ?
 OR segment_name = ?
 AND segment_offset > ?) OR NULL) == 0
location.day DESC
 AND on_disk IS NOT ?
CKAtom.*
ref_location.stream as ref_location_stream
ref_location.site as ref_location_site
ref_location.day as ref_location_day
ref_location.state as ref_location_state
 LEFT JOIN CRDTLocation ref_location ON ref_location_id=ref_location.id
com.apple.biomesyncd.sync
com.apple.private.biome.sync
com.apple.internal.biome.sync
-[BMSyncServiceServer triggerRapportSyncWithReply:]
-[BMSyncServiceServer rapportSyncWithError:]
-[BMSyncServiceServer triggerCloudKitSyncWithReply:]
-[BMSyncServiceServer cloudKitSyncWithError:]
isMe
platformDescription
BMRapportErrorDomain
SELECT %@ FROM %@
 WHERE 
 GROUP BY %@
 ORDER BY %@
 LIMIT %@
 HAVING 
UPDATE OR FAIL %@ SET 
 = ?, 
 = ?
INSERT INTO %@
) VALUES (
DELETE FROM %@
%@:%lu
com.apple.biome.sync.ckMetaData
LastSyncAttemptDate
LastSyncDate
LastCloudKitAttemptDate
LastCloudKitSyncDate
MergeableRecordValueKey
CKMergeableRecordValue
record_name
server_mergeable_value
stream_name = ?
 AND record_name = ?
TombstoneBookmark
AND site = ?
BMSyncAtomType(%llu)
BiomeStream
atomType
atomValue
data
dataVersion
dataTimestamp
zoneVersion
crdtDeleted
biomeCRDT
streamCRDT
zoneVersionUUID
com.apple.biome.sync
unknown
syncRecord
highestDeletedLocation
(unknown: %lu)
v16@?0@?<v@?>8
Sync to iCloud for Siri disabled, no sync via iCloud performed
v24@?0@"CKAccountInfo"8@"NSError"16
v24@?0@"NSData"8^B16
v24@?0@"BMSyncCKRecord"8^B16
v24@?0@"BMSyncCKZone"8^B16
v16@?0@"CKAtomBatch"8
NowPlaying
BMDistributedSyncMultiStreamManager.m
direction == BMSyncDirectionOutbound
stream_identifier
local_mergeable_value
sync_to_cloud_kit = ?
 AND deleting = ?
 AND record_type = ?
 AND stream_identifier = ?
record_metadata
sync_to_cloud_kit
deleted_crdt
record_name = ?
record_type
stream_identifier = ?
deleting
record_type = ?
 AND location_id IN (     SELECT id FROM CRDTLocation WHERE site = ?
     AND stream = ?
     AND day <= ?)
 LEFT JOIN CRDTLocation location ON location_id=location.id 
deleting = ?
 AND EXISTS (SELECT record_name FROM CKMergeableRecordValue WHERE CKMergeableRecordValue.stream_name=CKRecord.stream_identifier AND CKMergeableRecordValue.record_name=CKRecord.record_name AND server_mergeable_value IS NOT NULL)
v24@?0@"CKRecordID"8^B16
location_id =?
location_id IN (SELECT id FROM CRDTLocation WHERE site = ?
 AND stream = ?)
 AND deleted_crdt = ?
BMSyncStreamID.m
streamName.length
stream != BMPublicStreamUnknown
public/
restricted/
public/%@
restricted/%@
identifier
isExecuting
isFinished
never
com.apple.biome.syncNow
[BMCloudKitSyncEngine start] failed: %@
BMSyncScheduler
v20@?0B8@"NSError"12
eventData
migration_StarSkySchema11ToSydRoSchema12
ALTER TABLE CKRecord DROP COLUMN mergeable_value_delta
ALTER TABLE CKRecord ADD COLUMN server_mergeable_value BLOB
ALTER TABLE CKRecord ADD COLUMN local_mergeable_value BLOB
ALTER TABLE CKAtom ADD COLUMN value_version INTEGER
UPDATE CKAtom SET value_version = 0
CREATE INDEX IF NOT EXISTS idx_syncmessagelog_session_id ON SyncMessageLog(session_id)
CREATE INDEX IF NOT EXISTS idx_atommergedlog_owning_site_identifier ON AtomMergedLog(owning_site_identifier)
CREATE INDEX IF NOT EXISTS idx_atommergedlog_session_id ON AtomMergedLog(session_id)
CREATE TABLE CKZone(zone_name STRING NOT NULL, zone_uuid STRING NOT NULL, recovery_state INTEGER, attempted_recovery_date INTEGER)
migration_Schema20ToSchema21
ALTER TABLE CKRecord ADD COLUMN record_type INTEGER
UPDATE CKRecord SET record_type = 1
ALTER TABLE SyncSessionLog ADD COLUMN time_since_previous_sync INTEGER
UPDATE SyncSessionLog SET time_since_previous_sync = -1
ALTER TABLE CKRecord ADD COLUMN deleted_crdt BOOL
UPDATE CKRecord SET deleted_crdt = 0
sync.db
-wal
BMSyncDatabase.m
path
recursion max
failed to create path: %@
PRAGMA journal_mode = WAL;PRAGMA foreign_keys = ON;
Metadata
version too new
com.apple.Biome
internal build version < 17
internal build version between 17 and 19
custom migration to version %u failed with error %@
migration to version %u failed with error %@
failed to delete corrupt database file: %@
unhandled state %llu
SELECT value FROM Metadata WHERE key=?
INSERT INTO Metadata VALUES (?, ?)
PRAGMA foreign_keys=OFF
idx_crdt_location
idx_crdt_location_state
SELECT type, name FROM sqlite_schema WHERE tbl_name = 'CRDTLocation'
table
CREATE TABLE new_CRDTLocation (id INTEGER primary key, stream STRING NOT NULL, site STRING NOT NULL, day INTEGER NOT NULL, state INTEGER NOT NULL)
INSERT INTO new_CRDTLocation SELECT * FROM CRDTLocation
DROP TABLE CRDTLocation
ALTER TABLE new_CRDTLocation RENAME TO CRDTLocation
CREATE INDEX IF NOT EXISTS idx_crdt_location ON CRDTLocation(stream, site, day)
CREATE INDEX IF NOT EXISTS idx_crdt_location_state ON CRDTLocation(stream, site, state, day DESC)
CREATE TABLE IF NOT EXISTS CKRecord (location_id INTEGER, sync_to_cloud_kit BOOL, record_metadata BLOB, record_name STRING, stream_identifier STRING, mergeable_value_delta BLOB, deleting BOOL, FOREIGN KEY (location_id) REFERENCES CRDTLocation(id));
CREATE INDEX IF NOT EXISTS idx_ckrecord ON CKRecord(record_name)
PRAGMA foreign_key_check
PRAGMA foreign_keys=ON
CREATE TABLE new_CKRecord (location_id INTEGER, sync_to_cloud_kit BOOL, record_metadata BLOB, record_name STRING, stream_identifier STRING, local_mergeable_value BLOB, deleting BOOL,  PRIMARY KEY (stream_identifier, record_name), FOREIGN KEY (location_id) REFERENCES CRDTLocation(id));
INSERT INTO new_CKRecord SELECT location_id, sync_to_cloud_kit, record_metadata, record_name, stream_identifier, local_mergeable_value, deleting FROM CKRecord
DROP TABLE CKRecord
ALTER TABLE new_CKRecord RENAME TO CKRecord
CREATE TABLE IF NOT EXISTS CKMergeableRecordValue (stream_name STRING, record_name STRING, server_mergeable_value BLOB, FOREIGN KEY (stream_name, record_name) REFERENCES CKRecord(stream_identifier, record_name))
select transport as transport_type, session_duration.session_id, time_since_previous_sync, duration, reachable_peers_cnt, is_reciprocal, reason as sync_reason, cast((select count(*) from DevicePeer) as text) as known_peers_cnt_str, cast(reachable_peers_cnt as real) / (select count(*) from DevicePeer) as peer_availabilty_pct, avg_sync_latency, atoms_dropped_cnt, atoms_causality_violation_cnt, atoms_received_cnt, atoms_relayed_cnt, relay_earliness, relay_unseen_peer_atom_cnt, atom_batch_bytes from ( select transport, session_id, is_reciprocal, reason, (end_timestamp - start_timestamp) as duration, time_since_previous_sync from SyncSessionLog group by session_id, is_reciprocal, reason ) as session_duration left join ( select session_id, count(distinct device_identifier) as reachable_peers_cnt from SyncMessageLog group by session_id ) as reachable_peers on session_duration.session_id=reachable_peers.session_id left join ( select session_id, avg(case when event_created_at <> 0 then synced_at - event_created_at else null end) as avg_sync_latency from AtomMergedLog group by session_id ) as sync_latency on session_duration.session_id=sync_latency.session_id left join ( select a.session_id, sum(case when a.merge_result=1 THEN 1 else 0 end) as atoms_dropped_cnt, sum(case when a.merge_result=2 THEN 1 else 0 end) as atoms_causality_violation_cnt, sum(case when a.merge_result=3 THEN 1 else 0 end) as atoms_received_cnt from AtomMergedLog as a group by a.session_id ) as merge_results on session_duration.session_id=merge_results.session_id left join ( select session_id, count(*) as atoms_relayed_cnt from AtomMergedLog as a where owning_site_identifier <> relayed_by_site_identifier and not exists ( select * from SyncMessageLog as m where a.session_id=m.session_id and device_identifier=owning_site_identifier and reachable=1 ) group by session_id ) as relay_count on session_duration.session_id=relay_count.session_id left join ( select relayed.session_id, avg(timestamp - synced_at) as relay_earliness from ( select atom.session_id, synced_at, timestamp from AtomMergedLog as atom, SyncMessageLog as message where owning_site_identifier <> relayed_by_site_identifier and not exists ( select * from SyncMessageLog as m where atom.session_id=m.session_id and device_identifier=owning_site_identifier and reachable=1 ) and device_identifier=owning_site_identifier and reachable=1 and timestamp > synced_at order by timestamp asc limit 1 ) as relayed group by relayed.session_id ) as earliness on session_duration.session_id=earliness.session_id left join ( select session_id, count(*) as relay_unseen_peer_atom_cnt from AtomMergedLog as a where owning_site_identifier <> relayed_by_site_identifier and not exists ( select * from SyncMessageLog as m where device_identifier=owning_site_identifier and reachable=1 ) group by session_id ) as atom_relay_unseen_device on session_duration.session_id=atom_relay_unseen_device.session_id left join ( select session_id, sum(atom_batch_bytes) as atom_batch_bytes from SyncMessageLog group by session_id ) as batch_bytes on session_duration.session_id=batch_bytes.session_id;
SyncSessionLog
session_id
transport
reason
is_reciprocal
start_timestamp
end_timestamp
time_since_previous_sync
session_id = ?
SyncMessageLog
message_id
reachable
atom_batch_bytes
AtomMergedLog
owning_site_identifier
relayed_by_site_identifier
merge_result
event_created_at
synced_at
DELETE FROM SyncMessageLog WHERE timestamp <> (SELECT max(timestamp) FROM SyncMessageLog message WHERE device_identifier=message.device_identifier)
DELETE FROM SyncSessionLog
DELETE FROM AtomMergedLog
LastVacuumDate
PRAGMA page_count
PRAGMA freelist_count
PRAGMA auto_vacuum
PRAGMA auto_vacuum = 2
VACUUM
PRAGMA incremental_vacuum(%lu)
SELECT name FROM sqlite_schema WHERE type='table' AND name=?
SELECT COUNT(*) FROM %@
SELECT SUM(pgsize) FROM dbstat WHERE name = ?
(%@, %@, %@)
(%@,%@,%@)
%@,%@
(%@,%@)
-[_bmFMDatabase initWithPath:]
FMDatabase.m
sqlite3_threadsafe()
2.7.7
FMDBVersion is invalid: Please use FMDBUserVersion instead.
:memory:
error opening!: %d
Closing leaked statement
error closing!: %d
%s:%d
-[_bmFMDatabase busyRetryTimeout]
FMDB: busyRetryTimeout no longer works, please use maxBusyRetryTimeInterval
-[_bmFMDatabase setBusyRetryTimeout:]
FMDB: setBusyRetryTimeout does nothing, please use setMaxBusyRetryTimeInterval:
B24@?0@"_bmFMStatement"8^B16
query
API misuse, -[_bmFMDatabase setCachedStatement:forQuery:] query must not be nil
en_US
select name from sqlite_master where type='table'
The _bmFMDatabase %@ is currently in use.
The _bmFMDatabase %@ is not open.
NULL
%@ executeQuery: %@
DB Error: %d "%@"
DB Query: %@
DB Path: %@
%@ = %@
Error: unable to bind (%d, %s
Could not find index for %@
data: %ld bytes
obj: %@
Error: the bind count is not correct for the # of variables (executeQuery)
Error inserting batch: %s
rollback transaction
commit transaction
begin exclusive transaction
begin deferred transaction
begin immediate transaction
savepoint '%@';
release savepoint '%@';
rollback transaction to savepoint '%@';
dbSavePoint%ld
%@ %ld hit(s) for query %@
WARNING: Requested sleep of %i milliseconds, but SQLite returned %i. Maybe SQLite wasn't built with HAVE_USLEEP=1?
select [sql] from sqlite_master where [type] = 'table' and lower(name) = ?
SELECT type, name, tbl_name, rootpage, sql FROM (SELECT * FROM sqlite_master UNION ALL SELECT * FROM sqlite_temp_master) WHERE type != 'meta' AND name NOT LIKE 'sqlite_%' ORDER BY tbl_name, type DESC, name
pragma table_info('%@')
pragma application_id
pragma application_id=%d
pragma user_version
pragma user_version = %d
FMResultSet.m
![statement inUse]
Warning: There seem to be no columns in this set.
%s:%d Database busy (%@)
-[_bmFMResultSet internalStepWithError:]
Database busy
Error calling sqlite3_step (%d: %s) rs
parentDB does not exist
_bmFMDatabase
Unknown error calling sqlite3_step (%d: %s) rs
Warning: I could not find the column named '%@'.
Database already in pool
The _bmFMDatabase being put back into the pool is already present in the pool
Maximum number of databases (%ld) has already been reached!
Could not open up the database at path %@
Could not create database queue for path %@
fmdb.%@
_bmFMDatabaseQueue could not reopen database for path %@
-[_bmFMDatabaseQueue inDatabase:]
FMDatabaseQueue.m
currentSyncQueue != self && "inDatabase: was called reentrantly on the same queue, which would lead to a deadlock"
Warning: there is at least one open result set around after performing [_bmFMDatabaseQueue inDatabase:]
savePoint%ld
locationRow is nil, returning empty state vector
mergeDeltas delta: %@
Failed to initWithMergeableDelta with error %@
BMStreamCKRecordCRDT: unable to init a CKAtomBatch with initWriterWithMergeableValueID:%@ error:%@
BMStreamCKRecordCRDT: unable to complete a CKAtomBatch with finishWritingWithError:%@ error:%@
BMStreamCKRecordCRDT: failed to split atom batch with error %@
BMStreamCKRecordCRDT: failed to calculate batch size with error %@
BMStreamCKRecordCRDT: split into batch of size %@
BMStreamCKRecordCRDT: unable to init a CKMergeableDelta with initWithAtomBatch:%@ error:%@
*** deltas: %@
unexpected modifier %lu
updateLocationState: %lu forLocation:%@
updateAllLocationsAtOrBefore:%@ to state %lu
BMMultiStreamVectorClockConverter found nil modifier on siteIdentifier: %@
Expected only one value in indexSet of timestampClockVector, found %lu
sessionContext is nil
BMRapportSyncEngine%@: completing request, still inflight: %@
BMRapportSyncEngine%@: completeRequest:deliveredToDevices %@ withErrors:%@
BMRapportSyncEngine%@: request %@ already finished running
BMRapportSyncEngine%@: sending request to device: %@
BMRapportSyncEngine%@: request timed out because no devices are nearby
BMRapportSyncEngine%@: current watch disallowed from syncing with non-paired device: %@
BMRapportSyncEngine%@: current platform disallowed from syncing with non-paired watch: %@
BMRapportSyncEngine%@: syncing with device platform disallowed for device: %@
BMRapportSyncEngine%@: received request %@ %@
BMRapportSyncEngine%@: unable to determine sender model info: %@
BMRapportSyncEngine%@: unable to determine platform for model %{public}@
BMRapportSyncEngine%@: replying with CKXUncompressedFormatVersion atom batch
BMRapportSyncEngine%@: mismatched protocol version %lu, expected %d
BMRapportSyncEngine%@: should issue reciprocal request, %@
BMRapportSyncEngine%@: fetch completion handler is reciprocal, YES, deviceIdentifiers, %@, errors, %@
BMRapportSyncEngine%@: handleFetchAtomBatchesResponse %@ error %@ fromDevice: %@
BMRapportSyncEngine%@: fetchAtomBatchesResponseHandler received response %@
BMRapportSyncEngine%@: asked to defer activity, won't issue more requests to device %@ even though more data is available
BMRapportSyncEngine%@: max request depth %lu hit, finishing request to device %@
BMRapportSyncEngine%@: sending request to device %@ with sequence number %lu
BMRapportSyncEngine%@: no more data coming from device %@ finishing request
BiomeSync is disabled on simulators, -[BMSyncCore start] returning NO
%@ - has validStreamNames: %@
%@ - locationRow with day: %@ has relativePosition: %@
%@ - generated crdtLog: %@
%@ could not archive state vector: %@
biomesyncd launched
biomesyncd last exit status: %lld
Tried to defer activity %s, but failed
biome activity fired "com.apple.biomesyncd.metrics-collection"
Database unavailable for activity "com.apple.biomesyncd.metrics-collection"
biome running activity "com.apple.biomesyncd.metrics-collection"
biome activity fired "com.apple.biomesyncd.database-maintenance"
database unavailable for activity "com.apple.biomesyncd.database-maintenance"
biome running activity "com.apple.biomesyncd.database-maintenance"
Received unexpected object on com.apple.notifyd.matching: %@
Received com.apple.notifyd.matching: %s
Handling com.apple.notifyd.matching: %s
Database unavailable to handle "com.apple.rapport.CompanionLinkDeviceAdded"
Received unexpected object on com.apple.rapport.matching: %@
Received com.apple.rapport.matching: %s
Handling com.apple.rapport.matching: %s
Database unavailable to handle RapportWake
Received SIGTERM
failed to set user dir suffix: %{darwin.errno}d
failed to initialize temporary directory: %{darwin.errno}d
failed to resolve temporary directory: %{darwin.errno}d
biome activity fired "%s"
Database unavailable for activity "%s"
biome running activity "%s"
Starting tombstone enumerator from 0 for stream %@ site %@
Starting tombstone enumerator from segment %@ offset %lu for stream %@ site %@
delete must reference a corresponding append
Expected no-data frame to be delete or pre-delete, but frame was %{public}@
appendRecord %@ is of unexpected type %lu
bookmark is nil, presumably because the referenced atom was a dummy append (dead on arrival) %@
deleting event at bookmark %@
dropping atom %@ as it is dead on arrival
writeAtomValue: %@
adding %@ to atomBatch
ingestChangesForSite: %@
observed new data from non-local site %@
read new appended BMStoreEvent: %@ at offset %lu
failed to insert record %@
read new deleted BMStoreEvent: %@ at offset %lu
failed to batch ingest changes
read BMStoreEvent tombstone: %@ at tombstone bookmark %@
tombstone with unexpected deletion reason %lu
failed to batch ingest deletions
deleteLocationsUpToTTLAtTombstone: %@, siteIdentifier: %@
deletedExpiredBufferedLocationsForSiteIdentifier: %@
failed to delete atoms with location: %@
atomTableRecord %@
%@ location is not active
BMSyncCKAtomRow missing bookmark %@
Next enumerator bookmark %@ doesn't match expected %@
read table BMStoreEvent: %@ at offset %lu
bookmark is DOA, not attempting to resolve event
populateAndEnumerateAtomBatches could not finish writing atomBatch with err: %@
atomsInClockVector: %@, stream: %@
creating new batch with location %@
could not create new batch with location %@
handleDeletedLocation: %@
failed to delete event at bookmark %@
deleted location already handled
location we haven't yet observed is now deleted %@
location is unexpectedly nil, unable to parse from mergeableValueID %@
location is unexpectedly nil
received missing location %@
location is not active %@ skipping merge to not resurrect a dead location
highest deleted location %@ is past incoming location %@
received data for new location %@
mergeAtoms: %lu location %@
dropping atom with timestamp %@ since already merged
atom with timestamp %@ already in table but not on disk
causalReference location is unexpectedly nil
failed to insert referenceLocationRow for location %@
addAtomRow: %@
failed to commit, rolling back
updating row for atom inferred to be applied to disk %@
failed to update row: %@
atom to apply to disk %@
causal reference cache hit
causal reference location %@ points to dead location, not a violation
causal reference violation: missing causal reference %@ reference location %@
unblocked: %@
failed to apply atom to disk
updating row for atom applied to disk %@
BMRapportManager: shared-use only supported internally
BMRapportManager: received SIGTERM
BMRapportManager: could not determine appropriate control flags for device platform: %@
BMRapportManager: createSharedDiscoveryClientIfNotExists not currently supported
BMRapportManager: shared discovery client already exists
BMRapportManager: already activated %@
BMRapportManager: already activating %@
BMRapportManager: activating %@
BMRapportManager: failed to activate with error: %@
BMRapportManager: activated successfully
BMRapportManager: invalidated
BMRapportManager: registerEventID %@
BMRapportManager: stop
sendRequest:request:device:options:responseHandler: passed nil device
BMRapportDevice[%@]: enqueueing request
device %@ requestQueue %@
BMRapportDevice[%@]: activating client
device: %@ linkState %lu
handleActivationForDevice:error: passed nil device
BMRapportDevice[%@]: activation %@%@
BMRapportDevice[%@]: determined to not support service com.apple.biomesyncd.rapport
handleInterruptionForDevice: passed nil device
BMRapportDevice[%@]: interrupted
sendNextRequestToDevice: passed nil device
BMRapportDevice[%@]: expected request id and response handler in %@
BMRapportDevice[%@]: being sent request %@ with options %@
finishedSendingRequestsToDevice: passed nil device
BMRapportDevice[%@]: request queue empty, invalidating client
BMRapportDevice[%@]: advertisement data changed
BMRapportDevice[%@]: pairing flags/attributes changed
BMRapportDevice[%@]: distance changed: %s
BMRapportDevice[%@]: distance wifi information element changed
BMRapportDevice[%@]: name changed: %@
BMRapportDevice[%@]: RSSI changed
BMRapportDevice[%@]: SSID changed
BMRapportDevice[%@]: proximity changed: %s
BMRapportDevice[%@]: distance/angle/something changed
BMRapportDevice[%@]: no transports available; expect a lost callback
BMRapportDevice[%@]: got unexpected change flag: RPDeviceChangeFlags(%x)
BMRapportManager: skipping RPCompanionLinkDevice missing identifier: %@
BMRapportManager: skipping RPCompanionLinkDevice missing model: %@
BMRapportManager: already discovered device, %@ as %@
BMRapportDevice[%@]: ignoring device not listing service com.apple.biomesyncd.rapport
BMRapportDevice[%@]: discovered
BMRapportDevice[%@]: ignoring unsupported device
BMRapportDevice[%@]: lost
BMRapportDevice[%@]: invalidated
failed to unarchive BMMultiStreamVectorClock with error %@
failed to archive BMMultiStreamVectorClock with error %@
failed to unarchive BMMultiStreamAtomBatches with error %@
failed to archive BMMultiStreamAtomBatches with error %@
Failed to insert: %@
stateVector: %@
Failed to update: %@
clock vector is empty %@
triggerRapportSyncWithReply called
rapportSyncWithError called
triggerCloudKitSyncWithReply called
cloudKitSyncWithError called
%@: tried to initialize with a non-BMPBSyncAtomValue proto
%@: tried to initialize a BMPBSyncAtomValue proto, missing type or value
failed to deserialize BMSyncAtomValue with error %@
cannot deserialize atom value of version %lu
failed to serialize BMSyncAtomValue with error %@
cannot serialize atom value with version %lu
%@: tried to initialize with a non-BMPBStoreEventAtomValue proto
%@: tried to initialize a BMPBStoreEventAtomValue proto: missing dataVersion or dataTimestamp
unknown value in BMCloudKitRecordTypeString: %lu
syncNowWithReason
Sync with iCloud for Siri: %d
transitioning records over to new CKMergeableRecordValue with key %{public}@
failed to reset records for stream %{public}@ when transitioning to new CKMergeableRecordValue
ingest events from stream: %{public}@
syncNowWithReason found %lu records to sync and %lu records to delete
syncNowWithReason after removing duplicates, sending CKSyncEngine %lu records to sync and %lu records to delete
after modifying changes, we have %lu records to sync and %lu records to delete as a result of error handling
unable to obtain Manatee accountInfo
CloudKit container is not accessible. Status: %ld
This account is eligible to sync with manatee containers
Manatee is available on the current device
iCloud account doesn't support end-to-end encryption: %ld
account status is CKAccountStatusTemporarilyUnavailable
iCloud account status: %ld
unable to initialize CloudKit container
unable to initialize CloudKit configuration
unable to initialize ckSyncEngine
accountInfoWithCompletionHandler returned error: %@
zoneWithIDChanged: %{public}@
failedToFetchChangesForRecordZoneID: %{public}@
shouldFetchChangesForZoneID: %{public}@ returning: %{public}@
didDeleteRecordWithID: %{public}@ in zone: %{public}@
isRecordNewerThanMostRecentDeleteForSiteIdentifier: Could not create location from CKRecord: %{public}@
Error serverValue is nil for delta %{public}@ %{public}@
Error encoding serverValue for %{public}@ %{public}@, %{public}@
handleSyncRecordDidFetchRecord: Can't build location from record stream:%{public}@ recordName:%{public}@
Error saving [saveCKRecordServerMergeableValue:serverValueData] for %{public}@ %{public}@, %{public}@
didFetchRecord: %{public}@
didFetchRecord: unknown record %{public}@ type: %{public}@
handleDidSaveRecordSyncRecord: serverValue nil for %{public}@ %{public}@
handleDidSaveRecordSyncRecord: unable to find record on db:%{public}@ %{public}@
handleDidSaveRecordSyncRecord: Unable to unarchive localMergeableValue for %{public}@ %{public}@ %{public}@
nil value for localValue for %{public}@ %{public}@
Error [localRecordValue mergeRecordValue:serverValue] for serverValue:%{public}@ record:%{public}@ zone:%{public}@ %{public}@
Error encoding localValue for %{public}@ %{public}@
didSaveRecord: %{public}@ recordType: %{public}@ zone: %{public}@
didSaveRecord: %{public}@ unknown recordType: %{public}@ zone: %{public}@
didSaveRecordZone: %{public}@
failedToDeleteRecordWithID: %{public}@, zone:%{public}@
failedToSaveRecordZone:%{public}@ error:%{public}@
failedToSaveRecordZone: %{public}@ and recoveryState:%{public}d
Add zone and add record request made %{public}@ %{public}@.
Zone ID is nil; record dropped %{public}@
Handling handleFailedToSaveSyncRecordServerRecordChanged: Merging clientCRDT into serverCRDT %{public}@ -> %{public}@
Error handleFailedToSaveSyncRecordServerRecordChanged: [serverCRDT mergeRecordValue:clientCRDT]; error: %{public}@
handleFailedToSaveSyncRecordServerRecordChanged: serverCRDT is nil for record: %{public}@ for error: %{public}@
handleFailedToSaveSyncRecordServerRecordChanged: error archiving serverCRDT error: %{public}@
Manatee identity loss reported: record:%{public}@, zoneID:%{public}@, error:%{public}@
Error not handled: failedToSaveRecord, error: %{public}@
Error not handled: failedToSaveRecord, zoneVersion error: %{public}@
Error not handled: failedToSaveRecord, hightestDeletedLocation error: %{public}@
failedToSaveRecord: %{public}@, %{public}@ %{public}@
Error not handled: failedToSaveRecord, unknown record:%{public}@ zone:%{public}@ type: %{public}@ error: %{public}@
locationID can not be found for recordID %{public}@
expirationTimeInterval is almost expired: %{public}@, not saving recordID: %{public}@ because it will be TTL'd
recordToSaveForRecordID: newRecord? %d
streamCRDT is nil %@
handleSyncRecordRecordToSaveForRecordID: Unable to unarchive localMergeableValue for %{public}@ %{public}@ %{public}@
recordValue %{public}@
Error adding deltas to save for %{public}@ %{public}@ %{public}@
Sync to iCloud for Siri disabled
recordToSaveForRecordID %{public}@
failedToDeleteRecordZoneWithID: %{public}@ error: %{public}@
didDeleteRecordZoneWithID: %{public}@
didDeleteRecordZoneWithID re-creating zone:%{public}@
didDeleteRecordZoneWithID syncing %lu records for zone:%{public}@
didDeleteRecordZoneWithID not re-creating zone:%{public}@, removing all local records in zone
zoneWithIDWasDeleted: %{public}@
streamCRDT is nil %{public}@
recordWithIDWasDeleted: %{public}@, type=%{public}@
recordWithIDWasDeleted received an unknown record type:%{public}@ for record:%{public}@
syncEngineWillBeginFetchingChanges
syncEngineDidEndFetchingChanges
*** recordName:%{public}@
syncEngineDidEndFetchingChanges: Unable to unarchive localMergeableValue for %{public}@ %{public}@ %{public}@
Has a localMergeableValue: %{public}@
Has no localMergeableValue
syncEngineDidEndFetchingChanges: Unable to unarchive mergeableRecordValue for %{public}@ %{public}@ %{public}@
Merging recordValue %{public}@
Merging serverValue %{public}@
Unable to [recordValue mergeRecordValue:serverValue for %{public}@ %{public}@ %{public}@
Were there mergeableRecordValues: %{public}s
syncEngineDidEndFetchingChanges location: %{public}@
syncEngineDidEndFetchingChanges: Can't build location from record stream:%{public}@ recordName:%{public}@
syncEngineDidEndFetchingChanges locationRow: %{public}@
locationRow is unexpectly nil for location %{public}@
Unable to  [recordValue mergeIntoMergeable:recordCRDT] for recordName:%{public}@ site:%{public}@ error:%{public}@
Unable to archive recordValue %{public}@ %{public}@
syncEngineWillBeginModifyingPendingChanges
syncEngineDidEndModifyingPendingChanges
mergeAtomBatches: %lu deletedLocations: %@
Merging atom batches into %@
Failed to instantiate CKAtomBatch, %@, %@
Generating atom batch after clock: %@, version: %lu
Could not generate atom data from atomBatch: %@, error: %@
atomBatchesAfterClock %@ %@ %@
nil policy for stream: %@
Unable to create unarchiver %@
Unable to create a record from systemFieldsData for %@
unable to create a record with initWithRecordType for %@
Error saving via saveSystemFieldsDataForRecord: for %{public}@ %{public}@
Failed to clear metadata for record %@ in zone %@
Error saving CKRecord in saveCKRecordServerMergeableValue: for %@ %@
clearCKRecordLocalMergeableValueAndSetToSyncForZone %@
Problems updating CKRecords at or before location %@
Problems deleting CKRecords at or before location %@
Failed to delete CKRecords for streamName:%@
Can not delete CKRecord at location %@
Failed to delete all data associated with zone %@
Problems updating CKRecords in stream: %@ site: %@
unrecognized transport type (%lu)
syncNowIfPolicyAllowsWithReason: begin rapport sync
syncNowIfPolicyAllowsWithReason: begin cloudkit sync
syncNowIfPolicyAllowsWithReason: group_notify done
last sync: %{public}@ (%f ago), last attempt: %{public}@ (%f ago)
Unable to perform Rapport sync now, because database is not currently accessible
Rapport syncNowWithCompletionHandler %@, errors: %@
skipping rapport sync
Unable to perform CloudKit sync now, because database is not currently accessible
CloudKit syncNowWithCompletionHandler %@, errors: %@
skipping cloudkit sync
transitioned to state %llu
unrecoverable error: %@
database corrupt: %@
database corrupt
error: %@
BMSyncDatabase state queried while opening
failed to close db %@
failed to commit transcation
%@ received nil deviceIdentifier
recordSessionStart: %@
recordSessionEnd: %@
recordMessageToDeviceIdentifier: %@, %@
recordAtomMergeResult: %@, %@
vacuumWithShouldContinueBlock querying page_count: %@
vacuumWithShouldContinueBlock querying freelist_count: %@
vacuumWithShouldContinueBlock calculating pages to vacuum -- pageCount %tu freeCount %tu loadFactor %f
vacuumWithShouldContinueBlock not enough pages to vacuum: pageCount: %lu; freeCount: %lu
vacuumWithShouldContinueBlock error querying auto_vacuum: %@
vacuumWithShouldContinueBlock current vacuum mode is %u
vacuumWithShouldContinueBlock error setting auto_vacuum
vacuumWithShouldContinueBlock successfully set auto_vacuum to INCREMENTAL
vacuumWithShouldContinueBlock error running initial VACUUM
vacuumWithShouldContinueBlock successfully ran initial VACUUM
vacuumWithShouldContinueBlock calculated pages to vacuum: %lu
vacuumWithShouldContinueBlock starting incremental_vacuum of batch size: %lu, pagesVacuumed: %lu
vacuumWithShouldContinueBlock error running incremental_vacuum
vacuumWithShouldContinueBlock successfully completed
%@ sizeOfFileInKilobytes error fetching attributes for filepath: %@, err: %@
%@ numRowsInTable table name: %@ does not exist
%@ numRowsInTable error querying pgsize for table: %@, err: %@
%@ sizeOfTable error querying pgsize for table: %@, err: %@
nil value encountered in [BMStreamCRDTLocation initWithStreamName:%@ siteIdentifier:%@ day:%@]
can not determine streamName
unknown mergeable value ID format version %lu
BMStreamCKRecordCRDT
CKVersionedMergeable
CKMergeable
NSObject
BMSyncCRDTLocationRow
_bmFMResultSet
BMMultiStreamVectorClockConverter
BMSyncSessionContext
BMSyncSessionMetricsCollector
BMSyncSessionMetricsAggregator
BMAtomBatchMaxBytes
BMAtomBatchChunkerPolicy
NSCopying
BMAtomBatchMaxCount
BMAtomBatchChunker
BMSyncDevicePeerTable
BMSyncDevicePeerMetadata
BMPeerToPeerMessageOPACKCodable
BMSyncDevicePeer
BMRapportRequest
BMRapportSyncEngine
BMRapportManagerDelegate
BMSyncCore
BMStateVectorMetricsCollector
BiomeSync
BMMultiStreamTimestampClockVector
NSSecureCoding
NSCoding
BMStreamCKCRDT
BMPBSyncAtomValue
BMSyncCKZone
BMRapportManager
BMRapportDevice
BMPeerToPeerMessage
BMFetchAtomBatchesRequest
BMFetchAtomBatchesResponse
BMSyncPolicy
BatchEnumerate
BMSyncCKAtomRow
BMSyncServiceServerProtocol
BMSyncServiceClientProtocol
BMSyncServiceServer
NSXPCListenerDelegate
BMSyncDevice
BMSync
BMMultiStreamVectorClock
BMSyncDatabase
BMSyncMetadata
BMSyncCKMergeableRecordValue
TombstoneBookmark
BMSyncAtomValue
BMStoreEventAtomValue
BMCloudKitSyncEngine
CKSyncEngineDataSourcePrivate
CKSyncEngineDataSource
BMDistributedSyncManager
BMDistributedSyncMultiStreamManager
BMDistributedSyncMultiStreamManagerFactory
OPACKCodable
BMSyncCKRecord
BMSyncStreamID
BMAsyncBlockOperation
BMSyncScheduler
BMPBStoreEventAtomValue
BMSyncDatabaseSQLStatementMigration
BMSyncDatabaseCustomFunctionMigration
BMSyncDatabaseTransactionBatcher
BMSyncDevicePeerStatusTracker
BMSyncMetricsCollectorTable
Maintenance
BMDateFormatterVendor
BMStreamCRDTLocation
BMStreamCRDTLocationBuilder
BMStreamCRDTLocationDayAssigner
BMStreamCRDTLocationAssignerPolicy
_bmFMDatabase
_bmFMStatement
_bmFMDatabaseAdditions
_bmFMDatabasePool
_bmFMDatabaseQueue
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@16^@24
@32@0:8@16^@24
B32@0:8@"NSArray"16^@24
@"NSArray"32@0:8@"CKMergeableDeltaMetadata"16^@24
@"CKDistributedTimestampStateVector"16@0:8
@64@0:8@16@24@32@40q48@56
v24@0:8@16
q16@0:8
v24@0:8q16
v16@0:8
@"BMSyncDatabase"
@"BMStreamCKCRDT"
@"BMSyncCRDTLocationRow"
@"NSObject<OS_dispatch_queue>"
@"BMSyncSessionContext"
@32@0:8@16Q24
@40@0:8@16Q24Q32
@"BMStreamCRDTLocation"
@24@0:8@16
B32@0:8Q16@24
B32@0:8@16Q24
@24@0:8Q16
@32@0:8@16@24
i16@0:8
v24@0:8Q16
@"NSString"
v44@0:8@16Q24Q32B40
v32@0:8@16@24
v48@0:8@16B24Q28B36@40
v64@0:8Q16@24@32@40d48@56
@"NSObject<OS_xpc_object>"
@24@0:8^{_NSZone=}16
B24@0:8@"NSData"16
v24@0:8@"NSData"16
v20@0:8B16
@"<BMAtomBatchChunkerPolicy>"
B28@0:8@16B24
B32@0:8@16@24
@24@0:8@"NSDictionary"16
@"NSDictionary"16@0:8
@40@0:8@16@24q32
@40@0:8@16@24Q32
@"BMSyncDevicePeerMetadata"
@56@0:8@16@24@?32@40@?48
@?16@0:8
v24@0:8@?16
@"NSObject<OS_os_transaction>"
@"NSMutableSet"
@"NSMutableDictionary"
@"NSUUID"
@"NSObject<OS_dispatch_source>"
B32@0:8@"BMRapportManager"16@"BMRapportDevice"24
v32@0:8@"BMRapportManager"16@"BMRapportDevice"24
v24@0:8@"BMRapportManager"16
@40@0:8@16@24@32
@56@0:8@16@24@32@40@48
v40@0:8Q16@24@?32
v40@0:8@16@24@32
v44@0:8B16Q20@28@?36
@44@0:8B16Q20Q28@36
v60@0:8@16@24@32@40@48B56
v48@0:8@16@24@32@40
I16@0:8
@"BMDistributedSyncMultiStreamManager"
@"BMRapportManager"
@"NSObject<BMAtomBatchChunkerPolicy>"
@"BMSyncDevicePeerStatusTracker"
@"BMSyncSessionMetricsCollector"
@"BMRapportSyncEngine"
@"BMCloudKitSyncEngine"
@"BMSyncScheduler"
Q24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^@16
@64@0:8@16@24@32@40@48@56
@56@0:8@16Q24@32@40@48
@40@0:8@16Q24q32
B48@0:8@16@24^@32^@40
B48@0:8@16@24@32^@40
B60@0:8@16@24@32@40C48q52
v52@0:8@16@24@32C40q44
v32@0:8@16Q24
v60@0:8@16@24@32C40q44@52
v52@0:8@16C24@28Q36@?44
v28@0:8@16B24
@"BMStoreConfig"
@"BMSyncPolicy"
@"BMStreamCRDTLocationBuilder"
@"NSCache"
@"BMSyncStreamID"
@"BMPBStoreEventAtomValue"
{?="type"b1}
@"NSDate"
B28@0:8@16i24
B36@0:8@16i24@28
@28@0:8@16B24
v32@0:8@16@?24
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v28@0:8@16I24
@"RPCompanionLinkClient"
@"<BMRapportManagerDelegate>"
@"RPCompanionLinkDevice"
@"NSMutableArray"
d16@0:8
v24@0:8d16
@"BMSyncDevicePeer"
@"BMMultiStreamVectorClock"
@"NSArray"
@"NSDictionary"
@24@0:8q16
@32@0:8@16q24
d24@0:8Q16
Q24@0:8Q16
B40@0:8Q16Q24^Q32
B32@0:8Q16Q24
B40@0:8q16Q24Q32
@64@0:8@16@24@32@40Q48@56
@72@0:8@16@24@32@40Q48q56@64
@"CKDistributedTimestamp"
@"CKAtomReference"
@"BMStoreBookmark"
@"NSData"
@40@0:8Q16@24@32
B36@0:8@16@24B32
@48@0:8@16Q24@32@40
v40@0:8@16@24@?32
v40@0:8@16Q24@?32
@40@0:8d16@24@32
v24@0:8@?<v@?@"NSError">16
v24@0:8@?<v@?@"NSArray"@"NSArray">16
v24@0:8@?<v@?@"NSArray"@"NSError">16
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v32@0:8@?16@?24
@"BMSyncCore"
@"NSXPCListener"
@48@0:8@16@24@32@40
@72@0:8@16@24@32@40@48@56@64
@80@0:8@16@24@32@40@48@56@64@72
B40@0:8@16@24@32
@40@0:8Q16@24q32
@"BMStoreEventAtomValue"
@36@0:8@16I24d28
@"CKRecord"32@0:8@"CKSyncEngine"16@"CKRecordID"24
v32@0:8@"CKSyncEngine"16@"CKRecord"24
v40@0:8@"CKSyncEngine"16@"CKRecord"24@"NSError"32
v32@0:8@"CKSyncEngine"16@"CKRecordID"24
v40@0:8@"CKSyncEngine"16@"CKRecordID"24@"NSError"32
v40@0:8@"CKSyncEngine"16@"CKRecordID"24@"NSString"32
v32@0:8@"CKSyncEngine"16@"NSData"24
v32@0:8@"CKSyncEngine"16@"CKRecordZone"24
v32@0:8@"CKSyncEngine"16@"CKRecordZoneID"24
v40@0:8@"CKSyncEngine"16@"CKRecordZoneID"24@"NSError"32
v40@0:8@"CKSyncEngine"16@"CKRecordZone"24@"NSError"32
v40@0:8@"CKSyncEngine"16@"CKRecordID"24@"CKRecordID"32
v24@0:8@"CKSyncEngine"16
v32@0:8@"CKSyncEngine"16@"NSArray"24
@"CKSyncEngineBatch"32@0:8@"CKSyncEngine"16@"NSSet"24
v40@0:8@"CKSyncEngine"16@"CKSyncEngineBatch"24@"NSError"32
@"NSArray"24@0:8@"CKSyncEngine"16
B32@0:8@"CKSyncEngine"16@"CKRecordZoneID"24
@"NSArray"40@0:8@"CKSyncEngine"16@"NSArray"24@"NSArray"32
B24@0:8q16
@"NSOperationQueue"
@"<CKSyncEngineDataSource>"
@"CKContainer"
@"CKSyncEngineConfiguration"
@"CKSyncEngine"
@44@0:8@16C24@28Q36
@40@0:8Q16Q24@32
@60@0:8@16q24Q32Q40C48@52
@"NSNumber"
@40@0:8@16^B24Q32
v48@0:8@16@24Q32@40
B48@0:8@16@24@32@40
B44@0:8@16@24@32B40
B40@0:8@16@24Q32
@24@0:8@?16
v40@0:8Q16Q24@32
v32@0:8Q16@24
B24@0:8Q16
{?="dataTimestamp"b1"dataVersion"b1}
@"_bmFMDatabase"
B24@0:8@?16
v32@0:8@16d24
v56@0:8@16@24Q32B40Q44B52
v72@0:8Q16@24@32Q40@48@56d64
@"NSISO8601DateFormatter"
@"NSDateFormatter"
@40@0:8@16@24d32
@"<BMStreamCRDTLocationAssignerPolicy>"
@24@0:8d16
@"BMStreamCRDTLocation"40@0:8@"NSString"16@"NSString"24d32
^v16@0:8
r*16@0:8
i24@0:8i16i20
B28@0:8i16@20
v20@0:8i16
i36@0:8@16i24^{sqlite3_stmt=}28
v48@0:8@16[1{__va_list_tag=II^v^v}]24@32@40
@52@0:8@16@24@32[1{__va_list_tag=II^v^v}]40B48
B48@0:8^{sqlite3_stmt=}16@24@32[1{__va_list_tag=II^v^v}]40
@40@0:8@16@24^@32
@32@0:8@16[1{__va_list_tag=II^v^v}]24
B56@0:8@16^@24@32@40[1{__va_list_tag=II^v^v}]48
B40@0:8@16@24^@32
B32@0:8@16[1{__va_list_tag=II^v^v}]24
B32@0:8@16@?24
B28@0:8i16^@20
B36@0:8i16@20^@28
B52@0:8i16@20^i28^i36^@44
v36@0:8@16i24@?28
i24@0:8^v16
q24@0:8^v16
d24@0:8^v16
@24@0:8^v16
v24@0:8^v16
v28@0:8i16^v20
v32@0:8q16^v24
v32@0:8d16^v24
v32@0:8@16^v24
v20@0:8I16
@36@0:8@16@24B32
B24@0:8^@16
i24@0:8^@16
i24@0:8@16
i20@0:8i16
q24@0:8@16
q20@0:8i16
Q20@0:8i16
B20@0:8i16
d24@0:8@16
d20@0:8i16
@20@0:8i16
r*20@0:8i16
r*24@0:8@16
B40@0:8@16@24[1{__va_list_tag=II^v^v}]32
@"_bmFMStatement"
@28@0:8@16i24
@36@0:8@16i24@28
v32@0:8q16@?24
softlink:r:path:/System/Library/PrivateFrameworks/BiomeLibrary.framework/BiomeLibrary
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>22A380007</string>
<key>CFBundleIdentifier</key>
<string>com.apple.biomesyncd</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>14E6097d</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>16.4</string>
<key>DTSDKBuild</key>
<string>20E5212d</string>
<key>DTSDKName</key>
<string>iphonesimulator16.4.internal</string>
<key>DTXcode</key>
<string>1430</string>
<key>DTXcodeBuild</key>
<string>14E6097d</string>
<key>MinimumOSVersion</key>
<string>16.4</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
<integer>2</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.biomesyncd</string>
<key>aps-connection-initiate</key>
<true/>
<key>aps-environment</key>
<string>serverPreferred</string>
<key>com.apple.CompanionLink</key>
<true/>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.application-identifier</key>
<string>com.apple.biomesyncd</string>
<key>com.apple.developer.aps-environment</key>
<string>serverPreferred</string>
<key>com.apple.developer.icloud-container-environment</key>
<string>Production</string>
<key>com.apple.developer.icloud-container-identifiers</key>
<array>
<string>com.apple.biome.sync</string>
</array>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudKit</string>
</array>
<key>com.apple.private.appleaccount.app-hidden-from-icloud-settings</key>
<true/>
<key>com.apple.private.aps-connection-initiate</key>
<true/>
<key>com.apple.private.biome.client-identifier</key>
<string>com.apple.biomesyncd</string>
<key>com.apple.private.biome.read-write</key>
<array>
<string>ContextSync.LOI</string>
</array>
<key>com.apple.private.biome.sensorActivation</key>
<true/>
<key>com.apple.private.cloudkit.serviceNameForContainerMap</key>
<dict>
<key>com.apple.biome.sync</key>
<string>com.apple.biome.sync</string>
</dict>
<key>com.apple.private.cloudkit.spi</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.contextsync</string>
</array>
<key>com.apple.private.ids.messaging.urgent-priority</key>
<array>
<string>com.apple.private.alloy.contextsync</string>
</array>
<key>com.apple.private.sandbox.profile:embedded</key>
<string>temporary-sandbox</string>
<key>com.apple.private.security.storage.Biome</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceLiverpool</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>/Library/Biome/sync/</string>
<string>/Library/Biome/streams/public</string>
<string>/Library/Biome/streams/public/DeviceMetadata/</string>
<string>/Library/Biome/streams/public/AppIntent/</string>
<string>/Library/Biome/streams/public/AppLaunch/</string>
<string>/Library/Biome/streams/public/Workout/</string>
<string>/Library/Biome/streams/public/NowPlaying/</string>
<string>/Library/Biome/streams/restricted</string>
<string>/Library/Biome/streams/restricted/feedbackSocialHighlights/</string>
<string>/Library/Biome/streams/restricted/SiriMemoryReferenceResolutionStream/</string>
<string>/Library/Biome/streams/restricted/Device.Power.PluggedIn/</string>
<string>/Library/Biome/streams/restricted/Device.Wireless.WiFi/</string>
<string>/Library/Biome/streams/restricted/Device.Power.BatteryLevel/</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.accountsd.accountmanager</string>
<string>com.apple.CompanionLink</string>
<string>com.apple.biomed.sensorActivation</string>
<string>com.apple.cloudd</string>
<string>com.apple.apsd</string>
<string>com.apple.identityservicesd.embedded.auth</string>
</array>
<key>com.apple.security.exception.shared-preference.read-only</key>
<array>
<string>com.apple.CloudKit</string>
<string>com.apple.ids</string>
<string>com.apple.facetime.bag</string>
</array>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.biomesyncd</string>
<string>com.apple.contextsync.subscriptions</string>
</array>
<key>com.apple.security.network.client</key>
<true/>
<key>com.apple.security.network.server</key>
<true/>
<key>com.apple.security.ts.mobile-keybag-access</key>
<true/>
<key>com.apple.security.ts.tmpdir</key>
<string>com.apple.biomesyncd</string>
<key>com.apple.wifi.manager-access</key>
<true/>
<key>platform-application</key>
<true/>
</dict>
</plist>
l0.
application-identifier
com.apple.biomesyncd0
aps-connection-initiate
aps-environment
serverPreferred0
com.apple.CompanionLink
0/*com.apple.accounts.appleaccount.fullaccess
08 com.apple.application-identifier
com.apple.biomesyncd06#com.apple.developer.aps-environment
serverPreferred0>0com.apple.developer.icloud-container-environment
Production0J0com.apple.developer.icloud-container-identifiers0
com.apple.biome.sync01#com.apple.developer.icloud-services0
CloudKit0C>com.apple.private.appleaccount.app-hidden-from-icloud-settings
0.)com.apple.private.aps-connection-initiate
0A)com.apple.private.biome.client-identifier
com.apple.biomesyncd07"com.apple.private.biome.read-write0
ContextSync.LOI0-(com.apple.private.biome.sensorActivation
0g5com.apple.private.cloudkit.serviceNameForContainerMap
.0,
com.apple.biome.sync
com.apple.biome.sync0#
com.apple.private.cloudkit.spi
com.apple.private.ids.messaging0%#com.apple.private.alloy.contextsync0X/com.apple.private.ids.messaging.urgent-priority0%#com.apple.private.alloy.contextsync0?*com.apple.private.sandbox.profile:embedded
temporary-sandbox0-(com.apple.private.security.storage.Biome
com.apple.private.tcc.allow0
kTCCServiceLiverpool0
@com.apple.security.exception.files.home-relative-path.read-write0
/Library/Biome/sync/
/Library/Biome/streams/public-/Library/Biome/streams/public/DeviceMetadata/(/Library/Biome/streams/public/AppIntent/(/Library/Biome/streams/public/AppLaunch/&/Library/Biome/streams/public/Workout/)/Library/Biome/streams/public/NowPlaying/!/Library/Biome/streams/restricted;/Library/Biome/streams/restricted/feedbackSocialHighlights/F/Library/Biome/streams/restricted/SiriMemoryReferenceResolutionStream/9/Library/Biome/streams/restricted/Device.Power.PluggedIn/7/Library/Biome/streams/restricted/Device.Wireless.WiFi/</Library/Biome/streams/restricted/Device.Power.BatteryLevel/0
4com.apple.security.exception.mach-lookup.global-name0
"com.apple.accountsd.accountmanager
com.apple.CompanionLink!com.apple.biomed.sensorActivation
com.apple.cloudd
com.apple.apsd)com.apple.identityservicesd.embedded.auth0w8com.apple.security.exception.shared-preference.read-only0;
com.apple.CloudKit
com.apple.ids
com.apple.facetime.bag0x9com.apple.security.exception.shared-preference.read-write0;
com.apple.biomesyncd#com.apple.contextsync.subscriptions0&!com.apple.security.network.client
0&!com.apple.security.network.server
0/*com.apple.security.ts.mobile-keybag-access
com.apple.security.ts.tmpdir
com.apple.biomesyncd0"
com.apple.wifi.manager-access
platform-application
@(#)PROGRAM:biomesyncd  PROJECT:BiomeSync-100.12
CREATE TABLE Metadata (
 key TEXT UNIQUE PRIMARY KEY ON CONFLICT REPLACE NOT NULL,
 value
CREATE TABLE CKAtom (
 stream STRING NOT NULL,
 -- CKDistributedTimestamp
 site BLOB NOT NULL,
 clock INTEGER NOT NULL,
 type INTEGER NOT NULL,
 -- CRDTLocation
 location_id INTEGER NOT NULL,
 -- BMStoreBookmark
 segment_name TEXT,
 segment_offset INTEGER,
 -- CKAtomReference
 ref_type INTEGER,
 ref_site BLOB,
 ref_clock INTEGER,
 ref_location_id INTEGER,
 -- CKAtom value
 value_version INTEGER,
 value_data BLOB,
 on_disk BOOLEAN,
 CONSTRAINT "ref_type <=> (ref_site AND ref_clock)"
 CHECK ((ref_type IS NULL) == ((ref_site IS NULL) AND (ref_clock IS NULL))),
 CONSTRAINT "(ref_type, ref_site, ref_clock) != (type, site, clock)"
 CHECK (ref_type != type OR ref_site != site OR ref_clock != clock),
 CONSTRAINT "segment_name <=> segment_offset"
 CHECK ((segment_name IS NULL) == (segment_offset IS NULL)),
 CONSTRAINT "on_disk <=> segment_name"
 CHECK (CASE WHEN on_disk NOTNULL THEN segment_name NOTNULL ELSE segment_name ISNULL END),
 CONSTRAINT "on_disk <=> !data"
 CHECK (CASE WHEN on_disk NOTNULL THEN value_data ISNULL ELSE value_data NOTNULL END)
 FOREIGN KEY (location_id) REFERENCES CRDTLocation(id),
 FOREIGN KEY (ref_location_id) REFERENCES CRDTLocation(id)
 UNIQUE (stream, site, type, clock),
 UNIQUE (stream, site, clock, on_disk),
 UNIQUE (stream, site, type, clock, on_disk),
 UNIQUE (stream, site, type, segment_name, segment_offset)
CREATE INDEX idx_ckatom_ref_clock_type ON CKAtom(stream, ref_clock, type);
CREATE INDEX idx_ckatom_segment_name ON CKAtom(stream, segment_name);
CREATE TABLE CRDTLocation (
 id INTEGER primary key,
 stream STRING NOT NULL,
 site STRING NOT NULL,
 day INTEGER NOT NULL,
 state INTEGER NOT NULL
CREATE INDEX idx_crdt_location ON CRDTLocation(stream, site, day);
CREATE INDEX idx_crdt_location_state ON CRDTLocation(stream, site, state, day DESC);
CREATE TABLE TombstoneBookmark (
 stream STRING NOT NULL,
 site BLOB NOT NULL,
 segment_name TEXT,
 segment_offset INTEGER
CREATE INDEX idx_tombstone_bookmark ON TombstoneBookmark(stream, site);
CREATE TABLE DevicePeer (
 device_identifier STRING NOT NULL,
 me BOOLEAN,
 name STRING,
 model STRING,
 platform INTEGER,
 last_sync_date INTEGER,
 protocol_version INTEGER NOT NULL
CREATE TABLE SyncSessionLog (
 session_id BLOB,
 start_timestamp INTEGER,
 end_timestamp INTEGER,
 transport INTEGER,
 reason INTEGER,
 is_reciprocal BOOL,
 time_since_previous_sync INTEGER
CREATE TABLE SyncMessageLog (
 session_id BLOB,
 message_id INTEGER,
 timestamp INTEGER,
 device_identifier STRING,
 reachable BOOL,
 is_reciprocal BOOL,
 atom_batch_bytes INTEGER
CREATE INDEX idx_syncmessagelog_session_id ON SyncMessageLog(session_id);
CREATE TABLE AtomMergedLog (
 session_id BLOB,
 message_id INTEGER,
 stream STRING,
 merge_result INTEGER,
 owning_site_identifier STRING,
 relayed_by_site_identifier STRING,
 synced_at INTEGER,
 event_created_at INTEGER
CREATE INDEX idx_atommergedlog_session_id ON AtomMergedLog(session_id);
CREATE INDEX idx_atommergedlog_owning_site_identifier ON AtomMergedLog(owning_site_identifier);
CREATE TABLE CKRecord (
 location_id INTEGER,
 sync_to_cloud_kit BOOL,
 record_metadata BLOB,
 record_name STRING,
 stream_identifier STRING,
 local_mergeable_value BLOB,
 deleting BOOL,
 record_type INTEGER,
 deleted_crdt BOOL,
 PRIMARY KEY (stream_identifier, record_name)
 FOREIGN KEY (location_id) REFERENCES CRDTLocation(id)
CREATE INDEX idx_ckrecord ON CKRecord(record_name);
CREATE TABLE CKMergeableRecordValue (
 stream_name STRING,
 record_name STRING,
 server_mergeable_value BLOB,
 FOREIGN KEY (stream_name, record_name) REFERENCES CKRecord(stream_identifier, record_name)
CREATE TABLE CKZone (
 zone_name STRING NOT NULL,
 zone_uuid STRING NOT NULL,
 recovery_state INTEGER,
 attempted_recovery_date INTEGER
333333
FMDBUserVersion
CKAtomRowSiteIdentifiers
T@"CKContainer",&,N,V_container
DELETE_FROM:WHERE:
T@"NSArray",R,N,V_sqlStatements
INSERT_INTO:VALUES:
T@?,C,N,V_requestTimeoutHandler
SELECT_FROM:COLUMNS:JOIN:WHERE:GROUP_BY:HAVING:ORDER_BY:LIMIT:
TB,V_logsErrors
SELECT_FROM:COLUMNS:WHERE:
T^v,V_statement
SELECT_FROM:COLUMNS:WHERE:ORDER_BY:LIMIT:
Td,N,V_walltime
T@"<BMRapportManagerDelegate>",W,N,V_delegate
_client
T@"BMCloudKitSyncEngine",&,N,V_cloudKitSyncEngine
_databaseInPool
T@"BMMultiStreamVectorClock",&,N,V_vectorClock
_device
T@"BMStoreBookmark",R,N,V_bookmark
_openResultSets
T@"BMStreamCKCRDT",R,N,V_streamCRDT
_policy
T@"BMSyncCRDTLocationRow",R,N,V_location
_requestTimeout
T@"BMSyncCRDTLocationRow",R,N,V_referenceLocation
_siteIdentifier
T@"BMSyncDatabase",R,N,V_db
_traceExecution
T@"BMSyncDevicePeerStatusTracker",R,N,V_peerStatusTracker
arrayWithArray:
T@"BMSyncScheduler",&,N,V_syncScheduler
causalReference
T@"BMSyncSessionContext",R,N,V_sessionContext
computeAndSendAggregatedMetrics
T@"BMSyncStreamID",R,N,V_streamID
containsString:
T@"CKDistributedTimestamp",R,N,V_timestamp
T@"CKSyncEngineConfiguration",&,N,V_configuration
doubleForQuery:
T@"NSData",R,N,V_eventData
enumerateMergeableRecordValuesForRecordName:zoneName:withBlock:
T@"NSData",R,N,V_valueData
executeUpdate:error:withArgumentsInArray:orDictionary:orVAList:
T@"NSDate",R,N,V_attemptedRecoveryDate
getTableSchema:
T@"NSDictionary",&,N,V_atomBatches
handleSyncRecordDidFetchRecord:
T@"NSDictionary",&,N,V_errorFromDevice
initWithAtomType:value:version:
T@"NSDictionary",R,N,V_distributedSyncManagers
initWithTriple:
T@"NSMutableArray",&,N,V_requestQueue
isInTransaction
T@"NSMutableDictionary",&,V_cachedStatements
lastInsertRowId
T@"NSNumber",R,N,V_locationID
lowercaseString
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
numRowsInTable:
T@"NSObject<OS_xpc_object>",&,N,V_activity
numberWithLong:
T@"NSSet",&,N,V_inFlightToDevices
recordChangeTag
T@"NSString",&,N,V_bmDeviceIdentifier
recordZonesToSaveForSyncEngine:
T@"NSString",&,N,V_sessionID
releaseSavePointWithName:error:
T@"NSString",&,V_query
setAtomBatches:
T@"NSString",C,V_vfsName
setKey:
T@"NSString",R,C
setLastCloudKitSyncAttemptDate:
T@"NSString",R,C,N,V_model
setServiceType:
T@"NSString",R,N
setUnseenPeers:
T@"NSString",R,N,V_customFunctionName
setVectorClock:
T@"NSString",R,N,V_rapportIdentifier
shouldAutoClose
T@"NSString",R,N,V_siteIdentifier
stringForQuery:
T@"NSString",R,N,V_streamName
suggestedDeltaSizeForContainer:
T@"NSString",R,N,V_zoneName
upsertLocation:
T@"NSURL",R,N
version
T@"RPCompanionLinkClient",&,N,V_client
.cxx_destruct
T@"BMSyncDevicePeer",&,N,V_peer
CRDTLocationCount
T@"NSArray",R,N
FMDBVersion
T@"NSString",R,N,V_databasePath
SELECT_ATOMS_WHERE:ORDER_BY:LIMIT:
TB,V_checkedOut
SELECT_FROM:COLUMNS:JOIN:WHERE:ORDER_BY:LIMIT:
T^v,R,N
SELECT_FROM:COLUMNS:WHERE:GROUP_BY:
Td,N,V_maxBusyRetryTimeInterval
T#,R
_atomBatchBytes
T@"<CKSyncEngineDataSource>",&,N,V_dataSource
_config
T@"BMDistributedSyncMultiStreamManager",&,N,V_distributedSyncMultiStreamManager
T@"BMRapportSyncEngine",&,N,V_rapportSyncEngine
_isOpen
T@"BMStoreEventAtomValue",R,N,V_value
_operationQueue
T@"BMStreamCRDTLocation",R,N,V_location
_rapportManager
T@"BMSyncCRDTLocationRow",R,N,V_locationRow
_sessionContext
T@"BMSyncDatabase",&,N,V_database
_streamSyncName
T@"BMSyncDevicePeerMetadata",R,N,V_metadata
allKeys
T@"BMSyncPolicy",R,N,V_policy
atomBatchesInClockVector:ckFormatVersion:chunker:transportType:
T@"BMSyncSessionContext",&,N,V_sessionContext
changes
T@"BMSyncSessionMetricsCollector",&,N,V_metricsCollector
containsObject:
T@"CKAtomReference",R,N,V_causalReference
dateFromString:
T@"CKSyncEngine",&,N,V_ckSyncEngine
dealloc
T@"NSArray",&,N,V_unseenPeers
encryptedValues
T@"NSData",R,N,V_localMergeableValue
errorFromDevice
T@"NSDate",&,N
fetchAtomBatchesIsReciprocal:reason:activity:completionHandler:
T@"NSDate",R,N,V_day
handleFailedToSaveSyncRecordServerManateeDecryptionError:error:
T@"NSDictionary",&,N,V_deletedLocations
identifierForPublicStreamNamed:
T@"NSDictionary",R,N
initWithFormat:
T@"NSDictionary",R,N,V_streamNameToStreamDescriptorDict
initWithZoneID:
T@"NSMutableDictionary",&,N,V_registeredRequests
isProxy
T@"NSMutableDictionary",R
limitFor:value:
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
T@"NSObject<OS_dispatch_source>",&,N,V_requestTimeout
numberWithBool:
T@"NSSet",&,N,V_deliveredToDevices
protocolVersion
T@"NSString",&,N
recordIDsToSave
T@"NSString",&,N,V_originatingSiteIdentifier
release
T@"NSString",&,V_path
T@"NSString",C,V_path
setExpirationAfterTimeInterval:
T@"NSString",R
setKeyWithData:
T@"NSString",R,C,N,V_deviceIdentifier
setMaxConcurrentOperationCount:
T@"NSString",R,C,N,V_name
setState:error:
T@"NSString",R,N,V__error_ivar
setUserVersion:
T@"NSString",R,N,V_mergeableRecordValueKey
setWithObjects:
T@"NSString",R,N,V_recordName
stringByAppendingPathComponent:
T@"NSString",R,N,V_streamIdentifier
stringFromDate:
T@"NSString",R,N,V_streamSyncName
syncEngine:zoneWithIDWasPurged:
T@"NSString",R,N,V_zoneUUID
vectorClockForStreamIdentifier:
T@"NSUUID",&,N,V_uuid
vfsName
T@"RPCompanionLinkDevice",&,N,V_device
T@"_bmFMDatabase",&,N,V_parentDB
T@"_bmFMStatement",&,V_statement
T@,V_delegate
T@?,C,N,V_completionHandler
T@?,C,N,V_corruptionHandler
T@?,C,N,V_reciprocalCompletionBlock
T@?,C,N,V_requestBlock
T@?,R,C,N,V_block
TB,N,V_isOpen
TB,N,V_isReciprocalRequest
TB,N,V_moreComing
TB,N,V_shouldAutoClose
TB,N,V_shouldCacheStatements
TB,R
TB,R,N
TB,R,N,V_isInTransaction
TB,V_crashOnErrors
TB,V_inUse
TB,V_traceExecution
TI,N
TI,R,N
TI,R,N,V_dataVersion
TQ,N,V_atomBatchBytes
TQ,N,V_atomBatchVersion
TQ,N,V_batchSequenceNumber
TQ,N,V_batchSize
TQ,N,V_linkState
TQ,N,V_messageID
TQ,N,V_protocolVersion
TQ,N,V_state
TQ,R
TQ,R,N
TQ,R,N,V__internal_state_ivar
TQ,R,N,V_primaryKey
TQ,R,N,V_state
TQ,R,N,V_type
TQ,V_maximumNumberOfDatabasesToCreate
Td,R,N,V_dataTimestamp
Ti,R,N
Ti,R,N,V_recoveryState
Ti,R,V_openFlags
Tq,N,V_maxDeltaSize
Tq,R,N
Tq,R,N,V_platform
Tq,R,N,V_valueVersion
Tq,R,N,V_version
Tq,V_useCount
UPDATE:SET:WHERE:
UTF8String
UTF8StringForColumn:
UTF8StringForColumnIndex:
UTF8StringForColumnName:
UUID
UUIDString
_SELECT_FROM:COLUMNS:JOIN:WHERE:GROUP_BY:ORDER_BY:LIMIT:
__error_ivar
__internal_state_ivar
_activity
_atomBatchChunkerPolicy
_atomBatchVersion
_atomBatches
_atomCount
_attemptedRecoveryDate
_batchSequenceNumber
_batchSize
_block
_bmDeviceIdentifier
_bookmark
_cachedStatements
_causalReference
_checkedOut
_chunkerPolicy
_ckSyncEngine
_cloudKitSyncEngine
_cloudKitSyncWithSyncTriggeredHandler:syncCompletedHandler:
_columnNameToIndexMap
_completionHandler
_configuration
_container
_core
_corruptionHandler
_crashOnErrors
_customFunctionName
_dataReceivedFromSiteIdentifiers
_dataSource
_dataTimestamp
_dataVersion
_database
_databaseOutPool
_databasePath
_dateFormat
_dateFormatter
_day
_delegate
_deletedLocations
_deliveredToDevices
_deviceIdentifier
_devices
_discoveryClient
_discoveryClientState
_distributedSyncManagers
_distributedSyncMultiStreamManager
_errorFromDevice
_eventData
_executing
_finished
_flags
_fmdb
_has
_inFlightToDevices
_inUse
_isExecutingStatement
_isInTransaction
_isReciprocalRequest
_linkState
_listener
_localDeviceIdentifier
_localMergeableValue
_localSiteIdentifier
_location
_locationBuilder
_locationID
_locationRow
_locationRowCache
_lockQueue
_logsErrors
_maxBusyRetryTimeInterval
_maxBytes
_maxCount
_maxDeltaSize
_maximumNumberOfDatabasesToCreate
_mergeableRecordValueKey
_messageID
_metadata
_metricsCollector
_model
_moreComing
_name
_numPagesToVacuum
_openFlags
_openFunctions
_originatingSiteIdentifier
_parentDB
_path
_peer
_peerStatusTracker
_platform
_policyDictionary
_primaryKey
_protocolVersion
_query
_queue
_rapportIdentifier
_rapportSyncEngine
_rapportSyncWithSyncTriggeredHandler:syncCompletedHandler:
_reciprocalCompletionBlock
_recordName
_recoveryState
_referenceLocation
_registeredRequests
_reinitializeSiteIdentifier:
_requestBlock
_requestQueue
_requestTimeoutHandler
_sessionID
_sharedUse
_shouldAutoClose
_shouldCacheStatements
_sigtermSource
_sizeOfFileInKilobytes:
_sqlStatements
_startBusyRetryTime
_state
_statement
_streamCRDT
_streamID
_streamIdentifier
_streamName
_streamNameToStreamDescriptorDict
_supportsTransport:direction:outSupportedDirections:
_syncManager
_syncScheduler
_timestamp
_transaction
_tryOpen:
_type
_unseenPeers
_unsupportedDevices
_useCount
_usedBytes
_uuid
_value
_valueData
_valueVersion
_vectorClock
_version
_vfsName
_walltime
_writeEventData:dataVersion:timestamp:outBookmark:
_zoneName
_zoneUUID
aa_primaryAppleAccount
accountInfoWithCompletionHandler:
accountStatus
activateDirectLinkToDevice:completionHandler:
activateDiscoveryClientWithCompletion:
activateDiscoveryLinkWithCompletion:
activateWithCompletion:
activeDevices
activity
addAtomToAtomBatch:ifChunkerAllows:fromAtomTableRecord:atomValueData:version:atomValueVersion:
addAtomWithValueData:toAtomBatch:fromAtomTableRecord:version:atomValueVersion:
addCKAtomRow:inStream:
addClockValuesInIndexSet:forSiteIdentifier:
addClockValuesInIndexSet:withAtomState:forSiteIdentifier:
addDeltasToSaveFromMergeable:error:
addEntriesFromDictionary:
addObject:
addObjectsFromArray:
addOperation:
addRecordIDsToSave:recordIDsToDelete:
addRecordZonesToSave:recordZoneIDsToDelete:
allObjects
allPeers
allSiteIdentifiers
allValues
allocWithZone:
anyObject
appendAtomWithBlock:
appendFormat:
appendString:
appendWithProxyBlock:
applicationID
archivedDataWithRootObject:requiringSecureCoding:error:
array
arrayWithCapacity:
arrayWithObjects:count:
atomBatchBytes
atomBatchVersion
atomBatches
atomBatchesInClockVector:targetPlatform:transportType:direction:ckFormatVersion:chunker:
atomRowsInTimestampClockVector:forLocation:inStream:enumerateWithBlock:
atomRowsNotOnDiskReferencingSiteIdentifier:inStream:enumerateWithBlock:
atomType
atomValueFromData:version:
atomValueFromEvent:ofType:version:
atomsAtOrBeforeLocation:ofType:enumerateWithBlock:
atomsInClockVector:ckFormatVersion:chunker:transportType:enumerateWithBlock:
attemptedRecoveryDate
attributesOfItemAtPath:error:
autorelease
batchSequenceNumber
batchSize
beginDeferredTransaction
beginExclusiveTransaction
beginImmediateTransaction
beginTransaction
beginTransaction:withBlock:
bindObject:toColumn:inStatement:
bindStatement:WithArgumentsInArray:orDictionary:orVAList:
bindWithArray:
bindWithArray:orDictionary:orVAList:
bindWithDictionary:
block
bmDeviceIdentifier
bmUserDefaultsString:
bm_companionLinkDeviceIdentifier
bm_description
bookmark
boolForColumn:
boolForColumnIndex:
boolForEntitlement:
boolForQuery:
boolValue
buildAtomBatchRequestWithIsReciprocal:sequenceNumber:transportType:device:
busyRetryTimeout
bytes
cachedStatementForQuery:
cachedStatements
canAddAtomWithData:
charValue
characterAtIndex:
checkedOut
checkpoint:error:
checkpoint:name:error:
checkpoint:name:logFrameCount:checkpointCount:error:
ckAtomCount
ckAtomRowForAtomWithBookmark:type:forSiteIdentifier:inStream:
ckAtomRowWithTimestamp:inStream:
ckAtomTableRecordForEvent:ofType:atBookmark:previousTableRecord:siteIdentifier:
ckMergeableValueID
ckMergeableValueIDWithFormatVersion:
ckRecordCountForRecordType:
ckRecordExists:zoneName:recordType:
ckRecordForRecordName:zoneName:recordType:
ckRecordsToSyncToCloudKitForZone:
ckSyncEngine
ckSyncEngineMetaData
ckZoneExists:
ckZoneForZoneName:
ckZoneSetAttemptedRecoveryDate:state:forZoneName:
ckZoneSetAttemptingRecoveryForZoneName:state:
ckZoneSetZoneVersionUUID:forZoneName:
class
clearCKMergeableRecordValueServerMergeableValuesForRecordName:zoneName:
clearCKMergeableRecordValueServerMergeableValuesForZoneName:
clearCKRecordLocalMergeableValueAndSetToSyncForZone:
clearCKSyncEngineMetaData
clearCachedStatements
client
clockValue
clockValuesForSiteIdentifier:
clockVector
clockVectorForStreamsSupportingTransportType:direction:device:
close
closeOpenResultSets
cloudKitSyncEngine
cloudKitSyncWithReply:
code
columnCount
columnExists:columnName:
columnExists:inTableWithName:
columnIndexForName:
columnIndexIsNull:
columnIsNull:
columnNameForIndex:
columnNameToIndexMap
commit
compactAndDeleteSessionLogs
compare:
compareToTimestampVector:
compareToVector:
completeRequest:deliveredToDevices:withErrors:
completeRequestIfDeliveredToAllNearbyDevices:
completionHandler
componentsJoinedByString:
componentsSeparatedByString:
computeAggregatedSessionLogs
computeAndSendStateVectorMetrics
computeHighestLocationToDeleteUpToBookmark:forSiteIdentifier:inStream:
computeStateVectorMetrics
config
configForSyncStreamID:
configuration
conformsToProtocol:
container
containsCKAtomRowWithSegment:inStream:
containsCKAtomRowWithTimestamp:inStream:
containsCKAtomRowWithTimestamp:inStream:onDisk:
contentsVector
contextSyncManager
copy
copyWithZone:
corruptionHandler
count
countByEnumeratingWithState:objects:count:
countOfCheckedInDatabases
countOfCheckedOutDatabases
countOfOpenDatabases
crashOnErrors
createCKRecordFromRecordID:newRecord:recordType:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
createDiscoveryClientIfNotExists
createDiscoveryClientWithControlFlags:
createSharedDiscoveryClientIfNotExists
currentDevice
currentHandler
customFunctionName
data
dataForColumn:
dataForColumnIndex:
dataForQuery:
dataNoCopyForColumn:
dataNoCopyForColumnIndex:
dataSource
dataTimestamp
dataUsingEncoding:
dataVersion
dataWithBytes:length:
dataWithBytesNoCopy:length:freeWhenDone:
dataWithError:
database
databaseClass
databaseExists
databasePath
databasePool:didAddDatabase:
databasePool:shouldAddDatabaseToPool:
databasePoolWithPath:
databasePoolWithPath:flags:
databasePoolWithURL:
databasePoolWithURL:flags:
databaseQueueWithPath:
databaseQueueWithPath:flags:
databaseQueueWithURL:
databaseQueueWithURL:flags:
databaseSizeInKilobytes
databaseURL
databaseWithPath:
databaseWithURL:
datastorePath
dateForColumn:
dateForColumnIndex:
dateForQuery:
dateFormatter
dateOfLastVacuum
dateToRelativePositionDictionary
dateWithTimeIntervalSince1970:
dateWithTimeIntervalSinceReferenceDate:
dayFromRecordName:
debugDescription
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
defaultDatabasePath
defaultDatabaseWALPath
defaultManager
delegate
deleteAllAtomsAtOrBeforeLocation:
deleteAllCKRecordsInZone:
deleteAtOrBeforeHighestDeletedLocation:
deleteCKRecordAtLocation:
deleteCKRecordsAtOrBeforeLocation:
deleteCKRecordsForStreamName:
deleteEventAtBookmark:outTombstoneBookmark:
deleteLocationsUpToTTLAtTombstone:siteIdentifier:
deletedExpiredBufferedLocationsForSiteIdentifier:
deletedLocations
deletionReason
deliveredToDevices
deltaDeliveryRequirements
deregisterRequestID:
description
descriptor
deserialize:error:
device
device:didChange:
deviceIdentifier
devicePeerMetadata
deviceToDeviceEncryptionAvailability
deviceWithIdentifier:
dictionary
dictionaryRepresentation
dictionaryWithCapacity:
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:count:
dictionaryWithSyncDatabase:
didAddAtomWithData:
didChangeValueForKey:
didDiscoverDevice:
didLoseDevice:
directionsSupportedForTransport:
disableAllCKSyncRecordsForSite:stream:
disableStatementCachingForBlock:
discoveredDevices
dispatchQueue
distantPast
distributedSiteIdentifier
distributedSyncManagers
distributedSyncMultiStreamManager
distributedSyncMultiStreamManagerWithDatabase:
doCloudKitSyncNowWithReason:
doRapportSyncNowWithReason:
domain
doubleForColumn:
doubleForColumnIndex:
doubleValue
enableAllCKSyncRecordsPreviouslyDisabledForSite:stream:
encodeAsProto
encodeObject:forKey:
encodeSystemFieldsWithCoder:
encodeWithCoder:
encodedData
enumerateAllClockValuesUsingBlock:
enumerateAtomsWithOptions:usingBlock:
enumerateCKSyncRecordRecordsSetForDeletingUsingBlock:
enumerateObjectsUsingBlock:
enumerateRangesUsingBlock:
enumerateRecordsWithBlock:
enumerateWithBlock:
enumerateZonesWithBlock:
error
errorWithDomain:code:userInfo:
errorWithMessage:
eventBody
eventBodyClass
eventData
eventStringFromDescriptor:
exceptionWithName:reason:userInfo:
executeLocked:
executeOperationWithBlock:
executeQuery:
executeQuery:values:error:
executeQuery:withArgumentsInArray:
executeQuery:withArgumentsInArray:orDictionary:orVAList:shouldBind:
executeQuery:withParameterDictionary:
executeQuery:withVAList:
executeQueryWithFormat:
executeStatements:
executeStatements:withResultBlock:
executeUpdate:
executeUpdate:values:error:
executeUpdate:withArgumentsInArray:
executeUpdate:withErrorAndBindings:
executeUpdate:withParameterDictionary:
executeUpdate:withVAList:
executeUpdateWithFormat:
expirationTimeForStreamDesc:
extractSQL:argumentsList:intoString:arguments:
fetchAtomBatchesRequestHandler
fetchChangesWithCompletionHandler:
fetchChangesWithError:
fileExistsAtPath:
fileSize
fileSystemRepresentation
fileURLWithPath:
finishRequest:toDevice:withError:peerInfo:
finishWritingWithError:
finishedSendingRequestsToDevice:
firstIndex
floatValue
frame
gatherAllCKSyncRecordRecordsToBeDeleted
getSchema
getSystemFieldsDataForRecordName:zoneName:recordType:
goodConnection
hadError
handleActivationForDevice:error:
handleDeleteAtomRow:usingPruner:outBookmark:outTombstoneBookmark:
handleDeletedLocation:deleteCKRecord:
handleDidSaveRecordHighestDeletedLocation:
handleDidSaveRecordSyncRecord:
handleDidSaveRecordZoneVersionRecord:
handleDiscoveryClientActivationOrError:
handleDiscoveryClientInvalidation
handleFailedToSaveRecordHighestDeletedLocation:error:
handleFailedToSaveRecordSyncRecord:error:
handleFailedToSaveRecordZoneVersion:error:
handleFailedToSaveSyncRecordResaveRecord:
handleFailedToSaveSyncRecordServerRecordChanged:error:
handleFailedToSaveSyncRecordUnknownItem:
handleFailureInFunction:file:lineNumber:description:
handleFailureInMethod:object:file:lineNumber:description:
handleFetchAtomBatchesResponse:options:error:fromDevice:forRequest:isReciprocal:
handleHighestDeletedLocationDidFetchRecord:
handleHighestDeletedLocationRecordToSaveForRecordID:
handleInterruptionForDevice:
handleInvalidationWithError:
handleRecordWithIDDeletedSyncRecord:
handleServerRecordChangedForHighestDeletedLocationError:
handleSyncRecordRecordToSaveForRecordID:
handleTransitionToNewMergeableValueRecordValueKey
handleZoneReset:
handleZoneVersionDidFetchRecord:
handleZoneVersionRecordToSaveForRecordID:
hasAnotherRow
hasDateFormatter
hasOpenResultSets
hasPrefix:
hash
highestDeletedLocationForSiteIdentifier:inStream:
highestDeletedLocationsForStream:
highestLocationWithBufferedAtomsOlderThan:forSiteIdentifier:inStream:
identifier
identifierForPublicStreamNamed:UUID:
identifierForRestrictedStreamNamed:
identifierForRestrictedStreamNamed:UUID:
identifierFromDescriptor:
identifierFromDescriptor:UUID:
idsDeviceIdentifier
inDatabase:
inDeferredTransaction:
inExclusiveTransaction:
inFlightToDevices
inImmediateTransaction:
inSavePoint:
inTransaction
inTransaction:
inUse
indexSetWithIndex:
indexSetWithIndexesInRange:
ingestNewChangesForSite:transportType:
ingestNewChangesFromAllSitesInVectorClock:transportType:
init
initForReadingFromData:error:
initFromDictionary:
initRequiringSecureCoding:
initWithArray:
initWithAssignerPolicy:
initWithAsyncOperationBlock:
initWithAtomBatch:error:
initWithCKMergeableValueID:
initWithCKMergeableValueID:streamName:
initWithCapacity:
initWithChunkerPolicy:
initWithCoder:
initWithConfiguration:
initWithContainerID:options:
initWithContainerIdentifier:environment:
initWithCustomFunctionName:
initWithData:
initWithData:encoding:
initWithData:error:
initWithDatabase:
initWithDatabase:activity:
initWithDatabase:dataSource:metadata:
initWithDatabase:transcationBatchSize:
initWithDeviceIdentifier:metadata:protocolVersion:
initWithDictionary:
initWithDistributedSyncManagers:peerStatusTracker:
initWithDistributedSyncMultiStreamManager:database:queue:
initWithDistributedSyncMultiStreamManager:queue:database:
initWithDistributedSyncMultiStreamManager:rapportManager:atomBatchChunkerPolicy:queue:database:
initWithDomain:code:userInfo:
initWithEventData:dataVersion:dataTimestamp:
initWithFMResultSet:
initWithFMResultSet:modifier:
initWithFormat:arguments:
initWithIdentifier:
initWithIdentifier:modifier:
initWithIndex:
initWithLocaleIdentifier:
initWithLocation:state:
initWithLocation:state:primaryKey:
initWithLocation:timestamp:referenceLocation:causalReference:type:bookmark:
initWithLocation:timestamp:referenceLocation:causalReference:type:valueVersion:valueData:
initWithMachServiceName:
initWithMaxBytes:
initWithMaxCount:
initWithMergeableDelta:error:
initWithMergeableValueID:timestamp:type:
initWithName:model:platform:
initWithName:zoneID:
initWithPath:
initWithPath:flags:
initWithPath:flags:vfs:
initWithPath:queue:
initWithProto:
initWithProtoData:
initWithQueue:
initWithQueue:core:
initWithQueue:forSharedUse:
initWithRPCompanionLinkDevice:
initWithRapportSyncEngine:cloudKitSyncEngine:peerStatusTracker:database:queue:
initWithRecordName:zoneID:
initWithRecordType:recordID:
initWithSQLStatements:
initWithSiteIdentifierObject:clockValue:
initWithStoreBasePath:segmentSize:
initWithStream:config:
initWithStream:permission:config:includeTombstones:
initWithStream:segment:iterationStartTime:offset:
initWithStreamCRDT:database:localSiteIdentifier:policy:
initWithStreamCRDT:locationRow:database:queue:maxDeltaSize:sessionContext:
initWithStreamID:config:policy:locationAssignerPolicy:localSiteIdentifier:database:
initWithStreamID:policyDictionary:
initWithStreamName:siteIdentifier:day:
initWithTimeIntervalSinceReferenceDate:
initWithTimestamps:
initWithURL:
initWithURL:flags:
initWithURL:flags:vfs:
initWithUUID:activity:requestBlock:queue:completionHandler:
initWithZoneName:
initWithZoneName:ownerName:
initWithZoneName:recordName:
initWriterWithMergeableValueID:metadata:formatVersion:error:
insertLocationIfNotExists:withState:
intForColumn:
intForColumnIndex:
intForQuery:
intValue
integerValue
interfaceWithProtocol:
internalState
internalStepWithError:
interrupt
invalidate
invalidateClientWithError:
invalidateDirectLinkToDevice:
isAsynchronous
isCancelled
isEnabledForDataclass:
isEqual:
isEqualToDate:
isEqualToReference:
isEqualToSet:
isEqualToString:
isExecuting
isFinished
isKindOfClass:
isManateeAvailable:
isMemberOfClass:
isOpen
isReciprocalRequest
isRecordNewerThanMostRecentDeleteForSiteIdentifier:
isSQLiteThreadSafe
isSiriCloudSyncEnabled
isSubsetOfSet:
keyEnumerator
kvcMagic:
lastCloudKitSyncAttemptDate
lastCloudKitSyncDate
lastError
lastErrorCode
lastErrorMessage
lastExtendedErrorCode
lastIndex
lastObject
lastRapportSyncAttemptDate
lastRapportSyncDate
lastSyncDateFromAnyDevice
lastSyncDateOfDeviceWithIdentifier:
latestCKAtomRowForSiteIdentifier:inStream:
latestCKAtomRowOfType:forSiteIdentifier:inStream:
latestDistributedTimestampForSiteIdentifier:inStream:
latestTombstoneBookmarkForSiteIdentifier:inStream:
length
linkState
listener:shouldAcceptNewConnection:
loadAdditionalSyncPolicyDictionaries
localDevice
localDeviceIdentifierCreatingIfNecessary
localDeviceUpdated:
localDeviceUpdatingIfNeccesaryWithProtocolVersion:
localDeviceUpdatingIfNecessary
localMergeableValue
localNameForRemoteStream:
localSiteIdentifier
localizedFailureReason
location
locationID
locationRow
locationRowWithLocation:
locationRowWithLocationID:
locationWithStreamName:siteIdentifier:timestamp:
locationsInClockVector:inStream:enumerateWithBlock:
locationsWithState:
logsErrors
longForColumn:
longForColumnIndex:
longForQuery:
longLongIntForColumn:
longLongIntForColumnIndex:
longLongValue
longValue
makeFunctionNamed:arguments:block:
makeFunctionNamed:maximumArguments:withBlock:
markAsDeliveredToDevice:withError:
markAsInFlightToDevice:
markCKRecordsAtOrBeforeLocationToBeDeletedOnSync:
maxAge
maxBusyRetryTimeInterval
maxDeltaSize
maximumNumberOfDatabasesToCreate
mergeAtomBatch:deletedLocations:sessionContext:
mergeAtomBatch:sessionContext:
mergeAtomBatches:deletedLocations:sessionContext:
mergeAtomBatches:sessionContext:forLocation:
mergeDeltas:error:
mergeIntoMergeable:error:
mergeRecordValue:error:
mergeableDeltasForMetadata:error:
mergeableRecordValueKey
mergeableValueID
messageID
metadata
methodForSelector:
metricsCollector
migration_Schema20ToSchema21
migration_StarSkySchema11ToSydRoSchema12
minimumTimeBetweenSyncsAttemptsForTransport:
minimumTimeBetweenSyncsForTransport:
minusSet:
model
modifier
modifyPendingChangesWithCompletionHandler:
moreComing
multiStreamRangeClockVectorFromIndexClockVectors:
multiStreamTimestampClockVectorToVectorClock:
multiStreamVectorClockToTimestampVectorClock:
mutableCopy
name
newEnumeratorFromBookmark:options:
newEnumeratorFromBookmark:reader:
newEnumeratorFromStartTime:options:
newHighestDeletedLocationRecordIDFor:stream:
newRestrictedStreamDefaultConfiguration
newTombstoneEnumeratorFromBookmark:
newTombstoneEnumeratorFromBookmark:reader:
newTombstoneEnumeratorFromStartTime:
newZoneVersionRecordIDForZone:
next
nextEvent
nextObject
nextTombstoneEvent
nextWithError:
null
numberWithDouble:
numberWithFloat:
numberWithInt:
numberWithInteger:
numberWithLongLong:
numberWithShort:
numberWithUnsignedChar:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedLong:
numberWithUnsignedLongLong:
numberWithUnsignedShort:
objCType
objectAtIndex:
objectAtIndexedSubscript:
objectEnumerator
objectForColumn:
objectForColumnIndex:
objectForColumnName:
objectForKey:
objectForKeyedSubscript:
objectsPassingTest:
offset
open
openFlags
openWithFlags:
openWithFlags:vfs:
originatingSiteIdentifier
osBuildVersion
parentDB
path
pathForStreamIdentifier:streamType:
peer
peerInformationWithReply:
peerStatusTracker
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
platform
pointerValue
policy
policyForStreamID:
policyForStreamID:forPlatform:
popFirstObject
populateAtomBatch:withAtomsInClockVector:forLocation:ckFormatVersion:valueVersion:chunker:
prepare:
previousLocationRowBeforeLocationRow:
primaryKey
privateCloudDatabase
processWithXPCConnection:
proto
proximity
proxyAtIndex:
pruningPolicy
pushDatabaseBackInPool:
query
queue
raise
rangeTimestampClockVectorFromIndexClockVector:
rapportIdentifier
rapportManager:didDiscoverBMRapportDevice:
rapportManager:didLoseNearbyBMRapportDevice:
rapportManager:isDeviceSupported:
rapportManager:localDeviceUpdated:
rapportManagerDiscoveryTimedOut:
rapportSyncEngine
rapportSyncWithReply:
readFrom:
readerForSiteIdentifier:
reciprocalCompletionBlock
recordAtomMergeResult:inStream:ownerSite:originatingSite:eventCreatedAt:sessionContext:
recordAtomMergeResult:inStream:sessionID:messageID:ownerSite:originatingSite:eventCreatedAt:
recordFromSystemFieldsData:
recordID
recordIDsToDelete
recordMessageToDeviceIdentifier:reachable:bytes:isReciprocal:sessionContext:
recordMessageToDeviceIdentifier:sessionID:messageID:reachable:bytes:isReciprocal:
recordName
recordNameFromSite:day:
recordSessionEnd:lastSyncDate:
recordSessionEnd:timeSincePreviousSync:
recordSessionStart:transport:reason:isReciprocal:
recordType
recordZoneIDsToDeleteForSyncEngine:
recoveryState
reference
referenceLocation
references
registerEventID:eventHandler:
registerEventID:options:handler:
registerForSigterm
registerRequestID:options:handler:
registerRequestID:requestHandler:
registerRequests
registeredEventClass
registeredRequests
rekey:
rekeyWithData:
releaseAllDatabases
remoteStreamName
removeAllDeletedLocationsBeforeHighestDeletedLocation:
removeAllObjects
removeItemAtPath:error:
removeLastObject
removeObject:
removeObjectForKey:
requestBlock
requestQueue
requestTimeout
requestTimeoutDidFire
requestTimeoutHandler
resaveRecord:
resaveRecordOnError:
reset
resetCKRecordsMetaDataAndSetToSyncForZone:
resetMetadataForRecord:zoneName:
respondsToSelector:
resultData:context:
resultDict
resultDictionary
resultDouble:context:
resultError:context:
resultErrorCode:context:
resultErrorNoMemoryInContext:
resultErrorTooBigInContext:
resultInt:context:
resultLong:context:
resultNullInContext:
resultSetDidClose:
resultSetWithStatement:usingParentDatabase:shouldAutoClose:
resultString:context:
resume
retain
retainCount
rollback
rollbackToSavePointWithName:error:
runRequest:onDevice:
runRequestOnDevice:
saveCKMergeableRecordValueRecordName:zoneName:mergeableRecordValueData:
saveCKRecordHighestDeletedLocationRow:recordName:zoneName:recordExists:
saveCKRecordLocalMergeableValue:recordName:zoneName:locationRow:
saveCKRecordServerMergeableValue:recordName:zoneName:locationRow:
saveCKSyncEngineMetaData:
saveLatestTombstoneBookmark:forSiteIdentifier:inStream:
saveSystemFieldsDataForRecord:syncToCloudKit:recordType:crdtDeleted:
segmentName
segmentSize
self
sendCKRecordCRDTLog:
sendEvent:event:toDevice:completionHandler:
sendEvent:payload:
sendEventID:event:options:completion:
sendFetchAtomBatchesRequest:toDevice:forRequest:
sendNextRequestToDevice:
sendRequest:request:device:options:responseHandler:
sendRequest:request:toDevice:responseHandler:
sendRequestID:request:options:responseHandler:
sendSyncDatabaseSummaryWithDatabase:
sendSyncSessionLog:
serialize
serialize:
serializeProto
serviceTypes
sessionContext
sessionID
setActivity:
setApplicationID:
setAtomBatchBytes:
setAtomBatchVersion:
setAtomBehavior:
setAtomType:
setAutomaticSyncingEnabled:
setBatchSequenceNumber:
setBatchSize:
setBmDeviceIdentifier:
setBusyRetryTimeout:
setCachedStatement:forQuery:
setCachedStatements:
setCheckedOut:
setCkSyncEngine:
setClient:
setClock:
setCloudKitSyncEngine:
setCompletionHandler:
setConfiguration:
setContainer:
setControlFlags:
setCorruptionHandler:
setCrashOnErrors:
setDataSource:
setDatabase:
setDateFormat:
setDateOfLastVacuum:
setDelegate:
setDeletedLocations:
setDeliveredToDevices:
setDestinationDevice:
setDevice:
setDeviceChangedHandler:
setDeviceFoundHandler:
setDeviceLostHandler:
setDispatchQueue:
setDistributedSyncMultiStreamManager:
setErrorFromDevice:
setExportedInterface:
setExportedObject:
setFetchChangesForMergeableValues:
setIdentifier:
setInFlightToDevices:
setInUse:
setInterruptionHandler:
setInvalidationHandler:
setIsOpen:
setIsReciprocalRequest:
setLastCloudKitSyncDate:
setLastRapportSyncAttemptDate:
setLastRapportSyncDate:
setLastSyncDate:forDeviceWithIdentifier:
setLinkState:
setLocalDeviceIdentifier:
setLocalDeviceUpdatedHandler:
setLocale:
setLogsErrors:
setMaxBusyRetryTimeInterval:
setMaxDeltaSize:
setMaximumNumberOfDatabasesToCreate:
setMergeableRecordValueKey:
setMessageID:
setMetricsCollector:
setModifier:
setMoreComing:
setNeedsToFetchChanges
setObject:forKey:
setObject:forKeyedSubscript:
setOriginatingSiteIdentifier:
setParentDB:
setPath:
setPeer:
setProtocolVersion:
setQuery:
setQueue:
setRapportSyncEngine:
setReciprocalCompletionBlock:
setRegisteredRequests:
setRemoteObjectInterface:
setRemoteStreamName:
setRequestBlock:
setRequestQueue:
setRequestTimeout:
setRequestTimeoutHandler:
setSessionContext:
setSessionID:
setShouldAutoClose:
setShouldCacheStatements:
setShouldCacheStatementsWithoutClearingExistingStatements:
setSiteIdentifier:
setState:
setState:errorFormat:
setStatement:
setStoreLocationOption:
setSyncScheduler:
setTimeZone:
setTraceExecution:
setType:
setUnderlyingQueue:
setUnordered:
setUseCount:
setUuid:
setValue:
setValue:forKey:
setValue:forMetadataKey:
setVectorClockTo:forStreamIdentifier:
setVersion:
setVfsName:
setWalltime:
setWithArray:
sharedInstance
shortValue
shortenedRapportIdentifier
shouldCacheStatements
siteIdentifier
siteIdentifierObject
siteSuffix
size:error:
sizeOfSerializedStateVectorInBytes:
sizeOfTableInKilobytes:
splitWithMaximumSize:error:
sqlStatements
sqliteHandle
sqliteLibVersion
sqlitePath
standardUserDefaults
start
startClient
startRequestTimeout
startSavePointWithName:error:
startServer
startWithCompletionBlock:
state
stateVector
stateVectorForLocationRow:
statement
statusFlags
step
stepWithError:
stop
stopRequestTimeout
storeConfigurationForStream:
storeableDateFormat:
streamCRDT
streamDescriptorSupportsCloudKitSync:
streamForStreamIdentifier:
streamID
streamIdentifier
streamName
streamNameToStreamDescriptorDict
streamSupportsCloudKitSync:
streamSyncName
stringByAppendingString:
stringByDeletingLastPathComponent
stringByDeletingPathExtension
stringByReplacingOccurrencesOfString:withString:
stringForColumn:
stringForColumnIndex:
stringWithCapacity:
stringWithFormat:
stringWithUTF8String:
substringFromIndex:
substringToIndex:
substringWithRange:
superclass
supportsSecureCoding
supportsSyncingWithPlatform:overTransport:inDirection:
supportsTransport:direction:
syncAllTransportsNowIfPolicyAllowsWithReason:activity:
syncCloudKitNowIfPolicyAllowsWithReason:activity:completionHandler:
syncDirectory
syncEngine:accountChangedFromUserRecordID:toUserRecordID:
syncEngine:didCompleteModifyRecordsBatch:error:
syncEngine:didDeleteRecordWithID:
syncEngine:didDeleteRecordZoneWithID:
syncEngine:didEndFetchingChangesForZoneID:
syncEngine:didFetchRecord:
syncEngine:didSaveRecord:
syncEngine:didSaveRecordZone:
syncEngine:didUpdateMetadata:
syncEngine:failedToDeleteRecordWithID:error:
syncEngine:failedToDeleteRecordZoneWithID:error:
syncEngine:failedToFetchChangesForRecordZoneID:error:
syncEngine:failedToSaveRecord:error:
syncEngine:failedToSaveRecordZone:error:
syncEngine:nextBatchOfRecordsToModifyForZoneIDs:
syncEngine:recordToSaveForRecordID:
syncEngine:recordWithIDWasDeleted:recordType:
syncEngine:relatedApplicationBundleIdentifiersForZoneIDs:recordIDs:
syncEngine:shouldFetchAssetContentsForZoneID:
syncEngine:shouldFetchChangesForZoneID:
syncEngine:willBeginFetchingChangesForZoneIDs:
syncEngine:zoneWithIDChanged:
syncEngine:zoneWithIDWasDeleted:
syncEngine:zoneWithIDWasDeletedDueToUserEncryptedDataReset:
syncEngineDidBeginFetchingChanges:
syncEngineDidEndFetchingChanges:
syncEngineDidEndModifyingPendingChanges:
syncEngineWillBeginFetchingChanges:
syncEngineWillBeginModifyingPendingChanges:
syncNowIfPolicyAllowsWithReason:transportType:activity:
syncNowWithReason:activity:completionHandler:
syncRapportNowIfPolicyAllowsWithReason:activity:completionHandler:
syncScheduler
syncSessionDidEnd
syncSessionDidStartWithReason:
syncableStreamIDs
syncableStreamIDsForPlatform:
tableExists:
timeIntervalSince1970
timeIntervalSinceDate:
timeIntervalSinceNow
timeIntervalSinceReferenceDate
timeZoneForSecondsFromGMT:
timestamp
timestampClockVectorForStreamIdentifier:
timestampClockVectorForStreamName:
timestampClockVectorToTimeStampVector:
timestampCount
timestampCountForSiteIdentifier:
timestampCountForStateVector:
timestampVectorToTimeStampClockVector:
timestamps
traceExecution
triggerCloudKitSyncWithReply:
triggerRapportSyncWithReply:
triple
truncateDateToDay:
type
unarchivedObjectOfClass:fromData:error:
unarchivedObjectOfClasses:fromData:error:
unionSet:
unordered
unseenPeers
unsignedCharValue
unsignedIntValue
unsignedIntegerValue
unsignedLongLongIntForColumn:
unsignedLongLongIntForColumnIndex:
unsignedLongLongValue
unsignedLongValue
unsignedShortValue
update:withErrorAndBindings:
updateAllCKRecordsAtOrBeforeLocationToBeDeletedOnSync:
updateAllLocationsAtOrBefore:state:
updateCKAtomRow:inStream:
updateClockVectorByUnionWithUnseenSiteIdentifiers:
updateLocationState:forLocation:
uploadChangesWithError:
upsertCKRecordWithLocation:inStream:
upsertSyncDevicePeer:
upsertSyncDevicePeer:isMe:
useCount
userInfo
userVersion
uuid
vacuumWithShouldContinueBlock:
validateSQL:error:
value
valueData
valueData:
valueDouble:
valueForKey:
valueForMetadataKey:
valueInt:
valueLong:
valueString:
valueType:
valueVersion
valueWithNonretainedObject:
vectorClock
walSizeInKilobytes
walltime
warnInUse
willChangeValueForKey:
writeAtomValue:fromAtomRow:usingWriter:outBookmark:
writeEventBodyClass:
writeTo:
zone
zoneID
zoneName
zoneUUID
BiomeSync
v8@?0
<%@: location=%@, state=%lu>
location_
ref_location_
%@%@
stream
site
state
CRDTLocation
stream = ?
 AND site = ?
 AND day = ?
id = ?
 AND day <= ?
 AND state = ?
 AND day < ?
 AND NOT EXISTS (SELECT * FROM CKAtom WHERE location_id = id)
 AND NOT EXISTS (SELECT location_id FROM CKRecord WHERE location_id = id)
day DESC
state = ?
day = (select max(day) from CRDTLocation i where i.stream = ? and i.site=CRDTLocation.site
 and state = ?)
 AND stream = ?
 AND state = ? 
count(*)
no session ID
device_identifier
name
model
platform
protocol_version
DevicePeer
me IS ?
device_identifier = ?
max(last_sync_date)
last_sync_date
deviceIdentifier
deviceMetadata
protocolVersion
BMRapportRequest
v16@?0@"BMRapportDevice"8
com.apple.biomesyncd.fetchAtomBatches
v32@?0@"NSDictionary"8@"NSDictionary"16@"NSError"24
senderModelID
Unable to determine sender model info
Unknown platform
v24@?0@"NSArray"8@"NSArray"16
v32@?0@"NSDictionary"8@"NSDictionary"16@?<v@?@"NSDictionary"@"NSDictionary"@"NSError">24
relative_pos
state_vector_sites_cnt
state_vector_size_est
state_vector_timestamp_cnt
stream_name
v48@?0@"CKDistributedSiteIdentifier"8{_NSRange=QQ}16C32C36^B40
com.apple.biome.syncSessionLog
com.apple.biome.syncdatabase
com.apple.biome.ckrecordcrdt
database_size
wal_size
num_rows_CKAtom
CKAtom
table_size_CKAtom
num_rows_CKRecord
CKRecord
table_size_CKRecord
num_rows_CRDTLocation
time_since_vacuum
table_size_CRDTLocation
com.apple.biomesyncd
com.apple.biomesyncd.metrics-collection
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.biomesyncd.database-maintenance
B8@?0
com.apple.biomesyncd.periodic-sync
com.apple.notifyd.matching
Notification
com.apple.rapport.CompanionLinkDeviceAdded
com.apple.rapport.matching
replyRequired
context_sync
void *BiomeLibraryLibrary(void)
biomesyncd.m
vectorClock
BMStreamCKCRDT.m
Invalid parameter not satisfying: %@
streamID
config
database
v24@?0@"CKAtomReferenceMutableProxy"8Q16
v24@?0@"CKAtomMutableProxy"8Q16
v16@?0^B8
v24@?0@"BMSyncCKAtomRow"8^B16
v24@?0@"BMSyncCRDTLocationRow"8^B16
v32@?0@"BMSyncCRDTLocationRow"8Q16^B24
v32@?0@"CKAtomProxy"8Q16^B24
BMFrameStatePreWrite
BMFrameStateWritten
BMFrameStatePreDelete
BMFrameStateDeleted
BMFrameStateEOF
BMFrameStateUnknown
BMFrameStateUnknown(%lu)
%@ %@
type
value
Append
TTLDelete
RandomDelete
Modify
Unknown
(unknown: %i)
zone_name
zone_uuid
recovery_state
attempted_recovery_date
CKZone
zone_name = ?
UUID not set
com.apple.biomesyncd.rapport
v16@?0@"RPCompanionLinkDevice"8
v20@?0@"RPCompanionLinkDevice"8I16
v16@?0@"NSError"8
v12@?0B8
~~REQUEST_ID~~
~~RESPONSE_HANDLER~~
~~OPTIONS~~
failed with error, 
completed
BMRapportDevice[%@]: id=%@ bmID=%@ model=%@ name=%@
device
Immed
Near
peer
walltime
batchSize
batchSequenceNumber
isReciprocalRequest
atomBatchVersion
unseenPeers
atomBatches
moreComing
deletedLocations
biomesyncdStrings
AdditionalSyncPolicies
eventClass
restricted/feedbackSocialHighlights
BMSocialHighlightFeedbackEvent
public/DeviceMetadata
BMDeviceMetadataEvent
restricted/SiriMemoryReferenceResolutionStream
BMSiriMemoryReferenceResolutionEvent
public/AppLaunch
BMAppLaunchEvent
public/NowPlaying
BMNowPlayingEvent
5015B088-E292-411F-9AEB-40E2B4BF3931
overrideInternalPolicy
rapport
direction
outbound
cloudkit
none
BMSyncPolicy.m
Unexpected direction %lu
NSString *NSStringFromBMSyncTransportType(BMSyncTransportType)
No mapping found for BMSyncTransportType(%lu)
inbound
BMSyncDirection BMSyncDirectionFromNSString(NSString *__strong)
No mapping found for %@
BMSyncCKAtomRow.m
location
timestamp
<%@: type=%@, location=%@, atomID=%@, refID=%@ bookmarkOffset=%lu>
clock
segment_name
segment_offset
ref_type
ref_site
ref_clock
value_version
value_data
location_id
on_disk
ref_location_id
CKAtom.site = ?
 AND CKAtom.stream = ?
 AND clock = ?
 AND on_disk IS ?
clock DESC
max(clock)
v24@?0@"_bmFMResultSet"8^B16
location_id = ?
clock ASC
type = ?
 AND CKAtom.site = ?
 AND segment_name IS NOT ?
clock = ?
 AND type = ?
 AND segment_name = ?
 AND segment_offset = ?
site = ?
DISTINCT site
(ref_site = ?
 OR (ref_site IS NULL AND CKAtom.site = ?))
ref_clock ASC
type ASC
location.stream = ?
 AND location.site = ?
 AND location.day <= ?
ref_clock DESC
location_id IN (SELECT id from CRDTLocation where stream = ?
 AND day <= ?)
 AND clock != ?
 AND clock != (SELECT MAX(clock) FROM CKAtom WHERE stream = ?
 AND site = ?)
CKAtom.stream = ? 
 AND ((CKAtom.site = ? 
) OR (CKAtom.site = ? 
AND clock = ? 
OR clock = ? 
AND clock >= ? 
OR clock >= ? 
AND clock BETWEEN ? 
OR clock BETWEEN ? 
 AND ?
v32@?0{_NSRange=QQ}8^B24
)) AND on_disk IS ?
location.stream as location_stream
location.site as location_site
location.day as location_day
location.state as location_state
 LEFT JOIN CRDTLocation location ON location_id=location.id
location_id, location.stream, location.site, location.day, location.state
location.stream
location.site
location.day ASC
 AND CKAtom.location_id = ? 
CKAtom.stream = ?
COUNT ((CAST(segment_name AS INT) > ?
 OR segment_name = ?
 AND segment_offset > ?) OR NULL) == 0
location.day DESC
 AND on_disk IS NOT ?
CKAtom.*
ref_location.stream as ref_location_stream
ref_location.site as ref_location_site
ref_location.day as ref_location_day
ref_location.state as ref_location_state
 LEFT JOIN CRDTLocation ref_location ON ref_location_id=ref_location.id
com.apple.biomesyncd.sync
com.apple.private.biome.sync
com.apple.internal.biome.sync
-[BMSyncServiceServer triggerRapportSyncWithReply:]
-[BMSyncServiceServer rapportSyncWithError:]
-[BMSyncServiceServer triggerCloudKitSyncWithReply:]
-[BMSyncServiceServer cloudKitSyncWithError:]
isMe
platformDescription
BMRapportErrorDomain
SELECT %@ FROM %@
 WHERE 
 GROUP BY %@
 ORDER BY %@
 LIMIT %@
 HAVING 
UPDATE OR FAIL %@ SET 
 = ?, 
 = ?
INSERT INTO %@
) VALUES (
DELETE FROM %@
%@:%lu
com.apple.biome.sync.ckMetaData
LastSyncAttemptDate
LastSyncDate
LastCloudKitAttemptDate
LastCloudKitSyncDate
MergeableRecordValueKey
CKMergeableRecordValue
record_name
server_mergeable_value
stream_name = ?
 AND record_name = ?
TombstoneBookmark
AND site = ?
BMSyncAtomType(%llu)
BiomeStream
atomType
atomValue
data
dataVersion
dataTimestamp
zoneVersion
crdtDeleted
biomeCRDT
streamCRDT
zoneVersionUUID
com.apple.biome.sync
unknown
syncRecord
highestDeletedLocation
(unknown: %lu)
v16@?0@?<v@?>8
Sync to iCloud for Siri disabled, no sync via iCloud performed
v24@?0@"CKAccountInfo"8@"NSError"16
v24@?0@"NSData"8^B16
v24@?0@"BMSyncCKRecord"8^B16
v24@?0@"BMSyncCKZone"8^B16
v16@?0@"CKAtomBatch"8
NowPlaying
BMDistributedSyncMultiStreamManager.m
direction == BMSyncDirectionOutbound
stream_identifier
local_mergeable_value
sync_to_cloud_kit = ?
 AND deleting = ?
 AND record_type = ?
 AND stream_identifier = ?
record_metadata
sync_to_cloud_kit
deleted_crdt
record_name = ?
record_type
stream_identifier = ?
deleting
record_type = ?
 AND location_id IN (     SELECT id FROM CRDTLocation WHERE site = ?
     AND stream = ?
     AND day <= ?)
 LEFT JOIN CRDTLocation location ON location_id=location.id 
deleting = ?
 AND EXISTS (SELECT record_name FROM CKMergeableRecordValue WHERE CKMergeableRecordValue.stream_name=CKRecord.stream_identifier AND CKMergeableRecordValue.record_name=CKRecord.record_name AND server_mergeable_value IS NOT NULL)
v24@?0@"CKRecordID"8^B16
location_id =?
location_id IN (SELECT id FROM CRDTLocation WHERE site = ?
 AND stream = ?)
 AND deleted_crdt = ?
BMSyncStreamID.m
streamName.length
stream != BMPublicStreamUnknown
public/
restricted/
public/%@
restricted/%@
identifier
isExecuting
isFinished
never
com.apple.biome.syncNow
[BMCloudKitSyncEngine start] failed: %@
BMSyncScheduler
v20@?0B8@"NSError"12
eventData
migration_StarSkySchema11ToSydRoSchema12
ALTER TABLE CKRecord DROP COLUMN mergeable_value_delta
ALTER TABLE CKRecord ADD COLUMN server_mergeable_value BLOB
ALTER TABLE CKRecord ADD COLUMN local_mergeable_value BLOB
ALTER TABLE CKAtom ADD COLUMN value_version INTEGER
UPDATE CKAtom SET value_version = 0
CREATE INDEX IF NOT EXISTS idx_syncmessagelog_session_id ON SyncMessageLog(session_id)
CREATE INDEX IF NOT EXISTS idx_atommergedlog_owning_site_identifier ON AtomMergedLog(owning_site_identifier)
CREATE INDEX IF NOT EXISTS idx_atommergedlog_session_id ON AtomMergedLog(session_id)
CREATE TABLE CKZone(zone_name STRING NOT NULL, zone_uuid STRING NOT NULL, recovery_state INTEGER, attempted_recovery_date INTEGER)
migration_Schema20ToSchema21
ALTER TABLE CKRecord ADD COLUMN record_type INTEGER
UPDATE CKRecord SET record_type = 1
ALTER TABLE SyncSessionLog ADD COLUMN time_since_previous_sync INTEGER
UPDATE SyncSessionLog SET time_since_previous_sync = -1
ALTER TABLE CKRecord ADD COLUMN deleted_crdt BOOL
UPDATE CKRecord SET deleted_crdt = 0
sync.db
-wal
BMSyncDatabase.m
path
recursion max
failed to create path: %@
PRAGMA journal_mode = WAL;PRAGMA foreign_keys = ON;
Metadata
version too new
com.apple.Biome
internal build version < 17
internal build version between 17 and 19
custom migration to version %u failed with error %@
migration to version %u failed with error %@
failed to delete corrupt database file: %@
unhandled state %llu
SELECT value FROM Metadata WHERE key=?
INSERT INTO Metadata VALUES (?, ?)
PRAGMA foreign_keys=OFF
idx_crdt_location
idx_crdt_location_state
SELECT type, name FROM sqlite_schema WHERE tbl_name = 'CRDTLocation'
table
CREATE TABLE new_CRDTLocation (id INTEGER primary key, stream STRING NOT NULL, site STRING NOT NULL, day INTEGER NOT NULL, state INTEGER NOT NULL)
INSERT INTO new_CRDTLocation SELECT * FROM CRDTLocation
DROP TABLE CRDTLocation
ALTER TABLE new_CRDTLocation RENAME TO CRDTLocation
CREATE INDEX IF NOT EXISTS idx_crdt_location ON CRDTLocation(stream, site, day)
CREATE INDEX IF NOT EXISTS idx_crdt_location_state ON CRDTLocation(stream, site, state, day DESC)
CREATE TABLE IF NOT EXISTS CKRecord (location_id INTEGER, sync_to_cloud_kit BOOL, record_metadata BLOB, record_name STRING, stream_identifier STRING, mergeable_value_delta BLOB, deleting BOOL, FOREIGN KEY (location_id) REFERENCES CRDTLocation(id));
CREATE INDEX IF NOT EXISTS idx_ckrecord ON CKRecord(record_name)
PRAGMA foreign_key_check
PRAGMA foreign_keys=ON
CREATE TABLE new_CKRecord (location_id INTEGER, sync_to_cloud_kit BOOL, record_metadata BLOB, record_name STRING, stream_identifier STRING, local_mergeable_value BLOB, deleting BOOL,  PRIMARY KEY (stream_identifier, record_name), FOREIGN KEY (location_id) REFERENCES CRDTLocation(id));
INSERT INTO new_CKRecord SELECT location_id, sync_to_cloud_kit, record_metadata, record_name, stream_identifier, local_mergeable_value, deleting FROM CKRecord
DROP TABLE CKRecord
ALTER TABLE new_CKRecord RENAME TO CKRecord
CREATE TABLE IF NOT EXISTS CKMergeableRecordValue (stream_name STRING, record_name STRING, server_mergeable_value BLOB, FOREIGN KEY (stream_name, record_name) REFERENCES CKRecord(stream_identifier, record_name))
select transport as transport_type, session_duration.session_id, time_since_previous_sync, duration, reachable_peers_cnt, is_reciprocal, reason as sync_reason, cast((select count(*) from DevicePeer) as text) as known_peers_cnt_str, cast(reachable_peers_cnt as real) / (select count(*) from DevicePeer) as peer_availabilty_pct, avg_sync_latency, atoms_dropped_cnt, atoms_causality_violation_cnt, atoms_received_cnt, atoms_relayed_cnt, relay_earliness, relay_unseen_peer_atom_cnt, atom_batch_bytes from ( select transport, session_id, is_reciprocal, reason, (end_timestamp - start_timestamp) as duration, time_since_previous_sync from SyncSessionLog group by session_id, is_reciprocal, reason ) as session_duration left join ( select session_id, count(distinct device_identifier) as reachable_peers_cnt from SyncMessageLog group by session_id ) as reachable_peers on session_duration.session_id=reachable_peers.session_id left join ( select session_id, avg(case when event_created_at <> 0 then synced_at - event_created_at else null end) as avg_sync_latency from AtomMergedLog group by session_id ) as sync_latency on session_duration.session_id=sync_latency.session_id left join ( select a.session_id, sum(case when a.merge_result=1 THEN 1 else 0 end) as atoms_dropped_cnt, sum(case when a.merge_result=2 THEN 1 else 0 end) as atoms_causality_violation_cnt, sum(case when a.merge_result=3 THEN 1 else 0 end) as atoms_received_cnt from AtomMergedLog as a group by a.session_id ) as merge_results on session_duration.session_id=merge_results.session_id left join ( select session_id, count(*) as atoms_relayed_cnt from AtomMergedLog as a where owning_site_identifier <> relayed_by_site_identifier and not exists ( select * from SyncMessageLog as m where a.session_id=m.session_id and device_identifier=owning_site_identifier and reachable=1 ) group by session_id ) as relay_count on session_duration.session_id=relay_count.session_id left join ( select relayed.session_id, avg(timestamp - synced_at) as relay_earliness from ( select atom.session_id, synced_at, timestamp from AtomMergedLog as atom, SyncMessageLog as message where owning_site_identifier <> relayed_by_site_identifier and not exists ( select * from SyncMessageLog as m where atom.session_id=m.session_id and device_identifier=owning_site_identifier and reachable=1 ) and device_identifier=owning_site_identifier and reachable=1 and timestamp > synced_at order by timestamp asc limit 1 ) as relayed group by relayed.session_id ) as earliness on session_duration.session_id=earliness.session_id left join ( select session_id, count(*) as relay_unseen_peer_atom_cnt from AtomMergedLog as a where owning_site_identifier <> relayed_by_site_identifier and not exists ( select * from SyncMessageLog as m where device_identifier=owning_site_identifier and reachable=1 ) group by session_id ) as atom_relay_unseen_device on session_duration.session_id=atom_relay_unseen_device.session_id left join ( select session_id, sum(atom_batch_bytes) as atom_batch_bytes from SyncMessageLog group by session_id ) as batch_bytes on session_duration.session_id=batch_bytes.session_id;
SyncSessionLog
session_id
transport
reason
is_reciprocal
start_timestamp
end_timestamp
time_since_previous_sync
session_id = ?
SyncMessageLog
message_id
reachable
atom_batch_bytes
AtomMergedLog
owning_site_identifier
relayed_by_site_identifier
merge_result
event_created_at
synced_at
DELETE FROM SyncMessageLog WHERE timestamp <> (SELECT max(timestamp) FROM SyncMessageLog message WHERE device_identifier=message.device_identifier)
DELETE FROM SyncSessionLog
DELETE FROM AtomMergedLog
LastVacuumDate
PRAGMA page_count
PRAGMA freelist_count
PRAGMA auto_vacuum
PRAGMA auto_vacuum = 2
VACUUM
PRAGMA incremental_vacuum(%lu)
SELECT name FROM sqlite_schema WHERE type='table' AND name=?
SELECT COUNT(*) FROM %@
SELECT SUM(pgsize) FROM dbstat WHERE name = ?
(%@, %@, %@)
(%@,%@,%@)
%@,%@
(%@,%@)
-[_bmFMDatabase initWithPath:]
FMDatabase.m
sqlite3_threadsafe()
2.7.7
FMDBVersion is invalid: Please use FMDBUserVersion instead.
:memory:
error opening!: %d
Closing leaked statement
error closing!: %d
%s:%d
-[_bmFMDatabase busyRetryTimeout]
FMDB: busyRetryTimeout no longer works, please use maxBusyRetryTimeInterval
-[_bmFMDatabase setBusyRetryTimeout:]
FMDB: setBusyRetryTimeout does nothing, please use setMaxBusyRetryTimeInterval:
B24@?0@"_bmFMStatement"8^B16
query
API misuse, -[_bmFMDatabase setCachedStatement:forQuery:] query must not be nil
en_US
select name from sqlite_master where type='table'
The _bmFMDatabase %@ is currently in use.
The _bmFMDatabase %@ is not open.
NULL
%@ executeQuery: %@
DB Error: %d "%@"
DB Query: %@
DB Path: %@
%@ = %@
Error: unable to bind (%d, %s
Could not find index for %@
data: %ld bytes
obj: %@
Error: the bind count is not correct for the # of variables (executeQuery)
Error inserting batch: %s
rollback transaction
commit transaction
begin exclusive transaction
begin deferred transaction
begin immediate transaction
savepoint '%@';
release savepoint '%@';
rollback transaction to savepoint '%@';
dbSavePoint%ld
%@ %ld hit(s) for query %@
WARNING: Requested sleep of %i milliseconds, but SQLite returned %i. Maybe SQLite wasn't built with HAVE_USLEEP=1?
select [sql] from sqlite_master where [type] = 'table' and lower(name) = ?
SELECT type, name, tbl_name, rootpage, sql FROM (SELECT * FROM sqlite_master UNION ALL SELECT * FROM sqlite_temp_master) WHERE type != 'meta' AND name NOT LIKE 'sqlite_%' ORDER BY tbl_name, type DESC, name
pragma table_info('%@')
pragma application_id
pragma application_id=%d
pragma user_version
pragma user_version = %d
FMResultSet.m
![statement inUse]
Warning: There seem to be no columns in this set.
%s:%d Database busy (%@)
-[_bmFMResultSet internalStepWithError:]
Database busy
Error calling sqlite3_step (%d: %s) rs
parentDB does not exist
_bmFMDatabase
Unknown error calling sqlite3_step (%d: %s) rs
Warning: I could not find the column named '%@'.
Database already in pool
The _bmFMDatabase being put back into the pool is already present in the pool
Maximum number of databases (%ld) has already been reached!
Could not open up the database at path %@
Could not create database queue for path %@
fmdb.%@
_bmFMDatabaseQueue could not reopen database for path %@
-[_bmFMDatabaseQueue inDatabase:]
FMDatabaseQueue.m
currentSyncQueue != self && "inDatabase: was called reentrantly on the same queue, which would lead to a deadlock"
Warning: there is at least one open result set around after performing [_bmFMDatabaseQueue inDatabase:]
savePoint%ld
locationRow is nil, returning empty state vector
mergeDeltas delta: %@
Failed to initWithMergeableDelta with error %@
BMStreamCKRecordCRDT: unable to init a CKAtomBatch with initWriterWithMergeableValueID:%@ error:%@
BMStreamCKRecordCRDT: unable to complete a CKAtomBatch with finishWritingWithError:%@ error:%@
BMStreamCKRecordCRDT: failed to split atom batch with error %@
BMStreamCKRecordCRDT: failed to calculate batch size with error %@
BMStreamCKRecordCRDT: split into batch of size %@
BMStreamCKRecordCRDT: unable to init a CKMergeableDelta with initWithAtomBatch:%@ error:%@
*** deltas: %@
unexpected modifier %lu
updateLocationState: %lu forLocation:%@
updateAllLocationsAtOrBefore:%@ to state %lu
BMMultiStreamVectorClockConverter found nil modifier on siteIdentifier: %@
Expected only one value in indexSet of timestampClockVector, found %lu
sessionContext is nil
BMRapportSyncEngine%@: completing request, still inflight: %@
BMRapportSyncEngine%@: completeRequest:deliveredToDevices %@ withErrors:%@
BMRapportSyncEngine%@: request %@ already finished running
BMRapportSyncEngine%@: sending request to device: %@
BMRapportSyncEngine%@: request timed out because no devices are nearby
BMRapportSyncEngine%@: current watch disallowed from syncing with non-paired device: %@
BMRapportSyncEngine%@: current platform disallowed from syncing with non-paired watch: %@
BMRapportSyncEngine%@: syncing with device platform disallowed for device: %@
BMRapportSyncEngine%@: received request %@ %@
BMRapportSyncEngine%@: unable to determine sender model info: %@
BMRapportSyncEngine%@: unable to determine platform for model %{public}@
BMRapportSyncEngine%@: replying with CKXUncompressedFormatVersion atom batch
BMRapportSyncEngine%@: mismatched protocol version %lu, expected %d
BMRapportSyncEngine%@: should issue reciprocal request, %@
BMRapportSyncEngine%@: fetch completion handler is reciprocal, YES, deviceIdentifiers, %@, errors, %@
BMRapportSyncEngine%@: handleFetchAtomBatchesResponse %@ error %@ fromDevice: %@
BMRapportSyncEngine%@: fetchAtomBatchesResponseHandler received response %@
BMRapportSyncEngine%@: asked to defer activity, won't issue more requests to device %@ even though more data is available
BMRapportSyncEngine%@: max request depth %lu hit, finishing request to device %@
BMRapportSyncEngine%@: sending request to device %@ with sequence number %lu
BMRapportSyncEngine%@: no more data coming from device %@ finishing request
BiomeSync is disabled on simulators, -[BMSyncCore start] returning NO
%@ - has validStreamNames: %@
%@ - locationRow with day: %@ has relativePosition: %@
%@ - generated crdtLog: %@
%@ could not archive state vector: %@
biomesyncd launched
biomesyncd last exit status: %lld
Tried to defer activity %s, but failed
biome activity fired "com.apple.biomesyncd.metrics-collection"
Database unavailable for activity "com.apple.biomesyncd.metrics-collection"
biome running activity "com.apple.biomesyncd.metrics-collection"
biome activity fired "com.apple.biomesyncd.database-maintenance"
database unavailable for activity "com.apple.biomesyncd.database-maintenance"
biome running activity "com.apple.biomesyncd.database-maintenance"
Received unexpected object on com.apple.notifyd.matching: %@
Received com.apple.notifyd.matching: %s
Handling com.apple.notifyd.matching: %s
Database unavailable to handle "com.apple.rapport.CompanionLinkDeviceAdded"
Received unexpected object on com.apple.rapport.matching: %@
Received com.apple.rapport.matching: %s
Handling com.apple.rapport.matching: %s
Database unavailable to handle RapportWake
Received SIGTERM
failed to set user dir suffix: %{darwin.errno}d
failed to initialize temporary directory: %{darwin.errno}d
failed to resolve temporary directory: %{darwin.errno}d
biome activity fired "%s"
Database unavailable for activity "%s"
biome running activity "%s"
Starting tombstone enumerator from 0 for stream %@ site %@
Starting tombstone enumerator from segment %@ offset %lu for stream %@ site %@
delete must reference a corresponding append
Expected no-data frame to be delete or pre-delete, but frame was %{public}@
appendRecord %@ is of unexpected type %lu
bookmark is nil, presumably because the referenced atom was a dummy append (dead on arrival) %@
deleting event at bookmark %@
dropping atom %@ as it is dead on arrival
writeAtomValue: %@
adding %@ to atomBatch
ingestChangesForSite: %@
observed new data from non-local site %@
read new appended BMStoreEvent: %@ at offset %lu
failed to insert record %@
read new deleted BMStoreEvent: %@ at offset %lu
failed to batch ingest changes
read BMStoreEvent tombstone: %@ at tombstone bookmark %@
tombstone with unexpected deletion reason %lu
failed to batch ingest deletions
deleteLocationsUpToTTLAtTombstone: %@, siteIdentifier: %@
deletedExpiredBufferedLocationsForSiteIdentifier: %@
failed to delete atoms with location: %@
atomTableRecord %@
%@ location is not active
BMSyncCKAtomRow missing bookmark %@
Next enumerator bookmark %@ doesn't match expected %@
read table BMStoreEvent: %@ at offset %lu
bookmark is DOA, not attempting to resolve event
populateAndEnumerateAtomBatches could not finish writing atomBatch with err: %@
atomsInClockVector: %@, stream: %@
creating new batch with location %@
could not create new batch with location %@
handleDeletedLocation: %@
failed to delete event at bookmark %@
deleted location already handled
location we haven't yet observed is now deleted %@
location is unexpectedly nil, unable to parse from mergeableValueID %@
location is unexpectedly nil
received missing location %@
location is not active %@ skipping merge to not resurrect a dead location
highest deleted location %@ is past incoming location %@
received data for new location %@
mergeAtoms: %lu location %@
dropping atom with timestamp %@ since already merged
atom with timestamp %@ already in table but not on disk
causalReference location is unexpectedly nil
failed to insert referenceLocationRow for location %@
addAtomRow: %@
failed to commit, rolling back
updating row for atom inferred to be applied to disk %@
failed to update row: %@
atom to apply to disk %@
causal reference cache hit
causal reference location %@ points to dead location, not a violation
causal reference violation: missing causal reference %@ reference location %@
unblocked: %@
failed to apply atom to disk
updating row for atom applied to disk %@
BMRapportManager: shared-use only supported internally
BMRapportManager: received SIGTERM
BMRapportManager: could not determine appropriate control flags for device platform: %@
BMRapportManager: createSharedDiscoveryClientIfNotExists not currently supported
BMRapportManager: shared discovery client already exists
BMRapportManager: already activated %@
BMRapportManager: already activating %@
BMRapportManager: activating %@
BMRapportManager: failed to activate with error: %@
BMRapportManager: activated successfully
BMRapportManager: invalidated
BMRapportManager: registerEventID %@
BMRapportManager: stop
sendRequest:request:device:options:responseHandler: passed nil device
BMRapportDevice[%@]: enqueueing request
device %@ requestQueue %@
BMRapportDevice[%@]: activating client
device: %@ linkState %lu
handleActivationForDevice:error: passed nil device
BMRapportDevice[%@]: activation %@%@
BMRapportDevice[%@]: determined to not support service com.apple.biomesyncd.rapport
handleInterruptionForDevice: passed nil device
BMRapportDevice[%@]: interrupted
sendNextRequestToDevice: passed nil device
BMRapportDevice[%@]: expected request id and response handler in %@
BMRapportDevice[%@]: being sent request %@ with options %@
finishedSendingRequestsToDevice: passed nil device
BMRapportDevice[%@]: request queue empty, invalidating client
BMRapportDevice[%@]: advertisement data changed
BMRapportDevice[%@]: pairing flags/attributes changed
BMRapportDevice[%@]: distance changed: %s
BMRapportDevice[%@]: distance wifi information element changed
BMRapportDevice[%@]: name changed: %@
BMRapportDevice[%@]: RSSI changed
BMRapportDevice[%@]: SSID changed
BMRapportDevice[%@]: proximity changed: %s
BMRapportDevice[%@]: distance/angle/something changed
BMRapportDevice[%@]: no transports available; expect a lost callback
BMRapportDevice[%@]: got unexpected change flag: RPDeviceChangeFlags(%x)
BMRapportManager: skipping RPCompanionLinkDevice missing identifier: %@
BMRapportManager: skipping RPCompanionLinkDevice missing model: %@
BMRapportManager: already discovered device, %@ as %@
BMRapportDevice[%@]: ignoring device not listing service com.apple.biomesyncd.rapport
BMRapportDevice[%@]: discovered
BMRapportDevice[%@]: ignoring unsupported device
BMRapportDevice[%@]: lost
BMRapportDevice[%@]: invalidated
failed to unarchive BMMultiStreamVectorClock with error %@
failed to archive BMMultiStreamVectorClock with error %@
failed to unarchive BMMultiStreamAtomBatches with error %@
failed to archive BMMultiStreamAtomBatches with error %@
Failed to insert: %@
stateVector: %@
Failed to update: %@
clock vector is empty %@
triggerRapportSyncWithReply called
rapportSyncWithError called
triggerCloudKitSyncWithReply called
cloudKitSyncWithError called
%@: tried to initialize with a non-BMPBSyncAtomValue proto
%@: tried to initialize a BMPBSyncAtomValue proto, missing type or value
failed to deserialize BMSyncAtomValue with error %@
cannot deserialize atom value of version %lu
failed to serialize BMSyncAtomValue with error %@
cannot serialize atom value with version %lu
%@: tried to initialize with a non-BMPBStoreEventAtomValue proto
%@: tried to initialize a BMPBStoreEventAtomValue proto: missing dataVersion or dataTimestamp
unknown value in BMCloudKitRecordTypeString: %lu
syncNowWithReason
Sync with iCloud for Siri: %d
transitioning records over to new CKMergeableRecordValue with key %{public}@
failed to reset records for stream %{public}@ when transitioning to new CKMergeableRecordValue
ingest events from stream: %{public}@
syncNowWithReason found %lu records to sync and %lu records to delete
syncNowWithReason after removing duplicates, sending CKSyncEngine %lu records to sync and %lu records to delete
after modifying changes, we have %lu records to sync and %lu records to delete as a result of error handling
unable to obtain Manatee accountInfo
CloudKit container is not accessible. Status: %ld
This account is eligible to sync with manatee containers
Manatee is available on the current device
iCloud account doesn't support end-to-end encryption: %ld
account status is CKAccountStatusTemporarilyUnavailable
iCloud account status: %ld
unable to initialize CloudKit container
unable to initialize CloudKit configuration
unable to initialize ckSyncEngine
accountInfoWithCompletionHandler returned error: %@
zoneWithIDChanged: %{public}@
failedToFetchChangesForRecordZoneID: %{public}@
shouldFetchChangesForZoneID: %{public}@ returning: %{public}@
didDeleteRecordWithID: %{public}@ in zone: %{public}@
isRecordNewerThanMostRecentDeleteForSiteIdentifier: Could not create location from CKRecord: %{public}@
Error serverValue is nil for delta %{public}@ %{public}@
Error encoding serverValue for %{public}@ %{public}@, %{public}@
handleSyncRecordDidFetchRecord: Can't build location from record stream:%{public}@ recordName:%{public}@
Error saving [saveCKRecordServerMergeableValue:serverValueData] for %{public}@ %{public}@, %{public}@
didFetchRecord: %{public}@
didFetchRecord: unknown record %{public}@ type: %{public}@
handleDidSaveRecordSyncRecord: serverValue nil for %{public}@ %{public}@
handleDidSaveRecordSyncRecord: unable to find record on db:%{public}@ %{public}@
handleDidSaveRecordSyncRecord: Unable to unarchive localMergeableValue for %{public}@ %{public}@ %{public}@
nil value for localValue for %{public}@ %{public}@
Error [localRecordValue mergeRecordValue:serverValue] for serverValue:%{public}@ record:%{public}@ zone:%{public}@ %{public}@
Error encoding localValue for %{public}@ %{public}@
didSaveRecord: %{public}@ recordType: %{public}@ zone: %{public}@
didSaveRecord: %{public}@ unknown recordType: %{public}@ zone: %{public}@
didSaveRecordZone: %{public}@
failedToDeleteRecordWithID: %{public}@, zone:%{public}@
failedToSaveRecordZone:%{public}@ error:%{public}@
failedToSaveRecordZone: %{public}@ and recoveryState:%{public}d
Add zone and add record request made %{public}@ %{public}@.
Zone ID is nil; record dropped %{public}@
Handling handleFailedToSaveSyncRecordServerRecordChanged: Merging clientCRDT into serverCRDT %{public}@ -> %{public}@
Error handleFailedToSaveSyncRecordServerRecordChanged: [serverCRDT mergeRecordValue:clientCRDT]; error: %{public}@
handleFailedToSaveSyncRecordServerRecordChanged: serverCRDT is nil for record: %{public}@ for error: %{public}@
handleFailedToSaveSyncRecordServerRecordChanged: error archiving serverCRDT error: %{public}@
Manatee identity loss reported: record:%{public}@, zoneID:%{public}@, error:%{public}@
Error not handled: failedToSaveRecord, error: %{public}@
Error not handled: failedToSaveRecord, zoneVersion error: %{public}@
Error not handled: failedToSaveRecord, hightestDeletedLocation error: %{public}@
failedToSaveRecord: %{public}@, %{public}@ %{public}@
Error not handled: failedToSaveRecord, unknown record:%{public}@ zone:%{public}@ type: %{public}@ error: %{public}@
locationID can not be found for recordID %{public}@
expirationTimeInterval is almost expired: %{public}@, not saving recordID: %{public}@ because it will be TTL'd
recordToSaveForRecordID: newRecord? %d
streamCRDT is nil %@
handleSyncRecordRecordToSaveForRecordID: Unable to unarchive localMergeableValue for %{public}@ %{public}@ %{public}@
recordValue %{public}@
Error adding deltas to save for %{public}@ %{public}@ %{public}@
Sync to iCloud for Siri disabled
recordToSaveForRecordID %{public}@
failedToDeleteRecordZoneWithID: %{public}@ error: %{public}@
didDeleteRecordZoneWithID: %{public}@
didDeleteRecordZoneWithID re-creating zone:%{public}@
didDeleteRecordZoneWithID syncing %lu records for zone:%{public}@
didDeleteRecordZoneWithID not re-creating zone:%{public}@, removing all local records in zone
zoneWithIDWasDeleted: %{public}@
streamCRDT is nil %{public}@
recordWithIDWasDeleted: %{public}@, type=%{public}@
recordWithIDWasDeleted received an unknown record type:%{public}@ for record:%{public}@
syncEngineWillBeginFetchingChanges
syncEngineDidEndFetchingChanges
*** recordName:%{public}@
syncEngineDidEndFetchingChanges: Unable to unarchive localMergeableValue for %{public}@ %{public}@ %{public}@
Has a localMergeableValue: %{public}@
Has no localMergeableValue
syncEngineDidEndFetchingChanges: Unable to unarchive mergeableRecordValue for %{public}@ %{public}@ %{public}@
Merging recordValue %{public}@
Merging serverValue %{public}@
Unable to [recordValue mergeRecordValue:serverValue for %{public}@ %{public}@ %{public}@
Were there mergeableRecordValues: %{public}s
syncEngineDidEndFetchingChanges location: %{public}@
syncEngineDidEndFetchingChanges: Can't build location from record stream:%{public}@ recordName:%{public}@
syncEngineDidEndFetchingChanges locationRow: %{public}@
locationRow is unexpectly nil for location %{public}@
Unable to  [recordValue mergeIntoMergeable:recordCRDT] for recordName:%{public}@ site:%{public}@ error:%{public}@
Unable to archive recordValue %{public}@ %{public}@
syncEngineWillBeginModifyingPendingChanges
syncEngineDidEndModifyingPendingChanges
mergeAtomBatches: %lu deletedLocations: %@
Merging atom batches into %@
Failed to instantiate CKAtomBatch, %@, %@
Generating atom batch after clock: %@, version: %lu
Could not generate atom data from atomBatch: %@, error: %@
atomBatchesAfterClock %@ %@ %@
nil policy for stream: %@
Unable to create unarchiver %@
Unable to create a record from systemFieldsData for %@
unable to create a record with initWithRecordType for %@
Error saving via saveSystemFieldsDataForRecord: for %{public}@ %{public}@
Failed to clear metadata for record %@ in zone %@
Error saving CKRecord in saveCKRecordServerMergeableValue: for %@ %@
clearCKRecordLocalMergeableValueAndSetToSyncForZone %@
Problems updating CKRecords at or before location %@
Problems deleting CKRecords at or before location %@
Failed to delete CKRecords for streamName:%@
Can not delete CKRecord at location %@
Failed to delete all data associated with zone %@
Problems updating CKRecords in stream: %@ site: %@
unrecognized transport type (%lu)
syncNowIfPolicyAllowsWithReason: begin rapport sync
syncNowIfPolicyAllowsWithReason: begin cloudkit sync
syncNowIfPolicyAllowsWithReason: group_notify done
last sync: %{public}@ (%f ago), last attempt: %{public}@ (%f ago)
Unable to perform Rapport sync now, because database is not currently accessible
Rapport syncNowWithCompletionHandler %@, errors: %@
skipping rapport sync
Unable to perform CloudKit sync now, because database is not currently accessible
CloudKit syncNowWithCompletionHandler %@, errors: %@
skipping cloudkit sync
transitioned to state %llu
unrecoverable error: %@
database corrupt: %@
database corrupt
error: %@
BMSyncDatabase state queried while opening
failed to close db %@
failed to commit transcation
%@ received nil deviceIdentifier
recordSessionStart: %@
recordSessionEnd: %@
recordMessageToDeviceIdentifier: %@, %@
recordAtomMergeResult: %@, %@
vacuumWithShouldContinueBlock querying page_count: %@
vacuumWithShouldContinueBlock querying freelist_count: %@
vacuumWithShouldContinueBlock calculating pages to vacuum -- pageCount %tu freeCount %tu loadFactor %f
vacuumWithShouldContinueBlock not enough pages to vacuum: pageCount: %lu; freeCount: %lu
vacuumWithShouldContinueBlock error querying auto_vacuum: %@
vacuumWithShouldContinueBlock current vacuum mode is %u
vacuumWithShouldContinueBlock error setting auto_vacuum
vacuumWithShouldContinueBlock successfully set auto_vacuum to INCREMENTAL
vacuumWithShouldContinueBlock error running initial VACUUM
vacuumWithShouldContinueBlock successfully ran initial VACUUM
vacuumWithShouldContinueBlock calculated pages to vacuum: %lu
vacuumWithShouldContinueBlock starting incremental_vacuum of batch size: %lu, pagesVacuumed: %lu
vacuumWithShouldContinueBlock error running incremental_vacuum
vacuumWithShouldContinueBlock successfully completed
%@ sizeOfFileInKilobytes error fetching attributes for filepath: %@, err: %@
%@ numRowsInTable table name: %@ does not exist
%@ numRowsInTable error querying pgsize for table: %@, err: %@
%@ sizeOfTable error querying pgsize for table: %@, err: %@
nil value encountered in [BMStreamCRDTLocation initWithStreamName:%@ siteIdentifier:%@ day:%@]
can not determine streamName
unknown mergeable value ID format version %lu
BMStreamCKRecordCRDT
CKVersionedMergeable
CKMergeable
NSObject
BMSyncCRDTLocationRow
_bmFMResultSet
BMMultiStreamVectorClockConverter
BMSyncSessionContext
BMSyncSessionMetricsCollector
BMSyncSessionMetricsAggregator
BMAtomBatchMaxBytes
BMAtomBatchChunkerPolicy
NSCopying
BMAtomBatchMaxCount
BMAtomBatchChunker
BMSyncDevicePeerTable
BMSyncDevicePeerMetadata
BMPeerToPeerMessageOPACKCodable
BMSyncDevicePeer
BMRapportRequest
BMRapportSyncEngine
BMRapportManagerDelegate
BMSyncCore
BMStateVectorMetricsCollector
BiomeSync
BMMultiStreamTimestampClockVector
NSSecureCoding
NSCoding
BMStreamCKCRDT
BMPBSyncAtomValue
BMSyncCKZone
BMRapportManager
BMRapportDevice
BMPeerToPeerMessage
BMFetchAtomBatchesRequest
BMFetchAtomBatchesResponse
BMSyncPolicy
BatchEnumerate
BMSyncCKAtomRow
BMSyncServiceServerProtocol
BMSyncServiceClientProtocol
BMSyncServiceServer
NSXPCListenerDelegate
BMSyncDevice
BMSync
BMMultiStreamVectorClock
BMSyncDatabase
BMSyncMetadata
BMSyncCKMergeableRecordValue
TombstoneBookmark
BMSyncAtomValue
BMStoreEventAtomValue
BMCloudKitSyncEngine
CKSyncEngineDataSourcePrivate
CKSyncEngineDataSource
BMDistributedSyncManager
BMDistributedSyncMultiStreamManager
BMDistributedSyncMultiStreamManagerFactory
OPACKCodable
BMSyncCKRecord
BMSyncStreamID
BMAsyncBlockOperation
BMSyncScheduler
BMPBStoreEventAtomValue
BMSyncDatabaseSQLStatementMigration
BMSyncDatabaseCustomFunctionMigration
BMSyncDatabaseTransactionBatcher
BMSyncDevicePeerStatusTracker
BMSyncMetricsCollectorTable
Maintenance
BMDateFormatterVendor
BMStreamCRDTLocation
BMStreamCRDTLocationBuilder
BMStreamCRDTLocationDayAssigner
BMStreamCRDTLocationAssignerPolicy
_bmFMDatabase
_bmFMStatement
_bmFMDatabaseAdditions
_bmFMDatabasePool
_bmFMDatabaseQueue
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@16^@24
@32@0:8@16^@24
B32@0:8@"NSArray"16^@24
@"NSArray"32@0:8@"CKMergeableDeltaMetadata"16^@24
@"CKDistributedTimestampStateVector"16@0:8
@64@0:8@16@24@32@40q48@56
v24@0:8@16
q16@0:8
v24@0:8q16
v16@0:8
@"BMSyncDatabase"
@"BMStreamCKCRDT"
@"BMSyncCRDTLocationRow"
@"NSObject<OS_dispatch_queue>"
@"BMSyncSessionContext"
@32@0:8@16Q24
@40@0:8@16Q24Q32
@"BMStreamCRDTLocation"
@24@0:8@16
B32@0:8Q16@24
B32@0:8@16Q24
@24@0:8Q16
@32@0:8@16@24
i16@0:8
v24@0:8Q16
@"NSString"
v44@0:8@16Q24Q32B40
v32@0:8@16@24
v48@0:8@16B24Q28B36@40
v64@0:8Q16@24@32@40d48@56
@"NSObject<OS_xpc_object>"
@24@0:8^{_NSZone=}16
B24@0:8@"NSData"16
v24@0:8@"NSData"16
v20@0:8B16
@"<BMAtomBatchChunkerPolicy>"
B28@0:8@16B24
B32@0:8@16@24
@24@0:8@"NSDictionary"16
@"NSDictionary"16@0:8
@40@0:8@16@24q32
@40@0:8@16@24Q32
@"BMSyncDevicePeerMetadata"
@56@0:8@16@24@?32@40@?48
@?16@0:8
v24@0:8@?16
@"NSObject<OS_os_transaction>"
@"NSMutableSet"
@"NSMutableDictionary"
@"NSUUID"
@"NSObject<OS_dispatch_source>"
B32@0:8@"BMRapportManager"16@"BMRapportDevice"24
v32@0:8@"BMRapportManager"16@"BMRapportDevice"24
v24@0:8@"BMRapportManager"16
@40@0:8@16@24@32
@56@0:8@16@24@32@40@48
v40@0:8Q16@24@?32
v40@0:8@16@24@32
v44@0:8B16Q20@28@?36
@44@0:8B16Q20Q28@36
v60@0:8@16@24@32@40@48B56
v48@0:8@16@24@32@40
I16@0:8
@"BMDistributedSyncMultiStreamManager"
@"BMRapportManager"
@"NSObject<BMAtomBatchChunkerPolicy>"
@"BMSyncDevicePeerStatusTracker"
@"BMSyncSessionMetricsCollector"
@"BMRapportSyncEngine"
@"BMCloudKitSyncEngine"
@"BMSyncScheduler"
Q24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^@16
@64@0:8@16@24@32@40@48@56
@56@0:8@16Q24@32@40@48
@40@0:8@16Q24q32
B48@0:8@16@24^@32^@40
B48@0:8@16@24@32^@40
B60@0:8@16@24@32@40C48q52
v52@0:8@16@24@32C40q44
v32@0:8@16Q24
v60@0:8@16@24@32C40q44@52
v52@0:8@16C24@28Q36@?44
v28@0:8@16B24
@"BMStoreConfig"
@"BMSyncPolicy"
@"BMStreamCRDTLocationBuilder"
@"NSCache"
@"BMSyncStreamID"
@"BMPBStoreEventAtomValue"
{?="type"b1}
@"NSDate"
B28@0:8@16i24
B36@0:8@16i24@28
@28@0:8@16B24
v32@0:8@16@?24
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v28@0:8@16I24
@"RPCompanionLinkClient"
@"<BMRapportManagerDelegate>"
@"RPCompanionLinkDevice"
@"NSMutableArray"
d16@0:8
v24@0:8d16
@"BMSyncDevicePeer"
@"BMMultiStreamVectorClock"
@"NSArray"
@"NSDictionary"
@24@0:8q16
@32@0:8@16q24
d24@0:8Q16
Q24@0:8Q16
B40@0:8Q16Q24^Q32
B32@0:8Q16Q24
B40@0:8q16Q24Q32
@64@0:8@16@24@32@40Q48@56
@72@0:8@16@24@32@40Q48q56@64
@"CKDistributedTimestamp"
@"CKAtomReference"
@"BMStoreBookmark"
@"NSData"
@40@0:8Q16@24@32
B36@0:8@16@24B32
@48@0:8@16Q24@32@40
v40@0:8@16@24@?32
v40@0:8@16Q24@?32
@40@0:8d16@24@32
v24@0:8@?<v@?@"NSError">16
v24@0:8@?<v@?@"NSArray"@"NSArray">16
v24@0:8@?<v@?@"NSArray"@"NSError">16
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v32@0:8@?16@?24
@"BMSyncCore"
@"NSXPCListener"
@48@0:8@16@24@32@40
@72@0:8@16@24@32@40@48@56@64
@80@0:8@16@24@32@40@48@56@64@72
B40@0:8@16@24@32
@40@0:8Q16@24q32
@"BMStoreEventAtomValue"
@36@0:8@16I24d28
@"CKRecord"32@0:8@"CKSyncEngine"16@"CKRecordID"24
v32@0:8@"CKSyncEngine"16@"CKRecord"24
v40@0:8@"CKSyncEngine"16@"CKRecord"24@"NSError"32
v32@0:8@"CKSyncEngine"16@"CKRecordID"24
v40@0:8@"CKSyncEngine"16@"CKRecordID"24@"NSError"32
v40@0:8@"CKSyncEngine"16@"CKRecordID"24@"NSString"32
v32@0:8@"CKSyncEngine"16@"NSData"24
v32@0:8@"CKSyncEngine"16@"CKRecordZone"24
v32@0:8@"CKSyncEngine"16@"CKRecordZoneID"24
v40@0:8@"CKSyncEngine"16@"CKRecordZoneID"24@"NSError"32
v40@0:8@"CKSyncEngine"16@"CKRecordZone"24@"NSError"32
v40@0:8@"CKSyncEngine"16@"CKRecordID"24@"CKRecordID"32
v24@0:8@"CKSyncEngine"16
v32@0:8@"CKSyncEngine"16@"NSArray"24
@"CKSyncEngineBatch"32@0:8@"CKSyncEngine"16@"NSSet"24
v40@0:8@"CKSyncEngine"16@"CKSyncEngineBatch"24@"NSError"32
@"NSArray"24@0:8@"CKSyncEngine"16
B32@0:8@"CKSyncEngine"16@"CKRecordZoneID"24
@"NSArray"40@0:8@"CKSyncEngine"16@"NSArray"24@"NSArray"32
B24@0:8q16
@"NSOperationQueue"
@"<CKSyncEngineDataSource>"
@"CKContainer"
@"CKSyncEngineConfiguration"
@"CKSyncEngine"
@44@0:8@16C24@28Q36
@40@0:8Q16Q24@32
@60@0:8@16q24Q32Q40C48@52
@"NSNumber"
@40@0:8@16^B24Q32
v48@0:8@16@24Q32@40
B48@0:8@16@24@32@40
B44@0:8@16@24@32B40
B40@0:8@16@24Q32
@24@0:8@?16
v40@0:8Q16Q24@32
v32@0:8Q16@24
B24@0:8Q16
{?="dataTimestamp"b1"dataVersion"b1}
@"_bmFMDatabase"
B24@0:8@?16
v32@0:8@16d24
v56@0:8@16@24Q32B40Q44B52
v72@0:8Q16@24@32Q40@48@56d64
@"NSISO8601DateFormatter"
@"NSDateFormatter"
@40@0:8@16@24d32
@"<BMStreamCRDTLocationAssignerPolicy>"
@24@0:8d16
@"BMStreamCRDTLocation"40@0:8@"NSString"16@"NSString"24d32
^v16@0:8
r*16@0:8
i24@0:8i16i20
B28@0:8i16@20
v20@0:8i16
i36@0:8@16i24^{sqlite3_stmt=}28
v48@0:8@16*24@32@40
@52@0:8@16@24@32*40B48
B48@0:8^{sqlite3_stmt=}16@24@32*40
@40@0:8@16@24^@32
@32@0:8@16*24
B56@0:8@16^@24@32@40*48
B40@0:8@16@24^@32
B32@0:8@16*24
B32@0:8@16@?24
B28@0:8i16^@20
B36@0:8i16@20^@28
B52@0:8i16@20^i28^i36^@44
v36@0:8@16i24@?28
i24@0:8^v16
q24@0:8^v16
d24@0:8^v16
@24@0:8^v16
v24@0:8^v16
v28@0:8i16^v20
v32@0:8q16^v24
v32@0:8d16^v24
v32@0:8@16^v24
v20@0:8I16
@36@0:8@16@24B32
B24@0:8^@16
i24@0:8^@16
i24@0:8@16
i20@0:8i16
q24@0:8@16
q20@0:8i16
Q20@0:8i16
B20@0:8i16
d24@0:8@16
d20@0:8i16
@20@0:8i16
r*20@0:8i16
r*24@0:8@16
B40@0:8@16@24*32
@"_bmFMStatement"
@28@0:8@16i24
@36@0:8@16i24@28
v32@0:8q16@?24
softlink:r:path:/System/Library/PrivateFrameworks/BiomeLibrary.framework/BiomeLibrary
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>22A380007</string>
<key>CFBundleIdentifier</key>
<string>com.apple.biomesyncd</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>14E6097d</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>16.4</string>
<key>DTSDKBuild</key>
<string>20E5212d</string>
<key>DTSDKName</key>
<string>iphonesimulator16.4.internal</string>
<key>DTXcode</key>
<string>1430</string>
<key>DTXcodeBuild</key>
<string>14E6097d</string>
<key>MinimumOSVersion</key>
<string>16.4</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
<integer>2</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.biomesyncd</string>
<key>aps-connection-initiate</key>
<true/>
<key>aps-environment</key>
<string>serverPreferred</string>
<key>com.apple.CompanionLink</key>
<true/>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.application-identifier</key>
<string>com.apple.biomesyncd</string>
<key>com.apple.developer.aps-environment</key>
<string>serverPreferred</string>
<key>com.apple.developer.icloud-container-environment</key>
<string>Production</string>
<key>com.apple.developer.icloud-container-identifiers</key>
<array>
<string>com.apple.biome.sync</string>
</array>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudKit</string>
</array>
<key>com.apple.private.appleaccount.app-hidden-from-icloud-settings</key>
<true/>
<key>com.apple.private.aps-connection-initiate</key>
<true/>
<key>com.apple.private.biome.client-identifier</key>
<string>com.apple.biomesyncd</string>
<key>com.apple.private.biome.read-write</key>
<array>
<string>ContextSync.LOI</string>
</array>
<key>com.apple.private.biome.sensorActivation</key>
<true/>
<key>com.apple.private.cloudkit.serviceNameForContainerMap</key>
<dict>
<key>com.apple.biome.sync</key>
<string>com.apple.biome.sync</string>
</dict>
<key>com.apple.private.cloudkit.spi</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.contextsync</string>
</array>
<key>com.apple.private.ids.messaging.urgent-priority</key>
<array>
<string>com.apple.private.alloy.contextsync</string>
</array>
<key>com.apple.private.sandbox.profile:embedded</key>
<string>temporary-sandbox</string>
<key>com.apple.private.security.storage.Biome</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceLiverpool</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>/Library/Biome/sync/</string>
<string>/Library/Biome/streams/public</string>
<string>/Library/Biome/streams/public/DeviceMetadata/</string>
<string>/Library/Biome/streams/public/AppIntent/</string>
<string>/Library/Biome/streams/public/AppLaunch/</string>
<string>/Library/Biome/streams/public/Workout/</string>
<string>/Library/Biome/streams/public/NowPlaying/</string>
<string>/Library/Biome/streams/restricted</string>
<string>/Library/Biome/streams/restricted/feedbackSocialHighlights/</string>
<string>/Library/Biome/streams/restricted/SiriMemoryReferenceResolutionStream/</string>
<string>/Library/Biome/streams/restricted/Device.Power.PluggedIn/</string>
<string>/Library/Biome/streams/restricted/Device.Wireless.WiFi/</string>
<string>/Library/Biome/streams/restricted/Device.Power.BatteryLevel/</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.accountsd.accountmanager</string>
<string>com.apple.CompanionLink</string>
<string>com.apple.biomed.sensorActivation</string>
<string>com.apple.cloudd</string>
<string>com.apple.apsd</string>
<string>com.apple.identityservicesd.embedded.auth</string>
</array>
<key>com.apple.security.exception.shared-preference.read-only</key>
<array>
<string>com.apple.CloudKit</string>
<string>com.apple.ids</string>
<string>com.apple.facetime.bag</string>
</array>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.biomesyncd</string>
<string>com.apple.contextsync.subscriptions</string>
</array>
<key>com.apple.security.network.client</key>
<true/>
<key>com.apple.security.network.server</key>
<true/>
<key>com.apple.security.ts.mobile-keybag-access</key>
<true/>
<key>com.apple.security.ts.tmpdir</key>
<string>com.apple.biomesyncd</string>
<key>com.apple.wifi.manager-access</key>
<true/>
<key>platform-application</key>
<true/>
</dict>
</plist>
l0.
application-identifier
com.apple.biomesyncd0
aps-connection-initiate
aps-environment
serverPreferred0
com.apple.CompanionLink
0/*com.apple.accounts.appleaccount.fullaccess
08 com.apple.application-identifier
com.apple.biomesyncd06#com.apple.developer.aps-environment
serverPreferred0>0com.apple.developer.icloud-container-environment
Production0J0com.apple.developer.icloud-container-identifiers0
com.apple.biome.sync01#com.apple.developer.icloud-services0
CloudKit0C>com.apple.private.appleaccount.app-hidden-from-icloud-settings
0.)com.apple.private.aps-connection-initiate
0A)com.apple.private.biome.client-identifier
com.apple.biomesyncd07"com.apple.private.biome.read-write0
ContextSync.LOI0-(com.apple.private.biome.sensorActivation
0g5com.apple.private.cloudkit.serviceNameForContainerMap
.0,
com.apple.biome.sync
com.apple.biome.sync0#
com.apple.private.cloudkit.spi
com.apple.private.ids.messaging0%#com.apple.private.alloy.contextsync0X/com.apple.private.ids.messaging.urgent-priority0%#com.apple.private.alloy.contextsync0?*com.apple.private.sandbox.profile:embedded
temporary-sandbox0-(com.apple.private.security.storage.Biome
com.apple.private.tcc.allow0
kTCCServiceLiverpool0
@com.apple.security.exception.files.home-relative-path.read-write0
/Library/Biome/sync/
/Library/Biome/streams/public-/Library/Biome/streams/public/DeviceMetadata/(/Library/Biome/streams/public/AppIntent/(/Library/Biome/streams/public/AppLaunch/&/Library/Biome/streams/public/Workout/)/Library/Biome/streams/public/NowPlaying/!/Library/Biome/streams/restricted;/Library/Biome/streams/restricted/feedbackSocialHighlights/F/Library/Biome/streams/restricted/SiriMemoryReferenceResolutionStream/9/Library/Biome/streams/restricted/Device.Power.PluggedIn/7/Library/Biome/streams/restricted/Device.Wireless.WiFi/</Library/Biome/streams/restricted/Device.Power.BatteryLevel/0
4com.apple.security.exception.mach-lookup.global-name0
"com.apple.accountsd.accountmanager
com.apple.CompanionLink!com.apple.biomed.sensorActivation
com.apple.cloudd
com.apple.apsd)com.apple.identityservicesd.embedded.auth0w8com.apple.security.exception.shared-preference.read-only0;
com.apple.CloudKit
com.apple.ids
com.apple.facetime.bag0x9com.apple.security.exception.shared-preference.read-write0;
com.apple.biomesyncd#com.apple.contextsync.subscriptions0&!com.apple.security.network.client
0&!com.apple.security.network.server
0/*com.apple.security.ts.mobile-keybag-access
com.apple.security.ts.tmpdir
com.apple.biomesyncd0"
com.apple.wifi.manager-access
platform-application
