@(#)PROGRAM:biomesyncd  PROJECT:BiomeSync-58.5
CREATE TABLE Metadata (
 key TEXT UNIQUE PRIMARY KEY ON CONFLICT REPLACE NOT NULL,
 value
CREATE TABLE CKAtom (
 stream STRING NOT NULL,
 -- CKDistributedTimestamp
 site BLOB NOT NULL,
 clock INTEGER NOT NULL,
 type INTEGER NOT NULL,
 -- CKAtomLocation
 location BLOB,
 -- BMStoreBookmark
 segment_name TEXT,
 segment_offset INTEGER,
 -- BMStoreBookmark Tombstone
 tombstone_segment_name TEXT,
 tombstone_segment_offset INTEGER,
 -- CKAtomReference
 ref_type INTEGER,
 ref_location BLOB,
 ref_site BLOB,
 ref_clock INTEGER,
 -- CKAtom value
 value_data BLOB,
 on_disk BOOLEAN,
 CONSTRAINT "ref_type <=> (ref_site AND ref_clock)"
 CHECK ((ref_type IS NULL) == ((ref_site IS NULL) AND (ref_clock IS NULL))),
 CONSTRAINT "(ref_type, ref_site, ref_clock) != (type, site, clock)"
 CHECK (ref_type != type OR ref_site != site OR ref_clock != clock),
 CONSTRAINT "segment_name <=> segment_offset"
 CHECK ((segment_name IS NULL) == (segment_offset IS NULL)),
 CONSTRAINT "on_disk <=> segment_name"
 CHECK (CASE WHEN on_disk NOTNULL THEN segment_name NOTNULL ELSE segment_name ISNULL END),
 CONSTRAINT "on_disk <=> !data"
 CHECK (CASE WHEN on_disk NOTNULL THEN value_data ISNULL ELSE value_data NOTNULL END)
 FOREIGN KEY (stream, ref_site, ref_clock, on_disk) REFERENCES CKAtom(stream, site, clock, on_disk) DEFERRABLE INITIALLY DEFERRED,
 UNIQUE (stream, site, type, clock),
 UNIQUE (stream, site, clock, on_disk),
 UNIQUE (stream, site, type, clock, on_disk),
 UNIQUE (stream, site, type, segment_name, segment_offset)
CREATE INDEX idx_ckatom_ref_clock_type ON CKAtom(stream, ref_clock, type);
CREATE INDEX idx_ckatom_segment_name ON CKAtom(stream, segment_name);
CREATE INDEX idx_ckatom_tombstone ON CKAtom(stream, ref_site, tombstone_segment_name DESC, tombstone_segment_offset DESC);
CREATE TABLE DevicePeer (
 device_identifier STRING NOT NULL,
 me BOOLEAN,
 name STRING,
 model STRING,
 platform INTEGER,
 last_sync_date INTEGER,
 protocol_version INTEGER NOT NULL
CREATE TABLE IF NOT EXISTS SyncSessionLog (
 session_id BLOB,
 start_timestamp INTEGER,
 end_timestamp INTEGER,
 transport INTEGER,
 reason INTEGER,
 is_reciprocal BOOL
CREATE TABLE IF NOT EXISTS SyncMessageLog (
 session_id BLOB,
 message_id INTEGER,
 timestamp INTEGER,
 device_identifier STRING,
 reachable BOOL,
 is_reciprocal BOOL,
 atom_batch_bytes INTEGER
CREATE TABLE IF NOT EXISTS AtomMergedLog (
 session_id BLOB,
 message_id INTEGER,
 stream STRING,
 merge_result INTEGER,
 owning_site_identifier STRING,
 relayed_by_site_identifier STRING,
 synced_at INTEGER,
 event_created_at INTEGER
BMSyncSessionContext
BMSyncSessionMetricsCollector
BMSyncSessionMetricsAggregator
BMAtomBatchMaxBytes
BMAtomBatchChunkerPolicy
NSCopying
BMAtomBatchMaxCount
BMAtomBatchChunker
_bmFMResultSet
BMSyncDevicePeerTable
BMSyncDevicePeerMetadata
BMPeerToPeerMessageOPACKCodable
BMSyncDevicePeer
BMRapportRequest
BMRapportSyncEngine
BMRapportManagerDelegate
NSObject
BMSyncCore
BiomeSync
BMStreamCKCRDT
BMRapportManager
BMRapportDevice
BMPeerToPeerMessage
BMFetchAtomBatchesRequest
BMFetchAtomBatchesResponse
BMSyncPolicy
BatchEnumerate
BMSyncCKAtomRow
BMSyncServiceServerProtocol
BMSyncServiceClientProtocol
BMSyncServiceServer
NSXPCListenerDelegate
BMSyncDevice
BMSync
BMMultiStreamVectorClock
NSSecureCoding
NSCoding
BMSyncDatabase
BMSyncMetadata
BMSyncAtomValue
BMStoreEventAtomValue
BMDistributedSyncManager
BMDistributedSyncMultiStreamManager
BMDistributedSyncMultiStreamManagerFactory
BMSyncStreamID
BMSyncScheduler
BMSyncDevicePeerStatusTracker
BMSyncMetricsCollectorTable
_bmFMDatabase
_bmFMStatement
_bmFMDatabaseAdditions
_bmFMDatabasePool
_bmFMDatabaseQueue
sessionID
setSessionID:
messageID
setMessageID:
originatingSiteIdentifier
setOriginatingSiteIdentifier:
.cxx_destruct
_sessionID
_messageID
_originatingSiteIdentifier
T@"NSString",&,N,V_sessionID
TQ,N,V_messageID
T@"NSString",&,N,V_originatingSiteIdentifier
init
UUID
UUIDString
recordSessionStart:transport:reason:isReciprocal:
recordSessionEnd:
recordMessageToDeviceIdentifier:sessionID:messageID:reachable:bytes:isReciprocal:
recordAtomMergeResult:inStream:sessionID:messageID:ownerSite:originatingSite:eventCreatedAt:
initWithDatabase:
sessionContext
recordMessageToDeviceIdentifier:reachable:bytes:isReciprocal:sessionContext:
recordAtomMergeResult:inStream:ownerSite:originatingSite:eventCreatedAt:sessionContext:
_database
computeAggregatedSessionLogs
countByEnumeratingWithState:objects:count:
sendSyncSessionLog:
compactAndDeleteSessionLogs
initWithDatabase:activity:
computeAndSendAggregatedMetrics
_activity
length
initWithMaxBytes:
copyWithZone:
canAddAtomWithData:
didAddAtomWithData:
_maxBytes
_usedBytes
initWithMaxCount:
_maxCount
_atomCount
copy
initWithChunkerPolicy:
moreComing
setMoreComing:
_chunkerPolicy
_moreComing
TB,N,V_moreComing
stringForColumn:
intForColumn:
initWithName:model:platform:
initWithDeviceIdentifier:metadata:protocolVersion:
initWithFMResultSet:
SELECT_FROM:COLUMNS:WHERE:
next
close
deviceIdentifier
deviceWithIdentifier:
metadata
name
numberWithBool:
model
platform
numberWithInteger:
protocolVersion
numberWithUnsignedInteger:
dictionaryWithObjects:forKeys:count:
INSERT_INTO:VALUES:
arrayWithObjects:count:
UPDATE:SET:WHERE:
dateForColumnIndex:
addObject:
localDevice
upsertSyncDevicePeer:isMe:
lastSyncDateFromAnyDevice
lastSyncDateOfDeviceWithIdentifier:
setLastSyncDate:forDeviceWithIdentifier:
allPeers
osBuildVersion
isEqualToString:
isEqual:
hash
objectForKeyedSubscript:
null
unsignedIntegerValue
devicePeerMetadata
initFromDictionary:
dictionaryRepresentation
_name
_model
_platform
T@"NSString",R,C,N,V_name
T@"NSString",R,C,N,V_model
Tq,R,N,V_platform
setProtocolVersion:
_deviceIdentifier
_metadata
_protocolVersion
T@"NSString",R,C,N,V_deviceIdentifier
T@"BMSyncDevicePeerMetadata",R,N,V_metadata
TQ,N,V_protocolVersion
startRequestTimeout
stopRequestTimeout
requestBlock
removeObject:
setObject:forKeyedSubscript:
requestTimeoutDidFire
requestTimeoutHandler
initWithUUID:activity:requestBlock:queue:completionHandler:
runRequestOnDevice:
markAsInFlightToDevice:
markAsDeliveredToDevice:withError:
uuid
setUuid:
activity
setActivity:
setRequestBlock:
completionHandler
setCompletionHandler:
deliveredToDevices
setDeliveredToDevices:
inFlightToDevices
setInFlightToDevices:
errorFromDevice
setErrorFromDevice:
queue
setQueue:
requestTimeout
setRequestTimeout:
setRequestTimeoutHandler:
setSessionContext:
_transaction
_deliveredToDevices
_inFlightToDevices
_errorFromDevice
_uuid
_requestBlock
_completionHandler
_queue
_requestTimeout
_requestTimeoutHandler
_sessionContext
T@"NSUUID",&,N,V_uuid
T@"NSObject<OS_xpc_object>",&,N,V_activity
T@?,C,N,V_requestBlock
T@?,C,N,V_completionHandler
T@"NSSet",&,N,V_deliveredToDevices
T@"NSSet",&,N,V_inFlightToDevices
T@"NSDictionary",&,N,V_errorFromDevice
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
T@"NSObject<OS_dispatch_source>",&,N,V_requestTimeout
T@?,C,N,V_requestTimeoutHandler
T@"BMSyncSessionContext",&,N,V_sessionContext
peerStatusTracker
metricsCollector
initWithQueue:
setDelegate:
localDeviceIdentifierCreatingIfNecessary
registerRequests
start
fetchAtomBatchesIsReciprocal:reason:activity:completionHandler:
discoveredDevices
setWithArray:
containsObject:
isSubsetOfSet:
unionSet:
bmDeviceIdentifier
siteSuffix
allObjects
allValues
completeRequest:deliveredToDevices:withErrors:
removeObjectForKey:
buildAtomBatchRequestWithIsReciprocal:sequenceNumber:
objectForKey:
sendFetchAtomBatchesRequest:toDevice:forRequest:
errorWithDomain:code:userInfo:
setObject:forKey:
runRequest:onDevice:
isReciprocalRequest
handleFetchAtomBatchesResponse:options:error:fromDevice:forRequest:isReciprocal:
sendRequest:request:toDevice:responseHandler:
vectorClockForStreamsSupportingTransportType:direction:
localDeviceUpdatingIfNecessary
setPeer:
setWalltime:
setBatchSize:
setBatchSequenceNumber:
setVectorClock:
setIsReciprocalRequest:
setAtomBatchVersion:
fetchAtomBatchesRequestHandler
registerRequestID:requestHandler:
supportsSyncingWithPlatform:overTransport:inDirection:
removeAllObjects
stop
atomBatchVersion
vectorClock
atomBatchesAfterClock:targetPlatform:transportType:direction:version:chunker:
setUnseenPeers:
setAtomBatches:
batchSequenceNumber
finishRequest:toDevice:withError:peerInfo:
peer
setBmDeviceIdentifier:
atomBatchBytes
atomBatches
mergeAtomBatches:sessionContext:
completeRequestIfDeliveredToAllNearbyDevices:
upsertSyncDevicePeer:
localDeviceUpdatingIfNeccesaryWithProtocolVersion:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
rapportManager:isDeviceSupported:
rapportManager:didDiscoverBMRapportDevice:
rapportManager:didLoseNearbyBMRapportDevice:
rapportManagerDiscoveryTimedOut:
initWithDistributedSyncMultiStreamManager:queue:
initWithDistributedSyncMultiStreamManager:rapportManager:atomBatchChunkerPolicy:queue:
startClient
startServer
syncNowWithReason:activity:completionHandler:
setMetricsCollector:
reciprocalCompletionBlock
setReciprocalCompletionBlock:
_syncManager
_rapportManager
_requestQueue
_localDeviceIdentifier
_atomBatchChunkerPolicy
_peerStatusTracker
_metricsCollector
_reciprocalCompletionBlock
T@?,C,N,V_reciprocalCompletionBlock
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
T@"BMSyncDevicePeerStatusTracker",R,N,V_peerStatusTracker
T@"BMSyncSessionMetricsCollector",&,N,V_metricsCollector
syncableStreamIDs
path
stringByAppendingPathComponent:
defaultManager
removeItemAtPath:error:
userInfo
code
descriptor
localizedFailureReason
setCorruptionHandler:
open
distributedSyncMultiStreamManagerWithDatabase:
initWithSyncEngine:peerStatusTracker:database:queue:
state
setState:
database
setDatabase:
distributedSyncMultiStreamManager
setDistributedSyncMultiStreamManager:
rapportSyncEngine
setRapportSyncEngine:
syncScheduler
setSyncScheduler:
_state
_distributedSyncMultiStreamManager
_rapportSyncEngine
_syncScheduler
TQ,N,V_state
T@"BMSyncDatabase",&,N,V_database
T@"BMDistributedSyncMultiStreamManager",&,N,V_distributedSyncMultiStreamManager
T@"BMRapportSyncEngine",&,N,V_rapportSyncEngine
T@"BMSyncScheduler",&,N,V_syncScheduler
sendEvent:payload:
initWithQueue:core:
syncNowIfPolicyAllowsWithReason:activity:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
newEnumeratorFromStartTime:options:
newEnumeratorFromBookmark:options:
config
remoteStreamName
newTombstoneEnumeratorFromStartTime:
segmentName
offset
newTombstoneEnumeratorFromBookmark:
dataUsingEncoding:
latestDistributedTimestampForSiteIdentifier:inStream:
initWithSiteIdentifier:clockValue:
clockValue
initWithFormat:
initWithZoneName:ownerName:
initWithName:zoneID:
location
timestamp
initWithLocation:timestamp:type:
initWithLocation:timestamp:causalReference:type:bookmark:tombstoneBookmark:
ckAtomRowForAtomWithBookmark:type:forSiteIdentifier:inStream:
containsCKAtomRowWithSegment:inStream:
frame
data
dataVersion
initWithEventData:dataVersion:dataTimestamp:
initWithAtomType:value:
causalReference
ckAtomRowWithTimestamp:inStream:
type
bookmark
deleteEventAtBookmark:outTombstoneBookmark:
value
eventData
eventBodyClass
registeredEventClass
writeEventBodyClass:
dataTimestamp
_writeEventData:dataVersion:timestamp:outBookmark:
atomValueFromEvent:ofType:
serialize
addAtomWithValueData:toAtomBatch:fromAtomTableRecord:
siteIdentifier
setSiteIdentifier:
setClock:
modifier
setModifier:
unordered
setUnordered:
references
setType:
identifier
setIdentifier:
appendWithProxyBlock:
setAtomType:
setAtomBehavior:
setValue:
appendAtomWithBlock:
bm_description
initWithData:encoding:
initWriterWithAtomLocation:version:
datastorePath
segmentSize
initWithStoreBasePath:segmentSize:
setStoreLocationOption:
setRemoteStreamName:
initWithStream:permission:config:includeTombstones:
atomRowsOnOrAfterDistributedTimestamp:inStream:
nextEvent
compareToTimestamp:
addAtomToAtomBatch:ifChunkerAllows:fromAtomTableRecord:event:
finishWriting
latestCKAtomRowOfType:forSiteIdentifier:inStream:
newEnumeratorFromBookmark:reader:
ckAtomTableRecordForType:atBookmark:tombstoneBookmark:previousTableRecord:siteIdentifier:
addCKAtomRow:inStream:
latestCKAtomRowWithTombstoneBookmarkForSiteIdentifier:inStream:
tombstoneBookmark
newTombstoneEnumeratorFromBookmark:reader:
nextTombstoneEvent
eventBody
deletionReason
initWithStream:segment:iterationStartTime:offset:
numberOfAtoms
substringWithRange:
componentsSeparatedByString:
objectAtIndexedSubscript:
beginTransaction
containsCKAtomRowWithTimestamp:inStream:onDisk:
proxyAtIndex:
reference
atomType
initWithLocation:timestamp:causalReference:type:valueData:
enumerateAtomsWithOptions:usingBlock:
commit
rollback
initWithStream:config:
isEqualToReference:
valueData
atomValueFromData:
writeAtomValue:fromAtomRow:usingWriter:outBookmark:
handleDeleteAtomRow:usingPruner:outBookmark:outTombstoneBookmark:
updateCKAtomRow:inStream:
atomRowsNotOnDiskReferencingSiteIdentifier:inStream:enumerateWithBlock:
timestampVectorForStreamName:
initWithStreamID:config:policy:localSiteIdentifier:database:
atomsAfterDistributedTimestamp:version:chunker:
mergeAtoms:sessionContext:
streamID
_streamName
_localSiteIdentifier
_config
_policy
_streamID
T@"BMSyncStreamID",R,N,V_streamID
setDispatchQueue:
setControlFlags:
setServiceType:
handleDiscoveryClientInvalidation
setInvalidationHandler:
didDiscoverDevice:
setDeviceFoundHandler:
didLoseDevice:
setDeviceLostHandler:
device:didChange:
setDeviceChangedHandler:
handleDiscoveryClientActivationOrError:
activateWithCompletion:
activeDevices
count
createDiscoveryClientIfNotExists
registerRequestID:options:handler:
activateDiscoveryClient
sendRequest:request:device:options:responseHandler:
deregisterRequestID:
invalidate
shortenedRapportIdentifier
mutableCopy
requestQueue
client
setClient:
device
setDestinationDevice:
handleInterruptionForDevice:
setInterruptionHandler:
invalidateClientWithError:
handleActivationForDevice:error:
sendNextRequestToDevice:
domain
rapportIdentifier
popFirstObject
finishedSendingRequestsToDevice:
numberWithInt:
sendRequestID:request:options:responseHandler:
bm_companionLinkDeviceIdentifier
proximity
initWithRPCompanionLinkDevice:
serviceTypes
delegate
registeredRequests
setRegisteredRequests:
_discoveryClient
_discoveryClientState
_devices
_unsupportedDevices
_delegate
_registeredRequests
T@"NSMutableDictionary",&,N,V_registeredRequests
T@"<BMRapportManagerDelegate>",W,N,V_delegate
array
substringToIndex:
dispatchQueue
handleInvalidationWithError:
setDevice:
setRequestQueue:
_rapportIdentifier
_bmDeviceIdentifier
_device
_client
T@"RPCompanionLinkDevice",&,N,V_device
T@"RPCompanionLinkClient",&,N,V_client
T@"NSMutableArray",&,N,V_requestQueue
T@"NSArray",R,N
T@"NSString",R,N,V_rapportIdentifier
T@"NSString",R,N
T@"NSString",&,N,V_bmDeviceIdentifier
Tq,R,N
doubleValue
numberWithDouble:
walltime
_peer
_walltime
T@"BMSyncDevicePeer",&,N,V_peer
Td,N,V_walltime
boolValue
deserialize:error:
serialize:
addEntriesFromDictionary:
batchSize
_isReciprocalRequest
_vectorClock
_atomBatchVersion
_batchSize
_batchSequenceNumber
T@"BMMultiStreamVectorClock",&,N,V_vectorClock
TQ,N,V_atomBatchVersion
TB,N,V_isReciprocalRequest
TQ,N,V_batchSize
TQ,N,V_batchSequenceNumber
setWithObjects:
unarchivedObjectOfClasses:fromData:error:
archivedDataWithRootObject:requiringSecureCoding:error:
unseenPeers
setAtomBatchBytes:
_unseenPeers
_atomBatches
_atomBatchBytes
T@"NSArray",&,N,V_unseenPeers
T@"NSDictionary",&,N,V_atomBatches
TQ,N,V_atomBatchBytes
standardUserDefaults
identifierFromDescriptor:
currentDevice
syncableStreamIDsForPlatform:
loadAdditionalSyncPolicyDictionaries
allKeys
addObjectsFromArray:
policyForStreamID:forPlatform:
initWithStreamID:policyDictionary:
directionsSupportedForTransport:
_supportsTransport:direction:outSupportedDirections:
supportsTransport:direction:
policyForStreamID:
minimumTimeBetweenSyncsForTransport:
minimumTimeBetweenSyncsAttemptsForTransport:
_policyDictionary
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
unsignedLongValue
enumerateWithBlock:
_location
_timestamp
_causalReference
_bookmark
_tombstoneBookmark
_type
_valueData
T@"CKAtomLocation",R,N,V_location
T@"CKDistributedTimestamp",R,N,V_timestamp
T@"CKAtomReference",R,N,V_causalReference
T@"BMStoreBookmark",R,N,V_bookmark
T@"BMStoreBookmark",R,N,V_tombstoneBookmark
TQ,R,N,V_type
T@"NSData",R,N,V_valueData
longForColumn:
dataForColumn:
SELECT_FROM:COLUMNS:WHERE:ORDER_BY:LIMIT:
numberWithUnsignedLong:
numberWithUnsignedChar:
lastErrorMessage
SELECT_FROM:COLUMNS:WHERE:GROUP_BY:
stringForColumnIndex:
unsignedLongLongIntForColumnIndex:
initWithTimestamps:
intForColumnIndex:
latestCKAtomRowForSiteIdentifier:inStream:
containsCKAtomRowWithTimestamp:inStream:
ckAtomRowsWaitingFor:inStream:
valueForEntitlement:
isEqualToNumber:
bm_checkEntitlement:
initWithMachServiceName:
resume
triggerSyncWithReply:
peerInformationWithReply:
interfaceWithProtocol:
setExportedInterface:
setExportedObject:
setRemoteObjectInterface:
listener:shouldAcceptNewConnection:
_core
_listener
idsDeviceIdentifier
T@"NSString",R
setValue:forKey:
encodeObject:forKey:
decodeDictionaryWithKeysOfClass:objectsOfClass:forKey:
unarchivedObjectOfClass:fromData:error:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
setVectorClockTo:forStreamIdentifier:
vectorClockForStreamIdentifier:
_SELECT_FROM:COLUMNS:WHERE:GROUP_BY:ORDER_BY:LIMIT:
componentsJoinedByString:
stringWithFormat:
arrayWithCapacity:
appendString:
appendFormat:
integerValue
executeQuery:withArgumentsInArray:
executeQuery:
containsString:
executeUpdate:withArgumentsInArray:
valueForMetadataKey:
dateWithTimeIntervalSinceReferenceDate:
timeIntervalSinceReferenceDate
setValue:forMetadataKey:
lastSyncAttemptDate
setLastSyncAttemptDate:
T@"NSDate",&,N
decodeObjectOfClass:forKey:
_value
T@"BMStoreEventAtomValue",R,N,V_value
numberWithUnsignedInt:
unsignedIntValue
_dataVersion
_eventData
_dataTimestamp
T@"NSData",R,N,V_eventData
TI,R,N,V_dataVersion
Td,R,N,V_dataTimestamp
timestampCount
timestampForSiteIdentifier:
initWithSiteIdentifier:clockValue:modifier:unordered:
addTimestamp:
timestamps
minusSet:
initWithData:error:
updateVectorClockByUnionWithUnseenSiteIdentifiers:
initWithStreamCRDT:database:localSiteIdentifier:policy:
mergeAtomBatch:sessionContext:
atomBatchAfterClock:version:chunker:
policy
_streamCRDT
T@"BMSyncPolicy",R,N,V_policy
initWithDistributedSyncManagers:peerStatusTracker:
distributedSyncManagers
_distributedSyncManagers
T@"NSDictionary",R,N,V_distributedSyncManagers
configForSyncStreamID:
streamForStreamIdentifier:
hasPrefix:
substringFromIndex:
identifierForPublicStreamNamed:
identifierForRestrictedStreamNamed:
directoryForPublicStreams
directoryForRestrictedStreams
storeConfigurationForStream:
newRestrictedStreamDefaultConfiguration
_path
T@"NSString",R,N,V_name
syncNowIfPolicyAllowsWithReason:activity:completionHandler:
timeIntervalSinceDate:
_syncEngine
syncDirectory
initWithPath:queue:
databaseWithPath:
setShouldCacheStatements:
initWithFormat:arguments:
setState:error:
internalState
setState:errorFormat:
databasePath
stringByDeletingLastPathComponent
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
openWithFlags:
lastErrorCode
stringByDeletingPathExtension
fileExistsAtPath:
sqliteHandle
executeStatements:
tableExists:
setUserVersion:
userVersion
corruptionHandler
_tryOpen:
isOpen
lastError
beginDeferredTransaction
objectForColumnIndex:
executeUpdate:
initWithPath:
version
error
_fmdb
_flags
__error_ivar
__internal_state_ivar
_corruptionHandler
T@"NSString",R,N,V__error_ivar
TQ,R,N,V__internal_state_ivar
TI,R,N
T@?,C,N,V_corruptionHandler
TQ,R,N
setLocalDeviceIdentifier:
resultDictionary
initWithURL:
dealloc
fileURLWithPath:
FMDBUserVersion
stringByAppendingString:
intValue
fileSystemRepresentation
sqlitePath
setMaxBusyRetryTimeInterval:
openWithFlags:vfs:
UTF8String
clearCachedStatements
closeOpenResultSets
pointerValue
setParentDB:
valueWithNonretainedObject:
objectEnumerator
inUse
objectsPassingTest:
anyObject
setQuery:
dataWithBytes:length:
rekeyWithData:
setKeyWithData:
setDateFormat:
timeZoneForSecondsFromGMT:
setTimeZone:
initWithLocaleIdentifier:
setLocale:
dateFromString:
stringFromDate:
dictionaryWithObject:forKey:
errorWithMessage:
warnInUse
bytes
hasDateFormatter
timeIntervalSince1970
objCType
charValue
unsignedCharValue
shortValue
unsignedShortValue
longValue
longLongValue
unsignedLongLongValue
floatValue
characterAtIndex:
numberWithShort:
numberWithUnsignedShort:
numberWithLongLong:
numberWithUnsignedLongLong:
numberWithFloat:
numberWithLong:
executeQuery:withArgumentsInArray:orDictionary:orVAList:shouldBind:
databaseExists
cachedStatementForQuery:
statement
reset
bindStatement:WithArgumentsInArray:orDictionary:orVAList:
setStatement:
setCachedStatement:forQuery:
resultSetWithStatement:usingParentDatabase:shouldAutoClose:
useCount
setUseCount:
bindObject:toColumn:inStatement:
objectAtIndex:
stringWithCapacity:
extractSQL:argumentsList:intoString:arguments:
internalStepWithError:
executeUpdate:error:withArgumentsInArray:orDictionary:orVAList:
dictionaryWithCapacity:
executeStatements:withResultBlock:
logsErrors
startSavePointWithName:error:
rollbackToSavePointWithName:error:
releaseSavePointWithName:error:
checkpoint:name:logFrameCount:checkpointCount:error:
crashOnErrors
dictionary
setCachedStatements:
makeFunctionNamed:arguments:block:
databaseWithURL:
FMDBVersion
sqliteLibVersion
isSQLiteThreadSafe
storeableDateFormat:
databaseURL
limitFor:value:
maxBusyRetryTimeInterval
busyRetryTimeout
setBusyRetryTimeout:
hasOpenResultSets
resultSetDidClose:
rekey:
setKey:
goodConnection
hadError
lastExtendedErrorCode
lastInsertRowId
changes
executeQuery:withParameterDictionary:
executeQueryWithFormat:
executeQuery:values:error:
executeQuery:withVAList:
executeUpdate:values:error:
executeUpdate:withParameterDictionary:
executeUpdate:withVAList:
executeUpdateWithFormat:
executeUpdate:withErrorAndBindings:
update:withErrorAndBindings:
prepare:
beginImmediateTransaction
beginExclusiveTransaction
inTransaction
interrupt
inSavePoint:
checkpoint:error:
checkpoint:name:error:
shouldCacheStatements
makeFunctionNamed:maximumArguments:withBlock:
valueType:
valueInt:
valueLong:
valueDouble:
valueData:
valueString:
resultNullInContext:
resultInt:context:
resultLong:context:
resultDouble:context:
resultData:context:
resultString:context:
resultError:context:
resultErrorCode:context:
resultErrorNoMemoryInContext:
resultErrorTooBigInContext:
traceExecution
setTraceExecution:
checkedOut
setCheckedOut:
setCrashOnErrors:
setLogsErrors:
cachedStatements
setIsOpen:
isInTransaction
_isExecutingStatement
_startBusyRetryTime
_openResultSets
_openFunctions
_dateFormat
_shouldCacheStatements
_traceExecution
_checkedOut
_crashOnErrors
_logsErrors
_isOpen
_isInTransaction
_maxBusyRetryTimeInterval
_cachedStatements
_databasePath
TB,V_traceExecution
TB,V_checkedOut
TB,V_crashOnErrors
TB,V_logsErrors
T@"NSMutableDictionary",&,V_cachedStatements
TB,N,V_isOpen
TB,R,N
Ti,R,N
TB,R,N,V_isInTransaction
TB,N,V_shouldCacheStatements
T@"NSString",R,N,V_databasePath
T@"NSURL",R,N
T^v,R,N
Td,N,V_maxBusyRetryTimeInterval
query
setInUse:
_statement
_query
_useCount
_inUse
Tq,V_useCount
T@"NSString",&,V_query
T^v,V_statement
TB,V_inUse
stringByReplacingOccurrencesOfString:withString:
getTableSchema:
columnExists:inTableWithName:
stringForQuery:
intForQuery:
longForQuery:
boolForQuery:
doubleForQuery:
dataForQuery:
dateForQuery:
getSchema
applicationID
setApplicationID:
columnExists:columnName:
validateSQL:error:
TI,N
setShouldAutoClose:
initWithCapacity:
lowercaseString
columnNameToIndexMap
keyEnumerator
nextObject
objectForColumnName:
nextWithError:
stepWithError:
columnIndexForName:
longForColumnIndex:
longLongIntForColumnIndex:
boolForColumnIndex:
doubleForColumnIndex:
dateWithTimeIntervalSince1970:
dataForColumnIndex:
dataNoCopyForColumnIndex:
dataWithBytesNoCopy:length:freeWhenDone:
columnIndexIsNull:
UTF8StringForColumnIndex:
UTF8StringForColumn:
objectForColumn:
bindWithArray:orDictionary:orVAList:
columnCount
kvcMagic:
resultDict
step
hasAnotherRow
longLongIntForColumn:
unsignedLongLongIntForColumn:
boolForColumn:
doubleForColumn:
dateForColumn:
dataNoCopyForColumn:
columnIsNull:
UTF8StringForColumnName:
columnNameForIndex:
bindWithArray:
bindWithDictionary:
parentDB
shouldAutoClose
_columnNameToIndexMap
_shouldAutoClose
_parentDB
TB,N,V_shouldAutoClose
T@"_bmFMDatabase",&,N,V_parentDB
T@"NSMutableDictionary",R
T@"_bmFMStatement",&,V_statement
T@"NSDictionary",R,N
initWithPath:flags:
initWithPath:flags:vfs:
exceptionWithName:reason:userInfo:
raise
executeLocked:
lastObject
removeLastObject
databaseClass
databasePool:shouldAddDatabaseToPool:
databasePool:didAddDatabase:
pushDatabaseBackInPool:
beginTransaction:withBlock:
databasePoolWithPath:
databasePoolWithURL:
databasePoolWithPath:flags:
databasePoolWithURL:flags:
initWithURL:flags:vfs:
initWithURL:flags:
countOfCheckedInDatabases
countOfCheckedOutDatabases
countOfOpenDatabases
releaseAllDatabases
inDatabase:
inTransaction:
inDeferredTransaction:
inExclusiveTransaction:
inImmediateTransaction:
setPath:
maximumNumberOfDatabasesToCreate
setMaximumNumberOfDatabasesToCreate:
openFlags
vfsName
setVfsName:
_lockQueue
_databaseInPool
_databaseOutPool
_openFlags
_maximumNumberOfDatabasesToCreate
_vfsName
T@"NSString",C,V_path
T@,V_delegate
TQ,V_maximumNumberOfDatabasesToCreate
Ti,R,V_openFlags
T@"NSString",C,V_vfsName
databaseQueueWithPath:
databaseQueueWithPath:flags:
databaseQueueWithURL:
databaseQueueWithURL:flags:
T@"NSString",&,V_path
@16@0:8
v24@0:8@16
Q16@0:8
v24@0:8Q16
v16@0:8
@"NSString"
@24@0:8@16
v44@0:8@16Q24Q32B40
v48@0:8@16B24Q28B36@40
v64@0:8Q16@24@32@40d48@56
@"BMSyncDatabase"
@32@0:8@16@24
@"NSObject<OS_xpc_object>"
@24@0:8^{_NSZone=}16
B24@0:8@16
B24@0:8@"NSData"16
v24@0:8@"NSData"16
@24@0:8Q16
B16@0:8
v20@0:8B16
@"<BMAtomBatchChunkerPolicy>"
B28@0:8@16B24
B32@0:8@16@24
@24@0:8@"NSDictionary"16
@"NSDictionary"16@0:8
@40@0:8@16@24q32
q16@0:8
@40@0:8@16@24Q32
@"BMSyncDevicePeerMetadata"
@56@0:8@16@24@?32@40@?48
v32@0:8@16@24
@?16@0:8
v24@0:8@?16
@"NSObject<OS_os_transaction>"
@"NSMutableSet"
@"NSMutableDictionary"
@"NSUUID"
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_dispatch_source>"
@"BMSyncSessionContext"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@"BMRapportManager"16@"BMRapportDevice"24
v32@0:8@"BMRapportManager"16@"BMRapportDevice"24
v24@0:8@"BMRapportManager"16
@48@0:8@16@24@32@40
v40@0:8Q16@24@?32
v40@0:8@16@24@32
v44@0:8B16Q20@28@?36
@28@0:8B16Q20
v60@0:8@16@24@32@40@48B56
v48@0:8@16@24@32@40
I16@0:8
@"BMDistributedSyncMultiStreamManager"
@"BMRapportManager"
@"NSObject<BMAtomBatchChunkerPolicy>"
@"BMSyncDevicePeerStatusTracker"
@"BMSyncSessionMetricsCollector"
@"BMRapportSyncEngine"
@"BMSyncScheduler"
@56@0:8@16@24@32@40@48
@56@0:8Q16@24@32@40@48
@32@0:8@16Q24
B48@0:8@16@24^@32^@40
B48@0:8@16@24@32^@40
B48@0:8@16@24@32@40
@36@0:8@16C24@28
@"BMStoreConfig"
@"BMSyncPolicy"
@"BMSyncStreamID"
v32@0:8@16@?24
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v28@0:8@16I24
@"RPCompanionLinkClient"
@"<BMRapportManagerDelegate>"
@"RPCompanionLinkDevice"
@"NSMutableArray"
d16@0:8
v24@0:8d16
@"BMSyncDevicePeer"
@"BMMultiStreamVectorClock"
@"NSArray"
@"NSDictionary"
@24@0:8q16
@32@0:8@16q24
d24@0:8Q16
Q24@0:8Q16
B40@0:8Q16Q24^Q32
B32@0:8Q16Q24
B40@0:8q16Q24Q32
@64@0:8@16@24@32Q40@48@56
@56@0:8@16@24@32Q40@48
@"CKAtomLocation"
@"CKDistributedTimestamp"
@"CKAtomReference"
@"BMStoreBookmark"
@"NSData"
@40@0:8Q16@24@32
B36@0:8@16@24B32
@48@0:8@16Q24@32@40
v40@0:8@16@24@?32
v24@0:8@?<v@?@"NSError">16
v24@0:8@?<v@?@"NSArray"@"NSError">16
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"BMSyncCore"
@"NSXPCListener"
@32@0:8@16^@24
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^@16
@40@0:8@16@24@32
@64@0:8@16@24@32@40@48@56
B40@0:8@16@24@32
@32@0:8Q16@24
@"BMStoreEventAtomValue"
@36@0:8@16I24d28
@"BMStreamCKCRDT"
@32@0:8Q16Q24
@60@0:8@16q24Q32Q40C48@52
v32@0:8Q16@24
B24@0:8Q16
@"_bmFMDatabase"
v56@0:8@16@24Q32B40Q44B52
v72@0:8Q16@24@32Q40@48@56d64
i16@0:8
^v16@0:8
r*16@0:8
i24@0:8i16i20
B20@0:8i16
B28@0:8i16@20
v20@0:8i16
i36@0:8@16i24^{sqlite3_stmt=}28
v48@0:8@16*24@32@40
@52@0:8@16@24@32*40B48
B48@0:8^{sqlite3_stmt=}16@24@32*40
@40@0:8@16@24^@32
@32@0:8@16*24
B56@0:8@16^@24@32@40*48
B40@0:8@16@24^@32
B32@0:8@16*24
B32@0:8@16@?24
B32@0:8@16^@24
@24@0:8@?16
B28@0:8i16^@20
B36@0:8i16@20^@28
B52@0:8i16@20^i28^i36^@44
v36@0:8@16i24@?28
i24@0:8^v16
q24@0:8^v16
d24@0:8^v16
@24@0:8^v16
v24@0:8^v16
v28@0:8i16^v20
v32@0:8q16^v24
v32@0:8d16^v24
v32@0:8@16^v24
@"NSDateFormatter"
v24@0:8q16
v20@0:8I16
@36@0:8@16@24B32
B24@0:8^@16
i24@0:8^@16
i24@0:8@16
i20@0:8i16
q24@0:8@16
q20@0:8i16
Q24@0:8@16
Q20@0:8i16
d24@0:8@16
d20@0:8i16
@20@0:8i16
r*20@0:8i16
r*24@0:8@16
B40@0:8@16@24*32
@"_bmFMStatement"
@28@0:8@16i24
@36@0:8@16i24@28
v32@0:8q16@?24
BiomeSync
device_identifier
name
model
platform
protocol_version
DevicePeer
me IS ?
device_identifier = ?
max(last_sync_date)
last_sync_date
deviceIdentifier
deviceMetadata
protocolVersion
BMRapportRequest
v8@?0
v16@?0@"BMRapportDevice"8
com.apple.biomesyncd.fetchAtomBatches
v32@?0@"NSDictionary"8@"NSDictionary"16@"NSError"24
senderModelID
Unable to determine sender model info
Unknown platform
v24@?0@"NSArray"8@"NSArray"16
v32@?0@"NSDictionary"8@"NSDictionary"16@?<v@?@"NSDictionary"@"NSDictionary"@"NSError">24
remote
com.apple.biome.syncSessionLog
com.apple.biomesyncd
com.apple.biomesyncd.metrics-collection
com.apple.biomesyncd.periodic-sync
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.notifyd.matching
Notification
com.apple.rapport.CompanionLinkDeviceAdded
com.apple.rapport.matching
replyRequired
BMStreamCKCRDT.m
Invalid parameter not satisfying: %@
streamID
config
database
(%@,%@)
v24@?0@"CKAtomReferenceMutableProxy"8Q16
v24@?0@"CKAtomMutableProxy"8Q16
v32@?0@"CKAtomProxy"8Q16^B24
v24@?0@"BMSyncCKAtomRow"8^B16
com.apple.biomesyncd.rapport
v16@?0@"RPCompanionLinkDevice"8
v20@?0@"RPCompanionLinkDevice"8I16
v16@?0@"NSError"8
~~REQUEST_ID~~
~~RESPONSE_HANDLER~~
~~OPTIONS~~
failed with error, 
completed
BMRapportDevice[%@]: id=%@ bmID=%@ model=%@ name=%@
Unknown
Immed
Near
peer
walltime
batchSize
batchSequenceNumber
isReciprocalRequest
atomBatchVersion
vectorClock
unseenPeers
atomBatches
moreComing
AdditionalSyncPolicies
public/DeviceMetadata
restricted/feedbackSocialHighlights
rapport
direction
eventClass
BMDeviceMetadataEvent
outbound
BMSocialHighlightFeedbackEvent
BMSyncPolicy.m
Unexpected direction %lu
cloudkit
NSString *NSStringFromBMSyncTransportType(BMSyncTransportType)
No mapping found for BMSyncTransportType(%lu)
none
inbound
BMSyncDirection BMSyncDirectionFromNSString(NSString *__strong)
No mapping found for %@
BMSyncCKAtomRow.m
location
timestamp
<%@: type=%@, location=%@, atomID=%@, refID=%@ bookmarkOffset=%lu>
stream
site
clock
type
segment_name
segment_offset
tombstone_segment_name
tombstone_segment_offset
ref_location
ref_type
ref_site
ref_clock
value_data
CKAtom
(ref_site = ?
 OR (ref_site IS NULL AND site = ?))
 AND stream = ?
 AND clock >= ?
 AND on_disk IS ?
clock ASC
v24@?0@"_bmFMResultSet"8^B16
on_disk
site = ?
 AND clock = ?
clock DESC
max(clock)
stream = ?
type = ?
 AND site = ?
 AND segment_name
 IS NOT 'DOA'
 AND ref_site = ?
 AND tombstone_segment_name
IS NOT NULL
tombstone_segment_name DESC
tombstone_segment_offset DESC
count(*)
clock = ?
 AND ref_site IS ?
 AND ref_clock IS ?
type ASC
 AND type = ?
 AND segment_name = ?
 AND segment_offset = ?
ref_clock ASC
com.apple.biomesyncd.sync
com.apple.private.biome.sync
com.apple.internal.biome.sync
-[BMSyncServiceServer triggerSyncWithReply:]
isMe
platformDescription
BMRapportErrorDomain
SELECT %@ FROM %@
 WHERE 
 GROUP BY %@
 ORDER BY %@
 LIMIT %@
UPDATE OR FAIL %@ SET 
 = ?, 
 = ?
INSERT INTO %@
) VALUES (
%@:%lu
LastSyncAttemptDate
Append
TTLDelete
RandomDelete
Modify
BMSyncAtomType(%llu)
atomType
atomValue
data
dataVersion
dataTimestamp
BMDistributedSyncMultiStreamManager.m
direction == BMSyncDirectionOutbound
BMSyncStreamID.m
streamName.length
stream != BMPublicStreamUnknown
public/
restricted/
public/%@
restricted/%@
identifier
com.apple.biome.syncNow
never
sync.db
BMSyncDatabase.m
path
unknown
recursion max
failed to create path: %@
PRAGMA journal_mode = WAL;PRAGMA foreign_keys = ON;
Metadata
version too new
needs migration, which is not implemented
failed to delete corrupt database file: %@
unhandled state %llu
SELECT value FROM Metadata WHERE key=?
INSERT INTO Metadata VALUES (?, ?)
select session_duration.session_id, duration, reachable_peers_cnt, is_reciprocal, reason as sync_reason, cast((select count(*) from DevicePeer) as text) as known_peers_cnt_str, cast(reachable_peers_cnt as real) / (select count(*) from DevicePeer) as peer_availabilty_pct, avg_sync_latency, atoms_dropped_cnt, atoms_causality_violation_cnt, atoms_received_cnt, atoms_relayed_cnt, relay_earliness, relay_unseen_peer_atom_cnt, atom_batch_bytes from ( select session_id, is_reciprocal, reason, (end_timestamp - start_timestamp) as duration from SyncSessionLog group by session_id, is_reciprocal, reason ) as session_duration left join ( select session_id, count(distinct device_identifier) as reachable_peers_cnt from SyncMessageLog group by session_id ) as reachable_peers on session_duration.session_id=reachable_peers.session_id left join ( select session_id, avg(case when event_created_at <> 0 then synced_at - event_created_at else null end) as avg_sync_latency from AtomMergedLog group by session_id ) as sync_latency on session_duration.session_id=sync_latency.session_id left join ( select a.session_id, sum(case when a.merge_result=1 THEN 1 else 0 end) as atoms_dropped_cnt, sum(case when a.merge_result=2 THEN 1 else 0 end) as atoms_causality_violation_cnt, sum(case when a.merge_result=3 THEN 1 else 0 end) as atoms_received_cnt from AtomMergedLog as a join SyncMessageLog as m on a.message_id=m.message_id and a.relayed_by_site_identifier = m.device_identifier and a.session_id=m.session_id group by a.session_id ) as merge_results on session_duration.session_id=merge_results.session_id left join ( select session_id, count(*) as atoms_relayed_cnt from AtomMergedLog as a where owning_site_identifier <> relayed_by_site_identifier and not exists ( select * from SyncMessageLog as m where a.session_id=m.session_id and device_identifier=owning_site_identifier and reachable=1 ) group by session_id ) as relay_count on session_duration.session_id=relay_count.session_id left join ( select relayed.session_id, avg(timestamp - synced_at) as relay_earliness from ( select atom.session_id, synced_at, timestamp from AtomMergedLog as atom, SyncMessageLog as message where owning_site_identifier <> relayed_by_site_identifier and not exists ( select * from SyncMessageLog as m where atom.session_id=m.session_id and device_identifier=owning_site_identifier and reachable=1 ) and device_identifier=owning_site_identifier and reachable=1 and timestamp > synced_at order by timestamp asc limit 1 ) as relayed group by relayed.session_id ) as earliness on session_duration.session_id=earliness.session_id left join ( select session_id, count(*) as relay_unseen_peer_atom_cnt from AtomMergedLog as a where owning_site_identifier <> relayed_by_site_identifier and not exists ( select * from SyncMessageLog as m where device_identifier=owning_site_identifier and reachable=1 ) group by session_id ) as atom_relay_unseen_device on session_duration.session_id=atom_relay_unseen_device.session_id left join ( select session_id, sum(atom_batch_bytes) as atom_batch_bytes from SyncMessageLog group by session_id ) as batch_bytes on session_duration.session_id=batch_bytes.session_id;
SyncSessionLog
session_id
transport
reason
is_reciprocal
start_timestamp
end_timestamp
session_id = ?
SyncMessageLog
message_id
reachable
atom_batch_bytes
AtomMergedLog
owning_site_identifier
relayed_by_site_identifier
merge_result
event_created_at
synced_at
DELETE FROM SyncMessageLog WHERE timestamp <> (SELECT max(timestamp) FROM SyncMessageLog message WHERE device_identifier=message.device_identifier)
DELETE FROM SyncSessionLog
DELETE FROM AtomMergedLog
-[_bmFMDatabase initWithPath:]
FMDatabase.m
sqlite3_threadsafe()
2.7.7
FMDBVersion is invalid: Please use FMDBUserVersion instead.
:memory:
error opening!: %d
Closing leaked statement
error closing!: %d
%s:%d
-[_bmFMDatabase busyRetryTimeout]
FMDB: busyRetryTimeout no longer works, please use maxBusyRetryTimeInterval
-[_bmFMDatabase setBusyRetryTimeout:]
FMDB: setBusyRetryTimeout does nothing, please use setMaxBusyRetryTimeInterval:
B24@?0@"_bmFMStatement"8^B16
query
API misuse, -[_bmFMDatabase setCachedStatement:forQuery:] query must not be nil
en_US
select name from sqlite_master where type='table'
The _bmFMDatabase %@ is currently in use.
The _bmFMDatabase %@ is not open.
_bmFMDatabase
NULL
%@ executeQuery: %@
DB Error: %d "%@"
DB Query: %@
DB Path: %@
%@ = %@
Error: unable to bind (%d, %s
Could not find index for %@
data: %ld bytes
obj: %@
Error: the bind count is not correct for the # of variables (executeQuery)
Error inserting batch: %s
rollback transaction
commit transaction
begin exclusive transaction
begin deferred transaction
begin immediate transaction
savepoint '%@';
release savepoint '%@';
rollback transaction to savepoint '%@';
dbSavePoint%ld
%@ %ld hit(s) for query %@
WARNING: Requested sleep of %i milliseconds, but SQLite returned %i. Maybe SQLite wasn't built with HAVE_USLEEP=1?
select [sql] from sqlite_master where [type] = 'table' and lower(name) = ?
SELECT type, name, tbl_name, rootpage, sql FROM (SELECT * FROM sqlite_master UNION ALL SELECT * FROM sqlite_temp_master) WHERE type != 'meta' AND name NOT LIKE 'sqlite_%' ORDER BY tbl_name, type DESC, name
pragma table_info('%@')
pragma application_id
pragma application_id=%d
pragma user_version
pragma user_version = %d
FMResultSet.m
![statement inUse]
Warning: There seem to be no columns in this set.
%s:%d Database busy (%@)
-[_bmFMResultSet internalStepWithError:]
Database busy
Error calling sqlite3_step (%d: %s) rs
parentDB does not exist
Unknown error calling sqlite3_step (%d: %s) rs
Warning: I could not find the column named '%@'.
fmdb.%@
Database already in pool
The _bmFMDatabase being put back into the pool is already present in the pool
Maximum number of databases (%ld) has already been reached!
Could not open up the database at path %@
savePoint%ld
Could not create database queue for path %@
_bmFMDatabaseQueue could not reopen database for path %@
-[_bmFMDatabaseQueue inDatabase:]
FMDatabaseQueue.m
currentSyncQueue != self && "inDatabase: was called reentrantly on the same queue, which would lead to a deadlock"
Warning: there is at least one open result set around after performing [_bmFMDatabaseQueue inDatabase:]
sessionContext is nil
BMRapportSyncEngine%@: completing request, still inflight: %@
BMRapportSyncEngine%@: completeRequest:deliveredToDevices %@ withErrors:%@
BMRapportSyncEngine%@: sending request to device: %@
BMRapportSyncEngine%@: request timed out because no devices are nearby
BMRapportSyncEngine%@: received request %@ %@
BMRapportSyncEngine%@: unable to determine sender model info: %@
BMRapportSyncEngine%@: unable to determine platform for model %{public}@
BMRapportSyncEngine%@: replying with CKXUncompressedFormatVersion atom batch
BMRapportSyncEngine%@: mismatched protocol version %lu, expected %d
BMRapportSyncEngine%@: should issue reciprocal request, %@
BMRapportSyncEngine%@: fetch completion handler is reciprocal, YES, deviceIdentifiers, %@, errors, %@
BMRapportSyncEngine%@: handleFetchAtomBatchesResponse %@ error %@ fromDevice: %@
BMRapportSyncEngine%@: fetchAtomBatchesResponseHandler received response %@
BMRapportSyncEngine%@: asked to defer activity, won't issue more requests to device %@ even though more data is available
BMRapportSyncEngine%@: max request depth %lu hit, finishing request to device %@
BMRapportSyncEngine%@: sending request to device %@ with sequence number %lu
BMRapportSyncEngine%@: no more data coming from device %@ finishing request
failed to delete remotes for stream %@: %@
biomesyncd launched
biomesyncd last exit status: %lld
Tried to defer activity %s, but failed
biome activity fired "com.apple.biomesyncd.metrics-collection"
Database unavailable for activity "com.apple.biomesyncd.metrics-collection"
biome running activity "com.apple.biomesyncd.metrics-collection"
biome activity fired "com.apple.biomesyncd.periodic-sync"
Database unavailable for activity "com.apple.biomesyncd.periodic-sync"
biome running activity "com.apple.biomesyncd.periodic-sync"
Received unexpected object on com.apple.notifyd.matching: %@
Received com.apple.notifyd.matching: %s
Handling com.apple.notifyd.matching: %s
Database unavailable to handle "com.apple.rapport.CompanionLinkDeviceAdded"
Received unexpected object on com.apple.rapport.matching: %@
Received com.apple.rapport.matching: %s
Handling com.apple.rapport.matching: %s
Database unavailable to handle RapportWake
Received SIGTERM
failed to set user dir suffix: %{darwin.errno}d
failed to initialize temporary directory: %{darwin.errno}d
failed to resolve temporary directory: %{darwin.errno}d
Starting tombstone enumerator from 0 for stream %@ site %@
Starting tombstone enumerator from segment %@ offset %lu for stream %@ site %@
delete must reference a corresponding append
Expected no-data frame to be delete or pre-delete, but frame was %llu
appendRecord %@ is of unexpected type %lu
bookmark is nil, presumably because the referenced atom was a dummy append (dead on arrival) %@
deleting event at bookmark %@
droppping atom %@ as it is dead on arrival
writeEventWithBody: %@
adding %@ to atomBatch
atomsAfterDistributedTimestamp: %@, stream: %@
BMSyncCKAtomRow missing bookmark %@
Next enumerator bookmark %@ doesn't match expected %@
read table BMStoreEvent: %@ at offset %lu
bookmark is DOA, not attempting to resolve event
observed new data from non-local site %@
read new appended BMStoreEvent: %@ at offset %lu
read new deleted BMStoreEvent: %@ at offset %lu
read BMStoreEvent tombstone: %@ at tombstone bookmark %@
mergeAtoms: %lu
dropping atom with timestamp %@ since already merged
atom with timestamp %@ already in table but not on disk
addAtomRow: %@
failed to commit, rolling back
atom to apply to disk %@
causal reference cache hit
causal reference violation: missing causal reference %@
unblocked: %@
failed to apply atom to disk
updating row for atom applied to disk %@
failed to update row: %@
BMRapportManager: already activated %@
BMRapportManager: already activating %@
BMRapportManager: activating %@
BMRapportManager: failed to activate with error: %@
BMRapportManager: activated successfully
BMRapportManager: invalidated
BMRapportManager: stop
sendRequest:request:device:options:responseHandler: passed nil device
BMRapportDevice[%@]: enqueueing request
BMRapportDevice[%@]: activating client
BMRapportDevice[%@]: using existing client
handleActivationForDevice:error: passed nil device
BMRapportDevice[%@]: activation %@%@
BMRapportDevice[%@]: determined to not support service com.apple.biomesyncd.rapport
handleInterruptionForDevice: passed nil device
BMRapportDevice[%@]: interrupted
sendNextRequestToDevice: passed nil device
BMRapportDevice[%@]: expected request id and response handler in %@
BMRapportDevice[%@]: being sent request %@ with options %@
finishedSendingRequestsToDevice: passed nil device
BMRapportDevice[%@]: request queue empty, invalidating client
BMRapportDevice[%@]: advertisement data changed
BMRapportDevice[%@]: pairing flags/attributes changed
BMRapportDevice[%@]: distance changed: %s
BMRapportDevice[%@]: distance wifi information element changed
BMRapportDevice[%@]: name changed: %@
BMRapportDevice[%@]: RSSI changed
BMRapportDevice[%@]: SSID changed
BMRapportDevice[%@]: proximity changed: %s
BMRapportDevice[%@]: distance/angle/something changed
BMRapportDevice[%@]: no transports available; expect a lost callback
BMRapportDevice[%@]: got unexpected change flag: RPDeviceChangeFlags(%x)
BMRapportManager: skipping RPCompanionLinkDevice missing identifier: %@
BMRapportManager: skipping RPCompanionLinkDevice missing model: %@
BMRapportManager: already discovered device, %@ as %@
BMRapportDevice[%@]: ignoring device not listing service com.apple.biomesyncd.rapport
BMRapportDevice[%@]: discovered
BMRapportDevice[%@]: ignoring unsupported device
BMRapportDevice[%@]: lost
BMRapportDevice[%@]: invalidated
failed to unarchive BMMultiStreamVectorClock with error %@
failed to archive BMMultiStreamVectorClock with error %@
failed to unarchive BMMultiStreamAtomBatches with error %@
failed to archive BMMultiStreamAtomBatches with error %@
Failed to insert: %@
Failed to update: %@
syncWithCompletionHandler called
failed to deserialize BMSyncAtomValue with error %@
failed to serialize BMSyncAtomValue with error %@
failed to deserialize BMStoreEventAtomValue with error %@
failed to serialize BMStoreEventAtomValue with error %@
Merging atom batch into %@ from %@
Failed to instantiate CKAtomBatch, %@, %@
Generating atom batch after clock: %@, version: %lu
atomBatchesAfterClock %@ %@ %@
Unable to sync now, because database is not currently accessible
last sync: %{public}@ (%f ago), last attempt: %{public}@ (%f ago)
syncNowWithCompletionHandler %@, errors: %@
skipping sync
transitioned to state %llu
unrecoverable error: %@
database corrupt: %@
database corrupt
error: %@
BMSyncDatabase state queried while opening
failed to close db %@
%@ received nil deviceIdentifier
recordSessionStart: %@
recordSessionEnd: %@
recordMessageToDeviceIdentifier: %@, %@
recordAtomMergeResult: %@, %@
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>20A241115</string>
<key>CFBundleIdentifier</key>
<string>com.apple.biomesyncd</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>13A5154d</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>15.0</string>
<key>DTSDKBuild</key>
<string>19A5294s</string>
<key>DTSDKName</key>
<string>iphonesimulator15.0.internal</string>
<key>DTXcode</key>
<string>1300</string>
<key>DTXcodeBuild</key>
<string>13A5154d</string>
<key>MinimumOSVersion</key>
<string>15.0</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
<integer>2</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.biomesyncd</string>
<key>com.apple.CompanionLink</key>
<true/>
<key>com.apple.private.sandbox.profile:embedded</key>
<string>temporary-sandbox</string>
<key>com.apple.private.security.storage.Biome</key>
<true/>
<key>com.apple.security.exception.files.absolute-path.read-write</key>
<array>
<string>/private/var/tmp/com.apple.biomesyncd/</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>/Library/Biome/sync/</string>
<string>/Library/Biome/streams/public</string>
<string>/Library/Biome/streams/public/DeviceMetadata/</string>
<string>/Library/Biome/streams/restricted</string>
<string>/Library/Biome/streams/restricted/feedbackSocialHighlights/</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.CompanionLink</string>
</array>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.biomesyncd</string>
</array>
<key>com.apple.security.ts.mobile-keybag-access</key>
<true/>
<key>platform-application</key>
<true/>
</dict>
</plist>
