v8@?0
error: failed to find the app support directory -> %@
com.apple.newsstand-library.plist
Newsstand
NKLibrary.m
error: failed to find the caches directory -> %@
the currentlyReadingIssue argument is of an unexpected class (%@) - expected NKIssue
the currentlyReadingIssue argument must be a part of the library
the name argument cannot be nil
the name argument is of an unexpected class (%@) - expected NSString
the name argument cannot be an empty string
the date argument cannot be nil
the date argument is of an unexpected class (%@) - expected NSDate
there is already an issue for this name -> '%@'
error: failed to create the newsstand issue directory: %@
error: failed to create the newsstand issue
the issue argument cannot be nil
the issue argument is of an unexpected class (%@) - expected NKIssue
error: failed to remove the issue contentURL -> %@
removeIssue: %@
UIBackgroundModes
newsstand-content
UINewsstandApp
background task expiring for '%@' - checking in though execution will continue
NewsstandKit: cleaning up abandoned asset downloads: %@
error: could not create newsstand library directory -> %@
issues
currentlyReadingIssue
error: could not archive newsstand library -> %@
error: could not write newsstand library -> %@
error: could not read newsstand library state -> %@
error: newsstand library state was badly defined - tossing -> %@
error: newsstand library state was in an unexpected format - tossing
error: newsstand library state was corrupted - tossing -> %@
error: could not find newsstand issue directories: %@
newsstand cache is not a folder - removing
error: cleaning up out of place file: '%@' -> %@
error: could not create newsstand cache: %@
error: could not get directory name of url: '%@' -> %@
error: could not clean up out of place file: '%@' -> %@
error: could not get isDirectory property of url: '%@' -> %@
newsstand issue does not have backing store - removing -> %@
error: non-issue class in library state 'issues' - ignoring
error: cleaning up out of place directory: '%@' -> %@
_load:cleanup -> %@
error: currently reading issue was purged!!! -> %@
error: cannot mark an issue as currently being read if it is not in the issues array
error: non-issue class in library state 'currently reading issue' - ignoring
q24@?0@8@16
 -> {
  currentlyReadingIssue = %@
  issues by date = %@
NKIssueDownloadCompletedNotification
NKIssue.m
%@-%s: invalid name -> '%@'
%@-%s: invalid date -> '%@'
%@-%s: invalid directory -> '%@'
name
date
directory
assets
foundContent
the name is expected to be an NSString -> '%@'
the date is expected to be an NSDate -> %@
the directory is expected to be an NSString -> '%@'
the assets are expected to be in an NSArray -> %@
an asset download in '%@' issue is of an unexpected class - removing -> %@
an asset download in '%@' issue failed decoding - removing -> %@
an asset download in '%@' issue has an inconsistent identifier - removing -> %@
an asset download in '%@' issue has a duplicate NSURLRequest as a previously decoded asset - removing -> %@
error: newsstand issue is malformed - %@
cannot addAsset to an issue that doesn't belong to a library
assetDownload request cannot be nil
the request argument is of an unexpected class (%@) - expected NSURLRequest
you do not have background download privileges: add 'newsstand-content' to mainBundle.infoDictionary.UIBackgroundModes
there is already an assetDownload for this request -> %@
<%@:%p name:%@ assets:%u> added %@
<%@:%p name:%@ assets:%u resolved:%u> %@ %@
resolved
could not resolve
cleaned up
could not clean up
<%@:%p name:%@> posted %@
 -> {name: '%@', date: '%@', contentURL: '%@'} -> assetDownloads: %@
%@%@%@
identifier
userInfoData
request
the identifier is expected to be an NSString -> '%@'
the userInfo is expected to be an NSData -> %@
the request is expected to be an NSURLRequest -> '%@'
error: newsstand asset download is malformed - %@
error: could not de-serialize the userInfo property list -> %@
the userInfo argument is of an unexpected class (%@) - expected NSDictionary
the userInfo argument can only contain plist-able types
error: could not serialize the userInfo property list -> %@
%@: received _issueWasRemovedFromLibrary
%@: received _cancel
%@: received pre-completed notification - %@
marking as resolved
not marking as resolved due to connection mismatch (might have been cancelled?)
%@: received post-completed notification - %@
cleaning up
not cleaning up due to connection mismatch (might have been cancelled?)
the delegate cannot be nil
newsstand
%@: created connection %@
 -> {identifier: '%@'  request: %@  downloading: %@}
[NKLogging] 
NKLibrary
NKIssue
NSSecureCoding
NSCoding
NKAssetDownload
NKAssetDownloadAdditions
_isNewsstandApp
allocWithZone:
init
sharedLibrary
mapTableWithStrongToStrongObjects
URLForDirectory:inDomain:appropriateForURL:create:error:
URLByAppendingPathComponent:isDirectory:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
_load
sharedApplication
defaultCenter
_applicationDidEnterBackground:
addObserver:selector:name:object:
_applicationWillTerminate:
downloadingAssets
_hasApplicationCalledLaunchDelegate
_didFinishLaunchingWasCalled
array
issues
countByEnumeratingWithState:objects:count:
addObjectsFromArray:
raise:format:
_library
_markIssuesAndSave
objectForKey:
length
issueWithName:
_contentURL
path
fileExistsAtPath:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
_initWithName:date:directory:
setWithArray:
addObject:
_setIssues:
contentURL
removeObject:
currentlyReadingIssue
setCurrentlyReadingIssue:
removeItemAtURL:error:
lastPathComponent
stringWithFormat:
_performBackgroundTask:withDescription:
mainBundle
infoDictionary
containsObject:
boolValue
_markAsDirtyAndSave
endBackgroundTask:
beginBackgroundTaskWithExpirationHandler:
_attemptedConnection
_cancel
count
objectAtIndex:
UTF8String
_saveIfNeeded
_appSupportURL
dictionaryWithCapacity:
setObject:forKey:
copy
archivedDataWithRootObject:requiringSecureCoding:error:
_libraryURL
writeToURL:options:error:
__actuallySave
_saveIfNeededAfterDelay:
dataWithContentsOfURL:options:error:
setWithObjects:
unarchivedObjectOfClasses:fromData:error:
arrayWithObjects:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
fileExistsAtPath:isDirectory:
getResourceValue:forKey:error:
_isDecodingValid
_directory
_setLibrary:
date
compare:
name
removeAllObjects
allObjects
sortedArrayUsingComparator:
_saveNowIfNeeded
description
stringWithString:
appendString:
appendFormat:
copyWithZone:
retain
retainCount
release
autorelease
addIssueWithName:date:
removeIssue:
_issueForDirectory:
_fileManager
_canPerformBackgroundDownloads
_issueChanged:
_issues
_currentlyReadingIssue
_issuesByName
_issuesByDirectory
_inited
_needsSaving
_savePending
_assetsFromLaunch
T@"NSArray",R
T@"NKIssue",&
initWithCapacity:
_commonInit
setName:
setDate:
setDirectory:
_issueWasRemovedFromLibrary
dealloc
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
decodeBoolForKey:
arrayWithCapacity:
setWithCapacity:
identifier
_issueDirectory
isEqualToString:
URLRequest
_setIssue:
encodeObject:forKey:
directory
encodeBool:forKey:
_initWithURLRequest:issue:
removeObjectForKey:
postNotificationName:object:userInfo:
stringByAppendingFormat:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
status
addAssetWithRequest:
_assetsForRequest:
_markAssetAsResolved:
_cleanupAsset:
_assetChanged:
_name
_date
_assets
_assetsByRequest
_resolvedAssets
_foundContent
T@"NSString",C,V_name
T@"NSDate",C,V_date
T@"NSString",C,V_directory
T@"NKLibrary",N,S_setLibrary:
T@"NSArray",R,C
T@"NSURL",R,C
Tq,R
setIssue:
setURLRequest:
setIdentifier:
cancel
setUserInfoData:
userInfoData
propertyListWithData:options:format:error:
propertyList:isValidForFormat:
dataWithPropertyList:format:options:error:
issue
connection
setConnection:
attemptedConnection
numberWithBool:
_connectionBackgroundDownloadPreCompleted:
_connectionBackgroundDownloadPostCompleted:
_initWithRequest:delegate:usesCache:maxContentLength:startImmediately:connectionProperties:
mainRunLoop
scheduleInRunLoop:forMode:
start
setAttemptedConnection:
userInfo
setUserInfo:
_connection
downloadWithDelegate:
_issue
_identifier
_userInfoData
_request
T@"NSString",C,V_identifier
T@"NSURLRequest",C,V_request
T@"NSData",&,V_userInfoData
T@"NSURLConnection",&,V_connection
TB,V_attemptedConnection
T@"NKIssue",R,W,V_issue
T@"NSDictionary",C
rangeOfString:
substringToIndex:
methodSignatureForSelector:
invocationWithMethodSignature:
retainArguments
setTarget:
setSelector:
connectionProperties
originalRequest
newsstandAssetDownload
T@"NKAssetDownload",R,W
stringByAppendingString:
@16@0:8
@24@0:8^{_NSZone=}16
B16@0:8
Q16@0:8
Vv16@0:8
v24@0:8@16
@24@0:8@16
@32@0:8@16@24
v32@0:8@?16@24
v16@0:8
v24@0:8d16
@"NSArray"
@"NKIssue"
@"NSMapTable"
@"NSURL"
@"NSFileManager"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@40@0:8@16@24@32
q16@0:8
@"NKLibrary"
@"NSString"
@"NSDate"
@"NSMutableArray"
@"NSMutableSet"
v20@0:8B16
@"NSData"
@"NSURLRequest"
@"NSURLConnection"
v8@?0
error: failed to find the app support directory -> %@
com.apple.newsstand-library.plist
Newsstand
NKLibrary.m
error: failed to find the caches directory -> %@
the currentlyReadingIssue argument is of an unexpected class (%@) - expected NKIssue
the currentlyReadingIssue argument must be a part of the library
the name argument cannot be nil
the name argument is of an unexpected class (%@) - expected NSString
the name argument cannot be an empty string
the date argument cannot be nil
the date argument is of an unexpected class (%@) - expected NSDate
there is already an issue for this name -> '%@'
error: failed to create the newsstand issue directory: %@
error: failed to create the newsstand issue
the issue argument cannot be nil
the issue argument is of an unexpected class (%@) - expected NKIssue
error: failed to remove the issue contentURL -> %@
removeIssue: %@
UIBackgroundModes
newsstand-content
UINewsstandApp
background task expiring for '%@' - checking in though execution will continue
NewsstandKit: cleaning up abandoned asset downloads: %@
error: could not create newsstand library directory -> %@
issues
currentlyReadingIssue
error: could not archive newsstand library -> %@
error: could not write newsstand library -> %@
error: could not read newsstand library state -> %@
error: newsstand library state was badly defined - tossing -> %@
error: newsstand library state was in an unexpected format - tossing
error: newsstand library state was corrupted - tossing -> %@
error: could not find newsstand issue directories: %@
newsstand cache is not a folder - removing
error: cleaning up out of place file: '%@' -> %@
error: could not create newsstand cache: %@
error: could not get directory name of url: '%@' -> %@
error: could not clean up out of place file: '%@' -> %@
error: could not get isDirectory property of url: '%@' -> %@
newsstand issue does not have backing store - removing -> %@
error: non-issue class in library state 'issues' - ignoring
error: cleaning up out of place directory: '%@' -> %@
_load:cleanup -> %@
error: currently reading issue was purged!!! -> %@
error: cannot mark an issue as currently being read if it is not in the issues array
error: non-issue class in library state 'currently reading issue' - ignoring
q24@?0@8@16
 -> {
  currentlyReadingIssue = %@
  issues by date = %@
NKIssueDownloadCompletedNotification
NKIssue.m
%@-%s: invalid name -> '%@'
%@-%s: invalid date -> '%@'
%@-%s: invalid directory -> '%@'
name
date
directory
assets
foundContent
the name is expected to be an NSString -> '%@'
the date is expected to be an NSDate -> %@
the directory is expected to be an NSString -> '%@'
the assets are expected to be in an NSArray -> %@
an asset download in '%@' issue is of an unexpected class - removing -> %@
an asset download in '%@' issue failed decoding - removing -> %@
an asset download in '%@' issue has an inconsistent identifier - removing -> %@
an asset download in '%@' issue has a duplicate NSURLRequest as a previously decoded asset - removing -> %@
error: newsstand issue is malformed - %@
cannot addAsset to an issue that doesn't belong to a library
assetDownload request cannot be nil
the request argument is of an unexpected class (%@) - expected NSURLRequest
you do not have background download privileges: add 'newsstand-content' to mainBundle.infoDictionary.UIBackgroundModes
there is already an assetDownload for this request -> %@
<%@:%p name:%@ assets:%u> added %@
<%@:%p name:%@ assets:%u resolved:%u> %@ %@
resolved
could not resolve
cleaned up
could not clean up
<%@:%p name:%@> posted %@
 -> {name: '%@', date: '%@', contentURL: '%@'} -> assetDownloads: %@
%@%@%@
identifier
userInfoData
request
the identifier is expected to be an NSString -> '%@'
the userInfo is expected to be an NSData -> %@
the request is expected to be an NSURLRequest -> '%@'
error: newsstand asset download is malformed - %@
error: could not de-serialize the userInfo property list -> %@
the userInfo argument is of an unexpected class (%@) - expected NSDictionary
the userInfo argument can only contain plist-able types
error: could not serialize the userInfo property list -> %@
%@: received _issueWasRemovedFromLibrary
%@: received _cancel
%@: received pre-completed notification - %@
marking as resolved
not marking as resolved due to connection mismatch (might have been cancelled?)
%@: received post-completed notification - %@
cleaning up
not cleaning up due to connection mismatch (might have been cancelled?)
the delegate cannot be nil
newsstand
%@: created connection %@
 -> {identifier: '%@'  request: %@  downloading: %@}
[NKLogging] 
NKLibrary
NKIssue
NSSecureCoding
NSCoding
NKAssetDownload
NKAssetDownloadAdditions
URLByAppendingPathComponent:isDirectory:
writeToURL:options:error:
unarchivedObjectOfClasses:fromData:error:
substringToIndex:
stringWithString:
stringWithFormat:
stringByAppendingString:
stringByAppendingFormat:
start
sortedArrayUsingComparator:
sharedApplication
setWithObjects:
setWithCapacity:
setWithArray:
setTarget:
setSelector:
setObject:forKey:
scheduleInRunLoop:forMode:
retainArguments
removeObjectForKey:
removeObject:
removeItemAtURL:error:
removeAllObjects
rangeOfString:
raise:format:
propertyListWithData:options:format:error:
propertyList:isValidForFormat:
postNotificationName:object:userInfo:
path
originalRequest
objectForKey:
objectAtIndex:
numberWithBool:
methodSignatureForSelector:
mapTableWithStrongToStrongObjects
mainRunLoop
mainBundle
length
lastPathComponent
isEqualToString:
invocationWithMethodSignature:
initWithCapacity:
infoDictionary
handleFailureInMethod:object:file:lineNumber:description:
getResourceValue:forKey:error:
fileExistsAtPath:isDirectory:
fileExistsAtPath:
endBackgroundTask:
encodeObject:forKey:
encodeBool:forKey:
dictionaryWithCapacity:
defaultCenter
decodeObjectOfClasses:forKey:
decodeObjectOfClass:forKey:
decodeBoolForKey:
dataWithPropertyList:format:options:error:
dataWithContentsOfURL:options:error:
currentHandler
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
countByEnumeratingWithState:objects:count:
count
copy
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
containsObject:
connectionProperties
compare:
cancel
boolValue
beginBackgroundTaskWithExpirationHandler:
arrayWithObjects:
arrayWithCapacity:
array
archivedDataWithRootObject:requiringSecureCoding:error:
appendString:
appendFormat:
allObjects
addObserver:selector:name:object:
addObjectsFromArray:
addObject:
_initWithRequest:delegate:usesCache:maxContentLength:startImmediately:connectionProperties:
_hasApplicationCalledLaunchDelegate
UTF8String
URLForDirectory:inDomain:appropriateForURL:create:error:
allocWithZone:
init
_applicationDidEnterBackground:
_applicationWillTerminate:
_didFinishLaunchingWasCalled
description
sharedLibrary
_isNewsstandApp
copyWithZone:
retain
retainCount
release
autorelease
downloadingAssets
currentlyReadingIssue
setCurrentlyReadingIssue:
issueWithName:
addIssueWithName:date:
removeIssue:
_contentURL
_issueForDirectory:
_fileManager
_canPerformBackgroundDownloads
_issueChanged:
_performBackgroundTask:withDescription:
_appSupportURL
_libraryURL
_markIssuesAndSave
_markAsDirtyAndSave
__actuallySave
_saveIfNeededAfterDelay:
_saveIfNeeded
_saveNowIfNeeded
_load
issues
_setIssues:
_issues
_currentlyReadingIssue
_issuesByName
_issuesByDirectory
_inited
_needsSaving
_savePending
_assetsFromLaunch
T@"NSArray",R
T@"NKIssue",&
dealloc
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
_commonInit
_initWithName:date:directory:
contentURL
status
addAssetWithRequest:
_library
_setLibrary:
_directory
_assetsForRequest:
_isDecodingValid
_markAssetAsResolved:
_cleanupAsset:
_assetChanged:
name
setName:
date
setDate:
directory
setDirectory:
_name
_date
_assets
_assetsByRequest
_resolvedAssets
_foundContent
T@"NSString",C,V_name
T@"NSDate",C,V_date
T@"NSString",C,V_directory
T@"NKLibrary",N,S_setLibrary:
T@"NSArray",R,C
T@"NSURL",R,C
Tq,R
_connectionBackgroundDownloadPreCompleted:
_connectionBackgroundDownloadPostCompleted:
_initWithURLRequest:issue:
issue
setIssue:
userInfo
setUserInfo:
_issueWasRemovedFromLibrary
_setIssue:
_connection
_attemptedConnection
_cancel
downloadWithDelegate:
identifier
setIdentifier:
URLRequest
setURLRequest:
userInfoData
setUserInfoData:
connection
setConnection:
attemptedConnection
setAttemptedConnection:
_issue
_identifier
_userInfoData
_request
T@"NSString",C,V_identifier
T@"NSURLRequest",C,V_request
T@"NSData",&,V_userInfoData
T@"NSURLConnection",&,V_connection
TB,V_attemptedConnection
T@"NKIssue",R,W,V_issue
T@"NSDictionary",C
_issueDirectory
newsstandAssetDownload
T@"NKAssetDownload",R,W
@16@0:8
@24@0:8^{_NSZone=}16
B16@0:8
Q16@0:8
Vv16@0:8
v24@0:8@16
@24@0:8@16
@32@0:8@16@24
v32@0:8@?16@24
v16@0:8
v24@0:8d16
@"NSArray"
@"NKIssue"
@"NSMapTable"
@"NSURL"
@"NSFileManager"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@40@0:8@16@24@32
q16@0:8
@"NKLibrary"
@"NSString"
@"NSDate"
@"NSMutableArray"
@"NSMutableSet"
v20@0:8B16
@"NSData"
@"NSURLRequest"
@"NSURLConnection"
