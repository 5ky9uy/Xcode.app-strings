v8@?0
error: failed to find the app support directory -> %@
com.apple.newsstand-library.plist
Newsstand
NKLibrary.m
error: failed to find the caches directory -> %@
the currentlyReadingIssue argument is of an unexpected class (%@) - expected NKIssue
the currentlyReadingIssue argument must be a part of the library
the name argument cannot be nil
the name argument is of an unexpected class (%@) - expected NSString
the name argument cannot be an empty string
the date argument cannot be nil
the date argument is of an unexpected class (%@) - expected NSDate
there is already an issue for this name -> '%@'
error: failed to create the newsstand issue directory: %@
error: failed to create the newsstand issue
the issue argument cannot be nil
the issue argument is of an unexpected class (%@) - expected NKIssue
error: failed to remove the issue contentURL -> %@
removeIssue: %@
UIBackgroundModes
newsstand-content
UINewsstandApp
background task expiring for '%@' - checking in though execution will continue
NewsstandKit: cleaning up abandoned asset downloads: %@
error: could not create newsstand library directory -> %@
issues
currentlyReadingIssue
error: could not archive newsstand library -> %@
error: could not write newsstand library -> %@
error: could not read newsstand library state -> %@
error: newsstand library state was badly defined - tossing -> %@
error: newsstand library state was in an unexpected format - tossing
error: newsstand library state was corrupted - tossing -> %@
error: could not find newsstand issue directories: %@
newsstand cache is not a folder - removing
error: cleaning up out of place file: '%@' -> %@
error: could not create newsstand cache: %@
error: could not get directory name of url: '%@' -> %@
error: could not clean up out of place file: '%@' -> %@
error: could not get isDirectory property of url: '%@' -> %@
newsstand issue does not have backing store - removing -> %@
error: non-issue class in library state 'issues' - ignoring
error: cleaning up out of place directory: '%@' -> %@
_load:cleanup -> %@
error: currently reading issue was purged!!! -> %@
error: cannot mark an issue as currently being read if it is not in the issues array
error: non-issue class in library state 'currently reading issue' - ignoring
q24@?0@8@16
 -> {
  currentlyReadingIssue = %@
  issues by date = %@
NKIssueDownloadCompletedNotification
NKIssue.m
%@-%s: invalid name -> '%@'
%@-%s: invalid date -> '%@'
%@-%s: invalid directory -> '%@'
name
date
directory
assets
foundContent
the name is expected to be an NSString -> '%@'
the date is expected to be an NSDate -> %@
the directory is expected to be an NSString -> '%@'
the assets are expected to be in an NSArray -> %@
an asset download in '%@' issue is of an unexpected class - removing -> %@
an asset download in '%@' issue failed decoding - removing -> %@
an asset download in '%@' issue has an inconsistent identifier - removing -> %@
an asset download in '%@' issue has a duplicate NSURLRequest as a previously decoded asset - removing -> %@
error: newsstand issue is malformed - %@
cannot addAsset to an issue that doesn't belong to a library
assetDownload request cannot be nil
the request argument is of an unexpected class (%@) - expected NSURLRequest
you do not have background download privileges: add 'newsstand-content' to mainBundle.infoDictionary.UIBackgroundModes
there is already an assetDownload for this request -> %@
<%@:%p name:%@ assets:%u> added %@
<%@:%p name:%@ assets:%u resolved:%u> %@ %@
resolved
could not resolve
cleaned up
could not clean up
<%@:%p name:%@> posted %@
 -> {name: '%@', date: '%@', contentURL: '%@'} -> assetDownloads: %@
%@%@%@
identifier
userInfoData
request
the identifier is expected to be an NSString -> '%@'
the userInfo is expected to be an NSData -> %@
the request is expected to be an NSURLRequest -> '%@'
error: newsstand asset download is malformed - %@
error: could not de-serialize the userInfo property list -> %@
the userInfo argument is of an unexpected class (%@) - expected NSDictionary
the userInfo argument can only contain plist-able types
error: could not serialize the userInfo property list -> %@
%@: received _issueWasRemovedFromLibrary
%@: received _cancel
%@: received pre-completed notification - %@
marking as resolved
not marking as resolved due to connection mismatch (might have been cancelled?)
%@: received post-completed notification - %@
cleaning up
not cleaning up due to connection mismatch (might have been cancelled?)
the delegate cannot be nil
newsstand
%@: created connection %@
 -> {identifier: '%@'  request: %@  downloading: %@}
[NKLogging] 
NKLibrary
NKIssue
NSSecureCoding
NSCoding
NKAssetDownload
NKAssetDownloadAdditions
T@"NSArray",R,C
T@"NKIssue",&
_assets
T@"NKLibrary",N,S_setLibrary:
_inited
T@"NSData",&,V_userInfoData
_issueDirectory
T@"NSDictionary",C
_resolvedAssets
T@"NSString",C,V_identifier
dealloc
T@"NSURL",R,C
originalRequest
T@"NSURLRequest",C,V_request
retainArguments
TB,V_attemptedConnection
setWithObjects:
T@"NKAssetDownload",R,W
_applicationDidEnterBackground:
T@"NKIssue",R,W,V_issue
_cancel
T@"NSArray",R
_isNewsstandApp
T@"NSDate",C,V_date
_issues
T@"NSString",C,V_directory
containsObject:
T@"NSString",C,V_name
numberWithBool:
T@"NSURLConnection",&,V_connection
release
TB,R
Tq,R
URLByAppendingPathComponent:isDirectory:
URLForDirectory:inDomain:appropriateForURL:create:error:
URLRequest
UTF8String
__actuallySave
_appSupportURL
_applicationWillTerminate:
_assetChanged:
_assetsByRequest
_assetsForRequest:
_assetsFromLaunch
_attemptedConnection
_canPerformBackgroundDownloads
_cleanupAsset:
_commonInit
_connection
_connectionBackgroundDownloadPostCompleted:
_connectionBackgroundDownloadPreCompleted:
_contentURL
_currentlyReadingIssue
_date
_didFinishLaunchingWasCalled
_directory
_fileManager
_foundContent
_hasApplicationCalledLaunchDelegate
_identifier
_initWithName:date:directory:
_initWithRequest:delegate:usesCache:maxContentLength:startImmediately:connectionProperties:
_initWithURLRequest:issue:
_isDecodingValid
_issue
_issueChanged:
_issueForDirectory:
_issueWasRemovedFromLibrary
_issuesByDirectory
_issuesByName
_library
_libraryURL
_load
_markAsDirtyAndSave
_markAssetAsResolved:
_markIssuesAndSave
_name
_needsSaving
_performBackgroundTask:withDescription:
_request
_saveIfNeeded
_saveIfNeededAfterDelay:
_saveNowIfNeeded
_savePending
_setIssue:
_setIssues:
_setLibrary:
_userInfoData
addAssetWithRequest:
addIssueWithName:date:
addObject:
addObjectsFromArray:
addObserver:selector:name:object:
allObjects
allocWithZone:
appendFormat:
appendString:
archivedDataWithRootObject:requiringSecureCoding:error:
array
arrayWithCapacity:
arrayWithObjects:
attemptedConnection
autorelease
beginBackgroundTaskWithExpirationHandler:
boolValue
cancel
compare:
connection
connectionProperties
contentURL
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
copy
copyWithZone:
count
countByEnumeratingWithState:objects:count:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
currentHandler
currentlyReadingIssue
dataWithContentsOfURL:options:error:
dataWithPropertyList:format:options:error:
date
decodeBoolForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
defaultCenter
description
dictionaryWithCapacity:
directory
downloadWithDelegate:
downloadingAssets
encodeBool:forKey:
encodeObject:forKey:
encodeWithCoder:
endBackgroundTask:
fileExistsAtPath:
fileExistsAtPath:isDirectory:
getResourceValue:forKey:error:
handleFailureInMethod:object:file:lineNumber:description:
identifier
infoDictionary
init
initWithCapacity:
initWithCoder:
invocationWithMethodSignature:
isEqualToString:
issue
issueWithName:
issues
lastPathComponent
length
mainBundle
mainRunLoop
mapTableWithStrongToStrongObjects
methodSignatureForSelector:
name
newsstandAssetDownload
objectAtIndex:
objectForKey:
path
postNotificationName:object:userInfo:
propertyList:isValidForFormat:
propertyListWithData:options:format:error:
raise:format:
rangeOfString:
removeAllObjects
removeIssue:
removeItemAtURL:error:
removeObject:
removeObjectForKey:
retain
retainCount
scheduleInRunLoop:forMode:
setAttemptedConnection:
setConnection:
setCurrentlyReadingIssue:
setDate:
setDirectory:
setIdentifier:
setIssue:
setName:
setObject:forKey:
setSelector:
setTarget:
setURLRequest:
setUserInfo:
setUserInfoData:
setWithArray:
setWithCapacity:
sharedApplication
sharedLibrary
sortedArrayUsingComparator:
start
status
stringByAppendingFormat:
stringByAppendingString:
stringWithFormat:
stringWithString:
substringToIndex:
supportsSecureCoding
unarchivedObjectOfClasses:fromData:error:
userInfo
userInfoData
writeToURL:options:error:
@16@0:8
@24@0:8^{_NSZone=}16
B16@0:8
Q16@0:8
Vv16@0:8
v24@0:8@16
@24@0:8@16
@32@0:8@16@24
v32@0:8@?16@24
v16@0:8
v24@0:8d16
@"NSArray"
@"NKIssue"
@"NSMapTable"
@"NSURL"
@"NSFileManager"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@40@0:8@16@24@32
q16@0:8
@"NKLibrary"
@"NSString"
@"NSDate"
@"NSMutableArray"
@"NSMutableSet"
v20@0:8B16
@"NSData"
@"NSURLRequest"
@"NSURLConnection"
v8@?0
error: failed to find the app support directory -> %@
com.apple.newsstand-library.plist
Newsstand
NKLibrary.m
error: failed to find the caches directory -> %@
the currentlyReadingIssue argument is of an unexpected class (%@) - expected NKIssue
the currentlyReadingIssue argument must be a part of the library
the name argument cannot be nil
the name argument is of an unexpected class (%@) - expected NSString
the name argument cannot be an empty string
the date argument cannot be nil
the date argument is of an unexpected class (%@) - expected NSDate
there is already an issue for this name -> '%@'
error: failed to create the newsstand issue directory: %@
error: failed to create the newsstand issue
the issue argument cannot be nil
the issue argument is of an unexpected class (%@) - expected NKIssue
error: failed to remove the issue contentURL -> %@
removeIssue: %@
UIBackgroundModes
newsstand-content
UINewsstandApp
background task expiring for '%@' - checking in though execution will continue
NewsstandKit: cleaning up abandoned asset downloads: %@
error: could not create newsstand library directory -> %@
issues
currentlyReadingIssue
error: could not archive newsstand library -> %@
error: could not write newsstand library -> %@
error: could not read newsstand library state -> %@
error: newsstand library state was badly defined - tossing -> %@
error: newsstand library state was in an unexpected format - tossing
error: newsstand library state was corrupted - tossing -> %@
error: could not find newsstand issue directories: %@
newsstand cache is not a folder - removing
error: cleaning up out of place file: '%@' -> %@
error: could not create newsstand cache: %@
error: could not get directory name of url: '%@' -> %@
error: could not clean up out of place file: '%@' -> %@
error: could not get isDirectory property of url: '%@' -> %@
newsstand issue does not have backing store - removing -> %@
error: non-issue class in library state 'issues' - ignoring
error: cleaning up out of place directory: '%@' -> %@
_load:cleanup -> %@
error: currently reading issue was purged!!! -> %@
error: cannot mark an issue as currently being read if it is not in the issues array
error: non-issue class in library state 'currently reading issue' - ignoring
q24@?0@8@16
 -> {
  currentlyReadingIssue = %@
  issues by date = %@
NKIssueDownloadCompletedNotification
NKIssue.m
%@-%s: invalid name -> '%@'
%@-%s: invalid date -> '%@'
%@-%s: invalid directory -> '%@'
name
date
directory
assets
foundContent
the name is expected to be an NSString -> '%@'
the date is expected to be an NSDate -> %@
the directory is expected to be an NSString -> '%@'
the assets are expected to be in an NSArray -> %@
an asset download in '%@' issue is of an unexpected class - removing -> %@
an asset download in '%@' issue failed decoding - removing -> %@
an asset download in '%@' issue has an inconsistent identifier - removing -> %@
an asset download in '%@' issue has a duplicate NSURLRequest as a previously decoded asset - removing -> %@
error: newsstand issue is malformed - %@
cannot addAsset to an issue that doesn't belong to a library
assetDownload request cannot be nil
the request argument is of an unexpected class (%@) - expected NSURLRequest
you do not have background download privileges: add 'newsstand-content' to mainBundle.infoDictionary.UIBackgroundModes
there is already an assetDownload for this request -> %@
<%@:%p name:%@ assets:%u> added %@
<%@:%p name:%@ assets:%u resolved:%u> %@ %@
resolved
could not resolve
cleaned up
could not clean up
<%@:%p name:%@> posted %@
 -> {name: '%@', date: '%@', contentURL: '%@'} -> assetDownloads: %@
%@%@%@
identifier
userInfoData
request
the identifier is expected to be an NSString -> '%@'
the userInfo is expected to be an NSData -> %@
the request is expected to be an NSURLRequest -> '%@'
error: newsstand asset download is malformed - %@
error: could not de-serialize the userInfo property list -> %@
the userInfo argument is of an unexpected class (%@) - expected NSDictionary
the userInfo argument can only contain plist-able types
error: could not serialize the userInfo property list -> %@
%@: received _issueWasRemovedFromLibrary
%@: received _cancel
%@: received pre-completed notification - %@
marking as resolved
not marking as resolved due to connection mismatch (might have been cancelled?)
%@: received post-completed notification - %@
cleaning up
not cleaning up due to connection mismatch (might have been cancelled?)
the delegate cannot be nil
newsstand
%@: created connection %@
 -> {identifier: '%@'  request: %@  downloading: %@}
[NKLogging] 
NKLibrary
NKIssue
NSSecureCoding
NSCoding
NKAssetDownload
NKAssetDownloadAdditions
T@"NSArray",R,C
T@"NKIssue",&
_assets
T@"NKLibrary",N,S_setLibrary:
_inited
T@"NSData",&,V_userInfoData
_issueDirectory
T@"NSDictionary",C
_resolvedAssets
T@"NSString",C,V_identifier
dealloc
T@"NSURL",R,C
originalRequest
T@"NSURLRequest",C,V_request
retainArguments
TB,V_attemptedConnection
setWithObjects:
T@"NKAssetDownload",R,W
_applicationDidEnterBackground:
T@"NKIssue",R,W,V_issue
_cancel
T@"NSArray",R
_isNewsstandApp
T@"NSDate",C,V_date
_issues
T@"NSString",C,V_directory
containsObject:
T@"NSString",C,V_name
numberWithBool:
T@"NSURLConnection",&,V_connection
release
TB,R
Tq,R
URLByAppendingPathComponent:isDirectory:
URLForDirectory:inDomain:appropriateForURL:create:error:
URLRequest
UTF8String
__actuallySave
_appSupportURL
_applicationWillTerminate:
_assetChanged:
_assetsByRequest
_assetsForRequest:
_assetsFromLaunch
_attemptedConnection
_canPerformBackgroundDownloads
_cleanupAsset:
_commonInit
_connection
_connectionBackgroundDownloadPostCompleted:
_connectionBackgroundDownloadPreCompleted:
_contentURL
_currentlyReadingIssue
_date
_didFinishLaunchingWasCalled
_directory
_fileManager
_foundContent
_hasApplicationCalledLaunchDelegate
_identifier
_initWithName:date:directory:
_initWithRequest:delegate:usesCache:maxContentLength:startImmediately:connectionProperties:
_initWithURLRequest:issue:
_isDecodingValid
_issue
_issueChanged:
_issueForDirectory:
_issueWasRemovedFromLibrary
_issuesByDirectory
_issuesByName
_library
_libraryURL
_load
_markAsDirtyAndSave
_markAssetAsResolved:
_markIssuesAndSave
_name
_needsSaving
_performBackgroundTask:withDescription:
_request
_saveIfNeeded
_saveIfNeededAfterDelay:
_saveNowIfNeeded
_savePending
_setIssue:
_setIssues:
_setLibrary:
_userInfoData
addAssetWithRequest:
addIssueWithName:date:
addObject:
addObjectsFromArray:
addObserver:selector:name:object:
allObjects
allocWithZone:
appendFormat:
appendString:
archivedDataWithRootObject:requiringSecureCoding:error:
array
arrayWithCapacity:
arrayWithObjects:
attemptedConnection
autorelease
beginBackgroundTaskWithExpirationHandler:
boolValue
cancel
compare:
connection
connectionProperties
contentURL
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
copy
copyWithZone:
count
countByEnumeratingWithState:objects:count:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
currentHandler
currentlyReadingIssue
dataWithContentsOfURL:options:error:
dataWithPropertyList:format:options:error:
date
decodeBoolForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
defaultCenter
description
dictionaryWithCapacity:
directory
downloadWithDelegate:
downloadingAssets
encodeBool:forKey:
encodeObject:forKey:
encodeWithCoder:
endBackgroundTask:
fileExistsAtPath:
fileExistsAtPath:isDirectory:
getResourceValue:forKey:error:
handleFailureInMethod:object:file:lineNumber:description:
identifier
infoDictionary
init
initWithCapacity:
initWithCoder:
invocationWithMethodSignature:
isEqualToString:
issue
issueWithName:
issues
lastPathComponent
length
mainBundle
mainRunLoop
mapTableWithStrongToStrongObjects
methodSignatureForSelector:
name
newsstandAssetDownload
objectAtIndex:
objectForKey:
path
postNotificationName:object:userInfo:
propertyList:isValidForFormat:
propertyListWithData:options:format:error:
raise:format:
rangeOfString:
removeAllObjects
removeIssue:
removeItemAtURL:error:
removeObject:
removeObjectForKey:
retain
retainCount
scheduleInRunLoop:forMode:
setAttemptedConnection:
setConnection:
setCurrentlyReadingIssue:
setDate:
setDirectory:
setIdentifier:
setIssue:
setName:
setObject:forKey:
setSelector:
setTarget:
setURLRequest:
setUserInfo:
setUserInfoData:
setWithArray:
setWithCapacity:
sharedApplication
sharedLibrary
sortedArrayUsingComparator:
start
status
stringByAppendingFormat:
stringByAppendingString:
stringWithFormat:
stringWithString:
substringToIndex:
supportsSecureCoding
unarchivedObjectOfClasses:fromData:error:
userInfo
userInfoData
writeToURL:options:error:
@16@0:8
@24@0:8^{_NSZone=}16
B16@0:8
Q16@0:8
Vv16@0:8
v24@0:8@16
@24@0:8@16
@32@0:8@16@24
v32@0:8@?16@24
v16@0:8
v24@0:8d16
@"NSArray"
@"NKIssue"
@"NSMapTable"
@"NSURL"
@"NSFileManager"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@40@0:8@16@24@32
q16@0:8
@"NKLibrary"
@"NSString"
@"NSDate"
@"NSMutableArray"
@"NSMutableSet"
v20@0:8B16
@"NSData"
@"NSURLRequest"
@"NSURLConnection"
