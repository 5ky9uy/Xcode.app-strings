@(#)PROGRAM:XCTTargetBootstrap  PROJECT:XCTest-21766
com.apple.dt.xctest.error
v8@?0
com.apple.dt.testmanagerd.availability.%d
com.apple.dt.testmanagerd.uiprocess
com.apple.dt.xctestd.availability.%d
com.apple.dt.xctestd.target
com.apple.dt.xctest.remote.availability.%d
com.apple.dt.xctestd.remote.target
v12@?0i8
com.apple.dt.xctest
Default
XCTTargetSession.m
Invalid parameter not satisfying: %@
daemonConnection != nil
com.apple.dt.xctest.targetsession
v16@?0@"NSError"8
No bundle at path %@
Bundle does not specify a principal class.
Bundle principal class '%@' does not conform to the XCTConnectionAccepting protocol.
Connection handler must be loaded from the automation support library before listening for connections.
v12@?0B8
Connection handler object must be loaded before any incoming connections.
/Developer/Library/PrivateFrameworks/XCTAutomationSupport.framework
SIMULATOR_ROOT
Registering for test daemon availability notify post.
Got availability notification from test daemon.
Unable to register for test daemon availability notification.
Unable to register token for checking test daemon availability.
Unable to query test daemon availability.
Test daemon availability confirmed via notify_get_state.
notify_get_state check indicated test daemon not ready.
Connection to test daemon interrupted.
Connection to test daemon invalidated.
Error from xctestd proxy: %@
Using default automation support library path
Attempting to load %@.
Not setting internal entitlement checker, connection handler does not support it.
Setting up target listener.
Received request for endpoint.
Sending anonymous endpoint.
Error loading automation support library: %@
Sending sync request to check entitlement for token %u %u %u %u %u %u %u %u
Got response to entitlement check
Returning %d for has internal entitlement.
Received client to target connection.
XCTErrors
XCTDaemonConnectionProvider
NSObject
XCTMessagingChannel_UIProcessToDaemon
XCTMessagingRole_UIProcessRegistration
_XCTMessaging_VoidProtocol
XCTMessagingChannel_DaemonToUIProcess
XCTMessagingRole_AutomationSessionRequesting
XCTTargetSession
NSXPCListenerDelegate
XCTInternalEntitlementChecking
_clientListener
T#,R
connect
T@"NSObject<OS_dispatch_queue>",&,V_queue
isProxy
T@"NSXPCConnection",&,V_daemonConnection
stringByAppendingPathComponent:
.cxx_destruct
bundleWithPath:
T@"<XCTConnectionAccepting>",&,V_connectionHandler
isInternallyEntitledConnection:
T@"NSString",R,C
release
T@"NSXPCListener",&,V_clientListener
T@?,R,V_registrationHandler
TB,V_targetIsRegistering
TQ,R
UTF8String
_XCT_checkInternalEntitlementForAuditToken:completion:
_XCT_registerTarget
_XCT_requestEndpointWithAutomationSupportLibraryPath:protocolVersion:reply:
__dummy_method_to_work_around_68987191
_connectionHandler
_daemonConnection
_on_queue_connect
_on_queue_getListenerEndpoint
_on_queue_loadAutomationSupportLibraryFromPath:error:
_on_queue_startListeningForClientConnections
_queue
_registrationHandler
_targetIsRegistering
_xct_error:description:
_xct_error:description:userInfo:
acceptNewConnection:
anonymousListener
auditToken
autorelease
class
clientListener
conformsToProtocol:
connectionHandler
currentHandler
daemonConnection
debugDescription
description
dictionaryWithObjects:forKeys:count:
endpoint
environment
errorWithDomain:code:userInfo:
exportedObject
handleFailureInMethod:object:file:lineNumber:description:
hash
init
initWithDaemonConnection:registrationHandler:
initWithFormat:arguments:
initWithMachServiceName:options:
initWithServiceName:registrationHandler:
instancesRespondToSelector:
interfaceWithProtocol:
isEqual:
isKindOfClass:
isMemberOfClass:
listener:shouldAcceptNewConnection:
loadAndReturnError:
makeNewDaemonConnectionWithServiceName:
mutableCopy
objectForKeyedSubscript:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
principalClass
processInfo
queue
registerForBootstrap
registrationHandler
remoteObjectProxyWithErrorHandler:
respondsToSelector:
resume
retain
retainCount
self
setClientListener:
setConnectionHandler:
setDaemonConnection:
setDelegate:
setExportedInterface:
setExportedObject:
setInternalEntitlementChecker:
setInterruptionHandler:
setInvalidationHandler:
setObject:forKeyedSubscript:
setQueue:
setRemoteObjectInterface:
setTargetIsRegistering:
stringWithFormat:
stringWithUTF8String:
superclass
synchronousRemoteObjectProxyWithErrorHandler:
targetIsRegistering
zone
@32@0:8q16@24
@40@0:8q16@24@32
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8@16
@"NSXPCConnection"24@0:8@"NSString"16
v16@0:8
v56@0:8{?=[8I]}16@?48
v56@0:8{?=[8I]}16@?<v@?B>48
v40@0:8@16Q24@?32
v40@0:8@"NSString"16Q24@?<v@?@"NSXPCListenerEndpoint"@"NSError">32
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
B24@0:8@"NSXPCConnection"16
@32@0:8@16@?24
B32@0:8@16^@24
v24@0:8@16
@?16@0:8
v20@0:8B16
@"NSObject<OS_dispatch_queue>"
@"NSXPCConnection"
@"NSXPCListener"
@"<XCTConnectionAccepting>"
@(#)PROGRAM:XCTTargetBootstrap  PROJECT:XCTest-21766
com.apple.dt.xctest.error
v8@?0
com.apple.dt.testmanagerd.availability.%d
com.apple.dt.testmanagerd.uiprocess
com.apple.dt.xctestd.availability.%d
com.apple.dt.xctestd.target
com.apple.dt.xctest.remote.availability.%d
com.apple.dt.xctestd.remote.target
v12@?0i8
com.apple.dt.xctest
Default
XCTTargetSession.m
Invalid parameter not satisfying: %@
daemonConnection != nil
com.apple.dt.xctest.targetsession
v16@?0@"NSError"8
No bundle at path %@
Bundle does not specify a principal class.
Bundle principal class '%@' does not conform to the XCTConnectionAccepting protocol.
Connection handler must be loaded from the automation support library before listening for connections.
v12@?0B8
Connection handler object must be loaded before any incoming connections.
/Developer/Library/PrivateFrameworks/XCTAutomationSupport.framework
SIMULATOR_ROOT
Registering for test daemon availability notify post.
Got availability notification from test daemon.
Unable to register for test daemon availability notification.
Unable to register token for checking test daemon availability.
Unable to query test daemon availability.
Test daemon availability confirmed via notify_get_state.
notify_get_state check indicated test daemon not ready.
Connection to test daemon interrupted.
Connection to test daemon invalidated.
Error from xctestd proxy: %@
Using default automation support library path
Attempting to load %@.
Not setting internal entitlement checker, connection handler does not support it.
Setting up target listener.
Received request for endpoint.
Sending anonymous endpoint.
Error loading automation support library: %@
Sending sync request to check entitlement for token %u %u %u %u %u %u %u %u
Got response to entitlement check
Returning %d for has internal entitlement.
Received client to target connection.
XCTErrors
XCTDaemonConnectionProvider
NSObject
XCTMessagingChannel_UIProcessToDaemon
XCTMessagingRole_UIProcessRegistration
_XCTMessaging_VoidProtocol
XCTMessagingChannel_DaemonToUIProcess
XCTMessagingRole_AutomationSessionRequesting
XCTTargetSession
NSXPCListenerDelegate
XCTInternalEntitlementChecking
_clientListener
T#,R
connect
T@"NSObject<OS_dispatch_queue>",&,V_queue
isProxy
T@"NSXPCConnection",&,V_daemonConnection
stringByAppendingPathComponent:
.cxx_destruct
bundleWithPath:
T@"<XCTConnectionAccepting>",&,V_connectionHandler
isInternallyEntitledConnection:
T@"NSString",R,C
release
T@"NSXPCListener",&,V_clientListener
T@?,R,V_registrationHandler
TB,V_targetIsRegistering
TQ,R
UTF8String
_XCT_checkInternalEntitlementForAuditToken:completion:
_XCT_registerTarget
_XCT_requestEndpointWithAutomationSupportLibraryPath:protocolVersion:reply:
__dummy_method_to_work_around_68987191
_connectionHandler
_daemonConnection
_on_queue_connect
_on_queue_getListenerEndpoint
_on_queue_loadAutomationSupportLibraryFromPath:error:
_on_queue_startListeningForClientConnections
_queue
_registrationHandler
_targetIsRegistering
_xct_error:description:
_xct_error:description:userInfo:
acceptNewConnection:
anonymousListener
auditToken
autorelease
class
clientListener
conformsToProtocol:
connectionHandler
currentHandler
daemonConnection
debugDescription
description
dictionaryWithObjects:forKeys:count:
endpoint
environment
errorWithDomain:code:userInfo:
exportedObject
handleFailureInMethod:object:file:lineNumber:description:
hash
init
initWithDaemonConnection:registrationHandler:
initWithFormat:arguments:
initWithMachServiceName:options:
initWithServiceName:registrationHandler:
instancesRespondToSelector:
interfaceWithProtocol:
isEqual:
isKindOfClass:
isMemberOfClass:
listener:shouldAcceptNewConnection:
loadAndReturnError:
makeNewDaemonConnectionWithServiceName:
mutableCopy
objectForKeyedSubscript:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
principalClass
processInfo
queue
registerForBootstrap
registrationHandler
remoteObjectProxyWithErrorHandler:
respondsToSelector:
resume
retain
retainCount
self
setClientListener:
setConnectionHandler:
setDaemonConnection:
setDelegate:
setExportedInterface:
setExportedObject:
setInternalEntitlementChecker:
setInterruptionHandler:
setInvalidationHandler:
setObject:forKeyedSubscript:
setQueue:
setRemoteObjectInterface:
setTargetIsRegistering:
stringWithFormat:
stringWithUTF8String:
superclass
synchronousRemoteObjectProxyWithErrorHandler:
targetIsRegistering
zone
@32@0:8q16@24
@40@0:8q16@24@32
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8@16
@"NSXPCConnection"24@0:8@"NSString"16
v16@0:8
v56@0:8{?=[8I]}16@?48
v56@0:8{?=[8I]}16@?<v@?B>48
v40@0:8@16Q24@?32
v40@0:8@"NSString"16Q24@?<v@?@"NSXPCListenerEndpoint"@"NSError">32
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
B24@0:8@"NSXPCConnection"16
@32@0:8@16@?24
B32@0:8@16^@24
v24@0:8@16
@?16@0:8
v20@0:8B16
@"NSObject<OS_dispatch_queue>"
@"NSXPCConnection"
@"NSXPCListener"
@"<XCTConnectionAccepting>"
